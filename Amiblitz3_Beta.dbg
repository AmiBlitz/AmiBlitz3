00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005084 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000509C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BC <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00005108 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511A <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005154 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00005202 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005210 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005246 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005264 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005270 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A4 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000052BE <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00005308 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005396 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00005416 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005434 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005448 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005460 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005488 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AE <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BC <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005532 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A0 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000055D2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005604 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A2 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A8 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000056FC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005746 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005762 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005768 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005836 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000584E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005880 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A6 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AC <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B4 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005904 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000591C <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005962 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A6 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1C <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A52 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A6E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A98 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB6 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B08 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B22 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B68 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B84 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B92 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA6 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BEA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C18 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C48 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C4E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C82 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D00 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D06 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D34 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D64 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAE <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DEE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1E <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E3A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E5C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F1E <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F44 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F4A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F68 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F86 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FA4 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FAA <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FFE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006026 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000604A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A0 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006148 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006158 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621A <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006242 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000062F8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006314 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000631E <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006332 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006352 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006390 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B8 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006442 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064BA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006516 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000651C <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006526 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000655A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006560 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065AC <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B6 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006602 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000660A <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006632 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006638 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000066AE <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670C <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006772 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067A0 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000067FE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006808 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006830 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006858 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006952 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006958 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006964 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000699A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A4 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000069DE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A48 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A58 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A96 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB0 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B04 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B08 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B22 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B60 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B94 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAE <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C02 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C2C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C36 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C44 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C66 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB6 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CEA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D42 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D60 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D94 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA8 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E12 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E28 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A94 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB0 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B04 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B74 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B90 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BAC <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C38 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C88 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA4 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D02 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0C <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D20 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D68 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D84 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E36 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E74 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1E <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F48 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB2 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB8 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FEE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00008024 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00008032 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00008054 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000809A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AE <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B8 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811A <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008128 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008182 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008196 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B4 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008210 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008232 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008262 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008290 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008312 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B2 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008400 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008426 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000845A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008464 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008480 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008492 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000084FC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850C <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008530 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008600 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008636 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008646 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008654 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008694 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008704 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008712 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000876C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008780 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008790 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000087BC <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008804 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008812 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008896 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AA <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008920 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008962 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008976 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008986 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B4 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A24 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A70 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A94 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B00 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B10 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B72 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAA <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBA <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0A <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C34 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C74 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAA <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D02 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D46 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D64 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB0 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E12 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E46 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E92 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F02 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F60 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F9E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAE <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00009006 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00009016 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009032 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009056 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000905E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BA <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009138 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009188 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009188 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009188 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009188 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AC <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000091D4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091F8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009226 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009444 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009472 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000949E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000094DA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
00009506 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009532 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000955E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000958A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
000095B6 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095E2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
0000960E <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000963A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000096C4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000974E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000097EC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009836 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009876 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000987C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000098C6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
00009906 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009930 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009936 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009960 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000998A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
000099B4 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099DC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099FE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A2C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A5A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A88 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009ACE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
00009B14 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B5A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B92 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009C90 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009CAE <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009CDE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CF0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009D1E <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D46 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D58 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009DAE <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DE4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DF4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009DFA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E50 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E56 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009EAE <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009ECC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F12 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F22 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009F40 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F56 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009F7E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F9A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FD4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A008 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A020 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A072 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
0000A0A0 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A132 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A178 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A20A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A224 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A224 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A250 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A0 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AC <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A324 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A348 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A386 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AC <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A408 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A422 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A43E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A484 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BA <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A536 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A554 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A578 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A57E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5F8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A614 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61A <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A620 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A648 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A702 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A798 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A79E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B4 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BC <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A818 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A826 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A85E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A86E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8F8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A932 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9A8 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA72 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA84 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB10 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB72 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAA <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABFE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC16 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC94 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD02 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD08 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD16 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD3E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD52 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD8E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB6 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE18 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE50 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF02 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF32 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01A <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0CE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B102 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B108 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B116 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B172 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AA <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2FE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B304 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30A <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3EE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A6 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B526 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B616 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B674 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B680 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B750 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B764 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B798 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B878 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8F8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B952 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B958 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA28 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB74 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBC8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBCE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA4 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAA <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD84 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAC <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE80 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB6 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEEE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF14 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF36 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF62 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF7E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF90 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFEE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C026 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C074 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C08E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A2 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0A8 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BA <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A6 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AC <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1FE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C264 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AA <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C360 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A0 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C402 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C440 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C482 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C506 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50C <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C548 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C586 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60A <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C610 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C616 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C646 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C652 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C664 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C700 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C748 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C762 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C770 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C776 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C78E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C794 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7F8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C840 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C870 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8B8 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C906 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C932 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9B8 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA18 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA48 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA64 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA72 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA78 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB2 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAF8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB06 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB24 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB6 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA0 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCBE <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD00 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD64 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD7E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA0 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE92 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF34 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF74 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF84 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF9E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B0 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B6 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BC <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0F8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D112 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11A <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D122 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D138 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D150 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D162 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D16E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D174 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B4 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D208 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D20E <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D21E <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D24E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A0 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D310 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D324 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D370 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D394 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B6 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3CE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D428 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D454 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BC <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4FE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D506 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D530 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D554 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D56E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AC <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D610 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D622 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D658 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D672 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A0 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6C8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6D8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D702 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D712 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D716 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D756 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D75E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D75E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D802 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D808 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D80E <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D848 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D888 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8B8 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC28 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC36 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DECE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEE8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF22 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF74 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF82 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFD8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFDE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E058 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E10E <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E128 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E144 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E176 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E186 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A4 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1DE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E202 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E210 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21C <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E274 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E298 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E348 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E376 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E376 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E390 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E3C2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E3E4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E400 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E42E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E44E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E458 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E480 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E48E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E49C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E4AA <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E73E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E7A2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E7D6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E7F0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E7F8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E800 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E810 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E872 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E884 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E8B2 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E8D6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E8FE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E932 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E94C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E9DC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000EA02 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000EA1A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000EA56 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000EA82 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000EAA8 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EB10 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EB36 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EB4E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EB5A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EB66 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EB72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EB7E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EB8A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EB94 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EB9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EBB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EBF4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000ECA0 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000ECF6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000ED68 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000ED74 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000EDC8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000EE12 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EE4A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000EE9E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EEC0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EEFA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EF20 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EF38 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EF84 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EFAA <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EFE2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000F008 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000F050 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000F070 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000F07C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000F0AE <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000F0C2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F0D8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F112 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F138 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F150 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F1B4 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F1CC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F1FC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F29E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F2DA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F346 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F3A2 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F404 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F44C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F46A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F488 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F4A2 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F4AE <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F4E0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F4F8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F544 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F570 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F598 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F62C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F63C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F668 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F854 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F8A4 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F8FA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F96E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F9A8 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F9E6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000FA20 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000FA4A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000FA86 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FADA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FAE2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FB4A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FC0E <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FC7A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FCA8 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FCBC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FCEE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FD38 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FD48 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FD7C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FD9E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FDAE <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FDB6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FDFA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FE66 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FE94 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FEFC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FF68 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FF96 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FFC4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FFCC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FFFA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0001006C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
000100A0 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010112 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010130 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010154 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001016C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010184 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
000101B0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010228 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001024E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
000102A0 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000102CA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000102E2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000102FA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010332 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001033A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010374 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010386 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
000103AC <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000103C2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000103E8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000103FC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010426 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010444 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001047C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
00010488 <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
000104A6 <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000104E2 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
000104FE <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
0001051E <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010528 <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
00010538 <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
00010544 <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
0001054A <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
00010578 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
000105A0 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000105E0 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000105F8 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
0001063E <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
00010668 <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
00010696 <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
000106B0 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
000106B8 <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000106D0 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000106DA <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000106E6 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001071E <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
0001072C <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010738 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010754 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010776 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
00010798 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000107BA <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000107DC <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
000107F8 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010816 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
0001082A <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
00010830 <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
00010832 <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010838 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
00010842 <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010848 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010866 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
0001086C <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
00010890 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
000108AE <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000108DC <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
0001090A <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010938 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010966 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
0001099A <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000109AA <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000109B4 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000109BA <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000109BA <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A04 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A24 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A2E <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A3C <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A82 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010AC8 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B0E <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B18 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B34 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B5E <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BDC <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C5A <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CD8 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D56 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DD4 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E52 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010ED0 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F4E <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FCC <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
0001104A <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110CE <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
000110FE <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001115A <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011186 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011250 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001125E <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
0001129C <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011320 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001134A <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011368 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011382 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001138C <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
00011398 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113A8 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113B8 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113C8 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113D8 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113DC <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001141A <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011472 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114CE <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011558 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115D6 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000115F0 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001161E <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001165A <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011728 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000117F6 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011842 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118C0 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001193E <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
0001199C <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A32 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A6A <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011AC8 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B50 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B58 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BC2 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C2E <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C6C <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011CF4 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D20 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D7C <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E44 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EA8 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EAE <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EE2 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FB0 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
0001207E <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120A8 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120C6 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
000120F4 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012130 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121A0 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121A8 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000121FA <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012222 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001223A <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000122EE <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000122FC <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012352 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123B0 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123B6 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001243A <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124BE <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012542 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125C0 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001263E <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126BC <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001273A <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127B8 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012836 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128B4 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128DE <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000128FC <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001292A <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001296E <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012974 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001298E <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129AA <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129DE <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A02 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A2A <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012A96 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012AF4 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B52 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012B9E <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012BF8 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012BFE <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C04 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C0E <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C18 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C32 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C60 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C66 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CAA <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CC4 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CD4 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CDE <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CEA <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012CF4 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D18 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D60 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DA8 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012DF0 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E1A <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E24 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E2E <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E48 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E72 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EB6 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012ED0 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F2E <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F48 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F60 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F6A <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F86 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012F94 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FA0 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FEC <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
0001303E <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
00013090 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130A4 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130B4 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130BA <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130BC <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130C2 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130CC <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130D6 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
000130F0 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001311A <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013130 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001313A <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131B2 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000131EE <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000131FE <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001321E <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001323E <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001325E <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013294 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132BC <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000132F4 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013358 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013378 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000133F4 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001342C <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134A2 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134C2 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001353E <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013576 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135EC <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001360C <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013688 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136B4 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136BC <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013702 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013722 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001372C <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013744 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013754 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001378C <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137BE <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137D0 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013852 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001385C <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001388E <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138C0 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138EC <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013918 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001393A <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013944 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001395E <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001395E <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013974 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
00013990 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
00013992 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139C0 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139C0 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139C0 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139DA <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139E4 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A06 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A1E <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A38 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A6A <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A74 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A7A <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A8C <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B00 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B06 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B40 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B4A <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B50 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B70 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B88 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B8A <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BB8 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BD2 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BE2 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C16 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C1A <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C34 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C44 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C78 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C7C <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CA6 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CDA <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013CDE <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013CF8 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D08 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D3C <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D40 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D5A <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013D9E <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DA2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DA2 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DA2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DB8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DCE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013DDC <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013DEA <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013DF4 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E06 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E18 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E1E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E58 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E5C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013E72 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013E94 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013EA0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EA8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EB0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EB4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013EDE <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F0A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F1C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F34 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F4A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F50 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013F86 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FBE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013FF6 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001402E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014066 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
0001409E <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
000140D6 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001410E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014146 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
0001417E <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141B6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
000141EE <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014226 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014230 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001423A <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014244 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001426E <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00014278 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
0001427C <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142B0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000142B6 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
000142F0 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
000142F6 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014316 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001431C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014332 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014338 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00014376 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
0001437A <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00014384 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
00014386 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143BA <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000143CA <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143D4 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143DA <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001442E <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
00014478 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
0001447E <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000144BC <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
000145F0 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014646 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014652 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001467E <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000146B0 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000146DE <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000146E2 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014708 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014718 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001471E <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014724 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001475E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014768 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014782 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000147A0 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000147A8 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000147AE <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000147B4 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000147D6 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
000147EE <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014814 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001483E <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014852 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014866 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0001487E <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
0001488C <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000148A0 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000148D6 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
000148E4 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014914 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014922 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014928 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014936 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001493C <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014942 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014950 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014952 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014958 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001496E <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014978 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001497E <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000149A8 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000149E6 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000149EA <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014A28 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014A2C <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014A6A <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014A6E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014A76 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014A7E <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014AC2 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
00014AD4 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014AE2 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014B16 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014B3A <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014B44 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014B5E <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014B72 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014BCA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014C6A <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014CAA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014CB0 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014CC0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014CE8 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014D10 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014D18 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014D1E <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014D26 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014D2E <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014D56 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014D5E <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014D66 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014D6C <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014D72 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014D78 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014D7E <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014D84 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014D8A <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014D90 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014D96 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014D9E <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014DA6 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014DCE <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014DD4 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014DDA <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014E02 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014E12 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014E22 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014E32 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014E42 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014E82 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014E92 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014EB2 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014EC2 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014ED2 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014EE2 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014EF2 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014F02 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014F14 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014F26 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014F38 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014F4A <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014F5C <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014F6E <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014F8C <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014F92 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014F98 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014FC2 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014FD4 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00015008 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00015020 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001506C <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0001507E <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
000150D4 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015146 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0001514C <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00015180 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000151A8 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001520A <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015222 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000152A6 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000152C0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001530E <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001531E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015326 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001533A <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00015380 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
00015386 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000153D0 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001543A <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000154A0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000154D4 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015500 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001554E <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00015572 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015578 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
00015586 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000155E4 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015642 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001566C <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015676 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001567E <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000156BC <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015708 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001571A <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00015770 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000157E8 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000157EE <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015822 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001584A <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
00015880 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001588E <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
0001589C <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015910 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015916 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015960 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000159AA <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000159DA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00015A0A <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015A34 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015A86 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00015ADC <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015B2C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015B92 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015BFE <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015C2A <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015C5A <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015D06 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015D36 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015D96 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015DC6 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015DF6 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015E26 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015E56 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015E86 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015EB6 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015F32 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015F64 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015F96 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015FC6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015FCC <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00016040 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000160AC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000160BE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
000160EC <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016114 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016128 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00016152 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
00016196 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000161A6 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000161B6 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000161BC <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000161CC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000161DA <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
000161E4 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001621C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016254 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0001628C <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
0001629C <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016304 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001633C <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001634C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001635C <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000163C4 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001642C <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00016494 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
000164FC <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016564 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000165CC <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016634 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001669C <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000166AC <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000166E4 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001671E <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016758 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
00016790 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000167AC <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
000167E4 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001680A <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00016812 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001681A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016822 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001682A <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001683E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001686C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00016886 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00016894 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00016900 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016926 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016942 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001694C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016956 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016962 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00016970 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
0001697C <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000169B8 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000169D2 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
000169E0 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016A00 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
00016A0E <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016A1C <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016A22 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016A32 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016A36 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016A6A <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
00016A9E <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016AA2 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
00016AD6 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00016ADA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016B0E <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016B14 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016B4A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016B80 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016BEE <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016C26 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016CC6 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016D06 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016D3C <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016D72 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016DAA <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016DC8 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016DCC <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016DD8 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016DDC <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016E06 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016E1A <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016E58 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016E8C <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016EC2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016F1A <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016F48 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016F4C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016F82 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016FB0 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016FDE <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016FE2 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00017018 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00017046 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
0001704A <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
000170AE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
000170B4 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
000170EE <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
000170F8 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00017102 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001711C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017146 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0001714C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0001716C <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00017176 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
0001717A <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
0001719C <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000171A2 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000171A8 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
000171D2 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
000171D4 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00017202 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017206 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017234 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017238 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001725E <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001726E <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00017274 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001727A <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000172B4 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000172BE <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000172D8 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
000172F6 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017320 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001734E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000173DE <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000173E8 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
000173FC <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017438 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00017474 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000174B0 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
000174EC <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017528 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001752E <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017568 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0001758A <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00017596 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000175B0 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000175B2 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
000175D0 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
000175D6 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00017602 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001760C <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017612 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00017624 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001765E <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
00017678 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001768C <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
000176F6 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
000176FC <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00017766 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001777A <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000177E4 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001781A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017820 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001788A <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001789E <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
000178D4 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000178DA <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017910 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017924 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001798E <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00017994 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
000179FE <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017A12 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00017A48 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00017A4E <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017A84 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00017A9E <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017AB2 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00017B1C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017B22 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017B8C <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017BA0 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017C0A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017C10 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017C7A <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017C8E <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017CF8 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017CFE <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017D68 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017D7C <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017DE6 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017DEC <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017E56 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017E68 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017E78 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017E82 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017EEC <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017EF2 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017F5C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017F66 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017FD0 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00018006 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0001800C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00018076 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000180AC <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
000180B4 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
000180E2 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
000180E6 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
0001810E <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00018114 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001811A <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00018120 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00018126 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001812C <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00018136 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00018140 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001816E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
0001819A <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
000181A2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00018208 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0001823C <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00018242 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
000182C2 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
000182D4 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001833A <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
000183A0 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000183A6 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000183AE <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
000183B0 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
000183CE <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
0001840C <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001844A <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00018450 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00018456 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
0001845C <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00018466 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001846C <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00018472 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00018478 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001847E <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00018482 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
0001848C <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00018490 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000184BA <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000184BC <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000184C2 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
000184C6 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000184CC <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
000184D0 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
000184E0 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001853A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001854C <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
000185B6 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000185BC <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00018606 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00018618 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00018644 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
000186EA <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00018708 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
0001870E <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018738 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018742 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
00018774 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001878E <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000187A2 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000187AE <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000187C8 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000187D2 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
000187EC <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00018816 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
0001883A <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00018878 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
0001887C <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
000188BA <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000188BE <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
000188FC <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
0001893A <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
0001893C <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00018970 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00018976 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
000189BA <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
000189CC <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
000189D4 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
000189DA <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000189E4 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
000189F2 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
000189F8 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018A20 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018A3A <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018A44 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018A4A <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018A68 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018A72 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018A78 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018A7E <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018A88 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018A96 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018A9C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018AAC <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018AD8 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018AEE <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00018AF8 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018AFE <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018B56 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018BC4 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018BDC <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018BE2 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018C1A <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018C48 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018C72 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018C7C <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018CA4 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018CCE <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00018D70 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00018D7E <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00018DCE <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00018DDE <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00018EA6 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00018EDA <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00018F0E <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00018F42 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00018F76 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00018FAA <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00018FDE <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00019012 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00019046 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00019048 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
00019086 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0001908A <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
000190C8 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00019106 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
00019108 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
0001910E <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00019112 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00019114 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00019152 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
00019190 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00019192 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
00019194 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
00019196 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
0001919C <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
000191A0 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
000191B0 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
000191C8 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
000191E0 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
000191F8 <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
00019222 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
0001924C <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
0001927A <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
0001927E <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
000192A6 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
000192A8 <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
000192E6 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
000192EA <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00019328 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
0001932C <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
0001936A <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
0001936E <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
000193AC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000193B0 <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000193D6 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
000193FC <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00019422 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00019448 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
0001946E <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
000194C4 <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
0001951A <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
00019568 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
000195BE <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000195E4 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001960A <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00019630 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00019686 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000196D4 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019722 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
000197DC <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019832 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
00019858 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
0001987E <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000198A4 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000198FA <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00019950 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
0001999E <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
000199EC <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019A3A <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
00019A88 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019AD6 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019B24 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00019B72 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019B98 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019BBE <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019BE4 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019C32 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019C80 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019CD6 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019D24 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019D72 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019DC0 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019DE6 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019E0C <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019E32 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019E6A <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019E92 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019EA6 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019F1A <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00019F60 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
0001A00E <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
0001A07A <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
0001A08A <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
0001A0B0 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001A0BA <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
0001A0E4 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
0001A0EA <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0001A0FA <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001A19A <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
0001A1DA <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
0001A1E0 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001A242 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001A24C <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
0001A256 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
0001A270 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
0001A292 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
0001A2B4 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001A30E <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001A330 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
0001A352 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001A3AC <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001A3EE <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
0001A3F4 <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
0001A402 <CLIModeSupport.ab3@1054> XINCLUDE "CLIModeSupport.ab3"
0001A408 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001A41C <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
0001A426 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
0001A4A0 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
0001A4AA <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001A4B0 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
0001A4C4 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001A4CE <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001A54E <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
0001A558 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
0001A55E <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
0001A572 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
0001A57C <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001A5C4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
0001A5D2 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001A5F8 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001A602 <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
0001A66C <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
0001A73E <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001A748 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001A74E <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001A758 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001A75E <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001A772 <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
0001A77C <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
0001A7C4 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
0001A7CE <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001A7D4 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
0001A7E8 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
0001A80E <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
0001A822 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001A848 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
0001A85C <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
0001A882 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001A896 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
0001A8A0 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
0001A8CE <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001A91E <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
0001A93E <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
0001A956 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
0001AA3A <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
0001AA44 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
0001AA4A <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
0001AA4C <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
0001AA60 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
0001AA92 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
0001AA98 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
0001AADC <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
0001AAEE <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
0001AB00 <CLIModeSupport.ab3@1123> XINCLUDE "CLIModeSupport.ab3"
0001AB0A <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
0001AB10 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
0001AB1A <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
0001AB34 <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
0001AB34 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001ABB4 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001ABEC <AmiBlitz3.ab3@99> If dynassign <> ""
0001AC02 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AC0C <AmiBlitz3.ab3@101>     If *AssignSema
0001AC1C <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AC22 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001AC42 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001AC4C <AmiBlitz3.ab3@105>       If *AssignSema
0001AC5C <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001AC90 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001ACA2 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001ACDE <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001ACEA <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001ACF6 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001AD06 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001AD16 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001AD62 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001ADC2 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001AE56 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001AE8E <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001AF10 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001AF92 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B014 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B096 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B118 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B18C <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B200 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B274 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B2A2 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B2C6 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B2F4 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B322 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B3EC <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B424 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B462 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B472 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B478 <AmiBlitz3.ab3@152> Else
0001B488 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B4AE <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B4BA <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B4CC <AmiBlitz3.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B4D6 <AmiBlitz3.ab3@165> If CLIMode
0001B4DC <AmiBlitz3.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001B4E2 <AmiBlitz3.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001B53A <AmiBlitz3.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B562 <AmiBlitz3.ab3@173>   cli_sourcefile.s    = ""
0001B58A <AmiBlitz3.ab3@174>   cli_exefile.s       = ""
0001B5B2 <AmiBlitz3.ab3@175>   cli_savefile.s      = ""
0001B5DA <AmiBlitz3.ab3@176>   cli_dumpfile.s      = ""
0001B602 <AmiBlitz3.ab3@177>   cli_includepath.s   = ""
0001B62A <AmiBlitz3.ab3@178>   cli_blitzlibpath.s  = ""
0001B630 <AmiBlitz3.ab3@179>   cli_debuginfo.l     = False
0001B636 <AmiBlitz3.ab3@180>   cli_run.l           = False
0001B63E <AmiBlitz3.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001B666 <AmiBlitz3.ab3@182>   cli_info.s          = ""
0001B66C <AmiBlitz3.ab3@183>   cli_release.l       = False
0001B676 <AmiBlitz3.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001B67C <AmiBlitz3.ab3@185>   cli_gui.l           = False
0001B684 <AmiBlitz3.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001B68C <AmiBlitz3.ab3@187>   cli_verbose.l       = 1
0001B694 <AmiBlitz3.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001B69C <AmiBlitz3.ab3@189>   cli_comstrbufsize.l = 0
0001B6A4 <AmiBlitz3.ab3@190>   cli_exestacksize.l  = 0
0001B6AC <AmiBlitz3.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001B6C4 <AmiBlitz3.ab3@192>   If cli_numargs=0 Then showhelp=True
0001B6F4 <AmiBlitz3.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001B740 <AmiBlitz3.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001B808 <AmiBlitz3.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001B83E <AmiBlitz3.ab3@199>     Select larg
0001B88A <AmiBlitz3.ab3@200>       Case "s" : larg="source"
0001B8DC <AmiBlitz3.ab3@201>       Case "e" : larg="exe"
0001B92E <AmiBlitz3.ab3@202>       Case "d" : larg="debug"
0001B980 <AmiBlitz3.ab3@203>       Case "r" : larg="release"
0001B9D2 <AmiBlitz3.ab3@204>       Case "h" : larg="help"
0001BA24 <AmiBlitz3.ab3@205>       Case "v" : larg="verbose"
0001BA32 <AmiBlitz3.ab3@206>     End Select
0001BA68 <AmiBlitz3.ab3@208>     Select larg
0001BABC <AmiBlitz3.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BB16 <AmiBlitz3.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BB70 <AmiBlitz3.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BBA0 <AmiBlitz3.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001BBD0 <AmiBlitz3.ab3@213>       Case "run"      : cli_run         = True
0001BC00 <AmiBlitz3.ab3@214>       Case "release"  : cli_release     = True
0001BC30 <AmiBlitz3.ab3@215>       Case "ped"      : cli_gui         = True
0001BC8A <AmiBlitz3.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001BCFC <AmiBlitz3.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001BD2C <AmiBlitz3.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001BD34 <AmiBlitz3.ab3@219>                         cli_dumpflags   = $0
0001BD94 <AmiBlitz3.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001BDF4 <AmiBlitz3.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001BE54 <AmiBlitz3.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001BEB4 <AmiBlitz3.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001BF14 <AmiBlitz3.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001BF74 <AmiBlitz3.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001BFD4 <AmiBlitz3.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C034 <AmiBlitz3.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C094 <AmiBlitz3.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C0A6 <AmiBlitz3.ab3@229>                         If cli_dumpflags = $0
0001C0AC <AmiBlitz3.ab3@230>                          err=True
0001C140 <AmiBlitz3.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C1B2 <AmiBlitz3.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C1BA <AmiBlitz3.ab3@235>                         cli_comflags.l  = $0
0001C21A <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C27A <AmiBlitz3.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C2DA <AmiBlitz3.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C33A <AmiBlitz3.ab3@239> 
0001C39A <AmiBlitz3.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C3B4 <AmiBlitz3.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C3BA <AmiBlitz3.ab3@242>                           err=True                                                                ; no
0001C44E <AmiBlitz3.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C454 <AmiBlitz3.ab3@244>                         Else
0001C462 <AmiBlitz3.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C4D4 <AmiBlitz3.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C4DC <AmiBlitz3.ab3@249>                         cli_dbgflags.l  = $0
0001C53C <AmiBlitz3.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C59C <AmiBlitz3.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C5FC <AmiBlitz3.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001C65C <AmiBlitz3.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001C676 <AmiBlitz3.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001C67C <AmiBlitz3.ab3@255>                           err=True                                                                ; no
0001C710 <AmiBlitz3.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001C716 <AmiBlitz3.ab3@257>                         Else
0001C724 <AmiBlitz3.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001C77E <AmiBlitz3.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001C7D8 <AmiBlitz3.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001C832 <AmiBlitz3.ab3@262> 
0001C858 <AmiBlitz3.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001C868 <AmiBlitz3.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001C8C2 <AmiBlitz3.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001C8F2 <AmiBlitz3.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001C8F8 <AmiBlitz3.ab3@269>       Default
0001C930 <AmiBlitz3.ab3@270>         If arg><""
0001C9C4 <AmiBlitz3.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001C9CA <AmiBlitz3.ab3@272>           err = True
0001C9D8 <AmiBlitz3.ab3@274>     End Select
0001CA24 <AmiBlitz3.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001CA46 <AmiBlitz3.ab3@278>   If err><False OR showhelp = True
0001CA50 <AmiBlitz3.ab3@279>     If showhelp
0001CAB2 <AmiBlitz3.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CAEA <AmiBlitz3.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CB22 <AmiBlitz3.ab3@282>     NPrint "\\nOptions:"
0001CB5A <AmiBlitz3.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CB92 <AmiBlitz3.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001CBCA <AmiBlitz3.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001CC02 <AmiBlitz3.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001CC3A <AmiBlitz3.ab3@287>     NPrint "  -run                : run compiled program"
0001CC72 <AmiBlitz3.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001CCAA <AmiBlitz3.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001CCE2 <AmiBlitz3.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001CD1A <AmiBlitz3.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001CD52 <AmiBlitz3.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001CD8A <AmiBlitz3.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001CDC2 <AmiBlitz3.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001CDFA <AmiBlitz3.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001CE32 <AmiBlitz3.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001CE6A <AmiBlitz3.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001CEA2 <AmiBlitz3.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001CEDA <AmiBlitz3.ab3@299>     NPrint "  -(h)elp             : show this help"
0001CF12 <AmiBlitz3.ab3@300>     NPrint "\\nExample:"
0001CF4A <AmiBlitz3.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001CF82 <AmiBlitz3.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001CF88 <AmiBlitz3.ab3@305>     Goto abnormal_exit
0001CFA4 <AmiBlitz3.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D008 <AmiBlitz3.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D018 <AmiBlitz3.ab3@312> Poke.l ?CLIMode,CLIMode
0001D03C <AmiBlitz3.ab3@342>   Dim incdim.s (#maxincludes)
0001D060 <AmiBlitz3.ab3@343>   Dim incline.l(#maxincludes)
0001D07A <AmiBlitz3.ab3@611> Function.s Get_Libinfo{addr_libnum.l}
0001D086 <AmiBlitz3.ab3@613>   lib_ab2.b = False : lib_os.b = False
0001D08C <AmiBlitz3.ab3@614>   addr_counter.l = addr_libnum
0001D094 <AmiBlitz3.ab3@615>   skip.l = 0
0001D0A6 <AmiBlitz3.ab3@616>   If addr_counter=0
0001D0E0 <AmiBlitz3.ab3@617>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D0FE <AmiBlitz3.ab3@618>     Function Return ""
0001D10C <AmiBlitz3.ab3@623>     mem.l = Peek.l(addr_counter)
0001D11A <AmiBlitz3.ab3@628>     addr_counter + 2
0001D13A <AmiBlitz3.ab3@629>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D154 <AmiBlitz3.ab3@630>     If (mem LSR 16) = $ffe2
0001D15A <AmiBlitz3.ab3@632>       lib_os = True
0001D162 <AmiBlitz3.ab3@633>       skip = 10
0001D1A8 <AmiBlitz3.ab3@634>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D1EC <AmiBlitz3.ab3@636>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D202 <AmiBlitz3.ab3@638>   If (addr_counter>addr_libnum + $400)
0001D220 <AmiBlitz3.ab3@640>     Function Return ""
0001D226 <AmiBlitz3.ab3@641>   Else
0001D24A <AmiBlitz3.ab3@642>     Function Return Peek$(addr_counter + skip)
0001D254 <AmiBlitz3.ab3@644> End Function
0001D272 <AmiBlitz3.ab3@684>   !asm
0001D278 <AmiBlitz3.ab3@685>   MOVEA.l _execbase,A6
0001D27C <AmiBlitz3.ab3@686>   MOVEM.l d0/a0,-(a7)
0001D27E <AmiBlitz3.ab3@688>   MOVEQ #127,d0
0001D284 <AmiBlitz3.ab3@689>   LEA chartab,a0
0001D28A <AmiBlitz3.ab3@692>     MOVE.b #1,128(a0)
0001D28C <AmiBlitz3.ab3@693>     CLR.b (a0)+
0001D290 <AmiBlitz3.ab3@694>   DBF d0,'l12
0001D296 <AmiBlitz3.ab3@696>   LEA chartab,a0
0001D29A <AmiBlitz3.ab3@697>   MOVE.b #1,(a0)
0001D2A0 <AmiBlitz3.ab3@698>   MOVE.b #1,","(a0)
0001D2A6 <AmiBlitz3.ab3@699>   MOVE.b #1,";"(a0)
0001D2AC <AmiBlitz3.ab3@700>   MOVE.b #1,":"(a0)
0001D2B2 <AmiBlitz3.ab3@701>   MOVE.b #1,"("(a0)
0001D2B8 <AmiBlitz3.ab3@702>   MOVE.b #1,")"(a0)
0001D2BE <AmiBlitz3.ab3@703>   MOVE.b #1,"="(a0)
0001D2C4 <AmiBlitz3.ab3@704>   MOVE.b #1,"+"(a0)
0001D2CA <AmiBlitz3.ab3@705>   MOVE.b #1,"-"(a0)
0001D2D0 <AmiBlitz3.ab3@706>   MOVE.b #1,"*"(a0)
0001D2D6 <AmiBlitz3.ab3@707>   MOVE.b #1,"/"(a0)
0001D2DC <AmiBlitz3.ab3@708>   MOVE.b #1,"$"(a0)
0001D2E2 <AmiBlitz3.ab3@709>   MOVE.b #1,"%"(a0)
0001D2E8 <AmiBlitz3.ab3@710>   MOVE.b #1,"."(a0)
0001D2EE <AmiBlitz3.ab3@711>   MOVE.b #1,"["(a0)
0001D2F4 <AmiBlitz3.ab3@712>   MOVE.b #1,"]"(a0)
0001D2FA <AmiBlitz3.ab3@713>   MOVE.b #1,"{"(a0)
0001D300 <AmiBlitz3.ab3@714>   MOVE.b #1,"}"(a0)
0001D306 <AmiBlitz3.ab3@715>   MOVE.b #1,"\"(a0)
0001D30C <AmiBlitz3.ab3@716>   MOVE.b #1,">"(a0)
0001D312 <AmiBlitz3.ab3@717>   MOVE.b #1,"<"(a0)
0001D318 <AmiBlitz3.ab3@718>   MOVE.b #1,"&"(a0)
0001D31E <AmiBlitz3.ab3@719>   MOVE.b #1,"|"(a0)
0001D324 <AmiBlitz3.ab3@720>   MOVE.b #1,"^"(a0)
0001D32A <AmiBlitz3.ab3@721>   MOVE.b #1,$7e(a0)
0001D330 <AmiBlitz3.ab3@722>   MOVE.w #$0101,1(a0)
0001D336 <AmiBlitz3.ab3@724>   LEA instrtab,a0
0001D33C <AmiBlitz3.ab3@725>   MOVE.l #labelhash-instrtab,d0
0001D33E <AmiBlitz3.ab3@726>   ASR.l #2,d0
0001D340 <AmiBlitz3.ab3@727>   SUBQ.l #1,d0
0001D342 <AmiBlitz3.ab3@730>    CLR.l (a0)+
0001D344 <AmiBlitz3.ab3@731>    SUBQ.l #1,d0
0001D348 <AmiBlitz3.ab3@732>   BNE 'l10
0001D34E <AmiBlitz3.ab3@734>   LEA allowtab,a0
0001D354 <AmiBlitz3.ab3@735>   MOVE.l #255,d0
0001D356 <AmiBlitz3.ab3@738>     CLR.b (a0)+
0001D35A <AmiBlitz3.ab3@739>   DBF d0,'la1
0001D360 <AmiBlitz3.ab3@741>   LEA allowtab,a0
0001D366 <AmiBlitz3.ab3@742>   MOVE.b #1,$7d(a0)
0001D36C <AmiBlitz3.ab3@743>   MOVE.b #1,$7c(a0)
0001D372 <AmiBlitz3.ab3@744>   MOVE.b #1,$44(a0)
0001D378 <AmiBlitz3.ab3@745>   MOVE.b #1,$45(a0)
0001D37E <AmiBlitz3.ab3@746>   MOVE.b #1,$b9(a0)
0001D384 <AmiBlitz3.ab3@747>   MOVE.b #1,$89(a0)
0001D38A <AmiBlitz3.ab3@748>   MOVE.b #1,$ce(a0)
0001D390 <AmiBlitz3.ab3@749>   MOVE.b #1,$cf(a0)
0001D396 <AmiBlitz3.ab3@750>   MOVE.b #1,$d0(a0)
0001D39C <AmiBlitz3.ab3@751>   MOVE.b #1,$cd(a0)
0001D39E <AmiBlitz3.ab3@752>   MOVEQ #0,d0
0001D3A4 <AmiBlitz3.ab3@754>   MOVEA.l _execbase,a6
0001D3AA <AmiBlitz3.ab3@759>   MOVE.l #$10000,d0
0001D3B0 <AmiBlitz3.ab3@760>   MOVE.l #80000,d1
0001D3B2 <AmiBlitz3.ab3@761>   MOVE.l d1,d2
0001D3B6 <AmiBlitz3.ab3@762>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D3BC <AmiBlitz3.ab3@763>   MOVE.l d0,mempool
0001D3C0 <AmiBlitz3.ab3@764>   MOVEM.l (a7)+,d0/a0
0001D3C6 <AmiBlitz3.ab3@765>   TST.l mempool
0001D3CA <AmiBlitz3.ab3@766>   BEQ shutdown_compiler
0001D3CE <AmiBlitz3.ab3@768>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D3D4 <AmiBlitz3.ab3@769>   MOVE.l A4,ptr_ThisTask
0001D3D8 <AmiBlitz3.ab3@771>   BSR.w open_doslibrary
0001D3DC <AmiBlitz3.ab3@772>   BEQ.w shutdown_compiler
0001D3E2 <AmiBlitz3.ab3@774>   MOVE.l D2,stacksize
0001D3E4 <AmiBlitz3.ab3@778>   MOVEQ.l #$00,D0
0001D3EA <AmiBlitz3.ab3@779>   LEA tokens,A0
0001D3EC <AmiBlitz3.ab3@782>     ADDQ.w #1,D0
0001D3EE <AmiBlitz3.ab3@783>     MOVE.l (A0),D1
0001D3F2 <AmiBlitz3.ab3@784>     BEQ.w JL_0_2D1C
0001D3F4 <AmiBlitz3.ab3@785>     MOVEA.l D1,A0
0001D3F8 <AmiBlitz3.ab3@786> BRA.w JL_0_2D0E
0001D3FE <AmiBlitz3.ab3@789>   MOVE.l A0,end_of_tokenlist
0001D402 <AmiBlitz3.ab3@791>   BSR.w makeasmtable
0001D40A <AmiBlitz3.ab3@792>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D40E <AmiBlitz3.ab3@794>   BSR.w open_mathlibrary
0001D412 <AmiBlitz3.ab3@795>   BEQ.w freemem_and_quit4
0001D418 <AmiBlitz3.ab3@797>   MOVE.l constmaxpc,D0
0001D41A <AmiBlitz3.ab3@798>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D420 <AmiBlitz3.ab3@799>   MOVEA.l _execbase,A6
0001D424 <AmiBlitz3.ab3@800>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D42A <AmiBlitz3.ab3@801>   MOVE.l D0,constpcat
0001D42E <AmiBlitz3.ab3@802>   BEQ.w freemem_and_quit3
0001D434 <AmiBlitz3.ab3@803>   ADD.l constmaxpc,D0
0001D43A <AmiBlitz3.ab3@804>   MOVE.l D0,constlibat
0001D440 <AmiBlitz3.ab3@806>   MOVE.l macrobuffer_size,D0
0001D446 <AmiBlitz3.ab3@807>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D44A <AmiBlitz3.ab3@808>   BGE 'ok
0001D450 <AmiBlitz3.ab3@809>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D456 <AmiBlitz3.ab3@810>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D458 <AmiBlitz3.ab3@813>   ADDQ.l #4,d0
0001D45A <AmiBlitz3.ab3@814>   MOVEQ.l #$01,D1
0001D460 <AmiBlitz3.ab3@815>   MOVEA.l _execbase,A6
0001D464 <AmiBlitz3.ab3@816>   JSR _AllocMem(A6)                                        ;macro mem
0001D466 <AmiBlitz3.ab3@817>   MOVE.l d0,a0
0001D46C <AmiBlitz3.ab3@818>   MOVE.l macrobuffer_size,(a0)+
0001D46E <AmiBlitz3.ab3@819>   MOVE.l a0,d0
0001D474 <AmiBlitz3.ab3@820>   MOVE.l D0,ptr_macrobuffer_begin
0001D478 <AmiBlitz3.ab3@821>   BEQ.w freemem_and_quit2
0001D47E <AmiBlitz3.ab3@822>   ADD.l macrobuffer_size,D0
0001D484 <AmiBlitz3.ab3@823>   MOVE.l D0,ptr_macrobuffer_end
0001D48A <AmiBlitz3.ab3@825>   TST.l CLIMode
0001D48E <AmiBlitz3.ab3@826>   BEQ load_ped
0001D4B8 <AmiBlitz3.ab3@829>   !basic
0001D4C2 <AmiBlitz3.ab3@830>   succ.l = InitEmulatedPED{}
0001D4C6 <AmiBlitz3.ab3@831>   GetD0 succ
0001D4E4 <AmiBlitz3.ab3@832>   !asm
0001D4E6 <AmiBlitz3.ab3@833>   TST.l d0
0001D4EA <AmiBlitz3.ab3@834>   BEQ freemem_and_quit
0001D4F0 <AmiBlitz3.ab3@835> JMP skip_ped
0001D4F6 <AmiBlitz3.ab3@840>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D4FC <AmiBlitz3.ab3@841>   MOVEA.l _dosbase,A6
0001D500 <AmiBlitz3.ab3@842>   JSR _LoadSeg(A6)
0001D506 <AmiBlitz3.ab3@843>   MOVE.l D0,ptr_seg_ped
0001D50A <AmiBlitz3.ab3@845>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D50C <AmiBlitz3.ab3@849>   MOVEA.l D0,A2
0001D50E <AmiBlitz3.ab3@850>   ADDA.l A2,A2
0001D510 <AmiBlitz3.ab3@851>   ADDA.l A2,A2
0001D516 <AmiBlitz3.ab3@853>   LEA teddata,a1                                           ;lea edstruct,A1
0001D51C <AmiBlitz3.ab3@854>   MOVE.l #"TEDY",d1
0001D520 <AmiBlitz3.ab3@855>   JSR 4(A2)                                                ; Run PED
0001D526 <AmiBlitz3.ab3@857>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D52C <AmiBlitz3.ab3@858>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D56A <AmiBlitz3.ab3@860>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D56E <AmiBlitz3.ab3@861>   BEQ.w unload_ped
0001D572 <AmiBlitz3.ab3@862> 
0001D576 <AmiBlitz3.ab3@863>   BNE old_version_of_PED                                   ; no, than exit
0001D5B4 <AmiBlitz3.ab3@869>   !ComData_GetL{comData_Magic,D0}
0001D5BA <AmiBlitz3.ab3@870>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D5BE <AmiBlitz3.ab3@871>   BNE unload_ped
0001D5F6 <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001D62E <AmiBlitz3.ab3@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001D666 <AmiBlitz3.ab3@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001D69E <AmiBlitz3.ab3@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001D6D6 <AmiBlitz3.ab3@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001D70E <AmiBlitz3.ab3@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001D746 <AmiBlitz3.ab3@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001D77E <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001D7B6 <AmiBlitz3.ab3@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001D7EE <AmiBlitz3.ab3@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001D826 <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001D85E <AmiBlitz3.ab3@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001D896 <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001D8CE <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001D906 <AmiBlitz3.ab3@892>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001D93E <AmiBlitz3.ab3@893>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001D976 <AmiBlitz3.ab3@895>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001D9AE <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001D9E6 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DA1E <AmiBlitz3.ab3@899>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DA56 <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DA8E <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DAC6 <AmiBlitz3.ab3@903>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DAFE <AmiBlitz3.ab3@904>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DB36 <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DB6E <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DBA6 <AmiBlitz3.ab3@907>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001DBDE <AmiBlitz3.ab3@908>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001DC16 <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001DC4E <AmiBlitz3.ab3@910>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001DC86 <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001DCBE <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001DCF6 <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001DD2E <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001DD66 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001DD6C <AmiBlitz3.ab3@919>   CLR.w returncode_org
0001DD96 <AmiBlitz3.ab3@921>   !basic
0001DDA0 <AmiBlitz3.ab3@922>   If CLIMode
0001DE12 <AmiBlitz3.ab3@923>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001DE30 <AmiBlitz3.ab3@925>   !asm
0001DE36 <AmiBlitz3.ab3@929>   TST.b start_without_libs
0001DE3A <AmiBlitz3.ab3@930>   BNE skip_loading_libs
0001DE3E <AmiBlitz3.ab3@931>     BSR.w call_setpointerbusy
0001DE48 <AmiBlitz3.ab3@932>     MOVE.l #$FFFFffff,linenumat
0001DE4C <AmiBlitz3.ab3@933>     BSR.w get_libraries
0001DE52 <AmiBlitz3.ab3@934>     JSR init_libraries
0001DE56 <AmiBlitz3.ab3@935>     BSR.w init_buffers
0001DE5A <AmiBlitz3.ab3@936>     BSR.w call_setpointernormal
0001DE5C <AmiBlitz3.ab3@941>   MOVEQ.l #-$01,D0
0001DE62 <AmiBlitz3.ab3@942>   MOVEA.l _execbase,A6
0001DE66 <AmiBlitz3.ab3@943>   JSR _AllocSignal(A6)
0001DE6C <AmiBlitz3.ab3@944>   MOVE.l D0,signalNum
0001DE6E <AmiBlitz3.ab3@945>   MOVEQ.l #$00,D1
0001DE70 <AmiBlitz3.ab3@946>   BSET D0,D1
0001DE76 <AmiBlitz3.ab3@947>   MOVE.l D1,signals
0001DE7C <AmiBlitz3.ab3@951>   MOVE.l #str_defaultdbug,D1
0001DE80 <AmiBlitz3.ab3@952>   MOVEA.l _dosbase(PC),A6
0001DE84 <AmiBlitz3.ab3@953>   JSR _LoadSeg(A6)
0001DE8A <AmiBlitz3.ab3@954>   MOVE.l D0,ptr_seg_debugger
0001DE8C <AmiBlitz3.ab3@955>   TST.l d0
0001DE90 <AmiBlitz3.ab3@956>   BNE ok_12
0001DEBA <AmiBlitz3.ab3@957>     !basic
0001DF1C <AmiBlitz3.ab3@958>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001DF3A <AmiBlitz3.ab3@959>     !asm
0001DF40 <AmiBlitz3.ab3@962>   TST.l CLIMode
0001DF44 <AmiBlitz3.ab3@963>   BEQ run_ped
0001DF6E <AmiBlitz3.ab3@969>   !basic
0001DF74 <AmiBlitz3.ab3@970>   err.l = False
0001DFA0 <AmiBlitz3.ab3@978>   If cli_sourcefile
0001DFC0 <AmiBlitz3.ab3@979>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001DFCA <AmiBlitz3.ab3@980>     If lock
0001DFEE <AmiBlitz3.ab3@981>       NameFromLock_ lock,&cli_tempstr,1024
0001E018 <AmiBlitz3.ab3@982>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E028 <AmiBlitz3.ab3@983>       UnLock_ lock
0001E054 <AmiBlitz3.ab3@986>     If cli_exefile
0001E0A6 <AmiBlitz3.ab3@987>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E0FE <AmiBlitz3.ab3@988>       path.s = dos_PathPart{cli_exefile}
0001E11E <AmiBlitz3.ab3@989>       lock.l = Lock_(&path,#ACCESS_READ)
0001E128 <AmiBlitz3.ab3@990>       If lock
0001E14C <AmiBlitz3.ab3@991>         NameFromLock_ lock,&cli_tempstr,1024
0001E176 <AmiBlitz3.ab3@992>         path.s = Peek.s(&cli_tempstr)
0001E224 <AmiBlitz3.ab3@993>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E234 <AmiBlitz3.ab3@994>         UnLock_ lock
0001E27E <AmiBlitz3.ab3@1005>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E2F2 <AmiBlitz3.ab3@1006> 
0001E2FC <AmiBlitz3.ab3@1007>   *PreProcessor.preprocessor = preproc_Create{}
0001E30C <AmiBlitz3.ab3@1008>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E33E <AmiBlitz3.ab3@1009>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E352 <AmiBlitz3.ab3@1010>   If *PreProcessor\tokens=#NULL
0001E3CC <AmiBlitz3.ab3@1011>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E3D6 <AmiBlitz3.ab3@1012>     preproc_QueryTokens{*PreProcessor}
0001E408 <AmiBlitz3.ab3@1013>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E454 <AmiBlitz3.ab3@1021>   If cli_sourcefile><"" AND err=False
0001E4FA <AmiBlitz3.ab3@1022>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E52C <AmiBlitz3.ab3@1023>     succ=LoadSource{cli_sourcefile}
0001E536 <AmiBlitz3.ab3@1024>     If succ
0001E56E <AmiBlitz3.ab3@1025> 
0001E5E8 <AmiBlitz3.ab3@1026>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001E62A <AmiBlitz3.ab3@1027> 
0001E634 <AmiBlitz3.ab3@1029>         If comerr
0001E63A <AmiBlitz3.ab3@1031>         Else
0001E640 <AmiBlitz3.ab3@1035>     Else
0001E690 <AmiBlitz3.ab3@1036>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001E6DC <AmiBlitz3.ab3@1040>   If cli_savefile><"" AND err=False
0001E756 <AmiBlitz3.ab3@1041>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001E784 <AmiBlitz3.ab3@1042>     SaveSource{cli_savefile}
0001E7D0 <AmiBlitz3.ab3@1045>   If cli_dumpfile><"" AND err=False
0001E81A <AmiBlitz3.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001E850 <AmiBlitz3.ab3@1047>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001E85A <AmiBlitz3.ab3@1050>   If cli_run
0001E86E <AmiBlitz3.ab3@1051>     If comerr=False
0001E89A <AmiBlitz3.ab3@1052>       If cli_exefile
0001E914 <AmiBlitz3.ab3@1053>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001E94A <AmiBlitz3.ab3@1054> 
0001E994 <AmiBlitz3.ab3@1056>       If cli_verbose>=1 Then NPrint "Running program..."
0001E9A2 <AmiBlitz3.ab3@1057> 
0001E9A4 <AmiBlitz3.ab3@1059>         CLR.l d0
0001E9E2 <AmiBlitz3.ab3@1060>         !ComData_GetB{comByte_RunningFlag,D0}
0001E9E6 <AmiBlitz3.ab3@1061>         running.l = PutD0
0001EA02 <AmiBlitz3.ab3@1062>         If running Then Delay_ 50
0001EA16 <AmiBlitz3.ab3@1064>       Until running=False
0001EA2A <AmiBlitz3.ab3@1065>       If Peek.l(?_runerror)
0001EA7A <AmiBlitz3.ab3@1066>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EA8C <AmiBlitz3.ab3@1077>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001EAD6 <AmiBlitz3.ab3@1078>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EADC <AmiBlitz3.ab3@1079>   DeinitEmulatedPED{}
0001EAFA <AmiBlitz3.ab3@1081>   !asm
0001EB00 <AmiBlitz3.ab3@1082> JMP terminate_ab3
0001EB06 <AmiBlitz3.ab3@1087>   MOVEA.l ped_startup_addr,A1
0001EB0C <AmiBlitz3.ab3@1088>   LEA str_tempfilename,A0
0001EB0E <AmiBlitz3.ab3@1089>   JSR (A1)
0001EB14 <AmiBlitz3.ab3@1096>   MOVE.l signalNum,D0
0001EB1A <AmiBlitz3.ab3@1097>   MOVEA.l _execbase,A6
0001EB1E <AmiBlitz3.ab3@1098>   JSR _FreeSignal(A6)
0001EB24 <AmiBlitz3.ab3@1100>   MOVE.l ptr_seg_debugger,D1
0001EB28 <AmiBlitz3.ab3@1101>   BEQ.b skip_unload_debugger
0001EB2C <AmiBlitz3.ab3@1102>     MOVEA.l _dosbase(PC),A6
0001EB30 <AmiBlitz3.ab3@1103>     JSR _UnLoadSeg(A6)
0001EB34 <AmiBlitz3.ab3@1106>   BSR.w Aclearallvars
0001EB38 <AmiBlitz3.ab3@1107>   BSR.w free_residents
0001EB3E <AmiBlitz3.ab3@1108>   JSR free_blitzlibs
0001EB44 <AmiBlitz3.ab3@1111>   MOVE.l ptr_seg_ped,D1
0001EB48 <AmiBlitz3.ab3@1112>   BEQ freemem_and_quit
0001EB4C <AmiBlitz3.ab3@1113>   MOVEA.l _dosbase(PC),A6
0001EB50 <AmiBlitz3.ab3@1114>   JSR _UnLoadSeg(A6)
0001EB54 <AmiBlitz3.ab3@1115>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EB7E <AmiBlitz3.ab3@1118>   !basic
0001EC42 <AmiBlitz3.ab3@1119> 
0001EC60 <AmiBlitz3.ab3@1120>   !asm
0001EC64 <AmiBlitz3.ab3@1121>   BRA freemem_and_quit
0001EC8E <AmiBlitz3.ab3@1124>   !basic
0001ED52 <AmiBlitz3.ab3@1125>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001ED70 <AmiBlitz3.ab3@1126>   !asm
0001ED74 <AmiBlitz3.ab3@1130>   BSR.w freeallox
0001ED7A <AmiBlitz3.ab3@1131>   MOVEA.l ptr_macrobuffer_begin,A1
0001ED7C <AmiBlitz3.ab3@1132>   MOVE.l -(a1),D0
0001ED7E <AmiBlitz3.ab3@1133>   ADDQ.l #4,d0
0001ED84 <AmiBlitz3.ab3@1134>   MOVEA.l _execbase,A6
0001ED88 <AmiBlitz3.ab3@1135>   JSR _FreeMem(A6)
0001ED8E <AmiBlitz3.ab3@1138>   MOVEA.l _dosbase,A1
0001ED94 <AmiBlitz3.ab3@1139>   MOVEA.l _execbase,A6
0001ED98 <AmiBlitz3.ab3@1140>   JSR _CloseLibrary(A6)
0001ED9E <AmiBlitz3.ab3@1142>   MOVEA.l constpcat,A1
0001EDA4 <AmiBlitz3.ab3@1143>   MOVE.l constmaxpc,D0
0001EDAA <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001EDAE <AmiBlitz3.ab3@1145>   JSR _FreeMem(A6)
0001EDB4 <AmiBlitz3.ab3@1148>   MOVEA.l _mathffpbase,A1
0001EDBA <AmiBlitz3.ab3@1149>   MOVEA.l _execbase,A6
0001EDBE <AmiBlitz3.ab3@1150>   JSR _CloseLibrary(A6)
0001EDC4 <AmiBlitz3.ab3@1160>     MOVEA.l _execbase,A6
0001EDCA <AmiBlitz3.ab3@1161>     MOVE.l mempool,a0
0001EDCE <AmiBlitz3.ab3@1162>     JSR _DeletePool(a6)
0001EDD4 <AmiBlitz3.ab3@1163>     CLR.l pushat
0001EDDA <AmiBlitz3.ab3@1170>   JSR free_unusedfunctions
0001EDDC <AmiBlitz3.ab3@1171>   MOVEQ #0,d0
0001EDEA <AmiBlitz3.ab3@1174>   !exitasm
0001EE22 <AmiBlitz3.ab3@1175>   If dynassign<>""
0001EE2C <AmiBlitz3.ab3@1176>     If *AssignSema
0001EE3C <AmiBlitz3.ab3@1177>       ReleaseSemaphore_ *AssignSema
0001EE54 <AmiBlitz3.ab3@1178>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001EEE8 <AmiBlitz3.ab3@1179>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001EF22 <AmiBlitz3.ab3@1180>         dos_RemAssign{dynassign}
0001EF32 <AmiBlitz3.ab3@1181>         RemSemaphore_ *AssignSema
0001EF42 <AmiBlitz3.ab3@1182>         ReleaseSemaphore_ *AssignSema
0001EF78 <AmiBlitz3.ab3@1183>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001EF88 <AmiBlitz3.ab3@1184>         FreeVec_ *AssignSema
0001EF90 <AmiBlitz3.ab3@1185>         *AssignSema = #NULL
0001EFBE <AmiBlitz3.ab3@1189>   SetCurrentDir{cli_path}
0001EFE0 <AmiBlitz3.ab3@1190>   !coutclose
0001EFE6 <AmiBlitz3.ab3@1191> End
0001EFF2 <AmiBlitz3.ab3@1196> str_doslibrary:     Dc.b "dos.library",0 : Even
0001EFF6 <AmiBlitz3.ab3@1197> _dosbase:           Ds.l 1
0001EFFC <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001F002 <AmiBlitz3.ab3@1202>   LEA str_doslibrary,A1
0001F006 <AmiBlitz3.ab3@1203>   JSR _OldOpenLibrary(A6)
0001F00C <AmiBlitz3.ab3@1204>   MOVE.l D0,_dosbase
0001F00E <AmiBlitz3.ab3@1205> RTS
0001F014 <AmiBlitz3.ab3@1209>   MOVEA.l #str_mathffpname,A1
0001F01A <AmiBlitz3.ab3@1210>   MOVEA.l _execbase,A6
0001F01E <AmiBlitz3.ab3@1211>   JSR _OldOpenLibrary(A6)
0001F024 <AmiBlitz3.ab3@1212>   MOVE.l D0,_mathffpbase
0001F026 <AmiBlitz3.ab3@1213> RTS
0001F058 <AmiBlitz3.ab3@1221> !ComData_JMP{comFunc_SetNormalPointer}
0001F08A <AmiBlitz3.ab3@1229> !ComData_JMP{comFunc_SetBusyPointer}
0001F0B4 <AmiBlitz3.ab3@1233>   !basic
0001F0B8 <AmiBlitz3.ab3@1234>   ab3save_filenameP.l = PutD0
0001F0C2 <AmiBlitz3.ab3@1235>   If ab3save_filenameP
0001F0EA <AmiBlitz3.ab3@1236>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F118 <AmiBlitz3.ab3@1238>     SaveSource{ab3save_filename}
0001F11E <AmiBlitz3.ab3@1239>   Else
0001F158 <AmiBlitz3.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F176 <AmiBlitz3.ab3@1242>   !asm
0001F178 <AmiBlitz3.ab3@1243>   RTS
0001F1A2 <AmiBlitz3.ab3@1246>   !basic
0001F1A6 <AmiBlitz3.ab3@1247>   ab3save_filenameP.l = PutD0
0001F1B0 <AmiBlitz3.ab3@1248>   If ab3save_filenameP
0001F1D8 <AmiBlitz3.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F206 <AmiBlitz3.ab3@1250>     LoadSource{ab3save_filename}
0001F20C <AmiBlitz3.ab3@1251>   Else
0001F246 <AmiBlitz3.ab3@1252>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F264 <AmiBlitz3.ab3@1254>   !asm
0001F266 <AmiBlitz3.ab3@1255>   RTS
0001F290 <AmiBlitz3.ab3@1258>   !basic
0001F296 <AmiBlitz3.ab3@1259>   ClearSource{}
0001F2B4 <AmiBlitz3.ab3@1260>   !asm
0001F2B6 <AmiBlitz3.ab3@1261>   RTS
0001F2E0 <AmiBlitz3.ab3@1264>   !basic
0001F2E6 <AmiBlitz3.ab3@1265>   OpenConsoleFake{}
0001F304 <AmiBlitz3.ab3@1266>   !asm
0001F306 <AmiBlitz3.ab3@1267>   RTS
0001F330 <AmiBlitz3.ab3@1271>   !basic
0001F336 <AmiBlitz3.ab3@1272>   CloseConsoleFake{}
0001F354 <AmiBlitz3.ab3@1273>   !asm
0001F356 <AmiBlitz3.ab3@1274>   RTS
0001F35C <AmiBlitz3.ab3@1278>   MOVE.w d6,menuitemdebug
0001F386 <AmiBlitz3.ab3@1279>   !basic
0001F398 <AmiBlitz3.ab3@1280>   menuitemx.l = Peek.w(?menuitemdebug)
0001F3BE <AmiBlitz3.ab3@1281>   If menuitemx>16 OR  menuitemx<0
0001F432 <AmiBlitz3.ab3@1282>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F43A <AmiBlitz3.ab3@1283>     menuitemx=0
0001F44A <AmiBlitz3.ab3@1285>   Poke.w ?menuitemdebug,menuitemx
0001F468 <AmiBlitz3.ab3@1286>   !asm
0001F46E <AmiBlitz3.ab3@1287>   MOVE.w menuitemdebug,d6
0001F474 <AmiBlitz3.ab3@1290>   MOVE.l A5,firstitem_
0001F47A <AmiBlitz3.ab3@1291>   MOVE.w D7,numlines_org
0001F480 <AmiBlitz3.ab3@1292>   MOVE.l d7,numlines
0001F482 <AmiBlitz3.ab3@1293>   LSL.w #2,D6
0001F488 <AmiBlitz3.ab3@1294>   LEA menu_items,A0
0001F48C <AmiBlitz3.ab3@1295>   MOVEA.l $0(A0,D6.W),A0
0001F496 <AmiBlitz3.ab3@1296>   MOVE.l #$FFFFffff,linenumat
0001F4A0 <AmiBlitz3.ab3@1297>   MOVE.l #$FFFFffff,compilelinecounter
0001F4A2 <AmiBlitz3.ab3@1300>   JSR (A0)                              ; jsr to the function for the menuitem
0001F4A8 <AmiBlitz3.ab3@1301>   MOVE.l compilelinecounter,D0
0001F4AA <AmiBlitz3.ab3@1302> RTS
0001F4AE <AmiBlitz3.ab3@1304> menuitemdebug: Dc.l 0
0001F4B2 <AmiBlitz3.ab3@1306> mempool                Dc.l 0
0001F4C8 <AmiBlitz3.ab3@1307> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F4CE <AmiBlitz3.ab3@1308> dloaderr:             JSR handle_compileerror
0001F4EA <AmiBlitz3.ab3@1309>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F528 <AmiBlitz3.ab3@1317>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F52E <AmiBlitz3.ab3@1318>   LEA str_loaddebugmessage,A2
0001F534 <AmiBlitz3.ab3@1319>   LEA str_blitz3assign,A0
0001F53A <AmiBlitz3.ab3@1320>   LEA str_temp_debugmodulename,A1
0001F53C <AmiBlitz3.ab3@1322>   JSR (A3)                                                  ;open ped filerequest
0001F540 <AmiBlitz3.ab3@1324>   BEQ.w menu_loaddebugmodule_noload
0001F546 <AmiBlitz3.ab3@1325>   MOVE.l D0,ptr_temp_debugmodule
0001F54A <AmiBlitz3.ab3@1326>   BSR.w call_setpointerbusy
0001F550 <AmiBlitz3.ab3@1327> 
0001F556 <AmiBlitz3.ab3@1328>   MOVE.l A7,errstack
0001F560 <AmiBlitz3.ab3@1329>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F566 <AmiBlitz3.ab3@1330>   MOVE.l ptr_temp_debugmodule,D1
0001F56A <AmiBlitz3.ab3@1332>   MOVEA.l _dosbase(PC),A6
0001F56E <AmiBlitz3.ab3@1333>   JSR _LoadSeg(A6)
0001F570 <AmiBlitz3.ab3@1334>   MOVE.l D0,D7
0001F574 <AmiBlitz3.ab3@1335>   BEQ.w dloaderr
0001F57A <AmiBlitz3.ab3@1336>   MOVE.l ptr_seg_debugger,D1
0001F57E <AmiBlitz3.ab3@1337>   BEQ.b menu_loaddebugmodule_ndseg
0001F582 <AmiBlitz3.ab3@1338>   MOVEA.l _dosbase(PC),A6
0001F586 <AmiBlitz3.ab3@1339>   JSR _UnLoadSeg(A6)
0001F58A <AmiBlitz3.ab3@1340>   BSR.w call_setpointernormal
0001F590 <AmiBlitz3.ab3@1343>   MOVE.l D7,ptr_seg_debugger
0001F592 <AmiBlitz3.ab3@1346> RTS
0001F5B0 <AmiBlitz3.ab3@1349> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001F670 <AmiBlitz3.ab3@1350> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001F730 <AmiBlitz3.ab3@1351> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001F734 <AmiBlitz3.ab3@1352> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001F75E <AmiBlitz3.ab3@1356>   !basic
0001F788 <AmiBlitz3.ab3@1357>   exepath.s = Peek.s(?exepath)
0001F7B2 <AmiBlitz3.ab3@1358>   exefile.s = Peek.s(?exefilename)
0001F832 <AmiBlitz3.ab3@1359>   exefile.s = dos_AddPart{exepath,exefile}
0001F86A <AmiBlitz3.ab3@1360>   Poke.s ?tempspace,exefile
0001F888 <AmiBlitz3.ab3@1361>   !asm
0001F88E <AmiBlitz3.ab3@1382>   LEA tempspace,a0
0001F890 <AmiBlitz3.ab3@1383>   MOVE.l a0,d0
0001F894 <AmiBlitz3.ab3@1384> BRA newcreate2
0001F8BE <AmiBlitz3.ab3@1390>   !basic
0001F8E8 <AmiBlitz3.ab3@1391>   request_exename.s = Peek.s(?str_request_exename )
0001F944 <AmiBlitz3.ab3@1392>   request_exename   = !TRANS{request_exename}
0001F94A <AmiBlitz3.ab3@1393>   GetD0 &request_exename
0001F968 <AmiBlitz3.ab3@1394>   !asm
0001F96A <AmiBlitz3.ab3@1395>   MOVE.l D0,A2
0001F9A8 <AmiBlitz3.ab3@1398>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F9AE <AmiBlitz3.ab3@1400>   LEA exepath,A0
0001F9B4 <AmiBlitz3.ab3@1401>   LEA exefilename,A1
0001F9B6 <AmiBlitz3.ab3@1403>   JSR (A3)                                                 ;open ped filerequest
0001F9BA <AmiBlitz3.ab3@1405>   BEQ.w cancel_createexe
0001F9C4 <AmiBlitz3.ab3@1408>   ADD.l #1,number_of_builds
0001F9CA <AmiBlitz3.ab3@1411>   MOVE.l D0,ptr_newexefilename
0001F9D2 <AmiBlitz3.ab3@1412>   MOVE.w #-1,debugversion
0001F9D8 <AmiBlitz3.ab3@1413>   MOVE.w set_make_smallestcode,-(A7)
0001F9E0 <AmiBlitz3.ab3@1417>     MOVE.w #1,makeexec
0001F9E6 <AmiBlitz3.ab3@1418>     JSR ab3_OpenDebugFile
0001F9EA <AmiBlitz3.ab3@1419>     BSR.w startcompile
0001F9F0 <AmiBlitz3.ab3@1420>     JSR ab3_CloseDebugFile
0001F9FA <AmiBlitz3.ab3@1421>     CMP.l #"NORE",reqmode
0001F9FE <AmiBlitz3.ab3@1422>   BEQ 'l1
0001FA04 <AmiBlitz3.ab3@1424>   TST.w anyerrs
0001FA08 <AmiBlitz3.ab3@1425>   BNE.b menu_createexecutable__skip
0001FA0C <AmiBlitz3.ab3@1426>   BSR.w savefile
0001FA12 <AmiBlitz3.ab3@1429>   MOVE.w (A7)+,set_make_smallestcode
0001FA14 <AmiBlitz3.ab3@1432> RTS
0001FA1C <AmiBlitz3.ab3@1436>   MOVE.w #-1,flag_noPED
0001FA1E <AmiBlitz3.ab3@1437> RTS
0001FA26 <AmiBlitz3.ab3@1441>   MOVE.w #-1,flag_noCLI
0001FA28 <AmiBlitz3.ab3@1442> RTS
0001FA52 <AmiBlitz3.ab3@1445>   !basic
0001FA7A <AmiBlitz3.ab3@1446>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FA8A <AmiBlitz3.ab3@1447>     Poke.w ?word_WriteDebugFileNow,0
0001FAA8 <AmiBlitz3.ab3@1448>   !asm
0001FAAA <AmiBlitz3.ab3@1449> RTS
0001FAD4 <AmiBlitz3.ab3@1452>   !basic
0001FAE4 <AmiBlitz3.ab3@1453>   Poke.w ?word_WriteDebugFileNow,0
0001FAF6 <AmiBlitz3.ab3@1454>   If dbg_fid>=0
0001FB0C <AmiBlitz3.ab3@1455>     file_Close{dbg_fid} : dbg_fid = -1
0001FB1E <AmiBlitz3.ab3@1457>   If dbg_fid.l<0
0001FB20 <AmiBlitz3.ab3@1458>     CLR.l d0
0001FB5E <AmiBlitz3.ab3@1459>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FB62 <AmiBlitz3.ab3@1460>     dbg_Create.l = PutD0
0001FB6C <AmiBlitz3.ab3@1461>     If (dbg_Create) ; only when set!
0001FB7C <AmiBlitz3.ab3@1462>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FBA4 <AmiBlitz3.ab3@1463>       exefile.s = ""
0001FBD6 <AmiBlitz3.ab3@1464>       If exefileP Then exefile.s = Peek.s(exefileP)
0001FC0E <AmiBlitz3.ab3@1465>       If exefile><""
0001FC64 <AmiBlitz3.ab3@1466>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001FC76 <AmiBlitz3.ab3@1467>         If dbg_fid>=0
0001FC88 <AmiBlitz3.ab3@1468>           Poke.w ?word_WriteDebugFileNow,-1
0001FC94 <AmiBlitz3.ab3@1471>       oldhunkoffset.l = -1
0001FCBC <AmiBlitz3.ab3@1472>       oldfile.s       = ""
0001FCDA <AmiBlitz3.ab3@1475>   !asm
0001FCDC <AmiBlitz3.ab3@1476> RTS
0001FCE2 <AmiBlitz3.ab3@1479> TST.w word_WriteDebugFileNow
0001FCE6 <AmiBlitz3.ab3@1480> BEQ 'skipdebugfile
0001FD10 <AmiBlitz3.ab3@1481> !basic
0001FD22 <AmiBlitz3.ab3@1482>   If dbg_fid>=0
0001FD34 <AmiBlitz3.ab3@1483>     pass.l          = Peek.w(?pass)
0001FD46 <AmiBlitz3.ab3@1484>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001FD6A <AmiBlitz3.ab3@1485> 
0001FD70 <AmiBlitz3.ab3@1486>       oldhunkoffset.l = hunkoffset.l
0001FDA4 <AmiBlitz3.ab3@1487>       oldfile.s       = codefile.s
0001FDC0 <AmiBlitz3.ab3@1488>       If Peek.w (?ininclude)>0
0001FDD0 <AmiBlitz3.ab3@1489>         codeline.l = Peek.l(?includeline);-1
0001FE40 <AmiBlitz3.ab3@1490>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001FE46 <AmiBlitz3.ab3@1491>       Else
0001FE74 <AmiBlitz3.ab3@1492>         !ComData_LEA{comStr_SourceName,A0}
0001FE76 <AmiBlitz3.ab3@1493>         MOVE.l A0,D0
0001FE7A <AmiBlitz3.ab3@1494>         sourceP.l = PutD0
0001FEA2 <AmiBlitz3.ab3@1495>         codefile.s = Peek.s(sourceP)
0001FEB2 <AmiBlitz3.ab3@1496>         codeline.l = Peek.l(?linenumat)
0001FEDA <AmiBlitz3.ab3@1498>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001FF2E <AmiBlitz3.ab3@1499>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001FF3E <AmiBlitz3.ab3@1506>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001FF48 <AmiBlitz3.ab3@1507>         If *sourceLine
0001FF5E <AmiBlitz3.ab3@1508>           MaxLen detokenline.s = 65536
0001FFA0 <AmiBlitz3.ab3@1509>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001FFB0 <AmiBlitz3.ab3@1510>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001FFDC <AmiBlitz3.ab3@1511>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0002000A <AmiBlitz3.ab3@1512>           If written>0 Then Poke.b &detokenline+written-1,0
00020034 <AmiBlitz3.ab3@1513>           sourceLineText.s = Peek.s(&detokenline)
0002003A <AmiBlitz3.ab3@1514>         Else
00020062 <AmiBlitz3.ab3@1515>           sourceLineText = "NULL"
0002012A <AmiBlitz3.ab3@1518>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00020148 <AmiBlitz3.ab3@1524> !asm
0002014A <AmiBlitz3.ab3@1526> RTS
0002014C <AmiBlitz3.ab3@1528> word_WriteDebugFileNow: Dc.w 0
0002014E <AmiBlitz3.ab3@1530> flag_noPED:  Ds.w 1                                        ;closeed org source
00020150 <AmiBlitz3.ab3@1531> flag_noCLI:  Ds.w 1                                        ;nocli org source
00020154 <AmiBlitz3.ab3@1535>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002015A <AmiBlitz3.ab3@1536>   MOVEA.l _execbase,A6
0002015E <AmiBlitz3.ab3@1537>   JSR _CacheClearU(A6)
00020162 <AmiBlitz3.ab3@1538>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020164 <AmiBlitz3.ab3@1539> RTS
00020168 <AmiBlitz3.ab3@1542>   MOVEM.l A2-A3,-(A7)
0002016E <AmiBlitz3.ab3@1543>   CLR.b doublepeek
00020174 <AmiBlitz3.ab3@1544>   MOVE.l A5,lastsourcepos
0002017A <AmiBlitz3.ab3@1545>    JSR getchar
0002017E <AmiBlitz3.ab3@1546>   CMP.w #$2E,D0
00020182 <AmiBlitz3.ab3@1547>    BEQ.w JL_0_49B4b
00020188 <AmiBlitz3.ab3@1548>   MOVEA.l defaulttype,A2
0002018C <AmiBlitz3.ab3@1549>   CMP.w #$24,D0
00020190 <AmiBlitz3.ab3@1550>    BNE.w JL_0_49CAb
00020192 <AmiBlitz3.ab3@1551>   MOVEQ.l #$07,D1
00020196 <AmiBlitz3.ab3@1552> BRA.w JL_0_49DEb
0002019C <AmiBlitz3.ab3@1555>   JSR getparameter2
000201A0 <AmiBlitz3.ab3@1556>   BEQ.w syntaxerrb
000201A6 <AmiBlitz3.ab3@1557>   LEA newtypebase,A2
000201AC <AmiBlitz3.ab3@1558>   JSR findtype
000201B0 <AmiBlitz3.ab3@1559>   BNE.w notypeerrb
000201BA <AmiBlitz3.ab3@1564>   MOVE.w oldqflag,instringon
000201C0 <AmiBlitz3.ab3@1565>   MOVEA.l lastsourcepos,A5
000201C6 <AmiBlitz3.ab3@1567>   MOVE.l a2,functionreturntype
000201CE <AmiBlitz3.ab3@1568>   CMPI.l #$100,$4(A2)
000201D2 <AmiBlitz3.ab3@1569>   BLE.w 'isvar
000201D4 <AmiBlitz3.ab3@1573>   MOVEQ #3,d1
000201D8 <AmiBlitz3.ab3@1574>   BRA JL_0_49DEb
000201DC <AmiBlitz3.ab3@1581>   MOVE.w $6(A2),D1
000201E2 <AmiBlitz3.ab3@1582>   CMP.w #8,8(a2)
000201E6 <AmiBlitz3.ab3@1583>   BNE 'l1
000201EE <AmiBlitz3.ab3@1584>   MOVE.b #1,doublepeek
000201F4 <AmiBlitz3.ab3@1588>   MOVE.w D1,convsize
000201F8 <AmiBlitz3.ab3@1589>   MOVEM.l (A7)+,A2-A3
000201FA <AmiBlitz3.ab3@1590> RTS
00020200 <AmiBlitz3.ab3@1592> notypeerrb JMP notypeerr
00020206 <AmiBlitz3.ab3@1593> illtypeerrb JMP illtypeerr
0002020C <AmiBlitz3.ab3@1594> syntaxerrb JMP syntaxerr
00020216 <AmiBlitz3.ab3@1639>   ADD.l #1,number_of_builds
0002021C <AmiBlitz3.ab3@1641>   CLR.w debugversion
00020222 <AmiBlitz3.ab3@1642>   CLR.w flag_noPED
00020228 <AmiBlitz3.ab3@1643>   CLR.w flag_noCLI
00020230 <AmiBlitz3.ab3@1646>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020234 <AmiBlitz3.ab3@1647>     BSR.w startcompile
0002023E <AmiBlitz3.ab3@1648>     CMP.l #"NORE",reqmode
00020242 <AmiBlitz3.ab3@1649>   BEQ 'l1
00020248 <AmiBlitz3.ab3@1652>   TST.w anyerrs
0002024C <AmiBlitz3.ab3@1653>    BNE.w JL_0_3482
00020250 <AmiBlitz3.ab3@1655>   MOVE.w flag_noPED(PC),D1
00020254 <AmiBlitz3.ab3@1656>    BEQ.w skip_closingGUI
00020286 <AmiBlitz3.ab3@1661>   !ComData_JSR{comFunc_CloseGUI}
0002028A <AmiBlitz3.ab3@1662> BRA.b runprogram
0002028E <AmiBlitz3.ab3@1666>   BSR.w compilerequester
00020294 <AmiBlitz3.ab3@1669>   MOVEA.l _dosbase,A6
0002029A <AmiBlitz3.ab3@1670>   LEA exepath,a0
0002029C <AmiBlitz3.ab3@1671>   MOVE.l a0,d1
0002029E <AmiBlitz3.ab3@1672>   MOVEQ #-2,d2
000202A2 <AmiBlitz3.ab3@1673>   JSR _Lock(a6)                                            ;lock
000202A8 <AmiBlitz3.ab3@1674>   MOVE.l d0,exelock
000202AE <AmiBlitz3.ab3@1675>   MOVE.l #0,d1
000202B2 <AmiBlitz3.ab3@1676>   JSR _CurrentDir(A6)
000202B8 <AmiBlitz3.ab3@1677>   MOVE.l D0,lock_currentdir
000202BA <AmiBlitz3.ab3@1678>   MOVE.l D0,D1
000202BE <AmiBlitz3.ab3@1679>   JSR _CurrentDir(A6)
000202C4 <AmiBlitz3.ab3@1680>   CLR.l ptr_exetask
000202CA <AmiBlitz3.ab3@1689>   MOVE.l #str_process_name,D1
000202CC <AmiBlitz3.ab3@1690>   MOVEQ.l #$00,D2
000202D2 <AmiBlitz3.ab3@1691>   MOVE.l #proc_seglist,D3
000202D4 <AmiBlitz3.ab3@1692>   LSR.l #2,D3
000202DA <AmiBlitz3.ab3@1693>   MOVE.l stacksize,D4
000202E0 <AmiBlitz3.ab3@1694>   MOVEA.l _dosbase,A6
000202E4 <AmiBlitz3.ab3@1695>   JSR _CreateProc(A6)                                      ;runtask
000202E6 <AmiBlitz3.ab3@1696>   TST.l D0
000202EA <AmiBlitz3.ab3@1697>    BEQ ErrorRunningProg
00020320 <AmiBlitz3.ab3@1699>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020326 <AmiBlitz3.ab3@1701>   TST.w flag_noPED
0002032A <AmiBlitz3.ab3@1702>    BNE.b JL_0_344E
0002032E <AmiBlitz3.ab3@1703>   BSR.w close_compilewin
00020334 <AmiBlitz3.ab3@1706>   CLR.l firstlocal
0002033A <AmiBlitz3.ab3@1707>   CLR.l firstglob
0002033E <AmiBlitz3.ab3@1708>   MOVE.w flag_noPED(PC),D1
00020342 <AmiBlitz3.ab3@1709>   BEQ.w skip_openGUI
00020374 <AmiBlitz3.ab3@1713>   !ComData_JSR{comFunc_CreateGUI}
00020376 <AmiBlitz3.ab3@1723> RTS
00020380 <AmiBlitz3.ab3@1726> MOVE.l #1,_runerror
00020384 <AmiBlitz3.ab3@1727> BRA JL_0_344E
00020388 <AmiBlitz3.ab3@1729> _runerror: Dc.l 0
0002038C <AmiBlitz3.ab3@1730> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020390 <AmiBlitz3.ab3@1731> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020394 <AmiBlitz3.ab3@1732> signalNum:          Ds.l 1                                          ;panicbit org source
00020398 <AmiBlitz3.ab3@1733> signals:            Ds.l 1                                          ;panicmask org source
000203AE <AmiBlitz3.ab3@1735> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000203B3 <AmiBlitz3.ab3@1736>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000203B4 <AmiBlitz3.ab3@1737> Even4
000203B8 <AmiBlitz3.ab3@1739> ptr_ThisTask:       Ds.l 1                                          ;length
000203BC <AmiBlitz3.ab3@1740> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000203C2 <AmiBlitz3.ab3@1744>   MOVEA.l $4,A0
000203CA <AmiBlitz3.ab3@1745>   MOVE.l  $114(A0),ptr_exetask
000203D0 <AmiBlitz3.ab3@1747>   MOVEA.l _dosbase,A6
000203D6 <AmiBlitz3.ab3@1748>   MOVE.l exelock,D1
000203DA <AmiBlitz3.ab3@1749>   JSR _CurrentDir(A6)
00020410 <AmiBlitz3.ab3@1754>   !ComData_SetB{comByte_RunningFlag,#1}
00020414 <AmiBlitz3.ab3@1760>   MOVE.w flag_noCLI(PC),D1
00020418 <AmiBlitz3.ab3@1761>    BNE.b skip_openconsole
0002044A <AmiBlitz3.ab3@1765>   !ComData_JSR{comFunc_OpenConsole}
0002044E <AmiBlitz3.ab3@1768>   BSR.w calcvbr
00020454 <AmiBlitz3.ab3@1769>   MOVEA.l vbr,A0
0002045A <AmiBlitz3.ab3@1774>   CLR.w dirmode
00020460 <AmiBlitz3.ab3@1775>   CLR.l firstglob
00020466 <AmiBlitz3.ab3@1776>   CLR.l firstlocal
0002046C <AmiBlitz3.ab3@1778>   MOVE.l stacksize,D2
00020472 <AmiBlitz3.ab3@1779>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020478 <AmiBlitz3.ab3@1780>   LEA str_cliarguments,A0                                   ;cli arguement
0002047E <AmiBlitz3.ab3@1781>   MOVEA.l destbufferstart,A1
00020482 <AmiBlitz3.ab3@1782>   BSR.w Aclearcache
00020484 <AmiBlitz3.ab3@1785>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0002048A <AmiBlitz3.ab3@1787>   MOVEA.l vbr,A0
00020490 <AmiBlitz3.ab3@1789>   CLR.l firstglob
00020496 <AmiBlitz3.ab3@1790>   CLR.l firstlocal
0002049C <AmiBlitz3.ab3@1791>   MOVEA.l _dosbase,A6
000204A2 <AmiBlitz3.ab3@1792>   MOVE.l exelock,d1
000204A6 <AmiBlitz3.ab3@1793>   BEQ 'nolock
000204AA <AmiBlitz3.ab3@1794>   JSR _UnLock(a6)
000204E0 <AmiBlitz3.ab3@1799>   !ComData_SetB{comByte_RunningFlag,#0}
000204E4 <AmiBlitz3.ab3@1802>   MOVE.w flag_noCLI(PC),D1
000204E8 <AmiBlitz3.ab3@1803>    BNE.b skip_closeconsole
0002051A <AmiBlitz3.ab3@1807>   !ComData_JSR{comFunc_CloseConsole}
00020522 <AmiBlitz3.ab3@1810>   MOVE.w #$0001,stopit
00020526 <AmiBlitz3.ab3@1811>   MOVE.l signals(PC),D0
0002052C <AmiBlitz3.ab3@1812>   MOVEA.l ptr_ThisTask,A1
00020532 <AmiBlitz3.ab3@1813>   MOVEA.l _execbase,A6
00020536 <AmiBlitz3.ab3@1814>   JSR _Signal(A6)
00020538 <AmiBlitz3.ab3@1815> RTS
0002053E <AmiBlitz3.ab3@1819>   MOVEA.l _execbase,A6
00020542 <AmiBlitz3.ab3@1820>   MOVE.w $128(A6),D0
00020544 <AmiBlitz3.ab3@1821>   MOVEQ.l #$00,D1
00020548 <AmiBlitz3.ab3@1822>   ANDI.w #$F,D0
0002054C <AmiBlitz3.ab3@1825>     BEQ.b calcvbr__skip
0002054E <AmiBlitz3.ab3@1826>     ADDQ.w #1,D1
00020550 <AmiBlitz3.ab3@1827>     LSR.w #1,D0
00020554 <AmiBlitz3.ab3@1828> BRA.b calcvbr_loop
00020556 <AmiBlitz3.ab3@1831>   MOVEQ.l #$00,D2
0002055A <AmiBlitz3.ab3@1832>   CMP.w #$2,D1
0002055E <AmiBlitz3.ab3@1833>    BCS.b calcvbr__skip2
00020564 <AmiBlitz3.ab3@1834>   MOVEA.l _execbase,A6
00020568 <AmiBlitz3.ab3@1835>   JSR _SuperState(A6)
0002056C <AmiBlitz3.ab3@1836>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020570 <AmiBlitz3.ab3@1837>   JSR _UserState(A6)
00020576 <AmiBlitz3.ab3@1840>   MOVE.l D2,vbr
00020578 <AmiBlitz3.ab3@1841> RTS
0002057E <AmiBlitz3.ab3@1845>   LEA instrtab,a0
00020584 <AmiBlitz3.ab3@1846>   MOVE.l #labelhash-instrtab,d0
00020586 <AmiBlitz3.ab3@1847>   ASR.l #2,d0
00020588 <AmiBlitz3.ab3@1848>   SUBQ.l #1,d0
0002058A <AmiBlitz3.ab3@1851>   CLR.l (a0)+
0002058C <AmiBlitz3.ab3@1852>   SUBQ.l #1,d0
00020590 <AmiBlitz3.ab3@1853>   BNE 'l10
00020594 <AmiBlitz3.ab3@1854>   BSR.w call_setpointerbusy
00020598 <AmiBlitz3.ab3@1855>   BSR.w free_userlibs
0002059C <AmiBlitz3.ab3@1856>   BSR.w scan_for_userlibs
000205A0 <AmiBlitz3.ab3@1857>   BSR.w JL_0_7082
000205A4 <AmiBlitz3.ab3@1858> BRA.w call_setpointernormal
000205CE <AmiBlitz3.ab3@1864>   !basic
00020608 <AmiBlitz3.ab3@1865>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020618 <AmiBlitz3.ab3@1867>   deflibNameP.l = Peek.l(?deflib)
00020622 <AmiBlitz3.ab3@1868>   If deflibNameP
00020654 <AmiBlitz3.ab3@1869>     If Peek.s(deflibNameP)<>""
0002069E <AmiBlitz3.ab3@1870>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
000206A4 <AmiBlitz3.ab3@1871>     Else
000206DE <AmiBlitz3.ab3@1872>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
000206E4 <AmiBlitz3.ab3@1874>   Else
0002071E <AmiBlitz3.ab3@1875>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020758 <AmiBlitz3.ab3@1876>     error{"INTERNAL: Invalid deflib name pointer!"}
00020776 <AmiBlitz3.ab3@1878>   !asm
0002077C <AmiBlitz3.ab3@1883>   MOVE.l #str_path_userlibs,D1
0002077E <AmiBlitz3.ab3@1884>   MOVEQ.l #-$02,D2
00020784 <AmiBlitz3.ab3@1885>   MOVEA.l _dosbase,A6
00020788 <AmiBlitz3.ab3@1886>   JSR _Lock(A6)
0002078A <AmiBlitz3.ab3@1887>   MOVE.l D0,D7
0002078E <AmiBlitz3.ab3@1888>    BEQ.w exit_get_libraries
00020790 <AmiBlitz3.ab3@1889>   MOVE.l D7,D1
00020796 <AmiBlitz3.ab3@1890>   MOVE.l #ptr_parameterstore,D2
0002079A <AmiBlitz3.ab3@1891>   JSR _Examine(A6)
0002079C <AmiBlitz3.ab3@1892>   TST.l D0
000207A0 <AmiBlitz3.ab3@1893>   BEQ.w unlock_and_exit_get_libraries
000207A6 <AmiBlitz3.ab3@1894>   MOVE.l fib_DirEntryType,D0
000207AA <AmiBlitz3.ab3@1895>   BMI.w unlock_and_exit_get_libraries
000207AC <AmiBlitz3.ab3@1900>     MOVE.l D7,D1
000207B2 <AmiBlitz3.ab3@1901>     MOVE.l #ptr_parameterstore,D2
000207B8 <AmiBlitz3.ab3@1902>     MOVEA.l _dosbase,A6
000207BC <AmiBlitz3.ab3@1903>     JSR _ExNext(A6)
000207BE <AmiBlitz3.ab3@1904>     TST.l D0
000207C2 <AmiBlitz3.ab3@1905>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000207C8 <AmiBlitz3.ab3@1907>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000207CC <AmiBlitz3.ab3@1908>     BPL.w scan_libsdrawer                                  ; skip directories
000207D2 <AmiBlitz3.ab3@1910>     LEA fib_FileName,A0                                    ; pruefen ob infofile
000207D6 <AmiBlitz3.ab3@1911>     BSR.w check_for_infoextention
000207DA <AmiBlitz3.ab3@1912>     BEQ.w scan_libsdrawer
000207E0 <AmiBlitz3.ab3@1914>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
000207E2 <AmiBlitz3.ab3@1915>     MOVEQ.l #$26,D0
000207E4 <AmiBlitz3.ab3@1916>     MOVEQ.l #$01,D1
000207EA <AmiBlitz3.ab3@1917>     MOVE.l mempool,a0
000207EE <AmiBlitz3.ab3@1918>     JSR _AllocPooled(a6)
000207F4 <AmiBlitz3.ab3@1920>     MOVEA.l _dosbase,A6
000207F6 <AmiBlitz3.ab3@1921>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
000207FC <AmiBlitz3.ab3@1924>     LEA ptr_userlibs_list,A0                               ; pruefe liste
000207FE <AmiBlitz3.ab3@1927>     MOVE.l (A0),D5
00020802 <AmiBlitz3.ab3@1928>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020804 <AmiBlitz3.ab3@1929>     MOVEA.l D5,A2
00020806 <AmiBlitz3.ab3@1930>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0002080C <AmiBlitz3.ab3@1933>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0002080E <AmiBlitz3.ab3@1936>       MOVEQ.l #$00,D0
00020810 <AmiBlitz3.ab3@1937>       MOVE.b (A1)+,D0
00020814 <AmiBlitz3.ab3@1938>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020816 <AmiBlitz3.ab3@1939>       MOVEQ.l #$00,D1
00020818 <AmiBlitz3.ab3@1940>       MOVE.b (A2)+,D1
0002081C <AmiBlitz3.ab3@1941>        BEQ.w JL_0_371C
0002083E <AmiBlitz3.ab3@1942>       !compare1                                            ;bsr.w tstalpha
00020842 <AmiBlitz3.ab3@1943>       BNE.w JL_0_3702
00020846 <AmiBlitz3.ab3@1944>       ANDI.w #$DF,D0
00020848 <AmiBlitz3.ab3@1947>       EXG.l D0,D1
0002086A <AmiBlitz3.ab3@1948>       !compare1                                            ;bsr.w tstalpha
0002086E <AmiBlitz3.ab3@1949>       BNE.w JL_0_3710
00020872 <AmiBlitz3.ab3@1950>       ANDI.w #$DF,D0
00020874 <AmiBlitz3.ab3@1953>       EXG.l D0,D1
00020876 <AmiBlitz3.ab3@1954>       CMP.b D1,D0
0002087A <AmiBlitz3.ab3@1955>     BEQ.w JL_0_36E6
0002087E <AmiBlitz3.ab3@1956>     BCS.w JL_0_3722
00020880 <AmiBlitz3.ab3@1959>     MOVEA.l D5,A0
00020884 <AmiBlitz3.ab3@1960> BRA.w JL_0_36D6
00020886 <AmiBlitz3.ab3@1963>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020888 <AmiBlitz3.ab3@1964>     MOVE.l (A0),(A1)
0002088A <AmiBlitz3.ab3@1965>     MOVE.l A1,(A0)
0002088C <AmiBlitz3.ab3@1966>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020890 <AmiBlitz3.ab3@1967>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00020896 <AmiBlitz3.ab3@1968>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020898 <AmiBlitz3.ab3@1971>       MOVE.b (A0)+,(A1)+
0002089C <AmiBlitz3.ab3@1972>     BNE.w JL_0_3734
000208A0 <AmiBlitz3.ab3@1973> BRA.w scan_libsdrawer
000208A2 <AmiBlitz3.ab3@1976>   MOVE.l D7,D1
000208A8 <AmiBlitz3.ab3@1977>   MOVEA.l _dosbase,A6
000208AC <AmiBlitz3.ab3@1978>   JSR _UnLock(A6)
000208AE <AmiBlitz3.ab3@1979>   MOVEQ.l #-$01,D0
000208B0 <AmiBlitz3.ab3@1982> RTS
000208B2 <AmiBlitz3.ab3@1985>   MOVE.l D7,D1
000208B8 <AmiBlitz3.ab3@1986>   MOVEA.l _dosbase,A6
000208BC <AmiBlitz3.ab3@1987>   JSR _UnLock(A6)
000208BE <AmiBlitz3.ab3@1988>   MOVEQ.l #$00,D0
000208C0 <AmiBlitz3.ab3@1989> RTS
000208C6 <AmiBlitz3.ab3@1993>   MOVEA.l _execbase,A6
000208CC <AmiBlitz3.ab3@1994>   MOVEA.l ptr_userlibs_list,A2
000208D2 <AmiBlitz3.ab3@1995>   CLR.l ptr_userlibs_list
000208D6 <AmiBlitz3.ab3@1998>     CMPA.w #$0,A2
000208DA <AmiBlitz3.ab3@1999>     BEQ.w exit_free_userlib
000208DC <AmiBlitz3.ab3@2000>       MOVEA.l A2,A1
000208DE <AmiBlitz3.ab3@2001>       MOVEQ.l #$26,D0
000208E0 <AmiBlitz3.ab3@2002>       MOVEA.l (A2),A2
000208E6 <AmiBlitz3.ab3@2003>       MOVE.l mempool,a0
000208EC <AmiBlitz3.ab3@2004>       MOVEA.l _execbase,A6
000208F0 <AmiBlitz3.ab3@2005>       JSR _FreePooled(A6)
000208F4 <AmiBlitz3.ab3@2006> BRA.w loop_free_userlib
000208F6 <AmiBlitz3.ab3@2009> RTS
000208F8 <AmiBlitz3.ab3@2012> pass:  Dc.w 0                                             ; smallpass org source
000208FA <AmiBlitz3.ab3@2013> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020900 <AmiBlitz3.ab3@2017>   MOVE.l A7,errstack                                      ;startcompile
00020906 <AmiBlitz3.ab3@2026>   CLR.l reqmode
00020910 <AmiBlitz3.ab3@2028>   MOVE.l #Aclearallvars,errcont
0002091A <AmiBlitz3.ab3@2029>   MOVE.l #concomstack,concomsp
0002091E <AmiBlitz3.ab3@2037>   MOVE.w #1450,D0
00020920 <AmiBlitz3.ab3@2038>   LSR.w #3,D0
00020922 <AmiBlitz3.ab3@2039>   SUBQ.w #7,D0                                             ; 173
00020928 <AmiBlitz3.ab3@2040>   MOVE.w D0,progressbar_width
0002092A <AmiBlitz3.ab3@2041>   SWAP D0
0002092C <AmiBlitz3.ab3@2042>   CLR.w D0
00020932 <AmiBlitz3.ab3@2043>   MOVE.l numlines,d1
00020936 <AmiBlitz3.ab3@2044>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020938 <AmiBlitz3.ab3@2046>   TST.w D0
0002093C <AmiBlitz3.ab3@2047>   BNE.w JL_0_37C0
0002093E <AmiBlitz3.ab3@2048>   MOVEQ.l #-$01,D0
00020944 <AmiBlitz3.ab3@2051>   MOVE.w D0,progress_per_line
0002094C <AmiBlitz3.ab3@2060>   BTST #$7,use_debugger
00020950 <AmiBlitz3.ab3@2062>   BNE 'debugon
00020956 <AmiBlitz3.ab3@2063>   CLR.w debugmode
0002095A <AmiBlitz3.ab3@2064> BRA.b 'debugoff
00020960 <AmiBlitz3.ab3@2067>   SNE debugmode
00020998 <AmiBlitz3.ab3@2075>   !ComData_SetB{comByte_DebugMode,debugmode}
0002099E <AmiBlitz3.ab3@2078>   CLR.w dirmode                                            ;direct mode flag
000209A4 <AmiBlitz3.ab3@2079>   CLR.w ezerr                                              ;quiet error
000209AA <AmiBlitz3.ab3@2080>   CLR.l currentfunction
000209B0 <AmiBlitz3.ab3@2081>   CLR.w connest
000209B6 <AmiBlitz3.ab3@2082>   CLR.w varmode
000209BC <AmiBlitz3.ab3@2083>   CLR.w proceduremode
000209C2 <AmiBlitz3.ab3@2084>   CLR.w ininclude
000209C8 <AmiBlitz3.ab3@2085>   CLR.w intstring
000209CE <AmiBlitz3.ab3@2086>   CLR.w pass
000209D6 <AmiBlitz3.ab3@2087>   MOVE.w #0,compiler_job
000209DC <AmiBlitz3.ab3@2088>   CLR.l funcscanon
000209E2 <AmiBlitz3.ab3@2097>   CLR.l funcscanon
000209E6 <AmiBlitz3.ab3@2098>   BSR.w compileall
000209EC <AmiBlitz3.ab3@2099> 
000209F2 <AmiBlitz3.ab3@2100>   TST.l errorcounter
000209F6 <AmiBlitz3.ab3@2101>   BEQ _skiperrorstop
000209F8 <AmiBlitz3.ab3@2102>   RTS
000209FE <AmiBlitz3.ab3@2105>   MOVE.w dontwrite,d0
00020A02 <AmiBlitz3.ab3@2106>   CMP.w #1,d0
00020A06 <AmiBlitz3.ab3@2107>   BNE 'l3
00020A0C <AmiBlitz3.ab3@2108>   TST.l errorcounter
00020A10 <AmiBlitz3.ab3@2109>   BNE 'l3
00020A16 <AmiBlitz3.ab3@2110>   CLR.w dontwrite
00020A1A <AmiBlitz3.ab3@2111>   BSR compileall                                           ;if a function is not found
00020A20 <AmiBlitz3.ab3@2112>   ADDQ.w #1,pass
00020A5E <AmiBlitz3.ab3@2117>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020A62 <AmiBlitz3.ab3@2118>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020A68 <AmiBlitz3.ab3@2119>   LEA firstproc,a0
00020A6E <AmiBlitz3.ab3@2120>   CLR.l savefuncspace
00020A70 <AmiBlitz3.ab3@2121>   MOVE.l (a0),d0
00020A72 <AmiBlitz3.ab3@2125>     MOVE.l d0,a0
00020A76 <AmiBlitz3.ab3@2126>     BEQ 'out
00020A7A <AmiBlitz3.ab3@2127>     TST.b isfunc(a0)
00020A7E <AmiBlitz3.ab3@2128>     BNE 'nex
00020A82 <AmiBlitz3.ab3@2129>     MOVEM.l d2/a6/a0,-(a7)
00020A84 <AmiBlitz3.ab3@2131>     MOVEQ #0,d0
00020A88 <AmiBlitz3.ab3@2132>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020A8C <AmiBlitz3.ab3@2133>     SUB.w #$21+#funcentry_extend,d0
00020A90 <AmiBlitz3.ab3@2134>     ADD.w #16,d0
00020A96 <AmiBlitz3.ab3@2135>     MOVE.l #$10000,d1
00020A98 <AmiBlitz3.ab3@2136>     MOVE.l d0,d2
00020A9E <AmiBlitz3.ab3@2137>     MOVEA.l _execbase,A6
00020AA2 <AmiBlitz3.ab3@2138>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020AA4 <AmiBlitz3.ab3@2139>     MOVE.l d0,a1
00020AA8 <AmiBlitz3.ab3@2140>     MOVE.l d2,4(a1)
00020AAE <AmiBlitz3.ab3@2141>     MOVE.l unusedfunc,(a1)
00020AB4 <AmiBlitz3.ab3@2142>     MOVE.l d0,unusedfunc
00020AB8 <AmiBlitz3.ab3@2143>     MOVEM.l (a7)+,a6/a0/d2
00020ABC <AmiBlitz3.ab3@2144>     MOVE.l isfunc+1(a0),d0
00020ABE <AmiBlitz3.ab3@2145>     ADDQ.l #6,d0
00020AC4 <AmiBlitz3.ab3@2146>     ADD.l d0,savefuncspace
00020AC8 <AmiBlitz3.ab3@2149>     MOVE.l d0,8(a1)
00020ACC <AmiBlitz3.ab3@2150>     LEA 12(a1),a1
00020ACE <AmiBlitz3.ab3@2151>     MOVE.l a0,-(a7)
00020AD2 <AmiBlitz3.ab3@2152>     LEA $21+#funcentry_extend(a0),a0
00020AD4 <AmiBlitz3.ab3@2155>       MOVE.b (a0)+,(a1)+
00020AD8 <AmiBlitz3.ab3@2156>     BNE 'l1
00020ADA <AmiBlitz3.ab3@2157>     MOVE.l (a7)+,a0
00020ADC <AmiBlitz3.ab3@2160>     MOVE.l (a0),d0
00020AE0 <AmiBlitz3.ab3@2161> BRA 'lr1
00020AE8 <AmiBlitz3.ab3@2164>   BTST #$7,make_smallestcode
00020AEC <AmiBlitz3.ab3@2165>   BEQ.b JL_0_3844                                           ;optimize for executable
00020AF2 <AmiBlitz3.ab3@2166>   CLR.l morememadd
00020AF6 <AmiBlitz3.ab3@2168>   BSR.w alloxadj
00020AFA <AmiBlitz3.ab3@2169>   BEQ.w JL_0_388A
00020AFE <AmiBlitz3.ab3@2172>   BSR.w compileall
00020B04 <AmiBlitz3.ab3@2173>   ADDQ.w #1,pass
00020B0A <AmiBlitz3.ab3@2176>   MOVE.w dontwrite,D1
00020B0E <AmiBlitz3.ab3@2177>   BEQ.w JL_0_38A2
00020B12 <AmiBlitz3.ab3@2197> BRA.w JL_0_3896
00020B1A <AmiBlitz3.ab3@2208>   MOVE.w #$FFFF,anyerrs
00020B1E <AmiBlitz3.ab3@2209> BRA.w JL_0_38A2
00020B22 <AmiBlitz3.ab3@2212>   BSR.w alloxinc                                          ;increase all by 50%
00020B26 <AmiBlitz3.ab3@2213>   BEQ.w Aclearallvars
00020B2A <AmiBlitz3.ab3@2214> BRA.w JL_0_3824
00020B2E <AmiBlitz3.ab3@2226> BRA.w JL_0_38A6                                            ;???????
00020B34 <AmiBlitz3.ab3@2230>   JSR freereps
00020B3A <AmiBlitz3.ab3@2231>   JSR freesels
00020B40 <AmiBlitz3.ab3@2232>   JSR AJL_0_6DF2
00020B46 <AmiBlitz3.ab3@2233>   JSR freepends
00020B4C <AmiBlitz3.ab3@2234>   JSR freeifs
00020B52 <AmiBlitz3.ab3@2235>   JSR AJL_0_C188
00020B58 <AmiBlitz3.ab3@2236>   JSR AJL_0_C15C
00020B5E <AmiBlitz3.ab3@2237>   JSR AJL_0_D9BC
00020B64 <AmiBlitz3.ab3@2240> JMP cleartemplabel
00020B68 <AmiBlitz3.ab3@2243> mempool2:  Dc.l 0
00020B6E <AmiBlitz3.ab3@2247>   JSR Aclearcache
00020B76 <AmiBlitz3.ab3@2249>   BTST #$7,use_debugger
00020B7A <AmiBlitz3.ab3@2251>   BNE 'debugon
00020B80 <AmiBlitz3.ab3@2252>   CLR.w debugmode
00020B84 <AmiBlitz3.ab3@2253> BRA.b 'debugoff
00020B8A <AmiBlitz3.ab3@2256>   SNE debugmode
00020BC2 <AmiBlitz3.ab3@2261>   !ComData_SetB{comByte_DebugMode,debugmode}
00020BC8 <AmiBlitz3.ab3@2263>   LEA regtable,a0
00020BCA <AmiBlitz3.ab3@2264>   MOVEQ #10,d0
00020BCC <AmiBlitz3.ab3@2267>     CLR.l (a0)+
00020BD0 <AmiBlitz3.ab3@2268>   DBF d0,'l1
00020BD6 <AmiBlitz3.ab3@2270>   LEA includetemp2,a0
00020BD8 <AmiBlitz3.ab3@2271>   CLR.b (a0)
00020BE2 <AmiBlitz3.ab3@2272>   MOVE.l #7,maxregs
00020BE8 <AmiBlitz3.ab3@2273>   CLR.w debugnest
00020BEE <AmiBlitz3.ab3@2274>   CLR.b funcparloop
00020BF4 <AmiBlitz3.ab3@2275>   CLR.b nostringopt
00020BFA <AmiBlitz3.ab3@2276>   CLR.b firsttime
00020C00 <AmiBlitz3.ab3@2277>   CLR.l lastdestpointer
00020C06 <AmiBlitz3.ab3@2278>   CLR.l lastwritedat
00020C0C <AmiBlitz3.ab3@2279>   CLR.l prevwritedat
00020C12 <AmiBlitz3.ab3@2280>   CLR.l includeline
00020C18 <AmiBlitz3.ab3@2281>   CLR.b incnif
00020C1E <AmiBlitz3.ab3@2282>   CLR.b formode
00020C24 <AmiBlitz3.ab3@2283>   CLR.b funccall
00020C2A <AmiBlitz3.ab3@2284>   CLR.w objectcount
00020C30 <AmiBlitz3.ab3@2285>   CLR.b resdisable
00020C36 <AmiBlitz3.ab3@2286>   CLR.b developobject
00020C3C <AmiBlitz3.ab3@2287>   CLR.b optistring
00020C42 <AmiBlitz3.ab3@2288>   CLR.b optistring2
00020C48 <AmiBlitz3.ab3@2289>   CLR.b optiarray
00020C4E <AmiBlitz3.ab3@2290>   CLR.b quickadd
00020C54 <AmiBlitz3.ab3@2291>   CLR.w newmode
00020C5A <AmiBlitz3.ab3@2292>   CLR.w mode
00020C60 <AmiBlitz3.ab3@2293>   CLR.w string1
00020C66 <AmiBlitz3.ab3@2294>   CLR.b fastfunc
00020C6C <AmiBlitz3.ab3@2295>   CLR.w load_var_size
00020C72 <AmiBlitz3.ab3@2296>   CLR.w load_var_reg
00020C78 <AmiBlitz3.ab3@2297>   CLR.l load_var_addr
00020C7E <AmiBlitz3.ab3@2298>   CLR.w imm_size
00020C84 <AmiBlitz3.ab3@2299>   CLR.w imm_reg
00020C8A <AmiBlitz3.ab3@2300>   CLR.l imm_addr
00020C90 <AmiBlitz3.ab3@2301>   CLR.b _dcb
00020C96 <AmiBlitz3.ab3@2302>   CLR.l nohunkoffset
00020C9C <AmiBlitz3.ab3@2303>   CLR.b peekaddrsize
00020CA2 <AmiBlitz3.ab3@2304>   CLR.b typecheck
00020CA8 <AmiBlitz3.ab3@2305>   CLR.b declare2
00020CAE <AmiBlitz3.ab3@2306>   CLR.b declare
00020CB4 <AmiBlitz3.ab3@2307>   CLR.l myoline                                          ;check
00020CBA <AmiBlitz3.ab3@2308>   CLR.l myline                                          ;check
00020CC0 <AmiBlitz3.ab3@2309>   CLR.b newvariable
00020CC6 <AmiBlitz3.ab3@2310>   CLR.b saved0
00020CCC <AmiBlitz3.ab3@2311>   CLR.l bsssize
00020CD2 <AmiBlitz3.ab3@2312>   CLR.l chipsize
00020CD8 <AmiBlitz3.ab3@2313>   CLR.b infunctioncode
00020CDE <AmiBlitz3.ab3@2314>   CLR.l errorcounter
00020CE8 <AmiBlitz3.ab3@2315>   MOVE.l #-1,bssstart
00020CF2 <AmiBlitz3.ab3@2316>   MOVE.l #-1,bssend
00020CFC <AmiBlitz3.ab3@2317>   MOVE.l #-1,chipstart
00020D06 <AmiBlitz3.ab3@2318>   MOVE.l #-1,chipend
00020D0E <AmiBlitz3.ab3@2319>   MOVE.w #0,bssmode
00020D14 <AmiBlitz3.ab3@2320>   CLR.w a2offset
00020D1A <AmiBlitz3.ab3@2321>   CLR.w fast
00020D20 <AmiBlitz3.ab3@2322>   CLR.w fpu
00020D26 <AmiBlitz3.ab3@2323>   CLR.b iee
00020D2C <AmiBlitz3.ab3@2324>   CLR.w newsyntax
00020D30 <AmiBlitz3.ab3@2325>   BSR.w JL_0_38A6
00020D36 <AmiBlitz3.ab3@2326>   JSR AJL_0_7962
00020D3C <AmiBlitz3.ab3@2327>   JSR frallvars
00020D42 <AmiBlitz3.ab3@2328>   JSR fralltypes
00020D48 <AmiBlitz3.ab3@2329>   JSR freemacs
00020D4E <AmiBlitz3.ab3@2330>   JSR clearfunctionlist
00020D54 <AmiBlitz3.ab3@2331>   TST.w pass
00020D5A <AmiBlitz3.ab3@2333>   JSR clearlabels
00020D60 <AmiBlitz3.ab3@2334>   JSR clearhash
00020D66 <AmiBlitz3.ab3@2337>   LEA devo,a0
00020D6A <AmiBlitz3.ab3@2338>   MOVEM.l a0-a6/d0-d7,-(a7)
00020D70 <AmiBlitz3.ab3@2339>   LEA ptr_parameterstore,a1
00020D72 <AmiBlitz3.ab3@2342>     MOVE.b (a0)+,(a1)+
00020D76 <AmiBlitz3.ab3@2343>   BNE 'l1b
00020D78 <AmiBlitz3.ab3@2344>   MOVEQ #13,d2
00020D7E <AmiBlitz3.ab3@2345>   JSR findlabel2
00020D82 <AmiBlitz3.ab3@2346>   BNE 'd
00020D86 <AmiBlitz3.ab3@2347>   CLR.l 8(a2)
00020D8A <AmiBlitz3.ab3@2350>   MOVEM.l (a7)+,a0-a6/d0-d7
00020DB4 <AmiBlitz3.ab3@2351>   !basic
00020E28 <AmiBlitz3.ab3@2352>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00020E46 <AmiBlitz3.ab3@2353>   !asm
00020E4C <AmiBlitz3.ab3@2354>   CLR.b returncode
00020E52 <AmiBlitz3.ab3@2355> JMP freeprocvs
00020E58 <AmiBlitz3.ab3@2359>   MOVE.l #bssstore-labelhash,d0
00020E5A <AmiBlitz3.ab3@2360>   ASR.l #2,d0
00020E60 <AmiBlitz3.ab3@2361>   LEA labelhash,a0
00020E62 <AmiBlitz3.ab3@2364>     CLR.l (a0)+
00020E64 <AmiBlitz3.ab3@2365>     SUBQ.l #1,d0
00020E68 <AmiBlitz3.ab3@2366>   BNE.s 'l10
00020E6E <AmiBlitz3.ab3@2368>   LEA labelbase,a1
00020E70 <AmiBlitz3.ab3@2369>   MOVE.l (a1),d0
00020E74 <AmiBlitz3.ab3@2370>   BEQ 'l11
00020E76 <AmiBlitz3.ab3@2373>     MOVE.l d0,a1
00020E7A <AmiBlitz3.ab3@2374>     TST.l 4(a1)
00020E7E <AmiBlitz3.ab3@2375>     BEQ 'l29
00020E82 <AmiBlitz3.ab3@2376>     LEA $13(a1),a0
00020E84 <AmiBlitz3.ab3@2377>     MOVEQ #0,d0
00020E86 <AmiBlitz3.ab3@2378>     MOVEQ #0,d1
00020E88 <AmiBlitz3.ab3@2381>       MOVE.b (a0)+,d1
00020E8C <AmiBlitz3.ab3@2382>       BEQ 'l12
00020E92 <AmiBlitz3.ab3@2383>       !hashalgo
00020E96 <AmiBlitz3.ab3@2384> BRA 'l13
00020E9C <AmiBlitz3.ab3@2387>     LEA labelhash,a0
00020EA2 <AmiBlitz3.ab3@2388>     AND.l #hashsize,d0
00020EA4 <AmiBlitz3.ab3@2389>      ASL.l #2,d0
00020EA8 <AmiBlitz3.ab3@2390>     MOVE.l 0(a0,d0),d1                                     ;*4
00020EAC <AmiBlitz3.ab3@2391>     MOVE.l d1,$c(a1)
00020EB0 <AmiBlitz3.ab3@2392>     MOVE.l a1,0(a0,d0)
00020EB2 <AmiBlitz3.ab3@2395>     MOVE.l (a1),d0
00020EB6 <AmiBlitz3.ab3@2396>   BNE 'l21
00020EB8 <AmiBlitz3.ab3@2399> RTS
00020EBE <AmiBlitz3.ab3@2403>   MOVEA.l lastrestype,A0
00020EC0 <AmiBlitz3.ab3@2404>   MOVEA.l (A0),A2
00020EC2 <AmiBlitz3.ab3@2405>   CLR.l (A0)
00020EC8 <AmiBlitz3.ab3@2406> JMP freetypes
00020ECE <AmiBlitz3.ab3@2410>   MOVEA.l varbase,A3
00020ED4 <AmiBlitz3.ab3@2411>   CLR.l varbase
00020ED8 <AmiBlitz3.ab3@2414>   CMPA.w #$0,A3
00020EDC <AmiBlitz3.ab3@2415>   BEQ.w 'l20
00020EDE <AmiBlitz3.ab3@2416>   MOVEA.l A3,A1
00020EE0 <AmiBlitz3.ab3@2417>   MOVEA.l (A3),A3
00020EE2 <AmiBlitz3.ab3@2418>   MOVEQ.l #$00,D0
00020EE6 <AmiBlitz3.ab3@2419>   MOVE.b $E+4(A1),D0
00020EEC <AmiBlitz3.ab3@2420>   MOVEA.l _execbase,A6
00020EF2 <AmiBlitz3.ab3@2421>   MOVE.l mempool2,a0
00020EF6 <AmiBlitz3.ab3@2422>   JSR _FreePooled(A6)
00020EFA <AmiBlitz3.ab3@2423> BRA.w 'l10
00020EFC <AmiBlitz3.ab3@2426> RTS
00020F02 <AmiBlitz3.ab3@2431>   LEA firstiff,A2
00020F04 <AmiBlitz3.ab3@2432>   MOVEQ.l #$0E,D2
00020F0A <AmiBlitz3.ab3@2433> JMP freeslist
00020F0C <AmiBlitz3.ab3@2439> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00020F0E <AmiBlitz3.ab3@2440> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00020F14 <AmiBlitz3.ab3@2444>   CLR.w inmacro
00020F1A <AmiBlitz3.ab3@2445>   ADDQ.l #1,globallinecount
00020F20 <AmiBlitz3.ab3@2446>   CLR.b nostringopt
00020F24 <AmiBlitz3.ab3@2447>   BSR.w JL_0_3CA4
00020F2A <AmiBlitz3.ab3@2448>   CLR.w instringon
00020F30 <AmiBlitz3.ab3@2451>   TST.w ininclude
00020F34 <AmiBlitz3.ab3@2452>   BEQ.w JL_0_39B0
00020F3A <AmiBlitz3.ab3@2453>   ADDQ.l #1,includeline
00020F40 <AmiBlitz3.ab3@2454>     JSR ab3_WriteDebugFile
00020F46 <AmiBlitz3.ab3@2455>   JSR AJL_0_C09E
00020F4A <AmiBlitz3.ab3@2456>   BEQ.w JL_0_39B0
00020F50 <AmiBlitz3.ab3@2457>   MOVE.w ininclude,D0
00020F54 <AmiBlitz3.ab3@2458>   CMP.w #$4,D0
00020F58 <AmiBlitz3.ab3@2459>   BCC.w JL_0_39AC
00020F5A <AmiBlitz3.ab3@2460>   ADD.w D0,D0
00020F60 <AmiBlitz3.ab3@2461>   LEA progress_per_line,A0
00020F64 <AmiBlitz3.ab3@2462>   MOVE.w $0(A0,D0.W),D2
00020F68 <AmiBlitz3.ab3@2463>   CMP.w progressbar_width(PC),D2
00020F6C <AmiBlitz3.ab3@2464>   BCC.w JL_0_39AC
00020F70 <AmiBlitz3.ab3@2465>   ADDQ.w #1,$0(A0,D0.W)
00020F72 <AmiBlitz3.ab3@2466>   LSR.w #1,D0
00020F74 <AmiBlitz3.ab3@2467>   MOVE.l d0,d1
00020F76 <AmiBlitz3.ab3@2468>   EXT.l d1
00020F78 <AmiBlitz3.ab3@2469>   MOVE.l d2,d0
00020F7A <AmiBlitz3.ab3@2470>   EXT.l d0                                                 ;d0=x,d1=y
00020F80 <AmiBlitz3.ab3@2472>   JSR update_progressbar
00020F82 <AmiBlitz3.ab3@2475>   MOVEQ.l #-$01,D0
00020F84 <AmiBlitz3.ab3@2476> RTS
00020F8A <AmiBlitz3.ab3@2480>   MOVE.l titleat,D0
00020F8C <AmiBlitz3.ab3@2481>   MOVEQ.l #$00,D1
00020F92 <AmiBlitz3.ab3@2482>   MOVE.w progress_per_line,D1
00020F94 <AmiBlitz3.ab3@2483>   ADD.l D1,D0
00020F96 <AmiBlitz3.ab3@2484>   MOVE.l D0,D1
00020F98 <AmiBlitz3.ab3@2485>   SWAP D0
00020F9E <AmiBlitz3.ab3@2486>   CMP.w titleat,D0
00020FA2 <AmiBlitz3.ab3@2487>    BEQ.w JL_0_39E4
00020FA4 <AmiBlitz3.ab3@2491>   EXT.l d0
00020FA6 <AmiBlitz3.ab3@2492>   MOVE.l d1,-(a7)
00020FAE <AmiBlitz3.ab3@2495>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00020FB4 <AmiBlitz3.ab3@2496>   JSR update_progressbar
00020FBC <AmiBlitz3.ab3@2497>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00020FBE <AmiBlitz3.ab3@2501>   MOVE.l (a7)+,d1
00020FC4 <AmiBlitz3.ab3@2504>   MOVE.l D1,titleat
00020FCA <AmiBlitz3.ab3@2505>   ADDQ.l #1,linenumat
00020FD0 <AmiBlitz3.ab3@2506>   CLR.w linedone
00020FD6 <AmiBlitz3.ab3@2507>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00020FDC <AmiBlitz3.ab3@2509>   SUBQ.l #1,numlines2
00020FE0 <AmiBlitz3.ab3@2510>    BEQ.w JL_0_3A12
00020FE6 <AmiBlitz3.ab3@2511>   MOVEA.l sourceline,A0
00020FE8 <AmiBlitz3.ab3@2512>   MOVEA.l (A0),A0
00020FEE <AmiBlitz3.ab3@2513>   MOVE.l A0,sourceline
00020FF2 <AmiBlitz3.ab3@2514>   LEA $9(A0),A5
00020FF4 <AmiBlitz3.ab3@2517> RTS
00020FF6 <AmiBlitz3.ab3@2521>   MOVE.w D0,-(A7)
00020FF8 <AmiBlitz3.ab3@2522>   MOVEQ.l #$03,D0
00020FFA <AmiBlitz3.ab3@2525>     MOVE.w D1,D2
00020FFE <AmiBlitz3.ab3@2526>     ANDI.w #$F,D2
00021002 <AmiBlitz3.ab3@2527>     ADDI.w #$30,D2
00021006 <AmiBlitz3.ab3@2528>     CMP.w #$3A,D2
0002100A <AmiBlitz3.ab3@2529>      BCS.w JL_0_3A2C
0002100C <AmiBlitz3.ab3@2530>     ADDQ.w #7,D2
00021010 <AmiBlitz3.ab3@2533>     MOVE.b D2,$0(A0,D0.W)
00021012 <AmiBlitz3.ab3@2534>     LSR.w #4,D1
00021016 <AmiBlitz3.ab3@2535>   DBF D0,JL_0_3A18
00021018 <AmiBlitz3.ab3@2537>   MOVE.w (A7)+,D0
0002101A <AmiBlitz3.ab3@2538> RTS
00021020 <AmiBlitz3.ab3@2548>   MOVE.w skipcode,D1
00021024 <AmiBlitz3.ab3@2549>   BNE.w JL_0_3A46
00021026 <AmiBlitz3.ab3@2550> RTS
00021028 <AmiBlitz3.ab3@2553>   MOVE.l A5,-(A7)
0002102A <AmiBlitz3.ab3@2554>   MOVEQ.l #$3A,D1                                          ;':'
0002102C <AmiBlitz3.ab3@2555>   MOVEQ.l #$21,D2                                          ;'!'
0002102E <AmiBlitz3.ab3@2556>   MOVEQ.l #$3B,D3                                          ;';'
00021030 <AmiBlitz3.ab3@2557>   MOVEQ.l #$22,D4                                          ;'"'
00021032 <AmiBlitz3.ab3@2560>   MOVE.b (A5)+,D0
00021036 <AmiBlitz3.ab3@2561>    BEQ.w JL_0_3CA0
0002103A <AmiBlitz3.ab3@2562>    BPL.w JL_0_3A60
0002103C <AmiBlitz3.ab3@2563>   MOVE.b (A5)+,D0
00021040 <AmiBlitz3.ab3@2564> BRA.w JL_0_3A50
00021042 <AmiBlitz3.ab3@2567>   CMP.b D4,D0
00021046 <AmiBlitz3.ab3@2568>    BNE.w JL_0_3A82
00021048 <AmiBlitz3.ab3@2571>   MOVE.b (A5)+,D0
0002104C <AmiBlitz3.ab3@2572>    BEQ.w notqerr
00021050 <AmiBlitz3.ab3@2578>   CMP.b #$22,D0
00021054 <AmiBlitz3.ab3@2579>    BNE.w JL_0_3A66
00021058 <AmiBlitz3.ab3@2580> BRA.w JL_0_3A50
0002105A <AmiBlitz3.ab3@2583>   CMP.b D1,D0
0002105E <AmiBlitz3.ab3@2584>    BEQ.w JL_0_3CA0
00021060 <AmiBlitz3.ab3@2585>   CMP.b D3,D0
00021064 <AmiBlitz3.ab3@2586>    BEQ.w JL_0_3CA0
00021066 <AmiBlitz3.ab3@2589>   CMP.b D2,D0
0002106A <AmiBlitz3.ab3@2590>    BNE.w JL_0_3A50
00021072 <AmiBlitz3.ab3@2591>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
00021074 <AmiBlitz3.ab3@2592>   MOVEA.l A5,A3
0002107A <AmiBlitz3.ab3@2593>    JSR getparameter2
0002107E <AmiBlitz3.ab3@2594>    BNE.w JL_0_3AAC
00021084 <AmiBlitz3.ab3@2595> JMP syntaxerr
0002108E <AmiBlitz3.ab3@2600>    MOVE.w oldqflag,instringon
00021094 <AmiBlitz3.ab3@2601>   MOVEA.l lastsourcepos,A5
0002109A <AmiBlitz3.ab3@2602>    JSR findmac                                             ;find macro
0002109E <AmiBlitz3.ab3@2603>    BEQ.w JL_0_3ABE
000210A4 <AmiBlitz3.ab3@2604> JMP nomacerr
000210AA <AmiBlitz3.ab3@2607>   TST.b debugmode
000210AE <AmiBlitz3.ab3@2608>   BEQ 'sk1
000210B2 <AmiBlitz3.ab3@2609>   MOVE.w #$4e71,d1
000210B8 <AmiBlitz3.ab3@2610>   JSR writeword
000210BA <AmiBlitz3.ab3@2611>   MOVE.l a5,-(a7)
000210BC <AmiBlitz3.ab3@2612>   MOVE.l a3,a5
000210BE <AmiBlitz3.ab3@2613>   SUBQ.l #1,a5
000210C6 <AmiBlitz3.ab3@2614>   MOVE.w #$0,inmacro
000210CA <AmiBlitz3.ab3@2615>   BSR debugstuffa
000210D2 <AmiBlitz3.ab3@2616>   MOVE.w #$FFFF,inmacro
000210D4 <AmiBlitz3.ab3@2617>   MOVE.l (a7)+,a5
000210D8 <AmiBlitz3.ab3@2618>   MOVE.w #$4e71,d1
000210DE <AmiBlitz3.ab3@2619>   JSR writeword
000210E0 <AmiBlitz3.ab3@2622>   MOVEA.l A5,A4
000210E4 <AmiBlitz3.ab3@2625>    CMP.b #" ",(a4)+
000210E8 <AmiBlitz3.ab3@2626>     BEQ 'l5a
000210EA <AmiBlitz3.ab3@2627>      SUBQ.l#1,a4
000210EE <AmiBlitz3.ab3@2628>      CMP.b #",",(a4)
000210F2 <AmiBlitz3.ab3@2629>     BEQ JL_0_3AEA
000210F4 <AmiBlitz3.ab3@2632>   MOVEQ.l #$00,D4
000210FA <AmiBlitz3.ab3@2633>   TST.b newsyntax
000210FE <AmiBlitz3.ab3@2634>   BEQ 'l10b
00021102 <AmiBlitz3.ab3@2635>   MOVEM.l a0/d0,-(a7)
00021106 <AmiBlitz3.ab3@2636>   MOVE.l 4(a2),a0
0002110A <AmiBlitz3.ab3@2637>   MOVE.w 8(a2),d0
0002110E <AmiBlitz3.ab3@2640>   CMP.b #"`",(a0)+
00021112 <AmiBlitz3.ab3@2641>   BEQ 'x1
00021114 <AmiBlitz3.ab3@2642>   SUBQ.w #1,d0
00021118 <AmiBlitz3.ab3@2643>   BNE 'x2
0002111C <AmiBlitz3.ab3@2644> BRA 'x3
00021120 <AmiBlitz3.ab3@2647>   MOVEM.l (a7)+,a0/d0
00021124 <AmiBlitz3.ab3@2648> BRA 'l10
00021128 <AmiBlitz3.ab3@2651>   MOVEM.l (a7)+,a0/d0
0002112C <AmiBlitz3.ab3@2652> BRA JL_0_3AEA
00021130 <AmiBlitz3.ab3@2655>   CMPI.b #"{",(A4)
00021134 <AmiBlitz3.ab3@2656>    BNE.w JL_0_3AEA
00021136 <AmiBlitz3.ab3@2660>   ADDQ.l #1,a4
0002113A <AmiBlitz3.ab3@2663>     CMP.b #" ",(a4)
0002113E <AmiBlitz3.ab3@2664>     BEQ 'l5
00021142 <AmiBlitz3.ab3@2665>     MOVEM.l a0/d0,-(a7)
00021148 <AmiBlitz3.ab3@2666>     CLR.b exmac
0002114E <AmiBlitz3.ab3@2667>     LEA chartab,a0
00021150 <AmiBlitz3.ab3@2668>     MOVEQ #0,d0
00021152 <AmiBlitz3.ab3@2669>     MOVE.b (a4),d0
00021156 <AmiBlitz3.ab3@2670>     BMI 'm1
0002115A <AmiBlitz3.ab3@2671>     TST.b 0(a0,d0)
0002115E <AmiBlitz3.ab3@2672>     BEQ 'm1
00021164 <AmiBlitz3.ab3@2673>     TST.b newsyntax
00021168 <AmiBlitz3.ab3@2674>     BEQ 'ns1
0002116C <AmiBlitz3.ab3@2675>     CMP.b #"#",d0
00021170 <AmiBlitz3.ab3@2676>     BEQ 'm1
00021174 <AmiBlitz3.ab3@2677>     CMP.b #"$",d0
00021178 <AmiBlitz3.ab3@2678>     BEQ 'm1
0002117C <AmiBlitz3.ab3@2679>     CMP.b #"-",d0
00021180 <AmiBlitz3.ab3@2680>     BEQ 'm1
00021184 <AmiBlitz3.ab3@2683>   CMP.b #",",d0
00021188 <AmiBlitz3.ab3@2684>     BEQ 'm1
0002118C <AmiBlitz3.ab3@2685>     CMP.b #"{",d0
00021190 <AmiBlitz3.ab3@2686>     BNE 'm1b
00021192 <AmiBlitz3.ab3@2687>     ADDQ.l #1,a4
00021196 <AmiBlitz3.ab3@2688> BRA 'm1
0002119C <AmiBlitz3.ab3@2691>   TST.b newsyntax
000211A0 <AmiBlitz3.ab3@2692>     BEQ 'm1
000211A8 <AmiBlitz3.ab3@2693>     MOVE.b #1,exmac
000211AC <AmiBlitz3.ab3@2696>   MOVEM.l (a7)+,a0/d0
000211B2 <AmiBlitz3.ab3@2697>     TST.b exmac
000211B6 <AmiBlitz3.ab3@2698>     BNE JL_0_3AEA
000211B8 <AmiBlitz3.ab3@2705>   TST.b (a4)
000211BC <AmiBlitz3.ab3@2706>   BEQ JL_0_3AEA
000211C2 <AmiBlitz3.ab3@2709>   MOVEA.l ptr_macrobuffer_begin,A0
000211C4 <AmiBlitz3.ab3@2712>   ADDQ.w #1,D4
000211C6 <AmiBlitz3.ab3@2713>   MOVE.l A4,(A0)
000211CA <AmiBlitz3.ab3@2714>   CLR.w 4(a0)
000211CE <AmiBlitz3.ab3@2715>    BSR.w JL_0_3CC6
000211D0 <AmiBlitz3.ab3@2717>   ADDQ.l #4,a0
000211D2 <AmiBlitz3.ab3@2721>   SUBQ.w #1,(a0)+
000211D6 <AmiBlitz3.ab3@2722>   CMP.b #$7D,D0
000211DA <AmiBlitz3.ab3@2723>   BEQ 'l10
000211DC <AmiBlitz3.ab3@2724>   TST.b d0
000211E0 <AmiBlitz3.ab3@2725>   BEQ 'l10
000211E4 <AmiBlitz3.ab3@2726> BRA JL_0_3AD0
000211EA <AmiBlitz3.ab3@2730>   CLR.l sourceline3
000211EC <AmiBlitz3.ab3@2731>   MOVEA.l A4,A5
000211F2 <AmiBlitz3.ab3@2734>   MOVE.w D4,numarg
000211F8 <AmiBlitz3.ab3@2741>   MOVE.l #$01,D1
000211FE <AmiBlitz3.ab3@2742>   MOVEA.l _execbase,A6
00021204 <AmiBlitz3.ab3@2743>   MOVE.l mempool,a0
0002120A <AmiBlitz3.ab3@2744>   MOVE.l macrobuffer_size,D0
00021210 <AmiBlitz3.ab3@2745>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021214 <AmiBlitz3.ab3@2746>   BGE 'l1m
0002121A <AmiBlitz3.ab3@2747>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021220 <AmiBlitz3.ab3@2748>   MOVE.l d0,macrobuffer_size
00021224 <AmiBlitz3.ab3@2751>   JSR _AllocPooled(a6)
0002122E <AmiBlitz3.ab3@2753>   MOVE.l myline,myoline
00021230 <AmiBlitz3.ab3@2756>   ADDQ.l #1,d0
00021236 <AmiBlitz3.ab3@2757>   MOVE.l D0,myline
00021238 <AmiBlitz3.ab3@2758>   MOVEA.l D0,A1
0002123E <AmiBlitz3.ab3@2759>   MOVE.b #":",-1(a1)
00021240 <AmiBlitz3.ab3@2760>   MOVEA.l A1,A6
00021246 <AmiBlitz3.ab3@2761>   ADDA.l macrobuffer_size,A6
00021248 <AmiBlitz3.ab3@2762>   MOVEA.l (A7)+,A0
0002124A <AmiBlitz3.ab3@2765>   CMPA.l A6,A1
0002124E <AmiBlitz3.ab3@2766>    BCC.w mbovererr
00021250 <AmiBlitz3.ab3@2767>   MOVE.b (A0)+,(a1)+
00021252 <AmiBlitz3.ab3@2768>   CMPA.l A3,A0
00021256 <AmiBlitz3.ab3@2769>    BCS.w JL_0_3B1E
00021258 <AmiBlitz3.ab3@2770>   SUBQ.w #1,A1
0002125C <AmiBlitz3.ab3@2771>   MOVE.w $8(A2),D1
00021260 <AmiBlitz3.ab3@2772>    BEQ.w JL_0_3C70
00021268 <AmiBlitz3.ab3@2773>   MOVE.w $A(A2),macnum
0002126C <AmiBlitz3.ab3@2774>   ADDQ.w #1,$A(A2)
00021270 <AmiBlitz3.ab3@2775>   MOVEA.l $4(A2),A2
00021272 <AmiBlitz3.ab3@2776>   SUBQ.w #1,D1
00021278 <AmiBlitz3.ab3@2777>   CLR.b firstmline
0002127A <AmiBlitz3.ab3@2780>     MOVEQ.l #$00,D0
0002127C <AmiBlitz3.ab3@2781>     MOVE.b (A2)+,D0
00021282 <AmiBlitz3.ab3@2782>     TST.b firstmline
00021286 <AmiBlitz3.ab3@2783>     BNE 'c1
0002128A <AmiBlitz3.ab3@2784>     CMP.b #$22,d0
0002128E <AmiBlitz3.ab3@2785>     BNE 's1
00021296 <AmiBlitz3.ab3@2786>     MOVE.b #1,firstmline
0002129A <AmiBlitz3.ab3@2789>     CMP.b #":",d0
0002129E <AmiBlitz3.ab3@2790>     BNE 'm1
000212A6 <AmiBlitz3.ab3@2791>     MOVE.b #1,firstmline
000212AA <AmiBlitz3.ab3@2794>     CMP.b #";",d0
000212AE <AmiBlitz3.ab3@2795>     BNE 'c1
000212B0 <AmiBlitz3.ab3@2798>     SUBQ.w #1,d1                                           ;filter out comment
000212B2 <AmiBlitz3.ab3@2799>     MOVE.b (a2)+,d0
000212B8 <AmiBlitz3.ab3@2800>     CMP.w #":@",-1(a2)
000212BC <AmiBlitz3.ab3@2801>     BEQ 'c2
000212BE <AmiBlitz3.ab3@2802>     TST.w d1
000212C2 <AmiBlitz3.ab3@2803>     BNE 'l1
000212C6 <AmiBlitz3.ab3@2804>   BRA JL_0_3C6C
000212CC <AmiBlitz3.ab3@2807>     CMP.b #":",1(a2)
000212D0 <AmiBlitz3.ab3@2808>       BNE 'l1
000212D2 <AmiBlitz3.ab3@2809>       ADDQ #2,a2
000212D4 <AmiBlitz3.ab3@2810>       SUBQ #3,d1
000212D6 <AmiBlitz3.ab3@2811>       MOVE.b (a2)+,d0
000212DE <AmiBlitz3.ab3@2812>       MOVE.b #1,firstmline
000212E2 <AmiBlitz3.ab3@2815>     CMP.b #"`",D0
000212E6 <AmiBlitz3.ab3@2816>      BNE.w JL_0_3C56
000212E8 <AmiBlitz3.ab3@2817>     SUBQ.w #1,D1
000212EA <AmiBlitz3.ab3@2818>     MOVE.b (A2)+,D0
000212EE <AmiBlitz3.ab3@2819>     CMP.w #$7B,D0
000212F2 <AmiBlitz3.ab3@2820>      BEQ.w JL_0_3BB6
000212F6 <AmiBlitz3.ab3@2821>     CMP.w #$40,D0
000212FA <AmiBlitz3.ab3@2822>      BNE.w JL_0_3B82
000212FC <AmiBlitz3.ab3@2823>     MOVEQ.l #$00,D2
00021302 <AmiBlitz3.ab3@2824>     MOVE.w macnum,D2
00021304 <AmiBlitz3.ab3@2825>     MOVEA.l A1,A0
00021306 <AmiBlitz3.ab3@2826>     MOVE.w D1,-(A7)
0002130C <AmiBlitz3.ab3@2827>      JSR makelong
0002130E <AmiBlitz3.ab3@2828>     MOVEA.l A0,A1
00021310 <AmiBlitz3.ab3@2829>     MOVE.w (A7)+,D1
00021314 <AmiBlitz3.ab3@2830>   BRA.w JL_0_3C6C
00021318 <AmiBlitz3.ab3@2833>     ORI.w #$20,D0
0002131C <AmiBlitz3.ab3@2834>     CMP.w #$7A,D0
00021320 <AmiBlitz3.ab3@2835>      BCS.w JL_0_3B94
00021326 <AmiBlitz3.ab3@2836>   JMP ilconsterr
0002132A <AmiBlitz3.ab3@2839>     SUBI.w #$30,D0
0002132E <AmiBlitz3.ab3@2840>     CMP.w #$A,D0
00021332 <AmiBlitz3.ab3@2841>      BCS.w JL_0_3BF2
00021336 <AmiBlitz3.ab3@2842>     SUBI.w #$27,D0
0002133A <AmiBlitz3.ab3@2843>     CMP.w #$A,D0
0002133E <AmiBlitz3.ab3@2844>      BCC.w JL_0_3BB2
00021344 <AmiBlitz3.ab3@2845>   JMP ilconsterr
00021348 <AmiBlitz3.ab3@2848>   BRA.w JL_0_3BF2
0002134A <AmiBlitz3.ab3@2851>     MOVE.l A5,-(A7)
0002134E <AmiBlitz3.ab3@2852>     MOVEM.l D1/A1-A2/A6,-(A7)
00021350 <AmiBlitz3.ab3@2853>     MOVEA.l A2,A5
00021356 <AmiBlitz3.ab3@2854>      JSR AJL_0_BF6E
0002135A <AmiBlitz3.ab3@2855>     CMP.w #$7D,D0
0002135E <AmiBlitz3.ab3@2856>      BEQ.w JL_0_3BD2
00021364 <AmiBlitz3.ab3@2857>   JMP syntaxerr
00021368 <AmiBlitz3.ab3@2860>     MOVEM.l (A7)+,D1/A1-A2/A6
0002136A <AmiBlitz3.ab3@2861>     MOVE.l A5,D2
0002136C <AmiBlitz3.ab3@2862>     SUB.l A2,D2
0002136E <AmiBlitz3.ab3@2863>     SUB.w D2,D1
00021370 <AmiBlitz3.ab3@2864>     MOVEA.l A5,A2
00021376 <AmiBlitz3.ab3@2865>     CLR.w instringon
00021378 <AmiBlitz3.ab3@2866>     MOVEA.l (A7)+,A5
0002137A <AmiBlitz3.ab3@2867>     MOVE.l D3,D0
0002137E <AmiBlitz3.ab3@2868>     BPL.w JL_0_3BF2
00021384 <AmiBlitz3.ab3@2869>   JMP ilconsterr
00021386 <AmiBlitz3.ab3@2872>     SUBQ.w #1,D0
0002138A <AmiBlitz3.ab3@2873>      BPL.w JL_0_3C20
00021390 <AmiBlitz3.ab3@2877>     MOVE.w numarg,D0
00021394 <AmiBlitz3.ab3@2878>     DIVU #$A,D0
00021398 <AmiBlitz3.ab3@2879>     ADDI.w #$30,D0
0002139A <AmiBlitz3.ab3@2880>     CMPA.l A6,A1
0002139E <AmiBlitz3.ab3@2881>      BCC.w mbovererr
000213A0 <AmiBlitz3.ab3@2882>     MOVE.b D0,(A1)+
000213A2 <AmiBlitz3.ab3@2883>     SWAP D0
000213A6 <AmiBlitz3.ab3@2884>     ADDI.w #$30,D0
000213A8 <AmiBlitz3.ab3@2885>     CMPA.l A6,A1
000213AC <AmiBlitz3.ab3@2886>      BCC.w mbovererr
000213AE <AmiBlitz3.ab3@2887>     MOVE.b D0,(A1)+
000213B2 <AmiBlitz3.ab3@2888>   BRA.w JL_0_3C6C
000213B8 <AmiBlitz3.ab3@2894>     CMP.w numarg,D0
000213BC <AmiBlitz3.ab3@2895>      BCC.w JL_0_3C6C
000213BE <AmiBlitz3.ab3@2896>     LSL.w #1,D0
000213C0 <AmiBlitz3.ab3@2897>     MOVE.w D0,D4
000213C2 <AmiBlitz3.ab3@2898>     LSL.w #1,D0
000213C4 <AmiBlitz3.ab3@2899>     ADD.w D4,D0
000213CA <AmiBlitz3.ab3@2900>     MOVEA.l ptr_macrobuffer_begin,A0
000213CC <AmiBlitz3.ab3@2901>     ADDA.w D0,A0
000213D0 <AmiBlitz3.ab3@2902>     MOVE.w $4(A0),D4
000213D4 <AmiBlitz3.ab3@2903>      BEQ.w JL_0_3C6C
000213D6 <AmiBlitz3.ab3@2904>     MOVEA.l (A0),A0
000213D8 <AmiBlitz3.ab3@2905>     SUBQ.w #1,D4
000213DA <AmiBlitz3.ab3@2908>       CMPA.l A6,A1
000213DE <AmiBlitz3.ab3@2909>        BCC.w mbovererr
000213E2 <AmiBlitz3.ab3@2910>       CMP.w #"@@",(a0)
000213E6 <AmiBlitz3.ab3@2911>        BNE 'l10
000213EC <AmiBlitz3.ab3@2912>       TST.w ininclude
000213F0 <AmiBlitz3.ab3@2913>        BNE errorjoin
000213F6 <AmiBlitz3.ab3@2916>       MOVE.l sourceline,a0
000213F8 <AmiBlitz3.ab3@2917>       MOVE.l (a0),a0
000213FE <AmiBlitz3.ab3@2918>       CMP.l #0,a0
00021402 <AmiBlitz3.ab3@2919>       BNE 'l11
00021404 <AmiBlitz3.ab3@2920>       MOVEQ #0,d0
0002140A <AmiBlitz3.ab3@2921>       JSR error
00021410 <AmiBlitz3.ab3@2924>       MOVE.l a0,sourceline
00021416 <AmiBlitz3.ab3@2925>       ADDQ.l #1,linenumat
0002141A <AmiBlitz3.ab3@2926>       LEA 9(a0),a0
0002141C <AmiBlitz3.ab3@2927>       MOVE.l a0,-(a7)
00021420 <AmiBlitz3.ab3@2930>       CMP.b #" ",(a0)+
00021424 <AmiBlitz3.ab3@2931>        BEQ 'l110
0002142A <AmiBlitz3.ab3@2932>       CMP.b #";",-1(a0)
0002142C <AmiBlitz3.ab3@2933>       MOVE.l (a7)+,a0
00021430 <AmiBlitz3.ab3@2934>        BEQ 'l111
00021432 <AmiBlitz3.ab3@2935>       SUBQ.l #1,d4
00021434 <AmiBlitz3.ab3@2938>       MOVE.b (A0)+,(A1)+
00021438 <AmiBlitz3.ab3@2939>     DBF D4,JL_0_3C46
0002143C <AmiBlitz3.ab3@2941>   BRA.w JL_0_3C6C
0002143E <AmiBlitz3.ab3@2944>     CMPA.l A6,A1
00021442 <AmiBlitz3.ab3@2945>      BCC.w mbovererr
00021444 <AmiBlitz3.ab3@2946>     MOVE.b D0,(A1)+
00021448 <AmiBlitz3.ab3@2947>      BPL.w JL_0_3C6C
0002144A <AmiBlitz3.ab3@2948>     CMPA.l A6,A1
0002144E <AmiBlitz3.ab3@2949>      BCC.w mbovererr
00021450 <AmiBlitz3.ab3@2950>     MOVE.b (A2)+,(A1)+
00021452 <AmiBlitz3.ab3@2951>     SUBQ.w #1,D1
00021456 <AmiBlitz3.ab3@2954>   DBF D1,JL_0_3B48
00021458 <AmiBlitz3.ab3@2964>   CMPA.l A6,A1
0002145C <AmiBlitz3.ab3@2965>    BCC.w mbovererr
0002145E <AmiBlitz3.ab3@2966>   MOVE.b (A5)+,(A1)+
00021462 <AmiBlitz3.ab3@2967>    BNE.w JL_0_3C70
00021468 <AmiBlitz3.ab3@2968>   MOVEA.l myline,A5
0002146E <AmiBlitz3.ab3@2969>   MOVE.l myoline,D0
00021472 <AmiBlitz3.ab3@2970>    BEQ.w JL_0_3C9C
00021474 <AmiBlitz3.ab3@2971>   SUBQ.l #1,d0
00021476 <AmiBlitz3.ab3@2972>   MOVEA.l D0,A1
0002147C <AmiBlitz3.ab3@2973>   MOVE.l macrobuffer_size,D0
00021482 <AmiBlitz3.ab3@2974>   MOVEA.l _execbase,A6
00021488 <AmiBlitz3.ab3@2975>   MOVE.l mempool,a0
0002148C <AmiBlitz3.ab3@2976>   JSR _FreePooled(A6)
00021490 <AmiBlitz3.ab3@2979> BRA.w JL_0_3A46
00021492 <AmiBlitz3.ab3@2982>   MOVEA.l (A7)+,A5
00021494 <AmiBlitz3.ab3@2983> RTS
0002149A <AmiBlitz3.ab3@2987>   MOVE.l myline,D0
0002149E <AmiBlitz3.ab3@2988>   BEQ.w JL_0_3CC4
000214A0 <AmiBlitz3.ab3@2989>   SUBQ.l #1,d0
000214A6 <AmiBlitz3.ab3@2990>   CLR.l myline
000214A8 <AmiBlitz3.ab3@2991>   MOVEA.l D0,A1
000214AE <AmiBlitz3.ab3@2992>   MOVE.l macrobuffer_size,D0
000214B4 <AmiBlitz3.ab3@2993>   MOVEA.l _execbase,A6
000214BA <AmiBlitz3.ab3@2994>   MOVE.l mempool,a0
000214BE <AmiBlitz3.ab3@2995> JMP _FreePooled(A6)
000214C0 <AmiBlitz3.ab3@2998> RTS
000214C2 <AmiBlitz3.ab3@3002>   MOVEQ.l #$00,D2
000214C6 <AmiBlitz3.ab3@3005>   ADDQ.w #1,4(a0)
000214C8 <AmiBlitz3.ab3@3006>    MOVE.b (A4)+,D0
000214CC <AmiBlitz3.ab3@3008>    BEQ exit1
000214D0 <AmiBlitz3.ab3@3009>    BPL.w JL_0_3CD8
000214D4 <AmiBlitz3.ab3@3010>   ADDQ.w #1,4(a0)
000214D6 <AmiBlitz3.ab3@3011>   ADDQ.w #1,A4
000214DA <AmiBlitz3.ab3@3012> BRA.w JL_0_3CC8
000214E0 <AmiBlitz3.ab3@3015>    TST.w instringon
000214E4 <AmiBlitz3.ab3@3016>    BNE 'lnom
000214E8 <AmiBlitz3.ab3@3017>    CMP.b #";",d0
000214EC <AmiBlitz3.ab3@3018>    BEQ exit2
000214F0 <AmiBlitz3.ab3@3019>    CMP.b #":",d0
000214F4 <AmiBlitz3.ab3@3020>    BEQ exit2
000214F8 <AmiBlitz3.ab3@3023>   CMP.b #$22,D0
000214FC <AmiBlitz3.ab3@3024>    BNE.w JL_0_3CEA
00021502 <AmiBlitz3.ab3@3025>   NOT.w instringon
00021506 <AmiBlitz3.ab3@3026> BRA.w JL_0_3CC8
0002150C <AmiBlitz3.ab3@3030>   TST.w instringon
00021510 <AmiBlitz3.ab3@3031>    BNE.w JL_0_3CC8
00021514 <AmiBlitz3.ab3@3032>    CMP.b #"@",d0
00021518 <AmiBlitz3.ab3@3033>    BNE 'l10
0002151C <AmiBlitz3.ab3@3034>    CMP.b #"@",(a4)
00021520 <AmiBlitz3.ab3@3035>    BNE 'l10
00021526 <AmiBlitz3.ab3@3036>    TST.w ininclude
0002152A <AmiBlitz3.ab3@3037>    BNE errorjoin
00021530 <AmiBlitz3.ab3@3038>    MOVE.l sourceline3,a4
00021536 <AmiBlitz3.ab3@3039>    CMP.l #0,a4
0002153A <AmiBlitz3.ab3@3040>    BNE 'l11
00021540 <AmiBlitz3.ab3@3041>    MOVE.l sourceline,a4
00021542 <AmiBlitz3.ab3@3044>   MOVE.l (a4),a4
00021548 <AmiBlitz3.ab3@3045>       CMP.l #0,a4
0002154C <AmiBlitz3.ab3@3046>       BNE 'l12
0002154E <AmiBlitz3.ab3@3047>       MOVEQ #0,d0
00021554 <AmiBlitz3.ab3@3048>       JSR error
0002155A <AmiBlitz3.ab3@3051>    MOVE.l a4,sourceline3
0002155E <AmiBlitz3.ab3@3052>    LEA 9(a4),a4
00021560 <AmiBlitz3.ab3@3053>    MOVEQ #",",d0
00021564 <AmiBlitz3.ab3@3056>   CMP.b #$2C,D0
00021568 <AmiBlitz3.ab3@3057>    BNE.w JL_0_3D06
0002156A <AmiBlitz3.ab3@3058>   TST.w D2
0002156E <AmiBlitz3.ab3@3059>    BEQ.w JL_0_3D30
00021572 <AmiBlitz3.ab3@3060> BRA.w JL_0_3CC8
00021576 <AmiBlitz3.ab3@3064>    CMP.b #$7B,D0                                           ;"{"
0002157A <AmiBlitz3.ab3@3065>    BEQ.w 'l10
0002157E <AmiBlitz3.ab3@3066>   CMP.b #$28,D0                                            ;"("
00021582 <AmiBlitz3.ab3@3069>    BNE.w JL_0_3D14
00021584 <AmiBlitz3.ab3@3070>   ADDQ.w #1,D2
00021588 <AmiBlitz3.ab3@3071> BRA.w JL_0_3CC8
0002158C <AmiBlitz3.ab3@3074>   CMP.b #$7D,D0                                           ;"}"
00021590 <AmiBlitz3.ab3@3075>    BNE.w JL_0_3D22
00021592 <AmiBlitz3.ab3@3076>  TST.w D2
00021596 <AmiBlitz3.ab3@3077>    BEQ.w JL_0_3D30
0002159A <AmiBlitz3.ab3@3081>    CMP.b #$7D,D0                                           ;"}"
0002159E <AmiBlitz3.ab3@3082>    BEQ.w 'l10
000215A2 <AmiBlitz3.ab3@3083>   CMP.b #$29,D0                                            ;")"
000215A6 <AmiBlitz3.ab3@3086>    BNE.w JL_0_3CC8
000215A8 <AmiBlitz3.ab3@3087>   SUBQ.w #1,D2
000215AC <AmiBlitz3.ab3@3088> BRA.w JL_0_3CC8
000215AE <AmiBlitz3.ab3@3091> RTS
000215B0 <AmiBlitz3.ab3@3095>       SUBQ.l #1,a4
000215B6 <AmiBlitz3.ab3@3096>       CLR.l sourceline3
000215B8 <AmiBlitz3.ab3@3097> RTS
000215BA <AmiBlitz3.ab3@3101>       MOVEQ #0,d0
000215BC <AmiBlitz3.ab3@3102>       SUBQ.l #1,a4
000215C2 <AmiBlitz3.ab3@3103>       CLR.l sourceline3
000215C4 <AmiBlitz3.ab3@3104> RTS
000215C8 <AmiBlitz3.ab3@3108>   CMP.b #$7B,D0                                            ;"{"
000215CC <AmiBlitz3.ab3@3109>   BEQ.w JL_0_3D3E
000215D0 <AmiBlitz3.ab3@3110>   CMP.b #$28,D0                                            ;"("
000215D2 <AmiBlitz3.ab3@3113> RTS
000215D6 <AmiBlitz3.ab3@3117>   CMP.b #$7D,D0                                            ;"}"
000215DA <AmiBlitz3.ab3@3118>   BEQ.w JL_0_3D4C
000215DE <AmiBlitz3.ab3@3119>   CMP.b #$29,D0                                            ;")"
000215E0 <AmiBlitz3.ab3@3122> RTS
000215E2 <AmiBlitz3.ab3@3126> stopit:     Ds.w 1
000215E4 <AmiBlitz3.ab3@3127> clrreq:     Ds.w 1
000215E8 <AmiBlitz3.ab3@3148>   MOVE.w clrreq(PC),D0
000215EC <AmiBlitz3.ab3@3149>    BEQ.w close_compilewin__skip
0002161E <AmiBlitz3.ab3@3151> 
00021624 <AmiBlitz3.ab3@3153>   LEA clrreq,a0
00021626 <AmiBlitz3.ab3@3154>   NOT.w (a0)                                               ;reass
0002162C <AmiBlitz3.ab3@3155>   MOVEA.l ptr_ThisTask,A0
00021630 <AmiBlitz3.ab3@3156>   CLR.l $1E(A0)
00021634 <AmiBlitz3.ab3@3157>   CLR.l $2A(A0)
00021636 <AmiBlitz3.ab3@3160> RTS
00021638 <AmiBlitz3.ab3@3163> intsused:  Ds.w 1
00021640 <AmiBlitz3.ab3@3167>   MOVE.w #-1,blitzoff
00021646 <AmiBlitz3.ab3@3168>   CLR.w intsused
0002164C <AmiBlitz3.ab3@3169>   CLR.w anyerrs
00021652 <AmiBlitz3.ab3@3170>   CLR.w blitzmode
00021658 <AmiBlitz3.ab3@3171>   CLR.w dontwrite                                              ;nomemleft
0002165E <AmiBlitz3.ab3@3172>   CLR.w constmode
00021664 <AmiBlitz3.ab3@3173>   CLR.w cmake
0002166A <AmiBlitz3.ab3@3174>   CLR.w cfetchmode
00021670 <AmiBlitz3.ab3@3175>   CLR.l intdata1
00021676 <AmiBlitz3.ab3@3176>   CLR.w fuckpos
0002167C <AmiBlitz3.ab3@3177>   CLR.w procnum
00021682 <AmiBlitz3.ab3@3178>   CLR.w procnum2
00021688 <AmiBlitz3.ab3@3179>   CLR.w dfetch
0002168E <AmiBlitz3.ab3@3180>   CLR.l titleat
00021694 <AmiBlitz3.ab3@3181>   CLR.b usedpath
0002169A <AmiBlitz3.ab3@3182>   CLR.b path2
000216A0 <AmiBlitz3.ab3@3183>   CLR.w inerr
000216A6 <AmiBlitz3.ab3@3184>   CLR.w intlevel
000216AC <AmiBlitz3.ab3@3185>   CLR.l cont_pc
000216B2 <AmiBlitz3.ab3@3186>   CLR.l cont_pc2
000216B8 <AmiBlitz3.ab3@3187>   CLR.l lastcontlink
000216C2 <AmiBlitz3.ab3@3188>   MOVE.l destbufferstart,destpointer
000216CC <AmiBlitz3.ab3@3189>   MOVE.l destbufferstart,bigpc
000216D6 <AmiBlitz3.ab3@3190>   MOVE.l destbufferend,libend
000216E0 <AmiBlitz3.ab3@3191>   MOVE.l data1start,data1
000216EA <AmiBlitz3.ab3@3192>   MOVE.l data2at,data2
000216F2 <AmiBlitz3.ab3@3193>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
000216FA <AmiBlitz3.ab3@3194>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021700 <AmiBlitz3.ab3@3195>   CLR.w oldvcodelen
00021706 <AmiBlitz3.ab3@3196>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021708 <AmiBlitz3.ab3@3197> RTS
0002170A <AmiBlitz3.ab3@3200> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021710 <AmiBlitz3.ab3@3204>   LEA  clrreq,a1
00021714 <AmiBlitz3.ab3@3205>   MOVE.w #2000,(a1)
0002173E <AmiBlitz3.ab3@3206>   !basic
00021754 <AmiBlitz3.ab3@3207> 
000217A4 <AmiBlitz3.ab3@3208>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
000217AC <AmiBlitz3.ab3@3209>   calcpro.l      = 0
000217B4 <AmiBlitz3.ab3@3210>   calcpro_old.l  = 0
000217C0 <AmiBlitz3.ab3@3211>   typ_old.l      = -1
000217CC <AmiBlitz3.ab3@3212>   pass_old.l     = -1
000217D2 <AmiBlitz3.ab3@3213>   update_comstatus_gui.b = True ; for the first
0002180C <AmiBlitz3.ab3@3215>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021846 <AmiBlitz3.ab3@3216>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021864 <AmiBlitz3.ab3@3217>   !asm
00021896 <AmiBlitz3.ab3@3218> 
0002189C <AmiBlitz3.ab3@3220>   CLR.w stopit
0002189E <AmiBlitz3.ab3@3221> RTS
000218A4 <AmiBlitz3.ab3@3225>   CLR.w storedebugmode
000218AA <AmiBlitz3.ab3@3226>   CLR.b iserror
000218AE <AmiBlitz3.ab3@3227>   BSR.w compilerequester
000218B8 <AmiBlitz3.ab3@3229>   MOVE.l #0,globallinecount
000218BE <AmiBlitz3.ab3@3230>   JSR check_of_same_source
000218C2 <AmiBlitz3.ab3@3231>   BSR.w call_setpointerbusy
000218C6 <AmiBlitz3.ab3@3232>   BSR.w setcvars
000218CE <AmiBlitz3.ab3@3233>   MOVE.w #$8000,globalvarpointer
000218D8 <AmiBlitz3.ab3@3234>   MOVE.l #newtype_quick,defaulttype
000218DE <AmiBlitz3.ab3@3235>   MOVE.l A7,passstack
000218E8 <AmiBlitz3.ab3@3236>   MOVE.l #firstitem_,sourceline
000218F2 <AmiBlitz3.ab3@3237>   MOVE.w numlines_org,linesleft
000218FC <AmiBlitz3.ab3@3238>   MOVE.l numlines,numlines2
00021902 <AmiBlitz3.ab3@3239>   ADDQ.w #1,linesleft
00021908 <AmiBlitz3.ab3@3240>   ADDQ.l #1,numlines2
00021912 <AmiBlitz3.ab3@3241>   MOVE.l #-1,linenumat
00021916 <AmiBlitz3.ab3@3242>   BSR.w resetlibs
0002191A <AmiBlitz3.ab3@3243>   BSR.w Aclearallvars
00021920 <AmiBlitz3.ab3@3244>   LEA progress_per_line+2,A0
00021922 <AmiBlitz3.ab3@3245>   MOVEQ.l #$03,D0
00021924 <AmiBlitz3.ab3@3248>     CLR.w (A0)+
00021928 <AmiBlitz3.ab3@3249>   DBF D0,JL_0_40EC
0002192E <AmiBlitz3.ab3@3252>   LEA _include,a0
00021932 <AmiBlitz3.ab3@3253>   MOVEM.l a0-a6/d0-d7,-(a7)
00021938 <AmiBlitz3.ab3@3254>   LEA ptr_parameterstore,a1
0002193A <AmiBlitz3.ab3@3257>     MOVE.b (a0)+,(a1)+
0002193E <AmiBlitz3.ab3@3258>   BNE 'l1b
00021940 <AmiBlitz3.ab3@3260>   MOVEQ #9,d2
00021946 <AmiBlitz3.ab3@3261>   JSR findlabel2
0002194A <AmiBlitz3.ab3@3262>   BNE 'd
00021952 <AmiBlitz3.ab3@3263>   MOVE.l #0,8(a2)
00021956 <AmiBlitz3.ab3@3264>   MOVEM.l (a7)+,a0-a6/d0-d7
0002195A <AmiBlitz3.ab3@3265> BRA 'd2
00021960 <AmiBlitz3.ab3@3268>   JSR addlabelhash
00021968 <AmiBlitz3.ab3@3269>   MOVE.l #$1,$4(A2)
00021970 <AmiBlitz3.ab3@3270>   MOVE.l #0,8(a2)
00021974 <AmiBlitz3.ab3@3271>   MOVEM.l (a7)+,a0-a6/d0-d7
0002197A <AmiBlitz3.ab3@3274>   LEA _debug,a0
0002197E <AmiBlitz3.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
00021984 <AmiBlitz3.ab3@3276>   LEA ptr_parameterstore,a1
00021986 <AmiBlitz3.ab3@3279>     MOVE.b (a0)+,(a1)+
0002198A <AmiBlitz3.ab3@3280>   BNE 'l9b
0002198C <AmiBlitz3.ab3@3282>   MOVEQ #7,d2
00021992 <AmiBlitz3.ab3@3283>   JSR findlabel2
00021996 <AmiBlitz3.ab3@3284>   BNE 'd9
0002199A <AmiBlitz3.ab3@3285>   MOVE.b debugmode(PC),D0
0002199C <AmiBlitz3.ab3@3286>   EXT.w d0
0002199E <AmiBlitz3.ab3@3287>   EXT.l d0
000219A2 <AmiBlitz3.ab3@3288>   MOVE.l d0,8(a2)
000219A6 <AmiBlitz3.ab3@3289>   MOVEM.l (a7)+,a0-a6/d0-d7
000219AA <AmiBlitz3.ab3@3290> BRA 'd9b
000219B0 <AmiBlitz3.ab3@3293>   JSR addlabelhash
000219B8 <AmiBlitz3.ab3@3294>   MOVE.l #$1,$4(A2)
000219BC <AmiBlitz3.ab3@3295>   MOVE.b debugmode(PC),D0
000219BE <AmiBlitz3.ab3@3296>   EXT.w d0
000219C0 <AmiBlitz3.ab3@3297>   EXT.l d0
000219C4 <AmiBlitz3.ab3@3298>   MOVE.l d0,8(a2)
000219C8 <AmiBlitz3.ab3@3299>   MOVEM.l (a7)+,a0-a6/d0-d7
000219CE <AmiBlitz3.ab3@3302>   MOVE.l #firstitem_,a0
000219D0 <AmiBlitz3.ab3@3303>   MOVE.l (a0),a0
000219D4 <AmiBlitz3.ab3@3304>   LEA 9(a0),a0
000219DC <AmiBlitz3.ab3@3305>   MOVE.w #0,exdebug
000219E2 <AmiBlitz3.ab3@3306>   TST.b debugmode
000219E6 <AmiBlitz3.ab3@3307>    BEQ 'l10
000219E8 <AmiBlitz3.ab3@3310>   MOVE.b (a0)+,d0
000219EC <AmiBlitz3.ab3@3311>    BEQ 'l10
000219F0 <AmiBlitz3.ab3@3312>   CMP.b #$20,d0
000219F4 <AmiBlitz3.ab3@3313>    BEQ 'l2
000219F6 <AmiBlitz3.ab3@3314>   SUBQ.l #1,a0
000219FC <AmiBlitz3.ab3@3315>   CMP.l #"DEBU",(a0)
00021A00 <AmiBlitz3.ab3@3316>    BNE 'l10
00021A06 <AmiBlitz3.ab3@3317>   CMP.b #"G",4(a0)
00021A0A <AmiBlitz3.ab3@3318>    BNE 'l10
00021A12 <AmiBlitz3.ab3@3319>   MOVE.w #$0,debugversion
00021A1A <AmiBlitz3.ab3@3320>   MOVE.b #1,exdebug
00021A20 <AmiBlitz3.ab3@3323>   LEA nops4,A0
00021A26 <AmiBlitz3.ab3@3324>   LEA dataget,A1
00021A2C <AmiBlitz3.ab3@3325>   JSR pokecode2                                            ;write intro nops
00021A32 <AmiBlitz3.ab3@3326>   MOVE.l #$01010101,d1
00021A38 <AmiBlitz3.ab3@3327>   JSR writedatalong                                        ;for the 4 tempregs
00021A3E <AmiBlitz3.ab3@3328>   JSR writedatalong
00021A44 <AmiBlitz3.ab3@3329>   JSR writedatalong
00021A4A <AmiBlitz3.ab3@3330>   JSR writedatalong
00021A50 <AmiBlitz3.ab3@3331>   TST.b saved0
00021A54 <AmiBlitz3.ab3@3332>    BEQ 'l1
00021A5A <AmiBlitz3.ab3@3333>   MOVE.l #$4e714e71,d1
00021A60 <AmiBlitz3.ab3@3334>   JSR writelong                                            ;add 2 nops
00021A66 <AmiBlitz3.ab3@3335>   MOVE.l #$4e714e71,d1
00021A6C <AmiBlitz3.ab3@3336>   JSR writelong                                            ;add 2 nops
00021A72 <AmiBlitz3.ab3@3337>   MOVE.l #$4e714e71,d1
00021A78 <AmiBlitz3.ab3@3338>   JSR writelong                                            ;add 2 nops
00021A7E <AmiBlitz3.ab3@3339>    MOVE.l #$4e714e71,d1
00021A84 <AmiBlitz3.ab3@3340>   JSR writelong                                            ;add 2 nops
00021A88 <AmiBlitz3.ab3@3343>   MOVE.b debugmode(PC),D1
00021A8C <AmiBlitz3.ab3@3344>    BEQ.b JL_0_4132
00021A96 <AmiBlitz3.ab3@3345>   MOVE.b debugmode,storedebugmode
00021A9A <AmiBlitz3.ab3@3346>   MOVE.w #$FFDC,D1
00021A9E <AmiBlitz3.ab3@3347>    BSR.w uselib
00021AA4 <AmiBlitz3.ab3@3348>   TST.w debugversion                                       ;make a version for debugger
00021AA8 <AmiBlitz3.ab3@3349>    BNE.b JL_0_412A
00021AAC <AmiBlitz3.ab3@3353>   MOVE.w #$FA3C,D1
00021AB0 <AmiBlitz3.ab3@3354>    BSR.w uselib
00021AB4 <AmiBlitz3.ab3@3355>   MOVE.w #$0001,D1
00021AB8 <AmiBlitz3.ab3@3356>    BSR.w uselib
00021ABC <AmiBlitz3.ab3@3357> BRA.b JL_0_4132
00021AC0 <AmiBlitz3.ab3@3360>   MOVE.w #$FA32,D1
00021AC4 <AmiBlitz3.ab3@3361>   BSR.w uselib
00021AC8 <AmiBlitz3.ab3@3364>   BSR.w nextline
00021ACE <AmiBlitz3.ab3@3365>   CLR.l linenum
00021AD4 <AmiBlitz3.ab3@3366>   CLR.l stacktrack
00021ADA <AmiBlitz3.ab3@3369>   ADDQ.l #1,linenum
00021AE4 <AmiBlitz3.ab3@3370>   MOVE.l destpointer,destpointer2
00021AEA <AmiBlitz3.ab3@3371>   MOVE.l a5,sourceline2
00021AEE <AmiBlitz3.ab3@3372>   BSR.w compile_line                                        ;compile pass
00021AF2 <AmiBlitz3.ab3@3375>   BSR.w nextline
00021AF6 <AmiBlitz3.ab3@3376>    BNE.w JL_0_4136
00021AFA <AmiBlitz3.ab3@3377>   BSR.w JUMP_do_runerrson
00021AFE <AmiBlitz3.ab3@3378>   BSR.w pointchk
00021B04 <AmiBlitz3.ab3@3379>   TST.b objectcount
00021B08 <AmiBlitz3.ab3@3380>    BNE macenderr
00021B0E <AmiBlitz3.ab3@3381>   CLR.l linenumat
00021B12 <AmiBlitz3.ab3@3382>   BSR.w errchx2
00021B1C <AmiBlitz3.ab3@3383>   CMP.l #-1,bssend
00021B20 <AmiBlitz3.ab3@3384>    BNE 'l30
00021B2A <AmiBlitz3.ab3@3385>   MOVE.l destpointer,bssend                                ;compile end
00021B30 <AmiBlitz3.ab3@3388>   MOVE.l destpointer,d0
00021B3A <AmiBlitz3.ab3@3389>   CMP.l #-1,bssstart
00021B3E <AmiBlitz3.ab3@3390>   BNE 'lnf6
00021B48 <AmiBlitz3.ab3@3391>   CMP.l #-1,chipstart
00021B4C <AmiBlitz3.ab3@3392>   BNE 'lnf6
00021B50 <AmiBlitz3.ab3@3393> BRA 'leven4
00021B56 <AmiBlitz3.ab3@3396>   MOVE.l destpointer,d1
00021B58 <AmiBlitz3.ab3@3397>   ADDQ.l #3,d1
00021B5E <AmiBlitz3.ab3@3398>   AND.l #$fffffffc,d1                                      ;bug ?
00021B64 <AmiBlitz3.ab3@3399>   MOVE.l d1,destpointer
00021B6E <AmiBlitz3.ab3@3402>   MOVE.l destpointer,codeend
00021B78 <AmiBlitz3.ab3@3403>   CMP.l #-1,chipend
00021B7C <AmiBlitz3.ab3@3404>   BNE 'l31
00021B86 <AmiBlitz3.ab3@3405>   MOVE.l destpointer,chipend
00021B8C <AmiBlitz3.ab3@3408>   MOVE.l destpointer,d1
00021B8E <AmiBlitz3.ab3@3409>   ADDQ.l #1,d1
00021B94 <AmiBlitz3.ab3@3410>   AND.l #$fffffffe,d1                                     ;new evenexit
00021B9A <AmiBlitz3.ab3@3411>   MOVE.l d1,destpointer
00021B9E <AmiBlitz3.ab3@3412>   MOVE.b debugmode(PC),D1
00021BA2 <AmiBlitz3.ab3@3413>    BEQ.b JL_0_4180
00021BA6 <AmiBlitz3.ab3@3414>    BSR.w debugstuff
00021BAA <AmiBlitz3.ab3@3415>   MOVE.w #$C300,D1
00021BB0 <AmiBlitz3.ab3@3416>    JSR Atokejsr
00021BB4 <AmiBlitz3.ab3@3417>    BSR.w debugstuff
00021BB8 <AmiBlitz3.ab3@3418>   MOVE.l eopcode(PC),D1
00021BBE <AmiBlitz3.ab3@3419>    JSR writelong
00021BC2 <AmiBlitz3.ab3@3420>   MOVE.l lastcontlink(PC),D1
00021BC6 <AmiBlitz3.ab3@3421>    BEQ.b JL_0_4180
00021BC8 <AmiBlitz3.ab3@3422>   MOVEA.l D1,A0
00021BCC <AmiBlitz3.ab3@3423>   CLR.w $6(A0)
00021BD6 <AmiBlitz3.ab3@3429>   MOVE.l destpointer,endop                                ;where end goes...
00021BDC <AmiBlitz3.ab3@3431>   TST.w blitzmode
00021BE0 <AmiBlitz3.ab3@3432>   BEQ.w JL_0_4198
00021BE4 <AmiBlitz3.ab3@3433>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021BEA <AmiBlitz3.ab3@3436>   TST.w intsused
00021BEE <AmiBlitz3.ab3@3437>   BEQ.b JL_0_41AA
00021BF2 <AmiBlitz3.ab3@3438>   MOVE.w #$C105,D1                                        ;interupts off!
00021BF8 <AmiBlitz3.ab3@3439>   JSR tokejsr2
00021BFC <AmiBlitz3.ab3@3442>   BSR.w calcstatic
00021C02 <AmiBlitz3.ab3@3443>   MOVE.w D4,numstatic
00021C08 <AmiBlitz3.ab3@3444>   MOVE.l D3,staticdata
00021C0C <AmiBlitz3.ab3@3445>    BSR.w calcmaxs
00021C12 <AmiBlitz3.ab3@3447>   TST.l tokeslist
00021C16 <AmiBlitz3.ab3@3448>    BEQ.b JL_0_41F8
00021C1C <AmiBlitz3.ab3@3449>   MOVE.w gotocode,D1                                       ;jmp!
00021C22 <AmiBlitz3.ab3@3450>    JSR writeword
00021C2C <AmiBlitz3.ab3@3451>   MOVE.l destpointer,endjmpat
00021C30 <AmiBlitz3.ab3@3452>    BSR.w addoff
00021C36 <AmiBlitz3.ab3@3453>    JSR writelong                                           
00021C3A <AmiBlitz3.ab3@3455>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00021C40 <AmiBlitz3.ab3@3459>   TST.w dontwrite
00021C44 <AmiBlitz3.ab3@3460>    BNE.b JL_0_41F8
00021C48 <AmiBlitz3.ab3@3461>   MOVEA.l endjmpat(PC),A4
00021C4E <AmiBlitz3.ab3@3462>   MOVE.l destpointer,(A4)
00021C54 <AmiBlitz3.ab3@3465>   TST.b returncode
00021C58 <AmiBlitz3.ab3@3466>   BEQ 'l2
00021C5C <AmiBlitz3.ab3@3467>   MOVE.w #$2e80,d1
00021C62 <AmiBlitz3.ab3@3468>   JSR writeword
00021C68 <AmiBlitz3.ab3@3471>   JSR JL_0_B98A
00021C6E <AmiBlitz3.ab3@3472>   TST.b returncode
00021C72 <AmiBlitz3.ab3@3473>   BEQ 'l3
00021C76 <AmiBlitz3.ab3@3474>   MOVE.w #$4e75,d1
00021C7C <AmiBlitz3.ab3@3475>   JSR writeword
00021C80 <AmiBlitz3.ab3@3476> BRA 'l1
00021C86 <AmiBlitz3.ab3@3479>   MOVE.l #$70004E75,D1
00021C8C <AmiBlitz3.ab3@3480>   JSR writelong                                            ;write moveq #0,d0:rts
00021C92 <AmiBlitz3.ab3@3483>   JSR JL_0_B73E
00021C96 <AmiBlitz3.ab3@3484>   BSR.w asmfixer
00021C9A <AmiBlitz3.ab3@3485>   BSR.w close_compilewin
00021C9E <AmiBlitz3.ab3@3486> BRA.w call_setpointernormal
00021CA4 <AmiBlitz3.ab3@3490> JMP do_runerrson
00021CA6 <AmiBlitz3.ab3@3494> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00021CA8 <AmiBlitz3.ab3@3495>             Dc.b $4E,$40                                   ;TRAP  #00
00021CAC <AmiBlitz3.ab3@3497> endjmpat:   Ds.l 1
00021CB2 <AmiBlitz3.ab3@3501>   MOVEA.l newtype_string,A2
00021CB8 <AmiBlitz3.ab3@3502>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00021CBC <AmiBlitz3.ab3@3505>     CMPA.w #$0,A2
00021CC0 <AmiBlitz3.ab3@3506>      BEQ.w pointchk_done
00021CC4 <AmiBlitz3.ab3@3507>     CMP.l $4(A2),D0
00021CC8 <AmiBlitz3.ab3@3508>      BNE.w pointchk_next
00021CD0 <AmiBlitz3.ab3@3509>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00021CD4 <AmiBlitz3.ab3@3510> BRA.w notypeerr
00021CD6 <AmiBlitz3.ab3@3513>     MOVEA.l (A2),A2
00021CDA <AmiBlitz3.ab3@3514> BRA.w pointchk_loop
00021CDC <AmiBlitz3.ab3@3517> RTS
00021CE2 <AmiBlitz3.ab3@3521>   LEA labelbase,A2
00021CE4 <AmiBlitz3.ab3@3525>   MOVE.l (A2),D0                                           ;testlabels
00021CE8 <AmiBlitz3.ab3@3526>    BEQ.w errchx2_done
00021CEA <AmiBlitz3.ab3@3527>   MOVEA.l D0,A2
00021CEE <AmiBlitz3.ab3@3528>   MOVE.l $4(A2),D0
00021CF2 <AmiBlitz3.ab3@3529>   BTST #$0,D0
00021CF6 <AmiBlitz3.ab3@3530>    BNE.w errchx2_loop
00021CFA <AmiBlitz3.ab3@3531>   MOVE.l $8(A2),D0
00021CFE <AmiBlitz3.ab3@3532>    BNE.w errchx2_loop
00021D06 <AmiBlitz3.ab3@3533>   MOVE.w $10(A2),linenumat+2
00021D08 <AmiBlitz3.ab3@3534>   MOVEQ #0,d0
00021D0C <AmiBlitz3.ab3@3535>   MOVE.b $12(a2),d0
00021D14 <AmiBlitz3.ab3@3536>   MOVE.w 0(a2,d0),linenumat
00021D1A <AmiBlitz3.ab3@3537> JMP nolaberr                                               ;label not found
00021D20 <AmiBlitz3.ab3@3540>   MOVE.l concomsp,D0
00021D26 <AmiBlitz3.ab3@3541>   CMP.l #concomstack,D0
00021D2A <AmiBlitz3.ab3@3542>    BNE.w chxerr4
00021D30 <AmiBlitz3.ab3@3543>   MOVE.w connest,D1
00021D34 <AmiBlitz3.ab3@3544>    BNE.w chxerr4
00021D36 <AmiBlitz3.ab3@3547>   MOVE.l D1,-(A7)
00021D3C <AmiBlitz3.ab3@3548>   MOVE.l firstsel,D1
00021D40 <AmiBlitz3.ab3@3549>    BNE.w errchx_err1
00021D46 <AmiBlitz3.ab3@3550>   MOVE.l firstrep,D1
00021D4A <AmiBlitz3.ab3@3551>    BNE.w errchx_err2
00021D50 <AmiBlitz3.ab3@3552>   MOVE.w intstring,D1
00021D54 <AmiBlitz3.ab3@3553>    BNE.w errchx_err3
00021D58 <AmiBlitz3.ab3@3554>   MOVE.l 4(a7),d1
00021D5E <AmiBlitz3.ab3@3555>   MOVE.w proceduremode,D1
00021D62 <AmiBlitz3.ab3@3556>    BNE.w errchx_err6
00021D68 <AmiBlitz3.ab3@3557>   MOVE.l firstiff,d1
00021D6C <AmiBlitz3.ab3@3558>    BNE errchx_err5
00021D72 <AmiBlitz3.ab3@3559>   MOVE.l firstfor,D1
00021D76 <AmiBlitz3.ab3@3560>    BNE.w errchx_err7
00021D78 <AmiBlitz3.ab3@3561>   MOVE.l (A7)+,D1
00021D7A <AmiBlitz3.ab3@3562> RTS
00021D84 <AmiBlitz3.ab3@3566>   MOVE.l sellineat,linenumat
00021D8A <AmiBlitz3.ab3@3567> JMP selerrz
00021D94 <AmiBlitz3.ab3@3570>   MOVE.l replineat,linenumat
00021D9A <AmiBlitz3.ab3@3571> JMP unterr3
00021DA4 <AmiBlitz3.ab3@3574>   MOVE.l intlineat,linenumat
00021DAA <AmiBlitz3.ab3@3575> JMP interr2
00021DB4 <AmiBlitz3.ab3@3578>   MOVE.l iflineat,linenumat
00021DBA <AmiBlitz3.ab3@3579> JMP noenderr
00021DC4 <AmiBlitz3.ab3@3582>   MOVE.l prolineat,linenumat
00021DCA <AmiBlitz3.ab3@3583> JMP nopenderr
00021DD4 <AmiBlitz3.ab3@3586>   MOVE.l forlineat,linenumat
00021DDA <AmiBlitz3.ab3@3587> JMP nonexterr
00021DE4 <AmiBlitz3.ab3@3590>   MOVE.l ciflineat,linenumat
00021DEA <AmiBlitz3.ab3@3591> JMP nocenderr
00021DF4 <AmiBlitz3.ab3@3595>   MOVE.l data1,maxsat
00021DF6 <AmiBlitz3.ab3@3596>   MOVEQ.l #$00,D4
00021DFC <AmiBlitz3.ab3@3597>   MOVEA.l libpointer,A2
00021E00 <AmiBlitz3.ab3@3600>     CMPA.w #$0,A2
00021E04 <AmiBlitz3.ab3@3601>      BEQ.w calcmaxs_done
00021E08 <AmiBlitz3.ab3@3602>     TST.w $C(A2)
00021E0C <AmiBlitz3.ab3@3603>      BPL.w calcmaxs_next
00021E10 <AmiBlitz3.ab3@3604>     MOVE.l $12(A2),D0
00021E14 <AmiBlitz3.ab3@3605>     TST.w -$2(A2,D0.L)
00021E18 <AmiBlitz3.ab3@3606>      BEQ.w calcmaxs_next
00021E1A <AmiBlitz3.ab3@3607>     ADDQ.w #1,D4
00021E1E <AmiBlitz3.ab3@3608>     MOVE.w -$6(A2,D0.L),D1
00021E22 <AmiBlitz3.ab3@3609>     BSR.w pokedata1
00021E24 <AmiBlitz3.ab3@3610>     MOVEQ.l #$01,D1
00021E28 <AmiBlitz3.ab3@3611>     MOVE.w -$2(A2,D0.L),D2
00021E2A <AmiBlitz3.ab3@3612>     LSL.w D2,D1
00021E2E <AmiBlitz3.ab3@3613>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00021E32 <AmiBlitz3.ab3@3614>     BSR.w writedatalong
00021E34 <AmiBlitz3.ab3@3617>     MOVEA.l (A2),A2
00021E38 <AmiBlitz3.ab3@3618> BRA.w calcmaxs_loop
00021E3E <AmiBlitz3.ab3@3621>   MOVE.w D4,maxsused
00021E42 <AmiBlitz3.ab3@3622>    BEQ.w calcmaxs_done2
00021E46 <AmiBlitz3.ab3@3623>   MOVE.w #$FFFA,D1                                         ;;use memlib
00021E4A <AmiBlitz3.ab3@3624> BRA.w uselib
00021E4C <AmiBlitz3.ab3@3627> RTS
00021E52 <AmiBlitz3.ab3@3631>    MOVE.l a7,stackaddr
00021E56 <AmiBlitz3.ab3@3632>    BSR.w compile_term
00021E5A <AmiBlitz3.ab3@3633>    BSR.w reget
00021E5E <AmiBlitz3.ab3@3634>    BNE.w illeolerr
00021E64 <AmiBlitz3.ab3@3635>    TST.w dontwrite
00021E68 <AmiBlitz3.ab3@3636>    BNE 'l1
00021E6E <AmiBlitz3.ab3@3637>    TST.l stacktrack
00021E72 <AmiBlitz3.ab3@3638>    BNE errormsg_stack
00021E76 <AmiBlitz3.ab3@3641>    CMP.w #-$7FDE,D0
00021E7A <AmiBlitz3.ab3@3642>    BNE.w compile_line_notelse
00021E80 <AmiBlitz3.ab3@3643>    JSR do_else2
00021E84 <AmiBlitz3.ab3@3644> BRA.w compile_line
00021E86 <AmiBlitz3.ab3@3647>   TST.w D0
00021E8A <AmiBlitz3.ab3@3648>   BNE.w compile_line
00021E90 <AmiBlitz3.ab3@3653>   MOVE.l firstiff,D0
00021E94 <AmiBlitz3.ab3@3654>    BEQ.w compile_line_done
00021E96 <AmiBlitz3.ab3@3655>   MOVEA.l D0,A0
00021E9A <AmiBlitz3.ab3@3656>   MOVE.w $C(A0),D1
00021E9E <AmiBlitz3.ab3@3657>    BPL.w compile_line_done
00021EA2 <AmiBlitz3.ab3@3661>   BCLR #$F,D1
00021EA8 <AmiBlitz3.ab3@3662>    JSR AJL_0_D7B8
00021EAE <AmiBlitz3.ab3@3663>    JSR AJL_0_D81C
00021EB2 <AmiBlitz3.ab3@3664> BRA.w compile_line_unthen
00021EB4 <AmiBlitz3.ab3@3667> RTS
00021EBA <AmiBlitz3.ab3@3671>   LEA lastgloballabel,A0
00021EBC <AmiBlitz3.ab3@3672>   TST.b (A0)
00021EC0 <AmiBlitz3.ab3@3673>   BEQ.w nolocerr
00021EC6 <AmiBlitz3.ab3@3674>   LEA ptr_parameterstore,A1
00021EC8 <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D2
00021ECA <AmiBlitz3.ab3@3678>   ADDQ.w #1,D2
00021ECC <AmiBlitz3.ab3@3679>   MOVE.b (A0)+,(A1)+
00021ED0 <AmiBlitz3.ab3@3680>    BNE.w createlab_loop
00021ED6 <AmiBlitz3.ab3@3681>   MOVE.b #$27,-$1(A1)
00021ED8 <AmiBlitz3.ab3@3682>   MOVE.w D2,-(A7)
00021EDE <AmiBlitz3.ab3@3683>    JSR makename4
00021EE0 <AmiBlitz3.ab3@3684>   CMP.w (A7)+,D2
00021EE4 <AmiBlitz3.ab3@3685>    BEQ.w syntaxerr
00021EE6 <AmiBlitz3.ab3@3686>    TST.w d0
00021EEA <AmiBlitz3.ab3@3687>    BPL createlab_done
00021EF2 <AmiBlitz3.ab3@3688>    MOVE.w #$3a,lastchar
00021EF4 <AmiBlitz3.ab3@3689>    SUBQ.l #2,a5
00021EF6 <AmiBlitz3.ab3@3692> RTS
00021F00 <AmiBlitz3.ab3@3696>   MOVE.l #forthstack,forthsp
00021F0A <AmiBlitz3.ab3@3697>   MOVE.l #precstack,precsp
00021F0C <AmiBlitz3.ab3@3698> RTS
00021F0E <AmiBlitz3.ab3@3705>   MOVEQ.l #$00,D4
00021F38 <AmiBlitz3.ab3@3708>   !basic
00021F7A <AmiBlitz3.ab3@3709> 
00021F8A <AmiBlitz3.ab3@3711>   If (c_abort = 1)           ; check if set
00021F8C <AmiBlitz3.ab3@3712>     MOVEQ.l #-$01,d4
00021F92 <AmiBlitz3.ab3@3713>     MOVE.w D4,stopit
00021FB0 <AmiBlitz3.ab3@3714>     !asm
00021FB4 <AmiBlitz3.ab3@3715>     BRA chkrealstop__skip
00021FD2 <AmiBlitz3.ab3@3717>   !asm
00021FD4 <AmiBlitz3.ab3@3718>   MOVEQ.l #$00,D6
00021FD6 <AmiBlitz3.ab3@3719>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00021FD8 <AmiBlitz3.ab3@3723> RTS
00021FDC <AmiBlitz3.ab3@3727>   MOVE.w stopit(PC),D0
00021FE0 <AmiBlitz3.ab3@3728>   BEQ chkstop__chk
00021FE6 <AmiBlitz3.ab3@3729>   SUBQ.w #1,stopit
00021FE8 <AmiBlitz3.ab3@3733> RTS
00021FF0 <AmiBlitz3.ab3@3736>   MOVE.w #2000,stopit
00021FF4 <AmiBlitz3.ab3@3737>   BSR.w chkrealstop
00021FF8 <AmiBlitz3.ab3@3738>   BEQ.b chkstop__rts
00021FFC <AmiBlitz3.ab3@3740>   BSR.w close_compilewin
00022000 <AmiBlitz3.ab3@3741>   BSR.w call_setpointernormal
00022006 <AmiBlitz3.ab3@3743>   MOVEA.l errstack,A7
0002200C <AmiBlitz3.ab3@3744>   MOVEA.l errcont,A0
00022014 <AmiBlitz3.ab3@3745>   MOVE.w #-1,anyerrs
00022016 <AmiBlitz3.ab3@3746> JMP (A0)
0002201A <AmiBlitz3.ab3@3749> d_pc:           Ds.l 1
0002201E <AmiBlitz3.ab3@3750> d_bigpc:        Ds.l 1
00022020 <AmiBlitz3.ab3@3751> d_nomemleft:    Ds.w 1
00022024 <AmiBlitz3.ab3@3752> cont_pc:        Ds.l 1
00022028 <AmiBlitz3.ab3@3753> cont_pc2:       Ds.l 1
0002202C <AmiBlitz3.ab3@3754> lastcontlink:   Ds.l 1
00022030 <AmiBlitz3.ab3@3758>   ORI.w #$4E40,D1
00022034 <AmiBlitz3.ab3@3759> BRA.w JUMP_writeword
0002203A <AmiBlitz3.ab3@3763>   TST.b debugmode
0002203E <AmiBlitz3.ab3@3764>   BEQ.w debugstuff__rts
00022044 <AmiBlitz3.ab3@3771>   TST.w dirmode                                            ;or while in direct mode...
00022048 <AmiBlitz3.ab3@3772>    BNE debugstuff__rts
00022052 <AmiBlitz3.ab3@3773>   MOVE.l destpointer,d_pc
0002205C <AmiBlitz3.ab3@3774>   MOVE.l bigpc,d_bigpc
00022066 <AmiBlitz3.ab3@3775>   MOVE.w dontwrite,d_nomemleft
0002206A <AmiBlitz3.ab3@3776>   MOVEM.l D0-D1,-(A7)
0002206C <AmiBlitz3.ab3@3777>   MOVEQ.l #$01,D1
00022070 <AmiBlitz3.ab3@3778>    BSR.w writetrap                                         ;write the adress to sourceline
00022076 <AmiBlitz3.ab3@3782>    MOVE.l destpointer,D0
0002207C <AmiBlitz3.ab3@3783>   MOVE.l cont_pc,D1
00022082 <AmiBlitz3.ab3@3784>   MOVE.l D0,cont_pc
00022088 <AmiBlitz3.ab3@3785>   MOVE.l D1,cont_pc2
0002208C <AmiBlitz3.ab3@3786>    BEQ.b debugstuff__skip
00022092 <AmiBlitz3.ab3@3787>   TST.w dontwrite
00022096 <AmiBlitz3.ab3@3788>    BNE.b debugstuff__skip
00022098 <AmiBlitz3.ab3@3789>   MOVEA.l D1,A4
0002209A <AmiBlitz3.ab3@3790>   SUB.l A4,D0
0002209E <AmiBlitz3.ab3@3791>   MOVE.w D0,$6(A4)
000220A4 <AmiBlitz3.ab3@3792>   MOVE.l A4,lastcontlink
000220AA <AmiBlitz3.ab3@3795>   TST.w ininclude
000220B0 <AmiBlitz3.ab3@3797>   TST.w makeexec
000220B4 <AmiBlitz3.ab3@3798>   BEQ 'l1
000220BA <AmiBlitz3.ab3@3799>   TST.w exdebug
000220BE <AmiBlitz3.ab3@3800>   BEQ 'noinc
000220C2 <AmiBlitz3.ab3@3803>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
000220C8 <AmiBlitz3.ab3@3804>   MOVE.l data1,d1
000220CE <AmiBlitz3.ab3@3805>   TST.b firsttime
000220D2 <AmiBlitz3.ab3@3806>   BNE 'nofirst
000220DA <AmiBlitz3.ab3@3807>   MOVE.b #1,firsttime
000220E0 <AmiBlitz3.ab3@3808>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
000220E6 <AmiBlitz3.ab3@3809>   JSR writedatalong
000220EC <AmiBlitz3.ab3@3810>   MOVE.l #"AmiB",d1
000220F2 <AmiBlitz3.ab3@3811>   JSR writedatalong
000220F8 <AmiBlitz3.ab3@3812>   MOVE.l destbufferstart,d1
000220FE <AmiBlitz3.ab3@3813>   JSR writedatalong
00022104 <AmiBlitz3.ab3@3814>   TST.w dontwrite
00022108 <AmiBlitz3.ab3@3815>   BNE 'nohunk
0002210E <AmiBlitz3.ab3@3816>   MOVE.l data1,d1
00022110 <AmiBlitz3.ab3@3817>   SUBQ.l #4,d1
00022116 <AmiBlitz3.ab3@3818>   SUB.l destbufferstart,d1
00022118 <AmiBlitz3.ab3@3819>   MOVE.l d1,d2
0002211E <AmiBlitz3.ab3@3820>   JSR addhunkoffset
00022124 <AmiBlitz3.ab3@3823>   MOVE.l destpointer,d2
0002212A <AmiBlitz3.ab3@3824>   MOVE.l data1,d1
00022130 <AmiBlitz3.ab3@3827>   MOVE.l destpointer,d2
00022132 <AmiBlitz3.ab3@3828>   MOVE.l d1,d3
00022138 <AmiBlitz3.ab3@3829>   SUB.l destbufferstart,d1
0002213E <AmiBlitz3.ab3@3830>   OR.l #$80000000,d1
00022144 <AmiBlitz3.ab3@3831>   JSR writelong
0002214A <AmiBlitz3.ab3@3832>   TST.w inmacro
0002214E <AmiBlitz3.ab3@3833>   BEQ 'sc1
00022154 <AmiBlitz3.ab3@3834>   MOVE.l myline,a0
00022158 <AmiBlitz3.ab3@3836> BRA 'inc2
0002215E <AmiBlitz3.ab3@3838>  'sc1  TST.w ininclude
00022162 <AmiBlitz3.ab3@3839>   BEQ 'inc
00022168 <AmiBlitz3.ab3@3840>   MOVE.l includesourceline,a0
0002216C <AmiBlitz3.ab3@3841> BRA 'inc2
00022172 <AmiBlitz3.ab3@3844>   MOVE.l sourceline,a0
00022176 <AmiBlitz3.ab3@3845>   LEA 9(a0),a0
00022178 <AmiBlitz3.ab3@3848>   MOVE.l d1,d2
0002217A <AmiBlitz3.ab3@3849>   MOVE.l A5,D1
0002217C <AmiBlitz3.ab3@3850>   SUB.l a0,D1
00022182 <AmiBlitz3.ab3@3851>   ADD.l #9,d1
00022186 <AmiBlitz3.ab3@3852>   BSR.w JUMP_writeword
0002218C <AmiBlitz3.ab3@3853>   CMP.l #9,d1
00022190 <AmiBlitz3.ab3@3854>   BEQ 'pos1
00022196 <AmiBlitz3.ab3@3855>   TST.w dontwrite
0002219A <AmiBlitz3.ab3@3856>   BNE 'nopad
000221A0 <AmiBlitz3.ab3@3857>   MOVE.l lastsourceline,d1
000221A4 <AmiBlitz3.ab3@3858>   MOVE.l d1,-6(a4)
000221A8 <AmiBlitz3.ab3@3859> BRA 'nopad
000221AE <AmiBlitz3.ab3@3862>   MOVE.l d2,lastsourceline
000221B8 <AmiBlitz3.ab3@3863>    MOVE.l destpointer,lastdestpointer
000221BA <AmiBlitz3.ab3@3864>    MOVEQ #0,d1
000221C0 <AmiBlitz3.ab3@3865>   MOVE.l data1,d2
000221C6 <AmiBlitz3.ab3@3866>   SUB.l destbufferstart,d2
000221CC <AmiBlitz3.ab3@3867>   JSR writedatalong
000221D2 <AmiBlitz3.ab3@3868>   TST.w dontwrite
000221D6 <AmiBlitz3.ab3@3869>   BNE 'no2
000221DC <AmiBlitz3.ab3@3870>   JSR addhunkoffset
000221E2 <AmiBlitz3.ab3@3873>   MOVE.l data1,d2
000221E8 <AmiBlitz3.ab3@3874>   SUB.l destbufferstart,d2
000221EE <AmiBlitz3.ab3@3875>   JSR writedatalong
000221F4 <AmiBlitz3.ab3@3876>   TST.w dontwrite
000221F8 <AmiBlitz3.ab3@3877>   BNE 'no
000221FE <AmiBlitz3.ab3@3878>   JSR addhunkoffset
00022204 <AmiBlitz3.ab3@3879>   MOVE.l lastwritedat,a1
0002220A <AmiBlitz3.ab3@3880>   CMP.l #0,a1
0002220E <AmiBlitz3.ab3@3881>   BEQ 'no
00022210 <AmiBlitz3.ab3@3882>   MOVE.l d3,(a1)
00022218 <AmiBlitz3.ab3@3883>   MOVE.l prevwritedat,4(a1)
00022222 <AmiBlitz3.ab3@3884>   MOVE.l lastwritedat,prevwritedat
00022228 <AmiBlitz3.ab3@3887>   MOVE.l d3,lastwritedat
0002222A <AmiBlitz3.ab3@3888>   MOVEQ #4,d1
0002222E <AmiBlitz3.ab3@3889>   BSR pokedata1b
00022230 <AmiBlitz3.ab3@3892>   MOVE.b (a0)+,d1
00022234 <AmiBlitz3.ab3@3893>   BEQ 'done
00022238 <AmiBlitz3.ab3@3894>   BSR pokedata1b
0002223C <AmiBlitz3.ab3@3895> BRA 'loop
0002223E <AmiBlitz3.ab3@3898>   MOVEQ #0,d1
00022242 <AmiBlitz3.ab3@3899>   BSR pokedata1b
00022248 <AmiBlitz3.ab3@3900>   MOVE.l data1,d1
0002224C <AmiBlitz3.ab3@3901>   BTST #0,d1
00022250 <AmiBlitz3.ab3@3902>   BEQ 'nopad
00022252 <AmiBlitz3.ab3@3903>   MOVEQ #0,d1
00022256 <AmiBlitz3.ab3@3904>   BSR pokedata1b
0002225A <AmiBlitz3.ab3@3907>   MOVEM.l (a7)+,a0-a1/d2/d3
0002225E <AmiBlitz3.ab3@3908> BRA 'noinc2
00022264 <AmiBlitz3.ab3@3911>   MOVE.l sourceline,D1
0002226A <AmiBlitz3.ab3@3913>   JSR writelong
0002226C <AmiBlitz3.ab3@3914>   MOVE.l A5,D1
00022272 <AmiBlitz3.ab3@3915>   SUB.l sourceline,D1
00022278 <AmiBlitz3.ab3@3917>   JSR writeword
0002227A <AmiBlitz3.ab3@3920>   MOVEQ.l #$00,D1
00022280 <AmiBlitz3.ab3@3921>   JSR writeword                                            ; was: BSR.w writeword
00022284 <AmiBlitz3.ab3@3922>   MOVEM.l (A7)+,D0-D1
00022286 <AmiBlitz3.ab3@3925> RTS
0002228C <AmiBlitz3.ab3@3929>   TST.b debugmode                                          ;extern debug
00022290 <AmiBlitz3.ab3@3930>    BEQ.b undodebug__rts
00022296 <AmiBlitz3.ab3@3931>   TST.b dirmode
0002229A <AmiBlitz3.ab3@3932>   BNE undodebug__rts
000222A4 <AmiBlitz3.ab3@3937>   MOVE.w d_nomemleft,dontwrite
000222AE <AmiBlitz3.ab3@3938>   MOVE.l d_bigpc,bigpc
000222B8 <AmiBlitz3.ab3@3939>   MOVE.l d_pc,destpointer
000222C2 <AmiBlitz3.ab3@3940>   MOVE.l cont_pc2,cont_pc
000222C4 <AmiBlitz3.ab3@3943> RTS
000222CE <AmiBlitz3.ab3@3947>   MOVE.l #forthstack,forthsp
000222D8 <AmiBlitz3.ab3@3948>   MOVE.l #precstack,precsp
000222DE <AmiBlitz3.ab3@3949>   CLR.w regnum
000222E4 <AmiBlitz3.ab3@3950>   CLR.w nonew
000222EA <AmiBlitz3.ab3@3951>   CLR.w sbasegot
000222F4 <AmiBlitz3.ab3@3952>   MOVE.w varcodelen,oldvcodelen
000222FA <AmiBlitz3.ab3@3953>   CLR.w varcodelen
00022302 <AmiBlitz3.ab3@3954>   MOVE.w #-1,lasta6
00022304 <AmiBlitz3.ab3@3955> RTS
0002230A <AmiBlitz3.ab3@3959>   TST.w linemode
0002230E <AmiBlitz3.ab3@3960>   BMI.b smode__skip
00022312 <AmiBlitz3.ab3@3961>   BSR.w undodebug
00022318 <AmiBlitz3.ab3@3962>   MOVE.w linemode,D1
0002231A <AmiBlitz3.ab3@3963>   ADDQ.w #4,A7
0002231C <AmiBlitz3.ab3@3964>   LSL.w #2,D1
00022322 <AmiBlitz3.ab3@3965>   LEA modetable,A0
00022326 <AmiBlitz3.ab3@3966>   MOVEA.l $0(A0,D1.W),A0
0002232A <AmiBlitz3.ab3@3967>   BSR.w reget
0002232C <AmiBlitz3.ab3@3970> JMP (A0)                                                   ;jumptokenroutine
0002232E <AmiBlitz3.ab3@3973> RTS
00022336 <AmiBlitz3.ab3@3978>   MOVE.w #0,leaa0a0+2
0002233C <AmiBlitz3.ab3@3979>   CLR.b nowdeclare
00022342 <AmiBlitz3.ab3@3980>   CLR.b notypecheck
00022348 <AmiBlitz3.ab3@3981>   CLR.l lasttoken
0002234E <AmiBlitz3.ab3@3982>   CLR.b doimmediate
00022354 <AmiBlitz3.ab3@3983>   CLR.w vartype
0002235A <AmiBlitz3.ab3@3984>   CLR.w regnumfunc
00022360 <AmiBlitz3.ab3@3985>   CLR.b optistring
00022366 <AmiBlitz3.ab3@3986>   CLR.b iniffcommand
0002236C <AmiBlitz3.ab3@3987>   CLR.w instringon  ; new
00022372 <AmiBlitz3.ab3@3988>   CLR.b funccall
00022378 <AmiBlitz3.ab3@3989>   CLR.l currentfunccall
0002237E <AmiBlitz3.ab3@3990>   CLR.l leftsidetype
00022384 <AmiBlitz3.ab3@3991>   CLR.l rightsidetype
0002238A <AmiBlitz3.ab3@3992>   CLR.b peekaddrsize
00022390 <AmiBlitz3.ab3@3993>   CLR.b blitzparloop
00022396 <AmiBlitz3.ab3@3994>   CLR.b funcparloop
0002239C <AmiBlitz3.ab3@3995>   TST.b debugmode
000223A0 <AmiBlitz3.ab3@3996>    BEQ 'fpu
000223AA <AmiBlitz3.ab3@4002>   MOVE.b fpu,iee
000223AE <AmiBlitz3.ab3@4003>   MOVE.w stopit(PC),D0
000223B2 <AmiBlitz3.ab3@4004>   BNE chkstop_chkb
000223B6 <AmiBlitz3.ab3@4005>   BSR.w chkstop                                          ; message here
000223BC <AmiBlitz3.ab3@4008>   SUBQ.w #1,stopit
000223C0 <AmiBlitz3.ab3@4011>   BSR.w findmacro                                          ;macro
000223C6 <AmiBlitz3.ab3@4065>   TST.b debugmode
000223CA <AmiBlitz3.ab3@4066>    BEQ.s 'l10
000223D0 <AmiBlitz3.ab3@4067>   TST.b exdebug
000223D4 <AmiBlitz3.ab3@4068>   BEQ 'l10a
000223D6 <AmiBlitz3.ab3@4069>   MOVE.w (a5),d0
000223DA <AmiBlitz3.ab3@4070>   CMP.w #$8025,d0
000223DE <AmiBlitz3.ab3@4071>    BEQ 'l10
000223E2 <AmiBlitz3.ab3@4074>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
000223E6 <AmiBlitz3.ab3@4078>   BSR.w get1bytemain                                       ;gettokenmain
000223EA <AmiBlitz3.ab3@4079>    BEQ.w undodebug
000223EE <AmiBlitz3.ab3@4080>   CMP.w #$002b,d0                                            ;check for + cast sign
000223F2 <AmiBlitz3.ab3@4081>     BNE 'lb2
000223F6 <AmiBlitz3.ab3@4082>     BSR.w get1bytemain
000223FE <AmiBlitz3.ab3@4083>     MOVE.b #1,notypecheck
00022408 <AmiBlitz3.ab3@4091>   MOVE.l #forthstack,forthsp
00022412 <AmiBlitz3.ab3@4092>   MOVE.l #precstack,precsp
00022418 <AmiBlitz3.ab3@4093>   CLR.w regnum
0002241E <AmiBlitz3.ab3@4094>   CLR.w nonew
00022424 <AmiBlitz3.ab3@4095>   CLR.w sbasegot
0002242E <AmiBlitz3.ab3@4096>   MOVE.w varcodelen,oldvcodelen
00022434 <AmiBlitz3.ab3@4098>   CLR.w varcodelen
0002243C <AmiBlitz3.ab3@4099>   MOVE.w #$FFFF,lasta6
00022440 <AmiBlitz3.ab3@4101>   BSR.w smode
00022442 <AmiBlitz3.ab3@4102>   TST.w D0
00022446 <AmiBlitz3.ab3@4103>   BMI.w get_tokencode
0002244A <AmiBlitz3.ab3@4104>   CMP.w #$2E,D0
0002244E <AmiBlitz3.ab3@4105>    BEQ.w JL_0_4644                                         ;shortlist
00022452 <AmiBlitz3.ab3@4106>   CMP.w #"#",D0
00022456 <AmiBlitz3.ab3@4107>    BEQ.w JL_0_4718                                         ;constant found
0002245A <AmiBlitz3.ab3@4108>   CMP.w #$27,D0
0002245E <AmiBlitz3.ab3@4109>    BEQ.w JL_0_4638                                         ;local label
00022464 <AmiBlitz3.ab3@4110>   MOVE.l A5,letstart
0002246A <AmiBlitz3.ab3@4111>   JSR getparameter
0002246E <AmiBlitz3.ab3@4112>   BSR.w reget
00022472 <AmiBlitz3.ab3@4113>    BEQ.w JL_0_4658                                         ;label found
00022476 <AmiBlitz3.ab3@4114>   CMP.w #$7B,D0
0002247A <AmiBlitz3.ab3@4115>    BEQ.w JL_0_475C
0002247C <AmiBlitz3.ab3@4116>   TST.w d0
00022480 <AmiBlitz3.ab3@4117>    BPL 'll1
00022486 <AmiBlitz3.ab3@4118>   TST.b newsyntax
0002248A <AmiBlitz3.ab3@4119>    BEQ 'll1
00022490 <AmiBlitz3.ab3@4120>   LEA allowtab,a0
00022492 <AmiBlitz3.ab3@4121>   MOVEQ #0,d1
00022494 <AmiBlitz3.ab3@4122>   MOVE.b d0,d1
00022498 <AmiBlitz3.ab3@4123>   TST.b 0(a0,d1.w)
0002249C <AmiBlitz3.ab3@4124>    BNE 'll1
0002249E <AmiBlitz3.ab3@4125>   SUBQ.l #2,a5
000224A6 <AmiBlitz3.ab3@4126>   MOVE.w #":",lastchar                                     ;no doublepoint
000224AA <AmiBlitz3.ab3@4127> BRA JL_0_4658
000224B2 <AmiBlitz3.ab3@4130>   CMP.l #"equ ",-1(a5)
000224B6 <AmiBlitz3.ab3@4131>    BEQ 'll4
000224BE <AmiBlitz3.ab3@4132>   CMP.l #"EQU ",-1(a5)
000224C2 <AmiBlitz3.ab3@4133>    BNE 'll2
000224C4 <AmiBlitz3.ab3@4136>   ADDQ.l #2,a5
000224C8 <AmiBlitz3.ab3@4137>   BSR.w findlabel2
000224CC <AmiBlitz3.ab3@4138>   BEQ.w 'lf1
000224D0 <AmiBlitz3.ab3@4139>   BSR.w addlabelhash
000224D8 <AmiBlitz3.ab3@4140>   MOVE.l #$1,$4(A2)
000224E0 <AmiBlitz3.ab3@4143>   CMPI.l #$1,$4(A2)
000224E4 <AmiBlitz3.ab3@4144>    BNE.w illconerr
000224E8 <AmiBlitz3.ab3@4145>   BSR get1bytemain
000224EA <AmiBlitz3.ab3@4146>   MOVE.l A2,-(A7)
000224EC <AmiBlitz3.ab3@4157>   SUBQ.l #1,a5
000224EE <AmiBlitz3.ab3@4160>   SUBQ.l #1,a5
000224F4 <AmiBlitz3.ab3@4161>   JSR AJL_0_BF6E
000224F6 <AmiBlitz3.ab3@4162>   MOVEA.l (A7)+,A2
000224FA <AmiBlitz3.ab3@4163>   MOVE.l D3,$8(A2)
000224FC <AmiBlitz3.ab3@4164>   RTS
00022500 <AmiBlitz3.ab3@4165>   BSR get1bytemain
00022508 <AmiBlitz3.ab3@4168>   CMP.l #"SET ",-1(a5)
0002250C <AmiBlitz3.ab3@4169>   BNE 'll3
00022510 <AmiBlitz3.ab3@4170> BRA 'll4
00022516 <AmiBlitz3.ab3@4173> JMP AJL_0_DEA6
0002251A <AmiBlitz3.ab3@4176>   CMP.w #-$7FDE,D0
0002251E <AmiBlitz3.ab3@4177>   BEQ.w get_tokencode
00022522 <AmiBlitz3.ab3@4178> BRA.w undodebug
00022526 <AmiBlitz3.ab3@4181>   BSR.w undodebug
0002252A <AmiBlitz3.ab3@4182>   BSR.w createlab
0002252E <AmiBlitz3.ab3@4183> BRA.w JL_0_466E
00022532 <AmiBlitz3.ab3@4186>   BSR.w get1bytemain
00022536 <AmiBlitz3.ab3@4187>    BEQ.w JL_0_462C
0002253A <AmiBlitz3.ab3@4188>   CMP.w #"'",D0
0002253E <AmiBlitz3.ab3@4189>    BEQ.w JL_0_4638
00022542 <AmiBlitz3.ab3@4190>    BSR.w makename2
00022544 <AmiBlitz3.ab3@4191>    TST.w d0
00022548 <AmiBlitz3.ab3@4192>    BPL 'll1
0002254A <AmiBlitz3.ab3@4193>    SUBQ.l #2,a5
00022552 <AmiBlitz3.ab3@4194>    MOVE.w #":",lastchar
00022556 <AmiBlitz3.ab3@4195> BRA JL_0_4658                                              ;????
0002255A <AmiBlitz3.ab3@4199>   BSR.w undodebug
00022560 <AmiBlitz3.ab3@4200>   LEA ptr_parameterstore,A0
00022566 <AmiBlitz3.ab3@4201>   LEA lastgloballabel,A1
00022568 <AmiBlitz3.ab3@4204>   MOVE.b (A0)+,(A1)+
0002256C <AmiBlitz3.ab3@4205>    BNE.w JL_0_4668
00022570 <AmiBlitz3.ab3@4208>   BSR.w findlabel2
00022574 <AmiBlitz3.ab3@4209>    BEQ.w JL_0_4698
00022578 <AmiBlitz3.ab3@4210>    BSR.w addlabelhash
0002257C <AmiBlitz3.ab3@4213>   CLR.l $4(A2)
00022584 <AmiBlitz3.ab3@4214>   MOVE.l destpointer,$8(A2)
0002258C <AmiBlitz3.ab3@4217>   MOVE.w procnum,$10(A2)
0002258E <AmiBlitz3.ab3@4218> RTS
00022592 <AmiBlitz3.ab3@4222>   MOVE.l $4(A2),D0
00022596 <AmiBlitz3.ab3@4223>   BTST #$0,D0
0002259A <AmiBlitz3.ab3@4224>    BNE.w illlaberr
000225A0 <AmiBlitz3.ab3@4225>   TST.w pass
000225A4 <AmiBlitz3.ab3@4227>   MOVE.l $8(A2),D0
000225A8 <AmiBlitz3.ab3@4228>    BNE.w duplaberr
000225B0 <AmiBlitz3.ab3@4229>   MOVE.w procnum,$10(A2)
000225B4 <AmiBlitz3.ab3@4230>   MOVEA.l $4(A2),A3
000225BA <AmiBlitz3.ab3@4231>   MOVEA.l _execbase,A6
000225BE <AmiBlitz3.ab3@4234>   CMPA.w #$0,A3
000225C2 <AmiBlitz3.ab3@4235>    BEQ.w JL_0_467A
000225C6 <AmiBlitz3.ab3@4236>     MOVE.l $4(A2),D1
000225CA <AmiBlitz3.ab3@4237>     BTST #$0,D1
000225CE <AmiBlitz3.ab3@4238>     BNE.w illlaberr
000225D2 <AmiBlitz3.ab3@4239>   MOVE.w $8(A3),D1
000225D6 <AmiBlitz3.ab3@4240>   CMP.w $10(A2),D1
000225DA <AmiBlitz3.ab3@4241>    BEQ.w JL_0_46DC
000225E0 <AmiBlitz3.ab3@4242>    TST.b newsyntax
000225E4 <AmiBlitz3.ab3@4243>    BEQ 'l1
000225E8 <AmiBlitz3.ab3@4244> BRA.w JL_0_46DC                                            ;label context out of range fix
000225F0 <AmiBlitz3.ab3@4249>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
000225F4 <AmiBlitz3.ab3@4250> BRA.w referr
000225FA <AmiBlitz3.ab3@4253>   MOVE.w dontwrite,D1
000225FE <AmiBlitz3.ab3@4254>    BNE.w JL_0_4706
00022602 <AmiBlitz3.ab3@4255>   MOVEA.l $4(A3),A1
00022608 <AmiBlitz3.ab3@4256>   BTST #$0,$7(A3)
0002260C <AmiBlitz3.ab3@4257>    BEQ.w JL_0_4700
0002260E <AmiBlitz3.ab3@4258>   SUBQ.w #1,A1
00022614 <AmiBlitz3.ab3@4259>   MOVE.l data2,(A1)
00022618 <AmiBlitz3.ab3@4260> BRA.w JL_0_4706
0002261E <AmiBlitz3.ab3@4263>   MOVE.l destpointer,(A1)
00022620 <AmiBlitz3.ab3@4266>   MOVEA.l A3,A1
00022622 <AmiBlitz3.ab3@4267>   MOVEA.l (A3),A3
00022626 <AmiBlitz3.ab3@4268>   MOVE.l A3,$4(A2)
00022628 <AmiBlitz3.ab3@4269>   MOVEQ.l #$0C+2,D0
0002262E <AmiBlitz3.ab3@4270>   MOVE.l mempool,a0
00022634 <AmiBlitz3.ab3@4271>   MOVEA.l _execbase,A6
00022638 <AmiBlitz3.ab3@4272>   JSR _FreePooled(A6)
0002263C <AmiBlitz3.ab3@4273> BRA.w JL_0_46BC
00022646 <AmiBlitz3.ab3@4278>    MOVE.l #forthstack,forthsp
00022650 <AmiBlitz3.ab3@4279>   MOVE.l #precstack,precsp
00022654 <AmiBlitz3.ab3@4280>    BSR.w getparameter2
00022658 <AmiBlitz3.ab3@4283>   BSR.w findlabel2
0002265C <AmiBlitz3.ab3@4284>    BEQ.w JL_0_4738
00022660 <AmiBlitz3.ab3@4285>    BSR.w addlabelhash
00022668 <AmiBlitz3.ab3@4286>   MOVE.l #$1,$4(A2)
0002266C <AmiBlitz3.ab3@4287> BRA.w JL_0_4744
00022674 <AmiBlitz3.ab3@4290>   CMPI.l #$1,$4(A2)
00022678 <AmiBlitz3.ab3@4291>    BNE.w illconerr
0002267C <AmiBlitz3.ab3@4300>   CMP.w #$3D,D0
00022680 <AmiBlitz3.ab3@4301>   BEQ.w JL_0_474E
00022682 <AmiBlitz3.ab3@4302> RTS
00022684 <AmiBlitz3.ab3@4306>   MOVE.l A2,-(A7)
0002268A <AmiBlitz3.ab3@4307>   JSR AJL_0_BF6E
0002268C <AmiBlitz3.ab3@4308>   MOVEA.l (A7)+,A2
00022690 <AmiBlitz3.ab3@4309>   MOVE.l D3,$8(A2)                                         ;store constant
00022698 <AmiBlitz3.ab3@4310>   CMP.w #$0a,lastchar
0002269C <AmiBlitz3.ab3@4311>   BNE 'l1
000226A4 <AmiBlitz3.ab3@4312>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000226A6 <AmiBlitz3.ab3@4315> RTS
000226AA <AmiBlitz3.ab3@4318>   BSR.w findproc                                           ;write statement call
000226AE <AmiBlitz3.ab3@4319>   BEQ _state
000226B4 <AmiBlitz3.ab3@4320>   TST.l unusedfunc
000226B8 <AmiBlitz3.ab3@4321>   BEQ noprocerr
000226BE <AmiBlitz3.ab3@4323>   JSR gotoendsource
000226C2 <AmiBlitz3.ab3@4326>   TST.b $5(A2)
000226C8 <AmiBlitz3.ab3@4328>   MOVE.l a2,currentfunccall
000226D0 <AmiBlitz3.ab3@4329>   MOVE.b #1,funccall
000226D6 <AmiBlitz3.ab3@4330>   MOVE.b #1,isfunc(a2)
000226DA <AmiBlitz3.ab3@4331>   MOVE.l $E(A2),-(A7)
000226DC <AmiBlitz3.ab3@4332>   MOVEQ.l #$00,D0
000226E0 <AmiBlitz3.ab3@4333>   MOVE.b $4(A2),D0
000226E6 <AmiBlitz3.ab3@4334>   MOVE.l d0,parnumtemp
000226EA <AmiBlitz3.ab3@4335>   BEQ.w JL_0_4786
000226EE <AmiBlitz3.ab3@4336>   TST.b $20(a2)                                            ;increase if morepar
000226F2 <AmiBlitz3.ab3@4337>   BNE 'no0par
000226F4 <AmiBlitz3.ab3@4338>   MOVE.l a5,a4
000226F8 <AmiBlitz3.ab3@4341>   CMP.b #$20,(a4)+
000226FC <AmiBlitz3.ab3@4342>   BEQ 'l1
00022702 <AmiBlitz3.ab3@4343>   CMP.b #"}",-1(a4)
00022706 <AmiBlitz3.ab3@4344>   BNE  'no0par                                             ;statementcall pars
00022708 <AmiBlitz3.ab3@4345>   MOVEQ #0,d0
0002270C <AmiBlitz3.ab3@4348>   LEA $16(A2),A1
0002270E <AmiBlitz3.ab3@4351>   MOVE.l d1,-(a7)
00022710 <AmiBlitz3.ab3@4352>   MOVE.b (a1),d2
00022712 <AmiBlitz3.ab3@4353>   MOVE.l d0,d1
00022716 <AmiBlitz3.ab3@4354>   CMP.w #4,d2
0002271A <AmiBlitz3.ab3@4355>   BNE 'l1b
00022720 <AmiBlitz3.ab3@4356>   ADD.l #$203c,d1
00022726 <AmiBlitz3.ab3@4358>   JSR writeword
0002272C <AmiBlitz3.ab3@4359>   MOVE.l #$ffff0000,d1
00022732 <AmiBlitz3.ab3@4361>   JSR writelong
00022736 <AmiBlitz3.ab3@4362> BRA 'l2b
0002273C <AmiBlitz3.ab3@4365>   TST.b fpu
00022740 <AmiBlitz3.ab3@4366>   BNE 'l1c
00022744 <AmiBlitz3.ab3@4367>   CMP.w #5,d2
00022748 <AmiBlitz3.ab3@4368>   BNE 'l1c
0002274E <AmiBlitz3.ab3@4369>   ADD.l #$203c,d1
00022754 <AmiBlitz3.ab3@4371>   JSR writeword
0002275A <AmiBlitz3.ab3@4372>   MOVE.l #$800000c1,d1
00022760 <AmiBlitz3.ab3@4374>   JSR writelong
00022764 <AmiBlitz3.ab3@4375> BRA 'l2b
0002276A <AmiBlitz3.ab3@4378>   ADD.l #$70ff,d1
00022770 <AmiBlitz3.ab3@4380>   JSR writeword
00022776 <AmiBlitz3.ab3@4381>   TST.b fpu                                                ; fpucheck added  tomsmart1
0002277A <AmiBlitz3.ab3@4382>   BEQ 'l2b
00022780 <AmiBlitz3.ab3@4384>   MOVE.l #$f23c5000,d1
00022782 <AmiBlitz3.ab3@4385>   MOVE.l d0,d2
00022784 <AmiBlitz3.ab3@4386>   ASR.l #2,d2
00022786 <AmiBlitz3.ab3@4387>   ADD.l d2,d1
0002278C <AmiBlitz3.ab3@4389>   JSR writelong
00022790 <AmiBlitz3.ab3@4390>   MOVE.w #$ffff,d1
00022796 <AmiBlitz3.ab3@4392>   JSR writeword
00022798 <AmiBlitz3.ab3@4395>   MOVE.l (a7)+,d1
0002279A <AmiBlitz3.ab3@4396>   ADDQ.l #1,a1
000227A0 <AmiBlitz3.ab3@4397>   ADD.l #$0200,d0
000227A6 <AmiBlitz3.ab3@4398>   CMP.l #$0e00,d0
000227AA <AmiBlitz3.ab3@4399>    BEQ syntaxerr
000227AC <AmiBlitz3.ab3@4400>   TST.b (a1)
000227B0 <AmiBlitz3.ab3@4401>    BNE 'again
000227B4 <AmiBlitz3.ab3@4402> BRA JL_0_4786
000227BE <AmiBlitz3.ab3@4405>   MOVE.w a2offset,a2offset2
000227C2 <AmiBlitz3.ab3@4406>   LEA $16(A2),A2
000227C8 <AmiBlitz3.ab3@4407>   MOVE.b funcparloop,-(a7)
000227D0 <AmiBlitz3.ab3@4408>   MOVE.b #1,funcparloop
000227D6 <AmiBlitz3.ab3@4409>   MOVE.b blitzparloop,-(a7)
000227DC <AmiBlitz3.ab3@4410>   CLR.b blitzparloop
000227E0 <AmiBlitz3.ab3@4411>   BSR.w fetchpees2
000227E6 <AmiBlitz3.ab3@4412>   MOVE.b (a7)+,blitzparloop
000227EC <AmiBlitz3.ab3@4413>   MOVE.b (a7)+,funcparloop
000227F0 <AmiBlitz3.ab3@4414> BRA.w JL_0_478A
000227F4 <AmiBlitz3.ab3@4417>   BSR.w get1bytemain
000227F8 <AmiBlitz3.ab3@4420>   CMP.w #$7D,D0
000227FC <AmiBlitz3.ab3@4421>    BNE.w morepar_                                          ;syntax error morepar
00022802 <AmiBlitz3.ab3@4422>    JSR chkstak
00022804 <AmiBlitz3.ab3@4423>   MOVE.l (A7)+,D1
0002280A <AmiBlitz3.ab3@4439>    JSR JL_0_AFCA
00022810 <AmiBlitz3.ab3@4461>   CLR.b funccall
00022814 <AmiBlitz3.ab3@4462> BRA.w get1bytemain
0002281A <AmiBlitz3.ab3@4466>   MOVE.l d0,lasttoken
0002281E <AmiBlitz3.ab3@4467>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022822 <AmiBlitz3.ab3@4468>   BNE 'l2
00022826 <AmiBlitz3.ab3@4469>    MOVE.w #$dd05,d0
0002282A <AmiBlitz3.ab3@4472>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
0002282E <AmiBlitz3.ab3@4473>   BNE 'l3
00022832 <AmiBlitz3.ab3@4474>    MOVE.w #$dd06,d0
00022836 <AmiBlitz3.ab3@4477>   CMP.w #-$7FC4,D0
0002283A <AmiBlitz3.ab3@4478>   BCS.w JL_0_47C4
0002283E <AmiBlitz3.ab3@4479>     CMP.w #-$7F4D,D0
00022842 <AmiBlitz3.ab3@4480>     BCC.w JL_0_47C4
0002284A <AmiBlitz3.ab3@4481>       BTST #$7,assemblercheck                              ;inline Assembler checking
0002284E <AmiBlitz3.ab3@4482>       BNE.b JL_0_47C0
00022854 <AmiBlitz3.ab3@4483>         TST.b debugmode
00022858 <AmiBlitz3.ab3@4484>         BEQ.b 'l10
00022862 <AmiBlitz3.ab3@4489>           MOVE.w d_nomemleft,dontwrite
0002286C <AmiBlitz3.ab3@4490>           MOVE.l d_bigpc,bigpc
00022876 <AmiBlitz3.ab3@4491>           MOVE.l d_pc,destpointer
00022880 <AmiBlitz3.ab3@4492>           MOVE.l cont_pc2,cont_pc
00022884 <AmiBlitz3.ab3@4498> BRA.w JL_0_612C
00022888 <AmiBlitz3.ab3@4501>   BCLR #$F,D0
0002288A <AmiBlitz3.ab3@4502>   MOVE.w D0,D1
0002288E <AmiBlitz3.ab3@4503>   ANDI.w #$7F00,D1
00022892 <AmiBlitz3.ab3@4504>   BNE.w JL_0_4856
00022896 <AmiBlitz3.ab3@4505>     CMP.w #$B3,D0                                          ;intern Instructions
0002289A <AmiBlitz3.ab3@4506>     BCS.w JL_0_47F2
0002289E <AmiBlitz3.ab3@4507>       SUBI.w #$77,D0
000228A2 <AmiBlitz3.ab3@4508>       CMP.w #$4B,D0
000228A6 <AmiBlitz3.ab3@4509>       BEQ.w JL_0_4830
000228AA <AmiBlitz3.ab3@4510>         CMP.w #$46,D0
000228AE <AmiBlitz3.ab3@4511>         BEQ.w JL_0_4830
000228B2 <AmiBlitz3.ab3@4512> BRA.w JL_0_4834                                            ; change tokennum
000228B6 <AmiBlitz3.ab3@4515>     CMP.w #$38,D0
000228BA <AmiBlitz3.ab3@4516>      BEQ.w JL_0_4830
000228BE <AmiBlitz3.ab3@4517>     CMP.w #$39,D0
000228C2 <AmiBlitz3.ab3@4518>      BEQ.w JL_0_4830
000228C6 <AmiBlitz3.ab3@4519>     CMP.w #$D,D0
000228CA <AmiBlitz3.ab3@4520>      BEQ.w JL_0_4830
000228CE <AmiBlitz3.ab3@4521>     CMP.w #$12,D0
000228D2 <AmiBlitz3.ab3@4522>      BEQ.w JL_0_4830
000228D6 <AmiBlitz3.ab3@4523>     CMP.w #$13,D0
000228DA <AmiBlitz3.ab3@4524>      BEQ.w JL_0_4830
000228DE <AmiBlitz3.ab3@4525>     CMP.w #$1A,D0
000228E2 <AmiBlitz3.ab3@4526>      BEQ.w JL_0_4830
000228E6 <AmiBlitz3.ab3@4527>     CMP.w #$2A,D0
000228EA <AmiBlitz3.ab3@4528>      BHI.w JL_0_4834
000228EE <AmiBlitz3.ab3@4529>     CMP.w #$23,D0
000228F2 <AmiBlitz3.ab3@4530>      BCS.b JL_0_4834
000228F6 <AmiBlitz3.ab3@4533>   BSR.w undodebug
000228F8 <AmiBlitz3.ab3@4536>   SUBQ.w #1,D0
000228FA <AmiBlitz3.ab3@4537>   LSL.w #2,D0
00022900 <AmiBlitz3.ab3@4544>   LEA instructionbase,A0
00022904 <AmiBlitz3.ab3@4545>   MOVEA.l $0(A0,D0.W),A0
00022906 <AmiBlitz3.ab3@4546>   MOVE.l A0,-(A7)
0002290A <AmiBlitz3.ab3@4547> BRA.w get1bytemain
0002290C <AmiBlitz3.ab3@4553>   MOVE.w D0,D1
00022910 <AmiBlitz3.ab3@4554>    BSR.w searchinstr
00022916 <AmiBlitz3.ab3@4555>    TST.b newmode
0002291A <AmiBlitz3.ab3@4556>    BNE compile_term
00022920 <AmiBlitz3.ab3@4557>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022924 <AmiBlitz3.ab3@4558>    BNE.w stamigalib
0002292A <AmiBlitz3.ab3@4559>   BTST #$0,$1(A3)
0002292E <AmiBlitz3.ab3@4560>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022932 <AmiBlitz3.ab3@4561>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022936 <AmiBlitz3.ab3@4562>    BSR.w JL_0_66F6
0002293C <AmiBlitz3.ab3@4568>   MOVE.w numreps,-(A7)
00022942 <AmiBlitz3.ab3@4569>   MOVE.w userp,-(A7)
00022948 <AmiBlitz3.ab3@4570>   MOVE.w a2offset,-(A7)
0002294A <AmiBlitz3.ab3@4571>   MOVE.l A2,-(A7)                                          ;recurs.
00022954 <AmiBlitz3.ab3@4572>   MOVE.w convsize,userp
00022958 <AmiBlitz3.ab3@4573>   LEA $6(A3),A1
0002295A <AmiBlitz3.ab3@4577>    MOVE.w (A1),D2
0002295E <AmiBlitz3.ab3@4578>    BMI.w SERR                                              ;statement syntax error
00022962 <AmiBlitz3.ab3@4579>   ANDI.w #$FF,D2
00022964 <AmiBlitz3.ab3@4580>   CMP.w D2,D1
00022968 <AmiBlitz3.ab3@4581>    BEQ.w JL_0_48E0
0002296C <AmiBlitz3.ab3@4582>    BCS.w JL_0_48CC
0002296E <AmiBlitz3.ab3@4583>   MOVE.b (A1),D3
00022972 <AmiBlitz3.ab3@4584>   ANDI.w #$7,D3
00022976 <AmiBlitz3.ab3@4585>    BEQ.w JL_0_48CC
00022978 <AmiBlitz3.ab3@4586>   MOVE.w D2,D4
0002297A <AmiBlitz3.ab3@4587>   SUB.w D3,D4
0002297C <AmiBlitz3.ab3@4588>   MOVEQ.l #$00,D5
0002297E <AmiBlitz3.ab3@4589>   MOVE.w D1,D5
00022980 <AmiBlitz3.ab3@4590>   SUB.w D4,D5
00022982 <AmiBlitz3.ab3@4591>   DIVU D3,D5
00022984 <AmiBlitz3.ab3@4592>   SWAP D5
00022986 <AmiBlitz3.ab3@4593>   TST.w D5
0002298A <AmiBlitz3.ab3@4594>    BEQ.w JL_0_48E0
0002298C <AmiBlitz3.ab3@4597>   ADDQ.w #2,A1
0002298E <AmiBlitz3.ab3@4598>   ADDA.w D2,A1
00022992 <AmiBlitz3.ab3@4599>    BSR.w aligna1
00022996 <AmiBlitz3.ab3@4600>    BSR.w skiplibreg
0002299A <AmiBlitz3.ab3@4601>   LEA $C(A1),A1
0002299E <AmiBlitz3.ab3@4602> BRA.w JL_0_489A
000229A0 <AmiBlitz3.ab3@4605>   MOVE.w (a3),d2
000229A4 <AmiBlitz3.ab3@4606>   BTST #1,d2
000229A8 <AmiBlitz3.ab3@4607>   BEQ statement_
000229AC <AmiBlitz3.ab3@4608>   CMP.w #1,d1
000229B0 <AmiBlitz3.ab3@4609>   BEQ statement_
000229B4 <AmiBlitz3.ab3@4612>   CMP.b #$20,(a5)+
000229B8 <AmiBlitz3.ab3@4613>   BEQ 'l2
000229BE <AmiBlitz3.ab3@4614>   CMP.b #"(",-2(a5)
000229C2 <AmiBlitz3.ab3@4615>   BNE 'l1
000229C6 <AmiBlitz3.ab3@4616> BRA parameter_
000229CA <AmiBlitz3.ab3@4619> BRA inbrackets_
000229CC <AmiBlitz3.ab3@4622>   MOVE.b (A1),D2
000229CE <AmiBlitz3.ab3@4623>   LSL.w #8,D2
000229D0 <AmiBlitz3.ab3@4624>   OR.w D2,D1
000229D2 <AmiBlitz3.ab3@4625>   MOVE.l A1,-(A7)
000229D8 <AmiBlitz3.ab3@4626>   CLR.w a2offset
000229DA <AmiBlitz3.ab3@4627>   TST.w D1
000229DE <AmiBlitz3.ab3@4628>    BEQ.w JL_0_4900
000229E2 <AmiBlitz3.ab3@4629>   LEA $2(A1),A2
000229E8 <AmiBlitz3.ab3@4631>   MOVE.l lasttoken,-(a7)
000229EE <AmiBlitz3.ab3@4632>   CLR.l lasttoken
000229F2 <AmiBlitz3.ab3@4633>   BSR.w fetchlibps
000229F8 <AmiBlitz3.ab3@4634>   MOVE.l (a7)+,lasttoken
000229FC <AmiBlitz3.ab3@4635> BRA.w JL_0_4904
00022A00 <AmiBlitz3.ab3@4638>   BSR.w get1bytemain
00022A02 <AmiBlitz3.ab3@4641>   MOVEA.l (A7)+,A1
00022A04 <AmiBlitz3.ab3@4642>   MOVEA.l (A7)+,A2
00022A0A <AmiBlitz3.ab3@4643>   MOVE.w a2offset,D1
00022A0E <AmiBlitz3.ab3@4644>    BEQ.w JL_0_493A
00022A14 <AmiBlitz3.ab3@4645>   MOVE.w D1,preplibst+2
00022A1A <AmiBlitz3.ab3@4646>   MOVE.l preplibst,D1
00022A20 <AmiBlitz3.ab3@4647>    JSR writelong                                           ;write array offset stack correct
00022A2A <AmiBlitz3.ab3@4648>   MOVE.w numreps,movenumrep+2
00022A2E <AmiBlitz3.ab3@4649>    BEQ.w JL_0_493A
00022A34 <AmiBlitz3.ab3@4650>   MOVE.l movenumrep,D1
00022A3A <AmiBlitz3.ab3@4651>    JSR writelong
00022A40 <AmiBlitz3.ab3@4655>   JSR userjsr
00022A46 <AmiBlitz3.ab3@4658>   MOVE.w a2offset,D1
00022A4A <AmiBlitz3.ab3@4659>    BEQ.w JL_0_4974
00022A4E <AmiBlitz3.ab3@4660>   CMP.w #$8,D1
00022A52 <AmiBlitz3.ab3@4661>    BHI.w JL_0_4964
00022A56 <AmiBlitz3.ab3@4662>   ANDI.w #$7,D1
00022A58 <AmiBlitz3.ab3@4663>   LSL.w #8,D1
00022A5A <AmiBlitz3.ab3@4664>   LSL.w #1,D1
00022A5E <AmiBlitz3.ab3@4665>   ORI.w #$504F,D1
00022A64 <AmiBlitz3.ab3@4667>   JSR writeword
00022A68 <AmiBlitz3.ab3@4668> BRA.w JL_0_4974
00022A6E <AmiBlitz3.ab3@4671>   MOVE.w D1,fixlibst+2
00022A74 <AmiBlitz3.ab3@4672>   MOVE.l fixlibst,D1
00022A7A <AmiBlitz3.ab3@4673>   JSR writelong
00022A80 <AmiBlitz3.ab3@4676>   MOVE.w (A7)+,a2offset
00022A86 <AmiBlitz3.ab3@4677>   MOVE.w (A7)+,userp
00022A8C <AmiBlitz3.ab3@4678>   MOVE.w (A7)+,numreps
00022A90 <AmiBlitz3.ab3@4679> BRA.w reget
00022A94 <AmiBlitz3.ab3@4683>   MOVEM.l A2-A3,-(A7)
00022A9A <AmiBlitz3.ab3@4684>   CLR.b doublepeek
00022AA0 <AmiBlitz3.ab3@4685>   MOVE.l A5,lastsourcepos
00022AA4 <AmiBlitz3.ab3@4686>    BSR.w getchar
00022AA8 <AmiBlitz3.ab3@4687>   CMP.w #$2E,D0
00022AAC <AmiBlitz3.ab3@4688>    BEQ.w JL_0_49B4
00022AB2 <AmiBlitz3.ab3@4689>   MOVEA.l defaulttype,A2
00022AB6 <AmiBlitz3.ab3@4690>   CMP.w #$24,D0
00022ABA <AmiBlitz3.ab3@4691>    BNE.w JL_0_49CA
00022ABC <AmiBlitz3.ab3@4692>   MOVEQ.l #$07,D1
00022AC0 <AmiBlitz3.ab3@4693> BRA.w JL_0_49DE
00022AC4 <AmiBlitz3.ab3@4696>   BSR.w getparameter2
00022AC8 <AmiBlitz3.ab3@4697>   BEQ.w syntaxerr
00022ACE <AmiBlitz3.ab3@4698>   LEA newtypebase,A2
00022AD2 <AmiBlitz3.ab3@4699>   BSR.w findtype
00022AD6 <AmiBlitz3.ab3@4700>   BNE.w notypeerr
00022AE0 <AmiBlitz3.ab3@4704>   MOVE.w oldqflag,instringon
00022AE6 <AmiBlitz3.ab3@4705>   MOVEA.l lastsourcepos,A5
00022AEA <AmiBlitz3.ab3@4710>   MOVE.w $6(A2),D1
00022AF0 <AmiBlitz3.ab3@4711>   CMP.w #8,8(a2)
00022AF4 <AmiBlitz3.ab3@4712>   BNE 'l1
00022AFC <AmiBlitz3.ab3@4713>   MOVE.b #1,doublepeek
00022B02 <AmiBlitz3.ab3@4717>   MOVE.w D1,convsize
00022B06 <AmiBlitz3.ab3@4718>   MOVEM.l (A7)+,A2-A3
00022B08 <AmiBlitz3.ab3@4719> RTS
00022B0E <AmiBlitz3.ab3@4724>   BTST #$3,$1(A3)
00022B12 <AmiBlitz3.ab3@4725>   BEQ.w JL_0_4A06
00022B16 <AmiBlitz3.ab3@4726>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022B1A <AmiBlitz3.ab3@4728>   ORI.w #$7000,D1
00022B20 <AmiBlitz3.ab3@4729>   JSR writeword
00022B26 <AmiBlitz3.ab3@4730>   ADDQ.w #1,regnum
00022B28 <AmiBlitz3.ab3@4733> RTS
00022B2A <AmiBlitz3.ab3@4739>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022B2C <AmiBlitz3.ab3@4740>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022B2E <AmiBlitz3.ab3@4741>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022B30 <AmiBlitz3.ab3@4745> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022B32 <AmiBlitz3.ab3@4746>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022B34 <AmiBlitz3.ab3@4747>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022B36 <AmiBlitz3.ab3@4751> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022B38 <AmiBlitz3.ab3@4752>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022B3A <AmiBlitz3.ab3@4753>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022B3C <AmiBlitz3.ab3@4757> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022B3E <AmiBlitz3.ab3@4760> srctype:    Ds.w 1
00022B42 <AmiBlitz3.ab3@4765>   BSR.w excget
00022B46 <AmiBlitz3.ab3@4766>   CMP.w #$2C,D0
00022B4A <AmiBlitz3.ab3@4767>    BNE.w syntaxerr
00022B50 <AmiBlitz3.ab3@4768>   MOVE.b D2,srctype
00022B56 <AmiBlitz3.ab3@4769>   MOVE.w pusha2,D1
00022B5C <AmiBlitz3.ab3@4770>   JSR writeword
00022B60 <AmiBlitz3.ab3@4771>   BSR.w get1bytemain
00022B64 <AmiBlitz3.ab3@4772>   BSR.w excget
00022B6A <AmiBlitz3.ab3@4773>   CMP.b srctype,D2
00022B6E <AmiBlitz3.ab3@4774>    BNE.w excerr2
00022B74 <AmiBlitz3.ab3@4775>   MOVE.w pulla1,D1
00022B7A <AmiBlitz3.ab3@4776>    JSR writeword
00022B7E <AmiBlitz3.ab3@4777>   CMP.b #$2,D2
00022B82 <AmiBlitz3.ab3@4778>    BCS.w JL_0_4B2A
00022B86 <AmiBlitz3.ab3@4779>    BEQ.w JL_0_4B1E
00022B8A <AmiBlitz3.ab3@4780>   LEA swapl(PC),A0
00022B8E <AmiBlitz3.ab3@4781>   LEA swaplf(PC),A1
00022B94 <AmiBlitz3.ab3@4782> JMP pokecode
00022B98 <AmiBlitz3.ab3@4785>   LEA swapw(PC),A0
00022B9C <AmiBlitz3.ab3@4786>   LEA swapwf(PC),A1
00022BA2 <AmiBlitz3.ab3@4787> JMP pokecode
00022BA6 <AmiBlitz3.ab3@4790>   LEA swapb(PC),A0
00022BAA <AmiBlitz3.ab3@4791>   LEA swapbf(PC),A1
00022BB0 <AmiBlitz3.ab3@4792> JMP pokecode
00022BB6 <AmiBlitz3.ab3@4796>   JSR getparameter
00022BBA <AmiBlitz3.ab3@4797>   BSR.w JL_0_8E3C
00022BC0 <AmiBlitz3.ab3@4798>   JSR calcvar
00022BC4 <AmiBlitz3.ab3@4799>   BTST #$E,D2
00022BC8 <AmiBlitz3.ab3@4800>    BEQ.w JL_0_4B4E
00022BCC <AmiBlitz3.ab3@4801>   MOVE.b #$4,D2
00022BCE <AmiBlitz3.ab3@4804>   TST.b D2
00022BD2 <AmiBlitz3.ab3@4805>    BEQ.w excerr
00022BD6 <AmiBlitz3.ab3@4806>   BTST #$F,D2
00022BDA <AmiBlitz3.ab3@4807>    BNE.w JL_0_4B6A
00022BE0 <AmiBlitz3.ab3@4808>   MOVE.w leaamp,D1
00022BE6 <AmiBlitz3.ab3@4809>    JSR pokewda5s
00022BE8 <AmiBlitz3.ab3@4810>   MOVE.w D3,D1
00022BEE <AmiBlitz3.ab3@4811> JMP writeword
00022BF0 <AmiBlitz3.ab3@4814> RTS
00022BF6 <AmiBlitz3.ab3@4824>   MOVE.l mempool,a0
00022BFC <AmiBlitz3.ab3@4825>   MOVEA.l _execbase,A6
00022C00 <AmiBlitz3.ab3@4826> JMP _AllocPooled(a6)
00022C04 <AmiBlitz3.ab3@4830>   MOVE.w #$BF00,D1
00022C0A <AmiBlitz3.ab3@4831> JMP Atokejsr
00022C0E <AmiBlitz3.ab3@4835>   CMP.w #-$7FFA,D0
00022C12 <AmiBlitz3.ab3@4836>    BEQ.w popreturn
00022C16 <AmiBlitz3.ab3@4837>   CMP.w #-$7FEA,D0
00022C1A <AmiBlitz3.ab3@4838>    BEQ.w popnext2
00022C1E <AmiBlitz3.ab3@4839>   CMP.w #-$7FF2,D0
00022C22 <AmiBlitz3.ab3@4840>    BEQ.w popselect2
00022C26 <AmiBlitz3.ab3@4841>   CMP.w #-$7FF5,D0
00022C2A <AmiBlitz3.ab3@4842>    BEQ.w get1bytemain
00022C2E <AmiBlitz3.ab3@4843>   CMP.w #-$7FF4,D0
00022C32 <AmiBlitz3.ab3@4844>    BEQ.w get1bytemain
00022C36 <AmiBlitz3.ab3@4845>   CMP.w #-$7FEC,D0
00022C3A <AmiBlitz3.ab3@4846>    BEQ.w get1bytemain
00022C3E <AmiBlitz3.ab3@4847>   CMP.w #-$7F45,D0
00022C42 <AmiBlitz3.ab3@4848>    BEQ.w get1bytemain
00022C46 <AmiBlitz3.ab3@4849> BRA.w syntaxerr
00022C4C <AmiBlitz3.ab3@4852>   TST.b debugmode
00022C50 <AmiBlitz3.ab3@4853>    BEQ.w popreturn__norerr
00022C54 <AmiBlitz3.ab3@4854>   LEA popreturn__rfix(PC),A0
00022C58 <AmiBlitz3.ab3@4855>   LEA popreturn__rfixf(PC),A1
00022C5E <AmiBlitz3.ab3@4856>    JSR pokecode
00022C62 <AmiBlitz3.ab3@4857>   MOVE.w #$C305,D1
00022C68 <AmiBlitz3.ab3@4858>    JSR Atokejsr
00022C6C <AmiBlitz3.ab3@4859>   MOVE.w popreturn__rfix2(PC),D1
00022C72 <AmiBlitz3.ab3@4861>    JSR writeword
00022C76 <AmiBlitz3.ab3@4862> BRA.w get1bytemain
00022C7C <AmiBlitz3.ab3@4866>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00022C80 <AmiBlitz3.ab3@4867>   BEQ.w popreturn__rfix2
00022C86 <AmiBlitz3.ab3@4870>   JSR $20000                                               ;reass
00022C88 <AmiBlitz3.ab3@4873>   ADDQ.w #6,A7
00022C8C <AmiBlitz3.ab3@4877>   MOVE.w popreturn__sfix(PC),D1
00022C92 <AmiBlitz3.ab3@4878>   JSR writeword
00022C96 <AmiBlitz3.ab3@4879> BRA.w get1bytemain
00022C98 <AmiBlitz3.ab3@4884>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00022C9E <AmiBlitz3.ab3@4889>   MOVE.l firstfor,D0
00022CA2 <AmiBlitz3.ab3@4890>    BEQ.w noforerr
00022CA4 <AmiBlitz3.ab3@4891>   MOVEA.l D0,A2
00022CA8 <AmiBlitz3.ab3@4892>    BSR.w get1bytemain
00022CAC <AmiBlitz3.ab3@4893>   BSR.w popnext
00022CB2 <AmiBlitz3.ab3@4896>   TST.b debugmode
00022CB6 <AmiBlitz3.ab3@4897>    BEQ.w popnext3__ner
00022CBC <AmiBlitz3.ab3@4898>   MOVE.l nextfixw2,D1
00022CC2 <AmiBlitz3.ab3@4899>   CMPI.w #$3,$C(A2)
00022CC6 <AmiBlitz3.ab3@4900>    BCS.w writelong2
00022CCC <AmiBlitz3.ab3@4901>   MOVE.l nextfixl2,D1
00022CD2 <AmiBlitz3.ab3@4902> writelong2 JMP  writelong
00022CD8 <AmiBlitz3.ab3@4905>   CMPI.w #$3,$C(A2)
00022CDC <AmiBlitz3.ab3@4906>    BCS.w popnext3__skip2
00022CE2 <AmiBlitz3.ab3@4907>   MOVE.l nextfixl,D1
00022CE8 <AmiBlitz3.ab3@4908>   JMP writelong
00022CEE <AmiBlitz3.ab3@4911>   MOVE.w nextfixw,D1
00022CF4 <AmiBlitz3.ab3@4912> JMP writeword
00022CF8 <AmiBlitz3.ab3@4916>   MOVE.w $C(A2),D0
00022CFE <AmiBlitz3.ab3@4917>   TST.b debugmode
00022D02 <AmiBlitz3.ab3@4918>    BEQ.w popnext__norunerr
00022D06 <AmiBlitz3.ab3@4919>   MOVE.w #$C306,D1
00022D0A <AmiBlitz3.ab3@4920>   CMP.w #$3,D0
00022D0E <AmiBlitz3.ab3@4921>    BCS.w popnext__oktc
00022D10 <AmiBlitz3.ab3@4922>   ADDQ.w #1,D1
00022D12 <AmiBlitz3.ab3@4925>   MOVE.l A2,-(A7)
00022D18 <AmiBlitz3.ab3@4926>   JSR Atokejsr
00022D1A <AmiBlitz3.ab3@4927>   MOVEA.l (A7)+,A2
00022D1C <AmiBlitz3.ab3@4930> RTS
00022D22 <AmiBlitz3.ab3@4934>   MOVE.l firstsel,D0
00022D26 <AmiBlitz3.ab3@4935>    BEQ.w eselerr
00022D28 <AmiBlitz3.ab3@4936>   MOVEA.l D0,A2
00022D2C <AmiBlitz3.ab3@4937>    BSR.w get1bytemain
00022D30 <AmiBlitz3.ab3@4940>   MOVE.w $C(A2),D2
00022D36 <AmiBlitz3.ab3@4941>   TST.b debugmode
00022D3A <AmiBlitz3.ab3@4942>    BEQ.w popselect__norerr
00022D3E <AmiBlitz3.ab3@4943>   MOVE.w #$C313,D1
00022D42 <AmiBlitz3.ab3@4944>   CMP.w #$3,D2
00022D46 <AmiBlitz3.ab3@4945>    BCS.w popselect__chkit
00022D48 <AmiBlitz3.ab3@4946>   ADDQ.w #1,D1
00022D4E <AmiBlitz3.ab3@4949>   JSR Atokejsr                                             ;make sure next thing on stack
00022D50 <AmiBlitz3.ab3@4953>   MOVEQ.l #$02,D1
00022D54 <AmiBlitz3.ab3@4954>   CMP.w #$3,D2
00022D58 <AmiBlitz3.ab3@4955>    BCS.w popselect__doit
00022D5A <AmiBlitz3.ab3@4956>   MOVEQ.l #$04,D1
00022D5E <AmiBlitz3.ab3@4957>   CMP.w #$7,D2
00022D62 <AmiBlitz3.ab3@4958>    BCS.w popselect__doit
00022D68 <AmiBlitz3.ab3@4959>   LEA endselstr,A0
00022D6E <AmiBlitz3.ab3@4960>   LEA endselstrf,A1
00022D74 <AmiBlitz3.ab3@4961>   TST.b debugmode
00022D78 <AmiBlitz3.ab3@4962>    BEQ.w popselect__norerr3
00022D7E <AmiBlitz3.ab3@4963>   LEA endselstrf2,A1
00022D84 <AmiBlitz3.ab3@4966>   JSR pokecode
00022D88 <AmiBlitz3.ab3@4967>   MOVE.w #$C003,D1                                         ;global freemem
00022D8E <AmiBlitz3.ab3@4968> JMP Atokejsr
00022D94 <AmiBlitz3.ab3@4971>   TST.b debugmode
00022D98 <AmiBlitz3.ab3@4972>    BEQ.w popselect__norerr2
00022D9A <AmiBlitz3.ab3@4973>   ADDQ.w #2,D1                                             ;for the "sE"
00022D9C <AmiBlitz3.ab3@4976>   LSL.w #8,D1
00022D9E <AmiBlitz3.ab3@4977>   LSL.w #1,D1
00022DA4 <AmiBlitz3.ab3@4978>   OR.w endsel,D1
00022DAA <AmiBlitz3.ab3@4979> JMP writeword
00022DAE <AmiBlitz3.ab3@4982> firstrep:    Ds.l 1
00022DB2 <AmiBlitz3.ab3@4983> replineat:   Ds.l 1
00022DB8 <AmiBlitz3.ab3@4992>   CLR.l fp0addr
00022DC2 <AmiBlitz3.ab3@4993>   MOVE.l linenumat,replineat
00022DC4 <AmiBlitz3.ab3@4994>   MOVEQ.l #$08,D0
00022DCA <AmiBlitz3.ab3@4995>   MOVEA.l _execbase,A6
00022DD0 <AmiBlitz3.ab3@4996>   MOVE.l mempool,a0
00022DD4 <AmiBlitz3.ab3@4997>   JSR _AllocPooled(a6)
00022DD6 <AmiBlitz3.ab3@4999>   MOVEA.l D0,A0
00022DDA <AmiBlitz3.ab3@5000>   MOVE.l firstrep(PC),(A0)
00022DE0 <AmiBlitz3.ab3@5001>   MOVE.l A0,firstrep
00022DE8 <AmiBlitz3.ab3@5002>   MOVE.l destpointer,$4(A0)
00022DEA <AmiBlitz3.ab3@5003> RTS
00022DF0 <AmiBlitz3.ab3@5006> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00022DF4 <AmiBlitz3.ab3@5009>   LEA str_temp(PC),A1
00022DF6 <AmiBlitz3.ab3@5010>   CLR.w (A1)
00022DFA <AmiBlitz3.ab3@5011>   CLR.l $2(A1)
00022DFC <AmiBlitz3.ab3@5014>   MOVEQ.l #$04,D0
00022E00 <AmiBlitz3.ab3@5017>     MOVE.b $1(A1),(A1)+
00022E04 <AmiBlitz3.ab3@5018>   DBF D0,check_for_infoextention__loop
00022E08 <AmiBlitz3.ab3@5023>   LEA str_temp(PC),A1
00022E0A <AmiBlitz3.ab3@5024>   MOVE.b (A0),D0
00022E0E <AmiBlitz3.ab3@5025>   ORI.b #$20,D0
00022E12 <AmiBlitz3.ab3@5026>   MOVE.b D0,$5(A1)
00022E14 <AmiBlitz3.ab3@5027>   TST.b (A0)+
00022E18 <AmiBlitz3.ab3@5028>    BNE.w check_for_infoextention__loop2
00022E1C <AmiBlitz3.ab3@5029>   CMPI.w #$2E69,(A1)+                                      ;".i"
00022E20 <AmiBlitz3.ab3@5030>    BNE.w check_for_infoextention__no
00022E26 <AmiBlitz3.ab3@5031>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00022E28 <AmiBlitz3.ab3@5034> RTS
00022E2C <AmiBlitz3.ab3@5038>   BPL.w gettokeps__evaltoke
00022E2E <AmiBlitz3.ab3@5039>   MOVE.w D0,D1
00022E32 <AmiBlitz3.ab3@5040>   ANDI.w #$7F80,D1
00022E36 <AmiBlitz3.ab3@5041>    BEQ.w tokeerr
00022E3A <AmiBlitz3.ab3@5042>   BCLR #$F,D0
00022E3C <AmiBlitz3.ab3@5043>   MOVE.w D0,D4                                             ;got toke number
00022E40 <AmiBlitz3.ab3@5044>   BSR.w get1bytemain
00022E44 <AmiBlitz3.ab3@5045> BRA.w gettokeps__gotnum
00022E4A <AmiBlitz3.ab3@5048>   JSR JL_0_BF6A
00022E50 <AmiBlitz3.ab3@5049>   CMP.l #MaxWord,D3
00022E54 <AmiBlitz3.ab3@5050>    BHI.w tokeerr
00022E56 <AmiBlitz3.ab3@5051>   TST.w D6
00022E5A <AmiBlitz3.ab3@5052>    BNE.w tokeerr
00022E5C <AmiBlitz3.ab3@5053>   MOVE.w D3,D4
00022E5E <AmiBlitz3.ab3@5056>   MOVEQ.l #$00,D5
00022E62 <AmiBlitz3.ab3@5057>   CMP.w #$2C,D0
00022E66 <AmiBlitz3.ab3@5058>    BNE.w gettokeps__gotfrom
00022E68 <AmiBlitz3.ab3@5059>   MOVE.w D4,-(A7)
00022E6E <AmiBlitz3.ab3@5060>    JSR AJL_0_BF6E
00022E74 <AmiBlitz3.ab3@5061>   CMP.l #MaxWord,D3
00022E78 <AmiBlitz3.ab3@5062>    BHI.w tokeerr
00022E7A <AmiBlitz3.ab3@5063>   TST.w D6
00022E7E <AmiBlitz3.ab3@5064>    BNE.w tokeerr
00022E80 <AmiBlitz3.ab3@5065>   MOVE.w D3,D5
00022E82 <AmiBlitz3.ab3@5066>   MOVE.w (A7)+,D4
00022E84 <AmiBlitz3.ab3@5069> RTS                                                        ;d4=toke, d5=form
00022E86 <AmiBlitz3.ab3@5073>   TST.w D0
00022E8A <AmiBlitz3.ab3@5074>    BSR.w gettokeps
00022E8E <AmiBlitz3.ab3@5075>   MOVE.w #$4EB9,D1
00022E94 <AmiBlitz3.ab3@5076>   JSR writeword
00022E98 <AmiBlitz3.ab3@5077>   BSR.w addoff
00022E9A <AmiBlitz3.ab3@5078>   MOVE.w D5,D1
00022E9E <AmiBlitz3.ab3@5079>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00022EA0 <AmiBlitz3.ab3@5080>   SWAP D1
00022EA2 <AmiBlitz3.ab3@5081>   MOVE.w D4,D1
00022EA8 <AmiBlitz3.ab3@5082> JMP writelong
00022EAA <AmiBlitz3.ab3@5086>   TST.w D0
00022EAE <AmiBlitz3.ab3@5087>    BSR.w gettokeps
00022EB2 <AmiBlitz3.ab3@5088>   MOVE.w #$4EB9,D1
00022EB8 <AmiBlitz3.ab3@5089>   JSR writeword
00022EBC <AmiBlitz3.ab3@5090>   BSR.w addoff
00022EBE <AmiBlitz3.ab3@5091>   MOVE.w D5,D1
00022EC2 <AmiBlitz3.ab3@5092>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00022EC4 <AmiBlitz3.ab3@5093>   SWAP D1
00022EC6 <AmiBlitz3.ab3@5094>   MOVE.w D4,D1
00022ECC <AmiBlitz3.ab3@5095>   JMP writelong
00022ED2 <AmiBlitz3.ab3@5099>   JSR JL_0_BF6A
00022ED8 <AmiBlitz3.ab3@5100>   CMP.l #$10000,D3
00022EDC <AmiBlitz3.ab3@5101>    BCC.w tokeerr
00022EDE <AmiBlitz3.ab3@5102>   MOVE.w D3,D1
00022EE4 <AmiBlitz3.ab3@5103> JMP Atokejsr
00022EE8 <AmiBlitz3.ab3@5107>   BSR.w gettokeps
00022EEC <AmiBlitz3.ab3@5108>   MOVE.w #$4EB9,D1
00022EF2 <AmiBlitz3.ab3@5109>   JSR writeword
00022EF8 <AmiBlitz3.ab3@5110>   MOVE.l destpointer,D3
00022F00 <AmiBlitz3.ab3@5111>   BTST #$7,blitzmode
00022F04 <AmiBlitz3.ab3@5112>    BEQ.w do_TokeJsr__inamiga
00022F08 <AmiBlitz3.ab3@5113>   BSET #$E,D5
00022F0C <AmiBlitz3.ab3@5116>   BSR.w JL_0_6E86
00022F10 <AmiBlitz3.ab3@5117>   BSR.w addoff
00022F16 <AmiBlitz3.ab3@5118>   JMP writelong
00022F1A <AmiBlitz3.ab3@5122>   BEQ.w do_VWait__zero
00022F1C <AmiBlitz3.ab3@5123>   MOVEQ.l #$02,D2                                          ;get a word
00022F22 <AmiBlitz3.ab3@5125>   JSR bakeval
00022F26 <AmiBlitz3.ab3@5126>   MOVE.w fvwait(PC),D1
00022F2A <AmiBlitz3.ab3@5127> BRA.w do_VWait__vcont
00022F2E <AmiBlitz3.ab3@5130>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00022F34 <AmiBlitz3.ab3@5133>   JSR writeword
00022F38 <AmiBlitz3.ab3@5134>   MOVE.w #$C104,D1
00022F3E <AmiBlitz3.ab3@5135> JMP Atokejsr
00022F40 <AmiBlitz3.ab3@5139>   SUBQ.w #1,D0
00022F46 <AmiBlitz3.ab3@5142>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00022F4A <AmiBlitz3.ab3@5145>   Dc.l $426d0001                                           ;clr.w $0(A5)
00022F4E <AmiBlitz3.ab3@5149>   MOVE.b debugmode(PC),D1
00022F52 <AmiBlitz3.ab3@5150>   BEQ.b debugmode_codelabel__skip
00022F56 <AmiBlitz3.ab3@5151>   MOVE.w #$D500,D1
00022F5C <AmiBlitz3.ab3@5152> JMP Atokejsr
00022F5E <AmiBlitz3.ab3@5155> RTS
00022F66 <AmiBlitz3.ab3@5159>   BSET #$0,blitzmode
00022F6E <AmiBlitz3.ab3@5160>   BSET #$7,blitzmode
00022F72 <AmiBlitz3.ab3@5161>   MOVE.w #$C200,D1
00022F78 <AmiBlitz3.ab3@5162>   JSR Atokejsr
00022F7E <AmiBlitz3.ab3@5163>   TST.b debugmode
00022F82 <AmiBlitz3.ab3@5164>    BEQ.w do_BLITZ__done
00022F86 <AmiBlitz3.ab3@5165>   MOVE.w cgoblitz(PC),D1
00022F8C <AmiBlitz3.ab3@5166>   JSR writeword
00022F8E <AmiBlitz3.ab3@5167>   MOVEQ.l #-$01,D1
00022F94 <AmiBlitz3.ab3@5168>   JSR writeword
00022F9A <AmiBlitz3.ab3@5169>   JSR getbbase
00022FA0 <AmiBlitz3.ab3@5170>   JSR writeword
00022FA4 <AmiBlitz3.ab3@5173> BRA.w debugmode_codelabel
00022FA8 <AmiBlitz3.ab3@5177>   MOVE.w #$C201,D1
00022FAC <AmiBlitz3.ab3@5178> BRA.w do_AMIGA__toamode
00022FB0 <AmiBlitz3.ab3@5182>   MOVE.W  #$C202,D1
00022FB8 <AmiBlitz3.ab3@5185>   BSET #$0,blitzmode
00022FC0 <AmiBlitz3.ab3@5186>   BCLR #$7,blitzmode
00022FC6 <AmiBlitz3.ab3@5187>   JSR Atokejsr
00022FCC <AmiBlitz3.ab3@5188>   TST.b debugmode
00022FD0 <AmiBlitz3.ab3@5189>    BEQ.w do_AMIGA__done
00022FD4 <AmiBlitz3.ab3@5190>   MOVE.w cgoamiga(PC),D1
00022FDA <AmiBlitz3.ab3@5191>   JSR writeword
00022FE0 <AmiBlitz3.ab3@5192>   JSR getbbase
00022FE6 <AmiBlitz3.ab3@5193>   JSR writeword
00022FEA <AmiBlitz3.ab3@5196> BRA.w debugmode_codelabel
00022FEE <AmiBlitz3.ab3@5200>   MOVEM.l D2-D7/A2-A4,-(A7)
00022FF2 <AmiBlitz3.ab3@5203>   MOVEM.l (A7)+,D2-D7/A2-A4
00022FF8 <AmiBlitz3.ab3@5207>   JSR JL_0_BF6A
00022FFE <AmiBlitz3.ab3@5208>   CMP.l #$E,D3
00023002 <AmiBlitz3.ab3@5209>    BCC.w interr4
00023006 <AmiBlitz3.ab3@5210>   MOVE.w #$7000,D1
00023008 <AmiBlitz3.ab3@5211>   OR.w D3,D1
0002300E <AmiBlitz3.ab3@5212>   JSR writeword
00023012 <AmiBlitz3.ab3@5213>   MOVE.w #$C101,D1
00023018 <AmiBlitz3.ab3@5214> JMP Atokejsr                                               ;clear the interupt
0002301A <AmiBlitz3.ab3@5217> inerr:       Ds.w 1                                        ;flag - in error trap mode
0002301E <AmiBlitz3.ab3@5218> errjmp:      Ds.l 1                                        ;where err jump is
00023022 <AmiBlitz3.ab3@5219> errcode:     Ds.l 1
00023026 <AmiBlitz3.ab3@5223>   MOVE.W  #$D202,D1
0002302C <AmiBlitz3.ab3@5224> JMP Atokejsr                                               ;BRA.W Atokejsr
00023030 <AmiBlitz3.ab3@5228>   MOVE.w inerr(PC),D1
00023034 <AmiBlitz3.ab3@5229>    BEQ.w errerr3
0002303A <AmiBlitz3.ab3@5230>   CLR.w inerr
00023040 <AmiBlitz3.ab3@5231>   MOVE.w dontwrite,D1
00023044 <AmiBlitz3.ab3@5232>    BNE.w doendseterr__skip
00023048 <AmiBlitz3.ab3@5233>   MOVEA.l errjmp(PC),A0
0002304E <AmiBlitz3.ab3@5234>   MOVE.l destpointer,(A0)
00023052 <AmiBlitz3.ab3@5237> BRA.w get1bytemain
00023056 <AmiBlitz3.ab3@5241>   MOVE.w #$D205,D1
0002305C <AmiBlitz3.ab3@5242> JMP Atokejsr
00023062 <AmiBlitz3.ab3@5246>   MOVE.w proceduremode,D1
00023066 <AmiBlitz3.ab3@5247>    BNE.w errerr1
0002306A <AmiBlitz3.ab3@5248>   MOVE.w inerr(PC),D1
0002306E <AmiBlitz3.ab3@5249>    BNE.w errerr2
00023074 <AmiBlitz3.ab3@5250>   LEA inerr,a0
00023076 <AmiBlitz3.ab3@5251>   NOT.w (a0)                                               ;reass
0002307A <AmiBlitz3.ab3@5252>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023080 <AmiBlitz3.ab3@5253>   JSR writeword
0002308A <AmiBlitz3.ab3@5254>   MOVE.l destpointer,errcode
0002308E <AmiBlitz3.ab3@5255>   BSR.w addoff
00023092 <AmiBlitz3.ab3@5256>   BSR.w writelong
00023096 <AmiBlitz3.ab3@5257>   MOVE.w #$D201,D1
0002309C <AmiBlitz3.ab3@5258>   JSR Atokejsr
000230A0 <AmiBlitz3.ab3@5259>   MOVE.w #$4EF9,D1                                         ;JMP
000230A6 <AmiBlitz3.ab3@5260>   JSR writeword
000230B0 <AmiBlitz3.ab3@5261>   MOVE.l destpointer,errjmp
000230B4 <AmiBlitz3.ab3@5262>   BSR.w addoff
000230BA <AmiBlitz3.ab3@5263>   JSR  writelong
000230C0 <AmiBlitz3.ab3@5264>   MOVE.w dontwrite,D1
000230C4 <AmiBlitz3.ab3@5265>    BNE.w do_SetErr__skip
000230C8 <AmiBlitz3.ab3@5266>   MOVEA.l errcode(PC),A0
000230CE <AmiBlitz3.ab3@5267>   MOVE.l destpointer,(A0)
000230D0 <AmiBlitz3.ab3@5270> RTS
000230D4 <AmiBlitz3.ab3@5273> intlineat:  Ds.l 1
000230D6 <AmiBlitz3.ab3@5277>   MOVEQ.l #-$01,D1                                        ;type - need new string space
000230DA <AmiBlitz3.ab3@5278>   BSR.w errchx
000230E0 <AmiBlitz3.ab3@5279>   MOVE.w D1,intstring
000230EA <AmiBlitz3.ab3@5280>   MOVE.l linenumat,intlineat
000230F0 <AmiBlitz3.ab3@5281>   JSR JL_0_BF6A                                           ;get constant - int level
000230F6 <AmiBlitz3.ab3@5282>   CMP.l #$E,D3
000230FA <AmiBlitz3.ab3@5283>    BCC.w interr4
00023100 <AmiBlitz3.ab3@5284>   ST intsused
00023106 <AmiBlitz3.ab3@5285>   MOVE.w D3,intlevel
0002310A <AmiBlitz3.ab3@5286>   MOVE.w #$7000,D1
0002310C <AmiBlitz3.ab3@5287>   OR.w D3,D1                                              
00023110 <AmiBlitz3.ab3@5288>   BSR.w writeword                                         ;moveq #x,d0
00023114 <AmiBlitz3.ab3@5289>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023118 <AmiBlitz3.ab3@5290>   BSR.w writeword
0002311C <AmiBlitz3.ab3@5291>   BSR.w addoff
00023122 <AmiBlitz3.ab3@5292>   MOVE.l destpointer,-(A7)
00023126 <AmiBlitz3.ab3@5293>   BSR.w writelong
0002312A <AmiBlitz3.ab3@5294>   MOVE.w #$C100,D1
00023130 <AmiBlitz3.ab3@5295>   JSR Atokejsr
00023134 <AmiBlitz3.ab3@5296>   MOVE.w #$4EF9,D1                                        ;jmp
00023138 <AmiBlitz3.ab3@5297>   BSR.w writeword
0002313C <AmiBlitz3.ab3@5298>   BSR.w addoff
00023146 <AmiBlitz3.ab3@5299>   MOVE.l destpointer,intjmpat
0002314A <AmiBlitz3.ab3@5300>   BSR.w writelong
0002314C <AmiBlitz3.ab3@5301>   MOVEA.l (A7)+,A0
00023152 <AmiBlitz3.ab3@5302>   MOVE.w dontwrite,D1
00023156 <AmiBlitz3.ab3@5303>   BNE.w do_SetInt__dontpoke
0002315C <AmiBlitz3.ab3@5304>   MOVE.l destpointer,(A0)
00023160 <AmiBlitz3.ab3@5307>   MOVE.l intstart0(PC),D1
00023164 <AmiBlitz3.ab3@5308>   BSR.w writelong
0002316A <AmiBlitz3.ab3@5309>   TST.b debugmode
0002316E <AmiBlitz3.ab3@5310>    BEQ.w do_SetInt__norerr
00023170 <AmiBlitz3.ab3@5314>   MOVEQ.l #$02,D1
00023174 <AmiBlitz3.ab3@5315>   BSR.w writetrap
00023178 <AmiBlitz3.ab3@5316>   BSR.w addoff
00023182 <AmiBlitz3.ab3@5317>   MOVE.l destpointer,intcleanat
00023186 <AmiBlitz3.ab3@5318>   BSR.w writelong
0002318C <AmiBlitz3.ab3@5319>   MOVE.w intlevel,D1
00023190 <AmiBlitz3.ab3@5320>   BSR.w writeword
00023194 <AmiBlitz3.ab3@5321>   MOVE.w #$C30B,D1                                         ;disable stack checks
0002319A <AmiBlitz3.ab3@5322>   JSR Atokejsr
0002319E <AmiBlitz3.ab3@5325>   MOVE.w #$FED3,D1
000231A2 <AmiBlitz3.ab3@5326>   BSR.w uselib
000231A6 <AmiBlitz3.ab3@5327>   MOVE.w #$C102,D1
000231AC <AmiBlitz3.ab3@5328>   JSR Atokejsr
000231B4 <AmiBlitz3.ab3@5329>   MOVE.w #-1,lasta6
000231BE <AmiBlitz3.ab3@5330>   MOVE.l linenumat,intline
000231C0 <AmiBlitz3.ab3@5331> RTS
000231C2 <AmiBlitz3.ab3@5335>             Ds.w 1                                         ;??looks like obsolved data??
000231C6 <AmiBlitz3.ab3@5337> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000231CA <AmiBlitz3.ab3@5339> intjmpat:   Ds.l 1
000231CE <AmiBlitz3.ab3@5340> intline:    Ds.l 1
000231D0 <AmiBlitz3.ab3@5341> intstring:  Ds.w 1                                         ;flag 0 = no setint
000231D2 <AmiBlitz3.ab3@5344> intlevel:   Ds.w 1
000231D6 <AmiBlitz3.ab3@5345> intcleanat: Ds.l 1
000231DA <AmiBlitz3.ab3@5346> ret15add:   Ds.l 1
000231DC <AmiBlitz3.ab3@5347> ret15cc:    Ds.w 1
000231E4 <AmiBlitz3.ab3@5351>   ADDI.l #$12,$2(A7)
000231EC <AmiBlitz3.ab3@5352>   MOVE.l $2(A7),ret15add
000231F2 <AmiBlitz3.ab3@5353>   MOVE.w (A7),ret15cc
000231FA <AmiBlitz3.ab3@5354>   MOVE.l #directdo,$2(A7)
000231FC <AmiBlitz3.ab3@5355> RTE
00023200 <AmiBlitz3.ab3@5364>   MOVE.l ret15add(PC),-(A7)
00023204 <AmiBlitz3.ab3@5365>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023208 <AmiBlitz3.ab3@5366>   MOVEM.l D0-D7/A0-A6,-(A7)
00023212 <AmiBlitz3.ab3@5367>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
0002321C <AmiBlitz3.ab3@5368>   MOVE.l destbufferstart,trap15temp2
00023226 <AmiBlitz3.ab3@5369>   MOVE.l libend,templibend
00023230 <AmiBlitz3.ab3@5370>   MOVE.l data1start,tempdata1start
00023236 <AmiBlitz3.ab3@5371>   CLR.l hunkoffsetcounter
0002323C <AmiBlitz3.ab3@5373>   MOVE.l directbuffer,a0
00023242 <AmiBlitz3.ab3@5377>   MOVE.l a0,destbufferstart
00023248 <AmiBlitz3.ab3@5378>   ADD.l #3900,a0
0002324E <AmiBlitz3.ab3@5379>   MOVE.l a0,destbufferend
00023254 <AmiBlitz3.ab3@5380>   TST.b exdebug
00023258 <AmiBlitz3.ab3@5381>   BEQ 'l1
0002325E <AmiBlitz3.ab3@5382>   MOVE.l a0,libend
00023264 <AmiBlitz3.ab3@5383>   ADD.l #4000,a0
0002326A <AmiBlitz3.ab3@5384>   MOVE.l a0,data1start
00023274 <AmiBlitz3.ab3@5387>   MOVE.l #dircont,errcont
0002327A <AmiBlitz3.ab3@5388> 
00023280 <AmiBlitz3.ab3@5389>   MOVE.l A7,errstack
00023288 <AmiBlitz3.ab3@5390>   MOVE.w #$FFFF,dirmode
0002328C <AmiBlitz3.ab3@5392>     MOVEA.l ret15add(PC),A1
00023292 <AmiBlitz3.ab3@5393>     MOVE.w -(A1),blitzmode
00023294 <AmiBlitz3.ab3@5394>     CLR.l -(A1)
0002329A <AmiBlitz3.ab3@5395>     MOVE.l -(A1),firstglob
000232A0 <AmiBlitz3.ab3@5396>     MOVE.l -(A1),firstlocal
000232A6 <AmiBlitz3.ab3@5398>   CLR.w proceduremode
000232AC <AmiBlitz3.ab3@5399>   MOVE.l firstglob,D0
000232B2 <AmiBlitz3.ab3@5400>   OR.l firstlocal,D0
000232B6 <AmiBlitz3.ab3@5401>   BEQ.b directdo__skip
000232BC <AmiBlitz3.ab3@5402>   NOT.w proceduremode
000232BE <AmiBlitz3.ab3@5405>   MOVEA.l -(A1),A0                                         ;address of string
000232C0 <AmiBlitz3.ab3@5409>   MOVE.l A0,-(A7)
000232FE <AmiBlitz3.ab3@5412>   !ComData_GetL{comFunc_DebugTrap,A1}
00023300 <AmiBlitz3.ab3@5414>   JSR (A1)                                                 ;tokenise line.....
00023302 <AmiBlitz3.ab3@5416>   MOVEA.l (A7)+,A5
0002330C <AmiBlitz3.ab3@5417>   MOVE.l directbuffer,destpointer
00023312 <AmiBlitz3.ab3@5418>   TST.b exdebug
00023316 <AmiBlitz3.ab3@5419>   BEQ 'noexdebug
00023318 <AmiBlitz3.ab3@5420>   MOVE.l a5,a0
0002331E <AmiBlitz3.ab3@5421>   MOVE.l #200,d0
00023324 <AmiBlitz3.ab3@5424>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023328 <AmiBlitz3.ab3@5425>   DBF d0,'l1
0002332E <AmiBlitz3.ab3@5430>   MOVE.l destpointer,a0
00023332 <AmiBlitz3.ab3@5431>   MOVE.w #$207c,(a0)+
00023334 <AmiBlitz3.ab3@5432>   MOVE.l a5,d0
0002333A <AmiBlitz3.ab3@5433>   ADD.l #$206,d0                                           ;constant from debuglib
0002333C <AmiBlitz3.ab3@5434>   MOVE.l d0,(a0)+
00023342 <AmiBlitz3.ab3@5435>   MOVE.l a0,destpointer
00023344 <AmiBlitz3.ab3@5436>   MOVE.l a5,a0
00023348 <AmiBlitz3.ab3@5437>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
0002334E <AmiBlitz3.ab3@5438>   MOVE.l #"$520",(a0)+
00023352 <AmiBlitz3.ab3@5439>   MOVE.w #"4:",(a0)+
00023358 <AmiBlitz3.ab3@5442>   CLR.w dontwrite
00023360 <AmiBlitz3.ab3@5443>   MOVE.w #$FFFF,lasta6
00023364 <AmiBlitz3.ab3@5444>   BSR.w compile_line                                        ;.....compile it
0002336A <AmiBlitz3.ab3@5445>   TST.b exdebug
0002336E <AmiBlitz3.ab3@5446>   BEQ 'noexdebug2
00023374 <AmiBlitz3.ab3@5447>   JSR JL_0_6C76
0002337A <AmiBlitz3.ab3@5450>   CLR.w proceduremode
0002337E <AmiBlitz3.ab3@5451>   BSR.w errchx
00023382 <AmiBlitz3.ab3@5452>   MOVE.w #$4EF9,D1
00023386 <AmiBlitz3.ab3@5453>   BSR.w writeword                                          ;JMP
0002338A <AmiBlitz3.ab3@5454>   MOVE.l ret15add(PC),D1
0002338E <AmiBlitz3.ab3@5455>   BSR.w writelong                                          ;jmp to done
00023394 <AmiBlitz3.ab3@5456>   MOVE.w dontwrite,D0
00023398 <AmiBlitz3.ab3@5457>    BNE.w nodirmem
000233A0 <AmiBlitz3.ab3@5458>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000233A6 <AmiBlitz3.ab3@5461>   CLR.w dirmode
000233AC <AmiBlitz3.ab3@5462>   MOVE.w ret15cc(PC),$3C(A7)
000233B6 <AmiBlitz3.ab3@5463>   MOVE.l trap15temp,destbufferend
000233C0 <AmiBlitz3.ab3@5464>   MOVE.l trap15temp2,destbufferstart
000233CA <AmiBlitz3.ab3@5465>   MOVE.l tempdata1start,data1start
000233D4 <AmiBlitz3.ab3@5466>   MOVE.l templibend,libend
000233D8 <AmiBlitz3.ab3@5467>   MOVEM.l (A7)+,D0-D7/A0-A6
000233DC <AmiBlitz3.ab3@5468>   BSR.w Aclearcache                                        ;selden used
000233DE <AmiBlitz3.ab3@5469> RTR
000233E2 <AmiBlitz3.ab3@5472>   MOVEA.l ret15add(PC),A0
000233E4 <AmiBlitz3.ab3@5473>   SUBQ.w #2,A0
000233E6 <AmiBlitz3.ab3@5474>   MOVE.l D0,-(A0)
000233EA <AmiBlitz3.ab3@5475> BRA.w direxit
000233EE <AmiBlitz3.ab3@5479>   MOVE.w $6(A3),D1
000233F2 <AmiBlitz3.ab3@5480>   BSR.w uselib                                             ;get lib for base address
000233F6 <AmiBlitz3.ab3@5481>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
000233F8 <AmiBlitz3.ab3@5482>   ADDQ.w #8,A3
000233FA <AmiBlitz3.ab3@5483>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
000233FC <AmiBlitz3.ab3@5484>   MOVE.l A3,-(A7)
000233FE <AmiBlitz3.ab3@5488>   MOVEQ.l #$00,D3
00023404 <AmiBlitz3.ab3@5489>   JSR checka4a5
00023406 <AmiBlitz3.ab3@5491>   MOVE.b (A3)+,D1
0002340A <AmiBlitz3.ab3@5492>    BMI.w stamigalib__done
0002340C <AmiBlitz3.ab3@5493>   MOVEQ.l #$03,D2
0002340E <AmiBlitz3.ab3@5494>   ADDQ.w #1,D3
00023412 <AmiBlitz3.ab3@5495>   MOVEM.l D3/A3,-(A7)
00023418 <AmiBlitz3.ab3@5496>   MOVE.b funcparloop,-(a7)
00023420 <AmiBlitz3.ab3@5497>   MOVE.b #0,funcparloop
00023426 <AmiBlitz3.ab3@5498>   MOVE.l leftsidetype,-(a7)
0002342C <AmiBlitz3.ab3@5499>   MOVE.l rightsidetype,-(a7)
00023432 <AmiBlitz3.ab3@5500>   CLR.l leftsidetype
00023438 <AmiBlitz3.ab3@5501>   CLR.l rightsidetype
0002343E <AmiBlitz3.ab3@5502>   MOVE.b blitzparloop,-(a7)
00023446 <AmiBlitz3.ab3@5503>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
0002344C <AmiBlitz3.ab3@5504>   JSR peval
00023452 <AmiBlitz3.ab3@5505>   MOVE.b (a7)+,blitzparloop
00023458 <AmiBlitz3.ab3@5506>   MOVE.l (a7)+,rightsidetype
0002345E <AmiBlitz3.ab3@5507>   MOVE.l (a7)+,leftsidetype
00023464 <AmiBlitz3.ab3@5508>   MOVE.b (a7)+,funcparloop
00023468 <AmiBlitz3.ab3@5509>   MOVEM.l (A7)+,D3/A3
0002346C <AmiBlitz3.ab3@5510>   CMP.w #$2C,D0
00023470 <AmiBlitz3.ab3@5511>    BEQ.w stamigalib__loop
00023472 <AmiBlitz3.ab3@5512>   TST.b (A3)
00023476 <AmiBlitz3.ab3@5513>    BPL.w syntaxerr
00023478 <AmiBlitz3.ab3@5516>   MOVEA.l (A7)+,A3
0002347A <AmiBlitz3.ab3@5517>   SUBQ.w #1,D3
0002347E <AmiBlitz3.ab3@5518>    BPL.w stamigalib__toend
00023482 <AmiBlitz3.ab3@5519>    BSR.w get1bytemain                                      ;no pars - get :
00023486 <AmiBlitz3.ab3@5520> BRA.w stamigalib__nopars
00023488 <AmiBlitz3.ab3@5523>   TST.b (A3)+                                              ;go to end of params
0002348C <AmiBlitz3.ab3@5524>    BPL.w stamigalib__toend
0002348E <AmiBlitz3.ab3@5525>   SUBQ.w #1,A3
00023490 <AmiBlitz3.ab3@5528>    MOVEQ.l #$00,D1
00023492 <AmiBlitz3.ab3@5529>    MOVE.b -(A3),D1
00023496 <AmiBlitz3.ab3@5530>    BTST #$4,D1
0002349A <AmiBlitz3.ab3@5531>     BNE.w stamigalib__addreg
0002349C <AmiBlitz3.ab3@5532>    LSL.w #8,D1
0002349E <AmiBlitz3.ab3@5533>    LSL.w #1,D1
000234A2 <AmiBlitz3.ab3@5534>    ORI.w #$201F,D1
000234A6 <AmiBlitz3.ab3@5535>  BRA.w stamigalib__gotit
000234AA <AmiBlitz3.ab3@5538>    ANDI.w #$7,D1
000234AC <AmiBlitz3.ab3@5539>    LSL.w #8,D1
000234AE <AmiBlitz3.ab3@5540>    LSL.w #1,D1
000234B2 <AmiBlitz3.ab3@5541>    ORI.w #$205F,D1
000234B6 <AmiBlitz3.ab3@5544>     BSR.w writeword
000234BA <AmiBlitz3.ab3@5545>   DBF D3,stamigalib__loop2
000234C0 <AmiBlitz3.ab3@5548>   MOVE.w (A7)+,libjsr+2
000234C6 <AmiBlitz3.ab3@5549>   MOVE.w (A7)+,libbase+2
000234CC <AmiBlitz3.ab3@5550>   MOVE.l libbase,D1
000234D0 <AmiBlitz3.ab3@5551>    BSR.w writelong
000234D6 <AmiBlitz3.ab3@5552>   MOVE.l libjsr,D1
000234DC <AmiBlitz3.ab3@5553>   JSR writelong
000234E2 <AmiBlitz3.ab3@5554>   JSR restorea4a5
000234E4 <AmiBlitz3.ab3@5555>   RTS
000234EA <AmiBlitz3.ab3@5558>   MOVE.l data1,D4
000234F0 <AmiBlitz3.ab3@5559>   SUB.l data1start,D4
000234F6 <AmiBlitz3.ab3@5560>   ADD.l #10000,d4
000234FC <AmiBlitz3.ab3@5561>   MOVE.l libend,D3
00023502 <AmiBlitz3.ab3@5562>   SUB.l destbufferend,D3
00023508 <AmiBlitz3.ab3@5563>   ADD.l #40000,d3
0002350E <AmiBlitz3.ab3@5564>   MOVE.l bigpc,D2
00023514 <AmiBlitz3.ab3@5565>   SUB.l destbufferstart,D2
0002351A <AmiBlitz3.ab3@5566>   ADD.l #20000,d2
00023520 <AmiBlitz3.ab3@5567>   MOVE.l databuffer,D5
00023526 <AmiBlitz3.ab3@5568>   ADD.l #10000,D5
0002352A <AmiBlitz3.ab3@5569> BRA newallox
00023530 <AmiBlitz3.ab3@5573>   MOVE.l objectbuffer,D2
00023532 <AmiBlitz3.ab3@5574>   LSR.l #1,D2
00023538 <AmiBlitz3.ab3@5575>   ADD.l objectbuffer,D2
0002353E <AmiBlitz3.ab3@5576>   MOVE.l libsbuffer,D3
00023540 <AmiBlitz3.ab3@5577>   LSR.l #1,D3
00023546 <AmiBlitz3.ab3@5578>   ADD.l libsbuffer,D3
0002354C <AmiBlitz3.ab3@5579>   MOVE.l systembuffer,D4
0002354E <AmiBlitz3.ab3@5580>   LSR.l #1,D4
00023554 <AmiBlitz3.ab3@5581>   ADD.l systembuffer,D4
0002355A <AmiBlitz3.ab3@5582>   MOVE.l databuffer,D5
0002355C <AmiBlitz3.ab3@5583>   LSR.l #1,D5
00023562 <AmiBlitz3.ab3@5584>   ADD.l databuffer,D5
00023566 <AmiBlitz3.ab3@5585> BRA.w newallox
0002356C <AmiBlitz3.ab3@5589>   MOVE.l bigpc,D2
00023572 <AmiBlitz3.ab3@5590>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023578 <AmiBlitz3.ab3@5591>   SUB.l savefuncspace,d2
0002357E <AmiBlitz3.ab3@5593>   TST.w debugversion
00023582 <AmiBlitz3.ab3@5594>    BNE.b alloxadj__skip
00023588 <AmiBlitz3.ab3@5595>   ADDI.l #$800,D2
0002358E <AmiBlitz3.ab3@5598>   MOVE.l libend,D3
00023594 <AmiBlitz3.ab3@5599>   SUB.l destbufferend,D3
0002359A <AmiBlitz3.ab3@5601>   MOVE.l data1,D4
000235A0 <AmiBlitz3.ab3@5602>   SUB.l data1start,D4
000235A6 <AmiBlitz3.ab3@5604>   MOVE.l data2,D5
000235AC <AmiBlitz3.ab3@5605>   SUB.l data2at,D5
000235B2 <AmiBlitz3.ab3@5607>   CLR.l morememadd
000235B6 <AmiBlitz3.ab3@5610>   BSR.w makeallox
000235BA <AmiBlitz3.ab3@5611>   BNE.w newallox__done
000235BE <AmiBlitz3.ab3@5612> BRA.w init_buffers
000235C0 <AmiBlitz3.ab3@5615> RTS
000235C6 <AmiBlitz3.ab3@5619>   MOVEA.l _execbase,A6
000235CC <AmiBlitz3.ab3@5620>   MOVE.l objlen,D0
000235D0 <AmiBlitz3.ab3@5621>   BEQ.w freeallox__skip
000235D6 <AmiBlitz3.ab3@5622>   CLR.l objlen
000235DC <AmiBlitz3.ab3@5623>   MOVEA.l destbufferstart,A1
000235E2 <AmiBlitz3.ab3@5624>   MOVE.l mempool,a0
000235E6 <AmiBlitz3.ab3@5625> JMP _FreeVec(A6)
000235E8 <AmiBlitz3.ab3@5628> RTS
000235EE <AmiBlitz3.ab3@5632>   MOVE.l objectbuffer,D2
000235F4 <AmiBlitz3.ab3@5633>   MOVE.l libsbuffer,D3
000235FA <AmiBlitz3.ab3@5634>   MOVE.l systembuffer,D4
00023600 <AmiBlitz3.ab3@5635>   MOVE.l databuffer,D5
00023608 <AmiBlitz3.ab3@5638>   MOVE.w #$FFFF,anyerrs
0002360C <AmiBlitz3.ab3@5639>   BSR.w freeallox
0002360E <AmiBlitz3.ab3@5643>   ADDQ.l #1,D2
00023612 <AmiBlitz3.ab3@5644>   BCLR #$0,D2
00023614 <AmiBlitz3.ab3@5645>   ADDQ.l #1,D3
00023618 <AmiBlitz3.ab3@5646>   BCLR #$0,D3
0002361A <AmiBlitz3.ab3@5647>   ADDQ.l #1,D4
0002361E <AmiBlitz3.ab3@5648>   BCLR #$0,D4
00023620 <AmiBlitz3.ab3@5649>   TST.l d5
00023624 <AmiBlitz3.ab3@5650>   BNE 'l1
00023626 <AmiBlitz3.ab3@5653>   ADDQ.l #1,D5
0002362A <AmiBlitz3.ab3@5654>   BCLR #$0,D5
0002362C <AmiBlitz3.ab3@5655>   MOVE.l D2,D0
0002362E <AmiBlitz3.ab3@5656>   ADD.l D3,D0
00023630 <AmiBlitz3.ab3@5657>   ADD.l D4,D0
00023632 <AmiBlitz3.ab3@5658>   ADD.l D5,D0
00023638 <AmiBlitz3.ab3@5659>   ADD.l #moremem,d0
0002363A <AmiBlitz3.ab3@5660>   MOVE.l D0,D6
00023640 <AmiBlitz3.ab3@5661>   MOVE.l #MemfPublic_MemfClear,D1
00023646 <AmiBlitz3.ab3@5662>   MOVE.l mempool,a0
0002364C <AmiBlitz3.ab3@5663>   MOVEA.l _execbase,A6
00023650 <AmiBlitz3.ab3@5664>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023652 <AmiBlitz3.ab3@5666>   TST.l D0
00023656 <AmiBlitz3.ab3@5667>   BEQ.w exit_initbuffers
0002365C <AmiBlitz3.ab3@5668>   MOVE.l D6,objlen
00023662 <AmiBlitz3.ab3@5669>   MOVE.l D2,objectbuffer
00023668 <AmiBlitz3.ab3@5670>   MOVE.l D3,libsbuffer
0002366E <AmiBlitz3.ab3@5671>   MOVE.l D4,systembuffer
00023674 <AmiBlitz3.ab3@5672>   MOVE.l D5,databuffer
0002367A <AmiBlitz3.ab3@5673>   MOVE.l D0,destbufferstart
000236AE <AmiBlitz3.ab3@5676>   !ComData_SetL{comPtr_DestBufferStart,D0}
000236B0 <AmiBlitz3.ab3@5677>   ADD.l D2,D0
000236B6 <AmiBlitz3.ab3@5678>   MOVE.l D0,destbufferend
000236B8 <AmiBlitz3.ab3@5679>   ADD.l D3,D0
000236BE <AmiBlitz3.ab3@5680>   MOVE.l D0,data1start
000236C0 <AmiBlitz3.ab3@5681>   ADD.l D4,D0
000236C6 <AmiBlitz3.ab3@5682>   MOVE.l D0,data2at
000236C8 <AmiBlitz3.ab3@5683>   ADD.l D5,D0
000236CE <AmiBlitz3.ab3@5684>   MOVE.l D0,allat
000236D0 <AmiBlitz3.ab3@5687> RTS
000236D4 <AmiBlitz3.ab3@5691>   Dc.b $00,$00,$00,$01                                     ;         1
000236D8 <AmiBlitz3.ab3@5692>   Dc.b $00,$00,$00,$0A                                     ;        10
000236DC <AmiBlitz3.ab3@5693>   Dc.b $00,$00,$00,$64                                     ;       100
000236E0 <AmiBlitz3.ab3@5694>   Dc.b $00,$00,$03,$E8                                     ;      1000
000236E4 <AmiBlitz3.ab3@5695>   Dc.b $00,$00,$27,$10                                     ;     10000
000236E8 <AmiBlitz3.ab3@5696>   Dc.b $00,$01,$86,$A0                                     ;    100000
000236EC <AmiBlitz3.ab3@5697>   Dc.b $00,$0F,$42,$40                                     ;   1000000
000236F0 <AmiBlitz3.ab3@5698>   Dc.b $00,$98,$96,$80                                     ;  10000000
000236F4 <AmiBlitz3.ab3@5699>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
000236F8 <AmiBlitz3.ab3@5700>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
000236FA <AmiBlitz3.ab3@5704>   MOVEQ.l #$00,D1                                          ;no zero printed
000236FC <AmiBlitz3.ab3@5705>   MOVEQ.l #$24,D3                                          ; "$"
000236FE <AmiBlitz3.ab3@5708>   MOVEQ.l #$30,D4                                          ; "0"
00023702 <AmiBlitz3.ab3@5711>     CMP.l divisors(PC,D3.W),D2
00023706 <AmiBlitz3.ab3@5712>     BCS.w makelong__skip
0002370A <AmiBlitz3.ab3@5713>     SUB.l divisors(PC,D3.W),D2
0002370C <AmiBlitz3.ab3@5714>     ADDQ.w #1,D4
00023710 <AmiBlitz3.ab3@5715> BRA.w makelong__loop2
00023714 <AmiBlitz3.ab3@5718>   CMP.b #"0",D4
00023718 <AmiBlitz3.ab3@5719>   BNE.w makelong__doit
0002371A <AmiBlitz3.ab3@5720>   TST.w D1
0002371E <AmiBlitz3.ab3@5721>   BEQ.w makelong__skip2
00023720 <AmiBlitz3.ab3@5724>   MOVE.b D4,(A0)+
00023722 <AmiBlitz3.ab3@5725>   MOVEQ.l #$01,D1
00023724 <AmiBlitz3.ab3@5728>   SUBQ.w #4,D3
00023728 <AmiBlitz3.ab3@5729>   BPL.w makelong__loop
0002372A <AmiBlitz3.ab3@5730>   TST.w D1
0002372E <AmiBlitz3.ab3@5731>   BNE.w makelong__skip3
00023732 <AmiBlitz3.ab3@5732>   MOVE.b #"0",(A0)+
00023734 <AmiBlitz3.ab3@5735>   CLR.b (A0)
00023736 <AmiBlitz3.ab3@5736> RTS
00023756 <AmiBlitz3.ab3@5739> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023816 <AmiBlitz3.ab3@5740> str_residentpath:       Ds.l 48                                                ;respath org source
000238D6 <AmiBlitz3.ab3@5741> str_residentname:       Ds.l 48                                                ;resname org source
000238DC <AmiBlitz3.ab3@5745>   MOVE.l macrobase,D0
000238E0 <AmiBlitz3.ab3@5746>    BNE.w create_residentfile
000238E6 <AmiBlitz3.ab3@5747>   MOVE.l newtype_string,D0
000238EA <AmiBlitz3.ab3@5748>    BNE.w create_residentfile
000238F0 <AmiBlitz3.ab3@5749>   MOVEA.l labelbase,A2
000238F4 <AmiBlitz3.ab3@5752>     CMPA.w #$0,A2
000238F8 <AmiBlitz3.ab3@5753>      BEQ.w menu_createresidentfile__err
00023900 <AmiBlitz3.ab3@5754>     CMPI.l #$1,$4(A2)
00023904 <AmiBlitz3.ab3@5755>      BEQ.w create_residentfile
00023906 <AmiBlitz3.ab3@5756>     MOVEA.l (A2),A2
0002390A <AmiBlitz3.ab3@5757> BRA.w menu_createresidentfile__loop
00023934 <AmiBlitz3.ab3@5760>   !basic
00023996 <AmiBlitz3.ab3@5761> 
000239B4 <AmiBlitz3.ab3@5762>   !asm
000239B6 <AmiBlitz3.ab3@5763> RTS
000239F4 <AmiBlitz3.ab3@5769>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000239FA <AmiBlitz3.ab3@5770>   LEA str_residentrequester,A2
00023A00 <AmiBlitz3.ab3@5771>   LEA str_residentpath,A0
00023A06 <AmiBlitz3.ab3@5772>   LEA str_residentname,A1
00023A30 <AmiBlitz3.ab3@5773>   !basic
00023A68 <AmiBlitz3.ab3@5774>     Poke$ ?str_residentpath,my_residentsdir$
00023A94 <AmiBlitz3.ab3@5775>     Poke$ ?str_residentname,".res"
00023AB2 <AmiBlitz3.ab3@5776>   !asm
00023AB4 <AmiBlitz3.ab3@5778>   JSR (A3)                                                 ;open ped filerequest
00023AB8 <AmiBlitz3.ab3@5780>   BEQ.w menu_createresidentfile__err
00023ABA <AmiBlitz3.ab3@5783>   MOVE.l D0,D1
00023AC0 <AmiBlitz3.ab3@5784>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023AC4 <AmiBlitz3.ab3@5785>   MOVEA.l _dosbase(PC),A6
00023AC8 <AmiBlitz3.ab3@5786>   JSR _Open(A6)
00023ACA <AmiBlitz3.ab3@5787>   MOVE.l D0,D7                                             ;handle
00023ACE <AmiBlitz3.ab3@5788>   BEQ.w menu_createresidentfile__err
00023AD2 <AmiBlitz3.ab3@5789>   MOVEM.l d2-d7/a0-a6,-(a7)
00023AD8 <AmiBlitz3.ab3@5790>   LEA devo,a0
00023ADE <AmiBlitz3.ab3@5791>   LEA ptr_parameterstore,a1
00023AE0 <AmiBlitz3.ab3@5794>     MOVE.b (a0)+,(a1)+
00023AE4 <AmiBlitz3.ab3@5795>   BNE 'l1
00023AE6 <AmiBlitz3.ab3@5796>   MOVEQ #13,d2
00023AEC <AmiBlitz3.ab3@5797>   JSR findlabel2
00023AF0 <AmiBlitz3.ab3@5798>   BNE 'd
00023AF4 <AmiBlitz3.ab3@5799>   TST.l 8(a2)
00023AF8 <AmiBlitz3.ab3@5800>   BEQ 'd2
00023B22 <AmiBlitz3.ab3@5801>   !basic
00023B84 <AmiBlitz3.ab3@5802>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00023BA2 <AmiBlitz3.ab3@5803>   !asm
00023BA6 <AmiBlitz3.ab3@5804>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BAA <AmiBlitz3.ab3@5805>   MOVEA.l _dosbase(PC),A6
00023BAC <AmiBlitz3.ab3@5806>   MOVE.l d7,d1
00023BB0 <AmiBlitz3.ab3@5807>   JSR _Close(a6)
00023BB4 <AmiBlitz3.ab3@5808> BRA menu_createresidentfile__err
00023BB8 <AmiBlitz3.ab3@5812>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BBC <AmiBlitz3.ab3@5813>   BSR.w call_setpointerbusy
00023BC0 <AmiBlitz3.ab3@5815>   BSR.w AJL_0_7962
00023BC2 <AmiBlitz3.ab3@5816>   MOVE.l D7,D1
00023BC8 <AmiBlitz3.ab3@5817>   MOVE.l #tsthead,D2                                       ;header
00023BCA <AmiBlitz3.ab3@5818>   MOVEQ.l #$20,D3
00023BCE <AmiBlitz3.ab3@5819>   MOVEA.l _dosbase(PC),A6
00023BD2 <AmiBlitz3.ab3@5820>   JSR _Write(A6)
00023BD4 <AmiBlitz3.ab3@5821>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00023BD8 <AmiBlitz3.ab3@5822>   BSR.w restypes
00023BDC <AmiBlitz3.ab3@5823>   BSR.w resmacs
00023BE0 <AmiBlitz3.ab3@5824>   BSR.w resconsts
00023BE2 <AmiBlitz3.ab3@5825>   MOVE.l D6,D3
00023BE4 <AmiBlitz3.ab3@5826>   ADDQ.l #3,D3
00023BEA <AmiBlitz3.ab3@5827>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00023BEC <AmiBlitz3.ab3@5828>   MOVE.l D3,-(A7)
00023BEE <AmiBlitz3.ab3@5829>   SUB.l D6,D3
00023BF2 <AmiBlitz3.ab3@5830>   BEQ.w menu_createresidentfile__noalign
00023BF8 <AmiBlitz3.ab3@5831>   MOVE.l #writelist,D2
00023BFA <AmiBlitz3.ab3@5832>   MOVE.l D7,D1
00023C00 <AmiBlitz3.ab3@5833>   MOVEA.l _dosbase,A6
00023C04 <AmiBlitz3.ab3@5834>   JSR _Write(A6)
00023C0E <AmiBlitz3.ab3@5837>    MOVE.l hunkoffsetcounter,tstsize3
00023C12 <AmiBlitz3.ab3@5838>    BEQ.w menu_createresidentfile__skip2a
00023C14 <AmiBlitz3.ab3@5839>   MOVE.l D7,D1
00023C1A <AmiBlitz3.ab3@5840>   MOVE.l #tstend,D2
00023C1C <AmiBlitz3.ab3@5841>   MOVEQ.l #$0C,D3
00023C22 <AmiBlitz3.ab3@5842>   MOVEA.l _dosbase,A6
00023C26 <AmiBlitz3.ab3@5843>    JSR _Write(A6)
00023C2C <AmiBlitz3.ab3@5847>   MOVEA.l hunkoffsetbase,A2
00023C30 <AmiBlitz3.ab3@5850>   CMPA.w #$0,A2
00023C34 <AmiBlitz3.ab3@5851>    BEQ.w menu_createresidentfile__skip2
00023C38 <AmiBlitz3.ab3@5852>   LEA $4(A2),A1
00023C3A <AmiBlitz3.ab3@5853>   MOVE.l D7,D1
00023C3C <AmiBlitz3.ab3@5854>   MOVE.l A1,D2
00023C3E <AmiBlitz3.ab3@5855>   MOVEQ.l #$04,D3
00023C44 <AmiBlitz3.ab3@5856>   MOVEA.l _dosbase,A6
00023C48 <AmiBlitz3.ab3@5857>    JSR _Write(A6)
00023C4A <AmiBlitz3.ab3@5858>   MOVEA.l (A2),A2
00023C4E <AmiBlitz3.ab3@5859> BRA.w menu_createresidentfile__oloop
00023C50 <AmiBlitz3.ab3@5862>   MOVE.l D7,D1
00023C56 <AmiBlitz3.ab3@5863>   MOVE.l #zero,D2
00023C58 <AmiBlitz3.ab3@5864>   MOVEQ.l #$04,D3
00023C5E <AmiBlitz3.ab3@5865>   MOVEA.l _dosbase,A6
00023C62 <AmiBlitz3.ab3@5866>   JSR _Write(A6)
00023C64 <AmiBlitz3.ab3@5869>   MOVE.l D7,D1
00023C6A <AmiBlitz3.ab3@5870>   MOVE.l #tstdone,D2
00023C6C <AmiBlitz3.ab3@5871>   MOVEQ.l #$04,D3
00023C72 <AmiBlitz3.ab3@5872>   MOVEA.l _dosbase,A6
00023C76 <AmiBlitz3.ab3@5873>    JSR _Write(A6)
00023C78 <AmiBlitz3.ab3@5874>   MOVE.l (A7)+,D0
00023C7A <AmiBlitz3.ab3@5875>   LSR.l #2,D0
00023C80 <AmiBlitz3.ab3@5876>   MOVE.l D0,temp1
00023C82 <AmiBlitz3.ab3@5877>   MOVE.l D7,D1
00023C84 <AmiBlitz3.ab3@5878>   MOVEQ.l #$14,D2
00023C86 <AmiBlitz3.ab3@5879>   MOVEQ.l #-$01,D3
00023C8A <AmiBlitz3.ab3@5880>   JSR _Seek(A6)
00023C8C <AmiBlitz3.ab3@5881>   MOVE.l D7,D1
00023C92 <AmiBlitz3.ab3@5882>   MOVE.l #temp1,D2
00023C94 <AmiBlitz3.ab3@5883>   MOVEQ.l #$04,D3
00023C98 <AmiBlitz3.ab3@5884>    JSR _Write(A6)
00023C9A <AmiBlitz3.ab3@5885>   MOVE.l D7,D1
00023C9C <AmiBlitz3.ab3@5886>   MOVEQ.l #$1C,D2
00023C9E <AmiBlitz3.ab3@5887>   MOVEQ.l #-$01,D3
00023CA2 <AmiBlitz3.ab3@5888>    JSR _Seek(A6)
00023CA4 <AmiBlitz3.ab3@5889>   MOVE.l D7,D1
00023CAA <AmiBlitz3.ab3@5890>   MOVE.l #temp1,D2
00023CAC <AmiBlitz3.ab3@5891>   MOVEQ.l #$04,D3
00023CB0 <AmiBlitz3.ab3@5892>    JSR _Write(A6)
00023CB2 <AmiBlitz3.ab3@5893>   MOVE.l D7,D1
00023CB6 <AmiBlitz3.ab3@5894>    JSR _Close(A6)
00023CBA <AmiBlitz3.ab3@5895> BRA.w call_setpointernormal
00023CBC <AmiBlitz3.ab3@5899>   ADDQ.w #5,D1
00023CBE <AmiBlitz3.ab3@5900>   ADDQ.b #8,D0
00023CC2 <AmiBlitz3.ab3@5903>     CMPA.w #$0,A2
00023CC6 <AmiBlitz3.ab3@5904>     BEQ.w writelist__done
00023CCA <AmiBlitz3.ab3@5905>      BSR.w writeitem
00023CCC <AmiBlitz3.ab3@5906>     MOVEA.l (A2),A2
00023CD0 <AmiBlitz3.ab3@5907> BRA.w writelist__loop
00023CD2 <AmiBlitz3.ab3@5910> RTS
00023CD4 <AmiBlitz3.ab3@5913>   MOVEQ.l #$00,D3
00023CD8 <AmiBlitz3.ab3@5914>   MOVE.b $0(A2,D5.W),D3
00023CDA <AmiBlitz3.ab3@5915>   ADDQ.w #1,D3
00023CDE <AmiBlitz3.ab3@5916>   BCLR #$0,D3                                              ;word align
00023CE0 <AmiBlitz3.ab3@5917>   MOVE.l (A2),-(A7)
00023CE4 <AmiBlitz3.ab3@5918>    BEQ.w writeitem__skip
00023CE8 <AmiBlitz3.ab3@5919>    BSR.w resoff
00023CEA <AmiBlitz3.ab3@5920>   ADD.l D3,D6
00023CEC <AmiBlitz3.ab3@5921>   MOVE.l D6,(A2)
00023CEE <AmiBlitz3.ab3@5922>   SUB.l D3,D6
00023CF0 <AmiBlitz3.ab3@5925>    ADD.l D3,D6
00023CF2 <AmiBlitz3.ab3@5926>   MOVE.l A2,D2
00023CF4 <AmiBlitz3.ab3@5927>   MOVE.l D7,D1
00023CFA <AmiBlitz3.ab3@5928>   MOVEA.l _dosbase,A6
00023CFE <AmiBlitz3.ab3@5929>    JSR _Write(A6)
00023D00 <AmiBlitz3.ab3@5930>   MOVE.l (A7)+,(A2)
00023D02 <AmiBlitz3.ab3@5931> RTS
00023D04 <AmiBlitz3.ab3@5934>   MOVE.l D6,D2
00023D08 <AmiBlitz3.ab3@5935> BRA.w addhunkoffset
00023D0C <AmiBlitz3.ab3@5939>     CMPA.w #$0,A2
00023D10 <AmiBlitz3.ab3@5940>      BEQ.w writeoffs__done
00023D16 <AmiBlitz3.ab3@5941>     MOVEA.l newtypebase,A1
00023D18 <AmiBlitz3.ab3@5942>     MOVEQ.l #$00,D1
00023D1C <AmiBlitz3.ab3@5945>       CMPA.w #$0,A1
00023D20 <AmiBlitz3.ab3@5946>       BEQ.w writeoffs__found
00023D24 <AmiBlitz3.ab3@5947>       CMPA.l $A(A2),A1
00023D28 <AmiBlitz3.ab3@5948>        BEQ.w writeoffs__found
00023D2A <AmiBlitz3.ab3@5949>       ADDQ.w #1,D1
00023D2C <AmiBlitz3.ab3@5950>       MOVEA.l (A1),A1
00023D30 <AmiBlitz3.ab3@5951> BRA.w writeoffs__loop2
00023D34 <AmiBlitz3.ab3@5954>     MOVE.w $A(A2),-(A7)
00023D38 <AmiBlitz3.ab3@5955>     MOVE.w D1,$A(A2)
00023D3C <AmiBlitz3.ab3@5956>      BSR.w writeitem
00023D40 <AmiBlitz3.ab3@5957>     MOVE.w (A7)+,$A(A2)
00023D42 <AmiBlitz3.ab3@5958>     MOVEA.l (A2),A2
00023D46 <AmiBlitz3.ab3@5959> BRA.w writeoffs
00023D48 <AmiBlitz3.ab3@5962> RTS
00023D4A <AmiBlitz3.ab3@5966>   MOVEQ.l #$00,D0
00023D4E <AmiBlitz3.ab3@5969>   CMPA.w #$0,A2
00023D52 <AmiBlitz3.ab3@5970>    BEQ.w countem__done
00023D54 <AmiBlitz3.ab3@5971>   ADDQ.w #1,D0
00023D56 <AmiBlitz3.ab3@5972>   MOVEA.l (A2),A2
00023D5A <AmiBlitz3.ab3@5973> BRA.w countem__loop
00023D60 <AmiBlitz3.ab3@5976>   MOVE.w D0,temp1
00023D62 <AmiBlitz3.ab3@5977>   MOVE.l D7,D1
00023D68 <AmiBlitz3.ab3@5978>   MOVE.l #temp1,D2
00023D6A <AmiBlitz3.ab3@5979>   MOVEQ.l #$02,D3
00023D6C <AmiBlitz3.ab3@5980>   ADDQ.l #2,D6
00023D72 <AmiBlitz3.ab3@5981>   MOVEA.l _dosbase,A6
00023D76 <AmiBlitz3.ab3@5982> JMP _Write(A6)
00023D7C <AmiBlitz3.ab3@5986>    TST.b resdisable
00023D80 <AmiBlitz3.ab3@5987>    BEQ resmacs__l1
00023D86 <AmiBlitz3.ab3@5988>    MOVE.l currentmacroaddr,a3
00023D8C <AmiBlitz3.ab3@5989>    CMP.l #0,a3
00023D90 <AmiBlitz3.ab3@5990>    BEQ resmacs__l1
00023D92 <AmiBlitz3.ab3@5991>    MOVE.l (a3),a3
00023D96 <AmiBlitz3.ab3@5992> BRA resmacs__l2
00023D9C <AmiBlitz3.ab3@5995>   MOVEA.l macrobase,A3                                     ;??begin org code??
00023D9E <AmiBlitz3.ab3@5998>   MOVEA.l A3,A2
00023DA2 <AmiBlitz3.ab3@5999>   BSR.w countem
00023DA6 <AmiBlitz3.ab3@6002>    CMPA.w #$0,A3
00023DAA <AmiBlitz3.ab3@6003>    BEQ.w resmacs__done
00023DAC <AmiBlitz3.ab3@6004>   MOVE.l D6,D5
00023DAE <AmiBlitz3.ab3@6005>   MOVE.l (A3),-(A7)
00023DB2 <AmiBlitz3.ab3@6006>   MOVE.l $4(A3),-(A7)
00023DB4 <AmiBlitz3.ab3@6007>   MOVEQ.l #$00,D3
00023DB8 <AmiBlitz3.ab3@6008>   MOVE.b $C(A3),D3
00023DBA <AmiBlitz3.ab3@6009>   ADDQ.w #1,D3
00023DBE <AmiBlitz3.ab3@6010>   BCLR #$0,D3
00023DC0 <AmiBlitz3.ab3@6011>   ADD.l D3,D6                                              ;add len of struct
00023DC4 <AmiBlitz3.ab3@6012>   TST.w $8(A3)
00023DC8 <AmiBlitz3.ab3@6013>    BEQ.w resmacs__notext
00023DCC <AmiBlitz3.ab3@6014>   MOVE.l D6,$4(A3)
00023DCE <AmiBlitz3.ab3@6015>   MOVE.l D5,D2
00023DD0 <AmiBlitz3.ab3@6016>   ADDQ.l #4,D2
00023DD4 <AmiBlitz3.ab3@6017>    BSR.w addhunkoffset
00023DD6 <AmiBlitz3.ab3@6020>   MOVEQ.l #$00,D4
00023DDA <AmiBlitz3.ab3@6021>   MOVE.w $8(A3),D4
00023DDC <AmiBlitz3.ab3@6022>   ADDQ.w #1,D4
00023DE0 <AmiBlitz3.ab3@6023>   BCLR #$0,D4
00023DE2 <AmiBlitz3.ab3@6024>   ADD.l D4,D6
00023DE4 <AmiBlitz3.ab3@6025>   TST.l (A3)
00023DE8 <AmiBlitz3.ab3@6026>    BEQ.w resmacs__nomore
00023DEA <AmiBlitz3.ab3@6027>   MOVE.l D6,(A3)
00023DEC <AmiBlitz3.ab3@6028>   MOVE.l D5,D2
00023DF0 <AmiBlitz3.ab3@6029>    BSR.w addhunkoffset
00023DF2 <AmiBlitz3.ab3@6032>   MOVE.l A3,D2
00023DF4 <AmiBlitz3.ab3@6033>   MOVE.l D7,D1
00023DFA <AmiBlitz3.ab3@6035>    MOVEA.l _dosbase,A6
00023DFE <AmiBlitz3.ab3@6036>    JSR _Write(a6)
00023E00 <AmiBlitz3.ab3@6037>   TST.l D4
00023E04 <AmiBlitz3.ab3@6038>    BEQ.w resmacs__skip
00023E06 <AmiBlitz3.ab3@6039>   MOVE.l (A7),D2
00023E08 <AmiBlitz3.ab3@6040>   MOVE.l D4,D3
00023E0A <AmiBlitz3.ab3@6041>   MOVE.l D7,D1
00023E10 <AmiBlitz3.ab3@6043>     MOVEA.l _dosbase,A6
00023E14 <AmiBlitz3.ab3@6044>    JSR _Write(A6)
00023E18 <AmiBlitz3.ab3@6047>   MOVE.l (A7)+,$4(A3)
00023E1A <AmiBlitz3.ab3@6048>   MOVE.l (A7)+,(A3)
00023E1C <AmiBlitz3.ab3@6049>   MOVEA.l (A3),A3
00023E20 <AmiBlitz3.ab3@6050> BRA.w resmacs__loop
00023E22 <AmiBlitz3.ab3@6053> RTS
00023E28 <AmiBlitz3.ab3@6057>   TST.b resdisable
00023E2C <AmiBlitz3.ab3@6058>   BEQ restypes__l1
00023E32 <AmiBlitz3.ab3@6059>   MOVE.l lastrestype,a3
00023E38 <AmiBlitz3.ab3@6060>   CMP.l #0,a3
00023E3C <AmiBlitz3.ab3@6061>   BEQ restypes__l1
00023E3E <AmiBlitz3.ab3@6062>   MOVE.l (a3),a3
00023E42 <AmiBlitz3.ab3@6063> BRA restypes__l2
00023E48 <AmiBlitz3.ab3@6066>   MOVEA.l newtype_string,A3
00023E4A <AmiBlitz3.ab3@6069>   MOVEA.l A3,A2
00023E4E <AmiBlitz3.ab3@6070>    BSR.w countem
00023E52 <AmiBlitz3.ab3@6073>    CMPA.w #$0,A3
00023E56 <AmiBlitz3.ab3@6074>    BEQ.w restypes__done
00023E58 <AmiBlitz3.ab3@6075>   MOVE.l D6,-(A7)
00023E5C <AmiBlitz3.ab3@6076>   MOVEA.l $4(A3),A2
00023E5E <AmiBlitz3.ab3@6077>   MOVEQ.l #$0E,D5
00023E62 <AmiBlitz3.ab3@6078>    BSR.w writeoffs
00023E64 <AmiBlitz3.ab3@6079>   MOVE.l (A7)+,D0
00023E68 <AmiBlitz3.ab3@6080>   MOVE.l $4(A3),-(A7)
00023E6C <AmiBlitz3.ab3@6081>   MOVE.l D0,$4(A3)
00023E6E <AmiBlitz3.ab3@6082>   MOVE.l D6,D2
00023E70 <AmiBlitz3.ab3@6083>   ADDQ.l #4,D2
00023E74 <AmiBlitz3.ab3@6084>    BSR.w addhunkoffset
00023E76 <AmiBlitz3.ab3@6085>   MOVEQ.l #$00,D3
00023E7A <AmiBlitz3.ab3@6086>   MOVE.b $A(A3),D3
00023E7C <AmiBlitz3.ab3@6087>   ADDQ.w #1,D3
00023E80 <AmiBlitz3.ab3@6088>   BCLR #$0,D3
00023E82 <AmiBlitz3.ab3@6089>   ADD.l D3,D6
00023E84 <AmiBlitz3.ab3@6090>   MOVE.l A3,D2
00023E86 <AmiBlitz3.ab3@6091>   MOVE.l D7,D1
00023E8C <AmiBlitz3.ab3@6093>     MOVEA.l _dosbase,A6
00023E90 <AmiBlitz3.ab3@6094>     JSR _Write(A6)
00023E94 <AmiBlitz3.ab3@6095>   MOVE.l (A7)+,$4(A3)
00023E96 <AmiBlitz3.ab3@6096>   MOVEA.l (A3),A3
00023E9A <AmiBlitz3.ab3@6097> BRA.w restypes__loop
00023E9C <AmiBlitz3.ab3@6100> RTS
00023EA2 <AmiBlitz3.ab3@6104>    TST.b resdisable
00023EA6 <AmiBlitz3.ab3@6105>    BEQ resconsts__l1
00023EAC <AmiBlitz3.ab3@6106>    MOVE.l currentlabeladdr,a2
00023EB2 <AmiBlitz3.ab3@6107>    CMP.l #0,a2
00023EB6 <AmiBlitz3.ab3@6108>    BEQ resconsts__l1
00023EB8 <AmiBlitz3.ab3@6109>    MOVE.l (a2),a2
00023EBC <AmiBlitz3.ab3@6110> BRA resconsts__l2
00023EC2 <AmiBlitz3.ab3@6113>    MOVEA.l labelbase,A2
00023EC4 <AmiBlitz3.ab3@6116>    MOVEQ.l #$00,D0
00023EC8 <AmiBlitz3.ab3@6119>    CMPA.w #$0,A2
00023ECC <AmiBlitz3.ab3@6120>    BEQ.w resconsts__done
00023ED4 <AmiBlitz3.ab3@6121>   CMPI.l #$1,$4(A2)
00023ED8 <AmiBlitz3.ab3@6122>    BNE.w resconsts__next
00023EDA <AmiBlitz3.ab3@6123>   ADDQ.w #1,D0
00023EDC <AmiBlitz3.ab3@6126>   MOVEA.l (A2),A2
00023EE0 <AmiBlitz3.ab3@6127> BRA.w resconsts__loop
00023EE6 <AmiBlitz3.ab3@6130>   MOVE.w D0,temp1
00023EE8 <AmiBlitz3.ab3@6131>   MOVE.l D7,D1
00023EEE <AmiBlitz3.ab3@6132>   MOVE.l #temp1,D2
00023EF0 <AmiBlitz3.ab3@6133>   MOVEQ.l #$02,D3
00023EF2 <AmiBlitz3.ab3@6134>   ADDQ.l #2,D6
00023EF8 <AmiBlitz3.ab3@6136>     MOVEA.l _dosbase,A6
00023EFC <AmiBlitz3.ab3@6137>     JSR _Write(A6)
00023F02 <AmiBlitz3.ab3@6138>    TST.b resdisable
00023F06 <AmiBlitz3.ab3@6139>    BEQ resconsts__done_l1
00023F0C <AmiBlitz3.ab3@6140>    MOVE.l currentlabeladdr,a2
00023F12 <AmiBlitz3.ab3@6141>    CMP.l #0,a2
00023F16 <AmiBlitz3.ab3@6142>    BEQ resconsts__done_l1
00023F18 <AmiBlitz3.ab3@6143>    MOVE.l (a2),a2
00023F1C <AmiBlitz3.ab3@6144> BRA resconsts__loop2
00023F22 <AmiBlitz3.ab3@6147>    MOVEA.l labelbase,A2                                    ;write resident labels
00023F26 <AmiBlitz3.ab3@6150>    CMPA.w #$0,A2
00023F2A <AmiBlitz3.ab3@6151>    BEQ.w resconsts__done2
00023F32 <AmiBlitz3.ab3@6152>   CMPI.l #$1,$4(A2)
00023F36 <AmiBlitz3.ab3@6153>    BNE.w resconsts__next2
00023F38 <AmiBlitz3.ab3@6154>    MOVEQ.l #$00,D3
00023F3C <AmiBlitz3.ab3@6155>   MOVE.b $12(A2),D3                                        ;length
00023F3E <AmiBlitz3.ab3@6156>   ADDQ.w #1,D3
00023F42 <AmiBlitz3.ab3@6157>   BCLR #$0,D3
00023F44 <AmiBlitz3.ab3@6158>   MOVE.l D6,D2
00023F46 <AmiBlitz3.ab3@6159>   ADD.l D3,D6
00023F48 <AmiBlitz3.ab3@6162>   MOVE.l (A2),-(A7)
00023F4A <AmiBlitz3.ab3@6163>   TST.l (A2)
00023F4E <AmiBlitz3.ab3@6164>    BEQ.w resconsts__nonext
00023F50 <AmiBlitz3.ab3@6165>   MOVE.l D6,(A2)
00023F54 <AmiBlitz3.ab3@6166>    BSR.w addhunkoffset
00023F56 <AmiBlitz3.ab3@6169>   MOVE.l A2,D2
00023F58 <AmiBlitz3.ab3@6170>   MOVE.l D7,D1
00023F5E <AmiBlitz3.ab3@6172>     MOVEA.l _dosbase,A6
00023F62 <AmiBlitz3.ab3@6173>     JSR _Write(A6)
00023F64 <AmiBlitz3.ab3@6174>   MOVE.l (A7)+,(A2)
00023F66 <AmiBlitz3.ab3@6177>   MOVEA.l (A2),A2
00023F6A <AmiBlitz3.ab3@6178> BRA.w resconsts__loop2
00023F6C <AmiBlitz3.ab3@6181> RTS
00023F96 <AmiBlitz3.ab3@6185>    !basic
00023F9C <AmiBlitz3.ab3@6186>     MOVE.l ptr_resfile,d0
00023FAC <AmiBlitz3.ab3@6187>     resfileP.l = Peek.l(?ptr_resfile)
00023FB6 <AmiBlitz3.ab3@6188>     If resfileP
00023FDE <AmiBlitz3.ab3@6189>       resfile$ = Peek.s(resfileP)
0002402A <AmiBlitz3.ab3@6190>       tests.b = Instr(resfile$,"/")
00024076 <AmiBlitz3.ab3@6191>       testc.b = Instr(resfile$,":")
00024098 <AmiBlitz3.ab3@6192>       If tests=0 AND testc=0
00024118 <AmiBlitz3.ab3@6193>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
0002412A <AmiBlitz3.ab3@6194>         Poke.l ?ptr_resfile,&resfile$
00024130 <AmiBlitz3.ab3@6196>     Else
0002416A <AmiBlitz3.ab3@6197>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00024188 <AmiBlitz3.ab3@6199>    !asm
0002418A <AmiBlitz3.ab3@6200> RTS
00024190 <AmiBlitz3.ab3@6204> 
00024196 <AmiBlitz3.ab3@6205>   MOVE.l A7,errstack
000241A0 <AmiBlitz3.ab3@6208>   MOVE.l #next_resentry,errcont
000241A8 <AmiBlitz3.ab3@6209>   MOVE.w #$FFFF,ezerr
000241AC <AmiBlitz3.ab3@6210>   BSR.w Aclearallvars
000241B0 <AmiBlitz3.ab3@6211>   BSR.w free_residents
000241B6 <AmiBlitz3.ab3@6213>   LEA residents_table,A5
000241B8 <AmiBlitz3.ab3@6214>   MOVEQ.l #$07,D6
000241BA <AmiBlitz3.ab3@6217>     TST.b (A5)
000241BE <AmiBlitz3.ab3@6218>     BEQ.w next_resentry
000241C4 <AmiBlitz3.ab3@6219>     MOVE.l A5,ptr_resfile
000241C8 <AmiBlitz3.ab3@6220>     BSR check_residentpath
000241CE <AmiBlitz3.ab3@6221>     MOVE.l ptr_resfile,d1
000241D4 <AmiBlitz3.ab3@6222>     MOVEA.l _dosbase,A6
000241D8 <AmiBlitz3.ab3@6223>     JSR _LoadSeg(A6)
000241DC <AmiBlitz3.ab3@6224>     MOVE.l D0,$40(A5)
000241E0 <AmiBlitz3.ab3@6225>     BNE.w reloadresident__yeah
000241E4 <AmiBlitz3.ab3@6226>     BSR.w reserr
000241E6 <AmiBlitz3.ab3@6229>     MOVEA.l D0,A3
000241E8 <AmiBlitz3.ab3@6230>     ADDA.l A3,A3
000241EA <AmiBlitz3.ab3@6231>     ADDA.l A3,A3
000241EC <AmiBlitz3.ab3@6232>     ADDQ.w #4,A3                                           ;start of res
000241F0 <AmiBlitz3.ab3@6233>     BSR.w JL_0_5A9E
000241F4 <AmiBlitz3.ab3@6234>     BSR.w JL_0_5A62                                        ;add macros to list
000241F8 <AmiBlitz3.ab3@6235>     BSR.w JL_0_5A32                                        ;read labels
000241FC <AmiBlitz3.ab3@6238>     LEA ResidentEntryStep(A5),A5       ;$44
00024200 <AmiBlitz3.ab3@6239>   DBF D6,reloadresident__loop
0002420A <AmiBlitz3.ab3@6244>   MOVE.l #free_residents,errcont
00024210 <AmiBlitz3.ab3@6246>   MOVEA.l newtype_string,A3
00024212 <AmiBlitz3.ab3@6247>   MOVEQ.l #$0B,D7
00024216 <AmiBlitz3.ab3@6248>   BSR.w checkclash
0002421C <AmiBlitz3.ab3@6250>   MOVEA.l macrobase,A3
0002421E <AmiBlitz3.ab3@6251>   MOVEQ.l #$d,D7
00024222 <AmiBlitz3.ab3@6252>   BSR.w checkclash
00024228 <AmiBlitz3.ab3@6254>   MOVEA.l firstconst,A3
0002422A <AmiBlitz3.ab3@6255>   MOVEQ.l #$19,D7
0002422E <AmiBlitz3.ab3@6256>   BSR.w checkclash
00024230 <AmiBlitz3.ab3@6259> RTS
00024232 <AmiBlitz3.ab3@6263>   MOVEA.l A3,A4
00024236 <AmiBlitz3.ab3@6266>     CMPA.w #$0,A4
0002423A <AmiBlitz3.ab3@6267>     BEQ.w checkclash__done
00024240 <AmiBlitz3.ab3@6269>     LEA ptr_parameterstore,A0
00024244 <AmiBlitz3.ab3@6270>     LEA $0(A4,D7.W),A1
00024246 <AmiBlitz3.ab3@6271>     MOVEQ.l #-$01,D2
00024248 <AmiBlitz3.ab3@6274>       ADDQ.w #1,D2
0002424A <AmiBlitz3.ab3@6275>       MOVE.b (A1)+,(A0)+
0002424E <AmiBlitz3.ab3@6276>     BNE.w checkclash__loop2
00024250 <AmiBlitz3.ab3@6277>     MOVEA.l A3,A2
00024254 <AmiBlitz3.ab3@6280>     BSR.w findlab
00024258 <AmiBlitz3.ab3@6281>     BNE.w checkclash__next                                  ;not found
0002425A <AmiBlitz3.ab3@6282>     CMPA.l A2,A4
0002425E <AmiBlitz3.ab3@6283>     BEQ.w checkclash__l1
00024260 <AmiBlitz3.ab3@6284>     MOVE.l a1,a5
00024264 <AmiBlitz3.ab3@6285> BRA clasherr
00024268 <AmiBlitz3.ab3@6288> BRA.w checkclash__more
0002426A <AmiBlitz3.ab3@6291>     MOVEA.l (A4),A4
0002426E <AmiBlitz3.ab3@6292> BRA.w checkclash__loop
00024270 <AmiBlitz3.ab3@6295> RTS
00024276 <AmiBlitz3.ab3@6299>   MOVEA.l _dosbase,A6
0002427C <AmiBlitz3.ab3@6301>   LEA newtype_string,A0
00024282 <AmiBlitz3.ab3@6302>   MOVE.l A0,lastrestype
00024284 <AmiBlitz3.ab3@6303>   CLR.l (A0)
0002428A <AmiBlitz3.ab3@6305>   LEA macrobase,A0
00024290 <AmiBlitz3.ab3@6306>   MOVE.l A0,currentmacroaddr
00024292 <AmiBlitz3.ab3@6307>   CLR.l (A0)
00024298 <AmiBlitz3.ab3@6309>   LEA labelbase,A0
0002429E <AmiBlitz3.ab3@6310>   MOVE.l A0,currentlabeladdr
000242A0 <AmiBlitz3.ab3@6311>   CLR.l (A0)
000242A6 <AmiBlitz3.ab3@6312>   CLR.w rescnt
000242DE <AmiBlitz3.ab3@6316>   !ComData_SetB{comByte_DebugMode,debugmode}
000242E4 <AmiBlitz3.ab3@6319>   LEA residents_table,A2
000242E6 <AmiBlitz3.ab3@6320>   MOVEQ.l #$07,D2
000242EA <AmiBlitz3.ab3@6323>      MOVE.l $40(A2),D1
000242EE <AmiBlitz3.ab3@6324>      BEQ.w free_residents__next
000242F2 <AmiBlitz3.ab3@6325>       CLR.l $40(A2)
000242F8 <AmiBlitz3.ab3@6326>       MOVEA.l _dosbase,A6
000242FC <AmiBlitz3.ab3@6327>       JSR _UnLoadSeg(A6)
00024300 <AmiBlitz3.ab3@6330>      LEA ResidentEntryStep(A2),A2   ; $44
00024304 <AmiBlitz3.ab3@6331>    DBF D2,free_residents__loop
00024306 <AmiBlitz3.ab3@6333> RTS
00024308 <AmiBlitz3.ab3@6337>   MOVE.w (A3)+,D1
0002430C <AmiBlitz3.ab3@6338>   BEQ.w JL_0_5A60
00024312 <AmiBlitz3.ab3@6339>   MOVEA.l currentlabeladdr,A2
00024314 <AmiBlitz3.ab3@6340>   MOVE.l A3,(A2)
00024316 <AmiBlitz3.ab3@6341>   SUBQ.w #1,D1
00024318 <AmiBlitz3.ab3@6344>     MOVEA.l A3,A2
0002431A <AmiBlitz3.ab3@6345>     MOVEA.l (A3),A3
0002431E <AmiBlitz3.ab3@6346>   DBF D1,JL_0_5A42
00024320 <AmiBlitz3.ab3@6348>   CLR.l (a2)                                               ;bugfix for object
00024326 <AmiBlitz3.ab3@6349>   MOVE.l A2,currentlabeladdr
00024328 <AmiBlitz3.ab3@6350>   MOVEA.l A2,A3
0002432A <AmiBlitz3.ab3@6351>   MOVEQ.l #$00,D0
0002432E <AmiBlitz3.ab3@6352>   MOVE.b $12(A3),D0
00024330 <AmiBlitz3.ab3@6353>   ADDQ.w #1,D0
00024334 <AmiBlitz3.ab3@6354>   BCLR #$0,D0
00024336 <AmiBlitz3.ab3@6355>   ADDA.w D0,A3
00024338 <AmiBlitz3.ab3@6358> RTS
0002433A <AmiBlitz3.ab3@6362>   MOVE.w (A3)+,D1
0002433E <AmiBlitz3.ab3@6363>   BEQ.w JL_0_5A9C
00024344 <AmiBlitz3.ab3@6365>   MOVEA.l currentmacroaddr,A2
00024346 <AmiBlitz3.ab3@6366>   MOVE.l A3,(A2)
00024348 <AmiBlitz3.ab3@6367>   SUBQ.w #1,D1
0002434A <AmiBlitz3.ab3@6370>     MOVEA.l A3,A2
0002434C <AmiBlitz3.ab3@6371>     MOVEA.l (A3),A3
00024350 <AmiBlitz3.ab3@6372>   DBF D1,JL_0_5A72
00024356 <AmiBlitz3.ab3@6374>   MOVE.l A2,currentmacroaddr
00024358 <AmiBlitz3.ab3@6375>   MOVEA.l A2,A3
0002435A <AmiBlitz3.ab3@6376>   MOVEQ.l #$00,D0
0002435E <AmiBlitz3.ab3@6377>   MOVE.b $C(A3),D0
00024360 <AmiBlitz3.ab3@6378>   ADDQ.w #1,D0
00024364 <AmiBlitz3.ab3@6379>   BCLR #$0,D0
00024368 <AmiBlitz3.ab3@6380>   MOVE.w $8(A3),D1
0002436A <AmiBlitz3.ab3@6381>   ADDQ.w #1,D1
0002436E <AmiBlitz3.ab3@6382>   BCLR #$0,D1
00024370 <AmiBlitz3.ab3@6383>   ADDA.w D0,A3
00024372 <AmiBlitz3.ab3@6384>   ADDA.w D1,A3
00024374 <AmiBlitz3.ab3@6387> RTS
00024376 <AmiBlitz3.ab3@6391>   MOVE.w (A3)+,D1
0002437A <AmiBlitz3.ab3@6392>   BEQ.w JL_0_5B38
0002437C <AmiBlitz3.ab3@6393>   MOVE.w D1,-(A7)
0002437E <AmiBlitz3.ab3@6394>   SUBQ.w #1,D1
00024384 <AmiBlitz3.ab3@6395>   MOVEA.l lastrestype,A2
00024386 <AmiBlitz3.ab3@6396>   MOVE.l A2,-(A7)
00024388 <AmiBlitz3.ab3@6399>       MOVE.l (A3),D0
0002438C <AmiBlitz3.ab3@6400>       BEQ.w JL_0_5ABC
0002438E <AmiBlitz3.ab3@6401>       MOVEA.l D0,A3
00024392 <AmiBlitz3.ab3@6402> BRA.w JL_0_5AB0
00024396 <AmiBlitz3.ab3@6405>       MOVE.b $E(A3),D0
00024398 <AmiBlitz3.ab3@6406>       ADDQ.w #1,D0
0002439C <AmiBlitz3.ab3@6407>       BCLR #$0,D0
0002439E <AmiBlitz3.ab3@6408>       ADDA.w D0,A3
000243A0 <AmiBlitz3.ab3@6409>       MOVE.l A3,(A2)
000243A2 <AmiBlitz3.ab3@6410>       MOVEA.l A3,A2
000243A4 <AmiBlitz3.ab3@6411>       MOVEQ.l #$00,D0
000243A8 <AmiBlitz3.ab3@6412>       MOVE.b $A(A3),D0
000243AA <AmiBlitz3.ab3@6413>       ADDQ.w #1,D0
000243AE <AmiBlitz3.ab3@6414>       BCLR #$0,D0
000243B0 <AmiBlitz3.ab3@6415>       ADDA.w D0,A3
000243B4 <AmiBlitz3.ab3@6416>   DBF D1,JL_0_5AB0
000243B6 <AmiBlitz3.ab3@6418>   MOVEA.l (A7)+,A0
000243B8 <AmiBlitz3.ab3@6419>   MOVEA.l (A0),A0
000243BC <AmiBlitz3.ab3@6422>     CMPA.w #$0,A0
000243C0 <AmiBlitz3.ab3@6423>     BEQ.w JL_0_5B2A
000243C4 <AmiBlitz3.ab3@6424>     MOVEA.l $4(A0),A1
000243C8 <AmiBlitz3.ab3@6427>     CMPA.w #$0,A1
000243CC <AmiBlitz3.ab3@6428>     BEQ.w JL_0_5B24
000243D0 <AmiBlitz3.ab3@6429>     MOVE.w $A(A1),D0
000243D6 <AmiBlitz3.ab3@6430>     MOVEA.l newtypebase,A4
000243DA <AmiBlitz3.ab3@6431>     CMP.w #$7,D0
000243DE <AmiBlitz3.ab3@6432>     BCS.w JL_0_5B0E
000243E4 <AmiBlitz3.ab3@6433>     SUB.w rescnt,D0
000243E6 <AmiBlitz3.ab3@6436>     SUBQ.w #1,D0
000243EA <AmiBlitz3.ab3@6437>     BMI.w JL_0_5B1A
000243EC <AmiBlitz3.ab3@6440>        MOVEA.l (A4),A4
000243F0 <AmiBlitz3.ab3@6441>   DBF D0,JL_0_5B14
000243F4 <AmiBlitz3.ab3@6444>     MOVE.l A4,$A(A1)
000243F6 <AmiBlitz3.ab3@6445>     MOVEA.l (A1),A1
000243FA <AmiBlitz3.ab3@6446> BRA.w JL_0_5AEE
000243FC <AmiBlitz3.ab3@6449>     MOVEA.l (A0),A0
00024400 <AmiBlitz3.ab3@6450> BRA.w JL_0_5AE2
00024402 <AmiBlitz3.ab3@6453>   MOVE.w (A7)+,D0
00024408 <AmiBlitz3.ab3@6454>   ADD.w D0,rescnt
0002440E <AmiBlitz3.ab3@6455>   MOVE.l A2,lastrestype
00024410 <AmiBlitz3.ab3@6458> RTS
00024416 <AmiBlitz3.ab3@6462>   LEA tokens,A0
0002441A <AmiBlitz3.ab3@6463>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
0002441C <AmiBlitz3.ab3@6466>     MOVEA.l (A0),A0
00024420 <AmiBlitz3.ab3@6467>   DBF D0,JL_0_5BD0
00024426 <AmiBlitz3.ab3@6469>   MOVEA.l #asmpnts,A1                                      ;create tokentab
0002442A <AmiBlitz3.ab3@6470>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
0002442E <AmiBlitz3.ab3@6473>       LEA $6(A0),A2
00024430 <AmiBlitz3.ab3@6476>         TST.b (A2)+
00024434 <AmiBlitz3.ab3@6477>       BNE.w JL_0_5BE4
00024436 <AmiBlitz3.ab3@6480>         TST.b (A2)+
0002443A <AmiBlitz3.ab3@6481>       BNE.w JL_0_5BEA
0002443C <AmiBlitz3.ab3@6483>       ADDQ.w #1,A2
0002443E <AmiBlitz3.ab3@6484>       EXG.l D1,A2
00024442 <AmiBlitz3.ab3@6485>       BCLR #$0,D1
00024444 <AmiBlitz3.ab3@6486>       EXG.l D1,A2
00024446 <AmiBlitz3.ab3@6487>       MOVE.l A2,(A1)+
00024448 <AmiBlitz3.ab3@6488>       MOVEA.l (A0),A0
0002444C <AmiBlitz3.ab3@6489>   DBF D0,JL_0_5BE0
0002444E <AmiBlitz3.ab3@6490> RTS
00024452 <AmiBlitz3.ab3@6494>   BSR.w asmconst
00024454 <AmiBlitz3.ab3@6495>   MOVEQ.l #$0B,D5
00024456 <AmiBlitz3.ab3@6496> RTS
00024458 <AmiBlitz3.ab3@6499> unmove:  Ds.w 1
0002445C <AmiBlitz3.ab3@6503>   MOVE.w #$48E7,D1
00024460 <AmiBlitz3.ab3@6504>   BSR.w writeword                                          ;movem.l -(a7)
00024464 <AmiBlitz3.ab3@6505>   MOVE.w #$000F,D2
00024466 <AmiBlitz3.ab3@6506>   SUB.w D4,D2
00024468 <AmiBlitz3.ab3@6507>   MOVEQ.l #-$01,D1
0002446A <AmiBlitz3.ab3@6508>   BCLR D2,D1
0002446E <AmiBlitz3.ab3@6509>   BSR.w writeword
00024470 <AmiBlitz3.ab3@6510>   MOVEQ.l #-$01,D1
00024472 <AmiBlitz3.ab3@6511>   BCLR D4,D1
00024478 <AmiBlitz3.ab3@6512>   MOVE.w D1,unmove
0002447A <AmiBlitz3.ab3@6513> RTS
0002447E <AmiBlitz3.ab3@6517>   MOVE.w #$4CDF,D1
00024482 <AmiBlitz3.ab3@6518>   BSR.w writeword
00024486 <AmiBlitz3.ab3@6519>   MOVE.w unmove(PC),D1
0002448A <AmiBlitz3.ab3@6520> BRA.w writeword
0002448E <AmiBlitz3.ab3@6533>   BSR.w JL_0_5D22
00024492 <AmiBlitz3.ab3@6534>   CMP.w #$2C,D0                                            ;#','
00024496 <AmiBlitz3.ab3@6535>    BNE.w syntaxerr
0002449C <AmiBlitz3.ab3@6536>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000244A0 <AmiBlitz3.ab3@6537>    BSR.w writelong
000244A2 <AmiBlitz3.ab3@6538>   MOVE.w D4,D1
000244A6 <AmiBlitz3.ab3@6539>   ORI.w #$2F00,D1
000244AA <AmiBlitz3.ab3@6540>    BSR.w writeword
000244AE <AmiBlitz3.ab3@6541>    BSR.w get1bytemain
000244B2 <AmiBlitz3.ab3@6542>    BSR.w getparameter
000244B6 <AmiBlitz3.ab3@6543>    BSR.w JL_0_8E3C
000244BA <AmiBlitz3.ab3@6544>    BSR.w calcvar
000244BE <AmiBlitz3.ab3@6545>    BTST #$E,D2
000244C2 <AmiBlitz3.ab3@6546>    BEQ.w JL_0_5C80
000244C6 <AmiBlitz3.ab3@6549>    MOVE.b #$3,D2
000244CA <AmiBlitz3.ab3@6550> BRA.w JL_0_5C8E
000244CC <AmiBlitz3.ab3@6553>   TST.b D2
000244D0 <AmiBlitz3.ab3@6554>    BEQ.w JL_0_5C78
000244D4 <AmiBlitz3.ab3@6555>   CMP.b #$7,D2
000244D8 <AmiBlitz3.ab3@6556>    BEQ.w JL_0_5C78
000244DC <AmiBlitz3.ab3@6559>   BTST #$F,D2
000244E0 <AmiBlitz3.ab3@6560>    BNE.w JL_0_5CA4
000244E4 <AmiBlitz3.ab3@6561>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
000244E8 <AmiBlitz3.ab3@6562>    BSR.w writeword
000244EA <AmiBlitz3.ab3@6563>   MOVE.w D3,D1
000244EE <AmiBlitz3.ab3@6564>    BSR.w writeword
000244F2 <AmiBlitz3.ab3@6567>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
000244F6 <AmiBlitz3.ab3@6568>    BSR.w writeword
000244FA <AmiBlitz3.ab3@6569>   MOVE.w #$1480,D1
000244FE <AmiBlitz3.ab3@6570>   CMP.b #$1,D2
00024502 <AmiBlitz3.ab3@6571>    BEQ.w JL_0_5CC8
00024506 <AmiBlitz3.ab3@6572>   EORI.w #$3000,D1
0002450A <AmiBlitz3.ab3@6573>   CMP.b #$2,D2
0002450E <AmiBlitz3.ab3@6574>    BNE.w JL_0_5CC8
00024512 <AmiBlitz3.ab3@6575>   ORI.w #$1000,D1
00024516 <AmiBlitz3.ab3@6578>   BSR.w writeword
0002451C <AmiBlitz3.ab3@6579>   MOVE.l #$4CDF7FFF,D1
00024520 <AmiBlitz3.ab3@6580> BRA.w writelong
00024524 <AmiBlitz3.ab3@6584>   BSR.w JL_0_5D22
00024528 <AmiBlitz3.ab3@6585>   CMP.w #$2C,D0
0002452C <AmiBlitz3.ab3@6586>    BNE.w syntaxerr
00024530 <AmiBlitz3.ab3@6587>    BSR.w regmovems
00024532 <AmiBlitz3.ab3@6588>   MOVE.w D4,-(A7)
00024534 <AmiBlitz3.ab3@6589>   MOVEQ.l #$03,D2
00024538 <AmiBlitz3.ab3@6590>    BSR.w eval
0002453A <AmiBlitz3.ab3@6591>   MOVE.w (A7)+,D1
0002453E <AmiBlitz3.ab3@6592>    BEQ.w JL_0_5D1A
00024542 <AmiBlitz3.ab3@6593>   CMP.w #$8,D1
00024546 <AmiBlitz3.ab3@6594>    BCC.w JL_0_5D0C
00024548 <AmiBlitz3.ab3@6595>   LSL.w #8,D1
0002454A <AmiBlitz3.ab3@6596>   LSL.w #1,D1
0002454E <AmiBlitz3.ab3@6597>   ORI.w #$2000,D1
00024552 <AmiBlitz3.ab3@6598>    BSR.w writeword
00024556 <AmiBlitz3.ab3@6599> BRA.w JL_0_5D1A
00024558 <AmiBlitz3.ab3@6602>   SUBQ.w #8,D1
0002455A <AmiBlitz3.ab3@6603>   LSL.w #8,D1
0002455C <AmiBlitz3.ab3@6604>   LSL.w #1,D1
00024560 <AmiBlitz3.ab3@6605>   ORI.w #$2040,D1
00024564 <AmiBlitz3.ab3@6606>   BSR.w writeword
00024568 <AmiBlitz3.ab3@6609> BRA.w dounmove
0002456C <AmiBlitz3.ab3@6613>   BSR.w get1bytemain
00024570 <AmiBlitz3.ab3@6616>   ORI.w #$20,D0
00024574 <AmiBlitz3.ab3@6617>   CMP.w #$64,D0
00024578 <AmiBlitz3.ab3@6618>    BEQ.w JL_0_5D4E
0002457C <AmiBlitz3.ab3@6619>   CMP.w #$61,D0
00024580 <AmiBlitz3.ab3@6620>    BNE.w syntaxerr
00024584 <AmiBlitz3.ab3@6621>    BSR.w JL_0_5D4E
00024586 <AmiBlitz3.ab3@6622>   ADDQ.w #8,D4
00024588 <AmiBlitz3.ab3@6623> RTS
000245B4 <AmiBlitz3.ab3@6627>   !fget                                                   ;bsr.w get1bytemain
000245B8 <AmiBlitz3.ab3@6629>   ORI.w #$20,D0
000245BC <AmiBlitz3.ab3@6632>   CMP.w #$61,D0
000245C0 <AmiBlitz3.ab3@6633>   BNE.w syntaxerr
000245EC <AmiBlitz3.ab3@6636>   !fget                                                    ;bsr.w get1bytemain
000245F0 <AmiBlitz3.ab3@6637>   SUBI.w #$30,D0
000245F4 <AmiBlitz3.ab3@6638>    BMI.w syntaxerr
000245F8 <AmiBlitz3.ab3@6639>   CMP.w #$7,D0
000245FC <AmiBlitz3.ab3@6640>    BHI.w syntaxerr
000245FE <AmiBlitz3.ab3@6641>   MOVE.w D0,D4
0002462A <AmiBlitz3.ab3@6642>   !fget
0002462C <AmiBlitz3.ab3@6643> RTS                                                        ;bra.w get1bytemain
0002462E <AmiBlitz3.ab3@6647>   ADDQ.w #8,D4
00024630 <AmiBlitz3.ab3@6650>   MOVEQ.l #$00,D5
00024634 <AmiBlitz3.ab3@6651>   SUBI.w #$30,D4
00024638 <AmiBlitz3.ab3@6654>   CMP.w #$2D,D0
0002463C <AmiBlitz3.ab3@6655>    BEQ.w JL_0_5D9E
00024640 <AmiBlitz3.ab3@6656>   CMP.w #$2F,D0
00024644 <AmiBlitz3.ab3@6657>    BEQ.w JL_0_5D8C
00024648 <AmiBlitz3.ab3@6658> BRA.w syntaxerr
0002464A <AmiBlitz3.ab3@6661>   BSET D4,D5
0002464C <AmiBlitz3.ab3@6664>   MOVE.w D5,D4
0002464E <AmiBlitz3.ab3@6665>   MOVEQ.l #$0F,D5
00024650 <AmiBlitz3.ab3@6666> RTS
00024652 <AmiBlitz3.ab3@6669>   BSET D4,D5
00024656 <AmiBlitz3.ab3@6670>   BSR.w JL_0_5D1E
00024668 <AmiBlitz3.ab3@6671>   !compare3                                                ;bsr.w JL_0_5FC0
0002466C <AmiBlitz3.ab3@6672>   BNE.w JL_0_5D70
00024670 <AmiBlitz3.ab3@6673> BRA.w JL_0_5D84
00024672 <AmiBlitz3.ab3@6676>   MOVE.w D4,D1
00024676 <AmiBlitz3.ab3@6677>    BSR.w JL_0_5D1E
00024678 <AmiBlitz3.ab3@6678>   CMP.w D4,D1
0002467C <AmiBlitz3.ab3@6679>    BLS.w JL_0_5DAC
0002467E <AmiBlitz3.ab3@6680>   EXG.l D4,D1
00024680 <AmiBlitz3.ab3@6683>   BSET D1,D5
00024682 <AmiBlitz3.ab3@6684>   ADDQ.w #1,D1
00024684 <AmiBlitz3.ab3@6685>   CMP.w D4,D1
00024688 <AmiBlitz3.ab3@6686>    BLS.w JL_0_5DAC
0002469A <AmiBlitz3.ab3@6687>   !compare3                                                ;bsr.w JL_0_5FC0
0002469E <AmiBlitz3.ab3@6688>   BNE.w JL_0_5D70
000246A2 <AmiBlitz3.ab3@6689> BRA.w JL_0_5D86
000246A4 <AmiBlitz3.ab3@6692>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000246D0 <AmiBlitz3.ab3@6693>    !fget
000246D4 <AmiBlitz3.ab3@6694>   CMP.w #$23,D0
000246D8 <AmiBlitz3.ab3@6695>    BEQ.w getimm
000246DC <AmiBlitz3.ab3@6696>   CMP.w #$28,D0
000246E0 <AmiBlitz3.ab3@6697>    BEQ.w JL_0_5DFE
000246E4 <AmiBlitz3.ab3@6698>   CMP.w #$2D,D0
000246E8 <AmiBlitz3.ab3@6699>    BNE.w JL_0_5E20
00024714 <AmiBlitz3.ab3@6700>    !fget                                                   ;bsr.w get1bytemain       -(
00024718 <AmiBlitz3.ab3@6701>   CMP.w #$28,D0
0002471C <AmiBlitz3.ab3@6702>    BNE.w JL_0_5F4E
00024720 <AmiBlitz3.ab3@6703>    BSR.w JL_0_5D3E
00024724 <AmiBlitz3.ab3@6704>   CMP.w #$29,D0
00024728 <AmiBlitz3.ab3@6705>    BNE.w syntaxerr
0002472A <AmiBlitz3.ab3@6706>   MOVEQ.l #$04,D5
00024756 <AmiBlitz3.ab3@6707>   !fget                                                    ;bsr.w get1bytemain
00024758 <AmiBlitz3.ab3@6708> RTS
0002475C <AmiBlitz3.ab3@6712>   BSR.w JL_0_5D3E
00024760 <AmiBlitz3.ab3@6713>   CMP.w #$29,D0
00024764 <AmiBlitz3.ab3@6714>    BNE.w syntaxerr
00024790 <AmiBlitz3.ab3@6715>   !fget                                                    ;bsr.w get1bytemain
00024794 <AmiBlitz3.ab3@6716>   CMP.w #$2B,D0
00024798 <AmiBlitz3.ab3@6717>    BEQ.w JL_0_5E1A
0002479A <AmiBlitz3.ab3@6718>   MOVEQ.l #$02,D5
0002479C <AmiBlitz3.ab3@6719> RTS
0002479E <AmiBlitz3.ab3@6723>   MOVEQ.l #$03,D5
000247CA <AmiBlitz3.ab3@6724>   !fget                                                    ;bra.w get1bytemain
000247CC <AmiBlitz3.ab3@6725> RTS
000247D0 <AmiBlitz3.ab3@6729>   ORI.w #$20,D0
000247D2 <AmiBlitz3.ab3@6730>   MOVE.w D0,D1                                            
000247FE <AmiBlitz3.ab3@6731>    !fget                                                   ;bsr.w get1bytemain
00024802 <AmiBlitz3.ab3@6732>   CMP.w #$64,D1
00024806 <AmiBlitz3.ab3@6733>    BNE.w JL_0_5E6C
0002480A <AmiBlitz3.ab3@6734>   CMP.w #$30,D0
0002480E <AmiBlitz3.ab3@6735>    BCS.w JL_0_5EAE
00024812 <AmiBlitz3.ab3@6736>   CMP.w #$37,D0
00024816 <AmiBlitz3.ab3@6737>    BHI.w JL_0_5EAE
00024818 <AmiBlitz3.ab3@6738>   MOVE.w D0,D4
00024844 <AmiBlitz3.ab3@6739>    !fget                                                   ;bsr.w get1bytemain
00024856 <AmiBlitz3.ab3@6740>    !compare3                                               ;bsr.w JL_0_5FC0
0002485A <AmiBlitz3.ab3@6741>    BEQ.w JL_0_5E64
0002485E <AmiBlitz3.ab3@6742>   CMP.w #$2D,D0
00024862 <AmiBlitz3.ab3@6743>    BEQ.w JL_0_5D6A
00024866 <AmiBlitz3.ab3@6744>   CMP.w #$2F,D0
0002486A <AmiBlitz3.ab3@6745>    BEQ.w JL_0_5D6A
0002486E <AmiBlitz3.ab3@6746> BRA.w JL_0_5EB8
00024870 <AmiBlitz3.ab3@6749>   MOVEQ.l #$00,D5
00024874 <AmiBlitz3.ab3@6750>   SUBI.w #$30,D4
00024876 <AmiBlitz3.ab3@6751> RTS
0002487A <AmiBlitz3.ab3@6754>    CMP.w #$61,D1
0002487E <AmiBlitz3.ab3@6755>    BNE.w JL_0_5EAE
00024882 <AmiBlitz3.ab3@6756>   CMP.w #$30,D0
00024886 <AmiBlitz3.ab3@6757>    BCS.w JL_0_5EAE
0002488A <AmiBlitz3.ab3@6758>   CMP.w #$37,D0
0002488E <AmiBlitz3.ab3@6759>    BHI.w JL_0_5EAE
00024890 <AmiBlitz3.ab3@6760>   MOVE.w D0,D4
000248BC <AmiBlitz3.ab3@6761>    !fget                                                   ;bsr.w get1bytemain
000248CE <AmiBlitz3.ab3@6762>    !compare3                                               ;bsr.w JL_0_5FC0
000248D2 <AmiBlitz3.ab3@6763>    BEQ.w JL_0_5EA6
000248D6 <AmiBlitz3.ab3@6764>   CMP.w #$2D,D0
000248DA <AmiBlitz3.ab3@6765>    BEQ.w JL_0_5D68                                         ;movem
000248DE <AmiBlitz3.ab3@6766>   CMP.w #$2F,D0
000248E2 <AmiBlitz3.ab3@6767>    BEQ.w JL_0_5D68
000248E6 <AmiBlitz3.ab3@6768> BRA.w JL_0_5EB8
000248E8 <AmiBlitz3.ab3@6771>   MOVEQ.l #1,d5
000248EC <AmiBlitz3.ab3@6772>   SUBI.w #$30,D4
000248F0 <AmiBlitz3.ab3@6774> BRA 'l10
000248F2 <AmiBlitz3.ab3@6775>   ADDQ.w #8,d4
000248F4 <AmiBlitz3.ab3@6776>   MOVEQ #0,d5
000248F6 <AmiBlitz3.ab3@6777>   BSET d4,d5
000248F8 <AmiBlitz3.ab3@6778>   MOVE.w d5,d4
000248FA <AmiBlitz3.ab3@6779>   MOVEQ.l #$0f,D5                                          ;01
000248FC <AmiBlitz3.ab3@6782> RTS
00024900 <AmiBlitz3.ab3@6786>   ORI.w #$20,D0
00024902 <AmiBlitz3.ab3@6787>   MOVE.w D0,D4
0002492E <AmiBlitz3.ab3@6788>    !fget                                                   ;bsr.w get1bytemain
00024940 <AmiBlitz3.ab3@6791>   !compare3                                                ;bsr.w JL_0_5FC0
00024944 <AmiBlitz3.ab3@6792>    BNE.w JL_0_5EF2
00024948 <AmiBlitz3.ab3@6793>   CMP.w #$73,D1
0002494C <AmiBlitz3.ab3@6794>    BNE.w JL_0_5EF2
00024950 <AmiBlitz3.ab3@6795>   CMP.w #$70,D4
00024954 <AmiBlitz3.ab3@6796>    BNE.w JL_0_5EDE
00024966 <AmiBlitz3.ab3@6797>    !compare3                                               ;bsr.w JL_0_5FC0
0002496A <AmiBlitz3.ab3@6798>    BNE.w JL_0_5F4E
0002496C <AmiBlitz3.ab3@6799>   MOVEQ.l #$07,D4
0002496E <AmiBlitz3.ab3@6800>   MOVEQ.l #$01,D5
00024970 <AmiBlitz3.ab3@6801> RTS
00024974 <AmiBlitz3.ab3@6805>   CMP.w #$72,D4
00024978 <AmiBlitz3.ab3@6806>    BNE.w JL_0_5F4E
0002498A <AmiBlitz3.ab3@6807>    !compare3                                               ;bsr.w JL_0_5FC0
0002498E <AmiBlitz3.ab3@6808>    BNE.w JL_0_5F4E
00024990 <AmiBlitz3.ab3@6809>   MOVEQ.l #$0D,D5
00024992 <AmiBlitz3.ab3@6810> RTS
00024996 <AmiBlitz3.ab3@6814>   ORI.w #$20,D0
0002499A <AmiBlitz3.ab3@6815>   CMP.w #$63,D1
0002499E <AmiBlitz3.ab3@6816>    BNE.w JL_0_5F22
000249A2 <AmiBlitz3.ab3@6817>   CMP.w #$63,D4
000249A6 <AmiBlitz3.ab3@6818>    BNE.w JL_0_5F4E
000249AA <AmiBlitz3.ab3@6819>   CMP.w #$72,D0
000249AE <AmiBlitz3.ab3@6820>    BNE.w JL_0_5F4E
000249B2 <AmiBlitz3.ab3@6821>    BSR.w get1bytemain                                      ;??wy not !fget
000249B6 <AmiBlitz3.ab3@6822>    BEQ.w JL_0_5F1E
000249BA <AmiBlitz3.ab3@6823>   CMP.w #$2C,D0
000249BE <AmiBlitz3.ab3@6824>    BNE.w JL_0_5F4E
000249C0 <AmiBlitz3.ab3@6827>   MOVEQ.l #$0C,D5
000249C2 <AmiBlitz3.ab3@6828> RTS
000249C6 <AmiBlitz3.ab3@6832>   CMP.w #$75,D1
000249CA <AmiBlitz3.ab3@6833>    BNE.w JL_0_5F4E
000249CE <AmiBlitz3.ab3@6834>   CMP.w #$73,D4
000249D2 <AmiBlitz3.ab3@6835>    BNE.w JL_0_5F4E
000249D6 <AmiBlitz3.ab3@6836>   CMP.w #$70,D0
000249DA <AmiBlitz3.ab3@6837>    BNE.w JL_0_5F4E
000249DE <AmiBlitz3.ab3@6838>    BSR.w get1bytemain                                      ;??wy not !fget
000249E2 <AmiBlitz3.ab3@6839>    BEQ.w JL_0_5F4A
000249E6 <AmiBlitz3.ab3@6840>   CMP.w #$2C,D0
000249EA <AmiBlitz3.ab3@6841>    BNE.w JL_0_5F4E
000249EC <AmiBlitz3.ab3@6844>   MOVEQ.l #$0E,D5
000249EE <AmiBlitz3.ab3@6845> RTS
000249F0 <AmiBlitz3.ab3@6849>   MOVEA.l A4,A5
000249F4 <AmiBlitz3.ab3@6850>    BSR.w asmconst
00024A06 <AmiBlitz3.ab3@6851>    !compare3                                               ;bsr.w JL_0_5FC0
00024A0A <AmiBlitz3.ab3@6852>    BEQ.w JL_0_5FB8
00024A0E <AmiBlitz3.ab3@6853>   CMP.w #$2E,D0
00024A12 <AmiBlitz3.ab3@6854>    BEQ.w JL_0_5FA0
00024A16 <AmiBlitz3.ab3@6855>   CMP.w #$28,D0
00024A1A <AmiBlitz3.ab3@6856>    BNE.w syntaxerr
00024A1E <AmiBlitz3.ab3@6857>    BSR.w get1bytemain                                      ;??wy not !fget
00024A22 <AmiBlitz3.ab3@6858>   ORI.w #$20,D0
00024A26 <AmiBlitz3.ab3@6859>   CMP.w #$70,D0
00024A2A <AmiBlitz3.ab3@6860>    BNE.w JL_0_5F98
00024A2E <AmiBlitz3.ab3@6861>    BSR.w get1bytemain                                      ;??wy not !fget
00024A32 <AmiBlitz3.ab3@6862>   ORI.w #$20,D0
00024A36 <AmiBlitz3.ab3@6863>   CMP.w #$63,D0
00024A3A <AmiBlitz3.ab3@6864>    BNE.w syntaxerr
00024A3E <AmiBlitz3.ab3@6865>    BSR.w get1bytemain                                      ;??wy not !fget
00024A42 <AmiBlitz3.ab3@6866>    BSR.w JL_0_5FD4
00024A44 <AmiBlitz3.ab3@6867>   ADDQ.w #4,D5
00024A46 <AmiBlitz3.ab3@6868> RTS
00024A4A <AmiBlitz3.ab3@6872>   BSR.w JL_0_5D46
00024A4E <AmiBlitz3.ab3@6873> BRA.w JL_0_5FD4
00024A52 <AmiBlitz3.ab3@6877>    BSR.w get1bytemain                                     ;??wy not !fget
00024A56 <AmiBlitz3.ab3@6878>   ORI.w #$20,D0
00024A5A <AmiBlitz3.ab3@6879>   CMP.w #$77,D0
00024A5E <AmiBlitz3.ab3@6880>    BEQ.w JL_0_5FBC
00024A62 <AmiBlitz3.ab3@6881>   CMP.w #$6C,D0
00024A66 <AmiBlitz3.ab3@6882>    BNE.w syntaxerr
00024A68 <AmiBlitz3.ab3@6885>   MOVEQ.l #$08,D5
00024A6A <AmiBlitz3.ab3@6886> RTS
00024A6C <AmiBlitz3.ab3@6890>   MOVEQ.l #$07,D5
00024A6E <AmiBlitz3.ab3@6891> RTS
00024A70 <AmiBlitz3.ab3@6895>   TST.w D0
00024A74 <AmiBlitz3.ab3@6896>    BEQ.w JL_0_5FD2
00024A78 <AmiBlitz3.ab3@6897>   CMP.w #$3A,D0
00024A7C <AmiBlitz3.ab3@6898>    BEQ.w JL_0_5FD2
00024A80 <AmiBlitz3.ab3@6899>   CMP.w #$2C,D0
00024A82 <AmiBlitz3.ab3@6902> RTS
00024A86 <AmiBlitz3.ab3@6906>   CMP.w #$2C,D0
00024A8A <AmiBlitz3.ab3@6907>    BNE.w JL_0_6054
00024A8E <AmiBlitz3.ab3@6908>    BSR.w get1bytemain                                      ;??wy not !fget
00024A92 <AmiBlitz3.ab3@6909>   ORI.w #$20,D0
00024A94 <AmiBlitz3.ab3@6910>   MOVEQ.l #$00,D1
00024A98 <AmiBlitz3.ab3@6911>   CMP.w #$64,D0
00024A9C <AmiBlitz3.ab3@6912>    BEQ.w JL_0_5FFA
00024AA0 <AmiBlitz3.ab3@6913>   CMP.w #$61,D0
00024AA4 <AmiBlitz3.ab3@6914>    BNE.w syntaxerr
00024AA8 <AmiBlitz3.ab3@6915>   BSET #$F,D1
00024AAC <AmiBlitz3.ab3@6918>    BSR.w get1bytemain                                      ;??wy not !fget
00024AB0 <AmiBlitz3.ab3@6919>   SUBI.w #$30,D0
00024AB4 <AmiBlitz3.ab3@6920>    BMI.w syntaxerr
00024AB8 <AmiBlitz3.ab3@6921>   CMP.w #$7,D0
00024ABC <AmiBlitz3.ab3@6922>    BHI.w syntaxerr
00024ABE <AmiBlitz3.ab3@6923>   LSL.w #8,D0
00024AC0 <AmiBlitz3.ab3@6924>   LSL.w #4,D0
00024AC2 <AmiBlitz3.ab3@6925>   OR.w D0,D1
00024AC6 <AmiBlitz3.ab3@6926>    BSR.w get1bytemain                                      ;??wy not !fget
00024ACA <AmiBlitz3.ab3@6927>   CMP.w #$2E,D0
00024ACE <AmiBlitz3.ab3@6928>    BNE.w JL_0_6040
00024AD2 <AmiBlitz3.ab3@6929>    BSR.w get1bytemain                                      ;??wy not !fget
00024AD6 <AmiBlitz3.ab3@6930>   ORI.w #$20,D0
00024ADA <AmiBlitz3.ab3@6931>   CMP.w #$77,D0
00024ADE <AmiBlitz3.ab3@6932>    BEQ.w JL_0_603C
00024AE2 <AmiBlitz3.ab3@6933>   CMP.w #$6C,D0
00024AE6 <AmiBlitz3.ab3@6934>    BNE.w syntaxerr
00024AEA <AmiBlitz3.ab3@6935>   BSET #$B,D1
00024AEE <AmiBlitz3.ab3@6938>    BSR.w get1bytemain                                      ;??wy not !fget
00024AF2 <AmiBlitz3.ab3@6941>    CMP.b #"*",d0                                           ;020 * Mode
00024AF6 <AmiBlitz3.ab3@6942>             BNE 'l1
00024AFA <AmiBlitz3.ab3@6943>             BSR.w get1bytemain                             ;??wy not !fget
00024AFE <AmiBlitz3.ab3@6944>             CMP.b #"2",d0
00024B02 <AmiBlitz3.ab3@6945>             BNE 'l2
00024B06 <AmiBlitz3.ab3@6946>             OR.w #$200,d1
00024B0A <AmiBlitz3.ab3@6947> BRA 'l1b
00024B0E <AmiBlitz3.ab3@6950>             CMP.b #"4",d0
00024B12 <AmiBlitz3.ab3@6951>             BNE 'l3
00024B16 <AmiBlitz3.ab3@6952>             OR.w #$400,d1
00024B1A <AmiBlitz3.ab3@6953> BRA 'l1b
00024B1E <AmiBlitz3.ab3@6956>             CMP.b #"8",d0
00024B22 <AmiBlitz3.ab3@6957>             BNE syntaxerr
00024B26 <AmiBlitz3.ab3@6958>             OR.w #$600,d1
00024B2A <AmiBlitz3.ab3@6961>         BSR.w get1bytemain                                 ;??wy not !fget
00024B2E <AmiBlitz3.ab3@6964>   CMP.w #$29,D0
00024B32 <AmiBlitz3.ab3@6965>    BNE.w syntaxerr
00024B38 <AmiBlitz3.ab3@6966>   MOVE.w D1,extraword
00024B3A <AmiBlitz3.ab3@6967>   MOVEQ.l #$06,D5
00024B3E <AmiBlitz3.ab3@6968> BRA.w get1bytemain                                         ;??wy not !fget
00024B42 <AmiBlitz3.ab3@6972>   CMP.w #")",D0                                            ;")"
00024B46 <AmiBlitz3.ab3@6973>    BNE.w errorbracketmiss                                  ; was syntax error
00024B48 <AmiBlitz3.ab3@6974>   MOVEQ.l #$05,D5
00024B4C <AmiBlitz3.ab3@6975> BRA.w get1bytemain                                         ;??wy not !fget
00024B52 <AmiBlitz3.ab3@6982>   MOVEA.l asmbuff,A0
00024B58 <AmiBlitz3.ab3@6983>   MOVE.w ininclude,D1
00024B5E <AmiBlitz3.ab3@6984>   OR.w inmacro,D1
00024B60 <AmiBlitz3.ab3@6985>   MOVE.w D1,(A0)+                                          ;flag!
00024B64 <AmiBlitz3.ab3@6986>    BNE.w copyconst
00024B66 <AmiBlitz3.ab3@6987>   MOVE.l A5,-(A7)
00024B6A <AmiBlitz3.ab3@6988>    BSR.w copyconst
00024B70 <AmiBlitz3.ab3@6989>   MOVEA.l asmbuff,A0
00024B74 <AmiBlitz3.ab3@6990>   CMP.w #$4,D1
00024B78 <AmiBlitz3.ab3@6991>    BLS.w asmconst__leave
00024B7E <AmiBlitz3.ab3@6992>   TST.w lc
00024B82 <AmiBlitz3.ab3@6993>    BNE.w asmconst__leave
00024B84 <AmiBlitz3.ab3@6994>   ADDQ.w #2,A0
00024B86 <AmiBlitz3.ab3@6995>   MOVE.l (A7)+,(A0)+
00024B88 <AmiBlitz3.ab3@6996>   CLR.b (A0)
00024B90 <AmiBlitz3.ab3@6997>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00024B92 <AmiBlitz3.ab3@6998> RTS
00024B94 <AmiBlitz3.ab3@7002>   NOT.w (A0)
00024B96 <AmiBlitz3.ab3@7003>   ADDQ.w #4,A7
00024B98 <AmiBlitz3.ab3@7004> RTS
00024B9A <AmiBlitz3.ab3@7007> lc:  Ds.w 1
00024BA0 <AmiBlitz3.ab3@7011>   CLR.w lc
00024BA2 <AmiBlitz3.ab3@7012>   MOVEQ.l #$00,D1
00024BA4 <AmiBlitz3.ab3@7015>    ADDQ.w #1,D1                                            ;label name
00024BD0 <AmiBlitz3.ab3@7016>    !fget                                                   ;bsr.w get1bytemain
00024BD4 <AmiBlitz3.ab3@7017>    BEQ.w copyconst__done
00024BD8 <AmiBlitz3.ab3@7018>    CMP.w #$22,d0
00024BDC <AmiBlitz3.ab3@7019>    BNE.s copyconst__loop_l10
00024BE2 <AmiBlitz3.ab3@7020>    NOT.w instringon
00024BE6 <AmiBlitz3.ab3@7023>    CMP.w #":",d0
00024BEA <AmiBlitz3.ab3@7024>    BNE.s copyconst__loop_l11
00024BF0 <AmiBlitz3.ab3@7025>    TST.w instringon
00024BF4 <AmiBlitz3.ab3@7026>    BEQ copyconst__done
00024BF6 <AmiBlitz3.ab3@7029>   TST.w D0
00024BFA <AmiBlitz3.ab3@7030>   BPL.w copyconst__notmi
00024BFC <AmiBlitz3.ab3@7031>   MOVE.w D0,-(A7)
00024BFE <AmiBlitz3.ab3@7032>   LSR.w #8,D0
00024C00 <AmiBlitz3.ab3@7033>   MOVE.b D0,(A0)+
00024C02 <AmiBlitz3.ab3@7034>   MOVE.w (A7)+,D0
00024C04 <AmiBlitz3.ab3@7035>   MOVE.b D0,(A0)+
00024C06 <AmiBlitz3.ab3@7036>   ADDQ.w #1,D1
00024C0A <AmiBlitz3.ab3@7037> BRA.s copyconst__loop
00024C10 <AmiBlitz3.ab3@7040>    TST.w instringon
00024C14 <AmiBlitz3.ab3@7041>    BNE.w copyconst__putbyte
00024C1A <AmiBlitz3.ab3@7042>    TST.b _dcb
00024C1E <AmiBlitz3.ab3@7043>    BNE copyconst__notmi_l10
00024C22 <AmiBlitz3.ab3@7044>    CMP.w #$28,D0
00024C26 <AmiBlitz3.ab3@7045>    BEQ.w copyconst__done
00024C2A <AmiBlitz3.ab3@7048>    CMP.w #$2C,D0
00024C2E <AmiBlitz3.ab3@7049>    BEQ.w copyconst__done
00024C32 <AmiBlitz3.ab3@7050>    CMP.b #"'",D0
00024C36 <AmiBlitz3.ab3@7051>    BNE.w copyconst__putbyte
00024C3C <AmiBlitz3.ab3@7052>    MOVE.w D0,lc                                     ;locallabels
00024C3E <AmiBlitz3.ab3@7053>    MOVE.l A1,-(A7)
00024C44 <AmiBlitz3.ab3@7054>    LEA lastgloballabel,A1
00024C46 <AmiBlitz3.ab3@7055>    TST.b (A1)
00024C4A <AmiBlitz3.ab3@7056>    BEQ.w nolocerr
00024C4C <AmiBlitz3.ab3@7059>   ADDQ.w #1,D1
00024C4E <AmiBlitz3.ab3@7060>   MOVE.b (A1)+,(A0)+
00024C52 <AmiBlitz3.ab3@7061>    BNE.w copyconst__cloop
00024C54 <AmiBlitz3.ab3@7062>   SUBQ.w #1,D1
00024C56 <AmiBlitz3.ab3@7063>   SUBQ.w #1,A0
00024C58 <AmiBlitz3.ab3@7064>   MOVEA.l (A7)+,A1
00024C5A <AmiBlitz3.ab3@7067>   MOVE.b D0,(A0)+
00024C5E <AmiBlitz3.ab3@7068> BRA.w copyconst__loop
00024C60 <AmiBlitz3.ab3@7071>   CLR.b (A0)
00024C66 <AmiBlitz3.ab3@7072>   MOVE.w D1,asmlen2
00024C68 <AmiBlitz3.ab3@7073> RTS
00024C6E <AmiBlitz3.ab3@7078>   CMP.l #$80ad,d0
00024C72 <AmiBlitz3.ab3@7079>   BNE.s 'l12
00024C78 <AmiBlitz3.ab3@7080> JMP bssseg
00024C7E <AmiBlitz3.ab3@7083>   CMP.l #$807f,d0
00024C82 <AmiBlitz3.ab3@7084>     BNE.s 'l13
00024C88 <AmiBlitz3.ab3@7085> JMP chipseg
00024C8E <AmiBlitz3.ab3@7088>   ADDQ.l #1,destpointer                                    ;even
00024C96 <AmiBlitz3.ab3@7089>   BCLR #$0,destpointer+3
00024C9A <AmiBlitz3.ab3@7090>   SUBI.w #$803C,D0
00024C9C <AmiBlitz3.ab3@7091>   LSL.w #2,D0
00024CA2 <AmiBlitz3.ab3@7092>   MOVEA.l #asmpnts,A0
00024CA6 <AmiBlitz3.ab3@7093>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00024CAC <AmiBlitz3.ab3@7094>   MOVE.w D0,temp1
00024CAE <AmiBlitz3.ab3@7095>   MOVE.l A0,-(A7)
00024CB0 <AmiBlitz3.ab3@7096>   MOVEQ.l #$01,D1
00024CDC <AmiBlitz3.ab3@7097>    !fget                                                   ;bsr.w get1bytemain
00024CE0 <AmiBlitz3.ab3@7098>   CMP.w #$2E,D0
00024CE4 <AmiBlitz3.ab3@7099>    BNE.w JL_0_6184
00024D10 <AmiBlitz3.ab3@7100>   !fget                                                    ;bsr.w get1bytemain
00024D14 <AmiBlitz3.ab3@7101>   ORI.w #$20,D0
00024D18 <AmiBlitz3.ab3@7102>   CMP.w #$77,D0                                            ;long
00024D1C <AmiBlitz3.ab3@7103>    BEQ.w JL_0_618A
00024D20 <AmiBlitz3.ab3@7104>   CMP.w #$62,D0                                            ;byte
00024D24 <AmiBlitz3.ab3@7105>    BEQ.w JL_0_617A
00024D28 <AmiBlitz3.ab3@7106>   CMP.w #$6C,D0                                            ;word
00024D2C <AmiBlitz3.ab3@7107>    BEQ.w JL_0_6196
00024D30 <AmiBlitz3.ab3@7108>   CMP.w #"s",d0
00024D34 <AmiBlitz3.ab3@7109>   BNE syntaxerr
00024D38 <AmiBlitz3.ab3@7110> BRA.w JL_0_617A
00024D3A <AmiBlitz3.ab3@7113>   MOVEQ.l #$00,D1
00024D3E <AmiBlitz3.ab3@7114>   MOVE.w $8(A0),D0
00024D42 <AmiBlitz3.ab3@7115> BRA.w JL_0_619E
00024D44 <AmiBlitz3.ab3@7118>   MOVEQ.l #$04,D1
00024D48 <AmiBlitz3.ab3@7119> BRA.w JL_0_61AE
00024D4A <AmiBlitz3.ab3@7122>   MOVEQ.l #$04,D1
00024D4E <AmiBlitz3.ab3@7123>   MOVE.w $8(A0),D0
00024D50 <AmiBlitz3.ab3@7124>   LSR.w #4,D0
00024D54 <AmiBlitz3.ab3@7125> BRA.w JL_0_619E
00024D56 <AmiBlitz3.ab3@7128>   MOVEQ.l #$08,D1
00024D5A <AmiBlitz3.ab3@7129>   MOVE.w $8(A0),D0
00024D5C <AmiBlitz3.ab3@7130>   LSR.w #8,D0
00024D60 <AmiBlitz3.ab3@7133>    ANDI.w #$F,D0
00024D64 <AmiBlitz3.ab3@7134>   CMP.w #$F,D0
00024D68 <AmiBlitz3.ab3@7135>    BNE.w 'cl60
00024D70 <AmiBlitz3.ab3@7138>    CMP.l #"MULS",-6(a0)
00024D74 <AmiBlitz3.ab3@7139>    BNE 'c20
00024D7A <AmiBlitz3.ab3@7140>    MOVE.l #$4c000800,d1
00024D80 <AmiBlitz3.ab3@7141> JMP do32
00024D88 <AmiBlitz3.ab3@7144>    CMP.l #"MULU",-6(a0)
00024D8C <AmiBlitz3.ab3@7145>    BNE 'c30
00024D92 <AmiBlitz3.ab3@7146>    MOVE.l #$4c000000,d1
00024D98 <AmiBlitz3.ab3@7147> JMP do32
00024DA0 <AmiBlitz3.ab3@7150>    CMP.l #"DIVS",-6(a0)
00024DA4 <AmiBlitz3.ab3@7151>    BNE 'c40
00024DAA <AmiBlitz3.ab3@7152>    MOVE.l #$4c400800,d1
00024DB0 <AmiBlitz3.ab3@7153> JMP do32
00024DB8 <AmiBlitz3.ab3@7156>    CMP.l #"DIVU",-6(a0)
00024DBC <AmiBlitz3.ab3@7157>    BNE 'c50
00024DC2 <AmiBlitz3.ab3@7158>    MOVE.l #$4c400000,d1
00024DC8 <AmiBlitz3.ab3@7159> JMP do32
00024DCC <AmiBlitz3.ab3@7162> BRA illsizeerr
00024DF8 <AmiBlitz3.ab3@7165>   !fget                                                    ;bsr.w get1bytemain
00024DFE <AmiBlitz3.ab3@7168>   MOVE.w D1,asmsize
00024E00 <AmiBlitz3.ab3@7169>   MOVEQ.l #-$01,D3
00024E04 <AmiBlitz3.ab3@7170>    BSR.w reget
00024E08 <AmiBlitz3.ab3@7171>    BEQ.w JL_0_6200
00024E12 <AmiBlitz3.ab3@7172>   MOVE.l #ptr_parameterstore,asmbuff
00024E1C <AmiBlitz3.ab3@7174>    MOVE.w oldqflag,instringon
00024E22 <AmiBlitz3.ab3@7175>   MOVEA.l lastsourcepos,A5
00024E26 <AmiBlitz3.ab3@7176>    BSR.w JL_0_5DC2
00024E28 <AmiBlitz3.ab3@7177>   MOVE.l D4,D2                                             ;to src
00024E2A <AmiBlitz3.ab3@7178>   MOVE.l D5,D3
00024E34 <AmiBlitz3.ab3@7179>   MOVE.w asmlen2,asmlen
00024E36 <AmiBlitz3.ab3@7180>   MOVEQ.l #-$01,D5
00024E40 <AmiBlitz3.ab3@7181>   MOVE.w extraword,extraword2
00024E44 <AmiBlitz3.ab3@7182>   CMP.w #$2C,D0                                            ;','
00024E48 <AmiBlitz3.ab3@7183>    BNE.w JL_0_6200
00024E52 <AmiBlitz3.ab3@7184>   MOVE.l #namebuff2,asmbuff
00024E56 <AmiBlitz3.ab3@7185>    BSR.w JL_0_5DC2                                         ;dest
00024E58 <AmiBlitz3.ab3@7188>   MOVEA.l (A7)+,A0
00024E5E <AmiBlitz3.ab3@7189>   MOVEA.l destpointer,A1
00024E60 <AmiBlitz3.ab3@7190>   MOVEA.l A1,A4
00024E62 <AmiBlitz3.ab3@7191>   ADDQ.w #2,A1
00024E64 <AmiBlitz3.ab3@7192>   MOVE.w (A0),D1
00024E66 <AmiBlitz3.ab3@7193>   TST.w D3
00024E6A <AmiBlitz3.ab3@7194>    BMI.w JL_0_639E
00024E6E <AmiBlitz3.ab3@7195>   MOVE.w $E(A0),D0
00024E72 <AmiBlitz3.ab3@7196>    BPL.w JL_0_6264
00024E76 <AmiBlitz3.ab3@7197>   BTST #$0,D0
00024E7A <AmiBlitz3.ab3@7198>    BEQ.w JL_0_6240
00024E7E <AmiBlitz3.ab3@7199>   CMP.w #$1,D5
00024E82 <AmiBlitz3.ab3@7200>    BNE.w JL_0_6240
00024E86 <AmiBlitz3.ab3@7201>   CMP.w #$E,D3
00024E8A <AmiBlitz3.ab3@7202>    BEQ.w JL_0_6264
00024E90 <AmiBlitz3.ab3@7203>   MOVE.w temp1,D0
00024E92 <AmiBlitz3.ab3@7204>   ADDQ.w #4,D0
00024E96 <AmiBlitz3.ab3@7205> BRA.w JL_0_6256
00024E9A <AmiBlitz3.ab3@7208>   BTST #$1,D0
00024E9E <AmiBlitz3.ab3@7209>    BEQ.w JL_0_6264
00024EA2 <AmiBlitz3.ab3@7210>   CMP.w #$B,D3
00024EA6 <AmiBlitz3.ab3@7211>    BNE.w JL_0_6264
00024EAC <AmiBlitz3.ab3@7212>   MOVE.w temp1,D0
00024EAE <AmiBlitz3.ab3@7215>   ADDQ.w #4,D0
00024EB4 <AmiBlitz3.ab3@7216>   MOVEA.l #asmpnts,A0
00024EB8 <AmiBlitz3.ab3@7217>   MOVEA.l $0(A0,D0.W),A0
00024EBA <AmiBlitz3.ab3@7218>   MOVE.w (A0),D1
00024EC4 <AmiBlitz3.ab3@7221>   MOVE.l #ptr_parameterstore,buff1
00024ECE <AmiBlitz3.ab3@7222>   MOVE.l #namebuff2,buff2
00024ED2 <AmiBlitz3.ab3@7223>   MOVE.l $A(A0),D0
00024ED6 <AmiBlitz3.ab3@7224>    BEQ.w JL_0_62DC
00024ED8 <AmiBlitz3.ab3@7225>   MOVEA.l D0,A3
00024EDE <AmiBlitz3.ab3@7226>   MOVE.w asmsize,D6
00024EE0 <AmiBlitz3.ab3@7229>    JSR (A3)
00024EE4 <AmiBlitz3.ab3@7230>    BPL.w JL_0_629A
00024EE8 <AmiBlitz3.ab3@7231>   CMP.w #-$2,D0
00024EEC <AmiBlitz3.ab3@7232>    BEQ.w illsizeerr
00024EF0 <AmiBlitz3.ab3@7233> BRA.w illeaerr
00024EF4 <AmiBlitz3.ab3@7236>   BEQ.w JL_0_62DC
00024EF6 <AmiBlitz3.ab3@7237>   EXG.l D2,D4
00024EF8 <AmiBlitz3.ab3@7238>   EXG.l D3,D5
00024EFE <AmiBlitz3.ab3@7239>   MOVE.l extraword,D6
00024F00 <AmiBlitz3.ab3@7240>   SWAP D6
00024F06 <AmiBlitz3.ab3@7241>   MOVE.l D6,extraword
00024F10 <AmiBlitz3.ab3@7242>   MOVE.l #namebuff2,buff1
00024F1A <AmiBlitz3.ab3@7243>   MOVE.l #ptr_parameterstore,buff2
00024F20 <AmiBlitz3.ab3@7244>   MOVE.w asmlen,D6
00024F26 <AmiBlitz3.ab3@7245>   MOVE.w asmlen2,D7
00024F2C <AmiBlitz3.ab3@7246>   MOVE.w D6,asmlen2
00024F32 <AmiBlitz3.ab3@7247>   MOVE.w D7,asmlen
00024F3C <AmiBlitz3.ab3@7250>   MOVE.l buff1,asmbuff
00024F40 <AmiBlitz3.ab3@7251>   MOVE.w $E(A0),D0
00024F44 <AmiBlitz3.ab3@7252>    BEQ.w JL_0_6348
00024F48 <AmiBlitz3.ab3@7253>    BMI.w JL_0_6348
00024F4C <AmiBlitz3.ab3@7254>    CMP.w #$7000,d1
00024F50 <AmiBlitz3.ab3@7255>    BNE 'skip
00024F54 <AmiBlitz3.ab3@7256>    CMP.w #$b,d3
00024F58 <AmiBlitz3.ab3@7257>    BNE illeaerr
00024F5C <AmiBlitz3.ab3@7260>    CMP.w #$1,D0
00024F60 <AmiBlitz3.ab3@7261>    BNE.w JL_0_630E
00024F64 <AmiBlitz3.ab3@7262>    CMP.w #$B,D3
00024F68 <AmiBlitz3.ab3@7263>    BNE.w JL_0_6348
00024F6C <AmiBlitz3.ab3@7266>    BSR.w insasm
00024F6E <AmiBlitz3.ab3@7267>   MOVE.w D4,D2
00024F70 <AmiBlitz3.ab3@7268>   MOVE.w D5,D3
00024F74 <AmiBlitz3.ab3@7269> BRA.w JL_0_6364
00024F78 <AmiBlitz3.ab3@7272>    CMP.w #$2,D0
00024F7C <AmiBlitz3.ab3@7273>    BNE.w JL_0_6324
00024F80 <AmiBlitz3.ab3@7274>   CMP.w #$8,D3
00024F84 <AmiBlitz3.ab3@7275>    BNE.w illeaerr
00024F86 <AmiBlitz3.ab3@7276>   MOVEQ.l #$09,D3
00024F8A <AmiBlitz3.ab3@7277> BRA.w JL_0_6348
00024F8E <AmiBlitz3.ab3@7280>    CMP.w #$3,D0
00024F92 <AmiBlitz3.ab3@7281>    BEQ.w JL_0_6302
00024F96 <AmiBlitz3.ab3@7282>   CMP.w #$4,D0
00024F9A <AmiBlitz3.ab3@7283>    BEQ.w JL_0_6302
00024F9E <AmiBlitz3.ab3@7284>   CMP.w #$5,D0
00024FA2 <AmiBlitz3.ab3@7285>    BNE.w JL_0_6348
00024FA6 <AmiBlitz3.ab3@7286>   CMP.w #$8,D5
00024FAA <AmiBlitz3.ab3@7287>    BNE.w illeaerr
00024FAC <AmiBlitz3.ab3@7288>   OR.w D2,D1
00024FAE <AmiBlitz3.ab3@7289>   MOVEQ.l #$09,D5
00024FB2 <AmiBlitz3.ab3@7292>   MOVE.w $2(A0),D6
00024FB6 <AmiBlitz3.ab3@7293>   MOVE.b $6(A0),D7
00024FBA <AmiBlitz3.ab3@7294>   MOVEM.l D4-D5,-(A7)
00024FC0 <AmiBlitz3.ab3@7295>   MOVE.w extraword2,D4
00024FC4 <AmiBlitz3.ab3@7296>    BSR.w doea
00024FC8 <AmiBlitz3.ab3@7297>   MOVEM.l (A7)+,D2-D3
00024FCA <AmiBlitz3.ab3@7298>   TST.w D3
00024FCE <AmiBlitz3.ab3@7301>     BMI.w JL_0_6392
00024FD4 <AmiBlitz3.ab3@7302>   MOVE.w extraword,D4
00024FD8 <AmiBlitz3.ab3@7303>   MOVE.w $4(A0),D6
00024FDC <AmiBlitz3.ab3@7304>   MOVE.b $7(A0),D7
00024FE6 <AmiBlitz3.ab3@7305>   MOVE.l buff2,asmbuff
00024FF0 <AmiBlitz3.ab3@7306>   MOVE.w asmlen2,asmlen
00024FF4 <AmiBlitz3.ab3@7307>    BSR.w doea
00024FF8 <AmiBlitz3.ab3@7308> BRA.w JL_0_63AA
00024FFC <AmiBlitz3.ab3@7311>   MOVE.w $4(A0),D0
00025000 <AmiBlitz3.ab3@7312>    BNE.w illeaerr
00025004 <AmiBlitz3.ab3@7313> BRA.w JL_0_63AA
00025008 <AmiBlitz3.ab3@7317>   MOVE.w $2(A0),D0
0002500C <AmiBlitz3.ab3@7318>   OR.w $4(A0),D0
00025010 <AmiBlitz3.ab3@7319>    BNE.w illeaerr
00025014 <AmiBlitz3.ab3@7322>   MOVE.w $8(A0),D0
00025018 <AmiBlitz3.ab3@7323>   ANDI.w #$F000,D0
0002501C <AmiBlitz3.ab3@7324>   CMP.w #-$1000,D0
00025020 <AmiBlitz3.ab3@7325>    BEQ.w JL_0_63D2
00025022 <AmiBlitz3.ab3@7326>   LSR.w #8,D0
00025024 <AmiBlitz3.ab3@7327>   LSR.w #4,D0
00025028 <AmiBlitz3.ab3@7328>   MOVE.w $8(A0),D2
0002502E <AmiBlitz3.ab3@7329>   MOVE.w asmsize,D3
00025030 <AmiBlitz3.ab3@7330>   LSR.w D3,D2
00025034 <AmiBlitz3.ab3@7331>   ANDI.w #$F,D2
00025036 <AmiBlitz3.ab3@7332>   LSL.w D0,D2
00025038 <AmiBlitz3.ab3@7333>   OR.w D2,D1
0002503E <AmiBlitz3.ab3@7336>   CMPA.l destbufferend,A4
00025042 <AmiBlitz3.ab3@7337>    BCS.w JL_0_63E8
0002504A <AmiBlitz3.ab3@7339>   MOVE.w #$FFFF,dontwrite
0002504E <AmiBlitz3.ab3@7340> BRA.w JL_0_63EA
00025050 <AmiBlitz3.ab3@7343>   MOVE.w D1,(A4)
00025056 <AmiBlitz3.ab3@7346>   MOVE.l A1,destpointer
00025058 <AmiBlitz3.ab3@7347> RTS
0002505E <AmiBlitz3.ab3@7351>   MOVE.l destpointer,-(A7)
00025064 <AmiBlitz3.ab3@7352>   MOVE.l A1,destpointer
00025068 <AmiBlitz3.ab3@7353>    BSR.w addoff
0002506E <AmiBlitz3.ab3@7354>   MOVEA.l destpointer,A1
00025074 <AmiBlitz3.ab3@7355>   MOVE.l (A7)+,destpointer
00025076 <AmiBlitz3.ab3@7356> RTS
0002507A <AmiBlitz3.ab3@7360>   MOVEM.l d2-d6,-(a7)
00025080 <AmiBlitz3.ab3@7361>   JSR stripspaces
00025084 <AmiBlitz3.ab3@7362>   CMP.b #"d",(a5)+
00025088 <AmiBlitz3.ab3@7363>   BNE noreg
0002508A <AmiBlitz3.ab3@7364>   MOVE.b (a5)+,d0
0002508E <AmiBlitz3.ab3@7365>   CMP.b #$30,d0
00025092 <AmiBlitz3.ab3@7366>   BLT noreg
00025096 <AmiBlitz3.ab3@7367>   CMP.b #$37,d0
0002509A <AmiBlitz3.ab3@7368>   BGT noreg
0002509E <AmiBlitz3.ab3@7369>   SUB.b #$30,d0
000250A0 <AmiBlitz3.ab3@7370>   MOVEQ #0,d3
000250A2 <AmiBlitz3.ab3@7371>   MOVE.b d0,d3                                             ;reg1
000250A4 <AmiBlitz3.ab3@7372>   ASL.l #8,d3
000250A6 <AmiBlitz3.ab3@7373>   ASL.l #8,d3
000250AC <AmiBlitz3.ab3@7374>   JSR stripspaces
000250B0 <AmiBlitz3.ab3@7375>   CMP.b #",",(a5)+
000250B4 <AmiBlitz3.ab3@7376>   BNE noreg
000250BA <AmiBlitz3.ab3@7377>   JSR stripspaces
000250BE <AmiBlitz3.ab3@7378>   CMP.b #"d",(a5)+
000250C2 <AmiBlitz3.ab3@7379>   BNE noreg
000250C4 <AmiBlitz3.ab3@7380>   MOVE.b (a5)+,d0
000250C8 <AmiBlitz3.ab3@7381>   CMP.b #$30,d0
000250CC <AmiBlitz3.ab3@7382>   BLT noreg
000250D0 <AmiBlitz3.ab3@7383>   CMP.b #$37,d0
000250D4 <AmiBlitz3.ab3@7384>   BGT noreg
000250D8 <AmiBlitz3.ab3@7385>   SUB.b #$30,d0
000250DA <AmiBlitz3.ab3@7386>   MOVEQ #0,d4
000250DC <AmiBlitz3.ab3@7387>   MOVE.b d0,d4                                             ;reg2
000250DE <AmiBlitz3.ab3@7388>   ASL.l #8,d4
000250E0 <AmiBlitz3.ab3@7389>   ASL.l #4,d4
000250E2 <AmiBlitz3.ab3@7390>   OR.b d0,d1
000250E4 <AmiBlitz3.ab3@7391>   OR.l d3,d1
000250E6 <AmiBlitz3.ab3@7392>   OR.l d4,d1
000250EC <AmiBlitz3.ab3@7393>   JSR writelong
000250F0 <AmiBlitz3.ab3@7394>   MOVEM.l (a7)+,d2-d6
000250F4 <AmiBlitz3.ab3@7395>   MOVEM.l d1/a1-a3,-(a7)
000250F8 <AmiBlitz3.ab3@7396> BRA exit
000250FC <AmiBlitz3.ab3@7400>   MOVEM.l (a7)+,d2-d6
00025102 <AmiBlitz3.ab3@7401>   LEA errtext,a0
00025104 <AmiBlitz3.ab3@7402>   MOVE.l a0,-(a7)
0002510A <AmiBlitz3.ab3@7403> JMP handle_compileerror
00025110 <AmiBlitz3.ab3@7412>   MOVE.w dontwrite,D1
00025114 <AmiBlitz3.ab3@7413>    BNE.w asmfixer__done
0002511C <AmiBlitz3.ab3@7414>   BTST #$7,make_smallestcode
00025120 <AmiBlitz3.ab3@7415>    BEQ.w asmfixer__go
00025124 <AmiBlitz3.ab3@7416>   MOVE.w pass(PC),D1
00025128 <AmiBlitz3.ab3@7417>    BEQ.w asmfixer__done
0002512E <AmiBlitz3.ab3@7420>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025136 <AmiBlitz3.ab3@7421>   MOVE.b #1,curtemplabel
0002513E <AmiBlitz3.ab3@7422>   MOVE.w #$FFFF,constmode
00025144 <AmiBlitz3.ab3@7423>   CLR.w regnum
0002514E <AmiBlitz3.ab3@7424>           MOVE.l #forthstack,forthsp
00025158 <AmiBlitz3.ab3@7425>           MOVE.l #precstack,precsp
0002515C <AmiBlitz3.ab3@7426>    BSR.w prepstack
0002515E <AmiBlitz3.ab3@7429>   MOVE.l A2,-(A7)
00025162 <AmiBlitz3.ab3@7430>    BSR.w chkstop
00025164 <AmiBlitz3.ab3@7431>   MOVEA.l (A7)+,A2
00025168 <AmiBlitz3.ab3@7432>   CMPA.w #$0,A2
0002516C <AmiBlitz3.ab3@7433>    BEQ.w asmfixer__done2
00025172 <AmiBlitz3.ab3@7434>    CLR.b iee
00025178 <AmiBlitz3.ab3@7435>   MOVE.l A2,asmbuff
0002517C <AmiBlitz3.ab3@7436>   LEA $10(A2),A5
00025180 <AmiBlitz3.ab3@7437>   TST.b $F(A2)
00025184 <AmiBlitz3.ab3@7438>    BNE.w asmfixer__skipo
00025186 <AmiBlitz3.ab3@7439>   MOVEA.l (A5),A5                                          ;pointer to real text
0002518C <AmiBlitz3.ab3@7442>    CLR.w asmtype
00025190 <AmiBlitz3.ab3@7443>    CMP.b #".",(a5)
00025194 <AmiBlitz3.ab3@7444>    BNE.s asmfixer__skipo_l10
00025196 <AmiBlitz3.ab3@7445>    MOVE.l a2,-(a7)
00025198 <AmiBlitz3.ab3@7446>    ADDQ.l #1,a5
0002519E <AmiBlitz3.ab3@7447>    LEA newtypebase,a2
000251A2 <AmiBlitz3.ab3@7448>    BSR getparameter2
000251A6 <AmiBlitz3.ab3@7449>    BEQ.w syntaxerr
000251AA <AmiBlitz3.ab3@7450>    BSR findtype
000251AE <AmiBlitz3.ab3@7451>    BNE.w notypeerr
000251B2 <AmiBlitz3.ab3@7452>    LEA $4(a2),a2
000251B6 <AmiBlitz3.ab3@7453>    BSR getparameter2
000251BA <AmiBlitz3.ab3@7454>    BEQ.w syntaxerr
000251BE <AmiBlitz3.ab3@7455>    BSR.w findvariable2
000251C2 <AmiBlitz3.ab3@7456>    BNE.w notypeerr
000251C6 <AmiBlitz3.ab3@7457>    MOVE.w $4(a2),d3
000251C8 <AmiBlitz3.ab3@7458>    EXT.l d3
000251CC <AmiBlitz3.ab3@7459> BRA asmfixer__skipo_l30b
000251D0 <AmiBlitz3.ab3@7462>   CMP.b #"\",(a5)
000251D4 <AmiBlitz3.ab3@7463>     BNE asmfixer__skipo_l20
000251D6 <AmiBlitz3.ab3@7464>     ADDQ.l #1,a5
000251D8 <AmiBlitz3.ab3@7465>    MOVE.l a2,-(a7)
000251DA <AmiBlitz3.ab3@7466>    MOVE.l a5,a4
000251E0 <AmiBlitz3.ab3@7467>    LEA usedpath,a5
000251E4 <AmiBlitz3.ab3@7468>    CMP.b #"*",(a5)
000251E8 <AmiBlitz3.ab3@7469>    BNE asmfixer__skipo_lm1
000251EA <AmiBlitz3.ab3@7470>    ADDQ.l #1,a5
000251EE <AmiBlitz3.ab3@7473>    BSR.w getparameter2
000251F2 <AmiBlitz3.ab3@7474>    BEQ.w syntaxerr
000251F8 <AmiBlitz3.ab3@7475>    LEA varbase,A2
00025200 <AmiBlitz3.ab3@7476>    MOVE.b #1,newvariable
00025204 <AmiBlitz3.ab3@7477>    BSR.w findvariable
0002520A <AmiBlitz3.ab3@7478>    CLR.b newvariable
00025210 <AmiBlitz3.ab3@7479>    CMP.l #-1,d0
00025214 <AmiBlitz3.ab3@7480>    BEQ.w notypeerr
00025216 <AmiBlitz3.ab3@7481>    MOVE.l a4,a5
0002521A <AmiBlitz3.ab3@7482>    MOVE.l $a(a2),a2
0002521E <AmiBlitz3.ab3@7483>    LEA $4(a2),a2
00025222 <AmiBlitz3.ab3@7484>    BSR getparameter2
00025226 <AmiBlitz3.ab3@7485>    BEQ.w syntaxerr
0002522A <AmiBlitz3.ab3@7486>    BSR.w findvariable2
0002522E <AmiBlitz3.ab3@7487>    BNE.w notypeerr
00025232 <AmiBlitz3.ab3@7488>   MOVE.w $4(A2),D3
00025234 <AmiBlitz3.ab3@7489>   EXT.l D3
0002523A <AmiBlitz3.ab3@7492>    CMP.b #"[",-1(a5)
0002523E <AmiBlitz3.ab3@7493>    BNE asmfixer__skipo_l30c
00025240 <AmiBlitz3.ab3@7494>    MOVEQ #0,d0
00025242 <AmiBlitz3.ab3@7495>    MOVE.b (a5)+,d0
00025244 <AmiBlitz3.ab3@7496>    MOVE.l d3,-(a7)
00025246 <AmiBlitz3.ab3@7497>    MOVEQ #0,d3
0002524C <AmiBlitz3.ab3@7498>    JSR atoi
0002524E <AmiBlitz3.ab3@7499>    MOVE.l (a7)+,d1
00025252 <AmiBlitz3.ab3@7500>    MOVE.l $a(a2),a2
00025256 <AmiBlitz3.ab3@7501>    MOVE.w 8(a2),d0
00025258 <AmiBlitz3.ab3@7502>    MULS d0,d3
0002525A <AmiBlitz3.ab3@7503>    ADD.l d1,d3
0002525C <AmiBlitz3.ab3@7506>   MOVE.l (a7)+,a2
00025260 <AmiBlitz3.ab3@7507> BRA asmfixer__oko
00025266 <AmiBlitz3.ab3@7510>   CMP.w #$c,$8(a2)
0002526A <AmiBlitz3.ab3@7511>      BEQ asmfixer__skipo_lf1
00025270 <AmiBlitz3.ab3@7512>      CMP.w #$d,$8(a2)
00025274 <AmiBlitz3.ab3@7513>      BEQ asmfixer__skipo_lf1
0002527A <AmiBlitz3.ab3@7516>   JSR AJL_0_BF6E
00025280 <AmiBlitz3.ab3@7519>   MOVEA.l asmbuff,A2
00025284 <AmiBlitz3.ab3@7520>    BEQ.w asmfixer__oko
00025288 <AmiBlitz3.ab3@7521>   CMP.w #$28,D0
0002528C <AmiBlitz3.ab3@7522>    BEQ.w asmfixer__oko
00025290 <AmiBlitz3.ab3@7523>   CMP.w #$2C,D0
00025294 <AmiBlitz3.ab3@7524>    BEQ.w asmfixer__oko
00025298 <AmiBlitz3.ab3@7525> BRA.w syntaxerr
000252A0 <AmiBlitz3.ab3@7528>   MOVE.b #1,iee
000252A4 <AmiBlitz3.ab3@7529> BRA asmfixer__skipo_lf2
000252A8 <AmiBlitz3.ab3@7532>   MOVEA.l $4(A2),A1
000252AC <AmiBlitz3.ab3@7534>   MOVE.w $8(A2),D1                                         ;labelmode
000252B0 <AmiBlitz3.ab3@7535>   CMP.w #$5,D1
000252B4 <AmiBlitz3.ab3@7536>    BNE.w asmfixer__notdan
000252B8 <AmiBlitz3.ab3@7539>    BSR.w chkword                                         ;word
000252BA <AmiBlitz3.ab3@7542>   MOVE.w D3,(A1)
000252BE <AmiBlitz3.ab3@7543> BRA.w asmfixer__next
000252C2 <AmiBlitz3.ab3@7546>   CMP.w #$6,D1
000252C6 <AmiBlitz3.ab3@7547>    BNE.w asmfixer__notdanxi
000252CA <AmiBlitz3.ab3@7550>    BSR.w chkbyte                                         ;byte
000252CE <AmiBlitz3.ab3@7553>   MOVE.b D3,$1(A1)
000252D2 <AmiBlitz3.ab3@7554> BRA.w asmfixer__next
000252D6 <AmiBlitz3.ab3@7557>    CMP.w #$11,D1                                           ;byte
000252DA <AmiBlitz3.ab3@7558>    BEQ.w asmfixer__isbyte2
000252DE <AmiBlitz3.ab3@7559>    CMP.w #$c,d1
000252E2 <AmiBlitz3.ab3@7560>    BEQ asmfixer__single1
000252E6 <AmiBlitz3.ab3@7561>    CMP.w #$d,d1
000252EA <AmiBlitz3.ab3@7562>    BEQ asmfixer__double1
000252EE <AmiBlitz3.ab3@7563>   CMP.w #$7,D1
000252F2 <AmiBlitz3.ab3@7564>    BEQ.w asmfixer__word                                    ;word
000252F6 <AmiBlitz3.ab3@7565>   CMP.w #$8,D1
000252FA <AmiBlitz3.ab3@7566>    BNE.w asmfixer__notabsl
00025300 <AmiBlitz3.ab3@7569>   MOVE.w asmtype,D1                                        ;long
00025304 <AmiBlitz3.ab3@7570>    BEQ.w asmfixer__notpcrel
00025308 <AmiBlitz3.ab3@7571>      BSR.w asmoff
0002530A <AmiBlitz3.ab3@7574>   MOVE.l D3,(A1)
0002530E <AmiBlitz3.ab3@7575> BRA.w asmfixer__next
00025314 <AmiBlitz3.ab3@7579>   fmove.s fp0,0(a1)
00025318 <AmiBlitz3.ab3@7580> BRA.w asmfixer__next
0002531E <AmiBlitz3.ab3@7584>   fmove.d fp0,0(a1)
00025322 <AmiBlitz3.ab3@7585> BRA.w asmfixer__next
00025326 <AmiBlitz3.ab3@7589>   CMP.w #$9,D1
0002532A <AmiBlitz3.ab3@7590>    BNE.w asmfixer__notdpc
0002532C <AmiBlitz3.ab3@7591>   SUB.l A1,D3                                              ;branchword
00025330 <AmiBlitz3.ab3@7592>    BSR.w chkword
00025332 <AmiBlitz3.ab3@7593>   MOVE.w D3,(A1)
00025336 <AmiBlitz3.ab3@7594> BRA.w asmfixer__next
0002533A <AmiBlitz3.ab3@7598>   CMP.w #$A,D1
0002533E <AmiBlitz3.ab3@7599>    BNE.w asmfixer__imm
00025340 <AmiBlitz3.ab3@7600>   SUB.l A1,D3                                              ;branchbyte
00025344 <AmiBlitz3.ab3@7601> BRA.w asmfixer__isbyte
00025348 <AmiBlitz3.ab3@7605>   CMP.w #$11,d1
0002534C <AmiBlitz3.ab3@7606>   BLE asmfixer__imm_org
0002534E <AmiBlitz3.ab3@7607>   MOVE.l a3,-(a7)
00025354 <AmiBlitz3.ab3@7608>   LEA pluginbase,a3
00025358 <AmiBlitz3.ab3@7609>   MOVE.l 8(a2),a0
0002535A <AmiBlitz3.ab3@7610>   JSR (a0)                                                 ;hook
0002535C <AmiBlitz3.ab3@7611>   MOVE.l (a7)+,a3
00025360 <AmiBlitz3.ab3@7612> BRA asmfixer__next
00025364 <AmiBlitz3.ab3@7615>   MOVE.w $A(A2),D0
00025368 <AmiBlitz3.ab3@7616>    BEQ.w asmfixer__noflag
0002536C <AmiBlitz3.ab3@7617>   CMP.w #$1,D0
00025370 <AmiBlitz3.ab3@7618>    BEQ.w asmfixer__tocount
00025374 <AmiBlitz3.ab3@7619>   CMP.w #$3,D0
00025378 <AmiBlitz3.ab3@7620>    BEQ.w asmfixer__tomoveq
0002537C <AmiBlitz3.ab3@7621>   CMP.w #$4,D0
00025380 <AmiBlitz3.ab3@7622>    BEQ.w asmfixer__totrap
00025384 <AmiBlitz3.ab3@7625>   CMP.w #$B,D1                                             ;long
00025388 <AmiBlitz3.ab3@7626>    BEQ.w asmfixer__isabsl
0002538C <AmiBlitz3.ab3@7627> BRA asmfixer__word2                                              ;word
00025392 <AmiBlitz3.ab3@7630>   CMP.l #$F,D3
00025396 <AmiBlitz3.ab3@7631>    BHI.w illtraperr
00025398 <AmiBlitz3.ab3@7632>   OR.b D3,-(A1)
0002539C <AmiBlitz3.ab3@7633> BRA.w asmfixer__next
000253A2 <AmiBlitz3.ab3@7636>   CMP.l #$8,D3
000253A6 <AmiBlitz3.ab3@7637>    BHI.w illimmerr
000253A8 <AmiBlitz3.ab3@7638>   TST.l D3
000253AC <AmiBlitz3.ab3@7639>    BEQ.w illimmerr
000253B0 <AmiBlitz3.ab3@7640>   ANDI.w #$7,D3
000253B2 <AmiBlitz3.ab3@7641>   LSL.w #8,D3
000253B4 <AmiBlitz3.ab3@7642>   LSL.w #1,D3
000253B6 <AmiBlitz3.ab3@7643>   OR.w D3,-(A1)
000253BA <AmiBlitz3.ab3@7644> BRA.w asmfixer__next
000253BE <AmiBlitz3.ab3@7647>    BSR.w chkbyte
000253C0 <AmiBlitz3.ab3@7648>   MOVE.b D3,-(A1)
000253C2 <AmiBlitz3.ab3@7651>   MOVEA.l (A2),A2
000253C6 <AmiBlitz3.ab3@7652> BRA.w asmfixer__loop
000253CC <AmiBlitz3.ab3@7655>   CLR.w constmode
000253D2 <AmiBlitz3.ab3@7658>   CLR.b curtemplabel
000253D4 <AmiBlitz3.ab3@7659> RTS
000253D6 <AmiBlitz3.ab3@7668>   BTST D3,D6
000253DA <AmiBlitz3.ab3@7669>    BEQ.w illeaerr
000253DE <AmiBlitz3.ab3@7670>    BSR.w makemode
000253E2 <AmiBlitz3.ab3@7671>   CMP.w #$7,D3
000253E6 <AmiBlitz3.ab3@7672>    BCS.w doea__skip
000253E8 <AmiBlitz3.ab3@7673>   MOVE.w D3,D2
000253EA <AmiBlitz3.ab3@7674>   SUBQ.w #7,D2
000253EE <AmiBlitz3.ab3@7675>   CMP.w #$5,D2
000253F2 <AmiBlitz3.ab3@7676>    BCS.w doea__skip0
000253F4 <AmiBlitz3.ab3@7677>   MOVEQ.l #$04,D2
000253F6 <AmiBlitz3.ab3@7680>   MOVEQ.l #$07,D3
000253F8 <AmiBlitz3.ab3@7683>   MOVE.b D7,D0
000253FC <AmiBlitz3.ab3@7684>   ANDI.w #$F,D0
00025400 <AmiBlitz3.ab3@7685>   CMP.w #$F,D0
00025404 <AmiBlitz3.ab3@7686>    BEQ.w doea__skip2
00025406 <AmiBlitz3.ab3@7687>   LSL.w D0,D3
00025408 <AmiBlitz3.ab3@7688>   OR.w D3,D1
0002540A <AmiBlitz3.ab3@7691>   LSR.w #4,D7
0002540E <AmiBlitz3.ab3@7692>   ANDI.w #$F,D7
00025412 <AmiBlitz3.ab3@7693>   CMP.w #$F,D7
00025416 <AmiBlitz3.ab3@7694>    BEQ.w doea__skip3
00025418 <AmiBlitz3.ab3@7695>   LSL.w D7,D2
0002541A <AmiBlitz3.ab3@7696>   OR.w D2,D1
0002541C <AmiBlitz3.ab3@7699> RTS
00025422 <AmiBlitz3.ab3@7703>   CMP.l #$7F,D3
00025426 <AmiBlitz3.ab3@7704>    BGT.w illdiserr
0002542C <AmiBlitz3.ab3@7705>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025430 <AmiBlitz3.ab3@7706>    BLT.w illdiserr
00025432 <AmiBlitz3.ab3@7707> RTS
00025438 <AmiBlitz3.ab3@7711>   CMP.l #$7fff,D3
0002543C <AmiBlitz3.ab3@7712>    BGT.w illdiserr
00025442 <AmiBlitz3.ab3@7713>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025446 <AmiBlitz3.ab3@7714>    BLT.w illdiserr
00025448 <AmiBlitz3.ab3@7715> RTS
0002544A <AmiBlitz3.ab3@7720>   MOVE.b (a5)+,d0
0002544C <AmiBlitz3.ab3@7721>   CMP.b d1,d0
00025450 <AmiBlitz3.ab3@7722>   BEQ 'll10
00025452 <AmiBlitz3.ab3@7723>   TST.b d0
00025456 <AmiBlitz3.ab3@7724>   BNE 'll20
00025458 <AmiBlitz3.ab3@7727>   SUBQ #1,a5
0002545A <AmiBlitz3.ab3@7728> RTS
0002545C <AmiBlitz3.ab3@7733>   MOVE.b (a5)+,d0
00025460 <AmiBlitz3.ab3@7734>   CMP.b #",",d0
00025464 <AmiBlitz3.ab3@7735>   BEQ 'll10
00025468 <AmiBlitz3.ab3@7736>   CMP.b #";",d0
0002546C <AmiBlitz3.ab3@7737>   BEQ 'll10
00025470 <AmiBlitz3.ab3@7738>  CMP.b #":",d0
00025474 <AmiBlitz3.ab3@7739>   BEQ 'll10
00025476 <AmiBlitz3.ab3@7742>   TST.b d0
0002547A <AmiBlitz3.ab3@7743>   BNE 'll20
0002547C <AmiBlitz3.ab3@7746>   SUBQ #1,a5
0002547E <AmiBlitz3.ab3@7747> RTS
00025480 <AmiBlitz3.ab3@7751>   ADD.l a2,d1
00025486 <AmiBlitz3.ab3@7752>   LEA tempspace,a1
00025488 <AmiBlitz3.ab3@7753>   MOVE.l d1,a0
0002548A <AmiBlitz3.ab3@7756>   MOVE.b (a0)+,(a1)+
0002548E <AmiBlitz3.ab3@7757>   BNE.s 'l10
00025490 <AmiBlitz3.ab3@7758>   SUBQ.l #1,a0
00025492 <AmiBlitz3.ab3@7759>   SUBQ.l #1,a1
00025494 <AmiBlitz3.ab3@7762>   MOVE.b (a5)+,(a1)+
00025498 <AmiBlitz3.ab3@7763>   BNE.s 'l20
0002549A <AmiBlitz3.ab3@7764>   CLR.b (a1)
000254A0 <AmiBlitz3.ab3@7765>   LEA tempspace,a5
000254A2 <AmiBlitz3.ab3@7766> RTS
000254A6 <AmiBlitz3.ab3@7770>   MOVEM.l D1-D2/A0,-(A7)
000254A8 <AmiBlitz3.ab3@7771>   MOVE.l d0,d2
000254AA <AmiBlitz3.ab3@7772>   MOVEQ #0,d1
000254AC <AmiBlitz3.ab3@7773>   MOVE.l a5,a4
000254AE <AmiBlitz3.ab3@7776>   ADDQ.l #1,d1
000254B0 <AmiBlitz3.ab3@7777>   MOVE.b (a5)+,d0
000254B4 <AmiBlitz3.ab3@7778>   CMP.b #",",d0
000254B8 <AmiBlitz3.ab3@7779>   BEQ 'll10
000254BC <AmiBlitz3.ab3@7780>   CMP.b #";",d0
000254C0 <AmiBlitz3.ab3@7781>   BEQ 'll10
000254C4 <AmiBlitz3.ab3@7782>   CMP.b #":",d0
000254C8 <AmiBlitz3.ab3@7783>   BEQ 'll10
000254CC <AmiBlitz3.ab3@7784>   CMP.b #"(",d0
000254D0 <AmiBlitz3.ab3@7785>   BEQ 'll10
000254D2 <AmiBlitz3.ab3@7786>   TST.b d0
000254D6 <AmiBlitz3.ab3@7787>   BNE 'll20
000254D8 <AmiBlitz3.ab3@7790>   SUBQ #1,a5
000254DC <AmiBlitz3.ab3@7791>   CMP.b #"'",(a4)
000254E0 <AmiBlitz3.ab3@7792>   BEQ 'llocal
000254E6 <AmiBlitz3.ab3@7793>   TST.w inmacro
000254EA <AmiBlitz3.ab3@7794>   BNE 'lmacro
000254EC <AmiBlitz3.ab3@7795>   MOVEQ.l #$14+4,D0
000254EE <AmiBlitz3.ab3@7796>   ADD.l d1,d0
000254F0 <AmiBlitz3.ab3@7797>   MOVE.l d1,-(a7)
000254F2 <AmiBlitz3.ab3@7798>   MOVEQ.l #$01,D1
000254F8 <AmiBlitz3.ab3@7799>   MOVEA.l _execbase,A6
000254FE <AmiBlitz3.ab3@7800>   MOVE.l mempool2,a0
00025502 <AmiBlitz3.ab3@7801>   JSR _AllocPooled(a6)
00025504 <AmiBlitz3.ab3@7803>   MOVE.l (a7)+,d1
00025506 <AmiBlitz3.ab3@7804>   TST.l d0
0002550A <AmiBlitz3.ab3@7805>   BEQ nomemory
0002550C <AmiBlitz3.ab3@7806>   MOVEA.l D0,A0
00025514 <AmiBlitz3.ab3@7808>   MOVE.w linenumat+2,$A(A0)
0002551A <AmiBlitz3.ab3@7810>   MOVE.l templabel,(A0)
00025520 <AmiBlitz3.ab3@7811>   MOVE.l A0,templabel
00025528 <AmiBlitz3.ab3@7812>   MOVE.l destpointer,$4(A0)
0002552C <AmiBlitz3.ab3@7813>   MOVE.l d2,$8(A0)
00025530 <AmiBlitz3.ab3@7814>   LEA $E(A0),A0
00025534 <AmiBlitz3.ab3@7815>   MOVE.b #$14,(A0)+
00025536 <AmiBlitz3.ab3@7816>   CLR.b (a0)+
00025538 <AmiBlitz3.ab3@7818>   MOVE.l a0,d2
0002553A <AmiBlitz3.ab3@7819>   ADDQ.l #4,d2
0002553C <AmiBlitz3.ab3@7820>   MOVE.l d2,(a0)+
0002553E <AmiBlitz3.ab3@7823>   MOVE.b (a4)+,(a0)+
00025540 <AmiBlitz3.ab3@7824>   SUBQ.l #1,d1
00025544 <AmiBlitz3.ab3@7825>   BNE 'lc1
00025546 <AmiBlitz3.ab3@7826>   CLR.b (a0)+
0002554C <AmiBlitz3.ab3@7827>   MOVE.w linenumat,(a0)
00025550 <AmiBlitz3.ab3@7828>   MOVEM.l (A7)+,D1-D2/A0
00025552 <AmiBlitz3.ab3@7829> RTS
00025554 <AmiBlitz3.ab3@7832>   MOVEQ.l #$10+2,D0
00025556 <AmiBlitz3.ab3@7833>   ADD.l d1,d0
0002555A <AmiBlitz3.ab3@7834>   MOVEM.l a4/d3,-(a7)
0002555C <AmiBlitz3.ab3@7835>   MOVE.l d1,d3
0002555E <AmiBlitz3.ab3@7836>   MOVEQ.l #$01,D1
00025564 <AmiBlitz3.ab3@7837>   MOVEA.l _execbase,A6
0002556A <AmiBlitz3.ab3@7838>   MOVE.l mempool2,a0
0002556E <AmiBlitz3.ab3@7839>   JSR _AllocPooled(a6)
00025570 <AmiBlitz3.ab3@7841>   TST.l d0
00025574 <AmiBlitz3.ab3@7842>   BEQ nomemory
00025576 <AmiBlitz3.ab3@7843>   MOVEA.l D0,A0
0002557E <AmiBlitz3.ab3@7846>   MOVE.w linenumat+2,$C(A0)
00025584 <AmiBlitz3.ab3@7847>   MOVE.l templabel,(A0)
0002558A <AmiBlitz3.ab3@7848>   MOVE.l A0,templabel
00025592 <AmiBlitz3.ab3@7849>   MOVE.l destpointer,$4(A0)
00025596 <AmiBlitz3.ab3@7850>   MOVE.l d2,$8(A0)
0002559A <AmiBlitz3.ab3@7851>   LEA $E(A0),A0
0002559C <AmiBlitz3.ab3@7852>   MOVE.b d3,(A0)+
000255A2 <AmiBlitz3.ab3@7853>   ADD.b #$10,-1(a0)
000255A6 <AmiBlitz3.ab3@7854>   MOVE.b #$1,(a0)+
000255A8 <AmiBlitz3.ab3@7855>   SUBQ.w #1,d3
000255AA <AmiBlitz3.ab3@7858>   MOVE.b (a4)+,(a0)+
000255AC <AmiBlitz3.ab3@7859>   SUBQ.l #1,d3
000255B0 <AmiBlitz3.ab3@7860>   BNE.s 'lm2
000255B2 <AmiBlitz3.ab3@7861>   CLR.b (a0)+
000255B8 <AmiBlitz3.ab3@7862>   MOVE.w linenumat,(a0)
000255BC <AmiBlitz3.ab3@7863>   MOVEM.l (a7)+,d3/a4
000255C0 <AmiBlitz3.ab3@7864>   MOVEM.l (A7)+,D1-D2/A0
000255C2 <AmiBlitz3.ab3@7865> RTS
000255C8 <AmiBlitz3.ab3@7868>   LEA lastgloballabel,a1
000255CA <AmiBlitz3.ab3@7871>   ADDQ.l #1,d1
000255CC <AmiBlitz3.ab3@7872>   TST.b (a1)+
000255D0 <AmiBlitz3.ab3@7873>   BNE.s 'll11
000255D2 <AmiBlitz3.ab3@7874>   MOVEQ.l #$10+2,D0
000255D4 <AmiBlitz3.ab3@7875>   ADD.l d1,d0
000255D8 <AmiBlitz3.ab3@7876>   MOVEM.l a4/d3,-(a7)
000255DA <AmiBlitz3.ab3@7877>   MOVE.l d1,d3
000255DC <AmiBlitz3.ab3@7878>   MOVEQ.l #$01,D1
000255E2 <AmiBlitz3.ab3@7879>   MOVEA.l _execbase,A6
000255E8 <AmiBlitz3.ab3@7880>   MOVE.l mempool2,a0
000255EC <AmiBlitz3.ab3@7881>   JSR _AllocPooled(a6)
000255EE <AmiBlitz3.ab3@7883>   TST.l d0
000255F2 <AmiBlitz3.ab3@7884>   BEQ nomemory
000255F4 <AmiBlitz3.ab3@7885>   MOVEA.l D0,A0
000255FC <AmiBlitz3.ab3@7888>   MOVE.w linenumat+2,$C(A0)
00025602 <AmiBlitz3.ab3@7889>   MOVE.l templabel,(A0)
00025608 <AmiBlitz3.ab3@7890>   MOVE.l A0,templabel
00025610 <AmiBlitz3.ab3@7891>   MOVE.l destpointer,$4(A0)
00025614 <AmiBlitz3.ab3@7892>   MOVE.l d2,$8(A0)
00025618 <AmiBlitz3.ab3@7893>   LEA $E(A0),A0
0002561A <AmiBlitz3.ab3@7894>   MOVE.b d3,(A0)+
00025620 <AmiBlitz3.ab3@7895>   ADD.b #$10,-1(a0)
00025624 <AmiBlitz3.ab3@7896>   MOVE.b #$1,(a0)+
00025626 <AmiBlitz3.ab3@7897>   SUBQ.w #1,d3
0002562C <AmiBlitz3.ab3@7898>   LEA lastgloballabel,a1
0002562E <AmiBlitz3.ab3@7901>   SUBQ.l #1,d3
00025630 <AmiBlitz3.ab3@7902>   MOVE.b (a1)+,(a0)+
00025634 <AmiBlitz3.ab3@7903>   BNE.s 'lm3
00025636 <AmiBlitz3.ab3@7904>   SUBQ.l #1,a0
00025638 <AmiBlitz3.ab3@7907>   MOVE.b (a4)+,(a0)+
0002563A <AmiBlitz3.ab3@7908>   SUBQ.l #1,d3
0002563E <AmiBlitz3.ab3@7909>   BNE.s 'lm1
00025640 <AmiBlitz3.ab3@7910>   CLR.b (a0)+
00025646 <AmiBlitz3.ab3@7911>   MOVE.w linenumat,(a0)
0002564A <AmiBlitz3.ab3@7912>   MOVEM.l (a7)+,d3/a4
0002564E <AmiBlitz3.ab3@7913>   MOVEM.l (A7)+,D1-D2/A0
00025650 <AmiBlitz3.ab3@7914> RTS
0002567A <AmiBlitz3.ab3@7918>   !basic
000256DC <AmiBlitz3.ab3@7919>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
000256EE <AmiBlitz3.ab3@7920>   loop Delay_ 1
000256F4 <AmiBlitz3.ab3@7921> Goto loop
000256F8 <AmiBlitz3.ab3@7925>   MOVEM.l D0-D2/A0,-(A7)
000256FC <AmiBlitz3.ab3@7926>   MOVE.w $E(A0),-(A7)
00025700 <AmiBlitz3.ab3@7927>    BPL.w insasm__ok
00025702 <AmiBlitz3.ab3@7928>   CLR.w (A7)
00025704 <AmiBlitz3.ab3@7931>   MOVE.l A1,-(A7)
00025706 <AmiBlitz3.ab3@7932>   MOVEQ.l #$10+2,D0
0002570C <AmiBlitz3.ab3@7933>   ADD.w asmlen,D0
0002570E <AmiBlitz3.ab3@7934>   MOVE.w D0,D2
00025710 <AmiBlitz3.ab3@7935>   MOVEQ.l #$01,D1
00025716 <AmiBlitz3.ab3@7936>   MOVEA.l _execbase,A6
0002571C <AmiBlitz3.ab3@7937>   MOVE.l mempool2,a0
00025720 <AmiBlitz3.ab3@7938>   JSR _AllocPooled(a6)
00025722 <AmiBlitz3.ab3@7940>   MOVEA.l D0,A0
0002572A <AmiBlitz3.ab3@7943>   MOVE.w linenumat+2,$C(A0)
00025730 <AmiBlitz3.ab3@7944>   MOVE.l templabel,(A0)
00025736 <AmiBlitz3.ab3@7945>   MOVE.l A0,templabel
0002573A <AmiBlitz3.ab3@7946>   MOVE.l (A7),$4(A0)
0002573E <AmiBlitz3.ab3@7947>   MOVE.w d3,$8(A0)
00025744 <AmiBlitz3.ab3@7948>   MOVE.w $4(A7),$A(A0)
00025748 <AmiBlitz3.ab3@7949>   LEA $E(A0),A0
0002574A <AmiBlitz3.ab3@7950>   MOVE.b D2,(A0)+                                           ;length
00025750 <AmiBlitz3.ab3@7951>   MOVEA.l asmbuff,A1
00025752 <AmiBlitz3.ab3@7952>   ADDQ.w #1,A1
00025754 <AmiBlitz3.ab3@7953>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025758 <AmiBlitz3.ab3@7954>    BNE.w insasm__loop
0002575A <AmiBlitz3.ab3@7955>   MOVE.l (A1)+,(A0)+
00025760 <AmiBlitz3.ab3@7956>   MOVE.w linenumat,(a0)
00025764 <AmiBlitz3.ab3@7957> BRA.w insasm__loopdone
00025766 <AmiBlitz3.ab3@7960>    MOVE.b (A1)+,(A0)+
0002576A <AmiBlitz3.ab3@7961>    BNE.w insasm__loop
00025770 <AmiBlitz3.ab3@7962>    MOVE.w linenumat,(a0)
00025772 <AmiBlitz3.ab3@7965>   MOVEA.l (A7)+,A1
00025774 <AmiBlitz3.ab3@7966>   ADDQ.w #2,A7
00025778 <AmiBlitz3.ab3@7967>   MOVEM.l (A7)+,D0-D2/A0
0002577A <AmiBlitz3.ab3@7968> RTS
0002577E <AmiBlitz3.ab3@7972>   CMP.w #$5,D3
00025782 <AmiBlitz3.ab3@7973>    BCS.w makemode__done
00025786 <AmiBlitz3.ab3@7974>   CMP.w #$B,D3
0002578A <AmiBlitz3.ab3@7975>    BHI.w makemode__done2
0002578E <AmiBlitz3.ab3@7976>    BEQ.w makemode__imm
00025792 <AmiBlitz3.ab3@7977>    BSR.w insasm
00025796 <AmiBlitz3.ab3@7978>   CMP.w #$5,D3
0002579A <AmiBlitz3.ab3@7979>    BEQ.w makemode__word
0002579E <AmiBlitz3.ab3@7980>   CMP.w #$6,D3
000257A2 <AmiBlitz3.ab3@7981>    BEQ.w makemode__dxi
000257A6 <AmiBlitz3.ab3@7982>   CMP.w #$7,D3
000257AA <AmiBlitz3.ab3@7983>    BEQ.w makemode__word
000257AE <AmiBlitz3.ab3@7984>   CMP.w #$8,D3
000257B2 <AmiBlitz3.ab3@7985>    BEQ.w makemode__long
000257B6 <AmiBlitz3.ab3@7986>   CMP.w #$9,D3
000257BA <AmiBlitz3.ab3@7987>    BEQ.w makemode__word
000257C0 <AmiBlitz3.ab3@7991>   CMPA.l destbufferend,A1
000257C4 <AmiBlitz3.ab3@7992>    BCS.w makemode__ok7
000257C6 <AmiBlitz3.ab3@7993>   ADDQ.w #2,A1
000257C8 <AmiBlitz3.ab3@7994> RTS
000257CA <AmiBlitz3.ab3@7997>   MOVE.w D4,(A1)+
000257CC <AmiBlitz3.ab3@7998> RTS
000257D4 <AmiBlitz3.ab3@8001>   CMPI.w #$8,asmsize
000257D8 <AmiBlitz3.ab3@8002>    BCC.w makemode__immlong
000257DA <AmiBlitz3.ab3@8003>   MOVEQ.l #$10,D3
000257DE <AmiBlitz3.ab3@8004>    BSR.w insasm
000257E0 <AmiBlitz3.ab3@8005>   MOVEQ.l #$0B,D3
000257E4 <AmiBlitz3.ab3@8006> BRA.w makemode__word
000257E8 <AmiBlitz3.ab3@8009>   BSR.w insasm
000257EA <AmiBlitz3.ab3@8012>   ADDQ.w #2,A1
000257EC <AmiBlitz3.ab3@8015>   ADDQ.w #2,A1
000257EE <AmiBlitz3.ab3@8016> RTS
000257F2 <AmiBlitz3.ab3@8019>   CMP.w #$F,D3
000257F6 <AmiBlitz3.ab3@8020>    BNE.w makemode__done
000257FC <AmiBlitz3.ab3@8021>   CMPA.l destbufferend,A1
00025800 <AmiBlitz3.ab3@8022>    BCS.w makemode__ok3
00025802 <AmiBlitz3.ab3@8023>   ADDQ.w #2,A1
00025804 <AmiBlitz3.ab3@8024>   ADDQ.w #4,A7
00025806 <AmiBlitz3.ab3@8025> RTS
00025808 <AmiBlitz3.ab3@8028>   MOVE.w D2,(A1)+
0002580A <AmiBlitz3.ab3@8029>   ADDQ.w #4,A7
0002580C <AmiBlitz3.ab3@8032> RTS
00025810 <AmiBlitz3.ab3@8036>   BSR.w storeloc
0002581A <AmiBlitz3.ab3@8037>   MOVE.l linenumat,oldline
0002581C <AmiBlitz3.ab3@8038>   MOVEQ.l #$00,D1
00025820 <AmiBlitz3.ab3@8039>    BSR.w get1bytemain
00025824 <AmiBlitz3.ab3@8040>    BEQ.w JL_0_676E
00025826 <AmiBlitz3.ab3@8041>   MOVEQ.l #$00,D3
0002582A <AmiBlitz3.ab3@8042> BRA.w JL_0_6726
0002582E <AmiBlitz3.ab3@8045>    BSR.w get1bytemain
00025832 <AmiBlitz3.ab3@8046>    BNE.w JL_0_671C
00025834 <AmiBlitz3.ab3@8049>   TST.w D3
00025838 <AmiBlitz3.ab3@8050>    BNE.w brackets_                                         ;syntax error brackets
0002583C <AmiBlitz3.ab3@8051> BRA.w JL_0_676C
00025842 <AmiBlitz3.ab3@8054>    MOVE.w instringon,D4
00025846 <AmiBlitz3.ab3@8056>      BEQ JL_0_6726
00025848 <AmiBlitz3.ab3@8059>     MOVEQ #0,d0
0002584A <AmiBlitz3.ab3@8060>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025850 <AmiBlitz3.ab3@8061>      MOVE.w d0,lastchar
00025854 <AmiBlitz3.ab3@8062>      BEQ ready
00025858 <AmiBlitz3.ab3@8063>      CMP.b #$22,d0
0002585C <AmiBlitz3.ab3@8064>      BNE 'l1
00025862 <AmiBlitz3.ab3@8065>      NOT.w instringon
00025866 <AmiBlitz3.ab3@8066> BRA JL_0_670A
0002586A <AmiBlitz3.ab3@8069>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002586E <AmiBlitz3.ab3@8070>            BNE 'l10
00025872 <AmiBlitz3.ab3@8071>            CMP.b #"@",(a5)
00025876 <AmiBlitz3.ab3@8072>            BNE 'l10
0002587C <AmiBlitz3.ab3@8075>            TST.w ininclude
00025880 <AmiBlitz3.ab3@8076>            BNE 'inc
00025886 <AmiBlitz3.ab3@8077>            MOVE.l sourceline3,a5
0002588C <AmiBlitz3.ab3@8078>            CMP.l #0,a5
00025890 <AmiBlitz3.ab3@8079>            BNE 'l11t
00025896 <AmiBlitz3.ab3@8080>            MOVEA.l sourceline,A5
00025898 <AmiBlitz3.ab3@8083>            MOVEA.l (A5),A5
0002589E <AmiBlitz3.ab3@8084>            CMP.l #0,a5
000258A2 <AmiBlitz3.ab3@8085>            BEQ JL_0_676C
000258A8 <AmiBlitz3.ab3@8086>            MOVE.l a5,sourceline3
000258AC <AmiBlitz3.ab3@8087>            LEA $9(A5),A5
000258B0 <AmiBlitz3.ab3@8088> BRA 'l11
000258B2 <AmiBlitz3.ab3@8091>            ADDQ.l #1,a5
000258B4 <AmiBlitz3.ab3@8092>            TST.b (a5)
000258B8 <AmiBlitz3.ab3@8093>            BNE 'inc
000258BA <AmiBlitz3.ab3@8097>            ADDQ.l #1,a5
000258BC <AmiBlitz3.ab3@8098>            TST.b (a5)
000258C0 <AmiBlitz3.ab3@8099>            BEQ illeolerr
000258C2 <AmiBlitz3.ab3@8100>            MOVE.l a5,-(a7)
000258C6 <AmiBlitz3.ab3@8103>       CMP.b #" ",(a5)+
000258CA <AmiBlitz3.ab3@8104>       BEQ 'l110
000258D0 <AmiBlitz3.ab3@8105>        CMP.b #";",-1(a5)
000258D2 <AmiBlitz3.ab3@8106>        MOVE.l (a7)+,a5
000258D6 <AmiBlitz3.ab3@8107>        BEQ 'l111
000258DA <AmiBlitz3.ab3@8108> BRA JL_0_670A
000258DE <AmiBlitz3.ab3@8111>    CMP.w #$29,D0
000258E2 <AmiBlitz3.ab3@8112>    BNE.w JL_0_673A
000258E4 <AmiBlitz3.ab3@8113>   TST.w D3
000258E8 <AmiBlitz3.ab3@8114>    BEQ.w JL_0_676C
000258EA <AmiBlitz3.ab3@8117>   SUBQ.w #1,D3
000258EE <AmiBlitz3.ab3@8118> BRA.w JL_0_670A
000258F2 <AmiBlitz3.ab3@8121>    CMP.w #$7D,D0
000258F6 <AmiBlitz3.ab3@8122>    BEQ.w JL_0_6734
000258FA <AmiBlitz3.ab3@8123>   CMP.w #$28,D0
000258FE <AmiBlitz3.ab3@8124>    BNE.w JL_0_6750
00025900 <AmiBlitz3.ab3@8127>    ADDQ.w #1,D3
00025904 <AmiBlitz3.ab3@8128> BRA.w JL_0_670A
00025908 <AmiBlitz3.ab3@8131>   CMP.w #$7B,D0
0002590C <AmiBlitz3.ab3@8132>    BEQ.w JL_0_674A
00025910 <AmiBlitz3.ab3@8133>   CMP.w #$2C,D0
00025914 <AmiBlitz3.ab3@8134>    BNE.w JL_0_670A
00025916 <AmiBlitz3.ab3@8135>   TST.w D3
0002591A <AmiBlitz3.ab3@8136>    BNE.w JL_0_670A
0002591C <AmiBlitz3.ab3@8137>   ADDQ.w #1,D1
00025920 <AmiBlitz3.ab3@8138> BRA.w JL_0_670A
00025922 <AmiBlitz3.ab3@8141>   ADDQ.w #1,D1
00025928 <AmiBlitz3.ab3@8144>   CLR.l sourceline3
00025932 <AmiBlitz3.ab3@8145>   MOVE.l oldline,linenumat
00025936 <AmiBlitz3.ab3@8146> BRA.w resloc
0002593C <AmiBlitz3.ab3@8150>    CLR.w numreps
0002593E <AmiBlitz3.ab3@8151>   MOVE.w D1,D0
00025942 <AmiBlitz3.ab3@8152>   ANDI.w #$FF00,D0
00025946 <AmiBlitz3.ab3@8153>    BEQ.w fetchlibps__noreps
00025948 <AmiBlitz3.ab3@8154>   LSR.w #8,D0
0002594A <AmiBlitz3.ab3@8155>   LSR.w #4,D0
0002594E <AmiBlitz3.ab3@8156>    BEQ.w fetchlibps__skip
00025950 <AmiBlitz3.ab3@8157>   SUB.b D0,D1
0002595A <AmiBlitz3.ab3@8158>    MOVE.w regnum,regnumfunc
00025960 <AmiBlitz3.ab3@8159>    MOVE.b funcparloop,-(a7)
00025968 <AmiBlitz3.ab3@8160>    MOVE.b #0,funcparloop
0002596E <AmiBlitz3.ab3@8161>    MOVE.l leftsidetype,-(a7)
00025974 <AmiBlitz3.ab3@8162>    MOVE.l rightsidetype,-(a7)
0002597A <AmiBlitz3.ab3@8163>    CLR.l leftsidetype
00025980 <AmiBlitz3.ab3@8164>    CLR.l rightsidetype
00025986 <AmiBlitz3.ab3@8165>    MOVE.b blitzparloop,-(a7)
0002598E <AmiBlitz3.ab3@8166>    MOVE.b #1,blitzparloop
00025992 <AmiBlitz3.ab3@8167>    BSR.w fetchpees2
00025998 <AmiBlitz3.ab3@8168>    MOVE.b (a7)+,blitzparloop
0002599E <AmiBlitz3.ab3@8169>    MOVE.l (a7)+,rightsidetype
000259A4 <AmiBlitz3.ab3@8170>    MOVE.l (a7)+,leftsidetype
000259AA <AmiBlitz3.ab3@8171>    MOVE.b (a7)+,funcparloop
000259AE <AmiBlitz3.ab3@8172>   CMP.w #$2C,D0
000259B2 <AmiBlitz3.ab3@8173>    BNE.w syntaxerr
000259B4 <AmiBlitz3.ab3@8176>   MOVE.w D1,D2
000259B6 <AmiBlitz3.ab3@8177>   LSR.w #8,D2
000259BA <AmiBlitz3.ab3@8178>   ANDI.w #$7,D2
000259BC <AmiBlitz3.ab3@8181>    CMP.b D2,D1
000259C0 <AmiBlitz3.ab3@8182>    BCS.w fetchlibps__repsdone
000259C2 <AmiBlitz3.ab3@8183>   SUB.b D2,D1
000259C6 <AmiBlitz3.ab3@8184>   MOVEM.l D2/A2,-(A7)
000259C8 <AmiBlitz3.ab3@8185>   MOVE.w D2,D0
000259CE <AmiBlitz3.ab3@8186>   MOVE.b funcparloop,-(a7)
000259D6 <AmiBlitz3.ab3@8187>   MOVE.b #0,funcparloop
000259DC <AmiBlitz3.ab3@8188>   MOVE.l leftsidetype,-(a7)
000259E2 <AmiBlitz3.ab3@8189>   MOVE.l rightsidetype,-(a7)
000259E8 <AmiBlitz3.ab3@8190>   CLR.l leftsidetype
000259EE <AmiBlitz3.ab3@8191>   CLR.l rightsidetype
000259F4 <AmiBlitz3.ab3@8192>   MOVE.b blitzparloop,-(a7)
000259FC <AmiBlitz3.ab3@8193>   MOVE.b #1,blitzparloop
00025A00 <AmiBlitz3.ab3@8194>   BSR.w fetchpees4
00025A06 <AmiBlitz3.ab3@8195>   MOVE.b (a7)+,blitzparloop
00025A0C <AmiBlitz3.ab3@8196>   MOVE.l (a7)+,rightsidetype
00025A12 <AmiBlitz3.ab3@8197>   MOVE.l (a7)+,leftsidetype
00025A18 <AmiBlitz3.ab3@8198>   MOVE.b (a7)+,funcparloop
00025A1C <AmiBlitz3.ab3@8199>   MOVEM.l (A7)+,D2/A2
00025A22 <AmiBlitz3.ab3@8200>   ADDQ.w #1,numreps
00025A26 <AmiBlitz3.ab3@8201> BRA.w fetchlibps__rloop
00025A2C <AmiBlitz3.ab3@8204>    MOVE.w numreps,D3
00025A30 <AmiBlitz3.ab3@8205>    BEQ.w syntaxerr
00025A32 <AmiBlitz3.ab3@8206>   ADDA.w D2,A2
00025A36 <AmiBlitz3.ab3@8207>   ANDI.w #$FF,D1
00025A3A <AmiBlitz3.ab3@8208>    BEQ.w fetchlibps__done
00025A3E <AmiBlitz3.ab3@8209>   CMP.w #$2C,D0
00025A42 <AmiBlitz3.ab3@8210>    BNE.w syntaxerr
00025A44 <AmiBlitz3.ab3@8213>    MOVE.w D1,D0
00025A48 <AmiBlitz3.ab3@8214>    BNE.w fetchpees2b
00025A4A <AmiBlitz3.ab3@8217> RTS
00025A50 <AmiBlitz3.ab3@8220>   MOVE.b funcparloop,-(a7)
00025A56 <AmiBlitz3.ab3@8221>   MOVE.l leftsidetype,-(a7)
00025A5C <AmiBlitz3.ab3@8222>   MOVE.l rightsidetype,-(a7)
00025A62 <AmiBlitz3.ab3@8223>   CLR.l leftsidetype
00025A68 <AmiBlitz3.ab3@8224>   CLR.l rightsidetype
00025A70 <AmiBlitz3.ab3@8225>   MOVE.b #0,funcparloop
00025A76 <AmiBlitz3.ab3@8226>   MOVE.b blitzparloop,-(a7)
00025A7E <AmiBlitz3.ab3@8227>   MOVE.b #1,blitzparloop
00025A82 <AmiBlitz3.ab3@8228>   BSR.w fetchpees2
00025A88 <AmiBlitz3.ab3@8229>   MOVE.b (a7)+,blitzparloop
00025A8E <AmiBlitz3.ab3@8230>   MOVE.l (a7)+,rightsidetype
00025A94 <AmiBlitz3.ab3@8231>   MOVE.l (a7)+,leftsidetype
00025A9A <AmiBlitz3.ab3@8232>   MOVE.b (a7)+,funcparloop
00025A9C <AmiBlitz3.ab3@8233> RTS
00025AA0 <AmiBlitz3.ab3@8237> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025AA2 <AmiBlitz3.ab3@8240> partostack:  Ds.w 1                                        ;pmode org source
00025AA4 <AmiBlitz3.ab3@8244>   MOVEQ.l #$01,D2
00025AA8 <AmiBlitz3.ab3@8245> BRA.w fetchpees3
00025AAA <AmiBlitz3.ab3@8248>   MOVEQ.l #$00,D2
00025AAE <AmiBlitz3.ab3@8251>   ANDI.w #$F,D0
00025AB4 <AmiBlitz3.ab3@8259>   CLR.w parnum
00025AB6 <AmiBlitz3.ab3@8260>   MOVE.w D1,-(A7)
00025ABA <AmiBlitz3.ab3@8261>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025AC0 <AmiBlitz3.ab3@8262>   MOVE.w D2,partostack
00025AC2 <AmiBlitz3.ab3@8263>   MOVE.w D0,-(A7)
00025AC6 <AmiBlitz3.ab3@8264>   CMP.w #"@@",(a5)                                         ;was l15
00025ACA <AmiBlitz3.ab3@8265>   BNE fetchpees__loop
00025AD0 <AmiBlitz3.ab3@8266>   TST.w ininclude                                          ;merge macrolines
00025AD4 <AmiBlitz3.ab3@8267>   BNE errorjoin
00025ADA <AmiBlitz3.ab3@8268>        MOVEA.l sourceline,A5
00025ADC <AmiBlitz3.ab3@8271>            MOVEA.l (A5),A5
00025AE2 <AmiBlitz3.ab3@8272>            MOVE.l a5,sourceline
00025AE6 <AmiBlitz3.ab3@8273>            LEA $9(A5),A5
00025AEC <AmiBlitz3.ab3@8274>            ADDQ.l #1,linenumat
00025AEE <AmiBlitz3.ab3@8278>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025AF2 <AmiBlitz3.ab3@8279>    BNE.w fetchpees__skip0
00025AF8 <AmiBlitz3.ab3@8280>   MOVE.w userp,D2                                          ;user selected type
00025AFA <AmiBlitz3.ab3@8282>    MOVE.l A2,-(A7)
00025B00 <AmiBlitz3.ab3@8283>    ADDQ.w #1,parnum
00025B06 <AmiBlitz3.ab3@8284>    TST.b funccall
00025B0A <AmiBlitz3.ab3@8285>    BEQ fetchpees__skip0_l1
00025B12 <AmiBlitz3.ab3@8286>    CMP.w #6,parnum
00025B16 <AmiBlitz3.ab3@8287>    BLE fetchpees__skip0_l1
00025B1A <AmiBlitz3.ab3@8288>    CMP.w #7,d2
00025B20 <AmiBlitz3.ab3@8294>    TST.b fpu
00025B24 <AmiBlitz3.ab3@8295>    BEQ fetchpees__skip0_old
00025B2A <AmiBlitz3.ab3@8296>    TST.w regnumfunc
00025B2E <AmiBlitz3.ab3@8297>    BEQ fetchpees__skip0_old
00025B34 <AmiBlitz3.ab3@8298>    CMP.w #$48e7,-4(a4)
00025B38 <AmiBlitz3.ab3@8299>    BNE fetchpees__skip0_old
00025B3A <AmiBlitz3.ab3@8300>    MOVEQ #0,d1
00025B40 <AmiBlitz3.ab3@8301>    MOVE.w regnum,d1
00025B46 <AmiBlitz3.ab3@8302>    CMP regnumfunc,d1                                       ;fpu reg function save
00025B4A <AmiBlitz3.ab3@8303>    BGE fetchpees__skip0_old
00025B4C <AmiBlitz3.ab3@8304>    ASL.w #7,d1
00025B4E <AmiBlitz3.ab3@8305>    MOVE.l d0,-(a7)
00025B54 <AmiBlitz3.ab3@8306>    MOVE.w regnumfunc,d0
00025B5A <AmiBlitz3.ab3@8307>    CLR.w regmask
00025B60 <AmiBlitz3.ab3@8309>    BSET d0,regmask
00025B62 <AmiBlitz3.ab3@8310>    SUBQ #1,d0
00025B66 <AmiBlitz3.ab3@8311>    BNE fetchpees__skip0_loop
00025B68 <AmiBlitz3.ab3@8312>     MOVEQ #0,d0
00025B6E <AmiBlitz3.ab3@8315>       BTST d0,regmask
00025B72 <AmiBlitz3.ab3@8316>       BEQ fetchpees__skip0_noa7
00025B74 <AmiBlitz3.ab3@8317>       MOVEQ #0,d1
00025B76 <AmiBlitz3.ab3@8318>       MOVE.w d0,d1
00025B78 <AmiBlitz3.ab3@8319>       SUBQ.w #1,d1
00025B7A <AmiBlitz3.ab3@8320>       ASL #7,d1
00025B80 <AmiBlitz3.ab3@8321>       OR.l #$f2277400,d1                                   ;fmove.d
00025B84 <AmiBlitz3.ab3@8323>       BSR writelong
00025B8A <AmiBlitz3.ab3@8325>       ADDQ.l #2,stacktrack
00025B90 <AmiBlitz3.ab3@8326>       MOVE.l stacktrack,d1
00025B96 <AmiBlitz3.ab3@8327>       CMP.l #180,d1
00025B9A <AmiBlitz3.ab3@8328>       BGT conmemerr                                        ;formel too complex
00025B9C <AmiBlitz3.ab3@8329>       MOVE.l a0,-(a7)
00025BA2 <AmiBlitz3.ab3@8330>       LEA fpustackbase,a0
00025BAA <AmiBlitz3.ab3@8331>       MOVE.w regmask,0(a0,d1)
00025BAC <AmiBlitz3.ab3@8332>       MOVE.l (a7)+,a0
00025BAE <AmiBlitz3.ab3@8335>       ADDQ.w #1,d0
00025BB4 <AmiBlitz3.ab3@8336>       CMP.w regnumfunc,d0
00025BB8 <AmiBlitz3.ab3@8337>       BLE fetchpees__skip0_loop2
00025BBA <AmiBlitz3.ab3@8340>       MOVE.l (a7)+,d0
00025BC0 <AmiBlitz3.ab3@8343>      MOVE.l currentfunccall,-(a7)
00025BC6 <AmiBlitz3.ab3@8344>      MOVE.w parnum,-(a7)
00025BCC <AmiBlitz3.ab3@8345>      TST.l rightsidetype
00025BD0 <AmiBlitz3.ab3@8346>      BSR.w JL_0_6836
00025BD6 <AmiBlitz3.ab3@8347>      MOVE.w (a7)+,parnum
00025BDC <AmiBlitz3.ab3@8349>    MOVE.l (a7)+,currentfunccall
00025BE2 <AmiBlitz3.ab3@8351>    TST.b typecheck                            ;typecheck for function call
00025BE6 <AmiBlitz3.ab3@8352>    BEQ 'notypecheck
00025BEC <AmiBlitz3.ab3@8353>    TST.b notypecheck
00025BF0 <AmiBlitz3.ab3@8354>    BNE 'notypecheck
00025BF6 <AmiBlitz3.ab3@8355>    TST.b blitzparloop
00025BFA <AmiBlitz3.ab3@8356>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00025C04 <AmiBlitz3.ab3@8357>    CMP.l #0,currentfunccall
00025C08 <AmiBlitz3.ab3@8358>    BEQ 'isblitzlibcall
00025C0C <AmiBlitz3.ab3@8359>    MOVEM.l a0/a1,-(a7)
00025C12 <AmiBlitz3.ab3@8360>    MOVE.l currentfunccall,a0
00025C18 <AmiBlitz3.ab3@8361>    MOVE.w parnum,d1
00025C1E <AmiBlitz3.ab3@8362>    TST.b isconstantvalue
00025C22 <AmiBlitz3.ab3@8363>    BEQ 'noconstant
00025C2C <AmiBlitz3.ab3@8364>    CMP.l #0,lastconstantvalue
00025C30 <AmiBlitz3.ab3@8365>    BEQ 'isnull
00025C34 <AmiBlitz3.ab3@8367>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00025C3A <AmiBlitz3.ab3@8368>    CMP.l #0,a0
00025C3E <AmiBlitz3.ab3@8369>    BEQ 'notype
00025C46 <AmiBlitz3.ab3@8370>    CMP.l #$100,4(a0)
00025C4A <AmiBlitz3.ab3@8371>    BLE 'notype
00025C50 <AmiBlitz3.ab3@8372>    MOVE.l lasttoken,d1
00025C54 <AmiBlitz3.ab3@8373>    CMP.w #$b581,d1                   ; ok, when token for null
00025C58 <AmiBlitz3.ab3@8374>    BEQ 'isnull
00025C5E <AmiBlitz3.ab3@8375>    TST.l typetocast
00025C62 <AmiBlitz3.ab3@8376>    BEQ 'nocast
00025C68 <AmiBlitz3.ab3@8377>    MOVE.l typetocast,a1
00025C6C <AmiBlitz3.ab3@8378>    BRA 'typecheck
00025C72 <AmiBlitz3.ab3@8380>    MOVE.l rightsidetype,a1
00025C78 <AmiBlitz3.ab3@8381>    CMP.l #0,a1
00025C7C <AmiBlitz3.ab3@8382>    BEQ 'notype
00025C84 <AmiBlitz3.ab3@8383> 'typecheck   CMP.l #$100,4(a1)
00025C86 <AmiBlitz3.ab3@8385>    CMP.l a0,a1
00025C8A <AmiBlitz3.ab3@8386>    BEQ 'ok
00025C92 <AmiBlitz3.ab3@8388>    CMP.l #$100,4(a1)                 ; is a type here
00025C96 <AmiBlitz3.ab3@8389>    BLE 'error
00025C9A <AmiBlitz3.ab3@8390>    MOVE.l 4(a1),a1                   ; load the address of type.
00025C9E <AmiBlitz3.ab3@8391>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00025CA2 <AmiBlitz3.ab3@8392>    BEQ 'ok
00025CA8 <AmiBlitz3.ab3@8393> 'error: JMP   error_convert_types    ; for syntax 4
00025CAE <AmiBlitz3.ab3@8397>    CLR.l typetocast
00025CB2 <AmiBlitz3.ab3@8398>    MOVEM.l (a7)+,a0/a1
00025CB8 <AmiBlitz3.ab3@8402>    CLR.l lastfunction
00025CBE <AmiBlitz3.ab3@8403>    TST.b fpu
00025CC2 <AmiBlitz3.ab3@8404>    BEQ fetchpees__skip0_noprint
00025CC4 <AmiBlitz3.ab3@8405>   MOVE.l (a7),a2
00025CC6 <AmiBlitz3.ab3@8406>   ADDQ.l #1,a2
00025CCA <AmiBlitz3.ab3@8407>    CMP.b #5,d2
00025CCE <AmiBlitz3.ab3@8408>   BNE fetchpees__skip0_noprint
00025CD4 <AmiBlitz3.ab3@8409>   CMP.b #$5d,24(a2)
00025CD8 <AmiBlitz3.ab3@8410>   BNE fetchpees__skip0_noprint
00025CDE <AmiBlitz3.ab3@8411>   CMP.b #$81,25(a2)
00025CE2 <AmiBlitz3.ab3@8412>   BLT fetchpees__skip0_noprint
00025CE8 <AmiBlitz3.ab3@8413>   CMP.b #$86,25(a2)
00025CEC <AmiBlitz3.ab3@8414>   BEQ fetchpees__skip0_ok
00025CF2 <AmiBlitz3.ab3@8415>   CMP.b #$87,25(a2)
00025CF6 <AmiBlitz3.ab3@8416>   BEQ fetchpees__skip0_ok
00025CFC <AmiBlitz3.ab3@8417>   CMP.b #$88,25(a2)
00025D00 <AmiBlitz3.ab3@8418>   BEQ fetchpees__skip0_ok
00025D06 <AmiBlitz3.ab3@8419>   CMP.b #$83,25(a2)
00025D0A <AmiBlitz3.ab3@8420>   BGT fetchpees__skip0_noprint
00025D10 <AmiBlitz3.ab3@8423>   MOVE.l destpointer,a4
00025D16 <AmiBlitz3.ab3@8424>   CMP.w #$2f00,-2(a4)
00025D1A <AmiBlitz3.ab3@8425>   BNE fetchpees__skip0_noprint
00025D20 <AmiBlitz3.ab3@8426>   SUBQ.l #2,destpointer
00025D26 <AmiBlitz3.ab3@8428>   MOVE.l #$f2277400,d1
00025D2A <AmiBlitz3.ab3@8429>   BSR writelong                                            ;fmove.d fp0,-(a7)
00025D30 <AmiBlitz3.ab3@8430>   ADDQ #4,a2offset
00025D36 <AmiBlitz3.ab3@8448>   CLR.b optistring
00025D38 <AmiBlitz3.ab3@8449>   MOVEA.l (A7)+,A2
00025D3C <AmiBlitz3.ab3@8450>    CMP.w #"@",d0
00025D40 <AmiBlitz3.ab3@8451>   BNE fetchpees__skip0_l10
00025D44 <AmiBlitz3.ab3@8452>    CMP.b #"@",(a5)
00025D48 <AmiBlitz3.ab3@8453>   BNE fetchpees__skip0_l10
00025D4E <AmiBlitz3.ab3@8454>   TST.w ininclude
00025D52 <AmiBlitz3.ab3@8455>   BNE errorjoin
00025D58 <AmiBlitz3.ab3@8456>   MOVEA.l sourceline,A5
00025D5A <AmiBlitz3.ab3@8457>            MOVEA.l (A5),A5
00025D60 <AmiBlitz3.ab3@8458>            MOVE.l a5,sourceline
00025D66 <AmiBlitz3.ab3@8459>            ADDQ.l #1,linenumat
00025D6A <AmiBlitz3.ab3@8460>            LEA $9(A5),A5
00025D6C <AmiBlitz3.ab3@8461>            MOVEQ #0,d0
00025D70 <AmiBlitz3.ab3@8462>            BSR get1bytemain
00025D74 <AmiBlitz3.ab3@8465>    CMP.b #32,(a5)+ ;for space after a ,
00025D78 <AmiBlitz3.ab3@8466>    BEQ fetchpees__skip0_l10:
00025D7A <AmiBlitz3.ab3@8467>    SUBQ.l #1,a5
00025D7E <AmiBlitz3.ab3@8469>    CMP.w #"@@",(a5)                                        ;if merge
00025D82 <AmiBlitz3.ab3@8470>    BNE fetchpees__skip0_l15
00025D86 <AmiBlitz3.ab3@8471>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00025D8C <AmiBlitz3.ab3@8472>    JSR mergeline
00025D90 <AmiBlitz3.ab3@8473>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00025D92 <AmiBlitz3.ab3@8493>       SUBQ.w #1,(A7)
00025D96 <AmiBlitz3.ab3@8494>    BEQ.w fetchpees__done
00025D9A <AmiBlitz3.ab3@8496>     CMP.w #$2C,D0
00025D9E <AmiBlitz3.ab3@8498>    BNE overloadfunc
00025DA2 <AmiBlitz3.ab3@8499> BRA.w fetchpees__loop
00025DA4 <AmiBlitz3.ab3@8502>   ADDQ.w #2,A7
00025DAA <AmiBlitz3.ab3@8503>   MOVE.w (A7)+,partostack
00025DAC <AmiBlitz3.ab3@8504>   MOVE.w (A7)+,D1
00025DB2 <AmiBlitz3.ab3@8505>   CLR.b isconstantvalue
00025DBC <AmiBlitz3.ab3@8506>   MOVE.l currentfunccall,lastfunction
00025DC2 <AmiBlitz3.ab3@8507>   CLR.b funccall
00025DC8 <AmiBlitz3.ab3@8508>   CLR.l currentfunccall
00025DCA <AmiBlitz3.ab3@8509> RTS
00025DD0 <AmiBlitz3.ab3@8513>   CLR.b funccall
00025DD6 <AmiBlitz3.ab3@8514>   MOVE.w regnum,d1
00025DDC <AmiBlitz3.ab3@8515>   MOVE.l currentfunccall,a4
00025DE0 <AmiBlitz3.ab3@8516>   CMP.b $20(a4),d1                                         ;increase if more pars
00025DE4 <AmiBlitz3.ab3@8517>   BLT notparerr
00025DE6 <AmiBlitz3.ab3@8520>   MOVE.b (a2)+,d2
00025DEE <AmiBlitz3.ab3@8521>   ADD.w #1,parnum
00025DF4 <AmiBlitz3.ab3@8522>   TST.b fpu
00025DF8 <AmiBlitz3.ab3@8523>   BEQ 'nofpu
00025DFC <AmiBlitz3.ab3@8524>   CMP.b #5,d2
00025E00 <AmiBlitz3.ab3@8525>   BNE 'nofpu
00025E02 <AmiBlitz3.ab3@8526>   MOVEQ #0,d1
00025E08 <AmiBlitz3.ab3@8527>   MOVE.w regnum,d1
00025E10 <AmiBlitz3.ab3@8528>   CMP.w #6,regnum
00025E14 <AmiBlitz3.ab3@8529>   BLT 'nostack2
00025E18 <AmiBlitz3.ab3@8534>   MOVE.w #$2c3c,d1
00025E1C <AmiBlitz3.ab3@8535>   BSR writeword
00025E22 <AmiBlitz3.ab3@8536>   MOVE.l #$bf800000,d1
00025E26 <AmiBlitz3.ab3@8537>   BSR writelong
00025E2A <AmiBlitz3.ab3@8538>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025E30 <AmiBlitz3.ab3@8539>   ADD.w parnum,d1
00025E36 <AmiBlitz3.ab3@8540>   JSR Atokejsr
00025E3C <AmiBlitz3.ab3@8541>   TST.w dontwrite
00025E40 <AmiBlitz3.ab3@8542>   BNE 'l1
00025E46 <AmiBlitz3.ab3@8543>   MOVE.l data1start,d1
00025E4C <AmiBlitz3.ab3@8544>   MOVE.l destpointer,a4
00025E50 <AmiBlitz3.ab3@8545>   ADD.l d1,-4(a4)
00025E56 <AmiBlitz3.ab3@8546>   MOVE.l destpointer,d1
00025E58 <AmiBlitz3.ab3@8547>   SUBQ.l #4,d1
00025E5E <AmiBlitz3.ab3@8548>   SUB.l destbufferstart,d1
00025E60 <AmiBlitz3.ab3@8549>   MOVE.l d2,-(a7)
00025E62 <AmiBlitz3.ab3@8550>   MOVE.l d1,d2
00025E68 <AmiBlitz3.ab3@8551>   JSR addhunkoffset
00025E6A <AmiBlitz3.ab3@8552>   MOVE.l (a7)+,d2
00025E6E <AmiBlitz3.ab3@8553> BRA 'l1
00025E74 <AmiBlitz3.ab3@8556>   TST.b fpu                                                ; fpucheck added  tomsmart1
00025E78 <AmiBlitz3.ab3@8557>   BEQ 'nofpu
00025E7A <AmiBlitz3.ab3@8559>   ASL.l #7,d1
00025E80 <AmiBlitz3.ab3@8560>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00025E84 <AmiBlitz3.ab3@8561>   BSR writelong
00025E86 <AmiBlitz3.ab3@8562>   MOVEQ #-1,d1                                             ;-1
00025E8A <AmiBlitz3.ab3@8563>   BSR writeword
00025E8E <AmiBlitz3.ab3@8564> BRA 'l1
00025E94 <AmiBlitz3.ab3@8567>   MOVE.w regnum,d1
00025E9C <AmiBlitz3.ab3@8568>   CMP.w #6,regnum
00025EA0 <AmiBlitz3.ab3@8569>   BLT 'nostack
00025EA4 <AmiBlitz3.ab3@8574>   CMP.b #2,d2
00025EA8 <AmiBlitz3.ab3@8575>   BGT 'nw
00025EAC <AmiBlitz3.ab3@8576> BRA 'nos
00025EB0 <AmiBlitz3.ab3@8585>   CMP.w #7,d2
00025EB4 <AmiBlitz3.ab3@8586>   BNE 'nos
00025EBA <AmiBlitz3.ab3@8587>   ADDQ #4,a2offset
00025EC0 <AmiBlitz3.ab3@8589>     MOVE.l #$48780000,d1
00025EC4 <AmiBlitz3.ab3@8590>     BSR writelong
00025ECA <AmiBlitz3.ab3@8591>     ADDQ.w #4,a2offset
00025ECE <AmiBlitz3.ab3@8592>     MOVE.w #$2f3c,d1
00025ED2 <AmiBlitz3.ab3@8593>     BSR writeword
00025ED8 <AmiBlitz3.ab3@8594>     MOVE.l #-1,d1
00025EDC <AmiBlitz3.ab3@8595>     BSR writelong
00025EE0 <AmiBlitz3.ab3@8596>   BRA 'l1
00025EE4 <AmiBlitz3.ab3@8600>   CMP.b #4,d2
00025EE8 <AmiBlitz3.ab3@8601>       BNE 'noq
00025EEC <AmiBlitz3.ab3@8602>       MOVE.w #$2c3c,d1
00025EF0 <AmiBlitz3.ab3@8603>       BSR writeword
00025EF6 <AmiBlitz3.ab3@8604>       MOVE.l #$ffff0000,d1
00025EFA <AmiBlitz3.ab3@8605>       BSR writelong
00025EFE <AmiBlitz3.ab3@8606> BRA 'noq2
00025F02 <AmiBlitz3.ab3@8609>      CMP.b #5,d2
00025F06 <AmiBlitz3.ab3@8610>      BNE 'nof
00025F0A <AmiBlitz3.ab3@8611>       MOVE.w #$2c3c,d1
00025F0E <AmiBlitz3.ab3@8612>       BSR writeword
00025F14 <AmiBlitz3.ab3@8613>       MOVE.l #$800000c1,d1
00025F18 <AmiBlitz3.ab3@8614>       BSR writelong
00025F1C <AmiBlitz3.ab3@8615> BRA 'noq2
00025F20 <AmiBlitz3.ab3@8618>   MOVE.w #$7cff,d1
00025F24 <AmiBlitz3.ab3@8619>   BSR writeword
00025F28 <AmiBlitz3.ab3@8622>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025F2E <AmiBlitz3.ab3@8623>   ADD.w parnum,d1
00025F34 <AmiBlitz3.ab3@8624>   JSR Atokejsr
00025F3A <AmiBlitz3.ab3@8625>    TST.w dontwrite
00025F3E <AmiBlitz3.ab3@8626>    BNE 'l1
00025F44 <AmiBlitz3.ab3@8627>    MOVE.l data1start,d1
00025F4A <AmiBlitz3.ab3@8628>    MOVE.l destpointer,a4
00025F4E <AmiBlitz3.ab3@8629>    ADD.l d1,-4(a4)
00025F54 <AmiBlitz3.ab3@8630>    MOVE.l destpointer,d1
00025F56 <AmiBlitz3.ab3@8631>    SUBQ.l #4,d1
00025F5C <AmiBlitz3.ab3@8632>    SUB.l destbufferstart,d1
00025F5E <AmiBlitz3.ab3@8633>    MOVE.l d2,-(a7)
00025F60 <AmiBlitz3.ab3@8634>    MOVE.l d1,d2
00025F66 <AmiBlitz3.ab3@8635>    JSR addhunkoffset
00025F68 <AmiBlitz3.ab3@8636>    MOVE.l (a7)+,d2
00025F6C <AmiBlitz3.ab3@8637> BRA 'l1
00025F6E <AmiBlitz3.ab3@8640>   ASL.l #8,d1
00025F70 <AmiBlitz3.ab3@8641>   ASL.l #1,d1
00025F76 <AmiBlitz3.ab3@8642>   OR.l #$203c,d1                                           ;-1
00025F7A <AmiBlitz3.ab3@8643>   BSR writeword
00025F80 <AmiBlitz3.ab3@8644>   MOVE.l #-1,d1
00025F84 <AmiBlitz3.ab3@8645>   CMP.b #4,d2
00025F88 <AmiBlitz3.ab3@8646>   BNE 'nq1
00025F8E <AmiBlitz3.ab3@8647>   MOVE.l #$ffff0000,d1
00025F92 <AmiBlitz3.ab3@8650>   CMP.b #5,d2
00025F96 <AmiBlitz3.ab3@8651>   BNE 'nof2
00025F9C <AmiBlitz3.ab3@8652>   TST.b fpu
00025FA0 <AmiBlitz3.ab3@8653>   BNE 'nof2
00025FA6 <AmiBlitz3.ab3@8654>   MOVE.l #$800000c1,d1
00025FAA <AmiBlitz3.ab3@8657>    BSR writelong
00025FAE <AmiBlitz3.ab3@8658>    CMP.b #7,d2
00025FB2 <AmiBlitz3.ab3@8659>    BNE 'l1
00025FB8 <AmiBlitz3.ab3@8661>      MOVE.l #$48780000,d1
00025FBC <AmiBlitz3.ab3@8662>      BSR writelong
00025FC2 <AmiBlitz3.ab3@8664>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00025FC8 <AmiBlitz3.ab3@8665>    MOVE.l #$594f,d1                                        ; subq #4,a7
00025FCC <AmiBlitz3.ab3@8666>    BSR writeword
00025FCE <AmiBlitz3.ab3@8669>    SUBQ.w #1,(A7)
00025FD2 <AmiBlitz3.ab3@8670>    BEQ.w fetchpees__done
00025FD8 <AmiBlitz3.ab3@8671>    ADDQ.w #1,regnum
00025FDC <AmiBlitz3.ab3@8672> BRA 'ol2
00025FDE <AmiBlitz3.ab3@8675>    MOVE.w D2,D1
00025FE2 <AmiBlitz3.ab3@8676>    ANDI.w #$40,D1
00025FE8 <AmiBlitz3.ab3@8677>    MOVE.b D1,partostack
00025FEA <AmiBlitz3.ab3@8678>    TST.b D2
00025FEE <AmiBlitz3.ab3@8679>     BMI.w handlevara
00025FF2 <AmiBlitz3.ab3@8680>    BTST #$5,D2
00025FF6 <AmiBlitz3.ab3@8681>     BNE.w handlearr
00025FFC <AmiBlitz3.ab3@8682>     MOVE.w regnumstore,-(a7)
00026002 <AmiBlitz3.ab3@8683>     MOVE.w tempregnum,-(a7)
00026008 <AmiBlitz3.ab3@8684>     MOVE.w parnum,-(a7)
0002600C <AmiBlitz3.ab3@8685>     BSR.w getap                                        ;recursive entry
00026012 <AmiBlitz3.ab3@8686>     MOVE.w (a7)+,parnum
00026018 <AmiBlitz3.ab3@8687>     MOVE.w (a7)+,tempregnum
0002601E <AmiBlitz3.ab3@8688>     MOVE.w (a7)+,regnumstore
00026022 <AmiBlitz3.ab3@8691>     MOVE.w partostack(PC),D1
00026026 <AmiBlitz3.ab3@8692>     BEQ.w JL_0_6886
0002602C <AmiBlitz3.ab3@8695>    ADDQ.w #4,a2offset
00026032 <AmiBlitz3.ab3@8698>    MOVE.w pushdn,D1
00026038 <AmiBlitz3.ab3@8699>    OR.w regnum,D1
0002603C <AmiBlitz3.ab3@8700>    CMP.w #$3,D2
00026040 <AmiBlitz3.ab3@8701>     BCC.w JL_0_6880
00026046 <AmiBlitz3.ab3@8702>    SUBQ.w #2,a2offset
0002604A <AmiBlitz3.ab3@8703>    ORI.w #$1000,D1
0002604E <AmiBlitz3.ab3@8704>    BSR.w writeword
00026050 <AmiBlitz3.ab3@8705> RTS
00026054 <AmiBlitz3.ab3@8708>   CMP.b #7,d2
00026058 <AmiBlitz3.ab3@8709>    BNE 'l10
00026060 <AmiBlitz3.ab3@8710>    CMP.b #2,optistring
00026066 <AmiBlitz3.ab3@8714>   TST.b iee
0002606A <AmiBlitz3.ab3@8715>   BEQ 'old
0002606E <AmiBlitz3.ab3@8716>   CMP.b #5,d2
00026072 <AmiBlitz3.ab3@8717>   BNE 'old
00026076 <AmiBlitz3.ab3@8720>   BSR.w writeword                                          ;write val to stack
00026078 <AmiBlitz3.ab3@8721> RTS
0002607E <AmiBlitz3.ab3@8724>   SUBQ.w #4,a2offset
00026080 <AmiBlitz3.ab3@8725> RTS
00026086 <AmiBlitz3.ab3@8728>   ADDQ.w #1,regnum
00026088 <AmiBlitz3.ab3@8729> RTS
0002608A <AmiBlitz3.ab3@8733>   MOVEQ.l #$03,D2
0002608E <AmiBlitz3.ab3@8734> BRA.w JL_0_6854
00026092 <AmiBlitz3.ab3@8738>   ANDI.w #$7,D2
00026094 <AmiBlitz3.ab3@8739>   MOVE.w D2,-(A7)
00026098 <AmiBlitz3.ab3@8740>    BSR.w JL_0_A916
0002609C <AmiBlitz3.ab3@8741>   CMP.b #$7,D2                                             ;ignore pnt to $
000260A0 <AmiBlitz3.ab3@8742>    BEQ.w JL_0_68C0
000260A4 <AmiBlitz3.ab3@8743>   BTST #$E,D2
000260A8 <AmiBlitz3.ab3@8744>    BEQ.w JL_0_68B6
000260AC <AmiBlitz3.ab3@8745>   MOVE.b #$3,D2                                            ;pointer to long
000260B0 <AmiBlitz3.ab3@8746> BRA.w JL_0_68C0
000260B2 <AmiBlitz3.ab3@8749>    TST.b D2
000260B6 <AmiBlitz3.ab3@8750>    BNE.w JL_0_68C0
000260BA <AmiBlitz3.ab3@8751>   MOVE.b #$3,D2
000260BC <AmiBlitz3.ab3@8754>   MOVE.w (A7)+,D3
000260BE <AmiBlitz3.ab3@8755>   TST.b D3
000260C2 <AmiBlitz3.ab3@8756>    BEQ.w JL_0_68D2
000260C4 <AmiBlitz3.ab3@8757>   CMP.b D2,D3
000260C8 <AmiBlitz3.ab3@8758>    BEQ.w putalp
000260CC <AmiBlitz3.ab3@8759> BRA.w mismatcherr
000260D2 <AmiBlitz3.ab3@8762>   ADDQ.w #2,a2offset
000260D6 <AmiBlitz3.ab3@8763>   MOVE.w ptype(PC),D1
000260DA <AmiBlitz3.ab3@8764>    BSR.w writeword
000260DC <AmiBlitz3.ab3@8765>   MOVEQ.l #$00,D1
000260DE <AmiBlitz3.ab3@8766>   MOVE.b D2,D1
000260E2 <AmiBlitz3.ab3@8767>    BSR.w writeword
000260E6 <AmiBlitz3.ab3@8768> BRA.w putalp
000260E8 <AmiBlitz3.ab3@8771>    MOVE.w D2,-(A7)
000260EC <AmiBlitz3.ab3@8772>    BSR.w JL_0_694E
000260F2 <AmiBlitz3.ab3@8773>   BTST #$4,$1(A7)
000260F6 <AmiBlitz3.ab3@8774>    BEQ.w JL_0_6900
000260FA <AmiBlitz3.ab3@8775>    BSR.w JL_0_699A
00026100 <AmiBlitz3.ab3@8778>    BTST #$3,$1(A7)
00026104 <AmiBlitz3.ab3@8779>    BEQ.w JL_0_690E
00026108 <AmiBlitz3.ab3@8780>    BSR.w sendtype
0002610A <AmiBlitz3.ab3@8783>    MOVE.w (A7)+,D2
0002610E <AmiBlitz3.ab3@8784> BRA.w get1bytemain
00026114 <AmiBlitz3.ab3@8787>   MOVE.w regnum,D1
00026116 <AmiBlitz3.ab3@8788>   LSL.w #8,D1
00026118 <AmiBlitz3.ab3@8789>   LSL.w #1,D1
0002611C <AmiBlitz3.ab3@8790>   ORI.w #$7000,D1
00026122 <AmiBlitz3.ab3@8791>   BTST #$0,$7(A3)
00026126 <AmiBlitz3.ab3@8792>    BNE.w JL_0_6946                                         ;A Pointer
0002612E <AmiBlitz3.ab3@8793>   CMPI.l #$100,$4(A2)
00026132 <AmiBlitz3.ab3@8794>    BCC.w arrerr1                                           ;illegal type to send
00026136 <AmiBlitz3.ab3@8795>   MOVE.b $7(A2),D1
0002613A <AmiBlitz3.ab3@8798>   BSR.w writeword                                          ;moveq #type,d regat
0002613C <AmiBlitz3.ab3@8799>   MOVEQ.l #$02,D2                                          ;just a word.
00026140 <AmiBlitz3.ab3@8800> BRA.w JL_0_685C
00026144 <AmiBlitz3.ab3@8803>   MOVE.b #$3,D1
00026148 <AmiBlitz3.ab3@8804> BRA.w JL_0_693C
0002614C <AmiBlitz3.ab3@8808>    BSR.w get1bytemain                                      ;write array paramter code
00026150 <AmiBlitz3.ab3@8809>    BSR.w getparameter
00026158 <AmiBlitz3.ab3@8810>   BTST #$1,flagmask+1
0002615C <AmiBlitz3.ab3@8811>    BEQ.w syntaxerr
00026160 <AmiBlitz3.ab3@8812>    BSR.w JL_0_8E3C
00026164 <AmiBlitz3.ab3@8813>    BSR.w get1bytemain
00026168 <AmiBlitz3.ab3@8814>   CMP.w #$29,D0                                            ;we just want a() or whatever
0002616C <AmiBlitz3.ab3@8815>    BNE.w syntaxerr
00026172 <AmiBlitz3.ab3@8816>   MOVE.w notshared,D1
00026176 <AmiBlitz3.ab3@8817>    BNE.w noarrayerr
0002617C <AmiBlitz3.ab3@8818>   MOVE.w regnum,D1
0002617E <AmiBlitz3.ab3@8819>   LSL.w #8,D1
00026180 <AmiBlitz3.ab3@8820>   LSL.w #1,D1
00026184 <AmiBlitz3.ab3@8821>   OR.w fbase(PC),D1
0002618A <AmiBlitz3.ab3@8822>    TST.b varmode
0002618E <AmiBlitz3.ab3@8823>    BEQ 'l1
00026192 <AmiBlitz3.ab3@8824>    BCLR #0,d1
00026196 <AmiBlitz3.ab3@8827>    BSR.w writeword
0002619A <AmiBlitz3.ab3@8828>   MOVE.w $4(A3),D1
0002619E <AmiBlitz3.ab3@8829>    BSR.w writeword
000261A2 <AmiBlitz3.ab3@8830> BRA.w putalp
000261A8 <AmiBlitz3.ab3@8834>   MOVE.w regnum,D1
000261AA <AmiBlitz3.ab3@8835>   LSL.w #8,D1
000261AC <AmiBlitz3.ab3@8836>   LSL.w #1,D1
000261B0 <AmiBlitz3.ab3@8837>   OR.w fbase(PC),D1
000261B6 <AmiBlitz3.ab3@8838>    TST.b varmode
000261BA <AmiBlitz3.ab3@8839>    BEQ 'l1
000261BE <AmiBlitz3.ab3@8840>    BCLR #0,d1
000261C2 <AmiBlitz3.ab3@8843>    BSR.w writeword
000261C6 <AmiBlitz3.ab3@8844>   MOVE.w $8(A3),D1
000261C8 <AmiBlitz3.ab3@8845>   LSL.w #2,D1
000261CE <AmiBlitz3.ab3@8846>   MOVE.w varmode,D2
000261D2 <AmiBlitz3.ab3@8847>    BEQ.w JL_0_69BE
000261D4 <AmiBlitz3.ab3@8848>   NEG.w D1
000261D8 <AmiBlitz3.ab3@8851>    ADD.w $4(A3),D1
000261DC <AmiBlitz3.ab3@8852>    BSR.w writeword
000261E2 <AmiBlitz3.ab3@8853>   MOVE.w regnum,D1
000261E4 <AmiBlitz3.ab3@8854>   LSL.w #8,D1
000261E6 <AmiBlitz3.ab3@8855>   LSL.w #1,D1
000261EA <AmiBlitz3.ab3@8856>   MOVE.w partostack(PC),D2
000261EE <AmiBlitz3.ab3@8857>    BNE.w JL_0_69F4
000261F6 <AmiBlitz3.ab3@8858>   CMPI.w #$7,regnum
000261FA <AmiBlitz3.ab3@8859>    BCC.w JL_0_69F4
000261FE <AmiBlitz3.ab3@8860>   OR.w pushlast(PC),D1
00026204 <AmiBlitz3.ab3@8861>   MOVE.w regnum,D2
00026206 <AmiBlitz3.ab3@8862>   SUBQ.w #1,D2
00026208 <AmiBlitz3.ab3@8863>   OR.w D2,D1
0002620C <AmiBlitz3.ab3@8864> BRA.w JL_0_69F8
00026210 <AmiBlitz3.ab3@8867>   OR.w pushadd(PC),D1
00026214 <AmiBlitz3.ab3@8870>   BSR.w writeword
0002621C <AmiBlitz3.ab3@8871>   MOVE.b #$1,partostack
00026220 <AmiBlitz3.ab3@8872> BRA.w putalp
00026224 <AmiBlitz3.ab3@8876> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026226 <AmiBlitz3.ab3@8877> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026228 <AmiBlitz3.ab3@8878> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
0002622C <AmiBlitz3.ab3@8883>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026230 <AmiBlitz3.ab3@8884>    BEQ.w evalu2
00026234 <AmiBlitz3.ab3@8885> BRA.w eval
0002623A <AmiBlitz3.ab3@8889>   MOVEA.l libpointer,A1
0002623E <AmiBlitz3.ab3@8892>    CMPA.w #$0,A1
00026242 <AmiBlitz3.ab3@8893>    BEQ.w resetlibs__done
00026248 <AmiBlitz3.ab3@8894>   MOVE.w #-1,$A(A1)
0002624E <AmiBlitz3.ab3@8895>   BCLR #$7,$C(A1)
00026250 <AmiBlitz3.ab3@8896>   MOVEA.l (A1),A1
00026254 <AmiBlitz3.ab3@8897> BRA.w resetlibs__loop
00026256 <AmiBlitz3.ab3@8900> RTS
0002625A <AmiBlitz3.ab3@8904>   MOVE.w #$FFFE,D1
0002625E <AmiBlitz3.ab3@8907>    BSR.w JL_0_6F38
00026264 <AmiBlitz3.ab3@8910>   TST.w cfetchmode
00026268 <AmiBlitz3.ab3@8911>    BEQ.w uselib3__noconst
0002626E <AmiBlitz3.ab3@8912>   BTST #$6,$C(A1)
00026272 <AmiBlitz3.ab3@8913>    BNE.w uselib3__constok
00026276 <AmiBlitz3.ab3@8914> BRA.w badconerr                                            ;Can't use this Library!
00026278 <AmiBlitz3.ab3@8917> RTS
0002627E <AmiBlitz3.ab3@8920>    BSET #$7,$C(A1)
00026282 <AmiBlitz3.ab3@8921>    BNE.w JL_0_6C74                                         ;already done....
00026288 <AmiBlitz3.ab3@8922>    CMPI.w #-1,$A(A1)
0002628C <AmiBlitz3.ab3@8923>    BNE.w JL_0_6C74                                         ;something already here
00026292 <AmiBlitz3.ab3@8927>    TST.w dirmode
00026296 <AmiBlitz3.ab3@8928>    BEQ.b JL_0_6A86
0002629C <AmiBlitz3.ab3@8929>    TST.b exdebug
000262A0 <AmiBlitz3.ab3@8930>    BEQ 'l1
000262A4 <AmiBlitz3.ab3@8931> BRA.b JL_0_6A86
000262AA <AmiBlitz3.ab3@8934>   BCLR #$7,$C(A1)
000262AE <AmiBlitz3.ab3@8935> BRA.w dirliberr
000262B4 <AmiBlitz3.ab3@8938>   MOVE.b debugmode,-(a7)
000262B8 <AmiBlitz3.ab3@8939>   MOVEM.l D1/A0/A2,-(A7)
000262C0 <AmiBlitz3.ab3@8945>   BTST #$7,use_debugger
000262C4 <AmiBlitz3.ab3@8946>   BNE 'debugon
000262C6 <AmiBlitz3.ab3@8947>   CLR.w D1
000262CA <AmiBlitz3.ab3@8948> BRA.b 'debugoff
000262CC <AmiBlitz3.ab3@8951>   SNE D1
000262D2 <AmiBlitz3.ab3@8954>   MOVE.b d1,debugmode
000262D4 <AmiBlitz3.ab3@8958>   MOVEA.l A1,A0
000262D8 <AmiBlitz3.ab3@8959>   ADDA.l $12(A1),A0
000262DC <AmiBlitz3.ab3@8960>   TST.w -$2(A0)
000262E0 <AmiBlitz3.ab3@8961>    BEQ.w JL_0_6AD2
000262E4 <AmiBlitz3.ab3@8962>   MOVEM.l A0-A1,-(A7)
000262E8 <AmiBlitz3.ab3@8963>   MOVE.w #$FB4F,D1
000262EC <AmiBlitz3.ab3@8964>    BSR.w uselib
000262F0 <AmiBlitz3.ab3@8965>   MOVEM.l (A7)+,A0-A1
000262F6 <AmiBlitz3.ab3@8966>   ADDQ.w #1,globalvarpointer
000262FE <AmiBlitz3.ab3@8967>   BCLR #$0,globalvarpointer+1
00026306 <AmiBlitz3.ab3@8968>   MOVE.w globalvarpointer,-$6(A0)
0002630C <AmiBlitz3.ab3@8969>   ADDQ.w #4,globalvarpointer
00026310 <AmiBlitz3.ab3@8970>   TST.l -$E(A0)
00026314 <AmiBlitz3.ab3@8971>    BEQ.w JL_0_6AD2
0002631A <AmiBlitz3.ab3@8972>   ADDQ.w #4,globalvarpointer
00026322 <AmiBlitz3.ab3@8975>   MOVE.l libend,$28(A1)
00026324 <AmiBlitz3.ab3@8976>   MOVEA.l A1,A0
00026328 <AmiBlitz3.ab3@8977>   ADDA.l $12(A1),A0
0002632A <AmiBlitz3.ab3@8978>   MOVE.l A1,D1
0002632E <AmiBlitz3.ab3@8979>   ADD.l $6(A1),D1
00026332 <AmiBlitz3.ab3@8980>   TST.l $2C(A1)
00026336 <AmiBlitz3.ab3@8981>    BEQ.w JL_0_6AFE
0002633C <AmiBlitz3.ab3@8983>   TST.b debugmode
00026340 <AmiBlitz3.ab3@8984>    BNE.w JL_0_6AFE
00026342 <AmiBlitz3.ab3@8985>   MOVE.l A1,D1
00026346 <AmiBlitz3.ab3@8986>   ADD.l $2C(A1),D1
0002634C <AmiBlitz3.ab3@8989>   MOVEA.l libend,A2
00026352 <AmiBlitz3.ab3@8992>   CMPA.l data1start,A2
00026356 <AmiBlitz3.ab3@8993>    BCS.w JL_0_6B24
0002635E <AmiBlitz3.ab3@8994>   MOVE.w #$FFFF,dontwrite
00026360 <AmiBlitz3.ab3@8997>   ADDQ.w #2,A0
00026362 <AmiBlitz3.ab3@8998>   ADDQ.w #2,A2
00026364 <AmiBlitz3.ab3@8999>   CMPA.l D1,A0
00026368 <AmiBlitz3.ab3@9000>    BCS.w JL_0_6B16
0002636C <AmiBlitz3.ab3@9001> BRA.w JL_0_6B2C
0002636E <AmiBlitz3.ab3@9004>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026370 <AmiBlitz3.ab3@9005>   CMPA.l D1,A0
00026374 <AmiBlitz3.ab3@9006>    BCS.w JL_0_6B04
0002637A <AmiBlitz3.ab3@9009>   MOVE.l A2,libend
0002637E <AmiBlitz3.ab3@9010>   MOVE.l $20(A1),D1
00026382 <AmiBlitz3.ab3@9011>    BEQ.w JL_0_6BB8
00026386 <AmiBlitz3.ab3@9012>   MOVEM.l D0/D2-D3,-(A7)
0002638A <AmiBlitz3.ab3@9013>   MOVEA.l $24(A1),A0
0002638C <AmiBlitz3.ab3@9014>   MOVEQ.l #$00,D3
0002638E <AmiBlitz3.ab3@9017>   MOVE.l (A0)+,D2
00026392 <AmiBlitz3.ab3@9018>   TST.l $2C(A1)
00026396 <AmiBlitz3.ab3@9019>    BEQ.w JL_0_6B60
0002639C <AmiBlitz3.ab3@9020>   TST.b debugmode
000263A0 <AmiBlitz3.ab3@9021>    BNE.w JL_0_6B60
000263A4 <AmiBlitz3.ab3@9022>   CMP.l $2C(A1),D2
000263A8 <AmiBlitz3.ab3@9023>    BCC.w JL_0_6BA0
000263AC <AmiBlitz3.ab3@9026>   TST.w $0(A1,D2.L)
000263B0 <AmiBlitz3.ab3@9027>    BPL.w JL_0_6B72
000263B2 <AmiBlitz3.ab3@9028>   TST.l D3
000263B6 <AmiBlitz3.ab3@9029>    BNE.w JL_0_6B72
000263B8 <AmiBlitz3.ab3@9030>   MOVE.l A0,D0
000263BA <AmiBlitz3.ab3@9031>   MOVE.l D1,D3
000263BE <AmiBlitz3.ab3@9034>   SUB.l $12(A1),D2
000263C2 <AmiBlitz3.ab3@9035>    BMI.w JL_0_6BA0
000263C6 <AmiBlitz3.ab3@9036>   ADD.l $28(A1),D2
000263C8 <AmiBlitz3.ab3@9037>   MOVE.l D2,-(A7)
000263CE <AmiBlitz3.ab3@9038>   SUB.l destbufferstart,D2
000263D2 <AmiBlitz3.ab3@9039>    BSR.w addhunkoffset
000263D4 <AmiBlitz3.ab3@9040>   MOVEA.l (A7)+,A2
000263DA <AmiBlitz3.ab3@9041>   TST.w dontwrite
000263DE <AmiBlitz3.ab3@9042>    BNE.w JL_0_6BA0
000263E2 <AmiBlitz3.ab3@9043>   MOVE.l $28(A1),D2
000263E6 <AmiBlitz3.ab3@9044>   SUB.l $12(A1),D2
000263E8 <AmiBlitz3.ab3@9045>   ADD.l D2,(A2)
000263EA <AmiBlitz3.ab3@9048>    SUBQ.l #1,D1
000263EE <AmiBlitz3.ab3@9049>    BNE.w JL_0_6B44
000263F0 <AmiBlitz3.ab3@9050>   MOVE.l D3,D2
000263F4 <AmiBlitz3.ab3@9051>    BEQ.w JL_0_6BB4
000263F6 <AmiBlitz3.ab3@9052>   MOVEA.l D0,A2
000263F8 <AmiBlitz3.ab3@9053>   SUBQ.w #4,A2
000263FC <AmiBlitz3.ab3@9054>    BSR.w JL_0_6E34
00026400 <AmiBlitz3.ab3@9057>    MOVEM.l (A7)+,D0/D2-D3
00026404 <AmiBlitz3.ab3@9060>    MOVEM.l (A7)+,D1/A0/A2
00026408 <AmiBlitz3.ab3@9061>   MOVEM.l D1-D2,-(A7)
0002640C <AmiBlitz3.ab3@9062>   TST.w $1A(A1)
00026410 <AmiBlitz3.ab3@9063>    BNE.w JL_0_6BD0
00026414 <AmiBlitz3.ab3@9064>   CLR.w $A(A1)
00026418 <AmiBlitz3.ab3@9065> BRA.w JL_0_6C5E
0002641E <AmiBlitz3.ab3@9068>   ADDQ.w #1,globalvarpointer
00026426 <AmiBlitz3.ab3@9069>   BCLR #$0,globalvarpointer+1
0002642E <AmiBlitz3.ab3@9070>   MOVE.w globalvarpointer,$A(A1)
00026432 <AmiBlitz3.ab3@9071>   CMP.w #-$12D,D1
00026436 <AmiBlitz3.ab3@9072>    BNE.w JL_0_6C16
0002643E <AmiBlitz3.ab3@9073>   MOVE.w $A(A1),movestdn+2
00026446 <AmiBlitz3.ab3@9074>   MOVE.w $A(A1),pusha3+2
0002644E <AmiBlitz3.ab3@9075>   MOVE.w $A(A1),pusha32+2
00026456 <AmiBlitz3.ab3@9076>   MOVE.w $A(A1),pulla3+2
0002645E <AmiBlitz3.ab3@9077>   MOVE.w $A(A1),geta3+2
00026462 <AmiBlitz3.ab3@9080>    CMP.w #-$3E9,D1
00026466 <AmiBlitz3.ab3@9081>    BNE.w JL_0_6C3E
0002646E <AmiBlitz3.ab3@9082>   MOVE.w $A(A1),dataget+2
00026476 <AmiBlitz3.ab3@9083>   MOVE.w $A(A1),dataput+2
0002647E <AmiBlitz3.ab3@9084>   MOVE.w $A(A1),rescode+6
00026486 <AmiBlitz3.ab3@9085>   MOVE.w $A(A1),rescode2+2
0002648C <AmiBlitz3.ab3@9088>   ADDQ.w #2,globalvarpointer
00026490 <AmiBlitz3.ab3@9089>   TST.w $1A(A1)
00026494 <AmiBlitz3.ab3@9090>    BMI.w JL_0_6C52
0002649A <AmiBlitz3.ab3@9091>   ADDQ.w #2,globalvarpointer
0002649E <AmiBlitz3.ab3@9094>   MOVEM.l D1/A1,-(A7)
000264A2 <AmiBlitz3.ab3@9095>   BSR.w uselib2
000264A6 <AmiBlitz3.ab3@9096>   MOVEM.l (A7)+,D1/A1
000264A8 <AmiBlitz3.ab3@9099>   MOVE.w D1,D2
000264AC <AmiBlitz3.ab3@9100>   MOVE.l $16(A1),D1
000264B0 <AmiBlitz3.ab3@9101>    BSR.w uselib2_org
000264B4 <AmiBlitz3.ab3@9102>   MOVE.l $1C(A1),D1
000264B8 <AmiBlitz3.ab3@9103>    BSR.w uselib2_org
000264BC <AmiBlitz3.ab3@9104>   MOVEM.l (A7)+,D1-D2
000264C2 <AmiBlitz3.ab3@9106>   MOVE.b (a7)+,debugmode
000264C4 <AmiBlitz3.ab3@9109> RTS
000264C6 <AmiBlitz3.ab3@9113>   MOVEQ.l #$00,D2
000264CC <AmiBlitz3.ab3@9116>   MOVEA.l tokeslist,A2
000264CE <AmiBlitz3.ab3@9117>   CMPA.l D2,A2
000264D2 <AmiBlitz3.ab3@9118>    BEQ.w JL_0_6CE0
000264D4 <AmiBlitz3.ab3@9119>   MOVE.l A2,-(A7)
000264D6 <AmiBlitz3.ab3@9122>   MOVEQ.l #$00,D3
000264DA <AmiBlitz3.ab3@9125>   MOVEA.l $8(A2),A3
000264DC <AmiBlitz3.ab3@9126>   CMPA.l D3,A3
000264E0 <AmiBlitz3.ab3@9127>    BEQ.w JL_0_6CD2
000264E2 <AmiBlitz3.ab3@9128>   MOVE.l A3,-(A7)
000264E6 <AmiBlitz3.ab3@9129>   MOVEM.l D2-D3/A2-A3,-(A7)
000264EA <AmiBlitz3.ab3@9130>   MOVE.w $4(A2),D1
000264EE <AmiBlitz3.ab3@9131>   MOVE.w $6(A2),D2
000264F2 <AmiBlitz3.ab3@9132>    BSR.w JL_0_6CE2
000264F6 <AmiBlitz3.ab3@9133>   MOVEM.l (A7)+,D2-D3/A2-A3
000264FC <AmiBlitz3.ab3@9134>   MOVE.w dontwrite,D0
00026500 <AmiBlitz3.ab3@9135>    BEQ.w JL_0_6CBE
00026502 <AmiBlitz3.ab3@9138>   MOVEA.l (A3),A3
00026504 <AmiBlitz3.ab3@9139>   CMPA.l D3,A3
00026508 <AmiBlitz3.ab3@9140>    BNE.w JL_0_6CB2
0002650C <AmiBlitz3.ab3@9141> BRA.w JL_0_6CCC
00026510 <AmiBlitz3.ab3@9144>   MOVEA.l $4(A3),A0
00026512 <AmiBlitz3.ab3@9145>   MOVE.l D7,(A0)
00026514 <AmiBlitz3.ab3@9146>   MOVEA.l (A3),A3
00026516 <AmiBlitz3.ab3@9147>   CMPA.l D3,A3
0002651A <AmiBlitz3.ab3@9148>    BNE.w JL_0_6CBE
0002651C <AmiBlitz3.ab3@9151>   MOVE.l (A7)+,D3
00026520 <AmiBlitz3.ab3@9152> BRA.w JL_0_6C88
00026522 <AmiBlitz3.ab3@9155>    MOVEA.l (A2),A2
00026524 <AmiBlitz3.ab3@9156>   CMPA.l D2,A2
00026528 <AmiBlitz3.ab3@9157>    BNE.w JL_0_6C86
0002652A <AmiBlitz3.ab3@9158>   MOVE.l (A7)+,D2
0002652E <AmiBlitz3.ab3@9159> BRA.w JL_0_6C78
00026530 <AmiBlitz3.ab3@9162> RTS
00026532 <AmiBlitz3.ab3@9166>   MOVE.w D2,-(A7)
00026536 <AmiBlitz3.ab3@9167>    BSR.w searchinstr
00026538 <AmiBlitz3.ab3@9168>   MOVE.w (A7)+,D2
00026540 <AmiBlitz3.ab3@9169>   BCLR #$7,blitzmode
00026544 <AmiBlitz3.ab3@9170>   BCLR #$E,D2
00026548 <AmiBlitz3.ab3@9171>    BEQ.w JL_0_6D02
00026550 <AmiBlitz3.ab3@9172>   BSET #$7,blitzmode
00026552 <AmiBlitz3.ab3@9175>   TST.w (A3)
00026556 <AmiBlitz3.ab3@9176>    BEQ.w JL_0_6DAC
0002655C <AmiBlitz3.ab3@9177>   BTST #$2,$1(A3)
00026560 <AmiBlitz3.ab3@9178>    BNE.w tokeerr
00026566 <AmiBlitz3.ab3@9179>   BTST #$3,$1(A3)
0002656A <AmiBlitz3.ab3@9180>    BNE.w tokeerr
0002656E <AmiBlitz3.ab3@9181>   LEA $6(A3),A3
00026570 <AmiBlitz3.ab3@9184>   MOVE.w (A3)+,D0
00026574 <AmiBlitz3.ab3@9185>    BMI.w tokeerr
00026578 <AmiBlitz3.ab3@9186>   ANDI.w #$FF,D0
0002657A <AmiBlitz3.ab3@9187>   ADDA.w D0,A3
0002657C <AmiBlitz3.ab3@9188>   ADDQ.w #1,A3
0002657E <AmiBlitz3.ab3@9189>   EXG.l D0,A3
00026582 <AmiBlitz3.ab3@9190>   BCLR #$0,D0
00026584 <AmiBlitz3.ab3@9191>   EXG.l D0,A3
00026586 <AmiBlitz3.ab3@9192>   SUBQ.w #1,D2
0002658A <AmiBlitz3.ab3@9193>    BPL.w JL_0_6D98
0002658C <AmiBlitz3.ab3@9194>   TST.w (A3)
00026590 <AmiBlitz3.ab3@9195>    BNE.w JL_0_6D76
00026594 <AmiBlitz3.ab3@9196>   MOVE.l $2(A3),D0
00026598 <AmiBlitz3.ab3@9197>   OR.l $A(A3),D0
0002659C <AmiBlitz3.ab3@9198>    BNE.w JL_0_6D76
000265A2 <AmiBlitz3.ab3@9199>   BTST #$0,$9(A3)
000265A6 <AmiBlitz3.ab3@9200>    BNE.w JL_0_6D76
000265AA <AmiBlitz3.ab3@9201>   MOVE.l $6(A3),D7
000265AE <AmiBlitz3.ab3@9202>   MOVE.w $0(A2,D7.L),D0
000265B2 <AmiBlitz3.ab3@9203>   ANDI.w #$F000,D0
000265B6 <AmiBlitz3.ab3@9204>   CMP.w #-$6000,D0
000265BA <AmiBlitz3.ab3@9205>    BEQ.w JL_0_6D76
000265BE <AmiBlitz3.ab3@9208>   SUB.l $12(A2),D7
000265C2 <AmiBlitz3.ab3@9209>   ADD.l $28(A2),D7
000265C4 <AmiBlitz3.ab3@9210> RTS
000265CA <AmiBlitz3.ab3@9214>   LEA cutejsr,A0
000265D0 <AmiBlitz3.ab3@9217>   MOVE.l destpointer,-(A7)
000265D8 <AmiBlitz3.ab3@9218>   MOVE.w #$FFFF,lasta6
000265DA <AmiBlitz3.ab3@9221>    JSR (A0)
000265DE <AmiBlitz3.ab3@9222>   MOVE.w #$4E75,D1
000265E2 <AmiBlitz3.ab3@9223>    BSR.w writeword
000265E4 <AmiBlitz3.ab3@9224>   MOVE.l (A7)+,D7
000265E6 <AmiBlitz3.ab3@9225> RTS
000265E8 <AmiBlitz3.ab3@9229>   TST.w (A3)+
000265EC <AmiBlitz3.ab3@9230>    BEQ.w JL_0_6DA4
000265EE <AmiBlitz3.ab3@9231>   ADDQ.w #2,A3
000265F2 <AmiBlitz3.ab3@9232> BRA.w JL_0_6D98
000265F6 <AmiBlitz3.ab3@9235>   LEA $C(A3),A3
000265FA <AmiBlitz3.ab3@9236> BRA.w JL_0_6D20
000265FC <AmiBlitz3.ab3@9240>   TST.w D2
00026600 <AmiBlitz3.ab3@9241>    BNE.w tokeerr
00026604 <AmiBlitz3.ab3@9242>   TST.w $6(A3)
00026608 <AmiBlitz3.ab3@9243>    BNE.w JL_0_6DE4
0002660C <AmiBlitz3.ab3@9244>   MOVE.l $8(A3),D0
00026610 <AmiBlitz3.ab3@9245>   OR.l $10(A3),D0
00026614 <AmiBlitz3.ab3@9246>    BNE.w JL_0_6DE4
0002661A <AmiBlitz3.ab3@9247>   BTST #$0,$F(A3)
0002661E <AmiBlitz3.ab3@9248>    BNE.w JL_0_6DE4
00026622 <AmiBlitz3.ab3@9249>   MOVE.l $C(A3),D7
00026626 <AmiBlitz3.ab3@9250>   MOVE.w $0(A2,D7.L),D0
0002662A <AmiBlitz3.ab3@9251>   ANDI.w #$F000,D0
0002662E <AmiBlitz3.ab3@9252>   CMP.w #-$6000,D0
00026632 <AmiBlitz3.ab3@9253>    BNE.w JL_0_6D6C
00026634 <AmiBlitz3.ab3@9256>   MOVE.l A3,D1
00026636 <AmiBlitz3.ab3@9257>   SUB.l A2,D1
0002663C <AmiBlitz3.ab3@9258>   LEA Amakelibsub,A0
00026640 <AmiBlitz3.ab3@9259> BRA.w JL_0_6D7C
00026646 <AmiBlitz3.ab3@9263>   MOVEA.l _execbase,A6
0002664C <AmiBlitz3.ab3@9264>   MOVEA.l tokeslist,A2
00026652 <AmiBlitz3.ab3@9265>   CLR.l tokeslist
00026656 <AmiBlitz3.ab3@9268>     CMPA.w #$0,A2
0002665A <AmiBlitz3.ab3@9269>      BEQ.w JL_0_6E32
0002665E <AmiBlitz3.ab3@9270>     MOVEA.l $8(A2),A3
00026662 <AmiBlitz3.ab3@9273>       CMPA.w #$0,A3
00026666 <AmiBlitz3.ab3@9274>        BEQ.w JL_0_6E24
00026668 <AmiBlitz3.ab3@9275>       MOVEA.l A3,A1
0002666A <AmiBlitz3.ab3@9276>       MOVEA.l (A3),A3
0002666C <AmiBlitz3.ab3@9277>       MOVEQ.l #$08,D0
00026672 <AmiBlitz3.ab3@9278>       MOVE.l mempool,a0
00026678 <AmiBlitz3.ab3@9279>       MOVEA.l _execbase,A6
0002667C <AmiBlitz3.ab3@9280>       JSR _FreePooled(A6)
00026680 <AmiBlitz3.ab3@9281> BRA.w JL_0_6E0E
00026682 <AmiBlitz3.ab3@9284>     MOVEA.l A2,A1
00026684 <AmiBlitz3.ab3@9285>     MOVEA.l (A2),A2
00026686 <AmiBlitz3.ab3@9286>     MOVEQ.l #$0C,D0
0002668C <AmiBlitz3.ab3@9287>     MOVE.l mempool,a0
00026692 <AmiBlitz3.ab3@9288>     MOVEA.l _execbase,A6
00026696 <AmiBlitz3.ab3@9289>     JSR _FreePooled(A6)
0002669A <AmiBlitz3.ab3@9290> BRA.w JL_0_6E02
0002669C <AmiBlitz3.ab3@9293> RTS
000266A0 <AmiBlitz3.ab3@9297>   MOVEM.l D3-D5/A1-A6,-(A7)
000266A2 <AmiBlitz3.ab3@9298>   MOVEA.l A1,A4
000266A4 <AmiBlitz3.ab3@9301>   MOVE.l (A2)+,D3
000266A8 <AmiBlitz3.ab3@9302>   MOVE.w $0(A4,D3.L),D5
000266AC <AmiBlitz3.ab3@9303>    BPL.w JL_0_6E7A
000266B0 <AmiBlitz3.ab3@9304>   TST.l $2C(A4)
000266B4 <AmiBlitz3.ab3@9305>    BEQ.w JL_0_6E5E
000266BA <AmiBlitz3.ab3@9306>   TST.b debugmode
000266BE <AmiBlitz3.ab3@9307>    BNE.w JL_0_6E5E
000266C2 <AmiBlitz3.ab3@9308>   CMP.l $2C(A4),D3
000266C6 <AmiBlitz3.ab3@9309>    BCC.w JL_0_6E7A
000266CA <AmiBlitz3.ab3@9312>   BCLR #$F,D5
000266CE <AmiBlitz3.ab3@9313>   MOVE.w $2(A4,D3.L),D4
000266D2 <AmiBlitz3.ab3@9314>   SUB.l $12(A4),D3
000266D6 <AmiBlitz3.ab3@9315>   ADD.l $28(A4),D3
000266DA <AmiBlitz3.ab3@9316>   MOVEM.l D2/A2/A4,-(A7)
000266DE <AmiBlitz3.ab3@9317>    BSR.w JL_0_6E86
000266E2 <AmiBlitz3.ab3@9318>   MOVEM.l (A7)+,D2/A2/A4
000266E4 <AmiBlitz3.ab3@9321>   SUBQ.l #1,D2
000266E8 <AmiBlitz3.ab3@9322>    BNE.w JL_0_6E3A
000266EC <AmiBlitz3.ab3@9323>   MOVEM.l (A7)+,D3-D5/A1-A6
000266EE <AmiBlitz3.ab3@9324> RTS
000266F4 <AmiBlitz3.ab3@9328>   LEA tokeslist,A3
000266FA <AmiBlitz3.ab3@9329>   MOVEA.l _execbase,A6
000266FC <AmiBlitz3.ab3@9332>   MOVE.l (A3),D0
00026700 <AmiBlitz3.ab3@9333>    BEQ.w JL_0_6EAC
00026702 <AmiBlitz3.ab3@9334>   MOVEA.l D0,A3
00026706 <AmiBlitz3.ab3@9335>   CMP.w $4(A3),D4
0002670A <AmiBlitz3.ab3@9336>    BNE.w JL_0_6E90
0002670E <AmiBlitz3.ab3@9337>   CMP.w $6(A3),D5
00026712 <AmiBlitz3.ab3@9338>    BNE.w JL_0_6E90
00026716 <AmiBlitz3.ab3@9339> BRA.w JL_0_6ED0
00026718 <AmiBlitz3.ab3@9342>   MOVEQ.l #$0C,D0
0002671A <AmiBlitz3.ab3@9343>   MOVEQ.l #$01,D1
00026720 <AmiBlitz3.ab3@9344>   MOVE.l mempool,a0
00026724 <AmiBlitz3.ab3@9345>   JSR _AllocPooled(a6)
00026726 <AmiBlitz3.ab3@9347>   MOVEA.l D0,A3
0002672C <AmiBlitz3.ab3@9348>   MOVE.l tokeslist,(A3)
00026732 <AmiBlitz3.ab3@9349>   MOVE.l A3,tokeslist
00026736 <AmiBlitz3.ab3@9350>   MOVE.w D4,$4(A3)
0002673A <AmiBlitz3.ab3@9351>   MOVE.w D5,$6(A3)
0002673E <AmiBlitz3.ab3@9352>   CLR.l $8(A3)
00026740 <AmiBlitz3.ab3@9355>   MOVEQ.l #$08,D0
00026742 <AmiBlitz3.ab3@9356>   MOVEQ.l #$01,D1
00026748 <AmiBlitz3.ab3@9357>   MOVE.l mempool,a0
0002674C <AmiBlitz3.ab3@9358>   JSR _AllocPooled(a6)
0002674E <AmiBlitz3.ab3@9360>   MOVEA.l D0,A0
00026752 <AmiBlitz3.ab3@9361>   MOVE.l D3,$4(A0)
00026756 <AmiBlitz3.ab3@9362>   MOVE.l $8(A3),(A0)
0002675A <AmiBlitz3.ab3@9363>   MOVE.l A0,$8(A3)
0002675C <AmiBlitz3.ab3@9364>   MOVE.w D4,D1
00026760 <AmiBlitz3.ab3@9365> BRA.w searchinstr
00026764 <AmiBlitz3.ab3@9368> tokeslist: Ds.l 1
00026768 <AmiBlitz3.ab3@9381>   BEQ.w uselib2_org__skip
0002676A <AmiBlitz3.ab3@9382>   MOVE.l A1,-(A7)
0002676C <AmiBlitz3.ab3@9383>   ADDA.l D1,A1
0002676E <AmiBlitz3.ab3@9384>   ADDQ.w #6,A1
00026770 <AmiBlitz3.ab3@9387>     MOVE.w (A1)+,D1
00026774 <AmiBlitz3.ab3@9388>     BEQ.w uselib2_org__done
00026776 <AmiBlitz3.ab3@9389>     CMP.w D2,D1
0002677A <AmiBlitz3.ab3@9390>     BEQ.w uselib2_org__skip2
0002677C <AmiBlitz3.ab3@9391>     MOVE.l A1,-(A7)
00026780 <AmiBlitz3.ab3@9392>     BSR.w uselib
00026782 <AmiBlitz3.ab3@9393>     MOVEA.l (A7)+,A1
00026784 <AmiBlitz3.ab3@9396>     ADDQ.w #2,A1
00026788 <AmiBlitz3.ab3@9397> BRA.w uselib2_org__loop
0002678A <AmiBlitz3.ab3@9400>   MOVEA.l (A7)+,A1
0002678C <AmiBlitz3.ab3@9403> RTS
00026792 <AmiBlitz3.ab3@9407>   MOVEA.l libpointer,A1
00026796 <AmiBlitz3.ab3@9410>   CMPA.w #$0,A1
0002679A <AmiBlitz3.ab3@9411>    BEQ.b JL_0_6F36
0002679E <AmiBlitz3.ab3@9412>   CMP.w $4(A1),D1
000267A2 <AmiBlitz3.ab3@9413>    BEQ.w JL_0_6F34
000267A4 <AmiBlitz3.ab3@9414>   MOVEA.l (A1),A1
000267A8 <AmiBlitz3.ab3@9415> BRA.w JL_0_6F20
000267AA <AmiBlitz3.ab3@9418>   MOVEQ.l #-$01,D1
000267AC <AmiBlitz3.ab3@9421> RTS
000267B0 <AmiBlitz3.ab3@9425>   MOVEM.l d0/a2,-(a7)
000267B2 <AmiBlitz3.ab3@9426>   MOVEQ #0,d0
000267B8 <AmiBlitz3.ab3@9427>   LEA instrtab+4,a2
000267BA <AmiBlitz3.ab3@9428>   MOVE.w d1,d0
000267BC <AmiBlitz3.ab3@9429>   ASL.l #3,d0
000267C0 <AmiBlitz3.ab3@9430>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000267C6 <AmiBlitz3.ab3@9431>   CMP.l #0,a1
000267CA <AmiBlitz3.ab3@9432>   BNE JL_0_6F54b
000267D0 <AmiBlitz3.ab3@9434>   MOVEA.l libpointer,A1
000267D4 <AmiBlitz3.ab3@9437>     CMPA.w #$0,A1
000267D8 <AmiBlitz3.ab3@9438>     BEQ.w noliberr
000267DC <AmiBlitz3.ab3@9439>     CMP.w $4(A1),D1
000267E0 <AmiBlitz3.ab3@9440>     BEQ.w JL_0_6F54
000267E2 <AmiBlitz3.ab3@9441>    MOVEA.l (A1),A1
000267E6 <AmiBlitz3.ab3@9442> BRA.w JL_0_6F3E
000267EA <AmiBlitz3.ab3@9445>   MOVE.l a1,0(a2,d0.l)
000267EE <AmiBlitz3.ab3@9448>   MOVEM.l (a7)+,d0/a2
000267F0 <AmiBlitz3.ab3@9449> RTS
000267F4 <AmiBlitz3.ab3@9452>   MOVEM.l d0-d1/a1,-(a7)
000267F6 <AmiBlitz3.ab3@9453>   MOVEQ #0,d0
000267FC <AmiBlitz3.ab3@9454>   LEA instrtab,a1
000267FE <AmiBlitz3.ab3@9455>   MOVE.w d1,d0
00026800 <AmiBlitz3.ab3@9456>   ASL.l #3,d0
00026804 <AmiBlitz3.ab3@9457>   MOVE.l 0(a1,d0.l),a3
00026808 <AmiBlitz3.ab3@9458>   MOVE.l 4(a1,d0.l),a2
0002680E <AmiBlitz3.ab3@9459>   CMP.l #0,a3
00026812 <AmiBlitz3.ab3@9460>   BNE JL_0_6F92b
00026818 <AmiBlitz3.ab3@9462>   MOVEA.l libpointer,A2
0002681C <AmiBlitz3.ab3@9465>   CMPA.w #$0,A2
00026820 <AmiBlitz3.ab3@9466>   BEQ.w notokerr
00026824 <AmiBlitz3.ab3@9467>   CMP.w $E(A2),D1
00026828 <AmiBlitz3.ab3@9468>   BCS.w JL_0_6FB8
0002682C <AmiBlitz3.ab3@9469>   CMP.w $10(A2),D1
00026830 <AmiBlitz3.ab3@9470>   BCC.w JL_0_6FB8
00026834 <AmiBlitz3.ab3@9471>   LEA $30(A2),A3
00026838 <AmiBlitz3.ab3@9472>   TST.w $4(A2)
0002683C <AmiBlitz3.ab3@9473>   BPL.w JL_0_6FA6
00026840 <AmiBlitz3.ab3@9476>     CMP.w $E(A2),D1
00026844 <AmiBlitz3.ab3@9477>     BEQ.w JL_0_6F92
00026846 <AmiBlitz3.ab3@9478>     SUBQ.w #1,D1
0002684A <AmiBlitz3.ab3@9479>     MOVEA.l $2(A3),A3
0002684E <AmiBlitz3.ab3@9480> BRA.w JL_0_6F80
00026852 <AmiBlitz3.ab3@9483>   MOVE.l a3,0(a1,d0.l)
00026856 <AmiBlitz3.ab3@9484>   MOVE.l a2,4(a1,d0.l)
0002685A <AmiBlitz3.ab3@9487>   MOVEM.l (a7)+,d0-d1/a1
0002685E <AmiBlitz3.ab3@9488>   MOVEM.l D1/A1-a3,-(A7)
00026862 <AmiBlitz3.ab3@9489>   CMP.w #1,(a3)
00026866 <AmiBlitz3.ab3@9490>   BNE.s ex10
0002686E <AmiBlitz3.ab3@9491>   CMP.l #$12345678,$e(a3)
00026872 <AmiBlitz3.ab3@9492>   BNE.s ex10
00026878 <AmiBlitz3.ab3@9493>   CMP.w #$ffff,$16(a3)
0002687C <AmiBlitz3.ab3@9494>   BNE.s ex10
00026880 <AmiBlitz3.ab3@9495>   MOVE.l $12(a3),d1
00026884 <AmiBlitz3.ab3@9496>   BEQ.s ex10
0002688A <AmiBlitz3.ab3@9497>   LEA pluginbase,a3
0002688E <AmiBlitz3.ab3@9499> JMP 0(a2,d1.l)                                             ;plugin
00026892 <AmiBlitz3.ab3@9502>   MOVEM.l (A7)+,D1/A1-a3
00026898 <AmiBlitz3.ab3@9503>   JSR stripspaces
0002689A <AmiBlitz3.ab3@9504>   MOVEQ #0,d0
0002689C <AmiBlitz3.ab3@9505>   MOVE.b (a5)+,d0
000268A2 <AmiBlitz3.ab3@9506>   MOVE.w d0,lastchar
000268A4 <AmiBlitz3.ab3@9507>   ADDQ.l #4,a7
000268A6 <AmiBlitz3.ab3@9508> RTS
000268A8 <AmiBlitz3.ab3@9512>   MOVEA.l A2,A1
000268AE <AmiBlitz3.ab3@9513>   CLR.b newmode
000268B2 <AmiBlitz3.ab3@9514>   MOVE.w $4(A1),D1
000268B6 <AmiBlitz3.ab3@9517>   BSR.w uselib3
000268BA <AmiBlitz3.ab3@9518>   MOVEM.l (A7)+,D1/A1-a3
000268BC <AmiBlitz3.ab3@9519> RTS
000268C2 <AmiBlitz3.ab3@9522>   MOVE.w globalvarpointer,-(a7)
000268CA <AmiBlitz3.ab3@9523>   MOVE.w #$8004,globalvarpointer
000268CE <AmiBlitz3.ab3@9524>   BSR.w uselib3
000268D4 <AmiBlitz3.ab3@9525>   MOVE.w (a7)+,globalvarpointer
000268D8 <AmiBlitz3.ab3@9526>   MOVEM.l (A7)+,D1/A1-a3
000268DA <AmiBlitz3.ab3@9527> RTS
000268DE <AmiBlitz3.ab3@9530>     CMP.w $E(A2),D1
000268E2 <AmiBlitz3.ab3@9531>     BEQ.w JL_0_6F92
000268E4 <AmiBlitz3.ab3@9532>     SUBQ.w #1,D1
000268E8 <AmiBlitz3.ab3@9533>     MOVEA.l $2(A3),A3
000268EC <AmiBlitz3.ab3@9534> BRA.w JL_0_6FA6
000268EE <AmiBlitz3.ab3@9537>   MOVEA.l (A2),A2
000268F2 <AmiBlitz3.ab3@9538> BRA.w JL_0_6F5C
000268F8 <AmiBlitz3.ab3@9541> JMP writeword
000268FC <AmiBlitz3.ab3@9544> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026900 <AmiBlitz3.ab3@9545> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026904 <AmiBlitz3.ab3@9546> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026906 <AmiBlitz3.ab3@9552>   TST.l D0
0002690A <AmiBlitz3.ab3@9553>   BEQ.w exit_loadlibsfile
0002690C <AmiBlitz3.ab3@9554>     MOVE.l D0,D6                                           ;d6=len
00026912 <AmiBlitz3.ab3@9555>     MOVEA.l _dosbase,A6
00026918 <AmiBlitz3.ab3@9556>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002691C <AmiBlitz3.ab3@9557>     JSR _Open(A6)
0002691E <AmiBlitz3.ab3@9558>     MOVE.l D0,D7
00026922 <AmiBlitz3.ab3@9559>     BEQ.w exit_loadlibsfile
00026924 <AmiBlitz3.ab3@9560>       MOVE.l D6,D0
00026926 <AmiBlitz3.ab3@9561>       MOVEQ.l #$01,D1
0002692C <AmiBlitz3.ab3@9562>       MOVEA.l _execbase,A6
00026932 <AmiBlitz3.ab3@9563>       MOVE.l mempool,a0
00026936 <AmiBlitz3.ab3@9564>       JSR _AllocPooled(a6)
00026938 <AmiBlitz3.ab3@9565>       MOVE.l D0,D5                                         ;start address
0002693A <AmiBlitz3.ab3@9567>       MOVE.l D7,D1                                         ; handle
0002693C <AmiBlitz3.ab3@9568>       MOVE.l D5,D2                                         ; buffer addr
0002693E <AmiBlitz3.ab3@9569>       MOVE.l D6,D3                                         ; size
00026944 <AmiBlitz3.ab3@9570>       MOVEA.l _dosbase,A6
00026948 <AmiBlitz3.ab3@9571>       JSR _Read(A6)
0002694A <AmiBlitz3.ab3@9572>       MOVE.l D7,D1
0002694E <AmiBlitz3.ab3@9573>       JSR _Close(A6)
00026950 <AmiBlitz3.ab3@9575>       MOVEA.l D5,A0                                        ; buffer addr
00026952 <AmiBlitz3.ab3@9581>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026956 <AmiBlitz3.ab3@9582>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
0002695A <AmiBlitz3.ab3@9583>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
0002695C <AmiBlitz3.ab3@9584>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002695E <AmiBlitz3.ab3@9585>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026960 <AmiBlitz3.ab3@9586>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026964 <AmiBlitz3.ab3@9587>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026966 <AmiBlitz3.ab3@9588>           ADD.l D0,D0                                      ;   verdoppele D0
00026968 <AmiBlitz3.ab3@9589>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
0002696C <AmiBlitz3.ab3@9590>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00026970 <AmiBlitz3.ab3@9591>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026974 <AmiBlitz3.ab3@9592>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026976 <AmiBlitz3.ab3@9593>           CMPA.l A0,A2
0002697A <AmiBlitz3.ab3@9594>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00026980 <AmiBlitz3.ab3@9595>             MOVE.l -$8(A2),$20(A1)                         ;
00026984 <AmiBlitz3.ab3@9596>             MOVE.l A2,$24(A1)                              ;
00026988 <AmiBlitz3.ab3@9597> BRA.w JL_0_7010
0002698A <AmiBlitz3.ab3@9600>       MOVE.l D5,D0
0002698C <AmiBlitz3.ab3@9603> RTS
000269B6 <AmiBlitz3.ab3@9607>   !basic
00026A2A <AmiBlitz3.ab3@9608>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026A5E <AmiBlitz3.ab3@9609>    dos_Delete{tempmapping$}
00026AA2 <AmiBlitz3.ab3@9610>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026AC0 <AmiBlitz3.ab3@9611>   !asm
00026AC6 <AmiBlitz3.ab3@9613>   LEA libpointer,A3
00026ACC <AmiBlitz3.ab3@9617>   MOVE.l size_deflibs,D0
00026AD2 <AmiBlitz3.ab3@9618>   MOVE.l deflib,d1
00026AD6 <AmiBlitz3.ab3@9619>   BEQ 'l1
00026ADA <AmiBlitz3.ab3@9620> BRA 'l2
00026AE0 <AmiBlitz3.ab3@9623>   MOVE.l #str_path_deflibs,D1
00026AE4 <AmiBlitz3.ab3@9626>   BSR.w load_libsfile
00026AEA <AmiBlitz3.ab3@9627>   MOVE.l D0,ptr_deflibs
00026AF0 <AmiBlitz3.ab3@9630>   MOVE.l size_acidlibs,D0
00026AF6 <AmiBlitz3.ab3@9631>   MOVE.l #str_path_acidlibs,D1
00026AFA <AmiBlitz3.ab3@9632>   BSR.w load_libsfile
00026B00 <AmiBlitz3.ab3@9633>   MOVE.l D0,ptr_acidlibs
00026B02 <AmiBlitz3.ab3@9637>   CLR.l (A3)
00026B08 <AmiBlitz3.ab3@9638>   MOVE.l A3,ptr_userlibs
00026B0E <AmiBlitz3.ab3@9643>   LEA str_libfilename,A0
00026B14 <AmiBlitz3.ab3@9644>   LEA str_path_userlibs,A1
00026B16 <AmiBlitz3.ab3@9647>     MOVE.b (A1)+,(A0)+
00026B1A <AmiBlitz3.ab3@9648>   BNE.b JL_0_708E
00026B1C <AmiBlitz3.ab3@9650>   SUBQ.w #1,A0
00026B20 <AmiBlitz3.ab3@9651>   MOVE.b #$2F,(A0)+
00026B22 <AmiBlitz3.ab3@9654>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026B28 <AmiBlitz3.ab3@9656>   LEA ptr_userlibs_list,A2
00026B2E <AmiBlitz3.ab3@9657>   MOVEA.l ptr_userlibs,A3
00026B34 <AmiBlitz3.ab3@9658>   MOVEA.l _dosbase,A6
00026B36 <AmiBlitz3.ab3@9663>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026B3A <AmiBlitz3.ab3@9664>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00026B3C <AmiBlitz3.ab3@9666>       CLR.l (A3)
00026B3E <AmiBlitz3.ab3@9667>       ADDQ.w #4,A7
00026B68 <AmiBlitz3.ab3@9668>       !basic
00026B7C <AmiBlitz3.ab3@9669>       If fid<>-1
00026B86 <AmiBlitz3.ab3@9670>         file_Close{fid}
00026B92 <AmiBlitz3.ab3@9671>         fid = -1
00026BB0 <AmiBlitz3.ab3@9673>       !asm
00026BB4 <AmiBlitz3.ab3@9674> BRA.w process_libraries
00026BB6 <AmiBlitz3.ab3@9677>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00026BBA <AmiBlitz3.ab3@9678>       TST.w $4(A2)                                         ; naechste addresse pruefen
00026BBE <AmiBlitz3.ab3@9679>     BEQ.b JL_0_70BA
00026BC2 <AmiBlitz3.ab3@9681>     LEA $6(A2),A1
00026BC4 <AmiBlitz3.ab3@9682>     MOVEA.l (A7),A0
00026BC6 <AmiBlitz3.ab3@9685>       MOVE.b (A1)+,(A0)+
00026BCA <AmiBlitz3.ab3@9686>     BNE.w JL_0_70D4
00026BCC <AmiBlitz3.ab3@9690>     MOVE.l A0,-(A7)
00026BD2 <AmiBlitz3.ab3@9691>     MOVE.l #str_libfilename,D1
00026BD4 <AmiBlitz3.ab3@9692>     MOVEQ.l #-$02,D2
00026BDA <AmiBlitz3.ab3@9693>     MOVEA.l _dosbase,A6
00026BDE <AmiBlitz3.ab3@9694>      JSR _Lock(A6)
00026BE0 <AmiBlitz3.ab3@9695>     MOVE.l D0,D1
00026BE4 <AmiBlitz3.ab3@9696>      BEQ.w JL_0_7156
00026BE6 <AmiBlitz3.ab3@9697>     MOVEA.l (A7),A0
00026BEC <AmiBlitz3.ab3@9698>     MOVE.b #$2F,-$1(A0)
00026BEE <AmiBlitz3.ab3@9701>     MOVE.l D1,-(A7)
00026BF4 <AmiBlitz3.ab3@9702>     MOVE.l #ptr_parameterstore,D2
00026BFA <AmiBlitz3.ab3@9703>     MOVEA.l _dosbase,A6
00026BFE <AmiBlitz3.ab3@9704>     JSR _Examine(A6)
00026C00 <AmiBlitz3.ab3@9705>     TST.l D0
00026C04 <AmiBlitz3.ab3@9706>      BEQ.w JL_0_7150
00026C0A <AmiBlitz3.ab3@9709>     LEA fib_FileName,A0
00026C0E <AmiBlitz3.ab3@9710>     BSR.w check_for_infoextention
00026C12 <AmiBlitz3.ab3@9711>     BEQ.w JL_0_7150
00026C3C <AmiBlitz3.ab3@9714>     !basic
00026CC0 <AmiBlitz3.ab3@9715>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00026CDE <AmiBlitz3.ab3@9716>     !asm
00026CE4 <AmiBlitz3.ab3@9717>     MOVE.l #str_libfilename,D1
00026CE8 <AmiBlitz3.ab3@9718>     BSR.w open_userlibfile
00026CEA <AmiBlitz3.ab3@9721>     MOVE.l (A7)+,D1
00026CF0 <AmiBlitz3.ab3@9722>     MOVEA.l _dosbase,A6
00026CF4 <AmiBlitz3.ab3@9723>     JSR _UnLock(A6)
00026CF6 <AmiBlitz3.ab3@9726>     ADDQ.w #4,A7
00026CFA <AmiBlitz3.ab3@9727> BRA.w JL_0_70BA
00026D00 <AmiBlitz3.ab3@9730>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026D06 <AmiBlitz3.ab3@9731>   MOVEA.l _dosbase,A6
00026D0A <AmiBlitz3.ab3@9732>    JSR _Open(A6)
00026D0C <AmiBlitz3.ab3@9733>   MOVE.l D0,D7
00026D10 <AmiBlitz3.ab3@9734>    BEQ.w exit_userlibfile
00026D12 <AmiBlitz3.ab3@9737>   MOVE.l D7,D1                                             ; filehandle
00026D18 <AmiBlitz3.ab3@9738>   MOVE.l #optstuff,D2                                     ; buffer
00026D1E <AmiBlitz3.ab3@9739>   MOVEA.l _dosbase,A6
00026D20 <AmiBlitz3.ab3@9740>   MOVEQ.l #$20,D3                                          ; size
00026D24 <AmiBlitz3.ab3@9741>   JSR _Read(A6)
00026D2A <AmiBlitz3.ab3@9744>   MOVE.l optstuff+28,D6
00026D2C <AmiBlitz3.ab3@9745>   LSL.l #2,D6
00026D2E <AmiBlitz3.ab3@9746>   MOVE.l D6,D0
00026D30 <AmiBlitz3.ab3@9747>   MOVEQ.l #$01,D1
00026D36 <AmiBlitz3.ab3@9748>   MOVEA.l _execbase,A6
00026D3C <AmiBlitz3.ab3@9749>   MOVE.l mempool,a0
00026D40 <AmiBlitz3.ab3@9750>   JSR _AllocPooled(a6)
00026D42 <AmiBlitz3.ab3@9751>   MOVEA.l D0,A5
00026D48 <AmiBlitz3.ab3@9754>   MOVEA.l _dosbase,A6
00026D4A <AmiBlitz3.ab3@9755>   MOVE.l D7,D1                                             ; filehandle
00026D4C <AmiBlitz3.ab3@9756>   MOVE.l A5,D2                                             ; buffer
00026D4E <AmiBlitz3.ab3@9757>   MOVE.l D6,D3                                             ; size
00026D52 <AmiBlitz3.ab3@9758>    JSR _Read(A6)
00026D54 <AmiBlitz3.ab3@9759>   MOVE.l A5,(A3)
00026D56 <AmiBlitz3.ab3@9761>   MOVE.l A5,d0
00026D58 <AmiBlitz3.ab3@9763>   MOVEA.l A5,A3
00026D5C <AmiBlitz3.ab3@9764>   MOVE.l D6,$6(A5)
00026D60 <AmiBlitz3.ab3@9765>   CLR.l $20(A5)
00026D8A <AmiBlitz3.ab3@9767>   !basic
00026D94 <AmiBlitz3.ab3@9769>   addr_libnum.l = PutD0 + 4
00026DA8 <AmiBlitz3.ab3@9770>   If fid<>-1
00026E48 <AmiBlitz3.ab3@9771>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00026E7A <AmiBlitz3.ab3@9772>     file_WriteLine{fid,currentlib$}
00026E98 <AmiBlitz3.ab3@9774>   !asm
00026E9A <AmiBlitz3.ab3@9777>   MOVE.l D7,D1                                             ; filehandle
00026EA0 <AmiBlitz3.ab3@9778>   MOVE.l #optstuff,D2                                     ; buffer
00026EA2 <AmiBlitz3.ab3@9779>   MOVEQ.l #$0C,D3                                          ; size
00026EA8 <AmiBlitz3.ab3@9780>   MOVEA.l _dosbase,A6
00026EAC <AmiBlitz3.ab3@9781>    JSR _Read(A6)
00026EB2 <AmiBlitz3.ab3@9783>   CMP.l #$C,D0
00026EB6 <AmiBlitz3.ab3@9784>    BCS.w close_and_exit_userlibfile
00026EBC <AmiBlitz3.ab3@9787>   MOVE.l optstuff+4,D0
00026EC0 <AmiBlitz3.ab3@9788>   MOVE.l D0,$20(A5)
00026EC2 <AmiBlitz3.ab3@9789>   LSL.l #2,D0
00026EC4 <AmiBlitz3.ab3@9790>   MOVE.l D0,D5
00026EC6 <AmiBlitz3.ab3@9791>   MOVEQ.l #$01,D1
00026ECC <AmiBlitz3.ab3@9792>   MOVEA.l _execbase,A6
00026ED2 <AmiBlitz3.ab3@9793>   MOVE.l mempool,a0
00026ED6 <AmiBlitz3.ab3@9794>   JSR _AllocPooled(a6)
00026EDC <AmiBlitz3.ab3@9796>   MOVEA.l _dosbase,A6
00026EE0 <AmiBlitz3.ab3@9797>   MOVE.l D0,$24(A5)
00026EE2 <AmiBlitz3.ab3@9798>   MOVE.l D7,D1
00026EE4 <AmiBlitz3.ab3@9799>   MOVE.l D0,D2
00026EE6 <AmiBlitz3.ab3@9800>   MOVE.l D5,D3
00026EEA <AmiBlitz3.ab3@9801>   JSR _Read(A6)
00026EEC <AmiBlitz3.ab3@9804>   MOVE.l D7,D1
00026EF2 <AmiBlitz3.ab3@9805>   MOVEA.l _dosbase,A6
00026EF6 <AmiBlitz3.ab3@9806> JMP _Close(A6)
00026EF8 <AmiBlitz3.ab3@9809> RTS
00026EFE <AmiBlitz3.ab3@9815>   CLR.w number_of_objects
00026F04 <AmiBlitz3.ab3@9816>   MOVEA.l end_of_tokenlist,A3
00026F0A <AmiBlitz3.ab3@9817>   MOVEA.l libpointer,A2
00026F0E <AmiBlitz3.ab3@9820>     CMPA.w #$0,A2
00026F12 <AmiBlitz3.ab3@9821>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00026F16 <AmiBlitz3.ab3@9823>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00026F1A <AmiBlitz3.ab3@9824>     BMI.w JL_0_7226
00026F1C <AmiBlitz3.ab3@9825>       LSL.w #7,D7
00026F1E <AmiBlitz3.ab3@9826>       ADDQ.w #1,D7
00026F22 <AmiBlitz3.ab3@9827>       MOVE.w D7,$E(A2)
00026F26 <AmiBlitz3.ab3@9830>     LEA $30(A2),A1
00026F2C <AmiBlitz3.ab3@9831>     LEA temp1,A4
00026F2E <AmiBlitz3.ab3@9834>       MOVE.w (A1),D0
00026F32 <AmiBlitz3.ab3@9835>       BMI.w JL_0_72AE
00026F34 <AmiBlitz3.ab3@9836>       MOVE.l A1,(A4)
00026F36 <AmiBlitz3.ab3@9837>       MOVEA.l A1,A4
00026F38 <AmiBlitz3.ab3@9838>       ADDQ.w #2,A4
00026F3A <AmiBlitz3.ab3@9839>       ADDQ.w #6,A1
00026F3E <AmiBlitz3.ab3@9840>       CMP.w #$8,D0
00026F42 <AmiBlitz3.ab3@9841>       BEQ.w JL_0_7290
00026F46 <AmiBlitz3.ab3@9842>         ANDI.w #$F,D0
00026F4A <AmiBlitz3.ab3@9843>         BNE.w JL_0_725C
00026F4E <AmiBlitz3.ab3@9844>           BSR.w skiplibreg
00026F52 <AmiBlitz3.ab3@9845>           LEA $C(A1),A1
00026F54 <AmiBlitz3.ab3@9846>           ADDQ.w #1,D7
00026F58 <AmiBlitz3.ab3@9847> BRA.w JL_0_7230
00026F5C <AmiBlitz3.ab3@9850>     BTST #$2,D0
00026F60 <AmiBlitz3.ab3@9851>     BEQ.w JL_0_7274
00026F62 <AmiBlitz3.ab3@9852>       ADDQ.w #4,A1
00026F64 <AmiBlitz3.ab3@9855>         TST.b (A1)+
00026F68 <AmiBlitz3.ab3@9856>       BPL.w JL_0_7266
00026F6C <AmiBlitz3.ab3@9857>       BSR.w aligna1
00026F70 <AmiBlitz3.ab3@9858> BRA.w JL_0_7290
00026F72 <AmiBlitz3.ab3@9861>       MOVE.w (A1)+,D0
00026F76 <AmiBlitz3.ab3@9862>       BMI.w JL_0_7290
00026F7A <AmiBlitz3.ab3@9863>       ANDI.w #$FF,D0
00026F7C <AmiBlitz3.ab3@9864>       ADDA.w D0,A1
00026F80 <AmiBlitz3.ab3@9865>       BSR.w aligna1
00026F84 <AmiBlitz3.ab3@9866>       BSR.w skiplibreg
00026F88 <AmiBlitz3.ab3@9867>       LEA $C(A1),A1
00026F8C <AmiBlitz3.ab3@9868> BRA.w JL_0_7274
00026F8E <AmiBlitz3.ab3@9871>     MOVE.l A1,(A3)
00026F90 <AmiBlitz3.ab3@9872>     MOVEA.l A1,A3
00026F92 <AmiBlitz3.ab3@9873>     ADDQ.w #4,A1
00026F94 <AmiBlitz3.ab3@9874>     MOVE.w D7,(A1)+
00026F96 <AmiBlitz3.ab3@9877>       TST.b (A1)+
00026F9A <AmiBlitz3.ab3@9878>     BNE.w JL_0_7298
00026F9C <AmiBlitz3.ab3@9881>       TST.b (A1)+
00026FA0 <AmiBlitz3.ab3@9882>     BNE.w JL_0_729E
00026FA4 <AmiBlitz3.ab3@9884>     BSR.w aligna1
00026FA6 <AmiBlitz3.ab3@9885>     ADDQ.w #1,D7
00026FAA <AmiBlitz3.ab3@9886> BRA.w JL_0_7230
00026FAE <AmiBlitz3.ab3@9889>     TST.w $4(A2)
00026FB2 <AmiBlitz3.ab3@9890>      BMI.w JL_0_72BA
00026FB6 <AmiBlitz3.ab3@9891>     MOVE.w D7,$10(A2)
00026FB8 <AmiBlitz3.ab3@9894>     ADDQ.w #2,A1
00026FBA <AmiBlitz3.ab3@9895>     TST.l (A1)+
00026FBE <AmiBlitz3.ab3@9896>      BEQ.w JL_0_72CC
00026FC4 <AmiBlitz3.ab3@9897>     ADDQ.w #1,number_of_objects
00026FC8 <AmiBlitz3.ab3@9898>     LEA $16(A1),A1
00026FCA <AmiBlitz3.ab3@9901>     SUBA.l A2,A1
00026FCE <AmiBlitz3.ab3@9902>     MOVE.l A1,$12(A2)
00026FD0 <AmiBlitz3.ab3@9903>     MOVEA.l (A2),A2
00026FD4 <AmiBlitz3.ab3@9904> BRA.w JL_0_720E
00026FD6 <AmiBlitz3.ab3@9907>   CLR.l (A3)
00026FDC <AmiBlitz3.ab3@9908> 
00026FE2 <AmiBlitz3.ab3@9909>   MOVE.l A7,errstack
00026FEC <AmiBlitz3.ab3@9910>   MOVE.l #AL_0_730E,errcont
00026FF4 <AmiBlitz3.ab3@9911>   MOVE.w #$FFFF,ezerr
00026FF8 <AmiBlitz3.ab3@9912>   MOVE.w #$FFFA,D1
00026FFC <AmiBlitz3.ab3@9913>    BSR.w JL_0_6F38
00027002 <AmiBlitz3.ab3@9914>   MOVE.l A1,tempvm
00027006 <AmiBlitz3.ab3@9915>   MOVE.w #$FDA7,D1
0002700A <AmiBlitz3.ab3@9916>    BSR.w JL_0_6F38
00027010 <AmiBlitz3.ab3@9917>   MOVE.l A1,ffplib
00027012 <AmiBlitz3.ab3@9920> RTS
00027016 <AmiBlitz3.ab3@9923> ffplib:  Ds.l 1
00027018 <AmiBlitz3.ab3@9927>     TST.w (A1)+
0002701C <AmiBlitz3.ab3@9928>     BEQ.w JL_0_7320
0002701E <AmiBlitz3.ab3@9929>     ADDQ.w #2,A1
00027022 <AmiBlitz3.ab3@9930> BRA.w skiplibreg
00027024 <AmiBlitz3.ab3@9933> RTS
00027026 <AmiBlitz3.ab3@9937>   EXG.l A1,A0
0002702A <AmiBlitz3.ab3@9938>   BSR.w aligna1
0002702C <AmiBlitz3.ab3@9939>   EXG.l A1,A0
0002702E <AmiBlitz3.ab3@9940> RTS
00027030 <AmiBlitz3.ab3@9943>   EXG.l D0,A1
00027032 <AmiBlitz3.ab3@9944>   ADDQ.l #1,D0
00027036 <AmiBlitz3.ab3@9945>   BCLR #$0,D0
00027038 <AmiBlitz3.ab3@9946>   EXG.l D0,A1
0002703A <AmiBlitz3.ab3@9947> RTS
00027040 <AmiBlitz3.ab3@9951>   MOVEA.l _execbase,A6
00027046 <AmiBlitz3.ab3@9952>   MOVEA.l ptr_userlibs,A2
00027048 <AmiBlitz3.ab3@9953>   MOVE.l (A2),D0
0002704A <AmiBlitz3.ab3@9954>   CLR.l (A2)
0002704C <AmiBlitz3.ab3@9955>   MOVEA.l D0,A2
00027050 <AmiBlitz3.ab3@9958>     CMPA.w #$0,A2
00027054 <AmiBlitz3.ab3@9959>     BEQ.w free_userlib
00027058 <AmiBlitz3.ab3@9961>     MOVE.l $20(A2),D0
0002705C <AmiBlitz3.ab3@9962>     BEQ.b JL_0_7360
0002705E <AmiBlitz3.ab3@9963>       LSL.l #2,D0
00027064 <AmiBlitz3.ab3@9964>       MOVE.l mempool,a0
00027068 <AmiBlitz3.ab3@9965>       MOVEA.l $24(A2),A1
0002706C <AmiBlitz3.ab3@9966>       JSR _FreePooled(A6)
0002706E <AmiBlitz3.ab3@9969>     MOVEA.l A2,A1
00027072 <AmiBlitz3.ab3@9970>     MOVE.l $6(A1),D0
00027078 <AmiBlitz3.ab3@9971>     MOVE.l mempool,a0
0002707A <AmiBlitz3.ab3@9972>     MOVEA.l (A2),A2
00027080 <AmiBlitz3.ab3@9973>     MOVEA.l _execbase,A6
00027084 <AmiBlitz3.ab3@9974>     JSR _FreePooled(A6)
00027088 <AmiBlitz3.ab3@9975> BRA.w JL_0_7348
0002708C <AmiBlitz3.ab3@9979>   BSR.w free_userlibs
00027092 <AmiBlitz3.ab3@9980>   MOVEA.l _execbase,A6
00027098 <AmiBlitz3.ab3@9981>   CLR.l libpointer
0002709E <AmiBlitz3.ab3@9982>   MOVEA.l end_of_tokenlist,A0
000270A0 <AmiBlitz3.ab3@9983>   CLR.l (A0)
000270A6 <AmiBlitz3.ab3@9985>   MOVE.l size_acidlibs,D0
000270AA <AmiBlitz3.ab3@9986>   BEQ.b JL_0_73A2
000270B0 <AmiBlitz3.ab3@9987>     MOVE.l ptr_acidlibs,D1
000270B4 <AmiBlitz3.ab3@9988>     BEQ.b JL_0_73A2
000270BA <AmiBlitz3.ab3@9989>       CLR.l ptr_acidlibs
000270BC <AmiBlitz3.ab3@9990>       MOVEA.l D1,A1
000270C2 <AmiBlitz3.ab3@9991>       MOVE.l mempool,a0
000270C8 <AmiBlitz3.ab3@9992>       MOVEA.l _execbase,A6
000270CC <AmiBlitz3.ab3@9993>       JSR _FreePooled(A6)                                 ; free acidlibs
000270D2 <AmiBlitz3.ab3@9996>   MOVE.l size_deflibs,D0
000270D6 <AmiBlitz3.ab3@9997>   BEQ.b JL_0_73BE
000270DC <AmiBlitz3.ab3@9998>     MOVE.l ptr_deflibs,D1
000270E0 <AmiBlitz3.ab3@9999>     BEQ.b JL_0_73BE
000270E6 <AmiBlitz3.ab3@10000>       CLR.l ptr_deflibs                                    ; d0: memorySize
000270E8 <AmiBlitz3.ab3@10001>       MOVEA.l D1,A1                                        ; a1: memory
000270EE <AmiBlitz3.ab3@10002>       MOVE.l mempool,a0                                    ; a0: poolHeader
000270F4 <AmiBlitz3.ab3@10003>       MOVEA.l _execbase,A6
000270F8 <AmiBlitz3.ab3@10004>       JSR _FreePooled(A6)                                  ; free deflibs
000270FA <AmiBlitz3.ab3@10007> RTS
00027100 <AmiBlitz3.ab3@10011>   MOVEA.l currentmacroaddr,A0
00027102 <AmiBlitz3.ab3@10012>   MOVEA.l (A0),A2
00027104 <AmiBlitz3.ab3@10013>   CLR.l (A0)
0002710A <AmiBlitz3.ab3@10014>   MOVEA.l _execbase,A6
0002710E <AmiBlitz3.ab3@10017>     CMPA.w #$0,A2
00027112 <AmiBlitz3.ab3@10018>     BEQ.w JL_0_73FA
00027114 <AmiBlitz3.ab3@10019>     MOVEQ.l #$00,D0
00027118 <AmiBlitz3.ab3@10020>     MOVE.w $8(A2),D0
0002711C <AmiBlitz3.ab3@10021>     BEQ.w JL_0_73E8
00027120 <AmiBlitz3.ab3@10022>     MOVEA.l $4(A2),A1
00027126 <AmiBlitz3.ab3@10023>     MOVE.l mempool,a0
0002712A <AmiBlitz3.ab3@10024>     JSR _FreePooled(A6)
0002712C <AmiBlitz3.ab3@10027>     MOVEA.l A2,A1
0002712E <AmiBlitz3.ab3@10028>     MOVEA.l (A2),A2
00027130 <AmiBlitz3.ab3@10029>     MOVEQ.l #$00,D0
00027134 <AmiBlitz3.ab3@10030>     MOVE.b $C(A1),D0
0002713A <AmiBlitz3.ab3@10031>     MOVE.l mempool2,a0
0002713E <AmiBlitz3.ab3@10032>     JSR _FreePooled(A6)
00027142 <AmiBlitz3.ab3@10033> BRA.w JL_0_73CE
00027144 <AmiBlitz3.ab3@10036> RTS
0002714A <AmiBlitz3.ab3@10040>   MOVEA.l templabel,A2
00027150 <AmiBlitz3.ab3@10041>   CLR.l templabel
00027152 <AmiBlitz3.ab3@10042> RTS
00027158 <AmiBlitz3.ab3@10045>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
0002715C <AmiBlitz3.ab3@10048>     CMPA.w #$0,A2
00027160 <AmiBlitz3.ab3@10049>     BEQ.w JL_0_7426
00027162 <AmiBlitz3.ab3@10050>     MOVEQ.l #$00,D0
00027166 <AmiBlitz3.ab3@10051>     MOVE.b $E(A2),D0                                       ;labeltemp
00027168 <AmiBlitz3.ab3@10052>     MOVEA.l A2,A1
0002716A <AmiBlitz3.ab3@10053>     MOVEA.l (A2),A2
00027170 <AmiBlitz3.ab3@10054>     MOVE.l mempool2,a0
00027174 <AmiBlitz3.ab3@10056> BRA.w JL_0_740C
00027176 <AmiBlitz3.ab3@10059> RTS
0002717C <AmiBlitz3.ab3@10063>   MOVEA.l data1,A4
00027182 <AmiBlitz3.ab3@10064>   CMPA.l data2at,A4
00027186 <AmiBlitz3.ab3@10065>   BCC.w JL_0_7442
00027188 <AmiBlitz3.ab3@10066>     MOVE.b D1,(A4)+
0002718E <AmiBlitz3.ab3@10067>     MOVE.l A4,data1
00027190 <AmiBlitz3.ab3@10068> RTS
00027198 <AmiBlitz3.ab3@10071>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
0002719E <AmiBlitz3.ab3@10072>   ADDQ.l #1,data1
000271A0 <AmiBlitz3.ab3@10073> RTS
000271A2 <AmiBlitz3.ab3@10077>   SWAP D1
000271A6 <AmiBlitz3.ab3@10078>   BSR.w pokedata1
000271A8 <AmiBlitz3.ab3@10079>   SWAP D1
000271AE <AmiBlitz3.ab3@10082>   MOVEA.l data1,A4
000271B4 <AmiBlitz3.ab3@10083>   CMPA.l data2at,A4
000271B8 <AmiBlitz3.ab3@10084>    BCC.w JL_0_7474
000271BA <AmiBlitz3.ab3@10085>   MOVE.w D1,(A4)+
000271C0 <AmiBlitz3.ab3@10086>   MOVE.l A4,data1
000271C2 <AmiBlitz3.ab3@10087> RTS
000271CA <AmiBlitz3.ab3@10090>   MOVE.w #$FFFF,dontwrite
000271D0 <AmiBlitz3.ab3@10091>   ADDQ.l #2,data1
000271D2 <AmiBlitz3.ab3@10092> RTS
000271D8 <AmiBlitz3.ab3@10096>   MOVE.l data1,D3                                      ;write local string/type allocs
000271DA <AmiBlitz3.ab3@10097>   MOVEQ.l #$00,D4
000271DE <AmiBlitz3.ab3@10100>   CMPA.w #$0,A2
000271E2 <AmiBlitz3.ab3@10101>    BEQ.w JL_0_74CAc
000271E6 <AmiBlitz3.ab3@10102>   TST.w $6(A2)
000271EA <AmiBlitz3.ab3@10103>    BNE.w JL_0_74C4c
000271EE <AmiBlitz3.ab3@10104>   MOVEA.l $A(A2),A3
000271F6 <AmiBlitz3.ab3@10105>   CMPI.l #$100,$4(A3)
000271FA <AmiBlitz3.ab3@10106>    BCS.w JL_0_74C4c
000271FE <AmiBlitz3.ab3@10107>   MOVE.w $4(A2),D1
00027202 <AmiBlitz3.ab3@10108>    BSR.w pokedata1
00027206 <AmiBlitz3.ab3@10109>   MOVE.w $8(A3),D1
0002720A <AmiBlitz3.ab3@10110>    BSR.w pokedata1
0002720C <AmiBlitz3.ab3@10111>   ADDQ.w #1,D4
0002720E <AmiBlitz3.ab3@10114>    MOVEA.l (A2),A2
00027212 <AmiBlitz3.ab3@10115> BRA.w JL_0_7492c
00027214 <AmiBlitz3.ab3@10118>    TST.w D4
00027218 <AmiBlitz3.ab3@10119>    BEQ.w JL_0_74E0
0002721C <AmiBlitz3.ab3@10120>   MOVE.w #$FF37,D1
00027220 <AmiBlitz3.ab3@10121>    BSR.w uselib
00027224 <AmiBlitz3.ab3@10122>   MOVE.w #$FFFA,D1
00027228 <AmiBlitz3.ab3@10123> BRA.w uselib
0002722E <AmiBlitz3.ab3@10131>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027234 <AmiBlitz3.ab3@10134>   MOVE.l data1,D3
00027236 <AmiBlitz3.ab3@10135>   MOVEQ.l #$00,D4
0002723C <AmiBlitz3.ab3@10136>   TST.b iserror
00027240 <AmiBlitz3.ab3@10137>   BEQ JL_0_7492
00027242 <AmiBlitz3.ab3@10138>   RTS
00027246 <AmiBlitz3.ab3@10140>    CMPA.w #$0,A2
0002724A <AmiBlitz3.ab3@10141>    BEQ.w JL_0_74CA
0002724E <AmiBlitz3.ab3@10142>   TST.w $6(A2)
00027252 <AmiBlitz3.ab3@10143>    BNE.w JL_0_74C4
00027256 <AmiBlitz3.ab3@10144>   MOVEA.l $A(A2),A3
0002725E <AmiBlitz3.ab3@10145>   CMPI.l #$100,$4(A3)
00027262 <AmiBlitz3.ab3@10146>    BCS.w JL_0_74C4
00027266 <AmiBlitz3.ab3@10147>   MOVE.w $4(A2),D1
0002726A <AmiBlitz3.ab3@10148>    BSR.w pokedata1
0002726E <AmiBlitz3.ab3@10149>   MOVE.w $8(A3),D1
00027272 <AmiBlitz3.ab3@10150>    BSR.w pokedata1
00027274 <AmiBlitz3.ab3@10151>   ADDQ.w #1,D4
00027276 <AmiBlitz3.ab3@10154>   MOVEA.l (A2),A2
0002727A <AmiBlitz3.ab3@10155> BRA.w JL_0_7492
00027280 <AmiBlitz3.ab3@10159>   MOVEA.l sharebase,A2
00027284 <AmiBlitz3.ab3@10162>   CMPA.w #$0,A2
00027288 <AmiBlitz3.ab3@10163>    BEQ.w JL_0_74CAb
0002728C <AmiBlitz3.ab3@10165>   TST.w $6(A2)
00027290 <AmiBlitz3.ab3@10166>    BNE.w JL_0_74C4b
00027294 <AmiBlitz3.ab3@10167>   MOVEA.l $A(A2),A3
0002729C <AmiBlitz3.ab3@10168>   CMPI.l #$100,$4(A3)
000272A0 <AmiBlitz3.ab3@10169>    BCS.w JL_0_74C4b
000272A4 <AmiBlitz3.ab3@10170>   MOVE.w $4(A2),D1
000272A8 <AmiBlitz3.ab3@10171>    BSR.w pokedata1
000272AC <AmiBlitz3.ab3@10172>   MOVE.w $8(A3),D1
000272B0 <AmiBlitz3.ab3@10173>    BSR.w pokedata1
000272B2 <AmiBlitz3.ab3@10174>   ADDQ.w #1,D4
000272B4 <AmiBlitz3.ab3@10177>   MOVEA.l (A2),A2
000272B8 <AmiBlitz3.ab3@10178> BRA.w JL_0_7492b
000272BA <AmiBlitz3.ab3@10181>    TST.w D4
000272BE <AmiBlitz3.ab3@10182>    BEQ.w JL_0_74E0
000272C2 <AmiBlitz3.ab3@10183>   MOVE.w #$FF37,D1
000272C6 <AmiBlitz3.ab3@10184>    BSR.w uselib                                            ;use statics lib
000272CA <AmiBlitz3.ab3@10185>   MOVE.w #$FFFA,D1                                         ;use memlib
000272CE <AmiBlitz3.ab3@10186> BRA.w uselib
000272D0 <AmiBlitz3.ab3@10189> RTS
000272D6 <AmiBlitz3.ab3@10193>   MOVE.w numtoa2,D1
000272DA <AmiBlitz3.ab3@10194>    BSR.w writeword
000272DE <AmiBlitz3.ab3@10195>    BSR.w addoff
000272E0 <AmiBlitz3.ab3@10196>   MOVE.l D3,D1
000272E4 <AmiBlitz3.ab3@10197>    BSR.w writelong
000272E6 <AmiBlitz3.ab3@10198>   SUBQ.w #1,D4
000272EC <AmiBlitz3.ab3@10199>   MOVE.w D4,endarray+2
000272F2 <AmiBlitz3.ab3@10200>   MOVE.l endarray,D1
000272F6 <AmiBlitz3.ab3@10201> BRA.w writelong
000272F8 <AmiBlitz3.ab3@10205>   MOVE.l D3,-(A7)
000272FE <AmiBlitz3.ab3@10208>   MOVEA.l _dosbase,A6
00027302 <AmiBlitz3.ab3@10209>   JSR _Write(a6)
00027304 <AmiBlitz3.ab3@10211>   CMP.l (A7)+,D0
00027308 <AmiBlitz3.ab3@10212>    BNE.w JL_0_7516
0002730A <AmiBlitz3.ab3@10213> RTS
0002730C <AmiBlitz3.ab3@10216>   MOVE.l D7,D1
00027312 <AmiBlitz3.ab3@10218>   MOVEA.l _dosbase,A6
00027316 <AmiBlitz3.ab3@10219>   JSR _Close(a6)
0002731C <AmiBlitz3.ab3@10222> JMP error_create_exe
00027322 <AmiBlitz3.ab3@10231> 
00027328 <AmiBlitz3.ab3@10232>   MOVE.l A7,errstack
0002732C <AmiBlitz3.ab3@10233>   MOVEM.l d2-d7/a2-a6,-(a7)
00027336 <AmiBlitz3.ab3@10234>   MOVE.l #AL_0_7790,errcont
0002733C <AmiBlitz3.ab3@10235>    JSR call_setpointerbusy
00027344 <AmiBlitz3.ab3@10236>   MOVE.w #$FFFF,anyerrs
0002734E <AmiBlitz3.ab3@10237>   CMP.l #-1,chipstart
00027352 <AmiBlitz3.ab3@10238>   BEQ 'l01
00027358 <AmiBlitz3.ab3@10239>   MOVE.l chipend,d1
0002735A <AmiBlitz3.ab3@10240>   ADDQ.l #3,d1
00027360 <AmiBlitz3.ab3@10241>   AND.l #$fffffffc,d1                                      ;bug
00027366 <AmiBlitz3.ab3@10242>   MOVE.l d1,chipend
00027368 <AmiBlitz3.ab3@10243>   MOVE.l d1,a1
0002736E <AmiBlitz3.ab3@10244>   MOVE.l chipstart,a0
00027370 <AmiBlitz3.ab3@10245>   MOVE.l a1,d1
00027372 <AmiBlitz3.ab3@10246>   SUB.l a0,d1
00027378 <AmiBlitz3.ab3@10247>   MOVE.l d1,chipsize
00027382 <AmiBlitz3.ab3@10250>   CMP.l #-1,bssstart
00027386 <AmiBlitz3.ab3@10251>   BEQ 'l11
0002738C <AmiBlitz3.ab3@10252>   MOVE.l realbssend,a1
00027392 <AmiBlitz3.ab3@10253>   MOVE.l bssstart,a0
00027394 <AmiBlitz3.ab3@10254>   MOVE.l a1,d1
00027396 <AmiBlitz3.ab3@10255>   SUB.l a0,d1
0002739C <AmiBlitz3.ab3@10256>   MOVE.l d1,bsssize
000273A0 <AmiBlitz3.ab3@10257>   BEQ 'l11
000273A2 <AmiBlitz3.ab3@10260>   TST.b (a0)+
000273A6 <AmiBlitz3.ab3@10261>   BEQ 'l31
000273AC <AmiBlitz3.ab3@10262>   TST.b debugmode
000273B0 <AmiBlitz3.ab3@10263>   BEQ 'l1
000273B6 <AmiBlitz3.ab3@10264>   TST.b exdebug
000273BA <AmiBlitz3.ab3@10265>   BNE 'l31
000273C0 <AmiBlitz3.ab3@10268>   MOVE.l #nodata,-(a7)
000273C6 <AmiBlitz3.ab3@10269> JMP handle_compileerror
000273C8 <AmiBlitz3.ab3@10272>   CMP.l a0,a1
000273CC <AmiBlitz3.ab3@10273>   BGT 'l32
000273D2 <AmiBlitz3.ab3@10274>   MOVE.l bssend,d1
000273D4 <AmiBlitz3.ab3@10275>   ADDQ.l #3,d1
000273DA <AmiBlitz3.ab3@10276>   AND.l #$fffffffc,d1                                      ;bug
000273E0 <AmiBlitz3.ab3@10277>   MOVE.l d1,bssend
000273E2 <AmiBlitz3.ab3@10278>   MOVE.l d1,a1
000273E8 <AmiBlitz3.ab3@10279>   MOVE.l bssstart,a0
000273EA <AmiBlitz3.ab3@10280>   MOVE.l a1,d1
000273EC <AmiBlitz3.ab3@10281>   SUB.l a0,d1
000273F2 <AmiBlitz3.ab3@10282>   MOVE.l d1,bsssize
000273F6 <AmiBlitz3.ab3@10285>   MOVEM.l d5-d7/d3,-(a7)
000273FC <AmiBlitz3.ab3@10286>   MOVE.w dontwrite,D1
00027400 <AmiBlitz3.ab3@10287>   BNE.w JL_0_757C
00027406 <AmiBlitz3.ab3@10288>   MOVE.l chipsize,d5
0002740C <AmiBlitz3.ab3@10289>   MOVE.l bsssize,d3
00027412 <AmiBlitz3.ab3@10290>   MOVE.l chipstart,d7
00027418 <AmiBlitz3.ab3@10291>   MOVE.l bssstart,d6
0002741E <AmiBlitz3.ab3@10292>   MOVEA.l hunkoffsetbase,A2
00027424 <AmiBlitz3.ab3@10293>   MOVEA.l destbufferstart,A1
00027426 <AmiBlitz3.ab3@10294>   MOVE.l A1,D2
0002742C <AmiBlitz3.ab3@10295>   ADD.l noinits,D2
00027432 <AmiBlitz3.ab3@10296>   CLR.l hunkoffsetnum
00027436 <AmiBlitz3.ab3@10299>   CMPA.w #$0,A2
0002743A <AmiBlitz3.ab3@10300>    BEQ.w JL_0_757C
0002743E <AmiBlitz3.ab3@10301>   MOVE.l $4(A2),D0
00027442 <AmiBlitz3.ab3@10302>    LEA $0(a1,d0.l),a0
00027444 <AmiBlitz3.ab3@10303>    MOVE.l (a0),d1
00027446 <AmiBlitz3.ab3@10304>   TST.l d1
0002744A <AmiBlitz3.ab3@10305>    BMI.w 'lm1
00027452 <AmiBlitz3.ab3@10306>   MOVE.b #0,newhunk
0002745C <AmiBlitz3.ab3@10307>   CMP.l #-1,chipstart
00027460 <AmiBlitz3.ab3@10308>   BEQ 'l10
00027466 <AmiBlitz3.ab3@10309>   CMP.l chipstart,d1
0002746A <AmiBlitz3.ab3@10310>   BLT 'l10
00027472 <AmiBlitz3.ab3@10311>   MOVE.b #1,newhunk
00027478 <AmiBlitz3.ab3@10312>   CMP.l chipend,d1
0002747C <AmiBlitz3.ab3@10313>   BGE 'l110
0002747E <AmiBlitz3.ab3@10314>   SUB.l d7,(a0)
00027486 <AmiBlitz3.ab3@10315>   ADD.l #$80000000,4(a2)
0002748A <AmiBlitz3.ab3@10316> BRA JL_0_7576
0002748E <AmiBlitz3.ab3@10319>   SUB.l d5,0(a0)
00027498 <AmiBlitz3.ab3@10322>   CMP.l #-1,bssstart
0002749C <AmiBlitz3.ab3@10323>     BEQ 'l11
000274A2 <AmiBlitz3.ab3@10324>   CMP.l bssstart,d1
000274A6 <AmiBlitz3.ab3@10325>   BLT 'l11
000274AC <AmiBlitz3.ab3@10326>   CMP.l bssend,d1
000274B0 <AmiBlitz3.ab3@10327>   BGE 'l111
000274B6 <AmiBlitz3.ab3@10328>   TST.b newhunk
000274BA <AmiBlitz3.ab3@10329>   BEQ 'ln1
000274BC <AmiBlitz3.ab3@10330>   ADD.l d5,(a0)
000274BE <AmiBlitz3.ab3@10333>   SUB.l d6,(a0)
000274C6 <AmiBlitz3.ab3@10334>   ADD.l #$40000000,4(a2)
000274CA <AmiBlitz3.ab3@10335> BRA JL_0_7576
000274CE <AmiBlitz3.ab3@10338>   SUB.l d3,0(a0)
000274D0 <AmiBlitz3.ab3@10341>   SUB.l D2,(A0)
000274D6 <AmiBlitz3.ab3@10344>   ADDQ.l #1,hunkoffsetnum
000274D8 <AmiBlitz3.ab3@10347>    MOVEA.l (A2),A2
000274DC <AmiBlitz3.ab3@10348> BRA.w JL_0_755E
000274E0 <AmiBlitz3.ab3@10352>   MOVEM.l (a7)+,d5-d7/d3
000274E6 <AmiBlitz3.ab3@10353>   MOVE.l ptr_newexefilename,D1
000274EC <AmiBlitz3.ab3@10354>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000274F2 <AmiBlitz3.ab3@10355>   MOVEA.l _dosbase,A6
000274F6 <AmiBlitz3.ab3@10356>    JSR _Open(A6)
000274F8 <AmiBlitz3.ab3@10357>   MOVE.l D0,D7
000274FC <AmiBlitz3.ab3@10358>    BEQ.w execerr
00027502 <AmiBlitz3.ab3@10359>   MOVE.l objlen,D0
00027508 <AmiBlitz3.ab3@10360>   SUB.l #moremem,d0
0002750E <AmiBlitz3.ab3@10361>   SUB.l noinits,D0
00027518 <AmiBlitz3.ab3@10362>   CMP.l #-1,bssstart
0002751C <AmiBlitz3.ab3@10363>   BEQ 'l60
00027522 <AmiBlitz3.ab3@10364>   SUB.l bsssize,d0
00027528 <AmiBlitz3.ab3@10365>   SUB.l chipsize,d0
0002752C <AmiBlitz3.ab3@10366> BRA.s 'l61
00027536 <AmiBlitz3.ab3@10369>   CMP.l #-1,chipstart
0002753A <AmiBlitz3.ab3@10370>   BEQ 'l61
00027540 <AmiBlitz3.ab3@10371>   SUB.l bsssize,d0
00027546 <AmiBlitz3.ab3@10372>   SUB.l chipsize,d0
00027548 <AmiBlitz3.ab3@10375>   ADDQ.l #3,D0
0002754A <AmiBlitz3.ab3@10376>   LSR.l #2,D0
00027550 <AmiBlitz3.ab3@10377>   MOVE.l D0,tstsize1
00027556 <AmiBlitz3.ab3@10378>   MOVE.l D0,tstsize2
00027558 <AmiBlitz3.ab3@10379>   MOVE.l D7,D1
0002755E <AmiBlitz3.ab3@10380>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027560 <AmiBlitz3.ab3@10381>   MOVEQ.l #$20,D3
0002756A <AmiBlitz3.ab3@10382>   CMP.l #-1,bssstart
0002756E <AmiBlitz3.ab3@10383>   BEQ 'lb1
00027578 <AmiBlitz3.ab3@10384>   CMP.l #-1,chipstart
0002757C <AmiBlitz3.ab3@10385>   BEQ 'lb1
00027586 <AmiBlitz3.ab3@10386>   MOVE.l #1,bssnum
00027590 <AmiBlitz3.ab3@10387>   MOVE.l #2,chipnum
00027592 <AmiBlitz3.ab3@10388>   MOVEQ.l #$28,D3
00027598 <AmiBlitz3.ab3@10389>   MOVE.l bsssize,d2
0002759A <AmiBlitz3.ab3@10390>   ADDQ.l #3,d2
0002759C <AmiBlitz3.ab3@10391>   ASR.l #2,d2
000275A2 <AmiBlitz3.ab3@10392>   MOVE.l d2,hunkend+8
000275A8 <AmiBlitz3.ab3@10393>   MOVE.l d2,bsssize3
000275AE <AmiBlitz3.ab3@10394>   MOVE.l chipsize,d2
000275B0 <AmiBlitz3.ab3@10395>   ADDQ.l #3,d2
000275B2 <AmiBlitz3.ab3@10396>   ASR.l #2,d2
000275B8 <AmiBlitz3.ab3@10397>   MOVE.l d2,chipsize2
000275C2 <AmiBlitz3.ab3@10398>   ADD.l #$40000000,chipsize2
000275C8 <AmiBlitz3.ab3@10399>   MOVE.l d2,hunkend2+8
000275CE <AmiBlitz3.ab3@10400>   MOVE.l D0,tstsize1c
000275D4 <AmiBlitz3.ab3@10401>   MOVE.l D0,tstsize2c
000275DA <AmiBlitz3.ab3@10402>   MOVE.l #hunkbegin2,d2
000275DE <AmiBlitz3.ab3@10403> BRA 'l100
000275E8 <AmiBlitz3.ab3@10406>   CMP.l #-1,bssstart
000275EC <AmiBlitz3.ab3@10407>   BEQ 'l10
000275F6 <AmiBlitz3.ab3@10408>   MOVE.l #1,bssnum
000275F8 <AmiBlitz3.ab3@10409>   MOVEQ.l #$24,D3
000275FE <AmiBlitz3.ab3@10410>   MOVE.l bsssize,d2
00027600 <AmiBlitz3.ab3@10411>   ADDQ.l #3,d2
00027602 <AmiBlitz3.ab3@10412>   ASR.l #2,d2
00027608 <AmiBlitz3.ab3@10413>   MOVE.l d2,hunkend+8
0002760E <AmiBlitz3.ab3@10414>   MOVE.l d2,bsssize2
00027614 <AmiBlitz3.ab3@10415>   MOVE.l D0,tstsize1b
0002761A <AmiBlitz3.ab3@10416>   MOVE.l D0,tstsize2b
00027620 <AmiBlitz3.ab3@10417>   MOVE.l #hunkbegin,d2
0002762A <AmiBlitz3.ab3@10420>   CMP.l #-1,chipstart
0002762E <AmiBlitz3.ab3@10421>   BEQ 'l100
00027638 <AmiBlitz3.ab3@10422>   MOVE.l #1,chipnum
0002763A <AmiBlitz3.ab3@10423>   MOVEQ.l #$24,D3
00027640 <AmiBlitz3.ab3@10424>   MOVE.l chipsize,d2
00027642 <AmiBlitz3.ab3@10425>   ADDQ.l #3,d2
00027644 <AmiBlitz3.ab3@10426>   ASR.l #2,d2
0002764A <AmiBlitz3.ab3@10427>   MOVE.l d2,hunkend2+8
00027650 <AmiBlitz3.ab3@10428>   MOVE.l d2,bsssize2
0002765A <AmiBlitz3.ab3@10429>   ADD.l #$40000000,bsssize2
00027660 <AmiBlitz3.ab3@10430>   MOVE.l D0,tstsize1b
00027666 <AmiBlitz3.ab3@10431>   MOVE.l D0,tstsize2b
0002766C <AmiBlitz3.ab3@10432>   MOVE.l #hunkbegin,d2
00027670 <AmiBlitz3.ab3@10435>    BSR.w mywrite
00027676 <AmiBlitz3.ab3@10436>   MOVE.l destbufferstart,D2
0002767C <AmiBlitz3.ab3@10437>   ADD.l noinits,D2
00027682 <AmiBlitz3.ab3@10438>   MOVE.l objlen,D3
00027688 <AmiBlitz3.ab3@10439>   SUB.l #moremem,d3
0002768E <AmiBlitz3.ab3@10440>   SUB.l noinits,D3
00027698 <AmiBlitz3.ab3@10441>   CMP.l #-1,bssstart
0002769C <AmiBlitz3.ab3@10442>   BNE 'l40
000276A6 <AmiBlitz3.ab3@10443>   CMP.l #-1,chipstart
000276AA <AmiBlitz3.ab3@10444>   BNE 'l40
000276AE <AmiBlitz3.ab3@10445> BRA 'l41
000276B4 <AmiBlitz3.ab3@10448>   MOVE.l codeend,d1
000276B6 <AmiBlitz3.ab3@10449>     SUB.l d2,d1
000276B8 <AmiBlitz3.ab3@10450>     MOVE.l d1,d3
000276BE <AmiBlitz3.ab3@10451>   SUB.l bsssize,d3
000276C4 <AmiBlitz3.ab3@10452>   SUB.l chipsize,d3
000276C6 <AmiBlitz3.ab3@10453>   MOVE.l D7,D1
000276CA <AmiBlitz3.ab3@10454>   BSR.w mywrite
000276D0 <AmiBlitz3.ab3@10455>   MOVE.l objlen,D3
000276D6 <AmiBlitz3.ab3@10456>   SUB.l #moremem,d3
000276DC <AmiBlitz3.ab3@10457>   SUB.l noinits,D3
000276DE <AmiBlitz3.ab3@10458>   MOVE.l d3,d1
000276E4 <AmiBlitz3.ab3@10459>   MOVE.l destbufferstart,D2
000276EA <AmiBlitz3.ab3@10460>   ADD.l noinits,D2
000276EC <AmiBlitz3.ab3@10461>   ADD.l d2,d1
000276F2 <AmiBlitz3.ab3@10462>   SUB.l codeend,d1
000276F4 <AmiBlitz3.ab3@10463>   MOVE.l d1,d3
000276FA <AmiBlitz3.ab3@10464>   MOVE.l codeend,d2
000276FC <AmiBlitz3.ab3@10467>   MOVE.l d2,d1
000276FE <AmiBlitz3.ab3@10468>   ADD.l d3,d1
00027700 <AmiBlitz3.ab3@10469>   ADDQ.l #3,D1
00027706 <AmiBlitz3.ab3@10470>   ANDI.l #$FFFFFFFC,D1
00027708 <AmiBlitz3.ab3@10471>   SUB.l d2,d1
0002770A <AmiBlitz3.ab3@10472>   MOVE.l d1,d3
0002770C <AmiBlitz3.ab3@10473>   MOVE.l D7,D1
00027710 <AmiBlitz3.ab3@10474>    BSR.w mywrite
0002771A <AmiBlitz3.ab3@10475>   MOVE.l hunkoffsetcounter,tstsize3
0002771E <AmiBlitz3.ab3@10476>    BEQ.w JL_0_7646
00027720 <AmiBlitz3.ab3@10477>   MOVE.l D7,D1
00027726 <AmiBlitz3.ab3@10478>   MOVE.l #tstend,D2
00027728 <AmiBlitz3.ab3@10479>   MOVEQ.l #$04,D3
0002772C <AmiBlitz3.ab3@10480>    BSR.w mywrite
00027732 <AmiBlitz3.ab3@10481>    MOVEA.l _execbase,A6
00027738 <AmiBlitz3.ab3@10482>    MOVE.l hunkoffsetcounter,d0
0002773A <AmiBlitz3.ab3@10483>    ASL.l #2,d0
00027740 <AmiBlitz3.ab3@10484>    ADD.l #12,d0
00027742 <AmiBlitz3.ab3@10485>    MOVEQ #0,d1
00027746 <AmiBlitz3.ab3@10486>    JSR _AllocMem(a6)
00027748 <AmiBlitz3.ab3@10487>    TST.l d0
0002774C <AmiBlitz3.ab3@10488>    BEQ nomem
00027752 <AmiBlitz3.ab3@10489>    MOVE.l noinits,D4
00027754 <AmiBlitz3.ab3@10490>    MOVE.l d5,-(a7)
00027756 <AmiBlitz3.ab3@10491>    MOVE.l d0,d5
00027758 <AmiBlitz3.ab3@10492>    MOVE.l d0,a1
0002775E <AmiBlitz3.ab3@10493>    MOVEA.l hunkoffsetbase,A2
00027766 <AmiBlitz3.ab3@10494>    MOVE.b #0,newhunk
0002776A <AmiBlitz3.ab3@10497>   CMPA.w #$0,A2
0002776E <AmiBlitz3.ab3@10498>    BEQ.w savehunk
00027774 <AmiBlitz3.ab3@10499>   MOVE.l destbufferstart,D2
0002777A <AmiBlitz3.ab3@10500>   ADD.l noinits,D2
0002777E <AmiBlitz3.ab3@10501>   MOVE.l  $4(A2),d1
00027782 <AmiBlitz3.ab3@10502>   BTST #31,d1
00027786 <AmiBlitz3.ab3@10503>   BEQ 'lh1
0002778E <AmiBlitz3.ab3@10504>   MOVE.b #1,newhunk
00027792 <AmiBlitz3.ab3@10505> BRA 'lh3
00027796 <AmiBlitz3.ab3@10508>   BTST #30,d1
0002779A <AmiBlitz3.ab3@10509>   BEQ 'lh2
000277A2 <AmiBlitz3.ab3@10510>   MOVE.b #1,newhunk
000277A6 <AmiBlitz3.ab3@10511> BRA 'lh3
000277A8 <AmiBlitz3.ab3@10514>   ADD.l d1,d2
000277AE <AmiBlitz3.ab3@10515>   CMP.l chipend,d2
000277B2 <AmiBlitz3.ab3@10516>   BLT 'l100
000277B8 <AmiBlitz3.ab3@10517>   SUB.l chipsize,d1
000277BE <AmiBlitz3.ab3@10520>   CMP.l bssend,d2
000277C2 <AmiBlitz3.ab3@10521>   BLT 'l101
000277C8 <AmiBlitz3.ab3@10522>   SUB.l bsssize,d1
000277CA <AmiBlitz3.ab3@10525>   MOVE.l d1,(a1)
000277CC <AmiBlitz3.ab3@10526>   SUB.l D4,(A1)+
000277CE <AmiBlitz3.ab3@10529>   MOVEA.l (A2),A2
000277D2 <AmiBlitz3.ab3@10530> BRA.w menu_createresidentfile__oloopb
000277D4 <AmiBlitz3.ab3@10534>   MOVE.l D7,D1
000277DA <AmiBlitz3.ab3@10535>   MOVEA.l _dosbase,A6
000277E4 <AmiBlitz3.ab3@10536>   MOVE.l hunkoffsetnum,tstsize3
000277E8 <AmiBlitz3.ab3@10537>   BEQ 'ln1
000277EE <AmiBlitz3.ab3@10538>   MOVE.l #tstend+4,d2
000277F0 <AmiBlitz3.ab3@10539>     MOVEQ #8,d3
000277F4 <AmiBlitz3.ab3@10540>    JSR _Write(A6)
000277F6 <AmiBlitz3.ab3@10541>   MOVE.l d7,d1
000277FC <AmiBlitz3.ab3@10542>   MOVE.l hunkoffsetnum,d3
000277FE <AmiBlitz3.ab3@10543>   ASL.l #2,d3
00027800 <AmiBlitz3.ab3@10544>   MOVE.l d5,D2
00027804 <AmiBlitz3.ab3@10545>   JSR _Write(a6)
0002780A <AmiBlitz3.ab3@10548>   TST.b newhunk
0002780E <AmiBlitz3.ab3@10549>   BEQ 'l10
00027814 <AmiBlitz3.ab3@10550>   MOVEA.l hunkoffsetbase,A2
00027816 <AmiBlitz3.ab3@10551>   MOVE.l d5,a0
00027818 <AmiBlitz3.ab3@10552>   ADDQ #8,a0
00027820 <AmiBlitz3.ab3@10553>   MOVE.l bssnum,-4(a0)
00027822 <AmiBlitz3.ab3@10554>   MOVEQ #0,d6
00027826 <AmiBlitz3.ab3@10557>   CMPA.w #$0,A2
0002782A <AmiBlitz3.ab3@10558>    BEQ.w 'lh3
00027830 <AmiBlitz3.ab3@10559>   MOVE.l destbufferstart,D2
00027836 <AmiBlitz3.ab3@10560>   ADD.l noinits,D2
0002783A <AmiBlitz3.ab3@10561>   MOVE.l  $4(A2),d1
0002783E <AmiBlitz3.ab3@10562>   BTST #30,d1
00027842 <AmiBlitz3.ab3@10563>   BEQ 'lh1
00027846 <AmiBlitz3.ab3@10564>   BCLR #30,d1
00027848 <AmiBlitz3.ab3@10565>   MOVE.l d1,(a0)
0002784A <AmiBlitz3.ab3@10566>   SUB.l D4,(A0)+
0002784C <AmiBlitz3.ab3@10567>   ADDQ.l #1,d6
0002784E <AmiBlitz3.ab3@10570>   MOVE.l (a2),a2
00027852 <AmiBlitz3.ab3@10571> BRA 'lh2
00027854 <AmiBlitz3.ab3@10574>   TST.l d6
00027858 <AmiBlitz3.ab3@10575>     BEQ 'lh10
0002785A <AmiBlitz3.ab3@10576>     MOVE.l d5,a0
0002785C <AmiBlitz3.ab3@10577>     MOVE.l d6,(a0)
0002785E <AmiBlitz3.ab3@10578>     MOVE.l d7,d1
00027860 <AmiBlitz3.ab3@10579>     MOVE.l d5,d2
00027862 <AmiBlitz3.ab3@10580>     MOVE.l d6,d3
00027864 <AmiBlitz3.ab3@10581>     ASL.l #2,d3
00027866 <AmiBlitz3.ab3@10582>     ADDQ.l #8,d3
0002786A <AmiBlitz3.ab3@10583>     BSR.w mywrite
00027870 <AmiBlitz3.ab3@10586>   MOVEA.l hunkoffsetbase,A2
00027872 <AmiBlitz3.ab3@10587>   MOVE.l d5,a0
00027874 <AmiBlitz3.ab3@10588>   ADDQ #8,a0
0002787C <AmiBlitz3.ab3@10589>   MOVE.l chipnum,-4(a0)
0002787E <AmiBlitz3.ab3@10590>   MOVEQ #0,d6
00027882 <AmiBlitz3.ab3@10593>   CMPA.w #$0,A2
00027886 <AmiBlitz3.ab3@10594>    BEQ.w 'lh30
0002788C <AmiBlitz3.ab3@10595>   MOVE.l destbufferstart,D2
00027892 <AmiBlitz3.ab3@10596>   ADD.l noinits,D2
00027896 <AmiBlitz3.ab3@10597>   MOVE.l  $4(A2),d1
0002789A <AmiBlitz3.ab3@10598>   BTST #31,d1
0002789E <AmiBlitz3.ab3@10599>   BEQ 'lh11
000278A2 <AmiBlitz3.ab3@10600>   BCLR #31,d1
000278A4 <AmiBlitz3.ab3@10601>   MOVE.l d1,(a0)
000278A6 <AmiBlitz3.ab3@10602>   SUB.l D4,(A0)+
000278A8 <AmiBlitz3.ab3@10603>   ADDQ.l #1,d6
000278AA <AmiBlitz3.ab3@10606>   MOVE.l (a2),a2
000278AE <AmiBlitz3.ab3@10607> BRA 'lh20
000278B0 <AmiBlitz3.ab3@10610>   TST.l d6
000278B4 <AmiBlitz3.ab3@10611>     BEQ 'l10
000278B6 <AmiBlitz3.ab3@10612>     MOVE.l d5,a0
000278B8 <AmiBlitz3.ab3@10613>     MOVE.l d6,(a0)
000278BA <AmiBlitz3.ab3@10614>     MOVE.l d7,d1
000278BC <AmiBlitz3.ab3@10615>     MOVE.l d5,d2
000278BE <AmiBlitz3.ab3@10616>     MOVE.l d6,d3
000278C0 <AmiBlitz3.ab3@10617>     ASL.l #2,d3
000278C2 <AmiBlitz3.ab3@10618>     ADDQ.l #8,d3
000278C6 <AmiBlitz3.ab3@10619>     BSR.w mywrite
000278CC <AmiBlitz3.ab3@10623>    MOVEA.l _execbase,A6
000278D2 <AmiBlitz3.ab3@10624>    MOVE.l hunkoffsetcounter,d0
000278D4 <AmiBlitz3.ab3@10625>    ASL.l #2,d0
000278DA <AmiBlitz3.ab3@10626>    ADD.l #12,d0
000278DC <AmiBlitz3.ab3@10627>    MOVE.l d5,a1
000278E0 <AmiBlitz3.ab3@10628>    JSR _FreeMem(a6)
000278E6 <AmiBlitz3.ab3@10629>    MOVEA.l _dosbase,A6
000278E8 <AmiBlitz3.ab3@10630>    MOVE.l (a7)+,d5
000278EC <AmiBlitz3.ab3@10631> BRA JL_0_7632
000278F2 <AmiBlitz3.ab3@10635>   MOVEA.l hunkoffsetbase,A2
000278F8 <AmiBlitz3.ab3@10636>   MOVE.l noinits,D4
000278FC <AmiBlitz3.ab3@10639>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027900 <AmiBlitz3.ab3@10640>   BEQ.w JL_0_7632
00027904 <AmiBlitz3.ab3@10641>   LEA $4(A2),A1
00027906 <AmiBlitz3.ab3@10642>   SUB.l D4,(A1)
00027908 <AmiBlitz3.ab3@10643>   MOVE.l D7,D1
0002790A <AmiBlitz3.ab3@10644>   MOVE.l A1,D2
0002790C <AmiBlitz3.ab3@10645>   MOVEQ.l #$04,D3
00027910 <AmiBlitz3.ab3@10646>   BSR.w mywrite
00027914 <AmiBlitz3.ab3@10647>   ADD.l D4,$4(A2)
00027916 <AmiBlitz3.ab3@10648>   MOVEA.l (A2),A2
0002791A <AmiBlitz3.ab3@10649> BRA.w JL_0_7610
00027920 <AmiBlitz3.ab3@10652>   CLR.l tstsize3
00027922 <AmiBlitz3.ab3@10653>   MOVE.l D7,D1
00027928 <AmiBlitz3.ab3@10654>   MOVE.l #tstsize3,D2
0002792A <AmiBlitz3.ab3@10655>   MOVEQ.l #$04,D3
0002792E <AmiBlitz3.ab3@10656>    BSR.w mywrite
00027936 <AmiBlitz3.ab3@10659>   BTST #$7,link_debuginfo
0002793A <AmiBlitz3.ab3@10660>    BEQ.w JL_0_7706
00027940 <AmiBlitz3.ab3@10661>   MOVE.l #sysdebug,D2                                      ;debughunks
00027942 <AmiBlitz3.ab3@10662>   MOVEQ.l #$04,D3
00027944 <AmiBlitz3.ab3@10663>   MOVE.l D7,D1
00027948 <AmiBlitz3.ab3@10664>    BSR.w mywrite
0002794E <AmiBlitz3.ab3@10665>   MOVEA.l labelbase,A2
00027952 <AmiBlitz3.ab3@10668>   CMPA.w #$0,A2
00027956 <AmiBlitz3.ab3@10669>    BEQ.w JL_0_76F8
0002795C <AmiBlitz3.ab3@10670>   BTST #$0,$7(A2)
00027960 <AmiBlitz3.ab3@10671>    BEQ.w JL_0_7682
00027968 <AmiBlitz3.ab3@10672>   CMPI.l #$1,$4(A2)
0002796C <AmiBlitz3.ab3@10674>   BRA.w JL_0_76F2                                            ;only addr labels
0002796E <AmiBlitz3.ab3@10676>   MOVEQ.l #$00,D4
00027972 <AmiBlitz3.ab3@10677>   MOVE.b $12(A2),D4
00027976 <AmiBlitz3.ab3@10678>   SUBI.w #$13,D4
00027978 <AmiBlitz3.ab3@10679>   ADDQ.w #2,D4
0002797C <AmiBlitz3.ab3@10680>   ANDI.w #$FFFC,D4
0002797E <AmiBlitz3.ab3@10681>   MOVE.l D4,D5
00027980 <AmiBlitz3.ab3@10682>   LSR.w #2,D5
00027986 <AmiBlitz3.ab3@10683>   MOVE.l D5,temp1
00027988 <AmiBlitz3.ab3@10684>   LSL.w #2,D5
0002798E <AmiBlitz3.ab3@10685>   MOVE.l #temp1,a1
00027994 <AmiBlitz3.ab3@10687>   LEA debugstore,a0
00027996 <AmiBlitz3.ab3@10688>   MOVE.l (a1),(a0)+
00027998 <AmiBlitz3.ab3@10689>   MOVEQ.l #$04,D3
0002799C <AmiBlitz3.ab3@10692>   LEA $13(A2),A1
0002799E <AmiBlitz3.ab3@10693>   MOVE.l d4,d1
000279A0 <AmiBlitz3.ab3@10694>   SUBQ.l #1,d1
000279A2 <AmiBlitz3.ab3@10697>     MOVE.b (a1)+,d0
000279A6 <AmiBlitz3.ab3@10698>     BEQ 'l21
000279AA <AmiBlitz3.ab3@10699>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000279AE <AmiBlitz3.ab3@10700>     BNE 'ok
000279B2 <AmiBlitz3.ab3@10701>     MOVE.b #"_",d0
000279B4 <AmiBlitz3.ab3@10702> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000279B8 <AmiBlitz3.ab3@10703>   DBF d1,'l10
000279BC <AmiBlitz3.ab3@10705> BRA 'l22
000279BE <AmiBlitz3.ab3@10708>       CLR.b (a0)+
000279C2 <AmiBlitz3.ab3@10709>   DBF d1,'l21
000279C4 <AmiBlitz3.ab3@10712>   ADD.l d4,d3
000279C6 <AmiBlitz3.ab3@10717>   SUB.l D4,D5
000279CA <AmiBlitz3.ab3@10718>    BEQ.w JL_0_76CE
000279D0 <AmiBlitz3.ab3@10719>   MOVE.l #zero,a1
000279D2 <AmiBlitz3.ab3@10721>   MOVE.l (a1),(a0)+
000279D4 <AmiBlitz3.ab3@10723>   ADD.l d5,d3
000279D8 <AmiBlitz3.ab3@10728>   MOVE.l $8(A2),D2
000279DE <AmiBlitz3.ab3@10729>   SUB.l destbufferstart,D2
000279E4 <AmiBlitz3.ab3@10730>   SUB.l noinits,D2
000279EA <AmiBlitz3.ab3@10731>   MOVE.l D2,temp1
000279F0 <AmiBlitz3.ab3@10732>   MOVE.l #temp1,a1
000279F2 <AmiBlitz3.ab3@10734>   MOVE.l (a1),(a0)+
000279F8 <AmiBlitz3.ab3@10735>   ADD.l #4,d3
000279FE <AmiBlitz3.ab3@10736>   LEA debugstore,a0
00027A00 <AmiBlitz3.ab3@10737>   MOVE.l a0,d2
00027A02 <AmiBlitz3.ab3@10739>   MOVE.l D7,D1
00027A06 <AmiBlitz3.ab3@10740>   BSR.w mywrite
00027A08 <AmiBlitz3.ab3@10743>   MOVEA.l (A2),A2
00027A0C <AmiBlitz3.ab3@10744> BRA.w JL_0_7664
00027A12 <AmiBlitz3.ab3@10748>   MOVE.l #zero,D2
00027A14 <AmiBlitz3.ab3@10749>   MOVEQ.l #$04,D3
00027A16 <AmiBlitz3.ab3@10750>   MOVE.l D7,D1
00027A1A <AmiBlitz3.ab3@10751>   BSR.w mywrite
00027A1C <AmiBlitz3.ab3@10754>   MOVE.l D7,D1
00027A22 <AmiBlitz3.ab3@10755>   MOVE.l #tstdone,D2                                      ;hunkend
00027A24 <AmiBlitz3.ab3@10756>   MOVEQ.l #$04,D3
00027A2E <AmiBlitz3.ab3@10757>   CMPI.l #-1,bssstart
00027A32 <AmiBlitz3.ab3@10758>   BEQ 'l10
00027A34 <AmiBlitz3.ab3@10759>   MOVEQ #16,d3
00027A3A <AmiBlitz3.ab3@10760>   MOVE.l #hunkend,d2
00027A44 <AmiBlitz3.ab3@10761>   CMPI.l #-1,chipstart
00027A48 <AmiBlitz3.ab3@10762>   BEQ 'l10
00027A4A <AmiBlitz3.ab3@10763>   MOVE.l d7,d1
00027A4C <AmiBlitz3.ab3@10764>   MOVEQ #12,d3
00027A50 <AmiBlitz3.ab3@10765>   BSR.w mywrite
00027A5A <AmiBlitz3.ab3@10768>   CMPI.l #-1,chipstart
00027A5E <AmiBlitz3.ab3@10769>   BEQ 'l11
00027A60 <AmiBlitz3.ab3@10770>   MOVEQ #12,d3
00027A66 <AmiBlitz3.ab3@10771>   MOVE.l #hunkend2,d2
00027A68 <AmiBlitz3.ab3@10772>   MOVE.l d7,d1
00027A6C <AmiBlitz3.ab3@10773>   BSR.w mywrite
00027A6E <AmiBlitz3.ab3@10774>   MOVE.l d7,d1
00027A74 <AmiBlitz3.ab3@10775>   MOVE.l chipstart,d2
00027A7A <AmiBlitz3.ab3@10776>   MOVE.l chipsize,d3
00027A7E <AmiBlitz3.ab3@10777>   BSR.w mywrite
00027A80 <AmiBlitz3.ab3@10778>   MOVEQ #4,d3
00027A86 <AmiBlitz3.ab3@10779>   MOVE.l #hunkend,d2
00027A88 <AmiBlitz3.ab3@10780>   MOVE.l d7,d1
00027A8C <AmiBlitz3.ab3@10783>   BSR.w mywrite
00027A8E <AmiBlitz3.ab3@10784>   MOVE.l D7,D1
00027A94 <AmiBlitz3.ab3@10785>   MOVEA.l _dosbase,A6
00027A98 <AmiBlitz3.ab3@10786>   JSR _Close(A6)
00027AA0 <AmiBlitz3.ab3@10791>   BTST #$7,create_iconfile
00027AA4 <AmiBlitz3.ab3@10792>    BEQ.w skip_createicon
00027AAA <AmiBlitz3.ab3@10794>   MOVEA.l ptr_newexefilename,A0
00027AAC <AmiBlitz3.ab3@10797>     TST.b (A0)+
00027AB0 <AmiBlitz3.ab3@10798>   BNE.w JL_0_772C
00027AB2 <AmiBlitz3.ab3@10799>   SUBQ.w #1,A0
00027AB4 <AmiBlitz3.ab3@10800>   MOVE.l A0,-(A7)
00027ABA <AmiBlitz3.ab3@10801>   LEA str_infoextention2,A1
00027ABC <AmiBlitz3.ab3@10804>     MOVE.b (A1)+,(A0)+
00027AC0 <AmiBlitz3.ab3@10805>   BNE.w JL_0_773A
00027AC6 <AmiBlitz3.ab3@10807>   MOVE.l ptr_newexefilename,D1
00027AC8 <AmiBlitz3.ab3@10808>   MOVEQ.l #-$02,D2
00027ACE <AmiBlitz3.ab3@10809>   MOVEA.l _dosbase,A6
00027AD2 <AmiBlitz3.ab3@10810>   JSR _Lock(A6)
00027AD4 <AmiBlitz3.ab3@10811>   MOVE.l D0,D1
00027AD8 <AmiBlitz3.ab3@10812>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027ADC <AmiBlitz3.ab3@10813>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027AE0 <AmiBlitz3.ab3@10814> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027AE6 <AmiBlitz3.ab3@10817>   MOVE.l ptr_newexefilename,D1
00027AEC <AmiBlitz3.ab3@10818>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027AF2 <AmiBlitz3.ab3@10819>   MOVEA.l _dosbase,A6
00027AF6 <AmiBlitz3.ab3@10820>    JSR _Open(A6)
00027AF8 <AmiBlitz3.ab3@10821>   MOVE.l D0,D7
00027AFC <AmiBlitz3.ab3@10822>    BEQ.w JL_0_7788
00027B02 <AmiBlitz3.ab3@10823>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027B08 <AmiBlitz3.ab3@10824>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027B0A <AmiBlitz3.ab3@10825>   MOVE.l D7,D1
00027B10 <AmiBlitz3.ab3@10826>   MOVEA.l _dosbase,A6
00027B14 <AmiBlitz3.ab3@10827>   JSR _Write(A6)
00027B16 <AmiBlitz3.ab3@10828>   MOVE.l D7,D1
00027B1A <AmiBlitz3.ab3@10829>   JSR _Close(A6)
00027B1C <AmiBlitz3.ab3@10832>   MOVEA.l (A7)+,A0
00027B1E <AmiBlitz3.ab3@10833>   CLR.b (A0)
00027B24 <AmiBlitz3.ab3@10838>   TST.b exdebug
00027B28 <AmiBlitz3.ab3@10839>    BEQ JL_0_757Cb
00027B2E <AmiBlitz3.ab3@10840>   MOVE.w dontwrite,D1
00027B32 <AmiBlitz3.ab3@10841>   BNE.w JL_0_757Cb
00027B38 <AmiBlitz3.ab3@10842>   MOVE.l chipsize,d5
00027B3E <AmiBlitz3.ab3@10843>   MOVE.l bsssize,d3
00027B44 <AmiBlitz3.ab3@10844>   MOVE.l chipstart,d7
00027B4A <AmiBlitz3.ab3@10845>   MOVE.l bssstart,d6
00027B50 <AmiBlitz3.ab3@10846>   MOVEA.l hunkoffsetbase,A2
00027B56 <AmiBlitz3.ab3@10847>   MOVEA.l destbufferstart,A1
00027B58 <AmiBlitz3.ab3@10848>   MOVE.l A1,D2
00027B5E <AmiBlitz3.ab3@10849>   ADD.l noinits,D2
00027B64 <AmiBlitz3.ab3@10850>   CLR.l hunkoffsetnum
00027B68 <AmiBlitz3.ab3@10853>   CMPA.w #$0,A2
00027B6C <AmiBlitz3.ab3@10854>    BEQ.w JL_0_757Cb
00027B70 <AmiBlitz3.ab3@10855>   MOVE.l $4(A2),D0
00027B74 <AmiBlitz3.ab3@10856>    LEA $0(a1,d0.l),a0
00027B76 <AmiBlitz3.ab3@10857>    MOVE.l (a0),d1
00027B78 <AmiBlitz3.ab3@10858>   TST.l d1
00027B7C <AmiBlitz3.ab3@10859>    BMI.w 'lm1
00027B84 <AmiBlitz3.ab3@10860>   MOVE.b #0,newhunk
00027B8E <AmiBlitz3.ab3@10861>   CMP.l #-1,chipstart
00027B92 <AmiBlitz3.ab3@10862>   BEQ 'l10
00027B98 <AmiBlitz3.ab3@10863>   CMP.l chipstart,d1
00027B9C <AmiBlitz3.ab3@10864>   BLT 'l10
00027BA4 <AmiBlitz3.ab3@10865>   MOVE.b #1,newhunk
00027BAA <AmiBlitz3.ab3@10866>   CMP.l chipend,d1
00027BAE <AmiBlitz3.ab3@10867>   BGE 'l110
00027BB0 <AmiBlitz3.ab3@10868>   ADD.l d7,(a0)
00027BB8 <AmiBlitz3.ab3@10869>   ADD.l #$80000000,4(a2)
00027BBC <AmiBlitz3.ab3@10870> BRA JL_0_7576b
00027BC0 <AmiBlitz3.ab3@10873>   ADD.l d5,0(a0)
00027BCA <AmiBlitz3.ab3@10876>   CMP.l #-1,bssstart
00027BCE <AmiBlitz3.ab3@10877>     BEQ 'l11
00027BD4 <AmiBlitz3.ab3@10878>   CMP.l bssstart,d1
00027BD8 <AmiBlitz3.ab3@10879>   BLT 'l11
00027BDE <AmiBlitz3.ab3@10880>   CMP.l bssend,d1
00027BE2 <AmiBlitz3.ab3@10881>   BGE 'l111
00027BE8 <AmiBlitz3.ab3@10882>   TST.b newhunk
00027BEC <AmiBlitz3.ab3@10883>   BEQ 'ln1
00027BEE <AmiBlitz3.ab3@10884>   ADD.l d5,(a0)
00027BF0 <AmiBlitz3.ab3@10887>   ADD.l d6,(a0)
00027BF8 <AmiBlitz3.ab3@10888>   ADD.l #$40000000,4(a2)
00027BFC <AmiBlitz3.ab3@10889> BRA JL_0_7576b
00027C00 <AmiBlitz3.ab3@10892>   ADD.l d3,0(a0)
00027C02 <AmiBlitz3.ab3@10895>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00027C08 <AmiBlitz3.ab3@10898>   ADDQ.l #1,hunkoffsetnum
00027C0A <AmiBlitz3.ab3@10901>   MOVEA.l (A2),A2
00027C0E <AmiBlitz3.ab3@10902> BRA.w JL_0_755Eb
00027C14 <AmiBlitz3.ab3@10905>   JSR call_setpointernormal
00027C18 <AmiBlitz3.ab3@10906>   MOVEM.l (a7)+,d2-d7/a2-a6
00027C1A <AmiBlitz3.ab3@10908> RTS
00027C1C <AmiBlitz3.ab3@10912>   MOVE.l D2,-(A7)
00027C22 <AmiBlitz3.ab3@10913>   MOVE.l destpointer,D2
00027C28 <AmiBlitz3.ab3@10914>   SUB.l destbufferstart,D2
00027C2C <AmiBlitz3.ab3@10915>   BSR.w addhunkoffset
00027C2E <AmiBlitz3.ab3@10916>   MOVE.l (A7)+,D2
00027C30 <AmiBlitz3.ab3@10917> RTS
00027C34 <AmiBlitz3.ab3@10921>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00027C3A <AmiBlitz3.ab3@10922>   TST.b nohunkoffset
00027C3E <AmiBlitz3.ab3@10923>   BNE 'l10
00027C40 <AmiBlitz3.ab3@10924>   MOVEQ.l #$8,D0
00027C42 <AmiBlitz3.ab3@10925>   MOVEQ.l #$01,D1
00027C48 <AmiBlitz3.ab3@10926>   MOVEA.l _execbase,A6
00027C4E <AmiBlitz3.ab3@10927>   MOVE.l mempool2,a0
00027C52 <AmiBlitz3.ab3@10928>   JSR _AllocPooled(a6)
00027C58 <AmiBlitz3.ab3@10930>   ADDQ.l #1,hunkoffsetcounter
00027C5A <AmiBlitz3.ab3@10931>   MOVEA.l D0,A0
00027C60 <AmiBlitz3.ab3@10932>   MOVE.l hunkoffsetbase,(A0)
00027C66 <AmiBlitz3.ab3@10933>   MOVE.l A0,hunkoffsetbase
00027C6A <AmiBlitz3.ab3@10934>   MOVE.l D2,$4(A0)
00027C6E <AmiBlitz3.ab3@10937>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00027C70 <AmiBlitz3.ab3@10938> RTS
00027C76 <AmiBlitz3.ab3@10942>   CLR.l hunkoffsetbase
00027C7C <AmiBlitz3.ab3@10943>   MOVEA.l _execbase,A6
00027C82 <AmiBlitz3.ab3@10944>   MOVEA.l hunkoffsetbase,A2
00027C86 <AmiBlitz3.ab3@10947>     CMPA.w #$0,A2
00027C8A <AmiBlitz3.ab3@10948>      BEQ.w JL_0_7988
00027C8C <AmiBlitz3.ab3@10949>     MOVEA.l A2,A1
00027C8E <AmiBlitz3.ab3@10950>     MOVEQ.l #$08,D0
00027C90 <AmiBlitz3.ab3@10951>     MOVEA.l (A2),A2
00027C96 <AmiBlitz3.ab3@10952>     MOVE.l mempool2,a0
00027C9A <AmiBlitz3.ab3@10953>     JSR _FreePooled(A6)
00027C9E <AmiBlitz3.ab3@10954> BRA.w JL_0_7972
00027CA4 <AmiBlitz3.ab3@10957>   CLR.l hunkoffsetcounter
00027CA6 <AmiBlitz3.ab3@10958> RTS
00027CBE <AmiBlitz3.ab3@10961> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00027CC2 <AmiBlitz3.ab3@10962> cmakea5:    Ds.l 1
00027CC4 <AmiBlitz3.ab3@10963> cmake:      Ds.w 1
00027D44 <AmiBlitz3.ab3@10964> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00027D4A <AmiBlitz3.ab3@10968>   MOVE.l A5,lastsourcepos
00027D54 <AmiBlitz3.ab3@10969>   MOVE.w instringon,oldqflag
00027D56 <AmiBlitz3.ab3@10973>   MOVEQ.l #$00,D0
00027D58 <AmiBlitz3.ab3@10974>   MOVE.b (A5)+,D0
00027D5C <AmiBlitz3.ab3@10975>    BEQ getcharb__donea
00027D60 <AmiBlitz3.ab3@10976>   BPL getcharb__stuffa
00027D62 <AmiBlitz3.ab3@10977>   LSL.l #8,D0
00027D64 <AmiBlitz3.ab3@10978>   MOVE.b (A5)+,D0
00027D66 <AmiBlitz3.ab3@10979>   MOVE.l a1,-(a7)
00027D6C <AmiBlitz3.ab3@10980>   LEA replacedat,a1
00027D70 <AmiBlitz3.ab3@10981>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00027D74 <AmiBlitz3.ab3@10982>   BEQ getchar__l10
00027D78 <AmiBlitz3.ab3@10983>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00027D7A <AmiBlitz3.ab3@10987>   MOVE.l (a7)+,a1
00027D7E <AmiBlitz3.ab3@10988> BRA getchar__weiter
00027D82 <AmiBlitz3.ab3@10991>   CMP.w #$22,D0
00027D86 <AmiBlitz3.ab3@10992>    BEQ.b swapquotea
00027D8A <AmiBlitz3.ab3@10993>   CMP.w #$3B,D0
00027D8E <AmiBlitz3.ab3@10994>    BNE.b getcharb__donea
00027D94 <AmiBlitz3.ab3@10995>   TST.w instringon
00027D98 <AmiBlitz3.ab3@10996>    BNE.b getcharb__donea
00027D9A <AmiBlitz3.ab3@10999>   MOVE.b (A5)+,D0
00027D9E <AmiBlitz3.ab3@11000>              BEQ getchar__l1
00027DA2 <AmiBlitz3.ab3@11001>              CMP.b #":",d0
00027DA6 <AmiBlitz3.ab3@11002>              BNE getcharb__loopa                                ;:@
00027DAA <AmiBlitz3.ab3@11003>              CMP.b #"@",(a5)
00027DAE <AmiBlitz3.ab3@11004>              BNE getcharb__loopa
00027DB0 <AmiBlitz3.ab3@11005>              ADDQ #1,a5
00027DB6 <AmiBlitz3.ab3@11008>   MOVE.w D0,lastchar
00027DBA <AmiBlitz3.ab3@11011> BRA.s getchar__weiter
00027DC0 <AmiBlitz3.ab3@11014>   NOT.w instringon
00027DC6 <AmiBlitz3.ab3@11017>    MOVE.w D0,lastchar
00027DCA <AmiBlitz3.ab3@11018>    BEQ.w getchar__done
00027DCE <AmiBlitz3.ab3@11019>    BPL.w getchar__done2
00027DD2 <AmiBlitz3.ab3@11020>   CMP.w #-$7FE4,D0                                         ;cnif
00027DD6 <AmiBlitz3.ab3@11021>    BEQ.w getchar__cnif
00027DDA <AmiBlitz3.ab3@11022>   CMP.w #-$7FE3,D0                                         ;csif
00027DDE <AmiBlitz3.ab3@11023>    BEQ.w getchar__csif
00027DE2 <AmiBlitz3.ab3@11024>   CMP.w #-$7FE2,D0                                         ;celse
00027DE6 <AmiBlitz3.ab3@11025>    BEQ.w getchar__celse
00027DEA <AmiBlitz3.ab3@11026>   CMP.w #-$7FE1,D0                                         ;cend
00027DEE <AmiBlitz3.ab3@11027>    BEQ.w getchar__cend
00027DF4 <AmiBlitz3.ab3@11030>   TST.w skipcode
00027DF8 <AmiBlitz3.ab3@11031>    BEQ.w getchar
00027DFC <AmiBlitz3.ab3@11032>   CMP.w #$7E,D0
00027E00 <AmiBlitz3.ab3@11033>    BEQ.w getchar__cmake                                         ;tilde
00027E04 <AmiBlitz3.ab3@11034>   CMP.w #$2,D0
00027E08 <AmiBlitz3.ab3@11035>    BNE.w getchar__notunpath
00027E0E <AmiBlitz3.ab3@11036>   MOVEA.l usedfrom,A5
00027E14 <AmiBlitz3.ab3@11037>   CLR.l usedfrom
00027E18 <AmiBlitz3.ab3@11038> BRA.w getchar
00027E1C <AmiBlitz3.ab3@11041>   CMP.w #$1,D0
00027E20 <AmiBlitz3.ab3@11042>    BNE.w getchar__done
00027E24 <AmiBlitz3.ab3@11046>   MOVEA.l cmakea5(PC),A5
00027E28 <AmiBlitz3.ab3@11047> BRA.w getchar
00027E2E <AmiBlitz3.ab3@11050>   TST.w cmake
00027E32 <AmiBlitz3.ab3@11051>    BNE.w getchar__done
00027E36 <AmiBlitz3.ab3@11053>   MOVEM.l D0-D7/A0-A6,-(A7)
00027E3C <AmiBlitz3.ab3@11054>   LEA cmake,a0                                         ;reass
00027E3E <AmiBlitz3.ab3@11055>   NOT.w (a0)
00027E42 <AmiBlitz3.ab3@11056>   LEA cmakebak(PC),A0
00027E48 <AmiBlitz3.ab3@11057>   LEA ptr_parameterstore,A1
00027E4A <AmiBlitz3.ab3@11058>   MOVEQ.l #$1F,D0
00027E4C <AmiBlitz3.ab3@11061>     MOVE.l (A1)+,(A0)+
00027E50 <AmiBlitz3.ab3@11062>   DBF D0,getchar__cmloop
00027E56 <AmiBlitz3.ab3@11065>    JSR AJL_0_BF6E
00027E5A <AmiBlitz3.ab3@11066>   CMP.w #$7E,D0
00027E5E <AmiBlitz3.ab3@11067>    BNE.w syntaxerr
00027E64 <AmiBlitz3.ab3@11068>   MOVE.l A5,cmakea5                                      ;tilde
00027E68 <AmiBlitz3.ab3@11069>   LEA cmakebuff(PC),A0
00027E6A <AmiBlitz3.ab3@11070>   MOVE.l D3,D2
00027E6E <AmiBlitz3.ab3@11071>   BSR.w makelong
00027E70 <AmiBlitz3.ab3@11072>   ADDQ.b #1,(A0)
00027E76 <AmiBlitz3.ab3@11073>   LEA cmake,a0
00027E78 <AmiBlitz3.ab3@11074>   NOT.w (a0)                                               ;reass
00027E7C <AmiBlitz3.ab3@11075>   LEA cmakebak(PC),A0
00027E82 <AmiBlitz3.ab3@11076>   LEA ptr_parameterstore,A1
00027E84 <AmiBlitz3.ab3@11077>   MOVEQ.l #$1F,D0
00027E86 <AmiBlitz3.ab3@11080>     MOVE.l (A0)+,(A1)+
00027E8A <AmiBlitz3.ab3@11081>   DBF D0,getchar__cmloop2
00027E8E <AmiBlitz3.ab3@11083>   MOVEM.l (A7)+,D0-D7/A0-A6
00027E92 <AmiBlitz3.ab3@11084>   LEA cmakebuff(PC),A5
00027E96 <AmiBlitz3.ab3@11085> BRA.w getchar
00027E98 <AmiBlitz3.ab3@11088> RTS
00027EA2 <AmiBlitz3.ab3@11092>   MOVE.l linenumat,ciflineat                               ;csif
00027EA8 <AmiBlitz3.ab3@11093>   TST.w skipcode
00027EAC <AmiBlitz3.ab3@11094>    BEQ.w getchar__incnest
00027EB0 <AmiBlitz3.ab3@11095>    BSR.w get1bytemain
00027EB2 <AmiBlitz3.ab3@11096>    MOVE.l a1,-(a7)
00027EB8 <AmiBlitz3.ab3@11097>    JSR JL_0_C492
00027EBA <AmiBlitz3.ab3@11098>    MOVE.l (a7)+,a1
00027EBE <AmiBlitz3.ab3@11099> BRA.w getchar
00027EC8 <AmiBlitz3.ab3@11102>   MOVE.l linenumat,ciflineat                               ;cnif
00027ECE <AmiBlitz3.ab3@11103>   TST.w skipcode
00027ED2 <AmiBlitz3.ab3@11104>    BEQ.w getchar__incnest
00027ED6 <AmiBlitz3.ab3@11105>    BSR.w get1bytemain
00027EDA <AmiBlitz3.ab3@11106>    CMP.b #"@",d0
00027EDE <AmiBlitz3.ab3@11107>    BNE getchar__cnif_ok2
00027EE2 <AmiBlitz3.ab3@11108>    BSR.w get1bytemain
00027EEA <AmiBlitz3.ab3@11109>    MOVE.b #1,incnif
00027EF0 <AmiBlitz3.ab3@11110>    JSR findconstant2
00027EF4 <AmiBlitz3.ab3@11111>    BEQ getchar__cnif_ok2
00027EFA <AmiBlitz3.ab3@11114>    MOVE.w fast,-(a7)
00027F00 <AmiBlitz3.ab3@11115>    CLR.b fast
00027F02 <AmiBlitz3.ab3@11116>    MOVE.l a1,-(a7)
00027F08 <AmiBlitz3.ab3@11117>    JSR JL_0_C47E
00027F0E <AmiBlitz3.ab3@11118>    CLR.b incnif
00027F10 <AmiBlitz3.ab3@11119>    MOVE.l (a7)+,a1
00027F16 <AmiBlitz3.ab3@11120>    MOVE.w (a7)+,fast
00027F1A <AmiBlitz3.ab3@11121> BRA.w getchar
00027F20 <AmiBlitz3.ab3@11124>   ADDQ.w #1,connest
00027F24 <AmiBlitz3.ab3@11125> BRA.w getchar
00027F2A <AmiBlitz3.ab3@11128>   MOVE.w connest,D0                                      ;celse
00027F2E <AmiBlitz3.ab3@11129>    BNE.w getchar
00027F34 <AmiBlitz3.ab3@11130>   NOT.w skipcode
00027F38 <AmiBlitz3.ab3@11131> BRA.w getchar
00027F3E <AmiBlitz3.ab3@11134>   SUBQ.w #1,connest                                      ;cend
00027F42 <AmiBlitz3.ab3@11135>    BPL.w getchar
00027F48 <AmiBlitz3.ab3@11136>   ADDQ.w #1,connest
00027F4E <AmiBlitz3.ab3@11137>   MOVEA.l concomsp,A0
00027F54 <AmiBlitz3.ab3@11138>   CMPA.l #concomstack,A0
00027F58 <AmiBlitz3.ab3@11139>    BEQ.w nociferr
00027F5A <AmiBlitz3.ab3@11140>   SUBQ.w #2,A0
00027F60 <AmiBlitz3.ab3@11141>   MOVE.l A0,concomsp
00027F66 <AmiBlitz3.ab3@11142>   MOVE.w (A0),skipcode
00027F6A <AmiBlitz3.ab3@11143> BRA.w getchar
00027F6E <AmiBlitz3.ab3@11146> ciflineat:   Ds.l 1
00027F70 <AmiBlitz3.ab3@11154>   MOVEQ.l #$00,D0
00027F72 <AmiBlitz3.ab3@11155>   MOVE.b (A5)+,D0
00027F76 <AmiBlitz3.ab3@11156>    BEQ.b getcharb__done
00027F7A <AmiBlitz3.ab3@11157>    BPL.b getcharb__stuff
00027F7C <AmiBlitz3.ab3@11158>   LSL.w #8,D0
00027F7E <AmiBlitz3.ab3@11159>   MOVE.b (A5)+,D0
00027F80 <AmiBlitz3.ab3@11160> RTS
00027F84 <AmiBlitz3.ab3@11163>   CMP.w #$22,D0
00027F88 <AmiBlitz3.ab3@11164>    BEQ.b swapquote
00027F8C <AmiBlitz3.ab3@11165>   CMP.w #$3B,D0
00027F90 <AmiBlitz3.ab3@11166>    BNE.b getcharb__done
00027F96 <AmiBlitz3.ab3@11167>   TST.w instringon
00027F9A <AmiBlitz3.ab3@11168>    BNE.b getcharb__done
00027F9C <AmiBlitz3.ab3@11171>   MOVE.b (A5)+,D0
00027FA0 <AmiBlitz3.ab3@11172>             BEQ getcharb__loop_l1
00027FA4 <AmiBlitz3.ab3@11173>             CMP.b #":",d0
00027FA8 <AmiBlitz3.ab3@11174>             BNE getcharb__loop
00027FAC <AmiBlitz3.ab3@11175>             CMP.b #"@",(a5)
00027FB0 <AmiBlitz3.ab3@11176>             BNE getcharb__loop
00027FB6 <AmiBlitz3.ab3@11179>   MOVE.w D0,lastchar
00027FB8 <AmiBlitz3.ab3@11182> RTS
00027FBE <AmiBlitz3.ab3@11185>   NOT.w instringon
00027FC0 <AmiBlitz3.ab3@11186> RTS
00027FC4 <AmiBlitz3.ab3@11190>   BSR.w getchar
00027FCA <AmiBlitz3.ab3@11191>   TST.w instringon
00027FCE <AmiBlitz3.ab3@11192>    BNE.w get1byte__skip
00027FD2 <AmiBlitz3.ab3@11193>   CMP.w #$20,D0
00027FD6 <AmiBlitz3.ab3@11194>    BEQ.w get1byte_
00027FD8 <AmiBlitz3.ab3@11197> RTS
00027FF2 <AmiBlitz3.ab3@11200> gs:        Ds.w 13                                         ;ds.b 26  org source
00027FF6 <AmiBlitz3.ab3@11201>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00027FF8 <AmiBlitz3.ab3@11202>            Dc.b $C4,$DC
00027FFC <AmiBlitz3.ab3@11208>   BSR.w getchar
00028002 <AmiBlitz3.ab3@11209>   TST.w instringon
00028006 <AmiBlitz3.ab3@11210>    BNE.w gchar2
0002800A <AmiBlitz3.ab3@11211>   CMP.w #$20,D0
0002800E <AmiBlitz3.ab3@11212>    BEQ.w get1bytemain
00028010 <AmiBlitz3.ab3@11214>   TST.w D0
00028014 <AmiBlitz3.ab3@11217>   BEQ.b get1bytemain__zero
0002801A <AmiBlitz3.ab3@11218>   TST.w instringon
0002801E <AmiBlitz3.ab3@11219>    BEQ.b get1bytemain__noqoute
00028022 <AmiBlitz3.ab3@11220>   CMP.b #$20,D0
00028026 <AmiBlitz3.ab3@11221>    BCC.b get1bytemain__skip
0002802A <AmiBlitz3.ab3@11222>   MOVE.b gs(PC,D0.W),D0
0002802C <AmiBlitz3.ab3@11223> RTS
00028030 <AmiBlitz3.ab3@11226>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028034 <AmiBlitz3.ab3@11227>    BEQ.b get1bytemain__zero
00028038 <AmiBlitz3.ab3@11228>   CMP.w #$3A,D0
0002803C <AmiBlitz3.ab3@11229>    BEQ.b get1bytemain__zero
0002803E <AmiBlitz3.ab3@11232>   TST.w D0
00028040 <AmiBlitz3.ab3@11235> RTS
00028046 <AmiBlitz3.ab3@11239>   MOVE.w lastchar,D0
0002804A <AmiBlitz3.ab3@11240> BRA.w gchar2
00028054 <AmiBlitz3.ab3@11244>   MOVE.w oldqflag,instringon
0002805A <AmiBlitz3.ab3@11245>   MOVEA.l lastsourcepos,A5
0002805C <AmiBlitz3.ab3@11246> RTS
00028062 <AmiBlitz3.ab3@11250>   MOVE.w D0,locchar
00028068 <AmiBlitz3.ab3@11251>   MOVE.l A5,locloc
0002806A <AmiBlitz3.ab3@11252> RTS
00028070 <AmiBlitz3.ab3@11256>   MOVEA.l locloc,A5
00028076 <AmiBlitz3.ab3@11257>   MOVE.w locchar,D0
0002807C <AmiBlitz3.ab3@11258>   MOVE.w D0,lastchar
0002807E <AmiBlitz3.ab3@11259> RTS
0002807E <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
000280C6 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028118 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028156 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028194 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
000281BE <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
000281EE <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028238 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
000282BE <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028320 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028368 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
000283BA <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
0002841C <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
0002846A <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
000284A0 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
000284CE <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
000284E8 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028506 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028584 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
000285AE <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
000285D4 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
000285F4 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028612 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028632 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
0002865A <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028684 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028686 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000286A2 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000286C8 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
000286E0 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
0002873E <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028760 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028786 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000287AE <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000287CE <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
000287F2 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028838 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
0002885C <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028880 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000288A0 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
000288C4 <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
000288E6 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028912 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028938 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028942 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028968 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000289BA <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028A24 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028A82 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028AF0 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00028B2C <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028B4A <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00028B70 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00028BA0 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00028BC4 <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00028BF2 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00028C16 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00028C2C <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00028C42 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00028C48 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00028C50 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00028C52 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00028C56 <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00028C5E <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00028C60 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00028C9A <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00028CC6 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00028CF6 <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00028D2E <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00028D88 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00028D8A <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00028D8E <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00028D92 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00028D96 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00028D9A <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00028D9E <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00028DA2 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00028DA6 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00028DAA <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00028DAE <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00028DB2 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00028DF0 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00028E22 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00028E40 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00028E6A <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00028E86 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00028EA0 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00028EBE <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00028EE2 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00028EE4 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00028F36 <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00028F5E <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00028F86 <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00028FA2 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00028FC2 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00028FDA <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
0002901E <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00029066 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029090 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
000290BA <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
000290D4 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
000290FE <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029152 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
0002919E <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
000291D6 <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
000291DC <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
000291EA <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
0002921A <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
0002924E <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000292B4 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
000292D2 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
0002934C <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029374 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
0002938A <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
0002939E <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
000293A0 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
000293A1 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
000293A2 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
000293C2 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
000293C8 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
000293DA <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
0002940E <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029426 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029442 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
0002945A <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
0002947A <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
0002949A <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
000294C0 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
000294D6 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
000294F2 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
0002951C <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029534 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029550 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00029570 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029588 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
0002958C <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029592 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029598 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
000295AD <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
000295B3 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
000295B4 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
000295B8 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
000295BE <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
000295C4 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
000295D7 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
000295DD <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
000295DE <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
000295FC <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029614 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029630 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
0002965A <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029674 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029694 <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
000296B2 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
000296E0 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
000296EA <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002971C <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002973A <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029758 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029778 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002979E <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
000297C4 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
000297EC <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002980A <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002982A <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029844 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029866 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029884 <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
000298A6 <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
000298CA <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
000298D0 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
000298EC <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029908 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029926 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029944 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029992 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
000299B0 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
000299CE <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
000299E8 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029A34 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029A5A <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029A7A <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029A9C <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029AB8 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029ADE <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029AFA <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029B18 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
00029B40 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00029B5C <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
00029B6C <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
00029B8E <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
00029B92 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
00029B94 <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
00029BAE <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
00029BD2 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
00029BF2 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
00029C24 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
00029C82 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
00029CBA <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
00029CF8 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
00029D2E <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
00029D60 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
00029D84 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00029DA8 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
00029DF2 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00029E1A <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
00029E64 <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
00029EA4 <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
00029EA4 <AmiBlitz3.ab3@11263> XINCLUDE "internal_errormsg.ab3"
00029EA6 <AmiBlitz3.ab3@11267> ezerr:   Ds.w 1                                            ;for simple errors
00029EAC <AmiBlitz3.ab3@11273>    MOVE.l myline,d0
00029EB0 <AmiBlitz3.ab3@11274>   BNE handle_compileerror__l2
00029EB6 <AmiBlitz3.ab3@11276>     MOVE.l a5,lastsourcepos
00029EB8 <AmiBlitz3.ab3@11278>     SUBA.l a5,a5
00029EBE <AmiBlitz3.ab3@11280>   TST.l usedfrom
00029EC2 <AmiBlitz3.ab3@11281>   BEQ handle_compileerror__org
00029EC8 <AmiBlitz3.ab3@11282>     MOVEA.l usedfrom,a5
00029ECE <AmiBlitz3.ab3@11285>   TST.w dirmode
00029ED2 <AmiBlitz3.ab3@11286>   BNE.b handle_compileerror__quiet
00029ED8 <AmiBlitz3.ab3@11287>     JSR call_setpointernormal
00029EDC <AmiBlitz3.ab3@11288>     MOVE.w ezerr(PC),D0
00029EE0 <AmiBlitz3.ab3@11289>     BNE.w handle_compileerror__skip
00029EE6 <AmiBlitz3.ab3@11290>       MOVE.w cfetchmode,D0
00029EEA <AmiBlitz3.ab3@11291>       BEQ.w handle_compileerror__skip2
00029EF4 <AmiBlitz3.ab3@11292>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00029EFA <AmiBlitz3.ab3@11295>   MOVE.w constmode,D0
00029EFE <AmiBlitz3.ab3@11296>   BEQ.b handle_compileerror__skip3
00029F02 <AmiBlitz3.ab3@11297>     BSR.w asmerr2
00029F08 <AmiBlitz3.ab3@11300>   MOVE.l firstlocal,D1
00029F0E <AmiBlitz3.ab3@11301>   OR.l firstglob,D1
00029F12 <AmiBlitz3.ab3@11302>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00029F18 <AmiBlitz3.ab3@11303> 
00029F1C <AmiBlitz3.ab3@11304>     BNE handle_compileerror__notproc                       ; yes skip
00029F22 <AmiBlitz3.ab3@11305>       JSR JL_0_DB5C                                        ; no free some data ????
00029F2A <AmiBlitz3.ab3@11308>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00029F34 <AmiBlitz3.ab3@11309>   CMP.l #"NORE",reqmode                                    ;for used functions
00029F38 <AmiBlitz3.ab3@11310>   BEQ handle_compileerror__notproc_l1
00029F42 <AmiBlitz3.ab3@11311>     MOVE.l linenumat,compilelinecounter
00029F48 <AmiBlitz3.ab3@11314>   JSR close_compilewin
00029F4A <AmiBlitz3.ab3@11317>   MOVEA.l (A7)+,A0
00029F50 <AmiBlitz3.ab3@11318>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029F56 <AmiBlitz3.ab3@11319>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029F5A <AmiBlitz3.ab3@11320>   BLT 'lesserror
00029F60 <AmiBlitz3.ab3@11321>   LEA errorlimit_text,a0
00029F66 <AmiBlitz3.ab3@11324>   ADDQ.l #1,errorcounter
00029F6C <AmiBlitz3.ab3@11325>   JSR errorstringparse
00029F76 <AmiBlitz3.ab3@11326>   CMP.l #"NORE",reqmode                                    ;for used functions
00029F7A <AmiBlitz3.ab3@11327>   BEQ handle_compileerror__skip_Lxx2
00029F80 <AmiBlitz3.ab3@11328>   TST.l CLIMode
00029F84 <AmiBlitz3.ab3@11329>   BNE 'climode_output
00029F8A <AmiBlitz3.ab3@11332>     JSR save_errorfile
00029F8E <AmiBlitz3.ab3@11333>     BRA 'end_output
00029F94 <AmiBlitz3.ab3@11336>     JSR stdout_error
00029F9A <AmiBlitz3.ab3@11338>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029FA0 <AmiBlitz3.ab3@11339>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029FA4 <AmiBlitz3.ab3@11340>      BGT 'end_output
00029FAA <AmiBlitz3.ab3@11341>     MOVE.l lastsourcepos,a5
00029FAC <AmiBlitz3.ab3@11343>  'loop TST.b (a5)
00029FB0 <AmiBlitz3.ab3@11344>       BEQ 'ok2
00029FB2 <AmiBlitz3.ab3@11345>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00029FB6 <AmiBlitz3.ab3@11346>     BEQ 'ok
00029FBA <AmiBlitz3.ab3@11347>     CMP.b #":",d0
00029FBE <AmiBlitz3.ab3@11348>     BEQ 'ok
00029FC2 <AmiBlitz3.ab3@11349>     BRA 'loop
00029FC4 <AmiBlitz3.ab3@11351>  'ok SUBQ.l #1,a5
00029FCC <AmiBlitz3.ab3@11353>  'ok2 MOVE.w #0,lastchar
00029FD4 <AmiBlitz3.ab3@11354>     MOVE.b #1,iserror
00029FDA <AmiBlitz3.ab3@11355>     MOVE.l stackaddr,a7
00029FDC <AmiBlitz3.ab3@11356>     RTS
00029FDE <AmiBlitz3.ab3@11362>   MOVE.l A0,-(a7)
0002A01C <AmiBlitz3.ab3@11363>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A01E <AmiBlitz3.ab3@11364>   MOVE.l (a7)+,A0
0002A022 <AmiBlitz3.ab3@11366>   MOVEM.l d6/D7/A6,-(A7)
0002A028 <AmiBlitz3.ab3@11367>   MOVE.l includeline,d7
0002A02E <AmiBlitz3.ab3@11368>   MOVE.l #"INLN",a6
0002A038 <AmiBlitz3.ab3@11369>   MOVE.l errstack,tempa7
0002A03A <AmiBlitz3.ab3@11370>   JSR (A1)                                                  ;open ped errorrequest
0002A03E <AmiBlitz3.ab3@11372>   MOVEM.l (A7)+,D7/d6/A6
0002A044 <AmiBlitz3.ab3@11375>   MOVE.l tempa7,a7
0002A04A <AmiBlitz3.ab3@11376>   MOVEA.l errcont,A0
0002A04C <AmiBlitz3.ab3@11378> RTS
0002A052 <AmiBlitz3.ab3@11381>   MOVEA.l errstack,A7
0002A058 <AmiBlitz3.ab3@11382>   MOVEA.l errcont,A0
0002A05A <AmiBlitz3.ab3@11384> RTS
0002A05C <AmiBlitz3.ab3@11387>   MOVE.l (A7),D0
0002A062 <AmiBlitz3.ab3@11388>   MOVEA.l errstack,A7
0002A068 <AmiBlitz3.ab3@11389>   MOVEA.l errcont,A0
0002A06A <AmiBlitz3.ab3@11390> JMP (A0)
0002A06E <AmiBlitz3.ab3@11396>   CMP.w #$7A,D0                                            ;'z'
0002A072 <AmiBlitz3.ab3@11397>    BHI.w tstalpha__no
0002A076 <AmiBlitz3.ab3@11398>   CMP.w #$41,D0                                            ;'A'
0002A07A <AmiBlitz3.ab3@11399>    BCS.w tstalpha__no
0002A07E <AmiBlitz3.ab3@11400>   CMP.w #$61,D0                                            ;'a'
0002A082 <AmiBlitz3.ab3@11401>    BCC.w tstalpha__yes
0002A086 <AmiBlitz3.ab3@11402>   CMP.w #$5A,D0                                            ;'Z'
0002A08A <AmiBlitz3.ab3@11403>    BHI.w tstalpha__no
0002A08C <AmiBlitz3.ab3@11406>   CMP.w D0,D0
0002A08E <AmiBlitz3.ab3@11409> RTS
0002A092 <AmiBlitz3.ab3@11417>   CMP.w #$30,D0                                            ;'0'
0002A096 <AmiBlitz3.ab3@11418>    BCS.w tstnum__skip
0002A09A <AmiBlitz3.ab3@11419>   CMP.w #$39,D0                                            ;'9'
0002A09E <AmiBlitz3.ab3@11420>    BHI.w tstnum__skip                                     
0002A0A0 <AmiBlitz3.ab3@11421>   CMP.w D0,D0
0002A0A2 <AmiBlitz3.ab3@11424> RTS
0002A0C4 <AmiBlitz3.ab3@11430>   !compare1                                                ;bsr.w tstalpha
0002A0C8 <AmiBlitz3.ab3@11431>    BEQ.w tstlab__skip
0002A0DA <AmiBlitz3.ab3@11432>   !compare2                                                ;bsr.w tstnum2
0002A0DE <AmiBlitz3.ab3@11433>    BEQ.w tstlab__skip
0002A0E2 <AmiBlitz3.ab3@11434>   CMP.w #$5F,D0                                            ;'_'
0002A0E6 <AmiBlitz3.ab3@11435>    BEQ.w tstlab__skip
0002A0EA <AmiBlitz3.ab3@11436>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A0EC <AmiBlitz3.ab3@11439> RTS
0002A0F6 <AmiBlitz3.ab3@11444>   MOVE.w oldqflag,instringon
0002A0FC <AmiBlitz3.ab3@11445>   MOVEA.l lastsourcepos,A5
0002A102 <AmiBlitz3.ab3@11448>   MOVE.l a5,beforeparameterfetch
0002A108 <AmiBlitz3.ab3@11449>   LEA ptr_parameterstore,A1
0002A10A <AmiBlitz3.ab3@11452>   MOVEQ.l #$00,D2
0002A110 <AmiBlitz3.ab3@11455>   LEA chartab,a0
0002A112 <AmiBlitz3.ab3@11456>   MOVEQ #0,d0
0002A118 <AmiBlitz3.ab3@11457>   MOVE.l A5,lastsourcepos
0002A122 <AmiBlitz3.ab3@11458>   MOVE.w instringon,oldqflag
0002A124 <AmiBlitz3.ab3@11461>     MOVE.b (a5)+,d0
0002A128 <AmiBlitz3.ab3@11462>   CMP.b #$20,d0                                            ;space deftype
0002A12C <AmiBlitz3.ab3@11463>   BEQ makename4__retry
0002A132 <AmiBlitz3.ab3@11465>   MOVE.w d0,lastchar
0002A136 <AmiBlitz3.ab3@11466>   TST.b 0(a0,d0.w)
0002A13A <AmiBlitz3.ab3@11467>   BNE makename__done
0002A13C <AmiBlitz3.ab3@11476>   MOVE.b D0,(A1)+
0002A13E <AmiBlitz3.ab3@11477>   ADDQ.l #1,D2
0002A144 <AmiBlitz3.ab3@11478>   MOVE.l A5,lastsourcepos
0002A146 <AmiBlitz3.ab3@11481>   MOVE.b (a5)+,d0
0002A14C <AmiBlitz3.ab3@11482>   MOVE.b d0,lastchar+1
0002A150 <AmiBlitz3.ab3@11483>   CMP.b #$20,d0
0002A154 <AmiBlitz3.ab3@11484>   BEQ makename__loop_l20
0002A158 <AmiBlitz3.ab3@11486>   TST.b 0(a0,d0)
0002A15C <AmiBlitz3.ab3@11487>   BEQ makename__loop
0002A160 <AmiBlitz3.ab3@11488>   CMP.b #2,d0
0002A164 <AmiBlitz3.ab3@11489>   BNE makename__loop_lf1
0002A16A <AmiBlitz3.ab3@11490>   MOVEA.l usedfrom,A5
0002A170 <AmiBlitz3.ab3@11491>   CLR.l usedfrom
0002A174 <AmiBlitz3.ab3@11492> BRA makename__loop_ln1
0002A178 <AmiBlitz3.ab3@11495>   CMP.b #1,d0
0002A17C <AmiBlitz3.ab3@11496>   BNE makename__loop_l20
0002A180 <AmiBlitz3.ab3@11497>   MOVEA.l cmakea5(PC),A5
0002A184 <AmiBlitz3.ab3@11498> BRA makename__loop_ln1
0002A188 <AmiBlitz3.ab3@11501>   CMP.b #$7e,d0
0002A18C <AmiBlitz3.ab3@11502>             BNE makename__loop_lt
0002A192 <AmiBlitz3.ab3@11503>             TST.w cmake
0002A196 <AmiBlitz3.ab3@11504>             BNE.w makename__loop_a1
0002A198 <AmiBlitz3.ab3@11505>             SUBQ.l #1,a5
0002A19C <AmiBlitz3.ab3@11506>             BSR.w get1bytemain
0002A1A0 <AmiBlitz3.ab3@11507> BRA makename__loop
0002A1A4 <AmiBlitz3.ab3@11511> BRA makename__loop_gpex
0002A1A8 <AmiBlitz3.ab3@11515>   BSR.w getchar
0002A1CA <AmiBlitz3.ab3@11516>    !compare1                                               ;bsr.w tstalpha
0002A1CE <AmiBlitz3.ab3@11517>    BEQ.w makename__loop_getp1
0002A1E0 <AmiBlitz3.ab3@11518>    !compare2                                               ;bsr.w tstnum
0002A1E4 <AmiBlitz3.ab3@11519>    BEQ.w makename__loop_getp1
0002A1E8 <AmiBlitz3.ab3@11520>   CMP.w #$5F,D0                                            ;'_'
0002A1EC <AmiBlitz3.ab3@11521>    BEQ.w makename__loop_getp1
0002A1F0 <AmiBlitz3.ab3@11522>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A1F4 <AmiBlitz3.ab3@11526>       BNE makename__loop_gpex
0002A1F8 <AmiBlitz3.ab3@11527>       CMP.b #$20,d0
0002A1FC <AmiBlitz3.ab3@11528>       BNE.w makename__loop
0002A1FE <AmiBlitz3.ab3@11531>      TST.b d0
0002A202 <AmiBlitz3.ab3@11532>      BPL makename__loop_l10
0002A204 <AmiBlitz3.ab3@11533>      SUBQ.l #1,a5
0002A208 <AmiBlitz3.ab3@11534>      BSR get1byte_
0002A20C <AmiBlitz3.ab3@11537>    CMP.w #$20,D0
0002A210 <AmiBlitz3.ab3@11538>    BNE.w makename__done
0002A212 <AmiBlitz3.ab3@11539>    MOVEQ #0,d0
0002A218 <AmiBlitz3.ab3@11540>   MOVE.l a5,lastsourcepos
0002A21A <AmiBlitz3.ab3@11543>   MOVE.b (a5)+,d0                                          ;neuneu
0002A21E <AmiBlitz3.ab3@11544>   BPL makename__loop_l101:
0002A220 <AmiBlitz3.ab3@11545>   ASL.w #8,d0
0002A222 <AmiBlitz3.ab3@11546>   MOVE.b (a5)+,d0
0002A228 <AmiBlitz3.ab3@11549>   TST.w instringon
0002A22C <AmiBlitz3.ab3@11550>   BNE makename__loop_l102
0002A230 <AmiBlitz3.ab3@11551>   CMP.b #$20,d0
0002A234 <AmiBlitz3.ab3@11552>   BEQ makename__loop_l103
0002A238 <AmiBlitz3.ab3@11553>   CMP.b #";",d0
0002A23C <AmiBlitz3.ab3@11554>   BNE makename__loop_l102
0002A23E <AmiBlitz3.ab3@11557>   MOVE.b (A5)+,D0
0002A242 <AmiBlitz3.ab3@11558>              BEQ makename__loop_l1
0002A246 <AmiBlitz3.ab3@11559>              CMP.b #":",d0
0002A24A <AmiBlitz3.ab3@11560>              BNE makename__loop_lr                         ;:@
0002A24E <AmiBlitz3.ab3@11561>              CMP.b #"@",(a5)
0002A252 <AmiBlitz3.ab3@11562>              BNE makename__loop_lr
0002A254 <AmiBlitz3.ab3@11563>              ADDQ #1,a5
0002A25A <AmiBlitz3.ab3@11567>   MOVE.w d0,lastchar
0002A25E <AmiBlitz3.ab3@11571>   CMP.b #";",d0
0002A262 <AmiBlitz3.ab3@11572>   BEQ makename__done_l11
0002A264 <AmiBlitz3.ab3@11573>   CLR.b (A1)
0002A266 <AmiBlitz3.ab3@11575>   TST.w D2
0002A268 <AmiBlitz3.ab3@11576> RTS
0002A26A <AmiBlitz3.ab3@11579>   CLR.b (a1)
0002A26C <AmiBlitz3.ab3@11580>   MOVEQ #0,d0
0002A272 <AmiBlitz3.ab3@11581>   MOVE.w d0,lastchar
0002A274 <AmiBlitz3.ab3@11583>   TST.w D2
0002A276 <AmiBlitz3.ab3@11584> RTS
0002A278 <AmiBlitz3.ab3@11590>   MOVE.l (A2),D0
0002A27C <AmiBlitz3.ab3@11593>   BEQ.w findlast__here
0002A27E <AmiBlitz3.ab3@11594>   MOVEA.l D0,A2
0002A282 <AmiBlitz3.ab3@11595> BRA.w findlast__loop
0002A286 <AmiBlitz3.ab3@11598> BRA.w reget
0002A288 <AmiBlitz3.ab3@11604>   MOVE.l (A2),-(A7)
0002A28C <AmiBlitz3.ab3@11605>   BSR.w addlabel
0002A28E <AmiBlitz3.ab3@11606>   MOVE.l (A7)+,(A2)
0002A290 <AmiBlitz3.ab3@11607> RTS
0002A296 <AmiBlitz3.ab3@11612>   CLR.l fp0addr
0002A29C <AmiBlitz3.ab3@11613>   TST.w dirmode
0002A2A0 <AmiBlitz3.ab3@11614>    BNE.w illdirerr
0002A2A2 <AmiBlitz3.ab3@11615>   MOVEQ.l #$00,D0
0002A2A4 <AmiBlitz3.ab3@11616>   MOVE.w D7,D0
0002A2A6 <AmiBlitz3.ab3@11617>   ADD.w D2,D0
0002A2A8 <AmiBlitz3.ab3@11618>   ADDQ.w #1,D0
0002A2AA <AmiBlitz3.ab3@11619>   MOVE.w D0,D2
0002A2AC <AmiBlitz3.ab3@11620>   ADDQ.l #2,d0
0002A2AE <AmiBlitz3.ab3@11621>   MOVEQ.l #$01,D1
0002A2B4 <AmiBlitz3.ab3@11622>   MOVEA.l _execbase,A6
0002A2BA <AmiBlitz3.ab3@11623>   MOVE.l mempool2,a0
0002A2BE <AmiBlitz3.ab3@11624>   JSR _AllocPooled(a6)
0002A2C4 <AmiBlitz3.ab3@11626>   MOVE.l lastlabel,a2
0002A2C6 <AmiBlitz3.ab3@11627>   MOVE.l D0,(A2)
0002A2C8 <AmiBlitz3.ab3@11628>   MOVE.l d0,a0
0002A2CA <AmiBlitz3.ab3@11629>   CLR.l (a0)
0002A2D0 <AmiBlitz3.ab3@11630>   MOVE.l a0,lastlabel
0002A2D2 <AmiBlitz3.ab3@11631>   MOVE.l d0,A2
0002A2D6 <AmiBlitz3.ab3@11632>   LEA -$1(A0,D7.W),A0
0002A2D8 <AmiBlitz3.ab3@11633>   MOVE.b D2,(A0)+
0002A2DE <AmiBlitz3.ab3@11634>   LEA ptr_parameterstore,A1
0002A2E0 <AmiBlitz3.ab3@11635>   MOVEQ #0,d0
0002A2E2 <AmiBlitz3.ab3@11636>   MOVEQ #0,d1
0002A2E4 <AmiBlitz3.ab3@11639>   MOVE.b (A1)+,d1
0002A2E8 <AmiBlitz3.ab3@11640>    BEQ 'l1
0002A2EE <AmiBlitz3.ab3@11641>    !hashalgo
0002A2F0 <AmiBlitz3.ab3@11642>    MOVE.b d1,(A0)+
0002A2F4 <AmiBlitz3.ab3@11643> BRA addlabel_loop2a
0002A2F6 <AmiBlitz3.ab3@11646>    CLR.b (a0)+
0002A2FC <AmiBlitz3.ab3@11647>    LEA labelhash,a0
0002A302 <AmiBlitz3.ab3@11648>    AND.l #hashsize,d0
0002A304 <AmiBlitz3.ab3@11649>    ASL.l #2,d0
0002A308 <AmiBlitz3.ab3@11650>    MOVE.l 0(a0,d0),d1
0002A30C <AmiBlitz3.ab3@11651>    MOVE.l d1,$c(a2)
0002A310 <AmiBlitz3.ab3@11652>    MOVE.l a2,0(a0,d0)
0002A312 <AmiBlitz3.ab3@11653>    MOVEQ #0,d0
0002A316 <AmiBlitz3.ab3@11654> BRA.w reget
0002A31C <AmiBlitz3.ab3@11658>    TST.b newvariable
0002A320 <AmiBlitz3.ab3@11659>    BNE addlabel
0002A326 <AmiBlitz3.ab3@11662>   TST.w dirmode
0002A32A <AmiBlitz3.ab3@11663>    BNE.w illdirerr
0002A32C <AmiBlitz3.ab3@11664>   MOVEQ.l #$00,D0
0002A32E <AmiBlitz3.ab3@11665>   MOVE.w D7,D0
0002A330 <AmiBlitz3.ab3@11666>   ADD.w D2,D0
0002A332 <AmiBlitz3.ab3@11667>   ADDQ.w #1,D0
0002A334 <AmiBlitz3.ab3@11668>   MOVE.w D0,D2
0002A336 <AmiBlitz3.ab3@11669>   MOVEQ.l #$01,D1
0002A33C <AmiBlitz3.ab3@11670>   MOVEA.l _execbase,A6
0002A342 <AmiBlitz3.ab3@11671>   MOVE.l mempool2,a0
0002A346 <AmiBlitz3.ab3@11672>   JSR _AllocPooled(a6)
0002A348 <AmiBlitz3.ab3@11673>   MOVEA.l D0,A0
0002A34E <AmiBlitz3.ab3@11675>   LEA varbase,a2
0002A350 <AmiBlitz3.ab3@11676>   MOVE.l (a2),(a0)
0002A352 <AmiBlitz3.ab3@11677>   MOVE.l A0,(A2)
0002A354 <AmiBlitz3.ab3@11678>   MOVEA.l A0,A2
0002A358 <AmiBlitz3.ab3@11679>   LEA -$1(A0,D7.W),A0
0002A35A <AmiBlitz3.ab3@11680>   MOVE.b D2,(A0)+
0002A360 <AmiBlitz3.ab3@11681>   LEA ptr_parameterstore,A1
0002A362 <AmiBlitz3.ab3@11682>   MOVEQ #0,d0
0002A364 <AmiBlitz3.ab3@11683>   MOVEQ #0,d1
0002A366 <AmiBlitz3.ab3@11686>   MOVE.b (A1)+,d1
0002A36A <AmiBlitz3.ab3@11687>    BEQ 'l12
0002A370 <AmiBlitz3.ab3@11688>    !hashalgo
0002A372 <AmiBlitz3.ab3@11689>    MOVE.b d1,(A0)+
0002A376 <AmiBlitz3.ab3@11690> BRA 'l11
0002A378 <AmiBlitz3.ab3@11693>   CLR.b (a0)+
0002A37E <AmiBlitz3.ab3@11694>   LEA variablehash,a0
0002A384 <AmiBlitz3.ab3@11695>    AND.l #hashsize,d0
0002A386 <AmiBlitz3.ab3@11696>    ASL.l #2,d0
0002A38A <AmiBlitz3.ab3@11697>    MOVE.l 0(a0,d0),d1
0002A38E <AmiBlitz3.ab3@11698>    MOVE.l d1,$e(a2)
0002A392 <AmiBlitz3.ab3@11699>    MOVE.l a2,0(a0,d0)
0002A394 <AmiBlitz3.ab3@11700>    MOVEQ #0,d0
0002A398 <AmiBlitz3.ab3@11701> BRA.w reget
0002A39E <AmiBlitz3.ab3@11705>   TST.w dirmode
0002A3A2 <AmiBlitz3.ab3@11706>    BNE.w illdirerr
0002A3A4 <AmiBlitz3.ab3@11713>   MOVEQ.l #$00,D0
0002A3A6 <AmiBlitz3.ab3@11714>   MOVE.w D7,D0
0002A3A8 <AmiBlitz3.ab3@11715>   ADD.w D2,D0
0002A3AA <AmiBlitz3.ab3@11716>   ADDQ.w #1,D0
0002A3AC <AmiBlitz3.ab3@11717>   MOVE.w D0,D2
0002A3AE <AmiBlitz3.ab3@11718>   MOVEQ.l #$01,D1
0002A3B4 <AmiBlitz3.ab3@11719>   MOVEA.l _execbase,A6
0002A3BA <AmiBlitz3.ab3@11720>   MOVE.l mempool2,a0
0002A3BE <AmiBlitz3.ab3@11721>   JSR _AllocPooled(a6)
0002A3C0 <AmiBlitz3.ab3@11723>   MOVEA.l D0,A0
0002A3C2 <AmiBlitz3.ab3@11724>   MOVE.l A0,(A2)
0002A3C4 <AmiBlitz3.ab3@11725>   CLR.l (a0)
0002A3C8 <AmiBlitz3.ab3@11726>   CLR.l 8(a0)                                              ;clear next
0002A3CA <AmiBlitz3.ab3@11727>   MOVEA.l A0,A2
0002A3CE <AmiBlitz3.ab3@11728>   LEA -$1(A0,D7.W),A0
0002A3D0 <AmiBlitz3.ab3@11729>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A3D6 <AmiBlitz3.ab3@11730>   LEA ptr_parameterstore,A1
0002A3D8 <AmiBlitz3.ab3@11731>   MOVEQ #0,d0
0002A3DA <AmiBlitz3.ab3@11732>   MOVEQ #0,d1
0002A3DC <AmiBlitz3.ab3@11735>   MOVE.b (A1)+,d1
0002A3DE <AmiBlitz3.ab3@11738>   MOVE.b d1,(A0)+
0002A3E2 <AmiBlitz3.ab3@11739>   BNE.w addlabel_loop2
0002A3E6 <AmiBlitz3.ab3@11740> BRA.w reget
0002A3E8 <AmiBlitz3.ab3@11744>   MOVEQ.l #$13,D7
0002A3EE <AmiBlitz3.ab3@11745>   LEA constantbase,A2
0002A3F2 <AmiBlitz3.ab3@11746> BRA.w findlab
0002A3F4 <AmiBlitz3.ab3@11750>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A3FA <AmiBlitz3.ab3@11751>   LEA xinclude_base,A2
0002A3FE <AmiBlitz3.ab3@11752> BRA.w findlab
0002A400 <AmiBlitz3.ab3@11756>   MOVEQ.l #$09,D7
0002A406 <AmiBlitz3.ab3@11757>   LEA firstconst,A2
0002A40A <AmiBlitz3.ab3@11758> BRA.w findlab
0002A40C <AmiBlitz3.ab3@11762>   MOVEQ.l #$0d,D7                                          ;find macro
0002A412 <AmiBlitz3.ab3@11763>   LEA macrobase,A2
0002A416 <AmiBlitz3.ab3@11764> BRA.w findlab
0002A41C <AmiBlitz3.ab3@11768>   LEA labelhash,A2
0002A41E <AmiBlitz3.ab3@11769>   MOVEQ.l #$13,D7
0002A420 <AmiBlitz3.ab3@11770>   EXT.l d2
0002A426 <AmiBlitz3.ab3@11771>   LEA ptr_parameterstore,A0
0002A428 <AmiBlitz3.ab3@11772>   MOVEQ #0,d0
0002A42A <AmiBlitz3.ab3@11773>   MOVEQ #0,d1
0002A42C <AmiBlitz3.ab3@11776>     MOVE.b (a0)+,d1
0002A430 <AmiBlitz3.ab3@11777>     BEQ 'l15
0002A436 <AmiBlitz3.ab3@11778>     !hashalgo
0002A43A <AmiBlitz3.ab3@11779> BRA 'l20
0002A440 <AmiBlitz3.ab3@11782>   AND.l #hashsize,d0
0002A442 <AmiBlitz3.ab3@11783>   ASL.l #2,d0
0002A446 <AmiBlitz3.ab3@11784>   MOVE.l 0(a2,d0),d0
0002A44A <AmiBlitz3.ab3@11785> BRA 'l11
0002A44E <AmiBlitz3.ab3@11788>   MOVE.l $c(A2),D0                                         ;find label
0002A452 <AmiBlitz3.ab3@11791>   BEQ findlab__no
0002A454 <AmiBlitz3.ab3@11792>   MOVEA.l D0,A2
0002A456 <AmiBlitz3.ab3@11793>   MOVEQ.l #$00,D0
0002A45A <AmiBlitz3.ab3@11794>   MOVE.b -$1(A2,D7.l),D0
0002A460 <AmiBlitz3.ab3@11795>   LEA ptr_parameterstore,A0
0002A462 <AmiBlitz3.ab3@11796>   SUB.l D7,D0
0002A464 <AmiBlitz3.ab3@11797>   SUBQ.l #1,D0
0002A466 <AmiBlitz3.ab3@11798>   CMP.l D0,D2
0002A46A <AmiBlitz3.ab3@11799>    BNE.b 'l10
0002A46E <AmiBlitz3.ab3@11800>   LEA $0(A2,D7.W),A1
0002A470 <AmiBlitz3.ab3@11801>   SUBQ.l #1,D0
0002A472 <AmiBlitz3.ab3@11804>     MOVE.b (a1)+,d1
0002A474 <AmiBlitz3.ab3@11805>     CMP.b (a0)+,d1
0002A478 <AmiBlitz3.ab3@11807>     BNE.b 'l10
0002A47C <AmiBlitz3.ab3@11808>   DBF D0,'l201
0002A480 <AmiBlitz3.ab3@11810>   BSR.w reget
0002A482 <AmiBlitz3.ab3@11811>   CMP.w D0,D0
0002A484 <AmiBlitz3.ab3@11812> RTS
0002A486 <AmiBlitz3.ab3@11816>   MOVEQ.l #$0B,D7
0002A48A <AmiBlitz3.ab3@11817> BRA.w findlab
0002A490 <AmiBlitz3.ab3@11821>   LEA firstproc,A2
0002A496 <AmiBlitz3.ab3@11822>   MOVE.l #$21+#funcentry_extend,D7
0002A49A <AmiBlitz3.ab3@11823> BRA findlab
0002A4A0 <AmiBlitz3.ab3@11827>   LEA firstfor,A2
0002A4A2 <AmiBlitz3.ab3@11828>   MOVEQ.l #$11,D7
0002A4A6 <AmiBlitz3.ab3@11829> BRA.w findlab
0002A4A8 <AmiBlitz3.ab3@11833>   MOVEQ.l #$0F,D7
0002A4AC <AmiBlitz3.ab3@11834> BRA.w findlab
0002A4AE <AmiBlitz3.ab3@11838>   MOVEQ.l #$0F+4,D7
0002A4B4 <AmiBlitz3.ab3@11839>   TST.b newvariable
0002A4B8 <AmiBlitz3.ab3@11840>    BNE.w findlab
0002A4BE <AmiBlitz3.ab3@11841>   LEA variablehash,A2
0002A4C4 <AmiBlitz3.ab3@11842>   LEA ptr_parameterstore,A0
0002A4C6 <AmiBlitz3.ab3@11843>   MOVEQ #0,d0
0002A4C8 <AmiBlitz3.ab3@11844>   MOVEQ #0,d1
0002A4CA <AmiBlitz3.ab3@11847>     MOVE.b (a0)+,d1
0002A4CE <AmiBlitz3.ab3@11848>     BEQ 'l15
0002A4D4 <AmiBlitz3.ab3@11849>     !hashalgo
0002A4D8 <AmiBlitz3.ab3@11850> BRA 'l20
0002A4DE <AmiBlitz3.ab3@11853>   AND.l #hashsize,d0
0002A4E0 <AmiBlitz3.ab3@11854>   ASL.l #2,d0
0002A4E4 <AmiBlitz3.ab3@11855>   MOVE.l 0(a2,d0),d0
0002A4E8 <AmiBlitz3.ab3@11856> BRA 'l11
0002A4EC <AmiBlitz3.ab3@11859>   MOVE.l $e(A2),D0                                         ;find label
0002A4F0 <AmiBlitz3.ab3@11862>   BEQ findlab__no
0002A4F2 <AmiBlitz3.ab3@11863>   MOVEA.l D0,A2
0002A4F4 <AmiBlitz3.ab3@11864>   MOVEQ.l #$00,D0
0002A4F8 <AmiBlitz3.ab3@11865>   MOVE.b -$1(A2,D7.W),D0
0002A4FE <AmiBlitz3.ab3@11866>   LEA ptr_parameterstore,A0
0002A500 <AmiBlitz3.ab3@11867>   SUB.w D7,D0
0002A502 <AmiBlitz3.ab3@11868>   SUBQ.l #1,D0
0002A504 <AmiBlitz3.ab3@11869>   CMP.w D0,D2
0002A508 <AmiBlitz3.ab3@11870>    BNE.b 'l10
0002A50C <AmiBlitz3.ab3@11871>   LEA $0(A2,D7.W),A1
0002A50E <AmiBlitz3.ab3@11872>   SUBQ.l #1,D0
0002A510 <AmiBlitz3.ab3@11875>     MOVE.b (a1)+,d1
0002A512 <AmiBlitz3.ab3@11876>     CMP.b (a0)+,d1
0002A516 <AmiBlitz3.ab3@11878>     BNE.b 'l10
0002A51A <AmiBlitz3.ab3@11879>   DBF D0,'l201
0002A51E <AmiBlitz3.ab3@11881>   BSR.w reget
0002A520 <AmiBlitz3.ab3@11882>   CMP.w D0,D0
0002A522 <AmiBlitz3.ab3@11883> RTS
0002A524 <AmiBlitz3.ab3@11896>     MOVE.l (A2),D0                                         ;find label
0002A528 <AmiBlitz3.ab3@11897>      BEQ.b findlab__no
0002A52A <AmiBlitz3.ab3@11898>     MOVEA.l D0,A2
0002A52C <AmiBlitz3.ab3@11899>     MOVEQ.l #$00,D0
0002A530 <AmiBlitz3.ab3@11900>     MOVE.b -$1(A2,D7.W),D0
0002A532 <AmiBlitz3.ab3@11901>     SUB.l D7,D0
0002A534 <AmiBlitz3.ab3@11902>     SUBQ.l #1,D0
0002A536 <AmiBlitz3.ab3@11903>   CMP.w D0,D2
0002A53A <AmiBlitz3.ab3@11904>   BNE.b findlab__loop
0002A53E <AmiBlitz3.ab3@11906>   LEA $0(A2,D7.W),A1
0002A544 <AmiBlitz3.ab3@11907>   LEA ptr_parameterstore,A0
0002A546 <AmiBlitz3.ab3@11908>   SUBQ.l #1,D0
0002A548 <AmiBlitz3.ab3@11911>     MOVE.b (a1)+,d1
0002A54A <AmiBlitz3.ab3@11912>     CMP.b (a0)+,d1
0002A54E <AmiBlitz3.ab3@11914>     BNE.b findlab__loop
0002A552 <AmiBlitz3.ab3@11915>   DBF D0,findlab__loop2
0002A556 <AmiBlitz3.ab3@11917>   BSR.w reget
0002A558 <AmiBlitz3.ab3@11918>   CMP.w D0,D0
0002A55A <AmiBlitz3.ab3@11919> RTS
0002A55E <AmiBlitz3.ab3@11922>   BSR.w reget
0002A560 <AmiBlitz3.ab3@11923>   MOVEQ.l #-$01,D1
0002A562 <AmiBlitz3.ab3@11924> RTS
0002A568 <AmiBlitz3.ab3@11928>   MOVEA.l alllocals,A4
0002A56E <AmiBlitz3.ab3@11929>   CLR.l alllocals
0002A572 <AmiBlitz3.ab3@11933>     CMPA.w #$0,A4
0002A576 <AmiBlitz3.ab3@11934>      BEQ.b freeprocvs__done
0002A57A <AmiBlitz3.ab3@11935>     MOVEA.l $4(A4),A3
0002A57E <AmiBlitz3.ab3@11937>     MOVEA.l $8(A4),A3
0002A580 <AmiBlitz3.ab3@11939>     MOVEA.l A4,A1
0002A582 <AmiBlitz3.ab3@11940>     MOVEA.l (A4),A4
0002A584 <AmiBlitz3.ab3@11941>     MOVEQ.l #$0C,D0
0002A58A <AmiBlitz3.ab3@11942>     MOVEA.l _execbase,A6
0002A590 <AmiBlitz3.ab3@11943>     MOVE.l mempool,a0
0002A594 <AmiBlitz3.ab3@11944>     JSR _FreePooled(A6)
0002A598 <AmiBlitz3.ab3@11945> BRA.b freeprocvs__loop
0002A59E <AmiBlitz3.ab3@11948>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002A5A4 <AmiBlitz3.ab3@11949>   CLR.l firstlocal
0002A5AA <AmiBlitz3.ab3@11950>   CLR.l sharebase
0002A5B0 <AmiBlitz3.ab3@11951>   TST.l mempool2
0002A5B4 <AmiBlitz3.ab3@11952>   BEQ freeprocvs__done_l10
0002A5BA <AmiBlitz3.ab3@11954>   MOVEA.l _execbase,A6
0002A5C0 <AmiBlitz3.ab3@11955>   MOVE.l mempool2,a0
0002A5C6 <AmiBlitz3.ab3@11956>   CLR.l mempool2
0002A5CA <AmiBlitz3.ab3@11957>   JSR _DeletePool(a6)
0002A5D0 <AmiBlitz3.ab3@11960>   MOVE.l _execbase,a6
0002A5D6 <AmiBlitz3.ab3@11961>   MOVE.l #$10000,d0
0002A5DC <AmiBlitz3.ab3@11962>   MOVE.l #80000,d1
0002A5DE <AmiBlitz3.ab3@11963>   MOVE.l d1,d2
0002A5E2 <AmiBlitz3.ab3@11964>   JSR _CreatePool(a6)
0002A5E8 <AmiBlitz3.ab3@11965>   MOVE.l d0,mempool2
0002A5EA <AmiBlitz3.ab3@11966> RTS
0002A5EE <AmiBlitz3.ab3@11970>   CMPA.w #$0,A3
0002A5F2 <AmiBlitz3.ab3@11971>    BEQ.w freevars__done
0002A5F4 <AmiBlitz3.ab3@11972>   MOVEA.l A3,A1
0002A5F6 <AmiBlitz3.ab3@11973>   MOVEA.l (A3),A3
0002A5F8 <AmiBlitz3.ab3@11974>   MOVEQ.l #$00,D0
0002A5FC <AmiBlitz3.ab3@11975>   MOVE.b $E(A1),D0
0002A602 <AmiBlitz3.ab3@11976>   MOVEA.l _execbase,A6
0002A608 <AmiBlitz3.ab3@11977>   MOVE.l mempool2,a0
0002A60C <AmiBlitz3.ab3@11978>   JSR _FreePooled(A6)
0002A610 <AmiBlitz3.ab3@11979> BRA.w freevars
0002A614 <AmiBlitz3.ab3@11982>     CMPA.w #$0,A3
0002A618 <AmiBlitz3.ab3@11983>      BEQ.w freevars__done
0002A61A <AmiBlitz3.ab3@11984>     MOVEA.l A3,A1
0002A61C <AmiBlitz3.ab3@11985>     MOVEA.l (A3),A3
0002A61E <AmiBlitz3.ab3@11986>     MOVEQ.l #$00,D0
0002A622 <AmiBlitz3.ab3@11987>     MOVE.b $E+4(A1),D0
0002A628 <AmiBlitz3.ab3@11988>     MOVEA.l _execbase,A6
0002A62E <AmiBlitz3.ab3@11989>     MOVE.l mempool2,a0
0002A632 <AmiBlitz3.ab3@11990>     JSR _FreePooled(A6)
0002A636 <AmiBlitz3.ab3@11991> BRA.w freevarsb
0002A638 <AmiBlitz3.ab3@11994> RTS
0002A63E <AmiBlitz3.ab3@11998>   MOVEA.l currentlabeladdr,A0
0002A644 <AmiBlitz3.ab3@11999>   MOVE.l a0,lastlabel
0002A646 <AmiBlitz3.ab3@12000>   MOVEA.l (A0),A2
0002A648 <AmiBlitz3.ab3@12001>   CLR.l (A0)
0002A64E <AmiBlitz3.ab3@12002>   MOVEA.l _execbase,A6
0002A652 <AmiBlitz3.ab3@12005>   CMPA.w #$0,A2
0002A656 <AmiBlitz3.ab3@12006>    BEQ.w clearlabels__done
0002A65A <AmiBlitz3.ab3@12007>   MOVE.l $4(A2),D0
0002A65E <AmiBlitz3.ab3@12008>   BTST #$0,D0
0002A662 <AmiBlitz3.ab3@12009>    BNE.w clearlabels__skip
0002A664 <AmiBlitz3.ab3@12010>   MOVEA.l D0,A3
0002A668 <AmiBlitz3.ab3@12013>     CMPA.w #$0,A3
0002A66C <AmiBlitz3.ab3@12014>      BEQ.w clearlabels__skip
0002A66E <AmiBlitz3.ab3@12015>     MOVEA.l A3,A1
0002A670 <AmiBlitz3.ab3@12016>     MOVEA.l (A3),A3
0002A672 <AmiBlitz3.ab3@12017>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002A678 <AmiBlitz3.ab3@12018>     MOVE.l mempool,a0
0002A67C <AmiBlitz3.ab3@12019>     JSR _FreePooled(A6)
0002A680 <AmiBlitz3.ab3@12020> BRA.w clearlabels__loop2
0002A682 <AmiBlitz3.ab3@12023>   MOVEQ.l #$00,D0
0002A686 <AmiBlitz3.ab3@12024>   MOVE.b $12(A2),D0
0002A688 <AmiBlitz3.ab3@12025>   MOVEA.l A2,A1
0002A68A <AmiBlitz3.ab3@12026>   MOVEA.l (A2),A2
0002A690 <AmiBlitz3.ab3@12027>   MOVE.l mempool2,a0
0002A694 <AmiBlitz3.ab3@12029> BRA.w clearlabels__loop
0002A696 <AmiBlitz3.ab3@12032> RTS
0002A69C <AmiBlitz3.ab3@12036>   MOVEA.l firstpend,A3
0002A6A2 <AmiBlitz3.ab3@12037>   CLR.l firstpend
0002A6A8 <AmiBlitz3.ab3@12038>   MOVEA.l _execbase,A6
0002A6AC <AmiBlitz3.ab3@12041>     CMPA.w #$0,A3
0002A6B0 <AmiBlitz3.ab3@12042>      BEQ.w freepends__done
0002A6B2 <AmiBlitz3.ab3@12043>     MOVEA.l A3,A1
0002A6B4 <AmiBlitz3.ab3@12044>     MOVEQ.l #$08,D0
0002A6B6 <AmiBlitz3.ab3@12045>     MOVEA.l (A3),A3
0002A6BC <AmiBlitz3.ab3@12046>     MOVE.l mempool,a0
0002A6C0 <AmiBlitz3.ab3@12047>     JSR _FreePooled(A6)
0002A6C4 <AmiBlitz3.ab3@12048> BRA.w fpnd2
0002A6C6 <AmiBlitz3.ab3@12051> RTS
0002A6CC <AmiBlitz3.ab3@12055>   MOVEA.l firstproc,A2
0002A6D2 <AmiBlitz3.ab3@12056>   CLR.l firstproc
0002A6D8 <AmiBlitz3.ab3@12057>   MOVEA.l _execbase,A6
0002A6DC <AmiBlitz3.ab3@12060>     CMPA.w #$0,A2
0002A6E0 <AmiBlitz3.ab3@12061>      BEQ.w clearfunctionlist__done
0002A6E2 <AmiBlitz3.ab3@12062>     MOVEA.l A2,A1
0002A6E4 <AmiBlitz3.ab3@12063>     MOVEA.l (A2),A2
0002A6E6 <AmiBlitz3.ab3@12064>     MOVEQ.l #$00,D0
0002A6EA <AmiBlitz3.ab3@12065>     MOVE.b $20+#funcentry_extend(A1),D0
0002A6F0 <AmiBlitz3.ab3@12066>     MOVE.l mempool2,a0
0002A6F4 <AmiBlitz3.ab3@12067>     JSR _FreePooled(A6)
0002A6F8 <AmiBlitz3.ab3@12068> BRA.w clearfunctionlist__loop
0002A6FA <AmiBlitz3.ab3@12071> RTS
0002A6FE <AmiBlitz3.ab3@12075>   CMPA.w #$0,A2
0002A702 <AmiBlitz3.ab3@12076>    BEQ.w freetypes__done
0002A706 <AmiBlitz3.ab3@12077>   MOVEA.l $4(A2),A3
0002A70A <AmiBlitz3.ab3@12078>   CMPA.w #$FF,A3
0002A70E <AmiBlitz3.ab3@12079>    BEQ.w freetypes__noway
0002A712 <AmiBlitz3.ab3@12083>    BSR.w freevars
0002A714 <AmiBlitz3.ab3@12086>     MOVEA.l A2,A1
0002A716 <AmiBlitz3.ab3@12087>     MOVEA.l (A2),A2
0002A718 <AmiBlitz3.ab3@12088>     MOVEQ.l #$00,D0
0002A71C <AmiBlitz3.ab3@12089>     MOVE.b $A(A1),D0
0002A722 <AmiBlitz3.ab3@12090>     MOVEA.l _execbase,A6
0002A728 <AmiBlitz3.ab3@12091>     MOVE.l mempool2,a0
0002A72C <AmiBlitz3.ab3@12092>     JSR _FreePooled(A6)
0002A730 <AmiBlitz3.ab3@12093> BRA.w freetypes
0002A732 <AmiBlitz3.ab3@12096> RTS
0002A738 <AmiBlitz3.ab3@12100>   JSR uselib2
0002A73E <AmiBlitz3.ab3@12102>   CLR.w notshared
0002A744 <AmiBlitz3.ab3@12103>   CLR.w varmode
0002A74A <AmiBlitz3.ab3@12104>   MOVE.w proceduremode,D1
0002A74E <AmiBlitz3.ab3@12105>    BNE.w JL_0_8F4E
0002A754 <AmiBlitz3.ab3@12106>   LEA varbase,A2
0002A75A <AmiBlitz3.ab3@12107>   LEA ptr_parameterstore,a0
0002A75E <AmiBlitz3.ab3@12108>   CMP.b #$22,(a0)
0002A762 <AmiBlitz3.ab3@12109>   BNE JL_0_8E5E
0002A764 <AmiBlitz3.ab3@12110>   MOVEQ #0,d0
0002A76A <AmiBlitz3.ab3@12111> JMP error
0002A76E <AmiBlitz3.ab3@12114>   BSR.w findvariable
0002A772 <AmiBlitz3.ab3@12117>   BNE.w JL_0_8E7E
0002A778 <AmiBlitz3.ab3@12120>   MOVE.b flagmask+1,D1
0002A77C <AmiBlitz3.ab3@12121>   MOVE.b $7(A2),D3
0002A77E <AmiBlitz3.ab3@12122>   EOR.b D3,D1
0002A782 <AmiBlitz3.ab3@12123>   BNE 'l2
0002A78A <AmiBlitz3.ab3@12124>   CMP.b #2,nowdeclare
0002A78E <AmiBlitz3.ab3@12125>   BEQ errormsg_declaredtwice
0002A792 <AmiBlitz3.ab3@12126> BRA.w JL_0_8FA8
0002A796 <AmiBlitz3.ab3@12129>   BSR.w findlab
0002A79A <AmiBlitz3.ab3@12130>   BNE 'l1
0002A7A2 <AmiBlitz3.ab3@12131>   CMP.b #2,nowdeclare
0002A7A6 <AmiBlitz3.ab3@12132>   BEQ errormsg_declaredtwice
0002A7A8 <AmiBlitz3.ab3@12133>   CMP.w d0,d0
0002A7AC <AmiBlitz3.ab3@12136> BRA.w JL_0_8E62
0002A7AE <AmiBlitz3.ab3@12139>    MOVE.l a2,-(a7)
0002A7B4 <AmiBlitz3.ab3@12140>    LEA sharebase,a2
0002A7B6 <AmiBlitz3.ab3@12141>    MOVEQ #$f+4,d7
0002A7BA <AmiBlitz3.ab3@12142>    BSR.w findlab
0002A7BE <AmiBlitz3.ab3@12143>    BEQ 'l2x
0002A7C0 <AmiBlitz3.ab3@12144>    MOVE.l (a7)+,a2
0002A7C4 <AmiBlitz3.ab3@12145> BRA 'cont
0002A7C6 <AmiBlitz3.ab3@12148>   ADDQ.l #4,a7
0002A7CC <AmiBlitz3.ab3@12149>   CLR.w varmode
0002A7D2 <AmiBlitz3.ab3@12150>   MOVE.b flagmask+1,D1
0002A7D6 <AmiBlitz3.ab3@12151>   MOVE.b $7(A2),D3
0002A7D8 <AmiBlitz3.ab3@12152>   EOR.b D3,D1
0002A7DC <AmiBlitz3.ab3@12153>   BNE vardeclareerr
0002A7E0 <AmiBlitz3.ab3@12154> BRA JL_0_8FA8
0002A7E6 <AmiBlitz3.ab3@12157>    MOVE.w nonew,D1
0002A7EA <AmiBlitz3.ab3@12158>    BNE.w nonewerr
0002A7F0 <AmiBlitz3.ab3@12159>    TST.b nowdeclare
0002A7F4 <AmiBlitz3.ab3@12160>    BNE 'l2
0002A7FA <AmiBlitz3.ab3@12161>    TST.b declare2
0002A7FE <AmiBlitz3.ab3@12162>    BEQ 'l1
0002A802 <AmiBlitz3.ab3@12163>    CMP.b #$2e,d0
0002A806 <AmiBlitz3.ab3@12164>    BEQ 'l2
0002A80A <AmiBlitz3.ab3@12165>    CMP.b #"$",d0
0002A80E <AmiBlitz3.ab3@12166>    BEQ 'l2
0002A812 <AmiBlitz3.ab3@12167> BRA vardeclareerr
0002A818 <AmiBlitz3.ab3@12170>   TST.b declare
0002A81C <AmiBlitz3.ab3@12171>    BNE vardeclareerr
0002A820 <AmiBlitz3.ab3@12174>   BSR.w addvariable
0002A826 <AmiBlitz3.ab3@12175>   NOT.w notshared
0002A828 <AmiBlitz3.ab3@12176>   MOVEA.l A2,A3
0002A82E <AmiBlitz3.ab3@12177>   MOVEA.l defaulttype,A2
0002A832 <AmiBlitz3.ab3@12178>   CMP.w #$2E,D0
0002A836 <AmiBlitz3.ab3@12179>    BEQ.w JL_0_8EB8
0002A83A <AmiBlitz3.ab3@12180>   CMP.w #$24,D0
0002A83E <AmiBlitz3.ab3@12181>    BNE.w JL_0_8ECA
0002A844 <AmiBlitz3.ab3@12182>   LEA newtype_string,A2
0002A848 <AmiBlitz3.ab3@12183>    BSR.w get1bytemain
0002A84C <AmiBlitz3.ab3@12184> BRA.w JL_0_8ECA
0002A852 <AmiBlitz3.ab3@12187> JMP JUMP_notypeerr
0002A856 <AmiBlitz3.ab3@12190>    BSR.w getparameter2
0002A85C <AmiBlitz3.ab3@12191>   LEA newtypebase,A2
0002A860 <AmiBlitz3.ab3@12192>    BSR.w findtype
0002A864 <AmiBlitz3.ab3@12193>    BNE.w notypeerr3
0002A86A <AmiBlitz3.ab3@12196>   CMPA.l #newtype_byte,A2
0002A86E <AmiBlitz3.ab3@12197>    BEQ.w JL_0_8EECb
0002A874 <AmiBlitz3.ab3@12198>   MOVE.w varmode,D1
0002A878 <AmiBlitz3.ab3@12199>    BNE.w JL_0_8EE4b
0002A87E <AmiBlitz3.ab3@12200>   ADDQ.w #1,globalvarpointer
0002A886 <AmiBlitz3.ab3@12203>   BCLR #$0,globalvarpointer+1
0002A88A <AmiBlitz3.ab3@12206>   MOVE.l A2,$A(A3)
0002A892 <AmiBlitz3.ab3@12207>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A894 <AmiBlitz3.ab3@12209>   MOVEQ.l #$04,D1
0002A89C <AmiBlitz3.ab3@12210>   BTST #$0,flagmask+1
0002A8A0 <AmiBlitz3.ab3@12211>    BNE.w JL_0_8F22b
0002A8A8 <AmiBlitz3.ab3@12212>   BTST #$1,flagmask+1
0002A8AC <AmiBlitz3.ab3@12213>    BNE.w JL_0_8F22b
0002A8B4 <AmiBlitz3.ab3@12214>   CMPI.l #$100,$4(A2)
0002A8B8 <AmiBlitz3.ab3@12215>    BCC.w JL_0_8F22b
0002A8BC <AmiBlitz3.ab3@12216>   MOVE.w $8(A2),D1
0002A8C2 <AmiBlitz3.ab3@12219>   TST.w varmode
0002A8C6 <AmiBlitz3.ab3@12220> BRA.w JL_0_8F3E
0002A8CA <AmiBlitz3.ab3@12229>   BSR.w getparameter2
0002A8D0 <AmiBlitz3.ab3@12230>   LEA newtypebase,A2
0002A8D4 <AmiBlitz3.ab3@12231>    BSR.w findtype
0002A8D8 <AmiBlitz3.ab3@12232>    BNE.w notypeerr
0002A8DE <AmiBlitz3.ab3@12235>   CMPA.l #newtype_byte,A2
0002A8E2 <AmiBlitz3.ab3@12236>    BEQ.w JL_0_8EEC
0002A8E8 <AmiBlitz3.ab3@12237>   MOVE.w varmode,D1
0002A8EC <AmiBlitz3.ab3@12238>    BNE.w JL_0_8EE4
0002A8F2 <AmiBlitz3.ab3@12239>   ADDQ.w #1,globalvarpointer
0002A8FA <AmiBlitz3.ab3@12242>   BCLR #$0,globalvarpointer+1
0002A8FE <AmiBlitz3.ab3@12245>   MOVE.l A2,$A(A3)
0002A906 <AmiBlitz3.ab3@12246>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A908 <AmiBlitz3.ab3@12247>   MOVEQ.l #$04,D1
0002A910 <AmiBlitz3.ab3@12248>   BTST #$0,flagmask+1
0002A914 <AmiBlitz3.ab3@12249>    BNE.w JL_0_8F22
0002A91C <AmiBlitz3.ab3@12250>   BTST #$1,flagmask+1
0002A920 <AmiBlitz3.ab3@12251>    BNE.w JL_0_8F22
0002A928 <AmiBlitz3.ab3@12252>   CMPI.l #$100,$4(A2)
0002A92C <AmiBlitz3.ab3@12253>    BCC.w JL_0_8F22
0002A930 <AmiBlitz3.ab3@12254>   MOVE.w $8(A2),D1
0002A936 <AmiBlitz3.ab3@12257>   TST.w varmode
0002A93A <AmiBlitz3.ab3@12258>    BEQ.w JL_0_8F3E
0002A93C <AmiBlitz3.ab3@12259>   NEG.w D1
0002A942 <AmiBlitz3.ab3@12260>   ADD.w D1,globalvarpointer
0002A94A <AmiBlitz3.ab3@12261>   MOVE.w globalvarpointer,$4(A3)
0002A94C <AmiBlitz3.ab3@12262> RTS
0002A954 <AmiBlitz3.ab3@12265>   MOVE.w globalvarpointer,$4(A3)
0002A95A <AmiBlitz3.ab3@12266>   ADD.w D1,globalvarpointer
0002A95C <AmiBlitz3.ab3@12267> RTS
0002A962 <AmiBlitz3.ab3@12271>   LEA firstglob,A2
0002A966 <AmiBlitz3.ab3@12272>    BSR.w findvariable2
0002A96A <AmiBlitz3.ab3@12275>   BNE.w JL_0_8F74
0002A970 <AmiBlitz3.ab3@12276>   MOVE.b flagmask+1,D1
0002A974 <AmiBlitz3.ab3@12277>   MOVE.b $7(A2),D3
0002A976 <AmiBlitz3.ab3@12278>   EOR.b D3,D1
0002A97A <AmiBlitz3.ab3@12279>    BEQ.w JL_0_8FA8
0002A97E <AmiBlitz3.ab3@12280>    BSR.w findlab
0002A982 <AmiBlitz3.ab3@12281> BRA.w JL_0_8F58
0002A98A <AmiBlitz3.ab3@12284>   MOVE.w #$FFFF,varmode
0002A990 <AmiBlitz3.ab3@12285>   MOVE.w globalvarpointer,-(A7)
0002A99A <AmiBlitz3.ab3@12286>   MOVE.w locvaroff,globalvarpointer
0002A9A0 <AmiBlitz3.ab3@12287>   LEA firstlocal,A2
0002A9A8 <AmiBlitz3.ab3@12288>   MOVE.b #1,newvariable
0002A9AC <AmiBlitz3.ab3@12289>    BSR.w JL_0_8E5E
0002A9B2 <AmiBlitz3.ab3@12290>   CLR.b newvariable
0002A9BC <AmiBlitz3.ab3@12291>   MOVE.w globalvarpointer,locvaroff
0002A9C2 <AmiBlitz3.ab3@12292>   MOVE.w (A7)+,globalvarpointer
0002A9C4 <AmiBlitz3.ab3@12293> RTS
0002A9C6 <AmiBlitz3.ab3@12296>   MOVEA.l A2,A3
0002A9CA <AmiBlitz3.ab3@12297>   CMP.w #$2E,D0
0002A9CE <AmiBlitz3.ab3@12298>    BEQ.w JL_0_8FCE
0002A9D2 <AmiBlitz3.ab3@12299>   CMP.w #$24,D0
0002A9D6 <AmiBlitz3.ab3@12300>    BNE.w JL_0_8FE8
0002A9DE <AmiBlitz3.ab3@12301>   CMPI.l #newtype_string,$A(A3)
0002A9E2 <AmiBlitz3.ab3@12302>    BNE.w rongtypeerr
0002A9E6 <AmiBlitz3.ab3@12303>    BSR.w get1bytemain
0002A9EA <AmiBlitz3.ab3@12304> BRA.w JL_0_8FE8
0002A9EE <AmiBlitz3.ab3@12307>    BSR.w getparameter2
0002A9F4 <AmiBlitz3.ab3@12308>   LEA newtypebase,A2
0002A9F8 <AmiBlitz3.ab3@12309>    BSR.w findtype
0002A9FC <AmiBlitz3.ab3@12310>    BNE.w notypeerr
0002AA00 <AmiBlitz3.ab3@12311>   CMPA.l $A(A3),A2
0002AA04 <AmiBlitz3.ab3@12312>    BNE.w rongtypeerr
0002AA0C <AmiBlitz3.ab3@12314>   BTST #$0,flagmask+1
0002AA10 <AmiBlitz3.ab3@12315>    BEQ.w JL_0_8FFE
0002AA16 <AmiBlitz3.ab3@12316>   BTST #$0,$7(A3)
0002AA1A <AmiBlitz3.ab3@12317>    BEQ.w pointerr
0002AA1E <AmiBlitz3.ab3@12320>   MOVEA.l $A(A3),A2
0002AA20 <AmiBlitz3.ab3@12321> RTS
0002AA22 <AmiBlitz3.ab3@12325>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AA26 <AmiBlitz3.ab3@12326>    BEQ.w JL_0_9042
0002AA30 <AmiBlitz3.ab3@12327>    MOVE.l destpointer,loada
0002AA34 <AmiBlitz3.ab3@12330> BRA JL_0_9032
0002AA38 <AmiBlitz3.ab3@12332>   CMP.w #$9,D3                                             ;_addq_arrays
0002AA3C <AmiBlitz3.ab3@12333>    BCC.w JL_0_9032
0002AA42 <AmiBlitz3.ab3@12334>   MOVE.w d3,arrayoffset
0002AA46 <AmiBlitz3.ab3@12335>   ANDI.w #$7,D3
0002AA48 <AmiBlitz3.ab3@12336>   LSL.w #8,D3
0002AA4A <AmiBlitz3.ab3@12337>   LSL.w #1,D3
0002AA52 <AmiBlitz3.ab3@12338>   ANDI.w #$F1FF,addqa0
0002AA58 <AmiBlitz3.ab3@12339>   OR.w D3,addqa0
0002AA5E <AmiBlitz3.ab3@12340>   MOVE.w addqa0,D1
0002AA62 <AmiBlitz3.ab3@12341> BRA.w writeword
0002AA68 <AmiBlitz3.ab3@12344>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AA6C <AmiBlitz3.ab3@12345>   BGT longoffset
0002AA72 <AmiBlitz3.ab3@12346>   MOVE.w D3,leaa0a0+2
0002AA78 <AmiBlitz3.ab3@12347>   MOVE.w d3,arrayoffset
0002AA7E <AmiBlitz3.ab3@12348>   MOVE.l leaa0a0,D1
0002AA82 <AmiBlitz3.ab3@12349>   BSR.w writelong
0002AA84 <AmiBlitz3.ab3@12352> RTS
0002AA88 <AmiBlitz3.ab3@12355>    MOVE.w #$d5fc,d1
0002AA8C <AmiBlitz3.ab3@12356>    BSR writeword
0002AA8E <AmiBlitz3.ab3@12357>    MOVE.l d3,d1
0002AA92 <AmiBlitz3.ab3@12358>    BSR.w writelong
0002AA94 <AmiBlitz3.ab3@12359> RTS
0002AA98 <AmiBlitz3.ab3@12363>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AA9C <AmiBlitz3.ab3@12366>    BCS.w arrchk3                                           
0002AAA2 <AmiBlitz3.ab3@12367>    JSR $20000                                              ;jsr 0
0002AAA8 <AmiBlitz3.ab3@12373>   TST.b fast
0002AAAC <AmiBlitz3.ab3@12374>   BEQ 'l1
0002AAAE <AmiBlitz3.ab3@12375>    MOVEQ #0,d1                                             ;faster arrays
0002AAB4 <AmiBlitz3.ab3@12376>    MOVE.w regnum,d2
0002AAB6 <AmiBlitz3.ab3@12377>    MOVE.w d2,d1
0002AAB8 <AmiBlitz3.ab3@12378>    LSL.w #8,d1
0002AABA <AmiBlitz3.ab3@12379>    LSL.w #4,d1
0002AABC <AmiBlitz3.ab3@12380>    ADD.w d2,d1
0002AAC2 <AmiBlitz3.ab3@12381>    OR.l #$4c2d0000,d1
0002AAC8 <AmiBlitz3.ab3@12382>    TST.w varmode
0002AACC <AmiBlitz3.ab3@12383>    BEQ 'l1a
0002AAD0 <AmiBlitz3.ab3@12384>    BCLR #16,d1
0002AAD4 <AmiBlitz3.ab3@12387>    BSR writelong
0002AAD8 <AmiBlitz3.ab3@12388>    MOVE.w $4(A7),D1
0002AADC <AmiBlitz3.ab3@12389>    BSR.w writeword
0002AAE2 <AmiBlitz3.ab3@12390>    MOVE.w regnum,D1
0002AAE4 <AmiBlitz3.ab3@12391>   SUBQ.w #1,D1
0002AAE6 <AmiBlitz3.ab3@12392>   LSL.w #8,D1
0002AAE8 <AmiBlitz3.ab3@12393>   LSL.w #1,D1
0002AAEC <AmiBlitz3.ab3@12394>   ORI.w #$D080,D1
0002AAF2 <AmiBlitz3.ab3@12395>   OR.w regnum,D1
0002AAF6 <AmiBlitz3.ab3@12396>    BSR.w writeword
0002AAF8 <AmiBlitz3.ab3@12397> RTS
0002AAFE <AmiBlitz3.ab3@12400>   MOVE.w regnum,D2
0002AB02 <AmiBlitz3.ab3@12401>   MOVE.w arrmul1(PC),D1
0002AB04 <AmiBlitz3.ab3@12402>   OR.w D2,D1
0002AB06 <AmiBlitz3.ab3@12403>   SUBQ.w #1,D1
0002AB0A <AmiBlitz3.ab3@12404>    BSR.w writeword
0002AB0E <AmiBlitz3.ab3@12405>   MOVE.w arrmul2(PC),D1
0002AB10 <AmiBlitz3.ab3@12406>   OR.w D2,D1
0002AB12 <AmiBlitz3.ab3@12407>   MOVE.w D2,D3
0002AB14 <AmiBlitz3.ab3@12408>   SUBQ.w #1,D3
0002AB16 <AmiBlitz3.ab3@12409>   LSL.w #8,D3
0002AB18 <AmiBlitz3.ab3@12410>   LSL.w #1,D3
0002AB1A <AmiBlitz3.ab3@12411>   OR.w D3,D1
0002AB1E <AmiBlitz3.ab3@12412>    BSR.w writeword
0002AB22 <AmiBlitz3.ab3@12413>   MOVE.w arrmul3(PC),D1
0002AB24 <AmiBlitz3.ab3@12414>   MOVE.w D2,D3
0002AB26 <AmiBlitz3.ab3@12415>   LSL.w #8,D3
0002AB28 <AmiBlitz3.ab3@12416>   LSL.w #1,D3
0002AB2A <AmiBlitz3.ab3@12417>   OR.w D3,D1
0002AB2E <AmiBlitz3.ab3@12418>    BSR.w pokewda5s
0002AB32 <AmiBlitz3.ab3@12419>   MOVE.w $4(A7),D1
0002AB34 <AmiBlitz3.ab3@12420>   ADDQ.w #2,D1
0002AB38 <AmiBlitz3.ab3@12421>    BSR.w writeword
0002AB3C <AmiBlitz3.ab3@12422>   MOVE.w arrmul4(PC),D1
0002AB3E <AmiBlitz3.ab3@12423>   MOVE.w D2,D3
0002AB40 <AmiBlitz3.ab3@12424>   SUBQ.w #1,D3
0002AB42 <AmiBlitz3.ab3@12425>   LSL.w #8,D3
0002AB44 <AmiBlitz3.ab3@12426>   LSL.w #1,D3
0002AB46 <AmiBlitz3.ab3@12427>   OR.w D3,D1
0002AB4A <AmiBlitz3.ab3@12428>    BSR.w pokewda5s
0002AB4E <AmiBlitz3.ab3@12429>   MOVE.w $4(A7),D1
0002AB52 <AmiBlitz3.ab3@12430>    BSR.w writeword
0002AB56 <AmiBlitz3.ab3@12431>   MOVE.w arrmul5(PC),D1
0002AB58 <AmiBlitz3.ab3@12432>   OR.w D2,D1
0002AB5A <AmiBlitz3.ab3@12433>   SUBQ.w #1,D1
0002AB5E <AmiBlitz3.ab3@12434>    BSR.w writeword
0002AB62 <AmiBlitz3.ab3@12435>   MOVE.w arrmul6(PC),D1
0002AB64 <AmiBlitz3.ab3@12436>   OR.w D2,D1
0002AB66 <AmiBlitz3.ab3@12437>   SUBQ.w #1,D1
0002AB6A <AmiBlitz3.ab3@12438>    BSR.w writeword
0002AB6E <AmiBlitz3.ab3@12439>   MOVE.w arrmul7(PC),D1
0002AB70 <AmiBlitz3.ab3@12440>   OR.w D2,D1
0002AB72 <AmiBlitz3.ab3@12441>   SUBQ.w #1,D1
0002AB74 <AmiBlitz3.ab3@12442>   MOVE.w D2,D3
0002AB76 <AmiBlitz3.ab3@12443>   LSL.w #8,D3
0002AB78 <AmiBlitz3.ab3@12444>   LSL.w #1,D3
0002AB7A <AmiBlitz3.ab3@12445>   OR.w D3,D1
0002AB7E <AmiBlitz3.ab3@12446>    BSR.w writeword
0002AB82 <AmiBlitz3.ab3@12447>   MOVE.w arrmul8(PC),D1
0002AB84 <AmiBlitz3.ab3@12448>   MOVE.w D2,D3
0002AB86 <AmiBlitz3.ab3@12449>   SUBQ.w #1,D3
0002AB88 <AmiBlitz3.ab3@12450>   LSL.w #8,D3
0002AB8A <AmiBlitz3.ab3@12451>   LSL.w #1,D3
0002AB8C <AmiBlitz3.ab3@12452>   OR.w D3,D1
0002AB90 <AmiBlitz3.ab3@12453>    BSR.w writeword
0002AB96 <AmiBlitz3.ab3@12454>   MOVE.w regnum,D1
0002AB98 <AmiBlitz3.ab3@12455>   SUBQ.w #1,D1
0002AB9A <AmiBlitz3.ab3@12456>   LSL.w #8,D1
0002AB9C <AmiBlitz3.ab3@12457>   LSL.w #1,D1
0002ABA0 <AmiBlitz3.ab3@12458>   ORI.w #$D080,D1
0002ABA6 <AmiBlitz3.ab3@12459>   OR.w regnum,D1
0002ABAA <AmiBlitz3.ab3@12460> BRA.w writeword
0002ABAC <AmiBlitz3.ab3@12468> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002ABAE <AmiBlitz3.ab3@12469> arrmul2:   MOVE  d0,d0
0002ABB2 <AmiBlitz3.ab3@12470> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002ABB6 <AmiBlitz3.ab3@12471> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002ABB8 <AmiBlitz3.ab3@12473> arrmul5:   SWAP d0
0002ABBA <AmiBlitz3.ab3@12474> arrmul6:   CLR d0
0002ABBC <AmiBlitz3.ab3@12475> arrmul7:   ADD.l d0,d0
0002ABBE <AmiBlitz3.ab3@12476> arrmul8:   MOVE.l (a7)+,d0
0002ABC2 <AmiBlitz3.ab3@12481> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002ABC6 <AmiBlitz3.ab3@12482> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002ABC8 <AmiBlitz3.ab3@12483> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002ABCE <AmiBlitz3.ab3@12501>   CLR.l lastoffset_org
0002ABD4 <AmiBlitz3.ab3@12502>   BTST #$1,$7(A3)
0002ABD8 <AmiBlitz3.ab3@12503>    BEQ.w calcvar__notarr
0002ABDE <AmiBlitz3.ab3@12504>   MOVE.w notshared,D1
0002ABE2 <AmiBlitz3.ab3@12505>    BNE.w noarrerr
0002ABE6 <AmiBlitz3.ab3@12506>    BSR.w get1bytemain
0002ABEA <AmiBlitz3.ab3@12507>   CMP.w #$29,D0
0002ABEE <AmiBlitz3.ab3@12508>    BNE.w calcvar__notalist
0002ABF4 <AmiBlitz3.ab3@12509>   BTST #$0,$6(A3)
0002ABF8 <AmiBlitz3.ab3@12510>    BEQ.w nolisterr
0002AC00 <AmiBlitz3.ab3@12511>   MOVE.w $4(A3),listcode1+2
0002AC04 <AmiBlitz3.ab3@12512>   MOVE.l listcode1(PC),D1
0002AC08 <AmiBlitz3.ab3@12513>    BSR.w pokela5s
0002AC0C <AmiBlitz3.ab3@12514>   MOVE.l listcode2(PC),D1
0002AC10 <AmiBlitz3.ab3@12515>    BSR.w writelong
0002AC16 <AmiBlitz3.ab3@12516>   TST.b debugmode
0002AC1A <AmiBlitz3.ab3@12517>    BEQ.w calcvar__nolrerr
0002AC1C <AmiBlitz3.ab3@12521>   MOVE.l A2,-(A7)
0002AC20 <AmiBlitz3.ab3@12522>   MOVE.w #$C315,D1
0002AC24 <AmiBlitz3.ab3@12523>    BSR.w Atokejsr
0002AC26 <AmiBlitz3.ab3@12524>   MOVEA.l (A7)+,A2
0002AC2A <AmiBlitz3.ab3@12527>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002AC2E <AmiBlitz3.ab3@12529>    BSR.w writeword
0002AC32 <AmiBlitz3.ab3@12530> BRA.w calcvar__normalar
0002AC34 <AmiBlitz3.ab3@12533> calcvar__listoff:   Ds.w 1
0002AC3A <AmiBlitz3.ab3@12537>   CLR.w calcvar__listoff
0002AC40 <AmiBlitz3.ab3@12538>   BTST #$0,$6(A3)
0002AC44 <AmiBlitz3.ab3@12539>    BEQ.w calcvar__knop
0002AC4C <AmiBlitz3.ab3@12540>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002AC50 <AmiBlitz3.ab3@12543>   MOVEM.l A2-A3,-(A7)
0002AC56 <AmiBlitz3.ab3@12544>   MOVE.w varmode,-(A7)
0002AC5A <AmiBlitz3.ab3@12545>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002AC5E <AmiBlitz3.ab3@12546>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002AC60 <AmiBlitz3.ab3@12547>   MOVE.l A2,-(A7)
0002AC66 <AmiBlitz3.ab3@12548>   MOVE.w flagmask,-(A7)
0002AC70 <AmiBlitz3.ab3@12550>   MOVE.w oldqflag,instringon
0002AC76 <AmiBlitz3.ab3@12551>   MOVEA.l lastsourcepos,A5
0002AC7A <AmiBlitz3.ab3@12552>    BSR.w arreval
0002AC80 <AmiBlitz3.ab3@12553>   MOVE.w (A7)+,flagmask
0002AC88 <AmiBlitz3.ab3@12554>   MOVE.w $8(A7),varmode
0002AC8E <AmiBlitz3.ab3@12555>   TST.b debugmode
0002AC92 <AmiBlitz3.ab3@12556>    BEQ.w calcvar__noszchk
0002AC94 <AmiBlitz3.ab3@12560>   MOVEA.l (A7)+,A2
0002AC96 <AmiBlitz3.ab3@12561>   MOVEQ.l #$04,D1
0002AC9E <AmiBlitz3.ab3@12562>   BTST #$0,flagmask+1                                      ;pointer?
0002ACA2 <AmiBlitz3.ab3@12563>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002ACA6 <AmiBlitz3.ab3@12564>   MOVE.w $8(A2),D1
0002ACAA <AmiBlitz3.ab3@12567>   ADD.w calcvar__listoff(PC),D1
0002ACAE <AmiBlitz3.ab3@12568>   BSR.w JL_0_B6DE
0002ACB4 <AmiBlitz3.ab3@12569>   ADDQ.w #1,regnum
0002ACB6 <AmiBlitz3.ab3@12572>   ADDQ.w #4,(A7)
0002ACBA <AmiBlitz3.ab3@12573>   TST.w $4(A7)
0002ACBE <AmiBlitz3.ab3@12574>    BEQ.w calcvar__isglob
0002ACC0 <AmiBlitz3.ab3@12575>   SUBQ.w #8,(A7)                                           ;range check local array
0002ACC6 <AmiBlitz3.ab3@12578>   TST.b debugmode
0002ACCA <AmiBlitz3.ab3@12579>    BEQ.w calcvar__noer1
0002ACD0 <AmiBlitz3.ab3@12580>   MOVE.w regnum,D1
0002ACD2 <AmiBlitz3.ab3@12581>   SUBQ.w #1,D1
0002ACD4 <AmiBlitz3.ab3@12582>   LSL.w #8,D1
0002ACD6 <AmiBlitz3.ab3@12583>   LSL.w #1,D1
0002ACDA <AmiBlitz3.ab3@12584>   OR.w zarrchk(PC),D1
0002ACDE <AmiBlitz3.ab3@12585>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002ACE0 <AmiBlitz3.ab3@12586>   MOVE.w (A7),D1
0002ACE4 <AmiBlitz3.ab3@12587>    BSR.w writeword
0002ACE8 <AmiBlitz3.ab3@12588>   MOVE.l arrchk2(PC),D1
0002ACEC <AmiBlitz3.ab3@12589>    BSR.w writelong
0002ACF0 <AmiBlitz3.ab3@12590>   MOVE.w #$C309,D1
0002ACF4 <AmiBlitz3.ab3@12591>    BSR.w Atokejsr
0002ACF8 <AmiBlitz3.ab3@12594>   SUBQ.w #1,$2(A7)
0002ACFC <AmiBlitz3.ab3@12595>    BEQ.w calcvar__ardone
0002AD00 <AmiBlitz3.ab3@12596>   CMP.w #$2C,D0
0002AD04 <AmiBlitz3.ab3@12597>    BNE.w syntaxerr
0002AD0A <AmiBlitz3.ab3@12598>    TST.b fast
0002AD0E <AmiBlitz3.ab3@12599>    BNE 'l1
0002AD12 <AmiBlitz3.ab3@12600>    BSR.w arrevalchk
0002AD16 <AmiBlitz3.ab3@12601> BRA 'l2
0002AD1A <AmiBlitz3.ab3@12604>   BSR arreval
0002AD22 <AmiBlitz3.ab3@12607>   MOVE.w $4(A7),varmode
0002AD26 <AmiBlitz3.ab3@12608>   BSR.w JL_0_9052
0002AD2A <AmiBlitz3.ab3@12609> BRA.w calcvar__arloop
0002AD2E <AmiBlitz3.ab3@12613>   CMP.w #$29,D0
0002AD32 <AmiBlitz3.ab3@12614>    BNE.w syntaxerr
0002AD38 <AmiBlitz3.ab3@12615>   SUBQ.w #1,regnum
0002AD3A <AmiBlitz3.ab3@12616>   ADDQ.w #6,A7
0002AD3E <AmiBlitz3.ab3@12617>   MOVEM.l (A7)+,A2-A3
0002AD46 <AmiBlitz3.ab3@12618>   MOVE.w $4(A3),movea5a0+2
0002AD4C <AmiBlitz3.ab3@12619>   MOVE.l movea5a0,D1
0002AD50 <AmiBlitz3.ab3@12620>    BSR.w pokela5s
0002AD56 <AmiBlitz3.ab3@12621>   MOVE.w regnum,D1
0002AD5A <AmiBlitz3.ab3@12622>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002AD5E <AmiBlitz3.ab3@12623>    BSR.w writeword
0002AD64 <AmiBlitz3.ab3@12624>   BTST #$0,$6(A3)
0002AD68 <AmiBlitz3.ab3@12625>    BEQ.w calcvar__normalar
0002AD6C <AmiBlitz3.ab3@12629>   MOVE.w listarfix(PC),D1
0002AD70 <AmiBlitz3.ab3@12630>    BSR.w writeword
0002AD74 <AmiBlitz3.ab3@12633>   BSR.w get1bytemain
0002AD7A <AmiBlitz3.ab3@12637>   BTST #$0,$7(A3)
0002AD7E <AmiBlitz3.ab3@12638>    BEQ.w calcvar__noppnt
0002AD82 <AmiBlitz3.ab3@12639>   CMP.w #$5C,D0
0002AD86 <AmiBlitz3.ab3@12640>    BNE.w calcvar__pmskip
0002AD8A <AmiBlitz3.ab3@12641>   MOVE.w calcvar__pfix(PC),D1
0002AD8E <AmiBlitz3.ab3@12642>    BSR.w writeword
0002AD92 <AmiBlitz3.ab3@12645>   MOVE.w #$8000,D2
0002AD96 <AmiBlitz3.ab3@12646> BRA.w calcvar__loopml
0002AD9A <AmiBlitz3.ab3@12649>   MOVE.w #$C000,D2
0002AD9E <AmiBlitz3.ab3@12650> BRA.w calcvar__loopml
0002ADA0 <AmiBlitz3.ab3@12654> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002ADA4 <AmiBlitz3.ab3@12659>   CMP.w #$28,D0
0002ADA8 <AmiBlitz3.ab3@12660>    BEQ.w noarrerr
0002ADB0 <AmiBlitz3.ab3@12661>   CMPI.l #$100,$4(A2)
0002ADB4 <AmiBlitz3.ab3@12662>    BCS.w calcvar__simpvar
0002ADBA <AmiBlitz3.ab3@12663>   BTST #$0,$7(A3)
0002ADBE <AmiBlitz3.ab3@12664>    BEQ.w calcvar__notap
0002ADC2 <AmiBlitz3.ab3@12668>   CMP.w #$5C,D0
0002ADC6 <AmiBlitz3.ab3@12669>    BEQ.w calcvar__notap
0002ADC8 <AmiBlitz3.ab3@12670>   MOVEQ.l #$00,D2
0002ADCC <AmiBlitz3.ab3@12671> BRA.w calcvar__simpvar2
0002ADD0 <AmiBlitz3.ab3@12674>   MOVE.w #$8000,D2
0002ADD8 <AmiBlitz3.ab3@12675>   MOVE.w $4(A3),movea5a0+2
0002ADDE <AmiBlitz3.ab3@12676>   MOVE.l movea5a0,D1
0002ADE2 <AmiBlitz3.ab3@12677>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002ADE8 <AmiBlitz3.ab3@12679>    TST.b debugmode
0002ADEC <AmiBlitz3.ab3@12680>    BEQ.w 'skip
0002ADF0 <AmiBlitz3.ab3@12681>    MOVE.w #$c320,D1
0002ADF6 <AmiBlitz3.ab3@12682>    JSR Atokejsr
0002ADF8 <AmiBlitz3.ab3@12686>   MOVEQ.l #$00,D3
0002ADFC <AmiBlitz3.ab3@12689>   CMP.w #$5C,D0
0002AE00 <AmiBlitz3.ab3@12690>    BNE.w calcvar__done
0002AE08 <AmiBlitz3.ab3@12691>   CMPI.l #$100,$4(A2)
0002AE0C <AmiBlitz3.ab3@12692>    BCS.w rongtypeerr
0002AE0E <AmiBlitz3.ab3@12693>   MOVE.w D2,-(A7)
0002AE12 <AmiBlitz3.ab3@12694>    BSR.w getparameter2
0002AE16 <AmiBlitz3.ab3@12695>    BEQ.w syntaxerr
0002AE18 <AmiBlitz3.ab3@12696>   ADDQ.w #4,A2
0002AE1C <AmiBlitz3.ab3@12697>    BSR.w findvariable2
0002AE20 <AmiBlitz3.ab3@12698>    BNE.w noofferr
0002AE22 <AmiBlitz3.ab3@12699>   MOVE.w (A7)+,D2
0002AE24 <AmiBlitz3.ab3@12700>   MOVEA.l A2,A3                                             ;pointer to offset
0002AE28 <AmiBlitz3.ab3@12701>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002AE2A <AmiBlitz3.ab3@12702>   MOVEQ #0,d1
0002AE2E <AmiBlitz3.ab3@12703>   MOVE.w 4(a3),d1
0002AE30 <AmiBlitz3.ab3@12704>   ADD.l d1,d3
0002AE36 <AmiBlitz3.ab3@12706>   MOVE.l A3,lastoffset_org
0002AE3A <AmiBlitz3.ab3@12707>   CMP.w #$5B,D0
0002AE3E <AmiBlitz3.ab3@12708>    BNE.w calcvar__realdone
0002AE44 <AmiBlitz3.ab3@12709>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002AE48 <AmiBlitz3.ab3@12710>    BEQ.w rongtypeerr
0002AE4C <AmiBlitz3.ab3@12711>    BSR.w JL_0_9004
0002AE50 <AmiBlitz3.ab3@12712>   MOVEM.l A2-A3,-(A7)
0002AE56 <AmiBlitz3.ab3@12713>   MOVE.w varmode,-(A7)
0002AE5C <AmiBlitz3.ab3@12714>   MOVE.l lastoffset_org,-(A7)
0002AE62 <AmiBlitz3.ab3@12715>   MOVE.w pusha2,D1
0002AE66 <AmiBlitz3.ab3@12716>    BSR.w writeword
0002AE68 <AmiBlitz3.ab3@12717>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002AE72 <AmiBlitz3.ab3@12718>   MOVE.l destpointer,deststore
0002AE78 <AmiBlitz3.ab3@12719>    MOVE.l rightsidetype,-(a7)
0002AE7E <AmiBlitz3.ab3@12720>    MOVE.l leftsidetype,-(a7)
0002AE84 <AmiBlitz3.ab3@12721>    CLR.l rightsidetype
0002AE8A <AmiBlitz3.ab3@12722>    CLR.l leftsidetype
0002AE8E <AmiBlitz3.ab3@12723>    BSR.w eval
0002AE94 <AmiBlitz3.ab3@12724>    MOVE.l (a7)+,rightsidetype
0002AE9A <AmiBlitz3.ab3@12725>    MOVE.l (a7)+,leftsidetype
0002AE9E <AmiBlitz3.ab3@12726>   CMP.w #$5D,D0
0002AEA2 <AmiBlitz3.ab3@12727>    BNE.w syntaxerr
0002AEA8 <AmiBlitz3.ab3@12728>   TST.b fast                                               ;a2,-(a7) array
0002AEAC <AmiBlitz3.ab3@12729>   BEQ calcvar__loop0_l10
0002AEB2 <AmiBlitz3.ab3@12733>   MOVE.l destpointer,d1
0002AEB8 <AmiBlitz3.ab3@12734>   SUB.l deststore,d1
0002AEBE <AmiBlitz3.ab3@12735>   CMP.l #4,d1
0002AEC2 <AmiBlitz3.ab3@12736>   BNE calcvar__loop0_l10
0002AEC8 <AmiBlitz3.ab3@12737>   MOVE.l destpointer,a4
0002AECE <AmiBlitz3.ab3@12738>   MOVE.l -4(a4),-6(a4)
0002AED4 <AmiBlitz3.ab3@12739>   SUBQ.l #2,destpointer
0002AEDA <AmiBlitz3.ab3@12740>   CLR.l imm_addr
0002AEE0 <AmiBlitz3.ab3@12741>   CLR.l load_var_addr
0002AEE4 <AmiBlitz3.ab3@12742> BRA calcvar__loop0_l20
0002AEEA <AmiBlitz3.ab3@12745>   MOVE.w pulla2,D1
0002AEEE <AmiBlitz3.ab3@12746>    BSR.w writeword
0002AEF4 <AmiBlitz3.ab3@12749>   MOVE.l (A7)+,lastoffset_org
0002AEFA <AmiBlitz3.ab3@12750>   MOVE.w (A7)+,varmode
0002AEFE <AmiBlitz3.ab3@12751>   MOVEM.l (A7)+,A2-A3
0002AF04 <AmiBlitz3.ab3@12757>   TST.w debugmode
0002AF08 <AmiBlitz3.ab3@12758>    BEQ.b calcvar__nobchk
0002AF0C <AmiBlitz3.ab3@12759>   MOVE.w $8(A3),D1
0002AF10 <AmiBlitz3.ab3@12760>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002AF16 <AmiBlitz3.ab3@12764>   MOVE.w D1,brchkcode+2
0002AF1C <AmiBlitz3.ab3@12765>   MOVE.w regnum,D1
0002AF1E <AmiBlitz3.ab3@12766>   LSL.w #8,D1
0002AF20 <AmiBlitz3.ab3@12767>   LSL.w #1,D1
0002AF24 <AmiBlitz3.ab3@12768>   OR.w brchkcode0(PC),D1
0002AF2A <AmiBlitz3.ab3@12769>   MOVE.w D1,brchkcode
0002AF2E <AmiBlitz3.ab3@12770>   MOVE.l brchkcode(PC),D1
0002AF32 <AmiBlitz3.ab3@12771>    BSR.w writelong
0002AF36 <AmiBlitz3.ab3@12772>   MOVE.l brchkcode+4(PC),D1
0002AF3A <AmiBlitz3.ab3@12773>    BSR.w writelong
0002AF3E <AmiBlitz3.ab3@12774>   MOVE.w brchkcode+8(PC),D1
0002AF42 <AmiBlitz3.ab3@12775>    BSR.w writeword
0002AF44 <AmiBlitz3.ab3@12778>   MOVEQ.l #$04,D1
0002AF4A <AmiBlitz3.ab3@12779>   BTST #$0,$7(A3)
0002AF4E <AmiBlitz3.ab3@12780>    BNE.w calcvar__dothemul
0002AF52 <AmiBlitz3.ab3@12781>   MOVE.w $8(A2),D1
0002AF56 <AmiBlitz3.ab3@12784>   BSR.w JL_0_B6DE
0002AF5C <AmiBlitz3.ab3@12785>   MOVE.w addrega2,D1
0002AF62 <AmiBlitz3.ab3@12786>   OR.w regnum,D1
0002AF66 <AmiBlitz3.ab3@12787>    OR.w #$100,d1                                           ;>32kb types
0002AF6A <AmiBlitz3.ab3@12788>    BSR.w writeword
0002AF6E <AmiBlitz3.ab3@12789>    BSR.w get1bytemain
0002AF70 <AmiBlitz3.ab3@12790>   MOVEQ.l #$00,D3
0002AF74 <AmiBlitz3.ab3@12791>   MOVE.w #$8000,D2
0002AF7A <AmiBlitz3.ab3@12794>   BTST #$0,$7(A3)
0002AF7E <AmiBlitz3.ab3@12795>    BNE.w calcvar__pointer
0002AF82 <AmiBlitz3.ab3@12796> BRA.w calcvar__loop0
0002AF86 <AmiBlitz3.ab3@12800>  CMP.w #$5C,D0
0002AF8A <AmiBlitz3.ab3@12801>    BNE.w calcvar__done3
0002AF8C <AmiBlitz3.ab3@12802>   TST.w D3
0002AF90 <AmiBlitz3.ab3@12803>    BNE.w calcvar__pskip
0002AF96 <AmiBlitz3.ab3@12804>   MOVE.w movea0,D1
0002AF9A <AmiBlitz3.ab3@12805>    BSR.w writeword
0002AF9E <AmiBlitz3.ab3@12806> BRA.w calcvar__pmore
0002AFA4 <AmiBlitz3.ab3@12809>   MOVE.w D3,movea0a0+2
0002AFAA <AmiBlitz3.ab3@12810>   MOVE.l movea0a0,D1
0002AFAE <AmiBlitz3.ab3@12811>    BSR.w writelong
0002AFB4 <AmiBlitz3.ab3@12814>   BTST #$2,$7(A3)
0002AFB8 <AmiBlitz3.ab3@12815>    BEQ.w calcvar__loopml
0002AFBE <AmiBlitz3.ab3@12816>   MOVE.l adda0a0,D1
0002AFC2 <AmiBlitz3.ab3@12817>    BSR.w writelong
0002AFC6 <AmiBlitz3.ab3@12818> BRA.w calcvar__loopml
0002AFCA <AmiBlitz3.ab3@12821>   BSET #$E,D2
0002AFD0 <AmiBlitz3.ab3@12822>   BTST #$2,$7(A3)
0002AFD4 <AmiBlitz3.ab3@12823>    BNE.w calcvar__done
0002AFD8 <AmiBlitz3.ab3@12824>   BSET #$D,D2
0002AFE0 <AmiBlitz3.ab3@12827>   CMPI.l #$100,$4(A2)
0002AFE4 <AmiBlitz3.ab3@12828>    BCC.w calcvar__done2
0002AFE8 <AmiBlitz3.ab3@12829>   MOVE.b $7(A2),D2
0002AFEC <AmiBlitz3.ab3@12832> BRA.w JL_0_9004
0002AFF0 <AmiBlitz3.ab3@12835>   MOVE.w $6(A2),D2
0002AFF4 <AmiBlitz3.ab3@12838>   MOVE.w $4(A3),D3
0002AFFA <AmiBlitz3.ab3@12839>   BTST #$0,$7(A3)
0002AFFE <AmiBlitz3.ab3@12840>    BEQ.w calcvar__nopoint
0002B002 <AmiBlitz3.ab3@12841>   BSET #$E,D2
0002B004 <AmiBlitz3.ab3@12844> RTS
0002B008 <AmiBlitz3.ab3@12848> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B00C <AmiBlitz3.ab3@12849> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B00E <AmiBlitz3.ab3@12850>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B010 <AmiBlitz3.ab3@12851>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B012 <AmiBlitz3.ab3@12852>              Dc.b $4E,$40                                  ;TRAP    #00
0002B018 <AmiBlitz3.ab3@12860>   TST.w varmode
0002B01C <AmiBlitz3.ab3@12861>    BEQ.w writeword
0002B020 <AmiBlitz3.ab3@12862>   BCLR #$0,D1
0002B024 <AmiBlitz3.ab3@12863> BRA.w writeword
0002B02A <AmiBlitz3.ab3@12866>   TST.w varmode
0002B02E <AmiBlitz3.ab3@12867>    BEQ.w writeword
0002B032 <AmiBlitz3.ab3@12868>   BCLR #$9,D1
0002B036 <AmiBlitz3.ab3@12869> BRA.w writeword
0002B03C <AmiBlitz3.ab3@12872>   TST.w proceduremode
0002B040 <AmiBlitz3.ab3@12873>    BEQ.w writelong
0002B044 <AmiBlitz3.ab3@12874>   BCLR #$19,D1
0002B048 <AmiBlitz3.ab3@12875> BRA.w writelong
0002B04E <AmiBlitz3.ab3@12878>   TST.w varmode
0002B052 <AmiBlitz3.ab3@12879>   BEQ.w writelong
0002B056 <AmiBlitz3.ab3@12880>   BCLR #$10,D1
0002B05C <AmiBlitz3.ab3@12883>   ADDQ.l #1,destpointer
0002B064 <AmiBlitz3.ab3@12884>   BCLR #$0,destpointer+3
0002B06A <AmiBlitz3.ab3@12885>   MOVEA.l destpointer,A4
0002B070 <AmiBlitz3.ab3@12886>   CMPA.l destbufferend,A4
0002B074 <AmiBlitz3.ab3@12887>    BCC.w writeword__overa
0002B076 <AmiBlitz3.ab3@12888>   MOVE.l D1,(A4)+
0002B07C <AmiBlitz3.ab3@12891>   MOVE.l A4,destpointer
0002B080 <AmiBlitz3.ab3@12892>   CMPA.l bigpc(PC),A4
0002B084 <AmiBlitz3.ab3@12893>    BHI.w writeword__nbp
0002B086 <AmiBlitz3.ab3@12894> RTS
0002B08E <AmiBlitz3.ab3@12897>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B094 <AmiBlitz3.ab3@12898>   CLR.b fast
0002B09A <AmiBlitz3.ab3@12899>   CLR.b fpu
0002B0A0 <AmiBlitz3.ab3@12900>   CLR.b iee
0002B0A2 <AmiBlitz3.ab3@12901>   ADDQ.w #4,A4
0002B0A6 <AmiBlitz3.ab3@12902> BRA.w writeword__msa
0002B0AC <AmiBlitz3.ab3@12908>   ADDQ.l #1,destpointer
0002B0B4 <AmiBlitz3.ab3@12909>   BCLR #$0,destpointer+3
0002B0BA <AmiBlitz3.ab3@12910>   MOVEA.l destpointer,A4
0002B0C0 <AmiBlitz3.ab3@12911>   CMPA.l destbufferend,A4
0002B0C4 <AmiBlitz3.ab3@12912>    BCC.w writeword__over
0002B0C6 <AmiBlitz3.ab3@12913>   MOVE.w D1,(A4)+
0002B0CC <AmiBlitz3.ab3@12916>   MOVE.l A4,destpointer
0002B0D0 <AmiBlitz3.ab3@12917>   CMPA.l bigpc(PC),A4
0002B0D4 <AmiBlitz3.ab3@12918>    BHI.w writeword__nbp
0002B0D6 <AmiBlitz3.ab3@12919> RTS
0002B0DC <AmiBlitz3.ab3@12922>   ADDQ.l #1,destpointer
0002B0E4 <AmiBlitz3.ab3@12923>   BCLR #$0,destpointer+3
0002B0EA <AmiBlitz3.ab3@12924>   MOVEA.l destpointer,A4
0002B0F0 <AmiBlitz3.ab3@12925>   CMPA.l destbufferend,A4
0002B0F4 <AmiBlitz3.ab3@12926>    BCC.w writeword__over
0002B0F6 <AmiBlitz3.ab3@12927>   MOVE.w D1,(A4)+
0002B0FC <AmiBlitz3.ab3@12928>   MOVE.l A4,destpointer
0002B100 <AmiBlitz3.ab3@12929>   CMPA.l bigpc(PC),A4
0002B104 <AmiBlitz3.ab3@12930>    BHI.w writeword__nbp
0002B106 <AmiBlitz3.ab3@12931> RTS
0002B10C <AmiBlitz3.ab3@12934>   TST.w cfetchmode
0002B110 <AmiBlitz3.ab3@12935>   BNE.w writeword__nbp2
0002B116 <AmiBlitz3.ab3@12936>   MOVE.l A4,bigpc
0002B118 <AmiBlitz3.ab3@12939> RTS
0002B120 <AmiBlitz3.ab3@12942>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B122 <AmiBlitz3.ab3@12943>   ADDQ.w #2,A4
0002B128 <AmiBlitz3.ab3@12944>   CLR.b fast
0002B12E <AmiBlitz3.ab3@12945>   CLR.b fpu
0002B134 <AmiBlitz3.ab3@12946>   CLR.b iee
0002B138 <AmiBlitz3.ab3@12947> BRA.w writeword__ms
0002B13E <AmiBlitz3.ab3@12951>   MOVEA.l destpointer,A4
0002B144 <AmiBlitz3.ab3@12952>   CMPA.l destbufferend,A4
0002B148 <AmiBlitz3.ab3@12953>    BCC.w writebyte__over
0002B14A <AmiBlitz3.ab3@12954>   MOVE.b D1,(A4)+
0002B150 <AmiBlitz3.ab3@12957>   MOVE.l A4,destpointer
0002B154 <AmiBlitz3.ab3@12958>   CMPA.l bigpc(PC),A4
0002B158 <AmiBlitz3.ab3@12959>    BHI.w writebyte__nbp
0002B15A <AmiBlitz3.ab3@12960> RTS
0002B160 <AmiBlitz3.ab3@12963>   TST.w cfetchmode
0002B164 <AmiBlitz3.ab3@12964>    BNE.w writebyte__nbp2
0002B16A <AmiBlitz3.ab3@12965>   MOVE.l A4,bigpc
0002B16C <AmiBlitz3.ab3@12968> RTS
0002B174 <AmiBlitz3.ab3@12971>   MOVE.w #-1,dontwrite
0002B176 <AmiBlitz3.ab3@12972>   ADDQ.w #1,A4
0002B17C <AmiBlitz3.ab3@12973>   CLR.b fast
0002B182 <AmiBlitz3.ab3@12974>   CLR.b fpu
0002B188 <AmiBlitz3.ab3@12975>   CLR.b iee
0002B18C <AmiBlitz3.ab3@12976> BRA.w writebyte__ms
0002B190 <AmiBlitz3.ab3@12979> bigpc:   Ds.l 1
0002B192 <AmiBlitz3.ab3@12983>   MOVE.w (A0)+,D1
0002B196 <AmiBlitz3.ab3@12984>   BSR.w writeword
0002B198 <AmiBlitz3.ab3@12987>     CMPA.l A1,A0
0002B19C <AmiBlitz3.ab3@12988>     BCC.w pokecode__done
0002B19E <AmiBlitz3.ab3@12989>       MOVE.w (A0)+,D1
0002B1A2 <AmiBlitz3.ab3@12990>       BSR.w writeword
0002B1A6 <AmiBlitz3.ab3@12991> BRA.w pokecode__loop
0002B1A8 <AmiBlitz3.ab3@12994> RTS
0002B1AA <AmiBlitz3.ab3@12997>   MOVE.w (A0)+,D1
0002B1AE <AmiBlitz3.ab3@12998>   BSR.w writeword
0002B1B0 <AmiBlitz3.ab3@12999>   CMPA.l A1,A0
0002B1B4 <AmiBlitz3.ab3@13000>   BCS.w pokecode2
0002B1B6 <AmiBlitz3.ab3@13001> RTS
0002B1BC <AmiBlitz3.ab3@13007>   TST.b iniffcommand
0002B1C0 <AmiBlitz3.ab3@13008>   BEQ 'l1
0002B1C4 <AmiBlitz3.ab3@13009>     MOVE.w #$4880,D1
0002B1CA <AmiBlitz3.ab3@13010>     OR.w regnum,D1
0002B1CE <AmiBlitz3.ab3@13011>     BSR writeword
0002B1D0 <AmiBlitz3.ab3@13014> RTS
0002B1D4 <AmiBlitz3.ab3@13017>   BSR.w convert_byte_to_word
0002B1DA <AmiBlitz3.ab3@13020>   TST.b iee
0002B1DE <AmiBlitz3.ab3@13021>   BEQ 'old
0002B1E2 <AmiBlitz3.ab3@13022>   CMP.b #5,d2
0002B1E6 <AmiBlitz3.ab3@13023>   BEQ wtof
0002B1EA <AmiBlitz3.ab3@13026>   MOVE.w #$48C0,D1
0002B1F0 <AmiBlitz3.ab3@13027>   OR.w regnum,D1
0002B1F4 <AmiBlitz3.ab3@13028> BRA.w writeword
0002B1F6 <AmiBlitz3.ab3@13031>   MOVEQ #0,d0
0002B1FC <AmiBlitz3.ab3@13032>   MOVE.w regnum,d0
0002B1FE <AmiBlitz3.ab3@13033>   ASL.l #7,d0
0002B204 <AmiBlitz3.ab3@13034>   MOVE.l #$f2005000,d1
0002B206 <AmiBlitz3.ab3@13035>   OR.l d0,d1
0002B208 <AmiBlitz3.ab3@13036>   ASL.l #1,d0
0002B20A <AmiBlitz3.ab3@13037>   ASL.l #8,d0
0002B20C <AmiBlitz3.ab3@13038>   OR.l d0,d1
0002B210 <AmiBlitz3.ab3@13039> BRA writelong
0002B214 <AmiBlitz3.ab3@13043>   BSR.w convert_byte_to_word
0002B218 <AmiBlitz3.ab3@13046>   MOVE.w #$4840,D1
0002B21E <AmiBlitz3.ab3@13047>   OR.w regnum,D1
0002B222 <AmiBlitz3.ab3@13048>    BSR.w writeword
0002B226 <AmiBlitz3.ab3@13049>   MOVE.w #$4240,D1
0002B22C <AmiBlitz3.ab3@13050>   OR.w regnum,D1
0002B230 <AmiBlitz3.ab3@13051> BRA.w writeword
0002B234 <AmiBlitz3.ab3@13055>   CMP.w #$ffdc,d1
0002B238 <AmiBlitz3.ab3@13056>   BNE 'negfpu
0002B23A <AmiBlitz3.ab3@13057>   MOVEQ #0,d0
0002B240 <AmiBlitz3.ab3@13058>   MOVE.w regnum,d0
0002B242 <AmiBlitz3.ab3@13059>   ASL.l #7,d0
0002B248 <AmiBlitz3.ab3@13060>   MOVE.l #$f2004000,d1
0002B24A <AmiBlitz3.ab3@13061>   OR.l d0,d1
0002B24C <AmiBlitz3.ab3@13062>   ASL.l #1,d0
0002B24E <AmiBlitz3.ab3@13063>   ASL.l #8,d0
0002B250 <AmiBlitz3.ab3@13064>   OR.l d0,d1
0002B254 <AmiBlitz3.ab3@13065> BRA writelong
0002B256 <AmiBlitz3.ab3@13069>   MOVEQ #0,d1
0002B25C <AmiBlitz3.ab3@13070>   MOVE.w regnum,d1                                         ;fpu neg
0002B25E <AmiBlitz3.ab3@13071>   ASL.l #7,d1
0002B264 <AmiBlitz3.ab3@13072>   OR.l #$f200001a,d1
0002B266 <AmiBlitz3.ab3@13073>   MOVE.l d0,-(a7)
0002B268 <AmiBlitz3.ab3@13074>   MOVEQ #0,d0
0002B26E <AmiBlitz3.ab3@13075>   MOVE.w regnum,d0
0002B270 <AmiBlitz3.ab3@13076>   ASL.l #8,d0
0002B272 <AmiBlitz3.ab3@13077>   ASL.l #2,d0
0002B274 <AmiBlitz3.ab3@13078>   OR.l d0,d1
0002B276 <AmiBlitz3.ab3@13079>   MOVE.l (a7)+,d0
0002B27A <AmiBlitz3.ab3@13080> BRA writelong
0002B280 <AmiBlitz3.ab3@13083>    TST.b iee
0002B284 <AmiBlitz3.ab3@13084>    BNE wtof
0002B288 <AmiBlitz3.ab3@13085>    BSR.w convert_byte_to_long
0002B28C <AmiBlitz3.ab3@13088>    MOVE.w #$FFDC,D1
0002B292 <AmiBlitz3.ab3@13091>    TST.b iee
0002B296 <AmiBlitz3.ab3@13092>    BNE ltof
0002B29C <AmiBlitz3.ab3@13093>    MOVE.w D1,libjsr+2
0002B2A0 <AmiBlitz3.ab3@13094>    BSR.w JL_0_AD40
0002B2A2 <AmiBlitz3.ab3@13095>   MOVE.l D4,D1
0002B2A6 <AmiBlitz3.ab3@13096>    BSR.w JL_0_AD38
0002B2AA <AmiBlitz3.ab3@13097>   MOVE.w #$C900,D1
0002B2AE <AmiBlitz3.ab3@13098>    BSR.w Atokejsr
0002B2B2 <AmiBlitz3.ab3@13099>    BSR.w JL_0_A352
0002B2B8 <AmiBlitz3.ab3@13100>   MOVE.l libjsr,D1
0002B2BC <AmiBlitz3.ab3@13101>    BSR.w writelong
0002B2C0 <AmiBlitz3.ab3@13102>    BSR.w JL_0_A36E
0002B2C2 <AmiBlitz3.ab3@13103>   MOVE.l D5,D1
0002B2C6 <AmiBlitz3.ab3@13104> BRA.w JL_0_AD38
0002B2C8 <AmiBlitz3.ab3@13107> RTS
0002B2CC <AmiBlitz3.ab3@13110>   MOVE.w #$C317,D1
0002B2D2 <AmiBlitz3.ab3@13111>   TST.b typecheck
0002B2D6 <AmiBlitz3.ab3@13112>   BEQ 'l1
0002B2DC <AmiBlitz3.ab3@13113>    TST.b notypecheck
0002B2E0 <AmiBlitz3.ab3@13114>    BNE 'l1
0002B2E6 <AmiBlitz3.ab3@13115>    TST.l lasttoken
0002B2EC <AmiBlitz3.ab3@13122>   TST.b debugmode
0002B2F0 <AmiBlitz3.ab3@13123>    BEQ.w JL_0_9696
0002B2F8 <AmiBlitz3.ab3@13124>   BTST #$7,overflowcheck
0002B2FC <AmiBlitz3.ab3@13125>    BEQ.w JL_0_9696
0002B302 <AmiBlitz3.ab3@13126>   TST.w cfetchmode
0002B306 <AmiBlitz3.ab3@13127>    BNE.w JL_0_9696
0002B30C <AmiBlitz3.ab3@13128>   TST.w regnum
0002B310 <AmiBlitz3.ab3@13129>    BEQ.w JL_0_968A
0002B312 <AmiBlitz3.ab3@13130>   MOVE.w D1,-(A7)
0002B316 <AmiBlitz3.ab3@13131>   MOVE.w JL_0_9698(PC),D1
0002B31A <AmiBlitz3.ab3@13132>    BSR.w writeword
0002B320 <AmiBlitz3.ab3@13133>   MOVE.w regnum,D1
0002B324 <AmiBlitz3.ab3@13134>   OR.w L_0_969C(PC),D1
0002B328 <AmiBlitz3.ab3@13135>    BSR.w writeword
0002B32A <AmiBlitz3.ab3@13136>   MOVE.w (A7)+,D1
0002B32E <AmiBlitz3.ab3@13137>    BSR.w JL_0_968A
0002B332 <AmiBlitz3.ab3@13138>   MOVE.w L_0_969A(PC),D1
0002B336 <AmiBlitz3.ab3@13139> BRA.w writeword
0002B33A <AmiBlitz3.ab3@13143>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B33E <AmiBlitz3.ab3@13144>    BSR.w Atokejsr
0002B342 <AmiBlitz3.ab3@13145>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B344 <AmiBlitz3.ab3@13148> RTS
0002B346 <AmiBlitz3.ab3@13151>   MOVE.l D0,-(A7)
0002B348 <AmiBlitz3.ab3@13154>   MOVE.l (A7)+,D0
0002B34A <AmiBlitz3.ab3@13157>   MOVE.l D0,D0
0002B34E <AmiBlitz3.ab3@13160>   BSR.w convert_word_to_long
0002B354 <AmiBlitz3.ab3@13161>   TST.b iee
0002B358 <AmiBlitz3.ab3@13162>   BEQ 'old
0002B35C <AmiBlitz3.ab3@13163>   CMP.b #5,d2
0002B360 <AmiBlitz3.ab3@13164>   BNE 'old
0002B362 <AmiBlitz3.ab3@13165> RTS
0002B366 <AmiBlitz3.ab3@13168> BRA.w JL_0_9600
0002B36A <AmiBlitz3.ab3@13172>   MOVE.w #$C316,D1
0002B370 <AmiBlitz3.ab3@13173>   TST.b typecheck
0002B374 <AmiBlitz3.ab3@13174>   BEQ 'l1
0002B37A <AmiBlitz3.ab3@13175>   TST.b peekaddrsize
0002B37E <AmiBlitz3.ab3@13176>   BNE 'l1
0002B384 <AmiBlitz3.ab3@13177>   TST.b notypecheck
0002B388 <AmiBlitz3.ab3@13178>   BNE 'l1
0002B38E <AmiBlitz3.ab3@13179>   TST.l lasttoken
0002B392 <AmiBlitz3.ab3@13185> BRA.w JL_0_963A
0002B396 <AmiBlitz3.ab3@13189>   MOVE.w #$C318,D1
0002B39C <AmiBlitz3.ab3@13190>   TST.b typecheck
0002B3A0 <AmiBlitz3.ab3@13191>   BEQ 'l1
0002B3A6 <AmiBlitz3.ab3@13192>   TST.b peekaddrsize
0002B3AA <AmiBlitz3.ab3@13193>   BNE 'l1
0002B3B0 <AmiBlitz3.ab3@13194>   TST.b notypecheck
0002B3B4 <AmiBlitz3.ab3@13195>   BNE 'l1
0002B3BA <AmiBlitz3.ab3@13196>   TST.l lasttoken
0002B3BE <AmiBlitz3.ab3@13202> BRA.w JL_0_963A
0002B3C2 <AmiBlitz3.ab3@13206>   MOVE.w #$C318,D1
0002B3C8 <AmiBlitz3.ab3@13207>   TST.b typecheck
0002B3CC <AmiBlitz3.ab3@13208>   BEQ 'l1
0002B3D2 <AmiBlitz3.ab3@13209>   TST.b notypecheck
0002B3D6 <AmiBlitz3.ab3@13210>   BNE 'l1
0002B3DC <AmiBlitz3.ab3@13211>   TST.l lasttoken
0002B3E0 <AmiBlitz3.ab3@13217>   BSR.w JL_0_963A
0002B3E4 <AmiBlitz3.ab3@13218> BRA.w convert_word_to_quick
0002B3E8 <AmiBlitz3.ab3@13222> BRA.w JL_0_9600
0002B3EA <AmiBlitz3.ab3@13226> RTS
0002B3EE <AmiBlitz3.ab3@13230>   MOVE.w #$C319,D1
0002B3F4 <AmiBlitz3.ab3@13231>   TST.b typecheck
0002B3F8 <AmiBlitz3.ab3@13232>   BEQ 'l1
0002B3FE <AmiBlitz3.ab3@13233>   TST.b notypecheck
0002B402 <AmiBlitz3.ab3@13234>   BNE 'l1
0002B408 <AmiBlitz3.ab3@13235>   TST.l lasttoken
0002B40C <AmiBlitz3.ab3@13242>   BSR.w JL_0_963A
0002B410 <AmiBlitz3.ab3@13245>   MOVE.w #$4240,D1
0002B416 <AmiBlitz3.ab3@13246>   OR.w regnum,D1
0002B41A <AmiBlitz3.ab3@13247>   BSR.w writeword
0002B41E <AmiBlitz3.ab3@13248>   MOVE.w #$4840,D1
0002B424 <AmiBlitz3.ab3@13249>   OR.w regnum,D1
0002B428 <AmiBlitz3.ab3@13250> BRA.w writeword
0002B42C <AmiBlitz3.ab3@13254> BRA.w JL_0_96D0
0002B430 <AmiBlitz3.ab3@13258>   BSR.w JL_0_96D0
0002B434 <AmiBlitz3.ab3@13259> BRA.w convert_word_to_long
0002B436 <AmiBlitz3.ab3@13264>   MOVEQ #0,d0
0002B43C <AmiBlitz3.ab3@13265>   MOVE.w regnum,d0
0002B43E <AmiBlitz3.ab3@13266>   ASL.l #7,d0
0002B444 <AmiBlitz3.ab3@13267>   MOVE.l #$f2004000,d1
0002B446 <AmiBlitz3.ab3@13268>   OR.l d0,d1
0002B448 <AmiBlitz3.ab3@13269>   ASL.l #1,d0
0002B44A <AmiBlitz3.ab3@13270>   ASL.l #8,d0
0002B44C <AmiBlitz3.ab3@13271>   OR.l d0,d1
0002B450 <AmiBlitz3.ab3@13272>   BSR writelong
0002B456 <AmiBlitz3.ab3@13273>   MOVE.w regnum,d0
0002B458 <AmiBlitz3.ab3@13274>   ASL.l #7,d0
0002B45E <AmiBlitz3.ab3@13275>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B460 <AmiBlitz3.ab3@13276>   OR.w d0,d1
0002B464 <AmiBlitz3.ab3@13277>   BSR writelong
0002B46A <AmiBlitz3.ab3@13278>   MOVE.l #$37800000,d1
0002B46E <AmiBlitz3.ab3@13279>   BSR writelong
0002B470 <AmiBlitz3.ab3@13280> RTS
0002B476 <AmiBlitz3.ab3@13284>   TST.b iee
0002B47A <AmiBlitz3.ab3@13285>   BNE qtof
0002B47E <AmiBlitz3.ab3@13286>   MOVE.w #$D300,D1
0002B480 <AmiBlitz3.ab3@13289>   MOVE.w D1,-(A7)
0002B484 <AmiBlitz3.ab3@13290>    BSR.w JL_0_AD40
0002B486 <AmiBlitz3.ab3@13291>   MOVE.l D4,D1
0002B48A <AmiBlitz3.ab3@13292>    BSR.w JL_0_AD38
0002B48E <AmiBlitz3.ab3@13293>    BSR.w JL_0_A352
0002B490 <AmiBlitz3.ab3@13294>   MOVE.w (A7)+,D1
0002B494 <AmiBlitz3.ab3@13295>    BSR.w Atokejsr
0002B498 <AmiBlitz3.ab3@13296>    BSR.w JL_0_A36E
0002B49A <AmiBlitz3.ab3@13297>   MOVE.l D5,D1
0002B49E <AmiBlitz3.ab3@13298> BRA.w JL_0_AD38
0002B4A0 <AmiBlitz3.ab3@13302> RTS
0002B4A6 <AmiBlitz3.ab3@13305>   TST.b typecheck
0002B4AA <AmiBlitz3.ab3@13306>   BEQ 'l1
0002B4B0 <AmiBlitz3.ab3@13307>   TST.b notypecheck
0002B4B4 <AmiBlitz3.ab3@13308>   BNE 'l1
0002B4BA <AmiBlitz3.ab3@13309>   TST.l lasttoken
0002B4C0 <AmiBlitz3.ab3@13314>   TST.b iee
0002B4C4 <AmiBlitz3.ab3@13315>   BNE ftol
0002B4C8 <AmiBlitz3.ab3@13316>   MOVE.w #$C31A,D1
0002B4CC <AmiBlitz3.ab3@13317>   BSR.w JL_0_963A
0002B4D0 <AmiBlitz3.ab3@13318>   BSR.w JL_0_974A
0002B4D4 <AmiBlitz3.ab3@13319> BRA.w convert_long_to_byte
0002B4D6 <AmiBlitz3.ab3@13323> RTS
0002B4DC <AmiBlitz3.ab3@13326>   TST.b typecheck
0002B4E0 <AmiBlitz3.ab3@13327>   BEQ 'l1
0002B4E6 <AmiBlitz3.ab3@13328>   TST.b notypecheck
0002B4EA <AmiBlitz3.ab3@13329>   BNE 'l1
0002B4F0 <AmiBlitz3.ab3@13330>   TST.l lasttoken
0002B4F6 <AmiBlitz3.ab3@13335>   TST.b iee
0002B4FA <AmiBlitz3.ab3@13336>   BNE ftol
0002B4FE <AmiBlitz3.ab3@13337>   MOVE.w #$C31B,D1
0002B502 <AmiBlitz3.ab3@13338>   BSR.w JL_0_963A
0002B506 <AmiBlitz3.ab3@13339>   BSR.w JL_0_974A
0002B50A <AmiBlitz3.ab3@13340> BRA.w convert_long_to_word
0002B50C <AmiBlitz3.ab3@13344> RTS
0002B512 <AmiBlitz3.ab3@13347>   TST.b iee
0002B516 <AmiBlitz3.ab3@13348>   BNE ftol
0002B51A <AmiBlitz3.ab3@13349>   MOVE.w #$C31C,D1
0002B51E <AmiBlitz3.ab3@13350>   BSR.w JL_0_963A
0002B522 <AmiBlitz3.ab3@13353>   MOVE.w #$FFE2,D1
0002B526 <AmiBlitz3.ab3@13354> BRA.w JL_0_9604
0002B528 <AmiBlitz3.ab3@13357>   MOVE.l d0,-(a7)
0002B52A <AmiBlitz3.ab3@13358>   MOVEQ #0,d0
0002B530 <AmiBlitz3.ab3@13359>   MOVE.w regnum,d0
0002B532 <AmiBlitz3.ab3@13360>   ASL.l #7,d0
0002B538 <AmiBlitz3.ab3@13361>   MOVE.l #$f2006000,d1
0002B53A <AmiBlitz3.ab3@13362>   OR.l d0,d1
0002B53C <AmiBlitz3.ab3@13363>   ASL.l #1,d0
0002B53E <AmiBlitz3.ab3@13364>   ASL.l #8,d0
0002B540 <AmiBlitz3.ab3@13365>   OR.l d0,d1
0002B542 <AmiBlitz3.ab3@13366>   MOVE.l (a7)+,d0
0002B546 <AmiBlitz3.ab3@13367> BRA writelong
0002B548 <AmiBlitz3.ab3@13371>   MOVE.l d0,-(a7)
0002B54A <AmiBlitz3.ab3@13372>   MOVEQ #0,d0
0002B550 <AmiBlitz3.ab3@13373>   MOVE.l #$f23c4023,d1
0002B556 <AmiBlitz3.ab3@13374>   MOVE.w regnum,d0
0002B558 <AmiBlitz3.ab3@13375>   ASL.l #7,d0
0002B55A <AmiBlitz3.ab3@13376>   OR.l d0,d1
0002B55E <AmiBlitz3.ab3@13377>   BSR writelong
0002B564 <AmiBlitz3.ab3@13378>   MOVE.l #$00010000,d1
0002B568 <AmiBlitz3.ab3@13379>   BSR writelong
0002B56E <AmiBlitz3.ab3@13380>   MOVE.w regnum,d0
0002B570 <AmiBlitz3.ab3@13381>   ASL.l #7,d0
0002B576 <AmiBlitz3.ab3@13382>   MOVE.l #$f2006000,d1
0002B578 <AmiBlitz3.ab3@13383>   OR.l d0,d1
0002B57A <AmiBlitz3.ab3@13384>   ASL.l #1,d0
0002B57C <AmiBlitz3.ab3@13385>   ASL.l #8,d0
0002B57E <AmiBlitz3.ab3@13386>   OR.l d0,d1
0002B582 <AmiBlitz3.ab3@13387>   BSR writelong
0002B584 <AmiBlitz3.ab3@13388>   MOVE.l (a7)+,d0
0002B586 <AmiBlitz3.ab3@13389> RTS
0002B588 <AmiBlitz3.ab3@13393> RTS
0002B58E <AmiBlitz3.ab3@13397>   TST.b iee
0002B592 <AmiBlitz3.ab3@13398>   BNE ftoq
0002B596 <AmiBlitz3.ab3@13399>   MOVE.w #$C31B,D1
0002B59A <AmiBlitz3.ab3@13400>   BSR.w JL_0_963A
0002B59E <AmiBlitz3.ab3@13401>   MOVE.w #$D301,D1
0002B5A2 <AmiBlitz3.ab3@13402> BRA.w JL_0_96FC
0002B5A8 <AmiBlitz3.ab3@13408>    TST.b blitzparloop
0002B5AC <AmiBlitz3.ab3@13409>    BNE 'l1
0002B5B2 <AmiBlitz3.ab3@13410>    TST.b funcparloop
0002B5B6 <AmiBlitz3.ab3@13411>    BNE 'l1
0002B5BA <AmiBlitz3.ab3@13412>    BRA error_convert_types
0002B5C2 <AmiBlitz3.ab3@13415>   CMP.b #2,optistring
0002B5C6 <AmiBlitz3.ab3@13416>   BEQ JLrts
0002B5CC <AmiBlitz3.ab3@13417>   MOVE.w stol,D1
0002B5D0 <AmiBlitz3.ab3@13418>   BSR.w writeword
0002B5D8 <AmiBlitz3.ab3@13419>   CMPI.w #$2,sbgot
0002B5DC <AmiBlitz3.ab3@13420>   BCS.w sbtolong
0002B5E0 <AmiBlitz3.ab3@13421>   MOVE.w ceos(PC),D1
0002B5E4 <AmiBlitz3.ab3@13422>   BSR.w writeword
0002B5EA <AmiBlitz3.ab3@13425>   MOVE.w regnum,D1
0002B5EC <AmiBlitz3.ab3@13426>   LSL.w #8,D1
0002B5EE <AmiBlitz3.ab3@13427>   LSL.w #1,D1
0002B5F6 <AmiBlitz3.ab3@13428>   CMPI.w #$2,sbgot
0002B5FA <AmiBlitz3.ab3@13429>   BCS.w JL_0_98E8
0002B600 <AmiBlitz3.ab3@13430>   MOVE.w a2offset,D3
0002B606 <AmiBlitz3.ab3@13431>   SUB.w thisstuse,D3
0002B60A <AmiBlitz3.ab3@13432>   CMP.w #$6,D3
0002B60E <AmiBlitz3.ab3@13433>   BNE.w JL_0_98D4b
0002B614 <AmiBlitz3.ab3@13434>   OR.w movestst2,D1
0002B618 <AmiBlitz3.ab3@13435>   BSR.w writeword
0002B61E <AmiBlitz3.ab3@13436>   LEA movestst2+2,A0
0002B624 <AmiBlitz3.ab3@13437>   LEA movestst2f,A1
0002B628 <AmiBlitz3.ab3@13438> BRA.w pokecode2
0002B62E <AmiBlitz3.ab3@13442>   OR.w movea7dn,D1
0002B632 <AmiBlitz3.ab3@13443>   BSR.w writeword
0002B638 <AmiBlitz3.ab3@13444>   MOVE.l #0,D1
0002B63C <AmiBlitz3.ab3@13445> BRA.w writeword
0002B642 <AmiBlitz3.ab3@13449>   ADDQ.w #1,fuckpos
0002B646 <AmiBlitz3.ab3@13450>   BSR.w writeconvertcode
0002B64C <AmiBlitz3.ab3@13451>   SUBQ.w #1,fuckpos
0002B64E <AmiBlitz3.ab3@13453> RTS
0002B650 <AmiBlitz3.ab3@13457>   MOVE.w D3,D1
0002B654 <AmiBlitz3.ab3@13458>   CMP.w #7,d1
0002B658 <AmiBlitz3.ab3@13459>   BLE 'ok
0002B65E <AmiBlitz3.ab3@13460>   JMP errorinternalconvert
0002B660 <AmiBlitz3.ab3@13461> 'ok  SUBQ.w #1,D1
0002B664 <AmiBlitz3.ab3@13462>   MULU #$7,D1
0002B666 <AmiBlitz3.ab3@13463>   ADD.w D2,D1
0002B668 <AmiBlitz3.ab3@13464>   SUBQ.w #1,D1
0002B66A <AmiBlitz3.ab3@13465>   LSL.w #2,D1
0002B670 <AmiBlitz3.ab3@13466>   LEA convtable,A0
0002B674 <AmiBlitz3.ab3@13467>   MOVE.l $0(A0,D1.W),D1
0002B678 <AmiBlitz3.ab3@13468>   BEQ.w JL_0_97A2
0002B67A <AmiBlitz3.ab3@13469>     MOVEA.l D1,A0
0002B67E <AmiBlitz3.ab3@13470>     CMP.b #$ff,d3
0002B682 <AmiBlitz3.ab3@13471>     BEQ JL_0_97A2
0002B684 <AmiBlitz3.ab3@13472> JMP (A0)
0002B686 <AmiBlitz3.ab3@13475> RTS
0002B68A <AmiBlitz3.ab3@13478> usedfrom:  Ds.l 1
0002B68E <AmiBlitz3.ab3@13485>   CMP.w #"\",D0
0002B692 <AmiBlitz3.ab3@13486>   BNE.w JL_0_97C2
0002B696 <AmiBlitz3.ab3@13487>     CMP.b #"\",(a5)
0002B69A <AmiBlitz3.ab3@13488>     BNE 'first
0002B6A0 <AmiBlitz3.ab3@13489>       MOVE.l A5,usedfrom
0002B6A6 <AmiBlitz3.ab3@13490>       LEA path2,A5
0002B6AA <AmiBlitz3.ab3@13491> BRA 'g1
0002B6AC <AmiBlitz3.ab3@13494>     SUBQ.w #1,A5
0002B6B2 <AmiBlitz3.ab3@13495>   MOVE.l A5,usedfrom
0002B6B8 <AmiBlitz3.ab3@13496>   LEA usedpath,A5                                          ;read path
0002B6BC <AmiBlitz3.ab3@13499>   BSR.w get1bytemain
0002B6C2 <AmiBlitz3.ab3@13502>   CLR.w flagmask
0002B6C6 <AmiBlitz3.ab3@13503>   CMP.w #$2A,D0
0002B6CA <AmiBlitz3.ab3@13504>    BNE.w JL_0_983A
0002B6D2 <AmiBlitz3.ab3@13505>   MOVE.w #$0001,flagmask
0002B6D6 <AmiBlitz3.ab3@13507>    BSR.w getparameter2
0002B6DA <AmiBlitz3.ab3@13510>    BEQ.w syntaxerr
0002B6DE <AmiBlitz3.ab3@13511>   CMP.w #$28,D0
0002B6E2 <AmiBlitz3.ab3@13512>    BEQ.w JL_0_9830
0002B6E6 <AmiBlitz3.ab3@13513>   CMP.w #$2E,D0
0002B6EA <AmiBlitz3.ab3@13514>    BEQ.w JL_0_980C
0002B6EE <AmiBlitz3.ab3@13515>   CMP.w #$24,D0
0002B6F2 <AmiBlitz3.ab3@13516>    BNE.w JL_0_9838
0002B6FA <AmiBlitz3.ab3@13517>   ORI.w #$8,flagmask
0002B6FE <AmiBlitz3.ab3@13518>    BSR.w storeloc
0002B702 <AmiBlitz3.ab3@13519>    BSR.w get1bytemain
0002B706 <AmiBlitz3.ab3@13520> BRA.w JL_0_9822
0002B70A <AmiBlitz3.ab3@13524>   BSR.w storeloc
0002B70C <AmiBlitz3.ab3@13525>   MOVE.w D2,-(A7)
0002B712 <AmiBlitz3.ab3@13526>   LEA namebuff2,A1
0002B716 <AmiBlitz3.ab3@13527>    BSR.w makename3
0002B71A <AmiBlitz3.ab3@13528>    BEQ.w syntaxerr
0002B71C <AmiBlitz3.ab3@13529>   MOVE.w (A7)+,D2
0002B71E <AmiBlitz3.ab3@13532>    MOVE.w D0,D1
0002B722 <AmiBlitz3.ab3@13533>    BSR.w resloc
0002B726 <AmiBlitz3.ab3@13534>    CMP.w #$28,D1
0002B72A <AmiBlitz3.ab3@13535>    BNE.w JL_0_9838
0002B732 <AmiBlitz3.ab3@13538>   ORI.w #$2,flagmask
0002B734 <AmiBlitz3.ab3@13541> RTS
0002B738 <AmiBlitz3.ab3@13545>   CMP.w #$40,D0
0002B73C <AmiBlitz3.ab3@13546>    BNE.w JL_0_984E
0002B744 <AmiBlitz3.ab3@13547>   MOVE.w #$0005,flagmask
0002B748 <AmiBlitz3.ab3@13548> BRA.w JL_0_97D8
0002B74C <AmiBlitz3.ab3@13552>   BSR.w makename2
0002B750 <AmiBlitz3.ab3@13553> BRA.w JL_0_97DC
0002B754 <AmiBlitz3.ab3@13557>   MOVE.w #$FED3,D1
0002B758 <AmiBlitz3.ab3@13558>    BSR.w uselib
0002B75E <AmiBlitz3.ab3@13559>   LEA pusha3,A0
0002B764 <AmiBlitz3.ab3@13560>   LEA pusha3f,A1
0002B768 <AmiBlitz3.ab3@13561> BRA.w pokecode
0002B76C <AmiBlitz3.ab3@13565>   MOVE.w #$FED3,D1
0002B770 <AmiBlitz3.ab3@13566>    BSR.w uselib
0002B776 <AmiBlitz3.ab3@13567>   LEA pulla3,A0
0002B77C <AmiBlitz3.ab3@13568>   LEA pulla3f,A1
0002B780 <AmiBlitz3.ab3@13569> BRA.w pokecode
0002B782 <AmiBlitz3.ab3@13573> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002B78A <AmiBlitz3.ab3@13578>     CMP.b #2,optistring
0002B78E <AmiBlitz3.ab3@13579>    BEQ 'l10
0002B792 <AmiBlitz3.ab3@13580>    MOVE.w ceos(PC),D1
0002B796 <AmiBlitz3.ab3@13581>    BSR.w writeword                                         ;clr.b (a3)
0002B79C <AmiBlitz3.ab3@13584>   MOVE.w regnum,D1
0002B79E <AmiBlitz3.ab3@13585>   LSL.w #8,D1
0002B7A0 <AmiBlitz3.ab3@13586>   LSL.w #1,D1
0002B7A8 <AmiBlitz3.ab3@13587>   CMPI.w #$2,sbgot
0002B7AC <AmiBlitz3.ab3@13588>    BCS.w JL_0_98E8
0002B7B2 <AmiBlitz3.ab3@13589>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002B7B8 <AmiBlitz3.ab3@13590>   SUB.w thisstuse,D3
0002B7BC <AmiBlitz3.ab3@13591>   CMP.w #$6,D3
0002B7C0 <AmiBlitz3.ab3@13592>    BNE.w JL_0_98D4
0002B7C6 <AmiBlitz3.ab3@13593>   OR.w movestst2,D1
0002B7CA <AmiBlitz3.ab3@13594>    BSR.w writeword
0002B7D0 <AmiBlitz3.ab3@13595>   LEA movestst2+2,A0
0002B7D6 <AmiBlitz3.ab3@13596>   LEA movestst2f,A1
0002B7DA <AmiBlitz3.ab3@13597> BRA.w pokecode2
0002B7E0 <AmiBlitz3.ab3@13601>    OR.w movea7dn,D1
0002B7E4 <AmiBlitz3.ab3@13602>    BSR.w writeword
0002B7EA <AmiBlitz3.ab3@13603>   MOVE.l movea7dn+2,D1
0002B7EE <AmiBlitz3.ab3@13615>   BSR writelong
0002B7F6 <AmiBlitz3.ab3@13618>    CMP.w #6,regnum
0002B7FA <AmiBlitz3.ab3@13619>    BEQ 'l1
0002B800 <AmiBlitz3.ab3@13620>    TST.w stackpar
0002B804 <AmiBlitz3.ab3@13621>    BNE 'l1
0002B80A <AmiBlitz3.ab3@13622>    TST.b funcparloop
0002B80E <AmiBlitz3.ab3@13623>    BEQ 'l1
0002B814 <AmiBlitz3.ab3@13624>    MOVE.l #$48780000,d1
0002B818 <AmiBlitz3.ab3@13625>    BSR writelong
0002B81A <AmiBlitz3.ab3@13629> RTS
0002B81C <AmiBlitz3.ab3@13634>      MOVE.l d1,-(a7)
0002B824 <AmiBlitz3.ab3@13635>      CMP.w #6,regnum
0002B828 <AmiBlitz3.ab3@13636>      BEQ 'l1
0002B82E <AmiBlitz3.ab3@13637>      TST.w stackpar
0002B832 <AmiBlitz3.ab3@13638>      BNE 'l1
0002B838 <AmiBlitz3.ab3@13639>      TST.b funcparloop
0002B83C <AmiBlitz3.ab3@13640>      BEQ 'l1
0002B842 <AmiBlitz3.ab3@13641>      MOVE.l #$48780000,d1
0002B846 <AmiBlitz3.ab3@13642>      BSR writelong
0002B848 <AmiBlitz3.ab3@13645>      MOVE.l (a7)+,d1
0002B84E <AmiBlitz3.ab3@13647>    OR.w movestdn,D1
0002B852 <AmiBlitz3.ab3@13648>    BSR.w writeword
0002B856 <AmiBlitz3.ab3@13649>   MOVE.w #$FED3,D1
0002B85A <AmiBlitz3.ab3@13650>    BSR.w uselib
0002B85E <AmiBlitz3.ab3@13651>   MOVE.w $A(A1),D1
0002B862 <AmiBlitz3.ab3@13652> BRA.w writeword
0002B864 <AmiBlitz3.ab3@13655> unknown:    Ds.w 1
0002B86A <AmiBlitz3.ab3@13658> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002B86E <AmiBlitz3.ab3@13659> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002B874 <AmiBlitz3.ab3@13660>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002B87A <AmiBlitz3.ab3@13666>   TST.b debugmode
0002B87E <AmiBlitz3.ab3@13667>   BEQ.w sharreval
0002B882 <AmiBlitz3.ab3@13668>  BSR.w arreval
0002B886 <AmiBlitz3.ab3@13671>   MOVE.w somecode(PC),D1
0002B88C <AmiBlitz3.ab3@13672>   OR.w regnum,D1
0002B890 <AmiBlitz3.ab3@13673>    BSR.w writeword
0002B892 <AmiBlitz3.ab3@13674>   MOVEQ.l #$01,D1
0002B894 <AmiBlitz3.ab3@13675>   SWAP D1
0002B898 <AmiBlitz3.ab3@13676>    BSR.w writelong
0002B89C <AmiBlitz3.ab3@13677>   MOVE.l somecode2(PC),D1
0002B8A0 <AmiBlitz3.ab3@13678>    BSR.w writelong
0002B8A4 <AmiBlitz3.ab3@13679>   MOVE.w #$C309,D1
0002B8A8 <AmiBlitz3.ab3@13680> BRA.w Atokejsr
0002B8AA <AmiBlitz3.ab3@13684>   MOVEQ.l #$02,D2
0002B8AC <AmiBlitz3.ab3@13685>   MOVEQ.l #$00,D1
0002B8AE <AmiBlitz3.ab3@13686>   MOVEQ.l #$00,D3
0002B8B2 <AmiBlitz3.ab3@13687> BRA.w maineval2
0002B8B4 <AmiBlitz3.ab3@13691>   MOVEQ.l #$03,D2
0002B8B6 <AmiBlitz3.ab3@13692>   MOVEQ.l #$00,D1
0002B8B8 <AmiBlitz3.ab3@13693>   MOVEQ.l #$00,D3
0002B8BE <AmiBlitz3.ab3@13694>   MOVE.b notypecheck,-(a7)
0002B8C6 <AmiBlitz3.ab3@13695>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002B8CC <AmiBlitz3.ab3@13696>   JSR maineval2
0002B8D2 <AmiBlitz3.ab3@13697>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002B8D4 <AmiBlitz3.ab3@13698>   RTS
0002B8DE <AmiBlitz3.ab3@13702>   MOVE.w oldqflag,instringon
0002B8E4 <AmiBlitz3.ab3@13703>   MOVEA.l lastsourcepos,A5
0002B8E6 <AmiBlitz3.ab3@13704>   MOVEQ.l #-$01,D1
0002B8E8 <AmiBlitz3.ab3@13705>   MOVEQ.l #-$01,D3
0002B8EC <AmiBlitz3.ab3@13706> BRA.w peval
0002B8F6 <AmiBlitz3.ab3@13711>   MOVE.w oldqflag,instringon
0002B8FC <AmiBlitz3.ab3@13712>   MOVEA.l lastsourcepos,A5
0002B8FE <AmiBlitz3.ab3@13715>   MOVEQ.l #-$01,D1
0002B900 <AmiBlitz3.ab3@13716>   MOVEQ.l #$00,D3
0002B906 <AmiBlitz3.ab3@13717>   MOVE.l leftsidetype,-(a7)
0002B90C <AmiBlitz3.ab3@13718>   MOVE.l rightsidetype,-(a7)
0002B912 <AmiBlitz3.ab3@13719>   CLR.l leftsidetype
0002B918 <AmiBlitz3.ab3@13720>   CLR.l rightsidetype
0002B91E <AmiBlitz3.ab3@13721>   JSR maineval
0002B924 <AmiBlitz3.ab3@13722>   MOVE.l (a7)+,rightsidetype
0002B92A <AmiBlitz3.ab3@13723>   MOVE.l (a7)+,leftsidetype
0002B92C <AmiBlitz3.ab3@13724>   RTS
0002B936 <AmiBlitz3.ab3@13728>   MOVE.w oldqflag,instringon
0002B93C <AmiBlitz3.ab3@13729>   MOVEA.l lastsourcepos,A5
0002B93E <AmiBlitz3.ab3@13730>   MOVEQ.l #$00,D1
0002B940 <AmiBlitz3.ab3@13731>   MOVEQ.l #-$01,D3
0002B944 <AmiBlitz3.ab3@13732> BRA.w maineval
0002B946 <AmiBlitz3.ab3@13736>   MOVEQ.l #$01,D1
0002B948 <AmiBlitz3.ab3@13737>   MOVEQ.l #-$01,D3
0002B94C <AmiBlitz3.ab3@13738> BRA.w maineval
0002B956 <AmiBlitz3.ab3@13743>   MOVE.w oldqflag,instringon
0002B95C <AmiBlitz3.ab3@13744>   MOVEA.l lastsourcepos,A5
0002B95E <AmiBlitz3.ab3@13747>   MOVEQ.l #$00,D1                                        ;no push
0002B960 <AmiBlitz3.ab3@13748>   MOVEQ.l #$00,D3
0002B968 <AmiBlitz3.ab3@13769>    CMPI.w #$6,regnum
0002B96C <AmiBlitz3.ab3@13770>    BCS.w maineval2
0002B96E <AmiBlitz3.ab3@13771>    MOVEQ #0,d1
0002B974 <AmiBlitz3.ab3@13772>    MOVE.l destpointer,a4
0002B97A <AmiBlitz3.ab3@13774>    CMPA.l destbufferend,A4
0002B97E <AmiBlitz3.ab3@13775>    BCC.w maineval__l2
0002B984 <AmiBlitz3.ab3@13777>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002B988 <AmiBlitz3.ab3@13779>    BNE maineval__l2
0002B98C <AmiBlitz3.ab3@13783> BRA maineval__l1
0002B98E <AmiBlitz3.ab3@13786>   MOVEQ.l #-$01,D1
0002B996 <AmiBlitz3.ab3@13789>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002B99C <AmiBlitz3.ab3@13792>   MOVE.w thisstuse,-(A7)
0002B9A6 <AmiBlitz3.ab3@13793>   MOVE.w a2offset,thisstuse
0002B9AC <AmiBlitz3.ab3@13794>   MOVE.w stackpar,-(A7)
0002B9B2 <AmiBlitz3.ab3@13795>   MOVE.w D1,stackpar
0002B9B8 <AmiBlitz3.ab3@13796>   MOVE.w sbgot,-(A7)
0002B9BE <AmiBlitz3.ab3@13797>   CLR.w sbgot
0002B9C2 <AmiBlitz3.ab3@13798>   MOVE.w unknown(PC),-(A7)
0002B9C8 <AmiBlitz3.ab3@13799>   MOVE.w D3,unknown
0002B9CA <AmiBlitz3.ab3@13800>   MOVE.w D2,-(a7)
0002B9D0 <AmiBlitz3.ab3@13801>   MOVE.w d2,mode
0002B9D4 <AmiBlitz3.ab3@13802>    BSR.w eval3
0002B9D6 <AmiBlitz3.ab3@13803>   MOVE.w (a7)+,d3
0002B9DA <AmiBlitz3.ab3@13804>    BEQ.w maineval__noconv
0002B9DE <AmiBlitz3.ab3@13805>   MOVE.w unknown(PC),D1
0002B9E2 <AmiBlitz3.ab3@13806>    BNE.w maineval__noconv
0002B9E4 <AmiBlitz3.ab3@13807>   EXG.l D2,D3
0002B9E6 <AmiBlitz3.ab3@13808>    MOVE.l a2,-(a7)
0002B9EC <AmiBlitz3.ab3@13809>    TST.b curtemplabel
0002B9F0 <AmiBlitz3.ab3@13810>    BEQ maineval2__l10
0002B9F6 <AmiBlitz3.ab3@13811>    MOVE.l asmbuff,a2
0002B9FC <AmiBlitz3.ab3@13812>    CMP.w #$c,$8(a2)
0002BA00 <AmiBlitz3.ab3@13813>    BEQ maineval2__l20
0002BA06 <AmiBlitz3.ab3@13814>    CMP.w #$d,$8(a2)
0002BA0A <AmiBlitz3.ab3@13815>    BEQ maineval2__l20
0002BA0C <AmiBlitz3.ab3@13818>   CMP.w d2,d3
0002BA10 <AmiBlitz3.ab3@13819>   BEQ maineval2__l20
0002BA14 <AmiBlitz3.ab3@13820>   BSR.w writeconvertcode
0002BA1A <AmiBlitz3.ab3@13821>   CLR.b doimmediate
0002BA1C <AmiBlitz3.ab3@13824>   MOVE.l (a7)+,a2
0002BA22 <AmiBlitz3.ab3@13827>   MOVE.w (A7)+,unknown
0002BA28 <AmiBlitz3.ab3@13828>   MOVE.w stackpar,D1
0002BA2C <AmiBlitz3.ab3@13829>    BEQ.w maineval__skipme
0002BA30 <AmiBlitz3.ab3@13830>    BMI.w maineval__skipme
0002BA36 <AmiBlitz3.ab3@13834>   MOVE.w regnum,D1
0002BA38 <AmiBlitz3.ab3@13835>   LSL.w #8,D1
0002BA3A <AmiBlitz3.ab3@13836>   LSL.w #1,D1
0002BA3E <AmiBlitz3.ab3@13837>   CMP.w #$7,D2
0002BA42 <AmiBlitz3.ab3@13838>    BNE.w maineval__hi1
0002BA4A <AmiBlitz3.ab3@13839>    CMP.b #2,optistring
0002BA4E <AmiBlitz3.ab3@13840>    BEQ maineval__hi1a
0002BA50 <AmiBlitz3.ab3@13841>   MOVE.w D1,-(A7)
0002BA56 <AmiBlitz3.ab3@13842>   OR.w getstlen,D1
0002BA5A <AmiBlitz3.ab3@13843>    BSR.w writeword
0002BA5C <AmiBlitz3.ab3@13844>   MOVE.w (A7)+,D1
0002BA62 <AmiBlitz3.ab3@13847>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BA66 <AmiBlitz3.ab3@13851>   MOVE.w #$3f3c,d1
0002BA6A <AmiBlitz3.ab3@13852>    BSR.w writeword
0002BA6C <AmiBlitz3.ab3@13856>   MOVE.w d2,d1
0002BA72 <AmiBlitz3.ab3@13857>   MOVE.w d1,libmode
0002BA76 <AmiBlitz3.ab3@13858>    BSR.w writeword
0002BA7A <AmiBlitz3.ab3@13859>   CMP.w #$7,D2
0002BA7E <AmiBlitz3.ab3@13860>    BNE.w maineval__skipme
0002BA84 <AmiBlitz3.ab3@13861>   MOVE.w putstlen,D1
0002BA8A <AmiBlitz3.ab3@13862>   OR.w regnum,D1
0002BA8E <AmiBlitz3.ab3@13863>    BSR.w writeword
0002BA92 <AmiBlitz3.ab3@13866>    CMP.w #$7,D2
0002BA96 <AmiBlitz3.ab3@13867>    BNE.w maineval__notst
0002BA9E <AmiBlitz3.ab3@13878>    CMP.b #2,optistring
0002BAA2 <AmiBlitz3.ab3@13879>    BEQ maineval__skipme_l10
0002BAA8 <AmiBlitz3.ab3@13880>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BAAC <AmiBlitz3.ab3@13881>    BSR.w sbtolong
0002BAB0 <AmiBlitz3.ab3@13882> BRA.w maineval__notst2
0002BAB8 <AmiBlitz3.ab3@13886>     CMP.w #6,regnum
0002BABC <AmiBlitz3.ab3@13887>     BEQ maineval__skipme_l10_l1
0002BAC2 <AmiBlitz3.ab3@13888>     TST.b funcparloop
0002BAC6 <AmiBlitz3.ab3@13889>     BEQ maineval__skipme_l10_l1
0002BACC <AmiBlitz3.ab3@13890>     MOVE.l #$48780000,d1
0002BAD0 <AmiBlitz3.ab3@13891>     BSR writelong
0002BAD4 <AmiBlitz3.ab3@13894> BRA.w maineval__notst2
0002BADA <AmiBlitz3.ab3@13897>   ADDQ.w #2,a2offset
0002BADE <AmiBlitz3.ab3@13898> BRA maineval__skipme
0002BAE6 <AmiBlitz3.ab3@13901>   CMPI.w #$2,sbgot
0002BAEA <AmiBlitz3.ab3@13902>    BCS.w maineval__notst2                                         ;correct stack
0002BAEE <AmiBlitz3.ab3@13903>   MOVE.w ststfix(PC),D1
0002BAF2 <AmiBlitz3.ab3@13904>    BSR.w writeword
0002BAF8 <AmiBlitz3.ab3@13907>   MOVE.w (A7)+,sbgot
0002BAFE <AmiBlitz3.ab3@13908>   MOVE.w stackpar,D1
0002BB02 <AmiBlitz3.ab3@13909>    BPL.w maineval__skip
0002BB06 <AmiBlitz3.ab3@13910>    CMP.b #7,d2
0002BB0A <AmiBlitz3.ab3@13911>    BEQ maineval__notst2_l1
0002BB10 <AmiBlitz3.ab3@13912>   TST.b funcparloop
0002BB14 <AmiBlitz3.ab3@13913>   BEQ maineval__notst2_l1
0002BB18 <AmiBlitz3.ab3@13914>   CMP.b #5,d2
0002BB1C <AmiBlitz3.ab3@13915>   BNE maineval__notst2_skip
0002BB22 <AmiBlitz3.ab3@13916>   TST.b fpu
0002BB26 <AmiBlitz3.ab3@13917>   BEQ maineval__notst2_skip
0002BB2C <AmiBlitz3.ab3@13918>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002BB32 <AmiBlitz3.ab3@13919>   JSR writelong
0002BB36 <AmiBlitz3.ab3@13922>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002BB3C <AmiBlitz3.ab3@13923>   ADD.w parnum,d1
0002BB42 <AmiBlitz3.ab3@13924>   JSR Atokejsr
0002BB48 <AmiBlitz3.ab3@13925>    TST.w dontwrite
0002BB4C <AmiBlitz3.ab3@13926>    BNE maineval__notst2_l1
0002BB52 <AmiBlitz3.ab3@13927>    MOVE.l data1start,d1
0002BB58 <AmiBlitz3.ab3@13928>    MOVE.l destpointer,a4
0002BB5C <AmiBlitz3.ab3@13929>    ADD.l d1,-4(a4)
0002BB62 <AmiBlitz3.ab3@13930>    MOVE.l destpointer,d1
0002BB64 <AmiBlitz3.ab3@13931>    SUBQ.l #4,d1
0002BB6A <AmiBlitz3.ab3@13932>    SUB.l destbufferstart,d1
0002BB6C <AmiBlitz3.ab3@13933>    MOVE.l d2,-(a7)
0002BB6E <AmiBlitz3.ab3@13934>    MOVE.l d1,d2
0002BB74 <AmiBlitz3.ab3@13935>    JSR addhunkoffset
0002BB76 <AmiBlitz3.ab3@13936>    MOVE.l (a7)+,d2
0002BB7A <AmiBlitz3.ab3@13937> BRA maineval__skip
0002BB80 <AmiBlitz3.ab3@13940>   ADDQ.w #2,a2offset
0002BB86 <AmiBlitz3.ab3@13941>   MOVE.w pushd0wd,D1
0002BB8A <AmiBlitz3.ab3@13942>   CMP.w #$3,D2                                             ;write parameter to stack
0002BB8E <AmiBlitz3.ab3@13943>    BCS.w maineval__ok
0002BB94 <AmiBlitz3.ab3@13944>   ADDQ.w #2,a2offset
0002BB9A <AmiBlitz3.ab3@13945>   TST.b fpu
0002BB9E <AmiBlitz3.ab3@13946>   BEQ maineval__notst2_nofpu
0002BBA2 <AmiBlitz3.ab3@13947>   CMP.w #5,d2
0002BBA6 <AmiBlitz3.ab3@13948>   BNE maineval__notst2_nofpu
0002BBA8 <AmiBlitz3.ab3@13949>   MOVEQ #0,d1
0002BBAE <AmiBlitz3.ab3@13950>   MOVE.w regnum,d1
0002BBB0 <AmiBlitz3.ab3@13951>   ASL.l #7,d1
0002BBB6 <AmiBlitz3.ab3@13952>   OR.l #$f2276400,d1
0002BBBA <AmiBlitz3.ab3@13953>   BSR writelong
0002BBBE <AmiBlitz3.ab3@13954> BRA maineval__skip
0002BBC4 <AmiBlitz3.ab3@13957>   MOVE.w pushd0l,D1
0002BBCA <AmiBlitz3.ab3@13960>    OR.w regnum,D1
0002BBCE <AmiBlitz3.ab3@13961>    BSR.w writeword                                         ;nat
0002BBD4 <AmiBlitz3.ab3@13964>   MOVE.w (A7)+,stackpar
0002BBDA <AmiBlitz3.ab3@13965>   MOVE.w (A7)+,thisstuse
0002BBDC <AmiBlitz3.ab3@13966> RTS
0002BBDE <AmiBlitz3.ab3@13969> thisstuse: Ds.w 1
0002BBE0 <AmiBlitz3.ab3@13972> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002BBE2 <AmiBlitz3.ab3@13973> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002BBE6 <AmiBlitz3.ab3@13978>   BSR.w eval4
0002BBF0 <AmiBlitz3.ab3@13979>   SUBI.l #$12,forthsp
0002BBF2 <AmiBlitz3.ab3@13980> RTS
0002BBF4 <AmiBlitz3.ab3@13984>   MOVEQ.l #$01,D1
0002BBF8 <AmiBlitz3.ab3@13986>       MOVEA.l precsp(PC),A1
0002BBFA <AmiBlitz3.ab3@13987>       MOVE.l A0,(A1)+
0002BBFC <AmiBlitz3.ab3@13988>       MOVE.w D1,(A1)+
0002BC02 <AmiBlitz3.ab3@13989>       MOVE.l A1,precsp
0002BC06 <AmiBlitz3.ab3@13990>    BSR.w calcloop
0002BC08 <AmiBlitz3.ab3@13991>   TST.w D1
0002BC0C <AmiBlitz3.ab3@13992>    BNE.w syntaxerr
0002BC12 <AmiBlitz3.ab3@13993>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002BC14 <AmiBlitz3.ab3@13994> RTS
0002BC18 <AmiBlitz3.ab3@13999>   BSR.w JL_0_9C24
0002BC1C <AmiBlitz3.ab3@14002>   MOVEA.l precsp(PC),A1
0002BC1E <AmiBlitz3.ab3@14003>   CMP.w -(A1),D1
0002BC22 <AmiBlitz3.ab3@14004>    BHI.w JL_0_9B0A
0002BC24 <AmiBlitz3.ab3@14005> RTS
0002BC28 <AmiBlitz3.ab3@14010>   MOVEA.l precsp(PC),A1
0002BC2A <AmiBlitz3.ab3@14011>   MOVE.l A0,(A1)+
0002BC2C <AmiBlitz3.ab3@14012>   MOVE.w D1,(A1)+
0002BC32 <AmiBlitz3.ab3@14013>   MOVE.l A1,precsp
0002BC34 <AmiBlitz3.ab3@14014>   MOVE.w D2,-(A7)
0002BC3A <AmiBlitz3.ab3@14015>   ADDQ.w #1,regnum
0002BC3E <AmiBlitz3.ab3@14016>    BSR.w calcloop               ;constant optimizer
0002BC44 <AmiBlitz3.ab3@14017>   SUBQ.w #1,regnum
0002BC46 <AmiBlitz3.ab3@14018>   MOVE.w (A7)+,D3
0002BC4A <AmiBlitz3.ab3@14019>   MOVEM.l D1/A0,-(A7)
0002BC4E <AmiBlitz3.ab3@14020>    BEQ.w JL_0_9B2E
0002BC52 <AmiBlitz3.ab3@14021>    BSR.w JL_0_9770
0002BC56 <AmiBlitz3.ab3@14024>   BSR.w popprec
0002BC5A <AmiBlitz3.ab3@14025>   BSR.w writecode
0002BC5E <AmiBlitz3.ab3@14026>   MOVEA.l forthsp(PC),A0
0002BC62 <AmiBlitz3.ab3@14027>   MOVE.w -$2(A0),D1
0002BC66 <AmiBlitz3.ab3@14028>   OR.w -$14(A0),D1
0002BC6A <AmiBlitz3.ab3@14029>   MOVE.w D1,-$14(A0)
0002BC6E <AmiBlitz3.ab3@14030>    BNE.w JL_0_9C0E
0002BC74 <AmiBlitz3.ab3@14031>   MOVE.w dontwrite,D1
0002BC78 <AmiBlitz3.ab3@14032>    BNE.w JL_0_9C0E
0002BC7C <AmiBlitz3.ab3@14033>    MOVEA.l -$24(A0),A0
0002BDB8 <AmiBlitz3.ab3@14035>  !newcalc
0002BDBC <AmiBlitz3.ab3@14036>    BEQ 'l10
0002BDC0 <AmiBlitz3.ab3@14037>    MOVEA.l forthsp(PC),A0
0002BDC8 <AmiBlitz3.ab3@14038>    MOVE.w -$18(A0),lasta6
0002BDD0 <AmiBlitz3.ab3@14039>    MOVE.l -$1C(A0),lasta6
0002BDD4 <AmiBlitz3.ab3@14040>    MOVEA.l -$24(A0),A0
0002BDDA <AmiBlitz3.ab3@14041>    MOVE.l A0,destpointer
0002BDE0 <AmiBlitz3.ab3@14042>    MOVEA.l _mathffpbase,A6
0002BDE6 <AmiBlitz3.ab3@14043>    MOVEA.l ffplib,A1
0002BDEA <AmiBlitz3.ab3@14044> BRA cont1
0002BDEE <AmiBlitz3.ab3@14047>   MOVE.w #$2000,D1
0002BDF4 <AmiBlitz3.ab3@14048>   OR.w regnum,D1
0002BDF8 <AmiBlitz3.ab3@14049>    BSR.w writeword
0002BDFA <AmiBlitz3.ab3@14050>     MOVEQ #0,d1
0002BE00 <AmiBlitz3.ab3@14051>     MOVE.w regnum,D1
0002BE02 <AmiBlitz3.ab3@14052>     ASL.l #8,d1
0002BE04 <AmiBlitz3.ab3@14053>     ASL.l #2,d1
0002BE0A <AmiBlitz3.ab3@14054>     OR.l #$f2000000,d1
0002BE0E <AmiBlitz3.ab3@14055>     BSR writelong
0002BE12 <AmiBlitz3.ab3@14056>   MOVE.w #$4E75,D1
0002BE16 <AmiBlitz3.ab3@14057>    BSR.w writeword
0002BE1E <AmiBlitz3.ab3@14058>   MOVE.w -$18(A0),lasta6
0002BE26 <AmiBlitz3.ab3@14059>   MOVE.l -$1C(A0),lasta6
0002BE2A <AmiBlitz3.ab3@14060>   MOVEA.l -$24(A0),A0
0002BE30 <AmiBlitz3.ab3@14061>   MOVE.l A0,destpointer
0002BE34 <AmiBlitz3.ab3@14062>   MOVEM.l D2/A5,-(A7)
0002BE3A <AmiBlitz3.ab3@14063>   MOVEA.l _mathffpbase,A6
0002BE40 <AmiBlitz3.ab3@14064>   MOVEA.l ffplib,A1
0002BE44 <AmiBlitz3.ab3@14065>   MOVE.w $A(A1),D0
0002BE4A <AmiBlitz3.ab3@14066>   LEA _mathffpbase,A5
0002BE4C <AmiBlitz3.ab3@14067>   SUBA.w D0,A5
0002BE52 <AmiBlitz3.ab3@14068>   JSR Aclearcache                                          ;neg +
0002BE58 <AmiBlitz3.ab3@14069>   CLR.l load_var_addr
0002BE5E <AmiBlitz3.ab3@14070>   CLR.l imm_addr
0002BE64 <AmiBlitz3.ab3@14071>   TST.w dontwrite
0002BE68 <AmiBlitz3.ab3@14072>   BNE '1
0002BE6A <AmiBlitz3.ab3@14073>   JSR (A0)                                                 ;calc constant inline expression
0002BE6E <AmiBlitz3.ab3@14076>   MOVEM.l (A7)+,D2/A5
0002BE74 <AmiBlitz3.ab3@14079>   MOVE.b d2,isconstantvalue
0002BE7A <AmiBlitz3.ab3@14080>   MOVE.l d0,lastconstantvalue
0002BE80 <AmiBlitz3.ab3@14081>   MOVE.w regnum,D1
0002BE82 <AmiBlitz3.ab3@14082>   LSL.w #8,D1
0002BE84 <AmiBlitz3.ab3@14083>   LSL.w #1,D1
0002BE88 <AmiBlitz3.ab3@14084>   ORI.w #$203C,D1
0002BE8C <AmiBlitz3.ab3@14085>   CMP.w #$3,D2
0002BE90 <AmiBlitz3.ab3@14086>    BCC.w JL_0_9BCE
0002BE94 <AmiBlitz3.ab3@14087>   ORI.w #$1000,D1
0002BE98 <AmiBlitz3.ab3@14088>    BSR.w writeword
0002BE9A <AmiBlitz3.ab3@14089>   MOVE.w D0,D1
0002BE9E <AmiBlitz3.ab3@14090>    BSR.w writeword
0002BEA2 <AmiBlitz3.ab3@14091> BRA.w JL_0_9BD8
0002BEA8 <AmiBlitz3.ab3@14095>   TST.b iee                                                ;fpu constant
0002BEAC <AmiBlitz3.ab3@14096>   BEQ 'l10
0002BEB0 <AmiBlitz3.ab3@14097>   CMP.b #5,d2
0002BEB4 <AmiBlitz3.ab3@14098>   BNE 'l10
0002BEB6 <AmiBlitz3.ab3@14099>   MOVEQ #0,d1
0002BEBC <AmiBlitz3.ab3@14100>   MOVE.w regnum,D1
0002BEBE <AmiBlitz3.ab3@14101>   ASL.l #7,d1
0002BEC4 <AmiBlitz3.ab3@14102>   OR.l #$f23c5400,d1
0002BEC8 <AmiBlitz3.ab3@14103>   BSR writelong
0002BECA <AmiBlitz3.ab3@14104>   SUBQ.l #8,a7
0002BED0 <AmiBlitz3.ab3@14105>   fmove.d fp0,0(a7)
0002BED2 <AmiBlitz3.ab3@14106>   MOVE.l (a7)+,d1
0002BED6 <AmiBlitz3.ab3@14107>   BSR writelong
0002BED8 <AmiBlitz3.ab3@14108>   MOVE.l (a7)+,d1
0002BEDC <AmiBlitz3.ab3@14109>   BSR writelong
0002BEE0 <AmiBlitz3.ab3@14110> BRA JL_0_9BD8
0002BEE4 <AmiBlitz3.ab3@14113>   BSR.w writeword
0002BEE6 <AmiBlitz3.ab3@14114>   MOVE.l D0,D1
0002BEEA <AmiBlitz3.ab3@14115>   BSR.w writelong
0002BEEE <AmiBlitz3.ab3@14118>   MOVEA.l forthsp(PC),A0
0002BEF2 <AmiBlitz3.ab3@14119>   MOVEA.l -$20(A0),A3
0002BEF8 <AmiBlitz3.ab3@14120>   MOVEA.l hunkoffsetbase,A2
0002BEFE <AmiBlitz3.ab3@14121>   MOVE.l A3,hunkoffsetbase
0002BF04 <AmiBlitz3.ab3@14122>   MOVEA.l _execbase,A6
0002BF06 <AmiBlitz3.ab3@14125>   CMPA.l A3,A2
0002BF0A <AmiBlitz3.ab3@14126>   BEQ.w JL_0_9C0A
0002BF10 <AmiBlitz3.ab3@14127>   SUBQ.l #1,hunkoffsetcounter
0002BF12 <AmiBlitz3.ab3@14128>   MOVEA.l A2,A1
0002BF14 <AmiBlitz3.ab3@14129>   MOVEA.l (A2),A2
0002BF16 <AmiBlitz3.ab3@14130>   MOVEQ.l #$8,D0
0002BF1C <AmiBlitz3.ab3@14131>   MOVE.l mempool2,a0
0002BF20 <AmiBlitz3.ab3@14132>    JSR _FreePooled(A6)
0002BF24 <AmiBlitz3.ab3@14133> BRA.w JL_0_9BF0
0002BF28 <AmiBlitz3.ab3@14137>   MOVEA.l forthsp(PC),A0
0002BF2C <AmiBlitz3.ab3@14140>   LEA -$12(A0),A0
0002BF32 <AmiBlitz3.ab3@14141>   MOVE.l A0,forthsp
0002BF36 <AmiBlitz3.ab3@14142>   MOVEM.l (A7)+,D1/A0
0002BF3A <AmiBlitz3.ab3@14143>   BSR.w reget
0002BF3E <AmiBlitz3.ab3@14144> BRA.w JL_0_9AFE
0002BF42 <AmiBlitz3.ab3@14148>   BSR.w JL_0_A386
0002BF44 <AmiBlitz3.ab3@14149>   TST.w d0
0002BF48 <AmiBlitz3.ab3@14150>   BEQ JL_0_9C42
0002BF4C <AmiBlitz3.ab3@14151>   CMP.b #",",d0
0002BF50 <AmiBlitz3.ab3@14152>   BEQ JL_0_9C42
0002BF54 <AmiBlitz3.ab3@14153>   CMP.b #"@",d0                                            ;expandline @@
0002BF58 <AmiBlitz3.ab3@14154>   BEQ JL_0_9C42
0002BF5E <AmiBlitz3.ab3@14155>   LEA operators,A0
0002BF60 <AmiBlitz3.ab3@14158>    TST.w (A0)
0002BF64 <AmiBlitz3.ab3@14159>    BEQ.w JL_0_9C42
0002BF66 <AmiBlitz3.ab3@14160>   CMP.w (A0),D0
0002BF6A <AmiBlitz3.ab3@14161>    BEQ.w JL_0_9C46a
0002BF6E <AmiBlitz3.ab3@14162>   LEA $20(A0),A0
0002BF72 <AmiBlitz3.ab3@14163> BRA.w JL_0_9C2E
0002BF74 <AmiBlitz3.ab3@14167>   MOVEQ.l #$00,D1
0002BF76 <AmiBlitz3.ab3@14168> RTS
0002BF7A <AmiBlitz3.ab3@14172>   CMP.w #$3C,D0
0002BF7E <AmiBlitz3.ab3@14173>    BNE.w JL_0_9C70
0002BF82 <AmiBlitz3.ab3@14174>    BSR.w get1bytemain
0002BF86 <AmiBlitz3.ab3@14175>   CMP.w #$3D,D0
0002BF8A <AmiBlitz3.ab3@14176>    BNE.w JL_0_9C64
0002BF90 <AmiBlitz3.ab3@14177>   LEA ople,A0
0002BF94 <AmiBlitz3.ab3@14178> BRA.w JL_0_9CCA
0002BF98 <AmiBlitz3.ab3@14182>   CMP.w #$3E,D0
0002BF9C <AmiBlitz3.ab3@14183>    BNE.w JL_0_9C96
0002BFA0 <AmiBlitz3.ab3@14184> BRA.w JL_0_9CC4
0002BFA4 <AmiBlitz3.ab3@14188>   CMP.w #$3E,D0
0002BFA8 <AmiBlitz3.ab3@14189>    BNE.w JL_0_9C9E
0002BFAC <AmiBlitz3.ab3@14190>    BSR.w get1bytemain
0002BFB0 <AmiBlitz3.ab3@14191>   CMP.w #$3D,D0
0002BFB4 <AmiBlitz3.ab3@14192>    BNE.w JL_0_9C8E
0002BFBA <AmiBlitz3.ab3@14193>   LEA opge,A0
0002BFBE <AmiBlitz3.ab3@14194> BRA.w JL_0_9CCA
0002BFC2 <AmiBlitz3.ab3@14198>   CMP.w #$3C,D0
0002BFC6 <AmiBlitz3.ab3@14199>    BEQ.w JL_0_9CC4
0002BFD0 <AmiBlitz3.ab3@14203>     MOVE.w oldqflag,instringon
0002BFD6 <AmiBlitz3.ab3@14204>     MOVEA.l lastsourcepos,A5
0002BFDA <AmiBlitz3.ab3@14205> BRA.w JL_0_9CCA
0002BFDE <AmiBlitz3.ab3@14209>   CMP.w #$3D,D0
0002BFE2 <AmiBlitz3.ab3@14210>    BNE.w JL_0_9CCA
0002BFE6 <AmiBlitz3.ab3@14211>    BSR.w get1bytemain
0002BFEA <AmiBlitz3.ab3@14212>   CMP.w #$3E,D0
0002BFEE <AmiBlitz3.ab3@14213>    BNE.w JL_0_9CBC
0002BFF4 <AmiBlitz3.ab3@14214>   LEA opge,A0
0002BFF8 <AmiBlitz3.ab3@14215> BRA.w JL_0_9CCA
0002BFFC <AmiBlitz3.ab3@14219>   CMP.w #$3C,D0
0002C000 <AmiBlitz3.ab3@14220>   BNE.w JL_0_9C96
0002C006 <AmiBlitz3.ab3@14223>   LEA opne,A0
0002C00A <AmiBlitz3.ab3@14226>   MOVE.w $1E(A0),D1
0002C00C <AmiBlitz3.ab3@14227> RTS
0002C00E <AmiBlitz3.ab3@14234>   MOVE.w d2,d1
0002C010 <AmiBlitz3.ab3@14235>   SUBQ.w #1,D1
0002C014 <AmiBlitz3.ab3@14236>    BMI.w illoperr
0002C016 <AmiBlitz3.ab3@14237>   LSL.w #2,D1
0002C01A <AmiBlitz3.ab3@14238>   MOVE.l $2(A0,D1.W),D1
0002C01E <AmiBlitz3.ab3@14239>    BEQ.w illoperr
0002C020 <AmiBlitz3.ab3@14240>   MOVEA.l D1,A0
0002C022 <AmiBlitz3.ab3@14243> JMP (A0)
0002C026 <AmiBlitz3.ab3@14259>   MOVEA.l precsp(PC),A1
0002C02C <AmiBlitz3.ab3@14260>   CMPA.l #precstackf,A1
0002C030 <AmiBlitz3.ab3@14261>    BCC.w pserr
0002C032 <AmiBlitz3.ab3@14262>   MOVE.w -(A1),D1
0002C034 <AmiBlitz3.ab3@14263>   MOVEA.l -(A1),A0
0002C03A <AmiBlitz3.ab3@14264>   MOVE.l A1,precsp
0002C03C <AmiBlitz3.ab3@14265> RTS
0002C040 <AmiBlitz3.ab3@14268> precsp:      Dc.l precstack
0002C13C <AmiBlitz3.ab3@14269> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C1C0 <AmiBlitz3.ab3@14270>              Ds.l 33
0002C1C2 <AmiBlitz3.ab3@14276> mseq:  SEQ D0
0002C1C4 <AmiBlitz3.ab3@14277> msne:    SNE D0
0002C1C6 <AmiBlitz3.ab3@14278> mslt:    SLT D0
0002C1C8 <AmiBlitz3.ab3@14279> msle:    SLE D0
0002C1CA <AmiBlitz3.ab3@14280> msgt:    SGT D0
0002C1CC <AmiBlitz3.ab3@14281> msge:    SGE D0
0002C1CE <AmiBlitz3.ab3@14283> cmp0:    CMP.b D0,D0
0002C1D0 <AmiBlitz3.ab3@14284> cmp1:    CMP.w D0,D0
0002C1D2 <AmiBlitz3.ab3@14285> cmp2:    CMP.l D0,D0
0002C1D6 <AmiBlitz3.ab3@14289>   MOVE.w cmp0(PC),D1
0002C1DA <AmiBlitz3.ab3@14290> BRA.w doeqcmp2                                            ;writecompare
0002C1DE <AmiBlitz3.ab3@14294>   MOVE.w cmp0(PC),D1
0002C1E2 <AmiBlitz3.ab3@14295> BRA.w donecmp2
0002C1E6 <AmiBlitz3.ab3@14299>   MOVE.w cmp0(PC),D1
0002C1EA <AmiBlitz3.ab3@14300> BRA.w doltcmp2
0002C1EE <AmiBlitz3.ab3@14304>   MOVE.w cmp0(PC),D1
0002C1F2 <AmiBlitz3.ab3@14305> BRA.w dolecmp2
0002C1F6 <AmiBlitz3.ab3@14309>   MOVE.w cmp0(PC),D1
0002C1FA <AmiBlitz3.ab3@14310> BRA.w dogtcmp2
0002C1FE <AmiBlitz3.ab3@14315>   MOVE.w cmp0(PC),D1
0002C202 <AmiBlitz3.ab3@14316> BRA.w dogecmp2
0002C206 <AmiBlitz3.ab3@14320>   MOVE.w cmp1(PC),D1
0002C20A <AmiBlitz3.ab3@14321> BRA.w doeqcmp2
0002C20E <AmiBlitz3.ab3@14325>   MOVE.w cmp1(PC),D1
0002C212 <AmiBlitz3.ab3@14326> BRA.w donecmp2
0002C216 <AmiBlitz3.ab3@14330>   MOVE.w cmp1(PC),D1
0002C21A <AmiBlitz3.ab3@14331> BRA.w doltcmp2
0002C21E <AmiBlitz3.ab3@14335>   MOVE.w cmp1(PC),D1
0002C222 <AmiBlitz3.ab3@14336> BRA.w dolecmp2
0002C226 <AmiBlitz3.ab3@14340>   MOVE.w cmp1(PC),D1
0002C22A <AmiBlitz3.ab3@14341> BRA.w dogtcmp2
0002C22E <AmiBlitz3.ab3@14346>   MOVE.w cmp1(PC),D1
0002C232 <AmiBlitz3.ab3@14347> BRA.w dogecmp2
0002C236 <AmiBlitz3.ab3@14351>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C23A <AmiBlitz3.ab3@14352> BRA doeqcmp2
0002C23E <AmiBlitz3.ab3@14355>   MOVE.w cmp2(PC),D1
0002C242 <AmiBlitz3.ab3@14356> BRA donecmp2
0002C246 <AmiBlitz3.ab3@14360>   MOVE.w cmp2(PC),D1
0002C24A <AmiBlitz3.ab3@14361> BRA.w doltcmp2
0002C24E <AmiBlitz3.ab3@14365>   MOVE.w cmp2(PC),D1
0002C252 <AmiBlitz3.ab3@14366> BRA.w dolecmp2
0002C256 <AmiBlitz3.ab3@14370>   MOVE.w cmp2(PC),D1
0002C25A <AmiBlitz3.ab3@14371> BRA.w dogtcmp2
0002C25E <AmiBlitz3.ab3@14375>   MOVE.w cmp2(PC),D1
0002C262 <AmiBlitz3.ab3@14376> BRA.w dogecmp2
0002C264 <AmiBlitz3.ab3@14379> cfregat:  Ds.w 1
0002C26A <AmiBlitz3.ab3@14383>   MOVE.w D1,libjsr+2
0002C26E <AmiBlitz3.ab3@14384>    BSR.w JL_0_AD40
0002C270 <AmiBlitz3.ab3@14385>   MOVE.l D4,D1
0002C274 <AmiBlitz3.ab3@14386>    BSR.w JL_0_AD38
0002C278 <AmiBlitz3.ab3@14387>   MOVE.w #$C900,D1
0002C27C <AmiBlitz3.ab3@14388>    BSR.w Atokejsr
0002C280 <AmiBlitz3.ab3@14389>    BSR.w JL_0_A352
0002C286 <AmiBlitz3.ab3@14390>   MOVE.l libjsr,D1
0002C28A <AmiBlitz3.ab3@14391>    BSR.w writelong
0002C294 <AmiBlitz3.ab3@14392>   MOVE.w regnum,cfregat
0002C29A <AmiBlitz3.ab3@14393>   CLR.w regnum
0002C29C <AmiBlitz3.ab3@14394> RTS
0002C2A6 <AmiBlitz3.ab3@14398>   MOVE.w cfregat,regnum
0002C2AA <AmiBlitz3.ab3@14399>    BSR.w JL_0_A36E
0002C2AC <AmiBlitz3.ab3@14400>   MOVE.l D5,D1
0002C2B0 <AmiBlitz3.ab3@14401> BRA.w JL_0_AD38
0002C2B2 <AmiBlitz3.ab3@14405>    MOVEQ.l #-$2A,D1
0002C2B8 <AmiBlitz3.ab3@14406>    TST.b fpu
0002C2BC <AmiBlitz3.ab3@14407>    BEQ do_equal_float__nofpu
0002C2BE <AmiBlitz3.ab3@14408>    MOVEQ #0,d1
0002C2C4 <AmiBlitz3.ab3@14409>    MOVE.w regnum,d1
0002C2C6 <AmiBlitz3.ab3@14410>    MOVE.l d1,d2
0002C2C8 <AmiBlitz3.ab3@14411>    ASL.l #7,d1
0002C2CA <AmiBlitz3.ab3@14412>    ADDQ  #1,d2
0002C2CC <AmiBlitz3.ab3@14413>    ASL.l #8,d2
0002C2CE <AmiBlitz3.ab3@14414>    ASL.l #2,d2
0002C2D0 <AmiBlitz3.ab3@14415>    OR.l d2,d1
0002C2D6 <AmiBlitz3.ab3@14416>    OR.l #$f2000038,d1
0002C2DC <AmiBlitz3.ab3@14417>    JSR writelong
0002C2E0 <AmiBlitz3.ab3@14418>    MOVE.w #$f240,d1
0002C2E6 <AmiBlitz3.ab3@14419>    OR.w regnum,d1
0002C2EA <AmiBlitz3.ab3@14420>    BSR writeword
0002C2EC <AmiBlitz3.ab3@14421>    MOVEQ.l #1,d2
0002C2F0 <AmiBlitz3.ab3@14422>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C2F4 <AmiBlitz3.ab3@14423>    BSR writeword
0002C2F6 <AmiBlitz3.ab3@14424> RTS
0002C2FA <AmiBlitz3.ab3@14427>    BSR.w docflib
0002C2FE <AmiBlitz3.ab3@14428>    BSR.w doeqcmp
0002C302 <AmiBlitz3.ab3@14429> BRA.w docflib2
0002C304 <AmiBlitz3.ab3@14433>   MOVEQ.l #-$2A,D1
0002C30A <AmiBlitz3.ab3@14434>   TST.b fpu
0002C30E <AmiBlitz3.ab3@14435>    BEQ do_not_equal_float__nofpu
0002C310 <AmiBlitz3.ab3@14436>    MOVEQ #0,d1
0002C316 <AmiBlitz3.ab3@14437>    MOVE.w regnum,d1
0002C318 <AmiBlitz3.ab3@14438>    MOVE.l d1,d2
0002C31A <AmiBlitz3.ab3@14439>    ASL.l #7,d1
0002C31C <AmiBlitz3.ab3@14440>    ADDQ  #1,d2
0002C31E <AmiBlitz3.ab3@14441>    ASL.l #8,d2
0002C320 <AmiBlitz3.ab3@14442>    ASL.l #2,d2
0002C322 <AmiBlitz3.ab3@14443>    OR.l d2,d1
0002C328 <AmiBlitz3.ab3@14444>    OR.l #$f2000038,d1
0002C32E <AmiBlitz3.ab3@14445>    JSR writelong
0002C332 <AmiBlitz3.ab3@14446>    MOVE.w #$f240,d1
0002C338 <AmiBlitz3.ab3@14447>    OR.w regnum,d1
0002C33C <AmiBlitz3.ab3@14448>    BSR writeword
0002C342 <AmiBlitz3.ab3@14449>    MOVE.l #1,d2
0002C346 <AmiBlitz3.ab3@14450>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C34A <AmiBlitz3.ab3@14451>    BSR writeword
0002C34C <AmiBlitz3.ab3@14452> RTS
0002C350 <AmiBlitz3.ab3@14455>    BSR.w docflib
0002C354 <AmiBlitz3.ab3@14456>    BSR.w donecmp
0002C358 <AmiBlitz3.ab3@14457> BRA.w docflib2
0002C35A <AmiBlitz3.ab3@14461>   MOVEQ.l #-$2A,D1
0002C360 <AmiBlitz3.ab3@14462>     TST.b fpu
0002C364 <AmiBlitz3.ab3@14463>    BEQ do_littler_float__nofpu
0002C366 <AmiBlitz3.ab3@14464>    MOVEQ #0,d1
0002C36C <AmiBlitz3.ab3@14465>    MOVE.w regnum,d1
0002C36E <AmiBlitz3.ab3@14466>    MOVE.l d1,d2
0002C370 <AmiBlitz3.ab3@14467>    ASL.l #7,d1
0002C372 <AmiBlitz3.ab3@14468>    ADDQ  #1,d2
0002C374 <AmiBlitz3.ab3@14469>    ASL.l #8,d2
0002C376 <AmiBlitz3.ab3@14470>    ASL.l #2,d2
0002C378 <AmiBlitz3.ab3@14471>    OR.l d2,d1
0002C37E <AmiBlitz3.ab3@14472>    OR.l #$f2000038,d1
0002C384 <AmiBlitz3.ab3@14473>    JSR writelong
0002C388 <AmiBlitz3.ab3@14474>    MOVE.w #$f240,d1
0002C38E <AmiBlitz3.ab3@14475>    OR.w regnum,d1
0002C392 <AmiBlitz3.ab3@14476>    BSR writeword
0002C398 <AmiBlitz3.ab3@14477>    MOVE.l #$1,d2
0002C39C <AmiBlitz3.ab3@14478>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C3A0 <AmiBlitz3.ab3@14479>    BSR writeword
0002C3A2 <AmiBlitz3.ab3@14480> RTS
0002C3A6 <AmiBlitz3.ab3@14483>    BSR.w docflib
0002C3AA <AmiBlitz3.ab3@14484>    BSR.w doltcmp
0002C3AE <AmiBlitz3.ab3@14485> BRA.w docflib2
0002C3B0 <AmiBlitz3.ab3@14489>   MOVEQ.l #-$2A,D1
0002C3B6 <AmiBlitz3.ab3@14490>   TST.b fpu
0002C3BA <AmiBlitz3.ab3@14491>    BEQ do_littler_equal_float__nofpu
0002C3BC <AmiBlitz3.ab3@14492>    MOVEQ #0,d1
0002C3C2 <AmiBlitz3.ab3@14493>    MOVE.w regnum,d1
0002C3C4 <AmiBlitz3.ab3@14494>    MOVE.l d1,d2
0002C3C6 <AmiBlitz3.ab3@14495>    ASL.l #7,d1
0002C3C8 <AmiBlitz3.ab3@14496>    ADDQ  #1,d2
0002C3CA <AmiBlitz3.ab3@14497>    ASL.l #8,d2
0002C3CC <AmiBlitz3.ab3@14498>    ASL.l #2,d2
0002C3CE <AmiBlitz3.ab3@14499>    OR.l d2,d1
0002C3D4 <AmiBlitz3.ab3@14500>    OR.l #$f2000038,d1
0002C3DA <AmiBlitz3.ab3@14501>    JSR writelong
0002C3DE <AmiBlitz3.ab3@14502>    MOVE.w #$f240,d1
0002C3E4 <AmiBlitz3.ab3@14503>    OR.w regnum,d1
0002C3E8 <AmiBlitz3.ab3@14504>    BSR writeword
0002C3EE <AmiBlitz3.ab3@14505>    MOVE.l #1,d2
0002C3F2 <AmiBlitz3.ab3@14506>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C3F6 <AmiBlitz3.ab3@14507>    BSR writeword
0002C3F8 <AmiBlitz3.ab3@14508> RTS
0002C3FC <AmiBlitz3.ab3@14511>    BSR.w docflib
0002C400 <AmiBlitz3.ab3@14512>    BSR.w dolecmp
0002C404 <AmiBlitz3.ab3@14513> BRA.w docflib2
0002C406 <AmiBlitz3.ab3@14517>   MOVEQ.l #-$2A,D1
0002C40C <AmiBlitz3.ab3@14518>    TST.b fpu
0002C410 <AmiBlitz3.ab3@14519>    BEQ do_greater_float__nofpu
0002C412 <AmiBlitz3.ab3@14520>     MOVEQ #0,d1
0002C418 <AmiBlitz3.ab3@14521>    MOVE.w regnum,d1
0002C41A <AmiBlitz3.ab3@14522>    MOVE.l d1,d2
0002C41C <AmiBlitz3.ab3@14523>    ASL.l #7,d1
0002C41E <AmiBlitz3.ab3@14524>    ADDQ  #1,d2
0002C420 <AmiBlitz3.ab3@14525>    ASL.l #8,d2
0002C422 <AmiBlitz3.ab3@14526>    ASL.l #2,d2
0002C424 <AmiBlitz3.ab3@14527>    OR.l d2,d1
0002C42A <AmiBlitz3.ab3@14528>    OR.l #$f2000038,d1
0002C430 <AmiBlitz3.ab3@14529>    JSR writelong
0002C434 <AmiBlitz3.ab3@14530>    MOVE.w #$f240,d1
0002C43A <AmiBlitz3.ab3@14531>    OR.w regnum,d1
0002C43E <AmiBlitz3.ab3@14532>    BSR writeword
0002C444 <AmiBlitz3.ab3@14533>    MOVE.l #1,d2
0002C448 <AmiBlitz3.ab3@14534>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C44C <AmiBlitz3.ab3@14535>    BSR writeword
0002C44E <AmiBlitz3.ab3@14536> RTS
0002C452 <AmiBlitz3.ab3@14539>    BSR.w docflib
0002C456 <AmiBlitz3.ab3@14540>    BSR.w dogtcmp
0002C45A <AmiBlitz3.ab3@14541> BRA.w docflib2
0002C45C <AmiBlitz3.ab3@14545>   MOVEQ.l #-$2A,D1
0002C462 <AmiBlitz3.ab3@14546>  TST.b fpu
0002C466 <AmiBlitz3.ab3@14547>    BEQ do_greater_equal_float__nofpu
0002C468 <AmiBlitz3.ab3@14548>    MOVEQ #0,d1
0002C46E <AmiBlitz3.ab3@14549>    MOVE.w regnum,d1
0002C470 <AmiBlitz3.ab3@14550>    MOVE.l d1,d2
0002C472 <AmiBlitz3.ab3@14551>    ASL.l #7,d1
0002C474 <AmiBlitz3.ab3@14552>    ADDQ  #1,d2
0002C476 <AmiBlitz3.ab3@14553>    ASL.l #8,d2
0002C478 <AmiBlitz3.ab3@14554>    ASL.l #2,d2
0002C47A <AmiBlitz3.ab3@14555>    OR.l d2,d1
0002C480 <AmiBlitz3.ab3@14556>    OR.l #$f2000038,d1
0002C486 <AmiBlitz3.ab3@14557>    JSR writelong
0002C48A <AmiBlitz3.ab3@14558>    MOVE.w #$f240,d1
0002C490 <AmiBlitz3.ab3@14559>    OR.w regnum,d1
0002C494 <AmiBlitz3.ab3@14560>    BSR writeword
0002C49A <AmiBlitz3.ab3@14561>    MOVE.l #1,d2
0002C49E <AmiBlitz3.ab3@14562>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C4A2 <AmiBlitz3.ab3@14563>    BSR writeword
0002C4A4 <AmiBlitz3.ab3@14564> RTS
0002C4A8 <AmiBlitz3.ab3@14567>    BSR.w docflib
0002C4AC <AmiBlitz3.ab3@14568>    BSR.w dogecmp
0002C4B0 <AmiBlitz3.ab3@14569> BRA.w docflib2
0002C4B6 <AmiBlitz3.ab3@14574>   MOVE.l #$CE00,D1
0002C4BC <AmiBlitz3.ab3@14575>    MOVE.l d1,lastinstruction
0002C4C0 <AmiBlitz3.ab3@14576>    BSR.w Atokejsr
0002C4C4 <AmiBlitz3.ab3@14577> BRA.w doeqcmp
0002C4CA <AmiBlitz3.ab3@14581>   MOVE.l #$CE00,D1
0002C4D0 <AmiBlitz3.ab3@14582>    MOVE.l d1,lastinstruction
0002C4D4 <AmiBlitz3.ab3@14583>    BSR.w Atokejsr
0002C4D8 <AmiBlitz3.ab3@14584> BRA.w donecmp
0002C4DE <AmiBlitz3.ab3@14588>   MOVE.l #$CE00,D1
0002C4E4 <AmiBlitz3.ab3@14589>    MOVE.l d1,lastinstruction
0002C4E8 <AmiBlitz3.ab3@14590>    BSR.w Atokejsr
0002C4EC <AmiBlitz3.ab3@14591> BRA.w doltcmp
0002C4F2 <AmiBlitz3.ab3@14595>   MOVE.l #$CE00,D1
0002C4F8 <AmiBlitz3.ab3@14596>    MOVE.l d1,lastinstruction
0002C4FC <AmiBlitz3.ab3@14597>    BSR.w Atokejsr
0002C500 <AmiBlitz3.ab3@14598> BRA.w dolecmp
0002C506 <AmiBlitz3.ab3@14602>   MOVE.l #$CE00,D1
0002C50C <AmiBlitz3.ab3@14603>    MOVE.l d1,lastinstruction
0002C510 <AmiBlitz3.ab3@14604>    BSR.w Atokejsr
0002C514 <AmiBlitz3.ab3@14605> BRA.w dogtcmp
0002C51A <AmiBlitz3.ab3@14609>   MOVE.l #$CE00,D1
0002C520 <AmiBlitz3.ab3@14610>    MOVE.l d1,lastinstruction
0002C524 <AmiBlitz3.ab3@14611>    BSR.w Atokejsr
0002C528 <AmiBlitz3.ab3@14612> BRA.w dogecmp
0002C52E <AmiBlitz3.ab3@14617>   TST.b fast                                               ;compare
0002C532 <AmiBlitz3.ab3@14618>   BEQ cmpit__org
0002C538 <AmiBlitz3.ab3@14622>   MOVE.l destpointer,a0
0002C53E <AmiBlitz3.ab3@14623>   SUB.l imm_addr,a0
0002C544 <AmiBlitz3.ab3@14624>   CMP.l #6,a0
0002C548 <AmiBlitz3.ab3@14625>   BNE cmpit__l11
0002C54E <AmiBlitz3.ab3@14626>   MOVE.l imm_addr,a0
0002C556 <AmiBlitz3.ab3@14627>   CMP.w #$223c,imm_addr
0002C55A <AmiBlitz3.ab3@14628>   BNE cmpit__org
0002C560 <AmiBlitz3.ab3@14629>   ADD.w #$8e80,-6(a4)
0002C566 <AmiBlitz3.ab3@14632>   CLR.l imm_addr
0002C568 <AmiBlitz3.ab3@14633> RTS
0002C56E <AmiBlitz3.ab3@14636>   CMP.l #4,a0
0002C572 <AmiBlitz3.ab3@14637>   BNE cmpit__l10
0002C576 <AmiBlitz3.ab3@14638>   CMP.b #2,d3
0002C57A <AmiBlitz3.ab3@14639>   BNE cmpit__l11b
0002C580 <AmiBlitz3.ab3@14640>   ADD.w #$7e40,-4(a4)
0002C582 <AmiBlitz3.ab3@14641> RTS
0002C588 <AmiBlitz3.ab3@14644>  ADD.w #$7e00,-4(a4)
0002C58A <AmiBlitz3.ab3@14645> RTS
0002C590 <AmiBlitz3.ab3@14648>    MOVE.l destpointer,a0
0002C596 <AmiBlitz3.ab3@14649>    SUB.l load_var_addr,a0
0002C59A <AmiBlitz3.ab3@14650>    CMP.w #4,a0
0002C59E <AmiBlitz3.ab3@14651>    BNE cmpit__org
0002C5A2 <AmiBlitz3.ab3@14652>    CMP.b #3,d3
0002C5A6 <AmiBlitz3.ab3@14653>    BCS cmpit__lv1
0002C5AC <AmiBlitz3.ab3@14654>    CLR.l load_var_addr
0002C5B2 <AmiBlitz3.ab3@14655>    ADD.w #$9080-$200,-4(a4)
0002C5B4 <AmiBlitz3.ab3@14656> RTS
0002C5B8 <AmiBlitz3.ab3@14659>   CMP.b #2,d3
0002C5BC <AmiBlitz3.ab3@14660>    BNE cmpit__org
0002C5C2 <AmiBlitz3.ab3@14661>    CLR.l load_var_addr
0002C5C8 <AmiBlitz3.ab3@14662>    ADD.w #$8040-$200,-4(a4)
0002C5CA <AmiBlitz3.ab3@14663> RTS
0002C5D0 <AmiBlitz3.ab3@14666>   MOVE.w regnum,D3
0002C5D2 <AmiBlitz3.ab3@14667>   OR.w D3,D1
0002C5D4 <AmiBlitz3.ab3@14668>   LSL.w #8,D3
0002C5D6 <AmiBlitz3.ab3@14669>   LSL.w #1,D3
0002C5D8 <AmiBlitz3.ab3@14670>   OR.w D3,D1
0002C5DA <AmiBlitz3.ab3@14671>   ADDQ.w #1,D1
0002C5DE <AmiBlitz3.ab3@14672> BRA.w writeword
0002C5E2 <AmiBlitz3.ab3@14676>    BSR.w cmpit
0002C5E6 <AmiBlitz3.ab3@14679>    MOVE.w mseq(PC),D1
0002C5EA <AmiBlitz3.ab3@14680> BRA.w cpoke
0002C5EE <AmiBlitz3.ab3@14684>   BSR.w cmpit
0002C5F2 <AmiBlitz3.ab3@14687>   MOVE.w msne(PC),D1
0002C5F6 <AmiBlitz3.ab3@14688> BRA.w cpoke
0002C5FA <AmiBlitz3.ab3@14692>   BSR.w cmpit
0002C5FE <AmiBlitz3.ab3@14695>    MOVE.w mslt(PC),D1
0002C602 <AmiBlitz3.ab3@14696> BRA.w cpoke
0002C606 <AmiBlitz3.ab3@14700>    BSR.w cmpit
0002C60A <AmiBlitz3.ab3@14703>    MOVE.w msle(PC),D1
0002C60E <AmiBlitz3.ab3@14704> BRA.w cpoke
0002C612 <AmiBlitz3.ab3@14708>    BSR.w cmpit
0002C616 <AmiBlitz3.ab3@14711>    MOVE.w msgt(PC),D1
0002C61A <AmiBlitz3.ab3@14712> BRA.w cpoke
0002C61E <AmiBlitz3.ab3@14716>   BSR.w cmpit
0002C622 <AmiBlitz3.ab3@14719>    MOVE.w msge(PC),D1
0002C628 <AmiBlitz3.ab3@14722>    OR.w regnum,D1
0002C62C <AmiBlitz3.ab3@14723>    CMP.w #5,d2
0002C630 <AmiBlitz3.ab3@14724>    BNE cpoke__nod0
0002C634 <AmiBlitz3.ab3@14725>    CMP.w #5,d3
0002C638 <AmiBlitz3.ab3@14726>    BNE cpoke__nod0
0002C63A <AmiBlitz3.ab3@14727>    MOVE.l d1,-(a7)
0002C640 <AmiBlitz3.ab3@14728>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002C644 <AmiBlitz3.ab3@14729>    BSR writelong
0002C646 <AmiBlitz3.ab3@14730>    MOVE.l (a7)+,d1
0002C64A <AmiBlitz3.ab3@14733>    BSR.w writeword                                         ;writeseq
0002C64C <AmiBlitz3.ab3@14734>    MOVEQ.l #1,d2
0002C652 <AmiBlitz3.ab3@14735>    MOVE.l lasttoken,d1
0002C658 <AmiBlitz3.ab3@14736>     TST.b fast
0002C65C <AmiBlitz3.ab3@14737>     BEQ.s cpoke__l11
0002C662 <AmiBlitz3.ab3@14738>    CMP.l #$800b,d1
0002C666 <AmiBlitz3.ab3@14739>    BEQ cpoke__l10
0002C66A <AmiBlitz3.ab3@14742>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002C670 <AmiBlitz3.ab3@14743>   OR.w regnum,D1
0002C674 <AmiBlitz3.ab3@14744>    BSR.w writeword                                         ;writeext.w
0002C676 <AmiBlitz3.ab3@14745>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002C678 <AmiBlitz3.ab3@14748> RTS
0002C67C <AmiBlitz3.ab3@14753>   MOVE.w #$D040,D1
0002C67E <AmiBlitz3.ab3@14754>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002C682 <AmiBlitz3.ab3@14755> BRA.w doplus2
0002C686 <AmiBlitz3.ab3@14759>   MOVE.w #$D040,D1
0002C688 <AmiBlitz3.ab3@14760>   MOVEQ.l #$03,D2                                          ;now a long
0002C68C <AmiBlitz3.ab3@14761>    BSR.w doplus2
0002C690 <AmiBlitz3.ab3@14762> BRA.w convert_word_to_long
0002C694 <AmiBlitz3.ab3@14766>   MOVE.w #$D080,D1                                         ;writeaddlong
0002C696 <AmiBlitz3.ab3@14769>   MOVE.w d1,a1
0002C69C <AmiBlitz3.ab3@14770>   TST.b fast
0002C6A0 <AmiBlitz3.ab3@14771>   BEQ doplus2__l10
0002C6A2 <AmiBlitz3.ab3@14775>   ASR.w #8,d1
0002C6A6 <AmiBlitz3.ab3@14776>   CMP.b #$90,d1
0002C6AA <AmiBlitz3.ab3@14777>   BEQ doplus2__sub1
0002C6AE <AmiBlitz3.ab3@14778>   CMP.b #$d0,d1
0002C6B2 <AmiBlitz3.ab3@14779>   BNE doplus2__l10
0002C6B6 <AmiBlitz3.ab3@14780>   CMP.b #3,d3
0002C6BA <AmiBlitz3.ab3@14781>   BCS doplus2__lq10
0002C6C0 <AmiBlitz3.ab3@14782>   TST.b quickadd
0002C6C6 <AmiBlitz3.ab3@14786>    MOVE.l destpointer,a0
0002C6CC <AmiBlitz3.ab3@14787>    CLR.b quickadd
0002C6D2 <AmiBlitz3.ab3@14788>    CLR.l load_var_addr
0002C6D8 <AmiBlitz3.ab3@14789>    SUB.l imm_addr,a0
0002C6DC <AmiBlitz3.ab3@14790>    CMP.w #6,a0
0002C6E0 <AmiBlitz3.ab3@14791>    BEQ doplus2__li10
0002C6E4 <AmiBlitz3.ab3@14792>    CMP.w #4,a0
0002C6E8 <AmiBlitz3.ab3@14793>    BNE.s doplus2__li1
0002C6EE <AmiBlitz3.ab3@14794>    CLR.l imm_addr
0002C6F4 <AmiBlitz3.ab3@14795>    ADD.w #$a040-$200,-4(a4)
0002C6F6 <AmiBlitz3.ab3@14796> RTS
0002C6F8 <AmiBlitz3.ab3@14799>    MOVE.l a4,a0
0002C6FE <AmiBlitz3.ab3@14800>    SUB.l load_var_addr,a0
0002C704 <AmiBlitz3.ab3@14801>    CMP.l #$a,a0
0002C708 <AmiBlitz3.ab3@14802>    BNE doplus2__l10e
0002C70E <AmiBlitz3.ab3@14803>    CLR.l load_var_addr
0002C712 <AmiBlitz3.ab3@14804>    MOVE.w -$8(a4),d1
0002C718 <AmiBlitz3.ab3@14805>    MOVE.l -$4(a4),-$8(a4)
0002C71C <AmiBlitz3.ab3@14806>    MOVE.w d1,-$4(a4)
0002C722 <AmiBlitz3.ab3@14807>    SUB.w #$1980,-$a(a4)
0002C728 <AmiBlitz3.ab3@14808>    SUBQ.l #2,destpointer
0002C72A <AmiBlitz3.ab3@14809> RTS
0002C730 <AmiBlitz3.ab3@14812>   CLR.b quickadd
0002C734 <AmiBlitz3.ab3@14813> BRA doplus2__l10
0002C73A <AmiBlitz3.ab3@14816>    CLR.l imm_addr
0002C73E <AmiBlitz3.ab3@14817>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002C742 <AmiBlitz3.ab3@14818>    BNE doplus2__doit
0002C748 <AmiBlitz3.ab3@14819>    SUBQ.l #6,destpointer
0002C74A <AmiBlitz3.ab3@14820> RTS
0002C750 <AmiBlitz3.ab3@14823>    ADD.w #$b080-$200,-6(a4)
0002C752 <AmiBlitz3.ab3@14824> RTS
0002C758 <AmiBlitz3.ab3@14827>    MOVE.l destpointer,a0
0002C75E <AmiBlitz3.ab3@14828>    SUB.l load_var_addr,a0
0002C762 <AmiBlitz3.ab3@14829>    CMP.w #4,a0
0002C766 <AmiBlitz3.ab3@14830>    BNE doplus2__l10
0002C76A <AmiBlitz3.ab3@14831>    CMP.b #3,d3
0002C76E <AmiBlitz3.ab3@14832>    BNE doplus2__lv1
0002C774 <AmiBlitz3.ab3@14833>    CLR.l load_var_addr
0002C77A <AmiBlitz3.ab3@14834>    ADD.w #$b080-$200,-4(a4)
0002C77C <AmiBlitz3.ab3@14835> RTS
0002C780 <AmiBlitz3.ab3@14838>   CMP.b #2,d3
0002C784 <AmiBlitz3.ab3@14839>   BNE doplus2__l10
0002C78A <AmiBlitz3.ab3@14840>   CLR.l load_var_addr
0002C790 <AmiBlitz3.ab3@14841>   ADD.w #$a040-$200,-4(a4)
0002C792 <AmiBlitz3.ab3@14842> RTS
0002C798 <AmiBlitz3.ab3@14845>   MOVE.w regnum,D3
0002C79A <AmiBlitz3.ab3@14846>   MOVE.w a1,d1
0002C79C <AmiBlitz3.ab3@14847>   OR.w D3,D1
0002C79E <AmiBlitz3.ab3@14848>   ADDQ.w #1,D1
0002C7A0 <AmiBlitz3.ab3@14849>   LSL.w #8,D3
0002C7A2 <AmiBlitz3.ab3@14850>   LSL.w #1,D3
0002C7A4 <AmiBlitz3.ab3@14851>   OR.w D3,D1
0002C7A8 <AmiBlitz3.ab3@14852> BRA.w writeword
0002C7AC <AmiBlitz3.ab3@14855>    CMP.b #3,d3
0002C7B0 <AmiBlitz3.ab3@14856>    BCS doplus2__sub1_lq10
0002C7B6 <AmiBlitz3.ab3@14857>    TST.b quickadd
0002C7BC <AmiBlitz3.ab3@14861>    MOVE.l destpointer,a0
0002C7C2 <AmiBlitz3.ab3@14862>    CLR.b quickadd
0002C7C8 <AmiBlitz3.ab3@14863>    CLR.l load_var_addr
0002C7CE <AmiBlitz3.ab3@14864>    SUB.l imm_addr,a0
0002C7D2 <AmiBlitz3.ab3@14865>    CMP.w #6,a0
0002C7D6 <AmiBlitz3.ab3@14866>    BEQ doplus2__sub1_li10
0002C7DA <AmiBlitz3.ab3@14867>    CMP.w #4,a0
0002C7DE <AmiBlitz3.ab3@14868>    BNE.s doplus2__sub1_li1
0002C7E4 <AmiBlitz3.ab3@14869>    CLR.l imm_addr
0002C7EA <AmiBlitz3.ab3@14870>    ADD.w #$6040-$200,-4(a4)
0002C7EC <AmiBlitz3.ab3@14871> RTS
0002C7EE <AmiBlitz3.ab3@14874>    MOVE.l a4,a0
0002C7F4 <AmiBlitz3.ab3@14875>     SUB.l load_var_addr,a0
0002C7FA <AmiBlitz3.ab3@14876>     CMP.l #$a,a0
0002C7FE <AmiBlitz3.ab3@14877>     BNE doplus2__sub1_l10e
0002C804 <AmiBlitz3.ab3@14878>    CLR.l load_var_addr
0002C808 <AmiBlitz3.ab3@14879>    MOVE.w -$8(a4),d1
0002C80E <AmiBlitz3.ab3@14880>    MOVE.l -$4(a4),-$8(a4)
0002C812 <AmiBlitz3.ab3@14881>    MOVE.w d1,-$4(a4)
0002C818 <AmiBlitz3.ab3@14882>    SUB.w #$1b80,-$a(a4)
0002C81E <AmiBlitz3.ab3@14883>    SUBQ.l #2,destpointer
0002C820 <AmiBlitz3.ab3@14884> RTS
0002C826 <AmiBlitz3.ab3@14887>   CLR.b quickadd
0002C82A <AmiBlitz3.ab3@14888> BRA doplus2__sub1_l10
0002C830 <AmiBlitz3.ab3@14891>    CLR.l imm_addr
0002C836 <AmiBlitz3.ab3@14892>    ADD.w #$7080-$200,-6(a4)
0002C838 <AmiBlitz3.ab3@14893> RTS
0002C83E <AmiBlitz3.ab3@14896>    MOVE.l destpointer,a0
0002C844 <AmiBlitz3.ab3@14897>    SUB.l load_var_addr,a0
0002C848 <AmiBlitz3.ab3@14898>    CMP.w #4,a0
0002C84C <AmiBlitz3.ab3@14899>    BNE doplus2__sub1_l10
0002C850 <AmiBlitz3.ab3@14900>    CMP.b #3,d3
0002C854 <AmiBlitz3.ab3@14901>    BNE doplus2__sub1_lv1
0002C85A <AmiBlitz3.ab3@14902>    CLR.l load_var_addr
0002C860 <AmiBlitz3.ab3@14903>    ADD.w #$7080-$200,-4(a4)
0002C862 <AmiBlitz3.ab3@14904> RTS
0002C866 <AmiBlitz3.ab3@14907>    CMP.b #2,d3
0002C86A <AmiBlitz3.ab3@14908>    BNE doplus2__sub1_l10
0002C870 <AmiBlitz3.ab3@14909>    CLR.l load_var_addr
0002C876 <AmiBlitz3.ab3@14910>    ADD.w #$6040-$200,-4(a4)
0002C878 <AmiBlitz3.ab3@14911> RTS
0002C87E <AmiBlitz3.ab3@14914>   MOVE.w regnum,D3
0002C880 <AmiBlitz3.ab3@14915>   MOVE.w a1,d1
0002C882 <AmiBlitz3.ab3@14916>   OR.w D3,D1
0002C884 <AmiBlitz3.ab3@14917>   ADDQ.w #1,D1
0002C886 <AmiBlitz3.ab3@14918>   LSL.w #8,D3
0002C888 <AmiBlitz3.ab3@14919>   LSL.w #1,D3
0002C88A <AmiBlitz3.ab3@14920>   OR.w D3,D1
0002C88E <AmiBlitz3.ab3@14921> BRA.w writeword
0002C890 <AmiBlitz3.ab3@14925>   MOVEQ #0,d0
0002C896 <AmiBlitz3.ab3@14926>   MOVE.w regnum,d0
0002C898 <AmiBlitz3.ab3@14927>   ADDQ #1,d0
0002C89A <AmiBlitz3.ab3@14928>   ASL.w #8,d0
0002C89C <AmiBlitz3.ab3@14929>   ASL.w #2,d0
0002C8A2 <AmiBlitz3.ab3@14930>   MOVE.l #$f2000022,d1                                     ;fpu add
0002C8A4 <AmiBlitz3.ab3@14931>   OR.l d0,d1
0002C8AA <AmiBlitz3.ab3@14932>   MOVE.w regnum,d0
0002C8AC <AmiBlitz3.ab3@14933>   ASL.w #7,d0
0002C8AE <AmiBlitz3.ab3@14934>   OR.l d0,d1
0002C8B2 <AmiBlitz3.ab3@14935> BRA.w writelong
0002C8B8 <AmiBlitz3.ab3@14941>   TST.b iee
0002C8BC <AmiBlitz3.ab3@14942>   BNE do_plus_float__fadd1
0002C8C0 <AmiBlitz3.ab3@14943>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002C8C6 <AmiBlitz3.ab3@14946>    MOVE.w D1,libjsr+2
0002C8CA <AmiBlitz3.ab3@14947>    BSR.w JL_0_AD40
0002C8CC <AmiBlitz3.ab3@14948>   MOVE.l D4,D1
0002C8D0 <AmiBlitz3.ab3@14949>    BSR.w JL_0_AD38
0002C8D4 <AmiBlitz3.ab3@14950>   MOVE.w #$C900,D1
0002C8D8 <AmiBlitz3.ab3@14951>    BSR.w Atokejsr
0002C8DC <AmiBlitz3.ab3@14952>    BSR.w JL_0_A352
0002C8E2 <AmiBlitz3.ab3@14953>   MOVE.l libjsr,D1
0002C8E6 <AmiBlitz3.ab3@14954>    BSR.w writelong
0002C8EA <AmiBlitz3.ab3@14955>    BSR.w JL_0_A36E
0002C8EC <AmiBlitz3.ab3@14956>   MOVE.l D5,D1
0002C8F0 <AmiBlitz3.ab3@14957> BRA.w JL_0_AD38
0002C8F6 <AmiBlitz3.ab3@14961>   MOVE.w regnum,D1
0002C8F8 <AmiBlitz3.ab3@14962>   LSL.w #8,D1
0002C8FA <AmiBlitz3.ab3@14963>   LSL.w #1,D1
0002C8FC <AmiBlitz3.ab3@14964>   MOVE.w D1,-(A7)
0002C900 <AmiBlitz3.ab3@14965>   CMP.w #3072,d1
0002C904 <AmiBlitz3.ab3@14966>   BEQ 'l1
0002C90A <AmiBlitz3.ab3@14967>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002C90E <AmiBlitz3.ab3@14968> BRA 'l2
0002C912 <AmiBlitz3.ab3@14971>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002C916 <AmiBlitz3.ab3@14974>    BSR.w writeword
0002C918 <AmiBlitz3.ab3@14975>   MOVE.w (A7)+,D1
0002C91E <AmiBlitz3.ab3@14976>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002C922 <AmiBlitz3.ab3@14977> BRA.w writeword
0002C926 <AmiBlitz3.ab3@14983>   MOVE.w #$9040,D1
0002C92A <AmiBlitz3.ab3@14984> BRA.w doplus2
0002C92E <AmiBlitz3.ab3@14988>   MOVE.w #$9040,D1
0002C932 <AmiBlitz3.ab3@14989> BRA.w doplus2
0002C936 <AmiBlitz3.ab3@14993>   MOVE.w #$9080,D1
0002C93A <AmiBlitz3.ab3@14994> BRA.w doplus2
0002C940 <AmiBlitz3.ab3@14998>    TST.b iee
0002C944 <AmiBlitz3.ab3@14999>     BNE do_minus_float__fs1
0002C948 <AmiBlitz3.ab3@15000>   MOVE.w #$FFB8,D1                                         ;floatsub
0002C94C <AmiBlitz3.ab3@15001> BRA.w doflib
0002C94E <AmiBlitz3.ab3@15004>   MOVEQ #0,d0
0002C954 <AmiBlitz3.ab3@15005>   MOVE.w regnum,d0
0002C956 <AmiBlitz3.ab3@15006>   ADDQ #1,d0
0002C958 <AmiBlitz3.ab3@15007>   ASL.w #8,d0
0002C95A <AmiBlitz3.ab3@15008>   ASL.w #2,d0
0002C960 <AmiBlitz3.ab3@15009>   MOVE.l #$f2000028,d1
0002C962 <AmiBlitz3.ab3@15010>   OR.l d0,d1
0002C968 <AmiBlitz3.ab3@15011>   MOVE.w regnum,d0
0002C96A <AmiBlitz3.ab3@15012>   ASL.w #7,d0
0002C96C <AmiBlitz3.ab3@15013>   OR.l d0,d1
0002C970 <AmiBlitz3.ab3@15014> BRA.w writelong
0002C974 <AmiBlitz3.ab3@15020>   MOVE.w #$C1C0,D1
0002C976 <AmiBlitz3.ab3@15021>   MOVEQ.l #$02,D2                                          ;now a word
0002C97A <AmiBlitz3.ab3@15022> BRA.w doplus2
0002C97E <AmiBlitz3.ab3@15026>   MOVE.w #$C1C0,D1
0002C980 <AmiBlitz3.ab3@15027>   MOVEQ.l #$03,D2                                          ;now a long.
0002C984 <AmiBlitz3.ab3@15028> BRA.w doplus2
0002C988 <AmiBlitz3.ab3@15032>   MOVE.w #$CA00,D1                                         ;quickmul
0002C98C <AmiBlitz3.ab3@15033> BRA.w domylib
0002C992 <AmiBlitz3.ab3@15037>   TST.b fast
0002C996 <AmiBlitz3.ab3@15038>   BNE.s 'l10
0002C99A <AmiBlitz3.ab3@15039>   MOVE.w #$CA01,D1                                         ;writelongmul
0002C99E <AmiBlitz3.ab3@15040> BRA.w domylib
0002C9A4 <AmiBlitz3.ab3@15049>    MOVE.l destpointer,a0
0002C9AA <AmiBlitz3.ab3@15050>    SUB.l imm_addr,a0
0002C9AE <AmiBlitz3.ab3@15051>    CMP.w #6,a0
0002C9B2 <AmiBlitz3.ab3@15052>    BNE 'li1
0002C9B4 <AmiBlitz3.ab3@15053>    MOVEQ.l #2,d1
0002C9B6 <AmiBlitz3.ab3@15054>    MOVEQ #1,d3
0002C9BA <AmiBlitz3.ab3@15057>   CMP.l -4(a4),d1
0002C9BE <AmiBlitz3.ab3@15058>    BEQ 'oklsl
0002C9C0 <AmiBlitz3.ab3@15059>     LSL.l #1,d1
0002C9C6 <AmiBlitz3.ab3@15060>     ADD.l #1,d3
0002C9CC <AmiBlitz3.ab3@15061>     CMP.l #9,d3
0002C9D0 <AmiBlitz3.ab3@15062>     BNE 'ag
0002C9D4 <AmiBlitz3.ab3@15063>    MOVE.w -2(a4),d1
0002C9D8 <AmiBlitz3.ab3@15064>    BSR writeword
0002C9DE <AmiBlitz3.ab3@15065>    MOVE.w -6(a4),-4(a4)
0002C9E6 <AmiBlitz3.ab3@15066>    MOVE.l #$4c3c0800,-8(a4)
0002C9EC <AmiBlitz3.ab3@15067>    MOVE.w regnum,D3
0002C9F0 <AmiBlitz3.ab3@15068>    MULS #$1000,D3
0002C9F4 <AmiBlitz3.ab3@15069>    OR.w D3,-6(a4)
0002C9FA <AmiBlitz3.ab3@15070>    CLR.l load_var_addr
0002CA00 <AmiBlitz3.ab3@15071>    CLR.l imm_addr
0002CA04 <AmiBlitz3.ab3@15072> BRA 'li3
0002CA08 <AmiBlitz3.ab3@15075>    CMP.w #8,d3
0002CA0C <AmiBlitz3.ab3@15076>    BEQ 'ok
0002CA0E <AmiBlitz3.ab3@15077>    ASL.l #1,d3
0002CA10 <AmiBlitz3.ab3@15078>    ASL.l #8,d3
0002CA14 <AmiBlitz3.ab3@15079>    MOVE.w #$e188,d1
0002CA16 <AmiBlitz3.ab3@15080>    OR.w d3,d1
0002CA1A <AmiBlitz3.ab3@15081>    MOVE.w d1,-6(a4)
0002CA1E <AmiBlitz3.ab3@15082> BRA 'okls
0002CA24 <AmiBlitz3.ab3@15085>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CA2A <AmiBlitz3.ab3@15088>   MOVE.w regnum,d3
0002CA2E <AmiBlitz3.ab3@15089>    OR.b d3,-5(a4)
0002CA34 <AmiBlitz3.ab3@15090>    SUBQ.l #4,destpointer
0002CA3A <AmiBlitz3.ab3@15091>    CLR.l load_var_addr
0002CA40 <AmiBlitz3.ab3@15092>    CLR.l imm_addr
0002CA44 <AmiBlitz3.ab3@15093> BRA 'li3
0002CA4A <AmiBlitz3.ab3@15096>    MOVE.l destpointer,a0
0002CA50 <AmiBlitz3.ab3@15097>    SUB.l load_var_addr,a0
0002CA54 <AmiBlitz3.ab3@15098>    CMP.w #4,a0
0002CA58 <AmiBlitz3.ab3@15099>    BNE 'li2
0002CA5C <AmiBlitz3.ab3@15100>    MOVE.w -2(a4),d1
0002CA60 <AmiBlitz3.ab3@15101>    BSR writeword
0002CA66 <AmiBlitz3.ab3@15102>    MOVE.b #$4c,-6(a4)
0002CA6C <AmiBlitz3.ab3@15103>    MOVE.w #$0800,-4(a4)
0002CA72 <AmiBlitz3.ab3@15104>    MOVE.w regnum,D3
0002CA76 <AmiBlitz3.ab3@15105>    MULS #$1000,d3
0002CA7A <AmiBlitz3.ab3@15106>    OR.w D3,-4(a4)
0002CA7E <AmiBlitz3.ab3@15107> BRA 'li3
0002CA84 <AmiBlitz3.ab3@15110>    MOVE.l #$4c010800,d1
0002CA8A <AmiBlitz3.ab3@15111>    MOVE.w regnum,D3
0002CA8C <AmiBlitz3.ab3@15112>    EXT.l d3
0002CA90 <AmiBlitz3.ab3@15113>    MULS #$1000,d3
0002CA92 <AmiBlitz3.ab3@15114>    OR.w D3,d1
0002CA96 <AmiBlitz3.ab3@15115>    MULS #$10,d3
0002CA98 <AmiBlitz3.ab3@15116>    ADD.l d3,d1
0002CA9C <AmiBlitz3.ab3@15117>    BSR writelong
0002CA9E <AmiBlitz3.ab3@15122> RTS
0002CAA0 <AmiBlitz3.ab3@15126>   MOVE.w D1,-(A7)
0002CAA4 <AmiBlitz3.ab3@15127>    BSR.w JL_0_AD40
0002CAA6 <AmiBlitz3.ab3@15128>   MOVE.l D4,D1
0002CAAA <AmiBlitz3.ab3@15129>    BSR.w JL_0_AD38
0002CAAE <AmiBlitz3.ab3@15130>    BSR.w JL_0_A352
0002CAB0 <AmiBlitz3.ab3@15131>   MOVEQ #0,d1
0002CAB2 <AmiBlitz3.ab3@15132>   MOVE.w (A7)+,D1
0002CAB8 <AmiBlitz3.ab3@15133>   MOVE.l d1,lastinstruction
0002CABC <AmiBlitz3.ab3@15134>    BSR.w Atokejsr
0002CAC0 <AmiBlitz3.ab3@15135>    BSR.w JL_0_A36E
0002CAC2 <AmiBlitz3.ab3@15136>   MOVE.l D5,D1
0002CAC6 <AmiBlitz3.ab3@15137> BRA.w JL_0_AD38
0002CACC <AmiBlitz3.ab3@15141>    TST.b iee
0002CAD0 <AmiBlitz3.ab3@15142>     BNE fm1
0002CAD4 <AmiBlitz3.ab3@15143>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CAD8 <AmiBlitz3.ab3@15144> BRA.w doflib
0002CADA <AmiBlitz3.ab3@15147>   MOVEQ #0,d0
0002CAE0 <AmiBlitz3.ab3@15148>  MOVE.w regnum,d0
0002CAE2 <AmiBlitz3.ab3@15149>  ADDQ #1,d0
0002CAE4 <AmiBlitz3.ab3@15150>  ASL.w #8,d0
0002CAE6 <AmiBlitz3.ab3@15151>  ASL.w #2,d0
0002CAEC <AmiBlitz3.ab3@15152>  MOVE.l #$f2000023,d1
0002CAEE <AmiBlitz3.ab3@15153>  OR.l d0,d1
0002CAF4 <AmiBlitz3.ab3@15154>  MOVE.w regnum,d0
0002CAF6 <AmiBlitz3.ab3@15155>  ASL.w #7,d0
0002CAF8 <AmiBlitz3.ab3@15156>  OR.l d0,d1
0002CAFC <AmiBlitz3.ab3@15157> BRA.w writelong
0002CAFE <AmiBlitz3.ab3@15161>   MOVE.w D2,-(A7)                                          ;dopow
0002CB00 <AmiBlitz3.ab3@15162>   MOVE.w D2,D3
0002CB02 <AmiBlitz3.ab3@15163>   MOVEQ.l #$05,D2
0002CB06 <AmiBlitz3.ab3@15164>    BSR.w JL_0_9770
0002CB0C <AmiBlitz3.ab3@15165>   ADDQ.w #1,regnum
0002CB0E <AmiBlitz3.ab3@15166>   MOVE.w (A7)+,D3
0002CB10 <AmiBlitz3.ab3@15167>   MOVEQ.l #$05,D2
0002CB14 <AmiBlitz3.ab3@15168>    BSR.w writeconvertcode
0002CB1A <AmiBlitz3.ab3@15169>   SUBQ.w #1,regnum
0002CB1E <AmiBlitz3.ab3@15170>    BSR.w nocando
0002CB24 <AmiBlitz3.ab3@15171>    TST.b fpu
0002CB28 <AmiBlitz3.ab3@15172>    BEQ 'old
0002CB2A <AmiBlitz3.ab3@15173>    MOVEQ #0,d1
0002CB30 <AmiBlitz3.ab3@15174>    MOVE.w regnum,d1
0002CB32 <AmiBlitz3.ab3@15175>   MOVE.l d1,d0
0002CB34 <AmiBlitz3.ab3@15176>   ASL.w #7,d1
0002CB36 <AmiBlitz3.ab3@15177>   ASL.w #8,d0
0002CB38 <AmiBlitz3.ab3@15178>   ASL.w #2,d0
0002CB3A <AmiBlitz3.ab3@15179>   OR.w d0,d1
0002CB3C <AmiBlitz3.ab3@15180>   MOVE.l d1,-(a7)
0002CB42 <AmiBlitz3.ab3@15182>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002CB46 <AmiBlitz3.ab3@15183>    BSR writelong
0002CB4C <AmiBlitz3.ab3@15184>    MOVE.w regnum,d0
0002CB4E <AmiBlitz3.ab3@15185>  ADDQ #1,d0
0002CB50 <AmiBlitz3.ab3@15186>  ASL.w #8,d0
0002CB52 <AmiBlitz3.ab3@15187>  ASL.w #2,d0
0002CB58 <AmiBlitz3.ab3@15188>  MOVE.l #$f2000023,d1
0002CB5A <AmiBlitz3.ab3@15189>  OR.l d0,d1
0002CB60 <AmiBlitz3.ab3@15190>  MOVE.w regnum,d0
0002CB62 <AmiBlitz3.ab3@15191>  ASL.w #7,d0
0002CB64 <AmiBlitz3.ab3@15192>  OR.l d0,d1
0002CB6A <AmiBlitz3.ab3@15193>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002CB6E <AmiBlitz3.ab3@15194>    BSR writelong
0002CB70 <AmiBlitz3.ab3@15195>    MOVE.l (a7)+,d1
0002CB76 <AmiBlitz3.ab3@15197>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002CB7A <AmiBlitz3.ab3@15198>    BSR writelong
0002CB7C <AmiBlitz3.ab3@15199> RTS
0002CB80 <AmiBlitz3.ab3@15202>   MOVE.w #$6001,D1
0002CB84 <AmiBlitz3.ab3@15203> BRA.w domylib
0002CB88 <AmiBlitz3.ab3@15209>   MOVEA.l forthsp(PC),A0
0002CB8C <AmiBlitz3.ab3@15210>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002CB8E <AmiBlitz3.ab3@15211> RTS
0002CB92 <AmiBlitz3.ab3@15217>   MOVE.w #$D400,D1
0002CB96 <AmiBlitz3.ab3@15218> BRA.w domylib
0002CB9A <AmiBlitz3.ab3@15222>   MOVE.w #$D401,D1
0002CB9E <AmiBlitz3.ab3@15223> BRA.w domylib
0002CBA2 <AmiBlitz3.ab3@15227>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002CBA6 <AmiBlitz3.ab3@15228>   MOVE.w #$D402,D1
0002CBAA <AmiBlitz3.ab3@15229> BRA.w domylib
0002CBAE <AmiBlitz3.ab3@15233>   MOVE.w #$D403,D1
0002CBB0 <AmiBlitz3.ab3@15234>   MOVEQ.l #$02,D2                                          ;now a word.
0002CBB4 <AmiBlitz3.ab3@15235> BRA.w domylib
0002CBB8 <AmiBlitz3.ab3@15239>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002CBBE <AmiBlitz3.ab3@15240>   TST.b fpu
0002CBC2 <AmiBlitz3.ab3@15241>   BEQ 'old
0002CBC4 <AmiBlitz3.ab3@15242>   MOVEQ #0,d1
0002CBCA <AmiBlitz3.ab3@15243>   MOVE.w regnum,d1                                         ;fpu mod
0002CBCC <AmiBlitz3.ab3@15244>   MOVE.l d1,d0
0002CBCE <AmiBlitz3.ab3@15245>   ADDQ.l #1,d1
0002CBD0 <AmiBlitz3.ab3@15246>   ASL.l #7,d0
0002CBD2 <AmiBlitz3.ab3@15247>   ASL.l #8,d1
0002CBD4 <AmiBlitz3.ab3@15248>   ASL.l #2,d1
0002CBD6 <AmiBlitz3.ab3@15249>   OR.l d0,d1
0002CBD8 <AmiBlitz3.ab3@15250>   MOVE.l d0,-(a7)
0002CBDE <AmiBlitz3.ab3@15251>   OR.l #$f2000021,d1
0002CBE2 <AmiBlitz3.ab3@15252>   BSR writelong
0002CBE4 <AmiBlitz3.ab3@15253>   MOVE.l (a7)+,d0
0002CBE6 <AmiBlitz3.ab3@15254>  RTS
0002CBEA <AmiBlitz3.ab3@15257>   MOVE.w #$D404,D1
0002CBEC <AmiBlitz3.ab3@15258>   MOVEQ.l #$03,D2                                          ;now a long
0002CBF0 <AmiBlitz3.ab3@15259> BRA.w domylib
0002CBF4 <AmiBlitz3.ab3@15267>   MOVE.w #$48C0,D1
0002CBFA <AmiBlitz3.ab3@15268>   OR.w regnum,D1
0002CBFE <AmiBlitz3.ab3@15269>    BSR.w writeword
0002CC00 <AmiBlitz3.ab3@15270>   ADDQ.w #1,D1
0002CC04 <AmiBlitz3.ab3@15271>    BSR.w writeword
0002CC08 <AmiBlitz3.ab3@15274>    MOVE.w #$48C0,D1
0002CC0E <AmiBlitz3.ab3@15275>   OR.w regnum,D1
0002CC12 <AmiBlitz3.ab3@15276>    BSR.w writeword
0002CC16 <AmiBlitz3.ab3@15277>   MOVE.w #$81C0,D1
0002CC1A <AmiBlitz3.ab3@15278> BRA.w doplus2
0002CC20 <AmiBlitz3.ab3@15282>   TST.b fast
0002CC24 <AmiBlitz3.ab3@15283>   BNE.s 'l10
0002CC28 <AmiBlitz3.ab3@15284>   MOVE.w #$CB01,D1
0002CC2C <AmiBlitz3.ab3@15285> BRA.w domylib
0002CC30 <AmiBlitz3.ab3@15291>   BSR.w JL_0_AD40
0002CC32 <AmiBlitz3.ab3@15292>   MOVE.l D4,D1
0002CC36 <AmiBlitz3.ab3@15293>    BSR.w JL_0_AD38
0002CC3A <AmiBlitz3.ab3@15294>    BSR.w JL_0_A352
0002CC40 <AmiBlitz3.ab3@15308>    MOVE.l #$4c410800,d1
0002CC44 <AmiBlitz3.ab3@15309>    BSR writelong
0002CC48 <AmiBlitz3.ab3@15312>   MOVE.w #$4e71,d1
0002CC4C <AmiBlitz3.ab3@15314>    BSR.w JL_0_A36E
0002CC4E <AmiBlitz3.ab3@15315>   MOVE.l D5,D1
0002CC52 <AmiBlitz3.ab3@15316> BRA.w JL_0_AD38
0002CC56 <AmiBlitz3.ab3@15319>     CMP.w #8,d3
0002CC5A <AmiBlitz3.ab3@15320>     BEQ 'ok
0002CC5C <AmiBlitz3.ab3@15321>     ASL.l #1,d3
0002CC5E <AmiBlitz3.ab3@15322>     ASL.l #8,d3
0002CC62 <AmiBlitz3.ab3@15323>     MOVE.w #$e080,d1
0002CC64 <AmiBlitz3.ab3@15324>     OR.w d3,d1
0002CC68 <AmiBlitz3.ab3@15325> BRA 'oklsr2
0002CC6C <AmiBlitz3.ab3@15328>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002CC72 <AmiBlitz3.ab3@15331>      SUBQ.l #6,destpointer
0002CC76 <AmiBlitz3.ab3@15332>      BSR writeword
0002CC78 <AmiBlitz3.ab3@15333>      MOVE.l (a7)+,d3
0002CC7A <AmiBlitz3.ab3@15334>      MOVEQ #0,d1
0002CC80 <AmiBlitz3.ab3@15335>      CLR.l load_var_addr
0002CC86 <AmiBlitz3.ab3@15336>      CLR.l imm_addr
0002CC8A <AmiBlitz3.ab3@15337> BRA JL_0_AD38
0002CC8E <AmiBlitz3.ab3@15341>   MOVE.w #$CB00,D1                                         ;quickdiv
0002CC92 <AmiBlitz3.ab3@15342> BRA.w domylib
0002CC98 <AmiBlitz3.ab3@15346>    TST.b iee
0002CC9C <AmiBlitz3.ab3@15347>    BNE fdiv1
0002CCA0 <AmiBlitz3.ab3@15348>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002CCA4 <AmiBlitz3.ab3@15349> BRA.w doflib
0002CCA6 <AmiBlitz3.ab3@15353>   MOVEQ #0,d0
0002CCAC <AmiBlitz3.ab3@15354>   MOVE.w regnum,d0
0002CCAE <AmiBlitz3.ab3@15355>   ADDQ #1,d0
0002CCB0 <AmiBlitz3.ab3@15356>   ASL.w #8,d0
0002CCB2 <AmiBlitz3.ab3@15357>   ASL.w #2,d0
0002CCB8 <AmiBlitz3.ab3@15358>   MOVE.l #$f2000020,d1                                     ;fpu div
0002CCBA <AmiBlitz3.ab3@15359>   OR.l d0,d1
0002CCC0 <AmiBlitz3.ab3@15360>   MOVE.w regnum,d0
0002CCC2 <AmiBlitz3.ab3@15361>   ASL.w #7,d0
0002CCC4 <AmiBlitz3.ab3@15362>   OR.l d0,d1
0002CCC8 <AmiBlitz3.ab3@15363> BRA.w writelong
0002CCCC <AmiBlitz3.ab3@15367>   MOVE.w #$C000,D1
0002CCD0 <AmiBlitz3.ab3@15368> BRA.w doplus2
0002CCD4 <AmiBlitz3.ab3@15372>   MOVE.w #$C040,D1
0002CCD8 <AmiBlitz3.ab3@15373> BRA.w doplus2
0002CCDC <AmiBlitz3.ab3@15377>   MOVE.w #$C080,D1
0002CCE0 <AmiBlitz3.ab3@15378> BRA.w doplus2
0002CCE4 <AmiBlitz3.ab3@15382>   MOVE.w #$8000,D1
0002CCE8 <AmiBlitz3.ab3@15383> BRA.w doplus2
0002CCEC <AmiBlitz3.ab3@15387>   MOVE.w #$8040,D1
0002CCF0 <AmiBlitz3.ab3@15388> BRA.w doplus2
0002CCF4 <AmiBlitz3.ab3@15392>   MOVE.w #$8080,D1
0002CCF8 <AmiBlitz3.ab3@15393> BRA.w doplus2
0002CCFC <AmiBlitz3.ab3@15397>   MOVE.w #$B100,D1
0002CD02 <AmiBlitz3.ab3@15400>    MOVE.w regnum,D3
0002CD04 <AmiBlitz3.ab3@15401>   OR.w D3,D1
0002CD06 <AmiBlitz3.ab3@15402>   ADDQ.w #1,D3
0002CD08 <AmiBlitz3.ab3@15403>   LSL.w #8,D3
0002CD0A <AmiBlitz3.ab3@15404>   LSL.w #1,D3
0002CD0C <AmiBlitz3.ab3@15405>   OR.w D3,D1
0002CD10 <AmiBlitz3.ab3@15406> BRA.w writeword
0002CD14 <AmiBlitz3.ab3@15410>   MOVE.w #$B140,D1
0002CD18 <AmiBlitz3.ab3@15411> BRA.w JL_0_A25C
0002CD1C <AmiBlitz3.ab3@15415>   MOVE.w #$B180,D1
0002CD20 <AmiBlitz3.ab3@15416> BRA.w JL_0_A25C
0002CD24 <AmiBlitz3.ab3@15420>   MOVE.w #$E1A8,D1
0002CD28 <AmiBlitz3.ab3@15421> BRA.w JL_0_A298
0002CD2C <AmiBlitz3.ab3@15425>   MOVE.w #$E0A8,D1
0002CD30 <AmiBlitz3.ab3@15426> BRA.w JL_0_A298
0002CD34 <AmiBlitz3.ab3@15430>   MOVE.w #$E0A0,D1
0002CD38 <AmiBlitz3.ab3@15431> BRA.w JL_0_A298
0002CD3A <AmiBlitz3.ab3@15435>   MOVE.w D1,-(A7)
0002CD40 <AmiBlitz3.ab3@15436>   ADDQ.w #1,regnum
0002CD42 <AmiBlitz3.ab3@15437>   MOVE.w D2,-(A7)
0002CD44 <AmiBlitz3.ab3@15438>   MOVE.w D2,D3
0002CD46 <AmiBlitz3.ab3@15439>   MOVEQ.l #$02,D2
0002CD4A <AmiBlitz3.ab3@15444>    BSR.w writeconvertcode
0002CD4C <AmiBlitz3.ab3@15446>   MOVE.w (A7)+,D2
0002CD52 <AmiBlitz3.ab3@15447>   SUBQ.w #1,regnum
0002CD56 <AmiBlitz3.ab3@15448>   CMP.w #$4,D2
0002CD5A <AmiBlitz3.ab3@15449>    BEQ.w JL_0_A2C2
0002CD5C <AmiBlitz3.ab3@15450>   MOVE.w D2,D3
0002CD5E <AmiBlitz3.ab3@15451>   MOVEQ.l #$03,D2
0002CD62 <AmiBlitz3.ab3@15452>    BSR.w JL_0_9770
0002CD64 <AmiBlitz3.ab3@15455>    MOVE.w (A7)+,D1
0002CD6A <AmiBlitz3.ab3@15456>   MOVE.w regnum,D3
0002CD6C <AmiBlitz3.ab3@15457>   OR.w D3,D1
0002CD6E <AmiBlitz3.ab3@15458>   ADDQ.w #1,D3
0002CD70 <AmiBlitz3.ab3@15459>   LSL.w #8,D3
0002CD72 <AmiBlitz3.ab3@15460>   LSL.w #1,D3
0002CD74 <AmiBlitz3.ab3@15461>   OR.w D3,D1
0002CD78 <AmiBlitz3.ab3@15462> BRA.w writeword
0002CD7C <AmiBlitz3.ab3@15466>   MOVE.w #$0100,D1
0002CD80 <AmiBlitz3.ab3@15467>    BSR.w JL_0_A31C
0002CD86 <AmiBlitz3.ab3@15468>   MOVE.w regnum,D1
0002CD8A <AmiBlitz3.ab3@15469>   ORI.w #$56C0,D1
0002CD8E <AmiBlitz3.ab3@15470>    BSR.w writeword
0002CD94 <AmiBlitz3.ab3@15471>   MOVE.w regnum,D1
0002CD98 <AmiBlitz3.ab3@15472>   ORI.w #$4880,D1
0002CD9C <AmiBlitz3.ab3@15473>    BSR.w writeword
0002CD9E <AmiBlitz3.ab3@15474>   MOVEQ.l #$02,D2
0002CDA0 <AmiBlitz3.ab3@15475> RTS
0002CDA4 <AmiBlitz3.ab3@15479>   MOVE.w #$01C0,D1
0002CDA8 <AmiBlitz3.ab3@15482>    BSR.w JL_0_A31C
0002CDAA <AmiBlitz3.ab3@15483>   MOVEQ.l #$03,D2
0002CDAC <AmiBlitz3.ab3@15484> RTS
0002CDB0 <AmiBlitz3.ab3@15488>   MOVE.w #$0180,D1
0002CDB4 <AmiBlitz3.ab3@15489> BRA.w JL_0_A304
0002CDB8 <AmiBlitz3.ab3@15493>   MOVE.w #$0140,D1
0002CDBC <AmiBlitz3.ab3@15494> BRA.w JL_0_A304
0002CDBE <AmiBlitz3.ab3@15498>   MOVE.w D1,-(A7)
0002CDC0 <AmiBlitz3.ab3@15499>   MOVE.w D2,-(A7)
0002CDC2 <AmiBlitz3.ab3@15500>   MOVE.w D2,D3
0002CDC4 <AmiBlitz3.ab3@15501>   MOVEQ.l #$03,D2
0002CDC8 <AmiBlitz3.ab3@15502>    BSR.w JL_0_9770
0002CDCA <AmiBlitz3.ab3@15503>   MOVE.w (A7)+,D3
0002CDCC <AmiBlitz3.ab3@15504>   MOVEQ.l #$01,D2
0002CDD2 <AmiBlitz3.ab3@15505>   ADDQ.w #1,regnum
0002CDD6 <AmiBlitz3.ab3@15506>    BSR.w writeconvertcode
0002CDDC <AmiBlitz3.ab3@15507>   SUBQ.w #1,regnum
0002CDE2 <AmiBlitz3.ab3@15508>   MOVE.w regnum,D1
0002CDE4 <AmiBlitz3.ab3@15509>   MOVE.w D1,D2
0002CDE6 <AmiBlitz3.ab3@15510>   ADDQ.w #1,D2
0002CDE8 <AmiBlitz3.ab3@15511>   LSL.w #8,D2
0002CDEA <AmiBlitz3.ab3@15512>   LSL.w #1,D2
0002CDEC <AmiBlitz3.ab3@15513>   OR.w (A7)+,D1
0002CDEE <AmiBlitz3.ab3@15514>   OR.w D2,D1
0002CDF2 <AmiBlitz3.ab3@15515> BRA.w writeword
0002CDF8 <AmiBlitz3.ab3@15519>   MOVE.w regnum,D1
0002CDFC <AmiBlitz3.ab3@15520>    BEQ.w JL_0_A36C
0002CE00 <AmiBlitz3.ab3@15521>   ORI.w #$2000,D1
0002CE04 <AmiBlitz3.ab3@15522>    BSR.w writeword
0002CE08 <AmiBlitz3.ab3@15523>   ADDI.w #$201,D1
0002CE0C <AmiBlitz3.ab3@15524>    BSR.w writeword
0002CE0E <AmiBlitz3.ab3@15527> RTS
0002CE14 <AmiBlitz3.ab3@15531>   MOVE.w regnum,D1
0002CE18 <AmiBlitz3.ab3@15532>    BEQ.w JL_0_A384
0002CE1A <AmiBlitz3.ab3@15533>   LSL.w #8,D1
0002CE1C <AmiBlitz3.ab3@15534>   LSL.w #1,D1
0002CE20 <AmiBlitz3.ab3@15535>   ORI.w #$2000,D1
0002CE24 <AmiBlitz3.ab3@15536>    BSR.w writeword
0002CE26 <AmiBlitz3.ab3@15539> RTS
0002CE2C <AmiBlitz3.ab3@15543>    CLR.b isconstantvalue
0002CE32 <AmiBlitz3.ab3@15544>    CLR.l lastconstantvalue
0002CE3A <AmiBlitz3.ab3@15545>    CMPI.w #$7,regnum
0002CE3E <AmiBlitz3.ab3@15546>    BCS.w JL_0_A6B4
0002CE44 <AmiBlitz3.ab3@15547>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002CE48 <AmiBlitz3.ab3@15548>   BSR writelong
0002CE4C <AmiBlitz3.ab3@15549>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002CE50 <AmiBlitz3.ab3@15551>   CMP.w #$3,D2
0002CE54 <AmiBlitz3.ab3@15552>    BCS.w JL_0_A3A2
0002CE58 <AmiBlitz3.ab3@15553>   MOVE.w #$2F06,D1
0002CE5C <AmiBlitz3.ab3@15556>   BSR.w writeword
0002CE5E <AmiBlitz3.ab3@15557>   MOVE.w D1,-(A7)
0002CE64 <AmiBlitz3.ab3@15558>   SUBQ.w #1,regnum
0002CE68 <AmiBlitz3.ab3@15559>    BSR.w JL_0_A6B4
0002CE6E <AmiBlitz3.ab3@15560>   ADDQ.w #1,regnum
0002CE74 <AmiBlitz3.ab3@15561>   MOVE.l #$f2001b80,d1
0002CE78 <AmiBlitz3.ab3@15562>   BSR writelong
0002CE7C <AmiBlitz3.ab3@15563>   MOVE.w #$3E06,D1
0002CE80 <AmiBlitz3.ab3@15564>   CMP.w #$3,D2
0002CE84 <AmiBlitz3.ab3@15565>    BCS.w JL_0_A3C8
0002CE88 <AmiBlitz3.ab3@15566>   MOVE.w #$2E06,D1
0002CE8C <AmiBlitz3.ab3@15569>   BSR.w writeword
0002CE8E <AmiBlitz3.ab3@15570>   MOVE.w (A7)+,D1
0002CE92 <AmiBlitz3.ab3@15571>   ANDI.w #$F000,D1
0002CE96 <AmiBlitz3.ab3@15572>   ORI.w #$C1F,D1
0002CE9C <AmiBlitz3.ab3@15573>   JSR writeword
0002CEA2 <AmiBlitz3.ab3@15574>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002CEA6 <AmiBlitz3.ab3@15575> BRA writelong
0002CEAA <AmiBlitz3.ab3@15579>   BSR.w JL_0_A6B4
0002CEAE <AmiBlitz3.ab3@15580>   MOVE.w #$4440,D1
0002CEB2 <AmiBlitz3.ab3@15581>   CMP.w #$3,D2
0002CEB6 <AmiBlitz3.ab3@15582>    BCS.w JL_0_A406
0002CEBA <AmiBlitz3.ab3@15583>   MOVE.w #$4480,D1
0002CEBE <AmiBlitz3.ab3@15584>   CMP.w #$5,D2
0002CEC2 <AmiBlitz3.ab3@15585>    BCS.w JL_0_A406
0002CEC6 <AmiBlitz3.ab3@15586>   CMP.w #$6,D2
0002CECA <AmiBlitz3.ab3@15587>    BCC.w illoperr
0002CECE <AmiBlitz3.ab3@15588>   MOVE.w #$FFC4,D1
0002CED2 <AmiBlitz3.ab3@15589> BRA.w JL_0_9604
0002CED8 <AmiBlitz3.ab3@15592>   OR.w regnum,D1                                           ;negate
0002CEDE <AmiBlitz3.ab3@15593>   CLR.l imm_addr
0002CEE2 <AmiBlitz3.ab3@15594> BRA.w writeword
0002CEE6 <AmiBlitz3.ab3@15598>    BSR.w eval4
0002CEEA <AmiBlitz3.ab3@15599>   CMP.w #")",D0
0002CEEE <AmiBlitz3.ab3@15600>    BEQ.w JL_0_A424
0002CEF2 <AmiBlitz3.ab3@15601>   CMP.w #"}",D0
0002CEF6 <AmiBlitz3.ab3@15602>    BNE.w brackets_                                         ;syntax error brackets
0002CEFA <AmiBlitz3.ab3@15605> BRA.w get1bytemain
0002CEFE <AmiBlitz3.ab3@15609>    BSR.w eval4
0002CF02 <AmiBlitz3.ab3@15610>   CMP.w #$5,D2
0002CF06 <AmiBlitz3.ab3@15611>    BCC.w illoperr
0002CF0C <AmiBlitz3.ab3@15612>   MOVE.w regnum,D1
0002CF10 <AmiBlitz3.ab3@15613>   ORI.w #$4640,D1
0002CF14 <AmiBlitz3.ab3@15614>   CMP.w #$3,D2
0002CF18 <AmiBlitz3.ab3@15615>    BCS.w writeword
0002CF1C <AmiBlitz3.ab3@15616>   EORI.w #$C0,D1
0002CF20 <AmiBlitz3.ab3@15617> BRA.w writeword
0002CF22 <AmiBlitz3.ab3@15621>   MOVEQ.l #$05,D2                                          ;fpu pi
0002CF28 <AmiBlitz3.ab3@15622>    TST.b fpu
0002CF2C <AmiBlitz3.ab3@15623>   BEQ 'old
0002CF32 <AmiBlitz3.ab3@15624> JMP fpupi
0002CF38 <AmiBlitz3.ab3@15627>   MOVE.w regnum,D1
0002CF3A <AmiBlitz3.ab3@15628>   LSL.w #8,D1
0002CF3C <AmiBlitz3.ab3@15629>   LSL.w #1,D1
0002CF40 <AmiBlitz3.ab3@15630>   ORI.w #$203C,D1
0002CF44 <AmiBlitz3.ab3@15631>    BSR.w writeword
0002CF4A <AmiBlitz3.ab3@15632>   MOVE.l #$C90FDA42,D1
0002CF4E <AmiBlitz3.ab3@15633>    BSR.w writelong
0002CF52 <AmiBlitz3.ab3@15634> BRA.w get1bytemain
0002D04E <AmiBlitz3.ab3@15642> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D14A <AmiBlitz3.ab3@15643>              Ds.l 63
0002D192 <AmiBlitz3.ab3@15644>              Ds.l 18
0002D196 <AmiBlitz3.ab3@15645> forthsp:     Dc.l forthstack
0002D1C2 <AmiBlitz3.ab3@15650>    !fget
0002D1C6 <AmiBlitz3.ab3@15651>    CMP.b #$7e,d0
0002D1CA <AmiBlitz3.ab3@15652>    BNE 'noc
0002D1CC <AmiBlitz3.ab3@15653>    SUBQ.l #1,a5
0002D1D0 <AmiBlitz3.ab3@15654>    BSR get1bytemain
0002D1D4 <AmiBlitz3.ab3@15657>    CMP.b #"#",d0
0002D1D8 <AmiBlitz3.ab3@15658>    BNE 'ld1
0002D1DC <AmiBlitz3.ab3@15659>    CMP.b #$22,(a5)
0002D1E0 <AmiBlitz3.ab3@15660>    BNE 'ld1
0002D1E6 <AmiBlitz3.ab3@15661>    JSR addimmi
0002D1EA <AmiBlitz3.ab3@15664>    CMP.b #$22,d0
0002D1EE <AmiBlitz3.ab3@15665>    BNE 'l11
0002D1F4 <AmiBlitz3.ab3@15675>    NOT.w instringon
0002D1F6 <AmiBlitz3.ab3@15678>    TST.b d0
0002D1FA <AmiBlitz3.ab3@15679>    BPL 'l10
0002D1FC <AmiBlitz3.ab3@15680>    LSL.w #8,d0
0002D1FE <AmiBlitz3.ab3@15681>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002D204 <AmiBlitz3.ab3@15682>    MOVE.l d0,lasttoken
0002D20A <AmiBlitz3.ab3@15683>    MOVE.w d0,lastchar
0002D210 <AmiBlitz3.ab3@15684>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D214 <AmiBlitz3.ab3@15686>   CMP.w #"(",D0
0002D218 <AmiBlitz3.ab3@15687>    BEQ.w checkcast2
0002D21C <AmiBlitz3.ab3@15688> nocast CMP.w #"{",D0
0002D220 <AmiBlitz3.ab3@15689>    BEQ.w JL_0_A410
0002D224 <AmiBlitz3.ab3@15690>   CMP.w #$2D,D0
0002D228 <AmiBlitz3.ab3@15691>    BEQ.w JL_0_A3DA
0002D22C <AmiBlitz3.ab3@15692>   CMP.w #-$7F77,D0
0002D230 <AmiBlitz3.ab3@15693>    BEQ.w JL_0_A428
0002D234 <AmiBlitz3.ab3@15694>   MOVEA.l forthsp(PC),A1
0002D23A <AmiBlitz3.ab3@15695>   CMPA.l #forthsp,A1
0002D23E <AmiBlitz3.ab3@15696>    BCC.w conmemerr
0002D244 <AmiBlitz3.ab3@15697>   MOVE.l destpointer,(A1)+
0002D24A <AmiBlitz3.ab3@15698>   MOVE.l hunkoffsetbase,(A1)+
0002D250 <AmiBlitz3.ab3@15699>   MOVE.l lasta6,(A1)+
0002D256 <AmiBlitz3.ab3@15700>   MOVE.w lasta6,(A1)+
0002D258 <AmiBlitz3.ab3@15701>   CLR.w (A1)+
0002D25A <AmiBlitz3.ab3@15702>   CLR.w (A1)+
0002D260 <AmiBlitz3.ab3@15703>   MOVE.l A1,forthsp
0002D272 <AmiBlitz3.ab3@15705>    !compare2
0002D276 <AmiBlitz3.ab3@15706>    BEQ.w JL_0_B224
0002D27A <AmiBlitz3.ab3@15707>   CMP.w #".",D0
0002D27E <AmiBlitz3.ab3@15708>    BEQ.w JL_0_B21E
0002D282 <AmiBlitz3.ab3@15709>   CMP.w #"#",D0
0002D286 <AmiBlitz3.ab3@15710>    BEQ.w get_constant
0002D28A <AmiBlitz3.ab3@15711>   CMP.w #"$",D0
0002D28E <AmiBlitz3.ab3@15712>    BEQ.w get_hexconstant
0002D292 <AmiBlitz3.ab3@15713>   CMP.w #"%",D0
0002D296 <AmiBlitz3.ab3@15714>    BEQ.w JL_0_A8C0
0002D29A <AmiBlitz3.ab3@15715>   CMP.w #-$7FD1,D0
0002D29E <AmiBlitz3.ab3@15716>    BEQ.w _SizeOf
0002D2A2 <AmiBlitz3.ab3@15717>   CMP.w #-$7F46,D0
0002D2A6 <AmiBlitz3.ab3@15718>    BEQ.w JL_0_A44E
0002D2AA <AmiBlitz3.ab3@15719>   CMP.w #-$7F3B,D0
0002D2AE <AmiBlitz3.ab3@15720>    BEQ.w JL_0_A83C
0002D2B2 <AmiBlitz3.ab3@15721>   CMP.w #-$7F3A,D0
0002D2B6 <AmiBlitz3.ab3@15722>    BEQ.w JL_0_A846
0002D2BC <AmiBlitz3.ab3@15723>   MOVE.w constmode,D1
0002D2C0 <AmiBlitz3.ab3@15724>    BEQ.w JL_0_A776
0002D2E2 <AmiBlitz3.ab3@15725>    !compare1                                               ;bsr.w tstalpha
0002D2E6 <AmiBlitz3.ab3@15726>    BEQ.w JL_0_AF22
0002D2EA <AmiBlitz3.ab3@15727>   CMP.w #$5F,D0
0002D2EE <AmiBlitz3.ab3@15728>    BEQ.w JL_0_AF22
0002D2F2 <AmiBlitz3.ab3@15729>   CMP.w #$22,D0
0002D2F6 <AmiBlitz3.ab3@15730>    BEQ.w JL_0_AF00
0002D2FA <AmiBlitz3.ab3@15731> BRA.w syntaxerr
0002D300 <AmiBlitz3.ab3@15733> checkcast2 JMP checkcast
0002D306 <AmiBlitz3.ab3@15736>   MOVE.w cfetchmode,D1
0002D30A <AmiBlitz3.ab3@15737>   BEQ.w JL_0_A784
0002D30E <AmiBlitz3.ab3@15738> BRA.w badconerr
0002D314 <AmiBlitz3.ab3@15741> JMP syntaxerropt4
0002D316 <AmiBlitz3.ab3@15745>   NOT.w -(A1)
0002D338 <AmiBlitz3.ab3@15746>   !compare1                                                ;bsr.w tstalpha
0002D33C <AmiBlitz3.ab3@15747>    BEQ.w JL_0_AF4C
0002D340 <AmiBlitz3.ab3@15748>   CMP.w #$2A,D0
0002D344 <AmiBlitz3.ab3@15749>    BEQ.w JL_0_AF4C
0002D348 <AmiBlitz3.ab3@15750>   CMP.w #$5C,D0
0002D34C <AmiBlitz3.ab3@15751>    BEQ.w JL_0_AF4C
0002D350 <AmiBlitz3.ab3@15752>   CMP.w #$22,D0
0002D354 <AmiBlitz3.ab3@15753>    BEQ.w JL_0_ADC0
0002D358 <AmiBlitz3.ab3@15754>   BTST #$F,D0
0002D35C <AmiBlitz3.ab3@15755>    BNE.w JL_0_AAF2
0002D360 <AmiBlitz3.ab3@15756>   CMP.w #"&",D0
0002D364 <AmiBlitz3.ab3@15757>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D368 <AmiBlitz3.ab3@15758>   CMP.w #"?",D0
0002D36C <AmiBlitz3.ab3@15759>    BEQ.w JL_0_AED4
0002D370 <AmiBlitz3.ab3@15762>   CMP.b #"@",d0
0002D374 <AmiBlitz3.ab3@15763>    BNE syntaxerr
0002D37A <AmiBlitz3.ab3@15764>   TST.b newsyntax
0002D37E <AmiBlitz3.ab3@15765>    BEQ JUMP_syntaxerropt4
0002D384 <AmiBlitz3.ab3@15766>   MOVE.w regnum,D1
0002D386 <AmiBlitz3.ab3@15767>   LSL.w #8,D1
0002D388 <AmiBlitz3.ab3@15768>   LSL.w #1,D1
0002D38C <AmiBlitz3.ab3@15769>   ORI.w #$203C,D1
0002D390 <AmiBlitz3.ab3@15770>   BSR.w writeword
0002D394 <AmiBlitz3.ab3@15771>   CMP.b #$22,(a5)
0002D398 <AmiBlitz3.ab3@15772>    BNE syntaxerr
0002D39A <AmiBlitz3.ab3@15773>   ADDQ #1,a5
0002D39C <AmiBlitz3.ab3@15774>   MOVEQ #0,d0
0002D3A0 <AmiBlitz3.ab3@15775>   CMP.b #1,d2
0002D3A4 <AmiBlitz3.ab3@15776>    BEQ 'l3b
0002D3A8 <AmiBlitz3.ab3@15777>   CMP.b #2,d2
0002D3AC <AmiBlitz3.ab3@15778>    BEQ 'l2b
0002D3B0 <AmiBlitz3.ab3@15779>   CMP.b #4,d2
0002D3B4 <AmiBlitz3.ab3@15780>    BEQ error_convert_types
0002D3B6 <AmiBlitz3.ab3@15781>   MOVE.b (a5)+,d0
0002D3BA <AmiBlitz3.ab3@15782>   BEQ syntaxerr
0002D3BE <AmiBlitz3.ab3@15783>   CMP.b #$22,d0
0002D3C2 <AmiBlitz3.ab3@15784>   BNE 'l1
0002D3C6 <AmiBlitz3.ab3@15785>     MOVE.b #0,d0
0002D3CA <AmiBlitz3.ab3@15786> BRA 'do
0002D3CC <AmiBlitz3.ab3@15789>   ASL.l #8,d0
0002D3CE <AmiBlitz3.ab3@15790>   MOVE.b (a5)+,d0
0002D3D2 <AmiBlitz3.ab3@15791>   BEQ syntaxerr
0002D3D6 <AmiBlitz3.ab3@15792>   CMP.b #$22,d0
0002D3DA <AmiBlitz3.ab3@15793>   BNE 'l2
0002D3DE <AmiBlitz3.ab3@15794>     MOVE.b #0,d0
0002D3E0 <AmiBlitz3.ab3@15795>     ASR.l #8,d0
0002D3E4 <AmiBlitz3.ab3@15796> BRA 'do
0002D3E6 <AmiBlitz3.ab3@15799>   ASL.l #8,d0
0002D3E8 <AmiBlitz3.ab3@15802>   MOVE.b (a5)+,d0
0002D3EC <AmiBlitz3.ab3@15803>    BEQ syntaxerr
0002D3F0 <AmiBlitz3.ab3@15804>    CMP.b #$22,d0
0002D3F4 <AmiBlitz3.ab3@15805>    BNE 'l3
0002D3F8 <AmiBlitz3.ab3@15806>    MOVE.b #0,d0
0002D3FA <AmiBlitz3.ab3@15807>    ASR.l #8,d0
0002D3FE <AmiBlitz3.ab3@15808> BRA 'do
0002D400 <AmiBlitz3.ab3@15811>   ASL.l #8,d0
0002D402 <AmiBlitz3.ab3@15814>   MOVE.b (a5)+,d0
0002D406 <AmiBlitz3.ab3@15815>    BEQ syntaxerr
0002D40A <AmiBlitz3.ab3@15816>    CMP.b #$22,d0
0002D40E <AmiBlitz3.ab3@15817>    BNE 'l4
0002D412 <AmiBlitz3.ab3@15818>    MOVE.b #0,d0
0002D414 <AmiBlitz3.ab3@15819>    ASR.l #8,d0
0002D418 <AmiBlitz3.ab3@15820> BRA 'do
0002D41C <AmiBlitz3.ab3@15823>    CMP.b #$22,(a5)+
0002D420 <AmiBlitz3.ab3@15824>    BNE JUMP_error4char
0002D422 <AmiBlitz3.ab3@15827>   MOVE.l d0,d1
0002D426 <AmiBlitz3.ab3@15828>     BSR writelong
0002D42A <AmiBlitz3.ab3@15829>     BSR get1bytemain
0002D42C <AmiBlitz3.ab3@15830> RTS
0002D430 <AmiBlitz3.ab3@15834>   BSR.w get1bytemain
0002D434 <AmiBlitz3.ab3@15835>   CMP.w #$2E,D0
0002D438 <AmiBlitz3.ab3@15836>    BEQ.b JL_0_A7F4
0002D442 <AmiBlitz3.ab3@15838>   MOVE.w oldqflag,instringon
0002D448 <AmiBlitz3.ab3@15839>   MOVEA.l lastsourcepos,A5
0002D44A <AmiBlitz3.ab3@15840>   MOVE.w D2,-(A7)
0002D44E <AmiBlitz3.ab3@15841>    BSR.w getparameter2
0002D452 <AmiBlitz3.ab3@15842>    BEQ.w syntaxerr
0002D458 <AmiBlitz3.ab3@15843>   LEA varbase,A2
0002D45C <AmiBlitz3.ab3@15844>    BSR.w findvariable
0002D460 <AmiBlitz3.ab3@15845>    BNE.w notypeerr
0002D464 <AmiBlitz3.ab3@15846>   MOVE.w $4(A2),D3
0002D466 <AmiBlitz3.ab3@15847>   EXT.l D3
0002D468 <AmiBlitz3.ab3@15848>   MOVE.w (A7)+,D2
0002D46C <AmiBlitz3.ab3@15849> BRA.w JL_0_B46E
0002D46E <AmiBlitz3.ab3@15853>   MOVE.w D2,-(A7)
0002D472 <AmiBlitz3.ab3@15854>    BSR.w getparameter2
0002D476 <AmiBlitz3.ab3@15855>    BEQ.w syntaxerr
0002D47C <AmiBlitz3.ab3@15856>   LEA newtypebase,A2
0002D480 <AmiBlitz3.ab3@15857>    BSR.w findtype
0002D484 <AmiBlitz3.ab3@15858>    BNE.w notypeerr
0002D486 <AmiBlitz3.ab3@15859>   MOVEQ.l #$00,D3
0002D48A <AmiBlitz3.ab3@15860>   CMP.w #$5C,D0
0002D48E <AmiBlitz3.ab3@15861>    BNE.w JL_0_A832
0002D492 <AmiBlitz3.ab3@15862>    BSR.w getparameter2
0002D496 <AmiBlitz3.ab3@15863>    BEQ.w syntaxerr
0002D49A <AmiBlitz3.ab3@15864>   LEA $4(A2),A2
0002D49E <AmiBlitz3.ab3@15865>    BSR.w findvariable2
0002D4A2 <AmiBlitz3.ab3@15866>    BNE.w noofferr
0002D4A6 <AmiBlitz3.ab3@15867>   MOVE.w $4(A2),D3
0002D4AA <AmiBlitz3.ab3@15868> BRA.w JL_0_A836
0002D4AE <AmiBlitz3.ab3@15872>   MOVE.w $8(A2),D3
0002D4B0 <AmiBlitz3.ab3@15875>   MOVE.w (A7)+,D2
0002D4B4 <AmiBlitz3.ab3@15876> BRA.w JL_0_B46E
0002D4B6 <AmiBlitz3.ab3@15880>   MOVEQ.l #-$01,D3
0002D4BA <AmiBlitz3.ab3@15881>    BSR.w get1bytemain
0002D4BE <AmiBlitz3.ab3@15882> BRA.w JL_0_B46E
0002D4C0 <AmiBlitz3.ab3@15886>   MOVEQ.l #$00,D3
0002D4C4 <AmiBlitz3.ab3@15887>    BSR.w get1bytemain
0002D4C8 <AmiBlitz3.ab3@15888> BRA.w JL_0_B46E
0002D4CC <AmiBlitz3.ab3@15892>   CMP.w #$30,D0
0002D4D0 <AmiBlitz3.ab3@15893>    BCS.w JL_0_A876
0002D4D4 <AmiBlitz3.ab3@15894>   CMP.w #$39,D0
0002D4D8 <AmiBlitz3.ab3@15895>    BLS.w JL_0_A874
0002D4DC <AmiBlitz3.ab3@15896>   ANDI.w #$FFDF,D0
0002D4E0 <AmiBlitz3.ab3@15897>   CMP.w #$46,D0
0002D4E4 <AmiBlitz3.ab3@15898>    BHI.w JL_0_A876
0002D4E8 <AmiBlitz3.ab3@15899>   CMP.w #$41,D0
0002D4EC <AmiBlitz3.ab3@15900>    BCS.w JL_0_A876
0002D4EE <AmiBlitz3.ab3@15903>    CMP.w D0,D0
0002D4F0 <AmiBlitz3.ab3@15906> RTS
0002D4F4 <AmiBlitz3.ab3@15910>   CMP.w #$31,D0
0002D4F8 <AmiBlitz3.ab3@15911>    BEQ.w JL_0_A884
0002D4FC <AmiBlitz3.ab3@15912>   CMP.w #$30,D0
0002D4FE <AmiBlitz3.ab3@15915> RTS
0002D500 <AmiBlitz3.ab3@15919>    MOVEQ #0,d0
0002D502 <AmiBlitz3.ab3@15920>    MOVE.b (a5)+,d0
0002D504 <AmiBlitz3.ab3@15921>    MOVE.b (a5)+,d0
0002D508 <AmiBlitz3.ab3@15922>    BSR ishex
0002D50C <AmiBlitz3.ab3@15923>    BNE syntaxerr
0002D510 <AmiBlitz3.ab3@15924>    SUBI.w #$30,D0
0002D514 <AmiBlitz3.ab3@15925>    CMP.w #$9,D0
0002D518 <AmiBlitz3.ab3@15926>    BLS.w 'l1
0002D51A <AmiBlitz3.ab3@15927>    SUBQ.w #7,D0
0002D51C <AmiBlitz3.ab3@15930>    MOVE.l d0,d1
0002D51E <AmiBlitz3.ab3@15931>    MOVE.b (a5)+,d0
0002D522 <AmiBlitz3.ab3@15932>      BSR ishex
0002D526 <AmiBlitz3.ab3@15933>     BNE syntaxerr
0002D528 <AmiBlitz3.ab3@15934>     LSL.l #4,d1
0002D52C <AmiBlitz3.ab3@15935>     SUBI.w #$30,D0
0002D530 <AmiBlitz3.ab3@15936>    CMP.w #$9,D0
0002D534 <AmiBlitz3.ab3@15937>    BLS.w 'l2
0002D536 <AmiBlitz3.ab3@15938>    SUBQ.w #7,D0
0002D538 <AmiBlitz3.ab3@15941>   ADD.l d1,d0
0002D53A <AmiBlitz3.ab3@15942> RTS
0002D53E <AmiBlitz3.ab3@15946>    BSR.w get1bytemain
0002D542 <AmiBlitz3.ab3@15947>    BSR.w ishex
0002D546 <AmiBlitz3.ab3@15948>    BNE.w syntaxerr
0002D548 <AmiBlitz3.ab3@15949>   MOVEQ.l #$00,D3
0002D54C <AmiBlitz3.ab3@15950>   CMP.w #5,d2
0002D550 <AmiBlitz3.ab3@15951>   BNE JL_0_A894
0002D556 <AmiBlitz3.ab3@15952>   CMP.l #newtype_double,a2
0002D55A <AmiBlitz3.ab3@15953>   BEQ 'doit
0002D560 <AmiBlitz3.ab3@15954>   CMP.l #newtype_float,a2
0002D564 <AmiBlitz3.ab3@15955>   BNE JL_0_A894
0002D56C <AmiBlitz3.ab3@15958>    fmove.s #0,fp0
0002D572 <AmiBlitz3.ab3@15960>   TST.b fpu
0002D576 <AmiBlitz3.ab3@15961>   BEQ JL_0_A894
0002D57C <AmiBlitz3.ab3@15962>   fmove.w #16,fp1
0002D580 <AmiBlitz3.ab3@15963>   fmul.x fp1,fp0
0002D584 <AmiBlitz3.ab3@15964>   SUBI.w #$30,D0
0002D588 <AmiBlitz3.ab3@15965>   CMP.w #$9,D0
0002D58C <AmiBlitz3.ab3@15966>    BLS.w JL_0_A8AEa
0002D58E <AmiBlitz3.ab3@15967>   SUBQ.w #7,D0
0002D592 <AmiBlitz3.ab3@15970>    fmove.w d0,fp1
0002D596 <AmiBlitz3.ab3@15971>    fadd.x fp1,fp0
0002D59A <AmiBlitz3.ab3@15972>    BSR.w get1bytemain
0002D59E <AmiBlitz3.ab3@15973>    BSR.w ishex
0002D5A2 <AmiBlitz3.ab3@15974>    BEQ.w JL_0_A894a
0002D5A6 <AmiBlitz3.ab3@15975> BRA.w nofpregload
0002D5AC <AmiBlitz3.ab3@15979>   CMP.l #$10000000,D3
0002D5B0 <AmiBlitz3.ab3@15980>    BCC.w overerr
0002D5B2 <AmiBlitz3.ab3@15981>   LSL.l #4,D3
0002D5B6 <AmiBlitz3.ab3@15982>   SUBI.w #$30,D0
0002D5BA <AmiBlitz3.ab3@15983>   CMP.w #$9,D0
0002D5BE <AmiBlitz3.ab3@15984>    BLS.w JL_0_A8AE
0002D5C0 <AmiBlitz3.ab3@15985>   SUBQ.w #7,D0
0002D5C2 <AmiBlitz3.ab3@15988>   OR.w D0,D3
0002D5C6 <AmiBlitz3.ab3@15989>    BSR.w get1bytemain
0002D5CA <AmiBlitz3.ab3@15990>    BSR.w ishex
0002D5CE <AmiBlitz3.ab3@15991>    BEQ.w JL_0_A894
0002D5D2 <AmiBlitz3.ab3@15992> BRA.w JL_0_B46E
0002D5D6 <AmiBlitz3.ab3@15996>    BSR.w get1bytemain
0002D5DA <AmiBlitz3.ab3@15997>    BSR.w JL_0_A878
0002D5DE <AmiBlitz3.ab3@15998>    BNE.w syntaxerr
0002D5E0 <AmiBlitz3.ab3@15999>    MOVEQ.l #$00,D3
0002D5E2 <AmiBlitz3.ab3@16002>    LSL.l #1,D3
0002D5E6 <AmiBlitz3.ab3@16003>    BCS.w overerr
0002D5EA <AmiBlitz3.ab3@16004>   SUBI.w #$30,D0
0002D5EC <AmiBlitz3.ab3@16005>   OR.w D0,D3
0002D5F0 <AmiBlitz3.ab3@16006>    BSR.w get1bytemain
0002D5F4 <AmiBlitz3.ab3@16007>    BSR.w JL_0_A878
0002D5F8 <AmiBlitz3.ab3@16008>    BEQ.w JL_0_A8CE
0002D5FC <AmiBlitz3.ab3@16009> BRA.w JL_0_B46E
0002D5FE <AmiBlitz3.ab3@16013>    MOVE.w d2,-(A7)
0002D606 <AmiBlitz3.ab3@16014>    MOVE.b #0,automode
0002D60A <AmiBlitz3.ab3@16015>    CMP.b #"@",(a5)
0002D60E <AmiBlitz3.ab3@16016>    BNE 'l1
0002D610 <AmiBlitz3.ab3@16017>    ADDQ.l #1,a5
0002D618 <AmiBlitz3.ab3@16018>    MOVE.b #1,automode
0002D61C <AmiBlitz3.ab3@16019>    BSR getparameter2
0002D620 <AmiBlitz3.ab3@16020>    BSR findlabel2
0002D624 <AmiBlitz3.ab3@16021>    BNE 'addit
0002D628 <AmiBlitz3.ab3@16022> BRA errormsg_autocount
0002D62C <AmiBlitz3.ab3@16025>   BSR.w addlabelhash
0002D634 <AmiBlitz3.ab3@16026>   MOVE.l #$1,$4(A2)
0002D638 <AmiBlitz3.ab3@16027>   MOVEM.l a2/a5,-(a7)
0002D63E <AmiBlitz3.ab3@16028>   MOVE.w lastchar,-(a7)
0002D644 <AmiBlitz3.ab3@16029>   LEA autostorename,a5
0002D648 <AmiBlitz3.ab3@16030>   BSR getparameter2
0002D64C <AmiBlitz3.ab3@16031>   BSR findlabel2
0002D650 <AmiBlitz3.ab3@16032>   BEQ 'found
0002D654 <AmiBlitz3.ab3@16033>   BSR.w addlabelhash
0002D65C <AmiBlitz3.ab3@16034>   MOVE.l #$1,$4(A2)
0002D664 <AmiBlitz3.ab3@16035>   MOVE.l #0,8(a2)
0002D666 <AmiBlitz3.ab3@16038>    MOVE.w (a7)+,d0
0002D66C <AmiBlitz3.ab3@16039>    MOVE.w d0,lastchar
0002D670 <AmiBlitz3.ab3@16040>   MOVE.l 8(a2),d3
0002D678 <AmiBlitz3.ab3@16041>   ADD.l #1,8(a2)
0002D67C <AmiBlitz3.ab3@16042>   MOVEM.l (a7)+,a2/a5
0002D680 <AmiBlitz3.ab3@16043>   MOVE.l d3,8(a2)
0002D684 <AmiBlitz3.ab3@16044>   MOVE.l $8(A2),D3
0002D688 <AmiBlitz3.ab3@16045> BRA.l 'l3
0002D68C <AmiBlitz3.ab3@16048>   BSR.w getparameter2
0002D692 <AmiBlitz3.ab3@16049>     TST.b incnif
0002D696 <AmiBlitz3.ab3@16050>     BEQ 'lc1
0002D69A <AmiBlitz3.ab3@16051>     BSR.w findlabel2
0002D69E <AmiBlitz3.ab3@16052>     BNE 'l5
0002D6A0 <AmiBlitz3.ab3@16053>     MOVEQ #1,d3
0002D6A2 <AmiBlitz3.ab3@16054>     MOVE.w (A7)+,D2
0002D6A6 <AmiBlitz3.ab3@16055> BRA JL_0_B46E
0002D6A8 <AmiBlitz3.ab3@16058>   MOVEQ #0,d3
0002D6AA <AmiBlitz3.ab3@16059>     MOVE.w (A7)+,D2
0002D6AE <AmiBlitz3.ab3@16060> BRA JL_0_B46E
0002D6B2 <AmiBlitz3.ab3@16063>    BSR.w findlabel2
0002D6B6 <AmiBlitz3.ab3@16064>    BNE.w cnferr
0002D6BE <AmiBlitz3.ab3@16067>    CMPI.l #$1,$4(A2)
0002D6C2 <AmiBlitz3.ab3@16068>    BNE.w cnferr
0002D6C6 <AmiBlitz3.ab3@16070>    MOVE.l $8(A2),D3
0002D6C8 <AmiBlitz3.ab3@16071>    MOVE.w (A7)+,D2
0002D6CC <AmiBlitz3.ab3@16072> BRA.w JL_0_B46E
0002D6D2 <AmiBlitz3.ab3@16076>   CLR.w vartype
0002D6DA <AmiBlitz3.ab3@16077>   MOVE.b #3,peekaddrsize
0002D6DE <AmiBlitz3.ab3@16078>   BSR.w JL_0_A916
0002D6E4 <AmiBlitz3.ab3@16079>   MOVE.l a2,rightsidetype
0002D6E6 <AmiBlitz3.ab3@16080>   MOVEQ.l #$03,D2
0002D6E8 <AmiBlitz3.ab3@16081> RTS
0002D6EC <AmiBlitz3.ab3@16085>    BSR.w get1bytemain
0002D6FE <AmiBlitz3.ab3@16086>    !compare2
0002D702 <AmiBlitz3.ab3@16087>    BEQ andop2
0002D706 <AmiBlitz3.ab3@16088>    BSR.w getparameter
0002D70A <AmiBlitz3.ab3@16089>    BSR.w JL_0_8E3C
0002D70E <AmiBlitz3.ab3@16090>    BSR.w calcvar
0002D712 <AmiBlitz3.ab3@16091>   CMP.b #$7,D2
0002D716 <AmiBlitz3.ab3@16092>    BNE.w JL_0_A960
0002D71A <AmiBlitz3.ab3@16093>   BTST #$F,D2
0002D71E <AmiBlitz3.ab3@16094>    BNE.w JL_0_A94A
0002D724 <AmiBlitz3.ab3@16095>   MOVE.w D3,stamp2+2
0002D72A <AmiBlitz3.ab3@16096>   MOVE.l stamp2,D1
0002D72E <AmiBlitz3.ab3@16097>    BSR.w pokela5s
0002D732 <AmiBlitz3.ab3@16098> BRA.w JL_0_A978
0002D738 <AmiBlitz3.ab3@16102>   MOVE.w regnum,D1
0002D73A <AmiBlitz3.ab3@16103>   LSL.w #8,D1
0002D73C <AmiBlitz3.ab3@16104>   LSL.w #1,D1
0002D742 <AmiBlitz3.ab3@16105>   OR.w stamp,D1
0002D746 <AmiBlitz3.ab3@16106>    BSR.w writeword
0002D748 <AmiBlitz3.ab3@16107> RTS
0002D74C <AmiBlitz3.ab3@16111>   BTST #$F,D2
0002D750 <AmiBlitz3.ab3@16112>    BNE.w JL_0_A978
0002D756 <AmiBlitz3.ab3@16113>   MOVE.w D3,leaamp+2
0002D75C <AmiBlitz3.ab3@16114>   MOVE.l leaamp,D1
0002D760 <AmiBlitz3.ab3@16115>    BSR.w pokela5s
0002D766 <AmiBlitz3.ab3@16118>   MOVE.w regnum,D1
0002D768 <AmiBlitz3.ab3@16119>   LSL.w #8,D1
0002D76A <AmiBlitz3.ab3@16120>   LSL.w #1,D1
0002D770 <AmiBlitz3.ab3@16121>   OR.w leaamp2,D1
0002D774 <AmiBlitz3.ab3@16122> BRA.w writeword
0002D778 <AmiBlitz3.ab3@16126>   MOVE.w #$D200,D1
0002D77C <AmiBlitz3.ab3@16127>    BSR.w Atokejsr
0002D77E <AmiBlitz3.ab3@16128>   MOVEQ.l #$03,D2
0002D780 <AmiBlitz3.ab3@16129> RTS
0002D784 <AmiBlitz3.ab3@16133> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002D786 <AmiBlitz3.ab3@16134>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002D788 <AmiBlitz3.ab3@16135>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002D78C <AmiBlitz3.ab3@16141>    BSR.w get1bytemain
0002D78E <AmiBlitz3.ab3@16142>   MOVE.w D0,D1
0002D792 <AmiBlitz3.ab3@16143>    BPL.w syntaxerr
0002D794 <AmiBlitz3.ab3@16144>   MOVE.w D2,-(A7)
0002D798 <AmiBlitz3.ab3@16145>   BCLR #$F,D1
0002D79C <AmiBlitz3.ab3@16146>    BSR.w searchinstr
0002D7A0 <AmiBlitz3.ab3@16147>   MOVE.l $12(A2),D0
0002D7A4 <AmiBlitz3.ab3@16148>   TST.w -$2(A2,D0.L)
0002D7A8 <AmiBlitz3.ab3@16149>    BEQ.w freeerr
0002D7AA <AmiBlitz3.ab3@16150>   MOVE.w (A7)+,D2
0002D7AC <AmiBlitz3.ab3@16151> RTS
0002D7B0 <AmiBlitz3.ab3@16155>   MOVE.l $0(A5),D0
0002D7B4 <AmiBlitz3.ab3@16156>    BNE.b ucodeskip
0002D7B6 <AmiBlitz3.ab3@16157>   MOVEQ.l #-$01,D0
0002D7BA <AmiBlitz3.ab3@16158> BRA.b usedcodef
0002D7BE <AmiBlitz3.ab3@16161>   SUB.l $0(A5),D0
0002D7C0 <AmiBlitz3.ab3@16164>   LSR.w #8,D0
0002D7C4 <AmiBlitz3.ab3@16169>    MOVE.l $0(A5),D0
0002D7C8 <AmiBlitz3.ab3@16170>    BNE.b ucodeskip2
0002D7CA <AmiBlitz3.ab3@16171>   MOVEQ.l #-$01,D0
0002D7CE <AmiBlitz3.ab3@16172> BRA.b usedcode2f
0002D7D2 <AmiBlitz3.ab3@16175>   SUB.l $0(A5),D0                                          ;usedcode2
0002D7D4 <AmiBlitz3.ab3@16176>   LSR.w #8,D0
0002D7D6 <AmiBlitz3.ab3@16179>   LSR.w #8,D0
0002D7D8 <AmiBlitz3.ab3@16184>   MOVE.l D0,-(A7)
0002D7DA <AmiBlitz3.ab3@16187>   MOVE.l (A7)+,D0
0002D7DC <AmiBlitz3.ab3@16190>   MOVE.l D0,D0
0002D7E0 <AmiBlitz3.ab3@16196>   BSR.w JL_0_A9A0
0002D7E4 <AmiBlitz3.ab3@16198>   MOVE.w -$2(A2,D0.L),D3
0002D7E8 <AmiBlitz3.ab3@16199>   CMP.w #$9,D3
0002D7EC <AmiBlitz3.ab3@16200>    BCC.w doused__skip
0002D7F0 <AmiBlitz3.ab3@16204>   LEA usedcode(PC),A0
0002D7F4 <AmiBlitz3.ab3@16205>   LEA usedcodef(PC),A1
0002D7FA <AmiBlitz3.ab3@16207>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002D7FE <AmiBlitz3.ab3@16208>   ANDI.w #$7,D3
0002D800 <AmiBlitz3.ab3@16209>   LSL.w #8,D3
0002D802 <AmiBlitz3.ab3@16210>   LSL.w #1,D3
0002D806 <AmiBlitz3.ab3@16211>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002D80A <AmiBlitz3.ab3@16212> BRA.w doused__skip2
0002D80E <AmiBlitz3.ab3@16217>   LEA usedcode2(PC),A0
0002D812 <AmiBlitz3.ab3@16218>   LEA usedcode2f(PC),A1
0002D818 <AmiBlitz3.ab3@16220>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002D81A <AmiBlitz3.ab3@16221>   SUBQ.w #8,D3
0002D81C <AmiBlitz3.ab3@16222>   LSL.w #8,D3
0002D81E <AmiBlitz3.ab3@16223>   LSL.w #1,D3
0002D822 <AmiBlitz3.ab3@16224>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002D826 <AmiBlitz3.ab3@16227>   MOVE.w -$6(A2,D0.L),D3
0002D82A <AmiBlitz3.ab3@16228>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002D82C <AmiBlitz3.ab3@16229>   ADDQ.w #4,D3
0002D830 <AmiBlitz3.ab3@16230>   MOVE.w D3,$2(A0)
0002D836 <AmiBlitz3.ab3@16231>   MOVE.w regnum,D1
0002D83A <AmiBlitz3.ab3@16232>    BEQ.w doused__skip3
0002D83E <AmiBlitz3.ab3@16233>   MOVE.w usedprep(PC),D1
0002D842 <AmiBlitz3.ab3@16234>    BSR.w writeword
0002D846 <AmiBlitz3.ab3@16237>   BSR.w pokecode
0002D84C <AmiBlitz3.ab3@16238>   MOVE.w regnum,D1
0002D850 <AmiBlitz3.ab3@16239>    BEQ.w doused__skip4
0002D852 <AmiBlitz3.ab3@16240>   LSL.w #8,D1
0002D854 <AmiBlitz3.ab3@16241>   LSL.w #1,D1
0002D858 <AmiBlitz3.ab3@16242>   OR.w usedfix(PC),D1
0002D85C <AmiBlitz3.ab3@16243>    BSR.w writeword
0002D860 <AmiBlitz3.ab3@16244>   MOVE.w useddone(PC),D1
0002D864 <AmiBlitz3.ab3@16245>    BSR.w writeword
0002D866 <AmiBlitz3.ab3@16248>    MOVEQ.l #$02,D2
0002D86A <AmiBlitz3.ab3@16249> BRA.w get1bytemain
0002D86E <AmiBlitz3.ab3@16257>    BSR.w JL_0_A9A0
0002D870 <AmiBlitz3.ab3@16259>   MOVEQ.l #$00,D3
0002D874 <AmiBlitz3.ab3@16260>   MOVE.w -$4(A2,D0.L),D3
0002D878 <AmiBlitz3.ab3@16261>    BSR.w get1bytemain
0002D87C <AmiBlitz3.ab3@16262> BRA.w JL_0_B46E
0002D880 <AmiBlitz3.ab3@16269>    BSR.w get1bytemain
0002D882 <AmiBlitz3.ab3@16270>   MOVE.w D0,-(A7)
0002D886 <AmiBlitz3.ab3@16271>    BSR.w get1bytemain
0002D88A <AmiBlitz3.ab3@16272>   CMP.w #$28,D0
0002D88E <AmiBlitz3.ab3@16273>    BNE.w syntaxerr
0002D890 <AmiBlitz3.ab3@16274>   MOVE.w (A7)+,D0
0002D894 <AmiBlitz3.ab3@16275>    BSR.w JL_0_C340
0002D898 <AmiBlitz3.ab3@16276>    BSR.w reget
0002D89C <AmiBlitz3.ab3@16277>   CMP.w #$29,D0
0002D8A0 <AmiBlitz3.ab3@16278>    BNE.w syntaxerr
0002D8A4 <AmiBlitz3.ab3@16282>   LEA addrcode(PC),A0
0002D8A8 <AmiBlitz3.ab3@16283>   LEA addrcodef(PC),A1
0002D8AE <AmiBlitz3.ab3@16284>   MOVE.w -$6(A2),$2(A0)
0002D8B2 <AmiBlitz3.ab3@16285>   MOVE.w $4(A0),D1
0002D8B6 <AmiBlitz3.ab3@16286>   ANDI.w #$FFF8,D1
0002D8BC <AmiBlitz3.ab3@16287>   OR.w regnum,D1
0002D8C0 <AmiBlitz3.ab3@16288>   MOVE.w D1,$4(A0)
0002D8C4 <AmiBlitz3.ab3@16289>   MOVE.w $6(A0),D1
0002D8C8 <AmiBlitz3.ab3@16290>   ANDI.w #$F1FF,D1
0002D8CE <AmiBlitz3.ab3@16291>   MOVE.w regnum,D0
0002D8D0 <AmiBlitz3.ab3@16292>   LSL.w #8,D0
0002D8D2 <AmiBlitz3.ab3@16293>   LSL.w #1,D0
0002D8D4 <AmiBlitz3.ab3@16294>   OR.w D0,D1
0002D8D8 <AmiBlitz3.ab3@16295>   MOVE.w D1,$6(A0)
0002D8DC <AmiBlitz3.ab3@16296>    BSR.w pokecode
0002D8DE <AmiBlitz3.ab3@16297>   MOVEQ.l #$03,D2
0002D8E2 <AmiBlitz3.ab3@16298> BRA.w get1bytemain
0002D8E6 <AmiBlitz3.ab3@16302>   CMP.w #-$7F4D,D0
0002D8EA <AmiBlitz3.ab3@16303>    BHI.w JL_0_AAFE
0002D8EE <AmiBlitz3.ab3@16304> BRA.w syntaxerr
0002D8F2 <AmiBlitz3.ab3@16311> .do_null   CMP.w #$b581,d0
0002D8F6 <AmiBlitz3.ab3@16312>    BNE 'nonull
0002D8FC <AmiBlitz3.ab3@16313>    MOVE.l d0,lastinstruction
0002D900 <AmiBlitz3.ab3@16314>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002D906 <AmiBlitz3.ab3@16315>    MOVE.w regnum,d0
0002D908 <AmiBlitz3.ab3@16316>    ASL.l #7,d0
0002D90A <AmiBlitz3.ab3@16317>    ASL.l #2,d0
0002D90C <AmiBlitz3.ab3@16318>    OR.l d0,d1
0002D910 <AmiBlitz3.ab3@16319>    BSR writeword
0002D916 <AmiBlitz3.ab3@16320>    JSR get1bytemain
0002D918 <AmiBlitz3.ab3@16321>    RTS
0002D91C <AmiBlitz3.ab3@16323> 'nonull CMP.w #$c982,d0
0002D920 <AmiBlitz3.ab3@16324>        BNE nonew_
0002D922 <AmiBlitz3.ab3@16326>   MOVE.l a5,-(a7)
0002D928 <AmiBlitz3.ab3@16327>   MOVE.w lastchar,-(a7)
0002D92E <AmiBlitz3.ab3@16328>   JSR get1bytemain
0002D932 <AmiBlitz3.ab3@16329>   CMP.w #"(",d0                                             ; use oldcode
0002D936 <AmiBlitz3.ab3@16330>   BNE 'newcode
0002D93C <AmiBlitz3.ab3@16331>   JSR get1bytemain
0002D940 <AmiBlitz3.ab3@16332>   CMP.w #")",d0
0002D944 <AmiBlitz3.ab3@16333>   BEQ 'newcode
0002D94A <AmiBlitz3.ab3@16334>   MOVE.w (a7)+,lastchar
0002D94C <AmiBlitz3.ab3@16335>   MOVE.l (a7)+,a5
0002D952 <AmiBlitz3.ab3@16336>   MOVE.w lastchar,d0
0002D956 <AmiBlitz3.ab3@16337>   BRA nonew_
0002D958 <AmiBlitz3.ab3@16338> 'newcode  MOVE.l a0,-(a7)
0002D95E <AmiBlitz3.ab3@16339>   TST.b blitzparloop
0002D962 <AmiBlitz3.ab3@16340>   BNE 'err
0002D968 <AmiBlitz3.ab3@16341>   TST.b funcparloop
0002D96C <AmiBlitz3.ab3@16342>   BNE 'err
0002D970 <AmiBlitz3.ab3@16343>   BRA 'ok
0002D976 <AmiBlitz3.ab3@16344> 'err JMP errornewnotincalls
0002D97C <AmiBlitz3.ab3@16345> 'ok  MOVE.l #$203c0000,d1
0002D980 <AmiBlitz3.ab3@16346>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002D982 <AmiBlitz3.ab3@16347>   MOVEQ #0,d1
0002D986 <AmiBlitz3.ab3@16348>   MOVE.w 8(a0),d1
0002D98A <AmiBlitz3.ab3@16349>   BSR writeword
0002D98E <AmiBlitz3.ab3@16350>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002D992 <AmiBlitz3.ab3@16351>   BSR writeword
0002D996 <AmiBlitz3.ab3@16352>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002D99A <AmiBlitz3.ab3@16353>   BSR.w tokejsr2
0002D99C <AmiBlitz3.ab3@16354>   MOVE.l (a7)+,a0
0002D99E <AmiBlitz3.ab3@16355>   ADDQ.l #6,a7                      ; a5 need not restore
0002D9A2 <AmiBlitz3.ab3@16356>   CMP.w #")",d0
0002D9A6 <AmiBlitz3.ab3@16357>   BNE 'nobracket
0002D9AC <AmiBlitz3.ab3@16358>   JSR get1bytemain
0002D9AE <AmiBlitz3.ab3@16359> 'nobracket  RTS
0002D9B2 <AmiBlitz3.ab3@16361> nonew_  CMP.w #-$7F4A,D0
0002D9B6 <AmiBlitz3.ab3@16362>    BEQ.w JL_0_A98C
0002D9BA <AmiBlitz3.ab3@16363>   CMP.w #-$7F48,D0
0002D9BE <AmiBlitz3.ab3@16364>    BEQ.w doaddr
0002D9C2 <AmiBlitz3.ab3@16365>   CMP.w #-$7F3C,D0
0002D9C6 <AmiBlitz3.ab3@16366>    BEQ.w domaximum
0002D9CA <AmiBlitz3.ab3@16367>   CMP.w #-$7F2F,D0
0002D9CE <AmiBlitz3.ab3@16368>    BEQ.w doused
0002D9D0 <AmiBlitz3.ab3@16369>   MOVE.w D2,-(A7)
0002D9D2 <AmiBlitz3.ab3@16370>   MOVE.w D0,D1
0002D9D6 <AmiBlitz3.ab3@16371>   BCLR #$F,D1
0002D9DA <AmiBlitz3.ab3@16373>    BSR.w searchinstr
0002D9DC <AmiBlitz3.ab3@16374>   MOVE.w (A3),D1
0002D9E0 <AmiBlitz3.ab3@16375>   BTST #$1,D1
0002D9E4 <AmiBlitz3.ab3@16376>    BEQ.w noreturn_                                         ;syntax error noreturn
0002D9E8 <AmiBlitz3.ab3@16377>   BTST #$2,D1
0002D9EC <AmiBlitz3.ab3@16378>    BNE.w JL_0_AC1A
0002D9EE <AmiBlitz3.ab3@16379>   LSR.w #8,D1
0002D9F4 <AmiBlitz3.ab3@16380>   BTST #$3,$1(A3)
0002D9F8 <AmiBlitz3.ab3@16381>    BEQ.w JL_0_AB4C
0002D9FE <AmiBlitz3.ab3@16382>    JSR AJL_0_498A
0002DA04 <AmiBlitz3.ab3@16385>    CLR.l rightsidetype
0002DA06 <AmiBlitz3.ab3@16386>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DA0A <AmiBlitz3.ab3@16387>   CMP.w #$7,D1
0002DA0E <AmiBlitz3.ab3@16388>    BNE.w JL_0_AB5E
0002DA10 <AmiBlitz3.ab3@16389>   MOVE.l A2,-(A7)
0002DA14 <AmiBlitz3.ab3@16390>    BSR.w makesbase
0002DA16 <AmiBlitz3.ab3@16391>   MOVEA.l (A7)+,A2
0002DA1A <AmiBlitz3.ab3@16394>     BSR.w JL_0_AFA2
0002DA1C <AmiBlitz3.ab3@16395>   MOVE.w D3,-(A7)
0002DA20 <AmiBlitz3.ab3@16396>    BSR.w get1bytemain
0002DA22 <AmiBlitz3.ab3@16397>   MOVEQ.l #$00,D1
0002DA26 <AmiBlitz3.ab3@16398>   CMP.w #$28,D0
0002DA2A <AmiBlitz3.ab3@16399>    BNE.w JL_0_AB80
0002DA30 <AmiBlitz3.ab3@16400>    JSR JL_0_66F6
0002DA32 <AmiBlitz3.ab3@16401>   TST.w D1
0002DA36 <AmiBlitz3.ab3@16402>    BEQ.w syntaxerr
0002DA3A <AmiBlitz3.ab3@16403> BRA.w JL_0_AB84
0002DA44 <AmiBlitz3.ab3@16408>   MOVE.w oldqflag,instringon
0002DA4A <AmiBlitz3.ab3@16409>   MOVEA.l lastsourcepos,A5
0002DA50 <AmiBlitz3.ab3@16412>    MOVE.w regnum,-(A7)
0002DA5A <AmiBlitz3.ab3@16413>    MOVE.w regnum,regnumstore
0002DA60 <AmiBlitz3.ab3@16414>    TST.b fpu
0002DA64 <AmiBlitz3.ab3@16415>             BEQ 'nofloat
0002DA6A <AmiBlitz3.ab3@16416>             CMP.w #$ffff,28(a3)
0002DA6E <AmiBlitz3.ab3@16417>             BNE 'nofloat
0002DA74 <AmiBlitz3.ab3@16418>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DA78 <AmiBlitz3.ab3@16419>             BEQ 'nofloat
0002DA7E <AmiBlitz3.ab3@16420>             CMP.w #$3c02,34(a3)                            ;int skip
0002DA82 <AmiBlitz3.ab3@16421>             BEQ 'quick
0002DA86 <AmiBlitz3.ab3@16422>             CMP.b #5,(a3)
0002DA8A <AmiBlitz3.ab3@16423>             BNE 'nofloat
0002DA90 <AmiBlitz3.ab3@16426>             CLR.l load_var_addr
0002DA94 <AmiBlitz3.ab3@16427> BRA 'isfpu
0002DA9A <AmiBlitz3.ab3@16430>    CLR.w regnum
0002DA9C <AmiBlitz3.ab3@16433>    MOVE.w D1,-(A7)
0002DAA2 <AmiBlitz3.ab3@16434>   BTST #$3,$1(A3)
0002DAA6 <AmiBlitz3.ab3@16435>    BEQ.w JL_0_ABB0
0002DAAA <AmiBlitz3.ab3@16454>   MOVE.w $6(A7),D1
0002DAB0 <AmiBlitz3.ab3@16455>   MOVE.w d1,peeksize
0002DAB4 <AmiBlitz3.ab3@16465>   ORI.w #$7000,D1
0002DAB8 <AmiBlitz3.ab3@16466>   BSR.w writeword                                          ;write peekmode
0002DABE <AmiBlitz3.ab3@16469>   ADDQ.w #1,regnum
0002DAC0 <AmiBlitz3.ab3@16470>   MOVE.w (A7),D1
0002DAC8 <AmiBlitz3.ab3@16473>   MOVE.w 2(a7),tempregnum
0002DACE <AmiBlitz3.ab3@16474>   JSR JL_0_4878
0002DAD0 <AmiBlitz3.ab3@16475>   TST.w (A7)+
0002DAD4 <AmiBlitz3.ab3@16476>   BEQ.w JL_0_ABC6
0002DAD8 <AmiBlitz3.ab3@16477>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002DADC <AmiBlitz3.ab3@16478>   BNE.w errorbracketmiss                                    ; was syntax error
0002DAE2 <AmiBlitz3.ab3@16479>   CLR.l lasttoken
0002DAE6 <AmiBlitz3.ab3@16480>   BSR.w get1bytemain
0002DAE8 <AmiBlitz3.ab3@16483>    MOVE.w (A7)+,D1
0002DAEE <AmiBlitz3.ab3@16484>   MOVE.w D1,regnum
0002DAF2 <AmiBlitz3.ab3@16485>    BEQ.w JL_0_ABDE
0002DAF8 <AmiBlitz3.ab3@16486>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002DAFC <AmiBlitz3.ab3@16487>    BNE 'noval
0002DB02 <AmiBlitz3.ab3@16488>    TST.b fpu
0002DB06 <AmiBlitz3.ab3@16489>    BEQ 'noval
0002DB0C <AmiBlitz3.ab3@16490>    CLR.l load_var_addr
0002DB0E <AmiBlitz3.ab3@16491>    MOVEQ #0,d1
0002DB14 <AmiBlitz3.ab3@16492>    MOVE.w regnum,d1
0002DB16 <AmiBlitz3.ab3@16493>    LSL.l #7,d1
0002DB1C <AmiBlitz3.ab3@16494>    OR.l #$f2000000,d1
0002DB20 <AmiBlitz3.ab3@16495>    BSR writelong
0002DB24 <AmiBlitz3.ab3@16496> BRA JL_0_ABDE
0002DB2A <AmiBlitz3.ab3@16500>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002DB2E <AmiBlitz3.ab3@16501>    BEQ 'quick
0002DB32 <AmiBlitz3.ab3@16502>    CMP.b #5,d2
0002DB36 <AmiBlitz3.ab3@16503>    BNE 'nofpu
0002DB3C <AmiBlitz3.ab3@16504>    TST.b fpu
0002DB40 <AmiBlitz3.ab3@16505>    BEQ 'nofpu
0002DB46 <AmiBlitz3.ab3@16510>    CLR.l load_var_addr
0002DB4A <AmiBlitz3.ab3@16511> BRA JL_0_ABDE
0002DB4C <AmiBlitz3.ab3@16514>   LSL.w #8,D1
0002DB4E <AmiBlitz3.ab3@16515>   LSL.w #1,D1
0002DB52 <AmiBlitz3.ab3@16516>   ORI.w #$2000,D1
0002DB56 <AmiBlitz3.ab3@16517>   BSR.w writeword                                          ;write move.l d0,dx
0002DB5C <AmiBlitz3.ab3@16518>   TST.b fpu
0002DB60 <AmiBlitz3.ab3@16519>   BEQ JL_0_ABDE
0002DB62 <AmiBlitz3.ab3@16520>   MOVEQ #0,d1
0002DB68 <AmiBlitz3.ab3@16521>   MOVE.w regnum,d1
0002DB6A <AmiBlitz3.ab3@16522>   LSL.l #7,d1
0002DB70 <AmiBlitz3.ab3@16523>   OR.l #$f2000000,d1
0002DB72 <AmiBlitz3.ab3@16527>        MOVE.w (A7)+,D3
0002DB76 <AmiBlitz3.ab3@16528>        BEQ.w JL_0_ABFC
0002DB7C <AmiBlitz3.ab3@16529>        TST.b fpu
0002DB80 <AmiBlitz3.ab3@16530>        BEQ 'nofpu
0002DB82 <AmiBlitz3.ab3@16531>       MOVE.l d0,-(a7)
0002DB84 <AmiBlitz3.ab3@16532>        MOVE.l a0,-(a7)
0002DB8A <AmiBlitz3.ab3@16533>        MOVE.l stacktrack,d1
0002DB90 <AmiBlitz3.ab3@16534>        LEA fpustackbase,a0
0002DB98 <AmiBlitz3.ab3@16535>        MOVE.w 0(a0,d1),regmask
0002DB9A <AmiBlitz3.ab3@16536>        MOVE.l (a7)+,a0
0002DB9E <AmiBlitz3.ab3@16537>       MOVE.w #8,d0
0002DBA2 <AmiBlitz3.ab3@16540>       BEQ 'ready
0002DBA8 <AmiBlitz3.ab3@16541>       BTST d0,regmask
0002DBAC <AmiBlitz3.ab3@16542>       BEQ 'noa7
0002DBAE <AmiBlitz3.ab3@16543>       MOVEQ #0,d1
0002DBB0 <AmiBlitz3.ab3@16544>       MOVE.w d0,d1
0002DBB2 <AmiBlitz3.ab3@16545>       SUBQ.w #1,d1
0002DBB4 <AmiBlitz3.ab3@16546>       ASL #7,d1
0002DBBA <AmiBlitz3.ab3@16548>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002DBBE <AmiBlitz3.ab3@16549>       BSR writelong
0002DBC4 <AmiBlitz3.ab3@16550>       SUBQ.l #2,stacktrack
0002DBC6 <AmiBlitz3.ab3@16553>       SUBQ.w #1,d0
0002DBCA <AmiBlitz3.ab3@16554>       BNE 'loop
0002DBCC <AmiBlitz3.ab3@16557>       MOVE.l (a7)+,d0
0002DBD2 <AmiBlitz3.ab3@16558>       SUBQ.l #2,stacktrack                                 ;int track
0002DBD6 <AmiBlitz3.ab3@16561>    MOVE.w #$4CDF,D1
0002DBDA <AmiBlitz3.ab3@16562>    BSR.w writeword                                         ;write movem.l (a7)+,
0002DBDC <AmiBlitz3.ab3@16563>   MOVEQ.l #$00,D1
0002DBDE <AmiBlitz3.ab3@16564>   MOVEQ.l #$0F,D4
0002DBE0 <AmiBlitz3.ab3@16567>     LSL.w #1,D3
0002DBE2 <AmiBlitz3.ab3@16568>     ROXR.w #1,D1
0002DBE6 <AmiBlitz3.ab3@16569>   DBF D4,JL_0_ABF0
0002DBEA <AmiBlitz3.ab3@16571>    BSR.w writeword
0002DBF0 <AmiBlitz3.ab3@16572>    TST.b fast
0002DBF4 <AmiBlitz3.ab3@16573>    BEQ JL_0_ABFC
0002DBFA <AmiBlitz3.ab3@16574>    TST.w regnum
0002DBFE <AmiBlitz3.ab3@16575>    BEQ JL_0_ABFC
0002DC04 <AmiBlitz3.ab3@16576>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002DC08 <AmiBlitz3.ab3@16577>    BNE 'l1
0002DC0E <AmiBlitz3.ab3@16578>    MOVE.w regnum,d1
0002DC10 <AmiBlitz3.ab3@16579>    ASL.l #8,d1
0002DC12 <AmiBlitz3.ab3@16580>    ASL.l #1,d1
0002DC16 <AmiBlitz3.ab3@16581>    OR.w #$70ff,d1
0002DC20 <AmiBlitz3.ab3@16582>    SUB.l #12,destpointer
0002DC24 <AmiBlitz3.ab3@16583>    BSR writeword
0002DC2A <AmiBlitz3.ab3@16586>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002DC2E <AmiBlitz3.ab3@16587>    BNE 'l2
0002DC34 <AmiBlitz3.ab3@16588>     MOVE.w regnum,d1
0002DC36 <AmiBlitz3.ab3@16589>     ASL.l #8,d1
0002DC38 <AmiBlitz3.ab3@16590>     ASL.l #1,d1
0002DC3C <AmiBlitz3.ab3@16591>     OR.w #$7000,d1
0002DC46 <AmiBlitz3.ab3@16592>     SUB.l #12,destpointer
0002DC4A <AmiBlitz3.ab3@16593>     BSR writeword
0002DC4C <AmiBlitz3.ab3@16597>    MOVE.w (A7)+,D2
0002DC50 <AmiBlitz3.ab3@16598>   CMP.w #$7,D2                                             ;destination var type
0002DC54 <AmiBlitz3.ab3@16599>    BNE.w JL_0_AC16
0002DC5A <AmiBlitz3.ab3@16600>   MOVE.w putstlen,D1
0002DC60 <AmiBlitz3.ab3@16601>   OR.w regnum,D1
0002DC64 <AmiBlitz3.ab3@16602>    BSR.w writeword
0002DC68 <AmiBlitz3.ab3@16605> BRA.w JL_0_AF66
0002DC6C <AmiBlitz3.ab3@16610>   MOVE.w $6(A3),D1
0002DC70 <AmiBlitz3.ab3@16611>    BSR.w uselib
0002DC74 <AmiBlitz3.ab3@16612>    BSR.w JL_0_AD40
0002DC76 <AmiBlitz3.ab3@16613>   MOVE.l D4,D1
0002DC78 <AmiBlitz3.ab3@16614>   MOVE.l D5,-(A7)
0002DC7C <AmiBlitz3.ab3@16615>    BSR.w JL_0_AD38
0002DC80 <AmiBlitz3.ab3@16616>   MOVE.w $A(A1),-(A7)
0002DC82 <AmiBlitz3.ab3@16617>   ADDQ.w #8,A3
0002DC84 <AmiBlitz3.ab3@16618>   MOVE.w (A3)+,-(A7)
0002DC86 <AmiBlitz3.ab3@16619>   MOVE.l A3,-(A7)
0002DC8A <AmiBlitz3.ab3@16620>    BSR.w get1bytemain
0002DC8C <AmiBlitz3.ab3@16621>   MOVE.w D0,-(A7)
0002DC8E <AmiBlitz3.ab3@16622>   MOVEQ.l #$00,D3
0002DC94 <AmiBlitz3.ab3@16623>   JSR checka4a5
0002DC96 <AmiBlitz3.ab3@16625>   MOVE.b (A3)+,D1
0002DC9A <AmiBlitz3.ab3@16626>    BMI.w JL_0_AC6A
0002DC9C <AmiBlitz3.ab3@16627>   MOVEQ.l #$03,D2
0002DC9E <AmiBlitz3.ab3@16628>   ADDQ.w #1,D3
0002DCA2 <AmiBlitz3.ab3@16629>   MOVEM.l D3/A3,-(A7)
0002DCA8 <AmiBlitz3.ab3@16630>   MOVE.b funcparloop,-(a7)
0002DCAE <AmiBlitz3.ab3@16631>   CLR.b funcparloop
0002DCB4 <AmiBlitz3.ab3@16632>   MOVE.b blitzparloop,-(a7)
0002DCBC <AmiBlitz3.ab3@16633>   MOVE.b #1,blitzparloop
0002DCC2 <AmiBlitz3.ab3@16634>   MOVE.l lasttoken,-(a7)
0002DCC8 <AmiBlitz3.ab3@16635>   MOVE.l leftsidetype,-(a7)
0002DCCE <AmiBlitz3.ab3@16636>   MOVE.l rightsidetype,-(a7)
0002DCD2 <AmiBlitz3.ab3@16637>   BSR.w peval
0002DCD8 <AmiBlitz3.ab3@16638>   MOVE.l (a7)+,rightsidetype
0002DCDE <AmiBlitz3.ab3@16639>   MOVE.l (a7)+,leftsidetype
0002DCE4 <AmiBlitz3.ab3@16640>   MOVE.l (a7)+,lasttoken
0002DCEA <AmiBlitz3.ab3@16641>   MOVE.b (a7)+,blitzparloop
0002DCF0 <AmiBlitz3.ab3@16642>   MOVE.b (a7)+,funcparloop
0002DCF6 <AmiBlitz3.ab3@16643>   SUBQ.w #4,a2offset
0002DCFA <AmiBlitz3.ab3@16644>   MOVEM.l (A7)+,D3/A3
0002DCFE <AmiBlitz3.ab3@16645>   CMP.w #$2C,D0
0002DD02 <AmiBlitz3.ab3@16646>    BEQ.w JL_0_AC40
0002DD04 <AmiBlitz3.ab3@16647>   TST.b (A3)
0002DD08 <AmiBlitz3.ab3@16648>    BPL.w syntaxerr
0002DD0A <AmiBlitz3.ab3@16651>   MOVE.w (A7)+,D1
0002DD0E <AmiBlitz3.ab3@16652>    BSR.w JL_0_AD04
0002DD10 <AmiBlitz3.ab3@16653>   MOVEA.l (A7)+,A3
0002DD12 <AmiBlitz3.ab3@16654>   SUBQ.w #1,D3
0002DD16 <AmiBlitz3.ab3@16655>    BMI.w JL_0_ACBE
0002DD18 <AmiBlitz3.ab3@16658>   TST.b (A3)+
0002DD1C <AmiBlitz3.ab3@16659>    BPL.w JL_0_AC78
0002DD1E <AmiBlitz3.ab3@16660>   SUBQ.w #1,A3
0002DD20 <AmiBlitz3.ab3@16663>     MOVEQ.l #$00,D1
0002DD22 <AmiBlitz3.ab3@16664>     MOVE.b -(A3),D1
0002DD26 <AmiBlitz3.ab3@16665>     BTST #$4,D1
0002DD2A <AmiBlitz3.ab3@16666>      BNE.w JL_0_ACAA
0002DD30 <AmiBlitz3.ab3@16667>     CMP.w regnum,D1
0002DD34 <AmiBlitz3.ab3@16668>      BCC.w JL_0_AC9E
0002DD36 <AmiBlitz3.ab3@16669>     BSET D1,D5
0002DD38 <AmiBlitz3.ab3@16670>     MOVEQ.l #$0F,D0
0002DD3A <AmiBlitz3.ab3@16671>     SUB.w D1,D0
0002DD3C <AmiBlitz3.ab3@16672>     BSET D0,D4
0002DD3E <AmiBlitz3.ab3@16675>     LSL.w #8,D1
0002DD40 <AmiBlitz3.ab3@16676>     LSL.w #1,D1
0002DD44 <AmiBlitz3.ab3@16677>     ORI.w #$201F,D1
0002DD48 <AmiBlitz3.ab3@16678>   BRA.w JL_0_ACB6
0002DD4C <AmiBlitz3.ab3@16681>     ANDI.w #$7,D1
0002DD4E <AmiBlitz3.ab3@16682>     LSL.w #8,D1
0002DD50 <AmiBlitz3.ab3@16683>     LSL.w #1,D1
0002DD54 <AmiBlitz3.ab3@16684>     ORI.w #$205F,D1
0002DD58 <AmiBlitz3.ab3@16687>      BSR.w writeword
0002DD5C <AmiBlitz3.ab3@16688>   DBF D3,JL_0_AC80
0002DD62 <AmiBlitz3.ab3@16691>   MOVE.w (A7)+,libjsr+2
0002DD68 <AmiBlitz3.ab3@16692>   MOVE.w (A7)+,libbase+2
0002DD6E <AmiBlitz3.ab3@16693>   MOVE.l libbase,D1
0002DD72 <AmiBlitz3.ab3@16694>    BSR.w writelong
0002DD78 <AmiBlitz3.ab3@16695>   MOVE.l libjsr,D1
0002DD7C <AmiBlitz3.ab3@16696>    BSR.w writelong
0002DD82 <AmiBlitz3.ab3@16697>   MOVE.w regnum,D1
0002DD86 <AmiBlitz3.ab3@16698>    BEQ.w JL_0_ACF4
0002DD88 <AmiBlitz3.ab3@16699>   LSL.w #8,D1
0002DD8A <AmiBlitz3.ab3@16700>   LSL.w #1,D1
0002DD8E <AmiBlitz3.ab3@16701>   ORI.w #$2000,D1
0002DD92 <AmiBlitz3.ab3@16702>    BSR.w writeword
0002DD94 <AmiBlitz3.ab3@16705>   MOVE.l (A7)+,D1
0002DD98 <AmiBlitz3.ab3@16706>    BSR.w JL_0_AD38
0002DD9E <AmiBlitz3.ab3@16707>    JSR restorea4a5
0002DDA0 <AmiBlitz3.ab3@16708>   MOVEQ.l #$03,D2
0002DDA4 <AmiBlitz3.ab3@16709>    BSR.w reget
0002DDA8 <AmiBlitz3.ab3@16710> BRA.w JL_0_AF66
0002DDAA <AmiBlitz3.ab3@16713>   TST.w D3
0002DDAE <AmiBlitz3.ab3@16714>    BEQ.w JL_0_AD1E
0002DDB2 <AmiBlitz3.ab3@16715>   CMP.w #$28,D1
0002DDB6 <AmiBlitz3.ab3@16716>    BNE.w syntaxerr
0002DDBA <AmiBlitz3.ab3@16717>   CMP.w #$29,D0
0002DDBE <AmiBlitz3.ab3@16718>    BNE.w syntaxerr
0002DDC2 <AmiBlitz3.ab3@16719> BRA.w get1bytemain
0002DDC6 <AmiBlitz3.ab3@16722>   CMP.w #$28,D1
0002DDCA <AmiBlitz3.ab3@16723>    BNE.w JL_0_AD36
0002DDCE <AmiBlitz3.ab3@16724>    BSR.w get1bytemain
0002DDD2 <AmiBlitz3.ab3@16725>   CMP.w #$29,D0
0002DDD6 <AmiBlitz3.ab3@16726>    BNE.w syntaxerr
0002DDDA <AmiBlitz3.ab3@16727> BRA.w get1bytemain
0002DDDC <AmiBlitz3.ab3@16730> RTS
0002DDDE <AmiBlitz3.ab3@16733>   TST.w D1
0002DDE2 <AmiBlitz3.ab3@16734>    BNE.w writelong
0002DDE4 <AmiBlitz3.ab3@16735> RTS
0002DDE8 <AmiBlitz3.ab3@16739>   MOVE.w #$48E7,D4
0002DDEA <AmiBlitz3.ab3@16740>   SWAP D4
0002DDEC <AmiBlitz3.ab3@16741>   CLR.w D4
0002DDF0 <AmiBlitz3.ab3@16742>   MOVE.w #$4CDF,D5
0002DDF2 <AmiBlitz3.ab3@16743>   SWAP D5
0002DDF4 <AmiBlitz3.ab3@16744>   CLR.w D5
0002DDFA <AmiBlitz3.ab3@16745>   MOVE.w regnum,D1
0002DDFE <AmiBlitz3.ab3@16746>    BEQ.w JL_0_AD74
0002DE02 <AmiBlitz3.ab3@16747>   BSET #$F,D4
0002DE06 <AmiBlitz3.ab3@16748>   BSET #$0,D5
0002DE0A <AmiBlitz3.ab3@16749>   CMP.w #$2,D1
0002DE0E <AmiBlitz3.ab3@16750>    BCS.w JL_0_AD72
0002DE12 <AmiBlitz3.ab3@16753>   BSET #$E,D4
0002DE16 <AmiBlitz3.ab3@16754>   BSET #$1,D5
0002DE18 <AmiBlitz3.ab3@16757> RTS
0002DE1E <AmiBlitz3.ab3@16760>   TST.w fuckpos
0002DE22 <AmiBlitz3.ab3@16761>   BNE.w JL_0_AD6A
0002DE24 <AmiBlitz3.ab3@16762> RTS
0002DE26 <AmiBlitz3.ab3@16765> fuckpos:  Ds.w 1
0002DE2C <AmiBlitz3.ab3@16769>   MOVE.w sbasegot,D1
0002DE30 <AmiBlitz3.ab3@16770>    BEQ.w makesbase__skip
0002DE34 <AmiBlitz3.ab3@16774>   MOVE.w sbgot(PC),D1
0002DE38 <AmiBlitz3.ab3@16775>    BNE.w makesbase__skip2
0002DE40 <AmiBlitz3.ab3@16779>   MOVE.w #$0002,sbgot
0002DE46 <AmiBlitz3.ab3@16780>   MOVE.w movea3a7,D1
0002DE4A <AmiBlitz3.ab3@16781> BRA.w writeword
0002DE4C <AmiBlitz3.ab3@16784> RTS
0002DE54 <AmiBlitz3.ab3@16789>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002DE5A <AmiBlitz3.ab3@16792>   MOVE.l #$C601,D1
0002DE62 <AmiBlitz3.ab3@16793>   MOVE.w #-1,sbasegot
0002DE68 <AmiBlitz3.ab3@16794>   MOVE.l d1,lastinstruction
0002DE6C <AmiBlitz3.ab3@16795>   BSR.w Atokejsr
0002DE6E <AmiBlitz3.ab3@16796> RTS
0002DE78 <AmiBlitz3.ab3@16801>   MOVE.l data1,litdata1
0002DE7E <AmiBlitz3.ab3@16802>   TST.b fast
0002DE82 <AmiBlitz3.ab3@16803>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002DE86 <AmiBlitz3.ab3@16807> BRA 'l50                                                   ;to deactivate
0002DE8C <AmiBlitz3.ab3@16813>   TST.b optistring
0002DE90 <AmiBlitz3.ab3@16814>   BNE.s 'l21
0002DE96 <AmiBlitz3.ab3@16815>   CLR.b string1
0002DE9E <AmiBlitz3.ab3@16816>   MOVE.b #1,optistring
0002DEA4 <AmiBlitz3.ab3@16817>   TST.b nostringopt
0002DEA8 <AmiBlitz3.ab3@16818>   BNE 'l21
0002DEAA <AmiBlitz3.ab3@16819>   MOVE.l a5,a4
0002DEAC <AmiBlitz3.ab3@16820>   SUBQ.l #1,a4
0002DEAE <AmiBlitz3.ab3@16823>     TST.b (a4)
0002DEB2 <AmiBlitz3.ab3@16824>     BMI 'l19a
0002DEB6 <AmiBlitz3.ab3@16825>     BEQ.s 'l20
0002DEBA <AmiBlitz3.ab3@16826>     CMP.b #$22,(a4)
0002DEBE <AmiBlitz3.ab3@16827>     BEQ.s 'l19
0002DEC4 <AmiBlitz3.ab3@16830>     TST.w string1
0002DEC8 <AmiBlitz3.ab3@16831>     BNE 'l11
0002DECC <AmiBlitz3.ab3@16832>     CMP.b #":",(a4)
0002DED0 <AmiBlitz3.ab3@16833>     BEQ.s 'l20
0002DED4 <AmiBlitz3.ab3@16834>     CMP.b #";",(a4)
0002DED8 <AmiBlitz3.ab3@16835>     BEQ.s 'l20
0002DEDC <AmiBlitz3.ab3@16836>     CMP.b #"+",(a4)
0002DEE0 <AmiBlitz3.ab3@16837>     BEQ.s 'l21
0002DEE4 <AmiBlitz3.ab3@16838>     CMP.b #",",(a4)
0002DEE8 <AmiBlitz3.ab3@16839>     BEQ.s 'l20                                             ;was l21
0002DEEC <AmiBlitz3.ab3@16840>     CMP.b #")",(a4)
0002DEF0 <AmiBlitz3.ab3@16841>     BEQ.s 'l20                                             ;was l21
0002DEF2 <AmiBlitz3.ab3@16844>     ADDQ.l #1,a4
0002DEF6 <AmiBlitz3.ab3@16845> BRA.s 'l10
0002DEFE <AmiBlitz3.ab3@16848>   BCHG #0,string1
0002DF02 <AmiBlitz3.ab3@16849> BRA 'l18
0002DF04 <AmiBlitz3.ab3@16852>   ADDQ.l #1,a4
0002DF06 <AmiBlitz3.ab3@16853>   TST.b (a4)
0002DF0A <AmiBlitz3.ab3@16854>   BEQ 'l21
0002DF0E <AmiBlitz3.ab3@16855> BRA 'l11
0002DF10 <AmiBlitz3.ab3@16858>   MOVE.l a5,a4
0002DF12 <AmiBlitz3.ab3@16859>   SUBQ.l #1,a4
0002DF16 <AmiBlitz3.ab3@16862>   CMP.b #$20,-(a4)
0002DF1A <AmiBlitz3.ab3@16863>   BEQ 'll1
0002DF1E <AmiBlitz3.ab3@16864>   CMP.b #"+",(a4)
0002DF22 <AmiBlitz3.ab3@16865>   BEQ 'l21
0002DF2A <AmiBlitz3.ab3@16880>   MOVE.b #2,optistring
0002DF32 <AmiBlitz3.ab3@16883>   CMP.b #2,optistring
0002DF36 <AmiBlitz3.ab3@16884>   BEQ.s 'l100
0002DF3A <AmiBlitz3.ab3@16887>   BSR.w makesbase
0002DF3E <AmiBlitz3.ab3@16888>   BSR.w pokedata1                                          ;writestringsizespace
0002DF42 <AmiBlitz3.ab3@16889>   BSR.w pokedata1
0002DF44 <AmiBlitz3.ab3@16892>   MOVEQ.l #$00,D2
0002DF4A <AmiBlitz3.ab3@16895>     MOVE.l a5,lastsourcepos
0002DF4C <AmiBlitz3.ab3@16896>     MOVEQ #0,d0
0002DF4E <AmiBlitz3.ab3@16897>     MOVE.b (a5)+,d0
0002DF50 <AmiBlitz3.ab3@16898>     TST.w D0
0002DF54 <AmiBlitz3.ab3@16899>      BEQ.w notqerr
0002DF58 <AmiBlitz3.ab3@16900>     CMP.w #$22,D0                                          ; --- " ---
0002DF5C <AmiBlitz3.ab3@16901>      BEQ.w JL_0_ADF6
0002DF60 <AmiBlitz3.ab3@16902>     CMP.b #"\",d0
0002DF64 <AmiBlitz3.ab3@16903>      BNE 'l1
0002DF68 <AmiBlitz3.ab3@16904>     CMP.b #"\",(a5)
0002DF6C <AmiBlitz3.ab3@16905>      BNE 'l1
0002DF72 <AmiBlitz3.ab3@16906>     TST.b newsyntax
0002DF76 <AmiBlitz3.ab3@16907>      BEQ 'l1
0002DF7C <AmiBlitz3.ab3@16908>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002DF80 <AmiBlitz3.ab3@16909>     BNE 'l2
0002DF82 <AmiBlitz3.ab3@16910>     ADDQ #2,a5
0002DF84 <AmiBlitz3.ab3@16913>     ADDQ.w #1,D2
0002DF86 <AmiBlitz3.ab3@16914>     MOVE.w D0,D1
0002DF8A <AmiBlitz3.ab3@16915>     BSR.w pokedata1b                                        ;writestring
0002DF8E <AmiBlitz3.ab3@16916> BRA.w writestring
0002DF94 <AmiBlitz3.ab3@16919>     JSR check_newconstants
0002DF98 <AmiBlitz3.ab3@16920> BRA writestring
0002DF9E <AmiBlitz3.ab3@16923>   NOT instringon
0002DFA4 <AmiBlitz3.ab3@16924>   MOVE.w dontwrite,D1
0002DFA8 <AmiBlitz3.ab3@16925>   BNE.w JL_0_AE0A
0002DFB0 <AmiBlitz3.ab3@16926>   CMP.b #2,optistring
0002DFB4 <AmiBlitz3.ab3@16927>   BEQ 'l10
0002DFBA <AmiBlitz3.ab3@16928>     MOVEA.l litdata1,A0
0002DFBC <AmiBlitz3.ab3@16929>     CLR.w (A0)+                                            ;writesize
0002DFBE <AmiBlitz3.ab3@16930>     MOVE.w D2,(A0)
0002DFC2 <AmiBlitz3.ab3@16934>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002DFC8 <AmiBlitz3.ab3@16935>   ADDQ.l #1,data1
0002DFD0 <AmiBlitz3.ab3@16936>   BCLR #$0,data1+3
0002DFD2 <AmiBlitz3.ab3@16937>   MOVEQ.l #$07,D2
0002DFD6 <AmiBlitz3.ab3@16938> BRA.w get1bytemain
0002DFDA <AmiBlitz3.ab3@16942>   BSR.w makename2
0002DFDE <AmiBlitz3.ab3@16943>   BSR.w findlabel2
0002DFE2 <AmiBlitz3.ab3@16944>   BEQ.w JL_0_AE4A
0002DFE6 <AmiBlitz3.ab3@16945>   BSR.w addlabelhash
0002DFEA <AmiBlitz3.ab3@16946>   CLR.l $4(A2)
0002DFEE <AmiBlitz3.ab3@16947>   CLR.l $8(A2)
0002DFF6 <AmiBlitz3.ab3@16949>   MOVE.w linenumat+2,$10(A2)
0002DFFC <AmiBlitz3.ab3@16950>   MOVE.w linenumat,d0
0002DFFE <AmiBlitz3.ab3@16951>   MOVEQ #0,d1
0002E002 <AmiBlitz3.ab3@16952>   MOVE.b -1(a2,d7),d1
0002E006 <AmiBlitz3.ab3@16953>   MOVE.w d0,0(a2,d1)
0002E00A <AmiBlitz3.ab3@16954> BRA.w JL_0_AE52
0002E00E <AmiBlitz3.ab3@16957>   TST.l $8(A2)
0002E012 <AmiBlitz3.ab3@16958>   BNE.w JL_0_AE88
0002E018 <AmiBlitz3.ab3@16961>   MOVEA.l _execbase,A6
0002E01A <AmiBlitz3.ab3@16962>   MOVEQ.l #$0C+2,D0
0002E01C <AmiBlitz3.ab3@16963>   MOVEQ.l #$01,D1
0002E022 <AmiBlitz3.ab3@16964>   MOVE.l mempool,a0
0002E026 <AmiBlitz3.ab3@16965>   JSR _AllocPooled(a6)
0002E028 <AmiBlitz3.ab3@16967>   MOVEA.l D0,A0
0002E02C <AmiBlitz3.ab3@16968>   MOVE.l $4(A2),(A0)
0002E030 <AmiBlitz3.ab3@16969>   MOVE.l A0,$4(A2)
0002E038 <AmiBlitz3.ab3@16970>   MOVE.l destpointer,$4(A0)
0002E03C <AmiBlitz3.ab3@16971>   ADDQ.l #2,$4(A0)
0002E044 <AmiBlitz3.ab3@16972>   MOVE.w procnum,$8(A0)
0002E04C <AmiBlitz3.ab3@16973>   MOVE.w linenumat+2,$A(A0)
0002E054 <AmiBlitz3.ab3@16974>   MOVE.w linenumat,$c(a0)
0002E056 <AmiBlitz3.ab3@16975> RTS
0002E05A <AmiBlitz3.ab3@16978>   MOVE.l $4(A2),D1
0002E05E <AmiBlitz3.ab3@16979>   BTST #$0,D1
0002E062 <AmiBlitz3.ab3@16980>    BNE.w illlaberr
0002E068 <AmiBlitz3.ab3@16981>   MOVE.w procnum,D1
0002E06C <AmiBlitz3.ab3@16982>   CMP.w $10(A2),D1
0002E070 <AmiBlitz3.ab3@16983>    BNE.w referr
0002E072 <AmiBlitz3.ab3@16984> RTS
0002E074 <AmiBlitz3.ab3@16988>   MOVE.w D0,-(A7)
0002E07C <AmiBlitz3.ab3@16989>   CMP.b #2,optistring
0002E080 <AmiBlitz3.ab3@16990>   BEQ 'l10
0002E086 <AmiBlitz3.ab3@16993>   MOVE.w numtoa0,D1
0002E08A <AmiBlitz3.ab3@16994>    BSR.w writeword
0002E08E <AmiBlitz3.ab3@16995>    BSR.w addoff
0002E094 <AmiBlitz3.ab3@16996>   MOVE.l litdata1,D1
0002E098 <AmiBlitz3.ab3@16997>    BSR.w writelong
0002E09E <AmiBlitz3.ab3@16998>   MOVE.w pushlen,D1
0002E0A2 <AmiBlitz3.ab3@16999>    BSR.w writeword
0002E0A6 <AmiBlitz3.ab3@17000>   MOVE.w #$C600,D1
0002E0AA <AmiBlitz3.ab3@17001>    BSR.w Atokejsr
0002E0AC <AmiBlitz3.ab3@17002>   MOVE.w (A7)+,D0
0002E0AE <AmiBlitz3.ab3@17003> RTS
0002E0B0 <AmiBlitz3.ab3@17006>   MOVEQ #0,d1
0002E0B4 <AmiBlitz3.ab3@17007>   BSR.w pokedata1b
0002E0BA <AmiBlitz3.ab3@17008>   MOVE.l destpointer,a4
0002E0BE <AmiBlitz3.ab3@17009>   MOVE.w #$203c,d1
0002E0C4 <AmiBlitz3.ab3@17010>   TST.w mode
0002E0C8 <AmiBlitz3.ab3@17011>   BNE 'lm10
0002E0CE <AmiBlitz3.ab3@17012>    ADDQ.w #4,a2offset
0002E0D2 <AmiBlitz3.ab3@17013>   MOVE.w #$2f3c,d1
0002E0D8 <AmiBlitz3.ab3@17016>   TST.w mode
0002E0DC <AmiBlitz3.ab3@17017>   BEQ 'lm3
0002E0E2 <AmiBlitz3.ab3@17018>   MOVE.w regnum,D0
0002E0E4 <AmiBlitz3.ab3@17019>   LSL.w #8,D0
0002E0E6 <AmiBlitz3.ab3@17020>   LSL.w #1,D0
0002E0E8 <AmiBlitz3.ab3@17021>   OR.w d0,d1
0002E0EC <AmiBlitz3.ab3@17022>   BSR writeword
0002E0F0 <AmiBlitz3.ab3@17023>   BSR.w addoff
0002E0F6 <AmiBlitz3.ab3@17024>   MOVE.l litdata1,D1
0002E0FA <AmiBlitz3.ab3@17025>   BSR.w writelong
0002E102 <AmiBlitz3.ab3@17026>   CMP.w #3,mode
0002E106 <AmiBlitz3.ab3@17027>   BEQ 'l30
0002E10C <AmiBlitz3.ab3@17028>    ADDQ.w #4,a2offset
0002E110 <AmiBlitz3.ab3@17029>   MOVE.w #$4878,D1
0002E114 <AmiBlitz3.ab3@17030>   BSR.w writeword
0002E116 <AmiBlitz3.ab3@17031>   MOVE.l d2,d1
0002E11A <AmiBlitz3.ab3@17032>   BSR writeword
0002E11C <AmiBlitz3.ab3@17035>   MOVE.w (A7)+,D0
0002E11E <AmiBlitz3.ab3@17036> RTS
0002E124 <AmiBlitz3.ab3@17039>   MOVE.l #$3f3c0007,d1
0002E128 <AmiBlitz3.ab3@17040>   BSR writelong
0002E12E <AmiBlitz3.ab3@17041>   MOVE.w regnum,D1
0002E130 <AmiBlitz3.ab3@17042>   LSL.w #8,D1
0002E132 <AmiBlitz3.ab3@17043>   LSL.w #1,D1
0002E136 <AmiBlitz3.ab3@17044>   ORI.w #$2f3c,d1
0002E13A <AmiBlitz3.ab3@17045>   BSR writeword
0002E140 <AmiBlitz3.ab3@17046>    ADDQ.w #4,a2offset
0002E142 <AmiBlitz3.ab3@17047>   MOVE.l d2,d1
0002E146 <AmiBlitz3.ab3@17048>   BSR writelong
0002E14A <AmiBlitz3.ab3@17049>   MOVE.w #$2f3c,d1
0002E14E <AmiBlitz3.ab3@17050>   BSR writeword
0002E152 <AmiBlitz3.ab3@17051>   BSR.w addoff
0002E158 <AmiBlitz3.ab3@17052>   MOVE.l litdata1,D1
0002E15C <AmiBlitz3.ab3@17053>   BSR.w writelong
0002E15E <AmiBlitz3.ab3@17054>   MOVE.w (A7)+,D0
0002E160 <AmiBlitz3.ab3@17055> RTS
0002E164 <AmiBlitz3.ab3@17059>   BSR.w get1bytemain
0002E168 <AmiBlitz3.ab3@17060>    BSR.w JL_0_AE22
0002E16E <AmiBlitz3.ab3@17061>   MOVE.w regnum,D1
0002E170 <AmiBlitz3.ab3@17062>   LSL.w #8,D1
0002E172 <AmiBlitz3.ab3@17063>   LSL.w #1,D1
0002E176 <AmiBlitz3.ab3@17064>   ORI.w #$203C,D1
0002E17A <AmiBlitz3.ab3@17065>    BSR.w writeword
0002E17E <AmiBlitz3.ab3@17066>    BSR.w addoff
0002E182 <AmiBlitz3.ab3@17067>   MOVE.l $8(A2),D1
0002E186 <AmiBlitz3.ab3@17068>    BSR.w writelong
0002E188 <AmiBlitz3.ab3@17069>   MOVEQ.l #$03,D2
0002E18E <AmiBlitz3.ab3@17070>   CLR.b peekaddrsize
0002E192 <AmiBlitz3.ab3@17071> BRA.w reget
0002E194 <AmiBlitz3.ab3@17074>   MOVEQ.l #$00,D3
0002E198 <AmiBlitz3.ab3@17077>   BSR.w get1bytemain
0002E19C <AmiBlitz3.ab3@17078>    BEQ.w syntaxerr
0002E1A0 <AmiBlitz3.ab3@17079>   CMP.w #$22,D0
0002E1A4 <AmiBlitz3.ab3@17080>    BEQ.w JL_0_AF1A
0002E1A6 <AmiBlitz3.ab3@17081>   LSL.l #8,D3
0002E1A8 <AmiBlitz3.ab3@17082>   MOVE.b D0,D3
0002E1AC <AmiBlitz3.ab3@17083> BRA.w JL_0_AF02
0002E1B0 <AmiBlitz3.ab3@17086>   BSR.w get1bytemain
0002E1B4 <AmiBlitz3.ab3@17087> BRA.w JL_0_B46E
0002E1B6 <AmiBlitz3.ab3@17090>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E1BA <AmiBlitz3.ab3@17091>    BSR.w makename2
0002E1BE <AmiBlitz3.ab3@17092>    BSR.w findlabel2
0002E1C2 <AmiBlitz3.ab3@17093>    BEQ.w 'l10
0002E1C8 <AmiBlitz3.ab3@17094>    LEA ptr_parameterstore,a0
0002E1CE <AmiBlitz3.ab3@17095>    CMP.b #"@",-1(a0,d2.w)
0002E1D2 <AmiBlitz3.ab3@17096>    BNE cnferr
0002E1D6 <AmiBlitz3.ab3@17097>    CLR.b -1(a0,d2.w)
0002E1D8 <AmiBlitz3.ab3@17098>    SUBQ.l #1,d2
0002E1DE <AmiBlitz3.ab3@17099>    LEA varbase,a2
0002E1E2 <AmiBlitz3.ab3@17100>    BSR findvariable
0002E1E6 <AmiBlitz3.ab3@17101>    BNE cnferr
0002E1EA <AmiBlitz3.ab3@17102>    CMP.b #"\",d0
0002E1EE <AmiBlitz3.ab3@17103>    BNE 'l6
0002E1F4 <AmiBlitz3.ab3@17104>    ADDQ #1,lastsourcepos
0002E1F8 <AmiBlitz3.ab3@17105>    MOVE.l $a(a2),a2
0002E1FA <AmiBlitz3.ab3@17106>    ADDQ.l #4,a2
0002E1FE <AmiBlitz3.ab3@17107>    BSR.w makename2
0002E202 <AmiBlitz3.ab3@17108>    BSR findvariable2
0002E206 <AmiBlitz3.ab3@17109>    BNE cnferr
0002E20A <AmiBlitz3.ab3@17110> BRA.s 'l6                                                  ;???
0002E20E <AmiBlitz3.ab3@17113>    MOVE.w $4(a2),d3
0002E210 <AmiBlitz3.ab3@17114>    EXT.l d3
0002E214 <AmiBlitz3.ab3@17115> BRA JL_0_AF46
0002E218 <AmiBlitz3.ab3@17118>   MOVE.l $8(A2),D3
0002E220 <AmiBlitz3.ab3@17119>   CMPI.l #$1,$4(A2)
0002E224 <AmiBlitz3.ab3@17120>    BEQ.w JL_0_AF46
0002E22A <AmiBlitz3.ab3@17121>   NOT.w asmtype
0002E22C <AmiBlitz3.ab3@17124>   MOVE.w (A7)+,D2
0002E230 <AmiBlitz3.ab3@17125> BRA.w JL_0_B46E
0002E232 <AmiBlitz3.ab3@17129>   MOVE.w D2,-(A7)
0002E236 <AmiBlitz3.ab3@17130>    BSR.w getparameter
0002E23A <AmiBlitz3.ab3@17131>   CMP.w #"{",D0                                          ;test if var = function{}
0002E23E <AmiBlitz3.ab3@17132>    BEQ.w isfunction
0002E242 <AmiBlitz3.ab3@17133>    BSR.w JL_0_8E3C
0002E246 <AmiBlitz3.ab3@17135>    BSR.w calcvar                                         ;getvaroffset+type
0002E24A <AmiBlitz3.ab3@17136>    BSR.w JL_0_B150
0002E250 <AmiBlitz3.ab3@17137>    MOVE.l a2,rightsidetype
0002E256 <AmiBlitz3.ab3@17148>    TST.b typecheck
0002E25A <AmiBlitz3.ab3@17149>    BEQ JL_0_AF66
0002E264 <AmiBlitz3.ab3@17150>    CMP.l #$da01,lasttoken                                  ;poke
0002E268 <AmiBlitz3.ab3@17151>    BEQ 'l1
0002E272 <AmiBlitz3.ab3@17152>    CMP.l #$da02,lasttoken                                  ;peek
0002E276 <AmiBlitz3.ab3@17153>    BNE 'l2
0002E27E <AmiBlitz3.ab3@17156>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E282 <AmiBlitz3.ab3@17157>    BNE JL_0_AF66
0002E288 <AmiBlitz3.ab3@17158>    MOVE.b d2,peekaddrsize
0002E28C <AmiBlitz3.ab3@17159>    BRA JL_0_AF66
0002E292 <AmiBlitz3.ab3@17162>   CLR.b peekaddrsize
0002E296 <AmiBlitz3.ab3@17165>   CMP.w #$1,D2
0002E29A <AmiBlitz3.ab3@17166>    BNE.w JL_0_AF7C
0002E2A0 <AmiBlitz3.ab3@17167>   MOVE.w regnum,D1
0002E2A4 <AmiBlitz3.ab3@17168>   ORI.w #$4880,D1
0002E2A8 <AmiBlitz3.ab3@17169>    BSR.w writeword
0002E2AA <AmiBlitz3.ab3@17172>   MOVE.w (A7)+,D3
0002E2AE <AmiBlitz3.ab3@17173>    BEQ.w JL_0_AF9E
0002E2B4 <AmiBlitz3.ab3@17174>    MOVE.l lastinstructionaddr,a0
0002E2B8 <AmiBlitz3.ab3@17175>   CMP.w #$3,D3
0002E2BC <AmiBlitz3.ab3@17176>    BNE.w JL_0_AF92
0002E2C0 <AmiBlitz3.ab3@17177>   CMP.w #$4,D2
0002E2C4 <AmiBlitz3.ab3@17178>    BEQ.w JL_0_AF98
0002E2C6 <AmiBlitz3.ab3@17181>   CMP.w D2,D3
0002E2CA <AmiBlitz3.ab3@17182>    BLS.w JL_0_AF9E
0002E2CC <AmiBlitz3.ab3@17185>   EXG.l D2,D3
0002E2CE <AmiBlitz3.ab3@17186>   MOVE.l a0,-(a7)
0002E2D4 <AmiBlitz3.ab3@17187>   TST.b typecheck
0002E2D8 <AmiBlitz3.ab3@17188>   BEQ 'ok
0002E2DE <AmiBlitz3.ab3@17189>   TST.b notypecheck
0002E2E2 <AmiBlitz3.ab3@17190>   BNE 'ok
0002E2E8 <AmiBlitz3.ab3@17191>   MOVE.l leftsidetype,a0
0002E2F2 <AmiBlitz3.ab3@17192>   CMP.l #0,leftsidetype
0002E2F6 <AmiBlitz3.ab3@17193>   BEQ 'ok
0002E2FE <AmiBlitz3.ab3@17194>   CMP.l #$100,4(a0)
0002E302 <AmiBlitz3.ab3@17195>   BLE 'ok
0002E306 <AmiBlitz3.ab3@17196>   CMP.b #3,d3
0002E30A <AmiBlitz3.ab3@17197>   BEQ 'ok
0002E30E <AmiBlitz3.ab3@17198>   CMP.b #7,d3
0002E312 <AmiBlitz3.ab3@17199>   BEQ 'ok
0002E318 <AmiBlitz3.ab3@17200>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E31A <AmiBlitz3.ab3@17202>   MOVE.l (a7)+,a0
0002E31E <AmiBlitz3.ab3@17203>   BSR.w writeconvertcode         ;called from var assign
0002E322 <AmiBlitz3.ab3@17206> BRA.w reget
0002E324 <AmiBlitz3.ab3@17209>   MOVEQ.l #$00,D3
0002E32A <AmiBlitz3.ab3@17210>   MOVE.w regnum,D1
0002E32E <AmiBlitz3.ab3@17211>    BEQ.w JL_0_AFC8
0002E330 <AmiBlitz3.ab3@17212>   SUBQ.w #1,D1
0002E332 <AmiBlitz3.ab3@17215>      LSR.l #1,D3
0002E336 <AmiBlitz3.ab3@17216>      BSET #$F,D3
0002E33A <AmiBlitz3.ab3@17217>   DBF D1,JL_0_AFB0b
0002E340 <AmiBlitz3.ab3@17219>    TST.b fpu
0002E344 <AmiBlitz3.ab3@17220>    BEQ 'l1
0002E34A <AmiBlitz3.ab3@17221>    ADDQ.l #2,stacktrack                                    ;intern command
0002E34C <AmiBlitz3.ab3@17222>     MOVE.l a0,-(a7)
0002E352 <AmiBlitz3.ab3@17223>     MOVE.l stacktrack,d1
0002E358 <AmiBlitz3.ab3@17224>     LEA fpustackbase,a0
0002E35C <AmiBlitz3.ab3@17225>     CLR.w 0(a0,d1)
0002E362 <AmiBlitz3.ab3@17226>     CLR.w regmask
0002E364 <AmiBlitz3.ab3@17227>     MOVE.l (a7)+,a0
0002E368 <AmiBlitz3.ab3@17230>   MOVE.w #$48E7,D1
0002E36C <AmiBlitz3.ab3@17231>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E36E <AmiBlitz3.ab3@17232>   MOVE.w D3,D1
0002E372 <AmiBlitz3.ab3@17233> BRA.w writeword
0002E374 <AmiBlitz3.ab3@17238>   MOVEQ.l #$00,D3
0002E37A <AmiBlitz3.ab3@17239>   MOVE.w regnum,D1
0002E37E <AmiBlitz3.ab3@17240>    BEQ.w JL_0_AFC8
0002E380 <AmiBlitz3.ab3@17241>   SUBQ.w #1,D1
0002E382 <AmiBlitz3.ab3@17244>     LSR.l #1,D3
0002E386 <AmiBlitz3.ab3@17245>     BSET #$F,D3
0002E38A <AmiBlitz3.ab3@17246>   DBF D1,JL_0_AFB0
0002E390 <AmiBlitz3.ab3@17248>    TST.b fpu
0002E394 <AmiBlitz3.ab3@17249>    BEQ 'l1
0002E39A <AmiBlitz3.ab3@17250>    ADDQ.l #2,stacktrack                                    ;intern command
0002E39C <AmiBlitz3.ab3@17251>     MOVE.l a0,-(a7)
0002E3A2 <AmiBlitz3.ab3@17252>     MOVE.l stacktrack,d1
0002E3A8 <AmiBlitz3.ab3@17253>     LEA fpustackbase,a0
0002E3AC <AmiBlitz3.ab3@17254>     CLR.w 0(a0,d1)
0002E3B0 <AmiBlitz3.ab3@17255>    CMP.b #5,(a3)                                           ;result float ?
0002E3B4 <AmiBlitz3.ab3@17256>     BNE 'nofpu
0002E3BE <AmiBlitz3.ab3@17258>     MOVE.w regnum,regnumfunc
0002E3C4 <AmiBlitz3.ab3@17261>   CLR.w regmask
0002E3C6 <AmiBlitz3.ab3@17262>     MOVE.l (a7)+,a0
0002E3CA <AmiBlitz3.ab3@17265>   MOVE.w #$48E7,D1
0002E3CE <AmiBlitz3.ab3@17266>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E3D0 <AmiBlitz3.ab3@17267>   MOVE.w D3,D1
0002E3D4 <AmiBlitz3.ab3@17268> BRA.w writeword
0002E3D6 <AmiBlitz3.ab3@17271> RTS
0002E3D8 <AmiBlitz3.ab3@17275>   MOVE.l D1,-(A7)
0002E3DC <AmiBlitz3.ab3@17276>   MOVE.w #$4EB9,D1
0002E3E0 <AmiBlitz3.ab3@17277>    BSR.w writeword
0002E3E4 <AmiBlitz3.ab3@17278>    BSR.w addoff
0002E3E6 <AmiBlitz3.ab3@17279>   MOVE.l (A7)+,D1
0002E3EA <AmiBlitz3.ab3@17280> BRA.w writelong
0002E3EE <AmiBlitz3.ab3@17284>    BSR.w findproc                                          ;write function call
0002E3F2 <AmiBlitz3.ab3@17285>    BEQ 'l1
0002E3F8 <AmiBlitz3.ab3@17286>    TST.l unusedfunc
0002E3FC <AmiBlitz3.ab3@17287>    BEQ noprocerr
0002E402 <AmiBlitz3.ab3@17289>    JSR gotoendsource
0002E40A <AmiBlitz3.ab3@17292>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E410 <AmiBlitz3.ab3@17293>   TST.l typetocast
0002E414 <AmiBlitz3.ab3@17294>   BEQ 'nocast
0002E41E <AmiBlitz3.ab3@17295>   MOVE.l typetocast,rightsidetype
0002E424 <AmiBlitz3.ab3@17296>   CLR.l typetocast
0002E426 <AmiBlitz3.ab3@17297>   MOVE.l a1,-(a7)
0002E42C <AmiBlitz3.ab3@17298>   MOVE.l rightsidetype,a1
0002E432 <AmiBlitz3.ab3@17299>   CMP.l leftsidetype,a1
0002E436 <AmiBlitz3.ab3@17300>   BEQ 'ok
0002E43C <AmiBlitz3.ab3@17301>   JMP errorconvertreturntype2
0002E43E <AmiBlitz3.ab3@17302> 'ok  MOVE.l (a7)+,a1
0002E440 <AmiBlitz3.ab3@17304>   MOVEQ.l #$00,D1
0002E444 <AmiBlitz3.ab3@17305>   MOVE.b $5(A2),D1
0002E44A <AmiBlitz3.ab3@17306>   MOVE.b d1,retmode
0002E44E <AmiBlitz3.ab3@17307>    BMI.w illprocerr
0002E454 <AmiBlitz3.ab3@17308>    MOVE.b #1,isfunc(a2)
0002E456 <AmiBlitz3.ab3@17309>   MOVE.w D1,-(A7)
0002E458 <AmiBlitz3.ab3@17310>   MOVEQ.l #$00,D1
0002E45C <AmiBlitz3.ab3@17311>   MOVE.b $4(A2),D1
0002E45E <AmiBlitz3.ab3@17312>   LSR.w #4,D1
0002E462 <AmiBlitz3.ab3@17313>    BEQ.w JL_0_B006
0002E464 <AmiBlitz3.ab3@17314>   LSL.w #2,D1
0002E46A <AmiBlitz3.ab3@17315>   SUB.w D1,a2offset
0002E46E <AmiBlitz3.ab3@17318>   CMPI.w #$7,(A7)
0002E472 <AmiBlitz3.ab3@17319>    BNE.b JL_0_B014
0002E474 <AmiBlitz3.ab3@17320>   MOVE.l A2,-(A7)
0002E478 <AmiBlitz3.ab3@17321>    BSR.w makesbase
0002E47A <AmiBlitz3.ab3@17322>   MOVEA.l (A7)+,A2
0002E480 <AmiBlitz3.ab3@17325>   MOVE.w sbasegot,-(A7)
0002E484 <AmiBlitz3.ab3@17326>    BEQ.b JL_0_B020
0002E488 <AmiBlitz3.ab3@17327>    BSR.w dopusha3
0002E48C <AmiBlitz3.ab3@17330>   BSR.w JL_0_AFA2func
0002E48E <AmiBlitz3.ab3@17331>   MOVE.w D3,-(A7)
0002E492 <AmiBlitz3.ab3@17332>   MOVE.l $E(A2),D1
0002E496 <AmiBlitz3.ab3@17333>   TST.b $20(a2)                                            ;increase if morepar
0002E49A <AmiBlitz3.ab3@17334>   BNE 'no0par
0002E49C <AmiBlitz3.ab3@17335>   MOVE.l a5,a4
0002E4A0 <AmiBlitz3.ab3@17338>   CMP.b #$20,(a4)+
0002E4A4 <AmiBlitz3.ab3@17339>   BEQ 'l1
0002E4AA <AmiBlitz3.ab3@17340>   CMP.b #"}",-1(a4)
0002E4AE <AmiBlitz3.ab3@17341>   BNE  'no0par
0002E4B0 <AmiBlitz3.ab3@17342>   MOVEQ #0,d0
0002E4B4 <AmiBlitz3.ab3@17345>   LEA $16(A2),A1
0002E4B6 <AmiBlitz3.ab3@17348>   MOVE.l d1,-(a7)
0002E4B8 <AmiBlitz3.ab3@17349>   MOVE.b (a1),d2
0002E4BA <AmiBlitz3.ab3@17350>   MOVE.l d0,d1
0002E4BE <AmiBlitz3.ab3@17351>   CMP.w #4,d2
0002E4C2 <AmiBlitz3.ab3@17352>   BNE 'l1b
0002E4C8 <AmiBlitz3.ab3@17353>   ADD.l #$203c,d1
0002E4CC <AmiBlitz3.ab3@17354>   BSR writeword
0002E4D2 <AmiBlitz3.ab3@17355>   MOVE.l #$ffff0000,d1
0002E4D6 <AmiBlitz3.ab3@17356>   BSR writelong
0002E4DA <AmiBlitz3.ab3@17357> BRA 'l2b
0002E4E0 <AmiBlitz3.ab3@17360>    TST.b fpu
0002E4E4 <AmiBlitz3.ab3@17361>    BNE 'l1c
0002E4E8 <AmiBlitz3.ab3@17362>    CMP.w #5,d2
0002E4EC <AmiBlitz3.ab3@17363>    BNE 'l1c
0002E4F2 <AmiBlitz3.ab3@17364>    ADD.l #$203c,d1
0002E4F6 <AmiBlitz3.ab3@17365>    BSR writeword
0002E4FC <AmiBlitz3.ab3@17366>    MOVE.l #$800000c1,d1
0002E500 <AmiBlitz3.ab3@17367>    BSR writelong
0002E504 <AmiBlitz3.ab3@17368> BRA 'l2b
0002E50A <AmiBlitz3.ab3@17371>   ADD.l #$70ff,d1
0002E50E <AmiBlitz3.ab3@17372>   BSR writeword
0002E512 <AmiBlitz3.ab3@17373>   CMP.w #7,d2
0002E516 <AmiBlitz3.ab3@17374>   BNE 'l1d
0002E51C <AmiBlitz3.ab3@17375>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E520 <AmiBlitz3.ab3@17376>   BSR writelong
0002E522 <AmiBlitz3.ab3@17377>   MOVEQ #0,d1
0002E526 <AmiBlitz3.ab3@17378>   BSR writeword
0002E52C <AmiBlitz3.ab3@17379>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E530 <AmiBlitz3.ab3@17380>   BSR writelong
0002E532 <AmiBlitz3.ab3@17381>   MOVEQ #0,d1
0002E536 <AmiBlitz3.ab3@17382>   BSR writeword
0002E53C <AmiBlitz3.ab3@17385>   TST.b fpu                                                ; fpucheck added  tomsmart1
0002E540 <AmiBlitz3.ab3@17386>   BEQ 'l2b
0002E546 <AmiBlitz3.ab3@17387>   MOVE.l #$f23c5000,d1
0002E548 <AmiBlitz3.ab3@17388>   MOVE.l d0,d2
0002E54A <AmiBlitz3.ab3@17389>   ASR.l #2,d2
0002E54C <AmiBlitz3.ab3@17390>   ADD.l d2,d1
0002E550 <AmiBlitz3.ab3@17391>   BSR writelong
0002E554 <AmiBlitz3.ab3@17392>   MOVE.w #$ffff,d1
0002E558 <AmiBlitz3.ab3@17393>   BSR writeword
0002E55A <AmiBlitz3.ab3@17397>   MOVE.l (a7)+,d1
0002E55C <AmiBlitz3.ab3@17398>      ADDQ.l #1,a1
0002E562 <AmiBlitz3.ab3@17399>      ADD.l #$0200,d0
0002E568 <AmiBlitz3.ab3@17400>      CMP.l #$0e00,d0
0002E56C <AmiBlitz3.ab3@17401>      BEQ syntaxerr
0002E56E <AmiBlitz3.ab3@17402>      TST.b (a1)
0002E572 <AmiBlitz3.ab3@17403>      BNE 'again
0002E576 <AmiBlitz3.ab3@17404> BRA 'p1
0002E57A <AmiBlitz3.ab3@17407>   TST.b $4(A2)
0002E57E <AmiBlitz3.ab3@17408>    BNE.w JL_0_B03E
0002E582 <AmiBlitz3.ab3@17411>   BSR.w JL_0_AFCA
0002E586 <AmiBlitz3.ab3@17412>    BSR.w get1bytemain
0002E58A <AmiBlitz3.ab3@17413> BRA.w JL_0_B06C
0002E590 <AmiBlitz3.ab3@17417>   MOVE.w regnum,-(A7)
0002E59A <AmiBlitz3.ab3@17418>   MOVE.w regnum,regnumfunc
0002E59C <AmiBlitz3.ab3@17421>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002E5A4 <AmiBlitz3.ab3@17422>   MOVE.b #1,funccall
0002E5A6 <AmiBlitz3.ab3@17423>   MOVEQ.l #$00,D0
0002E5AA <AmiBlitz3.ab3@17424>   MOVE.b $4(A2),D0
0002E5B4 <AmiBlitz3.ab3@17425>   MOVE.w a2offset,a2offset2
0002E5BC <AmiBlitz3.ab3@17426>   MOVE.b 5(a2),retmode
0002E5C2 <AmiBlitz3.ab3@17427>   MOVE.l a2,currentfunccall
0002E5C6 <AmiBlitz3.ab3@17428>   LEA $16(A2),A2
0002E5CC <AmiBlitz3.ab3@17429>   CLR.w regnum
0002E5D2 <AmiBlitz3.ab3@17430>   CLR.w regmask
0002E5D8 <AmiBlitz3.ab3@17431>   MOVE.b isconstantvalue,-(a7)
0002E5DE <AmiBlitz3.ab3@17432>   MOVE.b funcparloop,-(a7)
0002E5E6 <AmiBlitz3.ab3@17433>   MOVE.b #1,funcparloop
0002E5EC <AmiBlitz3.ab3@17434>   MOVE.l rightsidetype,-(a7)
0002E5F2 <AmiBlitz3.ab3@17435>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002E5F8 <AmiBlitz3.ab3@17436>   MOVE.b blitzparloop,-(a7)
0002E5FE <AmiBlitz3.ab3@17437>   CLR.b blitzparloop
0002E604 <AmiBlitz3.ab3@17438>   JSR fetchpees2
0002E60A <AmiBlitz3.ab3@17439>   MOVE.b (a7)+,blitzparloop
0002E610 <AmiBlitz3.ab3@17440>   MOVE.l (a7)+,leftsidetype
0002E616 <AmiBlitz3.ab3@17441>   MOVE.l (a7)+,rightsidetype
0002E61C <AmiBlitz3.ab3@17442>   MOVE.b (a7)+,funcparloop
0002E622 <AmiBlitz3.ab3@17443>   MOVE.b (a7)+,isconstantvalue
0002E628 <AmiBlitz3.ab3@17444>   JSR chkstak
0002E62A <AmiBlitz3.ab3@17445>   MOVE.l (A7)+,D1
0002E62E <AmiBlitz3.ab3@17461>    BTST #0,d1
0002E632 <AmiBlitz3.ab3@17462>    BNE intern1
0002E636 <AmiBlitz3.ab3@17463>    BSR.w JL_0_AFCA
0002E63C <AmiBlitz3.ab3@17485>   MOVE.w (A7)+,regnum
0002E640 <AmiBlitz3.ab3@17488>   CMP.w #"}",D0
0002E644 <AmiBlitz3.ab3@17489>    BNE.w errorbracketmiss2
0002E646 <AmiBlitz3.ab3@17490>    MOVEQ #0,d1                                            ; end of function call pars
0002E64C <AmiBlitz3.ab3@17491>   MOVE.w regnum,D1
0002E650 <AmiBlitz3.ab3@17492>    BEQ.w JL_0_B08A
0002E656 <AmiBlitz3.ab3@17493>    TST.b fpu
0002E65A <AmiBlitz3.ab3@17494>    BEQ 'old
0002E662 <AmiBlitz3.ab3@17495>    CMP.b #5,retmode
0002E666 <AmiBlitz3.ab3@17496>    BNE 'old
0002E668 <AmiBlitz3.ab3@17497>    ASL.l #7,d1
0002E66E <AmiBlitz3.ab3@17498>    OR.l #$f2000000,d1
0002E672 <AmiBlitz3.ab3@17499>    BSR writelong
0002E676 <AmiBlitz3.ab3@17500> BRA JL_0_B08A
0002E678 <AmiBlitz3.ab3@17502>  'old  LSL.w #8,D1
0002E67A <AmiBlitz3.ab3@17503>   LSL.w #1,D1
0002E67E <AmiBlitz3.ab3@17504>   ORI.w #$2000,D1
0002E682 <AmiBlitz3.ab3@17505>    BSR.w writeword
0002E684 <AmiBlitz3.ab3@17508>    MOVE.w (A7)+,D3
0002E688 <AmiBlitz3.ab3@17509>    BEQ.w JL_0_B0A8
0002E68E <AmiBlitz3.ab3@17510>    TST.b fpu
0002E692 <AmiBlitz3.ab3@17511>    BEQ 'old
0002E694 <AmiBlitz3.ab3@17512>    MOVE.l d0,-(a7)
0002E698 <AmiBlitz3.ab3@17513>    MOVE.w #8,d0
0002E69A <AmiBlitz3.ab3@17514>    MOVE.l a0,-(a7)
0002E6A0 <AmiBlitz3.ab3@17515>    MOVE.l stacktrack,d1
0002E6A6 <AmiBlitz3.ab3@17516>    LEA fpustackbase,a0
0002E6AE <AmiBlitz3.ab3@17517>    MOVE.w 0(a0,d1),regmask
0002E6B0 <AmiBlitz3.ab3@17518>    MOVE.l (a7)+,a0
0002E6B4 <AmiBlitz3.ab3@17521>   BEQ 'ready
0002E6BA <AmiBlitz3.ab3@17522>    BTST d0,regmask
0002E6BE <AmiBlitz3.ab3@17523>    BEQ 'noa7
0002E6C0 <AmiBlitz3.ab3@17524>    MOVEQ #0,d1
0002E6C2 <AmiBlitz3.ab3@17525>    MOVE.w d0,d1
0002E6C4 <AmiBlitz3.ab3@17526>    SUBQ.w #1,d1
0002E6C6 <AmiBlitz3.ab3@17527>    ASL #7,d1
0002E6CC <AmiBlitz3.ab3@17529>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002E6D0 <AmiBlitz3.ab3@17530>    BSR writelong
0002E6D6 <AmiBlitz3.ab3@17531>    SUBQ.l #2,stacktrack
0002E6D8 <AmiBlitz3.ab3@17534>    SUBQ.w #1,d0
0002E6DC <AmiBlitz3.ab3@17535>    BNE 'loop
0002E6E2 <AmiBlitz3.ab3@17538>   SUBQ.l #2,stacktrack                                     ;integer sub
0002E6E4 <AmiBlitz3.ab3@17539>   MOVE.l (a7)+,d0
0002E6E8 <AmiBlitz3.ab3@17542>   MOVE.w #$4CDF,D1
0002E6EC <AmiBlitz3.ab3@17543>    BSR.w writeword
0002E6EE <AmiBlitz3.ab3@17544>   MOVEQ.l #$00,D1
0002E6F0 <AmiBlitz3.ab3@17545>   MOVEQ.l #$0F,D4
0002E6F2 <AmiBlitz3.ab3@17548>     LSL.w #1,D3
0002E6F4 <AmiBlitz3.ab3@17549>     ROXR.w #1,D1
0002E6F8 <AmiBlitz3.ab3@17550>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002E6FC <AmiBlitz3.ab3@17552>     BSR.w writeword
0002E702 <AmiBlitz3.ab3@17553>    CLR.w regnumfunc
0002E704 <AmiBlitz3.ab3@17556>   MOVE.w (A7)+,D1
0002E708 <AmiBlitz3.ab3@17557>    BEQ.b JL_0_B0D2
0002E70C <AmiBlitz3.ab3@17558>   CMPI.w #$7,(A7)
0002E710 <AmiBlitz3.ab3@17559>    BEQ.b JL_0_B0C4
0002E716 <AmiBlitz3.ab3@17560>   LEA geta3,A0
0002E71C <AmiBlitz3.ab3@17561>   LEA numtoa0,A1
0002E720 <AmiBlitz3.ab3@17562>    BSR.w pokecode
0002E724 <AmiBlitz3.ab3@17563> BRA.b JL_0_B0CE
0002E72A <AmiBlitz3.ab3@17566>   MOVE.w deca3,D1
0002E72E <AmiBlitz3.ab3@17567>    BSR.w writeword
0002E732 <AmiBlitz3.ab3@17570>   BSR.w dopulla3                                           ;fix up string base
0002E734 <AmiBlitz3.ab3@17573>   MOVE.w (A7)+,D2                                          ;what it returns!
0002E738 <AmiBlitz3.ab3@17574>   CMP.w #$7,D2
0002E73C <AmiBlitz3.ab3@17575>    BNE.w JL_0_B0EC
0002E742 <AmiBlitz3.ab3@17576>   MOVE.w putstlen,D1
0002E748 <AmiBlitz3.ab3@17577>   OR.w regnum,D1
0002E74C <AmiBlitz3.ab3@17578>    BSR.w writeword
0002E750 <AmiBlitz3.ab3@17581>   BSR.w get1bytemain
0002E754 <AmiBlitz3.ab3@17582> BRA.w JL_0_AF66
0002E756 <AmiBlitz3.ab3@17586> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002E75E <AmiBlitz3.ab3@17591>   CMP.b #2,optistring
0002E762 <AmiBlitz3.ab3@17592>   BEQ fs2
0002E766 <AmiBlitz3.ab3@17593>   BSR.w makesbase                                          ;writestringvariable
0002E76A <AmiBlitz3.ab3@17594>   BTST #$F,D2
0002E76E <AmiBlitz3.ab3@17595>    BNE.w JL_0_B112
0002E774 <AmiBlitz3.ab3@17596>   MOVE.w D3,leaa5d3a2+2
0002E77A <AmiBlitz3.ab3@17597>   MOVE.l leaa5d3a2,D1
0002E77E <AmiBlitz3.ab3@17598>    BSR.w pokela5s
0002E784 <AmiBlitz3.ab3@17601>   MOVE.w regnum,D1
0002E786 <AmiBlitz3.ab3@17602>   LSL.w #8,D1
0002E788 <AmiBlitz3.ab3@17603>   LSL.w #1,D1
0002E78C <AmiBlitz3.ab3@17604>   ORI.w #$7000,D1
0002E792 <AmiBlitz3.ab3@17605>   LEA stvarget2,A0
0002E794 <AmiBlitz3.ab3@17606>   MOVE.w D1,(A0)
0002E79A <AmiBlitz3.ab3@17607>   MOVE.w regnum,D1
0002E7A0 <AmiBlitz3.ab3@17608>   ANDI.w #$FFF8,$2(A0)
0002E7A4 <AmiBlitz3.ab3@17609>   OR.w D1,$2(A0)
0002E7AA <AmiBlitz3.ab3@17610>   LEA stvarget2f,A1
0002E7AE <AmiBlitz3.ab3@17611>    BSR.w pokecode
0002E7B2 <AmiBlitz3.ab3@17612>   MOVE.w #$C600,D1
0002E7B6 <AmiBlitz3.ab3@17613>    BSR.w Atokejsr
0002E7B8 <AmiBlitz3.ab3@17614>   MOVEQ.l #$07,D2
0002E7BC <AmiBlitz3.ab3@17615> BRA.w reget
0002E7C2 <AmiBlitz3.ab3@17618>      TST.w stackpar
0002E7C6 <AmiBlitz3.ab3@17619>      BMI 'l10
0002E7CC <AmiBlitz3.ab3@17620>      MOVE.l #$3f3c0007,d1
0002E7D2 <AmiBlitz3.ab3@17621>      ADDQ.w #2,a2offset
0002E7D6 <AmiBlitz3.ab3@17622>      BSR writelong
0002E7DA <AmiBlitz3.ab3@17625>   MOVE.w #$4878,d1
0002E7E0 <AmiBlitz3.ab3@17626>      CLR.w stackpar
0002E7E4 <AmiBlitz3.ab3@17627>      BSR writeword
0002E7E8 <AmiBlitz3.ab3@17628>      MOVE.w #$0,d1
0002E7EC <AmiBlitz3.ab3@17629>      BSR writeword
0002E7F0 <AmiBlitz3.ab3@17630>      MOVE.w #$246d,d1
0002E7F4 <AmiBlitz3.ab3@17631>      BSR writeword
0002E7F6 <AmiBlitz3.ab3@17632>      MOVE.w d3,d1
0002E7FA <AmiBlitz3.ab3@17633>      BSR writeword
0002E800 <AmiBlitz3.ab3@17634>      MOVE.l #$4a926704,d1
0002E804 <AmiBlitz3.ab3@17635>      BSR writelong
0002E80A <AmiBlitz3.ab3@17636>      MOVE.l #$2eaafffc,d1
0002E80E <AmiBlitz3.ab3@17637>      BSR writelong
0002E812 <AmiBlitz3.ab3@17638>      MOVE.w #$2f0a,d1
0002E818 <AmiBlitz3.ab3@17639>      ADDQ.w #8,a2offset
0002E81C <AmiBlitz3.ab3@17640>      BSR writeword
0002E820 <AmiBlitz3.ab3@17641> BRA.w reget
0002E824 <AmiBlitz3.ab3@17644>   CMP.b #$7,D2                                             ;load basic var
0002E828 <AmiBlitz3.ab3@17645>    BEQ.w JL_0_B0F6
0002E82E <AmiBlitz3.ab3@17647>    TST.b iee
0002E832 <AmiBlitz3.ab3@17648>    BEQ 'noiee
0002E836 <AmiBlitz3.ab3@17649>    CMP.b #5,d2
0002E83A <AmiBlitz3.ab3@17650>    BNE 'noiee
0002E83C <AmiBlitz3.ab3@17651>    MOVE.l d0,-(a7)                                         ;fpu load var
0002E840 <AmiBlitz3.ab3@17652>    BTST #15,d2
0002E844 <AmiBlitz3.ab3@17653>    BEQ 'var
0002E84A <AmiBlitz3.ab3@17654>    CMP.l #$7fff,d3
0002E84E <AmiBlitz3.ab3@17655>    BGT 'longoffset
0002E854 <AmiBlitz3.ab3@17656>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002E856 <AmiBlitz3.ab3@17657>    TST.w d3                                                ;offset =0
0002E85A <AmiBlitz3.ab3@17658>    BNE 'offset
0002E860 <AmiBlitz3.ab3@17661>   MOVE.l #$f2124400,d1
0002E862 <AmiBlitz3.ab3@17662>    MOVEQ #0,d3
0002E866 <AmiBlitz3.ab3@17663> BRA 'glob
0002E86C <AmiBlitz3.ab3@17666>   SUBQ.l #4,destpointer
0002E870 <AmiBlitz3.ab3@17667> BRA 'glob
0002E876 <AmiBlitz3.ab3@17670>   TST.b fast
0002E87A <AmiBlitz3.ab3@17671>    BEQ 'nofastload
0002E880 <AmiBlitz3.ab3@17672>    TST.w regnum
0002E884 <AmiBlitz3.ab3@17673>    BNE 'nofastload
0002E88A <AmiBlitz3.ab3@17674>    CMP.l fp0addr,a4
0002E88E <AmiBlitz3.ab3@17675>    BNE 'nofastload
0002E894 <AmiBlitz3.ab3@17676>    MOVE.l fp0iff,d1
0002E89A <AmiBlitz3.ab3@17677>    CMP.l firstiff,d1
0002E89E <AmiBlitz3.ab3@17678>    BNE 'nofastload
0002E8A4 <AmiBlitz3.ab3@17679>    MOVE.w varmode,d1
0002E8AA <AmiBlitz3.ab3@17680>    CMP.w fp0mode,d1
0002E8AE <AmiBlitz3.ab3@17681>    BNE 'nofastload
0002E8B4 <AmiBlitz3.ab3@17682>    CMP.w fp0var,d3
0002E8B8 <AmiBlitz3.ab3@17683>    BNE 'nofastload
0002E8BC <AmiBlitz3.ab3@17684>    BCLR #16,d2
0002E8BE <AmiBlitz3.ab3@17685>    MOVE.l (a7)+,d0
0002E8C0 <AmiBlitz3.ab3@17686> RTS
0002E8C2 <AmiBlitz3.ab3@17689>    MOVEQ #0,d0
0002E8C8 <AmiBlitz3.ab3@17690>    MOVE.w regnum,d0
0002E8CE <AmiBlitz3.ab3@17691>    CMP.l maxregs,d0
0002E8D2 <AmiBlitz3.ab3@17692>    BLE 'ok
0002E8D8 <AmiBlitz3.ab3@17693>    LEA cmplxerr,a0
0002E8DA <AmiBlitz3.ab3@17694>   MOVE.l a0,-(a7)
0002E8E0 <AmiBlitz3.ab3@17695> JMP handle_compileerror
0002E8E6 <AmiBlitz3.ab3@17698>    LEA regtable,a4
0002E8E8 <AmiBlitz3.ab3@17699>    TST.l (a4)
0002E8EC <AmiBlitz3.ab3@17700>    BEQ 'noreg
0002E8F0 <AmiBlitz3.ab3@17701>    CMP.w 0+4(a4),d3
0002E8F4 <AmiBlitz3.ab3@17702>    BNE 'doreg1
0002E8FA <AmiBlitz3.ab3@17703>    MOVE.l #$f2001c00,d1
0002E900 <AmiBlitz3.ab3@17704>    MOVE.w regnum,d0
0002E902 <AmiBlitz3.ab3@17705>    ASL.w #7,d0
0002E904 <AmiBlitz3.ab3@17706>    OR.w d0,d1
0002E908 <AmiBlitz3.ab3@17707>    BSR writelong
0002E90A <AmiBlitz3.ab3@17708>    MOVE.l (a7)+,d0
0002E90C <AmiBlitz3.ab3@17709> RTS
0002E910 <AmiBlitz3.ab3@17712>   CMP.w 8+4(a4),d3
0002E914 <AmiBlitz3.ab3@17713>    BNE 'doreg2
0002E91A <AmiBlitz3.ab3@17714>    MOVE.l #$f2001800,d1
0002E920 <AmiBlitz3.ab3@17715>    MOVE.w regnum,d0
0002E922 <AmiBlitz3.ab3@17716>    ASL.w #7,d0
0002E924 <AmiBlitz3.ab3@17717>    OR.w d0,d1
0002E928 <AmiBlitz3.ab3@17718>    BSR writelong
0002E92A <AmiBlitz3.ab3@17719>    MOVE.l (a7)+,d0
0002E92C <AmiBlitz3.ab3@17720> RTS
0002E930 <AmiBlitz3.ab3@17723>   CMP.w 16+4(a4),d3
0002E934 <AmiBlitz3.ab3@17724>    BNE 'doreg3
0002E93A <AmiBlitz3.ab3@17725>    MOVE.l #$f2001400,d1
0002E940 <AmiBlitz3.ab3@17726>    MOVE.w regnum,d0
0002E942 <AmiBlitz3.ab3@17727>    ASL.w #7,d0
0002E944 <AmiBlitz3.ab3@17728>    OR.w d0,d1
0002E948 <AmiBlitz3.ab3@17729>    BSR  writelong
0002E94A <AmiBlitz3.ab3@17730>    MOVE.l (a7)+,d0
0002E94C <AmiBlitz3.ab3@17731> RTS
0002E950 <AmiBlitz3.ab3@17734>   CMP.w 24+4(a4),d3
0002E954 <AmiBlitz3.ab3@17735>    BNE 'doreg4
0002E95A <AmiBlitz3.ab3@17736>    MOVE.l #$f2001000,d1
0002E960 <AmiBlitz3.ab3@17737>    MOVE.w regnum,d0
0002E962 <AmiBlitz3.ab3@17738>    ASL.w #7,d0
0002E964 <AmiBlitz3.ab3@17739>    OR.w d0,d1
0002E968 <AmiBlitz3.ab3@17740>    BSR writelong
0002E96A <AmiBlitz3.ab3@17741>    MOVE.l (a7)+,d0
0002E96C <AmiBlitz3.ab3@17742> RTS
0002E970 <AmiBlitz3.ab3@17745>    CMP.w 32+4(a4),d3
0002E974 <AmiBlitz3.ab3@17746>    BNE 'noreg
0002E97A <AmiBlitz3.ab3@17747>    MOVE.l #$f2000c00,d1
0002E980 <AmiBlitz3.ab3@17748>    MOVE.w regnum,d0
0002E982 <AmiBlitz3.ab3@17749>    ASL.w #7,d0
0002E984 <AmiBlitz3.ab3@17750>    OR.w d0,d1
0002E988 <AmiBlitz3.ab3@17751>    BSR writelong
0002E98A <AmiBlitz3.ab3@17752>    MOVE.l (a7)+,d0
0002E98C <AmiBlitz3.ab3@17753> RTS
0002E992 <AmiBlitz3.ab3@17756>    MOVE.l #$f22d4400,d1                                    ;var
0002E998 <AmiBlitz3.ab3@17757>    TST.w varmode
0002E99C <AmiBlitz3.ab3@17758>   BEQ 'glob
0002E9A0 <AmiBlitz3.ab3@17759>   BCLR #16,d1                                              ;local
0002E9A2 <AmiBlitz3.ab3@17762>    MOVEQ #0,d0
0002E9A8 <AmiBlitz3.ab3@17763>    MOVE.w regnum,d0
0002E9AC <AmiBlitz3.ab3@17764>    CMP.w #7,d0
0002E9B0 <AmiBlitz3.ab3@17765>    BLE 'ok2
0002E9B6 <AmiBlitz3.ab3@17766>    LEA cmplxerr,a0
0002E9B8 <AmiBlitz3.ab3@17767>   MOVE.l a0,-(a7)
0002E9BE <AmiBlitz3.ab3@17768> JMP handle_compileerror
0002E9C0 <AmiBlitz3.ab3@17771>      ASL.w #7,d0
0002E9C2 <AmiBlitz3.ab3@17772>    OR.l d0,d1
0002E9CA <AmiBlitz3.ab3@17773>    CMP.l #doublecheck,8(a2)
0002E9CE <AmiBlitz3.ab3@17774>    BNE 'dbl
0002E9D4 <AmiBlitz3.ab3@17775>    OR.l #$00001000,d1
0002E9D8 <AmiBlitz3.ab3@17778>   BSR writelong
0002E9DA <AmiBlitz3.ab3@17779>    MOVE.l (a7)+,d0
0002E9DE <AmiBlitz3.ab3@17780>    AND.w #$ff,d2
0002E9E0 <AmiBlitz3.ab3@17781>    MOVE.w d3,d1
0002E9E4 <AmiBlitz3.ab3@17782>    BEQ 'nooffs
0002E9E8 <AmiBlitz3.ab3@17783> BRA writeword
0002E9EA <AmiBlitz3.ab3@17788> RTS
0002E9F0 <AmiBlitz3.ab3@17791>   MOVE.w regnum,D1
0002E9F6 <AmiBlitz3.ab3@17792>   MOVE.w d1,load_var_reg
0002E9F8 <AmiBlitz3.ab3@17793>   LSL.w #8,D1
0002EA02 <AmiBlitz3.ab3@17794>   MOVE.l destpointer,load_var_addr
0002EA08 <AmiBlitz3.ab3@17795>   MOVE.w d2,load_var_size
0002EA0A <AmiBlitz3.ab3@17796>   LSL.w #1,D1
0002EA0E <AmiBlitz3.ab3@17797>   BTST #$E,D2
0002EA12 <AmiBlitz3.ab3@17798>    BNE.w JL_0_B17A
0002EA14 <AmiBlitz3.ab3@17799>   TST.b D2
0002EA18 <AmiBlitz3.ab3@17800>    BNE.w JL_0_B17E
0002EA1A <AmiBlitz3.ab3@17801>   MOVEQ.l #$03,D2
0002EA1E <AmiBlitz3.ab3@17802>   ORI.w #$200A,D1
0002EA22 <AmiBlitz3.ab3@17803> BRA.w writeword
0002EA26 <AmiBlitz3.ab3@17806>   MOVE.b #$3,D2
0002EA2A <AmiBlitz3.ab3@17809>   BTST #$F,D2
0002EA2E <AmiBlitz3.ab3@17810>    BEQ.w JL_0_B19A                                         ;loadarray
0002EA34 <AmiBlitz3.ab3@17811>    TST.b fast                                              ;lea->move xx(a2)
0002EA38 <AmiBlitz3.ab3@17812>    BEQ 'la10
0002EA3E <AmiBlitz3.ab3@17817>    CLR.l load_var_addr
0002EA42 <AmiBlitz3.ab3@17818> BRA 'la10
0002EA4A <AmiBlitz3.ab3@17820>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EA4E <AmiBlitz3.ab3@17821>    BNE 'la10
0002EA54 <AmiBlitz3.ab3@17822>    TST.b optiarray
0002EA58 <AmiBlitz3.ab3@17823>    BNE 'la10
0002EA5E <AmiBlitz3.ab3@17824>    MOVE.l destpointer,a4
0002EA64 <AmiBlitz3.ab3@17825>    SUB.l loada,a4
0002EA68 <AmiBlitz3.ab3@17826>    CMP.w #4,a4
0002EA6C <AmiBlitz3.ab3@17827>    BEQ 'la100
0002EA70 <AmiBlitz3.ab3@17828>    CMP.w #2,a4
0002EA74 <AmiBlitz3.ab3@17829>    BNE 'la10
0002EA7A <AmiBlitz3.ab3@17830>    MOVE.l destpointer,a4
0002EA7E <AmiBlitz3.ab3@17831>    CMP.b #3,d2
0002EA82 <AmiBlitz3.ab3@17832>    BCS 'la110
0002EA88 <AmiBlitz3.ab3@17833>    MOVE.w #$202a,-2(a4)
0002EA8C <AmiBlitz3.ab3@17834>    OR.w d1,-2(a4)
0002EA92 <AmiBlitz3.ab3@17835>    MOVE.w arrayoffset,d1
0002EA96 <AmiBlitz3.ab3@17836>    BSR writeword
0002EA9A <AmiBlitz3.ab3@17837> BRA JL_0_B194
0002EA9E <AmiBlitz3.ab3@17840>    CMP.b #2,d2
0002EAA2 <AmiBlitz3.ab3@17841>    BNE 'la120
0002EAA8 <AmiBlitz3.ab3@17842>     MOVE.w #$302a,-2(a4)
0002EAAC <AmiBlitz3.ab3@17843>    OR.w d1,-2(a4)
0002EAB2 <AmiBlitz3.ab3@17845>    MOVE.w arrayoffset,d1
0002EAB6 <AmiBlitz3.ab3@17846>    BSR writeword
0002EABA <AmiBlitz3.ab3@17847> BRA JL_0_B194
0002EABE <AmiBlitz3.ab3@17850>   CMP.b #1,d2
0002EAC2 <AmiBlitz3.ab3@17851>    BNE.s 'la10
0002EAC8 <AmiBlitz3.ab3@17852>     MOVE.w #$102a,-2(a4)
0002EACC <AmiBlitz3.ab3@17853>    OR.w d1,-2(a4)
0002EAD2 <AmiBlitz3.ab3@17854>    MOVE.w arrayoffset,d1
0002EAD6 <AmiBlitz3.ab3@17855>    BSR writeword
0002EADA <AmiBlitz3.ab3@17856> BRA JL_0_B194
0002EAE0 <AmiBlitz3.ab3@17859>   MOVE.l destpointer,a4
0002EAE6 <AmiBlitz3.ab3@17860>    CMP.w #$45ea,-2(a4)
0002EAEA <AmiBlitz3.ab3@17861>    BNE 'la10
0002EAEE <AmiBlitz3.ab3@17862>    CMP.b #3,d2
0002EAF2 <AmiBlitz3.ab3@17863>    BCS 'la11
0002EAF8 <AmiBlitz3.ab3@17864>    MOVE.w #$202a,-4(a4)
0002EAFC <AmiBlitz3.ab3@17865>    OR.w d1,-4(a4)
0002EB00 <AmiBlitz3.ab3@17866> BRA JL_0_B194
0002EB04 <AmiBlitz3.ab3@17869>    CMP.b #2,d2
0002EB08 <AmiBlitz3.ab3@17870>    BNE 'la12
0002EB0E <AmiBlitz3.ab3@17871>     MOVE.w #$302a,-4(a4)
0002EB12 <AmiBlitz3.ab3@17872>    OR.w d1,-4(a4)
0002EB16 <AmiBlitz3.ab3@17873> BRA JL_0_B194
0002EB1A <AmiBlitz3.ab3@17876>   CMP.b #1,d2
0002EB1E <AmiBlitz3.ab3@17877>    BNE.s 'la10
0002EB24 <AmiBlitz3.ab3@17878>     MOVE.w #$102a,-4(a4)
0002EB28 <AmiBlitz3.ab3@17879>    OR.w d1,-4(a4)
0002EB2C <AmiBlitz3.ab3@17880> BRA JL_0_B194
0002EB32 <AmiBlitz3.ab3@17883>    OR.w movea2dn,D1
0002EB36 <AmiBlitz3.ab3@17884>    BSR.w JL_0_B1B2
0002EB3A <AmiBlitz3.ab3@17885>    BSR.w writeword
0002EB3E <AmiBlitz3.ab3@17888>   ANDI.w #$FF,D2
0002EB40 <AmiBlitz3.ab3@17889> RTS
0002EB46 <AmiBlitz3.ab3@17893>    MOVE.l destpointer,a4
0002EB4E <AmiBlitz3.ab3@17894>    MOVE.l #$f22a4400,-4(a4)
0002EB54 <AmiBlitz3.ab3@17895>    MOVE.w arrayoffset,d1
0002EB58 <AmiBlitz3.ab3@17896> BRA writeword
0002EB5E <AmiBlitz3.ab3@17900>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002EB62 <AmiBlitz3.ab3@17901>    BSR.w JL_0_B1B2
0002EB66 <AmiBlitz3.ab3@17902>    BSR.w pokewda5s
0002EB68 <AmiBlitz3.ab3@17903>   MOVE.w D3,D1
0002EB6C <AmiBlitz3.ab3@17904>    BSR.w writeword
0002EB70 <AmiBlitz3.ab3@17905> BRA.w JL_0_B194
0002EB74 <AmiBlitz3.ab3@17908>   BTST #$E,D2
0002EB78 <AmiBlitz3.ab3@17909>    BNE.w JL_0_B1CA
0002EB7C <AmiBlitz3.ab3@17910>   CMP.b #$1,D2
0002EB80 <AmiBlitz3.ab3@17911>    BEQ.w JL_0_B1CC
0002EB84 <AmiBlitz3.ab3@17912>   CMP.b #$2,D2
0002EB88 <AmiBlitz3.ab3@17913>    BEQ.w JL_0_B1D2
0002EB8A <AmiBlitz3.ab3@17916> RTS
0002EB8E <AmiBlitz3.ab3@17919>   EORI.w #$3000,D1
0002EB90 <AmiBlitz3.ab3@17920> RTS
0002EB94 <AmiBlitz3.ab3@17923>   ORI.w #$1000,D1
0002EB96 <AmiBlitz3.ab3@17924> RTS
0002EB9E <AmiBlitz3.ab3@17928>   MOVE.w #$FFFF,dfetch
0002EBA2 <AmiBlitz3.ab3@17929>   BSR.w get1bytemain
0002EBA6 <AmiBlitz3.ab3@17930>   CMP.w #$2D,D0
0002EBAA <AmiBlitz3.ab3@17931>    BNE.w JL_0_B206
0002EBAE <AmiBlitz3.ab3@17932>   BSR.w get1bytemain
0002EBB2 <AmiBlitz3.ab3@17933>   BSR.w JL_0_B206
0002EBB6 <AmiBlitz3.ab3@17934>   CMP.w #$5,D2
0002EBBA <AmiBlitz3.ab3@17935>    BCC.w JL_0_B200
0002EBBC <AmiBlitz3.ab3@17936>   NEG.l D0
0002EBBE <AmiBlitz3.ab3@17937> RTS
0002EBC4 <AmiBlitz3.ab3@17940>   TST.b fpu
0002EBC8 <AmiBlitz3.ab3@17941>   BEQ 'noneg
0002EBCC <AmiBlitz3.ab3@17942>   fneg.x fp0
0002EBCE <AmiBlitz3.ab3@17943> RTS
0002EBD2 <AmiBlitz3.ab3@17946>   BCHG #$7,D0
0002EBD4 <AmiBlitz3.ab3@17947> RTS
0002EBD8 <AmiBlitz3.ab3@17950>   CMP.w #$24,D0
0002EBDC <AmiBlitz3.ab3@17951>    BEQ.w get_hexconstant
0002EBE0 <AmiBlitz3.ab3@17952>   CMP.w #$25,D0
0002EBE4 <AmiBlitz3.ab3@17953>    BEQ.w JL_0_A8C0
0002EBE8 <AmiBlitz3.ab3@17954>   CMP.w #$2E,D0
0002EBEC <AmiBlitz3.ab3@17955>    BNE.w JL_0_B224
0002EBEE <AmiBlitz3.ab3@17958>   MOVEQ.l #$00,D3
0002EBF2 <AmiBlitz3.ab3@17959> BRA.w JL_0_B272
0002EBF4 <AmiBlitz3.ab3@17962>   MOVEQ.l #$00,D3                                          ;number
0002EBF8 <AmiBlitz3.ab3@17963>    BSR.w atoi
0002EBFC <AmiBlitz3.ab3@17964>   CMP.w #$2E,D0
0002EC00 <AmiBlitz3.ab3@17965>    BEQ.w JL_0_B268
0002EC04 <AmiBlitz3.ab3@17966>   ORI.w #$20,D0
0002EC08 <AmiBlitz3.ab3@17967>   CMP.w #$65,D0
0002EC0C <AmiBlitz3.ab3@17968>    BNE.w JL_0_B46E
0002EC12 <AmiBlitz3.ab3@17969>   CMP.l #$800000,D3
0002EC16 <AmiBlitz3.ab3@17970>    BCC.w overerr
0002EC18 <AmiBlitz3.ab3@17971>   MOVEQ.l #-$01,D6
0002EC1C <AmiBlitz3.ab3@17972>   fmove.l d3,fp0
0002EC1E <AmiBlitz3.ab3@17973>   MOVE.l D3,D0
0002EC24 <AmiBlitz3.ab3@17974>   MOVEA.l _mathffpbase,A6
0002EC28 <AmiBlitz3.ab3@17975>    JSR -$24(A6)
0002EC2A <AmiBlitz3.ab3@17976>   MOVE.l D0,D3
0002EC2E <AmiBlitz3.ab3@17977>    BSR.w JL_0_B2E6
0002EC32 <AmiBlitz3.ab3@17978>    BSR.w reget
0002EC36 <AmiBlitz3.ab3@17979>    BSR.w JL_0_B480
0002EC3A <AmiBlitz3.ab3@17980> BRA.w JL_0_B3DC
0002EC3E <AmiBlitz3.ab3@17983>   CMP.b #4,d2
0002EC42 <AmiBlitz3.ab3@17984>   BEQ 'l4
0002EC46 <AmiBlitz3.ab3@17985>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002EC4C <AmiBlitz3.ab3@17988>    TST.b fpu
0002EC50 <AmiBlitz3.ab3@17989>    BNE 'l1
0002EC56 <AmiBlitz3.ab3@17990>    CMP.l #$800000,D3
0002EC5A <AmiBlitz3.ab3@17991>    BCC.w overerr
0002EC5E <AmiBlitz3.ab3@17992> BRA JL_0_B272
0002EC64 <AmiBlitz3.ab3@17995>   CMP.l #$7fffffff,d3
0002EC68 <AmiBlitz3.ab3@17996>     BCC.w overerr
0002EC6A <AmiBlitz3.ab3@17999>   MOVEQ.l #-$01,D6
0002EC6C <AmiBlitz3.ab3@18000>   MOVE.l D3,D0
0002EC70 <AmiBlitz3.ab3@18001>   fmove.l d3,fp0
0002EC76 <AmiBlitz3.ab3@18002>   MOVEA.l _mathffpbase,A6
0002EC7A <AmiBlitz3.ab3@18003>    JSR -$24(A6)                                            ;integer to ffp
0002EC7C <AmiBlitz3.ab3@18004>   MOVE.l D0,-(A7)
0002EC80 <AmiBlitz3.ab3@18005>    BSR.w get1bytemain
0002EC84 <AmiBlitz3.ab3@18006>    BSR.w tstnum
0002EC88 <AmiBlitz3.ab3@18007>    BNE.w syntaxerr
0002EC8A <AmiBlitz3.ab3@18008>   MOVEQ.l #$00,D3
0002EC8E <AmiBlitz3.ab3@18009>    BSR.w atoi
0002EC90 <AmiBlitz3.ab3@18010>   TST.l D3
0002EC94 <AmiBlitz3.ab3@18011>    BEQ.w JL_0_B2E0
0002EC9A <AmiBlitz3.ab3@18012>   TST.b fpu
0002EC9E <AmiBlitz3.ab3@18013>   BNE 'l1
0002ECA4 <AmiBlitz3.ab3@18014>   CMP.l #$800000,D3
0002ECA8 <AmiBlitz3.ab3@18015>    BCC.w overerr
0002ECAC <AmiBlitz3.ab3@18016> BRA 'l2
0002ECB2 <AmiBlitz3.ab3@18019>   CMP.l #$7fffffff,d3
0002ECB6 <AmiBlitz3.ab3@18020>   BCC overerr
0002ECBA <AmiBlitz3.ab3@18023>   fmove.l d5,fp1
0002ECBC <AmiBlitz3.ab3@18024>   MOVE.l D5,D0
0002ECC0 <AmiBlitz3.ab3@18025>    JSR -$24(A6)
0002ECC2 <AmiBlitz3.ab3@18026>   MOVE.l D0,D5
0002ECC6 <AmiBlitz3.ab3@18027>   fmove.l d3,fp2
0002ECC8 <AmiBlitz3.ab3@18028>   MOVE.l D3,D0
0002ECCC <AmiBlitz3.ab3@18029>    JSR -$24(A6)
0002ECD0 <AmiBlitz3.ab3@18030>   fdiv.x fp1,fp2
0002ECD2 <AmiBlitz3.ab3@18031>   MOVE.l D5,D1
0002ECD6 <AmiBlitz3.ab3@18032>    JSR -$54(A6)
0002ECDA <AmiBlitz3.ab3@18033>   fadd.x fp2,fp0
0002ECDC <AmiBlitz3.ab3@18034>   MOVE.l (A7)+,D1
0002ECE0 <AmiBlitz3.ab3@18035>    JSR -$42(A6)
0002ECE2 <AmiBlitz3.ab3@18036>   MOVE.l D0,D3
0002ECE6 <AmiBlitz3.ab3@18037>    BSR.w reget
0002ECEA <AmiBlitz3.ab3@18038>   ORI.w #$20,D0
0002ECEE <AmiBlitz3.ab3@18039>   CMP.w #$65,D0
0002ECF2 <AmiBlitz3.ab3@18040>    BNE.w JL_0_B2D4
0002ECF6 <AmiBlitz3.ab3@18041>    BSR.w JL_0_B2E6
0002ECFA <AmiBlitz3.ab3@18044>    BSR.w reget
0002ECFE <AmiBlitz3.ab3@18045>    BSR.w JL_0_B480
0002ED02 <AmiBlitz3.ab3@18046> BRA.w JL_0_B3DC
0002ED04 <AmiBlitz3.ab3@18049>   MOVE.l (A7)+,D3
0002ED08 <AmiBlitz3.ab3@18050> BRA.w JL_0_B2D4
0002ED0C <AmiBlitz3.ab3@18053>   BSR.w get1bytemain
0002ED10 <AmiBlitz3.ab3@18054>   CMP.w #$2B,D0
0002ED14 <AmiBlitz3.ab3@18055>    BEQ.w JL_0_B30E
0002ED18 <AmiBlitz3.ab3@18056>   CMP.w #$2D,D0
0002ED1C <AmiBlitz3.ab3@18057>    BNE.w JL_0_B312
0002ED20 <AmiBlitz3.ab3@18058>    BSR.w get1bytemain
0002ED24 <AmiBlitz3.ab3@18059>    BSR.w getsign
0002ED26 <AmiBlitz3.ab3@18060>   MOVE.l D3,D0
0002ED2A <AmiBlitz3.ab3@18061>   fdiv.x fp1,fp0
0002ED2C <AmiBlitz3.ab3@18062>   MOVE.l D4,D1
0002ED30 <AmiBlitz3.ab3@18063>    JSR -$54(A6)
0002ED32 <AmiBlitz3.ab3@18064>   MOVE.l D0,D3
0002ED34 <AmiBlitz3.ab3@18065> RTS
0002ED38 <AmiBlitz3.ab3@18068>   BSR.w get1bytemain
0002ED3C <AmiBlitz3.ab3@18071>   BSR.w getsign
0002ED40 <AmiBlitz3.ab3@18072>   fmul.x fp1,fp0
0002ED42 <AmiBlitz3.ab3@18073>   MOVE.l D3,D0
0002ED44 <AmiBlitz3.ab3@18074>   MOVE.l D4,D1
0002ED48 <AmiBlitz3.ab3@18075>    JSR -$4E(A6)
0002ED4A <AmiBlitz3.ab3@18076>   MOVE.l D0,D3
0002ED4C <AmiBlitz3.ab3@18077> RTS
0002ED50 <AmiBlitz3.ab3@18080>   BSR.w tstnum
0002ED54 <AmiBlitz3.ab3@18081>    BNE.w syntaxerr
0002ED56 <AmiBlitz3.ab3@18082>   MOVE.w D0,D4
0002ED5A <AmiBlitz3.ab3@18083>   SUBI.w #$30,D4
0002ED5E <AmiBlitz3.ab3@18084>    BSR.w get1bytemain
0002ED62 <AmiBlitz3.ab3@18085>    BSR.w tstnum
0002ED66 <AmiBlitz3.ab3@18086>    BNE.w getsign__skip
0002ED6A <AmiBlitz3.ab3@18087>   MULU #$A,D4
0002ED6E <AmiBlitz3.ab3@18088>   SUBI.w #$30,D0
0002ED70 <AmiBlitz3.ab3@18089>   ADD.w D0,D4
0002ED74 <AmiBlitz3.ab3@18090>    BSR.w get1bytemain
0002ED78 <AmiBlitz3.ab3@18093>   CMP.w #$12,D4
0002ED7C <AmiBlitz3.ab3@18094>    BHI.w overerr
0002ED7E <AmiBlitz3.ab3@18095>   LSL.w #3,D4
0002ED84 <AmiBlitz3.ab3@18096>   LEA fputab,a0
0002ED86 <AmiBlitz3.ab3@18097>   ADD.l d4,a0
0002ED8C <AmiBlitz3.ab3@18098>   fmove.d 0(a0),fp1
0002ED8E <AmiBlitz3.ab3@18099>   LSR.w #1,d4
0002ED92 <AmiBlitz3.ab3@18100>   MOVE.l facts(PC,D4.W),D4
0002ED94 <AmiBlitz3.ab3@18101> RTS
0002EDDC <AmiBlitz3.ab3@18105>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002EDE0 <AmiBlitz3.ab3@18110>   Dc.l $80000041
0002EDE4 <AmiBlitz3.ab3@18111>   Dc.l $A0000044
0002EDE8 <AmiBlitz3.ab3@18112>   Dc.l $C8000047
0002EDEC <AmiBlitz3.ab3@18113>   Dc.l $FA00004A
0002EDF0 <AmiBlitz3.ab3@18114>   Dc.l $9C40004E
0002EDF4 <AmiBlitz3.ab3@18115>   Dc.l $C3500051
0002EDF8 <AmiBlitz3.ab3@18116>   Dc.l $F4240054
0002EDFC <AmiBlitz3.ab3@18117>   Dc.l $98968058
0002EE00 <AmiBlitz3.ab3@18118>   Dc.l $BEBC205B
0002EE04 <AmiBlitz3.ab3@18119>   Dc.l $EE6B285E
0002EE08 <AmiBlitz3.ab3@18120>   Dc.l $9502F962
0002EE0C <AmiBlitz3.ab3@18121>   Dc.l $BA43B765
0002EE10 <AmiBlitz3.ab3@18122>   Dc.l $E8D4A568
0002EE14 <AmiBlitz3.ab3@18123>   Dc.l $9184E76C
0002EE18 <AmiBlitz3.ab3@18124>   Dc.l $B5E6A96F
0002EE1C <AmiBlitz3.ab3@18125>   Dc.l $E35F2972
0002EE20 <AmiBlitz3.ab3@18126>   Dc.l $8E1BCA76
0002EE24 <AmiBlitz3.ab3@18127>   Dc.l $B1A2BD79
0002EE28 <AmiBlitz3.ab3@18128>   Dc.l $DE0B6C7C
0002EE2A <AmiBlitz3.ab3@18132>   MOVEQ.l #$01,D5
0002EE2C <AmiBlitz3.ab3@18135>   LSL.l #1,D5
0002EE2E <AmiBlitz3.ab3@18136>   MOVE.l D5,D1
0002EE30 <AmiBlitz3.ab3@18137>   LSL.l #2,D5
0002EE32 <AmiBlitz3.ab3@18138>   ADD.l D1,D5                                              ;divisor for frac convert!
0002EE34 <AmiBlitz3.ab3@18139>   LSL.l #1,D3
0002EE38 <AmiBlitz3.ab3@18140>    BCS.w overerr
0002EE3A <AmiBlitz3.ab3@18141>   MOVE.l D3,D1
0002EE3C <AmiBlitz3.ab3@18142>   LSL.l #1,D3
0002EE40 <AmiBlitz3.ab3@18143>    BCS.w overerr
0002EE42 <AmiBlitz3.ab3@18144>   LSL.l #1,D3
0002EE46 <AmiBlitz3.ab3@18145>    BCS.w overerr
0002EE48 <AmiBlitz3.ab3@18146>   ADD.l D1,D3
0002EE4C <AmiBlitz3.ab3@18147>   SUBI.w #$30,D0
0002EE4E <AmiBlitz3.ab3@18148>   ADD.l D0,D3
0002EE7A <AmiBlitz3.ab3@18149>    !fget                                                   ;bsr.w get1bytemain
0002EE7E <AmiBlitz3.ab3@18150>    CMP.b #1,d0
0002EE82 <AmiBlitz3.ab3@18151>    BNE 'cm1
0002EE84 <AmiBlitz3.ab3@18152>    SUBQ.l #1,a5
0002EE88 <AmiBlitz3.ab3@18153>    BSR get1bytemain                                        ;??wy not !fget
0002EE8C <AmiBlitz3.ab3@18156>   CMP.b #$7e,d0
0002EE90 <AmiBlitz3.ab3@18157>    BNE 'cm2
0002EE92 <AmiBlitz3.ab3@18158>    SUBQ.l #1,a5
0002EE96 <AmiBlitz3.ab3@18159>    BSR get1bytemain
0002EE98 <AmiBlitz3.ab3@18162>   TST.b d0
0002EE9C <AmiBlitz3.ab3@18163>    BPL 'l10
0002EE9E <AmiBlitz3.ab3@18164>    LSL.w #8,d0
0002EEA0 <AmiBlitz3.ab3@18165>    MOVE.b (a5)+,d0
0002EEA6 <AmiBlitz3.ab3@18166>    MOVE.w d0,lastchar
0002EEB8 <AmiBlitz3.ab3@18169>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002EEBC <AmiBlitz3.ab3@18170>    BEQ.w atoi__loop
0002EEBE <AmiBlitz3.ab3@18171> RTS
0002EEC0 <AmiBlitz3.ab3@18174> dfetch:  Ds.w 1                                            ;fetching data?
0002EEC4 <AmiBlitz3.ab3@18178>   MOVE.w dfetch(PC),D1
0002EEC8 <AmiBlitz3.ab3@18179>    BEQ.w JL_0_B3EC
0002EECE <AmiBlitz3.ab3@18180>   CLR.w dfetch
0002EED0 <AmiBlitz3.ab3@18181> RTS
0002EED6 <AmiBlitz3.ab3@18184>   MOVE.b d2,isconstantvalue
0002EEDC <AmiBlitz3.ab3@18185>   MOVE.l d0,lastconstantvalue
0002EEE2 <AmiBlitz3.ab3@18186>   MOVE.w d2,imm_size
0002EEEC <AmiBlitz3.ab3@18187>   MOVE.w regnum,imm_reg
0002EEF6 <AmiBlitz3.ab3@18188>   MOVE.l destpointer,imm_addr                           ; long
0002EEFA <AmiBlitz3.ab3@18189>   CMP.w #$3,D2
0002EEFE <AmiBlitz3.ab3@18190>   BEQ.w JL_0_B434
0002EF02 <AmiBlitz3.ab3@18191>   CMP.w #$5,D2                                          ;float
0002EF06 <AmiBlitz3.ab3@18192>   BEQ.w JL_0_B434
0002EF0A <AmiBlitz3.ab3@18193>   CMP.w #$1,D2
0002EF0E <AmiBlitz3.ab3@18194>   BEQ.w JL_0_B418
0002EF12 <AmiBlitz3.ab3@18195>   CMP.w #$2,D2
0002EF16 <AmiBlitz3.ab3@18196>   BEQ.w JL_0_B418
0002EF1A <AmiBlitz3.ab3@18197>   CMP.w #$4,D2
0002EF1E <AmiBlitz3.ab3@18198>   BEQ.w JL_0_B434
0002EF22 <AmiBlitz3.ab3@18200> BRA.w mismatcherr
0002EF28 <AmiBlitz3.ab3@18203>   MOVE.w regnum,D1
0002EF2A <AmiBlitz3.ab3@18204>   LSL.w #8,D1
0002EF2C <AmiBlitz3.ab3@18205>   LSL.w #1,D1
0002EF30 <AmiBlitz3.ab3@18206>   ORI.w #$303C,D1
0002EF34 <AmiBlitz3.ab3@18207>    BSR.w writeword
0002EF36 <AmiBlitz3.ab3@18208>   MOVE.w D0,D1
0002EF3A <AmiBlitz3.ab3@18209>    BSR.w writeword
0002EF3E <AmiBlitz3.ab3@18210> BRA.w reget
0002EF40 <AmiBlitz3.ab3@18213>   MOVEQ #0,d1
0002EF46 <AmiBlitz3.ab3@18214>   MOVE.w regnum,D1
0002EF4C <AmiBlitz3.ab3@18215>   TST.b fpu
0002EF50 <AmiBlitz3.ab3@18216>   BEQ 'f1
0002EF54 <AmiBlitz3.ab3@18217>   CMP.w #5,d2
0002EF58 <AmiBlitz3.ab3@18218>   BEQ 'l10
0002EF5C <AmiBlitz3.ab3@18219> BRA 'f2
0002EF62 <AmiBlitz3.ab3@18222>   TST.b iee
0002EF66 <AmiBlitz3.ab3@18223>   BNE 'l10
0002EF68 <AmiBlitz3.ab3@18226>   LSL.w #8,D1
0002EF6A <AmiBlitz3.ab3@18227>   LSL.w #1,D1
0002EF6E <AmiBlitz3.ab3@18228>   ORI.w #$203C,D1
0002EF72 <AmiBlitz3.ab3@18229>    BSR.w writeword
0002EF74 <AmiBlitz3.ab3@18230>   MOVE.l D0,D1
0002EF78 <AmiBlitz3.ab3@18231>    BSR.w writelong
0002EF7C <AmiBlitz3.ab3@18232> BRA.w reget
0002EF7E <AmiBlitz3.ab3@18235>   MOVEQ #5,d2
0002EF80 <AmiBlitz3.ab3@18236>   ASL.l #7,d1
0002EF82 <AmiBlitz3.ab3@18237>   SUBQ.l #8,a7
0002EF88 <AmiBlitz3.ab3@18242>       OR.l #$f23c4400,d1                                   ;fmove.s
0002EF8E <AmiBlitz3.ab3@18243>        fmove.s fp0,0(a7)
0002EF92 <AmiBlitz3.ab3@18245>   BSR writelong
0002EF94 <AmiBlitz3.ab3@18246>   MOVE.l (a7)+,d1
0002EF98 <AmiBlitz3.ab3@18247>   BSR writelong
0002EF9A <AmiBlitz3.ab3@18248>   MOVE.l (a7)+,d1
0002EF9E <AmiBlitz3.ab3@18252> BRA.w reget
0002EFA0 <AmiBlitz3.ab3@18258>  MOVE.l D3,D0
0002EFA2 <AmiBlitz3.ab3@18259>   TST.w D6
0002EFA6 <AmiBlitz3.ab3@18260>    BEQ.w JL_0_B46C
0002EFAC <AmiBlitz3.ab3@18261>   MOVEA.l _mathffpbase,A6
0002EFB0 <AmiBlitz3.ab3@18262>    JSR -$1E(A6)
0002EFB4 <AmiBlitz3.ab3@18263>    BVC.w JL_0_B46C
0002EFB6 <AmiBlitz3.ab3@18264>   ADDQ.w #4,A7
0002EFBA <AmiBlitz3.ab3@18265> BRA.w JL_0_B5A0
0002EFBC <AmiBlitz3.ab3@18268> RTS
0002EFBE <AmiBlitz3.ab3@18272>   MOVEQ.l #$00,D6
0002EFC2 <AmiBlitz3.ab3@18273>    fmove.l d3,fp0
0002EFC6 <AmiBlitz3.ab3@18276>   BSR.w JL_0_B480
0002EFCA <AmiBlitz3.ab3@18277> BRA.w JL_0_B3DC
0002EFCC <AmiBlitz3.ab3@18280>   MOVE.w D2,-(A7)
0002EFD0 <AmiBlitz3.ab3@18281>    BSR.w JL_0_BF6A
0002EFD2 <AmiBlitz3.ab3@18282>   MOVE.w (A7)+,D2
0002EFD4 <AmiBlitz3.ab3@18285>   TST.w D2
0002EFD8 <AmiBlitz3.ab3@18286>    BNE.w JL_0_B498
0002EFDA <AmiBlitz3.ab3@18287>   TST.w D6
0002EFDE <AmiBlitz3.ab3@18288>    BEQ.w JL_0_B492
0002EFE0 <AmiBlitz3.ab3@18289>   MOVEQ.l #$04,D2
0002EFE4 <AmiBlitz3.ab3@18290> BRA.w JL_0_B510
0002EFE6 <AmiBlitz3.ab3@18293>   MOVEQ.l #$02,D2
0002EFEA <AmiBlitz3.ab3@18294> BRA.w JL_0_B4C4
0002EFEE <AmiBlitz3.ab3@18297>   CMP.w #$1,D2
0002EFF2 <AmiBlitz3.ab3@18298>    BEQ.w JL_0_B4C4
0002EFF6 <AmiBlitz3.ab3@18299>   CMP.w #$2,D2
0002EFFA <AmiBlitz3.ab3@18300>    BEQ.w JL_0_B4F8
0002EFFE <AmiBlitz3.ab3@18301>   CMP.w #$3,D2
0002F002 <AmiBlitz3.ab3@18302>    BEQ.w JL_0_B57A
0002F006 <AmiBlitz3.ab3@18303>   CMP.w #$4,D2
0002F00A <AmiBlitz3.ab3@18304>    BEQ.w JL_0_B506
0002F00E <AmiBlitz3.ab3@18305>   CMP.w #$5,D2
0002F012 <AmiBlitz3.ab3@18306>    BEQ.w JL_0_B586
0002F016 <AmiBlitz3.ab3@18307> BRA.w mismatcherr
0002F01A <AmiBlitz3.ab3@18310>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F020 <AmiBlitz3.ab3@18311>   CMP.l #$7f,D0
0002F024 <AmiBlitz3.ab3@18312>    BGT.w JL_0_B4DC
0002F02A <AmiBlitz3.ab3@18313>   CMP.l #$FFFFFF80,D0
0002F02E <AmiBlitz3.ab3@18314>    BGE.w JL_0_B59E
0002F030 <AmiBlitz3.ab3@18317>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F036 <AmiBlitz3.ab3@18318>   CMP.l #$7fff,D0
0002F03A <AmiBlitz3.ab3@18319>    BGT.w JL_0_B4F2
0002F040 <AmiBlitz3.ab3@18320>   CMP.l #$FFFF8000,D0
0002F044 <AmiBlitz3.ab3@18321>    BGE.w JL_0_B59E
0002F046 <AmiBlitz3.ab3@18324>   MOVEQ.l #$03,D2
0002F04A <AmiBlitz3.ab3@18325> BRA.w JL_0_B59E
0002F04C <AmiBlitz3.ab3@18351>   TST.w D6
0002F050 <AmiBlitz3.ab3@18352>    BNE.w JL_0_B510
0002F054 <AmiBlitz3.ab3@18353>    BSR.w JL_0_B450
0002F058 <AmiBlitz3.ab3@18354> BRA.w JL_0_B4DC
0002F05C <AmiBlitz3.ab3@18357>   BSR.w JL_0_B450
0002F05E <AmiBlitz3.ab3@18358>   TST.w D6
0002F062 <AmiBlitz3.ab3@18359>   BEQ.w JL_0_B560
0002F068 <AmiBlitz3.ab3@18362>   CMP.l #MaxWordSgnd,D0
0002F06C <AmiBlitz3.ab3@18363>    BGT.w JL_0_B5A0
0002F072 <AmiBlitz3.ab3@18364>   CMP.l #$FFFF8000,D0
0002F076 <AmiBlitz3.ab3@18365>    BLT.w JL_0_B5A0
0002F078 <AmiBlitz3.ab3@18366>   MOVE.w D0,-(A7)
0002F07C <AmiBlitz3.ab3@18367>    JSR -$24(A6)
0002F07E <AmiBlitz3.ab3@18368>   MOVE.l D0,D1
0002F080 <AmiBlitz3.ab3@18369>   MOVE.l D3,D0
0002F084 <AmiBlitz3.ab3@18370>    JSR -$48(A6)
0002F08A <AmiBlitz3.ab3@18371>   MOVE.l #$80000051,D1
0002F08E <AmiBlitz3.ab3@18372>    JSR -$4E(A6)
0002F092 <AmiBlitz3.ab3@18373>    JSR -$1E(A6)
0002F096 <AmiBlitz3.ab3@18374>    BEQ.w JL_0_B55A
0002F09C <AmiBlitz3.ab3@18375>   CMP.l #$10000,D0
0002F0A0 <AmiBlitz3.ab3@18376>    BCC.w JL_0_B55A
0002F0A2 <AmiBlitz3.ab3@18377>   MOVE.w D0,D1
0002F0A4 <AmiBlitz3.ab3@18378>   MOVE.w (A7)+,D0
0002F0A6 <AmiBlitz3.ab3@18379>   SWAP D0
0002F0A8 <AmiBlitz3.ab3@18380>   MOVE.w D1,D0
0002F0AC <AmiBlitz3.ab3@18381> BRA.w JL_0_B59E
0002F0AE <AmiBlitz3.ab3@18384>   ADDQ.w #2,A7
0002F0B2 <AmiBlitz3.ab3@18385> BRA.w JL_0_B5A0
0002F0B8 <AmiBlitz3.ab3@18388>   CMP.l #MaxWordSgnd,D0
0002F0BC <AmiBlitz3.ab3@18389>    BGT.w JL_0_B4F2
0002F0C2 <AmiBlitz3.ab3@18390>   CMP.l #$FFFF8000,D0
0002F0C6 <AmiBlitz3.ab3@18391>    BLT.w JL_0_B4F2
0002F0C8 <AmiBlitz3.ab3@18392>   SWAP D0
0002F0CC <AmiBlitz3.ab3@18393> BRA.w JL_0_B59E
0002F0CE <AmiBlitz3.ab3@18396>   TST.w D6
0002F0D2 <AmiBlitz3.ab3@18397>   BNE.w JL_0_B5A0
0002F0D4 <AmiBlitz3.ab3@18398>   MOVE.l D3,D0
0002F0D8 <AmiBlitz3.ab3@18399> BRA.w JL_0_B59E
0002F0DA <AmiBlitz3.ab3@18402>   TST.w D6
0002F0DE <AmiBlitz3.ab3@18403>   BNE.w JL_0_B5A0
0002F0E0 <AmiBlitz3.ab3@18404>   MOVE.l D3,D0
0002F0E6 <AmiBlitz3.ab3@18405>   MOVEA.l _mathffpbase,A6
0002F0EA <AmiBlitz3.ab3@18406>   JSR -$24(A6)
0002F0EC <AmiBlitz3.ab3@18407>   MOVE.l D0,D3
0002F0F0 <AmiBlitz3.ab3@18408> BRA.w JL_0_B5A0
0002F0F2 <AmiBlitz3.ab3@18411> RTS
0002F0F4 <AmiBlitz3.ab3@18414>   MOVEQ.l #$05,D2
0002F0F6 <AmiBlitz3.ab3@18415>   MOVE.l D3,D0
0002F0F8 <AmiBlitz3.ab3@18416> RTS
0002F0FC <AmiBlitz3.ab3@18420>             Ds.l 1                                         ;??Looks like unused data??
0002F100 <AmiBlitz3.ab3@18421> pushpc:     Ds.l 1
0002F104 <AmiBlitz3.ab3@18422> pushoff:    Ds.l 1
0002F108 <AmiBlitz3.ab3@18423> pushdooff:  Ds.l 1
0002F10A <AmiBlitz3.ab3@18424> pushclen:   Ds.w 1
0002F10E <AmiBlitz3.ab3@18425> pushat:     Ds.l 1
0002F118 <AmiBlitz3.ab3@18429>   MOVE.l destpointer,pushpc
0002F122 <AmiBlitz3.ab3@18430>   MOVE.l hunkoffsetbase,pushoff
0002F124 <AmiBlitz3.ab3@18431> RTS
0002F128 <AmiBlitz3.ab3@18435>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F12E <AmiBlitz3.ab3@18436>   MOVE.l destpointer,D0
0002F132 <AmiBlitz3.ab3@18437>   MOVE.l pushpc(PC),D1
0002F138 <AmiBlitz3.ab3@18438>   MOVE.l D1,destpointer
0002F13A <AmiBlitz3.ab3@18439>   SUB.l D1,D0
0002F140 <AmiBlitz3.ab3@18440>   MOVE.w D0,pushclen
0002F144 <AmiBlitz3.ab3@18441>    BEQ.w JL_0_B636
0002F14A <AmiBlitz3.ab3@18442>   MOVE.w dontwrite,D1
0002F14E <AmiBlitz3.ab3@18443>    BNE.w JL_0_B636
0002F156 <AmiBlitz3.ab3@18444>    CMP.w #1000,pushclen
0002F15A <AmiBlitz3.ab3@18445>    BGE conmemerr
0002F160 <AmiBlitz3.ab3@18446>    MOVE.l pushat,d0
0002F164 <AmiBlitz3.ab3@18447>    BNE 'nomem
0002F16A <AmiBlitz3.ab3@18448>    MOVE.l #1024,d0
0002F16C <AmiBlitz3.ab3@18449>   MOVEQ.l #$01,D1
0002F172 <AmiBlitz3.ab3@18450>   MOVEA.l _execbase,A6
0002F178 <AmiBlitz3.ab3@18451>   MOVE.l mempool,a0
0002F17C <AmiBlitz3.ab3@18452>   JSR _AllocPooled(a6)
0002F182 <AmiBlitz3.ab3@18454>   MOVE.l D0,pushat
0002F184 <AmiBlitz3.ab3@18457>   MOVEA.l D0,A0
0002F18A <AmiBlitz3.ab3@18458>   MOVEA.l pushpc,A1
0002F190 <AmiBlitz3.ab3@18459>   MOVE.l A1,destpointer
0002F196 <AmiBlitz3.ab3@18460>   MOVE.w pushclen,D0
0002F198 <AmiBlitz3.ab3@18461>   LSR.w #1,D0
0002F19A <AmiBlitz3.ab3@18462>   SUBQ.w #1,D0
0002F19C <AmiBlitz3.ab3@18465>     MOVE.w (A1)+,(A0)+
0002F1A0 <AmiBlitz3.ab3@18466>   DBF D0,JL_0_B626
0002F1AA <AmiBlitz3.ab3@18468>    MOVE.l hunkoffsetbase,pushdooff
0002F1AE <AmiBlitz3.ab3@18471>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F1B0 <AmiBlitz3.ab3@18472> RTS
0002F1B4 <AmiBlitz3.ab3@18476>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F1B6 <AmiBlitz3.ab3@18477>   MOVEQ.l #$00,D0
0002F1BC <AmiBlitz3.ab3@18478>   MOVE.w pushclen,D0
0002F1C0 <AmiBlitz3.ab3@18479>    BEQ.w JL_0_B6D8
0002F1C6 <AmiBlitz3.ab3@18480>   MOVE.l destpointer,D1
0002F1CC <AmiBlitz3.ab3@18481>   ADD.l D0,destpointer
0002F1D2 <AmiBlitz3.ab3@18482>   TST.w dontwrite
0002F1D6 <AmiBlitz3.ab3@18483>    BNE.w JL_0_B6D8
0002F1D8 <AmiBlitz3.ab3@18484>   LSR.w #1,D0
0002F1DA <AmiBlitz3.ab3@18485>   SUBQ.w #1,D0
0002F1DC <AmiBlitz3.ab3@18486>   MOVEA.l D1,A1
0002F1E2 <AmiBlitz3.ab3@18487>   MOVEA.l pushat,A0
0002F1E8 <AmiBlitz3.ab3@18490>     CMPA.l destbufferend,A1
0002F1EC <AmiBlitz3.ab3@18491>     BCS.w JL_0_B684
0002F1F4 <AmiBlitz3.ab3@18493>     MOVE.w #$FFFF,dontwrite
0002F1F8 <AmiBlitz3.ab3@18494>   BRA.w JL_0_B6D8
0002F1FA <AmiBlitz3.ab3@18497>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F1FE <AmiBlitz3.ab3@18498>   DBF D0,JL_0_B66E
0002F204 <AmiBlitz3.ab3@18500>   SUB.l pushpc,D1
0002F208 <AmiBlitz3.ab3@18501>   BEQ.w JL_0_B6C2
0002F20E <AmiBlitz3.ab3@18502>   MOVEA.l pushdooff,A0
0002F214 <AmiBlitz3.ab3@18505>   CMPA.l pushoff,A0
0002F218 <AmiBlitz3.ab3@18506>   BEQ.w JL_0_B6C2
0002F21C <AmiBlitz3.ab3@18507>   MOVEA.l $4(A0),A1
0002F222 <AmiBlitz3.ab3@18508>   ADDA.l destbufferstart,A1
0002F228 <AmiBlitz3.ab3@18509>   CMPA.l destbufferend,A1
0002F22C <AmiBlitz3.ab3@18510>   BCC.w JL_0_B6BC
0002F230 <AmiBlitz3.ab3@18511>   ADD.l D1,$4(A0)
0002F232 <AmiBlitz3.ab3@18514>   MOVEA.l (A0),A0
0002F236 <AmiBlitz3.ab3@18515> BRA.w JL_0_B69A
0002F23C <AmiBlitz3.ab3@18518>   MOVEA.l pushat,A1
0002F23E <AmiBlitz3.ab3@18519>   MOVEQ.l #$00,D0
0002F244 <AmiBlitz3.ab3@18520>   MOVE.w pushclen,D0
0002F24A <AmiBlitz3.ab3@18521>   MOVEA.l _execbase,A6
0002F250 <AmiBlitz3.ab3@18522>   MOVE.l mempool,a0
0002F254 <AmiBlitz3.ab3@18526>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F256 <AmiBlitz3.ab3@18527> RTS
0002F258 <AmiBlitz3.ab3@18530>   MOVE.l D1,-(A7)                                          ;array mul
0002F25A <AmiBlitz3.ab3@18531>   MOVEQ.l #$00,D2
0002F25C <AmiBlitz3.ab3@18532>   MOVEQ.l #$0F,D3
0002F25E <AmiBlitz3.ab3@18535>     LSL.w #1,D1
0002F262 <AmiBlitz3.ab3@18536>     BCC.w JL_0_B6EE
0002F264 <AmiBlitz3.ab3@18537>     ADDQ.w #1,D2
0002F266 <AmiBlitz3.ab3@18538>     MOVE.w D3,D4
0002F26A <AmiBlitz3.ab3@18541>   DBF D3,JL_0_B6E4
0002F26C <AmiBlitz3.ab3@18543>   SUBQ.w #1,D2
0002F270 <AmiBlitz3.ab3@18544>    BNE.w JL_0_B726
0002F272 <AmiBlitz3.ab3@18545>   ADDQ.w #4,A7
0002F274 <AmiBlitz3.ab3@18546>   MOVE.w D4,D1
0002F278 <AmiBlitz3.ab3@18547>    BEQ.w JL_0_B724
0002F27C <AmiBlitz3.ab3@18548>   CMP.w #$8,D1
0002F280 <AmiBlitz3.ab3@18549>    BCS.w JL_0_B712
0002F284 <AmiBlitz3.ab3@18550>   SUBI.w #$8,D1
0002F288 <AmiBlitz3.ab3@18551>    BSR.w JL_0_B712
0002F28A <AmiBlitz3.ab3@18552>   MOVEQ.l #$00,D1
0002F28C <AmiBlitz3.ab3@18555>   LSL.w #8,D1
0002F28E <AmiBlitz3.ab3@18556>   LSL.w #1,D1
0002F292 <AmiBlitz3.ab3@18557>   ORI.w #$E188,D1
0002F298 <AmiBlitz3.ab3@18558>   OR.w regnum,D1
0002F29C <AmiBlitz3.ab3@18559> BRA.w writeword
0002F29E <AmiBlitz3.ab3@18562> RTS
0002F2A0 <AmiBlitz3.ab3@18565>   MOVEQ #0,d1
0002F2A6 <AmiBlitz3.ab3@18566>   MOVE.w regnum,D1
0002F2A8 <AmiBlitz3.ab3@18567>   LSL.l #8,D1
0002F2AA <AmiBlitz3.ab3@18569>   LSL.l #4,d1
0002F2B0 <AmiBlitz3.ab3@18571>   OR.l #$4c3c0000,d1
0002F2B6 <AmiBlitz3.ab3@18572>   OR.w regnum,d1
0002F2BA <AmiBlitz3.ab3@18573>   BSR.w writelong
0002F2BC <AmiBlitz3.ab3@18574>   MOVE.l (A7)+,D1
0002F2C0 <AmiBlitz3.ab3@18576> BRA writelong
0002F2C6 <AmiBlitz3.ab3@18579>   MOVE.l destpointer,-(A7)
0002F2C8 <AmiBlitz3.ab3@18580>   MOVEQ.l #-$01,D7
0002F2CC <AmiBlitz3.ab3@18583>     BSR.w findhilib
0002F2D0 <AmiBlitz3.ab3@18584>      BEQ.w JL_0_B8A4
0002F2D4 <AmiBlitz3.ab3@18585>     TST.w $C(A2)
0002F2D8 <AmiBlitz3.ab3@18586>      BPL.w JL_0_B746
0002F2DC <AmiBlitz3.ab3@18588>     MOVE.l $16(A2),D1
0002F2E0 <AmiBlitz3.ab3@18589>     BEQ.w JL_0_B746
0002F2E4 <AmiBlitz3.ab3@18591>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F2E8 <AmiBlitz3.ab3@18592>     CMP.w #-$2,D1
0002F2EC <AmiBlitz3.ab3@18593>      BNE.w JL_0_B772
0002F2F0 <AmiBlitz3.ab3@18594>     BSR.w makevsize
0002F2F4 <AmiBlitz3.ab3@18595> BRA.w JL_0_B7FE
0002F2F8 <AmiBlitz3.ab3@18598>     CMP.w #-$5C4,D1
0002F2FC <AmiBlitz3.ab3@18599>      BNE.w JL_0_B790
0002F300 <AmiBlitz3.ab3@18600>     MOVE.w #$7000,D1
0002F308 <AmiBlitz3.ab3@18601>     BTST #$7,autorun
0002F30A <AmiBlitz3.ab3@18602>     SNE D1
0002F30E <AmiBlitz3.ab3@18603>     BSR.w writeword
0002F312 <AmiBlitz3.ab3@18604> BRA.w JL_0_B7FE
0002F316 <AmiBlitz3.ab3@18607>     CMP.w #-$12D,D1
0002F31A <AmiBlitz3.ab3@18608>      BNE.w JL_0_B7A0
0002F31E <AmiBlitz3.ab3@18609>     BSR.w makessize
0002F322 <AmiBlitz3.ab3@18610> BRA.w JL_0_B7FE
0002F326 <AmiBlitz3.ab3@18613>     CMP.w #-$1F5,D1
0002F32A <AmiBlitz3.ab3@18614>      BNE.w JL_0_B7C2
0002F32E <AmiBlitz3.ab3@18615>     MOVE.w #$203C,D1
0002F332 <AmiBlitz3.ab3@18616>     BSR.w writeword
0002F336 <AmiBlitz3.ab3@18617>     BSR.w addoff
0002F33C <AmiBlitz3.ab3@18618>     MOVE.l endop,D1
0002F340 <AmiBlitz3.ab3@18619>     BSR.w writelong
0002F344 <AmiBlitz3.ab3@18620> BRA.w JL_0_B7FE
0002F348 <AmiBlitz3.ab3@18623>     CMP.w #-$3E9,D1
0002F34C <AmiBlitz3.ab3@18624>      BNE.w JL_0_B7E4
0002F350 <AmiBlitz3.ab3@18625>     MOVE.w #$203C,D1
0002F354 <AmiBlitz3.ab3@18626>     BSR.w writeword
0002F358 <AmiBlitz3.ab3@18627>     BSR.w addoff
0002F35E <AmiBlitz3.ab3@18628>     MOVE.l data2at,D1
0002F362 <AmiBlitz3.ab3@18629>     BSR.w writelong
0002F366 <AmiBlitz3.ab3@18630> BRA.w JL_0_B7FE
0002F36A <AmiBlitz3.ab3@18633>     CMP.w #$1,D1
0002F36E <AmiBlitz3.ab3@18634>      BNE.w JL_0_B7FE
0002F372 <AmiBlitz3.ab3@18635>     MOVE.w #$203C,D1
0002F376 <AmiBlitz3.ab3@18636>     BSR.w writeword
0002F37C <AmiBlitz3.ab3@18637>     MOVE.l ptr_seg_debugger,D1
0002F380 <AmiBlitz3.ab3@18638>     BSR.w writelong
0002F384 <AmiBlitz3.ab3@18641>     MOVE.l $16(A2),D1
0002F38C <AmiBlitz3.ab3@18642>     MOVE.w #$FFFF,lasta6
0002F390 <AmiBlitz3.ab3@18643>     BSR.w Amakelibsub
0002F396 <AmiBlitz3.ab3@18644>     CMPI.w #$FFFE,$4(A2)
0002F39A <AmiBlitz3.ab3@18645>      BNE.w JL_0_B83A
0002F3A0 <AmiBlitz3.ab3@18646>     MOVE.l intdata1,D1
0002F3A4 <AmiBlitz3.ab3@18647>      BEQ.w JL_0_B83A
0002F3AA <AmiBlitz3.ab3@18648>     MOVE.w putidata1,D1
0002F3AE <AmiBlitz3.ab3@18649>     BSR.w writeword
0002F3B2 <AmiBlitz3.ab3@18650>     BSR.w addoff
0002F3B8 <AmiBlitz3.ab3@18651>     MOVE.l intdata1,D1
0002F3BC <AmiBlitz3.ab3@18652>     BSR.w writelong
0002F3C0 <AmiBlitz3.ab3@18655>     MOVE.w #$2B40,D1
0002F3C4 <AmiBlitz3.ab3@18656>     TST.w $1A(A2)
0002F3C8 <AmiBlitz3.ab3@18657>      BEQ.w JL_0_B746
0002F3CC <AmiBlitz3.ab3@18658>      BPL.w JL_0_B84E
0002F3D0 <AmiBlitz3.ab3@18659>     MOVE.w #$3B40,D1
0002F3D4 <AmiBlitz3.ab3@18662>     BSR.w writeword
0002F3D8 <AmiBlitz3.ab3@18663>     MOVE.w $A(A2),D1
0002F3DC <AmiBlitz3.ab3@18664>      BSR.w writeword
0002F3E2 <AmiBlitz3.ab3@18665>     CMPI.w #$FFFA,$4(A2)
0002F3E6 <AmiBlitz3.ab3@18666>      BNE.w JL_0_B746
0002F3E8 <AmiBlitz3.ab3@18667>     MOVE.w D7,-(A7)
0002F3EE <AmiBlitz3.ab3@18668>     MOVE.w numstatic,D4
0002F3F2 <AmiBlitz3.ab3@18669>      BEQ.w JL_0_B882
0002F3F8 <AmiBlitz3.ab3@18670>     MOVE.l staticdata,D3
0002F3FE <AmiBlitz3.ab3@18671>      JSR datastart
0002F402 <AmiBlitz3.ab3@18672>     MOVE.w #$C500,D1
0002F406 <AmiBlitz3.ab3@18673>      BSR.w tokejsr2
0002F40C <AmiBlitz3.ab3@18676>     MOVE.w maxsused,D4
0002F410 <AmiBlitz3.ab3@18677>      BEQ.w JL_0_B89E
0002F416 <AmiBlitz3.ab3@18678>     MOVE.l maxsat,D3
0002F41C <AmiBlitz3.ab3@18679>      JSR datastart
0002F420 <AmiBlitz3.ab3@18680>     MOVE.w #$CF00,D1
0002F424 <AmiBlitz3.ab3@18681>      BSR.w tokejsr2
0002F426 <AmiBlitz3.ab3@18684>     MOVE.w (A7)+,D7
0002F42A <AmiBlitz3.ab3@18685> BRA.w JL_0_B746
0002F430 <AmiBlitz3.ab3@18688>   MOVE.l destpointer,D1
0002F432 <AmiBlitz3.ab3@18689>   CMP.l (A7),D1
0002F436 <AmiBlitz3.ab3@18690>    BNE.w JL_0_B8BC
0002F43E <AmiBlitz3.ab3@18691>   MOVE.w #$0008,noinits+2
0002F442 <AmiBlitz3.ab3@18692> BRA.w JL_0_B8E6
0002F448 <AmiBlitz3.ab3@18695>   CLR.w noinits+2
0002F44E <AmiBlitz3.ab3@18696>   MOVE.w dontwrite,D1
0002F452 <AmiBlitz3.ab3@18697>    BNE.w JL_0_B8DE
0002F458 <AmiBlitz3.ab3@18698>   TST.l newinitaddr
0002F45C <AmiBlitz3.ab3@18699>    BEQ 'l10
0002F462 <AmiBlitz3.ab3@18700>   MOVE.l newinitaddr,D2
0002F468 <AmiBlitz3.ab3@18701>   SUB.l destbufferstart,D2
0002F46A <AmiBlitz3.ab3@18702>   ADDQ.l #2,d2
0002F470 <AmiBlitz3.ab3@18703>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F474 <AmiBlitz3.ab3@18705>   MOVE.w #$4EB9,(A0)+
0002F476 <AmiBlitz3.ab3@18706>   MOVE.l (A7),(A0)+
0002F47A <AmiBlitz3.ab3@18708> BRA 'l20
0002F480 <AmiBlitz3.ab3@18711>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F486 <AmiBlitz3.ab3@18712>   TST.b saved0
0002F48A <AmiBlitz3.ab3@18713>   BEQ 'l1
0002F48E <AmiBlitz3.ab3@18714>   MOVE.w #$23c0,(a0)+
0002F490 <AmiBlitz3.ab3@18715>   MOVE.l a0,a1
0002F492 <AmiBlitz3.ab3@18716>   ADDQ.l #6,a1
0002F494 <AmiBlitz3.ab3@18717>   MOVE.l a1,(a0)+
0002F496 <AmiBlitz3.ab3@18718>   MOVEQ.l #$02,D2
0002F49A <AmiBlitz3.ab3@18719>   BSR.w addhunkoffset
0002F49E <AmiBlitz3.ab3@18720>   MOVE.w #$6004,(a0)+
0002F4A4 <AmiBlitz3.ab3@18721>   MOVE.l #$4e714e71,(a0)+
0002F4A8 <AmiBlitz3.ab3@18724>   MOVE.w #$4EB9,(A0)+
0002F4AA <AmiBlitz3.ab3@18725>   MOVE.l (A7),(A0)+
0002F4AC <AmiBlitz3.ab3@18726>   MOVEQ #2,d2
0002F4B2 <AmiBlitz3.ab3@18727>   TST.b saved0
0002F4B6 <AmiBlitz3.ab3@18728>   BEQ 'l20
0002F4B8 <AmiBlitz3.ab3@18729>   MOVEQ.l #14,D2
0002F4BC <AmiBlitz3.ab3@18732>   BSR.w addhunkoffset
0002F4C0 <AmiBlitz3.ab3@18733>   MOVE.w #$2039,(a0)+
0002F4C2 <AmiBlitz3.ab3@18734>   MOVE.l a1,(a0)+
0002F4C4 <AmiBlitz3.ab3@18735>   MOVEQ.l #20,d2
0002F4C8 <AmiBlitz3.ab3@18738>   BSR.w addhunkoffset
0002F4CC <AmiBlitz3.ab3@18741>   MOVE.w #$4E75,D1
0002F4D0 <AmiBlitz3.ab3@18742>   BSR.w writeword
0002F4D2 <AmiBlitz3.ab3@18745>   ADDQ.w #4,A7
0002F4D4 <AmiBlitz3.ab3@18746> RTS
0002F4D8 <AmiBlitz3.ab3@18751>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F4DE <AmiBlitz3.ab3@18753>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002F4E4 <AmiBlitz3.ab3@18755>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002F4EA <AmiBlitz3.ab3@18760>   MOVE.l stringbuffer,D1
0002F4EE <AmiBlitz3.ab3@18761> BRA.w makesize
0002F4F0 <AmiBlitz3.ab3@18764>   MOVEQ.l #$00,D1
0002F4F6 <AmiBlitz3.ab3@18765>   MOVE.w globalvarpointer,D1
0002F4FA <AmiBlitz3.ab3@18766>   SUBI.w #$8000,D1
0002F4FE <AmiBlitz3.ab3@18767>   BNE.w makesize
0002F500 <AmiBlitz3.ab3@18768>     MOVEQ.l #$08,D1
0002F502 <AmiBlitz3.ab3@18771>   MOVE.l D1,-(A7)
0002F506 <AmiBlitz3.ab3@18772>   MOVE.w #$203C,D1
0002F50A <AmiBlitz3.ab3@18773>   BSR.w writeword
0002F50C <AmiBlitz3.ab3@18774>   MOVE.l (A7)+,D1
0002F510 <AmiBlitz3.ab3@18775> BRA.w writelong
0002F512 <AmiBlitz3.ab3@18783>   MOVEQ.l #$00,D1
0002F518 <AmiBlitz3.ab3@18784>   MOVEA.l libpointer,A1
0002F51C <AmiBlitz3.ab3@18787>     CMPA.w #$0,A1
0002F520 <AmiBlitz3.ab3@18788>     BEQ.w findhilib__done
0002F524 <AmiBlitz3.ab3@18789>       CMP.w $4(A1),D7
0002F528 <AmiBlitz3.ab3@18790>       BLS.w findhilib__next
0002F52C <AmiBlitz3.ab3@18791>         CMP.w $4(A1),D1
0002F530 <AmiBlitz3.ab3@18792>         BCC.w findhilib__next
0002F534 <AmiBlitz3.ab3@18793>           MOVE.w $4(A1),D1
0002F536 <AmiBlitz3.ab3@18794>           MOVEA.l A1,A2
0002F538 <AmiBlitz3.ab3@18797>     MOVEA.l (A1),A1
0002F53C <AmiBlitz3.ab3@18798> BRA.w findhilib__loop
0002F53E <AmiBlitz3.ab3@18801>   MOVE.w D1,D7
0002F540 <AmiBlitz3.ab3@18802> RTS
0002F542 <AmiBlitz3.ab3@18810>   MOVEQ.l #-$01,D1
0002F548 <AmiBlitz3.ab3@18811>   MOVEA.l libpointer,A1
0002F54C <AmiBlitz3.ab3@18814>     CMPA.w #$0,A1
0002F550 <AmiBlitz3.ab3@18815>      BEQ.w findlolib__done
0002F554 <AmiBlitz3.ab3@18816>     CMP.w $4(A1),D7
0002F558 <AmiBlitz3.ab3@18817>      BCC.w findlolib__next
0002F55C <AmiBlitz3.ab3@18818>     CMP.w $4(A1),D1
0002F560 <AmiBlitz3.ab3@18819>      BLS.w findlolib__next
0002F564 <AmiBlitz3.ab3@18820>     MOVE.w $4(A1),D1
0002F566 <AmiBlitz3.ab3@18821>     MOVEA.l A1,A2
0002F568 <AmiBlitz3.ab3@18824>     MOVEA.l (A1),A1
0002F56C <AmiBlitz3.ab3@18825> BRA.w findlolib__loop
0002F56E <AmiBlitz3.ab3@18828>   MOVE.w D1,D7
0002F572 <AmiBlitz3.ab3@18829>   CMP.w #-$1,D1
0002F574 <AmiBlitz3.ab3@18830> RTS
0002F57A <AmiBlitz3.ab3@18834>   ADDQ.w #1,globalvarpointer
0002F582 <AmiBlitz3.ab3@18835>   BCLR #$0,globalvarpointer+1
0002F584 <AmiBlitz3.ab3@18836>   MOVEQ.l #$00,D7
0002F588 <AmiBlitz3.ab3@18839>     BSR.w findlolib
0002F58C <AmiBlitz3.ab3@18840>     BEQ.w JL_0_BA74
0002F590 <AmiBlitz3.ab3@18841>     TST.w $C(A2)
0002F594 <AmiBlitz3.ab3@18842>     BPL.w JL_0_B99A
0002F596 <AmiBlitz3.ab3@18843>     MOVEA.l A2,A1
0002F59A <AmiBlitz3.ab3@18844>     ADDA.l $12(A1),A1
0002F59E <AmiBlitz3.ab3@18845>     TST.w -$2(A1)
0002F5A2 <AmiBlitz3.ab3@18846>     BEQ.w JL_0_BA34
0002F5A6 <AmiBlitz3.ab3@18847>     MOVE.l -$A(A1),D1
0002F5AA <AmiBlitz3.ab3@18848>     LEA $6(A2,D1.L),A3
0002F5AC <AmiBlitz3.ab3@18851>       TST.w (A3)+
0002F5B0 <AmiBlitz3.ab3@18852>       BEQ.w JL_0_B9CC
0002F5B2 <AmiBlitz3.ab3@18853>         ADDQ.w #2,A3
0002F5B6 <AmiBlitz3.ab3@18854> BRA.w JL_0_B9C0
0002F5BA <AmiBlitz3.ab3@18857>     TST.l $4(A3)
0002F5BE <AmiBlitz3.ab3@18858>     BEQ.w JL_0_BA34
0002F5C2 <AmiBlitz3.ab3@18859>       MOVE.w freemax(PC),D1
0002F5C6 <AmiBlitz3.ab3@18860>       BSR.w writeword
0002F5CA <AmiBlitz3.ab3@18861>       MOVE.w -$4(A1),D1
0002F5CE <AmiBlitz3.ab3@18862>       BSR.w writeword
0002F5D4 <AmiBlitz3.ab3@18863>       MOVE.l free,D1
0002F5D8 <AmiBlitz3.ab3@18864>       MOVE.w -$6(A1),D1
0002F5DC <AmiBlitz3.ab3@18865>       BSR.w writelong
0002F5E2 <AmiBlitz3.ab3@18866>       MOVE.l destpointer,-(A7)
0002F5E4 <AmiBlitz3.ab3@18867>       MOVEQ.l #$01,D1
0002F5E8 <AmiBlitz3.ab3@18868>       MOVE.w -$2(A1),D2
0002F5EA <AmiBlitz3.ab3@18869>       LSL.w D2,D1
0002F5EC <AmiBlitz3.ab3@18870>       MOVE.w D1,-(A7)
0002F5F0 <AmiBlitz3.ab3@18871>       MOVE.l -$A(A1),D1
0002F5F4 <AmiBlitz3.ab3@18872>       BSR.w Amakelibsub
0002F5F8 <AmiBlitz3.ab3@18873>       MOVE.w freemax3(PC),D1
0002F5FC <AmiBlitz3.ab3@18874>       BSR.w writeword
0002F5FE <AmiBlitz3.ab3@18875>       MOVE.w (A7)+,D1
0002F602 <AmiBlitz3.ab3@18876>       BSR.w writeword
0002F606 <AmiBlitz3.ab3@18877>       MOVE.l freemax2(PC),D1
0002F60A <AmiBlitz3.ab3@18878>       BSR.w writelong
0002F60C <AmiBlitz3.ab3@18879>       MOVE.l (A7)+,D1
0002F612 <AmiBlitz3.ab3@18880>       SUB.l destpointer,D1
0002F616 <AmiBlitz3.ab3@18881>       BSR.w writeword
0002F61A <AmiBlitz3.ab3@18882>       MOVE.w freemax4(PC),D1
0002F61E <AmiBlitz3.ab3@18883>       BSR.w writeword
0002F622 <AmiBlitz3.ab3@18886>     MOVE.l $1C(A2),D1
0002F626 <AmiBlitz3.ab3@18887>     BEQ.w JL_0_B99A
0002F62A <AmiBlitz3.ab3@18889>     MOVE.w $4(A2),D1
0002F62E <AmiBlitz3.ab3@18890>     CMP.w #-$2,D1
0002F632 <AmiBlitz3.ab3@18891>     BNE.w JL_0_BA50
0002F636 <AmiBlitz3.ab3@18892>       BSR.w makevsize
0002F63A <AmiBlitz3.ab3@18893> BRA.w JL_0_BA60
0002F63E <AmiBlitz3.ab3@18896>     CMP.w #-$12D,D1
0002F642 <AmiBlitz3.ab3@18897>     BNE.w JL_0_BA60
0002F646 <AmiBlitz3.ab3@18898>       BSR.w makessize
0002F64A <AmiBlitz3.ab3@18899> BRA.w JL_0_BA60
0002F64E <AmiBlitz3.ab3@18902>     MOVE.l $1C(A2),D1
0002F656 <AmiBlitz3.ab3@18903>     MOVE.w #$FFFF,lasta6
0002F65A <AmiBlitz3.ab3@18904>     BSR.w Amakelibsub
0002F65E <AmiBlitz3.ab3@18905> BRA.w JL_0_B99A
0002F660 <AmiBlitz3.ab3@18908> RTS
0002F664 <AmiBlitz3.ab3@18912> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002F666 <AmiBlitz3.ab3@18914> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002F66A <AmiBlitz3.ab3@18915>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002F66C <AmiBlitz3.ab3@18916> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002F670 <AmiBlitz3.ab3@18917> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002F676 <AmiBlitz3.ab3@18922>   TST.b debugmode
0002F67A <AmiBlitz3.ab3@18923>    BEQ.b chkstak__skip
0002F680 <AmiBlitz3.ab3@18924>   TST.w debugversion
0002F684 <AmiBlitz3.ab3@18925>    BNE.b chkstak__skip
0002F688 <AmiBlitz3.ab3@18926>   MOVE.w #$C308,D1
0002F68C <AmiBlitz3.ab3@18927> BRA.w Atokejsr
0002F68E <AmiBlitz3.ab3@18930> RTS
0002F696 <AmiBlitz3.ab3@18934>   MOVE.w #$FFFF,lasta6
0002F69A <AmiBlitz3.ab3@18939>   MOVEM.l D0-d7/A0-a6,-(A7)
0002F6A2 <AmiBlitz3.ab3@18940>   MOVE.b #1,nostringopt
0002F6A8 <AmiBlitz3.ab3@18941>   JSR searchinstr
0002F6AA <AmiBlitz3.ab3@18942>   MOVE.l A3,D1
0002F6AC <AmiBlitz3.ab3@18943>   SUB.l A2,D1
0002F6B0 <AmiBlitz3.ab3@18944>   BSR.w Amakelibsub
0002F6B4 <AmiBlitz3.ab3@18945>   MOVEM.l (A7)+,d0-d7/a0-a6
0002F6B6 <AmiBlitz3.ab3@18946> RTS
0002F6BC <AmiBlitz3.ab3@18953>   MOVE.l libisat,-(A7)                                   ;library write
0002F6C2 <AmiBlitz3.ab3@18954>   MOVE.l A2,libisat
0002F6C4 <AmiBlitz3.ab3@18956>   MOVEA.l A1,A2
0002F6C6 <AmiBlitz3.ab3@18957>   MOVE.w (A2)+,D1
0002F6CC <AmiBlitz3.ab3@18958>   MOVE.l a2,lastinstructionaddr
0002F6D0 <AmiBlitz3.ab3@18959>   ANDI.w #$FF,D1
0002F6D2 <AmiBlitz3.ab3@18960>   ADDA.w D1,A2
0002F6D4 <AmiBlitz3.ab3@18961>   EXG.l D0,A2
0002F6D6 <AmiBlitz3.ab3@18962>   ADDQ.l #1,D0
0002F6DA <AmiBlitz3.ab3@18963>   BCLR #$0,D0
0002F6DC <AmiBlitz3.ab3@18964>   EXG.l D0,A2
0002F6E0 <AmiBlitz3.ab3@18965> BRA.w JL_0_BB08
0002F6E6 <AmiBlitz3.ab3@18969>   MOVE.l libisat,-(A7)
0002F6EC <AmiBlitz3.ab3@18970>   MOVE.l A2,libisat
0002F6EE <AmiBlitz3.ab3@18971>   MOVEA.l A3,A2
0002F6F2 <AmiBlitz3.ab3@18972> BRA.w JL_0_BB08
0002F6F4 <AmiBlitz3.ab3@18976>   MOVE.l a1,-(a7)
0002F6F6 <AmiBlitz3.ab3@18979>   MOVE.l d0,a0
0002F6FA <AmiBlitz3.ab3@18980>   MOVE.l $a(a0),d0
0002F6FC <AmiBlitz3.ab3@18981>   MOVE.l d0,a1
0002F704 <AmiBlitz3.ab3@18982>   CMP.l #8,4(a1)
0002F708 <AmiBlitz3.ab3@18983>   BLE 'norec
0002F70A <AmiBlitz3.ab3@18984>   MOVE.l a0,-(a7)
0002F710 <AmiBlitz3.ab3@18985>   MOVE.l typebase,-(a7)
0002F712 <AmiBlitz3.ab3@18986>   MOVEQ #0,d0
0002F716 <AmiBlitz3.ab3@18987>   MOVE.w 4(a0),d0
0002F71C <AmiBlitz3.ab3@18988>   ADD.l d0,typebase
0002F720 <AmiBlitz3.ab3@18989>   MOVE.l $4(a1),d0
0002F724 <AmiBlitz3.ab3@18990>   BSR scantype
0002F72A <AmiBlitz3.ab3@18991>   MOVE.l (a7)+,typebase
0002F72C <AmiBlitz3.ab3@18992>   MOVE.l (a7)+,a0
0002F732 <AmiBlitz3.ab3@18995>   CMP.l #newtype_string,d0
0002F736 <AmiBlitz3.ab3@18996>   BNE 'nostring
0002F73C <AmiBlitz3.ab3@18997>   ADDQ #2,a2offset
0002F742 <AmiBlitz3.ab3@18998>   MOVE.l #$3f3c0000,d1
0002F744 <AmiBlitz3.ab3@18999>   MOVEQ #0,d0
0002F748 <AmiBlitz3.ab3@19000>   MOVE.w 4(a0),d0
0002F74E <AmiBlitz3.ab3@19001>   ADD.l typebase,d0
0002F750 <AmiBlitz3.ab3@19002>   MOVE.w d0,d1
0002F754 <AmiBlitz3.ab3@19003>   BSR writelong
0002F75A <AmiBlitz3.ab3@19004>   TST.b debugmode
0002F75E <AmiBlitz3.ab3@19005>   BEQ 'l1a
0002F760 <AmiBlitz3.ab3@19006>   MOVE.l d1,-(a7)
0002F766 <AmiBlitz3.ab3@19007>   MOVE.l #$c308,d1
0002F76C <AmiBlitz3.ab3@19008>   JSR Atokejsr
0002F76E <AmiBlitz3.ab3@19009>   MOVE.l (a7)+,d1
0002F772 <AmiBlitz3.ab3@19012>   TST.w 8(a0)
0002F776 <AmiBlitz3.ab3@19013>   BEQ 'nostring
0002F77A <AmiBlitz3.ab3@19014>   MOVEM.l d2/d3,-(a7)
0002F77C <AmiBlitz3.ab3@19015>   MOVE.l d1,d2
0002F77E <AmiBlitz3.ab3@19016>   MOVEQ #0,d3
0002F782 <AmiBlitz3.ab3@19017>   MOVE.w 8(a0),d3
0002F784 <AmiBlitz3.ab3@19018>   SUBQ.l #1,d3
0002F788 <AmiBlitz3.ab3@19019>   BEQ 'nostring2
0002F78A <AmiBlitz3.ab3@19022>   ADDQ.l #4,d2
0002F78C <AmiBlitz3.ab3@19023>   MOVE.l d2,d1
0002F790 <AmiBlitz3.ab3@19024>   BSR writelong
0002F796 <AmiBlitz3.ab3@19025>   TST.b debugmode
0002F79A <AmiBlitz3.ab3@19026>   BEQ 'l1
0002F7A0 <AmiBlitz3.ab3@19027>   MOVE.l #$c308,d1
0002F7A6 <AmiBlitz3.ab3@19028>   JSR Atokejsr
0002F7AC <AmiBlitz3.ab3@19031>   ADDQ #2,a2offset
0002F7AE <AmiBlitz3.ab3@19032>   SUBQ.l #1,d3
0002F7B2 <AmiBlitz3.ab3@19033>   BNE 'loop
0002F7B6 <AmiBlitz3.ab3@19036>   MOVEM.l (a7)+,d2/d3
0002F7B8 <AmiBlitz3.ab3@19039>   MOVE.l (a0),d0
0002F7BC <AmiBlitz3.ab3@19040>   BNE 'more
0002F7BE <AmiBlitz3.ab3@19041>   MOVE.l (a7)+,a1
0002F7C0 <AmiBlitz3.ab3@19042> RTS
0002F7C4 <AmiBlitz3.ab3@19045> libisat:   Ds.l 1
0002F7CA <AmiBlitz3.ab3@19051>   MOVE.l libisat,-(A7)                                   
0002F7D0 <AmiBlitz3.ab3@19052>   MOVE.l A2,libisat
0002F7D4 <AmiBlitz3.ab3@19053>   LEA $6(A2,D1.L),A2
0002F7DC <AmiBlitz3.ab3@19057>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002F7E0 <AmiBlitz3.ab3@19058>   BEQ 'dowritevar
0002F7E8 <AmiBlitz3.ab3@19059>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002F7EC <AmiBlitz3.ab3@19060>   BEQ 'dowritevar
0002F7F4 <AmiBlitz3.ab3@19061>   CMP.l #$3e175265,$1c(a2)
0002F7F8 <AmiBlitz3.ab3@19062>   BEQ 'dowritevar
0002F800 <AmiBlitz3.ab3@19063>   CMP.l #$3e165772,$1c(a2)
0002F804 <AmiBlitz3.ab3@19064>   BNE 'nowritef
0002F808 <AmiBlitz3.ab3@19067>   MOVEM.l a0-a2/d2,-(a7)
0002F80A <AmiBlitz3.ab3@19068>   MOVEQ #0,d1
0002F814 <AmiBlitz3.ab3@19069>   MOVE.l #0,typebase
0002F818 <AmiBlitz3.ab3@19070>   MOVE.l $a(a3),a0
0002F81C <AmiBlitz3.ab3@19071>   MOVE.l $4(a0),d0
0002F822 <AmiBlitz3.ab3@19072>   CMP.l #8,d0
0002F826 <AmiBlitz3.ab3@19073>   BLE 'notype
0002F82A <AmiBlitz3.ab3@19074>   BSR scantype
0002F830 <AmiBlitz3.ab3@19077>   MOVE.l #$3f3c0000,d1
0002F836 <AmiBlitz3.ab3@19078>   MOVE.w a2offset,d1
0002F83A <AmiBlitz3.ab3@19079>   BSR writelong
0002F840 <AmiBlitz3.ab3@19080>   MOVE.l #$3f3c0000,d1
0002F844 <AmiBlitz3.ab3@19081>   MOVE.l $a(a3),a0
0002F848 <AmiBlitz3.ab3@19082>   MOVE.w 8(a0),d1
0002F84C <AmiBlitz3.ab3@19083>   BSR writelong
0002F852 <AmiBlitz3.ab3@19084>   MOVE.l #$3f3cab12,d1
0002F856 <AmiBlitz3.ab3@19085>   BSR writelong
0002F85C <AmiBlitz3.ab3@19086>   ADDQ.w #6,a2offset
0002F860 <AmiBlitz3.ab3@19087>   MOVEM.l (a7)+,a0-a2/d2
0002F866 <AmiBlitz3.ab3@19090>   TST.b fpu
0002F86A <AmiBlitz3.ab3@19091>   BEQ 'nofpu2
0002F872 <AmiBlitz3.ab3@19092>   CMP.l #$496e7400,$1a(a2)
0002F876 <AmiBlitz3.ab3@19093>   BNE 'noint
0002F878 <AmiBlitz3.ab3@19094>   MOVEQ #0,d1
0002F87E <AmiBlitz3.ab3@19095>   SUBQ.l #8,destpointer                                    ;fpu int
0002F884 <AmiBlitz3.ab3@19096>   CLR.w a2offset
0002F888 <AmiBlitz3.ab3@19097>   CMP.b #2,d2
0002F88C <AmiBlitz3.ab3@19098>   BGT 'noword
0002F890 <AmiBlitz3.ab3@19099>   MOVE.w #$48c0,d1
0002F896 <AmiBlitz3.ab3@19100>   OR.w regnumstore,d1
0002F89A <AmiBlitz3.ab3@19101>   BSR writeword
0002F89E <AmiBlitz3.ab3@19102> BRA 'exit2
0002F8A2 <AmiBlitz3.ab3@19105>    CMP.b #3,d2
0002F8A6 <AmiBlitz3.ab3@19106>         BNE 'nolong
0002F8AA <AmiBlitz3.ab3@19107> BRA 'exit2
0002F8AE <AmiBlitz3.ab3@19110>    CMP.b #4,d2
0002F8B2 <AmiBlitz3.ab3@19111>         BNE 'noquick
0002F8B6 <AmiBlitz3.ab3@19112>         MOVE.w #$e080,d1
0002F8BC <AmiBlitz3.ab3@19113>         OR.w regnumstore,d1
0002F8C0 <AmiBlitz3.ab3@19114>         BSR writeword
0002F8C4 <AmiBlitz3.ab3@19115>         MOVE.w #$e080,d1
0002F8CA <AmiBlitz3.ab3@19116>         OR.w regnumstore,d1
0002F8CE <AmiBlitz3.ab3@19117>         BSR writeword
0002F8D2 <AmiBlitz3.ab3@19118> BRA 'exit2
0002F8D4 <AmiBlitz3.ab3@19121>         MOVEQ #0,d0
0002F8D6 <AmiBlitz3.ab3@19122>         MOVEQ #0,d1
0002F8DC <AmiBlitz3.ab3@19123>         MOVE.w regnumstore,d0
0002F8DE <AmiBlitz3.ab3@19124>         ASL.l #7,d0
0002F8E4 <AmiBlitz3.ab3@19125>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002F8E6 <AmiBlitz3.ab3@19126>         OR.l d0,d1
0002F8EC <AmiBlitz3.ab3@19128>         MOVE.l #$3f000000,d1
0002F8EE <AmiBlitz3.ab3@19130>         MOVEQ #0,d0
0002F8F0 <AmiBlitz3.ab3@19131>         MOVEQ #0,d1
0002F8F6 <AmiBlitz3.ab3@19132>         MOVE.w regnumstore,d0
0002F8F8 <AmiBlitz3.ab3@19133>         ASL.l #7,d0
0002F8FA <AmiBlitz3.ab3@19134>         MOVE.l d0,d1
0002F900 <AmiBlitz3.ab3@19135>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002F902 <AmiBlitz3.ab3@19136>         ASL.l #3,d0
0002F904 <AmiBlitz3.ab3@19137>         OR.l d0,d1
0002F908 <AmiBlitz3.ab3@19138>         BSR writelong
0002F90A <AmiBlitz3.ab3@19139>         MOVEQ #0,d0
0002F910 <AmiBlitz3.ab3@19140>         MOVE.w regnumstore,d0
0002F912 <AmiBlitz3.ab3@19141>         ASL.l #7,d0
0002F918 <AmiBlitz3.ab3@19142>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002F91A <AmiBlitz3.ab3@19143>         OR.l d0,d1
0002F91C <AmiBlitz3.ab3@19144>         ASL.l #1,d0
0002F91E <AmiBlitz3.ab3@19145>         ASL.l #8,d0
0002F920 <AmiBlitz3.ab3@19146>         OR.l d0,d1
0002F924 <AmiBlitz3.ab3@19147> BRA 'exit
0002F92A <AmiBlitz3.ab3@19150>   CMP.w #$3c01,24(a2)
0002F92E <AmiBlitz3.ab3@19151>   BNE 'noval
0002F930 <AmiBlitz3.ab3@19152>   MOVE.l a2,-(a7)
0002F934 <AmiBlitz3.ab3@19153>   BSR.w JL_0_BB14
0002F936 <AmiBlitz3.ab3@19154>   MOVE.l (a7)+,a2
0002F93A <AmiBlitz3.ab3@19155> BRA 'exit2
0002F942 <AmiBlitz3.ab3@19172>   CMP.l #$41627300,$1a(a2)
0002F946 <AmiBlitz3.ab3@19173>   BNE 'noabs
0002F948 <AmiBlitz3.ab3@19174>   MOVEQ #0,d1
0002F94E <AmiBlitz3.ab3@19175>   MOVE.w regnumstore,d1
0002F950 <AmiBlitz3.ab3@19176>   MOVE.w d1,d0
0002F952 <AmiBlitz3.ab3@19177>   ASL.w #7,d1
0002F954 <AmiBlitz3.ab3@19178>   ASL.w #8,d0
0002F956 <AmiBlitz3.ab3@19179>   ASL.w #2,d0
0002F958 <AmiBlitz3.ab3@19180>   OR.w d0,d1
0002F95E <AmiBlitz3.ab3@19181>   SUBQ.l #8,destpointer                                    ;fpu abs
0002F962 <AmiBlitz3.ab3@19182>   MOVEM.l d3/d1,-(a7)
0002F966 <AmiBlitz3.ab3@19183>   MOVE.w #5,d3
0002F968 <AmiBlitz3.ab3@19184>   EXG d2,d3
0002F96E <AmiBlitz3.ab3@19185>   MOVE.w regnum,-(a7)
0002F978 <AmiBlitz3.ab3@19186>   MOVE.w regnumstore,regnum
0002F97C <AmiBlitz3.ab3@19187>   BSR writeconvertcode
0002F982 <AmiBlitz3.ab3@19188>   MOVE.w (a7)+,regnum
0002F984 <AmiBlitz3.ab3@19189>   EXG d2,d3
0002F988 <AmiBlitz3.ab3@19190>   MOVEM.l (a7)+,d3/d1
0002F98E <AmiBlitz3.ab3@19191>   OR.l #$f2000018,d1
0002F994 <AmiBlitz3.ab3@19192>   CLR.w a2offset
0002F998 <AmiBlitz3.ab3@19193> BRA 'exit
0002F99C <AmiBlitz3.ab3@19196>   CMP.b #5,d2
0002F9A0 <AmiBlitz3.ab3@19197>   BNE 'nofpu2
0002F9A4 <AmiBlitz3.ab3@19198>   MOVE.b 24(a2),d0
0002F9A8 <AmiBlitz3.ab3@19199>   CMP.b #$60,d0                                            ;nolib $edxx
0002F9AC <AmiBlitz3.ab3@19200>   BNE 'nofpu
0002F9AE <AmiBlitz3.ab3@19201>   MOVEQ #0,d1
0002F9B4 <AmiBlitz3.ab3@19202>   MOVE.w regnumstore,d1
0002F9B6 <AmiBlitz3.ab3@19203>   MOVE.w d1,d0
0002F9B8 <AmiBlitz3.ab3@19204>   ASL.w #7,d1
0002F9BA <AmiBlitz3.ab3@19205>   ASL.w #8,d0
0002F9BC <AmiBlitz3.ab3@19206>   ASL.w #2,d0
0002F9BE <AmiBlitz3.ab3@19207>   OR.w d0,d1
0002F9C2 <AmiBlitz3.ab3@19208>   MOVE.b 25(a2),d0
0002F9C6 <AmiBlitz3.ab3@19209>   CMP.b #5,d0
0002F9CA <AmiBlitz3.ab3@19210>   BNE 'nocos
0002F9D0 <AmiBlitz3.ab3@19211>   OR.l #$f200001d,d1                                       ;fpu cos
0002F9D4 <AmiBlitz3.ab3@19212> BRA 'exit
0002F9D8 <AmiBlitz3.ab3@19215>   CMP.b #$c,d0
0002F9DC <AmiBlitz3.ab3@19216>   BNE 'nosqr
0002F9E2 <AmiBlitz3.ab3@19217>   OR.l #$f2000004,d1                                       ;fpu sqr
0002F9E6 <AmiBlitz3.ab3@19218> BRA 'exit
0002F9EA <AmiBlitz3.ab3@19221>   CMP.b #$d,d0
0002F9EE <AmiBlitz3.ab3@19222>   BNE 'notan
0002F9F4 <AmiBlitz3.ab3@19223>   OR.l #$f200000f,d1                                       ;fpu tan
0002F9F8 <AmiBlitz3.ab3@19224> BRA 'exit
0002F9FC <AmiBlitz3.ab3@19227>   CMP.b #$a,d0
0002FA00 <AmiBlitz3.ab3@19228>   BNE 'nosin
0002FA06 <AmiBlitz3.ab3@19229>   OR.l #$f200000e,d1                                       ;fpu sin
0002FA0A <AmiBlitz3.ab3@19230> BRA 'exit
0002FA0E <AmiBlitz3.ab3@19233>   CMP.b #$3,d0
0002FA12 <AmiBlitz3.ab3@19234>   BNE 'noasin
0002FA18 <AmiBlitz3.ab3@19235>   OR.l #$f200000c,d1                                       ;fpu asin
0002FA1C <AmiBlitz3.ab3@19236> BRA 'exit
0002FA20 <AmiBlitz3.ab3@19239>   CMP.b #$2,d0
0002FA24 <AmiBlitz3.ab3@19240>   BNE 'noacos
0002FA2A <AmiBlitz3.ab3@19241>   OR.l #$f200001c,d1                                       ;fpu acos
0002FA2E <AmiBlitz3.ab3@19242> BRA 'exit
0002FA32 <AmiBlitz3.ab3@19245>   CMP.b #$4,d0
0002FA36 <AmiBlitz3.ab3@19246>   BNE 'noatan
0002FA3C <AmiBlitz3.ab3@19247>   OR.l #$f200000a,d1                                       ;fpu atan
0002FA40 <AmiBlitz3.ab3@19248> BRA 'exit
0002FA44 <AmiBlitz3.ab3@19251>   CMP.b #$e,d0
0002FA48 <AmiBlitz3.ab3@19252>   BNE 'nohtan
0002FA4E <AmiBlitz3.ab3@19253>   OR.l #$f2000009,d1                                       ;fpu htan
0002FA52 <AmiBlitz3.ab3@19254> BRA 'exit
0002FA56 <AmiBlitz3.ab3@19257>   CMP.b #$6,d0
0002FA5A <AmiBlitz3.ab3@19258>   BNE 'nohcos
0002FA60 <AmiBlitz3.ab3@19259>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FA64 <AmiBlitz3.ab3@19260> BRA 'exit
0002FA68 <AmiBlitz3.ab3@19263>   CMP.b #$b,d0
0002FA6C <AmiBlitz3.ab3@19264>   BNE 'nohsin
0002FA72 <AmiBlitz3.ab3@19265>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FA76 <AmiBlitz3.ab3@19266> BRA 'exit
0002FA7A <AmiBlitz3.ab3@19269>   CMP.b #$9,d0
0002FA7E <AmiBlitz3.ab3@19270>   BNE 'nolog
0002FA84 <AmiBlitz3.ab3@19271>   OR.l #$f2000014,d1                                       ;fpu log
0002FA88 <AmiBlitz3.ab3@19272> BRA 'exit
0002FA8C <AmiBlitz3.ab3@19275>   CMP.b #$8,d0
0002FA90 <AmiBlitz3.ab3@19276>   BNE 'nolog10
0002FA96 <AmiBlitz3.ab3@19277>   OR.l #$f2000015,d1                                       ;fpu log10
0002FA9A <AmiBlitz3.ab3@19278> BRA 'exit
0002FA9E <AmiBlitz3.ab3@19281>   CMP.b #$7,d0
0002FAA2 <AmiBlitz3.ab3@19282>   BNE 'noexp
0002FAA8 <AmiBlitz3.ab3@19283>   OR.l #$f2000010,d1                                       ;fpu exp
0002FAAC <AmiBlitz3.ab3@19284> BRA 'exit
0002FAB2 <AmiBlitz3.ab3@19287>   LEA fpuerr,a0
0002FAB4 <AmiBlitz3.ab3@19288>   MOVE.l a0,-(a7)
0002FABA <AmiBlitz3.ab3@19289> JMP handle_compileerror
0002FABE <AmiBlitz3.ab3@19293>   CMP.b #$3c,d0
0002FAC2 <AmiBlitz3.ab3@19294>   BNE 'nofpu2
0002FAC4 <AmiBlitz3.ab3@19295>   MOVEQ #0,d1
0002FACA <AmiBlitz3.ab3@19296>       MOVE.w regnumstore,d1
0002FACC <AmiBlitz3.ab3@19297>       MOVE.w d1,d0
0002FACE <AmiBlitz3.ab3@19298>       ASL.w #7,d1
0002FAD0 <AmiBlitz3.ab3@19299>       ASL.w #8,d0
0002FAD2 <AmiBlitz3.ab3@19300>       ASL.w #2,d0
0002FAD4 <AmiBlitz3.ab3@19301>       OR.w d0,d1
0002FADA <AmiBlitz3.ab3@19302>       CMP.b #$03,25(a2)
0002FADE <AmiBlitz3.ab3@19303>       BNE 'nosgn
0002FAE4 <AmiBlitz3.ab3@19306>       SUBQ.l #8,destpointer                                ;fpu sgn
0002FAEA <AmiBlitz3.ab3@19307>         OR.l #$f200003a,d1
0002FAEE <AmiBlitz3.ab3@19308>         BSR writelong
0002FAF4 <AmiBlitz3.ab3@19309>         CLR.w a2offset
0002FAFA <AmiBlitz3.ab3@19310>          MOVE.l #$F28E0006,d1
0002FAFE <AmiBlitz3.ab3@19311>          BSR writelong
0002FB04 <AmiBlitz3.ab3@19312>   MOVE.l #$7000600a,d1
0002FB08 <AmiBlitz3.ab3@19313>   BSR writelong
0002FB0E <AmiBlitz3.ab3@19314>   MOVE.l #$70014840,d1
0002FB12 <AmiBlitz3.ab3@19315>   BSR writelong
0002FB18 <AmiBlitz3.ab3@19316>   MOVE.l #$F292,d1
0002FB1C <AmiBlitz3.ab3@19317>   BSR writeword
0002FB22 <AmiBlitz3.ab3@19318>   MOVE.l #$000470FF,d1
0002FB26 <AmiBlitz3.ab3@19319> BRA 'exit
0002FB2E <AmiBlitz3.ab3@19322>   CMP.l #"Frac",$1a(a2)
0002FB32 <AmiBlitz3.ab3@19323>   BNE 'nofrac
0002FB38 <AmiBlitz3.ab3@19324> JMP notwork
0002FB3C <AmiBlitz3.ab3@19365> BRA 'exit
0002FB40 <AmiBlitz3.ab3@19369>   BSR.w JL_0_BB14                                          ;write lib code
0002FB46 <AmiBlitz3.ab3@19370>   MOVE.l (A7)+,libisat
0002FB48 <AmiBlitz3.ab3@19371> RTS
0002FB4C <AmiBlitz3.ab3@19374>   BSR writelong
0002FB52 <AmiBlitz3.ab3@19377>   MOVE.l (A7)+,libisat
0002FB54 <AmiBlitz3.ab3@19378> RTS
0002FB58 <AmiBlitz3.ab3@19382>   BSR.w fetchregs
0002FB5E <AmiBlitz3.ab3@19383>   TST.b debugmode
0002FB62 <AmiBlitz3.ab3@19384>    BEQ.w JL_0_BB76
0002FB64 <AmiBlitz3.ab3@19385>   MOVE.l (A2),D1
0002FB68 <AmiBlitz3.ab3@19386>   OR.l $8(A2),D1
0002FB6C <AmiBlitz3.ab3@19387>   BCLR #$0,D1
0002FB6E <AmiBlitz3.ab3@19388>   TST.l D1
0002FB72 <AmiBlitz3.ab3@19389>    BEQ.w JL_0_BB76
0002FB74 <AmiBlitz3.ab3@19390>   MOVE.l (A2)+,D1
0002FB78 <AmiBlitz3.ab3@19391>   BTST #$0,D1
0002FB7C <AmiBlitz3.ab3@19392>    BEQ.w JL_0_BB60
0002FB82 <AmiBlitz3.ab3@19393>   TST.w blitzmode
0002FB86 <AmiBlitz3.ab3@19394>    BPL.w blitzerr
0002FB8C <AmiBlitz3.ab3@19395>   TST.b debugmode
0002FB90 <AmiBlitz3.ab3@19396>    BEQ.w JL_0_BB5C
0002FB92 <AmiBlitz3.ab3@19397>   MOVE.l D1,-(A7)
0002FB96 <AmiBlitz3.ab3@19398>   MOVE.w #$C311,D1
0002FB9A <AmiBlitz3.ab3@19399>    BSR.w makebtst
0002FB9C <AmiBlitz3.ab3@19400>   MOVE.l (A7)+,D1
0002FBA0 <AmiBlitz3.ab3@19403>   BCLR #$0,D1
0002FBA2 <AmiBlitz3.ab3@19406>   TST.l D1
0002FBA6 <AmiBlitz3.ab3@19407>    BSR.w JL_0_BBC6
0002FBA8 <AmiBlitz3.ab3@19408>   MOVE.l (A2)+,D1
0002FBAC <AmiBlitz3.ab3@19409>    BSR.w JL_0_BB98
0002FBAE <AmiBlitz3.ab3@19410>   MOVE.l (A2)+,D1
0002FBB2 <AmiBlitz3.ab3@19411>    BSR.w JL_0_BBC6
0002FBB6 <AmiBlitz3.ab3@19412> BRA.w JL_0_BB90
0002FBBC <AmiBlitz3.ab3@19415>   BTST #$0,$3(A2)
0002FBC0 <AmiBlitz3.ab3@19416>    BEQ.w JL_0_BB88
0002FBC4 <AmiBlitz3.ab3@19417>   MOVE.w blitzmode(PC),D1
0002FBC8 <AmiBlitz3.ab3@19418>    BPL.w blitzerr
0002FBCC <AmiBlitz3.ab3@19421>   MOVE.l $4(A2),D1
0002FBD0 <AmiBlitz3.ab3@19422>    BSR.w JL_0_BB98
0002FBD6 <AmiBlitz3.ab3@19425>   MOVEA.l libisat,A2
0002FBD8 <AmiBlitz3.ab3@19426> RTS
0002FBDC <AmiBlitz3.ab3@19429>   BTST #$0,D1
0002FBE0 <AmiBlitz3.ab3@19430>    BEQ.w JL_0_BBC4
0002FBE6 <AmiBlitz3.ab3@19431>   TST.w blitzmode
0002FBEA <AmiBlitz3.ab3@19432>    BMI.w amigaerr
0002FBF0 <AmiBlitz3.ab3@19433>   TST.b debugmode
0002FBF4 <AmiBlitz3.ab3@19434>    BEQ.w JL_0_BBC0
0002FBF6 <AmiBlitz3.ab3@19435>   MOVE.l D1,-(A7)
0002FBFA <AmiBlitz3.ab3@19436>   MOVE.w #$C312,D1
0002FBFE <AmiBlitz3.ab3@19437>    BSR.w makebtst
0002FC00 <AmiBlitz3.ab3@19438>   MOVE.l (A7)+,D1
0002FC04 <AmiBlitz3.ab3@19441>   BCLR #$0,D1
0002FC06 <AmiBlitz3.ab3@19444>   TST.l D1
0002FC0A <AmiBlitz3.ab3@19447>    BEQ.w JL_0_BBD2
0002FC0C <AmiBlitz3.ab3@19448>   MOVE.l A1,-(A7)
0002FC10 <AmiBlitz3.ab3@19449>    BSR.w JL_0_BBD4
0002FC12 <AmiBlitz3.ab3@19450>   MOVEA.l (A7)+,A1
0002FC14 <AmiBlitz3.ab3@19453> RTS
0002FC1A <AmiBlitz3.ab3@19456>   MOVEA.l libisat,A0
0002FC20 <AmiBlitz3.ab3@19457>   TST.w cfetchmode
0002FC24 <AmiBlitz3.ab3@19458>    BEQ.w JL_0_BBF6
0002FC26 <AmiBlitz3.ab3@19459>   ADD.l A0,D1
0002FC28 <AmiBlitz3.ab3@19460>   MOVE.l D1,-(A7)
0002FC2C <AmiBlitz3.ab3@19461>   MOVE.w #$4EB9,D1
0002FC30 <AmiBlitz3.ab3@19462>    BSR.w writeword
0002FC32 <AmiBlitz3.ab3@19463>   MOVE.l (A7)+,D1
0002FC36 <AmiBlitz3.ab3@19464> BRA.w writelong
0002FC3A <AmiBlitz3.ab3@19467>   LEA $0(A0,D1.L),A1
0002FC40 <AmiBlitz3.ab3@19468>   CLR.w inline
0002FC44 <AmiBlitz3.ab3@19471>   CMPI.b #$A0,(A1)+
0002FC48 <AmiBlitz3.ab3@19472>    BNE.w JL_0_BC68
0002FC4A <AmiBlitz3.ab3@19473>   TST.b (A1)+
0002FC4E <AmiBlitz3.ab3@19474>    BEQ.w JL_0_BC18
0002FC54 <AmiBlitz3.ab3@19475>   CMPI.b #$1,-$1(A1)
0002FC58 <AmiBlitz3.ab3@19476>    BEQ.w JL_0_BC24
0002FC5E <AmiBlitz3.ab3@19479>   MOVE.w (A1)+,inline
0002FC60 <AmiBlitz3.ab3@19480>   ADDQ.l #4,D1
0002FC64 <AmiBlitz3.ab3@19481> BRA.w JL_0_BC00
0002FC6A <AmiBlitz3.ab3@19484>   TST.w blitzmode
0002FC6E <AmiBlitz3.ab3@19485>    BPL.w JL_0_BC4A
0002FC74 <AmiBlitz3.ab3@19486>   TST.b debugmode
0002FC78 <AmiBlitz3.ab3@19487>    BEQ.w JL_0_BC40
0002FC7C <AmiBlitz3.ab3@19488>   MOVE.w #$C311,D1
0002FC80 <AmiBlitz3.ab3@19489>    BSR.w makebtst
0002FC82 <AmiBlitz3.ab3@19492>   MOVE.l (A1)+,D1
0002FC86 <AmiBlitz3.ab3@19493>   LEA $0(A0,D1.L),A1
0002FC8A <AmiBlitz3.ab3@19494> BRA.w JL_0_BC00
0002FC90 <AmiBlitz3.ab3@19497>   TST.b debugmode
0002FC94 <AmiBlitz3.ab3@19498>    BEQ.w JL_0_BC60
0002FC96 <AmiBlitz3.ab3@19499>   MOVE.l D1,-(A7)
0002FC9A <AmiBlitz3.ab3@19500>   MOVE.w #$C312,D1
0002FC9E <AmiBlitz3.ab3@19501>    BSR.w makebtst
0002FCA0 <AmiBlitz3.ab3@19502>   MOVE.l (A7)+,D1
0002FCA2 <AmiBlitz3.ab3@19505>   ADDQ.w #4,A1
0002FCA4 <AmiBlitz3.ab3@19506>   ADDQ.l #6,D1
0002FCA8 <AmiBlitz3.ab3@19507> BRA.w JL_0_BC00
0002FCAE <AmiBlitz3.ab3@19510>   TST.w inline
0002FCB2 <AmiBlitz3.ab3@19511>    BEQ.w JL_0_BC7E
0002FCB4 <AmiBlitz3.ab3@19512>   SUBQ.w #1,A1
0002FCB6 <AmiBlitz3.ab3@19513>   MOVEA.l A1,A0
0002FCBA <AmiBlitz3.ab3@19514>   ADDA.w inline(PC),A1
0002FCBE <AmiBlitz3.ab3@19515> BRA.w pokecode2
0002FCC2 <AmiBlitz3.ab3@19518>   MOVEM.l a0/D1,-(A7)
0002FCC8 <AmiBlitz3.ab3@19519>   TST.w debugversion
0002FCCC <AmiBlitz3.ab3@19520>   BEQ 'l11
0002FCD4 <AmiBlitz3.ab3@19521>   BTST #$7,link_debuginfo
0002FCD8 <AmiBlitz3.ab3@19522>   BEQ.w 'l11
0002FCDE <AmiBlitz3.ab3@19523>   MOVE.l lastinstruction,d1
0002FCE2 <AmiBlitz3.ab3@19524>   BEQ 'l11
0002FCE8 <AmiBlitz3.ab3@19525>   CLR.l lastinstruction
0002FCEE <AmiBlitz3.ab3@19526>   CMP.l #$e000,d1
0002FCF2 <AmiBlitz3.ab3@19527>   BGE 'ln99
0002FCF8 <AmiBlitz3.ab3@19528>   LEA notf,a0
0002FCFE <AmiBlitz3.ab3@19529>   CMP.l #$c601,d1
0002FD02 <AmiBlitz3.ab3@19530>   BNE 'ln1
0002FD08 <AmiBlitz3.ab3@19531>   LEA strcpy,a0
0002FD0C <AmiBlitz3.ab3@19532> BRA 'ln3
0002FD12 <AmiBlitz3.ab3@19535>   CMP.l #$c700,d1
0002FD16 <AmiBlitz3.ab3@19536>   BNE 'ln2
0002FD1C <AmiBlitz3.ab3@19537>   LEA strvar,a0
0002FD20 <AmiBlitz3.ab3@19538> BRA 'ln3
0002FD26 <AmiBlitz3.ab3@19541>   CMP.l #$ce00,d1
0002FD2A <AmiBlitz3.ab3@19542>   BNE 'ln4
0002FD30 <AmiBlitz3.ab3@19543>   LEA strcmp,a0
0002FD34 <AmiBlitz3.ab3@19544> BRA 'ln3
0002FD3A <AmiBlitz3.ab3@19547>   CMP.l #$ca00,d1
0002FD3E <AmiBlitz3.ab3@19548>   BNE 'ln5
0002FD44 <AmiBlitz3.ab3@19549>   LEA qmul,a0
0002FD48 <AmiBlitz3.ab3@19550> BRA 'ln3
0002FD4E <AmiBlitz3.ab3@19553>   CMP.l #$d000,d1
0002FD52 <AmiBlitz3.ab3@19554>      BNE 'ln6
0002FD58 <AmiBlitz3.ab3@19555>      LEA _MaxLen,a0
0002FD5C <AmiBlitz3.ab3@19556> BRA 'ln3
0002FD62 <AmiBlitz3.ab3@19559>   CMP.l #$cb00,d1
0002FD66 <AmiBlitz3.ab3@19560>   BNE 'ln3
0002FD6C <AmiBlitz3.ab3@19561>   LEA qdiv,a0
0002FD70 <AmiBlitz3.ab3@19562> BRA 'ln3
0002FD72 <AmiBlitz3.ab3@19565>   MOVE.l d1,a0
0002FD76 <AmiBlitz3.ab3@19566>   LEA $8(a0),a0
0002FD7A <AmiBlitz3.ab3@19569>   CMP.w #$ffff,(a0)+
0002FD7E <AmiBlitz3.ab3@19570>   BNE 'l1
0002FD82 <AmiBlitz3.ab3@19571>   LEA 6(a0),a0
0002FD86 <AmiBlitz3.ab3@19574>   MOVEM.l a1/a2/d7/d2,-(a7)
0002FD88 <AmiBlitz3.ab3@19575>   MOVEQ #0,d2
0002FD8E <AmiBlitz3.ab3@19576>   LEA ptr_parameterstore,a1
0002FD90 <AmiBlitz3.ab3@19579>   ADDQ.l #1,d2
0002FD92 <AmiBlitz3.ab3@19580>   MOVE.b (a0)+,d0
0002FD96 <AmiBlitz3.ab3@19581> 
0002FD9A <AmiBlitz3.ab3@19582>   BNE 'nodollar
0002FD9E <AmiBlitz3.ab3@19583>   MOVE.b #"S",d0
0002FDA2 <AmiBlitz3.ab3@19585>   CMP.b #"?",d0
0002FDA6 <AmiBlitz3.ab3@19586>   BEQ 'nolabelwrite
0002FDA8 <AmiBlitz3.ab3@19587>   MOVE.b d0,(a1)+
0002FDAC <AmiBlitz3.ab3@19588>   BNE 'l2
0002FDB2 <AmiBlitz3.ab3@19589>   MOVE.w #"__",-1(a1)
0002FDB4 <AmiBlitz3.ab3@19590>   ADDQ.l #2,d2
0002FDB8 <AmiBlitz3.ab3@19591>   CLR.b 1(a1)
0002FDBE <AmiBlitz3.ab3@19592>   JSR findlabel2
0002FDC2 <AmiBlitz3.ab3@19593>   BEQ 'l3
0002FDC8 <AmiBlitz3.ab3@19594>   JSR addlabelhash
0002FDCC <AmiBlitz3.ab3@19597>   CLR.l 4(a2)
0002FDD0 <AmiBlitz3.ab3@19598>   MOVE.l $14(a7),a0
0002FDD4 <AmiBlitz3.ab3@19599>   MOVE.l $10(a7),d1
0002FDD8 <AmiBlitz3.ab3@19600>   SUB.l $12(a0),d1
0002FDDC <AmiBlitz3.ab3@19601>   ADD.l $28(a0),d1
0002FDE0 <AmiBlitz3.ab3@19602>   MOVE.l d1,8(a2)
0002FDE4 <AmiBlitz3.ab3@19603> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002FDEA <AmiBlitz3.ab3@19606>   TST.b typecheck
0002FDEE <AmiBlitz3.ab3@19607>   BEQ 'p1
0002FDF4 <AmiBlitz3.ab3@19608>   MOVE.l lasttoken,d1
0002FDFA <AmiBlitz3.ab3@19609>   CMP.l #$da01,d1                                          ;poke
0002FDFE <AmiBlitz3.ab3@19610>   BEQ 'lp1
0002FE04 <AmiBlitz3.ab3@19611>   CMP.l #$da02,d1                                          ;peek
0002FE08 <AmiBlitz3.ab3@19612>   BNE 'p1
0002FE0E <AmiBlitz3.ab3@19615>   TST.b peekaddrsize
0002FE12 <AmiBlitz3.ab3@19616>   BEQ 'p1
0002FE1A <AmiBlitz3.ab3@19617>   CMP.b #3,peekaddrsize
0002FE1E <AmiBlitz3.ab3@19618>   BNE errormsg_onlylong
0002FE24 <AmiBlitz3.ab3@19619>   CLR.b peekaddrsize
0002FE2A <AmiBlitz3.ab3@19627>    TST.b fpu
0002FE2E <AmiBlitz3.ab3@19628>   BNE 'optf
0002FE34 <AmiBlitz3.ab3@19629>   TST.b fast
0002FE38 <AmiBlitz3.ab3@19630>   BEQ JL11a2
0002FE40 <AmiBlitz3.ab3@19637>   CMP.l #"Poke",20(a2)                                     ;poke
0002FE44 <AmiBlitz3.ab3@19638>   BNE peekopt
0002FE48 <AmiBlitz3.ab3@19639>   TST.b 24(a2)
0002FE4C <AmiBlitz3.ab3@19640>   BNE peekopt
0002FE50 <AmiBlitz3.ab3@19641>   CMP.b #3,d2
0002FE54 <AmiBlitz3.ab3@19642>   BNE 'lw1
0002FE5A <AmiBlitz3.ab3@19645>   MOVE.l #$21821990,d1
0002FE5E <AmiBlitz3.ab3@19646> BRA.s 'lpx
0002FE62 <AmiBlitz3.ab3@19649>   CMP.b #2,d2
0002FE66 <AmiBlitz3.ab3@19650>   BNE 'lb1
0002FE6C <AmiBlitz3.ab3@19651>   MOVE.l #$31821990,d1
0002FE70 <AmiBlitz3.ab3@19652> BRA.s 'lpx
0002FE74 <AmiBlitz3.ab3@19655>   CMP.b #1,d2
0002FE78 <AmiBlitz3.ab3@19656>   BNE 'lp3
0002FE7E <AmiBlitz3.ab3@19657>   MOVE.l #$11821990,d1
0002FE82 <AmiBlitz3.ab3@19658> BRA.s 'lpx
0002FE86 <AmiBlitz3.ab3@19661>   CMP.b #5,d2
0002FE8A <AmiBlitz3.ab3@19662>     BNE JL11a2
0002FE90 <AmiBlitz3.ab3@19663>     TST.b fpu
0002FE94 <AmiBlitz3.ab3@19664>     BEQ 'll1
0002FE9A <AmiBlitz3.ab3@19665>      MOVE.l destpointer,a4
0002FEA2 <AmiBlitz3.ab3@19666>     CMP.l #$f22d4500,-6(a4)
0002FEA6 <AmiBlitz3.ab3@19667>     BNE 'noglob
0002FEAC <AmiBlitz3.ab3@19668>     TST.b doublepeek
0002FEB0 <AmiBlitz3.ab3@19669>     BNE 'noglob
0002FEB6 <AmiBlitz3.ab3@19670>     MOVE.w -2(a4),-4(a4)
0002FEBC <AmiBlitz3.ab3@19671>     MOVE.w #$21ad,-6(a4)
0002FEC2 <AmiBlitz3.ab3@19672>     MOVE.w #$1990,-2(a4)
0002FECA <AmiBlitz3.ab3@19673>     MOVE.w #9,peeksize
0002FECC <AmiBlitz3.ab3@19674>     ADDQ #8,a7
0002FECE <AmiBlitz3.ab3@19675> RTS
0002FED6 <AmiBlitz3.ab3@19678>     CMP.l #$f22c4500,-6(a4)
0002FEDA <AmiBlitz3.ab3@19679>     BNE 'nolocal
0002FEE0 <AmiBlitz3.ab3@19680>     MOVE.w -2(a4),-4(a4)
0002FEE6 <AmiBlitz3.ab3@19681>     TST.b doublepeek                                       ;dont move longfix on double floats
0002FEEA <AmiBlitz3.ab3@19682>     BNE 'nolocal
0002FEF0 <AmiBlitz3.ab3@19683>     MOVE.w #$21ac,-6(a4)
0002FEF6 <AmiBlitz3.ab3@19684>     MOVE.w #$1990,-2(a4)
0002FEFE <AmiBlitz3.ab3@19685>     MOVE.w #9,peeksize
0002FF00 <AmiBlitz3.ab3@19686>     ADDQ #8,a7
0002FF02 <AmiBlitz3.ab3@19687> RTS
0002FF06 <AmiBlitz3.ab3@19690>     MOVE.w #$f230,d1
0002FF0A <AmiBlitz3.ab3@19691>     BSR writeword
0002FF10 <AmiBlitz3.ab3@19692>   MOVE.l #$65001990,d1
0002FF16 <AmiBlitz3.ab3@19693>   TST.b doublepeek
0002FF1A <AmiBlitz3.ab3@19694>   BEQ 'lpx
0002FF20 <AmiBlitz3.ab3@19695>   OR.l   #$10000000,d1
0002FF22 <AmiBlitz3.ab3@19699>   ADDQ #8,a7
0002FF2A <AmiBlitz3.ab3@19700>   MOVE.w #9,peeksize
0002FF2E <AmiBlitz3.ab3@19701> BRA writelong
0002FF36 <AmiBlitz3.ab3@19704>   CMP.l #"Peek",20(a2)
0002FF3A <AmiBlitz3.ab3@19705>   BNE 'l10
0002FF3E <AmiBlitz3.ab3@19706>   TST.b 24(a2)
0002FF42 <AmiBlitz3.ab3@19707>   BNE 'l10
0002FF4A <AmiBlitz3.ab3@19708>   CMP.w #7,peeksize
0002FF4E <AmiBlitz3.ab3@19709>   BEQ 'l10
0002FF56 <AmiBlitz3.ab3@19710>    CMP.w #3,peeksize
0002FF5A <AmiBlitz3.ab3@19711>    BNE.s 'lw1
0002FF60 <AmiBlitz3.ab3@19714>   MOVE.l #$20301990,d1
0002FF64 <AmiBlitz3.ab3@19715> BRA exitjsr
0002FF6C <AmiBlitz3.ab3@19718>   CMP.w #2,peeksize
0002FF70 <AmiBlitz3.ab3@19719>    BNE.s 'lb1
0002FF76 <AmiBlitz3.ab3@19720>    MOVE.l #$30301990,d1
0002FF7A <AmiBlitz3.ab3@19721> BRA exitjsr
0002FF82 <AmiBlitz3.ab3@19724>   CMP.w #1,peeksize
0002FF86 <AmiBlitz3.ab3@19725>    BNE.s 'lf1
0002FF8C <AmiBlitz3.ab3@19726>    MOVE.l #$10301990,d1
0002FF90 <AmiBlitz3.ab3@19727> BRA exitjsr
0002FF98 <AmiBlitz3.ab3@19730>   CMP.w #5,peeksize
0002FF9C <AmiBlitz3.ab3@19731>    BNE 'l10
0002FFA2 <AmiBlitz3.ab3@19732>    TST.b fpu
0002FFA6 <AmiBlitz3.ab3@19733>    BEQ 'll1
0002FFAA <AmiBlitz3.ab3@19734>    MOVE.w #$f230,d1
0002FFAE <AmiBlitz3.ab3@19735>    BSR writeword
0002FFB0 <AmiBlitz3.ab3@19736>    MOVEQ #0,d1
0002FFB6 <AmiBlitz3.ab3@19737>    MOVE.w tempregnum,d1
0002FFB8 <AmiBlitz3.ab3@19738>    ASL.l #7,d1
0002FFBA <AmiBlitz3.ab3@19739>    ASL.l #8,d1
0002FFBC <AmiBlitz3.ab3@19740>    ASL.l #8,d1
0002FFC2 <AmiBlitz3.ab3@19741>    ADD.l #$44001990,d1
0002FFC8 <AmiBlitz3.ab3@19742>     TST.b doublepeek
0002FFCC <AmiBlitz3.ab3@19743>     BEQ 'lpx2
0002FFD2 <AmiBlitz3.ab3@19744>     OR.l   #$10000000,d1
0002FFD6 <AmiBlitz3.ab3@19746> BRA exitjsr
0002FFDA <AmiBlitz3.ab3@19750>   MOVE.w #$4EB9,D1
0002FFDE <AmiBlitz3.ab3@19751>    BSR.w writeword                                         ;writesysjsr
0002FFE2 <AmiBlitz3.ab3@19752>   MOVEM.l (A7)+,a0/D1
0002FFE8 <AmiBlitz3.ab3@19753>    JSR addoff
0002FFEC <AmiBlitz3.ab3@19754>   SUB.l $12(A0),D1
0002FFF0 <AmiBlitz3.ab3@19755>   ADD.l $28(A0),D1
0002FFF4 <AmiBlitz3.ab3@19756> BRA.w writelong
0002FFF6 <AmiBlitz3.ab3@19761>   MOVE.w D1,-(A7)
0002FFFA <AmiBlitz3.ab3@19762>   MOVE.w tstmode(PC),D1
0002FFFE <AmiBlitz3.ab3@19763>    BSR.w writeword
00030002 <AmiBlitz3.ab3@19764>    BSR.w getbbase
00030006 <AmiBlitz3.ab3@19765>    BSR.w writeword
00030008 <AmiBlitz3.ab3@19766>   MOVE.w (A7)+,D1
0003000C <AmiBlitz3.ab3@19767>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030010 <AmiBlitz3.ab3@19768>    BSR.w Atokejsr
00030014 <AmiBlitz3.ab3@19769>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030016 <AmiBlitz3.ab3@19770> RTS
0003001A <AmiBlitz3.ab3@19778>   MOVE.w blitzoff(PC),D1
0003001E <AmiBlitz3.ab3@19779>   CMP.w #-$1,D1
00030022 <AmiBlitz3.ab3@19780>    BNE.w getbbase__done
00030028 <AmiBlitz3.ab3@19781>   ADDQ.w #1,globalvarpointer
00030030 <AmiBlitz3.ab3@19782>   BCLR #$0,globalvarpointer+1
00030036 <AmiBlitz3.ab3@19783>   MOVE.w globalvarpointer,D1
0003003C <AmiBlitz3.ab3@19784>   MOVE.w D1,blitzoff
00030042 <AmiBlitz3.ab3@19785>   ADDQ.w #2,globalvarpointer
00030044 <AmiBlitz3.ab3@19788> RTS
00030048 <AmiBlitz3.ab3@19792> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0003004A <AmiBlitz3.ab3@19795> inline:     Ds.w 1
0003004C <AmiBlitz3.ab3@19796> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0003004E <AmiBlitz3.ab3@19797> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030050 <AmiBlitz3.ab3@19801>   MOVE.w (A2)+,D1
00030054 <AmiBlitz3.ab3@19802>    BEQ.w fetchregs__done
00030056 <AmiBlitz3.ab3@19803>   MOVE.w (A2)+,D2
0003005A <AmiBlitz3.ab3@19804>    BSR.w toreg
0003005E <AmiBlitz3.ab3@19805> BRA.w fetchregs
00030060 <AmiBlitz3.ab3@19808> RTS
00030064 <AmiBlitz3.ab3@19813>   CMP.w #-$100,D2
00030068 <AmiBlitz3.ab3@19814>    BCC.w toreg__yeah
0003006C <AmiBlitz3.ab3@19816>   BCLR #$F,D2
00030070 <AmiBlitz3.ab3@19817>    BEQ.w toreg__nobm
00030076 <AmiBlitz3.ab3@19819>   TST.w blitzmode
0003007A <AmiBlitz3.ab3@19820>    BMI.w toreg__yeah
0003007C <AmiBlitz3.ab3@19821> RTS
00030080 <AmiBlitz3.ab3@19824>   BCLR #$E,D2
00030084 <AmiBlitz3.ab3@19825>    BEQ.w toreg__yeah
0003008A <AmiBlitz3.ab3@19827>   TST.w blitzmode
0003008E <AmiBlitz3.ab3@19828>    BPL.w toreg__yeah
00030090 <AmiBlitz3.ab3@19829> RTS
00030096 <AmiBlitz3.ab3@19832>   JSR uselib
00030098 <AmiBlitz3.ab3@19833>   TST.b D2
0003009C <AmiBlitz3.ab3@19834>    BEQ.w toreg__norm
000300A0 <AmiBlitz3.ab3@19835>   CMP.b #$4,D2
000300A4 <AmiBlitz3.ab3@19836>    BNE.w toreg__suv
000300A8 <AmiBlitz3.ab3@19837>   MOVE.w #$0004,-(A7)
000300AE <AmiBlitz3.ab3@19838>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
000300B2 <AmiBlitz3.ab3@19839> BRA.w toreg__sendmd
000300B6 <AmiBlitz3.ab3@19842>   CMP.b #$3,D2
000300BA <AmiBlitz3.ab3@19843>    BNE.w toreg__notnmax
000300BC <AmiBlitz3.ab3@19844>   CLR.w -(A7)
000300C2 <AmiBlitz3.ab3@19845>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
000300C4 <AmiBlitz3.ab3@19851>   LSR.w #8,D2
000300C8 <AmiBlitz3.ab3@19852>   MOVE.w #$303C,D1                                         ;move.w #x,dn
000300CC <AmiBlitz3.ab3@19853>   BTST #$7,D2
000300D0 <AmiBlitz3.ab3@19854>    BEQ.w toreg__skipad
000300D4 <AmiBlitz3.ab3@19855>   MOVE.w #$307C,D1                                         ;move.w #x,an
000300D8 <AmiBlitz3.ab3@19856>   CMP.w #$16,D2
000300DC <AmiBlitz3.ab3@19857>    BNE.w toreg__skipad
000300E4 <AmiBlitz3.ab3@19858>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
000300E8 <AmiBlitz3.ab3@19861>   ANDI.w #$7,D2
000300EA <AmiBlitz3.ab3@19862>   LSL.w #8,D2
000300EC <AmiBlitz3.ab3@19863>   LSL.w #1,D2
000300EE <AmiBlitz3.ab3@19864>   OR.w D2,D1
000300F2 <AmiBlitz3.ab3@19865>    BSR.w writeword
000300F6 <AmiBlitz3.ab3@19866>   MOVE.l $12(A1),D1
000300F8 <AmiBlitz3.ab3@19867>   ADD.l (A7)+,D1
000300FC <AmiBlitz3.ab3@19868>   MOVE.w $0(A1,D1.L),D1
000300FE <AmiBlitz3.ab3@19869>   ADD.w (A7)+,D1
00030102 <AmiBlitz3.ab3@19870> BRA.w writeword
00030104 <AmiBlitz3.ab3@19873>   MOVE.w D2,-(A7)
00030106 <AmiBlitz3.ab3@19874>   LSR.w #8,D2
0003010A <AmiBlitz3.ab3@19875>   CMP.w #$16,D2
0003010E <AmiBlitz3.ab3@19876>    BNE.w toreg__isnta6
00030116 <AmiBlitz3.ab3@19877>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0003011A <AmiBlitz3.ab3@19880>   MOVE.l $12(A1),D1                                        ;objectspace
0003011E <AmiBlitz3.ab3@19881>   MOVE.w -$6(A1,D1.L),-(A7)
00030122 <AmiBlitz3.ab3@19882>    BSR.w makeregop
00030126 <AmiBlitz3.ab3@19883>    BSR.w writeword
00030128 <AmiBlitz3.ab3@19884>   MOVE.w (A7)+,D1
0003012A <AmiBlitz3.ab3@19885>   MOVE.w (A7)+,D2
0003012C <AmiBlitz3.ab3@19886>   TST.b D2
00030130 <AmiBlitz3.ab3@19887>    BPL.w toreg__skippy1
00030134 <AmiBlitz3.ab3@19892>    BSR.w writeword                                         ;move.l x(a5),dn
00030136 <AmiBlitz3.ab3@19893>   MOVE.w D2,-(A7)                                          ;store reg used
0003013A <AmiBlitz3.ab3@19895>   ADDA.l $12(A1),A1
0003013C <AmiBlitz3.ab3@19896>   MOVE.b D2,D1
00030140 <AmiBlitz3.ab3@19897>   ANDI.w #$7,D1
00030146 <AmiBlitz3.ab3@19899>   TST.b debugmode
0003014A <AmiBlitz3.ab3@19900>    BEQ.w toreg__norerr
0003014C <AmiBlitz3.ab3@19902>   MOVE.w D1,-(A7)
0003014E <AmiBlitz3.ab3@19903>   LSL.w #8,D1
00030150 <AmiBlitz3.ab3@19904>   LSL.w #1,D1
00030154 <AmiBlitz3.ab3@19905>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030158 <AmiBlitz3.ab3@19906>    BSR.w writeword
0003015C <AmiBlitz3.ab3@19907>   MOVE.w -$4(A1),D1
00030160 <AmiBlitz3.ab3@19908>    BSR.w writeword
00030164 <AmiBlitz3.ab3@19909>   MOVE.l maxchk(PC),D1                                  ;bcs
00030168 <AmiBlitz3.ab3@19910>    BSR.w writelong
0003016A <AmiBlitz3.ab3@19911>   MOVE.l A2,-(A7)
0003016E <AmiBlitz3.ab3@19912>   MOVE.w #$C30A,D1
00030172 <AmiBlitz3.ab3@19913>    BSR.w Atokejsr
00030174 <AmiBlitz3.ab3@19914>   MOVEA.l (A7)+,A2
00030176 <AmiBlitz3.ab3@19915>   MOVE.w (A7)+,D1
0003017A <AmiBlitz3.ab3@19918>   MOVE.w -$2(A1),D2                                        ;shift amount
0003017E <AmiBlitz3.ab3@19921>   CMP.w #$9,D2
00030182 <AmiBlitz3.ab3@19922>    BCS.w toreg__simp
00030186 <AmiBlitz3.ab3@19923>   MOVEM.w D1-D2,-(A7)
00030188 <AmiBlitz3.ab3@19925>   MOVEQ.l #$00,D2                                          ;!!!!!
0003018A <AmiBlitz3.ab3@19927>   LSL.w #8,D2
0003018C <AmiBlitz3.ab3@19928>   LSL.w #1,D2
0003018E <AmiBlitz3.ab3@19929>   OR.w D2,D1
00030192 <AmiBlitz3.ab3@19930>   OR.w lsldn(PC),D1
00030196 <AmiBlitz3.ab3@19931>    BSR.w writeword
0003019A <AmiBlitz3.ab3@19932>   MOVEM.w (A7)+,D1-D2
0003019C <AmiBlitz3.ab3@19933>   SUBQ.w #8,D2
000301A0 <AmiBlitz3.ab3@19934> BRA.w toreg__shloop
000301A2 <AmiBlitz3.ab3@19937>   MOVE.w D1,-(A7)
000301A6 <AmiBlitz3.ab3@19938>   OR.w #$48c0,d1
000301AA <AmiBlitz3.ab3@19939>   BSR writeword
000301AC <AmiBlitz3.ab3@19940>   MOVE.w (a7),d1
000301AE <AmiBlitz3.ab3@19941>   TST.w D2
000301B2 <AmiBlitz3.ab3@19942>   BEQ.w toreg__simp2
000301B6 <AmiBlitz3.ab3@19944>   ANDI.w #$7,D2                                            ;?????
000301B8 <AmiBlitz3.ab3@19946>   LSL.w #8,D2
000301BA <AmiBlitz3.ab3@19947>   LSL.w #1,D2
000301BC <AmiBlitz3.ab3@19948>   OR.w D2,D1
000301C0 <AmiBlitz3.ab3@19949>   OR.w lsldn(PC),D1
000301C4 <AmiBlitz3.ab3@19950>    BSR.w writeword
000301C6 <AmiBlitz3.ab3@19956>   MOVE.w (A7)+,D1
000301CA <AmiBlitz3.ab3@19957>   ANDI.w #$7,D1
000301CE <AmiBlitz3.ab3@19958>   OR.w maxdo(PC),D1
000301D0 <AmiBlitz3.ab3@19959>   MOVE.w (A7)+,D2
000301D2 <AmiBlitz3.ab3@19960>   LSL.w #1,D2
000301D6 <AmiBlitz3.ab3@19961>   ANDI.w #$E00,D2
000301D8 <AmiBlitz3.ab3@19962>   OR.w D2,D1
000301DC <AmiBlitz3.ab3@19963> BRA.w writeword
000301E0 <AmiBlitz3.ab3@19966>   CMP.b #$1,D2
000301E4 <AmiBlitz3.ab3@19967>    BEQ.w toreg__skippy
000301E6 <AmiBlitz3.ab3@19971>   ADDQ.w #4,D1
000301EC <AmiBlitz3.ab3@19973>   TST.b debugmode
000301F0 <AmiBlitz3.ab3@19974>    BEQ.w toreg__skippy
000301F4 <AmiBlitz3.ab3@19976>    BSR.w writeword
000301F6 <AmiBlitz3.ab3@19977>   SWAP D1
000301FA <AmiBlitz3.ab3@19978>   MOVE.w toreg__theretest(PC),D1
000301FC <AmiBlitz3.ab3@19979>   SWAP D1
00030200 <AmiBlitz3.ab3@19980>    BSR.w writelong
00030204 <AmiBlitz3.ab3@19981>   MOVE.l toreg__theretest+4(PC),D1
00030208 <AmiBlitz3.ab3@19982>    BSR.w writelong
0003020C <AmiBlitz3.ab3@19983>   MOVE.l toreg__theretest+8(PC),D1
00030210 <AmiBlitz3.ab3@19984> BRA.w writelong
00030214 <AmiBlitz3.ab3@19987> BRA.w writeword
00030218 <AmiBlitz3.ab3@19992>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0003021C <AmiBlitz3.ab3@19993>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003021E <AmiBlitz3.ab3@19994>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030220 <AmiBlitz3.ab3@19995>             Dc.b $4E,$40                                   ;TRAP   #00
00030222 <AmiBlitz3.ab3@20000>   LSR.w #8,D2
00030226 <AmiBlitz3.ab3@20001>   CMP.b #$16,D2
0003022A <AmiBlitz3.ab3@20002>    BNE.w toreg__nota6
0003022E <AmiBlitz3.ab3@20003>   MOVE.w $A(A1),D1
00030234 <AmiBlitz3.ab3@20004>   CMP.w lasta6,D1
00030238 <AmiBlitz3.ab3@20005>    BEQ.w toreg__sk
0003023E <AmiBlitz3.ab3@20006>   MOVE.w D1,lasta6
00030242 <AmiBlitz3.ab3@20009>    BSR.w makeregop
00030246 <AmiBlitz3.ab3@20010>   TST.w $1A(A1)
0003024A <AmiBlitz3.ab3@20011>    BPL.w toreg__long
0003024E <AmiBlitz3.ab3@20012>   CMP.w stackop(PC),D1
00030252 <AmiBlitz3.ab3@20013>    BNE.w toreg__notst
00030258 <AmiBlitz3.ab3@20014>   SUBQ.w #2,a2offset
0003025C <AmiBlitz3.ab3@20017>    ORI.w #$1000,D1
00030260 <AmiBlitz3.ab3@20020>    BSR.w writeword
00030264 <AmiBlitz3.ab3@20021>   MOVE.w $A(A1),D1
00030268 <AmiBlitz3.ab3@20022>    BSR.w writeword
0003026A <AmiBlitz3.ab3@20025> RTS
0003026C <AmiBlitz3.ab3@20029> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030270 <AmiBlitz3.ab3@20030> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
00030276 <AmiBlitz3.ab3@20031>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030278 <AmiBlitz3.ab3@20034> 
0003027A <AmiBlitz3.ab3@20037>             Dc.b $00,$00
0003027E <AmiBlitz3.ab3@20038> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030282 <AmiBlitz3.ab3@20045>   CMP.b #$FF,D2
00030286 <AmiBlitz3.ab3@20046>    BNE.w makeregop__notst
0003028A <AmiBlitz3.ab3@20047>   MOVE.w stackop(PC),D1
00030290 <AmiBlitz3.ab3@20048>   ADDQ.w #4,a2offset
00030292 <AmiBlitz3.ab3@20049> RTS
00030294 <AmiBlitz3.ab3@20052>   MOVE.l A3,-(A7)
0003029A <AmiBlitz3.ab3@20053>   LEA regtransd,A3
0003029E <AmiBlitz3.ab3@20054>   BTST #$4,D2
000302A2 <AmiBlitz3.ab3@20055>    BEQ.w makeregop__skip
000302A8 <AmiBlitz3.ab3@20056>   LEA regtransa,A3
000302AC <AmiBlitz3.ab3@20059>   ANDI.w #$7,D2
000302AE <AmiBlitz3.ab3@20060>   MOVE.w D2,D1
000302B0 <AmiBlitz3.ab3@20061>   LSL.w #8,D1
000302B2 <AmiBlitz3.ab3@20062>   LSL.w #1,D1
000302B4 <AmiBlitz3.ab3@20063>   OR.w (A3),D1
000302B6 <AmiBlitz3.ab3@20064>   MOVEA.l (A7)+,A3
000302B8 <AmiBlitz3.ab3@20065> RTS
000302BC <AmiBlitz3.ab3@20071>   CMP.w #$3C,D0
000302C0 <AmiBlitz3.ab3@20072>    BCS.w ifchar__no
000302C4 <AmiBlitz3.ab3@20073>   CMP.w #$3E,D0
000302C8 <AmiBlitz3.ab3@20074>    BHI.w ifchar__no
000302CC <AmiBlitz3.ab3@20075>   SUBI.w #$3C,D0
000302CE <AmiBlitz3.ab3@20076>   CMP.w D0,D0
000302D0 <AmiBlitz3.ab3@20079> RTS
000302DA <AmiBlitz3.ab3@20084>   MOVE.w oldqflag,instringon
000302E0 <AmiBlitz3.ab3@20085>   MOVEA.l lastsourcepos,A5
000302E6 <AmiBlitz3.ab3@20090>   MOVE.w regnum,-(A7)
000302EC <AmiBlitz3.ab3@20091>   CLR.w regnum
000302F2 <AmiBlitz3.ab3@20092>   MOVE.l destpointer,-(A7)
000302F8 <AmiBlitz3.ab3@20093>   MOVE.l destbufferend,-(A7)
000302FE <AmiBlitz3.ab3@20094>   MOVE.w dontwrite,-(A7)
00030304 <AmiBlitz3.ab3@20095>   MOVE.w lasta6,-(A7)
0003030A <AmiBlitz3.ab3@20096>   MOVE.w cfetchmode,-(A7)
0003030E <AmiBlitz3.ab3@20097>    BNE.w JL_0_BFB6
00030318 <AmiBlitz3.ab3@20098>   MOVE.l destbufferend,oldlibat
0003031E <AmiBlitz3.ab3@20099>   MOVEA.l constpcat,A0
00030324 <AmiBlitz3.ab3@20100>   MOVE.l A0,destpointer
00030328 <AmiBlitz3.ab3@20101> BRA.w JL_0_BFBC
0003032E <AmiBlitz3.ab3@20104>   MOVEA.l destpointer,A0
00030330 <AmiBlitz3.ab3@20107>   MOVE.l A0,-(A7)
0003033A <AmiBlitz3.ab3@20108>   MOVE.l constlibat,destbufferend
00030340 <AmiBlitz3.ab3@20109>   CLR.w dontwrite
00030348 <AmiBlitz3.ab3@20111>   MOVE.w #$FFFF,lasta6
00030350 <AmiBlitz3.ab3@20112>   MOVE.w #$FFFF,cfetchmode
00030354 <AmiBlitz3.ab3@20114>     BSR.w arreval
00030356 <AmiBlitz3.ab3@20115>    MOVE.l (a7),a0
00030492 <AmiBlitz3.ab3@20117>  !newcalc
00030496 <AmiBlitz3.ab3@20118>    BEQ 'l10
00030498 <AmiBlitz3.ab3@20119>    MOVE.l d0,d3
0003049A <AmiBlitz3.ab3@20120>    MOVEA.l (A7)+,A0
0003049E <AmiBlitz3.ab3@20121> BRA bc1
000304A2 <AmiBlitz3.ab3@20124>    MOVE.w #$2600,D1
000304A8 <AmiBlitz3.ab3@20125>   OR.w regnum,D1
000304AC <AmiBlitz3.ab3@20126>    BSR.w writeword
000304B0 <AmiBlitz3.ab3@20127>   MOVE.w #$4E75,D1
000304B4 <AmiBlitz3.ab3@20128>    BSR.w writeword
000304BA <AmiBlitz3.ab3@20129>   MOVE.w dontwrite,D1
000304BE <AmiBlitz3.ab3@20130>    BNE.w conmemerr
000304C0 <AmiBlitz3.ab3@20131>   MOVEA.l (A7)+,A0
000304C2 <AmiBlitz3.ab3@20132>   NOP
000304C8 <AmiBlitz3.ab3@20133>    JSR Aclearcache                                         ;simple expression
000304CA <AmiBlitz3.ab3@20136>    JSR (A0)                                                ;writeresult
000304D0 <AmiBlitz3.ab3@20139>   MOVE.w (A7)+,cfetchmode
000304D6 <AmiBlitz3.ab3@20140>   MOVE.w (A7)+,lasta6
000304DC <AmiBlitz3.ab3@20141>   MOVE.w (A7)+,dontwrite
000304E2 <AmiBlitz3.ab3@20142>   MOVE.l (A7)+,destbufferend
000304E8 <AmiBlitz3.ab3@20143>   MOVE.l (A7)+,destpointer
000304EE <AmiBlitz3.ab3@20144>   MOVE.w (A7)+,regnum
000304F4 <AmiBlitz3.ab3@20147> JMP reget
000304F8 <AmiBlitz3.ab3@20150> oldlibat:   Ds.l 1
000304FE <AmiBlitz3.ab3@20154>   LEA incdir,A0
00030502 <AmiBlitz3.ab3@20157>   CMP.w #$22,D0
00030506 <AmiBlitz3.ab3@20158>    BEQ.w JL_0_C052
00030508 <AmiBlitz3.ab3@20159>   MOVE.b D0,(A0)+
0003050A <AmiBlitz3.ab3@20160>   TST.w D0
0003050E <AmiBlitz3.ab3@20161>    BEQ.w JL_0_C05A
00030512 <AmiBlitz3.ab3@20162>    BMI.w syntaxerr
00030518 <AmiBlitz3.ab3@20165>   JSR get1bytemain                                         ;_long
0003051C <AmiBlitz3.ab3@20166> BRA.w JL_0_C03E
0003051E <AmiBlitz3.ab3@20169> RTS
00030524 <AmiBlitz3.ab3@20173>   LEA ptr_parameterstore,A1                                ;getparameter
0003052A <AmiBlitz3.ab3@20174>   LEA incdir,A0
0003052C <AmiBlitz3.ab3@20175>   MOVEQ.l #-$01,D2
0003052E <AmiBlitz3.ab3@20178>     ADDQ.w #1,D2
00030530 <AmiBlitz3.ab3@20179>     MOVE.b (A0)+,(A1)+
00030534 <AmiBlitz3.ab3@20180>   BNE.w JL_0_C06A
00030536 <AmiBlitz3.ab3@20181>   SUBQ.w #1,A1
00030540 <AmiBlitz3.ab3@20183>   MOVE.w oldqflag,instringon
00030546 <AmiBlitz3.ab3@20184>   MOVEA.l lastsourcepos,A5
0003054C <AmiBlitz3.ab3@20188>   JSR get1bytemain
0003054E <AmiBlitz3.ab3@20189>   TST.w D0
00030552 <AmiBlitz3.ab3@20190>    BMI.w syntaxerr
00030556 <AmiBlitz3.ab3@20191>   CMP.b #$22,D0
0003055A <AmiBlitz3.ab3@20192>    BEQ.w JL_0_C078
0003055C <AmiBlitz3.ab3@20193>   MOVE.b D0,(A1)+
00030560 <AmiBlitz3.ab3@20194>    BEQ.w JL_0_C096
00030562 <AmiBlitz3.ab3@20195>   ADDQ.w #1,D2
00030566 <AmiBlitz3.ab3@20196> BRA.w JL_0_C078
00030568 <AmiBlitz3.ab3@20199>   TST.w D2
0003056C <AmiBlitz3.ab3@20200>    BEQ.w syntaxerr
0003056E <AmiBlitz3.ab3@20201> RTS
00030574 <AmiBlitz3.ab3@20205>   MOVEA.l constantbase,A2
00030578 <AmiBlitz3.ab3@20206>   MOVEA.l $E(A2),A5
0003057E <AmiBlitz3.ab3@20207>   MOVE.l a5,includesourceline
00030584 <AmiBlitz3.ab3@20208>   LEA inctab,a0
0003058A <AmiBlitz3.ab3@20209>   MOVE.w ininclude,d0
0003058E <AmiBlitz3.ab3@20210>   MOVE.l $0(a0,d0*4),d0
00030592 <AmiBlitz3.ab3@20211>   MOVEA.l $4(A2),A0
00030596 <AmiBlitz3.ab3@20213>   LEA $0(A0,D0.l),A0
00030598 <AmiBlitz3.ab3@20214>   MOVEA.l A5,A1
0003059A <AmiBlitz3.ab3@20217>     CMPA.l A0,A1
0003059E <AmiBlitz3.ab3@20218>      BCC.w JL_0_C0C6
000305A0 <AmiBlitz3.ab3@20219>   TST.b (A1)+
000305A4 <AmiBlitz3.ab3@20220>   BNE.w JL_0_C0B6
000305A8 <AmiBlitz3.ab3@20221> BRA.w JL_0_C112
000305AC <AmiBlitz3.ab3@20224>   MOVEA.l $4(A2),A1
000305AE <AmiBlitz3.ab3@20227>   CMPA.l A0,A5
000305B2 <AmiBlitz3.ab3@20228>   BCC.w JL_0_C0D6
000305B4 <AmiBlitz3.ab3@20229>   MOVE.b (A5)+,(A1)+
000305B8 <AmiBlitz3.ab3@20230> BRA.w JL_0_C0CA
000305BA <AmiBlitz3.ab3@20233>   MOVE.l A1,D0
000305BE <AmiBlitz3.ab3@20234>   SUB.l $4(A2),D0
000305C4 <AmiBlitz3.ab3@20235>   LEA inctab,a0
000305C6 <AmiBlitz3.ab3@20236>   MOVEQ #0,d1
000305CC <AmiBlitz3.ab3@20237>   MOVE.w ininclude,d1
000305D0 <AmiBlitz3.ab3@20238>   MOVE.l d0,0(a0,d1*4)
000305D6 <AmiBlitz3.ab3@20240>   MOVEA.l _dosbase,A6
000305DA <AmiBlitz3.ab3@20241>   MOVE.l $8(A2),D1
000305DC <AmiBlitz3.ab3@20242>   MOVE.l A1,D2
000305E2 <AmiBlitz3.ab3@20243>   MOVE.l D2,include_base
000305E8 <AmiBlitz3.ab3@20245>   MOVE.l #$10000000,d3                                     ;load whole file
000305EA <AmiBlitz3.ab3@20246>   SUB.l D0,D3
000305EE <AmiBlitz3.ab3@20247>    JSR _Read(A6)
000305F0 <AmiBlitz3.ab3@20248>   TST.l D0
000305F4 <AmiBlitz3.ab3@20249>    BMI.w error_reading_file
000305F8 <AmiBlitz3.ab3@20250>    BEQ.w JL_0_C120
000305FE <AmiBlitz3.ab3@20251>    MOVE.l D0,include_length
00030640 <AmiBlitz3.ab3@20252>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003066A <AmiBlitz3.ab3@20253>    !basic
0003067A <AmiBlitz3.ab3@20254>    ilen.l  = Peek.l(?include_length)
0003068A <AmiBlitz3.ab3@20255>    ibase.l = Peek.l(?include_base)
0003069A <AmiBlitz3.ab3@20256>    ido.l   = Peek.l(?include_process)
000306AA <AmiBlitz3.ab3@20257>    *tn.preprocessor = Peek.l(?include_preprocessor)
000306B4 <AmiBlitz3.ab3@20258>    If ido
000306C6 <AmiBlitz3.ab3@20259>      ioffset.l = SkipXtraHeader{ibase,ilen}
000306EC <AmiBlitz3.ab3@20260>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000306FE <AmiBlitz3.ab3@20261>      If nilen>0
0003070E <AmiBlitz3.ab3@20265>        Poke.l ?include_length,nilen
0003072C <AmiBlitz3.ab3@20268>    !asm
00030736 <AmiBlitz3.ab3@20269>    MOVE.l #0,include_process
0003073C <AmiBlitz3.ab3@20270>    MOVE.l include_length,D0
00030742 <AmiBlitz3.ab3@20271>    LEA inctab,a0
00030744 <AmiBlitz3.ab3@20272>    MOVEQ #0,d1
0003074A <AmiBlitz3.ab3@20273>    MOVE.w ininclude,d1
0003074E <AmiBlitz3.ab3@20274>    ADD.l d0,0(a0,d1*4)
00030752 <AmiBlitz3.ab3@20276>   MOVEA.l $4(A2),A5
00030756 <AmiBlitz3.ab3@20278>    MOVE.l 0(a0,d1*4),d0
0003075A <AmiBlitz3.ab3@20279>   CLR.b $0(A5,D0.l)
0003075C <AmiBlitz3.ab3@20282>   MOVEA.l A5,A0
0003075E <AmiBlitz3.ab3@20285>     TST.b (A0)+
00030762 <AmiBlitz3.ab3@20286>   BNE.w JL_0_C114
00030766 <AmiBlitz3.ab3@20287>   MOVE.l A0,$E(A2)
00030768 <AmiBlitz3.ab3@20288> RTS
0003076C <AmiBlitz3.ab3@20291> include_length:        Dc.l 0                              ; for tokenizer!
00030770 <AmiBlitz3.ab3@20292> include_base:          Dc.l 0
00030774 <AmiBlitz3.ab3@20293> include_process:       Dc.l 0
00030778 <AmiBlitz3.ab3@20294> include_preprocessor:  Dc.l 0
0003077C <AmiBlitz3.ab3@20298>   MOVE.l $8(A2),D1
00030782 <AmiBlitz3.ab3@20300>   MOVEA.l _dosbase,A6
00030786 <AmiBlitz3.ab3@20301>   JSR _Close(a6)
0003078C <AmiBlitz3.ab3@20302>   MOVEA.l _execbase,A6
00030790 <AmiBlitz3.ab3@20303>   MOVEA.l $4(A2),A1
00030796 <AmiBlitz3.ab3@20304>   MOVE.l #$400*8,D0                                        ;exit include
0003079A <AmiBlitz3.ab3@20306>   JSR _FreeVec(a6)
000307A0 <AmiBlitz3.ab3@20309>   MOVE.l (A2),constantbase
000307A2 <AmiBlitz3.ab3@20310>   MOVEA.l A2,A1
000307A4 <AmiBlitz3.ab3@20311>   MOVEQ.l #$00,D0
000307A8 <AmiBlitz3.ab3@20312>   MOVE.b $12(A2),D0
000307AE <AmiBlitz3.ab3@20313>   MOVEA.l _execbase,A6
000307B4 <AmiBlitz3.ab3@20314>   MOVE.l mempool2,a0
000307B8 <AmiBlitz3.ab3@20315>   JSR _FreePooled(A6)
000307BE <AmiBlitz3.ab3@20316>   JSR zero_includename
000307C4 <AmiBlitz3.ab3@20317>   SUBQ.w #1,ininclude
000307C8 <AmiBlitz3.ab3@20318>   BNE.w AJL_0_C09E
000307CE <AmiBlitz3.ab3@20321>   LEA _include,a0
000307D2 <AmiBlitz3.ab3@20322>   MOVEM.l a0-a6/d0-d7,-(a7)
000307D8 <AmiBlitz3.ab3@20323>   LEA ptr_parameterstore,a1
000307DA <AmiBlitz3.ab3@20326>     MOVE.b (a0)+,(a1)+
000307DE <AmiBlitz3.ab3@20327>   BNE 'l1b
000307E0 <AmiBlitz3.ab3@20328>   MOVEQ #9,d2
000307E6 <AmiBlitz3.ab3@20329>   JSR findlabel2
000307EA <AmiBlitz3.ab3@20330>   BNE 'd
000307EE <AmiBlitz3.ab3@20331>   CLR.l 8(a2)
000307F2 <AmiBlitz3.ab3@20334>   MOVEM.l (a7)+,a0-a6/d0-d7
000307F4 <AmiBlitz3.ab3@20335> RTS
000307FA <AmiBlitz3.ab3@20339>   MOVE.l unusedfunc,d0
000307FE <AmiBlitz3.ab3@20340>   BEQ 'noclear
00030802 <AmiBlitz3.ab3@20341>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030804 <AmiBlitz3.ab3@20344>     MOVE.l d0,a1
00030808 <AmiBlitz3.ab3@20345>     MOVE.l 4(a1),d0
0003080A <AmiBlitz3.ab3@20346>     MOVE.l (a1),d2
00030810 <AmiBlitz3.ab3@20347>     MOVE.l _execbase,a6
00030814 <AmiBlitz3.ab3@20348>     JSR _FreeMem(a6)
00030816 <AmiBlitz3.ab3@20349>     MOVE.l d2,d0
0003081A <AmiBlitz3.ab3@20350>   BNE 'f1
00030820 <AmiBlitz3.ab3@20351>   CLR.l unusedfunc
00030824 <AmiBlitz3.ab3@20352>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030826 <AmiBlitz3.ab3@20355> RTS
0003082C <AmiBlitz3.ab3@20359>   MOVEA.l xinclude_base,A2
00030832 <AmiBlitz3.ab3@20360>   CLR.l xinclude_base
00030836 <AmiBlitz3.ab3@20363>     CMPA.w #$0,A2
0003083A <AmiBlitz3.ab3@20364>      BEQ.w JL_0_C186
0003083C <AmiBlitz3.ab3@20365>     MOVEQ.l #$00,D0
00030840 <AmiBlitz3.ab3@20366>     MOVE.b 4+8(A2),D0
00030842 <AmiBlitz3.ab3@20367>     MOVEA.l A2,A1
00030844 <AmiBlitz3.ab3@20368>     MOVEA.l (A2),A2
0003084A <AmiBlitz3.ab3@20369>     MOVEA.l _execbase,A6
00030850 <AmiBlitz3.ab3@20370>     MOVE.l mempool2,a0
00030854 <AmiBlitz3.ab3@20371>     JSR _FreePooled(A6)
00030858 <AmiBlitz3.ab3@20372> BRA.w JL_0_C168
0003085A <AmiBlitz3.ab3@20375> RTS
00030860 <AmiBlitz3.ab3@20379>   MOVEA.l constantbase,A2
00030866 <AmiBlitz3.ab3@20380>   CLR.l constantbase
0003086A <AmiBlitz3.ab3@20383>     CMPA.w #$0,A2
0003086E <AmiBlitz3.ab3@20384>      BEQ.w JL_0_C1DC
00030872 <AmiBlitz3.ab3@20385>     MOVE.l $8(A2),D1
00030876 <AmiBlitz3.ab3@20386>      BEQ.w JL_0_C1AE
0003087C <AmiBlitz3.ab3@20387>     MOVEA.l _dosbase,A6
00030880 <AmiBlitz3.ab3@20388>      JSR _Close(A6)
00030884 <AmiBlitz3.ab3@20391>     MOVE.l $4(A2),D0
00030888 <AmiBlitz3.ab3@20392>      BEQ.w JL_0_C1C6
0003088A <AmiBlitz3.ab3@20393>     MOVEA.l D0,A1
00030890 <AmiBlitz3.ab3@20394>     MOVE.l #$400*8,D0
00030896 <AmiBlitz3.ab3@20395>     MOVEA.l _execbase,A6
0003089C <AmiBlitz3.ab3@20396>     MOVE.l mempool,a0
000308A0 <AmiBlitz3.ab3@20397>     JSR _FreeVec(a6)
000308A2 <AmiBlitz3.ab3@20400>     MOVEQ.l #$00,D0
000308A6 <AmiBlitz3.ab3@20401>     MOVE.b $12(A2),D0
000308A8 <AmiBlitz3.ab3@20402>     MOVEA.l A2,A1
000308AA <AmiBlitz3.ab3@20403>     MOVEA.l (A2),A2
000308B0 <AmiBlitz3.ab3@20404>     MOVEA.l _execbase,A6
000308B6 <AmiBlitz3.ab3@20405>     MOVE.l mempool2,a0
000308BA <AmiBlitz3.ab3@20406>     JSR _FreePooled(A6)
000308BE <AmiBlitz3.ab3@20407> BRA.w JL_0_C194
000308C0 <AmiBlitz3.ab3@20410> RTS
000308C2 <AmiBlitz3.ab3@20414>   SWAP D0
000308C6 <AmiBlitz3.ab3@20415>    BSR.w JL_0_C1E6
000308C8 <AmiBlitz3.ab3@20416>   SWAP D0
000308CE <AmiBlitz3.ab3@20419>   MOVEA.l data2,A4
000308D4 <AmiBlitz3.ab3@20420>   CMPA.l allat,A4
000308D8 <AmiBlitz3.ab3@20421>    BCC.w JL_0_C200
000308DA <AmiBlitz3.ab3@20422>   MOVE.w D0,(A4)+
000308E0 <AmiBlitz3.ab3@20423>   MOVE.l A4,data2
000308E2 <AmiBlitz3.ab3@20424> RTS
000308EA <AmiBlitz3.ab3@20427>   MOVE.w #$FFFF,dontwrite
000308F0 <AmiBlitz3.ab3@20428>   ADDQ.l #2,data2
000308F2 <AmiBlitz3.ab3@20429> RTS
000308F8 <AmiBlitz3.ab3@20433>   MOVEA.l data2,A4
000308FE <AmiBlitz3.ab3@20434>   CMPA.l allat,A4
00030902 <AmiBlitz3.ab3@20435>    BCC.w JL_0_C22A
00030904 <AmiBlitz3.ab3@20436>   MOVE.b D0,(A4)+
0003090A <AmiBlitz3.ab3@20437>   MOVE.l A4,data2
0003090C <AmiBlitz3.ab3@20438> RTS
00030914 <AmiBlitz3.ab3@20441>   MOVE.w #$FFFF,dontwrite
0003091A <AmiBlitz3.ab3@20442>   ADDQ.l #1,data2
0003091C <AmiBlitz3.ab3@20443> RTS
00030920 <AmiBlitz3.ab3@20447>   CMP.w #$22,D0
00030924 <AmiBlitz3.ab3@20448>    BNE.w syntaxerr
0003092A <AmiBlitz3.ab3@20452>   JSR get1bytemain
0003092E <AmiBlitz3.ab3@20453>   CMP.b #$22,D0
00030932 <AmiBlitz3.ab3@20454>    BEQ.w JL_0_C25A
00030934 <AmiBlitz3.ab3@20455>   TST.w D0
00030938 <AmiBlitz3.ab3@20456>    BEQ.w syntaxerr
0003093A <AmiBlitz3.ab3@20457>   MOVE.b D0,(A0)+
0003093E <AmiBlitz3.ab3@20458> BRA.w JL_0_C242
00030940 <AmiBlitz3.ab3@20461>   CLR.b (A0)
00030942 <AmiBlitz3.ab3@20462> RTS
00030944 <AmiBlitz3.ab3@20465>   TST.l D3
00030946 <AmiBlitz3.ab3@20466> RTS
0003094C <AmiBlitz3.ab3@20469>   LEA ptr_parameterstore,A0
00030952 <AmiBlitz3.ab3@20470>   LEA namebuff2,A1
00030954 <AmiBlitz3.ab3@20473>     MOVE.b (A0)+,D0
00030958 <AmiBlitz3.ab3@20474>     BEQ.w JL_0_C27C
0003095A <AmiBlitz3.ab3@20475>   CMP.b (A1)+,D0
0003095E <AmiBlitz3.ab3@20476>   BEQ.w JL_0_C26E
00030960 <AmiBlitz3.ab3@20477> RTS
00030962 <AmiBlitz3.ab3@20480>   TST.b (A1)
00030966 <AmiBlitz3.ab3@20481>   BNE.w JL_0_C284
00030968 <AmiBlitz3.ab3@20482> RTS
0003096C <AmiBlitz3.ab3@20485>   CMP.w #$1,D0
0003096E <AmiBlitz3.ab3@20486> RTS
00030972 <AmiBlitz3.ab3@20490>   CMP.w #$2E,D0                                            ;dodeftype
00030976 <AmiBlitz3.ab3@20491>    BNE.w syntaxerr
0003097A <AmiBlitz3.ab3@20492>   BSR.w getparameter2
00030980 <AmiBlitz3.ab3@20493>   LEA newtypebase,A2
00030984 <AmiBlitz3.ab3@20494>   BSR.w findtype
00030988 <AmiBlitz3.ab3@20495>    BNE.w notypeerr
0003098E <AmiBlitz3.ab3@20496>   TST.b declare
00030992 <AmiBlitz3.ab3@20497>    BNE 'l1
00030998 <AmiBlitz3.ab3@20498>   TST.b declare2
0003099C <AmiBlitz3.ab3@20499>    BEQ 'l2
000309A4 <AmiBlitz3.ab3@20502>   MOVE.b #2,nowdeclare
000309AA <AmiBlitz3.ab3@20506>   JSR reget
000309AE <AmiBlitz3.ab3@20507>    BNE.w JL_0_C2B4
000309B4 <AmiBlitz3.ab3@20508>   MOVE.l A2,defaulttype
000309B6 <AmiBlitz3.ab3@20509> RTS
000309BC <AmiBlitz3.ab3@20512>   MOVE.l defaulttype,-(A7)
000309C2 <AmiBlitz3.ab3@20513>   MOVE.l A2,defaulttype
000309C6 <AmiBlitz3.ab3@20516>   BSR.w getparameter
000309CA <AmiBlitz3.ab3@20517>    BSR.w JL_0_8E3C
000309CE <AmiBlitz3.ab3@20518>   CMP.w #$2C,D0
000309D2 <AmiBlitz3.ab3@20519>    BNE.w JL_0_C2D8
000309D8 <AmiBlitz3.ab3@20520>    JSR get1bytemain                                        ; was BSR.w
000309DC <AmiBlitz3.ab3@20521> BRA.w JL_0_C2C0
000309E2 <AmiBlitz3.ab3@20524>   MOVE.l (A7)+,defaulttype
000309E4 <AmiBlitz3.ab3@20525> RTS
000309E8 <AmiBlitz3.ab3@20529>   LEA $4(A5),A2                                            ;fehler function
000309EA <AmiBlitz3.ab3@20532>   MOVE.l A2,D0
000309EE <AmiBlitz3.ab3@20535>   BSR.w getparameter
000309F2 <AmiBlitz3.ab3@20536>   BSR.w JL_0_8E3C
000309F6 <AmiBlitz3.ab3@20537>   BSR.w calcvar
000309FA <AmiBlitz3.ab3@20538>   CMP.b #$7,D2
000309FE <AmiBlitz3.ab3@20539>    BNE.w mismatcherr
00030A02 <AmiBlitz3.ab3@20540>   MOVE.w varmode(PC),-(A7)
00030A06 <AmiBlitz3.ab3@20541>   CMP.w #$3D,D0
00030A0A <AmiBlitz3.ab3@20542>    BNE.w syntaxerr
00030A0E <AmiBlitz3.ab3@20543>   BTST #$F,D2
00030A12 <AmiBlitz3.ab3@20544>    BNE.w JL_0_C31C
00030A16 <AmiBlitz3.ab3@20545>   MOVE.w JL_0_C2E0(PC),D1
00030A1A <AmiBlitz3.ab3@20546>   BSR.w pokewda5s
00030A1C <AmiBlitz3.ab3@20547>   MOVE.w D3,D1
00030A20 <AmiBlitz3.ab3@20548>   BSR.w writeword
00030A24 <AmiBlitz3.ab3@20551>   MOVE.w L_0_C2E4(PC),D1
00030A28 <AmiBlitz3.ab3@20552>   BSR.w writeword
00030A2E <AmiBlitz3.ab3@20553>   ADDQ.w #1,regnum
00030A30 <AmiBlitz3.ab3@20554>   MOVEQ.l #$03,D2
00030A34 <AmiBlitz3.ab3@20555>   BSR.w eval
00030A3A <AmiBlitz3.ab3@20556>   MOVE.l #$D000,D1
00030A40 <AmiBlitz3.ab3@20557>   MOVE.l d1,lastinstruction
00030A42 <AmiBlitz3.ab3@20558>   TST.w (A7)+
00030A46 <AmiBlitz3.ab3@20559>    BEQ.w Atokejsr
00030A48 <AmiBlitz3.ab3@20560>   ADDQ.w #1,D1
00030A4C <AmiBlitz3.ab3@20561> BRA.w Atokejsr
00030A4E <AmiBlitz3.ab3@20565>   MOVE.w D0,D1
00030A52 <AmiBlitz3.ab3@20566>    BPL.w syntaxerr
00030A56 <AmiBlitz3.ab3@20567>   BCLR #$F,D1
00030A5C <AmiBlitz3.ab3@20568>    JSR searchinstr
00030A60 <AmiBlitz3.ab3@20569>   MOVE.l $12(A2),D0
00030A64 <AmiBlitz3.ab3@20570>   TST.w -$2(A2,D0.L)
00030A68 <AmiBlitz3.ab3@20571>    BEQ.w freeerr
00030A6A <AmiBlitz3.ab3@20572>   MOVEQ.l #$02,D2
00030A6C <AmiBlitz3.ab3@20573>   MOVE.l A2,-(A7)
00030A70 <AmiBlitz3.ab3@20574>    BSR.w eval
00030A72 <AmiBlitz3.ab3@20575>   MOVEA.l (A7)+,A2
00030A78 <AmiBlitz3.ab3@20576>   MOVE.l A2,mymaxlib
00030A7C <AmiBlitz3.ab3@20577>   ADDA.l $12(A2),A2
00030A82 <AmiBlitz3.ab3@20578>   TST.b debugmode
00030A86 <AmiBlitz3.ab3@20579>    BEQ.w JL_0_C3A8
00030A8C <AmiBlitz3.ab3@20580>   MOVE.w regnum,D1
00030A8E <AmiBlitz3.ab3@20581>   LSL.w #8,D1
00030A90 <AmiBlitz3.ab3@20582>   LSL.w #1,D1
00030A94 <AmiBlitz3.ab3@20583>   ORI.w #$B07C,D1
00030A98 <AmiBlitz3.ab3@20584>    BSR.w writeword
00030A9C <AmiBlitz3.ab3@20585>   MOVE.w -$4(A2),D1
00030AA0 <AmiBlitz3.ab3@20586>    BSR.w writeword
00030AA6 <AmiBlitz3.ab3@20587>   MOVE.l maxchk,D1
00030AAA <AmiBlitz3.ab3@20588>    BSR.w writelong
00030AAC <AmiBlitz3.ab3@20589>   MOVE.l A2,-(A7)
00030AB0 <AmiBlitz3.ab3@20590>   MOVE.w #$C30A,D1
00030AB4 <AmiBlitz3.ab3@20591>    BSR.w Atokejsr
00030AB6 <AmiBlitz3.ab3@20592>   MOVEA.l (A7)+,A2
00030ABA <AmiBlitz3.ab3@20595>   MOVE.w -$2(A2),D2
00030AC0 <AmiBlitz3.ab3@20598>   MOVE.w regnum,D1
00030AC6 <AmiBlitz3.ab3@20599>   OR.w lslimm,D1
00030ACA <AmiBlitz3.ab3@20600>   CMP.w #$8,D2
00030ACE <AmiBlitz3.ab3@20601>    BCS.w JL_0_C3CE
00030AD2 <AmiBlitz3.ab3@20602>    BSR.w writeword
00030AD4 <AmiBlitz3.ab3@20603>   SUBQ.w #8,D2
00030AD8 <AmiBlitz3.ab3@20604>    BNE.w JL_0_C3AC
00030ADC <AmiBlitz3.ab3@20605> BRA.w JL_0_C3DA
00030ADE <AmiBlitz3.ab3@20608>   MOVE.w D2,D0
00030AE0 <AmiBlitz3.ab3@20609>   LSL.w #8,D0
00030AE2 <AmiBlitz3.ab3@20610>   LSL.w #1,D0
00030AE4 <AmiBlitz3.ab3@20611>   OR.w D0,D1
00030AE8 <AmiBlitz3.ab3@20612>   BSR.w writeword
00030AEA <AmiBlitz3.ab3@20615> RTS
00030AEE <AmiBlitz3.ab3@20620>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00030AF0 <AmiBlitz3.ab3@20621>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00030AF4 <AmiBlitz3.ab3@20625> mymaxlib:  Ds.l 1
00030AF8 <AmiBlitz3.ab3@20629>   BSR.w JL_0_C340
00030AFC <AmiBlitz3.ab3@20630>   LEA free(PC),A0
00030B00 <AmiBlitz3.ab3@20631>   LEA freef(PC),A1
00030B06 <AmiBlitz3.ab3@20632>   MOVE.w -$6(A2),$2(A0)
00030B0A <AmiBlitz3.ab3@20633>   BSR.w pokecode
00030B0E <AmiBlitz3.ab3@20634>   MOVE.l -$A(A2),D1
00030B12 <AmiBlitz3.ab3@20637>   BEQ.w nosuperr
00030B16 <AmiBlitz3.ab3@20638>   MOVEA.l mymaxlib(PC),A2
00030B1A <AmiBlitz3.ab3@20639> BRA.w Amakelibsub
00030B1E <AmiBlitz3.ab3@20644>   BSR.w JL_0_C340
00030B24 <AmiBlitz3.ab3@20645>   LEA use,A0
00030B2A <AmiBlitz3.ab3@20646>   LEA usef,A1
00030B30 <AmiBlitz3.ab3@20647>   MOVE.w -$6(A2),$2(A0)
00030B36 <AmiBlitz3.ab3@20648>   MOVE.w -$6(A2),-$2(A1)
00030B3A <AmiBlitz3.ab3@20649>   ADDQ.w #4,-$2(A1)
00030B3E <AmiBlitz3.ab3@20650>   BSR.w pokecode
00030B42 <AmiBlitz3.ab3@20651>   MOVE.l -$E(A2),D1
00030B46 <AmiBlitz3.ab3@20652> BRA.w maxjsr
00030B4C <AmiBlitz3.ab3@20656>   JSR get1bytemain
00030B52 <AmiBlitz3.ab3@20660>   MOVE.l firstiff,D0
00030B56 <AmiBlitz3.ab3@20661>    BEQ.w noiferr
00030B58 <AmiBlitz3.ab3@20662>   MOVEA.l D0,A0
00030B5E <AmiBlitz3.ab3@20663>   CMPI.b #$1,$D(A0)
00030B62 <AmiBlitz3.ab3@20664>    BEQ.w illelseerr
00030B66 <AmiBlitz3.ab3@20665>   MOVE.w #$6000,D1
00030B6C <AmiBlitz3.ab3@20667>     TST.b fast
00030B70 <AmiBlitz3.ab3@20668>     BEQ 'l1
00030B76 <AmiBlitz3.ab3@20669>     OR.l #$ff,d1
00030B7A <AmiBlitz3.ab3@20670>     BSR writeword
00030B7C <AmiBlitz3.ab3@20674>   SWAP D1
00030B80 <AmiBlitz3.ab3@20675>   BSR.w writelong
00030B82 <AmiBlitz3.ab3@20676>   MOVEQ.l #$00,D1
00030B86 <AmiBlitz3.ab3@20677>   BSR.w AJL_0_D7B8
00030B8E <AmiBlitz3.ab3@20678>   MOVE.l destpointer,$8(A0)
00030B92 <AmiBlitz3.ab3@20679> BRA.w do_then
00030B98 <AmiBlitz3.ab3@20683>   LEA ptr_parameterstore,A0
00030B9A <AmiBlitz3.ab3@20684>   MOVE.l A0,-(A7)
00030B9E <AmiBlitz3.ab3@20685>   BSR.w JL_0_C23A
00030BA2 <AmiBlitz3.ab3@20686> BRA.w handle_compileerror
00030BA6 <AmiBlitz3.ab3@20690>   BSR.w JL_0_BF6A
00030BA8 <AmiBlitz3.ab3@20691>   MOVEQ.l #$05,D1
00030BB2 <AmiBlitz3.ab3@20693>   MOVE.w oldqflag,instringon
00030BB8 <AmiBlitz3.ab3@20694>   MOVEA.l lastsourcepos,A5
00030BBE <AmiBlitz3.ab3@20695>   LEA AJL_0_C25E,A0
00030BC2 <AmiBlitz3.ab3@20696> BRA.w JL_0_C4B4
00030BC8 <AmiBlitz3.ab3@20700>   LEA ptr_parameterstore,A0
00030BCC <AmiBlitz3.ab3@20701>   BSR.w JL_0_C23A
00030BD2 <AmiBlitz3.ab3@20702>   JSR get1bytemain
00030BD6 <AmiBlitz3.ab3@20703>   BSR.w JL_0_CCA8
00030BDC <AmiBlitz3.ab3@20704>   LEA namebuff2,A0
00030BE0 <AmiBlitz3.ab3@20705>   BSR.w JL_0_C23A
00030BE6 <AmiBlitz3.ab3@20706>   LEA AJL_0_C262,A0
00030BE8 <AmiBlitz3.ab3@20709>   LSL.w #2,D1
00030BEE <AmiBlitz3.ab3@20710>   LEA CIF_branches,A1
00030BF2 <AmiBlitz3.ab3@20711>   MOVE.l $0(A1,D1.W),-(A7)
00030BF4 <AmiBlitz3.ab3@20712>   MOVEQ.l #-$01,D1
00030BF6 <AmiBlitz3.ab3@20715>   JSR (A0)
00030BF8 <AmiBlitz3.ab3@20717>   MOVEA.l (A7)+,A1
00030BFA <AmiBlitz3.ab3@20719> JMP (A1)
00030BFE <AmiBlitz3.ab3@20723>   BEQ.w JL_0_C4F6
00030C02 <AmiBlitz3.ab3@20724> BRA.w JL_0_C4F4
00030C06 <AmiBlitz3.ab3@20728>   BNE.w JL_0_C4F6
00030C0A <AmiBlitz3.ab3@20729> BRA.w JL_0_C4F4
00030C0E <AmiBlitz3.ab3@20733>   BLT.w JL_0_C4F6
00030C12 <AmiBlitz3.ab3@20734> BRA.w JL_0_C4F4
00030C16 <AmiBlitz3.ab3@20738>   BLE.w JL_0_C4F6
00030C1A <AmiBlitz3.ab3@20739> BRA.w JL_0_C4F4
00030C1E <AmiBlitz3.ab3@20743>   BGT.w JL_0_C4F6
00030C22 <AmiBlitz3.ab3@20744> BRA.w JL_0_C4F4
00030C26 <AmiBlitz3.ab3@20748>   BGE.w JL_0_C4F6
00030C28 <AmiBlitz3.ab3@20751>   MOVEQ.l #$00,D1
00030C2E <AmiBlitz3.ab3@20754>   MOVEA.l concomsp,A0
00030C34 <AmiBlitz3.ab3@20755>   MOVE.w skipcode,(A0)+
00030C3A <AmiBlitz3.ab3@20756>   MOVE.l A0,concomsp
00030C40 <AmiBlitz3.ab3@20757>   MOVE.w D1,skipcode
00030C46 <AmiBlitz3.ab3@20758>   JSR get1bytemain
00030C4A <AmiBlitz3.ab3@20759>    BNE.w syntaxerr
00030C50 <AmiBlitz3.ab3@20760> JMP bakup
00030C58 <AmiBlitz3.ab3@20764> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00030C5C <AmiBlitz3.ab3@20765> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00030C60 <AmiBlitz3.ab3@20772>   MOVE.w #$FC17,D1
00030C66 <AmiBlitz3.ab3@20773>   JSR uselib
00030C6C <AmiBlitz3.ab3@20775>   JSR reget
00030C70 <AmiBlitz3.ab3@20776>    BEQ.w do_Restore__resbeg
00030C74 <AmiBlitz3.ab3@20777>   BSR.w JL_0_AE22                                          ;get label name!
00030C78 <AmiBlitz3.ab3@20778>   MOVE.w rescode(PC),D1
00030C7C <AmiBlitz3.ab3@20779>   BSR.w writeword
00030C82 <AmiBlitz3.ab3@20780>   JSR addoff                                               ;add offset
00030C86 <AmiBlitz3.ab3@20781>   MOVE.l $C(A2),D1
00030C8A <AmiBlitz3.ab3@20782>   BSR.w writelong
00030C8E <AmiBlitz3.ab3@20783>   MOVE.w rescode+6(PC),D1
00030C92 <AmiBlitz3.ab3@20784>   BSR.w writeword
00030C96 <AmiBlitz3.ab3@20785>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00030C9A <AmiBlitz3.ab3@20786>   BEQ.w do_Restore__no
00030C9C <AmiBlitz3.ab3@20788>   MOVEA.l D1,A1
00030CA0 <AmiBlitz3.ab3@20789>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00030CA2 <AmiBlitz3.ab3@20790> RTS
00030CA4 <AmiBlitz3.ab3@20795> RTS
00030CA8 <AmiBlitz3.ab3@20798>   MOVE.w #$CD00,D1
00030CAE <AmiBlitz3.ab3@20799>   JSR Atokejsr
00030CB2 <AmiBlitz3.ab3@20800>   MOVE.l rescode2(PC),D1
00030CB8 <AmiBlitz3.ab3@20801> JMP writelong
00030CBC <AmiBlitz3.ab3@20805>   MOVE.w #$FC17,D1
00030CC2 <AmiBlitz3.ab3@20806>   JSR uselib
00030CC8 <AmiBlitz3.ab3@20809>   MOVE.l dataget,D1
00030CCC <AmiBlitz3.ab3@20810>   BSR.w writelong
00030CD0 <AmiBlitz3.ab3@20811>   BSR.w getparameter
00030CD4 <AmiBlitz3.ab3@20812>   BSR.w JL_0_8E3C
00030CD8 <AmiBlitz3.ab3@20813>   BSR.w calcvar
00030CDC <AmiBlitz3.ab3@20814>   BTST #$E,D2
00030CE0 <AmiBlitz3.ab3@20815>    BEQ.w JL_0_C5A6
00030CE4 <AmiBlitz3.ab3@20816>   MOVE.b #$6,D2
00030CE6 <AmiBlitz3.ab3@20819>   TST.b D2
00030CEA <AmiBlitz3.ab3@20820>    BEQ.w noleterr
00030CF0 <AmiBlitz3.ab3@20821>   TST.b debugmode
00030CF4 <AmiBlitz3.ab3@20822>    BEQ.w JL_0_C5D0
00030CF8 <AmiBlitz3.ab3@20823>   MOVE.w #$7000,D1
00030CFA <AmiBlitz3.ab3@20824>   MOVE.b D2,D1
00030CFE <AmiBlitz3.ab3@20825>   ANDI.b #$F,D1
00030D02 <AmiBlitz3.ab3@20826>   BSR.w writeword
00030D06 <AmiBlitz3.ab3@20827>   MOVE.w #$C310,D1
00030D08 <AmiBlitz3.ab3@20828>   MOVE.w D2,-(A7)
00030D0C <AmiBlitz3.ab3@20829>   BSR.w Atokejsr
00030D0E <AmiBlitz3.ab3@20830>   MOVE.w (A7)+,D2
00030D12 <AmiBlitz3.ab3@20833>   CMP.b #$7,D2
00030D16 <AmiBlitz3.ab3@20834>    BEQ.w JL_0_C684
00030D1A <AmiBlitz3.ab3@20835>   CMP.b #$1,D2
00030D1E <AmiBlitz3.ab3@20836>    BNE.w JL_0_C62A
00030D24 <AmiBlitz3.ab3@20837>   LEA dataletb2,A0
00030D2A <AmiBlitz3.ab3@20838>   LEA dataletb2f,A1
00030D2E <AmiBlitz3.ab3@20839>   BTST #$F,D2
00030D32 <AmiBlitz3.ab3@20840>    BEQ.w JL_0_C5FC
00030D36 <AmiBlitz3.ab3@20841>   BSR.w pokecode
00030D3A <AmiBlitz3.ab3@20842> BRA.w JL_0_C668
00030D40 <AmiBlitz3.ab3@20845>   LEA dataletb,A0
00030D46 <AmiBlitz3.ab3@20846>   LEA dataletbf,A1
00030D4C <AmiBlitz3.ab3@20847>   TST.w varmode
00030D50 <AmiBlitz3.ab3@20848>    BEQ.w JL_0_C61E
00030D56 <AmiBlitz3.ab3@20849>   LEA dataletbl,A0
00030D5C <AmiBlitz3.ab3@20850>   LEA dataletblf,A1
00030D60 <AmiBlitz3.ab3@20853>   MOVE.w D3,$4(A0)
00030D64 <AmiBlitz3.ab3@20854>   BSR.w pokecode
00030D68 <AmiBlitz3.ab3@20855> BRA.w JL_0_C668
00030D6E <AmiBlitz3.ab3@20858>   LEA dataletw,A0
00030D72 <AmiBlitz3.ab3@20859>   CMP.b #$3,D2
00030D76 <AmiBlitz3.ab3@20860>    BCS.w JL_0_C63E
00030D7C <AmiBlitz3.ab3@20861>   LEA dataletl,A0
00030D80 <AmiBlitz3.ab3@20864>   BTST #$F,D2
00030D84 <AmiBlitz3.ab3@20865>    BEQ.w JL_0_C652
00030D88 <AmiBlitz3.ab3@20866>   MOVE.w $4(A0),D1
00030D8C <AmiBlitz3.ab3@20867>    BSR.w writeword
00030D90 <AmiBlitz3.ab3@20868> BRA.w JL_0_C668
00030D96 <AmiBlitz3.ab3@20871>   TST.w varmode
00030D9A <AmiBlitz3.ab3@20872>    BEQ.w JL_0_C65E
00030D9C <AmiBlitz3.ab3@20873>   ADDQ.w #6,A0
00030DA0 <AmiBlitz3.ab3@20876>   MOVE.w D3,$2(A0)
00030DA2 <AmiBlitz3.ab3@20877>   MOVE.l (A0),D1
00030DA6 <AmiBlitz3.ab3@20878>   BSR.w writelong
00030DAC <AmiBlitz3.ab3@20881>   MOVE.l dataput,D1
00030DB0 <AmiBlitz3.ab3@20882>    BSR.w writelong
00030DB4 <AmiBlitz3.ab3@20883>   CMP.w #$2C,D0
00030DB8 <AmiBlitz3.ab3@20884>    BEQ.w JL_0_C67C
00030DBA <AmiBlitz3.ab3@20885> RTS
00030DC0 <AmiBlitz3.ab3@20888>   JSR get1bytemain
00030DC4 <AmiBlitz3.ab3@20889> BRA.w JL_0_C584
00030DCA <AmiBlitz3.ab3@20893>   MOVE.w stlenget,D1
00030DCE <AmiBlitz3.ab3@20894>    BSR.w writeword
00030DD2 <AmiBlitz3.ab3@20895>   BTST #$F,D2
00030DD6 <AmiBlitz3.ab3@20896>    BNE.w JL_0_C6C0
00030DDC <AmiBlitz3.ab3@20897>   TST.w varmode
00030DE0 <AmiBlitz3.ab3@20898>    BEQ.w JL_0_C6B0
00030DE6 <AmiBlitz3.ab3@20899>   MOVE.w D3,leaampl+2
00030DEC <AmiBlitz3.ab3@20900>   MOVE.l leaampl,D1
00030DF0 <AmiBlitz3.ab3@20901> BRA.w JL_0_C6BC
00030DF6 <AmiBlitz3.ab3@20904>   MOVE.w D3,leaamp+2
00030DFC <AmiBlitz3.ab3@20905>   MOVE.l leaamp,D1
00030E00 <AmiBlitz3.ab3@20908>   BSR.w writelong
00030E04 <AmiBlitz3.ab3@20911>   MOVE.w #$C701,D1
00030E0A <AmiBlitz3.ab3@20912>   MOVE.w varmode,D2
00030E0E <AmiBlitz3.ab3@20913>    BEQ.w JL_0_C6D0
00030E10 <AmiBlitz3.ab3@20914>   SUBQ.w #1,D1
00030E14 <AmiBlitz3.ab3@20917>   BSR.w Atokejsr
00030E1C <AmiBlitz3.ab3@20918>   MOVE.w #$FFFF,lasta6
00030E22 <AmiBlitz3.ab3@20919>   LEA stalign,A0
00030E28 <AmiBlitz3.ab3@20920>   LEA stalignf,A1
00030E2C <AmiBlitz3.ab3@20921>   BSR.w pokecode
00030E30 <AmiBlitz3.ab3@20922> BRA.w JL_0_C668
00030E34 <AmiBlitz3.ab3@20926>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00030E38 <AmiBlitz3.ab3@20927>    BNE.w JL_0_C720
00030E3E <AmiBlitz3.ab3@20928>   JSR get1bytemain
00030E42 <AmiBlitz3.ab3@20929>   CMP.w #$77,D0
00030E46 <AmiBlitz3.ab3@20930>    BEQ.w JL_0_C71C
00030E4A <AmiBlitz3.ab3@20931>   CMP.w #$62,D0
00030E4E <AmiBlitz3.ab3@20932>    BEQ.w JL_0_C718
00030E52 <AmiBlitz3.ab3@20933>   CMP.w #"s",d0
00030E56 <AmiBlitz3.ab3@20934>   BEQ single3
00030E5A <AmiBlitz3.ab3@20935>   CMP.w #"d",d0
00030E5E <AmiBlitz3.ab3@20936>   BEQ double3
00030E62 <AmiBlitz3.ab3@20937>   CMP.w #$6C,D0
00030E66 <AmiBlitz3.ab3@20938>    BNE.w syntaxerr
00030E68 <AmiBlitz3.ab3@20939>   MOVEQ.l #$02,D1
00030E6A <AmiBlitz3.ab3@20940> RTS
00030E72 <AmiBlitz3.ab3@20944>   MOVE.b #1,iee
00030E74 <AmiBlitz3.ab3@20945>   MOVEQ.l #$3,d1
00030E76 <AmiBlitz3.ab3@20946> RTS
00030E7E <AmiBlitz3.ab3@20950>   MOVE.b #1,iee
00030E80 <AmiBlitz3.ab3@20951>   MOVEQ.l #$4,d1
00030E82 <AmiBlitz3.ab3@20952> RTS
00030E84 <AmiBlitz3.ab3@20956>   MOVEQ.l #$00,D1
00030E86 <AmiBlitz3.ab3@20957> RTS
00030E88 <AmiBlitz3.ab3@20961>   MOVEQ.l #$01,D1
00030E8A <AmiBlitz3.ab3@20962> RTS
00030E8C <AmiBlitz3.ab3@20966>   MOVEQ.l #$01,D1
00030E92 <AmiBlitz3.ab3@20967> JMP bakup
00030E96 <AmiBlitz3.ab3@20971>   BSR.w JL_0_C6F0
00030E98 <AmiBlitz3.ab3@20973>   MOVE.w D1,-(A7)
00030E9C <AmiBlitz3.ab3@20974>    BSR.w AJL_0_BF6E
00030EA0 <AmiBlitz3.ab3@20975>   CMP.w #$2C,D0
00030EA4 <AmiBlitz3.ab3@20976>    BNE.w syntaxerr
00030EA6 <AmiBlitz3.ab3@20977>   MOVE.l D3,-(A7)
00030EAA <AmiBlitz3.ab3@20978>    BSR.w AJL_0_BF6E
00030EAC <AmiBlitz3.ab3@20979>   MOVE.l D3,D1
00030EAE <AmiBlitz3.ab3@20980>   MOVE.l (A7)+,D3
00030EB0 <AmiBlitz3.ab3@20981>   MOVE.w (A7)+,D2
00030EB4 <AmiBlitz3.ab3@20982>    BEQ.w JL_0_C774
00030EB8 <AmiBlitz3.ab3@20986>   CMP.w #$1,D2
00030EBC <AmiBlitz3.ab3@20987>    BEQ.w JL_0_C768
00030EBE <AmiBlitz3.ab3@20990>   SWAP D1
00030EC2 <AmiBlitz3.ab3@20991>    BSR.w writeword
00030EC4 <AmiBlitz3.ab3@20992>   SWAP D1
00030EC8 <AmiBlitz3.ab3@20993>    BSR.w writeword
00030ECA <AmiBlitz3.ab3@20994>   SUBQ.l #1,D3
00030ECE <AmiBlitz3.ab3@20995>    BNE.w JL_0_C754
00030ED0 <AmiBlitz3.ab3@20996> RTS
00030ED4 <AmiBlitz3.ab3@20999>    BSR.w writeword
00030ED6 <AmiBlitz3.ab3@21000>   SUBQ.l #1,D3
00030EDA <AmiBlitz3.ab3@21001>    BNE.w JL_0_C768
00030EDC <AmiBlitz3.ab3@21002> RTS
00030EE0 <AmiBlitz3.ab3@21005>    BSR.w writebyte
00030EE2 <AmiBlitz3.ab3@21006>   SUBQ.l #1,D3
00030EE6 <AmiBlitz3.ab3@21007>    BNE.w JL_0_C774
00030EE8 <AmiBlitz3.ab3@21008> RTS
00030EEC <AmiBlitz3.ab3@21012>   BSR.w JL_0_C6F0                                          ;definestorage
00030EEE <AmiBlitz3.ab3@21013>   MOVE.w D1,-(A7)
00030EF2 <AmiBlitz3.ab3@21014>   BSR.w AJL_0_BF6E
00030EF4 <AmiBlitz3.ab3@21015>   MOVE.w (A7)+,D1
00030EF6 <AmiBlitz3.ab3@21016>   LSL.l D1,D3
00030EF8 <AmiBlitz3.ab3@21017>   MOVE.l d3,d0
00030EFC <AmiBlitz3.ab3@21018>   BEQ 'll5
00030EFE <AmiBlitz3.ab3@21019>   MOVEQ #0,d1
00030F04 <AmiBlitz3.ab3@21022>     JSR writebyte
00030F06 <AmiBlitz3.ab3@21023>     SUBQ.l #1,d3
00030F0A <AmiBlitz3.ab3@21024>   BNE.s 'll10
00030F0C <AmiBlitz3.ab3@21027> RTS
00030F0E <AmiBlitz3.ab3@21031>   MOVE.w D0,-(A7)
00030F14 <AmiBlitz3.ab3@21032>   LEA dummyasm,A0
00030F1A <AmiBlitz3.ab3@21033>   MOVEA.l destpointer,A1
00030F24 <AmiBlitz3.ab3@21034>   MOVE.w asmlen2,asmlen
00030F2A <AmiBlitz3.ab3@21035>   JSR insasm
00030F2C <AmiBlitz3.ab3@21036>   MOVE.w (A7)+,D0
00030F2E <AmiBlitz3.ab3@21037> RTS
00030F32 <AmiBlitz3.ab3@21041>   BSR.w JL_0_C6F0
00030F3C <AmiBlitz3.ab3@21043>   MOVE.l #ptr_parameterstore,asmbuff
00030F3E <AmiBlitz3.ab3@21044>   TST.w D1
00030F42 <AmiBlitz3.ab3@21045>    BEQ.w JL_0_C7EE
00030F46 <AmiBlitz3.ab3@21046>   CMP.w #$1,D1
00030F4A <AmiBlitz3.ab3@21047>    BEQ.w JL_0_C844
00030F4E <AmiBlitz3.ab3@21048>   CMP.w #$2,d1
00030F52 <AmiBlitz3.ab3@21049>    BEQ long
00030F56 <AmiBlitz3.ab3@21050>   CMP.w #$3,d1
00030F5A <AmiBlitz3.ab3@21051>    BEQ single
00030F5C <AmiBlitz3.ab3@21052>    MOVEQ.l #$0d,D3
00030F62 <AmiBlitz3.ab3@21058>    JSR asmconst
00030F66 <AmiBlitz3.ab3@21059>    BSR.w JL_0_C796
00030F6A <AmiBlitz3.ab3@21060>    BSR.w writelong
00030F6E <AmiBlitz3.ab3@21061>    BSR   writelong
00030F72 <AmiBlitz3.ab3@21062>   CMP.w #$2C,D0
00030F76 <AmiBlitz3.ab3@21063>    BEQ.w JL_0_C7D8b
00030F78 <AmiBlitz3.ab3@21064> RTS
00030F7A <AmiBlitz3.ab3@21068>   MOVEQ.l #$0B,D3
00030F82 <AmiBlitz3.ab3@21072>   MOVE.b #1,_dcb
00030F88 <AmiBlitz3.ab3@21075>   JSR asmconst
00030F8E <AmiBlitz3.ab3@21076>   CLR.b _dcb
00030F92 <AmiBlitz3.ab3@21077>   BSR.w JL_0_C796
00030F96 <AmiBlitz3.ab3@21078>   BSR writebyte
00030F9A <AmiBlitz3.ab3@21079>   BSR writebyte
00030F9E <AmiBlitz3.ab3@21080>   BSR writebyte                                            ;long
00030FA2 <AmiBlitz3.ab3@21081>   BSR writebyte
00030FA6 <AmiBlitz3.ab3@21082>   CMP.w #$2C,D0
00030FAA <AmiBlitz3.ab3@21083>    BEQ.w JL_0_C7D8
00030FAC <AmiBlitz3.ab3@21084> RTS
00030FAE <AmiBlitz3.ab3@21088>   MOVEQ.l #$0c,D3
00030FB6 <AmiBlitz3.ab3@21092>   MOVE.b #1,_dcb
00030FBC <AmiBlitz3.ab3@21095>   JSR asmconst
00030FC2 <AmiBlitz3.ab3@21096>   CLR.b _dcb
00030FC6 <AmiBlitz3.ab3@21097>   BSR.w JL_0_C796
00030FCA <AmiBlitz3.ab3@21098>   BSR.w writebyte
00030FCE <AmiBlitz3.ab3@21099>   BSR.w writebyte
00030FD2 <AmiBlitz3.ab3@21100>   BSR.w writebyte
00030FD6 <AmiBlitz3.ab3@21101>   BSR.w writebyte
00030FDA <AmiBlitz3.ab3@21102>   CMP.w #$2C,D0
00030FDE <AmiBlitz3.ab3@21103>    BEQ.w JL_0_C7D8a
00030FE0 <AmiBlitz3.ab3@21104> RTS
00030FE2 <AmiBlitz3.ab3@21109>   MOVEQ.l #$11,D3
00030FE8 <AmiBlitz3.ab3@21112>   JSR get1bytemain
00030FEC <AmiBlitz3.ab3@21113>   CMP.w #$22,D0
00030FF0 <AmiBlitz3.ab3@21114>    BNE.w JL_0_C81E
00030FF2 <AmiBlitz3.ab3@21117>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00030FF6 <AmiBlitz3.ab3@21118>    BEQ.w syntaxerr
00030FFA <AmiBlitz3.ab3@21119>   CMP.w #$22,D0
00030FFE <AmiBlitz3.ab3@21120>    BEQ.w JL_0_C816
00031002 <AmiBlitz3.ab3@21121>   CMP.b #"\",d0
00031006 <AmiBlitz3.ab3@21122>    BNE 'n1
0003100A <AmiBlitz3.ab3@21123>   CMP.b #"\",(a5)
0003100E <AmiBlitz3.ab3@21124>    BEQ 'do1
00031010 <AmiBlitz3.ab3@21127>   MOVE.w D0,D1
00031014 <AmiBlitz3.ab3@21128>   BSR.w writebyte
00031018 <AmiBlitz3.ab3@21129> BRA.w JL_0_C7FC
00031020 <AmiBlitz3.ab3@21132>   CMP.l #"__DA",1(a5)
00031024 <AmiBlitz3.ab3@21133>    BNE 'nodate1
0003102C <AmiBlitz3.ab3@21134>   CMP.l #"TE__",5(a5)
00031030 <AmiBlitz3.ab3@21135>    BEQ 'c1
00031038 <AmiBlitz3.ab3@21136>   CMP.l #"TE_G",5(a5)
0003103C <AmiBlitz3.ab3@21137>    BNE 'nodate1
00031044 <AmiBlitz3.ab3@21138>   CMP.l #"ER__",9(a5)
00031048 <AmiBlitz3.ab3@21139>    BNE 'nodate1
0003104E <AmiBlitz3.ab3@21140>   JSR compiledatedc_ger
00031052 <AmiBlitz3.ab3@21141> BRA 'n1
00031058 <AmiBlitz3.ab3@21144>   JSR compiledatedc
0003105C <AmiBlitz3.ab3@21145> BRA 'n1
00031064 <AmiBlitz3.ab3@21148>   CMP.l #"__VE",1(a5)
00031068 <AmiBlitz3.ab3@21149>    BNE 'n1
0003106E <AmiBlitz3.ab3@21150>   CMP.w #"R_",5(a5)
00031072 <AmiBlitz3.ab3@21151>    BNE 'n1
00031078 <AmiBlitz3.ab3@21152>   JSR version_string_dc
0003107C <AmiBlitz3.ab3@21153> BRA.w JL_0_C7FC
00031082 <AmiBlitz3.ab3@21157>   CLR.w instringon
00031088 <AmiBlitz3.ab3@21158>   JSR get1bytemain
0003108C <AmiBlitz3.ab3@21159> BRA.w JL_0_C83A
00031096 <AmiBlitz3.ab3@21164>    MOVE.w oldqflag,instringon
0003109C <AmiBlitz3.ab3@21165>   MOVEA.l lastsourcepos,A5
000310A2 <AmiBlitz3.ab3@21166>    JSR asmconst
000310A8 <AmiBlitz3.ab3@21167>   SUBQ.l #1,destpointer
000310AC <AmiBlitz3.ab3@21168>    BSR.w JL_0_C796
000310B2 <AmiBlitz3.ab3@21169>   ADDQ.l #1,destpointer
000310B6 <AmiBlitz3.ab3@21170>    BSR.w writebyte
000310BA <AmiBlitz3.ab3@21173>   CMP.w #$2C,D0
000310BE <AmiBlitz3.ab3@21174>    BEQ.w JL_0_C7F0
000310C0 <AmiBlitz3.ab3@21175> RTS
000310C2 <AmiBlitz3.ab3@21179>   MOVEQ.l #$10,D3
000310CA <AmiBlitz3.ab3@21185>   MOVE.b #1,_dcb
000310D0 <AmiBlitz3.ab3@21186>   JSR asmconst
000310D6 <AmiBlitz3.ab3@21187>   CLR.b _dcb
000310DA <AmiBlitz3.ab3@21188>   BSR.w JL_0_C796
000310DE <AmiBlitz3.ab3@21189>   BSR.w writebyte
000310E2 <AmiBlitz3.ab3@21190>   BSR.w writebyte
000310E6 <AmiBlitz3.ab3@21191>   CMP.w #$2C,D0
000310EA <AmiBlitz3.ab3@21192>    BEQ.w JL_0_C84A
000310EC <AmiBlitz3.ab3@21193> RTS
000310F2 <AmiBlitz3.ab3@21197>   ADDQ.l #3,destpointer
000310FA <AmiBlitz3.ab3@21198>   ANDI.w #$FFFC,destpointer+2
000310FC <AmiBlitz3.ab3@21199> RTS
00031102 <AmiBlitz3.ab3@21203>   ADDQ.l #7,destpointer
0003110A <AmiBlitz3.ab3@21204>   ANDI.w #$FFF8,destpointer+2
0003110C <AmiBlitz3.ab3@21205> RTS
00031112 <AmiBlitz3.ab3@21209>   ADDQ.l #1,destpointer                                    ;even
0003111A <AmiBlitz3.ab3@21210>   BCLR #$0,destpointer+3
0003111C <AmiBlitz3.ab3@21211> RTS
0003111E <AmiBlitz3.ab3@21214> datasize: Ds.w 1
00031124 <AmiBlitz3.ab3@21224>   TST.b debugmode
00031128 <AmiBlitz3.ab3@21225>   BEQ.w pdt__skip
0003112C <AmiBlitz3.ab3@21226>   MOVE.w #$4420,D0                                         ;'D '
00031130 <AmiBlitz3.ab3@21227>   MOVE.b datasize+1(PC),D0
00031134 <AmiBlitz3.ab3@21228> BRA.w JL_0_C1E6
00031136 <AmiBlitz3.ab3@21231> RTS
0003113A <AmiBlitz3.ab3@21235>   MOVE.w #$FC17,D1
00031140 <AmiBlitz3.ab3@21236>    JSR uselib
0003114A <AmiBlitz3.ab3@21238>    MOVE.w oldqflag,instringon
00031150 <AmiBlitz3.ab3@21239>   MOVEA.l lastsourcepos,A5
00031156 <AmiBlitz3.ab3@21240>    JSR AJL_0_498A
0003115C <AmiBlitz3.ab3@21241>   MOVE.w D1,datasize
00031160 <AmiBlitz3.ab3@21242>   CMP.w #$7,D1
00031164 <AmiBlitz3.ab3@21243>    BEQ.w JL_0_C944
00031166 <AmiBlitz3.ab3@21244>   MOVE.w D1,-(A7)
0003116A <AmiBlitz3.ab3@21247>   BSR.w pdt
0003116C <AmiBlitz3.ab3@21248>   MOVE.w (A7),D2
00031170 <AmiBlitz3.ab3@21249>    BSR.w JL_0_B1D8
00031172 <AmiBlitz3.ab3@21250>   CMP.w (A7),D2                                            ;datamode
00031176 <AmiBlitz3.ab3@21251>    BEQ.w JL_0_C920
00031178 <AmiBlitz3.ab3@21252>   MOVE.w D2,D1
0003117A <AmiBlitz3.ab3@21253>   MOVE.w (A7),D2
0003117E <AmiBlitz3.ab3@21254>   CMP.w #$2,D2
00031182 <AmiBlitz3.ab3@21255>    BNE.w JL_0_C8FE
00031186 <AmiBlitz3.ab3@21256>   CMP.w #$3,D1
0003118A <AmiBlitz3.ab3@21257>    BNE.w baddaterr
00031190 <AmiBlitz3.ab3@21258>   CMP.l #$10000,D3
00031194 <AmiBlitz3.ab3@21259>    BCC.w baddaterr
00031198 <AmiBlitz3.ab3@21260> BRA.w JL_0_C920
0003119C <AmiBlitz3.ab3@21263>   CMP.w #$1,D2
000311A0 <AmiBlitz3.ab3@21264>    BNE.w JL_0_C91C
000311A4 <AmiBlitz3.ab3@21265>   CMP.w #$2,D1
000311A8 <AmiBlitz3.ab3@21266>    BNE.w baddaterr
000311AE <AmiBlitz3.ab3@21267>   CMP.l #$100,D3
000311B2 <AmiBlitz3.ab3@21268>    BCC.w baddaterr
000311B6 <AmiBlitz3.ab3@21269> BRA.w JL_0_C920
000311BA <AmiBlitz3.ab3@21272> BRA.w baddaterr
000311BE <AmiBlitz3.ab3@21275>   CMP.w #$3,D2
000311C2 <AmiBlitz3.ab3@21276>   BCC.w JL_0_C930
000311C6 <AmiBlitz3.ab3@21277>   BSR.w JL_0_C1E6
000311CA <AmiBlitz3.ab3@21278> BRA.w JL_0_C934
000311D0 <AmiBlitz3.ab3@21281>   TST.b iee
000311D4 <AmiBlitz3.ab3@21282>   BEQ 'old
000311D8 <AmiBlitz3.ab3@21283>   CMP.b #5,d2
000311DC <AmiBlitz3.ab3@21284>   BNE 'old
000311E2 <AmiBlitz3.ab3@21286>   TST.b fpu
000311E6 <AmiBlitz3.ab3@21287>   BEQ 'old
000311EA <AmiBlitz3.ab3@21288>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
000311EE <AmiBlitz3.ab3@21292>   BSR.w JL_0_C1DE                                          ;write data >3
000311F4 <AmiBlitz3.ab3@21295>   JSR reget
000311F8 <AmiBlitz3.ab3@21296>   CMP.w #$2C,D0
000311FC <AmiBlitz3.ab3@21297>    BEQ.w JL_0_C8CC
000311FE <AmiBlitz3.ab3@21298>   ADDQ.w #2,A7
00031200 <AmiBlitz3.ab3@21299> RTS
00031204 <AmiBlitz3.ab3@21302>    BSR.w pdt
0003120A <AmiBlitz3.ab3@21303>   MOVE.l data2,-(A7)
0003120E <AmiBlitz3.ab3@21304>    BSR.w JL_0_C1DE
00031210 <AmiBlitz3.ab3@21305>   MOVEQ.l #$00,D1
00031216 <AmiBlitz3.ab3@21306>    JSR get1bytemain
0003121A <AmiBlitz3.ab3@21307>    BEQ.w JL_0_C9A6
0003121E <AmiBlitz3.ab3@21308>   CMP.w #$22,D0
00031222 <AmiBlitz3.ab3@21309>    BEQ.w JL_0_C988
00031226 <AmiBlitz3.ab3@21310>   CMP.w #$2C,D0
0003122A <AmiBlitz3.ab3@21311>    BEQ.w JL_0_C9A6
0003122E <AmiBlitz3.ab3@21314>    BSR.w JL_0_C210
00031230 <AmiBlitz3.ab3@21315>   ADDQ.w #1,D1
00031236 <AmiBlitz3.ab3@21316>    JSR getchar
00031238 <AmiBlitz3.ab3@21317>   TST.w D0
0003123C <AmiBlitz3.ab3@21318>    BEQ.w JL_0_C9A6
00031240 <AmiBlitz3.ab3@21319>   CMP.w #$2C,D0
00031244 <AmiBlitz3.ab3@21320>    BEQ.w JL_0_C9A6
00031248 <AmiBlitz3.ab3@21321> BRA.w JL_0_C96C
0003124A <AmiBlitz3.ab3@21325>    MOVEQ #0,d0
0003124C <AmiBlitz3.ab3@21326>    MOVE.b (a5)+,d0
00031250 <AmiBlitz3.ab3@21327>    BEQ.w notqerr2
00031254 <AmiBlitz3.ab3@21328>   CMP.w #$22,D0
00031258 <AmiBlitz3.ab3@21329>    BEQ.w JL_0_C9A2
0003125C <AmiBlitz3.ab3@21330>    BSR.w JL_0_C210
0003125E <AmiBlitz3.ab3@21331>   ADDQ.w #1,D1
00031262 <AmiBlitz3.ab3@21332> BRA.w JL_0_C988
00031268 <AmiBlitz3.ab3@21333> notqerr2 JMP notqerr
0003126E <AmiBlitz3.ab3@21335>   CLR.w instringon
00031274 <AmiBlitz3.ab3@21336>   JSR get1bytemain
00031276 <AmiBlitz3.ab3@21339>   MOVEA.l (A7)+,A0
0003127C <AmiBlitz3.ab3@21340>   MOVE.w dontwrite,D2
00031280 <AmiBlitz3.ab3@21341>    BNE.w JL_0_C9B4
00031282 <AmiBlitz3.ab3@21342>   MOVE.l D1,(A0)
00031288 <AmiBlitz3.ab3@21345>   ADDQ.l #1,data2
00031290 <AmiBlitz3.ab3@21346>   BCLR #$0,data2+3
00031294 <AmiBlitz3.ab3@21347>   CMP.w #$2C,D0
00031298 <AmiBlitz3.ab3@21348>    BEQ.w JL_0_C944
0003129A <AmiBlitz3.ab3@21349> RTS
000312A0 <AmiBlitz3.ab3@21353> JMP vardeclareerr
000312A6 <AmiBlitz3.ab3@21356>   MOVE.w proceduremode,D1                                  ;doshared
000312AA <AmiBlitz3.ab3@21358>   BNE.w 'l1
000312AC <AmiBlitz3.ab3@21359>   MOVE.w D1,-(A7)
000312B2 <AmiBlitz3.ab3@21360>   CLR.w proceduremode
000312B8 <AmiBlitz3.ab3@21363>   LEA varbase,a2
000312BC <AmiBlitz3.ab3@21364>   BSR.w getparameter
000312BE <AmiBlitz3.ab3@21365>   MOVE.w d2,-(a7)
000312C4 <AmiBlitz3.ab3@21366>    JSR findvariable
000312C8 <AmiBlitz3.ab3@21367>    BEQ 'checkdim
000312CE <AmiBlitz3.ab3@21368>    LEA sharebase,a2
000312D0 <AmiBlitz3.ab3@21369>    MOVEQ #$f+4,d7
000312D4 <AmiBlitz3.ab3@21370>    BSR.w findlab                                         ;find var
000312D8 <AmiBlitz3.ab3@21371>    BEQ.b dupsherr
000312DC <AmiBlitz3.ab3@21372>    BSR addlabel
000312E0 <AmiBlitz3.ab3@21373>    CMP.b #".",d0
000312E4 <AmiBlitz3.ab3@21374>    BNE JUMP_vardeclareerr
000312E6 <AmiBlitz3.ab3@21375>    MOVE.l a2,a3
000312EC <AmiBlitz3.ab3@21376>    JSR JL_0_8EB8b
000312EE <AmiBlitz3.ab3@21407>   MOVE.w (a7)+,d2
000312F2 <AmiBlitz3.ab3@21408>    CMP.b #",",d0
000312F6 <AmiBlitz3.ab3@21409>    BNE 'ret
000312FC <AmiBlitz3.ab3@21410>    JSR get1bytemain
00031300 <AmiBlitz3.ab3@21411> BRA 'again2
00031306 <AmiBlitz3.ab3@21414>   MOVE.w (A7)+,proceduremode
00031308 <AmiBlitz3.ab3@21415> RTS
0003130E <AmiBlitz3.ab3@21422>    CMP.w #2,6(a2)
00031312 <AmiBlitz3.ab3@21423>    BEQ 'do
00031318 <AmiBlitz3.ab3@21424>    CMP.w #$102,6(a2)
0003131C <AmiBlitz3.ab3@21425>    BEQ 'do
00031322 <AmiBlitz3.ab3@21426> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031328 <AmiBlitz3.ab3@21429>   LEA varbase,a0
0003132A <AmiBlitz3.ab3@21432>   MOVE.l (A0),D0                                           ;find label
0003132E <AmiBlitz3.ab3@21433>    BEQ.b 'z1
00031330 <AmiBlitz3.ab3@21434>    CMP.l d0,a2
00031334 <AmiBlitz3.ab3@21435>    BEQ 'z1
00031336 <AmiBlitz3.ab3@21436>    MOVE.l d0,a0
0003133A <AmiBlitz3.ab3@21437> BRA 'm1
0003133C <AmiBlitz3.ab3@21440>   MOVE.l (a2),d1
0003133E <AmiBlitz3.ab3@21441>     MOVE.l d1,(a0)
00031340 <AmiBlitz3.ab3@21442>     CLR.l (a2)
00031346 <AmiBlitz3.ab3@21443>     LEA sharebase,a0
00031348 <AmiBlitz3.ab3@21444>     MOVE.l (a0),(a2)
0003134A <AmiBlitz3.ab3@21445>     MOVE.l a2,(a0)
00031350 <AmiBlitz3.ab3@21446>     JSR get1bytemain
00031356 <AmiBlitz3.ab3@21447>     JSR get1bytemain
0003135A <AmiBlitz3.ab3@21448> BRA 'domore
00031362 <AmiBlitz3.ab3@21451>   MOVE.b #1,nowdeclare
00031364 <AmiBlitz3.ab3@21452>   MOVE.w D1,-(A7)
0003136A <AmiBlitz3.ab3@21453>   CLR.w proceduremode
0003136E <AmiBlitz3.ab3@21456>    BSR.w getparameter
00031370 <AmiBlitz3.ab3@21457>   MOVE.w D2,-(A7)
00031376 <AmiBlitz3.ab3@21458>   LEA firstglob,A2
0003137A <AmiBlitz3.ab3@21459>    BSR.w findvariable2
0003137E <AmiBlitz3.ab3@21460>    BNE.b JL_0_CA06
00031384 <AmiBlitz3.ab3@21463>   MOVE.b flagmask+1,D1
00031388 <AmiBlitz3.ab3@21464>   MOVE.b $7(A2),D3
0003138A <AmiBlitz3.ab3@21465>   EOR.b D3,D1
0003138E <AmiBlitz3.ab3@21466>    BEQ.w dupsherr
00031392 <AmiBlitz3.ab3@21467>    BSR.w findlab
00031396 <AmiBlitz3.ab3@21468>    BEQ.b JL_0_C9F0
0003139A <AmiBlitz3.ab3@21471>    BSR.w addlabel
0003139C <AmiBlitz3.ab3@21472>   MOVE.w (A7)+,D2
0003139E <AmiBlitz3.ab3@21473>   MOVE.l A2,-(A7)
000313A2 <AmiBlitz3.ab3@21474>    BSR.w JL_0_8E3C
000313A4 <AmiBlitz3.ab3@21475>   MOVEA.l (A7)+,A2
000313A6 <AmiBlitz3.ab3@21476>   MOVEQ.l #$04,D1
000313A8 <AmiBlitz3.ab3@21477>   ADDQ.w #4,A2
000313AA <AmiBlitz3.ab3@21478>   ADDQ.w #4,A3
000313AC <AmiBlitz3.ab3@21481>     MOVE.w (A3)+,(A2)+
000313B0 <AmiBlitz3.ab3@21482>   DBF D1,JL_0_CA1A
000313B8 <AmiBlitz3.ab3@21484>   BTST #$1,flagmask+1
000313BC <AmiBlitz3.ab3@21485>    BEQ.w JL_0_CA3C
000313C2 <AmiBlitz3.ab3@21486>    JSR get1bytemain
000313C6 <AmiBlitz3.ab3@21487>   CMP.w #$29,D0
000313CA <AmiBlitz3.ab3@21488>    BNE.w syntaxerrc
000313D0 <AmiBlitz3.ab3@21489>    JSR get1bytemain
000313D4 <AmiBlitz3.ab3@21492>    CMP.w #$2C,D0
000313D8 <AmiBlitz3.ab3@21493>    BNE.w JL_0_CA4C
000313DE <AmiBlitz3.ab3@21494>    JSR get1bytemain
000313E2 <AmiBlitz3.ab3@21495> BRA.w JL_0_C9DE
000313E8 <AmiBlitz3.ab3@21498>   MOVE.w (A7)+,proceduremode
000313EA <AmiBlitz3.ab3@21499> RTS
000313F0 <AmiBlitz3.ab3@21501> syntaxerrc JMP syntaxerr
000313F4 <AmiBlitz3.ab3@21504>    BSR.w JL_0_C05C
000313FA <AmiBlitz3.ab3@21505>    JSR check_incdir                                        ; ergebnis in d2
00031400 <AmiBlitz3.ab3@21507>    LEA ptr_parameterstore,a1
00031402 <AmiBlitz3.ab3@21508>    MOVE.l d2,-(a7)
00031408 <AmiBlitz3.ab3@21509>    LEA includetemp,a0                                      ; filename in includetemp packen
0003140A <AmiBlitz3.ab3@21512>      MOVE.b (a1)+,(a0)+
0003140E <AmiBlitz3.ab3@21513>    BNE 'l4
00031414 <AmiBlitz3.ab3@21515>    LEA ptr_parameterstore,a1
00031416 <AmiBlitz3.ab3@21516>    MOVE.l a1,a0
00031418 <AmiBlitz3.ab3@21519>     TST.b (a0)+
0003141C <AmiBlitz3.ab3@21520>    BNE 'l1
0003141E <AmiBlitz3.ab3@21523>      MOVE.b -(a0),d0
00031422 <AmiBlitz3.ab3@21524>      CMP.b #":",d0
00031426 <AmiBlitz3.ab3@21525>       BEQ 'out
0003142A <AmiBlitz3.ab3@21526>      CMP.b #"/",d0
0003142E <AmiBlitz3.ab3@21527>       BEQ 'out
00031430 <AmiBlitz3.ab3@21528>      CMP.l a1,a0
00031434 <AmiBlitz3.ab3@21529>       BEQ 'out2
00031438 <AmiBlitz3.ab3@21530> BRA 'l2
0003143A <AmiBlitz3.ab3@21533>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
0003143C <AmiBlitz3.ab3@21536>    MOVEQ.l #-$01,D2
0003143E <AmiBlitz3.ab3@21539>      ADDQ.w #1,D2
00031440 <AmiBlitz3.ab3@21540>      MOVE.b (a0)+,(a1)+
00031444 <AmiBlitz3.ab3@21541>    BNE 'l3
00031446 <AmiBlitz3.ab3@21542>    CLR.b (a1)+
0003144C <AmiBlitz3.ab3@21544>    LEA ptr_parameterstore,a1
00031450 <AmiBlitz3.ab3@21545>    BSR.w findxinc                                         ;find include
00031454 <AmiBlitz3.ab3@21546>     BEQ.w 'outb
00031456 <AmiBlitz3.ab3@21548>    MOVE.w D2,-(A7)
0003145A <AmiBlitz3.ab3@21549>    BSR.w addlabel
0003145C <AmiBlitz3.ab3@21550>    MOVE.w (A7)+,D2
00031462 <AmiBlitz3.ab3@21552>    LEA ptr_parameterstore,a1
00031468 <AmiBlitz3.ab3@21553>    LEA includetemp,a0                                      ; namen in includetemp schreiben
0003146A <AmiBlitz3.ab3@21556>     MOVE.b (a0)+,(a1)+
0003146E <AmiBlitz3.ab3@21557>    BNE 'l4b
00031470 <AmiBlitz3.ab3@21559>    MOVE.l (a7)+,d2
00031476 <AmiBlitz3.ab3@21560>    LEA ptr_parameterstore,a1
0003147A <AmiBlitz3.ab3@21561> BRA.w JL_0_CB18
00031480 <AmiBlitz3.ab3@21564>    LEA ptr_parameterstore,a1
00031486 <AmiBlitz3.ab3@21565>    LEA includetemp,a0
00031488 <AmiBlitz3.ab3@21568>     MOVE.b (a0)+,(a1)+
0003148C <AmiBlitz3.ab3@21569>    BNE 'l4b2
0003148E <AmiBlitz3.ab3@21571>    MOVE.l (a7)+,d2
00031494 <AmiBlitz3.ab3@21572>    LEA ptr_parameterstore,a1
00031496 <AmiBlitz3.ab3@21575> RTS
0003149A <AmiBlitz3.ab3@21579>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000314A0 <AmiBlitz3.ab3@21581>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000314A6 <AmiBlitz3.ab3@21583>   MOVEA.l _dosbase,A6
000314A8 <AmiBlitz3.ab3@21584>   MOVE.l D0,D7                                                 ; store Lockpointer
000314AC <AmiBlitz3.ab3@21585>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000314AE <AmiBlitz3.ab3@21586>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
000314B4 <AmiBlitz3.ab3@21587>   MOVE.l ptr_macrobuffer_begin,D2
000314B8 <AmiBlitz3.ab3@21588>    JSR _Examine(A6)
000314BE <AmiBlitz3.ab3@21589>   MOVEA.l ptr_macrobuffer_begin,A0
000314C2 <AmiBlitz3.ab3@21590>   MOVE.l $4(A0),D0
000314C6 <AmiBlitz3.ab3@21591>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
000314CA <AmiBlitz3.ab3@21592>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
000314CC <AmiBlitz3.ab3@21593>   MOVE.l D7,D1                                                 ; begin unlock the file
000314D0 <AmiBlitz3.ab3@21594>    JSR _UnLock(A6)
000314D6 <AmiBlitz3.ab3@21596>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
000314DC <AmiBlitz3.ab3@21597>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
000314E0 <AmiBlitz3.ab3@21598>    JSR _Open(A6)
000314E2 <AmiBlitz3.ab3@21599>   MOVE.l D0,D7
000314E6 <AmiBlitz3.ab3@21600>    BEQ.w error_cant_open_include
000314EC <AmiBlitz3.ab3@21601>   MOVE.l destpointer,D0
000314EE <AmiBlitz3.ab3@21602>   ADD.l D3,D0
000314F4 <AmiBlitz3.ab3@21603>   CMP.l destbufferend,D0
000314F8 <AmiBlitz3.ab3@21604>    BHI.w JL_0_CAF6
000314FE <AmiBlitz3.ab3@21605>   MOVE.l destpointer,D2
00031500 <AmiBlitz3.ab3@21606>   MOVE.l D7,D1
00031504 <AmiBlitz3.ab3@21607>    JSR _Read(A6)
0003150A <AmiBlitz3.ab3@21608>   CMP.l #$FFFFFFFF,D0
0003150E <AmiBlitz3.ab3@21609>    BEQ.w error_reading_file
00031514 <AmiBlitz3.ab3@21610>   ADD.l D0,destpointer
00031518 <AmiBlitz3.ab3@21611> BRA.w JL_0_CB04
00031520 <AmiBlitz3.ab3@21614>   MOVE.w #$FFFF,dontwrite
00031526 <AmiBlitz3.ab3@21615>   MOVE.l D0,destpointer
00031528 <AmiBlitz3.ab3@21618>   MOVE.l D7,D1
0003152C <AmiBlitz3.ab3@21619> JMP _Close(A6)
00031532 <AmiBlitz3.ab3@21623> JMP illdirerr
00031538 <AmiBlitz3.ab3@21626>   TST.w dirmode                                            ;include  open
0003153C <AmiBlitz3.ab3@21627>    BNE.w JUMP_illdirerr
00031540 <AmiBlitz3.ab3@21628>   BSR.w JL_0_C05C
00031546 <AmiBlitz3.ab3@21629>   JSR check_incdir
0003154A <AmiBlitz3.ab3@21632>   BSR.w findconstant
0003154E <AmiBlitz3.ab3@21633>    BEQ.w alincerr
00031554 <AmiBlitz3.ab3@21635>   LEA constantbase,A2
00031558 <AmiBlitz3.ab3@21636>   BSR.w addhere2
0003155C <AmiBlitz3.ab3@21637>   CLR.w $C(A2)
00031560 <AmiBlitz3.ab3@21638>   CLR.l $4(A2)
00031566 <AmiBlitz3.ab3@21640>   MOVE.l #ptr_parameterstore,D1
00031568 <AmiBlitz3.ab3@21641>   MOVE.l d1,a0
0003156E <AmiBlitz3.ab3@21642>   LEA includetemp2,a1
00031570 <AmiBlitz3.ab3@21645>     MOVE.b (a0)+,(a1)+
00031574 <AmiBlitz3.ab3@21646>   BNE 'l1
0003157A <AmiBlitz3.ab3@21647>   JSR save_includename
00031584 <AmiBlitz3.ab3@21648>   MOVE.l #0,include_process
0003158C <AmiBlitz3.ab3@21650>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031590 <AmiBlitz3.ab3@21651>   BEQ 'ok
00031598 <AmiBlitz3.ab3@21652>   CMP.l #$61623300,-4(a0)                                  ;.ab3
0003159C <AmiBlitz3.ab3@21653>   BEQ 'ok_tokenize
000315A4 <AmiBlitz3.ab3@21654>   CMP.l #$61623200,-4(a0)                                  ;.ab2
000315A8 <AmiBlitz3.ab3@21655>   BEQ 'ok_tokenize
000315B0 <AmiBlitz3.ab3@21656>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
000315B4 <AmiBlitz3.ab3@21657>   BEQ 'ok
000315BA <AmiBlitz3.ab3@21658> JMP errortoken                                             ;can only include
000315C4 <AmiBlitz3.ab3@21661>    MOVE.l #-1,include_process                              ; must tokenize the include
000315CA <AmiBlitz3.ab3@21664>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000315D0 <AmiBlitz3.ab3@21665>   MOVEA.l _dosbase,A6
000315D4 <AmiBlitz3.ab3@21666>   JSR _Open(A6)
000315D8 <AmiBlitz3.ab3@21667>   MOVE.l D0,$8(A2)
000315DC <AmiBlitz3.ab3@21668>   BEQ.w error_cant_open_include
000315E2 <AmiBlitz3.ab3@21669>   CLR.l includeline
000315E6 <AmiBlitz3.ab3@21670>   MOVE.l 8(a2),d1
000315E8 <AmiBlitz3.ab3@21671>   MOVE.l d3,-(a7)
000315EA <AmiBlitz3.ab3@21672>   MOVEQ #0,d2
000315EC <AmiBlitz3.ab3@21673>   MOVEQ #1,d3
000315F0 <AmiBlitz3.ab3@21674>   JSR _Seek(a6)                                            ; -66
000315F4 <AmiBlitz3.ab3@21675>   MOVE.l 8(a2),d1
000315F6 <AmiBlitz3.ab3@21676>   MOVEQ #0,d2
000315F8 <AmiBlitz3.ab3@21677>   MOVEQ #-1,d3
000315FC <AmiBlitz3.ab3@21678>   JSR _Seek(a6)                                            ; -66
000315FE <AmiBlitz3.ab3@21679>   MOVE.l (a7)+,d3
00031600 <AmiBlitz3.ab3@21680>   ADDQ.l #4,d0
00031606 <AmiBlitz3.ab3@21682>   MOVE.l #$10000,D1
0003160C <AmiBlitz3.ab3@21683>   MOVEA.l _execbase,A6
00031610 <AmiBlitz3.ab3@21686>   JSR _AllocVec(a6)
00031614 <AmiBlitz3.ab3@21688>   MOVE.l D0,$4(A2)
00031618 <AmiBlitz3.ab3@21689>   MOVE.l D0,$E(A2)
0003161A <AmiBlitz3.ab3@21690>   MOVEA.l D0,A5
00031620 <AmiBlitz3.ab3@21697>   ADDQ.w #1,ininclude                                      ;enter include
00031626 <AmiBlitz3.ab3@21700>   LEA _include,a0
0003162A <AmiBlitz3.ab3@21701>   MOVEM.l a0-a6/d0-d7,-(a7)
00031630 <AmiBlitz3.ab3@21702>   LEA ptr_parameterstore,a1
00031632 <AmiBlitz3.ab3@21705>     MOVE.b (a0)+,(a1)+
00031636 <AmiBlitz3.ab3@21706>   BNE 'l1b
00031638 <AmiBlitz3.ab3@21708>   MOVEQ #9,d2
0003163E <AmiBlitz3.ab3@21709>   JSR findlabel2
00031642 <AmiBlitz3.ab3@21710>   BNE 'd
0003164A <AmiBlitz3.ab3@21711>   MOVE.l #1,8(a2)
0003164E <AmiBlitz3.ab3@21712>   MOVEM.l (a7)+,a0-a6/d0-d7
00031652 <AmiBlitz3.ab3@21713> BRA 'd2
00031658 <AmiBlitz3.ab3@21716>   JSR addlabelhash
00031660 <AmiBlitz3.ab3@21717>   MOVE.l #$1,$4(A2)
00031668 <AmiBlitz3.ab3@21718>   MOVE.l #1,8(a2)
0003166C <AmiBlitz3.ab3@21719>   MOVEM.l (a7)+,a0-a6/d0-d7
00031672 <AmiBlitz3.ab3@21722>   LEA inctab,a0
00031674 <AmiBlitz3.ab3@21723>   MOVEQ #0,d1
0003167A <AmiBlitz3.ab3@21724>   MOVE.w ininclude,d1
0003167E <AmiBlitz3.ab3@21725>   CLR.l $0(a0,d1*4)
00031684 <AmiBlitz3.ab3@21726>   MOVEA.l passstack,A7
0003168A <AmiBlitz3.ab3@21727> JMP AJL_0_413A
00031690 <AmiBlitz3.ab3@21729> JUMP_dupmacerr JMP dupmacerr
00031692 <AmiBlitz3.ab3@21731> coolnest:   Ds.w 1
00031696 <AmiBlitz3.ab3@21732> macline:    Ds.l 1
000316A0 <AmiBlitz3.ab3@21736>   MOVE.l linenumat,macline
000316A4 <AmiBlitz3.ab3@21737>    BSR.w makename2
000316A8 <AmiBlitz3.ab3@21738>    BEQ.w JUMP_syntaxerr
000316AE <AmiBlitz3.ab3@21740>    CLR.b thenmode
000316B8 <AmiBlitz3.ab3@21742>    MOVE.w oldqflag,instringon
000316BE <AmiBlitz3.ab3@21743>   MOVEA.l lastsourcepos,A5
000316C2 <AmiBlitz3.ab3@21744>    BSR.w findmac
000316C6 <AmiBlitz3.ab3@21745>    BEQ.w JUMP_dupmacerr
000316CA <AmiBlitz3.ab3@21746>    BSR.w addlabel
000316CE <AmiBlitz3.ab3@21747>   CLR.w $A(A2)
000316D4 <AmiBlitz3.ab3@21748>   MOVEA.l ptr_macrobuffer_begin,A0
000316D6 <AmiBlitz3.ab3@21749>   MOVEQ.l #$00,D2
000316DC <AmiBlitz3.ab3@21750>   CLR.w coolnest
000316DE <AmiBlitz3.ab3@21753>   MOVE.b (a5),d0
000316E2 <AmiBlitz3.ab3@21754>      BEQ 'l3
000316E6 <AmiBlitz3.ab3@21755>      CMP.b #" ",d0
000316EA <AmiBlitz3.ab3@21756>       BNE 'l2                                              ;space macro
000316EC <AmiBlitz3.ab3@21757>       ADDQ.l #1,a5
000316F0 <AmiBlitz3.ab3@21758> BRA 'l1
000316F4 <AmiBlitz3.ab3@21761>    CMP.b #";",d0
000316F8 <AmiBlitz3.ab3@21762>       BNE 'l3
000316FA <AmiBlitz3.ab3@21765>    MOVE.b (a5),d0
000316FE <AmiBlitz3.ab3@21766>       BEQ 'l5
00031702 <AmiBlitz3.ab3@21767>       BSR.w JL_0_CC98                                      ;add comment
00031704 <AmiBlitz3.ab3@21768>       ADDQ.l #1,a5
00031708 <AmiBlitz3.ab3@21769> BRA 'l4
0003170C <AmiBlitz3.ab3@21772>    MOVE.b #":",d0
00031710 <AmiBlitz3.ab3@21773>       BSR.w JL_0_CC98
00031714 <AmiBlitz3.ab3@21774>       MOVE.b #"@",d0
00031718 <AmiBlitz3.ab3@21775>       BSR.w JL_0_CC98
00031720 <AmiBlitz3.ab3@21778>    MOVE.b #0,temp
00031728 <AmiBlitz3.ab3@21779>       MOVE.b #0,thenmode
0003172E <AmiBlitz3.ab3@21782>   JSR getcharb
00031730 <AmiBlitz3.ab3@21783>   TST.w D0
00031734 <AmiBlitz3.ab3@21784>    BNE.w JL_0_CBDE
00031738 <AmiBlitz3.ab3@21785>   MOVEM.l D2/A0/A2,-(A7)
0003173E <AmiBlitz3.ab3@21786>   CMP.w #"@@",-3(a5)
00031742 <AmiBlitz3.ab3@21787>   BNE 'l2a
00031748 <AmiBlitz3.ab3@21788>   JSR nextline
0003174C <AmiBlitz3.ab3@21789>   BEQ.w JUMP_macenderr
00031750 <AmiBlitz3.ab3@21790>   MOVEM.l (A7)+,D2/A0/A2
00031754 <AmiBlitz3.ab3@21791> BRA.w JL_0_CBB6
0003175A <AmiBlitz3.ab3@21794>    JSR nextline
0003175E <AmiBlitz3.ab3@21795>    BEQ.w JUMP_macenderr
00031762 <AmiBlitz3.ab3@21796>   MOVEM.l (A7)+,D2/A0/A2
00031764 <AmiBlitz3.ab3@21797>   TST.w D2
00031768 <AmiBlitz3.ab3@21798>    BEQ.w JL_0_CBB6
0003176A <AmiBlitz3.ab3@21801>   MOVE.b (a5),d0
0003176E <AmiBlitz3.ab3@21802>       CMP.b #" ",d0
00031772 <AmiBlitz3.ab3@21803>       BNE 'l1
00031774 <AmiBlitz3.ab3@21804>       ADDQ.w #1,a5
00031778 <AmiBlitz3.ab3@21805> BRA 'l2
0003177E <AmiBlitz3.ab3@21808>   TST.b thenmode
00031782 <AmiBlitz3.ab3@21809>      BEQ 'l3
00031784 <AmiBlitz3.ab3@21810>      MOVEQ #":",d0
00031788 <AmiBlitz3.ab3@21811>      BSR.w JL_0_CC98
0003178C <AmiBlitz3.ab3@21812>      MOVE.w #-$7FFE,D0                                     ;write end if
00031790 <AmiBlitz3.ab3@21813>      BSR macputw
00031794 <AmiBlitz3.ab3@21814>      MOVE.w #$800b,d0
00031798 <AmiBlitz3.ab3@21815>      BSR.w macputw
0003179E <AmiBlitz3.ab3@21816>      CLR.b thenmode
000317A0 <AmiBlitz3.ab3@21819>    MOVEQ.l #$3A,D0
000317A8 <AmiBlitz3.ab3@21820>      MOVE.b #1,temp
000317AC <AmiBlitz3.ab3@21822> BRA.w JL_0_CC2A
000317B0 <AmiBlitz3.ab3@21826>   BPL.w JL_0_CC2A
000317B4 <AmiBlitz3.ab3@21827>   CMP.w #-$7FF3,D0                                         ;macro ?
000317B8 <AmiBlitz3.ab3@21828>    BNE.w JL_0_CBF4
000317BE <AmiBlitz3.ab3@21829>   ADDQ.w #1,coolnest
000317C2 <AmiBlitz3.ab3@21830> BRA.w JL_0_CC22
000317C8 <AmiBlitz3.ab3@21832> JUMP_macnesterr JMP macnesterr
000317CC <AmiBlitz3.ab3@21835>   CMP.w #$80d7,d0                                          ;object ?
000317D0 <AmiBlitz3.ab3@21836>     BNE 'l1x
000317D6 <AmiBlitz3.ab3@21837>     TST.b objectcount
000317DA <AmiBlitz3.ab3@21838>     BNE JUMP_macnesterr
000317DE <AmiBlitz3.ab3@21841>   CMP.w #$8021,d0
000317E2 <AmiBlitz3.ab3@21842>     BNE 'nothen
000317EA <AmiBlitz3.ab3@21843>     MOVE.b #1,thenmode
000317F0 <AmiBlitz3.ab3@21846>   TST.b thenmode
000317F4 <AmiBlitz3.ab3@21847>         BEQ 'l1
000317F8 <AmiBlitz3.ab3@21848>    CMP.w #$8002,d0                                         ;end if
000317FC <AmiBlitz3.ab3@21849>    BNE 'l1
00031800 <AmiBlitz3.ab3@21850>    MOVEM.l d0/a5,-(a7)
00031806 <AmiBlitz3.ab3@21851>    JSR get1bytemain
00031808 <AmiBlitz3.ab3@21852>    MOVE.w d0,d1
0003180C <AmiBlitz3.ab3@21853>    MOVEM.l (a7)+,a5/d0
00031810 <AmiBlitz3.ab3@21854>    CMP.w #$800b,d1
00031814 <AmiBlitz3.ab3@21855>    BNE 'l1
0003181A <AmiBlitz3.ab3@21856>    CLR.b thenmode
0003181E <AmiBlitz3.ab3@21859>    CMP.w #-$7FFE,D0                                        ;end ?
00031822 <AmiBlitz3.ab3@21860>    BNE.w JL_0_CC22
00031824 <AmiBlitz3.ab3@21861>    MOVE.l a5,-(a7)
0003182A <AmiBlitz3.ab3@21862>    JSR get1bytemain
0003182C <AmiBlitz3.ab3@21863>    MOVE.l (a7)+,a5
0003182E <AmiBlitz3.ab3@21864>    TST.w d0
00031832 <AmiBlitz3.ab3@21865>    BEQ 'doend
00031836 <AmiBlitz3.ab3@21866>    CMP.w #":",d0
0003183A <AmiBlitz3.ab3@21867>    BEQ 'doend
0003183E <AmiBlitz3.ab3@21868>    CMP.w #";",d0
00031842 <AmiBlitz3.ab3@21869>    BEQ 'doend
00031844 <AmiBlitz3.ab3@21870>    MOVE.l a5,-(a7)
0003184A <AmiBlitz3.ab3@21871>    JSR get1bytemain
0003184E <AmiBlitz3.ab3@21872>    MOVE.l -1(a5),d0
00031850 <AmiBlitz3.ab3@21873>    MOVE.l (a7)+,a5
00031856 <AmiBlitz3.ab3@21874>    CMP.l #"noa7",d0
0003185A <AmiBlitz3.ab3@21875>    BEQ 'doend
0003185E <AmiBlitz3.ab3@21876> BRA 'morechar
00031862 <AmiBlitz3.ab3@21879>   MOVE.w #$8002,D0
00031866 <AmiBlitz3.ab3@21880>    BSR.w macputw
0003186A <AmiBlitz3.ab3@21881> BRA JL_0_CBB6
00031870 <AmiBlitz3.ab3@21884>   JSR get1bytemain
00031874 <AmiBlitz3.ab3@21885>    CMP.w #-$7FF3,D0                                        ;end macro
00031878 <AmiBlitz3.ab3@21886>    BEQ.w 'lo1
0003187C <AmiBlitz3.ab3@21887>   CMP.w #$80d7,d0                                          ;end object
00031880 <AmiBlitz3.ab3@21888>   BNE JL_0_CC12
00031886 <AmiBlitz3.ab3@21889>   SUBQ.b #1,objectcount
0003188C <AmiBlitz3.ab3@21890>   TST.b developobject
00031890 <AmiBlitz3.ab3@21891>   BEQ 'lo1
00031894 <AmiBlitz3.ab3@21892>   BSR skiprest
00031896 <AmiBlitz3.ab3@21893> RTS
0003189C <AmiBlitz3.ab3@21896>   SUBQ.w #1,coolnest
000318A0 <AmiBlitz3.ab3@21897>    BMI.w JL_0_CC32
000318A2 <AmiBlitz3.ab3@21900>   MOVE.w D0,-(A7)
000318A6 <AmiBlitz3.ab3@21901>   MOVE.w #$8002,D0
000318AA <AmiBlitz3.ab3@21902>    BSR.w macputw
000318AC <AmiBlitz3.ab3@21903>   MOVE.w (A7)+,D0
000318B0 <AmiBlitz3.ab3@21904> BRA.w JL_0_CC22
000318B4 <AmiBlitz3.ab3@21907>   BSR.w macputw
000318B8 <AmiBlitz3.ab3@21908> BRA.w JL_0_CBB6
000318BE <AmiBlitz3.ab3@21910> JUMP_macenderr JMP macenderr
000318C4 <AmiBlitz3.ab3@21913>     CMP.w #"@@",-1(a5)                                     ;merge lines
000318C8 <AmiBlitz3.ab3@21914>     BNE 'no
000318CC <AmiBlitz3.ab3@21915>      MOVEM.l D2/A0/A2,-(A7)
000318D2 <AmiBlitz3.ab3@21916>    JSR nextline
000318D6 <AmiBlitz3.ab3@21917>    BEQ.w JUMP_macenderr
000318DA <AmiBlitz3.ab3@21918>   MOVEM.l (A7)+,D2/A0/A2
000318DC <AmiBlitz3.ab3@21919>     TST.w D2
000318E0 <AmiBlitz3.ab3@21920>    BEQ.w JL_0_CBB6
000318E4 <AmiBlitz3.ab3@21921> BRA JL_0_CBB6
000318E8 <AmiBlitz3.ab3@21925>   BSR.w JL_0_CC98
000318EC <AmiBlitz3.ab3@21926> BRA.w JL_0_CBB6
000318EE <AmiBlitz3.ab3@21929>   ADDQ.w #4,A7
000318F0 <AmiBlitz3.ab3@21930>   MOVE.l A0,D0
000318F6 <AmiBlitz3.ab3@21931>   SUB.l ptr_macrobuffer_begin,D0
000318FA <AmiBlitz3.ab3@21934>    BEQ.w JL_0_CC5E
000318FE <AmiBlitz3.ab3@21935>   CMPI.b #":",-(A0)
00031902 <AmiBlitz3.ab3@21936>    BNE.w JL_0_CC5E
00031906 <AmiBlitz3.ab3@21937>   CMP.w #$1,D0
0003190A <AmiBlitz3.ab3@21938>    BEQ.w JL_0_CC58
0003190E <AmiBlitz3.ab3@21939>   TST.b -$1(A0)
00031912 <AmiBlitz3.ab3@21940>    BMI.w JL_0_CC5E
00031914 <AmiBlitz3.ab3@21943>   SUBQ.w #1,D0
00031918 <AmiBlitz3.ab3@21944> BRA.w JL_0_CC3C
0003191C <AmiBlitz3.ab3@21947>   MOVE.w D0,$8(A2)
00031920 <AmiBlitz3.ab3@21948>    BEQ.w JL_0_CC8E
00031922 <AmiBlitz3.ab3@21949>   MOVEQ.l #$01,D1
00031928 <AmiBlitz3.ab3@21950>   MOVEA.l _execbase,A6
0003192E <AmiBlitz3.ab3@21951>   MOVE.l mempool,a0
00031932 <AmiBlitz3.ab3@21952>   JSR _AllocPooled(a6)
00031934 <AmiBlitz3.ab3@21954>   MOVEA.l D0,A0
00031938 <AmiBlitz3.ab3@21955>   MOVE.l A0,$4(A2)
0003193C <AmiBlitz3.ab3@21956>   MOVE.w $8(A2),D1
00031940 <AmiBlitz3.ab3@21957>    BEQ.w JL_0_CC8E
00031942 <AmiBlitz3.ab3@21958>   SUBQ.w #1,D1
00031948 <AmiBlitz3.ab3@21959>   MOVEA.l ptr_macrobuffer_begin,A1
0003194A <AmiBlitz3.ab3@21962>     MOVE.b (A1)+,(A0)+
0003194E <AmiBlitz3.ab3@21963>   DBF D1,JL_0_CC88
00031954 <AmiBlitz3.ab3@21966> JMP get1bytemain
00031956 <AmiBlitz3.ab3@21970>   MOVE.w D0,D1
00031958 <AmiBlitz3.ab3@21971>   LSR.w #8,D1
0003195A <AmiBlitz3.ab3@21972>   MOVE.b D1,(A0)+
0003195C <AmiBlitz3.ab3@21975>   MOVEQ.l #-$01,D2
0003195E <AmiBlitz3.ab3@21976>   MOVE.b D0,(A0)+
00031964 <AmiBlitz3.ab3@21977>   CMPA.l ptr_macrobuffer_end,A0
00031968 <AmiBlitz3.ab3@21978>    BCC.w macbigerr2
0003196A <AmiBlitz3.ab3@21979> RTS
00031970 <AmiBlitz3.ab3@21980> macbigerr2 JMP macbigerr
00031972 <AmiBlitz3.ab3@21983>   MOVE.l d0,-(a7)
00031974 <AmiBlitz3.ab3@21984>   MOVEQ #0,d0
0003197A <AmiBlitz3.ab3@21985>   CLR.b skiptoggle
0003197C <AmiBlitz3.ab3@21988>     MOVE.b (a5),d0
00031980 <AmiBlitz3.ab3@21989>     BEQ 'l3
00031984 <AmiBlitz3.ab3@21990>     CMP.b #";",d0
00031988 <AmiBlitz3.ab3@21991>     BNE 'l2
00031990 <AmiBlitz3.ab3@21992>     MOVE.b #1,skiptoggle
00031996 <AmiBlitz3.ab3@21995>     TST.b skiptoggle
0003199A <AmiBlitz3.ab3@21996>     BNE 'l4
0003199E <AmiBlitz3.ab3@21997>     CMP.b #":",d0
000319A2 <AmiBlitz3.ab3@21998>     BEQ 'l3
000319A4 <AmiBlitz3.ab3@22001>     ADDQ #1,a5
000319A8 <AmiBlitz3.ab3@22002> BRA 'loop
000319AE <AmiBlitz3.ab3@22005>   MOVE.w d0,lastchar
000319B0 <AmiBlitz3.ab3@22006>   MOVE.l (a7)+,d0
000319B2 <AmiBlitz3.ab3@22007> RTS
000319B6 <AmiBlitz3.ab3@22011>   BSR.w ifchar
000319BA <AmiBlitz3.ab3@22012>    BNE.w JUMP_syntaxerr
000319BC <AmiBlitz3.ab3@22013>   MOVE.w D0,D1
000319C2 <AmiBlitz3.ab3@22014>   JSR get1bytemain
000319C6 <AmiBlitz3.ab3@22015>   BSR.w ifchar
000319CA <AmiBlitz3.ab3@22016>    BNE.w JL_0_CCDA
000319CC <AmiBlitz3.ab3@22017>   ADDQ.w #1,D0
000319CE <AmiBlitz3.ab3@22018>   MOVE.w D0,D2
000319D0 <AmiBlitz3.ab3@22019>   ADD.w D0,D0
000319D2 <AmiBlitz3.ab3@22020>   ADD.w D2,D0
000319D4 <AmiBlitz3.ab3@22021>   ADD.w D0,D1
000319D6 <AmiBlitz3.ab3@22022>   MOVE.w D1,D0
000319DA <AmiBlitz3.ab3@22023>   ANDI.w #$3,D0
000319DE <AmiBlitz3.ab3@22024>   CMP.w #$3,D0
000319E2 <AmiBlitz3.ab3@22025>    BEQ.w JUMP_syntaxerr
000319E8 <AmiBlitz3.ab3@22027>   JSR get1bytemain
000319EA <AmiBlitz3.ab3@22030> RTS
000319EC <AmiBlitz3.ab3@22036> thetst1:  TST.b D0
000319EE <AmiBlitz3.ab3@22037> thetst2:  TST.w D0
000319F0 <AmiBlitz3.ab3@22038> thetst3:  TST.l D0
000319F2 <AmiBlitz3.ab3@22039> thetst4:  TST.l (A7)+                                      ;Any Length?
000319F6 <AmiBlitz3.ab3@22040> thetst5:  JSR _Reschedule(A6)
000319FA <AmiBlitz3.ab3@22042> posbr:    BEQ.w posbr
000319FE <AmiBlitz3.ab3@22043> negbr:    BNE.w negbr
00031A00 <AmiBlitz3.ab3@22047>   MOVEQ.l #-$01,D2
00031A04 <AmiBlitz3.ab3@22048> BRA.w JL_0_D04C
00031A0A <AmiBlitz3.ab3@22052>   CLR.l fp0addr
00031A0C <AmiBlitz3.ab3@22053>   MOVEQ.l #$01,D1                                          ;while flag
00031A0E <AmiBlitz3.ab3@22054>   MOVEQ.l #$00,D2                                          ;negate flag
00031A12 <AmiBlitz3.ab3@22055> BRA.w JL_0_D04E
00031A18 <AmiBlitz3.ab3@22059>   LEA firstrep,A2
00031A1A <AmiBlitz3.ab3@22060>   MOVEQ.l #$08,D2
00031A1E <AmiBlitz3.ab3@22061> BRA.w freeslist
00031A22 <AmiBlitz3.ab3@22065>   LEA firstsel(PC),A2
00031A24 <AmiBlitz3.ab3@22066>   MOVEQ.l #$0E,D2
00031A26 <AmiBlitz3.ab3@22071>   MOVEQ.l #$00,D3
00031A28 <AmiBlitz3.ab3@22079>   MOVE.l (A2),D0
00031A2A <AmiBlitz3.ab3@22080>   CLR.l (A2)
00031A2C <AmiBlitz3.ab3@22081>   MOVEA.l D0,A2
00031A32 <AmiBlitz3.ab3@22082>   MOVEA.l _execbase,A6
00031A36 <AmiBlitz3.ab3@22085>     CMPA.w #$0,A2
00031A3A <AmiBlitz3.ab3@22086>      BEQ.w freelist__done
00031A3C <AmiBlitz3.ab3@22087>     TST.w D3
00031A40 <AmiBlitz3.ab3@22088>      BEQ.w freelist__skip
00031A44 <AmiBlitz3.ab3@22089>     MOVEM.l D2-D3/A2,-(A7)
00031A46 <AmiBlitz3.ab3@22090>     ADDA.w D3,A2
00031A48 <AmiBlitz3.ab3@22091>     MOVE.l D4,D2
00031A4C <AmiBlitz3.ab3@22092>     BSR.w freeslist
00031A50 <AmiBlitz3.ab3@22093>     MOVEM.l (A7)+,D2-D3/A2
00031A52 <AmiBlitz3.ab3@22096>     MOVEA.l A2,A1
00031A54 <AmiBlitz3.ab3@22097>     MOVE.l D2,D0
00031A56 <AmiBlitz3.ab3@22098>     MOVEA.l (A2),A2
00031A5C <AmiBlitz3.ab3@22099>     MOVE.l mempool,a0
00031A60 <AmiBlitz3.ab3@22100>     JSR _FreePooled(A6)
00031A64 <AmiBlitz3.ab3@22101> BRA.w freelist__loop
00031A66 <AmiBlitz3.ab3@22104> RTS
00031A6C <AmiBlitz3.ab3@22107> JMP eselerr
00031A70 <AmiBlitz3.ab3@22110> firstsel:  Ds.l 1
00031A74 <AmiBlitz3.ab3@22113> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031A76 <AmiBlitz3.ab3@22116> selpushw:   MOVE.w D0,-(A7)
00031A78 <AmiBlitz3.ab3@22118> selpushl:   MOVE.l D0,-(A7)
00031A7C <AmiBlitz3.ab3@22120> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031A80 <AmiBlitz3.ab3@22123> selcomb:    ANDI.w #$FF,D0
00031A82 <AmiBlitz3.ab3@22124> selcomw:    CMP.w (A7),D0
00031A84 <AmiBlitz3.ab3@22126> selcoml:    CMP.l (A7),D0
00031A88 <AmiBlitz3.ab3@22128> selbne:     BNE.w selbne
00031A8A <AmiBlitz3.ab3@22130> endsel:     ADDQ.w #8,A7
00031A8E <AmiBlitz3.ab3@22136>   MOVE.l firstsel(PC),D0                                  
00031A92 <AmiBlitz3.ab3@22137>    BEQ.w JUMP_eselerr
00031A94 <AmiBlitz3.ab3@22138>   MOVEA.l D0,A2
00031A98 <AmiBlitz3.ab3@22139>    BSR.w JL_0_CDFC
00031A9E <AmiBlitz3.ab3@22142>   MOVEA.l _execbase,A6
00031AA2 <AmiBlitz3.ab3@22145>   MOVE.l $4(A2),D0
00031AA6 <AmiBlitz3.ab3@22146>    BEQ.w doendsel__done
00031AA8 <AmiBlitz3.ab3@22147>   MOVEA.l D0,A3
00031AAC <AmiBlitz3.ab3@22148>   MOVEA.l $4(A3),A0
00031AB2 <AmiBlitz3.ab3@22149>   MOVE.l destpointer,D1
00031AB4 <AmiBlitz3.ab3@22150>   SUB.l A0,D1
00031ABA <AmiBlitz3.ab3@22152>     TST.b fast
00031ABE <AmiBlitz3.ab3@22153>     BEQ doendsel__loop_l1
00031AC4 <AmiBlitz3.ab3@22154>     MOVE.w dontwrite,D0
00031AC8 <AmiBlitz3.ab3@22155>     BNE.w doendsel__skip
00031ACA <AmiBlitz3.ab3@22156>     ADDQ.l #2,d1
00031ACE <AmiBlitz3.ab3@22157>     MOVE.l d1,-2(a0)
00031AD2 <AmiBlitz3.ab3@22158>   BRA doendsel__skip
00031AD8 <AmiBlitz3.ab3@22162>   TST.w dontwrite
00031ADC <AmiBlitz3.ab3@22163>      BNE.w doendsel__skip
00031AE2 <AmiBlitz3.ab3@22164>   CMP.l #MaxWordSgnd,D1
00031AE6 <AmiBlitz3.ab3@22165>    BHI.w JUMP_cbraerr
00031AE8 <AmiBlitz3.ab3@22166>   MOVE.w D1,(A0)
00031AEC <AmiBlitz3.ab3@22169>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00031AEE <AmiBlitz3.ab3@22170>   MOVEA.l A3,A1
00031AF0 <AmiBlitz3.ab3@22171>   MOVEQ.l #$08,D0
00031AF6 <AmiBlitz3.ab3@22172>   MOVE.l mempool,a0
00031AFA <AmiBlitz3.ab3@22173>    JSR _FreePooled(A6)
00031AFE <AmiBlitz3.ab3@22174> BRA.w doendsel__loop
00031B04 <AmiBlitz3.ab3@22177>   JSR popselect                                            ;fix stack on select
00031B08 <AmiBlitz3.ab3@22178>   MOVEA.l firstsel(PC),A1
00031B0E <AmiBlitz3.ab3@22179>   MOVE.l (A1),firstsel
00031B10 <AmiBlitz3.ab3@22180>   MOVEQ.l #$0E,D0
00031B16 <AmiBlitz3.ab3@22181>   MOVEA.l _execbase,A6
00031B1C <AmiBlitz3.ab3@22182>   MOVE.l mempool,a0
00031B20 <AmiBlitz3.ab3@22183>   JSR _FreePooled(A6)
00031B26 <AmiBlitz3.ab3@22184> JMP get1bytemain
00031B28 <AmiBlitz3.ab3@22188>   MOVEA.l (A7)+,A1
00031B2A <AmiBlitz3.ab3@22189>   SUBQ.w #8,A1
00031B2C <AmiBlitz3.ab3@22190>   MOVEQ.l #$09,D0
00031B2E <AmiBlitz3.ab3@22191>   ADD.l (A1),D0
00031B30 <AmiBlitz3.ab3@22194>   ADDQ.w #2,A7                                             ;for runtime errs!
00031B34 <AmiBlitz3.ab3@22199>   MOVE.l firstsel(PC),D0
00031B38 <AmiBlitz3.ab3@22200>    BEQ.w JUMP_defaerr
00031B3A <AmiBlitz3.ab3@22201>   MOVEA.l D0,A2
00031B3E <AmiBlitz3.ab3@22202>   BSR.w JL_0_CE26
00031B42 <AmiBlitz3.ab3@22203>   BSR.w JL_0_CDFC
00031B46 <AmiBlitz3.ab3@22204>   CLR.l $8(A2)
00031B4A <AmiBlitz3.ab3@22205>   MOVE.w $C(A2),D2
00031B4E <AmiBlitz3.ab3@22206> BRA.w JL_0_CE5E
00031B54 <AmiBlitz3.ab3@22209> JMP defaerr
00031B58 <AmiBlitz3.ab3@22212>   MOVE.l $8(A2),D0
00031B5C <AmiBlitz3.ab3@22213>    BEQ.w JL_0_CE24
00031B5E <AmiBlitz3.ab3@22214>   MOVEA.l D0,A0
00031B64 <AmiBlitz3.ab3@22215>   MOVE.l destpointer,D1
00031B66 <AmiBlitz3.ab3@22216>   SUB.l A0,D1
00031B6C <AmiBlitz3.ab3@22218>     TST.b fast
00031B70 <AmiBlitz3.ab3@22219>     BEQ 'l1
00031B76 <AmiBlitz3.ab3@22220>     TST.w dontwrite
00031B7A <AmiBlitz3.ab3@22221>     BNE.w JL_0_CE24
00031B7C <AmiBlitz3.ab3@22222>     ADDQ.l #2,d1
00031B80 <AmiBlitz3.ab3@22223>     MOVE.l D1,-2(A0)
00031B84 <AmiBlitz3.ab3@22224>   BRA JL_0_CE24
00031B8A <AmiBlitz3.ab3@22228>   TST.w dontwrite
00031B8E <AmiBlitz3.ab3@22229>      BNE.w JL_0_CE24
00031B94 <AmiBlitz3.ab3@22230>    CMP.l #MaxWordSgnd,D1
00031B98 <AmiBlitz3.ab3@22231>    BHI.w JUMP_cbraerr
00031B9A <AmiBlitz3.ab3@22232>   MOVE.w D1,(A0)
00031B9C <AmiBlitz3.ab3@22235> RTS
00031BA2 <AmiBlitz3.ab3@22238> JMP cbraerr
00031BA6 <AmiBlitz3.ab3@22242>   MOVE.l $8(A2),D0
00031BAA <AmiBlitz3.ab3@22243>    BEQ.w JL_0_CE5C
00031BAC <AmiBlitz3.ab3@22244>   MOVEA.l D0,A3
00031BB0 <AmiBlitz3.ab3@22245>   MOVE.w #$6000,D1
00031BB6 <AmiBlitz3.ab3@22247>    TST.b fast
00031BBA <AmiBlitz3.ab3@22248>    BEQ 'l1
00031BC0 <AmiBlitz3.ab3@22249>    OR.l #$ff,d1
00031BC4 <AmiBlitz3.ab3@22250>    BSR writeword
00031BC8 <AmiBlitz3.ab3@22254>   BSR.w writeword
00031BCA <AmiBlitz3.ab3@22255>   MOVEQ.l #$08,D0
00031BCC <AmiBlitz3.ab3@22256>   MOVEQ.l #$01,D1
00031BD2 <AmiBlitz3.ab3@22257>   MOVEA.l _execbase,A6
00031BD8 <AmiBlitz3.ab3@22258>   MOVE.l mempool,a0
00031BDC <AmiBlitz3.ab3@22259>   JSR _AllocPooled(a6)
00031BDE <AmiBlitz3.ab3@22261>   MOVEA.l D0,A0
00031BE2 <AmiBlitz3.ab3@22262>   MOVE.l $4(A2),(A0)
00031BE6 <AmiBlitz3.ab3@22263>   MOVE.l A0,$4(A2)
00031BEE <AmiBlitz3.ab3@22264>   MOVE.l destpointer,$4(A0)
00031BF2 <AmiBlitz3.ab3@22265> BRA.w writeword
00031BF4 <AmiBlitz3.ab3@22268> RTS
00031BFA <AmiBlitz3.ab3@22272>   TST.b debugmode
00031BFE <AmiBlitz3.ab3@22273>    BEQ.w JL_0_CE7A
00031C02 <AmiBlitz3.ab3@22274>   MOVE.w #$C313,D1
00031C06 <AmiBlitz3.ab3@22275>   CMP.w #$3,D2
00031C0A <AmiBlitz3.ab3@22276>    BCS.w JL_0_CE76
00031C0C <AmiBlitz3.ab3@22277>   ADDQ.w #1,D1
00031C10 <AmiBlitz3.ab3@22280> BRA.w Atokejsr
00031C12 <AmiBlitz3.ab3@22283> RTS
00031C18 <AmiBlitz3.ab3@22287> JMP caseerr
00031C1C <AmiBlitz3.ab3@22290>   MOVE.l firstsel(PC),D0
00031C20 <AmiBlitz3.ab3@22291>    BEQ.w JUMP_caseerr
00031C22 <AmiBlitz3.ab3@22292>   MOVEA.l D0,A2
00031C26 <AmiBlitz3.ab3@22293>    BSR.w JL_0_CE26
00031C2A <AmiBlitz3.ab3@22294>    BSR.w JL_0_CDFC
00031C2E <AmiBlitz3.ab3@22295>   MOVE.w $C(A2),D2
00031C30 <AmiBlitz3.ab3@22296>   MOVE.w D2,-(A7)
00031C34 <AmiBlitz3.ab3@22297>    BSR.w JL_0_CE5E
00031C36 <AmiBlitz3.ab3@22298>   MOVE.w (A7),D2
00031C3A <AmiBlitz3.ab3@22299>    BSR.w bakeval
00031C3C <AmiBlitz3.ab3@22300>   MOVE.w (A7)+,D2
00031C40 <AmiBlitz3.ab3@22301>   LEA selcomb(PC),A0
00031C44 <AmiBlitz3.ab3@22302>   LEA selcombf(PC),A1
00031C48 <AmiBlitz3.ab3@22303>   CMP.w #$1,D2
00031C4C <AmiBlitz3.ab3@22304>    BEQ.w JL_0_CED8
00031C50 <AmiBlitz3.ab3@22305>   LEA selcomw(PC),A0
00031C54 <AmiBlitz3.ab3@22306>   CMP.w #$2,D2
00031C58 <AmiBlitz3.ab3@22307>    BEQ.w JL_0_CED8
00031C5C <AmiBlitz3.ab3@22308>   LEA selcoml(PC),A0
00031C60 <AmiBlitz3.ab3@22309>   LEA selcomlf(PC),A1
00031C64 <AmiBlitz3.ab3@22310>   CMP.w #$7,D2
00031C68 <AmiBlitz3.ab3@22311>    BCS.w JL_0_CED8
00031C6C <AmiBlitz3.ab3@22313>   MOVE.w #$CE01,D1
00031C70 <AmiBlitz3.ab3@22314>    BSR.w Atokejsr
00031C74 <AmiBlitz3.ab3@22315> BRA.w JL_0_CEDC
00031C78 <AmiBlitz3.ab3@22318>   BSR.w pokecode
00031C7C <AmiBlitz3.ab3@22321>   MOVE.w selbne(PC),D1
00031C82 <AmiBlitz3.ab3@22323>     TST.b fast
00031C86 <AmiBlitz3.ab3@22324>     BEQ 'l1
00031C8C <AmiBlitz3.ab3@22325>     ORI.l #$ff,d1
00031C90 <AmiBlitz3.ab3@22326>     BSR writeword
00031C94 <AmiBlitz3.ab3@22329>   BSR.w writeword
00031C98 <AmiBlitz3.ab3@22330>   MOVEA.l firstsel(PC),A0
00031CA0 <AmiBlitz3.ab3@22331>   MOVE.l destpointer,$8(A0)
00031CA4 <AmiBlitz3.ab3@22332> BRA.w writeword
00031CA8 <AmiBlitz3.ab3@22336> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00031CAA <AmiBlitz3.ab3@22337> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00031CAE <AmiBlitz3.ab3@22340> sellineat:  Ds.l 1
00031CB4 <AmiBlitz3.ab3@22346>   TST.b debugmode
00031CB8 <AmiBlitz3.ab3@22347>    BEQ.w JL_0_CF0E
00031CBC <AmiBlitz3.ab3@22348>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00031CC0 <AmiBlitz3.ab3@22349>    BSR.w writelong
00031CCA <AmiBlitz3.ab3@22352>   MOVE.l linenumat,sellineat
00031CD4 <AmiBlitz3.ab3@22354>    MOVE.l destpointer,pushpc
00031CDE <AmiBlitz3.ab3@22355>   MOVE.l hunkoffsetbase,pushoff
00031CE0 <AmiBlitz3.ab3@22356>   MOVEQ.l #$00,D2
00031CE4 <AmiBlitz3.ab3@22357>    BSR.w bakevalu                                          ;Evaluate
00031CE8 <AmiBlitz3.ab3@22358>    BSR.w JL_0_B5D2
00031CEC <AmiBlitz3.ab3@22359>   CMP.w #$7,D2
00031CF0 <AmiBlitz3.ab3@22360>    BNE.w JL_0_CF36
00031CF4 <AmiBlitz3.ab3@22361>   MOVE.w clrst(PC),D1
00031CF8 <AmiBlitz3.ab3@22362>    BSR.w writeword
00031CFC <AmiBlitz3.ab3@22365>    BSR.w JL_0_B63C
00031D00 <AmiBlitz3.ab3@22366>   LEA selpushb(PC),A0
00031D04 <AmiBlitz3.ab3@22367>   LEA selpushbf(PC),A1
00031D08 <AmiBlitz3.ab3@22368>   CMP.w #$1,D2
00031D0C <AmiBlitz3.ab3@22369>    BEQ.w JL_0_CF88
00031D10 <AmiBlitz3.ab3@22370>   LEA selpushw(PC),A0
00031D14 <AmiBlitz3.ab3@22371>   CMP.w #$2,D2
00031D18 <AmiBlitz3.ab3@22372>    BEQ.w JL_0_CF88
00031D1C <AmiBlitz3.ab3@22373>   LEA selpushl(PC),A0
00031D20 <AmiBlitz3.ab3@22374>   LEA selpushlf(PC),A1
00031D24 <AmiBlitz3.ab3@22375>   CMP.w #$7,D2
00031D28 <AmiBlitz3.ab3@22376>    BCS.w JL_0_CF88
00031D2E <AmiBlitz3.ab3@22378>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00031D32 <AmiBlitz3.ab3@22379>    BSR.w writeword
00031D36 <AmiBlitz3.ab3@22380>   LEA selpushs(PC),A0
00031D3A <AmiBlitz3.ab3@22381>   LEA selpushsf(PC),A1
00031D3E <AmiBlitz3.ab3@22382>    BSR.w pokecode
00031D42 <AmiBlitz3.ab3@22383>   MOVE.w #$C701,D1
00031D46 <AmiBlitz3.ab3@22384>    BSR.w Atokejsr
00031D4A <AmiBlitz3.ab3@22385> BRA.w JL_0_CF8C
00031D4E <AmiBlitz3.ab3@22388>   BSR.w pokecode
00031D50 <AmiBlitz3.ab3@22391>   MOVEQ.l #$0E,D0
00031D52 <AmiBlitz3.ab3@22392>   MOVEQ.l #$01,D1
00031D58 <AmiBlitz3.ab3@22393>   MOVEA.l _execbase,A6
00031D5E <AmiBlitz3.ab3@22395>   MOVE.l mempool,a0
00031D62 <AmiBlitz3.ab3@22396>   JSR _AllocPooled(a6)
00031D64 <AmiBlitz3.ab3@22397>   MOVEA.l D0,A0
00031D68 <AmiBlitz3.ab3@22398>   MOVE.l firstsel(PC),(A0)
00031D6E <AmiBlitz3.ab3@22399>   MOVE.l A0,firstsel
00031D72 <AmiBlitz3.ab3@22400>   CLR.l $4(A0)
00031D76 <AmiBlitz3.ab3@22401>   CLR.l $8(A0)
00031D7A <AmiBlitz3.ab3@22402>   MOVE.w D2,$C(A0)
00031D7C <AmiBlitz3.ab3@22403> RTS
00031D82 <AmiBlitz3.ab3@22407>   MOVE.l firstrep,D0
00031D86 <AmiBlitz3.ab3@22408>    BEQ.w JUMP_unterr1
00031D8A <AmiBlitz3.ab3@22409>   MOVE.w #$6000,D1
00031D8E <AmiBlitz3.ab3@22410>   BSR.w writeword
00031D90 <AmiBlitz3.ab3@22411>   MOVEA.l D0,A0
00031D94 <AmiBlitz3.ab3@22412>   MOVE.l $4(A0),D1
00031D9A <AmiBlitz3.ab3@22413>   SUB.l destpointer,D1
00031D9C <AmiBlitz3.ab3@22414>   TST.w D1
00031DA0 <AmiBlitz3.ab3@22415>    BPL.w JUMP_unterr2
00031DA4 <AmiBlitz3.ab3@22416>   BSR.w writeword
00031DAA <AmiBlitz3.ab3@22417>   MOVEA.l _execbase,A6
00031DAE <AmiBlitz3.ab3@22418> BRA.w JL_0_D036
00031DB4 <AmiBlitz3.ab3@22421> JMP unterr2
00031DBA <AmiBlitz3.ab3@22424> JMP unterr1
00031DC0 <AmiBlitz3.ab3@22428>   MOVE.l firstrep,D0
00031DC4 <AmiBlitz3.ab3@22429>    BEQ.w JUMP_unterr1
00031DC8 <AmiBlitz3.ab3@22430>   BSR.w do_if
00031DCE <AmiBlitz3.ab3@22431>   JSR reget
00031DD2 <AmiBlitz3.ab3@22432>    BNE.w JUMP_syntaxerr
00031DD8 <AmiBlitz3.ab3@22433>   MOVE.w dontwrite,D1
00031DDC <AmiBlitz3.ab3@22434>    BNE.w JL_0_D020
00031DE2 <AmiBlitz3.ab3@22435>   MOVEA.l firstrep,A0
00031DE8 <AmiBlitz3.ab3@22436>   MOVEA.l destpointer,A1
00031DEE <AmiBlitz3.ab3@22438>     TST.b fast
00031DF2 <AmiBlitz3.ab3@22439>     BEQ 'l1
00031DF4 <AmiBlitz3.ab3@22440>     SUBQ.w #4,a1
00031DF8 <AmiBlitz3.ab3@22441>     MOVE.l $4(A0),D2
00031DFA <AmiBlitz3.ab3@22442>     SUB.l A1,D2
00031DFC <AmiBlitz3.ab3@22443>     MOVE.l d2,(a1)
00031E00 <AmiBlitz3.ab3@22444>   BRA JL_0_D020
00031E02 <AmiBlitz3.ab3@22448>   SUBQ.w #2,A1
00031E06 <AmiBlitz3.ab3@22449>   MOVE.l $4(A0),D2
00031E08 <AmiBlitz3.ab3@22450>   SUB.l A1,D2
00031E0A <AmiBlitz3.ab3@22451>   TST.w D2
00031E0E <AmiBlitz3.ab3@22452>    BPL.w JUMP_unterr2
00031E10 <AmiBlitz3.ab3@22453>   MOVE.w D2,(A1)
00031E16 <AmiBlitz3.ab3@22456>   MOVEA.l firstiff,A1
00031E1C <AmiBlitz3.ab3@22457>   MOVE.l (A1),firstiff
00031E1E <AmiBlitz3.ab3@22458>   MOVEQ.l #$0E,D0
00031E24 <AmiBlitz3.ab3@22459>   MOVEA.l _execbase,A6
00031E2A <AmiBlitz3.ab3@22460>   MOVE.l mempool,a0
00031E2E <AmiBlitz3.ab3@22461>   JSR _FreePooled(A6)
00031E34 <AmiBlitz3.ab3@22464>   MOVEA.l firstrep,A1
00031E3A <AmiBlitz3.ab3@22465>   MOVE.l (A1),firstrep
00031E3C <AmiBlitz3.ab3@22466>   MOVEQ.l #$08,D0
00031E42 <AmiBlitz3.ab3@22467>   MOVE.l mempool,a0
00031E46 <AmiBlitz3.ab3@22468> JMP _FreePooled(A6)
00031E4A <AmiBlitz3.ab3@22471> iflineat:   Ds.l 1
00031E4C <AmiBlitz3.ab3@22475>   MOVEQ.l #$00,D2
00031E52 <AmiBlitz3.ab3@22476>   TST.b fast
00031E56 <AmiBlitz3.ab3@22477>   BEQ 'l1
00031E5E <AmiBlitz3.ab3@22478>   MOVE.b #1,nostringopt
00031E66 <AmiBlitz3.ab3@22479>   MOVE.b #1,iniffcommand
00031E68 <AmiBlitz3.ab3@22483>   MOVEQ.l #$00,D1
00031E6A <AmiBlitz3.ab3@22486>   MOVE.w D1,-(A7)
00031E70 <AmiBlitz3.ab3@22487>   MOVE.l destpointer,-(A7)
00031E72 <AmiBlitz3.ab3@22488>   MOVE.w D2,-(A7)
00031E7C <AmiBlitz3.ab3@22489>   MOVE.l linenumat,iflineat
00031E7E <AmiBlitz3.ab3@22490>   MOVEQ.l #$00,D2
00031E88 <AmiBlitz3.ab3@22491>   MOVE.b optistring,optistring2
00031E90 <AmiBlitz3.ab3@22492>   MOVE.b #1,optistring
00031E94 <AmiBlitz3.ab3@22493>   BSR.w bakevalu
00031E9E <AmiBlitz3.ab3@22494>   MOVE.b optistring2,optistring
00031EA2 <AmiBlitz3.ab3@22495>   CMP.w #$5,D2
00031EA6 <AmiBlitz3.ab3@22496>    BEQ.w JL_0_D09C
00031EAA <AmiBlitz3.ab3@22497>   MOVE.w thetst1(PC),D1
00031EAE <AmiBlitz3.ab3@22498>   CMP.w #$1,D2
00031EB2 <AmiBlitz3.ab3@22499>    BEQ.w writebranchcode
00031EB6 <AmiBlitz3.ab3@22500>   MOVE.w thetst2(PC),D1
00031EBA <AmiBlitz3.ab3@22501>   CMP.w #$2,D2
00031EBE <AmiBlitz3.ab3@22502>    BEQ.w writebranchcode
00031EC2 <AmiBlitz3.ab3@22503>   MOVE.w thetst4(PC),D1
00031EC6 <AmiBlitz3.ab3@22504>   CMP.w #$7,D2
00031ECA <AmiBlitz3.ab3@22505>    BEQ.w writebranchcode
00031ECE <AmiBlitz3.ab3@22506>   MOVE.w thetst3(PC),D1
00031ED2 <AmiBlitz3.ab3@22507> BRA.w writebranchcode
00031ED8 <AmiBlitz3.ab3@22510>   TST.b fpu
00031EDC <AmiBlitz3.ab3@22511>   BEQ 'dofpu
00031EE2 <AmiBlitz3.ab3@22512>   MOVE.l #$f200003a,d1
00031EE6 <AmiBlitz3.ab3@22513>   BSR writelong
00031EEA <AmiBlitz3.ab3@22514>   MOVE.w #$f2c1,d1
00031EEE <AmiBlitz3.ab3@22515>   BSR writeword
00031EF2 <AmiBlitz3.ab3@22516>   BSR writelong
00031EF4 <AmiBlitz3.ab3@22517>   ADDQ.l #2,a7
00031EF8 <AmiBlitz3.ab3@22518> BRA.w br2
00031EFC <AmiBlitz3.ab3@22521>    MOVE.w #$C900,D1
00031F00 <AmiBlitz3.ab3@22522>    BSR.w Atokejsr
00031F04 <AmiBlitz3.ab3@22523>   MOVE.l thetst5(PC),D1
00031F08 <AmiBlitz3.ab3@22524>    BSR.w writelong
00031F0C <AmiBlitz3.ab3@22525> BRA.w JL_0_D0B4
00031F12 <AmiBlitz3.ab3@22529>          CLR.b iniffcommand
00031F18 <AmiBlitz3.ab3@22530>          TST.b fast                                        ;branchcode
00031F1C <AmiBlitz3.ab3@22531>          BEQ b6
00031F22 <AmiBlitz3.ab3@22532>          TST.b fpu
00031F26 <AmiBlitz3.ab3@22533>          BEQ 'nofpu
00031F2C <AmiBlitz3.ab3@22537>           MOVE.l destpointer,a0
00031F32 <AmiBlitz3.ab3@22538>          SUB.l load_var_addr,a0
00031F38 <AmiBlitz3.ab3@22539>          CMP.l #4,a0
00031F3C <AmiBlitz3.ab3@22540>          BEQ 'nofpu
00031F44 <AmiBlitz3.ab3@22541>          CMP.l #$f2400014,-4(a4)                           ;<
00031F48 <AmiBlitz3.ab3@22542>          BNE 'nolt
00031F4E <AmiBlitz3.ab3@22543>          SUBQ.l #2,destpointer
00031F54 <AmiBlitz3.ab3@22544>          MOVE.w #$f293,-4(a4)                              ;
00031F58 <AmiBlitz3.ab3@22545> BRA 'brf
00031F60 <AmiBlitz3.ab3@22548>   CMP.l #$f2400015,-4(a4)                                  ;<=
00031F64 <AmiBlitz3.ab3@22549>          BNE 'nole
00031F6A <AmiBlitz3.ab3@22550>          SUBQ.l #2,destpointer
00031F70 <AmiBlitz3.ab3@22551>          MOVE.w #$f292,-4(a4)
00031F74 <AmiBlitz3.ab3@22552> BRA 'brf
00031F7C <AmiBlitz3.ab3@22555>   CMP.l #$f2400013,-4(a4)                                  ;=>
00031F80 <AmiBlitz3.ab3@22556>          BNE 'noge
00031F86 <AmiBlitz3.ab3@22557>          SUBQ.l #2,destpointer
00031F8C <AmiBlitz3.ab3@22558>          MOVE.w #$f294,-4(a4)
00031F90 <AmiBlitz3.ab3@22559> BRA 'brf
00031F98 <AmiBlitz3.ab3@22562>   CMP.l #$f2400012,-4(a4)                                  ;>
00031F9C <AmiBlitz3.ab3@22563>          BNE 'nogt
00031FA2 <AmiBlitz3.ab3@22564>          SUBQ.l #2,destpointer
00031FA8 <AmiBlitz3.ab3@22565>          MOVE.w #$f295,-4(a4)
00031FAC <AmiBlitz3.ab3@22566> BRA 'brf
00031FB4 <AmiBlitz3.ab3@22569>   CMP.l #$f2400001,-4(a4)                                  ;=
00031FB8 <AmiBlitz3.ab3@22570>          BNE 'noeq
00031FBE <AmiBlitz3.ab3@22571>          SUBQ.l #2,destpointer
00031FC4 <AmiBlitz3.ab3@22572>          MOVE.w #$f28e,-4(a4)
00031FC8 <AmiBlitz3.ab3@22573> BRA 'brf
00031FD0 <AmiBlitz3.ab3@22576>   CMP.l #$f240000e,-4(a4)                                  ;<>
00031FD4 <AmiBlitz3.ab3@22577>          BNE 'none
00031FDA <AmiBlitz3.ab3@22578>          SUBQ.l #2,destpointer
00031FE0 <AmiBlitz3.ab3@22579>          MOVE.w #$f281,-4(a4)
00031FE2 <AmiBlitz3.ab3@22582>   ADDQ.l #2,a7
00031FE8 <AmiBlitz3.ab3@22584>     TST.b fast
00031FEC <AmiBlitz3.ab3@22585>     BEQ 'l1
00031FF2 <AmiBlitz3.ab3@22586>     OR.b #$40,-3(a4)
00031FF6 <AmiBlitz3.ab3@22587>     BSR writeword
00031FFA <AmiBlitz3.ab3@22591>  BSR writeword
00031FFE <AmiBlitz3.ab3@22592> BRA.s br2
00032004 <AmiBlitz3.ab3@22596>   MOVE.l destpointer,a0
0003200A <AmiBlitz3.ab3@22597>          SUB.l load_var_addr,a0
00032010 <AmiBlitz3.ab3@22598>          CMP.l #4,a0
00032014 <AmiBlitz3.ab3@22599>          BEQ JL_0_D0B4
0003201A <AmiBlitz3.ab3@22600>          CMP.w #$4eb9,-6(a4)
0003201E <AmiBlitz3.ab3@22601>          BEQ b6
00032024 <AmiBlitz3.ab3@22602>          CMP.w #$5ec0,-2(a4)                               ;>
00032028 <AmiBlitz3.ab3@22603>      BNE.s 'lb1
0003202E <AmiBlitz3.ab3@22604>          MOVE.w #$6f00,-2(a4)                              ;ble
00032032 <AmiBlitz3.ab3@22605> BRA.s br
00032038 <AmiBlitz3.ab3@22608>  CMP.w #$5dc0,-2(a4)                                       ;<
0003203C <AmiBlitz3.ab3@22609>   BNE.s 'lb2
00032042 <AmiBlitz3.ab3@22610>          MOVE.w #$6c00,-2(a4)                              ;bge
00032046 <AmiBlitz3.ab3@22611> BRA.s br
0003204C <AmiBlitz3.ab3@22614>   CMP.w #$57c0,-2(a4)                                      ;=
00032050 <AmiBlitz3.ab3@22615>   BNE.s 'lb3
00032056 <AmiBlitz3.ab3@22616>          MOVE.w #$6600,-2(a4)                              ;bne
0003205A <AmiBlitz3.ab3@22617> BRA.s br
00032060 <AmiBlitz3.ab3@22620>   CMP.w #$56c0,-2(a4)                                      ;<>
00032064 <AmiBlitz3.ab3@22621>   BNE.s 'lb4
0003206A <AmiBlitz3.ab3@22622>          MOVE.w #$6700,-2(a4)                              ;beq
0003206E <AmiBlitz3.ab3@22623> BRA.s br
00032074 <AmiBlitz3.ab3@22626>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032078 <AmiBlitz3.ab3@22627>   BNE.s 'lb5
0003207E <AmiBlitz3.ab3@22628>          MOVE.w #$6d00,-2(a4)                              ;blt
00032082 <AmiBlitz3.ab3@22629> BRA.s br
00032088 <AmiBlitz3.ab3@22632>   CMP.w #$5fc0,-2(a4)                                      ;<=
0003208C <AmiBlitz3.ab3@22633>         BNE.s b6
00032092 <AmiBlitz3.ab3@22634>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032094 <AmiBlitz3.ab3@22637>   TST.w (a7)+
0003209A <AmiBlitz3.ab3@22639>         TST.b fast
0003209E <AmiBlitz3.ab3@22640>         BEQ 'l1
000320A4 <AmiBlitz3.ab3@22641>         OR.b #$ff,-1(a4)                                   ;long branches
000320A8 <AmiBlitz3.ab3@22642>         BSR writeword
000320AC <AmiBlitz3.ab3@22646>         BSR writeword
000320B0 <AmiBlitz3.ab3@22647> BRA.s br2
000320B4 <AmiBlitz3.ab3@22650>   BSR.w writeword
000320B8 <AmiBlitz3.ab3@22653>   MOVE.l posbr(PC),D1
000320BA <AmiBlitz3.ab3@22654>   TST.w (A7)+
000320BE <AmiBlitz3.ab3@22655>    BEQ.w JL_0_D0C2
000320C2 <AmiBlitz3.ab3@22656>   MOVE.l negbr(PC),D1
000320C8 <AmiBlitz3.ab3@22659>   TST.b fast
000320CC <AmiBlitz3.ab3@22660>            BEQ 'l1
000320D2 <AmiBlitz3.ab3@22661>            OR.l #$00ff0000,d1
000320D6 <AmiBlitz3.ab3@22662>            BSR writelong
000320DA <AmiBlitz3.ab3@22663>            BSR writeword
000320DE <AmiBlitz3.ab3@22664> BRA br2
000320E2 <AmiBlitz3.ab3@22667>   BSR.w writelong
000320E4 <AmiBlitz3.ab3@22670>  MOVEQ.l #$0E,D0
000320E6 <AmiBlitz3.ab3@22671>   MOVEQ.l #$01,D1
000320EC <AmiBlitz3.ab3@22672>   MOVEA.l _execbase,A6
000320F2 <AmiBlitz3.ab3@22674>   MOVE.l mempool,a0
000320F6 <AmiBlitz3.ab3@22675>   JSR _AllocPooled(a6)
000320F8 <AmiBlitz3.ab3@22676>   MOVEA.l D0,A0
000320FE <AmiBlitz3.ab3@22677>   MOVE.l firstiff,(A0)
00032104 <AmiBlitz3.ab3@22678>   MOVE.l A0,firstiff
00032108 <AmiBlitz3.ab3@22679>   MOVE.l (A7)+,$4(A0)
00032110 <AmiBlitz3.ab3@22680>   MOVE.l destpointer,$8(A0)
00032114 <AmiBlitz3.ab3@22681>   MOVE.w (A7)+,$C(A0)
0003211A <AmiBlitz3.ab3@22682>    JSR reget
0003211E <AmiBlitz3.ab3@22683>    BEQ.w JL_0_D10C
00032124 <AmiBlitz3.ab3@22684>   BSET #$7,$C(A0)
0003212E <AmiBlitz3.ab3@22688>   MOVE.w oldqflag,instringon
00032134 <AmiBlitz3.ab3@22689>   MOVEA.l lastsourcepos,A5
0003213C <AmiBlitz3.ab3@22690>   MOVE.w #$003A,lastchar
0003213E <AmiBlitz3.ab3@22693> RTS
00032142 <AmiBlitz3.ab3@22697>   CMP.w #$1,D0
00032146 <AmiBlitz3.ab3@22698>    BLT.w JL_0_D128
0003214A <AmiBlitz3.ab3@22699>   CMP.w #$0,D0
0003214E <AmiBlitz3.ab3@22700>    BGT.w JL_0_D128
00032150 <AmiBlitz3.ab3@22701>   ADD.w D0,D0
00032152 <AmiBlitz3.ab3@22702>   ADD.w D0,D0
00032156 <AmiBlitz3.ab3@22703>   MOVEA.l JL_0_D128(PC,D0.W),A0
00032158 <AmiBlitz3.ab3@22706> JMP (A0)
0003215C <AmiBlitz3.ab3@22709> BRA.w JL_0_D128
00032160 <AmiBlitz3.ab3@22713>   CMP.w #$1,D0
00032164 <AmiBlitz3.ab3@22714>    BLT.w JL_0_D146
00032168 <AmiBlitz3.ab3@22715>   CMP.w #$0,D0
0003216C <AmiBlitz3.ab3@22716>    BGT.w JL_0_D146
0003216E <AmiBlitz3.ab3@22717>   ADD.w D0,D0
00032170 <AmiBlitz3.ab3@22718>   ADD.w D0,D0
00032174 <AmiBlitz3.ab3@22719>   MOVEA.l JL_0_D146(PC,D0.W),A0
00032176 <AmiBlitz3.ab3@22722>   JSR (A0)
0003217A <AmiBlitz3.ab3@22725> BRA.w JL_0_D146
0003217E <AmiBlitz3.ab3@22729>   CMP.w #$1,D0
00032182 <AmiBlitz3.ab3@22730>    BLT.w JL_0_D168
00032186 <AmiBlitz3.ab3@22731>   CMP.w #$0,D0
0003218A <AmiBlitz3.ab3@22732>    BGT.w JL_0_D168
0003218C <AmiBlitz3.ab3@22733>   ADD.w D0,D0
0003218E <AmiBlitz3.ab3@22734>   ADD.w D0,D0
00032192 <AmiBlitz3.ab3@22735>   MOVEA.l JL_0_D168(PC,D0.W),A0
00032196 <AmiBlitz3.ab3@22738>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032198 <AmiBlitz3.ab3@22741>    JSR (A0)
0003219C <AmiBlitz3.ab3@22744> BRA.w JL_0_D168
0003219E <AmiBlitz3.ab3@22747> labcnt:   Ds.w 1
000321A0 <AmiBlitz3.ab3@22754>   MOVEQ.l #$02,D2
000321A4 <AmiBlitz3.ab3@22755>    BSR.w bakeval
000321A8 <AmiBlitz3.ab3@22756>   LEA JL_0_D10E(PC),A0
000321AC <AmiBlitz3.ab3@22757>   LEA JL_0_D12C(PC),A1
000321B0 <AmiBlitz3.ab3@22758>   MOVE.w #$001A,D1
000321B4 <AmiBlitz3.ab3@22759>   CMP.w #-$7FFB,D0
000321B8 <AmiBlitz3.ab3@22760>    BEQ.w JL_0_D1B6
000321BC <AmiBlitz3.ab3@22761>   CMP.w #-$7FFA,D0
000321C0 <AmiBlitz3.ab3@22762>    BNE.w JUMP_syntaxerr
000321C4 <AmiBlitz3.ab3@22763>   LEA JL_0_D12C(PC),A0
000321C8 <AmiBlitz3.ab3@22764>   LEA JL_0_D14A(PC),A1
000321CC <AmiBlitz3.ab3@22765>   MOVE.w #$001A,D1
000321D2 <AmiBlitz3.ab3@22766>   TST.b debugmode
000321D6 <AmiBlitz3.ab3@22767>    BEQ.b JL_0_D1B6
000321DC <AmiBlitz3.ab3@22768>    JSR chkstak
000321E0 <AmiBlitz3.ab3@22769>   LEA JL_0_D14A(PC),A0
000321E4 <AmiBlitz3.ab3@22770>   LEA labcnt(PC),A1
000321E8 <AmiBlitz3.ab3@22771>   MOVE.w #$001E,D1
000321EA <AmiBlitz3.ab3@22774>   MOVE.w D1,-(A7)
000321F0 <AmiBlitz3.ab3@22775>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
000321F4 <AmiBlitz3.ab3@22776>    BSR.w pokecode
000321FA <AmiBlitz3.ab3@22777>   CLR.w labcnt
00032200 <AmiBlitz3.ab3@22782>    JSR get1bytemain
00032206 <AmiBlitz3.ab3@22783>   SUBQ.l #2,destpointer                                    ;for makealab!
0003220A <AmiBlitz3.ab3@22784>    BSR.w JL_0_AE22
00032210 <AmiBlitz3.ab3@22785>   ADDQ.l #2,destpointer
00032216 <AmiBlitz3.ab3@22786>    JSR addoff
0003221A <AmiBlitz3.ab3@22787>   MOVE.l $8(A2),D1
0003221E <AmiBlitz3.ab3@22788>    BSR.w writelong
00032224 <AmiBlitz3.ab3@22789>   ADDQ.w #1,labcnt
0003222A <AmiBlitz3.ab3@22790>    JSR reget
0003222E <AmiBlitz3.ab3@22791>   CMP.w #$2C,D0
00032232 <AmiBlitz3.ab3@22792>    BEQ.w JL_0_D1C8
00032234 <AmiBlitz3.ab3@22793>   MOVEA.l (A7)+,A0
00032236 <AmiBlitz3.ab3@22794>   MOVE.w (A7)+,D2
0003223C <AmiBlitz3.ab3@22795>   MOVE.w dontwrite,D1
00032240 <AmiBlitz3.ab3@22796>    BNE.w JL_0_D21A
00032244 <AmiBlitz3.ab3@22797>   MOVE.w labcnt(PC),D1
00032248 <AmiBlitz3.ab3@22798>   MOVE.w D1,$A(A0)
0003224A <AmiBlitz3.ab3@22799>   ADD.w D1,D1
0003224C <AmiBlitz3.ab3@22800>   ADD.w D1,D1
0003224E <AmiBlitz3.ab3@22801>   ADDQ.w #2,D1
00032252 <AmiBlitz3.ab3@22802>   MOVE.w D1,$2(A0,D2.W)
00032254 <AmiBlitz3.ab3@22805> RTS
0003225A <AmiBlitz3.ab3@22809>   TST.b debugmode
0003225E <AmiBlitz3.ab3@22810>    BEQ.w JL_0_D236
00032264 <AmiBlitz3.ab3@22811>    JSR chkstak
0003226A <AmiBlitz3.ab3@22812>   MOVE.l AL_0_D162,D1
0003226E <AmiBlitz3.ab3@22813>    BSR.w writelong
00032274 <AmiBlitz3.ab3@22815>   MOVE.w gosubcode,D1
00032278 <AmiBlitz3.ab3@22816> BRA.w JL_0_D246
0003227E <AmiBlitz3.ab3@22820>   MOVE.w gotocode,D1
00032280 <AmiBlitz3.ab3@22823>   MOVE.w D1,-(A7)
00032284 <AmiBlitz3.ab3@22824>    BSR.w JL_0_AE22
00032286 <AmiBlitz3.ab3@22825>   MOVE.w (A7)+,D1
0003228A <AmiBlitz3.ab3@22826>    BSR.w writeword
00032290 <AmiBlitz3.ab3@22827>    JSR addoff
00032294 <AmiBlitz3.ab3@22828>   MOVE.l $8(A2),D1
00032298 <AmiBlitz3.ab3@22829> BRA.w writelong
0003229E <AmiBlitz3.ab3@22833>   MOVE.w proceduremode,D1
000322A2 <AmiBlitz3.ab3@22834>    BEQ.w JUMP_badpenderr
000322A6 <AmiBlitz3.ab3@22835>   MOVE.w #$4EF9,D1
000322AA <AmiBlitz3.ab3@22836>    BSR.w writeword
000322B0 <AmiBlitz3.ab3@22837>    JSR addoff
000322B6 <AmiBlitz3.ab3@22838>   MOVEA.l _execbase,A6
000322B8 <AmiBlitz3.ab3@22839>   MOVEQ.l #$08,D0
000322BA <AmiBlitz3.ab3@22840>   MOVEQ.l #$01,D1
000322C0 <AmiBlitz3.ab3@22842>   MOVE.l mempool,a0
000322C4 <AmiBlitz3.ab3@22843>   JSR _AllocPooled(a6)
000322C6 <AmiBlitz3.ab3@22844>   MOVEA.l D0,A0
000322CC <AmiBlitz3.ab3@22845>   MOVE.l firstpend,(A0)
000322D2 <AmiBlitz3.ab3@22846>   MOVE.l A0,firstpend
000322DA <AmiBlitz3.ab3@22847>   MOVE.l destpointer,$4(A0)
000322DE <AmiBlitz3.ab3@22848> BRA.w writelong
000322E2 <AmiBlitz3.ab3@22852>   BSR.w do_AsmExit
000322E8 <AmiBlitz3.ab3@22853> JMP get1bytemain
000322F0 <AmiBlitz3.ab3@22857>   MOVE.b #1,nostringopt
000322F4 <AmiBlitz3.ab3@22858>   MOVEM.l a0/a1/d1,-(a7)
000322FA <AmiBlitz3.ab3@22859>   MOVEA.l currentfunction,A0
00032300 <AmiBlitz3.ab3@22860>     CMP.l #0,a0
00032304 <AmiBlitz3.ab3@22861>     BNE 'l1
0003230A <AmiBlitz3.ab3@22862>     JMP errorasmexit
0003230C <AmiBlitz3.ab3@22863> 'l1 MOVEQ.l #$00,D2
00032310 <AmiBlitz3.ab3@22864>   MOVE.b $5(A0),D2
00032314 <AmiBlitz3.ab3@22865>   BSR.w eval
0003231A <AmiBlitz3.ab3@22867>   MOVEA.l currentfunction,A0
0003231E <AmiBlitz3.ab3@22868>   MOVE.l funcstruct_returntype(a0),a0
00032324 <AmiBlitz3.ab3@22869>   CMP.l #0,a0
00032328 <AmiBlitz3.ab3@22870>   BEQ 'isstatement
00032330 <AmiBlitz3.ab3@22871>   CMP.l #$100,4(a0)
00032334 <AmiBlitz3.ab3@22872>   BLT.w 'isvar
00032336 <AmiBlitz3.ab3@22873>   MOVE.l a2,a1
0003233C <AmiBlitz3.ab3@22874>   TST.l typetocast
00032340 <AmiBlitz3.ab3@22875>   BEQ 'nocast
00032346 <AmiBlitz3.ab3@22876>   MOVE.l typetocast,a1
00032348 <AmiBlitz3.ab3@22877> 'nocast  CMP.l a0,a1
0003234C <AmiBlitz3.ab3@22878>   BEQ 'ok
00032352 <AmiBlitz3.ab3@22879>   CLR.l typetocast
00032358 <AmiBlitz3.ab3@22880>   MOVE.l lasttoken,d1
0003235C <AmiBlitz3.ab3@22881>   CMP.w #$b581,d1                   ; ok, when token for null
00032360 <AmiBlitz3.ab3@22882>   BEQ 'isnull
00032366 <AmiBlitz3.ab3@22883> 'error  JMP errorconvertreturntype
0003236A <AmiBlitz3.ab3@22890>   MOVEM.l (a7)+,a0/a1/d1
0003236E <AmiBlitz3.ab3@22891> BRA.w do_AsmExit
00032374 <AmiBlitz3.ab3@22893> error_convert_types2 JMP error_convert_types
0003237A <AmiBlitz3.ab3@22906>   TST.b debugmode
0003237E <AmiBlitz3.ab3@22907>    BEQ.w JL_0_D2CA
00032382 <AmiBlitz3.ab3@22908>   MOVE.w #$C305,D1
00032386 <AmiBlitz3.ab3@22909> BRA.w Atokejsr
0003238A <AmiBlitz3.ab3@22912>   MOVE.w #$4E75,D1
0003238E <AmiBlitz3.ab3@22913> BRA.w writeword
00032392 <AmiBlitz3.ab3@22916> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032396 <AmiBlitz3.ab3@22917> proclocals:  Ds.l 1                                        ;for debugga!
00032398 <AmiBlitz3.ab3@22918> procnum:     Ds.w 1
0003239A <AmiBlitz3.ab3@22919> procnum2:    Ds.w 1
0003239E <AmiBlitz3.ab3@22920> prolineat:   Ds.l 1
000323A4 <AmiBlitz3.ab3@22924>    TST.w proceduremode
000323A8 <AmiBlitz3.ab3@22925>    BGT JUMP_sreterr
000323AC <AmiBlitz3.ab3@22926>    CMP.w #-$7FF9,D0
000323B0 <AmiBlitz3.ab3@22927>    BEQ.w JL_0_D29C
000323B2 <AmiBlitz3.ab3@22928>    MOVEQ.l #-$01,D1
000323B6 <AmiBlitz3.ab3@22929> BRA.w do_function2
000323BC <AmiBlitz3.ab3@22932> JMP sreterr
000323C2 <AmiBlitz3.ab3@22936>   CLR.b skipfunc
000323C8 <AmiBlitz3.ab3@22937>   TST.l unusedfunc
000323CC <AmiBlitz3.ab3@22938>   BEQ 'ex
000323D0 <AmiBlitz3.ab3@22939>   MOVEM.l d0-d7/a0-a6,-(a7)
000323D6 <AmiBlitz3.ab3@22940>   MOVE.l unusedfunc,d1
000323DC <AmiBlitz3.ab3@22941>   LEA ptr_parameterstore,a5
000323DE <AmiBlitz3.ab3@22944>   MOVE.l d1,a0
000323E2 <AmiBlitz3.ab3@22945>   LEA 12(a0),a2
000323E4 <AmiBlitz3.ab3@22946>   MOVE.l a5,a1
000323E6 <AmiBlitz3.ab3@22948>   CMPM.b (a1)+,(a2)+
000323EA <AmiBlitz3.ab3@22949>   BNE 'neq
000323EC <AmiBlitz3.ab3@22950>   TST.b (a2)
000323F0 <AmiBlitz3.ab3@22951>   BNE 'ch
000323F2 <AmiBlitz3.ab3@22952>   TST.b (a1)
000323F6 <AmiBlitz3.ab3@22953>   BNE 'neq
000323FE <AmiBlitz3.ab3@22954>   MOVE.b #1,skipfunc
00032402 <AmiBlitz3.ab3@22955> BRA 'out
00032404 <AmiBlitz3.ab3@22958>   MOVE.l (a0),d1
00032408 <AmiBlitz3.ab3@22959>   BNE 'ag
0003240C <AmiBlitz3.ab3@22962>   MOVEM.l (a7)+,d0-d7/a0-a6
0003240E <AmiBlitz3.ab3@22965> RTS
00032414 <AmiBlitz3.ab3@22969> JMP dupprocerr
0003241A <AmiBlitz3.ab3@22972> JMP illprocperr
00032422 <AmiBlitz3.ab3@22979>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00032426 <AmiBlitz3.ab3@22980>    BEQ JUMP_sreterr
0003242A <AmiBlitz3.ab3@22981>   CMP.w #-$7FF9,D0
0003242E <AmiBlitz3.ab3@22982>    BEQ.w do_function_return
00032438 <AmiBlitz3.ab3@22985>   MOVE.w oldqflag,instringon
0003243E <AmiBlitz3.ab3@22986>   MOVEA.l lastsourcepos,A5
00032444 <AmiBlitz3.ab3@22987>   JSR getfunctionreturntype
0003244A <AmiBlitz3.ab3@22988>   JSR get1bytemain
00032450 <AmiBlitz3.ab3@22991>   TST.b declare
00032454 <AmiBlitz3.ab3@22992>   BEQ 'l1
0003245C <AmiBlitz3.ab3@22993>   MOVE.b #1,nowdeclare
00032462 <AmiBlitz3.ab3@22996>   JSR errchx                                           ;writejumpoverfunction
00032468 <AmiBlitz3.ab3@22999>   CLR.b fastfunc
00032472 <AmiBlitz3.ab3@23000>   MOVE.l firstiff,firstiffstore
0003247A <AmiBlitz3.ab3@23001>   CMP.l #"FAST",-1(a5)
0003247E <AmiBlitz3.ab3@23002>   BNE 'nofast
00032484 <AmiBlitz3.ab3@23003>   CMP.b #" ",3(a5)
00032488 <AmiBlitz3.ab3@23004>   BNE 'nofast
0003248A <AmiBlitz3.ab3@23005>   ADDQ.l #3,a5
0003248E <AmiBlitz3.ab3@23008>     CMP.b #" ",(a5)
00032492 <AmiBlitz3.ab3@23009>      BNE 'x1
00032494 <AmiBlitz3.ab3@23010>     ADDQ #1,a5
00032498 <AmiBlitz3.ab3@23011> BRA 'x2
0003249E <AmiBlitz3.ab3@23014>   MOVE.l a5,lastsourcepos
000324A6 <AmiBlitz3.ab3@23015>   MOVE.b #1,fastfunc
000324AE <AmiBlitz3.ab3@23018>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
000324B2 <AmiBlitz3.ab3@23019> BRA 'noopt
000324B8 <AmiBlitz3.ab3@23021>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
000324BC <AmiBlitz3.ab3@23022>   BNE 'noopt
000324BE <AmiBlitz3.ab3@23023>   ADDQ.l #4,a5
000324C2 <AmiBlitz3.ab3@23026>     CMP.b #" ",(a5)
000324C6 <AmiBlitz3.ab3@23027>      BNE 'x1b
000324C8 <AmiBlitz3.ab3@23028>     ADDQ #1,a5
000324CC <AmiBlitz3.ab3@23029> BRA 'x2b
000324D2 <AmiBlitz3.ab3@23032>   MOVE.l a5,lastsourcepos
000324D8 <AmiBlitz3.ab3@23034>   JSR makename2
000324DC <AmiBlitz3.ab3@23035> BRA 'l1
000324E2 <AmiBlitz3.ab3@23039>   JSR makename2
000324E8 <AmiBlitz3.ab3@23040>   JSR checkused
000324EE <AmiBlitz3.ab3@23041>   TST.b skipfunc
000324F2 <AmiBlitz3.ab3@23042>    BEQ 'l1
000324F8 <AmiBlitz3.ab3@23043>   JSR skipme
000324FE <AmiBlitz3.ab3@23044>   CLR.b fastfunc
00032500 <AmiBlitz3.ab3@23045> RTS
0003250A <AmiBlitz3.ab3@23048>   MOVE.l linenumat,prolineat
00032510 <AmiBlitz3.ab3@23049>   ADDQ.w #1,procnum2
00032518 <AmiBlitz3.ab3@23050>   MOVE.w procnum2(PC),procnum
0003251E <AmiBlitz3.ab3@23051>   MOVE.w D1,proceduremode
00032524 <AmiBlitz3.ab3@23052>   CLR.w locvaroff
00032528 <AmiBlitz3.ab3@23053>   CMP.w #$7B,D0
0003252C <AmiBlitz3.ab3@23054>    BNE.w JUMP_syntaxerr
00032534 <AmiBlitz3.ab3@23055>    MOVE.b #1,infunctioncode
0003253A <AmiBlitz3.ab3@23056>   MOVEA.l tempvm,A0
00032542 <AmiBlitz3.ab3@23057>   MOVE.w $C(A0),memlibstat
00032548 <AmiBlitz3.ab3@23058>   BCLR #$7,$C(A0)                                          ;Bit out of range
0003254C <AmiBlitz3.ab3@23059>   MOVE.w #$4EF9,D1
00032550 <AmiBlitz3.ab3@23060>    BSR.w writeword
00032556 <AmiBlitz3.ab3@23061>    JSR addoff
0003255A <AmiBlitz3.ab3@23062>    BSR.w writelong
00032560 <AmiBlitz3.ab3@23063>    JSR findproc                                          ;findproc function
00032564 <AmiBlitz3.ab3@23064>    BEQ.w JUMP_dupprocerr
0003256A <AmiBlitz3.ab3@23065>    JSR addlabel
00032570 <AmiBlitz3.ab3@23066>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032576 <AmiBlitz3.ab3@23067>    MOVE.b #0,isfunc(a2)
0003257E <AmiBlitz3.ab3@23068>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032586 <AmiBlitz3.ab3@23069>   MOVE.l destpointer,$E(A2)
0003258C <AmiBlitz3.ab3@23070>   MOVE.l A2,currentfunction
00032592 <AmiBlitz3.ab3@23071>   LEA nops8,A0
00032598 <AmiBlitz3.ab3@23072>   LEA dataget,A1
0003259C <AmiBlitz3.ab3@23073>    BSR.w pokecode2
000325A2 <AmiBlitz3.ab3@23074>   TST.b debugmode
000325A6 <AmiBlitz3.ab3@23075>    BEQ.b JL_0_D3AA
000325A8 <AmiBlitz3.ab3@23076>   MOVEQ.l #$04,D1
000325AE <AmiBlitz3.ab3@23077>    JSR writetrap
000325B8 <AmiBlitz3.ab3@23078>   MOVE.l destpointer,proclocals
000325BC <AmiBlitz3.ab3@23079>    BSR.w writelong
000325C0 <AmiBlitz3.ab3@23080>    BSR.w writelong
000325C4 <AmiBlitz3.ab3@23083>    LEA $16(A2),A4
000325CC <AmiBlitz3.ab3@23084>   MOVE.b proceduremode+1,$5(A2)
000325CE <AmiBlitz3.ab3@23085>   MOVEQ.l #$00,D6
000325D0 <AmiBlitz3.ab3@23086>   MOVEQ.l #$00,D5
000325D6 <AmiBlitz3.ab3@23087>    JSR get1bytemain
000325DA <AmiBlitz3.ab3@23088>   CMP.w #$7D,D0
000325DE <AmiBlitz3.ab3@23089>    BEQ.w JL_0_D466
000325E2 <AmiBlitz3.ab3@23092>    CMP.b #"@",d0
000325E6 <AmiBlitz3.ab3@23093>    BNE 'l2
000325E8 <AmiBlitz3.ab3@23094>    MOVE.l a0,-(a7)
000325EE <AmiBlitz3.ab3@23095>    MOVE.l currentfunction,a0
000325F4 <AmiBlitz3.ab3@23096>    CMP.b #31,$20(a0)                                       ;increase if morepars
000325F8 <AmiBlitz3.ab3@23097>    BNE 'l1
000325FC <AmiBlitz3.ab3@23098>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032602 <AmiBlitz3.ab3@23101>    JSR get1bytemain
00032604 <AmiBlitz3.ab3@23102>    MOVE.l (a7)+,a0
00032608 <AmiBlitz3.ab3@23105>    BSR.w getparameter
0003260C <AmiBlitz3.ab3@23106>    BSR.w JL_0_8E3C
00032614 <AmiBlitz3.ab3@23107>   CMPI.l #$7,$4(A2)
00032618 <AmiBlitz3.ab3@23108>    BNE.w JL_0_D3F6
0003261E <AmiBlitz3.ab3@23109>   LEA stbuff,A0
00032620 <AmiBlitz3.ab3@23110>   MOVE.w D5,D1
00032622 <AmiBlitz3.ab3@23111>   LSL.w #2,D1
00032626 <AmiBlitz3.ab3@23112>   MOVE.w D6,$0(A0,D1.W)
0003262C <AmiBlitz3.ab3@23113>   MOVE.w $4(A3),$2(A0,D1.W)
0003262E <AmiBlitz3.ab3@23114>   ADDQ.w #1,D5
00032630 <AmiBlitz3.ab3@23115>   MOVEQ.l #$07,D2
00032634 <AmiBlitz3.ab3@23116> BRA.w JL_0_D442
0003263A <AmiBlitz3.ab3@23119> JMP toovarerr
0003263E <AmiBlitz3.ab3@23122>   MOVE.w #$2940,D1
00032640 <AmiBlitz3.ab3@23123>   MOVEQ.l #$03,D2
00032648 <AmiBlitz3.ab3@23124>   BTST #$0,flagmask+1
0003264C <AmiBlitz3.ab3@23125>    BNE.w JL_0_D430
00032654 <AmiBlitz3.ab3@23126>   CMPI.l #$100,$4(A2)
00032658 <AmiBlitz3.ab3@23127>    BCC.w JUMP_illprocperr
0003265C <AmiBlitz3.ab3@23128>   MOVE.w $6(A2),D2
00032660 <AmiBlitz3.ab3@23129>   CMP.w #$2,D2
00032664 <AmiBlitz3.ab3@23130>    BHI.w JL_0_D430
00032668 <AmiBlitz3.ab3@23131>    BEQ.w JL_0_D42C
0003266C <AmiBlitz3.ab3@23132>   EORI.w #$3000,D1
00032670 <AmiBlitz3.ab3@23133> BRA.w JL_0_D430
00032676 <AmiBlitz3.ab3@23136> JMP more6pard
0003267A <AmiBlitz3.ab3@23139>   ORI.w #$1000,D1
0003267C <AmiBlitz3.ab3@23142>   OR.w D6,D1
00032682 <AmiBlitz3.ab3@23143>   TST.b fpu
00032686 <AmiBlitz3.ab3@23144>   BEQ 'nofpu
0003268A <AmiBlitz3.ab3@23145>   CMP.b #5,d2
0003268E <AmiBlitz3.ab3@23146>   BNE 'nofpu
00032692 <AmiBlitz3.ab3@23147>   CMP.w #6,d6
00032696 <AmiBlitz3.ab3@23148>   BLT 'l10a
0003269C <AmiBlitz3.ab3@23149>   CMP.l #newtype_double,a2
000326A0 <AmiBlitz3.ab3@23150>   BEQ JUMP_more6pard
000326A4 <AmiBlitz3.ab3@23151> BRA 'nofpu
000326AA <AmiBlitz3.ab3@23154>   MOVE.l #$f22c6400,d1
000326AE <AmiBlitz3.ab3@23155>   MOVEM.l d0/a4,-(a7)
000326B0 <AmiBlitz3.ab3@23156>   MOVE.l d6,d0
000326B2 <AmiBlitz3.ab3@23157>   ASL.l #7,d0
000326B4 <AmiBlitz3.ab3@23158>   OR.w d0,d1
000326BA <AmiBlitz3.ab3@23159>   CMP.l #newtype_double,a2
000326BE <AmiBlitz3.ab3@23160>   BNE 'l1
000326C4 <AmiBlitz3.ab3@23161>   OR.l #$1000,d1
000326C8 <AmiBlitz3.ab3@23164>   BSR writelong
000326CC <AmiBlitz3.ab3@23165>   MOVE.w 4(a3),d1
000326D0 <AmiBlitz3.ab3@23166>   BSR writeword
000326D4 <AmiBlitz3.ab3@23167>   MOVEM.l (a7)+,a4/d0
000326D8 <AmiBlitz3.ab3@23168> BRA JL_0_D442
000326DA <AmiBlitz3.ab3@23171>   MOVE.l A4,-(A7)
000326DE <AmiBlitz3.ab3@23172>    CMP.w #6,d6
000326E2 <AmiBlitz3.ab3@23173>    BLT 'l10
000326E6 <AmiBlitz3.ab3@23174>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
000326E8 <AmiBlitz3.ab3@23175>    ADD.w d6,d1
000326EE <AmiBlitz3.ab3@23176>    JSR Atokejsr
000326F4 <AmiBlitz3.ab3@23177>    TST.w dontwrite
000326F8 <AmiBlitz3.ab3@23178>    BNE 'l10
000326FE <AmiBlitz3.ab3@23179>    MOVE.l data1start,d1
00032704 <AmiBlitz3.ab3@23180>    MOVE.l destpointer,a4
00032708 <AmiBlitz3.ab3@23181>    ADD.l d1,-6(a4)
0003270E <AmiBlitz3.ab3@23182>    MOVE.l destpointer,d1
00032710 <AmiBlitz3.ab3@23183>    SUBQ.l #6,d1
00032716 <AmiBlitz3.ab3@23184>    SUB.l destbufferstart,d1
00032718 <AmiBlitz3.ab3@23186>    MOVE.l d2,-(a7)
0003271A <AmiBlitz3.ab3@23187>    MOVE.l d1,d2
00032720 <AmiBlitz3.ab3@23188>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032722 <AmiBlitz3.ab3@23189>    MOVE.l (a7)+,d2
00032728 <AmiBlitz3.ab3@23190>    MOVE.l destpointer,a4
0003272C <AmiBlitz3.ab3@23191>    CMP.w #2,d2
00032730 <AmiBlitz3.ab3@23192>    BNE 'nw1
00032736 <AmiBlitz3.ab3@23194>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003273E <AmiBlitz3.ab3@23195>    ADD.l #2,-6(a4)
00032742 <AmiBlitz3.ab3@23198>    CMP.w #1,d2
00032746 <AmiBlitz3.ab3@23199>    BNE 'nb
0003274C <AmiBlitz3.ab3@23200>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032754 <AmiBlitz3.ab3@23201>    ADD.l #3,-6(a4)
0003275A <AmiBlitz3.ab3@23204>    MOVE.w $4(a3),-2(a4)
0003275E <AmiBlitz3.ab3@23205> BRA 'ne1
00032762 <AmiBlitz3.ab3@23208>   BSR.w writeword                                          ;write storeparameter
00032766 <AmiBlitz3.ab3@23211>   MOVE.w $4(A3),D1
0003276A <AmiBlitz3.ab3@23212>    BSR.w writeword
0003276C <AmiBlitz3.ab3@23215>   MOVEA.l (A7)+,A4
00032772 <AmiBlitz3.ab3@23218>   CLR.l functionreturntype
00032774 <AmiBlitz3.ab3@23219>   ADDQ.w #1,D6
00032778 <AmiBlitz3.ab3@23220>   CMP.w #11,D6                                             ;max function parameters
0003277C <AmiBlitz3.ab3@23221>    BCC.w JUMP_toovarerr
00032782 <AmiBlitz3.ab3@23222>   MOVE.l currentfunction,a0
00032786 <AmiBlitz3.ab3@23223>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032788 <AmiBlitz3.ab3@23224>   MOVE.b D2,(A4)+
0003278C <AmiBlitz3.ab3@23225>   CMP.w #$2C,D0
00032790 <AmiBlitz3.ab3@23226>    BNE.w JL_0_D45E
00032796 <AmiBlitz3.ab3@23227>    JSR get1bytemain
0003279A <AmiBlitz3.ab3@23239> BRA.w JL_0_D3C6
0003279E <AmiBlitz3.ab3@23242>   CMP.w #$7D,D0
000327A2 <AmiBlitz3.ab3@23243>    BNE.w JUMP_syntaxerr
000327A8 <AmiBlitz3.ab3@23246>   MOVEA.l currentfunction,A2
000327AA <AmiBlitz3.ab3@23247>   LSL.w #4,D5
000327AC <AmiBlitz3.ab3@23248>   OR.w D5,D6
000327B0 <AmiBlitz3.ab3@23249>   MOVE.b D6,$4(A2)
000327B2 <AmiBlitz3.ab3@23250>   LSR.w #4,D6
000327B6 <AmiBlitz3.ab3@23251>    BEQ.w JL_0_D4C4
000327BC <AmiBlitz3.ab3@23252>   LEA stbuff,A0
000327BE <AmiBlitz3.ab3@23253>   SUBQ.w #1,D6
000327C0 <AmiBlitz3.ab3@23256>     MOVE.w D6,D1                                           ;function stringpars
000327C2 <AmiBlitz3.ab3@23257>     LSL.w #2,D1                                            ;stringsize was 2
000327C4 <AmiBlitz3.ab3@23259>       LSL.w #1,d1
000327C6 <AmiBlitz3.ab3@23260>       ADDQ.w #4,d1
000327C8 <AmiBlitz3.ab3@23262>     ADDQ.w #8,D1
000327CE <AmiBlitz3.ab3@23263>     MOVE.w D1,funcst+2
000327D4 <AmiBlitz3.ab3@23264>     MOVE.l funcst,D1
000327D8 <AmiBlitz3.ab3@23265>     BSR.w writelong
000327DA <AmiBlitz3.ab3@23266>     MOVE.w (A0)+,D1
000327DE <AmiBlitz3.ab3@23267>     CMP.b #5,d1
000327E2 <AmiBlitz3.ab3@23268>     BLE 's1
000327E6 <AmiBlitz3.ab3@23269>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
000327EA <AmiBlitz3.ab3@23270>     BSR writeinstruction
000327EC <AmiBlitz3.ab3@23271>     MOVE.w D6,D1                                           ;function stringpars
000327EE <AmiBlitz3.ab3@23272>     LSL.w #2,D1                                            ;stringsize was 2
000327F0 <AmiBlitz3.ab3@23274>       LSL.w #1,d1
000327F2 <AmiBlitz3.ab3@23276>     ADDQ.w #8,D1
000327F6 <AmiBlitz3.ab3@23277>     BSR writeword
000327FA <AmiBlitz3.ab3@23278>   BRA 's2
00032800 <AmiBlitz3.ab3@23281>     OR.w movedna3,D1
00032804 <AmiBlitz3.ab3@23282>      BSR.w writeword
0003280A <AmiBlitz3.ab3@23285>     MOVE.w (A0)+,least+2
00032810 <AmiBlitz3.ab3@23286>     MOVE.l least,D1
00032814 <AmiBlitz3.ab3@23287>      BSR.w writelong
00032816 <AmiBlitz3.ab3@23288>     MOVE.l A0,-(A7)
0003281A <AmiBlitz3.ab3@23289>     MOVE.w #$C700,D1
0003281E <AmiBlitz3.ab3@23290>      BSR.w Atokejsr
00032820 <AmiBlitz3.ab3@23291>     MOVEA.l (A7)+,A0
00032824 <AmiBlitz3.ab3@23292>   DBF D6,JL_0_D482
0003282A <AmiBlitz3.ab3@23295> JMP get1bytemain
00032830 <AmiBlitz3.ab3@23299>   MOVE.w dontwrite,D1
00032834 <AmiBlitz3.ab3@23300>    BNE.w JL_0_D4F6
0003283A <AmiBlitz3.ab3@23301>   MOVE.l destpointer,-(A7)
00032840 <AmiBlitz3.ab3@23302>   MOVE.l A0,destpointer
00032846 <AmiBlitz3.ab3@23303>   MOVE.l linksize,D1
0003284A <AmiBlitz3.ab3@23304>    BSR.w writelong                                         ;writefunctions jumppos
00032850 <AmiBlitz3.ab3@23305>    TST.b fastfunc
00032854 <AmiBlitz3.ab3@23306>    BNE 'skip
00032858 <AmiBlitz3.ab3@23307>   MOVE.w #$CC00,D1
0003285C <AmiBlitz3.ab3@23308>    BSR.w tokejsr2                                          ;write clearvars
00032862 <AmiBlitz3.ab3@23311>   MOVE.l (A7)+,destpointer
00032864 <AmiBlitz3.ab3@23314> RTS
0003286A <AmiBlitz3.ab3@23318>   MOVEA.l currentfunction,A2
0003286E <AmiBlitz3.ab3@23319>   MOVEA.l $E(A2),A0
00032872 <AmiBlitz3.ab3@23320>   MOVE.w $6(A2),D1
00032876 <AmiBlitz3.ab3@23321>    BEQ.w JL_0_D538
0003287C <AmiBlitz3.ab3@23322>   MOVE.w D1,linksize+2
00032880 <AmiBlitz3.ab3@23323>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032884 <AmiBlitz3.ab3@23324>    BNE.w JL_0_D522
00032886 <AmiBlitz3.ab3@23325>   ADDQ.w #6,A0
0003288A <AmiBlitz3.ab3@23326>   MOVE.l A0,$E(A2)
0003288E <AmiBlitz3.ab3@23327> BRA.w JL_0_D4C8
00032890 <AmiBlitz3.ab3@23330>   MOVE.l A0,-(A7)
00032894 <AmiBlitz3.ab3@23331>    BSR.w JL_0_D4C8
00032896 <AmiBlitz3.ab3@23332>   MOVEA.l (A7)+,A0
0003289A <AmiBlitz3.ab3@23333>   LEA $A(A0),A0
000328A0 <AmiBlitz3.ab3@23334>   MOVEA.l currentfunction,A2
000328A4 <AmiBlitz3.ab3@23335> BRA.w JL_0_D54A
000328A8 <AmiBlitz3.ab3@23338>   MOVE.w $8(A2),D1
000328AC <AmiBlitz3.ab3@23339>    BNE.w JL_0_D54A
000328B0 <AmiBlitz3.ab3@23340>   LEA $10(A0),A0
000328B4 <AmiBlitz3.ab3@23341>   MOVE.l A0,$E(A2)
000328B6 <AmiBlitz3.ab3@23342> RTS
000328BC <AmiBlitz3.ab3@23346> JMP errormsg_nofast
000328C2 <AmiBlitz3.ab3@23349>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
000328C6 <AmiBlitz3.ab3@23350>    BNE.w JL_0_D580
000328CC <AmiBlitz3.ab3@23351>    TST.b fastfunc
000328D0 <AmiBlitz3.ab3@23352>    BNE JUMP_errormsg_nofast
000328D6 <AmiBlitz3.ab3@23353>   MOVE.l destpointer,-(A7)
000328DC <AmiBlitz3.ab3@23354>   MOVE.l A0,destpointer
000328E0 <AmiBlitz3.ab3@23355>   MOVE.w #$4EB9,D1
000328E4 <AmiBlitz3.ab3@23356>    BSR.w writeword
000328EA <AmiBlitz3.ab3@23357>    JSR addoff
000328EE <AmiBlitz3.ab3@23358>    BSR.w writelong
000328F0 <AmiBlitz3.ab3@23359>   MOVEA.l (A7)+,A0
000328F6 <AmiBlitz3.ab3@23360>   MOVEA.l destpointer,A1
000328F8 <AmiBlitz3.ab3@23361>   MOVE.l A0,-(A1)
000328FE <AmiBlitz3.ab3@23362>   MOVE.l A0,destpointer
00032902 <AmiBlitz3.ab3@23365>   MOVE.w $8(A2),D4
00032906 <AmiBlitz3.ab3@23366>    BPL.w JL_0_D59E
0003290A <AmiBlitz3.ab3@23367>   MOVE.w #$C004,D1
0003290E <AmiBlitz3.ab3@23368>    BSR.w tokejsr2
00032914 <AmiBlitz3.ab3@23369>   MOVEA.l currentfunction,A2
00032918 <AmiBlitz3.ab3@23370>   MOVE.w $8(A2),D4
0003291C <AmiBlitz3.ab3@23371>   ANDI.w #$7FFF,D4
00032920 <AmiBlitz3.ab3@23374>    BEQ.w JL_0_D5E0
00032924 <AmiBlitz3.ab3@23375>   MOVE.b $4(A2),D1
00032928 <AmiBlitz3.ab3@23376>   ANDI.w #$F,D1
0003292A <AmiBlitz3.ab3@23377>   MOVE.w D1,-(A7)
0003292E <AmiBlitz3.ab3@23378>   CMP.w #$5,D1
00032932 <AmiBlitz3.ab3@23379>    BCS.w JL_0_D5BC
00032936 <AmiBlitz3.ab3@23380>   MOVE.w #$2F04,D1
0003293A <AmiBlitz3.ab3@23381>    BSR.w writeword
00032940 <AmiBlitz3.ab3@23384>   MOVE.l locdatast,D3
00032946 <AmiBlitz3.ab3@23385>    JSR datastart
0003294A <AmiBlitz3.ab3@23386>   MOVE.w #$C501,D1
0003294E <AmiBlitz3.ab3@23387>    BSR.w tokejsr2
00032950 <AmiBlitz3.ab3@23388>   MOVE.w (A7)+,D1
00032954 <AmiBlitz3.ab3@23389>   CMP.w #$5,D1
00032958 <AmiBlitz3.ab3@23390>    BCS.w JL_0_D5E0
0003295C <AmiBlitz3.ab3@23391>   MOVE.w #$281F,D1
00032960 <AmiBlitz3.ab3@23392>    BSR.w writeword
00032964 <AmiBlitz3.ab3@23394>   MOVE.w #$4E75,D1
00032968 <AmiBlitz3.ab3@23395> BRA.w writeword
0003296E <AmiBlitz3.ab3@23399>   LEA mwait,A0
00032974 <AmiBlitz3.ab3@23400>   LEA mwaitf,A1
00032978 <AmiBlitz3.ab3@23401> BRA.w pokecode
0003297E <AmiBlitz3.ab3@23405> JMP laberr
00032982 <AmiBlitz3.ab3@23408>   CMP.w #$2E,D0
00032986 <AmiBlitz3.ab3@23409>   BNE.w JUMP_syntaxerr
0003298C <AmiBlitz3.ab3@23410>   JSR getparameter2
00032990 <AmiBlitz3.ab3@23411>   BEQ.w JUMP_laberr
00032996 <AmiBlitz3.ab3@23412>   LEA newtypebase,A2
0003299C <AmiBlitz3.ab3@23413>   JSR findtype
000329A0 <AmiBlitz3.ab3@23414>   BNE.w JL_0_D626
000329A8 <AmiBlitz3.ab3@23415>   CMPI.l #MaxByte,$4(A2)
000329AC <AmiBlitz3.ab3@23416>   BNE.w JUMP_typeerr
000329B0 <AmiBlitz3.ab3@23417> BRA.w JL_0_D62A
000329B6 <AmiBlitz3.ab3@23420> JMP typeerr
000329BC <AmiBlitz3.ab3@23423>   JSR addlabel
000329C0 <AmiBlitz3.ab3@23426>   CLR.l $4(A2)
000329C6 <AmiBlitz3.ab3@23427>   MOVE.l A2,thistype
000329CC <AmiBlitz3.ab3@23428>   CLR.l prevtype
000329D2 <AmiBlitz3.ab3@23429>   CLR.w typelen
000329D8 <AmiBlitz3.ab3@23430>   CLR.w linemode
000329DE <AmiBlitz3.ab3@23431>   JSR reget
000329E2 <AmiBlitz3.ab3@23432>   BNE.w typemode
000329E4 <AmiBlitz3.ab3@23433> RTS
000329E8 <AmiBlitz3.ab3@23436>   CMP.w #-$7FFE,D0
000329EC <AmiBlitz3.ab3@23437>   BEQ.w JL_0_D82E
000329F6 <AmiBlitz3.ab3@23439>   MOVE.w oldqflag,instringon
000329FC <AmiBlitz3.ab3@23440>   MOVEA.l lastsourcepos,A5
000329FE <AmiBlitz3.ab3@23441>   MOVEQ.l #$00,D6
00032A02 <AmiBlitz3.ab3@23442>   CMP.w #$2A,D0
00032A06 <AmiBlitz3.ab3@23443>   BNE.w JL_0_D670
00032A08 <AmiBlitz3.ab3@23444>   MOVEQ.l #$01,D6
00032A0E <AmiBlitz3.ab3@23445>   JSR get1bytemain
00032A12 <AmiBlitz3.ab3@23446> BRA.w JL_0_D67E
00032A16 <AmiBlitz3.ab3@23449>   CMP.w #$40,D0
00032A1A <AmiBlitz3.ab3@23450>   BNE.w JL_0_D67E
00032A1C <AmiBlitz3.ab3@23451>   MOVEQ.l #$05,D6
00032A22 <AmiBlitz3.ab3@23452>   JSR get1bytemain
00032A28 <AmiBlitz3.ab3@23455>   MOVE.w D6,flagmask
00032A2E <AmiBlitz3.ab3@23456>   JSR getparameter2
00032A32 <AmiBlitz3.ab3@23457>   BEQ.w JUMP_syntaxerr
00032A38 <AmiBlitz3.ab3@23458>   MOVEA.l thistype,A2
00032A3A <AmiBlitz3.ab3@23459>   ADDQ.w #4,A2
00032A40 <AmiBlitz3.ab3@23460>   JSR findvariable2
00032A44 <AmiBlitz3.ab3@23461>   BEQ.w JUMP_dupofferr
00032A4A <AmiBlitz3.ab3@23462>   JSR addlabel
00032A4C <AmiBlitz3.ab3@23463>   MOVE.l A2,-(A7)
00032A50 <AmiBlitz3.ab3@23464>   CMP.w #$2E,D0
00032A54 <AmiBlitz3.ab3@23465>    BEQ.w JL_0_D6CE
00032A58 <AmiBlitz3.ab3@23466>   CMP.w #$24,D0
00032A5C <AmiBlitz3.ab3@23467>    BNE.w JL_0_D6C0
00032A62 <AmiBlitz3.ab3@23468>   MOVE.l #newtype_string,D2
00032A68 <AmiBlitz3.ab3@23469>    JSR get1bytemain
00032A6C <AmiBlitz3.ab3@23470> BRA.w JL_0_D710
00032A72 <AmiBlitz3.ab3@23473> JMP dupofferr
00032A78 <AmiBlitz3.ab3@23476>   MOVE.l prevtype,D2
00032A7C <AmiBlitz3.ab3@23477>   BEQ.w JUMP_notypeerr
00032A80 <AmiBlitz3.ab3@23478> BRA.w JL_0_D706
00032A86 <AmiBlitz3.ab3@23481> JMP notypeerr
00032A8C <AmiBlitz3.ab3@23484>   JSR getparameter2
00032A90 <AmiBlitz3.ab3@23485>    BEQ.w JUMP_syntaxerr
00032A96 <AmiBlitz3.ab3@23486>   LEA newtypebase,A2
00032A9C <AmiBlitz3.ab3@23487>    JSR findtype
00032AA0 <AmiBlitz3.ab3@23488>    BEQ.w JL_0_D704
00032AA8 <AmiBlitz3.ab3@23489>   BTST #$0,flagmask+1
00032AAC <AmiBlitz3.ab3@23490>    BEQ.w JUMP_notypeerr
00032AB2 <AmiBlitz3.ab3@23491>   JSR addlabel
00032ABA <AmiBlitz3.ab3@23494>   MOVE.w linenumat+2,$8(A2)
00032AC2 <AmiBlitz3.ab3@23495>   MOVE.l #MaxByte,$4(A2)
00032AC4 <AmiBlitz3.ab3@23498>   MOVE.l A2,D2
00032ACA <AmiBlitz3.ab3@23501>   CMP.l #newtype_byte,D2
00032ACE <AmiBlitz3.ab3@23502>    BEQ.w JL_0_D71E
00032AD4 <AmiBlitz3.ab3@23505>   ADDQ.w #1,typelen
00032ADC <AmiBlitz3.ab3@23506>   BCLR #$0,typelen+1
00032ADE <AmiBlitz3.ab3@23509>   MOVEQ.l #$00,D3
00032AE0 <AmiBlitz3.ab3@23510>   MOVEA.l D2,A2
00032AE6 <AmiBlitz3.ab3@23511>   MOVE.l A2,prevtype
00032AEA <AmiBlitz3.ab3@23512>   MOVE.w $8(A2),D3
00032AEC <AmiBlitz3.ab3@23513>   MOVEA.l (A7)+,A2
00032AF0 <AmiBlitz3.ab3@23514>   MOVE.l D2,$A(A2)
00032AF2 <AmiBlitz3.ab3@23515>   MOVEQ.l #$00,D4
00032AF8 <AmiBlitz3.ab3@23516>   MOVE.w typelen,D4
00032AFC <AmiBlitz3.ab3@23517>   MOVE.w D4,$4(A2)
00032B04 <AmiBlitz3.ab3@23518>   BTST #$0,flagmask+1
00032B08 <AmiBlitz3.ab3@23519>    BEQ.w JL_0_D74C
00032B0A <AmiBlitz3.ab3@23520>   MOVEQ.l #$04,D3
00032B0E <AmiBlitz3.ab3@23523>   CMP.w #$5B,D0
00032B12 <AmiBlitz3.ab3@23524>    BNE.w JL_0_D782
00032B16 <AmiBlitz3.ab3@23525>   MOVEM.l D3-D4/A2,-(A7)
00032B1A <AmiBlitz3.ab3@23526>    BSR.w AJL_0_BF6E
00032B1E <AmiBlitz3.ab3@23527>   CMP.w #$5D,D0
00032B22 <AmiBlitz3.ab3@23528>    BNE.w JUMP_syntaxerr
00032B24 <AmiBlitz3.ab3@23529>   TST.w D6
00032B28 <AmiBlitz3.ab3@23530>    BNE.w JUMP_fpconerr
00032B2A <AmiBlitz3.ab3@23531>   MOVE.l D3,D1
00032B2E <AmiBlitz3.ab3@23532>   MOVEM.l (A7)+,D3-D4/A2
00032B34 <AmiBlitz3.ab3@23533>    JSR get1bytemain
00032B38 <AmiBlitz3.ab3@23534>   MOVE.w D1,$8(A2)
00032B3C <AmiBlitz3.ab3@23535>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00032B44 <AmiBlitz3.ab3@23536>   ORI.w #$2,flagmask
00032B46 <AmiBlitz3.ab3@23539>   ADD.l D3,D4
00032B4C <AmiBlitz3.ab3@23542>     CMP.l #65532,d4
00032B50 <AmiBlitz3.ab3@23547>   BCC JUMP_toolongerr
00032B58 <AmiBlitz3.ab3@23548>   MOVE.w flagmask,$6(A2)
00032B5E <AmiBlitz3.ab3@23549>   MOVE.w D4,typelen
00032B60 <AmiBlitz3.ab3@23550> RTS
00032B66 <AmiBlitz3.ab3@23553> JMP badenderr
00032B6C <AmiBlitz3.ab3@23556> JMP noiferr
00032B72 <AmiBlitz3.ab3@23559> JMP toolongerr
00032B78 <AmiBlitz3.ab3@23562> JMP fpconerr
00032B7E <AmiBlitz3.ab3@23565>   MOVE.l firstiff,D0
00032B82 <AmiBlitz3.ab3@23566>    BEQ.w JUMP_noiferr
00032B84 <AmiBlitz3.ab3@23567>   MOVEA.l D0,A0
00032B88 <AmiBlitz3.ab3@23568>   MOVE.w $C(A0),D0
00032B8C <AmiBlitz3.ab3@23569>   ANDI.w #$FF,D0
00032B8E <AmiBlitz3.ab3@23570>   CMP.w D0,D1
00032B92 <AmiBlitz3.ab3@23571>    BNE.w JUMP_badenderr
00032B96 <AmiBlitz3.ab3@23574>   CMP.w #$1,D1
00032B9A <AmiBlitz3.ab3@23575>   BNE.w JL_0_D7D8
00032B9E <AmiBlitz3.ab3@23576>   MOVE.w #$6000,D1
00032BA4 <AmiBlitz3.ab3@23579>     TST.b fast
00032BA8 <AmiBlitz3.ab3@23580>     BEQ 'l1
00032BAE <AmiBlitz3.ab3@23581>     OR.l #$ff,d1
00032BB2 <AmiBlitz3.ab3@23585>   BSR.w writeword
00032BB8 <AmiBlitz3.ab3@23586>   MOVEA.l destpointer,A1
00032BBC <AmiBlitz3.ab3@23587>   MOVE.l $4(A0),D1
00032BBE <AmiBlitz3.ab3@23588>   SUB.l A1,D1
00032BC4 <AmiBlitz3.ab3@23591>     TST.b fast
00032BC8 <AmiBlitz3.ab3@23592>     BEQ 'l2
00032BCC <AmiBlitz3.ab3@23593>     BSR writelong
00032BD0 <AmiBlitz3.ab3@23594>   BRA JL_0_D7D8
00032BD4 <AmiBlitz3.ab3@23598>   BSR.w writeword
00032BD8 <AmiBlitz3.ab3@23601>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00032BDE <AmiBlitz3.ab3@23602>   MOVE.l destpointer,D1
00032BE0 <AmiBlitz3.ab3@23603>   SUB.l A1,D1
00032BE6 <AmiBlitz3.ab3@23606>     TST.b fast
00032BEA <AmiBlitz3.ab3@23607>     BEQ 'l1
00032BEC <AmiBlitz3.ab3@23608>     ADDQ.l #4,D1
00032BF2 <AmiBlitz3.ab3@23609>     MOVE.w dontwrite,D0
00032BF6 <AmiBlitz3.ab3@23610>     BNE.w JL_0_D7FE
00032BFA <AmiBlitz3.ab3@23611>     MOVE.l d1,-$4(a1)
00032BFE <AmiBlitz3.ab3@23612>   BRA JL_0_D7FE
00032C00 <AmiBlitz3.ab3@23616>   ADDQ.l #2,d1
00032C06 <AmiBlitz3.ab3@23617>   TST.w dontwrite
00032C0A <AmiBlitz3.ab3@23618>   BNE JL_0_D7FE
00032C10 <AmiBlitz3.ab3@23619>   CMP.l #MinWordSgnd,D1
00032C14 <AmiBlitz3.ab3@23620>   BCC.w JUMP_bigiferr
00032C18 <AmiBlitz3.ab3@23621>   MOVE.w D1,-$2(A1)
00032C1A <AmiBlitz3.ab3@23624> RTS
00032C20 <AmiBlitz3.ab3@23627> JMP bigiferr
00032C2A <AmiBlitz3.ab3@23632>   MOVE.w oldqflag,instringon
00032C30 <AmiBlitz3.ab3@23633>   MOVEA.l lastsourcepos,A5
00032C32 <AmiBlitz3.ab3@23636>   MOVEQ.l #$01,D1
00032C36 <AmiBlitz3.ab3@23637> BRA.w JL_0_D810
00032C40 <AmiBlitz3.ab3@23641>   MOVE.w oldqflag,instringon
00032C46 <AmiBlitz3.ab3@23642>   MOVEA.l lastsourcepos,A5
00032C48 <AmiBlitz3.ab3@23645>   MOVEQ.l #$00,D1
00032C4C <AmiBlitz3.ab3@23648>   BSR.w JL_0_D79E
00032C50 <AmiBlitz3.ab3@23649>   BSR.w AJL_0_D81C
00032C56 <AmiBlitz3.ab3@23650> JMP get1bytemain
00032C5C <AmiBlitz3.ab3@23653>   MOVE.l (A0),firstiff
00032C5E <AmiBlitz3.ab3@23654>   MOVEA.l A0,A1
00032C60 <AmiBlitz3.ab3@23655>   MOVEQ.l #$0E,D0
00032C66 <AmiBlitz3.ab3@23656>   MOVEA.l _execbase,A6
00032C6C <AmiBlitz3.ab3@23657>   MOVE.l mempool,a0
00032C70 <AmiBlitz3.ab3@23658> JMP _FreePooled(A6)
00032C76 <AmiBlitz3.ab3@23662>   JSR get1bytemain
00032C7A <AmiBlitz3.ab3@23665>   BEQ.w JL_0_D980
00032C82 <AmiBlitz3.ab3@23666>   CMP.l #"noa7",-1(a5)
00032C86 <AmiBlitz3.ab3@23667>   BNE 'l1
00032C8C <AmiBlitz3.ab3@23668>   JSR get1bytemain
00032C92 <AmiBlitz3.ab3@23669>   JSR get1bytemain
00032C98 <AmiBlitz3.ab3@23670>   JSR get1bytemain
00032CA0 <AmiBlitz3.ab3@23671>   MOVE.w #$3a,lastchar
00032CA4 <AmiBlitz3.ab3@23672> BRA JL_0_D980
00032CAA <AmiBlitz3.ab3@23675>   CMP.w #"d0",-1(a5)
00032CAE <AmiBlitz3.ab3@23676>   BNE 'l2
00032CB6 <AmiBlitz3.ab3@23677>   MOVE.b #1,returncode
00032CBC <AmiBlitz3.ab3@23678>   CLR.w lastchar
00032CC0 <AmiBlitz3.ab3@23679> BRA JL_0_D980
00032CC4 <AmiBlitz3.ab3@23682>   CMP.w #$80d7,d0
00032CC8 <AmiBlitz3.ab3@23683>   BNE JL_0_D836
00032CCE <AmiBlitz3.ab3@23684>   JSR skiprest
00032CD0 <AmiBlitz3.ab3@23685> RTS
00032CD4 <AmiBlitz3.ab3@23688>   BSR.w JL_0_D844
00032CDA <AmiBlitz3.ab3@23689>   JSR reget
00032CDE <AmiBlitz3.ab3@23690>   BNE.w JL_0_D836
00032CE0 <AmiBlitz3.ab3@23691> RTS
00032CE4 <AmiBlitz3.ab3@23694>   CMP.w #-$7FFF,D0
00032CE8 <AmiBlitz3.ab3@23695>    BNE.w JL_0_D87E
00032CEE <AmiBlitz3.ab3@23696>   MOVE.w linemode,D1
00032CF2 <AmiBlitz3.ab3@23697>    BNE.w JUMP_modeerr
00032CF8 <AmiBlitz3.ab3@23698>   ADDQ.w #1,typelen
00032D00 <AmiBlitz3.ab3@23699>   BCLR #$0,typelen+1
00032D06 <AmiBlitz3.ab3@23700>   MOVEA.l thistype,A0
00032D0E <AmiBlitz3.ab3@23701>   MOVE.w typelen,$8(A0)
00032D16 <AmiBlitz3.ab3@23702>   MOVE.w #$FFFF,linemode
00032D1C <AmiBlitz3.ab3@23703> JMP get1bytemain
00032D22 <AmiBlitz3.ab3@23706> JMP modeerr
00032D26 <AmiBlitz3.ab3@23709>   CMP.w #-$7FF5,D0
00032D2A <AmiBlitz3.ab3@23710>    BEQ.w JL_0_D80E
00032D2E <AmiBlitz3.ab3@23711>   CMP.w #-$7FF4,D0
00032D32 <AmiBlitz3.ab3@23712>    BEQ.w JL_0_D804
00032D36 <AmiBlitz3.ab3@23713>   CMP.w #-$7FF8,D0
00032D3A <AmiBlitz3.ab3@23714>    BNE.w JL_0_D89A
00032D3E <AmiBlitz3.ab3@23717> BRA.w JL_0_D9E8
00032D44 <AmiBlitz3.ab3@23720> JMP interr3
00032D48 <AmiBlitz3.ab3@23723>   CMP.w #-$7FF7,D0
00032D4C <AmiBlitz3.ab3@23724>    BNE.w JL_0_D8C8
00032D52 <AmiBlitz3.ab3@23725>    TST.b fpu
00032D56 <AmiBlitz3.ab3@23726>    BEQ 'nof
00032D5C <AmiBlitz3.ab3@23727>    MOVEA.l currentfunction,A0
00032D62 <AmiBlitz3.ab3@23728>    CMP.l #0,a0
00032D66 <AmiBlitz3.ab3@23729>    BEQ 'nof
00032D6C <AmiBlitz3.ab3@23730>    CMP.b #5,$5(a0)
00032D70 <AmiBlitz3.ab3@23731>     BNE 'nof
00032D76 <AmiBlitz3.ab3@23732>    MOVE.l #$f23c5000,d1
00032D7A <AmiBlitz3.ab3@23733>    BSR writelong
00032D7E <AmiBlitz3.ab3@23734>    MOVE.w #0,d1
00032D82 <AmiBlitz3.ab3@23735>    BSR writeword
00032D86 <AmiBlitz3.ab3@23738>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00032D8A <AmiBlitz3.ab3@23739>    BSR.w writeword
00032D90 <AmiBlitz3.ab3@23740>   MOVEA.l currentfunction,A0
00032D96 <AmiBlitz3.ab3@23741>   CMP.l #0,a0
00032D9A <AmiBlitz3.ab3@23742>   BEQ JL_0_D896
00032DA0 <AmiBlitz3.ab3@23743>   MOVE.l destpointer,d1
00032DA4 <AmiBlitz3.ab3@23744>   SUB.l $e(a0),d1
00032DA8 <AmiBlitz3.ab3@23745>   MOVE.l d1,isfunc+1(a0)
00032DAE <AmiBlitz3.ab3@23746>   CMPI.b #$7,$5(A0)
00032DB2 <AmiBlitz3.ab3@23747>    BNE.w JL_0_D896
00032DB8 <AmiBlitz3.ab3@23748>   MOVE.w putstlen,D1
00032DBC <AmiBlitz3.ab3@23749>    BSR.w writeword
00032DC0 <AmiBlitz3.ab3@23750> BRA.w JL_0_D896
00032DC6 <AmiBlitz3.ab3@23753> JMP interr
00032DCA <AmiBlitz3.ab3@23756>  CMP.w #-$7FD0,D0
00032DCE <AmiBlitz3.ab3@23757>    BNE.w JL_0_D966
00032DD4 <AmiBlitz3.ab3@23758>   MOVE.w proceduremode,D1
00032DD8 <AmiBlitz3.ab3@23759>    BNE.w JUMP_interr3
00032DDE <AmiBlitz3.ab3@23760>   TST.b debugmode
00032DE2 <AmiBlitz3.ab3@23761>    BEQ.w JL_0_D90A
00032DE4 <AmiBlitz3.ab3@23762>   MOVEQ.l #$03,D1
00032DEA <AmiBlitz3.ab3@23763>    JSR writetrap
00032DF0 <AmiBlitz3.ab3@23764>   MOVE.w dontwrite,D1
00032DF4 <AmiBlitz3.ab3@23765>    BNE.w JL_0_D90A
00032DFA <AmiBlitz3.ab3@23766>   MOVEA.l intcleanat,A0
00032E00 <AmiBlitz3.ab3@23767>   MOVE.l destpointer,(A0)
00032E04 <AmiBlitz3.ab3@23768>   MOVE.w #$C30C,D1
00032E08 <AmiBlitz3.ab3@23769>    BSR.w Atokejsr
00032E0E <AmiBlitz3.ab3@23772>   MOVE.w intstring,D1
00032E12 <AmiBlitz3.ab3@23773>    BEQ.w JUMP_interr
00032E16 <AmiBlitz3.ab3@23774>    BPL.w JL_0_D934
00032E1C <AmiBlitz3.ab3@23775>   MOVE.w intlevel,D1
00032E20 <AmiBlitz3.ab3@23776>   ORI.w #$7200,D1
00032E24 <AmiBlitz3.ab3@23777>    BSR.w writeword
00032E28 <AmiBlitz3.ab3@23778>   MOVE.w #$C103,D1
00032E2C <AmiBlitz3.ab3@23779>    BSR.w Atokejsr
00032E32 <AmiBlitz3.ab3@23780>   CLR.w intlevel
00032E38 <AmiBlitz3.ab3@23783>  CLR.w intstring
00032E3E <AmiBlitz3.ab3@23784>   MOVE.l intfin,D1
00032E42 <AmiBlitz3.ab3@23785>    BSR.w writelong
00032E48 <AmiBlitz3.ab3@23786>   MOVE.l #$70004E75,D1
00032E4C <AmiBlitz3.ab3@23787>    BSR.w writelong
00032E52 <AmiBlitz3.ab3@23788>   MOVE.w dontwrite,D1
00032E56 <AmiBlitz3.ab3@23789>    BNE.w JL_0_D962
00032E5C <AmiBlitz3.ab3@23790>   MOVEA.l intjmpat,A0
00032E60 <AmiBlitz3.ab3@23791>   MOVE.l destpointer(PC),(A0)
00032E66 <AmiBlitz3.ab3@23794> JMP get1bytemain
00032E6A <AmiBlitz3.ab3@23798>   CMP.w #-$7FF2,D0
00032E6E <AmiBlitz3.ab3@23799>    BEQ.w doendsel
00032E72 <AmiBlitz3.ab3@23800>   CMP.w #-$7F4C,D0
00032E76 <AmiBlitz3.ab3@23801>    BNE.w JL_0_D97C
00032E7C <AmiBlitz3.ab3@23802> JMP doendseterr
00032E82 <AmiBlitz3.ab3@23806> JMP syntaxerr
00032E88 <AmiBlitz3.ab3@23810>   TST.w dirmode
00032E8C <AmiBlitz3.ab3@23811>   BNE.w JUMP_baddirerr
00032E90 <AmiBlitz3.ab3@23812>   MOVE.w #$C800,D1
00032E96 <AmiBlitz3.ab3@23813>   JSR Atokejsr                                            ;end
00032E9E <AmiBlitz3.ab3@23814>   CMP.l #"noa7",-4(a5)
00032EA2 <AmiBlitz3.ab3@23815>   BNE 'l10
00032EA8 <AmiBlitz3.ab3@23816>   TST.w dontwrite
00032EAC <AmiBlitz3.ab3@23817>   BNE 'l10
00032EB2 <AmiBlitz3.ab3@23818>   MOVE.l destpointer,d1
00032EB4 <AmiBlitz3.ab3@23819>   SUBQ.l #4,d1
00032EB6 <AmiBlitz3.ab3@23820>   MOVE.l a0,-(a7)
00032EB8 <AmiBlitz3.ab3@23821>   MOVE.l d1,a0
00032EBA <AmiBlitz3.ab3@23822>   MOVE.l (a0),a0
00032EC0 <AmiBlitz3.ab3@23823>   MOVE.l #$60000002,(a0)+
00032EC4 <AmiBlitz3.ab3@23824>   MOVE.w #$588f,(a0)
00032EC6 <AmiBlitz3.ab3@23825>   MOVE.l (a7)+,a0
00032EC8 <AmiBlitz3.ab3@23828> RTS
00032ECE <AmiBlitz3.ab3@23832>   TST.w dirmode                                            ;stop
00032ED2 <AmiBlitz3.ab3@23833>   BNE.w JUMP_baddirerr
00032ED4 <AmiBlitz3.ab3@23834>   MOVE.w d0,d1
00032ED8 <AmiBlitz3.ab3@23835>   BEQ 'l10
00032EDC <AmiBlitz3.ab3@23836>   CMP.b #$3a,d0
00032EE0 <AmiBlitz3.ab3@23837>   BEQ 'l10
00032EE6 <AmiBlitz3.ab3@23838>   JSR get1bytemain
00032EEC <AmiBlitz3.ab3@23841>   TST.b debugmode
00032EF0 <AmiBlitz3.ab3@23842>   BEQ.w newstop
00032EF4 <AmiBlitz3.ab3@23843>   MOVE.w #$D501,D1
00032EF8 <AmiBlitz3.ab3@23844> BRA.w Atokejsr
00032EFA <AmiBlitz3.ab3@23848>     RTS
00032EFC <AmiBlitz3.ab3@23850>   MOVE.w d1,d0
00032F00 <AmiBlitz3.ab3@23851>   BEQ 'l10
00032F04 <AmiBlitz3.ab3@23852>   CMP.b #$3a,d0
00032F08 <AmiBlitz3.ab3@23853>   BEQ 'l10
00032F0C <AmiBlitz3.ab3@23854>   SUB.b #$30,d0
00032F10 <AmiBlitz3.ab3@23855>   MOVE.w #$4e40,d1
00032F14 <AmiBlitz3.ab3@23856> BRA 'l11
00032F18 <AmiBlitz3.ab3@23859>   MOVE.w #$4e4a,d1
00032F1C <AmiBlitz3.ab3@23860> BRA writeword
00032F1E <AmiBlitz3.ab3@23863>   ADD.b d0,d1
00032F22 <AmiBlitz3.ab3@23864> BRA writeword
00032F28 <AmiBlitz3.ab3@23868> JMP badconterr
00032F2C <AmiBlitz3.ab3@23871>   MOVE.w #$4E71,D1
00032F30 <AmiBlitz3.ab3@23872> BRA.w writeword
00032F36 <AmiBlitz3.ab3@23875>   MOVEA.l firstfor,A2
00032F3C <AmiBlitz3.ab3@23876>   CLR.l firstfor
00032F42 <AmiBlitz3.ab3@23877>   MOVEA.l _execbase,A6
00032F46 <AmiBlitz3.ab3@23880>   CMPA.w #$0,A2
00032F4A <AmiBlitz3.ab3@23881>   BEQ.w JL_0_D9E6
00032F4C <AmiBlitz3.ab3@23882>   MOVEA.l A2,A1
00032F4E <AmiBlitz3.ab3@23883>   MOVEA.l (A1),A2
00032F50 <AmiBlitz3.ab3@23884>   MOVEQ.l #$00,D0
00032F56 <AmiBlitz3.ab3@23885>   MOVE.l mempool2,a0
00032F5A <AmiBlitz3.ab3@23886>   MOVE.b $10(A1),D0
00032F5E <AmiBlitz3.ab3@23887>   JSR _FreePooled(A6)                                      ;freememfor_error
00032F62 <AmiBlitz3.ab3@23888> BRA.w JL_0_D9CC
00032F64 <AmiBlitz3.ab3@23891> RTS
00032F6A <AmiBlitz3.ab3@23895> JMP badpenderr
00032F70 <AmiBlitz3.ab3@23901>   MOVE.w proceduremode,D1
00032F74 <AmiBlitz3.ab3@23902>    BEQ.w JUMP_badpenderr
00032F7A <AmiBlitz3.ab3@23904>   MOVE.w dontwrite,D1
00032F7E <AmiBlitz3.ab3@23905>    BNE.w JL_0_DA1A
00032F84 <AmiBlitz3.ab3@23906>   MOVEA.l firstpend,A2
00032F88 <AmiBlitz3.ab3@23909>   CMPA.w #$0,A2
00032F8C <AmiBlitz3.ab3@23910>    BEQ.w JL_0_DA1A
00032F90 <AmiBlitz3.ab3@23911>   MOVEA.l $4(A2),A0
00032F96 <AmiBlitz3.ab3@23912>   MOVE.l destpointer,(A0)
00032F98 <AmiBlitz3.ab3@23913>   MOVEA.l (A2),A2
00032F9C <AmiBlitz3.ab3@23914> BRA.w JL_0_DA02
00032FA2 <AmiBlitz3.ab3@23917>   TST.b debugmode
00032FA6 <AmiBlitz3.ab3@23918>    BEQ.b JL_0_DA2A
00032FA8 <AmiBlitz3.ab3@23919>   MOVEQ.l #$05,D1
00032FAE <AmiBlitz3.ab3@23920>   JSR writetrap
00032FB4 <AmiBlitz3.ab3@23923>   MOVEA.l firstlocal,A2                                    ;firstlocal
00032FBA <AmiBlitz3.ab3@23924>   JSR calcstatic2b                                           ;calcstatic
00032FC0 <AmiBlitz3.ab3@23925>   MOVEA.l currentfunction,A0
00032FC6 <AmiBlitz3.ab3@23926>   MOVE.l destpointer,d1
00032FCA <AmiBlitz3.ab3@23927>   SUB.l $e(a0),d1
00032FCE <AmiBlitz3.ab3@23928>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00032FD2 <AmiBlitz3.ab3@23929>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00032FD8 <AmiBlitz3.ab3@23930>   MOVE.l D3,locdatast
00032FDE <AmiBlitz3.ab3@23931>   MOVEA.l tempvm,A1
00032FE4 <AmiBlitz3.ab3@23932>  CLR.b infunctioncode
00032FEA <AmiBlitz3.ab3@23933>   MOVE.l firstiffstore,d1
00032FF0 <AmiBlitz3.ab3@23934>   CMP.l firstiff,d1
00032FF4 <AmiBlitz3.ab3@23935>   BNE JUMP_noenderr
00032FF8 <AmiBlitz3.ab3@23936>   TST.w $C(A1)                                             ;dim
00032FFC <AmiBlitz3.ab3@23937>    BPL.w JL_0_DA64
00033002 <AmiBlitz3.ab3@23938>  BSET #$7,$8(A0)
00033006 <AmiBlitz3.ab3@23939>   MOVE.w #$C005,D1
0003300A <AmiBlitz3.ab3@23940>    BSR.w tokejsr2                                          ;writefreememstatement
0003300E <AmiBlitz3.ab3@23941> BRA.w JL_0_DA6C
00033014 <AmiBlitz3.ab3@23944> JMP noenderr
0003301C <AmiBlitz3.ab3@23947>   MOVE.w memlibstat,$C(A1)
00033022 <AmiBlitz3.ab3@23950>   MOVEA.l currentfunction,A0
00033026 <AmiBlitz3.ab3@23951>   MOVE.l $E(A0),-(A7)
0003302E <AmiBlitz3.ab3@23952>   MOVE.w locvaroff,$6(A0)
00033034 <AmiBlitz3.ab3@23953>   BCLR #$1,$7(A0)
0003303A <AmiBlitz3.ab3@23954>   BCLR #$0,$7(A0)
00033040 <AmiBlitz3.ab3@23955>   CMPI.b #$7,$5(A0)
00033044 <AmiBlitz3.ab3@23956>    BNE.w JL_0_DA9E
0003304A <AmiBlitz3.ab3@23957>   MOVE.w getstlen,D1
0003304E <AmiBlitz3.ab3@23958>    BSR.w writeword
00033052 <AmiBlitz3.ab3@23961>   TST.w $6(A0)
00033056 <AmiBlitz3.ab3@23962>    BEQ.w JL_0_DAB8
0003305A <AmiBlitz3.ab3@23963>   MOVE.w #$FC7B,D1
00033060 <AmiBlitz3.ab3@23964>    JSR uselib
00033066 <AmiBlitz3.ab3@23965>   MOVE.w unlinka4,D1
0003306A <AmiBlitz3.ab3@23966>    BSR.w writeword
00033070 <AmiBlitz3.ab3@23969>   MOVEA.l currentfunction,A0
00033072 <AmiBlitz3.ab3@23970>   MOVEQ.l #$00,D1
00033076 <AmiBlitz3.ab3@23971>   MOVE.b $4(A0),D1
00033078 <AmiBlitz3.ab3@23972>   LSR.w #4,D1
0003307C <AmiBlitz3.ab3@23973>    BEQ.w JL_0_DB24
0003307E <AmiBlitz3.ab3@23975>      LSL.w #1,d1
00033082 <AmiBlitz3.ab3@23977>   CMP.w #$1,D1
00033086 <AmiBlitz3.ab3@23978>    BNE.w JL_0_DAE0
0003308C <AmiBlitz3.ab3@23979>   MOVE.w fix1,D1
00033090 <AmiBlitz3.ab3@23980>    BSR.w writeword
00033094 <AmiBlitz3.ab3@23981> BRA.w JL_0_DB24
00033096 <AmiBlitz3.ab3@23984>   LSL.w #2,D1
00033098 <AmiBlitz3.ab3@23985>   MOVE.w D1,-(A7)
0003309E <AmiBlitz3.ab3@23986>   MOVE.w D1,moverts+2
000330A4 <AmiBlitz3.ab3@23987>   MOVE.l moverts,D1
000330AA <AmiBlitz3.ab3@23988>    JSR writelong
000330AC <AmiBlitz3.ab3@23989>   MOVE.w (A7)+,D1
000330B0 <AmiBlitz3.ab3@23990>   CMP.w #$8,D1
000330B4 <AmiBlitz3.ab3@23991>    BHI.w JL_0_DB14
000330B8 <AmiBlitz3.ab3@23992>   ANDI.w #$7,D1
000330BA <AmiBlitz3.ab3@23993>   LSL.w #8,D1
000330BC <AmiBlitz3.ab3@23994>   LSL.w #1,D1
000330C2 <AmiBlitz3.ab3@23995>   OR.w fixq,D1
000330C8 <AmiBlitz3.ab3@23996>    JSR writeword
000330CC <AmiBlitz3.ab3@23997> BRA.w JL_0_DB24
000330D2 <AmiBlitz3.ab3@24001>    MOVE.w D1,fixstack+2
000330D8 <AmiBlitz3.ab3@24002>   MOVE.l fixstack,D1
000330DE <AmiBlitz3.ab3@24003>    JSR writelong
000330E2 <AmiBlitz3.ab3@24006>    BSR.w JL_0_D2CA
000330E6 <AmiBlitz3.ab3@24007>    BSR.w JL_0_D4F8
000330E8 <AmiBlitz3.ab3@24008>   MOVEA.l (A7)+,A0
000330EE <AmiBlitz3.ab3@24009>   MOVE.w dontwrite,D1
000330F2 <AmiBlitz3.ab3@24010>    BNE.w JL_0_DB3E
000330F8 <AmiBlitz3.ab3@24011>   MOVE.l destpointer,-(A0)
000330FE <AmiBlitz3.ab3@24014>   CLR.w proceduremode
00033104 <AmiBlitz3.ab3@24015>   CLR.l currentfunction
0003310A <AmiBlitz3.ab3@24016>   CLR.w procnum
0003310E <AmiBlitz3.ab3@24017>    BSR.w JL_0_DB5C
00033114 <AmiBlitz3.ab3@24018>    JSR freepends
0003311A <AmiBlitz3.ab3@24019> JMP get1bytemain
0003311C <AmiBlitz3.ab3@24022>   MOVEQ.l #$0C,D0
0003311E <AmiBlitz3.ab3@24023>   MOVEQ.l #$01,D1
00033124 <AmiBlitz3.ab3@24024>   MOVEA.l _execbase,A6
0003312A <AmiBlitz3.ab3@24026>   MOVE.l mempool,a0
0003312E <AmiBlitz3.ab3@24027>   JSR _AllocPooled(a6)
00033130 <AmiBlitz3.ab3@24028>   MOVEA.l D0,A0
00033136 <AmiBlitz3.ab3@24029>   MOVE.l alllocals,(A0)
0003313C <AmiBlitz3.ab3@24030>   MOVE.l A0,alllocals
00033142 <AmiBlitz3.ab3@24031>   MOVE.l firstlocal,D0
00033148 <AmiBlitz3.ab3@24032>   CLR.l firstlocal
0003314C <AmiBlitz3.ab3@24033>   MOVE.l D0,$4(A0)
00033152 <AmiBlitz3.ab3@24034>   MOVE.l firstglob,D1
00033158 <AmiBlitz3.ab3@24035>   CLR.l firstglob
0003315C <AmiBlitz3.ab3@24036>   MOVE.l D1,$8(A0)
00033162 <AmiBlitz3.ab3@24037>   TST.b debugmode
00033166 <AmiBlitz3.ab3@24038>    BEQ.b JL_0_DBB0
0003316C <AmiBlitz3.ab3@24039>   TST.w dontwrite
00033170 <AmiBlitz3.ab3@24040>    BNE.b JL_0_DBB0
00033174 <AmiBlitz3.ab3@24041>   MOVEA.l proclocals(PC),A0
00033176 <AmiBlitz3.ab3@24042>   MOVE.l D0,(A0)+
00033178 <AmiBlitz3.ab3@24043>   MOVE.l D1,(A0)
0003317A <AmiBlitz3.ab3@24046> RTS
00033180 <AmiBlitz3.ab3@24049> JMP baddirerr
00033186 <AmiBlitz3.ab3@24053>   TST.w dirmode
0003318A <AmiBlitz3.ab3@24054>    BNE.w JUMP_baddirerr
00033190 <AmiBlitz3.ab3@24055>   MOVE.l firstfor,D1
00033194 <AmiBlitz3.ab3@24056>    BEQ.w JUMP_noforerr
0003319A <AmiBlitz3.ab3@24057>   JSR reget
0003319E <AmiBlitz3.ab3@24058>    BEQ.w JL_0_DC18
000331A2 <AmiBlitz3.ab3@24061>   BSR.w getparameter
000331A6 <AmiBlitz3.ab3@24062>   MOVEA.l firstfor(PC),A2
000331A8 <AmiBlitz3.ab3@24063>   MOVEQ.l #$00,D1
000331AC <AmiBlitz3.ab3@24064>   MOVE.b $10(A2),D1
000331B0 <AmiBlitz3.ab3@24065>   SUBI.w #$12,D1
000331B2 <AmiBlitz3.ab3@24066>   CMP.w D1,D2
000331B6 <AmiBlitz3.ab3@24067>    BNE.w JUMP_noforerr
000331BA <AmiBlitz3.ab3@24068>   LEA ptr_parameterstore(PC),A0
000331BE <AmiBlitz3.ab3@24069>   LEA $11(A2),A1
000331C0 <AmiBlitz3.ab3@24070>   SUBQ.w #1,D2
000331C2 <AmiBlitz3.ab3@24073>     CMPM.b (A0)+,(A1)+
000331C6 <AmiBlitz3.ab3@24074>     BNE.w JUMP_noforerr
000331CA <AmiBlitz3.ab3@24075>   DBF D2,JL_0_DBF0
000331CE <AmiBlitz3.ab3@24077>    BSR.w JL_0_DC1A
000331D4 <AmiBlitz3.ab3@24078>    JSR reget
000331D8 <AmiBlitz3.ab3@24079>    BEQ.w JL_0_DC16
000331DC <AmiBlitz3.ab3@24080>   CMP.w #$2C,D0
000331E0 <AmiBlitz3.ab3@24081>    BNE.w JUMP_syntaxerr
000331E6 <AmiBlitz3.ab3@24082>    JSR get1bytemain
000331EA <AmiBlitz3.ab3@24083> BRA.w JL_0_DBCE
000331F0 <AmiBlitz3.ab3@24086> JMP noforerr
000331F2 <AmiBlitz3.ab3@24089> RTS
000331F6 <AmiBlitz3.ab3@24093>   MOVE.l 8(a7),a2
000331FA <AmiBlitz3.ab3@24094>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
000331FE <AmiBlitz3.ab3@24095>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033202 <AmiBlitz3.ab3@24096>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033204 <AmiBlitz3.ab3@24100>   MOVEA.l D1,A2
0003320A <AmiBlitz3.ab3@24103>   JSR popnext                                           ;error checking for next.
0003320E <AmiBlitz3.ab3@24104>   MOVE.w $C(A2),D0
00033214 <AmiBlitz3.ab3@24105>   LEA nextb,A0
0003321A <AmiBlitz3.ab3@24106>   LEA nextbf,A1
0003321E <AmiBlitz3.ab3@24107>   CMP.w #$1,D0
00033222 <AmiBlitz3.ab3@24108>    BEQ.w JL_0_DC74
00033228 <AmiBlitz3.ab3@24109>   LEA nextw,A0
0003322E <AmiBlitz3.ab3@24110>   LEA nextwf,A1
00033232 <AmiBlitz3.ab3@24111>   CMP.w #$2,D0
00033236 <AmiBlitz3.ab3@24112>    BEQ.w JL_0_DC74
0003323C <AmiBlitz3.ab3@24113>   LEA nextl,A0
00033242 <AmiBlitz3.ab3@24114>   LEA nextlf,A1
00033246 <AmiBlitz3.ab3@24115>   CMP.w #$5,D0
0003324A <AmiBlitz3.ab3@24116>    BNE.w JL_0_DC74
00033250 <AmiBlitz3.ab3@24117>    TST.b fpu
00033254 <AmiBlitz3.ab3@24118>    BEQ 'old
0003325A <AmiBlitz3.ab3@24119>    LEA fpu2dats,a0                                         ;fpu next code
00033260 <AmiBlitz3.ab3@24120>    LEA fpu2date,a1
00033264 <AmiBlitz3.ab3@24121> BRA JL_0_DC74
00033268 <AmiBlitz3.ab3@24124>   MOVE.w #$C900,D1
0003326C <AmiBlitz3.ab3@24125>    BSR.w Atokejsr
00033272 <AmiBlitz3.ab3@24126>   LEA nextf,A0
00033278 <AmiBlitz3.ab3@24127>   LEA nextff,A1
0003327E <AmiBlitz3.ab3@24130>   JSR pokecode
00033284 <AmiBlitz3.ab3@24131>     TST.b fast                                             ;fast for next deactivate
00033288 <AmiBlitz3.ab3@24132> BRA 'l1
0003328E <AmiBlitz3.ab3@24134>     TST.b onestep
00033292 <AmiBlitz3.ab3@24135>     BEQ 'l1
00033298 <AmiBlitz3.ab3@24136>     CLR.b onestep
0003329E <AmiBlitz3.ab3@24137>     SUBQ.l #4,destpointer
000332A2 <AmiBlitz3.ab3@24138>     MOVE.w #$5292,d1
000332A8 <AmiBlitz3.ab3@24139>     JSR writeword
000332AC <AmiBlitz3.ab3@24142>   MOVE.l JL_0_DCF4(PC),D1
000332B2 <AmiBlitz3.ab3@24143>    JSR writelong
000332B8 <AmiBlitz3.ab3@24144>   MOVEA.l firstfor,A2
000332BE <AmiBlitz3.ab3@24145>   MOVE.l (A2),firstfor
000332C2 <AmiBlitz3.ab3@24146>   MOVEA.l $8(A2),A0
000332C8 <AmiBlitz3.ab3@24147>   MOVEA.l destpointer,A1
000332CA <AmiBlitz3.ab3@24148>   MOVE.l A1,D1
000332CC <AmiBlitz3.ab3@24149>   SUB.l A0,D1
000332CE <AmiBlitz3.ab3@24150>   ADDQ.l #2,D1
000332D4 <AmiBlitz3.ab3@24151>   CMP.l #MinWordSgnd,D1
000332D8 <AmiBlitz3.ab3@24152>    BCC.w JUMP_bigforerr
000332DE <AmiBlitz3.ab3@24153>   TST.w dontwrite
000332E2 <AmiBlitz3.ab3@24154>    BNE.w JL_0_DCB4
000332E6 <AmiBlitz3.ab3@24155>   MOVE.w D1,-$2(A0)
000332E8 <AmiBlitz3.ab3@24158>   MOVE.l A1,D1
000332EC <AmiBlitz3.ab3@24159>   SUB.l $4(A2),D1
000332EE <AmiBlitz3.ab3@24160>   SUBQ.l #6,D1
000332F4 <AmiBlitz3.ab3@24161>   CMP.l #MinWordSgnd,D1
000332F8 <AmiBlitz3.ab3@24162>    BCC.w JUMP_bigforerr
000332FE <AmiBlitz3.ab3@24163>   TST.w dontwrite
00033302 <AmiBlitz3.ab3@24164>    BNE.w JL_0_DCD6
00033304 <AmiBlitz3.ab3@24165>   NEG.w D1
00033308 <AmiBlitz3.ab3@24166>   MOVE.w D1,-$2(A1)
0003330E <AmiBlitz3.ab3@24169>   JSR popnext3
00033314 <AmiBlitz3.ab3@24170>   MOVEA.l _execbase,A6
00033316 <AmiBlitz3.ab3@24171>   MOVEA.l A2,A1
00033318 <AmiBlitz3.ab3@24172>   MOVEQ.l #$00,D0
0003331C <AmiBlitz3.ab3@24173>   MOVE.b $10(A1),D0
00033322 <AmiBlitz3.ab3@24174>   MOVE.l mempool2,a0
00033326 <AmiBlitz3.ab3@24175>   JSR _FreePooled(A6)
0003332C <AmiBlitz3.ab3@24176> JMP reget
00033332 <AmiBlitz3.ab3@24179> JMP notallowd
00033338 <AmiBlitz3.ab3@24182> JMP bigforerr
0003333C <AmiBlitz3.ab3@24189>   MOVE.w #$664F,-(A7)
00033340 <AmiBlitz3.ab3@24192> BRA.w JL_0_DCF4
00033346 <AmiBlitz3.ab3@24195> JMP error_dublicate_for
0003334A <AmiBlitz3.ab3@24198> forlineat:   Ds.l 1
0003334C <AmiBlitz3.ab3@24199> fortemp:     Ds.w 1
00033352 <AmiBlitz3.ab3@24206>   CLR.l fp0addr
00033358 <AmiBlitz3.ab3@24207>   TST.w dirmode
0003335C <AmiBlitz3.ab3@24208>    BNE.w JUMP_baddirerr
00033366 <AmiBlitz3.ab3@24209>   MOVE.l linenumat,forlineat
0003336C <AmiBlitz3.ab3@24213>   MOVE.l A5,letstart
00033370 <AmiBlitz3.ab3@24214>   BSR.w getparameter
00033376 <AmiBlitz3.ab3@24215>   MOVE.w D2,fortemp
0003337C <AmiBlitz3.ab3@24216>   JSR findfor
00033380 <AmiBlitz3.ab3@24217>    BEQ.w JUMP_error_dublicate_for
00033386 <AmiBlitz3.ab3@24218>   LEA firstfor,A2
0003338C <AmiBlitz3.ab3@24219>   JSR addhere2
0003338E <AmiBlitz3.ab3@24220>   MOVE.l A2,-(A7)
00033394 <AmiBlitz3.ab3@24221>   TST.b debugmode
00033398 <AmiBlitz3.ab3@24222>    BEQ.b JL_0_DD4C
0003339E <AmiBlitz3.ab3@24223>   JSR chkstak
000333A4 <AmiBlitz3.ab3@24224>   MOVE.l AJL_0_DCF0,D1
000333AA <AmiBlitz3.ab3@24225>   JSR  writelong
000333AE <AmiBlitz3.ab3@24228>   MOVE.w fortemp(PC),D2
000333B6 <AmiBlitz3.ab3@24229>   MOVE.b #1,formode
000333BA <AmiBlitz3.ab3@24230>   BSR.w AJL_0_DEA6                                         ;for get 1. value
000333C0 <AmiBlitz3.ab3@24231>   CLR.b formode
000333C4 <AmiBlitz3.ab3@24232>   CMP.w #-$7FE8,D0
000333C8 <AmiBlitz3.ab3@24233>    BNE.w JUMP_syntaxerr
000333CE <AmiBlitz3.ab3@24234>   MOVE.w commode,D1
000333D2 <AmiBlitz3.ab3@24235>    BNE.w JUMP_syntaxerr
000333D6 <AmiBlitz3.ab3@24236>   CMP.b #$6,D2
000333DA <AmiBlitz3.ab3@24237>    BCC.w JUMP_badforerr
000333DE <AmiBlitz3.ab3@24238>   BTST #$F,D2
000333E2 <AmiBlitz3.ab3@24239>    BNE.w JL_0_DD86
000333E8 <AmiBlitz3.ab3@24240>   MOVE.w leaamp,D1
000333EE <AmiBlitz3.ab3@24241>   JSR pokewda5s
000333F0 <AmiBlitz3.ab3@24242>   MOVE.w D3,D1
000333F6 <AmiBlitz3.ab3@24243>   JSR  writeword
000333FC <AmiBlitz3.ab3@24246>   MOVE.w pushindex,D1
00033402 <AmiBlitz3.ab3@24247>   JSR  writeword
00033406 <AmiBlitz3.ab3@24248>   ANDI.w #$FF,D2
00033408 <AmiBlitz3.ab3@24250>   MOVEA.l (A7),A1
0003340C <AmiBlitz3.ab3@24251>   MOVE.w D2,$C(A1)
0003340E <AmiBlitz3.ab3@24252>   MOVE.w D2,-(A7)
00033412 <AmiBlitz3.ab3@24253>    BSR.w eval
00033418 <AmiBlitz3.ab3@24254>    CLR.b onestep
0003341C <AmiBlitz3.ab3@24255>    CMP.w #$8019,d0
00033420 <AmiBlitz3.ab3@24256>    BEQ 'l1
00033428 <AmiBlitz3.ab3@24257>    MOVE.b #1,onestep
0003342A <AmiBlitz3.ab3@24260>   MOVE.w (A7),D2
00033430 <AmiBlitz3.ab3@24261>   MOVE.w pushd0l,D1
00033434 <AmiBlitz3.ab3@24262>   CMP.w #$3,D2
00033438 <AmiBlitz3.ab3@24263>    BCC.w JL_0_DDB6
0003343E <AmiBlitz3.ab3@24264>   MOVE.w pushd0wd,D1
00033440 <AmiBlitz3.ab3@24267>    MOVE.w D1,-(A7)
00033446 <AmiBlitz3.ab3@24268>    TST.b fpu
0003344A <AmiBlitz3.ab3@24269>    BEQ 'old
0003344E <AmiBlitz3.ab3@24270>    CMP.b #5,d2
00033452 <AmiBlitz3.ab3@24271>    BNE 'old
00033458 <AmiBlitz3.ab3@24272>    MOVE.l #$f2276400,d1
0003345E <AmiBlitz3.ab3@24274>    JSR writelong
00033462 <AmiBlitz3.ab3@24275> BRA 'weit
00033468 <AmiBlitz3.ab3@24278>    JSR  writeword                                          ;fpu for end value
0003346C <AmiBlitz3.ab3@24281>   CMP.w #-$7FE7,D0
00033470 <AmiBlitz3.ab3@24282>    BNE.w JL_0_DDCC
00033474 <AmiBlitz3.ab3@24283>    BSR.w eval
0003347A <AmiBlitz3.ab3@24284>    TST.b fpu
0003347E <AmiBlitz3.ab3@24285>    BEQ JL_0_DE0C
00033482 <AmiBlitz3.ab3@24286>    CMP.b #5,d2
00033486 <AmiBlitz3.ab3@24287>    BNE JL_0_DE0C
0003348C <AmiBlitz3.ab3@24288>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033492 <AmiBlitz3.ab3@24290>   JSR writelong
00033494 <AmiBlitz3.ab3@24293>    MOVE.w (a7)+,d1
00033498 <AmiBlitz3.ab3@24294> BRA fpur
0003349C <AmiBlitz3.ab3@24297>   CMP.w #$4,D2
000334A0 <AmiBlitz3.ab3@24298>    BCC.w JL_0_DDE0
000334A4 <AmiBlitz3.ab3@24299>   MOVE.w #$7001,D1
000334AA <AmiBlitz3.ab3@24300>   JSR writeword
000334AE <AmiBlitz3.ab3@24301> BRA.w JL_0_DE0C
000334B4 <AmiBlitz3.ab3@24304> JMP badforerr
000334B8 <AmiBlitz3.ab3@24307>   BNE.w JL_0_DDFA
000334BC <AmiBlitz3.ab3@24308>   MOVE.w #$7001,D1
000334C2 <AmiBlitz3.ab3@24309>   JSR writeword
000334C8 <AmiBlitz3.ab3@24310>   MOVE.w swapd0,D1
000334CE <AmiBlitz3.ab3@24311>   JSR writeword
000334D2 <AmiBlitz3.ab3@24312> BRA.w JL_0_DE0C
000334D8 <AmiBlitz3.ab3@24315>   TST.b fpu
000334DC <AmiBlitz3.ab3@24316>    BEQ 'old
000334E0 <AmiBlitz3.ab3@24317>   CMP.b #5,d2
000334E4 <AmiBlitz3.ab3@24318>    BNE 'old
000334EA <AmiBlitz3.ab3@24319>   MOVE.l #$f23c5000,d1
000334F0 <AmiBlitz3.ab3@24320>   JSR writelong
000334F4 <AmiBlitz3.ab3@24321>   MOVE.w #$1,d1
000334FA <AmiBlitz3.ab3@24322>   JSR writeword
00033500 <AmiBlitz3.ab3@24323>   MOVE.l #$f2276400,d1
00033506 <AmiBlitz3.ab3@24324>   JSR writelong
00033508 <AmiBlitz3.ab3@24325>   MOVE.w (a7)+,d1
0003350C <AmiBlitz3.ab3@24326> BRA fpur
00033510 <AmiBlitz3.ab3@24329>   MOVE.w #$203C,D1                                         ;write step 1
00033516 <AmiBlitz3.ab3@24330>   JSR writeword
0003351C <AmiBlitz3.ab3@24331>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033522 <AmiBlitz3.ab3@24332>   JSR writelong
00033524 <AmiBlitz3.ab3@24335>   MOVE.w (A7)+,D1
0003352A <AmiBlitz3.ab3@24336>   JSR writeword                                            ;push step on stack
0003352C <AmiBlitz3.ab3@24339>   MOVE.w (A7)+,D2
0003352E <AmiBlitz3.ab3@24340>   MOVEA.l (A7),A1
00033536 <AmiBlitz3.ab3@24341>   MOVE.l destpointer,$4(A1)
0003353C <AmiBlitz3.ab3@24342>   LEA forcompb,A0
00033542 <AmiBlitz3.ab3@24343>   LEA forcompbf,A1
00033546 <AmiBlitz3.ab3@24344>   CMP.w #$1,D2
0003354A <AmiBlitz3.ab3@24345>    BEQ.w JL_0_DE7E
00033550 <AmiBlitz3.ab3@24346>   LEA forcompw,A0
00033556 <AmiBlitz3.ab3@24347>   LEA forcompwf,A1
0003355A <AmiBlitz3.ab3@24348>   CMP.w #$2,D2
0003355E <AmiBlitz3.ab3@24349>    BEQ.w JL_0_DE7E
00033564 <AmiBlitz3.ab3@24350>   LEA forcompl,A0
0003356A <AmiBlitz3.ab3@24351>   LEA forcomplf,A1
0003356E <AmiBlitz3.ab3@24352>   CMP.w #$5,D2
00033572 <AmiBlitz3.ab3@24353>    BNE.w JL_0_DE7E
00033578 <AmiBlitz3.ab3@24354>   TST.b fpu
0003357C <AmiBlitz3.ab3@24355>    BEQ 'old
00033582 <AmiBlitz3.ab3@24356>   LEA fpu_start,a0
00033588 <AmiBlitz3.ab3@24357>   LEA fpu_end,a1
0003358E <AmiBlitz3.ab3@24358>   JSR pokecode
00033592 <AmiBlitz3.ab3@24359> BRA fpu3
00033598 <AmiBlitz3.ab3@24362>   LEA forcompf,A0                                         ;
0003359E <AmiBlitz3.ab3@24363>   LEA forcompff,A1
000335A4 <AmiBlitz3.ab3@24364>   JSR pokecode
000335A8 <AmiBlitz3.ab3@24365>   MOVE.w #$C900,D1
000335AC <AmiBlitz3.ab3@24366>   BSR.w Atokejsr
000335B2 <AmiBlitz3.ab3@24367>   LEA forcompf2,A0
000335B8 <AmiBlitz3.ab3@24368>   LEA forcompf2f,A1
000335BE <AmiBlitz3.ab3@24371>   JSR pokecode
000335C4 <AmiBlitz3.ab3@24372>   TST.b fast                                               ;fast for next
000335C8 <AmiBlitz3.ab3@24373>    BEQ 's1
000335CC <AmiBlitz3.ab3@24374>   CMP.w #3,d2
000335D0 <AmiBlitz3.ab3@24375>    BNE 's1
000335D6 <AmiBlitz3.ab3@24376>   TST.b onestep
000335DA <AmiBlitz3.ab3@24377>    BEQ 's1
000335E4 <AmiBlitz3.ab3@24378>   SUB.l #10,destpointer
000335E8 <AmiBlitz3.ab3@24379>   MOVE.w #$b081,d1
000335EE <AmiBlitz3.ab3@24380>   JSR writeword
000335F2 <AmiBlitz3.ab3@24384>   MOVE.l thebgt(PC),D1
000335F8 <AmiBlitz3.ab3@24385>   JSR writelong
000335FA <AmiBlitz3.ab3@24388>   MOVEA.l (A7)+,A1
00033602 <AmiBlitz3.ab3@24389>   MOVE.l destpointer,$8(A1)
00033608 <AmiBlitz3.ab3@24390> JMP reget
0003360C <AmiBlitz3.ab3@24393>   MOVEA.l 8(a7),a2
00033610 <AmiBlitz3.ab3@24394>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033616 <AmiBlitz3.ab3@24395>   fmove.s 4(a7),fp1
0003361A <AmiBlitz3.ab3@24396>   BTST.b #7,(a7)
0003361E <AmiBlitz3.ab3@24397>   BNE 'negi
00033622 <AmiBlitz3.ab3@24398>   fcmp.x fp1,fp0
00033626 <AmiBlitz3.ab3@24399> BRA 'negi2
0003362A <AmiBlitz3.ab3@24402>   fcmp.x fp0,fp1
0003362E <AmiBlitz3.ab3@24405>   Dc.l $f2920000                                           ;fbgt.w
00033632 <AmiBlitz3.ab3@24409>   BGT.w thebgt
00033638 <AmiBlitz3.ab3@24412>   MOVE.l A5,letstart
0003363C <AmiBlitz3.ab3@24413>   BSR.w getparameter
00033646 <AmiBlitz3.ab3@24419>   MOVE.l destpointer,pushpc
00033650 <AmiBlitz3.ab3@24420>   MOVE.l hunkoffsetbase,pushoff
00033656 <AmiBlitz3.ab3@24421>   CLR.l rightsidetype
0003365E <AmiBlitz3.ab3@24422>   MOVE.w #$0001,regnum
00033664 <AmiBlitz3.ab3@24423>   JSR JL_0_8E3C
0003366A <AmiBlitz3.ab3@24424>   JSR calcvar
00033670 <AmiBlitz3.ab3@24425>   TST.b formode
00033674 <AmiBlitz3.ab3@24426>   BEQ 'lf1
0003367A <AmiBlitz3.ab3@24427>   CMP.l #newtype_double,A2
0003367E <AmiBlitz3.ab3@24428>   BEQ JUMP_notallowd
00033684 <AmiBlitz3.ab3@24429>   MOVE.l a2,currtype
0003368A <AmiBlitz3.ab3@24432>   CLR.w startoffsetmore
0003368E <AmiBlitz3.ab3@24433>   CMP.w #$3d,d0
00033692 <AmiBlitz3.ab3@24434>   BNE 'l1a
00033696 <AmiBlitz3.ab3@24435>   BTST #15,d2
0003369A <AmiBlitz3.ab3@24436>   BEQ 'l1a
0003369E <AmiBlitz3.ab3@24437>   CMP.b #1,d2
000336A2 <AmiBlitz3.ab3@24438>   BNE 'l1a
000336AC <AmiBlitz3.ab3@24439>   MOVE.w leaa0a0+2,startoffsetmore
000336B2 <AmiBlitz3.ab3@24442>   CLR.w regnum
000336B6 <AmiBlitz3.ab3@24443>   BSR.w JL_0_B5D2
000336BC <AmiBlitz3.ab3@24444>   CLR.w commode
000336C2 <AmiBlitz3.ab3@24445>   CLR.w stackcorrect
000336C8 <AmiBlitz3.ab3@24446>   CLR.w pcodd
000336CE <AmiBlitz3.ab3@24447>   MOVE.w startoffsetmore,d1
000336D2 <AmiBlitz3.ab3@24448>   BTST #0,d1
000336D6 <AmiBlitz3.ab3@24449>   BEQ 'l2a
000336DE <AmiBlitz3.ab3@24450>   MOVE.w #1,pcodd
000336E2 <AmiBlitz3.ab3@24453>   CMP.w #$3D,D0                                            ;=
000336E6 <AmiBlitz3.ab3@24454>   BEQ.w JL_0_DEE0
000336E8 <AmiBlitz3.ab3@24457>   MOVE.b (a5)+,d1
000336EC <AmiBlitz3.ab3@24458>   BEQ 'l10
000336F0 <AmiBlitz3.ab3@24459>   CMP.b #":",d1
000336F4 <AmiBlitz3.ab3@24460>   BEQ 'l10
000336F8 <AmiBlitz3.ab3@24461>   CMP.b #";",d1
000336FC <AmiBlitz3.ab3@24462>   BEQ 'l10
00033700 <AmiBlitz3.ab3@24463>   CMP.b #"0",d1
00033704 <AmiBlitz3.ab3@24464>   BLT 'l11
00033708 <AmiBlitz3.ab3@24465>   CMP.b #"9",d1
0003370C <AmiBlitz3.ab3@24466>   BGT 'l11
00033710 <AmiBlitz3.ab3@24467> BRA.s 'l1
00033718 <AmiBlitz3.ab3@24470>   MOVE.b #1,quickadd
0003371E <AmiBlitz3.ab3@24473>   MOVEA.l letstart,A5
00033720 <AmiBlitz3.ab3@24474>   SUBQ.w #1,A5
00033724 <AmiBlitz3.ab3@24477>   CMP.b #$7,D2
00033728 <AmiBlitz3.ab3@24478>    BNE.w JL_0_DF8A
0003372C <AmiBlitz3.ab3@24484>   MOVEM.w D2-D3,-(A7)
00033732 <AmiBlitz3.ab3@24485>   MOVE.l lastoffset_org,-(A7)
00033738 <AmiBlitz3.ab3@24486>   MOVE.w varmode,-(A7)
00033742 <AmiBlitz3.ab3@24488>    MOVE.l #forthstack,forthsp
0003374C <AmiBlitz3.ab3@24489>    MOVE.l #precstack,precsp
00033752 <AmiBlitz3.ab3@24490>    CLR.w regnum
00033758 <AmiBlitz3.ab3@24491>    CLR.w nonew
0003375E <AmiBlitz3.ab3@24492>    CLR.w sbasegot
00033768 <AmiBlitz3.ab3@24493>    MOVE.w varcodelen,oldvcodelen
0003376E <AmiBlitz3.ab3@24494>    CLR.w varcodelen
00033776 <AmiBlitz3.ab3@24495>    MOVE.w #$FFFF,lasta6
00033778 <AmiBlitz3.ab3@24498>   MOVEQ.l #$07,D2
0003377C <AmiBlitz3.ab3@24499>    BSR.w eval
00033782 <AmiBlitz3.ab3@24500>   MOVE.w (A7)+,varmode
00033788 <AmiBlitz3.ab3@24501>   MOVE.l (A7)+,lastoffset_org
0003378E <AmiBlitz3.ab3@24502>   MOVE.w moved0a3,D1
00033794 <AmiBlitz3.ab3@24503>    JSR writeword
0003379A <AmiBlitz3.ab3@24504>   MOVE.w commode,D1
0003379E <AmiBlitz3.ab3@24505>    BEQ.w JL_0_DF38
000337A4 <AmiBlitz3.ab3@24506>   LEA pulla2st,A0
000337AA <AmiBlitz3.ab3@24507>   LEA pulla2stf,A1
000337B0 <AmiBlitz3.ab3@24508>    JSR pokecode
000337B4 <AmiBlitz3.ab3@24509> BRA.w JL_0_DF3C
000337B8 <AmiBlitz3.ab3@24512>   BSR.w JL_0_B63C
000337BC <AmiBlitz3.ab3@24515>   MOVEM.w (A7)+,D2-D3
000337C0 <AmiBlitz3.ab3@24516>   BTST #$F,D2
000337C4 <AmiBlitz3.ab3@24517>   BNE.w JL_0_DF58
000337CA <AmiBlitz3.ab3@24518>     MOVE.w D3,leaa5d3a2+2
000337D0 <AmiBlitz3.ab3@24519>     MOVE.l leaa5d3a2,D1
000337D6 <AmiBlitz3.ab3@24520>     JSR pokela5s
000337DA <AmiBlitz3.ab3@24523>   MOVE.w #$FE6F,D1
000337E0 <AmiBlitz3.ab3@24524>   JSR uselib
000337E6 <AmiBlitz3.ab3@24525>   MOVE.l #$C700,D1
000337EC <AmiBlitz3.ab3@24526>   MOVE.l d1,lastinstruction
000337F2 <AmiBlitz3.ab3@24527>   MOVE.w varmode,D2
000337F6 <AmiBlitz3.ab3@24528>   BNE.w JL_0_DF70
000337F8 <AmiBlitz3.ab3@24529>     ADDQ.w #1,D1
000337FC <AmiBlitz3.ab3@24532>   BSR.w Atokejsr
00033800 <AmiBlitz3.ab3@24533>   CMP.w #$2C,D0
00033804 <AmiBlitz3.ab3@24534>   BNE.w JL_0_E0C6
0003380A <AmiBlitz3.ab3@24536>   MOVE.w addq4a2,D1
00033810 <AmiBlitz3.ab3@24537>   JSR writeword
00033814 <AmiBlitz3.ab3@24538> BRA.w JL_0_E018
0003381A <AmiBlitz3.ab3@24541> JMP error4char
00033820 <AmiBlitz3.ab3@24544> JMP error_convert_types
00033824 <AmiBlitz3.ab3@24548>    BTST #$E,D2
00033828 <AmiBlitz3.ab3@24549>    BNE.w JL_0_DF9C
0003382A <AmiBlitz3.ab3@24550>   TST.b D2
0003382E <AmiBlitz3.ab3@24551>    BEQ.w JUMP_noleterr
00033834 <AmiBlitz3.ab3@24552>    TST.b newsyntax
00033838 <AmiBlitz3.ab3@24553>    BEQ JL_0_DFA0
0003383C <AmiBlitz3.ab3@24556>    CMP.w #$4022,(a5)
00033840 <AmiBlitz3.ab3@24557>    BNE JL_0_DFA0
00033846 <AmiBlitz3.ab3@24558>    CMP.l #3,d2
0003384A <AmiBlitz3.ab3@24559>    BNE  JUMP_error_convert_types
0003384C <AmiBlitz3.ab3@24560>    ADDQ #2,a5
0003384E <AmiBlitz3.ab3@24561>    MOVEQ #0,d0
00033850 <AmiBlitz3.ab3@24562>    MOVE.b (a5)+,d0
00033854 <AmiBlitz3.ab3@24563>    BEQ JL_0_DFA0
00033858 <AmiBlitz3.ab3@24564>    CMP.b #$22,d0
0003385C <AmiBlitz3.ab3@24565>    BNE 'l1
00033860 <AmiBlitz3.ab3@24566>    MOVE.b #0,d0
00033864 <AmiBlitz3.ab3@24567> BRA 'do
00033866 <AmiBlitz3.ab3@24570>   ASL.l #8,d0
00033868 <AmiBlitz3.ab3@24571>    MOVE.b (a5)+,d0
0003386C <AmiBlitz3.ab3@24572>    BEQ JL_0_DFA0
00033870 <AmiBlitz3.ab3@24573>    CMP.b #$22,d0
00033874 <AmiBlitz3.ab3@24574>    BNE 'l2
00033878 <AmiBlitz3.ab3@24575>    MOVE.b #0,d0
0003387A <AmiBlitz3.ab3@24576>    ASR.l #8,d0
0003387E <AmiBlitz3.ab3@24577> BRA 'do
00033880 <AmiBlitz3.ab3@24580>   ASL.l #8,d0
00033882 <AmiBlitz3.ab3@24581>     MOVE.b (a5)+,d0
00033886 <AmiBlitz3.ab3@24582>    BEQ JL_0_DFA0
0003388A <AmiBlitz3.ab3@24583>    CMP.b #$22,d0
0003388E <AmiBlitz3.ab3@24584>    BNE 'l3
00033892 <AmiBlitz3.ab3@24585>    MOVE.b #0,d0
00033894 <AmiBlitz3.ab3@24586>    ASR.l #8,d0
00033898 <AmiBlitz3.ab3@24587> BRA 'do
0003389A <AmiBlitz3.ab3@24590>   ASL.l #8,d0
0003389C <AmiBlitz3.ab3@24591>     MOVE.b (a5)+,d0
000338A0 <AmiBlitz3.ab3@24592>    BEQ JL_0_DFA0
000338A4 <AmiBlitz3.ab3@24593>    CMP.b #$22,d0
000338A8 <AmiBlitz3.ab3@24594>    BNE 'l4
000338AC <AmiBlitz3.ab3@24595>    MOVE.b #0,d0
000338AE <AmiBlitz3.ab3@24596>    ASR.l #8,d0
000338B2 <AmiBlitz3.ab3@24597> BRA 'do
000338B6 <AmiBlitz3.ab3@24600>    CMP.b #$22,(a5)+
000338BA <AmiBlitz3.ab3@24601>    BNE JUMP_error4char
000338BE <AmiBlitz3.ab3@24604>   MOVE.w #$2b7c,d1
000338C4 <AmiBlitz3.ab3@24605>    TST.w varmode
000338C8 <AmiBlitz3.ab3@24606>    BEQ 'g3
000338CC <AmiBlitz3.ab3@24607>    BCLR #9,d1
000338D2 <AmiBlitz3.ab3@24610>     JSR writeword
000338D4 <AmiBlitz3.ab3@24611>     MOVE.l d0,d1
000338DA <AmiBlitz3.ab3@24612>     JSR writelong
000338DC <AmiBlitz3.ab3@24613>     MOVE.w d3,d1
000338E2 <AmiBlitz3.ab3@24614>     JSR writeword
000338E8 <AmiBlitz3.ab3@24615>     JSR get1bytemain
000338EA <AmiBlitz3.ab3@24616> RTS
000338F0 <AmiBlitz3.ab3@24622> JMP noleterr
000338F6 <AmiBlitz3.ab3@24626>   MOVE.w d2,vartype
000338FA <AmiBlitz3.ab3@24627>   MOVE.b #$3,D2
000338FE <AmiBlitz3.ab3@24630>   CMP.b #5,d2
00033902 <AmiBlitz3.ab3@24631>   BNE 'l1
00033908 <AmiBlitz3.ab3@24632>   MOVE.l a2,currtype
0003390C <AmiBlitz3.ab3@24636>   MOVEM.w D2-D3,-(A7)
00033912 <AmiBlitz3.ab3@24637>   MOVE.w varmode,-(A7)
00033918 <AmiBlitz3.ab3@24638>   MOVE.l a2,leftsidetype
0003391C <AmiBlitz3.ab3@24639>   BTST #$f,d2
00033920 <AmiBlitz3.ab3@24640>   BEQ 'nomultiassign
00033926 <AmiBlitz3.ab3@24641>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
0003392A <AmiBlitz3.ab3@24642> 'nomultiassign  ANDI.w #$FF,D2
00033930 <AmiBlitz3.ab3@24643>   MOVE.l lastoffset_org,-(A7)
00033934 <AmiBlitz3.ab3@24644>   BSR.w eval                                ; calc right side of var assign
00033938 <AmiBlitz3.ab3@24646>   MOVEM.l a0/a1,-(a7)
0003393E <AmiBlitz3.ab3@24647>   MOVE.l leftsidetype,a0
00033944 <AmiBlitz3.ab3@24648>   CMP.l #0,a0
00033948 <AmiBlitz3.ab3@24649>   BEQ 'nocheck
00033950 <AmiBlitz3.ab3@24650>   CMP.l #$100,4(a0)
00033954 <AmiBlitz3.ab3@24651>   BLE 'nocheck
0003395A <AmiBlitz3.ab3@24652>   TST.l typetocast
0003395E <AmiBlitz3.ab3@24653>   BEQ 'nocast
00033964 <AmiBlitz3.ab3@24654>   MOVE.l typetocast,a1
00033968 <AmiBlitz3.ab3@24655>   BRA 'typecheck
0003396E <AmiBlitz3.ab3@24656> 'nocast  TST.l rightsidetype
00033972 <AmiBlitz3.ab3@24657>   BEQ 'nocheck
00033978 <AmiBlitz3.ab3@24658>   MOVE.l rightsidetype,a1
00033980 <AmiBlitz3.ab3@24659>   CMP.l #$100,4(a1)
00033984 <AmiBlitz3.ab3@24660>   BGE 'typecheck
0003398C <AmiBlitz3.ab3@24661>   CMP.l #$3,4(a1)
00033990 <AmiBlitz3.ab3@24662>   BEQ 'ok                              ;long assign is allow with this codelines
00033994 <AmiBlitz3.ab3@24663>   BRA 'error
0003399A <AmiBlitz3.ab3@24665>   TST.b typecheck
0003399E <AmiBlitz3.ab3@24666>   BEQ 'nocheck
000339A4 <AmiBlitz3.ab3@24667>   TST.b notypecheck
000339A8 <AmiBlitz3.ab3@24668>   BNE 'ok
000339AA <AmiBlitz3.ab3@24669>   CMP.l a0,a1
000339AE <AmiBlitz3.ab3@24670>   BEQ 'ok
000339B2 <AmiBlitz3.ab3@24672>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
000339B6 <AmiBlitz3.ab3@24673>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000339BA <AmiBlitz3.ab3@24674>   BEQ 'ok
000339C0 <AmiBlitz3.ab3@24676>  JMP   error_convert_types     ;for syntax 4  = typecheck
000339C6 <AmiBlitz3.ab3@24679>    CLR.l typetocast
000339CA <AmiBlitz3.ab3@24680>    MOVEM.l (a7)+, a0/a1
000339D0 <AmiBlitz3.ab3@24681>   MOVE.l (A7)+,lastoffset_org
000339D6 <AmiBlitz3.ab3@24682>   MOVE.w commode,D1
000339DA <AmiBlitz3.ab3@24683>    BNE.w JL_0_DFCC
000339DE <AmiBlitz3.ab3@24684>    BSR.w JL_0_B63C
000339E4 <AmiBlitz3.ab3@24687>   MOVE.w (A7)+,varmode
000339E8 <AmiBlitz3.ab3@24688>   MOVEM.w (A7)+,D2-D3
000339EC <AmiBlitz3.ab3@24690>   MOVE.w #$2B40,D1
000339F2 <AmiBlitz3.ab3@24691>   MOVE.w varmode,D4
000339F6 <AmiBlitz3.ab3@24692>    BEQ.w JL_0_DFE8
000339FA <AmiBlitz3.ab3@24693>   BCLR #$9,D1
000339FE <AmiBlitz3.ab3@24696>   BTST #$F,D2
00033A02 <AmiBlitz3.ab3@24697>    BEQ.w JL_0_E090
00033A08 <AmiBlitz3.ab3@24698>    TST.b stackcorrect
00033A0C <AmiBlitz3.ab3@24699>    BNE 'st1
00033A12 <AmiBlitz3.ab3@24700>   MOVE.w commode,D1
00033A16 <AmiBlitz3.ab3@24701>    BEQ.w JL_0_E004
00033A1C <AmiBlitz3.ab3@24704>   MOVE.w pulla2,D1
00033A22 <AmiBlitz3.ab3@24705>    JSR writeword
00033A26 <AmiBlitz3.ab3@24708>   MOVE.w #$2480,D1
00033A2A <AmiBlitz3.ab3@24709>    MOVEM.l a0/d0,-(a7)
00033A30 <AmiBlitz3.ab3@24710>    MOVEA.l lastoffset_org,A0
00033A32 <AmiBlitz3.ab3@24711>    MOVE.l A0,D0
00033A36 <AmiBlitz3.ab3@24712>    BEQ.w 'skip
00033A38 <AmiBlitz3.ab3@24713>    MOVEA.l D0,A0
00033A40 <AmiBlitz3.ab3@24714>    MOVE.l $A(A0),currtype
00033A44 <AmiBlitz3.ab3@24717>   MOVEM.l (a7)+,a0/d0
00033A48 <AmiBlitz3.ab3@24718>   CMP.w #$2C,D0
00033A4C <AmiBlitz3.ab3@24719>    BNE.w JL_0_E090
00033A50 <AmiBlitz3.ab3@24720>     MOVE.w #$24C0,D1
00033A54 <AmiBlitz3.ab3@24721>    BSR.w JL_0_E090                                         ;write store
00033A5A <AmiBlitz3.ab3@24724>    MOVE.l lastoffset_org,D0
00033A62 <AmiBlitz3.ab3@24728>   MOVE.w #$FFFF,commode
00033A68 <AmiBlitz3.ab3@24729>   CLR.w varcodelen
00033A70 <AmiBlitz3.ab3@24730>   MOVE.b #1,optiarray
00033A76 <AmiBlitz3.ab3@24731>   MOVE.w pusha2,D1
00033A7C <AmiBlitz3.ab3@24732>    JSR writeword
00033A82 <AmiBlitz3.ab3@24733>   TST.l lastoffset_org
00033A86 <AmiBlitz3.ab3@24734>   BEQ dimmore
00033A8C <AmiBlitz3.ab3@24735>   MOVEA.l lastoffset_org,A0
00033A8E <AmiBlitz3.ab3@24736>   MOVE.l (A0),D0
00033A92 <AmiBlitz3.ab3@24737>    BEQ.w JUMP_comerr
00033A94 <AmiBlitz3.ab3@24738>   MOVEA.l D0,A0
00033A9A <AmiBlitz3.ab3@24739>   MOVE.l A0,lastoffset_org
00033AA0 <AmiBlitz3.ab3@24740>   BTST #$1,$7(A0)
00033AA4 <AmiBlitz3.ab3@24741>    BNE.w JUMP_nocomerr
00033AA8 <AmiBlitz3.ab3@24742>   MOVEA.l $A(A0),A1
00033AAC <AmiBlitz3.ab3@24743>   MOVE.l $4(A1),D2
00033AB2 <AmiBlitz3.ab3@24746>   BTST #$0,$7(A0)
00033AB6 <AmiBlitz3.ab3@24747>    BNE.w JL_0_E078
00033ABC <AmiBlitz3.ab3@24748>   CMP.l #$100,D2
00033AC0 <AmiBlitz3.ab3@24749>    BCC.l JUMP_nocomerr
00033AC4 <AmiBlitz3.ab3@24750> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00033ACA <AmiBlitz3.ab3@24753>         CLR.b optiarray
00033ACE <AmiBlitz3.ab3@24754>         CMP.w #"@@",(a5)
00033AD2 <AmiBlitz3.ab3@24755>         BEQ 'n1
00033AD6 <AmiBlitz3.ab3@24756> BRA 'd1
00033ADC <AmiBlitz3.ab3@24759>   JSR nextline
00033ADE <AmiBlitz3.ab3@24760>         MOVE.l a5,-(a7)
00033AE0 <AmiBlitz3.ab3@24763>   MOVE.b (a5)+,d0
00033AE4 <AmiBlitz3.ab3@24764>         CMP.b #$20,d0
00033AE8 <AmiBlitz3.ab3@24765>         BEQ 'l2
00033AEA <AmiBlitz3.ab3@24766>         MOVE.l (a7)+,a5
00033AEE <AmiBlitz3.ab3@24767>         CMP.b #";",d0
00033AF2 <AmiBlitz3.ab3@24768>         BEQ 'n1
00033AF8 <AmiBlitz3.ab3@24771>         TST.w debugmode
00033AFC <AmiBlitz3.ab3@24772>         BEQ JL_0_DEE0
00033AFE <AmiBlitz3.ab3@24773>         MOVE.l a0,-(a7)
00033B04 <AmiBlitz3.ab3@24774>         MOVE.l pushat,a0
00033B0A <AmiBlitz3.ab3@24775>         CMP.l #0,a0
00033B0E <AmiBlitz3.ab3@24776>         BNE 'o1
00033B12 <AmiBlitz3.ab3@24777> BRA 'skip
00033B1A <AmiBlitz3.ab3@24780>         ADD.l #1,2(a0)
00033B20 <AmiBlitz3.ab3@24783>   CLR.w commode
00033B28 <AmiBlitz3.ab3@24784>         MOVE.b #1,stackcorrect
00033B2A <AmiBlitz3.ab3@24785>         MOVE.l (a7)+,a0
00033B30 <AmiBlitz3.ab3@24786> JMP JL_0_DEE0
00033B36 <AmiBlitz3.ab3@24789> JMP nocomerr
00033B3C <AmiBlitz3.ab3@24792>   CMP.l #$100,D2
00033B40 <AmiBlitz3.ab3@24793>    BCS.w JL_0_E084
00033B42 <AmiBlitz3.ab3@24794>   MOVEQ.l #$00,D2
00033B46 <AmiBlitz3.ab3@24797>   BSET #$E,D2
00033B4A <AmiBlitz3.ab3@24800>   BSET #$F,D2
00033B4E <AmiBlitz3.ab3@24801> BRA.w JL_0_DEE0
00033B54 <AmiBlitz3.ab3@24804>    MOVE.l destpointer,a4
00033B5C <AmiBlitz3.ab3@24805>    MOVE.l #$f22a6400,-4(a4)
00033B62 <AmiBlitz3.ab3@24806>    MOVE.w arrayoffset,d1
00033B68 <AmiBlitz3.ab3@24807> JMP writeword
00033B6E <AmiBlitz3.ab3@24810> JMP comerr
00033B74 <AmiBlitz3.ab3@24813>    TST.b fpu
00033B78 <AmiBlitz3.ab3@24814>    BEQ 'nofloat
00033B7C <AmiBlitz3.ab3@24815>    CMP.b #5,d2
00033B80 <AmiBlitz3.ab3@24816>    BNE 'nofloat
00033B86 <AmiBlitz3.ab3@24817>    CLR.w fp0var
00033B8C <AmiBlitz3.ab3@24818>    LEA regtable,a4
00033B8E <AmiBlitz3.ab3@24819>    TST.l (a4)
00033B92 <AmiBlitz3.ab3@24820>    BEQ 'noreg
00033B96 <AmiBlitz3.ab3@24821>    BTST #15,d2                                             ;regvars
00033B9A <AmiBlitz3.ab3@24822>    BNE 'noreg
00033B9E <AmiBlitz3.ab3@24823>    CMP.w 0+4(a4),d3
00033BA2 <AmiBlitz3.ab3@24824>    BNE 'doreg1
00033BA8 <AmiBlitz3.ab3@24825>    MOVE.l #$f2000380,d1
00033BAE <AmiBlitz3.ab3@24826>    MOVE.w regnum,d0
00033BB2 <AmiBlitz3.ab3@24827>    BNE 'noopt
00033BB8 <AmiBlitz3.ab3@24833>    MOVE.l destpointer,a4
00033BC0 <AmiBlitz3.ab3@24834>    CMP.l #$f2001c80,-8(a4)
00033BC4 <AmiBlitz3.ab3@24835>    BNE 'noopt
00033BCC <AmiBlitz3.ab3@24836>    CMP.l #$f2000422,-4(a4)
00033BD0 <AmiBlitz3.ab3@24837>    BNE 'noopt
00033BD6 <AmiBlitz3.ab3@24838>    MOVE.l #$f20003a2,d1
00033BE0 <AmiBlitz3.ab3@24839>    SUB.l #8,destpointer
00033BE2 <AmiBlitz3.ab3@24842>    ASL.w #7,d0
00033BE4 <AmiBlitz3.ab3@24843>    OR.w d0,d1
00033BEA <AmiBlitz3.ab3@24844>    JSR writelong
00033BEC <AmiBlitz3.ab3@24845> RTS
00033BF0 <AmiBlitz3.ab3@24848>   CMP.w 8+4(a4),d3
00033BF4 <AmiBlitz3.ab3@24849>    BNE 'doreg2
00033BFA <AmiBlitz3.ab3@24850>    MOVE.l #$f2000300,d1
00033C00 <AmiBlitz3.ab3@24851>    MOVE.w regnum,d0
00033C02 <AmiBlitz3.ab3@24852>    ASL.w #7,d0
00033C04 <AmiBlitz3.ab3@24853>    OR.w d0,d1
00033C0A <AmiBlitz3.ab3@24854>    JSR writelong
00033C0C <AmiBlitz3.ab3@24855> RTS
00033C10 <AmiBlitz3.ab3@24858>   CMP.w 16+4(a4),d3
00033C14 <AmiBlitz3.ab3@24859>    BNE 'doreg3
00033C1A <AmiBlitz3.ab3@24860>    MOVE.l #$f2000280,d1
00033C20 <AmiBlitz3.ab3@24861>    MOVE.w regnum,d0
00033C22 <AmiBlitz3.ab3@24862>    ASL.w #7,d0
00033C24 <AmiBlitz3.ab3@24863>    OR.w d0,d1
00033C2A <AmiBlitz3.ab3@24864>    JSR  writelong
00033C2C <AmiBlitz3.ab3@24865>  RTS
00033C30 <AmiBlitz3.ab3@24868>   CMP.w 24+4(a4),d3
00033C34 <AmiBlitz3.ab3@24869>    BNE 'doreg4
00033C3A <AmiBlitz3.ab3@24870>    MOVE.l #$f2000200,d1
00033C40 <AmiBlitz3.ab3@24871>    MOVE.w regnum,d0
00033C42 <AmiBlitz3.ab3@24872>    ASL.w #7,d0
00033C44 <AmiBlitz3.ab3@24873>    OR.w d0,d1
00033C4A <AmiBlitz3.ab3@24874>    JSR writelong
00033C4C <AmiBlitz3.ab3@24875> RTS
00033C50 <AmiBlitz3.ab3@24878>   CMP.w 32+4(a4),d3
00033C54 <AmiBlitz3.ab3@24879>    BNE 'noreg
00033C5A <AmiBlitz3.ab3@24880>    MOVE.l #$f2000180,d1
00033C60 <AmiBlitz3.ab3@24881>    MOVE.w regnum,d0
00033C62 <AmiBlitz3.ab3@24882>    ASL.w #7,d0
00033C64 <AmiBlitz3.ab3@24883>    OR.w d0,d1
00033C6A <AmiBlitz3.ab3@24884>    JSR writelong
00033C6C <AmiBlitz3.ab3@24885> RTS
00033C72 <AmiBlitz3.ab3@24888>    TST.w regnum
00033C76 <AmiBlitz3.ab3@24889>    BNE 'nofp0
00033C7C <AmiBlitz3.ab3@24890>    MOVE.l destpointer ,a4
00033C84 <AmiBlitz3.ab3@24891>    CMP.l #$f2304400,-6(a4)
00033C88 <AmiBlitz3.ab3@24892>    BNE 'do
00033C8E <AmiBlitz3.ab3@24893>    CMP.w #$1990,-2(a4)
00033C92 <AmiBlitz3.ab3@24894>    BNE 'do
00033C96 <AmiBlitz3.ab3@24895>    BTST #15,d2                                             ;types ?
00033C9A <AmiBlitz3.ab3@24896>    BNE 'do
00033CA0 <AmiBlitz3.ab3@24897>   MOVE.l #$2b701990,d1                                     ;var
00033CA6 <AmiBlitz3.ab3@24898>   TST.w varmode
00033CAA <AmiBlitz3.ab3@24899>   BEQ 'glob1
00033CAE <AmiBlitz3.ab3@24900>   BCLR #25,d1
00033CB2 <AmiBlitz3.ab3@24903>   MOVE.l d1,-6(a4)
00033CB6 <AmiBlitz3.ab3@24904>   MOVE.w d3,-2(a4)
00033CBC <AmiBlitz3.ab3@24905>   CLR.w fp0var
00033CC4 <AmiBlitz3.ab3@24906>   MOVE.w #$ffff,fp0mode
00033CC6 <AmiBlitz3.ab3@24907> RTS
00033CCE <AmiBlitz3.ab3@24910>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00033CD2 <AmiBlitz3.ab3@24911>    BNE 'do3
00033CDC <AmiBlitz3.ab3@24912>    CMP.l #newtype_double,currtype
00033CE0 <AmiBlitz3.ab3@24913>    BEQ 'do4
00033CE4 <AmiBlitz3.ab3@24916>   MOVE.w #$2b6d,d1
00033CEA <AmiBlitz3.ab3@24917>    TST.w varmode
00033CEE <AmiBlitz3.ab3@24918>    BEQ 'g2
00033CF2 <AmiBlitz3.ab3@24919>     BCLR #9,d1
00033CF6 <AmiBlitz3.ab3@24922>     CMP.w #$2b6d,d1
00033CFA <AmiBlitz3.ab3@24923>     BNE 'd1
00033CFE <AmiBlitz3.ab3@24924>     CMP.w -2(a4),d3
00033D02 <AmiBlitz3.ab3@24925>     BNE 'd1
00033D08 <AmiBlitz3.ab3@24926>     SUBQ.l #6,destpointer
00033D0C <AmiBlitz3.ab3@24927> BRA 'd12
00033D10 <AmiBlitz3.ab3@24930>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00033D16 <AmiBlitz3.ab3@24931>     MOVE.w -2(a4),-4(a4)
00033D1A <AmiBlitz3.ab3@24932>     MOVE.w d3,-2(a4)
00033D20 <AmiBlitz3.ab3@24935>   CLR.w fp0var
00033D28 <AmiBlitz3.ab3@24936>     MOVE.w #$ffff,fp0mode
00033D2A <AmiBlitz3.ab3@24937> RTS
00033D32 <AmiBlitz3.ab3@24940>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00033D36 <AmiBlitz3.ab3@24941>    BNE 'do4
00033D3A <AmiBlitz3.ab3@24942>    MOVE.w #$2b6c,d1
00033D40 <AmiBlitz3.ab3@24943>       TST.w varmode
00033D44 <AmiBlitz3.ab3@24944>    BEQ 'g3
00033D48 <AmiBlitz3.ab3@24945>    BCLR #9,d1
00033D4C <AmiBlitz3.ab3@24948>   MOVE.w d1,-6(a4)
00033D52 <AmiBlitz3.ab3@24949>     MOVE.w -2(a4),-4(a4)
00033D56 <AmiBlitz3.ab3@24950>     MOVE.w d3,-2(a4)
00033D5C <AmiBlitz3.ab3@24951>     CLR.w fp0var
00033D64 <AmiBlitz3.ab3@24952>     MOVE.w #$ffff,fp0mode
00033D66 <AmiBlitz3.ab3@24953> RTS
00033D6C <AmiBlitz3.ab3@24956>   MOVE.w d3,fp0var
00033D76 <AmiBlitz3.ab3@24957>    MOVE.w varmode,fp0mode
00033D78 <AmiBlitz3.ab3@24958>    ADDQ.l #6,a4
00033D7E <AmiBlitz3.ab3@24959>    MOVE.l a4,fp0addr
00033D88 <AmiBlitz3.ab3@24960>    MOVE.l firstiff,fp0iff
00033D8C <AmiBlitz3.ab3@24963>   MOVEM.l d0/d4,-(a7)
00033D8E <AmiBlitz3.ab3@24964>    MOVEQ #0,d0
00033D94 <AmiBlitz3.ab3@24965>     MOVE.w regnum,d0
00033D96 <AmiBlitz3.ab3@24966>    ASL.w #7,d0                                             ;fpu store var
00033D9A <AmiBlitz3.ab3@24967>   BTST #15,d2
00033D9E <AmiBlitz3.ab3@24968>    BEQ 'var
00033DA0 <AmiBlitz3.ab3@24969>    MOVE.w d1,d4
00033DA4 <AmiBlitz3.ab3@24970>    CMP.w #$24c0,d4
00033DA8 <AmiBlitz3.ab3@24971>    BNE 'nopl
00033DAE <AmiBlitz3.ab3@24972>    MOVE.l #$f21a6400,d1
00033DB0 <AmiBlitz3.ab3@24973>    MOVEQ #0,d3
00033DB4 <AmiBlitz3.ab3@24974> BRA 'glob
00033DBA <AmiBlitz3.ab3@24978>   MOVE.l #$f2126400,d1
00033DBC <AmiBlitz3.ab3@24979>    TST.w d3                                                ;offset =0
00033DC0 <AmiBlitz3.ab3@24980>    BNE 'offset
00033DC6 <AmiBlitz3.ab3@24981>    MOVE.l #$f2126400,d1
00033DC8 <AmiBlitz3.ab3@24989>    MOVEQ #0,d3
00033DCC <AmiBlitz3.ab3@24990> BRA 'glob
00033DD2 <AmiBlitz3.ab3@24993>   MOVE.l #$f22d6400,d1                                     ;var
00033DD8 <AmiBlitz3.ab3@24994>   TST.w varmode
00033DDC <AmiBlitz3.ab3@24995>   BEQ 'glob
00033DE0 <AmiBlitz3.ab3@24996>   BCLR #16,d1
00033DE2 <AmiBlitz3.ab3@24997>  'glob OR.l d0,d1
00033DEC <AmiBlitz3.ab3@25000>   CMP.l #newtype_double,currtype
00033DF0 <AmiBlitz3.ab3@25001>   BNE 'dbl1
00033DF6 <AmiBlitz3.ab3@25002>   OR.l #$00001000,d1
00033DFC <AmiBlitz3.ab3@25005>   JSR writelong
00033E02 <AmiBlitz3.ab3@25006>   CLR.l currtype
00033E06 <AmiBlitz3.ab3@25007>   MOVEM.l (a7)+,d0/d4
00033E08 <AmiBlitz3.ab3@25008>   MOVE.l d3,d1
00033E0C <AmiBlitz3.ab3@25009>   BEQ 'nooffs
00033E12 <AmiBlitz3.ab3@25010> JMP writeword
00033E14 <AmiBlitz3.ab3@25013> RTS
00033E1A <AmiBlitz3.ab3@25027>     TST.b fast                                             ;write lea->xx(a2)
00033E1E <AmiBlitz3.ab3@25028>    BEQ 'la10
00033E24 <AmiBlitz3.ab3@25032>    TST.b quickadd
00033E2A <AmiBlitz3.ab3@25034>      CLR.b quickadd
00033E2E <AmiBlitz3.ab3@25035>    CMP.w #$2480,d1
00033E32 <AmiBlitz3.ab3@25036>    BNE 'la10
00033E38 <AmiBlitz3.ab3@25037>    TST.b optiarray
00033E3C <AmiBlitz3.ab3@25038>    BNE 'la10
00033E42 <AmiBlitz3.ab3@25039>    MOVE.l destpointer,a4
00033E48 <AmiBlitz3.ab3@25040>    CMP.w #$45ea,-4(a4)
00033E4C <AmiBlitz3.ab3@25041>    BNE 'la10
00033E54 <AmiBlitz3.ab3@25042>    CMP.w #8,pushclen
00033E58 <AmiBlitz3.ab3@25043>    BEQ 'la100
00033E60 <AmiBlitz3.ab3@25044>    CMP.w #6,pushclen
00033E64 <AmiBlitz3.ab3@25045>    BNE 'la10
00033E68 <AmiBlitz3.ab3@25046>    CMP.b #3,d2
00033E6C <AmiBlitz3.ab3@25047>    BCS 'la110
00033E72 <AmiBlitz3.ab3@25049>    MOVE.w #$2540,-2(a4)
00033E78 <AmiBlitz3.ab3@25050>    MOVE.w arrayoffset,d1
00033E7E <AmiBlitz3.ab3@25051> JMP writeword
00033E84 <AmiBlitz3.ab3@25054>    CLR.b quickadd
00033E86 <AmiBlitz3.ab3@25055> RTS
00033E8A <AmiBlitz3.ab3@25058>    CMP.b #2,d2
00033E8E <AmiBlitz3.ab3@25059>    BNE 'la120
00033E94 <AmiBlitz3.ab3@25060>     MOVE.w #$3540,-2(a4)
00033E9A <AmiBlitz3.ab3@25061>    MOVE.w arrayoffset,d1
00033EA0 <AmiBlitz3.ab3@25062> JMP writeword
00033EA4 <AmiBlitz3.ab3@25065>   CMP.b #1,d2
00033EA8 <AmiBlitz3.ab3@25066>    BNE.s 'la10
00033EAE <AmiBlitz3.ab3@25067>     MOVE.w #$1540,-2(a4)
00033EB4 <AmiBlitz3.ab3@25068>    MOVE.w arrayoffset,d1
00033EBA <AmiBlitz3.ab3@25069> JMP writeword
00033EBE <AmiBlitz3.ab3@25072>    CMP.b #3,d2
00033EC2 <AmiBlitz3.ab3@25073>    BCS 'la11
00033EC8 <AmiBlitz3.ab3@25074>    MOVE.w #$2540,-4(a4)
00033ECA <AmiBlitz3.ab3@25075> RTS
00033ECE <AmiBlitz3.ab3@25078>    CMP.b #2,d2
00033ED2 <AmiBlitz3.ab3@25079>    BNE 'la12
00033ED8 <AmiBlitz3.ab3@25080>     MOVE.w #$3540,-4(a4)
00033EDA <AmiBlitz3.ab3@25081> RTS
00033EDE <AmiBlitz3.ab3@25083>  'la12 CMP.b #1,d2
00033EE2 <AmiBlitz3.ab3@25084>    BNE.s 'la10
00033EE8 <AmiBlitz3.ab3@25085>     MOVE.w #$1540,-4(a4)
00033EEA <AmiBlitz3.ab3@25086> RTS
00033EF0 <AmiBlitz3.ab3@25089>   CLR.b optiarray
00033EF4 <AmiBlitz3.ab3@25090>    CMP.b #$1,D2
00033EF8 <AmiBlitz3.ab3@25091>    BEQ.w JL_0_E0AC
00033EFC <AmiBlitz3.ab3@25092>    BSR.w varalign
00033F00 <AmiBlitz3.ab3@25093>    CMP.b #$3,D2
00033F04 <AmiBlitz3.ab3@25094>    BCC.w writevarlong
00033F0A <AmiBlitz3.ab3@25095>    TST.b fast                                              ;optiimmi
00033F0E <AmiBlitz3.ab3@25096>    BEQ 'l10b
00033F14 <AmiBlitz3.ab3@25101>    MOVE.l destpointer,a0
00033F1A <AmiBlitz3.ab3@25102>    SUB.l imm_addr,a0
00033F20 <AmiBlitz3.ab3@25103>    CMP.l #4,a0
00033F24 <AmiBlitz3.ab3@25104>    BNE 'l10
00033F2A <AmiBlitz3.ab3@25105>    CLR.l imm_addr
00033F30 <AmiBlitz3.ab3@25106>    MOVE.l destpointer,a4
00033F34 <AmiBlitz3.ab3@25107>    OR.w #$107c,d1
00033F38 <AmiBlitz3.ab3@25108>    MOVE.w d1,-4(a4)
00033F3A <AmiBlitz3.ab3@25109>     MOVE.w D3,D1
00033F40 <AmiBlitz3.ab3@25110> JMP writeword
00033F46 <AmiBlitz3.ab3@25113>   MOVE.l destpointer,a0
00033F4C <AmiBlitz3.ab3@25114>   SUB.l load_var_addr,a0
00033F52 <AmiBlitz3.ab3@25115>   CMP.l #4,a0
00033F56 <AmiBlitz3.ab3@25116>   BNE 'l10b
00033F5C <AmiBlitz3.ab3@25117>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00033F60 <AmiBlitz3.ab3@25118>   BNE 'l10b
00033F66 <AmiBlitz3.ab3@25120>   CLR.l load_var_addr
00033F6C <AmiBlitz3.ab3@25121>   MOVE.l destpointer,a4
00033F70 <AmiBlitz3.ab3@25122>   OR.w #$102d,d1
00033F74 <AmiBlitz3.ab3@25123>   MOVE.w d1,-4(a4)
00033F76 <AmiBlitz3.ab3@25124>   MOVE.w d3,d1
00033F7C <AmiBlitz3.ab3@25125> JMP writeword
00033F80 <AmiBlitz3.ab3@25128>   ORI.w #$1000,D1                                          ;word
00033F84 <AmiBlitz3.ab3@25129> BRA.w writestorevar
00033F8A <AmiBlitz3.ab3@25133>    TST.b fast                                              ;optiimmi
00033F8E <AmiBlitz3.ab3@25134>    BEQ 'l10b
00033F94 <AmiBlitz3.ab3@25139>    MOVE.l destpointer,a0
00033F9A <AmiBlitz3.ab3@25140>    SUB.l imm_addr,a0
00033FA0 <AmiBlitz3.ab3@25141>    CMP.l #4,a0
00033FA4 <AmiBlitz3.ab3@25142>    BNE 'l10
00033FAA <AmiBlitz3.ab3@25143>    CLR.l imm_addr
00033FB0 <AmiBlitz3.ab3@25144>    MOVE.l destpointer,a4
00033FB4 <AmiBlitz3.ab3@25145>    OR.w #$7c,d1
00033FB8 <AmiBlitz3.ab3@25146>    EORI #$3000,d1
00033FBC <AmiBlitz3.ab3@25147>    MOVE.w d1,-4(a4)
00033FBE <AmiBlitz3.ab3@25148>       MOVE.w D3,D1
00033FC4 <AmiBlitz3.ab3@25149> JMP writeword
00033FCA <AmiBlitz3.ab3@25152>   MOVE.l destpointer,a0
00033FD0 <AmiBlitz3.ab3@25153>   SUB.l load_var_addr,a0
00033FD6 <AmiBlitz3.ab3@25154>   CMP.l #4,a0
00033FDA <AmiBlitz3.ab3@25155>   BNE 'l10b
00033FE0 <AmiBlitz3.ab3@25156>   CLR.l load_var_addr
00033FE6 <AmiBlitz3.ab3@25157>   MOVE.l destpointer,a4
00033FEC <AmiBlitz3.ab3@25158>    CMP.w #$1b6d,-4(a4)
00033FF0 <AmiBlitz3.ab3@25159>    BNE 'l10b
00033FF4 <AmiBlitz3.ab3@25160>    OR.w #$2d,d1
00033FF8 <AmiBlitz3.ab3@25161>    EORI #$3000,d1
00033FFC <AmiBlitz3.ab3@25162>    MOVE.w d1,-4(a4)
00033FFE <AmiBlitz3.ab3@25163>   MOVE.w d3,d1
00034004 <AmiBlitz3.ab3@25164> JMP writeword
0003400A <AmiBlitz3.ab3@25167>   ADDQ.w #1,pcodd                                          ;byte
0003400E <AmiBlitz3.ab3@25168>   EORI.w #$3000,D1
00034014 <AmiBlitz3.ab3@25171>   JSR writeword
00034018 <AmiBlitz3.ab3@25172>   BTST #$7,D1
0003401C <AmiBlitz3.ab3@25173>    BNE JL_0_E0C6
0003401E <AmiBlitz3.ab3@25174>   MOVE.w D3,D1
00034024 <AmiBlitz3.ab3@25175> JMP writeword
0003402A <AmiBlitz3.ab3@25178>    TST.b fast                                              ;optiimmi
0003402E <AmiBlitz3.ab3@25179>    BEQ 'l10b
00034034 <AmiBlitz3.ab3@25183>    MOVE.l destpointer,a0
0003403A <AmiBlitz3.ab3@25184>    SUB.l imm_addr,a0
00034040 <AmiBlitz3.ab3@25185>    CMP.l #6,a0
00034044 <AmiBlitz3.ab3@25186>    BNE 'l10
0003404A <AmiBlitz3.ab3@25187>    CLR.l imm_addr
00034050 <AmiBlitz3.ab3@25188>    MOVE.l destpointer,a4
00034054 <AmiBlitz3.ab3@25189>    OR.w #$7c,d1
00034058 <AmiBlitz3.ab3@25190>    MOVE.w d1,-6(a4)
0003405A <AmiBlitz3.ab3@25191>     MOVE.w D3,D1
00034060 <AmiBlitz3.ab3@25192> JMP writeword
00034066 <AmiBlitz3.ab3@25195>   MOVE.l destpointer,a0
0003406C <AmiBlitz3.ab3@25196>   SUB.l load_var_addr,a0
00034072 <AmiBlitz3.ab3@25197>   CMP.l #4,a0
00034076 <AmiBlitz3.ab3@25198>   BNE 'l10b
0003407C <AmiBlitz3.ab3@25199>   CLR.l load_var_addr
00034082 <AmiBlitz3.ab3@25200>   MOVE.l destpointer,a4
00034088 <AmiBlitz3.ab3@25201>   CMP.w #$245f,-2(a4)
0003408C <AmiBlitz3.ab3@25202>   BEQ 'l10b
00034090 <AmiBlitz3.ab3@25203>   OR.w #$28,d1
00034094 <AmiBlitz3.ab3@25204>   OR.w d1,-4(a4)
0003409A <AmiBlitz3.ab3@25205>   CMP.w #$2b6d,-4(a4)
0003409E <AmiBlitz3.ab3@25206>   BNE 'd1
000340A2 <AmiBlitz3.ab3@25207>   CMP.w -2(a4),d3
000340A6 <AmiBlitz3.ab3@25208>   BNE 'd1
000340AC <AmiBlitz3.ab3@25209>   SUBQ.l #4,destpointer
000340AE <AmiBlitz3.ab3@25210> RTS
000340B0 <AmiBlitz3.ab3@25213>   MOVE.w d3,d1
000340B6 <AmiBlitz3.ab3@25214> JMP writeword
000340BC <AmiBlitz3.ab3@25217>   JSR writeword
000340C0 <AmiBlitz3.ab3@25218>   BTST #$7,D1
000340C4 <AmiBlitz3.ab3@25219>    BNE.b JL_0_E0C6
000340C6 <AmiBlitz3.ab3@25220>   MOVE.w D3,D1
000340CC <AmiBlitz3.ab3@25221> JMP writeword
000340CE <AmiBlitz3.ab3@25224> RTS
000340D0 <AmiBlitz3.ab3@25228>   MOVE.w D1,-(A7)
000340D4 <AmiBlitz3.ab3@25229>   MOVE.w pcodd(PC),D1
000340D6 <AmiBlitz3.ab3@25230>   LSR.w #1,D1
000340DA <AmiBlitz3.ab3@25231>    BCC.b JL_0_E0E2
000340E0 <AmiBlitz3.ab3@25232>   CLR.w pcodd
000340E6 <AmiBlitz3.ab3@25233>   MOVE.w add1a2,D1
000340EC <AmiBlitz3.ab3@25234>    JSR writeword
000340EE <AmiBlitz3.ab3@25237>   MOVE.w (A7)+,D1
000340F0 <AmiBlitz3.ab3@25238> RTS
000340F2 <AmiBlitz3.ab3@25242> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
000340F4 <AmiBlitz3.ab3@25245> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
000340F6 <AmiBlitz3.ab3@25246> listadd:   Ds.w 1                                          ;set to 8 if it's a list
000340F8 <AmiBlitz3.ab3@25247> listsize:  Ds.w 1
000340FE <AmiBlitz3.ab3@25251>   ADDQ.w #1,regnum
00034106 <AmiBlitz3.ab3@25252>   MOVE.b #1,nowdeclare
0003410C <AmiBlitz3.ab3@25253>   CLR.b dimkeep
00034114 <AmiBlitz3.ab3@25254>    CMP.l #"KEEP",-1(a5)
00034118 <AmiBlitz3.ab3@25255>   BNE 'nokeep
0003411E <AmiBlitz3.ab3@25256>   CMP.b #" ",3(a5)
00034122 <AmiBlitz3.ab3@25257>   BNE 'nokeep
00034124 <AmiBlitz3.ab3@25258>   ADDQ.l #3,a5
00034128 <AmiBlitz3.ab3@25261>     CMP.b #" ",(a5)
0003412C <AmiBlitz3.ab3@25262>     BNE '1
0003412E <AmiBlitz3.ab3@25263>    ADDQ #1,a5
00034132 <AmiBlitz3.ab3@25264> BRA '2
00034138 <AmiBlitz3.ab3@25267>   MOVE.l a5,lastsourcepos
00034140 <AmiBlitz3.ab3@25268>   MOVE.b #1,dimkeep
00034144 <AmiBlitz3.ab3@25276>   MOVE.w #$FF9A,D1
0003414A <AmiBlitz3.ab3@25277>   JSR uselib
00034150 <AmiBlitz3.ab3@25280>   CLR.w listadd
00034154 <AmiBlitz3.ab3@25281>   CMP.w #-$7F4D,D0
00034158 <AmiBlitz3.ab3@25282>    BNE.w JL_0_E11E
00034160 <AmiBlitz3.ab3@25283>   MOVE.w #$0008,listadd
00034164 <AmiBlitz3.ab3@25284>   MOVE.w #$FFFA,D1
0003416A <AmiBlitz3.ab3@25285>    JSR uselib
00034170 <AmiBlitz3.ab3@25286>    JSR get1bytemain
00034176 <AmiBlitz3.ab3@25289>   CLR.w nonew
0003417C <AmiBlitz3.ab3@25290>    JSR getparameter
00034184 <AmiBlitz3.ab3@25291>   BTST #$1,flagmask+1
00034188 <AmiBlitz3.ab3@25292>    BEQ.w JUMP_syntaxerr
0003418E <AmiBlitz3.ab3@25293>    JSR JL_0_8E3C
00034194 <AmiBlitz3.ab3@25294>   MOVE.w notshared,D1
00034198 <AmiBlitz3.ab3@25295>    BNE.w JL_0_E198
000341A0 <AmiBlitz3.ab3@25296>   MOVE.w $8(A3),temp1
000341A6 <AmiBlitz3.ab3@25297>   MOVE.w proceduremode,D2
000341AA <AmiBlitz3.ab3@25298>    BNE.w JL_0_E176
000341B0 <AmiBlitz3.ab3@25299>   MOVE.w globalvarpointer,-(A7)
000341B8 <AmiBlitz3.ab3@25300>   MOVE.w $4(A3),globalvarpointer
000341BE <AmiBlitz3.ab3@25301>   ADDQ.w #4,globalvarpointer
000341C2 <AmiBlitz3.ab3@25302>    BSR.w write_dim_code
000341C8 <AmiBlitz3.ab3@25303>   MOVE.w (A7)+,globalvarpointer
000341CC <AmiBlitz3.ab3@25304> BRA.w JL_0_E1BA
000341D2 <AmiBlitz3.ab3@25315>   MOVE.w globalvarpointer,-(A7)
000341D8 <AmiBlitz3.ab3@25316>             MOVE.w proceduremode,-(a7)
000341DE <AmiBlitz3.ab3@25317>             CLR.w proceduremode
000341E6 <AmiBlitz3.ab3@25318>   MOVE.w $4(A3),globalvarpointer
000341EC <AmiBlitz3.ab3@25319>   ADDQ.w #4,globalvarpointer
000341F0 <AmiBlitz3.ab3@25320>    BSR.w write_dim_code
000341F6 <AmiBlitz3.ab3@25321>    MOVE.w (a7)+,proceduremode
000341FC <AmiBlitz3.ab3@25322>   MOVE.w (A7)+,globalvarpointer
00034200 <AmiBlitz3.ab3@25323> BRA.w JL_0_E1BA
00034208 <AmiBlitz3.ab3@25326>   MOVE.w #$FFFF,temp1
0003420C <AmiBlitz3.ab3@25327>   MOVE.w listadd(PC),D1
00034210 <AmiBlitz3.ab3@25328>    BEQ.w JL_0_E1B6
00034218 <AmiBlitz3.ab3@25329>   MOVE.w #$4000,temp1
0003421E <AmiBlitz3.ab3@25330>   BSET #$0,$6(A3)
00034224 <AmiBlitz3.ab3@25333>         TST.w proceduremode
00034228 <AmiBlitz3.ab3@25334>        BNE 'l1
0003422E <AmiBlitz3.ab3@25335>        MOVE.w locvaroff,-(a7)
00034232 <AmiBlitz3.ab3@25338>   BSR.w write_dim_code
00034238 <AmiBlitz3.ab3@25339>         TST.w proceduremode
0003423C <AmiBlitz3.ab3@25340>         BNE JL_0_E1BA
00034242 <AmiBlitz3.ab3@25341>        MOVE.w (A7)+,locvaroff
00034248 <AmiBlitz3.ab3@25344>   JSR get1bytemain
0003424C <AmiBlitz3.ab3@25345>   CMP.w #$2C,D0
00034250 <AmiBlitz3.ab3@25346>    BNE.w JL_0_E1CE
00034256 <AmiBlitz3.ab3@25347>    JSR get1bytemain
0003425A <AmiBlitz3.ab3@25348> BRA.w JL_0_E0FC
0003425C <AmiBlitz3.ab3@25351> RTS
00034264 <AmiBlitz3.ab3@25354>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
0003426A <AmiBlitz3.ab3@25355>   MOVE.w beginarr,D1
00034270 <AmiBlitz3.ab3@25356>    JSR writeword
00034272 <AmiBlitz3.ab3@25357>   MOVEQ.l #$00,D1
00034278 <AmiBlitz3.ab3@25358>    JSR writeword
0003427A <AmiBlitz3.ab3@25359>   MOVEQ.l #$04,D1
00034282 <AmiBlitz3.ab3@25360>   BTST #$0,flagmask+1
00034286 <AmiBlitz3.ab3@25361>    BNE.w write_dim_code__pointer
0003428A <AmiBlitz3.ab3@25362>   MOVE.w $8(A2),D1
0003428E <AmiBlitz3.ab3@25365>   ADD.w listadd(PC),D1                                     ;size of one element.
00034294 <AmiBlitz3.ab3@25366>   MOVE.w D1,listsize
0003429A <AmiBlitz3.ab3@25367>    JSR writeword
000342A0 <AmiBlitz3.ab3@25368>   CLR.w temp2                                              ;# dim's got
000342A2 <AmiBlitz3.ab3@25369>   MOVE.l A3,-(A7)
000342A8 <AmiBlitz3.ab3@25372>   ADDQ.w #1,temp2
000342AA <AmiBlitz3.ab3@25373>   MOVEQ.l #$03,D2                                          ;get word
000342B0 <AmiBlitz3.ab3@25374>   MOVE.w notshared,-(a7)
000342B6 <AmiBlitz3.ab3@25375>    JSR eval
000342BC <AmiBlitz3.ab3@25376>   MOVE.w (a7)+,notshared
000342C2 <AmiBlitz3.ab3@25377>   TST.b debugmode
000342C6 <AmiBlitz3.ab3@25378>    BEQ.w write_dim_code__norerr0
000342CA <AmiBlitz3.ab3@25379>   MOVE.w #$C30F,D1
000342CE <AmiBlitz3.ab3@25385>       MOVE.w #$5281,d1
000342D4 <AmiBlitz3.ab3@25386>       JSR writeword
000342DA <AmiBlitz3.ab3@25387>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
000342E0 <AmiBlitz3.ab3@25388>       JSR writelong
000342E6 <AmiBlitz3.ab3@25389>   MOVE.w proceduremode,D2
000342EA <AmiBlitz3.ab3@25390>    BEQ.w write_dim_code__global
000342F0 <AmiBlitz3.ab3@25391>   SUBQ.w #4,locvaroff
000342FA <AmiBlitz3.ab3@25392>   MOVE.w locvaroff,putarr+2
000342FE <AmiBlitz3.ab3@25393> BRA.w write_dim_code__doit
00034304 <AmiBlitz3.ab3@25396> JMP syntaxerr
0003430E <AmiBlitz3.ab3@25399>   MOVE.w globalvarpointer,putarr+2
00034314 <AmiBlitz3.ab3@25400>   ADDQ.w #4,globalvarpointer
0003431A <AmiBlitz3.ab3@25403>   TST.b dimkeep
0003431E <AmiBlitz3.ab3@25404>            BEQ write_dim_code__doit_l1
00034320 <AmiBlitz3.ab3@25405>       MOVEQ #0,d1
00034326 <AmiBlitz3.ab3@25406>       MOVE.w putarr+2,d1
0003432C <AmiBlitz3.ab3@25407>       OR.l  #$222d0000,d1
00034332 <AmiBlitz3.ab3@25408>       MOVE.w proceduremode,D2
00034336 <AmiBlitz3.ab3@25409>       BEQ write_dim_code__doit_l2
0003433C <AmiBlitz3.ab3@25410>       TST.w notshared
00034340 <AmiBlitz3.ab3@25411>       BEQ write_dim_code__doit_l2
00034346 <AmiBlitz3.ab3@25412>       SUB.l #$00010000,d1
0003434C <AmiBlitz3.ab3@25415>   JSR writelong
00034352 <AmiBlitz3.ab3@25418>   MOVE.l putarr,D1
00034358 <AmiBlitz3.ab3@25419>       TST.w notshared
0003435C <AmiBlitz3.ab3@25420>       BNE write_dim_code__doit_l1a
00034362 <AmiBlitz3.ab3@25421>       JSR writelong
00034366 <AmiBlitz3.ab3@25422> BRA write_dim_code__doit_l4
0003436C <AmiBlitz3.ab3@25425>   JSR pokela5d
00034370 <AmiBlitz3.ab3@25428>   CMP.w #$2C,D0
00034374 <AmiBlitz3.ab3@25429>    BEQ.w write_dim_code__loop
00034378 <AmiBlitz3.ab3@25430>   CMP.w #$29,D0
0003437C <AmiBlitz3.ab3@25431>    BNE.w JUMP_syntaxerr
0003437E <AmiBlitz3.ab3@25432>   MOVEA.l (A7)+,A3
00034384 <AmiBlitz3.ab3@25433>   MOVE.w temp1,D1
00034388 <AmiBlitz3.ab3@25434>    BMI.w write_dim_code__nocare
0003438C <AmiBlitz3.ab3@25438>   BTST #$E,D1
00034390 <AmiBlitz3.ab3@25439>    BEQ.w write_dim_code__notl
00034398 <AmiBlitz3.ab3@25440>   CMPI.w #$1,temp2
0003439C <AmiBlitz3.ab3@25441>    BNE.w JUMP_redimerr
000343A0 <AmiBlitz3.ab3@25442> BRA.w write_dim_code__nocare
000343A6 <AmiBlitz3.ab3@25445> JMP redimerr
000343AC <AmiBlitz3.ab3@25448>   CMP.w temp2,D1
000343B0 <AmiBlitz3.ab3@25449>    BNE.w JUMP_redimerr                                      ;range too long
000343B6 <AmiBlitz3.ab3@25452>   LEA globalvarpointer,A0
000343BC <AmiBlitz3.ab3@25453>   MOVE.w proceduremode,D1
000343C0 <AmiBlitz3.ab3@25454>   BEQ.w write_dim_code__gskip
000343C6 <AmiBlitz3.ab3@25455>   LEA locvaroff,A0
000343CC <AmiBlitz3.ab3@25458>   MOVE.W  extraword,(A0)
000343D0 <AmiBlitz3.ab3@25459>   BRA.W   write_dim_code__care
000343D8 <AmiBlitz3.ab3@25462>   MOVE.w temp2,$8(A3)                                      ;set # dim's
000343DE <AmiBlitz3.ab3@25465>   LEA doarr,A0
000343E4 <AmiBlitz3.ab3@25466>   MOVE.w $4(A3),$2(A0)
000343EC <AmiBlitz3.ab3@25467>   MOVE.w putarr+2,$6(A0)
000343EE <AmiBlitz3.ab3@25468>   MOVE.l (A0)+,D1
000343F4 <AmiBlitz3.ab3@25469>    JSR writelong
000343F6 <AmiBlitz3.ab3@25470>   MOVE.l (A0),D1
000343FC <AmiBlitz3.ab3@25471>    JSR writelong
00034402 <AmiBlitz3.ab3@25472>    TST.b dimkeep
00034406 <AmiBlitz3.ab3@25473>   BNE write_dim_code__care_l3
0003440A <AmiBlitz3.ab3@25476>   MOVE.w #$C400,D1
0003440E <AmiBlitz3.ab3@25477> BRA write_dim_code__care_l2
00034412 <AmiBlitz3.ab3@25480>   MOVE.w #$C405,d1
00034418 <AmiBlitz3.ab3@25483>   MOVE.w proceduremode,D2
0003441C <AmiBlitz3.ab3@25484>    BEQ.w write_dim_code__isg
00034422 <AmiBlitz3.ab3@25485>    TST.w notshared
00034426 <AmiBlitz3.ab3@25486>    BEQ write_dim_code__isg
00034428 <AmiBlitz3.ab3@25487>   ADDQ.w #1,D1
0003442C <AmiBlitz3.ab3@25490>   MOVE.w listadd(PC),D2
00034430 <AmiBlitz3.ab3@25491>    BEQ.w write_dim_code__isrg
00034432 <AmiBlitz3.ab3@25492>   MOVE.w D1,-(A7)
00034436 <AmiBlitz3.ab3@25493>   MOVE.w setles(PC),D1
0003443C <AmiBlitz3.ab3@25494>    JSR writeword
00034440 <AmiBlitz3.ab3@25495>   MOVE.w listsize(PC),D1
00034446 <AmiBlitz3.ab3@25496>    JSR writeword
00034448 <AmiBlitz3.ab3@25497>   MOVE.w (A7)+,D1
0003444A <AmiBlitz3.ab3@25498>   ADDQ.w #3,D1
0003444E <AmiBlitz3.ab3@25501> BRA.w Atokejsr
00034454 <AmiBlitz3.ab3@25508>     MOVE.l #$f23c4400,d1
0003445A <AmiBlitz3.ab3@25510>   MOVE.w regnum,d0
0003445C <AmiBlitz3.ab3@25511>   ASL.w #7,d0
0003445E <AmiBlitz3.ab3@25512>   OR.w d0,d1
00034464 <AmiBlitz3.ab3@25513>   JSR writelong
0003446A <AmiBlitz3.ab3@25519>     MOVE.l #$40490fd9,d1
00034470 <AmiBlitz3.ab3@25521>   JSR writelong
00034476 <AmiBlitz3.ab3@25522> JMP get1bytemain
0003447A <AmiBlitz3.ab3@25526> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
0003447E <AmiBlitz3.ab3@25533> vbr:                Ds.l 1
00034480 <AmiBlitz3.ab3@25534> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034486 <AmiBlitz3.ab3@25536> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
0003448A <AmiBlitz3.ab3@25540> constpcat:          Ds.l 1
0003448E <AmiBlitz3.ab3@25541> constlibat:         Ds.l 1
00034492 <AmiBlitz3.ab3@25542> constmaxpc:         Dc.l $400
00034496 <AmiBlitz3.ab3@25544> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
0003449A <AmiBlitz3.ab3@25545> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
0003449E <AmiBlitz3.ab3@25546> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
000344A2 <AmiBlitz3.ab3@25547> lastrestype:        Dc.l newtype_string
000344A4 <AmiBlitz3.ab3@25548> rescnt:             Ds.w 1                               ;# resident
000344A6 <AmiBlitz3.ab3@25549> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000344AA <AmiBlitz3.ab3@25550> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000344AC <AmiBlitz3.ab3@25551> linedone:           Ds.w 1
000344C2 <AmiBlitz3.ab3@25552> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
000344C6 <AmiBlitz3.ab3@25561>   Dc.l 0                                        ; bytetobyte
000344CA <AmiBlitz3.ab3@25562>   Dc.l convert_byte_to_word                     ; bytetoword
000344CE <AmiBlitz3.ab3@25563>   Dc.l convert_byte_to_long                     ; bytetolong
000344D2 <AmiBlitz3.ab3@25564>   Dc.l convert_byte_to_quick                    ; bytetoquick
000344D6 <AmiBlitz3.ab3@25565>   Dc.l convert_byte_to_float                    ; bytetofloat
000344DA <AmiBlitz3.ab3@25566>   Dc.l convert_byte_to_long                     ; bytetolong
000344DE <AmiBlitz3.ab3@25567>   Dc.l error_convert_types                      ; noconerr
000344E2 <AmiBlitz3.ab3@25570>   Dc.l convert_word_to_byte                     ; wordtobyte
000344E6 <AmiBlitz3.ab3@25571>   Dc.l 0                                        ; wordtoword
000344EA <AmiBlitz3.ab3@25572>   Dc.l convert_word_to_long                     ; wordtolong
000344EE <AmiBlitz3.ab3@25573>   Dc.l convert_word_to_quick                    ; wordtoquick
000344F2 <AmiBlitz3.ab3@25574>   Dc.l convert_word_to_float                    ; wordtofloat
000344F6 <AmiBlitz3.ab3@25575>   Dc.l convert_word_to_long                     ; wordtolong
000344FA <AmiBlitz3.ab3@25576>   Dc.l error_convert_types                      ; noconerr
000344FE <AmiBlitz3.ab3@25579>   Dc.l convert_long_to_byte                     ; longtobyte
00034502 <AmiBlitz3.ab3@25580>   Dc.l convert_long_to_word                     ; longtoword
00034506 <AmiBlitz3.ab3@25581>   Dc.l 0                                        ; longtolong
0003450A <AmiBlitz3.ab3@25582>   Dc.l convert_long_to_quick                    ; longtoquick
0003450E <AmiBlitz3.ab3@25583>   Dc.l convert_long_to_float                    ; longtofloat
00034512 <AmiBlitz3.ab3@25584>   Dc.l 0                                        ; longtolong
00034516 <AmiBlitz3.ab3@25585>   Dc.l error_convert_types                      ; noconerr
0003451A <AmiBlitz3.ab3@25588>   Dc.l convert_quick_to_byte                    ; quicktobyte
0003451E <AmiBlitz3.ab3@25589>   Dc.l convert_quick_to_word                    ; quicktoword
00034522 <AmiBlitz3.ab3@25590>   Dc.l convert_quick_to_long                    ; quicktolong
00034526 <AmiBlitz3.ab3@25591>   Dc.l 0                                        ; quicktoquick
0003452A <AmiBlitz3.ab3@25592>   Dc.l convert_quick_to_float                   ; quicktofloat
0003452E <AmiBlitz3.ab3@25593>   Dc.l convert_quick_to_long                    ; quicktolong
00034532 <AmiBlitz3.ab3@25594>   Dc.l error_convert_types                      ; noconerr
00034536 <AmiBlitz3.ab3@25597>   Dc.l convert_float_to_byte                    ; floattobyte
0003453A <AmiBlitz3.ab3@25598>   Dc.l convert_float_to_word                    ; floattoword
0003453E <AmiBlitz3.ab3@25599>   Dc.l convert_float_to_long                    ; floattolong
00034542 <AmiBlitz3.ab3@25600>   Dc.l convert_float_to_quick                   ; floattoquick
00034546 <AmiBlitz3.ab3@25601>   Dc.l 0                                        ; floattofloat
0003454A <AmiBlitz3.ab3@25602>   Dc.l convert_float_to_long                    ; floattolong
0003454E <AmiBlitz3.ab3@25603>   Dc.l error_convert_types                      ; noconerr
00034552 <AmiBlitz3.ab3@25606>   Dc.l convert_long_to_byte                     ; longtobyte
00034556 <AmiBlitz3.ab3@25607>   Dc.l convert_long_to_word                     ; longtoword
0003455A <AmiBlitz3.ab3@25608>   Dc.l 0                                        ; longtolong
0003455E <AmiBlitz3.ab3@25609>   Dc.l convert_long_to_quick                    ; longtoquick
00034562 <AmiBlitz3.ab3@25610>   Dc.l convert_long_to_float                    ; longtofloat
00034566 <AmiBlitz3.ab3@25611>   Dc.l 0                                        ; longtolong
0003456A <AmiBlitz3.ab3@25612>   Dc.l error_convert_types                      ; noconerr
0003456E <AmiBlitz3.ab3@25615>   Dc.l error_convert_types                      ; noconerr
00034572 <AmiBlitz3.ab3@25616>   Dc.l error_convert_types                      ; noconerr
00034576 <AmiBlitz3.ab3@25617>   Dc.l string_to_long                           ; stringtolong
0003457A <AmiBlitz3.ab3@25618>   Dc.l error_convert_types                      ; noconerr
0003457E <AmiBlitz3.ab3@25619>   Dc.l error_convert_types                      ; noconerr
00034582 <AmiBlitz3.ab3@25620>   Dc.l string_to_long                           ; stringtolong
00034586 <AmiBlitz3.ab3@25621>   Ds.l 1
00034588 <AmiBlitz3.ab3@25627>   Dc.b $00,$2B                                  ;+ ; add
0003458C <AmiBlitz3.ab3@25628>   Dc.l do_plus_byte                             ;doplusb
00034590 <AmiBlitz3.ab3@25629>   Dc.l do_plus_word                             ;doplusw
00034594 <AmiBlitz3.ab3@25630>   Dc.l do_plus_long                             ;doplusl
00034598 <AmiBlitz3.ab3@25631>   Dc.l do_plus_long                             ;doplusl
0003459C <AmiBlitz3.ab3@25632>   Dc.l do_plus_float                            ;doplusf
000345A0 <AmiBlitz3.ab3@25633>   Ds.l 1
000345A4 <AmiBlitz3.ab3@25634>   Dc.l add_strings                              ;addstrings
000345A6 <AmiBlitz3.ab3@25635>   Dc.b $0B,$B8
000345A8 <AmiBlitz3.ab3@25637>   Dc.b $00,$2D                                  ;- ; sub
000345AC <AmiBlitz3.ab3@25638>   Dc.l do_minus_byte                            ;dominusb
000345B0 <AmiBlitz3.ab3@25639>   Dc.l do_minus_word                            ;dominusw
000345B4 <AmiBlitz3.ab3@25640>   Dc.l do_minus_long                            ;dominusl
000345B8 <AmiBlitz3.ab3@25641>   Dc.l do_minus_long                            ;dominusl
000345BC <AmiBlitz3.ab3@25642>   Dc.l do_minus_float                           ;dominusf
000345C4 <AmiBlitz3.ab3@25643>   Ds.l 2
000345C6 <AmiBlitz3.ab3@25644>   Dc.b $0B,$B8
000345C8 <AmiBlitz3.ab3@25646>   Dc.b $00,$2A                                  ;* ; mul
000345CC <AmiBlitz3.ab3@25647>   Dc.l do_times_byte                            ;dotimesb
000345D0 <AmiBlitz3.ab3@25648>   Dc.l do_times_word                            ;dotimesw
000345D4 <AmiBlitz3.ab3@25649>   Dc.l do_times_long                            ;dotimesl
000345D8 <AmiBlitz3.ab3@25650>   Dc.l do_times_quick                           ;dotimesq
000345DC <AmiBlitz3.ab3@25651>   Dc.l do_times_float                           ;dotimesf
000345E4 <AmiBlitz3.ab3@25652>   Ds.l 2
000345E6 <AmiBlitz3.ab3@25653>   Dc.b $0F,$A0
000345E8 <AmiBlitz3.ab3@25655>   Dc.b $00,$2F                                  ;/ ; div
000345EC <AmiBlitz3.ab3@25656>   Dc.l do_Div_byte                              ;dodivb
000345F0 <AmiBlitz3.ab3@25657>   Dc.l do_Div_word                              ;dodivb
000345F4 <AmiBlitz3.ab3@25658>   Dc.l do_Div_long                              ;dodivl
000345F8 <AmiBlitz3.ab3@25659>   Dc.l do_Div_quick                             ;dodivq
000345FC <AmiBlitz3.ab3@25660>   Dc.l do_Div_float                             ;dodivf
00034604 <AmiBlitz3.ab3@25661>   Ds.l 2
00034606 <AmiBlitz3.ab3@25662>   Dc.b $0F,$A0
00034608 <AmiBlitz3.ab3@25664>   Dc.b $00,$26                                  ;& ; & int
0003460C <AmiBlitz3.ab3@25665>   Dc.l do_AND_byte                              ;doandb
00034610 <AmiBlitz3.ab3@25666>   Dc.l do_AND_word                              ;doandw
00034614 <AmiBlitz3.ab3@25667>   Dc.l do_AND_long                              ;doandl
00034618 <AmiBlitz3.ab3@25668>   Dc.l do_AND_long                              ;doandl
00034624 <AmiBlitz3.ab3@25669>   Ds.l 3
00034626 <AmiBlitz3.ab3@25670>   Dc.b $13,$88
00034628 <AmiBlitz3.ab3@25672>   Dc.b $00,$7C                                  ;| ;or int ;
0003462C <AmiBlitz3.ab3@25673>   Dc.l do_OR_byte                               ;doorb
00034630 <AmiBlitz3.ab3@25674>   Dc.l do_OR_word                               ;doorw
00034634 <AmiBlitz3.ab3@25675>   Dc.l do_OR_long                               ;doorl
00034638 <AmiBlitz3.ab3@25676>   Dc.l do_OR_long                               ;doorl
00034644 <AmiBlitz3.ab3@25677>   Ds.l 3
00034646 <AmiBlitz3.ab3@25678>   Dc.b $13,$88
00034648 <AmiBlitz3.ab3@25680>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003464C <AmiBlitz3.ab3@25681>   Dc.l do_AND_byte                              ;doandb
00034650 <AmiBlitz3.ab3@25682>   Dc.l do_AND_word                              ;doandw
00034654 <AmiBlitz3.ab3@25683>   Dc.l do_AND_long                              ;doandl
00034658 <AmiBlitz3.ab3@25684>   Dc.l do_AND_long                              ;doandl
00034664 <AmiBlitz3.ab3@25685>   Ds.l 3
00034666 <AmiBlitz3.ab3@25686>   Dc.b $03,$E8
00034668 <AmiBlitz3.ab3@25688>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
0003466C <AmiBlitz3.ab3@25689>   Dc.l do_OR_byte                               ;doorb
00034670 <AmiBlitz3.ab3@25690>   Dc.l do_OR_word                               ;doorw
00034674 <AmiBlitz3.ab3@25691>   Dc.l do_OR_long                               ;doorl
00034678 <AmiBlitz3.ab3@25692>   Dc.l do_OR_long                               ;doorl
00034684 <AmiBlitz3.ab3@25693>   Ds.l 3
00034686 <AmiBlitz3.ab3@25694>   Dc.b $03,$E8
00034688 <AmiBlitz3.ab3@25696>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
0003468C <AmiBlitz3.ab3@25697>   Dc.l do_EOR_byte                              ;doeorb
00034690 <AmiBlitz3.ab3@25698>   Dc.l do_EOR_word                              ;doeorw
00034694 <AmiBlitz3.ab3@25699>   Dc.l do_EOR_long                              ;doeorl
00034698 <AmiBlitz3.ab3@25700>   Dc.l do_EOR_long                              ;doeorl
000346A4 <AmiBlitz3.ab3@25701>   Ds.l 3
000346A6 <AmiBlitz3.ab3@25702>   Dc.b $03,$E8
000346A8 <AmiBlitz3.ab3@25704>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
000346AC <AmiBlitz3.ab3@25705>   Dc.l do_LSL                                   ;dolslb
000346B0 <AmiBlitz3.ab3@25706>   Dc.l do_LSL                                   ;dolslw
000346B4 <AmiBlitz3.ab3@25707>   Dc.l do_LSL                                   ;dolsll
000346B8 <AmiBlitz3.ab3@25708>   Dc.l do_LSL                                   ;dolsll
000346C4 <AmiBlitz3.ab3@25709>   Ds.l 3
000346C6 <AmiBlitz3.ab3@25710>   Dc.b $17,$70
000346C8 <AmiBlitz3.ab3@25712>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000346CC <AmiBlitz3.ab3@25713>   Dc.l do_LSL                                   ;dolslb
000346D0 <AmiBlitz3.ab3@25714>   Dc.l do_LSL                                   ;dolslw
000346D4 <AmiBlitz3.ab3@25715>   Dc.l do_LSL                                   ;dolsll
000346D8 <AmiBlitz3.ab3@25716>   Dc.l do_LSL                                   ;dolsll
000346E4 <AmiBlitz3.ab3@25717>   Ds.l 3
000346E6 <AmiBlitz3.ab3@25718>   Dc.b $17,$70
000346E8 <AmiBlitz3.ab3@25720>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000346EC <AmiBlitz3.ab3@25721>   Dc.l do_LSR                                   ;dolsrb
000346F0 <AmiBlitz3.ab3@25722>   Dc.l do_LSR                                   ;dolsrw
000346F4 <AmiBlitz3.ab3@25723>   Dc.l do_LSR                                   ;dolsrl
000346F8 <AmiBlitz3.ab3@25724>   Dc.l do_LSR                                   ;dolsrl
00034704 <AmiBlitz3.ab3@25725>   Ds.l 3
00034706 <AmiBlitz3.ab3@25726>   Dc.b $17,$70
00034708 <AmiBlitz3.ab3@25728>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
0003470C <AmiBlitz3.ab3@25729>   Dc.l do_ASR                                   ;doasrb
00034710 <AmiBlitz3.ab3@25730>   Dc.l do_ASR                                   ;doasrw
00034714 <AmiBlitz3.ab3@25731>   Dc.l do_ASR                                   ;doasrl
00034718 <AmiBlitz3.ab3@25732>   Dc.l do_ASR                                   ;doasrl
00034724 <AmiBlitz3.ab3@25733>   Ds.l 3
00034726 <AmiBlitz3.ab3@25734>   Dc.b $17,$70
00034728 <AmiBlitz3.ab3@25736>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
0003472C <AmiBlitz3.ab3@25737>   Dc.l do_mod_byte                              ;domodb
00034730 <AmiBlitz3.ab3@25738>   Dc.l do_mod_word                              ;domodw
00034734 <AmiBlitz3.ab3@25739>   Dc.l do_mod_long                              ;domodl
00034738 <AmiBlitz3.ab3@25740>   Dc.l do_mod_quick                             ;domodq
0003473C <AmiBlitz3.ab3@25741>   Dc.l do_mod_float                             ;domodf
00034744 <AmiBlitz3.ab3@25742>   Ds.l 2
00034746 <AmiBlitz3.ab3@25743>   Dc.b $13,$88
00034748 <AmiBlitz3.ab3@25746>   Dc.b $00,$5E                                  ;^
0003474C <AmiBlitz3.ab3@25747>   Dc.l do_pow                                   ;dopow
00034750 <AmiBlitz3.ab3@25748>   Dc.l do_pow                                   ;dopow
00034754 <AmiBlitz3.ab3@25749>   Dc.l do_pow                                   ;dopow
00034758 <AmiBlitz3.ab3@25750>   Dc.l do_pow                                   ;dopow
0003475C <AmiBlitz3.ab3@25751>   Dc.l do_pow                                   ;dopow
00034764 <AmiBlitz3.ab3@25752>   Ds.l 2
00034766 <AmiBlitz3.ab3@25753>   Dc.b $1B,$58                                  ;7000
00034768 <AmiBlitz3.ab3@25756>   Dc.b $00,$3D                                  ;=
0003476C <AmiBlitz3.ab3@25757>   Dc.l do_equal_byte                            ;doeqb
00034770 <AmiBlitz3.ab3@25758>   Dc.l do_equal_word                            ;doeqw
00034774 <AmiBlitz3.ab3@25759>   Dc.l do_equal_long                            ;doeql
00034778 <AmiBlitz3.ab3@25760>   Dc.l do_equal_long                            ;doeql
0003477C <AmiBlitz3.ab3@25761>   Dc.l do_equal_float                           ;doeqf
00034780 <AmiBlitz3.ab3@25762>   Dc.l do_equal_long                            ;doeql
00034784 <AmiBlitz3.ab3@25763>   Dc.l do_equal_string                          ;doeqs
00034786 <AmiBlitz3.ab3@25764>   Dc.b $07,$D0                                  ;2000
00034788 <AmiBlitz3.ab3@25767>   Dc.b $3C,$3E                                  ;<>
0003478C <AmiBlitz3.ab3@25768>   Dc.l do_not_equal_byte                        ;doneb
00034790 <AmiBlitz3.ab3@25769>   Dc.l do_not_equal_word                        ;donew
00034794 <AmiBlitz3.ab3@25770>   Dc.l do_not_equal_long                        ;donel
00034798 <AmiBlitz3.ab3@25771>   Dc.l do_not_equal_long                        ;donel
0003479C <AmiBlitz3.ab3@25772>   Dc.l do_not_equal_float                       ;donef
000347A0 <AmiBlitz3.ab3@25773>   Dc.l do_not_equal_long                        ;donel
000347A4 <AmiBlitz3.ab3@25774>   Dc.l do_not_equal_string                      ;dones
000347A6 <AmiBlitz3.ab3@25775>   Dc.b $07,$D0                                  ;2000
000347A8 <AmiBlitz3.ab3@25778>   Dc.b $00,$3C                                  ;<
000347AC <AmiBlitz3.ab3@25779>   Dc.l do_littler_byte                          ;doltb
000347B0 <AmiBlitz3.ab3@25780>   Dc.l do_littler_word                          ;doltw
000347B4 <AmiBlitz3.ab3@25781>   Dc.l do_littler_long                          ;doltl
000347B8 <AmiBlitz3.ab3@25782>   Dc.l do_littler_long                          ;doltl
000347BC <AmiBlitz3.ab3@25783>   Dc.l do_littler_float                         ;doltf
000347C0 <AmiBlitz3.ab3@25784>   Dc.l do_littler_long                          ;doltl
000347C4 <AmiBlitz3.ab3@25785>   Dc.l do_littler_string                        ;dolts
000347C6 <AmiBlitz3.ab3@25786>   Dc.b $07,$D0                                  ;2000
000347C8 <AmiBlitz3.ab3@25789>   Dc.b $3C,$3D                                  ;<=
000347CC <AmiBlitz3.ab3@25790>   Dc.l do_littler_equal_byte                    ;doleb
000347D0 <AmiBlitz3.ab3@25791>   Dc.l do_littler_equal_word                    ;doleb
000347D4 <AmiBlitz3.ab3@25792>   Dc.l do_littler_equal_long                    ;dolel
000347D8 <AmiBlitz3.ab3@25793>   Dc.l do_littler_equal_long                    ;dolel
000347DC <AmiBlitz3.ab3@25794>   Dc.l do_littler_equal_float                   ;dolef
000347E0 <AmiBlitz3.ab3@25795>   Dc.l do_littler_equal_long                    ;dolel
000347E4 <AmiBlitz3.ab3@25796>   Dc.l do_littler_equal_string                  ;doles
000347E6 <AmiBlitz3.ab3@25797>   Dc.b $07,$D0                                  ;2000
000347E8 <AmiBlitz3.ab3@25800>   Dc.b $00,$3E                                  ;>
000347EC <AmiBlitz3.ab3@25801>   Dc.l do_greater_byte                          ;dogtb
000347F0 <AmiBlitz3.ab3@25802>   Dc.l do_greater_word                          ;dogtw
000347F4 <AmiBlitz3.ab3@25803>   Dc.l do_greater_long                          ;dogtl
000347F8 <AmiBlitz3.ab3@25804>   Dc.l do_greater_long                          ;dogtl
000347FC <AmiBlitz3.ab3@25805>   Dc.l do_greater_float                         ;dogtf
00034800 <AmiBlitz3.ab3@25806>   Dc.l do_greater_long                          ;dogtl
00034804 <AmiBlitz3.ab3@25807>   Dc.l do_greater_string                        ;dogts
00034806 <AmiBlitz3.ab3@25808>   Dc.b $07,$D0                                  ;2000
00034808 <AmiBlitz3.ab3@25811>   Dc.b $3E,$3D                                  ;>=
0003480C <AmiBlitz3.ab3@25812>   Dc.l do_greater_equal_byte                    ;dogeb
00034810 <AmiBlitz3.ab3@25813>   Dc.l do_greater_equal_word                    ;dogew
00034814 <AmiBlitz3.ab3@25814>   Dc.l do_greater_equal_long                    ;dogel
00034818 <AmiBlitz3.ab3@25815>   Dc.l do_greater_equal_long                    ;dogel
0003481C <AmiBlitz3.ab3@25816>   Dc.l do_greater_equal_float                   ;dogef
00034820 <AmiBlitz3.ab3@25817>   Dc.l do_greater_equal_long                    ;dogel
00034824 <AmiBlitz3.ab3@25818>   Dc.l do_greater_equal_string                  ;doges
00034826 <AmiBlitz3.ab3@25819>   Dc.b $07,$D0                                  ;2000
00034828 <AmiBlitz3.ab3@25821>   Dc.b $80,$CD                                  ;$8000+26+tnum
0003482C <AmiBlitz3.ab3@25822>   Dc.l _BitTst
00034830 <AmiBlitz3.ab3@25823>   Dc.l _BitTst
00034834 <AmiBlitz3.ab3@25824>   Dc.l _BitTst
00034838 <AmiBlitz3.ab3@25825>   Dc.l _BitTst
00034844 <AmiBlitz3.ab3@25826>   Ds.l 3
00034846 <AmiBlitz3.ab3@25827>   Dc.b $1F,$40                                  ;8000
00034848 <AmiBlitz3.ab3@25829>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003484C <AmiBlitz3.ab3@25830>   Dc.l _BitSet
00034850 <AmiBlitz3.ab3@25831>   Dc.l _BitSet
00034854 <AmiBlitz3.ab3@25832>   Dc.l _BitSet
00034858 <AmiBlitz3.ab3@25833>   Dc.l _BitSet
00034864 <AmiBlitz3.ab3@25834>   Ds.l 3
00034866 <AmiBlitz3.ab3@25835>   Dc.b $1F,$40                                  ;8000
00034868 <AmiBlitz3.ab3@25837>   Dc.b $80,$CF                                  ;$8000+28+tnum
0003486C <AmiBlitz3.ab3@25838>   Dc.l _BitClr
00034870 <AmiBlitz3.ab3@25839>   Dc.l _BitClr
00034874 <AmiBlitz3.ab3@25840>   Dc.l _BitClr
00034878 <AmiBlitz3.ab3@25841>   Dc.l _BitClr
00034884 <AmiBlitz3.ab3@25842>   Ds.l 3
00034886 <AmiBlitz3.ab3@25843>   Dc.b $1F,$40                                  ;8000
00034888 <AmiBlitz3.ab3@25845>   Dc.b $80,$D0                                  ;$8000+29+tnum
0003488C <AmiBlitz3.ab3@25846>   Dc.l _BitChg
00034890 <AmiBlitz3.ab3@25847>   Dc.l _BitChg
00034894 <AmiBlitz3.ab3@25848>   Dc.l _BitChg
00034898 <AmiBlitz3.ab3@25849>   Dc.l _BitChg
000348A4 <AmiBlitz3.ab3@25850>   Ds.l 3
000348A6 <AmiBlitz3.ab3@25851>   Dc.b $1F,$40                                  ;8000
000348A8 <AmiBlitz3.ab3@25853>   Dc.b $00,$00
000348AC <AmiBlitz3.ab3@25858> modetable:   Dc.l typemode
000348B0 <AmiBlitz3.ab3@25861> newtypebase: Dc.l newtype_byte
000348B8 <AmiBlitz3.ab3@25864>   Dc.l newtype_word,$01                                    
000348BA <AmiBlitz3.ab3@25865>   Dc.w $0001
000348BE <AmiBlitz3.ab3@25866>   Dc.b 13,"b",0,0
000348C6 <AmiBlitz3.ab3@25869>   Dc.l newtype_long,$02
000348C8 <AmiBlitz3.ab3@25870>   Dc.w $0002
000348CC <AmiBlitz3.ab3@25871>   Dc.b 13,"w",0,0
000348D4 <AmiBlitz3.ab3@25874>   Dc.l newtype_quick,$03                                   
000348D6 <AmiBlitz3.ab3@25875>   Dc.w $0004
000348DA <AmiBlitz3.ab3@25876>   Dc.b 13,"l",0,0
000348E2 <AmiBlitz3.ab3@25879>   Dc.l newtype_float,$04                                   
000348E4 <AmiBlitz3.ab3@25880>   Dc.w $0004
000348E8 <AmiBlitz3.ab3@25881>   Dc.b 13,"q",0,0
000348F0 <AmiBlitz3.ab3@25885>   Dc.l newtype_double,$05                                  ;make problems on old residents
000348F2 <AmiBlitz3.ab3@25886>   Dc.w $0004
000348F6 <AmiBlitz3.ab3@25887>   Dc.b 13,"f",0,0
000348FE <AmiBlitz3.ab3@25890>   Dc.l newtype_double,$06
00034900 <AmiBlitz3.ab3@25891>   Dc.w $0004
00034904 <AmiBlitz3.ab3@25892>   Dc.b 13,"a",0,0
0003490C <AmiBlitz3.ab3@25895>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003490E <AmiBlitz3.ab3@25896>   Dc.w $0008
00034912 <AmiBlitz3.ab3@25897>   Dc.b 13,"d",0,0
0003491A <AmiBlitz3.ab3@25901>   Dc.l $0000000,$07                                        ;stringtype
0003491C <AmiBlitz3.ab3@25902>   Dc.w $0004
00034920 <AmiBlitz3.ab3@25903>   Dc.b 13,"s",0,0
00034928 <AmiBlitz3.ab3@25906>   Dc.l $00,$00
0003492A <AmiBlitz3.ab3@25907>   Dc.w $0000
0003492E <AmiBlitz3.ab3@25908>   Dc.b $01,$00,$00,$00
0003498E <AmiBlitz3.ab3@25911> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034990 <AmiBlitz3.ab3@25915> dirmode:              Ds.w 1                               ;shows if directmode is on
00034994 <AmiBlitz3.ab3@25917>                       Ds.l 1                               ;int org source ;intuition!
00034996 <AmiBlitz3.ab3@25918> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
0003499A <AmiBlitz3.ab3@25919> maxsat:               Ds.l 1                               ;data1 info pos
0003499C <AmiBlitz3.ab3@25920> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003499E <AmiBlitz3.ab3@25922> maxsused:             Ds.w 1                               ;maximums used in prog
000349A0 <AmiBlitz3.ab3@25926> dark:                 Ds.w 1                               ;dark compile?
000349A2 <AmiBlitz3.ab3@25927> qlab:                 Ds.w 1                               ;quick lab allocate
000349A6 <AmiBlitz3.ab3@25928> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000349A8 <AmiBlitz3.ab3@25933> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
000349AA <AmiBlitz3.ab3@25934> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
000349AE <AmiBlitz3.ab3@25935> noinits:              Ds.l 1                               ;flag for if we have any init routines!
000349B2 <AmiBlitz3.ab3@25937> letstart:             Ds.l 1
000349B4 <AmiBlitz3.ab3@25938> dontwrite:            Ds.w 1                               ;nomemleft org source
00034A34 <AmiBlitz3.ab3@25939> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034A38 <AmiBlitz3.ab3@25941> locdatast:            Ds.l 1
00034A3C <AmiBlitz3.ab3@25942> firstpend:            Ds.l 1
00034A40 <AmiBlitz3.ab3@25946> data2at:              Ds.l 1
00034A44 <AmiBlitz3.ab3@25947> data2:                Ds.l 1
00034A48 <AmiBlitz3.ab3@25948> data1start:           Ds.l 1                               ;data1at org source
00034A4C <AmiBlitz3.ab3@25949> data1:                Ds.l 1                               ;pc for initialized data!
00034A50 <AmiBlitz3.ab3@25950> destbufferstart:      Ds.l 1                               ;pcat org source
00034A54 <AmiBlitz3.ab3@25954> destbufferend:        Ds.l 1                               ;libat org source
00034A58 <AmiBlitz3.ab3@25955> libend:               Ds.l 1                               ;lib org source
00034A5C <AmiBlitz3.ab3@25956> allat:                Ds.l 1                               ;highest allocmemd location for code
00034A66 <AmiBlitz3.ab3@25957> dummyasm:             Dc.w 0,0,0,0,0
00034A6A <AmiBlitz3.ab3@25958>                       Dc.l 0
00034A6C <AmiBlitz3.ab3@25959>                       Dc.w 0
00034A70 <AmiBlitz3.ab3@25963> buff1:                Ds.l 1                               ;buffer for text get
00034A74 <AmiBlitz3.ab3@25964> buff2:                Ds.l 1                               ;ditto for dest
00034A76 <AmiBlitz3.ab3@25965> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034A78 <AmiBlitz3.ab3@25966> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034A7A <AmiBlitz3.ab3@25967> extraword:            Ds.w 1                               ;the extension word for assembler
00034A7C <AmiBlitz3.ab3@25968> extraword2:           Ds.w 1                               ;ditto
00034A7E <AmiBlitz3.ab3@25969> asmsize:              Ds.w 1
00034A82 <AmiBlitz3.ab3@25970> asmbuff:              Ds.l 1
00034A84 <AmiBlitz3.ab3@25971> asmlen:               Ds.w 1                               ;first (src) text len
00034A86 <AmiBlitz3.ab3@25972> asmlen2:              Ds.w 1                               ;second (dest)
00034A8A <AmiBlitz3.ab3@25973> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034A8C <AmiBlitz3.ab3@25976> macnum:               Ds.w 1
00034A90 <AmiBlitz3.ab3@25978>                       Dc.l 0                               ;address of next 0 in include fil
00034A94 <AmiBlitz3.ab3@25979> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034A9E <AmiBlitz3.ab3@25980> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034AA0 <AmiBlitz3.ab3@25981> connest:              Ds.w 1                               ;conditional nest level
00034AA4 <AmiBlitz3.ab3@25982> firstconst:           Ds.l 1                               ;first constant (#a)
00034AA6 <AmiBlitz3.ab3@25983> numarg:               Ds.w 1                               ;number of macro arguements
00034AAA <AmiBlitz3.ab3@25984> myoline:              Ds.l 1                               ;macro done yet?
00034AAE <AmiBlitz3.ab3@25985> myline:               Ds.l 1                               ;pointer to some memory to create
00034AB2 <AmiBlitz3.ab3@25988>                       Ds.l 1
00034AF2 <AmiBlitz3.ab3@25989> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00034AF6 <AmiBlitz3.ab3@25990> concomsp:             Dc.l concomstack                     ;stack pointer
00034AF8 <AmiBlitz3.ab3@25991> oldqflag:             Ds.w 1
00034AFC <AmiBlitz3.ab3@25994>                       Ds.l 1
00034AFE <AmiBlitz3.ab3@25996>                       Ds.w 1
00034B02 <AmiBlitz3.ab3@25997> firstfor:             Ds.l 1                               ;first for
00034B04 <AmiBlitz3.ab3@25998> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00034B06 <AmiBlitz3.ab3@25999> sbgot:                Ds.w 1                               ;flag for string got 2
00034B08 <AmiBlitz3.ab3@26000> convsize:             Ds.w 1                               ;usertype org source
00034B0A <AmiBlitz3.ab3@26001> userp:                Ds.w 1
00034B0E <AmiBlitz3.ab3@26006> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00034B10 <AmiBlitz3.ab3@26007> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00034B12 <AmiBlitz3.ab3@26008> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00034B16 <AmiBlitz3.ab3@26010> locloc:               Ds.l 1
00034B18 <AmiBlitz3.ab3@26011> locchar:              Ds.w 1
00034B98 <AmiBlitz3.ab3@26012> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00034B9A <AmiBlitz3.ab3@26013> commode:              Ds.w 1                               ;in comma mode...
00034B9E <AmiBlitz3.ab3@26014> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00034BA2 <AmiBlitz3.ab3@26015> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00034BA6 <AmiBlitz3.ab3@26016> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00034BA8 <AmiBlitz3.ab3@26018>                       Ds.w 1                               ;opt reset offset
00034CA8 <AmiBlitz3.ab3@26020>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00034DA8 <AmiBlitz3.ab3@26022>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00034DAA <AmiBlitz3.ab3@26023> varcodelen:           Ds.w 1                               ;and length
00034DAC <AmiBlitz3.ab3@26025>                       Ds.w 1
00034DB2 <AmiBlitz3.ab3@26026> oldvcodelen:          Ds.w 3                               ;old varcodelen
00034DB4 <AmiBlitz3.ab3@26029> Even4
00034DB8 <AmiBlitz3.ab3@26030> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00034DBA <AmiBlitz3.ab3@26031> memlibstat:           Ds.w 1                               ;status of memory library during
00034DBC <AmiBlitz3.ab3@26034>                       Dc.w 0
00034DBE <AmiBlitz3.ab3@26036>                       Dc.w 0
00034DC0 <AmiBlitz3.ab3@26038> varmode:              Ds.w 1                               ;0 a5 pointer to global
00034DC4 <AmiBlitz3.ab3@26040> currentfunction:      Ds.l 1                               ;thisproc org source
00034DC8 <AmiBlitz3.ab3@26041> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00034DCA <AmiBlitz3.ab3@26042> 
00034DCC <AmiBlitz3.ab3@26044> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00034DD0 <AmiBlitz3.ab3@26045> passstack:            Ds.l 1
00034DD4 <AmiBlitz3.ab3@26046> zero:                 Ds.l 1                               ;ZERO!
00034DD6 <AmiBlitz3.ab3@26047> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00034DDA <AmiBlitz3.ab3@26049> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00034DDE <AmiBlitz3.ab3@26050> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00034DE0 <AmiBlitz3.ab3@26051> lasta6:               Dc.w $FFFF                           ;-1 org source
00034DE2 <AmiBlitz3.ab3@26052> instringon:           Ds.w 1                               ;quoteflag org source
00034DE6 <AmiBlitz3.ab3@26053> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00034DEA <AmiBlitz3.ab3@26054> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00034DEE <AmiBlitz3.ab3@26055> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00034DF2 <AmiBlitz3.ab3@26056> endop:                Ds.l 1                               ;end of program pc - before finishups!
00034DF6 <AmiBlitz3.ab3@26057> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00034DFA <AmiBlitz3.ab3@26058> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00034DFC <AmiBlitz3.ab3@26059> numstatic:            Ds.w 1                               ;number of static structs
00034E00 <AmiBlitz3.ab3@26060> staticdata:           Ds.l 1                               ;data1 val for statics
00034E04 <AmiBlitz3.ab3@26061> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00034E06 <AmiBlitz3.ab3@26062> sbasegot:             Ds.w 1                               ;string base got?
00034E0A <AmiBlitz3.ab3@26063> litdata1:             Ds.l 1
00034E0E <AmiBlitz3.ab3@26067> objlen:               Ds.l 1
00034E12 <AmiBlitz3.ab3@26068> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00034E16 <AmiBlitz3.ab3@26069> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00034E18 <AmiBlitz3.ab3@26071> flagmask:             Ds.w 1                               ;mask for flag of variable when
00034E1A <AmiBlitz3.ab3@26073> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00034E1C <AmiBlitz3.ab3@26074> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00034E20 <AmiBlitz3.ab3@26075> temp1:                Ds.l 1
00034E24 <AmiBlitz3.ab3@26076> temp2:                Ds.l 1
00034E28 <AmiBlitz3.ab3@26078> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00034E2C <AmiBlitz3.ab3@26079> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00034EA0 <AmiBlitz3.ab3@26080> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00034EA4 <AmiBlitz3.ab3@26081> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00034F24 <AmiBlitz3.ab3@26083> namebuff2:            Ds.b 128
00034F2C <AmiBlitz3.ab3@26084>                       Ds.b 8                               ;for fileinfoblock
00034F6C <AmiBlitz3.ab3@26087> optstuff:             Ds.b 64                              ;temp opt make buffer
00034F6E <AmiBlitz3.ab3@26104>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00034F72 <AmiBlitz3.ab3@26105>   Dc.l xtra_versionnumber                                  ; vers org source
00034F76 <AmiBlitz3.ab3@26106>   Dc.l create_iconfile                                     ; create icon for executable
00034F7A <AmiBlitz3.ab3@26107>   Ds.l 1
00034F7C <AmiBlitz3.ab3@26109>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00034F80 <AmiBlitz3.ab3@26112>   Dc.l set_use_debugger
00034F84 <AmiBlitz3.ab3@26113>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00034F88 <AmiBlitz3.ab3@26114>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00034F8C <AmiBlitz3.ab3@26115>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00034F90 <AmiBlitz3.ab3@26116>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00034F94 <AmiBlitz3.ab3@26117>   Dc.l set_make_smallestcode
00034F98 <AmiBlitz3.ab3@26118>   Dc.l set_link_debuginfo
00034F9C <AmiBlitz3.ab3@26119>   Dc.l set_autorun
00034FA0 <AmiBlitz3.ab3@26120>   Dc.l set_interruptcheck
00034FA4 <AmiBlitz3.ab3@26121>   Dc.l set_assemblercheck
00034FA8 <AmiBlitz3.ab3@26123>   Dc.l set_overflowcheck
00034FAC <AmiBlitz3.ab3@26124>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00034FB0 <AmiBlitz3.ab3@26125>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00034FB4 <AmiBlitz3.ab3@26126>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00034FB8 <AmiBlitz3.ab3@26129>   Ds.l 1
00034FBA <AmiBlitz3.ab3@26131>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00034FBE <AmiBlitz3.ab3@26138>   Dc.l objectbuffer
00034FC2 <AmiBlitz3.ab3@26139>   Dc.l libsbuffer
00034FC6 <AmiBlitz3.ab3@26140>   Dc.l systembuffer
00034FCA <AmiBlitz3.ab3@26141>   Dc.l databuffer
00034FCE <AmiBlitz3.ab3@26142>   Dc.l macrobuffer_size
00034FD2 <AmiBlitz3.ab3@26143>   Dc.l stringbuffer
00034FD6 <AmiBlitz3.ab3@26146>   Ds.l 1
00034FD8 <AmiBlitz3.ab3@26150>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00034FE0 <AmiBlitz3.ab3@26151>   Dc.l residents_table,0
00034FE2 <AmiBlitz3.ab3@26155>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00034FEA <AmiBlitz3.ab3@26156>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00034FEC <AmiBlitz3.ab3@26157>   Ds.w 1
000350E8 <AmiBlitz3.ab3@26161>   Ds.l 63
000351E4 <AmiBlitz3.ab3@26162>   Ds.l 63
000352E0 <AmiBlitz3.ab3@26163>   Ds.l 63
000353C2 <AmiBlitz3.ab3@26164>   Ds.w 113
000353C4 <AmiBlitz3.ab3@26167> comsettings_message:  Ds.w 1                               ;allchg org source
000353C6 <AmiBlitz3.ab3@26168> xtra_versionnumber:   Ds.w 1                               ;vers org source
000353CC <AmiBlitz3.ab3@26172>   CLR.b exefilename
000353CE <AmiBlitz3.ab3@26173>   TST.l d0
000353D2 <AmiBlitz3.ab3@26174>   BNE read_xtrafile__l10
000353D4 <AmiBlitz3.ab3@26175> RTS
000353DA <AmiBlitz3.ab3@26178>   JSR free_residents                                       ;jsr freeres2 org source
000353E0 <AmiBlitz3.ab3@26179> 
000353E6 <AmiBlitz3.ab3@26180>   LEA ptr_xtradata,A2
000353E8 <AmiBlitz3.ab3@26181>   MOVEQ.l #$00,D4
000353EA <AmiBlitz3.ab3@26184>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
000353EE <AmiBlitz3.ab3@26185>     BEQ.b read_xtrafile__done
000353F0 <AmiBlitz3.ab3@26188>     MOVE.l (A2)+,D2
000353F4 <AmiBlitz3.ab3@26189>   BEQ.b read_xtrafile__loop
000353F6 <AmiBlitz3.ab3@26191>   MOVE.l D4,D3
000353F8 <AmiBlitz3.ab3@26192>   MOVE.l D7,D1
000353FC <AmiBlitz3.ab3@26193>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000353FE <AmiBlitz3.ab3@26194>   TST.l D0
00035402 <AmiBlitz3.ab3@26195>   BNE.b read_xtrafile__loop2
00035406 <AmiBlitz3.ab3@26196> BRA.w read_xtrafile__done2
0003540C <AmiBlitz3.ab3@26199>   TST.b xtra_versionnumber
00035410 <AmiBlitz3.ab3@26200>    BNE.b read_xtrafile__nover0
00035418 <AmiBlitz3.ab3@26201>   MOVE.w #$0080,set_autorun                                ;auto run on
00035422 <AmiBlitz3.ab3@26202>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035428 <AmiBlitz3.ab3@26203>   CLR.w set_assemblercheck                                 ;assembler checking off
00035432 <AmiBlitz3.ab3@26204>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035436 <AmiBlitz3.ab3@26205> BRA.b read_xtrafile__ver0
00035438 <AmiBlitz3.ab3@26208>   MOVE.l D7,D1                                             ;load cli arg!
0003543E <AmiBlitz3.ab3@26209>   MOVE.l #str_cliarguments,D2
00035444 <AmiBlitz3.ab3@26210>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035448 <AmiBlitz3.ab3@26211>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003544E <AmiBlitz3.ab3@26212>   MOVE.l #str_cliarguments,A0
00035454 <AmiBlitz3.ab3@26213>   ADDA.l #115,A0
0003545A <AmiBlitz3.ab3@26214>   MOVE.l #0,(a0) ; terminate it!
0003545C <AmiBlitz3.ab3@26216>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035462 <AmiBlitz3.ab3@26217>   MOVE.l #stacksize,D2
00035468 <AmiBlitz3.ab3@26218>   MOVE.l #4,D3
0003546C <AmiBlitz3.ab3@26219>   JSR _Read(A6)
00035476 <AmiBlitz3.ab3@26220>   CMP.l ##MIN_STACKSIZE,stacksize
0003547A <AmiBlitz3.ab3@26221>   BGE 'stackok
00035484 <AmiBlitz3.ab3@26222>   MOVE.l ##MIN_STACKSIZE,stacksize
00035486 <AmiBlitz3.ab3@26225>   MOVE.l D7,D1
0003548C <AmiBlitz3.ab3@26226>   MOVE.l #versioninformation,D2
00035492 <AmiBlitz3.ab3@26227>   MOVE.l #4,D3
00035496 <AmiBlitz3.ab3@26228>   JSR _Read(A6)
00035498 <AmiBlitz3.ab3@26230>   MOVE.l D7,D1
0003549E <AmiBlitz3.ab3@26231>   MOVE.l #number_of_builds,D2
000354A4 <AmiBlitz3.ab3@26232>   MOVE.l #4,D3
000354A8 <AmiBlitz3.ab3@26233>   JSR _Read(A6)
000354AE <AmiBlitz3.ab3@26239> 
000354B4 <AmiBlitz3.ab3@26240>   MOVE.l A7,errstack
000354BE <AmiBlitz3.ab3@26241>   MOVE.l #read_xtrafile__done2,errcont
000354C6 <AmiBlitz3.ab3@26242>   MOVE.w #$FFFF,ezerr
000354CC <AmiBlitz3.ab3@26245>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
000354CE <AmiBlitz3.ab3@26246>     MOVEQ.l #$04,D3
000354D0 <AmiBlitz3.ab3@26247>     MOVE.l D7,D1
000354D4 <AmiBlitz3.ab3@26248>     JSR _Read(A6)
000354D6 <AmiBlitz3.ab3@26249>     TST.l D0
000354DA <AmiBlitz3.ab3@26250>     BEQ.b read_xtrafile__done2
000354E0 <AmiBlitz3.ab3@26251>     MOVE.w temp1,D1
000354E2 <AmiBlitz3.ab3@26252>     TST.w d1                                               ;new
000354E6 <AmiBlitz3.ab3@26253>     BEQ read_xtrafile__done2                                         ;new
000354EC <AmiBlitz3.ab3@26254>      JSR AJL_0_6F1A
000354F2 <AmiBlitz3.ab3@26256>     CMP.l #0,a1
000354F6 <AmiBlitz3.ab3@26257>     BEQ read_xtrafile__dloop
000354FA <AmiBlitz3.ab3@26258>     MOVE.l $12(A1),D0
00035502 <AmiBlitz3.ab3@26259>     MOVE.w temp1+2,-$4(A1,D0.L)
00035506 <AmiBlitz3.ab3@26260> BRA.b read_xtrafile__dloop
0003550A <AmiBlitz3.ab3@26266>   LEA residents_table(PC),A0
0003550C <AmiBlitz3.ab3@26267>   MOVEQ.l #$07,D0
00035510 <AmiBlitz3.ab3@26270>     CLR.l $40(A0)
00035514 <AmiBlitz3.ab3@26271>     LEA ResidentEntryStep(A0),A0   ; $44
00035518 <AmiBlitz3.ab3@26272>   DBF D0,read_xtrafile__loop3
0003551C <AmiBlitz3.ab3@26274>   MOVEM.l D7/A6,-(A7)
00035522 <AmiBlitz3.ab3@26275>   JSR init_buffers
00035528 <AmiBlitz3.ab3@26276>   JSR reloadresident
0003552C <AmiBlitz3.ab3@26277>   MOVEM.l (A7)+,D7/A6
0003552E <AmiBlitz3.ab3@26278> RTS
00035536 <AmiBlitz3.ab3@26282>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
0003553C <AmiBlitz3.ab3@26291>   LEA ptr_xtradata,A2
0003553E <AmiBlitz3.ab3@26292>   MOVEQ.l #$00,D4
00035540 <AmiBlitz3.ab3@26296>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035544 <AmiBlitz3.ab3@26297>   BEQ.b write_xtrafile__done
00035546 <AmiBlitz3.ab3@26300>    MOVE.l (A2)+,D2
0003554A <AmiBlitz3.ab3@26301>    BEQ.b write_xtrafile__loop
0003554C <AmiBlitz3.ab3@26303>    MOVE.l D4,D3
0003554E <AmiBlitz3.ab3@26304>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035552 <AmiBlitz3.ab3@26305>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035556 <AmiBlitz3.ab3@26306> BRA.b write_xtrafile__loop2
00035558 <AmiBlitz3.ab3@26309>   MOVE.l D7,D1
0003555E <AmiBlitz3.ab3@26310>   MOVE.l #str_cliarguments,D2
00035564 <AmiBlitz3.ab3@26311>   MOVE.l #116,D3
00035568 <AmiBlitz3.ab3@26312>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
0003556A <AmiBlitz3.ab3@26314>   MOVE.l D7,D1
00035570 <AmiBlitz3.ab3@26315>   MOVE.l #stacksize,D2
00035576 <AmiBlitz3.ab3@26316>   MOVE.l #4,D3
0003557A <AmiBlitz3.ab3@26317>   JSR _Write(A6)
0003557C <AmiBlitz3.ab3@26319>   MOVE.l D7,D1
00035582 <AmiBlitz3.ab3@26320>   MOVE.l #versioninformation,D2
00035588 <AmiBlitz3.ab3@26321>   MOVE.l #4,D3
0003558C <AmiBlitz3.ab3@26322>   JSR _Write(A6)
0003558E <AmiBlitz3.ab3@26324>   MOVE.l D7,D1
00035594 <AmiBlitz3.ab3@26325>   MOVE.l #number_of_builds,D2
0003559A <AmiBlitz3.ab3@26326>   MOVE.l #4,D3
0003559E <AmiBlitz3.ab3@26327>   JSR _Write(A6)
000355A4 <AmiBlitz3.ab3@26333>   LEA libpointer,A2
000355A6 <AmiBlitz3.ab3@26336>     MOVE.l (A2),D0
000355AA <AmiBlitz3.ab3@26337>     BEQ.w write_xtrafile__done2
000355AC <AmiBlitz3.ab3@26338>     MOVEA.l D0,A2
000355B0 <AmiBlitz3.ab3@26339>     MOVE.l $12(A2),D4
000355B4 <AmiBlitz3.ab3@26340>     TST.w -$2(A2,D4.L)
000355B8 <AmiBlitz3.ab3@26341>     BEQ.w write_xtrafile__loop3
000355BC <AmiBlitz3.ab3@26343>     LEA $4(A2),A0
000355BE <AmiBlitz3.ab3@26344>     MOVE.l A0,D2
000355C0 <AmiBlitz3.ab3@26345>     MOVEQ.l #$02,D3
000355C2 <AmiBlitz3.ab3@26346>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000355C6 <AmiBlitz3.ab3@26347>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000355CA <AmiBlitz3.ab3@26349>     LEA -$4(A2,D4.L),A0
000355CC <AmiBlitz3.ab3@26350>     MOVE.l A0,D2
000355CE <AmiBlitz3.ab3@26351>     MOVEQ.l #$02,D3
000355D0 <AmiBlitz3.ab3@26352>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
000355D4 <AmiBlitz3.ab3@26353>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000355D8 <AmiBlitz3.ab3@26354> BRA.w write_xtrafile__loop3
000355DE <AmiBlitz3.ab3@26359>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
000355E0 <AmiBlitz3.ab3@26360>   MOVE.l A2,D2           ; move the address to d2
000355E6 <AmiBlitz3.ab3@26361>   MOVE.l #4,D3           ; we only need 4 bytes to save
000355E8 <AmiBlitz3.ab3@26362>   MOVE.l D7,D1           ; we set the file handle
000355EC <AmiBlitz3.ab3@26363>   JSR _Write(A6)         ; and we write it.
000355EE <AmiBlitz3.ab3@26365> RTS
000355F4 <AmiBlitz3.ab3@26370>   LEA optssave,A0                      ; backup address
000355FA <AmiBlitz3.ab3@26371>   LEA ptr_xtradata,A1                  ; source address
000355FC <AmiBlitz3.ab3@26374>   MOVE.w (A1)+,D0                                          ;length of data move
00035600 <AmiBlitz3.ab3@26375>   BEQ.b 'backupdone
00035602 <AmiBlitz3.ab3@26376>   SUBQ.w #1,D0
00035604 <AmiBlitz3.ab3@26379>     MOVE.l (A1)+,D1
00035608 <AmiBlitz3.ab3@26380>     BEQ.b 'backuploop
0003560A <AmiBlitz3.ab3@26381>     MOVEA.l D1,A2
0003560C <AmiBlitz3.ab3@26382>     MOVE.w D0,D1
0003560E <AmiBlitz3.ab3@26385>       MOVE.b (A2)+,(A0)+
00035612 <AmiBlitz3.ab3@26386>   DBF D1,'backuploop3
00035616 <AmiBlitz3.ab3@26388> BRA.w 'backuploop2
0003561C <AmiBlitz3.ab3@26392>   LEA bufferlist,A1
0003561E <AmiBlitz3.ab3@26395>     MOVE.l (A1)+,D2
00035622 <AmiBlitz3.ab3@26396>     BEQ.b 'loop4done
00035624 <AmiBlitz3.ab3@26398>     MOVEA.l D2,A0
00035626 <AmiBlitz3.ab3@26399>     MOVE.l (A0),D2
00035628 <AmiBlitz3.ab3@26400>     ADDQ.w #8,A0
0003562E <AmiBlitz3.ab3@26401>     JSR makelong
00035632 <AmiBlitz3.ab3@26402> BRA.b 'loop4
00035638 <AmiBlitz3.ab3@26405>   CLR.w state_of_residents                                 ;resident change
0003563E <AmiBlitz3.ab3@26406>   CLR.w comsettings_message                                ;alloc change
00035644 <AmiBlitz3.ab3@26407>   CLR.w maxobject_pos
00035646 <AmiBlitz3.ab3@26408> RTS   ; new tomsmart1
0003564C <AmiBlitz3.ab3@26412>   LEA optssave,A0
00035652 <AmiBlitz3.ab3@26413>   LEA ptr_xtradata,A1
00035654 <AmiBlitz3.ab3@26416>   MOVE.w (A1)+,D0
00035658 <AmiBlitz3.ab3@26417>   BEQ.b 'restoredone
0003565A <AmiBlitz3.ab3@26418>   SUBQ.w #1,D0
0003565C <AmiBlitz3.ab3@26421>     MOVE.l (A1)+,D1
00035660 <AmiBlitz3.ab3@26422>     BEQ.b 'restoreloop1
00035662 <AmiBlitz3.ab3@26423>     MOVEA.l D1,A2
00035664 <AmiBlitz3.ab3@26424>     MOVE.w D0,D1
00035666 <AmiBlitz3.ab3@26427>       MOVE.b (A0)+,(A2)+
0003566A <AmiBlitz3.ab3@26428>   DBF D1,'restoreloop3
0003566E <AmiBlitz3.ab3@26430> BRA.b 'restoreloop2
00035670 <AmiBlitz3.ab3@26433> RTS
00035676 <AmiBlitz3.ab3@26437>   JSR free_residents                    ; first free the allready loaded residents
0003567C <AmiBlitz3.ab3@26438>   JSR Clear_Residents_table             ; second clear the complete resident table
0003567E <AmiBlitz3.ab3@26439> RTS
00035686 <AmiBlitz3.ab3@26443>   MOVE.w #$FFFF,state_of_residents
0003568C <AmiBlitz3.ab3@26444>   MOVE.w state_of_residents,D0
00035692 <AmiBlitz3.ab3@26445>   JSR reloadresident
00035694 <AmiBlitz3.ab3@26446> RTS
00035696 <AmiBlitz3.ab3@26451>   MOVE.l d0,a1
0003569C <AmiBlitz3.ab3@26452>   MOVEA.l libpointer,A2
000356A0 <AmiBlitz3.ab3@26455>     MOVE.l $12(A2),D0
000356A4 <AmiBlitz3.ab3@26456>     TST.w -$2(A2,D0.L)
000356A8 <AmiBlitz3.ab3@26457>      BEQ.w JL_0_102AAa
000356AA <AmiBlitz3.ab3@26458>     SUBQ.w #1,D1
000356AE <AmiBlitz3.ab3@26459>      BPL.w JL_0_102AAa
000356B2 <AmiBlitz3.ab3@26460>     MOVEA.l -$1A(A2,D0.L),A3
000356B4 <AmiBlitz3.ab3@26461>     ADDA.l A2,A3
000356B6 <AmiBlitz3.ab3@26464>       MOVE.b (A3)+,(A1)+
000356BA <AmiBlitz3.ab3@26465>     BNE.w JL_0_10294a
000356BC <AmiBlitz3.ab3@26467>     CLR.b -(A1)
000356C0 <AmiBlitz3.ab3@26468>     MOVE.w -$4(A2,D0.L),D0
000356C6 <AmiBlitz3.ab3@26469>     AND.l #$ffff,d0
000356C8 <AmiBlitz3.ab3@26470> RTS
000356CA <AmiBlitz3.ab3@26473>     MOVEA.l (A2),A2
000356CE <AmiBlitz3.ab3@26474> BRA.w JL_0_1027Ca
000356DE <AmiBlitz3.ab3@26479> str_maxobjects_name:   Dc.b "              ",0 : Even
000356EE <AmiBlitz3.ab3@26480> str_maxobjects_name2:  Dc.b "              ",0 : Even
000356F2 <AmiBlitz3.ab3@26481> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
000356F6 <AmiBlitz3.ab3@26482>                        Dc.l $00000000
00035702 <AmiBlitz3.ab3@26483> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035706 <AmiBlitz3.ab3@26485> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
0003570A <AmiBlitz3.ab3@26486>                        Dc.l $00000000
00035716 <AmiBlitz3.ab3@26487> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
0003571A <AmiBlitz3.ab3@26489> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
0003571E <AmiBlitz3.ab3@26490>                        Dc.l $00000000
0003572A <AmiBlitz3.ab3@26491> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003572E <AmiBlitz3.ab3@26493> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035732 <AmiBlitz3.ab3@26494>                        Dc.l $00000000
0003573E <AmiBlitz3.ab3@26495> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035742 <AmiBlitz3.ab3@26497> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035746 <AmiBlitz3.ab3@26498>                        Dc.l $00000000
00035752 <AmiBlitz3.ab3@26499> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035756 <AmiBlitz3.ab3@26501> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
0003575A <AmiBlitz3.ab3@26502>                        Dc.l $00000000
00035766 <AmiBlitz3.ab3@26503> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035768 <AmiBlitz3.ab3@26505> maxobjects_value:      Dc.w $0064
0003576C <AmiBlitz3.ab3@26506>                        Dc.l $00000000
00035778 <AmiBlitz3.ab3@26507> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
0003577A <AmiBlitz3.ab3@26509> maxobjects_value2:     Dc.w $0014
0003577C <AmiBlitz3.ab3@26510>                        Dc.w $0000
00035788 <AmiBlitz3.ab3@26512> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035789 <AmiBlitz3.ab3@26516> set_create_iconfile:   Dc.b $00
0003578C <AmiBlitz3.ab3@26517> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003578E <AmiBlitz3.ab3@26518>                        Dc.b $00,$01
0003578F <AmiBlitz3.ab3@26520> set_use_debugger:      Dc.b $00                            ; Flags.w
00035792 <AmiBlitz3.ab3@26521> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035794 <AmiBlitz3.ab3@26522>                        Dc.b $00,$01                        ; GadgetType.w
00035798 <AmiBlitz3.ab3@26523> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
0003579C <AmiBlitz3.ab3@26524> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
000357A0 <AmiBlitz3.ab3@26525> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
000357A2 <AmiBlitz3.ab3@26526> AL_0_11094:            Ds.w 1
000357A3 <AmiBlitz3.ab3@26528> set_make_smallestcode: Ds.b 1
000357A6 <AmiBlitz3.ab3@26529> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
000357A8 <AmiBlitz3.ab3@26530>                        Dc.b $00,$01
000357A9 <AmiBlitz3.ab3@26531> set_link_debuginfo:    Ds.b 1
000357AC <AmiBlitz3.ab3@26532> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
000357AE <AmiBlitz3.ab3@26533>                        Dc.b $00,$01
000359CE <AmiBlitz3.ab3@26538>   Ds.l 136         ;resident files STEP $44 piece 8
00035A4E <AmiBlitz3.ab3@26543> str_calcexpression:        Ds.l 32
00035A52 <AmiBlitz3.ab3@26544> destbufferend_backup_calc: Ds.l 1
00035A5C <AmiBlitz3.ab3@26549>   MOVE.l destbufferend,destbufferend_backup_calc
00035A62 <AmiBlitz3.ab3@26550> 
00035A68 <AmiBlitz3.ab3@26551>   MOVE.l A7,errstack
00035A72 <AmiBlitz3.ab3@26552>   MOVE.l #Calc_Error_Exit,errcont
00035A9C <AmiBlitz3.ab3@26559>   !basic         ; get the flage for the conversion form the editor
00035AE0 <AmiBlitz3.ab3@26560>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00035B24 <AmiBlitz3.ab3@26561>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00035B42 <AmiBlitz3.ab3@26562>   !asm
00035B48 <AmiBlitz3.ab3@26564>   LEA str_calcexpression,A0
00035B4E <AmiBlitz3.ab3@26573>   JSR setcvars
00035B54 <AmiBlitz3.ab3@26574>   JSR setsvars
00035B5A <AmiBlitz3.ab3@26575>   CLR.w connest
00035B60 <AmiBlitz3.ab3@26576>   LEA str_calcexpression,A5
00035B66 <AmiBlitz3.ab3@26577>   JSR AJL_0_BF6E
00035B6C <AmiBlitz3.ab3@26578>   LEA str_calcexpression,A0
00035B6E <AmiBlitz3.ab3@26579>   TST.l D3
00035B72 <AmiBlitz3.ab3@26580>    BPL.w JL_0_11AE8
00035B76 <AmiBlitz3.ab3@26581>   MOVE.b #$2D,(A0)+
00035B78 <AmiBlitz3.ab3@26582>   NEG.l D3
00035B80 <AmiBlitz3.ab3@26585>   CMPI.w #$80,CalculatorButtonDecFlag
00035B84 <AmiBlitz3.ab3@26586>    BEQ.w JL_0_11B74
00035B86 <AmiBlitz3.ab3@26587>   MOVEQ.l #$00,D1
00035B8E <AmiBlitz3.ab3@26588>   CMPI.w #$80,CalculatorButtonBinFlag
00035B92 <AmiBlitz3.ab3@26589>    BNE.w JL_0_11B36
00035B94 <AmiBlitz3.ab3@26590>   MOVEQ.l #$1F,D0
00035B98 <AmiBlitz3.ab3@26591>   MOVE.b #$25,(A0)+
00035B9A <AmiBlitz3.ab3@26594>       LSL.l #1,D3
00035B9E <AmiBlitz3.ab3@26595>        BCC.w JL_0_11B18
00035BA2 <AmiBlitz3.ab3@26596>       MOVE.b #"1",(A0)+
00035BA4 <AmiBlitz3.ab3@26597>       MOVEQ.l #-$01,D1
00035BA8 <AmiBlitz3.ab3@26598>   BRA.w JL_0_11B22
00035BAA <AmiBlitz3.ab3@26601>       TST.w D1
00035BAE <AmiBlitz3.ab3@26602>       BEQ.w JL_0_11B22
00035BB2 <AmiBlitz3.ab3@26603>       MOVE.b #"0",(A0)+
00035BB6 <AmiBlitz3.ab3@26606>  DBF D0,JL_0_11B08
00035BB8 <AmiBlitz3.ab3@26609>   TST.w D1
00035BBC <AmiBlitz3.ab3@26610>   BNE.w JL_0_11B30
00035BC0 <AmiBlitz3.ab3@26611>   MOVE.b #"0",(A0)+
00035BC2 <AmiBlitz3.ab3@26614>   CLR.b (A0)
00035BC6 <AmiBlitz3.ab3@26615> BRA.w JL_0_11B7C
00035BC8 <AmiBlitz3.ab3@26618>   MOVEQ.l #$07,D0
00035BCC <AmiBlitz3.ab3@26619>   MOVE.b #$24,(A0)+
00035BCE <AmiBlitz3.ab3@26622>     MOVE.l D3,D2
00035BD0 <AmiBlitz3.ab3@26623>     SWAP D2
00035BD2 <AmiBlitz3.ab3@26624>     LSR.w #8,D2
00035BD4 <AmiBlitz3.ab3@26625>     LSR.w #4,D2
00035BD8 <AmiBlitz3.ab3@26626>     ADDI.w #$30,D2
00035BDC <AmiBlitz3.ab3@26627>     CMP.w #$3A,D2
00035BE0 <AmiBlitz3.ab3@26628>      BCS.w JL_0_11B52
00035BE2 <AmiBlitz3.ab3@26629>     ADDQ.w #7,D2
00035BE6 <AmiBlitz3.ab3@26632>     CMP.w #$30,D2
00035BEA <AmiBlitz3.ab3@26633>     BEQ.w JL_0_11B62
00035BEC <AmiBlitz3.ab3@26634>     MOVE.b D2,(A0)+
00035BEE <AmiBlitz3.ab3@26635>     MOVEQ.l #-$01,D1
00035BF2 <AmiBlitz3.ab3@26636>   BRA.w JL_0_11B6A
00035BF4 <AmiBlitz3.ab3@26639>     TST.w D1
00035BF8 <AmiBlitz3.ab3@26640>      BEQ.w JL_0_11B6A
00035BFA <AmiBlitz3.ab3@26641>     MOVE.b D2,(A0)+
00035BFC <AmiBlitz3.ab3@26644>     LSL.l #4,D3
00035C00 <AmiBlitz3.ab3@26645>  DBF D0,JL_0_11B3C
00035C04 <AmiBlitz3.ab3@26647> BRA.w JL_0_11B26
00035C06 <AmiBlitz3.ab3@26650>   MOVE.l D3,D2
00035C0C <AmiBlitz3.ab3@26651>   JSR makelong
00035C16 <AmiBlitz3.ab3@26658>   MOVE.l destbufferend_backup_calc,destbufferend
00035C18 <AmiBlitz3.ab3@26660> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00035D17 <AmiBlitz3.ab3@26664> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00035D18 <AmiBlitz3.ab3@26666> Even
00035D1A <AmiBlitz3.ab3@26680>     MOVE.b (a5)+,d0
00035D1E <AmiBlitz3.ab3@26681>     BEQ 'l2
00035D22 <AmiBlitz3.ab3@26682>     CMP.b #$80,d0
00035D26 <AmiBlitz3.ab3@26683>     BNE 'l1
00035D28 <AmiBlitz3.ab3@26684>     MOVE.b (a5)+,d0
00035D2C <AmiBlitz3.ab3@26685>     BEQ 'l2
00035D30 <AmiBlitz3.ab3@26686>     CMP.b #$02,d0
00035D34 <AmiBlitz3.ab3@26687>   BNE 'l1
00035D38 <AmiBlitz3.ab3@26690>     CMP.b #$20,(a5)+
00035D3C <AmiBlitz3.ab3@26691>   BEQ 'l3
00035D3E <AmiBlitz3.ab3@26692>   SUBQ.l #1,a5
00035D40 <AmiBlitz3.ab3@26693>   TST.b (a5)
00035D44 <AmiBlitz3.ab3@26694>   BEQ 'l2
00035D48 <AmiBlitz3.ab3@26695>   CMP.w #$8008,(a5)
00035D4C <AmiBlitz3.ab3@26696>   BEQ 'l4
00035D50 <AmiBlitz3.ab3@26697>   CMP.w #$8009,(a5)
00035D54 <AmiBlitz3.ab3@26698>   BEQ 'l4
00035D58 <AmiBlitz3.ab3@26699> BRA 'l1
00035D5A <AmiBlitz3.ab3@26702>   ADDQ.l #2,a5
00035D60 <AmiBlitz3.ab3@26703>   JSR skiprest
00035D62 <AmiBlitz3.ab3@26704> RTS
00035D68 <AmiBlitz3.ab3@26707>   JSR nextline
00035D6C <AmiBlitz3.ab3@26708>   BNE 'l1
00035D6E <AmiBlitz3.ab3@26709> RTS
00035D98 <AmiBlitz3.ab3@26713>   !basic
00035DA2 <AmiBlitz3.ab3@26714>   DateFormat 1
00035DB0 <AmiBlitz3.ab3@26715>   i.l=SystemDate
00035DD6 <AmiBlitz3.ab3@26716>   a$=Date$ (i)
00035E54 <AmiBlitz3.ab3@26717>   a$=Replace$(a$,"/",".")
00035E5A <AmiBlitz3.ab3@26718>   GetD0 &a$
00035E5C <AmiBlitz3.ab3@26719>   MOVEQ #8,d2
00035E5E <AmiBlitz3.ab3@26720>   MOVE.l d0,a0
00035E60 <AmiBlitz3.ab3@26723>     MOVE.b (a0)+,d1
00035E66 <AmiBlitz3.ab3@26724>     JSR pokedata1b
00035E6A <AmiBlitz3.ab3@26725>  DBF d2,'l1
00035E6C <AmiBlitz3.ab3@26727>   MOVEQ #0,d0
00035E6E <AmiBlitz3.ab3@26728>   MOVE.b (a0)+,d0
00035E8C <AmiBlitz3.ab3@26729>   !asm
00035E92 <AmiBlitz3.ab3@26730>   ADD.l #9,d2
00035E98 <AmiBlitz3.ab3@26731>   ADD.l #9,a5
00035E9A <AmiBlitz3.ab3@26732> RTS
00035EC4 <AmiBlitz3.ab3@26736>   !basic
00035ECE <AmiBlitz3.ab3@26737>   DateFormat 0
00035EDC <AmiBlitz3.ab3@26738>   i.l=SystemDate
00035F02 <AmiBlitz3.ab3@26739>   a$=Date$ (i)
00035F80 <AmiBlitz3.ab3@26740>   a$=Replace$(a$,"/",".")
00035F86 <AmiBlitz3.ab3@26741>   GetD0 &a$
00035F88 <AmiBlitz3.ab3@26742>   MOVEQ #8,d2
00035F8A <AmiBlitz3.ab3@26743>   MOVE.l d0,a0
00035F8C <AmiBlitz3.ab3@26746>     MOVE.b (a0)+,d1
00035F92 <AmiBlitz3.ab3@26747>     JSR pokedata1b
00035F96 <AmiBlitz3.ab3@26748>  DBF d2,'l1
00035F98 <AmiBlitz3.ab3@26750>   MOVEQ #0,d0
00035F9A <AmiBlitz3.ab3@26751>   MOVE.b (a0)+,d0
00035FB8 <AmiBlitz3.ab3@26752>   !asm
00035FBE <AmiBlitz3.ab3@26753>   ADD.l #9,d2
00035FC4 <AmiBlitz3.ab3@26754>   ADD.l #13,a5
00035FC6 <AmiBlitz3.ab3@26755> RTS
00035FF0 <AmiBlitz3.ab3@26759>   !basic
00035FFA <AmiBlitz3.ab3@26760>   DateFormat 1
00036008 <AmiBlitz3.ab3@26761>   i.l = SystemDate
0003602E <AmiBlitz3.ab3@26762>   a$ = Date$ (i)
000360AC <AmiBlitz3.ab3@26763>   a$ = Replace$(a$,"/",".")
000360B2 <AmiBlitz3.ab3@26764>   GetD0 &a$
000360B4 <AmiBlitz3.ab3@26765>   MOVEQ #8,d2
000360B6 <AmiBlitz3.ab3@26766>   MOVE.l d0,a0
000360B8 <AmiBlitz3.ab3@26769>     MOVE.b (a0)+,d1
000360BE <AmiBlitz3.ab3@26770>     JSR writebyte
000360C2 <AmiBlitz3.ab3@26771>  DBF d2,'l1
000360C4 <AmiBlitz3.ab3@26773>   MOVEQ #0,d0
000360C6 <AmiBlitz3.ab3@26774>   MOVE.b (a0)+,d0
000360E4 <AmiBlitz3.ab3@26775>   !asm
000360EA <AmiBlitz3.ab3@26776>   ADD.l #9,a5
000360EC <AmiBlitz3.ab3@26777> RTS
00036116 <AmiBlitz3.ab3@26781>   !basic
00036120 <AmiBlitz3.ab3@26782>   DateFormat 0
0003612E <AmiBlitz3.ab3@26783>   i.l=SystemDate
00036154 <AmiBlitz3.ab3@26784>   a$=Date$ (i)
000361D2 <AmiBlitz3.ab3@26785>   a$=Replace$(a$,"/",".")
000361D8 <AmiBlitz3.ab3@26786>   GetD0 &a$
000361DA <AmiBlitz3.ab3@26787>   MOVEQ #8,d2
000361DC <AmiBlitz3.ab3@26788>   MOVE.l d0,a0
000361DE <AmiBlitz3.ab3@26791>     MOVE.b (a0)+,d1
000361E4 <AmiBlitz3.ab3@26792>     JSR writebyte
000361E8 <AmiBlitz3.ab3@26793>  DBF d2,'l1
000361EA <AmiBlitz3.ab3@26795>   MOVEQ #0,d0
000361EC <AmiBlitz3.ab3@26796>   MOVE.b (a0)+,d0
0003620A <AmiBlitz3.ab3@26797>   !asm
00036210 <AmiBlitz3.ab3@26798>   ADD.l #13,a5
00036212 <AmiBlitz3.ab3@26799> RTS
00036214 <AmiBlitz3.ab3@26803>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036216 <AmiBlitz3.ab3@26804>   MOVE.l a5,d0
00036240 <AmiBlitz3.ab3@26805>   !basic
00036244 <AmiBlitz3.ab3@26806>   _myD0.l = PutD0
0003624E <AmiBlitz3.ab3@26807>   If _myD0
00036294 <AmiBlitz3.ab3@26808>     verstring$ = Left$(Peek.s(_myD0),9+3)
000362E6 <AmiBlitz3.ab3@26809>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000362EC <AmiBlitz3.ab3@26810>   Else
00036326 <AmiBlitz3.ab3@26811>     error{"INTERNAL: Invalid pointer in version_string!"}
00036336 <AmiBlitz3.ab3@26816>   actual_version.l = Peek.l(?versioninformation)
00036346 <AmiBlitz3.ab3@26817>   actual_build.l   = Peek.l(?number_of_builds)
0003636A <AmiBlitz3.ab3@26819>   Format "00"
000363A0 <AmiBlitz3.ab3@26820>   Select verstring$
000363C4 <AmiBlitz3.ab3@26822>     Case "VER_MAJOR"
00036400 <AmiBlitz3.ab3@26823>      put_versionstr$ = Str$(actual_version LSR 24)
0003642A <AmiBlitz3.ab3@26825>     Case "VER_MINOR"
0003646E <AmiBlitz3.ab3@26826>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036498 <AmiBlitz3.ab3@26828>     Case "VER_PATCH"
000364DC <AmiBlitz3.ab3@26829>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036506 <AmiBlitz3.ab3@26831>     Case "VER_BUILD"
0003652A <AmiBlitz3.ab3@26832>      Format ""
0003655E <AmiBlitz3.ab3@26833>      put_versionstr$ = Str$(actual_build)
00036564 <AmiBlitz3.ab3@26835>     Default
0003658C <AmiBlitz3.ab3@26836>      put_versionstr$ = "{unknown compilerconstant}"
0003659A <AmiBlitz3.ab3@26839>   End Select
000365BE <AmiBlitz3.ab3@26840>   Format ""
000365CE <AmiBlitz3.ab3@26842>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000365D0 <AmiBlitz3.ab3@26843>   MOVE.l d0,d2
000365D2 <AmiBlitz3.ab3@26844>   MOVE.l d2,-(a7)
000365D6 <AmiBlitz3.ab3@26845>   SUB #1,d2
000365DC <AmiBlitz3.ab3@26847>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000365DE <AmiBlitz3.ab3@26848>   MOVE.l d0,a0
000365E0 <AmiBlitz3.ab3@26851>     MOVE.b (a0)+,d1
000365E6 <AmiBlitz3.ab3@26852>     JSR pokedata1b
000365EA <AmiBlitz3.ab3@26853>  DBF d2,'l1
000365EC <AmiBlitz3.ab3@26855>   MOVEQ #0,d0
0003660A <AmiBlitz3.ab3@26856>   !asm
0003660C <AmiBlitz3.ab3@26857>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003660E <AmiBlitz3.ab3@26858>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036610 <AmiBlitz3.ab3@26859>   ADD.l d0,d2
00036616 <AmiBlitz3.ab3@26860>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036618 <AmiBlitz3.ab3@26861>   MOVEQ #0,d0
0003661A <AmiBlitz3.ab3@26862> RTS
0003661C <AmiBlitz3.ab3@26866>   MOVE.l a5,d0
00036646 <AmiBlitz3.ab3@26867>   !basic
0003664A <AmiBlitz3.ab3@26868>   _myD0.l = PutD0
00036654 <AmiBlitz3.ab3@26869>   If _myD0
0003669A <AmiBlitz3.ab3@26870>     verstring$ = Left$(Peek.s(_myD0),9+3)
000366EC <AmiBlitz3.ab3@26871>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000366F2 <AmiBlitz3.ab3@26872>   Else
0003672C <AmiBlitz3.ab3@26873>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0003673C <AmiBlitz3.ab3@26878>   actual_version.l = Peek.l(?versioninformation)
0003674C <AmiBlitz3.ab3@26879>   actual_build.l   = Peek.l(?number_of_builds)
00036770 <AmiBlitz3.ab3@26881>   Format ""
000367A6 <AmiBlitz3.ab3@26882>   Select verstring$
000367CA <AmiBlitz3.ab3@26884>     Case "VER_MAJOR"
00036806 <AmiBlitz3.ab3@26885>      put_versionstr$ = Str$(actual_version LSR 24)
00036830 <AmiBlitz3.ab3@26887>     Case "VER_MINOR"
00036874 <AmiBlitz3.ab3@26888>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003689E <AmiBlitz3.ab3@26890>     Case "VER_PATCH"
000368E2 <AmiBlitz3.ab3@26891>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003690C <AmiBlitz3.ab3@26893>     Case "VER_BUILD"
00036930 <AmiBlitz3.ab3@26894>      Format ""
00036964 <AmiBlitz3.ab3@26895>      put_versionstr$ = Str$(actual_build)
0003696A <AmiBlitz3.ab3@26897>     Default
00036992 <AmiBlitz3.ab3@26898>      put_versionstr$ = "{unknown compilerconstant}"
000369A0 <AmiBlitz3.ab3@26900>   End Select
000369C4 <AmiBlitz3.ab3@26901>   Format ""
000369DA <AmiBlitz3.ab3@26903>   GetD0 FLen(put_versionstr$)-1
000369DC <AmiBlitz3.ab3@26904>   MOVE.l d0,d2
000369E2 <AmiBlitz3.ab3@26906>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000369E4 <AmiBlitz3.ab3@26907>   MOVE.l d0,a0
000369E6 <AmiBlitz3.ab3@26910>     MOVE.b (a0)+,d1
000369EC <AmiBlitz3.ab3@26911>     JSR writebyte
000369F0 <AmiBlitz3.ab3@26912>  DBF d2,'l1
000369F2 <AmiBlitz3.ab3@26914>   MOVEQ #0,d0
000369F4 <AmiBlitz3.ab3@26915>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036A12 <AmiBlitz3.ab3@26916>   !asm
00036A18 <AmiBlitz3.ab3@26917>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036A1A <AmiBlitz3.ab3@26918> RTS
00036A1C <AmiBlitz3.ab3@27020>  MOVE.l a5,-(a7)
00036A48 <AmiBlitz3.ab3@27021>  !fget
00036A4C <AmiBlitz3.ab3@27022>  CMP.w #".",d0
00036A50 <AmiBlitz3.ab3@27023>  BNE 'skip
00036A54 <AmiBlitz3.ab3@27024>  MOVEM.l a2/d2,-(a7)
00036A5A <AmiBlitz3.ab3@27025>  LEA newtypebase,a2
00036A60 <AmiBlitz3.ab3@27026>  JSR getparameter2
00036A64 <AmiBlitz3.ab3@27027>  BEQ.w JUMP_syntaxerr
00036A6A <AmiBlitz3.ab3@27028>  JSR findtype
00036A6E <AmiBlitz3.ab3@27029>  BNE.w JUMP_notypeerr
00036A74 <AmiBlitz3.ab3@27030>  MOVE.l a2,typetocast
00036A78 <AmiBlitz3.ab3@27031>  MOVEM.l (a7)+,a2/d2
00036A7C <AmiBlitz3.ab3@27032>  CMP.w #")",d0
00036A80 <AmiBlitz3.ab3@27033>  BNE JUMP_errorbracketmiss
00036A82 <AmiBlitz3.ab3@27034>  ADDQ.l #4,a7
00036AAE <AmiBlitz3.ab3@27035>  !fget
00036AB4 <AmiBlitz3.ab3@27036>  JMP nocast
00036AB6 <AmiBlitz3.ab3@27038> 'skip MOVE.l (a7)+,a5
00036ABC <AmiBlitz3.ab3@27039>  JMP JL_0_A410
00036AC2 <AmiBlitz3.ab3@27041> JUMP_errorbracketmiss JMP errorbracketmiss
00036AEC <AmiBlitz3.ab3@27043> Function.l ab3_GetIncludeLock{filename.s}
00036B0C <AmiBlitz3.ab3@27044>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00036B64 <AmiBlitz3.ab3@27045>   ex.s       = dos_GetExt{filename}
00036B78 <AmiBlitz3.ab3@27047>   If incLock = False
00036BEC <AmiBlitz3.ab3@27048>     filename = dos_SetExt{filename,"ab3"}
00036C0C <AmiBlitz3.ab3@27049>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00036C20 <AmiBlitz3.ab3@27052>   If incLock = False
00036C94 <AmiBlitz3.ab3@27053>     filename = dos_SetExt{filename,"ab2"}
00036CB4 <AmiBlitz3.ab3@27054>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00036CC8 <AmiBlitz3.ab3@27057>   If incLock = False
00036D3C <AmiBlitz3.ab3@27058>     filename = dos_SetExt{filename,"bb2"}
00036D5C <AmiBlitz3.ab3@27059>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00036D70 <AmiBlitz3.ab3@27062>   If incLock = False
00036E02 <AmiBlitz3.ab3@27063>     filename = dos_SetExt{filename,ex+".ab3"}
00036E22 <AmiBlitz3.ab3@27064>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00036E36 <AmiBlitz3.ab3@27067>   If incLock = False
00036EAA <AmiBlitz3.ab3@27068>     filename = dos_SetExt{filename,"ab2"}
00036ECA <AmiBlitz3.ab3@27069>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00036EDE <AmiBlitz3.ab3@27072>   If incLock = False
00036F52 <AmiBlitz3.ab3@27073>     filename = dos_SetExt{filename,"bb2"}
00036F72 <AmiBlitz3.ab3@27074>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00036F7C <AmiBlitz3.ab3@27077>  Function Return incLock
00036F96 <AmiBlitz3.ab3@27078> End Function
00036FC0 <AmiBlitz3.ab3@27082>   !basic
00036FEA <AmiBlitz3.ab3@27083>   incString.s = Peek$(?ptr_parameterstore)
00037018 <AmiBlitz3.ab3@27085>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003701C <AmiBlitz3.ab3@27086>   incDirP.l   = PutD0                                       ;    "
00037044 <AmiBlitz3.ab3@27087>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000370C4 <AmiBlitz3.ab3@27088>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000370F6 <AmiBlitz3.ab3@27089>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003710A <AmiBlitz3.ab3@27091>   If incLock = False ; not found => check default Include Directory
0003711A <AmiBlitz3.ab3@27092>     incDirP.l = Peek.l(?incd)
00037124 <AmiBlitz3.ab3@27093>     If incDirP
0003714C <AmiBlitz3.ab3@27094>       incDir_.s = Peek.s(incDirP)
00037152 <AmiBlitz3.ab3@27095>     Else
000371BC <AmiBlitz3.ab3@27096>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003723C <AmiBlitz3.ab3@27098>     incFile.s = dos_AddPart{incDir_,incString}
0003726E <AmiBlitz3.ab3@27099>     incLock.l = ab3_GetIncludeLock{incFile}
00037282 <AmiBlitz3.ab3@27102>   If incLock = False ; not found => check relative to current source
0003729A <AmiBlitz3.ab3@27103>     incDepth.l = Peek.w(?ininclude)-1
000372C0 <AmiBlitz3.ab3@27104>     If incDepth >= 0 AND incDepth < #maxincludes
00037320 <AmiBlitz3.ab3@27105>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
000373A0 <AmiBlitz3.ab3@27106>       incFile.s = dos_AddPart{incDir_,incString}
000373D2 <AmiBlitz3.ab3@27107>       incLock.l = ab3_GetIncludeLock{incFile}
000373E6 <AmiBlitz3.ab3@27111>   If incLock = False ; still not found => check default Include Directory and name only
000373F6 <AmiBlitz3.ab3@27112>     incDirP.l = Peek.l(?incd)
00037400 <AmiBlitz3.ab3@27113>     If incDirP
00037428 <AmiBlitz3.ab3@27114>       incDir_.s = Peek.s(incDirP)
0003742E <AmiBlitz3.ab3@27115>     Else
00037498 <AmiBlitz3.ab3@27116>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037546 <AmiBlitz3.ab3@27118>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037578 <AmiBlitz3.ab3@27119>     incLock.l = ab3_GetIncludeLock{incFile}
00037582 <AmiBlitz3.ab3@27122>   If incLock
00037598 <AmiBlitz3.ab3@27123>     MaxLen incFile = 1024
000375BC <AmiBlitz3.ab3@27124>     NameFromLock_ incLock,&incFile,1024
000375E6 <AmiBlitz3.ab3@27125>     incFile = Peek.s(&incFile)
0003761E <AmiBlitz3.ab3@27126>     Poke$ ?ptr_parameterstore,incFile
00037632 <AmiBlitz3.ab3@27127>     i = FLen(incFile)
0003763E <AmiBlitz3.ab3@27128>     GetReg d0,i
00037644 <AmiBlitz3.ab3@27129>     MOVE.l d0,tempstore
00037654 <AmiBlitz3.ab3@27130>     UnLock_ incLock
00037672 <AmiBlitz3.ab3@27133>   !asm
00037678 <AmiBlitz3.ab3@27134>   TST.l tempstore
0003767C <AmiBlitz3.ab3@27135>    BEQ 'l1
00037682 <AmiBlitz3.ab3@27136>   MOVE.l tempstore,d2
00037684 <AmiBlitz3.ab3@27139> RTS
000376AE <AmiBlitz3.ab3@27143>   !basic
000376D8 <AmiBlitz3.ab3@27144>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037706 <AmiBlitz3.ab3@27145>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003770A <AmiBlitz3.ab3@27146>   incDirP.l   = PutD0                                       ;    "
00037732 <AmiBlitz3.ab3@27147>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000377B2 <AmiBlitz3.ab3@27148>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000377D2 <AmiBlitz3.ab3@27149>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000377E6 <AmiBlitz3.ab3@27151>   If incLock = False                                        ; not found => try orignal string only to find
00037806 <AmiBlitz3.ab3@27152>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037810 <AmiBlitz3.ab3@27155>   If incLock                                                ; found => store full path
00037826 <AmiBlitz3.ab3@27156>     MaxLen incFile = 1024
0003784A <AmiBlitz3.ab3@27157>     NameFromLock_ incLock,&incFile,1024
00037874 <AmiBlitz3.ab3@27158>     incFile = Peek.s(&incFile)
000378AC <AmiBlitz3.ab3@27159>     Poke$ ?ptr_parameterstore,incFile
000378B8 <AmiBlitz3.ab3@27162> 
000378D6 <AmiBlitz3.ab3@27163>   !asm
000378D8 <AmiBlitz3.ab3@27164> RTS
000378DE <AmiBlitz3.ab3@27175>   JSR Aclearallvars
000378E4 <AmiBlitz3.ab3@27176>   JSR free_unusedfunctions
000378EE <AmiBlitz3.ab3@27191>   MOVE.l #"NORE",reqmode
000378F4 <AmiBlitz3.ab3@27192> JSR handle_compileerror
000378F6 <AmiBlitz3.ab3@27195>   MOVE.l d0,-(a7)
000378F8 <AmiBlitz3.ab3@27196>   MOVE.l a5,d0
00037902 <AmiBlitz3.ab3@27197>   !basica7
00037906 <AmiBlitz3.ab3@27198>   i.l = PutD0
00037910 <AmiBlitz3.ab3@27199>   If i
00037938 <AmiBlitz3.ab3@27200>     a$ = Peek$(i)
0003796A <AmiBlitz3.ab3@27201>     b$ = Peeks$(i-7,7)
00037AA2 <AmiBlitz3.ab3@27203> 
00037AA8 <AmiBlitz3.ab3@27204>     MOVE.l d0,result
00037AAC <AmiBlitz3.ab3@27206>   !asma7
00037AAE <AmiBlitz3.ab3@27207>   MOVE.l (a7)+,d0
00037AB0 <AmiBlitz3.ab3@27208> RTS
00037ADA <AmiBlitz3.ab3@27212>   !basic
00037B08 <AmiBlitz3.ab3@27213>   !ComData_LEA{comStr_CurrentDir,D0}
00037B0C <AmiBlitz3.ab3@27214>   currentDirP.l = PutD0
00037B3A <AmiBlitz3.ab3@27216>   !ComData_LEA{comStr_SourceName,D0}
00037B3E <AmiBlitz3.ab3@27217>   fileNameP.l = PutD0
00037B66 <AmiBlitz3.ab3@27219>   check_dirname$  = Peek$(currentDirP)
00037B8E <AmiBlitz3.ab3@27220>   check_filename$ = Peek$(fileNameP)
00037C14 <AmiBlitz3.ab3@27221>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00037C1A <AmiBlitz3.ab3@27222>     JSR free_unusedfunctions
00037C64 <AmiBlitz3.ab3@27224>   olddirname$ = Peek$(check_dirname$)
00037CAE <AmiBlitz3.ab3@27225>   oldfilename$ = Peek$(check_filename$)
00037CD8 <AmiBlitz3.ab3@27226>   For i = 0 To #maxincludes-1
00037CEC <AmiBlitz3.ab3@27227>     incline(i) = 0
00037CFC <AmiBlitz3.ab3@27228>   Next
00037D1A <AmiBlitz3.ab3@27229>   !asm
00037D1C <AmiBlitz3.ab3@27230> RTS
00037D1E <AmiBlitz3.ab3@27234>   MOVEQ #0,d1
00037D20 <AmiBlitz3.ab3@27237>   MOVE.b (a5)+,d0
00037D24 <AmiBlitz3.ab3@27238>   BEQ 'er1
00037D28 <AmiBlitz3.ab3@27239>   CMP.b #$20,d0
00037D2C <AmiBlitz3.ab3@27240>   BEQ 'l1
00037D2E <AmiBlitz3.ab3@27241>   ADDQ #1,d1
00037D32 <AmiBlitz3.ab3@27242>   CMP.b #$22,d0
00037D36 <AmiBlitz3.ab3@27243>   BNE 'l1
00037D38 <AmiBlitz3.ab3@27244> RTS
00037D3E <AmiBlitz3.ab3@27247> JMP syntaxerr
00037D62 <AmiBlitz3.ab3@27258> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00037D80 <AmiBlitz3.ab3@27259> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00037D86 <AmiBlitz3.ab3@27264>   TST.b exdebug
00037D8A <AmiBlitz3.ab3@27265>   BNE 'l10
00037D90 <AmiBlitz3.ab3@27266>   MOVE.l #$4e71,d1
00037D96 <AmiBlitz3.ab3@27267>   JSR writeword
00037D9C <AmiBlitz3.ab3@27268>   MOVE.l destpointer,d0
00037D9E <AmiBlitz3.ab3@27269>   MOVE.l d0,d1
00037DA0 <AmiBlitz3.ab3@27270>   ADDQ.l #3,d1
00037DA6 <AmiBlitz3.ab3@27271>   AND.l #$fffffffc,d1
00037DAC <AmiBlitz3.ab3@27272>   MOVE.l d1,destpointer
00037DB2 <AmiBlitz3.ab3@27273>   SUB.l destpointer,d0
00037DB6 <AmiBlitz3.ab3@27274>   BEQ 'lnf1
00037DC0 <AmiBlitz3.ab3@27275>   CMP.l #-1,bssstart
00037DC4 <AmiBlitz3.ab3@27276>   BNE 'lnf1
00037DCE <AmiBlitz3.ab3@27277>   CMP.l #-1,chipstart
00037DD2 <AmiBlitz3.ab3@27278>   BNE 'lnf1
00037DD8 <AmiBlitz3.ab3@27279>   MOVE.l destpointer,a4
00037DDE <AmiBlitz3.ab3@27280>   TST.w dontwrite
00037DE2 <AmiBlitz3.ab3@27281>   BNE 'lnf1
00037DE8 <AmiBlitz3.ab3@27282>   MOVE.w #$4e71,-2(a4)
00037DF2 <AmiBlitz3.ab3@27285>   CMP.l #-1,bssstart
00037DF6 <AmiBlitz3.ab3@27286>   BEQ 'l11
00037DFC <AmiBlitz3.ab3@27287>   MOVE.l #erro1t,-(a7)
00037E02 <AmiBlitz3.ab3@27288> JMP handle_compileerror
00037E0C <AmiBlitz3.ab3@27291>   MOVE.l destpointer,bssstart
00037E14 <AmiBlitz3.ab3@27292>   MOVE.b #1,bssmode
00037E1A <AmiBlitz3.ab3@27295>   TST.b chipmode
00037E1E <AmiBlitz3.ab3@27296>   BEQ 'l10
00037E28 <AmiBlitz3.ab3@27297>   MOVE.l destpointer,chipend
00037E2E <AmiBlitz3.ab3@27298>   CLR.b chipmode
00037E34 <AmiBlitz3.ab3@27301>   JSR get1bytemain
00037E36 <AmiBlitz3.ab3@27302> RTS
00037E3C <AmiBlitz3.ab3@27306>    TST.b exdebug
00037E40 <AmiBlitz3.ab3@27307>   BNE 'x1
00037E46 <AmiBlitz3.ab3@27308>   MOVE.l destpointer,d0
00037E4C <AmiBlitz3.ab3@27309>   MOVE.l d0,realbssend
00037E52 <AmiBlitz3.ab3@27310>   MOVE.l #$4e71,d1
00037E58 <AmiBlitz3.ab3@27311>   JSR writeword
00037E5E <AmiBlitz3.ab3@27312>   MOVE.l destpointer,d0
00037E60 <AmiBlitz3.ab3@27313>   MOVE.l d0,d1
00037E62 <AmiBlitz3.ab3@27314>   ADDQ.l #3,d1
00037E68 <AmiBlitz3.ab3@27315>   AND.l #$fffffffc,d1
00037E6E <AmiBlitz3.ab3@27316>   MOVE.l d1,destpointer
00037E74 <AmiBlitz3.ab3@27317>   SUB.l destpointer,d0
00037E78 <AmiBlitz3.ab3@27318>   BEQ 'lnf1
00037E7E <AmiBlitz3.ab3@27319>   MOVE.l destpointer,a4
00037E88 <AmiBlitz3.ab3@27320>   CMP.l #-1,bssstart
00037E8C <AmiBlitz3.ab3@27321>   BNE 'lnf1
00037E96 <AmiBlitz3.ab3@27322>   CMP.l #-1,chipstart
00037E9A <AmiBlitz3.ab3@27323>   BNE 'lnf1
00037EA0 <AmiBlitz3.ab3@27324>   TST.w dontwrite
00037EA4 <AmiBlitz3.ab3@27325>   BNE 'lnf1
00037EAA <AmiBlitz3.ab3@27326>   MOVE.w #$4e71,-2(a4)
00037EB0 <AmiBlitz3.ab3@27329>   TST.b bssmode
00037EB4 <AmiBlitz3.ab3@27330>   BEQ 'l10
00037EBE <AmiBlitz3.ab3@27331>   MOVE.l destpointer,bssend
00037EC4 <AmiBlitz3.ab3@27332>   CLR.b bssmode
00037ECE <AmiBlitz3.ab3@27337>   CMP.l #-1,chipstart
00037ED2 <AmiBlitz3.ab3@27338>   BEQ 'l11
00037ED8 <AmiBlitz3.ab3@27339>   MOVE.l #erro1t,-(a7)
00037EDE <AmiBlitz3.ab3@27340> JMP handle_compileerror
00037EE8 <AmiBlitz3.ab3@27343>   MOVE.l destpointer,chipstart
00037EF0 <AmiBlitz3.ab3@27344>   MOVE.b #1,chipmode
00037EF6 <AmiBlitz3.ab3@27347>   JSR get1bytemain
00037EF8 <AmiBlitz3.ab3@27348> RTS
00037F22 <AmiBlitz3.ab3@27352>   !basic
00037F34 <AmiBlitz3.ab3@27362>   i.l = Peek.w(?ininclude)
00037F5A <AmiBlitz3.ab3@27363>   If i>=0 AND i<#maxincludes
00037F8C <AmiBlitz3.ab3@27364>     incdim (i) = Peek.s(?includetemp2)
00037FA6 <AmiBlitz3.ab3@27365>     incline(i) = Peek.l(?includeline)
00037FB0 <AmiBlitz3.ab3@27367>     If CLIMode
0003805E <AmiBlitz3.ab3@27368>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
0003807C <AmiBlitz3.ab3@27372>   !asm
0003807E <AmiBlitz3.ab3@27373> RTS
000380A8 <AmiBlitz3.ab3@27377>   !basic
000380BA <AmiBlitz3.ab3@27378>   i.l = Peek.w(?ininclude)
000380E0 <AmiBlitz3.ab3@27379>   If i>=0 AND i<#maxincludes
00038110 <AmiBlitz3.ab3@27380>     incdim (i) = ""
00038124 <AmiBlitz3.ab3@27381>     incline(i) = 0
0003815C <AmiBlitz3.ab3@27382>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
0003817A <AmiBlitz3.ab3@27384>   !asm
0003817C <AmiBlitz3.ab3@27385> RTS
00038182 <AmiBlitz3.ab3@27389>   LEA replacedat,a0
00038186 <AmiBlitz3.ab3@27390>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038188 <AmiBlitz3.ab3@27391> RTS
0003818E <AmiBlitz3.ab3@27395>   TST.b fpu
00038192 <AmiBlitz3.ab3@27396>   BEQ 'l1
0003819C <AmiBlitz3.ab3@27399>   MOVE.l destpointer,newinitaddr
000381A2 <AmiBlitz3.ab3@27400>   JSR writeword
000381A8 <AmiBlitz3.ab3@27401>   JSR writelong
000381AA <AmiBlitz3.ab3@27402> RTS
000381AC <AmiBlitz3.ab3@27407>   TST.b (a5)
000381B0 <AmiBlitz3.ab3@27408>    BEQ.s 'll20
000381B4 <AmiBlitz3.ab3@27409>   CMP.b #$20,(a5)
000381B8 <AmiBlitz3.ab3@27410>    BNE.s 'll10
000381BA <AmiBlitz3.ab3@27411>   ADDQ.l #1,a5
000381BE <AmiBlitz3.ab3@27412> BRA.s 'll21
000381C2 <AmiBlitz3.ab3@27415>   CMP.b #";",(a5)
000381C6 <AmiBlitz3.ab3@27416>   BNE.s 'll20
000381C8 <AmiBlitz3.ab3@27419>   TST.b (a5)+
000381CC <AmiBlitz3.ab3@27420>   BEQ.s 'll23
000381D0 <AmiBlitz3.ab3@27421> BRA.s 'll25
000381D2 <AmiBlitz3.ab3@27424>   SUBQ.l #1,a5
000381D4 <AmiBlitz3.ab3@27427> RTS
000381D8 <AmiBlitz3.ab3@27431>   MOVEM.l a2/d2,-(a7)
000381DA <AmiBlitz3.ab3@27432>   MOVEQ #0,d2
000381E0 <AmiBlitz3.ab3@27433>   LEA ptr_parameterstore,a0
000381E6 <AmiBlitz3.ab3@27434>   LEA chartab,a2
000381E8 <AmiBlitz3.ab3@27437>   MOVE.b (a5),d0
000381EC <AmiBlitz3.ab3@27438>   TST.b 0(a2,d0)
000381F0 <AmiBlitz3.ab3@27439>   BNE 'l10
000381F2 <AmiBlitz3.ab3@27440>   ADDQ.l #1,a5
000381F4 <AmiBlitz3.ab3@27441>   MOVE.b d0,(a0)+
000381F6 <AmiBlitz3.ab3@27442>   ADDQ.l #1,d2
000381FA <AmiBlitz3.ab3@27443> BRA fc2
000381FC <AmiBlitz3.ab3@27446>   CLR.b (a0)+
00038202 <AmiBlitz3.ab3@27447>   JSR findlabel2
00038204 <AmiBlitz3.ab3@27448>   MOVE.l a2,a0
00038208 <AmiBlitz3.ab3@27449>   MOVEM.l (a7)+,a2/d2
0003820A <AmiBlitz3.ab3@27450> RTS
0003820C <AmiBlitz3.ab3@27454>   TST.l d0
00038210 <AmiBlitz3.ab3@27455>   BNE 'l10
00038216 <AmiBlitz3.ab3@27456>     MOVE.l #syntax_,-(a7)
0003821C <AmiBlitz3.ab3@27457> JMP handle_compileerror
00038222 <AmiBlitz3.ab3@27460>   CMP.l #1,d0
00038226 <AmiBlitz3.ab3@27461>   BNE 'l20
0003822C <AmiBlitz3.ab3@27462>     MOVE.l #overflow,-(a7)
00038232 <AmiBlitz3.ab3@27463> JMP handle_compileerror
00038234 <AmiBlitz3.ab3@27466>   ADD.l a2,d0
00038236 <AmiBlitz3.ab3@27467>   MOVE.l d0,-(a7)
0003823C <AmiBlitz3.ab3@27468> JMP handle_compileerror
00038242 <AmiBlitz3.ab3@27472>   JMP _return
00038248 <AmiBlitz3.ab3@27473>   JMP _return
0003824E <AmiBlitz3.ab3@27474>   JMP _return
00038254 <AmiBlitz3.ab3@27475>   JMP _return
0003825A <AmiBlitz3.ab3@27476>   JMP _return
00038260 <AmiBlitz3.ab3@27477>   JMP _return
00038266 <AmiBlitz3.ab3@27478>   JMP _return
0003826C <AmiBlitz3.ab3@27479>   JMP _return
00038272 <AmiBlitz3.ab3@27480>   JMP _return
00038278 <AmiBlitz3.ab3@27481>   JMP _return
0003827E <AmiBlitz3.ab3@27482>   JMP Atokejsr
00038284 <AmiBlitz3.ab3@27483>   JMP writeinit
0003828A <AmiBlitz3.ab3@27484>   JMP macroexecute
00038290 <AmiBlitz3.ab3@27485>   JMP findnext
00038296 <AmiBlitz3.ab3@27486>   JMP replacelib
0003829C <AmiBlitz3.ab3@27487>   JMP findconstant2
000382A2 <AmiBlitz3.ab3@27488>   JMP findchar                                             ;char in d1
000382A8 <AmiBlitz3.ab3@27489>   JMP stripspaces
000382AE <AmiBlitz3.ab3@27490>   JMP calc                                                 ;d0 varmode
000382B4 <AmiBlitz3.ab3@27491>   JMP error
000382BA <AmiBlitz3.ab3@27492>   JMP writelong                                            ;d1 value
000382C0 <AmiBlitz3.ab3@27493>   JMP writeword                                            ;d1 value
000382C6 <AmiBlitz3.ab3@27494>   JMP writebyte                                            ;d1 value
000382CC <AmiBlitz3.ab3@27495> JMP exit
000382D0 <AmiBlitz3.ab3@27499>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000382D2 <AmiBlitz3.ab3@27502>   fast            Dc.w 0
000382D4 <AmiBlitz3.ab3@27503>   fpu             Dc.w 0
000382D6 <AmiBlitz3.ab3@27504>   newsyntax       Dc.w 0
000382D7 <AmiBlitz3.ab3@27506>   optistring      Dc.b 0
000382D8 <AmiBlitz3.ab3@27507>   optistring2     Dc.b 0
000382D9 <AmiBlitz3.ab3@27508>   optiarray       Dc.b 0
000382DA <AmiBlitz3.ab3@27509>   quickadd        Dc.b 0
000382DC <AmiBlitz3.ab3@27510>   newmode         Dc.w 0
000382DE <AmiBlitz3.ab3@27511>   mode            Dc.w 0
000382E0 <AmiBlitz3.ab3@27512>   string1         Dc.w 0
000382E2 <AmiBlitz3.ab3@27513>   load_var_size   Dc.w 0
000382E4 <AmiBlitz3.ab3@27514>   load_var_reg    Dc.w 0
000382E8 <AmiBlitz3.ab3@27515>   load_var_addr   Dc.l 0
000382EA <AmiBlitz3.ab3@27516>   imm_size        Dc.w 0
000382EC <AmiBlitz3.ab3@27517>   imm_reg         Dc.w 0
000382F0 <AmiBlitz3.ab3@27518>   imm_addr        Dc.l 0
000382F1 <AmiBlitz3.ab3@27519>   iee             Dc.b 0
000382F2 <AmiBlitz3.ab3@27520>   _dcb            Dc.b 0
000382F6 <AmiBlitz3.ab3@27521>   nohunkoffset    Dc.l 0
000382FA <AmiBlitz3.ab3@27524> teddata:        Dc.l tokens
000382FE <AmiBlitz3.ab3@27525>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038302 <AmiBlitz3.ab3@27526>                 Dc.l read_xtrafile
00038306 <AmiBlitz3.ab3@27527>                 Dc.l write_xtrafile
0003830A <AmiBlitz3.ab3@27528>                 Dc.l call_menuentry                        ; compile AND RUN ?
0003830E <AmiBlitz3.ab3@27529>                 Dc.l 0
00038312 <AmiBlitz3.ab3@27530>                 Dc.b ":",34,".;"
00038316 <AmiBlitz3.ab3@27531>                 Dc.l "NEW1"
0003831A <AmiBlitz3.ab3@27532>                 Dc.l newtypebase
0003831E <AmiBlitz3.ab3@27533> realconstbase:  Dc.l labelbase
00038322 <AmiBlitz3.ab3@27534> deflib          Dc.l 0
00038326 <AmiBlitz3.ab3@27535> incd            Dc.l 0
0003832A <AmiBlitz3.ab3@27536>                 Dc.l 0
0003832E <AmiBlitz3.ab3@27537>                 Dc.l 0
00038332 <AmiBlitz3.ab3@27538>                 Dc.l 0
00038334 <AmiBlitz3.ab3@27539> _return         RTS
00038335 <AmiBlitz3.ab3@27540>                 Dc.b 0
00038735 <AmiBlitz3.ab3@27541> chartab2        Ds.l 256
00038739 <AmiBlitz3.ab3@27542> codeend         Dc.l 0
0003873D <AmiBlitz3.ab3@27543> hunkoffsetnum   Dc.l 0
00038741 <AmiBlitz3.ab3@27544> chipsize        Dc.l 0
00038745 <AmiBlitz3.ab3@27545> bsssize         Dc.l 0
00038749 <AmiBlitz3.ab3@27546> bssstart        Dc.l -1
0003874D <AmiBlitz3.ab3@27547> bssend          Dc.l -1
00038751 <AmiBlitz3.ab3@27548> chipstart       Dc.l -1
00038755 <AmiBlitz3.ab3@27549> chipend         Dc.l -1
00038756 <AmiBlitz3.ab3@27550> bssmode         Dc.b 0
00038757 <AmiBlitz3.ab3@27551> chipmode        Dc.b 0
00038758 <AmiBlitz3.ab3@27552> newhunk         Dc.b 0
0003875C <AmiBlitz3.ab3@27553> bssnum          Dc.l 0
00038760 <AmiBlitz3.ab3@27554> chipnum         Dc.l 0
00038764 <AmiBlitz3.ab3@27555> lastinstruction Dc.l 0
00038768 <AmiBlitz3.ab3@27556> lastinstructionaddr Dc.l 0
0003877C <AmiBlitz3.ab3@27557> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038780 <AmiBlitz3.ab3@27558> tstsize1b:      Ds.l 1
00038784 <AmiBlitz3.ab3@27559> bsssize2        Dc.l 1
00038788 <AmiBlitz3.ab3@27560>                 Dc.l $03E9
0003878C <AmiBlitz3.ab3@27561> tstsize2b:      Dc.l $100
000387A0 <AmiBlitz3.ab3@27562> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
000387A4 <AmiBlitz3.ab3@27563> tstsize1c:      Ds.l 1
000387A8 <AmiBlitz3.ab3@27564> bsssize3        Dc.l 1
000387AC <AmiBlitz3.ab3@27565> chipsize2       Dc.l 1
000387B0 <AmiBlitz3.ab3@27566>                 Dc.l $3e9
000387B4 <AmiBlitz3.ab3@27567> tstsize2c       Dc.l 0
000387C4 <AmiBlitz3.ab3@27568> hunkend         Dc.l $3f2,$3eb,0,$3f2
000387D4 <AmiBlitz3.ab3@27569> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000387DB <AmiBlitz3.ab3@27570> strcpy          Dc.b "strcpy",0
000387E2 <AmiBlitz3.ab3@27571> strcmp          Dc.b "strcmp",0
000387E9 <AmiBlitz3.ab3@27572> strvar          Dc.b "strvar",0
000387EE <AmiBlitz3.ab3@27573> qmul            Dc.b "qmul",0
000387F3 <AmiBlitz3.ab3@27574> qdiv            Dc.b "qdiv",0
000387FA <AmiBlitz3.ab3@27575> _MaxLen         Dc.b "maxlen",0
000387FF <AmiBlitz3.ab3@27576> notf            Dc.b "????",0
00038822 <AmiBlitz3.ab3@27578> errtext         Dc.b "only reg addressing Mode supported",0
0003884C <AmiBlitz3.ab3@27579> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003888E <AmiBlitz3.ab3@27580> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038890 <AmiBlitz3.ab3@27581> peeksize        Dc.w 0
00038894 <AmiBlitz3.ab3@27583> mainstart       Dc.l 0
00038895 <AmiBlitz3.ab3@27585> infunctioncode  Dc.b 0
00038897 <AmiBlitz3.ab3@27586> regnumstore     Dc.w 0
000388C4 <AmiBlitz3.ab3@27587>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000388CC <AmiBlitz3.ab3@27588> testcode        Dc.b "print i",0
00038930 <AmiBlitz3.ab3@27589>                 Ds.b 100
0003893E <AmiBlitz3.ab3@27590> devo            Dc.b "developobject",0 : Even
00038950 <AmiBlitz3.ab3@27591> autostorename   Dc.b "__autoconstantnum",0
0003895A <AmiBlitz3.ab3@27592> _include        Dc.b "__include",0
00038962 <AmiBlitz3.ab3@27593> _debug          Dc.b "__debug",0
00038966 <AmiBlitz3.ab3@27594> unusedfunc      Dc.l 0
00038968 <AmiBlitz3.ab3@27598>   MOVE.l a0,d0
00038992 <AmiBlitz3.ab3@27599>   !basic
00038996 <AmiBlitz3.ab3@27600>   *olderror.l= PutD0
000389F0 <AmiBlitz3.ab3@27601> 
00038A24 <AmiBlitz3.ab3@27602>   error_type$ = error$
00038AC0 <AmiBlitz3.ab3@27603> 
00038AD4 <AmiBlitz3.ab3@27604>   If Peek.l (?beforeparameterfetch)
00038AEA <AmiBlitz3.ab3@27605>     MaxLen detokenline.s = 65536
00038B2C <AmiBlitz3.ab3@27606>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00038B3C <AmiBlitz3.ab3@27607>    *tn.preprocessor = Peek.l(?include_preprocessor)
00038B66 <AmiBlitz3.ab3@27608>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00038B8E <AmiBlitz3.ab3@27609>     If written>0 Then Poke.b &detokenline+written,0
00038BB8 <AmiBlitz3.ab3@27610>     sourceLineText.s = Peek.s(&detokenline)
00038BBE <AmiBlitz3.ab3@27611>   Else
00038BE6 <AmiBlitz3.ab3@27612>     sourceLineText = "NULL"
00038C1A <AmiBlitz3.ab3@27614>   error_source$ = sourceLineText
00038C6C <AmiBlitz3.ab3@27615>   error$=error$+sourceLineText
00038C72 <AmiBlitz3.ab3@27616>   GetD0 &error$
00038C90 <AmiBlitz3.ab3@27617>   !asm
00038C92 <AmiBlitz3.ab3@27618>   MOVE.l d0,a0
00038C94 <AmiBlitz3.ab3@27619> RTS
00038C96 <AmiBlitz3.ab3@27623>   MOVE.l a0,-(a7)
00038C98 <AmiBlitz3.ab3@27624>   MOVE.l a0,d0
00038C9A <AmiBlitz3.ab3@27625>   MOVE.l a5,a0                                             ;macro title
00038CC4 <AmiBlitz3.ab3@27626>   !basic
00038CC8 <AmiBlitz3.ab3@27627>   i = PutD0
00038CCA <AmiBlitz3.ab3@27628>   MOVEQ #20,d0
00038CCC <AmiBlitz3.ab3@27631>     MOVE.b -(a0),d1
00038CD0 <AmiBlitz3.ab3@27632>     BEQ 'l1
00038CD4 <AmiBlitz3.ab3@27633>     CMP.b #":",d1
00038CD8 <AmiBlitz3.ab3@27634>     BEQ 'l1
00038CDA <AmiBlitz3.ab3@27635>     SUBQ.l #1,d0
00038CDE <AmiBlitz3.ab3@27636>     BNE 'l2
00038CE0 <AmiBlitz3.ab3@27639>   ADDQ #1,a0
00038CE2 <AmiBlitz3.ab3@27640>   MOVE.l a0,d0
00038CE6 <AmiBlitz3.ab3@27641>   i2.l = PutD0
00038D02 <AmiBlitz3.ab3@27642>   If Peek.w (?ininclude)>0
00038D5C <AmiBlitz3.ab3@27643>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00038D6C <AmiBlitz3.ab3@27644>     errorline.l = Peek.l(?includeline);-1
00038D94 <AmiBlitz3.ab3@27645>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00038DBE <AmiBlitz3.ab3@27646>     errorfile.s = Peek.s(?includetemp2)
00038DC4 <AmiBlitz3.ab3@27647>   Else
00038DFC <AmiBlitz3.ab3@27648>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00038E12 <AmiBlitz3.ab3@27649>     errorline.l = Peek.l(?compilelinecounter) + 1
00038E46 <AmiBlitz3.ab3@27650>     errorfile.s = cli_sourcefile
00038E50 <AmiBlitz3.ab3@27653>   If i
00038EF4 <AmiBlitz3.ab3@27654>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00038F72 <AmiBlitz3.ab3@27655>     errortext.s = Replace$(errortext,"\n","\\0a")
00038F78 <AmiBlitz3.ab3@27656>   Else
00038FA0 <AmiBlitz3.ab3@27657>     errortext.s = "???"
00039118 <AmiBlitz3.ab3@27660>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
000391E0 <AmiBlitz3.ab3@27661>   NPrint "  ",error_type$,"\\n  ",error_source$
000391FE <AmiBlitz3.ab3@27665>   !asm
00039200 <AmiBlitz3.ab3@27666>   MOVE.l (a7)+,a0
00039202 <AmiBlitz3.ab3@27667> RTS
00039204 <AmiBlitz3.ab3@27671>   MOVE.l a0,-(a7)
00039206 <AmiBlitz3.ab3@27672>   MOVE.l a0,d0
00039208 <AmiBlitz3.ab3@27673>   MOVE.l a5,a0                                             ;macro title
00039232 <AmiBlitz3.ab3@27674>   !basic
00039236 <AmiBlitz3.ab3@27675>   i = PutD0
00039238 <AmiBlitz3.ab3@27676>   MOVEQ #20,d0
0003923A <AmiBlitz3.ab3@27679>     MOVE.b -(a0),d1
0003923E <AmiBlitz3.ab3@27680>     BEQ 'l1
00039242 <AmiBlitz3.ab3@27681>     CMP.b #":",d1
00039246 <AmiBlitz3.ab3@27682>     BEQ 'l1
00039248 <AmiBlitz3.ab3@27683>     SUBQ.l #1,d0
0003924C <AmiBlitz3.ab3@27684>     BNE 'l2
0003924E <AmiBlitz3.ab3@27687>   ADDQ #1,a0
00039250 <AmiBlitz3.ab3@27688>   MOVE.l a0,d0
00039254 <AmiBlitz3.ab3@27689>   i2.l = PutD0
000392D8 <AmiBlitz3.ab3@27690>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
000392EC <AmiBlitz3.ab3@27691>   If fid <> -1
00039308 <AmiBlitz3.ab3@27692>     If Peek.w (?ininclude)>0
00039362 <AmiBlitz3.ab3@27693>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039368 <AmiBlitz3.ab3@27694>     Else
00039394 <AmiBlitz3.ab3@27695>       Poke$(?includetemp2),""
000393BE <AmiBlitz3.ab3@27697>     a$ = Peek$(?includetemp2)
00039430 <AmiBlitz3.ab3@27698>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039462 <AmiBlitz3.ab3@27699>     file_WriteLine{fid,x$}
000394AC <AmiBlitz3.ab3@27700>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
000394D8 <AmiBlitz3.ab3@27701>     If a$
0003950A <AmiBlitz3.ab3@27702>       file_WriteLine{fid,a$}
00039554 <AmiBlitz3.ab3@27703>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
0003957C <AmiBlitz3.ab3@27704>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039582 <AmiBlitz3.ab3@27705>     Else
000395A8 <AmiBlitz3.ab3@27706>       file_WriteLine{fid,"none"}
000395D8 <AmiBlitz3.ab3@27708>     file_WriteLine{fid,Peek$(i2)}
0003962E <AmiBlitz3.ab3@27709>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039678 <AmiBlitz3.ab3@27710>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039682 <AmiBlitz3.ab3@27711>     file_Close{fid}
000396A0 <AmiBlitz3.ab3@27713>   !asm
000396A2 <AmiBlitz3.ab3@27714>   MOVE.l (a7)+,a0
000396A4 <AmiBlitz3.ab3@27715> RTS
000396CE <AmiBlitz3.ab3@27719>   !basic
000396D2 <AmiBlitz3.ab3@27720>   progress.l     = PutD0
000396E4 <AmiBlitz3.ab3@27721>   total.l        = Peek.w(?progressbar_width)
00039702 <AmiBlitz3.ab3@27722>   calcpro        = (progress * 100) / total +1
00039714 <AmiBlitz3.ab3@27723>   pass.l         = Peek.w(?pass)
00039726 <AmiBlitz3.ab3@27724>   typ.l          = Peek.w(?compiler_job)
00039744 <AmiBlitz3.ab3@27727> If (pass><pass_old OR typ><typ_old)
00039752 <AmiBlitz3.ab3@27729>     If pass_old><pass
000397EE <AmiBlitz3.ab3@27730>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039844 <AmiBlitz3.ab3@27731>       If cli_verbose>=2 Then NPrint passtatusstr
0003984A <AmiBlitz3.ab3@27734>     pass_old = pass
00039850 <AmiBlitz3.ab3@27735>     typ_old  = typ
00039856 <AmiBlitz3.ab3@27736>     update_comstatus_gui = True
00039868 <AmiBlitz3.ab3@27737>     If typ=0
00039948 <AmiBlitz3.ab3@27738>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039950 <AmiBlitz3.ab3@27739>       calcpro = 0  ; set gauge to 0
00039962 <AmiBlitz3.ab3@27741>     If typ=1
00039A42 <AmiBlitz3.ab3@27742>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039A4A <AmiBlitz3.ab3@27743>       calcpro = 0  ; set gauge to 0
00039AA0 <AmiBlitz3.ab3@27746>     If cli_verbose>=3 Then NPrint comstatusstr
00039AAE <AmiBlitz3.ab3@27749>   If (calcpro >< calcpro_old)
00039B02 <AmiBlitz3.ab3@27750>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
00039B08 <AmiBlitz3.ab3@27751>     calcpro_old = calcpro
00039B0E <AmiBlitz3.ab3@27752>     update_comstatus_gui = True
00039B28 <AmiBlitz3.ab3@27755>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00039B46 <AmiBlitz3.ab3@27756>     !asm
00039B78 <AmiBlitz3.ab3@27757> 
00039BA2 <AmiBlitz3.ab3@27758>     !basic
00039BA8 <AmiBlitz3.ab3@27759>     update_comstatus_gui  = False ; because we update the gui
00039BC6 <AmiBlitz3.ab3@27761>   !asm
00039BC8 <AmiBlitz3.ab3@27762> RTS
00039BCE <AmiBlitz3.ab3@27767>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00039BD4 <AmiBlitz3.ab3@27768>   LEA maxobjects_value,A3                                  ;current value
00039BDA <AmiBlitz3.ab3@27769>   MOVEA.l libpointer,A2
00039BDE <AmiBlitz3.ab3@27772>   CMPA.w #$0,A2
00039BE2 <AmiBlitz3.ab3@27773>   BEQ.w menu4c__igotb
00039BE4 <AmiBlitz3.ab3@27774>   MOVEA.l A2,A1
00039BE8 <AmiBlitz3.ab3@27775>   ADDA.l $12(A1),A1
00039BEC <AmiBlitz3.ab3@27776>   TST.w -$2(A1)
00039BF0 <AmiBlitz3.ab3@27777>   BEQ.w JL_0_FFF6b
00039BF2 <AmiBlitz3.ab3@27778>   SUBQ.w #1,D5
00039BF6 <AmiBlitz3.ab3@27779>   BMI.w JL_0_FFFCb
00039BF8 <AmiBlitz3.ab3@27782>   MOVEA.l (A2),A2
00039BFC <AmiBlitz3.ab3@27783> BRA.w JL_0_FFDAb
00039C00 <AmiBlitz3.ab3@27786>   MOVE.w (A3),-$4(A1)
00039C02 <AmiBlitz3.ab3@27789> RTS
00039C08 <AmiBlitz3.ab3@27793>   MOVE.w debugnest,d0
00039C0E <AmiBlitz3.ab3@27794>   LEA storedebugmode, a0
00039C16 <AmiBlitz3.ab3@27795>   MOVE.b 0(a0,d0.w),debugmode
00039C1C <AmiBlitz3.ab3@27796>   TST.w debugnest
00039C20 <AmiBlitz3.ab3@27797>   BEQ JUMP_unpairrunerrs
00039C26 <AmiBlitz3.ab3@27798>   SUBQ.w #1,debugnest
00039C28 <AmiBlitz3.ab3@27799> RTS
00039C2E <AmiBlitz3.ab3@27802> JMP runerrsoverflow
00039C34 <AmiBlitz3.ab3@27805> JMP unpairrunerrs
00039C3C <AmiBlitz3.ab3@27809>   BCHG #$7,use_debugger
00039C44 <AmiBlitz3.ab3@27811>   BTST #$7,use_debugger
00039C48 <AmiBlitz3.ab3@27812>   BNE 'debugon
00039C4E <AmiBlitz3.ab3@27813>   CLR.w debugmode
00039C52 <AmiBlitz3.ab3@27814> BRA.b 'debugoff
00039C58 <AmiBlitz3.ab3@27817>   SNE debugmode
00039C5A <AmiBlitz3.ab3@27820>   MOVE.l a0,-(a7)
00039C92 <AmiBlitz3.ab3@27823>   !ComData_SetB{comByte_DebugMode,debugmode}
00039C94 <AmiBlitz3.ab3@27828>   MOVE.l (a7)+,a0
00039C96 <AmiBlitz3.ab3@27829> RTS
00039C9E <AmiBlitz3.ab3@27834>   BTST #$7,use_debugger
00039CA2 <AmiBlitz3.ab3@27835>   BNE 'debugon
00039CA8 <AmiBlitz3.ab3@27836>   CLR.w debugmode
00039CAC <AmiBlitz3.ab3@27837> BRA.b 'debugoff
00039CB2 <AmiBlitz3.ab3@27840>   SNE debugmode
00039CB4 <AmiBlitz3.ab3@27843> RTS
00039CBA <AmiBlitz3.ab3@27847>   ADDQ.w #1,debugnest
00039CC0 <AmiBlitz3.ab3@27848>   MOVE.w debugnest,d0
00039CC4 <AmiBlitz3.ab3@27849>   CMP.w #18,d0
00039CC8 <AmiBlitz3.ab3@27850>    BGE JUMP_runerrsoverflow
00039CCE <AmiBlitz3.ab3@27851>   LEA storedebugmode, a0
00039CD6 <AmiBlitz3.ab3@27852>   MOVE.b debugmode,0( a0,d0.w)
00039CDC <AmiBlitz3.ab3@27855>   SF debugmode
00039CDE <AmiBlitz3.ab3@27856> RTS
00039D5E <AmiBlitz3.ab3@27859> usedpath:  Ds.l 32
00039D62 <AmiBlitz3.ab3@27863>   BEQ.w JUMP_syntaxerr
00039D68 <AmiBlitz3.ab3@27864>   LEA lastpath,A0
00039D6C <AmiBlitz3.ab3@27865>   MOVEM.l a0-a1/d0,-(a7)
00039D72 <AmiBlitz3.ab3@27866>   LEA lastpath2,a1
00039D74 <AmiBlitz3.ab3@27869>     MOVE.b (a0)+,(a1)+
00039D78 <AmiBlitz3.ab3@27870>   BNE 'l2
00039D7C <AmiBlitz3.ab3@27871>   MOVEM.l (a7)+,a0-a1/d0
00039D80 <AmiBlitz3.ab3@27872>   LEA usedpath(PC),A0
00039D84 <AmiBlitz3.ab3@27873>   MOVEM.l a0-a1/d0,-(a7)
00039D8A <AmiBlitz3.ab3@27874>   LEA lastpath,a1
00039D8C <AmiBlitz3.ab3@27877>     MOVE.b (a0)+,(a1)+
00039D90 <AmiBlitz3.ab3@27878>   BNE 'l1
00039D94 <AmiBlitz3.ab3@27879>   MOVEM.l (a7)+,a0-a1/d0
00039D96 <AmiBlitz3.ab3@27882>   TST.w D0
00039D9A <AmiBlitz3.ab3@27883>    BMI.w JUMP_syntaxerr
00039D9C <AmiBlitz3.ab3@27884>   MOVE.b D0,(A0)+
00039DA0 <AmiBlitz3.ab3@27885>   BSR.w JUMP_get1bytemain
00039DA4 <AmiBlitz3.ab3@27886>    BNE.w JL_0_4AA8
00039DA8 <AmiBlitz3.ab3@27887>   MOVE.b #$2,(A0)
00039DAA <AmiBlitz3.ab3@27888> RTS
00039DAE <AmiBlitz3.ab3@27892>   BEQ.w JUMP_syntaxerr
00039DB4 <AmiBlitz3.ab3@27893>   LEA path2,A0
00039DB6 <AmiBlitz3.ab3@27903>   TST.w D0
00039DBA <AmiBlitz3.ab3@27904>    BMI.w JUMP_syntaxerr
00039DBC <AmiBlitz3.ab3@27905>   MOVE.b D0,(A0)+
00039DC0 <AmiBlitz3.ab3@27906>   BSR.w JUMP_get1bytemain
00039DC4 <AmiBlitz3.ab3@27907>    BNE.w JL_0_4AA8b
00039DC8 <AmiBlitz3.ab3@27908>   MOVE.b #$2,(A0)
00039DCA <AmiBlitz3.ab3@27909> RTS
00039DD0 <AmiBlitz3.ab3@27918> JMP errormsg_reg
00039DDA <AmiBlitz3.ab3@27922>   MOVE.l #$f22d6780,fpucodeglobal
00039DE4 <AmiBlitz3.ab3@27923>   MOVE.l #$f22c6780,fpucodelocal
00039DEA <AmiBlitz3.ab3@27924>   LEA regtable,a0
00039DF4 <AmiBlitz3.ab3@27925>   MOVE.l #7,maxregs
00039DF6 <AmiBlitz3.ab3@27928>   MOVE.l (a0),d0
00039DFA <AmiBlitz3.ab3@27929>   BEQ 'e1
00039DFC <AmiBlitz3.ab3@27930>   CLR.l (a0)
00039E00 <AmiBlitz3.ab3@27931>   MOVE.w 4(a0),d0
00039E0A <AmiBlitz3.ab3@27932>   MOVE.l fpucodeglobal,fpucode
00039E0E <AmiBlitz3.ab3@27933>   TST.w 6(a0)
00039E12 <AmiBlitz3.ab3@27934>   BEQ 'glob
00039E1C <AmiBlitz3.ab3@27935>   MOVE.l fpucodelocal,fpucode
00039E22 <AmiBlitz3.ab3@27938>   MOVE.l fpucode,d1
00039E28 <AmiBlitz3.ab3@27939>   JSR writelong
00039E32 <AmiBlitz3.ab3@27940>   SUB.l #$80,fpucodelocal
00039E3C <AmiBlitz3.ab3@27941>   SUB.l #$80,fpucodeglobal
00039E3E <AmiBlitz3.ab3@27942>   MOVE.w d0,d1
00039E44 <AmiBlitz3.ab3@27943>   JSR writeword
00039E46 <AmiBlitz3.ab3@27944>   ADDQ #8,a0
00039E4A <AmiBlitz3.ab3@27945> BRA 'again
00039E4C <AmiBlitz3.ab3@27948> RTS
00039E52 <AmiBlitz3.ab3@27955> JMP notypeerr
00039E58 <AmiBlitz3.ab3@27958> JMP illtypeerr
00039E62 <AmiBlitz3.ab3@27961>   MOVE.l #$f22d4780,fpucodeglobal
00039E6C <AmiBlitz3.ab3@27962>   MOVE.l #$f22c4780,fpucodelocal
00039E72 <AmiBlitz3.ab3@27963>   LEA regtable,a0
00039E74 <AmiBlitz3.ab3@27964>   TST.l (a0)
00039E78 <AmiBlitz3.ab3@27965>    BNE JUMP_errormsg_reg
00039E7A <AmiBlitz3.ab3@27966>   MOVE.l d7,-(a7)
00039E7C <AmiBlitz3.ab3@27967>   SUBQ.l #1,a5
00039E82 <AmiBlitz3.ab3@27970>   JSR getparameter2
00039E86 <AmiBlitz3.ab3@27971>   BEQ.w 'nopar
00039E8C <AmiBlitz3.ab3@27972>   MOVE.w d0,lastchar
00039E92 <AmiBlitz3.ab3@27973>   JSR findvariable
00039E96 <AmiBlitz3.ab3@27974>   BNE 'islocal
00039EA0 <AmiBlitz3.ab3@27975>   MOVE.l fpucodeglobal,fpucode
00039EAA <AmiBlitz3.ab3@27976>   MOVE.l #3,maxregs
00039EAC <AmiBlitz3.ab3@27977>   MOVEQ #0,d7
00039EB4 <AmiBlitz3.ab3@27980>   CMP.l #newtype_float,$a(a2)                              ;is float type
00039EB8 <AmiBlitz3.ab3@27981>    BEQ 'doit
00039EC0 <AmiBlitz3.ab3@27982>   CMP.l #newtype_double,$a(a2)
00039EC4 <AmiBlitz3.ab3@27983>    BNE JUMP_illtypeerr
00039ECA <AmiBlitz3.ab3@27986>   LEA regtable,a0
00039ECC <AmiBlitz3.ab3@27987>   MOVEQ #0,d0
00039ECE <AmiBlitz3.ab3@27990>   TST.l (a0)
00039ED2 <AmiBlitz3.ab3@27991>    BEQ 'store
00039ED4 <AmiBlitz3.ab3@27992>   ADDQ.l #4,d0
00039ED6 <AmiBlitz3.ab3@27993>   ADDQ.l #8,a0
00039EDC <AmiBlitz3.ab3@27994>   CMP.l #16,d0
00039EE0 <AmiBlitz3.ab3@27995>    BCS 'loop
00039EEA <AmiBlitz3.ab3@27996>   MOVE.l #2,maxregs
00039EF0 <AmiBlitz3.ab3@27997>   CMP.l #20,d0
00039EF4 <AmiBlitz3.ab3@27998>    BCS 'loop
00039EFE <AmiBlitz3.ab3@27999>   MOVE.l #1,maxregs
00039F04 <AmiBlitz3.ab3@28000>   CMP.l #24,d0
00039F08 <AmiBlitz3.ab3@28001>    BCS 'loop
00039F0E <AmiBlitz3.ab3@28002> JMP toovarerr
00039F14 <AmiBlitz3.ab3@28005>   TST.b fpu
00039F18 <AmiBlitz3.ab3@28006>    BEQ 'nofpu
00039F1A <AmiBlitz3.ab3@28007>   MOVE.l a2,(a0)
00039F20 <AmiBlitz3.ab3@28008>   MOVE.w 4(a2),4(a0)
00039F24 <AmiBlitz3.ab3@28009>   MOVE.w d7,6(a0)
00039F2A <AmiBlitz3.ab3@28010>   MOVE.l fpucode,d1
00039F34 <AmiBlitz3.ab3@28011>   SUB.l #$80,fpucodeglobal
00039F3E <AmiBlitz3.ab3@28012>   SUB.l #$80,fpucodelocal
00039F44 <AmiBlitz3.ab3@28013>   JSR writelong
00039F48 <AmiBlitz3.ab3@28014>   MOVE.w 4(a2),d1
00039F4E <AmiBlitz3.ab3@28015>   JSR writeword
00039F54 <AmiBlitz3.ab3@28018>   MOVE.w lastchar,d0
00039F58 <AmiBlitz3.ab3@28019>   CMP.w #":",d0
00039F5C <AmiBlitz3.ab3@28020>    BEQ 'nopar
00039F5E <AmiBlitz3.ab3@28021>   TST.w d0
00039F62 <AmiBlitz3.ab3@28022>    BEQ 'nopar
00039F66 <AmiBlitz3.ab3@28023>   CMP.w #",",d0
00039F6A <AmiBlitz3.ab3@28024>   BNE JUMP_syntaxerr
00039F6E <AmiBlitz3.ab3@28025> BRA 'l2
00039F70 <AmiBlitz3.ab3@28028>    MOVE.l (a7)+,d7
00039F72 <AmiBlitz3.ab3@28029> RTS
00039F74 <AmiBlitz3.ab3@28032>   MOVEQ #1,d7
00039F7C <AmiBlitz3.ab3@28033>   MOVE.b #1,newvariable
00039F82 <AmiBlitz3.ab3@28034>   LEA firstlocal,a2
00039F88 <AmiBlitz3.ab3@28035>   JSR findvariable
00039F8E <AmiBlitz3.ab3@28036>   CLR.b newvariable
00039F94 <AmiBlitz3.ab3@28037>   CMP.l #-1,d0
00039F98 <AmiBlitz3.ab3@28038>   BEQ.w JUMP_notypeerr2
00039FA2 <AmiBlitz3.ab3@28039>   MOVE.l fpucodelocal,fpucode
00039FA6 <AmiBlitz3.ab3@28040> BRA 'go
00039FAA <AmiBlitz3.ab3@28043>   CMP.b #".",d0
00039FAE <AmiBlitz3.ab3@28044>    BNE 'l1
00039FB2 <AmiBlitz3.ab3@28045>   BSR JUMP_get1bytemain
00039FB6 <AmiBlitz3.ab3@28046>   BSR JUMP_get1bytemain
00039FBA <AmiBlitz3.ab3@28049>   ORI .b #$20,d0
00039FBE <AmiBlitz3.ab3@28050>   CMP.b #"d",d0
00039FC2 <AmiBlitz3.ab3@28051>    BNE JUMP_illeaerr
00039FC6 <AmiBlitz3.ab3@28052>   BSR JUMP_get1bytemain
00039FCA <AmiBlitz3.ab3@28053>   SUB.b #$30,d0
00039FCE <AmiBlitz3.ab3@28054>   CMP.b #$7,d0
00039FD2 <AmiBlitz3.ab3@28055>    BGT JUMP_syntaxerr
00039FD6 <AmiBlitz3.ab3@28056>   MOVE.w #$49c0,d1
00039FD8 <AmiBlitz3.ab3@28057>   ADD.b d0,d1
00039FDE <AmiBlitz3.ab3@28058>   JSR writeword
00039FE2 <AmiBlitz3.ab3@28059>   BSR JUMP_get1bytemain
00039FE4 <AmiBlitz3.ab3@28060> RTS
00039FEA <AmiBlitz3.ab3@28064>   LEA lastpath,a0
00039FEE <AmiBlitz3.ab3@28065>   LEA usedpath(PC),A1
00039FF0 <AmiBlitz3.ab3@28068>     MOVE.b (a0)+,(a1)+
00039FF4 <AmiBlitz3.ab3@28069>   BNE 'l1
00039FFA <AmiBlitz3.ab3@28071>   LEA lastpath2,a0
0003A000 <AmiBlitz3.ab3@28072>   LEA lastpath,A1
0003A002 <AmiBlitz3.ab3@28075>     MOVE.b (a0)+,(a1)+
0003A006 <AmiBlitz3.ab3@28076>   BNE 'l2
0003A008 <AmiBlitz3.ab3@28077> RTS
0003A00E <AmiBlitz3.ab3@28081>   TST.b objectcount
0003A012 <AmiBlitz3.ab3@28082>   BEQ 'l2a
0003A018 <AmiBlitz3.ab3@28083> JMP macnesterr
0003A01E <AmiBlitz3.ab3@28086>   LEA devo,a0
0003A024 <AmiBlitz3.ab3@28087>   ADDQ.b #1,objectcount
0003A028 <AmiBlitz3.ab3@28088>   MOVEM.l a1/d2,-(a7)
0003A02E <AmiBlitz3.ab3@28089>   LEA ptr_parameterstore,a1
0003A030 <AmiBlitz3.ab3@28092>     MOVE.b (a0)+,(a1)+
0003A034 <AmiBlitz3.ab3@28093>   BNE 'l1
0003A036 <AmiBlitz3.ab3@28095>   MOVEQ #13,d2
0003A03C <AmiBlitz3.ab3@28096>   JSR findlabel2
0003A040 <AmiBlitz3.ab3@28097>   BNE 'd
0003A044 <AmiBlitz3.ab3@28098>   TST.l 8(a2)
0003A048 <AmiBlitz3.ab3@28099>   BEQ 'd
0003A04E <AmiBlitz3.ab3@28100>   SUBQ.b #1,objectcount
0003A052 <AmiBlitz3.ab3@28101>   MOVEM.l (a7)+,a1/d2
0003A058 <AmiBlitz3.ab3@28102>   JSR skiprest
0003A060 <AmiBlitz3.ab3@28103>   MOVE.b #1,developobject
0003A062 <AmiBlitz3.ab3@28104> RTS
0003A066 <AmiBlitz3.ab3@28107>   MOVEM.l (a7)+,a1/d2
0003A06E <AmiBlitz3.ab3@28108>   MOVE.b #1,resdisable
0003A074 <AmiBlitz3.ab3@28111>   CLR.b developobject
0003A07A <AmiBlitz3.ab3@28112> JMP do_Macro
0003A080 <AmiBlitz3.ab3@28116> JMP illeaerr
0003A086 <AmiBlitz3.ab3@28120>   CLR.b typecheck
0003A08C <AmiBlitz3.ab3@28121>   CLR.b declare
0003A092 <AmiBlitz3.ab3@28122>   CLR.b declare2
0003A096 <AmiBlitz3.ab3@28123>   SUB.b #$30,d0
0003A09A <AmiBlitz3.ab3@28124>   BTST #0,d0
0003A09E <AmiBlitz3.ab3@28125>   BEQ 'l1
0003A0A6 <AmiBlitz3.ab3@28126>   MOVE.b #1,declare
0003A0AA <AmiBlitz3.ab3@28129>   BTST #1,d0
0003A0AE <AmiBlitz3.ab3@28130>   BEQ 'l2
0003A0B6 <AmiBlitz3.ab3@28131>   MOVE.b #1,declare2
0003A0BA <AmiBlitz3.ab3@28134>   BTST #2,d0
0003A0BE <AmiBlitz3.ab3@28135>   BEQ 'l3
0003A0C6 <AmiBlitz3.ab3@28136>   MOVE.b #1,typecheck
0003A0CA <AmiBlitz3.ab3@28138>   BSR.w JUMP_get1bytemain
0003A0CC <AmiBlitz3.ab3@28139> RTS
0003A0D2 <AmiBlitz3.ab3@28142> JMP get1bytemain
0003A0FC <AmiBlitz3.ab3@28146>   !basic
0003A11C <AmiBlitz3.ab3@28148>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A13A <AmiBlitz3.ab3@28149>   !asm
0003A13C <AmiBlitz3.ab3@28150> Return
0003A13E <AmiBlitz3.ab3@28155>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A140 <AmiBlitz3.ab3@28156>   ADDQ #1,a5
0003A142 <AmiBlitz3.ab3@28157>   MOVE.l a5,-(a7)
0003A16C <AmiBlitz3.ab3@28158>   !basic
0003A172 <AmiBlitz3.ab3@28159>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A17C <AmiBlitz3.ab3@28160>   If _myD0
0003A1BC <AmiBlitz3.ab3@28161>     newconst$ = UCase$(Peek.s(_myD0))
0003A1C2 <AmiBlitz3.ab3@28162>   Else
0003A1FC <AmiBlitz3.ab3@28163>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A224 <AmiBlitz3.ab3@28164>     nwconst$="xxx"
0003A24C <AmiBlitz3.ab3@28166>   condata$ =""
0003A25C <AmiBlitz3.ab3@28167>   Poke.b ?skip_bytes,0
0003A2B8 <AmiBlitz3.ab3@28168>   If Left$(newconst$,2) = "__"
0003A312 <AmiBlitz3.ab3@28169>     Select Mid$(newconst$,3,4)
0003A336 <AmiBlitz3.ab3@28171>      Case "DATE"
0003A390 <AmiBlitz3.ab3@28172>       Select Mid$(newconst$,3,6)
0003A3CE <AmiBlitz3.ab3@28173>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A412 <AmiBlitz3.ab3@28174>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A420 <AmiBlitz3.ab3@28175>       End Select
0003A42E <AmiBlitz3.ab3@28176>       i.l=SystemDate
0003A454 <AmiBlitz3.ab3@28177>       condata$ = Date$ (i)
0003A4D2 <AmiBlitz3.ab3@28178>       condata$ = Replace$(condata$,"/",".")
0003A4FC <AmiBlitz3.ab3@28180>      Case "VER_"
0003A50C <AmiBlitz3.ab3@28183>       actual_version.l = Peek.l(?versioninformation)
0003A51C <AmiBlitz3.ab3@28184>       actual_build.l   = Peek.l(?number_of_builds)
0003A540 <AmiBlitz3.ab3@28186>       Format ""
0003A59A <AmiBlitz3.ab3@28187>       Select Mid$(newconst$,3,9)
0003A5BE <AmiBlitz3.ab3@28189>        Case "VER_MAJOR"
0003A5FA <AmiBlitz3.ab3@28190>         condata$ = Str$(actual_version LSR 24)
0003A624 <AmiBlitz3.ab3@28192>        Case "VER_MINOR"
0003A668 <AmiBlitz3.ab3@28193>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003A692 <AmiBlitz3.ab3@28195>        Case "VER_PATCH"
0003A6D6 <AmiBlitz3.ab3@28196>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003A700 <AmiBlitz3.ab3@28198>        Case "VER_BUILD"
0003A724 <AmiBlitz3.ab3@28199>         Format ""
0003A758 <AmiBlitz3.ab3@28200>         condata$ = Str$(actual_build)
0003A75E <AmiBlitz3.ab3@28202>        Default
0003A786 <AmiBlitz3.ab3@28203>         condata$ = "{unknown compiler constant}"
0003A794 <AmiBlitz3.ab3@28205>       End Select
0003A7B8 <AmiBlitz3.ab3@28206>       Format ""
0003A7C8 <AmiBlitz3.ab3@28207>       Poke.b ?skip_bytes,11
0003A7F2 <AmiBlitz3.ab3@28209>      Case "THIS"
0003A84C <AmiBlitz3.ab3@28210>       Select Mid$(newconst$,3,9)
0003A870 <AmiBlitz3.ab3@28212>        Case "THIS_FUNC"
0003A880 <AmiBlitz3.ab3@28213>         Poke.b ?skip_bytes,15
0003A8A0 <AmiBlitz3.ab3@28214>         If Peek.l(?currentfunction)<>0
0003A8EC <AmiBlitz3.ab3@28215>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003A8F2 <AmiBlitz3.ab3@28216>         Else
0003A91A <AmiBlitz3.ab3@28217>           condata$ = "GLOBAL"
0003A944 <AmiBlitz3.ab3@28220>        Case "THIS_INCL"
0003A954 <AmiBlitz3.ab3@28221>         Poke.b ?skip_bytes,14
0003A974 <AmiBlitz3.ab3@28222>         If Peek.l(?includetemp2)<>0
0003A9C2 <AmiBlitz3.ab3@28223>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003A9EC <AmiBlitz3.ab3@28226>        Case "THIS_POIN"
0003A9FC <AmiBlitz3.ab3@28227>         Poke.b ?skip_bytes,14
0003AA1C <AmiBlitz3.ab3@28228>         If Peek.l(?currentfunction)<>0
0003AA4A <AmiBlitz3.ab3@28229>           condata$ = Hex$(Peek.l(?currentfunction))
0003AA58 <AmiBlitz3.ab3@28232>       End Select
0003AA82 <AmiBlitz3.ab3@28234>      Case "CODE"
0003AA92 <AmiBlitz3.ab3@28235>       Poke.b ?skip_bytes,10
0003AAF4 <AmiBlitz3.ab3@28236>       If Mid$(newconst$,3,8) = "CODELINE"
0003AB30 <AmiBlitz3.ab3@28237>         condata$ = Str$(Peek.l(?globallinecount))
0003AB3E <AmiBlitz3.ab3@28240>     End Select
0003AB44 <AmiBlitz3.ab3@28242>   Else
0003AB98 <AmiBlitz3.ab3@28243>     Select Left$(newconst$,1)
0003ABBC <AmiBlitz3.ab3@28245>      Case "R"
0003ABCC <AmiBlitz3.ab3@28246>       Poke.b ?skip_bytes,3
0003AC44 <AmiBlitz3.ab3@28247>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003ACC4 <AmiBlitz3.ab3@28248>         condata$ = condata$ + Mid$(newconst$,4,1)
0003ACD4 <AmiBlitz3.ab3@28249>       Next
0003ACFE <AmiBlitz3.ab3@28251>      Case "N"
0003AD0E <AmiBlitz3.ab3@28252>       Poke.b ?skip_bytes,1
0003AD32 <AmiBlitz3.ab3@28253>       condata$ = Chr$(10)
0003AD38 <AmiBlitz3.ab3@28255>      Default
0003AD4A <AmiBlitz3.ab3@28256>       char1.b = Peek.b(&newconst$)
0003AD62 <AmiBlitz3.ab3@28257>       char2.b = Peek.b(&newconst$+1)
0003AD6E <AmiBlitz3.ab3@28258>       nibble1.l = -1
0003AD7A <AmiBlitz3.ab3@28259>       nibble2.l = -1
0003ADB8 <AmiBlitz3.ab3@28261>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003ADF6 <AmiBlitz3.ab3@28262>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003AE3A <AmiBlitz3.ab3@28264>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003AE7E <AmiBlitz3.ab3@28265>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003AEC2 <AmiBlitz3.ab3@28267>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003AF06 <AmiBlitz3.ab3@28268>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003AF2C <AmiBlitz3.ab3@28270>       If nibble1>=0 AND nibble2>=0
0003AF42 <AmiBlitz3.ab3@28271>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003AF66 <AmiBlitz3.ab3@28272>         condata$ = Chr$(newchar)
0003AF76 <AmiBlitz3.ab3@28273>         Poke.b ?skip_bytes,2
0003AF84 <AmiBlitz3.ab3@28276>     End Select
0003AFE4 <AmiBlitz3.ab3@28278>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B10A <AmiBlitz3.ab3@28279>     !cout{"detected unknown const: " + newconst$}
0003B13E <AmiBlitz3.ab3@28280>     condata$ = newconst$
0003B154 <AmiBlitz3.ab3@28283>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B156 <AmiBlitz3.ab3@28284>   MOVE.l d0,d2
0003B158 <AmiBlitz3.ab3@28285>   MOVE.l d2,-(a7)
0003B15E <AmiBlitz3.ab3@28287>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B160 <AmiBlitz3.ab3@28288>   MOVE.l d0,a0
0003B162 <AmiBlitz3.ab3@28291>     MOVE.b (a0)+,d1
0003B168 <AmiBlitz3.ab3@28292>     JSR pokedata1b
0003B16C <AmiBlitz3.ab3@28293>  DBF d2,'l1
0003B18A <AmiBlitz3.ab3@28295>   !asm
0003B18C <AmiBlitz3.ab3@28296>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B18E <AmiBlitz3.ab3@28297>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B190 <AmiBlitz3.ab3@28298>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B196 <AmiBlitz3.ab3@28299>   ADD.l #1,d2
0003B19C <AmiBlitz3.ab3@28301>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B1A2 <AmiBlitz3.ab3@28302>   MOVE.b skip_bytes,D0
0003B1A4 <AmiBlitz3.ab3@28303>   ADD.l D0,a5
0003B1A6 <AmiBlitz3.ab3@28304> RTS
0003B1AA <AmiBlitz3.ab3@28379> MOVEM.l a3/d1,-(a7)
0003B1B0 <AmiBlitz3.ab3@28381> CLR.b a4a5store
0003B1B2 <AmiBlitz3.ab3@28382> 'continue: MOVE.b (a3)+,d1
0003B1B6 <AmiBlitz3.ab3@28383> CMP.b #$15,d1
0003B1BA <AmiBlitz3.ab3@28384> BEQ 'find
0003B1BE <AmiBlitz3.ab3@28385> CMP.b #$14,d1
0003B1C2 <AmiBlitz3.ab3@28386> BEQ 'find
0003B1C6 <AmiBlitz3.ab3@28387> CMP.b #$ff,d1
0003B1CA <AmiBlitz3.ab3@28388> BNE 'continue
0003B1CE <AmiBlitz3.ab3@28389> BRA 'notfind
0003B1D4 <AmiBlitz3.ab3@28391> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B1DA <AmiBlitz3.ab3@28392> JSR writelong
0003B1E2 <AmiBlitz3.ab3@28393> MOVE.b #1,a4a5store
0003B1E6 <AmiBlitz3.ab3@28394> 'notfind: MOVEM.l (a7)+,a3/d1
0003B1E8 <AmiBlitz3.ab3@28395> RTS
0003B1EE <AmiBlitz3.ab3@28398> TST.b a4a5store
0003B1F2 <AmiBlitz3.ab3@28399> BEQ 'no
0003B1F8 <AmiBlitz3.ab3@28400> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B1FE <AmiBlitz3.ab3@28401> JSR writelong
0003B204 <AmiBlitz3.ab3@28402> CLR.b a4a5store
0003B206 <AmiBlitz3.ab3@28403> 'no RTS
0003B206 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B20A <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B20C <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B214 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B220 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B224 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B226 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B22A <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B273 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B274 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B278 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B27A <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B27E <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B29A <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B29E <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B2A0 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B2A4 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B301 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B302 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B306 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B308 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B30D <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B31D <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B31E <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B322 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B324 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B32A <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B33A <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B33E <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B340 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B347 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B348 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B34C <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B34E <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B358 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B38B <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B38C <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B390 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B392 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B39B <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B3D6 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B3DA <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B3DC <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B3E6 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B3E7 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B3E8 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B3EC <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B3EE <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B3F1 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B408 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B40C <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B40E <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B414 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B421 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B422 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B426 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B428 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B42E <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B43A <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B43E <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B440 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B447 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B454 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B458 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B45A <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B45F <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B46C <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B470 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B472 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B47A <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B47B <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B47C <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B480 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B482 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B48A <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B48B <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B48C <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B490 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B492 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B49B <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B4A6 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B4AA <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B4AC <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B4B4 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003B4BF <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003B4C0 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003B4C4 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003B4C6 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003B4CD <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003B52F <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003B530 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003B534 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003B536 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003B53D <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003B54C <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003B550 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003B552 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003B556 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003B58C <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003B590 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003B592 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003B597 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003B5A6 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003B5AA <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003B5AC <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003B5AF <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003B5D0 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003B5D4 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003B5D6 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003B5DB <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003B5E7 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003B5E8 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003B5EC <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003B5EE <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003B5F3 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003B60A <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003B60E <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003B610 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003B615 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003B624 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003B628 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003B62A <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003B62F <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003B64E <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003B652 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003B654 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003B659 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003B678 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003B67C <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003B67E <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003B684 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003B685 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003B686 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003B68A <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003B68C <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003B691 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003B692 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003B696 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003B698 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003B69D <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003B6AA <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003B6AE <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003B6B0 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003B6B5 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003B6C4 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003B6C8 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003B6CA <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003B6CF <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003B6DE <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003B6E2 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003B6E4 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003B6EA <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003B707 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003B708 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003B70C <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003B70E <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003B714 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003B731 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003B732 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003B736 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003B738 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003B73B <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003B752 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003B756 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003B758 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003B75B <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003B76A <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003B76E <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003B770 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003B775 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003B776 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003B77A <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003B77C <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003B780 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003B795 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003B796 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003B79A <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003B79C <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003B7A3 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003B7BC <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003B7C0 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003B7C2 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003B7C9 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003B7D4 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003B7D8 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003B7DA <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003B7DF <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003B7F6 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003B7FA <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003B7FC <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003B800 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003B817 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003B818 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003B81C <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003B81E <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003B823 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003B824 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003B828 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003B82A <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003B82F <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003B833 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003B834 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003B838 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003B83A <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003B841 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003B859 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003B85A <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003B85E <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003B860 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003B867 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003B86C <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003B870 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003B879 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003B87E <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003B882 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003B884 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003B88B <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003B8A6 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003B8AA <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003B8AC <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003B8B4 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003B8CD <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003B8CE <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003B8D2 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003B8D4 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003B8DA <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003B8DB <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003B8DC <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003B8E0 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003B8E2 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003B8E8 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003B8E9 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003B8EA <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003B8EE <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003B8F0 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003B8F7 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003B8F8 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003B8FC <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003B8FE <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003B904 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003B90D <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003B90E <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003B912 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003B914 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003B91C <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003B929 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003B92A <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003B92E <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003B930 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003B938 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003B945 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003B946 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003B94A <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003B961 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003B962 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003B966 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003B968 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003B96D <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003B972 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003B974 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003B979 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003B97A <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003B97C <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003B980 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003B982 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003B984 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003B988 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003B98A <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003B98E <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003B990 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003B994 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003B995 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003B996 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003B998 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003B99C <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003B99E <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003B9A0 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003B9A4 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003B9A6 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003B9AA <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003B9AC <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003B9B1 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003B9B2 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003B9B4 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003B9B8 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003B9BA <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003B9C0 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003B9C6 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003B9CD <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003B9CE <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003B9D4 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003B9D6 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003B9DC <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003B9DE <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003B9E2 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003B9E4 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003B9E9 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003B9EA <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003B9EC <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003B9F0 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003B9F2 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003B9FE <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BA05 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BA0C <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BA10 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BA16 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BA1A <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BA1C <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BA20 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BA21 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BA22 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BA28 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BA2C <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BA30 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BA32 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BA36 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BA38 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BA3D <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BA3E <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BA40 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BA44 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BA46 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BA48 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BA4C <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BA52 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BA54 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BA58 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BA59 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BA5A <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BA60 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BA62 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BA64 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BA68 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BA6A <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BA6E <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BA75 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003BA84 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003BA8A <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003BA90 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003BA91 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003BA92 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003BAA0 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003BAA6 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003BAA8 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003BAAC <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003BAAD <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003BAAE <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003BAB4 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003BAB6 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003BABC <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003BAC2 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003BAC4 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003BAC8 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003BAC9 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003BACA <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003BAD0 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003BAD2 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003BADE <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003BAE4 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003BAE5 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003BAE6 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003BAE8 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003BAEC <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003BAEE <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003BAF0 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003BAF4 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003BAF6 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003BAFA <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003BB00 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003BB01 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003BB02 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003BB04 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003BB08 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003BB0A <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003BB0C <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003BB10 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003BB16 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003BB1D <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003BB1E <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003BB24 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003BB26 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003BB28 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003BB2C <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003BB32 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003BB39 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003BB3A <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003BB40 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003BB44 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003BB48 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003BB4A <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003BB4E <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003BB54 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003BB55 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003BB56 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003BB5C <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003BB60 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003BB64 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003BB66 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003BB6A <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003BB70 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003BB71 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003BB72 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003BB7A <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003BB7C <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003BB80 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003BB82 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003BB86 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003BB88 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003BB8C <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003BB8D <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003BB8E <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003BB90 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003BB94 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003BB98 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003BB9C <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003BBA2 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003BBA8 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003BBA9 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003BBAA <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003BBAC <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003BBB0 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003BBB2 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003BBB4 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003BBB8 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003BBBA <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003BBBE <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003BBC4 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003BBC5 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003BBC8 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003BBD0 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003BBE1 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003BBE4 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003BBEA <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003BBEC <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003BBF0 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003BBF2 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003BBF6 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003BBFC <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003BBFD <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003BBFE <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003BC06 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003BC0E <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003BC12 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003BC19 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003BC1A <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003BC28 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003BC2A <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003BC2E <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003BC30 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003BC35 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003BC36 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003BC3C <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003BC3E <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003BC40 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003BC44 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003BC46 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003BC4A <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003BC51 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003BC58 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003BC5A <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003BC60 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003BC62 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003BC66 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003BC6D <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003BC6E <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003BC70 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003BC74 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003BC7C <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003BC82 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003BC88 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003BC89 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003BC8A <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003BC8C <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003BC90 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003BC92 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003BC94 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003BC98 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003BC9E <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003BCA4 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003BCA5 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003BCA8 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003BCAC <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003BCB0 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003BCBC <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003BCC1 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003BCC2 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003BCC4 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003BCCC <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003BCD2 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003BCD6 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003BCDC <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003BCDD <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003BCE0 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003BCE8 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003BCEC <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003BCEE <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003BCF2 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003BCF4 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003BCF9 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003BCFA <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003BCFC <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003BD04 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003BD0A <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003BD0E <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003BD10 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003BD15 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003BD16 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003BD20 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003BD26 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003BD2A <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003BD2C <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003BD31 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003BD34 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003BD38 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003BD3C <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003BD46 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003BD48 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003BD4D <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003BD4E <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003BD50 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003BD54 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003BD58 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003BD5E <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003BD62 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003BD69 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003BD6A <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003BD70 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003BD72 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003BD78 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003BD7E <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003BD85 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003BD8C <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003BD8E <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003BD90 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003BD94 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003BD96 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003BD9A <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003BD9C <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003BDA1 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003BDA2 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003BDAA <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003BDB6 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003BDBD <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003BDC8 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003BDCC <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003BDD2 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003BDD4 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003BDD9 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003BDDC <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003BDE0 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003BDE4 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003BDEA <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003BDF0 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003BDF5 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003BDF8 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003BDFE <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003BE00 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003BE06 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003BE11 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003BE12 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003BE14 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003BE18 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003BE1A <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003BE1C <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003BE26 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003BE2D <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003BE34 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003BE36 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003BE3E <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003BE42 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003BE49 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003BE50 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003BE52 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003BE54 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003BE5A <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003BE60 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003BE65 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003BE66 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003BE68 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003BE74 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003BE7A <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003BE7C <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003BE81 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003BE84 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003BE98 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003BE9D <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003BE9E <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003BEA0 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003BEA6 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003BEB9 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003BEBC <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003BED5 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003BEF0 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003BEF1 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003BF06 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003BF0D <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003BF14 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003BF29 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003BF45 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003BF5A <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003BF61 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003BF7D <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003BF84 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003BF8C <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003BF92 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003BF99 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003BFAE <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003BFB5 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003BFD1 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003BFF1 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C002 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C00D <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C029 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C045 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C061 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C072 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C07D <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C086 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C099 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C0B5 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C0D1 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C0DA <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C0EF <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C0F6 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C10D <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C12B <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C12E <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C147 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C163 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C166 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C17F <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C19B <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C1B7 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C1D3 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C1EF <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C209 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C225 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C241 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C25F <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C27B <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C297 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C2B3 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C2CF <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C2EB <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C307 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C323 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C33F <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C35B <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C377 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C393 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C3AF <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C3CB <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C3E7 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C403 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C41F <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C43B <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C457 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C473 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C48F <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C4AB <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003C4C7 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003C4E1 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003C4FB <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003C517 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003C533 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003C54F <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003C56B <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003C587 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003C5A3 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003C5BF <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003C5DB <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003C5F7 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003C615 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003C631 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003C64D <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003C66B <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003C901 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003C90F <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003C91D <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003C92D <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003C939 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003C94D <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003C959 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003C963 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003C971 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003C98B <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003C999 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003C9B1 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003C9DF <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003C9ED <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003C9F8 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CA05 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CA11 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CA1F <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CA31 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CA43 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CA48 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CA5F <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CA64 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CA69 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003CAA4 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003CAAA <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003CAAF <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003CABF <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003CAC6 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003CACE <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003CAE2 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003CAED <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003CAF5 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003CB0D <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003CB1D <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003CB22 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003CB2B <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003CB30 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003CB39 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003CB3E <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003CB47 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003CB55 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003CB5A <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003CB63 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003CB6F <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003CB85 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003CB97 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003CBA9 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003CBE9 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003CC2F <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003CC36 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003CC5D <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003CC5E <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003CC6B <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003CCA1 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003CCB1 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003CCE6 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003CD33 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003CD34 <AmiBlitz3.ab3@28407> INCLUDE "internal_commands.ab3"
0003CD38 <AmiBlitz3.ab3@28412>            Dc.l cif_lt                                     ;ciflt
0003CD3C <AmiBlitz3.ab3@28413>            Dc.l cif_eq                                     ;cifeq
0003CD40 <AmiBlitz3.ab3@28414>            Dc.l cif_gt                                     ;cifgt
0003CD44 <AmiBlitz3.ab3@28415>            Ds.l 1                                          ;0
0003CD48 <AmiBlitz3.ab3@28416>            Dc.l cif_le                                     ;cifle
0003CD4C <AmiBlitz3.ab3@28417>            Dc.l cif_ne                                     ;cifne
0003CD50 <AmiBlitz3.ab3@28418>            Dc.l cif_le                                     ;cifge
0003CD54 <AmiBlitz3.ab3@28419>            Ds.l 1                                          ;0
0003CD58 <AmiBlitz3.ab3@28420>            Dc.l cif_ge                                     ;cifge
0003CD5C <AmiBlitz3.ab3@28421>            Dc.l cif_ne                                     ;cifne
0003CD60 <AmiBlitz3.ab3@28422>            Dc.l cif_ge                                     ;cifge
0003CD64 <AmiBlitz3.ab3@28423>            Ds.l 1                                          ;0
0003CD68 <AmiBlitz3.ab3@28426>            Dc.l do_newtype                                 ;donewtype
0003CD6C <AmiBlitz3.ab3@28427>            Dc.l do_end                                     ;doend
0003CD70 <AmiBlitz3.ab3@28428>            Dc.l do_let                                     ;dolet
0003CD74 <AmiBlitz3.ab3@28429>            Dc.l do_dim                                     ;dodim
0003CD78 <AmiBlitz3.ab3@28430>            Dc.l do_goto                                    ;dogoto
0003CD7C <AmiBlitz3.ab3@28431>            Dc.l do_gosub                                   ;dogosub
0003CD80 <AmiBlitz3.ab3@28432>            Dc.l do_return                                  ;doreturn
0003CD84 <AmiBlitz3.ab3@28433>            Dc.l do_statement                               ;dostatement
0003CD88 <AmiBlitz3.ab3@28434>            Dc.l do_function                                ;dofunc
0003CD8C <AmiBlitz3.ab3@28435>            Dc.l do_mousewait                               ;domwait
0003CD90 <AmiBlitz3.ab3@28436>            Dc.l do_if                                      ;doif
0003CD94 <AmiBlitz3.ab3@28437>            Dc.l do_while                                   ;dowhile
0003CD98 <AmiBlitz3.ab3@28438>            Dc.l do_Macro                                   ;domacro
0003CD9C <AmiBlitz3.ab3@28439>            Dc.l do_select                                  ;doselect
0003CDA0 <AmiBlitz3.ab3@28440>            Dc.l do_case                                    ;docase
0003CDA4 <AmiBlitz3.ab3@28441>            Dc.l do_default                                 ;dodefault
0003CDA8 <AmiBlitz3.ab3@28442>            Dc.l do_AsmExit                                 ;doasmexit
0003CDAC <AmiBlitz3.ab3@28443>            Dc.l do_xinclude                                ;doxinclude
0003CDB0 <AmiBlitz3.ab3@28444>            Dc.l do_INCLUDE                                 ;doinclude
0003CDB4 <AmiBlitz3.ab3@28445>            Dc.l do_syntax                                  ;syntaxerr
0003CDB8 <AmiBlitz3.ab3@28446>            Dc.l do_shared                                  ;doshared
0003CDBC <AmiBlitz3.ab3@28447>            Dc.l do_for                                     ;dofor
0003CDC0 <AmiBlitz3.ab3@28448>            Dc.l do_next                                    ;donext
0003CDC4 <AmiBlitz3.ab3@28449>            Dc.l syntaxerr                                  ; To
0003CDC8 <AmiBlitz3.ab3@28450>            Dc.l syntaxerr                                  ; Step
0003CDCC <AmiBlitz3.ab3@28451>            Dc.l do_data                                    ;dodata
0003CDD0 <AmiBlitz3.ab3@28452>            Dc.l do_read                                    ;doread
0003CDD4 <AmiBlitz3.ab3@28456>            Dc.l syntaxerr                                  ; CNIF
0003CDD8 <AmiBlitz3.ab3@28457>            Dc.l syntaxerr                                  ; CSIF
0003CDDC <AmiBlitz3.ab3@28458>            Dc.l syntaxerr                                  ; CELSE
0003CDE0 <AmiBlitz3.ab3@28459>            Dc.l syntaxerr                                  ; CEND
0003CDE4 <AmiBlitz3.ab3@28460>            Dc.l do_cerr                                    ;docerr
0003CDE8 <AmiBlitz3.ab3@28461>            Dc.l do_then                                    ;dothen
0003CDEC <AmiBlitz3.ab3@28462>            Dc.l do_else                                    ;doelse
0003CDF0 <AmiBlitz3.ab3@28463>            Dc.l do_even4                                   ;doeven4
0003CDF4 <AmiBlitz3.ab3@28464>            Dc.l do_even8                                   ;doeven8
0003CDF8 <AmiBlitz3.ab3@28466>            Dc.l do_dc                                      ;dodc
0003CDFC <AmiBlitz3.ab3@28467>            Dc.l do_ds                                      ;dods
0003CE00 <AmiBlitz3.ab3@28468>            Dc.l do_even                                    ;doeven
0003CE04 <AmiBlitz3.ab3@28469>            Dc.l do_dcb                                     ;dodcb
0003CE08 <AmiBlitz3.ab3@28470>            Dc.l do_setreg                                  ;dosetreg
0003CE0C <AmiBlitz3.ab3@28471>            Dc.l do_IncBin                                  ;doincbin
0003CE10 <AmiBlitz3.ab3@28472>            Dc.l do_free                                    ;dofree
0003CE14 <AmiBlitz3.ab3@28473>            Dc.l do_use                                     ;douse
0003CE18 <AmiBlitz3.ab3@28474>            Dc.l do_Stop                                    ;dostop
0003CE1C <AmiBlitz3.ab3@28475>            Dc.l do_Cont                                    ;docont
0003CE20 <AmiBlitz3.ab3@28476>            Dc.l syntaxerr                                  ;syntaxeer
0003CE24 <AmiBlitz3.ab3@28477>            Dc.l do_SetInt                                  ;dosetint
0003CE28 <AmiBlitz3.ab3@28478>            Dc.l do_ClrInt                                  ;doclrint
0003CE2C <AmiBlitz3.ab3@28479>            Dc.l do_MaxLen                                  ;domaxlen
0003CE30 <AmiBlitz3.ab3@28480>            Dc.l do_DEFTYPE                                 ;dodeftype
0003CE34 <AmiBlitz3.ab3@28481>            Dc.l do_BLITZ                                   ;doblitz
0003CE38 <AmiBlitz3.ab3@28482>            Dc.l do_AMIGA                                   ;doamiga
0003CE3C <AmiBlitz3.ab3@28483>            Dc.l do_QAMIGA                                  ;doqamiga
0003CE40 <AmiBlitz3.ab3@28484>            Dc.l do_VWait                                   ;dovwait
0003CE44 <AmiBlitz3.ab3@28485>            Dc.l do_LibJsr                                  ;dolibjsr
0003CE48 <AmiBlitz3.ab3@28486>            Dc.l do_TokeJsr                                 ;dotokejsr
0003CE4C <AmiBlitz3.ab3@28487>            Dc.l do_BLibJsr                                 ;doblibjsr
0003CE50 <AmiBlitz3.ab3@28488>            Dc.l _extb                                      ;syntaxerr
0003CE54 <AmiBlitz3.ab3@28492>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003CE58 <AmiBlitz3.ab3@28493>            Dc.l do_SetErr                                  ;doseterr
0003CE5C <AmiBlitz3.ab3@28494>            Dc.l do_ClrErr                                  ;doclrerr
0003CE60 <AmiBlitz3.ab3@28495>            Dc.l syntaxerr                                  ;syntaxerr
0003CE64 <AmiBlitz3.ab3@28496>            Dc.l do_ErrFail                                 ;doerrfail
0003CE68 <AmiBlitz3.ab3@28497>            Dc.l syntaxerr
0003CE6C <AmiBlitz3.ab3@28498>            Dc.l syntaxerr                                  ;mod
0003CE70 <AmiBlitz3.ab3@28499>            Dc.l syntaxerr                                  ;Pi
0003CE74 <AmiBlitz3.ab3@28500>            Dc.l do_Repeat                                  ;dorepeat
0003CE78 <AmiBlitz3.ab3@28501>            Dc.l do_Until                                   ;dountil
0003CE7C <AmiBlitz3.ab3@28502>            Dc.l do_PutReg                                  ;doputreg
0003CE80 <AmiBlitz3.ab3@28503>            Dc.l do_Pop                                     ;dopop
0003CE84 <AmiBlitz3.ab3@28504>            Dc.l do_INCDIR                                  ;doincdir
0003CE88 <AmiBlitz3.ab3@28505>            Dc.l mydo_Endif2                                ;mydoendif2
0003CE8C <AmiBlitz3.ab3@28506>            Dc.l do_Wend                                    ;dowend
0003CE90 <AmiBlitz3.ab3@28507>            Dc.l do_SysJsr                                  ;dosysjsr
0003CE94 <AmiBlitz3.ab3@28508>            Dc.l do_WBStartup                               ;dowbstartup
0003CE98 <AmiBlitz3.ab3@28509>            Dc.l syntaxerr
0003CE9C <AmiBlitz3.ab3@28510>            Dc.l do_Ongo                                    ;doongo
0003CEA0 <AmiBlitz3.ab3@28511>            Dc.l syntaxerr
0003CEA4 <AmiBlitz3.ab3@28512>            Dc.l do_Forever                                 ;doforever
0003CEA8 <AmiBlitz3.ab3@28513>            Dc.l do_Restore                                 ;dorestore
0003CEAC <AmiBlitz3.ab3@28514>            Dc.l do_Exchange                                ;doexchange
0003CEB0 <AmiBlitz3.ab3@28515>            Dc.l do_USEPATH                                 ;dousepath
0003CEB4 <AmiBlitz3.ab3@28516>            Dc.l do_CloseEd                                 ;doclosed
0003CEB8 <AmiBlitz3.ab3@28517>            Dc.l do_NoCli                                   ;donocli
0003CEBC <AmiBlitz3.ab3@28518>            Dc.l syntaxerr                                  ;syntaxerr
0003CEC0 <AmiBlitz3.ab3@28519>            Dc.l syntaxerr                                  ;syntaxerr
0003CEC4 <AmiBlitz3.ab3@28520>            Dc.l syntaxerr                                  ;syntaxerr
0003CEC8 <AmiBlitz3.ab3@28521>            Dc.l syntaxerr                                  ;syntaxerr
0003CECC <AmiBlitz3.ab3@28522>            Dc.l syntaxerr                                  ;syntaxerr
0003CED0 <AmiBlitz3.ab3@28523>            Dc.l do_runerrson                               ;dorunerrson
0003CED4 <AmiBlitz3.ab3@28524>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003CED8 <AmiBlitz3.ab3@28525>            Dc.l do_uselastpath
0003CEDC <AmiBlitz3.ab3@28526>            Dc.l do_regload
0003CEE0 <AmiBlitz3.ab3@28527>            Dc.l do_regsave
0003CEE4 <AmiBlitz3.ab3@28528>            Dc.l do_Object
0003CEE8 <AmiBlitz3.ab3@28529>            Dc.l do_usepath2
0003CEEC <AmiBlitz3.ab3@28530>            Dc.l do_LastRunErrsMode
0003CEF0 <AmiBlitz3.ab3@28553> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003CEF4 <AmiBlitz3.ab3@28554>            Dc.l menu_run
0003CEF8 <AmiBlitz3.ab3@28555>            Dc.l menu_createexecutable
0003CEFC <AmiBlitz3.ab3@28556>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003CF00 <AmiBlitz3.ab3@28557>            Dc.l menu_createresidentfile
0003CF04 <AmiBlitz3.ab3@28558> 
0003CF08 <AmiBlitz3.ab3@28559> 
0003CF0C <AmiBlitz3.ab3@28560>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003CF10 <AmiBlitz3.ab3@28561>            Dc.l menu_reloadlibs
0003CF14 <AmiBlitz3.ab3@28562>            Dc.l menu_loaddebugmodule
0003CF18 <AmiBlitz3.ab3@28563>            Dc.l menu_dummyfunc
0003CF1C <AmiBlitz3.ab3@28564>            Dc.l menu_newcreate
0003CF20 <AmiBlitz3.ab3@28565>            Dc.l menu_dummyfunc
0003CF24 <AmiBlitz3.ab3@28566>            Dc.l menu_toggledebug
0003CF28 <AmiBlitz3.ab3@28567>            Dc.l menu_dummyfunc
0003CF2C <AmiBlitz3.ab3@28568>            Dc.l menu_dummyfunc
0003CF56 <AmiBlitz3.ab3@28573>   !basic
0003CFB8 <AmiBlitz3.ab3@28574>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003CFD6 <AmiBlitz3.ab3@28575>   !asm
0003CFD8 <AmiBlitz3.ab3@28576> RTS
0003CFD9 <AmiBlitz3.ab3@28582> set_autorun:               Dc.b $00
0003CFDE <AmiBlitz3.ab3@28583> autorun:                   Dc.b $80,$01,$01,$00,$01
0003CFDF <AmiBlitz3.ab3@28585> set_interruptcheck:        Dc.b $00
0003CFE4 <AmiBlitz3.ab3@28586> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003CFE5 <AmiBlitz3.ab3@28588> set_assemblercheck:        Ds.b 1
0003CFEA <AmiBlitz3.ab3@28589> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003CFEB <AmiBlitz3.ab3@28591> set_overflowcheck:         Ds.b 1
0003CFF0 <AmiBlitz3.ab3@28592> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003CFF6 <AmiBlitz3.ab3@28594> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003CFFC <AmiBlitz3.ab3@28595> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D002 <AmiBlitz3.ab3@28596> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D004 <AmiBlitz3.ab3@28597> Even4
0003D010 <AmiBlitz3.ab3@28600> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D018 <AmiBlitz3.ab3@28601>                            Dc.l $00000000,$00000000
0003D020 <AmiBlitz3.ab3@28602> tstsize1:                  Dc.l $00000100,$000003E9
0003D024 <AmiBlitz3.ab3@28603> tstsize2:                  Dc.l $00000100
0003D028 <AmiBlitz3.ab3@28604> tstend:                    Dc.l $000003EC
0003D030 <AmiBlitz3.ab3@28605> tstsize3:                  Ds.l 2
0003D034 <AmiBlitz3.ab3@28606> tstdone:                   Dc.l $000003F2
0003D038 <AmiBlitz3.ab3@28609> edstruct:                  Dc.l tokens                     ;data for ted
0003D03C <AmiBlitz3.ab3@28613>                            Dc.l 0
0003D040 <AmiBlitz3.ab3@28615>                            Dc.l read_xtrafile              ;load .xtra routine
0003D044 <AmiBlitz3.ab3@28616>                            Dc.l write_xtrafile             ;save .xtra routine
0003D048 <AmiBlitz3.ab3@28617>                            Dc.l call_menuentry             ;Menu Routine
0003D04C <AmiBlitz3.ab3@28618>                            Ds.l 1                          ;cleanup (?)
0003D050 <AmiBlitz3.ab3@28619>                            Dc.b ":",34,".;"
0003D14C <AmiBlitz3.ab3@28622> 
0003D22C <AmiBlitz3.ab3@28623>                            Ds.l 56
0003D22E <AmiBlitz3.ab3@28628> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D232 <AmiBlitz3.ab3@28631> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D234 <AmiBlitz3.ab3@28632>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D238 <AmiBlitz3.ab3@28633>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D23E <AmiBlitz3.ab3@28637> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D240 <AmiBlitz3.ab3@28641>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D244 <AmiBlitz3.ab3@28644> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D248 <AmiBlitz3.ab3@28647> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D24C <AmiBlitz3.ab3@28648>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D24E <AmiBlitz3.ab3@28654>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D250 <AmiBlitz3.ab3@28658>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D252 <AmiBlitz3.ab3@28661> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D254 <AmiBlitz3.ab3@28662>                            Dc.b $4E,$71                                             ;NOP
0003D256 <AmiBlitz3.ab3@28663>                            Dc.b $4E,$71                                             ;NOP
0003D258 <AmiBlitz3.ab3@28664>                            Dc.b $4E,$71                                             ;NOP
0003D25A <AmiBlitz3.ab3@28665> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D25C <AmiBlitz3.ab3@28667>                            Dc.b $4E,$71                                             ;NOP
0003D25E <AmiBlitz3.ab3@28668>                            Dc.b $4E,$71                                             ;NOP
0003D260 <AmiBlitz3.ab3@28669>                            Dc.b $4E,$71                                             ;NOP
0003D264 <AmiBlitz3.ab3@28673> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D268 <AmiBlitz3.ab3@28676> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D26A <AmiBlitz3.ab3@28679> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D26C <AmiBlitz3.ab3@28682> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D26E <AmiBlitz3.ab3@28683>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D272 <AmiBlitz3.ab3@28684>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D274 <AmiBlitz3.ab3@28685>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D276 <AmiBlitz3.ab3@28691> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D27A <AmiBlitz3.ab3@28692>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D27C <AmiBlitz3.ab3@28697> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D280 <AmiBlitz3.ab3@28698>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D282 <AmiBlitz3.ab3@28702> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D284 <AmiBlitz3.ab3@28703>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D288 <AmiBlitz3.ab3@28709> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D28A <AmiBlitz3.ab3@28710>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D28E <AmiBlitz3.ab3@28711>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D292 <AmiBlitz3.ab3@28715> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D294 <AmiBlitz3.ab3@28716>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D298 <AmiBlitz3.ab3@28717>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D29A <AmiBlitz3.ab3@28720> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D29E <AmiBlitz3.ab3@28723> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D2A2 <AmiBlitz3.ab3@28726> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D2A6 <AmiBlitz3.ab3@28729> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D2AA <AmiBlitz3.ab3@28733>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D2AC <AmiBlitz3.ab3@28734>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D2AE <AmiBlitz3.ab3@28735>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D2B2 <AmiBlitz3.ab3@28740>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D2B4 <AmiBlitz3.ab3@28741>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D2B6 <AmiBlitz3.ab3@28742>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D2BA <AmiBlitz3.ab3@28747>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D2BC <AmiBlitz3.ab3@28748>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D2BE <AmiBlitz3.ab3@28749>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D2C2 <AmiBlitz3.ab3@28754>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D2C4 <AmiBlitz3.ab3@28755>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D2C6 <AmiBlitz3.ab3@28756>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D2CA <AmiBlitz3.ab3@28757>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D2CC <AmiBlitz3.ab3@28758>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D2D0 <AmiBlitz3.ab3@28763>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D2D2 <AmiBlitz3.ab3@28764>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D2D6 <AmiBlitz3.ab3@28765>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D2D8 <AmiBlitz3.ab3@28766>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D2DC <AmiBlitz3.ab3@28767>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D2DE <AmiBlitz3.ab3@28768>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D2E0 <AmiBlitz3.ab3@28771>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D2E4 <AmiBlitz3.ab3@28776>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D2E6 <AmiBlitz3.ab3@28777>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D2EA <AmiBlitz3.ab3@28778>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D2EC <AmiBlitz3.ab3@28779>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D2F0 <AmiBlitz3.ab3@28780>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D2F2 <AmiBlitz3.ab3@28781>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D2F4 <AmiBlitz3.ab3@28784>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D2F8 <AmiBlitz3.ab3@28789>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D2FA <AmiBlitz3.ab3@28790>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D2FE <AmiBlitz3.ab3@28791>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D300 <AmiBlitz3.ab3@28792>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D304 <AmiBlitz3.ab3@28793>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D306 <AmiBlitz3.ab3@28794>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D308 <AmiBlitz3.ab3@28797>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D30C <AmiBlitz3.ab3@28802>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D30E <AmiBlitz3.ab3@28803>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D312 <AmiBlitz3.ab3@28804>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D318 <AmiBlitz3.ab3@28805>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D31C <AmiBlitz3.ab3@28806>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D31E <AmiBlitz3.ab3@28807>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D322 <AmiBlitz3.ab3@28814>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D324 <AmiBlitz3.ab3@28818> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D326 <AmiBlitz3.ab3@28821> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D32A <AmiBlitz3.ab3@28824> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D32C <AmiBlitz3.ab3@28825> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D330 <AmiBlitz3.ab3@28828> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D332 <AmiBlitz3.ab3@28831> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D336 <AmiBlitz3.ab3@28834> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D338 <AmiBlitz3.ab3@28838>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D33A <AmiBlitz3.ab3@28841> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D33C <AmiBlitz3.ab3@28844> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D340 <AmiBlitz3.ab3@28847> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D344 <AmiBlitz3.ab3@28850> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D348 <AmiBlitz3.ab3@28853> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D34A <AmiBlitz3.ab3@28856> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D34C <AmiBlitz3.ab3@28859> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D350 <AmiBlitz3.ab3@28862> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D356 <AmiBlitz3.ab3@28863>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D358 <AmiBlitz3.ab3@28864>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D35C <AmiBlitz3.ab3@28868> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D35E <AmiBlitz3.ab3@28869>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D360 <AmiBlitz3.ab3@28873> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D364 <AmiBlitz3.ab3@28876> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D366 <AmiBlitz3.ab3@28880>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D368 <AmiBlitz3.ab3@28884>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D36A <AmiBlitz3.ab3@28888>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D36E <AmiBlitz3.ab3@28891> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D372 <AmiBlitz3.ab3@28894> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D374 <AmiBlitz3.ab3@28897> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D376 <AmiBlitz3.ab3@28900> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D378 <AmiBlitz3.ab3@28903> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D37C <AmiBlitz3.ab3@28906> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D380 <AmiBlitz3.ab3@28909> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D382 <AmiBlitz3.ab3@28912> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D384 <AmiBlitz3.ab3@28916>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D388 <AmiBlitz3.ab3@28919>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D38A <AmiBlitz3.ab3@28925>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D38E <AmiBlitz3.ab3@28928>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D390 <AmiBlitz3.ab3@28934>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D394 <AmiBlitz3.ab3@28938> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D396 <AmiBlitz3.ab3@28941> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D398 <AmiBlitz3.ab3@28945>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D39A <AmiBlitz3.ab3@28949>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D3A0 <AmiBlitz3.ab3@28952> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D3A6 <AmiBlitz3.ab3@28955> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D3AE <AmiBlitz3.ab3@28959> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D3B2 <AmiBlitz3.ab3@28960>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D3B4 <AmiBlitz3.ab3@28964> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D3B8 <AmiBlitz3.ab3@28967> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D3BC <AmiBlitz3.ab3@28970> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D3C0 <AmiBlitz3.ab3@28973> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D3C4 <AmiBlitz3.ab3@28974> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D3C8 <AmiBlitz3.ab3@28978>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D3CC <AmiBlitz3.ab3@28980>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D3CE <AmiBlitz3.ab3@28983> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D3D2 <AmiBlitz3.ab3@28986> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D3D4 <AmiBlitz3.ab3@28989> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D3D6 <AmiBlitz3.ab3@28990>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D3D8 <AmiBlitz3.ab3@28991>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D3DC <AmiBlitz3.ab3@28992> 
0003D3DE <AmiBlitz3.ab3@28993>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D3E0 <AmiBlitz3.ab3@28994>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D3E2 <AmiBlitz3.ab3@28995>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D3E8 <AmiBlitz3.ab3@28997>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D3EA <AmiBlitz3.ab3@29002> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D3EC <AmiBlitz3.ab3@29003>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D3EE <AmiBlitz3.ab3@29007> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D3F2 <AmiBlitz3.ab3@29010> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D3F4 <AmiBlitz3.ab3@29013> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D3F6 <AmiBlitz3.ab3@29017>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D3F8 <AmiBlitz3.ab3@29020> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D3FC <AmiBlitz3.ab3@29023> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D3FE <AmiBlitz3.ab3@29024>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D402 <AmiBlitz3.ab3@29028> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D406 <AmiBlitz3.ab3@29029> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D40A <AmiBlitz3.ab3@29033> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D40E <AmiBlitz3.ab3@29037> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D414 <AmiBlitz3.ab3@29041> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D41A <AmiBlitz3.ab3@29044> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D41E <AmiBlitz3.ab3@29048> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D422 <AmiBlitz3.ab3@29052>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D426 <AmiBlitz3.ab3@29053>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D42C <AmiBlitz3.ab3@29058>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D430 <AmiBlitz3.ab3@29063>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D432 <AmiBlitz3.ab3@29068>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D436 <AmiBlitz3.ab3@29072>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D438 <AmiBlitz3.ab3@29076> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D43A <AmiBlitz3.ab3@29079> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D43C <AmiBlitz3.ab3@29080>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D440 <AmiBlitz3.ab3@29084>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D444 <AmiBlitz3.ab3@29088> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D448 <AmiBlitz3.ab3@29091> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D44A <AmiBlitz3.ab3@29094> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D44E <AmiBlitz3.ab3@29097> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D450 <AmiBlitz3.ab3@29100> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D459 <AmiBlitz3.ab3@29104>                            Dc.b "ram:test",0
0003D45A <AmiBlitz3.ab3@29105> Even
0003D45E <AmiBlitz3.ab3@29109>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D460 <AmiBlitz3.ab3@29111>                            Dc.w  0
0003D464 <AmiBlitz3.ab3@29114> _mathffpbase:              Ds.l 1                           ;maths org source
0003D466 <AmiBlitz3.ab3@29115> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D468 <AmiBlitz3.ab3@29116> typelen:                   Ds.w 1
0003D46C <AmiBlitz3.ab3@29117> prevtype:                  Ds.l 1
0003D470 <AmiBlitz3.ab3@29118> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D472 <AmiBlitz3.ab3@29119> lastchar:                  Ds.w 1
0003D476 <AmiBlitz3.ab3@29120> thistype:                  Ds.l 1
0003D47A <AmiBlitz3.ab3@29121> errstack:                  Ds.l 1
0003D47E <AmiBlitz3.ab3@29122> errcont:                   Ds.l 1
0003D480 <AmiBlitz3.ab3@29123> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D482 <AmiBlitz3.ab3@29124> linesleft:                 Ds.w 1
0003D486 <AmiBlitz3.ab3@29125> sourceline:                Ds.l 1                          ;thisitem org source
0003D48A <AmiBlitz3.ab3@29126> varbase:                   Ds.l 1                          ;firstvar org source
0003D48E <AmiBlitz3.ab3@29127> alllocals:                 Ds.l 1
0003D492 <AmiBlitz3.ab3@29128> firstlocal:                Ds.l 1
0003D496 <AmiBlitz3.ab3@29129> firstglob:                 Ds.l 1
0003D498 <AmiBlitz3.ab3@29130> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D49A <AmiBlitz3.ab3@29131> locvaroff:                 Ds.w 1
0003D49E <AmiBlitz3.ab3@29132> firstitem_:                 Ds.l 1
0003D4A0 <AmiBlitz3.ab3@29133> numlines_org:              Ds.w 1                          ;numlines org source
0003D4A2 <AmiBlitz3.ab3@29134> returncode_org:            Ds.w 1                          ;returncode org source
0003D4A6 <AmiBlitz3.ab3@29135> firstiff:                  Ds.l 1                          ;firstif org source
0003D4AA <AmiBlitz3.ab3@29136> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003D6AA <AmiBlitz3.ab3@29137> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003D6BA <AmiBlitz3.ab3@29138> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003D8BA <AmiBlitz3.ab3@29139> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003DABA <AmiBlitz3.ab3@29140> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003DCBA <AmiBlitz3.ab3@29141> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003DCBE <AmiBlitz3.ab3@29143> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003DEBE <AmiBlitz3.ab3@29144> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E0BE <AmiBlitz3.ab3@29146> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E0C2 <AmiBlitz3.ab3@29147> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E2C2 <AmiBlitz3.ab3@29148> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E2C6 <AmiBlitz3.ab3@29149> size_deflibs:              Ds.l 1                          ;deflibs org source
0003E4C6 <AmiBlitz3.ab3@29150> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003E6C6 <AmiBlitz3.ab3@29152> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003E6CA <AmiBlitz3.ab3@29153> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003E8CA <AmiBlitz3.ab3@29155> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E8CE <AmiBlitz3.ab3@29161>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003E8D2 <AmiBlitz3.ab3@29162>   Dc.b $00,$00,$00,$00
0003E8D6 <AmiBlitz3.ab3@29163>   Dc.b $00,$19,$00,$11
0003E8DA <AmiBlitz3.ab3@29164>   Dc.b $00,$2E,$00,$18
0003E8DE <AmiBlitz3.ab3@29165>   Dc.b $00,$04,$00,$03
0003E8E2 <AmiBlitz3.ab3@29166>   Dc.b $00,$01,$00,$22
0003E8E6 <AmiBlitz3.ab3@29167>   Dc.b $73,$68,$00,$00
0003E8EA <AmiBlitz3.ab3@29168>   Dc.b $00,$00,$00,$00
0003E8EE <AmiBlitz3.ab3@29169>   Dc.b $00,$00,$00,$00
0003E8F2 <AmiBlitz3.ab3@29170>   Dc.b $00,$00,$00,$00
0003E8F6 <AmiBlitz3.ab3@29171>   Dc.b $00,$00,$00,$00
0003E8FA <AmiBlitz3.ab3@29172>   Dc.b $00,$00,$00,$00
0003E8FE <AmiBlitz3.ab3@29173>   Dc.b $03,$22,$00,$21
0003E902 <AmiBlitz3.ab3@29174>   Dc.b $3C,$28,$00,$22
0003E906 <AmiBlitz3.ab3@29175>   Dc.b $6E,$C0,$00,$00
0003E90A <AmiBlitz3.ab3@29176>   Dc.b $00,$12,$00,$00
0003E90E <AmiBlitz3.ab3@29177>   Dc.b $00,$0E,$00,$00
0003E912 <AmiBlitz3.ab3@29178>   Dc.b $00,$00,$00,$00
0003E916 <AmiBlitz3.ab3@29179>   Dc.b $00,$00,$00,$00
0003E91A <AmiBlitz3.ab3@29180>   Dc.b $00,$00,$00,$00
0003E91E <AmiBlitz3.ab3@29181>   Dc.b $00,$00,$00,$2E
0003E922 <AmiBlitz3.ab3@29182>   Dc.b $00,$17,$00,$02
0003E926 <AmiBlitz3.ab3@29183>   Dc.b $00,$01,$8E,$80
0003E92A <AmiBlitz3.ab3@29184>   Dc.b $03,$00,$00,$00
0003E92E <AmiBlitz3.ab3@29185>   Dc.b $00,$00,$FF,$FF
0003E932 <AmiBlitz3.ab3@29186>   Dc.b $FF,$FF,$FF,$FC
0003E936 <AmiBlitz3.ab3@29187>   Dc.b $80,$00,$00,$00
0003E93A <AmiBlitz3.ab3@29188>   Dc.b $00,$00,$80,$00
0003E93E <AmiBlitz3.ab3@29189>   Dc.b $00,$3F,$BB,$40
0003E942 <AmiBlitz3.ab3@29190>   Dc.b $80,$1F,$C0,$00
0003E946 <AmiBlitz3.ab3@29191>   Dc.b $00,$00,$80,$3F
0003E94A <AmiBlitz3.ab3@29192>   Dc.b $C0,$0F,$BB,$40
0003E94E <AmiBlitz3.ab3@29193>   Dc.b $80,$1F,$C0,$00
0003E952 <AmiBlitz3.ab3@29194>   Dc.b $00,$00,$8E,$00
0003E956 <AmiBlitz3.ab3@29195>   Dc.b $F8,$00,$00,$00
0003E95A <AmiBlitz3.ab3@29196>   Dc.b $8F,$01,$FF,$00
0003E95E <AmiBlitz3.ab3@29197>   Dc.b $3B,$40,$81,$E3
0003E962 <AmiBlitz3.ab3@29198>   Dc.b $F7,$C0,$00,$00
0003E966 <AmiBlitz3.ab3@29199>   Dc.b $80,$7F,$F8,$70
0003E96A <AmiBlitz3.ab3@29200>   Dc.b $3B,$40,$80,$0F
0003E96E <AmiBlitz3.ab3@29201>   Dc.b $7C,$E0,$00,$00
0003E972 <AmiBlitz3.ab3@29202>   Dc.b $80,$00,$FD,$80
0003E976 <AmiBlitz3.ab3@29203>   Dc.b $00,$00,$80,$01
0003E97A <AmiBlitz3.ab3@29204>   Dc.b $F6,$00,$FB,$40
0003E97E <AmiBlitz3.ab3@29205>   Dc.b $80,$03,$EF,$00
0003E982 <AmiBlitz3.ab3@29206>   Dc.b $00,$00,$80,$07
0003E986 <AmiBlitz3.ab3@29207>   Dc.b $87,$80,$3B,$40
0003E98A <AmiBlitz3.ab3@29208>   Dc.b $80,$0F,$01,$C0
0003E98E <AmiBlitz3.ab3@29209>   Dc.b $00,$00,$80,$03
0003E992 <AmiBlitz3.ab3@29210>   Dc.b $F0,$70,$1D,$40
0003E996 <AmiBlitz3.ab3@29211>   Dc.b $80,$00,$18,$1C
0003E99A <AmiBlitz3.ab3@29212>   Dc.b $00,$00,$80,$00
0003E99E <AmiBlitz3.ab3@29213>   Dc.b $10,$06,$03,$40
0003E9A2 <AmiBlitz3.ab3@29214>   Dc.b $80,$00,$20,$1F
0003E9A6 <AmiBlitz3.ab3@29215>   Dc.b $00,$00,$80,$00
0003E9AA <AmiBlitz3.ab3@29216>   Dc.b $00,$00,$01,$40
0003E9AE <AmiBlitz3.ab3@29217>   Dc.b $80,$00,$00,$00
0003E9B2 <AmiBlitz3.ab3@29218>   Dc.b $00,$00,$80,$00
0003E9B6 <AmiBlitz3.ab3@29219>   Dc.b $00,$00,$00,$00
0003E9BA <AmiBlitz3.ab3@29220>   Dc.b $00,$00,$00,$00
0003E9BE <AmiBlitz3.ab3@29221>   Dc.b $00,$00,$00,$00
0003E9C2 <AmiBlitz3.ab3@29222>   Dc.b $00,$00,$00,$04
0003E9C6 <AmiBlitz3.ab3@29223>   Dc.b $00,$3F,$FC,$01
0003E9CA <AmiBlitz3.ab3@29224>   Dc.b $BB,$44,$00,$60
0003E9CE <AmiBlitz3.ab3@29225>   Dc.b $FE,$00,$00,$04
0003E9D2 <AmiBlitz3.ab3@29226>   Dc.b $00,$CF,$FF,$01
0003E9D6 <AmiBlitz3.ab3@29227>   Dc.b $BB,$44,$1F,$EF
0003E9DA <AmiBlitz3.ab3@29228>   Dc.b $FF,$00,$00,$04
0003E9DE <AmiBlitz3.ab3@29229>   Dc.b $33,$FF,$FF,$E0
0003E9E2 <AmiBlitz3.ab3@29230>   Dc.b $00,$04,$37,$FE
0003E9E6 <AmiBlitz3.ab3@29231>   Dc.b $7F,$FC,$1B,$44
0003E9EA <AmiBlitz3.ab3@29232>   Dc.b $0F,$9C,$FF,$FF
0003E9EE <AmiBlitz3.ab3@29233>   Dc.b $00,$04,$03,$E3
0003E9F2 <AmiBlitz3.ab3@29234>   Dc.b $FF,$FF,$DB,$44
0003E9F6 <AmiBlitz3.ab3@29235>   Dc.b $00,$7F,$BF,$FF
0003E9FA <AmiBlitz3.ab3@29236>   Dc.b $80,$04,$00,$0F
0003E9FE <AmiBlitz3.ab3@29237>   Dc.b $3F,$FE,$00,$04
0003EA02 <AmiBlitz3.ab3@29238>   Dc.b $00,$06,$7F,$F8
0003EA06 <AmiBlitz3.ab3@29239>   Dc.b $1B,$44,$00,$0C
0003EA0A <AmiBlitz3.ab3@29240>   Dc.b $F7,$FC,$00,$04
0003EA0E <AmiBlitz3.ab3@29241>   Dc.b $00,$19,$F9,$FE
0003EA12 <AmiBlitz3.ab3@29242>   Dc.b $1B,$44,$00,$33
0003EA16 <AmiBlitz3.ab3@29243>   Dc.b $FE,$7F,$00,$04
0003EA1A <AmiBlitz3.ab3@29244>   Dc.b $00,$0F,$FF,$BF
0003EA1E <AmiBlitz3.ab3@29245>   Dc.b $CD,$44,$00,$03
0003EA22 <AmiBlitz3.ab3@29246>   Dc.b $EF,$EF,$F0,$04
0003EA26 <AmiBlitz3.ab3@29247>   Dc.b $00,$00,$7F,$DF
0003EA2A <AmiBlitz3.ab3@29248>   Dc.b $FB,$44,$00,$00
0003EA2E <AmiBlitz3.ab3@29249>   Dc.b $FF,$A7,$FC,$04
0003EA32 <AmiBlitz3.ab3@29250>   Dc.b $00,$00,$7E,$3F
0003EA36 <AmiBlitz3.ab3@29251>   Dc.b $FD,$44,$00,$00
0003EA3A <AmiBlitz3.ab3@29252>   Dc.b $00,$00,$00,$04
0003EA3E <AmiBlitz3.ab3@29253>   Dc.b $7F,$FF,$FF,$FF
0003EA42 <AmiBlitz3.ab3@29254>   Dc.b $FF,$FC,$00,$00
0003EA46 <AmiBlitz3.ab3@29255>   Dc.b $00,$01,$00,$00
0003EA49 <AmiBlitz3.ab3@29256>   Dc.b $00,$00,$04
0003EA4F <AmiBlitz3.ab3@29259> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003EAA7 <AmiBlitz3.ab3@29260> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003EAA8 <AmiBlitz3.ab3@29261> Even
0003EAAC <AmiBlitz3.ab3@29263> sysdebug:            Dc.l $3F0
0003EAB0 <AmiBlitz3.ab3@29267> exelock              Ds.l 1
0003EAB4 <AmiBlitz3.ab3@29271> includesourceline    Dc.l 0
0003EAB8 <AmiBlitz3.ab3@29272> linenum              Ds.l 1
0003EABC <AmiBlitz3.ab3@29273> globallinecount      Ds.l 1
0003EADA <AmiBlitz3.ab3@29274> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003EADE <AmiBlitz3.ab3@29275> calc_option          Dc.l 1
0003EAE2 <AmiBlitz3.ab3@29276> versioninformation   Dc.l $00
0003EAE6 <AmiBlitz3.ab3@29277> number_of_builds     Dc.l $00
0003EAE8 <AmiBlitz3.ab3@29280> BSS
0003EAEA <AmiBlitz3.ab3@29281> debugnest            Ds.w 1
0003EAEE <AmiBlitz3.ab3@29282> instringf            Ds.l 1
0003EAF2 <AmiBlitz3.ab3@29283> funcscanon           Ds.l 1
0003EB06 <AmiBlitz3.ab3@29284> storedebugmode       Ds.b 20
0003EB0A <AmiBlitz3.ab3@29285> firsttimepref        Ds.l 1
0003EB0B <AmiBlitz3.ab3@29286> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003EB0C <AmiBlitz3.ab3@29287> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003EB0E <AmiBlitz3.ab3@29288> nostringopt          Ds.w 1
0003EB8E <AmiBlitz3.ab3@29289> path2:               Ds.l 32
0003EB92 <AmiBlitz3.ab3@29290> typebase             Dc.l 0
0003EB94 <AmiBlitz3.ab3@29291> doublepeek           Dc.w 0
0003EB98 <AmiBlitz3.ab3@29292> lastoffset           Dc.l 0
0003EB9A <AmiBlitz3.ab3@29293> firsttime            Dc.w 0
0003EB9E <AmiBlitz3.ab3@29294> lastdestpointer      Dc.l 0
0003EBA2 <AmiBlitz3.ab3@29295> prevwritedat         Dc.l 0
0003EBA6 <AmiBlitz3.ab3@29296> lastsourceline       Dc.l 0
0003EBAA <AmiBlitz3.ab3@29297> lastwritedat         Dc.l 0
0003EBAC <AmiBlitz3.ab3@29298> makeexec             Dc.w 0
0003EBAE <AmiBlitz3.ab3@29299> makeexec_remember    Dc.w 0
0003EBB2 <AmiBlitz3.ab3@29300> sharebase            Ds.l 1
0003EBB6 <AmiBlitz3.ab3@29301> tempa7               Ds.l 1
0003EBB8 <AmiBlitz3.ab3@29302> incnif               Ds.w 1
0003EBBC <AmiBlitz3.ab3@29303> tempstore            Ds.l 1
0003EBC0 <AmiBlitz3.ab3@29304> result               Ds.l 1
0003EBC2 <AmiBlitz3.ab3@29305> automode             Ds.w 1
0003EBC4 <AmiBlitz3.ab3@29306> stackcorrect         Ds.w 1
0003EBC6 <AmiBlitz3.ab3@29307> formode              Ds.w 1
0003EBCA <AmiBlitz3.ab3@29308> limitregs            Ds.l 1
0003EBCC <AmiBlitz3.ab3@29309> onestep              Ds.w 1
0003EBD0 <AmiBlitz3.ab3@29310> reqmode              Ds.l 1
0003EC70 <AmiBlitz3.ab3@29311> inctab               Ds.l 40
0003EC72 <AmiBlitz3.ab3@29312> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003EC76 <AmiBlitz3.ab3@29313> includeline          Ds.l 1
0003EC7A <AmiBlitz3.ab3@29314> morememadd           Ds.l 1
0003EC7C <AmiBlitz3.ab3@29315> objectcount          Ds.w 1
0003EC80 <AmiBlitz3.ab3@29316> savefuncspace        Ds.l 1
0003EC84 <AmiBlitz3.ab3@29317> lasttrap1            Ds.l 1
0003EC88 <AmiBlitz3.ab3@29318> currentfunccall      Ds.l 1
0003EC89 <AmiBlitz3.ab3@29319> skipfunc             Ds.b 1
0003EC8A <AmiBlitz3.ab3@29320> resdisable           Ds.b 1
0003EC8B <AmiBlitz3.ab3@29321> skiptoggle           Ds.b 1
0003EC8C <AmiBlitz3.ab3@29322> developobject        Ds.b 1
0003EC8E <AmiBlitz3.ab3@29323> iniffcommand         Ds.w 1
0003EC90 <AmiBlitz3.ab3@29324> startoffsetmore      Ds.w 1
0003EC92 <AmiBlitz3.ab3@29325> olddebugmode         Ds.w 1
0003EC96 <AmiBlitz3.ab3@29326> fpucodeglobal        Ds.l 1
0003EC9A <AmiBlitz3.ab3@29327> fpucodelocal         Ds.l 1
0003EC9E <AmiBlitz3.ab3@29328> maxregs              Ds.l 1
0003ECA2 <AmiBlitz3.ab3@29329> fpucode              Ds.l 1
0003ECA4 <AmiBlitz3.ab3@29330> firstmline           Ds.w 1
0003ECE4 <AmiBlitz3.ab3@29331> regtable             Ds.l 16
0003ECE6 <AmiBlitz3.ab3@29332> exdebug              Ds.w 1
0003ECE8 <AmiBlitz3.ab3@29333> a2offset2            Ds.w 1
0003ECEC <AmiBlitz3.ab3@29334> parnumtemp           Ds.l 1
0003ECED <AmiBlitz3.ab3@29335> doimmediate          Ds.b 1
0003ECEE <AmiBlitz3.ab3@29336> notypecheck          Ds.b 1
0003ECF0 <AmiBlitz3.ab3@29337> vartype              Ds.w 1
0003ECF1 <AmiBlitz3.ab3@29338> peekaddrsize         Ds.b 1
0003ECF2 <AmiBlitz3.ab3@29339> declare2             Ds.b 1
0003ECF4 <AmiBlitz3.ab3@29340> parameternum         Ds.w 1
0003ECF8 <AmiBlitz3.ab3@29341> lasttoken            Ds.l 1
0003ECFA <AmiBlitz3.ab3@29342> newvariable          Ds.w 1
0003ECFB <AmiBlitz3.ab3@29343> declare              Ds.b 1
0003ECFC <AmiBlitz3.ab3@29344> typecheck            Ds.b 1
0003ECFD <AmiBlitz3.ab3@29345> nowdeclare           Ds.b 1
0003ECFE <AmiBlitz3.ab3@29346> dimkeep              Ds.b 1
0003ECFF <AmiBlitz3.ab3@29347> a4a5store            Ds.b 1
0003ED00 <AmiBlitz3.ab3@29348> ___freetouse         Ds.b 1
0003ED04 <AmiBlitz3.ab3@29349> firstiffstore        Ds.l 1
0003ED08 <AmiBlitz3.ab3@29350> destpointer2         Ds.l 1
0003ED0C <AmiBlitz3.ab3@29351> stackaddr            Ds.l 1
0003EE10 <AmiBlitz3.ab3@29352> allowtab             Ds.b 260
0003EF10 <AmiBlitz3.ab3@29353> templine             Ds.b 256
0003EF12 <AmiBlitz3.ab3@29354> thenmode             Ds.w 1
0003EF14 <AmiBlitz3.ab3@29355> temp                 Ds.w 1
0003EF16 <AmiBlitz3.ab3@29356> tempregnum           Ds.w 1
0003EF1A <AmiBlitz3.ab3@29358> numlines2            Ds.l 1
0003EF1E <AmiBlitz3.ab3@29359> numlines             Ds.l 1
0003EF20 <AmiBlitz3.ab3@29360> exmac                Ds.w 1
0003EF22 <AmiBlitz3.ab3@29361> returncode           Ds.w 1
0003EF26 <AmiBlitz3.ab3@29362> fp0iff               Ds.l 1
0003EF2A <AmiBlitz3.ab3@29363> fp0addr              Ds.l 1
0003EF2C <AmiBlitz3.ab3@29364> fp0mode              Ds.w 1
0003EF2E <AmiBlitz3.ab3@29365> fp0var               Ds.w 1
0003EF30 <AmiBlitz3.ab3@29366> fastfunc             Ds.w 1
0003EF32 <AmiBlitz3.ab3@29367> retmode              Ds.w 1
0003EF34 <AmiBlitz3.ab3@29368> parnum               Ds.w 1
0003EF36 <AmiBlitz3.ab3@29369> regmask              Ds.w 1
0003EF38 <AmiBlitz3.ab3@29370> regnumfunc           Ds.w 1
0003EF3A <AmiBlitz3.ab3@29371> libmode              Ds.w 1
0003EF3E <AmiBlitz3.ab3@29372> oldline              Ds.l 1
0003EF42 <AmiBlitz3.ab3@29373> sourceline3          Ds.l 1
0003F00A <AmiBlitz3.ab3@29374> debugstore           Ds.b 200
0003F00E <AmiBlitz3.ab3@29375> deststore            Ds.l 1
0003F012 <AmiBlitz3.ab3@29377> loada                Ds.l 1
0003F016 <AmiBlitz3.ab3@29379> currtype             Ds.l 1
0003F01A <AmiBlitz3.ab3@29380> arrayoffset          Ds.l 1
0003F01E <AmiBlitz3.ab3@29381> lastlabel            Ds.l 1
0003F022 <AmiBlitz3.ab3@29382> curtemplabel         Ds.l 1
0003F026 <AmiBlitz3.ab3@29383> sourceline2          Ds.l 1
0003F126 <AmiBlitz3.ab3@29384> chartab              Ds.b 256
0003F19E <AmiBlitz3.ab3@29385> tempspace            Ds.b 120
000BF1AE <AmiBlitz3.ab3@29386> instrtab             Ds.l 65538*2
000C71AE <AmiBlitz3.ab3@29388> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E71B2 <AmiBlitz3.ab3@29389> replacedat           Ds.w 65538
000EF1B2 <AmiBlitz3.ab3@29390> variablehash         Ds.l 8192
000EF1B6 <AmiBlitz3.ab3@29391> newinitaddr          Ds.l 1
000EF1BA <AmiBlitz3.ab3@29392> realbssend           Ds.l 1
000EF1BC <AmiBlitz3.ab3@29393> saved0               Ds.w 1
000EF23C <AmiBlitz3.ab3@29394> lastpath             Ds.b 128
000EF2BC <AmiBlitz3.ab3@29395> lastpath2            Ds.b 128
000EF384 <AmiBlitz3.ab3@29396> fpustackbase         Ds.w 100
000EF388 <AmiBlitz3.ab3@29397> 
000EF38A <AmiBlitz3.ab3@29398> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF38E <AmiBlitz3.ab3@29399> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF392 <AmiBlitz3.ab3@29400> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF396 <AmiBlitz3.ab3@29401> rightsidetype        Dc.l 0  ; same as above but right side
000EF39A <AmiBlitz3.ab3@29404> trap15temp           Ds.l 1
000EF39E <AmiBlitz3.ab3@29405> trap15temp2          Ds.l 1
000EF3A2 <AmiBlitz3.ab3@29406> templibend           Ds.l 1
000EF3A6 <AmiBlitz3.ab3@29407> tempdata1start       Ds.l 1
000EF3AA <AmiBlitz3.ab3@29408> stacktrack           Ds.l 1
000EF3AE <AmiBlitz3.ab3@29409> pad                  Ds.l 1
000EF4AE <AmiBlitz3.ab3@29410> includetemp          Ds.b 256
000EFEAE <AmiBlitz3.ab3@29411> includetemp2         Ds.b 256*10
000EFEB0 <AmiBlitz3.ab3@29412> funccall             Ds.w 1
000EFEB4 <AmiBlitz3.ab3@29415> ptr_resfile          Ds.l 1
000EFEB6 <AmiBlitz3.ab3@29416> CalculatorButtonBinFlag:    Ds.w 1
000EFEB8 <AmiBlitz3.ab3@29417> CalculatorButtonDecFlag:    Ds.w 1
000EFEBC <AmiBlitz3.ab3@29418> ped_startup_addr:    Ds.l 1
000EFEBD <AmiBlitz3.ab3@29419> start_without_libs:  Ds.b 1
000EFEBE <AmiBlitz3.ab3@29420> skip_bytes:          Ds.b 1
000EFEC2 <AmiBlitz3.ab3@29421> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EFEC6 <AmiBlitz3.ab3@29422> beforeparameterfetch Ds.l 1
000EFECA <AmiBlitz3.ab3@29423> typetocast           Ds.l 1
000EFECE <AmiBlitz3.ab3@29424> errorcounter         Ds.l 1
000EFECF <AmiBlitz3.ab3@29425> iserror              Ds.b 1
000EFED0 <AmiBlitz3.ab3@29426> Even
000EFED4 <AmiBlitz3.ab3@29428> CLIMode:             Dc.l 0
000EFED8 <AmiBlitz3.ab3@29429> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000EFEDC <AmiBlitz3.ab3@29430> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
