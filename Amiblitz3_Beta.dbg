00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005084 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000509C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BC <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00005108 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511A <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005154 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00005202 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005210 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005246 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005264 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005270 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A4 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000052BE <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00005308 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005396 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00005416 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005434 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005448 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005460 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005488 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AE <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BC <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005532 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A0 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000055D2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005604 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A2 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A8 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000056FC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005746 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005762 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005768 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005836 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000584E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005880 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A6 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AC <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B4 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005904 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000591C <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005962 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A6 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1C <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A52 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A6E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A98 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB6 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B08 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B22 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B68 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B84 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B92 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA6 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BEA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C18 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C48 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C4E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C82 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D00 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D06 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D34 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D64 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAE <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DEE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1E <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E3A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E5C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F1E <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F44 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F4A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F68 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F86 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FA4 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FAA <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FFE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006026 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000604A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A0 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006148 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006158 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621A <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006242 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000062F8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006314 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000631E <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006332 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006352 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006390 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B8 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006442 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064BA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006516 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000651C <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006526 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000655A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006560 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065AC <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B6 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006602 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000660A <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006632 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006638 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000066AE <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670C <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006772 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067A0 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000067FE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006808 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006830 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006858 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006952 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006958 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006964 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000699A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A4 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000069DE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A48 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A58 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A96 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB0 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B04 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B08 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B22 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B60 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B94 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAE <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C02 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C2C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C36 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C44 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C66 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB6 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CEA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D42 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D60 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D94 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA8 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E12 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E28 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A94 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB0 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B04 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B74 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B90 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BAC <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C38 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C88 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA4 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D02 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0C <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D20 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D68 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D84 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E36 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E74 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1E <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F48 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB2 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB8 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FEE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00008024 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00008032 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00008054 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000809A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AE <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B8 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811A <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008128 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008182 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008196 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B4 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008210 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008232 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008262 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008290 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008312 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B2 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008400 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008426 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000845A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008464 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008480 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008492 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000084FC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850C <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008530 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008600 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008636 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008646 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008654 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008694 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008704 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008712 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000876C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008780 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008790 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000087BC <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008804 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008812 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008896 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AA <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008920 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008962 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008976 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008986 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B4 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A24 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A70 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A94 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B00 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B10 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B72 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAA <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBA <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0A <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C34 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C74 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAA <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D02 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D46 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D64 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB0 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E12 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E46 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E92 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F02 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F60 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F9E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAE <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00009006 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00009016 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009032 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009056 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000905E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BA <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009138 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009188 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009188 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009188 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009188 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AC <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000091D4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091F8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009226 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009444 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009472 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000949E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000094DA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
00009506 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009532 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000955E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000958A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
000095B6 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095E2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
0000960E <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000963A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000096C4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000974E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000097EC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009836 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009876 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000987C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000098C6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
00009906 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009930 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009936 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009960 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000998A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
000099B4 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099DC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099FE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A2C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A5A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A88 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009ACE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
00009B14 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B5A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B92 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009C90 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009CAE <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009CDE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CF0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009D1E <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D46 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D58 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009DAE <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DE4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DF4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009DFA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E50 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E56 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009EAE <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009ECC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F12 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F22 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009F40 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F56 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009F7E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F9A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FD4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A008 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A020 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A072 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
0000A0A0 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A132 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A178 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A20A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A224 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A224 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A250 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A0 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AC <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A324 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A348 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A386 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AC <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A408 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A422 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A43E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A484 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BA <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A536 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A554 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A578 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A57E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5F8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A614 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61A <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A620 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A648 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A702 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A798 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A79E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B4 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BC <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A818 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A826 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A85E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A86E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8F8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A932 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9A8 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA72 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA84 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB10 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB72 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAA <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABFE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC16 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC94 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD02 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD08 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD16 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD3E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD52 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD8E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB6 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE18 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE50 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF02 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF32 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01A <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0CE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B102 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B108 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B116 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B172 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AA <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2FE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B304 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30A <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3EE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A6 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B526 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B616 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B674 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B680 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B750 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B764 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B798 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B878 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8F8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B952 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B958 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA28 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB74 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBC8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBCE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA4 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAA <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD84 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAC <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE80 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB6 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEEE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF14 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF36 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF62 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF7E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF90 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFEE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C026 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C074 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C08E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A2 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0A8 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BA <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A6 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AC <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1FE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C264 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AA <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C360 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A0 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C402 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C440 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C482 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C506 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50C <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C548 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C586 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60A <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C610 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C616 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C646 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C652 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C664 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C700 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C748 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C762 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C770 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C776 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C78E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C794 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7F8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C840 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C870 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8B8 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C906 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C932 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9B8 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA18 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA48 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA64 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA72 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA78 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB2 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAF8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB06 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB24 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB6 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA0 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCBE <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD00 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD64 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD7E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA0 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE92 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF34 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF74 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF84 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF9E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B0 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B6 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BC <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0F8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D112 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11A <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D122 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D138 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D150 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D162 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D16E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D174 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B4 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D208 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D20E <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D21E <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D24E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A0 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D310 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D324 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D370 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D394 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B6 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3CE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D428 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D454 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BC <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4FE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D506 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D530 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D554 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D56E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AC <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D610 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D622 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D658 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D672 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A0 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6C8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6D8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D702 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D712 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D716 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D756 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D75E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D75E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D802 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D808 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D80E <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D848 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D888 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8B8 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC28 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC36 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DECE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEE8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF22 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF74 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF82 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFD8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFDE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E058 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E10E <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E128 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E144 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E176 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E186 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A4 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1DE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E202 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E210 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21C <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E274 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E298 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E348 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E376 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E376 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E390 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E3C2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E3E4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E400 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E42E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E44E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E458 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E480 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E48E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E49C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E4AA <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E73E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E7A2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E7D6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E7F0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E7F8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E800 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E810 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E872 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E884 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E8B2 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E8D6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E8FE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E932 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E94C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E9DC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000EA02 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000EA1A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000EA56 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000EA82 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000EAA8 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EB10 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EB36 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EB4E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EB5A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EB66 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EB72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EB7E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EB8A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EB94 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EB9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EBB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EBF4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000ECA0 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000ECF6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000ED68 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000ED74 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000EDC8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000EE12 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EE4A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000EE9E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EEC0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EEFA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EF20 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EF38 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EF84 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EFAA <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EFE2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000F008 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000F050 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000F070 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000F07C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000F0AE <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000F0C2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F0D8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F112 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F138 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F150 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F1B4 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F1CC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F1FC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F29E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F2DA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F346 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F3A2 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F404 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F44C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F46A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F488 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F4A2 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F4AE <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F4E0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F4F8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F544 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F570 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F598 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F62C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F63C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F668 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F854 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F8A4 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F8FA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F96E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F9A8 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F9E6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000FA20 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000FA4A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000FA86 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FADA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FAE2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FB4A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FC0E <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FC7A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FCA8 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FCBC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FCEE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FD38 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FD48 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FD7C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FD9E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FDAE <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FDB6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FDFA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FE66 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FE94 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FEFC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FF68 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FF96 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FFC4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FFCC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FFFA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0001006C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
000100A0 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010112 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010130 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010154 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001016C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010184 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
000101B0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010228 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001024E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
000102A0 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000102CA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000102E2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000102FA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010332 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001033A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010374 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010386 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
000103AC <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000103C2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000103E8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000103FC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010426 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010444 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001047C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001048E <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
000104AC <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000104E8 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010534 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001054A <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001057E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
000105A6 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000105E6 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000105FE <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010644 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001066E <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
0001069C <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
000106B6 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
000106BE <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000106D6 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000106E0 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000106F2 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001072A <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010738 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010744 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010760 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010782 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
000107A4 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000107C6 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000107E8 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
00010804 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010822 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010836 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001083C <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001083E <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010844 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001084E <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010854 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010872 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010878 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
0001089C <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
000108BA <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000108E8 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
00010916 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010944 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010972 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
000109A6 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000109B6 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000109C0 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000109C6 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000109C6 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A10 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A30 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3A <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4E <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A94 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADA <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2A <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B46 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B70 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEE <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C6C <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEA <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D68 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE6 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E64 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE2 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F60 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDE <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
0001105C <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E0 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011110 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001116C <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011198 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011262 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011270 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AE <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011332 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001135C <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137A <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139E <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AA <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BA <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CA <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DA <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001142C <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011484 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E0 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156A <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E8 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011602 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011630 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001166C <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173A <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011808 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011854 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D2 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011950 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AE <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A44 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A7C <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADA <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B62 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6A <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD4 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C40 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7E <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D06 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D32 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8E <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E56 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBA <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC0 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF4 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC2 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012090 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BA <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D8 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012106 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012142 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B2 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BA <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
0001220C <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012234 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001224C <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012300 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230E <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012364 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C2 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C8 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001244C <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D0 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012554 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D2 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012650 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CE <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001274C <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CA <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012848 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C6 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F0 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290E <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001293C <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012980 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012986 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A0 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129BC <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F0 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A14 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A3C <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA8 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B06 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B64 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB0 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C10 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C16 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C20 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2A <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C44 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C72 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C78 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CBC <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE6 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF0 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CFC <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D06 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2A <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D72 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBA <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E02 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E18 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E2C <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E36 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E40 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5A <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E84 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC8 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE2 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F40 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5A <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F7C <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F98 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA6 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB2 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFE <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013050 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A2 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B6 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C6 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130CC <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CE <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D4 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DE <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E8 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013102 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001312C <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013142 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001314C <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C4 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013200 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013210 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013230 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013250 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013270 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A6 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CE <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013306 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336A <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338A <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013406 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343E <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B4 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D4 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013550 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013588 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FE <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361E <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369A <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C6 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CE <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013714 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013734 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373E <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013756 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013766 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379E <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D0 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E2 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013864 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386E <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A0 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D2 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FE <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392A <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001394C <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013956 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013970 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013970 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013986 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A2 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A4 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D2 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D2 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D2 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139EC <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F6 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A18 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A30 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4A <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A86 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A8C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B18 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B62 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B78 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B82 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9A <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B9C <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCA <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE4 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFA <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C4C <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C62 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB4 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCA <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D1C <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D32 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D84 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E0C <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1A <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E24 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E36 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E48 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB8 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC4 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0E <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F4C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F64 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F80 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB6 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014026 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001405E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014096 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140CE <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014106 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001413E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014176 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141AE <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001421E <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014256 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014260 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001426A <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014274 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001429E <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000142E6 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014320 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014326 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
0001433C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014346 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014362 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014368 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143A6 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143AA <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000143B4 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
000143B6 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
0001446A <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000144AA <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000144AE <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000144EC <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000144F0 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014646 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014656 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014674 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014676 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
000146AE <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000146DC <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000146E0 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
0001470E <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014712 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014738 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014748 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001474E <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014754 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014798 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000147B2 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000147D8 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000147DE <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000147E4 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014806 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
0001481E <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014844 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001486E <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001487C <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014882 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014896 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000148AE <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000148BC <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000148D0 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
00014906 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
00014914 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014952 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014958 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014966 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014972 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014980 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014982 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014988 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001499E <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
000149A8 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
000149AE <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000149D8 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014A16 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014A1A <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014A58 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014A5C <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014A9A <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014A9E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014AA6 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014AAE <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014AF2 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014B12 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014B46 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014B6A <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014B74 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014B8E <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014BA2 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014BFA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014C9A <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014CA2 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014CDA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014CF0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014D18 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014D40 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014D48 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014D56 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014D5E <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014D86 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014D8E <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014D96 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014D9C <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014DA2 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014DA8 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014DAE <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014DB4 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014DBA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014DC0 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014DC6 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014DCE <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014DD6 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014E04 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014E0A <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014E12 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014E32 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014E42 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014E82 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014E92 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014EB2 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014EC2 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014ED2 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014EE2 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014EF2 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014F02 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014F12 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014F22 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014F32 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014F56 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014F68 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014F7A <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014F8C <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014F9E <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014FBC <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014FC2 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014FC8 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014FF2 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00015004 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00015038 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00015050 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001509C <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
000150AE <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00015104 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015176 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0001517C <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000151B0 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000151D8 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00015200 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001523A <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015252 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000152D6 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000152F0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001533E <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001534E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015356 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000153B0 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000153B6 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00015400 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001546A <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000154D0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
00015504 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015530 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001557E <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000155A8 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000155B6 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
00015614 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015672 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001569C <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
000156A6 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
000156AE <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000156EC <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015738 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001574A <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000157A0 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00015818 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001581E <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015852 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001587A <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000158B0 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000158BE <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000158CC <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015940 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015946 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015990 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000159DA <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00015A0A <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00015A3A <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015A64 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015AB6 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00015B0C <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015B5C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015BC2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015C2E <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015C5A <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015C8A <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015D06 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015D36 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015D96 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015DC6 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015DF6 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015E26 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015E56 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015E86 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015EB6 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015EE6 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015F62 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015F94 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015FC6 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015FF6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00016070 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000160DC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000160EE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001611C <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016144 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016158 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00016182 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
000161C6 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000161D6 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000161E6 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000161EC <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000161FC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
0001620A <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00016214 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001624C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016284 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
000162BC <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
000162CC <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016334 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001636C <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001637C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001638C <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000163F4 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001645C <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000164C4 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001652C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016594 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000165FC <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016664 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000166CC <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000166DC <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016714 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001674E <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016788 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000167C0 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000167DC <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016814 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001683A <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00016842 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001684A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016852 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001685A <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001686E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001689C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
000168B6 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
000168C4 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00016930 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016956 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016972 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001697C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016986 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016992 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000169A0 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
000169AC <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000169E8 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00016A02 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00016A10 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016A30 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
00016A3E <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016A4C <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016A52 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016A62 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016A66 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016A9A <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
00016ACE <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016AD2 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
00016B06 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016B3E <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016B44 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016B7A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016BB0 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016BE6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016C1E <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016C56 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016CF6 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016D6C <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016DA2 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016DDA <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016DF8 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016DFC <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016E02 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016E08 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016E0C <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016E4A <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016E88 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016EBC <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016EF2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016F4A <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016F78 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016F7C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016FB2 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016FE0 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
0001700E <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00017012 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00017048 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00017076 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
0001707A <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
000170DE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
000170E4 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
0001711E <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00017128 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00017132 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001714C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017176 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0001719C <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
000171A6 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
000171AA <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
000171AC <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000171CA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000171CC <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000171D2 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000171D8 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00017202 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00017204 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00017232 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017268 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001728E <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001729E <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
000172A4 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
000172AA <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000172E4 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000172EE <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00017308 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00017326 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017350 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001737E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0001740E <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001742C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017468 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
000174A4 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000174E0 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0001751C <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017558 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001755E <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017598 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
000175AA <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000175BA <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000175C6 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000175E0 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000175E2 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001763C <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017642 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00017654 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001768E <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000176A8 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000176BC <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017726 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001772C <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00017796 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
000177AA <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
00017814 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001784A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017850 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000178BA <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000178CE <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00017904 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001790A <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017940 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017954 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000179BE <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000179C4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017A42 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00017A78 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00017A7E <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017AB4 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00017ACE <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017AE2 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017B52 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017BBC <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017BD0 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017C3A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017C40 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017CAA <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017CBE <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017D28 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017D2E <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017D98 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017DAC <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017E16 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017E1C <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017E86 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017E98 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017EA8 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017EB2 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017F1C <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017F22 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017F8C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017F96 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00018000 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00018036 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0001803C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000180A6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000180DC <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
000180E4 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00018112 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00018116 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
0001813E <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00018144 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001814A <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00018150 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00018156 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001815C <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00018166 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00018170 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001819E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
000181CA <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00018238 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0001826C <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00018272 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
000182F2 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00018304 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001836A <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
000183D0 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000183D6 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000183DE <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
000183E0 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
000183FE <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001847A <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00018480 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00018486 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
0001848C <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00018496 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001849C <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
000184A2 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000184A8 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
000184AE <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000184B2 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000184BC <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000184C0 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000184EA <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000184F2 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
000184F6 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000184FC <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
00018500 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00018510 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001856A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001857C <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
000185E6 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000185EC <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00018636 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00018648 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00018674 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001871A <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00018738 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
0001873E <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018768 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018772 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000187A4 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000187BE <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000187D2 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000187F8 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00018802 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00018846 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
0001886A <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
000188A8 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000188AC <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
000188EA <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000188EE <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001892C <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
0001896A <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
0001896C <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000189A0 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000189A6 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
000189EA <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
000189FC <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018A04 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018A0A <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018A14 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018A22 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018A28 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018A50 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018A6A <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018A74 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018A7A <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018A98 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018AA2 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018AA8 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018AAE <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018AB8 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018AC6 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018ACC <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018ADC <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018B08 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018B1E <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00018B28 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018B2E <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018B86 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018BF4 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018C0C <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018C12 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018C78 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018CA2 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018CAC <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018CD4 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018CFE <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00018DA0 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00018DAE <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00018DFE <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00018E0E <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00018ED6 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00018F0A <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00018F3E <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00018F72 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00018FA6 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00018FDA <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
0001900E <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00019042 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00019076 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00019078 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
000190B6 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
000190BA <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
000190F8 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00019136 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
00019138 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
0001913E <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00019142 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00019144 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00019182 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000191C0 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000191C2 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
000191C4 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
000191C6 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
000191CC <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
000191D0 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
000191E0 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
000191F8 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
00019210 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
00019228 <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
00019252 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
0001927C <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000192AA <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000192AE <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
000192D6 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
000192D8 <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
00019316 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
0001931A <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00019358 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
0001935C <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
0001939A <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
0001939E <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
000193DC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000193E0 <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
00019406 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
0001942C <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00019452 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00019478 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
0001949E <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
0001954A <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
00019598 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
000195EE <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00019614 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001963A <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00019660 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
000196B6 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00019704 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019752 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
0001980C <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019862 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
00019888 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
000198AE <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000198D4 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
0001992A <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00019980 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000199CE <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019A1C <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019A6A <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
00019AB8 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019B06 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019B54 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00019BA2 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019BC8 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019BEE <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019C14 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019C62 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019CB0 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019D06 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019D54 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019DA2 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019DF0 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019E16 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019E3C <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019E62 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019E9A <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019EC2 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019ED6 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019F4A <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
0001A03E <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
0001A0AA <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
0001A0BA <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
0001A0E0 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001A0EA <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
0001A114 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
0001A11A <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0001A12A <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001A1CA <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
0001A20A <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
0001A210 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001A272 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001A27C <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
0001A286 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
0001A2A0 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
0001A2C2 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
0001A2E4 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001A33E <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001A360 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
0001A382 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001A3DC <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001A41E <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
0001A424 <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
0001A432 <CLIModeSupport.ab3@1054> XINCLUDE "CLIModeSupport.ab3"
0001A438 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001A44C <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
0001A456 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
0001A4D0 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
0001A4DA <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001A4E0 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
0001A4F4 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001A4FE <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001A57E <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
0001A588 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
0001A58E <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
0001A5A2 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
0001A5AC <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001A5F4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
0001A602 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001A628 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001A632 <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
0001A69C <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
0001A76E <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001A778 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001A77E <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001A788 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001A78E <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001A7A2 <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
0001A7AC <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
0001A7F4 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
0001A7FE <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001A804 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
0001A818 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
0001A83E <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
0001A852 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001A878 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
0001A88C <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
0001A8B2 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001A8C6 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
0001A8D0 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
0001A8FE <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
0001A96E <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
0001A986 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
0001AA6A <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
0001AA74 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
0001AA7A <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
0001AA7C <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
0001AA90 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
0001AAC2 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
0001AAC8 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
0001AB0C <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
0001AB1E <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
0001AB30 <CLIModeSupport.ab3@1123> XINCLUDE "CLIModeSupport.ab3"
0001AB3A <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
0001AB40 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
0001AB4A <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
0001AB64 <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
0001AB64 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001ABE4 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AC1C <AmiBlitz3.ab3@99> If dynassign <> ""
0001AC32 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AC3C <AmiBlitz3.ab3@101>     If *AssignSema
0001AC4C <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AC52 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001AC72 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001AC7C <AmiBlitz3.ab3@105>       If *AssignSema
0001AC8C <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001ACC0 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001ACD2 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001AD0E <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001AD1A <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001AD26 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001AD36 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001AD46 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001AD92 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001ADF2 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001AE86 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001AEBE <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001AF40 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001AFC2 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B044 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B0C6 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B148 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B1BC <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B230 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B2A4 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B2D2 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B2F6 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B324 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B352 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B41C <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B454 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B492 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B4A2 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B4A8 <AmiBlitz3.ab3@152> Else
0001B4B8 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B4DE <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B4EA <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B4FC <AmiBlitz3.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B506 <AmiBlitz3.ab3@165> If CLIMode
0001B50C <AmiBlitz3.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001B512 <AmiBlitz3.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001B56A <AmiBlitz3.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B592 <AmiBlitz3.ab3@173>   cli_sourcefile.s    = ""
0001B5BA <AmiBlitz3.ab3@174>   cli_exefile.s       = ""
0001B5E2 <AmiBlitz3.ab3@175>   cli_savefile.s      = ""
0001B60A <AmiBlitz3.ab3@176>   cli_dumpfile.s      = ""
0001B632 <AmiBlitz3.ab3@177>   cli_includepath.s   = ""
0001B65A <AmiBlitz3.ab3@178>   cli_blitzlibpath.s  = ""
0001B660 <AmiBlitz3.ab3@179>   cli_debuginfo.l     = False
0001B666 <AmiBlitz3.ab3@180>   cli_run.l           = False
0001B66E <AmiBlitz3.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001B696 <AmiBlitz3.ab3@182>   cli_info.s          = ""
0001B69C <AmiBlitz3.ab3@183>   cli_release.l       = False
0001B6A6 <AmiBlitz3.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001B6AC <AmiBlitz3.ab3@185>   cli_gui.l           = False
0001B6B4 <AmiBlitz3.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001B6BC <AmiBlitz3.ab3@187>   cli_verbose.l       = 1
0001B6C4 <AmiBlitz3.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001B6CC <AmiBlitz3.ab3@189>   cli_comstrbufsize.l = 0
0001B6D4 <AmiBlitz3.ab3@190>   cli_exestacksize.l  = 0
0001B6DC <AmiBlitz3.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001B6F4 <AmiBlitz3.ab3@192>   If cli_numargs=0 Then showhelp=True
0001B724 <AmiBlitz3.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001B770 <AmiBlitz3.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001B838 <AmiBlitz3.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001B86E <AmiBlitz3.ab3@199>     Select larg
0001B8BA <AmiBlitz3.ab3@200>       Case "s" : larg="source"
0001B90C <AmiBlitz3.ab3@201>       Case "e" : larg="exe"
0001B95E <AmiBlitz3.ab3@202>       Case "d" : larg="debug"
0001B9B0 <AmiBlitz3.ab3@203>       Case "r" : larg="release"
0001BA02 <AmiBlitz3.ab3@204>       Case "h" : larg="help"
0001BA54 <AmiBlitz3.ab3@205>       Case "v" : larg="verbose"
0001BA62 <AmiBlitz3.ab3@206>     End Select
0001BA98 <AmiBlitz3.ab3@208>     Select larg
0001BAEC <AmiBlitz3.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BB46 <AmiBlitz3.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BBA0 <AmiBlitz3.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BBD0 <AmiBlitz3.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001BC00 <AmiBlitz3.ab3@213>       Case "run"      : cli_run         = True
0001BC30 <AmiBlitz3.ab3@214>       Case "release"  : cli_release     = True
0001BC60 <AmiBlitz3.ab3@215>       Case "ped"      : cli_gui         = True
0001BCBA <AmiBlitz3.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001BD2C <AmiBlitz3.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001BD5C <AmiBlitz3.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001BD64 <AmiBlitz3.ab3@219>                         cli_dumpflags   = $0
0001BDC4 <AmiBlitz3.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001BE24 <AmiBlitz3.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001BE84 <AmiBlitz3.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001BEE4 <AmiBlitz3.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001BF44 <AmiBlitz3.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001BFA4 <AmiBlitz3.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C004 <AmiBlitz3.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C064 <AmiBlitz3.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C0C4 <AmiBlitz3.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C0D6 <AmiBlitz3.ab3@229>                         If cli_dumpflags = $0
0001C0DC <AmiBlitz3.ab3@230>                          err=True
0001C170 <AmiBlitz3.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C1E2 <AmiBlitz3.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C1EA <AmiBlitz3.ab3@235>                         cli_comflags.l  = $0
0001C24A <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C2AA <AmiBlitz3.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C30A <AmiBlitz3.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C36A <AmiBlitz3.ab3@239> 
0001C3CA <AmiBlitz3.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C3E4 <AmiBlitz3.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C3EA <AmiBlitz3.ab3@242>                           err=True                                                                ; no
0001C47E <AmiBlitz3.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C484 <AmiBlitz3.ab3@244>                         Else
0001C492 <AmiBlitz3.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C504 <AmiBlitz3.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C50C <AmiBlitz3.ab3@249>                         cli_dbgflags.l  = $0
0001C56C <AmiBlitz3.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C5CC <AmiBlitz3.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C62C <AmiBlitz3.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001C68C <AmiBlitz3.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001C6A6 <AmiBlitz3.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001C6AC <AmiBlitz3.ab3@255>                           err=True                                                                ; no
0001C740 <AmiBlitz3.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001C746 <AmiBlitz3.ab3@257>                         Else
0001C754 <AmiBlitz3.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001C7AE <AmiBlitz3.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001C808 <AmiBlitz3.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001C862 <AmiBlitz3.ab3@262> 
0001C888 <AmiBlitz3.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001C898 <AmiBlitz3.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001C8F2 <AmiBlitz3.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001C922 <AmiBlitz3.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001C928 <AmiBlitz3.ab3@269>       Default
0001C960 <AmiBlitz3.ab3@270>         If arg><""
0001C9F4 <AmiBlitz3.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001C9FA <AmiBlitz3.ab3@272>           err = True
0001CA08 <AmiBlitz3.ab3@274>     End Select
0001CA54 <AmiBlitz3.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001CA76 <AmiBlitz3.ab3@278>   If err><False OR showhelp = True
0001CA80 <AmiBlitz3.ab3@279>     If showhelp
0001CAE2 <AmiBlitz3.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CB1A <AmiBlitz3.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CB52 <AmiBlitz3.ab3@282>     NPrint "\\nOptions:"
0001CB8A <AmiBlitz3.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CBC2 <AmiBlitz3.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001CBFA <AmiBlitz3.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001CC32 <AmiBlitz3.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001CC6A <AmiBlitz3.ab3@287>     NPrint "  -run                : run compiled program"
0001CCA2 <AmiBlitz3.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001CCDA <AmiBlitz3.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001CD12 <AmiBlitz3.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001CD4A <AmiBlitz3.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001CD82 <AmiBlitz3.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001CDBA <AmiBlitz3.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001CDF2 <AmiBlitz3.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001CE2A <AmiBlitz3.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001CE62 <AmiBlitz3.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001CE9A <AmiBlitz3.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001CED2 <AmiBlitz3.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001CF0A <AmiBlitz3.ab3@299>     NPrint "  -(h)elp             : show this help"
0001CF42 <AmiBlitz3.ab3@300>     NPrint "\\nExample:"
0001CF7A <AmiBlitz3.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001CFB2 <AmiBlitz3.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001CFB8 <AmiBlitz3.ab3@305>     Goto abnormal_exit
0001CFD4 <AmiBlitz3.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D038 <AmiBlitz3.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D048 <AmiBlitz3.ab3@312> Poke.l ?CLIMode,CLIMode
0001D06C <AmiBlitz3.ab3@342>   Dim incdim.s (#maxincludes)
0001D090 <AmiBlitz3.ab3@343>   Dim incline.l(#maxincludes)
0001D0AA <AmiBlitz3.ab3@611> Function.s Get_Libinfo{addr_libnum.l}
0001D0B6 <AmiBlitz3.ab3@613>   lib_ab2.b = False : lib_os.b = False
0001D0BC <AmiBlitz3.ab3@614>   addr_counter.l = addr_libnum
0001D0C4 <AmiBlitz3.ab3@615>   skip.l = 0
0001D0D6 <AmiBlitz3.ab3@616>   If addr_counter=0
0001D110 <AmiBlitz3.ab3@617>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D12E <AmiBlitz3.ab3@618>     Function Return ""
0001D13C <AmiBlitz3.ab3@623>     mem.l = Peek.l(addr_counter)
0001D14A <AmiBlitz3.ab3@628>     addr_counter + 2
0001D16A <AmiBlitz3.ab3@629>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D184 <AmiBlitz3.ab3@630>     If (mem LSR 16) = $ffe2
0001D18A <AmiBlitz3.ab3@632>       lib_os = True
0001D192 <AmiBlitz3.ab3@633>       skip = 10
0001D1D8 <AmiBlitz3.ab3@634>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D21C <AmiBlitz3.ab3@636>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D232 <AmiBlitz3.ab3@638>   If (addr_counter>addr_libnum + $400)
0001D250 <AmiBlitz3.ab3@640>     Function Return ""
0001D256 <AmiBlitz3.ab3@641>   Else
0001D27A <AmiBlitz3.ab3@642>     Function Return Peek$(addr_counter + skip)
0001D284 <AmiBlitz3.ab3@644> End Function
0001D2A2 <AmiBlitz3.ab3@684>   !asm
0001D2A8 <AmiBlitz3.ab3@685>   MOVEA.l _execbase,A6
0001D2AC <AmiBlitz3.ab3@686>   MOVEM.l d0/a0,-(a7)
0001D2AE <AmiBlitz3.ab3@688>   MOVEQ #127,d0
0001D2B4 <AmiBlitz3.ab3@689>   LEA chartab,a0
0001D2BA <AmiBlitz3.ab3@692>     MOVE.b #1,128(a0)
0001D2BC <AmiBlitz3.ab3@693>     CLR.b (a0)+
0001D2C0 <AmiBlitz3.ab3@694>   DBF d0,'l12
0001D2C6 <AmiBlitz3.ab3@696>   LEA chartab,a0
0001D2CA <AmiBlitz3.ab3@697>   MOVE.b #1,(a0)
0001D2D0 <AmiBlitz3.ab3@698>   MOVE.b #1,","(a0)
0001D2D6 <AmiBlitz3.ab3@699>   MOVE.b #1,";"(a0)
0001D2DC <AmiBlitz3.ab3@700>   MOVE.b #1,":"(a0)
0001D2E2 <AmiBlitz3.ab3@701>   MOVE.b #1,"("(a0)
0001D2E8 <AmiBlitz3.ab3@702>   MOVE.b #1,")"(a0)
0001D2EE <AmiBlitz3.ab3@703>   MOVE.b #1,"="(a0)
0001D2F4 <AmiBlitz3.ab3@704>   MOVE.b #1,"+"(a0)
0001D2FA <AmiBlitz3.ab3@705>   MOVE.b #1,"-"(a0)
0001D300 <AmiBlitz3.ab3@706>   MOVE.b #1,"*"(a0)
0001D306 <AmiBlitz3.ab3@707>   MOVE.b #1,"/"(a0)
0001D30C <AmiBlitz3.ab3@708>   MOVE.b #1,"$"(a0)
0001D312 <AmiBlitz3.ab3@709>   MOVE.b #1,"%"(a0)
0001D318 <AmiBlitz3.ab3@710>   MOVE.b #1,"."(a0)
0001D31E <AmiBlitz3.ab3@711>   MOVE.b #1,"["(a0)
0001D324 <AmiBlitz3.ab3@712>   MOVE.b #1,"]"(a0)
0001D32A <AmiBlitz3.ab3@713>   MOVE.b #1,"{"(a0)
0001D330 <AmiBlitz3.ab3@714>   MOVE.b #1,"}"(a0)
0001D336 <AmiBlitz3.ab3@715>   MOVE.b #1,"\"(a0)
0001D33C <AmiBlitz3.ab3@716>   MOVE.b #1,">"(a0)
0001D342 <AmiBlitz3.ab3@717>   MOVE.b #1,"<"(a0)
0001D348 <AmiBlitz3.ab3@718>   MOVE.b #1,"&"(a0)
0001D34E <AmiBlitz3.ab3@719>   MOVE.b #1,"|"(a0)
0001D354 <AmiBlitz3.ab3@720>   MOVE.b #1,"^"(a0)
0001D35A <AmiBlitz3.ab3@721>   MOVE.b #1,$7e(a0)
0001D360 <AmiBlitz3.ab3@722>   MOVE.w #$0101,1(a0)
0001D366 <AmiBlitz3.ab3@724>   LEA instrtab,a0
0001D36C <AmiBlitz3.ab3@725>   MOVE.l #labelhash-instrtab,d0
0001D36E <AmiBlitz3.ab3@726>   ASR.l #2,d0
0001D370 <AmiBlitz3.ab3@727>   SUBQ.l #1,d0
0001D372 <AmiBlitz3.ab3@730>    CLR.l (a0)+
0001D374 <AmiBlitz3.ab3@731>    SUBQ.l #1,d0
0001D378 <AmiBlitz3.ab3@732>   BNE 'l10
0001D37E <AmiBlitz3.ab3@734>   LEA allowtab,a0
0001D384 <AmiBlitz3.ab3@735>   MOVE.l #255,d0
0001D386 <AmiBlitz3.ab3@738>     CLR.b (a0)+
0001D38A <AmiBlitz3.ab3@739>   DBF d0,'la1
0001D390 <AmiBlitz3.ab3@741>   LEA allowtab,a0
0001D396 <AmiBlitz3.ab3@742>   MOVE.b #1,$7d(a0)
0001D39C <AmiBlitz3.ab3@743>   MOVE.b #1,$7c(a0)
0001D3A2 <AmiBlitz3.ab3@744>   MOVE.b #1,$44(a0)
0001D3A8 <AmiBlitz3.ab3@745>   MOVE.b #1,$45(a0)
0001D3AE <AmiBlitz3.ab3@746>   MOVE.b #1,$b9(a0)
0001D3B4 <AmiBlitz3.ab3@747>   MOVE.b #1,$89(a0)
0001D3BA <AmiBlitz3.ab3@748>   MOVE.b #1,$ce(a0)
0001D3C0 <AmiBlitz3.ab3@749>   MOVE.b #1,$cf(a0)
0001D3C6 <AmiBlitz3.ab3@750>   MOVE.b #1,$d0(a0)
0001D3CC <AmiBlitz3.ab3@751>   MOVE.b #1,$cd(a0)
0001D3CE <AmiBlitz3.ab3@752>   MOVEQ #0,d0
0001D3D4 <AmiBlitz3.ab3@754>   MOVEA.l _execbase,a6
0001D3DA <AmiBlitz3.ab3@759>   MOVE.l #$10000,d0
0001D3E0 <AmiBlitz3.ab3@760>   MOVE.l #80000,d1
0001D3E2 <AmiBlitz3.ab3@761>   MOVE.l d1,d2
0001D3E6 <AmiBlitz3.ab3@762>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D3EC <AmiBlitz3.ab3@763>   MOVE.l d0,mempool
0001D3F0 <AmiBlitz3.ab3@764>   MOVEM.l (a7)+,d0/a0
0001D3F6 <AmiBlitz3.ab3@765>   TST.l mempool
0001D3FA <AmiBlitz3.ab3@766>   BEQ shutdown_compiler
0001D3FE <AmiBlitz3.ab3@768>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D404 <AmiBlitz3.ab3@769>   MOVE.l A4,ptr_ThisTask
0001D408 <AmiBlitz3.ab3@771>   BSR.w open_doslibrary
0001D40C <AmiBlitz3.ab3@772>   BEQ.w shutdown_compiler
0001D412 <AmiBlitz3.ab3@774>   MOVE.l D2,stacksize
0001D414 <AmiBlitz3.ab3@778>   MOVEQ.l #$00,D0
0001D41A <AmiBlitz3.ab3@779>   LEA tokens,A0
0001D41C <AmiBlitz3.ab3@782>     ADDQ.w #1,D0
0001D41E <AmiBlitz3.ab3@783>     MOVE.l (A0),D1
0001D422 <AmiBlitz3.ab3@784>     BEQ.w JL_0_2D1C
0001D424 <AmiBlitz3.ab3@785>     MOVEA.l D1,A0
0001D428 <AmiBlitz3.ab3@786> BRA.w JL_0_2D0E
0001D42E <AmiBlitz3.ab3@789>   MOVE.l A0,end_of_tokenlist
0001D432 <AmiBlitz3.ab3@791>   BSR.w makeasmtable
0001D43A <AmiBlitz3.ab3@792>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D43E <AmiBlitz3.ab3@794>   BSR.w open_mathlibrary
0001D442 <AmiBlitz3.ab3@795>   BEQ.w freemem_and_quit4
0001D448 <AmiBlitz3.ab3@797>   MOVE.l constmaxpc,D0
0001D44A <AmiBlitz3.ab3@798>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D450 <AmiBlitz3.ab3@799>   MOVEA.l _execbase,A6
0001D454 <AmiBlitz3.ab3@800>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D45A <AmiBlitz3.ab3@801>   MOVE.l D0,constpcat
0001D45E <AmiBlitz3.ab3@802>   BEQ.w freemem_and_quit3
0001D464 <AmiBlitz3.ab3@803>   ADD.l constmaxpc,D0
0001D46A <AmiBlitz3.ab3@804>   MOVE.l D0,constlibat
0001D470 <AmiBlitz3.ab3@806>   MOVE.l macrobuffer_size,D0
0001D476 <AmiBlitz3.ab3@807>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D47A <AmiBlitz3.ab3@808>   BGE 'ok
0001D480 <AmiBlitz3.ab3@809>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D486 <AmiBlitz3.ab3@810>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D488 <AmiBlitz3.ab3@813>   ADDQ.l #4,d0
0001D48A <AmiBlitz3.ab3@814>   MOVEQ.l #$01,D1
0001D490 <AmiBlitz3.ab3@815>   MOVEA.l _execbase,A6
0001D494 <AmiBlitz3.ab3@816>   JSR _AllocMem(A6)                                        ;macro mem
0001D496 <AmiBlitz3.ab3@817>   MOVE.l d0,a0
0001D49C <AmiBlitz3.ab3@818>   MOVE.l macrobuffer_size,(a0)+
0001D49E <AmiBlitz3.ab3@819>   MOVE.l a0,d0
0001D4A4 <AmiBlitz3.ab3@820>   MOVE.l D0,ptr_macrobuffer_begin
0001D4A8 <AmiBlitz3.ab3@821>   BEQ.w freemem_and_quit2
0001D4AE <AmiBlitz3.ab3@822>   ADD.l macrobuffer_size,D0
0001D4B4 <AmiBlitz3.ab3@823>   MOVE.l D0,ptr_macrobuffer_end
0001D4BA <AmiBlitz3.ab3@825>   TST.l CLIMode
0001D4BE <AmiBlitz3.ab3@826>   BEQ load_ped
0001D4E8 <AmiBlitz3.ab3@829>   !basic
0001D4F2 <AmiBlitz3.ab3@830>   succ.l = InitEmulatedPED{}
0001D4F6 <AmiBlitz3.ab3@831>   GetD0 succ
0001D514 <AmiBlitz3.ab3@832>   !asm
0001D516 <AmiBlitz3.ab3@833>   TST.l d0
0001D51A <AmiBlitz3.ab3@834>   BEQ freemem_and_quit
0001D520 <AmiBlitz3.ab3@835> JMP skip_ped
0001D526 <AmiBlitz3.ab3@840>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D52C <AmiBlitz3.ab3@841>   MOVEA.l _dosbase,A6
0001D530 <AmiBlitz3.ab3@842>   JSR _LoadSeg(A6)
0001D536 <AmiBlitz3.ab3@843>   MOVE.l D0,ptr_seg_ped
0001D53A <AmiBlitz3.ab3@845>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D53C <AmiBlitz3.ab3@849>   MOVEA.l D0,A2
0001D53E <AmiBlitz3.ab3@850>   ADDA.l A2,A2
0001D540 <AmiBlitz3.ab3@851>   ADDA.l A2,A2
0001D546 <AmiBlitz3.ab3@853>   LEA teddata,a1                                           ;lea edstruct,A1
0001D54C <AmiBlitz3.ab3@854>   MOVE.l #"TEDY",d1
0001D550 <AmiBlitz3.ab3@855>   JSR 4(A2)                                                ; Run PED
0001D556 <AmiBlitz3.ab3@857>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D55C <AmiBlitz3.ab3@858>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D59A <AmiBlitz3.ab3@860>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D59E <AmiBlitz3.ab3@861>   BEQ.w unload_ped
0001D5A2 <AmiBlitz3.ab3@862> 
0001D5A6 <AmiBlitz3.ab3@863>   BNE old_version_of_PED                                   ; no, than exit
0001D5E4 <AmiBlitz3.ab3@869>   !ComData_GetL{comData_Magic,D0}
0001D5EA <AmiBlitz3.ab3@870>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D5EE <AmiBlitz3.ab3@871>   BNE unload_ped
0001D626 <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001D65E <AmiBlitz3.ab3@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001D696 <AmiBlitz3.ab3@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001D6CE <AmiBlitz3.ab3@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001D706 <AmiBlitz3.ab3@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001D73E <AmiBlitz3.ab3@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001D776 <AmiBlitz3.ab3@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001D7AE <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001D7E6 <AmiBlitz3.ab3@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001D81E <AmiBlitz3.ab3@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001D856 <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001D88E <AmiBlitz3.ab3@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001D8C6 <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001D8FE <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001D936 <AmiBlitz3.ab3@892>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001D96E <AmiBlitz3.ab3@893>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001D9A6 <AmiBlitz3.ab3@895>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001D9DE <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DA16 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DA4E <AmiBlitz3.ab3@899>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DA86 <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DABE <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DAF6 <AmiBlitz3.ab3@903>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DB2E <AmiBlitz3.ab3@904>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DB66 <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DB9E <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DBD6 <AmiBlitz3.ab3@907>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001DC0E <AmiBlitz3.ab3@908>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001DC46 <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001DC7E <AmiBlitz3.ab3@910>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001DCB6 <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001DCEE <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001DD26 <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001DD5E <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001DD96 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001DD9C <AmiBlitz3.ab3@919>   CLR.w returncode_org
0001DDC6 <AmiBlitz3.ab3@921>   !basic
0001DDD0 <AmiBlitz3.ab3@922>   If CLIMode
0001DE42 <AmiBlitz3.ab3@923>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001DE60 <AmiBlitz3.ab3@925>   !asm
0001DE66 <AmiBlitz3.ab3@929>   TST.b start_without_libs
0001DE6A <AmiBlitz3.ab3@930>   BNE skip_loading_libs
0001DE6E <AmiBlitz3.ab3@931>     BSR.w call_setpointerbusy
0001DE78 <AmiBlitz3.ab3@932>     MOVE.l #$FFFFffff,linenumat
0001DE7C <AmiBlitz3.ab3@933>     BSR.w get_libraries
0001DE82 <AmiBlitz3.ab3@934>     JSR init_libraries
0001DE86 <AmiBlitz3.ab3@935>     BSR.w init_buffers
0001DE8A <AmiBlitz3.ab3@936>     BSR.w call_setpointernormal
0001DE8C <AmiBlitz3.ab3@941>   MOVEQ.l #-$01,D0
0001DE92 <AmiBlitz3.ab3@942>   MOVEA.l _execbase,A6
0001DE96 <AmiBlitz3.ab3@943>   JSR _AllocSignal(A6)
0001DE9C <AmiBlitz3.ab3@944>   MOVE.l D0,signalNum
0001DE9E <AmiBlitz3.ab3@945>   MOVEQ.l #$00,D1
0001DEA0 <AmiBlitz3.ab3@946>   BSET D0,D1
0001DEA6 <AmiBlitz3.ab3@947>   MOVE.l D1,signals
0001DEAC <AmiBlitz3.ab3@951>   MOVE.l #str_defaultdbug,D1
0001DEB0 <AmiBlitz3.ab3@952>   MOVEA.l _dosbase(PC),A6
0001DEB4 <AmiBlitz3.ab3@953>   JSR _LoadSeg(A6)
0001DEBA <AmiBlitz3.ab3@954>   MOVE.l D0,ptr_seg_debugger
0001DEBC <AmiBlitz3.ab3@955>   TST.l d0
0001DEC0 <AmiBlitz3.ab3@956>   BNE ok_12
0001DEEA <AmiBlitz3.ab3@957>     !basic
0001DF4C <AmiBlitz3.ab3@958>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001DF6A <AmiBlitz3.ab3@959>     !asm
0001DF70 <AmiBlitz3.ab3@962>   TST.l CLIMode
0001DF74 <AmiBlitz3.ab3@963>   BEQ run_ped
0001DF9E <AmiBlitz3.ab3@969>   !basic
0001DFA4 <AmiBlitz3.ab3@970>   err.l = False
0001DFD0 <AmiBlitz3.ab3@978>   If cli_sourcefile
0001DFF0 <AmiBlitz3.ab3@979>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001DFFA <AmiBlitz3.ab3@980>     If lock
0001E01E <AmiBlitz3.ab3@981>       NameFromLock_ lock,&cli_tempstr,1024
0001E048 <AmiBlitz3.ab3@982>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E058 <AmiBlitz3.ab3@983>       UnLock_ lock
0001E084 <AmiBlitz3.ab3@986>     If cli_exefile
0001E0D6 <AmiBlitz3.ab3@987>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E12E <AmiBlitz3.ab3@988>       path.s = dos_PathPart{cli_exefile}
0001E14E <AmiBlitz3.ab3@989>       lock.l = Lock_(&path,#ACCESS_READ)
0001E158 <AmiBlitz3.ab3@990>       If lock
0001E17C <AmiBlitz3.ab3@991>         NameFromLock_ lock,&cli_tempstr,1024
0001E1A6 <AmiBlitz3.ab3@992>         path.s = Peek.s(&cli_tempstr)
0001E254 <AmiBlitz3.ab3@993>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E264 <AmiBlitz3.ab3@994>         UnLock_ lock
0001E2AE <AmiBlitz3.ab3@1005>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E322 <AmiBlitz3.ab3@1006> 
0001E32C <AmiBlitz3.ab3@1007>   *PreProcessor.preprocessor = preproc_Create{}
0001E33C <AmiBlitz3.ab3@1008>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E36E <AmiBlitz3.ab3@1009>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E382 <AmiBlitz3.ab3@1010>   If *PreProcessor\tokens=#NULL
0001E3FC <AmiBlitz3.ab3@1011>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E406 <AmiBlitz3.ab3@1012>     preproc_QueryTokens{*PreProcessor}
0001E438 <AmiBlitz3.ab3@1013>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E484 <AmiBlitz3.ab3@1021>   If cli_sourcefile><"" AND err=False
0001E52A <AmiBlitz3.ab3@1022>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E55C <AmiBlitz3.ab3@1023>     succ=LoadSource{cli_sourcefile}
0001E566 <AmiBlitz3.ab3@1024>     If succ
0001E59E <AmiBlitz3.ab3@1025> 
0001E618 <AmiBlitz3.ab3@1026>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001E65A <AmiBlitz3.ab3@1027> 
0001E664 <AmiBlitz3.ab3@1029>         If comerr
0001E66A <AmiBlitz3.ab3@1031>         Else
0001E670 <AmiBlitz3.ab3@1035>     Else
0001E6C0 <AmiBlitz3.ab3@1036>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001E70C <AmiBlitz3.ab3@1040>   If cli_savefile><"" AND err=False
0001E786 <AmiBlitz3.ab3@1041>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001E7B4 <AmiBlitz3.ab3@1042>     SaveSource{cli_savefile}
0001E800 <AmiBlitz3.ab3@1045>   If cli_dumpfile><"" AND err=False
0001E84A <AmiBlitz3.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001E880 <AmiBlitz3.ab3@1047>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001E88A <AmiBlitz3.ab3@1050>   If cli_run
0001E89E <AmiBlitz3.ab3@1051>     If comerr=False
0001E8CA <AmiBlitz3.ab3@1052>       If cli_exefile
0001E944 <AmiBlitz3.ab3@1053>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001E97A <AmiBlitz3.ab3@1054> 
0001E9C4 <AmiBlitz3.ab3@1056>       If cli_verbose>=1 Then NPrint "Running program..."
0001E9D2 <AmiBlitz3.ab3@1057> 
0001E9D4 <AmiBlitz3.ab3@1059>         CLR.l d0
0001EA12 <AmiBlitz3.ab3@1060>         !ComData_GetB{comByte_RunningFlag,D0}
0001EA16 <AmiBlitz3.ab3@1061>         running.l = PutD0
0001EA32 <AmiBlitz3.ab3@1062>         If running Then Delay_ 50
0001EA46 <AmiBlitz3.ab3@1064>       Until running=False
0001EA5A <AmiBlitz3.ab3@1065>       If Peek.l(?_runerror)
0001EAAA <AmiBlitz3.ab3@1066>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EABC <AmiBlitz3.ab3@1077>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001EB06 <AmiBlitz3.ab3@1078>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EB0C <AmiBlitz3.ab3@1079>   DeinitEmulatedPED{}
0001EB2A <AmiBlitz3.ab3@1081>   !asm
0001EB30 <AmiBlitz3.ab3@1082> JMP terminate_ab3
0001EB36 <AmiBlitz3.ab3@1087>   MOVEA.l ped_startup_addr,A1
0001EB3C <AmiBlitz3.ab3@1088>   LEA str_tempfilename,A0
0001EB3E <AmiBlitz3.ab3@1089>   JSR (A1)
0001EB44 <AmiBlitz3.ab3@1096>   MOVE.l signalNum,D0
0001EB4A <AmiBlitz3.ab3@1097>   MOVEA.l _execbase,A6
0001EB4E <AmiBlitz3.ab3@1098>   JSR _FreeSignal(A6)
0001EB54 <AmiBlitz3.ab3@1100>   MOVE.l ptr_seg_debugger,D1
0001EB58 <AmiBlitz3.ab3@1101>   BEQ.b skip_unload_debugger
0001EB5C <AmiBlitz3.ab3@1102>     MOVEA.l _dosbase(PC),A6
0001EB60 <AmiBlitz3.ab3@1103>     JSR _UnLoadSeg(A6)
0001EB64 <AmiBlitz3.ab3@1106>   BSR.w Aclearallvars
0001EB68 <AmiBlitz3.ab3@1107>   BSR.w free_residents
0001EB6E <AmiBlitz3.ab3@1108>   JSR free_blitzlibs
0001EB74 <AmiBlitz3.ab3@1111>   MOVE.l ptr_seg_ped,D1
0001EB78 <AmiBlitz3.ab3@1112>   BEQ freemem_and_quit
0001EB7C <AmiBlitz3.ab3@1113>   MOVEA.l _dosbase(PC),A6
0001EB80 <AmiBlitz3.ab3@1114>   JSR _UnLoadSeg(A6)
0001EB84 <AmiBlitz3.ab3@1115>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EBAE <AmiBlitz3.ab3@1118>   !basic
0001EC72 <AmiBlitz3.ab3@1119> 
0001EC90 <AmiBlitz3.ab3@1120>   !asm
0001EC94 <AmiBlitz3.ab3@1121>   BRA freemem_and_quit
0001ECBE <AmiBlitz3.ab3@1124>   !basic
0001ED82 <AmiBlitz3.ab3@1125>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001EDA0 <AmiBlitz3.ab3@1126>   !asm
0001EDA4 <AmiBlitz3.ab3@1130>   BSR.w freeallox
0001EDAA <AmiBlitz3.ab3@1131>   MOVEA.l ptr_macrobuffer_begin,A1
0001EDAC <AmiBlitz3.ab3@1132>   MOVE.l -(a1),D0
0001EDAE <AmiBlitz3.ab3@1133>   ADDQ.l #4,d0
0001EDB4 <AmiBlitz3.ab3@1134>   MOVEA.l _execbase,A6
0001EDB8 <AmiBlitz3.ab3@1135>   JSR _FreeMem(A6)
0001EDBE <AmiBlitz3.ab3@1138>   MOVEA.l _dosbase,A1
0001EDC4 <AmiBlitz3.ab3@1139>   MOVEA.l _execbase,A6
0001EDC8 <AmiBlitz3.ab3@1140>   JSR _CloseLibrary(A6)
0001EDCE <AmiBlitz3.ab3@1142>   MOVEA.l constpcat,A1
0001EDD4 <AmiBlitz3.ab3@1143>   MOVE.l constmaxpc,D0
0001EDDA <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001EDDE <AmiBlitz3.ab3@1145>   JSR _FreeMem(A6)
0001EDE4 <AmiBlitz3.ab3@1148>   MOVEA.l _mathffpbase,A1
0001EDEA <AmiBlitz3.ab3@1149>   MOVEA.l _execbase,A6
0001EDEE <AmiBlitz3.ab3@1150>   JSR _CloseLibrary(A6)
0001EDF4 <AmiBlitz3.ab3@1160>     MOVEA.l _execbase,A6
0001EDFA <AmiBlitz3.ab3@1161>     MOVE.l mempool,a0
0001EDFE <AmiBlitz3.ab3@1162>     JSR _DeletePool(a6)
0001EE04 <AmiBlitz3.ab3@1163>     CLR.l pushat
0001EE0A <AmiBlitz3.ab3@1170>   JSR free_unusedfunctions
0001EE0C <AmiBlitz3.ab3@1171>   MOVEQ #0,d0
0001EE1A <AmiBlitz3.ab3@1174>   !exitasm
0001EE52 <AmiBlitz3.ab3@1175>   If dynassign<>""
0001EE5C <AmiBlitz3.ab3@1176>     If *AssignSema
0001EE6C <AmiBlitz3.ab3@1177>       ReleaseSemaphore_ *AssignSema
0001EE84 <AmiBlitz3.ab3@1178>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001EF18 <AmiBlitz3.ab3@1179>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001EF52 <AmiBlitz3.ab3@1180>         dos_RemAssign{dynassign}
0001EF62 <AmiBlitz3.ab3@1181>         RemSemaphore_ *AssignSema
0001EF72 <AmiBlitz3.ab3@1182>         ReleaseSemaphore_ *AssignSema
0001EFA8 <AmiBlitz3.ab3@1183>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001EFB8 <AmiBlitz3.ab3@1184>         FreeVec_ *AssignSema
0001EFC0 <AmiBlitz3.ab3@1185>         *AssignSema = #NULL
0001EFEE <AmiBlitz3.ab3@1189>   SetCurrentDir{cli_path}
0001F010 <AmiBlitz3.ab3@1190>   !coutclose
0001F016 <AmiBlitz3.ab3@1191> End
0001F022 <AmiBlitz3.ab3@1196> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F026 <AmiBlitz3.ab3@1197> _dosbase:           Ds.l 1
0001F02C <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001F032 <AmiBlitz3.ab3@1202>   LEA str_doslibrary,A1
0001F036 <AmiBlitz3.ab3@1203>   JSR _OldOpenLibrary(A6)
0001F03C <AmiBlitz3.ab3@1204>   MOVE.l D0,_dosbase
0001F03E <AmiBlitz3.ab3@1205> RTS
0001F044 <AmiBlitz3.ab3@1209>   MOVEA.l #str_mathffpname,A1
0001F04A <AmiBlitz3.ab3@1210>   MOVEA.l _execbase,A6
0001F04E <AmiBlitz3.ab3@1211>   JSR _OldOpenLibrary(A6)
0001F054 <AmiBlitz3.ab3@1212>   MOVE.l D0,_mathffpbase
0001F056 <AmiBlitz3.ab3@1213> RTS
0001F088 <AmiBlitz3.ab3@1221> !ComData_JMP{comFunc_SetNormalPointer}
0001F0BA <AmiBlitz3.ab3@1229> !ComData_JMP{comFunc_SetBusyPointer}
0001F0E4 <AmiBlitz3.ab3@1233>   !basic
0001F0E8 <AmiBlitz3.ab3@1234>   ab3save_filenameP.l = PutD0
0001F0F2 <AmiBlitz3.ab3@1235>   If ab3save_filenameP
0001F11A <AmiBlitz3.ab3@1236>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F148 <AmiBlitz3.ab3@1238>     SaveSource{ab3save_filename}
0001F14E <AmiBlitz3.ab3@1239>   Else
0001F188 <AmiBlitz3.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F1A6 <AmiBlitz3.ab3@1242>   !asm
0001F1A8 <AmiBlitz3.ab3@1243>   RTS
0001F1D2 <AmiBlitz3.ab3@1246>   !basic
0001F1D6 <AmiBlitz3.ab3@1247>   ab3save_filenameP.l = PutD0
0001F1E0 <AmiBlitz3.ab3@1248>   If ab3save_filenameP
0001F208 <AmiBlitz3.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F236 <AmiBlitz3.ab3@1250>     LoadSource{ab3save_filename}
0001F23C <AmiBlitz3.ab3@1251>   Else
0001F276 <AmiBlitz3.ab3@1252>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F294 <AmiBlitz3.ab3@1254>   !asm
0001F296 <AmiBlitz3.ab3@1255>   RTS
0001F2C0 <AmiBlitz3.ab3@1258>   !basic
0001F2C6 <AmiBlitz3.ab3@1259>   ClearSource{}
0001F2E4 <AmiBlitz3.ab3@1260>   !asm
0001F2E6 <AmiBlitz3.ab3@1261>   RTS
0001F310 <AmiBlitz3.ab3@1264>   !basic
0001F316 <AmiBlitz3.ab3@1265>   OpenConsoleFake{}
0001F334 <AmiBlitz3.ab3@1266>   !asm
0001F336 <AmiBlitz3.ab3@1267>   RTS
0001F360 <AmiBlitz3.ab3@1271>   !basic
0001F366 <AmiBlitz3.ab3@1272>   CloseConsoleFake{}
0001F384 <AmiBlitz3.ab3@1273>   !asm
0001F386 <AmiBlitz3.ab3@1274>   RTS
0001F38C <AmiBlitz3.ab3@1278>   MOVE.w d6,menuitemdebug
0001F3B6 <AmiBlitz3.ab3@1279>   !basic
0001F3C8 <AmiBlitz3.ab3@1280>   menuitemx.l = Peek.w(?menuitemdebug)
0001F3EE <AmiBlitz3.ab3@1281>   If menuitemx>16 OR  menuitemx<0
0001F462 <AmiBlitz3.ab3@1282>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F46A <AmiBlitz3.ab3@1283>     menuitemx=0
0001F47A <AmiBlitz3.ab3@1285>   Poke.w ?menuitemdebug,menuitemx
0001F498 <AmiBlitz3.ab3@1286>   !asm
0001F49E <AmiBlitz3.ab3@1287>   MOVE.w menuitemdebug,d6
0001F4A4 <AmiBlitz3.ab3@1290>   MOVE.l A5,firstitem_
0001F4AA <AmiBlitz3.ab3@1291>   MOVE.w D7,numlines_org
0001F4B0 <AmiBlitz3.ab3@1292>   MOVE.l d7,numlines
0001F4B2 <AmiBlitz3.ab3@1293>   LSL.w #2,D6
0001F4B8 <AmiBlitz3.ab3@1294>   LEA menu_items,A0
0001F4BC <AmiBlitz3.ab3@1295>   MOVEA.l $0(A0,D6.W),A0
0001F4C6 <AmiBlitz3.ab3@1296>   MOVE.l #$FFFFffff,linenumat
0001F4D0 <AmiBlitz3.ab3@1297>   MOVE.l #$FFFFffff,compilelinecounter
0001F4D2 <AmiBlitz3.ab3@1300>   JSR (A0)                              ; jsr to the function for the menuitem
0001F4D8 <AmiBlitz3.ab3@1301>   MOVE.l compilelinecounter,D0
0001F4DA <AmiBlitz3.ab3@1302> RTS
0001F4DE <AmiBlitz3.ab3@1304> menuitemdebug: Dc.l 0
0001F4E2 <AmiBlitz3.ab3@1306> mempool                Dc.l 0
0001F4F8 <AmiBlitz3.ab3@1307> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F4FE <AmiBlitz3.ab3@1308> dloaderr:             JSR handle_compileerror
0001F51A <AmiBlitz3.ab3@1309>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F558 <AmiBlitz3.ab3@1317>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F55E <AmiBlitz3.ab3@1318>   LEA str_loaddebugmessage,A2
0001F564 <AmiBlitz3.ab3@1319>   LEA str_blitz3assign,A0
0001F56A <AmiBlitz3.ab3@1320>   LEA str_temp_debugmodulename,A1
0001F56C <AmiBlitz3.ab3@1322>   JSR (A3)                                                  ;open ped filerequest
0001F570 <AmiBlitz3.ab3@1324>   BEQ.w menu_loaddebugmodule_noload
0001F576 <AmiBlitz3.ab3@1325>   MOVE.l D0,ptr_temp_debugmodule
0001F57A <AmiBlitz3.ab3@1326>   BSR.w call_setpointerbusy
0001F580 <AmiBlitz3.ab3@1327> 
0001F586 <AmiBlitz3.ab3@1328>   MOVE.l A7,errstack
0001F590 <AmiBlitz3.ab3@1329>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F596 <AmiBlitz3.ab3@1330>   MOVE.l ptr_temp_debugmodule,D1
0001F59A <AmiBlitz3.ab3@1332>   MOVEA.l _dosbase(PC),A6
0001F59E <AmiBlitz3.ab3@1333>   JSR _LoadSeg(A6)
0001F5A0 <AmiBlitz3.ab3@1334>   MOVE.l D0,D7
0001F5A4 <AmiBlitz3.ab3@1335>   BEQ.w dloaderr
0001F5AA <AmiBlitz3.ab3@1336>   MOVE.l ptr_seg_debugger,D1
0001F5AE <AmiBlitz3.ab3@1337>   BEQ.b menu_loaddebugmodule_ndseg
0001F5B2 <AmiBlitz3.ab3@1338>   MOVEA.l _dosbase(PC),A6
0001F5B6 <AmiBlitz3.ab3@1339>   JSR _UnLoadSeg(A6)
0001F5BA <AmiBlitz3.ab3@1340>   BSR.w call_setpointernormal
0001F5C0 <AmiBlitz3.ab3@1343>   MOVE.l D7,ptr_seg_debugger
0001F5C2 <AmiBlitz3.ab3@1346> RTS
0001F5E0 <AmiBlitz3.ab3@1349> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001F6A0 <AmiBlitz3.ab3@1350> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001F760 <AmiBlitz3.ab3@1351> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001F764 <AmiBlitz3.ab3@1352> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001F78E <AmiBlitz3.ab3@1356>   !basic
0001F7B8 <AmiBlitz3.ab3@1357>   exepath.s = Peek.s(?exepath)
0001F7E2 <AmiBlitz3.ab3@1358>   exefile.s = Peek.s(?exefilename)
0001F862 <AmiBlitz3.ab3@1359>   exefile.s = dos_AddPart{exepath,exefile}
0001F89A <AmiBlitz3.ab3@1360>   Poke.s ?tempspace,exefile
0001F8B8 <AmiBlitz3.ab3@1361>   !asm
0001F8BE <AmiBlitz3.ab3@1382>   LEA tempspace,a0
0001F8C0 <AmiBlitz3.ab3@1383>   MOVE.l a0,d0
0001F8C4 <AmiBlitz3.ab3@1384> BRA newcreate2
0001F8EE <AmiBlitz3.ab3@1390>   !basic
0001F918 <AmiBlitz3.ab3@1391>   request_exename.s = Peek.s(?str_request_exename )
0001F974 <AmiBlitz3.ab3@1392>   request_exename   = !TRANS{request_exename}
0001F97A <AmiBlitz3.ab3@1393>   GetD0 &request_exename
0001F998 <AmiBlitz3.ab3@1394>   !asm
0001F99A <AmiBlitz3.ab3@1395>   MOVE.l D0,A2
0001F9D8 <AmiBlitz3.ab3@1398>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F9DE <AmiBlitz3.ab3@1400>   LEA exepath,A0
0001F9E4 <AmiBlitz3.ab3@1401>   LEA exefilename,A1
0001F9E6 <AmiBlitz3.ab3@1403>   JSR (A3)                                                 ;open ped filerequest
0001F9EA <AmiBlitz3.ab3@1405>   BEQ.w cancel_createexe
0001F9F4 <AmiBlitz3.ab3@1408>   ADD.l #1,number_of_builds
0001F9FA <AmiBlitz3.ab3@1411>   MOVE.l D0,ptr_newexefilename
0001FA02 <AmiBlitz3.ab3@1412>   MOVE.w #-1,debugversion
0001FA08 <AmiBlitz3.ab3@1413>   MOVE.w set_make_smallestcode,-(A7)
0001FA10 <AmiBlitz3.ab3@1417>     MOVE.w #1,makeexec
0001FA16 <AmiBlitz3.ab3@1418>     JSR ab3_OpenDebugFile
0001FA1A <AmiBlitz3.ab3@1419>     BSR.w startcompile
0001FA20 <AmiBlitz3.ab3@1420>     JSR ab3_CloseDebugFile
0001FA2A <AmiBlitz3.ab3@1421>     CMP.l #"NORE",reqmode
0001FA2E <AmiBlitz3.ab3@1422>   BEQ 'l1
0001FA34 <AmiBlitz3.ab3@1424>   TST.w anyerrs
0001FA38 <AmiBlitz3.ab3@1425>   BNE.b menu_createexecutable__skip
0001FA3C <AmiBlitz3.ab3@1426>   BSR.w savefile
0001FA42 <AmiBlitz3.ab3@1429>   MOVE.w (A7)+,set_make_smallestcode
0001FA44 <AmiBlitz3.ab3@1432> RTS
0001FA4C <AmiBlitz3.ab3@1436>   MOVE.w #-1,flag_noPED
0001FA4E <AmiBlitz3.ab3@1437> RTS
0001FA56 <AmiBlitz3.ab3@1441>   MOVE.w #-1,flag_noCLI
0001FA58 <AmiBlitz3.ab3@1442> RTS
0001FA82 <AmiBlitz3.ab3@1445>   !basic
0001FAAA <AmiBlitz3.ab3@1446>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FABA <AmiBlitz3.ab3@1447>     Poke.w ?word_WriteDebugFileNow,0
0001FAD8 <AmiBlitz3.ab3@1448>   !asm
0001FADA <AmiBlitz3.ab3@1449> RTS
0001FB04 <AmiBlitz3.ab3@1452>   !basic
0001FB14 <AmiBlitz3.ab3@1453>   Poke.w ?word_WriteDebugFileNow,0
0001FB26 <AmiBlitz3.ab3@1454>   If dbg_fid>=0
0001FB3C <AmiBlitz3.ab3@1455>     file_Close{dbg_fid} : dbg_fid = -1
0001FB4E <AmiBlitz3.ab3@1457>   If dbg_fid.l<0
0001FB50 <AmiBlitz3.ab3@1458>     CLR.l d0
0001FB8E <AmiBlitz3.ab3@1459>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FB92 <AmiBlitz3.ab3@1460>     dbg_Create.l = PutD0
0001FB9C <AmiBlitz3.ab3@1461>     If (dbg_Create) ; only when set!
0001FBAC <AmiBlitz3.ab3@1462>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FBD4 <AmiBlitz3.ab3@1463>       exefile.s = ""
0001FC06 <AmiBlitz3.ab3@1464>       If exefileP Then exefile.s = Peek.s(exefileP)
0001FC3E <AmiBlitz3.ab3@1465>       If exefile><""
0001FC94 <AmiBlitz3.ab3@1466>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001FCA6 <AmiBlitz3.ab3@1467>         If dbg_fid>=0
0001FCB8 <AmiBlitz3.ab3@1468>           Poke.w ?word_WriteDebugFileNow,-1
0001FCC4 <AmiBlitz3.ab3@1471>       oldhunkoffset.l = -1
0001FCEC <AmiBlitz3.ab3@1472>       oldfile.s       = ""
0001FD0A <AmiBlitz3.ab3@1475>   !asm
0001FD0C <AmiBlitz3.ab3@1476> RTS
0001FD12 <AmiBlitz3.ab3@1479> TST.w word_WriteDebugFileNow
0001FD16 <AmiBlitz3.ab3@1480> BEQ 'skipdebugfile
0001FD40 <AmiBlitz3.ab3@1481> !basic
0001FD52 <AmiBlitz3.ab3@1482>   If dbg_fid>=0
0001FD64 <AmiBlitz3.ab3@1483>     pass.l          = Peek.w(?pass)
0001FD76 <AmiBlitz3.ab3@1484>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001FD9A <AmiBlitz3.ab3@1485> 
0001FDA0 <AmiBlitz3.ab3@1486>       oldhunkoffset.l = hunkoffset.l
0001FDD4 <AmiBlitz3.ab3@1487>       oldfile.s       = codefile.s
0001FDF0 <AmiBlitz3.ab3@1488>       If Peek.w (?ininclude)>0
0001FE00 <AmiBlitz3.ab3@1489>         codeline.l = Peek.l(?includeline);-1
0001FE70 <AmiBlitz3.ab3@1490>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001FE76 <AmiBlitz3.ab3@1491>       Else
0001FEA4 <AmiBlitz3.ab3@1492>         !ComData_LEA{comStr_SourceName,A0}
0001FEA6 <AmiBlitz3.ab3@1493>         MOVE.l A0,D0
0001FEAA <AmiBlitz3.ab3@1494>         sourceP.l = PutD0
0001FED2 <AmiBlitz3.ab3@1495>         codefile.s = Peek.s(sourceP)
0001FEE2 <AmiBlitz3.ab3@1496>         codeline.l = Peek.l(?linenumat)
0001FF0A <AmiBlitz3.ab3@1498>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001FF5E <AmiBlitz3.ab3@1499>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001FF6E <AmiBlitz3.ab3@1506>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001FF78 <AmiBlitz3.ab3@1507>         If *sourceLine
0001FF8E <AmiBlitz3.ab3@1508>           MaxLen detokenline.s = 65536
0001FFD0 <AmiBlitz3.ab3@1509>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001FFE0 <AmiBlitz3.ab3@1510>          *tn.preprocessor = Peek.l(?include_preprocessor)
0002000C <AmiBlitz3.ab3@1511>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0002003A <AmiBlitz3.ab3@1512>           If written>0 Then Poke.b &detokenline+written-1,0
00020064 <AmiBlitz3.ab3@1513>           sourceLineText.s = Peek.s(&detokenline)
0002006A <AmiBlitz3.ab3@1514>         Else
00020092 <AmiBlitz3.ab3@1515>           sourceLineText = "NULL"
0002015A <AmiBlitz3.ab3@1518>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00020178 <AmiBlitz3.ab3@1524> !asm
0002017A <AmiBlitz3.ab3@1526> RTS
0002017C <AmiBlitz3.ab3@1528> word_WriteDebugFileNow: Dc.w 0
0002017E <AmiBlitz3.ab3@1530> flag_noPED:  Ds.w 1                                        ;closeed org source
00020180 <AmiBlitz3.ab3@1531> flag_noCLI:  Ds.w 1                                        ;nocli org source
00020184 <AmiBlitz3.ab3@1535>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002018A <AmiBlitz3.ab3@1536>   MOVEA.l _execbase,A6
0002018E <AmiBlitz3.ab3@1537>   JSR _CacheClearU(A6)
00020192 <AmiBlitz3.ab3@1538>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020194 <AmiBlitz3.ab3@1539> RTS
00020198 <AmiBlitz3.ab3@1542>   MOVEM.l A2-A3,-(A7)
0002019E <AmiBlitz3.ab3@1543>   CLR.b doublepeek
000201A4 <AmiBlitz3.ab3@1544>   MOVE.l A5,lastsourcepos
000201AA <AmiBlitz3.ab3@1545>    JSR getchar
000201AE <AmiBlitz3.ab3@1546>   CMP.w #$2E,D0
000201B2 <AmiBlitz3.ab3@1547>    BEQ.w JL_0_49B4b
000201B8 <AmiBlitz3.ab3@1548>   MOVEA.l defaulttype,A2
000201BC <AmiBlitz3.ab3@1549>   CMP.w #$24,D0
000201C0 <AmiBlitz3.ab3@1550>    BNE.w JL_0_49CAb
000201C2 <AmiBlitz3.ab3@1551>   MOVEQ.l #$07,D1
000201C6 <AmiBlitz3.ab3@1552> BRA.w JL_0_49DEb
000201CC <AmiBlitz3.ab3@1555>   JSR getparameter2
000201D0 <AmiBlitz3.ab3@1556>   BEQ.w syntaxerrb
000201D6 <AmiBlitz3.ab3@1557>   LEA newtypebase,A2
000201DC <AmiBlitz3.ab3@1558>   JSR findtype
000201E0 <AmiBlitz3.ab3@1559>   BNE.w notypeerrb
000201EA <AmiBlitz3.ab3@1564>   MOVE.w oldqflag,instringon
000201F0 <AmiBlitz3.ab3@1565>   MOVEA.l lastsourcepos,A5
000201F6 <AmiBlitz3.ab3@1567>   MOVE.l a2,functionreturntype
000201FE <AmiBlitz3.ab3@1568>   CMPI.l #$100,$4(A2)
00020202 <AmiBlitz3.ab3@1569>   BLE.w 'isvar
00020204 <AmiBlitz3.ab3@1573>   MOVEQ #3,d1
00020208 <AmiBlitz3.ab3@1574>   BRA JL_0_49DEb
0002020C <AmiBlitz3.ab3@1581>   MOVE.w $6(A2),D1
00020212 <AmiBlitz3.ab3@1582>   CMP.w #8,8(a2)
00020216 <AmiBlitz3.ab3@1583>   BNE 'l1
0002021E <AmiBlitz3.ab3@1584>   MOVE.b #1,doublepeek
00020224 <AmiBlitz3.ab3@1588>   MOVE.w D1,convsize
00020228 <AmiBlitz3.ab3@1589>   MOVEM.l (A7)+,A2-A3
0002022A <AmiBlitz3.ab3@1590> RTS
00020230 <AmiBlitz3.ab3@1592> notypeerrb JMP notypeerr
00020236 <AmiBlitz3.ab3@1593> illtypeerrb JMP illtypeerr
0002023C <AmiBlitz3.ab3@1594> syntaxerrb JMP syntaxerr
00020246 <AmiBlitz3.ab3@1639>   ADD.l #1,number_of_builds
0002024C <AmiBlitz3.ab3@1641>   CLR.w debugversion
00020252 <AmiBlitz3.ab3@1642>   CLR.w flag_noPED
00020258 <AmiBlitz3.ab3@1643>   CLR.w flag_noCLI
00020260 <AmiBlitz3.ab3@1646>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020264 <AmiBlitz3.ab3@1647>     BSR.w startcompile
0002026E <AmiBlitz3.ab3@1648>     CMP.l #"NORE",reqmode
00020272 <AmiBlitz3.ab3@1649>   BEQ 'l1
00020278 <AmiBlitz3.ab3@1652>   TST.w anyerrs
0002027C <AmiBlitz3.ab3@1653>    BNE.w JL_0_3482
00020280 <AmiBlitz3.ab3@1655>   MOVE.w flag_noPED(PC),D1
00020284 <AmiBlitz3.ab3@1656>    BEQ.w skip_closingGUI
000202B6 <AmiBlitz3.ab3@1661>   !ComData_JSR{comFunc_CloseGUI}
000202BA <AmiBlitz3.ab3@1662> BRA.b runprogram
000202BE <AmiBlitz3.ab3@1666>   BSR.w compilerequester
000202C4 <AmiBlitz3.ab3@1669>   MOVEA.l _dosbase,A6
000202CA <AmiBlitz3.ab3@1670>   LEA exepath,a0
000202CC <AmiBlitz3.ab3@1671>   MOVE.l a0,d1
000202CE <AmiBlitz3.ab3@1672>   MOVEQ #-2,d2
000202D2 <AmiBlitz3.ab3@1673>   JSR _Lock(a6)                                            ;lock
000202D8 <AmiBlitz3.ab3@1674>   MOVE.l d0,exelock
000202DE <AmiBlitz3.ab3@1675>   MOVE.l #0,d1
000202E2 <AmiBlitz3.ab3@1676>   JSR _CurrentDir(A6)
000202E8 <AmiBlitz3.ab3@1677>   MOVE.l D0,lock_currentdir
000202EA <AmiBlitz3.ab3@1678>   MOVE.l D0,D1
000202EE <AmiBlitz3.ab3@1679>   JSR _CurrentDir(A6)
000202F4 <AmiBlitz3.ab3@1680>   CLR.l ptr_exetask
000202FA <AmiBlitz3.ab3@1689>   MOVE.l #str_process_name,D1
000202FC <AmiBlitz3.ab3@1690>   MOVEQ.l #$00,D2
00020302 <AmiBlitz3.ab3@1691>   MOVE.l #proc_seglist,D3
00020304 <AmiBlitz3.ab3@1692>   LSR.l #2,D3
0002030A <AmiBlitz3.ab3@1693>   MOVE.l stacksize,D4
00020310 <AmiBlitz3.ab3@1694>   MOVEA.l _dosbase,A6
00020314 <AmiBlitz3.ab3@1695>   JSR _CreateProc(A6)                                      ;runtask
00020316 <AmiBlitz3.ab3@1696>   TST.l D0
0002031A <AmiBlitz3.ab3@1697>    BEQ ErrorRunningProg
00020350 <AmiBlitz3.ab3@1699>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020356 <AmiBlitz3.ab3@1701>   TST.w flag_noPED
0002035A <AmiBlitz3.ab3@1702>    BNE.b JL_0_344E
0002035E <AmiBlitz3.ab3@1703>   BSR.w close_compilewin
00020364 <AmiBlitz3.ab3@1706>   CLR.l firstlocal
0002036A <AmiBlitz3.ab3@1707>   CLR.l firstglob
0002036E <AmiBlitz3.ab3@1708>   MOVE.w flag_noPED(PC),D1
00020372 <AmiBlitz3.ab3@1709>   BEQ.w skip_openGUI
000203A4 <AmiBlitz3.ab3@1713>   !ComData_JSR{comFunc_CreateGUI}
000203A6 <AmiBlitz3.ab3@1723> RTS
000203B0 <AmiBlitz3.ab3@1726> MOVE.l #1,_runerror
000203B4 <AmiBlitz3.ab3@1727> BRA JL_0_344E
000203B8 <AmiBlitz3.ab3@1729> _runerror: Dc.l 0
000203BC <AmiBlitz3.ab3@1730> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000203C0 <AmiBlitz3.ab3@1731> ptr_exetask:        Ds.l 1                                          ;panictask org source
000203C4 <AmiBlitz3.ab3@1732> signalNum:          Ds.l 1                                          ;panicbit org source
000203C8 <AmiBlitz3.ab3@1733> signals:            Ds.l 1                                          ;panicmask org source
000203DE <AmiBlitz3.ab3@1735> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000203E3 <AmiBlitz3.ab3@1736>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000203E4 <AmiBlitz3.ab3@1737> Even4
000203E8 <AmiBlitz3.ab3@1739> ptr_ThisTask:       Ds.l 1                                          ;length
000203EC <AmiBlitz3.ab3@1740> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000203F2 <AmiBlitz3.ab3@1744>   MOVEA.l $4,A0
000203FA <AmiBlitz3.ab3@1745>   MOVE.l  $114(A0),ptr_exetask
00020400 <AmiBlitz3.ab3@1747>   MOVEA.l _dosbase,A6
00020406 <AmiBlitz3.ab3@1748>   MOVE.l exelock,D1
0002040A <AmiBlitz3.ab3@1749>   JSR _CurrentDir(A6)
00020440 <AmiBlitz3.ab3@1754>   !ComData_SetB{comByte_RunningFlag,#1}
00020444 <AmiBlitz3.ab3@1760>   MOVE.w flag_noCLI(PC),D1
00020448 <AmiBlitz3.ab3@1761>    BNE.b skip_openconsole
0002047A <AmiBlitz3.ab3@1765>   !ComData_JSR{comFunc_OpenConsole}
0002047E <AmiBlitz3.ab3@1768>   BSR.w calcvbr
00020484 <AmiBlitz3.ab3@1769>   MOVEA.l vbr,A0
0002048A <AmiBlitz3.ab3@1774>   CLR.w dirmode
00020490 <AmiBlitz3.ab3@1775>   CLR.l firstglob
00020496 <AmiBlitz3.ab3@1776>   CLR.l firstlocal
0002049C <AmiBlitz3.ab3@1778>   MOVE.l stacksize,D2
000204A2 <AmiBlitz3.ab3@1779>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
000204A8 <AmiBlitz3.ab3@1780>   LEA str_cliarguments,A0                                   ;cli arguement
000204AE <AmiBlitz3.ab3@1781>   MOVEA.l destbufferstart,A1
000204B2 <AmiBlitz3.ab3@1782>   BSR.w Aclearcache
000204B4 <AmiBlitz3.ab3@1785>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000204BA <AmiBlitz3.ab3@1787>   MOVEA.l vbr,A0
000204C0 <AmiBlitz3.ab3@1789>   CLR.l firstglob
000204C6 <AmiBlitz3.ab3@1790>   CLR.l firstlocal
000204CC <AmiBlitz3.ab3@1791>   MOVEA.l _dosbase,A6
000204D2 <AmiBlitz3.ab3@1792>   MOVE.l exelock,d1
000204D6 <AmiBlitz3.ab3@1793>   BEQ 'nolock
000204DA <AmiBlitz3.ab3@1794>   JSR _UnLock(a6)
00020510 <AmiBlitz3.ab3@1799>   !ComData_SetB{comByte_RunningFlag,#0}
00020514 <AmiBlitz3.ab3@1802>   MOVE.w flag_noCLI(PC),D1
00020518 <AmiBlitz3.ab3@1803>    BNE.b skip_closeconsole
0002054A <AmiBlitz3.ab3@1807>   !ComData_JSR{comFunc_CloseConsole}
00020552 <AmiBlitz3.ab3@1810>   MOVE.w #$0001,stopit
00020556 <AmiBlitz3.ab3@1811>   MOVE.l signals(PC),D0
0002055C <AmiBlitz3.ab3@1812>   MOVEA.l ptr_ThisTask,A1
00020562 <AmiBlitz3.ab3@1813>   MOVEA.l _execbase,A6
00020566 <AmiBlitz3.ab3@1814>   JSR _Signal(A6)
00020568 <AmiBlitz3.ab3@1815> RTS
0002056E <AmiBlitz3.ab3@1819>   MOVEA.l _execbase,A6
00020572 <AmiBlitz3.ab3@1820>   MOVE.w $128(A6),D0
00020574 <AmiBlitz3.ab3@1821>   MOVEQ.l #$00,D1
00020578 <AmiBlitz3.ab3@1822>   ANDI.w #$F,D0
0002057C <AmiBlitz3.ab3@1825>     BEQ.b calcvbr__skip
0002057E <AmiBlitz3.ab3@1826>     ADDQ.w #1,D1
00020580 <AmiBlitz3.ab3@1827>     LSR.w #1,D0
00020584 <AmiBlitz3.ab3@1828> BRA.b calcvbr_loop
00020586 <AmiBlitz3.ab3@1831>   MOVEQ.l #$00,D2
0002058A <AmiBlitz3.ab3@1832>   CMP.w #$2,D1
0002058E <AmiBlitz3.ab3@1833>    BCS.b calcvbr__skip2
00020594 <AmiBlitz3.ab3@1834>   MOVEA.l _execbase,A6
00020598 <AmiBlitz3.ab3@1835>   JSR _SuperState(A6)
0002059C <AmiBlitz3.ab3@1836>   Dc.l $4E7A2801                                           ;movec vbr,D2
000205A0 <AmiBlitz3.ab3@1837>   JSR _UserState(A6)
000205A6 <AmiBlitz3.ab3@1840>   MOVE.l D2,vbr
000205A8 <AmiBlitz3.ab3@1841> RTS
000205AE <AmiBlitz3.ab3@1845>   LEA instrtab,a0
000205B4 <AmiBlitz3.ab3@1846>   MOVE.l #labelhash-instrtab,d0
000205B6 <AmiBlitz3.ab3@1847>   ASR.l #2,d0
000205B8 <AmiBlitz3.ab3@1848>   SUBQ.l #1,d0
000205BA <AmiBlitz3.ab3@1851>   CLR.l (a0)+
000205BC <AmiBlitz3.ab3@1852>   SUBQ.l #1,d0
000205C0 <AmiBlitz3.ab3@1853>   BNE 'l10
000205C4 <AmiBlitz3.ab3@1854>   BSR.w call_setpointerbusy
000205C8 <AmiBlitz3.ab3@1855>   BSR.w free_userlibs
000205CC <AmiBlitz3.ab3@1856>   BSR.w scan_for_userlibs
000205D0 <AmiBlitz3.ab3@1857>   BSR.w JL_0_7082
000205D4 <AmiBlitz3.ab3@1858> BRA.w call_setpointernormal
000205FE <AmiBlitz3.ab3@1864>   !basic
00020638 <AmiBlitz3.ab3@1865>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020648 <AmiBlitz3.ab3@1867>   deflibNameP.l = Peek.l(?deflib)
00020652 <AmiBlitz3.ab3@1868>   If deflibNameP
00020684 <AmiBlitz3.ab3@1869>     If Peek.s(deflibNameP)<>""
000206CE <AmiBlitz3.ab3@1870>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
000206D4 <AmiBlitz3.ab3@1871>     Else
0002070E <AmiBlitz3.ab3@1872>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020714 <AmiBlitz3.ab3@1874>   Else
0002074E <AmiBlitz3.ab3@1875>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020788 <AmiBlitz3.ab3@1876>     error{"INTERNAL: Invalid deflib name pointer!"}
000207A6 <AmiBlitz3.ab3@1878>   !asm
000207AC <AmiBlitz3.ab3@1883>   MOVE.l #str_path_userlibs,D1
000207AE <AmiBlitz3.ab3@1884>   MOVEQ.l #-$02,D2
000207B4 <AmiBlitz3.ab3@1885>   MOVEA.l _dosbase,A6
000207B8 <AmiBlitz3.ab3@1886>   JSR _Lock(A6)
000207BA <AmiBlitz3.ab3@1887>   MOVE.l D0,D7
000207BE <AmiBlitz3.ab3@1888>    BEQ.w exit_get_libraries
000207C0 <AmiBlitz3.ab3@1889>   MOVE.l D7,D1
000207C6 <AmiBlitz3.ab3@1890>   MOVE.l #ptr_parameterstore,D2
000207CA <AmiBlitz3.ab3@1891>   JSR _Examine(A6)
000207CC <AmiBlitz3.ab3@1892>   TST.l D0
000207D0 <AmiBlitz3.ab3@1893>   BEQ.w unlock_and_exit_get_libraries
000207D6 <AmiBlitz3.ab3@1894>   MOVE.l fib_DirEntryType,D0
000207DA <AmiBlitz3.ab3@1895>   BMI.w unlock_and_exit_get_libraries
000207DC <AmiBlitz3.ab3@1900>     MOVE.l D7,D1
000207E2 <AmiBlitz3.ab3@1901>     MOVE.l #ptr_parameterstore,D2
000207E8 <AmiBlitz3.ab3@1902>     MOVEA.l _dosbase,A6
000207EC <AmiBlitz3.ab3@1903>     JSR _ExNext(A6)
000207EE <AmiBlitz3.ab3@1904>     TST.l D0
000207F2 <AmiBlitz3.ab3@1905>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000207F8 <AmiBlitz3.ab3@1907>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000207FC <AmiBlitz3.ab3@1908>     BPL.w scan_libsdrawer                                  ; skip directories
00020802 <AmiBlitz3.ab3@1910>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020806 <AmiBlitz3.ab3@1911>     BSR.w check_for_infoextention
0002080A <AmiBlitz3.ab3@1912>     BEQ.w scan_libsdrawer
00020810 <AmiBlitz3.ab3@1914>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020812 <AmiBlitz3.ab3@1915>     MOVEQ.l #$26,D0
00020814 <AmiBlitz3.ab3@1916>     MOVEQ.l #$01,D1
0002081A <AmiBlitz3.ab3@1917>     MOVE.l mempool,a0
0002081E <AmiBlitz3.ab3@1918>     JSR _AllocPooled(a6)
00020824 <AmiBlitz3.ab3@1920>     MOVEA.l _dosbase,A6
00020826 <AmiBlitz3.ab3@1921>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0002082C <AmiBlitz3.ab3@1924>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0002082E <AmiBlitz3.ab3@1927>     MOVE.l (A0),D5
00020832 <AmiBlitz3.ab3@1928>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020834 <AmiBlitz3.ab3@1929>     MOVEA.l D5,A2
00020836 <AmiBlitz3.ab3@1930>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0002083C <AmiBlitz3.ab3@1933>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0002083E <AmiBlitz3.ab3@1936>       MOVEQ.l #$00,D0
00020840 <AmiBlitz3.ab3@1937>       MOVE.b (A1)+,D0
00020844 <AmiBlitz3.ab3@1938>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020846 <AmiBlitz3.ab3@1939>       MOVEQ.l #$00,D1
00020848 <AmiBlitz3.ab3@1940>       MOVE.b (A2)+,D1
0002084C <AmiBlitz3.ab3@1941>        BEQ.w JL_0_371C
0002086E <AmiBlitz3.ab3@1942>       !compare1                                            ;bsr.w tstalpha
00020872 <AmiBlitz3.ab3@1943>       BNE.w JL_0_3702
00020876 <AmiBlitz3.ab3@1944>       ANDI.w #$DF,D0
00020878 <AmiBlitz3.ab3@1947>       EXG.l D0,D1
0002089A <AmiBlitz3.ab3@1948>       !compare1                                            ;bsr.w tstalpha
0002089E <AmiBlitz3.ab3@1949>       BNE.w JL_0_3710
000208A2 <AmiBlitz3.ab3@1950>       ANDI.w #$DF,D0
000208A4 <AmiBlitz3.ab3@1953>       EXG.l D0,D1
000208A6 <AmiBlitz3.ab3@1954>       CMP.b D1,D0
000208AA <AmiBlitz3.ab3@1955>     BEQ.w JL_0_36E6
000208AE <AmiBlitz3.ab3@1956>     BCS.w JL_0_3722
000208B0 <AmiBlitz3.ab3@1959>     MOVEA.l D5,A0
000208B4 <AmiBlitz3.ab3@1960> BRA.w JL_0_36D6
000208B6 <AmiBlitz3.ab3@1963>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
000208B8 <AmiBlitz3.ab3@1964>     MOVE.l (A0),(A1)
000208BA <AmiBlitz3.ab3@1965>     MOVE.l A1,(A0)
000208BC <AmiBlitz3.ab3@1966>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
000208C0 <AmiBlitz3.ab3@1967>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
000208C6 <AmiBlitz3.ab3@1968>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
000208C8 <AmiBlitz3.ab3@1971>       MOVE.b (A0)+,(A1)+
000208CC <AmiBlitz3.ab3@1972>     BNE.w JL_0_3734
000208D0 <AmiBlitz3.ab3@1973> BRA.w scan_libsdrawer
000208D2 <AmiBlitz3.ab3@1976>   MOVE.l D7,D1
000208D8 <AmiBlitz3.ab3@1977>   MOVEA.l _dosbase,A6
000208DC <AmiBlitz3.ab3@1978>   JSR _UnLock(A6)
000208DE <AmiBlitz3.ab3@1979>   MOVEQ.l #-$01,D0
000208E0 <AmiBlitz3.ab3@1982> RTS
000208E2 <AmiBlitz3.ab3@1985>   MOVE.l D7,D1
000208E8 <AmiBlitz3.ab3@1986>   MOVEA.l _dosbase,A6
000208EC <AmiBlitz3.ab3@1987>   JSR _UnLock(A6)
000208EE <AmiBlitz3.ab3@1988>   MOVEQ.l #$00,D0
000208F0 <AmiBlitz3.ab3@1989> RTS
000208F6 <AmiBlitz3.ab3@1993>   MOVEA.l _execbase,A6
000208FC <AmiBlitz3.ab3@1994>   MOVEA.l ptr_userlibs_list,A2
00020902 <AmiBlitz3.ab3@1995>   CLR.l ptr_userlibs_list
00020906 <AmiBlitz3.ab3@1998>     CMPA.w #$0,A2
0002090A <AmiBlitz3.ab3@1999>     BEQ.w exit_free_userlib
0002090C <AmiBlitz3.ab3@2000>       MOVEA.l A2,A1
0002090E <AmiBlitz3.ab3@2001>       MOVEQ.l #$26,D0
00020910 <AmiBlitz3.ab3@2002>       MOVEA.l (A2),A2
00020916 <AmiBlitz3.ab3@2003>       MOVE.l mempool,a0
0002091C <AmiBlitz3.ab3@2004>       MOVEA.l _execbase,A6
00020920 <AmiBlitz3.ab3@2005>       JSR _FreePooled(A6)
00020924 <AmiBlitz3.ab3@2006> BRA.w loop_free_userlib
00020926 <AmiBlitz3.ab3@2009> RTS
00020928 <AmiBlitz3.ab3@2012> pass:  Dc.w 0                                             ; smallpass org source
0002092A <AmiBlitz3.ab3@2013> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020930 <AmiBlitz3.ab3@2017>   MOVE.l A7,errstack                                      ;startcompile
00020936 <AmiBlitz3.ab3@2026>   CLR.l reqmode
00020940 <AmiBlitz3.ab3@2028>   MOVE.l #Aclearallvars,errcont
0002094A <AmiBlitz3.ab3@2029>   MOVE.l #concomstack,concomsp
0002094E <AmiBlitz3.ab3@2037>   MOVE.w #1450,D0
00020950 <AmiBlitz3.ab3@2038>   LSR.w #3,D0
00020952 <AmiBlitz3.ab3@2039>   SUBQ.w #7,D0                                             ; 173
00020958 <AmiBlitz3.ab3@2040>   MOVE.w D0,progressbar_width
0002095A <AmiBlitz3.ab3@2041>   SWAP D0
0002095C <AmiBlitz3.ab3@2042>   CLR.w D0
00020962 <AmiBlitz3.ab3@2043>   MOVE.l numlines,d1
00020966 <AmiBlitz3.ab3@2044>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020968 <AmiBlitz3.ab3@2046>   TST.w D0
0002096C <AmiBlitz3.ab3@2047>   BNE.w JL_0_37C0
0002096E <AmiBlitz3.ab3@2048>   MOVEQ.l #-$01,D0
00020974 <AmiBlitz3.ab3@2051>   MOVE.w D0,progress_per_line
0002097C <AmiBlitz3.ab3@2060>   BTST #$7,use_debugger
00020980 <AmiBlitz3.ab3@2062>   BNE 'debugon
00020986 <AmiBlitz3.ab3@2063>   CLR.w debugmode
0002098A <AmiBlitz3.ab3@2064> BRA.b 'debugoff
00020990 <AmiBlitz3.ab3@2067>   SNE debugmode
000209C8 <AmiBlitz3.ab3@2075>   !ComData_SetB{comByte_DebugMode,debugmode}
000209CE <AmiBlitz3.ab3@2078>   CLR.w dirmode                                            ;direct mode flag
000209D4 <AmiBlitz3.ab3@2079>   CLR.w ezerr                                              ;quiet error
000209DA <AmiBlitz3.ab3@2080>   CLR.l currentfunction
000209E0 <AmiBlitz3.ab3@2081>   CLR.w connest
000209E6 <AmiBlitz3.ab3@2082>   CLR.w varmode
000209EC <AmiBlitz3.ab3@2083>   CLR.w proceduremode
000209F2 <AmiBlitz3.ab3@2084>   CLR.w ininclude
000209F8 <AmiBlitz3.ab3@2085>   CLR.w intstring
000209FE <AmiBlitz3.ab3@2086>   CLR.w pass
00020A06 <AmiBlitz3.ab3@2087>   MOVE.w #0,compiler_job
00020A0C <AmiBlitz3.ab3@2088>   CLR.l funcscanon
00020A12 <AmiBlitz3.ab3@2097>   CLR.l funcscanon
00020A16 <AmiBlitz3.ab3@2098>   BSR.w compileall
00020A1C <AmiBlitz3.ab3@2099> 
00020A22 <AmiBlitz3.ab3@2100>   TST.l errorcounter
00020A26 <AmiBlitz3.ab3@2101>   BEQ _skiperrorstop
00020A28 <AmiBlitz3.ab3@2102>   RTS
00020A2E <AmiBlitz3.ab3@2105>   MOVE.w dontwrite,d0
00020A32 <AmiBlitz3.ab3@2106>   CMP.w #1,d0
00020A36 <AmiBlitz3.ab3@2107>   BNE 'l3
00020A3C <AmiBlitz3.ab3@2108>   TST.l errorcounter
00020A40 <AmiBlitz3.ab3@2109>   BNE 'l3
00020A46 <AmiBlitz3.ab3@2110>   CLR.w dontwrite
00020A4A <AmiBlitz3.ab3@2111>   BSR compileall                                           ;if a function is not found
00020A50 <AmiBlitz3.ab3@2112>   ADDQ.w #1,pass
00020A8E <AmiBlitz3.ab3@2117>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020A92 <AmiBlitz3.ab3@2118>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020A98 <AmiBlitz3.ab3@2119>   LEA firstproc,a0
00020A9E <AmiBlitz3.ab3@2120>   CLR.l savefuncspace
00020AA0 <AmiBlitz3.ab3@2121>   MOVE.l (a0),d0
00020AA2 <AmiBlitz3.ab3@2125>     MOVE.l d0,a0
00020AA6 <AmiBlitz3.ab3@2126>     BEQ 'out
00020AAA <AmiBlitz3.ab3@2127>     TST.b isfunc(a0)
00020AAE <AmiBlitz3.ab3@2128>     BNE 'nex
00020AB2 <AmiBlitz3.ab3@2129>     MOVEM.l d2/a6/a0,-(a7)
00020AB4 <AmiBlitz3.ab3@2131>     MOVEQ #0,d0
00020AB8 <AmiBlitz3.ab3@2132>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020ABC <AmiBlitz3.ab3@2133>     SUB.w #$21+#funcentry_extend,d0
00020AC0 <AmiBlitz3.ab3@2134>     ADD.w #16,d0
00020AC6 <AmiBlitz3.ab3@2135>     MOVE.l #$10000,d1
00020AC8 <AmiBlitz3.ab3@2136>     MOVE.l d0,d2
00020ACE <AmiBlitz3.ab3@2137>     MOVEA.l _execbase,A6
00020AD2 <AmiBlitz3.ab3@2138>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020AD4 <AmiBlitz3.ab3@2139>     MOVE.l d0,a1
00020AD8 <AmiBlitz3.ab3@2140>     MOVE.l d2,4(a1)
00020ADE <AmiBlitz3.ab3@2141>     MOVE.l unusedfunc,(a1)
00020AE4 <AmiBlitz3.ab3@2142>     MOVE.l d0,unusedfunc
00020AE8 <AmiBlitz3.ab3@2143>     MOVEM.l (a7)+,a6/a0/d2
00020AEC <AmiBlitz3.ab3@2144>     MOVE.l isfunc+1(a0),d0
00020AEE <AmiBlitz3.ab3@2145>     ADDQ.l #6,d0
00020AF4 <AmiBlitz3.ab3@2146>     ADD.l d0,savefuncspace
00020AF8 <AmiBlitz3.ab3@2149>     MOVE.l d0,8(a1)
00020AFC <AmiBlitz3.ab3@2150>     LEA 12(a1),a1
00020AFE <AmiBlitz3.ab3@2151>     MOVE.l a0,-(a7)
00020B02 <AmiBlitz3.ab3@2152>     LEA $21+#funcentry_extend(a0),a0
00020B04 <AmiBlitz3.ab3@2155>       MOVE.b (a0)+,(a1)+
00020B08 <AmiBlitz3.ab3@2156>     BNE 'l1
00020B0A <AmiBlitz3.ab3@2157>     MOVE.l (a7)+,a0
00020B0C <AmiBlitz3.ab3@2160>     MOVE.l (a0),d0
00020B10 <AmiBlitz3.ab3@2161> BRA 'lr1
00020B18 <AmiBlitz3.ab3@2164>   BTST #$7,make_smallestcode
00020B1C <AmiBlitz3.ab3@2165>   BEQ.b JL_0_3844                                           ;optimize for executable
00020B22 <AmiBlitz3.ab3@2166>   CLR.l morememadd
00020B26 <AmiBlitz3.ab3@2168>   BSR.w alloxadj
00020B2A <AmiBlitz3.ab3@2169>   BEQ.w JL_0_388A
00020B2E <AmiBlitz3.ab3@2172>   BSR.w compileall
00020B34 <AmiBlitz3.ab3@2173>   ADDQ.w #1,pass
00020B3A <AmiBlitz3.ab3@2176>   MOVE.w dontwrite,D1
00020B3E <AmiBlitz3.ab3@2177>   BEQ.w JL_0_38A2
00020B42 <AmiBlitz3.ab3@2197> BRA.w JL_0_3896
00020B4A <AmiBlitz3.ab3@2208>   MOVE.w #$FFFF,anyerrs
00020B4E <AmiBlitz3.ab3@2209> BRA.w JL_0_38A2
00020B52 <AmiBlitz3.ab3@2212>   BSR.w alloxinc                                          ;increase all by 50%
00020B56 <AmiBlitz3.ab3@2213>   BEQ.w Aclearallvars
00020B5A <AmiBlitz3.ab3@2214> BRA.w JL_0_3824
00020B5E <AmiBlitz3.ab3@2226> BRA.w JL_0_38A6                                            ;???????
00020B64 <AmiBlitz3.ab3@2230>   JSR freereps
00020B6A <AmiBlitz3.ab3@2231>   JSR freesels
00020B70 <AmiBlitz3.ab3@2232>   JSR AJL_0_6DF2
00020B76 <AmiBlitz3.ab3@2233>   JSR freepends
00020B7C <AmiBlitz3.ab3@2234>   JSR freeifs
00020B82 <AmiBlitz3.ab3@2235>   JSR AJL_0_C188
00020B88 <AmiBlitz3.ab3@2236>   JSR AJL_0_C15C
00020B8E <AmiBlitz3.ab3@2237>   JSR AJL_0_D9BC
00020B94 <AmiBlitz3.ab3@2240> JMP cleartemplabel
00020B98 <AmiBlitz3.ab3@2243> mempool2:  Dc.l 0
00020B9E <AmiBlitz3.ab3@2247>   JSR Aclearcache
00020BA6 <AmiBlitz3.ab3@2249>   BTST #$7,use_debugger
00020BAA <AmiBlitz3.ab3@2251>   BNE 'debugon
00020BB0 <AmiBlitz3.ab3@2252>   CLR.w debugmode
00020BB4 <AmiBlitz3.ab3@2253> BRA.b 'debugoff
00020BBA <AmiBlitz3.ab3@2256>   SNE debugmode
00020BF2 <AmiBlitz3.ab3@2261>   !ComData_SetB{comByte_DebugMode,debugmode}
00020BF8 <AmiBlitz3.ab3@2263>   LEA regtable,a0
00020BFA <AmiBlitz3.ab3@2264>   MOVEQ #10,d0
00020BFC <AmiBlitz3.ab3@2267>     CLR.l (a0)+
00020C00 <AmiBlitz3.ab3@2268>   DBF d0,'l1
00020C06 <AmiBlitz3.ab3@2270>   LEA includetemp2,a0
00020C08 <AmiBlitz3.ab3@2271>   CLR.b (a0)
00020C12 <AmiBlitz3.ab3@2272>   MOVE.l #7,maxregs
00020C18 <AmiBlitz3.ab3@2273>   CLR.w debugnest
00020C1E <AmiBlitz3.ab3@2274>   CLR.b funcparloop
00020C24 <AmiBlitz3.ab3@2275>   CLR.b nostringopt
00020C2A <AmiBlitz3.ab3@2276>   CLR.b firsttime
00020C30 <AmiBlitz3.ab3@2277>   CLR.l lastdestpointer
00020C36 <AmiBlitz3.ab3@2278>   CLR.l lastwritedat
00020C3C <AmiBlitz3.ab3@2279>   CLR.l prevwritedat
00020C42 <AmiBlitz3.ab3@2280>   CLR.l includeline
00020C48 <AmiBlitz3.ab3@2281>   CLR.b incnif
00020C4E <AmiBlitz3.ab3@2282>   CLR.b formode
00020C54 <AmiBlitz3.ab3@2283>   CLR.b funccall
00020C5A <AmiBlitz3.ab3@2284>   CLR.w objectcount
00020C60 <AmiBlitz3.ab3@2285>   CLR.b resdisable
00020C66 <AmiBlitz3.ab3@2286>   CLR.b developobject
00020C6C <AmiBlitz3.ab3@2287>   CLR.b optistring
00020C72 <AmiBlitz3.ab3@2288>   CLR.b optistring2
00020C78 <AmiBlitz3.ab3@2289>   CLR.b optiarray
00020C7E <AmiBlitz3.ab3@2290>   CLR.b quickadd
00020C84 <AmiBlitz3.ab3@2291>   CLR.w newmode
00020C8A <AmiBlitz3.ab3@2292>   CLR.w mode
00020C90 <AmiBlitz3.ab3@2293>   CLR.w string1
00020C96 <AmiBlitz3.ab3@2294>   CLR.b fastfunc
00020C9C <AmiBlitz3.ab3@2295>   CLR.w load_var_size
00020CA2 <AmiBlitz3.ab3@2296>   CLR.w load_var_reg
00020CA8 <AmiBlitz3.ab3@2297>   CLR.l load_var_addr
00020CAE <AmiBlitz3.ab3@2298>   CLR.w imm_size
00020CB4 <AmiBlitz3.ab3@2299>   CLR.w imm_reg
00020CBA <AmiBlitz3.ab3@2300>   CLR.l imm_addr
00020CC0 <AmiBlitz3.ab3@2301>   CLR.b _dcb
00020CC6 <AmiBlitz3.ab3@2302>   CLR.l nohunkoffset
00020CCC <AmiBlitz3.ab3@2303>   CLR.b peekaddrsize
00020CD2 <AmiBlitz3.ab3@2304>   CLR.b typecheck
00020CD8 <AmiBlitz3.ab3@2305>   CLR.b declare2
00020CDE <AmiBlitz3.ab3@2306>   CLR.b declare
00020CE4 <AmiBlitz3.ab3@2307>   CLR.l myoline                                          ;check
00020CEA <AmiBlitz3.ab3@2308>   CLR.l myline                                          ;check
00020CF0 <AmiBlitz3.ab3@2309>   CLR.b newvariable
00020CF6 <AmiBlitz3.ab3@2310>   CLR.b saved0
00020CFC <AmiBlitz3.ab3@2311>   CLR.l bsssize
00020D02 <AmiBlitz3.ab3@2312>   CLR.l chipsize
00020D08 <AmiBlitz3.ab3@2313>   CLR.b infunctioncode
00020D0E <AmiBlitz3.ab3@2314>   CLR.l errorcounter
00020D18 <AmiBlitz3.ab3@2315>   MOVE.l #-1,bssstart
00020D22 <AmiBlitz3.ab3@2316>   MOVE.l #-1,bssend
00020D2C <AmiBlitz3.ab3@2317>   MOVE.l #-1,chipstart
00020D36 <AmiBlitz3.ab3@2318>   MOVE.l #-1,chipend
00020D3E <AmiBlitz3.ab3@2319>   MOVE.w #0,bssmode
00020D44 <AmiBlitz3.ab3@2320>   CLR.w a2offset
00020D4A <AmiBlitz3.ab3@2321>   CLR.w fast
00020D50 <AmiBlitz3.ab3@2322>   CLR.w fpu
00020D56 <AmiBlitz3.ab3@2323>   CLR.b iee
00020D5C <AmiBlitz3.ab3@2324>   CLR.w newsyntax
00020D60 <AmiBlitz3.ab3@2325>   BSR.w JL_0_38A6
00020D66 <AmiBlitz3.ab3@2326>   JSR AJL_0_7962
00020D6C <AmiBlitz3.ab3@2327>   JSR frallvars
00020D72 <AmiBlitz3.ab3@2328>   JSR fralltypes
00020D78 <AmiBlitz3.ab3@2329>   JSR freemacs
00020D7E <AmiBlitz3.ab3@2330>   JSR clearfunctionlist
00020D84 <AmiBlitz3.ab3@2331>   TST.w pass
00020D8A <AmiBlitz3.ab3@2333>   JSR clearlabels
00020D90 <AmiBlitz3.ab3@2334>   JSR clearhash
00020D96 <AmiBlitz3.ab3@2337>   LEA devo,a0
00020D9A <AmiBlitz3.ab3@2338>   MOVEM.l a0-a6/d0-d7,-(a7)
00020DA0 <AmiBlitz3.ab3@2339>   LEA ptr_parameterstore,a1
00020DA2 <AmiBlitz3.ab3@2342>     MOVE.b (a0)+,(a1)+
00020DA6 <AmiBlitz3.ab3@2343>   BNE 'l1b
00020DA8 <AmiBlitz3.ab3@2344>   MOVEQ #13,d2
00020DAE <AmiBlitz3.ab3@2345>   JSR findlabel2
00020DB2 <AmiBlitz3.ab3@2346>   BNE 'd
00020DB6 <AmiBlitz3.ab3@2347>   CLR.l 8(a2)
00020DBA <AmiBlitz3.ab3@2350>   MOVEM.l (a7)+,a0-a6/d0-d7
00020DE4 <AmiBlitz3.ab3@2351>   !basic
00020E58 <AmiBlitz3.ab3@2352>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00020E76 <AmiBlitz3.ab3@2353>   !asm
00020E7C <AmiBlitz3.ab3@2354>   CLR.b returncode
00020E82 <AmiBlitz3.ab3@2355> JMP freeprocvs
00020E88 <AmiBlitz3.ab3@2359>   MOVE.l #bssstore-labelhash,d0
00020E8A <AmiBlitz3.ab3@2360>   ASR.l #2,d0
00020E90 <AmiBlitz3.ab3@2361>   LEA labelhash,a0
00020E92 <AmiBlitz3.ab3@2364>     CLR.l (a0)+
00020E94 <AmiBlitz3.ab3@2365>     SUBQ.l #1,d0
00020E98 <AmiBlitz3.ab3@2366>   BNE.s 'l10
00020E9E <AmiBlitz3.ab3@2368>   LEA labelbase,a1
00020EA0 <AmiBlitz3.ab3@2369>   MOVE.l (a1),d0
00020EA4 <AmiBlitz3.ab3@2370>   BEQ 'l11
00020EA6 <AmiBlitz3.ab3@2373>     MOVE.l d0,a1
00020EAA <AmiBlitz3.ab3@2374>     TST.l 4(a1)
00020EAE <AmiBlitz3.ab3@2375>     BEQ 'l29
00020EB2 <AmiBlitz3.ab3@2376>     LEA $13(a1),a0
00020EB4 <AmiBlitz3.ab3@2377>     MOVEQ #0,d0
00020EB6 <AmiBlitz3.ab3@2378>     MOVEQ #0,d1
00020EB8 <AmiBlitz3.ab3@2381>       MOVE.b (a0)+,d1
00020EBC <AmiBlitz3.ab3@2382>       BEQ 'l12
00020EC2 <AmiBlitz3.ab3@2383>       !hashalgo
00020EC6 <AmiBlitz3.ab3@2384> BRA 'l13
00020ECC <AmiBlitz3.ab3@2387>     LEA labelhash,a0
00020ED2 <AmiBlitz3.ab3@2388>     AND.l #hashsize,d0
00020ED4 <AmiBlitz3.ab3@2389>      ASL.l #2,d0
00020ED8 <AmiBlitz3.ab3@2390>     MOVE.l 0(a0,d0),d1                                     ;*4
00020EDC <AmiBlitz3.ab3@2391>     MOVE.l d1,$c(a1)
00020EE0 <AmiBlitz3.ab3@2392>     MOVE.l a1,0(a0,d0)
00020EE2 <AmiBlitz3.ab3@2395>     MOVE.l (a1),d0
00020EE6 <AmiBlitz3.ab3@2396>   BNE 'l21
00020EE8 <AmiBlitz3.ab3@2399> RTS
00020EEE <AmiBlitz3.ab3@2403>   MOVEA.l lastrestype,A0
00020EF0 <AmiBlitz3.ab3@2404>   MOVEA.l (A0),A2
00020EF2 <AmiBlitz3.ab3@2405>   CLR.l (A0)
00020EF8 <AmiBlitz3.ab3@2406> JMP freetypes
00020EFE <AmiBlitz3.ab3@2410>   MOVEA.l varbase,A3
00020F04 <AmiBlitz3.ab3@2411>   CLR.l varbase
00020F08 <AmiBlitz3.ab3@2414>   CMPA.w #$0,A3
00020F0C <AmiBlitz3.ab3@2415>   BEQ.w 'l20
00020F0E <AmiBlitz3.ab3@2416>   MOVEA.l A3,A1
00020F10 <AmiBlitz3.ab3@2417>   MOVEA.l (A3),A3
00020F12 <AmiBlitz3.ab3@2418>   MOVEQ.l #$00,D0
00020F16 <AmiBlitz3.ab3@2419>   MOVE.b $E+4(A1),D0
00020F1C <AmiBlitz3.ab3@2420>   MOVEA.l _execbase,A6
00020F22 <AmiBlitz3.ab3@2421>   MOVE.l mempool2,a0
00020F26 <AmiBlitz3.ab3@2422>   JSR _FreePooled(A6)
00020F2A <AmiBlitz3.ab3@2423> BRA.w 'l10
00020F2C <AmiBlitz3.ab3@2426> RTS
00020F32 <AmiBlitz3.ab3@2431>   LEA firstiff,A2
00020F34 <AmiBlitz3.ab3@2432>   MOVEQ.l #$0E,D2
00020F3A <AmiBlitz3.ab3@2433> JMP freeslist
00020F3C <AmiBlitz3.ab3@2439> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00020F3E <AmiBlitz3.ab3@2440> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00020F44 <AmiBlitz3.ab3@2444>   CLR.w inmacro
00020F4A <AmiBlitz3.ab3@2445>   ADDQ.l #1,globallinecount
00020F50 <AmiBlitz3.ab3@2446>   CLR.b nostringopt
00020F54 <AmiBlitz3.ab3@2447>   BSR.w JL_0_3CA4
00020F5A <AmiBlitz3.ab3@2448>   CLR.w instringon
00020F60 <AmiBlitz3.ab3@2451>   TST.w ininclude
00020F64 <AmiBlitz3.ab3@2452>   BEQ.w JL_0_39B0
00020F6A <AmiBlitz3.ab3@2453>   ADDQ.l #1,includeline
00020F70 <AmiBlitz3.ab3@2454>     JSR ab3_WriteDebugFile
00020F76 <AmiBlitz3.ab3@2455>   JSR AJL_0_C09E
00020F7A <AmiBlitz3.ab3@2456>   BEQ.w JL_0_39B0
00020F80 <AmiBlitz3.ab3@2457>   MOVE.w ininclude,D0
00020F84 <AmiBlitz3.ab3@2458>   CMP.w #$4,D0
00020F88 <AmiBlitz3.ab3@2459>   BCC.w JL_0_39AC
00020F8A <AmiBlitz3.ab3@2460>   ADD.w D0,D0
00020F90 <AmiBlitz3.ab3@2461>   LEA progress_per_line,A0
00020F94 <AmiBlitz3.ab3@2462>   MOVE.w $0(A0,D0.W),D2
00020F98 <AmiBlitz3.ab3@2463>   CMP.w progressbar_width(PC),D2
00020F9C <AmiBlitz3.ab3@2464>   BCC.w JL_0_39AC
00020FA0 <AmiBlitz3.ab3@2465>   ADDQ.w #1,$0(A0,D0.W)
00020FA2 <AmiBlitz3.ab3@2466>   LSR.w #1,D0
00020FA4 <AmiBlitz3.ab3@2467>   MOVE.l d0,d1
00020FA6 <AmiBlitz3.ab3@2468>   EXT.l d1
00020FA8 <AmiBlitz3.ab3@2469>   MOVE.l d2,d0
00020FAA <AmiBlitz3.ab3@2470>   EXT.l d0                                                 ;d0=x,d1=y
00020FB0 <AmiBlitz3.ab3@2472>   JSR update_progressbar
00020FB2 <AmiBlitz3.ab3@2475>   MOVEQ.l #-$01,D0
00020FB4 <AmiBlitz3.ab3@2476> RTS
00020FBA <AmiBlitz3.ab3@2480>   MOVE.l titleat,D0
00020FBC <AmiBlitz3.ab3@2481>   MOVEQ.l #$00,D1
00020FC2 <AmiBlitz3.ab3@2482>   MOVE.w progress_per_line,D1
00020FC4 <AmiBlitz3.ab3@2483>   ADD.l D1,D0
00020FC6 <AmiBlitz3.ab3@2484>   MOVE.l D0,D1
00020FC8 <AmiBlitz3.ab3@2485>   SWAP D0
00020FCE <AmiBlitz3.ab3@2486>   CMP.w titleat,D0
00020FD2 <AmiBlitz3.ab3@2487>    BEQ.w JL_0_39E4
00020FD4 <AmiBlitz3.ab3@2491>   EXT.l d0
00020FD6 <AmiBlitz3.ab3@2492>   MOVE.l d1,-(a7)
00020FDE <AmiBlitz3.ab3@2495>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00020FE4 <AmiBlitz3.ab3@2496>   JSR update_progressbar
00020FEC <AmiBlitz3.ab3@2497>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00020FEE <AmiBlitz3.ab3@2501>   MOVE.l (a7)+,d1
00020FF4 <AmiBlitz3.ab3@2504>   MOVE.l D1,titleat
00020FFA <AmiBlitz3.ab3@2505>   ADDQ.l #1,linenumat
00021000 <AmiBlitz3.ab3@2506>   CLR.w linedone
00021006 <AmiBlitz3.ab3@2507>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002100C <AmiBlitz3.ab3@2509>   SUBQ.l #1,numlines2
00021010 <AmiBlitz3.ab3@2510>    BEQ.w JL_0_3A12
00021016 <AmiBlitz3.ab3@2511>   MOVEA.l sourceline,A0
00021018 <AmiBlitz3.ab3@2512>   MOVEA.l (A0),A0
0002101E <AmiBlitz3.ab3@2513>   MOVE.l A0,sourceline
00021022 <AmiBlitz3.ab3@2514>   LEA $9(A0),A5
00021024 <AmiBlitz3.ab3@2517> RTS
00021026 <AmiBlitz3.ab3@2521>   MOVE.w D0,-(A7)
00021028 <AmiBlitz3.ab3@2522>   MOVEQ.l #$03,D0
0002102A <AmiBlitz3.ab3@2525>     MOVE.w D1,D2
0002102E <AmiBlitz3.ab3@2526>     ANDI.w #$F,D2
00021032 <AmiBlitz3.ab3@2527>     ADDI.w #$30,D2
00021036 <AmiBlitz3.ab3@2528>     CMP.w #$3A,D2
0002103A <AmiBlitz3.ab3@2529>      BCS.w JL_0_3A2C
0002103C <AmiBlitz3.ab3@2530>     ADDQ.w #7,D2
00021040 <AmiBlitz3.ab3@2533>     MOVE.b D2,$0(A0,D0.W)
00021042 <AmiBlitz3.ab3@2534>     LSR.w #4,D1
00021046 <AmiBlitz3.ab3@2535>   DBF D0,JL_0_3A18
00021048 <AmiBlitz3.ab3@2537>   MOVE.w (A7)+,D0
0002104A <AmiBlitz3.ab3@2538> RTS
00021050 <AmiBlitz3.ab3@2548>   MOVE.w skipcode,D1
00021054 <AmiBlitz3.ab3@2549>   BNE.w JL_0_3A46
00021056 <AmiBlitz3.ab3@2550> RTS
00021058 <AmiBlitz3.ab3@2553>   MOVE.l A5,-(A7)
0002105A <AmiBlitz3.ab3@2554>   MOVEQ.l #$3A,D1                                          ;':'
0002105C <AmiBlitz3.ab3@2555>   MOVEQ.l #$21,D2                                          ;'!'
0002105E <AmiBlitz3.ab3@2556>   MOVEQ.l #$3B,D3                                          ;';'
00021060 <AmiBlitz3.ab3@2557>   MOVEQ.l #$22,D4                                          ;'"'
00021062 <AmiBlitz3.ab3@2560>   MOVE.b (A5)+,D0
00021066 <AmiBlitz3.ab3@2561>    BEQ.w JL_0_3CA0
0002106A <AmiBlitz3.ab3@2562>    BPL.w JL_0_3A60
0002106C <AmiBlitz3.ab3@2563>   MOVE.b (A5)+,D0
00021070 <AmiBlitz3.ab3@2564> BRA.w JL_0_3A50
00021072 <AmiBlitz3.ab3@2567>   CMP.b D4,D0
00021076 <AmiBlitz3.ab3@2568>    BNE.w JL_0_3A82
00021078 <AmiBlitz3.ab3@2571>   MOVE.b (A5)+,D0
0002107C <AmiBlitz3.ab3@2572>    BEQ.w notqerr
00021080 <AmiBlitz3.ab3@2578>   CMP.b #$22,D0
00021084 <AmiBlitz3.ab3@2579>    BNE.w JL_0_3A66
00021088 <AmiBlitz3.ab3@2580> BRA.w JL_0_3A50
0002108A <AmiBlitz3.ab3@2583>   CMP.b D1,D0
0002108E <AmiBlitz3.ab3@2584>    BEQ.w JL_0_3CA0
00021090 <AmiBlitz3.ab3@2585>   CMP.b D3,D0
00021094 <AmiBlitz3.ab3@2586>    BEQ.w JL_0_3CA0
00021096 <AmiBlitz3.ab3@2589>   CMP.b D2,D0
0002109A <AmiBlitz3.ab3@2590>    BNE.w JL_0_3A50
000210A2 <AmiBlitz3.ab3@2591>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000210A4 <AmiBlitz3.ab3@2592>   MOVEA.l A5,A3
000210AA <AmiBlitz3.ab3@2593>    JSR getparameter2
000210AE <AmiBlitz3.ab3@2594>    BNE.w JL_0_3AAC
000210B4 <AmiBlitz3.ab3@2595> JMP syntaxerr
000210BE <AmiBlitz3.ab3@2600>    MOVE.w oldqflag,instringon
000210C4 <AmiBlitz3.ab3@2601>   MOVEA.l lastsourcepos,A5
000210CA <AmiBlitz3.ab3@2602>    JSR findmac                                             ;find macro
000210CE <AmiBlitz3.ab3@2603>    BEQ.w JL_0_3ABE
000210D4 <AmiBlitz3.ab3@2604> JMP nomacerr
000210DA <AmiBlitz3.ab3@2607>   TST.b debugmode
000210DE <AmiBlitz3.ab3@2608>   BEQ 'sk1
000210E2 <AmiBlitz3.ab3@2609>   MOVE.w #$4e71,d1
000210E8 <AmiBlitz3.ab3@2610>   JSR writeword
000210EA <AmiBlitz3.ab3@2611>   MOVE.l a5,-(a7)
000210EC <AmiBlitz3.ab3@2612>   MOVE.l a3,a5
000210EE <AmiBlitz3.ab3@2613>   SUBQ.l #1,a5
000210F6 <AmiBlitz3.ab3@2614>   MOVE.w #$0,inmacro
000210FA <AmiBlitz3.ab3@2615>   BSR debugstuffa
00021102 <AmiBlitz3.ab3@2616>   MOVE.w #$FFFF,inmacro
00021104 <AmiBlitz3.ab3@2617>   MOVE.l (a7)+,a5
00021108 <AmiBlitz3.ab3@2618>   MOVE.w #$4e71,d1
0002110E <AmiBlitz3.ab3@2619>   JSR writeword
00021110 <AmiBlitz3.ab3@2622>   MOVEA.l A5,A4
00021114 <AmiBlitz3.ab3@2625>    CMP.b #" ",(a4)+
00021118 <AmiBlitz3.ab3@2626>     BEQ 'l5a
0002111A <AmiBlitz3.ab3@2627>      SUBQ.l#1,a4
0002111E <AmiBlitz3.ab3@2628>      CMP.b #",",(a4)
00021122 <AmiBlitz3.ab3@2629>     BEQ JL_0_3AEA
00021124 <AmiBlitz3.ab3@2632>   MOVEQ.l #$00,D4
0002112A <AmiBlitz3.ab3@2633>   TST.b newsyntax
0002112E <AmiBlitz3.ab3@2634>   BEQ 'l10b
00021132 <AmiBlitz3.ab3@2635>   MOVEM.l a0/d0,-(a7)
00021136 <AmiBlitz3.ab3@2636>   MOVE.l 4(a2),a0
0002113A <AmiBlitz3.ab3@2637>   MOVE.w 8(a2),d0
0002113E <AmiBlitz3.ab3@2640>   CMP.b #"`",(a0)+
00021142 <AmiBlitz3.ab3@2641>   BEQ 'x1
00021144 <AmiBlitz3.ab3@2642>   SUBQ.w #1,d0
00021148 <AmiBlitz3.ab3@2643>   BNE 'x2
0002114C <AmiBlitz3.ab3@2644> BRA 'x3
00021150 <AmiBlitz3.ab3@2647>   MOVEM.l (a7)+,a0/d0
00021154 <AmiBlitz3.ab3@2648> BRA 'l10
00021158 <AmiBlitz3.ab3@2651>   MOVEM.l (a7)+,a0/d0
0002115C <AmiBlitz3.ab3@2652> BRA JL_0_3AEA
00021160 <AmiBlitz3.ab3@2655>   CMPI.b #"{",(A4)
00021164 <AmiBlitz3.ab3@2656>    BNE.w JL_0_3AEA
00021166 <AmiBlitz3.ab3@2660>   ADDQ.l #1,a4
0002116A <AmiBlitz3.ab3@2663>     CMP.b #" ",(a4)
0002116E <AmiBlitz3.ab3@2664>     BEQ 'l5
00021172 <AmiBlitz3.ab3@2665>     MOVEM.l a0/d0,-(a7)
00021178 <AmiBlitz3.ab3@2666>     CLR.b exmac
0002117E <AmiBlitz3.ab3@2667>     LEA chartab,a0
00021180 <AmiBlitz3.ab3@2668>     MOVEQ #0,d0
00021182 <AmiBlitz3.ab3@2669>     MOVE.b (a4),d0
00021186 <AmiBlitz3.ab3@2670>     BMI 'm1
0002118A <AmiBlitz3.ab3@2671>     TST.b 0(a0,d0)
0002118E <AmiBlitz3.ab3@2672>     BEQ 'm1
00021194 <AmiBlitz3.ab3@2673>     TST.b newsyntax
00021198 <AmiBlitz3.ab3@2674>     BEQ 'ns1
0002119C <AmiBlitz3.ab3@2675>     CMP.b #"#",d0
000211A0 <AmiBlitz3.ab3@2676>     BEQ 'm1
000211A4 <AmiBlitz3.ab3@2677>     CMP.b #"$",d0
000211A8 <AmiBlitz3.ab3@2678>     BEQ 'm1
000211AC <AmiBlitz3.ab3@2679>     CMP.b #"-",d0
000211B0 <AmiBlitz3.ab3@2680>     BEQ 'm1
000211B4 <AmiBlitz3.ab3@2683>   CMP.b #",",d0
000211B8 <AmiBlitz3.ab3@2684>     BEQ 'm1
000211BC <AmiBlitz3.ab3@2685>     CMP.b #"{",d0
000211C0 <AmiBlitz3.ab3@2686>     BNE 'm1b
000211C2 <AmiBlitz3.ab3@2687>     ADDQ.l #1,a4
000211C6 <AmiBlitz3.ab3@2688> BRA 'm1
000211CC <AmiBlitz3.ab3@2691>   TST.b newsyntax
000211D0 <AmiBlitz3.ab3@2692>     BEQ 'm1
000211D8 <AmiBlitz3.ab3@2693>     MOVE.b #1,exmac
000211DC <AmiBlitz3.ab3@2696>   MOVEM.l (a7)+,a0/d0
000211E2 <AmiBlitz3.ab3@2697>     TST.b exmac
000211E6 <AmiBlitz3.ab3@2698>     BNE JL_0_3AEA
000211E8 <AmiBlitz3.ab3@2705>   TST.b (a4)
000211EC <AmiBlitz3.ab3@2706>   BEQ JL_0_3AEA
000211F2 <AmiBlitz3.ab3@2709>   MOVEA.l ptr_macrobuffer_begin,A0
000211F4 <AmiBlitz3.ab3@2712>   ADDQ.w #1,D4
000211F6 <AmiBlitz3.ab3@2713>   MOVE.l A4,(A0)
000211FA <AmiBlitz3.ab3@2714>   CLR.w 4(a0)
000211FE <AmiBlitz3.ab3@2715>    BSR.w JL_0_3CC6
00021200 <AmiBlitz3.ab3@2717>   ADDQ.l #4,a0
00021202 <AmiBlitz3.ab3@2721>   SUBQ.w #1,(a0)+
00021206 <AmiBlitz3.ab3@2722>   CMP.b #$7D,D0
0002120A <AmiBlitz3.ab3@2723>   BEQ 'l10
0002120C <AmiBlitz3.ab3@2724>   TST.b d0
00021210 <AmiBlitz3.ab3@2725>   BEQ 'l10
00021214 <AmiBlitz3.ab3@2726> BRA JL_0_3AD0
0002121A <AmiBlitz3.ab3@2730>   CLR.l sourceline3
0002121C <AmiBlitz3.ab3@2731>   MOVEA.l A4,A5
00021222 <AmiBlitz3.ab3@2734>   MOVE.w D4,numarg
00021228 <AmiBlitz3.ab3@2741>   MOVE.l #$01,D1
0002122E <AmiBlitz3.ab3@2742>   MOVEA.l _execbase,A6
00021234 <AmiBlitz3.ab3@2743>   MOVE.l mempool,a0
0002123A <AmiBlitz3.ab3@2744>   MOVE.l macrobuffer_size,D0
00021240 <AmiBlitz3.ab3@2745>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021244 <AmiBlitz3.ab3@2746>   BGE 'l1m
0002124A <AmiBlitz3.ab3@2747>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021250 <AmiBlitz3.ab3@2748>   MOVE.l d0,macrobuffer_size
00021254 <AmiBlitz3.ab3@2751>   JSR _AllocPooled(a6)
0002125E <AmiBlitz3.ab3@2753>   MOVE.l myline,myoline
00021260 <AmiBlitz3.ab3@2756>   ADDQ.l #1,d0
00021266 <AmiBlitz3.ab3@2757>   MOVE.l D0,myline
00021268 <AmiBlitz3.ab3@2758>   MOVEA.l D0,A1
0002126E <AmiBlitz3.ab3@2759>   MOVE.b #":",-1(a1)
00021270 <AmiBlitz3.ab3@2760>   MOVEA.l A1,A6
00021276 <AmiBlitz3.ab3@2761>   ADDA.l macrobuffer_size,A6
00021278 <AmiBlitz3.ab3@2762>   MOVEA.l (A7)+,A0
0002127A <AmiBlitz3.ab3@2765>   CMPA.l A6,A1
0002127E <AmiBlitz3.ab3@2766>    BCC.w mbovererr
00021280 <AmiBlitz3.ab3@2767>   MOVE.b (A0)+,(a1)+
00021282 <AmiBlitz3.ab3@2768>   CMPA.l A3,A0
00021286 <AmiBlitz3.ab3@2769>    BCS.w JL_0_3B1E
00021288 <AmiBlitz3.ab3@2770>   SUBQ.w #1,A1
0002128C <AmiBlitz3.ab3@2771>   MOVE.w $8(A2),D1
00021290 <AmiBlitz3.ab3@2772>    BEQ.w JL_0_3C70
00021298 <AmiBlitz3.ab3@2773>   MOVE.w $A(A2),macnum
0002129C <AmiBlitz3.ab3@2774>   ADDQ.w #1,$A(A2)
000212A0 <AmiBlitz3.ab3@2775>   MOVEA.l $4(A2),A2
000212A2 <AmiBlitz3.ab3@2776>   SUBQ.w #1,D1
000212A8 <AmiBlitz3.ab3@2777>   CLR.b firstmline
000212AA <AmiBlitz3.ab3@2780>     MOVEQ.l #$00,D0
000212AC <AmiBlitz3.ab3@2781>     MOVE.b (A2)+,D0
000212B2 <AmiBlitz3.ab3@2782>     TST.b firstmline
000212B6 <AmiBlitz3.ab3@2783>     BNE 'c1
000212BA <AmiBlitz3.ab3@2784>     CMP.b #$22,d0
000212BE <AmiBlitz3.ab3@2785>     BNE 's1
000212C6 <AmiBlitz3.ab3@2786>     MOVE.b #1,firstmline
000212CA <AmiBlitz3.ab3@2789>     CMP.b #":",d0
000212CE <AmiBlitz3.ab3@2790>     BNE 'm1
000212D6 <AmiBlitz3.ab3@2791>     MOVE.b #1,firstmline
000212DA <AmiBlitz3.ab3@2794>     CMP.b #";",d0
000212DE <AmiBlitz3.ab3@2795>     BNE 'c1
000212E0 <AmiBlitz3.ab3@2798>     SUBQ.w #1,d1                                           ;filter out comment
000212E2 <AmiBlitz3.ab3@2799>     MOVE.b (a2)+,d0
000212E8 <AmiBlitz3.ab3@2800>     CMP.w #":@",-1(a2)
000212EC <AmiBlitz3.ab3@2801>     BEQ 'c2
000212EE <AmiBlitz3.ab3@2802>     TST.w d1
000212F2 <AmiBlitz3.ab3@2803>     BNE 'l1
000212F6 <AmiBlitz3.ab3@2804>   BRA JL_0_3C6C
000212FC <AmiBlitz3.ab3@2807>     CMP.b #":",1(a2)
00021300 <AmiBlitz3.ab3@2808>       BNE 'l1
00021302 <AmiBlitz3.ab3@2809>       ADDQ #2,a2
00021304 <AmiBlitz3.ab3@2810>       SUBQ #3,d1
00021306 <AmiBlitz3.ab3@2811>       MOVE.b (a2)+,d0
0002130E <AmiBlitz3.ab3@2812>       MOVE.b #1,firstmline
00021312 <AmiBlitz3.ab3@2815>     CMP.b #"`",D0
00021316 <AmiBlitz3.ab3@2816>      BNE.w JL_0_3C56
00021318 <AmiBlitz3.ab3@2817>     SUBQ.w #1,D1
0002131A <AmiBlitz3.ab3@2818>     MOVE.b (A2)+,D0
0002131E <AmiBlitz3.ab3@2819>     CMP.w #$7B,D0
00021322 <AmiBlitz3.ab3@2820>      BEQ.w JL_0_3BB6
00021326 <AmiBlitz3.ab3@2821>     CMP.w #$40,D0
0002132A <AmiBlitz3.ab3@2822>      BNE.w JL_0_3B82
0002132C <AmiBlitz3.ab3@2823>     MOVEQ.l #$00,D2
00021332 <AmiBlitz3.ab3@2824>     MOVE.w macnum,D2
00021334 <AmiBlitz3.ab3@2825>     MOVEA.l A1,A0
00021336 <AmiBlitz3.ab3@2826>     MOVE.w D1,-(A7)
0002133C <AmiBlitz3.ab3@2827>      JSR makelong
0002133E <AmiBlitz3.ab3@2828>     MOVEA.l A0,A1
00021340 <AmiBlitz3.ab3@2829>     MOVE.w (A7)+,D1
00021344 <AmiBlitz3.ab3@2830>   BRA.w JL_0_3C6C
00021348 <AmiBlitz3.ab3@2833>     ORI.w #$20,D0
0002134C <AmiBlitz3.ab3@2834>     CMP.w #$7A,D0
00021350 <AmiBlitz3.ab3@2835>      BCS.w JL_0_3B94
00021356 <AmiBlitz3.ab3@2836>   JMP ilconsterr
0002135A <AmiBlitz3.ab3@2839>     SUBI.w #$30,D0
0002135E <AmiBlitz3.ab3@2840>     CMP.w #$A,D0
00021362 <AmiBlitz3.ab3@2841>      BCS.w JL_0_3BF2
00021366 <AmiBlitz3.ab3@2842>     SUBI.w #$27,D0
0002136A <AmiBlitz3.ab3@2843>     CMP.w #$A,D0
0002136E <AmiBlitz3.ab3@2844>      BCC.w JL_0_3BB2
00021374 <AmiBlitz3.ab3@2845>   JMP ilconsterr
00021378 <AmiBlitz3.ab3@2848>   BRA.w JL_0_3BF2
0002137A <AmiBlitz3.ab3@2851>     MOVE.l A5,-(A7)
0002137E <AmiBlitz3.ab3@2852>     MOVEM.l D1/A1-A2/A6,-(A7)
00021380 <AmiBlitz3.ab3@2853>     MOVEA.l A2,A5
00021386 <AmiBlitz3.ab3@2854>      JSR AJL_0_BF6E
0002138A <AmiBlitz3.ab3@2855>     CMP.w #$7D,D0
0002138E <AmiBlitz3.ab3@2856>      BEQ.w JL_0_3BD2
00021394 <AmiBlitz3.ab3@2857>   JMP syntaxerr
00021398 <AmiBlitz3.ab3@2860>     MOVEM.l (A7)+,D1/A1-A2/A6
0002139A <AmiBlitz3.ab3@2861>     MOVE.l A5,D2
0002139C <AmiBlitz3.ab3@2862>     SUB.l A2,D2
0002139E <AmiBlitz3.ab3@2863>     SUB.w D2,D1
000213A0 <AmiBlitz3.ab3@2864>     MOVEA.l A5,A2
000213A6 <AmiBlitz3.ab3@2865>     CLR.w instringon
000213A8 <AmiBlitz3.ab3@2866>     MOVEA.l (A7)+,A5
000213AA <AmiBlitz3.ab3@2867>     MOVE.l D3,D0
000213AE <AmiBlitz3.ab3@2868>     BPL.w JL_0_3BF2
000213B4 <AmiBlitz3.ab3@2869>   JMP ilconsterr
000213B6 <AmiBlitz3.ab3@2872>     SUBQ.w #1,D0
000213BA <AmiBlitz3.ab3@2873>      BPL.w JL_0_3C20
000213C0 <AmiBlitz3.ab3@2877>     MOVE.w numarg,D0
000213C4 <AmiBlitz3.ab3@2878>     DIVU #$A,D0
000213C8 <AmiBlitz3.ab3@2879>     ADDI.w #$30,D0
000213CA <AmiBlitz3.ab3@2880>     CMPA.l A6,A1
000213CE <AmiBlitz3.ab3@2881>      BCC.w mbovererr
000213D0 <AmiBlitz3.ab3@2882>     MOVE.b D0,(A1)+
000213D2 <AmiBlitz3.ab3@2883>     SWAP D0
000213D6 <AmiBlitz3.ab3@2884>     ADDI.w #$30,D0
000213D8 <AmiBlitz3.ab3@2885>     CMPA.l A6,A1
000213DC <AmiBlitz3.ab3@2886>      BCC.w mbovererr
000213DE <AmiBlitz3.ab3@2887>     MOVE.b D0,(A1)+
000213E2 <AmiBlitz3.ab3@2888>   BRA.w JL_0_3C6C
000213E8 <AmiBlitz3.ab3@2894>     CMP.w numarg,D0
000213EC <AmiBlitz3.ab3@2895>      BCC.w JL_0_3C6C
000213EE <AmiBlitz3.ab3@2896>     LSL.w #1,D0
000213F0 <AmiBlitz3.ab3@2897>     MOVE.w D0,D4
000213F2 <AmiBlitz3.ab3@2898>     LSL.w #1,D0
000213F4 <AmiBlitz3.ab3@2899>     ADD.w D4,D0
000213FA <AmiBlitz3.ab3@2900>     MOVEA.l ptr_macrobuffer_begin,A0
000213FC <AmiBlitz3.ab3@2901>     ADDA.w D0,A0
00021400 <AmiBlitz3.ab3@2902>     MOVE.w $4(A0),D4
00021404 <AmiBlitz3.ab3@2903>      BEQ.w JL_0_3C6C
00021406 <AmiBlitz3.ab3@2904>     MOVEA.l (A0),A0
00021408 <AmiBlitz3.ab3@2905>     SUBQ.w #1,D4
0002140A <AmiBlitz3.ab3@2908>       CMPA.l A6,A1
0002140E <AmiBlitz3.ab3@2909>        BCC.w mbovererr
00021412 <AmiBlitz3.ab3@2910>       CMP.w #"@@",(a0)
00021416 <AmiBlitz3.ab3@2911>        BNE 'l10
0002141C <AmiBlitz3.ab3@2912>       TST.w ininclude
00021420 <AmiBlitz3.ab3@2913>        BNE errorjoin
00021426 <AmiBlitz3.ab3@2916>       MOVE.l sourceline,a0
00021428 <AmiBlitz3.ab3@2917>       MOVE.l (a0),a0
0002142E <AmiBlitz3.ab3@2918>       CMP.l #0,a0
00021432 <AmiBlitz3.ab3@2919>       BNE 'l11
00021434 <AmiBlitz3.ab3@2920>       MOVEQ #0,d0
0002143A <AmiBlitz3.ab3@2921>       JSR error
00021440 <AmiBlitz3.ab3@2924>       MOVE.l a0,sourceline
00021446 <AmiBlitz3.ab3@2925>       ADDQ.l #1,linenumat
0002144A <AmiBlitz3.ab3@2926>       LEA 9(a0),a0
0002144C <AmiBlitz3.ab3@2927>       MOVE.l a0,-(a7)
00021450 <AmiBlitz3.ab3@2930>       CMP.b #" ",(a0)+
00021454 <AmiBlitz3.ab3@2931>        BEQ 'l110
0002145A <AmiBlitz3.ab3@2932>       CMP.b #";",-1(a0)
0002145C <AmiBlitz3.ab3@2933>       MOVE.l (a7)+,a0
00021460 <AmiBlitz3.ab3@2934>        BEQ 'l111
00021462 <AmiBlitz3.ab3@2935>       SUBQ.l #1,d4
00021464 <AmiBlitz3.ab3@2938>       MOVE.b (A0)+,(A1)+
00021468 <AmiBlitz3.ab3@2939>     DBF D4,JL_0_3C46
0002146C <AmiBlitz3.ab3@2941>   BRA.w JL_0_3C6C
0002146E <AmiBlitz3.ab3@2944>     CMPA.l A6,A1
00021472 <AmiBlitz3.ab3@2945>      BCC.w mbovererr
00021474 <AmiBlitz3.ab3@2946>     MOVE.b D0,(A1)+
00021478 <AmiBlitz3.ab3@2947>      BPL.w JL_0_3C6C
0002147A <AmiBlitz3.ab3@2948>     CMPA.l A6,A1
0002147E <AmiBlitz3.ab3@2949>      BCC.w mbovererr
00021480 <AmiBlitz3.ab3@2950>     MOVE.b (A2)+,(A1)+
00021482 <AmiBlitz3.ab3@2951>     SUBQ.w #1,D1
00021486 <AmiBlitz3.ab3@2954>   DBF D1,JL_0_3B48
00021488 <AmiBlitz3.ab3@2964>   CMPA.l A6,A1
0002148C <AmiBlitz3.ab3@2965>    BCC.w mbovererr
0002148E <AmiBlitz3.ab3@2966>   MOVE.b (A5)+,(A1)+
00021492 <AmiBlitz3.ab3@2967>    BNE.w JL_0_3C70
00021498 <AmiBlitz3.ab3@2968>   MOVEA.l myline,A5
0002149E <AmiBlitz3.ab3@2969>   MOVE.l myoline,D0
000214A2 <AmiBlitz3.ab3@2970>    BEQ.w JL_0_3C9C
000214A4 <AmiBlitz3.ab3@2971>   SUBQ.l #1,d0
000214A6 <AmiBlitz3.ab3@2972>   MOVEA.l D0,A1
000214AC <AmiBlitz3.ab3@2973>   MOVE.l macrobuffer_size,D0
000214B2 <AmiBlitz3.ab3@2974>   MOVEA.l _execbase,A6
000214B8 <AmiBlitz3.ab3@2975>   MOVE.l mempool,a0
000214BC <AmiBlitz3.ab3@2976>   JSR _FreePooled(A6)
000214C0 <AmiBlitz3.ab3@2979> BRA.w JL_0_3A46
000214C2 <AmiBlitz3.ab3@2982>   MOVEA.l (A7)+,A5
000214C4 <AmiBlitz3.ab3@2983> RTS
000214CA <AmiBlitz3.ab3@2987>   MOVE.l myline,D0
000214CE <AmiBlitz3.ab3@2988>   BEQ.w JL_0_3CC4
000214D0 <AmiBlitz3.ab3@2989>   SUBQ.l #1,d0
000214D6 <AmiBlitz3.ab3@2990>   CLR.l myline
000214D8 <AmiBlitz3.ab3@2991>   MOVEA.l D0,A1
000214DE <AmiBlitz3.ab3@2992>   MOVE.l macrobuffer_size,D0
000214E4 <AmiBlitz3.ab3@2993>   MOVEA.l _execbase,A6
000214EA <AmiBlitz3.ab3@2994>   MOVE.l mempool,a0
000214EE <AmiBlitz3.ab3@2995> JMP _FreePooled(A6)
000214F0 <AmiBlitz3.ab3@2998> RTS
000214F2 <AmiBlitz3.ab3@3002>   MOVEQ.l #$00,D2
000214F6 <AmiBlitz3.ab3@3005>   ADDQ.w #1,4(a0)
000214F8 <AmiBlitz3.ab3@3006>    MOVE.b (A4)+,D0
000214FC <AmiBlitz3.ab3@3008>    BEQ exit1
00021500 <AmiBlitz3.ab3@3009>    BPL.w JL_0_3CD8
00021504 <AmiBlitz3.ab3@3010>   ADDQ.w #1,4(a0)
00021506 <AmiBlitz3.ab3@3011>   ADDQ.w #1,A4
0002150A <AmiBlitz3.ab3@3012> BRA.w JL_0_3CC8
00021510 <AmiBlitz3.ab3@3015>    TST.w instringon
00021514 <AmiBlitz3.ab3@3016>    BNE 'lnom
00021518 <AmiBlitz3.ab3@3017>    CMP.b #";",d0
0002151C <AmiBlitz3.ab3@3018>    BEQ exit2
00021520 <AmiBlitz3.ab3@3019>    CMP.b #":",d0
00021524 <AmiBlitz3.ab3@3020>    BEQ exit2
00021528 <AmiBlitz3.ab3@3023>   CMP.b #$22,D0
0002152C <AmiBlitz3.ab3@3024>    BNE.w JL_0_3CEA
00021532 <AmiBlitz3.ab3@3025>   NOT.w instringon
00021536 <AmiBlitz3.ab3@3026> BRA.w JL_0_3CC8
0002153C <AmiBlitz3.ab3@3030>   TST.w instringon
00021540 <AmiBlitz3.ab3@3031>    BNE.w JL_0_3CC8
00021544 <AmiBlitz3.ab3@3032>    CMP.b #"@",d0
00021548 <AmiBlitz3.ab3@3033>    BNE 'l10
0002154C <AmiBlitz3.ab3@3034>    CMP.b #"@",(a4)
00021550 <AmiBlitz3.ab3@3035>    BNE 'l10
00021556 <AmiBlitz3.ab3@3036>    TST.w ininclude
0002155A <AmiBlitz3.ab3@3037>    BNE errorjoin
00021560 <AmiBlitz3.ab3@3038>    MOVE.l sourceline3,a4
00021566 <AmiBlitz3.ab3@3039>    CMP.l #0,a4
0002156A <AmiBlitz3.ab3@3040>    BNE 'l11
00021570 <AmiBlitz3.ab3@3041>    MOVE.l sourceline,a4
00021572 <AmiBlitz3.ab3@3044>   MOVE.l (a4),a4
00021578 <AmiBlitz3.ab3@3045>       CMP.l #0,a4
0002157C <AmiBlitz3.ab3@3046>       BNE 'l12
0002157E <AmiBlitz3.ab3@3047>       MOVEQ #0,d0
00021584 <AmiBlitz3.ab3@3048>       JSR error
0002158A <AmiBlitz3.ab3@3051>    MOVE.l a4,sourceline3
0002158E <AmiBlitz3.ab3@3052>    LEA 9(a4),a4
00021590 <AmiBlitz3.ab3@3053>    MOVEQ #",",d0
00021594 <AmiBlitz3.ab3@3056>   CMP.b #$2C,D0
00021598 <AmiBlitz3.ab3@3057>    BNE.w JL_0_3D06
0002159A <AmiBlitz3.ab3@3058>   TST.w D2
0002159E <AmiBlitz3.ab3@3059>    BEQ.w JL_0_3D30
000215A2 <AmiBlitz3.ab3@3060> BRA.w JL_0_3CC8
000215A6 <AmiBlitz3.ab3@3064>    CMP.b #$7B,D0                                           ;"{"
000215AA <AmiBlitz3.ab3@3065>    BEQ.w 'l10
000215AE <AmiBlitz3.ab3@3066>   CMP.b #$28,D0                                            ;"("
000215B2 <AmiBlitz3.ab3@3069>    BNE.w JL_0_3D14
000215B4 <AmiBlitz3.ab3@3070>   ADDQ.w #1,D2
000215B8 <AmiBlitz3.ab3@3071> BRA.w JL_0_3CC8
000215BC <AmiBlitz3.ab3@3074>   CMP.b #$7D,D0                                           ;"}"
000215C0 <AmiBlitz3.ab3@3075>    BNE.w JL_0_3D22
000215C2 <AmiBlitz3.ab3@3076>  TST.w D2
000215C6 <AmiBlitz3.ab3@3077>    BEQ.w JL_0_3D30
000215CA <AmiBlitz3.ab3@3081>    CMP.b #$7D,D0                                           ;"}"
000215CE <AmiBlitz3.ab3@3082>    BEQ.w 'l10
000215D2 <AmiBlitz3.ab3@3083>   CMP.b #$29,D0                                            ;")"
000215D6 <AmiBlitz3.ab3@3086>    BNE.w JL_0_3CC8
000215D8 <AmiBlitz3.ab3@3087>   SUBQ.w #1,D2
000215DC <AmiBlitz3.ab3@3088> BRA.w JL_0_3CC8
000215DE <AmiBlitz3.ab3@3091> RTS
000215E0 <AmiBlitz3.ab3@3095>       SUBQ.l #1,a4
000215E6 <AmiBlitz3.ab3@3096>       CLR.l sourceline3
000215E8 <AmiBlitz3.ab3@3097> RTS
000215EA <AmiBlitz3.ab3@3101>       MOVEQ #0,d0
000215EC <AmiBlitz3.ab3@3102>       SUBQ.l #1,a4
000215F2 <AmiBlitz3.ab3@3103>       CLR.l sourceline3
000215F4 <AmiBlitz3.ab3@3104> RTS
000215F8 <AmiBlitz3.ab3@3108>   CMP.b #$7B,D0                                            ;"{"
000215FC <AmiBlitz3.ab3@3109>   BEQ.w JL_0_3D3E
00021600 <AmiBlitz3.ab3@3110>   CMP.b #$28,D0                                            ;"("
00021602 <AmiBlitz3.ab3@3113> RTS
00021606 <AmiBlitz3.ab3@3117>   CMP.b #$7D,D0                                            ;"}"
0002160A <AmiBlitz3.ab3@3118>   BEQ.w JL_0_3D4C
0002160E <AmiBlitz3.ab3@3119>   CMP.b #$29,D0                                            ;")"
00021610 <AmiBlitz3.ab3@3122> RTS
00021612 <AmiBlitz3.ab3@3126> stopit:     Ds.w 1
00021614 <AmiBlitz3.ab3@3127> clrreq:     Ds.w 1
00021618 <AmiBlitz3.ab3@3148>   MOVE.w clrreq(PC),D0
0002161C <AmiBlitz3.ab3@3149>    BEQ.w close_compilewin__skip
0002164E <AmiBlitz3.ab3@3151> 
00021654 <AmiBlitz3.ab3@3153>   LEA clrreq,a0
00021656 <AmiBlitz3.ab3@3154>   NOT.w (a0)                                               ;reass
0002165C <AmiBlitz3.ab3@3155>   MOVEA.l ptr_ThisTask,A0
00021660 <AmiBlitz3.ab3@3156>   CLR.l $1E(A0)
00021664 <AmiBlitz3.ab3@3157>   CLR.l $2A(A0)
00021666 <AmiBlitz3.ab3@3160> RTS
00021668 <AmiBlitz3.ab3@3163> intsused:  Ds.w 1
00021670 <AmiBlitz3.ab3@3167>   MOVE.w #-1,blitzoff
00021676 <AmiBlitz3.ab3@3168>   CLR.w intsused
0002167C <AmiBlitz3.ab3@3169>   CLR.w anyerrs
00021682 <AmiBlitz3.ab3@3170>   CLR.w blitzmode
00021688 <AmiBlitz3.ab3@3171>   CLR.w dontwrite                                              ;nomemleft
0002168E <AmiBlitz3.ab3@3172>   CLR.w constmode
00021694 <AmiBlitz3.ab3@3173>   CLR.w cmake
0002169A <AmiBlitz3.ab3@3174>   CLR.w cfetchmode
000216A0 <AmiBlitz3.ab3@3175>   CLR.l intdata1
000216A6 <AmiBlitz3.ab3@3176>   CLR.w fuckpos
000216AC <AmiBlitz3.ab3@3177>   CLR.w procnum
000216B2 <AmiBlitz3.ab3@3178>   CLR.w procnum2
000216B8 <AmiBlitz3.ab3@3179>   CLR.w dfetch
000216BE <AmiBlitz3.ab3@3180>   CLR.l titleat
000216C4 <AmiBlitz3.ab3@3181>   CLR.b usedpath
000216CA <AmiBlitz3.ab3@3182>   CLR.b path2
000216D0 <AmiBlitz3.ab3@3183>   CLR.w inerr
000216D6 <AmiBlitz3.ab3@3184>   CLR.w intlevel
000216DC <AmiBlitz3.ab3@3185>   CLR.l cont_pc
000216E2 <AmiBlitz3.ab3@3186>   CLR.l cont_pc2
000216E8 <AmiBlitz3.ab3@3187>   CLR.l lastcontlink
000216F2 <AmiBlitz3.ab3@3188>   MOVE.l destbufferstart,destpointer
000216FC <AmiBlitz3.ab3@3189>   MOVE.l destbufferstart,bigpc
00021706 <AmiBlitz3.ab3@3190>   MOVE.l destbufferend,libend
00021710 <AmiBlitz3.ab3@3191>   MOVE.l data1start,data1
0002171A <AmiBlitz3.ab3@3192>   MOVE.l data2at,data2
00021722 <AmiBlitz3.ab3@3193>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0002172A <AmiBlitz3.ab3@3194>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021730 <AmiBlitz3.ab3@3195>   CLR.w oldvcodelen
00021736 <AmiBlitz3.ab3@3196>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021738 <AmiBlitz3.ab3@3197> RTS
0002173A <AmiBlitz3.ab3@3200> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021740 <AmiBlitz3.ab3@3204>   LEA  clrreq,a1
00021744 <AmiBlitz3.ab3@3205>   MOVE.w #2000,(a1)
0002176E <AmiBlitz3.ab3@3206>   !basic
00021784 <AmiBlitz3.ab3@3207> 
000217D4 <AmiBlitz3.ab3@3208>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
000217DC <AmiBlitz3.ab3@3209>   calcpro.l      = 0
000217E4 <AmiBlitz3.ab3@3210>   calcpro_old.l  = 0
000217F0 <AmiBlitz3.ab3@3211>   typ_old.l      = -1
000217FC <AmiBlitz3.ab3@3212>   pass_old.l     = -1
00021802 <AmiBlitz3.ab3@3213>   update_comstatus_gui.b = True ; for the first
0002183C <AmiBlitz3.ab3@3215>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021876 <AmiBlitz3.ab3@3216>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021894 <AmiBlitz3.ab3@3217>   !asm
000218C6 <AmiBlitz3.ab3@3218> 
000218CC <AmiBlitz3.ab3@3220>   CLR.w stopit
000218CE <AmiBlitz3.ab3@3221> RTS
000218D4 <AmiBlitz3.ab3@3225>   CLR.w storedebugmode
000218DA <AmiBlitz3.ab3@3226>   CLR.b iserror
000218DE <AmiBlitz3.ab3@3227>   BSR.w compilerequester
000218E8 <AmiBlitz3.ab3@3229>   MOVE.l #0,globallinecount
000218EE <AmiBlitz3.ab3@3230>   JSR check_of_same_source
000218F2 <AmiBlitz3.ab3@3231>   BSR.w call_setpointerbusy
000218F6 <AmiBlitz3.ab3@3232>   BSR.w setcvars
000218FE <AmiBlitz3.ab3@3233>   MOVE.w #$8000,globalvarpointer
00021908 <AmiBlitz3.ab3@3234>   MOVE.l #newtype_quick,defaulttype
0002190E <AmiBlitz3.ab3@3235>   MOVE.l A7,passstack
00021918 <AmiBlitz3.ab3@3236>   MOVE.l #firstitem_,sourceline
00021922 <AmiBlitz3.ab3@3237>   MOVE.w numlines_org,linesleft
0002192C <AmiBlitz3.ab3@3238>   MOVE.l numlines,numlines2
00021932 <AmiBlitz3.ab3@3239>   ADDQ.w #1,linesleft
00021938 <AmiBlitz3.ab3@3240>   ADDQ.l #1,numlines2
00021942 <AmiBlitz3.ab3@3241>   MOVE.l #-1,linenumat
00021946 <AmiBlitz3.ab3@3242>   BSR.w resetlibs
0002194A <AmiBlitz3.ab3@3243>   BSR.w Aclearallvars
00021950 <AmiBlitz3.ab3@3244>   LEA progress_per_line+2,A0
00021952 <AmiBlitz3.ab3@3245>   MOVEQ.l #$03,D0
00021954 <AmiBlitz3.ab3@3248>     CLR.w (A0)+
00021958 <AmiBlitz3.ab3@3249>   DBF D0,JL_0_40EC
0002195E <AmiBlitz3.ab3@3252>   LEA _include,a0
00021962 <AmiBlitz3.ab3@3253>   MOVEM.l a0-a6/d0-d7,-(a7)
00021968 <AmiBlitz3.ab3@3254>   LEA ptr_parameterstore,a1
0002196A <AmiBlitz3.ab3@3257>     MOVE.b (a0)+,(a1)+
0002196E <AmiBlitz3.ab3@3258>   BNE 'l1b
00021970 <AmiBlitz3.ab3@3260>   MOVEQ #9,d2
00021976 <AmiBlitz3.ab3@3261>   JSR findlabel2
0002197A <AmiBlitz3.ab3@3262>   BNE 'd
00021982 <AmiBlitz3.ab3@3263>   MOVE.l #0,8(a2)
00021986 <AmiBlitz3.ab3@3264>   MOVEM.l (a7)+,a0-a6/d0-d7
0002198A <AmiBlitz3.ab3@3265> BRA 'd2
00021990 <AmiBlitz3.ab3@3268>   JSR addlabelhash
00021998 <AmiBlitz3.ab3@3269>   MOVE.l #$1,$4(A2)
000219A0 <AmiBlitz3.ab3@3270>   MOVE.l #0,8(a2)
000219A4 <AmiBlitz3.ab3@3271>   MOVEM.l (a7)+,a0-a6/d0-d7
000219AA <AmiBlitz3.ab3@3274>   LEA _debug,a0
000219AE <AmiBlitz3.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
000219B4 <AmiBlitz3.ab3@3276>   LEA ptr_parameterstore,a1
000219B6 <AmiBlitz3.ab3@3279>     MOVE.b (a0)+,(a1)+
000219BA <AmiBlitz3.ab3@3280>   BNE 'l9b
000219BC <AmiBlitz3.ab3@3282>   MOVEQ #7,d2
000219C2 <AmiBlitz3.ab3@3283>   JSR findlabel2
000219C6 <AmiBlitz3.ab3@3284>   BNE 'd9
000219CA <AmiBlitz3.ab3@3285>   MOVE.b debugmode(PC),D0
000219CC <AmiBlitz3.ab3@3286>   EXT.w d0
000219CE <AmiBlitz3.ab3@3287>   EXT.l d0
000219D2 <AmiBlitz3.ab3@3288>   MOVE.l d0,8(a2)
000219D6 <AmiBlitz3.ab3@3289>   MOVEM.l (a7)+,a0-a6/d0-d7
000219DA <AmiBlitz3.ab3@3290> BRA 'd9b
000219E0 <AmiBlitz3.ab3@3293>   JSR addlabelhash
000219E8 <AmiBlitz3.ab3@3294>   MOVE.l #$1,$4(A2)
000219EC <AmiBlitz3.ab3@3295>   MOVE.b debugmode(PC),D0
000219EE <AmiBlitz3.ab3@3296>   EXT.w d0
000219F0 <AmiBlitz3.ab3@3297>   EXT.l d0
000219F4 <AmiBlitz3.ab3@3298>   MOVE.l d0,8(a2)
000219F8 <AmiBlitz3.ab3@3299>   MOVEM.l (a7)+,a0-a6/d0-d7
000219FE <AmiBlitz3.ab3@3302>   MOVE.l #firstitem_,a0
00021A00 <AmiBlitz3.ab3@3303>   MOVE.l (a0),a0
00021A04 <AmiBlitz3.ab3@3304>   LEA 9(a0),a0
00021A0C <AmiBlitz3.ab3@3305>   MOVE.w #0,exdebug
00021A12 <AmiBlitz3.ab3@3306>   TST.b debugmode
00021A16 <AmiBlitz3.ab3@3307>    BEQ 'l10
00021A18 <AmiBlitz3.ab3@3310>   MOVE.b (a0)+,d0
00021A1C <AmiBlitz3.ab3@3311>    BEQ 'l10
00021A20 <AmiBlitz3.ab3@3312>   CMP.b #$20,d0
00021A24 <AmiBlitz3.ab3@3313>    BEQ 'l2
00021A26 <AmiBlitz3.ab3@3314>   SUBQ.l #1,a0
00021A2C <AmiBlitz3.ab3@3315>   CMP.l #"DEBU",(a0)
00021A30 <AmiBlitz3.ab3@3316>    BNE 'l10
00021A36 <AmiBlitz3.ab3@3317>   CMP.b #"G",4(a0)
00021A3A <AmiBlitz3.ab3@3318>    BNE 'l10
00021A42 <AmiBlitz3.ab3@3319>   MOVE.w #$0,debugversion
00021A4A <AmiBlitz3.ab3@3320>   MOVE.b #1,exdebug
00021A50 <AmiBlitz3.ab3@3323>   LEA nops4,A0
00021A56 <AmiBlitz3.ab3@3324>   LEA dataget,A1
00021A5C <AmiBlitz3.ab3@3325>   JSR pokecode2                                            ;write intro nops
00021A62 <AmiBlitz3.ab3@3326>   MOVE.l #$01010101,d1
00021A68 <AmiBlitz3.ab3@3327>   JSR writedatalong                                        ;for the 4 tempregs
00021A6E <AmiBlitz3.ab3@3328>   JSR writedatalong
00021A74 <AmiBlitz3.ab3@3329>   JSR writedatalong
00021A7A <AmiBlitz3.ab3@3330>   JSR writedatalong
00021A80 <AmiBlitz3.ab3@3331>   TST.b saved0
00021A84 <AmiBlitz3.ab3@3332>    BEQ 'l1
00021A8A <AmiBlitz3.ab3@3333>   MOVE.l #$4e714e71,d1
00021A90 <AmiBlitz3.ab3@3334>   JSR writelong                                            ;add 2 nops
00021A96 <AmiBlitz3.ab3@3335>   MOVE.l #$4e714e71,d1
00021A9C <AmiBlitz3.ab3@3336>   JSR writelong                                            ;add 2 nops
00021AA2 <AmiBlitz3.ab3@3337>   MOVE.l #$4e714e71,d1
00021AA8 <AmiBlitz3.ab3@3338>   JSR writelong                                            ;add 2 nops
00021AAE <AmiBlitz3.ab3@3339>    MOVE.l #$4e714e71,d1
00021AB4 <AmiBlitz3.ab3@3340>   JSR writelong                                            ;add 2 nops
00021AB8 <AmiBlitz3.ab3@3343>   MOVE.b debugmode(PC),D1
00021ABC <AmiBlitz3.ab3@3344>    BEQ.b JL_0_4132
00021AC6 <AmiBlitz3.ab3@3345>   MOVE.b debugmode,storedebugmode
00021ACA <AmiBlitz3.ab3@3346>   MOVE.w #$FFDC,D1
00021ACE <AmiBlitz3.ab3@3347>    BSR.w uselib
00021AD4 <AmiBlitz3.ab3@3348>   TST.w debugversion                                       ;make a version for debugger
00021AD8 <AmiBlitz3.ab3@3349>    BNE.b JL_0_412A
00021ADC <AmiBlitz3.ab3@3353>   MOVE.w #$FA3C,D1
00021AE0 <AmiBlitz3.ab3@3354>    BSR.w uselib
00021AE4 <AmiBlitz3.ab3@3355>   MOVE.w #$0001,D1
00021AE8 <AmiBlitz3.ab3@3356>    BSR.w uselib
00021AEC <AmiBlitz3.ab3@3357> BRA.b JL_0_4132
00021AF0 <AmiBlitz3.ab3@3360>   MOVE.w #$FA32,D1
00021AF4 <AmiBlitz3.ab3@3361>   BSR.w uselib
00021AF8 <AmiBlitz3.ab3@3364>   BSR.w nextline
00021AFE <AmiBlitz3.ab3@3365>   CLR.l linenum
00021B04 <AmiBlitz3.ab3@3366>   CLR.l stacktrack
00021B0A <AmiBlitz3.ab3@3369>   ADDQ.l #1,linenum
00021B14 <AmiBlitz3.ab3@3370>   MOVE.l destpointer,destpointer2
00021B1A <AmiBlitz3.ab3@3371>   MOVE.l a5,sourceline2
00021B1E <AmiBlitz3.ab3@3372>   BSR.w compile_line                                        ;compile pass
00021B22 <AmiBlitz3.ab3@3375>   BSR.w nextline
00021B26 <AmiBlitz3.ab3@3376>    BNE.w JL_0_4136
00021B2A <AmiBlitz3.ab3@3377>   BSR.w JUMP_do_runerrson
00021B2E <AmiBlitz3.ab3@3378>   BSR.w pointchk
00021B34 <AmiBlitz3.ab3@3379>   TST.b objectcount
00021B38 <AmiBlitz3.ab3@3380>    BNE macenderr
00021B3E <AmiBlitz3.ab3@3381>   CLR.l linenumat
00021B42 <AmiBlitz3.ab3@3382>   BSR.w errchx2
00021B4C <AmiBlitz3.ab3@3383>   CMP.l #-1,bssend
00021B50 <AmiBlitz3.ab3@3384>    BNE 'l30
00021B5A <AmiBlitz3.ab3@3385>   MOVE.l destpointer,bssend                                ;compile end
00021B60 <AmiBlitz3.ab3@3388>   MOVE.l destpointer,d0
00021B6A <AmiBlitz3.ab3@3389>   CMP.l #-1,bssstart
00021B6E <AmiBlitz3.ab3@3390>   BNE 'lnf6
00021B78 <AmiBlitz3.ab3@3391>   CMP.l #-1,chipstart
00021B7C <AmiBlitz3.ab3@3392>   BNE 'lnf6
00021B80 <AmiBlitz3.ab3@3393> BRA 'leven4
00021B86 <AmiBlitz3.ab3@3396>   MOVE.l destpointer,d1
00021B88 <AmiBlitz3.ab3@3397>   ADDQ.l #3,d1
00021B8E <AmiBlitz3.ab3@3398>   AND.l #$fffffffc,d1                                      ;bug ?
00021B94 <AmiBlitz3.ab3@3399>   MOVE.l d1,destpointer
00021B9E <AmiBlitz3.ab3@3402>   MOVE.l destpointer,codeend
00021BA8 <AmiBlitz3.ab3@3403>   CMP.l #-1,chipend
00021BAC <AmiBlitz3.ab3@3404>   BNE 'l31
00021BB6 <AmiBlitz3.ab3@3405>   MOVE.l destpointer,chipend
00021BBC <AmiBlitz3.ab3@3408>   MOVE.l destpointer,d1
00021BBE <AmiBlitz3.ab3@3409>   ADDQ.l #1,d1
00021BC4 <AmiBlitz3.ab3@3410>   AND.l #$fffffffe,d1                                     ;new evenexit
00021BCA <AmiBlitz3.ab3@3411>   MOVE.l d1,destpointer
00021BCE <AmiBlitz3.ab3@3412>   MOVE.b debugmode(PC),D1
00021BD2 <AmiBlitz3.ab3@3413>    BEQ.b JL_0_4180
00021BD6 <AmiBlitz3.ab3@3414>    BSR.w debugstuff
00021BDA <AmiBlitz3.ab3@3415>   MOVE.w #$C300,D1
00021BE0 <AmiBlitz3.ab3@3416>    JSR Atokejsr
00021BE4 <AmiBlitz3.ab3@3417>    BSR.w debugstuff
00021BE8 <AmiBlitz3.ab3@3418>   MOVE.l eopcode(PC),D1
00021BEE <AmiBlitz3.ab3@3419>    JSR writelong
00021BF2 <AmiBlitz3.ab3@3420>   MOVE.l lastcontlink(PC),D1
00021BF6 <AmiBlitz3.ab3@3421>    BEQ.b JL_0_4180
00021BF8 <AmiBlitz3.ab3@3422>   MOVEA.l D1,A0
00021BFC <AmiBlitz3.ab3@3423>   CLR.w $6(A0)
00021C06 <AmiBlitz3.ab3@3429>   MOVE.l destpointer,endop                                ;where end goes...
00021C0C <AmiBlitz3.ab3@3431>   TST.w blitzmode
00021C10 <AmiBlitz3.ab3@3432>   BEQ.w JL_0_4198
00021C14 <AmiBlitz3.ab3@3433>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021C1A <AmiBlitz3.ab3@3436>   TST.w intsused
00021C1E <AmiBlitz3.ab3@3437>   BEQ.b JL_0_41AA
00021C22 <AmiBlitz3.ab3@3438>   MOVE.w #$C105,D1                                        ;interupts off!
00021C28 <AmiBlitz3.ab3@3439>   JSR tokejsr2
00021C2C <AmiBlitz3.ab3@3442>   BSR.w calcstatic
00021C32 <AmiBlitz3.ab3@3443>   MOVE.w D4,numstatic
00021C38 <AmiBlitz3.ab3@3444>   MOVE.l D3,staticdata
00021C3C <AmiBlitz3.ab3@3445>    BSR.w calcmaxs
00021C42 <AmiBlitz3.ab3@3447>   TST.l tokeslist
00021C46 <AmiBlitz3.ab3@3448>    BEQ.b JL_0_41F8
00021C4C <AmiBlitz3.ab3@3449>   MOVE.w gotocode,D1                                       ;jmp!
00021C52 <AmiBlitz3.ab3@3450>    JSR writeword
00021C5C <AmiBlitz3.ab3@3451>   MOVE.l destpointer,endjmpat
00021C60 <AmiBlitz3.ab3@3452>    BSR.w addoff
00021C66 <AmiBlitz3.ab3@3453>    JSR writelong                                           
00021C6A <AmiBlitz3.ab3@3455>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00021C70 <AmiBlitz3.ab3@3459>   TST.w dontwrite
00021C74 <AmiBlitz3.ab3@3460>    BNE.b JL_0_41F8
00021C78 <AmiBlitz3.ab3@3461>   MOVEA.l endjmpat(PC),A4
00021C7E <AmiBlitz3.ab3@3462>   MOVE.l destpointer,(A4)
00021C84 <AmiBlitz3.ab3@3465>   TST.b returncode
00021C88 <AmiBlitz3.ab3@3466>   BEQ 'l2
00021C8C <AmiBlitz3.ab3@3467>   MOVE.w #$2e80,d1
00021C92 <AmiBlitz3.ab3@3468>   JSR writeword
00021C98 <AmiBlitz3.ab3@3471>   JSR JL_0_B98A
00021C9E <AmiBlitz3.ab3@3472>   TST.b returncode
00021CA2 <AmiBlitz3.ab3@3473>   BEQ 'l3
00021CA6 <AmiBlitz3.ab3@3474>   MOVE.w #$4e75,d1
00021CAC <AmiBlitz3.ab3@3475>   JSR writeword
00021CB0 <AmiBlitz3.ab3@3476> BRA 'l1
00021CB6 <AmiBlitz3.ab3@3479>   MOVE.l #$70004E75,D1
00021CBC <AmiBlitz3.ab3@3480>   JSR writelong                                            ;write moveq #0,d0:rts
00021CC2 <AmiBlitz3.ab3@3483>   JSR JL_0_B73E
00021CC6 <AmiBlitz3.ab3@3484>   BSR.w asmfixer
00021CCA <AmiBlitz3.ab3@3485>   BSR.w close_compilewin
00021CCE <AmiBlitz3.ab3@3486> BRA.w call_setpointernormal
00021CD4 <AmiBlitz3.ab3@3490> JMP do_runerrson
00021CD6 <AmiBlitz3.ab3@3494> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00021CD8 <AmiBlitz3.ab3@3495>             Dc.b $4E,$40                                   ;TRAP  #00
00021CDC <AmiBlitz3.ab3@3497> endjmpat:   Ds.l 1
00021CE2 <AmiBlitz3.ab3@3501>   MOVEA.l newtype_string,A2
00021CE8 <AmiBlitz3.ab3@3502>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00021CEC <AmiBlitz3.ab3@3505>     CMPA.w #$0,A2
00021CF0 <AmiBlitz3.ab3@3506>      BEQ.w pointchk_done
00021CF4 <AmiBlitz3.ab3@3507>     CMP.l $4(A2),D0
00021CF8 <AmiBlitz3.ab3@3508>      BNE.w pointchk_next
00021D00 <AmiBlitz3.ab3@3509>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00021D04 <AmiBlitz3.ab3@3510> BRA.w notypeerr
00021D06 <AmiBlitz3.ab3@3513>     MOVEA.l (A2),A2
00021D0A <AmiBlitz3.ab3@3514> BRA.w pointchk_loop
00021D0C <AmiBlitz3.ab3@3517> RTS
00021D12 <AmiBlitz3.ab3@3521>   LEA labelbase,A2
00021D14 <AmiBlitz3.ab3@3525>   MOVE.l (A2),D0                                           ;testlabels
00021D18 <AmiBlitz3.ab3@3526>    BEQ.w errchx2_done
00021D1A <AmiBlitz3.ab3@3527>   MOVEA.l D0,A2
00021D1E <AmiBlitz3.ab3@3528>   MOVE.l $4(A2),D0
00021D22 <AmiBlitz3.ab3@3529>   BTST #$0,D0
00021D26 <AmiBlitz3.ab3@3530>    BNE.w errchx2_loop
00021D2A <AmiBlitz3.ab3@3531>   MOVE.l $8(A2),D0
00021D2E <AmiBlitz3.ab3@3532>    BNE.w errchx2_loop
00021D36 <AmiBlitz3.ab3@3533>   MOVE.w $10(A2),linenumat+2
00021D38 <AmiBlitz3.ab3@3534>   MOVEQ #0,d0
00021D3C <AmiBlitz3.ab3@3535>   MOVE.b $12(a2),d0
00021D44 <AmiBlitz3.ab3@3536>   MOVE.w 0(a2,d0),linenumat
00021D4A <AmiBlitz3.ab3@3537> JMP nolaberr                                               ;label not found
00021D50 <AmiBlitz3.ab3@3540>   MOVE.l concomsp,D0
00021D56 <AmiBlitz3.ab3@3541>   CMP.l #concomstack,D0
00021D5A <AmiBlitz3.ab3@3542>    BNE.w chxerr4
00021D60 <AmiBlitz3.ab3@3543>   MOVE.w connest,D1
00021D64 <AmiBlitz3.ab3@3544>    BNE.w chxerr4
00021D66 <AmiBlitz3.ab3@3547>   MOVE.l D1,-(A7)
00021D6C <AmiBlitz3.ab3@3548>   MOVE.l firstsel,D1
00021D70 <AmiBlitz3.ab3@3549>    BNE.w errchx_err1
00021D76 <AmiBlitz3.ab3@3550>   MOVE.l firstrep,D1
00021D7A <AmiBlitz3.ab3@3551>    BNE.w errchx_err2
00021D80 <AmiBlitz3.ab3@3552>   MOVE.w intstring,D1
00021D84 <AmiBlitz3.ab3@3553>    BNE.w errchx_err3
00021D88 <AmiBlitz3.ab3@3554>   MOVE.l 4(a7),d1
00021D8E <AmiBlitz3.ab3@3555>   MOVE.w proceduremode,D1
00021D92 <AmiBlitz3.ab3@3556>    BNE.w errchx_err6
00021D98 <AmiBlitz3.ab3@3557>   MOVE.l firstiff,d1
00021D9C <AmiBlitz3.ab3@3558>    BNE errchx_err5
00021DA2 <AmiBlitz3.ab3@3559>   MOVE.l firstfor,D1
00021DA6 <AmiBlitz3.ab3@3560>    BNE.w errchx_err7
00021DA8 <AmiBlitz3.ab3@3561>   MOVE.l (A7)+,D1
00021DAA <AmiBlitz3.ab3@3562> RTS
00021DB4 <AmiBlitz3.ab3@3566>   MOVE.l sellineat,linenumat
00021DBA <AmiBlitz3.ab3@3567> JMP selerrz
00021DC4 <AmiBlitz3.ab3@3570>   MOVE.l replineat,linenumat
00021DCA <AmiBlitz3.ab3@3571> JMP unterr3
00021DD4 <AmiBlitz3.ab3@3574>   MOVE.l intlineat,linenumat
00021DDA <AmiBlitz3.ab3@3575> JMP interr2
00021DE4 <AmiBlitz3.ab3@3578>   MOVE.l iflineat,linenumat
00021DEA <AmiBlitz3.ab3@3579> JMP noenderr
00021DF4 <AmiBlitz3.ab3@3582>   MOVE.l prolineat,linenumat
00021DFA <AmiBlitz3.ab3@3583> JMP nopenderr
00021E04 <AmiBlitz3.ab3@3586>   MOVE.l forlineat,linenumat
00021E0A <AmiBlitz3.ab3@3587> JMP nonexterr
00021E14 <AmiBlitz3.ab3@3590>   MOVE.l ciflineat,linenumat
00021E1A <AmiBlitz3.ab3@3591> JMP nocenderr
00021E24 <AmiBlitz3.ab3@3595>   MOVE.l data1,maxsat
00021E26 <AmiBlitz3.ab3@3596>   MOVEQ.l #$00,D4
00021E2C <AmiBlitz3.ab3@3597>   MOVEA.l libpointer,A2
00021E30 <AmiBlitz3.ab3@3600>     CMPA.w #$0,A2
00021E34 <AmiBlitz3.ab3@3601>      BEQ.w calcmaxs_done
00021E38 <AmiBlitz3.ab3@3602>     TST.w $C(A2)
00021E3C <AmiBlitz3.ab3@3603>      BPL.w calcmaxs_next
00021E40 <AmiBlitz3.ab3@3604>     MOVE.l $12(A2),D0
00021E44 <AmiBlitz3.ab3@3605>     TST.w -$2(A2,D0.L)
00021E48 <AmiBlitz3.ab3@3606>      BEQ.w calcmaxs_next
00021E4A <AmiBlitz3.ab3@3607>     ADDQ.w #1,D4
00021E4E <AmiBlitz3.ab3@3608>     MOVE.w -$6(A2,D0.L),D1
00021E52 <AmiBlitz3.ab3@3609>     BSR.w pokedata1
00021E54 <AmiBlitz3.ab3@3610>     MOVEQ.l #$01,D1
00021E58 <AmiBlitz3.ab3@3611>     MOVE.w -$2(A2,D0.L),D2
00021E5A <AmiBlitz3.ab3@3612>     LSL.w D2,D1
00021E5E <AmiBlitz3.ab3@3613>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00021E62 <AmiBlitz3.ab3@3614>     BSR.w writedatalong
00021E64 <AmiBlitz3.ab3@3617>     MOVEA.l (A2),A2
00021E68 <AmiBlitz3.ab3@3618> BRA.w calcmaxs_loop
00021E6E <AmiBlitz3.ab3@3621>   MOVE.w D4,maxsused
00021E72 <AmiBlitz3.ab3@3622>    BEQ.w calcmaxs_done2
00021E76 <AmiBlitz3.ab3@3623>   MOVE.w #$FFFA,D1                                         ;;use memlib
00021E7A <AmiBlitz3.ab3@3624> BRA.w uselib
00021E7C <AmiBlitz3.ab3@3627> RTS
00021E82 <AmiBlitz3.ab3@3631>    MOVE.l a7,stackaddr
00021E86 <AmiBlitz3.ab3@3632>    BSR.w compile_term
00021E8A <AmiBlitz3.ab3@3633>    BSR.w reget
00021E8E <AmiBlitz3.ab3@3634>    BNE.w illeolerr
00021E94 <AmiBlitz3.ab3@3635>    TST.w dontwrite
00021E98 <AmiBlitz3.ab3@3636>    BNE 'l1
00021E9E <AmiBlitz3.ab3@3637>    TST.l stacktrack
00021EA2 <AmiBlitz3.ab3@3638>    BNE errormsg_stack
00021EA6 <AmiBlitz3.ab3@3641>    CMP.w #-$7FDE,D0
00021EAA <AmiBlitz3.ab3@3642>    BNE.w compile_line_notelse
00021EB0 <AmiBlitz3.ab3@3643>    JSR do_else2
00021EB4 <AmiBlitz3.ab3@3644> BRA.w compile_line
00021EB6 <AmiBlitz3.ab3@3647>   TST.w D0
00021EBA <AmiBlitz3.ab3@3648>   BNE.w compile_line
00021EC0 <AmiBlitz3.ab3@3653>   MOVE.l firstiff,D0
00021EC4 <AmiBlitz3.ab3@3654>    BEQ.w compile_line_done
00021EC6 <AmiBlitz3.ab3@3655>   MOVEA.l D0,A0
00021ECA <AmiBlitz3.ab3@3656>   MOVE.w $C(A0),D1
00021ECE <AmiBlitz3.ab3@3657>    BPL.w compile_line_done
00021ED2 <AmiBlitz3.ab3@3661>   BCLR #$F,D1
00021ED8 <AmiBlitz3.ab3@3662>    JSR AJL_0_D7B8
00021EDE <AmiBlitz3.ab3@3663>    JSR AJL_0_D81C
00021EE2 <AmiBlitz3.ab3@3664> BRA.w compile_line_unthen
00021EE4 <AmiBlitz3.ab3@3667> RTS
00021EEA <AmiBlitz3.ab3@3671>   LEA lastgloballabel,A0
00021EEC <AmiBlitz3.ab3@3672>   TST.b (A0)
00021EF0 <AmiBlitz3.ab3@3673>   BEQ.w nolocerr
00021EF6 <AmiBlitz3.ab3@3674>   LEA ptr_parameterstore,A1
00021EF8 <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D2
00021EFA <AmiBlitz3.ab3@3678>   ADDQ.w #1,D2
00021EFC <AmiBlitz3.ab3@3679>   MOVE.b (A0)+,(A1)+
00021F00 <AmiBlitz3.ab3@3680>    BNE.w createlab_loop
00021F06 <AmiBlitz3.ab3@3681>   MOVE.b #$27,-$1(A1)
00021F08 <AmiBlitz3.ab3@3682>   MOVE.w D2,-(A7)
00021F0E <AmiBlitz3.ab3@3683>    JSR makename4
00021F10 <AmiBlitz3.ab3@3684>   CMP.w (A7)+,D2
00021F14 <AmiBlitz3.ab3@3685>    BEQ.w syntaxerr
00021F16 <AmiBlitz3.ab3@3686>    TST.w d0
00021F1A <AmiBlitz3.ab3@3687>    BPL createlab_done
00021F22 <AmiBlitz3.ab3@3688>    MOVE.w #$3a,lastchar
00021F24 <AmiBlitz3.ab3@3689>    SUBQ.l #2,a5
00021F26 <AmiBlitz3.ab3@3692> RTS
00021F30 <AmiBlitz3.ab3@3696>   MOVE.l #forthstack,forthsp
00021F3A <AmiBlitz3.ab3@3697>   MOVE.l #precstack,precsp
00021F3C <AmiBlitz3.ab3@3698> RTS
00021F3E <AmiBlitz3.ab3@3705>   MOVEQ.l #$00,D4
00021F68 <AmiBlitz3.ab3@3708>   !basic
00021FAA <AmiBlitz3.ab3@3709> 
00021FBA <AmiBlitz3.ab3@3711>   If (c_abort = 1)           ; check if set
00021FBC <AmiBlitz3.ab3@3712>     MOVEQ.l #-$01,d4
00021FC2 <AmiBlitz3.ab3@3713>     MOVE.w D4,stopit
00021FE0 <AmiBlitz3.ab3@3714>     !asm
00021FE4 <AmiBlitz3.ab3@3715>     BRA chkrealstop__skip
00022002 <AmiBlitz3.ab3@3717>   !asm
00022004 <AmiBlitz3.ab3@3718>   MOVEQ.l #$00,D6
00022006 <AmiBlitz3.ab3@3719>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022008 <AmiBlitz3.ab3@3723> RTS
0002200C <AmiBlitz3.ab3@3727>   MOVE.w stopit(PC),D0
00022010 <AmiBlitz3.ab3@3728>   BEQ chkstop__chk
00022016 <AmiBlitz3.ab3@3729>   SUBQ.w #1,stopit
00022018 <AmiBlitz3.ab3@3733> RTS
00022020 <AmiBlitz3.ab3@3736>   MOVE.w #2000,stopit
00022024 <AmiBlitz3.ab3@3737>   BSR.w chkrealstop
00022028 <AmiBlitz3.ab3@3738>   BEQ.b chkstop__rts
0002202C <AmiBlitz3.ab3@3740>   BSR.w close_compilewin
00022030 <AmiBlitz3.ab3@3741>   BSR.w call_setpointernormal
00022036 <AmiBlitz3.ab3@3743>   MOVEA.l errstack,A7
0002203C <AmiBlitz3.ab3@3744>   MOVEA.l errcont,A0
00022044 <AmiBlitz3.ab3@3745>   MOVE.w #-1,anyerrs
00022046 <AmiBlitz3.ab3@3746> JMP (A0)
0002204A <AmiBlitz3.ab3@3749> d_pc:           Ds.l 1
0002204E <AmiBlitz3.ab3@3750> d_bigpc:        Ds.l 1
00022050 <AmiBlitz3.ab3@3751> d_nomemleft:    Ds.w 1
00022054 <AmiBlitz3.ab3@3752> cont_pc:        Ds.l 1
00022058 <AmiBlitz3.ab3@3753> cont_pc2:       Ds.l 1
0002205C <AmiBlitz3.ab3@3754> lastcontlink:   Ds.l 1
00022060 <AmiBlitz3.ab3@3758>   ORI.w #$4E40,D1
00022064 <AmiBlitz3.ab3@3759> BRA.w JUMP_writeword
0002206A <AmiBlitz3.ab3@3763>   TST.b debugmode
0002206E <AmiBlitz3.ab3@3764>   BEQ.w debugstuff__rts
00022074 <AmiBlitz3.ab3@3771>   TST.w dirmode                                            ;or while in direct mode...
00022078 <AmiBlitz3.ab3@3772>    BNE debugstuff__rts
00022082 <AmiBlitz3.ab3@3773>   MOVE.l destpointer,d_pc
0002208C <AmiBlitz3.ab3@3774>   MOVE.l bigpc,d_bigpc
00022096 <AmiBlitz3.ab3@3775>   MOVE.w dontwrite,d_nomemleft
0002209A <AmiBlitz3.ab3@3776>   MOVEM.l D0-D1,-(A7)
0002209C <AmiBlitz3.ab3@3777>   MOVEQ.l #$01,D1
000220A0 <AmiBlitz3.ab3@3778>    BSR.w writetrap                                         ;write the adress to sourceline
000220A6 <AmiBlitz3.ab3@3782>    MOVE.l destpointer,D0
000220AC <AmiBlitz3.ab3@3783>   MOVE.l cont_pc,D1
000220B2 <AmiBlitz3.ab3@3784>   MOVE.l D0,cont_pc
000220B8 <AmiBlitz3.ab3@3785>   MOVE.l D1,cont_pc2
000220BC <AmiBlitz3.ab3@3786>    BEQ.b debugstuff__skip
000220C2 <AmiBlitz3.ab3@3787>   TST.w dontwrite
000220C6 <AmiBlitz3.ab3@3788>    BNE.b debugstuff__skip
000220C8 <AmiBlitz3.ab3@3789>   MOVEA.l D1,A4
000220CA <AmiBlitz3.ab3@3790>   SUB.l A4,D0
000220CE <AmiBlitz3.ab3@3791>   MOVE.w D0,$6(A4)
000220D4 <AmiBlitz3.ab3@3792>   MOVE.l A4,lastcontlink
000220DA <AmiBlitz3.ab3@3795>   TST.w ininclude
000220E0 <AmiBlitz3.ab3@3797>   TST.w makeexec
000220E4 <AmiBlitz3.ab3@3798>   BEQ 'l1
000220EA <AmiBlitz3.ab3@3799>   TST.w exdebug
000220EE <AmiBlitz3.ab3@3800>   BEQ 'noinc
000220F2 <AmiBlitz3.ab3@3803>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
000220F8 <AmiBlitz3.ab3@3804>   MOVE.l data1,d1
000220FE <AmiBlitz3.ab3@3805>   TST.b firsttime
00022102 <AmiBlitz3.ab3@3806>   BNE 'nofirst
0002210A <AmiBlitz3.ab3@3807>   MOVE.b #1,firsttime
00022110 <AmiBlitz3.ab3@3808>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022116 <AmiBlitz3.ab3@3809>   JSR writedatalong
0002211C <AmiBlitz3.ab3@3810>   MOVE.l #"AmiB",d1
00022122 <AmiBlitz3.ab3@3811>   JSR writedatalong
00022128 <AmiBlitz3.ab3@3812>   MOVE.l destbufferstart,d1
0002212E <AmiBlitz3.ab3@3813>   JSR writedatalong
00022134 <AmiBlitz3.ab3@3814>   TST.w dontwrite
00022138 <AmiBlitz3.ab3@3815>   BNE 'nohunk
0002213E <AmiBlitz3.ab3@3816>   MOVE.l data1,d1
00022140 <AmiBlitz3.ab3@3817>   SUBQ.l #4,d1
00022146 <AmiBlitz3.ab3@3818>   SUB.l destbufferstart,d1
00022148 <AmiBlitz3.ab3@3819>   MOVE.l d1,d2
0002214E <AmiBlitz3.ab3@3820>   JSR addhunkoffset
00022154 <AmiBlitz3.ab3@3823>   MOVE.l destpointer,d2
0002215A <AmiBlitz3.ab3@3824>   MOVE.l data1,d1
00022160 <AmiBlitz3.ab3@3827>   MOVE.l destpointer,d2
00022162 <AmiBlitz3.ab3@3828>   MOVE.l d1,d3
00022168 <AmiBlitz3.ab3@3829>   SUB.l destbufferstart,d1
0002216E <AmiBlitz3.ab3@3830>   OR.l #$80000000,d1
00022174 <AmiBlitz3.ab3@3831>   JSR writelong
0002217A <AmiBlitz3.ab3@3832>   TST.w inmacro
0002217E <AmiBlitz3.ab3@3833>   BEQ 'sc1
00022184 <AmiBlitz3.ab3@3834>   MOVE.l myline,a0
00022188 <AmiBlitz3.ab3@3836> BRA 'inc2
0002218E <AmiBlitz3.ab3@3838>  'sc1  TST.w ininclude
00022192 <AmiBlitz3.ab3@3839>   BEQ 'inc
00022198 <AmiBlitz3.ab3@3840>   MOVE.l includesourceline,a0
0002219C <AmiBlitz3.ab3@3841> BRA 'inc2
000221A2 <AmiBlitz3.ab3@3844>   MOVE.l sourceline,a0
000221A6 <AmiBlitz3.ab3@3845>   LEA 9(a0),a0
000221A8 <AmiBlitz3.ab3@3848>   MOVE.l d1,d2
000221AA <AmiBlitz3.ab3@3849>   MOVE.l A5,D1
000221AC <AmiBlitz3.ab3@3850>   SUB.l a0,D1
000221B2 <AmiBlitz3.ab3@3851>   ADD.l #9,d1
000221B6 <AmiBlitz3.ab3@3852>   BSR.w JUMP_writeword
000221BC <AmiBlitz3.ab3@3853>   CMP.l #9,d1
000221C0 <AmiBlitz3.ab3@3854>   BEQ 'pos1
000221C6 <AmiBlitz3.ab3@3855>   TST.w dontwrite
000221CA <AmiBlitz3.ab3@3856>   BNE 'nopad
000221D0 <AmiBlitz3.ab3@3857>   MOVE.l lastsourceline,d1
000221D4 <AmiBlitz3.ab3@3858>   MOVE.l d1,-6(a4)
000221D8 <AmiBlitz3.ab3@3859> BRA 'nopad
000221DE <AmiBlitz3.ab3@3862>   MOVE.l d2,lastsourceline
000221E8 <AmiBlitz3.ab3@3863>    MOVE.l destpointer,lastdestpointer
000221EA <AmiBlitz3.ab3@3864>    MOVEQ #0,d1
000221F0 <AmiBlitz3.ab3@3865>   MOVE.l data1,d2
000221F6 <AmiBlitz3.ab3@3866>   SUB.l destbufferstart,d2
000221FC <AmiBlitz3.ab3@3867>   JSR writedatalong
00022202 <AmiBlitz3.ab3@3868>   TST.w dontwrite
00022206 <AmiBlitz3.ab3@3869>   BNE 'no2
0002220C <AmiBlitz3.ab3@3870>   JSR addhunkoffset
00022212 <AmiBlitz3.ab3@3873>   MOVE.l data1,d2
00022218 <AmiBlitz3.ab3@3874>   SUB.l destbufferstart,d2
0002221E <AmiBlitz3.ab3@3875>   JSR writedatalong
00022224 <AmiBlitz3.ab3@3876>   TST.w dontwrite
00022228 <AmiBlitz3.ab3@3877>   BNE 'no
0002222E <AmiBlitz3.ab3@3878>   JSR addhunkoffset
00022234 <AmiBlitz3.ab3@3879>   MOVE.l lastwritedat,a1
0002223A <AmiBlitz3.ab3@3880>   CMP.l #0,a1
0002223E <AmiBlitz3.ab3@3881>   BEQ 'no
00022240 <AmiBlitz3.ab3@3882>   MOVE.l d3,(a1)
00022248 <AmiBlitz3.ab3@3883>   MOVE.l prevwritedat,4(a1)
00022252 <AmiBlitz3.ab3@3884>   MOVE.l lastwritedat,prevwritedat
00022258 <AmiBlitz3.ab3@3887>   MOVE.l d3,lastwritedat
0002225A <AmiBlitz3.ab3@3888>   MOVEQ #4,d1
0002225E <AmiBlitz3.ab3@3889>   BSR pokedata1b
00022260 <AmiBlitz3.ab3@3892>   MOVE.b (a0)+,d1
00022264 <AmiBlitz3.ab3@3893>   BEQ 'done
00022268 <AmiBlitz3.ab3@3894>   BSR pokedata1b
0002226C <AmiBlitz3.ab3@3895> BRA 'loop
0002226E <AmiBlitz3.ab3@3898>   MOVEQ #0,d1
00022272 <AmiBlitz3.ab3@3899>   BSR pokedata1b
00022278 <AmiBlitz3.ab3@3900>   MOVE.l data1,d1
0002227C <AmiBlitz3.ab3@3901>   BTST #0,d1
00022280 <AmiBlitz3.ab3@3902>   BEQ 'nopad
00022282 <AmiBlitz3.ab3@3903>   MOVEQ #0,d1
00022286 <AmiBlitz3.ab3@3904>   BSR pokedata1b
0002228A <AmiBlitz3.ab3@3907>   MOVEM.l (a7)+,a0-a1/d2/d3
0002228E <AmiBlitz3.ab3@3908> BRA 'noinc2
00022294 <AmiBlitz3.ab3@3911>   MOVE.l sourceline,D1
0002229A <AmiBlitz3.ab3@3913>   JSR writelong
0002229C <AmiBlitz3.ab3@3914>   MOVE.l A5,D1
000222A2 <AmiBlitz3.ab3@3915>   SUB.l sourceline,D1
000222A8 <AmiBlitz3.ab3@3917>   JSR writeword
000222AA <AmiBlitz3.ab3@3920>   MOVEQ.l #$00,D1
000222B0 <AmiBlitz3.ab3@3921>   JSR writeword                                            ; was: BSR.w writeword
000222B4 <AmiBlitz3.ab3@3922>   MOVEM.l (A7)+,D0-D1
000222B6 <AmiBlitz3.ab3@3925> RTS
000222BC <AmiBlitz3.ab3@3929>   TST.b debugmode                                          ;extern debug
000222C0 <AmiBlitz3.ab3@3930>    BEQ.b undodebug__rts
000222C6 <AmiBlitz3.ab3@3931>   TST.b dirmode
000222CA <AmiBlitz3.ab3@3932>   BNE undodebug__rts
000222D4 <AmiBlitz3.ab3@3937>   MOVE.w d_nomemleft,dontwrite
000222DE <AmiBlitz3.ab3@3938>   MOVE.l d_bigpc,bigpc
000222E8 <AmiBlitz3.ab3@3939>   MOVE.l d_pc,destpointer
000222F2 <AmiBlitz3.ab3@3940>   MOVE.l cont_pc2,cont_pc
000222F4 <AmiBlitz3.ab3@3943> RTS
000222FE <AmiBlitz3.ab3@3947>   MOVE.l #forthstack,forthsp
00022308 <AmiBlitz3.ab3@3948>   MOVE.l #precstack,precsp
0002230E <AmiBlitz3.ab3@3949>   CLR.w regnum
00022314 <AmiBlitz3.ab3@3950>   CLR.w nonew
0002231A <AmiBlitz3.ab3@3951>   CLR.w sbasegot
00022324 <AmiBlitz3.ab3@3952>   MOVE.w varcodelen,oldvcodelen
0002232A <AmiBlitz3.ab3@3953>   CLR.w varcodelen
00022332 <AmiBlitz3.ab3@3954>   MOVE.w #-1,lasta6
00022334 <AmiBlitz3.ab3@3955> RTS
0002233A <AmiBlitz3.ab3@3959>   TST.w linemode
0002233E <AmiBlitz3.ab3@3960>   BMI.b smode__skip
00022342 <AmiBlitz3.ab3@3961>   BSR.w undodebug
00022348 <AmiBlitz3.ab3@3962>   MOVE.w linemode,D1
0002234A <AmiBlitz3.ab3@3963>   ADDQ.w #4,A7
0002234C <AmiBlitz3.ab3@3964>   LSL.w #2,D1
00022352 <AmiBlitz3.ab3@3965>   LEA modetable,A0
00022356 <AmiBlitz3.ab3@3966>   MOVEA.l $0(A0,D1.W),A0
0002235A <AmiBlitz3.ab3@3967>   BSR.w reget
0002235C <AmiBlitz3.ab3@3970> JMP (A0)                                                   ;jumptokenroutine
0002235E <AmiBlitz3.ab3@3973> RTS
00022366 <AmiBlitz3.ab3@3978>   MOVE.w #0,leaa0a0+2
0002236C <AmiBlitz3.ab3@3979>   CLR.b nowdeclare
00022372 <AmiBlitz3.ab3@3980>   CLR.b notypecheck
00022378 <AmiBlitz3.ab3@3981>   CLR.l lasttoken
0002237E <AmiBlitz3.ab3@3982>   CLR.b doimmediate
00022384 <AmiBlitz3.ab3@3983>   CLR.w vartype
0002238A <AmiBlitz3.ab3@3984>   CLR.w regnumfunc
00022390 <AmiBlitz3.ab3@3985>   CLR.b optistring
00022396 <AmiBlitz3.ab3@3986>   CLR.b iniffcommand
0002239C <AmiBlitz3.ab3@3987>   CLR.w instringon  ; new
000223A2 <AmiBlitz3.ab3@3988>   CLR.b funccall
000223A8 <AmiBlitz3.ab3@3989>   CLR.l currentfunccall
000223AE <AmiBlitz3.ab3@3990>   CLR.l leftsidetype
000223B4 <AmiBlitz3.ab3@3991>   CLR.l rightsidetype
000223BA <AmiBlitz3.ab3@3992>   CLR.b peekaddrsize
000223C0 <AmiBlitz3.ab3@3993>   CLR.b blitzparloop
000223C6 <AmiBlitz3.ab3@3994>   CLR.b funcparloop
000223CC <AmiBlitz3.ab3@3995>   TST.b debugmode
000223D0 <AmiBlitz3.ab3@3996>    BEQ 'fpu
000223DA <AmiBlitz3.ab3@4002>   MOVE.b fpu,iee
000223DE <AmiBlitz3.ab3@4003>   MOVE.w stopit(PC),D0
000223E2 <AmiBlitz3.ab3@4004>   BNE chkstop_chkb
000223E6 <AmiBlitz3.ab3@4005>   BSR.w chkstop                                          ; message here
000223EC <AmiBlitz3.ab3@4008>   SUBQ.w #1,stopit
000223F0 <AmiBlitz3.ab3@4011>   BSR.w findmacro                                          ;macro
000223F6 <AmiBlitz3.ab3@4065>   TST.b debugmode
000223FA <AmiBlitz3.ab3@4066>    BEQ.s 'l10
00022400 <AmiBlitz3.ab3@4067>   TST.b exdebug
00022404 <AmiBlitz3.ab3@4068>   BEQ 'l10a
00022406 <AmiBlitz3.ab3@4069>   MOVE.w (a5),d0
0002240A <AmiBlitz3.ab3@4070>   CMP.w #$8025,d0
0002240E <AmiBlitz3.ab3@4071>    BEQ 'l10
00022412 <AmiBlitz3.ab3@4074>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022416 <AmiBlitz3.ab3@4078>   BSR.w get1bytemain                                       ;gettokenmain
0002241A <AmiBlitz3.ab3@4079>    BEQ.w undodebug
0002241E <AmiBlitz3.ab3@4080>   CMP.w #$002b,d0                                            ;check for + cast sign
00022422 <AmiBlitz3.ab3@4081>     BNE 'lb2
00022426 <AmiBlitz3.ab3@4082>     BSR.w get1bytemain
0002242E <AmiBlitz3.ab3@4083>     MOVE.b #1,notypecheck
00022438 <AmiBlitz3.ab3@4091>   MOVE.l #forthstack,forthsp
00022442 <AmiBlitz3.ab3@4092>   MOVE.l #precstack,precsp
00022448 <AmiBlitz3.ab3@4093>   CLR.w regnum
0002244E <AmiBlitz3.ab3@4094>   CLR.w nonew
00022454 <AmiBlitz3.ab3@4095>   CLR.w sbasegot
0002245E <AmiBlitz3.ab3@4096>   MOVE.w varcodelen,oldvcodelen
00022464 <AmiBlitz3.ab3@4098>   CLR.w varcodelen
0002246C <AmiBlitz3.ab3@4099>   MOVE.w #$FFFF,lasta6
00022470 <AmiBlitz3.ab3@4101>   BSR.w smode
00022472 <AmiBlitz3.ab3@4102>   TST.w D0
00022476 <AmiBlitz3.ab3@4103>   BMI.w get_tokencode
0002247A <AmiBlitz3.ab3@4104>   CMP.w #$2E,D0
0002247E <AmiBlitz3.ab3@4105>    BEQ.w JL_0_4644                                         ;shortlist
00022482 <AmiBlitz3.ab3@4106>   CMP.w #"#",D0
00022486 <AmiBlitz3.ab3@4107>    BEQ.w JL_0_4718                                         ;constant found
0002248A <AmiBlitz3.ab3@4108>   CMP.w #$27,D0
0002248E <AmiBlitz3.ab3@4109>    BEQ.w JL_0_4638                                         ;local label
00022494 <AmiBlitz3.ab3@4110>   MOVE.l A5,letstart
0002249A <AmiBlitz3.ab3@4111>   JSR getparameter
0002249E <AmiBlitz3.ab3@4112>   BSR.w reget
000224A2 <AmiBlitz3.ab3@4113>    BEQ.w JL_0_4658                                         ;label found
000224A6 <AmiBlitz3.ab3@4114>   CMP.w #$7B,D0
000224AA <AmiBlitz3.ab3@4115>    BEQ.w JL_0_475C
000224AC <AmiBlitz3.ab3@4116>   TST.w d0
000224B0 <AmiBlitz3.ab3@4117>    BPL 'll1
000224B6 <AmiBlitz3.ab3@4118>   TST.b newsyntax
000224BA <AmiBlitz3.ab3@4119>    BEQ 'll1
000224C0 <AmiBlitz3.ab3@4120>   LEA allowtab,a0
000224C2 <AmiBlitz3.ab3@4121>   MOVEQ #0,d1
000224C4 <AmiBlitz3.ab3@4122>   MOVE.b d0,d1
000224C8 <AmiBlitz3.ab3@4123>   TST.b 0(a0,d1.w)
000224CC <AmiBlitz3.ab3@4124>    BNE 'll1
000224CE <AmiBlitz3.ab3@4125>   SUBQ.l #2,a5
000224D6 <AmiBlitz3.ab3@4126>   MOVE.w #":",lastchar                                     ;no doublepoint
000224DA <AmiBlitz3.ab3@4127> BRA JL_0_4658
000224E2 <AmiBlitz3.ab3@4130>   CMP.l #"equ ",-1(a5)
000224E6 <AmiBlitz3.ab3@4131>    BEQ 'll4
000224EE <AmiBlitz3.ab3@4132>   CMP.l #"EQU ",-1(a5)
000224F2 <AmiBlitz3.ab3@4133>    BNE 'll2
000224F4 <AmiBlitz3.ab3@4136>   ADDQ.l #2,a5
000224F8 <AmiBlitz3.ab3@4137>   BSR.w findlabel2
000224FC <AmiBlitz3.ab3@4138>   BEQ.w 'lf1
00022500 <AmiBlitz3.ab3@4139>   BSR.w addlabelhash
00022508 <AmiBlitz3.ab3@4140>   MOVE.l #$1,$4(A2)
00022510 <AmiBlitz3.ab3@4143>   CMPI.l #$1,$4(A2)
00022514 <AmiBlitz3.ab3@4144>    BNE.w illconerr
00022518 <AmiBlitz3.ab3@4145>   BSR get1bytemain
0002251A <AmiBlitz3.ab3@4146>   MOVE.l A2,-(A7)
0002251C <AmiBlitz3.ab3@4157>   SUBQ.l #1,a5
0002251E <AmiBlitz3.ab3@4160>   SUBQ.l #1,a5
00022524 <AmiBlitz3.ab3@4161>   JSR AJL_0_BF6E
00022526 <AmiBlitz3.ab3@4162>   MOVEA.l (A7)+,A2
0002252A <AmiBlitz3.ab3@4163>   MOVE.l D3,$8(A2)
0002252C <AmiBlitz3.ab3@4164>   RTS
00022530 <AmiBlitz3.ab3@4165>   BSR get1bytemain
00022538 <AmiBlitz3.ab3@4168>   CMP.l #"SET ",-1(a5)
0002253C <AmiBlitz3.ab3@4169>   BNE 'll3
00022540 <AmiBlitz3.ab3@4170> BRA 'll4
00022546 <AmiBlitz3.ab3@4173> JMP AJL_0_DEA6
0002254A <AmiBlitz3.ab3@4176>   CMP.w #-$7FDE,D0
0002254E <AmiBlitz3.ab3@4177>   BEQ.w get_tokencode
00022552 <AmiBlitz3.ab3@4178> BRA.w undodebug
00022556 <AmiBlitz3.ab3@4181>   BSR.w undodebug
0002255A <AmiBlitz3.ab3@4182>   BSR.w createlab
0002255E <AmiBlitz3.ab3@4183> BRA.w JL_0_466E
00022562 <AmiBlitz3.ab3@4186>   BSR.w get1bytemain
00022566 <AmiBlitz3.ab3@4187>    BEQ.w JL_0_462C
0002256A <AmiBlitz3.ab3@4188>   CMP.w #"'",D0
0002256E <AmiBlitz3.ab3@4189>    BEQ.w JL_0_4638
00022572 <AmiBlitz3.ab3@4190>    BSR.w makename2
00022574 <AmiBlitz3.ab3@4191>    TST.w d0
00022578 <AmiBlitz3.ab3@4192>    BPL 'll1
0002257A <AmiBlitz3.ab3@4193>    SUBQ.l #2,a5
00022582 <AmiBlitz3.ab3@4194>    MOVE.w #":",lastchar
00022586 <AmiBlitz3.ab3@4195> BRA JL_0_4658                                              ;????
0002258A <AmiBlitz3.ab3@4199>   BSR.w undodebug
00022590 <AmiBlitz3.ab3@4200>   LEA ptr_parameterstore,A0
00022596 <AmiBlitz3.ab3@4201>   LEA lastgloballabel,A1
00022598 <AmiBlitz3.ab3@4204>   MOVE.b (A0)+,(A1)+
0002259C <AmiBlitz3.ab3@4205>    BNE.w JL_0_4668
000225A0 <AmiBlitz3.ab3@4208>   BSR.w findlabel2
000225A4 <AmiBlitz3.ab3@4209>    BEQ.w JL_0_4698
000225A8 <AmiBlitz3.ab3@4210>    BSR.w addlabelhash
000225AC <AmiBlitz3.ab3@4213>   CLR.l $4(A2)
000225B4 <AmiBlitz3.ab3@4214>   MOVE.l destpointer,$8(A2)
000225BC <AmiBlitz3.ab3@4217>   MOVE.w procnum,$10(A2)
000225BE <AmiBlitz3.ab3@4218> RTS
000225C2 <AmiBlitz3.ab3@4222>   MOVE.l $4(A2),D0
000225C6 <AmiBlitz3.ab3@4223>   BTST #$0,D0
000225CA <AmiBlitz3.ab3@4224>    BNE.w illlaberr
000225D0 <AmiBlitz3.ab3@4225>   TST.w pass
000225D4 <AmiBlitz3.ab3@4227>   MOVE.l $8(A2),D0
000225D8 <AmiBlitz3.ab3@4228>    BNE.w duplaberr
000225E0 <AmiBlitz3.ab3@4229>   MOVE.w procnum,$10(A2)
000225E4 <AmiBlitz3.ab3@4230>   MOVEA.l $4(A2),A3
000225EA <AmiBlitz3.ab3@4231>   MOVEA.l _execbase,A6
000225EE <AmiBlitz3.ab3@4234>   CMPA.w #$0,A3
000225F2 <AmiBlitz3.ab3@4235>    BEQ.w JL_0_467A
000225F6 <AmiBlitz3.ab3@4236>     MOVE.l $4(A2),D1
000225FA <AmiBlitz3.ab3@4237>     BTST #$0,D1
000225FE <AmiBlitz3.ab3@4238>     BNE.w illlaberr
00022602 <AmiBlitz3.ab3@4239>   MOVE.w $8(A3),D1
00022606 <AmiBlitz3.ab3@4240>   CMP.w $10(A2),D1
0002260A <AmiBlitz3.ab3@4241>    BEQ.w JL_0_46DC
00022610 <AmiBlitz3.ab3@4242>    TST.b newsyntax
00022614 <AmiBlitz3.ab3@4243>    BEQ 'l1
00022618 <AmiBlitz3.ab3@4244> BRA.w JL_0_46DC                                            ;label context out of range fix
00022620 <AmiBlitz3.ab3@4249>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022624 <AmiBlitz3.ab3@4250> BRA.w referr
0002262A <AmiBlitz3.ab3@4253>   MOVE.w dontwrite,D1
0002262E <AmiBlitz3.ab3@4254>    BNE.w JL_0_4706
00022632 <AmiBlitz3.ab3@4255>   MOVEA.l $4(A3),A1
00022638 <AmiBlitz3.ab3@4256>   BTST #$0,$7(A3)
0002263C <AmiBlitz3.ab3@4257>    BEQ.w JL_0_4700
0002263E <AmiBlitz3.ab3@4258>   SUBQ.w #1,A1
00022644 <AmiBlitz3.ab3@4259>   MOVE.l data2,(A1)
00022648 <AmiBlitz3.ab3@4260> BRA.w JL_0_4706
0002264E <AmiBlitz3.ab3@4263>   MOVE.l destpointer,(A1)
00022650 <AmiBlitz3.ab3@4266>   MOVEA.l A3,A1
00022652 <AmiBlitz3.ab3@4267>   MOVEA.l (A3),A3
00022656 <AmiBlitz3.ab3@4268>   MOVE.l A3,$4(A2)
00022658 <AmiBlitz3.ab3@4269>   MOVEQ.l #$0C+2,D0
0002265E <AmiBlitz3.ab3@4270>   MOVE.l mempool,a0
00022664 <AmiBlitz3.ab3@4271>   MOVEA.l _execbase,A6
00022668 <AmiBlitz3.ab3@4272>   JSR _FreePooled(A6)
0002266C <AmiBlitz3.ab3@4273> BRA.w JL_0_46BC
00022676 <AmiBlitz3.ab3@4278>    MOVE.l #forthstack,forthsp
00022680 <AmiBlitz3.ab3@4279>   MOVE.l #precstack,precsp
00022684 <AmiBlitz3.ab3@4280>    BSR.w getparameter2
00022688 <AmiBlitz3.ab3@4283>   BSR.w findlabel2
0002268C <AmiBlitz3.ab3@4284>    BEQ.w JL_0_4738
00022690 <AmiBlitz3.ab3@4285>    BSR.w addlabelhash
00022698 <AmiBlitz3.ab3@4286>   MOVE.l #$1,$4(A2)
0002269C <AmiBlitz3.ab3@4287> BRA.w JL_0_4744
000226A4 <AmiBlitz3.ab3@4290>   CMPI.l #$1,$4(A2)
000226A8 <AmiBlitz3.ab3@4291>    BNE.w illconerr
000226AC <AmiBlitz3.ab3@4300>   CMP.w #$3D,D0
000226B0 <AmiBlitz3.ab3@4301>   BEQ.w JL_0_474E
000226B2 <AmiBlitz3.ab3@4302> RTS
000226B4 <AmiBlitz3.ab3@4306>   MOVE.l A2,-(A7)
000226BA <AmiBlitz3.ab3@4307>   JSR AJL_0_BF6E
000226BC <AmiBlitz3.ab3@4308>   MOVEA.l (A7)+,A2
000226C0 <AmiBlitz3.ab3@4309>   MOVE.l D3,$8(A2)                                         ;store constant
000226C8 <AmiBlitz3.ab3@4310>   CMP.w #$0a,lastchar
000226CC <AmiBlitz3.ab3@4311>   BNE 'l1
000226D4 <AmiBlitz3.ab3@4312>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000226D6 <AmiBlitz3.ab3@4315> RTS
000226DA <AmiBlitz3.ab3@4318>   BSR.w findproc                                           ;write statement call
000226DE <AmiBlitz3.ab3@4319>   BEQ _state
000226E4 <AmiBlitz3.ab3@4320>   TST.l unusedfunc
000226E8 <AmiBlitz3.ab3@4321>   BEQ noprocerr
000226EE <AmiBlitz3.ab3@4323>   JSR gotoendsource
000226F2 <AmiBlitz3.ab3@4326>   TST.b $5(A2)
000226F8 <AmiBlitz3.ab3@4328>   MOVE.l a2,currentfunccall
00022700 <AmiBlitz3.ab3@4329>   MOVE.b #1,funccall
00022706 <AmiBlitz3.ab3@4330>   MOVE.b #1,isfunc(a2)
0002270A <AmiBlitz3.ab3@4331>   MOVE.l $E(A2),-(A7)
0002270C <AmiBlitz3.ab3@4332>   MOVEQ.l #$00,D0
00022710 <AmiBlitz3.ab3@4333>   MOVE.b $4(A2),D0
00022716 <AmiBlitz3.ab3@4334>   MOVE.l d0,parnumtemp
0002271A <AmiBlitz3.ab3@4335>   BEQ.w JL_0_4786
0002271E <AmiBlitz3.ab3@4336>   TST.b $20(a2)                                            ;increase if morepar
00022722 <AmiBlitz3.ab3@4337>   BNE 'no0par
00022724 <AmiBlitz3.ab3@4338>   MOVE.l a5,a4
00022728 <AmiBlitz3.ab3@4341>   CMP.b #$20,(a4)+
0002272C <AmiBlitz3.ab3@4342>   BEQ 'l1
00022732 <AmiBlitz3.ab3@4343>   CMP.b #"}",-1(a4)
00022736 <AmiBlitz3.ab3@4344>   BNE  'no0par                                             ;statementcall pars
00022738 <AmiBlitz3.ab3@4345>   MOVEQ #0,d0
0002273C <AmiBlitz3.ab3@4348>   LEA $16(A2),A1
0002273E <AmiBlitz3.ab3@4351>   MOVE.l d1,-(a7)
00022740 <AmiBlitz3.ab3@4352>   MOVE.b (a1),d2
00022742 <AmiBlitz3.ab3@4353>   MOVE.l d0,d1
00022746 <AmiBlitz3.ab3@4354>   CMP.w #4,d2
0002274A <AmiBlitz3.ab3@4355>   BNE 'l1b
00022750 <AmiBlitz3.ab3@4356>   ADD.l #$203c,d1
00022756 <AmiBlitz3.ab3@4358>   JSR writeword
0002275C <AmiBlitz3.ab3@4359>   MOVE.l #$ffff0000,d1
00022762 <AmiBlitz3.ab3@4361>   JSR writelong
00022766 <AmiBlitz3.ab3@4362> BRA 'l2b
0002276C <AmiBlitz3.ab3@4365>   TST.b fpu
00022770 <AmiBlitz3.ab3@4366>   BNE 'l1c
00022774 <AmiBlitz3.ab3@4367>   CMP.w #5,d2
00022778 <AmiBlitz3.ab3@4368>   BNE 'l1c
0002277E <AmiBlitz3.ab3@4369>   ADD.l #$203c,d1
00022784 <AmiBlitz3.ab3@4371>   JSR writeword
0002278A <AmiBlitz3.ab3@4372>   MOVE.l #$800000c1,d1
00022790 <AmiBlitz3.ab3@4374>   JSR writelong
00022794 <AmiBlitz3.ab3@4375> BRA 'l2b
0002279A <AmiBlitz3.ab3@4378>   ADD.l #$70ff,d1
000227A0 <AmiBlitz3.ab3@4380>   JSR writeword
000227A6 <AmiBlitz3.ab3@4381>   MOVE.l #$f23c5000,d1
000227A8 <AmiBlitz3.ab3@4382>   MOVE.l d0,d2
000227AA <AmiBlitz3.ab3@4383>   ASR.l #2,d2
000227AC <AmiBlitz3.ab3@4384>   ADD.l d2,d1
000227B2 <AmiBlitz3.ab3@4386>   JSR writelong
000227B6 <AmiBlitz3.ab3@4387>   MOVE.w #$ffff,d1
000227BC <AmiBlitz3.ab3@4389>   JSR writeword
000227BE <AmiBlitz3.ab3@4392>   MOVE.l (a7)+,d1
000227C0 <AmiBlitz3.ab3@4393>   ADDQ.l #1,a1
000227C6 <AmiBlitz3.ab3@4394>   ADD.l #$0200,d0
000227CC <AmiBlitz3.ab3@4395>   CMP.l #$0e00,d0
000227D0 <AmiBlitz3.ab3@4396>    BEQ syntaxerr
000227D2 <AmiBlitz3.ab3@4397>   TST.b (a1)
000227D6 <AmiBlitz3.ab3@4398>    BNE 'again
000227DA <AmiBlitz3.ab3@4399> BRA JL_0_4786
000227E4 <AmiBlitz3.ab3@4402>   MOVE.w a2offset,a2offset2
000227E8 <AmiBlitz3.ab3@4403>   LEA $16(A2),A2
000227EE <AmiBlitz3.ab3@4404>   MOVE.b funcparloop,-(a7)
000227F6 <AmiBlitz3.ab3@4405>   MOVE.b #1,funcparloop
000227FC <AmiBlitz3.ab3@4406>   MOVE.b blitzparloop,-(a7)
00022802 <AmiBlitz3.ab3@4407>   CLR.b blitzparloop
00022806 <AmiBlitz3.ab3@4408>   BSR.w fetchpees2
0002280C <AmiBlitz3.ab3@4409>   MOVE.b (a7)+,blitzparloop
00022812 <AmiBlitz3.ab3@4410>   MOVE.b (a7)+,funcparloop
00022816 <AmiBlitz3.ab3@4411> BRA.w JL_0_478A
0002281A <AmiBlitz3.ab3@4414>   BSR.w get1bytemain
0002281E <AmiBlitz3.ab3@4417>   CMP.w #$7D,D0
00022822 <AmiBlitz3.ab3@4418>    BNE.w morepar_                                          ;syntax error morepar
00022828 <AmiBlitz3.ab3@4419>    JSR chkstak
0002282A <AmiBlitz3.ab3@4420>   MOVE.l (A7)+,D1
00022830 <AmiBlitz3.ab3@4436>    JSR JL_0_AFCA
00022836 <AmiBlitz3.ab3@4458>   CLR.b funccall
0002283A <AmiBlitz3.ab3@4459> BRA.w get1bytemain
00022840 <AmiBlitz3.ab3@4463>   MOVE.l d0,lasttoken
00022844 <AmiBlitz3.ab3@4464>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022848 <AmiBlitz3.ab3@4465>   BNE 'l2
0002284C <AmiBlitz3.ab3@4466>    MOVE.w #$dd05,d0
00022850 <AmiBlitz3.ab3@4469>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022854 <AmiBlitz3.ab3@4470>   BNE 'l3
00022858 <AmiBlitz3.ab3@4471>    MOVE.w #$dd06,d0
0002285C <AmiBlitz3.ab3@4474>   CMP.w #-$7FC4,D0
00022860 <AmiBlitz3.ab3@4475>   BCS.w JL_0_47C4
00022864 <AmiBlitz3.ab3@4476>     CMP.w #-$7F4D,D0
00022868 <AmiBlitz3.ab3@4477>     BCC.w JL_0_47C4
00022870 <AmiBlitz3.ab3@4478>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022874 <AmiBlitz3.ab3@4479>       BNE.b JL_0_47C0
0002287A <AmiBlitz3.ab3@4480>         TST.b debugmode
0002287E <AmiBlitz3.ab3@4481>         BEQ.b 'l10
00022888 <AmiBlitz3.ab3@4486>           MOVE.w d_nomemleft,dontwrite
00022892 <AmiBlitz3.ab3@4487>           MOVE.l d_bigpc,bigpc
0002289C <AmiBlitz3.ab3@4488>           MOVE.l d_pc,destpointer
000228A6 <AmiBlitz3.ab3@4489>           MOVE.l cont_pc2,cont_pc
000228AA <AmiBlitz3.ab3@4495> BRA.w JL_0_612C
000228AE <AmiBlitz3.ab3@4498>   BCLR #$F,D0
000228B0 <AmiBlitz3.ab3@4499>   MOVE.w D0,D1
000228B4 <AmiBlitz3.ab3@4500>   ANDI.w #$7F00,D1
000228B8 <AmiBlitz3.ab3@4501>   BNE.w JL_0_4856
000228BC <AmiBlitz3.ab3@4502>     CMP.w #$B3,D0                                          ;intern Instructions
000228C0 <AmiBlitz3.ab3@4503>     BCS.w JL_0_47F2
000228C4 <AmiBlitz3.ab3@4504>       SUBI.w #$77,D0
000228C8 <AmiBlitz3.ab3@4505>       CMP.w #$4B,D0
000228CC <AmiBlitz3.ab3@4506>       BEQ.w JL_0_4830
000228D0 <AmiBlitz3.ab3@4507>         CMP.w #$46,D0
000228D4 <AmiBlitz3.ab3@4508>         BEQ.w JL_0_4830
000228D8 <AmiBlitz3.ab3@4509> BRA.w JL_0_4834                                            ; change tokennum
000228DC <AmiBlitz3.ab3@4512>     CMP.w #$38,D0
000228E0 <AmiBlitz3.ab3@4513>      BEQ.w JL_0_4830
000228E4 <AmiBlitz3.ab3@4514>     CMP.w #$39,D0
000228E8 <AmiBlitz3.ab3@4515>      BEQ.w JL_0_4830
000228EC <AmiBlitz3.ab3@4516>     CMP.w #$D,D0
000228F0 <AmiBlitz3.ab3@4517>      BEQ.w JL_0_4830
000228F4 <AmiBlitz3.ab3@4518>     CMP.w #$12,D0
000228F8 <AmiBlitz3.ab3@4519>      BEQ.w JL_0_4830
000228FC <AmiBlitz3.ab3@4520>     CMP.w #$13,D0
00022900 <AmiBlitz3.ab3@4521>      BEQ.w JL_0_4830
00022904 <AmiBlitz3.ab3@4522>     CMP.w #$1A,D0
00022908 <AmiBlitz3.ab3@4523>      BEQ.w JL_0_4830
0002290C <AmiBlitz3.ab3@4524>     CMP.w #$2A,D0
00022910 <AmiBlitz3.ab3@4525>      BHI.w JL_0_4834
00022914 <AmiBlitz3.ab3@4526>     CMP.w #$23,D0
00022918 <AmiBlitz3.ab3@4527>      BCS.b JL_0_4834
0002291C <AmiBlitz3.ab3@4530>   BSR.w undodebug
0002291E <AmiBlitz3.ab3@4533>   SUBQ.w #1,D0
00022920 <AmiBlitz3.ab3@4534>   LSL.w #2,D0
00022926 <AmiBlitz3.ab3@4541>   LEA instructionbase,A0
0002292A <AmiBlitz3.ab3@4542>   MOVEA.l $0(A0,D0.W),A0
0002292C <AmiBlitz3.ab3@4543>   MOVE.l A0,-(A7)
00022930 <AmiBlitz3.ab3@4544> BRA.w get1bytemain
00022932 <AmiBlitz3.ab3@4550>   MOVE.w D0,D1
00022936 <AmiBlitz3.ab3@4551>    BSR.w searchinstr
0002293C <AmiBlitz3.ab3@4552>    TST.b newmode
00022940 <AmiBlitz3.ab3@4553>    BNE compile_term
00022946 <AmiBlitz3.ab3@4554>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
0002294A <AmiBlitz3.ab3@4555>    BNE.w stamigalib
00022950 <AmiBlitz3.ab3@4556>   BTST #$0,$1(A3)
00022954 <AmiBlitz3.ab3@4557>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022958 <AmiBlitz3.ab3@4558>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
0002295C <AmiBlitz3.ab3@4559>    BSR.w JL_0_66F6
00022962 <AmiBlitz3.ab3@4565>   MOVE.w numreps,-(A7)
00022968 <AmiBlitz3.ab3@4566>   MOVE.w userp,-(A7)
0002296E <AmiBlitz3.ab3@4567>   MOVE.w a2offset,-(A7)
00022970 <AmiBlitz3.ab3@4568>   MOVE.l A2,-(A7)                                          ;recurs.
0002297A <AmiBlitz3.ab3@4569>   MOVE.w convsize,userp
0002297E <AmiBlitz3.ab3@4570>   LEA $6(A3),A1
00022980 <AmiBlitz3.ab3@4574>    MOVE.w (A1),D2
00022984 <AmiBlitz3.ab3@4575>    BMI.w SERR                                              ;statement syntax error
00022988 <AmiBlitz3.ab3@4576>   ANDI.w #$FF,D2
0002298A <AmiBlitz3.ab3@4577>   CMP.w D2,D1
0002298E <AmiBlitz3.ab3@4578>    BEQ.w JL_0_48E0
00022992 <AmiBlitz3.ab3@4579>    BCS.w JL_0_48CC
00022994 <AmiBlitz3.ab3@4580>   MOVE.b (A1),D3
00022998 <AmiBlitz3.ab3@4581>   ANDI.w #$7,D3
0002299C <AmiBlitz3.ab3@4582>    BEQ.w JL_0_48CC
0002299E <AmiBlitz3.ab3@4583>   MOVE.w D2,D4
000229A0 <AmiBlitz3.ab3@4584>   SUB.w D3,D4
000229A2 <AmiBlitz3.ab3@4585>   MOVEQ.l #$00,D5
000229A4 <AmiBlitz3.ab3@4586>   MOVE.w D1,D5
000229A6 <AmiBlitz3.ab3@4587>   SUB.w D4,D5
000229A8 <AmiBlitz3.ab3@4588>   DIVU D3,D5
000229AA <AmiBlitz3.ab3@4589>   SWAP D5
000229AC <AmiBlitz3.ab3@4590>   TST.w D5
000229B0 <AmiBlitz3.ab3@4591>    BEQ.w JL_0_48E0
000229B2 <AmiBlitz3.ab3@4594>   ADDQ.w #2,A1
000229B4 <AmiBlitz3.ab3@4595>   ADDA.w D2,A1
000229B8 <AmiBlitz3.ab3@4596>    BSR.w aligna1
000229BC <AmiBlitz3.ab3@4597>    BSR.w skiplibreg
000229C0 <AmiBlitz3.ab3@4598>   LEA $C(A1),A1
000229C4 <AmiBlitz3.ab3@4599> BRA.w JL_0_489A
000229C6 <AmiBlitz3.ab3@4602>   MOVE.w (a3),d2
000229CA <AmiBlitz3.ab3@4603>   BTST #1,d2
000229CE <AmiBlitz3.ab3@4604>   BEQ statement_
000229D2 <AmiBlitz3.ab3@4605>   CMP.w #1,d1
000229D6 <AmiBlitz3.ab3@4606>   BEQ statement_
000229DA <AmiBlitz3.ab3@4609>   CMP.b #$20,(a5)+
000229DE <AmiBlitz3.ab3@4610>   BEQ 'l2
000229E4 <AmiBlitz3.ab3@4611>   CMP.b #"(",-2(a5)
000229E8 <AmiBlitz3.ab3@4612>   BNE 'l1
000229EC <AmiBlitz3.ab3@4613> BRA parameter_
000229F0 <AmiBlitz3.ab3@4616> BRA inbrackets_
000229F2 <AmiBlitz3.ab3@4619>   MOVE.b (A1),D2
000229F4 <AmiBlitz3.ab3@4620>   LSL.w #8,D2
000229F6 <AmiBlitz3.ab3@4621>   OR.w D2,D1
000229F8 <AmiBlitz3.ab3@4622>   MOVE.l A1,-(A7)
000229FE <AmiBlitz3.ab3@4623>   CLR.w a2offset
00022A00 <AmiBlitz3.ab3@4624>   TST.w D1
00022A04 <AmiBlitz3.ab3@4625>    BEQ.w JL_0_4900
00022A08 <AmiBlitz3.ab3@4626>   LEA $2(A1),A2
00022A0E <AmiBlitz3.ab3@4628>   MOVE.l lasttoken,-(a7)
00022A14 <AmiBlitz3.ab3@4629>   CLR.l lasttoken
00022A18 <AmiBlitz3.ab3@4630>   BSR.w fetchlibps
00022A1E <AmiBlitz3.ab3@4631>   MOVE.l (a7)+,lasttoken
00022A22 <AmiBlitz3.ab3@4632> BRA.w JL_0_4904
00022A26 <AmiBlitz3.ab3@4635>   BSR.w get1bytemain
00022A28 <AmiBlitz3.ab3@4638>   MOVEA.l (A7)+,A1
00022A2A <AmiBlitz3.ab3@4639>   MOVEA.l (A7)+,A2
00022A30 <AmiBlitz3.ab3@4640>   MOVE.w a2offset,D1
00022A34 <AmiBlitz3.ab3@4641>    BEQ.w JL_0_493A
00022A3A <AmiBlitz3.ab3@4642>   MOVE.w D1,preplibst+2
00022A40 <AmiBlitz3.ab3@4643>   MOVE.l preplibst,D1
00022A46 <AmiBlitz3.ab3@4644>    JSR writelong                                           ;write array offset stack correct
00022A50 <AmiBlitz3.ab3@4645>   MOVE.w numreps,movenumrep+2
00022A54 <AmiBlitz3.ab3@4646>    BEQ.w JL_0_493A
00022A5A <AmiBlitz3.ab3@4647>   MOVE.l movenumrep,D1
00022A60 <AmiBlitz3.ab3@4648>    JSR writelong
00022A66 <AmiBlitz3.ab3@4652>   JSR userjsr
00022A6C <AmiBlitz3.ab3@4655>   MOVE.w a2offset,D1
00022A70 <AmiBlitz3.ab3@4656>    BEQ.w JL_0_4974
00022A74 <AmiBlitz3.ab3@4657>   CMP.w #$8,D1
00022A78 <AmiBlitz3.ab3@4658>    BHI.w JL_0_4964
00022A7C <AmiBlitz3.ab3@4659>   ANDI.w #$7,D1
00022A7E <AmiBlitz3.ab3@4660>   LSL.w #8,D1
00022A80 <AmiBlitz3.ab3@4661>   LSL.w #1,D1
00022A84 <AmiBlitz3.ab3@4662>   ORI.w #$504F,D1
00022A8A <AmiBlitz3.ab3@4664>   JSR writeword
00022A8E <AmiBlitz3.ab3@4665> BRA.w JL_0_4974
00022A94 <AmiBlitz3.ab3@4668>   MOVE.w D1,fixlibst+2
00022A9A <AmiBlitz3.ab3@4669>   MOVE.l fixlibst,D1
00022AA0 <AmiBlitz3.ab3@4670>   JSR writelong
00022AA6 <AmiBlitz3.ab3@4673>   MOVE.w (A7)+,a2offset
00022AAC <AmiBlitz3.ab3@4674>   MOVE.w (A7)+,userp
00022AB2 <AmiBlitz3.ab3@4675>   MOVE.w (A7)+,numreps
00022AB6 <AmiBlitz3.ab3@4676> BRA.w reget
00022ABA <AmiBlitz3.ab3@4680>   MOVEM.l A2-A3,-(A7)
00022AC0 <AmiBlitz3.ab3@4681>   CLR.b doublepeek
00022AC6 <AmiBlitz3.ab3@4682>   MOVE.l A5,lastsourcepos
00022ACA <AmiBlitz3.ab3@4683>    BSR.w getchar
00022ACE <AmiBlitz3.ab3@4684>   CMP.w #$2E,D0
00022AD2 <AmiBlitz3.ab3@4685>    BEQ.w JL_0_49B4
00022AD8 <AmiBlitz3.ab3@4686>   MOVEA.l defaulttype,A2
00022ADC <AmiBlitz3.ab3@4687>   CMP.w #$24,D0
00022AE0 <AmiBlitz3.ab3@4688>    BNE.w JL_0_49CA
00022AE2 <AmiBlitz3.ab3@4689>   MOVEQ.l #$07,D1
00022AE6 <AmiBlitz3.ab3@4690> BRA.w JL_0_49DE
00022AEA <AmiBlitz3.ab3@4693>   BSR.w getparameter2
00022AEE <AmiBlitz3.ab3@4694>   BEQ.w syntaxerr
00022AF4 <AmiBlitz3.ab3@4695>   LEA newtypebase,A2
00022AF8 <AmiBlitz3.ab3@4696>   BSR.w findtype
00022AFC <AmiBlitz3.ab3@4697>   BNE.w notypeerr
00022B06 <AmiBlitz3.ab3@4701>   MOVE.w oldqflag,instringon
00022B0C <AmiBlitz3.ab3@4702>   MOVEA.l lastsourcepos,A5
00022B10 <AmiBlitz3.ab3@4707>   MOVE.w $6(A2),D1
00022B16 <AmiBlitz3.ab3@4708>   CMP.w #8,8(a2)
00022B1A <AmiBlitz3.ab3@4709>   BNE 'l1
00022B22 <AmiBlitz3.ab3@4710>   MOVE.b #1,doublepeek
00022B28 <AmiBlitz3.ab3@4714>   MOVE.w D1,convsize
00022B2C <AmiBlitz3.ab3@4715>   MOVEM.l (A7)+,A2-A3
00022B2E <AmiBlitz3.ab3@4716> RTS
00022B34 <AmiBlitz3.ab3@4721>   BTST #$3,$1(A3)
00022B38 <AmiBlitz3.ab3@4722>   BEQ.w JL_0_4A06
00022B3C <AmiBlitz3.ab3@4723>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022B40 <AmiBlitz3.ab3@4725>   ORI.w #$7000,D1
00022B46 <AmiBlitz3.ab3@4726>   JSR writeword
00022B4C <AmiBlitz3.ab3@4727>   ADDQ.w #1,regnum
00022B4E <AmiBlitz3.ab3@4730> RTS
00022B50 <AmiBlitz3.ab3@4736>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022B52 <AmiBlitz3.ab3@4737>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022B54 <AmiBlitz3.ab3@4738>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022B56 <AmiBlitz3.ab3@4742> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022B58 <AmiBlitz3.ab3@4743>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022B5A <AmiBlitz3.ab3@4744>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022B5C <AmiBlitz3.ab3@4748> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022B5E <AmiBlitz3.ab3@4749>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022B60 <AmiBlitz3.ab3@4750>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022B62 <AmiBlitz3.ab3@4754> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022B64 <AmiBlitz3.ab3@4757> srctype:    Ds.w 1
00022B68 <AmiBlitz3.ab3@4762>   BSR.w excget
00022B6C <AmiBlitz3.ab3@4763>   CMP.w #$2C,D0
00022B70 <AmiBlitz3.ab3@4764>    BNE.w syntaxerr
00022B76 <AmiBlitz3.ab3@4765>   MOVE.b D2,srctype
00022B7C <AmiBlitz3.ab3@4766>   MOVE.w pusha2,D1
00022B82 <AmiBlitz3.ab3@4767>   JSR writeword
00022B86 <AmiBlitz3.ab3@4768>   BSR.w get1bytemain
00022B8A <AmiBlitz3.ab3@4769>   BSR.w excget
00022B90 <AmiBlitz3.ab3@4770>   CMP.b srctype,D2
00022B94 <AmiBlitz3.ab3@4771>    BNE.w excerr2
00022B9A <AmiBlitz3.ab3@4772>   MOVE.w pulla1,D1
00022BA0 <AmiBlitz3.ab3@4773>    JSR writeword
00022BA4 <AmiBlitz3.ab3@4774>   CMP.b #$2,D2
00022BA8 <AmiBlitz3.ab3@4775>    BCS.w JL_0_4B2A
00022BAC <AmiBlitz3.ab3@4776>    BEQ.w JL_0_4B1E
00022BB0 <AmiBlitz3.ab3@4777>   LEA swapl(PC),A0
00022BB4 <AmiBlitz3.ab3@4778>   LEA swaplf(PC),A1
00022BBA <AmiBlitz3.ab3@4779> JMP pokecode
00022BBE <AmiBlitz3.ab3@4782>   LEA swapw(PC),A0
00022BC2 <AmiBlitz3.ab3@4783>   LEA swapwf(PC),A1
00022BC8 <AmiBlitz3.ab3@4784> JMP pokecode
00022BCC <AmiBlitz3.ab3@4787>   LEA swapb(PC),A0
00022BD0 <AmiBlitz3.ab3@4788>   LEA swapbf(PC),A1
00022BD6 <AmiBlitz3.ab3@4789> JMP pokecode
00022BDC <AmiBlitz3.ab3@4793>   JSR getparameter
00022BE0 <AmiBlitz3.ab3@4794>   BSR.w JL_0_8E3C
00022BE6 <AmiBlitz3.ab3@4795>   JSR calcvar
00022BEA <AmiBlitz3.ab3@4796>   BTST #$E,D2
00022BEE <AmiBlitz3.ab3@4797>    BEQ.w JL_0_4B4E
00022BF2 <AmiBlitz3.ab3@4798>   MOVE.b #$4,D2
00022BF4 <AmiBlitz3.ab3@4801>   TST.b D2
00022BF8 <AmiBlitz3.ab3@4802>    BEQ.w excerr
00022BFC <AmiBlitz3.ab3@4803>   BTST #$F,D2
00022C00 <AmiBlitz3.ab3@4804>    BNE.w JL_0_4B6A
00022C06 <AmiBlitz3.ab3@4805>   MOVE.w leaamp,D1
00022C0C <AmiBlitz3.ab3@4806>    JSR pokewda5s
00022C0E <AmiBlitz3.ab3@4807>   MOVE.w D3,D1
00022C14 <AmiBlitz3.ab3@4808> JMP writeword
00022C16 <AmiBlitz3.ab3@4811> RTS
00022C1C <AmiBlitz3.ab3@4821>   MOVE.l mempool,a0
00022C22 <AmiBlitz3.ab3@4822>   MOVEA.l _execbase,A6
00022C26 <AmiBlitz3.ab3@4823> JMP _AllocPooled(a6)
00022C2A <AmiBlitz3.ab3@4827>   MOVE.w #$BF00,D1
00022C30 <AmiBlitz3.ab3@4828> JMP Atokejsr
00022C34 <AmiBlitz3.ab3@4832>   CMP.w #-$7FFA,D0
00022C38 <AmiBlitz3.ab3@4833>    BEQ.w popreturn
00022C3C <AmiBlitz3.ab3@4834>   CMP.w #-$7FEA,D0
00022C40 <AmiBlitz3.ab3@4835>    BEQ.w popnext2
00022C44 <AmiBlitz3.ab3@4836>   CMP.w #-$7FF2,D0
00022C48 <AmiBlitz3.ab3@4837>    BEQ.w popselect2
00022C4C <AmiBlitz3.ab3@4838>   CMP.w #-$7FF5,D0
00022C50 <AmiBlitz3.ab3@4839>    BEQ.w get1bytemain
00022C54 <AmiBlitz3.ab3@4840>   CMP.w #-$7FF4,D0
00022C58 <AmiBlitz3.ab3@4841>    BEQ.w get1bytemain
00022C5C <AmiBlitz3.ab3@4842>   CMP.w #-$7FEC,D0
00022C60 <AmiBlitz3.ab3@4843>    BEQ.w get1bytemain
00022C64 <AmiBlitz3.ab3@4844>   CMP.w #-$7F45,D0
00022C68 <AmiBlitz3.ab3@4845>    BEQ.w get1bytemain
00022C6C <AmiBlitz3.ab3@4846> BRA.w syntaxerr
00022C72 <AmiBlitz3.ab3@4849>   TST.b debugmode
00022C76 <AmiBlitz3.ab3@4850>    BEQ.w popreturn__norerr
00022C7A <AmiBlitz3.ab3@4851>   LEA popreturn__rfix(PC),A0
00022C7E <AmiBlitz3.ab3@4852>   LEA popreturn__rfixf(PC),A1
00022C84 <AmiBlitz3.ab3@4853>    JSR pokecode
00022C88 <AmiBlitz3.ab3@4854>   MOVE.w #$C305,D1
00022C8E <AmiBlitz3.ab3@4855>    JSR Atokejsr
00022C92 <AmiBlitz3.ab3@4856>   MOVE.w popreturn__rfix2(PC),D1
00022C98 <AmiBlitz3.ab3@4858>    JSR writeword
00022C9C <AmiBlitz3.ab3@4859> BRA.w get1bytemain
00022CA2 <AmiBlitz3.ab3@4863>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00022CA6 <AmiBlitz3.ab3@4864>   BEQ.w popreturn__rfix2
00022CAC <AmiBlitz3.ab3@4867>   JSR $20000                                               ;reass
00022CAE <AmiBlitz3.ab3@4870>   ADDQ.w #6,A7
00022CB2 <AmiBlitz3.ab3@4874>   MOVE.w popreturn__sfix(PC),D1
00022CB8 <AmiBlitz3.ab3@4875>   JSR writeword
00022CBC <AmiBlitz3.ab3@4876> BRA.w get1bytemain
00022CBE <AmiBlitz3.ab3@4881>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00022CC4 <AmiBlitz3.ab3@4886>   MOVE.l firstfor,D0
00022CC8 <AmiBlitz3.ab3@4887>    BEQ.w noforerr
00022CCA <AmiBlitz3.ab3@4888>   MOVEA.l D0,A2
00022CCE <AmiBlitz3.ab3@4889>    BSR.w get1bytemain
00022CD2 <AmiBlitz3.ab3@4890>   BSR.w popnext
00022CD8 <AmiBlitz3.ab3@4893>   TST.b debugmode
00022CDC <AmiBlitz3.ab3@4894>    BEQ.w popnext3__ner
00022CE2 <AmiBlitz3.ab3@4895>   MOVE.l nextfixw2,D1
00022CE8 <AmiBlitz3.ab3@4896>   CMPI.w #$3,$C(A2)
00022CEC <AmiBlitz3.ab3@4897>    BCS.w writelong2
00022CF2 <AmiBlitz3.ab3@4898>   MOVE.l nextfixl2,D1
00022CF8 <AmiBlitz3.ab3@4899> writelong2 JMP  writelong
00022CFE <AmiBlitz3.ab3@4902>   CMPI.w #$3,$C(A2)
00022D02 <AmiBlitz3.ab3@4903>    BCS.w popnext3__skip2
00022D08 <AmiBlitz3.ab3@4904>   MOVE.l nextfixl,D1
00022D0E <AmiBlitz3.ab3@4905>   JMP writelong
00022D14 <AmiBlitz3.ab3@4908>   MOVE.w nextfixw,D1
00022D1A <AmiBlitz3.ab3@4909> JMP writeword
00022D1E <AmiBlitz3.ab3@4913>   MOVE.w $C(A2),D0
00022D24 <AmiBlitz3.ab3@4914>   TST.b debugmode
00022D28 <AmiBlitz3.ab3@4915>    BEQ.w popnext__norunerr
00022D2C <AmiBlitz3.ab3@4916>   MOVE.w #$C306,D1
00022D30 <AmiBlitz3.ab3@4917>   CMP.w #$3,D0
00022D34 <AmiBlitz3.ab3@4918>    BCS.w popnext__oktc
00022D36 <AmiBlitz3.ab3@4919>   ADDQ.w #1,D1
00022D38 <AmiBlitz3.ab3@4922>   MOVE.l A2,-(A7)
00022D3E <AmiBlitz3.ab3@4923>   JSR Atokejsr
00022D40 <AmiBlitz3.ab3@4924>   MOVEA.l (A7)+,A2
00022D42 <AmiBlitz3.ab3@4927> RTS
00022D48 <AmiBlitz3.ab3@4931>   MOVE.l firstsel,D0
00022D4C <AmiBlitz3.ab3@4932>    BEQ.w eselerr
00022D4E <AmiBlitz3.ab3@4933>   MOVEA.l D0,A2
00022D52 <AmiBlitz3.ab3@4934>    BSR.w get1bytemain
00022D56 <AmiBlitz3.ab3@4937>   MOVE.w $C(A2),D2
00022D5C <AmiBlitz3.ab3@4938>   TST.b debugmode
00022D60 <AmiBlitz3.ab3@4939>    BEQ.w popselect__norerr
00022D64 <AmiBlitz3.ab3@4940>   MOVE.w #$C313,D1
00022D68 <AmiBlitz3.ab3@4941>   CMP.w #$3,D2
00022D6C <AmiBlitz3.ab3@4942>    BCS.w popselect__chkit
00022D6E <AmiBlitz3.ab3@4943>   ADDQ.w #1,D1
00022D74 <AmiBlitz3.ab3@4946>   JSR Atokejsr                                             ;make sure next thing on stack
00022D76 <AmiBlitz3.ab3@4950>   MOVEQ.l #$02,D1
00022D7A <AmiBlitz3.ab3@4951>   CMP.w #$3,D2
00022D7E <AmiBlitz3.ab3@4952>    BCS.w popselect__doit
00022D80 <AmiBlitz3.ab3@4953>   MOVEQ.l #$04,D1
00022D84 <AmiBlitz3.ab3@4954>   CMP.w #$7,D2
00022D88 <AmiBlitz3.ab3@4955>    BCS.w popselect__doit
00022D8E <AmiBlitz3.ab3@4956>   LEA endselstr,A0
00022D94 <AmiBlitz3.ab3@4957>   LEA endselstrf,A1
00022D9A <AmiBlitz3.ab3@4958>   TST.b debugmode
00022D9E <AmiBlitz3.ab3@4959>    BEQ.w popselect__norerr3
00022DA4 <AmiBlitz3.ab3@4960>   LEA endselstrf2,A1
00022DAA <AmiBlitz3.ab3@4963>   JSR pokecode
00022DAE <AmiBlitz3.ab3@4964>   MOVE.w #$C003,D1                                         ;global freemem
00022DB4 <AmiBlitz3.ab3@4965> JMP Atokejsr
00022DBA <AmiBlitz3.ab3@4968>   TST.b debugmode
00022DBE <AmiBlitz3.ab3@4969>    BEQ.w popselect__norerr2
00022DC0 <AmiBlitz3.ab3@4970>   ADDQ.w #2,D1                                             ;for the "sE"
00022DC2 <AmiBlitz3.ab3@4973>   LSL.w #8,D1
00022DC4 <AmiBlitz3.ab3@4974>   LSL.w #1,D1
00022DCA <AmiBlitz3.ab3@4975>   OR.w endsel,D1
00022DD0 <AmiBlitz3.ab3@4976> JMP writeword
00022DD4 <AmiBlitz3.ab3@4979> firstrep:    Ds.l 1
00022DD8 <AmiBlitz3.ab3@4980> replineat:   Ds.l 1
00022DDE <AmiBlitz3.ab3@4989>   CLR.l fp0addr
00022DE8 <AmiBlitz3.ab3@4990>   MOVE.l linenumat,replineat
00022DEA <AmiBlitz3.ab3@4991>   MOVEQ.l #$08,D0
00022DF0 <AmiBlitz3.ab3@4992>   MOVEA.l _execbase,A6
00022DF6 <AmiBlitz3.ab3@4993>   MOVE.l mempool,a0
00022DFA <AmiBlitz3.ab3@4994>   JSR _AllocPooled(a6)
00022DFC <AmiBlitz3.ab3@4996>   MOVEA.l D0,A0
00022E00 <AmiBlitz3.ab3@4997>   MOVE.l firstrep(PC),(A0)
00022E06 <AmiBlitz3.ab3@4998>   MOVE.l A0,firstrep
00022E0E <AmiBlitz3.ab3@4999>   MOVE.l destpointer,$4(A0)
00022E10 <AmiBlitz3.ab3@5000> RTS
00022E16 <AmiBlitz3.ab3@5003> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00022E1A <AmiBlitz3.ab3@5006>   LEA str_temp(PC),A1
00022E1C <AmiBlitz3.ab3@5007>   CLR.w (A1)
00022E20 <AmiBlitz3.ab3@5008>   CLR.l $2(A1)
00022E22 <AmiBlitz3.ab3@5011>   MOVEQ.l #$04,D0
00022E26 <AmiBlitz3.ab3@5014>     MOVE.b $1(A1),(A1)+
00022E2A <AmiBlitz3.ab3@5015>   DBF D0,check_for_infoextention__loop
00022E2E <AmiBlitz3.ab3@5020>   LEA str_temp(PC),A1
00022E30 <AmiBlitz3.ab3@5021>   MOVE.b (A0),D0
00022E34 <AmiBlitz3.ab3@5022>   ORI.b #$20,D0
00022E38 <AmiBlitz3.ab3@5023>   MOVE.b D0,$5(A1)
00022E3A <AmiBlitz3.ab3@5024>   TST.b (A0)+
00022E3E <AmiBlitz3.ab3@5025>    BNE.w check_for_infoextention__loop2
00022E42 <AmiBlitz3.ab3@5026>   CMPI.w #$2E69,(A1)+                                      ;".i"
00022E46 <AmiBlitz3.ab3@5027>    BNE.w check_for_infoextention__no
00022E4C <AmiBlitz3.ab3@5028>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00022E4E <AmiBlitz3.ab3@5031> RTS
00022E52 <AmiBlitz3.ab3@5035>   BPL.w gettokeps__evaltoke
00022E54 <AmiBlitz3.ab3@5036>   MOVE.w D0,D1
00022E58 <AmiBlitz3.ab3@5037>   ANDI.w #$7F80,D1
00022E5C <AmiBlitz3.ab3@5038>    BEQ.w tokeerr
00022E60 <AmiBlitz3.ab3@5039>   BCLR #$F,D0
00022E62 <AmiBlitz3.ab3@5040>   MOVE.w D0,D4                                             ;got toke number
00022E66 <AmiBlitz3.ab3@5041>   BSR.w get1bytemain
00022E6A <AmiBlitz3.ab3@5042> BRA.w gettokeps__gotnum
00022E70 <AmiBlitz3.ab3@5045>   JSR JL_0_BF6A
00022E76 <AmiBlitz3.ab3@5046>   CMP.l #MaxWord,D3
00022E7A <AmiBlitz3.ab3@5047>    BHI.w tokeerr
00022E7C <AmiBlitz3.ab3@5048>   TST.w D6
00022E80 <AmiBlitz3.ab3@5049>    BNE.w tokeerr
00022E82 <AmiBlitz3.ab3@5050>   MOVE.w D3,D4
00022E84 <AmiBlitz3.ab3@5053>   MOVEQ.l #$00,D5
00022E88 <AmiBlitz3.ab3@5054>   CMP.w #$2C,D0
00022E8C <AmiBlitz3.ab3@5055>    BNE.w gettokeps__gotfrom
00022E8E <AmiBlitz3.ab3@5056>   MOVE.w D4,-(A7)
00022E94 <AmiBlitz3.ab3@5057>    JSR AJL_0_BF6E
00022E9A <AmiBlitz3.ab3@5058>   CMP.l #MaxWord,D3
00022E9E <AmiBlitz3.ab3@5059>    BHI.w tokeerr
00022EA0 <AmiBlitz3.ab3@5060>   TST.w D6
00022EA4 <AmiBlitz3.ab3@5061>    BNE.w tokeerr
00022EA6 <AmiBlitz3.ab3@5062>   MOVE.w D3,D5
00022EA8 <AmiBlitz3.ab3@5063>   MOVE.w (A7)+,D4
00022EAA <AmiBlitz3.ab3@5066> RTS                                                        ;d4=toke, d5=form
00022EAC <AmiBlitz3.ab3@5070>   TST.w D0
00022EB0 <AmiBlitz3.ab3@5071>    BSR.w gettokeps
00022EB4 <AmiBlitz3.ab3@5072>   MOVE.w #$4EB9,D1
00022EBA <AmiBlitz3.ab3@5073>   JSR writeword
00022EBE <AmiBlitz3.ab3@5074>   BSR.w addoff
00022EC0 <AmiBlitz3.ab3@5075>   MOVE.w D5,D1
00022EC4 <AmiBlitz3.ab3@5076>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00022EC6 <AmiBlitz3.ab3@5077>   SWAP D1
00022EC8 <AmiBlitz3.ab3@5078>   MOVE.w D4,D1
00022ECE <AmiBlitz3.ab3@5079> JMP writelong
00022ED0 <AmiBlitz3.ab3@5083>   TST.w D0
00022ED4 <AmiBlitz3.ab3@5084>    BSR.w gettokeps
00022ED8 <AmiBlitz3.ab3@5085>   MOVE.w #$4EB9,D1
00022EDE <AmiBlitz3.ab3@5086>   JSR writeword
00022EE2 <AmiBlitz3.ab3@5087>   BSR.w addoff
00022EE4 <AmiBlitz3.ab3@5088>   MOVE.w D5,D1
00022EE8 <AmiBlitz3.ab3@5089>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00022EEA <AmiBlitz3.ab3@5090>   SWAP D1
00022EEC <AmiBlitz3.ab3@5091>   MOVE.w D4,D1
00022EF2 <AmiBlitz3.ab3@5092>   JMP writelong
00022EF8 <AmiBlitz3.ab3@5096>   JSR JL_0_BF6A
00022EFE <AmiBlitz3.ab3@5097>   CMP.l #$10000,D3
00022F02 <AmiBlitz3.ab3@5098>    BCC.w tokeerr
00022F04 <AmiBlitz3.ab3@5099>   MOVE.w D3,D1
00022F0A <AmiBlitz3.ab3@5100> JMP Atokejsr
00022F0E <AmiBlitz3.ab3@5104>   BSR.w gettokeps
00022F12 <AmiBlitz3.ab3@5105>   MOVE.w #$4EB9,D1
00022F18 <AmiBlitz3.ab3@5106>   JSR writeword
00022F1E <AmiBlitz3.ab3@5107>   MOVE.l destpointer,D3
00022F26 <AmiBlitz3.ab3@5108>   BTST #$7,blitzmode
00022F2A <AmiBlitz3.ab3@5109>    BEQ.w do_TokeJsr__inamiga
00022F2E <AmiBlitz3.ab3@5110>   BSET #$E,D5
00022F32 <AmiBlitz3.ab3@5113>   BSR.w JL_0_6E86
00022F36 <AmiBlitz3.ab3@5114>   BSR.w addoff
00022F3C <AmiBlitz3.ab3@5115>   JMP writelong
00022F40 <AmiBlitz3.ab3@5119>   BEQ.w do_VWait__zero
00022F42 <AmiBlitz3.ab3@5120>   MOVEQ.l #$02,D2                                          ;get a word
00022F48 <AmiBlitz3.ab3@5122>   JSR bakeval
00022F4C <AmiBlitz3.ab3@5123>   MOVE.w fvwait(PC),D1
00022F50 <AmiBlitz3.ab3@5124> BRA.w do_VWait__vcont
00022F54 <AmiBlitz3.ab3@5127>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00022F5A <AmiBlitz3.ab3@5130>   JSR writeword
00022F5E <AmiBlitz3.ab3@5131>   MOVE.w #$C104,D1
00022F64 <AmiBlitz3.ab3@5132> JMP Atokejsr
00022F66 <AmiBlitz3.ab3@5136>   SUBQ.w #1,D0
00022F6C <AmiBlitz3.ab3@5139>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00022F70 <AmiBlitz3.ab3@5142>   Dc.l $426d0001                                           ;clr.w $0(A5)
00022F74 <AmiBlitz3.ab3@5146>   MOVE.b debugmode(PC),D1
00022F78 <AmiBlitz3.ab3@5147>   BEQ.b debugmode_codelabel__skip
00022F7C <AmiBlitz3.ab3@5148>   MOVE.w #$D500,D1
00022F82 <AmiBlitz3.ab3@5149> JMP Atokejsr
00022F84 <AmiBlitz3.ab3@5152> RTS
00022F8C <AmiBlitz3.ab3@5156>   BSET #$0,blitzmode
00022F94 <AmiBlitz3.ab3@5157>   BSET #$7,blitzmode
00022F98 <AmiBlitz3.ab3@5158>   MOVE.w #$C200,D1
00022F9E <AmiBlitz3.ab3@5159>   JSR Atokejsr
00022FA4 <AmiBlitz3.ab3@5160>   TST.b debugmode
00022FA8 <AmiBlitz3.ab3@5161>    BEQ.w do_BLITZ__done
00022FAC <AmiBlitz3.ab3@5162>   MOVE.w cgoblitz(PC),D1
00022FB2 <AmiBlitz3.ab3@5163>   JSR writeword
00022FB4 <AmiBlitz3.ab3@5164>   MOVEQ.l #-$01,D1
00022FBA <AmiBlitz3.ab3@5165>   JSR writeword
00022FC0 <AmiBlitz3.ab3@5166>   JSR getbbase
00022FC6 <AmiBlitz3.ab3@5167>   JSR writeword
00022FCA <AmiBlitz3.ab3@5170> BRA.w debugmode_codelabel
00022FCE <AmiBlitz3.ab3@5174>   MOVE.w #$C201,D1
00022FD2 <AmiBlitz3.ab3@5175> BRA.w do_AMIGA__toamode
00022FD6 <AmiBlitz3.ab3@5179>   MOVE.W  #$C202,D1
00022FDE <AmiBlitz3.ab3@5182>   BSET #$0,blitzmode
00022FE6 <AmiBlitz3.ab3@5183>   BCLR #$7,blitzmode
00022FEC <AmiBlitz3.ab3@5184>   JSR Atokejsr
00022FF2 <AmiBlitz3.ab3@5185>   TST.b debugmode
00022FF6 <AmiBlitz3.ab3@5186>    BEQ.w do_AMIGA__done
00022FFA <AmiBlitz3.ab3@5187>   MOVE.w cgoamiga(PC),D1
00023000 <AmiBlitz3.ab3@5188>   JSR writeword
00023006 <AmiBlitz3.ab3@5189>   JSR getbbase
0002300C <AmiBlitz3.ab3@5190>   JSR writeword
00023010 <AmiBlitz3.ab3@5193> BRA.w debugmode_codelabel
00023014 <AmiBlitz3.ab3@5197>   MOVEM.l D2-D7/A2-A4,-(A7)
00023018 <AmiBlitz3.ab3@5200>   MOVEM.l (A7)+,D2-D7/A2-A4
0002301E <AmiBlitz3.ab3@5204>   JSR JL_0_BF6A
00023024 <AmiBlitz3.ab3@5205>   CMP.l #$E,D3
00023028 <AmiBlitz3.ab3@5206>    BCC.w interr4
0002302C <AmiBlitz3.ab3@5207>   MOVE.w #$7000,D1
0002302E <AmiBlitz3.ab3@5208>   OR.w D3,D1
00023034 <AmiBlitz3.ab3@5209>   JSR writeword
00023038 <AmiBlitz3.ab3@5210>   MOVE.w #$C101,D1
0002303E <AmiBlitz3.ab3@5211> JMP Atokejsr                                               ;clear the interupt
00023040 <AmiBlitz3.ab3@5214> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023044 <AmiBlitz3.ab3@5215> errjmp:      Ds.l 1                                        ;where err jump is
00023048 <AmiBlitz3.ab3@5216> errcode:     Ds.l 1
0002304C <AmiBlitz3.ab3@5220>   MOVE.W  #$D202,D1
00023052 <AmiBlitz3.ab3@5221> JMP Atokejsr                                               ;BRA.W Atokejsr
00023056 <AmiBlitz3.ab3@5225>   MOVE.w inerr(PC),D1
0002305A <AmiBlitz3.ab3@5226>    BEQ.w errerr3
00023060 <AmiBlitz3.ab3@5227>   CLR.w inerr
00023066 <AmiBlitz3.ab3@5228>   MOVE.w dontwrite,D1
0002306A <AmiBlitz3.ab3@5229>    BNE.w doendseterr__skip
0002306E <AmiBlitz3.ab3@5230>   MOVEA.l errjmp(PC),A0
00023074 <AmiBlitz3.ab3@5231>   MOVE.l destpointer,(A0)
00023078 <AmiBlitz3.ab3@5234> BRA.w get1bytemain
0002307C <AmiBlitz3.ab3@5238>   MOVE.w #$D205,D1
00023082 <AmiBlitz3.ab3@5239> JMP Atokejsr
00023088 <AmiBlitz3.ab3@5243>   MOVE.w proceduremode,D1
0002308C <AmiBlitz3.ab3@5244>    BNE.w errerr1
00023090 <AmiBlitz3.ab3@5245>   MOVE.w inerr(PC),D1
00023094 <AmiBlitz3.ab3@5246>    BNE.w errerr2
0002309A <AmiBlitz3.ab3@5247>   LEA inerr,a0
0002309C <AmiBlitz3.ab3@5248>   NOT.w (a0)                                               ;reass
000230A0 <AmiBlitz3.ab3@5249>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000230A6 <AmiBlitz3.ab3@5250>   JSR writeword
000230B0 <AmiBlitz3.ab3@5251>   MOVE.l destpointer,errcode
000230B4 <AmiBlitz3.ab3@5252>   BSR.w addoff
000230BA <AmiBlitz3.ab3@5253>   JSR writelong
000230BE <AmiBlitz3.ab3@5254>   MOVE.w #$D201,D1
000230C4 <AmiBlitz3.ab3@5255>   JSR Atokejsr
000230C8 <AmiBlitz3.ab3@5256>   MOVE.w #$4EF9,D1                                         ;JMP
000230CE <AmiBlitz3.ab3@5257>   JSR writeword
000230D8 <AmiBlitz3.ab3@5258>   MOVE.l destpointer,errjmp
000230DC <AmiBlitz3.ab3@5259>   BSR.w addoff
000230E2 <AmiBlitz3.ab3@5260>   JSR writelong
000230E8 <AmiBlitz3.ab3@5261>   MOVE.w dontwrite,D1
000230EC <AmiBlitz3.ab3@5262>    BNE.w do_SetErr__skip
000230F0 <AmiBlitz3.ab3@5263>   MOVEA.l errcode(PC),A0
000230F6 <AmiBlitz3.ab3@5264>   MOVE.l destpointer,(A0)
000230F8 <AmiBlitz3.ab3@5267> RTS
000230FC <AmiBlitz3.ab3@5270> intlineat:  Ds.l 1
000230FE <AmiBlitz3.ab3@5274>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023102 <AmiBlitz3.ab3@5275>   BSR.w errchx
00023108 <AmiBlitz3.ab3@5276>   MOVE.w D1,intstring
00023112 <AmiBlitz3.ab3@5277>   MOVE.l linenumat,intlineat
00023118 <AmiBlitz3.ab3@5278>   JSR JL_0_BF6A                                           ;get constant - int level
0002311E <AmiBlitz3.ab3@5279>   CMP.l #$E,D3
00023122 <AmiBlitz3.ab3@5280>    BCC.w interr4
00023128 <AmiBlitz3.ab3@5281>   ST intsused
0002312E <AmiBlitz3.ab3@5282>   MOVE.w D3,intlevel
00023132 <AmiBlitz3.ab3@5283>   MOVE.w #$7000,D1
00023134 <AmiBlitz3.ab3@5284>   OR.w D3,D1                                              
0002313A <AmiBlitz3.ab3@5285>   JSR writeword                                         ;moveq #x,d0
0002313E <AmiBlitz3.ab3@5286>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023144 <AmiBlitz3.ab3@5287>   JSR writeword
00023148 <AmiBlitz3.ab3@5288>   BSR.w addoff
0002314E <AmiBlitz3.ab3@5289>   MOVE.l destpointer,-(A7)
00023152 <AmiBlitz3.ab3@5290>   BSR.w writelong
00023156 <AmiBlitz3.ab3@5291>   MOVE.w #$C100,D1
0002315C <AmiBlitz3.ab3@5292>   JSR Atokejsr
00023160 <AmiBlitz3.ab3@5293>   MOVE.w #$4EF9,D1                                        ;jmp
00023166 <AmiBlitz3.ab3@5294>   JSR writeword
0002316A <AmiBlitz3.ab3@5295>   BSR.w addoff
00023174 <AmiBlitz3.ab3@5296>   MOVE.l destpointer,intjmpat
00023178 <AmiBlitz3.ab3@5297>   BSR.w writelong
0002317A <AmiBlitz3.ab3@5298>   MOVEA.l (A7)+,A0
00023180 <AmiBlitz3.ab3@5299>   MOVE.w dontwrite,D1
00023184 <AmiBlitz3.ab3@5300>   BNE.w do_SetInt__dontpoke
0002318A <AmiBlitz3.ab3@5301>   MOVE.l destpointer,(A0)
0002318E <AmiBlitz3.ab3@5304>   MOVE.l intstart0(PC),D1
00023192 <AmiBlitz3.ab3@5305>   BSR.w writelong
00023198 <AmiBlitz3.ab3@5306>   TST.b debugmode
0002319C <AmiBlitz3.ab3@5307>    BEQ.w do_SetInt__norerr
0002319E <AmiBlitz3.ab3@5311>   MOVEQ.l #$02,D1
000231A2 <AmiBlitz3.ab3@5312>   BSR.w writetrap
000231A6 <AmiBlitz3.ab3@5313>   BSR.w addoff
000231B0 <AmiBlitz3.ab3@5314>   MOVE.l destpointer,intcleanat
000231B4 <AmiBlitz3.ab3@5315>   BSR.w writelong
000231BA <AmiBlitz3.ab3@5316>   MOVE.w intlevel,D1
000231BE <AmiBlitz3.ab3@5317>   BSR.w writeword
000231C2 <AmiBlitz3.ab3@5318>   MOVE.w #$C30B,D1                                         ;disable stack checks
000231C8 <AmiBlitz3.ab3@5319>   JSR Atokejsr
000231CC <AmiBlitz3.ab3@5322>   MOVE.w #$FED3,D1
000231D0 <AmiBlitz3.ab3@5323>   BSR.w uselib
000231D4 <AmiBlitz3.ab3@5324>   MOVE.w #$C102,D1
000231DA <AmiBlitz3.ab3@5325>   JSR Atokejsr
000231E2 <AmiBlitz3.ab3@5326>   MOVE.w #-1,lasta6
000231EC <AmiBlitz3.ab3@5327>   MOVE.l linenumat,intline
000231EE <AmiBlitz3.ab3@5328> RTS
000231F0 <AmiBlitz3.ab3@5332>             Ds.w 1                                         ;??looks like obsolved data??
000231F4 <AmiBlitz3.ab3@5334> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000231F8 <AmiBlitz3.ab3@5336> intjmpat:   Ds.l 1
000231FC <AmiBlitz3.ab3@5337> intline:    Ds.l 1
000231FE <AmiBlitz3.ab3@5338> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023200 <AmiBlitz3.ab3@5341> intlevel:   Ds.w 1
00023204 <AmiBlitz3.ab3@5342> intcleanat: Ds.l 1
00023208 <AmiBlitz3.ab3@5343> ret15add:   Ds.l 1
0002320A <AmiBlitz3.ab3@5344> ret15cc:    Ds.w 1
00023212 <AmiBlitz3.ab3@5348>   ADDI.l #$12,$2(A7)
0002321A <AmiBlitz3.ab3@5349>   MOVE.l $2(A7),ret15add
00023220 <AmiBlitz3.ab3@5350>   MOVE.w (A7),ret15cc
00023228 <AmiBlitz3.ab3@5351>   MOVE.l #directdo,$2(A7)
0002322A <AmiBlitz3.ab3@5352> RTE
0002322E <AmiBlitz3.ab3@5361>   MOVE.l ret15add(PC),-(A7)
00023232 <AmiBlitz3.ab3@5362>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023236 <AmiBlitz3.ab3@5363>   MOVEM.l D0-D7/A0-A6,-(A7)
00023240 <AmiBlitz3.ab3@5364>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
0002324A <AmiBlitz3.ab3@5365>   MOVE.l destbufferstart,trap15temp2
00023254 <AmiBlitz3.ab3@5366>   MOVE.l libend,templibend
0002325E <AmiBlitz3.ab3@5367>   MOVE.l data1start,tempdata1start
00023264 <AmiBlitz3.ab3@5368>   CLR.l hunkoffsetcounter
0002326A <AmiBlitz3.ab3@5370>   MOVE.l directbuffer,a0
00023270 <AmiBlitz3.ab3@5374>   MOVE.l a0,destbufferstart
00023276 <AmiBlitz3.ab3@5375>   ADD.l #3900,a0
0002327C <AmiBlitz3.ab3@5376>   MOVE.l a0,destbufferend
00023282 <AmiBlitz3.ab3@5377>   TST.b exdebug
00023286 <AmiBlitz3.ab3@5378>   BEQ 'l1
0002328C <AmiBlitz3.ab3@5379>   MOVE.l a0,libend
00023292 <AmiBlitz3.ab3@5380>   ADD.l #4000,a0
00023298 <AmiBlitz3.ab3@5381>   MOVE.l a0,data1start
000232A2 <AmiBlitz3.ab3@5384>   MOVE.l #dircont,errcont
000232A8 <AmiBlitz3.ab3@5385> 
000232AE <AmiBlitz3.ab3@5386>   MOVE.l A7,errstack
000232B6 <AmiBlitz3.ab3@5387>   MOVE.w #$FFFF,dirmode
000232BA <AmiBlitz3.ab3@5389>     MOVEA.l ret15add(PC),A1
000232C0 <AmiBlitz3.ab3@5390>     MOVE.w -(A1),blitzmode
000232C2 <AmiBlitz3.ab3@5391>     CLR.l -(A1)
000232C8 <AmiBlitz3.ab3@5392>     MOVE.l -(A1),firstglob
000232CE <AmiBlitz3.ab3@5393>     MOVE.l -(A1),firstlocal
000232D4 <AmiBlitz3.ab3@5395>   CLR.w proceduremode
000232DA <AmiBlitz3.ab3@5396>   MOVE.l firstglob,D0
000232E0 <AmiBlitz3.ab3@5397>   OR.l firstlocal,D0
000232E4 <AmiBlitz3.ab3@5398>   BEQ.b directdo__skip
000232EA <AmiBlitz3.ab3@5399>   NOT.w proceduremode
000232EC <AmiBlitz3.ab3@5402>   MOVEA.l -(A1),A0                                         ;address of string
000232EE <AmiBlitz3.ab3@5406>   MOVE.l A0,-(A7)
0002332C <AmiBlitz3.ab3@5409>   !ComData_GetL{comFunc_DebugTrap,A1}
0002332E <AmiBlitz3.ab3@5411>   JSR (A1)                                                 ;tokenise line.....
00023330 <AmiBlitz3.ab3@5413>   MOVEA.l (A7)+,A5
0002333A <AmiBlitz3.ab3@5414>   MOVE.l directbuffer,destpointer
00023340 <AmiBlitz3.ab3@5415>   TST.b exdebug
00023344 <AmiBlitz3.ab3@5416>   BEQ 'noexdebug
00023346 <AmiBlitz3.ab3@5417>   MOVE.l a5,a0
0002334C <AmiBlitz3.ab3@5418>   MOVE.l #200,d0
00023352 <AmiBlitz3.ab3@5421>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023356 <AmiBlitz3.ab3@5422>   DBF d0,'l1
0002335C <AmiBlitz3.ab3@5427>   MOVE.l destpointer,a0
00023360 <AmiBlitz3.ab3@5428>   MOVE.w #$207c,(a0)+
00023362 <AmiBlitz3.ab3@5429>   MOVE.l a5,d0
00023368 <AmiBlitz3.ab3@5430>   ADD.l #$206,d0                                           ;constant from debuglib
0002336A <AmiBlitz3.ab3@5431>   MOVE.l d0,(a0)+
00023370 <AmiBlitz3.ab3@5432>   MOVE.l a0,destpointer
00023372 <AmiBlitz3.ab3@5433>   MOVE.l a5,a0
00023376 <AmiBlitz3.ab3@5434>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
0002337C <AmiBlitz3.ab3@5435>   MOVE.l #"$520",(a0)+
00023380 <AmiBlitz3.ab3@5436>   MOVE.w #"4:",(a0)+
00023386 <AmiBlitz3.ab3@5439>   CLR.w dontwrite
0002338E <AmiBlitz3.ab3@5440>   MOVE.w #$FFFF,lasta6
00023392 <AmiBlitz3.ab3@5441>   BSR.w compile_line                                        ;.....compile it
00023398 <AmiBlitz3.ab3@5442>   TST.b exdebug
0002339C <AmiBlitz3.ab3@5443>   BEQ 'noexdebug2
000233A2 <AmiBlitz3.ab3@5444>   JSR JL_0_6C76
000233A8 <AmiBlitz3.ab3@5447>   CLR.w proceduremode
000233AC <AmiBlitz3.ab3@5448>   BSR.w errchx
000233B0 <AmiBlitz3.ab3@5449>   MOVE.w #$4EF9,D1
000233B4 <AmiBlitz3.ab3@5450>   BSR.w writeword                                          ;JMP
000233B8 <AmiBlitz3.ab3@5451>   MOVE.l ret15add(PC),D1
000233BC <AmiBlitz3.ab3@5452>   BSR.w writelong                                          ;jmp to done
000233C2 <AmiBlitz3.ab3@5453>   MOVE.w dontwrite,D0
000233C6 <AmiBlitz3.ab3@5454>    BNE.w nodirmem
000233CE <AmiBlitz3.ab3@5455>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000233D4 <AmiBlitz3.ab3@5458>   CLR.w dirmode
000233DA <AmiBlitz3.ab3@5459>   MOVE.w ret15cc(PC),$3C(A7)
000233E4 <AmiBlitz3.ab3@5460>   MOVE.l trap15temp,destbufferend
000233EE <AmiBlitz3.ab3@5461>   MOVE.l trap15temp2,destbufferstart
000233F8 <AmiBlitz3.ab3@5462>   MOVE.l tempdata1start,data1start
00023402 <AmiBlitz3.ab3@5463>   MOVE.l templibend,libend
00023406 <AmiBlitz3.ab3@5464>   MOVEM.l (A7)+,D0-D7/A0-A6
0002340A <AmiBlitz3.ab3@5465>   BSR.w Aclearcache                                        ;selden used
0002340C <AmiBlitz3.ab3@5466> RTR
00023410 <AmiBlitz3.ab3@5469>   MOVEA.l ret15add(PC),A0
00023412 <AmiBlitz3.ab3@5470>   SUBQ.w #2,A0
00023414 <AmiBlitz3.ab3@5471>   MOVE.l D0,-(A0)
00023418 <AmiBlitz3.ab3@5472> BRA.w direxit
0002341C <AmiBlitz3.ab3@5476>   MOVE.w $6(A3),D1
00023420 <AmiBlitz3.ab3@5477>   BSR.w uselib                                             ;get lib for base address
00023424 <AmiBlitz3.ab3@5478>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023426 <AmiBlitz3.ab3@5479>   ADDQ.w #8,A3
00023428 <AmiBlitz3.ab3@5480>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
0002342A <AmiBlitz3.ab3@5481>   MOVE.l A3,-(A7)
0002342C <AmiBlitz3.ab3@5485>   MOVEQ.l #$00,D3
00023432 <AmiBlitz3.ab3@5486>   JSR checka4a5
00023434 <AmiBlitz3.ab3@5488>   MOVE.b (A3)+,D1
00023438 <AmiBlitz3.ab3@5489>    BMI.w stamigalib__done
0002343A <AmiBlitz3.ab3@5490>   MOVEQ.l #$03,D2
0002343C <AmiBlitz3.ab3@5491>   ADDQ.w #1,D3
00023440 <AmiBlitz3.ab3@5492>   MOVEM.l D3/A3,-(A7)
00023446 <AmiBlitz3.ab3@5493>   MOVE.b funcparloop,-(a7)
0002344E <AmiBlitz3.ab3@5494>   MOVE.b #0,funcparloop
00023454 <AmiBlitz3.ab3@5495>   MOVE.l leftsidetype,-(a7)
0002345A <AmiBlitz3.ab3@5496>   MOVE.l rightsidetype,-(a7)
00023460 <AmiBlitz3.ab3@5497>   CLR.l leftsidetype
00023466 <AmiBlitz3.ab3@5498>   CLR.l rightsidetype
0002346C <AmiBlitz3.ab3@5499>   MOVE.b blitzparloop,-(a7)
00023474 <AmiBlitz3.ab3@5500>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
0002347A <AmiBlitz3.ab3@5501>   JSR peval
00023480 <AmiBlitz3.ab3@5502>   MOVE.b (a7)+,blitzparloop
00023486 <AmiBlitz3.ab3@5503>   MOVE.l (a7)+,rightsidetype
0002348C <AmiBlitz3.ab3@5504>   MOVE.l (a7)+,leftsidetype
00023492 <AmiBlitz3.ab3@5505>   MOVE.b (a7)+,funcparloop
00023496 <AmiBlitz3.ab3@5506>   MOVEM.l (A7)+,D3/A3
0002349A <AmiBlitz3.ab3@5507>   CMP.w #$2C,D0
0002349E <AmiBlitz3.ab3@5508>    BEQ.w stamigalib__loop
000234A0 <AmiBlitz3.ab3@5509>   TST.b (A3)
000234A4 <AmiBlitz3.ab3@5510>    BPL.w syntaxerr
000234A6 <AmiBlitz3.ab3@5513>   MOVEA.l (A7)+,A3
000234A8 <AmiBlitz3.ab3@5514>   SUBQ.w #1,D3
000234AC <AmiBlitz3.ab3@5515>    BPL.w stamigalib__toend
000234B0 <AmiBlitz3.ab3@5516>    BSR.w get1bytemain                                      ;no pars - get :
000234B4 <AmiBlitz3.ab3@5517> BRA.w stamigalib__nopars
000234B6 <AmiBlitz3.ab3@5520>   TST.b (A3)+                                              ;go to end of params
000234BA <AmiBlitz3.ab3@5521>    BPL.w stamigalib__toend
000234BC <AmiBlitz3.ab3@5522>   SUBQ.w #1,A3
000234BE <AmiBlitz3.ab3@5525>    MOVEQ.l #$00,D1
000234C0 <AmiBlitz3.ab3@5526>    MOVE.b -(A3),D1
000234C4 <AmiBlitz3.ab3@5527>    BTST #$4,D1
000234C8 <AmiBlitz3.ab3@5528>     BNE.w stamigalib__addreg
000234CA <AmiBlitz3.ab3@5529>    LSL.w #8,D1
000234CC <AmiBlitz3.ab3@5530>    LSL.w #1,D1
000234D0 <AmiBlitz3.ab3@5531>    ORI.w #$201F,D1
000234D4 <AmiBlitz3.ab3@5532>  BRA.w stamigalib__gotit
000234D8 <AmiBlitz3.ab3@5535>    ANDI.w #$7,D1
000234DA <AmiBlitz3.ab3@5536>    LSL.w #8,D1
000234DC <AmiBlitz3.ab3@5537>    LSL.w #1,D1
000234E0 <AmiBlitz3.ab3@5538>    ORI.w #$205F,D1
000234E4 <AmiBlitz3.ab3@5541>     BSR.w writeword
000234E8 <AmiBlitz3.ab3@5542>   DBF D3,stamigalib__loop2
000234EE <AmiBlitz3.ab3@5545>   MOVE.w (A7)+,libjsr+2
000234F4 <AmiBlitz3.ab3@5546>   MOVE.w (A7)+,libbase+2
000234FA <AmiBlitz3.ab3@5547>   MOVE.l libbase,D1
000234FE <AmiBlitz3.ab3@5548>    BSR.w writelong
00023504 <AmiBlitz3.ab3@5549>   MOVE.l libjsr,D1
0002350A <AmiBlitz3.ab3@5550>   JSR writelong
00023510 <AmiBlitz3.ab3@5551>   JSR restorea4a5
00023512 <AmiBlitz3.ab3@5552>   RTS
00023518 <AmiBlitz3.ab3@5555>   MOVE.l data1,D4
0002351E <AmiBlitz3.ab3@5556>   SUB.l data1start,D4
00023524 <AmiBlitz3.ab3@5557>   ADD.l #10000,d4
0002352A <AmiBlitz3.ab3@5558>   MOVE.l libend,D3
00023530 <AmiBlitz3.ab3@5559>   SUB.l destbufferend,D3
00023536 <AmiBlitz3.ab3@5560>   ADD.l #40000,d3
0002353C <AmiBlitz3.ab3@5561>   MOVE.l bigpc,D2
00023542 <AmiBlitz3.ab3@5562>   SUB.l destbufferstart,D2
00023548 <AmiBlitz3.ab3@5563>   ADD.l #20000,d2
0002354E <AmiBlitz3.ab3@5564>   MOVE.l databuffer,D5
00023554 <AmiBlitz3.ab3@5565>   ADD.l #10000,D5
00023558 <AmiBlitz3.ab3@5566> BRA newallox
0002355E <AmiBlitz3.ab3@5570>   MOVE.l objectbuffer,D2
00023560 <AmiBlitz3.ab3@5571>   LSR.l #1,D2
00023566 <AmiBlitz3.ab3@5572>   ADD.l objectbuffer,D2
0002356C <AmiBlitz3.ab3@5573>   MOVE.l libsbuffer,D3
0002356E <AmiBlitz3.ab3@5574>   LSR.l #1,D3
00023574 <AmiBlitz3.ab3@5575>   ADD.l libsbuffer,D3
0002357A <AmiBlitz3.ab3@5576>   MOVE.l systembuffer,D4
0002357C <AmiBlitz3.ab3@5577>   LSR.l #1,D4
00023582 <AmiBlitz3.ab3@5578>   ADD.l systembuffer,D4
00023588 <AmiBlitz3.ab3@5579>   MOVE.l databuffer,D5
0002358A <AmiBlitz3.ab3@5580>   LSR.l #1,D5
00023590 <AmiBlitz3.ab3@5581>   ADD.l databuffer,D5
00023594 <AmiBlitz3.ab3@5582> BRA.w newallox
0002359A <AmiBlitz3.ab3@5586>   MOVE.l bigpc,D2
000235A0 <AmiBlitz3.ab3@5587>   SUB.l destbufferstart,D2                                     ;size of object buffer
000235A6 <AmiBlitz3.ab3@5588>   SUB.l savefuncspace,d2
000235AC <AmiBlitz3.ab3@5590>   TST.w debugversion
000235B0 <AmiBlitz3.ab3@5591>    BNE.b alloxadj__skip
000235B6 <AmiBlitz3.ab3@5592>   ADDI.l #$800,D2
000235BC <AmiBlitz3.ab3@5595>   MOVE.l libend,D3
000235C2 <AmiBlitz3.ab3@5596>   SUB.l destbufferend,D3
000235C8 <AmiBlitz3.ab3@5598>   MOVE.l data1,D4
000235CE <AmiBlitz3.ab3@5599>   SUB.l data1start,D4
000235D4 <AmiBlitz3.ab3@5601>   MOVE.l data2,D5
000235DA <AmiBlitz3.ab3@5602>   SUB.l data2at,D5
000235E0 <AmiBlitz3.ab3@5604>   CLR.l morememadd
000235E4 <AmiBlitz3.ab3@5607>   BSR.w makeallox
000235E8 <AmiBlitz3.ab3@5608>   BNE.w newallox__done
000235EC <AmiBlitz3.ab3@5609> BRA.w init_buffers
000235EE <AmiBlitz3.ab3@5612> RTS
000235F4 <AmiBlitz3.ab3@5616>   MOVEA.l _execbase,A6
000235FA <AmiBlitz3.ab3@5617>   MOVE.l objlen,D0
000235FE <AmiBlitz3.ab3@5618>   BEQ.w freeallox__skip
00023604 <AmiBlitz3.ab3@5619>   CLR.l objlen
0002360A <AmiBlitz3.ab3@5620>   MOVEA.l destbufferstart,A1
00023610 <AmiBlitz3.ab3@5621>   MOVE.l mempool,a0
00023614 <AmiBlitz3.ab3@5622> JMP _FreeVec(A6)
00023616 <AmiBlitz3.ab3@5625> RTS
0002361C <AmiBlitz3.ab3@5629>   MOVE.l objectbuffer,D2
00023622 <AmiBlitz3.ab3@5630>   MOVE.l libsbuffer,D3
00023628 <AmiBlitz3.ab3@5631>   MOVE.l systembuffer,D4
0002362E <AmiBlitz3.ab3@5632>   MOVE.l databuffer,D5
00023636 <AmiBlitz3.ab3@5635>   MOVE.w #$FFFF,anyerrs
0002363A <AmiBlitz3.ab3@5636>   BSR.w freeallox
0002363C <AmiBlitz3.ab3@5640>   ADDQ.l #1,D2
00023640 <AmiBlitz3.ab3@5641>   BCLR #$0,D2
00023642 <AmiBlitz3.ab3@5642>   ADDQ.l #1,D3
00023646 <AmiBlitz3.ab3@5643>   BCLR #$0,D3
00023648 <AmiBlitz3.ab3@5644>   ADDQ.l #1,D4
0002364C <AmiBlitz3.ab3@5645>   BCLR #$0,D4
0002364E <AmiBlitz3.ab3@5646>   TST.l d5
00023652 <AmiBlitz3.ab3@5647>   BNE 'l1
00023654 <AmiBlitz3.ab3@5650>   ADDQ.l #1,D5
00023658 <AmiBlitz3.ab3@5651>   BCLR #$0,D5
0002365A <AmiBlitz3.ab3@5652>   MOVE.l D2,D0
0002365C <AmiBlitz3.ab3@5653>   ADD.l D3,D0
0002365E <AmiBlitz3.ab3@5654>   ADD.l D4,D0
00023660 <AmiBlitz3.ab3@5655>   ADD.l D5,D0
00023666 <AmiBlitz3.ab3@5656>   ADD.l #moremem,d0
00023668 <AmiBlitz3.ab3@5657>   MOVE.l D0,D6
0002366E <AmiBlitz3.ab3@5658>   MOVE.l #MemfPublic_MemfClear,D1
00023674 <AmiBlitz3.ab3@5659>   MOVE.l mempool,a0
0002367A <AmiBlitz3.ab3@5660>   MOVEA.l _execbase,A6
0002367E <AmiBlitz3.ab3@5661>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023680 <AmiBlitz3.ab3@5663>   TST.l D0
00023684 <AmiBlitz3.ab3@5664>   BEQ.w exit_initbuffers
0002368A <AmiBlitz3.ab3@5665>   MOVE.l D6,objlen
00023690 <AmiBlitz3.ab3@5666>   MOVE.l D2,objectbuffer
00023696 <AmiBlitz3.ab3@5667>   MOVE.l D3,libsbuffer
0002369C <AmiBlitz3.ab3@5668>   MOVE.l D4,systembuffer
000236A2 <AmiBlitz3.ab3@5669>   MOVE.l D5,databuffer
000236A8 <AmiBlitz3.ab3@5670>   MOVE.l D0,destbufferstart
000236DC <AmiBlitz3.ab3@5673>   !ComData_SetL{comPtr_DestBufferStart,D0}
000236DE <AmiBlitz3.ab3@5674>   ADD.l D2,D0
000236E4 <AmiBlitz3.ab3@5675>   MOVE.l D0,destbufferend
000236E6 <AmiBlitz3.ab3@5676>   ADD.l D3,D0
000236EC <AmiBlitz3.ab3@5677>   MOVE.l D0,data1start
000236EE <AmiBlitz3.ab3@5678>   ADD.l D4,D0
000236F4 <AmiBlitz3.ab3@5679>   MOVE.l D0,data2at
000236F6 <AmiBlitz3.ab3@5680>   ADD.l D5,D0
000236FC <AmiBlitz3.ab3@5681>   MOVE.l D0,allat
000236FE <AmiBlitz3.ab3@5684> RTS
00023702 <AmiBlitz3.ab3@5688>   Dc.b $00,$00,$00,$01                                     ;         1
00023706 <AmiBlitz3.ab3@5689>   Dc.b $00,$00,$00,$0A                                     ;        10
0002370A <AmiBlitz3.ab3@5690>   Dc.b $00,$00,$00,$64                                     ;       100
0002370E <AmiBlitz3.ab3@5691>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023712 <AmiBlitz3.ab3@5692>   Dc.b $00,$00,$27,$10                                     ;     10000
00023716 <AmiBlitz3.ab3@5693>   Dc.b $00,$01,$86,$A0                                     ;    100000
0002371A <AmiBlitz3.ab3@5694>   Dc.b $00,$0F,$42,$40                                     ;   1000000
0002371E <AmiBlitz3.ab3@5695>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023722 <AmiBlitz3.ab3@5696>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023726 <AmiBlitz3.ab3@5697>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023728 <AmiBlitz3.ab3@5701>   MOVEQ.l #$00,D1                                          ;no zero printed
0002372A <AmiBlitz3.ab3@5702>   MOVEQ.l #$24,D3                                          ; "$"
0002372C <AmiBlitz3.ab3@5705>   MOVEQ.l #$30,D4                                          ; "0"
00023730 <AmiBlitz3.ab3@5708>     CMP.l divisors(PC,D3.W),D2
00023734 <AmiBlitz3.ab3@5709>     BCS.w makelong__skip
00023738 <AmiBlitz3.ab3@5710>     SUB.l divisors(PC,D3.W),D2
0002373A <AmiBlitz3.ab3@5711>     ADDQ.w #1,D4
0002373E <AmiBlitz3.ab3@5712> BRA.w makelong__loop2
00023742 <AmiBlitz3.ab3@5715>   CMP.b #"0",D4
00023746 <AmiBlitz3.ab3@5716>   BNE.w makelong__doit
00023748 <AmiBlitz3.ab3@5717>   TST.w D1
0002374C <AmiBlitz3.ab3@5718>   BEQ.w makelong__skip2
0002374E <AmiBlitz3.ab3@5721>   MOVE.b D4,(A0)+
00023750 <AmiBlitz3.ab3@5722>   MOVEQ.l #$01,D1
00023752 <AmiBlitz3.ab3@5725>   SUBQ.w #4,D3
00023756 <AmiBlitz3.ab3@5726>   BPL.w makelong__loop
00023758 <AmiBlitz3.ab3@5727>   TST.w D1
0002375C <AmiBlitz3.ab3@5728>   BNE.w makelong__skip3
00023760 <AmiBlitz3.ab3@5729>   MOVE.b #"0",(A0)+
00023762 <AmiBlitz3.ab3@5732>   CLR.b (A0)
00023764 <AmiBlitz3.ab3@5733> RTS
00023784 <AmiBlitz3.ab3@5736> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023844 <AmiBlitz3.ab3@5737> str_residentpath:       Ds.l 48                                                ;respath org source
00023904 <AmiBlitz3.ab3@5738> str_residentname:       Ds.l 48                                                ;resname org source
0002390A <AmiBlitz3.ab3@5742>   MOVE.l macrobase,D0
0002390E <AmiBlitz3.ab3@5743>    BNE.w create_residentfile
00023914 <AmiBlitz3.ab3@5744>   MOVE.l newtype_string,D0
00023918 <AmiBlitz3.ab3@5745>    BNE.w create_residentfile
0002391E <AmiBlitz3.ab3@5746>   MOVEA.l labelbase,A2
00023922 <AmiBlitz3.ab3@5749>     CMPA.w #$0,A2
00023926 <AmiBlitz3.ab3@5750>      BEQ.w menu_createresidentfile__err
0002392E <AmiBlitz3.ab3@5751>     CMPI.l #$1,$4(A2)
00023932 <AmiBlitz3.ab3@5752>      BEQ.w create_residentfile
00023934 <AmiBlitz3.ab3@5753>     MOVEA.l (A2),A2
00023938 <AmiBlitz3.ab3@5754> BRA.w menu_createresidentfile__loop
00023962 <AmiBlitz3.ab3@5757>   !basic
000239C4 <AmiBlitz3.ab3@5758> 
000239E2 <AmiBlitz3.ab3@5759>   !asm
000239E4 <AmiBlitz3.ab3@5760> RTS
00023A22 <AmiBlitz3.ab3@5766>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023A28 <AmiBlitz3.ab3@5767>   LEA str_residentrequester,A2
00023A2E <AmiBlitz3.ab3@5768>   LEA str_residentpath,A0
00023A34 <AmiBlitz3.ab3@5769>   LEA str_residentname,A1
00023A5E <AmiBlitz3.ab3@5770>   !basic
00023A96 <AmiBlitz3.ab3@5771>     Poke$ ?str_residentpath,my_residentsdir$
00023AC2 <AmiBlitz3.ab3@5772>     Poke$ ?str_residentname,".res"
00023AE0 <AmiBlitz3.ab3@5773>   !asm
00023AE2 <AmiBlitz3.ab3@5775>   JSR (A3)                                                 ;open ped filerequest
00023AE6 <AmiBlitz3.ab3@5777>   BEQ.w menu_createresidentfile__err
00023AE8 <AmiBlitz3.ab3@5780>   MOVE.l D0,D1
00023AEE <AmiBlitz3.ab3@5781>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023AF2 <AmiBlitz3.ab3@5782>   MOVEA.l _dosbase(PC),A6
00023AF6 <AmiBlitz3.ab3@5783>   JSR _Open(A6)
00023AF8 <AmiBlitz3.ab3@5784>   MOVE.l D0,D7                                             ;handle
00023AFC <AmiBlitz3.ab3@5785>   BEQ.w menu_createresidentfile__err
00023B00 <AmiBlitz3.ab3@5786>   MOVEM.l d2-d7/a0-a6,-(a7)
00023B06 <AmiBlitz3.ab3@5787>   LEA devo,a0
00023B0C <AmiBlitz3.ab3@5788>   LEA ptr_parameterstore,a1
00023B0E <AmiBlitz3.ab3@5791>     MOVE.b (a0)+,(a1)+
00023B12 <AmiBlitz3.ab3@5792>   BNE 'l1
00023B14 <AmiBlitz3.ab3@5793>   MOVEQ #13,d2
00023B1A <AmiBlitz3.ab3@5794>   JSR findlabel2
00023B1E <AmiBlitz3.ab3@5795>   BNE 'd
00023B22 <AmiBlitz3.ab3@5796>   TST.l 8(a2)
00023B26 <AmiBlitz3.ab3@5797>   BEQ 'd2
00023B50 <AmiBlitz3.ab3@5798>   !basic
00023BB2 <AmiBlitz3.ab3@5799>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00023BD0 <AmiBlitz3.ab3@5800>   !asm
00023BD4 <AmiBlitz3.ab3@5801>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BD8 <AmiBlitz3.ab3@5802>   MOVEA.l _dosbase(PC),A6
00023BDA <AmiBlitz3.ab3@5803>   MOVE.l d7,d1
00023BDE <AmiBlitz3.ab3@5804>   JSR _Close(a6)
00023BE2 <AmiBlitz3.ab3@5805> BRA menu_createresidentfile__err
00023BE6 <AmiBlitz3.ab3@5809>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BEA <AmiBlitz3.ab3@5810>   BSR.w call_setpointerbusy
00023BEE <AmiBlitz3.ab3@5812>   BSR.w AJL_0_7962
00023BF0 <AmiBlitz3.ab3@5813>   MOVE.l D7,D1
00023BF6 <AmiBlitz3.ab3@5814>   MOVE.l #tsthead,D2                                       ;header
00023BF8 <AmiBlitz3.ab3@5815>   MOVEQ.l #$20,D3
00023BFC <AmiBlitz3.ab3@5816>   MOVEA.l _dosbase(PC),A6
00023C00 <AmiBlitz3.ab3@5817>   JSR _Write(A6)
00023C02 <AmiBlitz3.ab3@5818>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00023C06 <AmiBlitz3.ab3@5819>   BSR.w restypes
00023C0A <AmiBlitz3.ab3@5820>   BSR.w resmacs
00023C0E <AmiBlitz3.ab3@5821>   BSR.w resconsts
00023C10 <AmiBlitz3.ab3@5822>   MOVE.l D6,D3
00023C12 <AmiBlitz3.ab3@5823>   ADDQ.l #3,D3
00023C18 <AmiBlitz3.ab3@5824>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00023C1A <AmiBlitz3.ab3@5825>   MOVE.l D3,-(A7)
00023C1C <AmiBlitz3.ab3@5826>   SUB.l D6,D3
00023C20 <AmiBlitz3.ab3@5827>   BEQ.w menu_createresidentfile__noalign
00023C26 <AmiBlitz3.ab3@5828>   MOVE.l #writelist,D2
00023C28 <AmiBlitz3.ab3@5829>   MOVE.l D7,D1
00023C2E <AmiBlitz3.ab3@5830>   MOVEA.l _dosbase,A6
00023C32 <AmiBlitz3.ab3@5831>   JSR _Write(A6)
00023C3C <AmiBlitz3.ab3@5834>    MOVE.l hunkoffsetcounter,tstsize3
00023C40 <AmiBlitz3.ab3@5835>    BEQ.w menu_createresidentfile__skip2a
00023C42 <AmiBlitz3.ab3@5836>   MOVE.l D7,D1
00023C48 <AmiBlitz3.ab3@5837>   MOVE.l #tstend,D2
00023C4A <AmiBlitz3.ab3@5838>   MOVEQ.l #$0C,D3
00023C50 <AmiBlitz3.ab3@5839>   MOVEA.l _dosbase,A6
00023C54 <AmiBlitz3.ab3@5840>    JSR _Write(A6)
00023C5A <AmiBlitz3.ab3@5844>   MOVEA.l hunkoffsetbase,A2
00023C5E <AmiBlitz3.ab3@5847>   CMPA.w #$0,A2
00023C62 <AmiBlitz3.ab3@5848>    BEQ.w menu_createresidentfile__skip2
00023C66 <AmiBlitz3.ab3@5849>   LEA $4(A2),A1
00023C68 <AmiBlitz3.ab3@5850>   MOVE.l D7,D1
00023C6A <AmiBlitz3.ab3@5851>   MOVE.l A1,D2
00023C6C <AmiBlitz3.ab3@5852>   MOVEQ.l #$04,D3
00023C72 <AmiBlitz3.ab3@5853>   MOVEA.l _dosbase,A6
00023C76 <AmiBlitz3.ab3@5854>    JSR _Write(A6)
00023C78 <AmiBlitz3.ab3@5855>   MOVEA.l (A2),A2
00023C7C <AmiBlitz3.ab3@5856> BRA.w menu_createresidentfile__oloop
00023C7E <AmiBlitz3.ab3@5859>   MOVE.l D7,D1
00023C84 <AmiBlitz3.ab3@5860>   MOVE.l #zero,D2
00023C86 <AmiBlitz3.ab3@5861>   MOVEQ.l #$04,D3
00023C8C <AmiBlitz3.ab3@5862>   MOVEA.l _dosbase,A6
00023C90 <AmiBlitz3.ab3@5863>   JSR _Write(A6)
00023C92 <AmiBlitz3.ab3@5866>   MOVE.l D7,D1
00023C98 <AmiBlitz3.ab3@5867>   MOVE.l #tstdone,D2
00023C9A <AmiBlitz3.ab3@5868>   MOVEQ.l #$04,D3
00023CA0 <AmiBlitz3.ab3@5869>   MOVEA.l _dosbase,A6
00023CA4 <AmiBlitz3.ab3@5870>    JSR _Write(A6)
00023CA6 <AmiBlitz3.ab3@5871>   MOVE.l (A7)+,D0
00023CA8 <AmiBlitz3.ab3@5872>   LSR.l #2,D0
00023CAE <AmiBlitz3.ab3@5873>   MOVE.l D0,temp1
00023CB0 <AmiBlitz3.ab3@5874>   MOVE.l D7,D1
00023CB2 <AmiBlitz3.ab3@5875>   MOVEQ.l #$14,D2
00023CB4 <AmiBlitz3.ab3@5876>   MOVEQ.l #-$01,D3
00023CB8 <AmiBlitz3.ab3@5877>   JSR _Seek(A6)
00023CBA <AmiBlitz3.ab3@5878>   MOVE.l D7,D1
00023CC0 <AmiBlitz3.ab3@5879>   MOVE.l #temp1,D2
00023CC2 <AmiBlitz3.ab3@5880>   MOVEQ.l #$04,D3
00023CC6 <AmiBlitz3.ab3@5881>    JSR _Write(A6)
00023CC8 <AmiBlitz3.ab3@5882>   MOVE.l D7,D1
00023CCA <AmiBlitz3.ab3@5883>   MOVEQ.l #$1C,D2
00023CCC <AmiBlitz3.ab3@5884>   MOVEQ.l #-$01,D3
00023CD0 <AmiBlitz3.ab3@5885>    JSR _Seek(A6)
00023CD2 <AmiBlitz3.ab3@5886>   MOVE.l D7,D1
00023CD8 <AmiBlitz3.ab3@5887>   MOVE.l #temp1,D2
00023CDA <AmiBlitz3.ab3@5888>   MOVEQ.l #$04,D3
00023CDE <AmiBlitz3.ab3@5889>    JSR _Write(A6)
00023CE0 <AmiBlitz3.ab3@5890>   MOVE.l D7,D1
00023CE4 <AmiBlitz3.ab3@5891>    JSR _Close(A6)
00023CE8 <AmiBlitz3.ab3@5892> BRA.w call_setpointernormal
00023CEA <AmiBlitz3.ab3@5896>   ADDQ.w #5,D1
00023CEC <AmiBlitz3.ab3@5897>   ADDQ.b #8,D0
00023CF0 <AmiBlitz3.ab3@5900>     CMPA.w #$0,A2
00023CF4 <AmiBlitz3.ab3@5901>     BEQ.w writelist__done
00023CF8 <AmiBlitz3.ab3@5902>      BSR.w writeitem
00023CFA <AmiBlitz3.ab3@5903>     MOVEA.l (A2),A2
00023CFE <AmiBlitz3.ab3@5904> BRA.w writelist__loop
00023D00 <AmiBlitz3.ab3@5907> RTS
00023D02 <AmiBlitz3.ab3@5910>   MOVEQ.l #$00,D3
00023D06 <AmiBlitz3.ab3@5911>   MOVE.b $0(A2,D5.W),D3
00023D08 <AmiBlitz3.ab3@5912>   ADDQ.w #1,D3
00023D0C <AmiBlitz3.ab3@5913>   BCLR #$0,D3                                              ;word align
00023D0E <AmiBlitz3.ab3@5914>   MOVE.l (A2),-(A7)
00023D12 <AmiBlitz3.ab3@5915>    BEQ.w writeitem__skip
00023D16 <AmiBlitz3.ab3@5916>    BSR.w resoff
00023D18 <AmiBlitz3.ab3@5917>   ADD.l D3,D6
00023D1A <AmiBlitz3.ab3@5918>   MOVE.l D6,(A2)
00023D1C <AmiBlitz3.ab3@5919>   SUB.l D3,D6
00023D1E <AmiBlitz3.ab3@5922>    ADD.l D3,D6
00023D20 <AmiBlitz3.ab3@5923>   MOVE.l A2,D2
00023D22 <AmiBlitz3.ab3@5924>   MOVE.l D7,D1
00023D28 <AmiBlitz3.ab3@5925>   MOVEA.l _dosbase,A6
00023D2C <AmiBlitz3.ab3@5926>    JSR _Write(A6)
00023D2E <AmiBlitz3.ab3@5927>   MOVE.l (A7)+,(A2)
00023D30 <AmiBlitz3.ab3@5928> RTS
00023D32 <AmiBlitz3.ab3@5931>   MOVE.l D6,D2
00023D36 <AmiBlitz3.ab3@5932> BRA.w addhunkoffset
00023D3A <AmiBlitz3.ab3@5936>     CMPA.w #$0,A2
00023D3E <AmiBlitz3.ab3@5937>      BEQ.w writeoffs__done
00023D44 <AmiBlitz3.ab3@5938>     MOVEA.l newtypebase,A1
00023D46 <AmiBlitz3.ab3@5939>     MOVEQ.l #$00,D1
00023D4A <AmiBlitz3.ab3@5942>       CMPA.w #$0,A1
00023D4E <AmiBlitz3.ab3@5943>       BEQ.w writeoffs__found
00023D52 <AmiBlitz3.ab3@5944>       CMPA.l $A(A2),A1
00023D56 <AmiBlitz3.ab3@5945>        BEQ.w writeoffs__found
00023D58 <AmiBlitz3.ab3@5946>       ADDQ.w #1,D1
00023D5A <AmiBlitz3.ab3@5947>       MOVEA.l (A1),A1
00023D5E <AmiBlitz3.ab3@5948> BRA.w writeoffs__loop2
00023D62 <AmiBlitz3.ab3@5951>     MOVE.w $A(A2),-(A7)
00023D66 <AmiBlitz3.ab3@5952>     MOVE.w D1,$A(A2)
00023D6A <AmiBlitz3.ab3@5953>      BSR.w writeitem
00023D6E <AmiBlitz3.ab3@5954>     MOVE.w (A7)+,$A(A2)
00023D70 <AmiBlitz3.ab3@5955>     MOVEA.l (A2),A2
00023D74 <AmiBlitz3.ab3@5956> BRA.w writeoffs
00023D76 <AmiBlitz3.ab3@5959> RTS
00023D78 <AmiBlitz3.ab3@5963>   MOVEQ.l #$00,D0
00023D7C <AmiBlitz3.ab3@5966>   CMPA.w #$0,A2
00023D80 <AmiBlitz3.ab3@5967>    BEQ.w countem__done
00023D82 <AmiBlitz3.ab3@5968>   ADDQ.w #1,D0
00023D84 <AmiBlitz3.ab3@5969>   MOVEA.l (A2),A2
00023D88 <AmiBlitz3.ab3@5970> BRA.w countem__loop
00023D8E <AmiBlitz3.ab3@5973>   MOVE.w D0,temp1
00023D90 <AmiBlitz3.ab3@5974>   MOVE.l D7,D1
00023D96 <AmiBlitz3.ab3@5975>   MOVE.l #temp1,D2
00023D98 <AmiBlitz3.ab3@5976>   MOVEQ.l #$02,D3
00023D9A <AmiBlitz3.ab3@5977>   ADDQ.l #2,D6
00023DA0 <AmiBlitz3.ab3@5978>   MOVEA.l _dosbase,A6
00023DA4 <AmiBlitz3.ab3@5979> JMP _Write(A6)
00023DAA <AmiBlitz3.ab3@5983>    TST.b resdisable
00023DAE <AmiBlitz3.ab3@5984>    BEQ resmacs__l1
00023DB4 <AmiBlitz3.ab3@5985>    MOVE.l currentmacroaddr,a3
00023DBA <AmiBlitz3.ab3@5986>    CMP.l #0,a3
00023DBE <AmiBlitz3.ab3@5987>    BEQ resmacs__l1
00023DC0 <AmiBlitz3.ab3@5988>    MOVE.l (a3),a3
00023DC4 <AmiBlitz3.ab3@5989> BRA resmacs__l2
00023DCA <AmiBlitz3.ab3@5992>   MOVEA.l macrobase,A3                                     ;??begin org code??
00023DCC <AmiBlitz3.ab3@5995>   MOVEA.l A3,A2
00023DD0 <AmiBlitz3.ab3@5996>   BSR.w countem
00023DD4 <AmiBlitz3.ab3@5999>    CMPA.w #$0,A3
00023DD8 <AmiBlitz3.ab3@6000>    BEQ.w resmacs__done
00023DDA <AmiBlitz3.ab3@6001>   MOVE.l D6,D5
00023DDC <AmiBlitz3.ab3@6002>   MOVE.l (A3),-(A7)
00023DE0 <AmiBlitz3.ab3@6003>   MOVE.l $4(A3),-(A7)
00023DE2 <AmiBlitz3.ab3@6004>   MOVEQ.l #$00,D3
00023DE6 <AmiBlitz3.ab3@6005>   MOVE.b $C(A3),D3
00023DE8 <AmiBlitz3.ab3@6006>   ADDQ.w #1,D3
00023DEC <AmiBlitz3.ab3@6007>   BCLR #$0,D3
00023DEE <AmiBlitz3.ab3@6008>   ADD.l D3,D6                                              ;add len of struct
00023DF2 <AmiBlitz3.ab3@6009>   TST.w $8(A3)
00023DF6 <AmiBlitz3.ab3@6010>    BEQ.w resmacs__notext
00023DFA <AmiBlitz3.ab3@6011>   MOVE.l D6,$4(A3)
00023DFC <AmiBlitz3.ab3@6012>   MOVE.l D5,D2
00023DFE <AmiBlitz3.ab3@6013>   ADDQ.l #4,D2
00023E02 <AmiBlitz3.ab3@6014>    BSR.w addhunkoffset
00023E04 <AmiBlitz3.ab3@6017>   MOVEQ.l #$00,D4
00023E08 <AmiBlitz3.ab3@6018>   MOVE.w $8(A3),D4
00023E0A <AmiBlitz3.ab3@6019>   ADDQ.w #1,D4
00023E0E <AmiBlitz3.ab3@6020>   BCLR #$0,D4
00023E10 <AmiBlitz3.ab3@6021>   ADD.l D4,D6
00023E12 <AmiBlitz3.ab3@6022>   TST.l (A3)
00023E16 <AmiBlitz3.ab3@6023>    BEQ.w resmacs__nomore
00023E18 <AmiBlitz3.ab3@6024>   MOVE.l D6,(A3)
00023E1A <AmiBlitz3.ab3@6025>   MOVE.l D5,D2
00023E1E <AmiBlitz3.ab3@6026>    BSR.w addhunkoffset
00023E20 <AmiBlitz3.ab3@6029>   MOVE.l A3,D2
00023E22 <AmiBlitz3.ab3@6030>   MOVE.l D7,D1
00023E28 <AmiBlitz3.ab3@6032>    MOVEA.l _dosbase,A6
00023E2C <AmiBlitz3.ab3@6033>    JSR _Write(a6)
00023E2E <AmiBlitz3.ab3@6034>   TST.l D4
00023E32 <AmiBlitz3.ab3@6035>    BEQ.w resmacs__skip
00023E34 <AmiBlitz3.ab3@6036>   MOVE.l (A7),D2
00023E36 <AmiBlitz3.ab3@6037>   MOVE.l D4,D3
00023E38 <AmiBlitz3.ab3@6038>   MOVE.l D7,D1
00023E3E <AmiBlitz3.ab3@6040>     MOVEA.l _dosbase,A6
00023E42 <AmiBlitz3.ab3@6041>    JSR _Write(A6)
00023E46 <AmiBlitz3.ab3@6044>   MOVE.l (A7)+,$4(A3)
00023E48 <AmiBlitz3.ab3@6045>   MOVE.l (A7)+,(A3)
00023E4A <AmiBlitz3.ab3@6046>   MOVEA.l (A3),A3
00023E4E <AmiBlitz3.ab3@6047> BRA.w resmacs__loop
00023E50 <AmiBlitz3.ab3@6050> RTS
00023E56 <AmiBlitz3.ab3@6054>   TST.b resdisable
00023E5A <AmiBlitz3.ab3@6055>   BEQ restypes__l1
00023E60 <AmiBlitz3.ab3@6056>   MOVE.l lastrestype,a3
00023E66 <AmiBlitz3.ab3@6057>   CMP.l #0,a3
00023E6A <AmiBlitz3.ab3@6058>   BEQ restypes__l1
00023E6C <AmiBlitz3.ab3@6059>   MOVE.l (a3),a3
00023E70 <AmiBlitz3.ab3@6060> BRA restypes__l2
00023E76 <AmiBlitz3.ab3@6063>   MOVEA.l newtype_string,A3
00023E78 <AmiBlitz3.ab3@6066>   MOVEA.l A3,A2
00023E7C <AmiBlitz3.ab3@6067>    BSR.w countem
00023E80 <AmiBlitz3.ab3@6070>    CMPA.w #$0,A3
00023E84 <AmiBlitz3.ab3@6071>    BEQ.w restypes__done
00023E86 <AmiBlitz3.ab3@6072>   MOVE.l D6,-(A7)
00023E8A <AmiBlitz3.ab3@6073>   MOVEA.l $4(A3),A2
00023E8C <AmiBlitz3.ab3@6074>   MOVEQ.l #$0E,D5
00023E90 <AmiBlitz3.ab3@6075>    BSR.w writeoffs
00023E92 <AmiBlitz3.ab3@6076>   MOVE.l (A7)+,D0
00023E96 <AmiBlitz3.ab3@6077>   MOVE.l $4(A3),-(A7)
00023E9A <AmiBlitz3.ab3@6078>   MOVE.l D0,$4(A3)
00023E9C <AmiBlitz3.ab3@6079>   MOVE.l D6,D2
00023E9E <AmiBlitz3.ab3@6080>   ADDQ.l #4,D2
00023EA2 <AmiBlitz3.ab3@6081>    BSR.w addhunkoffset
00023EA4 <AmiBlitz3.ab3@6082>   MOVEQ.l #$00,D3
00023EA8 <AmiBlitz3.ab3@6083>   MOVE.b $A(A3),D3
00023EAA <AmiBlitz3.ab3@6084>   ADDQ.w #1,D3
00023EAE <AmiBlitz3.ab3@6085>   BCLR #$0,D3
00023EB0 <AmiBlitz3.ab3@6086>   ADD.l D3,D6
00023EB2 <AmiBlitz3.ab3@6087>   MOVE.l A3,D2
00023EB4 <AmiBlitz3.ab3@6088>   MOVE.l D7,D1
00023EBA <AmiBlitz3.ab3@6090>     MOVEA.l _dosbase,A6
00023EBE <AmiBlitz3.ab3@6091>     JSR _Write(A6)
00023EC2 <AmiBlitz3.ab3@6092>   MOVE.l (A7)+,$4(A3)
00023EC4 <AmiBlitz3.ab3@6093>   MOVEA.l (A3),A3
00023EC8 <AmiBlitz3.ab3@6094> BRA.w restypes__loop
00023ECA <AmiBlitz3.ab3@6097> RTS
00023ED0 <AmiBlitz3.ab3@6101>    TST.b resdisable
00023ED4 <AmiBlitz3.ab3@6102>    BEQ resconsts__l1
00023EDA <AmiBlitz3.ab3@6103>    MOVE.l currentlabeladdr,a2
00023EE0 <AmiBlitz3.ab3@6104>    CMP.l #0,a2
00023EE4 <AmiBlitz3.ab3@6105>    BEQ resconsts__l1
00023EE6 <AmiBlitz3.ab3@6106>    MOVE.l (a2),a2
00023EEA <AmiBlitz3.ab3@6107> BRA resconsts__l2
00023EF0 <AmiBlitz3.ab3@6110>    MOVEA.l labelbase,A2
00023EF2 <AmiBlitz3.ab3@6113>    MOVEQ.l #$00,D0
00023EF6 <AmiBlitz3.ab3@6116>    CMPA.w #$0,A2
00023EFA <AmiBlitz3.ab3@6117>    BEQ.w resconsts__done
00023F02 <AmiBlitz3.ab3@6118>   CMPI.l #$1,$4(A2)
00023F06 <AmiBlitz3.ab3@6119>    BNE.w resconsts__next
00023F08 <AmiBlitz3.ab3@6120>   ADDQ.w #1,D0
00023F0A <AmiBlitz3.ab3@6123>   MOVEA.l (A2),A2
00023F0E <AmiBlitz3.ab3@6124> BRA.w resconsts__loop
00023F14 <AmiBlitz3.ab3@6127>   MOVE.w D0,temp1
00023F16 <AmiBlitz3.ab3@6128>   MOVE.l D7,D1
00023F1C <AmiBlitz3.ab3@6129>   MOVE.l #temp1,D2
00023F1E <AmiBlitz3.ab3@6130>   MOVEQ.l #$02,D3
00023F20 <AmiBlitz3.ab3@6131>   ADDQ.l #2,D6
00023F26 <AmiBlitz3.ab3@6133>     MOVEA.l _dosbase,A6
00023F2A <AmiBlitz3.ab3@6134>     JSR _Write(A6)
00023F30 <AmiBlitz3.ab3@6135>    TST.b resdisable
00023F34 <AmiBlitz3.ab3@6136>    BEQ resconsts__done_l1
00023F3A <AmiBlitz3.ab3@6137>    MOVE.l currentlabeladdr,a2
00023F40 <AmiBlitz3.ab3@6138>    CMP.l #0,a2
00023F44 <AmiBlitz3.ab3@6139>    BEQ resconsts__done_l1
00023F46 <AmiBlitz3.ab3@6140>    MOVE.l (a2),a2
00023F4A <AmiBlitz3.ab3@6141> BRA resconsts__loop2
00023F50 <AmiBlitz3.ab3@6144>    MOVEA.l labelbase,A2                                    ;write resident labels
00023F54 <AmiBlitz3.ab3@6147>    CMPA.w #$0,A2
00023F58 <AmiBlitz3.ab3@6148>    BEQ.w resconsts__done2
00023F60 <AmiBlitz3.ab3@6149>   CMPI.l #$1,$4(A2)
00023F64 <AmiBlitz3.ab3@6150>    BNE.w resconsts__next2
00023F66 <AmiBlitz3.ab3@6151>    MOVEQ.l #$00,D3
00023F6A <AmiBlitz3.ab3@6152>   MOVE.b $12(A2),D3                                        ;length
00023F6C <AmiBlitz3.ab3@6153>   ADDQ.w #1,D3
00023F70 <AmiBlitz3.ab3@6154>   BCLR #$0,D3
00023F72 <AmiBlitz3.ab3@6155>   MOVE.l D6,D2
00023F74 <AmiBlitz3.ab3@6156>   ADD.l D3,D6
00023F76 <AmiBlitz3.ab3@6159>   MOVE.l (A2),-(A7)
00023F78 <AmiBlitz3.ab3@6160>   TST.l (A2)
00023F7C <AmiBlitz3.ab3@6161>    BEQ.w resconsts__nonext
00023F7E <AmiBlitz3.ab3@6162>   MOVE.l D6,(A2)
00023F82 <AmiBlitz3.ab3@6163>    BSR.w addhunkoffset
00023F84 <AmiBlitz3.ab3@6166>   MOVE.l A2,D2
00023F86 <AmiBlitz3.ab3@6167>   MOVE.l D7,D1
00023F8C <AmiBlitz3.ab3@6169>     MOVEA.l _dosbase,A6
00023F90 <AmiBlitz3.ab3@6170>     JSR _Write(A6)
00023F92 <AmiBlitz3.ab3@6171>   MOVE.l (A7)+,(A2)
00023F94 <AmiBlitz3.ab3@6174>   MOVEA.l (A2),A2
00023F98 <AmiBlitz3.ab3@6175> BRA.w resconsts__loop2
00023F9A <AmiBlitz3.ab3@6178> RTS
00023FC4 <AmiBlitz3.ab3@6182>    !basic
00023FCA <AmiBlitz3.ab3@6183>     MOVE.l ptr_resfile,d0
00023FDA <AmiBlitz3.ab3@6184>     resfileP.l = Peek.l(?ptr_resfile)
00023FE4 <AmiBlitz3.ab3@6185>     If resfileP
0002400C <AmiBlitz3.ab3@6186>       resfile$ = Peek.s(resfileP)
00024058 <AmiBlitz3.ab3@6187>       tests.b = Instr(resfile$,"/")
000240A4 <AmiBlitz3.ab3@6188>       testc.b = Instr(resfile$,":")
000240C6 <AmiBlitz3.ab3@6189>       If tests=0 AND testc=0
00024146 <AmiBlitz3.ab3@6190>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024158 <AmiBlitz3.ab3@6191>         Poke.l ?ptr_resfile,&resfile$
0002415E <AmiBlitz3.ab3@6193>     Else
00024198 <AmiBlitz3.ab3@6194>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000241B6 <AmiBlitz3.ab3@6196>    !asm
000241B8 <AmiBlitz3.ab3@6197> RTS
000241BE <AmiBlitz3.ab3@6201> 
000241C4 <AmiBlitz3.ab3@6202>   MOVE.l A7,errstack
000241CE <AmiBlitz3.ab3@6205>   MOVE.l #next_resentry,errcont
000241D6 <AmiBlitz3.ab3@6206>   MOVE.w #$FFFF,ezerr
000241DA <AmiBlitz3.ab3@6207>   BSR.w Aclearallvars
000241DE <AmiBlitz3.ab3@6208>   BSR.w free_residents
000241E4 <AmiBlitz3.ab3@6210>   LEA residents_table,A5
000241E6 <AmiBlitz3.ab3@6211>   MOVEQ.l #$07,D6
000241E8 <AmiBlitz3.ab3@6214>     TST.b (A5)
000241EC <AmiBlitz3.ab3@6215>     BEQ.w next_resentry
000241F2 <AmiBlitz3.ab3@6216>     MOVE.l A5,ptr_resfile
000241F6 <AmiBlitz3.ab3@6217>     BSR check_residentpath
000241FC <AmiBlitz3.ab3@6218>     MOVE.l ptr_resfile,d1
00024202 <AmiBlitz3.ab3@6219>     MOVEA.l _dosbase,A6
00024206 <AmiBlitz3.ab3@6220>     JSR _LoadSeg(A6)
0002420A <AmiBlitz3.ab3@6221>     MOVE.l D0,$40(A5)
0002420E <AmiBlitz3.ab3@6222>     BNE.w reloadresident__yeah
00024212 <AmiBlitz3.ab3@6223>     BSR.w reserr
00024214 <AmiBlitz3.ab3@6226>     MOVEA.l D0,A3
00024216 <AmiBlitz3.ab3@6227>     ADDA.l A3,A3
00024218 <AmiBlitz3.ab3@6228>     ADDA.l A3,A3
0002421A <AmiBlitz3.ab3@6229>     ADDQ.w #4,A3                                           ;start of res
0002421E <AmiBlitz3.ab3@6230>     BSR.w JL_0_5A9E
00024222 <AmiBlitz3.ab3@6231>     BSR.w JL_0_5A62                                        ;add macros to list
00024226 <AmiBlitz3.ab3@6232>     BSR.w JL_0_5A32                                        ;read labels
0002422A <AmiBlitz3.ab3@6235>     LEA ResidentEntryStep(A5),A5       ;$44
0002422E <AmiBlitz3.ab3@6236>   DBF D6,reloadresident__loop
00024238 <AmiBlitz3.ab3@6241>   MOVE.l #free_residents,errcont
0002423E <AmiBlitz3.ab3@6243>   MOVEA.l newtype_string,A3
00024240 <AmiBlitz3.ab3@6244>   MOVEQ.l #$0B,D7
00024244 <AmiBlitz3.ab3@6245>   BSR.w checkclash
0002424A <AmiBlitz3.ab3@6247>   MOVEA.l macrobase,A3
0002424C <AmiBlitz3.ab3@6248>   MOVEQ.l #$d,D7
00024250 <AmiBlitz3.ab3@6249>   BSR.w checkclash
00024256 <AmiBlitz3.ab3@6251>   MOVEA.l firstconst,A3
00024258 <AmiBlitz3.ab3@6252>   MOVEQ.l #$19,D7
0002425C <AmiBlitz3.ab3@6253>   BSR.w checkclash
0002425E <AmiBlitz3.ab3@6256> RTS
00024260 <AmiBlitz3.ab3@6260>   MOVEA.l A3,A4
00024264 <AmiBlitz3.ab3@6263>     CMPA.w #$0,A4
00024268 <AmiBlitz3.ab3@6264>     BEQ.w checkclash__done
0002426E <AmiBlitz3.ab3@6266>     LEA ptr_parameterstore,A0
00024272 <AmiBlitz3.ab3@6267>     LEA $0(A4,D7.W),A1
00024274 <AmiBlitz3.ab3@6268>     MOVEQ.l #-$01,D2
00024276 <AmiBlitz3.ab3@6271>       ADDQ.w #1,D2
00024278 <AmiBlitz3.ab3@6272>       MOVE.b (A1)+,(A0)+
0002427C <AmiBlitz3.ab3@6273>     BNE.w checkclash__loop2
0002427E <AmiBlitz3.ab3@6274>     MOVEA.l A3,A2
00024282 <AmiBlitz3.ab3@6277>     BSR.w findlab
00024286 <AmiBlitz3.ab3@6278>     BNE.w checkclash__next                                  ;not found
00024288 <AmiBlitz3.ab3@6279>     CMPA.l A2,A4
0002428C <AmiBlitz3.ab3@6280>     BEQ.w checkclash__l1
0002428E <AmiBlitz3.ab3@6281>     MOVE.l a1,a5
00024292 <AmiBlitz3.ab3@6282> BRA clasherr
00024296 <AmiBlitz3.ab3@6285> BRA.w checkclash__more
00024298 <AmiBlitz3.ab3@6288>     MOVEA.l (A4),A4
0002429C <AmiBlitz3.ab3@6289> BRA.w checkclash__loop
0002429E <AmiBlitz3.ab3@6292> RTS
000242A4 <AmiBlitz3.ab3@6296>   MOVEA.l _dosbase,A6
000242AA <AmiBlitz3.ab3@6298>   LEA newtype_string,A0
000242B0 <AmiBlitz3.ab3@6299>   MOVE.l A0,lastrestype
000242B2 <AmiBlitz3.ab3@6300>   CLR.l (A0)
000242B8 <AmiBlitz3.ab3@6302>   LEA macrobase,A0
000242BE <AmiBlitz3.ab3@6303>   MOVE.l A0,currentmacroaddr
000242C0 <AmiBlitz3.ab3@6304>   CLR.l (A0)
000242C6 <AmiBlitz3.ab3@6306>   LEA labelbase,A0
000242CC <AmiBlitz3.ab3@6307>   MOVE.l A0,currentlabeladdr
000242CE <AmiBlitz3.ab3@6308>   CLR.l (A0)
000242D4 <AmiBlitz3.ab3@6309>   CLR.w rescnt
0002430C <AmiBlitz3.ab3@6313>   !ComData_SetB{comByte_DebugMode,debugmode}
00024312 <AmiBlitz3.ab3@6316>   LEA residents_table,A2
00024314 <AmiBlitz3.ab3@6317>   MOVEQ.l #$07,D2
00024318 <AmiBlitz3.ab3@6320>      MOVE.l $40(A2),D1
0002431C <AmiBlitz3.ab3@6321>      BEQ.w free_residents__next
00024320 <AmiBlitz3.ab3@6322>       CLR.l $40(A2)
00024326 <AmiBlitz3.ab3@6323>       MOVEA.l _dosbase,A6
0002432A <AmiBlitz3.ab3@6324>       JSR _UnLoadSeg(A6)
0002432E <AmiBlitz3.ab3@6327>      LEA ResidentEntryStep(A2),A2   ; $44
00024332 <AmiBlitz3.ab3@6328>    DBF D2,free_residents__loop
00024334 <AmiBlitz3.ab3@6330> RTS
00024336 <AmiBlitz3.ab3@6334>   MOVE.w (A3)+,D1
0002433A <AmiBlitz3.ab3@6335>   BEQ.w JL_0_5A60
00024340 <AmiBlitz3.ab3@6336>   MOVEA.l currentlabeladdr,A2
00024342 <AmiBlitz3.ab3@6337>   MOVE.l A3,(A2)
00024344 <AmiBlitz3.ab3@6338>   SUBQ.w #1,D1
00024346 <AmiBlitz3.ab3@6341>     MOVEA.l A3,A2
00024348 <AmiBlitz3.ab3@6342>     MOVEA.l (A3),A3
0002434C <AmiBlitz3.ab3@6343>   DBF D1,JL_0_5A42
0002434E <AmiBlitz3.ab3@6345>   CLR.l (a2)                                               ;bugfix for object
00024354 <AmiBlitz3.ab3@6346>   MOVE.l A2,currentlabeladdr
00024356 <AmiBlitz3.ab3@6347>   MOVEA.l A2,A3
00024358 <AmiBlitz3.ab3@6348>   MOVEQ.l #$00,D0
0002435C <AmiBlitz3.ab3@6349>   MOVE.b $12(A3),D0
0002435E <AmiBlitz3.ab3@6350>   ADDQ.w #1,D0
00024362 <AmiBlitz3.ab3@6351>   BCLR #$0,D0
00024364 <AmiBlitz3.ab3@6352>   ADDA.w D0,A3
00024366 <AmiBlitz3.ab3@6355> RTS
00024368 <AmiBlitz3.ab3@6359>   MOVE.w (A3)+,D1
0002436C <AmiBlitz3.ab3@6360>   BEQ.w JL_0_5A9C
00024372 <AmiBlitz3.ab3@6362>   MOVEA.l currentmacroaddr,A2
00024374 <AmiBlitz3.ab3@6363>   MOVE.l A3,(A2)
00024376 <AmiBlitz3.ab3@6364>   SUBQ.w #1,D1
00024378 <AmiBlitz3.ab3@6367>     MOVEA.l A3,A2
0002437A <AmiBlitz3.ab3@6368>     MOVEA.l (A3),A3
0002437E <AmiBlitz3.ab3@6369>   DBF D1,JL_0_5A72
00024384 <AmiBlitz3.ab3@6371>   MOVE.l A2,currentmacroaddr
00024386 <AmiBlitz3.ab3@6372>   MOVEA.l A2,A3
00024388 <AmiBlitz3.ab3@6373>   MOVEQ.l #$00,D0
0002438C <AmiBlitz3.ab3@6374>   MOVE.b $C(A3),D0
0002438E <AmiBlitz3.ab3@6375>   ADDQ.w #1,D0
00024392 <AmiBlitz3.ab3@6376>   BCLR #$0,D0
00024396 <AmiBlitz3.ab3@6377>   MOVE.w $8(A3),D1
00024398 <AmiBlitz3.ab3@6378>   ADDQ.w #1,D1
0002439C <AmiBlitz3.ab3@6379>   BCLR #$0,D1
0002439E <AmiBlitz3.ab3@6380>   ADDA.w D0,A3
000243A0 <AmiBlitz3.ab3@6381>   ADDA.w D1,A3
000243A2 <AmiBlitz3.ab3@6384> RTS
000243A4 <AmiBlitz3.ab3@6388>   MOVE.w (A3)+,D1
000243A8 <AmiBlitz3.ab3@6389>   BEQ.w JL_0_5B38
000243AA <AmiBlitz3.ab3@6390>   MOVE.w D1,-(A7)
000243AC <AmiBlitz3.ab3@6391>   SUBQ.w #1,D1
000243B2 <AmiBlitz3.ab3@6392>   MOVEA.l lastrestype,A2
000243B4 <AmiBlitz3.ab3@6393>   MOVE.l A2,-(A7)
000243B6 <AmiBlitz3.ab3@6396>       MOVE.l (A3),D0
000243BA <AmiBlitz3.ab3@6397>       BEQ.w JL_0_5ABC
000243BC <AmiBlitz3.ab3@6398>       MOVEA.l D0,A3
000243C0 <AmiBlitz3.ab3@6399> BRA.w JL_0_5AB0
000243C4 <AmiBlitz3.ab3@6402>       MOVE.b $E(A3),D0
000243C6 <AmiBlitz3.ab3@6403>       ADDQ.w #1,D0
000243CA <AmiBlitz3.ab3@6404>       BCLR #$0,D0
000243CC <AmiBlitz3.ab3@6405>       ADDA.w D0,A3
000243CE <AmiBlitz3.ab3@6406>       MOVE.l A3,(A2)
000243D0 <AmiBlitz3.ab3@6407>       MOVEA.l A3,A2
000243D2 <AmiBlitz3.ab3@6408>       MOVEQ.l #$00,D0
000243D6 <AmiBlitz3.ab3@6409>       MOVE.b $A(A3),D0
000243D8 <AmiBlitz3.ab3@6410>       ADDQ.w #1,D0
000243DC <AmiBlitz3.ab3@6411>       BCLR #$0,D0
000243DE <AmiBlitz3.ab3@6412>       ADDA.w D0,A3
000243E2 <AmiBlitz3.ab3@6413>   DBF D1,JL_0_5AB0
000243E4 <AmiBlitz3.ab3@6415>   MOVEA.l (A7)+,A0
000243E6 <AmiBlitz3.ab3@6416>   MOVEA.l (A0),A0
000243EA <AmiBlitz3.ab3@6419>     CMPA.w #$0,A0
000243EE <AmiBlitz3.ab3@6420>     BEQ.w JL_0_5B2A
000243F2 <AmiBlitz3.ab3@6421>     MOVEA.l $4(A0),A1
000243F6 <AmiBlitz3.ab3@6424>     CMPA.w #$0,A1
000243FA <AmiBlitz3.ab3@6425>     BEQ.w JL_0_5B24
000243FE <AmiBlitz3.ab3@6426>     MOVE.w $A(A1),D0
00024404 <AmiBlitz3.ab3@6427>     MOVEA.l newtypebase,A4
00024408 <AmiBlitz3.ab3@6428>     CMP.w #$7,D0
0002440C <AmiBlitz3.ab3@6429>     BCS.w JL_0_5B0E
00024412 <AmiBlitz3.ab3@6430>     SUB.w rescnt,D0
00024414 <AmiBlitz3.ab3@6433>     SUBQ.w #1,D0
00024418 <AmiBlitz3.ab3@6434>     BMI.w JL_0_5B1A
0002441A <AmiBlitz3.ab3@6437>        MOVEA.l (A4),A4
0002441E <AmiBlitz3.ab3@6438>   DBF D0,JL_0_5B14
00024422 <AmiBlitz3.ab3@6441>     MOVE.l A4,$A(A1)
00024424 <AmiBlitz3.ab3@6442>     MOVEA.l (A1),A1
00024428 <AmiBlitz3.ab3@6443> BRA.w JL_0_5AEE
0002442A <AmiBlitz3.ab3@6446>     MOVEA.l (A0),A0
0002442E <AmiBlitz3.ab3@6447> BRA.w JL_0_5AE2
00024430 <AmiBlitz3.ab3@6450>   MOVE.w (A7)+,D0
00024436 <AmiBlitz3.ab3@6451>   ADD.w D0,rescnt
0002443C <AmiBlitz3.ab3@6452>   MOVE.l A2,lastrestype
0002443E <AmiBlitz3.ab3@6455> RTS
00024444 <AmiBlitz3.ab3@6459>   LEA tokens,A0
00024448 <AmiBlitz3.ab3@6460>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
0002444A <AmiBlitz3.ab3@6463>     MOVEA.l (A0),A0
0002444E <AmiBlitz3.ab3@6464>   DBF D0,JL_0_5BD0
00024454 <AmiBlitz3.ab3@6466>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024458 <AmiBlitz3.ab3@6467>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
0002445C <AmiBlitz3.ab3@6470>       LEA $6(A0),A2
0002445E <AmiBlitz3.ab3@6473>         TST.b (A2)+
00024462 <AmiBlitz3.ab3@6474>       BNE.w JL_0_5BE4
00024464 <AmiBlitz3.ab3@6477>         TST.b (A2)+
00024468 <AmiBlitz3.ab3@6478>       BNE.w JL_0_5BEA
0002446A <AmiBlitz3.ab3@6480>       ADDQ.w #1,A2
0002446C <AmiBlitz3.ab3@6481>       EXG.l D1,A2
00024470 <AmiBlitz3.ab3@6482>       BCLR #$0,D1
00024472 <AmiBlitz3.ab3@6483>       EXG.l D1,A2
00024474 <AmiBlitz3.ab3@6484>       MOVE.l A2,(A1)+
00024476 <AmiBlitz3.ab3@6485>       MOVEA.l (A0),A0
0002447A <AmiBlitz3.ab3@6486>   DBF D0,JL_0_5BE0
0002447C <AmiBlitz3.ab3@6487> RTS
00024480 <AmiBlitz3.ab3@6491>   BSR.w asmconst
00024482 <AmiBlitz3.ab3@6492>   MOVEQ.l #$0B,D5
00024484 <AmiBlitz3.ab3@6493> RTS
00024486 <AmiBlitz3.ab3@6496> unmove:  Ds.w 1
0002448A <AmiBlitz3.ab3@6500>   MOVE.w #$48E7,D1
0002448E <AmiBlitz3.ab3@6501>   BSR.w writeword                                          ;movem.l -(a7)
00024492 <AmiBlitz3.ab3@6502>   MOVE.w #$000F,D2
00024494 <AmiBlitz3.ab3@6503>   SUB.w D4,D2
00024496 <AmiBlitz3.ab3@6504>   MOVEQ.l #-$01,D1
00024498 <AmiBlitz3.ab3@6505>   BCLR D2,D1
0002449C <AmiBlitz3.ab3@6506>   BSR.w writeword
0002449E <AmiBlitz3.ab3@6507>   MOVEQ.l #-$01,D1
000244A0 <AmiBlitz3.ab3@6508>   BCLR D4,D1
000244A6 <AmiBlitz3.ab3@6509>   MOVE.w D1,unmove
000244A8 <AmiBlitz3.ab3@6510> RTS
000244AC <AmiBlitz3.ab3@6514>   MOVE.w #$4CDF,D1
000244B0 <AmiBlitz3.ab3@6515>   BSR.w writeword
000244B4 <AmiBlitz3.ab3@6516>   MOVE.w unmove(PC),D1
000244B8 <AmiBlitz3.ab3@6517> BRA.w writeword
000244BC <AmiBlitz3.ab3@6530>   BSR.w JL_0_5D22
000244C0 <AmiBlitz3.ab3@6531>   CMP.w #$2C,D0                                            ;#','
000244C4 <AmiBlitz3.ab3@6532>    BNE.w syntaxerr
000244CA <AmiBlitz3.ab3@6533>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000244CE <AmiBlitz3.ab3@6534>    BSR.w writelong
000244D0 <AmiBlitz3.ab3@6535>   MOVE.w D4,D1
000244D4 <AmiBlitz3.ab3@6536>   ORI.w #$2F00,D1
000244D8 <AmiBlitz3.ab3@6537>    BSR.w writeword
000244DC <AmiBlitz3.ab3@6538>    BSR.w get1bytemain
000244E0 <AmiBlitz3.ab3@6539>    BSR.w getparameter
000244E4 <AmiBlitz3.ab3@6540>    BSR.w JL_0_8E3C
000244E8 <AmiBlitz3.ab3@6541>    BSR.w calcvar
000244EC <AmiBlitz3.ab3@6542>    BTST #$E,D2
000244F0 <AmiBlitz3.ab3@6543>    BEQ.w JL_0_5C80
000244F4 <AmiBlitz3.ab3@6546>    MOVE.b #$3,D2
000244F8 <AmiBlitz3.ab3@6547> BRA.w JL_0_5C8E
000244FA <AmiBlitz3.ab3@6550>   TST.b D2
000244FE <AmiBlitz3.ab3@6551>    BEQ.w JL_0_5C78
00024502 <AmiBlitz3.ab3@6552>   CMP.b #$7,D2
00024506 <AmiBlitz3.ab3@6553>    BEQ.w JL_0_5C78
0002450A <AmiBlitz3.ab3@6556>   BTST #$F,D2
0002450E <AmiBlitz3.ab3@6557>    BNE.w JL_0_5CA4
00024512 <AmiBlitz3.ab3@6558>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024516 <AmiBlitz3.ab3@6559>    BSR.w writeword
00024518 <AmiBlitz3.ab3@6560>   MOVE.w D3,D1
0002451C <AmiBlitz3.ab3@6561>    BSR.w writeword
00024520 <AmiBlitz3.ab3@6564>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024524 <AmiBlitz3.ab3@6565>    BSR.w writeword
00024528 <AmiBlitz3.ab3@6566>   MOVE.w #$1480,D1
0002452C <AmiBlitz3.ab3@6567>   CMP.b #$1,D2
00024530 <AmiBlitz3.ab3@6568>    BEQ.w JL_0_5CC8
00024534 <AmiBlitz3.ab3@6569>   EORI.w #$3000,D1
00024538 <AmiBlitz3.ab3@6570>   CMP.b #$2,D2
0002453C <AmiBlitz3.ab3@6571>    BNE.w JL_0_5CC8
00024540 <AmiBlitz3.ab3@6572>   ORI.w #$1000,D1
00024544 <AmiBlitz3.ab3@6575>   BSR.w writeword
0002454A <AmiBlitz3.ab3@6576>   MOVE.l #$4CDF7FFF,D1
0002454E <AmiBlitz3.ab3@6577> BRA.w writelong
00024552 <AmiBlitz3.ab3@6581>   BSR.w JL_0_5D22
00024556 <AmiBlitz3.ab3@6582>   CMP.w #$2C,D0
0002455A <AmiBlitz3.ab3@6583>    BNE.w syntaxerr
0002455E <AmiBlitz3.ab3@6584>    BSR.w regmovems
00024560 <AmiBlitz3.ab3@6585>   MOVE.w D4,-(A7)
00024562 <AmiBlitz3.ab3@6586>   MOVEQ.l #$03,D2
00024566 <AmiBlitz3.ab3@6587>    BSR.w eval
00024568 <AmiBlitz3.ab3@6588>   MOVE.w (A7)+,D1
0002456C <AmiBlitz3.ab3@6589>    BEQ.w JL_0_5D1A
00024570 <AmiBlitz3.ab3@6590>   CMP.w #$8,D1
00024574 <AmiBlitz3.ab3@6591>    BCC.w JL_0_5D0C
00024576 <AmiBlitz3.ab3@6592>   LSL.w #8,D1
00024578 <AmiBlitz3.ab3@6593>   LSL.w #1,D1
0002457C <AmiBlitz3.ab3@6594>   ORI.w #$2000,D1
00024580 <AmiBlitz3.ab3@6595>    BSR.w writeword
00024584 <AmiBlitz3.ab3@6596> BRA.w JL_0_5D1A
00024586 <AmiBlitz3.ab3@6599>   SUBQ.w #8,D1
00024588 <AmiBlitz3.ab3@6600>   LSL.w #8,D1
0002458A <AmiBlitz3.ab3@6601>   LSL.w #1,D1
0002458E <AmiBlitz3.ab3@6602>   ORI.w #$2040,D1
00024592 <AmiBlitz3.ab3@6603>   BSR.w writeword
00024596 <AmiBlitz3.ab3@6606> BRA.w dounmove
0002459A <AmiBlitz3.ab3@6610>   BSR.w get1bytemain
0002459E <AmiBlitz3.ab3@6613>   ORI.w #$20,D0
000245A2 <AmiBlitz3.ab3@6614>   CMP.w #$64,D0
000245A6 <AmiBlitz3.ab3@6615>    BEQ.w JL_0_5D4E
000245AA <AmiBlitz3.ab3@6616>   CMP.w #$61,D0
000245AE <AmiBlitz3.ab3@6617>    BNE.w syntaxerr
000245B2 <AmiBlitz3.ab3@6618>    BSR.w JL_0_5D4E
000245B4 <AmiBlitz3.ab3@6619>   ADDQ.w #8,D4
000245B6 <AmiBlitz3.ab3@6620> RTS
000245E2 <AmiBlitz3.ab3@6624>   !fget                                                   ;bsr.w get1bytemain
000245E6 <AmiBlitz3.ab3@6626>   ORI.w #$20,D0
000245EA <AmiBlitz3.ab3@6629>   CMP.w #$61,D0
000245EE <AmiBlitz3.ab3@6630>   BNE.w syntaxerr
0002461A <AmiBlitz3.ab3@6633>   !fget                                                    ;bsr.w get1bytemain
0002461E <AmiBlitz3.ab3@6634>   SUBI.w #$30,D0
00024622 <AmiBlitz3.ab3@6635>    BMI.w syntaxerr
00024626 <AmiBlitz3.ab3@6636>   CMP.w #$7,D0
0002462A <AmiBlitz3.ab3@6637>    BHI.w syntaxerr
0002462C <AmiBlitz3.ab3@6638>   MOVE.w D0,D4
00024658 <AmiBlitz3.ab3@6639>   !fget
0002465A <AmiBlitz3.ab3@6640> RTS                                                        ;bra.w get1bytemain
0002465C <AmiBlitz3.ab3@6644>   ADDQ.w #8,D4
0002465E <AmiBlitz3.ab3@6647>   MOVEQ.l #$00,D5
00024662 <AmiBlitz3.ab3@6648>   SUBI.w #$30,D4
00024666 <AmiBlitz3.ab3@6651>   CMP.w #$2D,D0
0002466A <AmiBlitz3.ab3@6652>    BEQ.w JL_0_5D9E
0002466E <AmiBlitz3.ab3@6653>   CMP.w #$2F,D0
00024672 <AmiBlitz3.ab3@6654>    BEQ.w JL_0_5D8C
00024676 <AmiBlitz3.ab3@6655> BRA.w syntaxerr
00024678 <AmiBlitz3.ab3@6658>   BSET D4,D5
0002467A <AmiBlitz3.ab3@6661>   MOVE.w D5,D4
0002467C <AmiBlitz3.ab3@6662>   MOVEQ.l #$0F,D5
0002467E <AmiBlitz3.ab3@6663> RTS
00024680 <AmiBlitz3.ab3@6666>   BSET D4,D5
00024684 <AmiBlitz3.ab3@6667>   BSR.w JL_0_5D1E
00024696 <AmiBlitz3.ab3@6668>   !compare3                                                ;bsr.w JL_0_5FC0
0002469A <AmiBlitz3.ab3@6669>   BNE.w JL_0_5D70
0002469E <AmiBlitz3.ab3@6670> BRA.w JL_0_5D84
000246A0 <AmiBlitz3.ab3@6673>   MOVE.w D4,D1
000246A4 <AmiBlitz3.ab3@6674>    BSR.w JL_0_5D1E
000246A6 <AmiBlitz3.ab3@6675>   CMP.w D4,D1
000246AA <AmiBlitz3.ab3@6676>    BLS.w JL_0_5DAC
000246AC <AmiBlitz3.ab3@6677>   EXG.l D4,D1
000246AE <AmiBlitz3.ab3@6680>   BSET D1,D5
000246B0 <AmiBlitz3.ab3@6681>   ADDQ.w #1,D1
000246B2 <AmiBlitz3.ab3@6682>   CMP.w D4,D1
000246B6 <AmiBlitz3.ab3@6683>    BLS.w JL_0_5DAC
000246C8 <AmiBlitz3.ab3@6684>   !compare3                                                ;bsr.w JL_0_5FC0
000246CC <AmiBlitz3.ab3@6685>   BNE.w JL_0_5D70
000246D0 <AmiBlitz3.ab3@6686> BRA.w JL_0_5D86
000246D2 <AmiBlitz3.ab3@6689>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000246FE <AmiBlitz3.ab3@6690>    !fget
00024702 <AmiBlitz3.ab3@6691>   CMP.w #$23,D0
00024706 <AmiBlitz3.ab3@6692>    BEQ.w getimm
0002470A <AmiBlitz3.ab3@6693>   CMP.w #$28,D0
0002470E <AmiBlitz3.ab3@6694>    BEQ.w JL_0_5DFE
00024712 <AmiBlitz3.ab3@6695>   CMP.w #$2D,D0
00024716 <AmiBlitz3.ab3@6696>    BNE.w JL_0_5E20
00024742 <AmiBlitz3.ab3@6697>    !fget                                                   ;bsr.w get1bytemain       -(
00024746 <AmiBlitz3.ab3@6698>   CMP.w #$28,D0
0002474A <AmiBlitz3.ab3@6699>    BNE.w JL_0_5F4E
0002474E <AmiBlitz3.ab3@6700>    BSR.w JL_0_5D3E
00024752 <AmiBlitz3.ab3@6701>   CMP.w #$29,D0
00024756 <AmiBlitz3.ab3@6702>    BNE.w syntaxerr
00024758 <AmiBlitz3.ab3@6703>   MOVEQ.l #$04,D5
00024784 <AmiBlitz3.ab3@6704>   !fget                                                    ;bsr.w get1bytemain
00024786 <AmiBlitz3.ab3@6705> RTS
0002478A <AmiBlitz3.ab3@6709>   BSR.w JL_0_5D3E
0002478E <AmiBlitz3.ab3@6710>   CMP.w #$29,D0
00024792 <AmiBlitz3.ab3@6711>    BNE.w syntaxerr
000247BE <AmiBlitz3.ab3@6712>   !fget                                                    ;bsr.w get1bytemain
000247C2 <AmiBlitz3.ab3@6713>   CMP.w #$2B,D0
000247C6 <AmiBlitz3.ab3@6714>    BEQ.w JL_0_5E1A
000247C8 <AmiBlitz3.ab3@6715>   MOVEQ.l #$02,D5
000247CA <AmiBlitz3.ab3@6716> RTS
000247CC <AmiBlitz3.ab3@6720>   MOVEQ.l #$03,D5
000247F8 <AmiBlitz3.ab3@6721>   !fget                                                    ;bra.w get1bytemain
000247FA <AmiBlitz3.ab3@6722> RTS
000247FE <AmiBlitz3.ab3@6726>   ORI.w #$20,D0
00024800 <AmiBlitz3.ab3@6727>   MOVE.w D0,D1                                            
0002482C <AmiBlitz3.ab3@6728>    !fget                                                   ;bsr.w get1bytemain
00024830 <AmiBlitz3.ab3@6729>   CMP.w #$64,D1
00024834 <AmiBlitz3.ab3@6730>    BNE.w JL_0_5E6C
00024838 <AmiBlitz3.ab3@6731>   CMP.w #$30,D0
0002483C <AmiBlitz3.ab3@6732>    BCS.w JL_0_5EAE
00024840 <AmiBlitz3.ab3@6733>   CMP.w #$37,D0
00024844 <AmiBlitz3.ab3@6734>    BHI.w JL_0_5EAE
00024846 <AmiBlitz3.ab3@6735>   MOVE.w D0,D4
00024872 <AmiBlitz3.ab3@6736>    !fget                                                   ;bsr.w get1bytemain
00024884 <AmiBlitz3.ab3@6737>    !compare3                                               ;bsr.w JL_0_5FC0
00024888 <AmiBlitz3.ab3@6738>    BEQ.w JL_0_5E64
0002488C <AmiBlitz3.ab3@6739>   CMP.w #$2D,D0
00024890 <AmiBlitz3.ab3@6740>    BEQ.w JL_0_5D6A
00024894 <AmiBlitz3.ab3@6741>   CMP.w #$2F,D0
00024898 <AmiBlitz3.ab3@6742>    BEQ.w JL_0_5D6A
0002489C <AmiBlitz3.ab3@6743> BRA.w JL_0_5EB8
0002489E <AmiBlitz3.ab3@6746>   MOVEQ.l #$00,D5
000248A2 <AmiBlitz3.ab3@6747>   SUBI.w #$30,D4
000248A4 <AmiBlitz3.ab3@6748> RTS
000248A8 <AmiBlitz3.ab3@6751>    CMP.w #$61,D1
000248AC <AmiBlitz3.ab3@6752>    BNE.w JL_0_5EAE
000248B0 <AmiBlitz3.ab3@6753>   CMP.w #$30,D0
000248B4 <AmiBlitz3.ab3@6754>    BCS.w JL_0_5EAE
000248B8 <AmiBlitz3.ab3@6755>   CMP.w #$37,D0
000248BC <AmiBlitz3.ab3@6756>    BHI.w JL_0_5EAE
000248BE <AmiBlitz3.ab3@6757>   MOVE.w D0,D4
000248EA <AmiBlitz3.ab3@6758>    !fget                                                   ;bsr.w get1bytemain
000248FC <AmiBlitz3.ab3@6759>    !compare3                                               ;bsr.w JL_0_5FC0
00024900 <AmiBlitz3.ab3@6760>    BEQ.w JL_0_5EA6
00024904 <AmiBlitz3.ab3@6761>   CMP.w #$2D,D0
00024908 <AmiBlitz3.ab3@6762>    BEQ.w JL_0_5D68                                         ;movem
0002490C <AmiBlitz3.ab3@6763>   CMP.w #$2F,D0
00024910 <AmiBlitz3.ab3@6764>    BEQ.w JL_0_5D68
00024914 <AmiBlitz3.ab3@6765> BRA.w JL_0_5EB8
00024916 <AmiBlitz3.ab3@6768>   MOVEQ.l #1,d5
0002491A <AmiBlitz3.ab3@6769>   SUBI.w #$30,D4
0002491E <AmiBlitz3.ab3@6771> BRA 'l10
00024920 <AmiBlitz3.ab3@6772>   ADDQ.w #8,d4
00024922 <AmiBlitz3.ab3@6773>   MOVEQ #0,d5
00024924 <AmiBlitz3.ab3@6774>   BSET d4,d5
00024926 <AmiBlitz3.ab3@6775>   MOVE.w d5,d4
00024928 <AmiBlitz3.ab3@6776>   MOVEQ.l #$0f,D5                                          ;01
0002492A <AmiBlitz3.ab3@6779> RTS
0002492E <AmiBlitz3.ab3@6783>   ORI.w #$20,D0
00024930 <AmiBlitz3.ab3@6784>   MOVE.w D0,D4
0002495C <AmiBlitz3.ab3@6785>    !fget                                                   ;bsr.w get1bytemain
0002496E <AmiBlitz3.ab3@6788>   !compare3                                                ;bsr.w JL_0_5FC0
00024972 <AmiBlitz3.ab3@6789>    BNE.w JL_0_5EF2
00024976 <AmiBlitz3.ab3@6790>   CMP.w #$73,D1
0002497A <AmiBlitz3.ab3@6791>    BNE.w JL_0_5EF2
0002497E <AmiBlitz3.ab3@6792>   CMP.w #$70,D4
00024982 <AmiBlitz3.ab3@6793>    BNE.w JL_0_5EDE
00024994 <AmiBlitz3.ab3@6794>    !compare3                                               ;bsr.w JL_0_5FC0
00024998 <AmiBlitz3.ab3@6795>    BNE.w JL_0_5F4E
0002499A <AmiBlitz3.ab3@6796>   MOVEQ.l #$07,D4
0002499C <AmiBlitz3.ab3@6797>   MOVEQ.l #$01,D5
0002499E <AmiBlitz3.ab3@6798> RTS
000249A2 <AmiBlitz3.ab3@6802>   CMP.w #$72,D4
000249A6 <AmiBlitz3.ab3@6803>    BNE.w JL_0_5F4E
000249B8 <AmiBlitz3.ab3@6804>    !compare3                                               ;bsr.w JL_0_5FC0
000249BC <AmiBlitz3.ab3@6805>    BNE.w JL_0_5F4E
000249BE <AmiBlitz3.ab3@6806>   MOVEQ.l #$0D,D5
000249C0 <AmiBlitz3.ab3@6807> RTS
000249C4 <AmiBlitz3.ab3@6811>   ORI.w #$20,D0
000249C8 <AmiBlitz3.ab3@6812>   CMP.w #$63,D1
000249CC <AmiBlitz3.ab3@6813>    BNE.w JL_0_5F22
000249D0 <AmiBlitz3.ab3@6814>   CMP.w #$63,D4
000249D4 <AmiBlitz3.ab3@6815>    BNE.w JL_0_5F4E
000249D8 <AmiBlitz3.ab3@6816>   CMP.w #$72,D0
000249DC <AmiBlitz3.ab3@6817>    BNE.w JL_0_5F4E
000249E0 <AmiBlitz3.ab3@6818>    BSR.w get1bytemain                                      ;??wy not !fget
000249E4 <AmiBlitz3.ab3@6819>    BEQ.w JL_0_5F1E
000249E8 <AmiBlitz3.ab3@6820>   CMP.w #$2C,D0
000249EC <AmiBlitz3.ab3@6821>    BNE.w JL_0_5F4E
000249EE <AmiBlitz3.ab3@6824>   MOVEQ.l #$0C,D5
000249F0 <AmiBlitz3.ab3@6825> RTS
000249F4 <AmiBlitz3.ab3@6829>   CMP.w #$75,D1
000249F8 <AmiBlitz3.ab3@6830>    BNE.w JL_0_5F4E
000249FC <AmiBlitz3.ab3@6831>   CMP.w #$73,D4
00024A00 <AmiBlitz3.ab3@6832>    BNE.w JL_0_5F4E
00024A04 <AmiBlitz3.ab3@6833>   CMP.w #$70,D0
00024A08 <AmiBlitz3.ab3@6834>    BNE.w JL_0_5F4E
00024A0C <AmiBlitz3.ab3@6835>    BSR.w get1bytemain                                      ;??wy not !fget
00024A10 <AmiBlitz3.ab3@6836>    BEQ.w JL_0_5F4A
00024A14 <AmiBlitz3.ab3@6837>   CMP.w #$2C,D0
00024A18 <AmiBlitz3.ab3@6838>    BNE.w JL_0_5F4E
00024A1A <AmiBlitz3.ab3@6841>   MOVEQ.l #$0E,D5
00024A1C <AmiBlitz3.ab3@6842> RTS
00024A1E <AmiBlitz3.ab3@6846>   MOVEA.l A4,A5
00024A22 <AmiBlitz3.ab3@6847>    BSR.w asmconst
00024A34 <AmiBlitz3.ab3@6848>    !compare3                                               ;bsr.w JL_0_5FC0
00024A38 <AmiBlitz3.ab3@6849>    BEQ.w JL_0_5FB8
00024A3C <AmiBlitz3.ab3@6850>   CMP.w #$2E,D0
00024A40 <AmiBlitz3.ab3@6851>    BEQ.w JL_0_5FA0
00024A44 <AmiBlitz3.ab3@6852>   CMP.w #$28,D0
00024A48 <AmiBlitz3.ab3@6853>    BNE.w syntaxerr
00024A4C <AmiBlitz3.ab3@6854>    BSR.w get1bytemain                                      ;??wy not !fget
00024A50 <AmiBlitz3.ab3@6855>   ORI.w #$20,D0
00024A54 <AmiBlitz3.ab3@6856>   CMP.w #$70,D0
00024A58 <AmiBlitz3.ab3@6857>    BNE.w JL_0_5F98
00024A5C <AmiBlitz3.ab3@6858>    BSR.w get1bytemain                                      ;??wy not !fget
00024A60 <AmiBlitz3.ab3@6859>   ORI.w #$20,D0
00024A64 <AmiBlitz3.ab3@6860>   CMP.w #$63,D0
00024A68 <AmiBlitz3.ab3@6861>    BNE.w syntaxerr
00024A6C <AmiBlitz3.ab3@6862>    BSR.w get1bytemain                                      ;??wy not !fget
00024A70 <AmiBlitz3.ab3@6863>    BSR.w JL_0_5FD4
00024A72 <AmiBlitz3.ab3@6864>   ADDQ.w #4,D5
00024A74 <AmiBlitz3.ab3@6865> RTS
00024A78 <AmiBlitz3.ab3@6869>   BSR.w JL_0_5D46
00024A7C <AmiBlitz3.ab3@6870> BRA.w JL_0_5FD4
00024A80 <AmiBlitz3.ab3@6874>    BSR.w get1bytemain                                     ;??wy not !fget
00024A84 <AmiBlitz3.ab3@6875>   ORI.w #$20,D0
00024A88 <AmiBlitz3.ab3@6876>   CMP.w #$77,D0
00024A8C <AmiBlitz3.ab3@6877>    BEQ.w JL_0_5FBC
00024A90 <AmiBlitz3.ab3@6878>   CMP.w #$6C,D0
00024A94 <AmiBlitz3.ab3@6879>    BNE.w syntaxerr
00024A96 <AmiBlitz3.ab3@6882>   MOVEQ.l #$08,D5
00024A98 <AmiBlitz3.ab3@6883> RTS
00024A9A <AmiBlitz3.ab3@6887>   MOVEQ.l #$07,D5
00024A9C <AmiBlitz3.ab3@6888> RTS
00024A9E <AmiBlitz3.ab3@6892>   TST.w D0
00024AA2 <AmiBlitz3.ab3@6893>    BEQ.w JL_0_5FD2
00024AA6 <AmiBlitz3.ab3@6894>   CMP.w #$3A,D0
00024AAA <AmiBlitz3.ab3@6895>    BEQ.w JL_0_5FD2
00024AAE <AmiBlitz3.ab3@6896>   CMP.w #$2C,D0
00024AB0 <AmiBlitz3.ab3@6899> RTS
00024AB4 <AmiBlitz3.ab3@6903>   CMP.w #$2C,D0
00024AB8 <AmiBlitz3.ab3@6904>    BNE.w JL_0_6054
00024ABC <AmiBlitz3.ab3@6905>    BSR.w get1bytemain                                      ;??wy not !fget
00024AC0 <AmiBlitz3.ab3@6906>   ORI.w #$20,D0
00024AC2 <AmiBlitz3.ab3@6907>   MOVEQ.l #$00,D1
00024AC6 <AmiBlitz3.ab3@6908>   CMP.w #$64,D0
00024ACA <AmiBlitz3.ab3@6909>    BEQ.w JL_0_5FFA
00024ACE <AmiBlitz3.ab3@6910>   CMP.w #$61,D0
00024AD2 <AmiBlitz3.ab3@6911>    BNE.w syntaxerr
00024AD6 <AmiBlitz3.ab3@6912>   BSET #$F,D1
00024ADA <AmiBlitz3.ab3@6915>    BSR.w get1bytemain                                      ;??wy not !fget
00024ADE <AmiBlitz3.ab3@6916>   SUBI.w #$30,D0
00024AE2 <AmiBlitz3.ab3@6917>    BMI.w syntaxerr
00024AE6 <AmiBlitz3.ab3@6918>   CMP.w #$7,D0
00024AEA <AmiBlitz3.ab3@6919>    BHI.w syntaxerr
00024AEC <AmiBlitz3.ab3@6920>   LSL.w #8,D0
00024AEE <AmiBlitz3.ab3@6921>   LSL.w #4,D0
00024AF0 <AmiBlitz3.ab3@6922>   OR.w D0,D1
00024AF4 <AmiBlitz3.ab3@6923>    BSR.w get1bytemain                                      ;??wy not !fget
00024AF8 <AmiBlitz3.ab3@6924>   CMP.w #$2E,D0
00024AFC <AmiBlitz3.ab3@6925>    BNE.w JL_0_6040
00024B00 <AmiBlitz3.ab3@6926>    BSR.w get1bytemain                                      ;??wy not !fget
00024B04 <AmiBlitz3.ab3@6927>   ORI.w #$20,D0
00024B08 <AmiBlitz3.ab3@6928>   CMP.w #$77,D0
00024B0C <AmiBlitz3.ab3@6929>    BEQ.w JL_0_603C
00024B10 <AmiBlitz3.ab3@6930>   CMP.w #$6C,D0
00024B14 <AmiBlitz3.ab3@6931>    BNE.w syntaxerr
00024B18 <AmiBlitz3.ab3@6932>   BSET #$B,D1
00024B1C <AmiBlitz3.ab3@6935>    BSR.w get1bytemain                                      ;??wy not !fget
00024B20 <AmiBlitz3.ab3@6938>    CMP.b #"*",d0                                           ;020 * Mode
00024B24 <AmiBlitz3.ab3@6939>             BNE 'l1
00024B28 <AmiBlitz3.ab3@6940>             BSR.w get1bytemain                             ;??wy not !fget
00024B2C <AmiBlitz3.ab3@6941>             CMP.b #"2",d0
00024B30 <AmiBlitz3.ab3@6942>             BNE 'l2
00024B34 <AmiBlitz3.ab3@6943>             OR.w #$200,d1
00024B38 <AmiBlitz3.ab3@6944> BRA 'l1b
00024B3C <AmiBlitz3.ab3@6947>             CMP.b #"4",d0
00024B40 <AmiBlitz3.ab3@6948>             BNE 'l3
00024B44 <AmiBlitz3.ab3@6949>             OR.w #$400,d1
00024B48 <AmiBlitz3.ab3@6950> BRA 'l1b
00024B4C <AmiBlitz3.ab3@6953>             CMP.b #"8",d0
00024B50 <AmiBlitz3.ab3@6954>             BNE syntaxerr
00024B54 <AmiBlitz3.ab3@6955>             OR.w #$600,d1
00024B58 <AmiBlitz3.ab3@6958>         BSR.w get1bytemain                                 ;??wy not !fget
00024B5C <AmiBlitz3.ab3@6961>   CMP.w #$29,D0
00024B60 <AmiBlitz3.ab3@6962>    BNE.w syntaxerr
00024B66 <AmiBlitz3.ab3@6963>   MOVE.w D1,extraword
00024B68 <AmiBlitz3.ab3@6964>   MOVEQ.l #$06,D5
00024B6C <AmiBlitz3.ab3@6965> BRA.w get1bytemain                                         ;??wy not !fget
00024B70 <AmiBlitz3.ab3@6969>   CMP.w #")",D0                                            ;")"
00024B74 <AmiBlitz3.ab3@6970>    BNE.w errorbracketmiss                                  ; was syntax error
00024B76 <AmiBlitz3.ab3@6971>   MOVEQ.l #$05,D5
00024B7A <AmiBlitz3.ab3@6972> BRA.w get1bytemain                                         ;??wy not !fget
00024B80 <AmiBlitz3.ab3@6979>   MOVEA.l asmbuff,A0
00024B86 <AmiBlitz3.ab3@6980>   MOVE.w ininclude,D1
00024B8C <AmiBlitz3.ab3@6981>   OR.w inmacro,D1
00024B8E <AmiBlitz3.ab3@6982>   MOVE.w D1,(A0)+                                          ;flag!
00024B92 <AmiBlitz3.ab3@6983>    BNE.w copyconst
00024B94 <AmiBlitz3.ab3@6984>   MOVE.l A5,-(A7)
00024B98 <AmiBlitz3.ab3@6985>    BSR.w copyconst
00024B9E <AmiBlitz3.ab3@6986>   MOVEA.l asmbuff,A0
00024BA2 <AmiBlitz3.ab3@6987>   CMP.w #$4,D1
00024BA6 <AmiBlitz3.ab3@6988>    BLS.w asmconst__leave
00024BAC <AmiBlitz3.ab3@6989>   TST.w lc
00024BB0 <AmiBlitz3.ab3@6990>    BNE.w asmconst__leave
00024BB2 <AmiBlitz3.ab3@6991>   ADDQ.w #2,A0
00024BB4 <AmiBlitz3.ab3@6992>   MOVE.l (A7)+,(A0)+
00024BB6 <AmiBlitz3.ab3@6993>   CLR.b (A0)
00024BBE <AmiBlitz3.ab3@6994>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00024BC0 <AmiBlitz3.ab3@6995> RTS
00024BC2 <AmiBlitz3.ab3@6999>   NOT.w (A0)
00024BC4 <AmiBlitz3.ab3@7000>   ADDQ.w #4,A7
00024BC6 <AmiBlitz3.ab3@7001> RTS
00024BC8 <AmiBlitz3.ab3@7004> lc:  Ds.w 1
00024BCE <AmiBlitz3.ab3@7008>   CLR.w lc
00024BD0 <AmiBlitz3.ab3@7009>   MOVEQ.l #$00,D1
00024BD2 <AmiBlitz3.ab3@7012>    ADDQ.w #1,D1                                            ;label name
00024BFE <AmiBlitz3.ab3@7013>    !fget                                                   ;bsr.w get1bytemain
00024C02 <AmiBlitz3.ab3@7014>    BEQ.w copyconst__done
00024C06 <AmiBlitz3.ab3@7015>    CMP.w #$22,d0
00024C0A <AmiBlitz3.ab3@7016>    BNE.s copyconst__loop_l10
00024C10 <AmiBlitz3.ab3@7017>    NOT.w instringon
00024C14 <AmiBlitz3.ab3@7020>    CMP.w #":",d0
00024C18 <AmiBlitz3.ab3@7021>    BNE.s copyconst__loop_l11
00024C1E <AmiBlitz3.ab3@7022>    TST.w instringon
00024C22 <AmiBlitz3.ab3@7023>    BEQ copyconst__done
00024C24 <AmiBlitz3.ab3@7026>   TST.w D0
00024C28 <AmiBlitz3.ab3@7027>   BPL.w copyconst__notmi
00024C2A <AmiBlitz3.ab3@7028>   MOVE.w D0,-(A7)
00024C2C <AmiBlitz3.ab3@7029>   LSR.w #8,D0
00024C2E <AmiBlitz3.ab3@7030>   MOVE.b D0,(A0)+
00024C30 <AmiBlitz3.ab3@7031>   MOVE.w (A7)+,D0
00024C32 <AmiBlitz3.ab3@7032>   MOVE.b D0,(A0)+
00024C34 <AmiBlitz3.ab3@7033>   ADDQ.w #1,D1
00024C38 <AmiBlitz3.ab3@7034> BRA.s copyconst__loop
00024C3E <AmiBlitz3.ab3@7037>    TST.w instringon
00024C42 <AmiBlitz3.ab3@7038>    BNE.w copyconst__putbyte
00024C48 <AmiBlitz3.ab3@7039>    TST.b _dcb
00024C4C <AmiBlitz3.ab3@7040>    BNE copyconst__notmi_l10
00024C50 <AmiBlitz3.ab3@7041>    CMP.w #$28,D0
00024C54 <AmiBlitz3.ab3@7042>    BEQ.w copyconst__done
00024C58 <AmiBlitz3.ab3@7045>    CMP.w #$2C,D0
00024C5C <AmiBlitz3.ab3@7046>    BEQ.w copyconst__done
00024C60 <AmiBlitz3.ab3@7047>    CMP.b #"'",D0
00024C64 <AmiBlitz3.ab3@7048>    BNE.w copyconst__putbyte
00024C6A <AmiBlitz3.ab3@7049>    MOVE.w D0,lc                                     ;locallabels
00024C6C <AmiBlitz3.ab3@7050>    MOVE.l A1,-(A7)
00024C72 <AmiBlitz3.ab3@7051>    LEA lastgloballabel,A1
00024C74 <AmiBlitz3.ab3@7052>    TST.b (A1)
00024C78 <AmiBlitz3.ab3@7053>    BEQ.w nolocerr
00024C7A <AmiBlitz3.ab3@7056>   ADDQ.w #1,D1
00024C7C <AmiBlitz3.ab3@7057>   MOVE.b (A1)+,(A0)+
00024C80 <AmiBlitz3.ab3@7058>    BNE.w copyconst__cloop
00024C82 <AmiBlitz3.ab3@7059>   SUBQ.w #1,D1
00024C84 <AmiBlitz3.ab3@7060>   SUBQ.w #1,A0
00024C86 <AmiBlitz3.ab3@7061>   MOVEA.l (A7)+,A1
00024C88 <AmiBlitz3.ab3@7064>   MOVE.b D0,(A0)+
00024C8C <AmiBlitz3.ab3@7065> BRA.w copyconst__loop
00024C8E <AmiBlitz3.ab3@7068>   CLR.b (A0)
00024C94 <AmiBlitz3.ab3@7069>   MOVE.w D1,asmlen2
00024C96 <AmiBlitz3.ab3@7070> RTS
00024C9C <AmiBlitz3.ab3@7075>   CMP.l #$80ad,d0
00024CA0 <AmiBlitz3.ab3@7076>   BNE.s 'l12
00024CA6 <AmiBlitz3.ab3@7077> JMP bssseg
00024CAC <AmiBlitz3.ab3@7080>   CMP.l #$807f,d0
00024CB0 <AmiBlitz3.ab3@7081>     BNE.s 'l13
00024CB6 <AmiBlitz3.ab3@7082> JMP chipseg
00024CBC <AmiBlitz3.ab3@7085>   ADDQ.l #1,destpointer                                    ;even
00024CC4 <AmiBlitz3.ab3@7086>   BCLR #$0,destpointer+3
00024CC8 <AmiBlitz3.ab3@7087>   SUBI.w #$803C,D0
00024CCA <AmiBlitz3.ab3@7088>   LSL.w #2,D0
00024CD0 <AmiBlitz3.ab3@7089>   MOVEA.l #asmpnts,A0
00024CD4 <AmiBlitz3.ab3@7090>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00024CDA <AmiBlitz3.ab3@7091>   MOVE.w D0,temp1
00024CDC <AmiBlitz3.ab3@7092>   MOVE.l A0,-(A7)
00024CDE <AmiBlitz3.ab3@7093>   MOVEQ.l #$01,D1
00024D0A <AmiBlitz3.ab3@7094>    !fget                                                   ;bsr.w get1bytemain
00024D0E <AmiBlitz3.ab3@7095>   CMP.w #$2E,D0
00024D12 <AmiBlitz3.ab3@7096>    BNE.w JL_0_6184
00024D3E <AmiBlitz3.ab3@7097>   !fget                                                    ;bsr.w get1bytemain
00024D42 <AmiBlitz3.ab3@7098>   ORI.w #$20,D0
00024D46 <AmiBlitz3.ab3@7099>   CMP.w #$77,D0                                            ;long
00024D4A <AmiBlitz3.ab3@7100>    BEQ.w JL_0_618A
00024D4E <AmiBlitz3.ab3@7101>   CMP.w #$62,D0                                            ;byte
00024D52 <AmiBlitz3.ab3@7102>    BEQ.w JL_0_617A
00024D56 <AmiBlitz3.ab3@7103>   CMP.w #$6C,D0                                            ;word
00024D5A <AmiBlitz3.ab3@7104>    BEQ.w JL_0_6196
00024D5E <AmiBlitz3.ab3@7105>   CMP.w #"s",d0
00024D62 <AmiBlitz3.ab3@7106>   BNE syntaxerr
00024D66 <AmiBlitz3.ab3@7107> BRA.w JL_0_617A
00024D68 <AmiBlitz3.ab3@7110>   MOVEQ.l #$00,D1
00024D6C <AmiBlitz3.ab3@7111>   MOVE.w $8(A0),D0
00024D70 <AmiBlitz3.ab3@7112> BRA.w JL_0_619E
00024D72 <AmiBlitz3.ab3@7115>   MOVEQ.l #$04,D1
00024D76 <AmiBlitz3.ab3@7116> BRA.w JL_0_61AE
00024D78 <AmiBlitz3.ab3@7119>   MOVEQ.l #$04,D1
00024D7C <AmiBlitz3.ab3@7120>   MOVE.w $8(A0),D0
00024D7E <AmiBlitz3.ab3@7121>   LSR.w #4,D0
00024D82 <AmiBlitz3.ab3@7122> BRA.w JL_0_619E
00024D84 <AmiBlitz3.ab3@7125>   MOVEQ.l #$08,D1
00024D88 <AmiBlitz3.ab3@7126>   MOVE.w $8(A0),D0
00024D8A <AmiBlitz3.ab3@7127>   LSR.w #8,D0
00024D8E <AmiBlitz3.ab3@7130>    ANDI.w #$F,D0
00024D92 <AmiBlitz3.ab3@7131>   CMP.w #$F,D0
00024D96 <AmiBlitz3.ab3@7132>    BNE.w 'cl60
00024D9E <AmiBlitz3.ab3@7135>    CMP.l #"MULS",-6(a0)
00024DA2 <AmiBlitz3.ab3@7136>    BNE 'c20
00024DA8 <AmiBlitz3.ab3@7137>    MOVE.l #$4c000800,d1
00024DAE <AmiBlitz3.ab3@7138> JMP do32
00024DB6 <AmiBlitz3.ab3@7141>    CMP.l #"MULU",-6(a0)
00024DBA <AmiBlitz3.ab3@7142>    BNE 'c30
00024DC0 <AmiBlitz3.ab3@7143>    MOVE.l #$4c000000,d1
00024DC6 <AmiBlitz3.ab3@7144> JMP do32
00024DCE <AmiBlitz3.ab3@7147>    CMP.l #"DIVS",-6(a0)
00024DD2 <AmiBlitz3.ab3@7148>    BNE 'c40
00024DD8 <AmiBlitz3.ab3@7149>    MOVE.l #$4c400800,d1
00024DDE <AmiBlitz3.ab3@7150> JMP do32
00024DE6 <AmiBlitz3.ab3@7153>    CMP.l #"DIVU",-6(a0)
00024DEA <AmiBlitz3.ab3@7154>    BNE 'c50
00024DF0 <AmiBlitz3.ab3@7155>    MOVE.l #$4c400000,d1
00024DF6 <AmiBlitz3.ab3@7156> JMP do32
00024DFA <AmiBlitz3.ab3@7159> BRA illsizeerr
00024E26 <AmiBlitz3.ab3@7162>   !fget                                                    ;bsr.w get1bytemain
00024E2C <AmiBlitz3.ab3@7165>   MOVE.w D1,asmsize
00024E2E <AmiBlitz3.ab3@7166>   MOVEQ.l #-$01,D3
00024E32 <AmiBlitz3.ab3@7167>    BSR.w reget
00024E36 <AmiBlitz3.ab3@7168>    BEQ.w JL_0_6200
00024E40 <AmiBlitz3.ab3@7169>   MOVE.l #ptr_parameterstore,asmbuff
00024E4A <AmiBlitz3.ab3@7171>    MOVE.w oldqflag,instringon
00024E50 <AmiBlitz3.ab3@7172>   MOVEA.l lastsourcepos,A5
00024E54 <AmiBlitz3.ab3@7173>    BSR.w JL_0_5DC2
00024E56 <AmiBlitz3.ab3@7174>   MOVE.l D4,D2                                             ;to src
00024E58 <AmiBlitz3.ab3@7175>   MOVE.l D5,D3
00024E62 <AmiBlitz3.ab3@7176>   MOVE.w asmlen2,asmlen
00024E64 <AmiBlitz3.ab3@7177>   MOVEQ.l #-$01,D5
00024E6E <AmiBlitz3.ab3@7178>   MOVE.w extraword,extraword2
00024E72 <AmiBlitz3.ab3@7179>   CMP.w #$2C,D0                                            ;','
00024E76 <AmiBlitz3.ab3@7180>    BNE.w JL_0_6200
00024E80 <AmiBlitz3.ab3@7181>   MOVE.l #namebuff2,asmbuff
00024E84 <AmiBlitz3.ab3@7182>    BSR.w JL_0_5DC2                                         ;dest
00024E86 <AmiBlitz3.ab3@7185>   MOVEA.l (A7)+,A0
00024E8C <AmiBlitz3.ab3@7186>   MOVEA.l destpointer,A1
00024E8E <AmiBlitz3.ab3@7187>   MOVEA.l A1,A4
00024E90 <AmiBlitz3.ab3@7188>   ADDQ.w #2,A1
00024E92 <AmiBlitz3.ab3@7189>   MOVE.w (A0),D1
00024E94 <AmiBlitz3.ab3@7190>   TST.w D3
00024E98 <AmiBlitz3.ab3@7191>    BMI.w JL_0_639E
00024E9C <AmiBlitz3.ab3@7192>   MOVE.w $E(A0),D0
00024EA0 <AmiBlitz3.ab3@7193>    BPL.w JL_0_6264
00024EA4 <AmiBlitz3.ab3@7194>   BTST #$0,D0
00024EA8 <AmiBlitz3.ab3@7195>    BEQ.w JL_0_6240
00024EAC <AmiBlitz3.ab3@7196>   CMP.w #$1,D5
00024EB0 <AmiBlitz3.ab3@7197>    BNE.w JL_0_6240
00024EB4 <AmiBlitz3.ab3@7198>   CMP.w #$E,D3
00024EB8 <AmiBlitz3.ab3@7199>    BEQ.w JL_0_6264
00024EBE <AmiBlitz3.ab3@7200>   MOVE.w temp1,D0
00024EC0 <AmiBlitz3.ab3@7201>   ADDQ.w #4,D0
00024EC4 <AmiBlitz3.ab3@7202> BRA.w JL_0_6256
00024EC8 <AmiBlitz3.ab3@7205>   BTST #$1,D0
00024ECC <AmiBlitz3.ab3@7206>    BEQ.w JL_0_6264
00024ED0 <AmiBlitz3.ab3@7207>   CMP.w #$B,D3
00024ED4 <AmiBlitz3.ab3@7208>    BNE.w JL_0_6264
00024EDA <AmiBlitz3.ab3@7209>   MOVE.w temp1,D0
00024EDC <AmiBlitz3.ab3@7212>   ADDQ.w #4,D0
00024EE2 <AmiBlitz3.ab3@7213>   MOVEA.l #asmpnts,A0
00024EE6 <AmiBlitz3.ab3@7214>   MOVEA.l $0(A0,D0.W),A0
00024EE8 <AmiBlitz3.ab3@7215>   MOVE.w (A0),D1
00024EF2 <AmiBlitz3.ab3@7218>   MOVE.l #ptr_parameterstore,buff1
00024EFC <AmiBlitz3.ab3@7219>   MOVE.l #namebuff2,buff2
00024F00 <AmiBlitz3.ab3@7220>   MOVE.l $A(A0),D0
00024F04 <AmiBlitz3.ab3@7221>    BEQ.w JL_0_62DC
00024F06 <AmiBlitz3.ab3@7222>   MOVEA.l D0,A3
00024F0C <AmiBlitz3.ab3@7223>   MOVE.w asmsize,D6
00024F0E <AmiBlitz3.ab3@7226>    JSR (A3)
00024F12 <AmiBlitz3.ab3@7227>    BPL.w JL_0_629A
00024F16 <AmiBlitz3.ab3@7228>   CMP.w #-$2,D0
00024F1A <AmiBlitz3.ab3@7229>    BEQ.w illsizeerr
00024F1E <AmiBlitz3.ab3@7230> BRA.w illeaerr
00024F22 <AmiBlitz3.ab3@7233>   BEQ.w JL_0_62DC
00024F24 <AmiBlitz3.ab3@7234>   EXG.l D2,D4
00024F26 <AmiBlitz3.ab3@7235>   EXG.l D3,D5
00024F2C <AmiBlitz3.ab3@7236>   MOVE.l extraword,D6
00024F2E <AmiBlitz3.ab3@7237>   SWAP D6
00024F34 <AmiBlitz3.ab3@7238>   MOVE.l D6,extraword
00024F3E <AmiBlitz3.ab3@7239>   MOVE.l #namebuff2,buff1
00024F48 <AmiBlitz3.ab3@7240>   MOVE.l #ptr_parameterstore,buff2
00024F4E <AmiBlitz3.ab3@7241>   MOVE.w asmlen,D6
00024F54 <AmiBlitz3.ab3@7242>   MOVE.w asmlen2,D7
00024F5A <AmiBlitz3.ab3@7243>   MOVE.w D6,asmlen2
00024F60 <AmiBlitz3.ab3@7244>   MOVE.w D7,asmlen
00024F6A <AmiBlitz3.ab3@7247>   MOVE.l buff1,asmbuff
00024F6E <AmiBlitz3.ab3@7248>   MOVE.w $E(A0),D0
00024F72 <AmiBlitz3.ab3@7249>    BEQ.w JL_0_6348
00024F76 <AmiBlitz3.ab3@7250>    BMI.w JL_0_6348
00024F7A <AmiBlitz3.ab3@7251>    CMP.w #$7000,d1
00024F7E <AmiBlitz3.ab3@7252>    BNE 'skip
00024F82 <AmiBlitz3.ab3@7253>    CMP.w #$b,d3
00024F86 <AmiBlitz3.ab3@7254>    BNE illeaerr
00024F8A <AmiBlitz3.ab3@7257>    CMP.w #$1,D0
00024F8E <AmiBlitz3.ab3@7258>    BNE.w JL_0_630E
00024F92 <AmiBlitz3.ab3@7259>    CMP.w #$B,D3
00024F96 <AmiBlitz3.ab3@7260>    BNE.w JL_0_6348
00024F9A <AmiBlitz3.ab3@7263>    BSR.w insasm
00024F9C <AmiBlitz3.ab3@7264>   MOVE.w D4,D2
00024F9E <AmiBlitz3.ab3@7265>   MOVE.w D5,D3
00024FA2 <AmiBlitz3.ab3@7266> BRA.w JL_0_6364
00024FA6 <AmiBlitz3.ab3@7269>    CMP.w #$2,D0
00024FAA <AmiBlitz3.ab3@7270>    BNE.w JL_0_6324
00024FAE <AmiBlitz3.ab3@7271>   CMP.w #$8,D3
00024FB2 <AmiBlitz3.ab3@7272>    BNE.w illeaerr
00024FB4 <AmiBlitz3.ab3@7273>   MOVEQ.l #$09,D3
00024FB8 <AmiBlitz3.ab3@7274> BRA.w JL_0_6348
00024FBC <AmiBlitz3.ab3@7277>    CMP.w #$3,D0
00024FC0 <AmiBlitz3.ab3@7278>    BEQ.w JL_0_6302
00024FC4 <AmiBlitz3.ab3@7279>   CMP.w #$4,D0
00024FC8 <AmiBlitz3.ab3@7280>    BEQ.w JL_0_6302
00024FCC <AmiBlitz3.ab3@7281>   CMP.w #$5,D0
00024FD0 <AmiBlitz3.ab3@7282>    BNE.w JL_0_6348
00024FD4 <AmiBlitz3.ab3@7283>   CMP.w #$8,D5
00024FD8 <AmiBlitz3.ab3@7284>    BNE.w illeaerr
00024FDA <AmiBlitz3.ab3@7285>   OR.w D2,D1
00024FDC <AmiBlitz3.ab3@7286>   MOVEQ.l #$09,D5
00024FE0 <AmiBlitz3.ab3@7289>   MOVE.w $2(A0),D6
00024FE4 <AmiBlitz3.ab3@7290>   MOVE.b $6(A0),D7
00024FE8 <AmiBlitz3.ab3@7291>   MOVEM.l D4-D5,-(A7)
00024FEE <AmiBlitz3.ab3@7292>   MOVE.w extraword2,D4
00024FF2 <AmiBlitz3.ab3@7293>    BSR.w doea
00024FF6 <AmiBlitz3.ab3@7294>   MOVEM.l (A7)+,D2-D3
00024FF8 <AmiBlitz3.ab3@7295>   TST.w D3
00024FFC <AmiBlitz3.ab3@7298>     BMI.w JL_0_6392
00025002 <AmiBlitz3.ab3@7299>   MOVE.w extraword,D4
00025006 <AmiBlitz3.ab3@7300>   MOVE.w $4(A0),D6
0002500A <AmiBlitz3.ab3@7301>   MOVE.b $7(A0),D7
00025014 <AmiBlitz3.ab3@7302>   MOVE.l buff2,asmbuff
0002501E <AmiBlitz3.ab3@7303>   MOVE.w asmlen2,asmlen
00025022 <AmiBlitz3.ab3@7304>    BSR.w doea
00025026 <AmiBlitz3.ab3@7305> BRA.w JL_0_63AA
0002502A <AmiBlitz3.ab3@7308>   MOVE.w $4(A0),D0
0002502E <AmiBlitz3.ab3@7309>    BNE.w illeaerr
00025032 <AmiBlitz3.ab3@7310> BRA.w JL_0_63AA
00025036 <AmiBlitz3.ab3@7314>   MOVE.w $2(A0),D0
0002503A <AmiBlitz3.ab3@7315>   OR.w $4(A0),D0
0002503E <AmiBlitz3.ab3@7316>    BNE.w illeaerr
00025042 <AmiBlitz3.ab3@7319>   MOVE.w $8(A0),D0
00025046 <AmiBlitz3.ab3@7320>   ANDI.w #$F000,D0
0002504A <AmiBlitz3.ab3@7321>   CMP.w #-$1000,D0
0002504E <AmiBlitz3.ab3@7322>    BEQ.w JL_0_63D2
00025050 <AmiBlitz3.ab3@7323>   LSR.w #8,D0
00025052 <AmiBlitz3.ab3@7324>   LSR.w #4,D0
00025056 <AmiBlitz3.ab3@7325>   MOVE.w $8(A0),D2
0002505C <AmiBlitz3.ab3@7326>   MOVE.w asmsize,D3
0002505E <AmiBlitz3.ab3@7327>   LSR.w D3,D2
00025062 <AmiBlitz3.ab3@7328>   ANDI.w #$F,D2
00025064 <AmiBlitz3.ab3@7329>   LSL.w D0,D2
00025066 <AmiBlitz3.ab3@7330>   OR.w D2,D1
0002506C <AmiBlitz3.ab3@7333>   CMPA.l destbufferend,A4
00025070 <AmiBlitz3.ab3@7334>    BCS.w JL_0_63E8
00025078 <AmiBlitz3.ab3@7336>   MOVE.w #$FFFF,dontwrite
0002507C <AmiBlitz3.ab3@7337> BRA.w JL_0_63EA
0002507E <AmiBlitz3.ab3@7340>   MOVE.w D1,(A4)
00025084 <AmiBlitz3.ab3@7343>   MOVE.l A1,destpointer
00025086 <AmiBlitz3.ab3@7344> RTS
0002508C <AmiBlitz3.ab3@7348>   MOVE.l destpointer,-(A7)
00025092 <AmiBlitz3.ab3@7349>   MOVE.l A1,destpointer
00025096 <AmiBlitz3.ab3@7350>    BSR.w addoff
0002509C <AmiBlitz3.ab3@7351>   MOVEA.l destpointer,A1
000250A2 <AmiBlitz3.ab3@7352>   MOVE.l (A7)+,destpointer
000250A4 <AmiBlitz3.ab3@7353> RTS
000250A8 <AmiBlitz3.ab3@7357>   MOVEM.l d2-d6,-(a7)
000250AE <AmiBlitz3.ab3@7358>   JSR stripspaces
000250B2 <AmiBlitz3.ab3@7359>   CMP.b #"d",(a5)+
000250B6 <AmiBlitz3.ab3@7360>   BNE noreg
000250B8 <AmiBlitz3.ab3@7361>   MOVE.b (a5)+,d0
000250BC <AmiBlitz3.ab3@7362>   CMP.b #$30,d0
000250C0 <AmiBlitz3.ab3@7363>   BLT noreg
000250C4 <AmiBlitz3.ab3@7364>   CMP.b #$37,d0
000250C8 <AmiBlitz3.ab3@7365>   BGT noreg
000250CC <AmiBlitz3.ab3@7366>   SUB.b #$30,d0
000250CE <AmiBlitz3.ab3@7367>   MOVEQ #0,d3
000250D0 <AmiBlitz3.ab3@7368>   MOVE.b d0,d3                                             ;reg1
000250D2 <AmiBlitz3.ab3@7369>   ASL.l #8,d3
000250D4 <AmiBlitz3.ab3@7370>   ASL.l #8,d3
000250DA <AmiBlitz3.ab3@7371>   JSR stripspaces
000250DE <AmiBlitz3.ab3@7372>   CMP.b #",",(a5)+
000250E2 <AmiBlitz3.ab3@7373>   BNE noreg
000250E8 <AmiBlitz3.ab3@7374>   JSR stripspaces
000250EC <AmiBlitz3.ab3@7375>   CMP.b #"d",(a5)+
000250F0 <AmiBlitz3.ab3@7376>   BNE noreg
000250F2 <AmiBlitz3.ab3@7377>   MOVE.b (a5)+,d0
000250F6 <AmiBlitz3.ab3@7378>   CMP.b #$30,d0
000250FA <AmiBlitz3.ab3@7379>   BLT noreg
000250FE <AmiBlitz3.ab3@7380>   CMP.b #$37,d0
00025102 <AmiBlitz3.ab3@7381>   BGT noreg
00025106 <AmiBlitz3.ab3@7382>   SUB.b #$30,d0
00025108 <AmiBlitz3.ab3@7383>   MOVEQ #0,d4
0002510A <AmiBlitz3.ab3@7384>   MOVE.b d0,d4                                             ;reg2
0002510C <AmiBlitz3.ab3@7385>   ASL.l #8,d4
0002510E <AmiBlitz3.ab3@7386>   ASL.l #4,d4
00025110 <AmiBlitz3.ab3@7387>   OR.b d0,d1
00025112 <AmiBlitz3.ab3@7388>   OR.l d3,d1
00025114 <AmiBlitz3.ab3@7389>   OR.l d4,d1
0002511A <AmiBlitz3.ab3@7390>   JSR writelong
0002511E <AmiBlitz3.ab3@7391>   MOVEM.l (a7)+,d2-d6
00025122 <AmiBlitz3.ab3@7392>   MOVEM.l d1/a1-a3,-(a7)
00025126 <AmiBlitz3.ab3@7393> BRA exit
0002512A <AmiBlitz3.ab3@7397>   MOVEM.l (a7)+,d2-d6
00025130 <AmiBlitz3.ab3@7398>   LEA errtext,a0
00025132 <AmiBlitz3.ab3@7399>   MOVE.l a0,-(a7)
00025138 <AmiBlitz3.ab3@7400> JMP handle_compileerror
0002513E <AmiBlitz3.ab3@7409>   MOVE.w dontwrite,D1
00025142 <AmiBlitz3.ab3@7410>    BNE.w asmfixer__done
0002514A <AmiBlitz3.ab3@7411>   BTST #$7,make_smallestcode
0002514E <AmiBlitz3.ab3@7412>    BEQ.w asmfixer__go
00025152 <AmiBlitz3.ab3@7413>   MOVE.w pass(PC),D1
00025156 <AmiBlitz3.ab3@7414>    BEQ.w asmfixer__done
0002515C <AmiBlitz3.ab3@7417>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025164 <AmiBlitz3.ab3@7418>   MOVE.b #1,curtemplabel
0002516C <AmiBlitz3.ab3@7419>   MOVE.w #$FFFF,constmode
00025172 <AmiBlitz3.ab3@7420>   CLR.w regnum
0002517C <AmiBlitz3.ab3@7421>           MOVE.l #forthstack,forthsp
00025186 <AmiBlitz3.ab3@7422>           MOVE.l #precstack,precsp
0002518A <AmiBlitz3.ab3@7423>    BSR.w prepstack
0002518C <AmiBlitz3.ab3@7426>   MOVE.l A2,-(A7)
00025190 <AmiBlitz3.ab3@7427>    BSR.w chkstop
00025192 <AmiBlitz3.ab3@7428>   MOVEA.l (A7)+,A2
00025196 <AmiBlitz3.ab3@7429>   CMPA.w #$0,A2
0002519A <AmiBlitz3.ab3@7430>    BEQ.w asmfixer__done2
000251A0 <AmiBlitz3.ab3@7431>    CLR.b iee
000251A6 <AmiBlitz3.ab3@7432>   MOVE.l A2,asmbuff
000251AA <AmiBlitz3.ab3@7433>   LEA $10(A2),A5
000251AE <AmiBlitz3.ab3@7434>   TST.b $F(A2)
000251B2 <AmiBlitz3.ab3@7435>    BNE.w asmfixer__skipo
000251B4 <AmiBlitz3.ab3@7436>   MOVEA.l (A5),A5                                          ;pointer to real text
000251BA <AmiBlitz3.ab3@7439>    CLR.w asmtype
000251BE <AmiBlitz3.ab3@7440>    CMP.b #".",(a5)
000251C2 <AmiBlitz3.ab3@7441>    BNE.s asmfixer__skipo_l10
000251C4 <AmiBlitz3.ab3@7442>    MOVE.l a2,-(a7)
000251C6 <AmiBlitz3.ab3@7443>    ADDQ.l #1,a5
000251CC <AmiBlitz3.ab3@7444>    LEA newtypebase,a2
000251D0 <AmiBlitz3.ab3@7445>    BSR getparameter2
000251D4 <AmiBlitz3.ab3@7446>    BEQ.w syntaxerr
000251D8 <AmiBlitz3.ab3@7447>    BSR findtype
000251DC <AmiBlitz3.ab3@7448>    BNE.w notypeerr
000251E0 <AmiBlitz3.ab3@7449>    LEA $4(a2),a2
000251E4 <AmiBlitz3.ab3@7450>    BSR getparameter2
000251E8 <AmiBlitz3.ab3@7451>    BEQ.w syntaxerr
000251EC <AmiBlitz3.ab3@7452>    BSR.w findvariable2
000251F0 <AmiBlitz3.ab3@7453>    BNE.w notypeerr
000251F4 <AmiBlitz3.ab3@7454>    MOVE.w $4(a2),d3
000251F6 <AmiBlitz3.ab3@7455>    EXT.l d3
000251FA <AmiBlitz3.ab3@7456> BRA asmfixer__skipo_l30b
000251FE <AmiBlitz3.ab3@7459>   CMP.b #"\",(a5)
00025202 <AmiBlitz3.ab3@7460>     BNE asmfixer__skipo_l20
00025204 <AmiBlitz3.ab3@7461>     ADDQ.l #1,a5
00025206 <AmiBlitz3.ab3@7462>    MOVE.l a2,-(a7)
00025208 <AmiBlitz3.ab3@7463>    MOVE.l a5,a4
0002520E <AmiBlitz3.ab3@7464>    LEA usedpath,a5
00025212 <AmiBlitz3.ab3@7465>    CMP.b #"*",(a5)
00025216 <AmiBlitz3.ab3@7466>    BNE asmfixer__skipo_lm1
00025218 <AmiBlitz3.ab3@7467>    ADDQ.l #1,a5
0002521C <AmiBlitz3.ab3@7470>    BSR.w getparameter2
00025220 <AmiBlitz3.ab3@7471>    BEQ.w syntaxerr
00025226 <AmiBlitz3.ab3@7472>    LEA varbase,A2
0002522E <AmiBlitz3.ab3@7473>    MOVE.b #1,newvariable
00025232 <AmiBlitz3.ab3@7474>    BSR.w findvariable
00025238 <AmiBlitz3.ab3@7475>    CLR.b newvariable
0002523E <AmiBlitz3.ab3@7476>    CMP.l #-1,d0
00025242 <AmiBlitz3.ab3@7477>    BEQ.w notypeerr
00025244 <AmiBlitz3.ab3@7478>    MOVE.l a4,a5
00025248 <AmiBlitz3.ab3@7479>    MOVE.l $a(a2),a2
0002524C <AmiBlitz3.ab3@7480>    LEA $4(a2),a2
00025250 <AmiBlitz3.ab3@7481>    BSR getparameter2
00025254 <AmiBlitz3.ab3@7482>    BEQ.w syntaxerr
00025258 <AmiBlitz3.ab3@7483>    BSR.w findvariable2
0002525C <AmiBlitz3.ab3@7484>    BNE.w notypeerr
00025260 <AmiBlitz3.ab3@7485>   MOVE.w $4(A2),D3
00025262 <AmiBlitz3.ab3@7486>   EXT.l D3
00025268 <AmiBlitz3.ab3@7489>    CMP.b #"[",-1(a5)
0002526C <AmiBlitz3.ab3@7490>    BNE asmfixer__skipo_l30c
0002526E <AmiBlitz3.ab3@7491>    MOVEQ #0,d0
00025270 <AmiBlitz3.ab3@7492>    MOVE.b (a5)+,d0
00025272 <AmiBlitz3.ab3@7493>    MOVE.l d3,-(a7)
00025274 <AmiBlitz3.ab3@7494>    MOVEQ #0,d3
0002527A <AmiBlitz3.ab3@7495>    JSR atoi
0002527C <AmiBlitz3.ab3@7496>    MOVE.l (a7)+,d1
00025280 <AmiBlitz3.ab3@7497>    MOVE.l $a(a2),a2
00025284 <AmiBlitz3.ab3@7498>    MOVE.w 8(a2),d0
00025286 <AmiBlitz3.ab3@7499>    MULS d0,d3
00025288 <AmiBlitz3.ab3@7500>    ADD.l d1,d3
0002528A <AmiBlitz3.ab3@7503>   MOVE.l (a7)+,a2
0002528E <AmiBlitz3.ab3@7504> BRA asmfixer__oko
00025294 <AmiBlitz3.ab3@7507>   CMP.w #$c,$8(a2)
00025298 <AmiBlitz3.ab3@7508>      BEQ asmfixer__skipo_lf1
0002529E <AmiBlitz3.ab3@7509>      CMP.w #$d,$8(a2)
000252A2 <AmiBlitz3.ab3@7510>      BEQ asmfixer__skipo_lf1
000252A8 <AmiBlitz3.ab3@7513>   JSR AJL_0_BF6E
000252AE <AmiBlitz3.ab3@7516>   MOVEA.l asmbuff,A2
000252B2 <AmiBlitz3.ab3@7517>    BEQ.w asmfixer__oko
000252B6 <AmiBlitz3.ab3@7518>   CMP.w #$28,D0
000252BA <AmiBlitz3.ab3@7519>    BEQ.w asmfixer__oko
000252BE <AmiBlitz3.ab3@7520>   CMP.w #$2C,D0
000252C2 <AmiBlitz3.ab3@7521>    BEQ.w asmfixer__oko
000252C6 <AmiBlitz3.ab3@7522> BRA.w syntaxerr
000252CE <AmiBlitz3.ab3@7525>   MOVE.b #1,iee
000252D2 <AmiBlitz3.ab3@7526> BRA asmfixer__skipo_lf2
000252D6 <AmiBlitz3.ab3@7529>   MOVEA.l $4(A2),A1
000252DA <AmiBlitz3.ab3@7531>   MOVE.w $8(A2),D1                                         ;labelmode
000252DE <AmiBlitz3.ab3@7532>   CMP.w #$5,D1
000252E2 <AmiBlitz3.ab3@7533>    BNE.w asmfixer__notdan
000252E6 <AmiBlitz3.ab3@7536>    BSR.w chkword                                         ;word
000252E8 <AmiBlitz3.ab3@7539>   MOVE.w D3,(A1)
000252EC <AmiBlitz3.ab3@7540> BRA.w asmfixer__next
000252F0 <AmiBlitz3.ab3@7543>   CMP.w #$6,D1
000252F4 <AmiBlitz3.ab3@7544>    BNE.w asmfixer__notdanxi
000252F8 <AmiBlitz3.ab3@7547>    BSR.w chkbyte                                         ;byte
000252FC <AmiBlitz3.ab3@7550>   MOVE.b D3,$1(A1)
00025300 <AmiBlitz3.ab3@7551> BRA.w asmfixer__next
00025304 <AmiBlitz3.ab3@7554>    CMP.w #$11,D1                                           ;byte
00025308 <AmiBlitz3.ab3@7555>    BEQ.w asmfixer__isbyte2
0002530C <AmiBlitz3.ab3@7556>    CMP.w #$c,d1
00025310 <AmiBlitz3.ab3@7557>    BEQ asmfixer__single1
00025314 <AmiBlitz3.ab3@7558>    CMP.w #$d,d1
00025318 <AmiBlitz3.ab3@7559>    BEQ asmfixer__double1
0002531C <AmiBlitz3.ab3@7560>   CMP.w #$7,D1
00025320 <AmiBlitz3.ab3@7561>    BEQ.w asmfixer__word                                    ;word
00025324 <AmiBlitz3.ab3@7562>   CMP.w #$8,D1
00025328 <AmiBlitz3.ab3@7563>    BNE.w asmfixer__notabsl
0002532E <AmiBlitz3.ab3@7566>   MOVE.w asmtype,D1                                        ;long
00025332 <AmiBlitz3.ab3@7567>    BEQ.w asmfixer__notpcrel
00025336 <AmiBlitz3.ab3@7568>      BSR.w asmoff
00025338 <AmiBlitz3.ab3@7571>   MOVE.l D3,(A1)
0002533C <AmiBlitz3.ab3@7572> BRA.w asmfixer__next
00025342 <AmiBlitz3.ab3@7576>   fmove.s fp0,0(a1)
00025346 <AmiBlitz3.ab3@7577> BRA.w asmfixer__next
0002534C <AmiBlitz3.ab3@7581>   fmove.d fp0,0(a1)
00025350 <AmiBlitz3.ab3@7582> BRA.w asmfixer__next
00025354 <AmiBlitz3.ab3@7586>   CMP.w #$9,D1
00025358 <AmiBlitz3.ab3@7587>    BNE.w asmfixer__notdpc
0002535A <AmiBlitz3.ab3@7588>   SUB.l A1,D3                                              ;branchword
0002535E <AmiBlitz3.ab3@7589>    BSR.w chkword
00025360 <AmiBlitz3.ab3@7590>   MOVE.w D3,(A1)
00025364 <AmiBlitz3.ab3@7591> BRA.w asmfixer__next
00025368 <AmiBlitz3.ab3@7595>   CMP.w #$A,D1
0002536C <AmiBlitz3.ab3@7596>    BNE.w asmfixer__imm
0002536E <AmiBlitz3.ab3@7597>   SUB.l A1,D3                                              ;branchbyte
00025372 <AmiBlitz3.ab3@7598> BRA.w asmfixer__isbyte
00025376 <AmiBlitz3.ab3@7602>   CMP.w #$11,d1
0002537A <AmiBlitz3.ab3@7603>   BLE asmfixer__imm_org
0002537C <AmiBlitz3.ab3@7604>   MOVE.l a3,-(a7)
00025382 <AmiBlitz3.ab3@7605>   LEA pluginbase,a3
00025386 <AmiBlitz3.ab3@7606>   MOVE.l 8(a2),a0
00025388 <AmiBlitz3.ab3@7607>   JSR (a0)                                                 ;hook
0002538A <AmiBlitz3.ab3@7608>   MOVE.l (a7)+,a3
0002538E <AmiBlitz3.ab3@7609> BRA asmfixer__next
00025392 <AmiBlitz3.ab3@7612>   MOVE.w $A(A2),D0
00025396 <AmiBlitz3.ab3@7613>    BEQ.w asmfixer__noflag
0002539A <AmiBlitz3.ab3@7614>   CMP.w #$1,D0
0002539E <AmiBlitz3.ab3@7615>    BEQ.w asmfixer__tocount
000253A2 <AmiBlitz3.ab3@7616>   CMP.w #$3,D0
000253A6 <AmiBlitz3.ab3@7617>    BEQ.w asmfixer__tomoveq
000253AA <AmiBlitz3.ab3@7618>   CMP.w #$4,D0
000253AE <AmiBlitz3.ab3@7619>    BEQ.w asmfixer__totrap
000253B2 <AmiBlitz3.ab3@7622>   CMP.w #$B,D1                                             ;long
000253B6 <AmiBlitz3.ab3@7623>    BEQ.w asmfixer__isabsl
000253BA <AmiBlitz3.ab3@7624> BRA asmfixer__word2                                              ;word
000253C0 <AmiBlitz3.ab3@7627>   CMP.l #$F,D3
000253C4 <AmiBlitz3.ab3@7628>    BHI.w illtraperr
000253C6 <AmiBlitz3.ab3@7629>   OR.b D3,-(A1)
000253CA <AmiBlitz3.ab3@7630> BRA.w asmfixer__next
000253D0 <AmiBlitz3.ab3@7633>   CMP.l #$8,D3
000253D4 <AmiBlitz3.ab3@7634>    BHI.w illimmerr
000253D6 <AmiBlitz3.ab3@7635>   TST.l D3
000253DA <AmiBlitz3.ab3@7636>    BEQ.w illimmerr
000253DE <AmiBlitz3.ab3@7637>   ANDI.w #$7,D3
000253E0 <AmiBlitz3.ab3@7638>   LSL.w #8,D3
000253E2 <AmiBlitz3.ab3@7639>   LSL.w #1,D3
000253E4 <AmiBlitz3.ab3@7640>   OR.w D3,-(A1)
000253E8 <AmiBlitz3.ab3@7641> BRA.w asmfixer__next
000253EC <AmiBlitz3.ab3@7644>    BSR.w chkbyte
000253EE <AmiBlitz3.ab3@7645>   MOVE.b D3,-(A1)
000253F0 <AmiBlitz3.ab3@7648>   MOVEA.l (A2),A2
000253F4 <AmiBlitz3.ab3@7649> BRA.w asmfixer__loop
000253FA <AmiBlitz3.ab3@7652>   CLR.w constmode
00025400 <AmiBlitz3.ab3@7655>   CLR.b curtemplabel
00025402 <AmiBlitz3.ab3@7656> RTS
00025404 <AmiBlitz3.ab3@7665>   BTST D3,D6
00025408 <AmiBlitz3.ab3@7666>    BEQ.w illeaerr
0002540C <AmiBlitz3.ab3@7667>    BSR.w makemode
00025410 <AmiBlitz3.ab3@7668>   CMP.w #$7,D3
00025414 <AmiBlitz3.ab3@7669>    BCS.w doea__skip
00025416 <AmiBlitz3.ab3@7670>   MOVE.w D3,D2
00025418 <AmiBlitz3.ab3@7671>   SUBQ.w #7,D2
0002541C <AmiBlitz3.ab3@7672>   CMP.w #$5,D2
00025420 <AmiBlitz3.ab3@7673>    BCS.w doea__skip0
00025422 <AmiBlitz3.ab3@7674>   MOVEQ.l #$04,D2
00025424 <AmiBlitz3.ab3@7677>   MOVEQ.l #$07,D3
00025426 <AmiBlitz3.ab3@7680>   MOVE.b D7,D0
0002542A <AmiBlitz3.ab3@7681>   ANDI.w #$F,D0
0002542E <AmiBlitz3.ab3@7682>   CMP.w #$F,D0
00025432 <AmiBlitz3.ab3@7683>    BEQ.w doea__skip2
00025434 <AmiBlitz3.ab3@7684>   LSL.w D0,D3
00025436 <AmiBlitz3.ab3@7685>   OR.w D3,D1
00025438 <AmiBlitz3.ab3@7688>   LSR.w #4,D7
0002543C <AmiBlitz3.ab3@7689>   ANDI.w #$F,D7
00025440 <AmiBlitz3.ab3@7690>   CMP.w #$F,D7
00025444 <AmiBlitz3.ab3@7691>    BEQ.w doea__skip3
00025446 <AmiBlitz3.ab3@7692>   LSL.w D7,D2
00025448 <AmiBlitz3.ab3@7693>   OR.w D2,D1
0002544A <AmiBlitz3.ab3@7696> RTS
00025450 <AmiBlitz3.ab3@7700>   CMP.l #$7F,D3
00025454 <AmiBlitz3.ab3@7701>    BGT.w illdiserr
0002545A <AmiBlitz3.ab3@7702>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
0002545E <AmiBlitz3.ab3@7703>    BLT.w illdiserr
00025460 <AmiBlitz3.ab3@7704> RTS
00025466 <AmiBlitz3.ab3@7708>   CMP.l #$7fff,D3
0002546A <AmiBlitz3.ab3@7709>    BGT.w illdiserr
00025470 <AmiBlitz3.ab3@7710>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025474 <AmiBlitz3.ab3@7711>    BLT.w illdiserr
00025476 <AmiBlitz3.ab3@7712> RTS
00025478 <AmiBlitz3.ab3@7717>   MOVE.b (a5)+,d0
0002547A <AmiBlitz3.ab3@7718>   CMP.b d1,d0
0002547E <AmiBlitz3.ab3@7719>   BEQ 'll10
00025480 <AmiBlitz3.ab3@7720>   TST.b d0
00025484 <AmiBlitz3.ab3@7721>   BNE 'll20
00025486 <AmiBlitz3.ab3@7724>   SUBQ #1,a5
00025488 <AmiBlitz3.ab3@7725> RTS
0002548A <AmiBlitz3.ab3@7730>   MOVE.b (a5)+,d0
0002548E <AmiBlitz3.ab3@7731>   CMP.b #",",d0
00025492 <AmiBlitz3.ab3@7732>   BEQ 'll10
00025496 <AmiBlitz3.ab3@7733>   CMP.b #";",d0
0002549A <AmiBlitz3.ab3@7734>   BEQ 'll10
0002549E <AmiBlitz3.ab3@7735>  CMP.b #":",d0
000254A2 <AmiBlitz3.ab3@7736>   BEQ 'll10
000254A4 <AmiBlitz3.ab3@7739>   TST.b d0
000254A8 <AmiBlitz3.ab3@7740>   BNE 'll20
000254AA <AmiBlitz3.ab3@7743>   SUBQ #1,a5
000254AC <AmiBlitz3.ab3@7744> RTS
000254AE <AmiBlitz3.ab3@7748>   ADD.l a2,d1
000254B4 <AmiBlitz3.ab3@7749>   LEA tempspace,a1
000254B6 <AmiBlitz3.ab3@7750>   MOVE.l d1,a0
000254B8 <AmiBlitz3.ab3@7753>   MOVE.b (a0)+,(a1)+
000254BC <AmiBlitz3.ab3@7754>   BNE.s 'l10
000254BE <AmiBlitz3.ab3@7755>   SUBQ.l #1,a0
000254C0 <AmiBlitz3.ab3@7756>   SUBQ.l #1,a1
000254C2 <AmiBlitz3.ab3@7759>   MOVE.b (a5)+,(a1)+
000254C6 <AmiBlitz3.ab3@7760>   BNE.s 'l20
000254C8 <AmiBlitz3.ab3@7761>   CLR.b (a1)
000254CE <AmiBlitz3.ab3@7762>   LEA tempspace,a5
000254D0 <AmiBlitz3.ab3@7763> RTS
000254D4 <AmiBlitz3.ab3@7767>   MOVEM.l D1-D2/A0,-(A7)
000254D6 <AmiBlitz3.ab3@7768>   MOVE.l d0,d2
000254D8 <AmiBlitz3.ab3@7769>   MOVEQ #0,d1
000254DA <AmiBlitz3.ab3@7770>   MOVE.l a5,a4
000254DC <AmiBlitz3.ab3@7773>   ADDQ.l #1,d1
000254DE <AmiBlitz3.ab3@7774>   MOVE.b (a5)+,d0
000254E2 <AmiBlitz3.ab3@7775>   CMP.b #",",d0
000254E6 <AmiBlitz3.ab3@7776>   BEQ 'll10
000254EA <AmiBlitz3.ab3@7777>   CMP.b #";",d0
000254EE <AmiBlitz3.ab3@7778>   BEQ 'll10
000254F2 <AmiBlitz3.ab3@7779>   CMP.b #":",d0
000254F6 <AmiBlitz3.ab3@7780>   BEQ 'll10
000254FA <AmiBlitz3.ab3@7781>   CMP.b #"(",d0
000254FE <AmiBlitz3.ab3@7782>   BEQ 'll10
00025500 <AmiBlitz3.ab3@7783>   TST.b d0
00025504 <AmiBlitz3.ab3@7784>   BNE 'll20
00025506 <AmiBlitz3.ab3@7787>   SUBQ #1,a5
0002550A <AmiBlitz3.ab3@7788>   CMP.b #"'",(a4)
0002550E <AmiBlitz3.ab3@7789>   BEQ 'llocal
00025514 <AmiBlitz3.ab3@7790>   TST.w inmacro
00025518 <AmiBlitz3.ab3@7791>   BNE 'lmacro
0002551A <AmiBlitz3.ab3@7792>   MOVEQ.l #$14+4,D0
0002551C <AmiBlitz3.ab3@7793>   ADD.l d1,d0
0002551E <AmiBlitz3.ab3@7794>   MOVE.l d1,-(a7)
00025520 <AmiBlitz3.ab3@7795>   MOVEQ.l #$01,D1
00025526 <AmiBlitz3.ab3@7796>   MOVEA.l _execbase,A6
0002552C <AmiBlitz3.ab3@7797>   MOVE.l mempool2,a0
00025530 <AmiBlitz3.ab3@7798>   JSR _AllocPooled(a6)
00025532 <AmiBlitz3.ab3@7800>   MOVE.l (a7)+,d1
00025534 <AmiBlitz3.ab3@7801>   TST.l d0
00025538 <AmiBlitz3.ab3@7802>   BEQ nomemory
0002553A <AmiBlitz3.ab3@7803>   MOVEA.l D0,A0
00025542 <AmiBlitz3.ab3@7805>   MOVE.w linenumat+2,$A(A0)
00025548 <AmiBlitz3.ab3@7807>   MOVE.l templabel,(A0)
0002554E <AmiBlitz3.ab3@7808>   MOVE.l A0,templabel
00025556 <AmiBlitz3.ab3@7809>   MOVE.l destpointer,$4(A0)
0002555A <AmiBlitz3.ab3@7810>   MOVE.l d2,$8(A0)
0002555E <AmiBlitz3.ab3@7811>   LEA $E(A0),A0
00025562 <AmiBlitz3.ab3@7812>   MOVE.b #$14,(A0)+
00025564 <AmiBlitz3.ab3@7813>   CLR.b (a0)+
00025566 <AmiBlitz3.ab3@7815>   MOVE.l a0,d2
00025568 <AmiBlitz3.ab3@7816>   ADDQ.l #4,d2
0002556A <AmiBlitz3.ab3@7817>   MOVE.l d2,(a0)+
0002556C <AmiBlitz3.ab3@7820>   MOVE.b (a4)+,(a0)+
0002556E <AmiBlitz3.ab3@7821>   SUBQ.l #1,d1
00025572 <AmiBlitz3.ab3@7822>   BNE 'lc1
00025574 <AmiBlitz3.ab3@7823>   CLR.b (a0)+
0002557A <AmiBlitz3.ab3@7824>   MOVE.w linenumat,(a0)
0002557E <AmiBlitz3.ab3@7825>   MOVEM.l (A7)+,D1-D2/A0
00025580 <AmiBlitz3.ab3@7826> RTS
00025582 <AmiBlitz3.ab3@7829>   MOVEQ.l #$10+2,D0
00025584 <AmiBlitz3.ab3@7830>   ADD.l d1,d0
00025588 <AmiBlitz3.ab3@7831>   MOVEM.l a4/d3,-(a7)
0002558A <AmiBlitz3.ab3@7832>   MOVE.l d1,d3
0002558C <AmiBlitz3.ab3@7833>   MOVEQ.l #$01,D1
00025592 <AmiBlitz3.ab3@7834>   MOVEA.l _execbase,A6
00025598 <AmiBlitz3.ab3@7835>   MOVE.l mempool2,a0
0002559C <AmiBlitz3.ab3@7836>   JSR _AllocPooled(a6)
0002559E <AmiBlitz3.ab3@7838>   TST.l d0
000255A2 <AmiBlitz3.ab3@7839>   BEQ nomemory
000255A4 <AmiBlitz3.ab3@7840>   MOVEA.l D0,A0
000255AC <AmiBlitz3.ab3@7843>   MOVE.w linenumat+2,$C(A0)
000255B2 <AmiBlitz3.ab3@7844>   MOVE.l templabel,(A0)
000255B8 <AmiBlitz3.ab3@7845>   MOVE.l A0,templabel
000255C0 <AmiBlitz3.ab3@7846>   MOVE.l destpointer,$4(A0)
000255C4 <AmiBlitz3.ab3@7847>   MOVE.l d2,$8(A0)
000255C8 <AmiBlitz3.ab3@7848>   LEA $E(A0),A0
000255CA <AmiBlitz3.ab3@7849>   MOVE.b d3,(A0)+
000255D0 <AmiBlitz3.ab3@7850>   ADD.b #$10,-1(a0)
000255D4 <AmiBlitz3.ab3@7851>   MOVE.b #$1,(a0)+
000255D6 <AmiBlitz3.ab3@7852>   SUBQ.w #1,d3
000255D8 <AmiBlitz3.ab3@7855>   MOVE.b (a4)+,(a0)+
000255DA <AmiBlitz3.ab3@7856>   SUBQ.l #1,d3
000255DE <AmiBlitz3.ab3@7857>   BNE.s 'lm2
000255E0 <AmiBlitz3.ab3@7858>   CLR.b (a0)+
000255E6 <AmiBlitz3.ab3@7859>   MOVE.w linenumat,(a0)
000255EA <AmiBlitz3.ab3@7860>   MOVEM.l (a7)+,d3/a4
000255EE <AmiBlitz3.ab3@7861>   MOVEM.l (A7)+,D1-D2/A0
000255F0 <AmiBlitz3.ab3@7862> RTS
000255F6 <AmiBlitz3.ab3@7865>   LEA lastgloballabel,a1
000255F8 <AmiBlitz3.ab3@7868>   ADDQ.l #1,d1
000255FA <AmiBlitz3.ab3@7869>   TST.b (a1)+
000255FE <AmiBlitz3.ab3@7870>   BNE.s 'll11
00025600 <AmiBlitz3.ab3@7871>   MOVEQ.l #$10+2,D0
00025602 <AmiBlitz3.ab3@7872>   ADD.l d1,d0
00025606 <AmiBlitz3.ab3@7873>   MOVEM.l a4/d3,-(a7)
00025608 <AmiBlitz3.ab3@7874>   MOVE.l d1,d3
0002560A <AmiBlitz3.ab3@7875>   MOVEQ.l #$01,D1
00025610 <AmiBlitz3.ab3@7876>   MOVEA.l _execbase,A6
00025616 <AmiBlitz3.ab3@7877>   MOVE.l mempool2,a0
0002561A <AmiBlitz3.ab3@7878>   JSR _AllocPooled(a6)
0002561C <AmiBlitz3.ab3@7880>   TST.l d0
00025620 <AmiBlitz3.ab3@7881>   BEQ nomemory
00025622 <AmiBlitz3.ab3@7882>   MOVEA.l D0,A0
0002562A <AmiBlitz3.ab3@7885>   MOVE.w linenumat+2,$C(A0)
00025630 <AmiBlitz3.ab3@7886>   MOVE.l templabel,(A0)
00025636 <AmiBlitz3.ab3@7887>   MOVE.l A0,templabel
0002563E <AmiBlitz3.ab3@7888>   MOVE.l destpointer,$4(A0)
00025642 <AmiBlitz3.ab3@7889>   MOVE.l d2,$8(A0)
00025646 <AmiBlitz3.ab3@7890>   LEA $E(A0),A0
00025648 <AmiBlitz3.ab3@7891>   MOVE.b d3,(A0)+
0002564E <AmiBlitz3.ab3@7892>   ADD.b #$10,-1(a0)
00025652 <AmiBlitz3.ab3@7893>   MOVE.b #$1,(a0)+
00025654 <AmiBlitz3.ab3@7894>   SUBQ.w #1,d3
0002565A <AmiBlitz3.ab3@7895>   LEA lastgloballabel,a1
0002565C <AmiBlitz3.ab3@7898>   SUBQ.l #1,d3
0002565E <AmiBlitz3.ab3@7899>   MOVE.b (a1)+,(a0)+
00025662 <AmiBlitz3.ab3@7900>   BNE.s 'lm3
00025664 <AmiBlitz3.ab3@7901>   SUBQ.l #1,a0
00025666 <AmiBlitz3.ab3@7904>   MOVE.b (a4)+,(a0)+
00025668 <AmiBlitz3.ab3@7905>   SUBQ.l #1,d3
0002566C <AmiBlitz3.ab3@7906>   BNE.s 'lm1
0002566E <AmiBlitz3.ab3@7907>   CLR.b (a0)+
00025674 <AmiBlitz3.ab3@7908>   MOVE.w linenumat,(a0)
00025678 <AmiBlitz3.ab3@7909>   MOVEM.l (a7)+,d3/a4
0002567C <AmiBlitz3.ab3@7910>   MOVEM.l (A7)+,D1-D2/A0
0002567E <AmiBlitz3.ab3@7911> RTS
000256A8 <AmiBlitz3.ab3@7915>   !basic
0002570A <AmiBlitz3.ab3@7916>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
0002571C <AmiBlitz3.ab3@7917>   loop Delay_ 1
00025722 <AmiBlitz3.ab3@7918> Goto loop
00025726 <AmiBlitz3.ab3@7922>   MOVEM.l D0-D2/A0,-(A7)
0002572A <AmiBlitz3.ab3@7923>   MOVE.w $E(A0),-(A7)
0002572E <AmiBlitz3.ab3@7924>    BPL.w insasm__ok
00025730 <AmiBlitz3.ab3@7925>   CLR.w (A7)
00025732 <AmiBlitz3.ab3@7928>   MOVE.l A1,-(A7)
00025734 <AmiBlitz3.ab3@7929>   MOVEQ.l #$10+2,D0
0002573A <AmiBlitz3.ab3@7930>   ADD.w asmlen,D0
0002573C <AmiBlitz3.ab3@7931>   MOVE.w D0,D2
0002573E <AmiBlitz3.ab3@7932>   MOVEQ.l #$01,D1
00025744 <AmiBlitz3.ab3@7933>   MOVEA.l _execbase,A6
0002574A <AmiBlitz3.ab3@7934>   MOVE.l mempool2,a0
0002574E <AmiBlitz3.ab3@7935>   JSR _AllocPooled(a6)
00025750 <AmiBlitz3.ab3@7937>   MOVEA.l D0,A0
00025758 <AmiBlitz3.ab3@7940>   MOVE.w linenumat+2,$C(A0)
0002575E <AmiBlitz3.ab3@7941>   MOVE.l templabel,(A0)
00025764 <AmiBlitz3.ab3@7942>   MOVE.l A0,templabel
00025768 <AmiBlitz3.ab3@7943>   MOVE.l (A7),$4(A0)
0002576C <AmiBlitz3.ab3@7944>   MOVE.w d3,$8(A0)
00025772 <AmiBlitz3.ab3@7945>   MOVE.w $4(A7),$A(A0)
00025776 <AmiBlitz3.ab3@7946>   LEA $E(A0),A0
00025778 <AmiBlitz3.ab3@7947>   MOVE.b D2,(A0)+                                           ;length
0002577E <AmiBlitz3.ab3@7948>   MOVEA.l asmbuff,A1
00025780 <AmiBlitz3.ab3@7949>   ADDQ.w #1,A1
00025782 <AmiBlitz3.ab3@7950>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025786 <AmiBlitz3.ab3@7951>    BNE.w insasm__loop
00025788 <AmiBlitz3.ab3@7952>   MOVE.l (A1)+,(A0)+
0002578E <AmiBlitz3.ab3@7953>   MOVE.w linenumat,(a0)
00025792 <AmiBlitz3.ab3@7954> BRA.w insasm__loopdone
00025794 <AmiBlitz3.ab3@7957>    MOVE.b (A1)+,(A0)+
00025798 <AmiBlitz3.ab3@7958>    BNE.w insasm__loop
0002579E <AmiBlitz3.ab3@7959>    MOVE.w linenumat,(a0)
000257A0 <AmiBlitz3.ab3@7962>   MOVEA.l (A7)+,A1
000257A2 <AmiBlitz3.ab3@7963>   ADDQ.w #2,A7
000257A6 <AmiBlitz3.ab3@7964>   MOVEM.l (A7)+,D0-D2/A0
000257A8 <AmiBlitz3.ab3@7965> RTS
000257AC <AmiBlitz3.ab3@7969>   CMP.w #$5,D3
000257B0 <AmiBlitz3.ab3@7970>    BCS.w makemode__done
000257B4 <AmiBlitz3.ab3@7971>   CMP.w #$B,D3
000257B8 <AmiBlitz3.ab3@7972>    BHI.w makemode__done2
000257BC <AmiBlitz3.ab3@7973>    BEQ.w makemode__imm
000257C0 <AmiBlitz3.ab3@7974>    BSR.w insasm
000257C4 <AmiBlitz3.ab3@7975>   CMP.w #$5,D3
000257C8 <AmiBlitz3.ab3@7976>    BEQ.w makemode__word
000257CC <AmiBlitz3.ab3@7977>   CMP.w #$6,D3
000257D0 <AmiBlitz3.ab3@7978>    BEQ.w makemode__dxi
000257D4 <AmiBlitz3.ab3@7979>   CMP.w #$7,D3
000257D8 <AmiBlitz3.ab3@7980>    BEQ.w makemode__word
000257DC <AmiBlitz3.ab3@7981>   CMP.w #$8,D3
000257E0 <AmiBlitz3.ab3@7982>    BEQ.w makemode__long
000257E4 <AmiBlitz3.ab3@7983>   CMP.w #$9,D3
000257E8 <AmiBlitz3.ab3@7984>    BEQ.w makemode__word
000257EE <AmiBlitz3.ab3@7988>   CMPA.l destbufferend,A1
000257F2 <AmiBlitz3.ab3@7989>    BCS.w makemode__ok7
000257F4 <AmiBlitz3.ab3@7990>   ADDQ.w #2,A1
000257F6 <AmiBlitz3.ab3@7991> RTS
000257F8 <AmiBlitz3.ab3@7994>   MOVE.w D4,(A1)+
000257FA <AmiBlitz3.ab3@7995> RTS
00025802 <AmiBlitz3.ab3@7998>   CMPI.w #$8,asmsize
00025806 <AmiBlitz3.ab3@7999>    BCC.w makemode__immlong
00025808 <AmiBlitz3.ab3@8000>   MOVEQ.l #$10,D3
0002580C <AmiBlitz3.ab3@8001>    BSR.w insasm
0002580E <AmiBlitz3.ab3@8002>   MOVEQ.l #$0B,D3
00025812 <AmiBlitz3.ab3@8003> BRA.w makemode__word
00025816 <AmiBlitz3.ab3@8006>   BSR.w insasm
00025818 <AmiBlitz3.ab3@8009>   ADDQ.w #2,A1
0002581A <AmiBlitz3.ab3@8012>   ADDQ.w #2,A1
0002581C <AmiBlitz3.ab3@8013> RTS
00025820 <AmiBlitz3.ab3@8016>   CMP.w #$F,D3
00025824 <AmiBlitz3.ab3@8017>    BNE.w makemode__done
0002582A <AmiBlitz3.ab3@8018>   CMPA.l destbufferend,A1
0002582E <AmiBlitz3.ab3@8019>    BCS.w makemode__ok3
00025830 <AmiBlitz3.ab3@8020>   ADDQ.w #2,A1
00025832 <AmiBlitz3.ab3@8021>   ADDQ.w #4,A7
00025834 <AmiBlitz3.ab3@8022> RTS
00025836 <AmiBlitz3.ab3@8025>   MOVE.w D2,(A1)+
00025838 <AmiBlitz3.ab3@8026>   ADDQ.w #4,A7
0002583A <AmiBlitz3.ab3@8029> RTS
0002583E <AmiBlitz3.ab3@8033>   BSR.w storeloc
00025848 <AmiBlitz3.ab3@8034>   MOVE.l linenumat,oldline
0002584A <AmiBlitz3.ab3@8035>   MOVEQ.l #$00,D1
0002584E <AmiBlitz3.ab3@8036>    BSR.w get1bytemain
00025852 <AmiBlitz3.ab3@8037>    BEQ.w JL_0_676E
00025854 <AmiBlitz3.ab3@8038>   MOVEQ.l #$00,D3
00025858 <AmiBlitz3.ab3@8039> BRA.w JL_0_6726
0002585C <AmiBlitz3.ab3@8042>    BSR.w get1bytemain
00025860 <AmiBlitz3.ab3@8043>    BNE.w JL_0_671C
00025862 <AmiBlitz3.ab3@8046>   TST.w D3
00025866 <AmiBlitz3.ab3@8047>    BNE.w brackets_                                         ;syntax error brackets
0002586A <AmiBlitz3.ab3@8048> BRA.w JL_0_676C
00025870 <AmiBlitz3.ab3@8051>    MOVE.w instringon,D4
00025874 <AmiBlitz3.ab3@8053>      BEQ JL_0_6726
00025876 <AmiBlitz3.ab3@8056>     MOVEQ #0,d0
00025878 <AmiBlitz3.ab3@8057>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002587E <AmiBlitz3.ab3@8058>      MOVE.w d0,lastchar
00025882 <AmiBlitz3.ab3@8059>      BEQ ready
00025886 <AmiBlitz3.ab3@8060>      CMP.b #$22,d0
0002588A <AmiBlitz3.ab3@8061>      BNE 'l1
00025890 <AmiBlitz3.ab3@8062>      NOT.w instringon
00025894 <AmiBlitz3.ab3@8063> BRA JL_0_670A
00025898 <AmiBlitz3.ab3@8066>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002589C <AmiBlitz3.ab3@8067>            BNE 'l10
000258A0 <AmiBlitz3.ab3@8068>            CMP.b #"@",(a5)
000258A4 <AmiBlitz3.ab3@8069>            BNE 'l10
000258AA <AmiBlitz3.ab3@8072>            TST.w ininclude
000258AE <AmiBlitz3.ab3@8073>            BNE 'inc
000258B4 <AmiBlitz3.ab3@8074>            MOVE.l sourceline3,a5
000258BA <AmiBlitz3.ab3@8075>            CMP.l #0,a5
000258BE <AmiBlitz3.ab3@8076>            BNE 'l11t
000258C4 <AmiBlitz3.ab3@8077>            MOVEA.l sourceline,A5
000258C6 <AmiBlitz3.ab3@8080>            MOVEA.l (A5),A5
000258CC <AmiBlitz3.ab3@8081>            CMP.l #0,a5
000258D0 <AmiBlitz3.ab3@8082>            BEQ JL_0_676C
000258D6 <AmiBlitz3.ab3@8083>            MOVE.l a5,sourceline3
000258DA <AmiBlitz3.ab3@8084>            LEA $9(A5),A5
000258DE <AmiBlitz3.ab3@8085> BRA 'l11
000258E0 <AmiBlitz3.ab3@8088>            ADDQ.l #1,a5
000258E2 <AmiBlitz3.ab3@8089>            TST.b (a5)
000258E6 <AmiBlitz3.ab3@8090>            BNE 'inc
000258E8 <AmiBlitz3.ab3@8094>            ADDQ.l #1,a5
000258EA <AmiBlitz3.ab3@8095>            TST.b (a5)
000258EE <AmiBlitz3.ab3@8096>            BEQ illeolerr
000258F0 <AmiBlitz3.ab3@8097>            MOVE.l a5,-(a7)
000258F4 <AmiBlitz3.ab3@8100>       CMP.b #" ",(a5)+
000258F8 <AmiBlitz3.ab3@8101>       BEQ 'l110
000258FE <AmiBlitz3.ab3@8102>        CMP.b #";",-1(a5)
00025900 <AmiBlitz3.ab3@8103>        MOVE.l (a7)+,a5
00025904 <AmiBlitz3.ab3@8104>        BEQ 'l111
00025908 <AmiBlitz3.ab3@8105> BRA JL_0_670A
0002590C <AmiBlitz3.ab3@8108>    CMP.w #$29,D0
00025910 <AmiBlitz3.ab3@8109>    BNE.w JL_0_673A
00025912 <AmiBlitz3.ab3@8110>   TST.w D3
00025916 <AmiBlitz3.ab3@8111>    BEQ.w JL_0_676C
00025918 <AmiBlitz3.ab3@8114>   SUBQ.w #1,D3
0002591C <AmiBlitz3.ab3@8115> BRA.w JL_0_670A
00025920 <AmiBlitz3.ab3@8118>    CMP.w #$7D,D0
00025924 <AmiBlitz3.ab3@8119>    BEQ.w JL_0_6734
00025928 <AmiBlitz3.ab3@8120>   CMP.w #$28,D0
0002592C <AmiBlitz3.ab3@8121>    BNE.w JL_0_6750
0002592E <AmiBlitz3.ab3@8124>    ADDQ.w #1,D3
00025932 <AmiBlitz3.ab3@8125> BRA.w JL_0_670A
00025936 <AmiBlitz3.ab3@8128>   CMP.w #$7B,D0
0002593A <AmiBlitz3.ab3@8129>    BEQ.w JL_0_674A
0002593E <AmiBlitz3.ab3@8130>   CMP.w #$2C,D0
00025942 <AmiBlitz3.ab3@8131>    BNE.w JL_0_670A
00025944 <AmiBlitz3.ab3@8132>   TST.w D3
00025948 <AmiBlitz3.ab3@8133>    BNE.w JL_0_670A
0002594A <AmiBlitz3.ab3@8134>   ADDQ.w #1,D1
0002594E <AmiBlitz3.ab3@8135> BRA.w JL_0_670A
00025950 <AmiBlitz3.ab3@8138>   ADDQ.w #1,D1
00025956 <AmiBlitz3.ab3@8141>   CLR.l sourceline3
00025960 <AmiBlitz3.ab3@8142>   MOVE.l oldline,linenumat
00025964 <AmiBlitz3.ab3@8143> BRA.w resloc
0002596A <AmiBlitz3.ab3@8147>    CLR.w numreps
0002596C <AmiBlitz3.ab3@8148>   MOVE.w D1,D0
00025970 <AmiBlitz3.ab3@8149>   ANDI.w #$FF00,D0
00025974 <AmiBlitz3.ab3@8150>    BEQ.w fetchlibps__noreps
00025976 <AmiBlitz3.ab3@8151>   LSR.w #8,D0
00025978 <AmiBlitz3.ab3@8152>   LSR.w #4,D0
0002597C <AmiBlitz3.ab3@8153>    BEQ.w fetchlibps__skip
0002597E <AmiBlitz3.ab3@8154>   SUB.b D0,D1
00025988 <AmiBlitz3.ab3@8155>    MOVE.w regnum,regnumfunc
0002598E <AmiBlitz3.ab3@8156>    MOVE.b funcparloop,-(a7)
00025996 <AmiBlitz3.ab3@8157>    MOVE.b #0,funcparloop
0002599C <AmiBlitz3.ab3@8158>    MOVE.l leftsidetype,-(a7)
000259A2 <AmiBlitz3.ab3@8159>    MOVE.l rightsidetype,-(a7)
000259A8 <AmiBlitz3.ab3@8160>    CLR.l leftsidetype
000259AE <AmiBlitz3.ab3@8161>    CLR.l rightsidetype
000259B4 <AmiBlitz3.ab3@8162>    MOVE.b blitzparloop,-(a7)
000259BC <AmiBlitz3.ab3@8163>    MOVE.b #1,blitzparloop
000259C0 <AmiBlitz3.ab3@8164>    BSR.w fetchpees2
000259C6 <AmiBlitz3.ab3@8165>    MOVE.b (a7)+,blitzparloop
000259CC <AmiBlitz3.ab3@8166>    MOVE.l (a7)+,rightsidetype
000259D2 <AmiBlitz3.ab3@8167>    MOVE.l (a7)+,leftsidetype
000259D8 <AmiBlitz3.ab3@8168>    MOVE.b (a7)+,funcparloop
000259DC <AmiBlitz3.ab3@8169>   CMP.w #$2C,D0
000259E0 <AmiBlitz3.ab3@8170>    BNE.w syntaxerr
000259E2 <AmiBlitz3.ab3@8173>   MOVE.w D1,D2
000259E4 <AmiBlitz3.ab3@8174>   LSR.w #8,D2
000259E8 <AmiBlitz3.ab3@8175>   ANDI.w #$7,D2
000259EA <AmiBlitz3.ab3@8178>    CMP.b D2,D1
000259EE <AmiBlitz3.ab3@8179>    BCS.w fetchlibps__repsdone
000259F0 <AmiBlitz3.ab3@8180>   SUB.b D2,D1
000259F4 <AmiBlitz3.ab3@8181>   MOVEM.l D2/A2,-(A7)
000259F6 <AmiBlitz3.ab3@8182>   MOVE.w D2,D0
000259FC <AmiBlitz3.ab3@8183>   MOVE.b funcparloop,-(a7)
00025A04 <AmiBlitz3.ab3@8184>   MOVE.b #0,funcparloop
00025A0A <AmiBlitz3.ab3@8185>   MOVE.l leftsidetype,-(a7)
00025A10 <AmiBlitz3.ab3@8186>   MOVE.l rightsidetype,-(a7)
00025A16 <AmiBlitz3.ab3@8187>   CLR.l leftsidetype
00025A1C <AmiBlitz3.ab3@8188>   CLR.l rightsidetype
00025A22 <AmiBlitz3.ab3@8189>   MOVE.b blitzparloop,-(a7)
00025A2A <AmiBlitz3.ab3@8190>   MOVE.b #1,blitzparloop
00025A2E <AmiBlitz3.ab3@8191>   BSR.w fetchpees4
00025A34 <AmiBlitz3.ab3@8192>   MOVE.b (a7)+,blitzparloop
00025A3A <AmiBlitz3.ab3@8193>   MOVE.l (a7)+,rightsidetype
00025A40 <AmiBlitz3.ab3@8194>   MOVE.l (a7)+,leftsidetype
00025A46 <AmiBlitz3.ab3@8195>   MOVE.b (a7)+,funcparloop
00025A4A <AmiBlitz3.ab3@8196>   MOVEM.l (A7)+,D2/A2
00025A50 <AmiBlitz3.ab3@8197>   ADDQ.w #1,numreps
00025A54 <AmiBlitz3.ab3@8198> BRA.w fetchlibps__rloop
00025A5A <AmiBlitz3.ab3@8201>    MOVE.w numreps,D3
00025A5E <AmiBlitz3.ab3@8202>    BEQ.w syntaxerr
00025A60 <AmiBlitz3.ab3@8203>   ADDA.w D2,A2
00025A64 <AmiBlitz3.ab3@8204>   ANDI.w #$FF,D1
00025A68 <AmiBlitz3.ab3@8205>    BEQ.w fetchlibps__done
00025A6C <AmiBlitz3.ab3@8206>   CMP.w #$2C,D0
00025A70 <AmiBlitz3.ab3@8207>    BNE.w syntaxerr
00025A72 <AmiBlitz3.ab3@8210>    MOVE.w D1,D0
00025A76 <AmiBlitz3.ab3@8211>    BNE.w fetchpees2b
00025A78 <AmiBlitz3.ab3@8214> RTS
00025A7E <AmiBlitz3.ab3@8217>   MOVE.b funcparloop,-(a7)
00025A84 <AmiBlitz3.ab3@8218>   MOVE.l leftsidetype,-(a7)
00025A8A <AmiBlitz3.ab3@8219>   MOVE.l rightsidetype,-(a7)
00025A90 <AmiBlitz3.ab3@8220>   CLR.l leftsidetype
00025A96 <AmiBlitz3.ab3@8221>   CLR.l rightsidetype
00025A9E <AmiBlitz3.ab3@8222>   MOVE.b #0,funcparloop
00025AA4 <AmiBlitz3.ab3@8223>   MOVE.b blitzparloop,-(a7)
00025AAC <AmiBlitz3.ab3@8224>   MOVE.b #1,blitzparloop
00025AB0 <AmiBlitz3.ab3@8225>   BSR.w fetchpees2
00025AB6 <AmiBlitz3.ab3@8226>   MOVE.b (a7)+,blitzparloop
00025ABC <AmiBlitz3.ab3@8227>   MOVE.l (a7)+,rightsidetype
00025AC2 <AmiBlitz3.ab3@8228>   MOVE.l (a7)+,leftsidetype
00025AC8 <AmiBlitz3.ab3@8229>   MOVE.b (a7)+,funcparloop
00025ACA <AmiBlitz3.ab3@8230> RTS
00025ACE <AmiBlitz3.ab3@8234> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025AD0 <AmiBlitz3.ab3@8237> partostack:  Ds.w 1                                        ;pmode org source
00025AD2 <AmiBlitz3.ab3@8241>   MOVEQ.l #$01,D2
00025AD6 <AmiBlitz3.ab3@8242> BRA.w fetchpees3
00025AD8 <AmiBlitz3.ab3@8245>   MOVEQ.l #$00,D2
00025ADC <AmiBlitz3.ab3@8248>   ANDI.w #$F,D0
00025AE2 <AmiBlitz3.ab3@8256>   CLR.w parnum
00025AE4 <AmiBlitz3.ab3@8257>   MOVE.w D1,-(A7)
00025AE8 <AmiBlitz3.ab3@8258>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025AEE <AmiBlitz3.ab3@8259>   MOVE.w D2,partostack
00025AF0 <AmiBlitz3.ab3@8260>   MOVE.w D0,-(A7)
00025AF4 <AmiBlitz3.ab3@8261>   CMP.w #"@@",(a5)                                         ;was l15
00025AF8 <AmiBlitz3.ab3@8262>   BNE fetchpees__loop
00025AFE <AmiBlitz3.ab3@8263>   TST.w ininclude                                          ;merge macrolines
00025B02 <AmiBlitz3.ab3@8264>   BNE errorjoin
00025B08 <AmiBlitz3.ab3@8265>        MOVEA.l sourceline,A5
00025B0A <AmiBlitz3.ab3@8268>            MOVEA.l (A5),A5
00025B10 <AmiBlitz3.ab3@8269>            MOVE.l a5,sourceline
00025B14 <AmiBlitz3.ab3@8270>            LEA $9(A5),A5
00025B1A <AmiBlitz3.ab3@8271>            ADDQ.l #1,linenumat
00025B1C <AmiBlitz3.ab3@8275>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025B20 <AmiBlitz3.ab3@8276>    BNE.w fetchpees__skip0
00025B26 <AmiBlitz3.ab3@8277>   MOVE.w userp,D2                                          ;user selected type
00025B28 <AmiBlitz3.ab3@8279>    MOVE.l A2,-(A7)
00025B2E <AmiBlitz3.ab3@8280>    ADDQ.w #1,parnum
00025B34 <AmiBlitz3.ab3@8281>    TST.b funccall
00025B38 <AmiBlitz3.ab3@8282>    BEQ fetchpees__skip0_l1
00025B40 <AmiBlitz3.ab3@8283>    CMP.w #6,parnum
00025B44 <AmiBlitz3.ab3@8284>    BLE fetchpees__skip0_l1
00025B48 <AmiBlitz3.ab3@8285>    CMP.w #7,d2
00025B4E <AmiBlitz3.ab3@8291>    TST.b fpu
00025B52 <AmiBlitz3.ab3@8292>    BEQ fetchpees__skip0_old
00025B58 <AmiBlitz3.ab3@8293>    TST.w regnumfunc
00025B5C <AmiBlitz3.ab3@8294>    BEQ fetchpees__skip0_old
00025B62 <AmiBlitz3.ab3@8295>    CMP.w #$48e7,-4(a4)
00025B66 <AmiBlitz3.ab3@8296>    BNE fetchpees__skip0_old
00025B68 <AmiBlitz3.ab3@8297>    MOVEQ #0,d1
00025B6E <AmiBlitz3.ab3@8298>    MOVE.w regnum,d1
00025B74 <AmiBlitz3.ab3@8299>    CMP regnumfunc,d1                                       ;fpu reg function save
00025B78 <AmiBlitz3.ab3@8300>    BGE fetchpees__skip0_old
00025B7A <AmiBlitz3.ab3@8301>    ASL.w #7,d1
00025B7C <AmiBlitz3.ab3@8302>    MOVE.l d0,-(a7)
00025B82 <AmiBlitz3.ab3@8303>    MOVE.w regnumfunc,d0
00025B88 <AmiBlitz3.ab3@8304>    CLR.w regmask
00025B8E <AmiBlitz3.ab3@8306>    BSET d0,regmask
00025B90 <AmiBlitz3.ab3@8307>    SUBQ #1,d0
00025B94 <AmiBlitz3.ab3@8308>    BNE fetchpees__skip0_loop
00025B96 <AmiBlitz3.ab3@8309>     MOVEQ #0,d0
00025B9C <AmiBlitz3.ab3@8312>       BTST d0,regmask
00025BA0 <AmiBlitz3.ab3@8313>       BEQ fetchpees__skip0_noa7
00025BA2 <AmiBlitz3.ab3@8314>       MOVEQ #0,d1
00025BA4 <AmiBlitz3.ab3@8315>       MOVE.w d0,d1
00025BA6 <AmiBlitz3.ab3@8316>       SUBQ.w #1,d1
00025BA8 <AmiBlitz3.ab3@8317>       ASL #7,d1
00025BAE <AmiBlitz3.ab3@8318>       OR.l #$f2277400,d1                                   ;fmove.d
00025BB2 <AmiBlitz3.ab3@8320>       BSR writelong
00025BB8 <AmiBlitz3.ab3@8322>       ADDQ.l #2,stacktrack
00025BBE <AmiBlitz3.ab3@8323>       MOVE.l stacktrack,d1
00025BC4 <AmiBlitz3.ab3@8324>       CMP.l #180,d1
00025BC8 <AmiBlitz3.ab3@8325>       BGT conmemerr                                        ;formel too complex
00025BCA <AmiBlitz3.ab3@8326>       MOVE.l a0,-(a7)
00025BD0 <AmiBlitz3.ab3@8327>       LEA fpustackbase,a0
00025BD8 <AmiBlitz3.ab3@8328>       MOVE.w regmask,0(a0,d1)
00025BDA <AmiBlitz3.ab3@8329>       MOVE.l (a7)+,a0
00025BDC <AmiBlitz3.ab3@8332>       ADDQ.w #1,d0
00025BE2 <AmiBlitz3.ab3@8333>       CMP.w regnumfunc,d0
00025BE6 <AmiBlitz3.ab3@8334>       BLE fetchpees__skip0_loop2
00025BE8 <AmiBlitz3.ab3@8337>       MOVE.l (a7)+,d0
00025BEE <AmiBlitz3.ab3@8340>      MOVE.l currentfunccall,-(a7)
00025BF4 <AmiBlitz3.ab3@8341>      MOVE.w parnum,-(a7)
00025BFA <AmiBlitz3.ab3@8342>      TST.l rightsidetype
00025BFE <AmiBlitz3.ab3@8343>      BSR.w JL_0_6836
00025C04 <AmiBlitz3.ab3@8344>      MOVE.w (a7)+,parnum
00025C0A <AmiBlitz3.ab3@8346>    MOVE.l (a7)+,currentfunccall
00025C10 <AmiBlitz3.ab3@8348>    TST.b typecheck                            ;typecheck for function call
00025C14 <AmiBlitz3.ab3@8349>    BEQ 'notypecheck
00025C1A <AmiBlitz3.ab3@8350>    TST.b notypecheck
00025C1E <AmiBlitz3.ab3@8351>    BNE 'notypecheck
00025C24 <AmiBlitz3.ab3@8352>    TST.b blitzparloop
00025C28 <AmiBlitz3.ab3@8353>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00025C32 <AmiBlitz3.ab3@8354>    CMP.l #0,currentfunccall
00025C36 <AmiBlitz3.ab3@8355>    BEQ 'isblitzlibcall
00025C3A <AmiBlitz3.ab3@8356>    MOVEM.l a0/a1,-(a7)
00025C40 <AmiBlitz3.ab3@8357>    MOVE.l currentfunccall,a0
00025C46 <AmiBlitz3.ab3@8358>    MOVE.w parnum,d1
00025C4C <AmiBlitz3.ab3@8359>    TST.b isconstantvalue
00025C50 <AmiBlitz3.ab3@8360>    BEQ 'noconstant
00025C5A <AmiBlitz3.ab3@8361>    CMP.l #0,lastconstantvalue
00025C5E <AmiBlitz3.ab3@8362>    BEQ 'isnull
00025C62 <AmiBlitz3.ab3@8364>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00025C68 <AmiBlitz3.ab3@8365>    CMP.l #0,a0
00025C6C <AmiBlitz3.ab3@8366>    BEQ 'notype
00025C74 <AmiBlitz3.ab3@8367>    CMP.l #$100,4(a0)
00025C78 <AmiBlitz3.ab3@8368>    BLE 'notype
00025C7E <AmiBlitz3.ab3@8369>    MOVE.l lasttoken,d1
00025C82 <AmiBlitz3.ab3@8370>    CMP.w #$b581,d1                   ; ok, when token for null
00025C86 <AmiBlitz3.ab3@8371>    BEQ 'isnull
00025C8C <AmiBlitz3.ab3@8372>    TST.l typetocast
00025C90 <AmiBlitz3.ab3@8373>    BEQ 'nocast
00025C96 <AmiBlitz3.ab3@8374>    MOVE.l typetocast,a1
00025C9A <AmiBlitz3.ab3@8375>    BRA 'typecheck
00025CA0 <AmiBlitz3.ab3@8377>    MOVE.l rightsidetype,a1
00025CA6 <AmiBlitz3.ab3@8378>    CMP.l #0,a1
00025CAA <AmiBlitz3.ab3@8379>    BEQ 'notype
00025CB2 <AmiBlitz3.ab3@8380> 'typecheck   CMP.l #$100,4(a1)
00025CB4 <AmiBlitz3.ab3@8382>    CMP.l a0,a1
00025CB8 <AmiBlitz3.ab3@8383>    BEQ 'ok
00025CC0 <AmiBlitz3.ab3@8385>    CMP.l #$100,4(a1)                 ; is a type here
00025CC4 <AmiBlitz3.ab3@8386>    BLE 'error
00025CC8 <AmiBlitz3.ab3@8387>    MOVE.l 4(a1),a1                   ; load the address of type.
00025CCC <AmiBlitz3.ab3@8388>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00025CD0 <AmiBlitz3.ab3@8389>    BEQ 'ok
00025CD6 <AmiBlitz3.ab3@8390> 'error: JMP   error_convert_types    ; for syntax 4
00025CDC <AmiBlitz3.ab3@8394>    CLR.l typetocast
00025CE0 <AmiBlitz3.ab3@8395>    MOVEM.l (a7)+,a0/a1
00025CE6 <AmiBlitz3.ab3@8399>    CLR.l lastfunction
00025CEC <AmiBlitz3.ab3@8400>    TST.b fpu
00025CF0 <AmiBlitz3.ab3@8401>    BEQ fetchpees__skip0_noprint
00025CF2 <AmiBlitz3.ab3@8402>   MOVE.l (a7),a2
00025CF4 <AmiBlitz3.ab3@8403>   ADDQ.l #1,a2
00025CF8 <AmiBlitz3.ab3@8404>    CMP.b #5,d2
00025CFC <AmiBlitz3.ab3@8405>   BNE fetchpees__skip0_noprint
00025D02 <AmiBlitz3.ab3@8406>   CMP.b #$5d,24(a2)
00025D06 <AmiBlitz3.ab3@8407>   BNE fetchpees__skip0_noprint
00025D0C <AmiBlitz3.ab3@8408>   CMP.b #$81,25(a2)
00025D10 <AmiBlitz3.ab3@8409>   BLT fetchpees__skip0_noprint
00025D16 <AmiBlitz3.ab3@8410>   CMP.b #$86,25(a2)
00025D1A <AmiBlitz3.ab3@8411>   BEQ fetchpees__skip0_ok
00025D20 <AmiBlitz3.ab3@8412>   CMP.b #$87,25(a2)
00025D24 <AmiBlitz3.ab3@8413>   BEQ fetchpees__skip0_ok
00025D2A <AmiBlitz3.ab3@8414>   CMP.b #$88,25(a2)
00025D2E <AmiBlitz3.ab3@8415>   BEQ fetchpees__skip0_ok
00025D34 <AmiBlitz3.ab3@8416>   CMP.b #$83,25(a2)
00025D38 <AmiBlitz3.ab3@8417>   BGT fetchpees__skip0_noprint
00025D3E <AmiBlitz3.ab3@8420>   MOVE.l destpointer,a4
00025D44 <AmiBlitz3.ab3@8421>   CMP.w #$2f00,-2(a4)
00025D48 <AmiBlitz3.ab3@8422>   BNE fetchpees__skip0_noprint
00025D4E <AmiBlitz3.ab3@8423>   SUBQ.l #2,destpointer
00025D54 <AmiBlitz3.ab3@8425>   MOVE.l #$f2277400,d1
00025D58 <AmiBlitz3.ab3@8426>   BSR writelong                                            ;fmove.d fp0,-(a7)
00025D5E <AmiBlitz3.ab3@8427>   ADDQ #4,a2offset
00025D64 <AmiBlitz3.ab3@8445>   CLR.b optistring
00025D66 <AmiBlitz3.ab3@8446>   MOVEA.l (A7)+,A2
00025D6A <AmiBlitz3.ab3@8447>    CMP.w #"@",d0
00025D6E <AmiBlitz3.ab3@8448>   BNE fetchpees__skip0_l10
00025D72 <AmiBlitz3.ab3@8449>    CMP.b #"@",(a5)
00025D76 <AmiBlitz3.ab3@8450>   BNE fetchpees__skip0_l10
00025D7C <AmiBlitz3.ab3@8451>   TST.w ininclude
00025D80 <AmiBlitz3.ab3@8452>   BNE errorjoin
00025D86 <AmiBlitz3.ab3@8453>   MOVEA.l sourceline,A5
00025D88 <AmiBlitz3.ab3@8454>            MOVEA.l (A5),A5
00025D8E <AmiBlitz3.ab3@8455>            MOVE.l a5,sourceline
00025D94 <AmiBlitz3.ab3@8456>            ADDQ.l #1,linenumat
00025D98 <AmiBlitz3.ab3@8457>            LEA $9(A5),A5
00025D9A <AmiBlitz3.ab3@8458>            MOVEQ #0,d0
00025D9E <AmiBlitz3.ab3@8459>            BSR get1bytemain
00025DA2 <AmiBlitz3.ab3@8462>    CMP.b #32,(a5)+ ;for space after a ,
00025DA6 <AmiBlitz3.ab3@8463>    BEQ fetchpees__skip0_l10:
00025DA8 <AmiBlitz3.ab3@8464>    SUBQ.l #1,a5
00025DAC <AmiBlitz3.ab3@8466>    CMP.w #"@@",(a5)                                        ;if merge
00025DB0 <AmiBlitz3.ab3@8467>    BNE fetchpees__skip0_l15
00025DB4 <AmiBlitz3.ab3@8468>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00025DBA <AmiBlitz3.ab3@8469>    JSR mergeline
00025DBE <AmiBlitz3.ab3@8470>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00025DC0 <AmiBlitz3.ab3@8490>       SUBQ.w #1,(A7)
00025DC4 <AmiBlitz3.ab3@8491>    BEQ.w fetchpees__done
00025DC8 <AmiBlitz3.ab3@8493>     CMP.w #$2C,D0
00025DCC <AmiBlitz3.ab3@8495>    BNE overloadfunc
00025DD0 <AmiBlitz3.ab3@8496> BRA.w fetchpees__loop
00025DD2 <AmiBlitz3.ab3@8499>   ADDQ.w #2,A7
00025DD8 <AmiBlitz3.ab3@8500>   MOVE.w (A7)+,partostack
00025DDA <AmiBlitz3.ab3@8501>   MOVE.w (A7)+,D1
00025DE0 <AmiBlitz3.ab3@8502>   CLR.b isconstantvalue
00025DEA <AmiBlitz3.ab3@8503>   MOVE.l currentfunccall,lastfunction
00025DF0 <AmiBlitz3.ab3@8504>   CLR.b funccall
00025DF6 <AmiBlitz3.ab3@8505>   CLR.l currentfunccall
00025DF8 <AmiBlitz3.ab3@8506> RTS
00025DFE <AmiBlitz3.ab3@8510>   CLR.b funccall
00025E04 <AmiBlitz3.ab3@8511>   MOVE.w regnum,d1
00025E0A <AmiBlitz3.ab3@8512>   MOVE.l currentfunccall,a4
00025E0E <AmiBlitz3.ab3@8513>   CMP.b $20(a4),d1                                         ;increase if more pars
00025E12 <AmiBlitz3.ab3@8514>   BLT notparerr
00025E14 <AmiBlitz3.ab3@8517>   MOVE.b (a2)+,d2
00025E1C <AmiBlitz3.ab3@8518>   ADD.w #1,parnum
00025E22 <AmiBlitz3.ab3@8519>   TST.b fpu
00025E26 <AmiBlitz3.ab3@8520>   BEQ 'nofpu
00025E2A <AmiBlitz3.ab3@8521>   CMP.b #5,d2
00025E2E <AmiBlitz3.ab3@8522>   BNE 'nofpu
00025E30 <AmiBlitz3.ab3@8523>   MOVEQ #0,d1
00025E36 <AmiBlitz3.ab3@8524>   MOVE.w regnum,d1
00025E3E <AmiBlitz3.ab3@8525>   CMP.w #6,regnum
00025E42 <AmiBlitz3.ab3@8526>   BLT 'nostack2
00025E46 <AmiBlitz3.ab3@8531>   MOVE.w #$2c3c,d1
00025E4A <AmiBlitz3.ab3@8532>   BSR writeword
00025E50 <AmiBlitz3.ab3@8533>   MOVE.l #$bf800000,d1
00025E54 <AmiBlitz3.ab3@8534>   BSR writelong
00025E58 <AmiBlitz3.ab3@8535>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025E5E <AmiBlitz3.ab3@8536>   ADD.w parnum,d1
00025E64 <AmiBlitz3.ab3@8537>   JSR Atokejsr
00025E6A <AmiBlitz3.ab3@8538>   TST.w dontwrite
00025E6E <AmiBlitz3.ab3@8539>   BNE 'l1
00025E74 <AmiBlitz3.ab3@8540>   MOVE.l data1start,d1
00025E7A <AmiBlitz3.ab3@8541>   MOVE.l destpointer,a4
00025E7E <AmiBlitz3.ab3@8542>   ADD.l d1,-4(a4)
00025E84 <AmiBlitz3.ab3@8543>   MOVE.l destpointer,d1
00025E86 <AmiBlitz3.ab3@8544>   SUBQ.l #4,d1
00025E8C <AmiBlitz3.ab3@8545>   SUB.l destbufferstart,d1
00025E8E <AmiBlitz3.ab3@8546>   MOVE.l d2,-(a7)
00025E90 <AmiBlitz3.ab3@8547>   MOVE.l d1,d2
00025E96 <AmiBlitz3.ab3@8548>   JSR addhunkoffset
00025E98 <AmiBlitz3.ab3@8549>   MOVE.l (a7)+,d2
00025E9C <AmiBlitz3.ab3@8550> BRA 'l1
00025E9E <AmiBlitz3.ab3@8553>   ASL.l #7,d1
00025EA4 <AmiBlitz3.ab3@8554>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00025EA8 <AmiBlitz3.ab3@8555>   BSR writelong
00025EAA <AmiBlitz3.ab3@8556>   MOVEQ #-1,d1                                             ;-1
00025EAE <AmiBlitz3.ab3@8557>   BSR writeword
00025EB2 <AmiBlitz3.ab3@8558> BRA 'l1
00025EB8 <AmiBlitz3.ab3@8561>   MOVE.w regnum,d1
00025EC0 <AmiBlitz3.ab3@8562>   CMP.w #6,regnum
00025EC4 <AmiBlitz3.ab3@8563>   BLT 'nostack
00025EC8 <AmiBlitz3.ab3@8568>   CMP.b #2,d2
00025ECC <AmiBlitz3.ab3@8569>   BGT 'nw
00025ED0 <AmiBlitz3.ab3@8570> BRA 'nos
00025ED4 <AmiBlitz3.ab3@8579>   CMP.w #7,d2
00025ED8 <AmiBlitz3.ab3@8580>   BNE 'nos
00025EDE <AmiBlitz3.ab3@8581>   ADDQ #4,a2offset
00025EE4 <AmiBlitz3.ab3@8583>     MOVE.l #$48780000,d1
00025EE8 <AmiBlitz3.ab3@8584>     BSR writelong
00025EEE <AmiBlitz3.ab3@8585>     ADDQ.w #4,a2offset
00025EF2 <AmiBlitz3.ab3@8586>     MOVE.w #$2f3c,d1
00025EF6 <AmiBlitz3.ab3@8587>     BSR writeword
00025EFC <AmiBlitz3.ab3@8588>     MOVE.l #-1,d1
00025F00 <AmiBlitz3.ab3@8589>     BSR writelong
00025F04 <AmiBlitz3.ab3@8590>   BRA 'l1
00025F08 <AmiBlitz3.ab3@8594>   CMP.b #4,d2
00025F0C <AmiBlitz3.ab3@8595>       BNE 'noq
00025F10 <AmiBlitz3.ab3@8596>       MOVE.w #$2c3c,d1
00025F14 <AmiBlitz3.ab3@8597>       BSR writeword
00025F1A <AmiBlitz3.ab3@8598>       MOVE.l #$ffff0000,d1
00025F1E <AmiBlitz3.ab3@8599>       BSR writelong
00025F22 <AmiBlitz3.ab3@8600> BRA 'noq2
00025F26 <AmiBlitz3.ab3@8603>      CMP.b #5,d2
00025F2A <AmiBlitz3.ab3@8604>      BNE 'nof
00025F2E <AmiBlitz3.ab3@8605>       MOVE.w #$2c3c,d1
00025F32 <AmiBlitz3.ab3@8606>       BSR writeword
00025F38 <AmiBlitz3.ab3@8607>       MOVE.l #$800000c1,d1
00025F3C <AmiBlitz3.ab3@8608>       BSR writelong
00025F40 <AmiBlitz3.ab3@8609> BRA 'noq2
00025F44 <AmiBlitz3.ab3@8612>   MOVE.w #$7cff,d1
00025F48 <AmiBlitz3.ab3@8613>   BSR writeword
00025F4C <AmiBlitz3.ab3@8616>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025F52 <AmiBlitz3.ab3@8617>   ADD.w parnum,d1
00025F58 <AmiBlitz3.ab3@8618>   JSR Atokejsr
00025F5E <AmiBlitz3.ab3@8619>    TST.w dontwrite
00025F62 <AmiBlitz3.ab3@8620>    BNE 'l1
00025F68 <AmiBlitz3.ab3@8621>    MOVE.l data1start,d1
00025F6E <AmiBlitz3.ab3@8622>    MOVE.l destpointer,a4
00025F72 <AmiBlitz3.ab3@8623>    ADD.l d1,-4(a4)
00025F78 <AmiBlitz3.ab3@8624>    MOVE.l destpointer,d1
00025F7A <AmiBlitz3.ab3@8625>    SUBQ.l #4,d1
00025F80 <AmiBlitz3.ab3@8626>    SUB.l destbufferstart,d1
00025F82 <AmiBlitz3.ab3@8627>    MOVE.l d2,-(a7)
00025F84 <AmiBlitz3.ab3@8628>    MOVE.l d1,d2
00025F8A <AmiBlitz3.ab3@8629>    JSR addhunkoffset
00025F8C <AmiBlitz3.ab3@8630>    MOVE.l (a7)+,d2
00025F90 <AmiBlitz3.ab3@8631> BRA 'l1
00025F92 <AmiBlitz3.ab3@8634>   ASL.l #8,d1
00025F94 <AmiBlitz3.ab3@8635>   ASL.l #1,d1
00025F9A <AmiBlitz3.ab3@8636>   OR.l #$203c,d1                                           ;-1
00025F9E <AmiBlitz3.ab3@8637>   BSR writeword
00025FA4 <AmiBlitz3.ab3@8638>   MOVE.l #-1,d1
00025FA8 <AmiBlitz3.ab3@8639>   CMP.b #4,d2
00025FAC <AmiBlitz3.ab3@8640>   BNE 'nq1
00025FB2 <AmiBlitz3.ab3@8641>   MOVE.l #$ffff0000,d1
00025FB6 <AmiBlitz3.ab3@8644>   CMP.b #5,d2
00025FBA <AmiBlitz3.ab3@8645>   BNE 'nof2
00025FC0 <AmiBlitz3.ab3@8646>   TST.b fpu
00025FC4 <AmiBlitz3.ab3@8647>   BNE 'nof2
00025FCA <AmiBlitz3.ab3@8648>   MOVE.l #$800000c1,d1
00025FCE <AmiBlitz3.ab3@8651>    BSR writelong
00025FD2 <AmiBlitz3.ab3@8652>    CMP.b #7,d2
00025FD6 <AmiBlitz3.ab3@8653>    BNE 'l1
00025FDC <AmiBlitz3.ab3@8655>      MOVE.l #$48780000,d1
00025FE0 <AmiBlitz3.ab3@8656>      BSR writelong
00025FE6 <AmiBlitz3.ab3@8658>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00025FEC <AmiBlitz3.ab3@8659>    MOVE.l #$594f,d1                                        ; subq #4,a7
00025FF0 <AmiBlitz3.ab3@8660>    BSR writeword
00025FF2 <AmiBlitz3.ab3@8663>    SUBQ.w #1,(A7)
00025FF6 <AmiBlitz3.ab3@8664>    BEQ.w fetchpees__done
00025FFC <AmiBlitz3.ab3@8665>    ADDQ.w #1,regnum
00026000 <AmiBlitz3.ab3@8666> BRA 'ol2
00026002 <AmiBlitz3.ab3@8669>    MOVE.w D2,D1
00026006 <AmiBlitz3.ab3@8670>    ANDI.w #$40,D1
0002600C <AmiBlitz3.ab3@8671>    MOVE.b D1,partostack
0002600E <AmiBlitz3.ab3@8672>    TST.b D2
00026012 <AmiBlitz3.ab3@8673>     BMI.w handlevara
00026016 <AmiBlitz3.ab3@8674>    BTST #$5,D2
0002601A <AmiBlitz3.ab3@8675>     BNE.w handlearr
00026020 <AmiBlitz3.ab3@8676>     MOVE.w regnumstore,-(a7)
00026026 <AmiBlitz3.ab3@8677>     MOVE.w tempregnum,-(a7)
0002602C <AmiBlitz3.ab3@8678>     MOVE.w parnum,-(a7)
00026030 <AmiBlitz3.ab3@8679>     BSR.w getap                                        ;recursive entry
00026036 <AmiBlitz3.ab3@8680>     MOVE.w (a7)+,parnum
0002603C <AmiBlitz3.ab3@8681>     MOVE.w (a7)+,tempregnum
00026042 <AmiBlitz3.ab3@8682>     MOVE.w (a7)+,regnumstore
00026046 <AmiBlitz3.ab3@8685>     MOVE.w partostack(PC),D1
0002604A <AmiBlitz3.ab3@8686>     BEQ.w JL_0_6886
00026050 <AmiBlitz3.ab3@8689>    ADDQ.w #4,a2offset
00026056 <AmiBlitz3.ab3@8692>    MOVE.w pushdn,D1
0002605C <AmiBlitz3.ab3@8693>    OR.w regnum,D1
00026060 <AmiBlitz3.ab3@8694>    CMP.w #$3,D2
00026064 <AmiBlitz3.ab3@8695>     BCC.w JL_0_6880
0002606A <AmiBlitz3.ab3@8696>    SUBQ.w #2,a2offset
0002606E <AmiBlitz3.ab3@8697>    ORI.w #$1000,D1
00026072 <AmiBlitz3.ab3@8698>    BSR.w writeword
00026074 <AmiBlitz3.ab3@8699> RTS
00026078 <AmiBlitz3.ab3@8702>   CMP.b #7,d2
0002607C <AmiBlitz3.ab3@8703>    BNE 'l10
00026084 <AmiBlitz3.ab3@8704>    CMP.b #2,optistring
0002608A <AmiBlitz3.ab3@8708>   TST.b iee
0002608E <AmiBlitz3.ab3@8709>   BEQ 'old
00026092 <AmiBlitz3.ab3@8710>   CMP.b #5,d2
00026096 <AmiBlitz3.ab3@8711>   BNE 'old
0002609A <AmiBlitz3.ab3@8714>   BSR.w writeword                                          ;write val to stack
0002609C <AmiBlitz3.ab3@8715> RTS
000260A2 <AmiBlitz3.ab3@8718>   SUBQ.w #4,a2offset
000260A4 <AmiBlitz3.ab3@8719> RTS
000260AA <AmiBlitz3.ab3@8722>   ADDQ.w #1,regnum
000260AC <AmiBlitz3.ab3@8723> RTS
000260AE <AmiBlitz3.ab3@8727>   MOVEQ.l #$03,D2
000260B2 <AmiBlitz3.ab3@8728> BRA.w JL_0_6854
000260B6 <AmiBlitz3.ab3@8732>   ANDI.w #$7,D2
000260B8 <AmiBlitz3.ab3@8733>   MOVE.w D2,-(A7)
000260BC <AmiBlitz3.ab3@8734>    BSR.w JL_0_A916
000260C0 <AmiBlitz3.ab3@8735>   CMP.b #$7,D2                                             ;ignore pnt to $
000260C4 <AmiBlitz3.ab3@8736>    BEQ.w JL_0_68C0
000260C8 <AmiBlitz3.ab3@8737>   BTST #$E,D2
000260CC <AmiBlitz3.ab3@8738>    BEQ.w JL_0_68B6
000260D0 <AmiBlitz3.ab3@8739>   MOVE.b #$3,D2                                            ;pointer to long
000260D4 <AmiBlitz3.ab3@8740> BRA.w JL_0_68C0
000260D6 <AmiBlitz3.ab3@8743>    TST.b D2
000260DA <AmiBlitz3.ab3@8744>    BNE.w JL_0_68C0
000260DE <AmiBlitz3.ab3@8745>   MOVE.b #$3,D2
000260E0 <AmiBlitz3.ab3@8748>   MOVE.w (A7)+,D3
000260E2 <AmiBlitz3.ab3@8749>   TST.b D3
000260E6 <AmiBlitz3.ab3@8750>    BEQ.w JL_0_68D2
000260E8 <AmiBlitz3.ab3@8751>   CMP.b D2,D3
000260EC <AmiBlitz3.ab3@8752>    BEQ.w putalp
000260F0 <AmiBlitz3.ab3@8753> BRA.w mismatcherr
000260F6 <AmiBlitz3.ab3@8756>   ADDQ.w #2,a2offset
000260FA <AmiBlitz3.ab3@8757>   MOVE.w ptype(PC),D1
000260FE <AmiBlitz3.ab3@8758>    BSR.w writeword
00026100 <AmiBlitz3.ab3@8759>   MOVEQ.l #$00,D1
00026102 <AmiBlitz3.ab3@8760>   MOVE.b D2,D1
00026106 <AmiBlitz3.ab3@8761>    BSR.w writeword
0002610A <AmiBlitz3.ab3@8762> BRA.w putalp
0002610C <AmiBlitz3.ab3@8765>    MOVE.w D2,-(A7)
00026110 <AmiBlitz3.ab3@8766>    BSR.w JL_0_694E
00026116 <AmiBlitz3.ab3@8767>   BTST #$4,$1(A7)
0002611A <AmiBlitz3.ab3@8768>    BEQ.w JL_0_6900
0002611E <AmiBlitz3.ab3@8769>    BSR.w JL_0_699A
00026124 <AmiBlitz3.ab3@8772>    BTST #$3,$1(A7)
00026128 <AmiBlitz3.ab3@8773>    BEQ.w JL_0_690E
0002612C <AmiBlitz3.ab3@8774>    BSR.w sendtype
0002612E <AmiBlitz3.ab3@8777>    MOVE.w (A7)+,D2
00026132 <AmiBlitz3.ab3@8778> BRA.w get1bytemain
00026138 <AmiBlitz3.ab3@8781>   MOVE.w regnum,D1
0002613A <AmiBlitz3.ab3@8782>   LSL.w #8,D1
0002613C <AmiBlitz3.ab3@8783>   LSL.w #1,D1
00026140 <AmiBlitz3.ab3@8784>   ORI.w #$7000,D1
00026146 <AmiBlitz3.ab3@8785>   BTST #$0,$7(A3)
0002614A <AmiBlitz3.ab3@8786>    BNE.w JL_0_6946                                         ;A Pointer
00026152 <AmiBlitz3.ab3@8787>   CMPI.l #$100,$4(A2)
00026156 <AmiBlitz3.ab3@8788>    BCC.w arrerr1                                           ;illegal type to send
0002615A <AmiBlitz3.ab3@8789>   MOVE.b $7(A2),D1
0002615E <AmiBlitz3.ab3@8792>   BSR.w writeword                                          ;moveq #type,d regat
00026160 <AmiBlitz3.ab3@8793>   MOVEQ.l #$02,D2                                          ;just a word.
00026164 <AmiBlitz3.ab3@8794> BRA.w JL_0_685C
00026168 <AmiBlitz3.ab3@8797>   MOVE.b #$3,D1
0002616C <AmiBlitz3.ab3@8798> BRA.w JL_0_693C
00026170 <AmiBlitz3.ab3@8802>    BSR.w get1bytemain                                      ;write array paramter code
00026174 <AmiBlitz3.ab3@8803>    BSR.w getparameter
0002617C <AmiBlitz3.ab3@8804>   BTST #$1,flagmask+1
00026180 <AmiBlitz3.ab3@8805>    BEQ.w syntaxerr
00026184 <AmiBlitz3.ab3@8806>    BSR.w JL_0_8E3C
00026188 <AmiBlitz3.ab3@8807>    BSR.w get1bytemain
0002618C <AmiBlitz3.ab3@8808>   CMP.w #$29,D0                                            ;we just want a() or whatever
00026190 <AmiBlitz3.ab3@8809>    BNE.w syntaxerr
00026196 <AmiBlitz3.ab3@8810>   MOVE.w notshared,D1
0002619A <AmiBlitz3.ab3@8811>    BNE.w noarrayerr
000261A0 <AmiBlitz3.ab3@8812>   MOVE.w regnum,D1
000261A2 <AmiBlitz3.ab3@8813>   LSL.w #8,D1
000261A4 <AmiBlitz3.ab3@8814>   LSL.w #1,D1
000261A8 <AmiBlitz3.ab3@8815>   OR.w fbase(PC),D1
000261AE <AmiBlitz3.ab3@8816>    TST.b varmode
000261B2 <AmiBlitz3.ab3@8817>    BEQ 'l1
000261B6 <AmiBlitz3.ab3@8818>    BCLR #0,d1
000261BA <AmiBlitz3.ab3@8821>    BSR.w writeword
000261BE <AmiBlitz3.ab3@8822>   MOVE.w $4(A3),D1
000261C2 <AmiBlitz3.ab3@8823>    BSR.w writeword
000261C6 <AmiBlitz3.ab3@8824> BRA.w putalp
000261CC <AmiBlitz3.ab3@8828>   MOVE.w regnum,D1
000261CE <AmiBlitz3.ab3@8829>   LSL.w #8,D1
000261D0 <AmiBlitz3.ab3@8830>   LSL.w #1,D1
000261D4 <AmiBlitz3.ab3@8831>   OR.w fbase(PC),D1
000261DA <AmiBlitz3.ab3@8832>    TST.b varmode
000261DE <AmiBlitz3.ab3@8833>    BEQ 'l1
000261E2 <AmiBlitz3.ab3@8834>    BCLR #0,d1
000261E6 <AmiBlitz3.ab3@8837>    BSR.w writeword
000261EA <AmiBlitz3.ab3@8838>   MOVE.w $8(A3),D1
000261EC <AmiBlitz3.ab3@8839>   LSL.w #2,D1
000261F2 <AmiBlitz3.ab3@8840>   MOVE.w varmode,D2
000261F6 <AmiBlitz3.ab3@8841>    BEQ.w JL_0_69BE
000261F8 <AmiBlitz3.ab3@8842>   NEG.w D1
000261FC <AmiBlitz3.ab3@8845>    ADD.w $4(A3),D1
00026200 <AmiBlitz3.ab3@8846>    BSR.w writeword
00026206 <AmiBlitz3.ab3@8847>   MOVE.w regnum,D1
00026208 <AmiBlitz3.ab3@8848>   LSL.w #8,D1
0002620A <AmiBlitz3.ab3@8849>   LSL.w #1,D1
0002620E <AmiBlitz3.ab3@8850>   MOVE.w partostack(PC),D2
00026212 <AmiBlitz3.ab3@8851>    BNE.w JL_0_69F4
0002621A <AmiBlitz3.ab3@8852>   CMPI.w #$7,regnum
0002621E <AmiBlitz3.ab3@8853>    BCC.w JL_0_69F4
00026222 <AmiBlitz3.ab3@8854>   OR.w pushlast(PC),D1
00026228 <AmiBlitz3.ab3@8855>   MOVE.w regnum,D2
0002622A <AmiBlitz3.ab3@8856>   SUBQ.w #1,D2
0002622C <AmiBlitz3.ab3@8857>   OR.w D2,D1
00026230 <AmiBlitz3.ab3@8858> BRA.w JL_0_69F8
00026234 <AmiBlitz3.ab3@8861>   OR.w pushadd(PC),D1
00026238 <AmiBlitz3.ab3@8864>   BSR.w writeword
00026240 <AmiBlitz3.ab3@8865>   MOVE.b #$1,partostack
00026244 <AmiBlitz3.ab3@8866> BRA.w putalp
00026248 <AmiBlitz3.ab3@8870> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002624A <AmiBlitz3.ab3@8871> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0002624C <AmiBlitz3.ab3@8872> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026250 <AmiBlitz3.ab3@8877>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026254 <AmiBlitz3.ab3@8878>    BEQ.w evalu2
00026258 <AmiBlitz3.ab3@8879> BRA.w eval
0002625E <AmiBlitz3.ab3@8883>   MOVEA.l libpointer,A1
00026262 <AmiBlitz3.ab3@8886>    CMPA.w #$0,A1
00026266 <AmiBlitz3.ab3@8887>    BEQ.w resetlibs__done
0002626C <AmiBlitz3.ab3@8888>   MOVE.w #-1,$A(A1)
00026272 <AmiBlitz3.ab3@8889>   BCLR #$7,$C(A1)
00026274 <AmiBlitz3.ab3@8890>   MOVEA.l (A1),A1
00026278 <AmiBlitz3.ab3@8891> BRA.w resetlibs__loop
0002627A <AmiBlitz3.ab3@8894> RTS
0002627E <AmiBlitz3.ab3@8898>   MOVE.w #$FFFE,D1
00026282 <AmiBlitz3.ab3@8901>    BSR.w JL_0_6F38
00026288 <AmiBlitz3.ab3@8904>   TST.w cfetchmode
0002628C <AmiBlitz3.ab3@8905>    BEQ.w uselib3__noconst
00026292 <AmiBlitz3.ab3@8906>   BTST #$6,$C(A1)
00026296 <AmiBlitz3.ab3@8907>    BNE.w uselib3__constok
0002629A <AmiBlitz3.ab3@8908> BRA.w badconerr                                            ;Can't use this Library!
0002629C <AmiBlitz3.ab3@8911> RTS
000262A2 <AmiBlitz3.ab3@8914>    BSET #$7,$C(A1)
000262A6 <AmiBlitz3.ab3@8915>    BNE.w JL_0_6C74                                         ;already done....
000262AC <AmiBlitz3.ab3@8916>    CMPI.w #-1,$A(A1)
000262B0 <AmiBlitz3.ab3@8917>    BNE.w JL_0_6C74                                         ;something already here
000262B6 <AmiBlitz3.ab3@8921>    TST.w dirmode
000262BA <AmiBlitz3.ab3@8922>    BEQ.b JL_0_6A86
000262C0 <AmiBlitz3.ab3@8923>    TST.b exdebug
000262C4 <AmiBlitz3.ab3@8924>    BEQ 'l1
000262C8 <AmiBlitz3.ab3@8925> BRA.b JL_0_6A86
000262CE <AmiBlitz3.ab3@8928>   BCLR #$7,$C(A1)
000262D2 <AmiBlitz3.ab3@8929> BRA.w dirliberr
000262D8 <AmiBlitz3.ab3@8932>   MOVE.b debugmode,-(a7)
000262DC <AmiBlitz3.ab3@8933>   MOVEM.l D1/A0/A2,-(A7)
000262E4 <AmiBlitz3.ab3@8939>   BTST #$7,use_debugger
000262E8 <AmiBlitz3.ab3@8940>   BNE 'debugon
000262EA <AmiBlitz3.ab3@8941>   CLR.w D1
000262EE <AmiBlitz3.ab3@8942> BRA.b 'debugoff
000262F0 <AmiBlitz3.ab3@8945>   SNE D1
000262F6 <AmiBlitz3.ab3@8948>   MOVE.b d1,debugmode
000262F8 <AmiBlitz3.ab3@8952>   MOVEA.l A1,A0
000262FC <AmiBlitz3.ab3@8953>   ADDA.l $12(A1),A0
00026300 <AmiBlitz3.ab3@8954>   TST.w -$2(A0)
00026304 <AmiBlitz3.ab3@8955>    BEQ.w JL_0_6AD2
00026308 <AmiBlitz3.ab3@8956>   MOVEM.l A0-A1,-(A7)
0002630C <AmiBlitz3.ab3@8957>   MOVE.w #$FB4F,D1
00026310 <AmiBlitz3.ab3@8958>    BSR.w uselib
00026314 <AmiBlitz3.ab3@8959>   MOVEM.l (A7)+,A0-A1
0002631A <AmiBlitz3.ab3@8960>   ADDQ.w #1,globalvarpointer
00026322 <AmiBlitz3.ab3@8961>   BCLR #$0,globalvarpointer+1
0002632A <AmiBlitz3.ab3@8962>   MOVE.w globalvarpointer,-$6(A0)
00026330 <AmiBlitz3.ab3@8963>   ADDQ.w #4,globalvarpointer
00026334 <AmiBlitz3.ab3@8964>   TST.l -$E(A0)
00026338 <AmiBlitz3.ab3@8965>    BEQ.w JL_0_6AD2
0002633E <AmiBlitz3.ab3@8966>   ADDQ.w #4,globalvarpointer
00026346 <AmiBlitz3.ab3@8969>   MOVE.l libend,$28(A1)
00026348 <AmiBlitz3.ab3@8970>   MOVEA.l A1,A0
0002634C <AmiBlitz3.ab3@8971>   ADDA.l $12(A1),A0
0002634E <AmiBlitz3.ab3@8972>   MOVE.l A1,D1
00026352 <AmiBlitz3.ab3@8973>   ADD.l $6(A1),D1
00026356 <AmiBlitz3.ab3@8974>   TST.l $2C(A1)
0002635A <AmiBlitz3.ab3@8975>    BEQ.w JL_0_6AFE
00026360 <AmiBlitz3.ab3@8977>   TST.b debugmode
00026364 <AmiBlitz3.ab3@8978>    BNE.w JL_0_6AFE
00026366 <AmiBlitz3.ab3@8979>   MOVE.l A1,D1
0002636A <AmiBlitz3.ab3@8980>   ADD.l $2C(A1),D1
00026370 <AmiBlitz3.ab3@8983>   MOVEA.l libend,A2
00026376 <AmiBlitz3.ab3@8986>   CMPA.l data1start,A2
0002637A <AmiBlitz3.ab3@8987>    BCS.w JL_0_6B24
00026382 <AmiBlitz3.ab3@8988>   MOVE.w #$FFFF,dontwrite
00026384 <AmiBlitz3.ab3@8991>   ADDQ.w #2,A0
00026386 <AmiBlitz3.ab3@8992>   ADDQ.w #2,A2
00026388 <AmiBlitz3.ab3@8993>   CMPA.l D1,A0
0002638C <AmiBlitz3.ab3@8994>    BCS.w JL_0_6B16
00026390 <AmiBlitz3.ab3@8995> BRA.w JL_0_6B2C
00026392 <AmiBlitz3.ab3@8998>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026394 <AmiBlitz3.ab3@8999>   CMPA.l D1,A0
00026398 <AmiBlitz3.ab3@9000>    BCS.w JL_0_6B04
0002639E <AmiBlitz3.ab3@9003>   MOVE.l A2,libend
000263A2 <AmiBlitz3.ab3@9004>   MOVE.l $20(A1),D1
000263A6 <AmiBlitz3.ab3@9005>    BEQ.w JL_0_6BB8
000263AA <AmiBlitz3.ab3@9006>   MOVEM.l D0/D2-D3,-(A7)
000263AE <AmiBlitz3.ab3@9007>   MOVEA.l $24(A1),A0
000263B0 <AmiBlitz3.ab3@9008>   MOVEQ.l #$00,D3
000263B2 <AmiBlitz3.ab3@9011>   MOVE.l (A0)+,D2
000263B6 <AmiBlitz3.ab3@9012>   TST.l $2C(A1)
000263BA <AmiBlitz3.ab3@9013>    BEQ.w JL_0_6B60
000263C0 <AmiBlitz3.ab3@9014>   TST.b debugmode
000263C4 <AmiBlitz3.ab3@9015>    BNE.w JL_0_6B60
000263C8 <AmiBlitz3.ab3@9016>   CMP.l $2C(A1),D2
000263CC <AmiBlitz3.ab3@9017>    BCC.w JL_0_6BA0
000263D0 <AmiBlitz3.ab3@9020>   TST.w $0(A1,D2.L)
000263D4 <AmiBlitz3.ab3@9021>    BPL.w JL_0_6B72
000263D6 <AmiBlitz3.ab3@9022>   TST.l D3
000263DA <AmiBlitz3.ab3@9023>    BNE.w JL_0_6B72
000263DC <AmiBlitz3.ab3@9024>   MOVE.l A0,D0
000263DE <AmiBlitz3.ab3@9025>   MOVE.l D1,D3
000263E2 <AmiBlitz3.ab3@9028>   SUB.l $12(A1),D2
000263E6 <AmiBlitz3.ab3@9029>    BMI.w JL_0_6BA0
000263EA <AmiBlitz3.ab3@9030>   ADD.l $28(A1),D2
000263EC <AmiBlitz3.ab3@9031>   MOVE.l D2,-(A7)
000263F2 <AmiBlitz3.ab3@9032>   SUB.l destbufferstart,D2
000263F6 <AmiBlitz3.ab3@9033>    BSR.w addhunkoffset
000263F8 <AmiBlitz3.ab3@9034>   MOVEA.l (A7)+,A2
000263FE <AmiBlitz3.ab3@9035>   TST.w dontwrite
00026402 <AmiBlitz3.ab3@9036>    BNE.w JL_0_6BA0
00026406 <AmiBlitz3.ab3@9037>   MOVE.l $28(A1),D2
0002640A <AmiBlitz3.ab3@9038>   SUB.l $12(A1),D2
0002640C <AmiBlitz3.ab3@9039>   ADD.l D2,(A2)
0002640E <AmiBlitz3.ab3@9042>    SUBQ.l #1,D1
00026412 <AmiBlitz3.ab3@9043>    BNE.w JL_0_6B44
00026414 <AmiBlitz3.ab3@9044>   MOVE.l D3,D2
00026418 <AmiBlitz3.ab3@9045>    BEQ.w JL_0_6BB4
0002641A <AmiBlitz3.ab3@9046>   MOVEA.l D0,A2
0002641C <AmiBlitz3.ab3@9047>   SUBQ.w #4,A2
00026420 <AmiBlitz3.ab3@9048>    BSR.w JL_0_6E34
00026424 <AmiBlitz3.ab3@9051>    MOVEM.l (A7)+,D0/D2-D3
00026428 <AmiBlitz3.ab3@9054>    MOVEM.l (A7)+,D1/A0/A2
0002642C <AmiBlitz3.ab3@9055>   MOVEM.l D1-D2,-(A7)
00026430 <AmiBlitz3.ab3@9056>   TST.w $1A(A1)
00026434 <AmiBlitz3.ab3@9057>    BNE.w JL_0_6BD0
00026438 <AmiBlitz3.ab3@9058>   CLR.w $A(A1)
0002643C <AmiBlitz3.ab3@9059> BRA.w JL_0_6C5E
00026442 <AmiBlitz3.ab3@9062>   ADDQ.w #1,globalvarpointer
0002644A <AmiBlitz3.ab3@9063>   BCLR #$0,globalvarpointer+1
00026452 <AmiBlitz3.ab3@9064>   MOVE.w globalvarpointer,$A(A1)
00026456 <AmiBlitz3.ab3@9065>   CMP.w #-$12D,D1
0002645A <AmiBlitz3.ab3@9066>    BNE.w JL_0_6C16
00026462 <AmiBlitz3.ab3@9067>   MOVE.w $A(A1),movestdn+2
0002646A <AmiBlitz3.ab3@9068>   MOVE.w $A(A1),pusha3+2
00026472 <AmiBlitz3.ab3@9069>   MOVE.w $A(A1),pusha32+2
0002647A <AmiBlitz3.ab3@9070>   MOVE.w $A(A1),pulla3+2
00026482 <AmiBlitz3.ab3@9071>   MOVE.w $A(A1),geta3+2
00026486 <AmiBlitz3.ab3@9074>    CMP.w #-$3E9,D1
0002648A <AmiBlitz3.ab3@9075>    BNE.w JL_0_6C3E
00026492 <AmiBlitz3.ab3@9076>   MOVE.w $A(A1),dataget+2
0002649A <AmiBlitz3.ab3@9077>   MOVE.w $A(A1),dataput+2
000264A2 <AmiBlitz3.ab3@9078>   MOVE.w $A(A1),rescode+6
000264AA <AmiBlitz3.ab3@9079>   MOVE.w $A(A1),rescode2+2
000264B0 <AmiBlitz3.ab3@9082>   ADDQ.w #2,globalvarpointer
000264B4 <AmiBlitz3.ab3@9083>   TST.w $1A(A1)
000264B8 <AmiBlitz3.ab3@9084>    BMI.w JL_0_6C52
000264BE <AmiBlitz3.ab3@9085>   ADDQ.w #2,globalvarpointer
000264C2 <AmiBlitz3.ab3@9088>   MOVEM.l D1/A1,-(A7)
000264C6 <AmiBlitz3.ab3@9089>   BSR.w uselib2
000264CA <AmiBlitz3.ab3@9090>   MOVEM.l (A7)+,D1/A1
000264CC <AmiBlitz3.ab3@9093>   MOVE.w D1,D2
000264D0 <AmiBlitz3.ab3@9094>   MOVE.l $16(A1),D1
000264D4 <AmiBlitz3.ab3@9095>    BSR.w uselib2_org
000264D8 <AmiBlitz3.ab3@9096>   MOVE.l $1C(A1),D1
000264DC <AmiBlitz3.ab3@9097>    BSR.w uselib2_org
000264E0 <AmiBlitz3.ab3@9098>   MOVEM.l (A7)+,D1-D2
000264E6 <AmiBlitz3.ab3@9100>   MOVE.b (a7)+,debugmode
000264E8 <AmiBlitz3.ab3@9103> RTS
000264EA <AmiBlitz3.ab3@9107>   MOVEQ.l #$00,D2
000264F0 <AmiBlitz3.ab3@9110>   MOVEA.l tokeslist,A2
000264F2 <AmiBlitz3.ab3@9111>   CMPA.l D2,A2
000264F6 <AmiBlitz3.ab3@9112>    BEQ.w JL_0_6CE0
000264F8 <AmiBlitz3.ab3@9113>   MOVE.l A2,-(A7)
000264FA <AmiBlitz3.ab3@9116>   MOVEQ.l #$00,D3
000264FE <AmiBlitz3.ab3@9119>   MOVEA.l $8(A2),A3
00026500 <AmiBlitz3.ab3@9120>   CMPA.l D3,A3
00026504 <AmiBlitz3.ab3@9121>    BEQ.w JL_0_6CD2
00026506 <AmiBlitz3.ab3@9122>   MOVE.l A3,-(A7)
0002650A <AmiBlitz3.ab3@9123>   MOVEM.l D2-D3/A2-A3,-(A7)
0002650E <AmiBlitz3.ab3@9124>   MOVE.w $4(A2),D1
00026512 <AmiBlitz3.ab3@9125>   MOVE.w $6(A2),D2
00026516 <AmiBlitz3.ab3@9126>    BSR.w JL_0_6CE2
0002651A <AmiBlitz3.ab3@9127>   MOVEM.l (A7)+,D2-D3/A2-A3
00026520 <AmiBlitz3.ab3@9128>   MOVE.w dontwrite,D0
00026524 <AmiBlitz3.ab3@9129>    BEQ.w JL_0_6CBE
00026526 <AmiBlitz3.ab3@9132>   MOVEA.l (A3),A3
00026528 <AmiBlitz3.ab3@9133>   CMPA.l D3,A3
0002652C <AmiBlitz3.ab3@9134>    BNE.w JL_0_6CB2
00026530 <AmiBlitz3.ab3@9135> BRA.w JL_0_6CCC
00026534 <AmiBlitz3.ab3@9138>   MOVEA.l $4(A3),A0
00026536 <AmiBlitz3.ab3@9139>   MOVE.l D7,(A0)
00026538 <AmiBlitz3.ab3@9140>   MOVEA.l (A3),A3
0002653A <AmiBlitz3.ab3@9141>   CMPA.l D3,A3
0002653E <AmiBlitz3.ab3@9142>    BNE.w JL_0_6CBE
00026540 <AmiBlitz3.ab3@9145>   MOVE.l (A7)+,D3
00026544 <AmiBlitz3.ab3@9146> BRA.w JL_0_6C88
00026546 <AmiBlitz3.ab3@9149>    MOVEA.l (A2),A2
00026548 <AmiBlitz3.ab3@9150>   CMPA.l D2,A2
0002654C <AmiBlitz3.ab3@9151>    BNE.w JL_0_6C86
0002654E <AmiBlitz3.ab3@9152>   MOVE.l (A7)+,D2
00026552 <AmiBlitz3.ab3@9153> BRA.w JL_0_6C78
00026554 <AmiBlitz3.ab3@9156> RTS
00026556 <AmiBlitz3.ab3@9160>   MOVE.w D2,-(A7)
0002655A <AmiBlitz3.ab3@9161>    BSR.w searchinstr
0002655C <AmiBlitz3.ab3@9162>   MOVE.w (A7)+,D2
00026564 <AmiBlitz3.ab3@9163>   BCLR #$7,blitzmode
00026568 <AmiBlitz3.ab3@9164>   BCLR #$E,D2
0002656C <AmiBlitz3.ab3@9165>    BEQ.w JL_0_6D02
00026574 <AmiBlitz3.ab3@9166>   BSET #$7,blitzmode
00026576 <AmiBlitz3.ab3@9169>   TST.w (A3)
0002657A <AmiBlitz3.ab3@9170>    BEQ.w JL_0_6DAC
00026580 <AmiBlitz3.ab3@9171>   BTST #$2,$1(A3)
00026584 <AmiBlitz3.ab3@9172>    BNE.w tokeerr
0002658A <AmiBlitz3.ab3@9173>   BTST #$3,$1(A3)
0002658E <AmiBlitz3.ab3@9174>    BNE.w tokeerr
00026592 <AmiBlitz3.ab3@9175>   LEA $6(A3),A3
00026594 <AmiBlitz3.ab3@9178>   MOVE.w (A3)+,D0
00026598 <AmiBlitz3.ab3@9179>    BMI.w tokeerr
0002659C <AmiBlitz3.ab3@9180>   ANDI.w #$FF,D0
0002659E <AmiBlitz3.ab3@9181>   ADDA.w D0,A3
000265A0 <AmiBlitz3.ab3@9182>   ADDQ.w #1,A3
000265A2 <AmiBlitz3.ab3@9183>   EXG.l D0,A3
000265A6 <AmiBlitz3.ab3@9184>   BCLR #$0,D0
000265A8 <AmiBlitz3.ab3@9185>   EXG.l D0,A3
000265AA <AmiBlitz3.ab3@9186>   SUBQ.w #1,D2
000265AE <AmiBlitz3.ab3@9187>    BPL.w JL_0_6D98
000265B0 <AmiBlitz3.ab3@9188>   TST.w (A3)
000265B4 <AmiBlitz3.ab3@9189>    BNE.w JL_0_6D76
000265B8 <AmiBlitz3.ab3@9190>   MOVE.l $2(A3),D0
000265BC <AmiBlitz3.ab3@9191>   OR.l $A(A3),D0
000265C0 <AmiBlitz3.ab3@9192>    BNE.w JL_0_6D76
000265C6 <AmiBlitz3.ab3@9193>   BTST #$0,$9(A3)
000265CA <AmiBlitz3.ab3@9194>    BNE.w JL_0_6D76
000265CE <AmiBlitz3.ab3@9195>   MOVE.l $6(A3),D7
000265D2 <AmiBlitz3.ab3@9196>   MOVE.w $0(A2,D7.L),D0
000265D6 <AmiBlitz3.ab3@9197>   ANDI.w #$F000,D0
000265DA <AmiBlitz3.ab3@9198>   CMP.w #-$6000,D0
000265DE <AmiBlitz3.ab3@9199>    BEQ.w JL_0_6D76
000265E2 <AmiBlitz3.ab3@9202>   SUB.l $12(A2),D7
000265E6 <AmiBlitz3.ab3@9203>   ADD.l $28(A2),D7
000265E8 <AmiBlitz3.ab3@9204> RTS
000265EE <AmiBlitz3.ab3@9208>   LEA cutejsr,A0
000265F4 <AmiBlitz3.ab3@9211>   MOVE.l destpointer,-(A7)
000265FC <AmiBlitz3.ab3@9212>   MOVE.w #$FFFF,lasta6
000265FE <AmiBlitz3.ab3@9215>    JSR (A0)
00026602 <AmiBlitz3.ab3@9216>   MOVE.w #$4E75,D1
00026606 <AmiBlitz3.ab3@9217>    BSR.w writeword
00026608 <AmiBlitz3.ab3@9218>   MOVE.l (A7)+,D7
0002660A <AmiBlitz3.ab3@9219> RTS
0002660C <AmiBlitz3.ab3@9223>   TST.w (A3)+
00026610 <AmiBlitz3.ab3@9224>    BEQ.w JL_0_6DA4
00026612 <AmiBlitz3.ab3@9225>   ADDQ.w #2,A3
00026616 <AmiBlitz3.ab3@9226> BRA.w JL_0_6D98
0002661A <AmiBlitz3.ab3@9229>   LEA $C(A3),A3
0002661E <AmiBlitz3.ab3@9230> BRA.w JL_0_6D20
00026620 <AmiBlitz3.ab3@9234>   TST.w D2
00026624 <AmiBlitz3.ab3@9235>    BNE.w tokeerr
00026628 <AmiBlitz3.ab3@9236>   TST.w $6(A3)
0002662C <AmiBlitz3.ab3@9237>    BNE.w JL_0_6DE4
00026630 <AmiBlitz3.ab3@9238>   MOVE.l $8(A3),D0
00026634 <AmiBlitz3.ab3@9239>   OR.l $10(A3),D0
00026638 <AmiBlitz3.ab3@9240>    BNE.w JL_0_6DE4
0002663E <AmiBlitz3.ab3@9241>   BTST #$0,$F(A3)
00026642 <AmiBlitz3.ab3@9242>    BNE.w JL_0_6DE4
00026646 <AmiBlitz3.ab3@9243>   MOVE.l $C(A3),D7
0002664A <AmiBlitz3.ab3@9244>   MOVE.w $0(A2,D7.L),D0
0002664E <AmiBlitz3.ab3@9245>   ANDI.w #$F000,D0
00026652 <AmiBlitz3.ab3@9246>   CMP.w #-$6000,D0
00026656 <AmiBlitz3.ab3@9247>    BNE.w JL_0_6D6C
00026658 <AmiBlitz3.ab3@9250>   MOVE.l A3,D1
0002665A <AmiBlitz3.ab3@9251>   SUB.l A2,D1
00026660 <AmiBlitz3.ab3@9252>   LEA Amakelibsub,A0
00026664 <AmiBlitz3.ab3@9253> BRA.w JL_0_6D7C
0002666A <AmiBlitz3.ab3@9257>   MOVEA.l _execbase,A6
00026670 <AmiBlitz3.ab3@9258>   MOVEA.l tokeslist,A2
00026676 <AmiBlitz3.ab3@9259>   CLR.l tokeslist
0002667A <AmiBlitz3.ab3@9262>     CMPA.w #$0,A2
0002667E <AmiBlitz3.ab3@9263>      BEQ.w JL_0_6E32
00026682 <AmiBlitz3.ab3@9264>     MOVEA.l $8(A2),A3
00026686 <AmiBlitz3.ab3@9267>       CMPA.w #$0,A3
0002668A <AmiBlitz3.ab3@9268>        BEQ.w JL_0_6E24
0002668C <AmiBlitz3.ab3@9269>       MOVEA.l A3,A1
0002668E <AmiBlitz3.ab3@9270>       MOVEA.l (A3),A3
00026690 <AmiBlitz3.ab3@9271>       MOVEQ.l #$08,D0
00026696 <AmiBlitz3.ab3@9272>       MOVE.l mempool,a0
0002669C <AmiBlitz3.ab3@9273>       MOVEA.l _execbase,A6
000266A0 <AmiBlitz3.ab3@9274>       JSR _FreePooled(A6)
000266A4 <AmiBlitz3.ab3@9275> BRA.w JL_0_6E0E
000266A6 <AmiBlitz3.ab3@9278>     MOVEA.l A2,A1
000266A8 <AmiBlitz3.ab3@9279>     MOVEA.l (A2),A2
000266AA <AmiBlitz3.ab3@9280>     MOVEQ.l #$0C,D0
000266B0 <AmiBlitz3.ab3@9281>     MOVE.l mempool,a0
000266B6 <AmiBlitz3.ab3@9282>     MOVEA.l _execbase,A6
000266BA <AmiBlitz3.ab3@9283>     JSR _FreePooled(A6)
000266BE <AmiBlitz3.ab3@9284> BRA.w JL_0_6E02
000266C0 <AmiBlitz3.ab3@9287> RTS
000266C4 <AmiBlitz3.ab3@9291>   MOVEM.l D3-D5/A1-A6,-(A7)
000266C6 <AmiBlitz3.ab3@9292>   MOVEA.l A1,A4
000266C8 <AmiBlitz3.ab3@9295>   MOVE.l (A2)+,D3
000266CC <AmiBlitz3.ab3@9296>   MOVE.w $0(A4,D3.L),D5
000266D0 <AmiBlitz3.ab3@9297>    BPL.w JL_0_6E7A
000266D4 <AmiBlitz3.ab3@9298>   TST.l $2C(A4)
000266D8 <AmiBlitz3.ab3@9299>    BEQ.w JL_0_6E5E
000266DE <AmiBlitz3.ab3@9300>   TST.b debugmode
000266E2 <AmiBlitz3.ab3@9301>    BNE.w JL_0_6E5E
000266E6 <AmiBlitz3.ab3@9302>   CMP.l $2C(A4),D3
000266EA <AmiBlitz3.ab3@9303>    BCC.w JL_0_6E7A
000266EE <AmiBlitz3.ab3@9306>   BCLR #$F,D5
000266F2 <AmiBlitz3.ab3@9307>   MOVE.w $2(A4,D3.L),D4
000266F6 <AmiBlitz3.ab3@9308>   SUB.l $12(A4),D3
000266FA <AmiBlitz3.ab3@9309>   ADD.l $28(A4),D3
000266FE <AmiBlitz3.ab3@9310>   MOVEM.l D2/A2/A4,-(A7)
00026702 <AmiBlitz3.ab3@9311>    BSR.w JL_0_6E86
00026706 <AmiBlitz3.ab3@9312>   MOVEM.l (A7)+,D2/A2/A4
00026708 <AmiBlitz3.ab3@9315>   SUBQ.l #1,D2
0002670C <AmiBlitz3.ab3@9316>    BNE.w JL_0_6E3A
00026710 <AmiBlitz3.ab3@9317>   MOVEM.l (A7)+,D3-D5/A1-A6
00026712 <AmiBlitz3.ab3@9318> RTS
00026718 <AmiBlitz3.ab3@9322>   LEA tokeslist,A3
0002671E <AmiBlitz3.ab3@9323>   MOVEA.l _execbase,A6
00026720 <AmiBlitz3.ab3@9326>   MOVE.l (A3),D0
00026724 <AmiBlitz3.ab3@9327>    BEQ.w JL_0_6EAC
00026726 <AmiBlitz3.ab3@9328>   MOVEA.l D0,A3
0002672A <AmiBlitz3.ab3@9329>   CMP.w $4(A3),D4
0002672E <AmiBlitz3.ab3@9330>    BNE.w JL_0_6E90
00026732 <AmiBlitz3.ab3@9331>   CMP.w $6(A3),D5
00026736 <AmiBlitz3.ab3@9332>    BNE.w JL_0_6E90
0002673A <AmiBlitz3.ab3@9333> BRA.w JL_0_6ED0
0002673C <AmiBlitz3.ab3@9336>   MOVEQ.l #$0C,D0
0002673E <AmiBlitz3.ab3@9337>   MOVEQ.l #$01,D1
00026744 <AmiBlitz3.ab3@9338>   MOVE.l mempool,a0
00026748 <AmiBlitz3.ab3@9339>   JSR _AllocPooled(a6)
0002674A <AmiBlitz3.ab3@9341>   MOVEA.l D0,A3
00026750 <AmiBlitz3.ab3@9342>   MOVE.l tokeslist,(A3)
00026756 <AmiBlitz3.ab3@9343>   MOVE.l A3,tokeslist
0002675A <AmiBlitz3.ab3@9344>   MOVE.w D4,$4(A3)
0002675E <AmiBlitz3.ab3@9345>   MOVE.w D5,$6(A3)
00026762 <AmiBlitz3.ab3@9346>   CLR.l $8(A3)
00026764 <AmiBlitz3.ab3@9349>   MOVEQ.l #$08,D0
00026766 <AmiBlitz3.ab3@9350>   MOVEQ.l #$01,D1
0002676C <AmiBlitz3.ab3@9351>   MOVE.l mempool,a0
00026770 <AmiBlitz3.ab3@9352>   JSR _AllocPooled(a6)
00026772 <AmiBlitz3.ab3@9354>   MOVEA.l D0,A0
00026776 <AmiBlitz3.ab3@9355>   MOVE.l D3,$4(A0)
0002677A <AmiBlitz3.ab3@9356>   MOVE.l $8(A3),(A0)
0002677E <AmiBlitz3.ab3@9357>   MOVE.l A0,$8(A3)
00026780 <AmiBlitz3.ab3@9358>   MOVE.w D4,D1
00026784 <AmiBlitz3.ab3@9359> BRA.w searchinstr
00026788 <AmiBlitz3.ab3@9362> tokeslist: Ds.l 1
0002678C <AmiBlitz3.ab3@9375>   BEQ.w uselib2_org__skip
0002678E <AmiBlitz3.ab3@9376>   MOVE.l A1,-(A7)
00026790 <AmiBlitz3.ab3@9377>   ADDA.l D1,A1
00026792 <AmiBlitz3.ab3@9378>   ADDQ.w #6,A1
00026794 <AmiBlitz3.ab3@9381>     MOVE.w (A1)+,D1
00026798 <AmiBlitz3.ab3@9382>     BEQ.w uselib2_org__done
0002679A <AmiBlitz3.ab3@9383>     CMP.w D2,D1
0002679E <AmiBlitz3.ab3@9384>     BEQ.w uselib2_org__skip2
000267A0 <AmiBlitz3.ab3@9385>     MOVE.l A1,-(A7)
000267A4 <AmiBlitz3.ab3@9386>     BSR.w uselib
000267A6 <AmiBlitz3.ab3@9387>     MOVEA.l (A7)+,A1
000267A8 <AmiBlitz3.ab3@9390>     ADDQ.w #2,A1
000267AC <AmiBlitz3.ab3@9391> BRA.w uselib2_org__loop
000267AE <AmiBlitz3.ab3@9394>   MOVEA.l (A7)+,A1
000267B0 <AmiBlitz3.ab3@9397> RTS
000267B6 <AmiBlitz3.ab3@9401>   MOVEA.l libpointer,A1
000267BA <AmiBlitz3.ab3@9404>   CMPA.w #$0,A1
000267BE <AmiBlitz3.ab3@9405>    BEQ.b JL_0_6F36
000267C2 <AmiBlitz3.ab3@9406>   CMP.w $4(A1),D1
000267C6 <AmiBlitz3.ab3@9407>    BEQ.w JL_0_6F34
000267C8 <AmiBlitz3.ab3@9408>   MOVEA.l (A1),A1
000267CC <AmiBlitz3.ab3@9409> BRA.w JL_0_6F20
000267CE <AmiBlitz3.ab3@9412>   MOVEQ.l #-$01,D1
000267D0 <AmiBlitz3.ab3@9415> RTS
000267D4 <AmiBlitz3.ab3@9419>   MOVEM.l d0/a2,-(a7)
000267D6 <AmiBlitz3.ab3@9420>   MOVEQ #0,d0
000267DC <AmiBlitz3.ab3@9421>   LEA instrtab+4,a2
000267DE <AmiBlitz3.ab3@9422>   MOVE.w d1,d0
000267E0 <AmiBlitz3.ab3@9423>   ASL.l #3,d0
000267E4 <AmiBlitz3.ab3@9424>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000267EA <AmiBlitz3.ab3@9425>   CMP.l #0,a1
000267EE <AmiBlitz3.ab3@9426>   BNE JL_0_6F54b
000267F4 <AmiBlitz3.ab3@9428>   MOVEA.l libpointer,A1
000267F8 <AmiBlitz3.ab3@9431>     CMPA.w #$0,A1
000267FC <AmiBlitz3.ab3@9432>     BEQ.w noliberr
00026800 <AmiBlitz3.ab3@9433>     CMP.w $4(A1),D1
00026804 <AmiBlitz3.ab3@9434>     BEQ.w JL_0_6F54
00026806 <AmiBlitz3.ab3@9435>    MOVEA.l (A1),A1
0002680A <AmiBlitz3.ab3@9436> BRA.w JL_0_6F3E
0002680E <AmiBlitz3.ab3@9439>   MOVE.l a1,0(a2,d0.l)
00026812 <AmiBlitz3.ab3@9442>   MOVEM.l (a7)+,d0/a2
00026814 <AmiBlitz3.ab3@9443> RTS
00026818 <AmiBlitz3.ab3@9446>   MOVEM.l d0-d1/a1,-(a7)
0002681A <AmiBlitz3.ab3@9447>   MOVEQ #0,d0
00026820 <AmiBlitz3.ab3@9448>   LEA instrtab,a1
00026822 <AmiBlitz3.ab3@9449>   MOVE.w d1,d0
00026824 <AmiBlitz3.ab3@9450>   ASL.l #3,d0
00026828 <AmiBlitz3.ab3@9451>   MOVE.l 0(a1,d0.l),a3
0002682C <AmiBlitz3.ab3@9452>   MOVE.l 4(a1,d0.l),a2
00026832 <AmiBlitz3.ab3@9453>   CMP.l #0,a3
00026836 <AmiBlitz3.ab3@9454>   BNE JL_0_6F92b
0002683C <AmiBlitz3.ab3@9456>   MOVEA.l libpointer,A2
00026840 <AmiBlitz3.ab3@9459>   CMPA.w #$0,A2
00026844 <AmiBlitz3.ab3@9460>   BEQ.w notokerr
00026848 <AmiBlitz3.ab3@9461>   CMP.w $E(A2),D1
0002684C <AmiBlitz3.ab3@9462>   BCS.w JL_0_6FB8
00026850 <AmiBlitz3.ab3@9463>   CMP.w $10(A2),D1
00026854 <AmiBlitz3.ab3@9464>   BCC.w JL_0_6FB8
00026858 <AmiBlitz3.ab3@9465>   LEA $30(A2),A3
0002685C <AmiBlitz3.ab3@9466>   TST.w $4(A2)
00026860 <AmiBlitz3.ab3@9467>   BPL.w JL_0_6FA6
00026864 <AmiBlitz3.ab3@9470>     CMP.w $E(A2),D1
00026868 <AmiBlitz3.ab3@9471>     BEQ.w JL_0_6F92
0002686A <AmiBlitz3.ab3@9472>     SUBQ.w #1,D1
0002686E <AmiBlitz3.ab3@9473>     MOVEA.l $2(A3),A3
00026872 <AmiBlitz3.ab3@9474> BRA.w JL_0_6F80
00026876 <AmiBlitz3.ab3@9477>   MOVE.l a3,0(a1,d0.l)
0002687A <AmiBlitz3.ab3@9478>   MOVE.l a2,4(a1,d0.l)
0002687E <AmiBlitz3.ab3@9481>   MOVEM.l (a7)+,d0-d1/a1
00026882 <AmiBlitz3.ab3@9482>   MOVEM.l D1/A1-a3,-(A7)
00026886 <AmiBlitz3.ab3@9483>   CMP.w #1,(a3)
0002688A <AmiBlitz3.ab3@9484>   BNE.s ex10
00026892 <AmiBlitz3.ab3@9485>   CMP.l #$12345678,$e(a3)
00026896 <AmiBlitz3.ab3@9486>   BNE.s ex10
0002689C <AmiBlitz3.ab3@9487>   CMP.w #$ffff,$16(a3)
000268A0 <AmiBlitz3.ab3@9488>   BNE.s ex10
000268A4 <AmiBlitz3.ab3@9489>   MOVE.l $12(a3),d1
000268A8 <AmiBlitz3.ab3@9490>   BEQ.s ex10
000268AE <AmiBlitz3.ab3@9491>   LEA pluginbase,a3
000268B2 <AmiBlitz3.ab3@9493> JMP 0(a2,d1.l)                                             ;plugin
000268B6 <AmiBlitz3.ab3@9496>   MOVEM.l (A7)+,D1/A1-a3
000268BC <AmiBlitz3.ab3@9497>   JSR stripspaces
000268BE <AmiBlitz3.ab3@9498>   MOVEQ #0,d0
000268C0 <AmiBlitz3.ab3@9499>   MOVE.b (a5)+,d0
000268C6 <AmiBlitz3.ab3@9500>   MOVE.w d0,lastchar
000268C8 <AmiBlitz3.ab3@9501>   ADDQ.l #4,a7
000268CA <AmiBlitz3.ab3@9502> RTS
000268CC <AmiBlitz3.ab3@9506>   MOVEA.l A2,A1
000268D2 <AmiBlitz3.ab3@9507>   CLR.b newmode
000268D6 <AmiBlitz3.ab3@9508>   MOVE.w $4(A1),D1
000268DA <AmiBlitz3.ab3@9511>   BSR.w uselib3
000268DE <AmiBlitz3.ab3@9512>   MOVEM.l (A7)+,D1/A1-a3
000268E0 <AmiBlitz3.ab3@9513> RTS
000268E6 <AmiBlitz3.ab3@9516>   MOVE.w globalvarpointer,-(a7)
000268EE <AmiBlitz3.ab3@9517>   MOVE.w #$8004,globalvarpointer
000268F2 <AmiBlitz3.ab3@9518>   BSR.w uselib3
000268F8 <AmiBlitz3.ab3@9519>   MOVE.w (a7)+,globalvarpointer
000268FC <AmiBlitz3.ab3@9520>   MOVEM.l (A7)+,D1/A1-a3
000268FE <AmiBlitz3.ab3@9521> RTS
00026902 <AmiBlitz3.ab3@9524>     CMP.w $E(A2),D1
00026906 <AmiBlitz3.ab3@9525>     BEQ.w JL_0_6F92
00026908 <AmiBlitz3.ab3@9526>     SUBQ.w #1,D1
0002690C <AmiBlitz3.ab3@9527>     MOVEA.l $2(A3),A3
00026910 <AmiBlitz3.ab3@9528> BRA.w JL_0_6FA6
00026912 <AmiBlitz3.ab3@9531>   MOVEA.l (A2),A2
00026916 <AmiBlitz3.ab3@9532> BRA.w JL_0_6F5C
0002691C <AmiBlitz3.ab3@9535> JMP writeword
00026920 <AmiBlitz3.ab3@9538> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026924 <AmiBlitz3.ab3@9539> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026928 <AmiBlitz3.ab3@9540> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0002692A <AmiBlitz3.ab3@9546>   TST.l D0
0002692E <AmiBlitz3.ab3@9547>   BEQ.w exit_loadlibsfile
00026930 <AmiBlitz3.ab3@9548>     MOVE.l D0,D6                                           ;d6=len
00026936 <AmiBlitz3.ab3@9549>     MOVEA.l _dosbase,A6
0002693C <AmiBlitz3.ab3@9550>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026940 <AmiBlitz3.ab3@9551>     JSR _Open(A6)
00026942 <AmiBlitz3.ab3@9552>     MOVE.l D0,D7
00026946 <AmiBlitz3.ab3@9553>     BEQ.w exit_loadlibsfile
00026948 <AmiBlitz3.ab3@9554>       MOVE.l D6,D0
0002694A <AmiBlitz3.ab3@9555>       MOVEQ.l #$01,D1
00026950 <AmiBlitz3.ab3@9556>       MOVEA.l _execbase,A6
00026956 <AmiBlitz3.ab3@9557>       MOVE.l mempool,a0
0002695A <AmiBlitz3.ab3@9558>       JSR _AllocPooled(a6)
0002695C <AmiBlitz3.ab3@9559>       MOVE.l D0,D5                                         ;start address
0002695E <AmiBlitz3.ab3@9561>       MOVE.l D7,D1                                         ; handle
00026960 <AmiBlitz3.ab3@9562>       MOVE.l D5,D2                                         ; buffer addr
00026962 <AmiBlitz3.ab3@9563>       MOVE.l D6,D3                                         ; size
00026968 <AmiBlitz3.ab3@9564>       MOVEA.l _dosbase,A6
0002696C <AmiBlitz3.ab3@9565>       JSR _Read(A6)
0002696E <AmiBlitz3.ab3@9566>       MOVE.l D7,D1
00026972 <AmiBlitz3.ab3@9567>       JSR _Close(A6)
00026974 <AmiBlitz3.ab3@9569>       MOVEA.l D5,A0                                        ; buffer addr
00026976 <AmiBlitz3.ab3@9575>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
0002697A <AmiBlitz3.ab3@9576>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
0002697E <AmiBlitz3.ab3@9577>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026980 <AmiBlitz3.ab3@9578>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026982 <AmiBlitz3.ab3@9579>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026984 <AmiBlitz3.ab3@9580>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026988 <AmiBlitz3.ab3@9581>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
0002698A <AmiBlitz3.ab3@9582>           ADD.l D0,D0                                      ;   verdoppele D0
0002698C <AmiBlitz3.ab3@9583>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026990 <AmiBlitz3.ab3@9584>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00026994 <AmiBlitz3.ab3@9585>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026998 <AmiBlitz3.ab3@9586>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
0002699A <AmiBlitz3.ab3@9587>           CMPA.l A0,A2
0002699E <AmiBlitz3.ab3@9588>           BCC.b JL_0_7010                                  ; wenn A0=>A2
000269A4 <AmiBlitz3.ab3@9589>             MOVE.l -$8(A2),$20(A1)                         ;
000269A8 <AmiBlitz3.ab3@9590>             MOVE.l A2,$24(A1)                              ;
000269AC <AmiBlitz3.ab3@9591> BRA.w JL_0_7010
000269AE <AmiBlitz3.ab3@9594>       MOVE.l D5,D0
000269B0 <AmiBlitz3.ab3@9597> RTS
000269DA <AmiBlitz3.ab3@9601>   !basic
00026A4E <AmiBlitz3.ab3@9602>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026A82 <AmiBlitz3.ab3@9603>    dos_Delete{tempmapping$}
00026AC6 <AmiBlitz3.ab3@9604>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026AE4 <AmiBlitz3.ab3@9605>   !asm
00026AEA <AmiBlitz3.ab3@9607>   LEA libpointer,A3
00026AF0 <AmiBlitz3.ab3@9611>   MOVE.l size_deflibs,D0
00026AF6 <AmiBlitz3.ab3@9612>   MOVE.l deflib,d1
00026AFA <AmiBlitz3.ab3@9613>   BEQ 'l1
00026AFE <AmiBlitz3.ab3@9614> BRA 'l2
00026B04 <AmiBlitz3.ab3@9617>   MOVE.l #str_path_deflibs,D1
00026B08 <AmiBlitz3.ab3@9620>   BSR.w load_libsfile
00026B0E <AmiBlitz3.ab3@9621>   MOVE.l D0,ptr_deflibs
00026B14 <AmiBlitz3.ab3@9624>   MOVE.l size_acidlibs,D0
00026B1A <AmiBlitz3.ab3@9625>   MOVE.l #str_path_acidlibs,D1
00026B1E <AmiBlitz3.ab3@9626>   BSR.w load_libsfile
00026B24 <AmiBlitz3.ab3@9627>   MOVE.l D0,ptr_acidlibs
00026B26 <AmiBlitz3.ab3@9631>   CLR.l (A3)
00026B2C <AmiBlitz3.ab3@9632>   MOVE.l A3,ptr_userlibs
00026B32 <AmiBlitz3.ab3@9637>   LEA str_libfilename,A0
00026B38 <AmiBlitz3.ab3@9638>   LEA str_path_userlibs,A1
00026B3A <AmiBlitz3.ab3@9641>     MOVE.b (A1)+,(A0)+
00026B3E <AmiBlitz3.ab3@9642>   BNE.b JL_0_708E
00026B40 <AmiBlitz3.ab3@9644>   SUBQ.w #1,A0
00026B44 <AmiBlitz3.ab3@9645>   MOVE.b #$2F,(A0)+
00026B46 <AmiBlitz3.ab3@9648>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026B4C <AmiBlitz3.ab3@9650>   LEA ptr_userlibs_list,A2
00026B52 <AmiBlitz3.ab3@9651>   MOVEA.l ptr_userlibs,A3
00026B58 <AmiBlitz3.ab3@9652>   MOVEA.l _dosbase,A6
00026B5A <AmiBlitz3.ab3@9657>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026B5E <AmiBlitz3.ab3@9658>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00026B60 <AmiBlitz3.ab3@9660>       CLR.l (A3)
00026B62 <AmiBlitz3.ab3@9661>       ADDQ.w #4,A7
00026B8C <AmiBlitz3.ab3@9662>       !basic
00026BA0 <AmiBlitz3.ab3@9663>       If fid<>-1
00026BAA <AmiBlitz3.ab3@9664>         file_Close{fid}
00026BB6 <AmiBlitz3.ab3@9665>         fid = -1
00026BD4 <AmiBlitz3.ab3@9667>       !asm
00026BD8 <AmiBlitz3.ab3@9668> BRA.w process_libraries
00026BDA <AmiBlitz3.ab3@9671>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00026BDE <AmiBlitz3.ab3@9672>       TST.w $4(A2)                                         ; naechste addresse pruefen
00026BE2 <AmiBlitz3.ab3@9673>     BEQ.b JL_0_70BA
00026BE6 <AmiBlitz3.ab3@9675>     LEA $6(A2),A1
00026BE8 <AmiBlitz3.ab3@9676>     MOVEA.l (A7),A0
00026BEA <AmiBlitz3.ab3@9679>       MOVE.b (A1)+,(A0)+
00026BEE <AmiBlitz3.ab3@9680>     BNE.w JL_0_70D4
00026BF0 <AmiBlitz3.ab3@9684>     MOVE.l A0,-(A7)
00026BF6 <AmiBlitz3.ab3@9685>     MOVE.l #str_libfilename,D1
00026BF8 <AmiBlitz3.ab3@9686>     MOVEQ.l #-$02,D2
00026BFE <AmiBlitz3.ab3@9687>     MOVEA.l _dosbase,A6
00026C02 <AmiBlitz3.ab3@9688>      JSR _Lock(A6)
00026C04 <AmiBlitz3.ab3@9689>     MOVE.l D0,D1
00026C08 <AmiBlitz3.ab3@9690>      BEQ.w JL_0_7156
00026C0A <AmiBlitz3.ab3@9691>     MOVEA.l (A7),A0
00026C10 <AmiBlitz3.ab3@9692>     MOVE.b #$2F,-$1(A0)
00026C12 <AmiBlitz3.ab3@9695>     MOVE.l D1,-(A7)
00026C18 <AmiBlitz3.ab3@9696>     MOVE.l #ptr_parameterstore,D2
00026C1E <AmiBlitz3.ab3@9697>     MOVEA.l _dosbase,A6
00026C22 <AmiBlitz3.ab3@9698>     JSR _Examine(A6)
00026C24 <AmiBlitz3.ab3@9699>     TST.l D0
00026C28 <AmiBlitz3.ab3@9700>      BEQ.w JL_0_7150
00026C2E <AmiBlitz3.ab3@9703>     LEA fib_FileName,A0
00026C32 <AmiBlitz3.ab3@9704>     BSR.w check_for_infoextention
00026C36 <AmiBlitz3.ab3@9705>     BEQ.w JL_0_7150
00026C60 <AmiBlitz3.ab3@9708>     !basic
00026CE4 <AmiBlitz3.ab3@9709>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00026D02 <AmiBlitz3.ab3@9710>     !asm
00026D08 <AmiBlitz3.ab3@9711>     MOVE.l #str_libfilename,D1
00026D0C <AmiBlitz3.ab3@9712>     BSR.w open_userlibfile
00026D0E <AmiBlitz3.ab3@9715>     MOVE.l (A7)+,D1
00026D14 <AmiBlitz3.ab3@9716>     MOVEA.l _dosbase,A6
00026D18 <AmiBlitz3.ab3@9717>     JSR _UnLock(A6)
00026D1A <AmiBlitz3.ab3@9720>     ADDQ.w #4,A7
00026D1E <AmiBlitz3.ab3@9721> BRA.w JL_0_70BA
00026D24 <AmiBlitz3.ab3@9724>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026D2A <AmiBlitz3.ab3@9725>   MOVEA.l _dosbase,A6
00026D2E <AmiBlitz3.ab3@9726>    JSR _Open(A6)
00026D30 <AmiBlitz3.ab3@9727>   MOVE.l D0,D7
00026D34 <AmiBlitz3.ab3@9728>    BEQ.w exit_userlibfile
00026D36 <AmiBlitz3.ab3@9731>   MOVE.l D7,D1                                             ; filehandle
00026D3C <AmiBlitz3.ab3@9732>   MOVE.l #optstuff,D2                                     ; buffer
00026D42 <AmiBlitz3.ab3@9733>   MOVEA.l _dosbase,A6
00026D44 <AmiBlitz3.ab3@9734>   MOVEQ.l #$20,D3                                          ; size
00026D48 <AmiBlitz3.ab3@9735>   JSR _Read(A6)
00026D4E <AmiBlitz3.ab3@9738>   MOVE.l optstuff+28,D6
00026D50 <AmiBlitz3.ab3@9739>   LSL.l #2,D6
00026D52 <AmiBlitz3.ab3@9740>   MOVE.l D6,D0
00026D54 <AmiBlitz3.ab3@9741>   MOVEQ.l #$01,D1
00026D5A <AmiBlitz3.ab3@9742>   MOVEA.l _execbase,A6
00026D60 <AmiBlitz3.ab3@9743>   MOVE.l mempool,a0
00026D64 <AmiBlitz3.ab3@9744>   JSR _AllocPooled(a6)
00026D66 <AmiBlitz3.ab3@9745>   MOVEA.l D0,A5
00026D6C <AmiBlitz3.ab3@9748>   MOVEA.l _dosbase,A6
00026D6E <AmiBlitz3.ab3@9749>   MOVE.l D7,D1                                             ; filehandle
00026D70 <AmiBlitz3.ab3@9750>   MOVE.l A5,D2                                             ; buffer
00026D72 <AmiBlitz3.ab3@9751>   MOVE.l D6,D3                                             ; size
00026D76 <AmiBlitz3.ab3@9752>    JSR _Read(A6)
00026D78 <AmiBlitz3.ab3@9753>   MOVE.l A5,(A3)
00026D7A <AmiBlitz3.ab3@9755>   MOVE.l A5,d0
00026D7C <AmiBlitz3.ab3@9757>   MOVEA.l A5,A3
00026D80 <AmiBlitz3.ab3@9758>   MOVE.l D6,$6(A5)
00026D84 <AmiBlitz3.ab3@9759>   CLR.l $20(A5)
00026DAE <AmiBlitz3.ab3@9761>   !basic
00026DB8 <AmiBlitz3.ab3@9763>   addr_libnum.l = PutD0 + 4
00026DCC <AmiBlitz3.ab3@9764>   If fid<>-1
00026E6C <AmiBlitz3.ab3@9765>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00026E9E <AmiBlitz3.ab3@9766>     file_WriteLine{fid,currentlib$}
00026EBC <AmiBlitz3.ab3@9768>   !asm
00026EBE <AmiBlitz3.ab3@9771>   MOVE.l D7,D1                                             ; filehandle
00026EC4 <AmiBlitz3.ab3@9772>   MOVE.l #optstuff,D2                                     ; buffer
00026EC6 <AmiBlitz3.ab3@9773>   MOVEQ.l #$0C,D3                                          ; size
00026ECC <AmiBlitz3.ab3@9774>   MOVEA.l _dosbase,A6
00026ED0 <AmiBlitz3.ab3@9775>    JSR _Read(A6)
00026ED6 <AmiBlitz3.ab3@9777>   CMP.l #$C,D0
00026EDA <AmiBlitz3.ab3@9778>    BCS.w close_and_exit_userlibfile
00026EE0 <AmiBlitz3.ab3@9781>   MOVE.l optstuff+4,D0
00026EE4 <AmiBlitz3.ab3@9782>   MOVE.l D0,$20(A5)
00026EE6 <AmiBlitz3.ab3@9783>   LSL.l #2,D0
00026EE8 <AmiBlitz3.ab3@9784>   MOVE.l D0,D5
00026EEA <AmiBlitz3.ab3@9785>   MOVEQ.l #$01,D1
00026EF0 <AmiBlitz3.ab3@9786>   MOVEA.l _execbase,A6
00026EF6 <AmiBlitz3.ab3@9787>   MOVE.l mempool,a0
00026EFA <AmiBlitz3.ab3@9788>   JSR _AllocPooled(a6)
00026F00 <AmiBlitz3.ab3@9790>   MOVEA.l _dosbase,A6
00026F04 <AmiBlitz3.ab3@9791>   MOVE.l D0,$24(A5)
00026F06 <AmiBlitz3.ab3@9792>   MOVE.l D7,D1
00026F08 <AmiBlitz3.ab3@9793>   MOVE.l D0,D2
00026F0A <AmiBlitz3.ab3@9794>   MOVE.l D5,D3
00026F0E <AmiBlitz3.ab3@9795>   JSR _Read(A6)
00026F10 <AmiBlitz3.ab3@9798>   MOVE.l D7,D1
00026F16 <AmiBlitz3.ab3@9799>   MOVEA.l _dosbase,A6
00026F1A <AmiBlitz3.ab3@9800> JMP _Close(A6)
00026F1C <AmiBlitz3.ab3@9803> RTS
00026F22 <AmiBlitz3.ab3@9809>   CLR.w number_of_objects
00026F28 <AmiBlitz3.ab3@9810>   MOVEA.l end_of_tokenlist,A3
00026F2E <AmiBlitz3.ab3@9811>   MOVEA.l libpointer,A2
00026F32 <AmiBlitz3.ab3@9814>     CMPA.w #$0,A2
00026F36 <AmiBlitz3.ab3@9815>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00026F3A <AmiBlitz3.ab3@9817>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00026F3E <AmiBlitz3.ab3@9818>     BMI.w JL_0_7226
00026F40 <AmiBlitz3.ab3@9819>       LSL.w #7,D7
00026F42 <AmiBlitz3.ab3@9820>       ADDQ.w #1,D7
00026F46 <AmiBlitz3.ab3@9821>       MOVE.w D7,$E(A2)
00026F4A <AmiBlitz3.ab3@9824>     LEA $30(A2),A1
00026F50 <AmiBlitz3.ab3@9825>     LEA temp1,A4
00026F52 <AmiBlitz3.ab3@9828>       MOVE.w (A1),D0
00026F56 <AmiBlitz3.ab3@9829>       BMI.w JL_0_72AE
00026F58 <AmiBlitz3.ab3@9830>       MOVE.l A1,(A4)
00026F5A <AmiBlitz3.ab3@9831>       MOVEA.l A1,A4
00026F5C <AmiBlitz3.ab3@9832>       ADDQ.w #2,A4
00026F5E <AmiBlitz3.ab3@9833>       ADDQ.w #6,A1
00026F62 <AmiBlitz3.ab3@9834>       CMP.w #$8,D0
00026F66 <AmiBlitz3.ab3@9835>       BEQ.w JL_0_7290
00026F6A <AmiBlitz3.ab3@9836>         ANDI.w #$F,D0
00026F6E <AmiBlitz3.ab3@9837>         BNE.w JL_0_725C
00026F72 <AmiBlitz3.ab3@9838>           BSR.w skiplibreg
00026F76 <AmiBlitz3.ab3@9839>           LEA $C(A1),A1
00026F78 <AmiBlitz3.ab3@9840>           ADDQ.w #1,D7
00026F7C <AmiBlitz3.ab3@9841> BRA.w JL_0_7230
00026F80 <AmiBlitz3.ab3@9844>     BTST #$2,D0
00026F84 <AmiBlitz3.ab3@9845>     BEQ.w JL_0_7274
00026F86 <AmiBlitz3.ab3@9846>       ADDQ.w #4,A1
00026F88 <AmiBlitz3.ab3@9849>         TST.b (A1)+
00026F8C <AmiBlitz3.ab3@9850>       BPL.w JL_0_7266
00026F90 <AmiBlitz3.ab3@9851>       BSR.w aligna1
00026F94 <AmiBlitz3.ab3@9852> BRA.w JL_0_7290
00026F96 <AmiBlitz3.ab3@9855>       MOVE.w (A1)+,D0
00026F9A <AmiBlitz3.ab3@9856>       BMI.w JL_0_7290
00026F9E <AmiBlitz3.ab3@9857>       ANDI.w #$FF,D0
00026FA0 <AmiBlitz3.ab3@9858>       ADDA.w D0,A1
00026FA4 <AmiBlitz3.ab3@9859>       BSR.w aligna1
00026FA8 <AmiBlitz3.ab3@9860>       BSR.w skiplibreg
00026FAC <AmiBlitz3.ab3@9861>       LEA $C(A1),A1
00026FB0 <AmiBlitz3.ab3@9862> BRA.w JL_0_7274
00026FB2 <AmiBlitz3.ab3@9865>     MOVE.l A1,(A3)
00026FB4 <AmiBlitz3.ab3@9866>     MOVEA.l A1,A3
00026FB6 <AmiBlitz3.ab3@9867>     ADDQ.w #4,A1
00026FB8 <AmiBlitz3.ab3@9868>     MOVE.w D7,(A1)+
00026FBA <AmiBlitz3.ab3@9871>       TST.b (A1)+
00026FBE <AmiBlitz3.ab3@9872>     BNE.w JL_0_7298
00026FC0 <AmiBlitz3.ab3@9875>       TST.b (A1)+
00026FC4 <AmiBlitz3.ab3@9876>     BNE.w JL_0_729E
00026FC8 <AmiBlitz3.ab3@9878>     BSR.w aligna1
00026FCA <AmiBlitz3.ab3@9879>     ADDQ.w #1,D7
00026FCE <AmiBlitz3.ab3@9880> BRA.w JL_0_7230
00026FD2 <AmiBlitz3.ab3@9883>     TST.w $4(A2)
00026FD6 <AmiBlitz3.ab3@9884>      BMI.w JL_0_72BA
00026FDA <AmiBlitz3.ab3@9885>     MOVE.w D7,$10(A2)
00026FDC <AmiBlitz3.ab3@9888>     ADDQ.w #2,A1
00026FDE <AmiBlitz3.ab3@9889>     TST.l (A1)+
00026FE2 <AmiBlitz3.ab3@9890>      BEQ.w JL_0_72CC
00026FE8 <AmiBlitz3.ab3@9891>     ADDQ.w #1,number_of_objects
00026FEC <AmiBlitz3.ab3@9892>     LEA $16(A1),A1
00026FEE <AmiBlitz3.ab3@9895>     SUBA.l A2,A1
00026FF2 <AmiBlitz3.ab3@9896>     MOVE.l A1,$12(A2)
00026FF4 <AmiBlitz3.ab3@9897>     MOVEA.l (A2),A2
00026FF8 <AmiBlitz3.ab3@9898> BRA.w JL_0_720E
00026FFA <AmiBlitz3.ab3@9901>   CLR.l (A3)
00027000 <AmiBlitz3.ab3@9902> 
00027006 <AmiBlitz3.ab3@9903>   MOVE.l A7,errstack
00027010 <AmiBlitz3.ab3@9904>   MOVE.l #AL_0_730E,errcont
00027018 <AmiBlitz3.ab3@9905>   MOVE.w #$FFFF,ezerr
0002701C <AmiBlitz3.ab3@9906>   MOVE.w #$FFFA,D1
00027020 <AmiBlitz3.ab3@9907>    BSR.w JL_0_6F38
00027026 <AmiBlitz3.ab3@9908>   MOVE.l A1,tempvm
0002702A <AmiBlitz3.ab3@9909>   MOVE.w #$FDA7,D1
0002702E <AmiBlitz3.ab3@9910>    BSR.w JL_0_6F38
00027034 <AmiBlitz3.ab3@9911>   MOVE.l A1,ffplib
00027036 <AmiBlitz3.ab3@9914> RTS
0002703A <AmiBlitz3.ab3@9917> ffplib:  Ds.l 1
0002703C <AmiBlitz3.ab3@9921>     TST.w (A1)+
00027040 <AmiBlitz3.ab3@9922>     BEQ.w JL_0_7320
00027042 <AmiBlitz3.ab3@9923>     ADDQ.w #2,A1
00027046 <AmiBlitz3.ab3@9924> BRA.w skiplibreg
00027048 <AmiBlitz3.ab3@9927> RTS
0002704A <AmiBlitz3.ab3@9931>   EXG.l A1,A0
0002704E <AmiBlitz3.ab3@9932>   BSR.w aligna1
00027050 <AmiBlitz3.ab3@9933>   EXG.l A1,A0
00027052 <AmiBlitz3.ab3@9934> RTS
00027054 <AmiBlitz3.ab3@9937>   EXG.l D0,A1
00027056 <AmiBlitz3.ab3@9938>   ADDQ.l #1,D0
0002705A <AmiBlitz3.ab3@9939>   BCLR #$0,D0
0002705C <AmiBlitz3.ab3@9940>   EXG.l D0,A1
0002705E <AmiBlitz3.ab3@9941> RTS
00027064 <AmiBlitz3.ab3@9945>   MOVEA.l _execbase,A6
0002706A <AmiBlitz3.ab3@9946>   MOVEA.l ptr_userlibs,A2
0002706C <AmiBlitz3.ab3@9947>   MOVE.l (A2),D0
0002706E <AmiBlitz3.ab3@9948>   CLR.l (A2)
00027070 <AmiBlitz3.ab3@9949>   MOVEA.l D0,A2
00027074 <AmiBlitz3.ab3@9952>     CMPA.w #$0,A2
00027078 <AmiBlitz3.ab3@9953>     BEQ.w free_userlib
0002707C <AmiBlitz3.ab3@9955>     MOVE.l $20(A2),D0
00027080 <AmiBlitz3.ab3@9956>     BEQ.b JL_0_7360
00027082 <AmiBlitz3.ab3@9957>       LSL.l #2,D0
00027088 <AmiBlitz3.ab3@9958>       MOVE.l mempool,a0
0002708C <AmiBlitz3.ab3@9959>       MOVEA.l $24(A2),A1
00027090 <AmiBlitz3.ab3@9960>       JSR _FreePooled(A6)
00027092 <AmiBlitz3.ab3@9963>     MOVEA.l A2,A1
00027096 <AmiBlitz3.ab3@9964>     MOVE.l $6(A1),D0
0002709C <AmiBlitz3.ab3@9965>     MOVE.l mempool,a0
0002709E <AmiBlitz3.ab3@9966>     MOVEA.l (A2),A2
000270A4 <AmiBlitz3.ab3@9967>     MOVEA.l _execbase,A6
000270A8 <AmiBlitz3.ab3@9968>     JSR _FreePooled(A6)
000270AC <AmiBlitz3.ab3@9969> BRA.w JL_0_7348
000270B0 <AmiBlitz3.ab3@9973>   BSR.w free_userlibs
000270B6 <AmiBlitz3.ab3@9974>   MOVEA.l _execbase,A6
000270BC <AmiBlitz3.ab3@9975>   CLR.l libpointer
000270C2 <AmiBlitz3.ab3@9976>   MOVEA.l end_of_tokenlist,A0
000270C4 <AmiBlitz3.ab3@9977>   CLR.l (A0)
000270CA <AmiBlitz3.ab3@9979>   MOVE.l size_acidlibs,D0
000270CE <AmiBlitz3.ab3@9980>   BEQ.b JL_0_73A2
000270D4 <AmiBlitz3.ab3@9981>     MOVE.l ptr_acidlibs,D1
000270D8 <AmiBlitz3.ab3@9982>     BEQ.b JL_0_73A2
000270DE <AmiBlitz3.ab3@9983>       CLR.l ptr_acidlibs
000270E0 <AmiBlitz3.ab3@9984>       MOVEA.l D1,A1
000270E6 <AmiBlitz3.ab3@9985>       MOVE.l mempool,a0
000270EC <AmiBlitz3.ab3@9986>       MOVEA.l _execbase,A6
000270F0 <AmiBlitz3.ab3@9987>       JSR _FreePooled(A6)                                 ; free acidlibs
000270F6 <AmiBlitz3.ab3@9990>   MOVE.l size_deflibs,D0
000270FA <AmiBlitz3.ab3@9991>   BEQ.b JL_0_73BE
00027100 <AmiBlitz3.ab3@9992>     MOVE.l ptr_deflibs,D1
00027104 <AmiBlitz3.ab3@9993>     BEQ.b JL_0_73BE
0002710A <AmiBlitz3.ab3@9994>       CLR.l ptr_deflibs                                    ; d0: memorySize
0002710C <AmiBlitz3.ab3@9995>       MOVEA.l D1,A1                                        ; a1: memory
00027112 <AmiBlitz3.ab3@9996>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027118 <AmiBlitz3.ab3@9997>       MOVEA.l _execbase,A6
0002711C <AmiBlitz3.ab3@9998>       JSR _FreePooled(A6)                                  ; free deflibs
0002711E <AmiBlitz3.ab3@10001> RTS
00027124 <AmiBlitz3.ab3@10005>   MOVEA.l currentmacroaddr,A0
00027126 <AmiBlitz3.ab3@10006>   MOVEA.l (A0),A2
00027128 <AmiBlitz3.ab3@10007>   CLR.l (A0)
0002712E <AmiBlitz3.ab3@10008>   MOVEA.l _execbase,A6
00027132 <AmiBlitz3.ab3@10011>     CMPA.w #$0,A2
00027136 <AmiBlitz3.ab3@10012>     BEQ.w JL_0_73FA
00027138 <AmiBlitz3.ab3@10013>     MOVEQ.l #$00,D0
0002713C <AmiBlitz3.ab3@10014>     MOVE.w $8(A2),D0
00027140 <AmiBlitz3.ab3@10015>     BEQ.w JL_0_73E8
00027144 <AmiBlitz3.ab3@10016>     MOVEA.l $4(A2),A1
0002714A <AmiBlitz3.ab3@10017>     MOVE.l mempool,a0
0002714E <AmiBlitz3.ab3@10018>     JSR _FreePooled(A6)
00027150 <AmiBlitz3.ab3@10021>     MOVEA.l A2,A1
00027152 <AmiBlitz3.ab3@10022>     MOVEA.l (A2),A2
00027154 <AmiBlitz3.ab3@10023>     MOVEQ.l #$00,D0
00027158 <AmiBlitz3.ab3@10024>     MOVE.b $C(A1),D0
0002715E <AmiBlitz3.ab3@10025>     MOVE.l mempool2,a0
00027162 <AmiBlitz3.ab3@10026>     JSR _FreePooled(A6)
00027166 <AmiBlitz3.ab3@10027> BRA.w JL_0_73CE
00027168 <AmiBlitz3.ab3@10030> RTS
0002716E <AmiBlitz3.ab3@10034>   MOVEA.l templabel,A2
00027174 <AmiBlitz3.ab3@10035>   CLR.l templabel
00027176 <AmiBlitz3.ab3@10036> RTS
0002717C <AmiBlitz3.ab3@10039>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027180 <AmiBlitz3.ab3@10042>     CMPA.w #$0,A2
00027184 <AmiBlitz3.ab3@10043>     BEQ.w JL_0_7426
00027186 <AmiBlitz3.ab3@10044>     MOVEQ.l #$00,D0
0002718A <AmiBlitz3.ab3@10045>     MOVE.b $E(A2),D0                                       ;labeltemp
0002718C <AmiBlitz3.ab3@10046>     MOVEA.l A2,A1
0002718E <AmiBlitz3.ab3@10047>     MOVEA.l (A2),A2
00027194 <AmiBlitz3.ab3@10048>     MOVE.l mempool2,a0
00027198 <AmiBlitz3.ab3@10050> BRA.w JL_0_740C
0002719A <AmiBlitz3.ab3@10053> RTS
000271A0 <AmiBlitz3.ab3@10057>   MOVEA.l data1,A4
000271A6 <AmiBlitz3.ab3@10058>   CMPA.l data2at,A4
000271AA <AmiBlitz3.ab3@10059>   BCC.w JL_0_7442
000271AC <AmiBlitz3.ab3@10060>     MOVE.b D1,(A4)+
000271B2 <AmiBlitz3.ab3@10061>     MOVE.l A4,data1
000271B4 <AmiBlitz3.ab3@10062> RTS
000271BC <AmiBlitz3.ab3@10065>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
000271C2 <AmiBlitz3.ab3@10066>   ADDQ.l #1,data1
000271C4 <AmiBlitz3.ab3@10067> RTS
000271C6 <AmiBlitz3.ab3@10071>   SWAP D1
000271CA <AmiBlitz3.ab3@10072>   BSR.w pokedata1
000271CC <AmiBlitz3.ab3@10073>   SWAP D1
000271D2 <AmiBlitz3.ab3@10076>   MOVEA.l data1,A4
000271D8 <AmiBlitz3.ab3@10077>   CMPA.l data2at,A4
000271DC <AmiBlitz3.ab3@10078>    BCC.w JL_0_7474
000271DE <AmiBlitz3.ab3@10079>   MOVE.w D1,(A4)+
000271E4 <AmiBlitz3.ab3@10080>   MOVE.l A4,data1
000271E6 <AmiBlitz3.ab3@10081> RTS
000271EE <AmiBlitz3.ab3@10084>   MOVE.w #$FFFF,dontwrite
000271F4 <AmiBlitz3.ab3@10085>   ADDQ.l #2,data1
000271F6 <AmiBlitz3.ab3@10086> RTS
000271FC <AmiBlitz3.ab3@10090>   MOVE.l data1,D3                                      ;write local string/type allocs
000271FE <AmiBlitz3.ab3@10091>   MOVEQ.l #$00,D4
00027202 <AmiBlitz3.ab3@10094>   CMPA.w #$0,A2
00027206 <AmiBlitz3.ab3@10095>    BEQ.w JL_0_74CAc
0002720A <AmiBlitz3.ab3@10096>   TST.w $6(A2)
0002720E <AmiBlitz3.ab3@10097>    BNE.w JL_0_74C4c
00027212 <AmiBlitz3.ab3@10098>   MOVEA.l $A(A2),A3
0002721A <AmiBlitz3.ab3@10099>   CMPI.l #$100,$4(A3)
0002721E <AmiBlitz3.ab3@10100>    BCS.w JL_0_74C4c
00027222 <AmiBlitz3.ab3@10101>   MOVE.w $4(A2),D1
00027226 <AmiBlitz3.ab3@10102>    BSR.w pokedata1
0002722A <AmiBlitz3.ab3@10103>   MOVE.w $8(A3),D1
0002722E <AmiBlitz3.ab3@10104>    BSR.w pokedata1
00027230 <AmiBlitz3.ab3@10105>   ADDQ.w #1,D4
00027232 <AmiBlitz3.ab3@10108>    MOVEA.l (A2),A2
00027236 <AmiBlitz3.ab3@10109> BRA.w JL_0_7492c
00027238 <AmiBlitz3.ab3@10112>    TST.w D4
0002723C <AmiBlitz3.ab3@10113>    BEQ.w JL_0_74E0
00027240 <AmiBlitz3.ab3@10114>   MOVE.w #$FF37,D1
00027244 <AmiBlitz3.ab3@10115>    BSR.w uselib
00027248 <AmiBlitz3.ab3@10116>   MOVE.w #$FFFA,D1
0002724C <AmiBlitz3.ab3@10117> BRA.w uselib
00027252 <AmiBlitz3.ab3@10125>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027258 <AmiBlitz3.ab3@10128>   MOVE.l data1,D3
0002725A <AmiBlitz3.ab3@10129>   MOVEQ.l #$00,D4
00027260 <AmiBlitz3.ab3@10130>   TST.b iserror
00027264 <AmiBlitz3.ab3@10131>   BEQ JL_0_7492
00027266 <AmiBlitz3.ab3@10132>   RTS
0002726A <AmiBlitz3.ab3@10134>    CMPA.w #$0,A2
0002726E <AmiBlitz3.ab3@10135>    BEQ.w JL_0_74CA
00027272 <AmiBlitz3.ab3@10136>   TST.w $6(A2)
00027276 <AmiBlitz3.ab3@10137>    BNE.w JL_0_74C4
0002727A <AmiBlitz3.ab3@10138>   MOVEA.l $A(A2),A3
00027282 <AmiBlitz3.ab3@10139>   CMPI.l #$100,$4(A3)
00027286 <AmiBlitz3.ab3@10140>    BCS.w JL_0_74C4
0002728A <AmiBlitz3.ab3@10141>   MOVE.w $4(A2),D1
0002728E <AmiBlitz3.ab3@10142>    BSR.w pokedata1
00027292 <AmiBlitz3.ab3@10143>   MOVE.w $8(A3),D1
00027296 <AmiBlitz3.ab3@10144>    BSR.w pokedata1
00027298 <AmiBlitz3.ab3@10145>   ADDQ.w #1,D4
0002729A <AmiBlitz3.ab3@10148>   MOVEA.l (A2),A2
0002729E <AmiBlitz3.ab3@10149> BRA.w JL_0_7492
000272A4 <AmiBlitz3.ab3@10153>   MOVEA.l sharebase,A2
000272A8 <AmiBlitz3.ab3@10156>   CMPA.w #$0,A2
000272AC <AmiBlitz3.ab3@10157>    BEQ.w JL_0_74CAb
000272B0 <AmiBlitz3.ab3@10159>   TST.w $6(A2)
000272B4 <AmiBlitz3.ab3@10160>    BNE.w JL_0_74C4b
000272B8 <AmiBlitz3.ab3@10161>   MOVEA.l $A(A2),A3
000272C0 <AmiBlitz3.ab3@10162>   CMPI.l #$100,$4(A3)
000272C4 <AmiBlitz3.ab3@10163>    BCS.w JL_0_74C4b
000272C8 <AmiBlitz3.ab3@10164>   MOVE.w $4(A2),D1
000272CC <AmiBlitz3.ab3@10165>    BSR.w pokedata1
000272D0 <AmiBlitz3.ab3@10166>   MOVE.w $8(A3),D1
000272D4 <AmiBlitz3.ab3@10167>    BSR.w pokedata1
000272D6 <AmiBlitz3.ab3@10168>   ADDQ.w #1,D4
000272D8 <AmiBlitz3.ab3@10171>   MOVEA.l (A2),A2
000272DC <AmiBlitz3.ab3@10172> BRA.w JL_0_7492b
000272DE <AmiBlitz3.ab3@10175>    TST.w D4
000272E2 <AmiBlitz3.ab3@10176>    BEQ.w JL_0_74E0
000272E6 <AmiBlitz3.ab3@10177>   MOVE.w #$FF37,D1
000272EA <AmiBlitz3.ab3@10178>    BSR.w uselib                                            ;use statics lib
000272EE <AmiBlitz3.ab3@10179>   MOVE.w #$FFFA,D1                                         ;use memlib
000272F2 <AmiBlitz3.ab3@10180> BRA.w uselib
000272F4 <AmiBlitz3.ab3@10183> RTS
000272FA <AmiBlitz3.ab3@10187>   MOVE.w numtoa2,D1
000272FE <AmiBlitz3.ab3@10188>    BSR.w writeword
00027302 <AmiBlitz3.ab3@10189>    BSR.w addoff
00027304 <AmiBlitz3.ab3@10190>   MOVE.l D3,D1
00027308 <AmiBlitz3.ab3@10191>    BSR.w writelong
0002730A <AmiBlitz3.ab3@10192>   SUBQ.w #1,D4
00027310 <AmiBlitz3.ab3@10193>   MOVE.w D4,endarray+2
00027316 <AmiBlitz3.ab3@10194>   MOVE.l endarray,D1
0002731A <AmiBlitz3.ab3@10195> BRA.w writelong
0002731C <AmiBlitz3.ab3@10199>   MOVE.l D3,-(A7)
00027322 <AmiBlitz3.ab3@10202>   MOVEA.l _dosbase,A6
00027326 <AmiBlitz3.ab3@10203>   JSR _Write(a6)
00027328 <AmiBlitz3.ab3@10205>   CMP.l (A7)+,D0
0002732C <AmiBlitz3.ab3@10206>    BNE.w JL_0_7516
0002732E <AmiBlitz3.ab3@10207> RTS
00027330 <AmiBlitz3.ab3@10210>   MOVE.l D7,D1
00027336 <AmiBlitz3.ab3@10212>   MOVEA.l _dosbase,A6
0002733A <AmiBlitz3.ab3@10213>   JSR _Close(a6)
00027340 <AmiBlitz3.ab3@10216> JMP error_create_exe
00027346 <AmiBlitz3.ab3@10225> 
0002734C <AmiBlitz3.ab3@10226>   MOVE.l A7,errstack
00027350 <AmiBlitz3.ab3@10227>   MOVEM.l d2-d7/a2-a6,-(a7)
0002735A <AmiBlitz3.ab3@10228>   MOVE.l #AL_0_7790,errcont
00027360 <AmiBlitz3.ab3@10229>    JSR call_setpointerbusy
00027368 <AmiBlitz3.ab3@10230>   MOVE.w #$FFFF,anyerrs
00027372 <AmiBlitz3.ab3@10231>   CMP.l #-1,chipstart
00027376 <AmiBlitz3.ab3@10232>   BEQ 'l01
0002737C <AmiBlitz3.ab3@10233>   MOVE.l chipend,d1
0002737E <AmiBlitz3.ab3@10234>   ADDQ.l #3,d1
00027384 <AmiBlitz3.ab3@10235>   AND.l #$fffffffc,d1                                      ;bug
0002738A <AmiBlitz3.ab3@10236>   MOVE.l d1,chipend
0002738C <AmiBlitz3.ab3@10237>   MOVE.l d1,a1
00027392 <AmiBlitz3.ab3@10238>   MOVE.l chipstart,a0
00027394 <AmiBlitz3.ab3@10239>   MOVE.l a1,d1
00027396 <AmiBlitz3.ab3@10240>   SUB.l a0,d1
0002739C <AmiBlitz3.ab3@10241>   MOVE.l d1,chipsize
000273A6 <AmiBlitz3.ab3@10244>   CMP.l #-1,bssstart
000273AA <AmiBlitz3.ab3@10245>   BEQ 'l11
000273B0 <AmiBlitz3.ab3@10246>   MOVE.l realbssend,a1
000273B6 <AmiBlitz3.ab3@10247>   MOVE.l bssstart,a0
000273B8 <AmiBlitz3.ab3@10248>   MOVE.l a1,d1
000273BA <AmiBlitz3.ab3@10249>   SUB.l a0,d1
000273C0 <AmiBlitz3.ab3@10250>   MOVE.l d1,bsssize
000273C4 <AmiBlitz3.ab3@10251>   BEQ 'l11
000273C6 <AmiBlitz3.ab3@10254>   TST.b (a0)+
000273CA <AmiBlitz3.ab3@10255>   BEQ 'l31
000273D0 <AmiBlitz3.ab3@10256>   TST.b debugmode
000273D4 <AmiBlitz3.ab3@10257>   BEQ 'l1
000273DA <AmiBlitz3.ab3@10258>   TST.b exdebug
000273DE <AmiBlitz3.ab3@10259>   BNE 'l31
000273E4 <AmiBlitz3.ab3@10262>   MOVE.l #nodata,-(a7)
000273EA <AmiBlitz3.ab3@10263> JMP handle_compileerror
000273EC <AmiBlitz3.ab3@10266>   CMP.l a0,a1
000273F0 <AmiBlitz3.ab3@10267>   BGT 'l32
000273F6 <AmiBlitz3.ab3@10268>   MOVE.l bssend,d1
000273F8 <AmiBlitz3.ab3@10269>   ADDQ.l #3,d1
000273FE <AmiBlitz3.ab3@10270>   AND.l #$fffffffc,d1                                      ;bug
00027404 <AmiBlitz3.ab3@10271>   MOVE.l d1,bssend
00027406 <AmiBlitz3.ab3@10272>   MOVE.l d1,a1
0002740C <AmiBlitz3.ab3@10273>   MOVE.l bssstart,a0
0002740E <AmiBlitz3.ab3@10274>   MOVE.l a1,d1
00027410 <AmiBlitz3.ab3@10275>   SUB.l a0,d1
00027416 <AmiBlitz3.ab3@10276>   MOVE.l d1,bsssize
0002741A <AmiBlitz3.ab3@10279>   MOVEM.l d5-d7/d3,-(a7)
00027420 <AmiBlitz3.ab3@10280>   MOVE.w dontwrite,D1
00027424 <AmiBlitz3.ab3@10281>   BNE.w JL_0_757C
0002742A <AmiBlitz3.ab3@10282>   MOVE.l chipsize,d5
00027430 <AmiBlitz3.ab3@10283>   MOVE.l bsssize,d3
00027436 <AmiBlitz3.ab3@10284>   MOVE.l chipstart,d7
0002743C <AmiBlitz3.ab3@10285>   MOVE.l bssstart,d6
00027442 <AmiBlitz3.ab3@10286>   MOVEA.l hunkoffsetbase,A2
00027448 <AmiBlitz3.ab3@10287>   MOVEA.l destbufferstart,A1
0002744A <AmiBlitz3.ab3@10288>   MOVE.l A1,D2
00027450 <AmiBlitz3.ab3@10289>   ADD.l noinits,D2
00027456 <AmiBlitz3.ab3@10290>   CLR.l hunkoffsetnum
0002745A <AmiBlitz3.ab3@10293>   CMPA.w #$0,A2
0002745E <AmiBlitz3.ab3@10294>    BEQ.w JL_0_757C
00027462 <AmiBlitz3.ab3@10295>   MOVE.l $4(A2),D0
00027466 <AmiBlitz3.ab3@10296>    LEA $0(a1,d0.l),a0
00027468 <AmiBlitz3.ab3@10297>    MOVE.l (a0),d1
0002746A <AmiBlitz3.ab3@10298>   TST.l d1
0002746E <AmiBlitz3.ab3@10299>    BMI.w 'lm1
00027476 <AmiBlitz3.ab3@10300>   MOVE.b #0,newhunk
00027480 <AmiBlitz3.ab3@10301>   CMP.l #-1,chipstart
00027484 <AmiBlitz3.ab3@10302>   BEQ 'l10
0002748A <AmiBlitz3.ab3@10303>   CMP.l chipstart,d1
0002748E <AmiBlitz3.ab3@10304>   BLT 'l10
00027496 <AmiBlitz3.ab3@10305>   MOVE.b #1,newhunk
0002749C <AmiBlitz3.ab3@10306>   CMP.l chipend,d1
000274A0 <AmiBlitz3.ab3@10307>   BGE 'l110
000274A2 <AmiBlitz3.ab3@10308>   SUB.l d7,(a0)
000274AA <AmiBlitz3.ab3@10309>   ADD.l #$80000000,4(a2)
000274AE <AmiBlitz3.ab3@10310> BRA JL_0_7576
000274B2 <AmiBlitz3.ab3@10313>   SUB.l d5,0(a0)
000274BC <AmiBlitz3.ab3@10316>   CMP.l #-1,bssstart
000274C0 <AmiBlitz3.ab3@10317>     BEQ 'l11
000274C6 <AmiBlitz3.ab3@10318>   CMP.l bssstart,d1
000274CA <AmiBlitz3.ab3@10319>   BLT 'l11
000274D0 <AmiBlitz3.ab3@10320>   CMP.l bssend,d1
000274D4 <AmiBlitz3.ab3@10321>   BGE 'l111
000274DA <AmiBlitz3.ab3@10322>   TST.b newhunk
000274DE <AmiBlitz3.ab3@10323>   BEQ 'ln1
000274E0 <AmiBlitz3.ab3@10324>   ADD.l d5,(a0)
000274E2 <AmiBlitz3.ab3@10327>   SUB.l d6,(a0)
000274EA <AmiBlitz3.ab3@10328>   ADD.l #$40000000,4(a2)
000274EE <AmiBlitz3.ab3@10329> BRA JL_0_7576
000274F2 <AmiBlitz3.ab3@10332>   SUB.l d3,0(a0)
000274F4 <AmiBlitz3.ab3@10335>   SUB.l D2,(A0)
000274FA <AmiBlitz3.ab3@10338>   ADDQ.l #1,hunkoffsetnum
000274FC <AmiBlitz3.ab3@10341>    MOVEA.l (A2),A2
00027500 <AmiBlitz3.ab3@10342> BRA.w JL_0_755E
00027504 <AmiBlitz3.ab3@10346>   MOVEM.l (a7)+,d5-d7/d3
0002750A <AmiBlitz3.ab3@10347>   MOVE.l ptr_newexefilename,D1
00027510 <AmiBlitz3.ab3@10348>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027516 <AmiBlitz3.ab3@10349>   MOVEA.l _dosbase,A6
0002751A <AmiBlitz3.ab3@10350>    JSR _Open(A6)
0002751C <AmiBlitz3.ab3@10351>   MOVE.l D0,D7
00027520 <AmiBlitz3.ab3@10352>    BEQ.w execerr
00027526 <AmiBlitz3.ab3@10353>   MOVE.l objlen,D0
0002752C <AmiBlitz3.ab3@10354>   SUB.l #moremem,d0
00027532 <AmiBlitz3.ab3@10355>   SUB.l noinits,D0
0002753C <AmiBlitz3.ab3@10356>   CMP.l #-1,bssstart
00027540 <AmiBlitz3.ab3@10357>   BEQ 'l60
00027546 <AmiBlitz3.ab3@10358>   SUB.l bsssize,d0
0002754C <AmiBlitz3.ab3@10359>   SUB.l chipsize,d0
00027550 <AmiBlitz3.ab3@10360> BRA.s 'l61
0002755A <AmiBlitz3.ab3@10363>   CMP.l #-1,chipstart
0002755E <AmiBlitz3.ab3@10364>   BEQ 'l61
00027564 <AmiBlitz3.ab3@10365>   SUB.l bsssize,d0
0002756A <AmiBlitz3.ab3@10366>   SUB.l chipsize,d0
0002756C <AmiBlitz3.ab3@10369>   ADDQ.l #3,D0
0002756E <AmiBlitz3.ab3@10370>   LSR.l #2,D0
00027574 <AmiBlitz3.ab3@10371>   MOVE.l D0,tstsize1
0002757A <AmiBlitz3.ab3@10372>   MOVE.l D0,tstsize2
0002757C <AmiBlitz3.ab3@10373>   MOVE.l D7,D1
00027582 <AmiBlitz3.ab3@10374>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027584 <AmiBlitz3.ab3@10375>   MOVEQ.l #$20,D3
0002758E <AmiBlitz3.ab3@10376>   CMP.l #-1,bssstart
00027592 <AmiBlitz3.ab3@10377>   BEQ 'lb1
0002759C <AmiBlitz3.ab3@10378>   CMP.l #-1,chipstart
000275A0 <AmiBlitz3.ab3@10379>   BEQ 'lb1
000275AA <AmiBlitz3.ab3@10380>   MOVE.l #1,bssnum
000275B4 <AmiBlitz3.ab3@10381>   MOVE.l #2,chipnum
000275B6 <AmiBlitz3.ab3@10382>   MOVEQ.l #$28,D3
000275BC <AmiBlitz3.ab3@10383>   MOVE.l bsssize,d2
000275BE <AmiBlitz3.ab3@10384>   ADDQ.l #3,d2
000275C0 <AmiBlitz3.ab3@10385>   ASR.l #2,d2
000275C6 <AmiBlitz3.ab3@10386>   MOVE.l d2,hunkend+8
000275CC <AmiBlitz3.ab3@10387>   MOVE.l d2,bsssize3
000275D2 <AmiBlitz3.ab3@10388>   MOVE.l chipsize,d2
000275D4 <AmiBlitz3.ab3@10389>   ADDQ.l #3,d2
000275D6 <AmiBlitz3.ab3@10390>   ASR.l #2,d2
000275DC <AmiBlitz3.ab3@10391>   MOVE.l d2,chipsize2
000275E6 <AmiBlitz3.ab3@10392>   ADD.l #$40000000,chipsize2
000275EC <AmiBlitz3.ab3@10393>   MOVE.l d2,hunkend2+8
000275F2 <AmiBlitz3.ab3@10394>   MOVE.l D0,tstsize1c
000275F8 <AmiBlitz3.ab3@10395>   MOVE.l D0,tstsize2c
000275FE <AmiBlitz3.ab3@10396>   MOVE.l #hunkbegin2,d2
00027602 <AmiBlitz3.ab3@10397> BRA 'l100
0002760C <AmiBlitz3.ab3@10400>   CMP.l #-1,bssstart
00027610 <AmiBlitz3.ab3@10401>   BEQ 'l10
0002761A <AmiBlitz3.ab3@10402>   MOVE.l #1,bssnum
0002761C <AmiBlitz3.ab3@10403>   MOVEQ.l #$24,D3
00027622 <AmiBlitz3.ab3@10404>   MOVE.l bsssize,d2
00027624 <AmiBlitz3.ab3@10405>   ADDQ.l #3,d2
00027626 <AmiBlitz3.ab3@10406>   ASR.l #2,d2
0002762C <AmiBlitz3.ab3@10407>   MOVE.l d2,hunkend+8
00027632 <AmiBlitz3.ab3@10408>   MOVE.l d2,bsssize2
00027638 <AmiBlitz3.ab3@10409>   MOVE.l D0,tstsize1b
0002763E <AmiBlitz3.ab3@10410>   MOVE.l D0,tstsize2b
00027644 <AmiBlitz3.ab3@10411>   MOVE.l #hunkbegin,d2
0002764E <AmiBlitz3.ab3@10414>   CMP.l #-1,chipstart
00027652 <AmiBlitz3.ab3@10415>   BEQ 'l100
0002765C <AmiBlitz3.ab3@10416>   MOVE.l #1,chipnum
0002765E <AmiBlitz3.ab3@10417>   MOVEQ.l #$24,D3
00027664 <AmiBlitz3.ab3@10418>   MOVE.l chipsize,d2
00027666 <AmiBlitz3.ab3@10419>   ADDQ.l #3,d2
00027668 <AmiBlitz3.ab3@10420>   ASR.l #2,d2
0002766E <AmiBlitz3.ab3@10421>   MOVE.l d2,hunkend2+8
00027674 <AmiBlitz3.ab3@10422>   MOVE.l d2,bsssize2
0002767E <AmiBlitz3.ab3@10423>   ADD.l #$40000000,bsssize2
00027684 <AmiBlitz3.ab3@10424>   MOVE.l D0,tstsize1b
0002768A <AmiBlitz3.ab3@10425>   MOVE.l D0,tstsize2b
00027690 <AmiBlitz3.ab3@10426>   MOVE.l #hunkbegin,d2
00027694 <AmiBlitz3.ab3@10429>    BSR.w mywrite
0002769A <AmiBlitz3.ab3@10430>   MOVE.l destbufferstart,D2
000276A0 <AmiBlitz3.ab3@10431>   ADD.l noinits,D2
000276A6 <AmiBlitz3.ab3@10432>   MOVE.l objlen,D3
000276AC <AmiBlitz3.ab3@10433>   SUB.l #moremem,d3
000276B2 <AmiBlitz3.ab3@10434>   SUB.l noinits,D3
000276BC <AmiBlitz3.ab3@10435>   CMP.l #-1,bssstart
000276C0 <AmiBlitz3.ab3@10436>   BNE 'l40
000276CA <AmiBlitz3.ab3@10437>   CMP.l #-1,chipstart
000276CE <AmiBlitz3.ab3@10438>   BNE 'l40
000276D2 <AmiBlitz3.ab3@10439> BRA 'l41
000276D8 <AmiBlitz3.ab3@10442>   MOVE.l codeend,d1
000276DA <AmiBlitz3.ab3@10443>     SUB.l d2,d1
000276DC <AmiBlitz3.ab3@10444>     MOVE.l d1,d3
000276E2 <AmiBlitz3.ab3@10445>   SUB.l bsssize,d3
000276E8 <AmiBlitz3.ab3@10446>   SUB.l chipsize,d3
000276EA <AmiBlitz3.ab3@10447>   MOVE.l D7,D1
000276EE <AmiBlitz3.ab3@10448>   BSR.w mywrite
000276F4 <AmiBlitz3.ab3@10449>   MOVE.l objlen,D3
000276FA <AmiBlitz3.ab3@10450>   SUB.l #moremem,d3
00027700 <AmiBlitz3.ab3@10451>   SUB.l noinits,D3
00027702 <AmiBlitz3.ab3@10452>   MOVE.l d3,d1
00027708 <AmiBlitz3.ab3@10453>   MOVE.l destbufferstart,D2
0002770E <AmiBlitz3.ab3@10454>   ADD.l noinits,D2
00027710 <AmiBlitz3.ab3@10455>   ADD.l d2,d1
00027716 <AmiBlitz3.ab3@10456>   SUB.l codeend,d1
00027718 <AmiBlitz3.ab3@10457>   MOVE.l d1,d3
0002771E <AmiBlitz3.ab3@10458>   MOVE.l codeend,d2
00027720 <AmiBlitz3.ab3@10461>   MOVE.l d2,d1
00027722 <AmiBlitz3.ab3@10462>   ADD.l d3,d1
00027724 <AmiBlitz3.ab3@10463>   ADDQ.l #3,D1
0002772A <AmiBlitz3.ab3@10464>   ANDI.l #$FFFFFFFC,D1
0002772C <AmiBlitz3.ab3@10465>   SUB.l d2,d1
0002772E <AmiBlitz3.ab3@10466>   MOVE.l d1,d3
00027730 <AmiBlitz3.ab3@10467>   MOVE.l D7,D1
00027734 <AmiBlitz3.ab3@10468>    BSR.w mywrite
0002773E <AmiBlitz3.ab3@10469>   MOVE.l hunkoffsetcounter,tstsize3
00027742 <AmiBlitz3.ab3@10470>    BEQ.w JL_0_7646
00027744 <AmiBlitz3.ab3@10471>   MOVE.l D7,D1
0002774A <AmiBlitz3.ab3@10472>   MOVE.l #tstend,D2
0002774C <AmiBlitz3.ab3@10473>   MOVEQ.l #$04,D3
00027750 <AmiBlitz3.ab3@10474>    BSR.w mywrite
00027756 <AmiBlitz3.ab3@10475>    MOVEA.l _execbase,A6
0002775C <AmiBlitz3.ab3@10476>    MOVE.l hunkoffsetcounter,d0
0002775E <AmiBlitz3.ab3@10477>    ASL.l #2,d0
00027764 <AmiBlitz3.ab3@10478>    ADD.l #12,d0
00027766 <AmiBlitz3.ab3@10479>    MOVEQ #0,d1
0002776A <AmiBlitz3.ab3@10480>    JSR _AllocMem(a6)
0002776C <AmiBlitz3.ab3@10481>    TST.l d0
00027770 <AmiBlitz3.ab3@10482>    BEQ nomem
00027776 <AmiBlitz3.ab3@10483>    MOVE.l noinits,D4
00027778 <AmiBlitz3.ab3@10484>    MOVE.l d5,-(a7)
0002777A <AmiBlitz3.ab3@10485>    MOVE.l d0,d5
0002777C <AmiBlitz3.ab3@10486>    MOVE.l d0,a1
00027782 <AmiBlitz3.ab3@10487>    MOVEA.l hunkoffsetbase,A2
0002778A <AmiBlitz3.ab3@10488>    MOVE.b #0,newhunk
0002778E <AmiBlitz3.ab3@10491>   CMPA.w #$0,A2
00027792 <AmiBlitz3.ab3@10492>    BEQ.w savehunk
00027798 <AmiBlitz3.ab3@10493>   MOVE.l destbufferstart,D2
0002779E <AmiBlitz3.ab3@10494>   ADD.l noinits,D2
000277A2 <AmiBlitz3.ab3@10495>   MOVE.l  $4(A2),d1
000277A6 <AmiBlitz3.ab3@10496>   BTST #31,d1
000277AA <AmiBlitz3.ab3@10497>   BEQ 'lh1
000277B2 <AmiBlitz3.ab3@10498>   MOVE.b #1,newhunk
000277B6 <AmiBlitz3.ab3@10499> BRA 'lh3
000277BA <AmiBlitz3.ab3@10502>   BTST #30,d1
000277BE <AmiBlitz3.ab3@10503>   BEQ 'lh2
000277C6 <AmiBlitz3.ab3@10504>   MOVE.b #1,newhunk
000277CA <AmiBlitz3.ab3@10505> BRA 'lh3
000277CC <AmiBlitz3.ab3@10508>   ADD.l d1,d2
000277D2 <AmiBlitz3.ab3@10509>   CMP.l chipend,d2
000277D6 <AmiBlitz3.ab3@10510>   BLT 'l100
000277DC <AmiBlitz3.ab3@10511>   SUB.l chipsize,d1
000277E2 <AmiBlitz3.ab3@10514>   CMP.l bssend,d2
000277E6 <AmiBlitz3.ab3@10515>   BLT 'l101
000277EC <AmiBlitz3.ab3@10516>   SUB.l bsssize,d1
000277EE <AmiBlitz3.ab3@10519>   MOVE.l d1,(a1)
000277F0 <AmiBlitz3.ab3@10520>   SUB.l D4,(A1)+
000277F2 <AmiBlitz3.ab3@10523>   MOVEA.l (A2),A2
000277F6 <AmiBlitz3.ab3@10524> BRA.w menu_createresidentfile__oloopb
000277F8 <AmiBlitz3.ab3@10528>   MOVE.l D7,D1
000277FE <AmiBlitz3.ab3@10529>   MOVEA.l _dosbase,A6
00027808 <AmiBlitz3.ab3@10530>   MOVE.l hunkoffsetnum,tstsize3
0002780C <AmiBlitz3.ab3@10531>   BEQ 'ln1
00027812 <AmiBlitz3.ab3@10532>   MOVE.l #tstend+4,d2
00027814 <AmiBlitz3.ab3@10533>     MOVEQ #8,d3
00027818 <AmiBlitz3.ab3@10534>    JSR _Write(A6)
0002781A <AmiBlitz3.ab3@10535>   MOVE.l d7,d1
00027820 <AmiBlitz3.ab3@10536>   MOVE.l hunkoffsetnum,d3
00027822 <AmiBlitz3.ab3@10537>   ASL.l #2,d3
00027824 <AmiBlitz3.ab3@10538>   MOVE.l d5,D2
00027828 <AmiBlitz3.ab3@10539>   JSR _Write(a6)
0002782E <AmiBlitz3.ab3@10542>   TST.b newhunk
00027832 <AmiBlitz3.ab3@10543>   BEQ 'l10
00027838 <AmiBlitz3.ab3@10544>   MOVEA.l hunkoffsetbase,A2
0002783A <AmiBlitz3.ab3@10545>   MOVE.l d5,a0
0002783C <AmiBlitz3.ab3@10546>   ADDQ #8,a0
00027844 <AmiBlitz3.ab3@10547>   MOVE.l bssnum,-4(a0)
00027846 <AmiBlitz3.ab3@10548>   MOVEQ #0,d6
0002784A <AmiBlitz3.ab3@10551>   CMPA.w #$0,A2
0002784E <AmiBlitz3.ab3@10552>    BEQ.w 'lh3
00027854 <AmiBlitz3.ab3@10553>   MOVE.l destbufferstart,D2
0002785A <AmiBlitz3.ab3@10554>   ADD.l noinits,D2
0002785E <AmiBlitz3.ab3@10555>   MOVE.l  $4(A2),d1
00027862 <AmiBlitz3.ab3@10556>   BTST #30,d1
00027866 <AmiBlitz3.ab3@10557>   BEQ 'lh1
0002786A <AmiBlitz3.ab3@10558>   BCLR #30,d1
0002786C <AmiBlitz3.ab3@10559>   MOVE.l d1,(a0)
0002786E <AmiBlitz3.ab3@10560>   SUB.l D4,(A0)+
00027870 <AmiBlitz3.ab3@10561>   ADDQ.l #1,d6
00027872 <AmiBlitz3.ab3@10564>   MOVE.l (a2),a2
00027876 <AmiBlitz3.ab3@10565> BRA 'lh2
00027878 <AmiBlitz3.ab3@10568>   TST.l d6
0002787C <AmiBlitz3.ab3@10569>     BEQ 'lh10
0002787E <AmiBlitz3.ab3@10570>     MOVE.l d5,a0
00027880 <AmiBlitz3.ab3@10571>     MOVE.l d6,(a0)
00027882 <AmiBlitz3.ab3@10572>     MOVE.l d7,d1
00027884 <AmiBlitz3.ab3@10573>     MOVE.l d5,d2
00027886 <AmiBlitz3.ab3@10574>     MOVE.l d6,d3
00027888 <AmiBlitz3.ab3@10575>     ASL.l #2,d3
0002788A <AmiBlitz3.ab3@10576>     ADDQ.l #8,d3
0002788E <AmiBlitz3.ab3@10577>     BSR.w mywrite
00027894 <AmiBlitz3.ab3@10580>   MOVEA.l hunkoffsetbase,A2
00027896 <AmiBlitz3.ab3@10581>   MOVE.l d5,a0
00027898 <AmiBlitz3.ab3@10582>   ADDQ #8,a0
000278A0 <AmiBlitz3.ab3@10583>   MOVE.l chipnum,-4(a0)
000278A2 <AmiBlitz3.ab3@10584>   MOVEQ #0,d6
000278A6 <AmiBlitz3.ab3@10587>   CMPA.w #$0,A2
000278AA <AmiBlitz3.ab3@10588>    BEQ.w 'lh30
000278B0 <AmiBlitz3.ab3@10589>   MOVE.l destbufferstart,D2
000278B6 <AmiBlitz3.ab3@10590>   ADD.l noinits,D2
000278BA <AmiBlitz3.ab3@10591>   MOVE.l  $4(A2),d1
000278BE <AmiBlitz3.ab3@10592>   BTST #31,d1
000278C2 <AmiBlitz3.ab3@10593>   BEQ 'lh11
000278C6 <AmiBlitz3.ab3@10594>   BCLR #31,d1
000278C8 <AmiBlitz3.ab3@10595>   MOVE.l d1,(a0)
000278CA <AmiBlitz3.ab3@10596>   SUB.l D4,(A0)+
000278CC <AmiBlitz3.ab3@10597>   ADDQ.l #1,d6
000278CE <AmiBlitz3.ab3@10600>   MOVE.l (a2),a2
000278D2 <AmiBlitz3.ab3@10601> BRA 'lh20
000278D4 <AmiBlitz3.ab3@10604>   TST.l d6
000278D8 <AmiBlitz3.ab3@10605>     BEQ 'l10
000278DA <AmiBlitz3.ab3@10606>     MOVE.l d5,a0
000278DC <AmiBlitz3.ab3@10607>     MOVE.l d6,(a0)
000278DE <AmiBlitz3.ab3@10608>     MOVE.l d7,d1
000278E0 <AmiBlitz3.ab3@10609>     MOVE.l d5,d2
000278E2 <AmiBlitz3.ab3@10610>     MOVE.l d6,d3
000278E4 <AmiBlitz3.ab3@10611>     ASL.l #2,d3
000278E6 <AmiBlitz3.ab3@10612>     ADDQ.l #8,d3
000278EA <AmiBlitz3.ab3@10613>     BSR.w mywrite
000278F0 <AmiBlitz3.ab3@10617>    MOVEA.l _execbase,A6
000278F6 <AmiBlitz3.ab3@10618>    MOVE.l hunkoffsetcounter,d0
000278F8 <AmiBlitz3.ab3@10619>    ASL.l #2,d0
000278FE <AmiBlitz3.ab3@10620>    ADD.l #12,d0
00027900 <AmiBlitz3.ab3@10621>    MOVE.l d5,a1
00027904 <AmiBlitz3.ab3@10622>    JSR _FreeMem(a6)
0002790A <AmiBlitz3.ab3@10623>    MOVEA.l _dosbase,A6
0002790C <AmiBlitz3.ab3@10624>    MOVE.l (a7)+,d5
00027910 <AmiBlitz3.ab3@10625> BRA JL_0_7632
00027916 <AmiBlitz3.ab3@10629>   MOVEA.l hunkoffsetbase,A2
0002791C <AmiBlitz3.ab3@10630>   MOVE.l noinits,D4
00027920 <AmiBlitz3.ab3@10633>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027924 <AmiBlitz3.ab3@10634>   BEQ.w JL_0_7632
00027928 <AmiBlitz3.ab3@10635>   LEA $4(A2),A1
0002792A <AmiBlitz3.ab3@10636>   SUB.l D4,(A1)
0002792C <AmiBlitz3.ab3@10637>   MOVE.l D7,D1
0002792E <AmiBlitz3.ab3@10638>   MOVE.l A1,D2
00027930 <AmiBlitz3.ab3@10639>   MOVEQ.l #$04,D3
00027934 <AmiBlitz3.ab3@10640>   BSR.w mywrite
00027938 <AmiBlitz3.ab3@10641>   ADD.l D4,$4(A2)
0002793A <AmiBlitz3.ab3@10642>   MOVEA.l (A2),A2
0002793E <AmiBlitz3.ab3@10643> BRA.w JL_0_7610
00027944 <AmiBlitz3.ab3@10646>   CLR.l tstsize3
00027946 <AmiBlitz3.ab3@10647>   MOVE.l D7,D1
0002794C <AmiBlitz3.ab3@10648>   MOVE.l #tstsize3,D2
0002794E <AmiBlitz3.ab3@10649>   MOVEQ.l #$04,D3
00027952 <AmiBlitz3.ab3@10650>    BSR.w mywrite
0002795A <AmiBlitz3.ab3@10653>   BTST #$7,link_debuginfo
0002795E <AmiBlitz3.ab3@10654>    BEQ.w JL_0_7706
00027964 <AmiBlitz3.ab3@10655>   MOVE.l #sysdebug,D2                                      ;debughunks
00027966 <AmiBlitz3.ab3@10656>   MOVEQ.l #$04,D3
00027968 <AmiBlitz3.ab3@10657>   MOVE.l D7,D1
0002796C <AmiBlitz3.ab3@10658>    BSR.w mywrite
00027972 <AmiBlitz3.ab3@10659>   MOVEA.l labelbase,A2
00027976 <AmiBlitz3.ab3@10662>   CMPA.w #$0,A2
0002797A <AmiBlitz3.ab3@10663>    BEQ.w JL_0_76F8
00027980 <AmiBlitz3.ab3@10664>   BTST #$0,$7(A2)
00027984 <AmiBlitz3.ab3@10665>    BEQ.w JL_0_7682
0002798C <AmiBlitz3.ab3@10666>   CMPI.l #$1,$4(A2)
00027990 <AmiBlitz3.ab3@10668>   BRA.w JL_0_76F2                                            ;only addr labels
00027992 <AmiBlitz3.ab3@10670>   MOVEQ.l #$00,D4
00027996 <AmiBlitz3.ab3@10671>   MOVE.b $12(A2),D4
0002799A <AmiBlitz3.ab3@10672>   SUBI.w #$13,D4
0002799C <AmiBlitz3.ab3@10673>   ADDQ.w #2,D4
000279A0 <AmiBlitz3.ab3@10674>   ANDI.w #$FFFC,D4
000279A2 <AmiBlitz3.ab3@10675>   MOVE.l D4,D5
000279A4 <AmiBlitz3.ab3@10676>   LSR.w #2,D5
000279AA <AmiBlitz3.ab3@10677>   MOVE.l D5,temp1
000279AC <AmiBlitz3.ab3@10678>   LSL.w #2,D5
000279B2 <AmiBlitz3.ab3@10679>   MOVE.l #temp1,a1
000279B8 <AmiBlitz3.ab3@10681>   LEA debugstore,a0
000279BA <AmiBlitz3.ab3@10682>   MOVE.l (a1),(a0)+
000279BC <AmiBlitz3.ab3@10683>   MOVEQ.l #$04,D3
000279C0 <AmiBlitz3.ab3@10686>   LEA $13(A2),A1
000279C2 <AmiBlitz3.ab3@10687>   MOVE.l d4,d1
000279C4 <AmiBlitz3.ab3@10688>   SUBQ.l #1,d1
000279C6 <AmiBlitz3.ab3@10691>     MOVE.b (a1)+,d0
000279CA <AmiBlitz3.ab3@10692>     BEQ 'l21
000279CE <AmiBlitz3.ab3@10693>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000279D2 <AmiBlitz3.ab3@10694>     BNE 'ok
000279D6 <AmiBlitz3.ab3@10695>     MOVE.b #"_",d0
000279D8 <AmiBlitz3.ab3@10696> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000279DC <AmiBlitz3.ab3@10697>   DBF d1,'l10
000279E0 <AmiBlitz3.ab3@10699> BRA 'l22
000279E2 <AmiBlitz3.ab3@10702>       CLR.b (a0)+
000279E6 <AmiBlitz3.ab3@10703>   DBF d1,'l21
000279E8 <AmiBlitz3.ab3@10706>   ADD.l d4,d3
000279EA <AmiBlitz3.ab3@10711>   SUB.l D4,D5
000279EE <AmiBlitz3.ab3@10712>    BEQ.w JL_0_76CE
000279F4 <AmiBlitz3.ab3@10713>   MOVE.l #zero,a1
000279F6 <AmiBlitz3.ab3@10715>   MOVE.l (a1),(a0)+
000279F8 <AmiBlitz3.ab3@10717>   ADD.l d5,d3
000279FC <AmiBlitz3.ab3@10722>   MOVE.l $8(A2),D2
00027A02 <AmiBlitz3.ab3@10723>   SUB.l destbufferstart,D2
00027A08 <AmiBlitz3.ab3@10724>   SUB.l noinits,D2
00027A0E <AmiBlitz3.ab3@10725>   MOVE.l D2,temp1
00027A14 <AmiBlitz3.ab3@10726>   MOVE.l #temp1,a1
00027A16 <AmiBlitz3.ab3@10728>   MOVE.l (a1),(a0)+
00027A1C <AmiBlitz3.ab3@10729>   ADD.l #4,d3
00027A22 <AmiBlitz3.ab3@10730>   LEA debugstore,a0
00027A24 <AmiBlitz3.ab3@10731>   MOVE.l a0,d2
00027A26 <AmiBlitz3.ab3@10733>   MOVE.l D7,D1
00027A2A <AmiBlitz3.ab3@10734>   BSR.w mywrite
00027A2C <AmiBlitz3.ab3@10737>   MOVEA.l (A2),A2
00027A30 <AmiBlitz3.ab3@10738> BRA.w JL_0_7664
00027A36 <AmiBlitz3.ab3@10742>   MOVE.l #zero,D2
00027A38 <AmiBlitz3.ab3@10743>   MOVEQ.l #$04,D3
00027A3A <AmiBlitz3.ab3@10744>   MOVE.l D7,D1
00027A3E <AmiBlitz3.ab3@10745>   BSR.w mywrite
00027A40 <AmiBlitz3.ab3@10748>   MOVE.l D7,D1
00027A46 <AmiBlitz3.ab3@10749>   MOVE.l #tstdone,D2                                      ;hunkend
00027A48 <AmiBlitz3.ab3@10750>   MOVEQ.l #$04,D3
00027A52 <AmiBlitz3.ab3@10751>   CMPI.l #-1,bssstart
00027A56 <AmiBlitz3.ab3@10752>   BEQ 'l10
00027A58 <AmiBlitz3.ab3@10753>   MOVEQ #16,d3
00027A5E <AmiBlitz3.ab3@10754>   MOVE.l #hunkend,d2
00027A68 <AmiBlitz3.ab3@10755>   CMPI.l #-1,chipstart
00027A6C <AmiBlitz3.ab3@10756>   BEQ 'l10
00027A6E <AmiBlitz3.ab3@10757>   MOVE.l d7,d1
00027A70 <AmiBlitz3.ab3@10758>   MOVEQ #12,d3
00027A74 <AmiBlitz3.ab3@10759>   BSR.w mywrite
00027A7E <AmiBlitz3.ab3@10762>   CMPI.l #-1,chipstart
00027A82 <AmiBlitz3.ab3@10763>   BEQ 'l11
00027A84 <AmiBlitz3.ab3@10764>   MOVEQ #12,d3
00027A8A <AmiBlitz3.ab3@10765>   MOVE.l #hunkend2,d2
00027A8C <AmiBlitz3.ab3@10766>   MOVE.l d7,d1
00027A90 <AmiBlitz3.ab3@10767>   BSR.w mywrite
00027A92 <AmiBlitz3.ab3@10768>   MOVE.l d7,d1
00027A98 <AmiBlitz3.ab3@10769>   MOVE.l chipstart,d2
00027A9E <AmiBlitz3.ab3@10770>   MOVE.l chipsize,d3
00027AA2 <AmiBlitz3.ab3@10771>   BSR.w mywrite
00027AA4 <AmiBlitz3.ab3@10772>   MOVEQ #4,d3
00027AAA <AmiBlitz3.ab3@10773>   MOVE.l #hunkend,d2
00027AAC <AmiBlitz3.ab3@10774>   MOVE.l d7,d1
00027AB0 <AmiBlitz3.ab3@10777>   BSR.w mywrite
00027AB2 <AmiBlitz3.ab3@10778>   MOVE.l D7,D1
00027AB8 <AmiBlitz3.ab3@10779>   MOVEA.l _dosbase,A6
00027ABC <AmiBlitz3.ab3@10780>   JSR _Close(A6)
00027AC4 <AmiBlitz3.ab3@10785>   BTST #$7,create_iconfile
00027AC8 <AmiBlitz3.ab3@10786>    BEQ.w skip_createicon
00027ACE <AmiBlitz3.ab3@10788>   MOVEA.l ptr_newexefilename,A0
00027AD0 <AmiBlitz3.ab3@10791>     TST.b (A0)+
00027AD4 <AmiBlitz3.ab3@10792>   BNE.w JL_0_772C
00027AD6 <AmiBlitz3.ab3@10793>   SUBQ.w #1,A0
00027AD8 <AmiBlitz3.ab3@10794>   MOVE.l A0,-(A7)
00027ADE <AmiBlitz3.ab3@10795>   LEA str_infoextention2,A1
00027AE0 <AmiBlitz3.ab3@10798>     MOVE.b (A1)+,(A0)+
00027AE4 <AmiBlitz3.ab3@10799>   BNE.w JL_0_773A
00027AEA <AmiBlitz3.ab3@10801>   MOVE.l ptr_newexefilename,D1
00027AEC <AmiBlitz3.ab3@10802>   MOVEQ.l #-$02,D2
00027AF2 <AmiBlitz3.ab3@10803>   MOVEA.l _dosbase,A6
00027AF6 <AmiBlitz3.ab3@10804>   JSR _Lock(A6)
00027AF8 <AmiBlitz3.ab3@10805>   MOVE.l D0,D1
00027AFC <AmiBlitz3.ab3@10806>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027B00 <AmiBlitz3.ab3@10807>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027B04 <AmiBlitz3.ab3@10808> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027B0A <AmiBlitz3.ab3@10811>   MOVE.l ptr_newexefilename,D1
00027B10 <AmiBlitz3.ab3@10812>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027B16 <AmiBlitz3.ab3@10813>   MOVEA.l _dosbase,A6
00027B1A <AmiBlitz3.ab3@10814>    JSR _Open(A6)
00027B1C <AmiBlitz3.ab3@10815>   MOVE.l D0,D7
00027B20 <AmiBlitz3.ab3@10816>    BEQ.w JL_0_7788
00027B26 <AmiBlitz3.ab3@10817>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027B2C <AmiBlitz3.ab3@10818>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027B2E <AmiBlitz3.ab3@10819>   MOVE.l D7,D1
00027B34 <AmiBlitz3.ab3@10820>   MOVEA.l _dosbase,A6
00027B38 <AmiBlitz3.ab3@10821>   JSR _Write(A6)
00027B3A <AmiBlitz3.ab3@10822>   MOVE.l D7,D1
00027B3E <AmiBlitz3.ab3@10823>   JSR _Close(A6)
00027B40 <AmiBlitz3.ab3@10826>   MOVEA.l (A7)+,A0
00027B42 <AmiBlitz3.ab3@10827>   CLR.b (A0)
00027B48 <AmiBlitz3.ab3@10832>   TST.b exdebug
00027B4C <AmiBlitz3.ab3@10833>    BEQ JL_0_757Cb
00027B52 <AmiBlitz3.ab3@10834>   MOVE.w dontwrite,D1
00027B56 <AmiBlitz3.ab3@10835>   BNE.w JL_0_757Cb
00027B5C <AmiBlitz3.ab3@10836>   MOVE.l chipsize,d5
00027B62 <AmiBlitz3.ab3@10837>   MOVE.l bsssize,d3
00027B68 <AmiBlitz3.ab3@10838>   MOVE.l chipstart,d7
00027B6E <AmiBlitz3.ab3@10839>   MOVE.l bssstart,d6
00027B74 <AmiBlitz3.ab3@10840>   MOVEA.l hunkoffsetbase,A2
00027B7A <AmiBlitz3.ab3@10841>   MOVEA.l destbufferstart,A1
00027B7C <AmiBlitz3.ab3@10842>   MOVE.l A1,D2
00027B82 <AmiBlitz3.ab3@10843>   ADD.l noinits,D2
00027B88 <AmiBlitz3.ab3@10844>   CLR.l hunkoffsetnum
00027B8C <AmiBlitz3.ab3@10847>   CMPA.w #$0,A2
00027B90 <AmiBlitz3.ab3@10848>    BEQ.w JL_0_757Cb
00027B94 <AmiBlitz3.ab3@10849>   MOVE.l $4(A2),D0
00027B98 <AmiBlitz3.ab3@10850>    LEA $0(a1,d0.l),a0
00027B9A <AmiBlitz3.ab3@10851>    MOVE.l (a0),d1
00027B9C <AmiBlitz3.ab3@10852>   TST.l d1
00027BA0 <AmiBlitz3.ab3@10853>    BMI.w 'lm1
00027BA8 <AmiBlitz3.ab3@10854>   MOVE.b #0,newhunk
00027BB2 <AmiBlitz3.ab3@10855>   CMP.l #-1,chipstart
00027BB6 <AmiBlitz3.ab3@10856>   BEQ 'l10
00027BBC <AmiBlitz3.ab3@10857>   CMP.l chipstart,d1
00027BC0 <AmiBlitz3.ab3@10858>   BLT 'l10
00027BC8 <AmiBlitz3.ab3@10859>   MOVE.b #1,newhunk
00027BCE <AmiBlitz3.ab3@10860>   CMP.l chipend,d1
00027BD2 <AmiBlitz3.ab3@10861>   BGE 'l110
00027BD4 <AmiBlitz3.ab3@10862>   ADD.l d7,(a0)
00027BDC <AmiBlitz3.ab3@10863>   ADD.l #$80000000,4(a2)
00027BE0 <AmiBlitz3.ab3@10864> BRA JL_0_7576b
00027BE4 <AmiBlitz3.ab3@10867>   ADD.l d5,0(a0)
00027BEE <AmiBlitz3.ab3@10870>   CMP.l #-1,bssstart
00027BF2 <AmiBlitz3.ab3@10871>     BEQ 'l11
00027BF8 <AmiBlitz3.ab3@10872>   CMP.l bssstart,d1
00027BFC <AmiBlitz3.ab3@10873>   BLT 'l11
00027C02 <AmiBlitz3.ab3@10874>   CMP.l bssend,d1
00027C06 <AmiBlitz3.ab3@10875>   BGE 'l111
00027C0C <AmiBlitz3.ab3@10876>   TST.b newhunk
00027C10 <AmiBlitz3.ab3@10877>   BEQ 'ln1
00027C12 <AmiBlitz3.ab3@10878>   ADD.l d5,(a0)
00027C14 <AmiBlitz3.ab3@10881>   ADD.l d6,(a0)
00027C1C <AmiBlitz3.ab3@10882>   ADD.l #$40000000,4(a2)
00027C20 <AmiBlitz3.ab3@10883> BRA JL_0_7576b
00027C24 <AmiBlitz3.ab3@10886>   ADD.l d3,0(a0)
00027C26 <AmiBlitz3.ab3@10889>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00027C2C <AmiBlitz3.ab3@10892>   ADDQ.l #1,hunkoffsetnum
00027C2E <AmiBlitz3.ab3@10895>   MOVEA.l (A2),A2
00027C32 <AmiBlitz3.ab3@10896> BRA.w JL_0_755Eb
00027C38 <AmiBlitz3.ab3@10899>   JSR call_setpointernormal
00027C3C <AmiBlitz3.ab3@10900>   MOVEM.l (a7)+,d2-d7/a2-a6
00027C3E <AmiBlitz3.ab3@10902> RTS
00027C40 <AmiBlitz3.ab3@10906>   MOVE.l D2,-(A7)
00027C46 <AmiBlitz3.ab3@10907>   MOVE.l destpointer,D2
00027C4C <AmiBlitz3.ab3@10908>   SUB.l destbufferstart,D2
00027C50 <AmiBlitz3.ab3@10909>   BSR.w addhunkoffset
00027C52 <AmiBlitz3.ab3@10910>   MOVE.l (A7)+,D2
00027C54 <AmiBlitz3.ab3@10911> RTS
00027C58 <AmiBlitz3.ab3@10915>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00027C5E <AmiBlitz3.ab3@10916>   TST.b nohunkoffset
00027C62 <AmiBlitz3.ab3@10917>   BNE 'l10
00027C64 <AmiBlitz3.ab3@10918>   MOVEQ.l #$8,D0
00027C66 <AmiBlitz3.ab3@10919>   MOVEQ.l #$01,D1
00027C6C <AmiBlitz3.ab3@10920>   MOVEA.l _execbase,A6
00027C72 <AmiBlitz3.ab3@10921>   MOVE.l mempool2,a0
00027C76 <AmiBlitz3.ab3@10922>   JSR _AllocPooled(a6)
00027C7C <AmiBlitz3.ab3@10924>   ADDQ.l #1,hunkoffsetcounter
00027C7E <AmiBlitz3.ab3@10925>   MOVEA.l D0,A0
00027C84 <AmiBlitz3.ab3@10926>   MOVE.l hunkoffsetbase,(A0)
00027C8A <AmiBlitz3.ab3@10927>   MOVE.l A0,hunkoffsetbase
00027C8E <AmiBlitz3.ab3@10928>   MOVE.l D2,$4(A0)
00027C92 <AmiBlitz3.ab3@10931>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00027C94 <AmiBlitz3.ab3@10932> RTS
00027C9A <AmiBlitz3.ab3@10936>   CLR.l hunkoffsetbase
00027CA0 <AmiBlitz3.ab3@10937>   MOVEA.l _execbase,A6
00027CA6 <AmiBlitz3.ab3@10938>   MOVEA.l hunkoffsetbase,A2
00027CAA <AmiBlitz3.ab3@10941>     CMPA.w #$0,A2
00027CAE <AmiBlitz3.ab3@10942>      BEQ.w JL_0_7988
00027CB0 <AmiBlitz3.ab3@10943>     MOVEA.l A2,A1
00027CB2 <AmiBlitz3.ab3@10944>     MOVEQ.l #$08,D0
00027CB4 <AmiBlitz3.ab3@10945>     MOVEA.l (A2),A2
00027CBA <AmiBlitz3.ab3@10946>     MOVE.l mempool2,a0
00027CBE <AmiBlitz3.ab3@10947>     JSR _FreePooled(A6)
00027CC2 <AmiBlitz3.ab3@10948> BRA.w JL_0_7972
00027CC8 <AmiBlitz3.ab3@10951>   CLR.l hunkoffsetcounter
00027CCA <AmiBlitz3.ab3@10952> RTS
00027CE2 <AmiBlitz3.ab3@10955> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00027CE6 <AmiBlitz3.ab3@10956> cmakea5:    Ds.l 1
00027CE8 <AmiBlitz3.ab3@10957> cmake:      Ds.w 1
00027D68 <AmiBlitz3.ab3@10958> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00027D6E <AmiBlitz3.ab3@10962>   MOVE.l A5,lastsourcepos
00027D78 <AmiBlitz3.ab3@10963>   MOVE.w instringon,oldqflag
00027D7A <AmiBlitz3.ab3@10967>   MOVEQ.l #$00,D0
00027D7C <AmiBlitz3.ab3@10968>   MOVE.b (A5)+,D0
00027D80 <AmiBlitz3.ab3@10969>    BEQ getcharb__donea
00027D84 <AmiBlitz3.ab3@10970>   BPL getcharb__stuffa
00027D86 <AmiBlitz3.ab3@10971>   LSL.l #8,D0
00027D88 <AmiBlitz3.ab3@10972>   MOVE.b (A5)+,D0
00027D8A <AmiBlitz3.ab3@10973>   MOVE.l a1,-(a7)
00027D90 <AmiBlitz3.ab3@10974>   LEA replacedat,a1
00027D94 <AmiBlitz3.ab3@10975>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00027D98 <AmiBlitz3.ab3@10976>   BEQ getchar__l10
00027D9C <AmiBlitz3.ab3@10977>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00027D9E <AmiBlitz3.ab3@10981>   MOVE.l (a7)+,a1
00027DA2 <AmiBlitz3.ab3@10982> BRA getchar__weiter
00027DA6 <AmiBlitz3.ab3@10985>   CMP.w #$22,D0
00027DAA <AmiBlitz3.ab3@10986>    BEQ.b swapquotea
00027DAE <AmiBlitz3.ab3@10987>   CMP.w #$3B,D0
00027DB2 <AmiBlitz3.ab3@10988>    BNE.b getcharb__donea
00027DB8 <AmiBlitz3.ab3@10989>   TST.w instringon
00027DBC <AmiBlitz3.ab3@10990>    BNE.b getcharb__donea
00027DBE <AmiBlitz3.ab3@10993>   MOVE.b (A5)+,D0
00027DC2 <AmiBlitz3.ab3@10994>              BEQ getchar__l1
00027DC6 <AmiBlitz3.ab3@10995>              CMP.b #":",d0
00027DCA <AmiBlitz3.ab3@10996>              BNE getcharb__loopa                                ;:@
00027DCE <AmiBlitz3.ab3@10997>              CMP.b #"@",(a5)
00027DD2 <AmiBlitz3.ab3@10998>              BNE getcharb__loopa
00027DD4 <AmiBlitz3.ab3@10999>              ADDQ #1,a5
00027DDA <AmiBlitz3.ab3@11002>   MOVE.w D0,lastchar
00027DDE <AmiBlitz3.ab3@11005> BRA.s getchar__weiter
00027DE4 <AmiBlitz3.ab3@11008>   NOT.w instringon
00027DEA <AmiBlitz3.ab3@11011>    MOVE.w D0,lastchar
00027DEE <AmiBlitz3.ab3@11012>    BEQ.w getchar__done
00027DF2 <AmiBlitz3.ab3@11013>    BPL.w getchar__done2
00027DF6 <AmiBlitz3.ab3@11014>   CMP.w #-$7FE4,D0                                         ;cnif
00027DFA <AmiBlitz3.ab3@11015>    BEQ.w getchar__cnif
00027DFE <AmiBlitz3.ab3@11016>   CMP.w #-$7FE3,D0                                         ;csif
00027E02 <AmiBlitz3.ab3@11017>    BEQ.w getchar__csif
00027E06 <AmiBlitz3.ab3@11018>   CMP.w #-$7FE2,D0                                         ;celse
00027E0A <AmiBlitz3.ab3@11019>    BEQ.w getchar__celse
00027E0E <AmiBlitz3.ab3@11020>   CMP.w #-$7FE1,D0                                         ;cend
00027E12 <AmiBlitz3.ab3@11021>    BEQ.w getchar__cend
00027E18 <AmiBlitz3.ab3@11024>   TST.w skipcode
00027E1C <AmiBlitz3.ab3@11025>    BEQ.w getchar
00027E20 <AmiBlitz3.ab3@11026>   CMP.w #$7E,D0
00027E24 <AmiBlitz3.ab3@11027>    BEQ.w getchar__cmake                                         ;tilde
00027E28 <AmiBlitz3.ab3@11028>   CMP.w #$2,D0
00027E2C <AmiBlitz3.ab3@11029>    BNE.w getchar__notunpath
00027E32 <AmiBlitz3.ab3@11030>   MOVEA.l usedfrom,A5
00027E38 <AmiBlitz3.ab3@11031>   CLR.l usedfrom
00027E3C <AmiBlitz3.ab3@11032> BRA.w getchar
00027E40 <AmiBlitz3.ab3@11035>   CMP.w #$1,D0
00027E44 <AmiBlitz3.ab3@11036>    BNE.w getchar__done
00027E48 <AmiBlitz3.ab3@11040>   MOVEA.l cmakea5(PC),A5
00027E4C <AmiBlitz3.ab3@11041> BRA.w getchar
00027E52 <AmiBlitz3.ab3@11044>   TST.w cmake
00027E56 <AmiBlitz3.ab3@11045>    BNE.w getchar__done
00027E5A <AmiBlitz3.ab3@11047>   MOVEM.l D0-D7/A0-A6,-(A7)
00027E60 <AmiBlitz3.ab3@11048>   LEA cmake,a0                                         ;reass
00027E62 <AmiBlitz3.ab3@11049>   NOT.w (a0)
00027E66 <AmiBlitz3.ab3@11050>   LEA cmakebak(PC),A0
00027E6C <AmiBlitz3.ab3@11051>   LEA ptr_parameterstore,A1
00027E6E <AmiBlitz3.ab3@11052>   MOVEQ.l #$1F,D0
00027E70 <AmiBlitz3.ab3@11055>     MOVE.l (A1)+,(A0)+
00027E74 <AmiBlitz3.ab3@11056>   DBF D0,getchar__cmloop
00027E7A <AmiBlitz3.ab3@11059>    JSR AJL_0_BF6E
00027E7E <AmiBlitz3.ab3@11060>   CMP.w #$7E,D0
00027E82 <AmiBlitz3.ab3@11061>    BNE.w syntaxerr
00027E88 <AmiBlitz3.ab3@11062>   MOVE.l A5,cmakea5                                      ;tilde
00027E8C <AmiBlitz3.ab3@11063>   LEA cmakebuff(PC),A0
00027E8E <AmiBlitz3.ab3@11064>   MOVE.l D3,D2
00027E92 <AmiBlitz3.ab3@11065>   BSR.w makelong
00027E94 <AmiBlitz3.ab3@11066>   ADDQ.b #1,(A0)
00027E9A <AmiBlitz3.ab3@11067>   LEA cmake,a0
00027E9C <AmiBlitz3.ab3@11068>   NOT.w (a0)                                               ;reass
00027EA0 <AmiBlitz3.ab3@11069>   LEA cmakebak(PC),A0
00027EA6 <AmiBlitz3.ab3@11070>   LEA ptr_parameterstore,A1
00027EA8 <AmiBlitz3.ab3@11071>   MOVEQ.l #$1F,D0
00027EAA <AmiBlitz3.ab3@11074>     MOVE.l (A0)+,(A1)+
00027EAE <AmiBlitz3.ab3@11075>   DBF D0,getchar__cmloop2
00027EB2 <AmiBlitz3.ab3@11077>   MOVEM.l (A7)+,D0-D7/A0-A6
00027EB6 <AmiBlitz3.ab3@11078>   LEA cmakebuff(PC),A5
00027EBA <AmiBlitz3.ab3@11079> BRA.w getchar
00027EBC <AmiBlitz3.ab3@11082> RTS
00027EC6 <AmiBlitz3.ab3@11086>   MOVE.l linenumat,ciflineat                               ;csif
00027ECC <AmiBlitz3.ab3@11087>   TST.w skipcode
00027ED0 <AmiBlitz3.ab3@11088>    BEQ.w getchar__incnest
00027ED4 <AmiBlitz3.ab3@11089>    BSR.w get1bytemain
00027ED6 <AmiBlitz3.ab3@11090>    MOVE.l a1,-(a7)
00027EDC <AmiBlitz3.ab3@11091>    JSR JL_0_C492
00027EDE <AmiBlitz3.ab3@11092>    MOVE.l (a7)+,a1
00027EE2 <AmiBlitz3.ab3@11093> BRA.w getchar
00027EEC <AmiBlitz3.ab3@11096>   MOVE.l linenumat,ciflineat                               ;cnif
00027EF2 <AmiBlitz3.ab3@11097>   TST.w skipcode
00027EF6 <AmiBlitz3.ab3@11098>    BEQ.w getchar__incnest
00027EFA <AmiBlitz3.ab3@11099>    BSR.w get1bytemain
00027EFE <AmiBlitz3.ab3@11100>    CMP.b #"@",d0
00027F02 <AmiBlitz3.ab3@11101>    BNE getchar__cnif_ok2
00027F06 <AmiBlitz3.ab3@11102>    BSR.w get1bytemain
00027F0E <AmiBlitz3.ab3@11103>    MOVE.b #1,incnif
00027F14 <AmiBlitz3.ab3@11104>    JSR findconstant2
00027F18 <AmiBlitz3.ab3@11105>    BEQ getchar__cnif_ok2
00027F1E <AmiBlitz3.ab3@11108>    MOVE.w fast,-(a7)
00027F24 <AmiBlitz3.ab3@11109>    CLR.b fast
00027F26 <AmiBlitz3.ab3@11110>    MOVE.l a1,-(a7)
00027F2C <AmiBlitz3.ab3@11111>    JSR JL_0_C47E
00027F32 <AmiBlitz3.ab3@11112>    CLR.b incnif
00027F34 <AmiBlitz3.ab3@11113>    MOVE.l (a7)+,a1
00027F3A <AmiBlitz3.ab3@11114>    MOVE.w (a7)+,fast
00027F3E <AmiBlitz3.ab3@11115> BRA.w getchar
00027F44 <AmiBlitz3.ab3@11118>   ADDQ.w #1,connest
00027F48 <AmiBlitz3.ab3@11119> BRA.w getchar
00027F4E <AmiBlitz3.ab3@11122>   MOVE.w connest,D0                                      ;celse
00027F52 <AmiBlitz3.ab3@11123>    BNE.w getchar
00027F58 <AmiBlitz3.ab3@11124>   NOT.w skipcode
00027F5C <AmiBlitz3.ab3@11125> BRA.w getchar
00027F62 <AmiBlitz3.ab3@11128>   SUBQ.w #1,connest                                      ;cend
00027F66 <AmiBlitz3.ab3@11129>    BPL.w getchar
00027F6C <AmiBlitz3.ab3@11130>   ADDQ.w #1,connest
00027F72 <AmiBlitz3.ab3@11131>   MOVEA.l concomsp,A0
00027F78 <AmiBlitz3.ab3@11132>   CMPA.l #concomstack,A0
00027F7C <AmiBlitz3.ab3@11133>    BEQ.w nociferr
00027F7E <AmiBlitz3.ab3@11134>   SUBQ.w #2,A0
00027F84 <AmiBlitz3.ab3@11135>   MOVE.l A0,concomsp
00027F8A <AmiBlitz3.ab3@11136>   MOVE.w (A0),skipcode
00027F8E <AmiBlitz3.ab3@11137> BRA.w getchar
00027F92 <AmiBlitz3.ab3@11140> ciflineat:   Ds.l 1
00027F94 <AmiBlitz3.ab3@11148>   MOVEQ.l #$00,D0
00027F96 <AmiBlitz3.ab3@11149>   MOVE.b (A5)+,D0
00027F9A <AmiBlitz3.ab3@11150>    BEQ.b getcharb__done
00027F9E <AmiBlitz3.ab3@11151>    BPL.b getcharb__stuff
00027FA0 <AmiBlitz3.ab3@11152>   LSL.w #8,D0
00027FA2 <AmiBlitz3.ab3@11153>   MOVE.b (A5)+,D0
00027FA4 <AmiBlitz3.ab3@11154> RTS
00027FA8 <AmiBlitz3.ab3@11157>   CMP.w #$22,D0
00027FAC <AmiBlitz3.ab3@11158>    BEQ.b swapquote
00027FB0 <AmiBlitz3.ab3@11159>   CMP.w #$3B,D0
00027FB4 <AmiBlitz3.ab3@11160>    BNE.b getcharb__done
00027FBA <AmiBlitz3.ab3@11161>   TST.w instringon
00027FBE <AmiBlitz3.ab3@11162>    BNE.b getcharb__done
00027FC0 <AmiBlitz3.ab3@11165>   MOVE.b (A5)+,D0
00027FC4 <AmiBlitz3.ab3@11166>             BEQ getcharb__loop_l1
00027FC8 <AmiBlitz3.ab3@11167>             CMP.b #":",d0
00027FCC <AmiBlitz3.ab3@11168>             BNE getcharb__loop
00027FD0 <AmiBlitz3.ab3@11169>             CMP.b #"@",(a5)
00027FD4 <AmiBlitz3.ab3@11170>             BNE getcharb__loop
00027FDA <AmiBlitz3.ab3@11173>   MOVE.w D0,lastchar
00027FDC <AmiBlitz3.ab3@11176> RTS
00027FE2 <AmiBlitz3.ab3@11179>   NOT.w instringon
00027FE4 <AmiBlitz3.ab3@11180> RTS
00027FE8 <AmiBlitz3.ab3@11184>   BSR.w getchar
00027FEE <AmiBlitz3.ab3@11185>   TST.w instringon
00027FF2 <AmiBlitz3.ab3@11186>    BNE.w get1byte__skip
00027FF6 <AmiBlitz3.ab3@11187>   CMP.w #$20,D0
00027FFA <AmiBlitz3.ab3@11188>    BEQ.w get1byte_
00027FFC <AmiBlitz3.ab3@11191> RTS
00028016 <AmiBlitz3.ab3@11194> gs:        Ds.w 13                                         ;ds.b 26  org source
0002801A <AmiBlitz3.ab3@11195>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0002801C <AmiBlitz3.ab3@11196>            Dc.b $C4,$DC
00028020 <AmiBlitz3.ab3@11202>   BSR.w getchar
00028026 <AmiBlitz3.ab3@11203>   TST.w instringon
0002802A <AmiBlitz3.ab3@11204>    BNE.w gchar2
0002802E <AmiBlitz3.ab3@11205>   CMP.w #$20,D0
00028032 <AmiBlitz3.ab3@11206>    BEQ.w get1bytemain
00028034 <AmiBlitz3.ab3@11208>   TST.w D0
00028038 <AmiBlitz3.ab3@11211>   BEQ.b get1bytemain__zero
0002803E <AmiBlitz3.ab3@11212>   TST.w instringon
00028042 <AmiBlitz3.ab3@11213>    BEQ.b get1bytemain__noqoute
00028046 <AmiBlitz3.ab3@11214>   CMP.b #$20,D0
0002804A <AmiBlitz3.ab3@11215>    BCC.b get1bytemain__skip
0002804E <AmiBlitz3.ab3@11216>   MOVE.b gs(PC,D0.W),D0
00028050 <AmiBlitz3.ab3@11217> RTS
00028054 <AmiBlitz3.ab3@11220>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028058 <AmiBlitz3.ab3@11221>    BEQ.b get1bytemain__zero
0002805C <AmiBlitz3.ab3@11222>   CMP.w #$3A,D0
00028060 <AmiBlitz3.ab3@11223>    BEQ.b get1bytemain__zero
00028062 <AmiBlitz3.ab3@11226>   TST.w D0
00028064 <AmiBlitz3.ab3@11229> RTS
0002806A <AmiBlitz3.ab3@11233>   MOVE.w lastchar,D0
0002806E <AmiBlitz3.ab3@11234> BRA.w gchar2
00028078 <AmiBlitz3.ab3@11238>   MOVE.w oldqflag,instringon
0002807E <AmiBlitz3.ab3@11239>   MOVEA.l lastsourcepos,A5
00028080 <AmiBlitz3.ab3@11240> RTS
00028086 <AmiBlitz3.ab3@11244>   MOVE.w D0,locchar
0002808C <AmiBlitz3.ab3@11245>   MOVE.l A5,locloc
0002808E <AmiBlitz3.ab3@11246> RTS
00028094 <AmiBlitz3.ab3@11250>   MOVEA.l locloc,A5
0002809A <AmiBlitz3.ab3@11251>   MOVE.w locchar,D0
000280A0 <AmiBlitz3.ab3@11252>   MOVE.w D0,lastchar
000280A2 <AmiBlitz3.ab3@11253> RTS
000280A2 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
000280EA <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
0002813C <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
0002817A <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
000281B8 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
000281E2 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028212 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
0002825C <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
000282E2 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028344 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
0002838C <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
000283DE <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028440 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
0002848E <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
000284C4 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
000284F2 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
0002850C <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
0002852A <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
000285A8 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
000285D2 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
000285F8 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028618 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028636 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028656 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
0002867E <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
000286A8 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
000286AA <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000286C6 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000286EC <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028704 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028762 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028784 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000287AA <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000287D2 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000287F2 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028816 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
0002885C <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028880 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
000288A4 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000288C4 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
000288E8 <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
0002890A <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028936 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
0002895C <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028966 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
0002898C <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000289DE <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028A48 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028AA6 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028B14 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00028B50 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028B6E <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00028B94 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00028BC4 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00028BE8 <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00028C16 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00028C3A <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00028C50 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00028C66 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00028C6C <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00028C74 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00028C76 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00028C7A <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00028C82 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00028C84 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00028CBE <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00028CEA <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00028D1A <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00028D52 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00028DAC <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00028DAE <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00028DB2 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00028DB6 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00028DBA <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00028DBE <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00028DC2 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00028DC6 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00028DCA <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00028DCE <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00028DD2 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00028DD6 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00028E14 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00028E46 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00028E64 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00028E8E <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00028EAA <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00028EC4 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00028EE2 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00028F06 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00028F08 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00028F5A <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00028F82 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00028FAA <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00028FC6 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00028FE6 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00028FFE <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029042 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
0002908A <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
000290B4 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
000290DE <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
000290F8 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029122 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029176 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
000291C2 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
000291FA <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00029200 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
0002920E <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
0002923E <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00029272 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000292D8 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
000292F6 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029370 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029398 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
000293AE <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
000293C2 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
000293C4 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
000293C5 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
000293C6 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
000293E6 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
000293EC <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
000293FE <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029432 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
0002944A <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029466 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
0002947E <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
0002949E <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
000294BE <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
000294E4 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
000294FA <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029516 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029540 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029558 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029574 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00029594 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
000295AC <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
000295B0 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
000295B6 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
000295BC <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
000295D1 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
000295D7 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
000295D8 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
000295DC <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
000295E2 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
000295E8 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
000295FB <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029601 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029602 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029620 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029638 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029654 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
0002967E <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029698 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
000296B8 <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
000296D6 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029704 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002970E <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029740 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002975E <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002977C <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
0002979C <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
000297C2 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
000297E8 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029810 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002982E <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002984E <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029868 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002988A <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
000298A8 <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
000298CA <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
000298EE <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
000298F4 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029910 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
0002992C <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002994A <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029968 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
000299B6 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
000299D4 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
000299F2 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029A0C <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029A58 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029A7E <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029A9E <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029AC0 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029ADC <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029B02 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029B1E <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029B3C <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
00029B64 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00029B80 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
00029B90 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
00029BB2 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
00029BB6 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
00029BB8 <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
00029BD2 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
00029BF6 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
00029C16 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
00029C48 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
00029CA6 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
00029CDE <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
00029D1C <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
00029D52 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
00029D84 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
00029DA8 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00029DCC <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
00029E16 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00029E3E <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
00029E88 <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
00029EC8 <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
00029F18 <internal_errormsg.ab3@271> XINCLUDE "internal_errormsg.ab3"
00029F66 <internal_errormsg.ab3@272> XINCLUDE "internal_errormsg.ab3"
00029F66 <AmiBlitz3.ab3@11257> XINCLUDE "internal_errormsg.ab3"
00029F68 <AmiBlitz3.ab3@11261> ezerr:   Ds.w 1                                            ;for simple errors
00029F6E <AmiBlitz3.ab3@11267>    MOVE.l myline,d0
00029F72 <AmiBlitz3.ab3@11268>   BNE handle_compileerror__l2
00029F78 <AmiBlitz3.ab3@11270>     MOVE.l a5,lastsourcepos
00029F7A <AmiBlitz3.ab3@11272>     SUBA.l a5,a5
00029F80 <AmiBlitz3.ab3@11274>   TST.l usedfrom
00029F84 <AmiBlitz3.ab3@11275>   BEQ handle_compileerror__org
00029F8A <AmiBlitz3.ab3@11276>     MOVEA.l usedfrom,a5
00029F90 <AmiBlitz3.ab3@11279>   TST.w dirmode
00029F94 <AmiBlitz3.ab3@11280>   BNE.b handle_compileerror__quiet
00029F9A <AmiBlitz3.ab3@11281>     JSR call_setpointernormal
00029F9E <AmiBlitz3.ab3@11282>     MOVE.w ezerr(PC),D0
00029FA2 <AmiBlitz3.ab3@11283>     BNE.w handle_compileerror__skip
00029FA8 <AmiBlitz3.ab3@11284>       MOVE.w cfetchmode,D0
00029FAC <AmiBlitz3.ab3@11285>       BEQ.w handle_compileerror__skip2
00029FB6 <AmiBlitz3.ab3@11286>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00029FBC <AmiBlitz3.ab3@11289>   MOVE.w constmode,D0
00029FC0 <AmiBlitz3.ab3@11290>   BEQ.b handle_compileerror__skip3
00029FC4 <AmiBlitz3.ab3@11291>     BSR.w asmerr2
00029FCA <AmiBlitz3.ab3@11294>   MOVE.l firstlocal,D1
00029FD0 <AmiBlitz3.ab3@11295>   OR.l firstglob,D1
00029FD4 <AmiBlitz3.ab3@11296>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00029FDA <AmiBlitz3.ab3@11297> 
00029FDE <AmiBlitz3.ab3@11298>     BNE handle_compileerror__notproc                       ; yes skip
00029FE4 <AmiBlitz3.ab3@11299>       JSR JL_0_DB5C                                        ; no free some data ????
00029FEC <AmiBlitz3.ab3@11302>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00029FF6 <AmiBlitz3.ab3@11303>   CMP.l #"NORE",reqmode                                    ;for used functions
00029FFA <AmiBlitz3.ab3@11304>   BEQ handle_compileerror__notproc_l1
0002A004 <AmiBlitz3.ab3@11305>     MOVE.l linenumat,compilelinecounter
0002A00A <AmiBlitz3.ab3@11308>   JSR close_compilewin
0002A00C <AmiBlitz3.ab3@11311>   MOVEA.l (A7)+,A0
0002A012 <AmiBlitz3.ab3@11312>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A018 <AmiBlitz3.ab3@11313>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A01C <AmiBlitz3.ab3@11314>   BLT 'lesserror
0002A022 <AmiBlitz3.ab3@11315>   LEA errorlimit_text,a0
0002A028 <AmiBlitz3.ab3@11318>   ADDQ.l #1,errorcounter
0002A02E <AmiBlitz3.ab3@11319>   JSR errorstringparse
0002A038 <AmiBlitz3.ab3@11320>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A03C <AmiBlitz3.ab3@11321>   BEQ handle_compileerror__skip_Lxx2
0002A042 <AmiBlitz3.ab3@11322>   TST.l CLIMode
0002A046 <AmiBlitz3.ab3@11323>   BNE 'climode_output
0002A04C <AmiBlitz3.ab3@11326>     JSR save_errorfile
0002A050 <AmiBlitz3.ab3@11327>     BRA 'end_output
0002A056 <AmiBlitz3.ab3@11330>     JSR stdout_error
0002A05C <AmiBlitz3.ab3@11332>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A062 <AmiBlitz3.ab3@11333>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A066 <AmiBlitz3.ab3@11334>      BGT 'end_output
0002A06C <AmiBlitz3.ab3@11335>     MOVE.l lastsourcepos,a5
0002A06E <AmiBlitz3.ab3@11337>  'loop TST.b (a5)
0002A072 <AmiBlitz3.ab3@11338>       BEQ 'ok2
0002A074 <AmiBlitz3.ab3@11339>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A078 <AmiBlitz3.ab3@11340>     BEQ 'ok
0002A07C <AmiBlitz3.ab3@11341>     CMP.b #":",d0
0002A080 <AmiBlitz3.ab3@11342>     BEQ 'ok
0002A084 <AmiBlitz3.ab3@11343>     BRA 'loop
0002A086 <AmiBlitz3.ab3@11345>  'ok SUBQ.l #1,a5
0002A08E <AmiBlitz3.ab3@11347>  'ok2 MOVE.w #0,lastchar
0002A096 <AmiBlitz3.ab3@11348>     MOVE.b #1,iserror
0002A09C <AmiBlitz3.ab3@11349>     MOVE.l stackaddr,a7
0002A09E <AmiBlitz3.ab3@11350>     RTS
0002A0A0 <AmiBlitz3.ab3@11356>   MOVE.l A0,-(a7)
0002A0DE <AmiBlitz3.ab3@11357>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A0E0 <AmiBlitz3.ab3@11358>   MOVE.l (a7)+,A0
0002A0E4 <AmiBlitz3.ab3@11360>   MOVEM.l d6/D7/A6,-(A7)
0002A0EA <AmiBlitz3.ab3@11361>   MOVE.l includeline,d7
0002A0F0 <AmiBlitz3.ab3@11362>   MOVE.l #"INLN",a6
0002A0FA <AmiBlitz3.ab3@11363>   MOVE.l errstack,tempa7
0002A0FC <AmiBlitz3.ab3@11364>   JSR (A1)                                                  ;open ped errorrequest
0002A100 <AmiBlitz3.ab3@11366>   MOVEM.l (A7)+,D7/d6/A6
0002A106 <AmiBlitz3.ab3@11369>   MOVE.l tempa7,a7
0002A10C <AmiBlitz3.ab3@11370>   MOVEA.l errcont,A0
0002A10E <AmiBlitz3.ab3@11372> RTS
0002A114 <AmiBlitz3.ab3@11375>   MOVEA.l errstack,A7
0002A11A <AmiBlitz3.ab3@11376>   MOVEA.l errcont,A0
0002A11C <AmiBlitz3.ab3@11378> RTS
0002A11E <AmiBlitz3.ab3@11381>   MOVE.l (A7),D0
0002A124 <AmiBlitz3.ab3@11382>   MOVEA.l errstack,A7
0002A12A <AmiBlitz3.ab3@11383>   MOVEA.l errcont,A0
0002A12C <AmiBlitz3.ab3@11384> JMP (A0)
0002A130 <AmiBlitz3.ab3@11390>   CMP.w #$7A,D0                                            ;'z'
0002A134 <AmiBlitz3.ab3@11391>    BHI.w tstalpha__no
0002A138 <AmiBlitz3.ab3@11392>   CMP.w #$41,D0                                            ;'A'
0002A13C <AmiBlitz3.ab3@11393>    BCS.w tstalpha__no
0002A140 <AmiBlitz3.ab3@11394>   CMP.w #$61,D0                                            ;'a'
0002A144 <AmiBlitz3.ab3@11395>    BCC.w tstalpha__yes
0002A148 <AmiBlitz3.ab3@11396>   CMP.w #$5A,D0                                            ;'Z'
0002A14C <AmiBlitz3.ab3@11397>    BHI.w tstalpha__no
0002A14E <AmiBlitz3.ab3@11400>   CMP.w D0,D0
0002A150 <AmiBlitz3.ab3@11403> RTS
0002A154 <AmiBlitz3.ab3@11411>   CMP.w #$30,D0                                            ;'0'
0002A158 <AmiBlitz3.ab3@11412>    BCS.w tstnum__skip
0002A15C <AmiBlitz3.ab3@11413>   CMP.w #$39,D0                                            ;'9'
0002A160 <AmiBlitz3.ab3@11414>    BHI.w tstnum__skip                                     
0002A162 <AmiBlitz3.ab3@11415>   CMP.w D0,D0
0002A164 <AmiBlitz3.ab3@11418> RTS
0002A186 <AmiBlitz3.ab3@11424>   !compare1                                                ;bsr.w tstalpha
0002A18A <AmiBlitz3.ab3@11425>    BEQ.w tstlab__skip
0002A19C <AmiBlitz3.ab3@11426>   !compare2                                                ;bsr.w tstnum2
0002A1A0 <AmiBlitz3.ab3@11427>    BEQ.w tstlab__skip
0002A1A4 <AmiBlitz3.ab3@11428>   CMP.w #$5F,D0                                            ;'_'
0002A1A8 <AmiBlitz3.ab3@11429>    BEQ.w tstlab__skip
0002A1AC <AmiBlitz3.ab3@11430>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A1AE <AmiBlitz3.ab3@11433> RTS
0002A1B8 <AmiBlitz3.ab3@11438>   MOVE.w oldqflag,instringon
0002A1BE <AmiBlitz3.ab3@11439>   MOVEA.l lastsourcepos,A5
0002A1C4 <AmiBlitz3.ab3@11442>   MOVE.l a5,beforeparameterfetch
0002A1CA <AmiBlitz3.ab3@11443>   LEA ptr_parameterstore,A1
0002A1CC <AmiBlitz3.ab3@11446>   MOVEQ.l #$00,D2
0002A1D2 <AmiBlitz3.ab3@11449>   LEA chartab,a0
0002A1D4 <AmiBlitz3.ab3@11450>   MOVEQ #0,d0
0002A1DA <AmiBlitz3.ab3@11451>   MOVE.l A5,lastsourcepos
0002A1E4 <AmiBlitz3.ab3@11452>   MOVE.w instringon,oldqflag
0002A1E6 <AmiBlitz3.ab3@11455>     MOVE.b (a5)+,d0
0002A1EA <AmiBlitz3.ab3@11456>   CMP.b #$20,d0                                            ;space deftype
0002A1EE <AmiBlitz3.ab3@11457>   BEQ makename4__retry
0002A1F4 <AmiBlitz3.ab3@11459>   MOVE.w d0,lastchar
0002A1F8 <AmiBlitz3.ab3@11460>   TST.b 0(a0,d0.w)
0002A1FC <AmiBlitz3.ab3@11461>   BNE makename__done
0002A1FE <AmiBlitz3.ab3@11470>   MOVE.b D0,(A1)+
0002A200 <AmiBlitz3.ab3@11471>   ADDQ.l #1,D2
0002A206 <AmiBlitz3.ab3@11472>   MOVE.l A5,lastsourcepos
0002A208 <AmiBlitz3.ab3@11475>   MOVE.b (a5)+,d0
0002A20E <AmiBlitz3.ab3@11476>   MOVE.b d0,lastchar+1
0002A212 <AmiBlitz3.ab3@11477>   CMP.b #$20,d0
0002A216 <AmiBlitz3.ab3@11478>   BEQ makename__loop_l20
0002A21A <AmiBlitz3.ab3@11480>   TST.b 0(a0,d0)
0002A21E <AmiBlitz3.ab3@11481>   BEQ makename__loop
0002A222 <AmiBlitz3.ab3@11482>   CMP.b #2,d0
0002A226 <AmiBlitz3.ab3@11483>   BNE makename__loop_lf1
0002A22C <AmiBlitz3.ab3@11484>   MOVEA.l usedfrom,A5
0002A232 <AmiBlitz3.ab3@11485>   CLR.l usedfrom
0002A236 <AmiBlitz3.ab3@11486> BRA makename__loop_ln1
0002A23A <AmiBlitz3.ab3@11489>   CMP.b #1,d0
0002A23E <AmiBlitz3.ab3@11490>   BNE makename__loop_l20
0002A242 <AmiBlitz3.ab3@11491>   MOVEA.l cmakea5(PC),A5
0002A246 <AmiBlitz3.ab3@11492> BRA makename__loop_ln1
0002A24A <AmiBlitz3.ab3@11495>   CMP.b #$7e,d0
0002A24E <AmiBlitz3.ab3@11496>             BNE makename__loop_lt
0002A254 <AmiBlitz3.ab3@11497>             TST.w cmake
0002A258 <AmiBlitz3.ab3@11498>             BNE.w makename__loop_a1
0002A25A <AmiBlitz3.ab3@11499>             SUBQ.l #1,a5
0002A25E <AmiBlitz3.ab3@11500>             BSR.w get1bytemain
0002A262 <AmiBlitz3.ab3@11501> BRA makename__loop
0002A266 <AmiBlitz3.ab3@11505> BRA makename__loop_gpex
0002A26A <AmiBlitz3.ab3@11509>   BSR.w getchar
0002A28C <AmiBlitz3.ab3@11510>    !compare1                                               ;bsr.w tstalpha
0002A290 <AmiBlitz3.ab3@11511>    BEQ.w makename__loop_getp1
0002A2A2 <AmiBlitz3.ab3@11512>    !compare2                                               ;bsr.w tstnum
0002A2A6 <AmiBlitz3.ab3@11513>    BEQ.w makename__loop_getp1
0002A2AA <AmiBlitz3.ab3@11514>   CMP.w #$5F,D0                                            ;'_'
0002A2AE <AmiBlitz3.ab3@11515>    BEQ.w makename__loop_getp1
0002A2B2 <AmiBlitz3.ab3@11516>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A2B6 <AmiBlitz3.ab3@11520>       BNE makename__loop_gpex
0002A2BA <AmiBlitz3.ab3@11521>       CMP.b #$20,d0
0002A2BE <AmiBlitz3.ab3@11522>       BNE.w makename__loop
0002A2C0 <AmiBlitz3.ab3@11525>      TST.b d0
0002A2C4 <AmiBlitz3.ab3@11526>      BPL makename__loop_l10
0002A2C6 <AmiBlitz3.ab3@11527>      SUBQ.l #1,a5
0002A2CA <AmiBlitz3.ab3@11528>      BSR get1byte_
0002A2CE <AmiBlitz3.ab3@11531>    CMP.w #$20,D0
0002A2D2 <AmiBlitz3.ab3@11532>    BNE.w makename__done
0002A2D4 <AmiBlitz3.ab3@11533>    MOVEQ #0,d0
0002A2DA <AmiBlitz3.ab3@11534>   MOVE.l a5,lastsourcepos
0002A2DC <AmiBlitz3.ab3@11537>   MOVE.b (a5)+,d0                                          ;neuneu
0002A2E0 <AmiBlitz3.ab3@11538>   BPL makename__loop_l101:
0002A2E2 <AmiBlitz3.ab3@11539>   ASL.w #8,d0
0002A2E4 <AmiBlitz3.ab3@11540>   MOVE.b (a5)+,d0
0002A2EA <AmiBlitz3.ab3@11543>   TST.w instringon
0002A2EE <AmiBlitz3.ab3@11544>   BNE makename__loop_l102
0002A2F2 <AmiBlitz3.ab3@11545>   CMP.b #$20,d0
0002A2F6 <AmiBlitz3.ab3@11546>   BEQ makename__loop_l103
0002A2FA <AmiBlitz3.ab3@11547>   CMP.b #";",d0
0002A2FE <AmiBlitz3.ab3@11548>   BNE makename__loop_l102
0002A300 <AmiBlitz3.ab3@11551>   MOVE.b (A5)+,D0
0002A304 <AmiBlitz3.ab3@11552>              BEQ makename__loop_l1
0002A308 <AmiBlitz3.ab3@11553>              CMP.b #":",d0
0002A30C <AmiBlitz3.ab3@11554>              BNE makename__loop_lr                         ;:@
0002A310 <AmiBlitz3.ab3@11555>              CMP.b #"@",(a5)
0002A314 <AmiBlitz3.ab3@11556>              BNE makename__loop_lr
0002A316 <AmiBlitz3.ab3@11557>              ADDQ #1,a5
0002A31C <AmiBlitz3.ab3@11561>   MOVE.w d0,lastchar
0002A320 <AmiBlitz3.ab3@11565>   CMP.b #";",d0
0002A324 <AmiBlitz3.ab3@11566>   BEQ makename__done_l11
0002A326 <AmiBlitz3.ab3@11567>   CLR.b (A1)
0002A328 <AmiBlitz3.ab3@11569>   TST.w D2
0002A32A <AmiBlitz3.ab3@11570> RTS
0002A32C <AmiBlitz3.ab3@11573>   CLR.b (a1)
0002A32E <AmiBlitz3.ab3@11574>   MOVEQ #0,d0
0002A334 <AmiBlitz3.ab3@11575>   MOVE.w d0,lastchar
0002A336 <AmiBlitz3.ab3@11577>   TST.w D2
0002A338 <AmiBlitz3.ab3@11578> RTS
0002A33A <AmiBlitz3.ab3@11584>   MOVE.l (A2),D0
0002A33E <AmiBlitz3.ab3@11587>   BEQ.w findlast__here
0002A340 <AmiBlitz3.ab3@11588>   MOVEA.l D0,A2
0002A344 <AmiBlitz3.ab3@11589> BRA.w findlast__loop
0002A348 <AmiBlitz3.ab3@11592> BRA.w reget
0002A34A <AmiBlitz3.ab3@11598>   MOVE.l (A2),-(A7)
0002A34E <AmiBlitz3.ab3@11599>   BSR.w addlabel
0002A350 <AmiBlitz3.ab3@11600>   MOVE.l (A7)+,(A2)
0002A352 <AmiBlitz3.ab3@11601> RTS
0002A358 <AmiBlitz3.ab3@11606>   CLR.l fp0addr
0002A35E <AmiBlitz3.ab3@11607>   TST.w dirmode
0002A362 <AmiBlitz3.ab3@11608>    BNE.w illdirerr
0002A364 <AmiBlitz3.ab3@11609>   MOVEQ.l #$00,D0
0002A366 <AmiBlitz3.ab3@11610>   MOVE.w D7,D0
0002A368 <AmiBlitz3.ab3@11611>   ADD.w D2,D0
0002A36A <AmiBlitz3.ab3@11612>   ADDQ.w #1,D0
0002A36C <AmiBlitz3.ab3@11613>   MOVE.w D0,D2
0002A36E <AmiBlitz3.ab3@11614>   ADDQ.l #2,d0
0002A370 <AmiBlitz3.ab3@11615>   MOVEQ.l #$01,D1
0002A376 <AmiBlitz3.ab3@11616>   MOVEA.l _execbase,A6
0002A37C <AmiBlitz3.ab3@11617>   MOVE.l mempool2,a0
0002A380 <AmiBlitz3.ab3@11618>   JSR _AllocPooled(a6)
0002A386 <AmiBlitz3.ab3@11620>   MOVE.l lastlabel,a2
0002A388 <AmiBlitz3.ab3@11621>   MOVE.l D0,(A2)
0002A38A <AmiBlitz3.ab3@11622>   MOVE.l d0,a0
0002A38C <AmiBlitz3.ab3@11623>   CLR.l (a0)
0002A392 <AmiBlitz3.ab3@11624>   MOVE.l a0,lastlabel
0002A394 <AmiBlitz3.ab3@11625>   MOVE.l d0,A2
0002A398 <AmiBlitz3.ab3@11626>   LEA -$1(A0,D7.W),A0
0002A39A <AmiBlitz3.ab3@11627>   MOVE.b D2,(A0)+
0002A3A0 <AmiBlitz3.ab3@11628>   LEA ptr_parameterstore,A1
0002A3A2 <AmiBlitz3.ab3@11629>   MOVEQ #0,d0
0002A3A4 <AmiBlitz3.ab3@11630>   MOVEQ #0,d1
0002A3A6 <AmiBlitz3.ab3@11633>   MOVE.b (A1)+,d1
0002A3AA <AmiBlitz3.ab3@11634>    BEQ 'l1
0002A3B0 <AmiBlitz3.ab3@11635>    !hashalgo
0002A3B2 <AmiBlitz3.ab3@11636>    MOVE.b d1,(A0)+
0002A3B6 <AmiBlitz3.ab3@11637> BRA addlabel_loop2a
0002A3B8 <AmiBlitz3.ab3@11640>    CLR.b (a0)+
0002A3BE <AmiBlitz3.ab3@11641>    LEA labelhash,a0
0002A3C4 <AmiBlitz3.ab3@11642>    AND.l #hashsize,d0
0002A3C6 <AmiBlitz3.ab3@11643>    ASL.l #2,d0
0002A3CA <AmiBlitz3.ab3@11644>    MOVE.l 0(a0,d0),d1
0002A3CE <AmiBlitz3.ab3@11645>    MOVE.l d1,$c(a2)
0002A3D2 <AmiBlitz3.ab3@11646>    MOVE.l a2,0(a0,d0)
0002A3D4 <AmiBlitz3.ab3@11647>    MOVEQ #0,d0
0002A3D8 <AmiBlitz3.ab3@11648> BRA.w reget
0002A3DE <AmiBlitz3.ab3@11652>    TST.b newvariable
0002A3E2 <AmiBlitz3.ab3@11653>    BNE addlabel
0002A3E8 <AmiBlitz3.ab3@11656>   TST.w dirmode
0002A3EC <AmiBlitz3.ab3@11657>    BNE.w illdirerr
0002A3EE <AmiBlitz3.ab3@11658>   MOVEQ.l #$00,D0
0002A3F0 <AmiBlitz3.ab3@11659>   MOVE.w D7,D0
0002A3F2 <AmiBlitz3.ab3@11660>   ADD.w D2,D0
0002A3F4 <AmiBlitz3.ab3@11661>   ADDQ.w #1,D0
0002A3F6 <AmiBlitz3.ab3@11662>   MOVE.w D0,D2
0002A3F8 <AmiBlitz3.ab3@11663>   MOVEQ.l #$01,D1
0002A3FE <AmiBlitz3.ab3@11664>   MOVEA.l _execbase,A6
0002A404 <AmiBlitz3.ab3@11665>   MOVE.l mempool2,a0
0002A408 <AmiBlitz3.ab3@11666>   JSR _AllocPooled(a6)
0002A40A <AmiBlitz3.ab3@11667>   MOVEA.l D0,A0
0002A410 <AmiBlitz3.ab3@11669>   LEA varbase,a2
0002A412 <AmiBlitz3.ab3@11670>   MOVE.l (a2),(a0)
0002A414 <AmiBlitz3.ab3@11671>   MOVE.l A0,(A2)
0002A416 <AmiBlitz3.ab3@11672>   MOVEA.l A0,A2
0002A41A <AmiBlitz3.ab3@11673>   LEA -$1(A0,D7.W),A0
0002A41C <AmiBlitz3.ab3@11674>   MOVE.b D2,(A0)+
0002A422 <AmiBlitz3.ab3@11675>   LEA ptr_parameterstore,A1
0002A424 <AmiBlitz3.ab3@11676>   MOVEQ #0,d0
0002A426 <AmiBlitz3.ab3@11677>   MOVEQ #0,d1
0002A428 <AmiBlitz3.ab3@11680>   MOVE.b (A1)+,d1
0002A42C <AmiBlitz3.ab3@11681>    BEQ 'l12
0002A432 <AmiBlitz3.ab3@11682>    !hashalgo
0002A434 <AmiBlitz3.ab3@11683>    MOVE.b d1,(A0)+
0002A438 <AmiBlitz3.ab3@11684> BRA 'l11
0002A43A <AmiBlitz3.ab3@11687>   CLR.b (a0)+
0002A440 <AmiBlitz3.ab3@11688>   LEA variablehash,a0
0002A446 <AmiBlitz3.ab3@11689>    AND.l #hashsize,d0
0002A448 <AmiBlitz3.ab3@11690>    ASL.l #2,d0
0002A44C <AmiBlitz3.ab3@11691>    MOVE.l 0(a0,d0),d1
0002A450 <AmiBlitz3.ab3@11692>    MOVE.l d1,$e(a2)
0002A454 <AmiBlitz3.ab3@11693>    MOVE.l a2,0(a0,d0)
0002A456 <AmiBlitz3.ab3@11694>    MOVEQ #0,d0
0002A45A <AmiBlitz3.ab3@11695> BRA.w reget
0002A460 <AmiBlitz3.ab3@11699>   TST.w dirmode
0002A464 <AmiBlitz3.ab3@11700>    BNE.w illdirerr
0002A466 <AmiBlitz3.ab3@11707>   MOVEQ.l #$00,D0
0002A468 <AmiBlitz3.ab3@11708>   MOVE.w D7,D0
0002A46A <AmiBlitz3.ab3@11709>   ADD.w D2,D0
0002A46C <AmiBlitz3.ab3@11710>   ADDQ.w #1,D0
0002A46E <AmiBlitz3.ab3@11711>   MOVE.w D0,D2
0002A470 <AmiBlitz3.ab3@11712>   MOVEQ.l #$01,D1
0002A476 <AmiBlitz3.ab3@11713>   MOVEA.l _execbase,A6
0002A47C <AmiBlitz3.ab3@11714>   MOVE.l mempool2,a0
0002A480 <AmiBlitz3.ab3@11715>   JSR _AllocPooled(a6)
0002A482 <AmiBlitz3.ab3@11717>   MOVEA.l D0,A0
0002A484 <AmiBlitz3.ab3@11718>   MOVE.l A0,(A2)
0002A486 <AmiBlitz3.ab3@11719>   CLR.l (a0)
0002A48A <AmiBlitz3.ab3@11720>   CLR.l 8(a0)                                              ;clear next
0002A48C <AmiBlitz3.ab3@11721>   MOVEA.l A0,A2
0002A490 <AmiBlitz3.ab3@11722>   LEA -$1(A0,D7.W),A0
0002A492 <AmiBlitz3.ab3@11723>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A498 <AmiBlitz3.ab3@11724>   LEA ptr_parameterstore,A1
0002A49A <AmiBlitz3.ab3@11725>   MOVEQ #0,d0
0002A49C <AmiBlitz3.ab3@11726>   MOVEQ #0,d1
0002A49E <AmiBlitz3.ab3@11729>   MOVE.b (A1)+,d1
0002A4A0 <AmiBlitz3.ab3@11732>   MOVE.b d1,(A0)+
0002A4A4 <AmiBlitz3.ab3@11733>   BNE.w addlabel_loop2
0002A4A8 <AmiBlitz3.ab3@11734> BRA.w reget
0002A4AA <AmiBlitz3.ab3@11738>   MOVEQ.l #$13,D7
0002A4B0 <AmiBlitz3.ab3@11739>   LEA constantbase,A2
0002A4B4 <AmiBlitz3.ab3@11740> BRA.w findlab
0002A4B6 <AmiBlitz3.ab3@11744>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A4BC <AmiBlitz3.ab3@11745>   LEA xinclude_base,A2
0002A4C0 <AmiBlitz3.ab3@11746> BRA.w findlab
0002A4C2 <AmiBlitz3.ab3@11750>   MOVEQ.l #$09,D7
0002A4C8 <AmiBlitz3.ab3@11751>   LEA firstconst,A2
0002A4CC <AmiBlitz3.ab3@11752> BRA.w findlab
0002A4CE <AmiBlitz3.ab3@11756>   MOVEQ.l #$0d,D7                                          ;find macro
0002A4D4 <AmiBlitz3.ab3@11757>   LEA macrobase,A2
0002A4D8 <AmiBlitz3.ab3@11758> BRA.w findlab
0002A4DE <AmiBlitz3.ab3@11762>   LEA labelhash,A2
0002A4E0 <AmiBlitz3.ab3@11763>   MOVEQ.l #$13,D7
0002A4E2 <AmiBlitz3.ab3@11764>   EXT.l d2
0002A4E8 <AmiBlitz3.ab3@11765>   LEA ptr_parameterstore,A0
0002A4EA <AmiBlitz3.ab3@11766>   MOVEQ #0,d0
0002A4EC <AmiBlitz3.ab3@11767>   MOVEQ #0,d1
0002A4EE <AmiBlitz3.ab3@11770>     MOVE.b (a0)+,d1
0002A4F2 <AmiBlitz3.ab3@11771>     BEQ 'l15
0002A4F8 <AmiBlitz3.ab3@11772>     !hashalgo
0002A4FC <AmiBlitz3.ab3@11773> BRA 'l20
0002A502 <AmiBlitz3.ab3@11776>   AND.l #hashsize,d0
0002A504 <AmiBlitz3.ab3@11777>   ASL.l #2,d0
0002A508 <AmiBlitz3.ab3@11778>   MOVE.l 0(a2,d0),d0
0002A50C <AmiBlitz3.ab3@11779> BRA 'l11
0002A510 <AmiBlitz3.ab3@11782>   MOVE.l $c(A2),D0                                         ;find label
0002A514 <AmiBlitz3.ab3@11785>   BEQ findlab__no
0002A516 <AmiBlitz3.ab3@11786>   MOVEA.l D0,A2
0002A518 <AmiBlitz3.ab3@11787>   MOVEQ.l #$00,D0
0002A51C <AmiBlitz3.ab3@11788>   MOVE.b -$1(A2,D7.l),D0
0002A522 <AmiBlitz3.ab3@11789>   LEA ptr_parameterstore,A0
0002A524 <AmiBlitz3.ab3@11790>   SUB.l D7,D0
0002A526 <AmiBlitz3.ab3@11791>   SUBQ.l #1,D0
0002A528 <AmiBlitz3.ab3@11792>   CMP.l D0,D2
0002A52C <AmiBlitz3.ab3@11793>    BNE.b 'l10
0002A530 <AmiBlitz3.ab3@11794>   LEA $0(A2,D7.W),A1
0002A532 <AmiBlitz3.ab3@11795>   SUBQ.l #1,D0
0002A534 <AmiBlitz3.ab3@11798>     MOVE.b (a1)+,d1
0002A536 <AmiBlitz3.ab3@11799>     CMP.b (a0)+,d1
0002A53A <AmiBlitz3.ab3@11801>     BNE.b 'l10
0002A53E <AmiBlitz3.ab3@11802>   DBF D0,'l201
0002A542 <AmiBlitz3.ab3@11804>   BSR.w reget
0002A544 <AmiBlitz3.ab3@11805>   CMP.w D0,D0
0002A546 <AmiBlitz3.ab3@11806> RTS
0002A548 <AmiBlitz3.ab3@11810>   MOVEQ.l #$0B,D7
0002A54C <AmiBlitz3.ab3@11811> BRA.w findlab
0002A552 <AmiBlitz3.ab3@11815>   LEA firstproc,A2
0002A558 <AmiBlitz3.ab3@11816>   MOVE.l #$21+#funcentry_extend,D7
0002A55C <AmiBlitz3.ab3@11817> BRA findlab
0002A562 <AmiBlitz3.ab3@11821>   LEA firstfor,A2
0002A564 <AmiBlitz3.ab3@11822>   MOVEQ.l #$11,D7
0002A568 <AmiBlitz3.ab3@11823> BRA.w findlab
0002A56A <AmiBlitz3.ab3@11827>   MOVEQ.l #$0F,D7
0002A56E <AmiBlitz3.ab3@11828> BRA.w findlab
0002A570 <AmiBlitz3.ab3@11832>   MOVEQ.l #$0F+4,D7
0002A576 <AmiBlitz3.ab3@11833>   TST.b newvariable
0002A57A <AmiBlitz3.ab3@11834>    BNE.w findlab
0002A580 <AmiBlitz3.ab3@11835>   LEA variablehash,A2
0002A586 <AmiBlitz3.ab3@11836>   LEA ptr_parameterstore,A0
0002A588 <AmiBlitz3.ab3@11837>   MOVEQ #0,d0
0002A58A <AmiBlitz3.ab3@11838>   MOVEQ #0,d1
0002A58C <AmiBlitz3.ab3@11841>     MOVE.b (a0)+,d1
0002A590 <AmiBlitz3.ab3@11842>     BEQ 'l15
0002A596 <AmiBlitz3.ab3@11843>     !hashalgo
0002A59A <AmiBlitz3.ab3@11844> BRA 'l20
0002A5A0 <AmiBlitz3.ab3@11847>   AND.l #hashsize,d0
0002A5A2 <AmiBlitz3.ab3@11848>   ASL.l #2,d0
0002A5A6 <AmiBlitz3.ab3@11849>   MOVE.l 0(a2,d0),d0
0002A5AA <AmiBlitz3.ab3@11850> BRA 'l11
0002A5AE <AmiBlitz3.ab3@11853>   MOVE.l $e(A2),D0                                         ;find label
0002A5B2 <AmiBlitz3.ab3@11856>   BEQ findlab__no
0002A5B4 <AmiBlitz3.ab3@11857>   MOVEA.l D0,A2
0002A5B6 <AmiBlitz3.ab3@11858>   MOVEQ.l #$00,D0
0002A5BA <AmiBlitz3.ab3@11859>   MOVE.b -$1(A2,D7.W),D0
0002A5C0 <AmiBlitz3.ab3@11860>   LEA ptr_parameterstore,A0
0002A5C2 <AmiBlitz3.ab3@11861>   SUB.w D7,D0
0002A5C4 <AmiBlitz3.ab3@11862>   SUBQ.l #1,D0
0002A5C6 <AmiBlitz3.ab3@11863>   CMP.w D0,D2
0002A5CA <AmiBlitz3.ab3@11864>    BNE.b 'l10
0002A5CE <AmiBlitz3.ab3@11865>   LEA $0(A2,D7.W),A1
0002A5D0 <AmiBlitz3.ab3@11866>   SUBQ.l #1,D0
0002A5D2 <AmiBlitz3.ab3@11869>     MOVE.b (a1)+,d1
0002A5D4 <AmiBlitz3.ab3@11870>     CMP.b (a0)+,d1
0002A5D8 <AmiBlitz3.ab3@11872>     BNE.b 'l10
0002A5DC <AmiBlitz3.ab3@11873>   DBF D0,'l201
0002A5E0 <AmiBlitz3.ab3@11875>   BSR.w reget
0002A5E2 <AmiBlitz3.ab3@11876>   CMP.w D0,D0
0002A5E4 <AmiBlitz3.ab3@11877> RTS
0002A5E6 <AmiBlitz3.ab3@11890>     MOVE.l (A2),D0                                         ;find label
0002A5EA <AmiBlitz3.ab3@11891>      BEQ.b findlab__no
0002A5EC <AmiBlitz3.ab3@11892>     MOVEA.l D0,A2
0002A5EE <AmiBlitz3.ab3@11893>     MOVEQ.l #$00,D0
0002A5F2 <AmiBlitz3.ab3@11894>     MOVE.b -$1(A2,D7.W),D0
0002A5F4 <AmiBlitz3.ab3@11895>     SUB.l D7,D0
0002A5F6 <AmiBlitz3.ab3@11896>     SUBQ.l #1,D0
0002A5F8 <AmiBlitz3.ab3@11897>   CMP.w D0,D2
0002A5FC <AmiBlitz3.ab3@11898>   BNE.b findlab__loop
0002A600 <AmiBlitz3.ab3@11900>   LEA $0(A2,D7.W),A1
0002A606 <AmiBlitz3.ab3@11901>   LEA ptr_parameterstore,A0
0002A608 <AmiBlitz3.ab3@11902>   SUBQ.l #1,D0
0002A60A <AmiBlitz3.ab3@11905>     MOVE.b (a1)+,d1
0002A60C <AmiBlitz3.ab3@11906>     CMP.b (a0)+,d1
0002A610 <AmiBlitz3.ab3@11908>     BNE.b findlab__loop
0002A614 <AmiBlitz3.ab3@11909>   DBF D0,findlab__loop2
0002A618 <AmiBlitz3.ab3@11911>   BSR.w reget
0002A61A <AmiBlitz3.ab3@11912>   CMP.w D0,D0
0002A61C <AmiBlitz3.ab3@11913> RTS
0002A620 <AmiBlitz3.ab3@11916>   BSR.w reget
0002A622 <AmiBlitz3.ab3@11917>   MOVEQ.l #-$01,D1
0002A624 <AmiBlitz3.ab3@11918> RTS
0002A62A <AmiBlitz3.ab3@11922>   MOVEA.l alllocals,A4
0002A630 <AmiBlitz3.ab3@11923>   CLR.l alllocals
0002A634 <AmiBlitz3.ab3@11927>     CMPA.w #$0,A4
0002A638 <AmiBlitz3.ab3@11928>      BEQ.b freeprocvs__done
0002A63C <AmiBlitz3.ab3@11929>     MOVEA.l $4(A4),A3
0002A640 <AmiBlitz3.ab3@11931>     MOVEA.l $8(A4),A3
0002A642 <AmiBlitz3.ab3@11933>     MOVEA.l A4,A1
0002A644 <AmiBlitz3.ab3@11934>     MOVEA.l (A4),A4
0002A646 <AmiBlitz3.ab3@11935>     MOVEQ.l #$0C,D0
0002A64C <AmiBlitz3.ab3@11936>     MOVEA.l _execbase,A6
0002A652 <AmiBlitz3.ab3@11937>     MOVE.l mempool,a0
0002A656 <AmiBlitz3.ab3@11938>     JSR _FreePooled(A6)
0002A65A <AmiBlitz3.ab3@11939> BRA.b freeprocvs__loop
0002A660 <AmiBlitz3.ab3@11942>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002A666 <AmiBlitz3.ab3@11943>   CLR.l firstlocal
0002A66C <AmiBlitz3.ab3@11944>   CLR.l sharebase
0002A672 <AmiBlitz3.ab3@11945>   TST.l mempool2
0002A676 <AmiBlitz3.ab3@11946>   BEQ freeprocvs__done_l10
0002A67C <AmiBlitz3.ab3@11948>   MOVEA.l _execbase,A6
0002A682 <AmiBlitz3.ab3@11949>   MOVE.l mempool2,a0
0002A688 <AmiBlitz3.ab3@11950>   CLR.l mempool2
0002A68C <AmiBlitz3.ab3@11951>   JSR _DeletePool(a6)
0002A692 <AmiBlitz3.ab3@11954>   MOVE.l _execbase,a6
0002A698 <AmiBlitz3.ab3@11955>   MOVE.l #$10000,d0
0002A69E <AmiBlitz3.ab3@11956>   MOVE.l #80000,d1
0002A6A0 <AmiBlitz3.ab3@11957>   MOVE.l d1,d2
0002A6A4 <AmiBlitz3.ab3@11958>   JSR _CreatePool(a6)
0002A6AA <AmiBlitz3.ab3@11959>   MOVE.l d0,mempool2
0002A6AC <AmiBlitz3.ab3@11960> RTS
0002A6B0 <AmiBlitz3.ab3@11964>   CMPA.w #$0,A3
0002A6B4 <AmiBlitz3.ab3@11965>    BEQ.w freevars__done
0002A6B6 <AmiBlitz3.ab3@11966>   MOVEA.l A3,A1
0002A6B8 <AmiBlitz3.ab3@11967>   MOVEA.l (A3),A3
0002A6BA <AmiBlitz3.ab3@11968>   MOVEQ.l #$00,D0
0002A6BE <AmiBlitz3.ab3@11969>   MOVE.b $E(A1),D0
0002A6C4 <AmiBlitz3.ab3@11970>   MOVEA.l _execbase,A6
0002A6CA <AmiBlitz3.ab3@11971>   MOVE.l mempool2,a0
0002A6CE <AmiBlitz3.ab3@11972>   JSR _FreePooled(A6)
0002A6D2 <AmiBlitz3.ab3@11973> BRA.w freevars
0002A6D6 <AmiBlitz3.ab3@11976>     CMPA.w #$0,A3
0002A6DA <AmiBlitz3.ab3@11977>      BEQ.w freevars__done
0002A6DC <AmiBlitz3.ab3@11978>     MOVEA.l A3,A1
0002A6DE <AmiBlitz3.ab3@11979>     MOVEA.l (A3),A3
0002A6E0 <AmiBlitz3.ab3@11980>     MOVEQ.l #$00,D0
0002A6E4 <AmiBlitz3.ab3@11981>     MOVE.b $E+4(A1),D0
0002A6EA <AmiBlitz3.ab3@11982>     MOVEA.l _execbase,A6
0002A6F0 <AmiBlitz3.ab3@11983>     MOVE.l mempool2,a0
0002A6F4 <AmiBlitz3.ab3@11984>     JSR _FreePooled(A6)
0002A6F8 <AmiBlitz3.ab3@11985> BRA.w freevarsb
0002A6FA <AmiBlitz3.ab3@11988> RTS
0002A700 <AmiBlitz3.ab3@11992>   MOVEA.l currentlabeladdr,A0
0002A706 <AmiBlitz3.ab3@11993>   MOVE.l a0,lastlabel
0002A708 <AmiBlitz3.ab3@11994>   MOVEA.l (A0),A2
0002A70A <AmiBlitz3.ab3@11995>   CLR.l (A0)
0002A710 <AmiBlitz3.ab3@11996>   MOVEA.l _execbase,A6
0002A714 <AmiBlitz3.ab3@11999>   CMPA.w #$0,A2
0002A718 <AmiBlitz3.ab3@12000>    BEQ.w clearlabels__done
0002A71C <AmiBlitz3.ab3@12001>   MOVE.l $4(A2),D0
0002A720 <AmiBlitz3.ab3@12002>   BTST #$0,D0
0002A724 <AmiBlitz3.ab3@12003>    BNE.w clearlabels__skip
0002A726 <AmiBlitz3.ab3@12004>   MOVEA.l D0,A3
0002A72A <AmiBlitz3.ab3@12007>     CMPA.w #$0,A3
0002A72E <AmiBlitz3.ab3@12008>      BEQ.w clearlabels__skip
0002A730 <AmiBlitz3.ab3@12009>     MOVEA.l A3,A1
0002A732 <AmiBlitz3.ab3@12010>     MOVEA.l (A3),A3
0002A734 <AmiBlitz3.ab3@12011>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002A73A <AmiBlitz3.ab3@12012>     MOVE.l mempool,a0
0002A73E <AmiBlitz3.ab3@12013>     JSR _FreePooled(A6)
0002A742 <AmiBlitz3.ab3@12014> BRA.w clearlabels__loop2
0002A744 <AmiBlitz3.ab3@12017>   MOVEQ.l #$00,D0
0002A748 <AmiBlitz3.ab3@12018>   MOVE.b $12(A2),D0
0002A74A <AmiBlitz3.ab3@12019>   MOVEA.l A2,A1
0002A74C <AmiBlitz3.ab3@12020>   MOVEA.l (A2),A2
0002A752 <AmiBlitz3.ab3@12021>   MOVE.l mempool2,a0
0002A756 <AmiBlitz3.ab3@12023> BRA.w clearlabels__loop
0002A758 <AmiBlitz3.ab3@12026> RTS
0002A75E <AmiBlitz3.ab3@12030>   MOVEA.l firstpend,A3
0002A764 <AmiBlitz3.ab3@12031>   CLR.l firstpend
0002A76A <AmiBlitz3.ab3@12032>   MOVEA.l _execbase,A6
0002A76E <AmiBlitz3.ab3@12035>     CMPA.w #$0,A3
0002A772 <AmiBlitz3.ab3@12036>      BEQ.w freepends__done
0002A774 <AmiBlitz3.ab3@12037>     MOVEA.l A3,A1
0002A776 <AmiBlitz3.ab3@12038>     MOVEQ.l #$08,D0
0002A778 <AmiBlitz3.ab3@12039>     MOVEA.l (A3),A3
0002A77E <AmiBlitz3.ab3@12040>     MOVE.l mempool,a0
0002A782 <AmiBlitz3.ab3@12041>     JSR _FreePooled(A6)
0002A786 <AmiBlitz3.ab3@12042> BRA.w fpnd2
0002A788 <AmiBlitz3.ab3@12045> RTS
0002A78E <AmiBlitz3.ab3@12049>   MOVEA.l firstproc,A2
0002A794 <AmiBlitz3.ab3@12050>   CLR.l firstproc
0002A79A <AmiBlitz3.ab3@12051>   MOVEA.l _execbase,A6
0002A79E <AmiBlitz3.ab3@12054>     CMPA.w #$0,A2
0002A7A2 <AmiBlitz3.ab3@12055>      BEQ.w clearfunctionlist__done
0002A7A4 <AmiBlitz3.ab3@12056>     MOVEA.l A2,A1
0002A7A6 <AmiBlitz3.ab3@12057>     MOVEA.l (A2),A2
0002A7A8 <AmiBlitz3.ab3@12058>     MOVEQ.l #$00,D0
0002A7AC <AmiBlitz3.ab3@12059>     MOVE.b $20+#funcentry_extend(A1),D0
0002A7B2 <AmiBlitz3.ab3@12060>     MOVE.l mempool2,a0
0002A7B6 <AmiBlitz3.ab3@12061>     JSR _FreePooled(A6)
0002A7BA <AmiBlitz3.ab3@12062> BRA.w clearfunctionlist__loop
0002A7BC <AmiBlitz3.ab3@12065> RTS
0002A7C0 <AmiBlitz3.ab3@12069>   CMPA.w #$0,A2
0002A7C4 <AmiBlitz3.ab3@12070>    BEQ.w freetypes__done
0002A7C8 <AmiBlitz3.ab3@12071>   MOVEA.l $4(A2),A3
0002A7CC <AmiBlitz3.ab3@12072>   CMPA.w #$FF,A3
0002A7D0 <AmiBlitz3.ab3@12073>    BEQ.w freetypes__noway
0002A7D4 <AmiBlitz3.ab3@12077>    BSR.w freevars
0002A7D6 <AmiBlitz3.ab3@12080>     MOVEA.l A2,A1
0002A7D8 <AmiBlitz3.ab3@12081>     MOVEA.l (A2),A2
0002A7DA <AmiBlitz3.ab3@12082>     MOVEQ.l #$00,D0
0002A7DE <AmiBlitz3.ab3@12083>     MOVE.b $A(A1),D0
0002A7E4 <AmiBlitz3.ab3@12084>     MOVEA.l _execbase,A6
0002A7EA <AmiBlitz3.ab3@12085>     MOVE.l mempool2,a0
0002A7EE <AmiBlitz3.ab3@12086>     JSR _FreePooled(A6)
0002A7F2 <AmiBlitz3.ab3@12087> BRA.w freetypes
0002A7F4 <AmiBlitz3.ab3@12090> RTS
0002A7FA <AmiBlitz3.ab3@12094>   JSR uselib2
0002A800 <AmiBlitz3.ab3@12096>   CLR.w notshared
0002A806 <AmiBlitz3.ab3@12097>   CLR.w varmode
0002A80C <AmiBlitz3.ab3@12098>   MOVE.w proceduremode,D1
0002A810 <AmiBlitz3.ab3@12099>    BNE.w JL_0_8F4E
0002A816 <AmiBlitz3.ab3@12100>   LEA varbase,A2
0002A81C <AmiBlitz3.ab3@12101>   LEA ptr_parameterstore,a0
0002A820 <AmiBlitz3.ab3@12102>   CMP.b #$22,(a0)
0002A824 <AmiBlitz3.ab3@12103>   BNE JL_0_8E5E
0002A826 <AmiBlitz3.ab3@12104>   MOVEQ #0,d0
0002A82C <AmiBlitz3.ab3@12105> JMP error
0002A830 <AmiBlitz3.ab3@12108>   BSR.w findvariable
0002A834 <AmiBlitz3.ab3@12111>   BNE.w JL_0_8E7E
0002A83A <AmiBlitz3.ab3@12114>   MOVE.b flagmask+1,D1
0002A83E <AmiBlitz3.ab3@12115>   MOVE.b $7(A2),D3
0002A840 <AmiBlitz3.ab3@12116>   EOR.b D3,D1
0002A844 <AmiBlitz3.ab3@12117>   BNE 'l2
0002A84C <AmiBlitz3.ab3@12118>   CMP.b #2,nowdeclare
0002A850 <AmiBlitz3.ab3@12119>   BEQ errormsg_declaredtwice
0002A854 <AmiBlitz3.ab3@12120> BRA.w JL_0_8FA8
0002A858 <AmiBlitz3.ab3@12123>   BSR.w findlab
0002A85C <AmiBlitz3.ab3@12124>   BNE 'l1
0002A864 <AmiBlitz3.ab3@12125>   CMP.b #2,nowdeclare
0002A868 <AmiBlitz3.ab3@12126>   BEQ errormsg_declaredtwice
0002A86A <AmiBlitz3.ab3@12127>   CMP.w d0,d0
0002A86E <AmiBlitz3.ab3@12130> BRA.w JL_0_8E62
0002A870 <AmiBlitz3.ab3@12133>    MOVE.l a2,-(a7)
0002A876 <AmiBlitz3.ab3@12134>    LEA sharebase,a2
0002A878 <AmiBlitz3.ab3@12135>    MOVEQ #$f+4,d7
0002A87C <AmiBlitz3.ab3@12136>    BSR.w findlab
0002A880 <AmiBlitz3.ab3@12137>    BEQ 'l2x
0002A882 <AmiBlitz3.ab3@12138>    MOVE.l (a7)+,a2
0002A886 <AmiBlitz3.ab3@12139> BRA 'cont
0002A888 <AmiBlitz3.ab3@12142>   ADDQ.l #4,a7
0002A88E <AmiBlitz3.ab3@12143>   CLR.w varmode
0002A894 <AmiBlitz3.ab3@12144>   MOVE.b flagmask+1,D1
0002A898 <AmiBlitz3.ab3@12145>   MOVE.b $7(A2),D3
0002A89A <AmiBlitz3.ab3@12146>   EOR.b D3,D1
0002A89E <AmiBlitz3.ab3@12147>   BNE vardeclareerr
0002A8A2 <AmiBlitz3.ab3@12148> BRA JL_0_8FA8
0002A8A8 <AmiBlitz3.ab3@12151>    MOVE.w nonew,D1
0002A8AC <AmiBlitz3.ab3@12152>    BNE.w nonewerr
0002A8B2 <AmiBlitz3.ab3@12153>    TST.b nowdeclare
0002A8B6 <AmiBlitz3.ab3@12154>    BNE 'l2
0002A8BC <AmiBlitz3.ab3@12155>    TST.b declare2
0002A8C0 <AmiBlitz3.ab3@12156>    BEQ 'l1
0002A8C4 <AmiBlitz3.ab3@12157>    CMP.b #$2e,d0
0002A8C8 <AmiBlitz3.ab3@12158>    BEQ 'l2
0002A8CC <AmiBlitz3.ab3@12159>    CMP.b #"$",d0
0002A8D0 <AmiBlitz3.ab3@12160>    BEQ 'l2
0002A8D4 <AmiBlitz3.ab3@12161> BRA vardeclareerr
0002A8DA <AmiBlitz3.ab3@12164>   TST.b declare
0002A8DE <AmiBlitz3.ab3@12165>    BNE vardeclareerr
0002A8E2 <AmiBlitz3.ab3@12168>   BSR.w addvariable
0002A8E8 <AmiBlitz3.ab3@12169>   NOT.w notshared
0002A8EA <AmiBlitz3.ab3@12170>   MOVEA.l A2,A3
0002A8F0 <AmiBlitz3.ab3@12171>   MOVEA.l defaulttype,A2
0002A8F4 <AmiBlitz3.ab3@12172>   CMP.w #$2E,D0
0002A8F8 <AmiBlitz3.ab3@12173>    BEQ.w JL_0_8EB8
0002A8FC <AmiBlitz3.ab3@12174>   CMP.w #$24,D0
0002A900 <AmiBlitz3.ab3@12175>    BNE.w JL_0_8ECA
0002A906 <AmiBlitz3.ab3@12176>   LEA newtype_string,A2
0002A90A <AmiBlitz3.ab3@12177>    BSR.w get1bytemain
0002A90E <AmiBlitz3.ab3@12178> BRA.w JL_0_8ECA
0002A914 <AmiBlitz3.ab3@12181> JMP JUMP_notypeerr
0002A918 <AmiBlitz3.ab3@12184>    BSR.w getparameter2
0002A91E <AmiBlitz3.ab3@12185>   LEA newtypebase,A2
0002A922 <AmiBlitz3.ab3@12186>    BSR.w findtype
0002A926 <AmiBlitz3.ab3@12187>    BNE.w notypeerr3
0002A92C <AmiBlitz3.ab3@12190>   CMPA.l #newtype_byte,A2
0002A930 <AmiBlitz3.ab3@12191>    BEQ.w JL_0_8EECb
0002A936 <AmiBlitz3.ab3@12192>   MOVE.w varmode,D1
0002A93A <AmiBlitz3.ab3@12193>    BNE.w JL_0_8EE4b
0002A940 <AmiBlitz3.ab3@12194>   ADDQ.w #1,globalvarpointer
0002A948 <AmiBlitz3.ab3@12197>   BCLR #$0,globalvarpointer+1
0002A94C <AmiBlitz3.ab3@12200>   MOVE.l A2,$A(A3)
0002A954 <AmiBlitz3.ab3@12201>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A956 <AmiBlitz3.ab3@12203>   MOVEQ.l #$04,D1
0002A95E <AmiBlitz3.ab3@12204>   BTST #$0,flagmask+1
0002A962 <AmiBlitz3.ab3@12205>    BNE.w JL_0_8F22b
0002A96A <AmiBlitz3.ab3@12206>   BTST #$1,flagmask+1
0002A96E <AmiBlitz3.ab3@12207>    BNE.w JL_0_8F22b
0002A976 <AmiBlitz3.ab3@12208>   CMPI.l #$100,$4(A2)
0002A97A <AmiBlitz3.ab3@12209>    BCC.w JL_0_8F22b
0002A97E <AmiBlitz3.ab3@12210>   MOVE.w $8(A2),D1
0002A984 <AmiBlitz3.ab3@12213>   TST.w varmode
0002A988 <AmiBlitz3.ab3@12214> BRA.w JL_0_8F3E
0002A98C <AmiBlitz3.ab3@12223>   BSR.w getparameter2
0002A992 <AmiBlitz3.ab3@12224>   LEA newtypebase,A2
0002A996 <AmiBlitz3.ab3@12225>    BSR.w findtype
0002A99A <AmiBlitz3.ab3@12226>    BNE.w notypeerr
0002A9A0 <AmiBlitz3.ab3@12229>   CMPA.l #newtype_byte,A2
0002A9A4 <AmiBlitz3.ab3@12230>    BEQ.w JL_0_8EEC
0002A9AA <AmiBlitz3.ab3@12231>   MOVE.w varmode,D1
0002A9AE <AmiBlitz3.ab3@12232>    BNE.w JL_0_8EE4
0002A9B4 <AmiBlitz3.ab3@12233>   ADDQ.w #1,globalvarpointer
0002A9BC <AmiBlitz3.ab3@12236>   BCLR #$0,globalvarpointer+1
0002A9C0 <AmiBlitz3.ab3@12239>   MOVE.l A2,$A(A3)
0002A9C8 <AmiBlitz3.ab3@12240>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A9CA <AmiBlitz3.ab3@12241>   MOVEQ.l #$04,D1
0002A9D2 <AmiBlitz3.ab3@12242>   BTST #$0,flagmask+1
0002A9D6 <AmiBlitz3.ab3@12243>    BNE.w JL_0_8F22
0002A9DE <AmiBlitz3.ab3@12244>   BTST #$1,flagmask+1
0002A9E2 <AmiBlitz3.ab3@12245>    BNE.w JL_0_8F22
0002A9EA <AmiBlitz3.ab3@12246>   CMPI.l #$100,$4(A2)
0002A9EE <AmiBlitz3.ab3@12247>    BCC.w JL_0_8F22
0002A9F2 <AmiBlitz3.ab3@12248>   MOVE.w $8(A2),D1
0002A9F8 <AmiBlitz3.ab3@12251>   TST.w varmode
0002A9FC <AmiBlitz3.ab3@12252>    BEQ.w JL_0_8F3E
0002A9FE <AmiBlitz3.ab3@12253>   NEG.w D1
0002AA04 <AmiBlitz3.ab3@12254>   ADD.w D1,globalvarpointer
0002AA0C <AmiBlitz3.ab3@12255>   MOVE.w globalvarpointer,$4(A3)
0002AA0E <AmiBlitz3.ab3@12256> RTS
0002AA16 <AmiBlitz3.ab3@12259>   MOVE.w globalvarpointer,$4(A3)
0002AA1C <AmiBlitz3.ab3@12260>   ADD.w D1,globalvarpointer
0002AA1E <AmiBlitz3.ab3@12261> RTS
0002AA24 <AmiBlitz3.ab3@12265>   LEA firstglob,A2
0002AA28 <AmiBlitz3.ab3@12266>    BSR.w findvariable2
0002AA2C <AmiBlitz3.ab3@12269>   BNE.w JL_0_8F74
0002AA32 <AmiBlitz3.ab3@12270>   MOVE.b flagmask+1,D1
0002AA36 <AmiBlitz3.ab3@12271>   MOVE.b $7(A2),D3
0002AA38 <AmiBlitz3.ab3@12272>   EOR.b D3,D1
0002AA3C <AmiBlitz3.ab3@12273>    BEQ.w JL_0_8FA8
0002AA40 <AmiBlitz3.ab3@12274>    BSR.w findlab
0002AA44 <AmiBlitz3.ab3@12275> BRA.w JL_0_8F58
0002AA4C <AmiBlitz3.ab3@12278>   MOVE.w #$FFFF,varmode
0002AA52 <AmiBlitz3.ab3@12279>   MOVE.w globalvarpointer,-(A7)
0002AA5C <AmiBlitz3.ab3@12280>   MOVE.w locvaroff,globalvarpointer
0002AA62 <AmiBlitz3.ab3@12281>   LEA firstlocal,A2
0002AA6A <AmiBlitz3.ab3@12282>   MOVE.b #1,newvariable
0002AA6E <AmiBlitz3.ab3@12283>    BSR.w JL_0_8E5E
0002AA74 <AmiBlitz3.ab3@12284>   CLR.b newvariable
0002AA7E <AmiBlitz3.ab3@12285>   MOVE.w globalvarpointer,locvaroff
0002AA84 <AmiBlitz3.ab3@12286>   MOVE.w (A7)+,globalvarpointer
0002AA86 <AmiBlitz3.ab3@12287> RTS
0002AA88 <AmiBlitz3.ab3@12290>   MOVEA.l A2,A3
0002AA8C <AmiBlitz3.ab3@12291>   CMP.w #$2E,D0
0002AA90 <AmiBlitz3.ab3@12292>    BEQ.w JL_0_8FCE
0002AA94 <AmiBlitz3.ab3@12293>   CMP.w #$24,D0
0002AA98 <AmiBlitz3.ab3@12294>    BNE.w JL_0_8FE8
0002AAA0 <AmiBlitz3.ab3@12295>   CMPI.l #newtype_string,$A(A3)
0002AAA4 <AmiBlitz3.ab3@12296>    BNE.w rongtypeerr
0002AAA8 <AmiBlitz3.ab3@12297>    BSR.w get1bytemain
0002AAAC <AmiBlitz3.ab3@12298> BRA.w JL_0_8FE8
0002AAB0 <AmiBlitz3.ab3@12301>    BSR.w getparameter2
0002AAB6 <AmiBlitz3.ab3@12302>   LEA newtypebase,A2
0002AABA <AmiBlitz3.ab3@12303>    BSR.w findtype
0002AABE <AmiBlitz3.ab3@12304>    BNE.w notypeerr
0002AAC2 <AmiBlitz3.ab3@12305>   CMPA.l $A(A3),A2
0002AAC6 <AmiBlitz3.ab3@12306>    BNE.w rongtypeerr
0002AACE <AmiBlitz3.ab3@12308>   BTST #$0,flagmask+1
0002AAD2 <AmiBlitz3.ab3@12309>    BEQ.w JL_0_8FFE
0002AAD8 <AmiBlitz3.ab3@12310>   BTST #$0,$7(A3)
0002AADC <AmiBlitz3.ab3@12311>    BEQ.w pointerr
0002AAE0 <AmiBlitz3.ab3@12314>   MOVEA.l $A(A3),A2
0002AAE2 <AmiBlitz3.ab3@12315> RTS
0002AAE4 <AmiBlitz3.ab3@12319>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AAE8 <AmiBlitz3.ab3@12320>    BEQ.w JL_0_9042
0002AAF2 <AmiBlitz3.ab3@12321>    MOVE.l destpointer,loada
0002AAF6 <AmiBlitz3.ab3@12324> BRA JL_0_9032
0002AAFA <AmiBlitz3.ab3@12326>   CMP.w #$9,D3                                             ;_addq_arrays
0002AAFE <AmiBlitz3.ab3@12327>    BCC.w JL_0_9032
0002AB04 <AmiBlitz3.ab3@12328>   MOVE.w d3,arrayoffset
0002AB08 <AmiBlitz3.ab3@12329>   ANDI.w #$7,D3
0002AB0A <AmiBlitz3.ab3@12330>   LSL.w #8,D3
0002AB0C <AmiBlitz3.ab3@12331>   LSL.w #1,D3
0002AB14 <AmiBlitz3.ab3@12332>   ANDI.w #$F1FF,addqa0
0002AB1A <AmiBlitz3.ab3@12333>   OR.w D3,addqa0
0002AB20 <AmiBlitz3.ab3@12334>   MOVE.w addqa0,D1
0002AB24 <AmiBlitz3.ab3@12335> BRA.w writeword
0002AB2A <AmiBlitz3.ab3@12338>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AB2E <AmiBlitz3.ab3@12339>   BGT longoffset
0002AB34 <AmiBlitz3.ab3@12340>   MOVE.w D3,leaa0a0+2
0002AB3A <AmiBlitz3.ab3@12341>   MOVE.w d3,arrayoffset
0002AB40 <AmiBlitz3.ab3@12342>   MOVE.l leaa0a0,D1
0002AB44 <AmiBlitz3.ab3@12343>   BSR.w writelong
0002AB46 <AmiBlitz3.ab3@12346> RTS
0002AB4A <AmiBlitz3.ab3@12349>    MOVE.w #$d5fc,d1
0002AB4E <AmiBlitz3.ab3@12350>    BSR writeword
0002AB50 <AmiBlitz3.ab3@12351>    MOVE.l d3,d1
0002AB54 <AmiBlitz3.ab3@12352>    BSR.w writelong
0002AB56 <AmiBlitz3.ab3@12353> RTS
0002AB5A <AmiBlitz3.ab3@12357>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AB5E <AmiBlitz3.ab3@12360>    BCS.w arrchk3                                           
0002AB64 <AmiBlitz3.ab3@12361>    JSR $20000                                              ;jsr 0
0002AB6A <AmiBlitz3.ab3@12367>   TST.b fast
0002AB6E <AmiBlitz3.ab3@12368>   BEQ 'l1
0002AB70 <AmiBlitz3.ab3@12369>    MOVEQ #0,d1                                             ;faster arrays
0002AB76 <AmiBlitz3.ab3@12370>    MOVE.w regnum,d2
0002AB78 <AmiBlitz3.ab3@12371>    MOVE.w d2,d1
0002AB7A <AmiBlitz3.ab3@12372>    LSL.w #8,d1
0002AB7C <AmiBlitz3.ab3@12373>    LSL.w #4,d1
0002AB7E <AmiBlitz3.ab3@12374>    ADD.w d2,d1
0002AB84 <AmiBlitz3.ab3@12375>    OR.l #$4c2d0000,d1
0002AB8A <AmiBlitz3.ab3@12376>    TST.w varmode
0002AB8E <AmiBlitz3.ab3@12377>    BEQ 'l1a
0002AB92 <AmiBlitz3.ab3@12378>    BCLR #16,d1
0002AB96 <AmiBlitz3.ab3@12381>    BSR writelong
0002AB9A <AmiBlitz3.ab3@12382>    MOVE.w $4(A7),D1
0002AB9E <AmiBlitz3.ab3@12383>    BSR.w writeword
0002ABA4 <AmiBlitz3.ab3@12384>    MOVE.w regnum,D1
0002ABA6 <AmiBlitz3.ab3@12385>   SUBQ.w #1,D1
0002ABA8 <AmiBlitz3.ab3@12386>   LSL.w #8,D1
0002ABAA <AmiBlitz3.ab3@12387>   LSL.w #1,D1
0002ABAE <AmiBlitz3.ab3@12388>   ORI.w #$D080,D1
0002ABB4 <AmiBlitz3.ab3@12389>   OR.w regnum,D1
0002ABB8 <AmiBlitz3.ab3@12390>    BSR.w writeword
0002ABBA <AmiBlitz3.ab3@12391> RTS
0002ABC0 <AmiBlitz3.ab3@12394>   MOVE.w regnum,D2
0002ABC4 <AmiBlitz3.ab3@12395>   MOVE.w arrmul1(PC),D1
0002ABC6 <AmiBlitz3.ab3@12396>   OR.w D2,D1
0002ABC8 <AmiBlitz3.ab3@12397>   SUBQ.w #1,D1
0002ABCC <AmiBlitz3.ab3@12398>    BSR.w writeword
0002ABD0 <AmiBlitz3.ab3@12399>   MOVE.w arrmul2(PC),D1
0002ABD2 <AmiBlitz3.ab3@12400>   OR.w D2,D1
0002ABD4 <AmiBlitz3.ab3@12401>   MOVE.w D2,D3
0002ABD6 <AmiBlitz3.ab3@12402>   SUBQ.w #1,D3
0002ABD8 <AmiBlitz3.ab3@12403>   LSL.w #8,D3
0002ABDA <AmiBlitz3.ab3@12404>   LSL.w #1,D3
0002ABDC <AmiBlitz3.ab3@12405>   OR.w D3,D1
0002ABE0 <AmiBlitz3.ab3@12406>    BSR.w writeword
0002ABE4 <AmiBlitz3.ab3@12407>   MOVE.w arrmul3(PC),D1
0002ABE6 <AmiBlitz3.ab3@12408>   MOVE.w D2,D3
0002ABE8 <AmiBlitz3.ab3@12409>   LSL.w #8,D3
0002ABEA <AmiBlitz3.ab3@12410>   LSL.w #1,D3
0002ABEC <AmiBlitz3.ab3@12411>   OR.w D3,D1
0002ABF0 <AmiBlitz3.ab3@12412>    BSR.w pokewda5s
0002ABF4 <AmiBlitz3.ab3@12413>   MOVE.w $4(A7),D1
0002ABF6 <AmiBlitz3.ab3@12414>   ADDQ.w #2,D1
0002ABFA <AmiBlitz3.ab3@12415>    BSR.w writeword
0002ABFE <AmiBlitz3.ab3@12416>   MOVE.w arrmul4(PC),D1
0002AC00 <AmiBlitz3.ab3@12417>   MOVE.w D2,D3
0002AC02 <AmiBlitz3.ab3@12418>   SUBQ.w #1,D3
0002AC04 <AmiBlitz3.ab3@12419>   LSL.w #8,D3
0002AC06 <AmiBlitz3.ab3@12420>   LSL.w #1,D3
0002AC08 <AmiBlitz3.ab3@12421>   OR.w D3,D1
0002AC0C <AmiBlitz3.ab3@12422>    BSR.w pokewda5s
0002AC10 <AmiBlitz3.ab3@12423>   MOVE.w $4(A7),D1
0002AC14 <AmiBlitz3.ab3@12424>    BSR.w writeword
0002AC18 <AmiBlitz3.ab3@12425>   MOVE.w arrmul5(PC),D1
0002AC1A <AmiBlitz3.ab3@12426>   OR.w D2,D1
0002AC1C <AmiBlitz3.ab3@12427>   SUBQ.w #1,D1
0002AC20 <AmiBlitz3.ab3@12428>    BSR.w writeword
0002AC24 <AmiBlitz3.ab3@12429>   MOVE.w arrmul6(PC),D1
0002AC26 <AmiBlitz3.ab3@12430>   OR.w D2,D1
0002AC28 <AmiBlitz3.ab3@12431>   SUBQ.w #1,D1
0002AC2C <AmiBlitz3.ab3@12432>    BSR.w writeword
0002AC30 <AmiBlitz3.ab3@12433>   MOVE.w arrmul7(PC),D1
0002AC32 <AmiBlitz3.ab3@12434>   OR.w D2,D1
0002AC34 <AmiBlitz3.ab3@12435>   SUBQ.w #1,D1
0002AC36 <AmiBlitz3.ab3@12436>   MOVE.w D2,D3
0002AC38 <AmiBlitz3.ab3@12437>   LSL.w #8,D3
0002AC3A <AmiBlitz3.ab3@12438>   LSL.w #1,D3
0002AC3C <AmiBlitz3.ab3@12439>   OR.w D3,D1
0002AC40 <AmiBlitz3.ab3@12440>    BSR.w writeword
0002AC44 <AmiBlitz3.ab3@12441>   MOVE.w arrmul8(PC),D1
0002AC46 <AmiBlitz3.ab3@12442>   MOVE.w D2,D3
0002AC48 <AmiBlitz3.ab3@12443>   SUBQ.w #1,D3
0002AC4A <AmiBlitz3.ab3@12444>   LSL.w #8,D3
0002AC4C <AmiBlitz3.ab3@12445>   LSL.w #1,D3
0002AC4E <AmiBlitz3.ab3@12446>   OR.w D3,D1
0002AC52 <AmiBlitz3.ab3@12447>    BSR.w writeword
0002AC58 <AmiBlitz3.ab3@12448>   MOVE.w regnum,D1
0002AC5A <AmiBlitz3.ab3@12449>   SUBQ.w #1,D1
0002AC5C <AmiBlitz3.ab3@12450>   LSL.w #8,D1
0002AC5E <AmiBlitz3.ab3@12451>   LSL.w #1,D1
0002AC62 <AmiBlitz3.ab3@12452>   ORI.w #$D080,D1
0002AC68 <AmiBlitz3.ab3@12453>   OR.w regnum,D1
0002AC6C <AmiBlitz3.ab3@12454> BRA.w writeword
0002AC6E <AmiBlitz3.ab3@12462> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002AC70 <AmiBlitz3.ab3@12463> arrmul2:   MOVE  d0,d0
0002AC74 <AmiBlitz3.ab3@12464> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002AC78 <AmiBlitz3.ab3@12465> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002AC7A <AmiBlitz3.ab3@12467> arrmul5:   SWAP d0
0002AC7C <AmiBlitz3.ab3@12468> arrmul6:   CLR d0
0002AC7E <AmiBlitz3.ab3@12469> arrmul7:   ADD.l d0,d0
0002AC80 <AmiBlitz3.ab3@12470> arrmul8:   MOVE.l (a7)+,d0
0002AC84 <AmiBlitz3.ab3@12475> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002AC88 <AmiBlitz3.ab3@12476> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002AC8A <AmiBlitz3.ab3@12477> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002AC90 <AmiBlitz3.ab3@12495>   CLR.l lastoffset_org
0002AC96 <AmiBlitz3.ab3@12496>   BTST #$1,$7(A3)
0002AC9A <AmiBlitz3.ab3@12497>    BEQ.w calcvar__notarr
0002ACA0 <AmiBlitz3.ab3@12498>   MOVE.w notshared,D1
0002ACA4 <AmiBlitz3.ab3@12499>    BNE.w noarrerr
0002ACA8 <AmiBlitz3.ab3@12500>    BSR.w get1bytemain
0002ACAC <AmiBlitz3.ab3@12501>   CMP.w #$29,D0
0002ACB0 <AmiBlitz3.ab3@12502>    BNE.w calcvar__notalist
0002ACB6 <AmiBlitz3.ab3@12503>   BTST #$0,$6(A3)
0002ACBA <AmiBlitz3.ab3@12504>    BEQ.w nolisterr
0002ACC2 <AmiBlitz3.ab3@12505>   MOVE.w $4(A3),listcode1+2
0002ACC6 <AmiBlitz3.ab3@12506>   MOVE.l listcode1(PC),D1
0002ACCA <AmiBlitz3.ab3@12507>    BSR.w pokela5s
0002ACCE <AmiBlitz3.ab3@12508>   MOVE.l listcode2(PC),D1
0002ACD2 <AmiBlitz3.ab3@12509>    BSR.w writelong
0002ACD8 <AmiBlitz3.ab3@12510>   TST.b debugmode
0002ACDC <AmiBlitz3.ab3@12511>    BEQ.w calcvar__nolrerr
0002ACDE <AmiBlitz3.ab3@12515>   MOVE.l A2,-(A7)
0002ACE2 <AmiBlitz3.ab3@12516>   MOVE.w #$C315,D1
0002ACE6 <AmiBlitz3.ab3@12517>    BSR.w Atokejsr
0002ACE8 <AmiBlitz3.ab3@12518>   MOVEA.l (A7)+,A2
0002ACEC <AmiBlitz3.ab3@12521>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002ACF0 <AmiBlitz3.ab3@12523>    BSR.w writeword
0002ACF4 <AmiBlitz3.ab3@12524> BRA.w calcvar__normalar
0002ACF6 <AmiBlitz3.ab3@12527> calcvar__listoff:   Ds.w 1
0002ACFC <AmiBlitz3.ab3@12531>   CLR.w calcvar__listoff
0002AD02 <AmiBlitz3.ab3@12532>   BTST #$0,$6(A3)
0002AD06 <AmiBlitz3.ab3@12533>    BEQ.w calcvar__knop
0002AD0E <AmiBlitz3.ab3@12534>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002AD12 <AmiBlitz3.ab3@12537>   MOVEM.l A2-A3,-(A7)
0002AD18 <AmiBlitz3.ab3@12538>   MOVE.w varmode,-(A7)
0002AD1C <AmiBlitz3.ab3@12539>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002AD20 <AmiBlitz3.ab3@12540>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002AD22 <AmiBlitz3.ab3@12541>   MOVE.l A2,-(A7)
0002AD28 <AmiBlitz3.ab3@12542>   MOVE.w flagmask,-(A7)
0002AD32 <AmiBlitz3.ab3@12544>   MOVE.w oldqflag,instringon
0002AD38 <AmiBlitz3.ab3@12545>   MOVEA.l lastsourcepos,A5
0002AD3C <AmiBlitz3.ab3@12546>    BSR.w arreval
0002AD42 <AmiBlitz3.ab3@12547>   MOVE.w (A7)+,flagmask
0002AD4A <AmiBlitz3.ab3@12548>   MOVE.w $8(A7),varmode
0002AD50 <AmiBlitz3.ab3@12549>   TST.b debugmode
0002AD54 <AmiBlitz3.ab3@12550>    BEQ.w calcvar__noszchk
0002AD56 <AmiBlitz3.ab3@12554>   MOVEA.l (A7)+,A2
0002AD58 <AmiBlitz3.ab3@12555>   MOVEQ.l #$04,D1
0002AD60 <AmiBlitz3.ab3@12556>   BTST #$0,flagmask+1                                      ;pointer?
0002AD64 <AmiBlitz3.ab3@12557>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002AD68 <AmiBlitz3.ab3@12558>   MOVE.w $8(A2),D1
0002AD6C <AmiBlitz3.ab3@12561>   ADD.w calcvar__listoff(PC),D1
0002AD70 <AmiBlitz3.ab3@12562>   BSR.w JL_0_B6DE
0002AD76 <AmiBlitz3.ab3@12563>   ADDQ.w #1,regnum
0002AD78 <AmiBlitz3.ab3@12566>   ADDQ.w #4,(A7)
0002AD7C <AmiBlitz3.ab3@12567>   TST.w $4(A7)
0002AD80 <AmiBlitz3.ab3@12568>    BEQ.w calcvar__isglob
0002AD82 <AmiBlitz3.ab3@12569>   SUBQ.w #8,(A7)                                           ;range check local array
0002AD88 <AmiBlitz3.ab3@12572>   TST.b debugmode
0002AD8C <AmiBlitz3.ab3@12573>    BEQ.w calcvar__noer1
0002AD92 <AmiBlitz3.ab3@12574>   MOVE.w regnum,D1
0002AD94 <AmiBlitz3.ab3@12575>   SUBQ.w #1,D1
0002AD96 <AmiBlitz3.ab3@12576>   LSL.w #8,D1
0002AD98 <AmiBlitz3.ab3@12577>   LSL.w #1,D1
0002AD9C <AmiBlitz3.ab3@12578>   OR.w zarrchk(PC),D1
0002ADA0 <AmiBlitz3.ab3@12579>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002ADA2 <AmiBlitz3.ab3@12580>   MOVE.w (A7),D1
0002ADA6 <AmiBlitz3.ab3@12581>    BSR.w writeword
0002ADAA <AmiBlitz3.ab3@12582>   MOVE.l arrchk2(PC),D1
0002ADAE <AmiBlitz3.ab3@12583>    BSR.w writelong
0002ADB2 <AmiBlitz3.ab3@12584>   MOVE.w #$C309,D1
0002ADB6 <AmiBlitz3.ab3@12585>    BSR.w Atokejsr
0002ADBA <AmiBlitz3.ab3@12588>   SUBQ.w #1,$2(A7)
0002ADBE <AmiBlitz3.ab3@12589>    BEQ.w calcvar__ardone
0002ADC2 <AmiBlitz3.ab3@12590>   CMP.w #$2C,D0
0002ADC6 <AmiBlitz3.ab3@12591>    BNE.w syntaxerr
0002ADCC <AmiBlitz3.ab3@12592>    TST.b fast
0002ADD0 <AmiBlitz3.ab3@12593>    BNE 'l1
0002ADD4 <AmiBlitz3.ab3@12594>    BSR.w arrevalchk
0002ADD8 <AmiBlitz3.ab3@12595> BRA 'l2
0002ADDC <AmiBlitz3.ab3@12598>   BSR arreval
0002ADE4 <AmiBlitz3.ab3@12601>   MOVE.w $4(A7),varmode
0002ADE8 <AmiBlitz3.ab3@12602>   BSR.w JL_0_9052
0002ADEC <AmiBlitz3.ab3@12603> BRA.w calcvar__arloop
0002ADF0 <AmiBlitz3.ab3@12607>   CMP.w #$29,D0
0002ADF4 <AmiBlitz3.ab3@12608>    BNE.w syntaxerr
0002ADFA <AmiBlitz3.ab3@12609>   SUBQ.w #1,regnum
0002ADFC <AmiBlitz3.ab3@12610>   ADDQ.w #6,A7
0002AE00 <AmiBlitz3.ab3@12611>   MOVEM.l (A7)+,A2-A3
0002AE08 <AmiBlitz3.ab3@12612>   MOVE.w $4(A3),movea5a0+2
0002AE0E <AmiBlitz3.ab3@12613>   MOVE.l movea5a0,D1
0002AE12 <AmiBlitz3.ab3@12614>    BSR.w pokela5s
0002AE18 <AmiBlitz3.ab3@12615>   MOVE.w regnum,D1
0002AE1C <AmiBlitz3.ab3@12616>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002AE20 <AmiBlitz3.ab3@12617>    BSR.w writeword
0002AE26 <AmiBlitz3.ab3@12618>   BTST #$0,$6(A3)
0002AE2A <AmiBlitz3.ab3@12619>    BEQ.w calcvar__normalar
0002AE2E <AmiBlitz3.ab3@12623>   MOVE.w listarfix(PC),D1
0002AE32 <AmiBlitz3.ab3@12624>    BSR.w writeword
0002AE36 <AmiBlitz3.ab3@12627>   BSR.w get1bytemain
0002AE3C <AmiBlitz3.ab3@12631>   BTST #$0,$7(A3)
0002AE40 <AmiBlitz3.ab3@12632>    BEQ.w calcvar__noppnt
0002AE44 <AmiBlitz3.ab3@12633>   CMP.w #$5C,D0
0002AE48 <AmiBlitz3.ab3@12634>    BNE.w calcvar__pmskip
0002AE4C <AmiBlitz3.ab3@12635>   MOVE.w calcvar__pfix(PC),D1
0002AE50 <AmiBlitz3.ab3@12636>    BSR.w writeword
0002AE54 <AmiBlitz3.ab3@12639>   MOVE.w #$8000,D2
0002AE58 <AmiBlitz3.ab3@12640> BRA.w calcvar__loopml
0002AE5C <AmiBlitz3.ab3@12643>   MOVE.w #$C000,D2
0002AE60 <AmiBlitz3.ab3@12644> BRA.w calcvar__loopml
0002AE62 <AmiBlitz3.ab3@12648> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002AE66 <AmiBlitz3.ab3@12653>   CMP.w #$28,D0
0002AE6A <AmiBlitz3.ab3@12654>    BEQ.w noarrerr
0002AE72 <AmiBlitz3.ab3@12655>   CMPI.l #$100,$4(A2)
0002AE76 <AmiBlitz3.ab3@12656>    BCS.w calcvar__simpvar
0002AE7C <AmiBlitz3.ab3@12657>   BTST #$0,$7(A3)
0002AE80 <AmiBlitz3.ab3@12658>    BEQ.w calcvar__notap
0002AE84 <AmiBlitz3.ab3@12662>   CMP.w #$5C,D0
0002AE88 <AmiBlitz3.ab3@12663>    BEQ.w calcvar__notap
0002AE8A <AmiBlitz3.ab3@12664>   MOVEQ.l #$00,D2
0002AE8E <AmiBlitz3.ab3@12665> BRA.w calcvar__simpvar2
0002AE92 <AmiBlitz3.ab3@12668>   MOVE.w #$8000,D2
0002AE9A <AmiBlitz3.ab3@12669>   MOVE.w $4(A3),movea5a0+2
0002AEA0 <AmiBlitz3.ab3@12670>   MOVE.l movea5a0,D1
0002AEA4 <AmiBlitz3.ab3@12671>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002AEAA <AmiBlitz3.ab3@12673>    TST.b debugmode
0002AEAE <AmiBlitz3.ab3@12674>    BEQ.w 'skip
0002AEB2 <AmiBlitz3.ab3@12675>    MOVE.w #$c320,D1
0002AEB8 <AmiBlitz3.ab3@12676>    JSR Atokejsr
0002AEBA <AmiBlitz3.ab3@12680>   MOVEQ.l #$00,D3
0002AEBE <AmiBlitz3.ab3@12683>   CMP.w #$5C,D0
0002AEC2 <AmiBlitz3.ab3@12684>    BNE.w calcvar__done
0002AECA <AmiBlitz3.ab3@12685>   CMPI.l #$100,$4(A2)
0002AECE <AmiBlitz3.ab3@12686>    BCS.w rongtypeerr
0002AED0 <AmiBlitz3.ab3@12687>   MOVE.w D2,-(A7)
0002AED4 <AmiBlitz3.ab3@12688>    BSR.w getparameter2
0002AED8 <AmiBlitz3.ab3@12689>    BEQ.w syntaxerr
0002AEDA <AmiBlitz3.ab3@12690>   ADDQ.w #4,A2
0002AEDE <AmiBlitz3.ab3@12691>    BSR.w findvariable2
0002AEE2 <AmiBlitz3.ab3@12692>    BNE.w noofferr
0002AEE4 <AmiBlitz3.ab3@12693>   MOVE.w (A7)+,D2
0002AEE6 <AmiBlitz3.ab3@12694>   MOVEA.l A2,A3                                             ;pointer to offset
0002AEEA <AmiBlitz3.ab3@12695>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002AEEC <AmiBlitz3.ab3@12696>   MOVEQ #0,d1
0002AEF0 <AmiBlitz3.ab3@12697>   MOVE.w 4(a3),d1
0002AEF2 <AmiBlitz3.ab3@12698>   ADD.l d1,d3
0002AEF8 <AmiBlitz3.ab3@12700>   MOVE.l A3,lastoffset_org
0002AEFC <AmiBlitz3.ab3@12701>   CMP.w #$5B,D0
0002AF00 <AmiBlitz3.ab3@12702>    BNE.w calcvar__realdone
0002AF06 <AmiBlitz3.ab3@12703>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002AF0A <AmiBlitz3.ab3@12704>    BEQ.w rongtypeerr
0002AF0E <AmiBlitz3.ab3@12705>    BSR.w JL_0_9004
0002AF12 <AmiBlitz3.ab3@12706>   MOVEM.l A2-A3,-(A7)
0002AF18 <AmiBlitz3.ab3@12707>   MOVE.w varmode,-(A7)
0002AF1E <AmiBlitz3.ab3@12708>   MOVE.l lastoffset_org,-(A7)
0002AF24 <AmiBlitz3.ab3@12709>   MOVE.w pusha2,D1
0002AF28 <AmiBlitz3.ab3@12710>    BSR.w writeword
0002AF2A <AmiBlitz3.ab3@12711>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002AF34 <AmiBlitz3.ab3@12712>   MOVE.l destpointer,deststore
0002AF3A <AmiBlitz3.ab3@12713>    MOVE.l rightsidetype,-(a7)
0002AF40 <AmiBlitz3.ab3@12714>    MOVE.l leftsidetype,-(a7)
0002AF46 <AmiBlitz3.ab3@12715>    CLR.l rightsidetype
0002AF4C <AmiBlitz3.ab3@12716>    CLR.l leftsidetype
0002AF50 <AmiBlitz3.ab3@12717>    BSR.w eval
0002AF56 <AmiBlitz3.ab3@12718>    MOVE.l (a7)+,rightsidetype
0002AF5C <AmiBlitz3.ab3@12719>    MOVE.l (a7)+,leftsidetype
0002AF60 <AmiBlitz3.ab3@12720>   CMP.w #$5D,D0
0002AF64 <AmiBlitz3.ab3@12721>    BNE.w syntaxerr
0002AF6A <AmiBlitz3.ab3@12722>   TST.b fast                                               ;a2,-(a7) array
0002AF6E <AmiBlitz3.ab3@12723>   BEQ calcvar__loop0_l10
0002AF74 <AmiBlitz3.ab3@12727>   MOVE.l destpointer,d1
0002AF7A <AmiBlitz3.ab3@12728>   SUB.l deststore,d1
0002AF80 <AmiBlitz3.ab3@12729>   CMP.l #4,d1
0002AF84 <AmiBlitz3.ab3@12730>   BNE calcvar__loop0_l10
0002AF8A <AmiBlitz3.ab3@12731>   MOVE.l destpointer,a4
0002AF90 <AmiBlitz3.ab3@12732>   MOVE.l -4(a4),-6(a4)
0002AF96 <AmiBlitz3.ab3@12733>   SUBQ.l #2,destpointer
0002AF9C <AmiBlitz3.ab3@12734>   CLR.l imm_addr
0002AFA2 <AmiBlitz3.ab3@12735>   CLR.l load_var_addr
0002AFA6 <AmiBlitz3.ab3@12736> BRA calcvar__loop0_l20
0002AFAC <AmiBlitz3.ab3@12739>   MOVE.w pulla2,D1
0002AFB0 <AmiBlitz3.ab3@12740>    BSR.w writeword
0002AFB6 <AmiBlitz3.ab3@12743>   MOVE.l (A7)+,lastoffset_org
0002AFBC <AmiBlitz3.ab3@12744>   MOVE.w (A7)+,varmode
0002AFC0 <AmiBlitz3.ab3@12745>   MOVEM.l (A7)+,A2-A3
0002AFC6 <AmiBlitz3.ab3@12751>   TST.w debugmode
0002AFCA <AmiBlitz3.ab3@12752>    BEQ.b calcvar__nobchk
0002AFCE <AmiBlitz3.ab3@12753>   MOVE.w $8(A3),D1
0002AFD2 <AmiBlitz3.ab3@12754>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002AFD8 <AmiBlitz3.ab3@12758>   MOVE.w D1,brchkcode+2
0002AFDE <AmiBlitz3.ab3@12759>   MOVE.w regnum,D1
0002AFE0 <AmiBlitz3.ab3@12760>   LSL.w #8,D1
0002AFE2 <AmiBlitz3.ab3@12761>   LSL.w #1,D1
0002AFE6 <AmiBlitz3.ab3@12762>   OR.w brchkcode0(PC),D1
0002AFEC <AmiBlitz3.ab3@12763>   MOVE.w D1,brchkcode
0002AFF0 <AmiBlitz3.ab3@12764>   MOVE.l brchkcode(PC),D1
0002AFF4 <AmiBlitz3.ab3@12765>    BSR.w writelong
0002AFF8 <AmiBlitz3.ab3@12766>   MOVE.l brchkcode+4(PC),D1
0002AFFC <AmiBlitz3.ab3@12767>    BSR.w writelong
0002B000 <AmiBlitz3.ab3@12768>   MOVE.w brchkcode+8(PC),D1
0002B004 <AmiBlitz3.ab3@12769>    BSR.w writeword
0002B006 <AmiBlitz3.ab3@12772>   MOVEQ.l #$04,D1
0002B00C <AmiBlitz3.ab3@12773>   BTST #$0,$7(A3)
0002B010 <AmiBlitz3.ab3@12774>    BNE.w calcvar__dothemul
0002B014 <AmiBlitz3.ab3@12775>   MOVE.w $8(A2),D1
0002B018 <AmiBlitz3.ab3@12778>   BSR.w JL_0_B6DE
0002B01E <AmiBlitz3.ab3@12779>   MOVE.w addrega2,D1
0002B024 <AmiBlitz3.ab3@12780>   OR.w regnum,D1
0002B028 <AmiBlitz3.ab3@12781>    OR.w #$100,d1                                           ;>32kb types
0002B02C <AmiBlitz3.ab3@12782>    BSR.w writeword
0002B030 <AmiBlitz3.ab3@12783>    BSR.w get1bytemain
0002B032 <AmiBlitz3.ab3@12784>   MOVEQ.l #$00,D3
0002B036 <AmiBlitz3.ab3@12785>   MOVE.w #$8000,D2
0002B03C <AmiBlitz3.ab3@12788>   BTST #$0,$7(A3)
0002B040 <AmiBlitz3.ab3@12789>    BNE.w calcvar__pointer
0002B044 <AmiBlitz3.ab3@12790> BRA.w calcvar__loop0
0002B048 <AmiBlitz3.ab3@12794>  CMP.w #$5C,D0
0002B04C <AmiBlitz3.ab3@12795>    BNE.w calcvar__done3
0002B04E <AmiBlitz3.ab3@12796>   TST.w D3
0002B052 <AmiBlitz3.ab3@12797>    BNE.w calcvar__pskip
0002B058 <AmiBlitz3.ab3@12798>   MOVE.w movea0,D1
0002B05C <AmiBlitz3.ab3@12799>    BSR.w writeword
0002B060 <AmiBlitz3.ab3@12800> BRA.w calcvar__pmore
0002B066 <AmiBlitz3.ab3@12803>   MOVE.w D3,movea0a0+2
0002B06C <AmiBlitz3.ab3@12804>   MOVE.l movea0a0,D1
0002B070 <AmiBlitz3.ab3@12805>    BSR.w writelong
0002B076 <AmiBlitz3.ab3@12808>   BTST #$2,$7(A3)
0002B07A <AmiBlitz3.ab3@12809>    BEQ.w calcvar__loopml
0002B080 <AmiBlitz3.ab3@12810>   MOVE.l adda0a0,D1
0002B084 <AmiBlitz3.ab3@12811>    BSR.w writelong
0002B088 <AmiBlitz3.ab3@12812> BRA.w calcvar__loopml
0002B08C <AmiBlitz3.ab3@12815>   BSET #$E,D2
0002B092 <AmiBlitz3.ab3@12816>   BTST #$2,$7(A3)
0002B096 <AmiBlitz3.ab3@12817>    BNE.w calcvar__done
0002B09A <AmiBlitz3.ab3@12818>   BSET #$D,D2
0002B0A2 <AmiBlitz3.ab3@12821>   CMPI.l #$100,$4(A2)
0002B0A6 <AmiBlitz3.ab3@12822>    BCC.w calcvar__done2
0002B0AA <AmiBlitz3.ab3@12823>   MOVE.b $7(A2),D2
0002B0AE <AmiBlitz3.ab3@12826> BRA.w JL_0_9004
0002B0B2 <AmiBlitz3.ab3@12829>   MOVE.w $6(A2),D2
0002B0B6 <AmiBlitz3.ab3@12832>   MOVE.w $4(A3),D3
0002B0BC <AmiBlitz3.ab3@12833>   BTST #$0,$7(A3)
0002B0C0 <AmiBlitz3.ab3@12834>    BEQ.w calcvar__nopoint
0002B0C4 <AmiBlitz3.ab3@12835>   BSET #$E,D2
0002B0C6 <AmiBlitz3.ab3@12838> RTS
0002B0CA <AmiBlitz3.ab3@12842> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B0CE <AmiBlitz3.ab3@12843> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B0D0 <AmiBlitz3.ab3@12844>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B0D2 <AmiBlitz3.ab3@12845>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B0D4 <AmiBlitz3.ab3@12846>              Dc.b $4E,$40                                  ;TRAP    #00
0002B0DA <AmiBlitz3.ab3@12854>   TST.w varmode
0002B0DE <AmiBlitz3.ab3@12855>    BEQ.w writeword
0002B0E2 <AmiBlitz3.ab3@12856>   BCLR #$0,D1
0002B0E6 <AmiBlitz3.ab3@12857> BRA.w writeword
0002B0EC <AmiBlitz3.ab3@12860>   TST.w varmode
0002B0F0 <AmiBlitz3.ab3@12861>    BEQ.w writeword
0002B0F4 <AmiBlitz3.ab3@12862>   BCLR #$9,D1
0002B0F8 <AmiBlitz3.ab3@12863> BRA.w writeword
0002B0FE <AmiBlitz3.ab3@12866>   TST.w proceduremode
0002B102 <AmiBlitz3.ab3@12867>    BEQ.w writelong
0002B106 <AmiBlitz3.ab3@12868>   BCLR #$19,D1
0002B10A <AmiBlitz3.ab3@12869> BRA.w writelong
0002B110 <AmiBlitz3.ab3@12872>   TST.w varmode
0002B114 <AmiBlitz3.ab3@12873>   BEQ.w writelong
0002B118 <AmiBlitz3.ab3@12874>   BCLR #$10,D1
0002B11E <AmiBlitz3.ab3@12877>   ADDQ.l #1,destpointer
0002B126 <AmiBlitz3.ab3@12878>   BCLR #$0,destpointer+3
0002B12C <AmiBlitz3.ab3@12879>   MOVEA.l destpointer,A4
0002B132 <AmiBlitz3.ab3@12880>   CMPA.l destbufferend,A4
0002B136 <AmiBlitz3.ab3@12881>    BCC.w writeword__overa
0002B138 <AmiBlitz3.ab3@12882>   MOVE.l D1,(A4)+
0002B13E <AmiBlitz3.ab3@12885>   MOVE.l A4,destpointer
0002B142 <AmiBlitz3.ab3@12886>   CMPA.l bigpc(PC),A4
0002B146 <AmiBlitz3.ab3@12887>    BHI.w writeword__nbp
0002B148 <AmiBlitz3.ab3@12888> RTS
0002B150 <AmiBlitz3.ab3@12891>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B156 <AmiBlitz3.ab3@12892>   CLR.b fast
0002B15C <AmiBlitz3.ab3@12893>   CLR.b fpu
0002B162 <AmiBlitz3.ab3@12894>   CLR.b iee
0002B164 <AmiBlitz3.ab3@12895>   ADDQ.w #4,A4
0002B168 <AmiBlitz3.ab3@12896> BRA.w writeword__msa
0002B16E <AmiBlitz3.ab3@12902>   ADDQ.l #1,destpointer
0002B176 <AmiBlitz3.ab3@12903>   BCLR #$0,destpointer+3
0002B17C <AmiBlitz3.ab3@12904>   MOVEA.l destpointer,A4
0002B182 <AmiBlitz3.ab3@12905>   CMPA.l destbufferend,A4
0002B186 <AmiBlitz3.ab3@12906>    BCC.w writeword__over
0002B188 <AmiBlitz3.ab3@12907>   MOVE.w D1,(A4)+
0002B18E <AmiBlitz3.ab3@12910>   MOVE.l A4,destpointer
0002B192 <AmiBlitz3.ab3@12911>   CMPA.l bigpc(PC),A4
0002B196 <AmiBlitz3.ab3@12912>    BHI.w writeword__nbp
0002B198 <AmiBlitz3.ab3@12913> RTS
0002B19E <AmiBlitz3.ab3@12916>   ADDQ.l #1,destpointer
0002B1A6 <AmiBlitz3.ab3@12917>   BCLR #$0,destpointer+3
0002B1AC <AmiBlitz3.ab3@12918>   MOVEA.l destpointer,A4
0002B1B2 <AmiBlitz3.ab3@12919>   CMPA.l destbufferend,A4
0002B1B6 <AmiBlitz3.ab3@12920>    BCC.w writeword__over
0002B1B8 <AmiBlitz3.ab3@12921>   MOVE.w D1,(A4)+
0002B1BE <AmiBlitz3.ab3@12922>   MOVE.l A4,destpointer
0002B1C2 <AmiBlitz3.ab3@12923>   CMPA.l bigpc(PC),A4
0002B1C6 <AmiBlitz3.ab3@12924>    BHI.w writeword__nbp
0002B1C8 <AmiBlitz3.ab3@12925> RTS
0002B1CE <AmiBlitz3.ab3@12928>   TST.w cfetchmode
0002B1D2 <AmiBlitz3.ab3@12929>   BNE.w writeword__nbp2
0002B1D8 <AmiBlitz3.ab3@12930>   MOVE.l A4,bigpc
0002B1DA <AmiBlitz3.ab3@12933> RTS
0002B1E2 <AmiBlitz3.ab3@12936>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B1E4 <AmiBlitz3.ab3@12937>   ADDQ.w #2,A4
0002B1EA <AmiBlitz3.ab3@12938>   CLR.b fast
0002B1F0 <AmiBlitz3.ab3@12939>   CLR.b fpu
0002B1F6 <AmiBlitz3.ab3@12940>   CLR.b iee
0002B1FA <AmiBlitz3.ab3@12941> BRA.w writeword__ms
0002B200 <AmiBlitz3.ab3@12945>   MOVEA.l destpointer,A4
0002B206 <AmiBlitz3.ab3@12946>   CMPA.l destbufferend,A4
0002B20A <AmiBlitz3.ab3@12947>    BCC.w writebyte__over
0002B20C <AmiBlitz3.ab3@12948>   MOVE.b D1,(A4)+
0002B212 <AmiBlitz3.ab3@12951>   MOVE.l A4,destpointer
0002B216 <AmiBlitz3.ab3@12952>   CMPA.l bigpc(PC),A4
0002B21A <AmiBlitz3.ab3@12953>    BHI.w writebyte__nbp
0002B21C <AmiBlitz3.ab3@12954> RTS
0002B222 <AmiBlitz3.ab3@12957>   TST.w cfetchmode
0002B226 <AmiBlitz3.ab3@12958>    BNE.w writebyte__nbp2
0002B22C <AmiBlitz3.ab3@12959>   MOVE.l A4,bigpc
0002B22E <AmiBlitz3.ab3@12962> RTS
0002B236 <AmiBlitz3.ab3@12965>   MOVE.w #-1,dontwrite
0002B238 <AmiBlitz3.ab3@12966>   ADDQ.w #1,A4
0002B23E <AmiBlitz3.ab3@12967>   CLR.b fast
0002B244 <AmiBlitz3.ab3@12968>   CLR.b fpu
0002B24A <AmiBlitz3.ab3@12969>   CLR.b iee
0002B24E <AmiBlitz3.ab3@12970> BRA.w writebyte__ms
0002B252 <AmiBlitz3.ab3@12973> bigpc:   Ds.l 1
0002B254 <AmiBlitz3.ab3@12977>   MOVE.w (A0)+,D1
0002B258 <AmiBlitz3.ab3@12978>   BSR.w writeword
0002B25A <AmiBlitz3.ab3@12981>     CMPA.l A1,A0
0002B25E <AmiBlitz3.ab3@12982>     BCC.w pokecode__done
0002B260 <AmiBlitz3.ab3@12983>       MOVE.w (A0)+,D1
0002B264 <AmiBlitz3.ab3@12984>       BSR.w writeword
0002B268 <AmiBlitz3.ab3@12985> BRA.w pokecode__loop
0002B26A <AmiBlitz3.ab3@12988> RTS
0002B26C <AmiBlitz3.ab3@12991>   MOVE.w (A0)+,D1
0002B270 <AmiBlitz3.ab3@12992>   BSR.w writeword
0002B272 <AmiBlitz3.ab3@12993>   CMPA.l A1,A0
0002B276 <AmiBlitz3.ab3@12994>   BCS.w pokecode2
0002B278 <AmiBlitz3.ab3@12995> RTS
0002B27E <AmiBlitz3.ab3@13001>   TST.b iniffcommand
0002B282 <AmiBlitz3.ab3@13002>   BEQ 'l1
0002B286 <AmiBlitz3.ab3@13003>     MOVE.w #$4880,D1
0002B28C <AmiBlitz3.ab3@13004>     OR.w regnum,D1
0002B290 <AmiBlitz3.ab3@13005>     BSR writeword
0002B292 <AmiBlitz3.ab3@13008> RTS
0002B296 <AmiBlitz3.ab3@13011>   BSR.w convert_byte_to_word
0002B29C <AmiBlitz3.ab3@13014>   TST.b iee
0002B2A0 <AmiBlitz3.ab3@13015>   BEQ 'old
0002B2A4 <AmiBlitz3.ab3@13016>   CMP.b #5,d2
0002B2A8 <AmiBlitz3.ab3@13017>   BEQ wtof
0002B2AC <AmiBlitz3.ab3@13020>   MOVE.w #$48C0,D1
0002B2B2 <AmiBlitz3.ab3@13021>   OR.w regnum,D1
0002B2B6 <AmiBlitz3.ab3@13022> BRA.w writeword
0002B2B8 <AmiBlitz3.ab3@13025>   MOVEQ #0,d0
0002B2BE <AmiBlitz3.ab3@13026>   MOVE.w regnum,d0
0002B2C0 <AmiBlitz3.ab3@13027>   ASL.l #7,d0
0002B2C6 <AmiBlitz3.ab3@13028>   MOVE.l #$f2005000,d1
0002B2C8 <AmiBlitz3.ab3@13029>   OR.l d0,d1
0002B2CA <AmiBlitz3.ab3@13030>   ASL.l #1,d0
0002B2CC <AmiBlitz3.ab3@13031>   ASL.l #8,d0
0002B2CE <AmiBlitz3.ab3@13032>   OR.l d0,d1
0002B2D2 <AmiBlitz3.ab3@13033> BRA writelong
0002B2D6 <AmiBlitz3.ab3@13037>   BSR.w convert_byte_to_word
0002B2DA <AmiBlitz3.ab3@13040>   MOVE.w #$4840,D1
0002B2E0 <AmiBlitz3.ab3@13041>   OR.w regnum,D1
0002B2E4 <AmiBlitz3.ab3@13042>    BSR.w writeword
0002B2E8 <AmiBlitz3.ab3@13043>   MOVE.w #$4240,D1
0002B2EE <AmiBlitz3.ab3@13044>   OR.w regnum,D1
0002B2F2 <AmiBlitz3.ab3@13045> BRA.w writeword
0002B2F6 <AmiBlitz3.ab3@13049>   CMP.w #$ffdc,d1
0002B2FA <AmiBlitz3.ab3@13050>   BNE 'negfpu
0002B2FC <AmiBlitz3.ab3@13051>   MOVEQ #0,d0
0002B302 <AmiBlitz3.ab3@13052>   MOVE.w regnum,d0
0002B304 <AmiBlitz3.ab3@13053>   ASL.l #7,d0
0002B30A <AmiBlitz3.ab3@13054>   MOVE.l #$f2004000,d1
0002B30C <AmiBlitz3.ab3@13055>   OR.l d0,d1
0002B30E <AmiBlitz3.ab3@13056>   ASL.l #1,d0
0002B310 <AmiBlitz3.ab3@13057>   ASL.l #8,d0
0002B312 <AmiBlitz3.ab3@13058>   OR.l d0,d1
0002B316 <AmiBlitz3.ab3@13059> BRA writelong
0002B318 <AmiBlitz3.ab3@13063>   MOVEQ #0,d1
0002B31E <AmiBlitz3.ab3@13064>   MOVE.w regnum,d1                                         ;fpu neg
0002B320 <AmiBlitz3.ab3@13065>   ASL.l #7,d1
0002B326 <AmiBlitz3.ab3@13066>   OR.l #$f200001a,d1
0002B328 <AmiBlitz3.ab3@13067>   MOVE.l d0,-(a7)
0002B32A <AmiBlitz3.ab3@13068>   MOVEQ #0,d0
0002B330 <AmiBlitz3.ab3@13069>   MOVE.w regnum,d0
0002B332 <AmiBlitz3.ab3@13070>   ASL.l #8,d0
0002B334 <AmiBlitz3.ab3@13071>   ASL.l #2,d0
0002B336 <AmiBlitz3.ab3@13072>   OR.l d0,d1
0002B338 <AmiBlitz3.ab3@13073>   MOVE.l (a7)+,d0
0002B33C <AmiBlitz3.ab3@13074> BRA writelong
0002B342 <AmiBlitz3.ab3@13077>    TST.b iee
0002B346 <AmiBlitz3.ab3@13078>    BNE wtof
0002B34A <AmiBlitz3.ab3@13079>    BSR.w convert_byte_to_long
0002B34E <AmiBlitz3.ab3@13082>    MOVE.w #$FFDC,D1
0002B354 <AmiBlitz3.ab3@13085>    TST.b iee
0002B358 <AmiBlitz3.ab3@13086>    BNE ltof
0002B35E <AmiBlitz3.ab3@13087>    MOVE.w D1,libjsr+2
0002B362 <AmiBlitz3.ab3@13088>    BSR.w JL_0_AD40
0002B364 <AmiBlitz3.ab3@13089>   MOVE.l D4,D1
0002B368 <AmiBlitz3.ab3@13090>    BSR.w JL_0_AD38
0002B36C <AmiBlitz3.ab3@13091>   MOVE.w #$C900,D1
0002B370 <AmiBlitz3.ab3@13092>    BSR.w Atokejsr
0002B374 <AmiBlitz3.ab3@13093>    BSR.w JL_0_A352
0002B37A <AmiBlitz3.ab3@13094>   MOVE.l libjsr,D1
0002B37E <AmiBlitz3.ab3@13095>    BSR.w writelong
0002B382 <AmiBlitz3.ab3@13096>    BSR.w JL_0_A36E
0002B384 <AmiBlitz3.ab3@13097>   MOVE.l D5,D1
0002B388 <AmiBlitz3.ab3@13098> BRA.w JL_0_AD38
0002B38A <AmiBlitz3.ab3@13101> RTS
0002B38E <AmiBlitz3.ab3@13104>   MOVE.w #$C317,D1
0002B394 <AmiBlitz3.ab3@13105>   TST.b typecheck
0002B398 <AmiBlitz3.ab3@13106>   BEQ 'l1
0002B39E <AmiBlitz3.ab3@13107>    TST.b notypecheck
0002B3A2 <AmiBlitz3.ab3@13108>    BNE 'l1
0002B3A8 <AmiBlitz3.ab3@13109>    TST.l lasttoken
0002B3AE <AmiBlitz3.ab3@13116>   TST.b debugmode
0002B3B2 <AmiBlitz3.ab3@13117>    BEQ.w JL_0_9696
0002B3BA <AmiBlitz3.ab3@13118>   BTST #$7,overflowcheck
0002B3BE <AmiBlitz3.ab3@13119>    BEQ.w JL_0_9696
0002B3C4 <AmiBlitz3.ab3@13120>   TST.w cfetchmode
0002B3C8 <AmiBlitz3.ab3@13121>    BNE.w JL_0_9696
0002B3CE <AmiBlitz3.ab3@13122>   TST.w regnum
0002B3D2 <AmiBlitz3.ab3@13123>    BEQ.w JL_0_968A
0002B3D4 <AmiBlitz3.ab3@13124>   MOVE.w D1,-(A7)
0002B3D8 <AmiBlitz3.ab3@13125>   MOVE.w JL_0_9698(PC),D1
0002B3DC <AmiBlitz3.ab3@13126>    BSR.w writeword
0002B3E2 <AmiBlitz3.ab3@13127>   MOVE.w regnum,D1
0002B3E6 <AmiBlitz3.ab3@13128>   OR.w L_0_969C(PC),D1
0002B3EA <AmiBlitz3.ab3@13129>    BSR.w writeword
0002B3EC <AmiBlitz3.ab3@13130>   MOVE.w (A7)+,D1
0002B3F0 <AmiBlitz3.ab3@13131>    BSR.w JL_0_968A
0002B3F4 <AmiBlitz3.ab3@13132>   MOVE.w L_0_969A(PC),D1
0002B3F8 <AmiBlitz3.ab3@13133> BRA.w writeword
0002B3FC <AmiBlitz3.ab3@13137>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B400 <AmiBlitz3.ab3@13138>    BSR.w Atokejsr
0002B404 <AmiBlitz3.ab3@13139>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B406 <AmiBlitz3.ab3@13142> RTS
0002B408 <AmiBlitz3.ab3@13145>   MOVE.l D0,-(A7)
0002B40A <AmiBlitz3.ab3@13148>   MOVE.l (A7)+,D0
0002B40C <AmiBlitz3.ab3@13151>   MOVE.l D0,D0
0002B410 <AmiBlitz3.ab3@13154>   BSR.w convert_word_to_long
0002B416 <AmiBlitz3.ab3@13155>   TST.b iee
0002B41A <AmiBlitz3.ab3@13156>   BEQ 'old
0002B41E <AmiBlitz3.ab3@13157>   CMP.b #5,d2
0002B422 <AmiBlitz3.ab3@13158>   BNE 'old
0002B424 <AmiBlitz3.ab3@13159> RTS
0002B428 <AmiBlitz3.ab3@13162> BRA.w JL_0_9600
0002B42C <AmiBlitz3.ab3@13166>   MOVE.w #$C316,D1
0002B432 <AmiBlitz3.ab3@13167>   TST.b typecheck
0002B436 <AmiBlitz3.ab3@13168>   BEQ 'l1
0002B43C <AmiBlitz3.ab3@13169>   TST.b peekaddrsize
0002B440 <AmiBlitz3.ab3@13170>   BNE 'l1
0002B446 <AmiBlitz3.ab3@13171>   TST.b notypecheck
0002B44A <AmiBlitz3.ab3@13172>   BNE 'l1
0002B450 <AmiBlitz3.ab3@13173>   TST.l lasttoken
0002B454 <AmiBlitz3.ab3@13179> BRA.w JL_0_963A
0002B458 <AmiBlitz3.ab3@13183>   MOVE.w #$C318,D1
0002B45E <AmiBlitz3.ab3@13184>   TST.b typecheck
0002B462 <AmiBlitz3.ab3@13185>   BEQ 'l1
0002B468 <AmiBlitz3.ab3@13186>   TST.b peekaddrsize
0002B46C <AmiBlitz3.ab3@13187>   BNE 'l1
0002B472 <AmiBlitz3.ab3@13188>   TST.b notypecheck
0002B476 <AmiBlitz3.ab3@13189>   BNE 'l1
0002B47C <AmiBlitz3.ab3@13190>   TST.l lasttoken
0002B480 <AmiBlitz3.ab3@13196> BRA.w JL_0_963A
0002B484 <AmiBlitz3.ab3@13200>   MOVE.w #$C318,D1
0002B48A <AmiBlitz3.ab3@13201>   TST.b typecheck
0002B48E <AmiBlitz3.ab3@13202>   BEQ 'l1
0002B494 <AmiBlitz3.ab3@13203>   TST.b notypecheck
0002B498 <AmiBlitz3.ab3@13204>   BNE 'l1
0002B49E <AmiBlitz3.ab3@13205>   TST.l lasttoken
0002B4A2 <AmiBlitz3.ab3@13211>   BSR.w JL_0_963A
0002B4A6 <AmiBlitz3.ab3@13212> BRA.w convert_word_to_quick
0002B4AA <AmiBlitz3.ab3@13216> BRA.w JL_0_9600
0002B4AC <AmiBlitz3.ab3@13220> RTS
0002B4B0 <AmiBlitz3.ab3@13224>   MOVE.w #$C319,D1
0002B4B6 <AmiBlitz3.ab3@13225>   TST.b typecheck
0002B4BA <AmiBlitz3.ab3@13226>   BEQ 'l1
0002B4C0 <AmiBlitz3.ab3@13227>   TST.b notypecheck
0002B4C4 <AmiBlitz3.ab3@13228>   BNE 'l1
0002B4CA <AmiBlitz3.ab3@13229>   TST.l lasttoken
0002B4CE <AmiBlitz3.ab3@13236>   BSR.w JL_0_963A
0002B4D2 <AmiBlitz3.ab3@13239>   MOVE.w #$4240,D1
0002B4D8 <AmiBlitz3.ab3@13240>   OR.w regnum,D1
0002B4DC <AmiBlitz3.ab3@13241>   BSR.w writeword
0002B4E0 <AmiBlitz3.ab3@13242>   MOVE.w #$4840,D1
0002B4E6 <AmiBlitz3.ab3@13243>   OR.w regnum,D1
0002B4EA <AmiBlitz3.ab3@13244> BRA.w writeword
0002B4EE <AmiBlitz3.ab3@13248> BRA.w JL_0_96D0
0002B4F2 <AmiBlitz3.ab3@13252>   BSR.w JL_0_96D0
0002B4F6 <AmiBlitz3.ab3@13253> BRA.w convert_word_to_long
0002B4F8 <AmiBlitz3.ab3@13258>   MOVEQ #0,d0
0002B4FE <AmiBlitz3.ab3@13259>   MOVE.w regnum,d0
0002B500 <AmiBlitz3.ab3@13260>   ASL.l #7,d0
0002B506 <AmiBlitz3.ab3@13261>   MOVE.l #$f2004000,d1
0002B508 <AmiBlitz3.ab3@13262>   OR.l d0,d1
0002B50A <AmiBlitz3.ab3@13263>   ASL.l #1,d0
0002B50C <AmiBlitz3.ab3@13264>   ASL.l #8,d0
0002B50E <AmiBlitz3.ab3@13265>   OR.l d0,d1
0002B512 <AmiBlitz3.ab3@13266>   BSR writelong
0002B518 <AmiBlitz3.ab3@13267>   MOVE.w regnum,d0
0002B51A <AmiBlitz3.ab3@13268>   ASL.l #7,d0
0002B520 <AmiBlitz3.ab3@13269>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B522 <AmiBlitz3.ab3@13270>   OR.w d0,d1
0002B526 <AmiBlitz3.ab3@13271>   BSR writelong
0002B52C <AmiBlitz3.ab3@13272>   MOVE.l #$37800000,d1
0002B530 <AmiBlitz3.ab3@13273>   BSR writelong
0002B532 <AmiBlitz3.ab3@13274> RTS
0002B538 <AmiBlitz3.ab3@13278>   TST.b iee
0002B53C <AmiBlitz3.ab3@13279>   BNE qtof
0002B540 <AmiBlitz3.ab3@13280>   MOVE.w #$D300,D1
0002B542 <AmiBlitz3.ab3@13283>   MOVE.w D1,-(A7)
0002B546 <AmiBlitz3.ab3@13284>    BSR.w JL_0_AD40
0002B548 <AmiBlitz3.ab3@13285>   MOVE.l D4,D1
0002B54C <AmiBlitz3.ab3@13286>    BSR.w JL_0_AD38
0002B550 <AmiBlitz3.ab3@13287>    BSR.w JL_0_A352
0002B552 <AmiBlitz3.ab3@13288>   MOVE.w (A7)+,D1
0002B556 <AmiBlitz3.ab3@13289>    BSR.w Atokejsr
0002B55A <AmiBlitz3.ab3@13290>    BSR.w JL_0_A36E
0002B55C <AmiBlitz3.ab3@13291>   MOVE.l D5,D1
0002B560 <AmiBlitz3.ab3@13292> BRA.w JL_0_AD38
0002B562 <AmiBlitz3.ab3@13296> RTS
0002B568 <AmiBlitz3.ab3@13299>   TST.b typecheck
0002B56C <AmiBlitz3.ab3@13300>   BEQ 'l1
0002B572 <AmiBlitz3.ab3@13301>   TST.b notypecheck
0002B576 <AmiBlitz3.ab3@13302>   BNE 'l1
0002B57C <AmiBlitz3.ab3@13303>   TST.l lasttoken
0002B582 <AmiBlitz3.ab3@13308>   TST.b iee
0002B586 <AmiBlitz3.ab3@13309>   BNE ftol
0002B58A <AmiBlitz3.ab3@13310>   MOVE.w #$C31A,D1
0002B58E <AmiBlitz3.ab3@13311>   BSR.w JL_0_963A
0002B592 <AmiBlitz3.ab3@13312>   BSR.w JL_0_974A
0002B596 <AmiBlitz3.ab3@13313> BRA.w convert_long_to_byte
0002B598 <AmiBlitz3.ab3@13317> RTS
0002B59E <AmiBlitz3.ab3@13320>   TST.b typecheck
0002B5A2 <AmiBlitz3.ab3@13321>   BEQ 'l1
0002B5A8 <AmiBlitz3.ab3@13322>   TST.b notypecheck
0002B5AC <AmiBlitz3.ab3@13323>   BNE 'l1
0002B5B2 <AmiBlitz3.ab3@13324>   TST.l lasttoken
0002B5B8 <AmiBlitz3.ab3@13329>   TST.b iee
0002B5BC <AmiBlitz3.ab3@13330>   BNE ftol
0002B5C0 <AmiBlitz3.ab3@13331>   MOVE.w #$C31B,D1
0002B5C4 <AmiBlitz3.ab3@13332>   BSR.w JL_0_963A
0002B5C8 <AmiBlitz3.ab3@13333>   BSR.w JL_0_974A
0002B5CC <AmiBlitz3.ab3@13334> BRA.w convert_long_to_word
0002B5CE <AmiBlitz3.ab3@13338> RTS
0002B5D4 <AmiBlitz3.ab3@13341>   TST.b iee
0002B5D8 <AmiBlitz3.ab3@13342>   BNE ftol
0002B5DC <AmiBlitz3.ab3@13343>   MOVE.w #$C31C,D1
0002B5E0 <AmiBlitz3.ab3@13344>   BSR.w JL_0_963A
0002B5E4 <AmiBlitz3.ab3@13347>   MOVE.w #$FFE2,D1
0002B5E8 <AmiBlitz3.ab3@13348> BRA.w JL_0_9604
0002B5EA <AmiBlitz3.ab3@13351>   MOVE.l d0,-(a7)
0002B5EC <AmiBlitz3.ab3@13352>   MOVEQ #0,d0
0002B5F2 <AmiBlitz3.ab3@13353>   MOVE.w regnum,d0
0002B5F4 <AmiBlitz3.ab3@13354>   ASL.l #7,d0
0002B5FA <AmiBlitz3.ab3@13355>   MOVE.l #$f2006000,d1
0002B5FC <AmiBlitz3.ab3@13356>   OR.l d0,d1
0002B5FE <AmiBlitz3.ab3@13357>   ASL.l #1,d0
0002B600 <AmiBlitz3.ab3@13358>   ASL.l #8,d0
0002B602 <AmiBlitz3.ab3@13359>   OR.l d0,d1
0002B604 <AmiBlitz3.ab3@13360>   MOVE.l (a7)+,d0
0002B608 <AmiBlitz3.ab3@13361> BRA writelong
0002B60A <AmiBlitz3.ab3@13365>   MOVE.l d0,-(a7)
0002B60C <AmiBlitz3.ab3@13366>   MOVEQ #0,d0
0002B612 <AmiBlitz3.ab3@13367>   MOVE.l #$f23c4023,d1
0002B618 <AmiBlitz3.ab3@13368>   MOVE.w regnum,d0
0002B61A <AmiBlitz3.ab3@13369>   ASL.l #7,d0
0002B61C <AmiBlitz3.ab3@13370>   OR.l d0,d1
0002B620 <AmiBlitz3.ab3@13371>   BSR writelong
0002B626 <AmiBlitz3.ab3@13372>   MOVE.l #$00010000,d1
0002B62A <AmiBlitz3.ab3@13373>   BSR writelong
0002B630 <AmiBlitz3.ab3@13374>   MOVE.w regnum,d0
0002B632 <AmiBlitz3.ab3@13375>   ASL.l #7,d0
0002B638 <AmiBlitz3.ab3@13376>   MOVE.l #$f2006000,d1
0002B63A <AmiBlitz3.ab3@13377>   OR.l d0,d1
0002B63C <AmiBlitz3.ab3@13378>   ASL.l #1,d0
0002B63E <AmiBlitz3.ab3@13379>   ASL.l #8,d0
0002B640 <AmiBlitz3.ab3@13380>   OR.l d0,d1
0002B644 <AmiBlitz3.ab3@13381>   BSR writelong
0002B646 <AmiBlitz3.ab3@13382>   MOVE.l (a7)+,d0
0002B648 <AmiBlitz3.ab3@13383> RTS
0002B64A <AmiBlitz3.ab3@13387> RTS
0002B650 <AmiBlitz3.ab3@13391>   TST.b iee
0002B654 <AmiBlitz3.ab3@13392>   BNE ftoq
0002B658 <AmiBlitz3.ab3@13393>   MOVE.w #$C31B,D1
0002B65C <AmiBlitz3.ab3@13394>   BSR.w JL_0_963A
0002B660 <AmiBlitz3.ab3@13395>   MOVE.w #$D301,D1
0002B664 <AmiBlitz3.ab3@13396> BRA.w JL_0_96FC
0002B66A <AmiBlitz3.ab3@13402>    TST.b blitzparloop
0002B66E <AmiBlitz3.ab3@13403>    BNE 'l1
0002B674 <AmiBlitz3.ab3@13404>    TST.b funcparloop
0002B678 <AmiBlitz3.ab3@13405>    BNE 'l1
0002B67C <AmiBlitz3.ab3@13406>    BRA error_convert_types
0002B684 <AmiBlitz3.ab3@13409>   CMP.b #2,optistring
0002B688 <AmiBlitz3.ab3@13410>   BEQ JLrts
0002B68E <AmiBlitz3.ab3@13411>   MOVE.w stol,D1
0002B692 <AmiBlitz3.ab3@13412>   BSR.w writeword
0002B69A <AmiBlitz3.ab3@13413>   CMPI.w #$2,sbgot
0002B69E <AmiBlitz3.ab3@13414>   BCS.w sbtolong
0002B6A2 <AmiBlitz3.ab3@13415>   MOVE.w ceos(PC),D1
0002B6A6 <AmiBlitz3.ab3@13416>   BSR.w writeword
0002B6AC <AmiBlitz3.ab3@13419>   MOVE.w regnum,D1
0002B6AE <AmiBlitz3.ab3@13420>   LSL.w #8,D1
0002B6B0 <AmiBlitz3.ab3@13421>   LSL.w #1,D1
0002B6B8 <AmiBlitz3.ab3@13422>   CMPI.w #$2,sbgot
0002B6BC <AmiBlitz3.ab3@13423>   BCS.w JL_0_98E8
0002B6C2 <AmiBlitz3.ab3@13424>   MOVE.w a2offset,D3
0002B6C8 <AmiBlitz3.ab3@13425>   SUB.w thisstuse,D3
0002B6CC <AmiBlitz3.ab3@13426>   CMP.w #$6,D3
0002B6D0 <AmiBlitz3.ab3@13427>   BNE.w JL_0_98D4b
0002B6D6 <AmiBlitz3.ab3@13428>   OR.w movestst2,D1
0002B6DA <AmiBlitz3.ab3@13429>   BSR.w writeword
0002B6E0 <AmiBlitz3.ab3@13430>   LEA movestst2+2,A0
0002B6E6 <AmiBlitz3.ab3@13431>   LEA movestst2f,A1
0002B6EA <AmiBlitz3.ab3@13432> BRA.w pokecode2
0002B6F0 <AmiBlitz3.ab3@13436>   OR.w movea7dn,D1
0002B6F4 <AmiBlitz3.ab3@13437>   BSR.w writeword
0002B6FA <AmiBlitz3.ab3@13438>   MOVE.l #0,D1
0002B6FE <AmiBlitz3.ab3@13439> BRA.w writeword
0002B704 <AmiBlitz3.ab3@13443>   ADDQ.w #1,fuckpos
0002B708 <AmiBlitz3.ab3@13444>   BSR.w writeconvertcode
0002B70E <AmiBlitz3.ab3@13445>   SUBQ.w #1,fuckpos
0002B710 <AmiBlitz3.ab3@13447> RTS
0002B712 <AmiBlitz3.ab3@13451>   MOVE.w D3,D1
0002B716 <AmiBlitz3.ab3@13452>   CMP.w #7,d1
0002B71A <AmiBlitz3.ab3@13453>   BLE 'ok
0002B720 <AmiBlitz3.ab3@13454>   JMP errorinternalconvert
0002B722 <AmiBlitz3.ab3@13455> 'ok  SUBQ.w #1,D1
0002B726 <AmiBlitz3.ab3@13456>   MULU #$7,D1
0002B728 <AmiBlitz3.ab3@13457>   ADD.w D2,D1
0002B72A <AmiBlitz3.ab3@13458>   SUBQ.w #1,D1
0002B72C <AmiBlitz3.ab3@13459>   LSL.w #2,D1
0002B732 <AmiBlitz3.ab3@13460>   LEA convtable,A0
0002B736 <AmiBlitz3.ab3@13461>   MOVE.l $0(A0,D1.W),D1
0002B73A <AmiBlitz3.ab3@13462>   BEQ.w JL_0_97A2
0002B73C <AmiBlitz3.ab3@13463>     MOVEA.l D1,A0
0002B740 <AmiBlitz3.ab3@13464>     CMP.b #$ff,d3
0002B744 <AmiBlitz3.ab3@13465>     BEQ JL_0_97A2
0002B746 <AmiBlitz3.ab3@13466> JMP (A0)
0002B748 <AmiBlitz3.ab3@13469> RTS
0002B74C <AmiBlitz3.ab3@13472> usedfrom:  Ds.l 1
0002B750 <AmiBlitz3.ab3@13479>   CMP.w #"\",D0
0002B754 <AmiBlitz3.ab3@13480>   BNE.w JL_0_97C2
0002B758 <AmiBlitz3.ab3@13481>     CMP.b #"\",(a5)
0002B75C <AmiBlitz3.ab3@13482>     BNE 'first
0002B762 <AmiBlitz3.ab3@13483>       MOVE.l A5,usedfrom
0002B768 <AmiBlitz3.ab3@13484>       LEA path2,A5
0002B76C <AmiBlitz3.ab3@13485> BRA 'g1
0002B76E <AmiBlitz3.ab3@13488>     SUBQ.w #1,A5
0002B774 <AmiBlitz3.ab3@13489>   MOVE.l A5,usedfrom
0002B77A <AmiBlitz3.ab3@13490>   LEA usedpath,A5                                          ;read path
0002B77E <AmiBlitz3.ab3@13493>   BSR.w get1bytemain
0002B784 <AmiBlitz3.ab3@13496>   CLR.w flagmask
0002B788 <AmiBlitz3.ab3@13497>   CMP.w #$2A,D0
0002B78C <AmiBlitz3.ab3@13498>    BNE.w JL_0_983A
0002B794 <AmiBlitz3.ab3@13499>   MOVE.w #$0001,flagmask
0002B798 <AmiBlitz3.ab3@13501>    BSR.w getparameter2
0002B79C <AmiBlitz3.ab3@13504>    BEQ.w syntaxerr
0002B7A0 <AmiBlitz3.ab3@13505>   CMP.w #$28,D0
0002B7A4 <AmiBlitz3.ab3@13506>    BEQ.w JL_0_9830
0002B7A8 <AmiBlitz3.ab3@13507>   CMP.w #$2E,D0
0002B7AC <AmiBlitz3.ab3@13508>    BEQ.w JL_0_980C
0002B7B0 <AmiBlitz3.ab3@13509>   CMP.w #$24,D0
0002B7B4 <AmiBlitz3.ab3@13510>    BNE.w JL_0_9838
0002B7BC <AmiBlitz3.ab3@13511>   ORI.w #$8,flagmask
0002B7C0 <AmiBlitz3.ab3@13512>    BSR.w storeloc
0002B7C4 <AmiBlitz3.ab3@13513>    BSR.w get1bytemain
0002B7C8 <AmiBlitz3.ab3@13514> BRA.w JL_0_9822
0002B7CC <AmiBlitz3.ab3@13518>   BSR.w storeloc
0002B7CE <AmiBlitz3.ab3@13519>   MOVE.w D2,-(A7)
0002B7D4 <AmiBlitz3.ab3@13520>   LEA namebuff2,A1
0002B7D8 <AmiBlitz3.ab3@13521>    BSR.w makename3
0002B7DC <AmiBlitz3.ab3@13522>    BEQ.w syntaxerr
0002B7DE <AmiBlitz3.ab3@13523>   MOVE.w (A7)+,D2
0002B7E0 <AmiBlitz3.ab3@13526>    MOVE.w D0,D1
0002B7E4 <AmiBlitz3.ab3@13527>    BSR.w resloc
0002B7E8 <AmiBlitz3.ab3@13528>    CMP.w #$28,D1
0002B7EC <AmiBlitz3.ab3@13529>    BNE.w JL_0_9838
0002B7F4 <AmiBlitz3.ab3@13532>   ORI.w #$2,flagmask
0002B7F6 <AmiBlitz3.ab3@13535> RTS
0002B7FA <AmiBlitz3.ab3@13539>   CMP.w #$40,D0
0002B7FE <AmiBlitz3.ab3@13540>    BNE.w JL_0_984E
0002B806 <AmiBlitz3.ab3@13541>   MOVE.w #$0005,flagmask
0002B80A <AmiBlitz3.ab3@13542> BRA.w JL_0_97D8
0002B80E <AmiBlitz3.ab3@13546>   BSR.w makename2
0002B812 <AmiBlitz3.ab3@13547> BRA.w JL_0_97DC
0002B816 <AmiBlitz3.ab3@13551>   MOVE.w #$FED3,D1
0002B81A <AmiBlitz3.ab3@13552>    BSR.w uselib
0002B820 <AmiBlitz3.ab3@13553>   LEA pusha3,A0
0002B826 <AmiBlitz3.ab3@13554>   LEA pusha3f,A1
0002B82A <AmiBlitz3.ab3@13555> BRA.w pokecode
0002B82E <AmiBlitz3.ab3@13559>   MOVE.w #$FED3,D1
0002B832 <AmiBlitz3.ab3@13560>    BSR.w uselib
0002B838 <AmiBlitz3.ab3@13561>   LEA pulla3,A0
0002B83E <AmiBlitz3.ab3@13562>   LEA pulla3f,A1
0002B842 <AmiBlitz3.ab3@13563> BRA.w pokecode
0002B844 <AmiBlitz3.ab3@13567> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002B84C <AmiBlitz3.ab3@13572>     CMP.b #2,optistring
0002B850 <AmiBlitz3.ab3@13573>    BEQ 'l10
0002B854 <AmiBlitz3.ab3@13574>    MOVE.w ceos(PC),D1
0002B858 <AmiBlitz3.ab3@13575>    BSR.w writeword                                         ;clr.b (a3)
0002B85E <AmiBlitz3.ab3@13578>   MOVE.w regnum,D1
0002B860 <AmiBlitz3.ab3@13579>   LSL.w #8,D1
0002B862 <AmiBlitz3.ab3@13580>   LSL.w #1,D1
0002B86A <AmiBlitz3.ab3@13581>   CMPI.w #$2,sbgot
0002B86E <AmiBlitz3.ab3@13582>    BCS.w JL_0_98E8
0002B874 <AmiBlitz3.ab3@13583>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002B87A <AmiBlitz3.ab3@13584>   SUB.w thisstuse,D3
0002B87E <AmiBlitz3.ab3@13585>   CMP.w #$6,D3
0002B882 <AmiBlitz3.ab3@13586>    BNE.w JL_0_98D4
0002B888 <AmiBlitz3.ab3@13587>   OR.w movestst2,D1
0002B88C <AmiBlitz3.ab3@13588>    BSR.w writeword
0002B892 <AmiBlitz3.ab3@13589>   LEA movestst2+2,A0
0002B898 <AmiBlitz3.ab3@13590>   LEA movestst2f,A1
0002B89C <AmiBlitz3.ab3@13591> BRA.w pokecode2
0002B8A2 <AmiBlitz3.ab3@13595>    OR.w movea7dn,D1
0002B8A6 <AmiBlitz3.ab3@13596>    BSR.w writeword
0002B8AC <AmiBlitz3.ab3@13597>   MOVE.l movea7dn+2,D1
0002B8B0 <AmiBlitz3.ab3@13609>   BSR writelong
0002B8B8 <AmiBlitz3.ab3@13612>    CMP.w #6,regnum
0002B8BC <AmiBlitz3.ab3@13613>    BEQ 'l1
0002B8C2 <AmiBlitz3.ab3@13614>    TST.w stackpar
0002B8C6 <AmiBlitz3.ab3@13615>    BNE 'l1
0002B8CC <AmiBlitz3.ab3@13616>    TST.b funcparloop
0002B8D0 <AmiBlitz3.ab3@13617>    BEQ 'l1
0002B8D6 <AmiBlitz3.ab3@13618>    MOVE.l #$48780000,d1
0002B8DA <AmiBlitz3.ab3@13619>    BSR writelong
0002B8DC <AmiBlitz3.ab3@13623> RTS
0002B8DE <AmiBlitz3.ab3@13628>      MOVE.l d1,-(a7)
0002B8E6 <AmiBlitz3.ab3@13629>      CMP.w #6,regnum
0002B8EA <AmiBlitz3.ab3@13630>      BEQ 'l1
0002B8F0 <AmiBlitz3.ab3@13631>      TST.w stackpar
0002B8F4 <AmiBlitz3.ab3@13632>      BNE 'l1
0002B8FA <AmiBlitz3.ab3@13633>      TST.b funcparloop
0002B8FE <AmiBlitz3.ab3@13634>      BEQ 'l1
0002B904 <AmiBlitz3.ab3@13635>      MOVE.l #$48780000,d1
0002B908 <AmiBlitz3.ab3@13636>      BSR writelong
0002B90A <AmiBlitz3.ab3@13639>      MOVE.l (a7)+,d1
0002B910 <AmiBlitz3.ab3@13641>    OR.w movestdn,D1
0002B914 <AmiBlitz3.ab3@13642>    BSR.w writeword
0002B918 <AmiBlitz3.ab3@13643>   MOVE.w #$FED3,D1
0002B91C <AmiBlitz3.ab3@13644>    BSR.w uselib
0002B920 <AmiBlitz3.ab3@13645>   MOVE.w $A(A1),D1
0002B924 <AmiBlitz3.ab3@13646> BRA.w writeword
0002B926 <AmiBlitz3.ab3@13649> unknown:    Ds.w 1
0002B92C <AmiBlitz3.ab3@13652> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002B930 <AmiBlitz3.ab3@13653> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002B936 <AmiBlitz3.ab3@13654>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002B93C <AmiBlitz3.ab3@13660>   TST.b debugmode
0002B940 <AmiBlitz3.ab3@13661>   BEQ.w sharreval
0002B944 <AmiBlitz3.ab3@13662>  BSR.w arreval
0002B948 <AmiBlitz3.ab3@13665>   MOVE.w somecode(PC),D1
0002B94E <AmiBlitz3.ab3@13666>   OR.w regnum,D1
0002B952 <AmiBlitz3.ab3@13667>    BSR.w writeword
0002B954 <AmiBlitz3.ab3@13668>   MOVEQ.l #$01,D1
0002B956 <AmiBlitz3.ab3@13669>   SWAP D1
0002B95A <AmiBlitz3.ab3@13670>    BSR.w writelong
0002B95E <AmiBlitz3.ab3@13671>   MOVE.l somecode2(PC),D1
0002B962 <AmiBlitz3.ab3@13672>    BSR.w writelong
0002B966 <AmiBlitz3.ab3@13673>   MOVE.w #$C309,D1
0002B96A <AmiBlitz3.ab3@13674> BRA.w Atokejsr
0002B96C <AmiBlitz3.ab3@13678>   MOVEQ.l #$02,D2
0002B96E <AmiBlitz3.ab3@13679>   MOVEQ.l #$00,D1
0002B970 <AmiBlitz3.ab3@13680>   MOVEQ.l #$00,D3
0002B974 <AmiBlitz3.ab3@13681> BRA.w maineval2
0002B976 <AmiBlitz3.ab3@13685>   MOVEQ.l #$03,D2
0002B978 <AmiBlitz3.ab3@13686>   MOVEQ.l #$00,D1
0002B97A <AmiBlitz3.ab3@13687>   MOVEQ.l #$00,D3
0002B980 <AmiBlitz3.ab3@13688>   MOVE.b notypecheck,-(a7)
0002B988 <AmiBlitz3.ab3@13689>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002B98E <AmiBlitz3.ab3@13690>   JSR maineval2
0002B994 <AmiBlitz3.ab3@13691>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002B996 <AmiBlitz3.ab3@13692>   RTS
0002B9A0 <AmiBlitz3.ab3@13696>   MOVE.w oldqflag,instringon
0002B9A6 <AmiBlitz3.ab3@13697>   MOVEA.l lastsourcepos,A5
0002B9A8 <AmiBlitz3.ab3@13698>   MOVEQ.l #-$01,D1
0002B9AA <AmiBlitz3.ab3@13699>   MOVEQ.l #-$01,D3
0002B9AE <AmiBlitz3.ab3@13700> BRA.w peval
0002B9B8 <AmiBlitz3.ab3@13705>   MOVE.w oldqflag,instringon
0002B9BE <AmiBlitz3.ab3@13706>   MOVEA.l lastsourcepos,A5
0002B9C0 <AmiBlitz3.ab3@13709>   MOVEQ.l #-$01,D1
0002B9C2 <AmiBlitz3.ab3@13710>   MOVEQ.l #$00,D3
0002B9C8 <AmiBlitz3.ab3@13711>   MOVE.l leftsidetype,-(a7)
0002B9CE <AmiBlitz3.ab3@13712>   MOVE.l rightsidetype,-(a7)
0002B9D4 <AmiBlitz3.ab3@13713>   CLR.l leftsidetype
0002B9DA <AmiBlitz3.ab3@13714>   CLR.l rightsidetype
0002B9E0 <AmiBlitz3.ab3@13715>   JSR maineval
0002B9E6 <AmiBlitz3.ab3@13716>   MOVE.l (a7)+,rightsidetype
0002B9EC <AmiBlitz3.ab3@13717>   MOVE.l (a7)+,leftsidetype
0002B9EE <AmiBlitz3.ab3@13718>   RTS
0002B9F8 <AmiBlitz3.ab3@13722>   MOVE.w oldqflag,instringon
0002B9FE <AmiBlitz3.ab3@13723>   MOVEA.l lastsourcepos,A5
0002BA00 <AmiBlitz3.ab3@13724>   MOVEQ.l #$00,D1
0002BA02 <AmiBlitz3.ab3@13725>   MOVEQ.l #-$01,D3
0002BA06 <AmiBlitz3.ab3@13726> BRA.w maineval
0002BA08 <AmiBlitz3.ab3@13730>   MOVEQ.l #$01,D1
0002BA0A <AmiBlitz3.ab3@13731>   MOVEQ.l #-$01,D3
0002BA0E <AmiBlitz3.ab3@13732> BRA.w maineval
0002BA18 <AmiBlitz3.ab3@13737>   MOVE.w oldqflag,instringon
0002BA1E <AmiBlitz3.ab3@13738>   MOVEA.l lastsourcepos,A5
0002BA20 <AmiBlitz3.ab3@13741>   MOVEQ.l #$00,D1                                        ;no push
0002BA22 <AmiBlitz3.ab3@13742>   MOVEQ.l #$00,D3
0002BA2A <AmiBlitz3.ab3@13763>    CMPI.w #$6,regnum
0002BA2E <AmiBlitz3.ab3@13764>    BCS.w maineval2
0002BA30 <AmiBlitz3.ab3@13765>    MOVEQ #0,d1
0002BA36 <AmiBlitz3.ab3@13766>    MOVE.l destpointer,a4
0002BA3C <AmiBlitz3.ab3@13768>    CMPA.l destbufferend,A4
0002BA40 <AmiBlitz3.ab3@13769>    BCC.w maineval__l2
0002BA46 <AmiBlitz3.ab3@13771>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002BA4A <AmiBlitz3.ab3@13773>    BNE maineval__l2
0002BA4E <AmiBlitz3.ab3@13777> BRA maineval__l1
0002BA50 <AmiBlitz3.ab3@13780>   MOVEQ.l #-$01,D1
0002BA58 <AmiBlitz3.ab3@13783>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002BA5E <AmiBlitz3.ab3@13786>   MOVE.w thisstuse,-(A7)
0002BA68 <AmiBlitz3.ab3@13787>   MOVE.w a2offset,thisstuse
0002BA6E <AmiBlitz3.ab3@13788>   MOVE.w stackpar,-(A7)
0002BA74 <AmiBlitz3.ab3@13789>   MOVE.w D1,stackpar
0002BA7A <AmiBlitz3.ab3@13790>   MOVE.w sbgot,-(A7)
0002BA80 <AmiBlitz3.ab3@13791>   CLR.w sbgot
0002BA84 <AmiBlitz3.ab3@13792>   MOVE.w unknown(PC),-(A7)
0002BA8A <AmiBlitz3.ab3@13793>   MOVE.w D3,unknown
0002BA8C <AmiBlitz3.ab3@13794>   MOVE.w D2,-(a7)
0002BA92 <AmiBlitz3.ab3@13795>   MOVE.w d2,mode
0002BA96 <AmiBlitz3.ab3@13796>    BSR.w eval3
0002BA98 <AmiBlitz3.ab3@13797>   MOVE.w (a7)+,d3
0002BA9C <AmiBlitz3.ab3@13798>    BEQ.w maineval__noconv
0002BAA0 <AmiBlitz3.ab3@13799>   MOVE.w unknown(PC),D1
0002BAA4 <AmiBlitz3.ab3@13800>    BNE.w maineval__noconv
0002BAA6 <AmiBlitz3.ab3@13801>   EXG.l D2,D3
0002BAA8 <AmiBlitz3.ab3@13802>    MOVE.l a2,-(a7)
0002BAAE <AmiBlitz3.ab3@13803>    TST.b curtemplabel
0002BAB2 <AmiBlitz3.ab3@13804>    BEQ maineval2__l10
0002BAB8 <AmiBlitz3.ab3@13805>    MOVE.l asmbuff,a2
0002BABE <AmiBlitz3.ab3@13806>    CMP.w #$c,$8(a2)
0002BAC2 <AmiBlitz3.ab3@13807>    BEQ maineval2__l20
0002BAC8 <AmiBlitz3.ab3@13808>    CMP.w #$d,$8(a2)
0002BACC <AmiBlitz3.ab3@13809>    BEQ maineval2__l20
0002BACE <AmiBlitz3.ab3@13812>   CMP.w d2,d3
0002BAD2 <AmiBlitz3.ab3@13813>   BEQ maineval2__l20
0002BAD6 <AmiBlitz3.ab3@13814>   BSR.w writeconvertcode
0002BADC <AmiBlitz3.ab3@13815>   CLR.b doimmediate
0002BADE <AmiBlitz3.ab3@13818>   MOVE.l (a7)+,a2
0002BAE4 <AmiBlitz3.ab3@13821>   MOVE.w (A7)+,unknown
0002BAEA <AmiBlitz3.ab3@13822>   MOVE.w stackpar,D1
0002BAEE <AmiBlitz3.ab3@13823>    BEQ.w maineval__skipme
0002BAF2 <AmiBlitz3.ab3@13824>    BMI.w maineval__skipme
0002BAF8 <AmiBlitz3.ab3@13828>   MOVE.w regnum,D1
0002BAFA <AmiBlitz3.ab3@13829>   LSL.w #8,D1
0002BAFC <AmiBlitz3.ab3@13830>   LSL.w #1,D1
0002BB00 <AmiBlitz3.ab3@13831>   CMP.w #$7,D2
0002BB04 <AmiBlitz3.ab3@13832>    BNE.w maineval__hi1
0002BB0C <AmiBlitz3.ab3@13833>    CMP.b #2,optistring
0002BB10 <AmiBlitz3.ab3@13834>    BEQ maineval__hi1a
0002BB12 <AmiBlitz3.ab3@13835>   MOVE.w D1,-(A7)
0002BB18 <AmiBlitz3.ab3@13836>   OR.w getstlen,D1
0002BB1C <AmiBlitz3.ab3@13837>    BSR.w writeword
0002BB1E <AmiBlitz3.ab3@13838>   MOVE.w (A7)+,D1
0002BB24 <AmiBlitz3.ab3@13841>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BB28 <AmiBlitz3.ab3@13845>   MOVE.w #$3f3c,d1
0002BB2C <AmiBlitz3.ab3@13846>    BSR.w writeword
0002BB2E <AmiBlitz3.ab3@13850>   MOVE.w d2,d1
0002BB34 <AmiBlitz3.ab3@13851>   MOVE.w d1,libmode
0002BB38 <AmiBlitz3.ab3@13852>    BSR.w writeword
0002BB3C <AmiBlitz3.ab3@13853>   CMP.w #$7,D2
0002BB40 <AmiBlitz3.ab3@13854>    BNE.w maineval__skipme
0002BB46 <AmiBlitz3.ab3@13855>   MOVE.w putstlen,D1
0002BB4C <AmiBlitz3.ab3@13856>   OR.w regnum,D1
0002BB50 <AmiBlitz3.ab3@13857>    BSR.w writeword
0002BB54 <AmiBlitz3.ab3@13860>    CMP.w #$7,D2
0002BB58 <AmiBlitz3.ab3@13861>    BNE.w maineval__notst
0002BB60 <AmiBlitz3.ab3@13872>    CMP.b #2,optistring
0002BB64 <AmiBlitz3.ab3@13873>    BEQ maineval__skipme_l10
0002BB6A <AmiBlitz3.ab3@13874>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BB6E <AmiBlitz3.ab3@13875>    BSR.w sbtolong
0002BB72 <AmiBlitz3.ab3@13876> BRA.w maineval__notst2
0002BB7A <AmiBlitz3.ab3@13880>     CMP.w #6,regnum
0002BB7E <AmiBlitz3.ab3@13881>     BEQ maineval__skipme_l10_l1
0002BB84 <AmiBlitz3.ab3@13882>     TST.b funcparloop
0002BB88 <AmiBlitz3.ab3@13883>     BEQ maineval__skipme_l10_l1
0002BB8E <AmiBlitz3.ab3@13884>     MOVE.l #$48780000,d1
0002BB92 <AmiBlitz3.ab3@13885>     BSR writelong
0002BB96 <AmiBlitz3.ab3@13888> BRA.w maineval__notst2
0002BB9C <AmiBlitz3.ab3@13891>   ADDQ.w #2,a2offset
0002BBA0 <AmiBlitz3.ab3@13892> BRA maineval__skipme
0002BBA8 <AmiBlitz3.ab3@13895>   CMPI.w #$2,sbgot
0002BBAC <AmiBlitz3.ab3@13896>    BCS.w maineval__notst2                                         ;correct stack
0002BBB0 <AmiBlitz3.ab3@13897>   MOVE.w ststfix(PC),D1
0002BBB4 <AmiBlitz3.ab3@13898>    BSR.w writeword
0002BBBA <AmiBlitz3.ab3@13901>   MOVE.w (A7)+,sbgot
0002BBC0 <AmiBlitz3.ab3@13902>   MOVE.w stackpar,D1
0002BBC4 <AmiBlitz3.ab3@13903>    BPL.w maineval__skip
0002BBC8 <AmiBlitz3.ab3@13904>    CMP.b #7,d2
0002BBCC <AmiBlitz3.ab3@13905>    BEQ maineval__notst2_l1
0002BBD2 <AmiBlitz3.ab3@13906>   TST.b funcparloop
0002BBD6 <AmiBlitz3.ab3@13907>   BEQ maineval__notst2_l1
0002BBDA <AmiBlitz3.ab3@13908>   CMP.b #5,d2
0002BBDE <AmiBlitz3.ab3@13909>   BNE maineval__notst2_skip
0002BBE4 <AmiBlitz3.ab3@13910>   TST.b fpu
0002BBE8 <AmiBlitz3.ab3@13911>   BEQ maineval__notst2_skip
0002BBEE <AmiBlitz3.ab3@13912>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002BBF4 <AmiBlitz3.ab3@13913>   JSR writelong
0002BBF8 <AmiBlitz3.ab3@13916>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002BBFE <AmiBlitz3.ab3@13917>   ADD.w parnum,d1
0002BC04 <AmiBlitz3.ab3@13918>   JSR Atokejsr
0002BC0A <AmiBlitz3.ab3@13919>    TST.w dontwrite
0002BC0E <AmiBlitz3.ab3@13920>    BNE maineval__notst2_l1
0002BC14 <AmiBlitz3.ab3@13921>    MOVE.l data1start,d1
0002BC1A <AmiBlitz3.ab3@13922>    MOVE.l destpointer,a4
0002BC1E <AmiBlitz3.ab3@13923>    ADD.l d1,-4(a4)
0002BC24 <AmiBlitz3.ab3@13924>    MOVE.l destpointer,d1
0002BC26 <AmiBlitz3.ab3@13925>    SUBQ.l #4,d1
0002BC2C <AmiBlitz3.ab3@13926>    SUB.l destbufferstart,d1
0002BC2E <AmiBlitz3.ab3@13927>    MOVE.l d2,-(a7)
0002BC30 <AmiBlitz3.ab3@13928>    MOVE.l d1,d2
0002BC36 <AmiBlitz3.ab3@13929>    JSR addhunkoffset
0002BC38 <AmiBlitz3.ab3@13930>    MOVE.l (a7)+,d2
0002BC3C <AmiBlitz3.ab3@13931> BRA maineval__skip
0002BC42 <AmiBlitz3.ab3@13934>   ADDQ.w #2,a2offset
0002BC48 <AmiBlitz3.ab3@13935>   MOVE.w pushd0wd,D1
0002BC4C <AmiBlitz3.ab3@13936>   CMP.w #$3,D2                                             ;write parameter to stack
0002BC50 <AmiBlitz3.ab3@13937>    BCS.w maineval__ok
0002BC56 <AmiBlitz3.ab3@13938>   ADDQ.w #2,a2offset
0002BC5C <AmiBlitz3.ab3@13939>   TST.b fpu
0002BC60 <AmiBlitz3.ab3@13940>   BEQ maineval__notst2_nofpu
0002BC64 <AmiBlitz3.ab3@13941>   CMP.w #5,d2
0002BC68 <AmiBlitz3.ab3@13942>   BNE maineval__notst2_nofpu
0002BC6A <AmiBlitz3.ab3@13943>   MOVEQ #0,d1
0002BC70 <AmiBlitz3.ab3@13944>   MOVE.w regnum,d1
0002BC72 <AmiBlitz3.ab3@13945>   ASL.l #7,d1
0002BC78 <AmiBlitz3.ab3@13946>   OR.l #$f2276400,d1
0002BC7C <AmiBlitz3.ab3@13947>   BSR writelong
0002BC80 <AmiBlitz3.ab3@13948> BRA maineval__skip
0002BC86 <AmiBlitz3.ab3@13951>   MOVE.w pushd0l,D1
0002BC8C <AmiBlitz3.ab3@13954>    OR.w regnum,D1
0002BC90 <AmiBlitz3.ab3@13955>    BSR.w writeword                                         ;nat
0002BC96 <AmiBlitz3.ab3@13958>   MOVE.w (A7)+,stackpar
0002BC9C <AmiBlitz3.ab3@13959>   MOVE.w (A7)+,thisstuse
0002BC9E <AmiBlitz3.ab3@13960> RTS
0002BCA0 <AmiBlitz3.ab3@13963> thisstuse: Ds.w 1
0002BCA2 <AmiBlitz3.ab3@13966> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002BCA4 <AmiBlitz3.ab3@13967> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002BCA8 <AmiBlitz3.ab3@13972>   BSR.w eval4
0002BCB2 <AmiBlitz3.ab3@13973>   SUBI.l #$12,forthsp
0002BCB4 <AmiBlitz3.ab3@13974> RTS
0002BCB6 <AmiBlitz3.ab3@13978>   MOVEQ.l #$01,D1
0002BCBA <AmiBlitz3.ab3@13980>       MOVEA.l precsp(PC),A1
0002BCBC <AmiBlitz3.ab3@13981>       MOVE.l A0,(A1)+
0002BCBE <AmiBlitz3.ab3@13982>       MOVE.w D1,(A1)+
0002BCC4 <AmiBlitz3.ab3@13983>       MOVE.l A1,precsp
0002BCC8 <AmiBlitz3.ab3@13984>    BSR.w calcloop
0002BCCA <AmiBlitz3.ab3@13985>   TST.w D1
0002BCCE <AmiBlitz3.ab3@13986>    BNE.w syntaxerr
0002BCD4 <AmiBlitz3.ab3@13987>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002BCD6 <AmiBlitz3.ab3@13988> RTS
0002BCDA <AmiBlitz3.ab3@13993>   BSR.w JL_0_9C24
0002BCDE <AmiBlitz3.ab3@13996>   MOVEA.l precsp(PC),A1
0002BCE0 <AmiBlitz3.ab3@13997>   CMP.w -(A1),D1
0002BCE4 <AmiBlitz3.ab3@13998>    BHI.w JL_0_9B0A
0002BCE6 <AmiBlitz3.ab3@13999> RTS
0002BCEA <AmiBlitz3.ab3@14004>   MOVEA.l precsp(PC),A1
0002BCEC <AmiBlitz3.ab3@14005>   MOVE.l A0,(A1)+
0002BCEE <AmiBlitz3.ab3@14006>   MOVE.w D1,(A1)+
0002BCF4 <AmiBlitz3.ab3@14007>   MOVE.l A1,precsp
0002BCF6 <AmiBlitz3.ab3@14008>   MOVE.w D2,-(A7)
0002BCFC <AmiBlitz3.ab3@14009>   ADDQ.w #1,regnum
0002BD00 <AmiBlitz3.ab3@14010>    BSR.w calcloop               ;constant optimizer
0002BD06 <AmiBlitz3.ab3@14011>   SUBQ.w #1,regnum
0002BD08 <AmiBlitz3.ab3@14012>   MOVE.w (A7)+,D3
0002BD0C <AmiBlitz3.ab3@14013>   MOVEM.l D1/A0,-(A7)
0002BD10 <AmiBlitz3.ab3@14014>    BEQ.w JL_0_9B2E
0002BD14 <AmiBlitz3.ab3@14015>    BSR.w JL_0_9770
0002BD18 <AmiBlitz3.ab3@14018>   BSR.w popprec
0002BD1C <AmiBlitz3.ab3@14019>   BSR.w writecode
0002BD20 <AmiBlitz3.ab3@14020>   MOVEA.l forthsp(PC),A0
0002BD24 <AmiBlitz3.ab3@14021>   MOVE.w -$2(A0),D1
0002BD28 <AmiBlitz3.ab3@14022>   OR.w -$14(A0),D1
0002BD2C <AmiBlitz3.ab3@14023>   MOVE.w D1,-$14(A0)
0002BD30 <AmiBlitz3.ab3@14024>    BNE.w JL_0_9C0E
0002BD36 <AmiBlitz3.ab3@14025>   MOVE.w dontwrite,D1
0002BD3A <AmiBlitz3.ab3@14026>    BNE.w JL_0_9C0E
0002BD3E <AmiBlitz3.ab3@14027>    MOVEA.l -$24(A0),A0
0002BE7A <AmiBlitz3.ab3@14029>  !newcalc
0002BE7E <AmiBlitz3.ab3@14030>    BEQ 'l10
0002BE82 <AmiBlitz3.ab3@14031>    MOVEA.l forthsp(PC),A0
0002BE8A <AmiBlitz3.ab3@14032>    MOVE.w -$18(A0),lasta6
0002BE92 <AmiBlitz3.ab3@14033>    MOVE.l -$1C(A0),lasta6
0002BE96 <AmiBlitz3.ab3@14034>    MOVEA.l -$24(A0),A0
0002BE9C <AmiBlitz3.ab3@14035>    MOVE.l A0,destpointer
0002BEA2 <AmiBlitz3.ab3@14036>    MOVEA.l _mathffpbase,A6
0002BEA8 <AmiBlitz3.ab3@14037>    MOVEA.l ffplib,A1
0002BEAC <AmiBlitz3.ab3@14038> BRA cont1
0002BEB0 <AmiBlitz3.ab3@14041>   MOVE.w #$2000,D1
0002BEB6 <AmiBlitz3.ab3@14042>   OR.w regnum,D1
0002BEBA <AmiBlitz3.ab3@14043>    BSR.w writeword
0002BEBC <AmiBlitz3.ab3@14044>     MOVEQ #0,d1
0002BEC2 <AmiBlitz3.ab3@14045>     MOVE.w regnum,D1
0002BEC4 <AmiBlitz3.ab3@14046>     ASL.l #8,d1
0002BEC6 <AmiBlitz3.ab3@14047>     ASL.l #2,d1
0002BECC <AmiBlitz3.ab3@14048>     OR.l #$f2000000,d1
0002BED0 <AmiBlitz3.ab3@14049>     BSR writelong
0002BED4 <AmiBlitz3.ab3@14050>   MOVE.w #$4E75,D1
0002BED8 <AmiBlitz3.ab3@14051>    BSR.w writeword
0002BEE0 <AmiBlitz3.ab3@14052>   MOVE.w -$18(A0),lasta6
0002BEE8 <AmiBlitz3.ab3@14053>   MOVE.l -$1C(A0),lasta6
0002BEEC <AmiBlitz3.ab3@14054>   MOVEA.l -$24(A0),A0
0002BEF2 <AmiBlitz3.ab3@14055>   MOVE.l A0,destpointer
0002BEF6 <AmiBlitz3.ab3@14056>   MOVEM.l D2/A5,-(A7)
0002BEFC <AmiBlitz3.ab3@14057>   MOVEA.l _mathffpbase,A6
0002BF02 <AmiBlitz3.ab3@14058>   MOVEA.l ffplib,A1
0002BF06 <AmiBlitz3.ab3@14059>   MOVE.w $A(A1),D0
0002BF0C <AmiBlitz3.ab3@14060>   LEA _mathffpbase,A5
0002BF0E <AmiBlitz3.ab3@14061>   SUBA.w D0,A5
0002BF14 <AmiBlitz3.ab3@14062>   JSR Aclearcache                                          ;neg +
0002BF1A <AmiBlitz3.ab3@14063>   CLR.l load_var_addr
0002BF20 <AmiBlitz3.ab3@14064>   CLR.l imm_addr
0002BF26 <AmiBlitz3.ab3@14065>   TST.w dontwrite
0002BF2A <AmiBlitz3.ab3@14066>   BNE '1
0002BF2C <AmiBlitz3.ab3@14067>   JSR (A0)                                                 ;calc constant inline expression
0002BF30 <AmiBlitz3.ab3@14070>   MOVEM.l (A7)+,D2/A5
0002BF36 <AmiBlitz3.ab3@14073>   MOVE.b d2,isconstantvalue
0002BF3C <AmiBlitz3.ab3@14074>   MOVE.l d0,lastconstantvalue
0002BF42 <AmiBlitz3.ab3@14075>   MOVE.w regnum,D1
0002BF44 <AmiBlitz3.ab3@14076>   LSL.w #8,D1
0002BF46 <AmiBlitz3.ab3@14077>   LSL.w #1,D1
0002BF4A <AmiBlitz3.ab3@14078>   ORI.w #$203C,D1
0002BF4E <AmiBlitz3.ab3@14079>   CMP.w #$3,D2
0002BF52 <AmiBlitz3.ab3@14080>    BCC.w JL_0_9BCE
0002BF56 <AmiBlitz3.ab3@14081>   ORI.w #$1000,D1
0002BF5A <AmiBlitz3.ab3@14082>    BSR.w writeword
0002BF5C <AmiBlitz3.ab3@14083>   MOVE.w D0,D1
0002BF60 <AmiBlitz3.ab3@14084>    BSR.w writeword
0002BF64 <AmiBlitz3.ab3@14085> BRA.w JL_0_9BD8
0002BF6A <AmiBlitz3.ab3@14089>   TST.b iee                                                ;fpu constant
0002BF6E <AmiBlitz3.ab3@14090>   BEQ 'l10
0002BF72 <AmiBlitz3.ab3@14091>   CMP.b #5,d2
0002BF76 <AmiBlitz3.ab3@14092>   BNE 'l10
0002BF78 <AmiBlitz3.ab3@14093>   MOVEQ #0,d1
0002BF7E <AmiBlitz3.ab3@14094>   MOVE.w regnum,D1
0002BF80 <AmiBlitz3.ab3@14095>   ASL.l #7,d1
0002BF86 <AmiBlitz3.ab3@14096>   OR.l #$f23c5400,d1
0002BF8A <AmiBlitz3.ab3@14097>   BSR writelong
0002BF8C <AmiBlitz3.ab3@14098>   SUBQ.l #8,a7
0002BF92 <AmiBlitz3.ab3@14099>   fmove.d fp0,0(a7)
0002BF94 <AmiBlitz3.ab3@14100>   MOVE.l (a7)+,d1
0002BF98 <AmiBlitz3.ab3@14101>   BSR writelong
0002BF9A <AmiBlitz3.ab3@14102>   MOVE.l (a7)+,d1
0002BF9E <AmiBlitz3.ab3@14103>   BSR writelong
0002BFA2 <AmiBlitz3.ab3@14104> BRA JL_0_9BD8
0002BFA6 <AmiBlitz3.ab3@14107>   BSR.w writeword
0002BFA8 <AmiBlitz3.ab3@14108>   MOVE.l D0,D1
0002BFAC <AmiBlitz3.ab3@14109>   BSR.w writelong
0002BFB0 <AmiBlitz3.ab3@14112>   MOVEA.l forthsp(PC),A0
0002BFB4 <AmiBlitz3.ab3@14113>   MOVEA.l -$20(A0),A3
0002BFBA <AmiBlitz3.ab3@14114>   MOVEA.l hunkoffsetbase,A2
0002BFC0 <AmiBlitz3.ab3@14115>   MOVE.l A3,hunkoffsetbase
0002BFC6 <AmiBlitz3.ab3@14116>   MOVEA.l _execbase,A6
0002BFC8 <AmiBlitz3.ab3@14119>   CMPA.l A3,A2
0002BFCC <AmiBlitz3.ab3@14120>   BEQ.w JL_0_9C0A
0002BFD2 <AmiBlitz3.ab3@14121>   SUBQ.l #1,hunkoffsetcounter
0002BFD4 <AmiBlitz3.ab3@14122>   MOVEA.l A2,A1
0002BFD6 <AmiBlitz3.ab3@14123>   MOVEA.l (A2),A2
0002BFD8 <AmiBlitz3.ab3@14124>   MOVEQ.l #$8,D0
0002BFDE <AmiBlitz3.ab3@14125>   MOVE.l mempool2,a0
0002BFE2 <AmiBlitz3.ab3@14126>    JSR _FreePooled(A6)
0002BFE6 <AmiBlitz3.ab3@14127> BRA.w JL_0_9BF0
0002BFEA <AmiBlitz3.ab3@14131>   MOVEA.l forthsp(PC),A0
0002BFEE <AmiBlitz3.ab3@14134>   LEA -$12(A0),A0
0002BFF4 <AmiBlitz3.ab3@14135>   MOVE.l A0,forthsp
0002BFF8 <AmiBlitz3.ab3@14136>   MOVEM.l (A7)+,D1/A0
0002BFFC <AmiBlitz3.ab3@14137>   BSR.w reget
0002C000 <AmiBlitz3.ab3@14138> BRA.w JL_0_9AFE
0002C004 <AmiBlitz3.ab3@14142>   BSR.w JL_0_A386
0002C006 <AmiBlitz3.ab3@14143>   TST.w d0
0002C00A <AmiBlitz3.ab3@14144>   BEQ JL_0_9C42
0002C00E <AmiBlitz3.ab3@14145>   CMP.b #",",d0
0002C012 <AmiBlitz3.ab3@14146>   BEQ JL_0_9C42
0002C016 <AmiBlitz3.ab3@14147>   CMP.b #"@",d0                                            ;expandline @@
0002C01A <AmiBlitz3.ab3@14148>   BEQ JL_0_9C42
0002C020 <AmiBlitz3.ab3@14149>   LEA operators,A0
0002C022 <AmiBlitz3.ab3@14152>    TST.w (A0)
0002C026 <AmiBlitz3.ab3@14153>    BEQ.w JL_0_9C42
0002C028 <AmiBlitz3.ab3@14154>   CMP.w (A0),D0
0002C02C <AmiBlitz3.ab3@14155>    BEQ.w JL_0_9C46a
0002C030 <AmiBlitz3.ab3@14156>   LEA $20(A0),A0
0002C034 <AmiBlitz3.ab3@14157> BRA.w JL_0_9C2E
0002C036 <AmiBlitz3.ab3@14161>   MOVEQ.l #$00,D1
0002C038 <AmiBlitz3.ab3@14162> RTS
0002C03C <AmiBlitz3.ab3@14166>   CMP.w #$3C,D0
0002C040 <AmiBlitz3.ab3@14167>    BNE.w JL_0_9C70
0002C044 <AmiBlitz3.ab3@14168>    BSR.w get1bytemain
0002C048 <AmiBlitz3.ab3@14169>   CMP.w #$3D,D0
0002C04C <AmiBlitz3.ab3@14170>    BNE.w JL_0_9C64
0002C052 <AmiBlitz3.ab3@14171>   LEA ople,A0
0002C056 <AmiBlitz3.ab3@14172> BRA.w JL_0_9CCA
0002C05A <AmiBlitz3.ab3@14176>   CMP.w #$3E,D0
0002C05E <AmiBlitz3.ab3@14177>    BNE.w JL_0_9C96
0002C062 <AmiBlitz3.ab3@14178> BRA.w JL_0_9CC4
0002C066 <AmiBlitz3.ab3@14182>   CMP.w #$3E,D0
0002C06A <AmiBlitz3.ab3@14183>    BNE.w JL_0_9C9E
0002C06E <AmiBlitz3.ab3@14184>    BSR.w get1bytemain
0002C072 <AmiBlitz3.ab3@14185>   CMP.w #$3D,D0
0002C076 <AmiBlitz3.ab3@14186>    BNE.w JL_0_9C8E
0002C07C <AmiBlitz3.ab3@14187>   LEA opge,A0
0002C080 <AmiBlitz3.ab3@14188> BRA.w JL_0_9CCA
0002C084 <AmiBlitz3.ab3@14192>   CMP.w #$3C,D0
0002C088 <AmiBlitz3.ab3@14193>    BEQ.w JL_0_9CC4
0002C092 <AmiBlitz3.ab3@14197>     MOVE.w oldqflag,instringon
0002C098 <AmiBlitz3.ab3@14198>     MOVEA.l lastsourcepos,A5
0002C09C <AmiBlitz3.ab3@14199> BRA.w JL_0_9CCA
0002C0A0 <AmiBlitz3.ab3@14203>   CMP.w #$3D,D0
0002C0A4 <AmiBlitz3.ab3@14204>    BNE.w JL_0_9CCA
0002C0A8 <AmiBlitz3.ab3@14205>    BSR.w get1bytemain
0002C0AC <AmiBlitz3.ab3@14206>   CMP.w #$3E,D0
0002C0B0 <AmiBlitz3.ab3@14207>    BNE.w JL_0_9CBC
0002C0B6 <AmiBlitz3.ab3@14208>   LEA opge,A0
0002C0BA <AmiBlitz3.ab3@14209> BRA.w JL_0_9CCA
0002C0BE <AmiBlitz3.ab3@14213>   CMP.w #$3C,D0
0002C0C2 <AmiBlitz3.ab3@14214>   BNE.w JL_0_9C96
0002C0C8 <AmiBlitz3.ab3@14217>   LEA opne,A0
0002C0CC <AmiBlitz3.ab3@14220>   MOVE.w $1E(A0),D1
0002C0CE <AmiBlitz3.ab3@14221> RTS
0002C0D0 <AmiBlitz3.ab3@14228>   MOVE.w d2,d1
0002C0D2 <AmiBlitz3.ab3@14229>   SUBQ.w #1,D1
0002C0D6 <AmiBlitz3.ab3@14230>    BMI.w illoperr
0002C0D8 <AmiBlitz3.ab3@14231>   LSL.w #2,D1
0002C0DC <AmiBlitz3.ab3@14232>   MOVE.l $2(A0,D1.W),D1
0002C0E0 <AmiBlitz3.ab3@14233>    BEQ.w illoperr
0002C0E2 <AmiBlitz3.ab3@14234>   MOVEA.l D1,A0
0002C0E4 <AmiBlitz3.ab3@14237> JMP (A0)
0002C0E8 <AmiBlitz3.ab3@14253>   MOVEA.l precsp(PC),A1
0002C0EE <AmiBlitz3.ab3@14254>   CMPA.l #precstackf,A1
0002C0F2 <AmiBlitz3.ab3@14255>    BCC.w pserr
0002C0F4 <AmiBlitz3.ab3@14256>   MOVE.w -(A1),D1
0002C0F6 <AmiBlitz3.ab3@14257>   MOVEA.l -(A1),A0
0002C0FC <AmiBlitz3.ab3@14258>   MOVE.l A1,precsp
0002C0FE <AmiBlitz3.ab3@14259> RTS
0002C102 <AmiBlitz3.ab3@14262> precsp:      Dc.l precstack
0002C1FE <AmiBlitz3.ab3@14263> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C282 <AmiBlitz3.ab3@14264>              Ds.l 33
0002C284 <AmiBlitz3.ab3@14270> mseq:  SEQ D0
0002C286 <AmiBlitz3.ab3@14271> msne:    SNE D0
0002C288 <AmiBlitz3.ab3@14272> mslt:    SLT D0
0002C28A <AmiBlitz3.ab3@14273> msle:    SLE D0
0002C28C <AmiBlitz3.ab3@14274> msgt:    SGT D0
0002C28E <AmiBlitz3.ab3@14275> msge:    SGE D0
0002C290 <AmiBlitz3.ab3@14277> cmp0:    CMP.b D0,D0
0002C292 <AmiBlitz3.ab3@14278> cmp1:    CMP.w D0,D0
0002C294 <AmiBlitz3.ab3@14279> cmp2:    CMP.l D0,D0
0002C298 <AmiBlitz3.ab3@14283>   MOVE.w cmp0(PC),D1
0002C29C <AmiBlitz3.ab3@14284> BRA.w doeqcmp2                                            ;writecompare
0002C2A0 <AmiBlitz3.ab3@14288>   MOVE.w cmp0(PC),D1
0002C2A4 <AmiBlitz3.ab3@14289> BRA.w donecmp2
0002C2A8 <AmiBlitz3.ab3@14293>   MOVE.w cmp0(PC),D1
0002C2AC <AmiBlitz3.ab3@14294> BRA.w doltcmp2
0002C2B0 <AmiBlitz3.ab3@14298>   MOVE.w cmp0(PC),D1
0002C2B4 <AmiBlitz3.ab3@14299> BRA.w dolecmp2
0002C2B8 <AmiBlitz3.ab3@14303>   MOVE.w cmp0(PC),D1
0002C2BC <AmiBlitz3.ab3@14304> BRA.w dogtcmp2
0002C2C0 <AmiBlitz3.ab3@14309>   MOVE.w cmp0(PC),D1
0002C2C4 <AmiBlitz3.ab3@14310> BRA.w dogecmp2
0002C2C8 <AmiBlitz3.ab3@14314>   MOVE.w cmp1(PC),D1
0002C2CC <AmiBlitz3.ab3@14315> BRA.w doeqcmp2
0002C2D0 <AmiBlitz3.ab3@14319>   MOVE.w cmp1(PC),D1
0002C2D4 <AmiBlitz3.ab3@14320> BRA.w donecmp2
0002C2D8 <AmiBlitz3.ab3@14324>   MOVE.w cmp1(PC),D1
0002C2DC <AmiBlitz3.ab3@14325> BRA.w doltcmp2
0002C2E0 <AmiBlitz3.ab3@14329>   MOVE.w cmp1(PC),D1
0002C2E4 <AmiBlitz3.ab3@14330> BRA.w dolecmp2
0002C2E8 <AmiBlitz3.ab3@14334>   MOVE.w cmp1(PC),D1
0002C2EC <AmiBlitz3.ab3@14335> BRA.w dogtcmp2
0002C2F0 <AmiBlitz3.ab3@14340>   MOVE.w cmp1(PC),D1
0002C2F4 <AmiBlitz3.ab3@14341> BRA.w dogecmp2
0002C2F8 <AmiBlitz3.ab3@14345>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C2FC <AmiBlitz3.ab3@14346> BRA doeqcmp2
0002C300 <AmiBlitz3.ab3@14349>   MOVE.w cmp2(PC),D1
0002C304 <AmiBlitz3.ab3@14350> BRA donecmp2
0002C308 <AmiBlitz3.ab3@14354>   MOVE.w cmp2(PC),D1
0002C30C <AmiBlitz3.ab3@14355> BRA.w doltcmp2
0002C310 <AmiBlitz3.ab3@14359>   MOVE.w cmp2(PC),D1
0002C314 <AmiBlitz3.ab3@14360> BRA.w dolecmp2
0002C318 <AmiBlitz3.ab3@14364>   MOVE.w cmp2(PC),D1
0002C31C <AmiBlitz3.ab3@14365> BRA.w dogtcmp2
0002C320 <AmiBlitz3.ab3@14369>   MOVE.w cmp2(PC),D1
0002C324 <AmiBlitz3.ab3@14370> BRA.w dogecmp2
0002C326 <AmiBlitz3.ab3@14373> cfregat:  Ds.w 1
0002C32C <AmiBlitz3.ab3@14377>   MOVE.w D1,libjsr+2
0002C330 <AmiBlitz3.ab3@14378>    BSR.w JL_0_AD40
0002C332 <AmiBlitz3.ab3@14379>   MOVE.l D4,D1
0002C336 <AmiBlitz3.ab3@14380>    BSR.w JL_0_AD38
0002C33A <AmiBlitz3.ab3@14381>   MOVE.w #$C900,D1
0002C33E <AmiBlitz3.ab3@14382>    BSR.w Atokejsr
0002C342 <AmiBlitz3.ab3@14383>    BSR.w JL_0_A352
0002C348 <AmiBlitz3.ab3@14384>   MOVE.l libjsr,D1
0002C34C <AmiBlitz3.ab3@14385>    BSR.w writelong
0002C356 <AmiBlitz3.ab3@14386>   MOVE.w regnum,cfregat
0002C35C <AmiBlitz3.ab3@14387>   CLR.w regnum
0002C35E <AmiBlitz3.ab3@14388> RTS
0002C368 <AmiBlitz3.ab3@14392>   MOVE.w cfregat,regnum
0002C36C <AmiBlitz3.ab3@14393>    BSR.w JL_0_A36E
0002C36E <AmiBlitz3.ab3@14394>   MOVE.l D5,D1
0002C372 <AmiBlitz3.ab3@14395> BRA.w JL_0_AD38
0002C374 <AmiBlitz3.ab3@14399>    MOVEQ.l #-$2A,D1
0002C37A <AmiBlitz3.ab3@14400>    TST.b fpu
0002C37E <AmiBlitz3.ab3@14401>    BEQ do_equal_float__nofpu
0002C380 <AmiBlitz3.ab3@14402>    MOVEQ #0,d1
0002C386 <AmiBlitz3.ab3@14403>    MOVE.w regnum,d1
0002C388 <AmiBlitz3.ab3@14404>    MOVE.l d1,d2
0002C38A <AmiBlitz3.ab3@14405>    ASL.l #7,d1
0002C38C <AmiBlitz3.ab3@14406>    ADDQ  #1,d2
0002C38E <AmiBlitz3.ab3@14407>    ASL.l #8,d2
0002C390 <AmiBlitz3.ab3@14408>    ASL.l #2,d2
0002C392 <AmiBlitz3.ab3@14409>    OR.l d2,d1
0002C398 <AmiBlitz3.ab3@14410>    OR.l #$f2000038,d1
0002C39E <AmiBlitz3.ab3@14411>    JSR writelong
0002C3A2 <AmiBlitz3.ab3@14412>    MOVE.w #$f240,d1
0002C3A8 <AmiBlitz3.ab3@14413>    OR.w regnum,d1
0002C3AC <AmiBlitz3.ab3@14414>    BSR writeword
0002C3AE <AmiBlitz3.ab3@14415>    MOVEQ.l #1,d2
0002C3B2 <AmiBlitz3.ab3@14416>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C3B6 <AmiBlitz3.ab3@14417>    BSR writeword
0002C3B8 <AmiBlitz3.ab3@14418> RTS
0002C3BC <AmiBlitz3.ab3@14421>    BSR.w docflib
0002C3C0 <AmiBlitz3.ab3@14422>    BSR.w doeqcmp
0002C3C4 <AmiBlitz3.ab3@14423> BRA.w docflib2
0002C3C6 <AmiBlitz3.ab3@14427>   MOVEQ.l #-$2A,D1
0002C3CC <AmiBlitz3.ab3@14428>   TST.b fpu
0002C3D0 <AmiBlitz3.ab3@14429>    BEQ do_not_equal_float__nofpu
0002C3D2 <AmiBlitz3.ab3@14430>    MOVEQ #0,d1
0002C3D8 <AmiBlitz3.ab3@14431>    MOVE.w regnum,d1
0002C3DA <AmiBlitz3.ab3@14432>    MOVE.l d1,d2
0002C3DC <AmiBlitz3.ab3@14433>    ASL.l #7,d1
0002C3DE <AmiBlitz3.ab3@14434>    ADDQ  #1,d2
0002C3E0 <AmiBlitz3.ab3@14435>    ASL.l #8,d2
0002C3E2 <AmiBlitz3.ab3@14436>    ASL.l #2,d2
0002C3E4 <AmiBlitz3.ab3@14437>    OR.l d2,d1
0002C3EA <AmiBlitz3.ab3@14438>    OR.l #$f2000038,d1
0002C3F0 <AmiBlitz3.ab3@14439>    JSR writelong
0002C3F4 <AmiBlitz3.ab3@14440>    MOVE.w #$f240,d1
0002C3FA <AmiBlitz3.ab3@14441>    OR.w regnum,d1
0002C3FE <AmiBlitz3.ab3@14442>    BSR writeword
0002C404 <AmiBlitz3.ab3@14443>    MOVE.l #1,d2
0002C408 <AmiBlitz3.ab3@14444>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C40C <AmiBlitz3.ab3@14445>    BSR writeword
0002C40E <AmiBlitz3.ab3@14446> RTS
0002C412 <AmiBlitz3.ab3@14449>    BSR.w docflib
0002C416 <AmiBlitz3.ab3@14450>    BSR.w donecmp
0002C41A <AmiBlitz3.ab3@14451> BRA.w docflib2
0002C41C <AmiBlitz3.ab3@14455>   MOVEQ.l #-$2A,D1
0002C422 <AmiBlitz3.ab3@14456>     TST.b fpu
0002C426 <AmiBlitz3.ab3@14457>    BEQ do_littler_float__nofpu
0002C428 <AmiBlitz3.ab3@14458>    MOVEQ #0,d1
0002C42E <AmiBlitz3.ab3@14459>    MOVE.w regnum,d1
0002C430 <AmiBlitz3.ab3@14460>    MOVE.l d1,d2
0002C432 <AmiBlitz3.ab3@14461>    ASL.l #7,d1
0002C434 <AmiBlitz3.ab3@14462>    ADDQ  #1,d2
0002C436 <AmiBlitz3.ab3@14463>    ASL.l #8,d2
0002C438 <AmiBlitz3.ab3@14464>    ASL.l #2,d2
0002C43A <AmiBlitz3.ab3@14465>    OR.l d2,d1
0002C440 <AmiBlitz3.ab3@14466>    OR.l #$f2000038,d1
0002C446 <AmiBlitz3.ab3@14467>    JSR writelong
0002C44A <AmiBlitz3.ab3@14468>    MOVE.w #$f240,d1
0002C450 <AmiBlitz3.ab3@14469>    OR.w regnum,d1
0002C454 <AmiBlitz3.ab3@14470>    BSR writeword
0002C45A <AmiBlitz3.ab3@14471>    MOVE.l #$1,d2
0002C45E <AmiBlitz3.ab3@14472>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C462 <AmiBlitz3.ab3@14473>    BSR writeword
0002C464 <AmiBlitz3.ab3@14474> RTS
0002C468 <AmiBlitz3.ab3@14477>    BSR.w docflib
0002C46C <AmiBlitz3.ab3@14478>    BSR.w doltcmp
0002C470 <AmiBlitz3.ab3@14479> BRA.w docflib2
0002C472 <AmiBlitz3.ab3@14483>   MOVEQ.l #-$2A,D1
0002C478 <AmiBlitz3.ab3@14484>   TST.b fpu
0002C47C <AmiBlitz3.ab3@14485>    BEQ do_littler_equal_float__nofpu
0002C47E <AmiBlitz3.ab3@14486>    MOVEQ #0,d1
0002C484 <AmiBlitz3.ab3@14487>    MOVE.w regnum,d1
0002C486 <AmiBlitz3.ab3@14488>    MOVE.l d1,d2
0002C488 <AmiBlitz3.ab3@14489>    ASL.l #7,d1
0002C48A <AmiBlitz3.ab3@14490>    ADDQ  #1,d2
0002C48C <AmiBlitz3.ab3@14491>    ASL.l #8,d2
0002C48E <AmiBlitz3.ab3@14492>    ASL.l #2,d2
0002C490 <AmiBlitz3.ab3@14493>    OR.l d2,d1
0002C496 <AmiBlitz3.ab3@14494>    OR.l #$f2000038,d1
0002C49C <AmiBlitz3.ab3@14495>    JSR writelong
0002C4A0 <AmiBlitz3.ab3@14496>    MOVE.w #$f240,d1
0002C4A6 <AmiBlitz3.ab3@14497>    OR.w regnum,d1
0002C4AA <AmiBlitz3.ab3@14498>    BSR writeword
0002C4B0 <AmiBlitz3.ab3@14499>    MOVE.l #1,d2
0002C4B4 <AmiBlitz3.ab3@14500>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C4B8 <AmiBlitz3.ab3@14501>    BSR writeword
0002C4BA <AmiBlitz3.ab3@14502> RTS
0002C4BE <AmiBlitz3.ab3@14505>    BSR.w docflib
0002C4C2 <AmiBlitz3.ab3@14506>    BSR.w dolecmp
0002C4C6 <AmiBlitz3.ab3@14507> BRA.w docflib2
0002C4C8 <AmiBlitz3.ab3@14511>   MOVEQ.l #-$2A,D1
0002C4CE <AmiBlitz3.ab3@14512>    TST.b fpu
0002C4D2 <AmiBlitz3.ab3@14513>    BEQ do_greater_float__nofpu
0002C4D4 <AmiBlitz3.ab3@14514>     MOVEQ #0,d1
0002C4DA <AmiBlitz3.ab3@14515>    MOVE.w regnum,d1
0002C4DC <AmiBlitz3.ab3@14516>    MOVE.l d1,d2
0002C4DE <AmiBlitz3.ab3@14517>    ASL.l #7,d1
0002C4E0 <AmiBlitz3.ab3@14518>    ADDQ  #1,d2
0002C4E2 <AmiBlitz3.ab3@14519>    ASL.l #8,d2
0002C4E4 <AmiBlitz3.ab3@14520>    ASL.l #2,d2
0002C4E6 <AmiBlitz3.ab3@14521>    OR.l d2,d1
0002C4EC <AmiBlitz3.ab3@14522>    OR.l #$f2000038,d1
0002C4F2 <AmiBlitz3.ab3@14523>    JSR writelong
0002C4F6 <AmiBlitz3.ab3@14524>    MOVE.w #$f240,d1
0002C4FC <AmiBlitz3.ab3@14525>    OR.w regnum,d1
0002C500 <AmiBlitz3.ab3@14526>    BSR writeword
0002C506 <AmiBlitz3.ab3@14527>    MOVE.l #1,d2
0002C50A <AmiBlitz3.ab3@14528>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C50E <AmiBlitz3.ab3@14529>    BSR writeword
0002C510 <AmiBlitz3.ab3@14530> RTS
0002C514 <AmiBlitz3.ab3@14533>    BSR.w docflib
0002C518 <AmiBlitz3.ab3@14534>    BSR.w dogtcmp
0002C51C <AmiBlitz3.ab3@14535> BRA.w docflib2
0002C51E <AmiBlitz3.ab3@14539>   MOVEQ.l #-$2A,D1
0002C524 <AmiBlitz3.ab3@14540>  TST.b fpu
0002C528 <AmiBlitz3.ab3@14541>    BEQ do_greater_equal_float__nofpu
0002C52A <AmiBlitz3.ab3@14542>    MOVEQ #0,d1
0002C530 <AmiBlitz3.ab3@14543>    MOVE.w regnum,d1
0002C532 <AmiBlitz3.ab3@14544>    MOVE.l d1,d2
0002C534 <AmiBlitz3.ab3@14545>    ASL.l #7,d1
0002C536 <AmiBlitz3.ab3@14546>    ADDQ  #1,d2
0002C538 <AmiBlitz3.ab3@14547>    ASL.l #8,d2
0002C53A <AmiBlitz3.ab3@14548>    ASL.l #2,d2
0002C53C <AmiBlitz3.ab3@14549>    OR.l d2,d1
0002C542 <AmiBlitz3.ab3@14550>    OR.l #$f2000038,d1
0002C548 <AmiBlitz3.ab3@14551>    JSR writelong
0002C54C <AmiBlitz3.ab3@14552>    MOVE.w #$f240,d1
0002C552 <AmiBlitz3.ab3@14553>    OR.w regnum,d1
0002C556 <AmiBlitz3.ab3@14554>    BSR writeword
0002C55C <AmiBlitz3.ab3@14555>    MOVE.l #1,d2
0002C560 <AmiBlitz3.ab3@14556>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C564 <AmiBlitz3.ab3@14557>    BSR writeword
0002C566 <AmiBlitz3.ab3@14558> RTS
0002C56A <AmiBlitz3.ab3@14561>    BSR.w docflib
0002C56E <AmiBlitz3.ab3@14562>    BSR.w dogecmp
0002C572 <AmiBlitz3.ab3@14563> BRA.w docflib2
0002C578 <AmiBlitz3.ab3@14568>   MOVE.l #$CE00,D1
0002C57E <AmiBlitz3.ab3@14569>    MOVE.l d1,lastinstruction
0002C582 <AmiBlitz3.ab3@14570>    BSR.w Atokejsr
0002C586 <AmiBlitz3.ab3@14571> BRA.w doeqcmp
0002C58C <AmiBlitz3.ab3@14575>   MOVE.l #$CE00,D1
0002C592 <AmiBlitz3.ab3@14576>    MOVE.l d1,lastinstruction
0002C596 <AmiBlitz3.ab3@14577>    BSR.w Atokejsr
0002C59A <AmiBlitz3.ab3@14578> BRA.w donecmp
0002C5A0 <AmiBlitz3.ab3@14582>   MOVE.l #$CE00,D1
0002C5A6 <AmiBlitz3.ab3@14583>    MOVE.l d1,lastinstruction
0002C5AA <AmiBlitz3.ab3@14584>    BSR.w Atokejsr
0002C5AE <AmiBlitz3.ab3@14585> BRA.w doltcmp
0002C5B4 <AmiBlitz3.ab3@14589>   MOVE.l #$CE00,D1
0002C5BA <AmiBlitz3.ab3@14590>    MOVE.l d1,lastinstruction
0002C5BE <AmiBlitz3.ab3@14591>    BSR.w Atokejsr
0002C5C2 <AmiBlitz3.ab3@14592> BRA.w dolecmp
0002C5C8 <AmiBlitz3.ab3@14596>   MOVE.l #$CE00,D1
0002C5CE <AmiBlitz3.ab3@14597>    MOVE.l d1,lastinstruction
0002C5D2 <AmiBlitz3.ab3@14598>    BSR.w Atokejsr
0002C5D6 <AmiBlitz3.ab3@14599> BRA.w dogtcmp
0002C5DC <AmiBlitz3.ab3@14603>   MOVE.l #$CE00,D1
0002C5E2 <AmiBlitz3.ab3@14604>    MOVE.l d1,lastinstruction
0002C5E6 <AmiBlitz3.ab3@14605>    BSR.w Atokejsr
0002C5EA <AmiBlitz3.ab3@14606> BRA.w dogecmp
0002C5F0 <AmiBlitz3.ab3@14611>   TST.b fast                                               ;compare
0002C5F4 <AmiBlitz3.ab3@14612>   BEQ cmpit__org
0002C5FA <AmiBlitz3.ab3@14616>   MOVE.l destpointer,a0
0002C600 <AmiBlitz3.ab3@14617>   SUB.l imm_addr,a0
0002C606 <AmiBlitz3.ab3@14618>   CMP.l #6,a0
0002C60A <AmiBlitz3.ab3@14619>   BNE cmpit__l11
0002C610 <AmiBlitz3.ab3@14620>   MOVE.l imm_addr,a0
0002C618 <AmiBlitz3.ab3@14621>   CMP.w #$223c,imm_addr
0002C61C <AmiBlitz3.ab3@14622>   BNE cmpit__org
0002C622 <AmiBlitz3.ab3@14623>   ADD.w #$8e80,-6(a4)
0002C628 <AmiBlitz3.ab3@14626>   CLR.l imm_addr
0002C62A <AmiBlitz3.ab3@14627> RTS
0002C630 <AmiBlitz3.ab3@14630>   CMP.l #4,a0
0002C634 <AmiBlitz3.ab3@14631>   BNE cmpit__l10
0002C638 <AmiBlitz3.ab3@14632>   CMP.b #2,d3
0002C63C <AmiBlitz3.ab3@14633>   BNE cmpit__l11b
0002C642 <AmiBlitz3.ab3@14634>   ADD.w #$7e40,-4(a4)
0002C644 <AmiBlitz3.ab3@14635> RTS
0002C64A <AmiBlitz3.ab3@14638>  ADD.w #$7e00,-4(a4)
0002C64C <AmiBlitz3.ab3@14639> RTS
0002C652 <AmiBlitz3.ab3@14642>    MOVE.l destpointer,a0
0002C658 <AmiBlitz3.ab3@14643>    SUB.l load_var_addr,a0
0002C65C <AmiBlitz3.ab3@14644>    CMP.w #4,a0
0002C660 <AmiBlitz3.ab3@14645>    BNE cmpit__org
0002C664 <AmiBlitz3.ab3@14646>    CMP.b #3,d3
0002C668 <AmiBlitz3.ab3@14647>    BCS cmpit__lv1
0002C66E <AmiBlitz3.ab3@14648>    CLR.l load_var_addr
0002C674 <AmiBlitz3.ab3@14649>    ADD.w #$9080-$200,-4(a4)
0002C676 <AmiBlitz3.ab3@14650> RTS
0002C67A <AmiBlitz3.ab3@14653>   CMP.b #2,d3
0002C67E <AmiBlitz3.ab3@14654>    BNE cmpit__org
0002C684 <AmiBlitz3.ab3@14655>    CLR.l load_var_addr
0002C68A <AmiBlitz3.ab3@14656>    ADD.w #$8040-$200,-4(a4)
0002C68C <AmiBlitz3.ab3@14657> RTS
0002C692 <AmiBlitz3.ab3@14660>   MOVE.w regnum,D3
0002C694 <AmiBlitz3.ab3@14661>   OR.w D3,D1
0002C696 <AmiBlitz3.ab3@14662>   LSL.w #8,D3
0002C698 <AmiBlitz3.ab3@14663>   LSL.w #1,D3
0002C69A <AmiBlitz3.ab3@14664>   OR.w D3,D1
0002C69C <AmiBlitz3.ab3@14665>   ADDQ.w #1,D1
0002C6A0 <AmiBlitz3.ab3@14666> BRA.w writeword
0002C6A4 <AmiBlitz3.ab3@14670>    BSR.w cmpit
0002C6A8 <AmiBlitz3.ab3@14673>    MOVE.w mseq(PC),D1
0002C6AC <AmiBlitz3.ab3@14674> BRA.w cpoke
0002C6B0 <AmiBlitz3.ab3@14678>   BSR.w cmpit
0002C6B4 <AmiBlitz3.ab3@14681>   MOVE.w msne(PC),D1
0002C6B8 <AmiBlitz3.ab3@14682> BRA.w cpoke
0002C6BC <AmiBlitz3.ab3@14686>   BSR.w cmpit
0002C6C0 <AmiBlitz3.ab3@14689>    MOVE.w mslt(PC),D1
0002C6C4 <AmiBlitz3.ab3@14690> BRA.w cpoke
0002C6C8 <AmiBlitz3.ab3@14694>    BSR.w cmpit
0002C6CC <AmiBlitz3.ab3@14697>    MOVE.w msle(PC),D1
0002C6D0 <AmiBlitz3.ab3@14698> BRA.w cpoke
0002C6D4 <AmiBlitz3.ab3@14702>    BSR.w cmpit
0002C6D8 <AmiBlitz3.ab3@14705>    MOVE.w msgt(PC),D1
0002C6DC <AmiBlitz3.ab3@14706> BRA.w cpoke
0002C6E0 <AmiBlitz3.ab3@14710>   BSR.w cmpit
0002C6E4 <AmiBlitz3.ab3@14713>    MOVE.w msge(PC),D1
0002C6EA <AmiBlitz3.ab3@14716>    OR.w regnum,D1
0002C6EE <AmiBlitz3.ab3@14717>    CMP.w #5,d2
0002C6F2 <AmiBlitz3.ab3@14718>    BNE cpoke__nod0
0002C6F6 <AmiBlitz3.ab3@14719>    CMP.w #5,d3
0002C6FA <AmiBlitz3.ab3@14720>    BNE cpoke__nod0
0002C6FC <AmiBlitz3.ab3@14721>    MOVE.l d1,-(a7)
0002C702 <AmiBlitz3.ab3@14722>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002C706 <AmiBlitz3.ab3@14723>    BSR writelong
0002C708 <AmiBlitz3.ab3@14724>    MOVE.l (a7)+,d1
0002C70C <AmiBlitz3.ab3@14727>    BSR.w writeword                                         ;writeseq
0002C70E <AmiBlitz3.ab3@14728>    MOVEQ.l #1,d2
0002C714 <AmiBlitz3.ab3@14729>    MOVE.l lasttoken,d1
0002C71A <AmiBlitz3.ab3@14730>     TST.b fast
0002C71E <AmiBlitz3.ab3@14731>     BEQ.s cpoke__l11
0002C724 <AmiBlitz3.ab3@14732>    CMP.l #$800b,d1
0002C728 <AmiBlitz3.ab3@14733>    BEQ cpoke__l10
0002C72C <AmiBlitz3.ab3@14736>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002C732 <AmiBlitz3.ab3@14737>   OR.w regnum,D1
0002C736 <AmiBlitz3.ab3@14738>    BSR.w writeword                                         ;writeext.w
0002C738 <AmiBlitz3.ab3@14739>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002C73A <AmiBlitz3.ab3@14742> RTS
0002C73E <AmiBlitz3.ab3@14747>   MOVE.w #$D040,D1
0002C740 <AmiBlitz3.ab3@14748>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002C744 <AmiBlitz3.ab3@14749> BRA.w doplus2
0002C748 <AmiBlitz3.ab3@14753>   MOVE.w #$D040,D1
0002C74A <AmiBlitz3.ab3@14754>   MOVEQ.l #$03,D2                                          ;now a long
0002C74E <AmiBlitz3.ab3@14755>    BSR.w doplus2
0002C752 <AmiBlitz3.ab3@14756> BRA.w convert_word_to_long
0002C756 <AmiBlitz3.ab3@14760>   MOVE.w #$D080,D1                                         ;writeaddlong
0002C758 <AmiBlitz3.ab3@14763>   MOVE.w d1,a1
0002C75E <AmiBlitz3.ab3@14764>   TST.b fast
0002C762 <AmiBlitz3.ab3@14765>   BEQ doplus2__l10
0002C764 <AmiBlitz3.ab3@14769>   ASR.w #8,d1
0002C768 <AmiBlitz3.ab3@14770>   CMP.b #$90,d1
0002C76C <AmiBlitz3.ab3@14771>   BEQ doplus2__sub1
0002C770 <AmiBlitz3.ab3@14772>   CMP.b #$d0,d1
0002C774 <AmiBlitz3.ab3@14773>   BNE doplus2__l10
0002C778 <AmiBlitz3.ab3@14774>   CMP.b #3,d3
0002C77C <AmiBlitz3.ab3@14775>   BCS doplus2__lq10
0002C782 <AmiBlitz3.ab3@14776>   TST.b quickadd
0002C788 <AmiBlitz3.ab3@14780>    MOVE.l destpointer,a0
0002C78E <AmiBlitz3.ab3@14781>    CLR.b quickadd
0002C794 <AmiBlitz3.ab3@14782>    CLR.l load_var_addr
0002C79A <AmiBlitz3.ab3@14783>    SUB.l imm_addr,a0
0002C79E <AmiBlitz3.ab3@14784>    CMP.w #6,a0
0002C7A2 <AmiBlitz3.ab3@14785>    BEQ doplus2__li10
0002C7A6 <AmiBlitz3.ab3@14786>    CMP.w #4,a0
0002C7AA <AmiBlitz3.ab3@14787>    BNE.s doplus2__li1
0002C7B0 <AmiBlitz3.ab3@14788>    CLR.l imm_addr
0002C7B6 <AmiBlitz3.ab3@14789>    ADD.w #$a040-$200,-4(a4)
0002C7B8 <AmiBlitz3.ab3@14790> RTS
0002C7BA <AmiBlitz3.ab3@14793>    MOVE.l a4,a0
0002C7C0 <AmiBlitz3.ab3@14794>    SUB.l load_var_addr,a0
0002C7C6 <AmiBlitz3.ab3@14795>    CMP.l #$a,a0
0002C7CA <AmiBlitz3.ab3@14796>    BNE doplus2__l10e
0002C7D0 <AmiBlitz3.ab3@14797>    CLR.l load_var_addr
0002C7D4 <AmiBlitz3.ab3@14798>    MOVE.w -$8(a4),d1
0002C7DA <AmiBlitz3.ab3@14799>    MOVE.l -$4(a4),-$8(a4)
0002C7DE <AmiBlitz3.ab3@14800>    MOVE.w d1,-$4(a4)
0002C7E4 <AmiBlitz3.ab3@14801>    SUB.w #$1980,-$a(a4)
0002C7EA <AmiBlitz3.ab3@14802>    SUBQ.l #2,destpointer
0002C7EC <AmiBlitz3.ab3@14803> RTS
0002C7F2 <AmiBlitz3.ab3@14806>   CLR.b quickadd
0002C7F6 <AmiBlitz3.ab3@14807> BRA doplus2__l10
0002C7FC <AmiBlitz3.ab3@14810>    CLR.l imm_addr
0002C800 <AmiBlitz3.ab3@14811>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002C804 <AmiBlitz3.ab3@14812>    BNE doplus2__doit
0002C80A <AmiBlitz3.ab3@14813>    SUBQ.l #6,destpointer
0002C80C <AmiBlitz3.ab3@14814> RTS
0002C812 <AmiBlitz3.ab3@14817>    ADD.w #$b080-$200,-6(a4)
0002C814 <AmiBlitz3.ab3@14818> RTS
0002C81A <AmiBlitz3.ab3@14821>    MOVE.l destpointer,a0
0002C820 <AmiBlitz3.ab3@14822>    SUB.l load_var_addr,a0
0002C824 <AmiBlitz3.ab3@14823>    CMP.w #4,a0
0002C828 <AmiBlitz3.ab3@14824>    BNE doplus2__l10
0002C82C <AmiBlitz3.ab3@14825>    CMP.b #3,d3
0002C830 <AmiBlitz3.ab3@14826>    BNE doplus2__lv1
0002C836 <AmiBlitz3.ab3@14827>    CLR.l load_var_addr
0002C83C <AmiBlitz3.ab3@14828>    ADD.w #$b080-$200,-4(a4)
0002C83E <AmiBlitz3.ab3@14829> RTS
0002C842 <AmiBlitz3.ab3@14832>   CMP.b #2,d3
0002C846 <AmiBlitz3.ab3@14833>   BNE doplus2__l10
0002C84C <AmiBlitz3.ab3@14834>   CLR.l load_var_addr
0002C852 <AmiBlitz3.ab3@14835>   ADD.w #$a040-$200,-4(a4)
0002C854 <AmiBlitz3.ab3@14836> RTS
0002C85A <AmiBlitz3.ab3@14839>   MOVE.w regnum,D3
0002C85C <AmiBlitz3.ab3@14840>   MOVE.w a1,d1
0002C85E <AmiBlitz3.ab3@14841>   OR.w D3,D1
0002C860 <AmiBlitz3.ab3@14842>   ADDQ.w #1,D1
0002C862 <AmiBlitz3.ab3@14843>   LSL.w #8,D3
0002C864 <AmiBlitz3.ab3@14844>   LSL.w #1,D3
0002C866 <AmiBlitz3.ab3@14845>   OR.w D3,D1
0002C86A <AmiBlitz3.ab3@14846> BRA.w writeword
0002C86E <AmiBlitz3.ab3@14849>    CMP.b #3,d3
0002C872 <AmiBlitz3.ab3@14850>    BCS doplus2__sub1_lq10
0002C878 <AmiBlitz3.ab3@14851>    TST.b quickadd
0002C87E <AmiBlitz3.ab3@14855>    MOVE.l destpointer,a0
0002C884 <AmiBlitz3.ab3@14856>    CLR.b quickadd
0002C88A <AmiBlitz3.ab3@14857>    CLR.l load_var_addr
0002C890 <AmiBlitz3.ab3@14858>    SUB.l imm_addr,a0
0002C894 <AmiBlitz3.ab3@14859>    CMP.w #6,a0
0002C898 <AmiBlitz3.ab3@14860>    BEQ doplus2__sub1_li10
0002C89C <AmiBlitz3.ab3@14861>    CMP.w #4,a0
0002C8A0 <AmiBlitz3.ab3@14862>    BNE.s doplus2__sub1_li1
0002C8A6 <AmiBlitz3.ab3@14863>    CLR.l imm_addr
0002C8AC <AmiBlitz3.ab3@14864>    ADD.w #$6040-$200,-4(a4)
0002C8AE <AmiBlitz3.ab3@14865> RTS
0002C8B0 <AmiBlitz3.ab3@14868>    MOVE.l a4,a0
0002C8B6 <AmiBlitz3.ab3@14869>     SUB.l load_var_addr,a0
0002C8BC <AmiBlitz3.ab3@14870>     CMP.l #$a,a0
0002C8C0 <AmiBlitz3.ab3@14871>     BNE doplus2__sub1_l10e
0002C8C6 <AmiBlitz3.ab3@14872>    CLR.l load_var_addr
0002C8CA <AmiBlitz3.ab3@14873>    MOVE.w -$8(a4),d1
0002C8D0 <AmiBlitz3.ab3@14874>    MOVE.l -$4(a4),-$8(a4)
0002C8D4 <AmiBlitz3.ab3@14875>    MOVE.w d1,-$4(a4)
0002C8DA <AmiBlitz3.ab3@14876>    SUB.w #$1b80,-$a(a4)
0002C8E0 <AmiBlitz3.ab3@14877>    SUBQ.l #2,destpointer
0002C8E2 <AmiBlitz3.ab3@14878> RTS
0002C8E8 <AmiBlitz3.ab3@14881>   CLR.b quickadd
0002C8EC <AmiBlitz3.ab3@14882> BRA doplus2__sub1_l10
0002C8F2 <AmiBlitz3.ab3@14885>    CLR.l imm_addr
0002C8F8 <AmiBlitz3.ab3@14886>    ADD.w #$7080-$200,-6(a4)
0002C8FA <AmiBlitz3.ab3@14887> RTS
0002C900 <AmiBlitz3.ab3@14890>    MOVE.l destpointer,a0
0002C906 <AmiBlitz3.ab3@14891>    SUB.l load_var_addr,a0
0002C90A <AmiBlitz3.ab3@14892>    CMP.w #4,a0
0002C90E <AmiBlitz3.ab3@14893>    BNE doplus2__sub1_l10
0002C912 <AmiBlitz3.ab3@14894>    CMP.b #3,d3
0002C916 <AmiBlitz3.ab3@14895>    BNE doplus2__sub1_lv1
0002C91C <AmiBlitz3.ab3@14896>    CLR.l load_var_addr
0002C922 <AmiBlitz3.ab3@14897>    ADD.w #$7080-$200,-4(a4)
0002C924 <AmiBlitz3.ab3@14898> RTS
0002C928 <AmiBlitz3.ab3@14901>    CMP.b #2,d3
0002C92C <AmiBlitz3.ab3@14902>    BNE doplus2__sub1_l10
0002C932 <AmiBlitz3.ab3@14903>    CLR.l load_var_addr
0002C938 <AmiBlitz3.ab3@14904>    ADD.w #$6040-$200,-4(a4)
0002C93A <AmiBlitz3.ab3@14905> RTS
0002C940 <AmiBlitz3.ab3@14908>   MOVE.w regnum,D3
0002C942 <AmiBlitz3.ab3@14909>   MOVE.w a1,d1
0002C944 <AmiBlitz3.ab3@14910>   OR.w D3,D1
0002C946 <AmiBlitz3.ab3@14911>   ADDQ.w #1,D1
0002C948 <AmiBlitz3.ab3@14912>   LSL.w #8,D3
0002C94A <AmiBlitz3.ab3@14913>   LSL.w #1,D3
0002C94C <AmiBlitz3.ab3@14914>   OR.w D3,D1
0002C950 <AmiBlitz3.ab3@14915> BRA.w writeword
0002C952 <AmiBlitz3.ab3@14919>   MOVEQ #0,d0
0002C958 <AmiBlitz3.ab3@14920>   MOVE.w regnum,d0
0002C95A <AmiBlitz3.ab3@14921>   ADDQ #1,d0
0002C95C <AmiBlitz3.ab3@14922>   ASL.w #8,d0
0002C95E <AmiBlitz3.ab3@14923>   ASL.w #2,d0
0002C964 <AmiBlitz3.ab3@14924>   MOVE.l #$f2000022,d1                                     ;fpu add
0002C966 <AmiBlitz3.ab3@14925>   OR.l d0,d1
0002C96C <AmiBlitz3.ab3@14926>   MOVE.w regnum,d0
0002C96E <AmiBlitz3.ab3@14927>   ASL.w #7,d0
0002C970 <AmiBlitz3.ab3@14928>   OR.l d0,d1
0002C974 <AmiBlitz3.ab3@14929> BRA.w writelong
0002C97A <AmiBlitz3.ab3@14935>   TST.b iee
0002C97E <AmiBlitz3.ab3@14936>   BNE do_plus_float__fadd1
0002C982 <AmiBlitz3.ab3@14937>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002C988 <AmiBlitz3.ab3@14940>    MOVE.w D1,libjsr+2
0002C98C <AmiBlitz3.ab3@14941>    BSR.w JL_0_AD40
0002C98E <AmiBlitz3.ab3@14942>   MOVE.l D4,D1
0002C992 <AmiBlitz3.ab3@14943>    BSR.w JL_0_AD38
0002C996 <AmiBlitz3.ab3@14944>   MOVE.w #$C900,D1
0002C99A <AmiBlitz3.ab3@14945>    BSR.w Atokejsr
0002C99E <AmiBlitz3.ab3@14946>    BSR.w JL_0_A352
0002C9A4 <AmiBlitz3.ab3@14947>   MOVE.l libjsr,D1
0002C9A8 <AmiBlitz3.ab3@14948>    BSR.w writelong
0002C9AC <AmiBlitz3.ab3@14949>    BSR.w JL_0_A36E
0002C9AE <AmiBlitz3.ab3@14950>   MOVE.l D5,D1
0002C9B2 <AmiBlitz3.ab3@14951> BRA.w JL_0_AD38
0002C9B8 <AmiBlitz3.ab3@14955>   MOVE.w regnum,D1
0002C9BA <AmiBlitz3.ab3@14956>   LSL.w #8,D1
0002C9BC <AmiBlitz3.ab3@14957>   LSL.w #1,D1
0002C9BE <AmiBlitz3.ab3@14958>   MOVE.w D1,-(A7)
0002C9C2 <AmiBlitz3.ab3@14959>   CMP.w #3072,d1
0002C9C6 <AmiBlitz3.ab3@14960>   BEQ 'l1
0002C9CC <AmiBlitz3.ab3@14961>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002C9D0 <AmiBlitz3.ab3@14962> BRA 'l2
0002C9D4 <AmiBlitz3.ab3@14965>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002C9D8 <AmiBlitz3.ab3@14968>    BSR.w writeword
0002C9DA <AmiBlitz3.ab3@14969>   MOVE.w (A7)+,D1
0002C9E0 <AmiBlitz3.ab3@14970>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002C9E4 <AmiBlitz3.ab3@14971> BRA.w writeword
0002C9E8 <AmiBlitz3.ab3@14977>   MOVE.w #$9040,D1
0002C9EC <AmiBlitz3.ab3@14978> BRA.w doplus2
0002C9F0 <AmiBlitz3.ab3@14982>   MOVE.w #$9040,D1
0002C9F4 <AmiBlitz3.ab3@14983> BRA.w doplus2
0002C9F8 <AmiBlitz3.ab3@14987>   MOVE.w #$9080,D1
0002C9FC <AmiBlitz3.ab3@14988> BRA.w doplus2
0002CA02 <AmiBlitz3.ab3@14992>    TST.b iee
0002CA06 <AmiBlitz3.ab3@14993>     BNE do_minus_float__fs1
0002CA0A <AmiBlitz3.ab3@14994>   MOVE.w #$FFB8,D1                                         ;floatsub
0002CA0E <AmiBlitz3.ab3@14995> BRA.w doflib
0002CA10 <AmiBlitz3.ab3@14998>   MOVEQ #0,d0
0002CA16 <AmiBlitz3.ab3@14999>   MOVE.w regnum,d0
0002CA18 <AmiBlitz3.ab3@15000>   ADDQ #1,d0
0002CA1A <AmiBlitz3.ab3@15001>   ASL.w #8,d0
0002CA1C <AmiBlitz3.ab3@15002>   ASL.w #2,d0
0002CA22 <AmiBlitz3.ab3@15003>   MOVE.l #$f2000028,d1
0002CA24 <AmiBlitz3.ab3@15004>   OR.l d0,d1
0002CA2A <AmiBlitz3.ab3@15005>   MOVE.w regnum,d0
0002CA2C <AmiBlitz3.ab3@15006>   ASL.w #7,d0
0002CA2E <AmiBlitz3.ab3@15007>   OR.l d0,d1
0002CA32 <AmiBlitz3.ab3@15008> BRA.w writelong
0002CA36 <AmiBlitz3.ab3@15014>   MOVE.w #$C1C0,D1
0002CA38 <AmiBlitz3.ab3@15015>   MOVEQ.l #$02,D2                                          ;now a word
0002CA3C <AmiBlitz3.ab3@15016> BRA.w doplus2
0002CA40 <AmiBlitz3.ab3@15020>   MOVE.w #$C1C0,D1
0002CA42 <AmiBlitz3.ab3@15021>   MOVEQ.l #$03,D2                                          ;now a long.
0002CA46 <AmiBlitz3.ab3@15022> BRA.w doplus2
0002CA4A <AmiBlitz3.ab3@15026>   MOVE.w #$CA00,D1                                         ;quickmul
0002CA4E <AmiBlitz3.ab3@15027> BRA.w domylib
0002CA54 <AmiBlitz3.ab3@15031>   TST.b fast
0002CA58 <AmiBlitz3.ab3@15032>   BNE.s 'l10
0002CA5C <AmiBlitz3.ab3@15033>   MOVE.w #$CA01,D1                                         ;writelongmul
0002CA60 <AmiBlitz3.ab3@15034> BRA.w domylib
0002CA66 <AmiBlitz3.ab3@15043>    MOVE.l destpointer,a0
0002CA6C <AmiBlitz3.ab3@15044>    SUB.l imm_addr,a0
0002CA70 <AmiBlitz3.ab3@15045>    CMP.w #6,a0
0002CA74 <AmiBlitz3.ab3@15046>    BNE 'li1
0002CA76 <AmiBlitz3.ab3@15047>    MOVEQ.l #2,d1
0002CA78 <AmiBlitz3.ab3@15048>    MOVEQ #1,d3
0002CA7C <AmiBlitz3.ab3@15051>   CMP.l -4(a4),d1
0002CA80 <AmiBlitz3.ab3@15052>    BEQ 'oklsl
0002CA82 <AmiBlitz3.ab3@15053>     LSL.l #1,d1
0002CA88 <AmiBlitz3.ab3@15054>     ADD.l #1,d3
0002CA8E <AmiBlitz3.ab3@15055>     CMP.l #9,d3
0002CA92 <AmiBlitz3.ab3@15056>     BNE 'ag
0002CA96 <AmiBlitz3.ab3@15057>    MOVE.w -2(a4),d1
0002CA9A <AmiBlitz3.ab3@15058>    BSR writeword
0002CAA0 <AmiBlitz3.ab3@15059>    MOVE.w -6(a4),-4(a4)
0002CAA8 <AmiBlitz3.ab3@15060>    MOVE.l #$4c3c0800,-8(a4)
0002CAAE <AmiBlitz3.ab3@15061>    MOVE.w regnum,D3
0002CAB2 <AmiBlitz3.ab3@15062>    MULS #$1000,D3
0002CAB6 <AmiBlitz3.ab3@15063>    OR.w D3,-6(a4)
0002CABC <AmiBlitz3.ab3@15064>    CLR.l load_var_addr
0002CAC2 <AmiBlitz3.ab3@15065>    CLR.l imm_addr
0002CAC6 <AmiBlitz3.ab3@15066> BRA 'li3
0002CACA <AmiBlitz3.ab3@15069>    CMP.w #8,d3
0002CACE <AmiBlitz3.ab3@15070>    BEQ 'ok
0002CAD0 <AmiBlitz3.ab3@15071>    ASL.l #1,d3
0002CAD2 <AmiBlitz3.ab3@15072>    ASL.l #8,d3
0002CAD6 <AmiBlitz3.ab3@15073>    MOVE.w #$e188,d1
0002CAD8 <AmiBlitz3.ab3@15074>    OR.w d3,d1
0002CADC <AmiBlitz3.ab3@15075>    MOVE.w d1,-6(a4)
0002CAE0 <AmiBlitz3.ab3@15076> BRA 'okls
0002CAE6 <AmiBlitz3.ab3@15079>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CAEC <AmiBlitz3.ab3@15082>   MOVE.w regnum,d3
0002CAF0 <AmiBlitz3.ab3@15083>    OR.b d3,-5(a4)
0002CAF6 <AmiBlitz3.ab3@15084>    SUBQ.l #4,destpointer
0002CAFC <AmiBlitz3.ab3@15085>    CLR.l load_var_addr
0002CB02 <AmiBlitz3.ab3@15086>    CLR.l imm_addr
0002CB06 <AmiBlitz3.ab3@15087> BRA 'li3
0002CB0C <AmiBlitz3.ab3@15090>    MOVE.l destpointer,a0
0002CB12 <AmiBlitz3.ab3@15091>    SUB.l load_var_addr,a0
0002CB16 <AmiBlitz3.ab3@15092>    CMP.w #4,a0
0002CB1A <AmiBlitz3.ab3@15093>    BNE 'li2
0002CB1E <AmiBlitz3.ab3@15094>    MOVE.w -2(a4),d1
0002CB22 <AmiBlitz3.ab3@15095>    BSR writeword
0002CB28 <AmiBlitz3.ab3@15096>    MOVE.b #$4c,-6(a4)
0002CB2E <AmiBlitz3.ab3@15097>    MOVE.w #$0800,-4(a4)
0002CB34 <AmiBlitz3.ab3@15098>    MOVE.w regnum,D3
0002CB38 <AmiBlitz3.ab3@15099>    MULS #$1000,d3
0002CB3C <AmiBlitz3.ab3@15100>    OR.w D3,-4(a4)
0002CB40 <AmiBlitz3.ab3@15101> BRA 'li3
0002CB46 <AmiBlitz3.ab3@15104>    MOVE.l #$4c010800,d1
0002CB4C <AmiBlitz3.ab3@15105>    MOVE.w regnum,D3
0002CB4E <AmiBlitz3.ab3@15106>    EXT.l d3
0002CB52 <AmiBlitz3.ab3@15107>    MULS #$1000,d3
0002CB54 <AmiBlitz3.ab3@15108>    OR.w D3,d1
0002CB58 <AmiBlitz3.ab3@15109>    MULS #$10,d3
0002CB5A <AmiBlitz3.ab3@15110>    ADD.l d3,d1
0002CB5E <AmiBlitz3.ab3@15111>    BSR writelong
0002CB60 <AmiBlitz3.ab3@15116> RTS
0002CB62 <AmiBlitz3.ab3@15120>   MOVE.w D1,-(A7)
0002CB66 <AmiBlitz3.ab3@15121>    BSR.w JL_0_AD40
0002CB68 <AmiBlitz3.ab3@15122>   MOVE.l D4,D1
0002CB6C <AmiBlitz3.ab3@15123>    BSR.w JL_0_AD38
0002CB70 <AmiBlitz3.ab3@15124>    BSR.w JL_0_A352
0002CB72 <AmiBlitz3.ab3@15125>   MOVEQ #0,d1
0002CB74 <AmiBlitz3.ab3@15126>   MOVE.w (A7)+,D1
0002CB7A <AmiBlitz3.ab3@15127>   MOVE.l d1,lastinstruction
0002CB7E <AmiBlitz3.ab3@15128>    BSR.w Atokejsr
0002CB82 <AmiBlitz3.ab3@15129>    BSR.w JL_0_A36E
0002CB84 <AmiBlitz3.ab3@15130>   MOVE.l D5,D1
0002CB88 <AmiBlitz3.ab3@15131> BRA.w JL_0_AD38
0002CB8E <AmiBlitz3.ab3@15135>    TST.b iee
0002CB92 <AmiBlitz3.ab3@15136>     BNE fm1
0002CB96 <AmiBlitz3.ab3@15137>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CB9A <AmiBlitz3.ab3@15138> BRA.w doflib
0002CB9C <AmiBlitz3.ab3@15141>   MOVEQ #0,d0
0002CBA2 <AmiBlitz3.ab3@15142>  MOVE.w regnum,d0
0002CBA4 <AmiBlitz3.ab3@15143>  ADDQ #1,d0
0002CBA6 <AmiBlitz3.ab3@15144>  ASL.w #8,d0
0002CBA8 <AmiBlitz3.ab3@15145>  ASL.w #2,d0
0002CBAE <AmiBlitz3.ab3@15146>  MOVE.l #$f2000023,d1
0002CBB0 <AmiBlitz3.ab3@15147>  OR.l d0,d1
0002CBB6 <AmiBlitz3.ab3@15148>  MOVE.w regnum,d0
0002CBB8 <AmiBlitz3.ab3@15149>  ASL.w #7,d0
0002CBBA <AmiBlitz3.ab3@15150>  OR.l d0,d1
0002CBBE <AmiBlitz3.ab3@15151> BRA.w writelong
0002CBC0 <AmiBlitz3.ab3@15155>   MOVE.w D2,-(A7)                                          ;dopow
0002CBC2 <AmiBlitz3.ab3@15156>   MOVE.w D2,D3
0002CBC4 <AmiBlitz3.ab3@15157>   MOVEQ.l #$05,D2
0002CBC8 <AmiBlitz3.ab3@15158>    BSR.w JL_0_9770
0002CBCE <AmiBlitz3.ab3@15159>   ADDQ.w #1,regnum
0002CBD0 <AmiBlitz3.ab3@15160>   MOVE.w (A7)+,D3
0002CBD2 <AmiBlitz3.ab3@15161>   MOVEQ.l #$05,D2
0002CBD6 <AmiBlitz3.ab3@15162>    BSR.w writeconvertcode
0002CBDC <AmiBlitz3.ab3@15163>   SUBQ.w #1,regnum
0002CBE0 <AmiBlitz3.ab3@15164>    BSR.w nocando
0002CBE6 <AmiBlitz3.ab3@15165>    TST.b fpu
0002CBEA <AmiBlitz3.ab3@15166>    BEQ 'old
0002CBEC <AmiBlitz3.ab3@15167>    MOVEQ #0,d1
0002CBF2 <AmiBlitz3.ab3@15168>    MOVE.w regnum,d1
0002CBF4 <AmiBlitz3.ab3@15169>   MOVE.l d1,d0
0002CBF6 <AmiBlitz3.ab3@15170>   ASL.w #7,d1
0002CBF8 <AmiBlitz3.ab3@15171>   ASL.w #8,d0
0002CBFA <AmiBlitz3.ab3@15172>   ASL.w #2,d0
0002CBFC <AmiBlitz3.ab3@15173>   OR.w d0,d1
0002CBFE <AmiBlitz3.ab3@15174>   MOVE.l d1,-(a7)
0002CC04 <AmiBlitz3.ab3@15176>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002CC08 <AmiBlitz3.ab3@15177>    BSR writelong
0002CC0E <AmiBlitz3.ab3@15178>    MOVE.w regnum,d0
0002CC10 <AmiBlitz3.ab3@15179>  ADDQ #1,d0
0002CC12 <AmiBlitz3.ab3@15180>  ASL.w #8,d0
0002CC14 <AmiBlitz3.ab3@15181>  ASL.w #2,d0
0002CC1A <AmiBlitz3.ab3@15182>  MOVE.l #$f2000023,d1
0002CC1C <AmiBlitz3.ab3@15183>  OR.l d0,d1
0002CC22 <AmiBlitz3.ab3@15184>  MOVE.w regnum,d0
0002CC24 <AmiBlitz3.ab3@15185>  ASL.w #7,d0
0002CC26 <AmiBlitz3.ab3@15186>  OR.l d0,d1
0002CC2C <AmiBlitz3.ab3@15187>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002CC30 <AmiBlitz3.ab3@15188>    BSR writelong
0002CC32 <AmiBlitz3.ab3@15189>    MOVE.l (a7)+,d1
0002CC38 <AmiBlitz3.ab3@15191>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002CC3C <AmiBlitz3.ab3@15192>    BSR writelong
0002CC3E <AmiBlitz3.ab3@15193> RTS
0002CC42 <AmiBlitz3.ab3@15196>   MOVE.w #$6001,D1
0002CC46 <AmiBlitz3.ab3@15197> BRA.w domylib
0002CC4A <AmiBlitz3.ab3@15203>   MOVEA.l forthsp(PC),A0
0002CC4E <AmiBlitz3.ab3@15204>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002CC50 <AmiBlitz3.ab3@15205> RTS
0002CC54 <AmiBlitz3.ab3@15211>   MOVE.w #$D400,D1
0002CC58 <AmiBlitz3.ab3@15212> BRA.w domylib
0002CC5C <AmiBlitz3.ab3@15216>   MOVE.w #$D401,D1
0002CC60 <AmiBlitz3.ab3@15217> BRA.w domylib
0002CC64 <AmiBlitz3.ab3@15221>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002CC68 <AmiBlitz3.ab3@15222>   MOVE.w #$D402,D1
0002CC6C <AmiBlitz3.ab3@15223> BRA.w domylib
0002CC70 <AmiBlitz3.ab3@15227>   MOVE.w #$D403,D1
0002CC72 <AmiBlitz3.ab3@15228>   MOVEQ.l #$02,D2                                          ;now a word.
0002CC76 <AmiBlitz3.ab3@15229> BRA.w domylib
0002CC7A <AmiBlitz3.ab3@15233>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002CC80 <AmiBlitz3.ab3@15234>   TST.b fpu
0002CC84 <AmiBlitz3.ab3@15235>   BEQ 'old
0002CC86 <AmiBlitz3.ab3@15236>   MOVEQ #0,d1
0002CC8C <AmiBlitz3.ab3@15237>   MOVE.w regnum,d1                                         ;fpu mod
0002CC8E <AmiBlitz3.ab3@15238>   MOVE.l d1,d0
0002CC90 <AmiBlitz3.ab3@15239>   ADDQ.l #1,d1
0002CC92 <AmiBlitz3.ab3@15240>   ASL.l #7,d0
0002CC94 <AmiBlitz3.ab3@15241>   ASL.l #8,d1
0002CC96 <AmiBlitz3.ab3@15242>   ASL.l #2,d1
0002CC98 <AmiBlitz3.ab3@15243>   OR.l d0,d1
0002CC9A <AmiBlitz3.ab3@15244>   MOVE.l d0,-(a7)
0002CCA0 <AmiBlitz3.ab3@15245>   OR.l #$f2000021,d1
0002CCA4 <AmiBlitz3.ab3@15246>   BSR writelong
0002CCA6 <AmiBlitz3.ab3@15247>   MOVE.l (a7)+,d0
0002CCA8 <AmiBlitz3.ab3@15248>  RTS
0002CCAC <AmiBlitz3.ab3@15251>   MOVE.w #$D404,D1
0002CCAE <AmiBlitz3.ab3@15252>   MOVEQ.l #$03,D2                                          ;now a long
0002CCB2 <AmiBlitz3.ab3@15253> BRA.w domylib
0002CCB6 <AmiBlitz3.ab3@15261>   MOVE.w #$48C0,D1
0002CCBC <AmiBlitz3.ab3@15262>   OR.w regnum,D1
0002CCC0 <AmiBlitz3.ab3@15263>    BSR.w writeword
0002CCC2 <AmiBlitz3.ab3@15264>   ADDQ.w #1,D1
0002CCC6 <AmiBlitz3.ab3@15265>    BSR.w writeword
0002CCCA <AmiBlitz3.ab3@15268>    MOVE.w #$48C0,D1
0002CCD0 <AmiBlitz3.ab3@15269>   OR.w regnum,D1
0002CCD4 <AmiBlitz3.ab3@15270>    BSR.w writeword
0002CCD8 <AmiBlitz3.ab3@15271>   MOVE.w #$81C0,D1
0002CCDC <AmiBlitz3.ab3@15272> BRA.w doplus2
0002CCE2 <AmiBlitz3.ab3@15276>   TST.b fast
0002CCE6 <AmiBlitz3.ab3@15277>   BNE.s 'l10
0002CCEA <AmiBlitz3.ab3@15278>   MOVE.w #$CB01,D1
0002CCEE <AmiBlitz3.ab3@15279> BRA.w domylib
0002CCF2 <AmiBlitz3.ab3@15285>   BSR.w JL_0_AD40
0002CCF4 <AmiBlitz3.ab3@15286>   MOVE.l D4,D1
0002CCF8 <AmiBlitz3.ab3@15287>    BSR.w JL_0_AD38
0002CCFC <AmiBlitz3.ab3@15288>    BSR.w JL_0_A352
0002CD02 <AmiBlitz3.ab3@15302>    MOVE.l #$4c410800,d1
0002CD06 <AmiBlitz3.ab3@15303>    BSR writelong
0002CD0A <AmiBlitz3.ab3@15306>   MOVE.w #$4e71,d1
0002CD0E <AmiBlitz3.ab3@15308>    BSR.w JL_0_A36E
0002CD10 <AmiBlitz3.ab3@15309>   MOVE.l D5,D1
0002CD14 <AmiBlitz3.ab3@15310> BRA.w JL_0_AD38
0002CD18 <AmiBlitz3.ab3@15313>     CMP.w #8,d3
0002CD1C <AmiBlitz3.ab3@15314>     BEQ 'ok
0002CD1E <AmiBlitz3.ab3@15315>     ASL.l #1,d3
0002CD20 <AmiBlitz3.ab3@15316>     ASL.l #8,d3
0002CD24 <AmiBlitz3.ab3@15317>     MOVE.w #$e080,d1
0002CD26 <AmiBlitz3.ab3@15318>     OR.w d3,d1
0002CD2A <AmiBlitz3.ab3@15319> BRA 'oklsr2
0002CD2E <AmiBlitz3.ab3@15322>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002CD34 <AmiBlitz3.ab3@15325>      SUBQ.l #6,destpointer
0002CD38 <AmiBlitz3.ab3@15326>      BSR writeword
0002CD3A <AmiBlitz3.ab3@15327>      MOVE.l (a7)+,d3
0002CD3C <AmiBlitz3.ab3@15328>      MOVEQ #0,d1
0002CD42 <AmiBlitz3.ab3@15329>      CLR.l load_var_addr
0002CD48 <AmiBlitz3.ab3@15330>      CLR.l imm_addr
0002CD4C <AmiBlitz3.ab3@15331> BRA JL_0_AD38
0002CD50 <AmiBlitz3.ab3@15335>   MOVE.w #$CB00,D1                                         ;quickdiv
0002CD54 <AmiBlitz3.ab3@15336> BRA.w domylib
0002CD5A <AmiBlitz3.ab3@15340>    TST.b iee
0002CD5E <AmiBlitz3.ab3@15341>    BNE fdiv1
0002CD62 <AmiBlitz3.ab3@15342>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002CD66 <AmiBlitz3.ab3@15343> BRA.w doflib
0002CD68 <AmiBlitz3.ab3@15347>   MOVEQ #0,d0
0002CD6E <AmiBlitz3.ab3@15348>   MOVE.w regnum,d0
0002CD70 <AmiBlitz3.ab3@15349>   ADDQ #1,d0
0002CD72 <AmiBlitz3.ab3@15350>   ASL.w #8,d0
0002CD74 <AmiBlitz3.ab3@15351>   ASL.w #2,d0
0002CD7A <AmiBlitz3.ab3@15352>   MOVE.l #$f2000020,d1                                     ;fpu div
0002CD7C <AmiBlitz3.ab3@15353>   OR.l d0,d1
0002CD82 <AmiBlitz3.ab3@15354>   MOVE.w regnum,d0
0002CD84 <AmiBlitz3.ab3@15355>   ASL.w #7,d0
0002CD86 <AmiBlitz3.ab3@15356>   OR.l d0,d1
0002CD8A <AmiBlitz3.ab3@15357> BRA.w writelong
0002CD8E <AmiBlitz3.ab3@15361>   MOVE.w #$C000,D1
0002CD92 <AmiBlitz3.ab3@15362> BRA.w doplus2
0002CD96 <AmiBlitz3.ab3@15366>   MOVE.w #$C040,D1
0002CD9A <AmiBlitz3.ab3@15367> BRA.w doplus2
0002CD9E <AmiBlitz3.ab3@15371>   MOVE.w #$C080,D1
0002CDA2 <AmiBlitz3.ab3@15372> BRA.w doplus2
0002CDA6 <AmiBlitz3.ab3@15376>   MOVE.w #$8000,D1
0002CDAA <AmiBlitz3.ab3@15377> BRA.w doplus2
0002CDAE <AmiBlitz3.ab3@15381>   MOVE.w #$8040,D1
0002CDB2 <AmiBlitz3.ab3@15382> BRA.w doplus2
0002CDB6 <AmiBlitz3.ab3@15386>   MOVE.w #$8080,D1
0002CDBA <AmiBlitz3.ab3@15387> BRA.w doplus2
0002CDBE <AmiBlitz3.ab3@15391>   MOVE.w #$B100,D1
0002CDC4 <AmiBlitz3.ab3@15394>    MOVE.w regnum,D3
0002CDC6 <AmiBlitz3.ab3@15395>   OR.w D3,D1
0002CDC8 <AmiBlitz3.ab3@15396>   ADDQ.w #1,D3
0002CDCA <AmiBlitz3.ab3@15397>   LSL.w #8,D3
0002CDCC <AmiBlitz3.ab3@15398>   LSL.w #1,D3
0002CDCE <AmiBlitz3.ab3@15399>   OR.w D3,D1
0002CDD2 <AmiBlitz3.ab3@15400> BRA.w writeword
0002CDD6 <AmiBlitz3.ab3@15404>   MOVE.w #$B140,D1
0002CDDA <AmiBlitz3.ab3@15405> BRA.w JL_0_A25C
0002CDDE <AmiBlitz3.ab3@15409>   MOVE.w #$B180,D1
0002CDE2 <AmiBlitz3.ab3@15410> BRA.w JL_0_A25C
0002CDE6 <AmiBlitz3.ab3@15414>   MOVE.w #$E1A8,D1
0002CDEA <AmiBlitz3.ab3@15415> BRA.w JL_0_A298
0002CDEE <AmiBlitz3.ab3@15419>   MOVE.w #$E0A8,D1
0002CDF2 <AmiBlitz3.ab3@15420> BRA.w JL_0_A298
0002CDF6 <AmiBlitz3.ab3@15424>   MOVE.w #$E0A0,D1
0002CDFA <AmiBlitz3.ab3@15425> BRA.w JL_0_A298
0002CDFC <AmiBlitz3.ab3@15429>   MOVE.w D1,-(A7)
0002CE02 <AmiBlitz3.ab3@15430>   ADDQ.w #1,regnum
0002CE04 <AmiBlitz3.ab3@15431>   MOVE.w D2,-(A7)
0002CE06 <AmiBlitz3.ab3@15432>   MOVE.w D2,D3
0002CE08 <AmiBlitz3.ab3@15433>   MOVEQ.l #$02,D2
0002CE0C <AmiBlitz3.ab3@15438>    BSR.w writeconvertcode
0002CE0E <AmiBlitz3.ab3@15440>   MOVE.w (A7)+,D2
0002CE14 <AmiBlitz3.ab3@15441>   SUBQ.w #1,regnum
0002CE18 <AmiBlitz3.ab3@15442>   CMP.w #$4,D2
0002CE1C <AmiBlitz3.ab3@15443>    BEQ.w JL_0_A2C2
0002CE1E <AmiBlitz3.ab3@15444>   MOVE.w D2,D3
0002CE20 <AmiBlitz3.ab3@15445>   MOVEQ.l #$03,D2
0002CE24 <AmiBlitz3.ab3@15446>    BSR.w JL_0_9770
0002CE26 <AmiBlitz3.ab3@15449>    MOVE.w (A7)+,D1
0002CE2C <AmiBlitz3.ab3@15450>   MOVE.w regnum,D3
0002CE2E <AmiBlitz3.ab3@15451>   OR.w D3,D1
0002CE30 <AmiBlitz3.ab3@15452>   ADDQ.w #1,D3
0002CE32 <AmiBlitz3.ab3@15453>   LSL.w #8,D3
0002CE34 <AmiBlitz3.ab3@15454>   LSL.w #1,D3
0002CE36 <AmiBlitz3.ab3@15455>   OR.w D3,D1
0002CE3A <AmiBlitz3.ab3@15456> BRA.w writeword
0002CE3E <AmiBlitz3.ab3@15460>   MOVE.w #$0100,D1
0002CE42 <AmiBlitz3.ab3@15461>    BSR.w JL_0_A31C
0002CE48 <AmiBlitz3.ab3@15462>   MOVE.w regnum,D1
0002CE4C <AmiBlitz3.ab3@15463>   ORI.w #$56C0,D1
0002CE50 <AmiBlitz3.ab3@15464>    BSR.w writeword
0002CE56 <AmiBlitz3.ab3@15465>   MOVE.w regnum,D1
0002CE5A <AmiBlitz3.ab3@15466>   ORI.w #$4880,D1
0002CE5E <AmiBlitz3.ab3@15467>    BSR.w writeword
0002CE60 <AmiBlitz3.ab3@15468>   MOVEQ.l #$02,D2
0002CE62 <AmiBlitz3.ab3@15469> RTS
0002CE66 <AmiBlitz3.ab3@15473>   MOVE.w #$01C0,D1
0002CE6A <AmiBlitz3.ab3@15476>    BSR.w JL_0_A31C
0002CE6C <AmiBlitz3.ab3@15477>   MOVEQ.l #$03,D2
0002CE6E <AmiBlitz3.ab3@15478> RTS
0002CE72 <AmiBlitz3.ab3@15482>   MOVE.w #$0180,D1
0002CE76 <AmiBlitz3.ab3@15483> BRA.w JL_0_A304
0002CE7A <AmiBlitz3.ab3@15487>   MOVE.w #$0140,D1
0002CE7E <AmiBlitz3.ab3@15488> BRA.w JL_0_A304
0002CE80 <AmiBlitz3.ab3@15492>   MOVE.w D1,-(A7)
0002CE82 <AmiBlitz3.ab3@15493>   MOVE.w D2,-(A7)
0002CE84 <AmiBlitz3.ab3@15494>   MOVE.w D2,D3
0002CE86 <AmiBlitz3.ab3@15495>   MOVEQ.l #$03,D2
0002CE8A <AmiBlitz3.ab3@15496>    BSR.w JL_0_9770
0002CE8C <AmiBlitz3.ab3@15497>   MOVE.w (A7)+,D3
0002CE8E <AmiBlitz3.ab3@15498>   MOVEQ.l #$01,D2
0002CE94 <AmiBlitz3.ab3@15499>   ADDQ.w #1,regnum
0002CE98 <AmiBlitz3.ab3@15500>    BSR.w writeconvertcode
0002CE9E <AmiBlitz3.ab3@15501>   SUBQ.w #1,regnum
0002CEA4 <AmiBlitz3.ab3@15502>   MOVE.w regnum,D1
0002CEA6 <AmiBlitz3.ab3@15503>   MOVE.w D1,D2
0002CEA8 <AmiBlitz3.ab3@15504>   ADDQ.w #1,D2
0002CEAA <AmiBlitz3.ab3@15505>   LSL.w #8,D2
0002CEAC <AmiBlitz3.ab3@15506>   LSL.w #1,D2
0002CEAE <AmiBlitz3.ab3@15507>   OR.w (A7)+,D1
0002CEB0 <AmiBlitz3.ab3@15508>   OR.w D2,D1
0002CEB4 <AmiBlitz3.ab3@15509> BRA.w writeword
0002CEBA <AmiBlitz3.ab3@15513>   MOVE.w regnum,D1
0002CEBE <AmiBlitz3.ab3@15514>    BEQ.w JL_0_A36C
0002CEC2 <AmiBlitz3.ab3@15515>   ORI.w #$2000,D1
0002CEC6 <AmiBlitz3.ab3@15516>    BSR.w writeword
0002CECA <AmiBlitz3.ab3@15517>   ADDI.w #$201,D1
0002CECE <AmiBlitz3.ab3@15518>    BSR.w writeword
0002CED0 <AmiBlitz3.ab3@15521> RTS
0002CED6 <AmiBlitz3.ab3@15525>   MOVE.w regnum,D1
0002CEDA <AmiBlitz3.ab3@15526>    BEQ.w JL_0_A384
0002CEDC <AmiBlitz3.ab3@15527>   LSL.w #8,D1
0002CEDE <AmiBlitz3.ab3@15528>   LSL.w #1,D1
0002CEE2 <AmiBlitz3.ab3@15529>   ORI.w #$2000,D1
0002CEE6 <AmiBlitz3.ab3@15530>    BSR.w writeword
0002CEE8 <AmiBlitz3.ab3@15533> RTS
0002CEEE <AmiBlitz3.ab3@15537>    CLR.b isconstantvalue
0002CEF4 <AmiBlitz3.ab3@15538>    CLR.l lastconstantvalue
0002CEFC <AmiBlitz3.ab3@15539>    CMPI.w #$7,regnum
0002CF00 <AmiBlitz3.ab3@15540>    BCS.w JL_0_A6B4
0002CF06 <AmiBlitz3.ab3@15541>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002CF0A <AmiBlitz3.ab3@15542>   BSR writelong
0002CF0E <AmiBlitz3.ab3@15543>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002CF12 <AmiBlitz3.ab3@15545>   CMP.w #$3,D2
0002CF16 <AmiBlitz3.ab3@15546>    BCS.w JL_0_A3A2
0002CF1A <AmiBlitz3.ab3@15547>   MOVE.w #$2F06,D1
0002CF1E <AmiBlitz3.ab3@15550>   BSR.w writeword
0002CF20 <AmiBlitz3.ab3@15551>   MOVE.w D1,-(A7)
0002CF26 <AmiBlitz3.ab3@15552>   SUBQ.w #1,regnum
0002CF2A <AmiBlitz3.ab3@15553>    BSR.w JL_0_A6B4
0002CF30 <AmiBlitz3.ab3@15554>   ADDQ.w #1,regnum
0002CF36 <AmiBlitz3.ab3@15555>   MOVE.l #$f2001b80,d1
0002CF3A <AmiBlitz3.ab3@15556>   BSR writelong
0002CF3E <AmiBlitz3.ab3@15557>   MOVE.w #$3E06,D1
0002CF42 <AmiBlitz3.ab3@15558>   CMP.w #$3,D2
0002CF46 <AmiBlitz3.ab3@15559>    BCS.w JL_0_A3C8
0002CF4A <AmiBlitz3.ab3@15560>   MOVE.w #$2E06,D1
0002CF4E <AmiBlitz3.ab3@15563>   BSR.w writeword
0002CF50 <AmiBlitz3.ab3@15564>   MOVE.w (A7)+,D1
0002CF54 <AmiBlitz3.ab3@15565>   ANDI.w #$F000,D1
0002CF58 <AmiBlitz3.ab3@15566>   ORI.w #$C1F,D1
0002CF5E <AmiBlitz3.ab3@15567>   JSR writeword
0002CF64 <AmiBlitz3.ab3@15568>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002CF68 <AmiBlitz3.ab3@15569> BRA writelong
0002CF6C <AmiBlitz3.ab3@15573>   BSR.w JL_0_A6B4
0002CF70 <AmiBlitz3.ab3@15574>   MOVE.w #$4440,D1
0002CF74 <AmiBlitz3.ab3@15575>   CMP.w #$3,D2
0002CF78 <AmiBlitz3.ab3@15576>    BCS.w JL_0_A406
0002CF7C <AmiBlitz3.ab3@15577>   MOVE.w #$4480,D1
0002CF80 <AmiBlitz3.ab3@15578>   CMP.w #$5,D2
0002CF84 <AmiBlitz3.ab3@15579>    BCS.w JL_0_A406
0002CF88 <AmiBlitz3.ab3@15580>   CMP.w #$6,D2
0002CF8C <AmiBlitz3.ab3@15581>    BCC.w illoperr
0002CF90 <AmiBlitz3.ab3@15582>   MOVE.w #$FFC4,D1
0002CF94 <AmiBlitz3.ab3@15583> BRA.w JL_0_9604
0002CF9A <AmiBlitz3.ab3@15586>   OR.w regnum,D1                                           ;negate
0002CFA0 <AmiBlitz3.ab3@15587>   CLR.l imm_addr
0002CFA4 <AmiBlitz3.ab3@15588> BRA.w writeword
0002CFA8 <AmiBlitz3.ab3@15592>    BSR.w eval4
0002CFAC <AmiBlitz3.ab3@15593>   CMP.w #")",D0
0002CFB0 <AmiBlitz3.ab3@15594>    BEQ.w JL_0_A424
0002CFB4 <AmiBlitz3.ab3@15595>   CMP.w #"}",D0
0002CFB8 <AmiBlitz3.ab3@15596>    BNE.w brackets_                                         ;syntax error brackets
0002CFBC <AmiBlitz3.ab3@15599> BRA.w get1bytemain
0002CFC0 <AmiBlitz3.ab3@15603>    BSR.w eval4
0002CFC4 <AmiBlitz3.ab3@15604>   CMP.w #$5,D2
0002CFC8 <AmiBlitz3.ab3@15605>    BCC.w illoperr
0002CFCE <AmiBlitz3.ab3@15606>   MOVE.w regnum,D1
0002CFD2 <AmiBlitz3.ab3@15607>   ORI.w #$4640,D1
0002CFD6 <AmiBlitz3.ab3@15608>   CMP.w #$3,D2
0002CFDA <AmiBlitz3.ab3@15609>    BCS.w writeword
0002CFDE <AmiBlitz3.ab3@15610>   EORI.w #$C0,D1
0002CFE2 <AmiBlitz3.ab3@15611> BRA.w writeword
0002CFE4 <AmiBlitz3.ab3@15615>   MOVEQ.l #$05,D2                                          ;fpu pi
0002CFEA <AmiBlitz3.ab3@15616>    TST.b fpu
0002CFEE <AmiBlitz3.ab3@15617>   BEQ 'old
0002CFF4 <AmiBlitz3.ab3@15618> JMP fpupi
0002CFFA <AmiBlitz3.ab3@15621>   MOVE.w regnum,D1
0002CFFC <AmiBlitz3.ab3@15622>   LSL.w #8,D1
0002CFFE <AmiBlitz3.ab3@15623>   LSL.w #1,D1
0002D002 <AmiBlitz3.ab3@15624>   ORI.w #$203C,D1
0002D006 <AmiBlitz3.ab3@15625>    BSR.w writeword
0002D00C <AmiBlitz3.ab3@15626>   MOVE.l #$C90FDA42,D1
0002D010 <AmiBlitz3.ab3@15627>    BSR.w writelong
0002D014 <AmiBlitz3.ab3@15628> BRA.w get1bytemain
0002D110 <AmiBlitz3.ab3@15636> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D20C <AmiBlitz3.ab3@15637>              Ds.l 63
0002D254 <AmiBlitz3.ab3@15638>              Ds.l 18
0002D258 <AmiBlitz3.ab3@15639> forthsp:     Dc.l forthstack
0002D284 <AmiBlitz3.ab3@15644>    !fget
0002D288 <AmiBlitz3.ab3@15645>    CMP.b #$7e,d0
0002D28C <AmiBlitz3.ab3@15646>    BNE 'noc
0002D28E <AmiBlitz3.ab3@15647>    SUBQ.l #1,a5
0002D292 <AmiBlitz3.ab3@15648>    BSR get1bytemain
0002D296 <AmiBlitz3.ab3@15651>    CMP.b #"#",d0
0002D29A <AmiBlitz3.ab3@15652>    BNE 'ld1
0002D29E <AmiBlitz3.ab3@15653>    CMP.b #$22,(a5)
0002D2A2 <AmiBlitz3.ab3@15654>    BNE 'ld1
0002D2A8 <AmiBlitz3.ab3@15655>    JSR addimmi
0002D2AC <AmiBlitz3.ab3@15658>    CMP.b #$22,d0
0002D2B0 <AmiBlitz3.ab3@15659>    BNE 'l11
0002D2B6 <AmiBlitz3.ab3@15669>    NOT.w instringon
0002D2B8 <AmiBlitz3.ab3@15672>    TST.b d0
0002D2BC <AmiBlitz3.ab3@15673>    BPL 'l10
0002D2BE <AmiBlitz3.ab3@15674>    LSL.w #8,d0
0002D2C0 <AmiBlitz3.ab3@15675>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002D2C6 <AmiBlitz3.ab3@15676>    MOVE.l d0,lasttoken
0002D2CC <AmiBlitz3.ab3@15677>    MOVE.w d0,lastchar
0002D2D4 <AmiBlitz3.ab3@15678>    CMP.w #5,regnum                      ; test if the types convertion is parameter >=7 of a function or statement call
0002D2D8 <AmiBlitz3.ab3@15679>    BLE 'l4                              ; no its not
0002D2DC <AmiBlitz3.ab3@15682>    CMP.w #$BC0E,d0                      ; test if the parameter is the Token for TRUE
0002D2E0 <AmiBlitz3.ab3@15683>    BEQ 'l4                              ; yes we can allow it because it is the name for the value -1
0002D2E4 <AmiBlitz3.ab3@15684>    CMP.w #$BC0F,d0                      ; test if the parameter is the Token for FALSE
0002D2E8 <AmiBlitz3.ab3@15685>    BEQ 'l4                              ; yes we can allow it because it is the name for the value 0
0002D2EE <AmiBlitz3.ab3@15688>    JMP error_convert_typespara7         ; yes the >=7 parameter is types convertion this is not supported => error
0002D2F4 <AmiBlitz3.ab3@15691>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D2F8 <AmiBlitz3.ab3@15694>   CMP.w #"(",D0
0002D2FC <AmiBlitz3.ab3@15695>    BEQ.w checkcast2
0002D300 <AmiBlitz3.ab3@15696> nocast CMP.w #"{",D0
0002D304 <AmiBlitz3.ab3@15697>    BEQ.w JL_0_A410
0002D308 <AmiBlitz3.ab3@15698>   CMP.w #$2D,D0
0002D30C <AmiBlitz3.ab3@15699>    BEQ.w JL_0_A3DA
0002D310 <AmiBlitz3.ab3@15700>   CMP.w #-$7F77,D0
0002D314 <AmiBlitz3.ab3@15701>    BEQ.w JL_0_A428
0002D318 <AmiBlitz3.ab3@15702>   MOVEA.l forthsp(PC),A1
0002D31E <AmiBlitz3.ab3@15703>   CMPA.l #forthsp,A1
0002D322 <AmiBlitz3.ab3@15704>    BCC.w conmemerr
0002D328 <AmiBlitz3.ab3@15705>   MOVE.l destpointer,(A1)+
0002D32E <AmiBlitz3.ab3@15706>   MOVE.l hunkoffsetbase,(A1)+
0002D334 <AmiBlitz3.ab3@15707>   MOVE.l lasta6,(A1)+
0002D33A <AmiBlitz3.ab3@15708>   MOVE.w lasta6,(A1)+
0002D33C <AmiBlitz3.ab3@15709>   CLR.w (A1)+
0002D33E <AmiBlitz3.ab3@15710>   CLR.w (A1)+
0002D344 <AmiBlitz3.ab3@15711>   MOVE.l A1,forthsp
0002D356 <AmiBlitz3.ab3@15713>    !compare2
0002D35A <AmiBlitz3.ab3@15714>    BEQ.w JL_0_B224
0002D35E <AmiBlitz3.ab3@15715>   CMP.w #".",D0
0002D362 <AmiBlitz3.ab3@15716>    BEQ.w JL_0_B21E
0002D366 <AmiBlitz3.ab3@15717>   CMP.w #"#",D0
0002D36A <AmiBlitz3.ab3@15718>    BEQ.w get_constant
0002D36E <AmiBlitz3.ab3@15719>   CMP.w #"$",D0
0002D372 <AmiBlitz3.ab3@15720>    BEQ.w get_hexconstant
0002D376 <AmiBlitz3.ab3@15721>   CMP.w #"%",D0
0002D37A <AmiBlitz3.ab3@15722>    BEQ.w JL_0_A8C0
0002D37E <AmiBlitz3.ab3@15723>   CMP.w #-$7FD1,D0
0002D382 <AmiBlitz3.ab3@15724>    BEQ.w _SizeOf
0002D386 <AmiBlitz3.ab3@15725>   CMP.w #-$7F46,D0
0002D38A <AmiBlitz3.ab3@15726>    BEQ.w JL_0_A44E
0002D38E <AmiBlitz3.ab3@15727>   CMP.w #-$7F3B,D0
0002D392 <AmiBlitz3.ab3@15728>    BEQ.w JL_0_A83C
0002D396 <AmiBlitz3.ab3@15729>   CMP.w #-$7F3A,D0
0002D39A <AmiBlitz3.ab3@15730>    BEQ.w JL_0_A846
0002D3A0 <AmiBlitz3.ab3@15731>   MOVE.w constmode,D1
0002D3A4 <AmiBlitz3.ab3@15732>    BEQ.w JL_0_A776
0002D3C6 <AmiBlitz3.ab3@15733>    !compare1                                               ;bsr.w tstalpha
0002D3CA <AmiBlitz3.ab3@15734>    BEQ.w JL_0_AF22
0002D3CE <AmiBlitz3.ab3@15735>   CMP.w #$5F,D0
0002D3D2 <AmiBlitz3.ab3@15736>    BEQ.w JL_0_AF22
0002D3D6 <AmiBlitz3.ab3@15737>   CMP.w #$22,D0
0002D3DA <AmiBlitz3.ab3@15738>    BEQ.w JL_0_AF00
0002D3DE <AmiBlitz3.ab3@15739> BRA.w syntaxerr
0002D3E4 <AmiBlitz3.ab3@15741> checkcast2 JMP checkcast
0002D3EA <AmiBlitz3.ab3@15744>   MOVE.w cfetchmode,D1
0002D3EE <AmiBlitz3.ab3@15745>   BEQ.w JL_0_A784
0002D3F2 <AmiBlitz3.ab3@15746> BRA.w badconerr
0002D3F8 <AmiBlitz3.ab3@15749> JMP syntaxerropt4
0002D3FA <AmiBlitz3.ab3@15753>   NOT.w -(A1)
0002D41C <AmiBlitz3.ab3@15754>   !compare1                                                ;bsr.w tstalpha
0002D420 <AmiBlitz3.ab3@15755>    BEQ.w JL_0_AF4C
0002D424 <AmiBlitz3.ab3@15756>   CMP.w #$2A,D0
0002D428 <AmiBlitz3.ab3@15757>    BEQ.w JL_0_AF4C
0002D42C <AmiBlitz3.ab3@15758>   CMP.w #$5C,D0
0002D430 <AmiBlitz3.ab3@15759>    BEQ.w JL_0_AF4C
0002D434 <AmiBlitz3.ab3@15760>   CMP.w #$22,D0
0002D438 <AmiBlitz3.ab3@15761>    BEQ.w JL_0_ADC0
0002D43C <AmiBlitz3.ab3@15762>   BTST #$F,D0
0002D440 <AmiBlitz3.ab3@15763>    BNE.w JL_0_AAF2
0002D444 <AmiBlitz3.ab3@15764>   CMP.w #"&",D0
0002D448 <AmiBlitz3.ab3@15765>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D44C <AmiBlitz3.ab3@15766>   CMP.w #"?",D0
0002D450 <AmiBlitz3.ab3@15767>    BEQ.w JL_0_AED4
0002D454 <AmiBlitz3.ab3@15770>   CMP.b #"@",d0
0002D458 <AmiBlitz3.ab3@15771>    BNE syntaxerr
0002D45E <AmiBlitz3.ab3@15772>   TST.b newsyntax
0002D462 <AmiBlitz3.ab3@15773>    BEQ JUMP_syntaxerropt4
0002D468 <AmiBlitz3.ab3@15774>   MOVE.w regnum,D1
0002D46A <AmiBlitz3.ab3@15775>   LSL.w #8,D1
0002D46C <AmiBlitz3.ab3@15776>   LSL.w #1,D1
0002D470 <AmiBlitz3.ab3@15777>   ORI.w #$203C,D1
0002D474 <AmiBlitz3.ab3@15778>   BSR.w writeword
0002D478 <AmiBlitz3.ab3@15779>   CMP.b #$22,(a5)
0002D47C <AmiBlitz3.ab3@15780>    BNE syntaxerr
0002D47E <AmiBlitz3.ab3@15781>   ADDQ #1,a5
0002D480 <AmiBlitz3.ab3@15782>   MOVEQ #0,d0
0002D484 <AmiBlitz3.ab3@15783>   CMP.b #1,d2
0002D488 <AmiBlitz3.ab3@15784>    BEQ 'l3b
0002D48C <AmiBlitz3.ab3@15785>   CMP.b #2,d2
0002D490 <AmiBlitz3.ab3@15786>    BEQ 'l2b
0002D494 <AmiBlitz3.ab3@15787>   CMP.b #4,d2
0002D498 <AmiBlitz3.ab3@15788>    BEQ error_convert_types
0002D49A <AmiBlitz3.ab3@15789>   MOVE.b (a5)+,d0
0002D49E <AmiBlitz3.ab3@15790>   BEQ syntaxerr
0002D4A2 <AmiBlitz3.ab3@15791>   CMP.b #$22,d0
0002D4A6 <AmiBlitz3.ab3@15792>   BNE 'l1
0002D4AA <AmiBlitz3.ab3@15793>     MOVE.b #0,d0
0002D4AE <AmiBlitz3.ab3@15794> BRA 'do
0002D4B0 <AmiBlitz3.ab3@15797>   ASL.l #8,d0
0002D4B2 <AmiBlitz3.ab3@15798>   MOVE.b (a5)+,d0
0002D4B6 <AmiBlitz3.ab3@15799>   BEQ syntaxerr
0002D4BA <AmiBlitz3.ab3@15800>   CMP.b #$22,d0
0002D4BE <AmiBlitz3.ab3@15801>   BNE 'l2
0002D4C2 <AmiBlitz3.ab3@15802>     MOVE.b #0,d0
0002D4C4 <AmiBlitz3.ab3@15803>     ASR.l #8,d0
0002D4C8 <AmiBlitz3.ab3@15804> BRA 'do
0002D4CA <AmiBlitz3.ab3@15807>   ASL.l #8,d0
0002D4CC <AmiBlitz3.ab3@15810>   MOVE.b (a5)+,d0
0002D4D0 <AmiBlitz3.ab3@15811>    BEQ syntaxerr
0002D4D4 <AmiBlitz3.ab3@15812>    CMP.b #$22,d0
0002D4D8 <AmiBlitz3.ab3@15813>    BNE 'l3
0002D4DC <AmiBlitz3.ab3@15814>    MOVE.b #0,d0
0002D4DE <AmiBlitz3.ab3@15815>    ASR.l #8,d0
0002D4E2 <AmiBlitz3.ab3@15816> BRA 'do
0002D4E4 <AmiBlitz3.ab3@15819>   ASL.l #8,d0
0002D4E6 <AmiBlitz3.ab3@15822>   MOVE.b (a5)+,d0
0002D4EA <AmiBlitz3.ab3@15823>    BEQ syntaxerr
0002D4EE <AmiBlitz3.ab3@15824>    CMP.b #$22,d0
0002D4F2 <AmiBlitz3.ab3@15825>    BNE 'l4
0002D4F6 <AmiBlitz3.ab3@15826>    MOVE.b #0,d0
0002D4F8 <AmiBlitz3.ab3@15827>    ASR.l #8,d0
0002D4FC <AmiBlitz3.ab3@15828> BRA 'do
0002D500 <AmiBlitz3.ab3@15831>    CMP.b #$22,(a5)+
0002D504 <AmiBlitz3.ab3@15832>    BNE JUMP_error4char
0002D506 <AmiBlitz3.ab3@15835>   MOVE.l d0,d1
0002D50A <AmiBlitz3.ab3@15836>     BSR writelong
0002D50E <AmiBlitz3.ab3@15837>     BSR get1bytemain
0002D510 <AmiBlitz3.ab3@15838> RTS
0002D514 <AmiBlitz3.ab3@15842>   BSR.w get1bytemain
0002D518 <AmiBlitz3.ab3@15843>   CMP.w #$2E,D0
0002D51C <AmiBlitz3.ab3@15844>    BEQ.b JL_0_A7F4
0002D526 <AmiBlitz3.ab3@15846>   MOVE.w oldqflag,instringon
0002D52C <AmiBlitz3.ab3@15847>   MOVEA.l lastsourcepos,A5
0002D52E <AmiBlitz3.ab3@15848>   MOVE.w D2,-(A7)
0002D532 <AmiBlitz3.ab3@15849>    BSR.w getparameter2
0002D536 <AmiBlitz3.ab3@15850>    BEQ.w syntaxerr
0002D53C <AmiBlitz3.ab3@15851>   LEA varbase,A2
0002D540 <AmiBlitz3.ab3@15852>    BSR.w findvariable
0002D544 <AmiBlitz3.ab3@15853>    BNE.w notypeerr
0002D548 <AmiBlitz3.ab3@15854>   MOVE.w $4(A2),D3
0002D54A <AmiBlitz3.ab3@15855>   EXT.l D3
0002D54C <AmiBlitz3.ab3@15856>   MOVE.w (A7)+,D2
0002D550 <AmiBlitz3.ab3@15857> BRA.w JL_0_B46E
0002D552 <AmiBlitz3.ab3@15861>   MOVE.w D2,-(A7)
0002D556 <AmiBlitz3.ab3@15862>    BSR.w getparameter2
0002D55A <AmiBlitz3.ab3@15863>    BEQ.w syntaxerr
0002D560 <AmiBlitz3.ab3@15864>   LEA newtypebase,A2
0002D564 <AmiBlitz3.ab3@15865>    BSR.w findtype
0002D568 <AmiBlitz3.ab3@15866>    BNE.w notypeerr
0002D56A <AmiBlitz3.ab3@15867>   MOVEQ.l #$00,D3
0002D56E <AmiBlitz3.ab3@15868>   CMP.w #$5C,D0
0002D572 <AmiBlitz3.ab3@15869>    BNE.w JL_0_A832
0002D576 <AmiBlitz3.ab3@15870>    BSR.w getparameter2
0002D57A <AmiBlitz3.ab3@15871>    BEQ.w syntaxerr
0002D57E <AmiBlitz3.ab3@15872>   LEA $4(A2),A2
0002D582 <AmiBlitz3.ab3@15873>    BSR.w findvariable2
0002D586 <AmiBlitz3.ab3@15874>    BNE.w noofferr
0002D58A <AmiBlitz3.ab3@15875>   MOVE.w $4(A2),D3
0002D58E <AmiBlitz3.ab3@15876> BRA.w JL_0_A836
0002D592 <AmiBlitz3.ab3@15880>   MOVE.w $8(A2),D3
0002D594 <AmiBlitz3.ab3@15883>   MOVE.w (A7)+,D2
0002D598 <AmiBlitz3.ab3@15884> BRA.w JL_0_B46E
0002D59A <AmiBlitz3.ab3@15888>   MOVEQ.l #-$01,D3
0002D59E <AmiBlitz3.ab3@15889>    BSR.w get1bytemain
0002D5A2 <AmiBlitz3.ab3@15890> BRA.w JL_0_B46E
0002D5A4 <AmiBlitz3.ab3@15894>   MOVEQ.l #$00,D3
0002D5A8 <AmiBlitz3.ab3@15895>    BSR.w get1bytemain
0002D5AC <AmiBlitz3.ab3@15896> BRA.w JL_0_B46E
0002D5B0 <AmiBlitz3.ab3@15900>   CMP.w #$30,D0
0002D5B4 <AmiBlitz3.ab3@15901>    BCS.w JL_0_A876
0002D5B8 <AmiBlitz3.ab3@15902>   CMP.w #$39,D0
0002D5BC <AmiBlitz3.ab3@15903>    BLS.w JL_0_A874
0002D5C0 <AmiBlitz3.ab3@15904>   ANDI.w #$FFDF,D0
0002D5C4 <AmiBlitz3.ab3@15905>   CMP.w #$46,D0
0002D5C8 <AmiBlitz3.ab3@15906>    BHI.w JL_0_A876
0002D5CC <AmiBlitz3.ab3@15907>   CMP.w #$41,D0
0002D5D0 <AmiBlitz3.ab3@15908>    BCS.w JL_0_A876
0002D5D2 <AmiBlitz3.ab3@15911>    CMP.w D0,D0
0002D5D4 <AmiBlitz3.ab3@15914> RTS
0002D5D8 <AmiBlitz3.ab3@15918>   CMP.w #$31,D0
0002D5DC <AmiBlitz3.ab3@15919>    BEQ.w JL_0_A884
0002D5E0 <AmiBlitz3.ab3@15920>   CMP.w #$30,D0
0002D5E2 <AmiBlitz3.ab3@15923> RTS
0002D5E4 <AmiBlitz3.ab3@15927>    MOVEQ #0,d0
0002D5E6 <AmiBlitz3.ab3@15928>    MOVE.b (a5)+,d0
0002D5E8 <AmiBlitz3.ab3@15929>    MOVE.b (a5)+,d0
0002D5EC <AmiBlitz3.ab3@15930>    BSR ishex
0002D5F0 <AmiBlitz3.ab3@15931>    BNE syntaxerr
0002D5F4 <AmiBlitz3.ab3@15932>    SUBI.w #$30,D0
0002D5F8 <AmiBlitz3.ab3@15933>    CMP.w #$9,D0
0002D5FC <AmiBlitz3.ab3@15934>    BLS.w 'l1
0002D5FE <AmiBlitz3.ab3@15935>    SUBQ.w #7,D0
0002D600 <AmiBlitz3.ab3@15938>    MOVE.l d0,d1
0002D602 <AmiBlitz3.ab3@15939>    MOVE.b (a5)+,d0
0002D606 <AmiBlitz3.ab3@15940>      BSR ishex
0002D60A <AmiBlitz3.ab3@15941>     BNE syntaxerr
0002D60C <AmiBlitz3.ab3@15942>     LSL.l #4,d1
0002D610 <AmiBlitz3.ab3@15943>     SUBI.w #$30,D0
0002D614 <AmiBlitz3.ab3@15944>    CMP.w #$9,D0
0002D618 <AmiBlitz3.ab3@15945>    BLS.w 'l2
0002D61A <AmiBlitz3.ab3@15946>    SUBQ.w #7,D0
0002D61C <AmiBlitz3.ab3@15949>   ADD.l d1,d0
0002D61E <AmiBlitz3.ab3@15950> RTS
0002D622 <AmiBlitz3.ab3@15954>    BSR.w get1bytemain
0002D626 <AmiBlitz3.ab3@15955>    BSR.w ishex
0002D62A <AmiBlitz3.ab3@15956>    BNE.w syntaxerr
0002D62C <AmiBlitz3.ab3@15957>   MOVEQ.l #$00,D3
0002D630 <AmiBlitz3.ab3@15958>   CMP.w #5,d2
0002D634 <AmiBlitz3.ab3@15959>   BNE JL_0_A894
0002D63A <AmiBlitz3.ab3@15960>   CMP.l #newtype_double,a2
0002D63E <AmiBlitz3.ab3@15961>   BEQ 'doit
0002D644 <AmiBlitz3.ab3@15962>   CMP.l #newtype_float,a2
0002D648 <AmiBlitz3.ab3@15963>   BNE JL_0_A894
0002D650 <AmiBlitz3.ab3@15966>    fmove.s #0,fp0
0002D656 <AmiBlitz3.ab3@15968>   TST.b fpu
0002D65A <AmiBlitz3.ab3@15969>   BEQ JL_0_A894
0002D660 <AmiBlitz3.ab3@15970>   fmove.w #16,fp1
0002D664 <AmiBlitz3.ab3@15971>   fmul.x fp1,fp0
0002D668 <AmiBlitz3.ab3@15972>   SUBI.w #$30,D0
0002D66C <AmiBlitz3.ab3@15973>   CMP.w #$9,D0
0002D670 <AmiBlitz3.ab3@15974>    BLS.w JL_0_A8AEa
0002D672 <AmiBlitz3.ab3@15975>   SUBQ.w #7,D0
0002D676 <AmiBlitz3.ab3@15978>    fmove.w d0,fp1
0002D67A <AmiBlitz3.ab3@15979>    fadd.x fp1,fp0
0002D67E <AmiBlitz3.ab3@15980>    BSR.w get1bytemain
0002D682 <AmiBlitz3.ab3@15981>    BSR.w ishex
0002D686 <AmiBlitz3.ab3@15982>    BEQ.w JL_0_A894a
0002D68A <AmiBlitz3.ab3@15983> BRA.w nofpregload
0002D690 <AmiBlitz3.ab3@15987>   CMP.l #$10000000,D3
0002D694 <AmiBlitz3.ab3@15988>    BCC.w overerr
0002D696 <AmiBlitz3.ab3@15989>   LSL.l #4,D3
0002D69A <AmiBlitz3.ab3@15990>   SUBI.w #$30,D0
0002D69E <AmiBlitz3.ab3@15991>   CMP.w #$9,D0
0002D6A2 <AmiBlitz3.ab3@15992>    BLS.w JL_0_A8AE
0002D6A4 <AmiBlitz3.ab3@15993>   SUBQ.w #7,D0
0002D6A6 <AmiBlitz3.ab3@15996>   OR.w D0,D3
0002D6AA <AmiBlitz3.ab3@15997>    BSR.w get1bytemain
0002D6AE <AmiBlitz3.ab3@15998>    BSR.w ishex
0002D6B2 <AmiBlitz3.ab3@15999>    BEQ.w JL_0_A894
0002D6B6 <AmiBlitz3.ab3@16000> BRA.w JL_0_B46E
0002D6BA <AmiBlitz3.ab3@16004>    BSR.w get1bytemain
0002D6BE <AmiBlitz3.ab3@16005>    BSR.w JL_0_A878
0002D6C2 <AmiBlitz3.ab3@16006>    BNE.w syntaxerr
0002D6C4 <AmiBlitz3.ab3@16007>    MOVEQ.l #$00,D3
0002D6C6 <AmiBlitz3.ab3@16010>    LSL.l #1,D3
0002D6CA <AmiBlitz3.ab3@16011>    BCS.w overerr
0002D6CE <AmiBlitz3.ab3@16012>   SUBI.w #$30,D0
0002D6D0 <AmiBlitz3.ab3@16013>   OR.w D0,D3
0002D6D4 <AmiBlitz3.ab3@16014>    BSR.w get1bytemain
0002D6D8 <AmiBlitz3.ab3@16015>    BSR.w JL_0_A878
0002D6DC <AmiBlitz3.ab3@16016>    BEQ.w JL_0_A8CE
0002D6E0 <AmiBlitz3.ab3@16017> BRA.w JL_0_B46E
0002D6E2 <AmiBlitz3.ab3@16021>    MOVE.w d2,-(A7)
0002D6EA <AmiBlitz3.ab3@16022>    MOVE.b #0,automode
0002D6EE <AmiBlitz3.ab3@16023>    CMP.b #"@",(a5)
0002D6F2 <AmiBlitz3.ab3@16024>    BNE 'l1
0002D6F4 <AmiBlitz3.ab3@16025>    ADDQ.l #1,a5
0002D6FC <AmiBlitz3.ab3@16026>    MOVE.b #1,automode
0002D700 <AmiBlitz3.ab3@16027>    BSR getparameter2
0002D704 <AmiBlitz3.ab3@16028>    BSR findlabel2
0002D708 <AmiBlitz3.ab3@16029>    BNE 'addit
0002D70C <AmiBlitz3.ab3@16030> BRA errormsg_autocount
0002D710 <AmiBlitz3.ab3@16033>   BSR.w addlabelhash
0002D718 <AmiBlitz3.ab3@16034>   MOVE.l #$1,$4(A2)
0002D71C <AmiBlitz3.ab3@16035>   MOVEM.l a2/a5,-(a7)
0002D722 <AmiBlitz3.ab3@16036>   MOVE.w lastchar,-(a7)
0002D728 <AmiBlitz3.ab3@16037>   LEA autostorename,a5
0002D72C <AmiBlitz3.ab3@16038>   BSR getparameter2
0002D730 <AmiBlitz3.ab3@16039>   BSR findlabel2
0002D734 <AmiBlitz3.ab3@16040>   BEQ 'found
0002D738 <AmiBlitz3.ab3@16041>   BSR.w addlabelhash
0002D740 <AmiBlitz3.ab3@16042>   MOVE.l #$1,$4(A2)
0002D748 <AmiBlitz3.ab3@16043>   MOVE.l #0,8(a2)
0002D74A <AmiBlitz3.ab3@16046>    MOVE.w (a7)+,d0
0002D750 <AmiBlitz3.ab3@16047>    MOVE.w d0,lastchar
0002D754 <AmiBlitz3.ab3@16048>   MOVE.l 8(a2),d3
0002D75C <AmiBlitz3.ab3@16049>   ADD.l #1,8(a2)
0002D760 <AmiBlitz3.ab3@16050>   MOVEM.l (a7)+,a2/a5
0002D764 <AmiBlitz3.ab3@16051>   MOVE.l d3,8(a2)
0002D768 <AmiBlitz3.ab3@16052>   MOVE.l $8(A2),D3
0002D76C <AmiBlitz3.ab3@16053> BRA.l 'l3
0002D770 <AmiBlitz3.ab3@16056>   BSR.w getparameter2
0002D776 <AmiBlitz3.ab3@16057>     TST.b incnif
0002D77A <AmiBlitz3.ab3@16058>     BEQ 'lc1
0002D77E <AmiBlitz3.ab3@16059>     BSR.w findlabel2
0002D782 <AmiBlitz3.ab3@16060>     BNE 'l5
0002D784 <AmiBlitz3.ab3@16061>     MOVEQ #1,d3
0002D786 <AmiBlitz3.ab3@16062>     MOVE.w (A7)+,D2
0002D78A <AmiBlitz3.ab3@16063> BRA JL_0_B46E
0002D78C <AmiBlitz3.ab3@16066>   MOVEQ #0,d3
0002D78E <AmiBlitz3.ab3@16067>     MOVE.w (A7)+,D2
0002D792 <AmiBlitz3.ab3@16068> BRA JL_0_B46E
0002D796 <AmiBlitz3.ab3@16071>    BSR.w findlabel2
0002D79A <AmiBlitz3.ab3@16072>    BNE.w cnferr
0002D7A2 <AmiBlitz3.ab3@16075>    CMPI.l #$1,$4(A2)
0002D7A6 <AmiBlitz3.ab3@16076>    BNE.w cnferr
0002D7AA <AmiBlitz3.ab3@16078>    MOVE.l $8(A2),D3
0002D7AC <AmiBlitz3.ab3@16079>    MOVE.w (A7)+,D2
0002D7B0 <AmiBlitz3.ab3@16080> BRA.w JL_0_B46E
0002D7B6 <AmiBlitz3.ab3@16084>   CLR.w vartype
0002D7BE <AmiBlitz3.ab3@16085>   MOVE.b #3,peekaddrsize
0002D7C2 <AmiBlitz3.ab3@16086>   BSR.w JL_0_A916
0002D7C8 <AmiBlitz3.ab3@16087>   MOVE.l a2,rightsidetype
0002D7CA <AmiBlitz3.ab3@16088>   MOVEQ.l #$03,D2
0002D7CC <AmiBlitz3.ab3@16089> RTS
0002D7D0 <AmiBlitz3.ab3@16093>    BSR.w get1bytemain
0002D7E2 <AmiBlitz3.ab3@16094>    !compare2
0002D7E6 <AmiBlitz3.ab3@16095>    BEQ andop2
0002D7EA <AmiBlitz3.ab3@16096>    BSR.w getparameter
0002D7EE <AmiBlitz3.ab3@16097>    BSR.w JL_0_8E3C
0002D7F2 <AmiBlitz3.ab3@16098>    BSR.w calcvar
0002D7F6 <AmiBlitz3.ab3@16099>   CMP.b #$7,D2
0002D7FA <AmiBlitz3.ab3@16100>    BNE.w JL_0_A960
0002D7FE <AmiBlitz3.ab3@16101>   BTST #$F,D2
0002D802 <AmiBlitz3.ab3@16102>    BNE.w JL_0_A94A
0002D808 <AmiBlitz3.ab3@16103>   MOVE.w D3,stamp2+2
0002D80E <AmiBlitz3.ab3@16104>   MOVE.l stamp2,D1
0002D812 <AmiBlitz3.ab3@16105>    BSR.w pokela5s
0002D816 <AmiBlitz3.ab3@16106> BRA.w JL_0_A978
0002D81C <AmiBlitz3.ab3@16110>   MOVE.w regnum,D1
0002D81E <AmiBlitz3.ab3@16111>   LSL.w #8,D1
0002D820 <AmiBlitz3.ab3@16112>   LSL.w #1,D1
0002D826 <AmiBlitz3.ab3@16113>   OR.w stamp,D1
0002D82A <AmiBlitz3.ab3@16114>    BSR.w writeword
0002D82C <AmiBlitz3.ab3@16115> RTS
0002D830 <AmiBlitz3.ab3@16119>   BTST #$F,D2
0002D834 <AmiBlitz3.ab3@16120>    BNE.w JL_0_A978
0002D83A <AmiBlitz3.ab3@16121>   MOVE.w D3,leaamp+2
0002D840 <AmiBlitz3.ab3@16122>   MOVE.l leaamp,D1
0002D844 <AmiBlitz3.ab3@16123>    BSR.w pokela5s
0002D84A <AmiBlitz3.ab3@16126>   MOVE.w regnum,D1
0002D84C <AmiBlitz3.ab3@16127>   LSL.w #8,D1
0002D84E <AmiBlitz3.ab3@16128>   LSL.w #1,D1
0002D854 <AmiBlitz3.ab3@16129>   OR.w leaamp2,D1
0002D858 <AmiBlitz3.ab3@16130> BRA.w writeword
0002D85C <AmiBlitz3.ab3@16134>   MOVE.w #$D200,D1
0002D860 <AmiBlitz3.ab3@16135>    BSR.w Atokejsr
0002D862 <AmiBlitz3.ab3@16136>   MOVEQ.l #$03,D2
0002D864 <AmiBlitz3.ab3@16137> RTS
0002D868 <AmiBlitz3.ab3@16141> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002D86A <AmiBlitz3.ab3@16142>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002D86C <AmiBlitz3.ab3@16143>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002D870 <AmiBlitz3.ab3@16149>    BSR.w get1bytemain
0002D872 <AmiBlitz3.ab3@16150>   MOVE.w D0,D1
0002D876 <AmiBlitz3.ab3@16151>    BPL.w syntaxerr
0002D878 <AmiBlitz3.ab3@16152>   MOVE.w D2,-(A7)
0002D87C <AmiBlitz3.ab3@16153>   BCLR #$F,D1
0002D880 <AmiBlitz3.ab3@16154>    BSR.w searchinstr
0002D884 <AmiBlitz3.ab3@16155>   MOVE.l $12(A2),D0
0002D888 <AmiBlitz3.ab3@16156>   TST.w -$2(A2,D0.L)
0002D88C <AmiBlitz3.ab3@16157>    BEQ.w freeerr
0002D88E <AmiBlitz3.ab3@16158>   MOVE.w (A7)+,D2
0002D890 <AmiBlitz3.ab3@16159> RTS
0002D894 <AmiBlitz3.ab3@16163>   MOVE.l $0(A5),D0
0002D898 <AmiBlitz3.ab3@16164>    BNE.b ucodeskip
0002D89A <AmiBlitz3.ab3@16165>   MOVEQ.l #-$01,D0
0002D89E <AmiBlitz3.ab3@16166> BRA.b usedcodef
0002D8A2 <AmiBlitz3.ab3@16169>   SUB.l $0(A5),D0
0002D8A4 <AmiBlitz3.ab3@16172>   LSR.w #8,D0
0002D8A8 <AmiBlitz3.ab3@16177>    MOVE.l $0(A5),D0
0002D8AC <AmiBlitz3.ab3@16178>    BNE.b ucodeskip2
0002D8AE <AmiBlitz3.ab3@16179>   MOVEQ.l #-$01,D0
0002D8B2 <AmiBlitz3.ab3@16180> BRA.b usedcode2f
0002D8B6 <AmiBlitz3.ab3@16183>   SUB.l $0(A5),D0                                          ;usedcode2
0002D8B8 <AmiBlitz3.ab3@16184>   LSR.w #8,D0
0002D8BA <AmiBlitz3.ab3@16187>   LSR.w #8,D0
0002D8BC <AmiBlitz3.ab3@16192>   MOVE.l D0,-(A7)
0002D8BE <AmiBlitz3.ab3@16195>   MOVE.l (A7)+,D0
0002D8C0 <AmiBlitz3.ab3@16198>   MOVE.l D0,D0
0002D8C4 <AmiBlitz3.ab3@16204>   BSR.w JL_0_A9A0
0002D8C8 <AmiBlitz3.ab3@16206>   MOVE.w -$2(A2,D0.L),D3
0002D8CC <AmiBlitz3.ab3@16207>   CMP.w #$9,D3
0002D8D0 <AmiBlitz3.ab3@16208>    BCC.w doused__skip
0002D8D4 <AmiBlitz3.ab3@16212>   LEA usedcode(PC),A0
0002D8D8 <AmiBlitz3.ab3@16213>   LEA usedcodef(PC),A1
0002D8DE <AmiBlitz3.ab3@16215>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002D8E2 <AmiBlitz3.ab3@16216>   ANDI.w #$7,D3
0002D8E4 <AmiBlitz3.ab3@16217>   LSL.w #8,D3
0002D8E6 <AmiBlitz3.ab3@16218>   LSL.w #1,D3
0002D8EA <AmiBlitz3.ab3@16219>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002D8EE <AmiBlitz3.ab3@16220> BRA.w doused__skip2
0002D8F2 <AmiBlitz3.ab3@16225>   LEA usedcode2(PC),A0
0002D8F6 <AmiBlitz3.ab3@16226>   LEA usedcode2f(PC),A1
0002D8FC <AmiBlitz3.ab3@16228>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002D8FE <AmiBlitz3.ab3@16229>   SUBQ.w #8,D3
0002D900 <AmiBlitz3.ab3@16230>   LSL.w #8,D3
0002D902 <AmiBlitz3.ab3@16231>   LSL.w #1,D3
0002D906 <AmiBlitz3.ab3@16232>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002D90A <AmiBlitz3.ab3@16235>   MOVE.w -$6(A2,D0.L),D3
0002D90E <AmiBlitz3.ab3@16236>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002D910 <AmiBlitz3.ab3@16237>   ADDQ.w #4,D3
0002D914 <AmiBlitz3.ab3@16238>   MOVE.w D3,$2(A0)
0002D91A <AmiBlitz3.ab3@16239>   MOVE.w regnum,D1
0002D91E <AmiBlitz3.ab3@16240>    BEQ.w doused__skip3
0002D922 <AmiBlitz3.ab3@16241>   MOVE.w usedprep(PC),D1
0002D926 <AmiBlitz3.ab3@16242>    BSR.w writeword
0002D92A <AmiBlitz3.ab3@16245>   BSR.w pokecode
0002D930 <AmiBlitz3.ab3@16246>   MOVE.w regnum,D1
0002D934 <AmiBlitz3.ab3@16247>    BEQ.w doused__skip4
0002D936 <AmiBlitz3.ab3@16248>   LSL.w #8,D1
0002D938 <AmiBlitz3.ab3@16249>   LSL.w #1,D1
0002D93C <AmiBlitz3.ab3@16250>   OR.w usedfix(PC),D1
0002D940 <AmiBlitz3.ab3@16251>    BSR.w writeword
0002D944 <AmiBlitz3.ab3@16252>   MOVE.w useddone(PC),D1
0002D948 <AmiBlitz3.ab3@16253>    BSR.w writeword
0002D94A <AmiBlitz3.ab3@16256>    MOVEQ.l #$02,D2
0002D94E <AmiBlitz3.ab3@16257> BRA.w get1bytemain
0002D952 <AmiBlitz3.ab3@16265>    BSR.w JL_0_A9A0
0002D954 <AmiBlitz3.ab3@16267>   MOVEQ.l #$00,D3
0002D958 <AmiBlitz3.ab3@16268>   MOVE.w -$4(A2,D0.L),D3
0002D95C <AmiBlitz3.ab3@16269>    BSR.w get1bytemain
0002D960 <AmiBlitz3.ab3@16270> BRA.w JL_0_B46E
0002D964 <AmiBlitz3.ab3@16277>    BSR.w get1bytemain
0002D966 <AmiBlitz3.ab3@16278>   MOVE.w D0,-(A7)
0002D96A <AmiBlitz3.ab3@16279>    BSR.w get1bytemain
0002D96E <AmiBlitz3.ab3@16280>   CMP.w #$28,D0
0002D972 <AmiBlitz3.ab3@16281>    BNE.w syntaxerr
0002D974 <AmiBlitz3.ab3@16282>   MOVE.w (A7)+,D0
0002D978 <AmiBlitz3.ab3@16283>    BSR.w JL_0_C340
0002D97C <AmiBlitz3.ab3@16284>    BSR.w reget
0002D980 <AmiBlitz3.ab3@16285>   CMP.w #$29,D0
0002D984 <AmiBlitz3.ab3@16286>    BNE.w syntaxerr
0002D988 <AmiBlitz3.ab3@16290>   LEA addrcode(PC),A0
0002D98C <AmiBlitz3.ab3@16291>   LEA addrcodef(PC),A1
0002D992 <AmiBlitz3.ab3@16292>   MOVE.w -$6(A2),$2(A0)
0002D996 <AmiBlitz3.ab3@16293>   MOVE.w $4(A0),D1
0002D99A <AmiBlitz3.ab3@16294>   ANDI.w #$FFF8,D1
0002D9A0 <AmiBlitz3.ab3@16295>   OR.w regnum,D1
0002D9A4 <AmiBlitz3.ab3@16296>   MOVE.w D1,$4(A0)
0002D9A8 <AmiBlitz3.ab3@16297>   MOVE.w $6(A0),D1
0002D9AC <AmiBlitz3.ab3@16298>   ANDI.w #$F1FF,D1
0002D9B2 <AmiBlitz3.ab3@16299>   MOVE.w regnum,D0
0002D9B4 <AmiBlitz3.ab3@16300>   LSL.w #8,D0
0002D9B6 <AmiBlitz3.ab3@16301>   LSL.w #1,D0
0002D9B8 <AmiBlitz3.ab3@16302>   OR.w D0,D1
0002D9BC <AmiBlitz3.ab3@16303>   MOVE.w D1,$6(A0)
0002D9C0 <AmiBlitz3.ab3@16304>    BSR.w pokecode
0002D9C2 <AmiBlitz3.ab3@16305>   MOVEQ.l #$03,D2
0002D9C6 <AmiBlitz3.ab3@16306> BRA.w get1bytemain
0002D9CA <AmiBlitz3.ab3@16310>   CMP.w #-$7F4D,D0
0002D9CE <AmiBlitz3.ab3@16311>    BHI.w JL_0_AAFE
0002D9D2 <AmiBlitz3.ab3@16312> BRA.w syntaxerr
0002D9D6 <AmiBlitz3.ab3@16319> .do_null   CMP.w #$b581,d0
0002D9DA <AmiBlitz3.ab3@16320>    BNE 'nonull
0002D9E0 <AmiBlitz3.ab3@16321>    MOVE.l d0,lastinstruction
0002D9E4 <AmiBlitz3.ab3@16322>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002D9EA <AmiBlitz3.ab3@16323>    MOVE.w regnum,d0
0002D9EC <AmiBlitz3.ab3@16324>    ASL.l #7,d0
0002D9EE <AmiBlitz3.ab3@16325>    ASL.l #2,d0
0002D9F0 <AmiBlitz3.ab3@16326>    OR.l d0,d1
0002D9F4 <AmiBlitz3.ab3@16327>    BSR writeword
0002D9FA <AmiBlitz3.ab3@16328>    JSR get1bytemain
0002D9FC <AmiBlitz3.ab3@16329>    RTS
0002DA00 <AmiBlitz3.ab3@16331> 'nonull CMP.w #$c982,d0
0002DA04 <AmiBlitz3.ab3@16332>        BNE nonew_
0002DA06 <AmiBlitz3.ab3@16334>   MOVE.l a5,-(a7)
0002DA0C <AmiBlitz3.ab3@16335>   MOVE.w lastchar,-(a7)
0002DA12 <AmiBlitz3.ab3@16336>   JSR get1bytemain
0002DA16 <AmiBlitz3.ab3@16337>   CMP.w #"(",d0                                             ; use oldcode
0002DA1A <AmiBlitz3.ab3@16338>   BNE 'newcode
0002DA20 <AmiBlitz3.ab3@16339>   JSR get1bytemain
0002DA24 <AmiBlitz3.ab3@16340>   CMP.w #")",d0
0002DA28 <AmiBlitz3.ab3@16341>   BEQ 'newcode
0002DA2E <AmiBlitz3.ab3@16342>   MOVE.w (a7)+,lastchar
0002DA30 <AmiBlitz3.ab3@16343>   MOVE.l (a7)+,a5
0002DA36 <AmiBlitz3.ab3@16344>   MOVE.w lastchar,d0
0002DA3A <AmiBlitz3.ab3@16345>   BRA nonew_
0002DA3C <AmiBlitz3.ab3@16346> 'newcode  MOVE.l a0,-(a7)
0002DA42 <AmiBlitz3.ab3@16347>   TST.b blitzparloop
0002DA46 <AmiBlitz3.ab3@16348>   BNE 'err
0002DA4C <AmiBlitz3.ab3@16349>   TST.b funcparloop
0002DA50 <AmiBlitz3.ab3@16350>   BNE 'err
0002DA54 <AmiBlitz3.ab3@16351>   BRA 'ok
0002DA5A <AmiBlitz3.ab3@16352> 'err JMP errornewnotincalls
0002DA60 <AmiBlitz3.ab3@16353> 'ok  MOVE.l #$203c0000,d1
0002DA64 <AmiBlitz3.ab3@16354>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002DA66 <AmiBlitz3.ab3@16355>   MOVEQ #0,d1
0002DA6A <AmiBlitz3.ab3@16356>   MOVE.w 8(a0),d1
0002DA6E <AmiBlitz3.ab3@16357>   BSR writeword
0002DA72 <AmiBlitz3.ab3@16358>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002DA76 <AmiBlitz3.ab3@16359>   BSR writeword
0002DA7A <AmiBlitz3.ab3@16360>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002DA7E <AmiBlitz3.ab3@16361>   BSR.w tokejsr2
0002DA80 <AmiBlitz3.ab3@16362>   MOVE.l (a7)+,a0
0002DA82 <AmiBlitz3.ab3@16363>   ADDQ.l #6,a7                      ; a5 need not restore
0002DA86 <AmiBlitz3.ab3@16364>   CMP.w #")",d0
0002DA8A <AmiBlitz3.ab3@16365>   BNE 'nobracket
0002DA90 <AmiBlitz3.ab3@16366>   JSR get1bytemain
0002DA92 <AmiBlitz3.ab3@16367> 'nobracket  RTS
0002DA96 <AmiBlitz3.ab3@16369> nonew_  CMP.w #-$7F4A,D0
0002DA9A <AmiBlitz3.ab3@16370>    BEQ.w JL_0_A98C
0002DA9E <AmiBlitz3.ab3@16371>   CMP.w #-$7F48,D0
0002DAA2 <AmiBlitz3.ab3@16372>    BEQ.w doaddr
0002DAA6 <AmiBlitz3.ab3@16373>   CMP.w #-$7F3C,D0
0002DAAA <AmiBlitz3.ab3@16374>    BEQ.w domaximum
0002DAAE <AmiBlitz3.ab3@16375>   CMP.w #-$7F2F,D0
0002DAB2 <AmiBlitz3.ab3@16376>    BEQ.w doused
0002DAB4 <AmiBlitz3.ab3@16377>   MOVE.w D2,-(A7)
0002DAB6 <AmiBlitz3.ab3@16378>   MOVE.w D0,D1
0002DABA <AmiBlitz3.ab3@16379>   BCLR #$F,D1
0002DABE <AmiBlitz3.ab3@16381>    BSR.w searchinstr
0002DAC0 <AmiBlitz3.ab3@16382>   MOVE.w (A3),D1
0002DAC4 <AmiBlitz3.ab3@16383>   BTST #$1,D1
0002DAC8 <AmiBlitz3.ab3@16384>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DACC <AmiBlitz3.ab3@16385>   BTST #$2,D1
0002DAD0 <AmiBlitz3.ab3@16386>    BNE.w JL_0_AC1A
0002DAD2 <AmiBlitz3.ab3@16387>   LSR.w #8,D1
0002DAD8 <AmiBlitz3.ab3@16388>   BTST #$3,$1(A3)
0002DADC <AmiBlitz3.ab3@16389>    BEQ.w JL_0_AB4C
0002DAE2 <AmiBlitz3.ab3@16390>    JSR AJL_0_498A
0002DAE8 <AmiBlitz3.ab3@16393>    CLR.l rightsidetype
0002DAEA <AmiBlitz3.ab3@16394>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DAEE <AmiBlitz3.ab3@16395>   CMP.w #$7,D1
0002DAF2 <AmiBlitz3.ab3@16396>    BNE.w JL_0_AB5E
0002DAF4 <AmiBlitz3.ab3@16397>   MOVE.l A2,-(A7)
0002DAF8 <AmiBlitz3.ab3@16398>    BSR.w makesbase
0002DAFA <AmiBlitz3.ab3@16399>   MOVEA.l (A7)+,A2
0002DAFE <AmiBlitz3.ab3@16402>     BSR.w JL_0_AFA2
0002DB00 <AmiBlitz3.ab3@16403>   MOVE.w D3,-(A7)
0002DB04 <AmiBlitz3.ab3@16404>    BSR.w get1bytemain
0002DB06 <AmiBlitz3.ab3@16405>   MOVEQ.l #$00,D1
0002DB0A <AmiBlitz3.ab3@16406>   CMP.w #$28,D0
0002DB0E <AmiBlitz3.ab3@16407>    BNE.w JL_0_AB80
0002DB14 <AmiBlitz3.ab3@16408>    JSR JL_0_66F6
0002DB16 <AmiBlitz3.ab3@16409>   TST.w D1
0002DB1A <AmiBlitz3.ab3@16410>    BEQ.w syntaxerr
0002DB1E <AmiBlitz3.ab3@16411> BRA.w JL_0_AB84
0002DB28 <AmiBlitz3.ab3@16416>   MOVE.w oldqflag,instringon
0002DB2E <AmiBlitz3.ab3@16417>   MOVEA.l lastsourcepos,A5
0002DB34 <AmiBlitz3.ab3@16420>    MOVE.w regnum,-(A7)
0002DB3E <AmiBlitz3.ab3@16421>    MOVE.w regnum,regnumstore
0002DB44 <AmiBlitz3.ab3@16422>    TST.b fpu
0002DB48 <AmiBlitz3.ab3@16423>             BEQ 'nofloat
0002DB4E <AmiBlitz3.ab3@16424>             CMP.w #$ffff,28(a3)
0002DB52 <AmiBlitz3.ab3@16425>             BNE 'nofloat
0002DB58 <AmiBlitz3.ab3@16426>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DB5C <AmiBlitz3.ab3@16427>             BEQ 'nofloat
0002DB62 <AmiBlitz3.ab3@16428>             CMP.w #$3c02,34(a3)                            ;int skip
0002DB66 <AmiBlitz3.ab3@16429>             BEQ 'quick
0002DB6A <AmiBlitz3.ab3@16430>             CMP.b #5,(a3)
0002DB6E <AmiBlitz3.ab3@16431>             BNE 'nofloat
0002DB74 <AmiBlitz3.ab3@16434>             CLR.l load_var_addr
0002DB78 <AmiBlitz3.ab3@16435> BRA 'isfpu
0002DB7E <AmiBlitz3.ab3@16438>    CLR.w regnum
0002DB80 <AmiBlitz3.ab3@16441>    MOVE.w D1,-(A7)
0002DB86 <AmiBlitz3.ab3@16442>   BTST #$3,$1(A3)
0002DB8A <AmiBlitz3.ab3@16443>    BEQ.w JL_0_ABB0
0002DB8E <AmiBlitz3.ab3@16462>   MOVE.w $6(A7),D1
0002DB94 <AmiBlitz3.ab3@16463>   MOVE.w d1,peeksize
0002DB98 <AmiBlitz3.ab3@16473>   ORI.w #$7000,D1
0002DB9C <AmiBlitz3.ab3@16474>   BSR.w writeword                                          ;write peekmode
0002DBA2 <AmiBlitz3.ab3@16477>   ADDQ.w #1,regnum
0002DBA4 <AmiBlitz3.ab3@16478>   MOVE.w (A7),D1
0002DBAC <AmiBlitz3.ab3@16481>   MOVE.w 2(a7),tempregnum
0002DBB2 <AmiBlitz3.ab3@16482>   JSR JL_0_4878
0002DBB4 <AmiBlitz3.ab3@16483>   TST.w (A7)+
0002DBB8 <AmiBlitz3.ab3@16484>   BEQ.w JL_0_ABC6
0002DBBC <AmiBlitz3.ab3@16485>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002DBC0 <AmiBlitz3.ab3@16486>   BNE.w errorbracketmiss                                    ; was syntax error
0002DBC6 <AmiBlitz3.ab3@16487>   CLR.l lasttoken
0002DBCA <AmiBlitz3.ab3@16488>   BSR.w get1bytemain
0002DBCC <AmiBlitz3.ab3@16491>    MOVE.w (A7)+,D1
0002DBD2 <AmiBlitz3.ab3@16492>   MOVE.w D1,regnum
0002DBD6 <AmiBlitz3.ab3@16493>    BEQ.w JL_0_ABDE
0002DBDC <AmiBlitz3.ab3@16494>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002DBE0 <AmiBlitz3.ab3@16495>    BNE 'noval
0002DBE6 <AmiBlitz3.ab3@16496>    TST.b fpu
0002DBEA <AmiBlitz3.ab3@16497>    BEQ 'noval
0002DBF0 <AmiBlitz3.ab3@16498>    CLR.l load_var_addr
0002DBF2 <AmiBlitz3.ab3@16499>    MOVEQ #0,d1
0002DBF8 <AmiBlitz3.ab3@16500>    MOVE.w regnum,d1
0002DBFA <AmiBlitz3.ab3@16501>    LSL.l #7,d1
0002DC00 <AmiBlitz3.ab3@16502>    OR.l #$f2000000,d1
0002DC04 <AmiBlitz3.ab3@16503>    BSR writelong
0002DC08 <AmiBlitz3.ab3@16504> BRA JL_0_ABDE
0002DC0E <AmiBlitz3.ab3@16508>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002DC12 <AmiBlitz3.ab3@16509>    BEQ 'quick
0002DC16 <AmiBlitz3.ab3@16510>    CMP.b #5,d2
0002DC1A <AmiBlitz3.ab3@16511>    BNE 'nofpu
0002DC20 <AmiBlitz3.ab3@16512>    TST.b fpu
0002DC24 <AmiBlitz3.ab3@16513>    BEQ 'nofpu
0002DC2A <AmiBlitz3.ab3@16518>    CLR.l load_var_addr
0002DC2E <AmiBlitz3.ab3@16519> BRA JL_0_ABDE
0002DC30 <AmiBlitz3.ab3@16522>   LSL.w #8,D1
0002DC32 <AmiBlitz3.ab3@16523>   LSL.w #1,D1
0002DC36 <AmiBlitz3.ab3@16524>   ORI.w #$2000,D1
0002DC3A <AmiBlitz3.ab3@16525>   BSR.w writeword                                          ;write move.l d0,dx
0002DC40 <AmiBlitz3.ab3@16526>   TST.b fpu
0002DC44 <AmiBlitz3.ab3@16527>   BEQ JL_0_ABDE
0002DC46 <AmiBlitz3.ab3@16528>   MOVEQ #0,d1
0002DC4C <AmiBlitz3.ab3@16529>   MOVE.w regnum,d1
0002DC4E <AmiBlitz3.ab3@16530>   LSL.l #7,d1
0002DC54 <AmiBlitz3.ab3@16531>   OR.l #$f2000000,d1
0002DC56 <AmiBlitz3.ab3@16535>        MOVE.w (A7)+,D3
0002DC5A <AmiBlitz3.ab3@16536>        BEQ.w JL_0_ABFC
0002DC60 <AmiBlitz3.ab3@16537>        TST.b fpu
0002DC64 <AmiBlitz3.ab3@16538>        BEQ 'nofpu
0002DC66 <AmiBlitz3.ab3@16539>       MOVE.l d0,-(a7)
0002DC68 <AmiBlitz3.ab3@16540>        MOVE.l a0,-(a7)
0002DC6E <AmiBlitz3.ab3@16541>        MOVE.l stacktrack,d1
0002DC74 <AmiBlitz3.ab3@16542>        LEA fpustackbase,a0
0002DC7C <AmiBlitz3.ab3@16543>        MOVE.w 0(a0,d1),regmask
0002DC7E <AmiBlitz3.ab3@16544>        MOVE.l (a7)+,a0
0002DC82 <AmiBlitz3.ab3@16545>       MOVE.w #8,d0
0002DC86 <AmiBlitz3.ab3@16548>       BEQ 'ready
0002DC8C <AmiBlitz3.ab3@16549>       BTST d0,regmask
0002DC90 <AmiBlitz3.ab3@16550>       BEQ 'noa7
0002DC92 <AmiBlitz3.ab3@16551>       MOVEQ #0,d1
0002DC94 <AmiBlitz3.ab3@16552>       MOVE.w d0,d1
0002DC96 <AmiBlitz3.ab3@16553>       SUBQ.w #1,d1
0002DC98 <AmiBlitz3.ab3@16554>       ASL #7,d1
0002DC9E <AmiBlitz3.ab3@16556>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002DCA2 <AmiBlitz3.ab3@16557>       BSR writelong
0002DCA8 <AmiBlitz3.ab3@16558>       SUBQ.l #2,stacktrack
0002DCAA <AmiBlitz3.ab3@16561>       SUBQ.w #1,d0
0002DCAE <AmiBlitz3.ab3@16562>       BNE 'loop
0002DCB0 <AmiBlitz3.ab3@16565>       MOVE.l (a7)+,d0
0002DCB6 <AmiBlitz3.ab3@16566>       SUBQ.l #2,stacktrack                                 ;int track
0002DCBA <AmiBlitz3.ab3@16569>    MOVE.w #$4CDF,D1
0002DCBE <AmiBlitz3.ab3@16570>    BSR.w writeword                                         ;write movem.l (a7)+,
0002DCC0 <AmiBlitz3.ab3@16571>   MOVEQ.l #$00,D1
0002DCC2 <AmiBlitz3.ab3@16572>   MOVEQ.l #$0F,D4
0002DCC4 <AmiBlitz3.ab3@16575>     LSL.w #1,D3
0002DCC6 <AmiBlitz3.ab3@16576>     ROXR.w #1,D1
0002DCCA <AmiBlitz3.ab3@16577>   DBF D4,JL_0_ABF0
0002DCCE <AmiBlitz3.ab3@16579>    BSR.w writeword
0002DCD4 <AmiBlitz3.ab3@16580>    TST.b fast
0002DCD8 <AmiBlitz3.ab3@16581>    BEQ JL_0_ABFC
0002DCDE <AmiBlitz3.ab3@16582>    TST.w regnum
0002DCE2 <AmiBlitz3.ab3@16583>    BEQ JL_0_ABFC
0002DCE8 <AmiBlitz3.ab3@16584>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002DCEC <AmiBlitz3.ab3@16585>    BNE 'l1
0002DCF2 <AmiBlitz3.ab3@16586>    MOVE.w regnum,d1
0002DCF4 <AmiBlitz3.ab3@16587>    ASL.l #8,d1
0002DCF6 <AmiBlitz3.ab3@16588>    ASL.l #1,d1
0002DCFA <AmiBlitz3.ab3@16589>    OR.w #$70ff,d1
0002DD04 <AmiBlitz3.ab3@16590>    SUB.l #12,destpointer
0002DD08 <AmiBlitz3.ab3@16591>    BSR writeword
0002DD0E <AmiBlitz3.ab3@16594>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002DD12 <AmiBlitz3.ab3@16595>    BNE 'l2
0002DD18 <AmiBlitz3.ab3@16596>     MOVE.w regnum,d1
0002DD1A <AmiBlitz3.ab3@16597>     ASL.l #8,d1
0002DD1C <AmiBlitz3.ab3@16598>     ASL.l #1,d1
0002DD20 <AmiBlitz3.ab3@16599>     OR.w #$7000,d1
0002DD2A <AmiBlitz3.ab3@16600>     SUB.l #12,destpointer
0002DD2E <AmiBlitz3.ab3@16601>     BSR writeword
0002DD30 <AmiBlitz3.ab3@16605>    MOVE.w (A7)+,D2
0002DD34 <AmiBlitz3.ab3@16606>   CMP.w #$7,D2                                             ;destination var type
0002DD38 <AmiBlitz3.ab3@16607>    BNE.w JL_0_AC16
0002DD3E <AmiBlitz3.ab3@16608>   MOVE.w putstlen,D1
0002DD44 <AmiBlitz3.ab3@16609>   OR.w regnum,D1
0002DD48 <AmiBlitz3.ab3@16610>    BSR.w writeword
0002DD4C <AmiBlitz3.ab3@16613> BRA.w JL_0_AF66
0002DD50 <AmiBlitz3.ab3@16618>   MOVE.w $6(A3),D1
0002DD54 <AmiBlitz3.ab3@16619>    BSR.w uselib
0002DD58 <AmiBlitz3.ab3@16620>    BSR.w JL_0_AD40
0002DD5A <AmiBlitz3.ab3@16621>   MOVE.l D4,D1
0002DD5C <AmiBlitz3.ab3@16622>   MOVE.l D5,-(A7)
0002DD60 <AmiBlitz3.ab3@16623>    BSR.w JL_0_AD38
0002DD64 <AmiBlitz3.ab3@16624>   MOVE.w $A(A1),-(A7)
0002DD66 <AmiBlitz3.ab3@16625>   ADDQ.w #8,A3
0002DD68 <AmiBlitz3.ab3@16626>   MOVE.w (A3)+,-(A7)
0002DD6A <AmiBlitz3.ab3@16627>   MOVE.l A3,-(A7)
0002DD6E <AmiBlitz3.ab3@16628>    BSR.w get1bytemain
0002DD70 <AmiBlitz3.ab3@16629>   MOVE.w D0,-(A7)
0002DD72 <AmiBlitz3.ab3@16630>   MOVEQ.l #$00,D3
0002DD78 <AmiBlitz3.ab3@16631>   JSR checka4a5
0002DD7A <AmiBlitz3.ab3@16633>   MOVE.b (A3)+,D1
0002DD7E <AmiBlitz3.ab3@16634>    BMI.w JL_0_AC6A
0002DD80 <AmiBlitz3.ab3@16635>   MOVEQ.l #$03,D2
0002DD82 <AmiBlitz3.ab3@16636>   ADDQ.w #1,D3
0002DD86 <AmiBlitz3.ab3@16637>   MOVEM.l D3/A3,-(A7)
0002DD8C <AmiBlitz3.ab3@16638>   MOVE.b funcparloop,-(a7)
0002DD92 <AmiBlitz3.ab3@16639>   CLR.b funcparloop
0002DD98 <AmiBlitz3.ab3@16640>   MOVE.b blitzparloop,-(a7)
0002DDA0 <AmiBlitz3.ab3@16641>   MOVE.b #1,blitzparloop
0002DDA6 <AmiBlitz3.ab3@16642>   MOVE.l lasttoken,-(a7)
0002DDAC <AmiBlitz3.ab3@16643>   MOVE.l leftsidetype,-(a7)
0002DDB2 <AmiBlitz3.ab3@16644>   MOVE.l rightsidetype,-(a7)
0002DDB6 <AmiBlitz3.ab3@16645>   BSR.w peval
0002DDBC <AmiBlitz3.ab3@16646>   MOVE.l (a7)+,rightsidetype
0002DDC2 <AmiBlitz3.ab3@16647>   MOVE.l (a7)+,leftsidetype
0002DDC8 <AmiBlitz3.ab3@16648>   MOVE.l (a7)+,lasttoken
0002DDCE <AmiBlitz3.ab3@16649>   MOVE.b (a7)+,blitzparloop
0002DDD4 <AmiBlitz3.ab3@16650>   MOVE.b (a7)+,funcparloop
0002DDDA <AmiBlitz3.ab3@16651>   SUBQ.w #4,a2offset
0002DDDE <AmiBlitz3.ab3@16652>   MOVEM.l (A7)+,D3/A3
0002DDE2 <AmiBlitz3.ab3@16653>   CMP.w #$2C,D0
0002DDE6 <AmiBlitz3.ab3@16654>    BEQ.w JL_0_AC40
0002DDE8 <AmiBlitz3.ab3@16655>   TST.b (A3)
0002DDEC <AmiBlitz3.ab3@16656>    BPL.w syntaxerr
0002DDEE <AmiBlitz3.ab3@16659>   MOVE.w (A7)+,D1
0002DDF2 <AmiBlitz3.ab3@16660>    BSR.w JL_0_AD04
0002DDF4 <AmiBlitz3.ab3@16661>   MOVEA.l (A7)+,A3
0002DDF6 <AmiBlitz3.ab3@16662>   SUBQ.w #1,D3
0002DDFA <AmiBlitz3.ab3@16663>    BMI.w JL_0_ACBE
0002DDFC <AmiBlitz3.ab3@16666>   TST.b (A3)+
0002DE00 <AmiBlitz3.ab3@16667>    BPL.w JL_0_AC78
0002DE02 <AmiBlitz3.ab3@16668>   SUBQ.w #1,A3
0002DE04 <AmiBlitz3.ab3@16671>     MOVEQ.l #$00,D1
0002DE06 <AmiBlitz3.ab3@16672>     MOVE.b -(A3),D1
0002DE0A <AmiBlitz3.ab3@16673>     BTST #$4,D1
0002DE0E <AmiBlitz3.ab3@16674>      BNE.w JL_0_ACAA
0002DE14 <AmiBlitz3.ab3@16675>     CMP.w regnum,D1
0002DE18 <AmiBlitz3.ab3@16676>      BCC.w JL_0_AC9E
0002DE1A <AmiBlitz3.ab3@16677>     BSET D1,D5
0002DE1C <AmiBlitz3.ab3@16678>     MOVEQ.l #$0F,D0
0002DE1E <AmiBlitz3.ab3@16679>     SUB.w D1,D0
0002DE20 <AmiBlitz3.ab3@16680>     BSET D0,D4
0002DE22 <AmiBlitz3.ab3@16683>     LSL.w #8,D1
0002DE24 <AmiBlitz3.ab3@16684>     LSL.w #1,D1
0002DE28 <AmiBlitz3.ab3@16685>     ORI.w #$201F,D1
0002DE2C <AmiBlitz3.ab3@16686>   BRA.w JL_0_ACB6
0002DE30 <AmiBlitz3.ab3@16689>     ANDI.w #$7,D1
0002DE32 <AmiBlitz3.ab3@16690>     LSL.w #8,D1
0002DE34 <AmiBlitz3.ab3@16691>     LSL.w #1,D1
0002DE38 <AmiBlitz3.ab3@16692>     ORI.w #$205F,D1
0002DE3C <AmiBlitz3.ab3@16695>      BSR.w writeword
0002DE40 <AmiBlitz3.ab3@16696>   DBF D3,JL_0_AC80
0002DE46 <AmiBlitz3.ab3@16699>   MOVE.w (A7)+,libjsr+2
0002DE4C <AmiBlitz3.ab3@16700>   MOVE.w (A7)+,libbase+2
0002DE52 <AmiBlitz3.ab3@16701>   MOVE.l libbase,D1
0002DE56 <AmiBlitz3.ab3@16702>    BSR.w writelong
0002DE5C <AmiBlitz3.ab3@16703>   MOVE.l libjsr,D1
0002DE60 <AmiBlitz3.ab3@16704>    BSR.w writelong
0002DE66 <AmiBlitz3.ab3@16705>   MOVE.w regnum,D1
0002DE6A <AmiBlitz3.ab3@16706>    BEQ.w JL_0_ACF4
0002DE6C <AmiBlitz3.ab3@16707>   LSL.w #8,D1
0002DE6E <AmiBlitz3.ab3@16708>   LSL.w #1,D1
0002DE72 <AmiBlitz3.ab3@16709>   ORI.w #$2000,D1
0002DE76 <AmiBlitz3.ab3@16710>    BSR.w writeword
0002DE78 <AmiBlitz3.ab3@16713>   MOVE.l (A7)+,D1
0002DE7C <AmiBlitz3.ab3@16714>    BSR.w JL_0_AD38
0002DE82 <AmiBlitz3.ab3@16715>    JSR restorea4a5
0002DE84 <AmiBlitz3.ab3@16716>   MOVEQ.l #$03,D2
0002DE88 <AmiBlitz3.ab3@16717>    BSR.w reget
0002DE8C <AmiBlitz3.ab3@16718> BRA.w JL_0_AF66
0002DE8E <AmiBlitz3.ab3@16721>   TST.w D3
0002DE92 <AmiBlitz3.ab3@16722>    BEQ.w JL_0_AD1E
0002DE96 <AmiBlitz3.ab3@16723>   CMP.w #$28,D1
0002DE9A <AmiBlitz3.ab3@16724>    BNE.w syntaxerr
0002DE9E <AmiBlitz3.ab3@16725>   CMP.w #$29,D0
0002DEA2 <AmiBlitz3.ab3@16726>    BNE.w syntaxerr
0002DEA6 <AmiBlitz3.ab3@16727> BRA.w get1bytemain
0002DEAA <AmiBlitz3.ab3@16730>   CMP.w #$28,D1
0002DEAE <AmiBlitz3.ab3@16731>    BNE.w JL_0_AD36
0002DEB2 <AmiBlitz3.ab3@16732>    BSR.w get1bytemain
0002DEB6 <AmiBlitz3.ab3@16733>   CMP.w #$29,D0
0002DEBA <AmiBlitz3.ab3@16734>    BNE.w syntaxerr
0002DEBE <AmiBlitz3.ab3@16735> BRA.w get1bytemain
0002DEC0 <AmiBlitz3.ab3@16738> RTS
0002DEC2 <AmiBlitz3.ab3@16741>   TST.w D1
0002DEC6 <AmiBlitz3.ab3@16742>    BNE.w writelong
0002DEC8 <AmiBlitz3.ab3@16743> RTS
0002DECC <AmiBlitz3.ab3@16747>   MOVE.w #$48E7,D4
0002DECE <AmiBlitz3.ab3@16748>   SWAP D4
0002DED0 <AmiBlitz3.ab3@16749>   CLR.w D4
0002DED4 <AmiBlitz3.ab3@16750>   MOVE.w #$4CDF,D5
0002DED6 <AmiBlitz3.ab3@16751>   SWAP D5
0002DED8 <AmiBlitz3.ab3@16752>   CLR.w D5
0002DEDE <AmiBlitz3.ab3@16753>   MOVE.w regnum,D1
0002DEE2 <AmiBlitz3.ab3@16754>    BEQ.w JL_0_AD74
0002DEE6 <AmiBlitz3.ab3@16755>   BSET #$F,D4
0002DEEA <AmiBlitz3.ab3@16756>   BSET #$0,D5
0002DEEE <AmiBlitz3.ab3@16757>   CMP.w #$2,D1
0002DEF2 <AmiBlitz3.ab3@16758>    BCS.w JL_0_AD72
0002DEF6 <AmiBlitz3.ab3@16761>   BSET #$E,D4
0002DEFA <AmiBlitz3.ab3@16762>   BSET #$1,D5
0002DEFC <AmiBlitz3.ab3@16765> RTS
0002DF02 <AmiBlitz3.ab3@16768>   TST.w fuckpos
0002DF06 <AmiBlitz3.ab3@16769>   BNE.w JL_0_AD6A
0002DF08 <AmiBlitz3.ab3@16770> RTS
0002DF0A <AmiBlitz3.ab3@16773> fuckpos:  Ds.w 1
0002DF10 <AmiBlitz3.ab3@16777>   MOVE.w sbasegot,D1
0002DF14 <AmiBlitz3.ab3@16778>    BEQ.w makesbase__skip
0002DF18 <AmiBlitz3.ab3@16782>   MOVE.w sbgot(PC),D1
0002DF1C <AmiBlitz3.ab3@16783>    BNE.w makesbase__skip2
0002DF24 <AmiBlitz3.ab3@16787>   MOVE.w #$0002,sbgot
0002DF2A <AmiBlitz3.ab3@16788>   MOVE.w movea3a7,D1
0002DF2E <AmiBlitz3.ab3@16789> BRA.w writeword
0002DF30 <AmiBlitz3.ab3@16792> RTS
0002DF38 <AmiBlitz3.ab3@16797>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002DF3E <AmiBlitz3.ab3@16800>   MOVE.l #$C601,D1
0002DF46 <AmiBlitz3.ab3@16801>   MOVE.w #-1,sbasegot
0002DF4C <AmiBlitz3.ab3@16802>   MOVE.l d1,lastinstruction
0002DF50 <AmiBlitz3.ab3@16803>   BSR.w Atokejsr
0002DF52 <AmiBlitz3.ab3@16804> RTS
0002DF5C <AmiBlitz3.ab3@16809>   MOVE.l data1,litdata1
0002DF62 <AmiBlitz3.ab3@16810>   TST.b fast
0002DF66 <AmiBlitz3.ab3@16811>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002DF6A <AmiBlitz3.ab3@16815> BRA 'l50                                                   ;to deactivate
0002DF70 <AmiBlitz3.ab3@16821>   TST.b optistring
0002DF74 <AmiBlitz3.ab3@16822>   BNE.s 'l21
0002DF7A <AmiBlitz3.ab3@16823>   CLR.b string1
0002DF82 <AmiBlitz3.ab3@16824>   MOVE.b #1,optistring
0002DF88 <AmiBlitz3.ab3@16825>   TST.b nostringopt
0002DF8C <AmiBlitz3.ab3@16826>   BNE 'l21
0002DF8E <AmiBlitz3.ab3@16827>   MOVE.l a5,a4
0002DF90 <AmiBlitz3.ab3@16828>   SUBQ.l #1,a4
0002DF92 <AmiBlitz3.ab3@16831>     TST.b (a4)
0002DF96 <AmiBlitz3.ab3@16832>     BMI 'l19a
0002DF9A <AmiBlitz3.ab3@16833>     BEQ.s 'l20
0002DF9E <AmiBlitz3.ab3@16834>     CMP.b #$22,(a4)
0002DFA2 <AmiBlitz3.ab3@16835>     BEQ.s 'l19
0002DFA8 <AmiBlitz3.ab3@16838>     TST.w string1
0002DFAC <AmiBlitz3.ab3@16839>     BNE 'l11
0002DFB0 <AmiBlitz3.ab3@16840>     CMP.b #":",(a4)
0002DFB4 <AmiBlitz3.ab3@16841>     BEQ.s 'l20
0002DFB8 <AmiBlitz3.ab3@16842>     CMP.b #";",(a4)
0002DFBC <AmiBlitz3.ab3@16843>     BEQ.s 'l20
0002DFC0 <AmiBlitz3.ab3@16844>     CMP.b #"+",(a4)
0002DFC4 <AmiBlitz3.ab3@16845>     BEQ.s 'l21
0002DFC8 <AmiBlitz3.ab3@16846>     CMP.b #",",(a4)
0002DFCC <AmiBlitz3.ab3@16847>     BEQ.s 'l20                                             ;was l21
0002DFD0 <AmiBlitz3.ab3@16848>     CMP.b #")",(a4)
0002DFD4 <AmiBlitz3.ab3@16849>     BEQ.s 'l20                                             ;was l21
0002DFD6 <AmiBlitz3.ab3@16852>     ADDQ.l #1,a4
0002DFDA <AmiBlitz3.ab3@16853> BRA.s 'l10
0002DFE2 <AmiBlitz3.ab3@16856>   BCHG #0,string1
0002DFE6 <AmiBlitz3.ab3@16857> BRA 'l18
0002DFE8 <AmiBlitz3.ab3@16860>   ADDQ.l #1,a4
0002DFEA <AmiBlitz3.ab3@16861>   TST.b (a4)
0002DFEE <AmiBlitz3.ab3@16862>   BEQ 'l21
0002DFF2 <AmiBlitz3.ab3@16863> BRA 'l11
0002DFF4 <AmiBlitz3.ab3@16866>   MOVE.l a5,a4
0002DFF6 <AmiBlitz3.ab3@16867>   SUBQ.l #1,a4
0002DFFA <AmiBlitz3.ab3@16870>   CMP.b #$20,-(a4)
0002DFFE <AmiBlitz3.ab3@16871>   BEQ 'll1
0002E002 <AmiBlitz3.ab3@16872>   CMP.b #"+",(a4)
0002E006 <AmiBlitz3.ab3@16873>   BEQ 'l21
0002E00E <AmiBlitz3.ab3@16888>   MOVE.b #2,optistring
0002E016 <AmiBlitz3.ab3@16891>   CMP.b #2,optistring
0002E01A <AmiBlitz3.ab3@16892>   BEQ.s 'l100
0002E01E <AmiBlitz3.ab3@16895>   BSR.w makesbase
0002E022 <AmiBlitz3.ab3@16896>   BSR.w pokedata1                                          ;writestringsizespace
0002E026 <AmiBlitz3.ab3@16897>   BSR.w pokedata1
0002E028 <AmiBlitz3.ab3@16900>   MOVEQ.l #$00,D2
0002E02E <AmiBlitz3.ab3@16903>     MOVE.l a5,lastsourcepos
0002E030 <AmiBlitz3.ab3@16904>     MOVEQ #0,d0
0002E032 <AmiBlitz3.ab3@16905>     MOVE.b (a5)+,d0
0002E034 <AmiBlitz3.ab3@16906>     TST.w D0
0002E038 <AmiBlitz3.ab3@16907>      BEQ.w notqerr
0002E03C <AmiBlitz3.ab3@16908>     CMP.w #$22,D0                                          ; --- " ---
0002E040 <AmiBlitz3.ab3@16909>      BEQ.w JL_0_ADF6
0002E044 <AmiBlitz3.ab3@16910>     CMP.b #"\",d0
0002E048 <AmiBlitz3.ab3@16911>      BNE 'l1
0002E04C <AmiBlitz3.ab3@16912>     CMP.b #"\",(a5)
0002E050 <AmiBlitz3.ab3@16913>      BNE 'l1
0002E056 <AmiBlitz3.ab3@16914>     TST.b newsyntax
0002E05A <AmiBlitz3.ab3@16915>      BEQ 'l1
0002E060 <AmiBlitz3.ab3@16916>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E064 <AmiBlitz3.ab3@16917>     BNE 'l2
0002E066 <AmiBlitz3.ab3@16918>     ADDQ #2,a5
0002E068 <AmiBlitz3.ab3@16921>     ADDQ.w #1,D2
0002E06A <AmiBlitz3.ab3@16922>     MOVE.w D0,D1
0002E06E <AmiBlitz3.ab3@16923>     BSR.w pokedata1b                                        ;writestring
0002E072 <AmiBlitz3.ab3@16924> BRA.w writestring
0002E078 <AmiBlitz3.ab3@16927>     JSR check_newconstants
0002E07C <AmiBlitz3.ab3@16928> BRA writestring
0002E082 <AmiBlitz3.ab3@16931>   NOT instringon
0002E088 <AmiBlitz3.ab3@16932>   MOVE.w dontwrite,D1
0002E08C <AmiBlitz3.ab3@16933>   BNE.w JL_0_AE0A
0002E094 <AmiBlitz3.ab3@16934>   CMP.b #2,optistring
0002E098 <AmiBlitz3.ab3@16935>   BEQ 'l10
0002E09E <AmiBlitz3.ab3@16936>     MOVEA.l litdata1,A0
0002E0A0 <AmiBlitz3.ab3@16937>     CLR.w (A0)+                                            ;writesize
0002E0A2 <AmiBlitz3.ab3@16938>     MOVE.w D2,(A0)
0002E0A6 <AmiBlitz3.ab3@16942>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002E0AC <AmiBlitz3.ab3@16943>   ADDQ.l #1,data1
0002E0B4 <AmiBlitz3.ab3@16944>   BCLR #$0,data1+3
0002E0B6 <AmiBlitz3.ab3@16945>   MOVEQ.l #$07,D2
0002E0BA <AmiBlitz3.ab3@16946> BRA.w get1bytemain
0002E0BE <AmiBlitz3.ab3@16950>   BSR.w makename2
0002E0C2 <AmiBlitz3.ab3@16951>   BSR.w findlabel2
0002E0C6 <AmiBlitz3.ab3@16952>   BEQ.w JL_0_AE4A
0002E0CA <AmiBlitz3.ab3@16953>   BSR.w addlabelhash
0002E0CE <AmiBlitz3.ab3@16954>   CLR.l $4(A2)
0002E0D2 <AmiBlitz3.ab3@16955>   CLR.l $8(A2)
0002E0DA <AmiBlitz3.ab3@16957>   MOVE.w linenumat+2,$10(A2)
0002E0E0 <AmiBlitz3.ab3@16958>   MOVE.w linenumat,d0
0002E0E2 <AmiBlitz3.ab3@16959>   MOVEQ #0,d1
0002E0E6 <AmiBlitz3.ab3@16960>   MOVE.b -1(a2,d7),d1
0002E0EA <AmiBlitz3.ab3@16961>   MOVE.w d0,0(a2,d1)
0002E0EE <AmiBlitz3.ab3@16962> BRA.w JL_0_AE52
0002E0F2 <AmiBlitz3.ab3@16965>   TST.l $8(A2)
0002E0F6 <AmiBlitz3.ab3@16966>   BNE.w JL_0_AE88
0002E0FC <AmiBlitz3.ab3@16969>   MOVEA.l _execbase,A6
0002E0FE <AmiBlitz3.ab3@16970>   MOVEQ.l #$0C+2,D0
0002E100 <AmiBlitz3.ab3@16971>   MOVEQ.l #$01,D1
0002E106 <AmiBlitz3.ab3@16972>   MOVE.l mempool,a0
0002E10A <AmiBlitz3.ab3@16973>   JSR _AllocPooled(a6)
0002E10C <AmiBlitz3.ab3@16975>   MOVEA.l D0,A0
0002E110 <AmiBlitz3.ab3@16976>   MOVE.l $4(A2),(A0)
0002E114 <AmiBlitz3.ab3@16977>   MOVE.l A0,$4(A2)
0002E11C <AmiBlitz3.ab3@16978>   MOVE.l destpointer,$4(A0)
0002E120 <AmiBlitz3.ab3@16979>   ADDQ.l #2,$4(A0)
0002E128 <AmiBlitz3.ab3@16980>   MOVE.w procnum,$8(A0)
0002E130 <AmiBlitz3.ab3@16981>   MOVE.w linenumat+2,$A(A0)
0002E138 <AmiBlitz3.ab3@16982>   MOVE.w linenumat,$c(a0)
0002E13A <AmiBlitz3.ab3@16983> RTS
0002E13E <AmiBlitz3.ab3@16986>   MOVE.l $4(A2),D1
0002E142 <AmiBlitz3.ab3@16987>   BTST #$0,D1
0002E146 <AmiBlitz3.ab3@16988>    BNE.w illlaberr
0002E14C <AmiBlitz3.ab3@16989>   MOVE.w procnum,D1
0002E150 <AmiBlitz3.ab3@16990>   CMP.w $10(A2),D1
0002E154 <AmiBlitz3.ab3@16991>    BNE.w referr
0002E156 <AmiBlitz3.ab3@16992> RTS
0002E158 <AmiBlitz3.ab3@16996>   MOVE.w D0,-(A7)
0002E160 <AmiBlitz3.ab3@16997>   CMP.b #2,optistring
0002E164 <AmiBlitz3.ab3@16998>   BEQ 'l10
0002E16A <AmiBlitz3.ab3@17001>   MOVE.w numtoa0,D1
0002E16E <AmiBlitz3.ab3@17002>    BSR.w writeword
0002E172 <AmiBlitz3.ab3@17003>    BSR.w addoff
0002E178 <AmiBlitz3.ab3@17004>   MOVE.l litdata1,D1
0002E17C <AmiBlitz3.ab3@17005>    BSR.w writelong
0002E182 <AmiBlitz3.ab3@17006>   MOVE.w pushlen,D1
0002E186 <AmiBlitz3.ab3@17007>    BSR.w writeword
0002E18A <AmiBlitz3.ab3@17008>   MOVE.w #$C600,D1
0002E18E <AmiBlitz3.ab3@17009>    BSR.w Atokejsr
0002E190 <AmiBlitz3.ab3@17010>   MOVE.w (A7)+,D0
0002E192 <AmiBlitz3.ab3@17011> RTS
0002E194 <AmiBlitz3.ab3@17014>   MOVEQ #0,d1
0002E198 <AmiBlitz3.ab3@17015>   BSR.w pokedata1b
0002E19E <AmiBlitz3.ab3@17016>   MOVE.l destpointer,a4
0002E1A2 <AmiBlitz3.ab3@17017>   MOVE.w #$203c,d1
0002E1A8 <AmiBlitz3.ab3@17018>   TST.w mode
0002E1AC <AmiBlitz3.ab3@17019>   BNE 'lm10
0002E1B2 <AmiBlitz3.ab3@17020>    ADDQ.w #4,a2offset
0002E1B6 <AmiBlitz3.ab3@17021>   MOVE.w #$2f3c,d1
0002E1BC <AmiBlitz3.ab3@17024>   TST.w mode
0002E1C0 <AmiBlitz3.ab3@17025>   BEQ 'lm3
0002E1C6 <AmiBlitz3.ab3@17026>   MOVE.w regnum,D0
0002E1C8 <AmiBlitz3.ab3@17027>   LSL.w #8,D0
0002E1CA <AmiBlitz3.ab3@17028>   LSL.w #1,D0
0002E1CC <AmiBlitz3.ab3@17029>   OR.w d0,d1
0002E1D0 <AmiBlitz3.ab3@17030>   BSR writeword
0002E1D4 <AmiBlitz3.ab3@17031>   BSR.w addoff
0002E1DA <AmiBlitz3.ab3@17032>   MOVE.l litdata1,D1
0002E1DE <AmiBlitz3.ab3@17033>   BSR.w writelong
0002E1E6 <AmiBlitz3.ab3@17034>   CMP.w #3,mode
0002E1EA <AmiBlitz3.ab3@17035>   BEQ 'l30
0002E1F0 <AmiBlitz3.ab3@17036>    ADDQ.w #4,a2offset
0002E1F4 <AmiBlitz3.ab3@17037>   MOVE.w #$4878,D1
0002E1F8 <AmiBlitz3.ab3@17038>   BSR.w writeword
0002E1FA <AmiBlitz3.ab3@17039>   MOVE.l d2,d1
0002E1FE <AmiBlitz3.ab3@17040>   BSR writeword
0002E200 <AmiBlitz3.ab3@17043>   MOVE.w (A7)+,D0
0002E202 <AmiBlitz3.ab3@17044> RTS
0002E208 <AmiBlitz3.ab3@17047>   MOVE.l #$3f3c0007,d1
0002E20C <AmiBlitz3.ab3@17048>   BSR writelong
0002E212 <AmiBlitz3.ab3@17049>   MOVE.w regnum,D1
0002E214 <AmiBlitz3.ab3@17050>   LSL.w #8,D1
0002E216 <AmiBlitz3.ab3@17051>   LSL.w #1,D1
0002E21A <AmiBlitz3.ab3@17052>   ORI.w #$2f3c,d1
0002E21E <AmiBlitz3.ab3@17053>   BSR writeword
0002E224 <AmiBlitz3.ab3@17054>    ADDQ.w #4,a2offset
0002E226 <AmiBlitz3.ab3@17055>   MOVE.l d2,d1
0002E22A <AmiBlitz3.ab3@17056>   BSR writelong
0002E22E <AmiBlitz3.ab3@17057>   MOVE.w #$2f3c,d1
0002E232 <AmiBlitz3.ab3@17058>   BSR writeword
0002E236 <AmiBlitz3.ab3@17059>   BSR.w addoff
0002E23C <AmiBlitz3.ab3@17060>   MOVE.l litdata1,D1
0002E240 <AmiBlitz3.ab3@17061>   BSR.w writelong
0002E242 <AmiBlitz3.ab3@17062>   MOVE.w (A7)+,D0
0002E244 <AmiBlitz3.ab3@17063> RTS
0002E248 <AmiBlitz3.ab3@17067>   BSR.w get1bytemain
0002E24C <AmiBlitz3.ab3@17068>    BSR.w JL_0_AE22
0002E252 <AmiBlitz3.ab3@17069>   MOVE.w regnum,D1
0002E254 <AmiBlitz3.ab3@17070>   LSL.w #8,D1
0002E256 <AmiBlitz3.ab3@17071>   LSL.w #1,D1
0002E25A <AmiBlitz3.ab3@17072>   ORI.w #$203C,D1
0002E25E <AmiBlitz3.ab3@17073>    BSR.w writeword
0002E262 <AmiBlitz3.ab3@17074>    BSR.w addoff
0002E266 <AmiBlitz3.ab3@17075>   MOVE.l $8(A2),D1
0002E26A <AmiBlitz3.ab3@17076>    BSR.w writelong
0002E26C <AmiBlitz3.ab3@17077>   MOVEQ.l #$03,D2
0002E272 <AmiBlitz3.ab3@17078>   CLR.b peekaddrsize
0002E276 <AmiBlitz3.ab3@17079> BRA.w reget
0002E278 <AmiBlitz3.ab3@17082>   MOVEQ.l #$00,D3
0002E27C <AmiBlitz3.ab3@17085>   BSR.w get1bytemain
0002E280 <AmiBlitz3.ab3@17086>    BEQ.w syntaxerr
0002E284 <AmiBlitz3.ab3@17087>   CMP.w #$22,D0
0002E288 <AmiBlitz3.ab3@17088>    BEQ.w JL_0_AF1A
0002E28A <AmiBlitz3.ab3@17089>   LSL.l #8,D3
0002E28C <AmiBlitz3.ab3@17090>   MOVE.b D0,D3
0002E290 <AmiBlitz3.ab3@17091> BRA.w JL_0_AF02
0002E294 <AmiBlitz3.ab3@17094>   BSR.w get1bytemain
0002E298 <AmiBlitz3.ab3@17095> BRA.w JL_0_B46E
0002E29A <AmiBlitz3.ab3@17098>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E29E <AmiBlitz3.ab3@17099>    BSR.w makename2
0002E2A2 <AmiBlitz3.ab3@17100>    BSR.w findlabel2
0002E2A6 <AmiBlitz3.ab3@17101>    BEQ.w 'l10
0002E2AC <AmiBlitz3.ab3@17102>    LEA ptr_parameterstore,a0
0002E2B2 <AmiBlitz3.ab3@17103>    CMP.b #"@",-1(a0,d2.w)
0002E2B6 <AmiBlitz3.ab3@17104>    BNE cnferr
0002E2BA <AmiBlitz3.ab3@17105>    CLR.b -1(a0,d2.w)
0002E2BC <AmiBlitz3.ab3@17106>    SUBQ.l #1,d2
0002E2C2 <AmiBlitz3.ab3@17107>    LEA varbase,a2
0002E2C6 <AmiBlitz3.ab3@17108>    BSR findvariable
0002E2CA <AmiBlitz3.ab3@17109>    BNE cnferr
0002E2CE <AmiBlitz3.ab3@17110>    CMP.b #"\",d0
0002E2D2 <AmiBlitz3.ab3@17111>    BNE 'l6
0002E2D8 <AmiBlitz3.ab3@17112>    ADDQ #1,lastsourcepos
0002E2DC <AmiBlitz3.ab3@17113>    MOVE.l $a(a2),a2
0002E2DE <AmiBlitz3.ab3@17114>    ADDQ.l #4,a2
0002E2E2 <AmiBlitz3.ab3@17115>    BSR.w makename2
0002E2E6 <AmiBlitz3.ab3@17116>    BSR findvariable2
0002E2EA <AmiBlitz3.ab3@17117>    BNE cnferr
0002E2EE <AmiBlitz3.ab3@17118> BRA.s 'l6                                                  ;???
0002E2F2 <AmiBlitz3.ab3@17121>    MOVE.w $4(a2),d3
0002E2F4 <AmiBlitz3.ab3@17122>    EXT.l d3
0002E2F8 <AmiBlitz3.ab3@17123> BRA JL_0_AF46
0002E2FC <AmiBlitz3.ab3@17126>   MOVE.l $8(A2),D3
0002E304 <AmiBlitz3.ab3@17127>   CMPI.l #$1,$4(A2)
0002E308 <AmiBlitz3.ab3@17128>    BEQ.w JL_0_AF46
0002E30E <AmiBlitz3.ab3@17129>   NOT.w asmtype
0002E310 <AmiBlitz3.ab3@17132>   MOVE.w (A7)+,D2
0002E314 <AmiBlitz3.ab3@17133> BRA.w JL_0_B46E
0002E316 <AmiBlitz3.ab3@17137>   MOVE.w D2,-(A7)
0002E31A <AmiBlitz3.ab3@17138>    BSR.w getparameter
0002E31E <AmiBlitz3.ab3@17139>   CMP.w #"{",D0                                          ;test if var = function{}
0002E322 <AmiBlitz3.ab3@17140>    BEQ.w isfunction
0002E326 <AmiBlitz3.ab3@17141>    BSR.w JL_0_8E3C
0002E32A <AmiBlitz3.ab3@17143>    BSR.w calcvar                                         ;getvaroffset+type
0002E32E <AmiBlitz3.ab3@17144>    BSR.w JL_0_B150
0002E334 <AmiBlitz3.ab3@17145>    MOVE.l a2,rightsidetype
0002E33A <AmiBlitz3.ab3@17156>    TST.b typecheck
0002E33E <AmiBlitz3.ab3@17157>    BEQ JL_0_AF66
0002E348 <AmiBlitz3.ab3@17158>    CMP.l #$da01,lasttoken                                  ;poke
0002E34C <AmiBlitz3.ab3@17159>    BEQ 'l1
0002E356 <AmiBlitz3.ab3@17160>    CMP.l #$da02,lasttoken                                  ;peek
0002E35A <AmiBlitz3.ab3@17161>    BNE 'l2
0002E362 <AmiBlitz3.ab3@17164>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E366 <AmiBlitz3.ab3@17165>    BNE JL_0_AF66
0002E36C <AmiBlitz3.ab3@17166>    MOVE.b d2,peekaddrsize
0002E370 <AmiBlitz3.ab3@17167>    BRA JL_0_AF66
0002E376 <AmiBlitz3.ab3@17170>   CLR.b peekaddrsize
0002E37A <AmiBlitz3.ab3@17173>   CMP.w #$1,D2
0002E37E <AmiBlitz3.ab3@17174>    BNE.w JL_0_AF7C
0002E384 <AmiBlitz3.ab3@17175>   MOVE.w regnum,D1
0002E388 <AmiBlitz3.ab3@17176>   ORI.w #$4880,D1
0002E38C <AmiBlitz3.ab3@17177>    BSR.w writeword
0002E38E <AmiBlitz3.ab3@17180>   MOVE.w (A7)+,D3
0002E392 <AmiBlitz3.ab3@17181>    BEQ.w JL_0_AF9E
0002E398 <AmiBlitz3.ab3@17182>    MOVE.l lastinstructionaddr,a0
0002E39C <AmiBlitz3.ab3@17183>   CMP.w #$3,D3
0002E3A0 <AmiBlitz3.ab3@17184>    BNE.w JL_0_AF92
0002E3A4 <AmiBlitz3.ab3@17185>   CMP.w #$4,D2
0002E3A8 <AmiBlitz3.ab3@17186>    BEQ.w JL_0_AF98
0002E3AA <AmiBlitz3.ab3@17189>   CMP.w D2,D3
0002E3AE <AmiBlitz3.ab3@17190>    BLS.w JL_0_AF9E
0002E3B0 <AmiBlitz3.ab3@17193>   EXG.l D2,D3
0002E3B2 <AmiBlitz3.ab3@17194>   MOVE.l a0,-(a7)
0002E3B8 <AmiBlitz3.ab3@17195>   TST.b typecheck
0002E3BC <AmiBlitz3.ab3@17196>   BEQ 'ok
0002E3C2 <AmiBlitz3.ab3@17197>   TST.b notypecheck
0002E3C6 <AmiBlitz3.ab3@17198>   BNE 'ok
0002E3CC <AmiBlitz3.ab3@17199>   MOVE.l leftsidetype,a0
0002E3D6 <AmiBlitz3.ab3@17200>   CMP.l #0,leftsidetype
0002E3DA <AmiBlitz3.ab3@17201>   BEQ 'ok
0002E3E2 <AmiBlitz3.ab3@17202>   CMP.l #$100,4(a0)
0002E3E6 <AmiBlitz3.ab3@17203>   BLE 'ok
0002E3EA <AmiBlitz3.ab3@17204>   CMP.b #3,d3
0002E3EE <AmiBlitz3.ab3@17205>   BEQ 'ok
0002E3F2 <AmiBlitz3.ab3@17206>   CMP.b #7,d3
0002E3F6 <AmiBlitz3.ab3@17207>   BEQ 'ok
0002E3FC <AmiBlitz3.ab3@17208>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E3FE <AmiBlitz3.ab3@17210>   MOVE.l (a7)+,a0
0002E402 <AmiBlitz3.ab3@17211>   BSR.w writeconvertcode         ;called from var assign
0002E406 <AmiBlitz3.ab3@17214> BRA.w reget
0002E408 <AmiBlitz3.ab3@17217>   MOVEQ.l #$00,D3
0002E40E <AmiBlitz3.ab3@17218>   MOVE.w regnum,D1
0002E412 <AmiBlitz3.ab3@17219>    BEQ.w JL_0_AFC8
0002E414 <AmiBlitz3.ab3@17220>   SUBQ.w #1,D1
0002E416 <AmiBlitz3.ab3@17223>      LSR.l #1,D3
0002E41A <AmiBlitz3.ab3@17224>      BSET #$F,D3
0002E41E <AmiBlitz3.ab3@17225>   DBF D1,JL_0_AFB0b
0002E424 <AmiBlitz3.ab3@17227>    TST.b fpu
0002E428 <AmiBlitz3.ab3@17228>    BEQ 'l1
0002E42E <AmiBlitz3.ab3@17229>    ADDQ.l #2,stacktrack                                    ;intern command
0002E430 <AmiBlitz3.ab3@17230>     MOVE.l a0,-(a7)
0002E436 <AmiBlitz3.ab3@17231>     MOVE.l stacktrack,d1
0002E43C <AmiBlitz3.ab3@17232>     LEA fpustackbase,a0
0002E440 <AmiBlitz3.ab3@17233>     CLR.w 0(a0,d1)
0002E446 <AmiBlitz3.ab3@17234>     CLR.w regmask
0002E448 <AmiBlitz3.ab3@17235>     MOVE.l (a7)+,a0
0002E44C <AmiBlitz3.ab3@17238>   MOVE.w #$48E7,D1
0002E450 <AmiBlitz3.ab3@17239>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E452 <AmiBlitz3.ab3@17240>   MOVE.w D3,D1
0002E456 <AmiBlitz3.ab3@17241> BRA.w writeword
0002E458 <AmiBlitz3.ab3@17246>   MOVEQ.l #$00,D3
0002E45E <AmiBlitz3.ab3@17247>   MOVE.w regnum,D1
0002E462 <AmiBlitz3.ab3@17248>    BEQ.w JL_0_AFC8
0002E464 <AmiBlitz3.ab3@17249>   SUBQ.w #1,D1
0002E466 <AmiBlitz3.ab3@17252>     LSR.l #1,D3
0002E46A <AmiBlitz3.ab3@17253>     BSET #$F,D3
0002E46E <AmiBlitz3.ab3@17254>   DBF D1,JL_0_AFB0
0002E474 <AmiBlitz3.ab3@17256>    TST.b fpu
0002E478 <AmiBlitz3.ab3@17257>    BEQ 'l1
0002E47E <AmiBlitz3.ab3@17258>    ADDQ.l #2,stacktrack                                    ;intern command
0002E480 <AmiBlitz3.ab3@17259>     MOVE.l a0,-(a7)
0002E486 <AmiBlitz3.ab3@17260>     MOVE.l stacktrack,d1
0002E48C <AmiBlitz3.ab3@17261>     LEA fpustackbase,a0
0002E490 <AmiBlitz3.ab3@17262>     CLR.w 0(a0,d1)
0002E494 <AmiBlitz3.ab3@17263>    CMP.b #5,(a3)                                           ;result float ?
0002E498 <AmiBlitz3.ab3@17264>     BNE 'nofpu
0002E4A2 <AmiBlitz3.ab3@17266>     MOVE.w regnum,regnumfunc
0002E4A8 <AmiBlitz3.ab3@17269>   CLR.w regmask
0002E4AA <AmiBlitz3.ab3@17270>     MOVE.l (a7)+,a0
0002E4AE <AmiBlitz3.ab3@17273>   MOVE.w #$48E7,D1
0002E4B2 <AmiBlitz3.ab3@17274>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E4B4 <AmiBlitz3.ab3@17275>   MOVE.w D3,D1
0002E4B8 <AmiBlitz3.ab3@17276> BRA.w writeword
0002E4BA <AmiBlitz3.ab3@17279> RTS
0002E4BC <AmiBlitz3.ab3@17283>   MOVE.l D1,-(A7)
0002E4C0 <AmiBlitz3.ab3@17284>   MOVE.w #$4EB9,D1
0002E4C4 <AmiBlitz3.ab3@17285>    BSR.w writeword
0002E4C8 <AmiBlitz3.ab3@17286>    BSR.w addoff
0002E4CA <AmiBlitz3.ab3@17287>   MOVE.l (A7)+,D1
0002E4CE <AmiBlitz3.ab3@17288> BRA.w writelong
0002E4D6 <AmiBlitz3.ab3@17292> 
0002E4DA <AmiBlitz3.ab3@17293>    BGT error_funccallpara7                                 ; this is not supported => error
0002E4DE <AmiBlitz3.ab3@17294>    BSR.w findproc                                          ;write function call
0002E4E2 <AmiBlitz3.ab3@17295>    BEQ 'l1
0002E4E8 <AmiBlitz3.ab3@17296>    TST.l unusedfunc
0002E4EC <AmiBlitz3.ab3@17297>    BEQ noprocerr
0002E4F2 <AmiBlitz3.ab3@17299>    JSR gotoendsource
0002E4FA <AmiBlitz3.ab3@17302>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E500 <AmiBlitz3.ab3@17303>   TST.l typetocast
0002E504 <AmiBlitz3.ab3@17304>   BEQ 'nocast
0002E50E <AmiBlitz3.ab3@17305>   MOVE.l typetocast,rightsidetype
0002E514 <AmiBlitz3.ab3@17306>   CLR.l typetocast
0002E516 <AmiBlitz3.ab3@17307>   MOVE.l a1,-(a7)
0002E51C <AmiBlitz3.ab3@17308>   MOVE.l rightsidetype,a1
0002E522 <AmiBlitz3.ab3@17309>   CMP.l leftsidetype,a1
0002E526 <AmiBlitz3.ab3@17310>   BEQ 'ok
0002E52C <AmiBlitz3.ab3@17311>   JMP errorconvertreturntype2
0002E52E <AmiBlitz3.ab3@17312> 'ok  MOVE.l (a7)+,a1
0002E530 <AmiBlitz3.ab3@17314>   MOVEQ.l #$00,D1
0002E534 <AmiBlitz3.ab3@17315>   MOVE.b $5(A2),D1
0002E53A <AmiBlitz3.ab3@17316>   MOVE.b d1,retmode
0002E53E <AmiBlitz3.ab3@17317>    BMI.w illprocerr
0002E544 <AmiBlitz3.ab3@17318>    MOVE.b #1,isfunc(a2)
0002E546 <AmiBlitz3.ab3@17319>   MOVE.w D1,-(A7)
0002E548 <AmiBlitz3.ab3@17320>   MOVEQ.l #$00,D1
0002E54C <AmiBlitz3.ab3@17321>   MOVE.b $4(A2),D1
0002E54E <AmiBlitz3.ab3@17322>   LSR.w #4,D1
0002E552 <AmiBlitz3.ab3@17323>    BEQ.w JL_0_B006
0002E554 <AmiBlitz3.ab3@17324>   LSL.w #2,D1
0002E55A <AmiBlitz3.ab3@17325>   SUB.w D1,a2offset
0002E55E <AmiBlitz3.ab3@17328>   CMPI.w #$7,(A7)
0002E562 <AmiBlitz3.ab3@17329>    BNE.b JL_0_B014
0002E564 <AmiBlitz3.ab3@17330>   MOVE.l A2,-(A7)
0002E568 <AmiBlitz3.ab3@17331>    BSR.w makesbase
0002E56A <AmiBlitz3.ab3@17332>   MOVEA.l (A7)+,A2
0002E570 <AmiBlitz3.ab3@17335>   MOVE.w sbasegot,-(A7)
0002E574 <AmiBlitz3.ab3@17336>    BEQ.b JL_0_B020
0002E578 <AmiBlitz3.ab3@17337>    BSR.w dopusha3
0002E57C <AmiBlitz3.ab3@17340>   BSR.w JL_0_AFA2func
0002E57E <AmiBlitz3.ab3@17341>   MOVE.w D3,-(A7)
0002E582 <AmiBlitz3.ab3@17342>   MOVE.l $E(A2),D1
0002E586 <AmiBlitz3.ab3@17343>   TST.b $20(a2)                                            ;increase if morepar
0002E58A <AmiBlitz3.ab3@17344>   BNE 'no0par
0002E58C <AmiBlitz3.ab3@17345>   MOVE.l a5,a4
0002E590 <AmiBlitz3.ab3@17348>   CMP.b #$20,(a4)+
0002E594 <AmiBlitz3.ab3@17349>   BEQ 'l1
0002E59A <AmiBlitz3.ab3@17350>   CMP.b #"}",-1(a4)
0002E59E <AmiBlitz3.ab3@17351>   BNE  'no0par
0002E5A0 <AmiBlitz3.ab3@17352>   MOVEQ #0,d0
0002E5A4 <AmiBlitz3.ab3@17355>   LEA $16(A2),A1
0002E5A6 <AmiBlitz3.ab3@17358>   MOVE.l d1,-(a7)
0002E5A8 <AmiBlitz3.ab3@17359>   MOVE.b (a1),d2
0002E5AA <AmiBlitz3.ab3@17360>   MOVE.l d0,d1
0002E5AE <AmiBlitz3.ab3@17361>   CMP.w #4,d2
0002E5B2 <AmiBlitz3.ab3@17362>   BNE 'l1b
0002E5B8 <AmiBlitz3.ab3@17363>   ADD.l #$203c,d1
0002E5BC <AmiBlitz3.ab3@17364>   BSR writeword
0002E5C2 <AmiBlitz3.ab3@17365>   MOVE.l #$ffff0000,d1
0002E5C6 <AmiBlitz3.ab3@17366>   BSR writelong
0002E5CA <AmiBlitz3.ab3@17367> BRA 'l2b
0002E5D0 <AmiBlitz3.ab3@17370>    TST.b fpu
0002E5D4 <AmiBlitz3.ab3@17371>    BNE 'l1c
0002E5D8 <AmiBlitz3.ab3@17372>    CMP.w #5,d2
0002E5DC <AmiBlitz3.ab3@17373>    BNE 'l1c
0002E5E2 <AmiBlitz3.ab3@17374>    ADD.l #$203c,d1
0002E5E6 <AmiBlitz3.ab3@17375>    BSR writeword
0002E5EC <AmiBlitz3.ab3@17376>    MOVE.l #$800000c1,d1
0002E5F0 <AmiBlitz3.ab3@17377>    BSR writelong
0002E5F4 <AmiBlitz3.ab3@17378> BRA 'l2b
0002E5FA <AmiBlitz3.ab3@17381>   ADD.l #$70ff,d1
0002E5FE <AmiBlitz3.ab3@17382>   BSR writeword
0002E602 <AmiBlitz3.ab3@17383>   CMP.w #7,d2
0002E606 <AmiBlitz3.ab3@17384>   BNE 'l1d
0002E60C <AmiBlitz3.ab3@17385>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E610 <AmiBlitz3.ab3@17386>   BSR writelong
0002E612 <AmiBlitz3.ab3@17387>   MOVEQ #0,d1
0002E616 <AmiBlitz3.ab3@17388>   BSR writeword
0002E61C <AmiBlitz3.ab3@17389>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E620 <AmiBlitz3.ab3@17390>   BSR writelong
0002E622 <AmiBlitz3.ab3@17391>   MOVEQ #0,d1
0002E626 <AmiBlitz3.ab3@17392>   BSR writeword
0002E62C <AmiBlitz3.ab3@17394> 'l1d  MOVE.l #$f23c5000,d1
0002E62E <AmiBlitz3.ab3@17395>   MOVE.l d0,d2
0002E630 <AmiBlitz3.ab3@17396>   ASR.l #2,d2
0002E632 <AmiBlitz3.ab3@17397>   ADD.l d2,d1
0002E636 <AmiBlitz3.ab3@17398>   BSR writelong
0002E63A <AmiBlitz3.ab3@17399>   MOVE.w #$ffff,d1
0002E63E <AmiBlitz3.ab3@17400>   BSR writeword
0002E640 <AmiBlitz3.ab3@17404>   MOVE.l (a7)+,d1
0002E642 <AmiBlitz3.ab3@17405>      ADDQ.l #1,a1
0002E648 <AmiBlitz3.ab3@17406>      ADD.l #$0200,d0
0002E64E <AmiBlitz3.ab3@17407>      CMP.l #$0e00,d0
0002E652 <AmiBlitz3.ab3@17408>      BEQ syntaxerr
0002E654 <AmiBlitz3.ab3@17409>      TST.b (a1)
0002E658 <AmiBlitz3.ab3@17410>      BNE 'again
0002E65C <AmiBlitz3.ab3@17411> BRA 'p1
0002E660 <AmiBlitz3.ab3@17414>   TST.b $4(A2)
0002E664 <AmiBlitz3.ab3@17415>    BNE.w JL_0_B03E
0002E668 <AmiBlitz3.ab3@17418>   BSR.w JL_0_AFCA
0002E66C <AmiBlitz3.ab3@17419>    BSR.w get1bytemain
0002E670 <AmiBlitz3.ab3@17420> BRA.w JL_0_B06C
0002E676 <AmiBlitz3.ab3@17424>   MOVE.w regnum,-(A7)
0002E680 <AmiBlitz3.ab3@17425>   MOVE.w regnum,regnumfunc
0002E682 <AmiBlitz3.ab3@17428>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002E68A <AmiBlitz3.ab3@17429>   MOVE.b #1,funccall
0002E68C <AmiBlitz3.ab3@17430>   MOVEQ.l #$00,D0
0002E690 <AmiBlitz3.ab3@17431>   MOVE.b $4(A2),D0
0002E69A <AmiBlitz3.ab3@17432>   MOVE.w a2offset,a2offset2
0002E6A2 <AmiBlitz3.ab3@17433>   MOVE.b 5(a2),retmode
0002E6A8 <AmiBlitz3.ab3@17434>   MOVE.l a2,currentfunccall
0002E6AC <AmiBlitz3.ab3@17435>   LEA $16(A2),A2
0002E6B2 <AmiBlitz3.ab3@17436>   CLR.w regnum
0002E6B8 <AmiBlitz3.ab3@17437>   CLR.w regmask
0002E6BE <AmiBlitz3.ab3@17438>   MOVE.b isconstantvalue,-(a7)
0002E6C4 <AmiBlitz3.ab3@17439>   MOVE.b funcparloop,-(a7)
0002E6CC <AmiBlitz3.ab3@17440>   MOVE.b #1,funcparloop
0002E6D2 <AmiBlitz3.ab3@17441>   MOVE.l rightsidetype,-(a7)
0002E6D8 <AmiBlitz3.ab3@17442>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002E6DE <AmiBlitz3.ab3@17443>   MOVE.b blitzparloop,-(a7)
0002E6E4 <AmiBlitz3.ab3@17444>   CLR.b blitzparloop
0002E6EA <AmiBlitz3.ab3@17445>   JSR fetchpees2
0002E6F0 <AmiBlitz3.ab3@17446>   MOVE.b (a7)+,blitzparloop
0002E6F6 <AmiBlitz3.ab3@17447>   MOVE.l (a7)+,leftsidetype
0002E6FC <AmiBlitz3.ab3@17448>   MOVE.l (a7)+,rightsidetype
0002E702 <AmiBlitz3.ab3@17449>   MOVE.b (a7)+,funcparloop
0002E708 <AmiBlitz3.ab3@17450>   MOVE.b (a7)+,isconstantvalue
0002E70E <AmiBlitz3.ab3@17451>   JSR chkstak
0002E710 <AmiBlitz3.ab3@17452>   MOVE.l (A7)+,D1
0002E714 <AmiBlitz3.ab3@17468>    BTST #0,d1
0002E718 <AmiBlitz3.ab3@17469>    BNE intern1
0002E71C <AmiBlitz3.ab3@17470>    BSR.w JL_0_AFCA
0002E722 <AmiBlitz3.ab3@17492>   MOVE.w (A7)+,regnum
0002E726 <AmiBlitz3.ab3@17495>   CMP.w #"}",D0
0002E72A <AmiBlitz3.ab3@17496>    BNE.w errorbracketmiss2
0002E72C <AmiBlitz3.ab3@17497>    MOVEQ #0,d1                                            ; end of function call pars
0002E732 <AmiBlitz3.ab3@17498>   MOVE.w regnum,D1
0002E736 <AmiBlitz3.ab3@17499>    BEQ.w JL_0_B08A
0002E73C <AmiBlitz3.ab3@17500>    TST.b fpu
0002E740 <AmiBlitz3.ab3@17501>    BEQ 'old
0002E748 <AmiBlitz3.ab3@17502>    CMP.b #5,retmode
0002E74C <AmiBlitz3.ab3@17503>    BNE 'old
0002E74E <AmiBlitz3.ab3@17504>    ASL.l #7,d1
0002E754 <AmiBlitz3.ab3@17505>    OR.l #$f2000000,d1
0002E758 <AmiBlitz3.ab3@17506>    BSR writelong
0002E75C <AmiBlitz3.ab3@17507> BRA JL_0_B08A
0002E75E <AmiBlitz3.ab3@17509>  'old  LSL.w #8,D1
0002E760 <AmiBlitz3.ab3@17510>   LSL.w #1,D1
0002E764 <AmiBlitz3.ab3@17511>   ORI.w #$2000,D1
0002E768 <AmiBlitz3.ab3@17512>    BSR.w writeword
0002E76A <AmiBlitz3.ab3@17515>    MOVE.w (A7)+,D3
0002E76E <AmiBlitz3.ab3@17516>    BEQ.w JL_0_B0A8
0002E774 <AmiBlitz3.ab3@17517>    TST.b fpu
0002E778 <AmiBlitz3.ab3@17518>    BEQ 'old
0002E77A <AmiBlitz3.ab3@17519>    MOVE.l d0,-(a7)
0002E77E <AmiBlitz3.ab3@17520>    MOVE.w #8,d0
0002E780 <AmiBlitz3.ab3@17521>    MOVE.l a0,-(a7)
0002E786 <AmiBlitz3.ab3@17522>    MOVE.l stacktrack,d1
0002E78C <AmiBlitz3.ab3@17523>    LEA fpustackbase,a0
0002E794 <AmiBlitz3.ab3@17524>    MOVE.w 0(a0,d1),regmask
0002E796 <AmiBlitz3.ab3@17525>    MOVE.l (a7)+,a0
0002E79A <AmiBlitz3.ab3@17528>   BEQ 'ready
0002E7A0 <AmiBlitz3.ab3@17529>    BTST d0,regmask
0002E7A4 <AmiBlitz3.ab3@17530>    BEQ 'noa7
0002E7A6 <AmiBlitz3.ab3@17531>    MOVEQ #0,d1
0002E7A8 <AmiBlitz3.ab3@17532>    MOVE.w d0,d1
0002E7AA <AmiBlitz3.ab3@17533>    SUBQ.w #1,d1
0002E7AC <AmiBlitz3.ab3@17534>    ASL #7,d1
0002E7B2 <AmiBlitz3.ab3@17536>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002E7B6 <AmiBlitz3.ab3@17537>    BSR writelong
0002E7BC <AmiBlitz3.ab3@17538>    SUBQ.l #2,stacktrack
0002E7BE <AmiBlitz3.ab3@17541>    SUBQ.w #1,d0
0002E7C2 <AmiBlitz3.ab3@17542>    BNE 'loop
0002E7C8 <AmiBlitz3.ab3@17545>   SUBQ.l #2,stacktrack                                     ;integer sub
0002E7CA <AmiBlitz3.ab3@17546>   MOVE.l (a7)+,d0
0002E7CE <AmiBlitz3.ab3@17549>   MOVE.w #$4CDF,D1
0002E7D2 <AmiBlitz3.ab3@17550>    BSR.w writeword
0002E7D4 <AmiBlitz3.ab3@17551>   MOVEQ.l #$00,D1
0002E7D6 <AmiBlitz3.ab3@17552>   MOVEQ.l #$0F,D4
0002E7D8 <AmiBlitz3.ab3@17555>     LSL.w #1,D3
0002E7DA <AmiBlitz3.ab3@17556>     ROXR.w #1,D1
0002E7DE <AmiBlitz3.ab3@17557>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002E7E2 <AmiBlitz3.ab3@17559>     BSR.w writeword
0002E7E8 <AmiBlitz3.ab3@17560>    CLR.w regnumfunc
0002E7EA <AmiBlitz3.ab3@17563>   MOVE.w (A7)+,D1
0002E7EE <AmiBlitz3.ab3@17564>    BEQ.b JL_0_B0D2
0002E7F2 <AmiBlitz3.ab3@17565>   CMPI.w #$7,(A7)
0002E7F6 <AmiBlitz3.ab3@17566>    BEQ.b JL_0_B0C4
0002E7FC <AmiBlitz3.ab3@17567>   LEA geta3,A0
0002E802 <AmiBlitz3.ab3@17568>   LEA numtoa0,A1
0002E806 <AmiBlitz3.ab3@17569>    BSR.w pokecode
0002E80A <AmiBlitz3.ab3@17570> BRA.b JL_0_B0CE
0002E810 <AmiBlitz3.ab3@17573>   MOVE.w deca3,D1
0002E814 <AmiBlitz3.ab3@17574>    BSR.w writeword
0002E818 <AmiBlitz3.ab3@17577>   BSR.w dopulla3                                           ;fix up string base
0002E81A <AmiBlitz3.ab3@17580>   MOVE.w (A7)+,D2                                          ;what it returns!
0002E81E <AmiBlitz3.ab3@17581>   CMP.w #$7,D2
0002E822 <AmiBlitz3.ab3@17582>    BNE.w JL_0_B0EC
0002E828 <AmiBlitz3.ab3@17583>   MOVE.w putstlen,D1
0002E82E <AmiBlitz3.ab3@17584>   OR.w regnum,D1
0002E832 <AmiBlitz3.ab3@17585>    BSR.w writeword
0002E836 <AmiBlitz3.ab3@17588>   BSR.w get1bytemain
0002E83A <AmiBlitz3.ab3@17589> BRA.w JL_0_AF66
0002E83C <AmiBlitz3.ab3@17593> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002E844 <AmiBlitz3.ab3@17598>   CMP.b #2,optistring
0002E848 <AmiBlitz3.ab3@17599>   BEQ fs2
0002E84C <AmiBlitz3.ab3@17600>   BSR.w makesbase                                          ;writestringvariable
0002E850 <AmiBlitz3.ab3@17601>   BTST #$F,D2
0002E854 <AmiBlitz3.ab3@17602>    BNE.w JL_0_B112
0002E85A <AmiBlitz3.ab3@17603>   MOVE.w D3,leaa5d3a2+2
0002E860 <AmiBlitz3.ab3@17604>   MOVE.l leaa5d3a2,D1
0002E864 <AmiBlitz3.ab3@17605>    BSR.w pokela5s
0002E86A <AmiBlitz3.ab3@17608>   MOVE.w regnum,D1
0002E86C <AmiBlitz3.ab3@17609>   LSL.w #8,D1
0002E86E <AmiBlitz3.ab3@17610>   LSL.w #1,D1
0002E872 <AmiBlitz3.ab3@17611>   ORI.w #$7000,D1
0002E878 <AmiBlitz3.ab3@17612>   LEA stvarget2,A0
0002E87A <AmiBlitz3.ab3@17613>   MOVE.w D1,(A0)
0002E880 <AmiBlitz3.ab3@17614>   MOVE.w regnum,D1
0002E886 <AmiBlitz3.ab3@17615>   ANDI.w #$FFF8,$2(A0)
0002E88A <AmiBlitz3.ab3@17616>   OR.w D1,$2(A0)
0002E890 <AmiBlitz3.ab3@17617>   LEA stvarget2f,A1
0002E894 <AmiBlitz3.ab3@17618>    BSR.w pokecode
0002E898 <AmiBlitz3.ab3@17619>   MOVE.w #$C600,D1
0002E89C <AmiBlitz3.ab3@17620>    BSR.w Atokejsr
0002E89E <AmiBlitz3.ab3@17621>   MOVEQ.l #$07,D2
0002E8A2 <AmiBlitz3.ab3@17622> BRA.w reget
0002E8A8 <AmiBlitz3.ab3@17625>      TST.w stackpar
0002E8AC <AmiBlitz3.ab3@17626>      BMI 'l10
0002E8B2 <AmiBlitz3.ab3@17627>      MOVE.l #$3f3c0007,d1
0002E8B8 <AmiBlitz3.ab3@17628>      ADDQ.w #2,a2offset
0002E8BC <AmiBlitz3.ab3@17629>      BSR writelong
0002E8C0 <AmiBlitz3.ab3@17632>   MOVE.w #$4878,d1
0002E8C6 <AmiBlitz3.ab3@17633>      CLR.w stackpar
0002E8CA <AmiBlitz3.ab3@17634>      BSR writeword
0002E8CE <AmiBlitz3.ab3@17635>      MOVE.w #$0,d1
0002E8D2 <AmiBlitz3.ab3@17636>      BSR writeword
0002E8D6 <AmiBlitz3.ab3@17637>      MOVE.w #$246d,d1
0002E8DA <AmiBlitz3.ab3@17638>      BSR writeword
0002E8DC <AmiBlitz3.ab3@17639>      MOVE.w d3,d1
0002E8E0 <AmiBlitz3.ab3@17640>      BSR writeword
0002E8E6 <AmiBlitz3.ab3@17641>      MOVE.l #$4a926704,d1
0002E8EA <AmiBlitz3.ab3@17642>      BSR writelong
0002E8F0 <AmiBlitz3.ab3@17643>      MOVE.l #$2eaafffc,d1
0002E8F4 <AmiBlitz3.ab3@17644>      BSR writelong
0002E8F8 <AmiBlitz3.ab3@17645>      MOVE.w #$2f0a,d1
0002E8FE <AmiBlitz3.ab3@17646>      ADDQ.w #8,a2offset
0002E902 <AmiBlitz3.ab3@17647>      BSR writeword
0002E906 <AmiBlitz3.ab3@17648> BRA.w reget
0002E90A <AmiBlitz3.ab3@17651>   CMP.b #$7,D2                                             ;load basic var
0002E90E <AmiBlitz3.ab3@17652>    BEQ.w JL_0_B0F6
0002E914 <AmiBlitz3.ab3@17654>    TST.b iee
0002E918 <AmiBlitz3.ab3@17655>    BEQ 'noiee
0002E91C <AmiBlitz3.ab3@17656>    CMP.b #5,d2
0002E920 <AmiBlitz3.ab3@17657>    BNE 'noiee
0002E922 <AmiBlitz3.ab3@17658>    MOVE.l d0,-(a7)                                         ;fpu load var
0002E926 <AmiBlitz3.ab3@17659>    BTST #15,d2
0002E92A <AmiBlitz3.ab3@17660>    BEQ 'var
0002E930 <AmiBlitz3.ab3@17661>    CMP.l #$7fff,d3
0002E934 <AmiBlitz3.ab3@17662>    BGT 'longoffset
0002E93A <AmiBlitz3.ab3@17663>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002E93C <AmiBlitz3.ab3@17664>    TST.w d3                                                ;offset =0
0002E940 <AmiBlitz3.ab3@17665>    BNE 'offset
0002E946 <AmiBlitz3.ab3@17668>   MOVE.l #$f2124400,d1
0002E948 <AmiBlitz3.ab3@17669>    MOVEQ #0,d3
0002E94C <AmiBlitz3.ab3@17670> BRA 'glob
0002E952 <AmiBlitz3.ab3@17673>   SUBQ.l #4,destpointer
0002E956 <AmiBlitz3.ab3@17674> BRA 'glob
0002E95C <AmiBlitz3.ab3@17677>   TST.b fast
0002E960 <AmiBlitz3.ab3@17678>    BEQ 'nofastload
0002E966 <AmiBlitz3.ab3@17679>    TST.w regnum
0002E96A <AmiBlitz3.ab3@17680>    BNE 'nofastload
0002E970 <AmiBlitz3.ab3@17681>    CMP.l fp0addr,a4
0002E974 <AmiBlitz3.ab3@17682>    BNE 'nofastload
0002E97A <AmiBlitz3.ab3@17683>    MOVE.l fp0iff,d1
0002E980 <AmiBlitz3.ab3@17684>    CMP.l firstiff,d1
0002E984 <AmiBlitz3.ab3@17685>    BNE 'nofastload
0002E98A <AmiBlitz3.ab3@17686>    MOVE.w varmode,d1
0002E990 <AmiBlitz3.ab3@17687>    CMP.w fp0mode,d1
0002E994 <AmiBlitz3.ab3@17688>    BNE 'nofastload
0002E99A <AmiBlitz3.ab3@17689>    CMP.w fp0var,d3
0002E99E <AmiBlitz3.ab3@17690>    BNE 'nofastload
0002E9A2 <AmiBlitz3.ab3@17691>    BCLR #16,d2
0002E9A4 <AmiBlitz3.ab3@17692>    MOVE.l (a7)+,d0
0002E9A6 <AmiBlitz3.ab3@17693> RTS
0002E9A8 <AmiBlitz3.ab3@17696>    MOVEQ #0,d0
0002E9AE <AmiBlitz3.ab3@17697>    MOVE.w regnum,d0
0002E9B4 <AmiBlitz3.ab3@17698>    CMP.l maxregs,d0
0002E9B8 <AmiBlitz3.ab3@17699>    BLE 'ok
0002E9BE <AmiBlitz3.ab3@17700>    LEA cmplxerr,a0
0002E9C0 <AmiBlitz3.ab3@17701>   MOVE.l a0,-(a7)
0002E9C6 <AmiBlitz3.ab3@17702> JMP handle_compileerror
0002E9CC <AmiBlitz3.ab3@17705>    LEA regtable,a4
0002E9CE <AmiBlitz3.ab3@17706>    TST.l (a4)
0002E9D2 <AmiBlitz3.ab3@17707>    BEQ 'noreg
0002E9D6 <AmiBlitz3.ab3@17708>    CMP.w 0+4(a4),d3
0002E9DA <AmiBlitz3.ab3@17709>    BNE 'doreg1
0002E9E0 <AmiBlitz3.ab3@17710>    MOVE.l #$f2001c00,d1
0002E9E6 <AmiBlitz3.ab3@17711>    MOVE.w regnum,d0
0002E9E8 <AmiBlitz3.ab3@17712>    ASL.w #7,d0
0002E9EA <AmiBlitz3.ab3@17713>    OR.w d0,d1
0002E9EE <AmiBlitz3.ab3@17714>    BSR writelong
0002E9F0 <AmiBlitz3.ab3@17715>    MOVE.l (a7)+,d0
0002E9F2 <AmiBlitz3.ab3@17716> RTS
0002E9F6 <AmiBlitz3.ab3@17719>   CMP.w 8+4(a4),d3
0002E9FA <AmiBlitz3.ab3@17720>    BNE 'doreg2
0002EA00 <AmiBlitz3.ab3@17721>    MOVE.l #$f2001800,d1
0002EA06 <AmiBlitz3.ab3@17722>    MOVE.w regnum,d0
0002EA08 <AmiBlitz3.ab3@17723>    ASL.w #7,d0
0002EA0A <AmiBlitz3.ab3@17724>    OR.w d0,d1
0002EA0E <AmiBlitz3.ab3@17725>    BSR writelong
0002EA10 <AmiBlitz3.ab3@17726>    MOVE.l (a7)+,d0
0002EA12 <AmiBlitz3.ab3@17727> RTS
0002EA16 <AmiBlitz3.ab3@17730>   CMP.w 16+4(a4),d3
0002EA1A <AmiBlitz3.ab3@17731>    BNE 'doreg3
0002EA20 <AmiBlitz3.ab3@17732>    MOVE.l #$f2001400,d1
0002EA26 <AmiBlitz3.ab3@17733>    MOVE.w regnum,d0
0002EA28 <AmiBlitz3.ab3@17734>    ASL.w #7,d0
0002EA2A <AmiBlitz3.ab3@17735>    OR.w d0,d1
0002EA2E <AmiBlitz3.ab3@17736>    BSR  writelong
0002EA30 <AmiBlitz3.ab3@17737>    MOVE.l (a7)+,d0
0002EA32 <AmiBlitz3.ab3@17738> RTS
0002EA36 <AmiBlitz3.ab3@17741>   CMP.w 24+4(a4),d3
0002EA3A <AmiBlitz3.ab3@17742>    BNE 'doreg4
0002EA40 <AmiBlitz3.ab3@17743>    MOVE.l #$f2001000,d1
0002EA46 <AmiBlitz3.ab3@17744>    MOVE.w regnum,d0
0002EA48 <AmiBlitz3.ab3@17745>    ASL.w #7,d0
0002EA4A <AmiBlitz3.ab3@17746>    OR.w d0,d1
0002EA4E <AmiBlitz3.ab3@17747>    BSR writelong
0002EA50 <AmiBlitz3.ab3@17748>    MOVE.l (a7)+,d0
0002EA52 <AmiBlitz3.ab3@17749> RTS
0002EA56 <AmiBlitz3.ab3@17752>    CMP.w 32+4(a4),d3
0002EA5A <AmiBlitz3.ab3@17753>    BNE 'noreg
0002EA60 <AmiBlitz3.ab3@17754>    MOVE.l #$f2000c00,d1
0002EA66 <AmiBlitz3.ab3@17755>    MOVE.w regnum,d0
0002EA68 <AmiBlitz3.ab3@17756>    ASL.w #7,d0
0002EA6A <AmiBlitz3.ab3@17757>    OR.w d0,d1
0002EA6E <AmiBlitz3.ab3@17758>    BSR writelong
0002EA70 <AmiBlitz3.ab3@17759>    MOVE.l (a7)+,d0
0002EA72 <AmiBlitz3.ab3@17760> RTS
0002EA78 <AmiBlitz3.ab3@17763>    MOVE.l #$f22d4400,d1                                    ;var
0002EA7E <AmiBlitz3.ab3@17764>    TST.w varmode
0002EA82 <AmiBlitz3.ab3@17765>   BEQ 'glob
0002EA86 <AmiBlitz3.ab3@17766>   BCLR #16,d1                                              ;local
0002EA88 <AmiBlitz3.ab3@17769>    MOVEQ #0,d0
0002EA8E <AmiBlitz3.ab3@17770>    MOVE.w regnum,d0
0002EA92 <AmiBlitz3.ab3@17771>    CMP.w #7,d0
0002EA96 <AmiBlitz3.ab3@17772>    BLE 'ok2
0002EA9C <AmiBlitz3.ab3@17773>    LEA cmplxerr,a0
0002EA9E <AmiBlitz3.ab3@17774>   MOVE.l a0,-(a7)
0002EAA4 <AmiBlitz3.ab3@17775> JMP handle_compileerror
0002EAA6 <AmiBlitz3.ab3@17778>      ASL.w #7,d0
0002EAA8 <AmiBlitz3.ab3@17779>    OR.l d0,d1
0002EAB0 <AmiBlitz3.ab3@17780>    CMP.l #doublecheck,8(a2)
0002EAB4 <AmiBlitz3.ab3@17781>    BNE 'dbl
0002EABA <AmiBlitz3.ab3@17782>    OR.l #$00001000,d1
0002EABE <AmiBlitz3.ab3@17785>   BSR writelong
0002EAC0 <AmiBlitz3.ab3@17786>    MOVE.l (a7)+,d0
0002EAC4 <AmiBlitz3.ab3@17787>    AND.w #$ff,d2
0002EAC6 <AmiBlitz3.ab3@17788>    MOVE.w d3,d1
0002EACA <AmiBlitz3.ab3@17789>    BEQ 'nooffs
0002EACE <AmiBlitz3.ab3@17790> BRA writeword
0002EAD0 <AmiBlitz3.ab3@17795> RTS
0002EAD6 <AmiBlitz3.ab3@17798>   MOVE.w regnum,D1
0002EADC <AmiBlitz3.ab3@17799>   MOVE.w d1,load_var_reg
0002EADE <AmiBlitz3.ab3@17800>   LSL.w #8,D1
0002EAE8 <AmiBlitz3.ab3@17801>   MOVE.l destpointer,load_var_addr
0002EAEE <AmiBlitz3.ab3@17802>   MOVE.w d2,load_var_size
0002EAF0 <AmiBlitz3.ab3@17803>   LSL.w #1,D1
0002EAF4 <AmiBlitz3.ab3@17804>   BTST #$E,D2
0002EAF8 <AmiBlitz3.ab3@17805>    BNE.w JL_0_B17A
0002EAFA <AmiBlitz3.ab3@17806>   TST.b D2
0002EAFE <AmiBlitz3.ab3@17807>    BNE.w JL_0_B17E
0002EB00 <AmiBlitz3.ab3@17808>   MOVEQ.l #$03,D2
0002EB04 <AmiBlitz3.ab3@17809>   ORI.w #$200A,D1
0002EB08 <AmiBlitz3.ab3@17810> BRA.w writeword
0002EB0C <AmiBlitz3.ab3@17813>   MOVE.b #$3,D2
0002EB10 <AmiBlitz3.ab3@17816>   BTST #$F,D2
0002EB14 <AmiBlitz3.ab3@17817>    BEQ.w JL_0_B19A                                         ;loadarray
0002EB1A <AmiBlitz3.ab3@17818>    TST.b fast                                              ;lea->move xx(a2)
0002EB1E <AmiBlitz3.ab3@17819>    BEQ 'la10
0002EB24 <AmiBlitz3.ab3@17824>    CLR.l load_var_addr
0002EB28 <AmiBlitz3.ab3@17825> BRA 'la10
0002EB30 <AmiBlitz3.ab3@17827>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EB34 <AmiBlitz3.ab3@17828>    BNE 'la10
0002EB3A <AmiBlitz3.ab3@17829>    TST.b optiarray
0002EB3E <AmiBlitz3.ab3@17830>    BNE 'la10
0002EB44 <AmiBlitz3.ab3@17831>    MOVE.l destpointer,a4
0002EB4A <AmiBlitz3.ab3@17832>    SUB.l loada,a4
0002EB4E <AmiBlitz3.ab3@17833>    CMP.w #4,a4
0002EB52 <AmiBlitz3.ab3@17834>    BEQ 'la100
0002EB56 <AmiBlitz3.ab3@17835>    CMP.w #2,a4
0002EB5A <AmiBlitz3.ab3@17836>    BNE 'la10
0002EB60 <AmiBlitz3.ab3@17837>    MOVE.l destpointer,a4
0002EB64 <AmiBlitz3.ab3@17838>    CMP.b #3,d2
0002EB68 <AmiBlitz3.ab3@17839>    BCS 'la110
0002EB6E <AmiBlitz3.ab3@17840>    MOVE.w #$202a,-2(a4)
0002EB72 <AmiBlitz3.ab3@17841>    OR.w d1,-2(a4)
0002EB78 <AmiBlitz3.ab3@17842>    MOVE.w arrayoffset,d1
0002EB7C <AmiBlitz3.ab3@17843>    BSR writeword
0002EB80 <AmiBlitz3.ab3@17844> BRA JL_0_B194
0002EB84 <AmiBlitz3.ab3@17847>    CMP.b #2,d2
0002EB88 <AmiBlitz3.ab3@17848>    BNE 'la120
0002EB8E <AmiBlitz3.ab3@17849>     MOVE.w #$302a,-2(a4)
0002EB92 <AmiBlitz3.ab3@17850>    OR.w d1,-2(a4)
0002EB98 <AmiBlitz3.ab3@17852>    MOVE.w arrayoffset,d1
0002EB9C <AmiBlitz3.ab3@17853>    BSR writeword
0002EBA0 <AmiBlitz3.ab3@17854> BRA JL_0_B194
0002EBA4 <AmiBlitz3.ab3@17857>   CMP.b #1,d2
0002EBA8 <AmiBlitz3.ab3@17858>    BNE.s 'la10
0002EBAE <AmiBlitz3.ab3@17859>     MOVE.w #$102a,-2(a4)
0002EBB2 <AmiBlitz3.ab3@17860>    OR.w d1,-2(a4)
0002EBB8 <AmiBlitz3.ab3@17861>    MOVE.w arrayoffset,d1
0002EBBC <AmiBlitz3.ab3@17862>    BSR writeword
0002EBC0 <AmiBlitz3.ab3@17863> BRA JL_0_B194
0002EBC6 <AmiBlitz3.ab3@17866>   MOVE.l destpointer,a4
0002EBCC <AmiBlitz3.ab3@17867>    CMP.w #$45ea,-2(a4)
0002EBD0 <AmiBlitz3.ab3@17868>    BNE 'la10
0002EBD4 <AmiBlitz3.ab3@17869>    CMP.b #3,d2
0002EBD8 <AmiBlitz3.ab3@17870>    BCS 'la11
0002EBDE <AmiBlitz3.ab3@17871>    MOVE.w #$202a,-4(a4)
0002EBE2 <AmiBlitz3.ab3@17872>    OR.w d1,-4(a4)
0002EBE6 <AmiBlitz3.ab3@17873> BRA JL_0_B194
0002EBEA <AmiBlitz3.ab3@17876>    CMP.b #2,d2
0002EBEE <AmiBlitz3.ab3@17877>    BNE 'la12
0002EBF4 <AmiBlitz3.ab3@17878>     MOVE.w #$302a,-4(a4)
0002EBF8 <AmiBlitz3.ab3@17879>    OR.w d1,-4(a4)
0002EBFC <AmiBlitz3.ab3@17880> BRA JL_0_B194
0002EC00 <AmiBlitz3.ab3@17883>   CMP.b #1,d2
0002EC04 <AmiBlitz3.ab3@17884>    BNE.s 'la10
0002EC0A <AmiBlitz3.ab3@17885>     MOVE.w #$102a,-4(a4)
0002EC0E <AmiBlitz3.ab3@17886>    OR.w d1,-4(a4)
0002EC12 <AmiBlitz3.ab3@17887> BRA JL_0_B194
0002EC18 <AmiBlitz3.ab3@17890>    OR.w movea2dn,D1
0002EC1C <AmiBlitz3.ab3@17891>    BSR.w JL_0_B1B2
0002EC20 <AmiBlitz3.ab3@17892>    BSR.w writeword
0002EC24 <AmiBlitz3.ab3@17895>   ANDI.w #$FF,D2
0002EC26 <AmiBlitz3.ab3@17896> RTS
0002EC2C <AmiBlitz3.ab3@17900>    MOVE.l destpointer,a4
0002EC34 <AmiBlitz3.ab3@17901>    MOVE.l #$f22a4400,-4(a4)
0002EC3A <AmiBlitz3.ab3@17902>    MOVE.w arrayoffset,d1
0002EC3E <AmiBlitz3.ab3@17903> BRA writeword
0002EC44 <AmiBlitz3.ab3@17907>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002EC48 <AmiBlitz3.ab3@17908>    BSR.w JL_0_B1B2
0002EC4C <AmiBlitz3.ab3@17909>    BSR.w pokewda5s
0002EC4E <AmiBlitz3.ab3@17910>   MOVE.w D3,D1
0002EC52 <AmiBlitz3.ab3@17911>    BSR.w writeword
0002EC56 <AmiBlitz3.ab3@17912> BRA.w JL_0_B194
0002EC5A <AmiBlitz3.ab3@17915>   BTST #$E,D2
0002EC5E <AmiBlitz3.ab3@17916>    BNE.w JL_0_B1CA
0002EC62 <AmiBlitz3.ab3@17917>   CMP.b #$1,D2
0002EC66 <AmiBlitz3.ab3@17918>    BEQ.w JL_0_B1CC
0002EC6A <AmiBlitz3.ab3@17919>   CMP.b #$2,D2
0002EC6E <AmiBlitz3.ab3@17920>    BEQ.w JL_0_B1D2
0002EC70 <AmiBlitz3.ab3@17923> RTS
0002EC74 <AmiBlitz3.ab3@17926>   EORI.w #$3000,D1
0002EC76 <AmiBlitz3.ab3@17927> RTS
0002EC7A <AmiBlitz3.ab3@17930>   ORI.w #$1000,D1
0002EC7C <AmiBlitz3.ab3@17931> RTS
0002EC84 <AmiBlitz3.ab3@17935>   MOVE.w #$FFFF,dfetch
0002EC88 <AmiBlitz3.ab3@17936>   BSR.w get1bytemain
0002EC8C <AmiBlitz3.ab3@17937>   CMP.w #$2D,D0
0002EC90 <AmiBlitz3.ab3@17938>    BNE.w JL_0_B206
0002EC94 <AmiBlitz3.ab3@17939>   BSR.w get1bytemain
0002EC98 <AmiBlitz3.ab3@17940>   BSR.w JL_0_B206
0002EC9C <AmiBlitz3.ab3@17941>   CMP.w #$5,D2
0002ECA0 <AmiBlitz3.ab3@17942>    BCC.w JL_0_B200
0002ECA2 <AmiBlitz3.ab3@17943>   NEG.l D0
0002ECA4 <AmiBlitz3.ab3@17944> RTS
0002ECAA <AmiBlitz3.ab3@17947>   TST.b fpu
0002ECAE <AmiBlitz3.ab3@17948>   BEQ 'noneg
0002ECB2 <AmiBlitz3.ab3@17949>   fneg.x fp0
0002ECB4 <AmiBlitz3.ab3@17950> RTS
0002ECB8 <AmiBlitz3.ab3@17953>   BCHG #$7,D0
0002ECBA <AmiBlitz3.ab3@17954> RTS
0002ECBE <AmiBlitz3.ab3@17957>   CMP.w #$24,D0
0002ECC2 <AmiBlitz3.ab3@17958>    BEQ.w get_hexconstant
0002ECC6 <AmiBlitz3.ab3@17959>   CMP.w #$25,D0
0002ECCA <AmiBlitz3.ab3@17960>    BEQ.w JL_0_A8C0
0002ECCE <AmiBlitz3.ab3@17961>   CMP.w #$2E,D0
0002ECD2 <AmiBlitz3.ab3@17962>    BNE.w JL_0_B224
0002ECD4 <AmiBlitz3.ab3@17965>   MOVEQ.l #$00,D3
0002ECD8 <AmiBlitz3.ab3@17966> BRA.w JL_0_B272
0002ECDA <AmiBlitz3.ab3@17969>   MOVEQ.l #$00,D3                                          ;number
0002ECDE <AmiBlitz3.ab3@17970>    BSR.w atoi
0002ECE2 <AmiBlitz3.ab3@17971>   CMP.w #$2E,D0
0002ECE6 <AmiBlitz3.ab3@17972>    BEQ.w JL_0_B268
0002ECEA <AmiBlitz3.ab3@17973>   ORI.w #$20,D0
0002ECEE <AmiBlitz3.ab3@17974>   CMP.w #$65,D0
0002ECF2 <AmiBlitz3.ab3@17975>    BNE.w JL_0_B46E
0002ECF8 <AmiBlitz3.ab3@17976>   CMP.l #$800000,D3
0002ECFC <AmiBlitz3.ab3@17977>    BCC.w overerr
0002ECFE <AmiBlitz3.ab3@17978>   MOVEQ.l #-$01,D6
0002ED02 <AmiBlitz3.ab3@17979>   fmove.l d3,fp0
0002ED04 <AmiBlitz3.ab3@17980>   MOVE.l D3,D0
0002ED0A <AmiBlitz3.ab3@17981>   MOVEA.l _mathffpbase,A6
0002ED0E <AmiBlitz3.ab3@17982>    JSR -$24(A6)
0002ED10 <AmiBlitz3.ab3@17983>   MOVE.l D0,D3
0002ED14 <AmiBlitz3.ab3@17984>    BSR.w JL_0_B2E6
0002ED18 <AmiBlitz3.ab3@17985>    BSR.w reget
0002ED1C <AmiBlitz3.ab3@17986>    BSR.w JL_0_B480
0002ED20 <AmiBlitz3.ab3@17987> BRA.w JL_0_B3DC
0002ED24 <AmiBlitz3.ab3@17990>   CMP.b #4,d2
0002ED28 <AmiBlitz3.ab3@17991>   BEQ 'l4
0002ED2C <AmiBlitz3.ab3@17992>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002ED32 <AmiBlitz3.ab3@17995>    TST.b fpu
0002ED36 <AmiBlitz3.ab3@17996>    BNE 'l1
0002ED3C <AmiBlitz3.ab3@17997>    CMP.l #$800000,D3
0002ED40 <AmiBlitz3.ab3@17998>    BCC.w overerr
0002ED44 <AmiBlitz3.ab3@17999> BRA JL_0_B272
0002ED4A <AmiBlitz3.ab3@18002>   CMP.l #$7fffffff,d3
0002ED4E <AmiBlitz3.ab3@18003>     BCC.w overerr
0002ED50 <AmiBlitz3.ab3@18006>   MOVEQ.l #-$01,D6
0002ED52 <AmiBlitz3.ab3@18007>   MOVE.l D3,D0
0002ED56 <AmiBlitz3.ab3@18008>   fmove.l d3,fp0
0002ED5C <AmiBlitz3.ab3@18009>   MOVEA.l _mathffpbase,A6
0002ED60 <AmiBlitz3.ab3@18010>    JSR -$24(A6)                                            ;integer to ffp
0002ED62 <AmiBlitz3.ab3@18011>   MOVE.l D0,-(A7)
0002ED66 <AmiBlitz3.ab3@18012>    BSR.w get1bytemain
0002ED6A <AmiBlitz3.ab3@18013>    BSR.w tstnum
0002ED6E <AmiBlitz3.ab3@18014>    BNE.w syntaxerr
0002ED70 <AmiBlitz3.ab3@18015>   MOVEQ.l #$00,D3
0002ED74 <AmiBlitz3.ab3@18016>    BSR.w atoi
0002ED76 <AmiBlitz3.ab3@18017>   TST.l D3
0002ED7A <AmiBlitz3.ab3@18018>    BEQ.w JL_0_B2E0
0002ED80 <AmiBlitz3.ab3@18019>   TST.b fpu
0002ED84 <AmiBlitz3.ab3@18020>   BNE 'l1
0002ED8A <AmiBlitz3.ab3@18021>   CMP.l #$800000,D3
0002ED8E <AmiBlitz3.ab3@18022>    BCC.w overerr
0002ED92 <AmiBlitz3.ab3@18023> BRA 'l2
0002ED98 <AmiBlitz3.ab3@18026>   CMP.l #$7fffffff,d3
0002ED9C <AmiBlitz3.ab3@18027>   BCC overerr
0002EDA0 <AmiBlitz3.ab3@18030>   fmove.l d5,fp1
0002EDA2 <AmiBlitz3.ab3@18031>   MOVE.l D5,D0
0002EDA6 <AmiBlitz3.ab3@18032>    JSR -$24(A6)
0002EDA8 <AmiBlitz3.ab3@18033>   MOVE.l D0,D5
0002EDAC <AmiBlitz3.ab3@18034>   fmove.l d3,fp2
0002EDAE <AmiBlitz3.ab3@18035>   MOVE.l D3,D0
0002EDB2 <AmiBlitz3.ab3@18036>    JSR -$24(A6)
0002EDB6 <AmiBlitz3.ab3@18037>   fdiv.x fp1,fp2
0002EDB8 <AmiBlitz3.ab3@18038>   MOVE.l D5,D1
0002EDBC <AmiBlitz3.ab3@18039>    JSR -$54(A6)
0002EDC0 <AmiBlitz3.ab3@18040>   fadd.x fp2,fp0
0002EDC2 <AmiBlitz3.ab3@18041>   MOVE.l (A7)+,D1
0002EDC6 <AmiBlitz3.ab3@18042>    JSR -$42(A6)
0002EDC8 <AmiBlitz3.ab3@18043>   MOVE.l D0,D3
0002EDCC <AmiBlitz3.ab3@18044>    BSR.w reget
0002EDD0 <AmiBlitz3.ab3@18045>   ORI.w #$20,D0
0002EDD4 <AmiBlitz3.ab3@18046>   CMP.w #$65,D0
0002EDD8 <AmiBlitz3.ab3@18047>    BNE.w JL_0_B2D4
0002EDDC <AmiBlitz3.ab3@18048>    BSR.w JL_0_B2E6
0002EDE0 <AmiBlitz3.ab3@18051>    BSR.w reget
0002EDE4 <AmiBlitz3.ab3@18052>    BSR.w JL_0_B480
0002EDE8 <AmiBlitz3.ab3@18053> BRA.w JL_0_B3DC
0002EDEA <AmiBlitz3.ab3@18056>   MOVE.l (A7)+,D3
0002EDEE <AmiBlitz3.ab3@18057> BRA.w JL_0_B2D4
0002EDF2 <AmiBlitz3.ab3@18060>   BSR.w get1bytemain
0002EDF6 <AmiBlitz3.ab3@18061>   CMP.w #$2B,D0
0002EDFA <AmiBlitz3.ab3@18062>    BEQ.w JL_0_B30E
0002EDFE <AmiBlitz3.ab3@18063>   CMP.w #$2D,D0
0002EE02 <AmiBlitz3.ab3@18064>    BNE.w JL_0_B312
0002EE06 <AmiBlitz3.ab3@18065>    BSR.w get1bytemain
0002EE0A <AmiBlitz3.ab3@18066>    BSR.w getsign
0002EE0C <AmiBlitz3.ab3@18067>   MOVE.l D3,D0
0002EE10 <AmiBlitz3.ab3@18068>   fdiv.x fp1,fp0
0002EE12 <AmiBlitz3.ab3@18069>   MOVE.l D4,D1
0002EE16 <AmiBlitz3.ab3@18070>    JSR -$54(A6)
0002EE18 <AmiBlitz3.ab3@18071>   MOVE.l D0,D3
0002EE1A <AmiBlitz3.ab3@18072> RTS
0002EE1E <AmiBlitz3.ab3@18075>   BSR.w get1bytemain
0002EE22 <AmiBlitz3.ab3@18078>   BSR.w getsign
0002EE26 <AmiBlitz3.ab3@18079>   fmul.x fp1,fp0
0002EE28 <AmiBlitz3.ab3@18080>   MOVE.l D3,D0
0002EE2A <AmiBlitz3.ab3@18081>   MOVE.l D4,D1
0002EE2E <AmiBlitz3.ab3@18082>    JSR -$4E(A6)
0002EE30 <AmiBlitz3.ab3@18083>   MOVE.l D0,D3
0002EE32 <AmiBlitz3.ab3@18084> RTS
0002EE36 <AmiBlitz3.ab3@18087>   BSR.w tstnum
0002EE3A <AmiBlitz3.ab3@18088>    BNE.w syntaxerr
0002EE3C <AmiBlitz3.ab3@18089>   MOVE.w D0,D4
0002EE40 <AmiBlitz3.ab3@18090>   SUBI.w #$30,D4
0002EE44 <AmiBlitz3.ab3@18091>    BSR.w get1bytemain
0002EE48 <AmiBlitz3.ab3@18092>    BSR.w tstnum
0002EE4C <AmiBlitz3.ab3@18093>    BNE.w getsign__skip
0002EE50 <AmiBlitz3.ab3@18094>   MULU #$A,D4
0002EE54 <AmiBlitz3.ab3@18095>   SUBI.w #$30,D0
0002EE56 <AmiBlitz3.ab3@18096>   ADD.w D0,D4
0002EE5A <AmiBlitz3.ab3@18097>    BSR.w get1bytemain
0002EE5E <AmiBlitz3.ab3@18100>   CMP.w #$12,D4
0002EE62 <AmiBlitz3.ab3@18101>    BHI.w overerr
0002EE64 <AmiBlitz3.ab3@18102>   LSL.w #3,D4
0002EE6A <AmiBlitz3.ab3@18103>   LEA fputab,a0
0002EE6C <AmiBlitz3.ab3@18104>   ADD.l d4,a0
0002EE72 <AmiBlitz3.ab3@18105>   fmove.d 0(a0),fp1
0002EE74 <AmiBlitz3.ab3@18106>   LSR.w #1,d4
0002EE78 <AmiBlitz3.ab3@18107>   MOVE.l facts(PC,D4.W),D4
0002EE7A <AmiBlitz3.ab3@18108> RTS
0002EEC2 <AmiBlitz3.ab3@18112>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002EEC6 <AmiBlitz3.ab3@18117>   Dc.l $80000041
0002EECA <AmiBlitz3.ab3@18118>   Dc.l $A0000044
0002EECE <AmiBlitz3.ab3@18119>   Dc.l $C8000047
0002EED2 <AmiBlitz3.ab3@18120>   Dc.l $FA00004A
0002EED6 <AmiBlitz3.ab3@18121>   Dc.l $9C40004E
0002EEDA <AmiBlitz3.ab3@18122>   Dc.l $C3500051
0002EEDE <AmiBlitz3.ab3@18123>   Dc.l $F4240054
0002EEE2 <AmiBlitz3.ab3@18124>   Dc.l $98968058
0002EEE6 <AmiBlitz3.ab3@18125>   Dc.l $BEBC205B
0002EEEA <AmiBlitz3.ab3@18126>   Dc.l $EE6B285E
0002EEEE <AmiBlitz3.ab3@18127>   Dc.l $9502F962
0002EEF2 <AmiBlitz3.ab3@18128>   Dc.l $BA43B765
0002EEF6 <AmiBlitz3.ab3@18129>   Dc.l $E8D4A568
0002EEFA <AmiBlitz3.ab3@18130>   Dc.l $9184E76C
0002EEFE <AmiBlitz3.ab3@18131>   Dc.l $B5E6A96F
0002EF02 <AmiBlitz3.ab3@18132>   Dc.l $E35F2972
0002EF06 <AmiBlitz3.ab3@18133>   Dc.l $8E1BCA76
0002EF0A <AmiBlitz3.ab3@18134>   Dc.l $B1A2BD79
0002EF0E <AmiBlitz3.ab3@18135>   Dc.l $DE0B6C7C
0002EF10 <AmiBlitz3.ab3@18139>   MOVEQ.l #$01,D5
0002EF12 <AmiBlitz3.ab3@18142>   LSL.l #1,D5
0002EF14 <AmiBlitz3.ab3@18143>   MOVE.l D5,D1
0002EF16 <AmiBlitz3.ab3@18144>   LSL.l #2,D5
0002EF18 <AmiBlitz3.ab3@18145>   ADD.l D1,D5                                              ;divisor for frac convert!
0002EF1A <AmiBlitz3.ab3@18146>   LSL.l #1,D3
0002EF1E <AmiBlitz3.ab3@18147>    BCS.w overerr
0002EF20 <AmiBlitz3.ab3@18148>   MOVE.l D3,D1
0002EF22 <AmiBlitz3.ab3@18149>   LSL.l #1,D3
0002EF26 <AmiBlitz3.ab3@18150>    BCS.w overerr
0002EF28 <AmiBlitz3.ab3@18151>   LSL.l #1,D3
0002EF2C <AmiBlitz3.ab3@18152>    BCS.w overerr
0002EF2E <AmiBlitz3.ab3@18153>   ADD.l D1,D3
0002EF32 <AmiBlitz3.ab3@18154>   SUBI.w #$30,D0
0002EF34 <AmiBlitz3.ab3@18155>   ADD.l D0,D3
0002EF60 <AmiBlitz3.ab3@18156>    !fget                                                   ;bsr.w get1bytemain
0002EF64 <AmiBlitz3.ab3@18157>    CMP.b #1,d0
0002EF68 <AmiBlitz3.ab3@18158>    BNE 'cm1
0002EF6A <AmiBlitz3.ab3@18159>    SUBQ.l #1,a5
0002EF6E <AmiBlitz3.ab3@18160>    BSR get1bytemain                                        ;??wy not !fget
0002EF72 <AmiBlitz3.ab3@18163>   CMP.b #$7e,d0
0002EF76 <AmiBlitz3.ab3@18164>    BNE 'cm2
0002EF78 <AmiBlitz3.ab3@18165>    SUBQ.l #1,a5
0002EF7C <AmiBlitz3.ab3@18166>    BSR get1bytemain
0002EF7E <AmiBlitz3.ab3@18169>   TST.b d0
0002EF82 <AmiBlitz3.ab3@18170>    BPL 'l10
0002EF84 <AmiBlitz3.ab3@18171>    LSL.w #8,d0
0002EF86 <AmiBlitz3.ab3@18172>    MOVE.b (a5)+,d0
0002EF8C <AmiBlitz3.ab3@18173>    MOVE.w d0,lastchar
0002EF9E <AmiBlitz3.ab3@18176>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002EFA2 <AmiBlitz3.ab3@18177>    BEQ.w atoi__loop
0002EFA4 <AmiBlitz3.ab3@18178> RTS
0002EFA6 <AmiBlitz3.ab3@18181> dfetch:  Ds.w 1                                            ;fetching data?
0002EFAA <AmiBlitz3.ab3@18185>   MOVE.w dfetch(PC),D1
0002EFAE <AmiBlitz3.ab3@18186>    BEQ.w JL_0_B3EC
0002EFB4 <AmiBlitz3.ab3@18187>   CLR.w dfetch
0002EFB6 <AmiBlitz3.ab3@18188> RTS
0002EFBC <AmiBlitz3.ab3@18191>   MOVE.b d2,isconstantvalue
0002EFC2 <AmiBlitz3.ab3@18192>   MOVE.l d0,lastconstantvalue
0002EFC8 <AmiBlitz3.ab3@18193>   MOVE.w d2,imm_size
0002EFD2 <AmiBlitz3.ab3@18194>   MOVE.w regnum,imm_reg
0002EFDC <AmiBlitz3.ab3@18195>   MOVE.l destpointer,imm_addr                           ; long
0002EFE0 <AmiBlitz3.ab3@18196>   CMP.w #$3,D2
0002EFE4 <AmiBlitz3.ab3@18197>   BEQ.w JL_0_B434
0002EFE8 <AmiBlitz3.ab3@18198>   CMP.w #$5,D2                                          ;float
0002EFEC <AmiBlitz3.ab3@18199>   BEQ.w JL_0_B434
0002EFF0 <AmiBlitz3.ab3@18200>   CMP.w #$1,D2
0002EFF4 <AmiBlitz3.ab3@18201>   BEQ.w JL_0_B418
0002EFF8 <AmiBlitz3.ab3@18202>   CMP.w #$2,D2
0002EFFC <AmiBlitz3.ab3@18203>   BEQ.w JL_0_B418
0002F000 <AmiBlitz3.ab3@18204>   CMP.w #$4,D2
0002F004 <AmiBlitz3.ab3@18205>   BEQ.w JL_0_B434
0002F008 <AmiBlitz3.ab3@18207> BRA.w mismatcherr
0002F00E <AmiBlitz3.ab3@18210>   MOVE.w regnum,D1
0002F010 <AmiBlitz3.ab3@18211>   LSL.w #8,D1
0002F012 <AmiBlitz3.ab3@18212>   LSL.w #1,D1
0002F016 <AmiBlitz3.ab3@18213>   ORI.w #$303C,D1
0002F01A <AmiBlitz3.ab3@18214>    BSR.w writeword
0002F01C <AmiBlitz3.ab3@18215>   MOVE.w D0,D1
0002F020 <AmiBlitz3.ab3@18216>    BSR.w writeword
0002F024 <AmiBlitz3.ab3@18217> BRA.w reget
0002F026 <AmiBlitz3.ab3@18220>   MOVEQ #0,d1
0002F02C <AmiBlitz3.ab3@18221>   MOVE.w regnum,D1
0002F032 <AmiBlitz3.ab3@18222>   TST.b fpu
0002F036 <AmiBlitz3.ab3@18223>   BEQ 'f1
0002F03A <AmiBlitz3.ab3@18224>   CMP.w #5,d2
0002F03E <AmiBlitz3.ab3@18225>   BEQ 'l10
0002F042 <AmiBlitz3.ab3@18226> BRA 'f2
0002F048 <AmiBlitz3.ab3@18229>   TST.b iee
0002F04C <AmiBlitz3.ab3@18230>   BNE 'l10
0002F04E <AmiBlitz3.ab3@18233>   LSL.w #8,D1
0002F050 <AmiBlitz3.ab3@18234>   LSL.w #1,D1
0002F054 <AmiBlitz3.ab3@18235>   ORI.w #$203C,D1
0002F058 <AmiBlitz3.ab3@18236>    BSR.w writeword
0002F05A <AmiBlitz3.ab3@18237>   MOVE.l D0,D1
0002F05E <AmiBlitz3.ab3@18238>    BSR.w writelong
0002F062 <AmiBlitz3.ab3@18239> BRA.w reget
0002F064 <AmiBlitz3.ab3@18242>   MOVEQ #5,d2
0002F066 <AmiBlitz3.ab3@18243>   ASL.l #7,d1
0002F068 <AmiBlitz3.ab3@18244>   SUBQ.l #8,a7
0002F06E <AmiBlitz3.ab3@18249>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F074 <AmiBlitz3.ab3@18250>        fmove.s fp0,0(a7)
0002F078 <AmiBlitz3.ab3@18252>   BSR writelong
0002F07A <AmiBlitz3.ab3@18253>   MOVE.l (a7)+,d1
0002F07E <AmiBlitz3.ab3@18254>   BSR writelong
0002F080 <AmiBlitz3.ab3@18255>   MOVE.l (a7)+,d1
0002F084 <AmiBlitz3.ab3@18259> BRA.w reget
0002F086 <AmiBlitz3.ab3@18265>  MOVE.l D3,D0
0002F088 <AmiBlitz3.ab3@18266>   TST.w D6
0002F08C <AmiBlitz3.ab3@18267>    BEQ.w JL_0_B46C
0002F092 <AmiBlitz3.ab3@18268>   MOVEA.l _mathffpbase,A6
0002F096 <AmiBlitz3.ab3@18269>    JSR -$1E(A6)
0002F09A <AmiBlitz3.ab3@18270>    BVC.w JL_0_B46C
0002F09C <AmiBlitz3.ab3@18271>   ADDQ.w #4,A7
0002F0A0 <AmiBlitz3.ab3@18272> BRA.w JL_0_B5A0
0002F0A2 <AmiBlitz3.ab3@18275> RTS
0002F0A4 <AmiBlitz3.ab3@18279>   MOVEQ.l #$00,D6
0002F0A8 <AmiBlitz3.ab3@18280>    fmove.l d3,fp0
0002F0AC <AmiBlitz3.ab3@18283>   BSR.w JL_0_B480
0002F0B0 <AmiBlitz3.ab3@18284> BRA.w JL_0_B3DC
0002F0B2 <AmiBlitz3.ab3@18287>   MOVE.w D2,-(A7)
0002F0B6 <AmiBlitz3.ab3@18288>    BSR.w JL_0_BF6A
0002F0B8 <AmiBlitz3.ab3@18289>   MOVE.w (A7)+,D2
0002F0BA <AmiBlitz3.ab3@18292>   TST.w D2
0002F0BE <AmiBlitz3.ab3@18293>    BNE.w JL_0_B498
0002F0C0 <AmiBlitz3.ab3@18294>   TST.w D6
0002F0C4 <AmiBlitz3.ab3@18295>    BEQ.w JL_0_B492
0002F0C6 <AmiBlitz3.ab3@18296>   MOVEQ.l #$04,D2
0002F0CA <AmiBlitz3.ab3@18297> BRA.w JL_0_B510
0002F0CC <AmiBlitz3.ab3@18300>   MOVEQ.l #$02,D2
0002F0D0 <AmiBlitz3.ab3@18301> BRA.w JL_0_B4C4
0002F0D4 <AmiBlitz3.ab3@18304>   CMP.w #$1,D2
0002F0D8 <AmiBlitz3.ab3@18305>    BEQ.w JL_0_B4C4
0002F0DC <AmiBlitz3.ab3@18306>   CMP.w #$2,D2
0002F0E0 <AmiBlitz3.ab3@18307>    BEQ.w JL_0_B4F8
0002F0E4 <AmiBlitz3.ab3@18308>   CMP.w #$3,D2
0002F0E8 <AmiBlitz3.ab3@18309>    BEQ.w JL_0_B57A
0002F0EC <AmiBlitz3.ab3@18310>   CMP.w #$4,D2
0002F0F0 <AmiBlitz3.ab3@18311>    BEQ.w JL_0_B506
0002F0F4 <AmiBlitz3.ab3@18312>   CMP.w #$5,D2
0002F0F8 <AmiBlitz3.ab3@18313>    BEQ.w JL_0_B586
0002F0FC <AmiBlitz3.ab3@18314> BRA.w mismatcherr
0002F100 <AmiBlitz3.ab3@18317>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F106 <AmiBlitz3.ab3@18318>   CMP.l #$7f,D0
0002F10A <AmiBlitz3.ab3@18319>    BGT.w JL_0_B4DC
0002F110 <AmiBlitz3.ab3@18320>   CMP.l #$FFFFFF80,D0
0002F114 <AmiBlitz3.ab3@18321>    BGE.w JL_0_B59E
0002F116 <AmiBlitz3.ab3@18324>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F11C <AmiBlitz3.ab3@18325>   CMP.l #$7fff,D0
0002F120 <AmiBlitz3.ab3@18326>    BGT.w JL_0_B4F2
0002F126 <AmiBlitz3.ab3@18327>   CMP.l #$FFFF8000,D0
0002F12A <AmiBlitz3.ab3@18328>    BGE.w JL_0_B59E
0002F12C <AmiBlitz3.ab3@18331>   MOVEQ.l #$03,D2
0002F130 <AmiBlitz3.ab3@18332> BRA.w JL_0_B59E
0002F132 <AmiBlitz3.ab3@18358>   TST.w D6
0002F136 <AmiBlitz3.ab3@18359>    BNE.w JL_0_B510
0002F13A <AmiBlitz3.ab3@18360>    BSR.w JL_0_B450
0002F13E <AmiBlitz3.ab3@18361> BRA.w JL_0_B4DC
0002F142 <AmiBlitz3.ab3@18364>   BSR.w JL_0_B450
0002F144 <AmiBlitz3.ab3@18365>   TST.w D6
0002F148 <AmiBlitz3.ab3@18366>   BEQ.w JL_0_B560
0002F14E <AmiBlitz3.ab3@18369>   CMP.l #MaxWordSgnd,D0
0002F152 <AmiBlitz3.ab3@18370>    BGT.w JL_0_B5A0
0002F158 <AmiBlitz3.ab3@18371>   CMP.l #$FFFF8000,D0
0002F15C <AmiBlitz3.ab3@18372>    BLT.w JL_0_B5A0
0002F15E <AmiBlitz3.ab3@18373>   MOVE.w D0,-(A7)
0002F162 <AmiBlitz3.ab3@18374>    JSR -$24(A6)
0002F164 <AmiBlitz3.ab3@18375>   MOVE.l D0,D1
0002F166 <AmiBlitz3.ab3@18376>   MOVE.l D3,D0
0002F16A <AmiBlitz3.ab3@18377>    JSR -$48(A6)
0002F170 <AmiBlitz3.ab3@18378>   MOVE.l #$80000051,D1
0002F174 <AmiBlitz3.ab3@18379>    JSR -$4E(A6)
0002F178 <AmiBlitz3.ab3@18380>    JSR -$1E(A6)
0002F17C <AmiBlitz3.ab3@18381>    BEQ.w JL_0_B55A
0002F182 <AmiBlitz3.ab3@18382>   CMP.l #$10000,D0
0002F186 <AmiBlitz3.ab3@18383>    BCC.w JL_0_B55A
0002F188 <AmiBlitz3.ab3@18384>   MOVE.w D0,D1
0002F18A <AmiBlitz3.ab3@18385>   MOVE.w (A7)+,D0
0002F18C <AmiBlitz3.ab3@18386>   SWAP D0
0002F18E <AmiBlitz3.ab3@18387>   MOVE.w D1,D0
0002F192 <AmiBlitz3.ab3@18388> BRA.w JL_0_B59E
0002F194 <AmiBlitz3.ab3@18391>   ADDQ.w #2,A7
0002F198 <AmiBlitz3.ab3@18392> BRA.w JL_0_B5A0
0002F19E <AmiBlitz3.ab3@18395>   CMP.l #MaxWordSgnd,D0
0002F1A2 <AmiBlitz3.ab3@18396>    BGT.w JL_0_B4F2
0002F1A8 <AmiBlitz3.ab3@18397>   CMP.l #$FFFF8000,D0
0002F1AC <AmiBlitz3.ab3@18398>    BLT.w JL_0_B4F2
0002F1AE <AmiBlitz3.ab3@18399>   SWAP D0
0002F1B2 <AmiBlitz3.ab3@18400> BRA.w JL_0_B59E
0002F1B4 <AmiBlitz3.ab3@18403>   TST.w D6
0002F1B8 <AmiBlitz3.ab3@18404>   BNE.w JL_0_B5A0
0002F1BA <AmiBlitz3.ab3@18405>   MOVE.l D3,D0
0002F1BE <AmiBlitz3.ab3@18406> BRA.w JL_0_B59E
0002F1C0 <AmiBlitz3.ab3@18409>   TST.w D6
0002F1C4 <AmiBlitz3.ab3@18410>   BNE.w JL_0_B5A0
0002F1C6 <AmiBlitz3.ab3@18411>   MOVE.l D3,D0
0002F1CC <AmiBlitz3.ab3@18412>   MOVEA.l _mathffpbase,A6
0002F1D0 <AmiBlitz3.ab3@18413>   JSR -$24(A6)
0002F1D2 <AmiBlitz3.ab3@18414>   MOVE.l D0,D3
0002F1D6 <AmiBlitz3.ab3@18415> BRA.w JL_0_B5A0
0002F1D8 <AmiBlitz3.ab3@18418> RTS
0002F1DA <AmiBlitz3.ab3@18421>   MOVEQ.l #$05,D2
0002F1DC <AmiBlitz3.ab3@18422>   MOVE.l D3,D0
0002F1DE <AmiBlitz3.ab3@18423> RTS
0002F1E2 <AmiBlitz3.ab3@18427>             Ds.l 1                                         ;??Looks like unused data??
0002F1E6 <AmiBlitz3.ab3@18428> pushpc:     Ds.l 1
0002F1EA <AmiBlitz3.ab3@18429> pushoff:    Ds.l 1
0002F1EE <AmiBlitz3.ab3@18430> pushdooff:  Ds.l 1
0002F1F0 <AmiBlitz3.ab3@18431> pushclen:   Ds.w 1
0002F1F4 <AmiBlitz3.ab3@18432> pushat:     Ds.l 1
0002F1FE <AmiBlitz3.ab3@18436>   MOVE.l destpointer,pushpc
0002F208 <AmiBlitz3.ab3@18437>   MOVE.l hunkoffsetbase,pushoff
0002F20A <AmiBlitz3.ab3@18438> RTS
0002F20E <AmiBlitz3.ab3@18442>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F214 <AmiBlitz3.ab3@18443>   MOVE.l destpointer,D0
0002F218 <AmiBlitz3.ab3@18444>   MOVE.l pushpc(PC),D1
0002F21E <AmiBlitz3.ab3@18445>   MOVE.l D1,destpointer
0002F220 <AmiBlitz3.ab3@18446>   SUB.l D1,D0
0002F226 <AmiBlitz3.ab3@18447>   MOVE.w D0,pushclen
0002F22A <AmiBlitz3.ab3@18448>    BEQ.w JL_0_B636
0002F230 <AmiBlitz3.ab3@18449>   MOVE.w dontwrite,D1
0002F234 <AmiBlitz3.ab3@18450>    BNE.w JL_0_B636
0002F23C <AmiBlitz3.ab3@18451>    CMP.w #1000,pushclen
0002F240 <AmiBlitz3.ab3@18452>    BGE conmemerr
0002F246 <AmiBlitz3.ab3@18453>    MOVE.l pushat,d0
0002F24A <AmiBlitz3.ab3@18454>    BNE 'nomem
0002F250 <AmiBlitz3.ab3@18455>    MOVE.l #1024,d0
0002F252 <AmiBlitz3.ab3@18456>   MOVEQ.l #$01,D1
0002F258 <AmiBlitz3.ab3@18457>   MOVEA.l _execbase,A6
0002F25E <AmiBlitz3.ab3@18458>   MOVE.l mempool,a0
0002F262 <AmiBlitz3.ab3@18459>   JSR _AllocPooled(a6)
0002F268 <AmiBlitz3.ab3@18461>   MOVE.l D0,pushat
0002F26A <AmiBlitz3.ab3@18464>   MOVEA.l D0,A0
0002F270 <AmiBlitz3.ab3@18465>   MOVEA.l pushpc,A1
0002F276 <AmiBlitz3.ab3@18466>   MOVE.l A1,destpointer
0002F27C <AmiBlitz3.ab3@18467>   MOVE.w pushclen,D0
0002F27E <AmiBlitz3.ab3@18468>   LSR.w #1,D0
0002F280 <AmiBlitz3.ab3@18469>   SUBQ.w #1,D0
0002F282 <AmiBlitz3.ab3@18472>     MOVE.w (A1)+,(A0)+
0002F286 <AmiBlitz3.ab3@18473>   DBF D0,JL_0_B626
0002F290 <AmiBlitz3.ab3@18475>    MOVE.l hunkoffsetbase,pushdooff
0002F294 <AmiBlitz3.ab3@18478>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F296 <AmiBlitz3.ab3@18479> RTS
0002F29A <AmiBlitz3.ab3@18483>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F29C <AmiBlitz3.ab3@18484>   MOVEQ.l #$00,D0
0002F2A2 <AmiBlitz3.ab3@18485>   MOVE.w pushclen,D0
0002F2A6 <AmiBlitz3.ab3@18486>    BEQ.w JL_0_B6D8
0002F2AC <AmiBlitz3.ab3@18487>   MOVE.l destpointer,D1
0002F2B2 <AmiBlitz3.ab3@18488>   ADD.l D0,destpointer
0002F2B8 <AmiBlitz3.ab3@18489>   TST.w dontwrite
0002F2BC <AmiBlitz3.ab3@18490>    BNE.w JL_0_B6D8
0002F2BE <AmiBlitz3.ab3@18491>   LSR.w #1,D0
0002F2C0 <AmiBlitz3.ab3@18492>   SUBQ.w #1,D0
0002F2C2 <AmiBlitz3.ab3@18493>   MOVEA.l D1,A1
0002F2C8 <AmiBlitz3.ab3@18494>   MOVEA.l pushat,A0
0002F2CE <AmiBlitz3.ab3@18497>     CMPA.l destbufferend,A1
0002F2D2 <AmiBlitz3.ab3@18498>     BCS.w JL_0_B684
0002F2DA <AmiBlitz3.ab3@18500>     MOVE.w #$FFFF,dontwrite
0002F2DE <AmiBlitz3.ab3@18501>   BRA.w JL_0_B6D8
0002F2E0 <AmiBlitz3.ab3@18504>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F2E4 <AmiBlitz3.ab3@18505>   DBF D0,JL_0_B66E
0002F2EA <AmiBlitz3.ab3@18507>   SUB.l pushpc,D1
0002F2EE <AmiBlitz3.ab3@18508>   BEQ.w JL_0_B6C2
0002F2F4 <AmiBlitz3.ab3@18509>   MOVEA.l pushdooff,A0
0002F2FA <AmiBlitz3.ab3@18512>   CMPA.l pushoff,A0
0002F2FE <AmiBlitz3.ab3@18513>   BEQ.w JL_0_B6C2
0002F302 <AmiBlitz3.ab3@18514>   MOVEA.l $4(A0),A1
0002F308 <AmiBlitz3.ab3@18515>   ADDA.l destbufferstart,A1
0002F30E <AmiBlitz3.ab3@18516>   CMPA.l destbufferend,A1
0002F312 <AmiBlitz3.ab3@18517>   BCC.w JL_0_B6BC
0002F316 <AmiBlitz3.ab3@18518>   ADD.l D1,$4(A0)
0002F318 <AmiBlitz3.ab3@18521>   MOVEA.l (A0),A0
0002F31C <AmiBlitz3.ab3@18522> BRA.w JL_0_B69A
0002F322 <AmiBlitz3.ab3@18525>   MOVEA.l pushat,A1
0002F324 <AmiBlitz3.ab3@18526>   MOVEQ.l #$00,D0
0002F32A <AmiBlitz3.ab3@18527>   MOVE.w pushclen,D0
0002F330 <AmiBlitz3.ab3@18528>   MOVEA.l _execbase,A6
0002F336 <AmiBlitz3.ab3@18529>   MOVE.l mempool,a0
0002F33A <AmiBlitz3.ab3@18533>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F33C <AmiBlitz3.ab3@18534> RTS
0002F33E <AmiBlitz3.ab3@18537>   MOVE.l D1,-(A7)                                          ;array mul
0002F340 <AmiBlitz3.ab3@18538>   MOVEQ.l #$00,D2
0002F342 <AmiBlitz3.ab3@18539>   MOVEQ.l #$0F,D3
0002F344 <AmiBlitz3.ab3@18542>     LSL.w #1,D1
0002F348 <AmiBlitz3.ab3@18543>     BCC.w JL_0_B6EE
0002F34A <AmiBlitz3.ab3@18544>     ADDQ.w #1,D2
0002F34C <AmiBlitz3.ab3@18545>     MOVE.w D3,D4
0002F350 <AmiBlitz3.ab3@18548>   DBF D3,JL_0_B6E4
0002F352 <AmiBlitz3.ab3@18550>   SUBQ.w #1,D2
0002F356 <AmiBlitz3.ab3@18551>    BNE.w JL_0_B726
0002F358 <AmiBlitz3.ab3@18552>   ADDQ.w #4,A7
0002F35A <AmiBlitz3.ab3@18553>   MOVE.w D4,D1
0002F35E <AmiBlitz3.ab3@18554>    BEQ.w JL_0_B724
0002F362 <AmiBlitz3.ab3@18555>   CMP.w #$8,D1
0002F366 <AmiBlitz3.ab3@18556>    BCS.w JL_0_B712
0002F36A <AmiBlitz3.ab3@18557>   SUBI.w #$8,D1
0002F36E <AmiBlitz3.ab3@18558>    BSR.w JL_0_B712
0002F370 <AmiBlitz3.ab3@18559>   MOVEQ.l #$00,D1
0002F372 <AmiBlitz3.ab3@18562>   LSL.w #8,D1
0002F374 <AmiBlitz3.ab3@18563>   LSL.w #1,D1
0002F378 <AmiBlitz3.ab3@18564>   ORI.w #$E188,D1
0002F37E <AmiBlitz3.ab3@18565>   OR.w regnum,D1
0002F382 <AmiBlitz3.ab3@18566> BRA.w writeword
0002F384 <AmiBlitz3.ab3@18569> RTS
0002F386 <AmiBlitz3.ab3@18572>   MOVEQ #0,d1
0002F38C <AmiBlitz3.ab3@18573>   MOVE.w regnum,D1
0002F38E <AmiBlitz3.ab3@18574>   LSL.l #8,D1
0002F390 <AmiBlitz3.ab3@18576>   LSL.l #4,d1
0002F396 <AmiBlitz3.ab3@18578>   OR.l #$4c3c0000,d1
0002F39C <AmiBlitz3.ab3@18579>   OR.w regnum,d1
0002F3A0 <AmiBlitz3.ab3@18580>   BSR.w writelong
0002F3A2 <AmiBlitz3.ab3@18581>   MOVE.l (A7)+,D1
0002F3A6 <AmiBlitz3.ab3@18583> BRA writelong
0002F3AC <AmiBlitz3.ab3@18586>   MOVE.l destpointer,-(A7)
0002F3AE <AmiBlitz3.ab3@18587>   MOVEQ.l #-$01,D7
0002F3B2 <AmiBlitz3.ab3@18590>     BSR.w findhilib
0002F3B6 <AmiBlitz3.ab3@18591>      BEQ.w JL_0_B8A4
0002F3BA <AmiBlitz3.ab3@18592>     TST.w $C(A2)
0002F3BE <AmiBlitz3.ab3@18593>      BPL.w JL_0_B746
0002F3C2 <AmiBlitz3.ab3@18595>     MOVE.l $16(A2),D1
0002F3C6 <AmiBlitz3.ab3@18596>     BEQ.w JL_0_B746
0002F3CA <AmiBlitz3.ab3@18598>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F3CE <AmiBlitz3.ab3@18599>     CMP.w #-$2,D1
0002F3D2 <AmiBlitz3.ab3@18600>      BNE.w JL_0_B772
0002F3D6 <AmiBlitz3.ab3@18601>     BSR.w makevsize
0002F3DA <AmiBlitz3.ab3@18602> BRA.w JL_0_B7FE
0002F3DE <AmiBlitz3.ab3@18605>     CMP.w #-$5C4,D1
0002F3E2 <AmiBlitz3.ab3@18606>      BNE.w JL_0_B790
0002F3E6 <AmiBlitz3.ab3@18607>     MOVE.w #$7000,D1
0002F3EE <AmiBlitz3.ab3@18608>     BTST #$7,autorun
0002F3F0 <AmiBlitz3.ab3@18609>     SNE D1
0002F3F4 <AmiBlitz3.ab3@18610>     BSR.w writeword
0002F3F8 <AmiBlitz3.ab3@18611> BRA.w JL_0_B7FE
0002F3FC <AmiBlitz3.ab3@18614>     CMP.w #-$12D,D1
0002F400 <AmiBlitz3.ab3@18615>      BNE.w JL_0_B7A0
0002F404 <AmiBlitz3.ab3@18616>     BSR.w makessize
0002F408 <AmiBlitz3.ab3@18617> BRA.w JL_0_B7FE
0002F40C <AmiBlitz3.ab3@18620>     CMP.w #-$1F5,D1
0002F410 <AmiBlitz3.ab3@18621>      BNE.w JL_0_B7C2
0002F414 <AmiBlitz3.ab3@18622>     MOVE.w #$203C,D1
0002F418 <AmiBlitz3.ab3@18623>     BSR.w writeword
0002F41C <AmiBlitz3.ab3@18624>     BSR.w addoff
0002F422 <AmiBlitz3.ab3@18625>     MOVE.l endop,D1
0002F426 <AmiBlitz3.ab3@18626>     BSR.w writelong
0002F42A <AmiBlitz3.ab3@18627> BRA.w JL_0_B7FE
0002F42E <AmiBlitz3.ab3@18630>     CMP.w #-$3E9,D1
0002F432 <AmiBlitz3.ab3@18631>      BNE.w JL_0_B7E4
0002F436 <AmiBlitz3.ab3@18632>     MOVE.w #$203C,D1
0002F43A <AmiBlitz3.ab3@18633>     BSR.w writeword
0002F43E <AmiBlitz3.ab3@18634>     BSR.w addoff
0002F444 <AmiBlitz3.ab3@18635>     MOVE.l data2at,D1
0002F448 <AmiBlitz3.ab3@18636>     BSR.w writelong
0002F44C <AmiBlitz3.ab3@18637> BRA.w JL_0_B7FE
0002F450 <AmiBlitz3.ab3@18640>     CMP.w #$1,D1
0002F454 <AmiBlitz3.ab3@18641>      BNE.w JL_0_B7FE
0002F458 <AmiBlitz3.ab3@18642>     MOVE.w #$203C,D1
0002F45C <AmiBlitz3.ab3@18643>     BSR.w writeword
0002F462 <AmiBlitz3.ab3@18644>     MOVE.l ptr_seg_debugger,D1
0002F466 <AmiBlitz3.ab3@18645>     BSR.w writelong
0002F46A <AmiBlitz3.ab3@18648>     MOVE.l $16(A2),D1
0002F472 <AmiBlitz3.ab3@18649>     MOVE.w #$FFFF,lasta6
0002F476 <AmiBlitz3.ab3@18650>     BSR.w Amakelibsub
0002F47C <AmiBlitz3.ab3@18651>     CMPI.w #$FFFE,$4(A2)
0002F480 <AmiBlitz3.ab3@18652>      BNE.w JL_0_B83A
0002F486 <AmiBlitz3.ab3@18653>     MOVE.l intdata1,D1
0002F48A <AmiBlitz3.ab3@18654>      BEQ.w JL_0_B83A
0002F490 <AmiBlitz3.ab3@18655>     MOVE.w putidata1,D1
0002F494 <AmiBlitz3.ab3@18656>     BSR.w writeword
0002F498 <AmiBlitz3.ab3@18657>     BSR.w addoff
0002F49E <AmiBlitz3.ab3@18658>     MOVE.l intdata1,D1
0002F4A2 <AmiBlitz3.ab3@18659>     BSR.w writelong
0002F4A6 <AmiBlitz3.ab3@18662>     MOVE.w #$2B40,D1
0002F4AA <AmiBlitz3.ab3@18663>     TST.w $1A(A2)
0002F4AE <AmiBlitz3.ab3@18664>      BEQ.w JL_0_B746
0002F4B2 <AmiBlitz3.ab3@18665>      BPL.w JL_0_B84E
0002F4B6 <AmiBlitz3.ab3@18666>     MOVE.w #$3B40,D1
0002F4BA <AmiBlitz3.ab3@18669>     BSR.w writeword
0002F4BE <AmiBlitz3.ab3@18670>     MOVE.w $A(A2),D1
0002F4C2 <AmiBlitz3.ab3@18671>      BSR.w writeword
0002F4C8 <AmiBlitz3.ab3@18672>     CMPI.w #$FFFA,$4(A2)
0002F4CC <AmiBlitz3.ab3@18673>      BNE.w JL_0_B746
0002F4CE <AmiBlitz3.ab3@18674>     MOVE.w D7,-(A7)
0002F4D4 <AmiBlitz3.ab3@18675>     MOVE.w numstatic,D4
0002F4D8 <AmiBlitz3.ab3@18676>      BEQ.w JL_0_B882
0002F4DE <AmiBlitz3.ab3@18677>     MOVE.l staticdata,D3
0002F4E4 <AmiBlitz3.ab3@18678>      JSR datastart
0002F4E8 <AmiBlitz3.ab3@18679>     MOVE.w #$C500,D1
0002F4EC <AmiBlitz3.ab3@18680>      BSR.w tokejsr2
0002F4F2 <AmiBlitz3.ab3@18683>     MOVE.w maxsused,D4
0002F4F6 <AmiBlitz3.ab3@18684>      BEQ.w JL_0_B89E
0002F4FC <AmiBlitz3.ab3@18685>     MOVE.l maxsat,D3
0002F502 <AmiBlitz3.ab3@18686>      JSR datastart
0002F506 <AmiBlitz3.ab3@18687>     MOVE.w #$CF00,D1
0002F50A <AmiBlitz3.ab3@18688>      BSR.w tokejsr2
0002F50C <AmiBlitz3.ab3@18691>     MOVE.w (A7)+,D7
0002F510 <AmiBlitz3.ab3@18692> BRA.w JL_0_B746
0002F516 <AmiBlitz3.ab3@18695>   MOVE.l destpointer,D1
0002F518 <AmiBlitz3.ab3@18696>   CMP.l (A7),D1
0002F51C <AmiBlitz3.ab3@18697>    BNE.w JL_0_B8BC
0002F524 <AmiBlitz3.ab3@18698>   MOVE.w #$0008,noinits+2
0002F528 <AmiBlitz3.ab3@18699> BRA.w JL_0_B8E6
0002F52E <AmiBlitz3.ab3@18702>   CLR.w noinits+2
0002F534 <AmiBlitz3.ab3@18703>   MOVE.w dontwrite,D1
0002F538 <AmiBlitz3.ab3@18704>    BNE.w JL_0_B8DE
0002F53E <AmiBlitz3.ab3@18705>   TST.l newinitaddr
0002F542 <AmiBlitz3.ab3@18706>    BEQ 'l10
0002F548 <AmiBlitz3.ab3@18707>   MOVE.l newinitaddr,D2
0002F54E <AmiBlitz3.ab3@18708>   SUB.l destbufferstart,D2
0002F550 <AmiBlitz3.ab3@18709>   ADDQ.l #2,d2
0002F556 <AmiBlitz3.ab3@18710>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F55A <AmiBlitz3.ab3@18712>   MOVE.w #$4EB9,(A0)+
0002F55C <AmiBlitz3.ab3@18713>   MOVE.l (A7),(A0)+
0002F560 <AmiBlitz3.ab3@18715> BRA 'l20
0002F566 <AmiBlitz3.ab3@18718>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F56C <AmiBlitz3.ab3@18719>   TST.b saved0
0002F570 <AmiBlitz3.ab3@18720>   BEQ 'l1
0002F574 <AmiBlitz3.ab3@18721>   MOVE.w #$23c0,(a0)+
0002F576 <AmiBlitz3.ab3@18722>   MOVE.l a0,a1
0002F578 <AmiBlitz3.ab3@18723>   ADDQ.l #6,a1
0002F57A <AmiBlitz3.ab3@18724>   MOVE.l a1,(a0)+
0002F57C <AmiBlitz3.ab3@18725>   MOVEQ.l #$02,D2
0002F580 <AmiBlitz3.ab3@18726>   BSR.w addhunkoffset
0002F584 <AmiBlitz3.ab3@18727>   MOVE.w #$6004,(a0)+
0002F58A <AmiBlitz3.ab3@18728>   MOVE.l #$4e714e71,(a0)+
0002F58E <AmiBlitz3.ab3@18731>   MOVE.w #$4EB9,(A0)+
0002F590 <AmiBlitz3.ab3@18732>   MOVE.l (A7),(A0)+
0002F592 <AmiBlitz3.ab3@18733>   MOVEQ #2,d2
0002F598 <AmiBlitz3.ab3@18734>   TST.b saved0
0002F59C <AmiBlitz3.ab3@18735>   BEQ 'l20
0002F59E <AmiBlitz3.ab3@18736>   MOVEQ.l #14,D2
0002F5A2 <AmiBlitz3.ab3@18739>   BSR.w addhunkoffset
0002F5A6 <AmiBlitz3.ab3@18740>   MOVE.w #$2039,(a0)+
0002F5A8 <AmiBlitz3.ab3@18741>   MOVE.l a1,(a0)+
0002F5AA <AmiBlitz3.ab3@18742>   MOVEQ.l #20,d2
0002F5AE <AmiBlitz3.ab3@18745>   BSR.w addhunkoffset
0002F5B2 <AmiBlitz3.ab3@18748>   MOVE.w #$4E75,D1
0002F5B6 <AmiBlitz3.ab3@18749>   BSR.w writeword
0002F5B8 <AmiBlitz3.ab3@18752>   ADDQ.w #4,A7
0002F5BA <AmiBlitz3.ab3@18753> RTS
0002F5BE <AmiBlitz3.ab3@18758>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F5C4 <AmiBlitz3.ab3@18760>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002F5CA <AmiBlitz3.ab3@18762>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002F5D0 <AmiBlitz3.ab3@18767>   MOVE.l stringbuffer,D1
0002F5D4 <AmiBlitz3.ab3@18768> BRA.w makesize
0002F5D6 <AmiBlitz3.ab3@18771>   MOVEQ.l #$00,D1
0002F5DC <AmiBlitz3.ab3@18772>   MOVE.w globalvarpointer,D1
0002F5E0 <AmiBlitz3.ab3@18773>   SUBI.w #$8000,D1
0002F5E4 <AmiBlitz3.ab3@18774>   BNE.w makesize
0002F5E6 <AmiBlitz3.ab3@18775>     MOVEQ.l #$08,D1
0002F5E8 <AmiBlitz3.ab3@18778>   MOVE.l D1,-(A7)
0002F5EC <AmiBlitz3.ab3@18779>   MOVE.w #$203C,D1
0002F5F0 <AmiBlitz3.ab3@18780>   BSR.w writeword
0002F5F2 <AmiBlitz3.ab3@18781>   MOVE.l (A7)+,D1
0002F5F6 <AmiBlitz3.ab3@18782> BRA.w writelong
0002F5F8 <AmiBlitz3.ab3@18790>   MOVEQ.l #$00,D1
0002F5FE <AmiBlitz3.ab3@18791>   MOVEA.l libpointer,A1
0002F602 <AmiBlitz3.ab3@18794>     CMPA.w #$0,A1
0002F606 <AmiBlitz3.ab3@18795>     BEQ.w findhilib__done
0002F60A <AmiBlitz3.ab3@18796>       CMP.w $4(A1),D7
0002F60E <AmiBlitz3.ab3@18797>       BLS.w findhilib__next
0002F612 <AmiBlitz3.ab3@18798>         CMP.w $4(A1),D1
0002F616 <AmiBlitz3.ab3@18799>         BCC.w findhilib__next
0002F61A <AmiBlitz3.ab3@18800>           MOVE.w $4(A1),D1
0002F61C <AmiBlitz3.ab3@18801>           MOVEA.l A1,A2
0002F61E <AmiBlitz3.ab3@18804>     MOVEA.l (A1),A1
0002F622 <AmiBlitz3.ab3@18805> BRA.w findhilib__loop
0002F624 <AmiBlitz3.ab3@18808>   MOVE.w D1,D7
0002F626 <AmiBlitz3.ab3@18809> RTS
0002F628 <AmiBlitz3.ab3@18817>   MOVEQ.l #-$01,D1
0002F62E <AmiBlitz3.ab3@18818>   MOVEA.l libpointer,A1
0002F632 <AmiBlitz3.ab3@18821>     CMPA.w #$0,A1
0002F636 <AmiBlitz3.ab3@18822>      BEQ.w findlolib__done
0002F63A <AmiBlitz3.ab3@18823>     CMP.w $4(A1),D7
0002F63E <AmiBlitz3.ab3@18824>      BCC.w findlolib__next
0002F642 <AmiBlitz3.ab3@18825>     CMP.w $4(A1),D1
0002F646 <AmiBlitz3.ab3@18826>      BLS.w findlolib__next
0002F64A <AmiBlitz3.ab3@18827>     MOVE.w $4(A1),D1
0002F64C <AmiBlitz3.ab3@18828>     MOVEA.l A1,A2
0002F64E <AmiBlitz3.ab3@18831>     MOVEA.l (A1),A1
0002F652 <AmiBlitz3.ab3@18832> BRA.w findlolib__loop
0002F654 <AmiBlitz3.ab3@18835>   MOVE.w D1,D7
0002F658 <AmiBlitz3.ab3@18836>   CMP.w #-$1,D1
0002F65A <AmiBlitz3.ab3@18837> RTS
0002F660 <AmiBlitz3.ab3@18841>   ADDQ.w #1,globalvarpointer
0002F668 <AmiBlitz3.ab3@18842>   BCLR #$0,globalvarpointer+1
0002F66A <AmiBlitz3.ab3@18843>   MOVEQ.l #$00,D7
0002F66E <AmiBlitz3.ab3@18846>     BSR.w findlolib
0002F672 <AmiBlitz3.ab3@18847>     BEQ.w JL_0_BA74
0002F676 <AmiBlitz3.ab3@18848>     TST.w $C(A2)
0002F67A <AmiBlitz3.ab3@18849>     BPL.w JL_0_B99A
0002F67C <AmiBlitz3.ab3@18850>     MOVEA.l A2,A1
0002F680 <AmiBlitz3.ab3@18851>     ADDA.l $12(A1),A1
0002F684 <AmiBlitz3.ab3@18852>     TST.w -$2(A1)
0002F688 <AmiBlitz3.ab3@18853>     BEQ.w JL_0_BA34
0002F68C <AmiBlitz3.ab3@18854>     MOVE.l -$A(A1),D1
0002F690 <AmiBlitz3.ab3@18855>     LEA $6(A2,D1.L),A3
0002F692 <AmiBlitz3.ab3@18858>       TST.w (A3)+
0002F696 <AmiBlitz3.ab3@18859>       BEQ.w JL_0_B9CC
0002F698 <AmiBlitz3.ab3@18860>         ADDQ.w #2,A3
0002F69C <AmiBlitz3.ab3@18861> BRA.w JL_0_B9C0
0002F6A0 <AmiBlitz3.ab3@18864>     TST.l $4(A3)
0002F6A4 <AmiBlitz3.ab3@18865>     BEQ.w JL_0_BA34
0002F6A8 <AmiBlitz3.ab3@18866>       MOVE.w freemax(PC),D1
0002F6AC <AmiBlitz3.ab3@18867>       BSR.w writeword
0002F6B0 <AmiBlitz3.ab3@18868>       MOVE.w -$4(A1),D1
0002F6B4 <AmiBlitz3.ab3@18869>       BSR.w writeword
0002F6BA <AmiBlitz3.ab3@18870>       MOVE.l free,D1
0002F6BE <AmiBlitz3.ab3@18871>       MOVE.w -$6(A1),D1
0002F6C2 <AmiBlitz3.ab3@18872>       BSR.w writelong
0002F6C8 <AmiBlitz3.ab3@18873>       MOVE.l destpointer,-(A7)
0002F6CA <AmiBlitz3.ab3@18874>       MOVEQ.l #$01,D1
0002F6CE <AmiBlitz3.ab3@18875>       MOVE.w -$2(A1),D2
0002F6D0 <AmiBlitz3.ab3@18876>       LSL.w D2,D1
0002F6D2 <AmiBlitz3.ab3@18877>       MOVE.w D1,-(A7)
0002F6D6 <AmiBlitz3.ab3@18878>       MOVE.l -$A(A1),D1
0002F6DA <AmiBlitz3.ab3@18879>       BSR.w Amakelibsub
0002F6DE <AmiBlitz3.ab3@18880>       MOVE.w freemax3(PC),D1
0002F6E2 <AmiBlitz3.ab3@18881>       BSR.w writeword
0002F6E4 <AmiBlitz3.ab3@18882>       MOVE.w (A7)+,D1
0002F6E8 <AmiBlitz3.ab3@18883>       BSR.w writeword
0002F6EC <AmiBlitz3.ab3@18884>       MOVE.l freemax2(PC),D1
0002F6F0 <AmiBlitz3.ab3@18885>       BSR.w writelong
0002F6F2 <AmiBlitz3.ab3@18886>       MOVE.l (A7)+,D1
0002F6F8 <AmiBlitz3.ab3@18887>       SUB.l destpointer,D1
0002F6FC <AmiBlitz3.ab3@18888>       BSR.w writeword
0002F700 <AmiBlitz3.ab3@18889>       MOVE.w freemax4(PC),D1
0002F704 <AmiBlitz3.ab3@18890>       BSR.w writeword
0002F708 <AmiBlitz3.ab3@18893>     MOVE.l $1C(A2),D1
0002F70C <AmiBlitz3.ab3@18894>     BEQ.w JL_0_B99A
0002F710 <AmiBlitz3.ab3@18896>     MOVE.w $4(A2),D1
0002F714 <AmiBlitz3.ab3@18897>     CMP.w #-$2,D1
0002F718 <AmiBlitz3.ab3@18898>     BNE.w JL_0_BA50
0002F71C <AmiBlitz3.ab3@18899>       BSR.w makevsize
0002F720 <AmiBlitz3.ab3@18900> BRA.w JL_0_BA60
0002F724 <AmiBlitz3.ab3@18903>     CMP.w #-$12D,D1
0002F728 <AmiBlitz3.ab3@18904>     BNE.w JL_0_BA60
0002F72C <AmiBlitz3.ab3@18905>       BSR.w makessize
0002F730 <AmiBlitz3.ab3@18906> BRA.w JL_0_BA60
0002F734 <AmiBlitz3.ab3@18909>     MOVE.l $1C(A2),D1
0002F73C <AmiBlitz3.ab3@18910>     MOVE.w #$FFFF,lasta6
0002F740 <AmiBlitz3.ab3@18911>     BSR.w Amakelibsub
0002F744 <AmiBlitz3.ab3@18912> BRA.w JL_0_B99A
0002F746 <AmiBlitz3.ab3@18915> RTS
0002F74A <AmiBlitz3.ab3@18919> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002F74C <AmiBlitz3.ab3@18921> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002F750 <AmiBlitz3.ab3@18922>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002F752 <AmiBlitz3.ab3@18923> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002F756 <AmiBlitz3.ab3@18924> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002F75C <AmiBlitz3.ab3@18929>   TST.b debugmode
0002F760 <AmiBlitz3.ab3@18930>    BEQ.b chkstak__skip
0002F766 <AmiBlitz3.ab3@18931>   TST.w debugversion
0002F76A <AmiBlitz3.ab3@18932>    BNE.b chkstak__skip
0002F76E <AmiBlitz3.ab3@18933>   MOVE.w #$C308,D1
0002F772 <AmiBlitz3.ab3@18934> BRA.w Atokejsr
0002F774 <AmiBlitz3.ab3@18937> RTS
0002F77C <AmiBlitz3.ab3@18941>   MOVE.w #$FFFF,lasta6
0002F780 <AmiBlitz3.ab3@18946>   MOVEM.l D0-d7/A0-a6,-(A7)
0002F788 <AmiBlitz3.ab3@18947>   MOVE.b #1,nostringopt
0002F78E <AmiBlitz3.ab3@18948>   JSR searchinstr
0002F790 <AmiBlitz3.ab3@18949>   MOVE.l A3,D1
0002F792 <AmiBlitz3.ab3@18950>   SUB.l A2,D1
0002F796 <AmiBlitz3.ab3@18951>   BSR.w Amakelibsub
0002F79A <AmiBlitz3.ab3@18952>   MOVEM.l (A7)+,d0-d7/a0-a6
0002F79C <AmiBlitz3.ab3@18953> RTS
0002F7A2 <AmiBlitz3.ab3@18960>   MOVE.l libisat,-(A7)                                   ;library write
0002F7A8 <AmiBlitz3.ab3@18961>   MOVE.l A2,libisat
0002F7AA <AmiBlitz3.ab3@18963>   MOVEA.l A1,A2
0002F7AC <AmiBlitz3.ab3@18964>   MOVE.w (A2)+,D1
0002F7B2 <AmiBlitz3.ab3@18965>   MOVE.l a2,lastinstructionaddr
0002F7B6 <AmiBlitz3.ab3@18966>   ANDI.w #$FF,D1
0002F7B8 <AmiBlitz3.ab3@18967>   ADDA.w D1,A2
0002F7BA <AmiBlitz3.ab3@18968>   EXG.l D0,A2
0002F7BC <AmiBlitz3.ab3@18969>   ADDQ.l #1,D0
0002F7C0 <AmiBlitz3.ab3@18970>   BCLR #$0,D0
0002F7C2 <AmiBlitz3.ab3@18971>   EXG.l D0,A2
0002F7C6 <AmiBlitz3.ab3@18972> BRA.w JL_0_BB08
0002F7CC <AmiBlitz3.ab3@18976>   MOVE.l libisat,-(A7)
0002F7D2 <AmiBlitz3.ab3@18977>   MOVE.l A2,libisat
0002F7D4 <AmiBlitz3.ab3@18978>   MOVEA.l A3,A2
0002F7D8 <AmiBlitz3.ab3@18979> BRA.w JL_0_BB08
0002F7DA <AmiBlitz3.ab3@18983>   MOVE.l a1,-(a7)
0002F7DC <AmiBlitz3.ab3@18986>   MOVE.l d0,a0
0002F7E0 <AmiBlitz3.ab3@18987>   MOVE.l $a(a0),d0
0002F7E2 <AmiBlitz3.ab3@18988>   MOVE.l d0,a1
0002F7EA <AmiBlitz3.ab3@18989>   CMP.l #8,4(a1)
0002F7EE <AmiBlitz3.ab3@18990>   BLE 'norec
0002F7F0 <AmiBlitz3.ab3@18991>   MOVE.l a0,-(a7)
0002F7F6 <AmiBlitz3.ab3@18992>   MOVE.l typebase,-(a7)
0002F7F8 <AmiBlitz3.ab3@18993>   MOVEQ #0,d0
0002F7FC <AmiBlitz3.ab3@18994>   MOVE.w 4(a0),d0
0002F802 <AmiBlitz3.ab3@18995>   ADD.l d0,typebase
0002F806 <AmiBlitz3.ab3@18996>   MOVE.l $4(a1),d0
0002F80A <AmiBlitz3.ab3@18997>   BSR scantype
0002F810 <AmiBlitz3.ab3@18998>   MOVE.l (a7)+,typebase
0002F812 <AmiBlitz3.ab3@18999>   MOVE.l (a7)+,a0
0002F818 <AmiBlitz3.ab3@19002>   CMP.l #newtype_string,d0
0002F81C <AmiBlitz3.ab3@19003>   BNE 'nostring
0002F822 <AmiBlitz3.ab3@19004>   ADDQ #2,a2offset
0002F828 <AmiBlitz3.ab3@19005>   MOVE.l #$3f3c0000,d1
0002F82A <AmiBlitz3.ab3@19006>   MOVEQ #0,d0
0002F82E <AmiBlitz3.ab3@19007>   MOVE.w 4(a0),d0
0002F834 <AmiBlitz3.ab3@19008>   ADD.l typebase,d0
0002F836 <AmiBlitz3.ab3@19009>   MOVE.w d0,d1
0002F83A <AmiBlitz3.ab3@19010>   BSR writelong
0002F840 <AmiBlitz3.ab3@19011>   TST.b debugmode
0002F844 <AmiBlitz3.ab3@19012>   BEQ 'l1a
0002F846 <AmiBlitz3.ab3@19013>   MOVE.l d1,-(a7)
0002F84C <AmiBlitz3.ab3@19014>   MOVE.l #$c308,d1
0002F852 <AmiBlitz3.ab3@19015>   JSR Atokejsr
0002F854 <AmiBlitz3.ab3@19016>   MOVE.l (a7)+,d1
0002F858 <AmiBlitz3.ab3@19019>   TST.w 8(a0)
0002F85C <AmiBlitz3.ab3@19020>   BEQ 'nostring
0002F860 <AmiBlitz3.ab3@19021>   MOVEM.l d2/d3,-(a7)
0002F862 <AmiBlitz3.ab3@19022>   MOVE.l d1,d2
0002F864 <AmiBlitz3.ab3@19023>   MOVEQ #0,d3
0002F868 <AmiBlitz3.ab3@19024>   MOVE.w 8(a0),d3
0002F86A <AmiBlitz3.ab3@19025>   SUBQ.l #1,d3
0002F86E <AmiBlitz3.ab3@19026>   BEQ 'nostring2
0002F870 <AmiBlitz3.ab3@19029>   ADDQ.l #4,d2
0002F872 <AmiBlitz3.ab3@19030>   MOVE.l d2,d1
0002F876 <AmiBlitz3.ab3@19031>   BSR writelong
0002F87C <AmiBlitz3.ab3@19032>   TST.b debugmode
0002F880 <AmiBlitz3.ab3@19033>   BEQ 'l1
0002F886 <AmiBlitz3.ab3@19034>   MOVE.l #$c308,d1
0002F88C <AmiBlitz3.ab3@19035>   JSR Atokejsr
0002F892 <AmiBlitz3.ab3@19038>   ADDQ #2,a2offset
0002F894 <AmiBlitz3.ab3@19039>   SUBQ.l #1,d3
0002F898 <AmiBlitz3.ab3@19040>   BNE 'loop
0002F89C <AmiBlitz3.ab3@19043>   MOVEM.l (a7)+,d2/d3
0002F89E <AmiBlitz3.ab3@19046>   MOVE.l (a0),d0
0002F8A2 <AmiBlitz3.ab3@19047>   BNE 'more
0002F8A4 <AmiBlitz3.ab3@19048>   MOVE.l (a7)+,a1
0002F8A6 <AmiBlitz3.ab3@19049> RTS
0002F8AA <AmiBlitz3.ab3@19052> libisat:   Ds.l 1
0002F8B0 <AmiBlitz3.ab3@19058>   MOVE.l libisat,-(A7)                                   
0002F8B6 <AmiBlitz3.ab3@19059>   MOVE.l A2,libisat
0002F8BA <AmiBlitz3.ab3@19060>   LEA $6(A2,D1.L),A2
0002F8C2 <AmiBlitz3.ab3@19064>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002F8C6 <AmiBlitz3.ab3@19065>   BEQ 'dowritevar
0002F8CE <AmiBlitz3.ab3@19066>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002F8D2 <AmiBlitz3.ab3@19067>   BEQ 'dowritevar
0002F8DA <AmiBlitz3.ab3@19068>   CMP.l #$3e175265,$1c(a2)
0002F8DE <AmiBlitz3.ab3@19069>   BEQ 'dowritevar
0002F8E6 <AmiBlitz3.ab3@19070>   CMP.l #$3e165772,$1c(a2)
0002F8EA <AmiBlitz3.ab3@19071>   BNE 'nowritef
0002F8EE <AmiBlitz3.ab3@19074>   MOVEM.l a0-a2/d2,-(a7)
0002F8F0 <AmiBlitz3.ab3@19075>   MOVEQ #0,d1
0002F8FA <AmiBlitz3.ab3@19076>   MOVE.l #0,typebase
0002F8FE <AmiBlitz3.ab3@19077>   MOVE.l $a(a3),a0
0002F902 <AmiBlitz3.ab3@19078>   MOVE.l $4(a0),d0
0002F908 <AmiBlitz3.ab3@19079>   CMP.l #8,d0
0002F90C <AmiBlitz3.ab3@19080>   BLE 'notype
0002F910 <AmiBlitz3.ab3@19081>   BSR scantype
0002F916 <AmiBlitz3.ab3@19084>   MOVE.l #$3f3c0000,d1
0002F91C <AmiBlitz3.ab3@19085>   MOVE.w a2offset,d1
0002F920 <AmiBlitz3.ab3@19086>   BSR writelong
0002F926 <AmiBlitz3.ab3@19087>   MOVE.l #$3f3c0000,d1
0002F92A <AmiBlitz3.ab3@19088>   MOVE.l $a(a3),a0
0002F92E <AmiBlitz3.ab3@19089>   MOVE.w 8(a0),d1
0002F932 <AmiBlitz3.ab3@19090>   BSR writelong
0002F938 <AmiBlitz3.ab3@19091>   MOVE.l #$3f3cab12,d1
0002F93C <AmiBlitz3.ab3@19092>   BSR writelong
0002F942 <AmiBlitz3.ab3@19093>   ADDQ.w #6,a2offset
0002F946 <AmiBlitz3.ab3@19094>   MOVEM.l (a7)+,a0-a2/d2
0002F94C <AmiBlitz3.ab3@19097>   TST.b fpu
0002F950 <AmiBlitz3.ab3@19098>   BEQ 'nofpu2
0002F958 <AmiBlitz3.ab3@19099>   CMP.l #$496e7400,$1a(a2)
0002F95C <AmiBlitz3.ab3@19100>   BNE 'noint
0002F95E <AmiBlitz3.ab3@19101>   MOVEQ #0,d1
0002F964 <AmiBlitz3.ab3@19102>   SUBQ.l #8,destpointer                                    ;fpu int
0002F96A <AmiBlitz3.ab3@19103>   CLR.w a2offset
0002F96E <AmiBlitz3.ab3@19104>   CMP.b #2,d2
0002F972 <AmiBlitz3.ab3@19105>   BGT 'noword
0002F976 <AmiBlitz3.ab3@19106>   MOVE.w #$48c0,d1
0002F97C <AmiBlitz3.ab3@19107>   OR.w regnumstore,d1
0002F980 <AmiBlitz3.ab3@19108>   BSR writeword
0002F984 <AmiBlitz3.ab3@19109> BRA 'exit2
0002F988 <AmiBlitz3.ab3@19112>    CMP.b #3,d2
0002F98C <AmiBlitz3.ab3@19113>         BNE 'nolong
0002F990 <AmiBlitz3.ab3@19114> BRA 'exit2
0002F994 <AmiBlitz3.ab3@19117>    CMP.b #4,d2
0002F998 <AmiBlitz3.ab3@19118>         BNE 'noquick
0002F99C <AmiBlitz3.ab3@19119>         MOVE.w #$e080,d1
0002F9A2 <AmiBlitz3.ab3@19120>         OR.w regnumstore,d1
0002F9A6 <AmiBlitz3.ab3@19121>         BSR writeword
0002F9AA <AmiBlitz3.ab3@19122>         MOVE.w #$e080,d1
0002F9B0 <AmiBlitz3.ab3@19123>         OR.w regnumstore,d1
0002F9B4 <AmiBlitz3.ab3@19124>         BSR writeword
0002F9B8 <AmiBlitz3.ab3@19125> BRA 'exit2
0002F9BA <AmiBlitz3.ab3@19128>         MOVEQ #0,d0
0002F9BC <AmiBlitz3.ab3@19129>         MOVEQ #0,d1
0002F9C2 <AmiBlitz3.ab3@19130>         MOVE.w regnumstore,d0
0002F9C4 <AmiBlitz3.ab3@19131>         ASL.l #7,d0
0002F9CA <AmiBlitz3.ab3@19132>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002F9CC <AmiBlitz3.ab3@19133>         OR.l d0,d1
0002F9D2 <AmiBlitz3.ab3@19135>         MOVE.l #$3f000000,d1
0002F9D4 <AmiBlitz3.ab3@19137>         MOVEQ #0,d0
0002F9D6 <AmiBlitz3.ab3@19138>         MOVEQ #0,d1
0002F9DC <AmiBlitz3.ab3@19139>         MOVE.w regnumstore,d0
0002F9DE <AmiBlitz3.ab3@19140>         ASL.l #7,d0
0002F9E0 <AmiBlitz3.ab3@19141>         MOVE.l d0,d1
0002F9E6 <AmiBlitz3.ab3@19142>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002F9E8 <AmiBlitz3.ab3@19143>         ASL.l #3,d0
0002F9EA <AmiBlitz3.ab3@19144>         OR.l d0,d1
0002F9EE <AmiBlitz3.ab3@19145>         BSR writelong
0002F9F0 <AmiBlitz3.ab3@19146>         MOVEQ #0,d0
0002F9F6 <AmiBlitz3.ab3@19147>         MOVE.w regnumstore,d0
0002F9F8 <AmiBlitz3.ab3@19148>         ASL.l #7,d0
0002F9FE <AmiBlitz3.ab3@19149>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002FA00 <AmiBlitz3.ab3@19150>         OR.l d0,d1
0002FA02 <AmiBlitz3.ab3@19151>         ASL.l #1,d0
0002FA04 <AmiBlitz3.ab3@19152>         ASL.l #8,d0
0002FA06 <AmiBlitz3.ab3@19153>         OR.l d0,d1
0002FA0A <AmiBlitz3.ab3@19154> BRA 'exit
0002FA10 <AmiBlitz3.ab3@19157>   CMP.w #$3c01,24(a2)
0002FA14 <AmiBlitz3.ab3@19158>   BNE 'noval
0002FA16 <AmiBlitz3.ab3@19159>   MOVE.l a2,-(a7)
0002FA1A <AmiBlitz3.ab3@19160>   BSR.w JL_0_BB14
0002FA1C <AmiBlitz3.ab3@19161>   MOVE.l (a7)+,a2
0002FA20 <AmiBlitz3.ab3@19162> BRA 'exit2
0002FA28 <AmiBlitz3.ab3@19179>   CMP.l #$41627300,$1a(a2)
0002FA2C <AmiBlitz3.ab3@19180>   BNE 'noabs
0002FA2E <AmiBlitz3.ab3@19181>   MOVEQ #0,d1
0002FA34 <AmiBlitz3.ab3@19182>   MOVE.w regnumstore,d1
0002FA36 <AmiBlitz3.ab3@19183>   MOVE.w d1,d0
0002FA38 <AmiBlitz3.ab3@19184>   ASL.w #7,d1
0002FA3A <AmiBlitz3.ab3@19185>   ASL.w #8,d0
0002FA3C <AmiBlitz3.ab3@19186>   ASL.w #2,d0
0002FA3E <AmiBlitz3.ab3@19187>   OR.w d0,d1
0002FA44 <AmiBlitz3.ab3@19188>   SUBQ.l #8,destpointer                                    ;fpu abs
0002FA48 <AmiBlitz3.ab3@19189>   MOVEM.l d3/d1,-(a7)
0002FA4C <AmiBlitz3.ab3@19190>   MOVE.w #5,d3
0002FA4E <AmiBlitz3.ab3@19191>   EXG d2,d3
0002FA54 <AmiBlitz3.ab3@19192>   MOVE.w regnum,-(a7)
0002FA5E <AmiBlitz3.ab3@19193>   MOVE.w regnumstore,regnum
0002FA62 <AmiBlitz3.ab3@19194>   BSR writeconvertcode
0002FA68 <AmiBlitz3.ab3@19195>   MOVE.w (a7)+,regnum
0002FA6A <AmiBlitz3.ab3@19196>   EXG d2,d3
0002FA6E <AmiBlitz3.ab3@19197>   MOVEM.l (a7)+,d3/d1
0002FA74 <AmiBlitz3.ab3@19198>   OR.l #$f2000018,d1
0002FA7A <AmiBlitz3.ab3@19199>   CLR.w a2offset
0002FA7E <AmiBlitz3.ab3@19200> BRA 'exit
0002FA82 <AmiBlitz3.ab3@19203>   CMP.b #5,d2
0002FA86 <AmiBlitz3.ab3@19204>   BNE 'nofpu2
0002FA8A <AmiBlitz3.ab3@19205>   MOVE.b 24(a2),d0
0002FA8E <AmiBlitz3.ab3@19206>   CMP.b #$60,d0                                            ;nolib $edxx
0002FA92 <AmiBlitz3.ab3@19207>   BNE 'nofpu
0002FA94 <AmiBlitz3.ab3@19208>   MOVEQ #0,d1
0002FA9A <AmiBlitz3.ab3@19209>   MOVE.w regnumstore,d1
0002FA9C <AmiBlitz3.ab3@19210>   MOVE.w d1,d0
0002FA9E <AmiBlitz3.ab3@19211>   ASL.w #7,d1
0002FAA0 <AmiBlitz3.ab3@19212>   ASL.w #8,d0
0002FAA2 <AmiBlitz3.ab3@19213>   ASL.w #2,d0
0002FAA4 <AmiBlitz3.ab3@19214>   OR.w d0,d1
0002FAA8 <AmiBlitz3.ab3@19215>   MOVE.b 25(a2),d0
0002FAAC <AmiBlitz3.ab3@19216>   CMP.b #5,d0
0002FAB0 <AmiBlitz3.ab3@19217>   BNE 'nocos
0002FAB6 <AmiBlitz3.ab3@19218>   OR.l #$f200001d,d1                                       ;fpu cos
0002FABA <AmiBlitz3.ab3@19219> BRA 'exit
0002FABE <AmiBlitz3.ab3@19222>   CMP.b #$c,d0
0002FAC2 <AmiBlitz3.ab3@19223>   BNE 'nosqr
0002FAC8 <AmiBlitz3.ab3@19224>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FACC <AmiBlitz3.ab3@19225> BRA 'exit
0002FAD0 <AmiBlitz3.ab3@19228>   CMP.b #$d,d0
0002FAD4 <AmiBlitz3.ab3@19229>   BNE 'notan
0002FADA <AmiBlitz3.ab3@19230>   OR.l #$f200000f,d1                                       ;fpu tan
0002FADE <AmiBlitz3.ab3@19231> BRA 'exit
0002FAE2 <AmiBlitz3.ab3@19234>   CMP.b #$a,d0
0002FAE6 <AmiBlitz3.ab3@19235>   BNE 'nosin
0002FAEC <AmiBlitz3.ab3@19236>   OR.l #$f200000e,d1                                       ;fpu sin
0002FAF0 <AmiBlitz3.ab3@19237> BRA 'exit
0002FAF4 <AmiBlitz3.ab3@19240>   CMP.b #$3,d0
0002FAF8 <AmiBlitz3.ab3@19241>   BNE 'noasin
0002FAFE <AmiBlitz3.ab3@19242>   OR.l #$f200000c,d1                                       ;fpu asin
0002FB02 <AmiBlitz3.ab3@19243> BRA 'exit
0002FB06 <AmiBlitz3.ab3@19246>   CMP.b #$2,d0
0002FB0A <AmiBlitz3.ab3@19247>   BNE 'noacos
0002FB10 <AmiBlitz3.ab3@19248>   OR.l #$f200001c,d1                                       ;fpu acos
0002FB14 <AmiBlitz3.ab3@19249> BRA 'exit
0002FB18 <AmiBlitz3.ab3@19252>   CMP.b #$4,d0
0002FB1C <AmiBlitz3.ab3@19253>   BNE 'noatan
0002FB22 <AmiBlitz3.ab3@19254>   OR.l #$f200000a,d1                                       ;fpu atan
0002FB26 <AmiBlitz3.ab3@19255> BRA 'exit
0002FB2A <AmiBlitz3.ab3@19258>   CMP.b #$e,d0
0002FB2E <AmiBlitz3.ab3@19259>   BNE 'nohtan
0002FB34 <AmiBlitz3.ab3@19260>   OR.l #$f2000009,d1                                       ;fpu htan
0002FB38 <AmiBlitz3.ab3@19261> BRA 'exit
0002FB3C <AmiBlitz3.ab3@19264>   CMP.b #$6,d0
0002FB40 <AmiBlitz3.ab3@19265>   BNE 'nohcos
0002FB46 <AmiBlitz3.ab3@19266>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FB4A <AmiBlitz3.ab3@19267> BRA 'exit
0002FB4E <AmiBlitz3.ab3@19270>   CMP.b #$b,d0
0002FB52 <AmiBlitz3.ab3@19271>   BNE 'nohsin
0002FB58 <AmiBlitz3.ab3@19272>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FB5C <AmiBlitz3.ab3@19273> BRA 'exit
0002FB60 <AmiBlitz3.ab3@19276>   CMP.b #$9,d0
0002FB64 <AmiBlitz3.ab3@19277>   BNE 'nolog
0002FB6A <AmiBlitz3.ab3@19278>   OR.l #$f2000014,d1                                       ;fpu log
0002FB6E <AmiBlitz3.ab3@19279> BRA 'exit
0002FB72 <AmiBlitz3.ab3@19282>   CMP.b #$8,d0
0002FB76 <AmiBlitz3.ab3@19283>   BNE 'nolog10
0002FB7C <AmiBlitz3.ab3@19284>   OR.l #$f2000015,d1                                       ;fpu log10
0002FB80 <AmiBlitz3.ab3@19285> BRA 'exit
0002FB84 <AmiBlitz3.ab3@19288>   CMP.b #$7,d0
0002FB88 <AmiBlitz3.ab3@19289>   BNE 'noexp
0002FB8E <AmiBlitz3.ab3@19290>   OR.l #$f2000010,d1                                       ;fpu exp
0002FB92 <AmiBlitz3.ab3@19291> BRA 'exit
0002FB98 <AmiBlitz3.ab3@19294>   LEA fpuerr,a0
0002FB9A <AmiBlitz3.ab3@19295>   MOVE.l a0,-(a7)
0002FBA0 <AmiBlitz3.ab3@19296> JMP handle_compileerror
0002FBA4 <AmiBlitz3.ab3@19300>   CMP.b #$3c,d0
0002FBA8 <AmiBlitz3.ab3@19301>   BNE 'nofpu2
0002FBAA <AmiBlitz3.ab3@19302>   MOVEQ #0,d1
0002FBB0 <AmiBlitz3.ab3@19303>       MOVE.w regnumstore,d1
0002FBB2 <AmiBlitz3.ab3@19304>       MOVE.w d1,d0
0002FBB4 <AmiBlitz3.ab3@19305>       ASL.w #7,d1
0002FBB6 <AmiBlitz3.ab3@19306>       ASL.w #8,d0
0002FBB8 <AmiBlitz3.ab3@19307>       ASL.w #2,d0
0002FBBA <AmiBlitz3.ab3@19308>       OR.w d0,d1
0002FBC0 <AmiBlitz3.ab3@19309>       CMP.b #$03,25(a2)
0002FBC4 <AmiBlitz3.ab3@19310>       BNE 'nosgn
0002FBCA <AmiBlitz3.ab3@19313>       SUBQ.l #8,destpointer                                ;fpu sgn
0002FBD0 <AmiBlitz3.ab3@19314>         OR.l #$f200003a,d1
0002FBD4 <AmiBlitz3.ab3@19315>         BSR writelong
0002FBDA <AmiBlitz3.ab3@19316>         CLR.w a2offset
0002FBE0 <AmiBlitz3.ab3@19317>          MOVE.l #$F28E0006,d1
0002FBE4 <AmiBlitz3.ab3@19318>          BSR writelong
0002FBEA <AmiBlitz3.ab3@19319>   MOVE.l #$7000600a,d1
0002FBEE <AmiBlitz3.ab3@19320>   BSR writelong
0002FBF4 <AmiBlitz3.ab3@19321>   MOVE.l #$70014840,d1
0002FBF8 <AmiBlitz3.ab3@19322>   BSR writelong
0002FBFE <AmiBlitz3.ab3@19323>   MOVE.l #$F292,d1
0002FC02 <AmiBlitz3.ab3@19324>   BSR writeword
0002FC08 <AmiBlitz3.ab3@19325>   MOVE.l #$000470FF,d1
0002FC0C <AmiBlitz3.ab3@19326> BRA 'exit
0002FC14 <AmiBlitz3.ab3@19329>   CMP.l #"Frac",$1a(a2)
0002FC18 <AmiBlitz3.ab3@19330>   BNE 'nofrac
0002FC1E <AmiBlitz3.ab3@19331> JMP notwork
0002FC22 <AmiBlitz3.ab3@19372> BRA 'exit
0002FC26 <AmiBlitz3.ab3@19376>   BSR.w JL_0_BB14                                          ;write lib code
0002FC2C <AmiBlitz3.ab3@19377>   MOVE.l (A7)+,libisat
0002FC2E <AmiBlitz3.ab3@19378> RTS
0002FC32 <AmiBlitz3.ab3@19381>   BSR writelong
0002FC38 <AmiBlitz3.ab3@19384>   MOVE.l (A7)+,libisat
0002FC3A <AmiBlitz3.ab3@19385> RTS
0002FC3E <AmiBlitz3.ab3@19389>   BSR.w fetchregs
0002FC44 <AmiBlitz3.ab3@19390>   TST.b debugmode
0002FC48 <AmiBlitz3.ab3@19391>    BEQ.w JL_0_BB76
0002FC4A <AmiBlitz3.ab3@19392>   MOVE.l (A2),D1
0002FC4E <AmiBlitz3.ab3@19393>   OR.l $8(A2),D1
0002FC52 <AmiBlitz3.ab3@19394>   BCLR #$0,D1
0002FC54 <AmiBlitz3.ab3@19395>   TST.l D1
0002FC58 <AmiBlitz3.ab3@19396>    BEQ.w JL_0_BB76
0002FC5A <AmiBlitz3.ab3@19397>   MOVE.l (A2)+,D1
0002FC5E <AmiBlitz3.ab3@19398>   BTST #$0,D1
0002FC62 <AmiBlitz3.ab3@19399>    BEQ.w JL_0_BB60
0002FC68 <AmiBlitz3.ab3@19400>   TST.w blitzmode
0002FC6C <AmiBlitz3.ab3@19401>    BPL.w blitzerr
0002FC72 <AmiBlitz3.ab3@19402>   TST.b debugmode
0002FC76 <AmiBlitz3.ab3@19403>    BEQ.w JL_0_BB5C
0002FC78 <AmiBlitz3.ab3@19404>   MOVE.l D1,-(A7)
0002FC7C <AmiBlitz3.ab3@19405>   MOVE.w #$C311,D1
0002FC80 <AmiBlitz3.ab3@19406>    BSR.w makebtst
0002FC82 <AmiBlitz3.ab3@19407>   MOVE.l (A7)+,D1
0002FC86 <AmiBlitz3.ab3@19410>   BCLR #$0,D1
0002FC88 <AmiBlitz3.ab3@19413>   TST.l D1
0002FC8C <AmiBlitz3.ab3@19414>    BSR.w JL_0_BBC6
0002FC8E <AmiBlitz3.ab3@19415>   MOVE.l (A2)+,D1
0002FC92 <AmiBlitz3.ab3@19416>    BSR.w JL_0_BB98
0002FC94 <AmiBlitz3.ab3@19417>   MOVE.l (A2)+,D1
0002FC98 <AmiBlitz3.ab3@19418>    BSR.w JL_0_BBC6
0002FC9C <AmiBlitz3.ab3@19419> BRA.w JL_0_BB90
0002FCA2 <AmiBlitz3.ab3@19422>   BTST #$0,$3(A2)
0002FCA6 <AmiBlitz3.ab3@19423>    BEQ.w JL_0_BB88
0002FCAA <AmiBlitz3.ab3@19424>   MOVE.w blitzmode(PC),D1
0002FCAE <AmiBlitz3.ab3@19425>    BPL.w blitzerr
0002FCB2 <AmiBlitz3.ab3@19428>   MOVE.l $4(A2),D1
0002FCB6 <AmiBlitz3.ab3@19429>    BSR.w JL_0_BB98
0002FCBC <AmiBlitz3.ab3@19432>   MOVEA.l libisat,A2
0002FCBE <AmiBlitz3.ab3@19433> RTS
0002FCC2 <AmiBlitz3.ab3@19436>   BTST #$0,D1
0002FCC6 <AmiBlitz3.ab3@19437>    BEQ.w JL_0_BBC4
0002FCCC <AmiBlitz3.ab3@19438>   TST.w blitzmode
0002FCD0 <AmiBlitz3.ab3@19439>    BMI.w amigaerr
0002FCD6 <AmiBlitz3.ab3@19440>   TST.b debugmode
0002FCDA <AmiBlitz3.ab3@19441>    BEQ.w JL_0_BBC0
0002FCDC <AmiBlitz3.ab3@19442>   MOVE.l D1,-(A7)
0002FCE0 <AmiBlitz3.ab3@19443>   MOVE.w #$C312,D1
0002FCE4 <AmiBlitz3.ab3@19444>    BSR.w makebtst
0002FCE6 <AmiBlitz3.ab3@19445>   MOVE.l (A7)+,D1
0002FCEA <AmiBlitz3.ab3@19448>   BCLR #$0,D1
0002FCEC <AmiBlitz3.ab3@19451>   TST.l D1
0002FCF0 <AmiBlitz3.ab3@19454>    BEQ.w JL_0_BBD2
0002FCF2 <AmiBlitz3.ab3@19455>   MOVE.l A1,-(A7)
0002FCF6 <AmiBlitz3.ab3@19456>    BSR.w JL_0_BBD4
0002FCF8 <AmiBlitz3.ab3@19457>   MOVEA.l (A7)+,A1
0002FCFA <AmiBlitz3.ab3@19460> RTS
0002FD00 <AmiBlitz3.ab3@19463>   MOVEA.l libisat,A0
0002FD06 <AmiBlitz3.ab3@19464>   TST.w cfetchmode
0002FD0A <AmiBlitz3.ab3@19465>    BEQ.w JL_0_BBF6
0002FD0C <AmiBlitz3.ab3@19466>   ADD.l A0,D1
0002FD0E <AmiBlitz3.ab3@19467>   MOVE.l D1,-(A7)
0002FD12 <AmiBlitz3.ab3@19468>   MOVE.w #$4EB9,D1
0002FD16 <AmiBlitz3.ab3@19469>    BSR.w writeword
0002FD18 <AmiBlitz3.ab3@19470>   MOVE.l (A7)+,D1
0002FD1C <AmiBlitz3.ab3@19471> BRA.w writelong
0002FD20 <AmiBlitz3.ab3@19474>   LEA $0(A0,D1.L),A1
0002FD26 <AmiBlitz3.ab3@19475>   CLR.w inline
0002FD2A <AmiBlitz3.ab3@19478>   CMPI.b #$A0,(A1)+
0002FD2E <AmiBlitz3.ab3@19479>    BNE.w JL_0_BC68
0002FD30 <AmiBlitz3.ab3@19480>   TST.b (A1)+
0002FD34 <AmiBlitz3.ab3@19481>    BEQ.w JL_0_BC18
0002FD3A <AmiBlitz3.ab3@19482>   CMPI.b #$1,-$1(A1)
0002FD3E <AmiBlitz3.ab3@19483>    BEQ.w JL_0_BC24
0002FD44 <AmiBlitz3.ab3@19486>   MOVE.w (A1)+,inline
0002FD46 <AmiBlitz3.ab3@19487>   ADDQ.l #4,D1
0002FD4A <AmiBlitz3.ab3@19488> BRA.w JL_0_BC00
0002FD50 <AmiBlitz3.ab3@19491>   TST.w blitzmode
0002FD54 <AmiBlitz3.ab3@19492>    BPL.w JL_0_BC4A
0002FD5A <AmiBlitz3.ab3@19493>   TST.b debugmode
0002FD5E <AmiBlitz3.ab3@19494>    BEQ.w JL_0_BC40
0002FD62 <AmiBlitz3.ab3@19495>   MOVE.w #$C311,D1
0002FD66 <AmiBlitz3.ab3@19496>    BSR.w makebtst
0002FD68 <AmiBlitz3.ab3@19499>   MOVE.l (A1)+,D1
0002FD6C <AmiBlitz3.ab3@19500>   LEA $0(A0,D1.L),A1
0002FD70 <AmiBlitz3.ab3@19501> BRA.w JL_0_BC00
0002FD76 <AmiBlitz3.ab3@19504>   TST.b debugmode
0002FD7A <AmiBlitz3.ab3@19505>    BEQ.w JL_0_BC60
0002FD7C <AmiBlitz3.ab3@19506>   MOVE.l D1,-(A7)
0002FD80 <AmiBlitz3.ab3@19507>   MOVE.w #$C312,D1
0002FD84 <AmiBlitz3.ab3@19508>    BSR.w makebtst
0002FD86 <AmiBlitz3.ab3@19509>   MOVE.l (A7)+,D1
0002FD88 <AmiBlitz3.ab3@19512>   ADDQ.w #4,A1
0002FD8A <AmiBlitz3.ab3@19513>   ADDQ.l #6,D1
0002FD8E <AmiBlitz3.ab3@19514> BRA.w JL_0_BC00
0002FD94 <AmiBlitz3.ab3@19517>   TST.w inline
0002FD98 <AmiBlitz3.ab3@19518>    BEQ.w JL_0_BC7E
0002FD9A <AmiBlitz3.ab3@19519>   SUBQ.w #1,A1
0002FD9C <AmiBlitz3.ab3@19520>   MOVEA.l A1,A0
0002FDA0 <AmiBlitz3.ab3@19521>   ADDA.w inline(PC),A1
0002FDA4 <AmiBlitz3.ab3@19522> BRA.w pokecode2
0002FDA8 <AmiBlitz3.ab3@19525>   MOVEM.l a0/D1,-(A7)
0002FDAE <AmiBlitz3.ab3@19526>   TST.w debugversion
0002FDB2 <AmiBlitz3.ab3@19527>   BEQ 'l11
0002FDBA <AmiBlitz3.ab3@19528>   BTST #$7,link_debuginfo
0002FDBE <AmiBlitz3.ab3@19529>   BEQ.w 'l11
0002FDC4 <AmiBlitz3.ab3@19530>   MOVE.l lastinstruction,d1
0002FDC8 <AmiBlitz3.ab3@19531>   BEQ 'l11
0002FDCE <AmiBlitz3.ab3@19532>   CLR.l lastinstruction
0002FDD4 <AmiBlitz3.ab3@19533>   CMP.l #$e000,d1
0002FDD8 <AmiBlitz3.ab3@19534>   BGE 'ln99
0002FDDE <AmiBlitz3.ab3@19535>   LEA notf,a0
0002FDE4 <AmiBlitz3.ab3@19536>   CMP.l #$c601,d1
0002FDE8 <AmiBlitz3.ab3@19537>   BNE 'ln1
0002FDEE <AmiBlitz3.ab3@19538>   LEA strcpy,a0
0002FDF2 <AmiBlitz3.ab3@19539> BRA 'ln3
0002FDF8 <AmiBlitz3.ab3@19542>   CMP.l #$c700,d1
0002FDFC <AmiBlitz3.ab3@19543>   BNE 'ln2
0002FE02 <AmiBlitz3.ab3@19544>   LEA strvar,a0
0002FE06 <AmiBlitz3.ab3@19545> BRA 'ln3
0002FE0C <AmiBlitz3.ab3@19548>   CMP.l #$ce00,d1
0002FE10 <AmiBlitz3.ab3@19549>   BNE 'ln4
0002FE16 <AmiBlitz3.ab3@19550>   LEA strcmp,a0
0002FE1A <AmiBlitz3.ab3@19551> BRA 'ln3
0002FE20 <AmiBlitz3.ab3@19554>   CMP.l #$ca00,d1
0002FE24 <AmiBlitz3.ab3@19555>   BNE 'ln5
0002FE2A <AmiBlitz3.ab3@19556>   LEA qmul,a0
0002FE2E <AmiBlitz3.ab3@19557> BRA 'ln3
0002FE34 <AmiBlitz3.ab3@19560>   CMP.l #$d000,d1
0002FE38 <AmiBlitz3.ab3@19561>      BNE 'ln6
0002FE3E <AmiBlitz3.ab3@19562>      LEA _MaxLen,a0
0002FE42 <AmiBlitz3.ab3@19563> BRA 'ln3
0002FE48 <AmiBlitz3.ab3@19566>   CMP.l #$cb00,d1
0002FE4C <AmiBlitz3.ab3@19567>   BNE 'ln3
0002FE52 <AmiBlitz3.ab3@19568>   LEA qdiv,a0
0002FE56 <AmiBlitz3.ab3@19569> BRA 'ln3
0002FE58 <AmiBlitz3.ab3@19572>   MOVE.l d1,a0
0002FE5C <AmiBlitz3.ab3@19573>   LEA $8(a0),a0
0002FE60 <AmiBlitz3.ab3@19576>   CMP.w #$ffff,(a0)+
0002FE64 <AmiBlitz3.ab3@19577>   BNE 'l1
0002FE68 <AmiBlitz3.ab3@19578>   LEA 6(a0),a0
0002FE6C <AmiBlitz3.ab3@19581>   MOVEM.l a1/a2/d7/d2,-(a7)
0002FE6E <AmiBlitz3.ab3@19582>   MOVEQ #0,d2
0002FE74 <AmiBlitz3.ab3@19583>   LEA ptr_parameterstore,a1
0002FE76 <AmiBlitz3.ab3@19586>   ADDQ.l #1,d2
0002FE78 <AmiBlitz3.ab3@19587>   MOVE.b (a0)+,d0
0002FE7C <AmiBlitz3.ab3@19588> 
0002FE80 <AmiBlitz3.ab3@19589>   BNE 'nodollar
0002FE84 <AmiBlitz3.ab3@19590>   MOVE.b #"S",d0
0002FE88 <AmiBlitz3.ab3@19592>   CMP.b #"?",d0
0002FE8C <AmiBlitz3.ab3@19593>   BEQ 'nolabelwrite
0002FE8E <AmiBlitz3.ab3@19594>   MOVE.b d0,(a1)+
0002FE92 <AmiBlitz3.ab3@19595>   BNE 'l2
0002FE98 <AmiBlitz3.ab3@19596>   MOVE.w #"__",-1(a1)
0002FE9A <AmiBlitz3.ab3@19597>   ADDQ.l #2,d2
0002FE9E <AmiBlitz3.ab3@19598>   CLR.b 1(a1)
0002FEA4 <AmiBlitz3.ab3@19599>   JSR findlabel2
0002FEA8 <AmiBlitz3.ab3@19600>   BEQ 'l3
0002FEAE <AmiBlitz3.ab3@19601>   JSR addlabelhash
0002FEB2 <AmiBlitz3.ab3@19604>   CLR.l 4(a2)
0002FEB6 <AmiBlitz3.ab3@19605>   MOVE.l $14(a7),a0
0002FEBA <AmiBlitz3.ab3@19606>   MOVE.l $10(a7),d1
0002FEBE <AmiBlitz3.ab3@19607>   SUB.l $12(a0),d1
0002FEC2 <AmiBlitz3.ab3@19608>   ADD.l $28(a0),d1
0002FEC6 <AmiBlitz3.ab3@19609>   MOVE.l d1,8(a2)
0002FECA <AmiBlitz3.ab3@19610> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002FED0 <AmiBlitz3.ab3@19613>   TST.b typecheck
0002FED4 <AmiBlitz3.ab3@19614>   BEQ 'p1
0002FEDA <AmiBlitz3.ab3@19615>   MOVE.l lasttoken,d1
0002FEE0 <AmiBlitz3.ab3@19616>   CMP.l #$da01,d1                                          ;poke
0002FEE4 <AmiBlitz3.ab3@19617>   BEQ 'lp1
0002FEEA <AmiBlitz3.ab3@19618>   CMP.l #$da02,d1                                          ;peek
0002FEEE <AmiBlitz3.ab3@19619>   BNE 'p1
0002FEF4 <AmiBlitz3.ab3@19622>   TST.b peekaddrsize
0002FEF8 <AmiBlitz3.ab3@19623>   BEQ 'p1
0002FF00 <AmiBlitz3.ab3@19624>   CMP.b #3,peekaddrsize
0002FF04 <AmiBlitz3.ab3@19625>   BNE errormsg_onlylong
0002FF0A <AmiBlitz3.ab3@19626>   CLR.b peekaddrsize
0002FF10 <AmiBlitz3.ab3@19634>    TST.b fpu
0002FF14 <AmiBlitz3.ab3@19635>   BNE 'optf
0002FF1A <AmiBlitz3.ab3@19636>   TST.b fast
0002FF1E <AmiBlitz3.ab3@19637>   BEQ JL11a2
0002FF26 <AmiBlitz3.ab3@19644>   CMP.l #"Poke",20(a2)                                     ;poke
0002FF2A <AmiBlitz3.ab3@19645>   BNE peekopt
0002FF2E <AmiBlitz3.ab3@19646>   TST.b 24(a2)
0002FF32 <AmiBlitz3.ab3@19647>   BNE peekopt
0002FF36 <AmiBlitz3.ab3@19648>   CMP.b #3,d2
0002FF3A <AmiBlitz3.ab3@19649>   BNE 'lw1
0002FF40 <AmiBlitz3.ab3@19652>   MOVE.l #$21821990,d1
0002FF44 <AmiBlitz3.ab3@19653> BRA.s 'lpx
0002FF48 <AmiBlitz3.ab3@19656>   CMP.b #2,d2
0002FF4C <AmiBlitz3.ab3@19657>   BNE 'lb1
0002FF52 <AmiBlitz3.ab3@19658>   MOVE.l #$31821990,d1
0002FF56 <AmiBlitz3.ab3@19659> BRA.s 'lpx
0002FF5A <AmiBlitz3.ab3@19662>   CMP.b #1,d2
0002FF5E <AmiBlitz3.ab3@19663>   BNE 'lp3
0002FF64 <AmiBlitz3.ab3@19664>   MOVE.l #$11821990,d1
0002FF68 <AmiBlitz3.ab3@19665> BRA.s 'lpx
0002FF6C <AmiBlitz3.ab3@19668>   CMP.b #5,d2
0002FF70 <AmiBlitz3.ab3@19669>     BNE JL11a2
0002FF76 <AmiBlitz3.ab3@19670>     TST.b fpu
0002FF7A <AmiBlitz3.ab3@19671>     BEQ 'll1
0002FF80 <AmiBlitz3.ab3@19672>      MOVE.l destpointer,a4
0002FF88 <AmiBlitz3.ab3@19673>     CMP.l #$f22d4500,-6(a4)
0002FF8C <AmiBlitz3.ab3@19674>     BNE 'noglob
0002FF92 <AmiBlitz3.ab3@19675>     TST.b doublepeek
0002FF96 <AmiBlitz3.ab3@19676>     BNE 'noglob
0002FF9C <AmiBlitz3.ab3@19677>     MOVE.w -2(a4),-4(a4)
0002FFA2 <AmiBlitz3.ab3@19678>     MOVE.w #$21ad,-6(a4)
0002FFA8 <AmiBlitz3.ab3@19679>     MOVE.w #$1990,-2(a4)
0002FFB0 <AmiBlitz3.ab3@19680>     MOVE.w #9,peeksize
0002FFB2 <AmiBlitz3.ab3@19681>     ADDQ #8,a7
0002FFB4 <AmiBlitz3.ab3@19682> RTS
0002FFBC <AmiBlitz3.ab3@19685>     CMP.l #$f22c4500,-6(a4)
0002FFC0 <AmiBlitz3.ab3@19686>     BNE 'nolocal
0002FFC6 <AmiBlitz3.ab3@19687>     MOVE.w -2(a4),-4(a4)
0002FFCC <AmiBlitz3.ab3@19688>     TST.b doublepeek                                       ;dont move longfix on double floats
0002FFD0 <AmiBlitz3.ab3@19689>     BNE 'nolocal
0002FFD6 <AmiBlitz3.ab3@19690>     MOVE.w #$21ac,-6(a4)
0002FFDC <AmiBlitz3.ab3@19691>     MOVE.w #$1990,-2(a4)
0002FFE4 <AmiBlitz3.ab3@19692>     MOVE.w #9,peeksize
0002FFE6 <AmiBlitz3.ab3@19693>     ADDQ #8,a7
0002FFE8 <AmiBlitz3.ab3@19694> RTS
0002FFEC <AmiBlitz3.ab3@19697>     MOVE.w #$f230,d1
0002FFF0 <AmiBlitz3.ab3@19698>     BSR writeword
0002FFF6 <AmiBlitz3.ab3@19699>   MOVE.l #$65001990,d1
0002FFFC <AmiBlitz3.ab3@19700>   TST.b doublepeek
00030000 <AmiBlitz3.ab3@19701>   BEQ 'lpx
00030006 <AmiBlitz3.ab3@19702>   OR.l   #$10000000,d1
00030008 <AmiBlitz3.ab3@19706>   ADDQ #8,a7
00030010 <AmiBlitz3.ab3@19707>   MOVE.w #9,peeksize
00030014 <AmiBlitz3.ab3@19708> BRA writelong
0003001C <AmiBlitz3.ab3@19711>   CMP.l #"Peek",20(a2)
00030020 <AmiBlitz3.ab3@19712>   BNE 'l10
00030024 <AmiBlitz3.ab3@19713>   TST.b 24(a2)
00030028 <AmiBlitz3.ab3@19714>   BNE 'l10
00030030 <AmiBlitz3.ab3@19715>   CMP.w #7,peeksize
00030034 <AmiBlitz3.ab3@19716>   BEQ 'l10
0003003C <AmiBlitz3.ab3@19717>    CMP.w #3,peeksize
00030040 <AmiBlitz3.ab3@19718>    BNE.s 'lw1
00030046 <AmiBlitz3.ab3@19721>   MOVE.l #$20301990,d1
0003004A <AmiBlitz3.ab3@19722> BRA exitjsr
00030052 <AmiBlitz3.ab3@19725>   CMP.w #2,peeksize
00030056 <AmiBlitz3.ab3@19726>    BNE.s 'lb1
0003005C <AmiBlitz3.ab3@19727>    MOVE.l #$30301990,d1
00030060 <AmiBlitz3.ab3@19728> BRA exitjsr
00030068 <AmiBlitz3.ab3@19731>   CMP.w #1,peeksize
0003006C <AmiBlitz3.ab3@19732>    BNE.s 'lf1
00030072 <AmiBlitz3.ab3@19733>    MOVE.l #$10301990,d1
00030076 <AmiBlitz3.ab3@19734> BRA exitjsr
0003007E <AmiBlitz3.ab3@19737>   CMP.w #5,peeksize
00030082 <AmiBlitz3.ab3@19738>    BNE 'l10
00030088 <AmiBlitz3.ab3@19739>    TST.b fpu
0003008C <AmiBlitz3.ab3@19740>    BEQ 'll1
00030090 <AmiBlitz3.ab3@19741>    MOVE.w #$f230,d1
00030094 <AmiBlitz3.ab3@19742>    BSR writeword
00030096 <AmiBlitz3.ab3@19743>    MOVEQ #0,d1
0003009C <AmiBlitz3.ab3@19744>    MOVE.w tempregnum,d1
0003009E <AmiBlitz3.ab3@19745>    ASL.l #7,d1
000300A0 <AmiBlitz3.ab3@19746>    ASL.l #8,d1
000300A2 <AmiBlitz3.ab3@19747>    ASL.l #8,d1
000300A8 <AmiBlitz3.ab3@19748>    ADD.l #$44001990,d1
000300AE <AmiBlitz3.ab3@19749>     TST.b doublepeek
000300B2 <AmiBlitz3.ab3@19750>     BEQ 'lpx2
000300B8 <AmiBlitz3.ab3@19751>     OR.l   #$10000000,d1
000300BC <AmiBlitz3.ab3@19753> BRA exitjsr
000300C0 <AmiBlitz3.ab3@19757>   MOVE.w #$4EB9,D1
000300C4 <AmiBlitz3.ab3@19758>    BSR.w writeword                                         ;writesysjsr
000300C8 <AmiBlitz3.ab3@19759>   MOVEM.l (A7)+,a0/D1
000300CE <AmiBlitz3.ab3@19760>    JSR addoff
000300D2 <AmiBlitz3.ab3@19761>   SUB.l $12(A0),D1
000300D6 <AmiBlitz3.ab3@19762>   ADD.l $28(A0),D1
000300DA <AmiBlitz3.ab3@19763> BRA.w writelong
000300DC <AmiBlitz3.ab3@19768>   MOVE.w D1,-(A7)
000300E0 <AmiBlitz3.ab3@19769>   MOVE.w tstmode(PC),D1
000300E4 <AmiBlitz3.ab3@19770>    BSR.w writeword
000300E8 <AmiBlitz3.ab3@19771>    BSR.w getbbase
000300EC <AmiBlitz3.ab3@19772>    BSR.w writeword
000300EE <AmiBlitz3.ab3@19773>   MOVE.w (A7)+,D1
000300F2 <AmiBlitz3.ab3@19774>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
000300F6 <AmiBlitz3.ab3@19775>    BSR.w Atokejsr
000300FA <AmiBlitz3.ab3@19776>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
000300FC <AmiBlitz3.ab3@19777> RTS
00030100 <AmiBlitz3.ab3@19785>   MOVE.w blitzoff(PC),D1
00030104 <AmiBlitz3.ab3@19786>   CMP.w #-$1,D1
00030108 <AmiBlitz3.ab3@19787>    BNE.w getbbase__done
0003010E <AmiBlitz3.ab3@19788>   ADDQ.w #1,globalvarpointer
00030116 <AmiBlitz3.ab3@19789>   BCLR #$0,globalvarpointer+1
0003011C <AmiBlitz3.ab3@19790>   MOVE.w globalvarpointer,D1
00030122 <AmiBlitz3.ab3@19791>   MOVE.w D1,blitzoff
00030128 <AmiBlitz3.ab3@19792>   ADDQ.w #2,globalvarpointer
0003012A <AmiBlitz3.ab3@19795> RTS
0003012E <AmiBlitz3.ab3@19799> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030130 <AmiBlitz3.ab3@19802> inline:     Ds.w 1
00030132 <AmiBlitz3.ab3@19803> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030134 <AmiBlitz3.ab3@19804> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030136 <AmiBlitz3.ab3@19808>   MOVE.w (A2)+,D1
0003013A <AmiBlitz3.ab3@19809>    BEQ.w fetchregs__done
0003013C <AmiBlitz3.ab3@19810>   MOVE.w (A2)+,D2
00030140 <AmiBlitz3.ab3@19811>    BSR.w toreg
00030144 <AmiBlitz3.ab3@19812> BRA.w fetchregs
00030146 <AmiBlitz3.ab3@19815> RTS
0003014A <AmiBlitz3.ab3@19820>   CMP.w #-$100,D2
0003014E <AmiBlitz3.ab3@19821>    BCC.w toreg__yeah
00030152 <AmiBlitz3.ab3@19823>   BCLR #$F,D2
00030156 <AmiBlitz3.ab3@19824>    BEQ.w toreg__nobm
0003015C <AmiBlitz3.ab3@19826>   TST.w blitzmode
00030160 <AmiBlitz3.ab3@19827>    BMI.w toreg__yeah
00030162 <AmiBlitz3.ab3@19828> RTS
00030166 <AmiBlitz3.ab3@19831>   BCLR #$E,D2
0003016A <AmiBlitz3.ab3@19832>    BEQ.w toreg__yeah
00030170 <AmiBlitz3.ab3@19834>   TST.w blitzmode
00030174 <AmiBlitz3.ab3@19835>    BPL.w toreg__yeah
00030176 <AmiBlitz3.ab3@19836> RTS
0003017C <AmiBlitz3.ab3@19839>   JSR uselib
0003017E <AmiBlitz3.ab3@19840>   TST.b D2
00030182 <AmiBlitz3.ab3@19841>    BEQ.w toreg__norm
00030186 <AmiBlitz3.ab3@19842>   CMP.b #$4,D2
0003018A <AmiBlitz3.ab3@19843>    BNE.w toreg__suv
0003018E <AmiBlitz3.ab3@19844>   MOVE.w #$0004,-(A7)
00030194 <AmiBlitz3.ab3@19845>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030198 <AmiBlitz3.ab3@19846> BRA.w toreg__sendmd
0003019C <AmiBlitz3.ab3@19849>   CMP.b #$3,D2
000301A0 <AmiBlitz3.ab3@19850>    BNE.w toreg__notnmax
000301A2 <AmiBlitz3.ab3@19851>   CLR.w -(A7)
000301A8 <AmiBlitz3.ab3@19852>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
000301AA <AmiBlitz3.ab3@19858>   LSR.w #8,D2
000301AE <AmiBlitz3.ab3@19859>   MOVE.w #$303C,D1                                         ;move.w #x,dn
000301B2 <AmiBlitz3.ab3@19860>   BTST #$7,D2
000301B6 <AmiBlitz3.ab3@19861>    BEQ.w toreg__skipad
000301BA <AmiBlitz3.ab3@19862>   MOVE.w #$307C,D1                                         ;move.w #x,an
000301BE <AmiBlitz3.ab3@19863>   CMP.w #$16,D2
000301C2 <AmiBlitz3.ab3@19864>    BNE.w toreg__skipad
000301CA <AmiBlitz3.ab3@19865>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
000301CE <AmiBlitz3.ab3@19868>   ANDI.w #$7,D2
000301D0 <AmiBlitz3.ab3@19869>   LSL.w #8,D2
000301D2 <AmiBlitz3.ab3@19870>   LSL.w #1,D2
000301D4 <AmiBlitz3.ab3@19871>   OR.w D2,D1
000301D8 <AmiBlitz3.ab3@19872>    BSR.w writeword
000301DC <AmiBlitz3.ab3@19873>   MOVE.l $12(A1),D1
000301DE <AmiBlitz3.ab3@19874>   ADD.l (A7)+,D1
000301E2 <AmiBlitz3.ab3@19875>   MOVE.w $0(A1,D1.L),D1
000301E4 <AmiBlitz3.ab3@19876>   ADD.w (A7)+,D1
000301E8 <AmiBlitz3.ab3@19877> BRA.w writeword
000301EA <AmiBlitz3.ab3@19880>   MOVE.w D2,-(A7)
000301EC <AmiBlitz3.ab3@19881>   LSR.w #8,D2
000301F0 <AmiBlitz3.ab3@19882>   CMP.w #$16,D2
000301F4 <AmiBlitz3.ab3@19883>    BNE.w toreg__isnta6
000301FC <AmiBlitz3.ab3@19884>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030200 <AmiBlitz3.ab3@19887>   MOVE.l $12(A1),D1                                        ;objectspace
00030204 <AmiBlitz3.ab3@19888>   MOVE.w -$6(A1,D1.L),-(A7)
00030208 <AmiBlitz3.ab3@19889>    BSR.w makeregop
0003020C <AmiBlitz3.ab3@19890>    BSR.w writeword
0003020E <AmiBlitz3.ab3@19891>   MOVE.w (A7)+,D1
00030210 <AmiBlitz3.ab3@19892>   MOVE.w (A7)+,D2
00030212 <AmiBlitz3.ab3@19893>   TST.b D2
00030216 <AmiBlitz3.ab3@19894>    BPL.w toreg__skippy1
0003021A <AmiBlitz3.ab3@19899>    BSR.w writeword                                         ;move.l x(a5),dn
0003021C <AmiBlitz3.ab3@19900>   MOVE.w D2,-(A7)                                          ;store reg used
00030220 <AmiBlitz3.ab3@19902>   ADDA.l $12(A1),A1
00030222 <AmiBlitz3.ab3@19903>   MOVE.b D2,D1
00030226 <AmiBlitz3.ab3@19904>   ANDI.w #$7,D1
0003022C <AmiBlitz3.ab3@19906>   TST.b debugmode
00030230 <AmiBlitz3.ab3@19907>    BEQ.w toreg__norerr
00030232 <AmiBlitz3.ab3@19909>   MOVE.w D1,-(A7)
00030234 <AmiBlitz3.ab3@19910>   LSL.w #8,D1
00030236 <AmiBlitz3.ab3@19911>   LSL.w #1,D1
0003023A <AmiBlitz3.ab3@19912>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0003023E <AmiBlitz3.ab3@19913>    BSR.w writeword
00030242 <AmiBlitz3.ab3@19914>   MOVE.w -$4(A1),D1
00030246 <AmiBlitz3.ab3@19915>    BSR.w writeword
0003024A <AmiBlitz3.ab3@19916>   MOVE.l maxchk(PC),D1                                  ;bcs
0003024E <AmiBlitz3.ab3@19917>    BSR.w writelong
00030250 <AmiBlitz3.ab3@19918>   MOVE.l A2,-(A7)
00030254 <AmiBlitz3.ab3@19919>   MOVE.w #$C30A,D1
00030258 <AmiBlitz3.ab3@19920>    BSR.w Atokejsr
0003025A <AmiBlitz3.ab3@19921>   MOVEA.l (A7)+,A2
0003025C <AmiBlitz3.ab3@19922>   MOVE.w (A7)+,D1
00030260 <AmiBlitz3.ab3@19925>   MOVE.w -$2(A1),D2                                        ;shift amount
00030264 <AmiBlitz3.ab3@19928>   CMP.w #$9,D2
00030268 <AmiBlitz3.ab3@19929>    BCS.w toreg__simp
0003026C <AmiBlitz3.ab3@19930>   MOVEM.w D1-D2,-(A7)
0003026E <AmiBlitz3.ab3@19932>   MOVEQ.l #$00,D2                                          ;!!!!!
00030270 <AmiBlitz3.ab3@19934>   LSL.w #8,D2
00030272 <AmiBlitz3.ab3@19935>   LSL.w #1,D2
00030274 <AmiBlitz3.ab3@19936>   OR.w D2,D1
00030278 <AmiBlitz3.ab3@19937>   OR.w lsldn(PC),D1
0003027C <AmiBlitz3.ab3@19938>    BSR.w writeword
00030280 <AmiBlitz3.ab3@19939>   MOVEM.w (A7)+,D1-D2
00030282 <AmiBlitz3.ab3@19940>   SUBQ.w #8,D2
00030286 <AmiBlitz3.ab3@19941> BRA.w toreg__shloop
00030288 <AmiBlitz3.ab3@19944>   MOVE.w D1,-(A7)
0003028C <AmiBlitz3.ab3@19945>   OR.w #$48c0,d1
00030290 <AmiBlitz3.ab3@19946>   BSR writeword
00030292 <AmiBlitz3.ab3@19947>   MOVE.w (a7),d1
00030294 <AmiBlitz3.ab3@19948>   TST.w D2
00030298 <AmiBlitz3.ab3@19949>   BEQ.w toreg__simp2
0003029C <AmiBlitz3.ab3@19951>   ANDI.w #$7,D2                                            ;?????
0003029E <AmiBlitz3.ab3@19953>   LSL.w #8,D2
000302A0 <AmiBlitz3.ab3@19954>   LSL.w #1,D2
000302A2 <AmiBlitz3.ab3@19955>   OR.w D2,D1
000302A6 <AmiBlitz3.ab3@19956>   OR.w lsldn(PC),D1
000302AA <AmiBlitz3.ab3@19957>    BSR.w writeword
000302AC <AmiBlitz3.ab3@19963>   MOVE.w (A7)+,D1
000302B0 <AmiBlitz3.ab3@19964>   ANDI.w #$7,D1
000302B4 <AmiBlitz3.ab3@19965>   OR.w maxdo(PC),D1
000302B6 <AmiBlitz3.ab3@19966>   MOVE.w (A7)+,D2
000302B8 <AmiBlitz3.ab3@19967>   LSL.w #1,D2
000302BC <AmiBlitz3.ab3@19968>   ANDI.w #$E00,D2
000302BE <AmiBlitz3.ab3@19969>   OR.w D2,D1
000302C2 <AmiBlitz3.ab3@19970> BRA.w writeword
000302C6 <AmiBlitz3.ab3@19973>   CMP.b #$1,D2
000302CA <AmiBlitz3.ab3@19974>    BEQ.w toreg__skippy
000302CC <AmiBlitz3.ab3@19978>   ADDQ.w #4,D1
000302D2 <AmiBlitz3.ab3@19980>   TST.b debugmode
000302D6 <AmiBlitz3.ab3@19981>    BEQ.w toreg__skippy
000302DA <AmiBlitz3.ab3@19983>    BSR.w writeword
000302DC <AmiBlitz3.ab3@19984>   SWAP D1
000302E0 <AmiBlitz3.ab3@19985>   MOVE.w toreg__theretest(PC),D1
000302E2 <AmiBlitz3.ab3@19986>   SWAP D1
000302E6 <AmiBlitz3.ab3@19987>    BSR.w writelong
000302EA <AmiBlitz3.ab3@19988>   MOVE.l toreg__theretest+4(PC),D1
000302EE <AmiBlitz3.ab3@19989>    BSR.w writelong
000302F2 <AmiBlitz3.ab3@19990>   MOVE.l toreg__theretest+8(PC),D1
000302F6 <AmiBlitz3.ab3@19991> BRA.w writelong
000302FA <AmiBlitz3.ab3@19994> BRA.w writeword
000302FE <AmiBlitz3.ab3@19999>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030302 <AmiBlitz3.ab3@20000>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
00030304 <AmiBlitz3.ab3@20001>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030306 <AmiBlitz3.ab3@20002>             Dc.b $4E,$40                                   ;TRAP   #00
00030308 <AmiBlitz3.ab3@20007>   LSR.w #8,D2
0003030C <AmiBlitz3.ab3@20008>   CMP.b #$16,D2
00030310 <AmiBlitz3.ab3@20009>    BNE.w toreg__nota6
00030314 <AmiBlitz3.ab3@20010>   MOVE.w $A(A1),D1
0003031A <AmiBlitz3.ab3@20011>   CMP.w lasta6,D1
0003031E <AmiBlitz3.ab3@20012>    BEQ.w toreg__sk
00030324 <AmiBlitz3.ab3@20013>   MOVE.w D1,lasta6
00030328 <AmiBlitz3.ab3@20016>    BSR.w makeregop
0003032C <AmiBlitz3.ab3@20017>   TST.w $1A(A1)
00030330 <AmiBlitz3.ab3@20018>    BPL.w toreg__long
00030334 <AmiBlitz3.ab3@20019>   CMP.w stackop(PC),D1
00030338 <AmiBlitz3.ab3@20020>    BNE.w toreg__notst
0003033E <AmiBlitz3.ab3@20021>   SUBQ.w #2,a2offset
00030342 <AmiBlitz3.ab3@20024>    ORI.w #$1000,D1
00030346 <AmiBlitz3.ab3@20027>    BSR.w writeword
0003034A <AmiBlitz3.ab3@20028>   MOVE.w $A(A1),D1
0003034E <AmiBlitz3.ab3@20029>    BSR.w writeword
00030350 <AmiBlitz3.ab3@20032> RTS
00030352 <AmiBlitz3.ab3@20036> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030356 <AmiBlitz3.ab3@20037> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0003035C <AmiBlitz3.ab3@20038>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0003035E <AmiBlitz3.ab3@20041> 
00030360 <AmiBlitz3.ab3@20044>             Dc.b $00,$00
00030364 <AmiBlitz3.ab3@20045> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030368 <AmiBlitz3.ab3@20052>   CMP.b #$FF,D2
0003036C <AmiBlitz3.ab3@20053>    BNE.w makeregop__notst
00030370 <AmiBlitz3.ab3@20054>   MOVE.w stackop(PC),D1
00030376 <AmiBlitz3.ab3@20055>   ADDQ.w #4,a2offset
00030378 <AmiBlitz3.ab3@20056> RTS
0003037A <AmiBlitz3.ab3@20059>   MOVE.l A3,-(A7)
00030380 <AmiBlitz3.ab3@20060>   LEA regtransd,A3
00030384 <AmiBlitz3.ab3@20061>   BTST #$4,D2
00030388 <AmiBlitz3.ab3@20062>    BEQ.w makeregop__skip
0003038E <AmiBlitz3.ab3@20063>   LEA regtransa,A3
00030392 <AmiBlitz3.ab3@20066>   ANDI.w #$7,D2
00030394 <AmiBlitz3.ab3@20067>   MOVE.w D2,D1
00030396 <AmiBlitz3.ab3@20068>   LSL.w #8,D1
00030398 <AmiBlitz3.ab3@20069>   LSL.w #1,D1
0003039A <AmiBlitz3.ab3@20070>   OR.w (A3),D1
0003039C <AmiBlitz3.ab3@20071>   MOVEA.l (A7)+,A3
0003039E <AmiBlitz3.ab3@20072> RTS
000303A2 <AmiBlitz3.ab3@20078>   CMP.w #$3C,D0
000303A6 <AmiBlitz3.ab3@20079>    BCS.w ifchar__no
000303AA <AmiBlitz3.ab3@20080>   CMP.w #$3E,D0
000303AE <AmiBlitz3.ab3@20081>    BHI.w ifchar__no
000303B2 <AmiBlitz3.ab3@20082>   SUBI.w #$3C,D0
000303B4 <AmiBlitz3.ab3@20083>   CMP.w D0,D0
000303B6 <AmiBlitz3.ab3@20086> RTS
000303C0 <AmiBlitz3.ab3@20091>   MOVE.w oldqflag,instringon
000303C6 <AmiBlitz3.ab3@20092>   MOVEA.l lastsourcepos,A5
000303CC <AmiBlitz3.ab3@20097>   MOVE.w regnum,-(A7)
000303D2 <AmiBlitz3.ab3@20098>   CLR.w regnum
000303D8 <AmiBlitz3.ab3@20099>   MOVE.l destpointer,-(A7)
000303DE <AmiBlitz3.ab3@20100>   MOVE.l destbufferend,-(A7)
000303E4 <AmiBlitz3.ab3@20101>   MOVE.w dontwrite,-(A7)
000303EA <AmiBlitz3.ab3@20102>   MOVE.w lasta6,-(A7)
000303F0 <AmiBlitz3.ab3@20103>   MOVE.w cfetchmode,-(A7)
000303F4 <AmiBlitz3.ab3@20104>    BNE.w JL_0_BFB6
000303FE <AmiBlitz3.ab3@20105>   MOVE.l destbufferend,oldlibat
00030404 <AmiBlitz3.ab3@20106>   MOVEA.l constpcat,A0
0003040A <AmiBlitz3.ab3@20107>   MOVE.l A0,destpointer
0003040E <AmiBlitz3.ab3@20108> BRA.w JL_0_BFBC
00030414 <AmiBlitz3.ab3@20111>   MOVEA.l destpointer,A0
00030416 <AmiBlitz3.ab3@20114>   MOVE.l A0,-(A7)
00030420 <AmiBlitz3.ab3@20115>   MOVE.l constlibat,destbufferend
00030426 <AmiBlitz3.ab3@20116>   CLR.w dontwrite
0003042E <AmiBlitz3.ab3@20118>   MOVE.w #$FFFF,lasta6
00030436 <AmiBlitz3.ab3@20119>   MOVE.w #$FFFF,cfetchmode
0003043A <AmiBlitz3.ab3@20121>     BSR.w arreval
0003043C <AmiBlitz3.ab3@20122>    MOVE.l (a7),a0
00030578 <AmiBlitz3.ab3@20124>  !newcalc
0003057C <AmiBlitz3.ab3@20125>    BEQ 'l10
0003057E <AmiBlitz3.ab3@20126>    MOVE.l d0,d3
00030580 <AmiBlitz3.ab3@20127>    MOVEA.l (A7)+,A0
00030584 <AmiBlitz3.ab3@20128> BRA bc1
00030588 <AmiBlitz3.ab3@20131>    MOVE.w #$2600,D1
0003058E <AmiBlitz3.ab3@20132>   OR.w regnum,D1
00030592 <AmiBlitz3.ab3@20133>    BSR.w writeword
00030596 <AmiBlitz3.ab3@20134>   MOVE.w #$4E75,D1
0003059A <AmiBlitz3.ab3@20135>    BSR.w writeword
000305A0 <AmiBlitz3.ab3@20136>   MOVE.w dontwrite,D1
000305A4 <AmiBlitz3.ab3@20137>    BNE.w conmemerr
000305A6 <AmiBlitz3.ab3@20138>   MOVEA.l (A7)+,A0
000305A8 <AmiBlitz3.ab3@20139>   NOP
000305AE <AmiBlitz3.ab3@20140>    JSR Aclearcache                                         ;simple expression
000305B0 <AmiBlitz3.ab3@20143>    JSR (A0)                                                ;writeresult
000305B6 <AmiBlitz3.ab3@20146>   MOVE.w (A7)+,cfetchmode
000305BC <AmiBlitz3.ab3@20147>   MOVE.w (A7)+,lasta6
000305C2 <AmiBlitz3.ab3@20148>   MOVE.w (A7)+,dontwrite
000305C8 <AmiBlitz3.ab3@20149>   MOVE.l (A7)+,destbufferend
000305CE <AmiBlitz3.ab3@20150>   MOVE.l (A7)+,destpointer
000305D4 <AmiBlitz3.ab3@20151>   MOVE.w (A7)+,regnum
000305DA <AmiBlitz3.ab3@20154> JMP reget
000305DE <AmiBlitz3.ab3@20157> oldlibat:   Ds.l 1
000305E4 <AmiBlitz3.ab3@20161>   LEA incdir,A0
000305E8 <AmiBlitz3.ab3@20164>   CMP.w #$22,D0
000305EC <AmiBlitz3.ab3@20165>    BEQ.w JL_0_C052
000305EE <AmiBlitz3.ab3@20166>   MOVE.b D0,(A0)+
000305F0 <AmiBlitz3.ab3@20167>   TST.w D0
000305F4 <AmiBlitz3.ab3@20168>    BEQ.w JL_0_C05A
000305F8 <AmiBlitz3.ab3@20169>    BMI.w syntaxerr
000305FE <AmiBlitz3.ab3@20172>   JSR get1bytemain                                         ;_long
00030602 <AmiBlitz3.ab3@20173> BRA.w JL_0_C03E
00030604 <AmiBlitz3.ab3@20176> RTS
0003060A <AmiBlitz3.ab3@20180>   LEA ptr_parameterstore,A1                                ;getparameter
00030610 <AmiBlitz3.ab3@20181>   LEA incdir,A0
00030612 <AmiBlitz3.ab3@20182>   MOVEQ.l #-$01,D2
00030614 <AmiBlitz3.ab3@20185>     ADDQ.w #1,D2
00030616 <AmiBlitz3.ab3@20186>     MOVE.b (A0)+,(A1)+
0003061A <AmiBlitz3.ab3@20187>   BNE.w JL_0_C06A
0003061C <AmiBlitz3.ab3@20188>   SUBQ.w #1,A1
00030626 <AmiBlitz3.ab3@20190>   MOVE.w oldqflag,instringon
0003062C <AmiBlitz3.ab3@20191>   MOVEA.l lastsourcepos,A5
00030632 <AmiBlitz3.ab3@20195>   JSR get1bytemain
00030634 <AmiBlitz3.ab3@20196>   TST.w D0
00030638 <AmiBlitz3.ab3@20197>    BMI.w syntaxerr
0003063C <AmiBlitz3.ab3@20198>   CMP.b #$22,D0
00030640 <AmiBlitz3.ab3@20199>    BEQ.w JL_0_C078
00030642 <AmiBlitz3.ab3@20200>   MOVE.b D0,(A1)+
00030646 <AmiBlitz3.ab3@20201>    BEQ.w JL_0_C096
00030648 <AmiBlitz3.ab3@20202>   ADDQ.w #1,D2
0003064C <AmiBlitz3.ab3@20203> BRA.w JL_0_C078
0003064E <AmiBlitz3.ab3@20206>   TST.w D2
00030652 <AmiBlitz3.ab3@20207>    BEQ.w syntaxerr
00030654 <AmiBlitz3.ab3@20208> RTS
0003065A <AmiBlitz3.ab3@20212>   MOVEA.l constantbase,A2
0003065E <AmiBlitz3.ab3@20213>   MOVEA.l $E(A2),A5
00030664 <AmiBlitz3.ab3@20214>   MOVE.l a5,includesourceline
0003066A <AmiBlitz3.ab3@20215>   LEA inctab,a0
00030670 <AmiBlitz3.ab3@20216>   MOVE.w ininclude,d0
00030674 <AmiBlitz3.ab3@20217>   MOVE.l $0(a0,d0*4),d0
00030678 <AmiBlitz3.ab3@20218>   MOVEA.l $4(A2),A0
0003067C <AmiBlitz3.ab3@20220>   LEA $0(A0,D0.l),A0
0003067E <AmiBlitz3.ab3@20221>   MOVEA.l A5,A1
00030680 <AmiBlitz3.ab3@20224>     CMPA.l A0,A1
00030684 <AmiBlitz3.ab3@20225>      BCC.w JL_0_C0C6
00030686 <AmiBlitz3.ab3@20226>   TST.b (A1)+
0003068A <AmiBlitz3.ab3@20227>   BNE.w JL_0_C0B6
0003068E <AmiBlitz3.ab3@20228> BRA.w JL_0_C112
00030692 <AmiBlitz3.ab3@20231>   MOVEA.l $4(A2),A1
00030694 <AmiBlitz3.ab3@20234>   CMPA.l A0,A5
00030698 <AmiBlitz3.ab3@20235>   BCC.w JL_0_C0D6
0003069A <AmiBlitz3.ab3@20236>   MOVE.b (A5)+,(A1)+
0003069E <AmiBlitz3.ab3@20237> BRA.w JL_0_C0CA
000306A0 <AmiBlitz3.ab3@20240>   MOVE.l A1,D0
000306A4 <AmiBlitz3.ab3@20241>   SUB.l $4(A2),D0
000306AA <AmiBlitz3.ab3@20242>   LEA inctab,a0
000306AC <AmiBlitz3.ab3@20243>   MOVEQ #0,d1
000306B2 <AmiBlitz3.ab3@20244>   MOVE.w ininclude,d1
000306B6 <AmiBlitz3.ab3@20245>   MOVE.l d0,0(a0,d1*4)
000306BC <AmiBlitz3.ab3@20247>   MOVEA.l _dosbase,A6
000306C0 <AmiBlitz3.ab3@20248>   MOVE.l $8(A2),D1
000306C2 <AmiBlitz3.ab3@20249>   MOVE.l A1,D2
000306C8 <AmiBlitz3.ab3@20250>   MOVE.l D2,include_base
000306CE <AmiBlitz3.ab3@20252>   MOVE.l #$10000000,d3                                     ;load whole file
000306D0 <AmiBlitz3.ab3@20253>   SUB.l D0,D3
000306D4 <AmiBlitz3.ab3@20254>    JSR _Read(A6)
000306D6 <AmiBlitz3.ab3@20255>   TST.l D0
000306DA <AmiBlitz3.ab3@20256>    BMI.w error_reading_file
000306DE <AmiBlitz3.ab3@20257>    BEQ.w JL_0_C120
000306E4 <AmiBlitz3.ab3@20258>    MOVE.l D0,include_length
00030726 <AmiBlitz3.ab3@20259>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030750 <AmiBlitz3.ab3@20260>    !basic
00030760 <AmiBlitz3.ab3@20261>    ilen.l  = Peek.l(?include_length)
00030770 <AmiBlitz3.ab3@20262>    ibase.l = Peek.l(?include_base)
00030780 <AmiBlitz3.ab3@20263>    ido.l   = Peek.l(?include_process)
00030790 <AmiBlitz3.ab3@20264>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003079A <AmiBlitz3.ab3@20265>    If ido
000307AC <AmiBlitz3.ab3@20266>      ioffset.l = SkipXtraHeader{ibase,ilen}
000307D2 <AmiBlitz3.ab3@20267>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000307E4 <AmiBlitz3.ab3@20268>      If nilen>0
000307F4 <AmiBlitz3.ab3@20272>        Poke.l ?include_length,nilen
00030812 <AmiBlitz3.ab3@20275>    !asm
0003081C <AmiBlitz3.ab3@20276>    MOVE.l #0,include_process
00030822 <AmiBlitz3.ab3@20277>    MOVE.l include_length,D0
00030828 <AmiBlitz3.ab3@20278>    LEA inctab,a0
0003082A <AmiBlitz3.ab3@20279>    MOVEQ #0,d1
00030830 <AmiBlitz3.ab3@20280>    MOVE.w ininclude,d1
00030834 <AmiBlitz3.ab3@20281>    ADD.l d0,0(a0,d1*4)
00030838 <AmiBlitz3.ab3@20283>   MOVEA.l $4(A2),A5
0003083C <AmiBlitz3.ab3@20285>    MOVE.l 0(a0,d1*4),d0
00030840 <AmiBlitz3.ab3@20286>   CLR.b $0(A5,D0.l)
00030842 <AmiBlitz3.ab3@20289>   MOVEA.l A5,A0
00030844 <AmiBlitz3.ab3@20292>     TST.b (A0)+
00030848 <AmiBlitz3.ab3@20293>   BNE.w JL_0_C114
0003084C <AmiBlitz3.ab3@20294>   MOVE.l A0,$E(A2)
0003084E <AmiBlitz3.ab3@20295> RTS
00030852 <AmiBlitz3.ab3@20298> include_length:        Dc.l 0                              ; for tokenizer!
00030856 <AmiBlitz3.ab3@20299> include_base:          Dc.l 0
0003085A <AmiBlitz3.ab3@20300> include_process:       Dc.l 0
0003085E <AmiBlitz3.ab3@20301> include_preprocessor:  Dc.l 0
00030862 <AmiBlitz3.ab3@20305>   MOVE.l $8(A2),D1
00030868 <AmiBlitz3.ab3@20307>   MOVEA.l _dosbase,A6
0003086C <AmiBlitz3.ab3@20308>   JSR _Close(a6)
00030872 <AmiBlitz3.ab3@20309>   MOVEA.l _execbase,A6
00030876 <AmiBlitz3.ab3@20310>   MOVEA.l $4(A2),A1
0003087C <AmiBlitz3.ab3@20311>   MOVE.l #$400*8,D0                                        ;exit include
00030880 <AmiBlitz3.ab3@20313>   JSR _FreeVec(a6)
00030886 <AmiBlitz3.ab3@20316>   MOVE.l (A2),constantbase
00030888 <AmiBlitz3.ab3@20317>   MOVEA.l A2,A1
0003088A <AmiBlitz3.ab3@20318>   MOVEQ.l #$00,D0
0003088E <AmiBlitz3.ab3@20319>   MOVE.b $12(A2),D0
00030894 <AmiBlitz3.ab3@20320>   MOVEA.l _execbase,A6
0003089A <AmiBlitz3.ab3@20321>   MOVE.l mempool2,a0
0003089E <AmiBlitz3.ab3@20322>   JSR _FreePooled(A6)
000308A4 <AmiBlitz3.ab3@20323>   JSR zero_includename
000308AA <AmiBlitz3.ab3@20324>   SUBQ.w #1,ininclude
000308AE <AmiBlitz3.ab3@20325>   BNE.w AJL_0_C09E
000308B4 <AmiBlitz3.ab3@20328>   LEA _include,a0
000308B8 <AmiBlitz3.ab3@20329>   MOVEM.l a0-a6/d0-d7,-(a7)
000308BE <AmiBlitz3.ab3@20330>   LEA ptr_parameterstore,a1
000308C0 <AmiBlitz3.ab3@20333>     MOVE.b (a0)+,(a1)+
000308C4 <AmiBlitz3.ab3@20334>   BNE 'l1b
000308C6 <AmiBlitz3.ab3@20335>   MOVEQ #9,d2
000308CC <AmiBlitz3.ab3@20336>   JSR findlabel2
000308D0 <AmiBlitz3.ab3@20337>   BNE 'd
000308D4 <AmiBlitz3.ab3@20338>   CLR.l 8(a2)
000308D8 <AmiBlitz3.ab3@20341>   MOVEM.l (a7)+,a0-a6/d0-d7
000308DA <AmiBlitz3.ab3@20342> RTS
000308E0 <AmiBlitz3.ab3@20346>   MOVE.l unusedfunc,d0
000308E4 <AmiBlitz3.ab3@20347>   BEQ 'noclear
000308E8 <AmiBlitz3.ab3@20348>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
000308EA <AmiBlitz3.ab3@20351>     MOVE.l d0,a1
000308EE <AmiBlitz3.ab3@20352>     MOVE.l 4(a1),d0
000308F0 <AmiBlitz3.ab3@20353>     MOVE.l (a1),d2
000308F6 <AmiBlitz3.ab3@20354>     MOVE.l _execbase,a6
000308FA <AmiBlitz3.ab3@20355>     JSR _FreeMem(a6)
000308FC <AmiBlitz3.ab3@20356>     MOVE.l d2,d0
00030900 <AmiBlitz3.ab3@20357>   BNE 'f1
00030906 <AmiBlitz3.ab3@20358>   CLR.l unusedfunc
0003090A <AmiBlitz3.ab3@20359>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0003090C <AmiBlitz3.ab3@20362> RTS
00030912 <AmiBlitz3.ab3@20366>   MOVEA.l xinclude_base,A2
00030918 <AmiBlitz3.ab3@20367>   CLR.l xinclude_base
0003091C <AmiBlitz3.ab3@20370>     CMPA.w #$0,A2
00030920 <AmiBlitz3.ab3@20371>      BEQ.w JL_0_C186
00030922 <AmiBlitz3.ab3@20372>     MOVEQ.l #$00,D0
00030926 <AmiBlitz3.ab3@20373>     MOVE.b 4+8(A2),D0
00030928 <AmiBlitz3.ab3@20374>     MOVEA.l A2,A1
0003092A <AmiBlitz3.ab3@20375>     MOVEA.l (A2),A2
00030930 <AmiBlitz3.ab3@20376>     MOVEA.l _execbase,A6
00030936 <AmiBlitz3.ab3@20377>     MOVE.l mempool2,a0
0003093A <AmiBlitz3.ab3@20378>     JSR _FreePooled(A6)
0003093E <AmiBlitz3.ab3@20379> BRA.w JL_0_C168
00030940 <AmiBlitz3.ab3@20382> RTS
00030946 <AmiBlitz3.ab3@20386>   MOVEA.l constantbase,A2
0003094C <AmiBlitz3.ab3@20387>   CLR.l constantbase
00030950 <AmiBlitz3.ab3@20390>     CMPA.w #$0,A2
00030954 <AmiBlitz3.ab3@20391>      BEQ.w JL_0_C1DC
00030958 <AmiBlitz3.ab3@20392>     MOVE.l $8(A2),D1
0003095C <AmiBlitz3.ab3@20393>      BEQ.w JL_0_C1AE
00030962 <AmiBlitz3.ab3@20394>     MOVEA.l _dosbase,A6
00030966 <AmiBlitz3.ab3@20395>      JSR _Close(A6)
0003096A <AmiBlitz3.ab3@20398>     MOVE.l $4(A2),D0
0003096E <AmiBlitz3.ab3@20399>      BEQ.w JL_0_C1C6
00030970 <AmiBlitz3.ab3@20400>     MOVEA.l D0,A1
00030976 <AmiBlitz3.ab3@20401>     MOVE.l #$400*8,D0
0003097C <AmiBlitz3.ab3@20402>     MOVEA.l _execbase,A6
00030982 <AmiBlitz3.ab3@20403>     MOVE.l mempool,a0
00030986 <AmiBlitz3.ab3@20404>     JSR _FreeVec(a6)
00030988 <AmiBlitz3.ab3@20407>     MOVEQ.l #$00,D0
0003098C <AmiBlitz3.ab3@20408>     MOVE.b $12(A2),D0
0003098E <AmiBlitz3.ab3@20409>     MOVEA.l A2,A1
00030990 <AmiBlitz3.ab3@20410>     MOVEA.l (A2),A2
00030996 <AmiBlitz3.ab3@20411>     MOVEA.l _execbase,A6
0003099C <AmiBlitz3.ab3@20412>     MOVE.l mempool2,a0
000309A0 <AmiBlitz3.ab3@20413>     JSR _FreePooled(A6)
000309A4 <AmiBlitz3.ab3@20414> BRA.w JL_0_C194
000309A6 <AmiBlitz3.ab3@20417> RTS
000309A8 <AmiBlitz3.ab3@20421>   SWAP D0
000309AC <AmiBlitz3.ab3@20422>    BSR.w JL_0_C1E6
000309AE <AmiBlitz3.ab3@20423>   SWAP D0
000309B4 <AmiBlitz3.ab3@20426>   MOVEA.l data2,A4
000309BA <AmiBlitz3.ab3@20427>   CMPA.l allat,A4
000309BE <AmiBlitz3.ab3@20428>    BCC.w JL_0_C200
000309C0 <AmiBlitz3.ab3@20429>   MOVE.w D0,(A4)+
000309C6 <AmiBlitz3.ab3@20430>   MOVE.l A4,data2
000309C8 <AmiBlitz3.ab3@20431> RTS
000309D0 <AmiBlitz3.ab3@20434>   MOVE.w #$FFFF,dontwrite
000309D6 <AmiBlitz3.ab3@20435>   ADDQ.l #2,data2
000309D8 <AmiBlitz3.ab3@20436> RTS
000309DE <AmiBlitz3.ab3@20440>   MOVEA.l data2,A4
000309E4 <AmiBlitz3.ab3@20441>   CMPA.l allat,A4
000309E8 <AmiBlitz3.ab3@20442>    BCC.w JL_0_C22A
000309EA <AmiBlitz3.ab3@20443>   MOVE.b D0,(A4)+
000309F0 <AmiBlitz3.ab3@20444>   MOVE.l A4,data2
000309F2 <AmiBlitz3.ab3@20445> RTS
000309FA <AmiBlitz3.ab3@20448>   MOVE.w #$FFFF,dontwrite
00030A00 <AmiBlitz3.ab3@20449>   ADDQ.l #1,data2
00030A02 <AmiBlitz3.ab3@20450> RTS
00030A06 <AmiBlitz3.ab3@20454>   CMP.w #$22,D0
00030A0A <AmiBlitz3.ab3@20455>    BNE.w syntaxerr
00030A10 <AmiBlitz3.ab3@20459>   JSR get1bytemain
00030A14 <AmiBlitz3.ab3@20460>   CMP.b #$22,D0
00030A18 <AmiBlitz3.ab3@20461>    BEQ.w JL_0_C25A
00030A1A <AmiBlitz3.ab3@20462>   TST.w D0
00030A1E <AmiBlitz3.ab3@20463>    BEQ.w syntaxerr
00030A20 <AmiBlitz3.ab3@20464>   MOVE.b D0,(A0)+
00030A24 <AmiBlitz3.ab3@20465> BRA.w JL_0_C242
00030A26 <AmiBlitz3.ab3@20468>   CLR.b (A0)
00030A28 <AmiBlitz3.ab3@20469> RTS
00030A2A <AmiBlitz3.ab3@20472>   TST.l D3
00030A2C <AmiBlitz3.ab3@20473> RTS
00030A32 <AmiBlitz3.ab3@20476>   LEA ptr_parameterstore,A0
00030A38 <AmiBlitz3.ab3@20477>   LEA namebuff2,A1
00030A3A <AmiBlitz3.ab3@20480>     MOVE.b (A0)+,D0
00030A3E <AmiBlitz3.ab3@20481>     BEQ.w JL_0_C27C
00030A40 <AmiBlitz3.ab3@20482>   CMP.b (A1)+,D0
00030A44 <AmiBlitz3.ab3@20483>   BEQ.w JL_0_C26E
00030A46 <AmiBlitz3.ab3@20484> RTS
00030A48 <AmiBlitz3.ab3@20487>   TST.b (A1)
00030A4C <AmiBlitz3.ab3@20488>   BNE.w JL_0_C284
00030A4E <AmiBlitz3.ab3@20489> RTS
00030A52 <AmiBlitz3.ab3@20492>   CMP.w #$1,D0
00030A54 <AmiBlitz3.ab3@20493> RTS
00030A58 <AmiBlitz3.ab3@20497>   CMP.w #$2E,D0                                            ;dodeftype
00030A5C <AmiBlitz3.ab3@20498>    BNE.w syntaxerr
00030A60 <AmiBlitz3.ab3@20499>   BSR.w getparameter2
00030A66 <AmiBlitz3.ab3@20500>   LEA newtypebase,A2
00030A6A <AmiBlitz3.ab3@20501>   BSR.w findtype
00030A6E <AmiBlitz3.ab3@20502>    BNE.w notypeerr
00030A74 <AmiBlitz3.ab3@20503>   TST.b declare
00030A78 <AmiBlitz3.ab3@20504>    BNE 'l1
00030A7E <AmiBlitz3.ab3@20505>   TST.b declare2
00030A82 <AmiBlitz3.ab3@20506>    BEQ 'l2
00030A8A <AmiBlitz3.ab3@20509>   MOVE.b #2,nowdeclare
00030A90 <AmiBlitz3.ab3@20513>   JSR reget
00030A94 <AmiBlitz3.ab3@20514>    BNE.w JL_0_C2B4
00030A9A <AmiBlitz3.ab3@20515>   MOVE.l A2,defaulttype
00030A9C <AmiBlitz3.ab3@20516> RTS
00030AA2 <AmiBlitz3.ab3@20519>   MOVE.l defaulttype,-(A7)
00030AA8 <AmiBlitz3.ab3@20520>   MOVE.l A2,defaulttype
00030AAC <AmiBlitz3.ab3@20523>   BSR.w getparameter
00030AB0 <AmiBlitz3.ab3@20524>    BSR.w JL_0_8E3C
00030AB4 <AmiBlitz3.ab3@20525>   CMP.w #$2C,D0
00030AB8 <AmiBlitz3.ab3@20526>    BNE.w JL_0_C2D8
00030ABE <AmiBlitz3.ab3@20527>    JSR get1bytemain                                        ; was BSR.w
00030AC2 <AmiBlitz3.ab3@20528> BRA.w JL_0_C2C0
00030AC8 <AmiBlitz3.ab3@20531>   MOVE.l (A7)+,defaulttype
00030ACA <AmiBlitz3.ab3@20532> RTS
00030ACE <AmiBlitz3.ab3@20536>   LEA $4(A5),A2                                            ;fehler function
00030AD0 <AmiBlitz3.ab3@20539>   MOVE.l A2,D0
00030AD4 <AmiBlitz3.ab3@20542>   BSR.w getparameter
00030AD8 <AmiBlitz3.ab3@20543>   BSR.w JL_0_8E3C
00030ADC <AmiBlitz3.ab3@20544>   BSR.w calcvar
00030AE0 <AmiBlitz3.ab3@20545>   CMP.b #$7,D2
00030AE4 <AmiBlitz3.ab3@20546>    BNE.w mismatcherr
00030AE8 <AmiBlitz3.ab3@20547>   MOVE.w varmode(PC),-(A7)
00030AEC <AmiBlitz3.ab3@20548>   CMP.w #$3D,D0
00030AF0 <AmiBlitz3.ab3@20549>    BNE.w syntaxerr
00030AF4 <AmiBlitz3.ab3@20550>   BTST #$F,D2
00030AF8 <AmiBlitz3.ab3@20551>    BNE.w JL_0_C31C
00030AFC <AmiBlitz3.ab3@20552>   MOVE.w JL_0_C2E0(PC),D1
00030B00 <AmiBlitz3.ab3@20553>   BSR.w pokewda5s
00030B02 <AmiBlitz3.ab3@20554>   MOVE.w D3,D1
00030B06 <AmiBlitz3.ab3@20555>   BSR.w writeword
00030B0A <AmiBlitz3.ab3@20558>   MOVE.w L_0_C2E4(PC),D1
00030B0E <AmiBlitz3.ab3@20559>   BSR.w writeword
00030B14 <AmiBlitz3.ab3@20560>   ADDQ.w #1,regnum
00030B16 <AmiBlitz3.ab3@20561>   MOVEQ.l #$03,D2
00030B1A <AmiBlitz3.ab3@20562>   BSR.w eval
00030B20 <AmiBlitz3.ab3@20563>   MOVE.l #$D000,D1
00030B26 <AmiBlitz3.ab3@20564>   MOVE.l d1,lastinstruction
00030B28 <AmiBlitz3.ab3@20565>   TST.w (A7)+
00030B2C <AmiBlitz3.ab3@20566>    BEQ.w Atokejsr
00030B2E <AmiBlitz3.ab3@20567>   ADDQ.w #1,D1
00030B32 <AmiBlitz3.ab3@20568> BRA.w Atokejsr
00030B34 <AmiBlitz3.ab3@20572>   MOVE.w D0,D1
00030B38 <AmiBlitz3.ab3@20573>    BPL.w syntaxerr
00030B3C <AmiBlitz3.ab3@20574>   BCLR #$F,D1
00030B42 <AmiBlitz3.ab3@20575>    JSR searchinstr
00030B46 <AmiBlitz3.ab3@20576>   MOVE.l $12(A2),D0
00030B4A <AmiBlitz3.ab3@20577>   TST.w -$2(A2,D0.L)
00030B4E <AmiBlitz3.ab3@20578>    BEQ.w freeerr
00030B50 <AmiBlitz3.ab3@20579>   MOVEQ.l #$02,D2
00030B52 <AmiBlitz3.ab3@20580>   MOVE.l A2,-(A7)
00030B56 <AmiBlitz3.ab3@20581>    BSR.w eval
00030B58 <AmiBlitz3.ab3@20582>   MOVEA.l (A7)+,A2
00030B5E <AmiBlitz3.ab3@20583>   MOVE.l A2,mymaxlib
00030B62 <AmiBlitz3.ab3@20584>   ADDA.l $12(A2),A2
00030B68 <AmiBlitz3.ab3@20585>   TST.b debugmode
00030B6C <AmiBlitz3.ab3@20586>    BEQ.w JL_0_C3A8
00030B72 <AmiBlitz3.ab3@20587>   MOVE.w regnum,D1
00030B74 <AmiBlitz3.ab3@20588>   LSL.w #8,D1
00030B76 <AmiBlitz3.ab3@20589>   LSL.w #1,D1
00030B7A <AmiBlitz3.ab3@20590>   ORI.w #$B07C,D1
00030B7E <AmiBlitz3.ab3@20591>    BSR.w writeword
00030B82 <AmiBlitz3.ab3@20592>   MOVE.w -$4(A2),D1
00030B86 <AmiBlitz3.ab3@20593>    BSR.w writeword
00030B8C <AmiBlitz3.ab3@20594>   MOVE.l maxchk,D1
00030B90 <AmiBlitz3.ab3@20595>    BSR.w writelong
00030B92 <AmiBlitz3.ab3@20596>   MOVE.l A2,-(A7)
00030B96 <AmiBlitz3.ab3@20597>   MOVE.w #$C30A,D1
00030B9A <AmiBlitz3.ab3@20598>    BSR.w Atokejsr
00030B9C <AmiBlitz3.ab3@20599>   MOVEA.l (A7)+,A2
00030BA0 <AmiBlitz3.ab3@20602>   MOVE.w -$2(A2),D2
00030BA6 <AmiBlitz3.ab3@20605>   MOVE.w regnum,D1
00030BAC <AmiBlitz3.ab3@20606>   OR.w lslimm,D1
00030BB0 <AmiBlitz3.ab3@20607>   CMP.w #$8,D2
00030BB4 <AmiBlitz3.ab3@20608>    BCS.w JL_0_C3CE
00030BB8 <AmiBlitz3.ab3@20609>    BSR.w writeword
00030BBA <AmiBlitz3.ab3@20610>   SUBQ.w #8,D2
00030BBE <AmiBlitz3.ab3@20611>    BNE.w JL_0_C3AC
00030BC2 <AmiBlitz3.ab3@20612> BRA.w JL_0_C3DA
00030BC4 <AmiBlitz3.ab3@20615>   MOVE.w D2,D0
00030BC6 <AmiBlitz3.ab3@20616>   LSL.w #8,D0
00030BC8 <AmiBlitz3.ab3@20617>   LSL.w #1,D0
00030BCA <AmiBlitz3.ab3@20618>   OR.w D0,D1
00030BCE <AmiBlitz3.ab3@20619>   BSR.w writeword
00030BD0 <AmiBlitz3.ab3@20622> RTS
00030BD4 <AmiBlitz3.ab3@20627>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00030BD6 <AmiBlitz3.ab3@20628>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00030BDA <AmiBlitz3.ab3@20632> mymaxlib:  Ds.l 1
00030BDE <AmiBlitz3.ab3@20636>   BSR.w JL_0_C340
00030BE2 <AmiBlitz3.ab3@20637>   LEA free(PC),A0
00030BE6 <AmiBlitz3.ab3@20638>   LEA freef(PC),A1
00030BEC <AmiBlitz3.ab3@20639>   MOVE.w -$6(A2),$2(A0)
00030BF0 <AmiBlitz3.ab3@20640>   BSR.w pokecode
00030BF4 <AmiBlitz3.ab3@20641>   MOVE.l -$A(A2),D1
00030BF8 <AmiBlitz3.ab3@20644>   BEQ.w nosuperr
00030BFC <AmiBlitz3.ab3@20645>   MOVEA.l mymaxlib(PC),A2
00030C00 <AmiBlitz3.ab3@20646> BRA.w Amakelibsub
00030C04 <AmiBlitz3.ab3@20651>   BSR.w JL_0_C340
00030C0A <AmiBlitz3.ab3@20652>   LEA use,A0
00030C10 <AmiBlitz3.ab3@20653>   LEA usef,A1
00030C16 <AmiBlitz3.ab3@20654>   MOVE.w -$6(A2),$2(A0)
00030C1C <AmiBlitz3.ab3@20655>   MOVE.w -$6(A2),-$2(A1)
00030C20 <AmiBlitz3.ab3@20656>   ADDQ.w #4,-$2(A1)
00030C24 <AmiBlitz3.ab3@20657>   BSR.w pokecode
00030C28 <AmiBlitz3.ab3@20658>   MOVE.l -$E(A2),D1
00030C2C <AmiBlitz3.ab3@20659> BRA.w maxjsr
00030C32 <AmiBlitz3.ab3@20663>   JSR get1bytemain
00030C38 <AmiBlitz3.ab3@20667>   MOVE.l firstiff,D0
00030C3C <AmiBlitz3.ab3@20668>    BEQ.w noiferr
00030C3E <AmiBlitz3.ab3@20669>   MOVEA.l D0,A0
00030C44 <AmiBlitz3.ab3@20670>   CMPI.b #$1,$D(A0)
00030C48 <AmiBlitz3.ab3@20671>    BEQ.w illelseerr
00030C4C <AmiBlitz3.ab3@20672>   MOVE.w #$6000,D1
00030C52 <AmiBlitz3.ab3@20674>     TST.b fast
00030C56 <AmiBlitz3.ab3@20675>     BEQ 'l1
00030C5C <AmiBlitz3.ab3@20676>     OR.l #$ff,d1
00030C60 <AmiBlitz3.ab3@20677>     BSR writeword
00030C62 <AmiBlitz3.ab3@20681>   SWAP D1
00030C66 <AmiBlitz3.ab3@20682>   BSR.w writelong
00030C68 <AmiBlitz3.ab3@20683>   MOVEQ.l #$00,D1
00030C6C <AmiBlitz3.ab3@20684>   BSR.w AJL_0_D7B8
00030C74 <AmiBlitz3.ab3@20685>   MOVE.l destpointer,$8(A0)
00030C78 <AmiBlitz3.ab3@20686> BRA.w do_then
00030C7E <AmiBlitz3.ab3@20690>   LEA ptr_parameterstore,A0
00030C80 <AmiBlitz3.ab3@20691>   MOVE.l A0,-(A7)
00030C84 <AmiBlitz3.ab3@20692>   BSR.w JL_0_C23A
00030C88 <AmiBlitz3.ab3@20693> BRA.w handle_compileerror
00030C8C <AmiBlitz3.ab3@20697>   BSR.w JL_0_BF6A
00030C8E <AmiBlitz3.ab3@20698>   MOVEQ.l #$05,D1
00030C98 <AmiBlitz3.ab3@20700>   MOVE.w oldqflag,instringon
00030C9E <AmiBlitz3.ab3@20701>   MOVEA.l lastsourcepos,A5
00030CA4 <AmiBlitz3.ab3@20702>   LEA AJL_0_C25E,A0
00030CA8 <AmiBlitz3.ab3@20703> BRA.w JL_0_C4B4
00030CAE <AmiBlitz3.ab3@20707>   LEA ptr_parameterstore,A0
00030CB2 <AmiBlitz3.ab3@20708>   BSR.w JL_0_C23A
00030CB8 <AmiBlitz3.ab3@20709>   JSR get1bytemain
00030CBC <AmiBlitz3.ab3@20710>   BSR.w JL_0_CCA8
00030CC2 <AmiBlitz3.ab3@20711>   LEA namebuff2,A0
00030CC6 <AmiBlitz3.ab3@20712>   BSR.w JL_0_C23A
00030CCC <AmiBlitz3.ab3@20713>   LEA AJL_0_C262,A0
00030CCE <AmiBlitz3.ab3@20716>   LSL.w #2,D1
00030CD4 <AmiBlitz3.ab3@20717>   LEA CIF_branches,A1
00030CD8 <AmiBlitz3.ab3@20718>   MOVE.l $0(A1,D1.W),-(A7)
00030CDA <AmiBlitz3.ab3@20719>   MOVEQ.l #-$01,D1
00030CDC <AmiBlitz3.ab3@20722>   JSR (A0)
00030CDE <AmiBlitz3.ab3@20724>   MOVEA.l (A7)+,A1
00030CE0 <AmiBlitz3.ab3@20726> JMP (A1)
00030CE4 <AmiBlitz3.ab3@20730>   BEQ.w JL_0_C4F6
00030CE8 <AmiBlitz3.ab3@20731> BRA.w JL_0_C4F4
00030CEC <AmiBlitz3.ab3@20735>   BNE.w JL_0_C4F6
00030CF0 <AmiBlitz3.ab3@20736> BRA.w JL_0_C4F4
00030CF4 <AmiBlitz3.ab3@20740>   BLT.w JL_0_C4F6
00030CF8 <AmiBlitz3.ab3@20741> BRA.w JL_0_C4F4
00030CFC <AmiBlitz3.ab3@20745>   BLE.w JL_0_C4F6
00030D00 <AmiBlitz3.ab3@20746> BRA.w JL_0_C4F4
00030D04 <AmiBlitz3.ab3@20750>   BGT.w JL_0_C4F6
00030D08 <AmiBlitz3.ab3@20751> BRA.w JL_0_C4F4
00030D0C <AmiBlitz3.ab3@20755>   BGE.w JL_0_C4F6
00030D0E <AmiBlitz3.ab3@20758>   MOVEQ.l #$00,D1
00030D14 <AmiBlitz3.ab3@20761>   MOVEA.l concomsp,A0
00030D1A <AmiBlitz3.ab3@20762>   MOVE.w skipcode,(A0)+
00030D20 <AmiBlitz3.ab3@20763>   MOVE.l A0,concomsp
00030D26 <AmiBlitz3.ab3@20764>   MOVE.w D1,skipcode
00030D2C <AmiBlitz3.ab3@20765>   JSR get1bytemain
00030D30 <AmiBlitz3.ab3@20766>    BNE.w syntaxerr
00030D36 <AmiBlitz3.ab3@20767> JMP bakup
00030D3E <AmiBlitz3.ab3@20771> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00030D42 <AmiBlitz3.ab3@20772> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00030D46 <AmiBlitz3.ab3@20779>   MOVE.w #$FC17,D1
00030D4C <AmiBlitz3.ab3@20780>   JSR uselib
00030D52 <AmiBlitz3.ab3@20782>   JSR reget
00030D56 <AmiBlitz3.ab3@20783>    BEQ.w do_Restore__resbeg
00030D5A <AmiBlitz3.ab3@20784>   BSR.w JL_0_AE22                                          ;get label name!
00030D5E <AmiBlitz3.ab3@20785>   MOVE.w rescode(PC),D1
00030D62 <AmiBlitz3.ab3@20786>   BSR.w writeword
00030D68 <AmiBlitz3.ab3@20787>   JSR addoff                                               ;add offset
00030D6C <AmiBlitz3.ab3@20788>   MOVE.l $C(A2),D1
00030D70 <AmiBlitz3.ab3@20789>   BSR.w writelong
00030D74 <AmiBlitz3.ab3@20790>   MOVE.w rescode+6(PC),D1
00030D78 <AmiBlitz3.ab3@20791>   BSR.w writeword
00030D7C <AmiBlitz3.ab3@20792>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00030D80 <AmiBlitz3.ab3@20793>   BEQ.w do_Restore__no
00030D82 <AmiBlitz3.ab3@20795>   MOVEA.l D1,A1
00030D86 <AmiBlitz3.ab3@20796>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00030D88 <AmiBlitz3.ab3@20797> RTS
00030D8A <AmiBlitz3.ab3@20802> RTS
00030D8E <AmiBlitz3.ab3@20805>   MOVE.w #$CD00,D1
00030D94 <AmiBlitz3.ab3@20806>   JSR Atokejsr
00030D98 <AmiBlitz3.ab3@20807>   MOVE.l rescode2(PC),D1
00030D9E <AmiBlitz3.ab3@20808> JMP writelong
00030DA2 <AmiBlitz3.ab3@20812>   MOVE.w #$FC17,D1
00030DA8 <AmiBlitz3.ab3@20813>   JSR uselib
00030DAE <AmiBlitz3.ab3@20816>   MOVE.l dataget,D1
00030DB2 <AmiBlitz3.ab3@20817>   BSR.w writelong
00030DB6 <AmiBlitz3.ab3@20818>   BSR.w getparameter
00030DBA <AmiBlitz3.ab3@20819>   BSR.w JL_0_8E3C
00030DBE <AmiBlitz3.ab3@20820>   BSR.w calcvar
00030DC2 <AmiBlitz3.ab3@20821>   BTST #$E,D2
00030DC6 <AmiBlitz3.ab3@20822>    BEQ.w JL_0_C5A6
00030DCA <AmiBlitz3.ab3@20823>   MOVE.b #$6,D2
00030DCC <AmiBlitz3.ab3@20826>   TST.b D2
00030DD0 <AmiBlitz3.ab3@20827>    BEQ.w noleterr
00030DD6 <AmiBlitz3.ab3@20828>   TST.b debugmode
00030DDA <AmiBlitz3.ab3@20829>    BEQ.w JL_0_C5D0
00030DDE <AmiBlitz3.ab3@20830>   MOVE.w #$7000,D1
00030DE0 <AmiBlitz3.ab3@20831>   MOVE.b D2,D1
00030DE4 <AmiBlitz3.ab3@20832>   ANDI.b #$F,D1
00030DE8 <AmiBlitz3.ab3@20833>   BSR.w writeword
00030DEC <AmiBlitz3.ab3@20834>   MOVE.w #$C310,D1
00030DEE <AmiBlitz3.ab3@20835>   MOVE.w D2,-(A7)
00030DF2 <AmiBlitz3.ab3@20836>   BSR.w Atokejsr
00030DF4 <AmiBlitz3.ab3@20837>   MOVE.w (A7)+,D2
00030DF8 <AmiBlitz3.ab3@20840>   CMP.b #$7,D2
00030DFC <AmiBlitz3.ab3@20841>    BEQ.w JL_0_C684
00030E00 <AmiBlitz3.ab3@20842>   CMP.b #$1,D2
00030E04 <AmiBlitz3.ab3@20843>    BNE.w JL_0_C62A
00030E0A <AmiBlitz3.ab3@20844>   LEA dataletb2,A0
00030E10 <AmiBlitz3.ab3@20845>   LEA dataletb2f,A1
00030E14 <AmiBlitz3.ab3@20846>   BTST #$F,D2
00030E18 <AmiBlitz3.ab3@20847>    BEQ.w JL_0_C5FC
00030E1C <AmiBlitz3.ab3@20848>   BSR.w pokecode
00030E20 <AmiBlitz3.ab3@20849> BRA.w JL_0_C668
00030E26 <AmiBlitz3.ab3@20852>   LEA dataletb,A0
00030E2C <AmiBlitz3.ab3@20853>   LEA dataletbf,A1
00030E32 <AmiBlitz3.ab3@20854>   TST.w varmode
00030E36 <AmiBlitz3.ab3@20855>    BEQ.w JL_0_C61E
00030E3C <AmiBlitz3.ab3@20856>   LEA dataletbl,A0
00030E42 <AmiBlitz3.ab3@20857>   LEA dataletblf,A1
00030E46 <AmiBlitz3.ab3@20860>   MOVE.w D3,$4(A0)
00030E4A <AmiBlitz3.ab3@20861>   BSR.w pokecode
00030E4E <AmiBlitz3.ab3@20862> BRA.w JL_0_C668
00030E54 <AmiBlitz3.ab3@20865>   LEA dataletw,A0
00030E58 <AmiBlitz3.ab3@20866>   CMP.b #$3,D2
00030E5C <AmiBlitz3.ab3@20867>    BCS.w JL_0_C63E
00030E62 <AmiBlitz3.ab3@20868>   LEA dataletl,A0
00030E66 <AmiBlitz3.ab3@20871>   BTST #$F,D2
00030E6A <AmiBlitz3.ab3@20872>    BEQ.w JL_0_C652
00030E6E <AmiBlitz3.ab3@20873>   MOVE.w $4(A0),D1
00030E72 <AmiBlitz3.ab3@20874>    BSR.w writeword
00030E76 <AmiBlitz3.ab3@20875> BRA.w JL_0_C668
00030E7C <AmiBlitz3.ab3@20878>   TST.w varmode
00030E80 <AmiBlitz3.ab3@20879>    BEQ.w JL_0_C65E
00030E82 <AmiBlitz3.ab3@20880>   ADDQ.w #6,A0
00030E86 <AmiBlitz3.ab3@20883>   MOVE.w D3,$2(A0)
00030E88 <AmiBlitz3.ab3@20884>   MOVE.l (A0),D1
00030E8C <AmiBlitz3.ab3@20885>   BSR.w writelong
00030E92 <AmiBlitz3.ab3@20888>   MOVE.l dataput,D1
00030E96 <AmiBlitz3.ab3@20889>    BSR.w writelong
00030E9A <AmiBlitz3.ab3@20890>   CMP.w #$2C,D0
00030E9E <AmiBlitz3.ab3@20891>    BEQ.w JL_0_C67C
00030EA0 <AmiBlitz3.ab3@20892> RTS
00030EA6 <AmiBlitz3.ab3@20895>   JSR get1bytemain
00030EAA <AmiBlitz3.ab3@20896> BRA.w JL_0_C584
00030EB0 <AmiBlitz3.ab3@20900>   MOVE.w stlenget,D1
00030EB4 <AmiBlitz3.ab3@20901>    BSR.w writeword
00030EB8 <AmiBlitz3.ab3@20902>   BTST #$F,D2
00030EBC <AmiBlitz3.ab3@20903>    BNE.w JL_0_C6C0
00030EC2 <AmiBlitz3.ab3@20904>   TST.w varmode
00030EC6 <AmiBlitz3.ab3@20905>    BEQ.w JL_0_C6B0
00030ECC <AmiBlitz3.ab3@20906>   MOVE.w D3,leaampl+2
00030ED2 <AmiBlitz3.ab3@20907>   MOVE.l leaampl,D1
00030ED6 <AmiBlitz3.ab3@20908> BRA.w JL_0_C6BC
00030EDC <AmiBlitz3.ab3@20911>   MOVE.w D3,leaamp+2
00030EE2 <AmiBlitz3.ab3@20912>   MOVE.l leaamp,D1
00030EE6 <AmiBlitz3.ab3@20915>   BSR.w writelong
00030EEA <AmiBlitz3.ab3@20918>   MOVE.w #$C701,D1
00030EF0 <AmiBlitz3.ab3@20919>   MOVE.w varmode,D2
00030EF4 <AmiBlitz3.ab3@20920>    BEQ.w JL_0_C6D0
00030EF6 <AmiBlitz3.ab3@20921>   SUBQ.w #1,D1
00030EFA <AmiBlitz3.ab3@20924>   BSR.w Atokejsr
00030F02 <AmiBlitz3.ab3@20925>   MOVE.w #$FFFF,lasta6
00030F08 <AmiBlitz3.ab3@20926>   LEA stalign,A0
00030F0E <AmiBlitz3.ab3@20927>   LEA stalignf,A1
00030F12 <AmiBlitz3.ab3@20928>   BSR.w pokecode
00030F16 <AmiBlitz3.ab3@20929> BRA.w JL_0_C668
00030F1A <AmiBlitz3.ab3@20933>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00030F1E <AmiBlitz3.ab3@20934>    BNE.w JL_0_C720
00030F24 <AmiBlitz3.ab3@20935>   JSR get1bytemain
00030F28 <AmiBlitz3.ab3@20936>   CMP.w #$77,D0
00030F2C <AmiBlitz3.ab3@20937>    BEQ.w JL_0_C71C
00030F30 <AmiBlitz3.ab3@20938>   CMP.w #$62,D0
00030F34 <AmiBlitz3.ab3@20939>    BEQ.w JL_0_C718
00030F38 <AmiBlitz3.ab3@20940>   CMP.w #"s",d0
00030F3C <AmiBlitz3.ab3@20941>   BEQ single3
00030F40 <AmiBlitz3.ab3@20942>   CMP.w #"d",d0
00030F44 <AmiBlitz3.ab3@20943>   BEQ double3
00030F48 <AmiBlitz3.ab3@20944>   CMP.w #$6C,D0
00030F4C <AmiBlitz3.ab3@20945>    BNE.w syntaxerr
00030F4E <AmiBlitz3.ab3@20946>   MOVEQ.l #$02,D1
00030F50 <AmiBlitz3.ab3@20947> RTS
00030F58 <AmiBlitz3.ab3@20951>   MOVE.b #1,iee
00030F5A <AmiBlitz3.ab3@20952>   MOVEQ.l #$3,d1
00030F5C <AmiBlitz3.ab3@20953> RTS
00030F64 <AmiBlitz3.ab3@20957>   MOVE.b #1,iee
00030F66 <AmiBlitz3.ab3@20958>   MOVEQ.l #$4,d1
00030F68 <AmiBlitz3.ab3@20959> RTS
00030F6A <AmiBlitz3.ab3@20963>   MOVEQ.l #$00,D1
00030F6C <AmiBlitz3.ab3@20964> RTS
00030F6E <AmiBlitz3.ab3@20968>   MOVEQ.l #$01,D1
00030F70 <AmiBlitz3.ab3@20969> RTS
00030F72 <AmiBlitz3.ab3@20973>   MOVEQ.l #$01,D1
00030F78 <AmiBlitz3.ab3@20974> JMP bakup
00030F7C <AmiBlitz3.ab3@20978>   BSR.w JL_0_C6F0
00030F7E <AmiBlitz3.ab3@20980>   MOVE.w D1,-(A7)
00030F82 <AmiBlitz3.ab3@20981>    BSR.w AJL_0_BF6E
00030F86 <AmiBlitz3.ab3@20982>   CMP.w #$2C,D0
00030F8A <AmiBlitz3.ab3@20983>    BNE.w syntaxerr
00030F8C <AmiBlitz3.ab3@20984>   MOVE.l D3,-(A7)
00030F90 <AmiBlitz3.ab3@20985>    BSR.w AJL_0_BF6E
00030F92 <AmiBlitz3.ab3@20986>   MOVE.l D3,D1
00030F94 <AmiBlitz3.ab3@20987>   MOVE.l (A7)+,D3
00030F96 <AmiBlitz3.ab3@20988>   MOVE.w (A7)+,D2
00030F9A <AmiBlitz3.ab3@20989>    BEQ.w JL_0_C774
00030F9E <AmiBlitz3.ab3@20993>   CMP.w #$1,D2
00030FA2 <AmiBlitz3.ab3@20994>    BEQ.w JL_0_C768
00030FA4 <AmiBlitz3.ab3@20997>   SWAP D1
00030FA8 <AmiBlitz3.ab3@20998>    BSR.w writeword
00030FAA <AmiBlitz3.ab3@20999>   SWAP D1
00030FAE <AmiBlitz3.ab3@21000>    BSR.w writeword
00030FB0 <AmiBlitz3.ab3@21001>   SUBQ.l #1,D3
00030FB4 <AmiBlitz3.ab3@21002>    BNE.w JL_0_C754
00030FB6 <AmiBlitz3.ab3@21003> RTS
00030FBA <AmiBlitz3.ab3@21006>    BSR.w writeword
00030FBC <AmiBlitz3.ab3@21007>   SUBQ.l #1,D3
00030FC0 <AmiBlitz3.ab3@21008>    BNE.w JL_0_C768
00030FC2 <AmiBlitz3.ab3@21009> RTS
00030FC6 <AmiBlitz3.ab3@21012>    BSR.w writebyte
00030FC8 <AmiBlitz3.ab3@21013>   SUBQ.l #1,D3
00030FCC <AmiBlitz3.ab3@21014>    BNE.w JL_0_C774
00030FCE <AmiBlitz3.ab3@21015> RTS
00030FD2 <AmiBlitz3.ab3@21019>   BSR.w JL_0_C6F0                                          ;definestorage
00030FD4 <AmiBlitz3.ab3@21020>   MOVE.w D1,-(A7)
00030FD8 <AmiBlitz3.ab3@21021>   BSR.w AJL_0_BF6E
00030FDA <AmiBlitz3.ab3@21022>   MOVE.w (A7)+,D1
00030FDC <AmiBlitz3.ab3@21023>   LSL.l D1,D3
00030FDE <AmiBlitz3.ab3@21024>   MOVE.l d3,d0
00030FE2 <AmiBlitz3.ab3@21025>   BEQ 'll5
00030FE4 <AmiBlitz3.ab3@21026>   MOVEQ #0,d1
00030FEA <AmiBlitz3.ab3@21029>     JSR writebyte
00030FEC <AmiBlitz3.ab3@21030>     SUBQ.l #1,d3
00030FF0 <AmiBlitz3.ab3@21031>   BNE.s 'll10
00030FF2 <AmiBlitz3.ab3@21034> RTS
00030FF4 <AmiBlitz3.ab3@21038>   MOVE.w D0,-(A7)
00030FFA <AmiBlitz3.ab3@21039>   LEA dummyasm,A0
00031000 <AmiBlitz3.ab3@21040>   MOVEA.l destpointer,A1
0003100A <AmiBlitz3.ab3@21041>   MOVE.w asmlen2,asmlen
00031010 <AmiBlitz3.ab3@21042>   JSR insasm
00031012 <AmiBlitz3.ab3@21043>   MOVE.w (A7)+,D0
00031014 <AmiBlitz3.ab3@21044> RTS
00031018 <AmiBlitz3.ab3@21048>   BSR.w JL_0_C6F0
00031022 <AmiBlitz3.ab3@21050>   MOVE.l #ptr_parameterstore,asmbuff
00031024 <AmiBlitz3.ab3@21051>   TST.w D1
00031028 <AmiBlitz3.ab3@21052>    BEQ.w JL_0_C7EE
0003102C <AmiBlitz3.ab3@21053>   CMP.w #$1,D1
00031030 <AmiBlitz3.ab3@21054>    BEQ.w JL_0_C844
00031034 <AmiBlitz3.ab3@21055>   CMP.w #$2,d1
00031038 <AmiBlitz3.ab3@21056>    BEQ long
0003103C <AmiBlitz3.ab3@21057>   CMP.w #$3,d1
00031040 <AmiBlitz3.ab3@21058>    BEQ single
00031042 <AmiBlitz3.ab3@21059>    MOVEQ.l #$0d,D3
00031048 <AmiBlitz3.ab3@21065>    JSR asmconst
0003104C <AmiBlitz3.ab3@21066>    BSR.w JL_0_C796
00031050 <AmiBlitz3.ab3@21067>    BSR.w writelong
00031054 <AmiBlitz3.ab3@21068>    BSR   writelong
00031058 <AmiBlitz3.ab3@21069>   CMP.w #$2C,D0
0003105C <AmiBlitz3.ab3@21070>    BEQ.w JL_0_C7D8b
0003105E <AmiBlitz3.ab3@21071> RTS
00031060 <AmiBlitz3.ab3@21075>   MOVEQ.l #$0B,D3
00031068 <AmiBlitz3.ab3@21079>   MOVE.b #1,_dcb
0003106E <AmiBlitz3.ab3@21082>   JSR asmconst
00031074 <AmiBlitz3.ab3@21083>   CLR.b _dcb
00031078 <AmiBlitz3.ab3@21084>   BSR.w JL_0_C796
0003107C <AmiBlitz3.ab3@21085>   BSR writebyte
00031080 <AmiBlitz3.ab3@21086>   BSR writebyte
00031084 <AmiBlitz3.ab3@21087>   BSR writebyte                                            ;long
00031088 <AmiBlitz3.ab3@21088>   BSR writebyte
0003108C <AmiBlitz3.ab3@21089>   CMP.w #$2C,D0
00031090 <AmiBlitz3.ab3@21090>    BEQ.w JL_0_C7D8
00031092 <AmiBlitz3.ab3@21091> RTS
00031094 <AmiBlitz3.ab3@21095>   MOVEQ.l #$0c,D3
0003109C <AmiBlitz3.ab3@21099>   MOVE.b #1,_dcb
000310A2 <AmiBlitz3.ab3@21102>   JSR asmconst
000310A8 <AmiBlitz3.ab3@21103>   CLR.b _dcb
000310AC <AmiBlitz3.ab3@21104>   BSR.w JL_0_C796
000310B0 <AmiBlitz3.ab3@21105>   BSR.w writebyte
000310B4 <AmiBlitz3.ab3@21106>   BSR.w writebyte
000310B8 <AmiBlitz3.ab3@21107>   BSR.w writebyte
000310BC <AmiBlitz3.ab3@21108>   BSR.w writebyte
000310C0 <AmiBlitz3.ab3@21109>   CMP.w #$2C,D0
000310C4 <AmiBlitz3.ab3@21110>    BEQ.w JL_0_C7D8a
000310C6 <AmiBlitz3.ab3@21111> RTS
000310C8 <AmiBlitz3.ab3@21116>   MOVEQ.l #$11,D3
000310CE <AmiBlitz3.ab3@21119>   JSR get1bytemain
000310D2 <AmiBlitz3.ab3@21120>   CMP.w #$22,D0
000310D6 <AmiBlitz3.ab3@21121>    BNE.w JL_0_C81E
000310D8 <AmiBlitz3.ab3@21124>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
000310DC <AmiBlitz3.ab3@21125>    BEQ.w syntaxerr
000310E0 <AmiBlitz3.ab3@21126>   CMP.w #$22,D0
000310E4 <AmiBlitz3.ab3@21127>    BEQ.w JL_0_C816
000310E8 <AmiBlitz3.ab3@21128>   CMP.b #"\",d0
000310EC <AmiBlitz3.ab3@21129>    BNE 'n1
000310F0 <AmiBlitz3.ab3@21130>   CMP.b #"\",(a5)
000310F4 <AmiBlitz3.ab3@21131>    BEQ 'do1
000310F6 <AmiBlitz3.ab3@21134>   MOVE.w D0,D1
000310FA <AmiBlitz3.ab3@21135>   BSR.w writebyte
000310FE <AmiBlitz3.ab3@21136> BRA.w JL_0_C7FC
00031106 <AmiBlitz3.ab3@21139>   CMP.l #"__DA",1(a5)
0003110A <AmiBlitz3.ab3@21140>    BNE 'nodate1
00031112 <AmiBlitz3.ab3@21141>   CMP.l #"TE__",5(a5)
00031116 <AmiBlitz3.ab3@21142>    BEQ 'c1
0003111E <AmiBlitz3.ab3@21143>   CMP.l #"TE_G",5(a5)
00031122 <AmiBlitz3.ab3@21144>    BNE 'nodate1
0003112A <AmiBlitz3.ab3@21145>   CMP.l #"ER__",9(a5)
0003112E <AmiBlitz3.ab3@21146>    BNE 'nodate1
00031134 <AmiBlitz3.ab3@21147>   JSR compiledatedc_ger
00031138 <AmiBlitz3.ab3@21148> BRA 'n1
0003113E <AmiBlitz3.ab3@21151>   JSR compiledatedc
00031142 <AmiBlitz3.ab3@21152> BRA 'n1
0003114A <AmiBlitz3.ab3@21155>   CMP.l #"__VE",1(a5)
0003114E <AmiBlitz3.ab3@21156>    BNE 'n1
00031154 <AmiBlitz3.ab3@21157>   CMP.w #"R_",5(a5)
00031158 <AmiBlitz3.ab3@21158>    BNE 'n1
0003115E <AmiBlitz3.ab3@21159>   JSR version_string_dc
00031162 <AmiBlitz3.ab3@21160> BRA.w JL_0_C7FC
00031168 <AmiBlitz3.ab3@21164>   CLR.w instringon
0003116E <AmiBlitz3.ab3@21165>   JSR get1bytemain
00031172 <AmiBlitz3.ab3@21166> BRA.w JL_0_C83A
0003117C <AmiBlitz3.ab3@21171>    MOVE.w oldqflag,instringon
00031182 <AmiBlitz3.ab3@21172>   MOVEA.l lastsourcepos,A5
00031188 <AmiBlitz3.ab3@21173>    JSR asmconst
0003118E <AmiBlitz3.ab3@21174>   SUBQ.l #1,destpointer
00031192 <AmiBlitz3.ab3@21175>    BSR.w JL_0_C796
00031198 <AmiBlitz3.ab3@21176>   ADDQ.l #1,destpointer
0003119C <AmiBlitz3.ab3@21177>    BSR.w writebyte
000311A0 <AmiBlitz3.ab3@21180>   CMP.w #$2C,D0
000311A4 <AmiBlitz3.ab3@21181>    BEQ.w JL_0_C7F0
000311A6 <AmiBlitz3.ab3@21182> RTS
000311A8 <AmiBlitz3.ab3@21186>   MOVEQ.l #$10,D3
000311B0 <AmiBlitz3.ab3@21192>   MOVE.b #1,_dcb
000311B6 <AmiBlitz3.ab3@21193>   JSR asmconst
000311BC <AmiBlitz3.ab3@21194>   CLR.b _dcb
000311C0 <AmiBlitz3.ab3@21195>   BSR.w JL_0_C796
000311C4 <AmiBlitz3.ab3@21196>   BSR.w writebyte
000311C8 <AmiBlitz3.ab3@21197>   BSR.w writebyte
000311CC <AmiBlitz3.ab3@21198>   CMP.w #$2C,D0
000311D0 <AmiBlitz3.ab3@21199>    BEQ.w JL_0_C84A
000311D2 <AmiBlitz3.ab3@21200> RTS
000311D8 <AmiBlitz3.ab3@21204>   ADDQ.l #3,destpointer
000311E0 <AmiBlitz3.ab3@21205>   ANDI.w #$FFFC,destpointer+2
000311E2 <AmiBlitz3.ab3@21206> RTS
000311E8 <AmiBlitz3.ab3@21210>   ADDQ.l #7,destpointer
000311F0 <AmiBlitz3.ab3@21211>   ANDI.w #$FFF8,destpointer+2
000311F2 <AmiBlitz3.ab3@21212> RTS
000311F8 <AmiBlitz3.ab3@21216>   ADDQ.l #1,destpointer                                    ;even
00031200 <AmiBlitz3.ab3@21217>   BCLR #$0,destpointer+3
00031202 <AmiBlitz3.ab3@21218> RTS
00031204 <AmiBlitz3.ab3@21221> datasize: Ds.w 1
0003120A <AmiBlitz3.ab3@21231>   TST.b debugmode
0003120E <AmiBlitz3.ab3@21232>   BEQ.w pdt__skip
00031212 <AmiBlitz3.ab3@21233>   MOVE.w #$4420,D0                                         ;'D '
00031216 <AmiBlitz3.ab3@21234>   MOVE.b datasize+1(PC),D0
0003121A <AmiBlitz3.ab3@21235> BRA.w JL_0_C1E6
0003121C <AmiBlitz3.ab3@21238> RTS
00031220 <AmiBlitz3.ab3@21242>   MOVE.w #$FC17,D1
00031226 <AmiBlitz3.ab3@21243>    JSR uselib
00031230 <AmiBlitz3.ab3@21245>    MOVE.w oldqflag,instringon
00031236 <AmiBlitz3.ab3@21246>   MOVEA.l lastsourcepos,A5
0003123C <AmiBlitz3.ab3@21247>    JSR AJL_0_498A
00031242 <AmiBlitz3.ab3@21248>   MOVE.w D1,datasize
00031246 <AmiBlitz3.ab3@21249>   CMP.w #$7,D1
0003124A <AmiBlitz3.ab3@21250>    BEQ.w JL_0_C944
0003124C <AmiBlitz3.ab3@21251>   MOVE.w D1,-(A7)
00031250 <AmiBlitz3.ab3@21254>   BSR.w pdt
00031252 <AmiBlitz3.ab3@21255>   MOVE.w (A7),D2
00031256 <AmiBlitz3.ab3@21256>    BSR.w JL_0_B1D8
00031258 <AmiBlitz3.ab3@21257>   CMP.w (A7),D2                                            ;datamode
0003125C <AmiBlitz3.ab3@21258>    BEQ.w JL_0_C920
0003125E <AmiBlitz3.ab3@21259>   MOVE.w D2,D1
00031260 <AmiBlitz3.ab3@21260>   MOVE.w (A7),D2
00031264 <AmiBlitz3.ab3@21261>   CMP.w #$2,D2
00031268 <AmiBlitz3.ab3@21262>    BNE.w JL_0_C8FE
0003126C <AmiBlitz3.ab3@21263>   CMP.w #$3,D1
00031270 <AmiBlitz3.ab3@21264>    BNE.w baddaterr
00031276 <AmiBlitz3.ab3@21265>   CMP.l #$10000,D3
0003127A <AmiBlitz3.ab3@21266>    BCC.w baddaterr
0003127E <AmiBlitz3.ab3@21267> BRA.w JL_0_C920
00031282 <AmiBlitz3.ab3@21270>   CMP.w #$1,D2
00031286 <AmiBlitz3.ab3@21271>    BNE.w JL_0_C91C
0003128A <AmiBlitz3.ab3@21272>   CMP.w #$2,D1
0003128E <AmiBlitz3.ab3@21273>    BNE.w baddaterr
00031294 <AmiBlitz3.ab3@21274>   CMP.l #$100,D3
00031298 <AmiBlitz3.ab3@21275>    BCC.w baddaterr
0003129C <AmiBlitz3.ab3@21276> BRA.w JL_0_C920
000312A0 <AmiBlitz3.ab3@21279> BRA.w baddaterr
000312A4 <AmiBlitz3.ab3@21282>   CMP.w #$3,D2
000312A8 <AmiBlitz3.ab3@21283>   BCC.w JL_0_C930
000312AC <AmiBlitz3.ab3@21284>   BSR.w JL_0_C1E6
000312B0 <AmiBlitz3.ab3@21285> BRA.w JL_0_C934
000312B6 <AmiBlitz3.ab3@21288>   TST.b iee
000312BA <AmiBlitz3.ab3@21289>   BEQ 'old
000312BE <AmiBlitz3.ab3@21290>   CMP.b #5,d2
000312C2 <AmiBlitz3.ab3@21291>   BNE 'old
000312C6 <AmiBlitz3.ab3@21292>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
000312CA <AmiBlitz3.ab3@21296>   BSR.w JL_0_C1DE                                          ;write data >3
000312D0 <AmiBlitz3.ab3@21299>   JSR reget
000312D4 <AmiBlitz3.ab3@21300>   CMP.w #$2C,D0
000312D8 <AmiBlitz3.ab3@21301>    BEQ.w JL_0_C8CC
000312DA <AmiBlitz3.ab3@21302>   ADDQ.w #2,A7
000312DC <AmiBlitz3.ab3@21303> RTS
000312E0 <AmiBlitz3.ab3@21306>    BSR.w pdt
000312E6 <AmiBlitz3.ab3@21307>   MOVE.l data2,-(A7)
000312EA <AmiBlitz3.ab3@21308>    BSR.w JL_0_C1DE
000312EC <AmiBlitz3.ab3@21309>   MOVEQ.l #$00,D1
000312F2 <AmiBlitz3.ab3@21310>    JSR get1bytemain
000312F6 <AmiBlitz3.ab3@21311>    BEQ.w JL_0_C9A6
000312FA <AmiBlitz3.ab3@21312>   CMP.w #$22,D0
000312FE <AmiBlitz3.ab3@21313>    BEQ.w JL_0_C988
00031302 <AmiBlitz3.ab3@21314>   CMP.w #$2C,D0
00031306 <AmiBlitz3.ab3@21315>    BEQ.w JL_0_C9A6
0003130A <AmiBlitz3.ab3@21318>    BSR.w JL_0_C210
0003130C <AmiBlitz3.ab3@21319>   ADDQ.w #1,D1
00031312 <AmiBlitz3.ab3@21320>    JSR getchar
00031314 <AmiBlitz3.ab3@21321>   TST.w D0
00031318 <AmiBlitz3.ab3@21322>    BEQ.w JL_0_C9A6
0003131C <AmiBlitz3.ab3@21323>   CMP.w #$2C,D0
00031320 <AmiBlitz3.ab3@21324>    BEQ.w JL_0_C9A6
00031324 <AmiBlitz3.ab3@21325> BRA.w JL_0_C96C
00031326 <AmiBlitz3.ab3@21329>    MOVEQ #0,d0
00031328 <AmiBlitz3.ab3@21330>    MOVE.b (a5)+,d0
0003132C <AmiBlitz3.ab3@21331>    BEQ.w notqerr2
00031330 <AmiBlitz3.ab3@21332>   CMP.w #$22,D0
00031334 <AmiBlitz3.ab3@21333>    BEQ.w JL_0_C9A2
00031338 <AmiBlitz3.ab3@21334>    BSR.w JL_0_C210
0003133A <AmiBlitz3.ab3@21335>   ADDQ.w #1,D1
0003133E <AmiBlitz3.ab3@21336> BRA.w JL_0_C988
00031344 <AmiBlitz3.ab3@21337> notqerr2 JMP notqerr
0003134A <AmiBlitz3.ab3@21339>   CLR.w instringon
00031350 <AmiBlitz3.ab3@21340>   JSR get1bytemain
00031352 <AmiBlitz3.ab3@21343>   MOVEA.l (A7)+,A0
00031358 <AmiBlitz3.ab3@21344>   MOVE.w dontwrite,D2
0003135C <AmiBlitz3.ab3@21345>    BNE.w JL_0_C9B4
0003135E <AmiBlitz3.ab3@21346>   MOVE.l D1,(A0)
00031364 <AmiBlitz3.ab3@21349>   ADDQ.l #1,data2
0003136C <AmiBlitz3.ab3@21350>   BCLR #$0,data2+3
00031370 <AmiBlitz3.ab3@21351>   CMP.w #$2C,D0
00031374 <AmiBlitz3.ab3@21352>    BEQ.w JL_0_C944
00031376 <AmiBlitz3.ab3@21353> RTS
0003137C <AmiBlitz3.ab3@21357> JMP vardeclareerr
00031382 <AmiBlitz3.ab3@21360>   MOVE.w proceduremode,D1                                  ;doshared
00031386 <AmiBlitz3.ab3@21362>   BNE.w 'l1
00031388 <AmiBlitz3.ab3@21363>   MOVE.w D1,-(A7)
0003138E <AmiBlitz3.ab3@21364>   CLR.w proceduremode
00031394 <AmiBlitz3.ab3@21367>   LEA varbase,a2
00031398 <AmiBlitz3.ab3@21368>   BSR.w getparameter
0003139A <AmiBlitz3.ab3@21369>   MOVE.w d2,-(a7)
000313A0 <AmiBlitz3.ab3@21370>    JSR findvariable
000313A4 <AmiBlitz3.ab3@21371>    BEQ 'checkdim
000313AA <AmiBlitz3.ab3@21372>    LEA sharebase,a2
000313AC <AmiBlitz3.ab3@21373>    MOVEQ #$f+4,d7
000313B0 <AmiBlitz3.ab3@21374>    BSR.w findlab                                         ;find var
000313B4 <AmiBlitz3.ab3@21375>    BEQ.b dupsherr
000313B8 <AmiBlitz3.ab3@21376>    BSR addlabel
000313BC <AmiBlitz3.ab3@21377>    CMP.b #".",d0
000313C0 <AmiBlitz3.ab3@21378>    BNE JUMP_vardeclareerr
000313C2 <AmiBlitz3.ab3@21379>    MOVE.l a2,a3
000313C8 <AmiBlitz3.ab3@21380>    JSR JL_0_8EB8b
000313CA <AmiBlitz3.ab3@21411>   MOVE.w (a7)+,d2
000313CE <AmiBlitz3.ab3@21412>    CMP.b #",",d0
000313D2 <AmiBlitz3.ab3@21413>    BNE 'ret
000313D8 <AmiBlitz3.ab3@21414>    JSR get1bytemain
000313DC <AmiBlitz3.ab3@21415> BRA 'again2
000313E2 <AmiBlitz3.ab3@21418>   MOVE.w (A7)+,proceduremode
000313E4 <AmiBlitz3.ab3@21419> RTS
000313EA <AmiBlitz3.ab3@21426>    CMP.w #2,6(a2)
000313EE <AmiBlitz3.ab3@21427>    BEQ 'do
000313F4 <AmiBlitz3.ab3@21428>    CMP.w #$102,6(a2)
000313F8 <AmiBlitz3.ab3@21429>    BEQ 'do
000313FE <AmiBlitz3.ab3@21430> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031404 <AmiBlitz3.ab3@21433>   LEA varbase,a0
00031406 <AmiBlitz3.ab3@21436>   MOVE.l (A0),D0                                           ;find label
0003140A <AmiBlitz3.ab3@21437>    BEQ.b 'z1
0003140C <AmiBlitz3.ab3@21438>    CMP.l d0,a2
00031410 <AmiBlitz3.ab3@21439>    BEQ 'z1
00031412 <AmiBlitz3.ab3@21440>    MOVE.l d0,a0
00031416 <AmiBlitz3.ab3@21441> BRA 'm1
00031418 <AmiBlitz3.ab3@21444>   MOVE.l (a2),d1
0003141A <AmiBlitz3.ab3@21445>     MOVE.l d1,(a0)
0003141C <AmiBlitz3.ab3@21446>     CLR.l (a2)
00031422 <AmiBlitz3.ab3@21447>     LEA sharebase,a0
00031424 <AmiBlitz3.ab3@21448>     MOVE.l (a0),(a2)
00031426 <AmiBlitz3.ab3@21449>     MOVE.l a2,(a0)
0003142C <AmiBlitz3.ab3@21450>     JSR get1bytemain
00031432 <AmiBlitz3.ab3@21451>     JSR get1bytemain
00031436 <AmiBlitz3.ab3@21452> BRA 'domore
0003143E <AmiBlitz3.ab3@21455>   MOVE.b #1,nowdeclare
00031440 <AmiBlitz3.ab3@21456>   MOVE.w D1,-(A7)
00031446 <AmiBlitz3.ab3@21457>   CLR.w proceduremode
0003144A <AmiBlitz3.ab3@21460>    BSR.w getparameter
0003144C <AmiBlitz3.ab3@21461>   MOVE.w D2,-(A7)
00031452 <AmiBlitz3.ab3@21462>   LEA firstglob,A2
00031456 <AmiBlitz3.ab3@21463>    BSR.w findvariable2
0003145A <AmiBlitz3.ab3@21464>    BNE.b JL_0_CA06
00031460 <AmiBlitz3.ab3@21467>   MOVE.b flagmask+1,D1
00031464 <AmiBlitz3.ab3@21468>   MOVE.b $7(A2),D3
00031466 <AmiBlitz3.ab3@21469>   EOR.b D3,D1
0003146A <AmiBlitz3.ab3@21470>    BEQ.w dupsherr
0003146E <AmiBlitz3.ab3@21471>    BSR.w findlab
00031472 <AmiBlitz3.ab3@21472>    BEQ.b JL_0_C9F0
00031476 <AmiBlitz3.ab3@21475>    BSR.w addlabel
00031478 <AmiBlitz3.ab3@21476>   MOVE.w (A7)+,D2
0003147A <AmiBlitz3.ab3@21477>   MOVE.l A2,-(A7)
0003147E <AmiBlitz3.ab3@21478>    BSR.w JL_0_8E3C
00031480 <AmiBlitz3.ab3@21479>   MOVEA.l (A7)+,A2
00031482 <AmiBlitz3.ab3@21480>   MOVEQ.l #$04,D1
00031484 <AmiBlitz3.ab3@21481>   ADDQ.w #4,A2
00031486 <AmiBlitz3.ab3@21482>   ADDQ.w #4,A3
00031488 <AmiBlitz3.ab3@21485>     MOVE.w (A3)+,(A2)+
0003148C <AmiBlitz3.ab3@21486>   DBF D1,JL_0_CA1A
00031494 <AmiBlitz3.ab3@21488>   BTST #$1,flagmask+1
00031498 <AmiBlitz3.ab3@21489>    BEQ.w JL_0_CA3C
0003149E <AmiBlitz3.ab3@21490>    JSR get1bytemain
000314A2 <AmiBlitz3.ab3@21491>   CMP.w #$29,D0
000314A6 <AmiBlitz3.ab3@21492>    BNE.w syntaxerrc
000314AC <AmiBlitz3.ab3@21493>    JSR get1bytemain
000314B0 <AmiBlitz3.ab3@21496>    CMP.w #$2C,D0
000314B4 <AmiBlitz3.ab3@21497>    BNE.w JL_0_CA4C
000314BA <AmiBlitz3.ab3@21498>    JSR get1bytemain
000314BE <AmiBlitz3.ab3@21499> BRA.w JL_0_C9DE
000314C4 <AmiBlitz3.ab3@21502>   MOVE.w (A7)+,proceduremode
000314C6 <AmiBlitz3.ab3@21503> RTS
000314CC <AmiBlitz3.ab3@21505> syntaxerrc JMP syntaxerr
000314D0 <AmiBlitz3.ab3@21508>    BSR.w JL_0_C05C
000314D6 <AmiBlitz3.ab3@21509>    JSR check_incdir                                        ; ergebnis in d2
000314DC <AmiBlitz3.ab3@21511>    LEA ptr_parameterstore,a1
000314DE <AmiBlitz3.ab3@21512>    MOVE.l d2,-(a7)
000314E4 <AmiBlitz3.ab3@21513>    LEA includetemp,a0                                      ; filename in includetemp packen
000314E6 <AmiBlitz3.ab3@21516>      MOVE.b (a1)+,(a0)+
000314EA <AmiBlitz3.ab3@21517>    BNE 'l4
000314F0 <AmiBlitz3.ab3@21519>    LEA ptr_parameterstore,a1
000314F2 <AmiBlitz3.ab3@21520>    MOVE.l a1,a0
000314F4 <AmiBlitz3.ab3@21523>     TST.b (a0)+
000314F8 <AmiBlitz3.ab3@21524>    BNE 'l1
000314FA <AmiBlitz3.ab3@21527>      MOVE.b -(a0),d0
000314FE <AmiBlitz3.ab3@21528>      CMP.b #":",d0
00031502 <AmiBlitz3.ab3@21529>       BEQ 'out
00031506 <AmiBlitz3.ab3@21530>      CMP.b #"/",d0
0003150A <AmiBlitz3.ab3@21531>       BEQ 'out
0003150C <AmiBlitz3.ab3@21532>      CMP.l a1,a0
00031510 <AmiBlitz3.ab3@21533>       BEQ 'out2
00031514 <AmiBlitz3.ab3@21534> BRA 'l2
00031516 <AmiBlitz3.ab3@21537>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031518 <AmiBlitz3.ab3@21540>    MOVEQ.l #-$01,D2
0003151A <AmiBlitz3.ab3@21543>      ADDQ.w #1,D2
0003151C <AmiBlitz3.ab3@21544>      MOVE.b (a0)+,(a1)+
00031520 <AmiBlitz3.ab3@21545>    BNE 'l3
00031522 <AmiBlitz3.ab3@21546>    CLR.b (a1)+
00031528 <AmiBlitz3.ab3@21548>    LEA ptr_parameterstore,a1
0003152C <AmiBlitz3.ab3@21549>    BSR.w findxinc                                         ;find include
00031530 <AmiBlitz3.ab3@21550>     BEQ.w 'outb
00031532 <AmiBlitz3.ab3@21552>    MOVE.w D2,-(A7)
00031536 <AmiBlitz3.ab3@21553>    BSR.w addlabel
00031538 <AmiBlitz3.ab3@21554>    MOVE.w (A7)+,D2
0003153E <AmiBlitz3.ab3@21556>    LEA ptr_parameterstore,a1
00031544 <AmiBlitz3.ab3@21557>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031546 <AmiBlitz3.ab3@21560>     MOVE.b (a0)+,(a1)+
0003154A <AmiBlitz3.ab3@21561>    BNE 'l4b
0003154C <AmiBlitz3.ab3@21563>    MOVE.l (a7)+,d2
00031552 <AmiBlitz3.ab3@21564>    LEA ptr_parameterstore,a1
00031556 <AmiBlitz3.ab3@21565> BRA.w JL_0_CB18
0003155C <AmiBlitz3.ab3@21568>    LEA ptr_parameterstore,a1
00031562 <AmiBlitz3.ab3@21569>    LEA includetemp,a0
00031564 <AmiBlitz3.ab3@21572>     MOVE.b (a0)+,(a1)+
00031568 <AmiBlitz3.ab3@21573>    BNE 'l4b2
0003156A <AmiBlitz3.ab3@21575>    MOVE.l (a7)+,d2
00031570 <AmiBlitz3.ab3@21576>    LEA ptr_parameterstore,a1
00031572 <AmiBlitz3.ab3@21579> RTS
00031576 <AmiBlitz3.ab3@21583>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
0003157C <AmiBlitz3.ab3@21585>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031582 <AmiBlitz3.ab3@21587>   MOVEA.l _dosbase,A6
00031584 <AmiBlitz3.ab3@21588>   MOVE.l D0,D7                                                 ; store Lockpointer
00031588 <AmiBlitz3.ab3@21589>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0003158A <AmiBlitz3.ab3@21590>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031590 <AmiBlitz3.ab3@21591>   MOVE.l ptr_macrobuffer_begin,D2
00031594 <AmiBlitz3.ab3@21592>    JSR _Examine(A6)
0003159A <AmiBlitz3.ab3@21593>   MOVEA.l ptr_macrobuffer_begin,A0
0003159E <AmiBlitz3.ab3@21594>   MOVE.l $4(A0),D0
000315A2 <AmiBlitz3.ab3@21595>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
000315A6 <AmiBlitz3.ab3@21596>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
000315A8 <AmiBlitz3.ab3@21597>   MOVE.l D7,D1                                                 ; begin unlock the file
000315AC <AmiBlitz3.ab3@21598>    JSR _UnLock(A6)
000315B2 <AmiBlitz3.ab3@21600>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
000315B8 <AmiBlitz3.ab3@21601>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
000315BC <AmiBlitz3.ab3@21602>    JSR _Open(A6)
000315BE <AmiBlitz3.ab3@21603>   MOVE.l D0,D7
000315C2 <AmiBlitz3.ab3@21604>    BEQ.w error_cant_open_include
000315C8 <AmiBlitz3.ab3@21605>   MOVE.l destpointer,D0
000315CA <AmiBlitz3.ab3@21606>   ADD.l D3,D0
000315D0 <AmiBlitz3.ab3@21607>   CMP.l destbufferend,D0
000315D4 <AmiBlitz3.ab3@21608>    BHI.w JL_0_CAF6
000315DA <AmiBlitz3.ab3@21609>   MOVE.l destpointer,D2
000315DC <AmiBlitz3.ab3@21610>   MOVE.l D7,D1
000315E0 <AmiBlitz3.ab3@21611>    JSR _Read(A6)
000315E6 <AmiBlitz3.ab3@21612>   CMP.l #$FFFFFFFF,D0
000315EA <AmiBlitz3.ab3@21613>    BEQ.w error_reading_file
000315F0 <AmiBlitz3.ab3@21614>   ADD.l D0,destpointer
000315F4 <AmiBlitz3.ab3@21615> BRA.w JL_0_CB04
000315FC <AmiBlitz3.ab3@21618>   MOVE.w #$FFFF,dontwrite
00031602 <AmiBlitz3.ab3@21619>   MOVE.l D0,destpointer
00031604 <AmiBlitz3.ab3@21622>   MOVE.l D7,D1
00031608 <AmiBlitz3.ab3@21623> JMP _Close(A6)
0003160E <AmiBlitz3.ab3@21627> JMP illdirerr
00031614 <AmiBlitz3.ab3@21630>   TST.w dirmode                                            ;include  open
00031618 <AmiBlitz3.ab3@21631>    BNE.w JUMP_illdirerr
0003161C <AmiBlitz3.ab3@21632>   BSR.w JL_0_C05C
00031622 <AmiBlitz3.ab3@21633>   JSR check_incdir
00031626 <AmiBlitz3.ab3@21636>   BSR.w findconstant
0003162A <AmiBlitz3.ab3@21637>    BEQ.w alincerr
00031630 <AmiBlitz3.ab3@21639>   LEA constantbase,A2
00031634 <AmiBlitz3.ab3@21640>   BSR.w addhere2
00031638 <AmiBlitz3.ab3@21641>   CLR.w $C(A2)
0003163C <AmiBlitz3.ab3@21642>   CLR.l $4(A2)
00031642 <AmiBlitz3.ab3@21644>   MOVE.l #ptr_parameterstore,D1
00031644 <AmiBlitz3.ab3@21645>   MOVE.l d1,a0
0003164A <AmiBlitz3.ab3@21646>   LEA includetemp2,a1
0003164C <AmiBlitz3.ab3@21649>     MOVE.b (a0)+,(a1)+
00031650 <AmiBlitz3.ab3@21650>   BNE 'l1
00031656 <AmiBlitz3.ab3@21651>   JSR save_includename
00031660 <AmiBlitz3.ab3@21652>   MOVE.l #0,include_process
00031668 <AmiBlitz3.ab3@21654>   CMP.l #$62623200,-4(a0)                                  ;.bb2
0003166C <AmiBlitz3.ab3@21655>   BEQ 'ok
00031674 <AmiBlitz3.ab3@21656>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031678 <AmiBlitz3.ab3@21657>   BEQ 'ok_tokenize
00031680 <AmiBlitz3.ab3@21658>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031684 <AmiBlitz3.ab3@21659>   BEQ 'ok_tokenize
0003168C <AmiBlitz3.ab3@21660>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031690 <AmiBlitz3.ab3@21661>   BEQ 'ok
00031696 <AmiBlitz3.ab3@21662> JMP errortoken                                             ;can only include
000316A0 <AmiBlitz3.ab3@21665>    MOVE.l #-1,include_process                              ; must tokenize the include
000316A6 <AmiBlitz3.ab3@21668>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000316AC <AmiBlitz3.ab3@21669>   MOVEA.l _dosbase,A6
000316B0 <AmiBlitz3.ab3@21670>   JSR _Open(A6)
000316B4 <AmiBlitz3.ab3@21671>   MOVE.l D0,$8(A2)
000316B8 <AmiBlitz3.ab3@21672>   BEQ.w error_cant_open_include
000316BE <AmiBlitz3.ab3@21673>   CLR.l includeline
000316C2 <AmiBlitz3.ab3@21674>   MOVE.l 8(a2),d1
000316C4 <AmiBlitz3.ab3@21675>   MOVE.l d3,-(a7)
000316C6 <AmiBlitz3.ab3@21676>   MOVEQ #0,d2
000316C8 <AmiBlitz3.ab3@21677>   MOVEQ #1,d3
000316CC <AmiBlitz3.ab3@21678>   JSR _Seek(a6)                                            ; -66
000316D0 <AmiBlitz3.ab3@21679>   MOVE.l 8(a2),d1
000316D2 <AmiBlitz3.ab3@21680>   MOVEQ #0,d2
000316D4 <AmiBlitz3.ab3@21681>   MOVEQ #-1,d3
000316D8 <AmiBlitz3.ab3@21682>   JSR _Seek(a6)                                            ; -66
000316DA <AmiBlitz3.ab3@21683>   MOVE.l (a7)+,d3
000316DC <AmiBlitz3.ab3@21684>   ADDQ.l #4,d0
000316E2 <AmiBlitz3.ab3@21686>   MOVE.l #$10000,D1
000316E8 <AmiBlitz3.ab3@21687>   MOVEA.l _execbase,A6
000316EC <AmiBlitz3.ab3@21690>   JSR _AllocVec(a6)
000316F0 <AmiBlitz3.ab3@21692>   MOVE.l D0,$4(A2)
000316F4 <AmiBlitz3.ab3@21693>   MOVE.l D0,$E(A2)
000316F6 <AmiBlitz3.ab3@21694>   MOVEA.l D0,A5
000316FC <AmiBlitz3.ab3@21701>   ADDQ.w #1,ininclude                                      ;enter include
00031702 <AmiBlitz3.ab3@21704>   LEA _include,a0
00031706 <AmiBlitz3.ab3@21705>   MOVEM.l a0-a6/d0-d7,-(a7)
0003170C <AmiBlitz3.ab3@21706>   LEA ptr_parameterstore,a1
0003170E <AmiBlitz3.ab3@21709>     MOVE.b (a0)+,(a1)+
00031712 <AmiBlitz3.ab3@21710>   BNE 'l1b
00031714 <AmiBlitz3.ab3@21712>   MOVEQ #9,d2
0003171A <AmiBlitz3.ab3@21713>   JSR findlabel2
0003171E <AmiBlitz3.ab3@21714>   BNE 'd
00031726 <AmiBlitz3.ab3@21715>   MOVE.l #1,8(a2)
0003172A <AmiBlitz3.ab3@21716>   MOVEM.l (a7)+,a0-a6/d0-d7
0003172E <AmiBlitz3.ab3@21717> BRA 'd2
00031734 <AmiBlitz3.ab3@21720>   JSR addlabelhash
0003173C <AmiBlitz3.ab3@21721>   MOVE.l #$1,$4(A2)
00031744 <AmiBlitz3.ab3@21722>   MOVE.l #1,8(a2)
00031748 <AmiBlitz3.ab3@21723>   MOVEM.l (a7)+,a0-a6/d0-d7
0003174E <AmiBlitz3.ab3@21726>   LEA inctab,a0
00031750 <AmiBlitz3.ab3@21727>   MOVEQ #0,d1
00031756 <AmiBlitz3.ab3@21728>   MOVE.w ininclude,d1
0003175A <AmiBlitz3.ab3@21729>   CLR.l $0(a0,d1*4)
00031760 <AmiBlitz3.ab3@21730>   MOVEA.l passstack,A7
00031766 <AmiBlitz3.ab3@21731> JMP AJL_0_413A
0003176C <AmiBlitz3.ab3@21733> JUMP_dupmacerr JMP dupmacerr
0003176E <AmiBlitz3.ab3@21735> coolnest:   Ds.w 1
00031772 <AmiBlitz3.ab3@21736> macline:    Ds.l 1
0003177C <AmiBlitz3.ab3@21740>   MOVE.l linenumat,macline
00031780 <AmiBlitz3.ab3@21741>    BSR.w makename2
00031784 <AmiBlitz3.ab3@21742>    BEQ.w JUMP_syntaxerr
0003178A <AmiBlitz3.ab3@21744>    CLR.b thenmode
00031794 <AmiBlitz3.ab3@21746>    MOVE.w oldqflag,instringon
0003179A <AmiBlitz3.ab3@21747>   MOVEA.l lastsourcepos,A5
0003179E <AmiBlitz3.ab3@21748>    BSR.w findmac
000317A2 <AmiBlitz3.ab3@21749>    BEQ.w JUMP_dupmacerr
000317A6 <AmiBlitz3.ab3@21750>    BSR.w addlabel
000317AA <AmiBlitz3.ab3@21751>   CLR.w $A(A2)
000317B0 <AmiBlitz3.ab3@21752>   MOVEA.l ptr_macrobuffer_begin,A0
000317B2 <AmiBlitz3.ab3@21753>   MOVEQ.l #$00,D2
000317B8 <AmiBlitz3.ab3@21754>   CLR.w coolnest
000317BA <AmiBlitz3.ab3@21757>   MOVE.b (a5),d0
000317BE <AmiBlitz3.ab3@21758>      BEQ 'l3
000317C2 <AmiBlitz3.ab3@21759>      CMP.b #" ",d0
000317C6 <AmiBlitz3.ab3@21760>       BNE 'l2                                              ;space macro
000317C8 <AmiBlitz3.ab3@21761>       ADDQ.l #1,a5
000317CC <AmiBlitz3.ab3@21762> BRA 'l1
000317D0 <AmiBlitz3.ab3@21765>    CMP.b #";",d0
000317D4 <AmiBlitz3.ab3@21766>       BNE 'l3
000317D6 <AmiBlitz3.ab3@21769>    MOVE.b (a5),d0
000317DA <AmiBlitz3.ab3@21770>       BEQ 'l5
000317DE <AmiBlitz3.ab3@21771>       BSR.w JL_0_CC98                                      ;add comment
000317E0 <AmiBlitz3.ab3@21772>       ADDQ.l #1,a5
000317E4 <AmiBlitz3.ab3@21773> BRA 'l4
000317E8 <AmiBlitz3.ab3@21776>    MOVE.b #":",d0
000317EC <AmiBlitz3.ab3@21777>       BSR.w JL_0_CC98
000317F0 <AmiBlitz3.ab3@21778>       MOVE.b #"@",d0
000317F4 <AmiBlitz3.ab3@21779>       BSR.w JL_0_CC98
000317FC <AmiBlitz3.ab3@21782>    MOVE.b #0,temp
00031804 <AmiBlitz3.ab3@21783>       MOVE.b #0,thenmode
0003180A <AmiBlitz3.ab3@21786>   JSR getcharb
0003180C <AmiBlitz3.ab3@21787>   TST.w D0
00031810 <AmiBlitz3.ab3@21788>    BNE.w JL_0_CBDE
00031814 <AmiBlitz3.ab3@21789>   MOVEM.l D2/A0/A2,-(A7)
0003181A <AmiBlitz3.ab3@21790>   CMP.w #"@@",-3(a5)
0003181E <AmiBlitz3.ab3@21791>   BNE 'l2a
00031824 <AmiBlitz3.ab3@21792>   JSR nextline
00031828 <AmiBlitz3.ab3@21793>   BEQ.w JUMP_macenderr
0003182C <AmiBlitz3.ab3@21794>   MOVEM.l (A7)+,D2/A0/A2
00031830 <AmiBlitz3.ab3@21795> BRA.w JL_0_CBB6
00031836 <AmiBlitz3.ab3@21798>    JSR nextline
0003183A <AmiBlitz3.ab3@21799>    BEQ.w JUMP_macenderr
0003183E <AmiBlitz3.ab3@21800>   MOVEM.l (A7)+,D2/A0/A2
00031840 <AmiBlitz3.ab3@21801>   TST.w D2
00031844 <AmiBlitz3.ab3@21802>    BEQ.w JL_0_CBB6
00031846 <AmiBlitz3.ab3@21805>   MOVE.b (a5),d0
0003184A <AmiBlitz3.ab3@21806>       CMP.b #" ",d0
0003184E <AmiBlitz3.ab3@21807>       BNE 'l1
00031850 <AmiBlitz3.ab3@21808>       ADDQ.w #1,a5
00031854 <AmiBlitz3.ab3@21809> BRA 'l2
0003185A <AmiBlitz3.ab3@21812>   TST.b thenmode
0003185E <AmiBlitz3.ab3@21813>      BEQ 'l3
00031860 <AmiBlitz3.ab3@21814>      MOVEQ #":",d0
00031864 <AmiBlitz3.ab3@21815>      BSR.w JL_0_CC98
00031868 <AmiBlitz3.ab3@21816>      MOVE.w #-$7FFE,D0                                     ;write end if
0003186C <AmiBlitz3.ab3@21817>      BSR macputw
00031870 <AmiBlitz3.ab3@21818>      MOVE.w #$800b,d0
00031874 <AmiBlitz3.ab3@21819>      BSR.w macputw
0003187A <AmiBlitz3.ab3@21820>      CLR.b thenmode
0003187C <AmiBlitz3.ab3@21823>    MOVEQ.l #$3A,D0
00031884 <AmiBlitz3.ab3@21824>      MOVE.b #1,temp
00031888 <AmiBlitz3.ab3@21826> BRA.w JL_0_CC2A
0003188C <AmiBlitz3.ab3@21830>   BPL.w JL_0_CC2A
00031890 <AmiBlitz3.ab3@21831>   CMP.w #-$7FF3,D0                                         ;macro ?
00031894 <AmiBlitz3.ab3@21832>    BNE.w JL_0_CBF4
0003189A <AmiBlitz3.ab3@21833>   ADDQ.w #1,coolnest
0003189E <AmiBlitz3.ab3@21834> BRA.w JL_0_CC22
000318A4 <AmiBlitz3.ab3@21836> JUMP_macnesterr JMP macnesterr
000318A8 <AmiBlitz3.ab3@21839>   CMP.w #$80d7,d0                                          ;object ?
000318AC <AmiBlitz3.ab3@21840>     BNE 'l1x
000318B2 <AmiBlitz3.ab3@21841>     TST.b objectcount
000318B6 <AmiBlitz3.ab3@21842>     BNE JUMP_macnesterr
000318BA <AmiBlitz3.ab3@21845>   CMP.w #$8021,d0
000318BE <AmiBlitz3.ab3@21846>     BNE 'nothen
000318C6 <AmiBlitz3.ab3@21847>     MOVE.b #1,thenmode
000318CC <AmiBlitz3.ab3@21850>   TST.b thenmode
000318D0 <AmiBlitz3.ab3@21851>         BEQ 'l1
000318D4 <AmiBlitz3.ab3@21852>    CMP.w #$8002,d0                                         ;end if
000318D8 <AmiBlitz3.ab3@21853>    BNE 'l1
000318DC <AmiBlitz3.ab3@21854>    MOVEM.l d0/a5,-(a7)
000318E2 <AmiBlitz3.ab3@21855>    JSR get1bytemain
000318E4 <AmiBlitz3.ab3@21856>    MOVE.w d0,d1
000318E8 <AmiBlitz3.ab3@21857>    MOVEM.l (a7)+,a5/d0
000318EC <AmiBlitz3.ab3@21858>    CMP.w #$800b,d1
000318F0 <AmiBlitz3.ab3@21859>    BNE 'l1
000318F6 <AmiBlitz3.ab3@21860>    CLR.b thenmode
000318FA <AmiBlitz3.ab3@21863>    CMP.w #-$7FFE,D0                                        ;end ?
000318FE <AmiBlitz3.ab3@21864>    BNE.w JL_0_CC22
00031900 <AmiBlitz3.ab3@21865>    MOVE.l a5,-(a7)
00031906 <AmiBlitz3.ab3@21866>    JSR get1bytemain
00031908 <AmiBlitz3.ab3@21867>    MOVE.l (a7)+,a5
0003190A <AmiBlitz3.ab3@21868>    TST.w d0
0003190E <AmiBlitz3.ab3@21869>    BEQ 'doend
00031912 <AmiBlitz3.ab3@21870>    CMP.w #":",d0
00031916 <AmiBlitz3.ab3@21871>    BEQ 'doend
0003191A <AmiBlitz3.ab3@21872>    CMP.w #";",d0
0003191E <AmiBlitz3.ab3@21873>    BEQ 'doend
00031920 <AmiBlitz3.ab3@21874>    MOVE.l a5,-(a7)
00031926 <AmiBlitz3.ab3@21875>    JSR get1bytemain
0003192A <AmiBlitz3.ab3@21876>    MOVE.l -1(a5),d0
0003192C <AmiBlitz3.ab3@21877>    MOVE.l (a7)+,a5
00031932 <AmiBlitz3.ab3@21878>    CMP.l #"noa7",d0
00031936 <AmiBlitz3.ab3@21879>    BEQ 'doend
0003193A <AmiBlitz3.ab3@21880> BRA 'morechar
0003193E <AmiBlitz3.ab3@21883>   MOVE.w #$8002,D0
00031942 <AmiBlitz3.ab3@21884>    BSR.w macputw
00031946 <AmiBlitz3.ab3@21885> BRA JL_0_CBB6
0003194C <AmiBlitz3.ab3@21888>   JSR get1bytemain
00031950 <AmiBlitz3.ab3@21889>    CMP.w #-$7FF3,D0                                        ;end macro
00031954 <AmiBlitz3.ab3@21890>    BEQ.w 'lo1
00031958 <AmiBlitz3.ab3@21891>   CMP.w #$80d7,d0                                          ;end object
0003195C <AmiBlitz3.ab3@21892>   BNE JL_0_CC12
00031962 <AmiBlitz3.ab3@21893>   SUBQ.b #1,objectcount
00031968 <AmiBlitz3.ab3@21894>   TST.b developobject
0003196C <AmiBlitz3.ab3@21895>   BEQ 'lo1
00031970 <AmiBlitz3.ab3@21896>   BSR skiprest
00031972 <AmiBlitz3.ab3@21897> RTS
00031978 <AmiBlitz3.ab3@21900>   SUBQ.w #1,coolnest
0003197C <AmiBlitz3.ab3@21901>    BMI.w JL_0_CC32
0003197E <AmiBlitz3.ab3@21904>   MOVE.w D0,-(A7)
00031982 <AmiBlitz3.ab3@21905>   MOVE.w #$8002,D0
00031986 <AmiBlitz3.ab3@21906>    BSR.w macputw
00031988 <AmiBlitz3.ab3@21907>   MOVE.w (A7)+,D0
0003198C <AmiBlitz3.ab3@21908> BRA.w JL_0_CC22
00031990 <AmiBlitz3.ab3@21911>   BSR.w macputw
00031994 <AmiBlitz3.ab3@21912> BRA.w JL_0_CBB6
0003199A <AmiBlitz3.ab3@21914> JUMP_macenderr JMP macenderr
000319A0 <AmiBlitz3.ab3@21917>     CMP.w #"@@",-1(a5)                                     ;merge lines
000319A4 <AmiBlitz3.ab3@21918>     BNE 'no
000319A8 <AmiBlitz3.ab3@21919>      MOVEM.l D2/A0/A2,-(A7)
000319AE <AmiBlitz3.ab3@21920>    JSR nextline
000319B2 <AmiBlitz3.ab3@21921>    BEQ.w JUMP_macenderr
000319B6 <AmiBlitz3.ab3@21922>   MOVEM.l (A7)+,D2/A0/A2
000319B8 <AmiBlitz3.ab3@21923>     TST.w D2
000319BC <AmiBlitz3.ab3@21924>    BEQ.w JL_0_CBB6
000319C0 <AmiBlitz3.ab3@21925> BRA JL_0_CBB6
000319C4 <AmiBlitz3.ab3@21929>   BSR.w JL_0_CC98
000319C8 <AmiBlitz3.ab3@21930> BRA.w JL_0_CBB6
000319CA <AmiBlitz3.ab3@21933>   ADDQ.w #4,A7
000319CC <AmiBlitz3.ab3@21934>   MOVE.l A0,D0
000319D2 <AmiBlitz3.ab3@21935>   SUB.l ptr_macrobuffer_begin,D0
000319D6 <AmiBlitz3.ab3@21938>    BEQ.w JL_0_CC5E
000319DA <AmiBlitz3.ab3@21939>   CMPI.b #":",-(A0)
000319DE <AmiBlitz3.ab3@21940>    BNE.w JL_0_CC5E
000319E2 <AmiBlitz3.ab3@21941>   CMP.w #$1,D0
000319E6 <AmiBlitz3.ab3@21942>    BEQ.w JL_0_CC58
000319EA <AmiBlitz3.ab3@21943>   TST.b -$1(A0)
000319EE <AmiBlitz3.ab3@21944>    BMI.w JL_0_CC5E
000319F0 <AmiBlitz3.ab3@21947>   SUBQ.w #1,D0
000319F4 <AmiBlitz3.ab3@21948> BRA.w JL_0_CC3C
000319F8 <AmiBlitz3.ab3@21951>   MOVE.w D0,$8(A2)
000319FC <AmiBlitz3.ab3@21952>    BEQ.w JL_0_CC8E
000319FE <AmiBlitz3.ab3@21953>   MOVEQ.l #$01,D1
00031A04 <AmiBlitz3.ab3@21954>   MOVEA.l _execbase,A6
00031A0A <AmiBlitz3.ab3@21955>   MOVE.l mempool,a0
00031A0E <AmiBlitz3.ab3@21956>   JSR _AllocPooled(a6)
00031A10 <AmiBlitz3.ab3@21958>   MOVEA.l D0,A0
00031A14 <AmiBlitz3.ab3@21959>   MOVE.l A0,$4(A2)
00031A18 <AmiBlitz3.ab3@21960>   MOVE.w $8(A2),D1
00031A1C <AmiBlitz3.ab3@21961>    BEQ.w JL_0_CC8E
00031A1E <AmiBlitz3.ab3@21962>   SUBQ.w #1,D1
00031A24 <AmiBlitz3.ab3@21963>   MOVEA.l ptr_macrobuffer_begin,A1
00031A26 <AmiBlitz3.ab3@21966>     MOVE.b (A1)+,(A0)+
00031A2A <AmiBlitz3.ab3@21967>   DBF D1,JL_0_CC88
00031A30 <AmiBlitz3.ab3@21970> JMP get1bytemain
00031A32 <AmiBlitz3.ab3@21974>   MOVE.w D0,D1
00031A34 <AmiBlitz3.ab3@21975>   LSR.w #8,D1
00031A36 <AmiBlitz3.ab3@21976>   MOVE.b D1,(A0)+
00031A38 <AmiBlitz3.ab3@21979>   MOVEQ.l #-$01,D2
00031A3A <AmiBlitz3.ab3@21980>   MOVE.b D0,(A0)+
00031A40 <AmiBlitz3.ab3@21981>   CMPA.l ptr_macrobuffer_end,A0
00031A44 <AmiBlitz3.ab3@21982>    BCC.w macbigerr2
00031A46 <AmiBlitz3.ab3@21983> RTS
00031A4C <AmiBlitz3.ab3@21984> macbigerr2 JMP macbigerr
00031A4E <AmiBlitz3.ab3@21987>   MOVE.l d0,-(a7)
00031A50 <AmiBlitz3.ab3@21988>   MOVEQ #0,d0
00031A56 <AmiBlitz3.ab3@21989>   CLR.b skiptoggle
00031A58 <AmiBlitz3.ab3@21992>     MOVE.b (a5),d0
00031A5C <AmiBlitz3.ab3@21993>     BEQ 'l3
00031A60 <AmiBlitz3.ab3@21994>     CMP.b #";",d0
00031A64 <AmiBlitz3.ab3@21995>     BNE 'l2
00031A6C <AmiBlitz3.ab3@21996>     MOVE.b #1,skiptoggle
00031A72 <AmiBlitz3.ab3@21999>     TST.b skiptoggle
00031A76 <AmiBlitz3.ab3@22000>     BNE 'l4
00031A7A <AmiBlitz3.ab3@22001>     CMP.b #":",d0
00031A7E <AmiBlitz3.ab3@22002>     BEQ 'l3
00031A80 <AmiBlitz3.ab3@22005>     ADDQ #1,a5
00031A84 <AmiBlitz3.ab3@22006> BRA 'loop
00031A8A <AmiBlitz3.ab3@22009>   MOVE.w d0,lastchar
00031A8C <AmiBlitz3.ab3@22010>   MOVE.l (a7)+,d0
00031A8E <AmiBlitz3.ab3@22011> RTS
00031A92 <AmiBlitz3.ab3@22015>   BSR.w ifchar
00031A96 <AmiBlitz3.ab3@22016>    BNE.w JUMP_syntaxerr
00031A98 <AmiBlitz3.ab3@22017>   MOVE.w D0,D1
00031A9E <AmiBlitz3.ab3@22018>   JSR get1bytemain
00031AA2 <AmiBlitz3.ab3@22019>   BSR.w ifchar
00031AA6 <AmiBlitz3.ab3@22020>    BNE.w JL_0_CCDA
00031AA8 <AmiBlitz3.ab3@22021>   ADDQ.w #1,D0
00031AAA <AmiBlitz3.ab3@22022>   MOVE.w D0,D2
00031AAC <AmiBlitz3.ab3@22023>   ADD.w D0,D0
00031AAE <AmiBlitz3.ab3@22024>   ADD.w D2,D0
00031AB0 <AmiBlitz3.ab3@22025>   ADD.w D0,D1
00031AB2 <AmiBlitz3.ab3@22026>   MOVE.w D1,D0
00031AB6 <AmiBlitz3.ab3@22027>   ANDI.w #$3,D0
00031ABA <AmiBlitz3.ab3@22028>   CMP.w #$3,D0
00031ABE <AmiBlitz3.ab3@22029>    BEQ.w JUMP_syntaxerr
00031AC4 <AmiBlitz3.ab3@22031>   JSR get1bytemain
00031AC6 <AmiBlitz3.ab3@22034> RTS
00031AC8 <AmiBlitz3.ab3@22040> thetst1:  TST.b D0
00031ACA <AmiBlitz3.ab3@22041> thetst2:  TST.w D0
00031ACC <AmiBlitz3.ab3@22042> thetst3:  TST.l D0
00031ACE <AmiBlitz3.ab3@22043> thetst4:  TST.l (A7)+                                      ;Any Length?
00031AD2 <AmiBlitz3.ab3@22044> thetst5:  JSR _Reschedule(A6)
00031AD6 <AmiBlitz3.ab3@22046> posbr:    BEQ.w posbr
00031ADA <AmiBlitz3.ab3@22047> negbr:    BNE.w negbr
00031ADC <AmiBlitz3.ab3@22051>   MOVEQ.l #-$01,D2
00031AE0 <AmiBlitz3.ab3@22052> BRA.w JL_0_D04C
00031AE6 <AmiBlitz3.ab3@22056>   CLR.l fp0addr
00031AE8 <AmiBlitz3.ab3@22057>   MOVEQ.l #$01,D1                                          ;while flag
00031AEA <AmiBlitz3.ab3@22058>   MOVEQ.l #$00,D2                                          ;negate flag
00031AEE <AmiBlitz3.ab3@22059> BRA.w JL_0_D04E
00031AF4 <AmiBlitz3.ab3@22063>   LEA firstrep,A2
00031AF6 <AmiBlitz3.ab3@22064>   MOVEQ.l #$08,D2
00031AFA <AmiBlitz3.ab3@22065> BRA.w freeslist
00031AFE <AmiBlitz3.ab3@22069>   LEA firstsel(PC),A2
00031B00 <AmiBlitz3.ab3@22070>   MOVEQ.l #$0E,D2
00031B02 <AmiBlitz3.ab3@22075>   MOVEQ.l #$00,D3
00031B04 <AmiBlitz3.ab3@22083>   MOVE.l (A2),D0
00031B06 <AmiBlitz3.ab3@22084>   CLR.l (A2)
00031B08 <AmiBlitz3.ab3@22085>   MOVEA.l D0,A2
00031B0E <AmiBlitz3.ab3@22086>   MOVEA.l _execbase,A6
00031B12 <AmiBlitz3.ab3@22089>     CMPA.w #$0,A2
00031B16 <AmiBlitz3.ab3@22090>      BEQ.w freelist__done
00031B18 <AmiBlitz3.ab3@22091>     TST.w D3
00031B1C <AmiBlitz3.ab3@22092>      BEQ.w freelist__skip
00031B20 <AmiBlitz3.ab3@22093>     MOVEM.l D2-D3/A2,-(A7)
00031B22 <AmiBlitz3.ab3@22094>     ADDA.w D3,A2
00031B24 <AmiBlitz3.ab3@22095>     MOVE.l D4,D2
00031B28 <AmiBlitz3.ab3@22096>     BSR.w freeslist
00031B2C <AmiBlitz3.ab3@22097>     MOVEM.l (A7)+,D2-D3/A2
00031B2E <AmiBlitz3.ab3@22100>     MOVEA.l A2,A1
00031B30 <AmiBlitz3.ab3@22101>     MOVE.l D2,D0
00031B32 <AmiBlitz3.ab3@22102>     MOVEA.l (A2),A2
00031B38 <AmiBlitz3.ab3@22103>     MOVE.l mempool,a0
00031B3C <AmiBlitz3.ab3@22104>     JSR _FreePooled(A6)
00031B40 <AmiBlitz3.ab3@22105> BRA.w freelist__loop
00031B42 <AmiBlitz3.ab3@22108> RTS
00031B48 <AmiBlitz3.ab3@22111> JMP eselerr
00031B4C <AmiBlitz3.ab3@22114> firstsel:  Ds.l 1
00031B50 <AmiBlitz3.ab3@22117> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031B52 <AmiBlitz3.ab3@22120> selpushw:   MOVE.w D0,-(A7)
00031B54 <AmiBlitz3.ab3@22122> selpushl:   MOVE.l D0,-(A7)
00031B58 <AmiBlitz3.ab3@22124> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031B5C <AmiBlitz3.ab3@22127> selcomb:    ANDI.w #$FF,D0
00031B5E <AmiBlitz3.ab3@22128> selcomw:    CMP.w (A7),D0
00031B60 <AmiBlitz3.ab3@22130> selcoml:    CMP.l (A7),D0
00031B64 <AmiBlitz3.ab3@22132> selbne:     BNE.w selbne
00031B66 <AmiBlitz3.ab3@22134> endsel:     ADDQ.w #8,A7
00031B6A <AmiBlitz3.ab3@22140>   MOVE.l firstsel(PC),D0                                  
00031B6E <AmiBlitz3.ab3@22141>    BEQ.w JUMP_eselerr
00031B70 <AmiBlitz3.ab3@22142>   MOVEA.l D0,A2
00031B74 <AmiBlitz3.ab3@22143>    BSR.w JL_0_CDFC
00031B7A <AmiBlitz3.ab3@22146>   MOVEA.l _execbase,A6
00031B7E <AmiBlitz3.ab3@22149>   MOVE.l $4(A2),D0
00031B82 <AmiBlitz3.ab3@22150>    BEQ.w doendsel__done
00031B84 <AmiBlitz3.ab3@22151>   MOVEA.l D0,A3
00031B88 <AmiBlitz3.ab3@22152>   MOVEA.l $4(A3),A0
00031B8E <AmiBlitz3.ab3@22153>   MOVE.l destpointer,D1
00031B90 <AmiBlitz3.ab3@22154>   SUB.l A0,D1
00031B96 <AmiBlitz3.ab3@22156>     TST.b fast
00031B9A <AmiBlitz3.ab3@22157>     BEQ doendsel__loop_l1
00031BA0 <AmiBlitz3.ab3@22158>     MOVE.w dontwrite,D0
00031BA4 <AmiBlitz3.ab3@22159>     BNE.w doendsel__skip
00031BA6 <AmiBlitz3.ab3@22160>     ADDQ.l #2,d1
00031BAA <AmiBlitz3.ab3@22161>     MOVE.l d1,-2(a0)
00031BAE <AmiBlitz3.ab3@22162>   BRA doendsel__skip
00031BB4 <AmiBlitz3.ab3@22166>   TST.w dontwrite
00031BB8 <AmiBlitz3.ab3@22167>      BNE.w doendsel__skip
00031BBE <AmiBlitz3.ab3@22168>   CMP.l #MaxWordSgnd,D1
00031BC2 <AmiBlitz3.ab3@22169>    BHI.w JUMP_cbraerr
00031BC4 <AmiBlitz3.ab3@22170>   MOVE.w D1,(A0)
00031BC8 <AmiBlitz3.ab3@22173>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00031BCA <AmiBlitz3.ab3@22174>   MOVEA.l A3,A1
00031BCC <AmiBlitz3.ab3@22175>   MOVEQ.l #$08,D0
00031BD2 <AmiBlitz3.ab3@22176>   MOVE.l mempool,a0
00031BD6 <AmiBlitz3.ab3@22177>    JSR _FreePooled(A6)
00031BDA <AmiBlitz3.ab3@22178> BRA.w doendsel__loop
00031BE0 <AmiBlitz3.ab3@22181>   JSR popselect                                            ;fix stack on select
00031BE4 <AmiBlitz3.ab3@22182>   MOVEA.l firstsel(PC),A1
00031BEA <AmiBlitz3.ab3@22183>   MOVE.l (A1),firstsel
00031BEC <AmiBlitz3.ab3@22184>   MOVEQ.l #$0E,D0
00031BF2 <AmiBlitz3.ab3@22185>   MOVEA.l _execbase,A6
00031BF8 <AmiBlitz3.ab3@22186>   MOVE.l mempool,a0
00031BFC <AmiBlitz3.ab3@22187>   JSR _FreePooled(A6)
00031C02 <AmiBlitz3.ab3@22188> JMP get1bytemain
00031C04 <AmiBlitz3.ab3@22192>   MOVEA.l (A7)+,A1
00031C06 <AmiBlitz3.ab3@22193>   SUBQ.w #8,A1
00031C08 <AmiBlitz3.ab3@22194>   MOVEQ.l #$09,D0
00031C0A <AmiBlitz3.ab3@22195>   ADD.l (A1),D0
00031C0C <AmiBlitz3.ab3@22198>   ADDQ.w #2,A7                                             ;for runtime errs!
00031C10 <AmiBlitz3.ab3@22203>   MOVE.l firstsel(PC),D0
00031C14 <AmiBlitz3.ab3@22204>    BEQ.w JUMP_defaerr
00031C16 <AmiBlitz3.ab3@22205>   MOVEA.l D0,A2
00031C1A <AmiBlitz3.ab3@22206>   BSR.w JL_0_CE26
00031C1E <AmiBlitz3.ab3@22207>   BSR.w JL_0_CDFC
00031C22 <AmiBlitz3.ab3@22208>   CLR.l $8(A2)
00031C26 <AmiBlitz3.ab3@22209>   MOVE.w $C(A2),D2
00031C2A <AmiBlitz3.ab3@22210> BRA.w JL_0_CE5E
00031C30 <AmiBlitz3.ab3@22213> JMP defaerr
00031C34 <AmiBlitz3.ab3@22216>   MOVE.l $8(A2),D0
00031C38 <AmiBlitz3.ab3@22217>    BEQ.w JL_0_CE24
00031C3A <AmiBlitz3.ab3@22218>   MOVEA.l D0,A0
00031C40 <AmiBlitz3.ab3@22219>   MOVE.l destpointer,D1
00031C42 <AmiBlitz3.ab3@22220>   SUB.l A0,D1
00031C48 <AmiBlitz3.ab3@22222>     TST.b fast
00031C4C <AmiBlitz3.ab3@22223>     BEQ 'l1
00031C52 <AmiBlitz3.ab3@22224>     TST.w dontwrite
00031C56 <AmiBlitz3.ab3@22225>     BNE.w JL_0_CE24
00031C58 <AmiBlitz3.ab3@22226>     ADDQ.l #2,d1
00031C5C <AmiBlitz3.ab3@22227>     MOVE.l D1,-2(A0)
00031C60 <AmiBlitz3.ab3@22228>   BRA JL_0_CE24
00031C66 <AmiBlitz3.ab3@22232>   TST.w dontwrite
00031C6A <AmiBlitz3.ab3@22233>      BNE.w JL_0_CE24
00031C70 <AmiBlitz3.ab3@22234>    CMP.l #MaxWordSgnd,D1
00031C74 <AmiBlitz3.ab3@22235>    BHI.w JUMP_cbraerr
00031C76 <AmiBlitz3.ab3@22236>   MOVE.w D1,(A0)
00031C78 <AmiBlitz3.ab3@22239> RTS
00031C7E <AmiBlitz3.ab3@22242> JMP cbraerr
00031C82 <AmiBlitz3.ab3@22246>   MOVE.l $8(A2),D0
00031C86 <AmiBlitz3.ab3@22247>    BEQ.w JL_0_CE5C
00031C88 <AmiBlitz3.ab3@22248>   MOVEA.l D0,A3
00031C8C <AmiBlitz3.ab3@22249>   MOVE.w #$6000,D1
00031C92 <AmiBlitz3.ab3@22251>    TST.b fast
00031C96 <AmiBlitz3.ab3@22252>    BEQ 'l1
00031C9C <AmiBlitz3.ab3@22253>    OR.l #$ff,d1
00031CA0 <AmiBlitz3.ab3@22254>    BSR writeword
00031CA4 <AmiBlitz3.ab3@22258>   BSR.w writeword
00031CA6 <AmiBlitz3.ab3@22259>   MOVEQ.l #$08,D0
00031CA8 <AmiBlitz3.ab3@22260>   MOVEQ.l #$01,D1
00031CAE <AmiBlitz3.ab3@22261>   MOVEA.l _execbase,A6
00031CB4 <AmiBlitz3.ab3@22262>   MOVE.l mempool,a0
00031CB8 <AmiBlitz3.ab3@22263>   JSR _AllocPooled(a6)
00031CBA <AmiBlitz3.ab3@22265>   MOVEA.l D0,A0
00031CBE <AmiBlitz3.ab3@22266>   MOVE.l $4(A2),(A0)
00031CC2 <AmiBlitz3.ab3@22267>   MOVE.l A0,$4(A2)
00031CCA <AmiBlitz3.ab3@22268>   MOVE.l destpointer,$4(A0)
00031CCE <AmiBlitz3.ab3@22269> BRA.w writeword
00031CD0 <AmiBlitz3.ab3@22272> RTS
00031CD6 <AmiBlitz3.ab3@22276>   TST.b debugmode
00031CDA <AmiBlitz3.ab3@22277>    BEQ.w JL_0_CE7A
00031CDE <AmiBlitz3.ab3@22278>   MOVE.w #$C313,D1
00031CE2 <AmiBlitz3.ab3@22279>   CMP.w #$3,D2
00031CE6 <AmiBlitz3.ab3@22280>    BCS.w JL_0_CE76
00031CE8 <AmiBlitz3.ab3@22281>   ADDQ.w #1,D1
00031CEC <AmiBlitz3.ab3@22284> BRA.w Atokejsr
00031CEE <AmiBlitz3.ab3@22287> RTS
00031CF4 <AmiBlitz3.ab3@22291> JMP caseerr
00031CF8 <AmiBlitz3.ab3@22294>   MOVE.l firstsel(PC),D0
00031CFC <AmiBlitz3.ab3@22295>    BEQ.w JUMP_caseerr
00031CFE <AmiBlitz3.ab3@22296>   MOVEA.l D0,A2
00031D02 <AmiBlitz3.ab3@22297>    BSR.w JL_0_CE26
00031D06 <AmiBlitz3.ab3@22298>    BSR.w JL_0_CDFC
00031D0A <AmiBlitz3.ab3@22299>   MOVE.w $C(A2),D2
00031D0C <AmiBlitz3.ab3@22300>   MOVE.w D2,-(A7)
00031D10 <AmiBlitz3.ab3@22301>    BSR.w JL_0_CE5E
00031D12 <AmiBlitz3.ab3@22302>   MOVE.w (A7),D2
00031D16 <AmiBlitz3.ab3@22303>    BSR.w bakeval
00031D18 <AmiBlitz3.ab3@22304>   MOVE.w (A7)+,D2
00031D1C <AmiBlitz3.ab3@22305>   LEA selcomb(PC),A0
00031D20 <AmiBlitz3.ab3@22306>   LEA selcombf(PC),A1
00031D24 <AmiBlitz3.ab3@22307>   CMP.w #$1,D2
00031D28 <AmiBlitz3.ab3@22308>    BEQ.w JL_0_CED8
00031D2C <AmiBlitz3.ab3@22309>   LEA selcomw(PC),A0
00031D30 <AmiBlitz3.ab3@22310>   CMP.w #$2,D2
00031D34 <AmiBlitz3.ab3@22311>    BEQ.w JL_0_CED8
00031D38 <AmiBlitz3.ab3@22312>   LEA selcoml(PC),A0
00031D3C <AmiBlitz3.ab3@22313>   LEA selcomlf(PC),A1
00031D40 <AmiBlitz3.ab3@22314>   CMP.w #$7,D2
00031D44 <AmiBlitz3.ab3@22315>    BCS.w JL_0_CED8
00031D48 <AmiBlitz3.ab3@22317>   MOVE.w #$CE01,D1
00031D4C <AmiBlitz3.ab3@22318>    BSR.w Atokejsr
00031D50 <AmiBlitz3.ab3@22319> BRA.w JL_0_CEDC
00031D54 <AmiBlitz3.ab3@22322>   BSR.w pokecode
00031D58 <AmiBlitz3.ab3@22325>   MOVE.w selbne(PC),D1
00031D5E <AmiBlitz3.ab3@22327>     TST.b fast
00031D62 <AmiBlitz3.ab3@22328>     BEQ 'l1
00031D68 <AmiBlitz3.ab3@22329>     ORI.l #$ff,d1
00031D6C <AmiBlitz3.ab3@22330>     BSR writeword
00031D70 <AmiBlitz3.ab3@22333>   BSR.w writeword
00031D74 <AmiBlitz3.ab3@22334>   MOVEA.l firstsel(PC),A0
00031D7C <AmiBlitz3.ab3@22335>   MOVE.l destpointer,$8(A0)
00031D80 <AmiBlitz3.ab3@22336> BRA.w writeword
00031D84 <AmiBlitz3.ab3@22340> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00031D86 <AmiBlitz3.ab3@22341> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00031D8A <AmiBlitz3.ab3@22344> sellineat:  Ds.l 1
00031D90 <AmiBlitz3.ab3@22350>   TST.b debugmode
00031D94 <AmiBlitz3.ab3@22351>    BEQ.w JL_0_CF0E
00031D98 <AmiBlitz3.ab3@22352>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00031D9C <AmiBlitz3.ab3@22353>    BSR.w writelong
00031DA6 <AmiBlitz3.ab3@22356>   MOVE.l linenumat,sellineat
00031DB0 <AmiBlitz3.ab3@22358>    MOVE.l destpointer,pushpc
00031DBA <AmiBlitz3.ab3@22359>   MOVE.l hunkoffsetbase,pushoff
00031DBC <AmiBlitz3.ab3@22360>   MOVEQ.l #$00,D2
00031DC0 <AmiBlitz3.ab3@22361>    BSR.w bakevalu                                          ;Evaluate
00031DC4 <AmiBlitz3.ab3@22362>    BSR.w JL_0_B5D2
00031DC8 <AmiBlitz3.ab3@22363>   CMP.w #$7,D2
00031DCC <AmiBlitz3.ab3@22364>    BNE.w JL_0_CF36
00031DD0 <AmiBlitz3.ab3@22365>   MOVE.w clrst(PC),D1
00031DD4 <AmiBlitz3.ab3@22366>    BSR.w writeword
00031DD8 <AmiBlitz3.ab3@22369>    BSR.w JL_0_B63C
00031DDC <AmiBlitz3.ab3@22370>   LEA selpushb(PC),A0
00031DE0 <AmiBlitz3.ab3@22371>   LEA selpushbf(PC),A1
00031DE4 <AmiBlitz3.ab3@22372>   CMP.w #$1,D2
00031DE8 <AmiBlitz3.ab3@22373>    BEQ.w JL_0_CF88
00031DEC <AmiBlitz3.ab3@22374>   LEA selpushw(PC),A0
00031DF0 <AmiBlitz3.ab3@22375>   CMP.w #$2,D2
00031DF4 <AmiBlitz3.ab3@22376>    BEQ.w JL_0_CF88
00031DF8 <AmiBlitz3.ab3@22377>   LEA selpushl(PC),A0
00031DFC <AmiBlitz3.ab3@22378>   LEA selpushlf(PC),A1
00031E00 <AmiBlitz3.ab3@22379>   CMP.w #$7,D2
00031E04 <AmiBlitz3.ab3@22380>    BCS.w JL_0_CF88
00031E0A <AmiBlitz3.ab3@22382>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00031E0E <AmiBlitz3.ab3@22383>    BSR.w writeword
00031E12 <AmiBlitz3.ab3@22384>   LEA selpushs(PC),A0
00031E16 <AmiBlitz3.ab3@22385>   LEA selpushsf(PC),A1
00031E1A <AmiBlitz3.ab3@22386>    BSR.w pokecode
00031E1E <AmiBlitz3.ab3@22387>   MOVE.w #$C701,D1
00031E22 <AmiBlitz3.ab3@22388>    BSR.w Atokejsr
00031E26 <AmiBlitz3.ab3@22389> BRA.w JL_0_CF8C
00031E2A <AmiBlitz3.ab3@22392>   BSR.w pokecode
00031E2C <AmiBlitz3.ab3@22395>   MOVEQ.l #$0E,D0
00031E2E <AmiBlitz3.ab3@22396>   MOVEQ.l #$01,D1
00031E34 <AmiBlitz3.ab3@22397>   MOVEA.l _execbase,A6
00031E3A <AmiBlitz3.ab3@22399>   MOVE.l mempool,a0
00031E3E <AmiBlitz3.ab3@22400>   JSR _AllocPooled(a6)
00031E40 <AmiBlitz3.ab3@22401>   MOVEA.l D0,A0
00031E44 <AmiBlitz3.ab3@22402>   MOVE.l firstsel(PC),(A0)
00031E4A <AmiBlitz3.ab3@22403>   MOVE.l A0,firstsel
00031E4E <AmiBlitz3.ab3@22404>   CLR.l $4(A0)
00031E52 <AmiBlitz3.ab3@22405>   CLR.l $8(A0)
00031E56 <AmiBlitz3.ab3@22406>   MOVE.w D2,$C(A0)
00031E58 <AmiBlitz3.ab3@22407> RTS
00031E5E <AmiBlitz3.ab3@22411>   MOVE.l firstrep,D0
00031E62 <AmiBlitz3.ab3@22412>    BEQ.w JUMP_unterr1
00031E66 <AmiBlitz3.ab3@22413>   MOVE.w #$6000,D1
00031E6A <AmiBlitz3.ab3@22414>   BSR.w writeword
00031E6C <AmiBlitz3.ab3@22415>   MOVEA.l D0,A0
00031E70 <AmiBlitz3.ab3@22416>   MOVE.l $4(A0),D1
00031E76 <AmiBlitz3.ab3@22417>   SUB.l destpointer,D1
00031E78 <AmiBlitz3.ab3@22418>   TST.w D1
00031E7C <AmiBlitz3.ab3@22419>    BPL.w JUMP_unterr2
00031E80 <AmiBlitz3.ab3@22420>   BSR.w writeword
00031E86 <AmiBlitz3.ab3@22421>   MOVEA.l _execbase,A6
00031E8A <AmiBlitz3.ab3@22422> BRA.w JL_0_D036
00031E90 <AmiBlitz3.ab3@22425> JMP unterr2
00031E96 <AmiBlitz3.ab3@22428> JMP unterr1
00031E9C <AmiBlitz3.ab3@22432>   MOVE.l firstrep,D0
00031EA0 <AmiBlitz3.ab3@22433>    BEQ.w JUMP_unterr1
00031EA4 <AmiBlitz3.ab3@22434>   BSR.w do_if
00031EAA <AmiBlitz3.ab3@22435>   JSR reget
00031EAE <AmiBlitz3.ab3@22436>    BNE.w JUMP_syntaxerr
00031EB4 <AmiBlitz3.ab3@22437>   MOVE.w dontwrite,D1
00031EB8 <AmiBlitz3.ab3@22438>    BNE.w JL_0_D020
00031EBE <AmiBlitz3.ab3@22439>   MOVEA.l firstrep,A0
00031EC4 <AmiBlitz3.ab3@22440>   MOVEA.l destpointer,A1
00031ECA <AmiBlitz3.ab3@22442>     TST.b fast
00031ECE <AmiBlitz3.ab3@22443>     BEQ 'l1
00031ED0 <AmiBlitz3.ab3@22444>     SUBQ.w #4,a1
00031ED4 <AmiBlitz3.ab3@22445>     MOVE.l $4(A0),D2
00031ED6 <AmiBlitz3.ab3@22446>     SUB.l A1,D2
00031ED8 <AmiBlitz3.ab3@22447>     MOVE.l d2,(a1)
00031EDC <AmiBlitz3.ab3@22448>   BRA JL_0_D020
00031EDE <AmiBlitz3.ab3@22452>   SUBQ.w #2,A1
00031EE2 <AmiBlitz3.ab3@22453>   MOVE.l $4(A0),D2
00031EE4 <AmiBlitz3.ab3@22454>   SUB.l A1,D2
00031EE6 <AmiBlitz3.ab3@22455>   TST.w D2
00031EEA <AmiBlitz3.ab3@22456>    BPL.w JUMP_unterr2
00031EEC <AmiBlitz3.ab3@22457>   MOVE.w D2,(A1)
00031EF2 <AmiBlitz3.ab3@22460>   MOVEA.l firstiff,A1
00031EF8 <AmiBlitz3.ab3@22461>   MOVE.l (A1),firstiff
00031EFA <AmiBlitz3.ab3@22462>   MOVEQ.l #$0E,D0
00031F00 <AmiBlitz3.ab3@22463>   MOVEA.l _execbase,A6
00031F06 <AmiBlitz3.ab3@22464>   MOVE.l mempool,a0
00031F0A <AmiBlitz3.ab3@22465>   JSR _FreePooled(A6)
00031F10 <AmiBlitz3.ab3@22468>   MOVEA.l firstrep,A1
00031F16 <AmiBlitz3.ab3@22469>   MOVE.l (A1),firstrep
00031F18 <AmiBlitz3.ab3@22470>   MOVEQ.l #$08,D0
00031F1E <AmiBlitz3.ab3@22471>   MOVE.l mempool,a0
00031F22 <AmiBlitz3.ab3@22472> JMP _FreePooled(A6)
00031F26 <AmiBlitz3.ab3@22475> iflineat:   Ds.l 1
00031F28 <AmiBlitz3.ab3@22479>   MOVEQ.l #$00,D2
00031F2E <AmiBlitz3.ab3@22480>   TST.b fast
00031F32 <AmiBlitz3.ab3@22481>   BEQ 'l1
00031F3A <AmiBlitz3.ab3@22482>   MOVE.b #1,nostringopt
00031F42 <AmiBlitz3.ab3@22483>   MOVE.b #1,iniffcommand
00031F44 <AmiBlitz3.ab3@22487>   MOVEQ.l #$00,D1
00031F46 <AmiBlitz3.ab3@22490>   MOVE.w D1,-(A7)
00031F4C <AmiBlitz3.ab3@22491>   MOVE.l destpointer,-(A7)
00031F4E <AmiBlitz3.ab3@22492>   MOVE.w D2,-(A7)
00031F58 <AmiBlitz3.ab3@22493>   MOVE.l linenumat,iflineat
00031F5A <AmiBlitz3.ab3@22494>   MOVEQ.l #$00,D2
00031F64 <AmiBlitz3.ab3@22495>   MOVE.b optistring,optistring2
00031F6C <AmiBlitz3.ab3@22496>   MOVE.b #1,optistring
00031F70 <AmiBlitz3.ab3@22497>   BSR.w bakevalu
00031F7A <AmiBlitz3.ab3@22498>   MOVE.b optistring2,optistring
00031F7E <AmiBlitz3.ab3@22499>   CMP.w #$5,D2
00031F82 <AmiBlitz3.ab3@22500>    BEQ.w JL_0_D09C
00031F86 <AmiBlitz3.ab3@22501>   MOVE.w thetst1(PC),D1
00031F8A <AmiBlitz3.ab3@22502>   CMP.w #$1,D2
00031F8E <AmiBlitz3.ab3@22503>    BEQ.w writebranchcode
00031F92 <AmiBlitz3.ab3@22504>   MOVE.w thetst2(PC),D1
00031F96 <AmiBlitz3.ab3@22505>   CMP.w #$2,D2
00031F9A <AmiBlitz3.ab3@22506>    BEQ.w writebranchcode
00031F9E <AmiBlitz3.ab3@22507>   MOVE.w thetst4(PC),D1
00031FA2 <AmiBlitz3.ab3@22508>   CMP.w #$7,D2
00031FA6 <AmiBlitz3.ab3@22509>    BEQ.w writebranchcode
00031FAA <AmiBlitz3.ab3@22510>   MOVE.w thetst3(PC),D1
00031FAE <AmiBlitz3.ab3@22511> BRA.w writebranchcode
00031FB4 <AmiBlitz3.ab3@22514>   TST.b fpu
00031FB8 <AmiBlitz3.ab3@22515>   BEQ 'dofpu
00031FBE <AmiBlitz3.ab3@22516>   MOVE.l #$f200003a,d1
00031FC2 <AmiBlitz3.ab3@22517>   BSR writelong
00031FC6 <AmiBlitz3.ab3@22518>   MOVE.w #$f2c1,d1
00031FCA <AmiBlitz3.ab3@22519>   BSR writeword
00031FCE <AmiBlitz3.ab3@22520>   BSR writelong
00031FD0 <AmiBlitz3.ab3@22521>   ADDQ.l #2,a7
00031FD4 <AmiBlitz3.ab3@22522> BRA.w br2
00031FD8 <AmiBlitz3.ab3@22525>    MOVE.w #$C900,D1
00031FDC <AmiBlitz3.ab3@22526>    BSR.w Atokejsr
00031FE0 <AmiBlitz3.ab3@22527>   MOVE.l thetst5(PC),D1
00031FE4 <AmiBlitz3.ab3@22528>    BSR.w writelong
00031FE8 <AmiBlitz3.ab3@22529> BRA.w JL_0_D0B4
00031FEE <AmiBlitz3.ab3@22533>          CLR.b iniffcommand
00031FF4 <AmiBlitz3.ab3@22534>          TST.b fast                                        ;branchcode
00031FF8 <AmiBlitz3.ab3@22535>          BEQ b6
00031FFE <AmiBlitz3.ab3@22536>          TST.b fpu
00032002 <AmiBlitz3.ab3@22537>          BEQ 'nofpu
00032008 <AmiBlitz3.ab3@22541>           MOVE.l destpointer,a0
0003200E <AmiBlitz3.ab3@22542>          SUB.l load_var_addr,a0
00032014 <AmiBlitz3.ab3@22543>          CMP.l #4,a0
00032018 <AmiBlitz3.ab3@22544>          BEQ 'nofpu
00032020 <AmiBlitz3.ab3@22545>          CMP.l #$f2400014,-4(a4)                           ;<
00032024 <AmiBlitz3.ab3@22546>          BNE 'nolt
0003202A <AmiBlitz3.ab3@22547>          SUBQ.l #2,destpointer
00032030 <AmiBlitz3.ab3@22548>          MOVE.w #$f293,-4(a4)                              ;
00032034 <AmiBlitz3.ab3@22549> BRA 'brf
0003203C <AmiBlitz3.ab3@22552>   CMP.l #$f2400015,-4(a4)                                  ;<=
00032040 <AmiBlitz3.ab3@22553>          BNE 'nole
00032046 <AmiBlitz3.ab3@22554>          SUBQ.l #2,destpointer
0003204C <AmiBlitz3.ab3@22555>          MOVE.w #$f292,-4(a4)
00032050 <AmiBlitz3.ab3@22556> BRA 'brf
00032058 <AmiBlitz3.ab3@22559>   CMP.l #$f2400013,-4(a4)                                  ;=>
0003205C <AmiBlitz3.ab3@22560>          BNE 'noge
00032062 <AmiBlitz3.ab3@22561>          SUBQ.l #2,destpointer
00032068 <AmiBlitz3.ab3@22562>          MOVE.w #$f294,-4(a4)
0003206C <AmiBlitz3.ab3@22563> BRA 'brf
00032074 <AmiBlitz3.ab3@22566>   CMP.l #$f2400012,-4(a4)                                  ;>
00032078 <AmiBlitz3.ab3@22567>          BNE 'nogt
0003207E <AmiBlitz3.ab3@22568>          SUBQ.l #2,destpointer
00032084 <AmiBlitz3.ab3@22569>          MOVE.w #$f295,-4(a4)
00032088 <AmiBlitz3.ab3@22570> BRA 'brf
00032090 <AmiBlitz3.ab3@22573>   CMP.l #$f2400001,-4(a4)                                  ;=
00032094 <AmiBlitz3.ab3@22574>          BNE 'noeq
0003209A <AmiBlitz3.ab3@22575>          SUBQ.l #2,destpointer
000320A0 <AmiBlitz3.ab3@22576>          MOVE.w #$f28e,-4(a4)
000320A4 <AmiBlitz3.ab3@22577> BRA 'brf
000320AC <AmiBlitz3.ab3@22580>   CMP.l #$f240000e,-4(a4)                                  ;<>
000320B0 <AmiBlitz3.ab3@22581>          BNE 'none
000320B6 <AmiBlitz3.ab3@22582>          SUBQ.l #2,destpointer
000320BC <AmiBlitz3.ab3@22583>          MOVE.w #$f281,-4(a4)
000320BE <AmiBlitz3.ab3@22586>   ADDQ.l #2,a7
000320C4 <AmiBlitz3.ab3@22588>     TST.b fast
000320C8 <AmiBlitz3.ab3@22589>     BEQ 'l1
000320CE <AmiBlitz3.ab3@22590>     OR.b #$40,-3(a4)
000320D2 <AmiBlitz3.ab3@22591>     BSR writeword
000320D6 <AmiBlitz3.ab3@22595>  BSR writeword
000320DA <AmiBlitz3.ab3@22596> BRA.s br2
000320E0 <AmiBlitz3.ab3@22600>   MOVE.l destpointer,a0
000320E6 <AmiBlitz3.ab3@22601>          SUB.l load_var_addr,a0
000320EC <AmiBlitz3.ab3@22602>          CMP.l #4,a0
000320F0 <AmiBlitz3.ab3@22603>          BEQ JL_0_D0B4
000320F6 <AmiBlitz3.ab3@22604>          CMP.w #$4eb9,-6(a4)
000320FA <AmiBlitz3.ab3@22605>          BEQ b6
00032100 <AmiBlitz3.ab3@22606>          CMP.w #$5ec0,-2(a4)                               ;>
00032104 <AmiBlitz3.ab3@22607>      BNE.s 'lb1
0003210A <AmiBlitz3.ab3@22608>          MOVE.w #$6f00,-2(a4)                              ;ble
0003210E <AmiBlitz3.ab3@22609> BRA.s br
00032114 <AmiBlitz3.ab3@22612>  CMP.w #$5dc0,-2(a4)                                       ;<
00032118 <AmiBlitz3.ab3@22613>   BNE.s 'lb2
0003211E <AmiBlitz3.ab3@22614>          MOVE.w #$6c00,-2(a4)                              ;bge
00032122 <AmiBlitz3.ab3@22615> BRA.s br
00032128 <AmiBlitz3.ab3@22618>   CMP.w #$57c0,-2(a4)                                      ;=
0003212C <AmiBlitz3.ab3@22619>   BNE.s 'lb3
00032132 <AmiBlitz3.ab3@22620>          MOVE.w #$6600,-2(a4)                              ;bne
00032136 <AmiBlitz3.ab3@22621> BRA.s br
0003213C <AmiBlitz3.ab3@22624>   CMP.w #$56c0,-2(a4)                                      ;<>
00032140 <AmiBlitz3.ab3@22625>   BNE.s 'lb4
00032146 <AmiBlitz3.ab3@22626>          MOVE.w #$6700,-2(a4)                              ;beq
0003214A <AmiBlitz3.ab3@22627> BRA.s br
00032150 <AmiBlitz3.ab3@22630>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032154 <AmiBlitz3.ab3@22631>   BNE.s 'lb5
0003215A <AmiBlitz3.ab3@22632>          MOVE.w #$6d00,-2(a4)                              ;blt
0003215E <AmiBlitz3.ab3@22633> BRA.s br
00032164 <AmiBlitz3.ab3@22636>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032168 <AmiBlitz3.ab3@22637>         BNE.s b6
0003216E <AmiBlitz3.ab3@22638>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032170 <AmiBlitz3.ab3@22641>   TST.w (a7)+
00032176 <AmiBlitz3.ab3@22643>         TST.b fast
0003217A <AmiBlitz3.ab3@22644>         BEQ 'l1
00032180 <AmiBlitz3.ab3@22645>         OR.b #$ff,-1(a4)                                   ;long branches
00032184 <AmiBlitz3.ab3@22646>         BSR writeword
00032188 <AmiBlitz3.ab3@22650>         BSR writeword
0003218C <AmiBlitz3.ab3@22651> BRA.s br2
00032190 <AmiBlitz3.ab3@22654>   BSR.w writeword
00032194 <AmiBlitz3.ab3@22657>   MOVE.l posbr(PC),D1
00032196 <AmiBlitz3.ab3@22658>   TST.w (A7)+
0003219A <AmiBlitz3.ab3@22659>    BEQ.w JL_0_D0C2
0003219E <AmiBlitz3.ab3@22660>   MOVE.l negbr(PC),D1
000321A4 <AmiBlitz3.ab3@22663>   TST.b fast
000321A8 <AmiBlitz3.ab3@22664>            BEQ 'l1
000321AE <AmiBlitz3.ab3@22665>            OR.l #$00ff0000,d1
000321B2 <AmiBlitz3.ab3@22666>            BSR writelong
000321B6 <AmiBlitz3.ab3@22667>            BSR writeword
000321BA <AmiBlitz3.ab3@22668> BRA br2
000321BE <AmiBlitz3.ab3@22671>   BSR.w writelong
000321C0 <AmiBlitz3.ab3@22674>  MOVEQ.l #$0E,D0
000321C2 <AmiBlitz3.ab3@22675>   MOVEQ.l #$01,D1
000321C8 <AmiBlitz3.ab3@22676>   MOVEA.l _execbase,A6
000321CE <AmiBlitz3.ab3@22678>   MOVE.l mempool,a0
000321D2 <AmiBlitz3.ab3@22679>   JSR _AllocPooled(a6)
000321D4 <AmiBlitz3.ab3@22680>   MOVEA.l D0,A0
000321DA <AmiBlitz3.ab3@22681>   MOVE.l firstiff,(A0)
000321E0 <AmiBlitz3.ab3@22682>   MOVE.l A0,firstiff
000321E4 <AmiBlitz3.ab3@22683>   MOVE.l (A7)+,$4(A0)
000321EC <AmiBlitz3.ab3@22684>   MOVE.l destpointer,$8(A0)
000321F0 <AmiBlitz3.ab3@22685>   MOVE.w (A7)+,$C(A0)
000321F6 <AmiBlitz3.ab3@22686>    JSR reget
000321FA <AmiBlitz3.ab3@22687>    BEQ.w JL_0_D10C
00032200 <AmiBlitz3.ab3@22688>   BSET #$7,$C(A0)
0003220A <AmiBlitz3.ab3@22692>   MOVE.w oldqflag,instringon
00032210 <AmiBlitz3.ab3@22693>   MOVEA.l lastsourcepos,A5
00032218 <AmiBlitz3.ab3@22694>   MOVE.w #$003A,lastchar
0003221A <AmiBlitz3.ab3@22697> RTS
0003221E <AmiBlitz3.ab3@22701>   CMP.w #$1,D0
00032222 <AmiBlitz3.ab3@22702>    BLT.w JL_0_D128
00032226 <AmiBlitz3.ab3@22703>   CMP.w #$0,D0
0003222A <AmiBlitz3.ab3@22704>    BGT.w JL_0_D128
0003222C <AmiBlitz3.ab3@22705>   ADD.w D0,D0
0003222E <AmiBlitz3.ab3@22706>   ADD.w D0,D0
00032232 <AmiBlitz3.ab3@22707>   MOVEA.l JL_0_D128(PC,D0.W),A0
00032234 <AmiBlitz3.ab3@22710> JMP (A0)
00032238 <AmiBlitz3.ab3@22713> BRA.w JL_0_D128
0003223C <AmiBlitz3.ab3@22717>   CMP.w #$1,D0
00032240 <AmiBlitz3.ab3@22718>    BLT.w JL_0_D146
00032244 <AmiBlitz3.ab3@22719>   CMP.w #$0,D0
00032248 <AmiBlitz3.ab3@22720>    BGT.w JL_0_D146
0003224A <AmiBlitz3.ab3@22721>   ADD.w D0,D0
0003224C <AmiBlitz3.ab3@22722>   ADD.w D0,D0
00032250 <AmiBlitz3.ab3@22723>   MOVEA.l JL_0_D146(PC,D0.W),A0
00032252 <AmiBlitz3.ab3@22726>   JSR (A0)
00032256 <AmiBlitz3.ab3@22729> BRA.w JL_0_D146
0003225A <AmiBlitz3.ab3@22733>   CMP.w #$1,D0
0003225E <AmiBlitz3.ab3@22734>    BLT.w JL_0_D168
00032262 <AmiBlitz3.ab3@22735>   CMP.w #$0,D0
00032266 <AmiBlitz3.ab3@22736>    BGT.w JL_0_D168
00032268 <AmiBlitz3.ab3@22737>   ADD.w D0,D0
0003226A <AmiBlitz3.ab3@22738>   ADD.w D0,D0
0003226E <AmiBlitz3.ab3@22739>   MOVEA.l JL_0_D168(PC,D0.W),A0
00032272 <AmiBlitz3.ab3@22742>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032274 <AmiBlitz3.ab3@22745>    JSR (A0)
00032278 <AmiBlitz3.ab3@22748> BRA.w JL_0_D168
0003227A <AmiBlitz3.ab3@22751> labcnt:   Ds.w 1
0003227C <AmiBlitz3.ab3@22758>   MOVEQ.l #$02,D2
00032280 <AmiBlitz3.ab3@22759>    BSR.w bakeval
00032284 <AmiBlitz3.ab3@22760>   LEA JL_0_D10E(PC),A0
00032288 <AmiBlitz3.ab3@22761>   LEA JL_0_D12C(PC),A1
0003228C <AmiBlitz3.ab3@22762>   MOVE.w #$001A,D1
00032290 <AmiBlitz3.ab3@22763>   CMP.w #-$7FFB,D0
00032294 <AmiBlitz3.ab3@22764>    BEQ.w JL_0_D1B6
00032298 <AmiBlitz3.ab3@22765>   CMP.w #-$7FFA,D0
0003229C <AmiBlitz3.ab3@22766>    BNE.w JUMP_syntaxerr
000322A0 <AmiBlitz3.ab3@22767>   LEA JL_0_D12C(PC),A0
000322A4 <AmiBlitz3.ab3@22768>   LEA JL_0_D14A(PC),A1
000322A8 <AmiBlitz3.ab3@22769>   MOVE.w #$001A,D1
000322AE <AmiBlitz3.ab3@22770>   TST.b debugmode
000322B2 <AmiBlitz3.ab3@22771>    BEQ.b JL_0_D1B6
000322B8 <AmiBlitz3.ab3@22772>    JSR chkstak
000322BC <AmiBlitz3.ab3@22773>   LEA JL_0_D14A(PC),A0
000322C0 <AmiBlitz3.ab3@22774>   LEA labcnt(PC),A1
000322C4 <AmiBlitz3.ab3@22775>   MOVE.w #$001E,D1
000322C6 <AmiBlitz3.ab3@22778>   MOVE.w D1,-(A7)
000322CC <AmiBlitz3.ab3@22779>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
000322D0 <AmiBlitz3.ab3@22780>    BSR.w pokecode
000322D6 <AmiBlitz3.ab3@22781>   CLR.w labcnt
000322DC <AmiBlitz3.ab3@22786>    JSR get1bytemain
000322E2 <AmiBlitz3.ab3@22787>   SUBQ.l #2,destpointer                                    ;for makealab!
000322E6 <AmiBlitz3.ab3@22788>    BSR.w JL_0_AE22
000322EC <AmiBlitz3.ab3@22789>   ADDQ.l #2,destpointer
000322F2 <AmiBlitz3.ab3@22790>    JSR addoff
000322F6 <AmiBlitz3.ab3@22791>   MOVE.l $8(A2),D1
000322FA <AmiBlitz3.ab3@22792>    BSR.w writelong
00032300 <AmiBlitz3.ab3@22793>   ADDQ.w #1,labcnt
00032306 <AmiBlitz3.ab3@22794>    JSR reget
0003230A <AmiBlitz3.ab3@22795>   CMP.w #$2C,D0
0003230E <AmiBlitz3.ab3@22796>    BEQ.w JL_0_D1C8
00032310 <AmiBlitz3.ab3@22797>   MOVEA.l (A7)+,A0
00032312 <AmiBlitz3.ab3@22798>   MOVE.w (A7)+,D2
00032318 <AmiBlitz3.ab3@22799>   MOVE.w dontwrite,D1
0003231C <AmiBlitz3.ab3@22800>    BNE.w JL_0_D21A
00032320 <AmiBlitz3.ab3@22801>   MOVE.w labcnt(PC),D1
00032324 <AmiBlitz3.ab3@22802>   MOVE.w D1,$A(A0)
00032326 <AmiBlitz3.ab3@22803>   ADD.w D1,D1
00032328 <AmiBlitz3.ab3@22804>   ADD.w D1,D1
0003232A <AmiBlitz3.ab3@22805>   ADDQ.w #2,D1
0003232E <AmiBlitz3.ab3@22806>   MOVE.w D1,$2(A0,D2.W)
00032330 <AmiBlitz3.ab3@22809> RTS
00032336 <AmiBlitz3.ab3@22813>   TST.b debugmode
0003233A <AmiBlitz3.ab3@22814>    BEQ.w JL_0_D236
00032340 <AmiBlitz3.ab3@22815>    JSR chkstak
00032346 <AmiBlitz3.ab3@22816>   MOVE.l AL_0_D162,D1
0003234A <AmiBlitz3.ab3@22817>    BSR.w writelong
00032350 <AmiBlitz3.ab3@22819>   MOVE.w gosubcode,D1
00032354 <AmiBlitz3.ab3@22820> BRA.w JL_0_D246
0003235A <AmiBlitz3.ab3@22824>   MOVE.w gotocode,D1
0003235C <AmiBlitz3.ab3@22827>   MOVE.w D1,-(A7)
00032360 <AmiBlitz3.ab3@22828>    BSR.w JL_0_AE22
00032362 <AmiBlitz3.ab3@22829>   MOVE.w (A7)+,D1
00032366 <AmiBlitz3.ab3@22830>    BSR.w writeword
0003236C <AmiBlitz3.ab3@22831>    JSR addoff
00032370 <AmiBlitz3.ab3@22832>   MOVE.l $8(A2),D1
00032374 <AmiBlitz3.ab3@22833> BRA.w writelong
0003237A <AmiBlitz3.ab3@22837>   MOVE.w proceduremode,D1
0003237E <AmiBlitz3.ab3@22838>    BEQ.w JUMP_badpenderr
00032382 <AmiBlitz3.ab3@22839>   MOVE.w #$4EF9,D1
00032386 <AmiBlitz3.ab3@22840>    BSR.w writeword
0003238C <AmiBlitz3.ab3@22841>    JSR addoff
00032392 <AmiBlitz3.ab3@22842>   MOVEA.l _execbase,A6
00032394 <AmiBlitz3.ab3@22843>   MOVEQ.l #$08,D0
00032396 <AmiBlitz3.ab3@22844>   MOVEQ.l #$01,D1
0003239C <AmiBlitz3.ab3@22846>   MOVE.l mempool,a0
000323A0 <AmiBlitz3.ab3@22847>   JSR _AllocPooled(a6)
000323A2 <AmiBlitz3.ab3@22848>   MOVEA.l D0,A0
000323A8 <AmiBlitz3.ab3@22849>   MOVE.l firstpend,(A0)
000323AE <AmiBlitz3.ab3@22850>   MOVE.l A0,firstpend
000323B6 <AmiBlitz3.ab3@22851>   MOVE.l destpointer,$4(A0)
000323BA <AmiBlitz3.ab3@22852> BRA.w writelong
000323BE <AmiBlitz3.ab3@22856>   BSR.w do_AsmExit
000323C4 <AmiBlitz3.ab3@22857> JMP get1bytemain
000323CC <AmiBlitz3.ab3@22861>   MOVE.b #1,nostringopt
000323D0 <AmiBlitz3.ab3@22862>   MOVEM.l a0/a1/d1,-(a7)
000323D6 <AmiBlitz3.ab3@22863>   MOVEA.l currentfunction,A0
000323DC <AmiBlitz3.ab3@22864>     CMP.l #0,a0
000323E0 <AmiBlitz3.ab3@22865>     BNE 'l1
000323E6 <AmiBlitz3.ab3@22866>     JMP errorasmexit
000323E8 <AmiBlitz3.ab3@22867> 'l1 MOVEQ.l #$00,D2
000323EC <AmiBlitz3.ab3@22868>   MOVE.b $5(A0),D2
000323F0 <AmiBlitz3.ab3@22869>   BSR.w eval
000323F6 <AmiBlitz3.ab3@22871>   MOVEA.l currentfunction,A0
000323FA <AmiBlitz3.ab3@22872>   MOVE.l funcstruct_returntype(a0),a0
00032400 <AmiBlitz3.ab3@22873>   CMP.l #0,a0
00032404 <AmiBlitz3.ab3@22874>   BEQ 'isstatement
0003240C <AmiBlitz3.ab3@22875>   CMP.l #$100,4(a0)
00032410 <AmiBlitz3.ab3@22876>   BLT.w 'isvar
00032412 <AmiBlitz3.ab3@22877>   MOVE.l a2,a1
00032418 <AmiBlitz3.ab3@22878>   TST.l typetocast
0003241C <AmiBlitz3.ab3@22879>   BEQ 'nocast
00032422 <AmiBlitz3.ab3@22880>   MOVE.l typetocast,a1
00032424 <AmiBlitz3.ab3@22881> 'nocast  CMP.l a0,a1
00032428 <AmiBlitz3.ab3@22882>   BEQ 'ok
0003242E <AmiBlitz3.ab3@22883>   CLR.l typetocast
00032434 <AmiBlitz3.ab3@22884>   MOVE.l lasttoken,d1
00032438 <AmiBlitz3.ab3@22885>   CMP.w #$b581,d1                   ; ok, when token for null
0003243C <AmiBlitz3.ab3@22886>   BEQ 'isnull
00032442 <AmiBlitz3.ab3@22887> 'error  JMP errorconvertreturntype
00032446 <AmiBlitz3.ab3@22894>   MOVEM.l (a7)+,a0/a1/d1
0003244A <AmiBlitz3.ab3@22895> BRA.w do_AsmExit
00032450 <AmiBlitz3.ab3@22897> error_convert_types2 JMP error_convert_types
00032456 <AmiBlitz3.ab3@22910>   TST.b debugmode
0003245A <AmiBlitz3.ab3@22911>    BEQ.w JL_0_D2CA
0003245E <AmiBlitz3.ab3@22912>   MOVE.w #$C305,D1
00032462 <AmiBlitz3.ab3@22913> BRA.w Atokejsr
00032466 <AmiBlitz3.ab3@22916>   MOVE.w #$4E75,D1
0003246A <AmiBlitz3.ab3@22917> BRA.w writeword
0003246E <AmiBlitz3.ab3@22920> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032472 <AmiBlitz3.ab3@22921> proclocals:  Ds.l 1                                        ;for debugga!
00032474 <AmiBlitz3.ab3@22922> procnum:     Ds.w 1
00032476 <AmiBlitz3.ab3@22923> procnum2:    Ds.w 1
0003247A <AmiBlitz3.ab3@22924> prolineat:   Ds.l 1
00032480 <AmiBlitz3.ab3@22928>    TST.w proceduremode
00032484 <AmiBlitz3.ab3@22929>    BGT JUMP_sreterr
00032488 <AmiBlitz3.ab3@22930>    CMP.w #-$7FF9,D0
0003248C <AmiBlitz3.ab3@22931>    BEQ.w JL_0_D29C
0003248E <AmiBlitz3.ab3@22932>    MOVEQ.l #-$01,D1
00032492 <AmiBlitz3.ab3@22933> BRA.w do_function2
00032498 <AmiBlitz3.ab3@22936> JMP sreterr
0003249E <AmiBlitz3.ab3@22940>   CLR.b skipfunc
000324A4 <AmiBlitz3.ab3@22941>   TST.l unusedfunc
000324A8 <AmiBlitz3.ab3@22942>   BEQ 'ex
000324AC <AmiBlitz3.ab3@22943>   MOVEM.l d0-d7/a0-a6,-(a7)
000324B2 <AmiBlitz3.ab3@22944>   MOVE.l unusedfunc,d1
000324B8 <AmiBlitz3.ab3@22945>   LEA ptr_parameterstore,a5
000324BA <AmiBlitz3.ab3@22948>   MOVE.l d1,a0
000324BE <AmiBlitz3.ab3@22949>   LEA 12(a0),a2
000324C0 <AmiBlitz3.ab3@22950>   MOVE.l a5,a1
000324C2 <AmiBlitz3.ab3@22952>   CMPM.b (a1)+,(a2)+
000324C6 <AmiBlitz3.ab3@22953>   BNE 'neq
000324C8 <AmiBlitz3.ab3@22954>   TST.b (a2)
000324CC <AmiBlitz3.ab3@22955>   BNE 'ch
000324CE <AmiBlitz3.ab3@22956>   TST.b (a1)
000324D2 <AmiBlitz3.ab3@22957>   BNE 'neq
000324DA <AmiBlitz3.ab3@22958>   MOVE.b #1,skipfunc
000324DE <AmiBlitz3.ab3@22959> BRA 'out
000324E0 <AmiBlitz3.ab3@22962>   MOVE.l (a0),d1
000324E4 <AmiBlitz3.ab3@22963>   BNE 'ag
000324E8 <AmiBlitz3.ab3@22966>   MOVEM.l (a7)+,d0-d7/a0-a6
000324EA <AmiBlitz3.ab3@22969> RTS
000324F0 <AmiBlitz3.ab3@22973> JMP dupprocerr
000324F6 <AmiBlitz3.ab3@22976> JMP illprocperr
000324FE <AmiBlitz3.ab3@22983>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00032502 <AmiBlitz3.ab3@22984>    BEQ JUMP_sreterr
00032506 <AmiBlitz3.ab3@22985>   CMP.w #-$7FF9,D0
0003250A <AmiBlitz3.ab3@22986>    BEQ.w do_function_return
00032514 <AmiBlitz3.ab3@22989>   MOVE.w oldqflag,instringon
0003251A <AmiBlitz3.ab3@22990>   MOVEA.l lastsourcepos,A5
00032520 <AmiBlitz3.ab3@22991>   JSR getfunctionreturntype
00032526 <AmiBlitz3.ab3@22992>   JSR get1bytemain
0003252C <AmiBlitz3.ab3@22995>   TST.b declare
00032530 <AmiBlitz3.ab3@22996>   BEQ 'l1
00032538 <AmiBlitz3.ab3@22997>   MOVE.b #1,nowdeclare
0003253E <AmiBlitz3.ab3@23000>   JSR errchx                                           ;writejumpoverfunction
00032544 <AmiBlitz3.ab3@23003>   CLR.b fastfunc
0003254E <AmiBlitz3.ab3@23004>   MOVE.l firstiff,firstiffstore
00032556 <AmiBlitz3.ab3@23005>   CMP.l #"FAST",-1(a5)
0003255A <AmiBlitz3.ab3@23006>   BNE 'nofast
00032560 <AmiBlitz3.ab3@23007>   CMP.b #" ",3(a5)
00032564 <AmiBlitz3.ab3@23008>   BNE 'nofast
00032566 <AmiBlitz3.ab3@23009>   ADDQ.l #3,a5
0003256A <AmiBlitz3.ab3@23012>     CMP.b #" ",(a5)
0003256E <AmiBlitz3.ab3@23013>      BNE 'x1
00032570 <AmiBlitz3.ab3@23014>     ADDQ #1,a5
00032574 <AmiBlitz3.ab3@23015> BRA 'x2
0003257A <AmiBlitz3.ab3@23018>   MOVE.l a5,lastsourcepos
00032582 <AmiBlitz3.ab3@23019>   MOVE.b #1,fastfunc
0003258A <AmiBlitz3.ab3@23022>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
0003258E <AmiBlitz3.ab3@23023> BRA 'noopt
00032594 <AmiBlitz3.ab3@23025>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032598 <AmiBlitz3.ab3@23026>   BNE 'noopt
0003259A <AmiBlitz3.ab3@23027>   ADDQ.l #4,a5
0003259E <AmiBlitz3.ab3@23030>     CMP.b #" ",(a5)
000325A2 <AmiBlitz3.ab3@23031>      BNE 'x1b
000325A4 <AmiBlitz3.ab3@23032>     ADDQ #1,a5
000325A8 <AmiBlitz3.ab3@23033> BRA 'x2b
000325AE <AmiBlitz3.ab3@23036>   MOVE.l a5,lastsourcepos
000325B4 <AmiBlitz3.ab3@23038>   JSR makename2
000325B8 <AmiBlitz3.ab3@23039> BRA 'l1
000325BE <AmiBlitz3.ab3@23043>   JSR makename2
000325C4 <AmiBlitz3.ab3@23044>   JSR checkused
000325CA <AmiBlitz3.ab3@23045>   TST.b skipfunc
000325CE <AmiBlitz3.ab3@23046>    BEQ 'l1
000325D4 <AmiBlitz3.ab3@23047>   JSR skipme
000325DA <AmiBlitz3.ab3@23048>   CLR.b fastfunc
000325DC <AmiBlitz3.ab3@23049> RTS
000325E6 <AmiBlitz3.ab3@23052>   MOVE.l linenumat,prolineat
000325EC <AmiBlitz3.ab3@23053>   ADDQ.w #1,procnum2
000325F4 <AmiBlitz3.ab3@23054>   MOVE.w procnum2(PC),procnum
000325FA <AmiBlitz3.ab3@23055>   MOVE.w D1,proceduremode
00032600 <AmiBlitz3.ab3@23056>   CLR.w locvaroff
00032604 <AmiBlitz3.ab3@23057>   CMP.w #$7B,D0
00032608 <AmiBlitz3.ab3@23058>    BNE.w JUMP_syntaxerr
00032610 <AmiBlitz3.ab3@23059>    MOVE.b #1,infunctioncode
00032616 <AmiBlitz3.ab3@23060>   MOVEA.l tempvm,A0
0003261E <AmiBlitz3.ab3@23061>   MOVE.w $C(A0),memlibstat
00032624 <AmiBlitz3.ab3@23062>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032628 <AmiBlitz3.ab3@23063>   MOVE.w #$4EF9,D1
0003262C <AmiBlitz3.ab3@23064>    BSR.w writeword
00032632 <AmiBlitz3.ab3@23065>    JSR addoff
00032636 <AmiBlitz3.ab3@23066>    BSR.w writelong
0003263C <AmiBlitz3.ab3@23067>    JSR findproc                                          ;findproc function
00032640 <AmiBlitz3.ab3@23068>    BEQ.w JUMP_dupprocerr
00032646 <AmiBlitz3.ab3@23069>    JSR addlabel
0003264C <AmiBlitz3.ab3@23070>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032652 <AmiBlitz3.ab3@23071>    MOVE.b #0,isfunc(a2)
0003265A <AmiBlitz3.ab3@23072>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032662 <AmiBlitz3.ab3@23073>   MOVE.l destpointer,$E(A2)
00032668 <AmiBlitz3.ab3@23074>   MOVE.l A2,currentfunction
0003266E <AmiBlitz3.ab3@23075>   LEA nops8,A0
00032674 <AmiBlitz3.ab3@23076>   LEA dataget,A1
00032678 <AmiBlitz3.ab3@23077>    BSR.w pokecode2
0003267E <AmiBlitz3.ab3@23078>   TST.b debugmode
00032682 <AmiBlitz3.ab3@23079>    BEQ.b JL_0_D3AA
00032684 <AmiBlitz3.ab3@23080>   MOVEQ.l #$04,D1
0003268A <AmiBlitz3.ab3@23081>    JSR writetrap
00032694 <AmiBlitz3.ab3@23082>   MOVE.l destpointer,proclocals
00032698 <AmiBlitz3.ab3@23083>    BSR.w writelong
0003269C <AmiBlitz3.ab3@23084>    BSR.w writelong
000326A0 <AmiBlitz3.ab3@23087>    LEA $16(A2),A4
000326A8 <AmiBlitz3.ab3@23088>   MOVE.b proceduremode+1,$5(A2)
000326AA <AmiBlitz3.ab3@23089>   MOVEQ.l #$00,D6
000326AC <AmiBlitz3.ab3@23090>   MOVEQ.l #$00,D5
000326B2 <AmiBlitz3.ab3@23091>    JSR get1bytemain
000326B6 <AmiBlitz3.ab3@23092>   CMP.w #$7D,D0
000326BA <AmiBlitz3.ab3@23093>    BEQ.w JL_0_D466
000326BE <AmiBlitz3.ab3@23096>    CMP.b #"@",d0
000326C2 <AmiBlitz3.ab3@23097>    BNE 'l2
000326C4 <AmiBlitz3.ab3@23098>    MOVE.l a0,-(a7)
000326CA <AmiBlitz3.ab3@23099>    MOVE.l currentfunction,a0
000326D0 <AmiBlitz3.ab3@23100>    CMP.b #31,$20(a0)                                       ;increase if morepars
000326D4 <AmiBlitz3.ab3@23101>    BNE 'l1
000326D8 <AmiBlitz3.ab3@23102>    MOVE.b d6,$20(a0)                                       ;increase if morepar
000326DE <AmiBlitz3.ab3@23105>    JSR get1bytemain
000326E0 <AmiBlitz3.ab3@23106>    MOVE.l (a7)+,a0
000326E4 <AmiBlitz3.ab3@23109>    BSR.w getparameter
000326E8 <AmiBlitz3.ab3@23110>    BSR.w JL_0_8E3C
000326F0 <AmiBlitz3.ab3@23111>   CMPI.l #$7,$4(A2)
000326F4 <AmiBlitz3.ab3@23112>    BNE.w JL_0_D3F6
000326FA <AmiBlitz3.ab3@23113>   LEA stbuff,A0
000326FC <AmiBlitz3.ab3@23114>   MOVE.w D5,D1
000326FE <AmiBlitz3.ab3@23115>   LSL.w #2,D1
00032702 <AmiBlitz3.ab3@23116>   MOVE.w D6,$0(A0,D1.W)
00032708 <AmiBlitz3.ab3@23117>   MOVE.w $4(A3),$2(A0,D1.W)
0003270A <AmiBlitz3.ab3@23118>   ADDQ.w #1,D5
0003270C <AmiBlitz3.ab3@23119>   MOVEQ.l #$07,D2
00032710 <AmiBlitz3.ab3@23120> BRA.w JL_0_D442
00032716 <AmiBlitz3.ab3@23123> JMP toovarerr
0003271A <AmiBlitz3.ab3@23126>   MOVE.w #$2940,D1
0003271C <AmiBlitz3.ab3@23127>   MOVEQ.l #$03,D2
00032724 <AmiBlitz3.ab3@23128>   BTST #$0,flagmask+1
00032728 <AmiBlitz3.ab3@23129>    BNE.w JL_0_D430
00032730 <AmiBlitz3.ab3@23130>   CMPI.l #$100,$4(A2)
00032734 <AmiBlitz3.ab3@23131>    BCC.w JUMP_illprocperr
00032738 <AmiBlitz3.ab3@23132>   MOVE.w $6(A2),D2
0003273C <AmiBlitz3.ab3@23133>   CMP.w #$2,D2
00032740 <AmiBlitz3.ab3@23134>    BHI.w JL_0_D430
00032744 <AmiBlitz3.ab3@23135>    BEQ.w JL_0_D42C
00032748 <AmiBlitz3.ab3@23136>   EORI.w #$3000,D1
0003274C <AmiBlitz3.ab3@23137> BRA.w JL_0_D430
00032752 <AmiBlitz3.ab3@23140> JMP more6pard
00032756 <AmiBlitz3.ab3@23143>   ORI.w #$1000,D1
00032758 <AmiBlitz3.ab3@23146>   OR.w D6,D1
0003275E <AmiBlitz3.ab3@23147>   TST.b fpu
00032762 <AmiBlitz3.ab3@23148>   BEQ 'nofpu
00032766 <AmiBlitz3.ab3@23149>   CMP.b #5,d2
0003276A <AmiBlitz3.ab3@23150>   BNE 'nofpu
0003276E <AmiBlitz3.ab3@23151>   CMP.w #6,d6
00032772 <AmiBlitz3.ab3@23152>   BLT 'l10a
00032778 <AmiBlitz3.ab3@23153>   CMP.l #newtype_double,a2
0003277C <AmiBlitz3.ab3@23154>   BEQ JUMP_more6pard
00032780 <AmiBlitz3.ab3@23155> BRA 'nofpu
00032786 <AmiBlitz3.ab3@23158>   MOVE.l #$f22c6400,d1
0003278A <AmiBlitz3.ab3@23159>   MOVEM.l d0/a4,-(a7)
0003278C <AmiBlitz3.ab3@23160>   MOVE.l d6,d0
0003278E <AmiBlitz3.ab3@23161>   ASL.l #7,d0
00032790 <AmiBlitz3.ab3@23162>   OR.w d0,d1
00032796 <AmiBlitz3.ab3@23163>   CMP.l #newtype_double,a2
0003279A <AmiBlitz3.ab3@23164>   BNE 'l1
000327A0 <AmiBlitz3.ab3@23165>   OR.l #$1000,d1
000327A4 <AmiBlitz3.ab3@23168>   BSR writelong
000327A8 <AmiBlitz3.ab3@23169>   MOVE.w 4(a3),d1
000327AC <AmiBlitz3.ab3@23170>   BSR writeword
000327B0 <AmiBlitz3.ab3@23171>   MOVEM.l (a7)+,a4/d0
000327B4 <AmiBlitz3.ab3@23172> BRA JL_0_D442
000327B6 <AmiBlitz3.ab3@23175>   MOVE.l A4,-(A7)
000327BA <AmiBlitz3.ab3@23176>    CMP.w #6,d6
000327BE <AmiBlitz3.ab3@23177>    BLT 'l10
000327C2 <AmiBlitz3.ab3@23178>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
000327C4 <AmiBlitz3.ab3@23179>    ADD.w d6,d1
000327CA <AmiBlitz3.ab3@23180>    JSR Atokejsr
000327D0 <AmiBlitz3.ab3@23181>    TST.w dontwrite
000327D4 <AmiBlitz3.ab3@23182>    BNE 'l10
000327DA <AmiBlitz3.ab3@23183>    MOVE.l data1start,d1
000327E0 <AmiBlitz3.ab3@23184>    MOVE.l destpointer,a4
000327E4 <AmiBlitz3.ab3@23185>    ADD.l d1,-6(a4)
000327EA <AmiBlitz3.ab3@23186>    MOVE.l destpointer,d1
000327EC <AmiBlitz3.ab3@23187>    SUBQ.l #6,d1
000327F2 <AmiBlitz3.ab3@23188>    SUB.l destbufferstart,d1
000327F4 <AmiBlitz3.ab3@23190>    MOVE.l d2,-(a7)
000327F6 <AmiBlitz3.ab3@23191>    MOVE.l d1,d2
000327FC <AmiBlitz3.ab3@23192>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000327FE <AmiBlitz3.ab3@23193>    MOVE.l (a7)+,d2
00032804 <AmiBlitz3.ab3@23194>    MOVE.l destpointer,a4
00032808 <AmiBlitz3.ab3@23195>    CMP.w #2,d2
0003280C <AmiBlitz3.ab3@23196>    BNE 'nw1
00032812 <AmiBlitz3.ab3@23198>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003281A <AmiBlitz3.ab3@23199>    ADD.l #2,-6(a4)
0003281E <AmiBlitz3.ab3@23202>    CMP.w #1,d2
00032822 <AmiBlitz3.ab3@23203>    BNE 'nb
00032828 <AmiBlitz3.ab3@23204>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032830 <AmiBlitz3.ab3@23205>    ADD.l #3,-6(a4)
00032836 <AmiBlitz3.ab3@23208>    MOVE.w $4(a3),-2(a4)
0003283A <AmiBlitz3.ab3@23209> BRA 'ne1
0003283E <AmiBlitz3.ab3@23212>   BSR.w writeword                                          ;write storeparameter
00032842 <AmiBlitz3.ab3@23215>   MOVE.w $4(A3),D1
00032846 <AmiBlitz3.ab3@23216>    BSR.w writeword
00032848 <AmiBlitz3.ab3@23219>   MOVEA.l (A7)+,A4
0003284E <AmiBlitz3.ab3@23222>   CLR.l functionreturntype
00032850 <AmiBlitz3.ab3@23223>   ADDQ.w #1,D6
00032854 <AmiBlitz3.ab3@23224>   CMP.w #11,D6                                             ;max function parameters
00032858 <AmiBlitz3.ab3@23225>    BCC.w JUMP_toovarerr
0003285E <AmiBlitz3.ab3@23226>   MOVE.l currentfunction,a0
00032862 <AmiBlitz3.ab3@23227>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032864 <AmiBlitz3.ab3@23228>   MOVE.b D2,(A4)+
00032868 <AmiBlitz3.ab3@23229>   CMP.w #$2C,D0
0003286C <AmiBlitz3.ab3@23230>    BNE.w JL_0_D45E
00032872 <AmiBlitz3.ab3@23231>    JSR get1bytemain
00032876 <AmiBlitz3.ab3@23243> BRA.w JL_0_D3C6
0003287A <AmiBlitz3.ab3@23246>   CMP.w #$7D,D0
0003287E <AmiBlitz3.ab3@23247>    BNE.w JUMP_syntaxerr
00032884 <AmiBlitz3.ab3@23250>   MOVEA.l currentfunction,A2
00032886 <AmiBlitz3.ab3@23251>   LSL.w #4,D5
00032888 <AmiBlitz3.ab3@23252>   OR.w D5,D6
0003288C <AmiBlitz3.ab3@23253>   MOVE.b D6,$4(A2)
0003288E <AmiBlitz3.ab3@23254>   LSR.w #4,D6
00032892 <AmiBlitz3.ab3@23255>    BEQ.w JL_0_D4C4
00032898 <AmiBlitz3.ab3@23256>   LEA stbuff,A0
0003289A <AmiBlitz3.ab3@23257>   SUBQ.w #1,D6
0003289C <AmiBlitz3.ab3@23260>     MOVE.w D6,D1                                           ;function stringpars
0003289E <AmiBlitz3.ab3@23261>     LSL.w #2,D1                                            ;stringsize was 2
000328A0 <AmiBlitz3.ab3@23263>       LSL.w #1,d1
000328A2 <AmiBlitz3.ab3@23264>       ADDQ.w #4,d1
000328A4 <AmiBlitz3.ab3@23266>     ADDQ.w #8,D1
000328AA <AmiBlitz3.ab3@23267>     MOVE.w D1,funcst+2
000328B0 <AmiBlitz3.ab3@23268>     MOVE.l funcst,D1
000328B4 <AmiBlitz3.ab3@23269>     BSR.w writelong
000328B6 <AmiBlitz3.ab3@23270>     MOVE.w (A0)+,D1
000328BA <AmiBlitz3.ab3@23271>     CMP.b #5,d1
000328BE <AmiBlitz3.ab3@23272>     BLE 's1
000328C2 <AmiBlitz3.ab3@23273>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
000328C6 <AmiBlitz3.ab3@23274>     BSR writeinstruction
000328C8 <AmiBlitz3.ab3@23275>     MOVE.w D6,D1                                           ;function stringpars
000328CA <AmiBlitz3.ab3@23276>     LSL.w #2,D1                                            ;stringsize was 2
000328CC <AmiBlitz3.ab3@23278>       LSL.w #1,d1
000328CE <AmiBlitz3.ab3@23280>     ADDQ.w #8,D1
000328D2 <AmiBlitz3.ab3@23281>     BSR writeword
000328D6 <AmiBlitz3.ab3@23282>   BRA 's2
000328DC <AmiBlitz3.ab3@23285>     OR.w movedna3,D1
000328E0 <AmiBlitz3.ab3@23286>      BSR.w writeword
000328E6 <AmiBlitz3.ab3@23289>     MOVE.w (A0)+,least+2
000328EC <AmiBlitz3.ab3@23290>     MOVE.l least,D1
000328F0 <AmiBlitz3.ab3@23291>      BSR.w writelong
000328F2 <AmiBlitz3.ab3@23292>     MOVE.l A0,-(A7)
000328F6 <AmiBlitz3.ab3@23293>     MOVE.w #$C700,D1
000328FA <AmiBlitz3.ab3@23294>      BSR.w Atokejsr
000328FC <AmiBlitz3.ab3@23295>     MOVEA.l (A7)+,A0
00032900 <AmiBlitz3.ab3@23296>   DBF D6,JL_0_D482
00032906 <AmiBlitz3.ab3@23299> JMP get1bytemain
0003290C <AmiBlitz3.ab3@23303>   MOVE.w dontwrite,D1
00032910 <AmiBlitz3.ab3@23304>    BNE.w JL_0_D4F6
00032916 <AmiBlitz3.ab3@23305>   MOVE.l destpointer,-(A7)
0003291C <AmiBlitz3.ab3@23306>   MOVE.l A0,destpointer
00032922 <AmiBlitz3.ab3@23307>   MOVE.l linksize,D1
00032926 <AmiBlitz3.ab3@23308>    BSR.w writelong                                         ;writefunctions jumppos
0003292C <AmiBlitz3.ab3@23309>    TST.b fastfunc
00032930 <AmiBlitz3.ab3@23310>    BNE 'skip
00032934 <AmiBlitz3.ab3@23311>   MOVE.w #$CC00,D1
00032938 <AmiBlitz3.ab3@23312>    BSR.w tokejsr2                                          ;write clearvars
0003293E <AmiBlitz3.ab3@23315>   MOVE.l (A7)+,destpointer
00032940 <AmiBlitz3.ab3@23318> RTS
00032946 <AmiBlitz3.ab3@23322>   MOVEA.l currentfunction,A2
0003294A <AmiBlitz3.ab3@23323>   MOVEA.l $E(A2),A0
0003294E <AmiBlitz3.ab3@23324>   MOVE.w $6(A2),D1
00032952 <AmiBlitz3.ab3@23325>    BEQ.w JL_0_D538
00032958 <AmiBlitz3.ab3@23326>   MOVE.w D1,linksize+2
0003295C <AmiBlitz3.ab3@23327>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032960 <AmiBlitz3.ab3@23328>    BNE.w JL_0_D522
00032962 <AmiBlitz3.ab3@23329>   ADDQ.w #6,A0
00032966 <AmiBlitz3.ab3@23330>   MOVE.l A0,$E(A2)
0003296A <AmiBlitz3.ab3@23331> BRA.w JL_0_D4C8
0003296C <AmiBlitz3.ab3@23334>   MOVE.l A0,-(A7)
00032970 <AmiBlitz3.ab3@23335>    BSR.w JL_0_D4C8
00032972 <AmiBlitz3.ab3@23336>   MOVEA.l (A7)+,A0
00032976 <AmiBlitz3.ab3@23337>   LEA $A(A0),A0
0003297C <AmiBlitz3.ab3@23338>   MOVEA.l currentfunction,A2
00032980 <AmiBlitz3.ab3@23339> BRA.w JL_0_D54A
00032984 <AmiBlitz3.ab3@23342>   MOVE.w $8(A2),D1
00032988 <AmiBlitz3.ab3@23343>    BNE.w JL_0_D54A
0003298C <AmiBlitz3.ab3@23344>   LEA $10(A0),A0
00032990 <AmiBlitz3.ab3@23345>   MOVE.l A0,$E(A2)
00032992 <AmiBlitz3.ab3@23346> RTS
00032998 <AmiBlitz3.ab3@23350> JMP errormsg_nofast
0003299E <AmiBlitz3.ab3@23353>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
000329A2 <AmiBlitz3.ab3@23354>    BNE.w JL_0_D580
000329A8 <AmiBlitz3.ab3@23355>    TST.b fastfunc
000329AC <AmiBlitz3.ab3@23356>    BNE JUMP_errormsg_nofast
000329B2 <AmiBlitz3.ab3@23357>   MOVE.l destpointer,-(A7)
000329B8 <AmiBlitz3.ab3@23358>   MOVE.l A0,destpointer
000329BC <AmiBlitz3.ab3@23359>   MOVE.w #$4EB9,D1
000329C0 <AmiBlitz3.ab3@23360>    BSR.w writeword
000329C6 <AmiBlitz3.ab3@23361>    JSR addoff
000329CA <AmiBlitz3.ab3@23362>    BSR.w writelong
000329CC <AmiBlitz3.ab3@23363>   MOVEA.l (A7)+,A0
000329D2 <AmiBlitz3.ab3@23364>   MOVEA.l destpointer,A1
000329D4 <AmiBlitz3.ab3@23365>   MOVE.l A0,-(A1)
000329DA <AmiBlitz3.ab3@23366>   MOVE.l A0,destpointer
000329DE <AmiBlitz3.ab3@23369>   MOVE.w $8(A2),D4
000329E2 <AmiBlitz3.ab3@23370>    BPL.w JL_0_D59E
000329E6 <AmiBlitz3.ab3@23371>   MOVE.w #$C004,D1
000329EA <AmiBlitz3.ab3@23372>    BSR.w tokejsr2
000329F0 <AmiBlitz3.ab3@23373>   MOVEA.l currentfunction,A2
000329F4 <AmiBlitz3.ab3@23374>   MOVE.w $8(A2),D4
000329F8 <AmiBlitz3.ab3@23375>   ANDI.w #$7FFF,D4
000329FC <AmiBlitz3.ab3@23378>    BEQ.w JL_0_D5E0
00032A00 <AmiBlitz3.ab3@23379>   MOVE.b $4(A2),D1
00032A04 <AmiBlitz3.ab3@23380>   ANDI.w #$F,D1
00032A06 <AmiBlitz3.ab3@23381>   MOVE.w D1,-(A7)
00032A0A <AmiBlitz3.ab3@23382>   CMP.w #$5,D1
00032A0E <AmiBlitz3.ab3@23383>    BCS.w JL_0_D5BC
00032A12 <AmiBlitz3.ab3@23384>   MOVE.w #$2F04,D1
00032A16 <AmiBlitz3.ab3@23385>    BSR.w writeword
00032A1C <AmiBlitz3.ab3@23388>   MOVE.l locdatast,D3
00032A22 <AmiBlitz3.ab3@23389>    JSR datastart
00032A26 <AmiBlitz3.ab3@23390>   MOVE.w #$C501,D1
00032A2A <AmiBlitz3.ab3@23391>    BSR.w tokejsr2
00032A2C <AmiBlitz3.ab3@23392>   MOVE.w (A7)+,D1
00032A30 <AmiBlitz3.ab3@23393>   CMP.w #$5,D1
00032A34 <AmiBlitz3.ab3@23394>    BCS.w JL_0_D5E0
00032A38 <AmiBlitz3.ab3@23395>   MOVE.w #$281F,D1
00032A3C <AmiBlitz3.ab3@23396>    BSR.w writeword
00032A40 <AmiBlitz3.ab3@23398>   MOVE.w #$4E75,D1
00032A44 <AmiBlitz3.ab3@23399> BRA.w writeword
00032A4A <AmiBlitz3.ab3@23403>   LEA mwait,A0
00032A50 <AmiBlitz3.ab3@23404>   LEA mwaitf,A1
00032A54 <AmiBlitz3.ab3@23405> BRA.w pokecode
00032A5A <AmiBlitz3.ab3@23409> JMP laberr
00032A5E <AmiBlitz3.ab3@23412>   CMP.w #$2E,D0
00032A62 <AmiBlitz3.ab3@23413>   BNE.w JUMP_syntaxerr
00032A68 <AmiBlitz3.ab3@23414>   JSR getparameter2
00032A6C <AmiBlitz3.ab3@23415>   BEQ.w JUMP_laberr
00032A72 <AmiBlitz3.ab3@23416>   LEA newtypebase,A2
00032A78 <AmiBlitz3.ab3@23417>   JSR findtype
00032A7C <AmiBlitz3.ab3@23418>   BNE.w JL_0_D626
00032A84 <AmiBlitz3.ab3@23419>   CMPI.l #MaxByte,$4(A2)
00032A88 <AmiBlitz3.ab3@23420>   BNE.w JUMP_typeerr
00032A8C <AmiBlitz3.ab3@23421> BRA.w JL_0_D62A
00032A92 <AmiBlitz3.ab3@23424> JMP typeerr
00032A98 <AmiBlitz3.ab3@23427>   JSR addlabel
00032A9C <AmiBlitz3.ab3@23430>   CLR.l $4(A2)
00032AA2 <AmiBlitz3.ab3@23431>   MOVE.l A2,thistype
00032AA8 <AmiBlitz3.ab3@23432>   CLR.l prevtype
00032AAE <AmiBlitz3.ab3@23433>   CLR.w typelen
00032AB4 <AmiBlitz3.ab3@23434>   CLR.w linemode
00032ABA <AmiBlitz3.ab3@23435>   JSR reget
00032ABE <AmiBlitz3.ab3@23436>   BNE.w typemode
00032AC0 <AmiBlitz3.ab3@23437> RTS
00032AC4 <AmiBlitz3.ab3@23440>   CMP.w #-$7FFE,D0
00032AC8 <AmiBlitz3.ab3@23441>   BEQ.w JL_0_D82E
00032AD2 <AmiBlitz3.ab3@23443>   MOVE.w oldqflag,instringon
00032AD8 <AmiBlitz3.ab3@23444>   MOVEA.l lastsourcepos,A5
00032ADA <AmiBlitz3.ab3@23445>   MOVEQ.l #$00,D6
00032ADE <AmiBlitz3.ab3@23446>   CMP.w #$2A,D0
00032AE2 <AmiBlitz3.ab3@23447>   BNE.w JL_0_D670
00032AE4 <AmiBlitz3.ab3@23448>   MOVEQ.l #$01,D6
00032AEA <AmiBlitz3.ab3@23449>   JSR get1bytemain
00032AEE <AmiBlitz3.ab3@23450> BRA.w JL_0_D67E
00032AF2 <AmiBlitz3.ab3@23453>   CMP.w #$40,D0
00032AF6 <AmiBlitz3.ab3@23454>   BNE.w JL_0_D67E
00032AF8 <AmiBlitz3.ab3@23455>   MOVEQ.l #$05,D6
00032AFE <AmiBlitz3.ab3@23456>   JSR get1bytemain
00032B04 <AmiBlitz3.ab3@23459>   MOVE.w D6,flagmask
00032B0A <AmiBlitz3.ab3@23460>   JSR getparameter2
00032B0E <AmiBlitz3.ab3@23461>   BEQ.w JUMP_syntaxerr
00032B14 <AmiBlitz3.ab3@23462>   MOVEA.l thistype,A2
00032B16 <AmiBlitz3.ab3@23463>   ADDQ.w #4,A2
00032B1C <AmiBlitz3.ab3@23464>   JSR findvariable2
00032B20 <AmiBlitz3.ab3@23465>   BEQ.w JUMP_dupofferr
00032B26 <AmiBlitz3.ab3@23466>   JSR addlabel
00032B28 <AmiBlitz3.ab3@23467>   MOVE.l A2,-(A7)
00032B2C <AmiBlitz3.ab3@23468>   CMP.w #$2E,D0
00032B30 <AmiBlitz3.ab3@23469>    BEQ.w JL_0_D6CE
00032B34 <AmiBlitz3.ab3@23470>   CMP.w #$24,D0
00032B38 <AmiBlitz3.ab3@23471>    BNE.w JL_0_D6C0
00032B3E <AmiBlitz3.ab3@23472>   MOVE.l #newtype_string,D2
00032B44 <AmiBlitz3.ab3@23473>    JSR get1bytemain
00032B48 <AmiBlitz3.ab3@23474> BRA.w JL_0_D710
00032B4E <AmiBlitz3.ab3@23477> JMP dupofferr
00032B54 <AmiBlitz3.ab3@23480>   MOVE.l prevtype,D2
00032B58 <AmiBlitz3.ab3@23481>   BEQ.w JUMP_notypeerr
00032B5C <AmiBlitz3.ab3@23482> BRA.w JL_0_D706
00032B62 <AmiBlitz3.ab3@23485> JMP notypeerr
00032B68 <AmiBlitz3.ab3@23488>   JSR getparameter2
00032B6C <AmiBlitz3.ab3@23489>    BEQ.w JUMP_syntaxerr
00032B72 <AmiBlitz3.ab3@23490>   LEA newtypebase,A2
00032B78 <AmiBlitz3.ab3@23491>    JSR findtype
00032B7C <AmiBlitz3.ab3@23492>    BEQ.w JL_0_D704
00032B84 <AmiBlitz3.ab3@23493>   BTST #$0,flagmask+1
00032B88 <AmiBlitz3.ab3@23494>    BEQ.w JUMP_notypeerr
00032B8E <AmiBlitz3.ab3@23495>   JSR addlabel
00032B96 <AmiBlitz3.ab3@23498>   MOVE.w linenumat+2,$8(A2)
00032B9E <AmiBlitz3.ab3@23499>   MOVE.l #MaxByte,$4(A2)
00032BA0 <AmiBlitz3.ab3@23502>   MOVE.l A2,D2
00032BA6 <AmiBlitz3.ab3@23505>   CMP.l #newtype_byte,D2
00032BAA <AmiBlitz3.ab3@23506>    BEQ.w JL_0_D71E
00032BB0 <AmiBlitz3.ab3@23509>   ADDQ.w #1,typelen
00032BB8 <AmiBlitz3.ab3@23510>   BCLR #$0,typelen+1
00032BBA <AmiBlitz3.ab3@23513>   MOVEQ.l #$00,D3
00032BBC <AmiBlitz3.ab3@23514>   MOVEA.l D2,A2
00032BC2 <AmiBlitz3.ab3@23515>   MOVE.l A2,prevtype
00032BC6 <AmiBlitz3.ab3@23516>   MOVE.w $8(A2),D3
00032BC8 <AmiBlitz3.ab3@23517>   MOVEA.l (A7)+,A2
00032BCC <AmiBlitz3.ab3@23518>   MOVE.l D2,$A(A2)
00032BCE <AmiBlitz3.ab3@23519>   MOVEQ.l #$00,D4
00032BD4 <AmiBlitz3.ab3@23520>   MOVE.w typelen,D4
00032BD8 <AmiBlitz3.ab3@23521>   MOVE.w D4,$4(A2)
00032BE0 <AmiBlitz3.ab3@23522>   BTST #$0,flagmask+1
00032BE4 <AmiBlitz3.ab3@23523>    BEQ.w JL_0_D74C
00032BE6 <AmiBlitz3.ab3@23524>   MOVEQ.l #$04,D3
00032BEA <AmiBlitz3.ab3@23527>   CMP.w #$5B,D0
00032BEE <AmiBlitz3.ab3@23528>    BNE.w JL_0_D782
00032BF2 <AmiBlitz3.ab3@23529>   MOVEM.l D3-D4/A2,-(A7)
00032BF6 <AmiBlitz3.ab3@23530>    BSR.w AJL_0_BF6E
00032BFA <AmiBlitz3.ab3@23531>   CMP.w #$5D,D0
00032BFE <AmiBlitz3.ab3@23532>    BNE.w JUMP_syntaxerr
00032C00 <AmiBlitz3.ab3@23533>   TST.w D6
00032C04 <AmiBlitz3.ab3@23534>    BNE.w JUMP_fpconerr
00032C06 <AmiBlitz3.ab3@23535>   MOVE.l D3,D1
00032C0A <AmiBlitz3.ab3@23536>   MOVEM.l (A7)+,D3-D4/A2
00032C10 <AmiBlitz3.ab3@23537>    JSR get1bytemain
00032C14 <AmiBlitz3.ab3@23538>   MOVE.w D1,$8(A2)
00032C18 <AmiBlitz3.ab3@23539>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00032C20 <AmiBlitz3.ab3@23540>   ORI.w #$2,flagmask
00032C22 <AmiBlitz3.ab3@23543>   ADD.l D3,D4
00032C28 <AmiBlitz3.ab3@23546>     CMP.l #65532,d4
00032C2C <AmiBlitz3.ab3@23551>   BCC JUMP_toolongerr
00032C34 <AmiBlitz3.ab3@23552>   MOVE.w flagmask,$6(A2)
00032C3A <AmiBlitz3.ab3@23553>   MOVE.w D4,typelen
00032C3C <AmiBlitz3.ab3@23554> RTS
00032C42 <AmiBlitz3.ab3@23557> JMP badenderr
00032C48 <AmiBlitz3.ab3@23560> JMP noiferr
00032C4E <AmiBlitz3.ab3@23563> JMP toolongerr
00032C54 <AmiBlitz3.ab3@23566> JMP fpconerr
00032C5A <AmiBlitz3.ab3@23569>   MOVE.l firstiff,D0
00032C5E <AmiBlitz3.ab3@23570>    BEQ.w JUMP_noiferr
00032C60 <AmiBlitz3.ab3@23571>   MOVEA.l D0,A0
00032C64 <AmiBlitz3.ab3@23572>   MOVE.w $C(A0),D0
00032C68 <AmiBlitz3.ab3@23573>   ANDI.w #$FF,D0
00032C6A <AmiBlitz3.ab3@23574>   CMP.w D0,D1
00032C6E <AmiBlitz3.ab3@23575>    BNE.w JUMP_badenderr
00032C72 <AmiBlitz3.ab3@23578>   CMP.w #$1,D1
00032C76 <AmiBlitz3.ab3@23579>   BNE.w JL_0_D7D8
00032C7A <AmiBlitz3.ab3@23580>   MOVE.w #$6000,D1
00032C80 <AmiBlitz3.ab3@23583>     TST.b fast
00032C84 <AmiBlitz3.ab3@23584>     BEQ 'l1
00032C8A <AmiBlitz3.ab3@23585>     OR.l #$ff,d1
00032C8E <AmiBlitz3.ab3@23589>   BSR.w writeword
00032C94 <AmiBlitz3.ab3@23590>   MOVEA.l destpointer,A1
00032C98 <AmiBlitz3.ab3@23591>   MOVE.l $4(A0),D1
00032C9A <AmiBlitz3.ab3@23592>   SUB.l A1,D1
00032CA0 <AmiBlitz3.ab3@23595>     TST.b fast
00032CA4 <AmiBlitz3.ab3@23596>     BEQ 'l2
00032CA8 <AmiBlitz3.ab3@23597>     BSR writelong
00032CAC <AmiBlitz3.ab3@23598>   BRA JL_0_D7D8
00032CB0 <AmiBlitz3.ab3@23602>   BSR.w writeword
00032CB4 <AmiBlitz3.ab3@23605>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00032CBA <AmiBlitz3.ab3@23606>   MOVE.l destpointer,D1
00032CBC <AmiBlitz3.ab3@23607>   SUB.l A1,D1
00032CC2 <AmiBlitz3.ab3@23610>     TST.b fast
00032CC6 <AmiBlitz3.ab3@23611>     BEQ 'l1
00032CC8 <AmiBlitz3.ab3@23612>     ADDQ.l #4,D1
00032CCE <AmiBlitz3.ab3@23613>     MOVE.w dontwrite,D0
00032CD2 <AmiBlitz3.ab3@23614>     BNE.w JL_0_D7FE
00032CD6 <AmiBlitz3.ab3@23615>     MOVE.l d1,-$4(a1)
00032CDA <AmiBlitz3.ab3@23616>   BRA JL_0_D7FE
00032CDC <AmiBlitz3.ab3@23620>   ADDQ.l #2,d1
00032CE2 <AmiBlitz3.ab3@23621>   TST.w dontwrite
00032CE6 <AmiBlitz3.ab3@23622>   BNE JL_0_D7FE
00032CEC <AmiBlitz3.ab3@23623>   CMP.l #MinWordSgnd,D1
00032CF0 <AmiBlitz3.ab3@23624>   BCC.w JUMP_bigiferr
00032CF4 <AmiBlitz3.ab3@23625>   MOVE.w D1,-$2(A1)
00032CF6 <AmiBlitz3.ab3@23628> RTS
00032CFC <AmiBlitz3.ab3@23631> JMP bigiferr
00032D06 <AmiBlitz3.ab3@23636>   MOVE.w oldqflag,instringon
00032D0C <AmiBlitz3.ab3@23637>   MOVEA.l lastsourcepos,A5
00032D0E <AmiBlitz3.ab3@23640>   MOVEQ.l #$01,D1
00032D12 <AmiBlitz3.ab3@23641> BRA.w JL_0_D810
00032D1C <AmiBlitz3.ab3@23645>   MOVE.w oldqflag,instringon
00032D22 <AmiBlitz3.ab3@23646>   MOVEA.l lastsourcepos,A5
00032D24 <AmiBlitz3.ab3@23649>   MOVEQ.l #$00,D1
00032D28 <AmiBlitz3.ab3@23652>   BSR.w JL_0_D79E
00032D2C <AmiBlitz3.ab3@23653>   BSR.w AJL_0_D81C
00032D32 <AmiBlitz3.ab3@23654> JMP get1bytemain
00032D38 <AmiBlitz3.ab3@23657>   MOVE.l (A0),firstiff
00032D3A <AmiBlitz3.ab3@23658>   MOVEA.l A0,A1
00032D3C <AmiBlitz3.ab3@23659>   MOVEQ.l #$0E,D0
00032D42 <AmiBlitz3.ab3@23660>   MOVEA.l _execbase,A6
00032D48 <AmiBlitz3.ab3@23661>   MOVE.l mempool,a0
00032D4C <AmiBlitz3.ab3@23662> JMP _FreePooled(A6)
00032D52 <AmiBlitz3.ab3@23666>   JSR get1bytemain
00032D56 <AmiBlitz3.ab3@23669>   BEQ.w JL_0_D980
00032D5E <AmiBlitz3.ab3@23670>   CMP.l #"noa7",-1(a5)
00032D62 <AmiBlitz3.ab3@23671>   BNE 'l1
00032D68 <AmiBlitz3.ab3@23672>   JSR get1bytemain
00032D6E <AmiBlitz3.ab3@23673>   JSR get1bytemain
00032D74 <AmiBlitz3.ab3@23674>   JSR get1bytemain
00032D7C <AmiBlitz3.ab3@23675>   MOVE.w #$3a,lastchar
00032D80 <AmiBlitz3.ab3@23676> BRA JL_0_D980
00032D86 <AmiBlitz3.ab3@23679>   CMP.w #"d0",-1(a5)
00032D8A <AmiBlitz3.ab3@23680>   BNE 'l2
00032D92 <AmiBlitz3.ab3@23681>   MOVE.b #1,returncode
00032D98 <AmiBlitz3.ab3@23682>   CLR.w lastchar
00032D9C <AmiBlitz3.ab3@23683> BRA JL_0_D980
00032DA0 <AmiBlitz3.ab3@23686>   CMP.w #$80d7,d0
00032DA4 <AmiBlitz3.ab3@23687>   BNE JL_0_D836
00032DAA <AmiBlitz3.ab3@23688>   JSR skiprest
00032DAC <AmiBlitz3.ab3@23689> RTS
00032DB0 <AmiBlitz3.ab3@23692>   BSR.w JL_0_D844
00032DB6 <AmiBlitz3.ab3@23693>   JSR reget
00032DBA <AmiBlitz3.ab3@23694>   BNE.w JL_0_D836
00032DBC <AmiBlitz3.ab3@23695> RTS
00032DC0 <AmiBlitz3.ab3@23698>   CMP.w #-$7FFF,D0
00032DC4 <AmiBlitz3.ab3@23699>    BNE.w JL_0_D87E
00032DCA <AmiBlitz3.ab3@23700>   MOVE.w linemode,D1
00032DCE <AmiBlitz3.ab3@23701>    BNE.w JUMP_modeerr
00032DD4 <AmiBlitz3.ab3@23702>   ADDQ.w #1,typelen
00032DDC <AmiBlitz3.ab3@23703>   BCLR #$0,typelen+1
00032DE2 <AmiBlitz3.ab3@23704>   MOVEA.l thistype,A0
00032DEA <AmiBlitz3.ab3@23705>   MOVE.w typelen,$8(A0)
00032DF2 <AmiBlitz3.ab3@23706>   MOVE.w #$FFFF,linemode
00032DF8 <AmiBlitz3.ab3@23707> JMP get1bytemain
00032DFE <AmiBlitz3.ab3@23710> JMP modeerr
00032E02 <AmiBlitz3.ab3@23713>   CMP.w #-$7FF5,D0
00032E06 <AmiBlitz3.ab3@23714>    BEQ.w JL_0_D80E
00032E0A <AmiBlitz3.ab3@23715>   CMP.w #-$7FF4,D0
00032E0E <AmiBlitz3.ab3@23716>    BEQ.w JL_0_D804
00032E12 <AmiBlitz3.ab3@23717>   CMP.w #-$7FF8,D0
00032E16 <AmiBlitz3.ab3@23718>    BNE.w JL_0_D89A
00032E1A <AmiBlitz3.ab3@23721> BRA.w JL_0_D9E8
00032E20 <AmiBlitz3.ab3@23724> JMP interr3
00032E24 <AmiBlitz3.ab3@23727>   CMP.w #-$7FF7,D0
00032E28 <AmiBlitz3.ab3@23728>    BNE.w JL_0_D8C8
00032E2E <AmiBlitz3.ab3@23729>    TST.b fpu
00032E32 <AmiBlitz3.ab3@23730>    BEQ 'nof
00032E38 <AmiBlitz3.ab3@23731>    MOVEA.l currentfunction,A0
00032E3E <AmiBlitz3.ab3@23732>    CMP.l #0,a0
00032E42 <AmiBlitz3.ab3@23733>    BEQ 'nof
00032E48 <AmiBlitz3.ab3@23734>    CMP.b #5,$5(a0)
00032E4C <AmiBlitz3.ab3@23735>     BNE 'nof
00032E52 <AmiBlitz3.ab3@23736>    MOVE.l #$f23c5000,d1
00032E56 <AmiBlitz3.ab3@23737>    BSR writelong
00032E5A <AmiBlitz3.ab3@23738>    MOVE.w #0,d1
00032E5E <AmiBlitz3.ab3@23739>    BSR writeword
00032E62 <AmiBlitz3.ab3@23742>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00032E66 <AmiBlitz3.ab3@23743>    BSR.w writeword
00032E6C <AmiBlitz3.ab3@23744>   MOVEA.l currentfunction,A0
00032E72 <AmiBlitz3.ab3@23745>   CMP.l #0,a0
00032E76 <AmiBlitz3.ab3@23746>   BEQ JL_0_D896
00032E7C <AmiBlitz3.ab3@23747>   MOVE.l destpointer,d1
00032E80 <AmiBlitz3.ab3@23748>   SUB.l $e(a0),d1
00032E84 <AmiBlitz3.ab3@23749>   MOVE.l d1,isfunc+1(a0)
00032E8A <AmiBlitz3.ab3@23750>   CMPI.b #$7,$5(A0)
00032E8E <AmiBlitz3.ab3@23751>    BNE.w JL_0_D896
00032E94 <AmiBlitz3.ab3@23752>   MOVE.w putstlen,D1
00032E98 <AmiBlitz3.ab3@23753>    BSR.w writeword
00032E9C <AmiBlitz3.ab3@23754> BRA.w JL_0_D896
00032EA2 <AmiBlitz3.ab3@23757> JMP interr
00032EA6 <AmiBlitz3.ab3@23760>  CMP.w #-$7FD0,D0
00032EAA <AmiBlitz3.ab3@23761>    BNE.w JL_0_D966
00032EB0 <AmiBlitz3.ab3@23762>   MOVE.w proceduremode,D1
00032EB4 <AmiBlitz3.ab3@23763>    BNE.w JUMP_interr3
00032EBA <AmiBlitz3.ab3@23764>   TST.b debugmode
00032EBE <AmiBlitz3.ab3@23765>    BEQ.w JL_0_D90A
00032EC0 <AmiBlitz3.ab3@23766>   MOVEQ.l #$03,D1
00032EC6 <AmiBlitz3.ab3@23767>    JSR writetrap
00032ECC <AmiBlitz3.ab3@23768>   MOVE.w dontwrite,D1
00032ED0 <AmiBlitz3.ab3@23769>    BNE.w JL_0_D90A
00032ED6 <AmiBlitz3.ab3@23770>   MOVEA.l intcleanat,A0
00032EDC <AmiBlitz3.ab3@23771>   MOVE.l destpointer,(A0)
00032EE0 <AmiBlitz3.ab3@23772>   MOVE.w #$C30C,D1
00032EE4 <AmiBlitz3.ab3@23773>    BSR.w Atokejsr
00032EEA <AmiBlitz3.ab3@23776>   MOVE.w intstring,D1
00032EEE <AmiBlitz3.ab3@23777>    BEQ.w JUMP_interr
00032EF2 <AmiBlitz3.ab3@23778>    BPL.w JL_0_D934
00032EF8 <AmiBlitz3.ab3@23779>   MOVE.w intlevel,D1
00032EFC <AmiBlitz3.ab3@23780>   ORI.w #$7200,D1
00032F00 <AmiBlitz3.ab3@23781>    BSR.w writeword
00032F04 <AmiBlitz3.ab3@23782>   MOVE.w #$C103,D1
00032F08 <AmiBlitz3.ab3@23783>    BSR.w Atokejsr
00032F0E <AmiBlitz3.ab3@23784>   CLR.w intlevel
00032F14 <AmiBlitz3.ab3@23787>  CLR.w intstring
00032F1A <AmiBlitz3.ab3@23788>   MOVE.l intfin,D1
00032F1E <AmiBlitz3.ab3@23789>    BSR.w writelong
00032F24 <AmiBlitz3.ab3@23790>   MOVE.l #$70004E75,D1
00032F28 <AmiBlitz3.ab3@23791>    BSR.w writelong
00032F2E <AmiBlitz3.ab3@23792>   MOVE.w dontwrite,D1
00032F32 <AmiBlitz3.ab3@23793>    BNE.w JL_0_D962
00032F38 <AmiBlitz3.ab3@23794>   MOVEA.l intjmpat,A0
00032F3C <AmiBlitz3.ab3@23795>   MOVE.l destpointer(PC),(A0)
00032F42 <AmiBlitz3.ab3@23798> JMP get1bytemain
00032F46 <AmiBlitz3.ab3@23802>   CMP.w #-$7FF2,D0
00032F4A <AmiBlitz3.ab3@23803>    BEQ.w doendsel
00032F4E <AmiBlitz3.ab3@23804>   CMP.w #-$7F4C,D0
00032F52 <AmiBlitz3.ab3@23805>    BNE.w JL_0_D97C
00032F58 <AmiBlitz3.ab3@23806> JMP doendseterr
00032F5E <AmiBlitz3.ab3@23810> JMP syntaxerr
00032F64 <AmiBlitz3.ab3@23814>   TST.w dirmode
00032F68 <AmiBlitz3.ab3@23815>   BNE.w JUMP_baddirerr
00032F6C <AmiBlitz3.ab3@23816>   MOVE.w #$C800,D1
00032F72 <AmiBlitz3.ab3@23817>   JSR Atokejsr                                            ;end
00032F7A <AmiBlitz3.ab3@23818>   CMP.l #"noa7",-4(a5)
00032F7E <AmiBlitz3.ab3@23819>   BNE 'l10
00032F84 <AmiBlitz3.ab3@23820>   TST.w dontwrite
00032F88 <AmiBlitz3.ab3@23821>   BNE 'l10
00032F8E <AmiBlitz3.ab3@23822>   MOVE.l destpointer,d1
00032F90 <AmiBlitz3.ab3@23823>   SUBQ.l #4,d1
00032F92 <AmiBlitz3.ab3@23824>   MOVE.l a0,-(a7)
00032F94 <AmiBlitz3.ab3@23825>   MOVE.l d1,a0
00032F96 <AmiBlitz3.ab3@23826>   MOVE.l (a0),a0
00032F9C <AmiBlitz3.ab3@23827>   MOVE.l #$60000002,(a0)+
00032FA0 <AmiBlitz3.ab3@23828>   MOVE.w #$588f,(a0)
00032FA2 <AmiBlitz3.ab3@23829>   MOVE.l (a7)+,a0
00032FA4 <AmiBlitz3.ab3@23832> RTS
00032FAA <AmiBlitz3.ab3@23836>   TST.w dirmode                                            ;stop
00032FAE <AmiBlitz3.ab3@23837>   BNE.w JUMP_baddirerr
00032FB0 <AmiBlitz3.ab3@23838>   MOVE.w d0,d1
00032FB4 <AmiBlitz3.ab3@23839>   BEQ 'l10
00032FB8 <AmiBlitz3.ab3@23840>   CMP.b #$3a,d0
00032FBC <AmiBlitz3.ab3@23841>   BEQ 'l10
00032FC2 <AmiBlitz3.ab3@23842>   JSR get1bytemain
00032FC8 <AmiBlitz3.ab3@23845>   TST.b debugmode
00032FCC <AmiBlitz3.ab3@23846>   BEQ.w newstop
00032FD0 <AmiBlitz3.ab3@23847>   MOVE.w #$D501,D1
00032FD4 <AmiBlitz3.ab3@23848> BRA.w Atokejsr
00032FD6 <AmiBlitz3.ab3@23852>     RTS
00032FD8 <AmiBlitz3.ab3@23854>   MOVE.w d1,d0
00032FDC <AmiBlitz3.ab3@23855>   BEQ 'l10
00032FE0 <AmiBlitz3.ab3@23856>   CMP.b #$3a,d0
00032FE4 <AmiBlitz3.ab3@23857>   BEQ 'l10
00032FE8 <AmiBlitz3.ab3@23858>   SUB.b #$30,d0
00032FEC <AmiBlitz3.ab3@23859>   MOVE.w #$4e40,d1
00032FF0 <AmiBlitz3.ab3@23860> BRA 'l11
00032FF4 <AmiBlitz3.ab3@23863>   MOVE.w #$4e4a,d1
00032FF8 <AmiBlitz3.ab3@23864> BRA writeword
00032FFA <AmiBlitz3.ab3@23867>   ADD.b d0,d1
00032FFE <AmiBlitz3.ab3@23868> BRA writeword
00033004 <AmiBlitz3.ab3@23872> JMP badconterr
00033008 <AmiBlitz3.ab3@23875>   MOVE.w #$4E71,D1
0003300C <AmiBlitz3.ab3@23876> BRA.w writeword
00033012 <AmiBlitz3.ab3@23879>   MOVEA.l firstfor,A2
00033018 <AmiBlitz3.ab3@23880>   CLR.l firstfor
0003301E <AmiBlitz3.ab3@23881>   MOVEA.l _execbase,A6
00033022 <AmiBlitz3.ab3@23884>   CMPA.w #$0,A2
00033026 <AmiBlitz3.ab3@23885>   BEQ.w JL_0_D9E6
00033028 <AmiBlitz3.ab3@23886>   MOVEA.l A2,A1
0003302A <AmiBlitz3.ab3@23887>   MOVEA.l (A1),A2
0003302C <AmiBlitz3.ab3@23888>   MOVEQ.l #$00,D0
00033032 <AmiBlitz3.ab3@23889>   MOVE.l mempool2,a0
00033036 <AmiBlitz3.ab3@23890>   MOVE.b $10(A1),D0
0003303A <AmiBlitz3.ab3@23891>   JSR _FreePooled(A6)                                      ;freememfor_error
0003303E <AmiBlitz3.ab3@23892> BRA.w JL_0_D9CC
00033040 <AmiBlitz3.ab3@23895> RTS
00033046 <AmiBlitz3.ab3@23899> JMP badpenderr
0003304C <AmiBlitz3.ab3@23905>   MOVE.w proceduremode,D1
00033050 <AmiBlitz3.ab3@23906>    BEQ.w JUMP_badpenderr
00033056 <AmiBlitz3.ab3@23908>   MOVE.w dontwrite,D1
0003305A <AmiBlitz3.ab3@23909>    BNE.w JL_0_DA1A
00033060 <AmiBlitz3.ab3@23910>   MOVEA.l firstpend,A2
00033064 <AmiBlitz3.ab3@23913>   CMPA.w #$0,A2
00033068 <AmiBlitz3.ab3@23914>    BEQ.w JL_0_DA1A
0003306C <AmiBlitz3.ab3@23915>   MOVEA.l $4(A2),A0
00033072 <AmiBlitz3.ab3@23916>   MOVE.l destpointer,(A0)
00033074 <AmiBlitz3.ab3@23917>   MOVEA.l (A2),A2
00033078 <AmiBlitz3.ab3@23918> BRA.w JL_0_DA02
0003307E <AmiBlitz3.ab3@23921>   TST.b debugmode
00033082 <AmiBlitz3.ab3@23922>    BEQ.b JL_0_DA2A
00033084 <AmiBlitz3.ab3@23923>   MOVEQ.l #$05,D1
0003308A <AmiBlitz3.ab3@23924>   JSR writetrap
00033090 <AmiBlitz3.ab3@23927>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033096 <AmiBlitz3.ab3@23928>   JSR calcstatic2b                                           ;calcstatic
0003309C <AmiBlitz3.ab3@23929>   MOVEA.l currentfunction,A0
000330A2 <AmiBlitz3.ab3@23930>   MOVE.l destpointer,d1
000330A6 <AmiBlitz3.ab3@23931>   SUB.l $e(a0),d1
000330AA <AmiBlitz3.ab3@23932>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
000330AE <AmiBlitz3.ab3@23933>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
000330B4 <AmiBlitz3.ab3@23934>   MOVE.l D3,locdatast
000330BA <AmiBlitz3.ab3@23935>   MOVEA.l tempvm,A1
000330C0 <AmiBlitz3.ab3@23936>  CLR.b infunctioncode
000330C6 <AmiBlitz3.ab3@23937>   MOVE.l firstiffstore,d1
000330CC <AmiBlitz3.ab3@23938>   CMP.l firstiff,d1
000330D0 <AmiBlitz3.ab3@23939>   BNE JUMP_noenderr
000330D4 <AmiBlitz3.ab3@23940>   TST.w $C(A1)                                             ;dim
000330D8 <AmiBlitz3.ab3@23941>    BPL.w JL_0_DA64
000330DE <AmiBlitz3.ab3@23942>  BSET #$7,$8(A0)
000330E2 <AmiBlitz3.ab3@23943>   MOVE.w #$C005,D1
000330E6 <AmiBlitz3.ab3@23944>    BSR.w tokejsr2                                          ;writefreememstatement
000330EA <AmiBlitz3.ab3@23945> BRA.w JL_0_DA6C
000330F0 <AmiBlitz3.ab3@23948> JMP noenderr
000330F8 <AmiBlitz3.ab3@23951>   MOVE.w memlibstat,$C(A1)
000330FE <AmiBlitz3.ab3@23954>   MOVEA.l currentfunction,A0
00033102 <AmiBlitz3.ab3@23955>   MOVE.l $E(A0),-(A7)
0003310A <AmiBlitz3.ab3@23956>   MOVE.w locvaroff,$6(A0)
00033110 <AmiBlitz3.ab3@23957>   BCLR #$1,$7(A0)
00033116 <AmiBlitz3.ab3@23958>   BCLR #$0,$7(A0)
0003311C <AmiBlitz3.ab3@23959>   CMPI.b #$7,$5(A0)
00033120 <AmiBlitz3.ab3@23960>    BNE.w JL_0_DA9E
00033126 <AmiBlitz3.ab3@23961>   MOVE.w getstlen,D1
0003312A <AmiBlitz3.ab3@23962>    BSR.w writeword
0003312E <AmiBlitz3.ab3@23965>   TST.w $6(A0)
00033132 <AmiBlitz3.ab3@23966>    BEQ.w JL_0_DAB8
00033136 <AmiBlitz3.ab3@23967>   MOVE.w #$FC7B,D1
0003313C <AmiBlitz3.ab3@23968>    JSR uselib
00033142 <AmiBlitz3.ab3@23969>   MOVE.w unlinka4,D1
00033146 <AmiBlitz3.ab3@23970>    BSR.w writeword
0003314C <AmiBlitz3.ab3@23973>   MOVEA.l currentfunction,A0
0003314E <AmiBlitz3.ab3@23974>   MOVEQ.l #$00,D1
00033152 <AmiBlitz3.ab3@23975>   MOVE.b $4(A0),D1
00033154 <AmiBlitz3.ab3@23976>   LSR.w #4,D1
00033158 <AmiBlitz3.ab3@23977>    BEQ.w JL_0_DB24
0003315A <AmiBlitz3.ab3@23979>      LSL.w #1,d1
0003315E <AmiBlitz3.ab3@23981>   CMP.w #$1,D1
00033162 <AmiBlitz3.ab3@23982>    BNE.w JL_0_DAE0
00033168 <AmiBlitz3.ab3@23983>   MOVE.w fix1,D1
0003316E <AmiBlitz3.ab3@23984>    JSR writeword
00033172 <AmiBlitz3.ab3@23985> BRA.w JL_0_DB24
00033174 <AmiBlitz3.ab3@23988>   LSL.w #2,D1
00033176 <AmiBlitz3.ab3@23989>   MOVE.w D1,-(A7)
0003317C <AmiBlitz3.ab3@23990>   MOVE.w D1,moverts+2
00033182 <AmiBlitz3.ab3@23991>   MOVE.l moverts,D1
00033188 <AmiBlitz3.ab3@23992>    JSR writelong
0003318A <AmiBlitz3.ab3@23993>   MOVE.w (A7)+,D1
0003318E <AmiBlitz3.ab3@23994>   CMP.w #$8,D1
00033192 <AmiBlitz3.ab3@23995>    BHI.w JL_0_DB14
00033196 <AmiBlitz3.ab3@23996>   ANDI.w #$7,D1
00033198 <AmiBlitz3.ab3@23997>   LSL.w #8,D1
0003319A <AmiBlitz3.ab3@23998>   LSL.w #1,D1
000331A0 <AmiBlitz3.ab3@23999>   OR.w fixq,D1
000331A6 <AmiBlitz3.ab3@24000>    JSR writeword
000331AA <AmiBlitz3.ab3@24001> BRA.w JL_0_DB24
000331B0 <AmiBlitz3.ab3@24005>    MOVE.w D1,fixstack+2
000331B6 <AmiBlitz3.ab3@24006>   MOVE.l fixstack,D1
000331BC <AmiBlitz3.ab3@24007>    JSR writelong
000331C0 <AmiBlitz3.ab3@24010>    BSR.w JL_0_D2CA
000331C4 <AmiBlitz3.ab3@24011>    BSR.w JL_0_D4F8
000331C6 <AmiBlitz3.ab3@24012>   MOVEA.l (A7)+,A0
000331CC <AmiBlitz3.ab3@24013>   MOVE.w dontwrite,D1
000331D0 <AmiBlitz3.ab3@24014>    BNE.w JL_0_DB3E
000331D6 <AmiBlitz3.ab3@24015>   MOVE.l destpointer,-(A0)
000331DC <AmiBlitz3.ab3@24018>   CLR.w proceduremode
000331E2 <AmiBlitz3.ab3@24019>   CLR.l currentfunction
000331E8 <AmiBlitz3.ab3@24020>   CLR.w procnum
000331EC <AmiBlitz3.ab3@24021>    BSR.w JL_0_DB5C
000331F2 <AmiBlitz3.ab3@24022>    JSR freepends
000331F8 <AmiBlitz3.ab3@24023> JMP get1bytemain
000331FA <AmiBlitz3.ab3@24026>   MOVEQ.l #$0C,D0
000331FC <AmiBlitz3.ab3@24027>   MOVEQ.l #$01,D1
00033202 <AmiBlitz3.ab3@24028>   MOVEA.l _execbase,A6
00033208 <AmiBlitz3.ab3@24030>   MOVE.l mempool,a0
0003320C <AmiBlitz3.ab3@24031>   JSR _AllocPooled(a6)
0003320E <AmiBlitz3.ab3@24032>   MOVEA.l D0,A0
00033214 <AmiBlitz3.ab3@24033>   MOVE.l alllocals,(A0)
0003321A <AmiBlitz3.ab3@24034>   MOVE.l A0,alllocals
00033220 <AmiBlitz3.ab3@24035>   MOVE.l firstlocal,D0
00033226 <AmiBlitz3.ab3@24036>   CLR.l firstlocal
0003322A <AmiBlitz3.ab3@24037>   MOVE.l D0,$4(A0)
00033230 <AmiBlitz3.ab3@24038>   MOVE.l firstglob,D1
00033236 <AmiBlitz3.ab3@24039>   CLR.l firstglob
0003323A <AmiBlitz3.ab3@24040>   MOVE.l D1,$8(A0)
00033240 <AmiBlitz3.ab3@24041>   TST.b debugmode
00033244 <AmiBlitz3.ab3@24042>    BEQ.b JL_0_DBB0
0003324A <AmiBlitz3.ab3@24043>   TST.w dontwrite
0003324E <AmiBlitz3.ab3@24044>    BNE.b JL_0_DBB0
00033252 <AmiBlitz3.ab3@24045>   MOVEA.l proclocals(PC),A0
00033254 <AmiBlitz3.ab3@24046>   MOVE.l D0,(A0)+
00033256 <AmiBlitz3.ab3@24047>   MOVE.l D1,(A0)
00033258 <AmiBlitz3.ab3@24050> RTS
0003325E <AmiBlitz3.ab3@24053> JMP baddirerr
00033264 <AmiBlitz3.ab3@24057>   TST.w dirmode
00033268 <AmiBlitz3.ab3@24058>    BNE.w JUMP_baddirerr
0003326E <AmiBlitz3.ab3@24059>   MOVE.l firstfor,D1
00033272 <AmiBlitz3.ab3@24060>    BEQ.w JUMP_noforerr
00033278 <AmiBlitz3.ab3@24061>   JSR reget
0003327C <AmiBlitz3.ab3@24062>    BEQ.w JL_0_DC18
00033280 <AmiBlitz3.ab3@24065>   BSR.w getparameter
00033284 <AmiBlitz3.ab3@24066>   MOVEA.l firstfor(PC),A2
00033286 <AmiBlitz3.ab3@24067>   MOVEQ.l #$00,D1
0003328A <AmiBlitz3.ab3@24068>   MOVE.b $10(A2),D1
0003328E <AmiBlitz3.ab3@24069>   SUBI.w #$12,D1
00033290 <AmiBlitz3.ab3@24070>   CMP.w D1,D2
00033294 <AmiBlitz3.ab3@24071>    BNE.w JUMP_noforerr
00033298 <AmiBlitz3.ab3@24072>   LEA ptr_parameterstore(PC),A0
0003329C <AmiBlitz3.ab3@24073>   LEA $11(A2),A1
0003329E <AmiBlitz3.ab3@24074>   SUBQ.w #1,D2
000332A0 <AmiBlitz3.ab3@24077>     CMPM.b (A0)+,(A1)+
000332A4 <AmiBlitz3.ab3@24078>     BNE.w JUMP_noforerr
000332A8 <AmiBlitz3.ab3@24079>   DBF D2,JL_0_DBF0
000332AC <AmiBlitz3.ab3@24081>    BSR.w JL_0_DC1A
000332B2 <AmiBlitz3.ab3@24082>    JSR reget
000332B6 <AmiBlitz3.ab3@24083>    BEQ.w JL_0_DC16
000332BA <AmiBlitz3.ab3@24084>   CMP.w #$2C,D0
000332BE <AmiBlitz3.ab3@24085>    BNE.w JUMP_syntaxerr
000332C4 <AmiBlitz3.ab3@24086>    JSR get1bytemain
000332C8 <AmiBlitz3.ab3@24087> BRA.w JL_0_DBCE
000332CE <AmiBlitz3.ab3@24090> JMP noforerr
000332D0 <AmiBlitz3.ab3@24093> RTS
000332D4 <AmiBlitz3.ab3@24097>   MOVE.l 8(a7),a2
000332D8 <AmiBlitz3.ab3@24098>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
000332DC <AmiBlitz3.ab3@24099>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
000332E0 <AmiBlitz3.ab3@24100>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
000332E2 <AmiBlitz3.ab3@24104>   MOVEA.l D1,A2
000332E8 <AmiBlitz3.ab3@24107>   JSR popnext                                           ;error checking for next.
000332EC <AmiBlitz3.ab3@24108>   MOVE.w $C(A2),D0
000332F2 <AmiBlitz3.ab3@24109>   LEA nextb,A0
000332F8 <AmiBlitz3.ab3@24110>   LEA nextbf,A1
000332FC <AmiBlitz3.ab3@24111>   CMP.w #$1,D0
00033300 <AmiBlitz3.ab3@24112>    BEQ.w JL_0_DC74
00033306 <AmiBlitz3.ab3@24113>   LEA nextw,A0
0003330C <AmiBlitz3.ab3@24114>   LEA nextwf,A1
00033310 <AmiBlitz3.ab3@24115>   CMP.w #$2,D0
00033314 <AmiBlitz3.ab3@24116>    BEQ.w JL_0_DC74
0003331A <AmiBlitz3.ab3@24117>   LEA nextl,A0
00033320 <AmiBlitz3.ab3@24118>   LEA nextlf,A1
00033324 <AmiBlitz3.ab3@24119>   CMP.w #$5,D0
00033328 <AmiBlitz3.ab3@24120>    BNE.w JL_0_DC74
0003332E <AmiBlitz3.ab3@24121>    TST.b fpu
00033332 <AmiBlitz3.ab3@24122>    BEQ 'old
00033338 <AmiBlitz3.ab3@24123>    LEA fpu2dats,a0                                         ;fpu next code
0003333E <AmiBlitz3.ab3@24124>    LEA fpu2date,a1
00033342 <AmiBlitz3.ab3@24125> BRA JL_0_DC74
00033346 <AmiBlitz3.ab3@24128>   MOVE.w #$C900,D1
0003334A <AmiBlitz3.ab3@24129>    BSR.w Atokejsr
00033350 <AmiBlitz3.ab3@24130>   LEA nextf,A0
00033356 <AmiBlitz3.ab3@24131>   LEA nextff,A1
0003335C <AmiBlitz3.ab3@24134>   JSR pokecode
00033362 <AmiBlitz3.ab3@24135>     TST.b fast                                             ;fast for next deactivate
00033366 <AmiBlitz3.ab3@24136> BRA 'l1
0003336C <AmiBlitz3.ab3@24138>     TST.b onestep
00033370 <AmiBlitz3.ab3@24139>     BEQ 'l1
00033376 <AmiBlitz3.ab3@24140>     CLR.b onestep
0003337C <AmiBlitz3.ab3@24141>     SUBQ.l #4,destpointer
00033380 <AmiBlitz3.ab3@24142>     MOVE.w #$5292,d1
00033386 <AmiBlitz3.ab3@24143>     JSR writeword
0003338A <AmiBlitz3.ab3@24146>   MOVE.l JL_0_DCF4(PC),D1
00033390 <AmiBlitz3.ab3@24147>    JSR writelong
00033396 <AmiBlitz3.ab3@24148>   MOVEA.l firstfor,A2
0003339C <AmiBlitz3.ab3@24149>   MOVE.l (A2),firstfor
000333A0 <AmiBlitz3.ab3@24150>   MOVEA.l $8(A2),A0
000333A6 <AmiBlitz3.ab3@24151>   MOVEA.l destpointer,A1
000333A8 <AmiBlitz3.ab3@24152>   MOVE.l A1,D1
000333AA <AmiBlitz3.ab3@24153>   SUB.l A0,D1
000333AC <AmiBlitz3.ab3@24154>   ADDQ.l #2,D1
000333B2 <AmiBlitz3.ab3@24155>   CMP.l #MinWordSgnd,D1
000333B6 <AmiBlitz3.ab3@24156>    BCC.w JUMP_bigforerr
000333BC <AmiBlitz3.ab3@24157>   TST.w dontwrite
000333C0 <AmiBlitz3.ab3@24158>    BNE.w JL_0_DCB4
000333C4 <AmiBlitz3.ab3@24159>   MOVE.w D1,-$2(A0)
000333C6 <AmiBlitz3.ab3@24162>   MOVE.l A1,D1
000333CA <AmiBlitz3.ab3@24163>   SUB.l $4(A2),D1
000333CC <AmiBlitz3.ab3@24164>   SUBQ.l #6,D1
000333D2 <AmiBlitz3.ab3@24165>   CMP.l #MinWordSgnd,D1
000333D6 <AmiBlitz3.ab3@24166>    BCC.w JUMP_bigforerr
000333DC <AmiBlitz3.ab3@24167>   TST.w dontwrite
000333E0 <AmiBlitz3.ab3@24168>    BNE.w JL_0_DCD6
000333E2 <AmiBlitz3.ab3@24169>   NEG.w D1
000333E6 <AmiBlitz3.ab3@24170>   MOVE.w D1,-$2(A1)
000333EC <AmiBlitz3.ab3@24173>   JSR popnext3
000333F2 <AmiBlitz3.ab3@24174>   MOVEA.l _execbase,A6
000333F4 <AmiBlitz3.ab3@24175>   MOVEA.l A2,A1
000333F6 <AmiBlitz3.ab3@24176>   MOVEQ.l #$00,D0
000333FA <AmiBlitz3.ab3@24177>   MOVE.b $10(A1),D0
00033400 <AmiBlitz3.ab3@24178>   MOVE.l mempool2,a0
00033404 <AmiBlitz3.ab3@24179>   JSR _FreePooled(A6)
0003340A <AmiBlitz3.ab3@24180> JMP reget
00033410 <AmiBlitz3.ab3@24183> JMP notallowd
00033416 <AmiBlitz3.ab3@24186> JMP bigforerr
0003341A <AmiBlitz3.ab3@24193>   MOVE.w #$664F,-(A7)
0003341E <AmiBlitz3.ab3@24196> BRA.w JL_0_DCF4
00033424 <AmiBlitz3.ab3@24199> JMP error_dublicate_for
00033428 <AmiBlitz3.ab3@24202> forlineat:   Ds.l 1
0003342A <AmiBlitz3.ab3@24203> fortemp:     Ds.w 1
00033430 <AmiBlitz3.ab3@24210>   CLR.l fp0addr
00033436 <AmiBlitz3.ab3@24211>   TST.w dirmode
0003343A <AmiBlitz3.ab3@24212>    BNE.w JUMP_baddirerr
00033444 <AmiBlitz3.ab3@24213>   MOVE.l linenumat,forlineat
0003344A <AmiBlitz3.ab3@24217>   MOVE.l A5,letstart
0003344E <AmiBlitz3.ab3@24218>   BSR.w getparameter
00033454 <AmiBlitz3.ab3@24219>   MOVE.w D2,fortemp
0003345A <AmiBlitz3.ab3@24220>   JSR findfor
0003345E <AmiBlitz3.ab3@24221>    BEQ.w JUMP_error_dublicate_for
00033464 <AmiBlitz3.ab3@24222>   LEA firstfor,A2
0003346A <AmiBlitz3.ab3@24223>   JSR addhere2
0003346C <AmiBlitz3.ab3@24224>   MOVE.l A2,-(A7)
00033472 <AmiBlitz3.ab3@24225>   TST.b debugmode
00033476 <AmiBlitz3.ab3@24226>    BEQ.b JL_0_DD4C
0003347C <AmiBlitz3.ab3@24227>   JSR chkstak
00033482 <AmiBlitz3.ab3@24228>   MOVE.l AJL_0_DCF0,D1
00033488 <AmiBlitz3.ab3@24229>   JSR  writelong
0003348C <AmiBlitz3.ab3@24232>   MOVE.w fortemp(PC),D2
00033494 <AmiBlitz3.ab3@24233>   MOVE.b #1,formode
00033498 <AmiBlitz3.ab3@24234>   BSR.w AJL_0_DEA6                                         ;for get 1. value
0003349E <AmiBlitz3.ab3@24235>   CLR.b formode
000334A2 <AmiBlitz3.ab3@24236>   CMP.w #-$7FE8,D0
000334A6 <AmiBlitz3.ab3@24237>    BNE.w JUMP_syntaxerr
000334AC <AmiBlitz3.ab3@24238>   MOVE.w commode,D1
000334B0 <AmiBlitz3.ab3@24239>    BNE.w JUMP_syntaxerr
000334B4 <AmiBlitz3.ab3@24240>   CMP.b #$6,D2
000334B8 <AmiBlitz3.ab3@24241>    BCC.w JUMP_badforerr
000334BC <AmiBlitz3.ab3@24242>   BTST #$F,D2
000334C0 <AmiBlitz3.ab3@24243>    BNE.w JL_0_DD86
000334C6 <AmiBlitz3.ab3@24244>   MOVE.w leaamp,D1
000334CC <AmiBlitz3.ab3@24245>   JSR pokewda5s
000334CE <AmiBlitz3.ab3@24246>   MOVE.w D3,D1
000334D4 <AmiBlitz3.ab3@24247>   JSR  writeword
000334DA <AmiBlitz3.ab3@24250>   MOVE.w pushindex,D1
000334E0 <AmiBlitz3.ab3@24251>   JSR  writeword
000334E4 <AmiBlitz3.ab3@24252>   ANDI.w #$FF,D2
000334E6 <AmiBlitz3.ab3@24254>   MOVEA.l (A7),A1
000334EA <AmiBlitz3.ab3@24255>   MOVE.w D2,$C(A1)
000334EC <AmiBlitz3.ab3@24256>   MOVE.w D2,-(A7)
000334F0 <AmiBlitz3.ab3@24257>    BSR.w eval
000334F6 <AmiBlitz3.ab3@24258>    CLR.b onestep
000334FA <AmiBlitz3.ab3@24259>    CMP.w #$8019,d0
000334FE <AmiBlitz3.ab3@24260>    BEQ 'l1
00033506 <AmiBlitz3.ab3@24261>    MOVE.b #1,onestep
00033508 <AmiBlitz3.ab3@24264>   MOVE.w (A7),D2
0003350E <AmiBlitz3.ab3@24265>   MOVE.w pushd0l,D1
00033512 <AmiBlitz3.ab3@24266>   CMP.w #$3,D2
00033516 <AmiBlitz3.ab3@24267>    BCC.w JL_0_DDB6
0003351C <AmiBlitz3.ab3@24268>   MOVE.w pushd0wd,D1
0003351E <AmiBlitz3.ab3@24271>    MOVE.w D1,-(A7)
00033524 <AmiBlitz3.ab3@24272>    TST.b fpu
00033528 <AmiBlitz3.ab3@24273>    BEQ 'old
0003352C <AmiBlitz3.ab3@24274>    CMP.b #5,d2
00033530 <AmiBlitz3.ab3@24275>    BNE 'old
00033536 <AmiBlitz3.ab3@24276>    MOVE.l #$f2276400,d1
0003353C <AmiBlitz3.ab3@24278>    JSR writelong
00033540 <AmiBlitz3.ab3@24279> BRA 'weit
00033546 <AmiBlitz3.ab3@24282>    JSR  writeword                                          ;fpu for end value
0003354A <AmiBlitz3.ab3@24285>   CMP.w #-$7FE7,D0
0003354E <AmiBlitz3.ab3@24286>    BNE.w JL_0_DDCC
00033552 <AmiBlitz3.ab3@24287>    BSR.w eval
00033558 <AmiBlitz3.ab3@24288>    TST.b fpu
0003355C <AmiBlitz3.ab3@24289>    BEQ JL_0_DE0C
00033560 <AmiBlitz3.ab3@24290>    CMP.b #5,d2
00033564 <AmiBlitz3.ab3@24291>    BNE JL_0_DE0C
0003356A <AmiBlitz3.ab3@24292>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033570 <AmiBlitz3.ab3@24294>   JSR writelong
00033572 <AmiBlitz3.ab3@24297>    MOVE.w (a7)+,d1
00033576 <AmiBlitz3.ab3@24298> BRA fpur
0003357A <AmiBlitz3.ab3@24301>   CMP.w #$4,D2
0003357E <AmiBlitz3.ab3@24302>    BCC.w JL_0_DDE0
00033582 <AmiBlitz3.ab3@24303>   MOVE.w #$7001,D1
00033588 <AmiBlitz3.ab3@24304>   JSR writeword
0003358C <AmiBlitz3.ab3@24305> BRA.w JL_0_DE0C
00033592 <AmiBlitz3.ab3@24308> JMP badforerr
00033596 <AmiBlitz3.ab3@24311>   BNE.w JL_0_DDFA
0003359A <AmiBlitz3.ab3@24312>   MOVE.w #$7001,D1
000335A0 <AmiBlitz3.ab3@24313>   JSR writeword
000335A6 <AmiBlitz3.ab3@24314>   MOVE.w swapd0,D1
000335AC <AmiBlitz3.ab3@24315>   JSR writeword
000335B0 <AmiBlitz3.ab3@24316> BRA.w JL_0_DE0C
000335B6 <AmiBlitz3.ab3@24319>   TST.b fpu
000335BA <AmiBlitz3.ab3@24320>    BEQ 'old
000335BE <AmiBlitz3.ab3@24321>   CMP.b #5,d2
000335C2 <AmiBlitz3.ab3@24322>    BNE 'old
000335C8 <AmiBlitz3.ab3@24323>   MOVE.l #$f23c5000,d1
000335CE <AmiBlitz3.ab3@24324>   JSR writelong
000335D2 <AmiBlitz3.ab3@24325>   MOVE.w #$1,d1
000335D8 <AmiBlitz3.ab3@24326>   JSR writeword
000335DE <AmiBlitz3.ab3@24327>   MOVE.l #$f2276400,d1
000335E4 <AmiBlitz3.ab3@24328>   JSR writelong
000335E6 <AmiBlitz3.ab3@24329>   MOVE.w (a7)+,d1
000335EA <AmiBlitz3.ab3@24330> BRA fpur
000335EE <AmiBlitz3.ab3@24333>   MOVE.w #$203C,D1                                         ;write step 1
000335F4 <AmiBlitz3.ab3@24334>   JSR writeword
000335FA <AmiBlitz3.ab3@24335>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033600 <AmiBlitz3.ab3@24336>   JSR writelong
00033602 <AmiBlitz3.ab3@24339>   MOVE.w (A7)+,D1
00033608 <AmiBlitz3.ab3@24340>   JSR writeword                                            ;push step on stack
0003360A <AmiBlitz3.ab3@24343>   MOVE.w (A7)+,D2
0003360C <AmiBlitz3.ab3@24344>   MOVEA.l (A7),A1
00033614 <AmiBlitz3.ab3@24345>   MOVE.l destpointer,$4(A1)
0003361A <AmiBlitz3.ab3@24346>   LEA forcompb,A0
00033620 <AmiBlitz3.ab3@24347>   LEA forcompbf,A1
00033624 <AmiBlitz3.ab3@24348>   CMP.w #$1,D2
00033628 <AmiBlitz3.ab3@24349>    BEQ.w JL_0_DE7E
0003362E <AmiBlitz3.ab3@24350>   LEA forcompw,A0
00033634 <AmiBlitz3.ab3@24351>   LEA forcompwf,A1
00033638 <AmiBlitz3.ab3@24352>   CMP.w #$2,D2
0003363C <AmiBlitz3.ab3@24353>    BEQ.w JL_0_DE7E
00033642 <AmiBlitz3.ab3@24354>   LEA forcompl,A0
00033648 <AmiBlitz3.ab3@24355>   LEA forcomplf,A1
0003364C <AmiBlitz3.ab3@24356>   CMP.w #$5,D2
00033650 <AmiBlitz3.ab3@24357>    BNE.w JL_0_DE7E
00033656 <AmiBlitz3.ab3@24358>   TST.b fpu
0003365A <AmiBlitz3.ab3@24359>    BEQ 'old
00033660 <AmiBlitz3.ab3@24360>   LEA fpu_start,a0
00033666 <AmiBlitz3.ab3@24361>   LEA fpu_end,a1
0003366C <AmiBlitz3.ab3@24362>   JSR pokecode
00033670 <AmiBlitz3.ab3@24363> BRA fpu3
00033676 <AmiBlitz3.ab3@24366>   LEA forcompf,A0                                         ;
0003367C <AmiBlitz3.ab3@24367>   LEA forcompff,A1
00033682 <AmiBlitz3.ab3@24368>   JSR pokecode
00033686 <AmiBlitz3.ab3@24369>   MOVE.w #$C900,D1
0003368A <AmiBlitz3.ab3@24370>   BSR.w Atokejsr
00033690 <AmiBlitz3.ab3@24371>   LEA forcompf2,A0
00033696 <AmiBlitz3.ab3@24372>   LEA forcompf2f,A1
0003369C <AmiBlitz3.ab3@24375>   JSR pokecode
000336A2 <AmiBlitz3.ab3@24376>   TST.b fast                                               ;fast for next
000336A6 <AmiBlitz3.ab3@24377>    BEQ 's1
000336AA <AmiBlitz3.ab3@24378>   CMP.w #3,d2
000336AE <AmiBlitz3.ab3@24379>    BNE 's1
000336B4 <AmiBlitz3.ab3@24380>   TST.b onestep
000336B8 <AmiBlitz3.ab3@24381>    BEQ 's1
000336C2 <AmiBlitz3.ab3@24382>   SUB.l #10,destpointer
000336C6 <AmiBlitz3.ab3@24383>   MOVE.w #$b081,d1
000336CC <AmiBlitz3.ab3@24384>   JSR writeword
000336D0 <AmiBlitz3.ab3@24388>   MOVE.l thebgt(PC),D1
000336D6 <AmiBlitz3.ab3@24389>   JSR writelong
000336D8 <AmiBlitz3.ab3@24392>   MOVEA.l (A7)+,A1
000336E0 <AmiBlitz3.ab3@24393>   MOVE.l destpointer,$8(A1)
000336E6 <AmiBlitz3.ab3@24394> JMP reget
000336EA <AmiBlitz3.ab3@24397>   MOVEA.l 8(a7),a2
000336EE <AmiBlitz3.ab3@24398>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
000336F4 <AmiBlitz3.ab3@24399>   fmove.s 4(a7),fp1
000336F8 <AmiBlitz3.ab3@24400>   BTST.b #7,(a7)
000336FC <AmiBlitz3.ab3@24401>   BNE 'negi
00033700 <AmiBlitz3.ab3@24402>   fcmp.x fp1,fp0
00033704 <AmiBlitz3.ab3@24403> BRA 'negi2
00033708 <AmiBlitz3.ab3@24406>   fcmp.x fp0,fp1
0003370C <AmiBlitz3.ab3@24409>   Dc.l $f2920000                                           ;fbgt.w
00033710 <AmiBlitz3.ab3@24413>   BGT.w thebgt
00033716 <AmiBlitz3.ab3@24416>   MOVE.l A5,letstart
0003371A <AmiBlitz3.ab3@24417>   BSR.w getparameter
00033724 <AmiBlitz3.ab3@24423>   MOVE.l destpointer,pushpc
0003372E <AmiBlitz3.ab3@24424>   MOVE.l hunkoffsetbase,pushoff
00033734 <AmiBlitz3.ab3@24425>   CLR.l rightsidetype
0003373C <AmiBlitz3.ab3@24426>   MOVE.w #$0001,regnum
00033742 <AmiBlitz3.ab3@24427>   JSR JL_0_8E3C
00033748 <AmiBlitz3.ab3@24428>   JSR calcvar
0003374E <AmiBlitz3.ab3@24429>   TST.b formode
00033752 <AmiBlitz3.ab3@24430>   BEQ 'lf1
00033758 <AmiBlitz3.ab3@24431>   CMP.l #newtype_double,A2
0003375C <AmiBlitz3.ab3@24432>   BEQ JUMP_notallowd
00033762 <AmiBlitz3.ab3@24433>   MOVE.l a2,currtype
00033768 <AmiBlitz3.ab3@24436>   CLR.w startoffsetmore
0003376C <AmiBlitz3.ab3@24437>   CMP.w #$3d,d0
00033770 <AmiBlitz3.ab3@24438>   BNE 'l1a
00033774 <AmiBlitz3.ab3@24439>   BTST #15,d2
00033778 <AmiBlitz3.ab3@24440>   BEQ 'l1a
0003377C <AmiBlitz3.ab3@24441>   CMP.b #1,d2
00033780 <AmiBlitz3.ab3@24442>   BNE 'l1a
0003378A <AmiBlitz3.ab3@24443>   MOVE.w leaa0a0+2,startoffsetmore
00033790 <AmiBlitz3.ab3@24446>   CLR.w regnum
00033794 <AmiBlitz3.ab3@24447>   BSR.w JL_0_B5D2
0003379A <AmiBlitz3.ab3@24448>   CLR.w commode
000337A0 <AmiBlitz3.ab3@24449>   CLR.w stackcorrect
000337A6 <AmiBlitz3.ab3@24450>   CLR.w pcodd
000337AC <AmiBlitz3.ab3@24451>   MOVE.w startoffsetmore,d1
000337B0 <AmiBlitz3.ab3@24452>   BTST #0,d1
000337B4 <AmiBlitz3.ab3@24453>   BEQ 'l2a
000337BC <AmiBlitz3.ab3@24454>   MOVE.w #1,pcodd
000337C0 <AmiBlitz3.ab3@24457>   CMP.w #$3D,D0                                            ;=
000337C4 <AmiBlitz3.ab3@24458>   BEQ.w JL_0_DEE0
000337C6 <AmiBlitz3.ab3@24461>   MOVE.b (a5)+,d1
000337CA <AmiBlitz3.ab3@24462>   BEQ 'l10
000337CE <AmiBlitz3.ab3@24463>   CMP.b #":",d1
000337D2 <AmiBlitz3.ab3@24464>   BEQ 'l10
000337D6 <AmiBlitz3.ab3@24465>   CMP.b #";",d1
000337DA <AmiBlitz3.ab3@24466>   BEQ 'l10
000337DE <AmiBlitz3.ab3@24467>   CMP.b #"0",d1
000337E2 <AmiBlitz3.ab3@24468>   BLT 'l11
000337E6 <AmiBlitz3.ab3@24469>   CMP.b #"9",d1
000337EA <AmiBlitz3.ab3@24470>   BGT 'l11
000337EE <AmiBlitz3.ab3@24471> BRA.s 'l1
000337F6 <AmiBlitz3.ab3@24474>   MOVE.b #1,quickadd
000337FC <AmiBlitz3.ab3@24477>   MOVEA.l letstart,A5
000337FE <AmiBlitz3.ab3@24478>   SUBQ.w #1,A5
00033802 <AmiBlitz3.ab3@24481>   CMP.b #$7,D2
00033806 <AmiBlitz3.ab3@24482>    BNE.w JL_0_DF8A
0003380A <AmiBlitz3.ab3@24488>   MOVEM.w D2-D3,-(A7)
00033810 <AmiBlitz3.ab3@24489>   MOVE.l lastoffset_org,-(A7)
00033816 <AmiBlitz3.ab3@24490>   MOVE.w varmode,-(A7)
00033820 <AmiBlitz3.ab3@24492>    MOVE.l #forthstack,forthsp
0003382A <AmiBlitz3.ab3@24493>    MOVE.l #precstack,precsp
00033830 <AmiBlitz3.ab3@24494>    CLR.w regnum
00033836 <AmiBlitz3.ab3@24495>    CLR.w nonew
0003383C <AmiBlitz3.ab3@24496>    CLR.w sbasegot
00033846 <AmiBlitz3.ab3@24497>    MOVE.w varcodelen,oldvcodelen
0003384C <AmiBlitz3.ab3@24498>    CLR.w varcodelen
00033854 <AmiBlitz3.ab3@24499>    MOVE.w #$FFFF,lasta6
00033856 <AmiBlitz3.ab3@24502>   MOVEQ.l #$07,D2
0003385A <AmiBlitz3.ab3@24503>    BSR.w eval
00033860 <AmiBlitz3.ab3@24504>   MOVE.w (A7)+,varmode
00033866 <AmiBlitz3.ab3@24505>   MOVE.l (A7)+,lastoffset_org
0003386C <AmiBlitz3.ab3@24506>   MOVE.w moved0a3,D1
00033872 <AmiBlitz3.ab3@24507>    JSR writeword
00033878 <AmiBlitz3.ab3@24508>   MOVE.w commode,D1
0003387C <AmiBlitz3.ab3@24509>    BEQ.w JL_0_DF38
00033882 <AmiBlitz3.ab3@24510>   LEA pulla2st,A0
00033888 <AmiBlitz3.ab3@24511>   LEA pulla2stf,A1
0003388E <AmiBlitz3.ab3@24512>    JSR pokecode
00033892 <AmiBlitz3.ab3@24513> BRA.w JL_0_DF3C
00033896 <AmiBlitz3.ab3@24516>   BSR.w JL_0_B63C
0003389A <AmiBlitz3.ab3@24519>   MOVEM.w (A7)+,D2-D3
0003389E <AmiBlitz3.ab3@24520>   BTST #$F,D2
000338A2 <AmiBlitz3.ab3@24521>   BNE.w JL_0_DF58
000338A8 <AmiBlitz3.ab3@24522>     MOVE.w D3,leaa5d3a2+2
000338AE <AmiBlitz3.ab3@24523>     MOVE.l leaa5d3a2,D1
000338B4 <AmiBlitz3.ab3@24524>     JSR pokela5s
000338B8 <AmiBlitz3.ab3@24527>   MOVE.w #$FE6F,D1
000338BE <AmiBlitz3.ab3@24528>   JSR uselib
000338C4 <AmiBlitz3.ab3@24529>   MOVE.l #$C700,D1
000338CA <AmiBlitz3.ab3@24530>   MOVE.l d1,lastinstruction
000338D0 <AmiBlitz3.ab3@24531>   MOVE.w varmode,D2
000338D4 <AmiBlitz3.ab3@24532>   BNE.w JL_0_DF70
000338D6 <AmiBlitz3.ab3@24533>     ADDQ.w #1,D1
000338DA <AmiBlitz3.ab3@24536>   BSR.w Atokejsr
000338DE <AmiBlitz3.ab3@24537>   CMP.w #$2C,D0
000338E2 <AmiBlitz3.ab3@24538>   BNE.w JL_0_E0C6
000338E8 <AmiBlitz3.ab3@24540>   MOVE.w addq4a2,D1
000338EE <AmiBlitz3.ab3@24541>   JSR writeword
000338F2 <AmiBlitz3.ab3@24542> BRA.w JL_0_E018
000338F8 <AmiBlitz3.ab3@24545> JMP error4char
000338FE <AmiBlitz3.ab3@24548> JMP error_convert_types
00033902 <AmiBlitz3.ab3@24552>    BTST #$E,D2
00033906 <AmiBlitz3.ab3@24553>    BNE.w JL_0_DF9C
00033908 <AmiBlitz3.ab3@24554>   TST.b D2
0003390C <AmiBlitz3.ab3@24555>    BEQ.w JUMP_noleterr
00033912 <AmiBlitz3.ab3@24556>    TST.b newsyntax
00033916 <AmiBlitz3.ab3@24557>    BEQ JL_0_DFA0
0003391A <AmiBlitz3.ab3@24560>    CMP.w #$4022,(a5)
0003391E <AmiBlitz3.ab3@24561>    BNE JL_0_DFA0
00033924 <AmiBlitz3.ab3@24562>    CMP.l #3,d2
00033928 <AmiBlitz3.ab3@24563>    BNE  JUMP_error_convert_types
0003392A <AmiBlitz3.ab3@24564>    ADDQ #2,a5
0003392C <AmiBlitz3.ab3@24565>    MOVEQ #0,d0
0003392E <AmiBlitz3.ab3@24566>    MOVE.b (a5)+,d0
00033932 <AmiBlitz3.ab3@24567>    BEQ JL_0_DFA0
00033936 <AmiBlitz3.ab3@24568>    CMP.b #$22,d0
0003393A <AmiBlitz3.ab3@24569>    BNE 'l1
0003393E <AmiBlitz3.ab3@24570>    MOVE.b #0,d0
00033942 <AmiBlitz3.ab3@24571> BRA 'do
00033944 <AmiBlitz3.ab3@24574>   ASL.l #8,d0
00033946 <AmiBlitz3.ab3@24575>    MOVE.b (a5)+,d0
0003394A <AmiBlitz3.ab3@24576>    BEQ JL_0_DFA0
0003394E <AmiBlitz3.ab3@24577>    CMP.b #$22,d0
00033952 <AmiBlitz3.ab3@24578>    BNE 'l2
00033956 <AmiBlitz3.ab3@24579>    MOVE.b #0,d0
00033958 <AmiBlitz3.ab3@24580>    ASR.l #8,d0
0003395C <AmiBlitz3.ab3@24581> BRA 'do
0003395E <AmiBlitz3.ab3@24584>   ASL.l #8,d0
00033960 <AmiBlitz3.ab3@24585>     MOVE.b (a5)+,d0
00033964 <AmiBlitz3.ab3@24586>    BEQ JL_0_DFA0
00033968 <AmiBlitz3.ab3@24587>    CMP.b #$22,d0
0003396C <AmiBlitz3.ab3@24588>    BNE 'l3
00033970 <AmiBlitz3.ab3@24589>    MOVE.b #0,d0
00033972 <AmiBlitz3.ab3@24590>    ASR.l #8,d0
00033976 <AmiBlitz3.ab3@24591> BRA 'do
00033978 <AmiBlitz3.ab3@24594>   ASL.l #8,d0
0003397A <AmiBlitz3.ab3@24595>     MOVE.b (a5)+,d0
0003397E <AmiBlitz3.ab3@24596>    BEQ JL_0_DFA0
00033982 <AmiBlitz3.ab3@24597>    CMP.b #$22,d0
00033986 <AmiBlitz3.ab3@24598>    BNE 'l4
0003398A <AmiBlitz3.ab3@24599>    MOVE.b #0,d0
0003398C <AmiBlitz3.ab3@24600>    ASR.l #8,d0
00033990 <AmiBlitz3.ab3@24601> BRA 'do
00033994 <AmiBlitz3.ab3@24604>    CMP.b #$22,(a5)+
00033998 <AmiBlitz3.ab3@24605>    BNE JUMP_error4char
0003399C <AmiBlitz3.ab3@24608>   MOVE.w #$2b7c,d1
000339A2 <AmiBlitz3.ab3@24609>    TST.w varmode
000339A6 <AmiBlitz3.ab3@24610>    BEQ 'g3
000339AA <AmiBlitz3.ab3@24611>    BCLR #9,d1
000339B0 <AmiBlitz3.ab3@24614>     JSR writeword
000339B2 <AmiBlitz3.ab3@24615>     MOVE.l d0,d1
000339B8 <AmiBlitz3.ab3@24616>     JSR writelong
000339BA <AmiBlitz3.ab3@24617>     MOVE.w d3,d1
000339C0 <AmiBlitz3.ab3@24618>     JSR writeword
000339C6 <AmiBlitz3.ab3@24619>     JSR get1bytemain
000339C8 <AmiBlitz3.ab3@24620> RTS
000339CE <AmiBlitz3.ab3@24626> JMP noleterr
000339D4 <AmiBlitz3.ab3@24630>   MOVE.w d2,vartype
000339D8 <AmiBlitz3.ab3@24631>   MOVE.b #$3,D2
000339DC <AmiBlitz3.ab3@24634>   CMP.b #5,d2
000339E0 <AmiBlitz3.ab3@24635>   BNE 'l1
000339E6 <AmiBlitz3.ab3@24636>   MOVE.l a2,currtype
000339EA <AmiBlitz3.ab3@24640>   MOVEM.w D2-D3,-(A7)
000339F0 <AmiBlitz3.ab3@24641>   MOVE.w varmode,-(A7)
000339F6 <AmiBlitz3.ab3@24642>   MOVE.l a2,leftsidetype
000339FA <AmiBlitz3.ab3@24643>   BTST #$f,d2
000339FE <AmiBlitz3.ab3@24644>   BEQ 'nomultiassign
00033A04 <AmiBlitz3.ab3@24645>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033A08 <AmiBlitz3.ab3@24646> 'nomultiassign  ANDI.w #$FF,D2
00033A0E <AmiBlitz3.ab3@24647>   MOVE.l lastoffset_org,-(A7)
00033A12 <AmiBlitz3.ab3@24648>   BSR.w eval                                ; calc right side of var assign
00033A16 <AmiBlitz3.ab3@24650>   MOVEM.l a0/a1,-(a7)
00033A1C <AmiBlitz3.ab3@24651>   MOVE.l leftsidetype,a0
00033A22 <AmiBlitz3.ab3@24652>   CMP.l #0,a0
00033A26 <AmiBlitz3.ab3@24653>   BEQ 'nocheck
00033A2E <AmiBlitz3.ab3@24654>   CMP.l #$100,4(a0)
00033A32 <AmiBlitz3.ab3@24655>   BLE 'nocheck
00033A38 <AmiBlitz3.ab3@24656>   TST.l typetocast
00033A3C <AmiBlitz3.ab3@24657>   BEQ 'nocast
00033A42 <AmiBlitz3.ab3@24658>   MOVE.l typetocast,a1
00033A46 <AmiBlitz3.ab3@24659>   BRA 'typecheck
00033A4C <AmiBlitz3.ab3@24660> 'nocast  TST.l rightsidetype
00033A50 <AmiBlitz3.ab3@24661>   BEQ 'nocheck
00033A56 <AmiBlitz3.ab3@24662>   MOVE.l rightsidetype,a1
00033A5E <AmiBlitz3.ab3@24663>   CMP.l #$100,4(a1)
00033A62 <AmiBlitz3.ab3@24664>   BGE 'typecheck
00033A6A <AmiBlitz3.ab3@24665>   CMP.l #$3,4(a1)
00033A6E <AmiBlitz3.ab3@24666>   BEQ 'ok                              ;long assign is allow with this codelines
00033A72 <AmiBlitz3.ab3@24667>   BRA 'error
00033A78 <AmiBlitz3.ab3@24669>   TST.b typecheck
00033A7C <AmiBlitz3.ab3@24670>   BEQ 'nocheck
00033A82 <AmiBlitz3.ab3@24671>   TST.b notypecheck
00033A86 <AmiBlitz3.ab3@24672>   BNE 'ok
00033A88 <AmiBlitz3.ab3@24673>   CMP.l a0,a1
00033A8C <AmiBlitz3.ab3@24674>   BEQ 'ok
00033A90 <AmiBlitz3.ab3@24676>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033A94 <AmiBlitz3.ab3@24677>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033A98 <AmiBlitz3.ab3@24678>   BEQ 'ok
00033A9E <AmiBlitz3.ab3@24680>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033AA4 <AmiBlitz3.ab3@24683>    CLR.l typetocast
00033AA8 <AmiBlitz3.ab3@24684>    MOVEM.l (a7)+, a0/a1
00033AAE <AmiBlitz3.ab3@24685>   MOVE.l (A7)+,lastoffset_org
00033AB4 <AmiBlitz3.ab3@24686>   MOVE.w commode,D1
00033AB8 <AmiBlitz3.ab3@24687>    BNE.w JL_0_DFCC
00033ABC <AmiBlitz3.ab3@24688>    BSR.w JL_0_B63C
00033AC2 <AmiBlitz3.ab3@24691>   MOVE.w (A7)+,varmode
00033AC6 <AmiBlitz3.ab3@24692>   MOVEM.w (A7)+,D2-D3
00033ACA <AmiBlitz3.ab3@24694>   MOVE.w #$2B40,D1
00033AD0 <AmiBlitz3.ab3@24695>   MOVE.w varmode,D4
00033AD4 <AmiBlitz3.ab3@24696>    BEQ.w JL_0_DFE8
00033AD8 <AmiBlitz3.ab3@24697>   BCLR #$9,D1
00033ADC <AmiBlitz3.ab3@24700>   BTST #$F,D2
00033AE0 <AmiBlitz3.ab3@24701>    BEQ.w JL_0_E090
00033AE6 <AmiBlitz3.ab3@24702>    TST.b stackcorrect
00033AEA <AmiBlitz3.ab3@24703>    BNE 'st1
00033AF0 <AmiBlitz3.ab3@24704>   MOVE.w commode,D1
00033AF4 <AmiBlitz3.ab3@24705>    BEQ.w JL_0_E004
00033AFA <AmiBlitz3.ab3@24708>   MOVE.w pulla2,D1
00033B00 <AmiBlitz3.ab3@24709>    JSR writeword
00033B04 <AmiBlitz3.ab3@24712>   MOVE.w #$2480,D1
00033B08 <AmiBlitz3.ab3@24713>    MOVEM.l a0/d0,-(a7)
00033B0E <AmiBlitz3.ab3@24714>    MOVEA.l lastoffset_org,A0
00033B10 <AmiBlitz3.ab3@24715>    MOVE.l A0,D0
00033B14 <AmiBlitz3.ab3@24716>    BEQ.w 'skip
00033B16 <AmiBlitz3.ab3@24717>    MOVEA.l D0,A0
00033B1E <AmiBlitz3.ab3@24718>    MOVE.l $A(A0),currtype
00033B22 <AmiBlitz3.ab3@24721>   MOVEM.l (a7)+,a0/d0
00033B26 <AmiBlitz3.ab3@24722>   CMP.w #$2C,D0
00033B2A <AmiBlitz3.ab3@24723>    BNE.w JL_0_E090
00033B2E <AmiBlitz3.ab3@24724>     MOVE.w #$24C0,D1
00033B32 <AmiBlitz3.ab3@24725>    BSR.w JL_0_E090                                         ;write store
00033B38 <AmiBlitz3.ab3@24728>    MOVE.l lastoffset_org,D0
00033B40 <AmiBlitz3.ab3@24732>   MOVE.w #$FFFF,commode
00033B46 <AmiBlitz3.ab3@24733>   CLR.w varcodelen
00033B4E <AmiBlitz3.ab3@24734>   MOVE.b #1,optiarray
00033B54 <AmiBlitz3.ab3@24735>   MOVE.w pusha2,D1
00033B5A <AmiBlitz3.ab3@24736>    JSR writeword
00033B60 <AmiBlitz3.ab3@24737>   TST.l lastoffset_org
00033B64 <AmiBlitz3.ab3@24738>   BEQ dimmore
00033B6A <AmiBlitz3.ab3@24739>   MOVEA.l lastoffset_org,A0
00033B6C <AmiBlitz3.ab3@24740>   MOVE.l (A0),D0
00033B70 <AmiBlitz3.ab3@24741>    BEQ.w JUMP_comerr
00033B72 <AmiBlitz3.ab3@24742>   MOVEA.l D0,A0
00033B78 <AmiBlitz3.ab3@24743>   MOVE.l A0,lastoffset_org
00033B7E <AmiBlitz3.ab3@24744>   BTST #$1,$7(A0)
00033B82 <AmiBlitz3.ab3@24745>    BNE.w JUMP_nocomerr
00033B86 <AmiBlitz3.ab3@24746>   MOVEA.l $A(A0),A1
00033B8A <AmiBlitz3.ab3@24747>   MOVE.l $4(A1),D2
00033B90 <AmiBlitz3.ab3@24750>   BTST #$0,$7(A0)
00033B94 <AmiBlitz3.ab3@24751>    BNE.w JL_0_E078
00033B9A <AmiBlitz3.ab3@24752>   CMP.l #$100,D2
00033B9E <AmiBlitz3.ab3@24753>    BCC.l JUMP_nocomerr
00033BA2 <AmiBlitz3.ab3@24754> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00033BA8 <AmiBlitz3.ab3@24757>         CLR.b optiarray
00033BAC <AmiBlitz3.ab3@24758>         CMP.w #"@@",(a5)
00033BB0 <AmiBlitz3.ab3@24759>         BEQ 'n1
00033BB4 <AmiBlitz3.ab3@24760> BRA 'd1
00033BBA <AmiBlitz3.ab3@24763>   JSR nextline
00033BBC <AmiBlitz3.ab3@24764>         MOVE.l a5,-(a7)
00033BBE <AmiBlitz3.ab3@24767>   MOVE.b (a5)+,d0
00033BC2 <AmiBlitz3.ab3@24768>         CMP.b #$20,d0
00033BC6 <AmiBlitz3.ab3@24769>         BEQ 'l2
00033BC8 <AmiBlitz3.ab3@24770>         MOVE.l (a7)+,a5
00033BCC <AmiBlitz3.ab3@24771>         CMP.b #";",d0
00033BD0 <AmiBlitz3.ab3@24772>         BEQ 'n1
00033BD6 <AmiBlitz3.ab3@24775>         TST.w debugmode
00033BDA <AmiBlitz3.ab3@24776>         BEQ JL_0_DEE0
00033BDC <AmiBlitz3.ab3@24777>         MOVE.l a0,-(a7)
00033BE2 <AmiBlitz3.ab3@24778>         MOVE.l pushat,a0
00033BE8 <AmiBlitz3.ab3@24779>         CMP.l #0,a0
00033BEC <AmiBlitz3.ab3@24780>         BNE 'o1
00033BF0 <AmiBlitz3.ab3@24781> BRA 'skip
00033BF8 <AmiBlitz3.ab3@24784>         ADD.l #1,2(a0)
00033BFE <AmiBlitz3.ab3@24787>   CLR.w commode
00033C06 <AmiBlitz3.ab3@24788>         MOVE.b #1,stackcorrect
00033C08 <AmiBlitz3.ab3@24789>         MOVE.l (a7)+,a0
00033C0E <AmiBlitz3.ab3@24790> JMP JL_0_DEE0
00033C14 <AmiBlitz3.ab3@24793> JMP nocomerr
00033C1A <AmiBlitz3.ab3@24796>   CMP.l #$100,D2
00033C1E <AmiBlitz3.ab3@24797>    BCS.w JL_0_E084
00033C20 <AmiBlitz3.ab3@24798>   MOVEQ.l #$00,D2
00033C24 <AmiBlitz3.ab3@24801>   BSET #$E,D2
00033C28 <AmiBlitz3.ab3@24804>   BSET #$F,D2
00033C2C <AmiBlitz3.ab3@24805> BRA.w JL_0_DEE0
00033C32 <AmiBlitz3.ab3@24808>    MOVE.l destpointer,a4
00033C3A <AmiBlitz3.ab3@24809>    MOVE.l #$f22a6400,-4(a4)
00033C40 <AmiBlitz3.ab3@24810>    MOVE.w arrayoffset,d1
00033C46 <AmiBlitz3.ab3@24811> JMP writeword
00033C4C <AmiBlitz3.ab3@24814> JMP comerr
00033C52 <AmiBlitz3.ab3@24817>    TST.b fpu
00033C56 <AmiBlitz3.ab3@24818>    BEQ 'nofloat
00033C5A <AmiBlitz3.ab3@24819>    CMP.b #5,d2
00033C5E <AmiBlitz3.ab3@24820>    BNE 'nofloat
00033C64 <AmiBlitz3.ab3@24821>    CLR.w fp0var
00033C6A <AmiBlitz3.ab3@24822>    LEA regtable,a4
00033C6C <AmiBlitz3.ab3@24823>    TST.l (a4)
00033C70 <AmiBlitz3.ab3@24824>    BEQ 'noreg
00033C74 <AmiBlitz3.ab3@24825>    BTST #15,d2                                             ;regvars
00033C78 <AmiBlitz3.ab3@24826>    BNE 'noreg
00033C7C <AmiBlitz3.ab3@24827>    CMP.w 0+4(a4),d3
00033C80 <AmiBlitz3.ab3@24828>    BNE 'doreg1
00033C86 <AmiBlitz3.ab3@24829>    MOVE.l #$f2000380,d1
00033C8C <AmiBlitz3.ab3@24830>    MOVE.w regnum,d0
00033C90 <AmiBlitz3.ab3@24831>    BNE 'noopt
00033C96 <AmiBlitz3.ab3@24837>    MOVE.l destpointer,a4
00033C9E <AmiBlitz3.ab3@24838>    CMP.l #$f2001c80,-8(a4)
00033CA2 <AmiBlitz3.ab3@24839>    BNE 'noopt
00033CAA <AmiBlitz3.ab3@24840>    CMP.l #$f2000422,-4(a4)
00033CAE <AmiBlitz3.ab3@24841>    BNE 'noopt
00033CB4 <AmiBlitz3.ab3@24842>    MOVE.l #$f20003a2,d1
00033CBE <AmiBlitz3.ab3@24843>    SUB.l #8,destpointer
00033CC0 <AmiBlitz3.ab3@24846>    ASL.w #7,d0
00033CC2 <AmiBlitz3.ab3@24847>    OR.w d0,d1
00033CC8 <AmiBlitz3.ab3@24848>    JSR writelong
00033CCA <AmiBlitz3.ab3@24849> RTS
00033CCE <AmiBlitz3.ab3@24852>   CMP.w 8+4(a4),d3
00033CD2 <AmiBlitz3.ab3@24853>    BNE 'doreg2
00033CD8 <AmiBlitz3.ab3@24854>    MOVE.l #$f2000300,d1
00033CDE <AmiBlitz3.ab3@24855>    MOVE.w regnum,d0
00033CE0 <AmiBlitz3.ab3@24856>    ASL.w #7,d0
00033CE2 <AmiBlitz3.ab3@24857>    OR.w d0,d1
00033CE8 <AmiBlitz3.ab3@24858>    JSR writelong
00033CEA <AmiBlitz3.ab3@24859> RTS
00033CEE <AmiBlitz3.ab3@24862>   CMP.w 16+4(a4),d3
00033CF2 <AmiBlitz3.ab3@24863>    BNE 'doreg3
00033CF8 <AmiBlitz3.ab3@24864>    MOVE.l #$f2000280,d1
00033CFE <AmiBlitz3.ab3@24865>    MOVE.w regnum,d0
00033D00 <AmiBlitz3.ab3@24866>    ASL.w #7,d0
00033D02 <AmiBlitz3.ab3@24867>    OR.w d0,d1
00033D08 <AmiBlitz3.ab3@24868>    JSR  writelong
00033D0A <AmiBlitz3.ab3@24869>  RTS
00033D0E <AmiBlitz3.ab3@24872>   CMP.w 24+4(a4),d3
00033D12 <AmiBlitz3.ab3@24873>    BNE 'doreg4
00033D18 <AmiBlitz3.ab3@24874>    MOVE.l #$f2000200,d1
00033D1E <AmiBlitz3.ab3@24875>    MOVE.w regnum,d0
00033D20 <AmiBlitz3.ab3@24876>    ASL.w #7,d0
00033D22 <AmiBlitz3.ab3@24877>    OR.w d0,d1
00033D28 <AmiBlitz3.ab3@24878>    JSR writelong
00033D2A <AmiBlitz3.ab3@24879> RTS
00033D2E <AmiBlitz3.ab3@24882>   CMP.w 32+4(a4),d3
00033D32 <AmiBlitz3.ab3@24883>    BNE 'noreg
00033D38 <AmiBlitz3.ab3@24884>    MOVE.l #$f2000180,d1
00033D3E <AmiBlitz3.ab3@24885>    MOVE.w regnum,d0
00033D40 <AmiBlitz3.ab3@24886>    ASL.w #7,d0
00033D42 <AmiBlitz3.ab3@24887>    OR.w d0,d1
00033D48 <AmiBlitz3.ab3@24888>    JSR writelong
00033D4A <AmiBlitz3.ab3@24889> RTS
00033D50 <AmiBlitz3.ab3@24892>    TST.w regnum
00033D54 <AmiBlitz3.ab3@24893>    BNE 'nofp0
00033D5A <AmiBlitz3.ab3@24894>    MOVE.l destpointer ,a4
00033D62 <AmiBlitz3.ab3@24895>    CMP.l #$f2304400,-6(a4)
00033D66 <AmiBlitz3.ab3@24896>    BNE 'do
00033D6C <AmiBlitz3.ab3@24897>    CMP.w #$1990,-2(a4)
00033D70 <AmiBlitz3.ab3@24898>    BNE 'do
00033D74 <AmiBlitz3.ab3@24899>    BTST #15,d2                                             ;types ?
00033D78 <AmiBlitz3.ab3@24900>    BNE 'do
00033D7E <AmiBlitz3.ab3@24901>   MOVE.l #$2b701990,d1                                     ;var
00033D84 <AmiBlitz3.ab3@24902>   TST.w varmode
00033D88 <AmiBlitz3.ab3@24903>   BEQ 'glob1
00033D8C <AmiBlitz3.ab3@24904>   BCLR #25,d1
00033D90 <AmiBlitz3.ab3@24907>   MOVE.l d1,-6(a4)
00033D94 <AmiBlitz3.ab3@24908>   MOVE.w d3,-2(a4)
00033D9A <AmiBlitz3.ab3@24909>   CLR.w fp0var
00033DA2 <AmiBlitz3.ab3@24910>   MOVE.w #$ffff,fp0mode
00033DA4 <AmiBlitz3.ab3@24911> RTS
00033DAC <AmiBlitz3.ab3@24914>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00033DB0 <AmiBlitz3.ab3@24915>    BNE 'do3
00033DBA <AmiBlitz3.ab3@24916>    CMP.l #newtype_double,currtype
00033DBE <AmiBlitz3.ab3@24917>    BEQ 'do4
00033DC2 <AmiBlitz3.ab3@24920>   MOVE.w #$2b6d,d1
00033DC8 <AmiBlitz3.ab3@24921>    TST.w varmode
00033DCC <AmiBlitz3.ab3@24922>    BEQ 'g2
00033DD0 <AmiBlitz3.ab3@24923>     BCLR #9,d1
00033DD4 <AmiBlitz3.ab3@24926>     CMP.w #$2b6d,d1
00033DD8 <AmiBlitz3.ab3@24927>     BNE 'd1
00033DDC <AmiBlitz3.ab3@24928>     CMP.w -2(a4),d3
00033DE0 <AmiBlitz3.ab3@24929>     BNE 'd1
00033DE6 <AmiBlitz3.ab3@24930>     SUBQ.l #6,destpointer
00033DEA <AmiBlitz3.ab3@24931> BRA 'd12
00033DEE <AmiBlitz3.ab3@24934>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00033DF4 <AmiBlitz3.ab3@24935>     MOVE.w -2(a4),-4(a4)
00033DF8 <AmiBlitz3.ab3@24936>     MOVE.w d3,-2(a4)
00033DFE <AmiBlitz3.ab3@24939>   CLR.w fp0var
00033E06 <AmiBlitz3.ab3@24940>     MOVE.w #$ffff,fp0mode
00033E08 <AmiBlitz3.ab3@24941> RTS
00033E10 <AmiBlitz3.ab3@24944>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00033E14 <AmiBlitz3.ab3@24945>    BNE 'do4
00033E18 <AmiBlitz3.ab3@24946>    MOVE.w #$2b6c,d1
00033E1E <AmiBlitz3.ab3@24947>       TST.w varmode
00033E22 <AmiBlitz3.ab3@24948>    BEQ 'g3
00033E26 <AmiBlitz3.ab3@24949>    BCLR #9,d1
00033E2A <AmiBlitz3.ab3@24952>   MOVE.w d1,-6(a4)
00033E30 <AmiBlitz3.ab3@24953>     MOVE.w -2(a4),-4(a4)
00033E34 <AmiBlitz3.ab3@24954>     MOVE.w d3,-2(a4)
00033E3A <AmiBlitz3.ab3@24955>     CLR.w fp0var
00033E42 <AmiBlitz3.ab3@24956>     MOVE.w #$ffff,fp0mode
00033E44 <AmiBlitz3.ab3@24957> RTS
00033E4A <AmiBlitz3.ab3@24960>   MOVE.w d3,fp0var
00033E54 <AmiBlitz3.ab3@24961>    MOVE.w varmode,fp0mode
00033E56 <AmiBlitz3.ab3@24962>    ADDQ.l #6,a4
00033E5C <AmiBlitz3.ab3@24963>    MOVE.l a4,fp0addr
00033E66 <AmiBlitz3.ab3@24964>    MOVE.l firstiff,fp0iff
00033E6A <AmiBlitz3.ab3@24967>   MOVEM.l d0/d4,-(a7)
00033E6C <AmiBlitz3.ab3@24968>    MOVEQ #0,d0
00033E72 <AmiBlitz3.ab3@24969>     MOVE.w regnum,d0
00033E74 <AmiBlitz3.ab3@24970>    ASL.w #7,d0                                             ;fpu store var
00033E78 <AmiBlitz3.ab3@24971>   BTST #15,d2
00033E7C <AmiBlitz3.ab3@24972>    BEQ 'var
00033E7E <AmiBlitz3.ab3@24973>    MOVE.w d1,d4
00033E82 <AmiBlitz3.ab3@24974>    CMP.w #$24c0,d4
00033E86 <AmiBlitz3.ab3@24975>    BNE 'nopl
00033E8C <AmiBlitz3.ab3@24976>    MOVE.l #$f21a6400,d1
00033E8E <AmiBlitz3.ab3@24977>    MOVEQ #0,d3
00033E92 <AmiBlitz3.ab3@24978> BRA 'glob
00033E98 <AmiBlitz3.ab3@24982>   MOVE.l #$f2126400,d1
00033E9A <AmiBlitz3.ab3@24983>    TST.w d3                                                ;offset =0
00033E9E <AmiBlitz3.ab3@24984>    BNE 'offset
00033EA4 <AmiBlitz3.ab3@24985>    MOVE.l #$f2126400,d1
00033EA6 <AmiBlitz3.ab3@24993>    MOVEQ #0,d3
00033EAA <AmiBlitz3.ab3@24994> BRA 'glob
00033EB0 <AmiBlitz3.ab3@24997>   MOVE.l #$f22d6400,d1                                     ;var
00033EB6 <AmiBlitz3.ab3@24998>   TST.w varmode
00033EBA <AmiBlitz3.ab3@24999>   BEQ 'glob
00033EBE <AmiBlitz3.ab3@25000>   BCLR #16,d1
00033EC0 <AmiBlitz3.ab3@25001>  'glob OR.l d0,d1
00033ECA <AmiBlitz3.ab3@25004>   CMP.l #newtype_double,currtype
00033ECE <AmiBlitz3.ab3@25005>   BNE 'dbl1
00033ED4 <AmiBlitz3.ab3@25006>   OR.l #$00001000,d1
00033EDA <AmiBlitz3.ab3@25009>   JSR writelong
00033EE0 <AmiBlitz3.ab3@25010>   CLR.l currtype
00033EE4 <AmiBlitz3.ab3@25011>   MOVEM.l (a7)+,d0/d4
00033EE6 <AmiBlitz3.ab3@25012>   MOVE.l d3,d1
00033EEA <AmiBlitz3.ab3@25013>   BEQ 'nooffs
00033EF0 <AmiBlitz3.ab3@25014> JMP writeword
00033EF2 <AmiBlitz3.ab3@25017> RTS
00033EF8 <AmiBlitz3.ab3@25031>     TST.b fast                                             ;write lea->xx(a2)
00033EFC <AmiBlitz3.ab3@25032>    BEQ 'la10
00033F02 <AmiBlitz3.ab3@25036>    TST.b quickadd
00033F08 <AmiBlitz3.ab3@25038>      CLR.b quickadd
00033F0C <AmiBlitz3.ab3@25039>    CMP.w #$2480,d1
00033F10 <AmiBlitz3.ab3@25040>    BNE 'la10
00033F16 <AmiBlitz3.ab3@25041>    TST.b optiarray
00033F1A <AmiBlitz3.ab3@25042>    BNE 'la10
00033F20 <AmiBlitz3.ab3@25043>    MOVE.l destpointer,a4
00033F26 <AmiBlitz3.ab3@25044>    CMP.w #$45ea,-4(a4)
00033F2A <AmiBlitz3.ab3@25045>    BNE 'la10
00033F32 <AmiBlitz3.ab3@25046>    CMP.w #8,pushclen
00033F36 <AmiBlitz3.ab3@25047>    BEQ 'la100
00033F3E <AmiBlitz3.ab3@25048>    CMP.w #6,pushclen
00033F42 <AmiBlitz3.ab3@25049>    BNE 'la10
00033F46 <AmiBlitz3.ab3@25050>    CMP.b #3,d2
00033F4A <AmiBlitz3.ab3@25051>    BCS 'la110
00033F50 <AmiBlitz3.ab3@25053>    MOVE.w #$2540,-2(a4)
00033F56 <AmiBlitz3.ab3@25054>    MOVE.w arrayoffset,d1
00033F5C <AmiBlitz3.ab3@25055> JMP writeword
00033F62 <AmiBlitz3.ab3@25058>    CLR.b quickadd
00033F64 <AmiBlitz3.ab3@25059> RTS
00033F68 <AmiBlitz3.ab3@25062>    CMP.b #2,d2
00033F6C <AmiBlitz3.ab3@25063>    BNE 'la120
00033F72 <AmiBlitz3.ab3@25064>     MOVE.w #$3540,-2(a4)
00033F78 <AmiBlitz3.ab3@25065>    MOVE.w arrayoffset,d1
00033F7E <AmiBlitz3.ab3@25066> JMP writeword
00033F82 <AmiBlitz3.ab3@25069>   CMP.b #1,d2
00033F86 <AmiBlitz3.ab3@25070>    BNE.s 'la10
00033F8C <AmiBlitz3.ab3@25071>     MOVE.w #$1540,-2(a4)
00033F92 <AmiBlitz3.ab3@25072>    MOVE.w arrayoffset,d1
00033F98 <AmiBlitz3.ab3@25073> JMP writeword
00033F9C <AmiBlitz3.ab3@25076>    CMP.b #3,d2
00033FA0 <AmiBlitz3.ab3@25077>    BCS 'la11
00033FA6 <AmiBlitz3.ab3@25078>    MOVE.w #$2540,-4(a4)
00033FA8 <AmiBlitz3.ab3@25079> RTS
00033FAC <AmiBlitz3.ab3@25082>    CMP.b #2,d2
00033FB0 <AmiBlitz3.ab3@25083>    BNE 'la12
00033FB6 <AmiBlitz3.ab3@25084>     MOVE.w #$3540,-4(a4)
00033FB8 <AmiBlitz3.ab3@25085> RTS
00033FBC <AmiBlitz3.ab3@25087>  'la12 CMP.b #1,d2
00033FC0 <AmiBlitz3.ab3@25088>    BNE.s 'la10
00033FC6 <AmiBlitz3.ab3@25089>     MOVE.w #$1540,-4(a4)
00033FC8 <AmiBlitz3.ab3@25090> RTS
00033FCE <AmiBlitz3.ab3@25093>   CLR.b optiarray
00033FD2 <AmiBlitz3.ab3@25094>    CMP.b #$1,D2
00033FD6 <AmiBlitz3.ab3@25095>    BEQ.w JL_0_E0AC
00033FDA <AmiBlitz3.ab3@25096>    BSR.w varalign
00033FDE <AmiBlitz3.ab3@25097>    CMP.b #$3,D2
00033FE2 <AmiBlitz3.ab3@25098>    BCC.w writevarlong
00033FE8 <AmiBlitz3.ab3@25099>    TST.b fast                                              ;optiimmi
00033FEC <AmiBlitz3.ab3@25100>    BEQ 'l10b
00033FF2 <AmiBlitz3.ab3@25105>    MOVE.l destpointer,a0
00033FF8 <AmiBlitz3.ab3@25106>    SUB.l imm_addr,a0
00033FFE <AmiBlitz3.ab3@25107>    CMP.l #4,a0
00034002 <AmiBlitz3.ab3@25108>    BNE 'l10
00034008 <AmiBlitz3.ab3@25109>    CLR.l imm_addr
0003400E <AmiBlitz3.ab3@25110>    MOVE.l destpointer,a4
00034012 <AmiBlitz3.ab3@25111>    OR.w #$107c,d1
00034016 <AmiBlitz3.ab3@25112>    MOVE.w d1,-4(a4)
00034018 <AmiBlitz3.ab3@25113>     MOVE.w D3,D1
0003401E <AmiBlitz3.ab3@25114> JMP writeword
00034024 <AmiBlitz3.ab3@25117>   MOVE.l destpointer,a0
0003402A <AmiBlitz3.ab3@25118>   SUB.l load_var_addr,a0
00034030 <AmiBlitz3.ab3@25119>   CMP.l #4,a0
00034034 <AmiBlitz3.ab3@25120>   BNE 'l10b
0003403A <AmiBlitz3.ab3@25121>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
0003403E <AmiBlitz3.ab3@25122>   BNE 'l10b
00034044 <AmiBlitz3.ab3@25124>   CLR.l load_var_addr
0003404A <AmiBlitz3.ab3@25125>   MOVE.l destpointer,a4
0003404E <AmiBlitz3.ab3@25126>   OR.w #$102d,d1
00034052 <AmiBlitz3.ab3@25127>   MOVE.w d1,-4(a4)
00034054 <AmiBlitz3.ab3@25128>   MOVE.w d3,d1
0003405A <AmiBlitz3.ab3@25129> JMP writeword
0003405E <AmiBlitz3.ab3@25132>   ORI.w #$1000,D1                                          ;word
00034062 <AmiBlitz3.ab3@25133> BRA.w writestorevar
00034068 <AmiBlitz3.ab3@25137>    TST.b fast                                              ;optiimmi
0003406C <AmiBlitz3.ab3@25138>    BEQ 'l10b
00034072 <AmiBlitz3.ab3@25143>    MOVE.l destpointer,a0
00034078 <AmiBlitz3.ab3@25144>    SUB.l imm_addr,a0
0003407E <AmiBlitz3.ab3@25145>    CMP.l #4,a0
00034082 <AmiBlitz3.ab3@25146>    BNE 'l10
00034088 <AmiBlitz3.ab3@25147>    CLR.l imm_addr
0003408E <AmiBlitz3.ab3@25148>    MOVE.l destpointer,a4
00034092 <AmiBlitz3.ab3@25149>    OR.w #$7c,d1
00034096 <AmiBlitz3.ab3@25150>    EORI #$3000,d1
0003409A <AmiBlitz3.ab3@25151>    MOVE.w d1,-4(a4)
0003409C <AmiBlitz3.ab3@25152>       MOVE.w D3,D1
000340A2 <AmiBlitz3.ab3@25153> JMP writeword
000340A8 <AmiBlitz3.ab3@25156>   MOVE.l destpointer,a0
000340AE <AmiBlitz3.ab3@25157>   SUB.l load_var_addr,a0
000340B4 <AmiBlitz3.ab3@25158>   CMP.l #4,a0
000340B8 <AmiBlitz3.ab3@25159>   BNE 'l10b
000340BE <AmiBlitz3.ab3@25160>   CLR.l load_var_addr
000340C4 <AmiBlitz3.ab3@25161>   MOVE.l destpointer,a4
000340CA <AmiBlitz3.ab3@25162>    CMP.w #$1b6d,-4(a4)
000340CE <AmiBlitz3.ab3@25163>    BNE 'l10b
000340D2 <AmiBlitz3.ab3@25164>    OR.w #$2d,d1
000340D6 <AmiBlitz3.ab3@25165>    EORI #$3000,d1
000340DA <AmiBlitz3.ab3@25166>    MOVE.w d1,-4(a4)
000340DC <AmiBlitz3.ab3@25167>   MOVE.w d3,d1
000340E2 <AmiBlitz3.ab3@25168> JMP writeword
000340E8 <AmiBlitz3.ab3@25171>   ADDQ.w #1,pcodd                                          ;byte
000340EC <AmiBlitz3.ab3@25172>   EORI.w #$3000,D1
000340F2 <AmiBlitz3.ab3@25175>   JSR writeword
000340F6 <AmiBlitz3.ab3@25176>   BTST #$7,D1
000340FA <AmiBlitz3.ab3@25177>    BNE JL_0_E0C6
000340FC <AmiBlitz3.ab3@25178>   MOVE.w D3,D1
00034102 <AmiBlitz3.ab3@25179> JMP writeword
00034108 <AmiBlitz3.ab3@25182>    TST.b fast                                              ;optiimmi
0003410C <AmiBlitz3.ab3@25183>    BEQ 'l10b
00034112 <AmiBlitz3.ab3@25187>    MOVE.l destpointer,a0
00034118 <AmiBlitz3.ab3@25188>    SUB.l imm_addr,a0
0003411E <AmiBlitz3.ab3@25189>    CMP.l #6,a0
00034122 <AmiBlitz3.ab3@25190>    BNE 'l10
00034128 <AmiBlitz3.ab3@25191>    CLR.l imm_addr
0003412E <AmiBlitz3.ab3@25192>    MOVE.l destpointer,a4
00034132 <AmiBlitz3.ab3@25193>    OR.w #$7c,d1
00034136 <AmiBlitz3.ab3@25194>    MOVE.w d1,-6(a4)
00034138 <AmiBlitz3.ab3@25195>     MOVE.w D3,D1
0003413E <AmiBlitz3.ab3@25196> JMP writeword
00034144 <AmiBlitz3.ab3@25199>   MOVE.l destpointer,a0
0003414A <AmiBlitz3.ab3@25200>   SUB.l load_var_addr,a0
00034150 <AmiBlitz3.ab3@25201>   CMP.l #4,a0
00034154 <AmiBlitz3.ab3@25202>   BNE 'l10b
0003415A <AmiBlitz3.ab3@25203>   CLR.l load_var_addr
00034160 <AmiBlitz3.ab3@25204>   MOVE.l destpointer,a4
00034166 <AmiBlitz3.ab3@25205>   CMP.w #$245f,-2(a4)
0003416A <AmiBlitz3.ab3@25206>   BEQ 'l10b
0003416E <AmiBlitz3.ab3@25207>   OR.w #$28,d1
00034172 <AmiBlitz3.ab3@25208>   OR.w d1,-4(a4)
00034178 <AmiBlitz3.ab3@25209>   CMP.w #$2b6d,-4(a4)
0003417C <AmiBlitz3.ab3@25210>   BNE 'd1
00034180 <AmiBlitz3.ab3@25211>   CMP.w -2(a4),d3
00034184 <AmiBlitz3.ab3@25212>   BNE 'd1
0003418A <AmiBlitz3.ab3@25213>   SUBQ.l #4,destpointer
0003418C <AmiBlitz3.ab3@25214> RTS
0003418E <AmiBlitz3.ab3@25217>   MOVE.w d3,d1
00034194 <AmiBlitz3.ab3@25218> JMP writeword
0003419A <AmiBlitz3.ab3@25221>   JSR writeword
0003419E <AmiBlitz3.ab3@25222>   BTST #$7,D1
000341A2 <AmiBlitz3.ab3@25223>    BNE.b JL_0_E0C6
000341A4 <AmiBlitz3.ab3@25224>   MOVE.w D3,D1
000341AA <AmiBlitz3.ab3@25225> JMP writeword
000341AC <AmiBlitz3.ab3@25228> RTS
000341AE <AmiBlitz3.ab3@25232>   MOVE.w D1,-(A7)
000341B2 <AmiBlitz3.ab3@25233>   MOVE.w pcodd(PC),D1
000341B4 <AmiBlitz3.ab3@25234>   LSR.w #1,D1
000341B8 <AmiBlitz3.ab3@25235>    BCC.b JL_0_E0E2
000341BE <AmiBlitz3.ab3@25236>   CLR.w pcodd
000341C4 <AmiBlitz3.ab3@25237>   MOVE.w add1a2,D1
000341CA <AmiBlitz3.ab3@25238>    JSR writeword
000341CC <AmiBlitz3.ab3@25241>   MOVE.w (A7)+,D1
000341CE <AmiBlitz3.ab3@25242> RTS
000341D0 <AmiBlitz3.ab3@25246> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
000341D2 <AmiBlitz3.ab3@25249> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
000341D4 <AmiBlitz3.ab3@25250> listadd:   Ds.w 1                                          ;set to 8 if it's a list
000341D6 <AmiBlitz3.ab3@25251> listsize:  Ds.w 1
000341DC <AmiBlitz3.ab3@25255>   ADDQ.w #1,regnum
000341E4 <AmiBlitz3.ab3@25256>   MOVE.b #1,nowdeclare
000341EA <AmiBlitz3.ab3@25257>   CLR.b dimkeep
000341F2 <AmiBlitz3.ab3@25258>    CMP.l #"KEEP",-1(a5)
000341F6 <AmiBlitz3.ab3@25259>   BNE 'nokeep
000341FC <AmiBlitz3.ab3@25260>   CMP.b #" ",3(a5)
00034200 <AmiBlitz3.ab3@25261>   BNE 'nokeep
00034202 <AmiBlitz3.ab3@25262>   ADDQ.l #3,a5
00034206 <AmiBlitz3.ab3@25265>     CMP.b #" ",(a5)
0003420A <AmiBlitz3.ab3@25266>     BNE '1
0003420C <AmiBlitz3.ab3@25267>    ADDQ #1,a5
00034210 <AmiBlitz3.ab3@25268> BRA '2
00034216 <AmiBlitz3.ab3@25271>   MOVE.l a5,lastsourcepos
0003421E <AmiBlitz3.ab3@25272>   MOVE.b #1,dimkeep
00034222 <AmiBlitz3.ab3@25280>   MOVE.w #$FF9A,D1
00034228 <AmiBlitz3.ab3@25281>   JSR uselib
0003422E <AmiBlitz3.ab3@25284>   CLR.w listadd
00034232 <AmiBlitz3.ab3@25285>   CMP.w #-$7F4D,D0
00034236 <AmiBlitz3.ab3@25286>    BNE.w JL_0_E11E
0003423E <AmiBlitz3.ab3@25287>   MOVE.w #$0008,listadd
00034242 <AmiBlitz3.ab3@25288>   MOVE.w #$FFFA,D1
00034248 <AmiBlitz3.ab3@25289>    JSR uselib
0003424E <AmiBlitz3.ab3@25290>    JSR get1bytemain
00034254 <AmiBlitz3.ab3@25293>   CLR.w nonew
0003425A <AmiBlitz3.ab3@25294>    JSR getparameter
00034262 <AmiBlitz3.ab3@25295>   BTST #$1,flagmask+1
00034266 <AmiBlitz3.ab3@25296>    BEQ.w JUMP_syntaxerr
0003426C <AmiBlitz3.ab3@25297>    JSR JL_0_8E3C
00034272 <AmiBlitz3.ab3@25298>   MOVE.w notshared,D1
00034276 <AmiBlitz3.ab3@25299>    BNE.w JL_0_E198
0003427E <AmiBlitz3.ab3@25300>   MOVE.w $8(A3),temp1
00034284 <AmiBlitz3.ab3@25301>   MOVE.w proceduremode,D2
00034288 <AmiBlitz3.ab3@25302>    BNE.w JL_0_E176
0003428E <AmiBlitz3.ab3@25303>   MOVE.w globalvarpointer,-(A7)
00034296 <AmiBlitz3.ab3@25304>   MOVE.w $4(A3),globalvarpointer
0003429C <AmiBlitz3.ab3@25305>   ADDQ.w #4,globalvarpointer
000342A0 <AmiBlitz3.ab3@25306>    BSR.w write_dim_code
000342A6 <AmiBlitz3.ab3@25307>   MOVE.w (A7)+,globalvarpointer
000342AA <AmiBlitz3.ab3@25308> BRA.w JL_0_E1BA
000342B0 <AmiBlitz3.ab3@25319>   MOVE.w globalvarpointer,-(A7)
000342B6 <AmiBlitz3.ab3@25320>             MOVE.w proceduremode,-(a7)
000342BC <AmiBlitz3.ab3@25321>             CLR.w proceduremode
000342C4 <AmiBlitz3.ab3@25322>   MOVE.w $4(A3),globalvarpointer
000342CA <AmiBlitz3.ab3@25323>   ADDQ.w #4,globalvarpointer
000342CE <AmiBlitz3.ab3@25324>    BSR.w write_dim_code
000342D4 <AmiBlitz3.ab3@25325>    MOVE.w (a7)+,proceduremode
000342DA <AmiBlitz3.ab3@25326>   MOVE.w (A7)+,globalvarpointer
000342DE <AmiBlitz3.ab3@25327> BRA.w JL_0_E1BA
000342E6 <AmiBlitz3.ab3@25330>   MOVE.w #$FFFF,temp1
000342EA <AmiBlitz3.ab3@25331>   MOVE.w listadd(PC),D1
000342EE <AmiBlitz3.ab3@25332>    BEQ.w JL_0_E1B6
000342F6 <AmiBlitz3.ab3@25333>   MOVE.w #$4000,temp1
000342FC <AmiBlitz3.ab3@25334>   BSET #$0,$6(A3)
00034302 <AmiBlitz3.ab3@25337>         TST.w proceduremode
00034306 <AmiBlitz3.ab3@25338>        BNE 'l1
0003430C <AmiBlitz3.ab3@25339>        MOVE.w locvaroff,-(a7)
00034310 <AmiBlitz3.ab3@25342>   BSR.w write_dim_code
00034316 <AmiBlitz3.ab3@25343>         TST.w proceduremode
0003431A <AmiBlitz3.ab3@25344>         BNE JL_0_E1BA
00034320 <AmiBlitz3.ab3@25345>        MOVE.w (A7)+,locvaroff
00034326 <AmiBlitz3.ab3@25348>   JSR get1bytemain
0003432A <AmiBlitz3.ab3@25349>   CMP.w #$2C,D0
0003432E <AmiBlitz3.ab3@25350>    BNE.w JL_0_E1CE
00034334 <AmiBlitz3.ab3@25351>    JSR get1bytemain
00034338 <AmiBlitz3.ab3@25352> BRA.w JL_0_E0FC
0003433A <AmiBlitz3.ab3@25355> RTS
00034342 <AmiBlitz3.ab3@25358>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034348 <AmiBlitz3.ab3@25359>   MOVE.w beginarr,D1
0003434E <AmiBlitz3.ab3@25360>    JSR writeword
00034350 <AmiBlitz3.ab3@25361>   MOVEQ.l #$00,D1
00034356 <AmiBlitz3.ab3@25362>    JSR writeword
00034358 <AmiBlitz3.ab3@25363>   MOVEQ.l #$04,D1
00034360 <AmiBlitz3.ab3@25364>   BTST #$0,flagmask+1
00034364 <AmiBlitz3.ab3@25365>    BNE.w write_dim_code__pointer
00034368 <AmiBlitz3.ab3@25366>   MOVE.w $8(A2),D1
0003436C <AmiBlitz3.ab3@25369>   ADD.w listadd(PC),D1                                     ;size of one element.
00034372 <AmiBlitz3.ab3@25370>   MOVE.w D1,listsize
00034378 <AmiBlitz3.ab3@25371>    JSR writeword
0003437E <AmiBlitz3.ab3@25372>   CLR.w temp2                                              ;# dim's got
00034380 <AmiBlitz3.ab3@25373>   MOVE.l A3,-(A7)
00034386 <AmiBlitz3.ab3@25376>   ADDQ.w #1,temp2
00034388 <AmiBlitz3.ab3@25377>   MOVEQ.l #$03,D2                                          ;get word
0003438E <AmiBlitz3.ab3@25378>   MOVE.w notshared,-(a7)
00034394 <AmiBlitz3.ab3@25379>    JSR eval
0003439A <AmiBlitz3.ab3@25380>   MOVE.w (a7)+,notshared
000343A0 <AmiBlitz3.ab3@25381>   TST.b debugmode
000343A4 <AmiBlitz3.ab3@25382>    BEQ.w write_dim_code__norerr0
000343A8 <AmiBlitz3.ab3@25383>   MOVE.w #$C30F,D1
000343AC <AmiBlitz3.ab3@25389>       MOVE.w #$5281,d1
000343B2 <AmiBlitz3.ab3@25390>       JSR writeword
000343B8 <AmiBlitz3.ab3@25391>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
000343BE <AmiBlitz3.ab3@25392>       JSR writelong
000343C4 <AmiBlitz3.ab3@25393>   MOVE.w proceduremode,D2
000343C8 <AmiBlitz3.ab3@25394>    BEQ.w write_dim_code__global
000343CE <AmiBlitz3.ab3@25395>   SUBQ.w #4,locvaroff
000343D8 <AmiBlitz3.ab3@25396>   MOVE.w locvaroff,putarr+2
000343DC <AmiBlitz3.ab3@25397> BRA.w write_dim_code__doit
000343E2 <AmiBlitz3.ab3@25400> JMP syntaxerr
000343EC <AmiBlitz3.ab3@25403>   MOVE.w globalvarpointer,putarr+2
000343F2 <AmiBlitz3.ab3@25404>   ADDQ.w #4,globalvarpointer
000343F8 <AmiBlitz3.ab3@25407>   TST.b dimkeep
000343FC <AmiBlitz3.ab3@25408>            BEQ write_dim_code__doit_l1
000343FE <AmiBlitz3.ab3@25409>       MOVEQ #0,d1
00034404 <AmiBlitz3.ab3@25410>       MOVE.w putarr+2,d1
0003440A <AmiBlitz3.ab3@25411>       OR.l  #$222d0000,d1
00034410 <AmiBlitz3.ab3@25412>       MOVE.w proceduremode,D2
00034414 <AmiBlitz3.ab3@25413>       BEQ write_dim_code__doit_l2
0003441A <AmiBlitz3.ab3@25414>       TST.w notshared
0003441E <AmiBlitz3.ab3@25415>       BEQ write_dim_code__doit_l2
00034424 <AmiBlitz3.ab3@25416>       SUB.l #$00010000,d1
0003442A <AmiBlitz3.ab3@25419>   JSR writelong
00034430 <AmiBlitz3.ab3@25422>   MOVE.l putarr,D1
00034436 <AmiBlitz3.ab3@25423>       TST.w notshared
0003443A <AmiBlitz3.ab3@25424>       BNE write_dim_code__doit_l1a
00034440 <AmiBlitz3.ab3@25425>       JSR writelong
00034444 <AmiBlitz3.ab3@25426> BRA write_dim_code__doit_l4
0003444A <AmiBlitz3.ab3@25429>   JSR pokela5d
0003444E <AmiBlitz3.ab3@25432>   CMP.w #$2C,D0
00034452 <AmiBlitz3.ab3@25433>    BEQ.w write_dim_code__loop
00034456 <AmiBlitz3.ab3@25434>   CMP.w #$29,D0
0003445A <AmiBlitz3.ab3@25435>    BNE.w JUMP_syntaxerr
0003445C <AmiBlitz3.ab3@25436>   MOVEA.l (A7)+,A3
00034462 <AmiBlitz3.ab3@25437>   MOVE.w temp1,D1
00034466 <AmiBlitz3.ab3@25438>    BMI.w write_dim_code__nocare
0003446A <AmiBlitz3.ab3@25442>   BTST #$E,D1
0003446E <AmiBlitz3.ab3@25443>    BEQ.w write_dim_code__notl
00034476 <AmiBlitz3.ab3@25444>   CMPI.w #$1,temp2
0003447A <AmiBlitz3.ab3@25445>    BNE.w JUMP_redimerr
0003447E <AmiBlitz3.ab3@25446> BRA.w write_dim_code__nocare
00034484 <AmiBlitz3.ab3@25449> JMP redimerr
0003448A <AmiBlitz3.ab3@25452>   CMP.w temp2,D1
0003448E <AmiBlitz3.ab3@25453>    BNE.w JUMP_redimerr                                      ;range too long
00034494 <AmiBlitz3.ab3@25456>   LEA globalvarpointer,A0
0003449A <AmiBlitz3.ab3@25457>   MOVE.w proceduremode,D1
0003449E <AmiBlitz3.ab3@25458>   BEQ.w write_dim_code__gskip
000344A4 <AmiBlitz3.ab3@25459>   LEA locvaroff,A0
000344AA <AmiBlitz3.ab3@25462>   MOVE.W  extraword,(A0)
000344AE <AmiBlitz3.ab3@25463>   BRA.W   write_dim_code__care
000344B6 <AmiBlitz3.ab3@25466>   MOVE.w temp2,$8(A3)                                      ;set # dim's
000344BC <AmiBlitz3.ab3@25469>   LEA doarr,A0
000344C2 <AmiBlitz3.ab3@25470>   MOVE.w $4(A3),$2(A0)
000344CA <AmiBlitz3.ab3@25471>   MOVE.w putarr+2,$6(A0)
000344CC <AmiBlitz3.ab3@25472>   MOVE.l (A0)+,D1
000344D2 <AmiBlitz3.ab3@25473>    JSR writelong
000344D4 <AmiBlitz3.ab3@25474>   MOVE.l (A0),D1
000344DA <AmiBlitz3.ab3@25475>    JSR writelong
000344E0 <AmiBlitz3.ab3@25476>    TST.b dimkeep
000344E4 <AmiBlitz3.ab3@25477>   BNE write_dim_code__care_l3
000344E8 <AmiBlitz3.ab3@25480>   MOVE.w #$C400,D1
000344EC <AmiBlitz3.ab3@25481> BRA write_dim_code__care_l2
000344F0 <AmiBlitz3.ab3@25484>   MOVE.w #$C405,d1
000344F6 <AmiBlitz3.ab3@25487>   MOVE.w proceduremode,D2
000344FA <AmiBlitz3.ab3@25488>    BEQ.w write_dim_code__isg
00034500 <AmiBlitz3.ab3@25489>    TST.w notshared
00034504 <AmiBlitz3.ab3@25490>    BEQ write_dim_code__isg
00034506 <AmiBlitz3.ab3@25491>   ADDQ.w #1,D1
0003450A <AmiBlitz3.ab3@25494>   MOVE.w listadd(PC),D2
0003450E <AmiBlitz3.ab3@25495>    BEQ.w write_dim_code__isrg
00034510 <AmiBlitz3.ab3@25496>   MOVE.w D1,-(A7)
00034514 <AmiBlitz3.ab3@25497>   MOVE.w setles(PC),D1
0003451A <AmiBlitz3.ab3@25498>    JSR writeword
0003451E <AmiBlitz3.ab3@25499>   MOVE.w listsize(PC),D1
00034524 <AmiBlitz3.ab3@25500>    JSR writeword
00034526 <AmiBlitz3.ab3@25501>   MOVE.w (A7)+,D1
00034528 <AmiBlitz3.ab3@25502>   ADDQ.w #3,D1
0003452C <AmiBlitz3.ab3@25505> BRA.w Atokejsr
00034532 <AmiBlitz3.ab3@25512>     MOVE.l #$f23c4400,d1
00034538 <AmiBlitz3.ab3@25514>   MOVE.w regnum,d0
0003453A <AmiBlitz3.ab3@25515>   ASL.w #7,d0
0003453C <AmiBlitz3.ab3@25516>   OR.w d0,d1
00034542 <AmiBlitz3.ab3@25517>   JSR writelong
00034548 <AmiBlitz3.ab3@25523>     MOVE.l #$40490fd9,d1
0003454E <AmiBlitz3.ab3@25525>   JSR writelong
00034554 <AmiBlitz3.ab3@25526> JMP get1bytemain
00034558 <AmiBlitz3.ab3@25530> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
0003455C <AmiBlitz3.ab3@25537> vbr:                Ds.l 1
0003455E <AmiBlitz3.ab3@25538> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034564 <AmiBlitz3.ab3@25540> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034568 <AmiBlitz3.ab3@25544> constpcat:          Ds.l 1
0003456C <AmiBlitz3.ab3@25545> constlibat:         Ds.l 1
00034570 <AmiBlitz3.ab3@25546> constmaxpc:         Dc.l $400
00034574 <AmiBlitz3.ab3@25548> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034578 <AmiBlitz3.ab3@25549> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
0003457C <AmiBlitz3.ab3@25550> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034580 <AmiBlitz3.ab3@25551> lastrestype:        Dc.l newtype_string
00034582 <AmiBlitz3.ab3@25552> rescnt:             Ds.w 1                               ;# resident
00034584 <AmiBlitz3.ab3@25553> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034588 <AmiBlitz3.ab3@25554> resat:              Dc.l residents_table                 ;??looks like not used anymore??
0003458A <AmiBlitz3.ab3@25555> linedone:           Ds.w 1
000345A0 <AmiBlitz3.ab3@25556> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
000345A4 <AmiBlitz3.ab3@25565>   Dc.l 0                                        ; bytetobyte
000345A8 <AmiBlitz3.ab3@25566>   Dc.l convert_byte_to_word                     ; bytetoword
000345AC <AmiBlitz3.ab3@25567>   Dc.l convert_byte_to_long                     ; bytetolong
000345B0 <AmiBlitz3.ab3@25568>   Dc.l convert_byte_to_quick                    ; bytetoquick
000345B4 <AmiBlitz3.ab3@25569>   Dc.l convert_byte_to_float                    ; bytetofloat
000345B8 <AmiBlitz3.ab3@25570>   Dc.l convert_byte_to_long                     ; bytetolong
000345BC <AmiBlitz3.ab3@25571>   Dc.l error_convert_types                      ; noconerr
000345C0 <AmiBlitz3.ab3@25574>   Dc.l convert_word_to_byte                     ; wordtobyte
000345C4 <AmiBlitz3.ab3@25575>   Dc.l 0                                        ; wordtoword
000345C8 <AmiBlitz3.ab3@25576>   Dc.l convert_word_to_long                     ; wordtolong
000345CC <AmiBlitz3.ab3@25577>   Dc.l convert_word_to_quick                    ; wordtoquick
000345D0 <AmiBlitz3.ab3@25578>   Dc.l convert_word_to_float                    ; wordtofloat
000345D4 <AmiBlitz3.ab3@25579>   Dc.l convert_word_to_long                     ; wordtolong
000345D8 <AmiBlitz3.ab3@25580>   Dc.l error_convert_types                      ; noconerr
000345DC <AmiBlitz3.ab3@25583>   Dc.l convert_long_to_byte                     ; longtobyte
000345E0 <AmiBlitz3.ab3@25584>   Dc.l convert_long_to_word                     ; longtoword
000345E4 <AmiBlitz3.ab3@25585>   Dc.l 0                                        ; longtolong
000345E8 <AmiBlitz3.ab3@25586>   Dc.l convert_long_to_quick                    ; longtoquick
000345EC <AmiBlitz3.ab3@25587>   Dc.l convert_long_to_float                    ; longtofloat
000345F0 <AmiBlitz3.ab3@25588>   Dc.l 0                                        ; longtolong
000345F4 <AmiBlitz3.ab3@25589>   Dc.l error_convert_types                      ; noconerr
000345F8 <AmiBlitz3.ab3@25592>   Dc.l convert_quick_to_byte                    ; quicktobyte
000345FC <AmiBlitz3.ab3@25593>   Dc.l convert_quick_to_word                    ; quicktoword
00034600 <AmiBlitz3.ab3@25594>   Dc.l convert_quick_to_long                    ; quicktolong
00034604 <AmiBlitz3.ab3@25595>   Dc.l 0                                        ; quicktoquick
00034608 <AmiBlitz3.ab3@25596>   Dc.l convert_quick_to_float                   ; quicktofloat
0003460C <AmiBlitz3.ab3@25597>   Dc.l convert_quick_to_long                    ; quicktolong
00034610 <AmiBlitz3.ab3@25598>   Dc.l error_convert_types                      ; noconerr
00034614 <AmiBlitz3.ab3@25601>   Dc.l convert_float_to_byte                    ; floattobyte
00034618 <AmiBlitz3.ab3@25602>   Dc.l convert_float_to_word                    ; floattoword
0003461C <AmiBlitz3.ab3@25603>   Dc.l convert_float_to_long                    ; floattolong
00034620 <AmiBlitz3.ab3@25604>   Dc.l convert_float_to_quick                   ; floattoquick
00034624 <AmiBlitz3.ab3@25605>   Dc.l 0                                        ; floattofloat
00034628 <AmiBlitz3.ab3@25606>   Dc.l convert_float_to_long                    ; floattolong
0003462C <AmiBlitz3.ab3@25607>   Dc.l error_convert_types                      ; noconerr
00034630 <AmiBlitz3.ab3@25610>   Dc.l convert_long_to_byte                     ; longtobyte
00034634 <AmiBlitz3.ab3@25611>   Dc.l convert_long_to_word                     ; longtoword
00034638 <AmiBlitz3.ab3@25612>   Dc.l 0                                        ; longtolong
0003463C <AmiBlitz3.ab3@25613>   Dc.l convert_long_to_quick                    ; longtoquick
00034640 <AmiBlitz3.ab3@25614>   Dc.l convert_long_to_float                    ; longtofloat
00034644 <AmiBlitz3.ab3@25615>   Dc.l 0                                        ; longtolong
00034648 <AmiBlitz3.ab3@25616>   Dc.l error_convert_types                      ; noconerr
0003464C <AmiBlitz3.ab3@25619>   Dc.l error_convert_types                      ; noconerr
00034650 <AmiBlitz3.ab3@25620>   Dc.l error_convert_types                      ; noconerr
00034654 <AmiBlitz3.ab3@25621>   Dc.l string_to_long                           ; stringtolong
00034658 <AmiBlitz3.ab3@25622>   Dc.l error_convert_types                      ; noconerr
0003465C <AmiBlitz3.ab3@25623>   Dc.l error_convert_types                      ; noconerr
00034660 <AmiBlitz3.ab3@25624>   Dc.l string_to_long                           ; stringtolong
00034664 <AmiBlitz3.ab3@25625>   Ds.l 1
00034666 <AmiBlitz3.ab3@25631>   Dc.b $00,$2B                                  ;+ ; add
0003466A <AmiBlitz3.ab3@25632>   Dc.l do_plus_byte                             ;doplusb
0003466E <AmiBlitz3.ab3@25633>   Dc.l do_plus_word                             ;doplusw
00034672 <AmiBlitz3.ab3@25634>   Dc.l do_plus_long                             ;doplusl
00034676 <AmiBlitz3.ab3@25635>   Dc.l do_plus_long                             ;doplusl
0003467A <AmiBlitz3.ab3@25636>   Dc.l do_plus_float                            ;doplusf
0003467E <AmiBlitz3.ab3@25637>   Ds.l 1
00034682 <AmiBlitz3.ab3@25638>   Dc.l add_strings                              ;addstrings
00034684 <AmiBlitz3.ab3@25639>   Dc.b $0B,$B8
00034686 <AmiBlitz3.ab3@25641>   Dc.b $00,$2D                                  ;- ; sub
0003468A <AmiBlitz3.ab3@25642>   Dc.l do_minus_byte                            ;dominusb
0003468E <AmiBlitz3.ab3@25643>   Dc.l do_minus_word                            ;dominusw
00034692 <AmiBlitz3.ab3@25644>   Dc.l do_minus_long                            ;dominusl
00034696 <AmiBlitz3.ab3@25645>   Dc.l do_minus_long                            ;dominusl
0003469A <AmiBlitz3.ab3@25646>   Dc.l do_minus_float                           ;dominusf
000346A2 <AmiBlitz3.ab3@25647>   Ds.l 2
000346A4 <AmiBlitz3.ab3@25648>   Dc.b $0B,$B8
000346A6 <AmiBlitz3.ab3@25650>   Dc.b $00,$2A                                  ;* ; mul
000346AA <AmiBlitz3.ab3@25651>   Dc.l do_times_byte                            ;dotimesb
000346AE <AmiBlitz3.ab3@25652>   Dc.l do_times_word                            ;dotimesw
000346B2 <AmiBlitz3.ab3@25653>   Dc.l do_times_long                            ;dotimesl
000346B6 <AmiBlitz3.ab3@25654>   Dc.l do_times_quick                           ;dotimesq
000346BA <AmiBlitz3.ab3@25655>   Dc.l do_times_float                           ;dotimesf
000346C2 <AmiBlitz3.ab3@25656>   Ds.l 2
000346C4 <AmiBlitz3.ab3@25657>   Dc.b $0F,$A0
000346C6 <AmiBlitz3.ab3@25659>   Dc.b $00,$2F                                  ;/ ; div
000346CA <AmiBlitz3.ab3@25660>   Dc.l do_Div_byte                              ;dodivb
000346CE <AmiBlitz3.ab3@25661>   Dc.l do_Div_word                              ;dodivb
000346D2 <AmiBlitz3.ab3@25662>   Dc.l do_Div_long                              ;dodivl
000346D6 <AmiBlitz3.ab3@25663>   Dc.l do_Div_quick                             ;dodivq
000346DA <AmiBlitz3.ab3@25664>   Dc.l do_Div_float                             ;dodivf
000346E2 <AmiBlitz3.ab3@25665>   Ds.l 2
000346E4 <AmiBlitz3.ab3@25666>   Dc.b $0F,$A0
000346E6 <AmiBlitz3.ab3@25668>   Dc.b $00,$26                                  ;& ; & int
000346EA <AmiBlitz3.ab3@25669>   Dc.l do_AND_byte                              ;doandb
000346EE <AmiBlitz3.ab3@25670>   Dc.l do_AND_word                              ;doandw
000346F2 <AmiBlitz3.ab3@25671>   Dc.l do_AND_long                              ;doandl
000346F6 <AmiBlitz3.ab3@25672>   Dc.l do_AND_long                              ;doandl
00034702 <AmiBlitz3.ab3@25673>   Ds.l 3
00034704 <AmiBlitz3.ab3@25674>   Dc.b $13,$88
00034706 <AmiBlitz3.ab3@25676>   Dc.b $00,$7C                                  ;| ;or int ;
0003470A <AmiBlitz3.ab3@25677>   Dc.l do_OR_byte                               ;doorb
0003470E <AmiBlitz3.ab3@25678>   Dc.l do_OR_word                               ;doorw
00034712 <AmiBlitz3.ab3@25679>   Dc.l do_OR_long                               ;doorl
00034716 <AmiBlitz3.ab3@25680>   Dc.l do_OR_long                               ;doorl
00034722 <AmiBlitz3.ab3@25681>   Ds.l 3
00034724 <AmiBlitz3.ab3@25682>   Dc.b $13,$88
00034726 <AmiBlitz3.ab3@25684>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003472A <AmiBlitz3.ab3@25685>   Dc.l do_AND_byte                              ;doandb
0003472E <AmiBlitz3.ab3@25686>   Dc.l do_AND_word                              ;doandw
00034732 <AmiBlitz3.ab3@25687>   Dc.l do_AND_long                              ;doandl
00034736 <AmiBlitz3.ab3@25688>   Dc.l do_AND_long                              ;doandl
00034742 <AmiBlitz3.ab3@25689>   Ds.l 3
00034744 <AmiBlitz3.ab3@25690>   Dc.b $03,$E8
00034746 <AmiBlitz3.ab3@25692>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
0003474A <AmiBlitz3.ab3@25693>   Dc.l do_OR_byte                               ;doorb
0003474E <AmiBlitz3.ab3@25694>   Dc.l do_OR_word                               ;doorw
00034752 <AmiBlitz3.ab3@25695>   Dc.l do_OR_long                               ;doorl
00034756 <AmiBlitz3.ab3@25696>   Dc.l do_OR_long                               ;doorl
00034762 <AmiBlitz3.ab3@25697>   Ds.l 3
00034764 <AmiBlitz3.ab3@25698>   Dc.b $03,$E8
00034766 <AmiBlitz3.ab3@25700>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
0003476A <AmiBlitz3.ab3@25701>   Dc.l do_EOR_byte                              ;doeorb
0003476E <AmiBlitz3.ab3@25702>   Dc.l do_EOR_word                              ;doeorw
00034772 <AmiBlitz3.ab3@25703>   Dc.l do_EOR_long                              ;doeorl
00034776 <AmiBlitz3.ab3@25704>   Dc.l do_EOR_long                              ;doeorl
00034782 <AmiBlitz3.ab3@25705>   Ds.l 3
00034784 <AmiBlitz3.ab3@25706>   Dc.b $03,$E8
00034786 <AmiBlitz3.ab3@25708>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
0003478A <AmiBlitz3.ab3@25709>   Dc.l do_LSL                                   ;dolslb
0003478E <AmiBlitz3.ab3@25710>   Dc.l do_LSL                                   ;dolslw
00034792 <AmiBlitz3.ab3@25711>   Dc.l do_LSL                                   ;dolsll
00034796 <AmiBlitz3.ab3@25712>   Dc.l do_LSL                                   ;dolsll
000347A2 <AmiBlitz3.ab3@25713>   Ds.l 3
000347A4 <AmiBlitz3.ab3@25714>   Dc.b $17,$70
000347A6 <AmiBlitz3.ab3@25716>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000347AA <AmiBlitz3.ab3@25717>   Dc.l do_LSL                                   ;dolslb
000347AE <AmiBlitz3.ab3@25718>   Dc.l do_LSL                                   ;dolslw
000347B2 <AmiBlitz3.ab3@25719>   Dc.l do_LSL                                   ;dolsll
000347B6 <AmiBlitz3.ab3@25720>   Dc.l do_LSL                                   ;dolsll
000347C2 <AmiBlitz3.ab3@25721>   Ds.l 3
000347C4 <AmiBlitz3.ab3@25722>   Dc.b $17,$70
000347C6 <AmiBlitz3.ab3@25724>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000347CA <AmiBlitz3.ab3@25725>   Dc.l do_LSR                                   ;dolsrb
000347CE <AmiBlitz3.ab3@25726>   Dc.l do_LSR                                   ;dolsrw
000347D2 <AmiBlitz3.ab3@25727>   Dc.l do_LSR                                   ;dolsrl
000347D6 <AmiBlitz3.ab3@25728>   Dc.l do_LSR                                   ;dolsrl
000347E2 <AmiBlitz3.ab3@25729>   Ds.l 3
000347E4 <AmiBlitz3.ab3@25730>   Dc.b $17,$70
000347E6 <AmiBlitz3.ab3@25732>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000347EA <AmiBlitz3.ab3@25733>   Dc.l do_ASR                                   ;doasrb
000347EE <AmiBlitz3.ab3@25734>   Dc.l do_ASR                                   ;doasrw
000347F2 <AmiBlitz3.ab3@25735>   Dc.l do_ASR                                   ;doasrl
000347F6 <AmiBlitz3.ab3@25736>   Dc.l do_ASR                                   ;doasrl
00034802 <AmiBlitz3.ab3@25737>   Ds.l 3
00034804 <AmiBlitz3.ab3@25738>   Dc.b $17,$70
00034806 <AmiBlitz3.ab3@25740>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
0003480A <AmiBlitz3.ab3@25741>   Dc.l do_mod_byte                              ;domodb
0003480E <AmiBlitz3.ab3@25742>   Dc.l do_mod_word                              ;domodw
00034812 <AmiBlitz3.ab3@25743>   Dc.l do_mod_long                              ;domodl
00034816 <AmiBlitz3.ab3@25744>   Dc.l do_mod_quick                             ;domodq
0003481A <AmiBlitz3.ab3@25745>   Dc.l do_mod_float                             ;domodf
00034822 <AmiBlitz3.ab3@25746>   Ds.l 2
00034824 <AmiBlitz3.ab3@25747>   Dc.b $13,$88
00034826 <AmiBlitz3.ab3@25750>   Dc.b $00,$5E                                  ;^
0003482A <AmiBlitz3.ab3@25751>   Dc.l do_pow                                   ;dopow
0003482E <AmiBlitz3.ab3@25752>   Dc.l do_pow                                   ;dopow
00034832 <AmiBlitz3.ab3@25753>   Dc.l do_pow                                   ;dopow
00034836 <AmiBlitz3.ab3@25754>   Dc.l do_pow                                   ;dopow
0003483A <AmiBlitz3.ab3@25755>   Dc.l do_pow                                   ;dopow
00034842 <AmiBlitz3.ab3@25756>   Ds.l 2
00034844 <AmiBlitz3.ab3@25757>   Dc.b $1B,$58                                  ;7000
00034846 <AmiBlitz3.ab3@25760>   Dc.b $00,$3D                                  ;=
0003484A <AmiBlitz3.ab3@25761>   Dc.l do_equal_byte                            ;doeqb
0003484E <AmiBlitz3.ab3@25762>   Dc.l do_equal_word                            ;doeqw
00034852 <AmiBlitz3.ab3@25763>   Dc.l do_equal_long                            ;doeql
00034856 <AmiBlitz3.ab3@25764>   Dc.l do_equal_long                            ;doeql
0003485A <AmiBlitz3.ab3@25765>   Dc.l do_equal_float                           ;doeqf
0003485E <AmiBlitz3.ab3@25766>   Dc.l do_equal_long                            ;doeql
00034862 <AmiBlitz3.ab3@25767>   Dc.l do_equal_string                          ;doeqs
00034864 <AmiBlitz3.ab3@25768>   Dc.b $07,$D0                                  ;2000
00034866 <AmiBlitz3.ab3@25771>   Dc.b $3C,$3E                                  ;<>
0003486A <AmiBlitz3.ab3@25772>   Dc.l do_not_equal_byte                        ;doneb
0003486E <AmiBlitz3.ab3@25773>   Dc.l do_not_equal_word                        ;donew
00034872 <AmiBlitz3.ab3@25774>   Dc.l do_not_equal_long                        ;donel
00034876 <AmiBlitz3.ab3@25775>   Dc.l do_not_equal_long                        ;donel
0003487A <AmiBlitz3.ab3@25776>   Dc.l do_not_equal_float                       ;donef
0003487E <AmiBlitz3.ab3@25777>   Dc.l do_not_equal_long                        ;donel
00034882 <AmiBlitz3.ab3@25778>   Dc.l do_not_equal_string                      ;dones
00034884 <AmiBlitz3.ab3@25779>   Dc.b $07,$D0                                  ;2000
00034886 <AmiBlitz3.ab3@25782>   Dc.b $00,$3C                                  ;<
0003488A <AmiBlitz3.ab3@25783>   Dc.l do_littler_byte                          ;doltb
0003488E <AmiBlitz3.ab3@25784>   Dc.l do_littler_word                          ;doltw
00034892 <AmiBlitz3.ab3@25785>   Dc.l do_littler_long                          ;doltl
00034896 <AmiBlitz3.ab3@25786>   Dc.l do_littler_long                          ;doltl
0003489A <AmiBlitz3.ab3@25787>   Dc.l do_littler_float                         ;doltf
0003489E <AmiBlitz3.ab3@25788>   Dc.l do_littler_long                          ;doltl
000348A2 <AmiBlitz3.ab3@25789>   Dc.l do_littler_string                        ;dolts
000348A4 <AmiBlitz3.ab3@25790>   Dc.b $07,$D0                                  ;2000
000348A6 <AmiBlitz3.ab3@25793>   Dc.b $3C,$3D                                  ;<=
000348AA <AmiBlitz3.ab3@25794>   Dc.l do_littler_equal_byte                    ;doleb
000348AE <AmiBlitz3.ab3@25795>   Dc.l do_littler_equal_word                    ;doleb
000348B2 <AmiBlitz3.ab3@25796>   Dc.l do_littler_equal_long                    ;dolel
000348B6 <AmiBlitz3.ab3@25797>   Dc.l do_littler_equal_long                    ;dolel
000348BA <AmiBlitz3.ab3@25798>   Dc.l do_littler_equal_float                   ;dolef
000348BE <AmiBlitz3.ab3@25799>   Dc.l do_littler_equal_long                    ;dolel
000348C2 <AmiBlitz3.ab3@25800>   Dc.l do_littler_equal_string                  ;doles
000348C4 <AmiBlitz3.ab3@25801>   Dc.b $07,$D0                                  ;2000
000348C6 <AmiBlitz3.ab3@25804>   Dc.b $00,$3E                                  ;>
000348CA <AmiBlitz3.ab3@25805>   Dc.l do_greater_byte                          ;dogtb
000348CE <AmiBlitz3.ab3@25806>   Dc.l do_greater_word                          ;dogtw
000348D2 <AmiBlitz3.ab3@25807>   Dc.l do_greater_long                          ;dogtl
000348D6 <AmiBlitz3.ab3@25808>   Dc.l do_greater_long                          ;dogtl
000348DA <AmiBlitz3.ab3@25809>   Dc.l do_greater_float                         ;dogtf
000348DE <AmiBlitz3.ab3@25810>   Dc.l do_greater_long                          ;dogtl
000348E2 <AmiBlitz3.ab3@25811>   Dc.l do_greater_string                        ;dogts
000348E4 <AmiBlitz3.ab3@25812>   Dc.b $07,$D0                                  ;2000
000348E6 <AmiBlitz3.ab3@25815>   Dc.b $3E,$3D                                  ;>=
000348EA <AmiBlitz3.ab3@25816>   Dc.l do_greater_equal_byte                    ;dogeb
000348EE <AmiBlitz3.ab3@25817>   Dc.l do_greater_equal_word                    ;dogew
000348F2 <AmiBlitz3.ab3@25818>   Dc.l do_greater_equal_long                    ;dogel
000348F6 <AmiBlitz3.ab3@25819>   Dc.l do_greater_equal_long                    ;dogel
000348FA <AmiBlitz3.ab3@25820>   Dc.l do_greater_equal_float                   ;dogef
000348FE <AmiBlitz3.ab3@25821>   Dc.l do_greater_equal_long                    ;dogel
00034902 <AmiBlitz3.ab3@25822>   Dc.l do_greater_equal_string                  ;doges
00034904 <AmiBlitz3.ab3@25823>   Dc.b $07,$D0                                  ;2000
00034906 <AmiBlitz3.ab3@25825>   Dc.b $80,$CD                                  ;$8000+26+tnum
0003490A <AmiBlitz3.ab3@25826>   Dc.l _BitTst
0003490E <AmiBlitz3.ab3@25827>   Dc.l _BitTst
00034912 <AmiBlitz3.ab3@25828>   Dc.l _BitTst
00034916 <AmiBlitz3.ab3@25829>   Dc.l _BitTst
00034922 <AmiBlitz3.ab3@25830>   Ds.l 3
00034924 <AmiBlitz3.ab3@25831>   Dc.b $1F,$40                                  ;8000
00034926 <AmiBlitz3.ab3@25833>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003492A <AmiBlitz3.ab3@25834>   Dc.l _BitSet
0003492E <AmiBlitz3.ab3@25835>   Dc.l _BitSet
00034932 <AmiBlitz3.ab3@25836>   Dc.l _BitSet
00034936 <AmiBlitz3.ab3@25837>   Dc.l _BitSet
00034942 <AmiBlitz3.ab3@25838>   Ds.l 3
00034944 <AmiBlitz3.ab3@25839>   Dc.b $1F,$40                                  ;8000
00034946 <AmiBlitz3.ab3@25841>   Dc.b $80,$CF                                  ;$8000+28+tnum
0003494A <AmiBlitz3.ab3@25842>   Dc.l _BitClr
0003494E <AmiBlitz3.ab3@25843>   Dc.l _BitClr
00034952 <AmiBlitz3.ab3@25844>   Dc.l _BitClr
00034956 <AmiBlitz3.ab3@25845>   Dc.l _BitClr
00034962 <AmiBlitz3.ab3@25846>   Ds.l 3
00034964 <AmiBlitz3.ab3@25847>   Dc.b $1F,$40                                  ;8000
00034966 <AmiBlitz3.ab3@25849>   Dc.b $80,$D0                                  ;$8000+29+tnum
0003496A <AmiBlitz3.ab3@25850>   Dc.l _BitChg
0003496E <AmiBlitz3.ab3@25851>   Dc.l _BitChg
00034972 <AmiBlitz3.ab3@25852>   Dc.l _BitChg
00034976 <AmiBlitz3.ab3@25853>   Dc.l _BitChg
00034982 <AmiBlitz3.ab3@25854>   Ds.l 3
00034984 <AmiBlitz3.ab3@25855>   Dc.b $1F,$40                                  ;8000
00034986 <AmiBlitz3.ab3@25857>   Dc.b $00,$00
0003498A <AmiBlitz3.ab3@25862> modetable:   Dc.l typemode
0003498E <AmiBlitz3.ab3@25865> newtypebase: Dc.l newtype_byte
00034996 <AmiBlitz3.ab3@25868>   Dc.l newtype_word,$01                                    
00034998 <AmiBlitz3.ab3@25869>   Dc.w $0001
0003499C <AmiBlitz3.ab3@25870>   Dc.b 13,"b",0,0
000349A4 <AmiBlitz3.ab3@25873>   Dc.l newtype_long,$02
000349A6 <AmiBlitz3.ab3@25874>   Dc.w $0002
000349AA <AmiBlitz3.ab3@25875>   Dc.b 13,"w",0,0
000349B2 <AmiBlitz3.ab3@25878>   Dc.l newtype_quick,$03                                   
000349B4 <AmiBlitz3.ab3@25879>   Dc.w $0004
000349B8 <AmiBlitz3.ab3@25880>   Dc.b 13,"l",0,0
000349C0 <AmiBlitz3.ab3@25883>   Dc.l newtype_float,$04                                   
000349C2 <AmiBlitz3.ab3@25884>   Dc.w $0004
000349C6 <AmiBlitz3.ab3@25885>   Dc.b 13,"q",0,0
000349CE <AmiBlitz3.ab3@25889>   Dc.l newtype_double,$05                                  ;make problems on old residents
000349D0 <AmiBlitz3.ab3@25890>   Dc.w $0004
000349D4 <AmiBlitz3.ab3@25891>   Dc.b 13,"f",0,0
000349DC <AmiBlitz3.ab3@25894>   Dc.l newtype_double,$06
000349DE <AmiBlitz3.ab3@25895>   Dc.w $0004
000349E2 <AmiBlitz3.ab3@25896>   Dc.b 13,"a",0,0
000349EA <AmiBlitz3.ab3@25899>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000349EC <AmiBlitz3.ab3@25900>   Dc.w $0008
000349F0 <AmiBlitz3.ab3@25901>   Dc.b 13,"d",0,0
000349F8 <AmiBlitz3.ab3@25905>   Dc.l $0000000,$07                                        ;stringtype
000349FA <AmiBlitz3.ab3@25906>   Dc.w $0004
000349FE <AmiBlitz3.ab3@25907>   Dc.b 13,"s",0,0
00034A06 <AmiBlitz3.ab3@25910>   Dc.l $00,$00
00034A08 <AmiBlitz3.ab3@25911>   Dc.w $0000
00034A0C <AmiBlitz3.ab3@25912>   Dc.b $01,$00,$00,$00
00034A6C <AmiBlitz3.ab3@25915> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034A6E <AmiBlitz3.ab3@25919> dirmode:              Ds.w 1                               ;shows if directmode is on
00034A72 <AmiBlitz3.ab3@25921>                       Ds.l 1                               ;int org source ;intuition!
00034A74 <AmiBlitz3.ab3@25922> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034A78 <AmiBlitz3.ab3@25923> maxsat:               Ds.l 1                               ;data1 info pos
00034A7A <AmiBlitz3.ab3@25924> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034A7C <AmiBlitz3.ab3@25926> maxsused:             Ds.w 1                               ;maximums used in prog
00034A7E <AmiBlitz3.ab3@25930> dark:                 Ds.w 1                               ;dark compile?
00034A80 <AmiBlitz3.ab3@25931> qlab:                 Ds.w 1                               ;quick lab allocate
00034A84 <AmiBlitz3.ab3@25932> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034A86 <AmiBlitz3.ab3@25937> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034A88 <AmiBlitz3.ab3@25938> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034A8C <AmiBlitz3.ab3@25939> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034A90 <AmiBlitz3.ab3@25941> letstart:             Ds.l 1
00034A92 <AmiBlitz3.ab3@25942> dontwrite:            Ds.w 1                               ;nomemleft org source
00034B12 <AmiBlitz3.ab3@25943> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034B16 <AmiBlitz3.ab3@25945> locdatast:            Ds.l 1
00034B1A <AmiBlitz3.ab3@25946> firstpend:            Ds.l 1
00034B1E <AmiBlitz3.ab3@25950> data2at:              Ds.l 1
00034B22 <AmiBlitz3.ab3@25951> data2:                Ds.l 1
00034B26 <AmiBlitz3.ab3@25952> data1start:           Ds.l 1                               ;data1at org source
00034B2A <AmiBlitz3.ab3@25953> data1:                Ds.l 1                               ;pc for initialized data!
00034B2E <AmiBlitz3.ab3@25954> destbufferstart:      Ds.l 1                               ;pcat org source
00034B32 <AmiBlitz3.ab3@25958> destbufferend:        Ds.l 1                               ;libat org source
00034B36 <AmiBlitz3.ab3@25959> libend:               Ds.l 1                               ;lib org source
00034B3A <AmiBlitz3.ab3@25960> allat:                Ds.l 1                               ;highest allocmemd location for code
00034B44 <AmiBlitz3.ab3@25961> dummyasm:             Dc.w 0,0,0,0,0
00034B48 <AmiBlitz3.ab3@25962>                       Dc.l 0
00034B4A <AmiBlitz3.ab3@25963>                       Dc.w 0
00034B4E <AmiBlitz3.ab3@25967> buff1:                Ds.l 1                               ;buffer for text get
00034B52 <AmiBlitz3.ab3@25968> buff2:                Ds.l 1                               ;ditto for dest
00034B54 <AmiBlitz3.ab3@25969> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034B56 <AmiBlitz3.ab3@25970> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034B58 <AmiBlitz3.ab3@25971> extraword:            Ds.w 1                               ;the extension word for assembler
00034B5A <AmiBlitz3.ab3@25972> extraword2:           Ds.w 1                               ;ditto
00034B5C <AmiBlitz3.ab3@25973> asmsize:              Ds.w 1
00034B60 <AmiBlitz3.ab3@25974> asmbuff:              Ds.l 1
00034B62 <AmiBlitz3.ab3@25975> asmlen:               Ds.w 1                               ;first (src) text len
00034B64 <AmiBlitz3.ab3@25976> asmlen2:              Ds.w 1                               ;second (dest)
00034B68 <AmiBlitz3.ab3@25977> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034B6A <AmiBlitz3.ab3@25980> macnum:               Ds.w 1
00034B6E <AmiBlitz3.ab3@25982>                       Dc.l 0                               ;address of next 0 in include fil
00034B72 <AmiBlitz3.ab3@25983> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034B7C <AmiBlitz3.ab3@25984> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034B7E <AmiBlitz3.ab3@25985> connest:              Ds.w 1                               ;conditional nest level
00034B82 <AmiBlitz3.ab3@25986> firstconst:           Ds.l 1                               ;first constant (#a)
00034B84 <AmiBlitz3.ab3@25987> numarg:               Ds.w 1                               ;number of macro arguements
00034B88 <AmiBlitz3.ab3@25988> myoline:              Ds.l 1                               ;macro done yet?
00034B8C <AmiBlitz3.ab3@25989> myline:               Ds.l 1                               ;pointer to some memory to create
00034B90 <AmiBlitz3.ab3@25992>                       Ds.l 1
00034BD0 <AmiBlitz3.ab3@25993> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00034BD4 <AmiBlitz3.ab3@25994> concomsp:             Dc.l concomstack                     ;stack pointer
00034BD6 <AmiBlitz3.ab3@25995> oldqflag:             Ds.w 1
00034BDA <AmiBlitz3.ab3@25998>                       Ds.l 1
00034BDC <AmiBlitz3.ab3@26000>                       Ds.w 1
00034BE0 <AmiBlitz3.ab3@26001> firstfor:             Ds.l 1                               ;first for
00034BE2 <AmiBlitz3.ab3@26002> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00034BE4 <AmiBlitz3.ab3@26003> sbgot:                Ds.w 1                               ;flag for string got 2
00034BE6 <AmiBlitz3.ab3@26004> convsize:             Ds.w 1                               ;usertype org source
00034BE8 <AmiBlitz3.ab3@26005> userp:                Ds.w 1
00034BEC <AmiBlitz3.ab3@26010> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00034BEE <AmiBlitz3.ab3@26011> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00034BF0 <AmiBlitz3.ab3@26012> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00034BF4 <AmiBlitz3.ab3@26014> locloc:               Ds.l 1
00034BF6 <AmiBlitz3.ab3@26015> locchar:              Ds.w 1
00034C76 <AmiBlitz3.ab3@26016> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00034C78 <AmiBlitz3.ab3@26017> commode:              Ds.w 1                               ;in comma mode...
00034C7C <AmiBlitz3.ab3@26018> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00034C80 <AmiBlitz3.ab3@26019> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00034C84 <AmiBlitz3.ab3@26020> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00034C86 <AmiBlitz3.ab3@26022>                       Ds.w 1                               ;opt reset offset
00034D86 <AmiBlitz3.ab3@26024>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00034E86 <AmiBlitz3.ab3@26026>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00034E88 <AmiBlitz3.ab3@26027> varcodelen:           Ds.w 1                               ;and length
00034E8A <AmiBlitz3.ab3@26029>                       Ds.w 1
00034E90 <AmiBlitz3.ab3@26030> oldvcodelen:          Ds.w 3                               ;old varcodelen
00034E94 <AmiBlitz3.ab3@26034> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00034E96 <AmiBlitz3.ab3@26035> memlibstat:           Ds.w 1                               ;status of memory library during
00034E98 <AmiBlitz3.ab3@26038>                       Dc.w 0
00034E9A <AmiBlitz3.ab3@26040>                       Dc.w 0
00034E9C <AmiBlitz3.ab3@26042> varmode:              Ds.w 1                               ;0 a5 pointer to global
00034EA0 <AmiBlitz3.ab3@26044> currentfunction:      Ds.l 1                               ;thisproc org source
00034EA4 <AmiBlitz3.ab3@26045> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00034EA6 <AmiBlitz3.ab3@26046> 
00034EA8 <AmiBlitz3.ab3@26048> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00034EAC <AmiBlitz3.ab3@26049> passstack:            Ds.l 1
00034EB0 <AmiBlitz3.ab3@26050> zero:                 Ds.l 1                               ;ZERO!
00034EB2 <AmiBlitz3.ab3@26051> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00034EB6 <AmiBlitz3.ab3@26053> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00034EBA <AmiBlitz3.ab3@26054> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00034EBC <AmiBlitz3.ab3@26055> lasta6:               Dc.w $FFFF                           ;-1 org source
00034EBE <AmiBlitz3.ab3@26056> instringon:           Ds.w 1                               ;quoteflag org source
00034EC2 <AmiBlitz3.ab3@26057> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00034EC6 <AmiBlitz3.ab3@26058> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00034ECA <AmiBlitz3.ab3@26059> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00034ECE <AmiBlitz3.ab3@26060> endop:                Ds.l 1                               ;end of program pc - before finishups!
00034ED2 <AmiBlitz3.ab3@26061> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00034ED6 <AmiBlitz3.ab3@26062> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00034ED8 <AmiBlitz3.ab3@26063> numstatic:            Ds.w 1                               ;number of static structs
00034EDC <AmiBlitz3.ab3@26064> staticdata:           Ds.l 1                               ;data1 val for statics
00034EE0 <AmiBlitz3.ab3@26065> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00034EE2 <AmiBlitz3.ab3@26066> sbasegot:             Ds.w 1                               ;string base got?
00034EE6 <AmiBlitz3.ab3@26067> litdata1:             Ds.l 1
00034EEA <AmiBlitz3.ab3@26071> objlen:               Ds.l 1
00034EEE <AmiBlitz3.ab3@26072> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00034EF2 <AmiBlitz3.ab3@26073> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00034EF4 <AmiBlitz3.ab3@26075> flagmask:             Ds.w 1                               ;mask for flag of variable when
00034EF6 <AmiBlitz3.ab3@26077> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00034EF8 <AmiBlitz3.ab3@26078> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00034EFC <AmiBlitz3.ab3@26079> temp1:                Ds.l 1
00034F00 <AmiBlitz3.ab3@26080> temp2:                Ds.l 1
00034F04 <AmiBlitz3.ab3@26082> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00034F08 <AmiBlitz3.ab3@26083> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00034F7C <AmiBlitz3.ab3@26084> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00034F80 <AmiBlitz3.ab3@26085> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035000 <AmiBlitz3.ab3@26087> namebuff2:            Ds.b 128
00035008 <AmiBlitz3.ab3@26088>                       Ds.b 8                               ;for fileinfoblock
00035048 <AmiBlitz3.ab3@26091> optstuff:             Ds.b 64                              ;temp opt make buffer
0003504A <AmiBlitz3.ab3@26108>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003504E <AmiBlitz3.ab3@26109>   Dc.l xtra_versionnumber                                  ; vers org source
00035052 <AmiBlitz3.ab3@26110>   Dc.l create_iconfile                                     ; create icon for executable
00035056 <AmiBlitz3.ab3@26111>   Ds.l 1
00035058 <AmiBlitz3.ab3@26113>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
0003505C <AmiBlitz3.ab3@26116>   Dc.l set_use_debugger
00035060 <AmiBlitz3.ab3@26117>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035064 <AmiBlitz3.ab3@26118>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035068 <AmiBlitz3.ab3@26119>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
0003506C <AmiBlitz3.ab3@26120>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035070 <AmiBlitz3.ab3@26121>   Dc.l set_make_smallestcode
00035074 <AmiBlitz3.ab3@26122>   Dc.l set_link_debuginfo
00035078 <AmiBlitz3.ab3@26123>   Dc.l set_autorun
0003507C <AmiBlitz3.ab3@26124>   Dc.l set_interruptcheck
00035080 <AmiBlitz3.ab3@26125>   Dc.l set_assemblercheck
00035084 <AmiBlitz3.ab3@26127>   Dc.l set_overflowcheck
00035088 <AmiBlitz3.ab3@26128>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
0003508C <AmiBlitz3.ab3@26129>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035090 <AmiBlitz3.ab3@26130>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035094 <AmiBlitz3.ab3@26133>   Ds.l 1
00035096 <AmiBlitz3.ab3@26135>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003509A <AmiBlitz3.ab3@26142>   Dc.l objectbuffer
0003509E <AmiBlitz3.ab3@26143>   Dc.l libsbuffer
000350A2 <AmiBlitz3.ab3@26144>   Dc.l systembuffer
000350A6 <AmiBlitz3.ab3@26145>   Dc.l databuffer
000350AA <AmiBlitz3.ab3@26146>   Dc.l macrobuffer_size
000350AE <AmiBlitz3.ab3@26147>   Dc.l stringbuffer
000350B2 <AmiBlitz3.ab3@26150>   Ds.l 1
000350B4 <AmiBlitz3.ab3@26154>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
000350BC <AmiBlitz3.ab3@26155>   Dc.l residents_table,0
000350BE <AmiBlitz3.ab3@26159>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
000350C6 <AmiBlitz3.ab3@26160>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
000350C8 <AmiBlitz3.ab3@26161>   Ds.w 1
000351C4 <AmiBlitz3.ab3@26165>   Ds.l 63
000352C0 <AmiBlitz3.ab3@26166>   Ds.l 63
000353BC <AmiBlitz3.ab3@26167>   Ds.l 63
0003549E <AmiBlitz3.ab3@26168>   Ds.w 113
000354A0 <AmiBlitz3.ab3@26171> comsettings_message:  Ds.w 1                               ;allchg org source
000354A2 <AmiBlitz3.ab3@26172> xtra_versionnumber:   Ds.w 1                               ;vers org source
000354A8 <AmiBlitz3.ab3@26176>   CLR.b exefilename
000354AA <AmiBlitz3.ab3@26177>   TST.l d0
000354AE <AmiBlitz3.ab3@26178>   BNE read_xtrafile__l10
000354B0 <AmiBlitz3.ab3@26179> RTS
000354B6 <AmiBlitz3.ab3@26182>   JSR free_residents                                       ;jsr freeres2 org source
000354BC <AmiBlitz3.ab3@26183> 
000354C2 <AmiBlitz3.ab3@26184>   LEA ptr_xtradata,A2
000354C4 <AmiBlitz3.ab3@26185>   MOVEQ.l #$00,D4
000354C6 <AmiBlitz3.ab3@26188>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
000354CA <AmiBlitz3.ab3@26189>     BEQ.b read_xtrafile__done
000354CC <AmiBlitz3.ab3@26192>     MOVE.l (A2)+,D2
000354D0 <AmiBlitz3.ab3@26193>   BEQ.b read_xtrafile__loop
000354D2 <AmiBlitz3.ab3@26195>   MOVE.l D4,D3
000354D4 <AmiBlitz3.ab3@26196>   MOVE.l D7,D1
000354D8 <AmiBlitz3.ab3@26197>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000354DA <AmiBlitz3.ab3@26198>   TST.l D0
000354DE <AmiBlitz3.ab3@26199>   BNE.b read_xtrafile__loop2
000354E2 <AmiBlitz3.ab3@26200> BRA.w read_xtrafile__done2
000354E8 <AmiBlitz3.ab3@26203>   TST.b xtra_versionnumber
000354EC <AmiBlitz3.ab3@26204>    BNE.b read_xtrafile__nover0
000354F4 <AmiBlitz3.ab3@26205>   MOVE.w #$0080,set_autorun                                ;auto run on
000354FE <AmiBlitz3.ab3@26206>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035504 <AmiBlitz3.ab3@26207>   CLR.w set_assemblercheck                                 ;assembler checking off
0003550E <AmiBlitz3.ab3@26208>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035512 <AmiBlitz3.ab3@26209> BRA.b read_xtrafile__ver0
00035514 <AmiBlitz3.ab3@26212>   MOVE.l D7,D1                                             ;load cli arg!
0003551A <AmiBlitz3.ab3@26213>   MOVE.l #str_cliarguments,D2
00035520 <AmiBlitz3.ab3@26214>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035524 <AmiBlitz3.ab3@26215>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003552A <AmiBlitz3.ab3@26216>   MOVE.l #str_cliarguments,A0
00035530 <AmiBlitz3.ab3@26217>   ADDA.l #115,A0
00035536 <AmiBlitz3.ab3@26218>   MOVE.l #0,(a0) ; terminate it!
00035538 <AmiBlitz3.ab3@26220>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
0003553E <AmiBlitz3.ab3@26221>   MOVE.l #stacksize,D2
00035544 <AmiBlitz3.ab3@26222>   MOVE.l #4,D3
00035548 <AmiBlitz3.ab3@26223>   JSR _Read(A6)
00035552 <AmiBlitz3.ab3@26224>   CMP.l ##MIN_STACKSIZE,stacksize
00035556 <AmiBlitz3.ab3@26225>   BGE 'stackok
00035560 <AmiBlitz3.ab3@26226>   MOVE.l ##MIN_STACKSIZE,stacksize
00035562 <AmiBlitz3.ab3@26229>   MOVE.l D7,D1
00035568 <AmiBlitz3.ab3@26230>   MOVE.l #versioninformation,D2
0003556E <AmiBlitz3.ab3@26231>   MOVE.l #4,D3
00035572 <AmiBlitz3.ab3@26232>   JSR _Read(A6)
00035574 <AmiBlitz3.ab3@26234>   MOVE.l D7,D1
0003557A <AmiBlitz3.ab3@26235>   MOVE.l #number_of_builds,D2
00035580 <AmiBlitz3.ab3@26236>   MOVE.l #4,D3
00035584 <AmiBlitz3.ab3@26237>   JSR _Read(A6)
0003558A <AmiBlitz3.ab3@26243> 
00035590 <AmiBlitz3.ab3@26244>   MOVE.l A7,errstack
0003559A <AmiBlitz3.ab3@26245>   MOVE.l #read_xtrafile__done2,errcont
000355A2 <AmiBlitz3.ab3@26246>   MOVE.w #$FFFF,ezerr
000355A8 <AmiBlitz3.ab3@26249>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
000355AA <AmiBlitz3.ab3@26250>     MOVEQ.l #$04,D3
000355AC <AmiBlitz3.ab3@26251>     MOVE.l D7,D1
000355B0 <AmiBlitz3.ab3@26252>     JSR _Read(A6)
000355B2 <AmiBlitz3.ab3@26253>     TST.l D0
000355B6 <AmiBlitz3.ab3@26254>     BEQ.b read_xtrafile__done2
000355BC <AmiBlitz3.ab3@26255>     MOVE.w temp1,D1
000355BE <AmiBlitz3.ab3@26256>     TST.w d1                                               ;new
000355C2 <AmiBlitz3.ab3@26257>     BEQ read_xtrafile__done2                                         ;new
000355C8 <AmiBlitz3.ab3@26258>      JSR AJL_0_6F1A
000355CE <AmiBlitz3.ab3@26260>     CMP.l #0,a1
000355D2 <AmiBlitz3.ab3@26261>     BEQ read_xtrafile__dloop
000355D6 <AmiBlitz3.ab3@26262>     MOVE.l $12(A1),D0
000355DE <AmiBlitz3.ab3@26263>     MOVE.w temp1+2,-$4(A1,D0.L)
000355E2 <AmiBlitz3.ab3@26264> BRA.b read_xtrafile__dloop
000355E6 <AmiBlitz3.ab3@26270>   LEA residents_table(PC),A0
000355E8 <AmiBlitz3.ab3@26271>   MOVEQ.l #$07,D0
000355EC <AmiBlitz3.ab3@26274>     CLR.l $40(A0)
000355F0 <AmiBlitz3.ab3@26275>     LEA ResidentEntryStep(A0),A0   ; $44
000355F4 <AmiBlitz3.ab3@26276>   DBF D0,read_xtrafile__loop3
000355F8 <AmiBlitz3.ab3@26278>   MOVEM.l D7/A6,-(A7)
000355FE <AmiBlitz3.ab3@26279>   JSR init_buffers
00035604 <AmiBlitz3.ab3@26280>   JSR reloadresident
00035608 <AmiBlitz3.ab3@26281>   MOVEM.l (A7)+,D7/A6
0003560A <AmiBlitz3.ab3@26282> RTS
00035612 <AmiBlitz3.ab3@26286>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035618 <AmiBlitz3.ab3@26295>   LEA ptr_xtradata,A2
0003561A <AmiBlitz3.ab3@26296>   MOVEQ.l #$00,D4
0003561C <AmiBlitz3.ab3@26300>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035620 <AmiBlitz3.ab3@26301>   BEQ.b write_xtrafile__done
00035622 <AmiBlitz3.ab3@26304>    MOVE.l (A2)+,D2
00035626 <AmiBlitz3.ab3@26305>    BEQ.b write_xtrafile__loop
00035628 <AmiBlitz3.ab3@26307>    MOVE.l D4,D3
0003562A <AmiBlitz3.ab3@26308>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
0003562E <AmiBlitz3.ab3@26309>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035632 <AmiBlitz3.ab3@26310> BRA.b write_xtrafile__loop2
00035634 <AmiBlitz3.ab3@26313>   MOVE.l D7,D1
0003563A <AmiBlitz3.ab3@26314>   MOVE.l #str_cliarguments,D2
00035640 <AmiBlitz3.ab3@26315>   MOVE.l #116,D3
00035644 <AmiBlitz3.ab3@26316>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035646 <AmiBlitz3.ab3@26318>   MOVE.l D7,D1
0003564C <AmiBlitz3.ab3@26319>   MOVE.l #stacksize,D2
00035652 <AmiBlitz3.ab3@26320>   MOVE.l #4,D3
00035656 <AmiBlitz3.ab3@26321>   JSR _Write(A6)
00035658 <AmiBlitz3.ab3@26323>   MOVE.l D7,D1
0003565E <AmiBlitz3.ab3@26324>   MOVE.l #versioninformation,D2
00035664 <AmiBlitz3.ab3@26325>   MOVE.l #4,D3
00035668 <AmiBlitz3.ab3@26326>   JSR _Write(A6)
0003566A <AmiBlitz3.ab3@26328>   MOVE.l D7,D1
00035670 <AmiBlitz3.ab3@26329>   MOVE.l #number_of_builds,D2
00035676 <AmiBlitz3.ab3@26330>   MOVE.l #4,D3
0003567A <AmiBlitz3.ab3@26331>   JSR _Write(A6)
00035680 <AmiBlitz3.ab3@26337>   LEA libpointer,A2
00035682 <AmiBlitz3.ab3@26340>     MOVE.l (A2),D0
00035686 <AmiBlitz3.ab3@26341>     BEQ.w write_xtrafile__done2
00035688 <AmiBlitz3.ab3@26342>     MOVEA.l D0,A2
0003568C <AmiBlitz3.ab3@26343>     MOVE.l $12(A2),D4
00035690 <AmiBlitz3.ab3@26344>     TST.w -$2(A2,D4.L)
00035694 <AmiBlitz3.ab3@26345>     BEQ.w write_xtrafile__loop3
00035698 <AmiBlitz3.ab3@26347>     LEA $4(A2),A0
0003569A <AmiBlitz3.ab3@26348>     MOVE.l A0,D2
0003569C <AmiBlitz3.ab3@26349>     MOVEQ.l #$02,D3
0003569E <AmiBlitz3.ab3@26350>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
000356A2 <AmiBlitz3.ab3@26351>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000356A6 <AmiBlitz3.ab3@26353>     LEA -$4(A2,D4.L),A0
000356A8 <AmiBlitz3.ab3@26354>     MOVE.l A0,D2
000356AA <AmiBlitz3.ab3@26355>     MOVEQ.l #$02,D3
000356AC <AmiBlitz3.ab3@26356>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
000356B0 <AmiBlitz3.ab3@26357>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
000356B4 <AmiBlitz3.ab3@26358> BRA.w write_xtrafile__loop3
000356BA <AmiBlitz3.ab3@26363>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
000356BC <AmiBlitz3.ab3@26364>   MOVE.l A2,D2           ; move the address to d2
000356C2 <AmiBlitz3.ab3@26365>   MOVE.l #4,D3           ; we only need 4 bytes to save
000356C4 <AmiBlitz3.ab3@26366>   MOVE.l D7,D1           ; we set the file handle
000356C8 <AmiBlitz3.ab3@26367>   JSR _Write(A6)         ; and we write it.
000356CA <AmiBlitz3.ab3@26369> RTS
000356D0 <AmiBlitz3.ab3@26374>   LEA optssave,A0                      ; backup address
000356D6 <AmiBlitz3.ab3@26375>   LEA ptr_xtradata,A1                  ; source address
000356D8 <AmiBlitz3.ab3@26378>   MOVE.w (A1)+,D0                                          ;length of data move
000356DC <AmiBlitz3.ab3@26379>   BEQ.b 'backupdone
000356DE <AmiBlitz3.ab3@26380>   SUBQ.w #1,D0
000356E0 <AmiBlitz3.ab3@26383>     MOVE.l (A1)+,D1
000356E4 <AmiBlitz3.ab3@26384>     BEQ.b 'backuploop
000356E6 <AmiBlitz3.ab3@26385>     MOVEA.l D1,A2
000356E8 <AmiBlitz3.ab3@26386>     MOVE.w D0,D1
000356EA <AmiBlitz3.ab3@26389>       MOVE.b (A2)+,(A0)+
000356EE <AmiBlitz3.ab3@26390>   DBF D1,'backuploop3
000356F2 <AmiBlitz3.ab3@26392> BRA.w 'backuploop2
000356F8 <AmiBlitz3.ab3@26396>   LEA bufferlist,A1
000356FA <AmiBlitz3.ab3@26399>     MOVE.l (A1)+,D2
000356FE <AmiBlitz3.ab3@26400>     BEQ.b 'loop4done
00035700 <AmiBlitz3.ab3@26402>     MOVEA.l D2,A0
00035702 <AmiBlitz3.ab3@26403>     MOVE.l (A0),D2
00035704 <AmiBlitz3.ab3@26404>     ADDQ.w #8,A0
0003570A <AmiBlitz3.ab3@26405>     JSR makelong
0003570E <AmiBlitz3.ab3@26406> BRA.b 'loop4
00035714 <AmiBlitz3.ab3@26409>   CLR.w state_of_residents                                 ;resident change
0003571A <AmiBlitz3.ab3@26410>   CLR.w comsettings_message                                ;alloc change
00035720 <AmiBlitz3.ab3@26411>   CLR.w maxobject_pos
00035722 <AmiBlitz3.ab3@26412> RTS   ; new tomsmart1
00035728 <AmiBlitz3.ab3@26416>   LEA optssave,A0
0003572E <AmiBlitz3.ab3@26417>   LEA ptr_xtradata,A1
00035730 <AmiBlitz3.ab3@26420>   MOVE.w (A1)+,D0
00035734 <AmiBlitz3.ab3@26421>   BEQ.b 'restoredone
00035736 <AmiBlitz3.ab3@26422>   SUBQ.w #1,D0
00035738 <AmiBlitz3.ab3@26425>     MOVE.l (A1)+,D1
0003573C <AmiBlitz3.ab3@26426>     BEQ.b 'restoreloop1
0003573E <AmiBlitz3.ab3@26427>     MOVEA.l D1,A2
00035740 <AmiBlitz3.ab3@26428>     MOVE.w D0,D1
00035742 <AmiBlitz3.ab3@26431>       MOVE.b (A0)+,(A2)+
00035746 <AmiBlitz3.ab3@26432>   DBF D1,'restoreloop3
0003574A <AmiBlitz3.ab3@26434> BRA.b 'restoreloop2
0003574C <AmiBlitz3.ab3@26437> RTS
00035752 <AmiBlitz3.ab3@26441>   JSR free_residents                    ; first free the allready loaded residents
00035758 <AmiBlitz3.ab3@26442>   JSR Clear_Residents_table             ; second clear the complete resident table
0003575A <AmiBlitz3.ab3@26443> RTS
00035762 <AmiBlitz3.ab3@26447>   MOVE.w #$FFFF,state_of_residents
00035768 <AmiBlitz3.ab3@26448>   MOVE.w state_of_residents,D0
0003576E <AmiBlitz3.ab3@26449>   JSR reloadresident
00035770 <AmiBlitz3.ab3@26450> RTS
00035772 <AmiBlitz3.ab3@26455>   MOVE.l d0,a1
00035778 <AmiBlitz3.ab3@26456>   MOVEA.l libpointer,A2
0003577C <AmiBlitz3.ab3@26459>     MOVE.l $12(A2),D0
00035780 <AmiBlitz3.ab3@26460>     TST.w -$2(A2,D0.L)
00035784 <AmiBlitz3.ab3@26461>      BEQ.w JL_0_102AAa
00035786 <AmiBlitz3.ab3@26462>     SUBQ.w #1,D1
0003578A <AmiBlitz3.ab3@26463>      BPL.w JL_0_102AAa
0003578E <AmiBlitz3.ab3@26464>     MOVEA.l -$1A(A2,D0.L),A3
00035790 <AmiBlitz3.ab3@26465>     ADDA.l A2,A3
00035792 <AmiBlitz3.ab3@26468>       MOVE.b (A3)+,(A1)+
00035796 <AmiBlitz3.ab3@26469>     BNE.w JL_0_10294a
00035798 <AmiBlitz3.ab3@26471>     CLR.b -(A1)
0003579C <AmiBlitz3.ab3@26472>     MOVE.w -$4(A2,D0.L),D0
000357A2 <AmiBlitz3.ab3@26473>     AND.l #$ffff,d0
000357A4 <AmiBlitz3.ab3@26474> RTS
000357A6 <AmiBlitz3.ab3@26477>     MOVEA.l (A2),A2
000357AA <AmiBlitz3.ab3@26478> BRA.w JL_0_1027Ca
000357BA <AmiBlitz3.ab3@26483> str_maxobjects_name:   Dc.b "              ",0 : Even
000357CA <AmiBlitz3.ab3@26484> str_maxobjects_name2:  Dc.b "              ",0 : Even
000357CE <AmiBlitz3.ab3@26485> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
000357D2 <AmiBlitz3.ab3@26486>                        Dc.l $00000000
000357DE <AmiBlitz3.ab3@26487> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000357E2 <AmiBlitz3.ab3@26489> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
000357E6 <AmiBlitz3.ab3@26490>                        Dc.l $00000000
000357F2 <AmiBlitz3.ab3@26491> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000357F6 <AmiBlitz3.ab3@26493> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
000357FA <AmiBlitz3.ab3@26494>                        Dc.l $00000000
00035806 <AmiBlitz3.ab3@26495> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003580A <AmiBlitz3.ab3@26497> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
0003580E <AmiBlitz3.ab3@26498>                        Dc.l $00000000
0003581A <AmiBlitz3.ab3@26499> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003581E <AmiBlitz3.ab3@26501> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035822 <AmiBlitz3.ab3@26502>                        Dc.l $00000000
0003582E <AmiBlitz3.ab3@26503> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035832 <AmiBlitz3.ab3@26505> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035836 <AmiBlitz3.ab3@26506>                        Dc.l $00000000
00035842 <AmiBlitz3.ab3@26507> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035844 <AmiBlitz3.ab3@26509> maxobjects_value:      Dc.w $0064
00035848 <AmiBlitz3.ab3@26510>                        Dc.l $00000000
00035854 <AmiBlitz3.ab3@26511> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035856 <AmiBlitz3.ab3@26513> maxobjects_value2:     Dc.w $0014
00035858 <AmiBlitz3.ab3@26514>                        Dc.w $0000
00035864 <AmiBlitz3.ab3@26516> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035865 <AmiBlitz3.ab3@26520> set_create_iconfile:   Dc.b $00
00035868 <AmiBlitz3.ab3@26521> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003586A <AmiBlitz3.ab3@26522>                        Dc.b $00,$01
0003586B <AmiBlitz3.ab3@26524> set_use_debugger:      Dc.b $00                            ; Flags.w
0003586E <AmiBlitz3.ab3@26525> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035870 <AmiBlitz3.ab3@26526>                        Dc.b $00,$01                        ; GadgetType.w
00035874 <AmiBlitz3.ab3@26527> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035878 <AmiBlitz3.ab3@26528> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003587C <AmiBlitz3.ab3@26529> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003587E <AmiBlitz3.ab3@26530> AL_0_11094:            Ds.w 1
0003587F <AmiBlitz3.ab3@26532> set_make_smallestcode: Ds.b 1
00035882 <AmiBlitz3.ab3@26533> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035884 <AmiBlitz3.ab3@26534>                        Dc.b $00,$01
00035885 <AmiBlitz3.ab3@26535> set_link_debuginfo:    Ds.b 1
00035888 <AmiBlitz3.ab3@26536> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003588A <AmiBlitz3.ab3@26537>                        Dc.b $00,$01
00035AAA <AmiBlitz3.ab3@26542>   Ds.l 136         ;resident files STEP $44 piece 8
00035B2A <AmiBlitz3.ab3@26547> str_calcexpression:        Ds.l 32
00035B2E <AmiBlitz3.ab3@26548> destbufferend_backup_calc: Ds.l 1
00035B38 <AmiBlitz3.ab3@26553>   MOVE.l destbufferend,destbufferend_backup_calc
00035B3E <AmiBlitz3.ab3@26554> 
00035B44 <AmiBlitz3.ab3@26555>   MOVE.l A7,errstack
00035B4E <AmiBlitz3.ab3@26556>   MOVE.l #Calc_Error_Exit,errcont
00035B78 <AmiBlitz3.ab3@26563>   !basic         ; get the flage for the conversion form the editor
00035BBC <AmiBlitz3.ab3@26564>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00035C00 <AmiBlitz3.ab3@26565>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00035C1E <AmiBlitz3.ab3@26566>   !asm
00035C24 <AmiBlitz3.ab3@26568>   LEA str_calcexpression,A0
00035C2A <AmiBlitz3.ab3@26577>   JSR setcvars
00035C30 <AmiBlitz3.ab3@26578>   JSR setsvars
00035C36 <AmiBlitz3.ab3@26579>   CLR.w connest
00035C3C <AmiBlitz3.ab3@26580>   LEA str_calcexpression,A5
00035C42 <AmiBlitz3.ab3@26581>   JSR AJL_0_BF6E
00035C48 <AmiBlitz3.ab3@26582>   LEA str_calcexpression,A0
00035C4A <AmiBlitz3.ab3@26583>   TST.l D3
00035C4E <AmiBlitz3.ab3@26584>    BPL.w JL_0_11AE8
00035C52 <AmiBlitz3.ab3@26585>   MOVE.b #$2D,(A0)+
00035C54 <AmiBlitz3.ab3@26586>   NEG.l D3
00035C5C <AmiBlitz3.ab3@26589>   CMPI.w #$80,CalculatorButtonDecFlag
00035C60 <AmiBlitz3.ab3@26590>    BEQ.w JL_0_11B74
00035C62 <AmiBlitz3.ab3@26591>   MOVEQ.l #$00,D1
00035C6A <AmiBlitz3.ab3@26592>   CMPI.w #$80,CalculatorButtonBinFlag
00035C6E <AmiBlitz3.ab3@26593>    BNE.w JL_0_11B36
00035C70 <AmiBlitz3.ab3@26594>   MOVEQ.l #$1F,D0
00035C74 <AmiBlitz3.ab3@26595>   MOVE.b #$25,(A0)+
00035C76 <AmiBlitz3.ab3@26598>       LSL.l #1,D3
00035C7A <AmiBlitz3.ab3@26599>        BCC.w JL_0_11B18
00035C7E <AmiBlitz3.ab3@26600>       MOVE.b #"1",(A0)+
00035C80 <AmiBlitz3.ab3@26601>       MOVEQ.l #-$01,D1
00035C84 <AmiBlitz3.ab3@26602>   BRA.w JL_0_11B22
00035C86 <AmiBlitz3.ab3@26605>       TST.w D1
00035C8A <AmiBlitz3.ab3@26606>       BEQ.w JL_0_11B22
00035C8E <AmiBlitz3.ab3@26607>       MOVE.b #"0",(A0)+
00035C92 <AmiBlitz3.ab3@26610>  DBF D0,JL_0_11B08
00035C94 <AmiBlitz3.ab3@26613>   TST.w D1
00035C98 <AmiBlitz3.ab3@26614>   BNE.w JL_0_11B30
00035C9C <AmiBlitz3.ab3@26615>   MOVE.b #"0",(A0)+
00035C9E <AmiBlitz3.ab3@26618>   CLR.b (A0)
00035CA2 <AmiBlitz3.ab3@26619> BRA.w JL_0_11B7C
00035CA4 <AmiBlitz3.ab3@26622>   MOVEQ.l #$07,D0
00035CA8 <AmiBlitz3.ab3@26623>   MOVE.b #$24,(A0)+
00035CAA <AmiBlitz3.ab3@26626>     MOVE.l D3,D2
00035CAC <AmiBlitz3.ab3@26627>     SWAP D2
00035CAE <AmiBlitz3.ab3@26628>     LSR.w #8,D2
00035CB0 <AmiBlitz3.ab3@26629>     LSR.w #4,D2
00035CB4 <AmiBlitz3.ab3@26630>     ADDI.w #$30,D2
00035CB8 <AmiBlitz3.ab3@26631>     CMP.w #$3A,D2
00035CBC <AmiBlitz3.ab3@26632>      BCS.w JL_0_11B52
00035CBE <AmiBlitz3.ab3@26633>     ADDQ.w #7,D2
00035CC2 <AmiBlitz3.ab3@26636>     CMP.w #$30,D2
00035CC6 <AmiBlitz3.ab3@26637>     BEQ.w JL_0_11B62
00035CC8 <AmiBlitz3.ab3@26638>     MOVE.b D2,(A0)+
00035CCA <AmiBlitz3.ab3@26639>     MOVEQ.l #-$01,D1
00035CCE <AmiBlitz3.ab3@26640>   BRA.w JL_0_11B6A
00035CD0 <AmiBlitz3.ab3@26643>     TST.w D1
00035CD4 <AmiBlitz3.ab3@26644>      BEQ.w JL_0_11B6A
00035CD6 <AmiBlitz3.ab3@26645>     MOVE.b D2,(A0)+
00035CD8 <AmiBlitz3.ab3@26648>     LSL.l #4,D3
00035CDC <AmiBlitz3.ab3@26649>  DBF D0,JL_0_11B3C
00035CE0 <AmiBlitz3.ab3@26651> BRA.w JL_0_11B26
00035CE2 <AmiBlitz3.ab3@26654>   MOVE.l D3,D2
00035CE8 <AmiBlitz3.ab3@26655>   JSR makelong
00035CF2 <AmiBlitz3.ab3@26662>   MOVE.l destbufferend_backup_calc,destbufferend
00035CF4 <AmiBlitz3.ab3@26664> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00035DF3 <AmiBlitz3.ab3@26668> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00035DF4 <AmiBlitz3.ab3@26670> Even
00035DF6 <AmiBlitz3.ab3@26684>     MOVE.b (a5)+,d0
00035DFA <AmiBlitz3.ab3@26685>     BEQ 'l2
00035DFE <AmiBlitz3.ab3@26686>     CMP.b #$80,d0
00035E02 <AmiBlitz3.ab3@26687>     BNE 'l1
00035E04 <AmiBlitz3.ab3@26688>     MOVE.b (a5)+,d0
00035E08 <AmiBlitz3.ab3@26689>     BEQ 'l2
00035E0C <AmiBlitz3.ab3@26690>     CMP.b #$02,d0
00035E10 <AmiBlitz3.ab3@26691>   BNE 'l1
00035E14 <AmiBlitz3.ab3@26694>     CMP.b #$20,(a5)+
00035E18 <AmiBlitz3.ab3@26695>   BEQ 'l3
00035E1A <AmiBlitz3.ab3@26696>   SUBQ.l #1,a5
00035E1C <AmiBlitz3.ab3@26697>   TST.b (a5)
00035E20 <AmiBlitz3.ab3@26698>   BEQ 'l2
00035E24 <AmiBlitz3.ab3@26699>   CMP.w #$8008,(a5)
00035E28 <AmiBlitz3.ab3@26700>   BEQ 'l4
00035E2C <AmiBlitz3.ab3@26701>   CMP.w #$8009,(a5)
00035E30 <AmiBlitz3.ab3@26702>   BEQ 'l4
00035E34 <AmiBlitz3.ab3@26703> BRA 'l1
00035E36 <AmiBlitz3.ab3@26706>   ADDQ.l #2,a5
00035E3C <AmiBlitz3.ab3@26707>   JSR skiprest
00035E3E <AmiBlitz3.ab3@26708> RTS
00035E44 <AmiBlitz3.ab3@26711>   JSR nextline
00035E48 <AmiBlitz3.ab3@26712>   BNE 'l1
00035E4A <AmiBlitz3.ab3@26713> RTS
00035E74 <AmiBlitz3.ab3@26717>   !basic
00035E7E <AmiBlitz3.ab3@26718>   DateFormat 1
00035E8C <AmiBlitz3.ab3@26719>   i.l=SystemDate
00035EB2 <AmiBlitz3.ab3@26720>   a$=Date$ (i)
00035F30 <AmiBlitz3.ab3@26721>   a$=Replace$(a$,"/",".")
00035F36 <AmiBlitz3.ab3@26722>   GetD0 &a$
00035F38 <AmiBlitz3.ab3@26723>   MOVEQ #8,d2
00035F3A <AmiBlitz3.ab3@26724>   MOVE.l d0,a0
00035F3C <AmiBlitz3.ab3@26727>     MOVE.b (a0)+,d1
00035F42 <AmiBlitz3.ab3@26728>     JSR pokedata1b
00035F46 <AmiBlitz3.ab3@26729>  DBF d2,'l1
00035F48 <AmiBlitz3.ab3@26731>   MOVEQ #0,d0
00035F4A <AmiBlitz3.ab3@26732>   MOVE.b (a0)+,d0
00035F68 <AmiBlitz3.ab3@26733>   !asm
00035F6E <AmiBlitz3.ab3@26734>   ADD.l #9,d2
00035F74 <AmiBlitz3.ab3@26735>   ADD.l #9,a5
00035F76 <AmiBlitz3.ab3@26736> RTS
00035FA0 <AmiBlitz3.ab3@26740>   !basic
00035FAA <AmiBlitz3.ab3@26741>   DateFormat 0
00035FB8 <AmiBlitz3.ab3@26742>   i.l=SystemDate
00035FDE <AmiBlitz3.ab3@26743>   a$=Date$ (i)
0003605C <AmiBlitz3.ab3@26744>   a$=Replace$(a$,"/",".")
00036062 <AmiBlitz3.ab3@26745>   GetD0 &a$
00036064 <AmiBlitz3.ab3@26746>   MOVEQ #8,d2
00036066 <AmiBlitz3.ab3@26747>   MOVE.l d0,a0
00036068 <AmiBlitz3.ab3@26750>     MOVE.b (a0)+,d1
0003606E <AmiBlitz3.ab3@26751>     JSR pokedata1b
00036072 <AmiBlitz3.ab3@26752>  DBF d2,'l1
00036074 <AmiBlitz3.ab3@26754>   MOVEQ #0,d0
00036076 <AmiBlitz3.ab3@26755>   MOVE.b (a0)+,d0
00036094 <AmiBlitz3.ab3@26756>   !asm
0003609A <AmiBlitz3.ab3@26757>   ADD.l #9,d2
000360A0 <AmiBlitz3.ab3@26758>   ADD.l #13,a5
000360A2 <AmiBlitz3.ab3@26759> RTS
000360CC <AmiBlitz3.ab3@26763>   !basic
000360D6 <AmiBlitz3.ab3@26764>   DateFormat 1
000360E4 <AmiBlitz3.ab3@26765>   i.l = SystemDate
0003610A <AmiBlitz3.ab3@26766>   a$ = Date$ (i)
00036188 <AmiBlitz3.ab3@26767>   a$ = Replace$(a$,"/",".")
0003618E <AmiBlitz3.ab3@26768>   GetD0 &a$
00036190 <AmiBlitz3.ab3@26769>   MOVEQ #8,d2
00036192 <AmiBlitz3.ab3@26770>   MOVE.l d0,a0
00036194 <AmiBlitz3.ab3@26773>     MOVE.b (a0)+,d1
0003619A <AmiBlitz3.ab3@26774>     JSR writebyte
0003619E <AmiBlitz3.ab3@26775>  DBF d2,'l1
000361A0 <AmiBlitz3.ab3@26777>   MOVEQ #0,d0
000361A2 <AmiBlitz3.ab3@26778>   MOVE.b (a0)+,d0
000361C0 <AmiBlitz3.ab3@26779>   !asm
000361C6 <AmiBlitz3.ab3@26780>   ADD.l #9,a5
000361C8 <AmiBlitz3.ab3@26781> RTS
000361F2 <AmiBlitz3.ab3@26785>   !basic
000361FC <AmiBlitz3.ab3@26786>   DateFormat 0
0003620A <AmiBlitz3.ab3@26787>   i.l=SystemDate
00036230 <AmiBlitz3.ab3@26788>   a$=Date$ (i)
000362AE <AmiBlitz3.ab3@26789>   a$=Replace$(a$,"/",".")
000362B4 <AmiBlitz3.ab3@26790>   GetD0 &a$
000362B6 <AmiBlitz3.ab3@26791>   MOVEQ #8,d2
000362B8 <AmiBlitz3.ab3@26792>   MOVE.l d0,a0
000362BA <AmiBlitz3.ab3@26795>     MOVE.b (a0)+,d1
000362C0 <AmiBlitz3.ab3@26796>     JSR writebyte
000362C4 <AmiBlitz3.ab3@26797>  DBF d2,'l1
000362C6 <AmiBlitz3.ab3@26799>   MOVEQ #0,d0
000362C8 <AmiBlitz3.ab3@26800>   MOVE.b (a0)+,d0
000362E6 <AmiBlitz3.ab3@26801>   !asm
000362EC <AmiBlitz3.ab3@26802>   ADD.l #13,a5
000362EE <AmiBlitz3.ab3@26803> RTS
000362F0 <AmiBlitz3.ab3@26807>   MOVE.l d2,-(a7)                                          ; D2 -> stack
000362F2 <AmiBlitz3.ab3@26808>   MOVE.l a5,d0
0003631C <AmiBlitz3.ab3@26809>   !basic
00036320 <AmiBlitz3.ab3@26810>   _myD0.l = PutD0
0003632A <AmiBlitz3.ab3@26811>   If _myD0
00036370 <AmiBlitz3.ab3@26812>     verstring$ = Left$(Peek.s(_myD0),9+3)
000363C2 <AmiBlitz3.ab3@26813>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000363C8 <AmiBlitz3.ab3@26814>   Else
00036402 <AmiBlitz3.ab3@26815>     error{"INTERNAL: Invalid pointer in version_string!"}
00036412 <AmiBlitz3.ab3@26820>   actual_version.l = Peek.l(?versioninformation)
00036422 <AmiBlitz3.ab3@26821>   actual_build.l   = Peek.l(?number_of_builds)
00036446 <AmiBlitz3.ab3@26823>   Format "00"
0003647C <AmiBlitz3.ab3@26824>   Select verstring$
000364A0 <AmiBlitz3.ab3@26826>     Case "VER_MAJOR"
000364DC <AmiBlitz3.ab3@26827>      put_versionstr$ = Str$(actual_version LSR 24)
00036506 <AmiBlitz3.ab3@26829>     Case "VER_MINOR"
0003654A <AmiBlitz3.ab3@26830>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036574 <AmiBlitz3.ab3@26832>     Case "VER_PATCH"
000365B8 <AmiBlitz3.ab3@26833>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000365E2 <AmiBlitz3.ab3@26835>     Case "VER_BUILD"
00036606 <AmiBlitz3.ab3@26836>      Format ""
0003663A <AmiBlitz3.ab3@26837>      put_versionstr$ = Str$(actual_build)
00036640 <AmiBlitz3.ab3@26839>     Default
00036668 <AmiBlitz3.ab3@26840>      put_versionstr$ = "{unknown compilerconstant}"
00036676 <AmiBlitz3.ab3@26843>   End Select
0003669A <AmiBlitz3.ab3@26844>   Format ""
000366AA <AmiBlitz3.ab3@26846>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
000366AC <AmiBlitz3.ab3@26847>   MOVE.l d0,d2
000366AE <AmiBlitz3.ab3@26848>   MOVE.l d2,-(a7)
000366B2 <AmiBlitz3.ab3@26849>   SUB #1,d2
000366B8 <AmiBlitz3.ab3@26851>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000366BA <AmiBlitz3.ab3@26852>   MOVE.l d0,a0
000366BC <AmiBlitz3.ab3@26855>     MOVE.b (a0)+,d1
000366C2 <AmiBlitz3.ab3@26856>     JSR pokedata1b
000366C6 <AmiBlitz3.ab3@26857>  DBF d2,'l1
000366C8 <AmiBlitz3.ab3@26859>   MOVEQ #0,d0
000366E6 <AmiBlitz3.ab3@26860>   !asm
000366E8 <AmiBlitz3.ab3@26861>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
000366EA <AmiBlitz3.ab3@26862>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
000366EC <AmiBlitz3.ab3@26863>   ADD.l d0,d2
000366F2 <AmiBlitz3.ab3@26864>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000366F4 <AmiBlitz3.ab3@26865>   MOVEQ #0,d0
000366F6 <AmiBlitz3.ab3@26866> RTS
000366F8 <AmiBlitz3.ab3@26870>   MOVE.l a5,d0
00036722 <AmiBlitz3.ab3@26871>   !basic
00036726 <AmiBlitz3.ab3@26872>   _myD0.l = PutD0
00036730 <AmiBlitz3.ab3@26873>   If _myD0
00036776 <AmiBlitz3.ab3@26874>     verstring$ = Left$(Peek.s(_myD0),9+3)
000367C8 <AmiBlitz3.ab3@26875>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000367CE <AmiBlitz3.ab3@26876>   Else
00036808 <AmiBlitz3.ab3@26877>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036818 <AmiBlitz3.ab3@26882>   actual_version.l = Peek.l(?versioninformation)
00036828 <AmiBlitz3.ab3@26883>   actual_build.l   = Peek.l(?number_of_builds)
0003684C <AmiBlitz3.ab3@26885>   Format ""
00036882 <AmiBlitz3.ab3@26886>   Select verstring$
000368A6 <AmiBlitz3.ab3@26888>     Case "VER_MAJOR"
000368E2 <AmiBlitz3.ab3@26889>      put_versionstr$ = Str$(actual_version LSR 24)
0003690C <AmiBlitz3.ab3@26891>     Case "VER_MINOR"
00036950 <AmiBlitz3.ab3@26892>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003697A <AmiBlitz3.ab3@26894>     Case "VER_PATCH"
000369BE <AmiBlitz3.ab3@26895>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000369E8 <AmiBlitz3.ab3@26897>     Case "VER_BUILD"
00036A0C <AmiBlitz3.ab3@26898>      Format ""
00036A40 <AmiBlitz3.ab3@26899>      put_versionstr$ = Str$(actual_build)
00036A46 <AmiBlitz3.ab3@26901>     Default
00036A6E <AmiBlitz3.ab3@26902>      put_versionstr$ = "{unknown compilerconstant}"
00036A7C <AmiBlitz3.ab3@26904>   End Select
00036AA0 <AmiBlitz3.ab3@26905>   Format ""
00036AB6 <AmiBlitz3.ab3@26907>   GetD0 FLen(put_versionstr$)-1
00036AB8 <AmiBlitz3.ab3@26908>   MOVE.l d0,d2
00036ABE <AmiBlitz3.ab3@26910>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036AC0 <AmiBlitz3.ab3@26911>   MOVE.l d0,a0
00036AC2 <AmiBlitz3.ab3@26914>     MOVE.b (a0)+,d1
00036AC8 <AmiBlitz3.ab3@26915>     JSR writebyte
00036ACC <AmiBlitz3.ab3@26916>  DBF d2,'l1
00036ACE <AmiBlitz3.ab3@26918>   MOVEQ #0,d0
00036AD0 <AmiBlitz3.ab3@26919>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036AEE <AmiBlitz3.ab3@26920>   !asm
00036AF4 <AmiBlitz3.ab3@26921>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036AF6 <AmiBlitz3.ab3@26922> RTS
00036AF8 <AmiBlitz3.ab3@27024>  MOVE.l a5,-(a7)
00036B24 <AmiBlitz3.ab3@27025>  !fget
00036B28 <AmiBlitz3.ab3@27026>  CMP.w #".",d0
00036B2C <AmiBlitz3.ab3@27027>  BNE 'skip
00036B30 <AmiBlitz3.ab3@27028>  MOVEM.l a2/d2,-(a7)
00036B36 <AmiBlitz3.ab3@27029>  LEA newtypebase,a2
00036B3C <AmiBlitz3.ab3@27030>  JSR getparameter2
00036B40 <AmiBlitz3.ab3@27031>  BEQ.w JUMP_syntaxerr
00036B46 <AmiBlitz3.ab3@27032>  JSR findtype
00036B4A <AmiBlitz3.ab3@27033>  BNE.w JUMP_notypeerr
00036B50 <AmiBlitz3.ab3@27034>  MOVE.l a2,typetocast
00036B54 <AmiBlitz3.ab3@27035>  MOVEM.l (a7)+,a2/d2
00036B58 <AmiBlitz3.ab3@27036>  CMP.w #")",d0
00036B5C <AmiBlitz3.ab3@27037>  BNE JUMP_errorbracketmiss
00036B5E <AmiBlitz3.ab3@27038>  ADDQ.l #4,a7
00036B8A <AmiBlitz3.ab3@27039>  !fget
00036B90 <AmiBlitz3.ab3@27040>  JMP nocast
00036B92 <AmiBlitz3.ab3@27042> 'skip MOVE.l (a7)+,a5
00036B98 <AmiBlitz3.ab3@27043>  JMP JL_0_A410
00036B9E <AmiBlitz3.ab3@27045> JUMP_errorbracketmiss JMP errorbracketmiss
00036BC8 <AmiBlitz3.ab3@27047> Function.l ab3_GetIncludeLock{filename.s}
00036BE8 <AmiBlitz3.ab3@27048>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00036C40 <AmiBlitz3.ab3@27049>   ex.s       = dos_GetExt{filename}
00036C54 <AmiBlitz3.ab3@27051>   If incLock = False
00036CC8 <AmiBlitz3.ab3@27052>     filename = dos_SetExt{filename,"ab3"}
00036CE8 <AmiBlitz3.ab3@27053>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00036CFC <AmiBlitz3.ab3@27056>   If incLock = False
00036D70 <AmiBlitz3.ab3@27057>     filename = dos_SetExt{filename,"ab2"}
00036D90 <AmiBlitz3.ab3@27058>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00036DA4 <AmiBlitz3.ab3@27061>   If incLock = False
00036E18 <AmiBlitz3.ab3@27062>     filename = dos_SetExt{filename,"bb2"}
00036E38 <AmiBlitz3.ab3@27063>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00036E4C <AmiBlitz3.ab3@27066>   If incLock = False
00036EDE <AmiBlitz3.ab3@27067>     filename = dos_SetExt{filename,ex+".ab3"}
00036EFE <AmiBlitz3.ab3@27068>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00036F12 <AmiBlitz3.ab3@27071>   If incLock = False
00036F86 <AmiBlitz3.ab3@27072>     filename = dos_SetExt{filename,"ab2"}
00036FA6 <AmiBlitz3.ab3@27073>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00036FBA <AmiBlitz3.ab3@27076>   If incLock = False
0003702E <AmiBlitz3.ab3@27077>     filename = dos_SetExt{filename,"bb2"}
0003704E <AmiBlitz3.ab3@27078>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037058 <AmiBlitz3.ab3@27081>  Function Return incLock
00037072 <AmiBlitz3.ab3@27082> End Function
0003709C <AmiBlitz3.ab3@27086>   !basic
000370C6 <AmiBlitz3.ab3@27087>   incString.s = Peek$(?ptr_parameterstore)
000370F4 <AmiBlitz3.ab3@27089>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000370F8 <AmiBlitz3.ab3@27090>   incDirP.l   = PutD0                                       ;    "
00037120 <AmiBlitz3.ab3@27091>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
000371A0 <AmiBlitz3.ab3@27092>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000371D2 <AmiBlitz3.ab3@27093>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
000371E6 <AmiBlitz3.ab3@27095>   If incLock = False ; not found => check default Include Directory
000371F6 <AmiBlitz3.ab3@27096>     incDirP.l = Peek.l(?incd)
00037200 <AmiBlitz3.ab3@27097>     If incDirP
00037228 <AmiBlitz3.ab3@27098>       incDir_.s = Peek.s(incDirP)
0003722E <AmiBlitz3.ab3@27099>     Else
00037298 <AmiBlitz3.ab3@27100>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037318 <AmiBlitz3.ab3@27102>     incFile.s = dos_AddPart{incDir_,incString}
0003734A <AmiBlitz3.ab3@27103>     incLock.l = ab3_GetIncludeLock{incFile}
0003735E <AmiBlitz3.ab3@27106>   If incLock = False ; not found => check relative to current source
00037376 <AmiBlitz3.ab3@27107>     incDepth.l = Peek.w(?ininclude)-1
0003739C <AmiBlitz3.ab3@27108>     If incDepth >= 0 AND incDepth < #maxincludes
000373FC <AmiBlitz3.ab3@27109>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
0003747C <AmiBlitz3.ab3@27110>       incFile.s = dos_AddPart{incDir_,incString}
000374AE <AmiBlitz3.ab3@27111>       incLock.l = ab3_GetIncludeLock{incFile}
000374C2 <AmiBlitz3.ab3@27115>   If incLock = False ; still not found => check default Include Directory and name only
000374D2 <AmiBlitz3.ab3@27116>     incDirP.l = Peek.l(?incd)
000374DC <AmiBlitz3.ab3@27117>     If incDirP
00037504 <AmiBlitz3.ab3@27118>       incDir_.s = Peek.s(incDirP)
0003750A <AmiBlitz3.ab3@27119>     Else
00037574 <AmiBlitz3.ab3@27120>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037622 <AmiBlitz3.ab3@27122>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037654 <AmiBlitz3.ab3@27123>     incLock.l = ab3_GetIncludeLock{incFile}
0003765E <AmiBlitz3.ab3@27126>   If incLock
00037674 <AmiBlitz3.ab3@27127>     MaxLen incFile = 1024
00037698 <AmiBlitz3.ab3@27128>     NameFromLock_ incLock,&incFile,1024
000376C2 <AmiBlitz3.ab3@27129>     incFile = Peek.s(&incFile)
000376FA <AmiBlitz3.ab3@27130>     Poke$ ?ptr_parameterstore,incFile
0003770E <AmiBlitz3.ab3@27131>     i = FLen(incFile)
0003771A <AmiBlitz3.ab3@27132>     GetReg d0,i
00037720 <AmiBlitz3.ab3@27133>     MOVE.l d0,tempstore
00037730 <AmiBlitz3.ab3@27134>     UnLock_ incLock
0003774E <AmiBlitz3.ab3@27137>   !asm
00037754 <AmiBlitz3.ab3@27138>   TST.l tempstore
00037758 <AmiBlitz3.ab3@27139>    BEQ 'l1
0003775E <AmiBlitz3.ab3@27140>   MOVE.l tempstore,d2
00037760 <AmiBlitz3.ab3@27143> RTS
0003778A <AmiBlitz3.ab3@27147>   !basic
000377B4 <AmiBlitz3.ab3@27148>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000377E2 <AmiBlitz3.ab3@27149>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000377E6 <AmiBlitz3.ab3@27150>   incDirP.l   = PutD0                                       ;    "
0003780E <AmiBlitz3.ab3@27151>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003788E <AmiBlitz3.ab3@27152>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000378AE <AmiBlitz3.ab3@27153>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000378C2 <AmiBlitz3.ab3@27155>   If incLock = False                                        ; not found => try orignal string only to find
000378E2 <AmiBlitz3.ab3@27156>     incLock.l = Lock_(&incString,#ACCESS_READ)
000378EC <AmiBlitz3.ab3@27159>   If incLock                                                ; found => store full path
00037902 <AmiBlitz3.ab3@27160>     MaxLen incFile = 1024
00037926 <AmiBlitz3.ab3@27161>     NameFromLock_ incLock,&incFile,1024
00037950 <AmiBlitz3.ab3@27162>     incFile = Peek.s(&incFile)
00037988 <AmiBlitz3.ab3@27163>     Poke$ ?ptr_parameterstore,incFile
00037994 <AmiBlitz3.ab3@27166> 
000379B2 <AmiBlitz3.ab3@27167>   !asm
000379B4 <AmiBlitz3.ab3@27168> RTS
000379BA <AmiBlitz3.ab3@27179>   JSR Aclearallvars
000379C0 <AmiBlitz3.ab3@27180>   JSR free_unusedfunctions
000379CA <AmiBlitz3.ab3@27195>   MOVE.l #"NORE",reqmode
000379D0 <AmiBlitz3.ab3@27196> JSR handle_compileerror
000379D2 <AmiBlitz3.ab3@27199>   MOVE.l d0,-(a7)
000379D4 <AmiBlitz3.ab3@27200>   MOVE.l a5,d0
000379DE <AmiBlitz3.ab3@27201>   !basica7
000379E2 <AmiBlitz3.ab3@27202>   i.l = PutD0
000379EC <AmiBlitz3.ab3@27203>   If i
00037A14 <AmiBlitz3.ab3@27204>     a$ = Peek$(i)
00037A46 <AmiBlitz3.ab3@27205>     b$ = Peeks$(i-7,7)
00037B7E <AmiBlitz3.ab3@27207> 
00037B84 <AmiBlitz3.ab3@27208>     MOVE.l d0,result
00037B88 <AmiBlitz3.ab3@27210>   !asma7
00037B8A <AmiBlitz3.ab3@27211>   MOVE.l (a7)+,d0
00037B8C <AmiBlitz3.ab3@27212> RTS
00037BB6 <AmiBlitz3.ab3@27216>   !basic
00037BE4 <AmiBlitz3.ab3@27217>   !ComData_LEA{comStr_CurrentDir,D0}
00037BE8 <AmiBlitz3.ab3@27218>   currentDirP.l = PutD0
00037C16 <AmiBlitz3.ab3@27220>   !ComData_LEA{comStr_SourceName,D0}
00037C1A <AmiBlitz3.ab3@27221>   fileNameP.l = PutD0
00037C42 <AmiBlitz3.ab3@27223>   check_dirname$  = Peek$(currentDirP)
00037C6A <AmiBlitz3.ab3@27224>   check_filename$ = Peek$(fileNameP)
00037CF0 <AmiBlitz3.ab3@27225>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00037CF6 <AmiBlitz3.ab3@27226>     JSR free_unusedfunctions
00037D40 <AmiBlitz3.ab3@27228>   olddirname$ = Peek$(check_dirname$)
00037D8A <AmiBlitz3.ab3@27229>   oldfilename$ = Peek$(check_filename$)
00037DB4 <AmiBlitz3.ab3@27230>   For i = 0 To #maxincludes-1
00037DC8 <AmiBlitz3.ab3@27231>     incline(i) = 0
00037DD8 <AmiBlitz3.ab3@27232>   Next
00037DF6 <AmiBlitz3.ab3@27233>   !asm
00037DF8 <AmiBlitz3.ab3@27234> RTS
00037DFA <AmiBlitz3.ab3@27238>   MOVEQ #0,d1
00037DFC <AmiBlitz3.ab3@27241>   MOVE.b (a5)+,d0
00037E00 <AmiBlitz3.ab3@27242>   BEQ 'er1
00037E04 <AmiBlitz3.ab3@27243>   CMP.b #$20,d0
00037E08 <AmiBlitz3.ab3@27244>   BEQ 'l1
00037E0A <AmiBlitz3.ab3@27245>   ADDQ #1,d1
00037E0E <AmiBlitz3.ab3@27246>   CMP.b #$22,d0
00037E12 <AmiBlitz3.ab3@27247>   BNE 'l1
00037E14 <AmiBlitz3.ab3@27248> RTS
00037E1A <AmiBlitz3.ab3@27251> JMP syntaxerr
00037E3E <AmiBlitz3.ab3@27262> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00037E5C <AmiBlitz3.ab3@27263> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00037E62 <AmiBlitz3.ab3@27268>   TST.b exdebug
00037E66 <AmiBlitz3.ab3@27269>   BNE 'l10
00037E6C <AmiBlitz3.ab3@27270>   MOVE.l #$4e71,d1
00037E72 <AmiBlitz3.ab3@27271>   JSR writeword
00037E78 <AmiBlitz3.ab3@27272>   MOVE.l destpointer,d0
00037E7A <AmiBlitz3.ab3@27273>   MOVE.l d0,d1
00037E7C <AmiBlitz3.ab3@27274>   ADDQ.l #3,d1
00037E82 <AmiBlitz3.ab3@27275>   AND.l #$fffffffc,d1
00037E88 <AmiBlitz3.ab3@27276>   MOVE.l d1,destpointer
00037E8E <AmiBlitz3.ab3@27277>   SUB.l destpointer,d0
00037E92 <AmiBlitz3.ab3@27278>   BEQ 'lnf1
00037E9C <AmiBlitz3.ab3@27279>   CMP.l #-1,bssstart
00037EA0 <AmiBlitz3.ab3@27280>   BNE 'lnf1
00037EAA <AmiBlitz3.ab3@27281>   CMP.l #-1,chipstart
00037EAE <AmiBlitz3.ab3@27282>   BNE 'lnf1
00037EB4 <AmiBlitz3.ab3@27283>   MOVE.l destpointer,a4
00037EBA <AmiBlitz3.ab3@27284>   TST.w dontwrite
00037EBE <AmiBlitz3.ab3@27285>   BNE 'lnf1
00037EC4 <AmiBlitz3.ab3@27286>   MOVE.w #$4e71,-2(a4)
00037ECE <AmiBlitz3.ab3@27289>   CMP.l #-1,bssstart
00037ED2 <AmiBlitz3.ab3@27290>   BEQ 'l11
00037ED8 <AmiBlitz3.ab3@27291>   MOVE.l #erro1t,-(a7)
00037EDE <AmiBlitz3.ab3@27292> JMP handle_compileerror
00037EE8 <AmiBlitz3.ab3@27295>   MOVE.l destpointer,bssstart
00037EF0 <AmiBlitz3.ab3@27296>   MOVE.b #1,bssmode
00037EF6 <AmiBlitz3.ab3@27299>   TST.b chipmode
00037EFA <AmiBlitz3.ab3@27300>   BEQ 'l10
00037F04 <AmiBlitz3.ab3@27301>   MOVE.l destpointer,chipend
00037F0A <AmiBlitz3.ab3@27302>   CLR.b chipmode
00037F10 <AmiBlitz3.ab3@27305>   JSR get1bytemain
00037F12 <AmiBlitz3.ab3@27306> RTS
00037F18 <AmiBlitz3.ab3@27310>    TST.b exdebug
00037F1C <AmiBlitz3.ab3@27311>   BNE 'x1
00037F22 <AmiBlitz3.ab3@27312>   MOVE.l destpointer,d0
00037F28 <AmiBlitz3.ab3@27313>   MOVE.l d0,realbssend
00037F2E <AmiBlitz3.ab3@27314>   MOVE.l #$4e71,d1
00037F34 <AmiBlitz3.ab3@27315>   JSR writeword
00037F3A <AmiBlitz3.ab3@27316>   MOVE.l destpointer,d0
00037F3C <AmiBlitz3.ab3@27317>   MOVE.l d0,d1
00037F3E <AmiBlitz3.ab3@27318>   ADDQ.l #3,d1
00037F44 <AmiBlitz3.ab3@27319>   AND.l #$fffffffc,d1
00037F4A <AmiBlitz3.ab3@27320>   MOVE.l d1,destpointer
00037F50 <AmiBlitz3.ab3@27321>   SUB.l destpointer,d0
00037F54 <AmiBlitz3.ab3@27322>   BEQ 'lnf1
00037F5A <AmiBlitz3.ab3@27323>   MOVE.l destpointer,a4
00037F64 <AmiBlitz3.ab3@27324>   CMP.l #-1,bssstart
00037F68 <AmiBlitz3.ab3@27325>   BNE 'lnf1
00037F72 <AmiBlitz3.ab3@27326>   CMP.l #-1,chipstart
00037F76 <AmiBlitz3.ab3@27327>   BNE 'lnf1
00037F7C <AmiBlitz3.ab3@27328>   TST.w dontwrite
00037F80 <AmiBlitz3.ab3@27329>   BNE 'lnf1
00037F86 <AmiBlitz3.ab3@27330>   MOVE.w #$4e71,-2(a4)
00037F8C <AmiBlitz3.ab3@27333>   TST.b bssmode
00037F90 <AmiBlitz3.ab3@27334>   BEQ 'l10
00037F9A <AmiBlitz3.ab3@27335>   MOVE.l destpointer,bssend
00037FA0 <AmiBlitz3.ab3@27336>   CLR.b bssmode
00037FAA <AmiBlitz3.ab3@27341>   CMP.l #-1,chipstart
00037FAE <AmiBlitz3.ab3@27342>   BEQ 'l11
00037FB4 <AmiBlitz3.ab3@27343>   MOVE.l #erro1t,-(a7)
00037FBA <AmiBlitz3.ab3@27344> JMP handle_compileerror
00037FC4 <AmiBlitz3.ab3@27347>   MOVE.l destpointer,chipstart
00037FCC <AmiBlitz3.ab3@27348>   MOVE.b #1,chipmode
00037FD2 <AmiBlitz3.ab3@27351>   JSR get1bytemain
00037FD4 <AmiBlitz3.ab3@27352> RTS
00037FFE <AmiBlitz3.ab3@27356>   !basic
00038010 <AmiBlitz3.ab3@27366>   i.l = Peek.w(?ininclude)
00038036 <AmiBlitz3.ab3@27367>   If i>=0 AND i<#maxincludes
00038068 <AmiBlitz3.ab3@27368>     incdim (i) = Peek.s(?includetemp2)
00038082 <AmiBlitz3.ab3@27369>     incline(i) = Peek.l(?includeline)
0003808C <AmiBlitz3.ab3@27371>     If CLIMode
0003813A <AmiBlitz3.ab3@27372>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038158 <AmiBlitz3.ab3@27376>   !asm
0003815A <AmiBlitz3.ab3@27377> RTS
00038184 <AmiBlitz3.ab3@27381>   !basic
00038196 <AmiBlitz3.ab3@27382>   i.l = Peek.w(?ininclude)
000381BC <AmiBlitz3.ab3@27383>   If i>=0 AND i<#maxincludes
000381EC <AmiBlitz3.ab3@27384>     incdim (i) = ""
00038200 <AmiBlitz3.ab3@27385>     incline(i) = 0
00038238 <AmiBlitz3.ab3@27386>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038256 <AmiBlitz3.ab3@27388>   !asm
00038258 <AmiBlitz3.ab3@27389> RTS
0003825E <AmiBlitz3.ab3@27393>   LEA replacedat,a0
00038262 <AmiBlitz3.ab3@27394>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038264 <AmiBlitz3.ab3@27395> RTS
0003826A <AmiBlitz3.ab3@27399>   TST.b fpu
0003826E <AmiBlitz3.ab3@27400>   BEQ 'l1
00038278 <AmiBlitz3.ab3@27403>   MOVE.l destpointer,newinitaddr
0003827E <AmiBlitz3.ab3@27404>   JSR writeword
00038284 <AmiBlitz3.ab3@27405>   JSR writelong
00038286 <AmiBlitz3.ab3@27406> RTS
00038288 <AmiBlitz3.ab3@27411>   TST.b (a5)
0003828C <AmiBlitz3.ab3@27412>    BEQ.s 'll20
00038290 <AmiBlitz3.ab3@27413>   CMP.b #$20,(a5)
00038294 <AmiBlitz3.ab3@27414>    BNE.s 'll10
00038296 <AmiBlitz3.ab3@27415>   ADDQ.l #1,a5
0003829A <AmiBlitz3.ab3@27416> BRA.s 'll21
0003829E <AmiBlitz3.ab3@27419>   CMP.b #";",(a5)
000382A2 <AmiBlitz3.ab3@27420>   BNE.s 'll20
000382A4 <AmiBlitz3.ab3@27423>   TST.b (a5)+
000382A8 <AmiBlitz3.ab3@27424>   BEQ.s 'll23
000382AC <AmiBlitz3.ab3@27425> BRA.s 'll25
000382AE <AmiBlitz3.ab3@27428>   SUBQ.l #1,a5
000382B0 <AmiBlitz3.ab3@27431> RTS
000382B4 <AmiBlitz3.ab3@27435>   MOVEM.l a2/d2,-(a7)
000382B6 <AmiBlitz3.ab3@27436>   MOVEQ #0,d2
000382BC <AmiBlitz3.ab3@27437>   LEA ptr_parameterstore,a0
000382C2 <AmiBlitz3.ab3@27438>   LEA chartab,a2
000382C4 <AmiBlitz3.ab3@27441>   MOVE.b (a5),d0
000382C8 <AmiBlitz3.ab3@27442>   TST.b 0(a2,d0)
000382CC <AmiBlitz3.ab3@27443>   BNE 'l10
000382CE <AmiBlitz3.ab3@27444>   ADDQ.l #1,a5
000382D0 <AmiBlitz3.ab3@27445>   MOVE.b d0,(a0)+
000382D2 <AmiBlitz3.ab3@27446>   ADDQ.l #1,d2
000382D6 <AmiBlitz3.ab3@27447> BRA fc2
000382D8 <AmiBlitz3.ab3@27450>   CLR.b (a0)+
000382DE <AmiBlitz3.ab3@27451>   JSR findlabel2
000382E0 <AmiBlitz3.ab3@27452>   MOVE.l a2,a0
000382E4 <AmiBlitz3.ab3@27453>   MOVEM.l (a7)+,a2/d2
000382E6 <AmiBlitz3.ab3@27454> RTS
000382E8 <AmiBlitz3.ab3@27458>   TST.l d0
000382EC <AmiBlitz3.ab3@27459>   BNE 'l10
000382F2 <AmiBlitz3.ab3@27460>     MOVE.l #syntax_,-(a7)
000382F8 <AmiBlitz3.ab3@27461> JMP handle_compileerror
000382FE <AmiBlitz3.ab3@27464>   CMP.l #1,d0
00038302 <AmiBlitz3.ab3@27465>   BNE 'l20
00038308 <AmiBlitz3.ab3@27466>     MOVE.l #overflow,-(a7)
0003830E <AmiBlitz3.ab3@27467> JMP handle_compileerror
00038310 <AmiBlitz3.ab3@27470>   ADD.l a2,d0
00038312 <AmiBlitz3.ab3@27471>   MOVE.l d0,-(a7)
00038318 <AmiBlitz3.ab3@27472> JMP handle_compileerror
0003831E <AmiBlitz3.ab3@27476>   JMP _return
00038324 <AmiBlitz3.ab3@27477>   JMP _return
0003832A <AmiBlitz3.ab3@27478>   JMP _return
00038330 <AmiBlitz3.ab3@27479>   JMP _return
00038336 <AmiBlitz3.ab3@27480>   JMP _return
0003833C <AmiBlitz3.ab3@27481>   JMP _return
00038342 <AmiBlitz3.ab3@27482>   JMP _return
00038348 <AmiBlitz3.ab3@27483>   JMP _return
0003834E <AmiBlitz3.ab3@27484>   JMP _return
00038354 <AmiBlitz3.ab3@27485>   JMP _return
0003835A <AmiBlitz3.ab3@27486>   JMP Atokejsr
00038360 <AmiBlitz3.ab3@27487>   JMP writeinit
00038366 <AmiBlitz3.ab3@27488>   JMP macroexecute
0003836C <AmiBlitz3.ab3@27489>   JMP findnext
00038372 <AmiBlitz3.ab3@27490>   JMP replacelib
00038378 <AmiBlitz3.ab3@27491>   JMP findconstant2
0003837E <AmiBlitz3.ab3@27492>   JMP findchar                                             ;char in d1
00038384 <AmiBlitz3.ab3@27493>   JMP stripspaces
0003838A <AmiBlitz3.ab3@27494>   JMP calc                                                 ;d0 varmode
00038390 <AmiBlitz3.ab3@27495>   JMP error
00038396 <AmiBlitz3.ab3@27496>   JMP writelong                                            ;d1 value
0003839C <AmiBlitz3.ab3@27497>   JMP writeword                                            ;d1 value
000383A2 <AmiBlitz3.ab3@27498>   JMP writebyte                                            ;d1 value
000383A8 <AmiBlitz3.ab3@27499> JMP exit
000383AC <AmiBlitz3.ab3@27503>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
000383AE <AmiBlitz3.ab3@27506>   fast            Dc.w 0
000383B0 <AmiBlitz3.ab3@27507>   fpu             Dc.w 0
000383B2 <AmiBlitz3.ab3@27508>   newsyntax       Dc.w 0
000383B3 <AmiBlitz3.ab3@27510>   optistring      Dc.b 0
000383B4 <AmiBlitz3.ab3@27511>   optistring2     Dc.b 0
000383B5 <AmiBlitz3.ab3@27512>   optiarray       Dc.b 0
000383B6 <AmiBlitz3.ab3@27513>   quickadd        Dc.b 0
000383B8 <AmiBlitz3.ab3@27514>   newmode         Dc.w 0
000383BA <AmiBlitz3.ab3@27515>   mode            Dc.w 0
000383BC <AmiBlitz3.ab3@27516>   string1         Dc.w 0
000383BE <AmiBlitz3.ab3@27517>   load_var_size   Dc.w 0
000383C0 <AmiBlitz3.ab3@27518>   load_var_reg    Dc.w 0
000383C4 <AmiBlitz3.ab3@27519>   load_var_addr   Dc.l 0
000383C6 <AmiBlitz3.ab3@27520>   imm_size        Dc.w 0
000383C8 <AmiBlitz3.ab3@27521>   imm_reg         Dc.w 0
000383CC <AmiBlitz3.ab3@27522>   imm_addr        Dc.l 0
000383CD <AmiBlitz3.ab3@27523>   iee             Dc.b 0
000383CE <AmiBlitz3.ab3@27524>   _dcb            Dc.b 0
000383D2 <AmiBlitz3.ab3@27525>   nohunkoffset    Dc.l 0
000383D6 <AmiBlitz3.ab3@27528> teddata:        Dc.l tokens
000383DA <AmiBlitz3.ab3@27529>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
000383DE <AmiBlitz3.ab3@27530>                 Dc.l read_xtrafile
000383E2 <AmiBlitz3.ab3@27531>                 Dc.l write_xtrafile
000383E6 <AmiBlitz3.ab3@27532>                 Dc.l call_menuentry                        ; compile AND RUN ?
000383EA <AmiBlitz3.ab3@27533>                 Dc.l 0
000383EE <AmiBlitz3.ab3@27534>                 Dc.b ":",34,".;"
000383F2 <AmiBlitz3.ab3@27535>                 Dc.l "NEW1"
000383F6 <AmiBlitz3.ab3@27536>                 Dc.l newtypebase
000383FA <AmiBlitz3.ab3@27537> realconstbase:  Dc.l labelbase
000383FE <AmiBlitz3.ab3@27538> deflib          Dc.l 0
00038402 <AmiBlitz3.ab3@27539> incd            Dc.l 0
00038406 <AmiBlitz3.ab3@27540>                 Dc.l 0
0003840A <AmiBlitz3.ab3@27541>                 Dc.l 0
0003840E <AmiBlitz3.ab3@27542>                 Dc.l 0
00038410 <AmiBlitz3.ab3@27543> _return         RTS
00038411 <AmiBlitz3.ab3@27544>                 Dc.b 0
00038811 <AmiBlitz3.ab3@27545> chartab2        Ds.l 256
00038815 <AmiBlitz3.ab3@27546> codeend         Dc.l 0
00038819 <AmiBlitz3.ab3@27547> hunkoffsetnum   Dc.l 0
0003881D <AmiBlitz3.ab3@27548> chipsize        Dc.l 0
00038821 <AmiBlitz3.ab3@27549> bsssize         Dc.l 0
00038825 <AmiBlitz3.ab3@27550> bssstart        Dc.l -1
00038829 <AmiBlitz3.ab3@27551> bssend          Dc.l -1
0003882D <AmiBlitz3.ab3@27552> chipstart       Dc.l -1
00038831 <AmiBlitz3.ab3@27553> chipend         Dc.l -1
00038832 <AmiBlitz3.ab3@27554> bssmode         Dc.b 0
00038833 <AmiBlitz3.ab3@27555> chipmode        Dc.b 0
00038834 <AmiBlitz3.ab3@27556> newhunk         Dc.b 0
00038838 <AmiBlitz3.ab3@27557> bssnum          Dc.l 0
0003883C <AmiBlitz3.ab3@27558> chipnum         Dc.l 0
00038840 <AmiBlitz3.ab3@27559> lastinstruction Dc.l 0
00038844 <AmiBlitz3.ab3@27560> lastinstructionaddr Dc.l 0
00038858 <AmiBlitz3.ab3@27561> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0003885C <AmiBlitz3.ab3@27562> tstsize1b:      Ds.l 1
00038860 <AmiBlitz3.ab3@27563> bsssize2        Dc.l 1
00038864 <AmiBlitz3.ab3@27564>                 Dc.l $03E9
00038868 <AmiBlitz3.ab3@27565> tstsize2b:      Dc.l $100
0003887C <AmiBlitz3.ab3@27566> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038880 <AmiBlitz3.ab3@27567> tstsize1c:      Ds.l 1
00038884 <AmiBlitz3.ab3@27568> bsssize3        Dc.l 1
00038888 <AmiBlitz3.ab3@27569> chipsize2       Dc.l 1
0003888C <AmiBlitz3.ab3@27570>                 Dc.l $3e9
00038890 <AmiBlitz3.ab3@27571> tstsize2c       Dc.l 0
000388A0 <AmiBlitz3.ab3@27572> hunkend         Dc.l $3f2,$3eb,0,$3f2
000388B0 <AmiBlitz3.ab3@27573> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000388B7 <AmiBlitz3.ab3@27574> strcpy          Dc.b "strcpy",0
000388BE <AmiBlitz3.ab3@27575> strcmp          Dc.b "strcmp",0
000388C5 <AmiBlitz3.ab3@27576> strvar          Dc.b "strvar",0
000388CA <AmiBlitz3.ab3@27577> qmul            Dc.b "qmul",0
000388CF <AmiBlitz3.ab3@27578> qdiv            Dc.b "qdiv",0
000388D6 <AmiBlitz3.ab3@27579> _MaxLen         Dc.b "maxlen",0
000388DB <AmiBlitz3.ab3@27580> notf            Dc.b "????",0
000388FE <AmiBlitz3.ab3@27582> errtext         Dc.b "only reg addressing Mode supported",0
00038928 <AmiBlitz3.ab3@27583> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003896A <AmiBlitz3.ab3@27584> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0003896C <AmiBlitz3.ab3@27585> peeksize        Dc.w 0
00038970 <AmiBlitz3.ab3@27587> mainstart       Dc.l 0
00038971 <AmiBlitz3.ab3@27589> infunctioncode  Dc.b 0
00038973 <AmiBlitz3.ab3@27590> regnumstore     Dc.w 0
000389A0 <AmiBlitz3.ab3@27591>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000389A8 <AmiBlitz3.ab3@27592> testcode        Dc.b "print i",0
00038A0C <AmiBlitz3.ab3@27593>                 Ds.b 100
00038A1A <AmiBlitz3.ab3@27594> devo            Dc.b "developobject",0 : Even
00038A2C <AmiBlitz3.ab3@27595> autostorename   Dc.b "__autoconstantnum",0
00038A36 <AmiBlitz3.ab3@27596> _include        Dc.b "__include",0
00038A3E <AmiBlitz3.ab3@27597> _debug          Dc.b "__debug",0
00038A42 <AmiBlitz3.ab3@27598> unusedfunc      Dc.l 0
00038A44 <AmiBlitz3.ab3@27602>   MOVE.l a0,d0
00038A6E <AmiBlitz3.ab3@27603>   !basic
00038A72 <AmiBlitz3.ab3@27604>   *olderror.l= PutD0
00038ACC <AmiBlitz3.ab3@27605> 
00038B00 <AmiBlitz3.ab3@27606>   error_type$ = error$
00038B9C <AmiBlitz3.ab3@27607> 
00038BB0 <AmiBlitz3.ab3@27608>   If Peek.l (?beforeparameterfetch)
00038BC6 <AmiBlitz3.ab3@27609>     MaxLen detokenline.s = 65536
00038C08 <AmiBlitz3.ab3@27610>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00038C18 <AmiBlitz3.ab3@27611>    *tn.preprocessor = Peek.l(?include_preprocessor)
00038C42 <AmiBlitz3.ab3@27612>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00038C6A <AmiBlitz3.ab3@27613>     If written>0 Then Poke.b &detokenline+written,0
00038C94 <AmiBlitz3.ab3@27614>     sourceLineText.s = Peek.s(&detokenline)
00038C9A <AmiBlitz3.ab3@27615>   Else
00038CC2 <AmiBlitz3.ab3@27616>     sourceLineText = "NULL"
00038CF6 <AmiBlitz3.ab3@27618>   error_source$ = sourceLineText
00038D48 <AmiBlitz3.ab3@27619>   error$=error$+sourceLineText
00038D4E <AmiBlitz3.ab3@27620>   GetD0 &error$
00038D6C <AmiBlitz3.ab3@27621>   !asm
00038D6E <AmiBlitz3.ab3@27622>   MOVE.l d0,a0
00038D70 <AmiBlitz3.ab3@27623> RTS
00038D72 <AmiBlitz3.ab3@27627>   MOVE.l a0,-(a7)
00038D74 <AmiBlitz3.ab3@27628>   MOVE.l a0,d0
00038D76 <AmiBlitz3.ab3@27629>   MOVE.l a5,a0                                             ;macro title
00038DA0 <AmiBlitz3.ab3@27630>   !basic
00038DA4 <AmiBlitz3.ab3@27631>   i = PutD0
00038DA6 <AmiBlitz3.ab3@27632>   MOVEQ #20,d0
00038DA8 <AmiBlitz3.ab3@27635>     MOVE.b -(a0),d1
00038DAC <AmiBlitz3.ab3@27636>     BEQ 'l1
00038DB0 <AmiBlitz3.ab3@27637>     CMP.b #":",d1
00038DB4 <AmiBlitz3.ab3@27638>     BEQ 'l1
00038DB6 <AmiBlitz3.ab3@27639>     SUBQ.l #1,d0
00038DBA <AmiBlitz3.ab3@27640>     BNE 'l2
00038DBC <AmiBlitz3.ab3@27643>   ADDQ #1,a0
00038DBE <AmiBlitz3.ab3@27644>   MOVE.l a0,d0
00038DC2 <AmiBlitz3.ab3@27645>   i2.l = PutD0
00038DDE <AmiBlitz3.ab3@27646>   If Peek.w (?ininclude)>0
00038E38 <AmiBlitz3.ab3@27647>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00038E48 <AmiBlitz3.ab3@27648>     errorline.l = Peek.l(?includeline);-1
00038E70 <AmiBlitz3.ab3@27649>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00038E9A <AmiBlitz3.ab3@27650>     errorfile.s = Peek.s(?includetemp2)
00038EA0 <AmiBlitz3.ab3@27651>   Else
00038ED8 <AmiBlitz3.ab3@27652>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00038EEE <AmiBlitz3.ab3@27653>     errorline.l = Peek.l(?compilelinecounter) + 1
00038F22 <AmiBlitz3.ab3@27654>     errorfile.s = cli_sourcefile
00038F2C <AmiBlitz3.ab3@27657>   If i
00038FD0 <AmiBlitz3.ab3@27658>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
0003904E <AmiBlitz3.ab3@27659>     errortext.s = Replace$(errortext,"\n","\\0a")
00039054 <AmiBlitz3.ab3@27660>   Else
0003907C <AmiBlitz3.ab3@27661>     errortext.s = "???"
000391F4 <AmiBlitz3.ab3@27664>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
000392BC <AmiBlitz3.ab3@27665>   NPrint "  ",error_type$,"\\n  ",error_source$
000392DA <AmiBlitz3.ab3@27669>   !asm
000392DC <AmiBlitz3.ab3@27670>   MOVE.l (a7)+,a0
000392DE <AmiBlitz3.ab3@27671> RTS
000392E0 <AmiBlitz3.ab3@27675>   MOVE.l a0,-(a7)
000392E2 <AmiBlitz3.ab3@27676>   MOVE.l a0,d0
000392E4 <AmiBlitz3.ab3@27677>   MOVE.l a5,a0                                             ;macro title
0003930E <AmiBlitz3.ab3@27678>   !basic
00039312 <AmiBlitz3.ab3@27679>   i = PutD0
00039314 <AmiBlitz3.ab3@27680>   MOVEQ #20,d0
00039316 <AmiBlitz3.ab3@27683>     MOVE.b -(a0),d1
0003931A <AmiBlitz3.ab3@27684>     BEQ 'l1
0003931E <AmiBlitz3.ab3@27685>     CMP.b #":",d1
00039322 <AmiBlitz3.ab3@27686>     BEQ 'l1
00039324 <AmiBlitz3.ab3@27687>     SUBQ.l #1,d0
00039328 <AmiBlitz3.ab3@27688>     BNE 'l2
0003932A <AmiBlitz3.ab3@27691>   ADDQ #1,a0
0003932C <AmiBlitz3.ab3@27692>   MOVE.l a0,d0
00039330 <AmiBlitz3.ab3@27693>   i2.l = PutD0
000393B4 <AmiBlitz3.ab3@27694>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
000393C8 <AmiBlitz3.ab3@27695>   If fid <> -1
000393E4 <AmiBlitz3.ab3@27696>     If Peek.w (?ininclude)>0
0003943E <AmiBlitz3.ab3@27697>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039444 <AmiBlitz3.ab3@27698>     Else
00039470 <AmiBlitz3.ab3@27699>       Poke$(?includetemp2),""
0003949A <AmiBlitz3.ab3@27701>     a$ = Peek$(?includetemp2)
0003950C <AmiBlitz3.ab3@27702>     x$ = Replace$(Peek$(i),"\\0a","\n")
0003953E <AmiBlitz3.ab3@27703>     file_WriteLine{fid,x$}
00039588 <AmiBlitz3.ab3@27704>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
000395B4 <AmiBlitz3.ab3@27705>     If a$
000395E6 <AmiBlitz3.ab3@27706>       file_WriteLine{fid,a$}
00039630 <AmiBlitz3.ab3@27707>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039658 <AmiBlitz3.ab3@27708>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003965E <AmiBlitz3.ab3@27709>     Else
00039684 <AmiBlitz3.ab3@27710>       file_WriteLine{fid,"none"}
000396B4 <AmiBlitz3.ab3@27712>     file_WriteLine{fid,Peek$(i2)}
0003970A <AmiBlitz3.ab3@27713>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039754 <AmiBlitz3.ab3@27714>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003975E <AmiBlitz3.ab3@27715>     file_Close{fid}
0003977C <AmiBlitz3.ab3@27717>   !asm
0003977E <AmiBlitz3.ab3@27718>   MOVE.l (a7)+,a0
00039780 <AmiBlitz3.ab3@27719> RTS
000397AA <AmiBlitz3.ab3@27723>   !basic
000397AE <AmiBlitz3.ab3@27724>   progress.l     = PutD0
000397C0 <AmiBlitz3.ab3@27725>   total.l        = Peek.w(?progressbar_width)
000397DE <AmiBlitz3.ab3@27726>   calcpro        = (progress * 100) / total +1
000397F0 <AmiBlitz3.ab3@27727>   pass.l         = Peek.w(?pass)
00039802 <AmiBlitz3.ab3@27728>   typ.l          = Peek.w(?compiler_job)
00039820 <AmiBlitz3.ab3@27731> If (pass><pass_old OR typ><typ_old)
0003982E <AmiBlitz3.ab3@27733>     If pass_old><pass
000398CA <AmiBlitz3.ab3@27734>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039920 <AmiBlitz3.ab3@27735>       If cli_verbose>=2 Then NPrint passtatusstr
00039926 <AmiBlitz3.ab3@27738>     pass_old = pass
0003992C <AmiBlitz3.ab3@27739>     typ_old  = typ
00039932 <AmiBlitz3.ab3@27740>     update_comstatus_gui = True
00039944 <AmiBlitz3.ab3@27741>     If typ=0
00039A24 <AmiBlitz3.ab3@27742>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039A2C <AmiBlitz3.ab3@27743>       calcpro = 0  ; set gauge to 0
00039A3E <AmiBlitz3.ab3@27745>     If typ=1
00039B1E <AmiBlitz3.ab3@27746>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039B26 <AmiBlitz3.ab3@27747>       calcpro = 0  ; set gauge to 0
00039B7C <AmiBlitz3.ab3@27750>     If cli_verbose>=3 Then NPrint comstatusstr
00039B8A <AmiBlitz3.ab3@27753>   If (calcpro >< calcpro_old)
00039BDE <AmiBlitz3.ab3@27754>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
00039BE4 <AmiBlitz3.ab3@27755>     calcpro_old = calcpro
00039BEA <AmiBlitz3.ab3@27756>     update_comstatus_gui = True
00039C04 <AmiBlitz3.ab3@27759>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00039C22 <AmiBlitz3.ab3@27760>     !asm
00039C54 <AmiBlitz3.ab3@27761> 
00039C7E <AmiBlitz3.ab3@27762>     !basic
00039C84 <AmiBlitz3.ab3@27763>     update_comstatus_gui  = False ; because we update the gui
00039CA2 <AmiBlitz3.ab3@27765>   !asm
00039CA4 <AmiBlitz3.ab3@27766> RTS
00039CAA <AmiBlitz3.ab3@27771>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00039CB0 <AmiBlitz3.ab3@27772>   LEA maxobjects_value,A3                                  ;current value
00039CB6 <AmiBlitz3.ab3@27773>   MOVEA.l libpointer,A2
00039CBA <AmiBlitz3.ab3@27776>   CMPA.w #$0,A2
00039CBE <AmiBlitz3.ab3@27777>   BEQ.w menu4c__igotb
00039CC0 <AmiBlitz3.ab3@27778>   MOVEA.l A2,A1
00039CC4 <AmiBlitz3.ab3@27779>   ADDA.l $12(A1),A1
00039CC8 <AmiBlitz3.ab3@27780>   TST.w -$2(A1)
00039CCC <AmiBlitz3.ab3@27781>   BEQ.w JL_0_FFF6b
00039CCE <AmiBlitz3.ab3@27782>   SUBQ.w #1,D5
00039CD2 <AmiBlitz3.ab3@27783>   BMI.w JL_0_FFFCb
00039CD4 <AmiBlitz3.ab3@27786>   MOVEA.l (A2),A2
00039CD8 <AmiBlitz3.ab3@27787> BRA.w JL_0_FFDAb
00039CDC <AmiBlitz3.ab3@27790>   MOVE.w (A3),-$4(A1)
00039CDE <AmiBlitz3.ab3@27793> RTS
00039CE4 <AmiBlitz3.ab3@27797>   MOVE.w debugnest,d0
00039CEA <AmiBlitz3.ab3@27798>   LEA storedebugmode, a0
00039CF2 <AmiBlitz3.ab3@27799>   MOVE.b 0(a0,d0.w),debugmode
00039CF8 <AmiBlitz3.ab3@27800>   TST.w debugnest
00039CFC <AmiBlitz3.ab3@27801>   BEQ JUMP_unpairrunerrs
00039D02 <AmiBlitz3.ab3@27802>   SUBQ.w #1,debugnest
00039D04 <AmiBlitz3.ab3@27803> RTS
00039D0A <AmiBlitz3.ab3@27806> JMP runerrsoverflow
00039D10 <AmiBlitz3.ab3@27809> JMP unpairrunerrs
00039D18 <AmiBlitz3.ab3@27813>   BCHG #$7,use_debugger
00039D20 <AmiBlitz3.ab3@27815>   BTST #$7,use_debugger
00039D24 <AmiBlitz3.ab3@27816>   BNE 'debugon
00039D2A <AmiBlitz3.ab3@27817>   CLR.w debugmode
00039D2E <AmiBlitz3.ab3@27818> BRA.b 'debugoff
00039D34 <AmiBlitz3.ab3@27821>   SNE debugmode
00039D36 <AmiBlitz3.ab3@27824>   MOVE.l a0,-(a7)
00039D6E <AmiBlitz3.ab3@27827>   !ComData_SetB{comByte_DebugMode,debugmode}
00039D70 <AmiBlitz3.ab3@27832>   MOVE.l (a7)+,a0
00039D72 <AmiBlitz3.ab3@27833> RTS
00039D7A <AmiBlitz3.ab3@27838>   BTST #$7,use_debugger
00039D7E <AmiBlitz3.ab3@27839>   BNE 'debugon
00039D84 <AmiBlitz3.ab3@27840>   CLR.w debugmode
00039D88 <AmiBlitz3.ab3@27841> BRA.b 'debugoff
00039D8E <AmiBlitz3.ab3@27844>   SNE debugmode
00039D90 <AmiBlitz3.ab3@27847> RTS
00039D96 <AmiBlitz3.ab3@27851>   ADDQ.w #1,debugnest
00039D9C <AmiBlitz3.ab3@27852>   MOVE.w debugnest,d0
00039DA0 <AmiBlitz3.ab3@27853>   CMP.w #18,d0
00039DA4 <AmiBlitz3.ab3@27854>    BGE JUMP_runerrsoverflow
00039DAA <AmiBlitz3.ab3@27855>   LEA storedebugmode, a0
00039DB2 <AmiBlitz3.ab3@27856>   MOVE.b debugmode,0( a0,d0.w)
00039DB8 <AmiBlitz3.ab3@27859>   SF debugmode
00039DBA <AmiBlitz3.ab3@27860> RTS
00039E3A <AmiBlitz3.ab3@27863> usedpath:  Ds.l 32
00039E3E <AmiBlitz3.ab3@27867>   BEQ.w JUMP_syntaxerr
00039E44 <AmiBlitz3.ab3@27868>   LEA lastpath,A0
00039E48 <AmiBlitz3.ab3@27869>   MOVEM.l a0-a1/d0,-(a7)
00039E4E <AmiBlitz3.ab3@27870>   LEA lastpath2,a1
00039E50 <AmiBlitz3.ab3@27873>     MOVE.b (a0)+,(a1)+
00039E54 <AmiBlitz3.ab3@27874>   BNE 'l2
00039E58 <AmiBlitz3.ab3@27875>   MOVEM.l (a7)+,a0-a1/d0
00039E5C <AmiBlitz3.ab3@27876>   LEA usedpath(PC),A0
00039E60 <AmiBlitz3.ab3@27877>   MOVEM.l a0-a1/d0,-(a7)
00039E66 <AmiBlitz3.ab3@27878>   LEA lastpath,a1
00039E68 <AmiBlitz3.ab3@27881>     MOVE.b (a0)+,(a1)+
00039E6C <AmiBlitz3.ab3@27882>   BNE 'l1
00039E70 <AmiBlitz3.ab3@27883>   MOVEM.l (a7)+,a0-a1/d0
00039E72 <AmiBlitz3.ab3@27886>   TST.w D0
00039E76 <AmiBlitz3.ab3@27887>    BMI.w JUMP_syntaxerr
00039E78 <AmiBlitz3.ab3@27888>   MOVE.b D0,(A0)+
00039E7C <AmiBlitz3.ab3@27889>   BSR.w JUMP_get1bytemain
00039E80 <AmiBlitz3.ab3@27890>    BNE.w JL_0_4AA8
00039E84 <AmiBlitz3.ab3@27891>   MOVE.b #$2,(A0)
00039E86 <AmiBlitz3.ab3@27892> RTS
00039E8A <AmiBlitz3.ab3@27896>   BEQ.w JUMP_syntaxerr
00039E90 <AmiBlitz3.ab3@27897>   LEA path2,A0
00039E92 <AmiBlitz3.ab3@27907>   TST.w D0
00039E96 <AmiBlitz3.ab3@27908>    BMI.w JUMP_syntaxerr
00039E98 <AmiBlitz3.ab3@27909>   MOVE.b D0,(A0)+
00039E9C <AmiBlitz3.ab3@27910>   BSR.w JUMP_get1bytemain
00039EA0 <AmiBlitz3.ab3@27911>    BNE.w JL_0_4AA8b
00039EA4 <AmiBlitz3.ab3@27912>   MOVE.b #$2,(A0)
00039EA6 <AmiBlitz3.ab3@27913> RTS
00039EAC <AmiBlitz3.ab3@27922> JMP errormsg_reg
00039EB6 <AmiBlitz3.ab3@27926>   MOVE.l #$f22d6780,fpucodeglobal
00039EC0 <AmiBlitz3.ab3@27927>   MOVE.l #$f22c6780,fpucodelocal
00039EC6 <AmiBlitz3.ab3@27928>   LEA regtable,a0
00039ED0 <AmiBlitz3.ab3@27929>   MOVE.l #7,maxregs
00039ED2 <AmiBlitz3.ab3@27932>   MOVE.l (a0),d0
00039ED6 <AmiBlitz3.ab3@27933>   BEQ 'e1
00039ED8 <AmiBlitz3.ab3@27934>   CLR.l (a0)
00039EDC <AmiBlitz3.ab3@27935>   MOVE.w 4(a0),d0
00039EE6 <AmiBlitz3.ab3@27936>   MOVE.l fpucodeglobal,fpucode
00039EEA <AmiBlitz3.ab3@27937>   TST.w 6(a0)
00039EEE <AmiBlitz3.ab3@27938>   BEQ 'glob
00039EF8 <AmiBlitz3.ab3@27939>   MOVE.l fpucodelocal,fpucode
00039EFE <AmiBlitz3.ab3@27942>   MOVE.l fpucode,d1
00039F04 <AmiBlitz3.ab3@27943>   JSR writelong
00039F0E <AmiBlitz3.ab3@27944>   SUB.l #$80,fpucodelocal
00039F18 <AmiBlitz3.ab3@27945>   SUB.l #$80,fpucodeglobal
00039F1A <AmiBlitz3.ab3@27946>   MOVE.w d0,d1
00039F20 <AmiBlitz3.ab3@27947>   JSR writeword
00039F22 <AmiBlitz3.ab3@27948>   ADDQ #8,a0
00039F26 <AmiBlitz3.ab3@27949> BRA 'again
00039F28 <AmiBlitz3.ab3@27952> RTS
00039F2E <AmiBlitz3.ab3@27959> JMP notypeerr
00039F34 <AmiBlitz3.ab3@27962> JMP illtypeerr
00039F3E <AmiBlitz3.ab3@27965>   MOVE.l #$f22d4780,fpucodeglobal
00039F48 <AmiBlitz3.ab3@27966>   MOVE.l #$f22c4780,fpucodelocal
00039F4E <AmiBlitz3.ab3@27967>   LEA regtable,a0
00039F50 <AmiBlitz3.ab3@27968>   TST.l (a0)
00039F54 <AmiBlitz3.ab3@27969>    BNE JUMP_errormsg_reg
00039F56 <AmiBlitz3.ab3@27970>   MOVE.l d7,-(a7)
00039F58 <AmiBlitz3.ab3@27971>   SUBQ.l #1,a5
00039F5E <AmiBlitz3.ab3@27974>   JSR getparameter2
00039F62 <AmiBlitz3.ab3@27975>   BEQ.w 'nopar
00039F68 <AmiBlitz3.ab3@27976>   MOVE.w d0,lastchar
00039F6E <AmiBlitz3.ab3@27977>   JSR findvariable
00039F72 <AmiBlitz3.ab3@27978>   BNE 'islocal
00039F7C <AmiBlitz3.ab3@27979>   MOVE.l fpucodeglobal,fpucode
00039F86 <AmiBlitz3.ab3@27980>   MOVE.l #3,maxregs
00039F88 <AmiBlitz3.ab3@27981>   MOVEQ #0,d7
00039F90 <AmiBlitz3.ab3@27984>   CMP.l #newtype_float,$a(a2)                              ;is float type
00039F94 <AmiBlitz3.ab3@27985>    BEQ 'doit
00039F9C <AmiBlitz3.ab3@27986>   CMP.l #newtype_double,$a(a2)
00039FA0 <AmiBlitz3.ab3@27987>    BNE JUMP_illtypeerr
00039FA6 <AmiBlitz3.ab3@27990>   LEA regtable,a0
00039FA8 <AmiBlitz3.ab3@27991>   MOVEQ #0,d0
00039FAA <AmiBlitz3.ab3@27994>   TST.l (a0)
00039FAE <AmiBlitz3.ab3@27995>    BEQ 'store
00039FB0 <AmiBlitz3.ab3@27996>   ADDQ.l #4,d0
00039FB2 <AmiBlitz3.ab3@27997>   ADDQ.l #8,a0
00039FB8 <AmiBlitz3.ab3@27998>   CMP.l #16,d0
00039FBC <AmiBlitz3.ab3@27999>    BCS 'loop
00039FC6 <AmiBlitz3.ab3@28000>   MOVE.l #2,maxregs
00039FCC <AmiBlitz3.ab3@28001>   CMP.l #20,d0
00039FD0 <AmiBlitz3.ab3@28002>    BCS 'loop
00039FDA <AmiBlitz3.ab3@28003>   MOVE.l #1,maxregs
00039FE0 <AmiBlitz3.ab3@28004>   CMP.l #24,d0
00039FE4 <AmiBlitz3.ab3@28005>    BCS 'loop
00039FEA <AmiBlitz3.ab3@28006> JMP toovarerr
00039FF0 <AmiBlitz3.ab3@28009>   TST.b fpu
00039FF4 <AmiBlitz3.ab3@28010>    BEQ 'nofpu
00039FF6 <AmiBlitz3.ab3@28011>   MOVE.l a2,(a0)
00039FFC <AmiBlitz3.ab3@28012>   MOVE.w 4(a2),4(a0)
0003A000 <AmiBlitz3.ab3@28013>   MOVE.w d7,6(a0)
0003A006 <AmiBlitz3.ab3@28014>   MOVE.l fpucode,d1
0003A010 <AmiBlitz3.ab3@28015>   SUB.l #$80,fpucodeglobal
0003A01A <AmiBlitz3.ab3@28016>   SUB.l #$80,fpucodelocal
0003A020 <AmiBlitz3.ab3@28017>   JSR writelong
0003A024 <AmiBlitz3.ab3@28018>   MOVE.w 4(a2),d1
0003A02A <AmiBlitz3.ab3@28019>   JSR writeword
0003A030 <AmiBlitz3.ab3@28022>   MOVE.w lastchar,d0
0003A034 <AmiBlitz3.ab3@28023>   CMP.w #":",d0
0003A038 <AmiBlitz3.ab3@28024>    BEQ 'nopar
0003A03A <AmiBlitz3.ab3@28025>   TST.w d0
0003A03E <AmiBlitz3.ab3@28026>    BEQ 'nopar
0003A042 <AmiBlitz3.ab3@28027>   CMP.w #",",d0
0003A046 <AmiBlitz3.ab3@28028>   BNE JUMP_syntaxerr
0003A04A <AmiBlitz3.ab3@28029> BRA 'l2
0003A04C <AmiBlitz3.ab3@28032>    MOVE.l (a7)+,d7
0003A04E <AmiBlitz3.ab3@28033> RTS
0003A050 <AmiBlitz3.ab3@28036>   MOVEQ #1,d7
0003A058 <AmiBlitz3.ab3@28037>   MOVE.b #1,newvariable
0003A05E <AmiBlitz3.ab3@28038>   LEA firstlocal,a2
0003A064 <AmiBlitz3.ab3@28039>   JSR findvariable
0003A06A <AmiBlitz3.ab3@28040>   CLR.b newvariable
0003A070 <AmiBlitz3.ab3@28041>   CMP.l #-1,d0
0003A074 <AmiBlitz3.ab3@28042>   BEQ.w JUMP_notypeerr2
0003A07E <AmiBlitz3.ab3@28043>   MOVE.l fpucodelocal,fpucode
0003A082 <AmiBlitz3.ab3@28044> BRA 'go
0003A086 <AmiBlitz3.ab3@28047>   CMP.b #".",d0
0003A08A <AmiBlitz3.ab3@28048>    BNE 'l1
0003A08E <AmiBlitz3.ab3@28049>   BSR JUMP_get1bytemain
0003A092 <AmiBlitz3.ab3@28050>   BSR JUMP_get1bytemain
0003A096 <AmiBlitz3.ab3@28053>   ORI .b #$20,d0
0003A09A <AmiBlitz3.ab3@28054>   CMP.b #"d",d0
0003A09E <AmiBlitz3.ab3@28055>    BNE JUMP_illeaerr
0003A0A2 <AmiBlitz3.ab3@28056>   BSR JUMP_get1bytemain
0003A0A6 <AmiBlitz3.ab3@28057>   SUB.b #$30,d0
0003A0AA <AmiBlitz3.ab3@28058>   CMP.b #$7,d0
0003A0AE <AmiBlitz3.ab3@28059>    BGT JUMP_syntaxerr
0003A0B2 <AmiBlitz3.ab3@28060>   MOVE.w #$49c0,d1
0003A0B4 <AmiBlitz3.ab3@28061>   ADD.b d0,d1
0003A0BA <AmiBlitz3.ab3@28062>   JSR writeword
0003A0BE <AmiBlitz3.ab3@28063>   BSR JUMP_get1bytemain
0003A0C0 <AmiBlitz3.ab3@28064> RTS
0003A0C6 <AmiBlitz3.ab3@28068>   LEA lastpath,a0
0003A0CA <AmiBlitz3.ab3@28069>   LEA usedpath(PC),A1
0003A0CC <AmiBlitz3.ab3@28072>     MOVE.b (a0)+,(a1)+
0003A0D0 <AmiBlitz3.ab3@28073>   BNE 'l1
0003A0D6 <AmiBlitz3.ab3@28075>   LEA lastpath2,a0
0003A0DC <AmiBlitz3.ab3@28076>   LEA lastpath,A1
0003A0DE <AmiBlitz3.ab3@28079>     MOVE.b (a0)+,(a1)+
0003A0E2 <AmiBlitz3.ab3@28080>   BNE 'l2
0003A0E4 <AmiBlitz3.ab3@28081> RTS
0003A0EA <AmiBlitz3.ab3@28085>   TST.b objectcount
0003A0EE <AmiBlitz3.ab3@28086>   BEQ 'l2a
0003A0F4 <AmiBlitz3.ab3@28087> JMP macnesterr
0003A0FA <AmiBlitz3.ab3@28090>   LEA devo,a0
0003A100 <AmiBlitz3.ab3@28091>   ADDQ.b #1,objectcount
0003A104 <AmiBlitz3.ab3@28092>   MOVEM.l a1/d2,-(a7)
0003A10A <AmiBlitz3.ab3@28093>   LEA ptr_parameterstore,a1
0003A10C <AmiBlitz3.ab3@28096>     MOVE.b (a0)+,(a1)+
0003A110 <AmiBlitz3.ab3@28097>   BNE 'l1
0003A112 <AmiBlitz3.ab3@28099>   MOVEQ #13,d2
0003A118 <AmiBlitz3.ab3@28100>   JSR findlabel2
0003A11C <AmiBlitz3.ab3@28101>   BNE 'd
0003A120 <AmiBlitz3.ab3@28102>   TST.l 8(a2)
0003A124 <AmiBlitz3.ab3@28103>   BEQ 'd
0003A12A <AmiBlitz3.ab3@28104>   SUBQ.b #1,objectcount
0003A12E <AmiBlitz3.ab3@28105>   MOVEM.l (a7)+,a1/d2
0003A134 <AmiBlitz3.ab3@28106>   JSR skiprest
0003A13C <AmiBlitz3.ab3@28107>   MOVE.b #1,developobject
0003A13E <AmiBlitz3.ab3@28108> RTS
0003A142 <AmiBlitz3.ab3@28111>   MOVEM.l (a7)+,a1/d2
0003A14A <AmiBlitz3.ab3@28112>   MOVE.b #1,resdisable
0003A150 <AmiBlitz3.ab3@28115>   CLR.b developobject
0003A156 <AmiBlitz3.ab3@28116> JMP do_Macro
0003A15C <AmiBlitz3.ab3@28120> JMP illeaerr
0003A162 <AmiBlitz3.ab3@28124>   CLR.b typecheck
0003A168 <AmiBlitz3.ab3@28125>   CLR.b declare
0003A16E <AmiBlitz3.ab3@28126>   CLR.b declare2
0003A172 <AmiBlitz3.ab3@28127>   SUB.b #$30,d0
0003A176 <AmiBlitz3.ab3@28128>   BTST #0,d0
0003A17A <AmiBlitz3.ab3@28129>   BEQ 'l1
0003A182 <AmiBlitz3.ab3@28130>   MOVE.b #1,declare
0003A186 <AmiBlitz3.ab3@28133>   BTST #1,d0
0003A18A <AmiBlitz3.ab3@28134>   BEQ 'l2
0003A192 <AmiBlitz3.ab3@28135>   MOVE.b #1,declare2
0003A196 <AmiBlitz3.ab3@28138>   BTST #2,d0
0003A19A <AmiBlitz3.ab3@28139>   BEQ 'l3
0003A1A2 <AmiBlitz3.ab3@28140>   MOVE.b #1,typecheck
0003A1A6 <AmiBlitz3.ab3@28142>   BSR.w JUMP_get1bytemain
0003A1A8 <AmiBlitz3.ab3@28143> RTS
0003A1AE <AmiBlitz3.ab3@28146> JMP get1bytemain
0003A1D8 <AmiBlitz3.ab3@28150>   !basic
0003A1F8 <AmiBlitz3.ab3@28152>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A216 <AmiBlitz3.ab3@28153>   !asm
0003A218 <AmiBlitz3.ab3@28154> Return
0003A21A <AmiBlitz3.ab3@28159>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A21C <AmiBlitz3.ab3@28160>   ADDQ #1,a5
0003A21E <AmiBlitz3.ab3@28161>   MOVE.l a5,-(a7)
0003A248 <AmiBlitz3.ab3@28162>   !basic
0003A24E <AmiBlitz3.ab3@28163>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A258 <AmiBlitz3.ab3@28164>   If _myD0
0003A298 <AmiBlitz3.ab3@28165>     newconst$ = UCase$(Peek.s(_myD0))
0003A29E <AmiBlitz3.ab3@28166>   Else
0003A2D8 <AmiBlitz3.ab3@28167>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A300 <AmiBlitz3.ab3@28168>     nwconst$="xxx"
0003A328 <AmiBlitz3.ab3@28170>   condata$ =""
0003A338 <AmiBlitz3.ab3@28171>   Poke.b ?skip_bytes,0
0003A394 <AmiBlitz3.ab3@28172>   If Left$(newconst$,2) = "__"
0003A3EE <AmiBlitz3.ab3@28173>     Select Mid$(newconst$,3,4)
0003A412 <AmiBlitz3.ab3@28175>      Case "DATE"
0003A46C <AmiBlitz3.ab3@28176>       Select Mid$(newconst$,3,6)
0003A4AA <AmiBlitz3.ab3@28177>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A4EE <AmiBlitz3.ab3@28178>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A4FC <AmiBlitz3.ab3@28179>       End Select
0003A50A <AmiBlitz3.ab3@28180>       i.l=SystemDate
0003A530 <AmiBlitz3.ab3@28181>       condata$ = Date$ (i)
0003A5AE <AmiBlitz3.ab3@28182>       condata$ = Replace$(condata$,"/",".")
0003A5D8 <AmiBlitz3.ab3@28184>      Case "VER_"
0003A5E8 <AmiBlitz3.ab3@28187>       actual_version.l = Peek.l(?versioninformation)
0003A5F8 <AmiBlitz3.ab3@28188>       actual_build.l   = Peek.l(?number_of_builds)
0003A61C <AmiBlitz3.ab3@28190>       Format ""
0003A676 <AmiBlitz3.ab3@28191>       Select Mid$(newconst$,3,9)
0003A69A <AmiBlitz3.ab3@28193>        Case "VER_MAJOR"
0003A6D6 <AmiBlitz3.ab3@28194>         condata$ = Str$(actual_version LSR 24)
0003A700 <AmiBlitz3.ab3@28196>        Case "VER_MINOR"
0003A744 <AmiBlitz3.ab3@28197>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003A76E <AmiBlitz3.ab3@28199>        Case "VER_PATCH"
0003A7B2 <AmiBlitz3.ab3@28200>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003A7DC <AmiBlitz3.ab3@28202>        Case "VER_BUILD"
0003A800 <AmiBlitz3.ab3@28203>         Format ""
0003A834 <AmiBlitz3.ab3@28204>         condata$ = Str$(actual_build)
0003A83A <AmiBlitz3.ab3@28206>        Default
0003A862 <AmiBlitz3.ab3@28207>         condata$ = "{unknown compiler constant}"
0003A870 <AmiBlitz3.ab3@28209>       End Select
0003A894 <AmiBlitz3.ab3@28210>       Format ""
0003A8A4 <AmiBlitz3.ab3@28211>       Poke.b ?skip_bytes,11
0003A8CE <AmiBlitz3.ab3@28213>      Case "THIS"
0003A928 <AmiBlitz3.ab3@28214>       Select Mid$(newconst$,3,9)
0003A94C <AmiBlitz3.ab3@28216>        Case "THIS_FUNC"
0003A95C <AmiBlitz3.ab3@28217>         Poke.b ?skip_bytes,15
0003A97C <AmiBlitz3.ab3@28218>         If Peek.l(?currentfunction)<>0
0003A9C8 <AmiBlitz3.ab3@28219>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003A9CE <AmiBlitz3.ab3@28220>         Else
0003A9F6 <AmiBlitz3.ab3@28221>           condata$ = "GLOBAL"
0003AA20 <AmiBlitz3.ab3@28224>        Case "THIS_INCL"
0003AA30 <AmiBlitz3.ab3@28225>         Poke.b ?skip_bytes,14
0003AA50 <AmiBlitz3.ab3@28226>         If Peek.l(?includetemp2)<>0
0003AA9E <AmiBlitz3.ab3@28227>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AAC8 <AmiBlitz3.ab3@28230>        Case "THIS_POIN"
0003AAD8 <AmiBlitz3.ab3@28231>         Poke.b ?skip_bytes,14
0003AAF8 <AmiBlitz3.ab3@28232>         If Peek.l(?currentfunction)<>0
0003AB26 <AmiBlitz3.ab3@28233>           condata$ = Hex$(Peek.l(?currentfunction))
0003AB34 <AmiBlitz3.ab3@28236>       End Select
0003AB5E <AmiBlitz3.ab3@28238>      Case "CODE"
0003AB6E <AmiBlitz3.ab3@28239>       Poke.b ?skip_bytes,10
0003ABD0 <AmiBlitz3.ab3@28240>       If Mid$(newconst$,3,8) = "CODELINE"
0003AC0C <AmiBlitz3.ab3@28241>         condata$ = Str$(Peek.l(?globallinecount))
0003AC1A <AmiBlitz3.ab3@28244>     End Select
0003AC20 <AmiBlitz3.ab3@28246>   Else
0003AC74 <AmiBlitz3.ab3@28247>     Select Left$(newconst$,1)
0003AC98 <AmiBlitz3.ab3@28249>      Case "R"
0003ACA8 <AmiBlitz3.ab3@28250>       Poke.b ?skip_bytes,3
0003AD20 <AmiBlitz3.ab3@28251>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003ADA0 <AmiBlitz3.ab3@28252>         condata$ = condata$ + Mid$(newconst$,4,1)
0003ADB0 <AmiBlitz3.ab3@28253>       Next
0003ADDA <AmiBlitz3.ab3@28255>      Case "N"
0003ADEA <AmiBlitz3.ab3@28256>       Poke.b ?skip_bytes,1
0003AE0E <AmiBlitz3.ab3@28257>       condata$ = Chr$(10)
0003AE14 <AmiBlitz3.ab3@28259>      Default
0003AE26 <AmiBlitz3.ab3@28260>       char1.b = Peek.b(&newconst$)
0003AE3E <AmiBlitz3.ab3@28261>       char2.b = Peek.b(&newconst$+1)
0003AE4A <AmiBlitz3.ab3@28262>       nibble1.l = -1
0003AE56 <AmiBlitz3.ab3@28263>       nibble2.l = -1
0003AE94 <AmiBlitz3.ab3@28265>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003AED2 <AmiBlitz3.ab3@28266>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003AF16 <AmiBlitz3.ab3@28268>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003AF5A <AmiBlitz3.ab3@28269>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003AF9E <AmiBlitz3.ab3@28271>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003AFE2 <AmiBlitz3.ab3@28272>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B008 <AmiBlitz3.ab3@28274>       If nibble1>=0 AND nibble2>=0
0003B01E <AmiBlitz3.ab3@28275>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B042 <AmiBlitz3.ab3@28276>         condata$ = Chr$(newchar)
0003B052 <AmiBlitz3.ab3@28277>         Poke.b ?skip_bytes,2
0003B060 <AmiBlitz3.ab3@28280>     End Select
0003B0C0 <AmiBlitz3.ab3@28282>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B1E6 <AmiBlitz3.ab3@28283>     !cout{"detected unknown const: " + newconst$}
0003B21A <AmiBlitz3.ab3@28284>     condata$ = newconst$
0003B230 <AmiBlitz3.ab3@28287>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B232 <AmiBlitz3.ab3@28288>   MOVE.l d0,d2
0003B234 <AmiBlitz3.ab3@28289>   MOVE.l d2,-(a7)
0003B23A <AmiBlitz3.ab3@28291>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B23C <AmiBlitz3.ab3@28292>   MOVE.l d0,a0
0003B23E <AmiBlitz3.ab3@28295>     MOVE.b (a0)+,d1
0003B244 <AmiBlitz3.ab3@28296>     JSR pokedata1b
0003B248 <AmiBlitz3.ab3@28297>  DBF d2,'l1
0003B266 <AmiBlitz3.ab3@28299>   !asm
0003B268 <AmiBlitz3.ab3@28300>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B26A <AmiBlitz3.ab3@28301>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B26C <AmiBlitz3.ab3@28302>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B272 <AmiBlitz3.ab3@28303>   ADD.l #1,d2
0003B278 <AmiBlitz3.ab3@28305>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B27E <AmiBlitz3.ab3@28306>   MOVE.b skip_bytes,D0
0003B280 <AmiBlitz3.ab3@28307>   ADD.l D0,a5
0003B282 <AmiBlitz3.ab3@28308> RTS
0003B286 <AmiBlitz3.ab3@28383> MOVEM.l a3/d1,-(a7)
0003B28C <AmiBlitz3.ab3@28385> CLR.b a4a5store
0003B28E <AmiBlitz3.ab3@28386> 'continue: MOVE.b (a3)+,d1
0003B292 <AmiBlitz3.ab3@28387> CMP.b #$15,d1
0003B296 <AmiBlitz3.ab3@28388> BEQ 'find
0003B29A <AmiBlitz3.ab3@28389> CMP.b #$14,d1
0003B29E <AmiBlitz3.ab3@28390> BEQ 'find
0003B2A2 <AmiBlitz3.ab3@28391> CMP.b #$ff,d1
0003B2A6 <AmiBlitz3.ab3@28392> BNE 'continue
0003B2AA <AmiBlitz3.ab3@28393> BRA 'notfind
0003B2B0 <AmiBlitz3.ab3@28395> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B2B6 <AmiBlitz3.ab3@28396> JSR writelong
0003B2BE <AmiBlitz3.ab3@28397> MOVE.b #1,a4a5store
0003B2C2 <AmiBlitz3.ab3@28398> 'notfind: MOVEM.l (a7)+,a3/d1
0003B2C4 <AmiBlitz3.ab3@28399> RTS
0003B2CA <AmiBlitz3.ab3@28402> TST.b a4a5store
0003B2CE <AmiBlitz3.ab3@28403> BEQ 'no
0003B2D4 <AmiBlitz3.ab3@28404> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B2DA <AmiBlitz3.ab3@28405> JSR writelong
0003B2E0 <AmiBlitz3.ab3@28406> CLR.b a4a5store
0003B2E2 <AmiBlitz3.ab3@28407> 'no RTS
0003B2E2 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B2E6 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B2E8 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B2F0 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B2FC <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B300 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B302 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B306 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B34F <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B350 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B354 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B356 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B35A <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B376 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B37A <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B37C <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B380 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B3DD <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B3DE <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B3E2 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B3E4 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B3E9 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B3F9 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B3FA <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B3FE <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B400 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B406 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B416 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B41A <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B41C <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B423 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B424 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B428 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B42A <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B434 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B467 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B468 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B46C <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B46E <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B477 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B4B2 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B4B6 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B4B8 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B4C2 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B4C3 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B4C4 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B4C8 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B4CA <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B4CD <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B4E4 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B4E8 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B4EA <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B4F0 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B4FD <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B4FE <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B502 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B504 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B50A <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B516 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B51A <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B51C <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B523 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B530 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B534 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B536 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B53B <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B548 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B54C <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B54E <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B556 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B557 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B558 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B55C <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B55E <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B566 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B567 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B568 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B56C <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B56E <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B577 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B582 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B586 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B588 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B590 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003B59B <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003B59C <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003B5A0 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003B5A2 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003B5A9 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003B60B <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003B60C <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003B610 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003B612 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003B619 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003B628 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003B62C <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003B62E <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003B632 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003B668 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003B66C <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003B66E <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003B673 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003B682 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003B686 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003B688 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003B68B <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003B6AC <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003B6B0 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003B6B2 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003B6B7 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003B6C3 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003B6C4 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003B6C8 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003B6CA <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003B6CF <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003B6E6 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003B6EA <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003B6EC <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003B6F1 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003B700 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003B704 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003B706 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003B70B <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003B72A <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003B72E <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003B730 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003B735 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003B754 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003B758 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003B75A <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003B760 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003B761 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003B762 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003B766 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003B768 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003B76D <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003B76E <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003B772 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003B774 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003B779 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003B786 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003B78A <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003B78C <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003B791 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003B7A0 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003B7A4 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003B7A6 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003B7AB <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003B7BA <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003B7BE <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003B7C0 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003B7C6 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003B7E3 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003B7E4 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003B7E8 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003B7EA <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003B7F0 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003B80D <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003B80E <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003B812 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003B814 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003B817 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003B82E <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003B832 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003B834 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003B837 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003B846 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003B84A <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003B84C <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003B851 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003B852 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003B856 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003B858 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003B85C <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003B871 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003B876 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003B878 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003B87F <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003B898 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003B89C <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003B89E <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003B8A5 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003B8B0 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003B8B4 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003B8B6 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003B8BB <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003B8D2 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003B8D6 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003B8D8 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003B8DC <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003B8F3 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003B8F4 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003B8F8 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003B8FA <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003B8FF <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003B900 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003B904 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003B906 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003B90B <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003B90F <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003B910 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003B914 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003B916 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003B91D <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003B935 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003B93A <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003B93C <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003B943 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003B948 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003B94E <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003B955 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003B95A <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003B95E <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003B960 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003B967 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003B982 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003B986 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003B988 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003B990 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003B9A9 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003B9AA <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003B9AE <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003B9B0 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003B9B6 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003B9B7 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003B9B8 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003B9BE <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003B9C4 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003B9C5 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003B9C6 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003B9CA <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003B9CC <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003B9D3 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003B9D4 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003B9DA <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003B9E0 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003B9E9 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003B9EA <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003B9EE <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003B9F0 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003BA05 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003BA0A <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003BA0C <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003BA21 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003BA22 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003BA26 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003BA28 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003BA30 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003BA3D <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003BA3E <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003BA42 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003BA44 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003BA49 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003BA4A <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003BA50 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003BA55 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003BA56 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003BA58 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003BA5E <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003BA60 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003BA64 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003BA66 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003BA6A <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003BA6C <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003BA71 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003BA72 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003BA7A <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003BA82 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BA88 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BA8D <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003BA8E <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003BA90 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003BA96 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003BA9E <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003BAA4 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003BAA9 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003BAAA <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003BAAC <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003BAB2 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003BAB4 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BABA <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BAC0 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BAC5 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BAC6 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BAC8 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BACE <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BAD0 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BAD6 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BADC <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BAE1 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BAE2 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BAE4 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BAE8 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BAEA <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BAEC <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BAF0 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BAF2 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BAF6 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BAF8 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BAFD <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BAFE <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BB00 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BB04 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BB06 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BB08 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BB0C <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BB0E <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BB14 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BB19 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BB1A <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BB22 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BB24 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BB28 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BB2A <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BB30 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BB35 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BB36 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BB3E <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BB40 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BB44 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BB46 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BB4A <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BB4C <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BB51 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BB52 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003BB54 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003BB5A <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003BB5C <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003BB60 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003BB62 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003BB66 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003BB68 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003BB6D <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003BB6E <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003BB70 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003BB76 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003BB7C <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003BB7E <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003BB82 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003BB84 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003BB88 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003BB89 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003BB8A <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003BB8C <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003BB90 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003BB92 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003BB94 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003BB98 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003BB9A <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003BBA0 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003BBA5 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003BBA6 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003BBA8 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003BBAC <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003BBAE <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003BBB0 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003BBB4 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003BBB6 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003BBBA <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003BBBC <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003BBC1 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003BBC2 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003BBC4 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003BBC8 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003BBCA <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003BBD0 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003BBD2 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003BBD8 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003BBDD <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003BBDE <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003BBE4 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003BBE6 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003BBEC <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003BBEE <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003BBF2 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003BBF4 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003BBF9 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003BBFA <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003BBFC <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003BC02 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003BC0A <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003BC0E <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003BC10 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003BC15 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003BC16 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003BC18 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003BC1E <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003BC26 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003BC2A <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003BC2C <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003BC30 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003BC31 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003BC32 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003BC34 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003BC3A <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003BC3C <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003BC40 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003BC42 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003BC46 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003BC48 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003BC4D <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003BC4E <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003BC50 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003BC56 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003BC58 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003BC5E <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003BC62 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003BC64 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003BC69 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003BC6A <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003BC6C <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003BC70 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003BC72 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003BC74 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003BC7A <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003BC80 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003BC85 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003BC86 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003BC88 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003BC8C <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003BC8E <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003BC90 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003BC94 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003BC96 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003BC9C <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003BCA1 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003BCA2 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003BCA4 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003BCA8 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003BCAA <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003BCAC <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003BCB0 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003BCB2 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003BCB8 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003BCBC <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003BCBD <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003BCC4 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003BCC6 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003BCCC <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003BCCE <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003BCD2 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003BCD4 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003BCD9 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003BCDA <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003BCDC <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003BCE0 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003BCE2 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003BCE8 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003BCEA <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003BCEE <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003BCF0 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003BCF5 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003BCF6 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003BCFC <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003BCFE <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003BD04 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003BD06 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003BD0A <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003BD0C <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003BD11 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003BD12 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003BD14 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003BD1A <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003BD20 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003BD22 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003BD26 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003BD28 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003BD2D <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003BD2E <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003BD30 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003BD34 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003BD36 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003BD38 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003BD3C <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003BD3E <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003BD49 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003BD4A <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003BD4C <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003BD50 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003BD52 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003BD54 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003BD58 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003BD5A <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003BD5E <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003BD60 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003BD65 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003BD66 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003BD68 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003BD6E <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003BD70 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003BD76 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003BD7C <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003BD81 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003BD82 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003BD84 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003BD8A <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003BD8C <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003BD90 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003BD92 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003BD96 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003BD98 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003BD9C <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003BD9D <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003BD9E <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003BDA0 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003BDAE <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003BDB4 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003BDB9 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003BDBA <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003BDBC <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003BDC2 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003BDC8 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003BDCA <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003BDD0 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003BDD4 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003BDD5 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003BDD6 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003BDD8 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003BDDC <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003BDDE <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003BDE0 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003BDE4 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003BDEA <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003BDEC <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003BDF1 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003BDF2 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003BDF8 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003BDFA <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003BE00 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003BE02 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003BE06 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003BE0D <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003BE0E <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003BE10 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003BE14 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003BE16 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003BE18 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003BE1C <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003BE1E <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003BE29 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003BE2A <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003BE2C <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003BE34 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003BE3A <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003BE3E <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003BE40 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003BE45 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003BE46 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003BE50 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003BE54 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003BE56 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003BE5A <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003BE61 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003BE62 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003BE64 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003BE68 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003BE7D <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003BE7E <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003BE84 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003BE8E <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003BE94 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003BE99 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003BE9A <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003BEA0 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003BEA2 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003BEAA <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003BEB0 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003BEB5 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003BEB6 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003BEB8 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003BEBC <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003BEC6 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003BED1 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003BEE2 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003BEE8 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003BEED <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003BEF0 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003BEF6 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003BEFE <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003BF09 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003BF0C <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003BF12 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003BF14 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003BF1A <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003BF25 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003BF36 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003BF41 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003BF52 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003BF5D <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003BF6E <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003BF79 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003BF82 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003BF84 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003BF8A <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003BF95 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003BF9E <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003BFA6 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003BFB1 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003BFC2 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003BFCD <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003BFDE <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003BFE9 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C005 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003C01A <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C021 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C03D <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C059 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C075 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003C086 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C091 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C0AD <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C0CD <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C0D6 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C0E9 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C105 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C121 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C13D <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C159 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C175 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C184 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C18C <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C191 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C1A0 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C1A8 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C1AD <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C1C4 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C1CB <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C1E9 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C207 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C223 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C23F <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C25B <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C277 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C293 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C2A4 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C2AF <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C2B8 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C2C0 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C2CB <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C2D4 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C2E5 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C301 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C30C <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C31D <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C33B <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C357 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C373 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C38F <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C3AB <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C3C7 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C3E3 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C3FF <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C410 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C41B <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C42C <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C432 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C437 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C453 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C45C <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C46A <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C46F <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C486 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C48B <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C494 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C4A7 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C4C3 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C4DF <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C4FB <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C517 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C52E <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C533 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C54F <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C56B <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C587 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003C5A3 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003C5BD <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003C5D7 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003C5F3 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003C5F6 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003C60F <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003C62B <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003C647 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003C663 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003C67F <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003C69B <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003C6B7 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003C6D3 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003C6F1 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003C70D <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003C729 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003C747 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003C7C8 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003C9DD <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003C9EB <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003C9F9 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003CA09 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003CA15 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003CA29 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003CA35 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003CA3F <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003CA4D <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003CA67 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003CA75 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CA8D <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003CA8E <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CABB <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CAC9 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CAE1 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CAE2 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CAED <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CAFB <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CB0D <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CB1F <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CB3B <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CB45 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003CB8B <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003CB9B <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003CBC9 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003CBD1 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003CBE9 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003CBF9 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003CBFE <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003CC06 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003CC07 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003CC15 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003CC1A <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003CC23 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003CC31 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003CC36 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003CC3F <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003CC46 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003CC4B <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003CC61 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003CC73 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003CC85 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003CCC5 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003CD0B <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003CD0C <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003CD39 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003CD47 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003CD7D <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003CD7E <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003CD82 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003CD8D <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003CE0F <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003CE10 <AmiBlitz3.ab3@28411> INCLUDE "internal_commands.ab3"
0003CE14 <AmiBlitz3.ab3@28416>            Dc.l cif_lt                                     ;ciflt
0003CE18 <AmiBlitz3.ab3@28417>            Dc.l cif_eq                                     ;cifeq
0003CE1C <AmiBlitz3.ab3@28418>            Dc.l cif_gt                                     ;cifgt
0003CE20 <AmiBlitz3.ab3@28419>            Ds.l 1                                          ;0
0003CE24 <AmiBlitz3.ab3@28420>            Dc.l cif_le                                     ;cifle
0003CE28 <AmiBlitz3.ab3@28421>            Dc.l cif_ne                                     ;cifne
0003CE2C <AmiBlitz3.ab3@28422>            Dc.l cif_le                                     ;cifge
0003CE30 <AmiBlitz3.ab3@28423>            Ds.l 1                                          ;0
0003CE34 <AmiBlitz3.ab3@28424>            Dc.l cif_ge                                     ;cifge
0003CE38 <AmiBlitz3.ab3@28425>            Dc.l cif_ne                                     ;cifne
0003CE3C <AmiBlitz3.ab3@28426>            Dc.l cif_ge                                     ;cifge
0003CE40 <AmiBlitz3.ab3@28427>            Ds.l 1                                          ;0
0003CE44 <AmiBlitz3.ab3@28430>            Dc.l do_newtype                                 ;donewtype
0003CE48 <AmiBlitz3.ab3@28431>            Dc.l do_end                                     ;doend
0003CE4C <AmiBlitz3.ab3@28432>            Dc.l do_let                                     ;dolet
0003CE50 <AmiBlitz3.ab3@28433>            Dc.l do_dim                                     ;dodim
0003CE54 <AmiBlitz3.ab3@28434>            Dc.l do_goto                                    ;dogoto
0003CE58 <AmiBlitz3.ab3@28435>            Dc.l do_gosub                                   ;dogosub
0003CE5C <AmiBlitz3.ab3@28436>            Dc.l do_return                                  ;doreturn
0003CE60 <AmiBlitz3.ab3@28437>            Dc.l do_statement                               ;dostatement
0003CE64 <AmiBlitz3.ab3@28438>            Dc.l do_function                                ;dofunc
0003CE68 <AmiBlitz3.ab3@28439>            Dc.l do_mousewait                               ;domwait
0003CE6C <AmiBlitz3.ab3@28440>            Dc.l do_if                                      ;doif
0003CE70 <AmiBlitz3.ab3@28441>            Dc.l do_while                                   ;dowhile
0003CE74 <AmiBlitz3.ab3@28442>            Dc.l do_Macro                                   ;domacro
0003CE78 <AmiBlitz3.ab3@28443>            Dc.l do_select                                  ;doselect
0003CE7C <AmiBlitz3.ab3@28444>            Dc.l do_case                                    ;docase
0003CE80 <AmiBlitz3.ab3@28445>            Dc.l do_default                                 ;dodefault
0003CE84 <AmiBlitz3.ab3@28446>            Dc.l do_AsmExit                                 ;doasmexit
0003CE88 <AmiBlitz3.ab3@28447>            Dc.l do_xinclude                                ;doxinclude
0003CE8C <AmiBlitz3.ab3@28448>            Dc.l do_INCLUDE                                 ;doinclude
0003CE90 <AmiBlitz3.ab3@28449>            Dc.l do_syntax                                  ;syntaxerr
0003CE94 <AmiBlitz3.ab3@28450>            Dc.l do_shared                                  ;doshared
0003CE98 <AmiBlitz3.ab3@28451>            Dc.l do_for                                     ;dofor
0003CE9C <AmiBlitz3.ab3@28452>            Dc.l do_next                                    ;donext
0003CEA0 <AmiBlitz3.ab3@28453>            Dc.l syntaxerr                                  ; To
0003CEA4 <AmiBlitz3.ab3@28454>            Dc.l syntaxerr                                  ; Step
0003CEA8 <AmiBlitz3.ab3@28455>            Dc.l do_data                                    ;dodata
0003CEAC <AmiBlitz3.ab3@28456>            Dc.l do_read                                    ;doread
0003CEB0 <AmiBlitz3.ab3@28460>            Dc.l syntaxerr                                  ; CNIF
0003CEB4 <AmiBlitz3.ab3@28461>            Dc.l syntaxerr                                  ; CSIF
0003CEB8 <AmiBlitz3.ab3@28462>            Dc.l syntaxerr                                  ; CELSE
0003CEBC <AmiBlitz3.ab3@28463>            Dc.l syntaxerr                                  ; CEND
0003CEC0 <AmiBlitz3.ab3@28464>            Dc.l do_cerr                                    ;docerr
0003CEC4 <AmiBlitz3.ab3@28465>            Dc.l do_then                                    ;dothen
0003CEC8 <AmiBlitz3.ab3@28466>            Dc.l do_else                                    ;doelse
0003CECC <AmiBlitz3.ab3@28467>            Dc.l do_even4                                   ;doeven4
0003CED0 <AmiBlitz3.ab3@28468>            Dc.l do_even8                                   ;doeven8
0003CED4 <AmiBlitz3.ab3@28470>            Dc.l do_dc                                      ;dodc
0003CED8 <AmiBlitz3.ab3@28471>            Dc.l do_ds                                      ;dods
0003CEDC <AmiBlitz3.ab3@28472>            Dc.l do_even                                    ;doeven
0003CEE0 <AmiBlitz3.ab3@28473>            Dc.l do_dcb                                     ;dodcb
0003CEE4 <AmiBlitz3.ab3@28474>            Dc.l do_setreg                                  ;dosetreg
0003CEE8 <AmiBlitz3.ab3@28475>            Dc.l do_IncBin                                  ;doincbin
0003CEEC <AmiBlitz3.ab3@28476>            Dc.l do_free                                    ;dofree
0003CEF0 <AmiBlitz3.ab3@28477>            Dc.l do_use                                     ;douse
0003CEF4 <AmiBlitz3.ab3@28478>            Dc.l do_Stop                                    ;dostop
0003CEF8 <AmiBlitz3.ab3@28479>            Dc.l do_Cont                                    ;docont
0003CEFC <AmiBlitz3.ab3@28480>            Dc.l syntaxerr                                  ;syntaxeer
0003CF00 <AmiBlitz3.ab3@28481>            Dc.l do_SetInt                                  ;dosetint
0003CF04 <AmiBlitz3.ab3@28482>            Dc.l do_ClrInt                                  ;doclrint
0003CF08 <AmiBlitz3.ab3@28483>            Dc.l do_MaxLen                                  ;domaxlen
0003CF0C <AmiBlitz3.ab3@28484>            Dc.l do_DEFTYPE                                 ;dodeftype
0003CF10 <AmiBlitz3.ab3@28485>            Dc.l do_BLITZ                                   ;doblitz
0003CF14 <AmiBlitz3.ab3@28486>            Dc.l do_AMIGA                                   ;doamiga
0003CF18 <AmiBlitz3.ab3@28487>            Dc.l do_QAMIGA                                  ;doqamiga
0003CF1C <AmiBlitz3.ab3@28488>            Dc.l do_VWait                                   ;dovwait
0003CF20 <AmiBlitz3.ab3@28489>            Dc.l do_LibJsr                                  ;dolibjsr
0003CF24 <AmiBlitz3.ab3@28490>            Dc.l do_TokeJsr                                 ;dotokejsr
0003CF28 <AmiBlitz3.ab3@28491>            Dc.l do_BLibJsr                                 ;doblibjsr
0003CF2C <AmiBlitz3.ab3@28492>            Dc.l _extb                                      ;syntaxerr
0003CF30 <AmiBlitz3.ab3@28496>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003CF34 <AmiBlitz3.ab3@28497>            Dc.l do_SetErr                                  ;doseterr
0003CF38 <AmiBlitz3.ab3@28498>            Dc.l do_ClrErr                                  ;doclrerr
0003CF3C <AmiBlitz3.ab3@28499>            Dc.l syntaxerr                                  ;syntaxerr
0003CF40 <AmiBlitz3.ab3@28500>            Dc.l do_ErrFail                                 ;doerrfail
0003CF44 <AmiBlitz3.ab3@28501>            Dc.l syntaxerr
0003CF48 <AmiBlitz3.ab3@28502>            Dc.l syntaxerr                                  ;mod
0003CF4C <AmiBlitz3.ab3@28503>            Dc.l syntaxerr                                  ;Pi
0003CF50 <AmiBlitz3.ab3@28504>            Dc.l do_Repeat                                  ;dorepeat
0003CF54 <AmiBlitz3.ab3@28505>            Dc.l do_Until                                   ;dountil
0003CF58 <AmiBlitz3.ab3@28506>            Dc.l do_PutReg                                  ;doputreg
0003CF5C <AmiBlitz3.ab3@28507>            Dc.l do_Pop                                     ;dopop
0003CF60 <AmiBlitz3.ab3@28508>            Dc.l do_INCDIR                                  ;doincdir
0003CF64 <AmiBlitz3.ab3@28509>            Dc.l mydo_Endif2                                ;mydoendif2
0003CF68 <AmiBlitz3.ab3@28510>            Dc.l do_Wend                                    ;dowend
0003CF6C <AmiBlitz3.ab3@28511>            Dc.l do_SysJsr                                  ;dosysjsr
0003CF70 <AmiBlitz3.ab3@28512>            Dc.l do_WBStartup                               ;dowbstartup
0003CF74 <AmiBlitz3.ab3@28513>            Dc.l syntaxerr
0003CF78 <AmiBlitz3.ab3@28514>            Dc.l do_Ongo                                    ;doongo
0003CF7C <AmiBlitz3.ab3@28515>            Dc.l syntaxerr
0003CF80 <AmiBlitz3.ab3@28516>            Dc.l do_Forever                                 ;doforever
0003CF84 <AmiBlitz3.ab3@28517>            Dc.l do_Restore                                 ;dorestore
0003CF88 <AmiBlitz3.ab3@28518>            Dc.l do_Exchange                                ;doexchange
0003CF8C <AmiBlitz3.ab3@28519>            Dc.l do_USEPATH                                 ;dousepath
0003CF90 <AmiBlitz3.ab3@28520>            Dc.l do_CloseEd                                 ;doclosed
0003CF94 <AmiBlitz3.ab3@28521>            Dc.l do_NoCli                                   ;donocli
0003CF98 <AmiBlitz3.ab3@28522>            Dc.l syntaxerr                                  ;syntaxerr
0003CF9C <AmiBlitz3.ab3@28523>            Dc.l syntaxerr                                  ;syntaxerr
0003CFA0 <AmiBlitz3.ab3@28524>            Dc.l syntaxerr                                  ;syntaxerr
0003CFA4 <AmiBlitz3.ab3@28525>            Dc.l syntaxerr                                  ;syntaxerr
0003CFA8 <AmiBlitz3.ab3@28526>            Dc.l syntaxerr                                  ;syntaxerr
0003CFAC <AmiBlitz3.ab3@28527>            Dc.l do_runerrson                               ;dorunerrson
0003CFB0 <AmiBlitz3.ab3@28528>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003CFB4 <AmiBlitz3.ab3@28529>            Dc.l do_uselastpath
0003CFB8 <AmiBlitz3.ab3@28530>            Dc.l do_regload
0003CFBC <AmiBlitz3.ab3@28531>            Dc.l do_regsave
0003CFC0 <AmiBlitz3.ab3@28532>            Dc.l do_Object
0003CFC4 <AmiBlitz3.ab3@28533>            Dc.l do_usepath2
0003CFC8 <AmiBlitz3.ab3@28534>            Dc.l do_LastRunErrsMode
0003CFCC <AmiBlitz3.ab3@28557> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003CFD0 <AmiBlitz3.ab3@28558>            Dc.l menu_run
0003CFD4 <AmiBlitz3.ab3@28559>            Dc.l menu_createexecutable
0003CFD8 <AmiBlitz3.ab3@28560>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003CFDC <AmiBlitz3.ab3@28561>            Dc.l menu_createresidentfile
0003CFE0 <AmiBlitz3.ab3@28562> 
0003CFE4 <AmiBlitz3.ab3@28563> 
0003CFE8 <AmiBlitz3.ab3@28564>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003CFEC <AmiBlitz3.ab3@28565>            Dc.l menu_reloadlibs
0003CFF0 <AmiBlitz3.ab3@28566>            Dc.l menu_loaddebugmodule
0003CFF4 <AmiBlitz3.ab3@28567>            Dc.l menu_dummyfunc
0003CFF8 <AmiBlitz3.ab3@28568>            Dc.l menu_newcreate
0003CFFC <AmiBlitz3.ab3@28569>            Dc.l menu_dummyfunc
0003D000 <AmiBlitz3.ab3@28570>            Dc.l menu_toggledebug
0003D004 <AmiBlitz3.ab3@28571>            Dc.l menu_dummyfunc
0003D008 <AmiBlitz3.ab3@28572>            Dc.l menu_dummyfunc
0003D032 <AmiBlitz3.ab3@28577>   !basic
0003D094 <AmiBlitz3.ab3@28578>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D0B2 <AmiBlitz3.ab3@28579>   !asm
0003D0B4 <AmiBlitz3.ab3@28580> RTS
0003D0B5 <AmiBlitz3.ab3@28586> set_autorun:               Dc.b $00
0003D0BA <AmiBlitz3.ab3@28587> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D0BB <AmiBlitz3.ab3@28589> set_interruptcheck:        Dc.b $00
0003D0C0 <AmiBlitz3.ab3@28590> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D0C1 <AmiBlitz3.ab3@28592> set_assemblercheck:        Ds.b 1
0003D0C6 <AmiBlitz3.ab3@28593> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D0C7 <AmiBlitz3.ab3@28595> set_overflowcheck:         Ds.b 1
0003D0CC <AmiBlitz3.ab3@28596> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D0D2 <AmiBlitz3.ab3@28598> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D0D8 <AmiBlitz3.ab3@28599> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D0DE <AmiBlitz3.ab3@28600> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D0E0 <AmiBlitz3.ab3@28601> Even4
0003D0EC <AmiBlitz3.ab3@28604> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D0F4 <AmiBlitz3.ab3@28605>                            Dc.l $00000000,$00000000
0003D0FC <AmiBlitz3.ab3@28606> tstsize1:                  Dc.l $00000100,$000003E9
0003D100 <AmiBlitz3.ab3@28607> tstsize2:                  Dc.l $00000100
0003D104 <AmiBlitz3.ab3@28608> tstend:                    Dc.l $000003EC
0003D10C <AmiBlitz3.ab3@28609> tstsize3:                  Ds.l 2
0003D110 <AmiBlitz3.ab3@28610> tstdone:                   Dc.l $000003F2
0003D114 <AmiBlitz3.ab3@28613> edstruct:                  Dc.l tokens                     ;data for ted
0003D118 <AmiBlitz3.ab3@28617>                            Dc.l 0
0003D11C <AmiBlitz3.ab3@28619>                            Dc.l read_xtrafile              ;load .xtra routine
0003D120 <AmiBlitz3.ab3@28620>                            Dc.l write_xtrafile             ;save .xtra routine
0003D124 <AmiBlitz3.ab3@28621>                            Dc.l call_menuentry             ;Menu Routine
0003D128 <AmiBlitz3.ab3@28622>                            Ds.l 1                          ;cleanup (?)
0003D12C <AmiBlitz3.ab3@28623>                            Dc.b ":",34,".;"
0003D228 <AmiBlitz3.ab3@28626> 
0003D308 <AmiBlitz3.ab3@28627>                            Ds.l 56
0003D30A <AmiBlitz3.ab3@28632> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D30E <AmiBlitz3.ab3@28635> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D310 <AmiBlitz3.ab3@28636>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D314 <AmiBlitz3.ab3@28637>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D31A <AmiBlitz3.ab3@28641> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D31C <AmiBlitz3.ab3@28645>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D320 <AmiBlitz3.ab3@28648> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D324 <AmiBlitz3.ab3@28651> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D328 <AmiBlitz3.ab3@28652>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D32A <AmiBlitz3.ab3@28658>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D32C <AmiBlitz3.ab3@28662>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D32E <AmiBlitz3.ab3@28665> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D330 <AmiBlitz3.ab3@28666>                            Dc.b $4E,$71                                             ;NOP
0003D332 <AmiBlitz3.ab3@28667>                            Dc.b $4E,$71                                             ;NOP
0003D334 <AmiBlitz3.ab3@28668>                            Dc.b $4E,$71                                             ;NOP
0003D336 <AmiBlitz3.ab3@28669> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D338 <AmiBlitz3.ab3@28671>                            Dc.b $4E,$71                                             ;NOP
0003D33A <AmiBlitz3.ab3@28672>                            Dc.b $4E,$71                                             ;NOP
0003D33C <AmiBlitz3.ab3@28673>                            Dc.b $4E,$71                                             ;NOP
0003D340 <AmiBlitz3.ab3@28677> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D344 <AmiBlitz3.ab3@28680> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D346 <AmiBlitz3.ab3@28683> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D348 <AmiBlitz3.ab3@28686> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D34A <AmiBlitz3.ab3@28687>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D34E <AmiBlitz3.ab3@28688>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D350 <AmiBlitz3.ab3@28689>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D352 <AmiBlitz3.ab3@28695> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D356 <AmiBlitz3.ab3@28696>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D358 <AmiBlitz3.ab3@28701> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D35C <AmiBlitz3.ab3@28702>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D35E <AmiBlitz3.ab3@28706> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D360 <AmiBlitz3.ab3@28707>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D364 <AmiBlitz3.ab3@28713> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D366 <AmiBlitz3.ab3@28714>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D36A <AmiBlitz3.ab3@28715>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D36E <AmiBlitz3.ab3@28719> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D370 <AmiBlitz3.ab3@28720>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D374 <AmiBlitz3.ab3@28721>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D376 <AmiBlitz3.ab3@28724> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D37A <AmiBlitz3.ab3@28727> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D37E <AmiBlitz3.ab3@28730> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D382 <AmiBlitz3.ab3@28733> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D386 <AmiBlitz3.ab3@28737>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D388 <AmiBlitz3.ab3@28738>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D38A <AmiBlitz3.ab3@28739>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D38E <AmiBlitz3.ab3@28744>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D390 <AmiBlitz3.ab3@28745>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D392 <AmiBlitz3.ab3@28746>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D396 <AmiBlitz3.ab3@28751>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D398 <AmiBlitz3.ab3@28752>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D39A <AmiBlitz3.ab3@28753>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D39E <AmiBlitz3.ab3@28758>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D3A0 <AmiBlitz3.ab3@28759>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D3A2 <AmiBlitz3.ab3@28760>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D3A6 <AmiBlitz3.ab3@28761>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D3A8 <AmiBlitz3.ab3@28762>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D3AC <AmiBlitz3.ab3@28767>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D3AE <AmiBlitz3.ab3@28768>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D3B2 <AmiBlitz3.ab3@28769>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D3B4 <AmiBlitz3.ab3@28770>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D3B8 <AmiBlitz3.ab3@28771>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D3BA <AmiBlitz3.ab3@28772>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D3BC <AmiBlitz3.ab3@28775>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D3C0 <AmiBlitz3.ab3@28780>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D3C2 <AmiBlitz3.ab3@28781>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D3C6 <AmiBlitz3.ab3@28782>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D3C8 <AmiBlitz3.ab3@28783>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D3CC <AmiBlitz3.ab3@28784>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D3CE <AmiBlitz3.ab3@28785>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D3D0 <AmiBlitz3.ab3@28788>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D3D4 <AmiBlitz3.ab3@28793>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D3D6 <AmiBlitz3.ab3@28794>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D3DA <AmiBlitz3.ab3@28795>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D3DC <AmiBlitz3.ab3@28796>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D3E0 <AmiBlitz3.ab3@28797>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D3E2 <AmiBlitz3.ab3@28798>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D3E4 <AmiBlitz3.ab3@28801>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D3E8 <AmiBlitz3.ab3@28806>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D3EA <AmiBlitz3.ab3@28807>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D3EE <AmiBlitz3.ab3@28808>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D3F4 <AmiBlitz3.ab3@28809>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D3F8 <AmiBlitz3.ab3@28810>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D3FA <AmiBlitz3.ab3@28811>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D3FE <AmiBlitz3.ab3@28818>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D400 <AmiBlitz3.ab3@28822> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D402 <AmiBlitz3.ab3@28825> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D406 <AmiBlitz3.ab3@28828> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D408 <AmiBlitz3.ab3@28829> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D40C <AmiBlitz3.ab3@28832> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D40E <AmiBlitz3.ab3@28835> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D412 <AmiBlitz3.ab3@28838> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D414 <AmiBlitz3.ab3@28842>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D416 <AmiBlitz3.ab3@28845> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D418 <AmiBlitz3.ab3@28848> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D41C <AmiBlitz3.ab3@28851> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D420 <AmiBlitz3.ab3@28854> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D424 <AmiBlitz3.ab3@28857> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D426 <AmiBlitz3.ab3@28860> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D428 <AmiBlitz3.ab3@28863> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D42C <AmiBlitz3.ab3@28866> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D432 <AmiBlitz3.ab3@28867>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D434 <AmiBlitz3.ab3@28868>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D438 <AmiBlitz3.ab3@28872> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D43A <AmiBlitz3.ab3@28873>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D43C <AmiBlitz3.ab3@28877> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D440 <AmiBlitz3.ab3@28880> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D442 <AmiBlitz3.ab3@28884>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D444 <AmiBlitz3.ab3@28888>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D446 <AmiBlitz3.ab3@28892>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D44A <AmiBlitz3.ab3@28895> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D44E <AmiBlitz3.ab3@28898> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D450 <AmiBlitz3.ab3@28901> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D452 <AmiBlitz3.ab3@28904> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D454 <AmiBlitz3.ab3@28907> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D458 <AmiBlitz3.ab3@28910> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D45C <AmiBlitz3.ab3@28913> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D45E <AmiBlitz3.ab3@28916> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D460 <AmiBlitz3.ab3@28920>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D464 <AmiBlitz3.ab3@28923>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D466 <AmiBlitz3.ab3@28929>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D46A <AmiBlitz3.ab3@28932>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D46C <AmiBlitz3.ab3@28938>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D470 <AmiBlitz3.ab3@28942> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D472 <AmiBlitz3.ab3@28945> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D474 <AmiBlitz3.ab3@28949>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D476 <AmiBlitz3.ab3@28953>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D47C <AmiBlitz3.ab3@28956> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D482 <AmiBlitz3.ab3@28959> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D48A <AmiBlitz3.ab3@28963> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D48E <AmiBlitz3.ab3@28964>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D490 <AmiBlitz3.ab3@28968> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D494 <AmiBlitz3.ab3@28971> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D498 <AmiBlitz3.ab3@28974> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D49C <AmiBlitz3.ab3@28977> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D4A0 <AmiBlitz3.ab3@28978> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D4A4 <AmiBlitz3.ab3@28982>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D4A8 <AmiBlitz3.ab3@28984>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D4AA <AmiBlitz3.ab3@28987> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D4AE <AmiBlitz3.ab3@28990> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D4B0 <AmiBlitz3.ab3@28993> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D4B2 <AmiBlitz3.ab3@28994>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D4B4 <AmiBlitz3.ab3@28995>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D4B8 <AmiBlitz3.ab3@28996> 
0003D4BA <AmiBlitz3.ab3@28997>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D4BC <AmiBlitz3.ab3@28998>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D4BE <AmiBlitz3.ab3@28999>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D4C4 <AmiBlitz3.ab3@29001>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D4C6 <AmiBlitz3.ab3@29006> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D4C8 <AmiBlitz3.ab3@29007>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D4CA <AmiBlitz3.ab3@29011> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D4CE <AmiBlitz3.ab3@29014> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D4D0 <AmiBlitz3.ab3@29017> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D4D2 <AmiBlitz3.ab3@29021>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D4D4 <AmiBlitz3.ab3@29024> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D4D8 <AmiBlitz3.ab3@29027> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D4DA <AmiBlitz3.ab3@29028>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D4DE <AmiBlitz3.ab3@29032> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D4E2 <AmiBlitz3.ab3@29033> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D4E6 <AmiBlitz3.ab3@29037> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D4EA <AmiBlitz3.ab3@29041> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D4F0 <AmiBlitz3.ab3@29045> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D4F6 <AmiBlitz3.ab3@29048> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D4FA <AmiBlitz3.ab3@29052> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D4FE <AmiBlitz3.ab3@29056>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D502 <AmiBlitz3.ab3@29057>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D508 <AmiBlitz3.ab3@29062>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D50C <AmiBlitz3.ab3@29067>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D50E <AmiBlitz3.ab3@29072>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D512 <AmiBlitz3.ab3@29076>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D514 <AmiBlitz3.ab3@29080> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D516 <AmiBlitz3.ab3@29083> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D518 <AmiBlitz3.ab3@29084>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D51C <AmiBlitz3.ab3@29088>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D520 <AmiBlitz3.ab3@29092> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D524 <AmiBlitz3.ab3@29095> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D526 <AmiBlitz3.ab3@29098> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D52A <AmiBlitz3.ab3@29101> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D52C <AmiBlitz3.ab3@29104> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D535 <AmiBlitz3.ab3@29108>                            Dc.b "ram:test",0
0003D536 <AmiBlitz3.ab3@29109> Even
0003D53A <AmiBlitz3.ab3@29113>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D53C <AmiBlitz3.ab3@29115>                            Dc.w  0
0003D540 <AmiBlitz3.ab3@29118> _mathffpbase:              Ds.l 1                           ;maths org source
0003D542 <AmiBlitz3.ab3@29119> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D544 <AmiBlitz3.ab3@29120> typelen:                   Ds.w 1
0003D548 <AmiBlitz3.ab3@29121> prevtype:                  Ds.l 1
0003D54C <AmiBlitz3.ab3@29122> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D54E <AmiBlitz3.ab3@29123> lastchar:                  Ds.w 1
0003D552 <AmiBlitz3.ab3@29124> thistype:                  Ds.l 1
0003D556 <AmiBlitz3.ab3@29125> errstack:                  Ds.l 1
0003D55A <AmiBlitz3.ab3@29126> errcont:                   Ds.l 1
0003D55C <AmiBlitz3.ab3@29127> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D55E <AmiBlitz3.ab3@29128> linesleft:                 Ds.w 1
0003D562 <AmiBlitz3.ab3@29129> sourceline:                Ds.l 1                          ;thisitem org source
0003D566 <AmiBlitz3.ab3@29130> varbase:                   Ds.l 1                          ;firstvar org source
0003D56A <AmiBlitz3.ab3@29131> alllocals:                 Ds.l 1
0003D56E <AmiBlitz3.ab3@29132> firstlocal:                Ds.l 1
0003D572 <AmiBlitz3.ab3@29133> firstglob:                 Ds.l 1
0003D574 <AmiBlitz3.ab3@29134> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D576 <AmiBlitz3.ab3@29135> locvaroff:                 Ds.w 1
0003D57A <AmiBlitz3.ab3@29136> firstitem_:                 Ds.l 1
0003D57C <AmiBlitz3.ab3@29137> numlines_org:              Ds.w 1                          ;numlines org source
0003D57E <AmiBlitz3.ab3@29138> returncode_org:            Ds.w 1                          ;returncode org source
0003D582 <AmiBlitz3.ab3@29139> firstiff:                  Ds.l 1                          ;firstif org source
0003D586 <AmiBlitz3.ab3@29140> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003D786 <AmiBlitz3.ab3@29141> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003D796 <AmiBlitz3.ab3@29142> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003D996 <AmiBlitz3.ab3@29143> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003DB96 <AmiBlitz3.ab3@29144> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003DD96 <AmiBlitz3.ab3@29145> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003DD9A <AmiBlitz3.ab3@29147> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003DF9A <AmiBlitz3.ab3@29148> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E19A <AmiBlitz3.ab3@29150> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E19E <AmiBlitz3.ab3@29151> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E39E <AmiBlitz3.ab3@29152> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E3A2 <AmiBlitz3.ab3@29153> size_deflibs:              Ds.l 1                          ;deflibs org source
0003E5A2 <AmiBlitz3.ab3@29154> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003E7A2 <AmiBlitz3.ab3@29156> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003E7A6 <AmiBlitz3.ab3@29157> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003E9A6 <AmiBlitz3.ab3@29159> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E9AA <AmiBlitz3.ab3@29165>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003E9AE <AmiBlitz3.ab3@29166>   Dc.b $00,$00,$00,$00
0003E9B2 <AmiBlitz3.ab3@29167>   Dc.b $00,$19,$00,$11
0003E9B6 <AmiBlitz3.ab3@29168>   Dc.b $00,$2E,$00,$18
0003E9BA <AmiBlitz3.ab3@29169>   Dc.b $00,$04,$00,$03
0003E9BE <AmiBlitz3.ab3@29170>   Dc.b $00,$01,$00,$22
0003E9C2 <AmiBlitz3.ab3@29171>   Dc.b $73,$68,$00,$00
0003E9C6 <AmiBlitz3.ab3@29172>   Dc.b $00,$00,$00,$00
0003E9CA <AmiBlitz3.ab3@29173>   Dc.b $00,$00,$00,$00
0003E9CE <AmiBlitz3.ab3@29174>   Dc.b $00,$00,$00,$00
0003E9D2 <AmiBlitz3.ab3@29175>   Dc.b $00,$00,$00,$00
0003E9D6 <AmiBlitz3.ab3@29176>   Dc.b $00,$00,$00,$00
0003E9DA <AmiBlitz3.ab3@29177>   Dc.b $03,$22,$00,$21
0003E9DE <AmiBlitz3.ab3@29178>   Dc.b $3C,$28,$00,$22
0003E9E2 <AmiBlitz3.ab3@29179>   Dc.b $6E,$C0,$00,$00
0003E9E6 <AmiBlitz3.ab3@29180>   Dc.b $00,$12,$00,$00
0003E9EA <AmiBlitz3.ab3@29181>   Dc.b $00,$0E,$00,$00
0003E9EE <AmiBlitz3.ab3@29182>   Dc.b $00,$00,$00,$00
0003E9F2 <AmiBlitz3.ab3@29183>   Dc.b $00,$00,$00,$00
0003E9F6 <AmiBlitz3.ab3@29184>   Dc.b $00,$00,$00,$00
0003E9FA <AmiBlitz3.ab3@29185>   Dc.b $00,$00,$00,$2E
0003E9FE <AmiBlitz3.ab3@29186>   Dc.b $00,$17,$00,$02
0003EA02 <AmiBlitz3.ab3@29187>   Dc.b $00,$01,$8E,$80
0003EA06 <AmiBlitz3.ab3@29188>   Dc.b $03,$00,$00,$00
0003EA0A <AmiBlitz3.ab3@29189>   Dc.b $00,$00,$FF,$FF
0003EA0E <AmiBlitz3.ab3@29190>   Dc.b $FF,$FF,$FF,$FC
0003EA12 <AmiBlitz3.ab3@29191>   Dc.b $80,$00,$00,$00
0003EA16 <AmiBlitz3.ab3@29192>   Dc.b $00,$00,$80,$00
0003EA1A <AmiBlitz3.ab3@29193>   Dc.b $00,$3F,$BB,$40
0003EA1E <AmiBlitz3.ab3@29194>   Dc.b $80,$1F,$C0,$00
0003EA22 <AmiBlitz3.ab3@29195>   Dc.b $00,$00,$80,$3F
0003EA26 <AmiBlitz3.ab3@29196>   Dc.b $C0,$0F,$BB,$40
0003EA2A <AmiBlitz3.ab3@29197>   Dc.b $80,$1F,$C0,$00
0003EA2E <AmiBlitz3.ab3@29198>   Dc.b $00,$00,$8E,$00
0003EA32 <AmiBlitz3.ab3@29199>   Dc.b $F8,$00,$00,$00
0003EA36 <AmiBlitz3.ab3@29200>   Dc.b $8F,$01,$FF,$00
0003EA3A <AmiBlitz3.ab3@29201>   Dc.b $3B,$40,$81,$E3
0003EA3E <AmiBlitz3.ab3@29202>   Dc.b $F7,$C0,$00,$00
0003EA42 <AmiBlitz3.ab3@29203>   Dc.b $80,$7F,$F8,$70
0003EA46 <AmiBlitz3.ab3@29204>   Dc.b $3B,$40,$80,$0F
0003EA4A <AmiBlitz3.ab3@29205>   Dc.b $7C,$E0,$00,$00
0003EA4E <AmiBlitz3.ab3@29206>   Dc.b $80,$00,$FD,$80
0003EA52 <AmiBlitz3.ab3@29207>   Dc.b $00,$00,$80,$01
0003EA56 <AmiBlitz3.ab3@29208>   Dc.b $F6,$00,$FB,$40
0003EA5A <AmiBlitz3.ab3@29209>   Dc.b $80,$03,$EF,$00
0003EA5E <AmiBlitz3.ab3@29210>   Dc.b $00,$00,$80,$07
0003EA62 <AmiBlitz3.ab3@29211>   Dc.b $87,$80,$3B,$40
0003EA66 <AmiBlitz3.ab3@29212>   Dc.b $80,$0F,$01,$C0
0003EA6A <AmiBlitz3.ab3@29213>   Dc.b $00,$00,$80,$03
0003EA6E <AmiBlitz3.ab3@29214>   Dc.b $F0,$70,$1D,$40
0003EA72 <AmiBlitz3.ab3@29215>   Dc.b $80,$00,$18,$1C
0003EA76 <AmiBlitz3.ab3@29216>   Dc.b $00,$00,$80,$00
0003EA7A <AmiBlitz3.ab3@29217>   Dc.b $10,$06,$03,$40
0003EA7E <AmiBlitz3.ab3@29218>   Dc.b $80,$00,$20,$1F
0003EA82 <AmiBlitz3.ab3@29219>   Dc.b $00,$00,$80,$00
0003EA86 <AmiBlitz3.ab3@29220>   Dc.b $00,$00,$01,$40
0003EA8A <AmiBlitz3.ab3@29221>   Dc.b $80,$00,$00,$00
0003EA8E <AmiBlitz3.ab3@29222>   Dc.b $00,$00,$80,$00
0003EA92 <AmiBlitz3.ab3@29223>   Dc.b $00,$00,$00,$00
0003EA96 <AmiBlitz3.ab3@29224>   Dc.b $00,$00,$00,$00
0003EA9A <AmiBlitz3.ab3@29225>   Dc.b $00,$00,$00,$00
0003EA9E <AmiBlitz3.ab3@29226>   Dc.b $00,$00,$00,$04
0003EAA2 <AmiBlitz3.ab3@29227>   Dc.b $00,$3F,$FC,$01
0003EAA6 <AmiBlitz3.ab3@29228>   Dc.b $BB,$44,$00,$60
0003EAAA <AmiBlitz3.ab3@29229>   Dc.b $FE,$00,$00,$04
0003EAAE <AmiBlitz3.ab3@29230>   Dc.b $00,$CF,$FF,$01
0003EAB2 <AmiBlitz3.ab3@29231>   Dc.b $BB,$44,$1F,$EF
0003EAB6 <AmiBlitz3.ab3@29232>   Dc.b $FF,$00,$00,$04
0003EABA <AmiBlitz3.ab3@29233>   Dc.b $33,$FF,$FF,$E0
0003EABE <AmiBlitz3.ab3@29234>   Dc.b $00,$04,$37,$FE
0003EAC2 <AmiBlitz3.ab3@29235>   Dc.b $7F,$FC,$1B,$44
0003EAC6 <AmiBlitz3.ab3@29236>   Dc.b $0F,$9C,$FF,$FF
0003EACA <AmiBlitz3.ab3@29237>   Dc.b $00,$04,$03,$E3
0003EACE <AmiBlitz3.ab3@29238>   Dc.b $FF,$FF,$DB,$44
0003EAD2 <AmiBlitz3.ab3@29239>   Dc.b $00,$7F,$BF,$FF
0003EAD6 <AmiBlitz3.ab3@29240>   Dc.b $80,$04,$00,$0F
0003EADA <AmiBlitz3.ab3@29241>   Dc.b $3F,$FE,$00,$04
0003EADE <AmiBlitz3.ab3@29242>   Dc.b $00,$06,$7F,$F8
0003EAE2 <AmiBlitz3.ab3@29243>   Dc.b $1B,$44,$00,$0C
0003EAE6 <AmiBlitz3.ab3@29244>   Dc.b $F7,$FC,$00,$04
0003EAEA <AmiBlitz3.ab3@29245>   Dc.b $00,$19,$F9,$FE
0003EAEE <AmiBlitz3.ab3@29246>   Dc.b $1B,$44,$00,$33
0003EAF2 <AmiBlitz3.ab3@29247>   Dc.b $FE,$7F,$00,$04
0003EAF6 <AmiBlitz3.ab3@29248>   Dc.b $00,$0F,$FF,$BF
0003EAFA <AmiBlitz3.ab3@29249>   Dc.b $CD,$44,$00,$03
0003EAFE <AmiBlitz3.ab3@29250>   Dc.b $EF,$EF,$F0,$04
0003EB02 <AmiBlitz3.ab3@29251>   Dc.b $00,$00,$7F,$DF
0003EB06 <AmiBlitz3.ab3@29252>   Dc.b $FB,$44,$00,$00
0003EB0A <AmiBlitz3.ab3@29253>   Dc.b $FF,$A7,$FC,$04
0003EB0E <AmiBlitz3.ab3@29254>   Dc.b $00,$00,$7E,$3F
0003EB12 <AmiBlitz3.ab3@29255>   Dc.b $FD,$44,$00,$00
0003EB16 <AmiBlitz3.ab3@29256>   Dc.b $00,$00,$00,$04
0003EB1A <AmiBlitz3.ab3@29257>   Dc.b $7F,$FF,$FF,$FF
0003EB1E <AmiBlitz3.ab3@29258>   Dc.b $FF,$FC,$00,$00
0003EB22 <AmiBlitz3.ab3@29259>   Dc.b $00,$01,$00,$00
0003EB25 <AmiBlitz3.ab3@29260>   Dc.b $00,$00,$04
0003EB2B <AmiBlitz3.ab3@29263> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003EB83 <AmiBlitz3.ab3@29264> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003EB84 <AmiBlitz3.ab3@29265> Even
0003EB88 <AmiBlitz3.ab3@29267> sysdebug:            Dc.l $3F0
0003EB8C <AmiBlitz3.ab3@29271> exelock              Ds.l 1
0003EB90 <AmiBlitz3.ab3@29275> includesourceline    Dc.l 0
0003EB94 <AmiBlitz3.ab3@29276> linenum              Ds.l 1
0003EB98 <AmiBlitz3.ab3@29277> globallinecount      Ds.l 1
0003EBB6 <AmiBlitz3.ab3@29278> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003EBBA <AmiBlitz3.ab3@29279> calc_option          Dc.l 1
0003EBBE <AmiBlitz3.ab3@29280> versioninformation   Dc.l $00
0003EBC2 <AmiBlitz3.ab3@29281> number_of_builds     Dc.l $00
0003EBC4 <AmiBlitz3.ab3@29284> BSS
0003EBC6 <AmiBlitz3.ab3@29285> debugnest            Ds.w 1
0003EBCA <AmiBlitz3.ab3@29286> instringf            Ds.l 1
0003EBCE <AmiBlitz3.ab3@29287> funcscanon           Ds.l 1
0003EBE2 <AmiBlitz3.ab3@29288> storedebugmode       Ds.b 20
0003EBE6 <AmiBlitz3.ab3@29289> firsttimepref        Ds.l 1
0003EBE7 <AmiBlitz3.ab3@29290> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003EBE8 <AmiBlitz3.ab3@29291> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003EBEA <AmiBlitz3.ab3@29292> nostringopt          Ds.w 1
0003EC6A <AmiBlitz3.ab3@29293> path2:               Ds.l 32
0003EC6E <AmiBlitz3.ab3@29294> typebase             Dc.l 0
0003EC70 <AmiBlitz3.ab3@29295> doublepeek           Dc.w 0
0003EC74 <AmiBlitz3.ab3@29296> lastoffset           Dc.l 0
0003EC76 <AmiBlitz3.ab3@29297> firsttime            Dc.w 0
0003EC7A <AmiBlitz3.ab3@29298> lastdestpointer      Dc.l 0
0003EC7E <AmiBlitz3.ab3@29299> prevwritedat         Dc.l 0
0003EC82 <AmiBlitz3.ab3@29300> lastsourceline       Dc.l 0
0003EC86 <AmiBlitz3.ab3@29301> lastwritedat         Dc.l 0
0003EC88 <AmiBlitz3.ab3@29302> makeexec             Dc.w 0
0003EC8A <AmiBlitz3.ab3@29303> makeexec_remember    Dc.w 0
0003EC8E <AmiBlitz3.ab3@29304> sharebase            Ds.l 1
0003EC92 <AmiBlitz3.ab3@29305> tempa7               Ds.l 1
0003EC94 <AmiBlitz3.ab3@29306> incnif               Ds.w 1
0003EC98 <AmiBlitz3.ab3@29307> tempstore            Ds.l 1
0003EC9C <AmiBlitz3.ab3@29308> result               Ds.l 1
0003EC9E <AmiBlitz3.ab3@29309> automode             Ds.w 1
0003ECA0 <AmiBlitz3.ab3@29310> stackcorrect         Ds.w 1
0003ECA2 <AmiBlitz3.ab3@29311> formode              Ds.w 1
0003ECA6 <AmiBlitz3.ab3@29312> limitregs            Ds.l 1
0003ECA8 <AmiBlitz3.ab3@29313> onestep              Ds.w 1
0003ECAC <AmiBlitz3.ab3@29314> reqmode              Ds.l 1
0003ED4C <AmiBlitz3.ab3@29315> inctab               Ds.l 40
0003ED4E <AmiBlitz3.ab3@29316> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003ED52 <AmiBlitz3.ab3@29317> includeline          Ds.l 1
0003ED56 <AmiBlitz3.ab3@29318> morememadd           Ds.l 1
0003ED58 <AmiBlitz3.ab3@29319> objectcount          Ds.w 1
0003ED5C <AmiBlitz3.ab3@29320> savefuncspace        Ds.l 1
0003ED60 <AmiBlitz3.ab3@29321> lasttrap1            Ds.l 1
0003ED64 <AmiBlitz3.ab3@29322> currentfunccall      Ds.l 1
0003ED65 <AmiBlitz3.ab3@29323> skipfunc             Ds.b 1
0003ED66 <AmiBlitz3.ab3@29324> resdisable           Ds.b 1
0003ED67 <AmiBlitz3.ab3@29325> skiptoggle           Ds.b 1
0003ED68 <AmiBlitz3.ab3@29326> developobject        Ds.b 1
0003ED6A <AmiBlitz3.ab3@29327> iniffcommand         Ds.w 1
0003ED6C <AmiBlitz3.ab3@29328> startoffsetmore      Ds.w 1
0003ED6E <AmiBlitz3.ab3@29329> olddebugmode         Ds.w 1
0003ED72 <AmiBlitz3.ab3@29330> fpucodeglobal        Ds.l 1
0003ED76 <AmiBlitz3.ab3@29331> fpucodelocal         Ds.l 1
0003ED7A <AmiBlitz3.ab3@29332> maxregs              Ds.l 1
0003ED7E <AmiBlitz3.ab3@29333> fpucode              Ds.l 1
0003ED80 <AmiBlitz3.ab3@29334> firstmline           Ds.w 1
0003EDC0 <AmiBlitz3.ab3@29335> regtable             Ds.l 16
0003EDC2 <AmiBlitz3.ab3@29336> exdebug              Ds.w 1
0003EDC4 <AmiBlitz3.ab3@29337> a2offset2            Ds.w 1
0003EDC8 <AmiBlitz3.ab3@29338> parnumtemp           Ds.l 1
0003EDC9 <AmiBlitz3.ab3@29339> doimmediate          Ds.b 1
0003EDCA <AmiBlitz3.ab3@29340> notypecheck          Ds.b 1
0003EDCC <AmiBlitz3.ab3@29341> vartype              Ds.w 1
0003EDCD <AmiBlitz3.ab3@29342> peekaddrsize         Ds.b 1
0003EDCE <AmiBlitz3.ab3@29343> declare2             Ds.b 1
0003EDD0 <AmiBlitz3.ab3@29344> parameternum         Ds.w 1
0003EDD4 <AmiBlitz3.ab3@29345> lasttoken            Ds.l 1
0003EDD6 <AmiBlitz3.ab3@29346> newvariable          Ds.w 1
0003EDD7 <AmiBlitz3.ab3@29347> declare              Ds.b 1
0003EDD8 <AmiBlitz3.ab3@29348> typecheck            Ds.b 1
0003EDD9 <AmiBlitz3.ab3@29349> nowdeclare           Ds.b 1
0003EDDA <AmiBlitz3.ab3@29350> dimkeep              Ds.b 1
0003EDDB <AmiBlitz3.ab3@29351> a4a5store            Ds.b 1
0003EDDC <AmiBlitz3.ab3@29352> ___freetouse         Ds.b 1
0003EDE0 <AmiBlitz3.ab3@29353> firstiffstore        Ds.l 1
0003EDE4 <AmiBlitz3.ab3@29354> destpointer2         Ds.l 1
0003EDE8 <AmiBlitz3.ab3@29355> stackaddr            Ds.l 1
0003EEEC <AmiBlitz3.ab3@29356> allowtab             Ds.b 260
0003EFEC <AmiBlitz3.ab3@29357> templine             Ds.b 256
0003EFEE <AmiBlitz3.ab3@29358> thenmode             Ds.w 1
0003EFF0 <AmiBlitz3.ab3@29359> temp                 Ds.w 1
0003EFF2 <AmiBlitz3.ab3@29360> tempregnum           Ds.w 1
0003EFF6 <AmiBlitz3.ab3@29362> numlines2            Ds.l 1
0003EFFA <AmiBlitz3.ab3@29363> numlines             Ds.l 1
0003EFFC <AmiBlitz3.ab3@29364> exmac                Ds.w 1
0003EFFE <AmiBlitz3.ab3@29365> returncode           Ds.w 1
0003F002 <AmiBlitz3.ab3@29366> fp0iff               Ds.l 1
0003F006 <AmiBlitz3.ab3@29367> fp0addr              Ds.l 1
0003F008 <AmiBlitz3.ab3@29368> fp0mode              Ds.w 1
0003F00A <AmiBlitz3.ab3@29369> fp0var               Ds.w 1
0003F00C <AmiBlitz3.ab3@29370> fastfunc             Ds.w 1
0003F00E <AmiBlitz3.ab3@29371> retmode              Ds.w 1
0003F010 <AmiBlitz3.ab3@29372> parnum               Ds.w 1
0003F012 <AmiBlitz3.ab3@29373> regmask              Ds.w 1
0003F014 <AmiBlitz3.ab3@29374> regnumfunc           Ds.w 1
0003F016 <AmiBlitz3.ab3@29375> libmode              Ds.w 1
0003F01A <AmiBlitz3.ab3@29376> oldline              Ds.l 1
0003F01E <AmiBlitz3.ab3@29377> sourceline3          Ds.l 1
0003F0E6 <AmiBlitz3.ab3@29378> debugstore           Ds.b 200
0003F0EA <AmiBlitz3.ab3@29379> deststore            Ds.l 1
0003F0EE <AmiBlitz3.ab3@29381> loada                Ds.l 1
0003F0F2 <AmiBlitz3.ab3@29383> currtype             Ds.l 1
0003F0F6 <AmiBlitz3.ab3@29384> arrayoffset          Ds.l 1
0003F0FA <AmiBlitz3.ab3@29385> lastlabel            Ds.l 1
0003F0FE <AmiBlitz3.ab3@29386> curtemplabel         Ds.l 1
0003F102 <AmiBlitz3.ab3@29387> sourceline2          Ds.l 1
0003F202 <AmiBlitz3.ab3@29388> chartab              Ds.b 256
0003F27A <AmiBlitz3.ab3@29389> tempspace            Ds.b 120
000BF28A <AmiBlitz3.ab3@29390> instrtab             Ds.l 65538*2
000C728A <AmiBlitz3.ab3@29392> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E728E <AmiBlitz3.ab3@29393> replacedat           Ds.w 65538
000EF28E <AmiBlitz3.ab3@29394> variablehash         Ds.l 8192
000EF292 <AmiBlitz3.ab3@29395> newinitaddr          Ds.l 1
000EF296 <AmiBlitz3.ab3@29396> realbssend           Ds.l 1
000EF298 <AmiBlitz3.ab3@29397> saved0               Ds.w 1
000EF318 <AmiBlitz3.ab3@29398> lastpath             Ds.b 128
000EF398 <AmiBlitz3.ab3@29399> lastpath2            Ds.b 128
000EF460 <AmiBlitz3.ab3@29400> fpustackbase         Ds.w 100
000EF464 <AmiBlitz3.ab3@29401> 
000EF466 <AmiBlitz3.ab3@29402> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF46A <AmiBlitz3.ab3@29403> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF46E <AmiBlitz3.ab3@29404> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF472 <AmiBlitz3.ab3@29405> rightsidetype        Dc.l 0  ; same as above but right side
000EF476 <AmiBlitz3.ab3@29408> trap15temp           Ds.l 1
000EF47A <AmiBlitz3.ab3@29409> trap15temp2          Ds.l 1
000EF47E <AmiBlitz3.ab3@29410> templibend           Ds.l 1
000EF482 <AmiBlitz3.ab3@29411> tempdata1start       Ds.l 1
000EF486 <AmiBlitz3.ab3@29412> stacktrack           Ds.l 1
000EF48A <AmiBlitz3.ab3@29413> pad                  Ds.l 1
000EF58A <AmiBlitz3.ab3@29414> includetemp          Ds.b 256
000EFF8A <AmiBlitz3.ab3@29415> includetemp2         Ds.b 256*10
000EFF8C <AmiBlitz3.ab3@29416> funccall             Ds.w 1
000EFF90 <AmiBlitz3.ab3@29419> ptr_resfile          Ds.l 1
000EFF92 <AmiBlitz3.ab3@29420> CalculatorButtonBinFlag:    Ds.w 1
000EFF94 <AmiBlitz3.ab3@29421> CalculatorButtonDecFlag:    Ds.w 1
000EFF98 <AmiBlitz3.ab3@29422> ped_startup_addr:    Ds.l 1
000EFF99 <AmiBlitz3.ab3@29423> start_without_libs:  Ds.b 1
000EFF9A <AmiBlitz3.ab3@29424> skip_bytes:          Ds.b 1
000EFF9E <AmiBlitz3.ab3@29425> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EFFA2 <AmiBlitz3.ab3@29426> beforeparameterfetch Ds.l 1
000EFFA6 <AmiBlitz3.ab3@29427> typetocast           Ds.l 1
000EFFAA <AmiBlitz3.ab3@29428> errorcounter         Ds.l 1
000EFFAB <AmiBlitz3.ab3@29429> iserror              Ds.b 1
000EFFAC <AmiBlitz3.ab3@29430> Even
000EFFB0 <AmiBlitz3.ab3@29432> CLIMode:             Dc.l 0
000EFFB4 <AmiBlitz3.ab3@29433> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000EFFB8 <AmiBlitz3.ab3@29434> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
