00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@65> !basic
000000AC <AmiBlitz3.ab2@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@71> CLIMode     = False
000000C8 <AmiBlitz3.ab2@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002F6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000037A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
000003E6 <error.include.bb2@127> XINCLUDE "dos.include.bb2"
00000400 <error.include.bb2@129> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@130> XINCLUDE "dos.include.bb2"
00000498 <error.include.bb2@131> XINCLUDE "dos.include.bb2"
000004A6 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
000004B4 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
000004C2 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
000004D0 <error.include.bb2@136> XINCLUDE "dos.include.bb2"
000004F8 <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000506 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
0000050E <error.include.bb2@139> XINCLUDE "dos.include.bb2"
00000540 <error.include.bb2@141> XINCLUDE "dos.include.bb2"
0000055A <error.include.bb2@146> XINCLUDE "dos.include.bb2"
00000592 <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000598 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005DC <error.include.bb2@149> XINCLUDE "dos.include.bb2"
00000624 <error.include.bb2@150> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@154> XINCLUDE "dos.include.bb2"
00000648 <error.include.bb2@156> XINCLUDE "dos.include.bb2"
00000692 <error.include.bb2@195> XINCLUDE "dos.include.bb2"
0000069A <error.include.bb2@197> XINCLUDE "dos.include.bb2"
00000706 <error.include.bb2@198> XINCLUDE "dos.include.bb2"
00000728 <error.include.bb2@199> XINCLUDE "dos.include.bb2"
00000788 <error.include.bb2@200> XINCLUDE "dos.include.bb2"
00000796 <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000007A4 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000007B2 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
000007C0 <error.include.bb2@205> XINCLUDE "dos.include.bb2"
00000820 <error.include.bb2@206> XINCLUDE "dos.include.bb2"
0000082E <error.include.bb2@207> XINCLUDE "dos.include.bb2"
00000864 <error.include.bb2@210> XINCLUDE "dos.include.bb2"
0000086E <error.include.bb2@214> XINCLUDE "dos.include.bb2"
0000088A <error.include.bb2@215> XINCLUDE "dos.include.bb2"
000008C4 <error.include.bb2@231> XINCLUDE "dos.include.bb2"
00000930 <error.include.bb2@234> XINCLUDE "dos.include.bb2"
0000094A <error.include.bb2@235> XINCLUDE "dos.include.bb2"
000009AA <error.include.bb2@236> XINCLUDE "dos.include.bb2"
000009B8 <error.include.bb2@237> XINCLUDE "dos.include.bb2"
000009C6 <error.include.bb2@238> XINCLUDE "dos.include.bb2"
000009D4 <error.include.bb2@239> XINCLUDE "dos.include.bb2"
000009E2 <error.include.bb2@240> XINCLUDE "dos.include.bb2"
00000A0A <error.include.bb2@241> XINCLUDE "dos.include.bb2"
00000A18 <error.include.bb2@242> XINCLUDE "dos.include.bb2"
00000A20 <error.include.bb2@243> XINCLUDE "dos.include.bb2"
00000A52 <error.include.bb2@245> XINCLUDE "dos.include.bb2"
00000A6C <error.include.bb2@249> XINCLUDE "dos.include.bb2"
00000AB0 <error.include.bb2@250> XINCLUDE "dos.include.bb2"
00000ACA <error.include.bb2@252> XINCLUDE "dos.include.bb2"
00000AF4 <error.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B3A <error.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B40 <error.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B58 <error.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B6E <error.include.bb2@303> XINCLUDE "dos.include.bb2"
00000B76 <error.include.bb2@305> XINCLUDE "dos.include.bb2"
00000B78 <error.include.bb2@306> XINCLUDE "dos.include.bb2"
00000B8E <error.include.bb2@322> XINCLUDE "dos.include.bb2"
00000B98 <error.include.bb2@324> XINCLUDE "dos.include.bb2"
00000B9E <error.include.bb2@325> XINCLUDE "dos.include.bb2"
00000BA8 <error.include.bb2@326> XINCLUDE "dos.include.bb2"
00000BAE <error.include.bb2@327> XINCLUDE "dos.include.bb2"
00000BAE <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
00000BAE <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
00000BAE <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
00000BDC <useful.include.bb2@264> XINCLUDE "dos.include.bb2"
00000BE6 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000BFA <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000C02 <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000C2A <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000C50 <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000C70 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000C7E <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000CA4 <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000CAC <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000CB4 <useful.include.bb2@277> XINCLUDE "dos.include.bb2"
00000CBA <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000CD6 <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000CFA <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000D0E <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000D14 <useful.include.bb2@282> XINCLUDE "dos.include.bb2"
00000D5E <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000D60 <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000D6E <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000D8E <useful.include.bb2@288> XINCLUDE "dos.include.bb2"
00000DEC <useful.include.bb2@289> XINCLUDE "dos.include.bb2"
00000DF2 <useful.include.bb2@290> XINCLUDE "dos.include.bb2"
00000E00 <useful.include.bb2@291> XINCLUDE "dos.include.bb2"
00000E14 <useful.include.bb2@292> XINCLUDE "dos.include.bb2"
00000E26 <useful.include.bb2@293> XINCLUDE "dos.include.bb2"
00000E34 <useful.include.bb2@294> XINCLUDE "dos.include.bb2"
00000E3A <useful.include.bb2@295> XINCLUDE "dos.include.bb2"
00000E46 <useful.include.bb2@296> XINCLUDE "dos.include.bb2"
00000E5A <useful.include.bb2@299> XINCLUDE "dos.include.bb2"
00000E6E <useful.include.bb2@300> XINCLUDE "dos.include.bb2"
00000E80 <useful.include.bb2@301> XINCLUDE "dos.include.bb2"
00000E8E <useful.include.bb2@302> XINCLUDE "dos.include.bb2"
00000EAC <useful.include.bb2@303> XINCLUDE "dos.include.bb2"
00000EB2 <useful.include.bb2@304> XINCLUDE "dos.include.bb2"
00000EC6 <useful.include.bb2@308> XINCLUDE "dos.include.bb2"
00000ED0 <useful.include.bb2@309> XINCLUDE "dos.include.bb2"
00000ED8 <useful.include.bb2@310> XINCLUDE "dos.include.bb2"
00000EF6 <useful.include.bb2@311> XINCLUDE "dos.include.bb2"
00000EFC <useful.include.bb2@312> XINCLUDE "dos.include.bb2"
00000F28 <useful.include.bb2@313> XINCLUDE "dos.include.bb2"
00000F2E <useful.include.bb2@315> XINCLUDE "dos.include.bb2"
00000F40 <useful.include.bb2@316> XINCLUDE "dos.include.bb2"
00000F58 <useful.include.bb2@317> XINCLUDE "dos.include.bb2"
00000F70 <useful.include.bb2@318> XINCLUDE "dos.include.bb2"
00000F8E <useful.include.bb2@319> XINCLUDE "dos.include.bb2"
00000F90 <useful.include.bb2@321> XINCLUDE "dos.include.bb2"
00000F9E <useful.include.bb2@322> XINCLUDE "dos.include.bb2"
00000FC4 <useful.include.bb2@323> XINCLUDE "dos.include.bb2"
00001058 <useful.include.bb2@324> XINCLUDE "dos.include.bb2"
00001066 <useful.include.bb2@326> XINCLUDE "dos.include.bb2"
0000106C <useful.include.bb2@327> XINCLUDE "dos.include.bb2"
00001096 <useful.include.bb2@328> XINCLUDE "dos.include.bb2"
000010B4 <useful.include.bb2@329> XINCLUDE "dos.include.bb2"
000010CE <useful.include.bb2@331> XINCLUDE "dos.include.bb2"
00001182 <useful.include.bb2@333> XINCLUDE "dos.include.bb2"
0000119E <useful.include.bb2@334> XINCLUDE "dos.include.bb2"
000011C4 <useful.include.bb2@335> XINCLUDE "dos.include.bb2"
000011D6 <useful.include.bb2@336> XINCLUDE "dos.include.bb2"
0000121C <useful.include.bb2@337> XINCLUDE "dos.include.bb2"
00001222 <useful.include.bb2@338> XINCLUDE "dos.include.bb2"
0000124A <useful.include.bb2@339> XINCLUDE "dos.include.bb2"
000012E0 <useful.include.bb2@340> XINCLUDE "dos.include.bb2"
00001332 <useful.include.bb2@341> XINCLUDE "dos.include.bb2"
00001364 <useful.include.bb2@343> XINCLUDE "dos.include.bb2"
000013AA <useful.include.bb2@345> XINCLUDE "dos.include.bb2"
000013D4 <useful.include.bb2@346> XINCLUDE "dos.include.bb2"
00001402 <useful.include.bb2@347> XINCLUDE "dos.include.bb2"
0000144C <useful.include.bb2@348> XINCLUDE "dos.include.bb2"
0000145C <useful.include.bb2@349> XINCLUDE "dos.include.bb2"
000014AE <useful.include.bb2@350> XINCLUDE "dos.include.bb2"
000014D8 <useful.include.bb2@352> XINCLUDE "dos.include.bb2"
000014F0 <useful.include.bb2@353> XINCLUDE "dos.include.bb2"
0000150A <useful.include.bb2@355> XINCLUDE "dos.include.bb2"
000015BE <useful.include.bb2@357> XINCLUDE "dos.include.bb2"
000015DA <useful.include.bb2@358> XINCLUDE "dos.include.bb2"
00001600 <useful.include.bb2@359> XINCLUDE "dos.include.bb2"
00001612 <useful.include.bb2@360> XINCLUDE "dos.include.bb2"
00001658 <useful.include.bb2@361> XINCLUDE "dos.include.bb2"
0000165E <useful.include.bb2@362> XINCLUDE "dos.include.bb2"
00001686 <useful.include.bb2@363> XINCLUDE "dos.include.bb2"
0000171C <useful.include.bb2@364> XINCLUDE "dos.include.bb2"
0000176E <useful.include.bb2@365> XINCLUDE "dos.include.bb2"
00001784 <useful.include.bb2@367> XINCLUDE "dos.include.bb2"
000017A0 <useful.include.bb2@368> XINCLUDE "dos.include.bb2"
000017B4 <useful.include.bb2@369> XINCLUDE "dos.include.bb2"
000017FA <useful.include.bb2@371> XINCLUDE "dos.include.bb2"
00001824 <useful.include.bb2@372> XINCLUDE "dos.include.bb2"
00001852 <useful.include.bb2@373> XINCLUDE "dos.include.bb2"
0000189C <useful.include.bb2@374> XINCLUDE "dos.include.bb2"
000018AC <useful.include.bb2@375> XINCLUDE "dos.include.bb2"
000018FE <useful.include.bb2@376> XINCLUDE "dos.include.bb2"
00001928 <useful.include.bb2@378> XINCLUDE "dos.include.bb2"
00001940 <useful.include.bb2@379> XINCLUDE "dos.include.bb2"
00001940 <strptr.include.bb2@37> XINCLUDE "dos.include.bb2"
0000195A <strptr.include.bb2@96> XINCLUDE "dos.include.bb2"
00001964 <strptr.include.bb2@97> XINCLUDE "dos.include.bb2"
000019AC <strptr.include.bb2@98> XINCLUDE "dos.include.bb2"
000019B0 <strptr.include.bb2@100> XINCLUDE "dos.include.bb2"
000019CA <strptr.include.bb2@103> XINCLUDE "dos.include.bb2"
000019D4 <strptr.include.bb2@104> XINCLUDE "dos.include.bb2"
000019E2 <strptr.include.bb2@105> XINCLUDE "dos.include.bb2"
000019EC <strptr.include.bb2@106> XINCLUDE "dos.include.bb2"
00001A0C <strptr.include.bb2@107> XINCLUDE "dos.include.bb2"
00001A1C <strptr.include.bb2@108> XINCLUDE "dos.include.bb2"
00001A20 <strptr.include.bb2@111> XINCLUDE "dos.include.bb2"
00001A42 <strptr.include.bb2@113> XINCLUDE "dos.include.bb2"
00001A4C <strptr.include.bb2@114> XINCLUDE "dos.include.bb2"
00001A56 <strptr.include.bb2@115> XINCLUDE "dos.include.bb2"
00001A60 <strptr.include.bb2@116> XINCLUDE "dos.include.bb2"
00001A72 <strptr.include.bb2@117> XINCLUDE "dos.include.bb2"
00001A7A <strptr.include.bb2@118> XINCLUDE "dos.include.bb2"
00001AA8 <strptr.include.bb2@119> XINCLUDE "dos.include.bb2"
00001ABA <strptr.include.bb2@121> XINCLUDE "dos.include.bb2"
00001ADE <strptr.include.bb2@122> XINCLUDE "dos.include.bb2"
00001AE8 <strptr.include.bb2@123> XINCLUDE "dos.include.bb2"
00001AF6 <strptr.include.bb2@124> XINCLUDE "dos.include.bb2"
00001B00 <strptr.include.bb2@125> XINCLUDE "dos.include.bb2"
00001B26 <strptr.include.bb2@126> XINCLUDE "dos.include.bb2"
00001B40 <strptr.include.bb2@127> XINCLUDE "dos.include.bb2"
00001B44 <strptr.include.bb2@132> XINCLUDE "dos.include.bb2"
00001B5E <strptr.include.bb2@134> XINCLUDE "dos.include.bb2"
00001B74 <strptr.include.bb2@135> XINCLUDE "dos.include.bb2"
00001B80 <strptr.include.bb2@136> XINCLUDE "dos.include.bb2"
00001B86 <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00001BA0 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00001BBA <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00001BC6 <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00001BCC <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00001BEE <strptr.include.bb2@159> XINCLUDE "dos.include.bb2"
00001BF8 <strptr.include.bb2@160> XINCLUDE "dos.include.bb2"
00001C40 <strptr.include.bb2@161> XINCLUDE "dos.include.bb2"
00001C4A <strptr.include.bb2@162> XINCLUDE "dos.include.bb2"
00001C5C <strptr.include.bb2@163> XINCLUDE "dos.include.bb2"
00001C64 <strptr.include.bb2@164> XINCLUDE "dos.include.bb2"
00001C92 <strptr.include.bb2@165> XINCLUDE "dos.include.bb2"
00001CA4 <strptr.include.bb2@167> XINCLUDE "dos.include.bb2"
00001CC8 <strptr.include.bb2@171> XINCLUDE "dos.include.bb2"
00001CD2 <strptr.include.bb2@173> XINCLUDE "dos.include.bb2"
00001CE0 <strptr.include.bb2@174> XINCLUDE "dos.include.bb2"
00001CEA <strptr.include.bb2@175> XINCLUDE "dos.include.bb2"
00001D10 <strptr.include.bb2@176> XINCLUDE "dos.include.bb2"
00001D2A <strptr.include.bb2@177> XINCLUDE "dos.include.bb2"
00001D2E <strptr.include.bb2@182> XINCLUDE "dos.include.bb2"
00001D5C <strptr.include.bb2@197> XINCLUDE "dos.include.bb2"
00001D66 <strptr.include.bb2@198> XINCLUDE "dos.include.bb2"
00001DAE <strptr.include.bb2@199> XINCLUDE "dos.include.bb2"
00001DC2 <strptr.include.bb2@200> XINCLUDE "dos.include.bb2"
00001DD4 <strptr.include.bb2@201> XINCLUDE "dos.include.bb2"
00001DF8 <strptr.include.bb2@205> XINCLUDE "dos.include.bb2"
00001E02 <strptr.include.bb2@208> XINCLUDE "dos.include.bb2"
00001E10 <strptr.include.bb2@209> XINCLUDE "dos.include.bb2"
00001E1A <strptr.include.bb2@210> XINCLUDE "dos.include.bb2"
00001E42 <strptr.include.bb2@211> XINCLUDE "dos.include.bb2"
00001E5C <strptr.include.bb2@212> XINCLUDE "dos.include.bb2"
00001E74 <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00001E92 <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00001E9C <strptr.include.bb2@220> XINCLUDE "dos.include.bb2"
00001EE4 <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00001EEE <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00001F02 <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00001F28 <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00001F32 <strptr.include.bb2@229> XINCLUDE "dos.include.bb2"
00001F40 <strptr.include.bb2@230> XINCLUDE "dos.include.bb2"
00001F4C <strptr.include.bb2@231> XINCLUDE "dos.include.bb2"
00001F80 <strptr.include.bb2@232> XINCLUDE "dos.include.bb2"
00001F84 <strptr.include.bb2@237> XINCLUDE "dos.include.bb2"
00001F9E <strptr.include.bb2@240> XINCLUDE "dos.include.bb2"
00001FB4 <strptr.include.bb2@241> XINCLUDE "dos.include.bb2"
00001FC0 <strptr.include.bb2@242> XINCLUDE "dos.include.bb2"
00001FC6 <strptr.include.bb2@243> XINCLUDE "dos.include.bb2"
00001FE0 <strptr.include.bb2@245> XINCLUDE "dos.include.bb2"
00001FFA <strptr.include.bb2@246> XINCLUDE "dos.include.bb2"
00002006 <strptr.include.bb2@247> XINCLUDE "dos.include.bb2"
0000200C <strptr.include.bb2@248> XINCLUDE "dos.include.bb2"
0000202A <strptr.include.bb2@251> XINCLUDE "dos.include.bb2"
0000203E <strptr.include.bb2@252> XINCLUDE "dos.include.bb2"
00002072 <strptr.include.bb2@253> XINCLUDE "dos.include.bb2"
00002078 <strptr.include.bb2@254> XINCLUDE "dos.include.bb2"
0000209A <strptr.include.bb2@255> XINCLUDE "dos.include.bb2"
000020BC <strptr.include.bb2@258> XINCLUDE "dos.include.bb2"
000020C4 <strptr.include.bb2@259> XINCLUDE "dos.include.bb2"
0000211E <strptr.include.bb2@260> XINCLUDE "dos.include.bb2"
0000212C <strptr.include.bb2@261> XINCLUDE "dos.include.bb2"
00002132 <strptr.include.bb2@262> XINCLUDE "dos.include.bb2"
00002186 <strptr.include.bb2@263> XINCLUDE "dos.include.bb2"
00002194 <strptr.include.bb2@264> XINCLUDE "dos.include.bb2"
0000219A <strptr.include.bb2@265> XINCLUDE "dos.include.bb2"
000021B4 <strptr.include.bb2@282> XINCLUDE "dos.include.bb2"
000021BE <strptr.include.bb2@283> XINCLUDE "dos.include.bb2"
000021CC <strptr.include.bb2@284> XINCLUDE "dos.include.bb2"
000021FE <strptr.include.bb2@285> XINCLUDE "dos.include.bb2"
0000221C <strptr.include.bb2@287> XINCLUDE "dos.include.bb2"
00002226 <strptr.include.bb2@288> XINCLUDE "dos.include.bb2"
00002226 <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
0000223C <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00002276 <multilist.include.bb2@78> XINCLUDE "dos.include.bb2"
000022AA <multilist.include.bb2@80> XINCLUDE "dos.include.bb2"
000022D0 <multilist.include.bb2@81> XINCLUDE "dos.include.bb2"
000022F0 <multilist.include.bb2@82> XINCLUDE "dos.include.bb2"
00002310 <multilist.include.bb2@83> XINCLUDE "dos.include.bb2"
0000233A <multilist.include.bb2@100> XINCLUDE "dos.include.bb2"
00002350 <multilist.include.bb2@101> XINCLUDE "dos.include.bb2"
0000235A <multilist.include.bb2@102> XINCLUDE "dos.include.bb2"
00002382 <multilist.include.bb2@103> XINCLUDE "dos.include.bb2"
00002388 <multilist.include.bb2@104> XINCLUDE "dos.include.bb2"
000023B0 <multilist.include.bb2@105> XINCLUDE "dos.include.bb2"
000023DA <multilist.include.bb2@107> XINCLUDE "dos.include.bb2"
000023F8 <multilist.include.bb2@108> XINCLUDE "dos.include.bb2"
00002422 <multilist.include.bb2@125> XINCLUDE "dos.include.bb2"
00002492 <multilist.include.bb2@126> XINCLUDE "dos.include.bb2"
000024BC <multilist.include.bb2@127> XINCLUDE "dos.include.bb2"
000024DA <multilist.include.bb2@128> XINCLUDE "dos.include.bb2"
00002520 <multilist.include.bb2@153> XINCLUDE "dos.include.bb2"
00002540 <multilist.include.bb2@154> XINCLUDE "dos.include.bb2"
0000254A <multilist.include.bb2@155> XINCLUDE "dos.include.bb2"
00002556 <multilist.include.bb2@156> XINCLUDE "dos.include.bb2"
00002560 <multilist.include.bb2@158> XINCLUDE "dos.include.bb2"
0000256C <multilist.include.bb2@159> XINCLUDE "dos.include.bb2"
00002576 <multilist.include.bb2@160> XINCLUDE "dos.include.bb2"
0000257C <multilist.include.bb2@161> XINCLUDE "dos.include.bb2"
00002588 <multilist.include.bb2@162> XINCLUDE "dos.include.bb2"
00002596 <multilist.include.bb2@165> XINCLUDE "dos.include.bb2"
000025A6 <multilist.include.bb2@166> XINCLUDE "dos.include.bb2"
000025B4 <multilist.include.bb2@169> XINCLUDE "dos.include.bb2"
000025D0 <multilist.include.bb2@170> XINCLUDE "dos.include.bb2"
000025EC <multilist.include.bb2@171> XINCLUDE "dos.include.bb2"
000025F8 <multilist.include.bb2@172> XINCLUDE "dos.include.bb2"
00002602 <multilist.include.bb2@173> XINCLUDE "dos.include.bb2"
0000260C <multilist.include.bb2@175> XINCLUDE "dos.include.bb2"
00002628 <multilist.include.bb2@176> XINCLUDE "dos.include.bb2"
0000266E <multilist.include.bb2@197> XINCLUDE "dos.include.bb2"
00002678 <multilist.include.bb2@198> XINCLUDE "dos.include.bb2"
00002698 <multilist.include.bb2@199> XINCLUDE "dos.include.bb2"
000026A2 <multilist.include.bb2@200> XINCLUDE "dos.include.bb2"
000026B0 <multilist.include.bb2@201> XINCLUDE "dos.include.bb2"
000026BC <multilist.include.bb2@202> XINCLUDE "dos.include.bb2"
000026D2 <multilist.include.bb2@203> XINCLUDE "dos.include.bb2"
000026E0 <multilist.include.bb2@205> XINCLUDE "dos.include.bb2"
000026EA <multilist.include.bb2@206> XINCLUDE "dos.include.bb2"
000026F6 <multilist.include.bb2@207> XINCLUDE "dos.include.bb2"
00002704 <multilist.include.bb2@208> XINCLUDE "dos.include.bb2"
00002712 <multilist.include.bb2@210> XINCLUDE "dos.include.bb2"
0000272E <multilist.include.bb2@211> XINCLUDE "dos.include.bb2"
0000274A <multilist.include.bb2@212> XINCLUDE "dos.include.bb2"
00002756 <multilist.include.bb2@213> XINCLUDE "dos.include.bb2"
00002760 <multilist.include.bb2@214> XINCLUDE "dos.include.bb2"
00002772 <multilist.include.bb2@215> XINCLUDE "dos.include.bb2"
00002778 <multilist.include.bb2@217> XINCLUDE "dos.include.bb2"
000027E2 <multilist.include.bb2@218> XINCLUDE "dos.include.bb2"
000027EC <multilist.include.bb2@220> XINCLUDE "dos.include.bb2"
00002808 <multilist.include.bb2@221> XINCLUDE "dos.include.bb2"
0000284E <multilist.include.bb2@243> XINCLUDE "dos.include.bb2"
00002858 <multilist.include.bb2@244> XINCLUDE "dos.include.bb2"
00002878 <multilist.include.bb2@245> XINCLUDE "dos.include.bb2"
00002882 <multilist.include.bb2@246> XINCLUDE "dos.include.bb2"
00002890 <multilist.include.bb2@247> XINCLUDE "dos.include.bb2"
000028B6 <multilist.include.bb2@248> XINCLUDE "dos.include.bb2"
000028BE <multilist.include.bb2@249> XINCLUDE "dos.include.bb2"
0000290A <multilist.include.bb2@250> XINCLUDE "dos.include.bb2"
0000291A <multilist.include.bb2@251> XINCLUDE "dos.include.bb2"
00002920 <multilist.include.bb2@252> XINCLUDE "dos.include.bb2"
0000293A <multilist.include.bb2@253> XINCLUDE "dos.include.bb2"
00002950 <multilist.include.bb2@254> XINCLUDE "dos.include.bb2"
00002956 <multilist.include.bb2@255> XINCLUDE "dos.include.bb2"
00002960 <multilist.include.bb2@256> XINCLUDE "dos.include.bb2"
00002966 <multilist.include.bb2@257> XINCLUDE "dos.include.bb2"
0000296C <multilist.include.bb2@258> XINCLUDE "dos.include.bb2"
00002972 <multilist.include.bb2@260> XINCLUDE "dos.include.bb2"
00002978 <multilist.include.bb2@263> XINCLUDE "dos.include.bb2"
00002992 <multilist.include.bb2@264> XINCLUDE "dos.include.bb2"
000029E4 <multilist.include.bb2@266> XINCLUDE "dos.include.bb2"
00002A44 <multilist.include.bb2@267> XINCLUDE "dos.include.bb2"
00002A4A <multilist.include.bb2@269> XINCLUDE "dos.include.bb2"
00002A54 <multilist.include.bb2@270> XINCLUDE "dos.include.bb2"
00002A5A <multilist.include.bb2@272> XINCLUDE "dos.include.bb2"
00002A60 <multilist.include.bb2@273> XINCLUDE "dos.include.bb2"
00002A66 <multilist.include.bb2@275> XINCLUDE "dos.include.bb2"
00002A98 <multilist.include.bb2@277> XINCLUDE "dos.include.bb2"
00002AAE <multilist.include.bb2@279> XINCLUDE "dos.include.bb2"
00002AC2 <multilist.include.bb2@280> XINCLUDE "dos.include.bb2"
00002ACE <multilist.include.bb2@282> XINCLUDE "dos.include.bb2"
00002AD8 <multilist.include.bb2@283> XINCLUDE "dos.include.bb2"
00002AE4 <multilist.include.bb2@284> XINCLUDE "dos.include.bb2"
00002AF2 <multilist.include.bb2@285> XINCLUDE "dos.include.bb2"
00002B00 <multilist.include.bb2@287> XINCLUDE "dos.include.bb2"
00002B1C <multilist.include.bb2@288> XINCLUDE "dos.include.bb2"
00002B38 <multilist.include.bb2@289> XINCLUDE "dos.include.bb2"
00002B44 <multilist.include.bb2@290> XINCLUDE "dos.include.bb2"
00002B4E <multilist.include.bb2@291> XINCLUDE "dos.include.bb2"
00002B72 <multilist.include.bb2@292> XINCLUDE "dos.include.bb2"
00002B78 <multilist.include.bb2@294> XINCLUDE "dos.include.bb2"
00002BE2 <multilist.include.bb2@295> XINCLUDE "dos.include.bb2"
00002BEC <multilist.include.bb2@297> XINCLUDE "dos.include.bb2"
00002C08 <multilist.include.bb2@298> XINCLUDE "dos.include.bb2"
00002C4E <multilist.include.bb2@320> XINCLUDE "dos.include.bb2"
00002C58 <multilist.include.bb2@321> XINCLUDE "dos.include.bb2"
00002C78 <multilist.include.bb2@322> XINCLUDE "dos.include.bb2"
00002C82 <multilist.include.bb2@323> XINCLUDE "dos.include.bb2"
00002C8A <multilist.include.bb2@324> XINCLUDE "dos.include.bb2"
00002C98 <multilist.include.bb2@325> XINCLUDE "dos.include.bb2"
00002CE4 <multilist.include.bb2@327> XINCLUDE "dos.include.bb2"
00002CF4 <multilist.include.bb2@328> XINCLUDE "dos.include.bb2"
00002CFA <multilist.include.bb2@329> XINCLUDE "dos.include.bb2"
00002D14 <multilist.include.bb2@330> XINCLUDE "dos.include.bb2"
00002D2A <multilist.include.bb2@331> XINCLUDE "dos.include.bb2"
00002D30 <multilist.include.bb2@332> XINCLUDE "dos.include.bb2"
00002D3A <multilist.include.bb2@333> XINCLUDE "dos.include.bb2"
00002D40 <multilist.include.bb2@334> XINCLUDE "dos.include.bb2"
00002D46 <multilist.include.bb2@335> XINCLUDE "dos.include.bb2"
00002D4C <multilist.include.bb2@337> XINCLUDE "dos.include.bb2"
00002D52 <multilist.include.bb2@340> XINCLUDE "dos.include.bb2"
00002D6C <multilist.include.bb2@341> XINCLUDE "dos.include.bb2"
00002DBE <multilist.include.bb2@343> XINCLUDE "dos.include.bb2"
00002E1E <multilist.include.bb2@344> XINCLUDE "dos.include.bb2"
00002E24 <multilist.include.bb2@345> XINCLUDE "dos.include.bb2"
00002E2E <multilist.include.bb2@346> XINCLUDE "dos.include.bb2"
00002E34 <multilist.include.bb2@348> XINCLUDE "dos.include.bb2"
00002E3A <multilist.include.bb2@349> XINCLUDE "dos.include.bb2"
00002E40 <multilist.include.bb2@351> XINCLUDE "dos.include.bb2"
00002E5E <multilist.include.bb2@353> XINCLUDE "dos.include.bb2"
00002E74 <multilist.include.bb2@354> XINCLUDE "dos.include.bb2"
00002E88 <multilist.include.bb2@355> XINCLUDE "dos.include.bb2"
00002E94 <multilist.include.bb2@357> XINCLUDE "dos.include.bb2"
00002E9E <multilist.include.bb2@358> XINCLUDE "dos.include.bb2"
00002EAA <multilist.include.bb2@359> XINCLUDE "dos.include.bb2"
00002EB8 <multilist.include.bb2@360> XINCLUDE "dos.include.bb2"
00002EC6 <multilist.include.bb2@362> XINCLUDE "dos.include.bb2"
00002EE2 <multilist.include.bb2@363> XINCLUDE "dos.include.bb2"
00002EFE <multilist.include.bb2@364> XINCLUDE "dos.include.bb2"
00002F0A <multilist.include.bb2@365> XINCLUDE "dos.include.bb2"
00002F14 <multilist.include.bb2@366> XINCLUDE "dos.include.bb2"
00002F26 <multilist.include.bb2@367> XINCLUDE "dos.include.bb2"
00002F2C <multilist.include.bb2@369> XINCLUDE "dos.include.bb2"
00002F96 <multilist.include.bb2@370> XINCLUDE "dos.include.bb2"
00002FA0 <multilist.include.bb2@372> XINCLUDE "dos.include.bb2"
00002FBC <multilist.include.bb2@373> XINCLUDE "dos.include.bb2"
00002FD6 <multilist.include.bb2@390> XINCLUDE "dos.include.bb2"
00003006 <multilist.include.bb2@391> XINCLUDE "dos.include.bb2"
00003010 <multilist.include.bb2@392> XINCLUDE "dos.include.bb2"
00003016 <multilist.include.bb2@393> XINCLUDE "dos.include.bb2"
00003030 <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
0000303A <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
0000305C <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00003080 <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00003092 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
000030AA <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
000030BE <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
000030D0 <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
000030E0 <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
000030E6 <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
000030F6 <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
00003106 <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
00003120 <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
00003124 <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
0000313E <multilist.include.bb2@439> XINCLUDE "dos.include.bb2"
00003148 <multilist.include.bb2@440> XINCLUDE "dos.include.bb2"
00003154 <multilist.include.bb2@441> XINCLUDE "dos.include.bb2"
0000315A <multilist.include.bb2@442> XINCLUDE "dos.include.bb2"
00003166 <multilist.include.bb2@443> XINCLUDE "dos.include.bb2"
0000316C <multilist.include.bb2@445> XINCLUDE "dos.include.bb2"
00003186 <multilist.include.bb2@447> XINCLUDE "dos.include.bb2"
00003190 <multilist.include.bb2@448> XINCLUDE "dos.include.bb2"
000031A0 <multilist.include.bb2@449> XINCLUDE "dos.include.bb2"
000031A6 <multilist.include.bb2@450> XINCLUDE "dos.include.bb2"
000031B2 <multilist.include.bb2@451> XINCLUDE "dos.include.bb2"
000031B8 <multilist.include.bb2@453> XINCLUDE "dos.include.bb2"
000031D2 <multilist.include.bb2@455> XINCLUDE "dos.include.bb2"
000031DC <multilist.include.bb2@456> XINCLUDE "dos.include.bb2"
000031EC <multilist.include.bb2@457> XINCLUDE "dos.include.bb2"
000031F2 <multilist.include.bb2@458> XINCLUDE "dos.include.bb2"
000031FE <multilist.include.bb2@459> XINCLUDE "dos.include.bb2"
00003204 <multilist.include.bb2@461> XINCLUDE "dos.include.bb2"
0000321E <multilist.include.bb2@479> XINCLUDE "dos.include.bb2"
00003228 <multilist.include.bb2@480> XINCLUDE "dos.include.bb2"
00003238 <multilist.include.bb2@481> XINCLUDE "dos.include.bb2"
0000323E <multilist.include.bb2@482> XINCLUDE "dos.include.bb2"
0000324A <multilist.include.bb2@483> XINCLUDE "dos.include.bb2"
00003250 <multilist.include.bb2@485> XINCLUDE "dos.include.bb2"
0000326A <multilist.include.bb2@501> XINCLUDE "dos.include.bb2"
00003274 <multilist.include.bb2@502> XINCLUDE "dos.include.bb2"
000032A4 <multilist.include.bb2@503> XINCLUDE "dos.include.bb2"
000032AA <multilist.include.bb2@504> XINCLUDE "dos.include.bb2"
000032C8 <multilist.include.bb2@505> XINCLUDE "dos.include.bb2"
000032D2 <multilist.include.bb2@507> XINCLUDE "dos.include.bb2"
00003300 <multilist.include.bb2@521> XINCLUDE "dos.include.bb2"
00003342 <multilist.include.bb2@522> XINCLUDE "dos.include.bb2"
0000335A <multilist.include.bb2@523> XINCLUDE "dos.include.bb2"
00003388 <multilist.include.bb2@537> XINCLUDE "dos.include.bb2"
000033CA <multilist.include.bb2@538> XINCLUDE "dos.include.bb2"
000033E2 <multilist.include.bb2@539> XINCLUDE "dos.include.bb2"
00003400 <multilist.include.bb2@541> XINCLUDE "dos.include.bb2"
00003416 <multilist.include.bb2@542> XINCLUDE "dos.include.bb2"
0000341A <multilist.include.bb2@543> XINCLUDE "dos.include.bb2"
00003434 <multilist.include.bb2@545> XINCLUDE "dos.include.bb2"
0000344E <multilist.include.bb2@546> XINCLUDE "dos.include.bb2"
0000345A <multilist.include.bb2@547> XINCLUDE "dos.include.bb2"
00003460 <multilist.include.bb2@548> XINCLUDE "dos.include.bb2"
0000347A <multilist.include.bb2@565> XINCLUDE "dos.include.bb2"
00003484 <multilist.include.bb2@566> XINCLUDE "dos.include.bb2"
000034B4 <multilist.include.bb2@567> XINCLUDE "dos.include.bb2"
000034BA <multilist.include.bb2@568> XINCLUDE "dos.include.bb2"
000034D8 <multilist.include.bb2@569> XINCLUDE "dos.include.bb2"
000034E2 <multilist.include.bb2@571> XINCLUDE "dos.include.bb2"
000034FC <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
0000352C <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
00003536 <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
00003540 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
00003562 <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
00003586 <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00003598 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
000035B0 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
000035C4 <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
000035D6 <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
000035E6 <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
000035EC <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
000035FC <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
0000360C <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
00003626 <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
0000362C <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
00003632 <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
00003636 <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
00003650 <multilist.include.bb2@618> XINCLUDE "dos.include.bb2"
0000365A <multilist.include.bb2@619> XINCLUDE "dos.include.bb2"
0000366C <multilist.include.bb2@620> XINCLUDE "dos.include.bb2"
0000367C <multilist.include.bb2@621> XINCLUDE "dos.include.bb2"
00003682 <multilist.include.bb2@622> XINCLUDE "dos.include.bb2"
00003686 <multilist.include.bb2@624> XINCLUDE "dos.include.bb2"
000036A0 <multilist.include.bb2@638> XINCLUDE "dos.include.bb2"
000036AA <multilist.include.bb2@639> XINCLUDE "dos.include.bb2"
000036B4 <multilist.include.bb2@640> XINCLUDE "dos.include.bb2"
000036B8 <multilist.include.bb2@642> XINCLUDE "dos.include.bb2"
000036D2 <multilist.include.bb2@656> XINCLUDE "dos.include.bb2"
000036DC <multilist.include.bb2@657> XINCLUDE "dos.include.bb2"
000036E6 <multilist.include.bb2@658> XINCLUDE "dos.include.bb2"
000036EA <multilist.include.bb2@660> XINCLUDE "dos.include.bb2"
00003704 <multilist.include.bb2@673> XINCLUDE "dos.include.bb2"
0000370E <multilist.include.bb2@674> XINCLUDE "dos.include.bb2"
00003718 <multilist.include.bb2@675> XINCLUDE "dos.include.bb2"
0000371C <multilist.include.bb2@677> XINCLUDE "dos.include.bb2"
00003736 <multilist.include.bb2@690> XINCLUDE "dos.include.bb2"
00003740 <multilist.include.bb2@691> XINCLUDE "dos.include.bb2"
0000374A <multilist.include.bb2@692> XINCLUDE "dos.include.bb2"
0000374E <multilist.include.bb2@694> XINCLUDE "dos.include.bb2"
00003768 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
00003770 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
0000377A <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00003790 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
000037A4 <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
000037C8 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
000037D6 <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
000037E0 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
000037E6 <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
000037F0 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
000037F6 <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
00003814 <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
0000381C <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
00003826 <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
00003844 <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
0000385A <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
0000386E <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
000038A2 <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
000038B0 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
000038BA <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
000038C0 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
000038CA <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
000038CE <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
000038D4 <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
000038F2 <multilist.include.bb2@775> XINCLUDE "dos.include.bb2"
000038FC <multilist.include.bb2@776> XINCLUDE "dos.include.bb2"
0000390E <multilist.include.bb2@777> XINCLUDE "dos.include.bb2"
00003914 <multilist.include.bb2@778> XINCLUDE "dos.include.bb2"
00003918 <multilist.include.bb2@779> XINCLUDE "dos.include.bb2"
00003922 <multilist.include.bb2@780> XINCLUDE "dos.include.bb2"
00003936 <multilist.include.bb2@781> XINCLUDE "dos.include.bb2"
00003950 <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
0000395A <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
00003964 <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
0000397A <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
0000398A <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
00003994 <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
0000399A <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
0000399E <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
000039C0 <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
000039C8 <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
000039E2 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
000039EC <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00003A02 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
00003A16 <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
00003A6C <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
00003AA6 <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
00003AB8 <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
00003ADA <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
00003AE0 <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
00003B36 <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
00003B70 <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
00003B76 <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
00003BB0 <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00003BEA <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
00003BFC <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
00003C06 <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
00003C0C <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
00003C16 <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
00003C2A <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
00003C70 <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
00003C78 <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
00003C96 <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
00003CC2 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
00003CE0 <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00003CFA <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
00003D14 <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
00003D96 <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
00003DAA <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
00003DC2 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
00003DC8 <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
00003DE0 <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
00003DF6 <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
00003E10 <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
00003E24 <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00003E32 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
00003E88 <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
00003EBE <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
00003EEE <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
00003F76 <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
00003F7C <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
00003F8A <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
00003FE0 <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00004016 <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00004046 <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
0000404C <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00004066 <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00004074 <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
000040AE <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
000040E4 <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00004114 <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00004122 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
0000412C <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00004132 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
0000413C <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00004150 <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
0000418E <multilist.include.bb2@928> XINCLUDE "dos.include.bb2"
00004198 <multilist.include.bb2@930> XINCLUDE "dos.include.bb2"
000041F8 <multilist.include.bb2@931> XINCLUDE "dos.include.bb2"
00004218 <multilist.include.bb2@932> XINCLUDE "dos.include.bb2"
00004222 <multilist.include.bb2@933> XINCLUDE "dos.include.bb2"
00004236 <multilist.include.bb2@934> XINCLUDE "dos.include.bb2"
00004240 <multilist.include.bb2@935> XINCLUDE "dos.include.bb2"
000042A8 <multilist.include.bb2@937> XINCLUDE "dos.include.bb2"
000042D8 <multilist.include.bb2@938> XINCLUDE "dos.include.bb2"
00004302 <multilist.include.bb2@939> XINCLUDE "dos.include.bb2"
00004324 <multilist.include.bb2@940> XINCLUDE "dos.include.bb2"
00004346 <multilist.include.bb2@941> XINCLUDE "dos.include.bb2"
000043CA <multilist.include.bb2@942> XINCLUDE "dos.include.bb2"
000043E2 <multilist.include.bb2@943> XINCLUDE "dos.include.bb2"
0000440A <multilist.include.bb2@944> XINCLUDE "dos.include.bb2"
000044A0 <multilist.include.bb2@945> XINCLUDE "dos.include.bb2"
000044A6 <multilist.include.bb2@947> XINCLUDE "dos.include.bb2"
0000453C <multilist.include.bb2@948> XINCLUDE "dos.include.bb2"
00004542 <multilist.include.bb2@950> XINCLUDE "dos.include.bb2"
00004556 <multilist.include.bb2@953> XINCLUDE "dos.include.bb2"
00004566 <multilist.include.bb2@955> XINCLUDE "dos.include.bb2"
00004590 <multilist.include.bb2@958> XINCLUDE "dos.include.bb2"
000045D2 <multilist.include.bb2@976> XINCLUDE "dos.include.bb2"
00004632 <multilist.include.bb2@978> XINCLUDE "dos.include.bb2"
00004652 <multilist.include.bb2@979> XINCLUDE "dos.include.bb2"
0000465C <multilist.include.bb2@980> XINCLUDE "dos.include.bb2"
00004670 <multilist.include.bb2@981> XINCLUDE "dos.include.bb2"
0000467A <multilist.include.bb2@982> XINCLUDE "dos.include.bb2"
000046E2 <multilist.include.bb2@983> XINCLUDE "dos.include.bb2"
00004712 <multilist.include.bb2@984> XINCLUDE "dos.include.bb2"
0000473C <multilist.include.bb2@985> XINCLUDE "dos.include.bb2"
0000475E <multilist.include.bb2@986> XINCLUDE "dos.include.bb2"
00004780 <multilist.include.bb2@987> XINCLUDE "dos.include.bb2"
00004804 <multilist.include.bb2@988> XINCLUDE "dos.include.bb2"
0000481C <multilist.include.bb2@989> XINCLUDE "dos.include.bb2"
00004844 <multilist.include.bb2@990> XINCLUDE "dos.include.bb2"
000048DA <multilist.include.bb2@991> XINCLUDE "dos.include.bb2"
000048E0 <multilist.include.bb2@993> XINCLUDE "dos.include.bb2"
000048EA <multilist.include.bb2@994> XINCLUDE "dos.include.bb2"
00004980 <multilist.include.bb2@995> XINCLUDE "dos.include.bb2"
00004986 <multilist.include.bb2@996> XINCLUDE "dos.include.bb2"
000049AE <multilist.include.bb2@997> XINCLUDE "dos.include.bb2"
00004A44 <multilist.include.bb2@998> XINCLUDE "dos.include.bb2"
00004A4A <multilist.include.bb2@1002> XINCLUDE "dos.include.bb2"
00004A5E <multilist.include.bb2@1004> XINCLUDE "dos.include.bb2"
00004A6E <multilist.include.bb2@1006> XINCLUDE "dos.include.bb2"
00004A9E <multilist.include.bb2@1008> XINCLUDE "dos.include.bb2"
00004AA8 <multilist.include.bb2@1009> XINCLUDE "dos.include.bb2"
00004AD4 <multilist.include.bb2@1010> XINCLUDE "dos.include.bb2"
00004B0E <multilist.include.bb2@1027> XINCLUDE "dos.include.bb2"
00004B78 <multilist.include.bb2@1028> XINCLUDE "dos.include.bb2"
00004B82 <multilist.include.bb2@1029> XINCLUDE "dos.include.bb2"
00004B9E <multilist.include.bb2@1030> XINCLUDE "dos.include.bb2"
00004BDC <multilist.include.bb2@1047> XINCLUDE "dos.include.bb2"
00004C40 <multilist.include.bb2@1048> XINCLUDE "dos.include.bb2"
00004C4A <multilist.include.bb2@1049> XINCLUDE "dos.include.bb2"
00004C66 <multilist.include.bb2@1050> XINCLUDE "dos.include.bb2"
00004C94 <multilist.include.bb2@1064> XINCLUDE "dos.include.bb2"
00004C9E <multilist.include.bb2@1065> XINCLUDE "dos.include.bb2"
00004CB4 <multilist.include.bb2@1066> XINCLUDE "dos.include.bb2"
00004CBE <multilist.include.bb2@1067> XINCLUDE "dos.include.bb2"
00004D28 <multilist.include.bb2@1068> XINCLUDE "dos.include.bb2"
00004D32 <multilist.include.bb2@1069> XINCLUDE "dos.include.bb2"
00004D4A <multilist.include.bb2@1072> XINCLUDE "dos.include.bb2"
00004D64 <multilist.include.bb2@1085> XINCLUDE "dos.include.bb2"
00004D6E <multilist.include.bb2@1086> XINCLUDE "dos.include.bb2"
00004D84 <multilist.include.bb2@1087> XINCLUDE "dos.include.bb2"
00004D8E <multilist.include.bb2@1088> XINCLUDE "dos.include.bb2"
00004D98 <multilist.include.bb2@1089> XINCLUDE "dos.include.bb2"
00004D9C <multilist.include.bb2@1092> XINCLUDE "dos.include.bb2"
00004D9C <dos.include.ab3@57> XINCLUDE "dos.include.bb2"
00004DB2 <dos.include.ab3@60> XINCLUDE "dos.include.bb2"
00004DBA <dos.include.ab3@78> XINCLUDE "dos.include.bb2"
00004DC2 <dos.include.ab3@79> XINCLUDE "dos.include.bb2"
00004DEA <dos.include.ab3@80> XINCLUDE "dos.include.bb2"
00004DF2 <dos.include.ab3@81> XINCLUDE "dos.include.bb2"
00004E1A <dos.include.ab3@82> XINCLUDE "dos.include.bb2"
00004E42 <dos.include.ab3@83> XINCLUDE "dos.include.bb2"
00004E6A <dos.include.ab3@84> XINCLUDE "dos.include.bb2"
00004E72 <dos.include.ab3@85> XINCLUDE "dos.include.bb2"
00004E7A <dos.include.ab3@86> XINCLUDE "dos.include.bb2"
00004E82 <dos.include.ab3@87> XINCLUDE "dos.include.bb2"
00004E8A <dos.include.ab3@88> XINCLUDE "dos.include.bb2"
00004E92 <dos.include.ab3@89> XINCLUDE "dos.include.bb2"
00004E9A <dos.include.ab3@90> XINCLUDE "dos.include.bb2"
00004EA2 <dos.include.ab3@91> XINCLUDE "dos.include.bb2"
00004EAA <dos.include.ab3@92> XINCLUDE "dos.include.bb2"
00004EB2 <dos.include.ab3@93> XINCLUDE "dos.include.bb2"
00004ED2 <dos.include.ab3@94> XINCLUDE "dos.include.bb2"
00004EDA <dos.include.ab3@95> XINCLUDE "dos.include.bb2"
00004EE2 <dos.include.ab3@96> XINCLUDE "dos.include.bb2"
00004F0A <dos.include.ab3@98> XINCLUDE "dos.include.bb2"
00004F20 <dos.include.ab3@129> XINCLUDE "dos.include.bb2"
00004F2C <dos.include.ab3@130> XINCLUDE "dos.include.bb2"
00004F30 <dos.include.ab3@131> XINCLUDE "dos.include.bb2"
00004F46 <dos.include.ab3@144> XINCLUDE "dos.include.bb2"
00004F60 <dos.include.ab3@145> XINCLUDE "dos.include.bb2"
00004F76 <dos.include.ab3@146> XINCLUDE "dos.include.bb2"
00004FA0 <dos.include.ab3@147> XINCLUDE "dos.include.bb2"
00004FAA <dos.include.ab3@148> XINCLUDE "dos.include.bb2"
00004FB0 <dos.include.ab3@149> XINCLUDE "dos.include.bb2"
00004FC6 <dos.include.ab3@162> XINCLUDE "dos.include.bb2"
00004FE0 <dos.include.ab3@163> XINCLUDE "dos.include.bb2"
00004FF6 <dos.include.ab3@164> XINCLUDE "dos.include.bb2"
00005020 <dos.include.ab3@165> XINCLUDE "dos.include.bb2"
0000502A <dos.include.ab3@166> XINCLUDE "dos.include.bb2"
00005030 <dos.include.ab3@167> XINCLUDE "dos.include.bb2"
0000505A <dos.include.ab3@183> XINCLUDE "dos.include.bb2"
00005066 <dos.include.ab3@184> XINCLUDE "dos.include.bb2"
00005086 <dos.include.ab3@185> XINCLUDE "dos.include.bb2"
00005090 <dos.include.ab3@186> XINCLUDE "dos.include.bb2"
000050A0 <dos.include.ab3@187> XINCLUDE "dos.include.bb2"
000050B0 <dos.include.ab3@188> XINCLUDE "dos.include.bb2"
000050BA <dos.include.ab3@190> XINCLUDE "dos.include.bb2"
000050D4 <dos.include.ab3@191> XINCLUDE "dos.include.bb2"
000050EA <dos.include.ab3@429> XINCLUDE "dos.include.bb2"
000050FC <dos.include.ab3@431> XINCLUDE "dos.include.bb2"
00005176 <dos.include.ab3@432> XINCLUDE "dos.include.bb2"
000051A0 <dos.include.ab3@433> XINCLUDE "dos.include.bb2"
000051B8 <dos.include.ab3@434> XINCLUDE "dos.include.bb2"
000051D2 <dos.include.ab3@444> XINCLUDE "dos.include.bb2"
000051EC <dos.include.ab3@446> XINCLUDE "dos.include.bb2"
000051F6 <dos.include.ab3@447> XINCLUDE "dos.include.bb2"
00005270 <dos.include.ab3@448> XINCLUDE "dos.include.bb2"
0000529A <dos.include.ab3@449> XINCLUDE "dos.include.bb2"
000052B2 <dos.include.ab3@450> XINCLUDE "dos.include.bb2"
000052C8 <dos.include.ab3@460> XINCLUDE "dos.include.bb2"
000052DA <dos.include.ab3@461> XINCLUDE "dos.include.bb2"
000052DE <dos.include.ab3@462> XINCLUDE "dos.include.bb2"
000052F4 <dos.include.ab3@472> XINCLUDE "dos.include.bb2"
00005300 <dos.include.ab3@475> XINCLUDE "dos.include.bb2"
00005302 <dos.include.ab3@476> XINCLUDE "dos.include.bb2"
00005318 <dos.include.ab3@478> XINCLUDE "dos.include.bb2"
0000531A <dos.include.ab3@479> XINCLUDE "dos.include.bb2"
00005354 <dos.include.ab3@509> XINCLUDE "dos.include.bb2"
00005440 <dos.include.ab3@510> XINCLUDE "dos.include.bb2"
00005486 <dos.include.ab3@511> XINCLUDE "dos.include.bb2"
000054D8 <dos.include.ab3@513> XINCLUDE "dos.include.bb2"
00005502 <dos.include.ab3@514> XINCLUDE "dos.include.bb2"
00005522 <dos.include.ab3@515> XINCLUDE "dos.include.bb2"
0000555C <dos.include.ab3@540> XINCLUDE "dos.include.bb2"
00005590 <dos.include.ab3@542> XINCLUDE "dos.include.bb2"
000055B6 <dos.include.ab3@543> XINCLUDE "dos.include.bb2"
000055D6 <dos.include.ab3@544> XINCLUDE "dos.include.bb2"
000055F6 <dos.include.ab3@545> XINCLUDE "dos.include.bb2"
00005620 <dos.include.ab3@568> XINCLUDE "dos.include.bb2"
00005648 <dos.include.ab3@569> XINCLUDE "dos.include.bb2"
0000569A <dos.include.ab3@571> XINCLUDE "dos.include.bb2"
000056EC <dos.include.ab3@572> XINCLUDE "dos.include.bb2"
00005776 <dos.include.ab3@573> XINCLUDE "dos.include.bb2"
0000581C <dos.include.ab3@574> XINCLUDE "dos.include.bb2"
00005846 <dos.include.ab3@575> XINCLUDE "dos.include.bb2"
00005864 <dos.include.ab3@576> XINCLUDE "dos.include.bb2"
0000588E <dos.include.ab3@600> XINCLUDE "dos.include.bb2"
000058E0 <dos.include.ab3@602> XINCLUDE "dos.include.bb2"
0000596A <dos.include.ab3@603> XINCLUDE "dos.include.bb2"
00005A10 <dos.include.ab3@604> XINCLUDE "dos.include.bb2"
00005A8E <dos.include.ab3@605> XINCLUDE "dos.include.bb2"
00005AB8 <dos.include.ab3@606> XINCLUDE "dos.include.bb2"
00005AD6 <dos.include.ab3@607> XINCLUDE "dos.include.bb2"
00005B00 <dos.include.ab3@630> XINCLUDE "dos.include.bb2"
00005BE6 <dos.include.ab3@631> XINCLUDE "dos.include.bb2"
00005CFA <dos.include.ab3@632> XINCLUDE "dos.include.bb2"
00005D84 <dos.include.ab3@633> XINCLUDE "dos.include.bb2"
00005D8A <dos.include.ab3@634> XINCLUDE "dos.include.bb2"
00005E70 <dos.include.ab3@635> XINCLUDE "dos.include.bb2"
00005E9A <dos.include.ab3@636> XINCLUDE "dos.include.bb2"
00005EB8 <dos.include.ab3@637> XINCLUDE "dos.include.bb2"
00005EE2 <dos.include.ab3@660> XINCLUDE "dos.include.bb2"
00005EF8 <dos.include.ab3@661> XINCLUDE "dos.include.bb2"
00005F02 <dos.include.ab3@662> XINCLUDE "dos.include.bb2"
00005F2A <dos.include.ab3@663> XINCLUDE "dos.include.bb2"
00005F30 <dos.include.ab3@664> XINCLUDE "dos.include.bb2"
00005F58 <dos.include.ab3@665> XINCLUDE "dos.include.bb2"
00005F82 <dos.include.ab3@667> XINCLUDE "dos.include.bb2"
00005FA0 <dos.include.ab3@668> XINCLUDE "dos.include.bb2"
00005FCA <dos.include.ab3@691> XINCLUDE "dos.include.bb2"
0000603A <dos.include.ab3@692> XINCLUDE "dos.include.bb2"
00006064 <dos.include.ab3@693> XINCLUDE "dos.include.bb2"
00006082 <dos.include.ab3@694> XINCLUDE "dos.include.bb2"
000060AC <dos.include.ab3@710> XINCLUDE "dos.include.bb2"
000060FA <dos.include.ab3@711> XINCLUDE "dos.include.bb2"
00006118 <dos.include.ab3@712> XINCLUDE "dos.include.bb2"
00006142 <dos.include.ab3@729> XINCLUDE "dos.include.bb2"
00006162 <dos.include.ab3@730> XINCLUDE "dos.include.bb2"
0000618E <dos.include.ab3@731> XINCLUDE "dos.include.bb2"
00006198 <dos.include.ab3@732> XINCLUDE "dos.include.bb2"
000061B2 <dos.include.ab3@733> XINCLUDE "dos.include.bb2"
000061CC <dos.include.ab3@751> XINCLUDE "dos.include.bb2"
000061E0 <dos.include.ab3@752> XINCLUDE "dos.include.bb2"
000061E8 <dos.include.ab3@753> XINCLUDE "dos.include.bb2"
000061F2 <dos.include.ab3@754> XINCLUDE "dos.include.bb2"
0000620E <dos.include.ab3@756> XINCLUDE "dos.include.bb2"
00006218 <dos.include.ab3@757> XINCLUDE "dos.include.bb2"
0000625E <dos.include.ab3@758> XINCLUDE "dos.include.bb2"
00006288 <dos.include.ab3@759> XINCLUDE "dos.include.bb2"
000062B2 <dos.include.ab3@760> XINCLUDE "dos.include.bb2"
0000634E <dos.include.ab3@761> XINCLUDE "dos.include.bb2"
00006394 <dos.include.ab3@762> XINCLUDE "dos.include.bb2"
000063FC <dos.include.ab3@763> XINCLUDE "dos.include.bb2"
00006414 <dos.include.ab3@765> XINCLUDE "dos.include.bb2"
00006424 <dos.include.ab3@766> XINCLUDE "dos.include.bb2"
00006432 <dos.include.ab3@768> XINCLUDE "dos.include.bb2"
0000643C <dos.include.ab3@769> XINCLUDE "dos.include.bb2"
00006450 <dos.include.ab3@770> XINCLUDE "dos.include.bb2"
00006466 <dos.include.ab3@786> XINCLUDE "dos.include.bb2"
00006478 <dos.include.ab3@788> XINCLUDE "dos.include.bb2"
00006482 <dos.include.ab3@789> XINCLUDE "dos.include.bb2"
00006490 <dos.include.ab3@790> XINCLUDE "dos.include.bb2"
00006496 <dos.include.ab3@791> XINCLUDE "dos.include.bb2"
000064A0 <dos.include.ab3@793> XINCLUDE "dos.include.bb2"
000064D4 <dos.include.ab3@794> XINCLUDE "dos.include.bb2"
000064E2 <dos.include.ab3@795> XINCLUDE "dos.include.bb2"
000064E8 <dos.include.ab3@796> XINCLUDE "dos.include.bb2"
00006510 <dos.include.ab3@797> XINCLUDE "dos.include.bb2"
0000651A <dos.include.ab3@798> XINCLUDE "dos.include.bb2"
00006522 <dos.include.ab3@799> XINCLUDE "dos.include.bb2"
0000654C <dos.include.ab3@801> XINCLUDE "dos.include.bb2"
00006564 <dos.include.ab3@802> XINCLUDE "dos.include.bb2"
0000657A <dos.include.ab3@818> XINCLUDE "dos.include.bb2"
0000658C <dos.include.ab3@820> XINCLUDE "dos.include.bb2"
00006596 <dos.include.ab3@821> XINCLUDE "dos.include.bb2"
000065A4 <dos.include.ab3@822> XINCLUDE "dos.include.bb2"
000065AA <dos.include.ab3@823> XINCLUDE "dos.include.bb2"
000065B4 <dos.include.ab3@825> XINCLUDE "dos.include.bb2"
000065E8 <dos.include.ab3@826> XINCLUDE "dos.include.bb2"
000065F6 <dos.include.ab3@827> XINCLUDE "dos.include.bb2"
000065FC <dos.include.ab3@828> XINCLUDE "dos.include.bb2"
00006624 <dos.include.ab3@829> XINCLUDE "dos.include.bb2"
00006636 <dos.include.ab3@830> XINCLUDE "dos.include.bb2"
00006660 <dos.include.ab3@832> XINCLUDE "dos.include.bb2"
00006678 <dos.include.ab3@833> XINCLUDE "dos.include.bb2"
0000668E <dos.include.ab3@849> XINCLUDE "dos.include.bb2"
000066A0 <dos.include.ab3@851> XINCLUDE "dos.include.bb2"
000066AA <dos.include.ab3@852> XINCLUDE "dos.include.bb2"
000066B8 <dos.include.ab3@853> XINCLUDE "dos.include.bb2"
000066BE <dos.include.ab3@854> XINCLUDE "dos.include.bb2"
000066C8 <dos.include.ab3@856> XINCLUDE "dos.include.bb2"
000066FC <dos.include.ab3@857> XINCLUDE "dos.include.bb2"
0000670A <dos.include.ab3@858> XINCLUDE "dos.include.bb2"
00006710 <dos.include.ab3@859> XINCLUDE "dos.include.bb2"
00006738 <dos.include.ab3@860> XINCLUDE "dos.include.bb2"
0000674A <dos.include.ab3@861> XINCLUDE "dos.include.bb2"
00006774 <dos.include.ab3@863> XINCLUDE "dos.include.bb2"
0000678C <dos.include.ab3@864> XINCLUDE "dos.include.bb2"
000067B6 <dos.include.ab3@880> XINCLUDE "dos.include.bb2"
00006864 <dos.include.ab3@881> XINCLUDE "dos.include.bb2"
0000687A <dos.include.ab3@882> XINCLUDE "dos.include.bb2"
00006884 <dos.include.ab3@883> XINCLUDE "dos.include.bb2"
000068AC <dos.include.ab3@884> XINCLUDE "dos.include.bb2"
000068B6 <dos.include.ab3@885> XINCLUDE "dos.include.bb2"
000068BC <dos.include.ab3@886> XINCLUDE "dos.include.bb2"
000068C2 <dos.include.ab3@887> XINCLUDE "dos.include.bb2"
000068C8 <dos.include.ab3@888> XINCLUDE "dos.include.bb2"
000068DA <dos.include.ab3@890> XINCLUDE "dos.include.bb2"
000068E4 <dos.include.ab3@892> XINCLUDE "dos.include.bb2"
000068FE <dos.include.ab3@893> XINCLUDE "dos.include.bb2"
0000693C <dos.include.ab3@914> XINCLUDE "dos.include.bb2"
00006944 <dos.include.ab3@915> XINCLUDE "dos.include.bb2"
000069F2 <dos.include.ab3@916> XINCLUDE "dos.include.bb2"
00006A06 <dos.include.ab3@917> XINCLUDE "dos.include.bb2"
00006A48 <dos.include.ab3@918> XINCLUDE "dos.include.bb2"
00006A68 <dos.include.ab3@920> XINCLUDE "dos.include.bb2"
00006A72 <dos.include.ab3@921> XINCLUDE "dos.include.bb2"
00006A8E <dos.include.ab3@922> XINCLUDE "dos.include.bb2"
00006ACC <dos.include.ab3@942> XINCLUDE "dos.include.bb2"
00006AD4 <dos.include.ab3@943> XINCLUDE "dos.include.bb2"
00006B82 <dos.include.ab3@944> XINCLUDE "dos.include.bb2"
00006B96 <dos.include.ab3@945> XINCLUDE "dos.include.bb2"
00006BD8 <dos.include.ab3@946> XINCLUDE "dos.include.bb2"
00006BF8 <dos.include.ab3@949> XINCLUDE "dos.include.bb2"
00006C02 <dos.include.ab3@950> XINCLUDE "dos.include.bb2"
00006C20 <dos.include.ab3@951> XINCLUDE "dos.include.bb2"
00006C44 <dos.include.ab3@952> XINCLUDE "dos.include.bb2"
00006C4E <dos.include.ab3@954> XINCLUDE "dos.include.bb2"
00006C6A <dos.include.ab3@955> XINCLUDE "dos.include.bb2"
00006CA4 <dos.include.ab3@974> XINCLUDE "dos.include.bb2"
00006CAC <dos.include.ab3@975> XINCLUDE "dos.include.bb2"
00006D5A <dos.include.ab3@976> XINCLUDE "dos.include.bb2"
00006D90 <dos.include.ab3@977> XINCLUDE "dos.include.bb2"
00006DB0 <dos.include.ab3@978> XINCLUDE "dos.include.bb2"
00006DCE <dos.include.ab3@979> XINCLUDE "dos.include.bb2"
00006DF2 <dos.include.ab3@980> XINCLUDE "dos.include.bb2"
00006DFC <dos.include.ab3@982> XINCLUDE "dos.include.bb2"
00006E18 <dos.include.ab3@983> XINCLUDE "dos.include.bb2"
00006E52 <dos.include.ab3@1000> XINCLUDE "dos.include.bb2"
00006F00 <dos.include.ab3@1001> XINCLUDE "dos.include.bb2"
00006F38 <dos.include.ab3@1002> XINCLUDE "dos.include.bb2"
00006F58 <dos.include.ab3@1003> XINCLUDE "dos.include.bb2"
00006F5E <dos.include.ab3@1004> XINCLUDE "dos.include.bb2"
00006F7E <dos.include.ab3@1005> XINCLUDE "dos.include.bb2"
00006F88 <dos.include.ab3@1006> XINCLUDE "dos.include.bb2"
00006FA2 <dos.include.ab3@1007> XINCLUDE "dos.include.bb2"
00006FBA <dos.include.ab3@1008> XINCLUDE "dos.include.bb2"
00006FC4 <dos.include.ab3@1011> XINCLUDE "dos.include.bb2"
00006FE0 <dos.include.ab3@1012> XINCLUDE "dos.include.bb2"
00006FF6 <dos.include.ab3@1023> XINCLUDE "dos.include.bb2"
00006FF8 <dos.include.ab3@1034> XINCLUDE "dos.include.bb2"
0000700E <dos.include.ab3@1047> XINCLUDE "dos.include.bb2"
00007016 <dos.include.ab3@1048> XINCLUDE "dos.include.bb2"
00007024 <dos.include.ab3@1049> XINCLUDE "dos.include.bb2"
0000702E <dos.include.ab3@1058> XINCLUDE "dos.include.bb2"
00007034 <dos.include.ab3@1059> XINCLUDE "dos.include.bb2"
0000704E <dos.include.ab3@1075> XINCLUDE "dos.include.bb2"
00007076 <dos.include.ab3@1076> XINCLUDE "dos.include.bb2"
00007084 <dos.include.ab3@1077> XINCLUDE "dos.include.bb2"
000070AE <dos.include.ab3@1089> XINCLUDE "dos.include.bb2"
000070C6 <dos.include.ab3@1090> XINCLUDE "dos.include.bb2"
000070E0 <dos.include.ab3@1106> XINCLUDE "dos.include.bb2"
000070E8 <dos.include.ab3@1107> XINCLUDE "dos.include.bb2"
000070F6 <dos.include.ab3@1108> XINCLUDE "dos.include.bb2"
00007100 <dos.include.ab3@1120> XINCLUDE "dos.include.bb2"
00007106 <dos.include.ab3@1121> XINCLUDE "dos.include.bb2"
00007130 <dos.include.ab3@1147> XINCLUDE "dos.include.bb2"
0000713E <dos.include.ab3@1149> XINCLUDE "dos.include.bb2"
00007204 <dos.include.ab3@1150> XINCLUDE "dos.include.bb2"
0000722E <dos.include.ab3@1151> XINCLUDE "dos.include.bb2"
00007256 <dos.include.ab3@1153> XINCLUDE "dos.include.bb2"
00007280 <dos.include.ab3@1154> XINCLUDE "dos.include.bb2"
000072AA <dos.include.ab3@1156> XINCLUDE "dos.include.bb2"
000072C8 <dos.include.ab3@1157> XINCLUDE "dos.include.bb2"
000072F2 <dos.include.ab3@1175> XINCLUDE "dos.include.bb2"
0000735E <dos.include.ab3@1177> XINCLUDE "dos.include.bb2"
00007386 <dos.include.ab3@1178> XINCLUDE "dos.include.bb2"
00007394 <dos.include.ab3@1179> XINCLUDE "dos.include.bb2"
000073C8 <dos.include.ab3@1180> XINCLUDE "dos.include.bb2"
000073D6 <dos.include.ab3@1183> XINCLUDE "dos.include.bb2"
000073F8 <dos.include.ab3@1189> XINCLUDE "dos.include.bb2"
00007406 <dos.include.ab3@1193> XINCLUDE "dos.include.bb2"
0000742A <dos.include.ab3@1194> XINCLUDE "dos.include.bb2"
00007454 <dos.include.ab3@1195> XINCLUDE "dos.include.bb2"
0000747E <dos.include.ab3@1198> XINCLUDE "dos.include.bb2"
0000749C <dos.include.ab3@1199> XINCLUDE "dos.include.bb2"
000074C6 <dos.include.ab3@1222> XINCLUDE "dos.include.bb2"
000074EE <dos.include.ab3@1224> XINCLUDE "dos.include.bb2"
000074FC <dos.include.ab3@1225> XINCLUDE "dos.include.bb2"
00007530 <dos.include.ab3@1226> XINCLUDE "dos.include.bb2"
0000753E <dos.include.ab3@1229> XINCLUDE "dos.include.bb2"
0000754C <dos.include.ab3@1240> XINCLUDE "dos.include.bb2"
00007596 <dos.include.ab3@1241> XINCLUDE "dos.include.bb2"
000075C0 <dos.include.ab3@1243> XINCLUDE "dos.include.bb2"
000075DE <dos.include.ab3@1244> XINCLUDE "dos.include.bb2"
00007608 <dos.include.ab3@1260> XINCLUDE "dos.include.bb2"
00007660 <dos.include.ab3@1261> XINCLUDE "dos.include.bb2"
0000768A <dos.include.ab3@1262> XINCLUDE "dos.include.bb2"
000076A8 <dos.include.ab3@1263> XINCLUDE "dos.include.bb2"
000076D2 <dos.include.ab3@1280> XINCLUDE "dos.include.bb2"
0000771E <dos.include.ab3@1281> XINCLUDE "dos.include.bb2"
000077AE <dos.include.ab3@1282> XINCLUDE "dos.include.bb2"
000077D8 <dos.include.ab3@1283> XINCLUDE "dos.include.bb2"
000077F6 <dos.include.ab3@1284> XINCLUDE "dos.include.bb2"
00007820 <dos.include.ab3@1306> XINCLUDE "dos.include.bb2"
00007848 <dos.include.ab3@1308> XINCLUDE "dos.include.bb2"
000078D8 <dos.include.ab3@1309> XINCLUDE "dos.include.bb2"
000078E6 <dos.include.ab3@1311> XINCLUDE "dos.include.bb2"
0000791A <dos.include.ab3@1312> XINCLUDE "dos.include.bb2"
00007928 <dos.include.ab3@1315> XINCLUDE "dos.include.bb2"
00007974 <dos.include.ab3@1316> XINCLUDE "dos.include.bb2"
000079F8 <dos.include.ab3@1317> XINCLUDE "dos.include.bb2"
00007A50 <dos.include.ab3@1318> XINCLUDE "dos.include.bb2"
00007A5E <dos.include.ab3@1321> XINCLUDE "dos.include.bb2"
00007A82 <dos.include.ab3@1322> XINCLUDE "dos.include.bb2"
00007AAC <dos.include.ab3@1323> XINCLUDE "dos.include.bb2"
00007AD6 <dos.include.ab3@1326> XINCLUDE "dos.include.bb2"
00007AF4 <dos.include.ab3@1327> XINCLUDE "dos.include.bb2"
00007B0A <dos.include.ab3@1337> XINCLUDE "dos.include.bb2"
00007B10 <dos.include.ab3@1339> XINCLUDE "dos.include.bb2"
00007B1A <dos.include.ab3@1340> XINCLUDE "dos.include.bb2"
00007B24 <dos.include.ab3@1341> XINCLUDE "dos.include.bb2"
00007B42 <dos.include.ab3@1344> XINCLUDE "dos.include.bb2"
00007B48 <dos.include.ab3@1345> XINCLUDE "dos.include.bb2"
00007B4E <dos.include.ab3@1346> XINCLUDE "dos.include.bb2"
00007B5E <dos.include.ab3@1348> XINCLUDE "dos.include.bb2"
00007B64 <dos.include.ab3@1349> XINCLUDE "dos.include.bb2"
00007B6C <dos.include.ab3@1350> XINCLUDE "dos.include.bb2"
00007B94 <dos.include.ab3@1351> XINCLUDE "dos.include.bb2"
00007B9E <dos.include.ab3@1352> XINCLUDE "dos.include.bb2"
00007BA8 <dos.include.ab3@1354> XINCLUDE "dos.include.bb2"
00007BBC <dos.include.ab3@1355> XINCLUDE "dos.include.bb2"
00007BD2 <dos.include.ab3@1365> XINCLUDE "dos.include.bb2"
00007BD8 <dos.include.ab3@1366> XINCLUDE "dos.include.bb2"
00007BDA <dos.include.ab3@1367> XINCLUDE "dos.include.bb2"
00007C14 <dos.include.ab3@1385> XINCLUDE "dos.include.bb2"
00007C1A <dos.include.ab3@1387> XINCLUDE "dos.include.bb2"
00007C52 <dos.include.ab3@1389> XINCLUDE "dos.include.bb2"
00007D32 <dos.include.ab3@1390> XINCLUDE "dos.include.bb2"
00007D44 <dos.include.ab3@1392> XINCLUDE "dos.include.bb2"
00007D5A <dos.include.ab3@1393> XINCLUDE "dos.include.bb2"
00007D60 <dos.include.ab3@1394> XINCLUDE "dos.include.bb2"
00007D76 <dos.include.ab3@1395> XINCLUDE "dos.include.bb2"
00007D80 <dos.include.ab3@1398> XINCLUDE "dos.include.bb2"
00007D8E <dos.include.ab3@1399> XINCLUDE "dos.include.bb2"
00007D9C <dos.include.ab3@1402> XINCLUDE "dos.include.bb2"
00007DD0 <dos.include.ab3@1403> XINCLUDE "dos.include.bb2"
00007DDC <dos.include.ab3@1404> XINCLUDE "dos.include.bb2"
00007DEC <dos.include.ab3@1406> XINCLUDE "dos.include.bb2"
00007DF6 <dos.include.ab3@1408> XINCLUDE "dos.include.bb2"
00007E12 <dos.include.ab3@1410> XINCLUDE "dos.include.bb2"
00007E40 <dos.include.ab3@1429> XINCLUDE "dos.include.bb2"
00007E46 <dos.include.ab3@1431> XINCLUDE "dos.include.bb2"
00007E7E <dos.include.ab3@1433> XINCLUDE "dos.include.bb2"
00007F5E <dos.include.ab3@1434> XINCLUDE "dos.include.bb2"
00007F70 <dos.include.ab3@1436> XINCLUDE "dos.include.bb2"
00007F86 <dos.include.ab3@1437> XINCLUDE "dos.include.bb2"
00007F8C <dos.include.ab3@1438> XINCLUDE "dos.include.bb2"
00007FA2 <dos.include.ab3@1439> XINCLUDE "dos.include.bb2"
00007FAC <dos.include.ab3@1442> XINCLUDE "dos.include.bb2"
00007FBA <dos.include.ab3@1443> XINCLUDE "dos.include.bb2"
00007FEE <dos.include.ab3@1444> XINCLUDE "dos.include.bb2"
00007FFE <dos.include.ab3@1445> XINCLUDE "dos.include.bb2"
00008008 <dos.include.ab3@1447> XINCLUDE "dos.include.bb2"
00008022 <dos.include.ab3@1449> XINCLUDE "dos.include.bb2"
00008038 <dos.include.ab3@1460> XINCLUDE "dos.include.bb2"
0000803E <dos.include.ab3@1466> XINCLUDE "dos.include.bb2"
00008062 <dos.include.ab3@1467> XINCLUDE "dos.include.bb2"
00008086 <dos.include.ab3@1468> XINCLUDE "dos.include.bb2"
000080AA <dos.include.ab3@1469> XINCLUDE "dos.include.bb2"
000080B0 <dos.include.ab3@1470> XINCLUDE "dos.include.bb2"
000080DC <dos.include.ab3@1471> XINCLUDE "dos.include.bb2"
000080DE <dos.include.ab3@1472> XINCLUDE "dos.include.bb2"
0000810C <dos.include.ab3@1473> XINCLUDE "dos.include.bb2"
00008136 <dos.include.ab3@1489> XINCLUDE "dos.include.bb2"
000081BA <dos.include.ab3@1492> XINCLUDE "dos.include.bb2"
00008282 <dos.include.ab3@1493> XINCLUDE "dos.include.bb2"
0000828C <dos.include.ab3@1495> XINCLUDE "dos.include.bb2"
000082D6 <dos.include.ab3@1496> XINCLUDE "dos.include.bb2"
00008322 <dos.include.ab3@1498> XINCLUDE "dos.include.bb2"
0000835A <dos.include.ab3@1499> XINCLUDE "dos.include.bb2"
0000836C <dos.include.ab3@1500> XINCLUDE "dos.include.bb2"
00008382 <dos.include.ab3@1501> XINCLUDE "dos.include.bb2"
00008388 <dos.include.ab3@1502> XINCLUDE "dos.include.bb2"
0000839E <dos.include.ab3@1503> XINCLUDE "dos.include.bb2"
000083D2 <dos.include.ab3@1505> XINCLUDE "dos.include.bb2"
000083D8 <dos.include.ab3@1506> XINCLUDE "dos.include.bb2"
000083E2 <dos.include.ab3@1508> XINCLUDE "dos.include.bb2"
000083FC <dos.include.ab3@1509> XINCLUDE "dos.include.bb2"
00008446 <dos.include.ab3@1539> XINCLUDE "dos.include.bb2"
0000847C <dos.include.ab3@1541> XINCLUDE "dos.include.bb2"
000084A0 <dos.include.ab3@1542> XINCLUDE "dos.include.bb2"
000084AA <dos.include.ab3@1543> XINCLUDE "dos.include.bb2"
000084D2 <dos.include.ab3@1544> XINCLUDE "dos.include.bb2"
0000851A <dos.include.ab3@1547> XINCLUDE "dos.include.bb2"
000085F0 <dos.include.ab3@1549> XINCLUDE "dos.include.bb2"
0000861A <dos.include.ab3@1550> XINCLUDE "dos.include.bb2"
0000863A <dos.include.ab3@1551> XINCLUDE "dos.include.bb2"
00008674 <dos.include.ab3@1570> XINCLUDE "dos.include.bb2"
0000867A <dos.include.ab3@1572> XINCLUDE "dos.include.bb2"
00008680 <dos.include.ab3@1573> XINCLUDE "dos.include.bb2"
00008688 <dos.include.ab3@1574> XINCLUDE "dos.include.bb2"
000086BE <dos.include.ab3@1575> XINCLUDE "dos.include.bb2"
000086CC <dos.include.ab3@1576> XINCLUDE "dos.include.bb2"
000086D6 <dos.include.ab3@1577> XINCLUDE "dos.include.bb2"
00008702 <dos.include.ab3@1578> XINCLUDE "dos.include.bb2"
00008710 <dos.include.ab3@1579> XINCLUDE "dos.include.bb2"
0000871A <dos.include.ab3@1580> XINCLUDE "dos.include.bb2"
00008748 <dos.include.ab3@1582> XINCLUDE "dos.include.bb2"
000087C6 <dos.include.ab3@1585> XINCLUDE "dos.include.bb2"
00008818 <dos.include.ab3@1588> XINCLUDE "dos.include.bb2"
0000882A <dos.include.ab3@1589> XINCLUDE "dos.include.bb2"
00008898 <dos.include.ab3@1590> XINCLUDE "dos.include.bb2"
0000889E <dos.include.ab3@1591> XINCLUDE "dos.include.bb2"
000088EA <dos.include.ab3@1592> XINCLUDE "dos.include.bb2"
000089B8 <dos.include.ab3@1596> XINCLUDE "dos.include.bb2"
00008A98 <dos.include.ab3@1597> XINCLUDE "dos.include.bb2"
00008B04 <dos.include.ab3@1599> XINCLUDE "dos.include.bb2"
00008B0A <dos.include.ab3@1600> XINCLUDE "dos.include.bb2"
00008B26 <dos.include.ab3@1601> XINCLUDE "dos.include.bb2"
00008B34 <dos.include.ab3@1604> XINCLUDE "dos.include.bb2"
00008B3A <dos.include.ab3@1605> XINCLUDE "dos.include.bb2"
00008B4C <dos.include.ab3@1608> XINCLUDE "dos.include.bb2"
00008B62 <dos.include.ab3@1609> XINCLUDE "dos.include.bb2"
00008B6C <dos.include.ab3@1610> XINCLUDE "dos.include.bb2"
00008B88 <dos.include.ab3@1611> XINCLUDE "dos.include.bb2"
00008BB2 <dos.include.ab3@1627> XINCLUDE "dos.include.bb2"
00008C64 <dos.include.ab3@1628> XINCLUDE "dos.include.bb2"
00008D5A <dos.include.ab3@1629> XINCLUDE "dos.include.bb2"
00008D94 <dos.include.ab3@1630> XINCLUDE "dos.include.bb2"
00008DAE <dos.include.ab3@1631> XINCLUDE "dos.include.bb2"
00008DD8 <dos.include.ab3@1632> XINCLUDE "dos.include.bb2"
00008E08 <dos.include.ab3@1633> XINCLUDE "dos.include.bb2"
00008E38 <dos.include.ab3@1634> XINCLUDE "dos.include.bb2"
00008E68 <dos.include.ab3@1635> XINCLUDE "dos.include.bb2"
00008E98 <dos.include.ab3@1636> XINCLUDE "dos.include.bb2"
00008EC8 <dos.include.ab3@1637> XINCLUDE "dos.include.bb2"
00008EF8 <dos.include.ab3@1638> XINCLUDE "dos.include.bb2"
00008F28 <dos.include.ab3@1639> XINCLUDE "dos.include.bb2"
00008F2A <dos.include.ab3@1640> XINCLUDE "dos.include.bb2"
00008F3A <dos.include.ab3@1641> XINCLUDE "dos.include.bb2"
00008F64 <dos.include.ab3@1642> XINCLUDE "dos.include.bb2"
00008F82 <dos.include.ab3@1643> XINCLUDE "dos.include.bb2"
00008FC0 <dos.include.ab3@1662> XINCLUDE "dos.include.bb2"
00008FE6 <dos.include.ab3@1664> XINCLUDE "dos.include.bb2"
00008FEC <dos.include.ab3@1665> XINCLUDE "dos.include.bb2"
00009022 <dos.include.ab3@1666> XINCLUDE "dos.include.bb2"
00009030 <dos.include.ab3@1667> XINCLUDE "dos.include.bb2"
0000903A <dos.include.ab3@1668> XINCLUDE "dos.include.bb2"
00009066 <dos.include.ab3@1669> XINCLUDE "dos.include.bb2"
00009074 <dos.include.ab3@1670> XINCLUDE "dos.include.bb2"
0000907E <dos.include.ab3@1671> XINCLUDE "dos.include.bb2"
000090AC <dos.include.ab3@1673> XINCLUDE "dos.include.bb2"
00009104 <dos.include.ab3@1676> XINCLUDE "dos.include.bb2"
000091D2 <dos.include.ab3@1679> XINCLUDE "dos.include.bb2"
000092B2 <dos.include.ab3@1680> XINCLUDE "dos.include.bb2"
00009304 <dos.include.ab3@1683> XINCLUDE "dos.include.bb2"
00009316 <dos.include.ab3@1684> XINCLUDE "dos.include.bb2"
000093A8 <dos.include.ab3@1685> XINCLUDE "dos.include.bb2"
000093AE <dos.include.ab3@1686> XINCLUDE "dos.include.bb2"
0000941E <dos.include.ab3@1687> XINCLUDE "dos.include.bb2"
0000948A <dos.include.ab3@1689> XINCLUDE "dos.include.bb2"
00009490 <dos.include.ab3@1690> XINCLUDE "dos.include.bb2"
0000949A <dos.include.ab3@1692> XINCLUDE "dos.include.bb2"
000094AE <dos.include.ab3@1693> XINCLUDE "dos.include.bb2"
0000950C <dos.include.ab3@1694> XINCLUDE "dos.include.bb2"
00009522 <dos.include.ab3@1695> XINCLUDE "dos.include.bb2"
00009528 <dos.include.ab3@1696> XINCLUDE "dos.include.bb2"
0000952E <dos.include.ab3@1698> XINCLUDE "dos.include.bb2"
00009542 <dos.include.ab3@1699> XINCLUDE "dos.include.bb2"
0000957C <dos.include.ab3@1700> XINCLUDE "dos.include.bb2"
00009592 <dos.include.ab3@1701> XINCLUDE "dos.include.bb2"
00009598 <dos.include.ab3@1702> XINCLUDE "dos.include.bb2"
000095A6 <dos.include.ab3@1708> XINCLUDE "dos.include.bb2"
000095AC <dos.include.ab3@1709> XINCLUDE "dos.include.bb2"
000095B6 <dos.include.ab3@1712> XINCLUDE "dos.include.bb2"
000095D2 <dos.include.ab3@1713> XINCLUDE "dos.include.bb2"
00009610 <dos.include.ab3@1739> XINCLUDE "dos.include.bb2"
000096C2 <dos.include.ab3@1740> XINCLUDE "dos.include.bb2"
00009758 <dos.include.ab3@1741> XINCLUDE "dos.include.bb2"
0000978C <dos.include.ab3@1742> XINCLUDE "dos.include.bb2"
000097D0 <dos.include.ab3@1743> XINCLUDE "dos.include.bb2"
00009814 <dos.include.ab3@1744> XINCLUDE "dos.include.bb2"
00009858 <dos.include.ab3@1745> XINCLUDE "dos.include.bb2"
00009862 <dos.include.ab3@1746> XINCLUDE "dos.include.bb2"
0000987E <dos.include.ab3@1747> XINCLUDE "dos.include.bb2"
000098BC <dos.include.ab3@1765> XINCLUDE "dos.include.bb2"
0000996E <dos.include.ab3@1766> XINCLUDE "dos.include.bb2"
00009A04 <dos.include.ab3@1767> XINCLUDE "dos.include.bb2"
00009ACC <dos.include.ab3@1768> XINCLUDE "dos.include.bb2"
00009B94 <dos.include.ab3@1769> XINCLUDE "dos.include.bb2"
00009C5C <dos.include.ab3@1770> XINCLUDE "dos.include.bb2"
00009D24 <dos.include.ab3@1771> XINCLUDE "dos.include.bb2"
00009DEC <dos.include.ab3@1772> XINCLUDE "dos.include.bb2"
00009E32 <dos.include.ab3@1773> XINCLUDE "dos.include.bb2"
00009E76 <dos.include.ab3@1774> XINCLUDE "dos.include.bb2"
00009EBA <dos.include.ab3@1775> XINCLUDE "dos.include.bb2"
00009EFE <dos.include.ab3@1776> XINCLUDE "dos.include.bb2"
00009F08 <dos.include.ab3@1777> XINCLUDE "dos.include.bb2"
00009F24 <dos.include.ab3@1778> XINCLUDE "dos.include.bb2"
00009F62 <dos.include.ab3@1797> XINCLUDE "dos.include.bb2"
0000A014 <dos.include.ab3@1798> XINCLUDE "dos.include.bb2"
0000A0AA <dos.include.ab3@1799> XINCLUDE "dos.include.bb2"
0000A0E2 <dos.include.ab3@1800> XINCLUDE "dos.include.bb2"
0000A12C <dos.include.ab3@1801> XINCLUDE "dos.include.bb2"
0000A176 <dos.include.ab3@1802> XINCLUDE "dos.include.bb2"
0000A1C0 <dos.include.ab3@1803> XINCLUDE "dos.include.bb2"
0000A1CA <dos.include.ab3@1804> XINCLUDE "dos.include.bb2"
0000A1E6 <dos.include.ab3@1805> XINCLUDE "dos.include.bb2"
0000A220 <dos.include.ab3@1825> XINCLUDE "dos.include.bb2"
0000A228 <dos.include.ab3@1826> XINCLUDE "dos.include.bb2"
0000A282 <dos.include.ab3@1827> XINCLUDE "dos.include.bb2"
0000A2A2 <dos.include.ab3@1828> XINCLUDE "dos.include.bb2"
0000A2AC <dos.include.ab3@1829> XINCLUDE "dos.include.bb2"
0000A2C8 <dos.include.ab3@1830> XINCLUDE "dos.include.bb2"
0000A316 <dos.include.ab3@1854> XINCLUDE "dos.include.bb2"
0000A34C <dos.include.ab3@1856> XINCLUDE "dos.include.bb2"
0000A372 <dos.include.ab3@1857> XINCLUDE "dos.include.bb2"
0000A37C <dos.include.ab3@1858> XINCLUDE "dos.include.bb2"
0000A3F8 <dos.include.ab3@1859> XINCLUDE "dos.include.bb2"
0000A3FE <dos.include.ab3@1860> XINCLUDE "dos.include.bb2"
0000A438 <dos.include.ab3@1861> XINCLUDE "dos.include.bb2"
0000A470 <dos.include.ab3@1862> XINCLUDE "dos.include.bb2"
0000A4E0 <dos.include.ab3@1863> XINCLUDE "dos.include.bb2"
0000A52C <dos.include.ab3@1866> XINCLUDE "dos.include.bb2"
0000A534 <dos.include.ab3@1867> XINCLUDE "dos.include.bb2"
0000A53A <dos.include.ab3@1868> XINCLUDE "dos.include.bb2"
0000A548 <dos.include.ab3@1870> XINCLUDE "dos.include.bb2"
0000A552 <dos.include.ab3@1871> XINCLUDE "dos.include.bb2"
0000A57E <dos.include.ab3@1872> XINCLUDE "dos.include.bb2"
0000A58C <dos.include.ab3@1873> XINCLUDE "dos.include.bb2"
0000A596 <dos.include.ab3@1874> XINCLUDE "dos.include.bb2"
0000A5BE <dos.include.ab3@1875> XINCLUDE "dos.include.bb2"
0000A63C <dos.include.ab3@1876> XINCLUDE "dos.include.bb2"
0000A68E <dos.include.ab3@1877> XINCLUDE "dos.include.bb2"
0000A6A0 <dos.include.ab3@1878> XINCLUDE "dos.include.bb2"
0000A70E <dos.include.ab3@1879> XINCLUDE "dos.include.bb2"
0000A714 <dos.include.ab3@1880> XINCLUDE "dos.include.bb2"
0000A760 <dos.include.ab3@1881> XINCLUDE "dos.include.bb2"
0000A7A4 <dos.include.ab3@1883> XINCLUDE "dos.include.bb2"
0000A7AA <dos.include.ab3@1884> XINCLUDE "dos.include.bb2"
0000A7C0 <dos.include.ab3@1885> XINCLUDE "dos.include.bb2"
0000A7C6 <dos.include.ab3@1886> XINCLUDE "dos.include.bb2"
0000A7D4 <dos.include.ab3@1888> XINCLUDE "dos.include.bb2"
0000A7E2 <dos.include.ab3@1890> XINCLUDE "dos.include.bb2"
0000A7E8 <dos.include.ab3@1891> XINCLUDE "dos.include.bb2"
0000A7FC <dos.include.ab3@1894> XINCLUDE "dos.include.bb2"
0000A82A <dos.include.ab3@1895> XINCLUDE "dos.include.bb2"
0000A834 <dos.include.ab3@1896> XINCLUDE "dos.include.bb2"
0000A846 <dos.include.ab3@1897> XINCLUDE "dos.include.bb2"
0000A86E <dos.include.ab3@1898> XINCLUDE "dos.include.bb2"
0000A87A <dos.include.ab3@1900> XINCLUDE "dos.include.bb2"
0000A890 <dos.include.ab3@1901> XINCLUDE "dos.include.bb2"
0000A8A6 <dos.include.ab3@1902> XINCLUDE "dos.include.bb2"
0000A8BC <dos.include.ab3@1903> XINCLUDE "dos.include.bb2"
0000A8C2 <dos.include.ab3@1904> XINCLUDE "dos.include.bb2"
0000A8C8 <dos.include.ab3@1905> XINCLUDE "dos.include.bb2"
0000A8CE <dos.include.ab3@1906> XINCLUDE "dos.include.bb2"
0000A8E6 <dos.include.ab3@1907> XINCLUDE "dos.include.bb2"
0000A8F0 <dos.include.ab3@1911> XINCLUDE "dos.include.bb2"
0000A90C <dos.include.ab3@1912> XINCLUDE "dos.include.bb2"
0000A94A <dos.include.ab3@1934> XINCLUDE "dos.include.bb2"
0000A9D8 <dos.include.ab3@1935> XINCLUDE "dos.include.bb2"
0000A9E2 <dos.include.ab3@1936> XINCLUDE "dos.include.bb2"
0000A9FE <dos.include.ab3@1937> XINCLUDE "dos.include.bb2"
0000AA3C <dos.include.ab3@1955> XINCLUDE "dos.include.bb2"
0000AABC <dos.include.ab3@1956> XINCLUDE "dos.include.bb2"
0000AAC6 <dos.include.ab3@1957> XINCLUDE "dos.include.bb2"
0000AAE2 <dos.include.ab3@1958> XINCLUDE "dos.include.bb2"
0000AB20 <dos.include.ab3@1960> XINCLUDE "dos.include.bb2"
0000AB2A <dos.include.ab3@1961> XINCLUDE "dos.include.bb2"
0000ABA2 <dos.include.ab3@1962> XINCLUDE "dos.include.bb2"
0000ABA8 <dos.include.ab3@1963> XINCLUDE "dos.include.bb2"
0000AC20 <dos.include.ab3@1964> XINCLUDE "dos.include.bb2"
0000AC2A <dos.include.ab3@1966> XINCLUDE "dos.include.bb2"
0000AC46 <dos.include.ab3@1967> XINCLUDE "dos.include.bb2"
0000AC84 <dos.include.ab3@1986> XINCLUDE "dos.include.bb2"
0000AD12 <dos.include.ab3@1987> XINCLUDE "dos.include.bb2"
0000AD1C <dos.include.ab3@1988> XINCLUDE "dos.include.bb2"
0000AD38 <dos.include.ab3@1989> XINCLUDE "dos.include.bb2"
0000AD76 <dos.include.ab3@2009> XINCLUDE "dos.include.bb2"
0000AD7E <dos.include.ab3@2010> XINCLUDE "dos.include.bb2"
0000ADCC <dos.include.ab3@2011> XINCLUDE "dos.include.bb2"
0000AE44 <dos.include.ab3@2012> XINCLUDE "dos.include.bb2"
0000AE86 <dos.include.ab3@2013> XINCLUDE "dos.include.bb2"
0000AE8C <dos.include.ab3@2014> XINCLUDE "dos.include.bb2"
0000AE92 <dos.include.ab3@2015> XINCLUDE "dos.include.bb2"
0000AE9C <dos.include.ab3@2017> XINCLUDE "dos.include.bb2"
0000AEB8 <dos.include.ab3@2018> XINCLUDE "dos.include.bb2"
0000AEE6 <dos.include.ab3@2037> XINCLUDE "dos.include.bb2"
0000AEEC <dos.include.ab3@2038> XINCLUDE "dos.include.bb2"
0000AF0C <dos.include.ab3@2039> XINCLUDE "dos.include.bb2"
0000AF16 <dos.include.ab3@2040> XINCLUDE "dos.include.bb2"
0000AF38 <dos.include.ab3@2042> XINCLUDE "dos.include.bb2"
0000AF50 <dos.include.ab3@2043> XINCLUDE "dos.include.bb2"
0000AF66 <dos.include.ab3@2044> XINCLUDE "dos.include.bb2"
0000AF7C <dos.include.ab3@2045> XINCLUDE "dos.include.bb2"
0000AF92 <dos.include.ab3@2046> XINCLUDE "dos.include.bb2"
0000AFA6 <dos.include.ab3@2047> XINCLUDE "dos.include.bb2"
0000AFBA <dos.include.ab3@2048> XINCLUDE "dos.include.bb2"
0000AFCE <dos.include.ab3@2049> XINCLUDE "dos.include.bb2"
0000AFEE <dos.include.ab3@2050> XINCLUDE "dos.include.bb2"
0000AFFE <dos.include.ab3@2053> XINCLUDE "dos.include.bb2"
0000B008 <dos.include.ab3@2055> XINCLUDE "dos.include.bb2"
0000B032 <dos.include.ab3@2056> XINCLUDE "dos.include.bb2"
0000B05C <dos.include.ab3@2058> XINCLUDE "dos.include.bb2"
0000B062 <dos.include.ab3@2059> XINCLUDE "dos.include.bb2"
0000B082 <dos.include.ab3@2060> XINCLUDE "dos.include.bb2"
0000B08C <dos.include.ab3@2061> XINCLUDE "dos.include.bb2"
0000B0AE <dos.include.ab3@2063> XINCLUDE "dos.include.bb2"
0000B0C6 <dos.include.ab3@2064> XINCLUDE "dos.include.bb2"
0000B0DC <dos.include.ab3@2065> XINCLUDE "dos.include.bb2"
0000B0F2 <dos.include.ab3@2066> XINCLUDE "dos.include.bb2"
0000B108 <dos.include.ab3@2067> XINCLUDE "dos.include.bb2"
0000B11C <dos.include.ab3@2068> XINCLUDE "dos.include.bb2"
0000B130 <dos.include.ab3@2069> XINCLUDE "dos.include.bb2"
0000B144 <dos.include.ab3@2070> XINCLUDE "dos.include.bb2"
0000B154 <dos.include.ab3@2073> XINCLUDE "dos.include.bb2"
0000B15E <dos.include.ab3@2075> XINCLUDE "dos.include.bb2"
0000B188 <dos.include.ab3@2076> XINCLUDE "dos.include.bb2"
0000B1B2 <dos.include.ab3@2078> XINCLUDE "dos.include.bb2"
0000B1B8 <dos.include.ab3@2079> XINCLUDE "dos.include.bb2"
0000B1D8 <dos.include.ab3@2080> XINCLUDE "dos.include.bb2"
0000B1E2 <dos.include.ab3@2081> XINCLUDE "dos.include.bb2"
0000B204 <dos.include.ab3@2083> XINCLUDE "dos.include.bb2"
0000B21C <dos.include.ab3@2084> XINCLUDE "dos.include.bb2"
0000B232 <dos.include.ab3@2085> XINCLUDE "dos.include.bb2"
0000B248 <dos.include.ab3@2086> XINCLUDE "dos.include.bb2"
0000B25E <dos.include.ab3@2087> XINCLUDE "dos.include.bb2"
0000B272 <dos.include.ab3@2088> XINCLUDE "dos.include.bb2"
0000B286 <dos.include.ab3@2089> XINCLUDE "dos.include.bb2"
0000B29A <dos.include.ab3@2090> XINCLUDE "dos.include.bb2"
0000B2AA <dos.include.ab3@2093> XINCLUDE "dos.include.bb2"
0000B2B4 <dos.include.ab3@2095> XINCLUDE "dos.include.bb2"
0000B2DE <dos.include.ab3@2096> XINCLUDE "dos.include.bb2"
0000B308 <dos.include.ab3@2099> XINCLUDE "dos.include.bb2"
0000B30E <dos.include.ab3@2100> XINCLUDE "dos.include.bb2"
0000B32E <dos.include.ab3@2101> XINCLUDE "dos.include.bb2"
0000B338 <dos.include.ab3@2102> XINCLUDE "dos.include.bb2"
0000B35A <dos.include.ab3@2104> XINCLUDE "dos.include.bb2"
0000B372 <dos.include.ab3@2105> XINCLUDE "dos.include.bb2"
0000B388 <dos.include.ab3@2106> XINCLUDE "dos.include.bb2"
0000B39E <dos.include.ab3@2107> XINCLUDE "dos.include.bb2"
0000B3B4 <dos.include.ab3@2108> XINCLUDE "dos.include.bb2"
0000B3C8 <dos.include.ab3@2109> XINCLUDE "dos.include.bb2"
0000B3DC <dos.include.ab3@2110> XINCLUDE "dos.include.bb2"
0000B3F0 <dos.include.ab3@2111> XINCLUDE "dos.include.bb2"
0000B400 <dos.include.ab3@2114> XINCLUDE "dos.include.bb2"
0000B40A <dos.include.ab3@2116> XINCLUDE "dos.include.bb2"
0000B434 <dos.include.ab3@2117> XINCLUDE "dos.include.bb2"
0000B46E <dos.include.ab3@2143> XINCLUDE "dos.include.bb2"
0000B4BA <dos.include.ab3@2144> XINCLUDE "dos.include.bb2"
0000B506 <dos.include.ab3@2145> XINCLUDE "dos.include.bb2"
0000B564 <dos.include.ab3@2146> XINCLUDE "dos.include.bb2"
0000B576 <dos.include.ab3@2147> XINCLUDE "dos.include.bb2"
0000B640 <dos.include.ab3@2148> XINCLUDE "dos.include.bb2"
0000B726 <dos.include.ab3@2149> XINCLUDE "dos.include.bb2"
0000B750 <dos.include.ab3@2151> XINCLUDE "dos.include.bb2"
0000B770 <dos.include.ab3@2152> XINCLUDE "dos.include.bb2"
0000B78A <dos.include.ab3@2174> XINCLUDE "dos.include.bb2"
0000B7AC <dos.include.ab3@2175> XINCLUDE "dos.include.bb2"
0000B7B4 <dos.include.ab3@2176> XINCLUDE "dos.include.bb2"
0000B7CA <dos.include.ab3@2177> XINCLUDE "dos.include.bb2"
0000B7E8 <dos.include.ab3@2178> XINCLUDE "dos.include.bb2"
0000B7F0 <dos.include.ab3@2179> XINCLUDE "dos.include.bb2"
0000B7FA <dos.include.ab3@2181> XINCLUDE "dos.include.bb2"
0000B800 <dos.include.ab3@2182> XINCLUDE "dos.include.bb2"
0000B82A <dos.include.ab3@2207> XINCLUDE "dos.include.bb2"
0000B83E <dos.include.ab3@2208> XINCLUDE "dos.include.bb2"
0000B87C <dos.include.ab3@2209> XINCLUDE "dos.include.bb2"
0000B962 <dos.include.ab3@2210> XINCLUDE "dos.include.bb2"
0000B968 <dos.include.ab3@2211> XINCLUDE "dos.include.bb2"
0000B9B8 <dos.include.ab3@2212> XINCLUDE "dos.include.bb2"
0000B9E2 <dos.include.ab3@2213> XINCLUDE "dos.include.bb2"
0000BA00 <dos.include.ab3@2214> XINCLUDE "dos.include.bb2"
0000BA2A <dos.include.ab3@2238> XINCLUDE "dos.include.bb2"
0000BA3E <dos.include.ab3@2239> XINCLUDE "dos.include.bb2"
0000BA7C <dos.include.ab3@2240> XINCLUDE "dos.include.bb2"
0000BB62 <dos.include.ab3@2241> XINCLUDE "dos.include.bb2"
0000BB68 <dos.include.ab3@2242> XINCLUDE "dos.include.bb2"
0000BBDA <dos.include.ab3@2243> XINCLUDE "dos.include.bb2"
0000BC04 <dos.include.ab3@2244> XINCLUDE "dos.include.bb2"
0000BC22 <dos.include.ab3@2245> XINCLUDE "dos.include.bb2"
0000BC5C <dos.include.ab3@2271> XINCLUDE "dos.include.bb2"
0000BC94 <dos.include.ab3@2272> XINCLUDE "dos.include.bb2"
0000BCEC <dos.include.ab3@2273> XINCLUDE "dos.include.bb2"
0000BD50 <dos.include.ab3@2274> XINCLUDE "dos.include.bb2"
0000BD7A <dos.include.ab3@2276> XINCLUDE "dos.include.bb2"
0000BD9A <dos.include.ab3@2277> XINCLUDE "dos.include.bb2"
0000BDC4 <dos.include.ab3@2294> XINCLUDE "dos.include.bb2"
0000BDCA <dos.include.ab3@2295> XINCLUDE "dos.include.bb2"
0000BDE0 <dos.include.ab3@2296> XINCLUDE "dos.include.bb2"
0000BDEA <dos.include.ab3@2297> XINCLUDE "dos.include.bb2"
0000BDF0 <dos.include.ab3@2298> XINCLUDE "dos.include.bb2"
0000BE00 <dos.include.ab3@2299> XINCLUDE "dos.include.bb2"
0000BE0A <dos.include.ab3@2301> XINCLUDE "dos.include.bb2"
0000BE24 <dos.include.ab3@2302> XINCLUDE "dos.include.bb2"
0000BE52 <dos.include.ab3@2322> XINCLUDE "dos.include.bb2"
0000BE6C <dos.include.ab3@2323> XINCLUDE "dos.include.bb2"
0000BE8A <dos.include.ab3@2324> XINCLUDE "dos.include.bb2"
0000BE94 <dos.include.ab3@2325> XINCLUDE "dos.include.bb2"
0000BEA4 <dos.include.ab3@2326> XINCLUDE "dos.include.bb2"
0000BEAC <dos.include.ab3@2327> XINCLUDE "dos.include.bb2"
0000BEB4 <dos.include.ab3@2329> XINCLUDE "dos.include.bb2"
0000BECE <dos.include.ab3@2330> XINCLUDE "dos.include.bb2"
0000BEF8 <dos.include.ab3@2346> XINCLUDE "dos.include.bb2"
0000BF2C <dos.include.ab3@2348> XINCLUDE "dos.include.bb2"
0000BF44 <dos.include.ab3@2349> XINCLUDE "dos.include.bb2"
0000BF82 <dos.include.ab3@2367> XINCLUDE "dos.include.bb2"
0000BFA2 <dos.include.ab3@2369> XINCLUDE "dos.include.bb2"
0000BFC8 <dos.include.ab3@2370> XINCLUDE "dos.include.bb2"
0000BFD0 <dos.include.ab3@2371> XINCLUDE "dos.include.bb2"
0000BFE4 <dos.include.ab3@2372> XINCLUDE "dos.include.bb2"
0000BFEE <dos.include.ab3@2373> XINCLUDE "dos.include.bb2"
0000C056 <dos.include.ab3@2374> XINCLUDE "dos.include.bb2"
0000C06A <dos.include.ab3@2375> XINCLUDE "dos.include.bb2"
0000C09A <dos.include.ab3@2376> XINCLUDE "dos.include.bb2"
0000C0A0 <dos.include.ab3@2377> XINCLUDE "dos.include.bb2"
0000C0D0 <dos.include.ab3@2378> XINCLUDE "dos.include.bb2"
0000C0FA <dos.include.ab3@2380> XINCLUDE "dos.include.bb2"
0000C11A <dos.include.ab3@2381> XINCLUDE "dos.include.bb2"
0000C13A <dos.include.ab3@2382> XINCLUDE "dos.include.bb2"
0000C1BE <dos.include.ab3@2383> XINCLUDE "dos.include.bb2"
0000C1D6 <dos.include.ab3@2384> XINCLUDE "dos.include.bb2"
0000C1EA <dos.include.ab3@2385> XINCLUDE "dos.include.bb2"
0000C1FE <dos.include.ab3@2386> XINCLUDE "dos.include.bb2"
0000C222 <dos.include.ab3@2387> XINCLUDE "dos.include.bb2"
0000C228 <dos.include.ab3@2388> XINCLUDE "dos.include.bb2"
0000C24C <dos.include.ab3@2389> XINCLUDE "dos.include.bb2"
0000C256 <dos.include.ab3@2391> XINCLUDE "dos.include.bb2"
0000C264 <dos.include.ab3@2392> XINCLUDE "dos.include.bb2"
0000C278 <dos.include.ab3@2393> XINCLUDE "dos.include.bb2"
0000C30E <dos.include.ab3@2394> XINCLUDE "dos.include.bb2"
0000C314 <dos.include.ab3@2395> XINCLUDE "dos.include.bb2"
0000C3AA <dos.include.ab3@2396> XINCLUDE "dos.include.bb2"
0000C3B0 <dos.include.ab3@2400> XINCLUDE "dos.include.bb2"
0000C3C4 <dos.include.ab3@2401> XINCLUDE "dos.include.bb2"
0000C3D2 <dos.include.ab3@2402> XINCLUDE "dos.include.bb2"
0000C3E6 <dos.include.ab3@2403> XINCLUDE "dos.include.bb2"
0000C47C <dos.include.ab3@2404> XINCLUDE "dos.include.bb2"
0000C482 <dos.include.ab3@2405> XINCLUDE "dos.include.bb2"
0000C518 <dos.include.ab3@2406> XINCLUDE "dos.include.bb2"
0000C51E <dos.include.ab3@2410> XINCLUDE "dos.include.bb2"
0000C532 <dos.include.ab3@2412> XINCLUDE "dos.include.bb2"
0000C542 <dos.include.ab3@2414> XINCLUDE "dos.include.bb2"
0000C550 <dos.include.ab3@2416> XINCLUDE "dos.include.bb2"
0000C55A <dos.include.ab3@2417> XINCLUDE "dos.include.bb2"
0000C576 <dos.include.ab3@2418> XINCLUDE "dos.include.bb2"
0000C5B4 <dos.include.ab3@2439> XINCLUDE "dos.include.bb2"
0000C656 <dos.include.ab3@2441> XINCLUDE "dos.include.bb2"
0000C68A <dos.include.ab3@2442> XINCLUDE "dos.include.bb2"
0000C6BE <dos.include.ab3@2443> XINCLUDE "dos.include.bb2"
0000C6C4 <dos.include.ab3@2444> XINCLUDE "dos.include.bb2"
0000C6E0 <dos.include.ab3@2445> XINCLUDE "dos.include.bb2"
0000C73E <dos.include.ab3@2446> XINCLUDE "dos.include.bb2"
0000C744 <dos.include.ab3@2447> XINCLUDE "dos.include.bb2"
0000C74E <dos.include.ab3@2450> XINCLUDE "dos.include.bb2"
0000C782 <dos.include.ab3@2451> XINCLUDE "dos.include.bb2"
0000C790 <dos.include.ab3@2452> XINCLUDE "dos.include.bb2"
0000C796 <dos.include.ab3@2453> XINCLUDE "dos.include.bb2"
0000C7BE <dos.include.ab3@2454> XINCLUDE "dos.include.bb2"
0000C7D0 <dos.include.ab3@2455> XINCLUDE "dos.include.bb2"
0000C7FA <dos.include.ab3@2457> XINCLUDE "dos.include.bb2"
0000C81A <dos.include.ab3@2458> XINCLUDE "dos.include.bb2"
0000C830 <dos.include.ab3@2460> XINCLUDE "dos.include.bb2"
0000C83A <dos.include.ab3@2462> XINCLUDE "dos.include.bb2"
0000C83E <dos.include.ab3@2463> XINCLUDE "dos.include.bb2"
0000C878 <dos.include.ab3@2489> XINCLUDE "dos.include.bb2"
0000C900 <dos.include.ab3@2492> XINCLUDE "dos.include.bb2"
0000C92A <dos.include.ab3@2493> XINCLUDE "dos.include.bb2"
0000C972 <dos.include.ab3@2494> XINCLUDE "dos.include.bb2"
0000C97C <dos.include.ab3@2496> XINCLUDE "dos.include.bb2"
0000C998 <dos.include.ab3@2497> XINCLUDE "dos.include.bb2"
0000C9D2 <dos.include.ab3@2514> XINCLUDE "dos.include.bb2"
0000C9F6 <dos.include.ab3@2515> XINCLUDE "dos.include.bb2"
0000C9FE <dos.include.ab3@2516> XINCLUDE "dos.include.bb2"
0000CA0C <dos.include.ab3@2517> XINCLUDE "dos.include.bb2"
0000CA28 <dos.include.ab3@2519> XINCLUDE "dos.include.bb2"
0000CA56 <dos.include.ab3@2536> XINCLUDE "dos.include.bb2"
0000CA78 <dos.include.ab3@2537> XINCLUDE "dos.include.bb2"
0000CA80 <dos.include.ab3@2538> XINCLUDE "dos.include.bb2"
0000CA8E <dos.include.ab3@2539> XINCLUDE "dos.include.bb2"
0000CAA8 <dos.include.ab3@2541> XINCLUDE "dos.include.bb2"
0000CAD6 <dos.include.ab3@2560> XINCLUDE "dos.include.bb2"
0000CAEA <dos.include.ab3@2561> XINCLUDE "dos.include.bb2"
0000CB1E <dos.include.ab3@2562> XINCLUDE "dos.include.bb2"
0000CB38 <dos.include.ab3@2564> XINCLUDE "dos.include.bb2"
0000CB40 <dos.include.ab3@2565> XINCLUDE "dos.include.bb2"
0000CB4E <dos.include.ab3@2566> XINCLUDE "dos.include.bb2"
0000CB68 <dos.include.ab3@2568> XINCLUDE "dos.include.bb2"
0000CB92 <dos.include.ab3@2587> XINCLUDE "dos.include.bb2"
0000CB9E <dos.include.ab3@2589> XINCLUDE "dos.include.bb2"
0000CBF6 <dos.include.ab3@2590> XINCLUDE "dos.include.bb2"
0000CC4E <dos.include.ab3@2591> XINCLUDE "dos.include.bb2"
0000CC6E <dos.include.ab3@2592> XINCLUDE "dos.include.bb2"
0000CC94 <dos.include.ab3@2593> XINCLUDE "dos.include.bb2"
0000CCC0 <dos.include.ab3@2594> XINCLUDE "dos.include.bb2"
0000CCD8 <dos.include.ab3@2595> XINCLUDE "dos.include.bb2"
0000CCDE <dos.include.ab3@2596> XINCLUDE "dos.include.bb2"
0000CD18 <dos.include.ab3@2597> XINCLUDE "dos.include.bb2"
0000CD70 <dos.include.ab3@2598> XINCLUDE "dos.include.bb2"
0000CD76 <dos.include.ab3@2599> XINCLUDE "dos.include.bb2"
0000CD86 <dos.include.ab3@2602> XINCLUDE "dos.include.bb2"
0000CD90 <dos.include.ab3@2604> XINCLUDE "dos.include.bb2"
0000CDAA <dos.include.ab3@2605> XINCLUDE "dos.include.bb2"
0000CDD4 <dos.include.ab3@2621> XINCLUDE "dos.include.bb2"
0000CDDA <dos.include.ab3@2623> XINCLUDE "dos.include.bb2"
0000CE1A <dos.include.ab3@2624> XINCLUDE "dos.include.bb2"
0000CE3A <dos.include.ab3@2625> XINCLUDE "dos.include.bb2"
0000CE60 <dos.include.ab3@2626> XINCLUDE "dos.include.bb2"
0000CE8C <dos.include.ab3@2627> XINCLUDE "dos.include.bb2"
0000CEA4 <dos.include.ab3@2628> XINCLUDE "dos.include.bb2"
0000CEAA <dos.include.ab3@2629> XINCLUDE "dos.include.bb2"
0000CEB0 <dos.include.ab3@2630> XINCLUDE "dos.include.bb2"
0000CEB6 <dos.include.ab3@2631> XINCLUDE "dos.include.bb2"
0000CEC6 <dos.include.ab3@2634> XINCLUDE "dos.include.bb2"
0000CED0 <dos.include.ab3@2636> XINCLUDE "dos.include.bb2"
0000CEEA <dos.include.ab3@2637> XINCLUDE "dos.include.bb2"
0000CF14 <dos.include.ab3@2639> XINCLUDE "dos.include.bb2"
0000CF1A <dos.include.ab3@2641> XINCLUDE "dos.include.bb2"
0000CF5A <dos.include.ab3@2642> XINCLUDE "dos.include.bb2"
0000CF7A <dos.include.ab3@2643> XINCLUDE "dos.include.bb2"
0000CFA0 <dos.include.ab3@2644> XINCLUDE "dos.include.bb2"
0000CFCC <dos.include.ab3@2645> XINCLUDE "dos.include.bb2"
0000CFE4 <dos.include.ab3@2646> XINCLUDE "dos.include.bb2"
0000CFEA <dos.include.ab3@2647> XINCLUDE "dos.include.bb2"
0000CFF0 <dos.include.ab3@2648> XINCLUDE "dos.include.bb2"
0000CFF6 <dos.include.ab3@2649> XINCLUDE "dos.include.bb2"
0000D006 <dos.include.ab3@2652> XINCLUDE "dos.include.bb2"
0000D010 <dos.include.ab3@2654> XINCLUDE "dos.include.bb2"
0000D02A <dos.include.ab3@2655> XINCLUDE "dos.include.bb2"
0000D054 <dos.include.ab3@2673> XINCLUDE "dos.include.bb2"
0000D074 <dos.include.ab3@2674> XINCLUDE "dos.include.bb2"
0000D07E <dos.include.ab3@2675> XINCLUDE "dos.include.bb2"
0000D08A <dos.include.ab3@2676> XINCLUDE "dos.include.bb2"
0000D09A <dos.include.ab3@2677> XINCLUDE "dos.include.bb2"
0000D0A0 <dos.include.ab3@2678> XINCLUDE "dos.include.bb2"
0000D0AC <dos.include.ab3@2679> XINCLUDE "dos.include.bb2"
0000D0B6 <dos.include.ab3@2681> XINCLUDE "dos.include.bb2"
0000D0D0 <dos.include.ab3@2682> XINCLUDE "dos.include.bb2"
0000D0FA <dos.include.ab3@2704> XINCLUDE "dos.include.bb2"
0000D106 <dos.include.ab3@2706> XINCLUDE "dos.include.bb2"
0000D126 <dos.include.ab3@2707> XINCLUDE "dos.include.bb2"
0000D14C <dos.include.ab3@2708> XINCLUDE "dos.include.bb2"
0000D178 <dos.include.ab3@2709> XINCLUDE "dos.include.bb2"
0000D190 <dos.include.ab3@2710> XINCLUDE "dos.include.bb2"
0000D19E <dos.include.ab3@2712> XINCLUDE "dos.include.bb2"
0000D1A4 <dos.include.ab3@2713> XINCLUDE "dos.include.bb2"
0000D1B0 <dos.include.ab3@2714> XINCLUDE "dos.include.bb2"
0000D1B6 <dos.include.ab3@2716> XINCLUDE "dos.include.bb2"
0000D1C2 <dos.include.ab3@2717> XINCLUDE "dos.include.bb2"
0000D1D2 <dos.include.ab3@2719> XINCLUDE "dos.include.bb2"
0000D1D8 <dos.include.ab3@2720> XINCLUDE "dos.include.bb2"
0000D1E4 <dos.include.ab3@2721> XINCLUDE "dos.include.bb2"
0000D1EE <dos.include.ab3@2723> XINCLUDE "dos.include.bb2"
0000D208 <dos.include.ab3@2724> XINCLUDE "dos.include.bb2"
0000D232 <dos.include.ab3@2740> XINCLUDE "dos.include.bb2"
0000D25A <dos.include.ab3@2742> XINCLUDE "dos.include.bb2"
0000D27A <dos.include.ab3@2743> XINCLUDE "dos.include.bb2"
0000D2A0 <dos.include.ab3@2744> XINCLUDE "dos.include.bb2"
0000D2CC <dos.include.ab3@2745> XINCLUDE "dos.include.bb2"
0000D2F8 <dos.include.ab3@2746> XINCLUDE "dos.include.bb2"
0000D308 <dos.include.ab3@2749> XINCLUDE "dos.include.bb2"
0000D332 <dos.include.ab3@2751> XINCLUDE "dos.include.bb2"
0000D350 <dos.include.ab3@2752> XINCLUDE "dos.include.bb2"
0000D37A <dos.include.ab3@2774> XINCLUDE "dos.include.bb2"
0000D3B6 <dos.include.ab3@2775> XINCLUDE "dos.include.bb2"
0000D3CE <dos.include.ab3@2776> XINCLUDE "dos.include.bb2"
0000D44E <dos.include.ab3@2777> XINCLUDE "dos.include.bb2"
0000D466 <dos.include.ab3@2778> XINCLUDE "dos.include.bb2"
0000D476 <dos.include.ab3@2780> XINCLUDE "dos.include.bb2"
0000D4A0 <dos.include.ab3@2781> XINCLUDE "dos.include.bb2"
0000D4BE <dos.include.ab3@2782> XINCLUDE "dos.include.bb2"
0000D510 <dos.include.ab3@2810> XINCLUDE "dos.include.bb2"
0000D518 <dos.include.ab3@2811> XINCLUDE "dos.include.bb2"
0000D5B4 <dos.include.ab3@2813> XINCLUDE "dos.include.bb2"
0000D5E6 <dos.include.ab3@2814> XINCLUDE "dos.include.bb2"
0000D618 <dos.include.ab3@2815> XINCLUDE "dos.include.bb2"
0000D654 <dos.include.ab3@2816> XINCLUDE "dos.include.bb2"
0000D680 <dos.include.ab3@2818> XINCLUDE "dos.include.bb2"
0000D6C4 <dos.include.ab3@2819> XINCLUDE "dos.include.bb2"
0000D702 <dos.include.ab3@2820> XINCLUDE "dos.include.bb2"
0000D742 <dos.include.ab3@2821> XINCLUDE "dos.include.bb2"
0000D782 <dos.include.ab3@2822> XINCLUDE "dos.include.bb2"
0000D7A2 <dos.include.ab3@2823> XINCLUDE "dos.include.bb2"
0000D7C2 <dos.include.ab3@2825> XINCLUDE "dos.include.bb2"
0000D7CC <dos.include.ab3@2827> XINCLUDE "dos.include.bb2"
0000D7FC <dos.include.ab3@2829> XINCLUDE "dos.include.bb2"
0000D816 <dos.include.ab3@2845> XINCLUDE "dos.include.bb2"
0000D854 <dos.include.ab3@2846> XINCLUDE "dos.include.bb2"
0000D86E <dos.include.ab3@2847> XINCLUDE "dos.include.bb2"
0000D878 <dos.include.ab3@2848> XINCLUDE "dos.include.bb2"
0000D87E <dos.include.ab3@2849> XINCLUDE "dos.include.bb2"
0000D898 <dos.include.ab3@2865> XINCLUDE "dos.include.bb2"
0000D8AE <dos.include.ab3@2866> XINCLUDE "dos.include.bb2"
0000D8B4 <dos.include.ab3@2867> XINCLUDE "dos.include.bb2"
0000D8BA <dos.include.ab3@2868> XINCLUDE "dos.include.bb2"
0000D8C0 <dos.include.ab3@2869> XINCLUDE "dos.include.bb2"
0000D8CA <dos.include.ab3@2871> XINCLUDE "dos.include.bb2"
0000D8D0 <dos.include.ab3@2872> XINCLUDE "dos.include.bb2"
0000D8FA <dos.include.ab3@2889> XINCLUDE "dos.include.bb2"
0000D900 <dos.include.ab3@2890> XINCLUDE "dos.include.bb2"
0000D930 <dos.include.ab3@2891> XINCLUDE "dos.include.bb2"
0000D960 <dos.include.ab3@2900> XINCLUDE "dos.include.bb2"
0000D984 <dos.include.ab3@2901> XINCLUDE "dos.include.bb2"
0000D98A <dos.include.ab3@2902> XINCLUDE "dos.include.bb2"
0000D9C4 <dos.include.ab3@2903> XINCLUDE "dos.include.bb2"
0000D9CE <dos.include.ab3@2905> XINCLUDE "dos.include.bb2"
0000D9E8 <dos.include.ab3@2906> XINCLUDE "dos.include.bb2"
0000D9E8 <AmiBlitz3.ab2@79> XINCLUDE "dos.include.bb2"
0000D9F6 <AmiBlitz3.ab2@81> If dos_FromCLI{}
0000D9FC <AmiBlitz3.ab2@82>   CLIMode.l=True
0000DA08 <AmiBlitz3.ab2@83>   error_SetFlags{#error_stdout}
0000DA08 <common.ab3@1> XINCLUDE "/Shared/common.ab3"
0000DA30 <common.ab3@38> XINCLUDE "/Shared/common.ab3"
0000DA4A <common.ab3@235> XINCLUDE "/Shared/common.ab3"
0000DA88 <common.ab3@236> XINCLUDE "/Shared/common.ab3"
0000DA8C <common.ab3@237> XINCLUDE "/Shared/common.ab3"
0000DA96 <common.ab3@239> XINCLUDE "/Shared/common.ab3"
0000DAD2 <common.ab3@240> XINCLUDE "/Shared/common.ab3"
0000DADC <common.ab3@241> XINCLUDE "/Shared/common.ab3"
0000DAE2 <common.ab3@242> XINCLUDE "/Shared/common.ab3"
0000DB6E <common.ab3@243> XINCLUDE "/Shared/common.ab3"
0000DB78 <common.ab3@244> XINCLUDE "/Shared/common.ab3"
0000DB7E <common.ab3@250> XINCLUDE "/Shared/common.ab3"
0000DB80 <common.ab3@251> XINCLUDE "/Shared/common.ab3"
0000DD10 <common.ab3@252> XINCLUDE "/Shared/common.ab3"
0000DD14 <common.ab3@253> XINCLUDE "/Shared/common.ab3"
0000DD18 <common.ab3@255> XINCLUDE "/Shared/common.ab3"
0000DD1C <common.ab3@256> XINCLUDE "/Shared/common.ab3"
0000DD20 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
0000DD24 <common.ab3@259> XINCLUDE "/Shared/common.ab3"
0000DD28 <common.ab3@260> XINCLUDE "/Shared/common.ab3"
0000DD2C <common.ab3@261> XINCLUDE "/Shared/common.ab3"
0000DD30 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000DD34 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000DD38 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
0000DD3C <common.ab3@265> XINCLUDE "/Shared/common.ab3"
0000DD40 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
0000DD44 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000DD48 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
0000DD4C <common.ab3@271> XINCLUDE "/Shared/common.ab3"
0000DD50 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
0000DD54 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
0000DD58 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
0000DD5C <common.ab3@275> XINCLUDE "/Shared/common.ab3"
0000DD60 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
0000DD64 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
0000DD68 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
0000DD6C <common.ab3@279> XINCLUDE "/Shared/common.ab3"
0000DD74 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
0000DD78 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
0000DD7A <common.ab3@284> XINCLUDE "/Shared/common.ab3"
0000DD7E <common.ab3@285> XINCLUDE "/Shared/common.ab3"
0000DD80 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
0000DD84 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
0000DD88 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
0000DD8C <common.ab3@289> XINCLUDE "/Shared/common.ab3"
0000DD90 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
0000DD94 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
0000DD9C <common.ab3@292> XINCLUDE "/Shared/common.ab3"
0000DDA4 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
0000DDA8 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
0000DDAC <common.ab3@295> XINCLUDE "/Shared/common.ab3"
0000DDB0 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
0000DDB2 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
0000DE72 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
0000DEBA <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000DEBE <common.ab3@302> XINCLUDE "/Shared/common.ab3"
0000DEC0 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
0000DEC4 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
0000DEC6 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
0000DEC8 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000DECA <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000DECC <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000DECE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
0000DED0 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000DED1 <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000DED2 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
0000DED4 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
0000DED6 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
0000DED8 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000DEDA <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000DEDC <common.ab3@324> XINCLUDE "/Shared/common.ab3"
0000DEDE <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000DEE2 <common.ab3@328> XINCLUDE "/Shared/common.ab3"
0000DEE4 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
0000DEE6 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
0000DEE8 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
0000DEEC <common.ab3@335> XINCLUDE "/Shared/common.ab3"
0000DEEE <common.ab3@336> XINCLUDE "/Shared/common.ab3"
0000DEF0 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000DEF4 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000DEF6 <common.ab3@341> XINCLUDE "/Shared/common.ab3"
0000DEF8 <common.ab3@342> XINCLUDE "/Shared/common.ab3"
0000DEFA <common.ab3@343> XINCLUDE "/Shared/common.ab3"
0000DEFC <common.ab3@345> XINCLUDE "/Shared/common.ab3"
0000DEFE <common.ab3@346> XINCLUDE "/Shared/common.ab3"
0000DF02 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000DF04 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000DF06 <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000DF08 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
0000DF0A <common.ab3@355> XINCLUDE "/Shared/common.ab3"
0000DF0E <common.ab3@356> XINCLUDE "/Shared/common.ab3"
0000DF10 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
0000DF12 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
0000DF14 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
0000DF16 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
0000DF18 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000DF1C <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000DF1E <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000DF20 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
0000DF22 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
0000DF24 <common.ab3@373> XINCLUDE "/Shared/common.ab3"
0000DF26 <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000DF28 <common.ab3@377> XINCLUDE "/Shared/common.ab3"
0000DF2A <common.ab3@379> XINCLUDE "/Shared/common.ab3"
0000DF2E <common.ab3@380> XINCLUDE "/Shared/common.ab3"
0000DF30 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
0000DF5E <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000DF68 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000DF6C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000DF6E <common.ab3@386> XINCLUDE "/Shared/common.ab3"
0000DF70 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
0000DF74 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
0000DF78 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
0000DF81 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
0000DF84 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
0000DFB1 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
0000DFF1 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
0000DFFD <common.ab3@394> XINCLUDE "/Shared/common.ab3"
0000E04D <common.ab3@395> XINCLUDE "/Shared/common.ab3"
0000E059 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
0000E0A9 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
0000E1A5 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
0000E1A7 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
0000E267 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
0000E2A7 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
0000E2A9 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
0000E2AA <common.ab3@403> XINCLUDE "/Shared/common.ab3"
0000E2AE <common.ab3@406> XINCLUDE "/Shared/common.ab3"
0000E2B2 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
0000E2B6 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
0000E2BA <common.ab3@410> XINCLUDE "/Shared/common.ab3"
0000E2BE <common.ab3@412> XINCLUDE "/Shared/common.ab3"
0000E2C2 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
0000E2C6 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
0000E2CA <common.ab3@416> XINCLUDE "/Shared/common.ab3"
0000E2CE <common.ab3@417> XINCLUDE "/Shared/common.ab3"
0000E2D2 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
0000E2D6 <common.ab3@419> XINCLUDE "/Shared/common.ab3"
0000E2DA <common.ab3@420> XINCLUDE "/Shared/common.ab3"
0000E2DE <common.ab3@421> XINCLUDE "/Shared/common.ab3"
0000E2E2 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
0000E2E6 <common.ab3@425> XINCLUDE "/Shared/common.ab3"
0000E2EA <common.ab3@427> XINCLUDE "/Shared/common.ab3"
0000E2EE <common.ab3@429> XINCLUDE "/Shared/common.ab3"
0000E2F2 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
0000E2FC <common.ab3@431> XINCLUDE "/Shared/common.ab3"
0000E300 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
0000E304 <common.ab3@435> XINCLUDE "/Shared/common.ab3"
0000E306 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
0000E308 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
0000E326 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
0000E32A <common.ab3@439> XINCLUDE "/Shared/common.ab3"
0000E32C <common.ab3@441> XINCLUDE "/Shared/common.ab3"
0000E330 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
0000E364 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
0000E368 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
0000E376 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
0000E388 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
0000E38A <common.ab3@448> XINCLUDE "/Shared/common.ab3"
0000E39E <common.ab3@449> XINCLUDE "/Shared/common.ab3"
0000E3B4 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
0000E3CA <common.ab3@451> XINCLUDE "/Shared/common.ab3"
0000E3E0 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
0000E3F6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
0000E3F8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
0000E3FA <common.ab3@455> XINCLUDE "/Shared/common.ab3"
0000E3FE <common.ab3@457> XINCLUDE "/Shared/common.ab3"
0000E402 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
0000E406 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
0000E40A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
0000E40E <common.ab3@463> XINCLUDE "/Shared/common.ab3"
0000E412 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
0000E416 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
0000E41A <common.ab3@466> XINCLUDE "/Shared/common.ab3"
0000E41E <common.ab3@467> XINCLUDE "/Shared/common.ab3"
0000E422 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
0000E428 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
0000E43A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
0000E43C <common.ab3@474> XINCLUDE "/Shared/common.ab3"
0000E440 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
0000E442 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
0000E446 <common.ab3@477> XINCLUDE "/Shared/common.ab3"
0000E448 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
0000E44C <common.ab3@479> XINCLUDE "/Shared/common.ab3"
0000E44E <common.ab3@480> XINCLUDE "/Shared/common.ab3"
0000E452 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
0000E454 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
0000E458 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
0000E45A <common.ab3@484> XINCLUDE "/Shared/common.ab3"
0000E45E <common.ab3@485> XINCLUDE "/Shared/common.ab3"
0000E460 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
0000E464 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
0000E466 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
0000E46A <common.ab3@489> XINCLUDE "/Shared/common.ab3"
0000E46C <common.ab3@490> XINCLUDE "/Shared/common.ab3"
0000E470 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
0000E472 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
0000E476 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
0000E478 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
0000E47C <common.ab3@495> XINCLUDE "/Shared/common.ab3"
0000E47E <common.ab3@496> XINCLUDE "/Shared/common.ab3"
0000E482 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
0000E484 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
0000E488 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
0000E48A <common.ab3@500> XINCLUDE "/Shared/common.ab3"
0000E48E <common.ab3@501> XINCLUDE "/Shared/common.ab3"
0000E490 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
0000E4A4 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
0000E4B8 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
0000E4CC <common.ab3@508> XINCLUDE "/Shared/common.ab3"
0000E4CE <common.ab3@509> XINCLUDE "/Shared/common.ab3"
0000E4D2 <common.ab3@510> XINCLUDE "/Shared/common.ab3"
0000E4D6 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
0000E4DA <common.ab3@512> XINCLUDE "/Shared/common.ab3"
0000E4DE <common.ab3@513> XINCLUDE "/Shared/common.ab3"
0000E4E2 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
0000E4E6 <common.ab3@515> XINCLUDE "/Shared/common.ab3"
0000E4EA <common.ab3@516> XINCLUDE "/Shared/common.ab3"
0000E4EB <common.ab3@517> XINCLUDE "/Shared/common.ab3"
0000E4EC <common.ab3@518> XINCLUDE "/Shared/common.ab3"
0000E4ED <common.ab3@519> XINCLUDE "/Shared/common.ab3"
0000E4F0 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
0000E4F4 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
0000E4F8 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
0000E4FC <common.ab3@523> XINCLUDE "/Shared/common.ab3"
0000E500 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
0000E504 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
0000E508 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
0000E509 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
0000E50A <common.ab3@528> XINCLUDE "/Shared/common.ab3"
0000E50C <common.ab3@529> XINCLUDE "/Shared/common.ab3"
0000E510 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
0000E514 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
0000E518 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
0000E51C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
0000E520 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
0000E524 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
0000E528 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
0000E52C <common.ab3@538> XINCLUDE "/Shared/common.ab3"
0000E530 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
0000E534 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
0000E538 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
0000E53C <common.ab3@545> XINCLUDE "/Shared/common.ab3"
0000E540 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
0000E544 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
0000E546 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
0000E547 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
0000E54B <common.ab3@550> XINCLUDE "/Shared/common.ab3"
0000E54F <common.ab3@551> XINCLUDE "/Shared/common.ab3"
0000E553 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
0000E557 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
0000E558 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
0000E55C <common.ab3@557> XINCLUDE "/Shared/common.ab3"
0000E560 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
0000E564 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
0000E568 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
0000E56C <common.ab3@561> XINCLUDE "/Shared/common.ab3"
0000E56D <common.ab3@562> XINCLUDE "/Shared/common.ab3"
0000E56E <common.ab3@564> XINCLUDE "/Shared/common.ab3"
0000E572 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
0000E576 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
0000E578 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
0000E57A <common.ab3@569> XINCLUDE "/Shared/common.ab3"
0000E57E <common.ab3@573> XINCLUDE "/Shared/common.ab3"
0000E582 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
0000E586 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
0000E58A <common.ab3@577> XINCLUDE "/Shared/common.ab3"
0000E58E <common.ab3@579> XINCLUDE "/Shared/common.ab3"
0000E592 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
0000E596 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
0000E59A <common.ab3@583> XINCLUDE "/Shared/common.ab3"
0000E59E <common.ab3@584> XINCLUDE "/Shared/common.ab3"
0000E5A2 <common.ab3@585> XINCLUDE "/Shared/common.ab3"
0000E5A6 <common.ab3@586> XINCLUDE "/Shared/common.ab3"
0000E5AA <common.ab3@587> XINCLUDE "/Shared/common.ab3"
0000E5AE <common.ab3@588> XINCLUDE "/Shared/common.ab3"
0000E5B2 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
0000E5B6 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
0000E5BA <common.ab3@591> XINCLUDE "/Shared/common.ab3"
0000E5BE <common.ab3@592> XINCLUDE "/Shared/common.ab3"
0000E5C2 <common.ab3@593> XINCLUDE "/Shared/common.ab3"
0000E5C6 <common.ab3@594> XINCLUDE "/Shared/common.ab3"
0000E5CA <common.ab3@595> XINCLUDE "/Shared/common.ab3"
0000E5CA <AmiBlitz3.ab2@86> XINCLUDE "/Shared/common.ab3"
0000E5CA <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E5CA <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E5E8 <hashmap.include.bb2@22> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E5F0 <hashmap.include.bb2@24> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E5F8 <hashmap.include.bb2@25> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E626 <hashmap.include.bb2@26> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E652 <hashmap.include.bb2@27> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E66C <hashmap.include.bb2@28> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E67C <hashmap.include.bb2@29> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E694 <hashmap.include.bb2@31> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E69A <hashmap.include.bb2@33> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E6B8 <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E6C0 <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E6EE <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E71E <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E72E <hashmap.include.bb2@41> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E738 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E73E <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E760 <hashmap.include.bb2@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E77E <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E790 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E7B8 <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E7BE <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E7D8 <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E7F0 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E802 <hashmap.include.bb2@60> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E810 <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E844 <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E852 <hashmap.include.bb2@63> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E85C <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E86E <hashmap.include.bb2@65> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E8A8 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E8B8 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E8BE <hashmap.include.bb2@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E8CE <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E8DE <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E8EC <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E8FC <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E920 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E92C <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E93A <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E948 <hashmap.include.bb2@80> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E956 <hashmap.include.bb2@81> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E964 <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E99A <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E9A8 <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E9B8 <hashmap.include.bb2@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E9C0 <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E9C4 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E9DE <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000E9F8 <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EA12 <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EA32 <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EA3C <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EA48 <hashmap.include.bb2@98> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EA5C <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EA8E <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EAA6 <hashmap.include.bb2@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EAB2 <hashmap.include.bb2@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EAC0 <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EACE <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EADC <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EAEA <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EB14 <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EB1E <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EB24 <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EB52 <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EB6A <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EB88 <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EB9C <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EBB4 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EBDC <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EBF4 <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EC02 <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EC10 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EC1E <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EC32 <hashmap.include.bb2@126> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EC86 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ECB0 <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ECF4 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ED14 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ED26 <hashmap.include.bb2@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ED4A <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000ED58 <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EDB0 <hashmap.include.bb2@135> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EDF6 <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EDFC <hashmap.include.bb2@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EE04 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EE2C <hashmap.include.bb2@140> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EE3E <hashmap.include.bb2@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EE50 <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EE8A <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EE9A <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EEA0 <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EEB0 <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EEB6 <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EEBC <hashmap.include.bb2@151> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EED4 <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EF12 <hashmap.include.bb2@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EF30 <hashmap.include.bb2@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EF62 <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EF76 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EF8A <hashmap.include.bb2@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EFA2 <hashmap.include.bb2@162> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EFCA <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EFD4 <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EFE2 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000EFFA <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F000 <hashmap.include.bb2@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F008 <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F028 <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F04E <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F058 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F066 <hashmap.include.bb2@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F070 <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F09C <hashmap.include.bb2@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F0B0 <hashmap.include.bb2@185> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F0B6 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F0C4 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F0FA <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F148 <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F170 <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F18A <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F19C <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F1A6 <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F1C2 <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F1EC <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F20A <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F22E <hashmap.include.bb2@206> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F25C <hashmap.include.bb2@207> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F276 <hashmap.include.bb2@208> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F29E <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F2BC <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F2D8 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F2E6 <hashmap.include.bb2@212> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F2FA <hashmap.include.bb2@214> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F31C <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F33E <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F34C <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F36C <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F39C <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F3A2 <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F3D6 <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F418 <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F428 <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F432 <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F442 <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F448 <hashmap.include.bb2@229> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F454 <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F45A <hashmap.include.bb2@233> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F488 <hashmap.include.bb2@236> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F4B8 <hashmap.include.bb2@238> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F4EE <hashmap.include.bb2@239> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F502 <hashmap.include.bb2@240> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F51A <hashmap.include.bb2@241> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F542 <hashmap.include.bb2@242> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F572 <hashmap.include.bb2@243> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F58E <hashmap.include.bb2@244> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F59C <hashmap.include.bb2@245> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F5B0 <hashmap.include.bb2@246> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F604 <hashmap.include.bb2@247> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F62E <hashmap.include.bb2@248> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F672 <hashmap.include.bb2@249> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F698 <hashmap.include.bb2@250> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F69E <hashmap.include.bb2@252> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F6BC <hashmap.include.bb2@254> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F6DA <hashmap.include.bb2@256> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F708 <hashmap.include.bb2@258> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F70E <hashmap.include.bb2@259> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F728 <hashmap.include.bb2@260> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F748 <hashmap.include.bb2@261> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F768 <hashmap.include.bb2@262> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F78E <hashmap.include.bb2@263> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F7C2 <hashmap.include.bb2@264> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F7DE <hashmap.include.bb2@265> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F7E8 <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F7F6 <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F804 <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F82C <hashmap.include.bb2@269> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F844 <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F852 <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F882 <hashmap.include.bb2@273> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F8AA <hashmap.include.bb2@274> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F8B8 <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F8E8 <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F910 <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F9A4 <hashmap.include.bb2@278> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F9AA <hashmap.include.bb2@279> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F9D8 <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F9E8 <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F9EE <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
0000F9FE <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FA08 <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FA22 <hashmap.include.bb2@287> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FA40 <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FA46 <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FA6C <hashmap.include.bb2@293> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FA9A <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FAC2 <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FAE6 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FB3C <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FB8E <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FBE4 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FBF4 <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FC46 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FC6E <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FC94 <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FCAE <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FCB6 <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FCDE <hashmap.include.bb2@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FD0C <hashmap.include.bb2@314> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FD34 <hashmap.include.bb2@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FD3C <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FD60 <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FD94 <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FDB0 <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FDBA <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FDCE <hashmap.include.bb2@322> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FDEE <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FE0A <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FE18 <hashmap.include.bb2@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FE26 <hashmap.include.bb2@326> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FE2C <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FE44 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FE54 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FE82 <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FEDE <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FF56 <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FFB2 <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FFB8 <hashmap.include.bb2@335> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FFC2 <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FFC8 <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FFF6 <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
0000FFFC <hashmap.include.bb2@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0001001C <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00010026 <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00010038 <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00010048 <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00010052 <hashmap.include.bb2@352> XINCLUDE "/Shared/preprocessor.include.ab3"
0001006C <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
00010086 <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0001008E <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
00010094 <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
0001009E <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000100A6 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
000100CE <hashmap.include.bb2@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000100D4 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000100E8 <hashmap.include.bb2@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00010124 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0001014A <hashmap.include.bb2@368> XINCLUDE "/Shared/preprocessor.include.ab3"
00010158 <hashmap.include.bb2@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00010194 <hashmap.include.bb2@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000101A8 <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000101E4 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000101FA <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
0001020E <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00010218 <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0001023C <hashmap.include.bb2@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00010274 <hashmap.include.bb2@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0001027A <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00010286 <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0001029A <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000102A4 <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000102CC <hashmap.include.bb2@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000102F4 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00010306 <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00010332 <hashmap.include.bb2@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00010366 <hashmap.include.bb2@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00010392 <hashmap.include.bb2@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000103DE <hashmap.include.bb2@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000103EE <hashmap.include.bb2@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000103F4 <hashmap.include.bb2@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00010400 <hashmap.include.bb2@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0001042E <hashmap.include.bb2@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00010430 <hashmap.include.bb2@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00010436 <hashmap.include.bb2@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00010440 <hashmap.include.bb2@406> XINCLUDE "/Shared/preprocessor.include.ab3"
0001046A <hashmap.include.bb2@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00010474 <hashmap.include.bb2@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0001047A <hashmap.include.bb2@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000104A4 <hashmap.include.bb2@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000104AC <hashmap.include.bb2@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000104CC <hashmap.include.bb2@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000104D6 <hashmap.include.bb2@419> XINCLUDE "/Shared/preprocessor.include.ab3"
000104E4 <hashmap.include.bb2@420> XINCLUDE "/Shared/preprocessor.include.ab3"
000104F4 <hashmap.include.bb2@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000104FE <hashmap.include.bb2@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00010518 <hashmap.include.bb2@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00010546 <hashmap.include.bb2@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00010576 <hashmap.include.bb2@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00010592 <hashmap.include.bb2@432> XINCLUDE "/Shared/preprocessor.include.ab3"
000105BA <hashmap.include.bb2@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000105D2 <hashmap.include.bb2@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000105D8 <hashmap.include.bb2@436> XINCLUDE "/Shared/preprocessor.include.ab3"
000105E6 <hashmap.include.bb2@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00010604 <hashmap.include.bb2@438> XINCLUDE "/Shared/preprocessor.include.ab3"
0001062E <hashmap.include.bb2@441> XINCLUDE "/Shared/preprocessor.include.ab3"
0001064C <hashmap.include.bb2@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0001064C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00010666 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00010680 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000106A2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000106D4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000106D8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
000106F2 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
0001070C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00010716 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
0001072C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00010730 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
0001074A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00010764 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
0001077E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
000107A2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
000107A8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
000107D2 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
000107EC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
000107FC <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00010806 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00010814 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00010836 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
0001086A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00010886 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00010890 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
000108AC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
000108BA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
000108CE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000108F0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00010912 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00010930 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0001095E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00010964 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00010974 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00010978 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0001098E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
000109AE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000109B8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000109E2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000109F8 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00010A08 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00010A24 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00010A40 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00010A5C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00010A78 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00010A94 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00010AB0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00010ACC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00010AE8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00010B04 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00010B20 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00010B3C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00010B58 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00010B74 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00010B90 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00010BAC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00010BC8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00010BE4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00010C00 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00010C1C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00010C38 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00010C54 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00010C70 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00010C8C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00010CA8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00010CC4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00010CE0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00010CFC <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00010D18 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00010D34 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00010D50 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00010D6C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00010D88 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00010DA4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00010DC0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00010DDC <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00010DF8 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00010E14 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00010E30 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00010E4C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00010E68 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00010E84 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00010EA0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00010EBC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00010ED8 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00010EF4 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00010F10 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00010F2C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00010F48 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00010F64 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00010F80 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00010F9C <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00010FB8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00010FD4 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00010FF0 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0001100C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00011028 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00011044 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00011060 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0001107C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
00011098 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000110B4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000110D0 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000110EC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00011108 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00011124 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00011140 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0001115C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00011178 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00011194 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000111B0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000111CC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000111E8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00011204 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00011220 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0001123C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00011258 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00011274 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00011290 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000112AC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000112C8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000112E4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00011300 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0001131C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00011338 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00011354 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00011370 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0001138C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000113A8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000113C4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000113E0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000113FC <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00011418 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00011434 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00011450 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0001146C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00011488 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000114A4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000114C0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000114DC <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000114F8 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00011514 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00011530 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0001154C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00011568 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00011584 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000115A0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000115BC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000115D8 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000115F4 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00011610 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0001162C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00011648 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00011664 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00011680 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
0001169C <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000116B8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000116D4 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
000116F0 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
0001170C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00011728 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00011744 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00011760 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
0001177C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00011798 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
000117B4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
000117D0 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
000117EC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00011808 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00011810 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
0001181A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00011824 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
0001182A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
0001185C <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00011870 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
0001188A <preprocessor.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
000118A6 <preprocessor.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
000118AC <preprocessor.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
000118CC <preprocessor.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
000118EE <preprocessor.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
0001192A <preprocessor.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00011930 <preprocessor.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00011936 <preprocessor.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
0001193C <preprocessor.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00011942 <preprocessor.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00011962 <preprocessor.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00011984 <preprocessor.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
000119CE <preprocessor.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
000119D4 <preprocessor.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
000119DA <preprocessor.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
000119F6 <preprocessor.include.ab3@237> XINCLUDE "/Shared/preprocessor.include.ab3"
00011A18 <preprocessor.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00011A62 <preprocessor.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00011A68 <preprocessor.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00011ACE <preprocessor.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00011AF8 <preprocessor.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00011B16 <preprocessor.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00011B44 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00011B60 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00011B92 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00011B9C <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00011BBE <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00011BC8 <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00011BD2 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00011BDC <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00011BF6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00011C24 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00011C40 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00011C4E <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00011C88 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00011C90 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00011CAA <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00011CD0 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00011CF2 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D16 <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D1C <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D2A <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D30 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D38 <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D3E <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D46 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D5A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00011D80 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00011DA8 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00011DB2 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00011DC6 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00011DDA <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00011DEA <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00011E04 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00011E32 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00011E46 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00011E6E <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00011E74 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00011E7C <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00011E82 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00011EAA <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00011EB4 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00011EC2 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00011EE0 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00011EEE <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00011EF6 <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00011EFC <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F10 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F1A <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F28 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F42 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F48 <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F50 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F56 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F6A <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F74 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F7C <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00011F90 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00011FA4 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00011FB8 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00011FD6 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00011FE4 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00011FF4 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
0001201C <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0001203E <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00012052 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00012070 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0001207E <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000120A4 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000120CC <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000120EE <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
0001211E <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
0001214C <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
0001217E <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
0001218C <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
00012192 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000121A2 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000121A8 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000121CE <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000121F0 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00012218 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00012238 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0001225A <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00012260 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
0001226E <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0001227C <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00012282 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0001228A <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000122A8 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000122BC <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000122CC <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000122E2 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000122FA <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
00012316 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00012320 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0001233C <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0001234E <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0001237C <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000123B8 <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000123C8 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000123CE <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000123D4 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
000123EC <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
000123FC <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00012482 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000124BC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000124F2 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00012502 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00012510 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00012516 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00012526 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00012550 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00012556 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
00012582 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00012592 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000125A2 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000125C0 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000125CE <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00012604 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00012628 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
0001263C <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0001264C <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0001266A <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00012678 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
0001269C <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000126C0 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000126CE <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000126DC <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
000126FC <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0001270A <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00012710 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00012716 <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00012724 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00012732 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00012752 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00012760 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00012766 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00012776 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00012780 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00012794 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000127BA <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
000127DC <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00012804 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0001280A <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
00012818 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
0001281E <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00012832 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00012842 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
00012858 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00012870 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0001288C <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00012896 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000128B2 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
000128E0 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
0001291C <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
0001292C <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0001293A <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00012940 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00012950 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0001297A <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00012980 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000129AC <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000129BC <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000129CC <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
000129EA <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
000129F8 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00012A2E <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00012A52 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00012A66 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00012A76 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00012A94 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00012AA2 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00012AC6 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00012AEA <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00012AF0 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00012B00 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00012B06 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00012B28 <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00012B30 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00012B66 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00012B82 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00012B88 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00012BBE <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00012BDA <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00012C02 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00012C20 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00012C3E <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00012C6C <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00012CCE <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00012CE8 <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00012D02 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00012D0C <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00012D4A <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00012D4E <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00012D58 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00012D86 <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00012DA6 <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00012DBE <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00012E1C <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00012E48 <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00012E5A <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00012E6A <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00012E82 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00012E88 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00012EC2 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00012ECC <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00012ED2 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00012EDC <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00012EEE <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00012EEE <AmiBlitz3.ab2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00012EEE <logging.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00012EEE <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00012F12 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.bb2"
00012F1A <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.bb2"
00012F48 <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.bb2"
00012F76 <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.bb2"
00012FE6 <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.bb2"
00012FF4 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.bb2"
00013044 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.bb2"
0001305A <PE_Tools.include.ab3@101> XINCLUDE "PE/logging.include.bb2"
00013064 <PE_Tools.include.ab3@102> XINCLUDE "PE/logging.include.bb2"
00013090 <PE_Tools.include.ab3@103> XINCLUDE "PE/logging.include.bb2"
000130DE <PE_Tools.include.ab3@104> XINCLUDE "PE/logging.include.bb2"
000130F6 <PE_Tools.include.ab3@105> XINCLUDE "PE/logging.include.bb2"
0001310C <PE_Tools.include.ab3@107> XINCLUDE "PE/logging.include.bb2"
00013116 <PE_Tools.include.ab3@108> XINCLUDE "PE/logging.include.bb2"
00013142 <PE_Tools.include.ab3@109> XINCLUDE "PE/logging.include.bb2"
00013190 <PE_Tools.include.ab3@110> XINCLUDE "PE/logging.include.bb2"
000131A8 <PE_Tools.include.ab3@111> XINCLUDE "PE/logging.include.bb2"
000131BE <PE_Tools.include.ab3@113> XINCLUDE "PE/logging.include.bb2"
000131C8 <PE_Tools.include.ab3@114> XINCLUDE "PE/logging.include.bb2"
000131F4 <PE_Tools.include.ab3@115> XINCLUDE "PE/logging.include.bb2"
0001323C <PE_Tools.include.ab3@116> XINCLUDE "PE/logging.include.bb2"
00013254 <PE_Tools.include.ab3@117> XINCLUDE "PE/logging.include.bb2"
0001326E <PE_Tools.include.ab3@180> XINCLUDE "PE/logging.include.bb2"
00013290 <PE_Tools.include.ab3@181> XINCLUDE "PE/logging.include.bb2"
00013296 <PE_Tools.include.ab3@182> XINCLUDE "PE/logging.include.bb2"
000132B8 <PE_Tools.include.ab3@223> XINCLUDE "PE/logging.include.bb2"
000132D0 <PE_Tools.include.ab3@224> XINCLUDE "PE/logging.include.bb2"
000132D6 <PE_Tools.include.ab3@225> XINCLUDE "PE/logging.include.bb2"
000132F0 <PE_Tools.include.ab3@228> XINCLUDE "PE/logging.include.bb2"
0001330E <PE_Tools.include.ab3@229> XINCLUDE "PE/logging.include.bb2"
00013316 <PE_Tools.include.ab3@230> XINCLUDE "PE/logging.include.bb2"
0001333E <PE_Tools.include.ab3@231> XINCLUDE "PE/logging.include.bb2"
00013348 <PE_Tools.include.ab3@232> XINCLUDE "PE/logging.include.bb2"
00013358 <PE_Tools.include.ab3@233> XINCLUDE "PE/logging.include.bb2"
00013366 <PE_Tools.include.ab3@234> XINCLUDE "PE/logging.include.bb2"
0001336C <PE_Tools.include.ab3@235> XINCLUDE "PE/logging.include.bb2"
0001338A <PE_Tools.include.ab3@237> XINCLUDE "PE/logging.include.bb2"
000133A8 <PE_Tools.include.ab3@238> XINCLUDE "PE/logging.include.bb2"
000133C4 <PE_Tools.include.ab3@239> XINCLUDE "PE/logging.include.bb2"
000133D6 <PE_Tools.include.ab3@240> XINCLUDE "PE/logging.include.bb2"
00013404 <PE_Tools.include.ab3@241> XINCLUDE "PE/logging.include.bb2"
00013412 <PE_Tools.include.ab3@242> XINCLUDE "PE/logging.include.bb2"
00013422 <PE_Tools.include.ab3@243> XINCLUDE "PE/logging.include.bb2"
00013428 <PE_Tools.include.ab3@244> XINCLUDE "PE/logging.include.bb2"
0001345A <PE_Tools.include.ab3@245> XINCLUDE "PE/logging.include.bb2"
0001346A <PE_Tools.include.ab3@246> XINCLUDE "PE/logging.include.bb2"
0001347A <PE_Tools.include.ab3@247> XINCLUDE "PE/logging.include.bb2"
00013484 <PE_Tools.include.ab3@249> XINCLUDE "PE/logging.include.bb2"
0001348A <PE_Tools.include.ab3@250> XINCLUDE "PE/logging.include.bb2"
000134A8 <PE_Tools.include.ab3@252> XINCLUDE "PE/logging.include.bb2"
000134AE <PE_Tools.include.ab3@253> XINCLUDE "PE/logging.include.bb2"
000134F2 <PE_Tools.include.ab3@255> XINCLUDE "PE/logging.include.bb2"
0001352A <PE_Tools.include.ab3@256> XINCLUDE "PE/logging.include.bb2"
00013538 <PE_Tools.include.ab3@257> XINCLUDE "PE/logging.include.bb2"
0001353E <PE_Tools.include.ab3@258> XINCLUDE "PE/logging.include.bb2"
0001354C <PE_Tools.include.ab3@259> XINCLUDE "PE/logging.include.bb2"
00013552 <PE_Tools.include.ab3@260> XINCLUDE "PE/logging.include.bb2"
00013570 <PE_Tools.include.ab3@263> XINCLUDE "PE/logging.include.bb2"
0001358A <PE_Tools.include.ab3@264> XINCLUDE "PE/logging.include.bb2"
00013594 <PE_Tools.include.ab3@265> XINCLUDE "PE/logging.include.bb2"
0001359A <PE_Tools.include.ab3@266> XINCLUDE "PE/logging.include.bb2"
000135A4 <PE_Tools.include.ab3@267> XINCLUDE "PE/logging.include.bb2"
000135AA <PE_Tools.include.ab3@269> XINCLUDE "PE/logging.include.bb2"
000135C8 <PE_Tools.include.ab3@271> XINCLUDE "PE/logging.include.bb2"
000135E2 <PE_Tools.include.ab3@272> XINCLUDE "PE/logging.include.bb2"
000135EC <PE_Tools.include.ab3@273> XINCLUDE "PE/logging.include.bb2"
000135F2 <PE_Tools.include.ab3@274> XINCLUDE "PE/logging.include.bb2"
000135FC <PE_Tools.include.ab3@275> XINCLUDE "PE/logging.include.bb2"
00013602 <PE_Tools.include.ab3@277> XINCLUDE "PE/logging.include.bb2"
0001362C <PE_Tools.include.ab3@280> XINCLUDE "PE/logging.include.bb2"
0001365E <PE_Tools.include.ab3@281> XINCLUDE "PE/logging.include.bb2"
00013686 <PE_Tools.include.ab3@282> XINCLUDE "PE/logging.include.bb2"
00013728 <PE_Tools.include.ab3@283> XINCLUDE "PE/logging.include.bb2"
00013738 <PE_Tools.include.ab3@284> XINCLUDE "PE/logging.include.bb2"
00013762 <PE_Tools.include.ab3@286> XINCLUDE "PE/logging.include.bb2"
00013780 <PE_Tools.include.ab3@287> XINCLUDE "PE/logging.include.bb2"
000137AA <PE_Tools.include.ab3@289> XINCLUDE "PE/logging.include.bb2"
000137DC <PE_Tools.include.ab3@291> XINCLUDE "PE/logging.include.bb2"
00013804 <PE_Tools.include.ab3@292> XINCLUDE "PE/logging.include.bb2"
000138A6 <PE_Tools.include.ab3@293> XINCLUDE "PE/logging.include.bb2"
000138B6 <PE_Tools.include.ab3@294> XINCLUDE "PE/logging.include.bb2"
000138E0 <PE_Tools.include.ab3@296> XINCLUDE "PE/logging.include.bb2"
000138FE <PE_Tools.include.ab3@297> XINCLUDE "PE/logging.include.bb2"
00013938 <PE_Tools.include.ab3@300> XINCLUDE "PE/logging.include.bb2"
00013942 <PE_Tools.include.ab3@302> XINCLUDE "PE/logging.include.bb2"
0001397E <PE_Tools.include.ab3@303> XINCLUDE "PE/logging.include.bb2"
000139C8 <PE_Tools.include.ab3@304> XINCLUDE "PE/logging.include.bb2"
000139DC <PE_Tools.include.ab3@305> XINCLUDE "PE/logging.include.bb2"
00013A04 <PE_Tools.include.ab3@307> XINCLUDE "PE/logging.include.bb2"
00013AAA <PE_Tools.include.ab3@308> XINCLUDE "PE/logging.include.bb2"
00013AF0 <PE_Tools.include.ab3@310> XINCLUDE "PE/logging.include.bb2"
00013B7E <PE_Tools.include.ab3@311> XINCLUDE "PE/logging.include.bb2"
00013B84 <PE_Tools.include.ab3@312> XINCLUDE "PE/logging.include.bb2"
00013BAC <PE_Tools.include.ab3@313> XINCLUDE "PE/logging.include.bb2"
00013BB2 <PE_Tools.include.ab3@316> XINCLUDE "PE/logging.include.bb2"
00013BCA <PE_Tools.include.ab3@317> XINCLUDE "PE/logging.include.bb2"
00013BF4 <PE_Tools.include.ab3@318> XINCLUDE "PE/logging.include.bb2"
00013BFA <PE_Tools.include.ab3@320> XINCLUDE "PE/logging.include.bb2"
00013C18 <PE_Tools.include.ab3@321> XINCLUDE "PE/logging.include.bb2"
00013C1E <PE_Tools.include.ab3@323> XINCLUDE "PE/logging.include.bb2"
00013C3C <PE_Tools.include.ab3@324> XINCLUDE "PE/logging.include.bb2"
00013C5C <PE_Tools.include.ab3@326> XINCLUDE "PE/logging.include.bb2"
00013C76 <PE_Tools.include.ab3@328> XINCLUDE "PE/logging.include.bb2"
00013C84 <PE_Tools.include.ab3@329> XINCLUDE "PE/logging.include.bb2"
00013C92 <PE_Tools.include.ab3@330> XINCLUDE "PE/logging.include.bb2"
00013CA4 <PE_Tools.include.ab3@331> XINCLUDE "PE/logging.include.bb2"
00013CD0 <PE_Tools.include.ab3@332> XINCLUDE "PE/logging.include.bb2"
00013CD6 <PE_Tools.include.ab3@333> XINCLUDE "PE/logging.include.bb2"
00013CE0 <PE_Tools.include.ab3@334> XINCLUDE "PE/logging.include.bb2"
00013CE6 <PE_Tools.include.ab3@335> XINCLUDE "PE/logging.include.bb2"
00013D10 <PE_Tools.include.ab3@339> XINCLUDE "PE/logging.include.bb2"
00013D18 <PE_Tools.include.ab3@340> XINCLUDE "PE/logging.include.bb2"
00013D20 <PE_Tools.include.ab3@341> XINCLUDE "PE/logging.include.bb2"
00013D7E <PE_Tools.include.ab3@343> XINCLUDE "PE/logging.include.bb2"
00013DD6 <PE_Tools.include.ab3@344> XINCLUDE "PE/logging.include.bb2"
00013DF4 <PE_Tools.include.ab3@345> XINCLUDE "PE/logging.include.bb2"
00013E04 <PE_Tools.include.ab3@346> XINCLUDE "PE/logging.include.bb2"
00013E12 <PE_Tools.include.ab3@347> XINCLUDE "PE/logging.include.bb2"
00013E1C <PE_Tools.include.ab3@349> XINCLUDE "PE/logging.include.bb2"
00013E36 <PE_Tools.include.ab3@350> XINCLUDE "PE/logging.include.bb2"
00013E50 <PE_Tools.include.ab3@353> XINCLUDE "PE/logging.include.bb2"
00013EDE <PE_Tools.include.ab3@356> XINCLUDE "PE/logging.include.bb2"
00013F72 <PE_Tools.include.ab3@357> XINCLUDE "PE/logging.include.bb2"
00014000 <PE_Tools.include.ab3@358> XINCLUDE "PE/logging.include.bb2"
0001401A <PE_Tools.include.ab3@360> XINCLUDE "PE/logging.include.bb2"
00014028 <PE_Tools.include.ab3@361> XINCLUDE "PE/logging.include.bb2"
00014044 <PE_Tools.include.ab3@362> XINCLUDE "PE/logging.include.bb2"
000140DE <PE_Tools.include.ab3@363> XINCLUDE "PE/logging.include.bb2"
000140E4 <PE_Tools.include.ab3@364> XINCLUDE "PE/logging.include.bb2"
0001411A <PE_Tools.include.ab3@365> XINCLUDE "PE/logging.include.bb2"
00014156 <PE_Tools.include.ab3@366> XINCLUDE "PE/logging.include.bb2"
00014192 <PE_Tools.include.ab3@367> XINCLUDE "PE/logging.include.bb2"
000141CE <PE_Tools.include.ab3@368> XINCLUDE "PE/logging.include.bb2"
0001420A <PE_Tools.include.ab3@369> XINCLUDE "PE/logging.include.bb2"
00014246 <PE_Tools.include.ab3@370> XINCLUDE "PE/logging.include.bb2"
00014282 <PE_Tools.include.ab3@371> XINCLUDE "PE/logging.include.bb2"
00014288 <PE_Tools.include.ab3@372> XINCLUDE "PE/logging.include.bb2"
000142B0 <PE_Tools.include.ab3@373> XINCLUDE "PE/logging.include.bb2"
000142B2 <PE_Tools.include.ab3@374> XINCLUDE "PE/logging.include.bb2"
000142DC <PE_Tools.include.ab3@375> XINCLUDE "PE/logging.include.bb2"
000142F4 <PE_Tools.include.ab3@376> XINCLUDE "PE/logging.include.bb2"
00014312 <PE_Tools.include.ab3@388> XINCLUDE "PE/logging.include.bb2"
00014336 <PE_Tools.include.ab3@390> XINCLUDE "PE/logging.include.bb2"
0001436A <PE_Tools.include.ab3@391> XINCLUDE "PE/logging.include.bb2"
000143BC <PE_Tools.include.ab3@392> XINCLUDE "PE/logging.include.bb2"
00014414 <PE_Tools.include.ab3@393> XINCLUDE "PE/logging.include.bb2"
00014466 <PE_Tools.include.ab3@394> XINCLUDE "PE/logging.include.bb2"
00014472 <PE_Tools.include.ab3@396> XINCLUDE "PE/logging.include.bb2"
00014482 <PE_Tools.include.ab3@397> XINCLUDE "PE/logging.include.bb2"
000144F8 <PE_Tools.include.ab3@398> XINCLUDE "PE/logging.include.bb2"
0001450E <PE_Tools.include.ab3@399> XINCLUDE "PE/logging.include.bb2"
000145A2 <PE_Tools.include.ab3@400> XINCLUDE "PE/logging.include.bb2"
000145B8 <PE_Tools.include.ab3@401> XINCLUDE "PE/logging.include.bb2"
00014674 <PE_Tools.include.ab3@402> XINCLUDE "PE/logging.include.bb2"
0001468A <PE_Tools.include.ab3@403> XINCLUDE "PE/logging.include.bb2"
0001471E <PE_Tools.include.ab3@404> XINCLUDE "PE/logging.include.bb2"
00014724 <PE_Tools.include.ab3@405> XINCLUDE "PE/logging.include.bb2"
000147B8 <PE_Tools.include.ab3@406> XINCLUDE "PE/logging.include.bb2"
000147BA <PE_Tools.include.ab3@407> XINCLUDE "PE/logging.include.bb2"
000147E4 <PE_Tools.include.ab3@408> XINCLUDE "PE/logging.include.bb2"
000147FC <PE_Tools.include.ab3@409> XINCLUDE "PE/logging.include.bb2"
0001482A <PE_Tools.include.ab3@418> XINCLUDE "PE/logging.include.bb2"
0001486E <PE_Tools.include.ab3@422> XINCLUDE "PE/logging.include.bb2"
00014976 <PE_Tools.include.ab3@423> XINCLUDE "PE/logging.include.bb2"
0001499A <PE_Tools.include.ab3@426> XINCLUDE "PE/logging.include.bb2"
000149C6 <PE_Tools.include.ab3@427> XINCLUDE "PE/logging.include.bb2"
000149D0 <PE_Tools.include.ab3@428> XINCLUDE "PE/logging.include.bb2"
000149FA <PE_Tools.include.ab3@429> XINCLUDE "PE/logging.include.bb2"
00014A92 <PE_Tools.include.ab3@430> XINCLUDE "PE/logging.include.bb2"
00014A98 <PE_Tools.include.ab3@431> XINCLUDE "PE/logging.include.bb2"
00014AA8 <PE_Tools.include.ab3@433> XINCLUDE "PE/logging.include.bb2"
00014AAE <PE_Tools.include.ab3@435> XINCLUDE "PE/logging.include.bb2"
00014ABC <PE_Tools.include.ab3@436> XINCLUDE "PE/logging.include.bb2"
00014AF4 <PE_Tools.include.ab3@437> XINCLUDE "PE/logging.include.bb2"
00014B04 <PE_Tools.include.ab3@438> XINCLUDE "PE/logging.include.bb2"
00014B1C <PE_Tools.include.ab3@439> XINCLUDE "PE/logging.include.bb2"
00014BBA <PE_Tools.include.ab3@440> XINCLUDE "PE/logging.include.bb2"
00014C6A <PE_Tools.include.ab3@441> XINCLUDE "PE/logging.include.bb2"
00014CCA <PE_Tools.include.ab3@442> XINCLUDE "PE/logging.include.bb2"
00014D54 <PE_Tools.include.ab3@443> XINCLUDE "PE/logging.include.bb2"
00014D6A <PE_Tools.include.ab3@444> XINCLUDE "PE/logging.include.bb2"
00014D70 <PE_Tools.include.ab3@445> XINCLUDE "PE/logging.include.bb2"
00014D82 <PE_Tools.include.ab3@446> XINCLUDE "PE/logging.include.bb2"
00014DC0 <PE_Tools.include.ab3@447> XINCLUDE "PE/logging.include.bb2"
00014DC6 <PE_Tools.include.ab3@448> XINCLUDE "PE/logging.include.bb2"
00014DCC <PE_Tools.include.ab3@449> XINCLUDE "PE/logging.include.bb2"
00014DEA <PE_Tools.include.ab3@450> XINCLUDE "PE/logging.include.bb2"
00014DF0 <PE_Tools.include.ab3@453> XINCLUDE "PE/logging.include.bb2"
00014E02 <PE_Tools.include.ab3@455> XINCLUDE "PE/logging.include.bb2"
00014E16 <PE_Tools.include.ab3@456> XINCLUDE "PE/logging.include.bb2"
00014E36 <PE_Tools.include.ab3@457> XINCLUDE "PE/logging.include.bb2"
00014E4A <PE_Tools.include.ab3@458> XINCLUDE "PE/logging.include.bb2"
00014E88 <PE_Tools.include.ab3@461> XINCLUDE "PE/logging.include.bb2"
00014EB0 <PE_Tools.include.ab3@462> XINCLUDE "PE/logging.include.bb2"
00014EB6 <PE_Tools.include.ab3@463> XINCLUDE "PE/logging.include.bb2"
00014EFC <PE_Tools.include.ab3@464> XINCLUDE "PE/logging.include.bb2"
00014FB6 <PE_Tools.include.ab3@467> XINCLUDE "PE/logging.include.bb2"
00014FBC <PE_Tools.include.ab3@469> XINCLUDE "PE/logging.include.bb2"
00014FD0 <PE_Tools.include.ab3@471> XINCLUDE "PE/logging.include.bb2"
00015058 <PE_Tools.include.ab3@472> XINCLUDE "PE/logging.include.bb2"
000150BE <PE_Tools.include.ab3@473> XINCLUDE "PE/logging.include.bb2"
000150C4 <PE_Tools.include.ab3@474> XINCLUDE "PE/logging.include.bb2"
0001512A <PE_Tools.include.ab3@475> XINCLUDE "PE/logging.include.bb2"
0001519A <PE_Tools.include.ab3@476> XINCLUDE "PE/logging.include.bb2"
00015200 <PE_Tools.include.ab3@478> XINCLUDE "PE/logging.include.bb2"
00015202 <PE_Tools.include.ab3@479> XINCLUDE "PE/logging.include.bb2"
00015208 <PE_Tools.include.ab3@481> XINCLUDE "PE/logging.include.bb2"
00015216 <PE_Tools.include.ab3@482> XINCLUDE "PE/logging.include.bb2"
0001522C <PE_Tools.include.ab3@483> XINCLUDE "PE/logging.include.bb2"
00015240 <PE_Tools.include.ab3@484> XINCLUDE "PE/logging.include.bb2"
00015256 <PE_Tools.include.ab3@485> XINCLUDE "PE/logging.include.bb2"
0001526A <PE_Tools.include.ab3@486> XINCLUDE "PE/logging.include.bb2"
00015280 <PE_Tools.include.ab3@487> XINCLUDE "PE/logging.include.bb2"
00015286 <PE_Tools.include.ab3@488> XINCLUDE "PE/logging.include.bb2"
0001529A <PE_Tools.include.ab3@489> XINCLUDE "PE/logging.include.bb2"
000152AA <PE_Tools.include.ab3@490> XINCLUDE "PE/logging.include.bb2"
000152DE <PE_Tools.include.ab3@491> XINCLUDE "PE/logging.include.bb2"
000152E8 <PE_Tools.include.ab3@492> XINCLUDE "PE/logging.include.bb2"
000152EA <PE_Tools.include.ab3@493> XINCLUDE "PE/logging.include.bb2"
00015304 <PE_Tools.include.ab3@494> XINCLUDE "PE/logging.include.bb2"
0001531E <PE_Tools.include.ab3@500> XINCLUDE "PE/logging.include.bb2"
00015342 <PE_Tools.include.ab3@501> XINCLUDE "PE/logging.include.bb2"
000153D6 <PE_Tools.include.ab3@502> XINCLUDE "PE/logging.include.bb2"
000153FA <PE_Tools.include.ab3@503> XINCLUDE "PE/logging.include.bb2"
00015424 <PE_Tools.include.ab3@504> XINCLUDE "PE/logging.include.bb2"
0001543C <PE_Tools.include.ab3@505> XINCLUDE "PE/logging.include.bb2"
00015466 <PE_Tools.include.ab3@508> XINCLUDE "PE/logging.include.bb2"
0001550A <PE_Tools.include.ab3@510> XINCLUDE "PE/logging.include.bb2"
00015588 <PE_Tools.include.ab3@511> XINCLUDE "PE/logging.include.bb2"
0001558E <PE_Tools.include.ab3@512> XINCLUDE "PE/logging.include.bb2"
0001560C <PE_Tools.include.ab3@513> XINCLUDE "PE/logging.include.bb2"
00015646 <PE_Tools.include.ab3@515> XINCLUDE "PE/logging.include.bb2"
00015660 <PE_Tools.include.ab3@516> XINCLUDE "PE/logging.include.bb2"
0001568A <PE_Tools.include.ab3@522> XINCLUDE "PE/logging.include.bb2"
00015708 <PE_Tools.include.ab3@523> XINCLUDE "PE/logging.include.bb2"
000157C4 <PE_Tools.include.ab3@525> XINCLUDE "PE/logging.include.bb2"
00015842 <PE_Tools.include.ab3@526> XINCLUDE "PE/logging.include.bb2"
000158C0 <PE_Tools.include.ab3@527> XINCLUDE "PE/logging.include.bb2"
000158C6 <PE_Tools.include.ab3@528> XINCLUDE "PE/logging.include.bb2"
0001590C <PE_Tools.include.ab3@529> XINCLUDE "PE/logging.include.bb2"
00015942 <PE_Tools.include.ab3@531> XINCLUDE "PE/logging.include.bb2"
0001595C <PE_Tools.include.ab3@532> XINCLUDE "PE/logging.include.bb2"
00015986 <PE_Tools.include.ab3@544> XINCLUDE "PE/logging.include.bb2"
00015A00 <PE_Tools.include.ab3@547> XINCLUDE "PE/logging.include.bb2"
00015A7A <PE_Tools.include.ab3@548> XINCLUDE "PE/logging.include.bb2"
00015ABC <PE_Tools.include.ab3@550> XINCLUDE "PE/logging.include.bb2"
00015AC4 <PE_Tools.include.ab3@551> XINCLUDE "PE/logging.include.bb2"
00015ACC <PE_Tools.include.ab3@552> XINCLUDE "PE/logging.include.bb2"
00015B16 <PE_Tools.include.ab3@553> XINCLUDE "PE/logging.include.bb2"
00015B24 <PE_Tools.include.ab3@554> XINCLUDE "PE/logging.include.bb2"
00015B84 <PE_Tools.include.ab3@556> XINCLUDE "PE/logging.include.bb2"
00015B92 <PE_Tools.include.ab3@557> XINCLUDE "PE/logging.include.bb2"
00015C06 <PE_Tools.include.ab3@558> XINCLUDE "PE/logging.include.bb2"
00015C0C <PE_Tools.include.ab3@560> XINCLUDE "PE/logging.include.bb2"
00015C16 <PE_Tools.include.ab3@562> XINCLUDE "PE/logging.include.bb2"
00015C30 <PE_Tools.include.ab3@565> XINCLUDE "PE/logging.include.bb2"
00015C72 <PE_Tools.include.ab3@572> XINCLUDE "PE/logging.include.bb2"
00015CD8 <PE_Tools.include.ab3@573> XINCLUDE "PE/logging.include.bb2"
00015D60 <PE_Tools.include.ab3@574> XINCLUDE "PE/logging.include.bb2"
00015E22 <PE_Tools.include.ab3@575> XINCLUDE "PE/logging.include.bb2"
00015E4C <PE_Tools.include.ab3@576> XINCLUDE "PE/logging.include.bb2"
00015E6C <PE_Tools.include.ab3@577> XINCLUDE "PE/logging.include.bb2"
00015E9A <PE_Tools.include.ab3@590> XINCLUDE "PE/logging.include.bb2"
00015F14 <PE_Tools.include.ab3@593> XINCLUDE "PE/logging.include.bb2"
00015F8E <PE_Tools.include.ab3@594> XINCLUDE "PE/logging.include.bb2"
00015FC0 <PE_Tools.include.ab3@596> XINCLUDE "PE/logging.include.bb2"
00015FD2 <PE_Tools.include.ab3@598> XINCLUDE "PE/logging.include.bb2"
00015FE2 <PE_Tools.include.ab3@600> XINCLUDE "PE/logging.include.bb2"
00015FF6 <PE_Tools.include.ab3@602> XINCLUDE "PE/logging.include.bb2"
00016004 <PE_Tools.include.ab3@603> XINCLUDE "PE/logging.include.bb2"
00016064 <PE_Tools.include.ab3@605> XINCLUDE "PE/logging.include.bb2"
00016072 <PE_Tools.include.ab3@606> XINCLUDE "PE/logging.include.bb2"
000160E6 <PE_Tools.include.ab3@607> XINCLUDE "PE/logging.include.bb2"
000160F8 <PE_Tools.include.ab3@610> XINCLUDE "PE/logging.include.bb2"
00016166 <PE_Tools.include.ab3@611> XINCLUDE "PE/logging.include.bb2"
000161E4 <PE_Tools.include.ab3@612> XINCLUDE "PE/logging.include.bb2"
000161F2 <PE_Tools.include.ab3@613> XINCLUDE "PE/logging.include.bb2"
000161F8 <PE_Tools.include.ab3@614> XINCLUDE "PE/logging.include.bb2"
00016222 <PE_Tools.include.ab3@615> XINCLUDE "PE/logging.include.bb2"
00016228 <PE_Tools.include.ab3@618> XINCLUDE "PE/logging.include.bb2"
00016246 <PE_Tools.include.ab3@621> XINCLUDE "PE/logging.include.bb2"
00016260 <PE_Tools.include.ab3@625> XINCLUDE "PE/logging.include.bb2"
00016284 <PE_Tools.include.ab3@645> XINCLUDE "PE/logging.include.bb2"
000162B0 <PE_Tools.include.ab3@647> XINCLUDE "PE/logging.include.bb2"
000162C8 <PE_Tools.include.ab3@648> XINCLUDE "PE/logging.include.bb2"
0001630C <PE_Tools.include.ab3@650> XINCLUDE "PE/logging.include.bb2"
00016336 <PE_Tools.include.ab3@651> XINCLUDE "PE/logging.include.bb2"
00016366 <PE_Tools.include.ab3@652> XINCLUDE "PE/logging.include.bb2"
0001639E <PE_Tools.include.ab3@653> XINCLUDE "PE/logging.include.bb2"
000163D6 <PE_Tools.include.ab3@654> XINCLUDE "PE/logging.include.bb2"
000163E6 <PE_Tools.include.ab3@655> XINCLUDE "PE/logging.include.bb2"
00016402 <PE_Tools.include.ab3@656> XINCLUDE "PE/logging.include.bb2"
0001641A <PE_Tools.include.ab3@657> XINCLUDE "PE/logging.include.bb2"
0001642C <PE_Tools.include.ab3@659> XINCLUDE "PE/logging.include.bb2"
00016456 <PE_Tools.include.ab3@660> XINCLUDE "PE/logging.include.bb2"
000164C4 <PE_Tools.include.ab3@661> XINCLUDE "PE/logging.include.bb2"
000164D4 <PE_Tools.include.ab3@662> XINCLUDE "PE/logging.include.bb2"
000164E4 <PE_Tools.include.ab3@663> XINCLUDE "PE/logging.include.bb2"
000164E8 <PE_Tools.include.ab3@665> XINCLUDE "PE/logging.include.bb2"
00016502 <PE_Tools.include.ab3@669> XINCLUDE "PE/logging.include.bb2"
00016522 <PE_Tools.include.ab3@671> XINCLUDE "PE/logging.include.bb2"
00016542 <PE_Tools.include.ab3@672> XINCLUDE "PE/logging.include.bb2"
0001655A <PE_Tools.include.ab3@673> XINCLUDE "PE/logging.include.bb2"
00016570 <PE_Tools.include.ab3@674> XINCLUDE "PE/logging.include.bb2"
00016576 <PE_Tools.include.ab3@675> XINCLUDE "PE/logging.include.bb2"
00016598 <PE_Tools.include.ab3@679> XINCLUDE "PE/logging.include.bb2"
000165B2 <PE_Tools.include.ab3@680> XINCLUDE "PE/logging.include.bb2"
000165CC <PE_Tools.include.ab3@681> XINCLUDE "PE/logging.include.bb2"
000165E6 <PE_Tools.include.ab3@682> XINCLUDE "PE/logging.include.bb2"
00016600 <PE_Tools.include.ab3@683> XINCLUDE "PE/logging.include.bb2"
0001661A <PE_Tools.include.ab3@684> XINCLUDE "PE/logging.include.bb2"
00016634 <PE_Tools.include.ab3@685> XINCLUDE "PE/logging.include.bb2"
00016644 <PE_Tools.include.ab3@687> XINCLUDE "PE/logging.include.bb2"
00016654 <PE_Tools.include.ab3@688> XINCLUDE "PE/logging.include.bb2"
00016664 <PE_Tools.include.ab3@689> XINCLUDE "PE/logging.include.bb2"
00016672 <PE_Tools.include.ab3@690> XINCLUDE "PE/logging.include.bb2"
00016680 <PE_Tools.include.ab3@691> XINCLUDE "PE/logging.include.bb2"
0001668E <PE_Tools.include.ab3@692> XINCLUDE "PE/logging.include.bb2"
000166DE <PE_Tools.include.ab3@693> XINCLUDE "PE/logging.include.bb2"
000166E8 <PE_Tools.include.ab3@696> XINCLUDE "PE/logging.include.bb2"
000166EE <PE_Tools.include.ab3@697> XINCLUDE "PE/logging.include.bb2"
00016708 <PE_Tools.include.ab3@700> XINCLUDE "PE/logging.include.bb2"
00016718 <PE_Tools.include.ab3@701> XINCLUDE "PE/logging.include.bb2"
00016730 <PE_Tools.include.ab3@702> XINCLUDE "PE/logging.include.bb2"
00016748 <PE_Tools.include.ab3@703> XINCLUDE "PE/logging.include.bb2"
00016760 <PE_Tools.include.ab3@705> XINCLUDE "PE/logging.include.bb2"
00016766 <PE_Tools.include.ab3@706> XINCLUDE "PE/logging.include.bb2"
00016780 <PE_Tools.include.ab3@710> XINCLUDE "PE/logging.include.bb2"
00016786 <PE_Tools.include.ab3@711> XINCLUDE "PE/logging.include.bb2"
000167A6 <PE_Tools.include.ab3@712> XINCLUDE "PE/logging.include.bb2"
000167CC <PE_Tools.include.ab3@713> XINCLUDE "PE/logging.include.bb2"
000167F2 <PE_Tools.include.ab3@714> XINCLUDE "PE/logging.include.bb2"
00016818 <PE_Tools.include.ab3@715> XINCLUDE "PE/logging.include.bb2"
0001683E <PE_Tools.include.ab3@716> XINCLUDE "PE/logging.include.bb2"
00016864 <PE_Tools.include.ab3@717> XINCLUDE "PE/logging.include.bb2"
0001688A <PE_Tools.include.ab3@718> XINCLUDE "PE/logging.include.bb2"
000168B0 <PE_Tools.include.ab3@719> XINCLUDE "PE/logging.include.bb2"
000168D6 <PE_Tools.include.ab3@720> XINCLUDE "PE/logging.include.bb2"
000168FC <PE_Tools.include.ab3@721> XINCLUDE "PE/logging.include.bb2"
00016922 <PE_Tools.include.ab3@722> XINCLUDE "PE/logging.include.bb2"
00016948 <PE_Tools.include.ab3@723> XINCLUDE "PE/logging.include.bb2"
0001694A <PE_Tools.include.ab3@724> XINCLUDE "PE/logging.include.bb2"
00016950 <PE_Tools.include.ab3@725> XINCLUDE "PE/logging.include.bb2"
00016996 <PE_Tools.include.ab3@727> XINCLUDE "PE/logging.include.bb2"
000169B0 <PE_Tools.include.ab3@735> XINCLUDE "PE/logging.include.bb2"
000169C8 <PE_Tools.include.ab3@737> XINCLUDE "PE/logging.include.bb2"
000169E0 <PE_Tools.include.ab3@738> XINCLUDE "PE/logging.include.bb2"
000169F8 <PE_Tools.include.ab3@739> XINCLUDE "PE/logging.include.bb2"
00016A16 <PE_Tools.include.ab3@741> XINCLUDE "PE/logging.include.bb2"
00016A34 <PE_Tools.include.ab3@742> XINCLUDE "PE/logging.include.bb2"
00016A52 <PE_Tools.include.ab3@743> XINCLUDE "PE/logging.include.bb2"
00016A66 <PE_Tools.include.ab3@745> XINCLUDE "PE/logging.include.bb2"
00016A90 <PE_Tools.include.ab3@746> XINCLUDE "PE/logging.include.bb2"
00016ABA <PE_Tools.include.ab3@747> XINCLUDE "PE/logging.include.bb2"
00016AE4 <PE_Tools.include.ab3@748> XINCLUDE "PE/logging.include.bb2"
00016AFA <PE_Tools.include.ab3@749> XINCLUDE "PE/logging.include.bb2"
00016B12 <PE_Tools.include.ab3@751> XINCLUDE "PE/logging.include.bb2"
00016B18 <PE_Tools.include.ab3@752> XINCLUDE "PE/logging.include.bb2"
00016B78 <PE_Tools.include.ab3@753> XINCLUDE "PE/logging.include.bb2"
00016BFE <PE_Tools.include.ab3@754> XINCLUDE "PE/logging.include.bb2"
00016C42 <PE_Tools.include.ab3@755> XINCLUDE "PE/logging.include.bb2"
00016C44 <PE_Tools.include.ab3@756> XINCLUDE "PE/logging.include.bb2"
00016C52 <PE_Tools.include.ab3@757> XINCLUDE "PE/logging.include.bb2"
00016C58 <PE_Tools.include.ab3@758> XINCLUDE "PE/logging.include.bb2"
00016C5C <PE_Tools.include.ab3@759> XINCLUDE "PE/logging.include.bb2"
00016C8E <PE_Tools.include.ab3@767> XINCLUDE "PE/logging.include.bb2"
00016CA6 <PE_Tools.include.ab3@768> XINCLUDE "PE/logging.include.bb2"
00016CF2 <PE_Tools.include.ab3@769> XINCLUDE "PE/logging.include.bb2"
00016D8C <PE_Tools.include.ab3@770> XINCLUDE "PE/logging.include.bb2"
00016DB6 <PE_Tools.include.ab3@771> XINCLUDE "PE/logging.include.bb2"
00016DBC <PE_Tools.include.ab3@772> XINCLUDE "PE/logging.include.bb2"
00016DE6 <PE_Tools.include.ab3@773> XINCLUDE "PE/logging.include.bb2"
00016E04 <PE_Tools.include.ab3@775> XINCLUDE "PE/logging.include.bb2"
00016E2E <PE_Tools.include.ab3@781> XINCLUDE "PE/logging.include.bb2"
00016E86 <PE_Tools.include.ab3@782> XINCLUDE "PE/logging.include.bb2"
00016EDE <PE_Tools.include.ab3@783> XINCLUDE "PE/logging.include.bb2"
00017000 <PE_Tools.include.ab3@784> XINCLUDE "PE/logging.include.bb2"
0001700E <PE_Tools.include.ab3@785> XINCLUDE "PE/logging.include.bb2"
00017038 <PE_Tools.include.ab3@786> XINCLUDE "PE/logging.include.bb2"
00017056 <PE_Tools.include.ab3@787> XINCLUDE "PE/logging.include.bb2"
00017080 <PE_Tools.include.ab3@789> XINCLUDE "PE/logging.include.bb2"
000170A8 <PE_Tools.include.ab3@790> XINCLUDE "PE/logging.include.bb2"
00017100 <PE_Tools.include.ab3@791> XINCLUDE "PE/logging.include.bb2"
00017158 <PE_Tools.include.ab3@792> XINCLUDE "PE/logging.include.bb2"
000171D8 <PE_Tools.include.ab3@793> XINCLUDE "PE/logging.include.bb2"
000171E6 <PE_Tools.include.ab3@794> XINCLUDE "PE/logging.include.bb2"
00017210 <PE_Tools.include.ab3@795> XINCLUDE "PE/logging.include.bb2"
0001722E <PE_Tools.include.ab3@796> XINCLUDE "PE/logging.include.bb2"
00017258 <PE_Tools.include.ab3@798> XINCLUDE "PE/logging.include.bb2"
00017280 <PE_Tools.include.ab3@799> XINCLUDE "PE/logging.include.bb2"
000172D8 <PE_Tools.include.ab3@800> XINCLUDE "PE/logging.include.bb2"
00017330 <PE_Tools.include.ab3@801> XINCLUDE "PE/logging.include.bb2"
0001734E <PE_Tools.include.ab3@802> XINCLUDE "PE/logging.include.bb2"
0001739A <PE_Tools.include.ab3@803> XINCLUDE "PE/logging.include.bb2"
000173A0 <PE_Tools.include.ab3@804> XINCLUDE "PE/logging.include.bb2"
000173E6 <PE_Tools.include.ab3@805> XINCLUDE "PE/logging.include.bb2"
000173F4 <PE_Tools.include.ab3@807> XINCLUDE "PE/logging.include.bb2"
0001741E <PE_Tools.include.ab3@808> XINCLUDE "PE/logging.include.bb2"
0001743C <PE_Tools.include.ab3@809> XINCLUDE "PE/logging.include.bb2"
0001743C <logging.include.ab3@11> XINCLUDE "PE/logging.include.bb2"
0001743C <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
0001743C <asl.include.ab3@1> XINCLUDE "PE/logging.include.bb2"
00017460 <asl.include.ab3@93> XINCLUDE "PE/logging.include.bb2"
00017488 <asl.include.ab3@94> XINCLUDE "PE/logging.include.bb2"
000174AC <asl.include.ab3@95> XINCLUDE "PE/logging.include.bb2"
000174DA <asl.include.ab3@156> XINCLUDE "PE/logging.include.bb2"
0001754A <asl.include.ab3@157> XINCLUDE "PE/logging.include.bb2"
00017568 <asl.include.ab3@158> XINCLUDE "PE/logging.include.bb2"
00017580 <asl.include.ab3@159> XINCLUDE "PE/logging.include.bb2"
0001759E <asl.include.ab3@176> XINCLUDE "PE/logging.include.bb2"
000177BC <asl.include.ab3@177> XINCLUDE "PE/logging.include.bb2"
000177E8 <asl.include.ab3@180> XINCLUDE "PE/logging.include.bb2"
00017816 <asl.include.ab3@181> XINCLUDE "PE/logging.include.bb2"
00017842 <asl.include.ab3@182> XINCLUDE "PE/logging.include.bb2"
0001786E <asl.include.ab3@183> XINCLUDE "PE/logging.include.bb2"
0001789A <asl.include.ab3@184> XINCLUDE "PE/logging.include.bb2"
000178C6 <asl.include.ab3@185> XINCLUDE "PE/logging.include.bb2"
0001790A <asl.include.ab3@186> XINCLUDE "PE/logging.include.bb2"
00017978 <asl.include.ab3@188> XINCLUDE "PE/logging.include.bb2"
000179E6 <asl.include.ab3@189> XINCLUDE "PE/logging.include.bb2"
00017A54 <asl.include.ab3@190> XINCLUDE "PE/logging.include.bb2"
00017A9E <asl.include.ab3@191> XINCLUDE "PE/logging.include.bb2"
00017ABA <asl.include.ab3@192> XINCLUDE "PE/logging.include.bb2"
00017AE4 <asl.include.ab3@194> XINCLUDE "PE/logging.include.bb2"
00017AEE <asl.include.ab3@195> XINCLUDE "PE/logging.include.bb2"
00017B0C <asl.include.ab3@196> XINCLUDE "PE/logging.include.bb2"
00017B2E <asl.include.ab3@198> XINCLUDE "PE/logging.include.bb2"
00017B5C <asl.include.ab3@200> XINCLUDE "PE/logging.include.bb2"
00017B94 <asl.include.ab3@201> XINCLUDE "PE/logging.include.bb2"
00017BA8 <asl.include.ab3@202> XINCLUDE "PE/logging.include.bb2"
00017BAE <asl.include.ab3@203> XINCLUDE "PE/logging.include.bb2"
00017BBE <asl.include.ab3@205> XINCLUDE "PE/logging.include.bb2"
00017BCE <asl.include.ab3@206> XINCLUDE "PE/logging.include.bb2"
00017BDE <asl.include.ab3@207> XINCLUDE "PE/logging.include.bb2"
00017BEE <asl.include.ab3@208> XINCLUDE "PE/logging.include.bb2"
00017BFE <asl.include.ab3@211> XINCLUDE "PE/logging.include.bb2"
00017C08 <asl.include.ab3@213> XINCLUDE "PE/logging.include.bb2"
00017C1C <asl.include.ab3@214> XINCLUDE "PE/logging.include.bb2"
00017C32 <asl.include.ab3@229> XINCLUDE "PE/logging.include.bb2"
00017C60 <asl.include.ab3@230> XINCLUDE "PE/logging.include.bb2"
00017C68 <asl.include.ab3@231> XINCLUDE "PE/logging.include.bb2"
00017C7E <asl.include.ab3@245> XINCLUDE "PE/logging.include.bb2"
00017C8E <asl.include.ab3@246> XINCLUDE "PE/logging.include.bb2"
00017C92 <asl.include.ab3@247> XINCLUDE "PE/logging.include.bb2"
00017CDC <asl.include.ab3@262> XINCLUDE "PE/logging.include.bb2"
00017D10 <asl.include.ab3@263> XINCLUDE "PE/logging.include.bb2"
00017D48 <asl.include.ab3@264> XINCLUDE "PE/logging.include.bb2"
00017D80 <asl.include.ab3@265> XINCLUDE "PE/logging.include.bb2"
00017D9A <asl.include.ab3@266> XINCLUDE "PE/logging.include.bb2"
00017DC8 <asl.include.ab3@294> XINCLUDE "PE/logging.include.bb2"
00017FE6 <asl.include.ab3@296> XINCLUDE "PE/logging.include.bb2"
00018014 <asl.include.ab3@298> XINCLUDE "PE/logging.include.bb2"
00018040 <asl.include.ab3@300> XINCLUDE "PE/logging.include.bb2"
0001807C <asl.include.ab3@301> XINCLUDE "PE/logging.include.bb2"
000180A8 <asl.include.ab3@302> XINCLUDE "PE/logging.include.bb2"
000180D4 <asl.include.ab3@303> XINCLUDE "PE/logging.include.bb2"
00018100 <asl.include.ab3@304> XINCLUDE "PE/logging.include.bb2"
0001812C <asl.include.ab3@305> XINCLUDE "PE/logging.include.bb2"
00018158 <asl.include.ab3@306> XINCLUDE "PE/logging.include.bb2"
00018184 <asl.include.ab3@307> XINCLUDE "PE/logging.include.bb2"
000181B0 <asl.include.ab3@308> XINCLUDE "PE/logging.include.bb2"
000181DC <asl.include.ab3@309> XINCLUDE "PE/logging.include.bb2"
00018266 <asl.include.ab3@311> XINCLUDE "PE/logging.include.bb2"
000182F0 <asl.include.ab3@312> XINCLUDE "PE/logging.include.bb2"
0001838E <asl.include.ab3@313> XINCLUDE "PE/logging.include.bb2"
000183D8 <asl.include.ab3@314> XINCLUDE "PE/logging.include.bb2"
00018418 <asl.include.ab3@315> XINCLUDE "PE/logging.include.bb2"
0001841E <asl.include.ab3@316> XINCLUDE "PE/logging.include.bb2"
00018468 <asl.include.ab3@319> XINCLUDE "PE/logging.include.bb2"
000184A8 <asl.include.ab3@320> XINCLUDE "PE/logging.include.bb2"
000184D2 <asl.include.ab3@321> XINCLUDE "PE/logging.include.bb2"
000184D8 <asl.include.ab3@322> XINCLUDE "PE/logging.include.bb2"
00018502 <asl.include.ab3@323> XINCLUDE "PE/logging.include.bb2"
0001852C <asl.include.ab3@325> XINCLUDE "PE/logging.include.bb2"
00018556 <asl.include.ab3@327> XINCLUDE "PE/logging.include.bb2"
00018560 <asl.include.ab3@328> XINCLUDE "PE/logging.include.bb2"
0001857E <asl.include.ab3@329> XINCLUDE "PE/logging.include.bb2"
000185A0 <asl.include.ab3@330> XINCLUDE "PE/logging.include.bb2"
000185CE <asl.include.ab3@331> XINCLUDE "PE/logging.include.bb2"
000185FC <asl.include.ab3@332> XINCLUDE "PE/logging.include.bb2"
0001862A <asl.include.ab3@333> XINCLUDE "PE/logging.include.bb2"
00018670 <asl.include.ab3@336> XINCLUDE "PE/logging.include.bb2"
000186B6 <asl.include.ab3@337> XINCLUDE "PE/logging.include.bb2"
000186FC <asl.include.ab3@338> XINCLUDE "PE/logging.include.bb2"
00018734 <asl.include.ab3@340> XINCLUDE "PE/logging.include.bb2"
00018832 <asl.include.ab3@341> XINCLUDE "PE/logging.include.bb2"
00018850 <asl.include.ab3@343> XINCLUDE "PE/logging.include.bb2"
0001885A <asl.include.ab3@345> XINCLUDE "PE/logging.include.bb2"
00018880 <asl.include.ab3@346> XINCLUDE "PE/logging.include.bb2"
00018892 <asl.include.ab3@348> XINCLUDE "PE/logging.include.bb2"
000188C0 <asl.include.ab3@349> XINCLUDE "PE/logging.include.bb2"
000188E8 <asl.include.ab3@350> XINCLUDE "PE/logging.include.bb2"
000188FA <asl.include.ab3@351> XINCLUDE "PE/logging.include.bb2"
00018950 <asl.include.ab3@352> XINCLUDE "PE/logging.include.bb2"
00018986 <asl.include.ab3@353> XINCLUDE "PE/logging.include.bb2"
00018996 <asl.include.ab3@355> XINCLUDE "PE/logging.include.bb2"
0001899C <asl.include.ab3@356> XINCLUDE "PE/logging.include.bb2"
000189AE <asl.include.ab3@357> XINCLUDE "PE/logging.include.bb2"
000189B8 <asl.include.ab3@358> XINCLUDE "PE/logging.include.bb2"
000189F2 <asl.include.ab3@359> XINCLUDE "PE/logging.include.bb2"
000189F8 <asl.include.ab3@360> XINCLUDE "PE/logging.include.bb2"
00018A50 <asl.include.ab3@361> XINCLUDE "PE/logging.include.bb2"
00018A6E <asl.include.ab3@363> XINCLUDE "PE/logging.include.bb2"
00018A74 <asl.include.ab3@366> XINCLUDE "PE/logging.include.bb2"
00018A84 <asl.include.ab3@369> XINCLUDE "PE/logging.include.bb2"
00018A94 <asl.include.ab3@370> XINCLUDE "PE/logging.include.bb2"
00018AA4 <asl.include.ab3@371> XINCLUDE "PE/logging.include.bb2"
00018AB4 <asl.include.ab3@372> XINCLUDE "PE/logging.include.bb2"
00018AC4 <asl.include.ab3@374> XINCLUDE "PE/logging.include.bb2"
00018ACE <asl.include.ab3@376> XINCLUDE "PE/logging.include.bb2"
00018AE2 <asl.include.ab3@377> XINCLUDE "PE/logging.include.bb2"
00018AF8 <asl.include.ab3@393> XINCLUDE "PE/logging.include.bb2"
00018B20 <asl.include.ab3@395> XINCLUDE "PE/logging.include.bb2"
00018B2A <asl.include.ab3@396> XINCLUDE "PE/logging.include.bb2"
00018B3C <asl.include.ab3@397> XINCLUDE "PE/logging.include.bb2"
00018B76 <asl.include.ab3@398> XINCLUDE "PE/logging.include.bb2"
00018B80 <asl.include.ab3@399> XINCLUDE "PE/logging.include.bb2"
00018BAA <asl.include.ab3@401> XINCLUDE "PE/logging.include.bb2"
00018BC2 <asl.include.ab3@402> XINCLUDE "PE/logging.include.bb2"
00018BDC <asl.include.ab3@418> XINCLUDE "PE/logging.include.bb2"
00018BFA <asl.include.ab3@420> XINCLUDE "PE/logging.include.bb2"
00018C00 <asl.include.ab3@421> XINCLUDE "PE/logging.include.bb2"
00018C52 <asl.include.ab3@438> XINCLUDE "PE/logging.include.bb2"
00018C80 <asl.include.ab3@440> XINCLUDE "PE/logging.include.bb2"
00018D12 <asl.include.ab3@441> XINCLUDE "PE/logging.include.bb2"
00018D58 <asl.include.ab3@442> XINCLUDE "PE/logging.include.bb2"
00018DEA <asl.include.ab3@443> XINCLUDE "PE/logging.include.bb2"
00018E04 <asl.include.ab3@444> XINCLUDE "PE/logging.include.bb2"
00018E32 <asl.include.ab3@458> XINCLUDE "PE/logging.include.bb2"
00018E60 <asl.include.ab3@460> XINCLUDE "PE/logging.include.bb2"
00018EA6 <asl.include.ab3@461> XINCLUDE "PE/logging.include.bb2"
00018EBE <asl.include.ab3@462> XINCLUDE "PE/logging.include.bb2"
00018EEC <asl.include.ab3@476> XINCLUDE "PE/logging.include.bb2"
00018F1A <asl.include.ab3@478> XINCLUDE "PE/logging.include.bb2"
00018F60 <asl.include.ab3@479> XINCLUDE "PE/logging.include.bb2"
00018F78 <asl.include.ab3@480> XINCLUDE "PE/logging.include.bb2"
00018FC6 <asl.include.ab3@498> XINCLUDE "PE/logging.include.bb2"
00018FF4 <asl.include.ab3@500> XINCLUDE "PE/logging.include.bb2"
00019036 <asl.include.ab3@501> XINCLUDE "PE/logging.include.bb2"
0001907C <asl.include.ab3@502> XINCLUDE "PE/logging.include.bb2"
000190C2 <asl.include.ab3@503> XINCLUDE "PE/logging.include.bb2"
000190DC <asl.include.ab3@504> XINCLUDE "PE/logging.include.bb2"
000190F6 <asl.include.ab3@521> XINCLUDE "PE/logging.include.bb2"
00019124 <asl.include.ab3@523> XINCLUDE "PE/logging.include.bb2"
00019160 <asl.include.ab3@524> XINCLUDE "PE/logging.include.bb2"
0001916A <asl.include.ab3@525> XINCLUDE "PE/logging.include.bb2"
00019184 <asl.include.ab3@543> XINCLUDE "PE/logging.include.bb2"
000191B2 <asl.include.ab3@545> XINCLUDE "PE/logging.include.bb2"
000191EE <asl.include.ab3@546> XINCLUDE "PE/logging.include.bb2"
000191F8 <asl.include.ab3@547> XINCLUDE "PE/logging.include.bb2"
00019212 <asl.include.ab3@564> XINCLUDE "PE/logging.include.bb2"
00019240 <asl.include.ab3@566> XINCLUDE "PE/logging.include.bb2"
0001927C <asl.include.ab3@567> XINCLUDE "PE/logging.include.bb2"
00019286 <asl.include.ab3@568> XINCLUDE "PE/logging.include.bb2"
000192AC <asl.include.ab3@585> XINCLUDE "PE/logging.include.bb2"
000192B2 <asl.include.ab3@587> XINCLUDE "PE/logging.include.bb2"
000192B8 <asl.include.ab3@588> XINCLUDE "PE/logging.include.bb2"
000192BE <asl.include.ab3@589> XINCLUDE "PE/logging.include.bb2"
000192C4 <asl.include.ab3@590> XINCLUDE "PE/logging.include.bb2"
000192C8 <asl.include.ab3@591> XINCLUDE "PE/logging.include.bb2"
000192E2 <asl.include.ab3@607> XINCLUDE "PE/logging.include.bb2"
0001930A <asl.include.ab3@608> XINCLUDE "PE/logging.include.bb2"
0001932E <asl.include.ab3@609> XINCLUDE "PE/logging.include.bb2"
0001935E <asl.include.ab3@610> XINCLUDE "PE/logging.include.bb2"
00019388 <asl.include.ab3@612> XINCLUDE "PE/logging.include.bb2"
000193A0 <asl.include.ab3@613> XINCLUDE "PE/logging.include.bb2"
000193EA <asl.include.ab3@629> XINCLUDE "PE/logging.include.bb2"
0001941E <asl.include.ab3@630> XINCLUDE "PE/logging.include.bb2"
00019456 <asl.include.ab3@631> XINCLUDE "PE/logging.include.bb2"
0001948E <asl.include.ab3@632> XINCLUDE "PE/logging.include.bb2"
000194A8 <asl.include.ab3@633> XINCLUDE "PE/logging.include.bb2"
000194D2 <asl.include.ab3@677> XINCLUDE "PE/logging.include.bb2"
000196F0 <asl.include.ab3@678> XINCLUDE "PE/logging.include.bb2"
0001971C <asl.include.ab3@680> XINCLUDE "PE/logging.include.bb2"
00019782 <asl.include.ab3@681> XINCLUDE "PE/logging.include.bb2"
000197AE <asl.include.ab3@682> XINCLUDE "PE/logging.include.bb2"
000197DA <asl.include.ab3@683> XINCLUDE "PE/logging.include.bb2"
00019806 <asl.include.ab3@684> XINCLUDE "PE/logging.include.bb2"
00019832 <asl.include.ab3@685> XINCLUDE "PE/logging.include.bb2"
0001987C <asl.include.ab3@687> XINCLUDE "PE/logging.include.bb2"
000198C6 <asl.include.ab3@688> XINCLUDE "PE/logging.include.bb2"
00019910 <asl.include.ab3@689> XINCLUDE "PE/logging.include.bb2"
0001995A <asl.include.ab3@690> XINCLUDE "PE/logging.include.bb2"
000199A4 <asl.include.ab3@691> XINCLUDE "PE/logging.include.bb2"
000199EE <asl.include.ab3@692> XINCLUDE "PE/logging.include.bb2"
00019A38 <asl.include.ab3@694> XINCLUDE "PE/logging.include.bb2"
00019A80 <asl.include.ab3@695> XINCLUDE "PE/logging.include.bb2"
00019ACA <asl.include.ab3@696> XINCLUDE "PE/logging.include.bb2"
00019B14 <asl.include.ab3@697> XINCLUDE "PE/logging.include.bb2"
00019B40 <asl.include.ab3@699> XINCLUDE "PE/logging.include.bb2"
00019B6C <asl.include.ab3@700> XINCLUDE "PE/logging.include.bb2"
00019B98 <asl.include.ab3@701> XINCLUDE "PE/logging.include.bb2"
00019BC4 <asl.include.ab3@702> XINCLUDE "PE/logging.include.bb2"
00019BF0 <asl.include.ab3@703> XINCLUDE "PE/logging.include.bb2"
00019C0C <asl.include.ab3@704> XINCLUDE "PE/logging.include.bb2"
00019C36 <asl.include.ab3@706> XINCLUDE "PE/logging.include.bb2"
00019C40 <asl.include.ab3@707> XINCLUDE "PE/logging.include.bb2"
00019C5E <asl.include.ab3@708> XINCLUDE "PE/logging.include.bb2"
00019C80 <asl.include.ab3@709> XINCLUDE "PE/logging.include.bb2"
00019C92 <asl.include.ab3@710> XINCLUDE "PE/logging.include.bb2"
00019CA4 <asl.include.ab3@711> XINCLUDE "PE/logging.include.bb2"
00019CB6 <asl.include.ab3@712> XINCLUDE "PE/logging.include.bb2"
00019CC8 <asl.include.ab3@713> XINCLUDE "PE/logging.include.bb2"
00019CD6 <asl.include.ab3@714> XINCLUDE "PE/logging.include.bb2"
00019CE8 <asl.include.ab3@715> XINCLUDE "PE/logging.include.bb2"
00019CF2 <asl.include.ab3@716> XINCLUDE "PE/logging.include.bb2"
00019D02 <asl.include.ab3@718> XINCLUDE "PE/logging.include.bb2"
00019D12 <asl.include.ab3@719> XINCLUDE "PE/logging.include.bb2"
00019D22 <asl.include.ab3@720> XINCLUDE "PE/logging.include.bb2"
00019D32 <asl.include.ab3@721> XINCLUDE "PE/logging.include.bb2"
00019D42 <asl.include.ab3@723> XINCLUDE "PE/logging.include.bb2"
00019D48 <asl.include.ab3@724> XINCLUDE "PE/logging.include.bb2"
00019D82 <asl.include.ab3@725> XINCLUDE "PE/logging.include.bb2"
00019D8C <asl.include.ab3@727> XINCLUDE "PE/logging.include.bb2"
00019D92 <asl.include.ab3@728> XINCLUDE "PE/logging.include.bb2"
00019DAC <asl.include.ab3@746> XINCLUDE "PE/logging.include.bb2"
00019DD4 <asl.include.ab3@748> XINCLUDE "PE/logging.include.bb2"
00019DF6 <asl.include.ab3@749> XINCLUDE "PE/logging.include.bb2"
00019E1E <asl.include.ab3@750> XINCLUDE "PE/logging.include.bb2"
00019E4C <asl.include.ab3@751> XINCLUDE "PE/logging.include.bb2"
00019E56 <asl.include.ab3@752> XINCLUDE "PE/logging.include.bb2"
00019E70 <asl.include.ab3@753> XINCLUDE "PE/logging.include.bb2"
00019E98 <asl.include.ab3@756> XINCLUDE "PE/logging.include.bb2"
00019EAC <asl.include.ab3@757> XINCLUDE "PE/logging.include.bb2"
00019EB6 <asl.include.ab3@758> XINCLUDE "PE/logging.include.bb2"
00019EF0 <asl.include.ab3@759> XINCLUDE "PE/logging.include.bb2"
00019F1E <asl.include.ab3@760> XINCLUDE "PE/logging.include.bb2"
00019F48 <asl.include.ab3@763> XINCLUDE "PE/logging.include.bb2"
00019F70 <asl.include.ab3@764> XINCLUDE "PE/logging.include.bb2"
00019F86 <asl.include.ab3@782> XINCLUDE "PE/logging.include.bb2"
00019F96 <asl.include.ab3@784> XINCLUDE "PE/logging.include.bb2"
00019F9A <asl.include.ab3@785> XINCLUDE "PE/logging.include.bb2"
00019FB0 <asl.include.ab3@801> XINCLUDE "PE/logging.include.bb2"
00019FC0 <asl.include.ab3@803> XINCLUDE "PE/logging.include.bb2"
00019FC4 <asl.include.ab3@804> XINCLUDE "PE/logging.include.bb2"
00019FDA <asl.include.ab3@821> XINCLUDE "PE/logging.include.bb2"
00019FEC <asl.include.ab3@823> XINCLUDE "PE/logging.include.bb2"
00019FF0 <asl.include.ab3@824> XINCLUDE "PE/logging.include.bb2"
0001A006 <asl.include.ab3@840> XINCLUDE "PE/logging.include.bb2"
0001A016 <asl.include.ab3@842> XINCLUDE "PE/logging.include.bb2"
0001A01A <asl.include.ab3@843> XINCLUDE "PE/logging.include.bb2"
0001A030 <asl.include.ab3@859> XINCLUDE "PE/logging.include.bb2"
0001A042 <asl.include.ab3@861> XINCLUDE "PE/logging.include.bb2"
0001A046 <asl.include.ab3@862> XINCLUDE "PE/logging.include.bb2"
0001A05C <asl.include.ab3@876> XINCLUDE "PE/logging.include.bb2"
0001A06E <asl.include.ab3@878> XINCLUDE "PE/logging.include.bb2"
0001A072 <asl.include.ab3@879> XINCLUDE "PE/logging.include.bb2"
0001A094 <asl.include.ab3@899> XINCLUDE "PE/logging.include.bb2"
0001A0E0 <asl.include.ab3@900> XINCLUDE "PE/logging.include.bb2"
0001A0EA <asl.include.ab3@901> XINCLUDE "PE/logging.include.bb2"
0001A0F0 <asl.include.ab3@902> XINCLUDE "PE/logging.include.bb2"
0001A112 <asl.include.ab3@923> XINCLUDE "PE/logging.include.bb2"
0001A11E <asl.include.ab3@924> XINCLUDE "PE/logging.include.bb2"
0001A12A <asl.include.ab3@925> XINCLUDE "PE/logging.include.bb2"
0001A136 <asl.include.ab3@926> XINCLUDE "PE/logging.include.bb2"
0001A13A <asl.include.ab3@927> XINCLUDE "PE/logging.include.bb2"
0001A15C <asl.include.ab3@948> XINCLUDE "PE/logging.include.bb2"
0001A168 <asl.include.ab3@949> XINCLUDE "PE/logging.include.bb2"
0001A174 <asl.include.ab3@950> XINCLUDE "PE/logging.include.bb2"
0001A180 <asl.include.ab3@951> XINCLUDE "PE/logging.include.bb2"
0001A184 <asl.include.ab3@952> XINCLUDE "PE/logging.include.bb2"
0001A1A6 <asl.include.ab3@972> XINCLUDE "PE/logging.include.bb2"
0001A1B2 <asl.include.ab3@973> XINCLUDE "PE/logging.include.bb2"
0001A1BE <asl.include.ab3@974> XINCLUDE "PE/logging.include.bb2"
0001A1CA <asl.include.ab3@975> XINCLUDE "PE/logging.include.bb2"
0001A1CE <asl.include.ab3@976> XINCLUDE "PE/logging.include.bb2"
0001A1E8 <asl.include.ab3@990> XINCLUDE "PE/logging.include.bb2"
0001A1F4 <asl.include.ab3@992> XINCLUDE "PE/logging.include.bb2"
0001A21C <asl.include.ab3@993> XINCLUDE "PE/logging.include.bb2"
0001A230 <asl.include.ab3@994> XINCLUDE "PE/logging.include.bb2"
0001A23A <asl.include.ab3@995> XINCLUDE "PE/logging.include.bb2"
0001A270 <asl.include.ab3@996> XINCLUDE "PE/logging.include.bb2"
0001A298 <asl.include.ab3@998> XINCLUDE "PE/logging.include.bb2"
0001A2C0 <asl.include.ab3@999> XINCLUDE "PE/logging.include.bb2"
0001A2E2 <asl.include.ab3@1002> XINCLUDE "PE/logging.include.bb2"
0001A2E2 <file.include.bb2@57> XINCLUDE "PE/logging.include.bb2"
0001A2F8 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
0001A30E <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
0001A324 <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
0001A33A <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
0001A346 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
0001A352 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0001A35E <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
0001A36A <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
0001A392 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
0001A3BA <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
0001A3E2 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
0001A406 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
0001A42A <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
0001A444 <file.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
0001A454 <file.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
0001A456 <file.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
0001A458 <file.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
0001A45A <file.include.bb2@133> XINCLUDE "PE/logging.include.bb2"
0001A45E <file.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
0001A460 <file.include.bb2@135> XINCLUDE "PE/logging.include.bb2"
0001A462 <file.include.bb2@136> XINCLUDE "PE/logging.include.bb2"
0001A464 <file.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
0001A46E <file.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
0001A474 <file.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
0001A48E <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
0001A49E <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
0001A4A0 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
0001A4A2 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
0001A4A4 <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0001A4A6 <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0001A4A8 <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
0001A4AC <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
0001A4B0 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
0001A4B4 <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0001A4B6 <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0001A4B8 <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0001A4BA <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
0001A4BC <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
0001A4BE <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
0001A4C0 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
0001A4C2 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
0001A4CC <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
0001A4D2 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
0001A4F0 <file.include.bb2@190> XINCLUDE "PE/logging.include.bb2"
0001A50C <file.include.bb2@192> XINCLUDE "PE/logging.include.bb2"
0001A526 <file.include.bb2@193> XINCLUDE "PE/logging.include.bb2"
0001A546 <file.include.bb2@194> XINCLUDE "PE/logging.include.bb2"
0001A586 <file.include.bb2@195> XINCLUDE "PE/logging.include.bb2"
0001A58A <file.include.bb2@198> XINCLUDE "PE/logging.include.bb2"
0001A5A4 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0001A5C2 <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
0001A5C8 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0001A5E2 <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
0001A5FE <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
0001A624 <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
0001A644 <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
0001A64E <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
0001A67A <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0001A69C <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
0001A6B6 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
0001A6BC <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
0001A6F6 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
0001A714 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
0001A71A <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
0001A738 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
0001A73E <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
0001A760 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
0001A780 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0001A7B8 <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0001A7D4 <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0001A7DA <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
0001A7E0 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
0001A7E6 <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0001A7EC <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
0001A808 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
0001A854 <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
0001A85A <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
0001A894 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
0001A8A0 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0001A8BC <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
0001A8C2 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0001A8FC <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
0001A906 <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0001A90C <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
0001A92A <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
0001A958 <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
0001A95E <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
0001A974 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
0001A97C <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0001A9D8 <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0001A9E6 <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
0001A9EC <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
0001AA1E <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
0001AA28 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
0001AA2E <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
0001AA48 <file.include.bb2@360> XINCLUDE "PE/logging.include.bb2"
0001AA62 <file.include.bb2@362> XINCLUDE "PE/logging.include.bb2"
0001AA66 <file.include.bb2@363> XINCLUDE "PE/logging.include.bb2"
0001AA80 <file.include.bb2@378> XINCLUDE "PE/logging.include.bb2"
0001AA9A <file.include.bb2@380> XINCLUDE "PE/logging.include.bb2"
0001AA9E <file.include.bb2@381> XINCLUDE "PE/logging.include.bb2"
0001AAB8 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
0001AACA <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
0001AB28 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
0001AB62 <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
0001AB9C <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
0001ABBA <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
0001ABD8 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
0001ABEE <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
0001AC0A <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
0001AC24 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
0001ACA2 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
0001ACB4 <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
0001ACCA <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
0001ACF4 <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
0001ACFE <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
0001AD0E <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
0001AD12 <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
0001AD40 <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
0001AD5A <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
0001AD6C <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
0001AD8C <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
0001ADA2 <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
0001ADDA <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
0001AE04 <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
0001AE2E <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
0001AE46 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
0001AE60 <file.include.bb2@475> XINCLUDE "PE/logging.include.bb2"
0001AE7C <file.include.bb2@477> XINCLUDE "PE/logging.include.bb2"
0001AF20 <file.include.bb2@478> XINCLUDE "PE/logging.include.bb2"
0001AF2A <file.include.bb2@479> XINCLUDE "PE/logging.include.bb2"
0001AF3C <file.include.bb2@480> XINCLUDE "PE/logging.include.bb2"
0001AF42 <file.include.bb2@481> XINCLUDE "PE/logging.include.bb2"
0001AFB6 <file.include.bb2@482> XINCLUDE "PE/logging.include.bb2"
0001AFC8 <file.include.bb2@484> XINCLUDE "PE/logging.include.bb2"
0001AFF2 <file.include.bb2@502> XINCLUDE "PE/logging.include.bb2"
0001AFFE <file.include.bb2@504> XINCLUDE "PE/logging.include.bb2"
0001B028 <file.include.bb2@505> XINCLUDE "PE/logging.include.bb2"
0001B044 <file.include.bb2@506> XINCLUDE "PE/logging.include.bb2"
0001B0A0 <file.include.bb2@507> XINCLUDE "PE/logging.include.bb2"
0001B0B0 <file.include.bb2@509> XINCLUDE "PE/logging.include.bb2"
0001B0BA <file.include.bb2@510> XINCLUDE "PE/logging.include.bb2"
0001B0D4 <file.include.bb2@511> XINCLUDE "PE/logging.include.bb2"
0001B0EA <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
0001B132 <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
0001B152 <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
0001B15A <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
0001B198 <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
0001B1A4 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
0001B1AE <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
0001B1C0 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
0001B1C6 <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
0001B1D4 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
0001B1FC <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
0001B210 <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
0001B238 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
0001B24C <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
0001B274 <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
0001B288 <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
0001B2B0 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
0001B2B2 <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
0001B2D6 <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
0001B30E <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
0001B398 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0001B3C0 <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
0001B3F0 <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
0001B428 <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
0001B480 <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0001B4D8 <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0001B558 <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0001B58C <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
0001B5C0 <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
0001B5C6 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
0001B5D4 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
0001B608 <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
0001B630 <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
0001B6E8 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
0001B768 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
0001B79C <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
0001B7BC <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0001B7C2 <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
0001B7C8 <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
0001B898 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
0001B8AC <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
0001B964 <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
0001B9E4 <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
0001BAD4 <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0001BADE <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
0001BB12 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
0001BB32 <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
0001BB38 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
0001BB3E <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
0001BC0E <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
0001BC22 <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
0001BC56 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
0001BC7E <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
0001BD36 <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
0001BDB6 <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
0001BDEA <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
0001BE0A <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
0001BE10 <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
0001BE16 <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
0001BEE6 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
0001BEFA <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
0001BFB2 <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
0001C032 <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
0001C066 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
0001C086 <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
0001C08C <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
0001C092 <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
0001C162 <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
0001C168 <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
0001C1A2 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
0001C1A4 <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
0001C1AA <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
0001C242 <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
0001C254 <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
0001C26A <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
0001C2D4 <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
0001C33E <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
0001C358 <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
0001C374 <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0001C392 <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
0001C3AC <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
0001C3B6 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0001C3D2 <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0001C3EC <file.include.bb2@688> XINCLUDE "PE/logging.include.bb2"
0001C44C <file.include.bb2@690> XINCLUDE "PE/logging.include.bb2"
0001C488 <file.include.bb2@691> XINCLUDE "PE/logging.include.bb2"
0001C492 <file.include.bb2@692> XINCLUDE "PE/logging.include.bb2"
0001C4AC <file.include.bb2@710> XINCLUDE "PE/logging.include.bb2"
0001C50C <file.include.bb2@712> XINCLUDE "PE/logging.include.bb2"
0001C548 <file.include.bb2@713> XINCLUDE "PE/logging.include.bb2"
0001C552 <file.include.bb2@714> XINCLUDE "PE/logging.include.bb2"
0001C56C <file.include.bb2@733> XINCLUDE "PE/logging.include.bb2"
0001C610 <file.include.bb2@735> XINCLUDE "PE/logging.include.bb2"
0001C670 <file.include.bb2@736> XINCLUDE "PE/logging.include.bb2"
0001C69A <file.include.bb2@737> XINCLUDE "PE/logging.include.bb2"
0001C6B2 <file.include.bb2@738> XINCLUDE "PE/logging.include.bb2"
0001C6CC <file.include.bb2@755> XINCLUDE "PE/logging.include.bb2"
0001C70C <file.include.bb2@757> XINCLUDE "PE/logging.include.bb2"
0001C714 <file.include.bb2@758> XINCLUDE "PE/logging.include.bb2"
0001C71A <file.include.bb2@759> XINCLUDE "PE/logging.include.bb2"
0001C734 <file.include.bb2@777> XINCLUDE "PE/logging.include.bb2"
0001C740 <file.include.bb2@779> XINCLUDE "PE/logging.include.bb2"
0001C752 <file.include.bb2@780> XINCLUDE "PE/logging.include.bb2"
0001C798 <file.include.bb2@781> XINCLUDE "PE/logging.include.bb2"
0001C7F0 <file.include.bb2@782> XINCLUDE "PE/logging.include.bb2"
0001C7FA <file.include.bb2@785> XINCLUDE "PE/logging.include.bb2"
0001C800 <file.include.bb2@786> XINCLUDE "PE/logging.include.bb2"
0001C822 <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
0001C828 <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0001C84E <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
0001C86A <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
0001C87C <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
0001C8DA <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
0001C912 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
0001C918 <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
0001C960 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
0001C97A <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
0001C988 <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
0001C98E <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
0001C994 <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
0001C9A6 <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
0001CA92 <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
0001CA98 <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
0001CADE <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
0001CAEA <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
0001CB50 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
0001CB96 <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
0001CBDE <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
0001CC46 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
0001CC4C <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
0001CC86 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
0001CC8C <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
0001CCEE <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0001CCF8 <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0001CD0C <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
0001CD26 <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0001CD2C <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
0001CD52 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
0001CD6E <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
0001CDCC <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
0001CDD0 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
0001CDF2 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
0001CDF8 <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
0001CE14 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
0001CE34 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
0001CE72 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
0001CEC0 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
0001CEF6 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0001CEFC <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
0001CF02 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
0001CF32 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
0001CF38 <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0001CF3E <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
0001CF50 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
0001CFAE <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
0001CFE6 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
0001CFEC <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
0001D034 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0001D04E <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
0001D05C <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
0001D062 <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0001D068 <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
0001D07A <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
0001D080 <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
0001D086 <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0001D0E4 <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0001D12C <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
0001D136 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0001D13C <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
0001D156 <file.include.bb2@917> XINCLUDE "PE/logging.include.bb2"
0001D172 <file.include.bb2@919> XINCLUDE "PE/logging.include.bb2"
0001D194 <file.include.bb2@920> XINCLUDE "PE/logging.include.bb2"
0001D1E2 <file.include.bb2@921> XINCLUDE "PE/logging.include.bb2"
0001D1FE <file.include.bb2@922> XINCLUDE "PE/logging.include.bb2"
0001D216 <file.include.bb2@923> XINCLUDE "PE/logging.include.bb2"
0001D248 <file.include.bb2@924> XINCLUDE "PE/logging.include.bb2"
0001D252 <file.include.bb2@925> XINCLUDE "PE/logging.include.bb2"
0001D27C <file.include.bb2@926> XINCLUDE "PE/logging.include.bb2"
0001D298 <file.include.bb2@927> XINCLUDE "PE/logging.include.bb2"
0001D2AC <file.include.bb2@928> XINCLUDE "PE/logging.include.bb2"
0001D344 <file.include.bb2@929> XINCLUDE "PE/logging.include.bb2"
0001D36A <file.include.bb2@933> XINCLUDE "PE/logging.include.bb2"
0001D36E <file.include.bb2@936> XINCLUDE "PE/logging.include.bb2"
0001D388 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0001D38E <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
0001D3D6 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
0001D414 <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
0001D41E <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
0001D424 <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
0001D452 <file.include.bb2@992> XINCLUDE "PE/logging.include.bb2"
0001D478 <file.include.bb2@994> XINCLUDE "PE/logging.include.bb2"
0001D4A6 <file.include.bb2@995> XINCLUDE "PE/logging.include.bb2"
0001D4AE <file.include.bb2@996> XINCLUDE "PE/logging.include.bb2"
0001D4CE <file.include.bb2@997> XINCLUDE "PE/logging.include.bb2"
0001D50A <file.include.bb2@999> XINCLUDE "PE/logging.include.bb2"
0001D520 <file.include.bb2@1000> XINCLUDE "PE/logging.include.bb2"
0001D53A <file.include.bb2@1001> XINCLUDE "PE/logging.include.bb2"
0001D564 <file.include.bb2@1002> XINCLUDE "PE/logging.include.bb2"
0001D56E <file.include.bb2@1003> XINCLUDE "PE/logging.include.bb2"
0001D59C <file.include.bb2@1004> XINCLUDE "PE/logging.include.bb2"
0001D5B0 <file.include.bb2@1005> XINCLUDE "PE/logging.include.bb2"
0001D5C4 <file.include.bb2@1006> XINCLUDE "PE/logging.include.bb2"
0001D604 <file.include.bb2@1007> XINCLUDE "PE/logging.include.bb2"
0001D612 <file.include.bb2@1008> XINCLUDE "PE/logging.include.bb2"
0001D618 <file.include.bb2@1009> XINCLUDE "PE/logging.include.bb2"
0001D624 <file.include.bb2@1010> XINCLUDE "PE/logging.include.bb2"
0001D62C <file.include.bb2@1011> XINCLUDE "PE/logging.include.bb2"
0001D632 <file.include.bb2@1013> XINCLUDE "PE/logging.include.bb2"
0001D63A <file.include.bb2@1014> XINCLUDE "PE/logging.include.bb2"
0001D642 <file.include.bb2@1015> XINCLUDE "PE/logging.include.bb2"
0001D6B6 <file.include.bb2@1016> XINCLUDE "PE/logging.include.bb2"
0001D6CC <file.include.bb2@1018> XINCLUDE "PE/logging.include.bb2"
0001D6F2 <file.include.bb2@1020> XINCLUDE "PE/logging.include.bb2"
0001D734 <file.include.bb2@1021> XINCLUDE "PE/logging.include.bb2"
0001D73E <file.include.bb2@1022> XINCLUDE "PE/logging.include.bb2"
0001D744 <file.include.bb2@1023> XINCLUDE "PE/logging.include.bb2"
0001D772 <file.include.bb2@1051> XINCLUDE "PE/logging.include.bb2"
0001D798 <file.include.bb2@1053> XINCLUDE "PE/logging.include.bb2"
0001D7C6 <file.include.bb2@1054> XINCLUDE "PE/logging.include.bb2"
0001D7CE <file.include.bb2@1055> XINCLUDE "PE/logging.include.bb2"
0001D7EE <file.include.bb2@1056> XINCLUDE "PE/logging.include.bb2"
0001D82A <file.include.bb2@1058> XINCLUDE "PE/logging.include.bb2"
0001D840 <file.include.bb2@1060> XINCLUDE "PE/logging.include.bb2"
0001D85A <file.include.bb2@1061> XINCLUDE "PE/logging.include.bb2"
0001D884 <file.include.bb2@1062> XINCLUDE "PE/logging.include.bb2"
0001D88E <file.include.bb2@1063> XINCLUDE "PE/logging.include.bb2"
0001D8BC <file.include.bb2@1064> XINCLUDE "PE/logging.include.bb2"
0001D8D0 <file.include.bb2@1065> XINCLUDE "PE/logging.include.bb2"
0001D8E4 <file.include.bb2@1066> XINCLUDE "PE/logging.include.bb2"
0001D924 <file.include.bb2@1067> XINCLUDE "PE/logging.include.bb2"
0001D932 <file.include.bb2@1068> XINCLUDE "PE/logging.include.bb2"
0001D938 <file.include.bb2@1069> XINCLUDE "PE/logging.include.bb2"
0001D944 <file.include.bb2@1070> XINCLUDE "PE/logging.include.bb2"
0001D94C <file.include.bb2@1071> XINCLUDE "PE/logging.include.bb2"
0001D952 <file.include.bb2@1073> XINCLUDE "PE/logging.include.bb2"
0001D95A <file.include.bb2@1074> XINCLUDE "PE/logging.include.bb2"
0001D962 <file.include.bb2@1075> XINCLUDE "PE/logging.include.bb2"
0001D9D6 <file.include.bb2@1076> XINCLUDE "PE/logging.include.bb2"
0001D9EC <file.include.bb2@1078> XINCLUDE "PE/logging.include.bb2"
0001DA12 <file.include.bb2@1080> XINCLUDE "PE/logging.include.bb2"
0001DA48 <file.include.bb2@1081> XINCLUDE "PE/logging.include.bb2"
0001DA52 <file.include.bb2@1082> XINCLUDE "PE/logging.include.bb2"
0001DA58 <file.include.bb2@1083> XINCLUDE "PE/logging.include.bb2"
0001DA7E <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
0001DA84 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
0001DAAA <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
0001DB0A <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
0001DB24 <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
0001DB2E <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
0001DB48 <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
0001DB52 <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
0001DB6A <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
0001DB9A <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
0001DBB6 <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
0001DBC4 <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
0001DBCA <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
0001DC04 <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
0001DC0E <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
0001DC14 <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
0001DC32 <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
0001DC38 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
0001DC4A <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
0001DC58 <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
0001DC76 <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
0001DCAC <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
0001DCBE <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
0001DD08 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
0001DDF2 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
0001DE10 <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
0001DE36 <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
0001DE52 <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
0001DE7E <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
0001DE88 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
0001DEB6 <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
0001DED0 <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
0001DEEC <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
0001DEF2 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
0001DF2C <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
0001DF32 <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
0001DF38 <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
0001DF3E <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
0001DFDE <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
0001DFE4 <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
0001E086 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
0001E08C <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
0001E0C6 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0001E0D0 <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
0001E0D6 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0001E0FC <file.include.bb2@1200> XINCLUDE "PE/logging.include.bb2"
0001E102 <file.include.bb2@1202> XINCLUDE "PE/logging.include.bb2"
0001E108 <file.include.bb2@1203> XINCLUDE "PE/logging.include.bb2"
0001E10E <file.include.bb2@1204> XINCLUDE "PE/logging.include.bb2"
0001E114 <file.include.bb2@1205> XINCLUDE "PE/logging.include.bb2"
0001E118 <file.include.bb2@1206> XINCLUDE "PE/logging.include.bb2"
0001E162 <file.include.bb2@1223> XINCLUDE "PE/logging.include.bb2"
0001E1CE <file.include.bb2@1225> XINCLUDE "PE/logging.include.bb2"
0001E23A <file.include.bb2@1226> XINCLUDE "PE/logging.include.bb2"
0001E26E <file.include.bb2@1227> XINCLUDE "PE/logging.include.bb2"
0001E288 <file.include.bb2@1228> XINCLUDE "PE/logging.include.bb2"
0001E2A2 <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
0001E2C0 <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
0001E2C6 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
0001E2E0 <file.include.bb2@1264> XINCLUDE "PE/logging.include.bb2"
0001E2FA <file.include.bb2@1266> XINCLUDE "PE/logging.include.bb2"
0001E2FE <file.include.bb2@1267> XINCLUDE "PE/logging.include.bb2"
0001E32C <file.include.bb2@1285> XINCLUDE "PE/logging.include.bb2"
0001E348 <file.include.bb2@1287> XINCLUDE "PE/logging.include.bb2"
0001E386 <file.include.bb2@1288> XINCLUDE "PE/logging.include.bb2"
0001E38C <file.include.bb2@1289> XINCLUDE "PE/logging.include.bb2"
0001E3C6 <file.include.bb2@1290> XINCLUDE "PE/logging.include.bb2"
0001E3CC <file.include.bb2@1291> XINCLUDE "PE/logging.include.bb2"
0001E3D6 <file.include.bb2@1293> XINCLUDE "PE/logging.include.bb2"
0001E3F0 <file.include.bb2@1294> XINCLUDE "PE/logging.include.bb2"
0001E40A <file.include.bb2@1312> XINCLUDE "PE/logging.include.bb2"
0001E410 <file.include.bb2@1314> XINCLUDE "PE/logging.include.bb2"
0001E438 <file.include.bb2@1315> XINCLUDE "PE/logging.include.bb2"
0001E454 <file.include.bb2@1316> XINCLUDE "PE/logging.include.bb2"
0001E472 <file.include.bb2@1317> XINCLUDE "PE/logging.include.bb2"
0001E498 <file.include.bb2@1318> XINCLUDE "PE/logging.include.bb2"
0001E4D2 <file.include.bb2@1319> XINCLUDE "PE/logging.include.bb2"
0001E4D8 <file.include.bb2@1320> XINCLUDE "PE/logging.include.bb2"
0001E4EA <file.include.bb2@1321> XINCLUDE "PE/logging.include.bb2"
0001E52E <file.include.bb2@1322> XINCLUDE "PE/logging.include.bb2"
0001E546 <file.include.bb2@1323> XINCLUDE "PE/logging.include.bb2"
0001E54C <file.include.bb2@1327> XINCLUDE "PE/logging.include.bb2"
0001E586 <file.include.bb2@1328> XINCLUDE "PE/logging.include.bb2"
0001E5B0 <file.include.bb2@1330> XINCLUDE "PE/logging.include.bb2"
0001E5C8 <file.include.bb2@1331> XINCLUDE "PE/logging.include.bb2"
0001E5E6 <file.include.bb2@1358> XINCLUDE "PE/logging.include.bb2"
0001E5EC <file.include.bb2@1360> XINCLUDE "PE/logging.include.bb2"
0001E614 <file.include.bb2@1361> XINCLUDE "PE/logging.include.bb2"
0001E630 <file.include.bb2@1362> XINCLUDE "PE/logging.include.bb2"
0001E64E <file.include.bb2@1363> XINCLUDE "PE/logging.include.bb2"
0001E668 <file.include.bb2@1364> XINCLUDE "PE/logging.include.bb2"
0001E68A <file.include.bb2@1365> XINCLUDE "PE/logging.include.bb2"
0001E760 <file.include.bb2@1366> XINCLUDE "PE/logging.include.bb2"
0001E766 <file.include.bb2@1367> XINCLUDE "PE/logging.include.bb2"
0001E778 <file.include.bb2@1368> XINCLUDE "PE/logging.include.bb2"
0001E7BC <file.include.bb2@1369> XINCLUDE "PE/logging.include.bb2"
0001E7D4 <file.include.bb2@1370> XINCLUDE "PE/logging.include.bb2"
0001E830 <file.include.bb2@1371> XINCLUDE "PE/logging.include.bb2"
0001E89E <file.include.bb2@1372> XINCLUDE "PE/logging.include.bb2"
0001E8A4 <file.include.bb2@1377> XINCLUDE "PE/logging.include.bb2"
0001E8DE <file.include.bb2@1378> XINCLUDE "PE/logging.include.bb2"
0001E908 <file.include.bb2@1380> XINCLUDE "PE/logging.include.bb2"
0001E920 <file.include.bb2@1381> XINCLUDE "PE/logging.include.bb2"
0001E93A <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
0001E95A <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
0001EA0E <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
0001EA14 <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
0001EA1A <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
0001EA44 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
0001EA50 <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
0001EA56 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0001EA70 <file.include.bb2@1423> XINCLUDE "PE/logging.include.bb2"
0001EA90 <file.include.bb2@1425> XINCLUDE "PE/logging.include.bb2"
0001EB42 <file.include.bb2@1426> XINCLUDE "PE/logging.include.bb2"
0001EB4A <file.include.bb2@1427> XINCLUDE "PE/logging.include.bb2"
0001EB50 <file.include.bb2@1428> XINCLUDE "PE/logging.include.bb2"
0001EB7C <file.include.bb2@1429> XINCLUDE "PE/logging.include.bb2"
0001EB86 <file.include.bb2@1431> XINCLUDE "PE/logging.include.bb2"
0001EB8C <file.include.bb2@1432> XINCLUDE "PE/logging.include.bb2"
0001EBA6 <file.include.bb2@1448> XINCLUDE "PE/logging.include.bb2"
0001EBC6 <file.include.bb2@1450> XINCLUDE "PE/logging.include.bb2"
0001EC78 <file.include.bb2@1451> XINCLUDE "PE/logging.include.bb2"
0001EC80 <file.include.bb2@1452> XINCLUDE "PE/logging.include.bb2"
0001EC86 <file.include.bb2@1453> XINCLUDE "PE/logging.include.bb2"
0001ECB2 <file.include.bb2@1454> XINCLUDE "PE/logging.include.bb2"
0001ECBC <file.include.bb2@1456> XINCLUDE "PE/logging.include.bb2"
0001ECC2 <file.include.bb2@1457> XINCLUDE "PE/logging.include.bb2"
0001ECDC <file.include.bb2@1475> XINCLUDE "PE/logging.include.bb2"
0001ECFC <file.include.bb2@1477> XINCLUDE "PE/logging.include.bb2"
0001EDAE <file.include.bb2@1478> XINCLUDE "PE/logging.include.bb2"
0001EDB4 <file.include.bb2@1479> XINCLUDE "PE/logging.include.bb2"
0001EDBA <file.include.bb2@1480> XINCLUDE "PE/logging.include.bb2"
0001EDE4 <file.include.bb2@1481> XINCLUDE "PE/logging.include.bb2"
0001EDEE <file.include.bb2@1483> XINCLUDE "PE/logging.include.bb2"
0001EDF4 <file.include.bb2@1484> XINCLUDE "PE/logging.include.bb2"
0001EE12 <file.include.bb2@1503> XINCLUDE "PE/logging.include.bb2"
0001EE2E <file.include.bb2@1505> XINCLUDE "PE/logging.include.bb2"
0001EE38 <file.include.bb2@1506> XINCLUDE "PE/logging.include.bb2"
0001EE3E <file.include.bb2@1507> XINCLUDE "PE/logging.include.bb2"
0001EE5C <file.include.bb2@1525> XINCLUDE "PE/logging.include.bb2"
0001EE78 <file.include.bb2@1527> XINCLUDE "PE/logging.include.bb2"
0001EE82 <file.include.bb2@1528> XINCLUDE "PE/logging.include.bb2"
0001EE88 <file.include.bb2@1529> XINCLUDE "PE/logging.include.bb2"
0001EEA6 <file.include.bb2@1547> XINCLUDE "PE/logging.include.bb2"
0001EEC2 <file.include.bb2@1549> XINCLUDE "PE/logging.include.bb2"
0001EECC <file.include.bb2@1550> XINCLUDE "PE/logging.include.bb2"
0001EED2 <file.include.bb2@1551> XINCLUDE "PE/logging.include.bb2"
0001EEF0 <file.include.bb2@1568> XINCLUDE "PE/logging.include.bb2"
0001EF0C <file.include.bb2@1570> XINCLUDE "PE/logging.include.bb2"
0001EF16 <file.include.bb2@1571> XINCLUDE "PE/logging.include.bb2"
0001EF1C <file.include.bb2@1572> XINCLUDE "PE/logging.include.bb2"
0001EF36 <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
0001EF3E <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
0001EF46 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
0001EF5C <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0001EF74 <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0001EF86 <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0001EF92 <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0001EF98 <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
0001EFA0 <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
0001EFD8 <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
0001EFEA <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
0001F00E <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0001F020 <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
0001F02C <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0001F032 <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0001F042 <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0001F060 <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
0001F072 <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
0001F0BE <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
0001F0C4 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
0001F0EE <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
0001F106 <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
0001F120 <file.include.bb2@1625> XINCLUDE "PE/logging.include.bb2"
0001F148 <file.include.bb2@1628> XINCLUDE "PE/logging.include.bb2"
0001F150 <file.include.bb2@1629> XINCLUDE "PE/logging.include.bb2"
0001F166 <file.include.bb2@1630> XINCLUDE "PE/logging.include.bb2"
0001F1A2 <file.include.bb2@1632> XINCLUDE "PE/logging.include.bb2"
0001F1AC <file.include.bb2@1633> XINCLUDE "PE/logging.include.bb2"
0001F1D6 <file.include.bb2@1634> XINCLUDE "PE/logging.include.bb2"
0001F1FA <file.include.bb2@1635> XINCLUDE "PE/logging.include.bb2"
0001F242 <file.include.bb2@1637> XINCLUDE "PE/logging.include.bb2"
0001F294 <file.include.bb2@1638> XINCLUDE "PE/logging.include.bb2"
0001F2AC <file.include.bb2@1641> XINCLUDE "PE/logging.include.bb2"
0001F2E2 <file.include.bb2@1642> XINCLUDE "PE/logging.include.bb2"
0001F30C <file.include.bb2@1644> XINCLUDE "PE/logging.include.bb2"
0001F324 <file.include.bb2@1645> XINCLUDE "PE/logging.include.bb2"
0001F33E <file.include.bb2@1663> XINCLUDE "PE/logging.include.bb2"
0001F344 <file.include.bb2@1664> XINCLUDE "PE/logging.include.bb2"
0001F34A <file.include.bb2@1665> XINCLUDE "PE/logging.include.bb2"
0001F360 <file.include.bb2@1666> XINCLUDE "PE/logging.include.bb2"
0001F372 <file.include.bb2@1668> XINCLUDE "PE/logging.include.bb2"
0001F378 <file.include.bb2@1669> XINCLUDE "PE/logging.include.bb2"
0001F37E <file.include.bb2@1670> XINCLUDE "PE/logging.include.bb2"
0001F384 <file.include.bb2@1671> XINCLUDE "PE/logging.include.bb2"
0001F3B0 <file.include.bb2@1672> XINCLUDE "PE/logging.include.bb2"
0001F3C6 <file.include.bb2@1673> XINCLUDE "PE/logging.include.bb2"
0001F3DC <file.include.bb2@1674> XINCLUDE "PE/logging.include.bb2"
0001F3FE <file.include.bb2@1676> XINCLUDE "PE/logging.include.bb2"
0001F40E <file.include.bb2@1677> XINCLUDE "PE/logging.include.bb2"
0001F41C <file.include.bb2@1678> XINCLUDE "PE/logging.include.bb2"
0001F422 <file.include.bb2@1679> XINCLUDE "PE/logging.include.bb2"
0001F450 <file.include.bb2@1680> XINCLUDE "PE/logging.include.bb2"
0001F49E <file.include.bb2@1681> XINCLUDE "PE/logging.include.bb2"
0001F4A4 <file.include.bb2@1685> XINCLUDE "PE/logging.include.bb2"
0001F514 <file.include.bb2@1686> XINCLUDE "PE/logging.include.bb2"
0001F53E <file.include.bb2@1687> XINCLUDE "PE/logging.include.bb2"
0001F556 <file.include.bb2@1688> XINCLUDE "PE/logging.include.bb2"
0001F584 <file.include.bb2@1706> XINCLUDE "PE/logging.include.bb2"
0001F598 <file.include.bb2@1707> XINCLUDE "PE/logging.include.bb2"
0001F5AE <file.include.bb2@1708> XINCLUDE "PE/logging.include.bb2"
0001F5CE <file.include.bb2@1709> XINCLUDE "PE/logging.include.bb2"
0001F5E4 <file.include.bb2@1710> XINCLUDE "PE/logging.include.bb2"
0001F5EE <file.include.bb2@1711> XINCLUDE "PE/logging.include.bb2"
0001F608 <file.include.bb2@1712> XINCLUDE "PE/logging.include.bb2"
0001F622 <file.include.bb2@1730> XINCLUDE "PE/logging.include.bb2"
0001F62A <file.include.bb2@1731> XINCLUDE "PE/logging.include.bb2"
0001F632 <file.include.bb2@1732> XINCLUDE "PE/logging.include.bb2"
0001F65A <file.include.bb2@1733> XINCLUDE "PE/logging.include.bb2"
0001F672 <file.include.bb2@1734> XINCLUDE "PE/logging.include.bb2"
0001F684 <file.include.bb2@1735> XINCLUDE "PE/logging.include.bb2"
0001F690 <file.include.bb2@1736> XINCLUDE "PE/logging.include.bb2"
0001F696 <file.include.bb2@1737> XINCLUDE "PE/logging.include.bb2"
0001F69E <file.include.bb2@1738> XINCLUDE "PE/logging.include.bb2"
0001F6D6 <file.include.bb2@1739> XINCLUDE "PE/logging.include.bb2"
0001F6F4 <file.include.bb2@1740> XINCLUDE "PE/logging.include.bb2"
0001F706 <file.include.bb2@1743> XINCLUDE "PE/logging.include.bb2"
0001F752 <file.include.bb2@1744> XINCLUDE "PE/logging.include.bb2"
0001F758 <file.include.bb2@1746> XINCLUDE "PE/logging.include.bb2"
0001F782 <file.include.bb2@1747> XINCLUDE "PE/logging.include.bb2"
0001F79A <file.include.bb2@1748> XINCLUDE "PE/logging.include.bb2"
0001F7C8 <file.include.bb2@1766> XINCLUDE "PE/logging.include.bb2"
0001F800 <file.include.bb2@1767> XINCLUDE "PE/logging.include.bb2"
0001F81A <file.include.bb2@1768> XINCLUDE "PE/logging.include.bb2"
0001F83C <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
0001F854 <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0001F876 <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
0001F87C <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
0001F8AE <file.include.bb2@1811> XINCLUDE "PE/logging.include.bb2"
0001F8C2 <file.include.bb2@1813> XINCLUDE "PE/logging.include.bb2"
0001F8DA <file.include.bb2@1814> XINCLUDE "PE/logging.include.bb2"
0001F8F2 <file.include.bb2@1815> XINCLUDE "PE/logging.include.bb2"
0001F912 <file.include.bb2@1816> XINCLUDE "PE/logging.include.bb2"
0001F942 <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
0001F972 <file.include.bb2@1818> XINCLUDE "PE/logging.include.bb2"
0001F984 <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
0001F98C <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0001F9B6 <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
0001F9C0 <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
0001F9DA <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
0001F9F4 <file.include.bb2@1841> XINCLUDE "PE/logging.include.bb2"
0001FA12 <file.include.bb2@1843> XINCLUDE "PE/logging.include.bb2"
0001FA32 <file.include.bb2@1844> XINCLUDE "PE/logging.include.bb2"
0001FA7C <file.include.bb2@1845> XINCLUDE "PE/logging.include.bb2"
0001FA96 <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0001FAA8 <file.include.bb2@1847> XINCLUDE "PE/logging.include.bb2"
0001FADE <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
0001FAF0 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
0001FAF8 <file.include.bb2@1850> XINCLUDE "PE/logging.include.bb2"
0001FB20 <file.include.bb2@1851> XINCLUDE "PE/logging.include.bb2"
0001FB26 <file.include.bb2@1853> XINCLUDE "PE/logging.include.bb2"
0001FB4E <file.include.bb2@1854> XINCLUDE "PE/logging.include.bb2"
0001FB5E <file.include.bb2@1856> XINCLUDE "PE/logging.include.bb2"
0001FB72 <file.include.bb2@1857> XINCLUDE "PE/logging.include.bb2"
0001FB88 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
0001FB98 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0001FB9C <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0001FBB2 <file.include.bb2@1875> XINCLUDE "PE/logging.include.bb2"
0001FBC2 <file.include.bb2@1877> XINCLUDE "PE/logging.include.bb2"
0001FBC6 <file.include.bb2@1878> XINCLUDE "PE/logging.include.bb2"
0001FBDC <file.include.bb2@1894> XINCLUDE "PE/logging.include.bb2"
0001FC06 <file.include.bb2@1896> XINCLUDE "PE/logging.include.bb2"
0001FC0E <file.include.bb2@1897> XINCLUDE "PE/logging.include.bb2"
0001FC24 <file.include.bb2@1910> XINCLUDE "PE/logging.include.bb2"
0001FC3A <file.include.bb2@1912> XINCLUDE "PE/logging.include.bb2"
0001FC3E <file.include.bb2@1913> XINCLUDE "PE/logging.include.bb2"
0001FC68 <file.include.bb2@1930> XINCLUDE "PE/logging.include.bb2"
0001FC90 <file.include.bb2@1931> XINCLUDE "PE/logging.include.bb2"
0001FCD4 <file.include.bb2@1932> XINCLUDE "PE/logging.include.bb2"
0001FCE6 <file.include.bb2@1933> XINCLUDE "PE/logging.include.bb2"
0001FCF8 <file.include.bb2@1934> XINCLUDE "PE/logging.include.bb2"
0001FD0C <file.include.bb2@1935> XINCLUDE "PE/logging.include.bb2"
0001FD16 <file.include.bb2@1936> XINCLUDE "PE/logging.include.bb2"
0001FD30 <file.include.bb2@1937> XINCLUDE "PE/logging.include.bb2"
0001FD36 <file.include.bb2@1938> XINCLUDE "PE/logging.include.bb2"
0001FD44 <file.include.bb2@1939> XINCLUDE "PE/logging.include.bb2"
0001FD70 <file.include.bb2@1940> XINCLUDE "PE/logging.include.bb2"
0001FD9C <file.include.bb2@1941> XINCLUDE "PE/logging.include.bb2"
0001FDA2 <file.include.bb2@1942> XINCLUDE "PE/logging.include.bb2"
0001FDB0 <file.include.bb2@1943> XINCLUDE "PE/logging.include.bb2"
0001FDD8 <file.include.bb2@1944> XINCLUDE "PE/logging.include.bb2"
0001FDEC <file.include.bb2@1946> XINCLUDE "PE/logging.include.bb2"
0001FE14 <file.include.bb2@1947> XINCLUDE "PE/logging.include.bb2"
0001FE28 <file.include.bb2@1949> XINCLUDE "PE/logging.include.bb2"
0001FE50 <file.include.bb2@1950> XINCLUDE "PE/logging.include.bb2"
0001FE64 <file.include.bb2@1952> XINCLUDE "PE/logging.include.bb2"
0001FE8C <file.include.bb2@1953> XINCLUDE "PE/logging.include.bb2"
0001FE92 <file.include.bb2@1955> XINCLUDE "PE/logging.include.bb2"
0001FF36 <file.include.bb2@1956> XINCLUDE "PE/logging.include.bb2"
0001FF38 <file.include.bb2@1958> XINCLUDE "PE/logging.include.bb2"
0001FF4C <file.include.bb2@1960> XINCLUDE "PE/logging.include.bb2"
0001FF74 <file.include.bb2@1961> XINCLUDE "PE/logging.include.bb2"
0001FF88 <file.include.bb2@1963> XINCLUDE "PE/logging.include.bb2"
0001FFB4 <file.include.bb2@1964> XINCLUDE "PE/logging.include.bb2"
0001FFE0 <file.include.bb2@1965> XINCLUDE "PE/logging.include.bb2"
0001FFE6 <file.include.bb2@1966> XINCLUDE "PE/logging.include.bb2"
0001FFF4 <file.include.bb2@1967> XINCLUDE "PE/logging.include.bb2"
0002001C <file.include.bb2@1968> XINCLUDE "PE/logging.include.bb2"
00020022 <file.include.bb2@1969> XINCLUDE "PE/logging.include.bb2"
000200C6 <file.include.bb2@1970> XINCLUDE "PE/logging.include.bb2"
000200C8 <file.include.bb2@1971> XINCLUDE "PE/logging.include.bb2"
000200CE <file.include.bb2@1973> XINCLUDE "PE/logging.include.bb2"
000200F2 <file.include.bb2@1974> XINCLUDE "PE/logging.include.bb2"
0002011A <file.include.bb2@1975> XINCLUDE "PE/logging.include.bb2"
00020120 <file.include.bb2@1976> XINCLUDE "PE/logging.include.bb2"
000201C4 <file.include.bb2@1977> XINCLUDE "PE/logging.include.bb2"
000201C6 <file.include.bb2@1980> XINCLUDE "PE/logging.include.bb2"
000201F0 <file.include.bb2@1983> XINCLUDE "PE/logging.include.bb2"
0002020E <file.include.bb2@1984> XINCLUDE "PE/logging.include.bb2"
0002020E <logging.include.ab3@13> XINCLUDE "PE/logging.include.bb2"
000202AC <logging.include.ab3@35> XINCLUDE "PE/logging.include.bb2"
000202B2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.bb2"
000202B8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.bb2"
000202BE <logging.include.ab3@38> XINCLUDE "PE/logging.include.bb2"
000202D4 <logging.include.ab3@81> XINCLUDE "PE/logging.include.bb2"
000202E2 <logging.include.ab3@83> XINCLUDE "PE/logging.include.bb2"
00020314 <logging.include.ab3@84> XINCLUDE "PE/logging.include.bb2"
00020316 <logging.include.ab3@86> XINCLUDE "PE/logging.include.bb2"
00020340 <logging.include.ab3@88> XINCLUDE "PE/logging.include.bb2"
00020374 <logging.include.ab3@90> XINCLUDE "PE/logging.include.bb2"
0002038C <logging.include.ab3@91> XINCLUDE "PE/logging.include.bb2"
000203BA <logging.include.ab3@93> XINCLUDE "PE/logging.include.bb2"
000203C2 <logging.include.ab3@95> XINCLUDE "PE/logging.include.bb2"
000203FA <logging.include.ab3@96> XINCLUDE "PE/logging.include.bb2"
0002042E <logging.include.ab3@97> XINCLUDE "PE/logging.include.bb2"
00020446 <logging.include.ab3@99> XINCLUDE "PE/logging.include.bb2"
00020460 <logging.include.ab3@101> XINCLUDE "PE/logging.include.bb2"
00020468 <logging.include.ab3@103> XINCLUDE "PE/logging.include.bb2"
0002046C <logging.include.ab3@104> XINCLUDE "PE/logging.include.bb2"
00020486 <logging.include.ab3@106> XINCLUDE "PE/logging.include.bb2"
0002048E <logging.include.ab3@108> XINCLUDE "PE/logging.include.bb2"
00020492 <logging.include.ab3@110> XINCLUDE "PE/logging.include.bb2"
000204A8 <logging.include.ab3@112> XINCLUDE "PE/logging.include.bb2"
000204B2 <logging.include.ab3@115> XINCLUDE "PE/logging.include.bb2"
00020528 <logging.include.ab3@116> XINCLUDE "PE/logging.include.bb2"
0002054C <logging.include.ab3@117> XINCLUDE "PE/logging.include.bb2"
000205F6 <logging.include.ab3@118> XINCLUDE "PE/logging.include.bb2"
0002061A <logging.include.ab3@119> XINCLUDE "PE/logging.include.bb2"
00020620 <logging.include.ab3@120> XINCLUDE "PE/logging.include.bb2"
0002064A <logging.include.ab3@121> XINCLUDE "PE/logging.include.bb2"
000206AA <logging.include.ab3@122> XINCLUDE "PE/logging.include.bb2"
0002072E <logging.include.ab3@123> XINCLUDE "PE/logging.include.bb2"
00020730 <logging.include.ab3@124> XINCLUDE "PE/logging.include.bb2"
00020748 <logging.include.ab3@125> XINCLUDE "PE/logging.include.bb2"
00020782 <logging.include.ab3@129> XINCLUDE "PE/logging.include.bb2"
000207B4 <logging.include.ab3@131> XINCLUDE "PE/logging.include.bb2"
000207C2 <logging.include.ab3@132> XINCLUDE "PE/logging.include.bb2"
000207F2 <logging.include.ab3@133> XINCLUDE "PE/logging.include.bb2"
00020B62 <logging.include.ab3@134> XINCLUDE "PE/logging.include.bb2"
00020B70 <logging.include.ab3@135> XINCLUDE "PE/logging.include.bb2"
00020B76 <logging.include.ab3@136> XINCLUDE "PE/logging.include.bb2"
00020E08 <logging.include.ab3@137> XINCLUDE "PE/logging.include.bb2"
00020E22 <logging.include.ab3@139> XINCLUDE "PE/logging.include.bb2"
00020E5C <logging.include.ab3@142> XINCLUDE "PE/logging.include.bb2"
00020EAE <logging.include.ab3@143> XINCLUDE "PE/logging.include.bb2"
00020EBC <logging.include.ab3@144> XINCLUDE "PE/logging.include.bb2"
00020F12 <logging.include.ab3@145> XINCLUDE "PE/logging.include.bb2"
00020F18 <logging.include.ab3@146> XINCLUDE "PE/logging.include.bb2"
00020F92 <logging.include.ab3@147> XINCLUDE "PE/logging.include.bb2"
00021006 <logging.include.ab3@148> XINCLUDE "PE/logging.include.bb2"
00021020 <logging.include.ab3@150> XINCLUDE "PE/logging.include.bb2"
0002104E <logging.include.ab3@152> XINCLUDE "PE/logging.include.bb2"
00021068 <logging.include.ab3@154> XINCLUDE "PE/logging.include.bb2"
0002107C <logging.include.ab3@155> XINCLUDE "PE/logging.include.bb2"
000210AC <logging.include.ab3@156> XINCLUDE "PE/logging.include.bb2"
00021102 <logging.include.ab3@157> XINCLUDE "PE/logging.include.bb2"
0002111A <logging.include.ab3@159> XINCLUDE "PE/logging.include.bb2"
00021134 <logging.include.ab3@161> XINCLUDE "PE/logging.include.bb2"
0002121E <logging.include.ab3@162> XINCLUDE "PE/logging.include.bb2"
00021230 <logging.include.ab3@163> XINCLUDE "PE/logging.include.bb2"
0002124A <logging.include.ab3@164> XINCLUDE "PE/logging.include.bb2"
00021388 <logging.include.ab3@165> XINCLUDE "PE/logging.include.bb2"
0002139A <logging.include.ab3@166> XINCLUDE "PE/logging.include.bb2"
000213C4 <logging.include.ab3@167> XINCLUDE "PE/logging.include.bb2"
000214D8 <logging.include.ab3@168> XINCLUDE "PE/logging.include.bb2"
000214F0 <logging.include.ab3@169> XINCLUDE "PE/logging.include.bb2"
0002150A <logging.include.ab3@170> XINCLUDE "PE/logging.include.bb2"
000215FA <logging.include.ab3@171> XINCLUDE "PE/logging.include.bb2"
0002160C <logging.include.ab3@172> XINCLUDE "PE/logging.include.bb2"
00021626 <logging.include.ab3@173> XINCLUDE "PE/logging.include.bb2"
00021716 <logging.include.ab3@174> XINCLUDE "PE/logging.include.bb2"
00021728 <logging.include.ab3@175> XINCLUDE "PE/logging.include.bb2"
00021742 <logging.include.ab3@176> XINCLUDE "PE/logging.include.bb2"
0002184A <logging.include.ab3@177> XINCLUDE "PE/logging.include.bb2"
0002185C <logging.include.ab3@178> XINCLUDE "PE/logging.include.bb2"
0002185C <AmiBlitz3.ab2@89> XINCLUDE "PE/logging.include.bb2"
00021868 <AmiBlitz3.ab2@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
00021868 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
00021868 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
00021868 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
00021868 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
00021890 <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
000218AA <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
000218B4 <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
000218C6 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
000218EA <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
000218F8 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
00021904 <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
00021908 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
00021922 <dynamicarray.include.bb2@76> XINCLUDE "translation.include.bb2"
0002192C <dynamicarray.include.bb2@77> XINCLUDE "translation.include.bb2"
00021938 <dynamicarray.include.bb2@78> XINCLUDE "translation.include.bb2"
0002193C <dynamicarray.include.bb2@80> XINCLUDE "translation.include.bb2"
0002195A <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
00021974 <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
00021994 <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
0002199E <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
000219AC <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
000219B8 <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
000219C6 <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
000219D2 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
000219DE <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
000219F0 <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
00021A00 <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
00021A0A <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
00021A10 <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
00021A2E <dynamicarray.include.bb2@131> XINCLUDE "translation.include.bb2"
00021A3A <dynamicarray.include.bb2@132> XINCLUDE "translation.include.bb2"
00021A4C <dynamicarray.include.bb2@133> XINCLUDE "translation.include.bb2"
00021A6E <dynamicarray.include.bb2@134> XINCLUDE "translation.include.bb2"
00021A8C <dynamicarray.include.bb2@135> XINCLUDE "translation.include.bb2"
00021AAE <dynamicarray.include.bb2@136> XINCLUDE "translation.include.bb2"
00021AB8 <dynamicarray.include.bb2@138> XINCLUDE "translation.include.bb2"
00021ABE <dynamicarray.include.bb2@139> XINCLUDE "translation.include.bb2"
00021ADC <dynamicarray.include.bb2@156> XINCLUDE "translation.include.bb2"
00021AE6 <dynamicarray.include.bb2@157> XINCLUDE "translation.include.bb2"
00021B08 <dynamicarray.include.bb2@158> XINCLUDE "translation.include.bb2"
00021B16 <dynamicarray.include.bb2@159> XINCLUDE "translation.include.bb2"
00021B3E <dynamicarray.include.bb2@160> XINCLUDE "translation.include.bb2"
00021B70 <dynamicarray.include.bb2@161> XINCLUDE "translation.include.bb2"
00021B7A <dynamicarray.include.bb2@162> XINCLUDE "translation.include.bb2"
00021B8C <dynamicarray.include.bb2@163> XINCLUDE "translation.include.bb2"
00021BC0 <dynamicarray.include.bb2@164> XINCLUDE "translation.include.bb2"
00021BD6 <dynamicarray.include.bb2@165> XINCLUDE "translation.include.bb2"
00021BE2 <dynamicarray.include.bb2@167> XINCLUDE "translation.include.bb2"
00021BF0 <dynamicarray.include.bb2@168> XINCLUDE "translation.include.bb2"
00021BFC <dynamicarray.include.bb2@171> XINCLUDE "translation.include.bb2"
00021C02 <dynamicarray.include.bb2@172> XINCLUDE "translation.include.bb2"
00021C1C <dynamicarray.include.bb2@188> XINCLUDE "translation.include.bb2"
00021C28 <dynamicarray.include.bb2@189> XINCLUDE "translation.include.bb2"
00021C2E <dynamicarray.include.bb2@190> XINCLUDE "translation.include.bb2"
00021C4C <dynamicarray.include.bb2@210> XINCLUDE "translation.include.bb2"
00021C70 <dynamicarray.include.bb2@211> XINCLUDE "translation.include.bb2"
00021C76 <dynamicarray.include.bb2@212> XINCLUDE "translation.include.bb2"
00021C94 <dynamicarray.include.bb2@231> XINCLUDE "translation.include.bb2"
00021CAA <dynamicarray.include.bb2@233> XINCLUDE "translation.include.bb2"
00021CCC <dynamicarray.include.bb2@234> XINCLUDE "translation.include.bb2"
00021CF0 <dynamicarray.include.bb2@235> XINCLUDE "translation.include.bb2"
00021CFC <dynamicarray.include.bb2@237> XINCLUDE "translation.include.bb2"
00021D02 <dynamicarray.include.bb2@238> XINCLUDE "translation.include.bb2"
00021D24 <dynamicarray.include.bb2@253> XINCLUDE "translation.include.bb2"
00021D5C <dynamicarray.include.bb2@254> XINCLUDE "translation.include.bb2"
00021D66 <dynamicarray.include.bb2@255> XINCLUDE "translation.include.bb2"
00021D7C <dynamicarray.include.bb2@256> XINCLUDE "translation.include.bb2"
00021DD2 <dynamicarray.include.bb2@257> XINCLUDE "translation.include.bb2"
00021E28 <dynamicarray.include.bb2@258> XINCLUDE "translation.include.bb2"
00021E7E <dynamicarray.include.bb2@259> XINCLUDE "translation.include.bb2"
00021E82 <dynamicarray.include.bb2@261> XINCLUDE "translation.include.bb2"
00021EA4 <dynamicarray.include.bb2@281> XINCLUDE "translation.include.bb2"
00021EAE <dynamicarray.include.bb2@282> XINCLUDE "translation.include.bb2"
00021ED0 <dynamicarray.include.bb2@283> XINCLUDE "translation.include.bb2"
00021EE2 <dynamicarray.include.bb2@284> XINCLUDE "translation.include.bb2"
00021F04 <dynamicarray.include.bb2@285> XINCLUDE "translation.include.bb2"
00021F26 <dynamicarray.include.bb2@286> XINCLUDE "translation.include.bb2"
00021F4E <dynamicarray.include.bb2@287> XINCLUDE "translation.include.bb2"
00021F74 <dynamicarray.include.bb2@288> XINCLUDE "translation.include.bb2"
00021F7E <dynamicarray.include.bb2@290> XINCLUDE "translation.include.bb2"
00021F8A <dynamicarray.include.bb2@293> XINCLUDE "translation.include.bb2"
00021F90 <dynamicarray.include.bb2@294> XINCLUDE "translation.include.bb2"
00021FAE <dynamicarray.include.bb2@311> XINCLUDE "translation.include.bb2"
00021FB8 <dynamicarray.include.bb2@312> XINCLUDE "translation.include.bb2"
00021FD2 <dynamicarray.include.bb2@313> XINCLUDE "translation.include.bb2"
00021FDE <dynamicarray.include.bb2@315> XINCLUDE "translation.include.bb2"
00021FE4 <dynamicarray.include.bb2@316> XINCLUDE "translation.include.bb2"
00022006 <dynamicarray.include.bb2@335> XINCLUDE "translation.include.bb2"
00022010 <dynamicarray.include.bb2@336> XINCLUDE "translation.include.bb2"
00022036 <dynamicarray.include.bb2@337> XINCLUDE "translation.include.bb2"
0002204E <dynamicarray.include.bb2@338> XINCLUDE "translation.include.bb2"
0002208C <dynamicarray.include.bb2@339> XINCLUDE "translation.include.bb2"
000220EC <dynamicarray.include.bb2@340> XINCLUDE "translation.include.bb2"
000220FC <dynamicarray.include.bb2@341> XINCLUDE "translation.include.bb2"
0002210E <dynamicarray.include.bb2@342> XINCLUDE "translation.include.bb2"
00022126 <dynamicarray.include.bb2@345> XINCLUDE "translation.include.bb2"
00022132 <dynamicarray.include.bb2@347> XINCLUDE "translation.include.bb2"
00022138 <dynamicarray.include.bb2@348> XINCLUDE "translation.include.bb2"
00022162 <dynamicarray.include.bb2@369> XINCLUDE "translation.include.bb2"
0002216C <dynamicarray.include.bb2@370> XINCLUDE "translation.include.bb2"
0002217E <dynamicarray.include.bb2@371> XINCLUDE "translation.include.bb2"
00022188 <dynamicarray.include.bb2@372> XINCLUDE "translation.include.bb2"
000221B8 <dynamicarray.include.bb2@373> XINCLUDE "translation.include.bb2"
000221E6 <dynamicarray.include.bb2@374> XINCLUDE "translation.include.bb2"
0002220C <dynamicarray.include.bb2@375> XINCLUDE "translation.include.bb2"
0002221C <dynamicarray.include.bb2@376> XINCLUDE "translation.include.bb2"
00022222 <dynamicarray.include.bb2@377> XINCLUDE "translation.include.bb2"
00022252 <dynamicarray.include.bb2@378> XINCLUDE "translation.include.bb2"
00022280 <dynamicarray.include.bb2@379> XINCLUDE "translation.include.bb2"
000222A6 <dynamicarray.include.bb2@380> XINCLUDE "translation.include.bb2"
000222B6 <dynamicarray.include.bb2@381> XINCLUDE "translation.include.bb2"
000222D0 <dynamicarray.include.bb2@384> XINCLUDE "translation.include.bb2"
000222DC <dynamicarray.include.bb2@386> XINCLUDE "translation.include.bb2"
000222E2 <dynamicarray.include.bb2@387> XINCLUDE "translation.include.bb2"
00022300 <dynamicarray.include.bb2@402> XINCLUDE "translation.include.bb2"
0002230A <dynamicarray.include.bb2@403> XINCLUDE "translation.include.bb2"
0002233A <dynamicarray.include.bb2@404> XINCLUDE "translation.include.bb2"
00022368 <dynamicarray.include.bb2@405> XINCLUDE "translation.include.bb2"
000223C8 <dynamicarray.include.bb2@406> XINCLUDE "translation.include.bb2"
000223D8 <dynamicarray.include.bb2@407> XINCLUDE "translation.include.bb2"
000223FC <dynamicarray.include.bb2@409> XINCLUDE "translation.include.bb2"
00022400 <dynamicarray.include.bb2@411> XINCLUDE "translation.include.bb2"
0002241A <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
00022424 <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
0002242E <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
0002243E <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
00022448 <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
0002245A <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
00022470 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
0002247A <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
00022480 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
00022484 <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
000224A2 <dynamicarray.include.bb2@455> XINCLUDE "translation.include.bb2"
000224A8 <dynamicarray.include.bb2@456> XINCLUDE "translation.include.bb2"
000224B2 <dynamicarray.include.bb2@457> XINCLUDE "translation.include.bb2"
000224D6 <dynamicarray.include.bb2@458> XINCLUDE "translation.include.bb2"
000224F0 <dynamicarray.include.bb2@459> XINCLUDE "translation.include.bb2"
00022506 <dynamicarray.include.bb2@460> XINCLUDE "translation.include.bb2"
00022520 <dynamicarray.include.bb2@461> XINCLUDE "translation.include.bb2"
00022532 <dynamicarray.include.bb2@462> XINCLUDE "translation.include.bb2"
00022556 <dynamicarray.include.bb2@463> XINCLUDE "translation.include.bb2"
0002257E <dynamicarray.include.bb2@464> XINCLUDE "translation.include.bb2"
0002258E <dynamicarray.include.bb2@467> XINCLUDE "translation.include.bb2"
00022594 <dynamicarray.include.bb2@468> XINCLUDE "translation.include.bb2"
0002259E <dynamicarray.include.bb2@470> XINCLUDE "translation.include.bb2"
000225A4 <dynamicarray.include.bb2@471> XINCLUDE "translation.include.bb2"
000225C2 <dynamicarray.include.bb2@491> XINCLUDE "translation.include.bb2"
000225CC <dynamicarray.include.bb2@492> XINCLUDE "translation.include.bb2"
000225D4 <dynamicarray.include.bb2@493> XINCLUDE "translation.include.bb2"
000225DC <dynamicarray.include.bb2@494> XINCLUDE "translation.include.bb2"
000225E4 <dynamicarray.include.bb2@495> XINCLUDE "translation.include.bb2"
000225FC <dynamicarray.include.bb2@496> XINCLUDE "translation.include.bb2"
0002260A <dynamicarray.include.bb2@497> XINCLUDE "translation.include.bb2"
00022622 <dynamicarray.include.bb2@498> XINCLUDE "translation.include.bb2"
0002262E <dynamicarray.include.bb2@499> XINCLUDE "translation.include.bb2"
00022646 <dynamicarray.include.bb2@500> XINCLUDE "translation.include.bb2"
00022664 <dynamicarray.include.bb2@501> XINCLUDE "translation.include.bb2"
00022682 <dynamicarray.include.bb2@502> XINCLUDE "translation.include.bb2"
000226A0 <dynamicarray.include.bb2@503> XINCLUDE "translation.include.bb2"
000226B6 <dynamicarray.include.bb2@504> XINCLUDE "translation.include.bb2"
000226F0 <dynamicarray.include.bb2@505> XINCLUDE "translation.include.bb2"
000226F8 <dynamicarray.include.bb2@506> XINCLUDE "translation.include.bb2"
0002270E <dynamicarray.include.bb2@508> XINCLUDE "translation.include.bb2"
00022726 <dynamicarray.include.bb2@509> XINCLUDE "translation.include.bb2"
0002272C <dynamicarray.include.bb2@510> XINCLUDE "translation.include.bb2"
00022736 <dynamicarray.include.bb2@512> XINCLUDE "translation.include.bb2"
0002273C <dynamicarray.include.bb2@513> XINCLUDE "translation.include.bb2"
0002273E <dynamicarray.include.bb2@515> XINCLUDE "translation.include.bb2"
00022744 <dynamicarray.include.bb2@516> XINCLUDE "translation.include.bb2"
0002274A <dynamicarray.include.bb2@519> XINCLUDE "translation.include.bb2"
00022760 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
00022766 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
00022770 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
000227A6 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
000227B0 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
000227B4 <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
000227E2 <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
000227E2 <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
000227FC <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
00022806 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0002282E <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
00022850 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0002286C <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0002287C <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
00022880 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0002289A <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
000228BA <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
000228C4 <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
000228DE <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
000228EC <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
000228FA <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
00022908 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
00022916 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
00022922 <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
00022930 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0002293E <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0002294C <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0002295A <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
00022974 <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
00022982 <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
00022992 <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
000229A2 <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
000229B2 <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
000229C0 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
000229CA <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
000229D0 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
000229EE <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
000229F4 <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
000229FE <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
00022A1E <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
00022A4C <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
00022A6A <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
00022A74 <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
00022A86 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
00022AB2 <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
00022AC8 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
00022AD4 <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
00022AE0 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
00022AE6 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
00022AEC <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
00022AF2 <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
00022AF8 <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
00022AFE <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
00022B08 <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
00022B0E <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
00022B40 <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
00022B5A <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
00022B72 <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
00022B86 <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
00022BD6 <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
00022BF6 <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
00022C0A <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
00022C18 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
00022C24 <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
00022C2C <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
00022C34 <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
00022C3C <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
00022C44 <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
00022C4A <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
00022C58 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
00022C7A <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
00022CA6 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
00022CB8 <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
00022CBE <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
00022CE6 <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
00022D0A <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
00022D32 <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
00022D66 <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
00022D76 <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
00022D80 <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
00022D8E <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
00022DA2 <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
00022DA8 <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
00022DC8 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
00022DCE <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
00022DD6 <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
00022E10 <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
00022E36 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
00022E4E <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
00022E82 <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
00022E8A <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
00022E98 <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
00022E9E <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
00022EB6 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
00022EBC <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
00022EC2 <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
00022EDC <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
00022EE2 <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
00022EE8 <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
00022EEE <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
00022EFC <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
00022F0A <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
00022F44 <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
00022F6A <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
00022F82 <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
00022F8E <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
00022F9A <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
00022FA6 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
00022FB2 <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
00022FBE <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
00022FC8 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
00022FD0 <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
00022FEA <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
00023018 <prefixtree.include.bb2@294> XINCLUDE "translation.include.bb2"
00023058 <prefixtree.include.bb2@295> XINCLUDE "translation.include.bb2"
000230AA <prefixtree.include.bb2@296> XINCLUDE "translation.include.bb2"
000230B0 <prefixtree.include.bb2@297> XINCLUDE "translation.include.bb2"
000230D8 <prefixtree.include.bb2@298> XINCLUDE "translation.include.bb2"
00023102 <prefixtree.include.bb2@300> XINCLUDE "translation.include.bb2"
00023130 <prefixtree.include.bb2@301> XINCLUDE "translation.include.bb2"
0002314A <prefixtree.include.bb2@303> XINCLUDE "translation.include.bb2"
0002315A <prefixtree.include.bb2@304> XINCLUDE "translation.include.bb2"
00023160 <prefixtree.include.bb2@305> XINCLUDE "translation.include.bb2"
0002319E <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
000231A4 <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
000231E4 <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
0002323A <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
000232AC <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
000232B8 <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
000232C6 <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
0002330C <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
00023356 <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
0002338E <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
000233E2 <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
000233E8 <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
000233EE <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
000233FC <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
00023404 <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
0002343E <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
00023464 <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
0002347C <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
000234B2 <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
000234C8 <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
000234D6 <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
000234EE <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
00023526 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
0002354C <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
00023594 <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
0002359A <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
000235B4 <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
000235C0 <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
000235C6 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
000235F2 <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
00023606 <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
00023614 <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
0002361C <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
00023656 <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
0002367C <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
00023694 <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
000236CE <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
000236F8 <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
00023710 <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
00023740 <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
0002376C <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
00023788 <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
00023796 <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
000237A4 <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
000237E2 <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
0002381E <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
0002388A <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
000238B8 <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
000238E6 <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
0002392E <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
00023948 <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
00023990 <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
000239AE <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
000239CC <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
000239E6 <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
000239F2 <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
000239F8 <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
00023A24 <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
00023A3C <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
00023A42 <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
00023A56 <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
00023A64 <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
00023A72 <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
00023A80 <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
00023A88 <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
00023AAC <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
00023AD4 <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
00023AFC <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
00023B68 <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
00023B78 <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
00023BA4 <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
00023BFA <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
00023C08 <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
00023C16 <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
00023C1C <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
00023C70 <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
00023CC0 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
00023D10 <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
00023D66 <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
00023DD2 <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
00023DDA <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
00023E14 <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
00023E3A <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
00023E52 <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
00023E8C <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
00023EB6 <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
00023ECE <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
00023EF2 <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
00023F46 <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
00023F4E <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
00023F54 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
00023FB6 <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
00023FE2 <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
00023FFE <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
0002400C <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
0002401A <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
00024028 <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
00024036 <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
0002407A <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
000240E6 <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
00024114 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
00024128 <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
0002415A <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
000241A4 <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
000241B4 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
000241E8 <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
0002420A <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
0002421A <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
00024222 <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
00024266 <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
000242D2 <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
00024300 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
00024324 <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
00024368 <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
000243D4 <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
00024402 <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
00024430 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
00024438 <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
00024466 <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
000244D8 <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
000244DE <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0002450C <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
0002457E <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0002459C <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
000245C0 <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
000245D8 <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
000245DE <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
000245E4 <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
000245E6 <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
000245F0 <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0002461C <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
0002463E <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
00024646 <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
0002464C <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
0002465A <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
00024694 <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
000246BA <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
000246D2 <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
0002470C <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
00024736 <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
0002474E <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
00024766 <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
0002479E <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
000247A6 <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
000247E0 <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
000247F2 <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
00024818 <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
0002482E <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
00024854 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
00024868 <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
00024880 <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
00024892 <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
0002489C <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
000248B0 <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
000248CA <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
000248E8 <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
000248FA <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
00024918 <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
0002493A <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
00024956 <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
00024976 <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
00024980 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
00024986 <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
00024990 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
0002499C <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
000249A2 <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
000249D0 <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
000249F8 <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
00024A38 <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
00024A50 <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
00024A96 <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
00024AC0 <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
00024AEE <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
00024B08 <prefixtree.include.bb2@613> XINCLUDE "translation.include.bb2"
00024B16 <prefixtree.include.bb2@614> XINCLUDE "translation.include.bb2"
00024B26 <prefixtree.include.bb2@615> XINCLUDE "translation.include.bb2"
00024B36 <prefixtree.include.bb2@616> XINCLUDE "translation.include.bb2"
00024B46 <prefixtree.include.bb2@617> XINCLUDE "translation.include.bb2"
00024B56 <prefixtree.include.bb2@618> XINCLUDE "translation.include.bb2"
00024B5A <prefixtree.include.bb2@619> XINCLUDE "translation.include.bb2"
00024B74 <prefixtree.include.bb2@636> XINCLUDE "translation.include.bb2"
00024B7A <prefixtree.include.bb2@637> XINCLUDE "translation.include.bb2"
00024B8A <prefixtree.include.bb2@638> XINCLUDE "translation.include.bb2"
00024B9A <prefixtree.include.bb2@639> XINCLUDE "translation.include.bb2"
00024BC8 <prefixtree.include.bb2@641> XINCLUDE "translation.include.bb2"
00024BE8 <prefixtree.include.bb2@642> XINCLUDE "translation.include.bb2"
00024C10 <prefixtree.include.bb2@643> XINCLUDE "translation.include.bb2"
00024C1E <prefixtree.include.bb2@644> XINCLUDE "translation.include.bb2"
00024C2A <prefixtree.include.bb2@645> XINCLUDE "translation.include.bb2"
00024C34 <prefixtree.include.bb2@648> XINCLUDE "translation.include.bb2"
00024C54 <prefixtree.include.bb2@649> XINCLUDE "translation.include.bb2"
00024C7A <prefixtree.include.bb2@650> XINCLUDE "translation.include.bb2"
00024C94 <prefixtree.include.bb2@651> XINCLUDE "translation.include.bb2"
00024C9A <prefixtree.include.bb2@652> XINCLUDE "translation.include.bb2"
00024CA8 <prefixtree.include.bb2@653> XINCLUDE "translation.include.bb2"
00024CC8 <prefixtree.include.bb2@654> XINCLUDE "translation.include.bb2"
00024CD4 <prefixtree.include.bb2@655> XINCLUDE "translation.include.bb2"
00024CE6 <prefixtree.include.bb2@656> XINCLUDE "translation.include.bb2"
00024CEC <prefixtree.include.bb2@657> XINCLUDE "translation.include.bb2"
00024CFE <prefixtree.include.bb2@658> XINCLUDE "translation.include.bb2"
00024D04 <prefixtree.include.bb2@661> XINCLUDE "translation.include.bb2"
00024D2E <prefixtree.include.bb2@662> XINCLUDE "translation.include.bb2"
00024D4C <prefixtree.include.bb2@665> XINCLUDE "translation.include.bb2"
00024D54 <prefixtree.include.bb2@666> XINCLUDE "translation.include.bb2"
00024D68 <prefixtree.include.bb2@668> XINCLUDE "translation.include.bb2"
00024D90 <prefixtree.include.bb2@669> XINCLUDE "translation.include.bb2"
00024DA2 <prefixtree.include.bb2@670> XINCLUDE "translation.include.bb2"
00024DCA <prefixtree.include.bb2@671> XINCLUDE "translation.include.bb2"
00024DF2 <prefixtree.include.bb2@672> XINCLUDE "translation.include.bb2"
00024E5A <prefixtree.include.bb2@673> XINCLUDE "translation.include.bb2"
00024E6A <prefixtree.include.bb2@674> XINCLUDE "translation.include.bb2"
00024E92 <prefixtree.include.bb2@675> XINCLUDE "translation.include.bb2"
00024EB0 <prefixtree.include.bb2@676> XINCLUDE "translation.include.bb2"
00024EDA <prefixtree.include.bb2@677> XINCLUDE "translation.include.bb2"
00024EE4 <prefixtree.include.bb2@678> XINCLUDE "translation.include.bb2"
00024EFC <prefixtree.include.bb2@679> XINCLUDE "translation.include.bb2"
00024F06 <prefixtree.include.bb2@680> XINCLUDE "translation.include.bb2"
00024F3E <prefixtree.include.bb2@681> XINCLUDE "translation.include.bb2"
00024F44 <prefixtree.include.bb2@682> XINCLUDE "translation.include.bb2"
00024F4E <prefixtree.include.bb2@685> XINCLUDE "translation.include.bb2"
00024F6E <prefixtree.include.bb2@686> XINCLUDE "translation.include.bb2"
00024F94 <prefixtree.include.bb2@687> XINCLUDE "translation.include.bb2"
00024FAE <prefixtree.include.bb2@688> XINCLUDE "translation.include.bb2"
00024FB4 <prefixtree.include.bb2@689> XINCLUDE "translation.include.bb2"
00024FC2 <prefixtree.include.bb2@690> XINCLUDE "translation.include.bb2"
00024FE2 <prefixtree.include.bb2@691> XINCLUDE "translation.include.bb2"
00024FEE <prefixtree.include.bb2@692> XINCLUDE "translation.include.bb2"
00025000 <prefixtree.include.bb2@693> XINCLUDE "translation.include.bb2"
00025006 <prefixtree.include.bb2@694> XINCLUDE "translation.include.bb2"
00025018 <prefixtree.include.bb2@695> XINCLUDE "translation.include.bb2"
0002501E <prefixtree.include.bb2@698> XINCLUDE "translation.include.bb2"
00025036 <prefixtree.include.bb2@699> XINCLUDE "translation.include.bb2"
0002507A <prefixtree.include.bb2@700> XINCLUDE "translation.include.bb2"
00025080 <prefixtree.include.bb2@702> XINCLUDE "translation.include.bb2"
0002508A <prefixtree.include.bb2@703> XINCLUDE "translation.include.bb2"
0002509E <prefixtree.include.bb2@704> XINCLUDE "translation.include.bb2"
000250B8 <prefixtree.include.bb2@721> XINCLUDE "translation.include.bb2"
000250BE <prefixtree.include.bb2@722> XINCLUDE "translation.include.bb2"
000250D2 <prefixtree.include.bb2@723> XINCLUDE "translation.include.bb2"
000250DC <prefixtree.include.bb2@725> XINCLUDE "translation.include.bb2"
000250E2 <prefixtree.include.bb2@726> XINCLUDE "translation.include.bb2"
000250FC <prefixtree.include.bb2@743> XINCLUDE "translation.include.bb2"
00025124 <prefixtree.include.bb2@744> XINCLUDE "translation.include.bb2"
00025152 <prefixtree.include.bb2@745> XINCLUDE "translation.include.bb2"
0002516A <prefixtree.include.bb2@746> XINCLUDE "translation.include.bb2"
000251CC <prefixtree.include.bb2@747> XINCLUDE "translation.include.bb2"
000251DC <prefixtree.include.bb2@748> XINCLUDE "translation.include.bb2"
00025206 <prefixtree.include.bb2@749> XINCLUDE "translation.include.bb2"
0002521E <prefixtree.include.bb2@750> XINCLUDE "translation.include.bb2"
00025238 <prefixtree.include.bb2@767> XINCLUDE "translation.include.bb2"
00025260 <prefixtree.include.bb2@768> XINCLUDE "translation.include.bb2"
00025278 <prefixtree.include.bb2@769> XINCLUDE "translation.include.bb2"
000252B2 <prefixtree.include.bb2@770> XINCLUDE "translation.include.bb2"
000252DC <prefixtree.include.bb2@772> XINCLUDE "translation.include.bb2"
000252F4 <prefixtree.include.bb2@773> XINCLUDE "translation.include.bb2"
00025322 <prefixtree.include.bb2@792> XINCLUDE "translation.include.bb2"
0002537E <prefixtree.include.bb2@793> XINCLUDE "translation.include.bb2"
000253AA <prefixtree.include.bb2@794> XINCLUDE "translation.include.bb2"
000253F8 <prefixtree.include.bb2@795> XINCLUDE "translation.include.bb2"
00025410 <prefixtree.include.bb2@796> XINCLUDE "translation.include.bb2"
0002542A <prefixtree.include.bb2@798> XINCLUDE "translation.include.bb2"
00025444 <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
0002544C <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
00025464 <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
0002546E <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
00025480 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
000254B8 <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
000254C6 <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
000254D2 <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
000254EE <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
00025510 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
00025532 <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
00025554 <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
00025576 <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
00025592 <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
000255B0 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
000255C4 <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
000255CA <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
000255CC <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
000255D2 <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
000255DC <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
000255E2 <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
00025600 <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
00025606 <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
0002562A <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
00025648 <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
00025676 <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
000256A4 <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
000256D2 <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
00025700 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
00025734 <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
00025744 <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
0002574E <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
00025754 <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
00025782 <prefixtree.include.bb2@886> XINCLUDE "translation.include.bb2"
00025788 <prefixtree.include.bb2@887> XINCLUDE "translation.include.bb2"
000257CC <prefixtree.include.bb2@888> XINCLUDE "translation.include.bb2"
000257DE <prefixtree.include.bb2@889> XINCLUDE "translation.include.bb2"
000257F0 <prefixtree.include.bb2@890> XINCLUDE "translation.include.bb2"
000257FA <prefixtree.include.bb2@891> XINCLUDE "translation.include.bb2"
00025804 <prefixtree.include.bb2@893> XINCLUDE "translation.include.bb2"
0002581E <prefixtree.include.bb2@894> XINCLUDE "translation.include.bb2"
0002584C <prefixtree.include.bb2@896> XINCLUDE "translation.include.bb2"
00025890 <prefixtree.include.bb2@897> XINCLUDE "translation.include.bb2"
000258AA <prefixtree.include.bb2@898> XINCLUDE "translation.include.bb2"
000258B4 <prefixtree.include.bb2@899> XINCLUDE "translation.include.bb2"
000258C6 <prefixtree.include.bb2@900> XINCLUDE "translation.include.bb2"
000258FA <prefixtree.include.bb2@901> XINCLUDE "translation.include.bb2"
0002592E <prefixtree.include.bb2@902> XINCLUDE "translation.include.bb2"
00025996 <prefixtree.include.bb2@904> XINCLUDE "translation.include.bb2"
0002599C <prefixtree.include.bb2@905> XINCLUDE "translation.include.bb2"
000259A2 <prefixtree.include.bb2@906> XINCLUDE "translation.include.bb2"
000259AC <prefixtree.include.bb2@907> XINCLUDE "translation.include.bb2"
000259B6 <prefixtree.include.bb2@908> XINCLUDE "translation.include.bb2"
000259D0 <prefixtree.include.bb2@909> XINCLUDE "translation.include.bb2"
000259FA <prefixtree.include.bb2@926> XINCLUDE "translation.include.bb2"
00025A3E <prefixtree.include.bb2@927> XINCLUDE "translation.include.bb2"
00025A50 <prefixtree.include.bb2@928> XINCLUDE "translation.include.bb2"
00025A5E <prefixtree.include.bb2@929> XINCLUDE "translation.include.bb2"
00025A68 <prefixtree.include.bb2@930> XINCLUDE "translation.include.bb2"
00025A72 <prefixtree.include.bb2@932> XINCLUDE "translation.include.bb2"
00025A8C <prefixtree.include.bb2@933> XINCLUDE "translation.include.bb2"
00025A8C <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
00025AD6 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
00025AF6 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
00025B00 <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
00025B14 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
00025B5A <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
00025BA0 <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
00025BE6 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
00025BF0 <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
00025C0C <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00025C36 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
00025CB4 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
00025D32 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
00025DB0 <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00025E2E <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00025EAC <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00025F2A <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00025FA8 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00026026 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
000260A4 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00026122 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
000261A6 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
000261D6 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00026232 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
0002625E <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00026328 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00026336 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
00026374 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
000263F8 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
00026422 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
00026440 <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
0002645A <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
00026464 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
00026470 <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
00026480 <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
00026490 <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
000264A0 <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
000264B0 <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
000264B4 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
000264F2 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
0002654A <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
000265A6 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
00026630 <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
000266AE <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
000266C8 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
000266F6 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
00026732 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
00026800 <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
000268CE <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
0002691A <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
00026998 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
00026A16 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
00026A74 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
00026B0A <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00026B42 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
00026BA0 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
00026C28 <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
00026C30 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
00026C9A <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
00026D06 <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00026D44 <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00026DCC <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00026DF8 <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00026E54 <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00026F1C <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00026F80 <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00026F86 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00026FBA <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00027088 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
00027156 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
00027180 <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
0002719E <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
000271CC <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
00027208 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
00027278 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
00027280 <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
000272D2 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
000272FA <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
00027312 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
000273C6 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
000273D4 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
0002742A <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
00027488 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
0002748E <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
00027512 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
00027596 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
0002761A <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
00027698 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
00027716 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
00027794 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
00027812 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
00027890 <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
0002790E <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
0002798C <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
000279B6 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
000279D4 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
00027A02 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
00027A46 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
00027A4C <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
00027A66 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
00027A82 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
00027AB6 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
00027ADA <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
00027B02 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
00027B6E <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
00027BCC <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
00027C2A <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
00027C76 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
00027CD0 <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
00027CD6 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
00027CDC <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
00027CE6 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
00027CF0 <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
00027D0A <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
00027D38 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
00027D3E <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
00027D82 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
00027D9C <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
00027DAC <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
00027DB6 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
00027DC2 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
00027DCC <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
00027DF0 <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
00027E38 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
00027E80 <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
00027EC8 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
00027EDE <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
00027EF2 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
00027EFC <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
00027F06 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
00027F20 <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
00027F4A <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
00027F8E <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
00027FA8 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
00028006 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
00028020 <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
00028038 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
00028042 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
0002805E <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
0002806C <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
00028078 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
000280C4 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
00028116 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
00028168 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
0002817C <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
0002818C <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
00028192 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
00028194 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
0002819A <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
000281A4 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
000281AE <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
000281C8 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
000281F6 <phrasebook.include.bb2@358> XINCLUDE "translation.include.bb2"
0002823A <phrasebook.include.bb2@359> XINCLUDE "translation.include.bb2"
00028254 <phrasebook.include.bb2@360> XINCLUDE "translation.include.bb2"
0002827A <phrasebook.include.bb2@361> XINCLUDE "translation.include.bb2"
000282CE <phrasebook.include.bb2@363> XINCLUDE "translation.include.bb2"
00028322 <phrasebook.include.bb2@364> XINCLUDE "translation.include.bb2"
00028376 <phrasebook.include.bb2@365> XINCLUDE "translation.include.bb2"
0002839C <phrasebook.include.bb2@366> XINCLUDE "translation.include.bb2"
000283A8 <phrasebook.include.bb2@367> XINCLUDE "translation.include.bb2"
000283BC <phrasebook.include.bb2@368> XINCLUDE "translation.include.bb2"
000283F2 <phrasebook.include.bb2@369> XINCLUDE "translation.include.bb2"
00028428 <phrasebook.include.bb2@370> XINCLUDE "translation.include.bb2"
000284D8 <phrasebook.include.bb2@371> XINCLUDE "translation.include.bb2"
000284DE <phrasebook.include.bb2@372> XINCLUDE "translation.include.bb2"
000284E4 <phrasebook.include.bb2@373> XINCLUDE "translation.include.bb2"
000284EE <phrasebook.include.bb2@374> XINCLUDE "translation.include.bb2"
000284F8 <phrasebook.include.bb2@375> XINCLUDE "translation.include.bb2"
00028512 <phrasebook.include.bb2@376> XINCLUDE "translation.include.bb2"
0002853C <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
00028552 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
0002855C <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
000285D4 <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
00028610 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
00028620 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
00028640 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
00028660 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
00028680 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
000286B6 <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
000286DE <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
00028716 <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
0002877A <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
0002879A <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
00028816 <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
0002884E <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
000288C4 <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
000288E4 <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
00028960 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
00028998 <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
00028A0E <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
00028A2E <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
00028AAA <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
00028AD6 <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
00028ADE <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
00028B24 <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
00028B44 <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
00028B4E <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
00028B66 <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
00028B76 <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
00028BAE <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
00028BE0 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
00028BF2 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
00028C74 <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
00028C7E <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
00028CB0 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
00028CE2 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
00028D0E <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
00028D3A <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
00028D5C <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
00028D66 <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
00028D80 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
00028D80 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
00028D96 <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
00028DB2 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
00028DB4 <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
00028DE2 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
00028E0C <translation.include.bb2@48> XINCLUDE "translation.include.bb2"
00028E5E <translation.include.bb2@49> XINCLUDE "translation.include.bb2"
00028E7C <translation.include.bb2@50> XINCLUDE "translation.include.bb2"
00028EA6 <translation.include.bb2@52> XINCLUDE "translation.include.bb2"
00028ED8 <translation.include.bb2@53> XINCLUDE "translation.include.bb2"
00028EF0 <translation.include.bb2@54> XINCLUDE "translation.include.bb2"
00028EF0 <AmiBlitz3.ab2@93> XINCLUDE "translation.include.bb2"
00028EF0 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
00028F0A <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
00028F14 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00028F36 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00028F4E <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00028F68 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00028F9A <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00028FA4 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00028FAA <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00028FBC <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00029030 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00029036 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00029070 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
0002907A <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00029080 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00029096 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
000290A0 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
000290B8 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
000290BA <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
000290E8 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00029102 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00029118 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
0002914C <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00029150 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
0002916A <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00029180 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
000291B4 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
000291B8 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
000291CE <ted.include.ab3@202> XINCLUDE "/Shared/ted.include.ab3"
000291E4 <ted.include.ab3@203> XINCLUDE "/Shared/ted.include.ab3"
0002920A <ted.include.ab3@204> XINCLUDE "/Shared/ted.include.ab3"
00029214 <ted.include.ab3@206> XINCLUDE "/Shared/ted.include.ab3"
0002921A <ted.include.ab3@207> XINCLUDE "/Shared/ted.include.ab3"
00029230 <ted.include.ab3@209> XINCLUDE "/Shared/ted.include.ab3"
00029246 <ted.include.ab3@210> XINCLUDE "/Shared/ted.include.ab3"
0002926C <ted.include.ab3@211> XINCLUDE "/Shared/ted.include.ab3"
00029276 <ted.include.ab3@213> XINCLUDE "/Shared/ted.include.ab3"
0002927C <ted.include.ab3@214> XINCLUDE "/Shared/ted.include.ab3"
00029296 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
000292AC <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
000292E0 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
000292E4 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
000292FA <ted.include.ab3@222> XINCLUDE "/Shared/ted.include.ab3"
00029310 <ted.include.ab3@223> XINCLUDE "/Shared/ted.include.ab3"
00029336 <ted.include.ab3@224> XINCLUDE "/Shared/ted.include.ab3"
00029340 <ted.include.ab3@226> XINCLUDE "/Shared/ted.include.ab3"
00029346 <ted.include.ab3@227> XINCLUDE "/Shared/ted.include.ab3"
00029370 <ted.include.ab3@229> XINCLUDE "/Shared/ted.include.ab3"
00029386 <ted.include.ab3@230> XINCLUDE "/Shared/ted.include.ab3"
000293BC <ted.include.ab3@231> XINCLUDE "/Shared/ted.include.ab3"
000293C6 <ted.include.ab3@233> XINCLUDE "/Shared/ted.include.ab3"
000293E0 <ted.include.ab3@234> XINCLUDE "/Shared/ted.include.ab3"
000293FA <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00029410 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00029444 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00029448 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00029462 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00029478 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
000294AC <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
000294B0 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
000294C6 <ted.include.ab3@248> XINCLUDE "/Shared/ted.include.ab3"
000294DC <ted.include.ab3@249> XINCLUDE "/Shared/ted.include.ab3"
00029502 <ted.include.ab3@250> XINCLUDE "/Shared/ted.include.ab3"
0002950C <ted.include.ab3@252> XINCLUDE "/Shared/ted.include.ab3"
00029512 <ted.include.ab3@253> XINCLUDE "/Shared/ted.include.ab3"
00029528 <ted.include.ab3@255> XINCLUDE "/Shared/ted.include.ab3"
0002953E <ted.include.ab3@256> XINCLUDE "/Shared/ted.include.ab3"
00029564 <ted.include.ab3@257> XINCLUDE "/Shared/ted.include.ab3"
0002956E <ted.include.ab3@259> XINCLUDE "/Shared/ted.include.ab3"
00029574 <ted.include.ab3@260> XINCLUDE "/Shared/ted.include.ab3"
0002958E <ted.include.ab3@262> XINCLUDE "/Shared/ted.include.ab3"
000295A4 <ted.include.ab3@263> XINCLUDE "/Shared/ted.include.ab3"
000295D8 <ted.include.ab3@264> XINCLUDE "/Shared/ted.include.ab3"
000295E2 <ted.include.ab3@266> XINCLUDE "/Shared/ted.include.ab3"
000295E8 <ted.include.ab3@267> XINCLUDE "/Shared/ted.include.ab3"
000295FE <ted.include.ab3@269> XINCLUDE "/Shared/ted.include.ab3"
00029614 <ted.include.ab3@270> XINCLUDE "/Shared/ted.include.ab3"
0002963A <ted.include.ab3@271> XINCLUDE "/Shared/ted.include.ab3"
00029644 <ted.include.ab3@273> XINCLUDE "/Shared/ted.include.ab3"
0002964A <ted.include.ab3@274> XINCLUDE "/Shared/ted.include.ab3"
00029660 <ted.include.ab3@276> XINCLUDE "/Shared/ted.include.ab3"
00029676 <ted.include.ab3@277> XINCLUDE "/Shared/ted.include.ab3"
0002969C <ted.include.ab3@278> XINCLUDE "/Shared/ted.include.ab3"
000296A6 <ted.include.ab3@280> XINCLUDE "/Shared/ted.include.ab3"
000296AC <ted.include.ab3@281> XINCLUDE "/Shared/ted.include.ab3"
000296AC <AmiBlitz3.ab2@94> XINCLUDE "/Shared/ted.include.ab3"
000296AC <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
000296C2 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
000296D8 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
000296E6 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
000296F4 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
000296FE <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00029710 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00029722 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00029728 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00029762 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00029766 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
0002977C <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00029792 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
0002979E <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
000297AA <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
000297B2 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
000297BA <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
000297BE <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
000297E8 <CLIModeSupport.ab3@32> XINCLUDE "CLIModeSupport.ab3"
00029808 <CLIModeSupport.ab3@36> XINCLUDE "CLIModeSupport.ab3"
00029812 <CLIModeSupport.ab3@37> XINCLUDE "CLIModeSupport.ab3"
00029826 <CLIModeSupport.ab3@40> XINCLUDE "CLIModeSupport.ab3"
00029840 <CLIModeSupport.ab3@41> XINCLUDE "CLIModeSupport.ab3"
00029858 <CLIModeSupport.ab3@44> XINCLUDE "CLIModeSupport.ab3"
00029882 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
000298AE <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
000298C0 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
000298D8 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
000298EE <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
000298F4 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
0002992A <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00029962 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
0002999A <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
000299D2 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00029A0A <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00029A42 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00029A7A <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00029AB2 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00029AEA <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00029B22 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
00029B5A <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00029B92 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00029BCA <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00029BD4 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00029BDE <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00029BE8 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00029C12 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00029C1C <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00029C20 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
00029C54 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00029C5A <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00029C94 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00029C9A <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00029CB0 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00029CBA <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00029CC0 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00029CD6 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00029CDC <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00029D1A <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
00029D1E <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00029D28 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
00029D2A <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
00029D5E <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
00029D6E <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
00029D78 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
00029D7E <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00029D94 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
00029DD2 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00029DD6 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
00029DDE <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
00029E1C <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
00029E1E <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
00029E22 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
00029E60 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
00029E64 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
00029EA2 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00029EA6 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00029ED0 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00029EDA <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00029EEE <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00029F14 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00029F1A <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
00029F28 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
00029F2E <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
00029F66 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
00029F6A <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00029F94 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00029F9A <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00029FBA <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00029FC4 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00029FC8 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00029FCA <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00029FE8 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00029FEA <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00029FF0 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00029FF6 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
0002A020 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0002A022 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
0002A050 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
0002A054 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
0002A082 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
0002A086 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
0002A0AC <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0002A0BC <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0002A0C2 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0002A0C8 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0002A102 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
0002A10C <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0002A126 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
0002A144 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
0002A14C <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
0002A152 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
0002A158 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0002A17A <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
0002A192 <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
0002A1B8 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0002A1E2 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0002A1F0 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
0002A1F6 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
0002A20A <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0002A222 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
0002A230 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0002A244 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
0002A27A <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
0002A288 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
0002A2B8 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0002A2C6 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0002A2CC <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0002A2DA <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0002A2E0 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0002A2E6 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0002A2F4 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0002A2F6 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0002A2FC <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0002A312 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
0002A31C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0002A322 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0002A34C <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
0002A38A <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
0002A38E <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
0002A3CC <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
0002A3D0 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
0002A40E <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0002A412 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0002A41A <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
0002A422 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
0002A466 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
0002A478 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
0002A486 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
0002A4BA <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0002A4DE <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
0002A4E8 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
0002A502 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0002A516 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
0002A56E <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
0002A60E <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
0002A616 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
0002A64E <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0002A654 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
0002A664 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
0002A68C <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
0002A6B4 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
0002A6BC <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
0002A6C2 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
0002A6C8 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
0002A6D0 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
0002A6F8 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
0002A700 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
0002A708 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
0002A70E <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
0002A714 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
0002A71A <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
0002A720 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
0002A726 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
0002A72C <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
0002A732 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
0002A738 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
0002A740 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
0002A748 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
0002A770 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
0002A776 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
0002A77C <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
0002A784 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
0002A7A4 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
0002A7B4 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
0002A7C4 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
0002A7D4 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
0002A7E4 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
0002A7F4 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0002A804 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0002A814 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
0002A824 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
0002A834 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
0002A844 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0002A854 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
0002A864 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
0002A874 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0002A884 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
0002A894 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0002A8A4 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
0002A8B6 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
0002A8C8 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
0002A8DA <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0002A8EC <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
0002A8FE <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
0002A910 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
0002A92E <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
0002A934 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
0002A93A <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
0002A964 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
0002A976 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
0002A9AA <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
0002A9C2 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0002AA0E <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0002AA20 <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
0002AA76 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
0002AAE8 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0002AAEE <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
0002AB22 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
0002AB4A <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
0002AB72 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0002ABAC <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
0002ABC4 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
0002AC48 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0002AC62 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0002ACB0 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0002ACC0 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
0002ACC8 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0002ACDC <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0002AD22 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0002AD28 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
0002AD72 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0002ADDC <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
0002AE42 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
0002AE76 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0002AEA2 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0002AEF0 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0002AF14 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
0002AF1A <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
0002AF28 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
0002AF86 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0002AFE4 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0002B00E <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
0002B018 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0002B020 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
0002B05E <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
0002B0AA <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0002B0BC <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0002B112 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0002B18A <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0002B190 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
0002B1C4 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0002B1EC <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
0002B222 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0002B230 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
0002B23E <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0002B2B2 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
0002B2B8 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
0002B302 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0002B34C <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
0002B37C <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0002B3AC <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
0002B3D6 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0002B428 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
0002B47E <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0002B4CE <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0002B534 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
0002B5A0 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
0002B5CC <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0002B5FC <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
0002B678 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
0002B6A8 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
0002B6D8 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
0002B708 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
0002B738 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
0002B768 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
0002B798 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0002B7C8 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
0002B7F8 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
0002B828 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
0002B858 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
0002B8D4 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
0002B906 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
0002B938 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0002B968 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
0002B96E <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0002B9E2 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
0002BA4E <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
0002BA60 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0002BA8E <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
0002BAB6 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0002BACA <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0002BAF4 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
0002BB38 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
0002BB48 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
0002BB58 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
0002BB5E <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0002BB6E <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
0002BB7C <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
0002BB86 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0002BBBE <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
0002BBF6 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0002BC2E <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
0002BC3E <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
0002BCA6 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0002BCDE <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0002BCEE <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0002BCFE <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0002BD66 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0002BDCE <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0002BE36 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0002BE9E <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
0002BF06 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
0002BF6E <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
0002BFD6 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0002C03E <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
0002C04E <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
0002C086 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0002C0C0 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0002C0FA <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
0002C132 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
0002C16A <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
0002C190 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
0002C198 <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
0002C1A0 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
0002C1A8 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
0002C1B0 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
0002C1C4 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0002C1F2 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0002C20C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0002C21A <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0002C286 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0002C2AC <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
0002C2C8 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
0002C2D2 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0002C2DC <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0002C2E8 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
0002C2F6 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
0002C302 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
0002C33E <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
0002C358 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
0002C366 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0002C386 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
0002C394 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
0002C3A2 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0002C3A8 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0002C3B8 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0002C3BC <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
0002C3F0 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
0002C424 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
0002C428 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
0002C45C <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
0002C460 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
0002C494 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
0002C49A <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
0002C4D0 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
0002C506 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
0002C53C <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0002C574 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
0002C5AC <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
0002C64C <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
0002C68C <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
0002C6C4 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
0002C6E2 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
0002C6E6 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
0002C6EC <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
0002C6F2 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
0002C6F6 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
0002C720 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
0002C734 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
0002C772 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
0002C7A6 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
0002C7DC <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
0002C834 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
0002C862 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
0002C866 <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
0002C89C <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
0002C8CA <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
0002C8F8 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
0002C8FC <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
0002C932 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
0002C960 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
0002C964 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
0002C9C8 <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
0002C9CE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
0002CA08 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
0002CA12 <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
0002CA1C <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
0002CA36 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
0002CA60 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
0002CA66 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
0002CA86 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
0002CA90 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0002CA94 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0002CA96 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
0002CAB4 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
0002CAB6 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
0002CABC <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
0002CAC2 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
0002CAEC <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
0002CAEE <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
0002CB1C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
0002CB20 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
0002CB4E <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0002CB52 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
0002CB78 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
0002CB88 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
0002CB8E <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0002CB94 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0002CBCE <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
0002CBD8 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
0002CBF2 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
0002CC0C <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
0002CC36 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
0002CC64 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
0002CCF4 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
0002CCFE <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0002CD12 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
0002CD4E <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
0002CD8A <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0002CDC6 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
0002CE02 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
0002CE3E <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
0002CE44 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0002CE7E <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
0002CE8A <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
0002CEA4 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
0002CEA6 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
0002CEC4 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0002CECA <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
0002CEF4 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
0002CEF6 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
0002CF00 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
0002CF06 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
0002CF18 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0002CF4A <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0002CF54 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
0002CFBE <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
0002D028 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0002D02E <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
0002D098 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
0002D102 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
0002D10C <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0002D176 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0002D1AC <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
0002D1B2 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0002D21C <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0002D252 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0002D25A <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
0002D288 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0002D28C <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0002D2B4 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
0002D2BA <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0002D2C0 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
0002D2C6 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0002D2CC <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0002D2D2 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0002D2DC <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0002D2E6 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0002D314 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
0002D340 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
0002D348 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
0002D37C <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0002D38E <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
0002D3F4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0002D45A <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
0002D460 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
0002D468 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
0002D46A <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
0002D488 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
0002D4C6 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
0002D504 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
0002D50A <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
0002D510 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
0002D516 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
0002D520 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
0002D526 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
0002D52C <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
0002D532 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
0002D538 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
0002D53C <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
0002D546 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
0002D54A <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
0002D574 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
0002D576 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
0002D57C <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
0002D580 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
0002D586 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0002D58A <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
0002D59A <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
0002D5F4 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
0002D606 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0002D670 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0002D676 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
0002D6C0 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
0002D6D2 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
0002D6FE <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
0002D7A4 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0002D7C2 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
0002D7C8 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
0002D7F2 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
0002D7FC <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0002D82E <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
0002D848 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0002D85C <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
0002D868 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
0002D882 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
0002D88C <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
0002D8A6 <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
0002D8D0 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
0002D8F4 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
0002D932 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
0002D936 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0002D974 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
0002D978 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0002D9B6 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
0002D9F4 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
0002D9F6 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
0002DA2A <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
0002DA30 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0002DA74 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
0002DA86 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
0002DA8E <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
0002DA94 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0002DA9E <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
0002DAAC <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
0002DAB2 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
0002DADA <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
0002DAF4 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
0002DAFE <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
0002DB04 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
0002DB22 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0002DB2C <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
0002DB32 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
0002DB38 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
0002DB42 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
0002DB50 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
0002DB56 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
0002DB66 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0002DB92 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
0002DBA8 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
0002DBB2 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0002DBB8 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
0002DC10 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
0002DC7E <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
0002DC96 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
0002DC9C <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
0002DCD4 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
0002DD02 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
0002DD2C <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
0002DD36 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
0002DD5E <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
0002DD88 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0002DE2A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0002DE38 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
0002DE88 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
0002DE98 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
0002DF60 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
0002DF94 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
0002DFC8 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
0002DFFC <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
0002E030 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0002E064 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
0002E098 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
0002E0CC <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
0002E100 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0002E102 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0002E140 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
0002E144 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
0002E182 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
0002E1C0 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
0002E1C2 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
0002E1C8 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
0002E1CC <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
0002E1CE <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
0002E20C <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
0002E24A <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0002E24C <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
0002E24E <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
0002E250 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
0002E256 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
0002E25A <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
0002E26A <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
0002E282 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0002E29A <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
0002E2B2 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0002E2DC <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
0002E306 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
0002E334 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
0002E338 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
0002E360 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
0002E362 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
0002E3A0 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
0002E3A4 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
0002E3E2 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
0002E3E6 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
0002E424 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
0002E428 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
0002E466 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
0002E46A <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
0002E490 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
0002E4B6 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
0002E4DC <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
0002E502 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
0002E528 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
0002E57E <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
0002E5D4 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
0002E622 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
0002E678 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
0002E69E <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
0002E6C4 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
0002E6EA <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
0002E740 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
0002E78E <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
0002E7DC <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
0002E896 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
0002E8EC <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
0002E912 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
0002E938 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
0002E95E <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
0002E9B4 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
0002EA0A <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
0002EA58 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
0002EAA6 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
0002EAF4 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
0002EB42 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
0002EB90 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
0002EBDE <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
0002EC2C <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
0002EC52 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
0002EC78 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
0002EC9E <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
0002ECEC <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
0002ED3A <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
0002ED90 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
0002EDDE <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
0002EE2C <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
0002EE7A <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
0002EEA0 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
0002EEC6 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
0002EEEC <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
0002EF24 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
0002EF4C <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
0002EF60 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
0002EFD4 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
0002F01A <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
0002F0C8 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
0002F134 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0002F144 <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
0002F16A <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
0002F174 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
0002F19E <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
0002F1A4 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
0002F1B4 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
0002F254 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
0002F294 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
0002F29A <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
0002F2FC <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
0002F306 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
0002F310 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
0002F32A <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
0002F34C <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
0002F36E <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
0002F3C8 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
0002F3EA <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
0002F444 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
0002F486 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
0002F48C <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
0002F49A <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
0002F4A0 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
0002F4B4 <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
0002F4BE <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
0002F538 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
0002F542 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
0002F548 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0002F55C <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
0002F566 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0002F5E6 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
0002F5F0 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0002F5F6 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
0002F60A <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
0002F614 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0002F65C <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0002F666 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
0002F66C <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
0002F680 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
0002F68A <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
0002F6D2 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
0002F6DC <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
0002F6E2 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
0002F6F6 <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
0002F71C <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
0002F730 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
0002F756 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
0002F76A <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
0002F790 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
0002F7A4 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
0002F7AE <CLIModeSupport.ab3@990> XINCLUDE "CLIModeSupport.ab3"
0002F7DC <CLIModeSupport.ab3@991> XINCLUDE "CLIModeSupport.ab3"
0002F82C <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
0002F84C <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
0002F864 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
0002F948 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
0002F952 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
0002F958 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
0002F95A <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
0002F96E <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
0002F9A0 <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
0002F9A6 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
0002F9EA <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
0002F9FC <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
0002FA0E <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
0002FA18 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
0002FA1E <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
0002FA28 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
0002FA42 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
0002FA42 <AmiBlitz3.ab2@95> XINCLUDE "CLIModeSupport.ab3"
0002FAC2 <AmiBlitz3.ab2@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0002FAFA <AmiBlitz3.ab2@101> If dynassign <> ""
0002FB10 <AmiBlitz3.ab2@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0002FB1A <AmiBlitz3.ab2@103>     If *AssignSema
0002FB2A <AmiBlitz3.ab2@104>       ObtainSemaphoreShared_ *AssignSema
0002FB30 <AmiBlitz3.ab2@105>     Else                                                        ; no, create one...
0002FB50 <AmiBlitz3.ab2@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0002FB5A <AmiBlitz3.ab2@107>       If *AssignSema
0002FB6A <AmiBlitz3.ab2@108>         InitSemaphore_ *AssignSema
0002FB9E <AmiBlitz3.ab2@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0002FBB0 <AmiBlitz3.ab2@111>         If *AssignSema\ss_Link\ln_Name
0002FBEC <AmiBlitz3.ab2@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0002FBF8 <AmiBlitz3.ab2@114>         *AssignSema\ss_Link\ln_Pri  = 1
0002FC04 <AmiBlitz3.ab2@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0002FC14 <AmiBlitz3.ab2@117>         AddSemaphore_ *AssignSema
0002FC24 <AmiBlitz3.ab2@118>         ObtainSemaphoreShared_ *AssignSema
0002FC70 <AmiBlitz3.ab2@124>   mydir.s = dos_GetProgDir{"Sys:"}
0002FCD0 <AmiBlitz3.ab2@125>   If dos_SetAssign{dynassign,mydir,False}
0002FD64 <AmiBlitz3.ab2@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0002FD9C <AmiBlitz3.ab2@129>   Poke$ ?str_blitz3assign,dynassign
0002FE1E <AmiBlitz3.ab2@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0002FEA0 <AmiBlitz3.ab2@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0002FF22 <AmiBlitz3.ab2@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0002FFA4 <AmiBlitz3.ab2@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
00030026 <AmiBlitz3.ab2@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0003009A <AmiBlitz3.ab2@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0003010E <AmiBlitz3.ab2@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
00030182 <AmiBlitz3.ab2@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
000301B0 <AmiBlitz3.ab2@140>   dos_CreateDir{my_blitzlibsdir$}
000301D4 <AmiBlitz3.ab2@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
00030202 <AmiBlitz3.ab2@142>   dos_CreateDir{my_residentsdir$}
00030230 <AmiBlitz3.ab2@143>   dos_CreateDir{my_systemdir$}
000302FA <AmiBlitz3.ab2@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
00030332 <AmiBlitz3.ab2@150> Poke.s ?str_pedfile,pedfile$
00030370 <AmiBlitz3.ab2@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
00030380 <AmiBlitz3.ab2@153>   Poke.b ?start_without_libs,1
00030386 <AmiBlitz3.ab2@154> Else
00030396 <AmiBlitz3.ab2@155>   Poke.b ?start_without_libs,0
000303BC <AmiBlitz3.ab2@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
000303C8 <AmiBlitz3.ab2@162> dbg_fid.l = -1 ; no debug file id yet!
000303D2 <AmiBlitz3.ab2@164> If CLIMode
000303D8 <AmiBlitz3.ab2@167>   err.l      = False                                       ; indicate that an error has occured
000303DE <AmiBlitz3.ab2@168>   showhelp.l = False                                       ; show the CLI tool's help
00030436 <AmiBlitz3.ab2@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0003045E <AmiBlitz3.ab2@172>   cli_sourcefile.s   = ""
00030486 <AmiBlitz3.ab2@173>   cli_exefile.s      = ""
000304AE <AmiBlitz3.ab2@174>   cli_savefile.s     = ""
000304D6 <AmiBlitz3.ab2@175>   cli_dumpfile.s     = ""
000304FE <AmiBlitz3.ab2@176>   cli_includepath.s  = ""
00030526 <AmiBlitz3.ab2@177>   cli_blitzlibpath.s = ""
0003052C <AmiBlitz3.ab2@178>   cli_debuginfo.l    = False
00030532 <AmiBlitz3.ab2@179>   cli_run.l          = False
0003053A <AmiBlitz3.ab2@180>   cli_dumpflags.l    = $FFFFFFFF
00030562 <AmiBlitz3.ab2@181>   cli_info.s         = ""
00030568 <AmiBlitz3.ab2@182>   cli_release.l      = False
00030572 <AmiBlitz3.ab2@183>   cli_numargs.l      = dos_GetNumArgs{}
00030578 <AmiBlitz3.ab2@184>   cli_gui.l          = False
00030580 <AmiBlitz3.ab2@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
00030588 <AmiBlitz3.ab2@186>   cli_verbose.l      = 1
000305A0 <AmiBlitz3.ab2@187>   If cli_numargs=0 Then showhelp=True
000305D0 <AmiBlitz3.ab2@191>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0003061C <AmiBlitz3.ab2@192>     larg.s = LCase$(arg)                                   ; lower case the option string
000306E4 <AmiBlitz3.ab2@193>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0003071A <AmiBlitz3.ab2@194>     Select larg
00030766 <AmiBlitz3.ab2@195>       Case "s" : larg="source"
000307B8 <AmiBlitz3.ab2@196>       Case "e" : larg="exe"
0003080A <AmiBlitz3.ab2@197>       Case "d" : larg="debug"
0003085C <AmiBlitz3.ab2@198>       Case "r" : larg="release"
000308AE <AmiBlitz3.ab2@199>       Case "h" : larg="help"
00030900 <AmiBlitz3.ab2@200>       Case "v" : larg="verbose"
0003090E <AmiBlitz3.ab2@201>     End Select
00030944 <AmiBlitz3.ab2@203>     Select larg
00030998 <AmiBlitz3.ab2@204>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
000309F2 <AmiBlitz3.ab2@205>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
00030A4C <AmiBlitz3.ab2@206>       Case "save"     : cli_savefile    = dos_GetNextArg{}
00030A7C <AmiBlitz3.ab2@207>       Case "debug"    : cli_debuginfo   = True
00030AAC <AmiBlitz3.ab2@208>       Case "run"      : cli_run         = True
00030ADC <AmiBlitz3.ab2@209>       Case "release"  : cli_release     = True
00030B0C <AmiBlitz3.ab2@210>       Case "ped"      : cli_gui         = True
00030B66 <AmiBlitz3.ab2@211>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
00030BD8 <AmiBlitz3.ab2@212>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
00030C08 <AmiBlitz3.ab2@213>                         cli_dumpfile    = dos_GetNextArg{}
00030C10 <AmiBlitz3.ab2@214>                         cli_dumpflags   = $0
00030C70 <AmiBlitz3.ab2@215>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
00030CD0 <AmiBlitz3.ab2@216>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
00030D30 <AmiBlitz3.ab2@217>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
00030D90 <AmiBlitz3.ab2@218>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
00030DF0 <AmiBlitz3.ab2@219>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
00030E50 <AmiBlitz3.ab2@220>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
00030EB0 <AmiBlitz3.ab2@221>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
00030F10 <AmiBlitz3.ab2@222>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
00030F70 <AmiBlitz3.ab2@223>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
00030F82 <AmiBlitz3.ab2@224>                         If cli_dumpflags = $0
00030F88 <AmiBlitz3.ab2@225>                          err=True
0003101C <AmiBlitz3.ab2@226>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
00031076 <AmiBlitz3.ab2@228>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
000310A6 <AmiBlitz3.ab2@229>       Case "h"        : showhelp        = True             ; show the help and quit
000310AC <AmiBlitz3.ab2@230>       Default
000310E4 <AmiBlitz3.ab2@231>         If arg><""
00031178 <AmiBlitz3.ab2@232>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0003117E <AmiBlitz3.ab2@233>           err = True
0003118C <AmiBlitz3.ab2@235>     End Select
000311D8 <AmiBlitz3.ab2@236>   Until arg = "" OR err=True          ; until we processed all arguments
000311FA <AmiBlitz3.ab2@239>   If err><False OR showhelp = True
00031204 <AmiBlitz3.ab2@240>     If showhelp
00031266 <AmiBlitz3.ab2@241>     NPrint "AmiBlitz ",Peek.s(?myversion)
0003129E <AmiBlitz3.ab2@242>     NPrint "\\nSyntax: AmiBlitz3 [options]"
000312D6 <AmiBlitz3.ab2@243>     NPrint "\\nOptions:"
0003130E <AmiBlitz3.ab2@244>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
00031346 <AmiBlitz3.ab2@245>     NPrint "  -(e)xe <file>       : output executable filename"
0003137E <AmiBlitz3.ab2@246>     NPrint "  -(d)ebug            : compile with debug info"
000313B6 <AmiBlitz3.ab2@247>     NPrint "  -(r)elease          : create release executable (size optimized)"
000313EE <AmiBlitz3.ab2@248>     NPrint "  -run                : run compiled program"
00031426 <AmiBlitz3.ab2@249>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0003145E <AmiBlitz3.ab2@250>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
00031496 <AmiBlitz3.ab2@251>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
000314CE <AmiBlitz3.ab2@252>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
00031506 <AmiBlitz3.ab2@253>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0003153E <AmiBlitz3.ab2@254>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
00031576 <AmiBlitz3.ab2@255>     NPrint "  -(h)elp             : show this help"
000315AE <AmiBlitz3.ab2@256>     NPrint "\\nExample:"
000315E6 <AmiBlitz3.ab2@257>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0003161E <AmiBlitz3.ab2@258>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
00031624 <AmiBlitz3.ab2@261>     Goto abnormal_exit
00031640 <AmiBlitz3.ab2@264>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
000316A4 <AmiBlitz3.ab2@265>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
000316B4 <AmiBlitz3.ab2@268> Poke.l ?CLIMode,CLIMode
000316D8 <AmiBlitz3.ab2@299>   Dim incdim.s (#maxincludes)
000316FC <AmiBlitz3.ab2@300>   Dim incline.l(#maxincludes)
00031716 <AmiBlitz3.ab2@568> Function.s Get_Libinfo{addr_libnum.l}
00031722 <AmiBlitz3.ab2@570>   lib_ab2.b = False : lib_os.b = False
00031728 <AmiBlitz3.ab2@571>   addr_counter.l = addr_libnum
00031730 <AmiBlitz3.ab2@572>   skip.l = 0
00031742 <AmiBlitz3.ab2@573>   If addr_counter=0
0003177C <AmiBlitz3.ab2@574>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0003179A <AmiBlitz3.ab2@575>     Function Return ""
000317A8 <AmiBlitz3.ab2@580>     mem.l = Peek.l(addr_counter)
000317B6 <AmiBlitz3.ab2@585>     addr_counter + 2
000317D6 <AmiBlitz3.ab2@586>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
000317F0 <AmiBlitz3.ab2@587>     If (mem LSR 16) = $ffe2
000317F6 <AmiBlitz3.ab2@589>       lib_os = True
000317FE <AmiBlitz3.ab2@590>       skip = 10
00031844 <AmiBlitz3.ab2@591>       If Peek$(addr_counter+skip) = "" Then skip + 4
00031888 <AmiBlitz3.ab2@593>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0003189E <AmiBlitz3.ab2@595>   If (addr_counter>addr_libnum + $400)
000318BC <AmiBlitz3.ab2@597>     Function Return ""
000318C2 <AmiBlitz3.ab2@598>   Else
000318E6 <AmiBlitz3.ab2@599>     Function Return Peek$(addr_counter + skip)
000318F0 <AmiBlitz3.ab2@601> End Function
0003190E <AmiBlitz3.ab2@641>   !asm
00031914 <AmiBlitz3.ab2@642>   MOVEA.l _execbase,A6
00031918 <AmiBlitz3.ab2@643>   MOVEM.l d0/a0,-(a7)
0003191A <AmiBlitz3.ab2@645>   MOVEQ #127,d0
00031920 <AmiBlitz3.ab2@646>   LEA chartab,a0
00031926 <AmiBlitz3.ab2@649>     MOVE.b #1,128(a0)
00031928 <AmiBlitz3.ab2@650>     CLR.b (a0)+
0003192C <AmiBlitz3.ab2@651>   DBF d0,'l12
00031932 <AmiBlitz3.ab2@653>   LEA chartab,a0
00031936 <AmiBlitz3.ab2@654>   MOVE.b #1,(a0)
0003193C <AmiBlitz3.ab2@655>   MOVE.b #1,","(a0)
00031942 <AmiBlitz3.ab2@656>   MOVE.b #1,";"(a0)
00031948 <AmiBlitz3.ab2@657>   MOVE.b #1,":"(a0)
0003194E <AmiBlitz3.ab2@658>   MOVE.b #1,"("(a0)
00031954 <AmiBlitz3.ab2@659>   MOVE.b #1,")"(a0)
0003195A <AmiBlitz3.ab2@660>   MOVE.b #1,"="(a0)
00031960 <AmiBlitz3.ab2@661>   MOVE.b #1,"+"(a0)
00031966 <AmiBlitz3.ab2@662>   MOVE.b #1,"-"(a0)
0003196C <AmiBlitz3.ab2@663>   MOVE.b #1,"*"(a0)
00031972 <AmiBlitz3.ab2@664>   MOVE.b #1,"/"(a0)
00031978 <AmiBlitz3.ab2@665>   MOVE.b #1,"$"(a0)
0003197E <AmiBlitz3.ab2@666>   MOVE.b #1,"%"(a0)
00031984 <AmiBlitz3.ab2@667>   MOVE.b #1,"."(a0)
0003198A <AmiBlitz3.ab2@668>   MOVE.b #1,"["(a0)
00031990 <AmiBlitz3.ab2@669>   MOVE.b #1,"]"(a0)
00031996 <AmiBlitz3.ab2@670>   MOVE.b #1,"{"(a0)
0003199C <AmiBlitz3.ab2@671>   MOVE.b #1,"}"(a0)
000319A2 <AmiBlitz3.ab2@672>   MOVE.b #1,"\"(a0)
000319A8 <AmiBlitz3.ab2@673>   MOVE.b #1,">"(a0)
000319AE <AmiBlitz3.ab2@674>   MOVE.b #1,"<"(a0)
000319B4 <AmiBlitz3.ab2@675>   MOVE.b #1,"&"(a0)
000319BA <AmiBlitz3.ab2@676>   MOVE.b #1,"|"(a0)
000319C0 <AmiBlitz3.ab2@677>   MOVE.b #1,"^"(a0)
000319C6 <AmiBlitz3.ab2@678>   MOVE.b #1,$7e(a0)
000319CC <AmiBlitz3.ab2@679>   MOVE.w #$0101,1(a0)
000319D2 <AmiBlitz3.ab2@681>   LEA instrtab,a0
000319D8 <AmiBlitz3.ab2@682>   MOVE.l #labelhash-instrtab,d0
000319DA <AmiBlitz3.ab2@683>   ASR.l #2,d0
000319DC <AmiBlitz3.ab2@684>   SUBQ.l #1,d0
000319DE <AmiBlitz3.ab2@687>    CLR.l (a0)+
000319E0 <AmiBlitz3.ab2@688>    SUBQ.l #1,d0
000319E4 <AmiBlitz3.ab2@689>   BNE 'l10
000319EA <AmiBlitz3.ab2@691>   LEA allowtab,a0
000319F0 <AmiBlitz3.ab2@692>   MOVE.l #255,d0
000319F2 <AmiBlitz3.ab2@695>     CLR.b (a0)+
000319F6 <AmiBlitz3.ab2@696>   DBF d0,'la1
000319FC <AmiBlitz3.ab2@698>   LEA allowtab,a0
00031A02 <AmiBlitz3.ab2@699>   MOVE.b #1,$7d(a0)
00031A08 <AmiBlitz3.ab2@700>   MOVE.b #1,$7c(a0)
00031A0E <AmiBlitz3.ab2@701>   MOVE.b #1,$44(a0)
00031A14 <AmiBlitz3.ab2@702>   MOVE.b #1,$45(a0)
00031A1A <AmiBlitz3.ab2@703>   MOVE.b #1,$b9(a0)
00031A20 <AmiBlitz3.ab2@704>   MOVE.b #1,$89(a0)
00031A26 <AmiBlitz3.ab2@705>   MOVE.b #1,$ce(a0)
00031A2C <AmiBlitz3.ab2@706>   MOVE.b #1,$cf(a0)
00031A32 <AmiBlitz3.ab2@707>   MOVE.b #1,$d0(a0)
00031A38 <AmiBlitz3.ab2@708>   MOVE.b #1,$cd(a0)
00031A3A <AmiBlitz3.ab2@709>   MOVEQ #0,d0
00031A40 <AmiBlitz3.ab2@711>   MOVEA.l _execbase,a6
00031A46 <AmiBlitz3.ab2@716>   MOVE.l #$10000,d0
00031A4C <AmiBlitz3.ab2@717>   MOVE.l #80000,d1
00031A4E <AmiBlitz3.ab2@718>   MOVE.l d1,d2
00031A52 <AmiBlitz3.ab2@719>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
00031A58 <AmiBlitz3.ab2@720>   MOVE.l d0,mempool
00031A5C <AmiBlitz3.ab2@721>   MOVEM.l (a7)+,d0/a0
00031A62 <AmiBlitz3.ab2@722>   TST.l mempool
00031A66 <AmiBlitz3.ab2@723>   BEQ shutdown_compiler
00031A6A <AmiBlitz3.ab2@725>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
00031A70 <AmiBlitz3.ab2@726>   MOVE.l A4,ptr_ThisTask
00031A74 <AmiBlitz3.ab2@728>   BSR.w open_doslibrary
00031A78 <AmiBlitz3.ab2@729>   BEQ.w shutdown_compiler
00031A7E <AmiBlitz3.ab2@731>   MOVE.l D2,stacksize
00031A80 <AmiBlitz3.ab2@735>   MOVEQ.l #$00,D0
00031A86 <AmiBlitz3.ab2@736>   LEA tokens,A0
00031A88 <AmiBlitz3.ab2@739>     ADDQ.w #1,D0
00031A8A <AmiBlitz3.ab2@740>     MOVE.l (A0),D1
00031A8E <AmiBlitz3.ab2@741>     BEQ.w JL_0_2D1C
00031A90 <AmiBlitz3.ab2@742>     MOVEA.l D1,A0
00031A94 <AmiBlitz3.ab2@743> BRA.w JL_0_2D0E
00031A9A <AmiBlitz3.ab2@746>   MOVE.l A0,end_of_tokenlist
00031A9E <AmiBlitz3.ab2@748>   BSR.w makeasmtable
00031AA6 <AmiBlitz3.ab2@749>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
00031AAA <AmiBlitz3.ab2@751>   BSR.w open_mathlibrary
00031AAE <AmiBlitz3.ab2@752>   BEQ.w freemem_and_quit4
00031AB4 <AmiBlitz3.ab2@754>   MOVE.l constmaxpc,D0
00031AB6 <AmiBlitz3.ab2@755>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
00031ABC <AmiBlitz3.ab2@756>   MOVEA.l _execbase,A6
00031AC0 <AmiBlitz3.ab2@757>   JSR _AllocMem(A6)                                        ;mem for branch routine
00031AC6 <AmiBlitz3.ab2@758>   MOVE.l D0,constpcat
00031ACA <AmiBlitz3.ab2@759>   BEQ.w freemem_and_quit3
00031AD0 <AmiBlitz3.ab2@760>   ADD.l constmaxpc,D0
00031AD6 <AmiBlitz3.ab2@761>   MOVE.l D0,constlibat
00031ADC <AmiBlitz3.ab2@763>   MOVE.l macrobuffer_size,D0
00031AE2 <AmiBlitz3.ab2@764>   CMP.l #40000,d0
00031AE6 <AmiBlitz3.ab2@765>   BGE 'ok
00031AEC <AmiBlitz3.ab2@766>     MOVE.l #40000,d0
00031AF2 <AmiBlitz3.ab2@767>     MOVE.l d0,macrobuffer_size
00031AF4 <AmiBlitz3.ab2@770>   ADDQ.l #4,d0
00031AF6 <AmiBlitz3.ab2@771>   MOVEQ.l #$01,D1
00031AFC <AmiBlitz3.ab2@772>   MOVEA.l _execbase,A6
00031B00 <AmiBlitz3.ab2@773>   JSR _AllocMem(A6)                                        ;macro mem
00031B02 <AmiBlitz3.ab2@774>   MOVE.l d0,a0
00031B08 <AmiBlitz3.ab2@775>   MOVE.l macrobuffer_size,(a0)+
00031B0A <AmiBlitz3.ab2@776>   MOVE.l a0,d0
00031B10 <AmiBlitz3.ab2@777>   MOVE.l D0,ptr_macrobuffer_begin
00031B14 <AmiBlitz3.ab2@778>   BEQ.w freemem_and_quit2
00031B1A <AmiBlitz3.ab2@779>   ADD.l macrobuffer_size,D0
00031B20 <AmiBlitz3.ab2@780>   MOVE.l D0,ptr_macrobuffer_end
00031B26 <AmiBlitz3.ab2@782>   TST.l CLIMode
00031B2A <AmiBlitz3.ab2@783>   BEQ load_ped
00031B54 <AmiBlitz3.ab2@786>   !basic
00031B5E <AmiBlitz3.ab2@787>   succ.l = InitEmulatedPED{}
00031B62 <AmiBlitz3.ab2@788>   GetD0 succ
00031B80 <AmiBlitz3.ab2@789>   !asm
00031B82 <AmiBlitz3.ab2@790>   TST.l d0
00031B86 <AmiBlitz3.ab2@791>   BEQ freemem_and_quit
00031B8C <AmiBlitz3.ab2@792> JMP skip_ped
00031B92 <AmiBlitz3.ab2@797>   MOVE.l #str_pedfile,D1                                   ; Load PED
00031B98 <AmiBlitz3.ab2@798>   MOVEA.l _dosbase,A6
00031B9C <AmiBlitz3.ab2@799>   JSR _LoadSeg(A6)
00031BA2 <AmiBlitz3.ab2@800>   MOVE.l D0,ptr_seg_ped
00031BA6 <AmiBlitz3.ab2@802>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
00031BA8 <AmiBlitz3.ab2@806>   MOVEA.l D0,A2
00031BAA <AmiBlitz3.ab2@807>   ADDA.l A2,A2
00031BAC <AmiBlitz3.ab2@808>   ADDA.l A2,A2
00031BB2 <AmiBlitz3.ab2@810>   LEA teddata,a1                                           ;lea edstruct,A1
00031BB8 <AmiBlitz3.ab2@811>   MOVE.l #"TEDY",d1
00031BBC <AmiBlitz3.ab2@812>   JSR 4(A2)                                                ; Run PED
00031BC2 <AmiBlitz3.ab2@814>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
00031BC8 <AmiBlitz3.ab2@815>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
00031C06 <AmiBlitz3.ab2@817>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
00031C0A <AmiBlitz3.ab2@818>   BEQ.w unload_ped
00031C0E <AmiBlitz3.ab2@819> 
00031C12 <AmiBlitz3.ab2@820>   BNE old_version_of_PED                                   ; no, than exit
00031C50 <AmiBlitz3.ab2@826>   !ComData_GetL{comData_Magic,D0}
00031C56 <AmiBlitz3.ab2@827>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
00031C5A <AmiBlitz3.ab2@828>   BNE unload_ped
00031C92 <AmiBlitz3.ab2@831>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
00031CCA <AmiBlitz3.ab2@832>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
00031D02 <AmiBlitz3.ab2@833>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
00031D3A <AmiBlitz3.ab2@834>   !ComData_SetL{comPtr_VarBase           ,#varbase }
00031D72 <AmiBlitz3.ab2@835>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
00031DAA <AmiBlitz3.ab2@836>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
00031DE2 <AmiBlitz3.ab2@837>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
00031E1A <AmiBlitz3.ab2@838>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
00031E52 <AmiBlitz3.ab2@839>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
00031E8A <AmiBlitz3.ab2@840>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
00031EC2 <AmiBlitz3.ab2@841>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
00031EFA <AmiBlitz3.ab2@842>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
00031F32 <AmiBlitz3.ab2@845>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
00031F6A <AmiBlitz3.ab2@846>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
00031FA2 <AmiBlitz3.ab2@849>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
00031FDA <AmiBlitz3.ab2@850>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
00032012 <AmiBlitz3.ab2@852>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0003204A <AmiBlitz3.ab2@853>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
00032082 <AmiBlitz3.ab2@855>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
000320BA <AmiBlitz3.ab2@856>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
000320F2 <AmiBlitz3.ab2@858>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0003212A <AmiBlitz3.ab2@859>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
00032162 <AmiBlitz3.ab2@860>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0003219A <AmiBlitz3.ab2@861>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
000321D2 <AmiBlitz3.ab2@862>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0003220A <AmiBlitz3.ab2@863>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
00032242 <AmiBlitz3.ab2@864>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0003227A <AmiBlitz3.ab2@865>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
000322B2 <AmiBlitz3.ab2@866>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
000322EA <AmiBlitz3.ab2@867>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
00032322 <AmiBlitz3.ab2@868>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0003235A <AmiBlitz3.ab2@869>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
00032392 <AmiBlitz3.ab2@870>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
000323CA <AmiBlitz3.ab2@871>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
000323D0 <AmiBlitz3.ab2@873>   CLR.w returncode_org
000323FA <AmiBlitz3.ab2@875>   !basic
00032404 <AmiBlitz3.ab2@876>   If CLIMode
00032476 <AmiBlitz3.ab2@877>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
00032494 <AmiBlitz3.ab2@879>   !asm
0003249A <AmiBlitz3.ab2@883>   TST.b start_without_libs
0003249E <AmiBlitz3.ab2@884>   BNE skip_loading_libs
000324A2 <AmiBlitz3.ab2@885>     BSR.w call_setpointerbusy
000324AC <AmiBlitz3.ab2@886>     MOVE.l #$FFFFffff,linenumat
000324B0 <AmiBlitz3.ab2@887>     BSR.w get_libraries
000324B6 <AmiBlitz3.ab2@888>     JSR init_libraries
000324BA <AmiBlitz3.ab2@889>     BSR.w init_buffers
000324BE <AmiBlitz3.ab2@890>     BSR.w call_setpointernormal
000324C0 <AmiBlitz3.ab2@895>   MOVEQ.l #-$01,D0
000324C6 <AmiBlitz3.ab2@896>   MOVEA.l _execbase,A6
000324CA <AmiBlitz3.ab2@897>   JSR _AllocSignal(A6)
000324D0 <AmiBlitz3.ab2@898>   MOVE.l D0,signalNum
000324D2 <AmiBlitz3.ab2@899>   MOVEQ.l #$00,D1
000324D4 <AmiBlitz3.ab2@900>   BSET D0,D1
000324DA <AmiBlitz3.ab2@901>   MOVE.l D1,signals
000324E0 <AmiBlitz3.ab2@905>   MOVE.l #str_defaultdbug,D1
000324E4 <AmiBlitz3.ab2@906>   MOVEA.l _dosbase(PC),A6
000324E8 <AmiBlitz3.ab2@907>   JSR _LoadSeg(A6)
000324EE <AmiBlitz3.ab2@908>   MOVE.l D0,ptr_seg_debugger
000324F0 <AmiBlitz3.ab2@909>   TST.l d0
000324F4 <AmiBlitz3.ab2@910>   BNE ok_12
0003251E <AmiBlitz3.ab2@911>     !basic
00032580 <AmiBlitz3.ab2@912>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0003259E <AmiBlitz3.ab2@913>     !asm
000325A4 <AmiBlitz3.ab2@916>   TST.l CLIMode
000325A8 <AmiBlitz3.ab2@917>   BEQ run_ped
000325D2 <AmiBlitz3.ab2@923>   !basic
000325D8 <AmiBlitz3.ab2@924>   err.l = False
00032604 <AmiBlitz3.ab2@932>   If cli_sourcefile
00032624 <AmiBlitz3.ab2@933>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0003262E <AmiBlitz3.ab2@934>     If lock
00032652 <AmiBlitz3.ab2@935>       NameFromLock_ lock,&cli_tempstr,1024
0003267C <AmiBlitz3.ab2@936>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0003268C <AmiBlitz3.ab2@937>       UnLock_ lock
000326B8 <AmiBlitz3.ab2@940>     If cli_exefile
0003270A <AmiBlitz3.ab2@941>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
00032762 <AmiBlitz3.ab2@942>       path.s = dos_PathPart{cli_exefile}
00032782 <AmiBlitz3.ab2@943>       lock.l = Lock_(&path,#ACCESS_READ)
0003278C <AmiBlitz3.ab2@944>       If lock
000327B0 <AmiBlitz3.ab2@945>         NameFromLock_ lock,&cli_tempstr,1024
000327DA <AmiBlitz3.ab2@946>         path.s = Peek.s(&cli_tempstr)
00032888 <AmiBlitz3.ab2@947>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
00032898 <AmiBlitz3.ab2@948>         UnLock_ lock
000328E2 <AmiBlitz3.ab2@959>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
00032956 <AmiBlitz3.ab2@960> 
00032960 <AmiBlitz3.ab2@961>   *PreProcessor.preprocessor = preproc_Create{}
00032970 <AmiBlitz3.ab2@962>   Poke.l ?comPtr_PreProcessor,*PreProcessor
000329A2 <AmiBlitz3.ab2@963>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
000329B6 <AmiBlitz3.ab2@964>   If *PreProcessor\tokens=#NULL
00032A30 <AmiBlitz3.ab2@965>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
00032A3A <AmiBlitz3.ab2@966>     preproc_QueryTokens{*PreProcessor}
00032A6C <AmiBlitz3.ab2@967>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
00032AB8 <AmiBlitz3.ab2@975>   If cli_sourcefile><"" AND err=False
00032B5E <AmiBlitz3.ab2@976>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
00032B90 <AmiBlitz3.ab2@977>     succ=LoadSource{cli_sourcefile}
00032B9A <AmiBlitz3.ab2@978>     If succ
00032BD2 <AmiBlitz3.ab2@979> 
00032C4C <AmiBlitz3.ab2@980>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
00032C86 <AmiBlitz3.ab2@981>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
00032C90 <AmiBlitz3.ab2@983>         If comerr
00032C96 <AmiBlitz3.ab2@985>         Else
00032C9C <AmiBlitz3.ab2@989>     Else
00032CEC <AmiBlitz3.ab2@990>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
00032D38 <AmiBlitz3.ab2@994>   If cli_savefile><"" AND err=False
00032DB2 <AmiBlitz3.ab2@995>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
00032DE0 <AmiBlitz3.ab2@996>     SaveSource{cli_savefile}
00032E2C <AmiBlitz3.ab2@999>   If cli_dumpfile><"" AND err=False
00032E76 <AmiBlitz3.ab2@1000>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
00032EAC <AmiBlitz3.ab2@1001>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
00032EB6 <AmiBlitz3.ab2@1004>   If cli_run
00032ECA <AmiBlitz3.ab2@1005>     If comerr=False
00032EF6 <AmiBlitz3.ab2@1006>       If cli_exefile
00032F70 <AmiBlitz3.ab2@1007>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
00032F9E <AmiBlitz3.ab2@1008>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
00032FE8 <AmiBlitz3.ab2@1010>       If cli_verbose>=1 Then NPrint "Running program..."
00032FF2 <AmiBlitz3.ab2@1011> 
00032FF4 <AmiBlitz3.ab2@1013>         CLR.l d0
00033032 <AmiBlitz3.ab2@1014>         !ComData_GetB{comByte_RunningFlag,D0}
00033036 <AmiBlitz3.ab2@1015>         running.l = PutD0
00033052 <AmiBlitz3.ab2@1016>         If running Then Delay_ 50
00033066 <AmiBlitz3.ab2@1018>       Until running=False
0003307A <AmiBlitz3.ab2@1019>       If Peek.l(?_runerror)
000330CA <AmiBlitz3.ab2@1020>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
000330DC <AmiBlitz3.ab2@1031>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
00033126 <AmiBlitz3.ab2@1032>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0003312C <AmiBlitz3.ab2@1033>   DeinitEmulatedPED{}
0003314A <AmiBlitz3.ab2@1035>   !asm
00033150 <AmiBlitz3.ab2@1036> JMP terminate_ab3
00033156 <AmiBlitz3.ab2@1041>   MOVEA.l ped_startup_addr,A1
0003315C <AmiBlitz3.ab2@1042>   LEA str_tempfilename,A0
0003315E <AmiBlitz3.ab2@1043>   JSR (A1)
00033164 <AmiBlitz3.ab2@1050>   MOVE.l signalNum,D0
0003316A <AmiBlitz3.ab2@1051>   MOVEA.l _execbase,A6
0003316E <AmiBlitz3.ab2@1052>   JSR _FreeSignal(A6)
00033174 <AmiBlitz3.ab2@1054>   MOVE.l ptr_seg_debugger,D1
00033178 <AmiBlitz3.ab2@1055>   BEQ.b skip_unload_debugger
0003317C <AmiBlitz3.ab2@1056>     MOVEA.l _dosbase(PC),A6
00033180 <AmiBlitz3.ab2@1057>     JSR _UnLoadSeg(A6)
00033184 <AmiBlitz3.ab2@1060>   BSR.w Aclearallvars
00033188 <AmiBlitz3.ab2@1061>   BSR.w free_residents
0003318E <AmiBlitz3.ab2@1062>   JSR free_blitzlibs
00033194 <AmiBlitz3.ab2@1065>   MOVE.l ptr_seg_ped,D1
00033198 <AmiBlitz3.ab2@1066>   BEQ freemem_and_quit
0003319C <AmiBlitz3.ab2@1067>   MOVEA.l _dosbase(PC),A6
000331A0 <AmiBlitz3.ab2@1068>   JSR _UnLoadSeg(A6)
000331A4 <AmiBlitz3.ab2@1069>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
000331CE <AmiBlitz3.ab2@1072>   !basic
00033292 <AmiBlitz3.ab2@1073> 
000332B0 <AmiBlitz3.ab2@1074>   !asm
000332B4 <AmiBlitz3.ab2@1075>   BRA freemem_and_quit
000332DE <AmiBlitz3.ab2@1078>   !basic
000333A2 <AmiBlitz3.ab2@1079>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
000333C0 <AmiBlitz3.ab2@1080>   !asm
000333C4 <AmiBlitz3.ab2@1084>   BSR.w freeallox
000333CA <AmiBlitz3.ab2@1085>   MOVEA.l ptr_macrobuffer_begin,A1
000333CC <AmiBlitz3.ab2@1086>   MOVE.l -(a1),D0
000333CE <AmiBlitz3.ab2@1087>   ADDQ.l #4,d0
000333D4 <AmiBlitz3.ab2@1088>   MOVEA.l _execbase,A6
000333D8 <AmiBlitz3.ab2@1089>   JSR _FreeMem(A6)
000333DE <AmiBlitz3.ab2@1092>   MOVEA.l _dosbase,A1
000333E4 <AmiBlitz3.ab2@1093>   MOVEA.l _execbase,A6
000333E8 <AmiBlitz3.ab2@1094>   JSR _CloseLibrary(A6)
000333EE <AmiBlitz3.ab2@1096>   MOVEA.l constpcat,A1
000333F4 <AmiBlitz3.ab2@1097>   MOVE.l constmaxpc,D0
000333FA <AmiBlitz3.ab2@1098>   MOVEA.l _execbase,A6
000333FE <AmiBlitz3.ab2@1099>   JSR _FreeMem(A6)
00033404 <AmiBlitz3.ab2@1102>   MOVEA.l _mathffpbase,A1
0003340A <AmiBlitz3.ab2@1103>   MOVEA.l _execbase,A6
0003340E <AmiBlitz3.ab2@1104>   JSR _CloseLibrary(A6)
00033414 <AmiBlitz3.ab2@1114>     MOVEA.l _execbase,A6
0003341A <AmiBlitz3.ab2@1115>     MOVE.l mempool,a0
0003341E <AmiBlitz3.ab2@1116>     JSR _DeletePool(a6)
00033424 <AmiBlitz3.ab2@1117>     CLR.l pushat
0003342A <AmiBlitz3.ab2@1124>   JSR free_unusedfunctions
0003342C <AmiBlitz3.ab2@1125>   MOVEQ #0,d0
0003343A <AmiBlitz3.ab2@1128>   !exitasm
00033472 <AmiBlitz3.ab2@1129>   If dynassign<>""
0003347C <AmiBlitz3.ab2@1130>     If *AssignSema
0003348C <AmiBlitz3.ab2@1131>       ReleaseSemaphore_ *AssignSema
000334A4 <AmiBlitz3.ab2@1132>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
00033538 <AmiBlitz3.ab2@1133>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
00033572 <AmiBlitz3.ab2@1134>         dos_RemAssign{dynassign}
00033582 <AmiBlitz3.ab2@1135>         RemSemaphore_ *AssignSema
00033592 <AmiBlitz3.ab2@1136>         ReleaseSemaphore_ *AssignSema
000335C8 <AmiBlitz3.ab2@1137>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
000335D8 <AmiBlitz3.ab2@1138>         FreeVec_ *AssignSema
000335E0 <AmiBlitz3.ab2@1139>         *AssignSema = #NULL
0003360E <AmiBlitz3.ab2@1143>   SetCurrentDir{cli_path}
00033630 <AmiBlitz3.ab2@1144>   !coutclose
00033636 <AmiBlitz3.ab2@1145> End
00033642 <AmiBlitz3.ab2@1150> str_doslibrary:     Dc.b "dos.library",0 : Even
00033646 <AmiBlitz3.ab2@1151> _dosbase:           Ds.l 1
0003364C <AmiBlitz3.ab2@1155>   MOVEA.l _execbase,A6
00033652 <AmiBlitz3.ab2@1156>   LEA str_doslibrary,A1
00033656 <AmiBlitz3.ab2@1157>   JSR _OldOpenLibrary(A6)
0003365C <AmiBlitz3.ab2@1158>   MOVE.l D0,_dosbase
0003365E <AmiBlitz3.ab2@1159> RTS
00033664 <AmiBlitz3.ab2@1163>   MOVEA.l #str_mathffpname,A1
0003366A <AmiBlitz3.ab2@1164>   MOVEA.l _execbase,A6
0003366E <AmiBlitz3.ab2@1165>   JSR _OldOpenLibrary(A6)
00033674 <AmiBlitz3.ab2@1166>   MOVE.l D0,_mathffpbase
00033676 <AmiBlitz3.ab2@1167> RTS
000336A8 <AmiBlitz3.ab2@1173>   !ComData_JMP{comFunc_SetNormalPointer}
000336DA <AmiBlitz3.ab2@1181>   !ComData_JMP{comFunc_SetBusyPointer}
00033704 <AmiBlitz3.ab2@1186>   !basic
00033708 <AmiBlitz3.ab2@1187>   ab3save_filenameP.l = PutD0
00033712 <AmiBlitz3.ab2@1188>   If ab3save_filenameP
0003373A <AmiBlitz3.ab2@1189>     ab3save_filename.s = Peek.s(ab3save_filenameP)
00033768 <AmiBlitz3.ab2@1191>     SaveSource{ab3save_filename}
0003376E <AmiBlitz3.ab2@1192>   Else
000337A8 <AmiBlitz3.ab2@1193>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
000337C6 <AmiBlitz3.ab2@1195>   !asm
000337C8 <AmiBlitz3.ab2@1196>   RTS
000337F2 <AmiBlitz3.ab2@1199>   !basic
000337F6 <AmiBlitz3.ab2@1200>   ab3save_filenameP.l = PutD0
00033800 <AmiBlitz3.ab2@1201>   If ab3save_filenameP
00033828 <AmiBlitz3.ab2@1202>     ab3save_filename.s = Peek.s(ab3save_filenameP)
00033856 <AmiBlitz3.ab2@1203>     LoadSource{ab3save_filename}
0003385C <AmiBlitz3.ab2@1204>   Else
00033896 <AmiBlitz3.ab2@1205>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
000338B4 <AmiBlitz3.ab2@1207>   !asm
000338B6 <AmiBlitz3.ab2@1208>   RTS
000338E0 <AmiBlitz3.ab2@1211>   !basic
000338E6 <AmiBlitz3.ab2@1212>   ClearSource{}
00033904 <AmiBlitz3.ab2@1213>   !asm
00033906 <AmiBlitz3.ab2@1214>   RTS
00033930 <AmiBlitz3.ab2@1217>   !basic
00033936 <AmiBlitz3.ab2@1218>   OpenConsoleFake{}
00033954 <AmiBlitz3.ab2@1219>   !asm
00033956 <AmiBlitz3.ab2@1220>   RTS
00033980 <AmiBlitz3.ab2@1224>   !basic
00033986 <AmiBlitz3.ab2@1225>   CloseConsoleFake{}
000339A4 <AmiBlitz3.ab2@1226>   !asm
000339A6 <AmiBlitz3.ab2@1227>   RTS
000339AC <AmiBlitz3.ab2@1231>   MOVE.w d6,menuitemdebug
000339D6 <AmiBlitz3.ab2@1232>   !basic
000339E8 <AmiBlitz3.ab2@1233>   menuitemx.l = Peek.w(?menuitemdebug)
00033A0E <AmiBlitz3.ab2@1234>   If menuitemx>16 OR  menuitemx<0
00033A82 <AmiBlitz3.ab2@1235>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
00033A8A <AmiBlitz3.ab2@1236>     menuitemx=0
00033A9A <AmiBlitz3.ab2@1238>   Poke.w ?menuitemdebug,menuitemx
00033AB8 <AmiBlitz3.ab2@1239>   !asm
00033ABE <AmiBlitz3.ab2@1240>   MOVE.w menuitemdebug,d6
00033AC4 <AmiBlitz3.ab2@1243>   MOVE.l A5,firstitem_
00033ACA <AmiBlitz3.ab2@1244>   MOVE.w D7,numlines_org
00033AD0 <AmiBlitz3.ab2@1245>   MOVE.l d7,numlines
00033AD2 <AmiBlitz3.ab2@1246>   LSL.w #2,D6
00033AD8 <AmiBlitz3.ab2@1247>   LEA menu_items,A0
00033ADC <AmiBlitz3.ab2@1248>   MOVEA.l $0(A0,D6.W),A0
00033AE6 <AmiBlitz3.ab2@1249>   MOVE.l #$FFFFffff,linenumat
00033AF0 <AmiBlitz3.ab2@1250>   MOVE.l #$FFFFffff,compilelinecounter
00033AF2 <AmiBlitz3.ab2@1254>   JSR (A0)
00033AF8 <AmiBlitz3.ab2@1255>   MOVE.l compilelinecounter,D0
00033AFA <AmiBlitz3.ab2@1256> RTS
00033AFE <AmiBlitz3.ab2@1258> menuitemdebug: Dc.l 0
00033B02 <AmiBlitz3.ab2@1260> mempool                Dc.l 0
00033B18 <AmiBlitz3.ab2@1261> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
00033B1E <AmiBlitz3.ab2@1262> dloaderr:             JSR handle_compileerror
00033B3A <AmiBlitz3.ab2@1263>                        Dc.b "Can't LoadSeg debug module!",0 : Even
00033B78 <AmiBlitz3.ab2@1271>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00033B7E <AmiBlitz3.ab2@1272>   LEA str_loaddebugmessage,A2
00033B84 <AmiBlitz3.ab2@1273>   LEA str_blitz3assign,A0
00033B8A <AmiBlitz3.ab2@1274>   LEA str_temp_debugmodulename,A1
00033B8C <AmiBlitz3.ab2@1277>   JSR (A3)
00033B90 <AmiBlitz3.ab2@1279>   BEQ.w menu_loaddebugmodule_noload
00033B96 <AmiBlitz3.ab2@1280>   MOVE.l D0,ptr_temp_debugmodule
00033B9A <AmiBlitz3.ab2@1281>   BSR.w call_setpointerbusy
00033BA0 <AmiBlitz3.ab2@1282>   MOVE.l A7,errstack
00033BAA <AmiBlitz3.ab2@1283>   MOVE.l #menu_loaddebugmodule_noload,errcont
00033BB0 <AmiBlitz3.ab2@1284>   MOVE.l ptr_temp_debugmodule,D1
00033BB4 <AmiBlitz3.ab2@1286>   MOVEA.l _dosbase(PC),A6
00033BB8 <AmiBlitz3.ab2@1287>   JSR _LoadSeg(A6)
00033BBA <AmiBlitz3.ab2@1288>   MOVE.l D0,D7
00033BBE <AmiBlitz3.ab2@1289>   BEQ.w dloaderr
00033BC4 <AmiBlitz3.ab2@1290>   MOVE.l ptr_seg_debugger,D1
00033BC8 <AmiBlitz3.ab2@1291>   BEQ.b menu_loaddebugmodule_ndseg
00033BCC <AmiBlitz3.ab2@1292>   MOVEA.l _dosbase(PC),A6
00033BD0 <AmiBlitz3.ab2@1293>   JSR _UnLoadSeg(A6)
00033BD4 <AmiBlitz3.ab2@1294>   BSR.w call_setpointernormal
00033BDA <AmiBlitz3.ab2@1297>   MOVE.l D7,ptr_seg_debugger
00033BDC <AmiBlitz3.ab2@1300> RTS
00033BFA <AmiBlitz3.ab2@1303> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
00033CBA <AmiBlitz3.ab2@1304> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
00033D7A <AmiBlitz3.ab2@1305> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
00033D7E <AmiBlitz3.ab2@1306> ptr_newexefilename:    Dc.l 0                                                               ;execname org
00033DA8 <AmiBlitz3.ab2@1310>   !basic
00033DD2 <AmiBlitz3.ab2@1311>   exepath.s = Peek.s(?exepath)
00033DFC <AmiBlitz3.ab2@1312>   exefile.s = Peek.s(?exefilename)
00033E7C <AmiBlitz3.ab2@1313>   exefile.s = dos_AddPart{exepath,exefile}
00033EB4 <AmiBlitz3.ab2@1314>   Poke.s ?tempspace,exefile
00033ED2 <AmiBlitz3.ab2@1315>   !asm
00033ED8 <AmiBlitz3.ab2@1336>   LEA tempspace,a0
00033EDA <AmiBlitz3.ab2@1337>   MOVE.l a0,d0
00033EDE <AmiBlitz3.ab2@1338> BRA newcreate2
00033F08 <AmiBlitz3.ab2@1344>   !basic
00033F32 <AmiBlitz3.ab2@1345>   request_exename.s = Peek.s(?str_request_exename )
00033F8E <AmiBlitz3.ab2@1346>   request_exename   = !TRANS{request_exename}
00033F94 <AmiBlitz3.ab2@1347>   GetD0 &request_exename
00033FB2 <AmiBlitz3.ab2@1348>   !asm
00033FB4 <AmiBlitz3.ab2@1349>   MOVE.l D0,A2
00033FF2 <AmiBlitz3.ab2@1352>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00033FF8 <AmiBlitz3.ab2@1354>   LEA exepath,A0
00033FFE <AmiBlitz3.ab2@1355>   LEA exefilename,A1
00034000 <AmiBlitz3.ab2@1358>   JSR (A3)                                                 ;open ped filerequest
00034004 <AmiBlitz3.ab2@1359>   BEQ.w cancel_createexe
0003400E <AmiBlitz3.ab2@1362>   ADD.l #1,number_of_builds
00034014 <AmiBlitz3.ab2@1365>   MOVE.l D0,ptr_newexefilename
0003401C <AmiBlitz3.ab2@1366>   MOVE.w #-1,debugversion
00034022 <AmiBlitz3.ab2@1367>   MOVE.w set_make_smallestcode,-(A7)
0003402A <AmiBlitz3.ab2@1371>     MOVE.w #1,makeexec
00034030 <AmiBlitz3.ab2@1372>     JSR ab3_OpenDebugFile
00034034 <AmiBlitz3.ab2@1373>     BSR.w startcompile
0003403A <AmiBlitz3.ab2@1374>     JSR ab3_CloseDebugFile
00034044 <AmiBlitz3.ab2@1375>     CMP.l #"NORE",reqmode
00034048 <AmiBlitz3.ab2@1376>   BEQ 'l1
0003404E <AmiBlitz3.ab2@1378>   TST.w anyerrs
00034052 <AmiBlitz3.ab2@1379>   BNE.b menu_createexecutable__skip
00034056 <AmiBlitz3.ab2@1380>   BSR.w savefile
0003405C <AmiBlitz3.ab2@1383>   MOVE.w (A7)+,set_make_smallestcode
0003405E <AmiBlitz3.ab2@1386> RTS
00034066 <AmiBlitz3.ab2@1390>   MOVE.w #-1,flag_noPED
00034068 <AmiBlitz3.ab2@1391> RTS
00034070 <AmiBlitz3.ab2@1395>   MOVE.w #-1,flag_noCLI
00034072 <AmiBlitz3.ab2@1396> RTS
0003409C <AmiBlitz3.ab2@1399>   !basic
000340C4 <AmiBlitz3.ab2@1400>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
000340D4 <AmiBlitz3.ab2@1401>     Poke.w ?word_WriteDebugFileNow,0
000340F2 <AmiBlitz3.ab2@1402>   !asm
000340F4 <AmiBlitz3.ab2@1403> RTS
0003411E <AmiBlitz3.ab2@1406>   !basic
0003412E <AmiBlitz3.ab2@1407>   Poke.w ?word_WriteDebugFileNow,0
00034140 <AmiBlitz3.ab2@1408>   If dbg_fid>=0
00034156 <AmiBlitz3.ab2@1409>     file_Close{dbg_fid} : dbg_fid = -1
00034168 <AmiBlitz3.ab2@1411>   If dbg_fid.l<0
0003416A <AmiBlitz3.ab2@1412>     CLR.l d0
000341A8 <AmiBlitz3.ab2@1413>     !ComData_GetW{comWord_CreateDebugFile,D0}
000341AC <AmiBlitz3.ab2@1414>     dbg_Create.l = PutD0
000341B6 <AmiBlitz3.ab2@1415>     If (dbg_Create) ; only when set!
000341C6 <AmiBlitz3.ab2@1416>       exefileP.l = Peek.l (?ptr_newexefilename)
000341EE <AmiBlitz3.ab2@1417>       exefile.s = ""
00034220 <AmiBlitz3.ab2@1418>       If exefileP Then exefile.s = Peek.s(exefileP)
00034258 <AmiBlitz3.ab2@1419>       If exefile><""
000342AE <AmiBlitz3.ab2@1420>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
000342C0 <AmiBlitz3.ab2@1421>         If dbg_fid>=0
000342D2 <AmiBlitz3.ab2@1422>           Poke.w ?word_WriteDebugFileNow,-1
000342DE <AmiBlitz3.ab2@1425>       oldhunkoffset.l = -1
00034306 <AmiBlitz3.ab2@1426>       oldfile.s       = ""
00034324 <AmiBlitz3.ab2@1429>   !asm
00034326 <AmiBlitz3.ab2@1430> RTS
0003432C <AmiBlitz3.ab2@1433> TST.w word_WriteDebugFileNow
00034330 <AmiBlitz3.ab2@1434> BEQ 'skipdebugfile
0003435A <AmiBlitz3.ab2@1435> !basic
0003436C <AmiBlitz3.ab2@1436>   If dbg_fid>=0
0003437E <AmiBlitz3.ab2@1437>     pass.l          = Peek.w(?pass)
00034390 <AmiBlitz3.ab2@1438>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
000343B4 <AmiBlitz3.ab2@1439> 
000343BA <AmiBlitz3.ab2@1440>       oldhunkoffset.l = hunkoffset.l
000343EE <AmiBlitz3.ab2@1441>       oldfile.s       = codefile.s
0003440A <AmiBlitz3.ab2@1442>       If Peek.w (?ininclude)>0
0003441A <AmiBlitz3.ab2@1443>         codeline.l = Peek.l(?includeline);-1
0003448A <AmiBlitz3.ab2@1444>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
00034490 <AmiBlitz3.ab2@1445>       Else
000344BE <AmiBlitz3.ab2@1446>         !ComData_LEA{comStr_SourceName,A0}
000344C0 <AmiBlitz3.ab2@1447>         MOVE.l A0,D0
000344C4 <AmiBlitz3.ab2@1448>         sourceP.l = PutD0
000344EC <AmiBlitz3.ab2@1449>         codefile.s = Peek.s(sourceP)
000344FC <AmiBlitz3.ab2@1450>         codeline.l = Peek.l(?linenumat)
00034524 <AmiBlitz3.ab2@1452>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00034578 <AmiBlitz3.ab2@1453>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00034588 <AmiBlitz3.ab2@1460>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
00034592 <AmiBlitz3.ab2@1461>         If *sourceLine
000345A8 <AmiBlitz3.ab2@1462>           MaxLen detokenline.s = 65536
000345EA <AmiBlitz3.ab2@1463>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000345FA <AmiBlitz3.ab2@1464>          *tn.preprocessor = Peek.l(?include_preprocessor)
00034626 <AmiBlitz3.ab2@1465>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00034654 <AmiBlitz3.ab2@1466>           If written>0 Then Poke.b &detokenline+written-1,0
0003467E <AmiBlitz3.ab2@1467>           sourceLineText.s = Peek.s(&detokenline)
00034684 <AmiBlitz3.ab2@1468>         Else
000346AC <AmiBlitz3.ab2@1469>           sourceLineText = "NULL"
00034774 <AmiBlitz3.ab2@1472>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00034792 <AmiBlitz3.ab2@1478> !asm
00034794 <AmiBlitz3.ab2@1480> RTS
00034796 <AmiBlitz3.ab2@1482> word_WriteDebugFileNow: Dc.w 0
00034798 <AmiBlitz3.ab2@1484> flag_noPED:  Ds.w 1                                        ;closeed org source
0003479A <AmiBlitz3.ab2@1485> flag_noCLI:  Ds.w 1                                        ;nocli org source
0003479E <AmiBlitz3.ab2@1489>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000347A4 <AmiBlitz3.ab2@1490>   MOVEA.l _execbase,A6
000347A8 <AmiBlitz3.ab2@1491>   JSR _CacheClearU(A6)
000347AC <AmiBlitz3.ab2@1492>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000347AE <AmiBlitz3.ab2@1493> RTS
000347B2 <AmiBlitz3.ab2@1496>   MOVEM.l A2-A3,-(A7)
000347B8 <AmiBlitz3.ab2@1497>   CLR.b doublepeek
000347BE <AmiBlitz3.ab2@1498>   MOVE.l A5,lastsourcepos
000347C4 <AmiBlitz3.ab2@1499>    JSR getchar
000347C8 <AmiBlitz3.ab2@1500>   CMP.w #$2E,D0
000347CC <AmiBlitz3.ab2@1501>    BEQ.w JL_0_49B4b
000347D2 <AmiBlitz3.ab2@1502>   MOVEA.l defaulttype,A2
000347D6 <AmiBlitz3.ab2@1503>   CMP.w #$24,D0
000347DA <AmiBlitz3.ab2@1504>    BNE.w JL_0_49CAb
000347DC <AmiBlitz3.ab2@1505>   MOVEQ.l #$07,D1
000347E0 <AmiBlitz3.ab2@1506> BRA.w JL_0_49DEb
000347E6 <AmiBlitz3.ab2@1509>   JSR getparameter2
000347EA <AmiBlitz3.ab2@1510>   BEQ.w syntaxerrb
000347F0 <AmiBlitz3.ab2@1511>   LEA newtypebase,A2
000347F6 <AmiBlitz3.ab2@1512>   JSR findtype
000347FA <AmiBlitz3.ab2@1513>   BNE.w notypeerrb
00034804 <AmiBlitz3.ab2@1518>   MOVE.w oldqflag,instringon
0003480A <AmiBlitz3.ab2@1519>   MOVEA.l lastsourcepos,A5
00034810 <AmiBlitz3.ab2@1521>   MOVE.l a2,functionreturntype
00034818 <AmiBlitz3.ab2@1522>   CMPI.l #$100,$4(A2)
0003481C <AmiBlitz3.ab2@1523>   BLE.w 'isvar
0003481E <AmiBlitz3.ab2@1527>   MOVEQ #3,d1
00034822 <AmiBlitz3.ab2@1528>   BRA JL_0_49DEb
00034826 <AmiBlitz3.ab2@1535>   MOVE.w $6(A2),D1
0003482C <AmiBlitz3.ab2@1536>   CMP.w #8,8(a2)
00034830 <AmiBlitz3.ab2@1537>   BNE 'l1
00034838 <AmiBlitz3.ab2@1538>   MOVE.b #1,doublepeek
0003483E <AmiBlitz3.ab2@1541>   MOVE.w D1,convsize
00034842 <AmiBlitz3.ab2@1542>   MOVEM.l (A7)+,A2-A3
00034844 <AmiBlitz3.ab2@1543> RTS
0003484A <AmiBlitz3.ab2@1545> notypeerrb JMP notypeerr
00034850 <AmiBlitz3.ab2@1546> illtypeerrb JMP illtypeerr
00034856 <AmiBlitz3.ab2@1547> syntaxerrb JMP syntaxerr
00034860 <AmiBlitz3.ab2@1592>   ADD.l #1,number_of_builds
00034866 <AmiBlitz3.ab2@1594>   CLR.w debugversion
0003486C <AmiBlitz3.ab2@1595>   CLR.w flag_noPED
00034872 <AmiBlitz3.ab2@1596>   CLR.w flag_noCLI
0003487A <AmiBlitz3.ab2@1599>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0003487E <AmiBlitz3.ab2@1600>     BSR.w startcompile
00034888 <AmiBlitz3.ab2@1601>     CMP.l #"NORE",reqmode
0003488C <AmiBlitz3.ab2@1602>   BEQ 'l1
00034892 <AmiBlitz3.ab2@1605>   TST.w anyerrs
00034896 <AmiBlitz3.ab2@1606>    BNE.w JL_0_3482
0003489A <AmiBlitz3.ab2@1608>   MOVE.w flag_noPED(PC),D1
0003489E <AmiBlitz3.ab2@1609>    BEQ.w skip_closingGUI
000348D0 <AmiBlitz3.ab2@1614>   !ComData_JSR{comFunc_CloseGUI}
000348D4 <AmiBlitz3.ab2@1615> BRA.b runprogram
000348D8 <AmiBlitz3.ab2@1619>   BSR.w compilerequester
000348DE <AmiBlitz3.ab2@1622>   MOVEA.l _dosbase,A6
000348E4 <AmiBlitz3.ab2@1623>   LEA exepath,a0
000348E6 <AmiBlitz3.ab2@1624>   MOVE.l a0,d1
000348E8 <AmiBlitz3.ab2@1625>   MOVEQ #-2,d2
000348EC <AmiBlitz3.ab2@1626>   JSR _Lock(a6)                                            ;lock
000348F2 <AmiBlitz3.ab2@1627>   MOVE.l d0,exelock
000348F8 <AmiBlitz3.ab2@1628>   MOVE.l #0,d1
000348FC <AmiBlitz3.ab2@1629>   JSR _CurrentDir(A6)
00034902 <AmiBlitz3.ab2@1630>   MOVE.l D0,lock_currentdir
00034904 <AmiBlitz3.ab2@1631>   MOVE.l D0,D1
00034908 <AmiBlitz3.ab2@1632>   JSR _CurrentDir(A6)
0003490E <AmiBlitz3.ab2@1633>   CLR.l ptr_exetask
00034914 <AmiBlitz3.ab2@1642>   MOVE.l #str_process_name,D1
00034916 <AmiBlitz3.ab2@1643>   MOVEQ.l #$00,D2
0003491C <AmiBlitz3.ab2@1644>   MOVE.l #proc_seglist,D3
0003491E <AmiBlitz3.ab2@1645>   LSR.l #2,D3
00034924 <AmiBlitz3.ab2@1646>   MOVE.l stacksize,D4
0003492A <AmiBlitz3.ab2@1647>   MOVEA.l _dosbase,A6
0003492E <AmiBlitz3.ab2@1648>   JSR _CreateProc(A6)                                      ;runtask
00034930 <AmiBlitz3.ab2@1649>   TST.l D0
00034934 <AmiBlitz3.ab2@1650>    BEQ ErrorRunningProg
0003496A <AmiBlitz3.ab2@1652>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00034970 <AmiBlitz3.ab2@1654>   TST.w flag_noPED
00034974 <AmiBlitz3.ab2@1655>    BNE.b JL_0_344E
00034978 <AmiBlitz3.ab2@1656>   BSR.w close_compilewin
0003497E <AmiBlitz3.ab2@1659>   CLR.l firstlocal
00034984 <AmiBlitz3.ab2@1660>   CLR.l firstglob
00034988 <AmiBlitz3.ab2@1661>   MOVE.w flag_noPED(PC),D1
0003498C <AmiBlitz3.ab2@1662>   BEQ.w skip_openGUI
000349BE <AmiBlitz3.ab2@1666>   !ComData_JSR{comFunc_CreateGUI}
000349C0 <AmiBlitz3.ab2@1675> RTS
000349CA <AmiBlitz3.ab2@1678> MOVE.l #1,_runerror
000349CE <AmiBlitz3.ab2@1679> BRA JL_0_344E
000349D2 <AmiBlitz3.ab2@1681> _runerror: Dc.l 0
000349D6 <AmiBlitz3.ab2@1682> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000349DA <AmiBlitz3.ab2@1683> ptr_exetask:        Ds.l 1                                          ;panictask org source
000349DE <AmiBlitz3.ab2@1684> signalNum:          Ds.l 1                                          ;panicbit org source
000349E2 <AmiBlitz3.ab2@1685> signals:            Ds.l 1                                          ;panicmask org source
000349F8 <AmiBlitz3.ab2@1687> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000349FD <AmiBlitz3.ab2@1688>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00034A00 <AmiBlitz3.ab2@1689> Even4
00034A04 <AmiBlitz3.ab2@1691> ptr_ThisTask:       Ds.l 1                                          ;length
00034A08 <AmiBlitz3.ab2@1692> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00034A0E <AmiBlitz3.ab2@1696>   MOVEA.l $4,A0
00034A16 <AmiBlitz3.ab2@1697>   MOVE.l  $114(A0),ptr_exetask
00034A1C <AmiBlitz3.ab2@1699>   MOVEA.l _dosbase,A6
00034A22 <AmiBlitz3.ab2@1700>   MOVE.l exelock,D1
00034A26 <AmiBlitz3.ab2@1701>   JSR _CurrentDir(A6)
00034A5C <AmiBlitz3.ab2@1706>   !ComData_SetB{comByte_RunningFlag,#1}
00034A60 <AmiBlitz3.ab2@1712>   MOVE.w flag_noCLI(PC),D1
00034A64 <AmiBlitz3.ab2@1713>    BNE.b skip_openconsole
00034A96 <AmiBlitz3.ab2@1717>   !ComData_JSR{comFunc_OpenConsole}
00034A9A <AmiBlitz3.ab2@1720>   BSR.w calcvbr
00034AA0 <AmiBlitz3.ab2@1721>   MOVEA.l vbr,A0
00034AA6 <AmiBlitz3.ab2@1726>   CLR.w dirmode
00034AAC <AmiBlitz3.ab2@1727>   CLR.l firstglob
00034AB2 <AmiBlitz3.ab2@1728>   CLR.l firstlocal
00034AB8 <AmiBlitz3.ab2@1730>   MOVE.l stacksize,D2
00034ABE <AmiBlitz3.ab2@1731>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00034AC4 <AmiBlitz3.ab2@1732>   LEA str_cliarguments,A0                                   ;cli arguement
00034ACA <AmiBlitz3.ab2@1733>   MOVEA.l destbufferstart,A1
00034ACE <AmiBlitz3.ab2@1734>   BSR.w Aclearcache
00034AD0 <AmiBlitz3.ab2@1737>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00034AD6 <AmiBlitz3.ab2@1739>   MOVEA.l vbr,A0
00034ADC <AmiBlitz3.ab2@1741>   CLR.l firstglob
00034AE2 <AmiBlitz3.ab2@1742>   CLR.l firstlocal
00034AE8 <AmiBlitz3.ab2@1743>   MOVEA.l _dosbase,A6
00034AEE <AmiBlitz3.ab2@1744>   MOVE.l exelock,d1
00034AF2 <AmiBlitz3.ab2@1745>   BEQ 'nolock
00034AF6 <AmiBlitz3.ab2@1746>   JSR _UnLock(a6)
00034B2C <AmiBlitz3.ab2@1751>   !ComData_SetB{comByte_RunningFlag,#0}
00034B30 <AmiBlitz3.ab2@1754>   MOVE.w flag_noCLI(PC),D1
00034B34 <AmiBlitz3.ab2@1755>    BNE.b skip_closeconsole
00034B66 <AmiBlitz3.ab2@1759>   !ComData_JSR{comFunc_CloseConsole}
00034B6E <AmiBlitz3.ab2@1762>   MOVE.w #$0001,stopit
00034B72 <AmiBlitz3.ab2@1763>   MOVE.l signals(PC),D0
00034B78 <AmiBlitz3.ab2@1764>   MOVEA.l ptr_ThisTask,A1
00034B7E <AmiBlitz3.ab2@1765>   MOVEA.l _execbase,A6
00034B82 <AmiBlitz3.ab2@1766>   JSR _Signal(A6)
00034B84 <AmiBlitz3.ab2@1767> RTS
00034B8A <AmiBlitz3.ab2@1771>   MOVEA.l _execbase,A6
00034B8E <AmiBlitz3.ab2@1772>   MOVE.w $128(A6),D0
00034B90 <AmiBlitz3.ab2@1773>   MOVEQ.l #$00,D1
00034B94 <AmiBlitz3.ab2@1774>   ANDI.w #$F,D0
00034B98 <AmiBlitz3.ab2@1777>     BEQ.b calcvbr__skip
00034B9A <AmiBlitz3.ab2@1778>     ADDQ.w #1,D1
00034B9C <AmiBlitz3.ab2@1779>     LSR.w #1,D0
00034BA0 <AmiBlitz3.ab2@1780> BRA.b calcvbr_loop
00034BA2 <AmiBlitz3.ab2@1783>   MOVEQ.l #$00,D2
00034BA6 <AmiBlitz3.ab2@1784>   CMP.w #$2,D1
00034BAA <AmiBlitz3.ab2@1785>    BCS.b calcvbr__skip2
00034BB0 <AmiBlitz3.ab2@1786>   MOVEA.l _execbase,A6
00034BB4 <AmiBlitz3.ab2@1787>   JSR _SuperState(A6)
00034BB8 <AmiBlitz3.ab2@1788>   Dc.l $4E7A2801                                           ;movec vbr,D2
00034BBC <AmiBlitz3.ab2@1789>   JSR _UserState(A6)
00034BC2 <AmiBlitz3.ab2@1792>   MOVE.l D2,vbr
00034BC4 <AmiBlitz3.ab2@1793> RTS
00034BCA <AmiBlitz3.ab2@1797>   LEA instrtab,a0
00034BD0 <AmiBlitz3.ab2@1798>   MOVE.l #labelhash-instrtab,d0
00034BD2 <AmiBlitz3.ab2@1799>   ASR.l #2,d0
00034BD4 <AmiBlitz3.ab2@1800>   SUBQ.l #1,d0
00034BD6 <AmiBlitz3.ab2@1803>   CLR.l (a0)+
00034BD8 <AmiBlitz3.ab2@1804>   SUBQ.l #1,d0
00034BDC <AmiBlitz3.ab2@1805>   BNE 'l10
00034BE0 <AmiBlitz3.ab2@1806>   BSR.w call_setpointerbusy
00034BE4 <AmiBlitz3.ab2@1807>   BSR.w free_userlibs
00034BE8 <AmiBlitz3.ab2@1808>   BSR.w scan_for_userlibs
00034BEC <AmiBlitz3.ab2@1809>   BSR.w JL_0_7082
00034BF0 <AmiBlitz3.ab2@1810> BRA.w call_setpointernormal
00034C1A <AmiBlitz3.ab2@1816>   !basic
00034C54 <AmiBlitz3.ab2@1817>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00034C64 <AmiBlitz3.ab2@1819>   deflibNameP.l = Peek.l(?deflib)
00034C6E <AmiBlitz3.ab2@1820>   If deflibNameP
00034CA0 <AmiBlitz3.ab2@1821>     If Peek.s(deflibNameP)<>""
00034CEA <AmiBlitz3.ab2@1822>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00034CF0 <AmiBlitz3.ab2@1823>     Else
00034D2A <AmiBlitz3.ab2@1824>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00034D30 <AmiBlitz3.ab2@1826>   Else
00034D6A <AmiBlitz3.ab2@1827>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00034DA4 <AmiBlitz3.ab2@1828>     error{"INTERNAL: Invalid deflib name pointer!"}
00034DC2 <AmiBlitz3.ab2@1830>   !asm
00034DC8 <AmiBlitz3.ab2@1835>   MOVE.l #str_path_userlibs,D1
00034DCA <AmiBlitz3.ab2@1836>   MOVEQ.l #-$02,D2
00034DD0 <AmiBlitz3.ab2@1837>   MOVEA.l _dosbase,A6
00034DD4 <AmiBlitz3.ab2@1838>   JSR _Lock(A6)
00034DD6 <AmiBlitz3.ab2@1839>   MOVE.l D0,D7
00034DDA <AmiBlitz3.ab2@1840>    BEQ.w exit_get_libraries
00034DDC <AmiBlitz3.ab2@1841>   MOVE.l D7,D1
00034DE2 <AmiBlitz3.ab2@1842>   MOVE.l #ptr_parameterstore,D2
00034DE6 <AmiBlitz3.ab2@1843>   JSR _Examine(A6)
00034DE8 <AmiBlitz3.ab2@1844>   TST.l D0
00034DEC <AmiBlitz3.ab2@1845>   BEQ.w unlock_and_exit_get_libraries
00034DF2 <AmiBlitz3.ab2@1846>   MOVE.l fib_DirEntryType,D0
00034DF6 <AmiBlitz3.ab2@1847>   BMI.w unlock_and_exit_get_libraries
00034DF8 <AmiBlitz3.ab2@1852>     MOVE.l D7,D1
00034DFE <AmiBlitz3.ab2@1853>     MOVE.l #ptr_parameterstore,D2
00034E04 <AmiBlitz3.ab2@1854>     MOVEA.l _dosbase,A6
00034E08 <AmiBlitz3.ab2@1855>     JSR _ExNext(A6)
00034E0A <AmiBlitz3.ab2@1856>     TST.l D0
00034E0E <AmiBlitz3.ab2@1857>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00034E14 <AmiBlitz3.ab2@1859>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00034E18 <AmiBlitz3.ab2@1860>     BPL.w scan_libsdrawer                                  ; skip directories
00034E1E <AmiBlitz3.ab2@1862>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00034E22 <AmiBlitz3.ab2@1863>     BSR.w check_for_infoextention
00034E26 <AmiBlitz3.ab2@1864>     BEQ.w scan_libsdrawer
00034E2C <AmiBlitz3.ab2@1866>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00034E2E <AmiBlitz3.ab2@1867>     MOVEQ.l #$26,D0
00034E30 <AmiBlitz3.ab2@1868>     MOVEQ.l #$01,D1
00034E36 <AmiBlitz3.ab2@1869>     MOVE.l mempool,a0
00034E3A <AmiBlitz3.ab2@1870>     JSR _AllocPooled(a6)
00034E40 <AmiBlitz3.ab2@1872>     MOVEA.l _dosbase,A6
00034E42 <AmiBlitz3.ab2@1873>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00034E48 <AmiBlitz3.ab2@1876>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00034E4A <AmiBlitz3.ab2@1879>     MOVE.l (A0),D5
00034E4E <AmiBlitz3.ab2@1880>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00034E50 <AmiBlitz3.ab2@1881>     MOVEA.l D5,A2
00034E52 <AmiBlitz3.ab2@1882>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00034E58 <AmiBlitz3.ab2@1885>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00034E5A <AmiBlitz3.ab2@1888>       MOVEQ.l #$00,D0
00034E5C <AmiBlitz3.ab2@1889>       MOVE.b (A1)+,D0
00034E60 <AmiBlitz3.ab2@1890>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00034E62 <AmiBlitz3.ab2@1891>       MOVEQ.l #$00,D1
00034E64 <AmiBlitz3.ab2@1892>       MOVE.b (A2)+,D1
00034E68 <AmiBlitz3.ab2@1893>        BEQ.w JL_0_371C
00034E8A <AmiBlitz3.ab2@1894>       !compare1                                            ;bsr.w tstalpha
00034E8E <AmiBlitz3.ab2@1895>       BNE.w JL_0_3702
00034E92 <AmiBlitz3.ab2@1896>       ANDI.w #$DF,D0
00034E94 <AmiBlitz3.ab2@1899>       EXG.l D0,D1
00034EB6 <AmiBlitz3.ab2@1900>       !compare1                                            ;bsr.w tstalpha
00034EBA <AmiBlitz3.ab2@1901>       BNE.w JL_0_3710
00034EBE <AmiBlitz3.ab2@1902>       ANDI.w #$DF,D0
00034EC0 <AmiBlitz3.ab2@1905>       EXG.l D0,D1
00034EC2 <AmiBlitz3.ab2@1906>       CMP.b D1,D0
00034EC6 <AmiBlitz3.ab2@1907>     BEQ.w JL_0_36E6
00034ECA <AmiBlitz3.ab2@1908>     BCS.w JL_0_3722
00034ECC <AmiBlitz3.ab2@1911>     MOVEA.l D5,A0
00034ED0 <AmiBlitz3.ab2@1912> BRA.w JL_0_36D6
00034ED2 <AmiBlitz3.ab2@1915>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00034ED4 <AmiBlitz3.ab2@1916>     MOVE.l (A0),(A1)
00034ED6 <AmiBlitz3.ab2@1917>     MOVE.l A1,(A0)
00034ED8 <AmiBlitz3.ab2@1918>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00034EDC <AmiBlitz3.ab2@1919>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00034EE2 <AmiBlitz3.ab2@1920>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00034EE4 <AmiBlitz3.ab2@1923>       MOVE.b (A0)+,(A1)+
00034EE8 <AmiBlitz3.ab2@1924>     BNE.w JL_0_3734
00034EEC <AmiBlitz3.ab2@1925> BRA.w scan_libsdrawer
00034EEE <AmiBlitz3.ab2@1928>   MOVE.l D7,D1
00034EF4 <AmiBlitz3.ab2@1929>   MOVEA.l _dosbase,A6
00034EF8 <AmiBlitz3.ab2@1930>   JSR _UnLock(A6)
00034EFA <AmiBlitz3.ab2@1931>   MOVEQ.l #-$01,D0
00034EFC <AmiBlitz3.ab2@1934> RTS
00034EFE <AmiBlitz3.ab2@1937>   MOVE.l D7,D1
00034F04 <AmiBlitz3.ab2@1938>   MOVEA.l _dosbase,A6
00034F08 <AmiBlitz3.ab2@1939>   JSR _UnLock(A6)
00034F0A <AmiBlitz3.ab2@1940>   MOVEQ.l #$00,D0
00034F0C <AmiBlitz3.ab2@1941> RTS
00034F12 <AmiBlitz3.ab2@1945>   MOVEA.l _execbase,A6
00034F18 <AmiBlitz3.ab2@1946>   MOVEA.l ptr_userlibs_list,A2
00034F1E <AmiBlitz3.ab2@1947>   CLR.l ptr_userlibs_list
00034F22 <AmiBlitz3.ab2@1950>     CMPA.w #$0,A2
00034F26 <AmiBlitz3.ab2@1951>     BEQ.w exit_free_userlib
00034F28 <AmiBlitz3.ab2@1952>       MOVEA.l A2,A1
00034F2A <AmiBlitz3.ab2@1953>       MOVEQ.l #$26,D0
00034F2C <AmiBlitz3.ab2@1954>       MOVEA.l (A2),A2
00034F32 <AmiBlitz3.ab2@1955>       MOVE.l mempool,a0
00034F38 <AmiBlitz3.ab2@1956>       MOVEA.l _execbase,A6
00034F3C <AmiBlitz3.ab2@1957>       JSR _FreePooled(A6)
00034F40 <AmiBlitz3.ab2@1958> BRA.w loop_free_userlib
00034F42 <AmiBlitz3.ab2@1961> RTS
00034F44 <AmiBlitz3.ab2@1964> pass:  Dc.w 0                                             ; smallpass org source
00034F46 <AmiBlitz3.ab2@1965> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00034F4C <AmiBlitz3.ab2@1969>   MOVE.l A7,errstack                                      ;startcompile
00034F52 <AmiBlitz3.ab2@1978>   CLR.l reqmode
00034F5C <AmiBlitz3.ab2@1980>   MOVE.l #Aclearallvars,errcont
00034F66 <AmiBlitz3.ab2@1981>   MOVE.l #concomstack,concomsp
00034F6A <AmiBlitz3.ab2@1988>   MOVE.w #1450,D0
00034F6C <AmiBlitz3.ab2@1989>   LSR.w #3,D0
00034F6E <AmiBlitz3.ab2@1990>   SUBQ.w #7,D0                                             ; 173
00034F74 <AmiBlitz3.ab2@1991>   MOVE.w D0,progressbar_width
00034F76 <AmiBlitz3.ab2@1992>   SWAP D0
00034F78 <AmiBlitz3.ab2@1993>   CLR.w D0
00034F7E <AmiBlitz3.ab2@1994>   MOVE.l numlines,d1
00034F82 <AmiBlitz3.ab2@1995>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00034F84 <AmiBlitz3.ab2@1997>   TST.w D0
00034F88 <AmiBlitz3.ab2@1998>   BNE.w JL_0_37C0
00034F8A <AmiBlitz3.ab2@1999>   MOVEQ.l #-$01,D0
00034F90 <AmiBlitz3.ab2@2002>   MOVE.w D0,progress_per_line
00034F98 <AmiBlitz3.ab2@2010>   BTST #$7,use_debugger
00034F9C <AmiBlitz3.ab2@2012>   BNE 'debugon
00034FA2 <AmiBlitz3.ab2@2013>   CLR.w debugmode
00034FA6 <AmiBlitz3.ab2@2014> BRA.b 'debugoff
00034FAC <AmiBlitz3.ab2@2017>   SNE debugmode
00034FE4 <AmiBlitz3.ab2@2025>   !ComData_SetB{comByte_DebugMode,debugmode}
00034FEA <AmiBlitz3.ab2@2028>   CLR.w dirmode                                            ;direct mode flag
00034FF0 <AmiBlitz3.ab2@2029>   CLR.w ezerr                                              ;quiet error
00034FF6 <AmiBlitz3.ab2@2030>   CLR.l currentfunction
00034FFC <AmiBlitz3.ab2@2031>   CLR.w connest
00035002 <AmiBlitz3.ab2@2032>   CLR.w varmode
00035008 <AmiBlitz3.ab2@2033>   CLR.w proceduremode
0003500E <AmiBlitz3.ab2@2034>   CLR.w ininclude
00035014 <AmiBlitz3.ab2@2035>   CLR.w intstring
0003501A <AmiBlitz3.ab2@2036>   CLR.w pass
00035022 <AmiBlitz3.ab2@2037>   MOVE.w #0,compiler_job
00035028 <AmiBlitz3.ab2@2038>   CLR.l funcscanon
0003502E <AmiBlitz3.ab2@2047>   CLR.l funcscanon
00035032 <AmiBlitz3.ab2@2048>   BSR.w compileall
00035038 <AmiBlitz3.ab2@2049> 
0003503E <AmiBlitz3.ab2@2050>   TST.l errorcounter
00035042 <AmiBlitz3.ab2@2051>   BEQ _skiperrorstop
00035044 <AmiBlitz3.ab2@2052>   RTS
0003504A <AmiBlitz3.ab2@2055>   MOVE.w dontwrite,d0
0003504E <AmiBlitz3.ab2@2056>   CMP.w #1,d0
00035052 <AmiBlitz3.ab2@2057>   BNE 'l3
00035058 <AmiBlitz3.ab2@2058>   TST.l errorcounter
0003505C <AmiBlitz3.ab2@2059>   BNE 'l3
00035062 <AmiBlitz3.ab2@2060>   CLR.w dontwrite
00035066 <AmiBlitz3.ab2@2061>   BSR compileall                                           ;if a function is not found
0003506C <AmiBlitz3.ab2@2062>   ADDQ.w #1,pass
000350AA <AmiBlitz3.ab2@2066>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
000350AE <AmiBlitz3.ab2@2067>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
000350B4 <AmiBlitz3.ab2@2068>   LEA firstproc,a0
000350BA <AmiBlitz3.ab2@2069>   CLR.l savefuncspace
000350BC <AmiBlitz3.ab2@2070>   MOVE.l (a0),d0
000350BE <AmiBlitz3.ab2@2074>     MOVE.l d0,a0
000350C2 <AmiBlitz3.ab2@2075>     BEQ 'out
000350C6 <AmiBlitz3.ab2@2076>     TST.b isfunc(a0)
000350CA <AmiBlitz3.ab2@2077>     BNE 'nex
000350CE <AmiBlitz3.ab2@2078>     MOVEM.l d2/a6/a0,-(a7)
000350D0 <AmiBlitz3.ab2@2080>     MOVEQ #0,d0
000350D4 <AmiBlitz3.ab2@2081>     MOVE.b $21+#funcentry_extend-1(a0),d0
000350D8 <AmiBlitz3.ab2@2082>     SUB.w #$21+#funcentry_extend,d0
000350DC <AmiBlitz3.ab2@2083>     ADD.w #16,d0
000350E2 <AmiBlitz3.ab2@2084>     MOVE.l #$10000,d1
000350E4 <AmiBlitz3.ab2@2085>     MOVE.l d0,d2
000350EA <AmiBlitz3.ab2@2086>     MOVEA.l _execbase,A6
000350EE <AmiBlitz3.ab2@2087>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
000350F0 <AmiBlitz3.ab2@2088>     MOVE.l d0,a1
000350F4 <AmiBlitz3.ab2@2089>     MOVE.l d2,4(a1)
000350FA <AmiBlitz3.ab2@2090>     MOVE.l unusedfunc,(a1)
00035100 <AmiBlitz3.ab2@2091>     MOVE.l d0,unusedfunc
00035104 <AmiBlitz3.ab2@2092>     MOVEM.l (a7)+,a6/a0/d2
00035108 <AmiBlitz3.ab2@2093>     MOVE.l isfunc+1(a0),d0
0003510A <AmiBlitz3.ab2@2094>     ADDQ.l #6,d0
00035110 <AmiBlitz3.ab2@2095>     ADD.l d0,savefuncspace
00035114 <AmiBlitz3.ab2@2098>     MOVE.l d0,8(a1)
00035118 <AmiBlitz3.ab2@2099>     LEA 12(a1),a1
0003511A <AmiBlitz3.ab2@2100>     MOVE.l a0,-(a7)
0003511E <AmiBlitz3.ab2@2101>     LEA $21+#funcentry_extend(a0),a0
00035120 <AmiBlitz3.ab2@2104>       MOVE.b (a0)+,(a1)+
00035124 <AmiBlitz3.ab2@2105>     BNE 'l1
00035126 <AmiBlitz3.ab2@2106>     MOVE.l (a7)+,a0
00035128 <AmiBlitz3.ab2@2109>     MOVE.l (a0),d0
0003512C <AmiBlitz3.ab2@2110> BRA 'lr1
00035134 <AmiBlitz3.ab2@2113>   BTST #$7,make_smallestcode
00035138 <AmiBlitz3.ab2@2114>   BEQ.b JL_0_3844                                           ;optimize for executable
0003513E <AmiBlitz3.ab2@2115>   CLR.l morememadd
00035142 <AmiBlitz3.ab2@2117>   BSR.w alloxadj
00035146 <AmiBlitz3.ab2@2118>   BEQ.w JL_0_388A
0003514A <AmiBlitz3.ab2@2121>   BSR.w compileall
00035150 <AmiBlitz3.ab2@2122>   ADDQ.w #1,pass
00035156 <AmiBlitz3.ab2@2124>   MOVE.w dontwrite,D1
0003515A <AmiBlitz3.ab2@2125>   BEQ.w JL_0_38A2
0003515E <AmiBlitz3.ab2@2144> BRA.w JL_0_3896
00035166 <AmiBlitz3.ab2@2155>   MOVE.w #$FFFF,anyerrs
0003516A <AmiBlitz3.ab2@2156> BRA.w JL_0_38A2
0003516E <AmiBlitz3.ab2@2159>   BSR.w alloxinc                                          ;increase all by 50%
00035172 <AmiBlitz3.ab2@2160>   BEQ.w Aclearallvars
00035176 <AmiBlitz3.ab2@2161> BRA.w JL_0_3824
0003517A <AmiBlitz3.ab2@2173> BRA.w JL_0_38A6                                            ;???????
00035180 <AmiBlitz3.ab2@2177>   JSR freereps
00035186 <AmiBlitz3.ab2@2178>   JSR freesels
0003518C <AmiBlitz3.ab2@2179>   JSR AJL_0_6DF2
00035192 <AmiBlitz3.ab2@2180>   JSR freepends
00035198 <AmiBlitz3.ab2@2181>   JSR freeifs
0003519E <AmiBlitz3.ab2@2182>   JSR AJL_0_C188
000351A4 <AmiBlitz3.ab2@2183>   JSR AJL_0_C15C
000351AA <AmiBlitz3.ab2@2184>   JSR AJL_0_D9BC
000351B0 <AmiBlitz3.ab2@2187> JMP cleartemplabel
000351B4 <AmiBlitz3.ab2@2190> mempool2:  Dc.l 0
000351BA <AmiBlitz3.ab2@2194>   JSR Aclearcache
000351C2 <AmiBlitz3.ab2@2196>   BTST #$7,use_debugger
000351C6 <AmiBlitz3.ab2@2198>   BNE 'debugon
000351CC <AmiBlitz3.ab2@2199>   CLR.w debugmode
000351D0 <AmiBlitz3.ab2@2200> BRA.b 'debugoff
000351D6 <AmiBlitz3.ab2@2203>   SNE debugmode
0003520E <AmiBlitz3.ab2@2208>   !ComData_SetB{comByte_DebugMode,debugmode}
00035214 <AmiBlitz3.ab2@2210>   LEA regtable,a0
00035216 <AmiBlitz3.ab2@2211>   MOVEQ #10,d0
00035218 <AmiBlitz3.ab2@2214>     CLR.l (a0)+
0003521C <AmiBlitz3.ab2@2215>   DBF d0,'l1
00035222 <AmiBlitz3.ab2@2217>   LEA includetemp2,a0
00035224 <AmiBlitz3.ab2@2218>   CLR.b (a0)
0003522E <AmiBlitz3.ab2@2219>   MOVE.l #7,maxregs
00035234 <AmiBlitz3.ab2@2220>   CLR.w debugnest
0003523A <AmiBlitz3.ab2@2221>   CLR.b funcparloop
00035240 <AmiBlitz3.ab2@2222>   CLR.b nostringopt
00035246 <AmiBlitz3.ab2@2223>   CLR.b firsttime
0003524C <AmiBlitz3.ab2@2224>   CLR.l lastdestpointer
00035252 <AmiBlitz3.ab2@2225>   CLR.l lastwritedat
00035258 <AmiBlitz3.ab2@2226>   CLR.l prevwritedat
0003525E <AmiBlitz3.ab2@2227>   CLR.l includeline
00035264 <AmiBlitz3.ab2@2228>   CLR.b incnif
0003526A <AmiBlitz3.ab2@2229>   CLR.b formode
00035270 <AmiBlitz3.ab2@2230>   CLR.b funccall
00035276 <AmiBlitz3.ab2@2231>   CLR.w objectcount
0003527C <AmiBlitz3.ab2@2232>   CLR.b resdisable
00035282 <AmiBlitz3.ab2@2233>   CLR.b developobject
00035288 <AmiBlitz3.ab2@2234>   CLR.b optistring
0003528E <AmiBlitz3.ab2@2235>   CLR.b optistring2
00035294 <AmiBlitz3.ab2@2236>   CLR.b optiarray
0003529A <AmiBlitz3.ab2@2237>   CLR.b quickadd
000352A0 <AmiBlitz3.ab2@2238>   CLR.w newmode
000352A6 <AmiBlitz3.ab2@2239>   CLR.w mode
000352AC <AmiBlitz3.ab2@2240>   CLR.w string1
000352B2 <AmiBlitz3.ab2@2241>   CLR.b fastfunc
000352B8 <AmiBlitz3.ab2@2242>   CLR.w load_var_size
000352BE <AmiBlitz3.ab2@2243>   CLR.w load_var_reg
000352C4 <AmiBlitz3.ab2@2244>   CLR.l load_var_addr
000352CA <AmiBlitz3.ab2@2245>   CLR.w imm_size
000352D0 <AmiBlitz3.ab2@2246>   CLR.w imm_reg
000352D6 <AmiBlitz3.ab2@2247>   CLR.l imm_addr
000352DC <AmiBlitz3.ab2@2248>   CLR.b _dcb
000352E2 <AmiBlitz3.ab2@2249>   CLR.l nohunkoffset
000352E8 <AmiBlitz3.ab2@2250>   CLR.b peekaddrsize
000352EE <AmiBlitz3.ab2@2251>   CLR.b typecheck
000352F4 <AmiBlitz3.ab2@2252>   CLR.b declare2
000352FA <AmiBlitz3.ab2@2253>   CLR.b declare
00035300 <AmiBlitz3.ab2@2254>   CLR.l myoline                                          ;check
00035306 <AmiBlitz3.ab2@2255>   CLR.l myline                                          ;check
0003530C <AmiBlitz3.ab2@2256>   CLR.b newvariable
00035312 <AmiBlitz3.ab2@2257>   CLR.b saved0
00035318 <AmiBlitz3.ab2@2258>   CLR.l bsssize
0003531E <AmiBlitz3.ab2@2259>   CLR.l chipsize
00035324 <AmiBlitz3.ab2@2260>   CLR.b infunctioncode
0003532A <AmiBlitz3.ab2@2261>   CLR.l errorcounter
00035334 <AmiBlitz3.ab2@2262>   MOVE.l #-1,bssstart
0003533E <AmiBlitz3.ab2@2263>   MOVE.l #-1,bssend
00035348 <AmiBlitz3.ab2@2264>   MOVE.l #-1,chipstart
00035352 <AmiBlitz3.ab2@2265>   MOVE.l #-1,chipend
0003535A <AmiBlitz3.ab2@2266>   MOVE.w #0,bssmode
00035360 <AmiBlitz3.ab2@2267>   CLR.w a2offset
00035366 <AmiBlitz3.ab2@2268>   CLR.w fast
0003536C <AmiBlitz3.ab2@2269>   CLR.w fpu
00035372 <AmiBlitz3.ab2@2270>   CLR.b iee
00035378 <AmiBlitz3.ab2@2271>   CLR.w newsyntax
0003537C <AmiBlitz3.ab2@2272>   BSR.w JL_0_38A6
00035382 <AmiBlitz3.ab2@2273>   JSR AJL_0_7962
00035388 <AmiBlitz3.ab2@2274>   JSR frallvars
0003538E <AmiBlitz3.ab2@2275>   JSR fralltypes
00035394 <AmiBlitz3.ab2@2276>   JSR freemacs
0003539A <AmiBlitz3.ab2@2277>   JSR clearfunctionlist
000353A0 <AmiBlitz3.ab2@2278>   TST.w pass
000353A6 <AmiBlitz3.ab2@2280>   JSR clearlabels
000353AC <AmiBlitz3.ab2@2281>   JSR clearhash
000353B2 <AmiBlitz3.ab2@2284>   LEA devo,a0
000353B6 <AmiBlitz3.ab2@2285>   MOVEM.l a0-a6/d0-d7,-(a7)
000353BC <AmiBlitz3.ab2@2286>   LEA ptr_parameterstore,a1
000353BE <AmiBlitz3.ab2@2289>     MOVE.b (a0)+,(a1)+
000353C2 <AmiBlitz3.ab2@2290>   BNE 'l1b
000353C4 <AmiBlitz3.ab2@2291>   MOVEQ #13,d2
000353CA <AmiBlitz3.ab2@2292>   JSR findlabel2
000353CE <AmiBlitz3.ab2@2293>   BNE 'd
000353D2 <AmiBlitz3.ab2@2294>   CLR.l 8(a2)
000353D6 <AmiBlitz3.ab2@2297>   MOVEM.l (a7)+,a0-a6/d0-d7
00035400 <AmiBlitz3.ab2@2298>   !basic
00035474 <AmiBlitz3.ab2@2299>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00035492 <AmiBlitz3.ab2@2300>   !asm
00035498 <AmiBlitz3.ab2@2301>   CLR.b returncode
0003549E <AmiBlitz3.ab2@2302> JMP freeprocvs
000354A4 <AmiBlitz3.ab2@2306>   MOVE.l #bssstore-labelhash,d0
000354A6 <AmiBlitz3.ab2@2307>   ASR.l #2,d0
000354AC <AmiBlitz3.ab2@2308>   LEA labelhash,a0
000354AE <AmiBlitz3.ab2@2311>     CLR.l (a0)+
000354B0 <AmiBlitz3.ab2@2312>     SUBQ.l #1,d0
000354B4 <AmiBlitz3.ab2@2313>   BNE.s 'l10
000354BA <AmiBlitz3.ab2@2315>   LEA labelbase,a1
000354BC <AmiBlitz3.ab2@2316>   MOVE.l (a1),d0
000354C0 <AmiBlitz3.ab2@2317>   BEQ 'l11
000354C2 <AmiBlitz3.ab2@2320>     MOVE.l d0,a1
000354C6 <AmiBlitz3.ab2@2321>     TST.l 4(a1)
000354CA <AmiBlitz3.ab2@2322>     BEQ 'l29
000354CE <AmiBlitz3.ab2@2323>     LEA $13(a1),a0
000354D0 <AmiBlitz3.ab2@2324>     MOVEQ #0,d0
000354D2 <AmiBlitz3.ab2@2325>     MOVEQ #0,d1
000354D4 <AmiBlitz3.ab2@2328>       MOVE.b (a0)+,d1
000354D8 <AmiBlitz3.ab2@2329>       BEQ 'l12
000354DE <AmiBlitz3.ab2@2330>       !hashalgo
000354E2 <AmiBlitz3.ab2@2331> BRA 'l13
000354E8 <AmiBlitz3.ab2@2334>     LEA labelhash,a0
000354EE <AmiBlitz3.ab2@2335>     AND.l #hashsize,d0
000354F0 <AmiBlitz3.ab2@2336>      ASL.l #2,d0
000354F4 <AmiBlitz3.ab2@2337>     MOVE.l 0(a0,d0),d1                                     ;*4
000354F8 <AmiBlitz3.ab2@2338>     MOVE.l d1,$c(a1)
000354FC <AmiBlitz3.ab2@2339>     MOVE.l a1,0(a0,d0)
000354FE <AmiBlitz3.ab2@2342>     MOVE.l (a1),d0
00035502 <AmiBlitz3.ab2@2343>   BNE 'l21
00035504 <AmiBlitz3.ab2@2346> RTS
0003550A <AmiBlitz3.ab2@2350>   MOVEA.l lastrestype,A0
0003550C <AmiBlitz3.ab2@2351>   MOVEA.l (A0),A2
0003550E <AmiBlitz3.ab2@2352>   CLR.l (A0)
00035514 <AmiBlitz3.ab2@2353> JMP freetypes
0003551A <AmiBlitz3.ab2@2357>   MOVEA.l varbase,A3
00035520 <AmiBlitz3.ab2@2358>   CLR.l varbase
00035524 <AmiBlitz3.ab2@2361>   CMPA.w #$0,A3
00035528 <AmiBlitz3.ab2@2362>   BEQ.w 'l20
0003552A <AmiBlitz3.ab2@2363>   MOVEA.l A3,A1
0003552C <AmiBlitz3.ab2@2364>   MOVEA.l (A3),A3
0003552E <AmiBlitz3.ab2@2365>   MOVEQ.l #$00,D0
00035532 <AmiBlitz3.ab2@2366>   MOVE.b $E+4(A1),D0
00035538 <AmiBlitz3.ab2@2367>   MOVEA.l _execbase,A6
0003553E <AmiBlitz3.ab2@2368>   MOVE.l mempool2,a0
00035542 <AmiBlitz3.ab2@2369>   JSR _FreePooled(A6)
00035546 <AmiBlitz3.ab2@2370> BRA.w 'l10
00035548 <AmiBlitz3.ab2@2373> RTS
0003554E <AmiBlitz3.ab2@2378>   LEA firstiff,A2
00035550 <AmiBlitz3.ab2@2379>   MOVEQ.l #$0E,D2
00035556 <AmiBlitz3.ab2@2380> JMP freeslist
00035558 <AmiBlitz3.ab2@2386> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0003555A <AmiBlitz3.ab2@2387> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00035560 <AmiBlitz3.ab2@2391>   CLR.w inmacro
00035566 <AmiBlitz3.ab2@2392>   ADDQ.l #1,globallinecount
0003556C <AmiBlitz3.ab2@2393>   CLR.b nostringopt
00035570 <AmiBlitz3.ab2@2394>   BSR.w JL_0_3CA4
00035576 <AmiBlitz3.ab2@2395>   CLR.w instringon
0003557C <AmiBlitz3.ab2@2398>   TST.w ininclude
00035580 <AmiBlitz3.ab2@2399>   BEQ.w JL_0_39B0
00035586 <AmiBlitz3.ab2@2400>   ADDQ.l #1,includeline
0003558C <AmiBlitz3.ab2@2401>     JSR ab3_WriteDebugFile
00035592 <AmiBlitz3.ab2@2402>   JSR AJL_0_C09E
00035596 <AmiBlitz3.ab2@2403>   BEQ.w JL_0_39B0
0003559C <AmiBlitz3.ab2@2404>   MOVE.w ininclude,D0
000355A0 <AmiBlitz3.ab2@2405>   CMP.w #$4,D0
000355A4 <AmiBlitz3.ab2@2406>   BCC.w JL_0_39AC
000355A6 <AmiBlitz3.ab2@2407>   ADD.w D0,D0
000355AC <AmiBlitz3.ab2@2408>   LEA progress_per_line,A0
000355B0 <AmiBlitz3.ab2@2409>   MOVE.w $0(A0,D0.W),D2
000355B4 <AmiBlitz3.ab2@2410>   CMP.w progressbar_width(PC),D2
000355B8 <AmiBlitz3.ab2@2411>   BCC.w JL_0_39AC
000355BC <AmiBlitz3.ab2@2412>   ADDQ.w #1,$0(A0,D0.W)
000355BE <AmiBlitz3.ab2@2413>   LSR.w #1,D0
000355C0 <AmiBlitz3.ab2@2414>   MOVE.l d0,d1
000355C2 <AmiBlitz3.ab2@2415>   EXT.l d1
000355C4 <AmiBlitz3.ab2@2416>   MOVE.l d2,d0
000355C6 <AmiBlitz3.ab2@2417>   EXT.l d0                                                 ;d0=x,d1=y
000355CC <AmiBlitz3.ab2@2419>   JSR update_progressbar
000355CE <AmiBlitz3.ab2@2422>   MOVEQ.l #-$01,D0
000355D0 <AmiBlitz3.ab2@2423> RTS
000355D6 <AmiBlitz3.ab2@2427>   MOVE.l titleat,D0
000355D8 <AmiBlitz3.ab2@2428>   MOVEQ.l #$00,D1
000355DE <AmiBlitz3.ab2@2429>   MOVE.w progress_per_line,D1
000355E0 <AmiBlitz3.ab2@2430>   ADD.l D1,D0
000355E2 <AmiBlitz3.ab2@2431>   MOVE.l D0,D1
000355E4 <AmiBlitz3.ab2@2432>   SWAP D0
000355EA <AmiBlitz3.ab2@2433>   CMP.w titleat,D0
000355EE <AmiBlitz3.ab2@2434>    BEQ.w JL_0_39E4
000355F0 <AmiBlitz3.ab2@2437>   EXT.l d0
000355F2 <AmiBlitz3.ab2@2438>   MOVE.l d1,-(a7)
000355FA <AmiBlitz3.ab2@2441>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00035600 <AmiBlitz3.ab2@2442>   JSR update_progressbar
00035608 <AmiBlitz3.ab2@2443>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0003560A <AmiBlitz3.ab2@2447>   MOVE.l (a7)+,d1
00035610 <AmiBlitz3.ab2@2450>   MOVE.l D1,titleat
00035616 <AmiBlitz3.ab2@2451>   ADDQ.l #1,linenumat
0003561C <AmiBlitz3.ab2@2452>   CLR.w linedone
00035622 <AmiBlitz3.ab2@2453>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00035628 <AmiBlitz3.ab2@2455>   SUBQ.l #1,numlines2
0003562C <AmiBlitz3.ab2@2456>    BEQ.w JL_0_3A12
00035632 <AmiBlitz3.ab2@2457>   MOVEA.l sourceline,A0
00035634 <AmiBlitz3.ab2@2458>   MOVEA.l (A0),A0
0003563A <AmiBlitz3.ab2@2459>   MOVE.l A0,sourceline
0003563E <AmiBlitz3.ab2@2460>   LEA $9(A0),A5
00035640 <AmiBlitz3.ab2@2463> RTS
00035642 <AmiBlitz3.ab2@2467>   MOVE.w D0,-(A7)
00035644 <AmiBlitz3.ab2@2468>   MOVEQ.l #$03,D0
00035646 <AmiBlitz3.ab2@2471>     MOVE.w D1,D2
0003564A <AmiBlitz3.ab2@2472>     ANDI.w #$F,D2
0003564E <AmiBlitz3.ab2@2473>     ADDI.w #$30,D2
00035652 <AmiBlitz3.ab2@2474>     CMP.w #$3A,D2
00035656 <AmiBlitz3.ab2@2475>      BCS.w JL_0_3A2C
00035658 <AmiBlitz3.ab2@2476>     ADDQ.w #7,D2
0003565C <AmiBlitz3.ab2@2479>     MOVE.b D2,$0(A0,D0.W)
0003565E <AmiBlitz3.ab2@2480>     LSR.w #4,D1
00035662 <AmiBlitz3.ab2@2481>   DBF D0,JL_0_3A18
00035664 <AmiBlitz3.ab2@2483>   MOVE.w (A7)+,D0
00035666 <AmiBlitz3.ab2@2484> RTS
0003566C <AmiBlitz3.ab2@2494>   MOVE.w skipcode,D1
00035670 <AmiBlitz3.ab2@2495>   BNE.w JL_0_3A46
00035672 <AmiBlitz3.ab2@2496> RTS
00035674 <AmiBlitz3.ab2@2499>   MOVE.l A5,-(A7)
00035676 <AmiBlitz3.ab2@2500>   MOVEQ.l #$3A,D1                                          ;':'
00035678 <AmiBlitz3.ab2@2501>   MOVEQ.l #$21,D2                                          ;'!'
0003567A <AmiBlitz3.ab2@2502>   MOVEQ.l #$3B,D3                                          ;';'
0003567C <AmiBlitz3.ab2@2503>   MOVEQ.l #$22,D4                                          ;'"'
0003567E <AmiBlitz3.ab2@2506>   MOVE.b (A5)+,D0
00035682 <AmiBlitz3.ab2@2507>    BEQ.w JL_0_3CA0
00035686 <AmiBlitz3.ab2@2508>    BPL.w JL_0_3A60
00035688 <AmiBlitz3.ab2@2509>   MOVE.b (A5)+,D0
0003568C <AmiBlitz3.ab2@2510> BRA.w JL_0_3A50
0003568E <AmiBlitz3.ab2@2513>   CMP.b D4,D0
00035692 <AmiBlitz3.ab2@2514>    BNE.w JL_0_3A82
00035694 <AmiBlitz3.ab2@2517>   MOVE.b (A5)+,D0
00035698 <AmiBlitz3.ab2@2518>    BEQ.w notqerr
0003569C <AmiBlitz3.ab2@2524>   CMP.b #$22,D0
000356A0 <AmiBlitz3.ab2@2525>    BNE.w JL_0_3A66
000356A4 <AmiBlitz3.ab2@2526> BRA.w JL_0_3A50
000356A6 <AmiBlitz3.ab2@2529>   CMP.b D1,D0
000356AA <AmiBlitz3.ab2@2530>    BEQ.w JL_0_3CA0
000356AC <AmiBlitz3.ab2@2531>   CMP.b D3,D0
000356B0 <AmiBlitz3.ab2@2532>    BEQ.w JL_0_3CA0
000356B2 <AmiBlitz3.ab2@2535>   CMP.b D2,D0
000356B6 <AmiBlitz3.ab2@2536>    BNE.w JL_0_3A50
000356BE <AmiBlitz3.ab2@2537>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000356C0 <AmiBlitz3.ab2@2538>   MOVEA.l A5,A3
000356C6 <AmiBlitz3.ab2@2539>    JSR getparameter2
000356CA <AmiBlitz3.ab2@2540>    BNE.w JL_0_3AAC
000356D0 <AmiBlitz3.ab2@2541> JMP syntaxerr
000356DA <AmiBlitz3.ab2@2546>    MOVE.w oldqflag,instringon
000356E0 <AmiBlitz3.ab2@2547>   MOVEA.l lastsourcepos,A5
000356E6 <AmiBlitz3.ab2@2548>    JSR findmac                                             ;find macro
000356EA <AmiBlitz3.ab2@2549>    BEQ.w JL_0_3ABE
000356F0 <AmiBlitz3.ab2@2550> JMP nomacerr
000356F6 <AmiBlitz3.ab2@2553>   TST.b debugmode
000356FA <AmiBlitz3.ab2@2554>   BEQ 'sk1
000356FE <AmiBlitz3.ab2@2555>   MOVE.w #$4e71,d1
00035704 <AmiBlitz3.ab2@2556>   JSR writeword
00035706 <AmiBlitz3.ab2@2557>   MOVE.l a5,-(a7)
00035708 <AmiBlitz3.ab2@2558>   MOVE.l a3,a5
0003570A <AmiBlitz3.ab2@2559>   SUBQ.l #1,a5
00035712 <AmiBlitz3.ab2@2560>   MOVE.w #$0,inmacro
00035716 <AmiBlitz3.ab2@2561>   BSR debugstuffa
0003571E <AmiBlitz3.ab2@2562>   MOVE.w #$FFFF,inmacro
00035720 <AmiBlitz3.ab2@2563>   MOVE.l (a7)+,a5
00035724 <AmiBlitz3.ab2@2564>   MOVE.w #$4e71,d1
0003572A <AmiBlitz3.ab2@2565>   JSR writeword
0003572C <AmiBlitz3.ab2@2568>   MOVEA.l A5,A4
00035730 <AmiBlitz3.ab2@2571>    CMP.b #" ",(a4)+
00035734 <AmiBlitz3.ab2@2572>     BEQ 'l5a
00035736 <AmiBlitz3.ab2@2573>      SUBQ.l#1,a4
0003573A <AmiBlitz3.ab2@2574>      CMP.b #",",(a4)
0003573E <AmiBlitz3.ab2@2575>     BEQ JL_0_3AEA
00035740 <AmiBlitz3.ab2@2578>   MOVEQ.l #$00,D4
00035746 <AmiBlitz3.ab2@2579>   TST.b newsyntax
0003574A <AmiBlitz3.ab2@2580>   BEQ 'l10b
0003574E <AmiBlitz3.ab2@2581>   MOVEM.l a0/d0,-(a7)
00035752 <AmiBlitz3.ab2@2582>   MOVE.l 4(a2),a0
00035756 <AmiBlitz3.ab2@2583>   MOVE.w 8(a2),d0
0003575A <AmiBlitz3.ab2@2586>   CMP.b #"`",(a0)+
0003575E <AmiBlitz3.ab2@2587>   BEQ 'x1
00035760 <AmiBlitz3.ab2@2588>   SUBQ.w #1,d0
00035764 <AmiBlitz3.ab2@2589>   BNE 'x2
00035768 <AmiBlitz3.ab2@2590> BRA 'x3
0003576C <AmiBlitz3.ab2@2593>   MOVEM.l (a7)+,a0/d0
00035770 <AmiBlitz3.ab2@2594> BRA 'l10
00035774 <AmiBlitz3.ab2@2597>   MOVEM.l (a7)+,a0/d0
00035778 <AmiBlitz3.ab2@2598> BRA JL_0_3AEA
0003577C <AmiBlitz3.ab2@2601>   CMPI.b #"{",(A4)
00035780 <AmiBlitz3.ab2@2602>    BNE.w JL_0_3AEA
00035782 <AmiBlitz3.ab2@2606>   ADDQ.l #1,a4
00035786 <AmiBlitz3.ab2@2609>     CMP.b #" ",(a4)
0003578A <AmiBlitz3.ab2@2610>     BEQ 'l5
0003578E <AmiBlitz3.ab2@2611>     MOVEM.l a0/d0,-(a7)
00035794 <AmiBlitz3.ab2@2612>     CLR.b exmac
0003579A <AmiBlitz3.ab2@2613>     LEA chartab,a0
0003579C <AmiBlitz3.ab2@2614>     MOVEQ #0,d0
0003579E <AmiBlitz3.ab2@2615>     MOVE.b (a4),d0
000357A2 <AmiBlitz3.ab2@2616>     BMI 'm1
000357A6 <AmiBlitz3.ab2@2617>     TST.b 0(a0,d0)
000357AA <AmiBlitz3.ab2@2618>     BEQ 'm1
000357B0 <AmiBlitz3.ab2@2619>     TST.b newsyntax
000357B4 <AmiBlitz3.ab2@2620>     BEQ 'ns1
000357B8 <AmiBlitz3.ab2@2621>     CMP.b #"#",d0
000357BC <AmiBlitz3.ab2@2622>     BEQ 'm1
000357C0 <AmiBlitz3.ab2@2623>     CMP.b #"$",d0
000357C4 <AmiBlitz3.ab2@2624>     BEQ 'm1
000357C8 <AmiBlitz3.ab2@2625>     CMP.b #"-",d0
000357CC <AmiBlitz3.ab2@2626>     BEQ 'm1
000357D0 <AmiBlitz3.ab2@2629>   CMP.b #",",d0
000357D4 <AmiBlitz3.ab2@2630>     BEQ 'm1
000357D8 <AmiBlitz3.ab2@2631>     CMP.b #"{",d0
000357DC <AmiBlitz3.ab2@2632>     BNE 'm1b
000357DE <AmiBlitz3.ab2@2633>     ADDQ.l #1,a4
000357E2 <AmiBlitz3.ab2@2634> BRA 'm1
000357E8 <AmiBlitz3.ab2@2637>   TST.b newsyntax
000357EC <AmiBlitz3.ab2@2638>     BEQ 'm1
000357F4 <AmiBlitz3.ab2@2639>     MOVE.b #1,exmac
000357F8 <AmiBlitz3.ab2@2642>   MOVEM.l (a7)+,a0/d0
000357FE <AmiBlitz3.ab2@2643>     TST.b exmac
00035802 <AmiBlitz3.ab2@2644>     BNE JL_0_3AEA
00035804 <AmiBlitz3.ab2@2651>   TST.b (a4)
00035808 <AmiBlitz3.ab2@2652>   BEQ JL_0_3AEA
0003580E <AmiBlitz3.ab2@2655>   MOVEA.l ptr_macrobuffer_begin,A0
00035810 <AmiBlitz3.ab2@2658>   ADDQ.w #1,D4
00035812 <AmiBlitz3.ab2@2659>   MOVE.l A4,(A0)
00035816 <AmiBlitz3.ab2@2660>   CLR.w 4(a0)
0003581A <AmiBlitz3.ab2@2661>    BSR.w JL_0_3CC6
0003581C <AmiBlitz3.ab2@2663>   ADDQ.l #4,a0
0003581E <AmiBlitz3.ab2@2667>   SUBQ.w #1,(a0)+
00035822 <AmiBlitz3.ab2@2668>   CMP.b #$7D,D0
00035826 <AmiBlitz3.ab2@2669>   BEQ 'l10
00035828 <AmiBlitz3.ab2@2670>   TST.b d0
0003582C <AmiBlitz3.ab2@2671>   BEQ 'l10
00035830 <AmiBlitz3.ab2@2672> BRA JL_0_3AD0
00035836 <AmiBlitz3.ab2@2676>   CLR.l sourceline3
00035838 <AmiBlitz3.ab2@2677>   MOVEA.l A4,A5
0003583E <AmiBlitz3.ab2@2680>   MOVE.w D4,numarg
00035844 <AmiBlitz3.ab2@2687>   MOVE.l #$01,D1
0003584A <AmiBlitz3.ab2@2688>   MOVEA.l _execbase,A6
00035850 <AmiBlitz3.ab2@2689>   MOVE.l mempool,a0
00035856 <AmiBlitz3.ab2@2690>   MOVE.l macrobuffer_size,D0
0003585C <AmiBlitz3.ab2@2691>   CMP.l #40000,d0
00035860 <AmiBlitz3.ab2@2692>   BGE 'l1m
00035866 <AmiBlitz3.ab2@2693>   MOVE.l #40000,d0
0003586C <AmiBlitz3.ab2@2694>   MOVE.l d0,macrobuffer_size
00035870 <AmiBlitz3.ab2@2697>   JSR _AllocPooled(a6)
0003587A <AmiBlitz3.ab2@2699>   MOVE.l myline,myoline
0003587C <AmiBlitz3.ab2@2702>   ADDQ.l #1,d0
00035882 <AmiBlitz3.ab2@2703>   MOVE.l D0,myline
00035884 <AmiBlitz3.ab2@2704>   MOVEA.l D0,A1
0003588A <AmiBlitz3.ab2@2705>   MOVE.b #":",-1(a1)
0003588C <AmiBlitz3.ab2@2706>   MOVEA.l A1,A6
00035892 <AmiBlitz3.ab2@2707>   ADDA.l macrobuffer_size,A6
00035894 <AmiBlitz3.ab2@2708>   MOVEA.l (A7)+,A0
00035896 <AmiBlitz3.ab2@2711>   CMPA.l A6,A1
0003589A <AmiBlitz3.ab2@2712>    BCC.w mbovererr
0003589C <AmiBlitz3.ab2@2713>   MOVE.b (A0)+,(a1)+
0003589E <AmiBlitz3.ab2@2714>   CMPA.l A3,A0
000358A2 <AmiBlitz3.ab2@2715>    BCS.w JL_0_3B1E
000358A4 <AmiBlitz3.ab2@2716>   SUBQ.w #1,A1
000358A8 <AmiBlitz3.ab2@2717>   MOVE.w $8(A2),D1
000358AC <AmiBlitz3.ab2@2718>    BEQ.w JL_0_3C70
000358B4 <AmiBlitz3.ab2@2719>   MOVE.w $A(A2),macnum
000358B8 <AmiBlitz3.ab2@2720>   ADDQ.w #1,$A(A2)
000358BC <AmiBlitz3.ab2@2721>   MOVEA.l $4(A2),A2
000358BE <AmiBlitz3.ab2@2722>   SUBQ.w #1,D1
000358C4 <AmiBlitz3.ab2@2723>   CLR.b firstmline
000358C6 <AmiBlitz3.ab2@2726>     MOVEQ.l #$00,D0
000358C8 <AmiBlitz3.ab2@2727>     MOVE.b (A2)+,D0
000358CE <AmiBlitz3.ab2@2728>     TST.b firstmline
000358D2 <AmiBlitz3.ab2@2729>     BNE 'c1
000358D6 <AmiBlitz3.ab2@2730>     CMP.b #$22,d0
000358DA <AmiBlitz3.ab2@2731>     BNE 's1
000358E2 <AmiBlitz3.ab2@2732>     MOVE.b #1,firstmline
000358E6 <AmiBlitz3.ab2@2735>     CMP.b #":",d0
000358EA <AmiBlitz3.ab2@2736>     BNE 'm1
000358F2 <AmiBlitz3.ab2@2737>     MOVE.b #1,firstmline
000358F6 <AmiBlitz3.ab2@2740>     CMP.b #";",d0
000358FA <AmiBlitz3.ab2@2741>     BNE 'c1
000358FC <AmiBlitz3.ab2@2744>     SUBQ.w #1,d1                                           ;filter out comment
000358FE <AmiBlitz3.ab2@2745>     MOVE.b (a2)+,d0
00035904 <AmiBlitz3.ab2@2746>     CMP.w #":@",-1(a2)
00035908 <AmiBlitz3.ab2@2747>     BEQ 'c2
0003590A <AmiBlitz3.ab2@2748>     TST.w d1
0003590E <AmiBlitz3.ab2@2749>     BNE 'l1
00035912 <AmiBlitz3.ab2@2750>   BRA JL_0_3C6C
00035918 <AmiBlitz3.ab2@2753>     CMP.b #":",1(a2)
0003591C <AmiBlitz3.ab2@2754>       BNE 'l1
0003591E <AmiBlitz3.ab2@2755>       ADDQ #2,a2
00035920 <AmiBlitz3.ab2@2756>       SUBQ #3,d1
00035922 <AmiBlitz3.ab2@2757>       MOVE.b (a2)+,d0
0003592A <AmiBlitz3.ab2@2758>       MOVE.b #1,firstmline
0003592E <AmiBlitz3.ab2@2761>     CMP.b #"`",D0
00035932 <AmiBlitz3.ab2@2762>      BNE.w JL_0_3C56
00035934 <AmiBlitz3.ab2@2763>     SUBQ.w #1,D1
00035936 <AmiBlitz3.ab2@2764>     MOVE.b (A2)+,D0
0003593A <AmiBlitz3.ab2@2765>     CMP.w #$7B,D0
0003593E <AmiBlitz3.ab2@2766>      BEQ.w JL_0_3BB6
00035942 <AmiBlitz3.ab2@2767>     CMP.w #$40,D0
00035946 <AmiBlitz3.ab2@2768>      BNE.w JL_0_3B82
00035948 <AmiBlitz3.ab2@2769>     MOVEQ.l #$00,D2
0003594E <AmiBlitz3.ab2@2770>     MOVE.w macnum,D2
00035950 <AmiBlitz3.ab2@2771>     MOVEA.l A1,A0
00035952 <AmiBlitz3.ab2@2772>     MOVE.w D1,-(A7)
00035958 <AmiBlitz3.ab2@2773>      JSR makelong
0003595A <AmiBlitz3.ab2@2774>     MOVEA.l A0,A1
0003595C <AmiBlitz3.ab2@2775>     MOVE.w (A7)+,D1
00035960 <AmiBlitz3.ab2@2776>   BRA.w JL_0_3C6C
00035964 <AmiBlitz3.ab2@2779>     ORI.w #$20,D0
00035968 <AmiBlitz3.ab2@2780>     CMP.w #$7A,D0
0003596C <AmiBlitz3.ab2@2781>      BCS.w JL_0_3B94
00035972 <AmiBlitz3.ab2@2782>   JMP ilconsterr
00035976 <AmiBlitz3.ab2@2785>     SUBI.w #$30,D0
0003597A <AmiBlitz3.ab2@2786>     CMP.w #$A,D0
0003597E <AmiBlitz3.ab2@2787>      BCS.w JL_0_3BF2
00035982 <AmiBlitz3.ab2@2788>     SUBI.w #$27,D0
00035986 <AmiBlitz3.ab2@2789>     CMP.w #$A,D0
0003598A <AmiBlitz3.ab2@2790>      BCC.w JL_0_3BB2
00035990 <AmiBlitz3.ab2@2791>   JMP ilconsterr
00035994 <AmiBlitz3.ab2@2794>   BRA.w JL_0_3BF2
00035996 <AmiBlitz3.ab2@2797>     MOVE.l A5,-(A7)
0003599A <AmiBlitz3.ab2@2798>     MOVEM.l D1/A1-A2/A6,-(A7)
0003599C <AmiBlitz3.ab2@2799>     MOVEA.l A2,A5
000359A2 <AmiBlitz3.ab2@2800>      JSR AJL_0_BF6E
000359A6 <AmiBlitz3.ab2@2801>     CMP.w #$7D,D0
000359AA <AmiBlitz3.ab2@2802>      BEQ.w JL_0_3BD2
000359B0 <AmiBlitz3.ab2@2803>   JMP syntaxerr
000359B4 <AmiBlitz3.ab2@2806>     MOVEM.l (A7)+,D1/A1-A2/A6
000359B6 <AmiBlitz3.ab2@2807>     MOVE.l A5,D2
000359B8 <AmiBlitz3.ab2@2808>     SUB.l A2,D2
000359BA <AmiBlitz3.ab2@2809>     SUB.w D2,D1
000359BC <AmiBlitz3.ab2@2810>     MOVEA.l A5,A2
000359C2 <AmiBlitz3.ab2@2811>     CLR.w instringon
000359C4 <AmiBlitz3.ab2@2812>     MOVEA.l (A7)+,A5
000359C6 <AmiBlitz3.ab2@2813>     MOVE.l D3,D0
000359CA <AmiBlitz3.ab2@2814>     BPL.w JL_0_3BF2
000359D0 <AmiBlitz3.ab2@2815>   JMP ilconsterr
000359D2 <AmiBlitz3.ab2@2818>     SUBQ.w #1,D0
000359D6 <AmiBlitz3.ab2@2819>      BPL.w JL_0_3C20
000359DC <AmiBlitz3.ab2@2823>     MOVE.w numarg,D0
000359E0 <AmiBlitz3.ab2@2824>     DIVU #$A,D0
000359E4 <AmiBlitz3.ab2@2825>     ADDI.w #$30,D0
000359E6 <AmiBlitz3.ab2@2826>     CMPA.l A6,A1
000359EA <AmiBlitz3.ab2@2827>      BCC.w mbovererr
000359EC <AmiBlitz3.ab2@2828>     MOVE.b D0,(A1)+
000359EE <AmiBlitz3.ab2@2829>     SWAP D0
000359F2 <AmiBlitz3.ab2@2830>     ADDI.w #$30,D0
000359F4 <AmiBlitz3.ab2@2831>     CMPA.l A6,A1
000359F8 <AmiBlitz3.ab2@2832>      BCC.w mbovererr
000359FA <AmiBlitz3.ab2@2833>     MOVE.b D0,(A1)+
000359FE <AmiBlitz3.ab2@2834>   BRA.w JL_0_3C6C
00035A04 <AmiBlitz3.ab2@2840>     CMP.w numarg,D0
00035A08 <AmiBlitz3.ab2@2841>      BCC.w JL_0_3C6C
00035A0A <AmiBlitz3.ab2@2842>     LSL.w #1,D0
00035A0C <AmiBlitz3.ab2@2843>     MOVE.w D0,D4
00035A0E <AmiBlitz3.ab2@2844>     LSL.w #1,D0
00035A10 <AmiBlitz3.ab2@2845>     ADD.w D4,D0
00035A16 <AmiBlitz3.ab2@2846>     MOVEA.l ptr_macrobuffer_begin,A0
00035A18 <AmiBlitz3.ab2@2847>     ADDA.w D0,A0
00035A1C <AmiBlitz3.ab2@2848>     MOVE.w $4(A0),D4
00035A20 <AmiBlitz3.ab2@2849>      BEQ.w JL_0_3C6C
00035A22 <AmiBlitz3.ab2@2850>     MOVEA.l (A0),A0
00035A24 <AmiBlitz3.ab2@2851>     SUBQ.w #1,D4
00035A26 <AmiBlitz3.ab2@2854>       CMPA.l A6,A1
00035A2A <AmiBlitz3.ab2@2855>        BCC.w mbovererr
00035A2E <AmiBlitz3.ab2@2856>       CMP.w #"@@",(a0)
00035A32 <AmiBlitz3.ab2@2857>        BNE 'l10
00035A38 <AmiBlitz3.ab2@2858>       TST.w ininclude
00035A3C <AmiBlitz3.ab2@2859>        BNE errorjoin
00035A42 <AmiBlitz3.ab2@2862>       MOVE.l sourceline,a0
00035A44 <AmiBlitz3.ab2@2863>       MOVE.l (a0),a0
00035A4A <AmiBlitz3.ab2@2864>       CMP.l #0,a0
00035A4E <AmiBlitz3.ab2@2865>       BNE 'l11
00035A50 <AmiBlitz3.ab2@2866>       MOVEQ #0,d0
00035A56 <AmiBlitz3.ab2@2867>       JSR error
00035A5C <AmiBlitz3.ab2@2870>       MOVE.l a0,sourceline
00035A62 <AmiBlitz3.ab2@2871>       ADDQ.l #1,linenumat
00035A66 <AmiBlitz3.ab2@2872>       LEA 9(a0),a0
00035A68 <AmiBlitz3.ab2@2873>       MOVE.l a0,-(a7)
00035A6C <AmiBlitz3.ab2@2876>       CMP.b #" ",(a0)+
00035A70 <AmiBlitz3.ab2@2877>        BEQ 'l110
00035A76 <AmiBlitz3.ab2@2878>       CMP.b #";",-1(a0)
00035A78 <AmiBlitz3.ab2@2879>       MOVE.l (a7)+,a0
00035A7C <AmiBlitz3.ab2@2880>        BEQ 'l111
00035A7E <AmiBlitz3.ab2@2881>       SUBQ.l #1,d4
00035A80 <AmiBlitz3.ab2@2884>       MOVE.b (A0)+,(A1)+
00035A84 <AmiBlitz3.ab2@2885>     DBF D4,JL_0_3C46
00035A88 <AmiBlitz3.ab2@2887>   BRA.w JL_0_3C6C
00035A8A <AmiBlitz3.ab2@2890>     CMPA.l A6,A1
00035A8E <AmiBlitz3.ab2@2891>      BCC.w mbovererr
00035A90 <AmiBlitz3.ab2@2892>     MOVE.b D0,(A1)+
00035A94 <AmiBlitz3.ab2@2893>      BPL.w JL_0_3C6C
00035A96 <AmiBlitz3.ab2@2894>     CMPA.l A6,A1
00035A9A <AmiBlitz3.ab2@2895>      BCC.w mbovererr
00035A9C <AmiBlitz3.ab2@2896>     MOVE.b (A2)+,(A1)+
00035A9E <AmiBlitz3.ab2@2897>     SUBQ.w #1,D1
00035AA2 <AmiBlitz3.ab2@2900>   DBF D1,JL_0_3B48
00035AA4 <AmiBlitz3.ab2@2910>   CMPA.l A6,A1
00035AA8 <AmiBlitz3.ab2@2911>    BCC.w mbovererr
00035AAA <AmiBlitz3.ab2@2912>   MOVE.b (A5)+,(A1)+
00035AAE <AmiBlitz3.ab2@2913>    BNE.w JL_0_3C70
00035AB4 <AmiBlitz3.ab2@2914>   MOVEA.l myline,A5
00035ABA <AmiBlitz3.ab2@2915>   MOVE.l myoline,D0
00035ABE <AmiBlitz3.ab2@2916>    BEQ.w JL_0_3C9C
00035AC0 <AmiBlitz3.ab2@2917>   SUBQ.l #1,d0
00035AC2 <AmiBlitz3.ab2@2918>   MOVEA.l D0,A1
00035AC8 <AmiBlitz3.ab2@2919>   MOVE.l macrobuffer_size,D0
00035ACE <AmiBlitz3.ab2@2920>   MOVEA.l _execbase,A6
00035AD4 <AmiBlitz3.ab2@2921>   MOVE.l mempool,a0
00035AD8 <AmiBlitz3.ab2@2922>   JSR _FreePooled(A6)
00035ADC <AmiBlitz3.ab2@2925> BRA.w JL_0_3A46
00035ADE <AmiBlitz3.ab2@2928>   MOVEA.l (A7)+,A5
00035AE0 <AmiBlitz3.ab2@2929> RTS
00035AE6 <AmiBlitz3.ab2@2933>   MOVE.l myline,D0
00035AEA <AmiBlitz3.ab2@2934>   BEQ.w JL_0_3CC4
00035AEC <AmiBlitz3.ab2@2935>   SUBQ.l #1,d0
00035AF2 <AmiBlitz3.ab2@2936>   CLR.l myline
00035AF4 <AmiBlitz3.ab2@2937>   MOVEA.l D0,A1
00035AFA <AmiBlitz3.ab2@2938>   MOVE.l macrobuffer_size,D0
00035B00 <AmiBlitz3.ab2@2939>   MOVEA.l _execbase,A6
00035B06 <AmiBlitz3.ab2@2940>   MOVE.l mempool,a0
00035B0A <AmiBlitz3.ab2@2941> JMP _FreePooled(A6)
00035B0C <AmiBlitz3.ab2@2944> RTS
00035B0E <AmiBlitz3.ab2@2948>   MOVEQ.l #$00,D2
00035B12 <AmiBlitz3.ab2@2951>   ADDQ.w #1,4(a0)
00035B14 <AmiBlitz3.ab2@2952>    MOVE.b (A4)+,D0
00035B18 <AmiBlitz3.ab2@2954>    BEQ exit1
00035B1C <AmiBlitz3.ab2@2955>    BPL.w JL_0_3CD8
00035B20 <AmiBlitz3.ab2@2956>   ADDQ.w #1,4(a0)
00035B22 <AmiBlitz3.ab2@2957>   ADDQ.w #1,A4
00035B26 <AmiBlitz3.ab2@2958> BRA.w JL_0_3CC8
00035B2C <AmiBlitz3.ab2@2961>    TST.w instringon
00035B30 <AmiBlitz3.ab2@2962>    BNE 'lnom
00035B34 <AmiBlitz3.ab2@2963>    CMP.b #";",d0
00035B38 <AmiBlitz3.ab2@2964>    BEQ exit2
00035B3C <AmiBlitz3.ab2@2965>    CMP.b #":",d0
00035B40 <AmiBlitz3.ab2@2966>    BEQ exit2
00035B44 <AmiBlitz3.ab2@2969>   CMP.b #$22,D0
00035B48 <AmiBlitz3.ab2@2970>    BNE.w JL_0_3CEA
00035B4E <AmiBlitz3.ab2@2971>   NOT.w instringon
00035B52 <AmiBlitz3.ab2@2972> BRA.w JL_0_3CC8
00035B58 <AmiBlitz3.ab2@2976>   TST.w instringon
00035B5C <AmiBlitz3.ab2@2977>    BNE.w JL_0_3CC8
00035B60 <AmiBlitz3.ab2@2978>    CMP.b #"@",d0
00035B64 <AmiBlitz3.ab2@2979>    BNE 'l10
00035B68 <AmiBlitz3.ab2@2980>    CMP.b #"@",(a4)
00035B6C <AmiBlitz3.ab2@2981>    BNE 'l10
00035B72 <AmiBlitz3.ab2@2982>    TST.w ininclude
00035B76 <AmiBlitz3.ab2@2983>    BNE errorjoin
00035B7C <AmiBlitz3.ab2@2984>    MOVE.l sourceline3,a4
00035B82 <AmiBlitz3.ab2@2985>    CMP.l #0,a4
00035B86 <AmiBlitz3.ab2@2986>    BNE 'l11
00035B8C <AmiBlitz3.ab2@2987>    MOVE.l sourceline,a4
00035B8E <AmiBlitz3.ab2@2990>   MOVE.l (a4),a4
00035B94 <AmiBlitz3.ab2@2991>       CMP.l #0,a4
00035B98 <AmiBlitz3.ab2@2992>       BNE 'l12
00035B9A <AmiBlitz3.ab2@2993>       MOVEQ #0,d0
00035BA0 <AmiBlitz3.ab2@2994>       JSR error
00035BA6 <AmiBlitz3.ab2@2997>    MOVE.l a4,sourceline3
00035BAA <AmiBlitz3.ab2@2998>    LEA 9(a4),a4
00035BAC <AmiBlitz3.ab2@2999>    MOVEQ #",",d0
00035BB0 <AmiBlitz3.ab2@3002>   CMP.b #$2C,D0
00035BB4 <AmiBlitz3.ab2@3003>    BNE.w JL_0_3D06
00035BB6 <AmiBlitz3.ab2@3004>   TST.w D2
00035BBA <AmiBlitz3.ab2@3005>    BEQ.w JL_0_3D30
00035BBE <AmiBlitz3.ab2@3006> BRA.w JL_0_3CC8
00035BC2 <AmiBlitz3.ab2@3010>    CMP.b #$7B,D0                                           ;"{"
00035BC6 <AmiBlitz3.ab2@3011>    BEQ.w 'l10
00035BCA <AmiBlitz3.ab2@3012>   CMP.b #$28,D0                                            ;"("
00035BCE <AmiBlitz3.ab2@3015>    BNE.w JL_0_3D14
00035BD0 <AmiBlitz3.ab2@3016>   ADDQ.w #1,D2
00035BD4 <AmiBlitz3.ab2@3017> BRA.w JL_0_3CC8
00035BD8 <AmiBlitz3.ab2@3020>   CMP.b #$7D,D0                                           ;"}"
00035BDC <AmiBlitz3.ab2@3021>    BNE.w JL_0_3D22
00035BDE <AmiBlitz3.ab2@3022>  TST.w D2
00035BE2 <AmiBlitz3.ab2@3023>    BEQ.w JL_0_3D30
00035BE6 <AmiBlitz3.ab2@3027>    CMP.b #$7D,D0                                           ;"}"
00035BEA <AmiBlitz3.ab2@3028>    BEQ.w 'l10
00035BEE <AmiBlitz3.ab2@3029>   CMP.b #$29,D0                                            ;")"
00035BF2 <AmiBlitz3.ab2@3032>    BNE.w JL_0_3CC8
00035BF4 <AmiBlitz3.ab2@3033>   SUBQ.w #1,D2
00035BF8 <AmiBlitz3.ab2@3034> BRA.w JL_0_3CC8
00035BFA <AmiBlitz3.ab2@3037> RTS
00035BFC <AmiBlitz3.ab2@3041>       SUBQ.l #1,a4
00035C02 <AmiBlitz3.ab2@3042>       CLR.l sourceline3
00035C04 <AmiBlitz3.ab2@3043> RTS
00035C06 <AmiBlitz3.ab2@3047>       MOVEQ #0,d0
00035C08 <AmiBlitz3.ab2@3048>       SUBQ.l #1,a4
00035C0E <AmiBlitz3.ab2@3049>       CLR.l sourceline3
00035C10 <AmiBlitz3.ab2@3050> RTS
00035C14 <AmiBlitz3.ab2@3054>   CMP.b #$7B,D0                                            ;"{"
00035C18 <AmiBlitz3.ab2@3055>   BEQ.w JL_0_3D3E
00035C1C <AmiBlitz3.ab2@3056>   CMP.b #$28,D0                                            ;"("
00035C1E <AmiBlitz3.ab2@3059> RTS
00035C22 <AmiBlitz3.ab2@3063>   CMP.b #$7D,D0                                            ;"}"
00035C26 <AmiBlitz3.ab2@3064>   BEQ.w JL_0_3D4C
00035C2A <AmiBlitz3.ab2@3065>   CMP.b #$29,D0                                            ;")"
00035C2C <AmiBlitz3.ab2@3068> RTS
00035C2E <AmiBlitz3.ab2@3072> stopit:     Ds.w 1
00035C30 <AmiBlitz3.ab2@3073> clrreq:     Ds.w 1
00035C34 <AmiBlitz3.ab2@3094>   MOVE.w clrreq(PC),D0
00035C38 <AmiBlitz3.ab2@3095>    BEQ.w close_compilewin__skip
00035C6A <AmiBlitz3.ab2@3097> 
00035C70 <AmiBlitz3.ab2@3099>   LEA clrreq,a0
00035C72 <AmiBlitz3.ab2@3100>   NOT.w (a0)                                               ;reass
00035C78 <AmiBlitz3.ab2@3101>   MOVEA.l ptr_ThisTask,A0
00035C7C <AmiBlitz3.ab2@3102>   CLR.l $1E(A0)
00035C80 <AmiBlitz3.ab2@3103>   CLR.l $2A(A0)
00035C82 <AmiBlitz3.ab2@3106> RTS
00035C84 <AmiBlitz3.ab2@3109> intsused:  Ds.w 1
00035C8C <AmiBlitz3.ab2@3113>   MOVE.w #-1,blitzoff
00035C92 <AmiBlitz3.ab2@3114>   CLR.w intsused
00035C98 <AmiBlitz3.ab2@3115>   CLR.w anyerrs
00035C9E <AmiBlitz3.ab2@3116>   CLR.w blitzmode
00035CA4 <AmiBlitz3.ab2@3117>   CLR.w dontwrite                                              ;nomemleft
00035CAA <AmiBlitz3.ab2@3118>   CLR.w constmode
00035CB0 <AmiBlitz3.ab2@3119>   CLR.w cmake
00035CB6 <AmiBlitz3.ab2@3120>   CLR.w cfetchmode
00035CBC <AmiBlitz3.ab2@3121>   CLR.l intdata1
00035CC2 <AmiBlitz3.ab2@3122>   CLR.w fuckpos
00035CC8 <AmiBlitz3.ab2@3123>   CLR.w procnum
00035CCE <AmiBlitz3.ab2@3124>   CLR.w procnum2
00035CD4 <AmiBlitz3.ab2@3125>   CLR.w dfetch
00035CDA <AmiBlitz3.ab2@3126>   CLR.l titleat
00035CE0 <AmiBlitz3.ab2@3127>   CLR.b usedpath
00035CE6 <AmiBlitz3.ab2@3128>   CLR.b path2
00035CEC <AmiBlitz3.ab2@3129>   CLR.w inerr
00035CF2 <AmiBlitz3.ab2@3130>   CLR.w intlevel
00035CF8 <AmiBlitz3.ab2@3131>   CLR.l cont_pc
00035CFE <AmiBlitz3.ab2@3132>   CLR.l cont_pc2
00035D04 <AmiBlitz3.ab2@3133>   CLR.l lastcontlink
00035D0E <AmiBlitz3.ab2@3134>   MOVE.l destbufferstart,destpointer
00035D18 <AmiBlitz3.ab2@3135>   MOVE.l destbufferstart,bigpc
00035D22 <AmiBlitz3.ab2@3136>   MOVE.l destbufferend,libend
00035D2C <AmiBlitz3.ab2@3137>   MOVE.l data1start,data1
00035D36 <AmiBlitz3.ab2@3138>   MOVE.l data2at,data2
00035D3E <AmiBlitz3.ab2@3139>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00035D46 <AmiBlitz3.ab2@3140>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00035D4C <AmiBlitz3.ab2@3141>   CLR.w oldvcodelen
00035D52 <AmiBlitz3.ab2@3142>   CLR.b lastgloballabel                                    ;lastbiglab org source
00035D54 <AmiBlitz3.ab2@3143> RTS
00035D56 <AmiBlitz3.ab2@3146> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00035D5C <AmiBlitz3.ab2@3150>   LEA  clrreq,a1
00035D60 <AmiBlitz3.ab2@3151>   MOVE.w #2000,(a1)
00035D8A <AmiBlitz3.ab2@3152>   !basic
00035DA0 <AmiBlitz3.ab2@3153> 
00035DF0 <AmiBlitz3.ab2@3154>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00035DF8 <AmiBlitz3.ab2@3155>   calcpro.l      = 0
00035E00 <AmiBlitz3.ab2@3156>   calcpro_old.l  = 0
00035E0C <AmiBlitz3.ab2@3157>   typ_old.l      = -1
00035E18 <AmiBlitz3.ab2@3158>   pass_old.l     = -1
00035E1E <AmiBlitz3.ab2@3159>   update_comstatus_gui.b = True ; for the first
00035E58 <AmiBlitz3.ab2@3161>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00035E92 <AmiBlitz3.ab2@3162>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00035EB0 <AmiBlitz3.ab2@3163>   !asm
00035EE2 <AmiBlitz3.ab2@3164> 
00035EE8 <AmiBlitz3.ab2@3166>   CLR.w stopit
00035EEA <AmiBlitz3.ab2@3167> RTS
00035EF0 <AmiBlitz3.ab2@3171>   CLR.w storedebugmode
00035EF6 <AmiBlitz3.ab2@3172>   CLR.b iserror
00035EFA <AmiBlitz3.ab2@3173>   BSR.w compilerequester
00035F04 <AmiBlitz3.ab2@3175>   MOVE.l #0,globallinecount
00035F0A <AmiBlitz3.ab2@3176>   JSR check_of_same_source
00035F0E <AmiBlitz3.ab2@3177>   BSR.w call_setpointerbusy
00035F12 <AmiBlitz3.ab2@3178>   BSR.w setcvars
00035F1A <AmiBlitz3.ab2@3179>   MOVE.w #$8000,globalvarpointer
00035F24 <AmiBlitz3.ab2@3180>   MOVE.l #newtype_quick,defaulttype
00035F2A <AmiBlitz3.ab2@3181>   MOVE.l A7,passstack
00035F34 <AmiBlitz3.ab2@3182>   MOVE.l #firstitem_,sourceline
00035F3E <AmiBlitz3.ab2@3183>   MOVE.w numlines_org,linesleft
00035F48 <AmiBlitz3.ab2@3184>   MOVE.l numlines,numlines2
00035F4E <AmiBlitz3.ab2@3185>   ADDQ.w #1,linesleft
00035F54 <AmiBlitz3.ab2@3186>   ADDQ.l #1,numlines2
00035F5E <AmiBlitz3.ab2@3187>   MOVE.l #-1,linenumat
00035F62 <AmiBlitz3.ab2@3188>   BSR.w resetlibs
00035F66 <AmiBlitz3.ab2@3189>   BSR.w Aclearallvars
00035F6C <AmiBlitz3.ab2@3190>   LEA progress_per_line+2,A0
00035F6E <AmiBlitz3.ab2@3191>   MOVEQ.l #$03,D0
00035F70 <AmiBlitz3.ab2@3194>     CLR.w (A0)+
00035F74 <AmiBlitz3.ab2@3195>   DBF D0,JL_0_40EC
00035F7A <AmiBlitz3.ab2@3198>   LEA _include,a0
00035F7E <AmiBlitz3.ab2@3199>   MOVEM.l a0-a6/d0-d7,-(a7)
00035F84 <AmiBlitz3.ab2@3200>   LEA ptr_parameterstore,a1
00035F86 <AmiBlitz3.ab2@3203>     MOVE.b (a0)+,(a1)+
00035F8A <AmiBlitz3.ab2@3204>   BNE 'l1b
00035F8C <AmiBlitz3.ab2@3206>   MOVEQ #9,d2
00035F92 <AmiBlitz3.ab2@3207>   JSR findlabel2
00035F96 <AmiBlitz3.ab2@3208>   BNE 'd
00035F9E <AmiBlitz3.ab2@3209>   MOVE.l #0,8(a2)
00035FA2 <AmiBlitz3.ab2@3210>   MOVEM.l (a7)+,a0-a6/d0-d7
00035FA6 <AmiBlitz3.ab2@3211> BRA 'd2
00035FAC <AmiBlitz3.ab2@3214>   JSR addlabelhash
00035FB4 <AmiBlitz3.ab2@3215>   MOVE.l #$1,$4(A2)
00035FBC <AmiBlitz3.ab2@3216>   MOVE.l #0,8(a2)
00035FC0 <AmiBlitz3.ab2@3217>   MOVEM.l (a7)+,a0-a6/d0-d7
00035FC6 <AmiBlitz3.ab2@3220>   LEA _debug,a0
00035FCA <AmiBlitz3.ab2@3221>   MOVEM.l a0-a6/d0-d7,-(a7)
00035FD0 <AmiBlitz3.ab2@3222>   LEA ptr_parameterstore,a1
00035FD2 <AmiBlitz3.ab2@3225>     MOVE.b (a0)+,(a1)+
00035FD6 <AmiBlitz3.ab2@3226>   BNE 'l9b
00035FD8 <AmiBlitz3.ab2@3228>   MOVEQ #7,d2
00035FDE <AmiBlitz3.ab2@3229>   JSR findlabel2
00035FE2 <AmiBlitz3.ab2@3230>   BNE 'd9
00035FE6 <AmiBlitz3.ab2@3231>   MOVE.b debugmode(PC),D0
00035FE8 <AmiBlitz3.ab2@3232>   EXT.w d0
00035FEA <AmiBlitz3.ab2@3233>   EXT.l d0
00035FEE <AmiBlitz3.ab2@3234>   MOVE.l d0,8(a2)
00035FF2 <AmiBlitz3.ab2@3235>   MOVEM.l (a7)+,a0-a6/d0-d7
00035FF6 <AmiBlitz3.ab2@3236> BRA 'd9b
00035FFC <AmiBlitz3.ab2@3239>   JSR addlabelhash
00036004 <AmiBlitz3.ab2@3240>   MOVE.l #$1,$4(A2)
00036008 <AmiBlitz3.ab2@3241>   MOVE.b debugmode(PC),D0
0003600A <AmiBlitz3.ab2@3242>   EXT.w d0
0003600C <AmiBlitz3.ab2@3243>   EXT.l d0
00036010 <AmiBlitz3.ab2@3244>   MOVE.l d0,8(a2)
00036014 <AmiBlitz3.ab2@3245>   MOVEM.l (a7)+,a0-a6/d0-d7
0003601A <AmiBlitz3.ab2@3248>   MOVE.l #firstitem_,a0
0003601C <AmiBlitz3.ab2@3249>   MOVE.l (a0),a0
00036020 <AmiBlitz3.ab2@3250>   LEA 9(a0),a0
00036028 <AmiBlitz3.ab2@3251>   MOVE.w #0,exdebug
0003602E <AmiBlitz3.ab2@3252>   TST.b debugmode
00036032 <AmiBlitz3.ab2@3253>    BEQ 'l10
00036034 <AmiBlitz3.ab2@3256>   MOVE.b (a0)+,d0
00036038 <AmiBlitz3.ab2@3257>    BEQ 'l10
0003603C <AmiBlitz3.ab2@3258>   CMP.b #$20,d0
00036040 <AmiBlitz3.ab2@3259>    BEQ 'l2
00036042 <AmiBlitz3.ab2@3260>   SUBQ.l #1,a0
00036048 <AmiBlitz3.ab2@3261>   CMP.l #"DEBU",(a0)
0003604C <AmiBlitz3.ab2@3262>    BNE 'l10
00036052 <AmiBlitz3.ab2@3263>   CMP.b #"G",4(a0)
00036056 <AmiBlitz3.ab2@3264>    BNE 'l10
0003605E <AmiBlitz3.ab2@3265>   MOVE.w #$0,debugversion
00036066 <AmiBlitz3.ab2@3266>   MOVE.b #1,exdebug
0003606C <AmiBlitz3.ab2@3269>   LEA nops4,A0
00036072 <AmiBlitz3.ab2@3270>   LEA dataget,A1
00036078 <AmiBlitz3.ab2@3271>   JSR pokecode2                                            ;write intro nops
0003607E <AmiBlitz3.ab2@3272>   MOVE.l #$01010101,d1
00036084 <AmiBlitz3.ab2@3273>   JSR writedatalong                                        ;for the 4 tempregs
0003608A <AmiBlitz3.ab2@3274>   JSR writedatalong
00036090 <AmiBlitz3.ab2@3275>   JSR writedatalong
00036096 <AmiBlitz3.ab2@3276>   JSR writedatalong
0003609C <AmiBlitz3.ab2@3277>   TST.b saved0
000360A0 <AmiBlitz3.ab2@3278>    BEQ 'l1
000360A6 <AmiBlitz3.ab2@3279>   MOVE.l #$4e714e71,d1
000360AC <AmiBlitz3.ab2@3280>   JSR writelong                                            ;add 2 nops
000360B2 <AmiBlitz3.ab2@3281>   MOVE.l #$4e714e71,d1
000360B8 <AmiBlitz3.ab2@3282>   JSR writelong                                            ;add 2 nops
000360BE <AmiBlitz3.ab2@3283>   MOVE.l #$4e714e71,d1
000360C4 <AmiBlitz3.ab2@3284>   JSR writelong                                            ;add 2 nops
000360CA <AmiBlitz3.ab2@3285>    MOVE.l #$4e714e71,d1
000360D0 <AmiBlitz3.ab2@3286>   JSR writelong                                            ;add 2 nops
000360D4 <AmiBlitz3.ab2@3289>   MOVE.b debugmode(PC),D1
000360D8 <AmiBlitz3.ab2@3290>    BEQ.b JL_0_4132
000360E2 <AmiBlitz3.ab2@3291>   MOVE.b debugmode,storedebugmode
000360E6 <AmiBlitz3.ab2@3292>   MOVE.w #$FFDC,D1
000360EA <AmiBlitz3.ab2@3293>    BSR.w uselib
000360F0 <AmiBlitz3.ab2@3294>   TST.w debugversion                                       ;make a version for debugger
000360F4 <AmiBlitz3.ab2@3295>    BNE.b JL_0_412A
000360F8 <AmiBlitz3.ab2@3299>   MOVE.w #$FA3C,D1
000360FC <AmiBlitz3.ab2@3300>    BSR.w uselib
00036100 <AmiBlitz3.ab2@3301>   MOVE.w #$0001,D1
00036104 <AmiBlitz3.ab2@3302>    BSR.w uselib
00036108 <AmiBlitz3.ab2@3303> BRA.b JL_0_4132
0003610C <AmiBlitz3.ab2@3306>   MOVE.w #$FA32,D1
00036110 <AmiBlitz3.ab2@3307>   BSR.w uselib
00036114 <AmiBlitz3.ab2@3310>   BSR.w nextline
0003611A <AmiBlitz3.ab2@3311>   CLR.l linenum
00036120 <AmiBlitz3.ab2@3312>   CLR.l stacktrack
00036126 <AmiBlitz3.ab2@3315>   ADDQ.l #1,linenum
00036130 <AmiBlitz3.ab2@3316>   MOVE.l destpointer,destpointer2
00036136 <AmiBlitz3.ab2@3317>   MOVE.l a5,sourceline2
0003613A <AmiBlitz3.ab2@3318>   BSR.w compile_line                                        ;compile pass
0003613E <AmiBlitz3.ab2@3321>   BSR.w nextline
00036142 <AmiBlitz3.ab2@3322>    BNE.w JL_0_4136
00036146 <AmiBlitz3.ab2@3323>   BSR.w JUMP_do_runerrson
0003614A <AmiBlitz3.ab2@3324>   BSR.w pointchk
00036150 <AmiBlitz3.ab2@3325>   TST.b objectcount
00036154 <AmiBlitz3.ab2@3326>    BNE macenderr
0003615A <AmiBlitz3.ab2@3327>   CLR.l linenumat
0003615E <AmiBlitz3.ab2@3328>   BSR.w errchx2
00036168 <AmiBlitz3.ab2@3329>   CMP.l #-1,bssend
0003616C <AmiBlitz3.ab2@3330>    BNE 'l30
00036176 <AmiBlitz3.ab2@3331>   MOVE.l destpointer,bssend                                ;compile end
0003617C <AmiBlitz3.ab2@3334>   MOVE.l destpointer,d0
00036186 <AmiBlitz3.ab2@3335>   CMP.l #-1,bssstart
0003618A <AmiBlitz3.ab2@3336>   BNE 'lnf6
00036194 <AmiBlitz3.ab2@3337>   CMP.l #-1,chipstart
00036198 <AmiBlitz3.ab2@3338>   BNE 'lnf6
0003619C <AmiBlitz3.ab2@3339> BRA 'leven4
000361A2 <AmiBlitz3.ab2@3342>   MOVE.l destpointer,d1
000361A4 <AmiBlitz3.ab2@3343>   ADDQ.l #3,d1
000361AA <AmiBlitz3.ab2@3344>   AND.l #$fffffffc,d1                                      ;bug ?
000361B0 <AmiBlitz3.ab2@3345>   MOVE.l d1,destpointer
000361BA <AmiBlitz3.ab2@3348>   MOVE.l destpointer,codeend
000361C4 <AmiBlitz3.ab2@3349>   CMP.l #-1,chipend
000361C8 <AmiBlitz3.ab2@3350>   BNE 'l31
000361D2 <AmiBlitz3.ab2@3351>   MOVE.l destpointer,chipend
000361D8 <AmiBlitz3.ab2@3354>   MOVE.l destpointer,d1
000361DA <AmiBlitz3.ab2@3355>   ADDQ.l #1,d1
000361E0 <AmiBlitz3.ab2@3356>   AND.l #$fffffffe,d1                                     ;new evenexit
000361E6 <AmiBlitz3.ab2@3357>   MOVE.l d1,destpointer
000361EA <AmiBlitz3.ab2@3358>   MOVE.b debugmode(PC),D1
000361EE <AmiBlitz3.ab2@3359>    BEQ.b JL_0_4180
000361F2 <AmiBlitz3.ab2@3360>    BSR.w debugstuff
000361F6 <AmiBlitz3.ab2@3361>   MOVE.w #$C300,D1
000361FC <AmiBlitz3.ab2@3362>    JSR Atokejsr
00036200 <AmiBlitz3.ab2@3363>    BSR.w debugstuff
00036204 <AmiBlitz3.ab2@3364>   MOVE.l eopcode(PC),D1
0003620A <AmiBlitz3.ab2@3365>    JSR writelong
0003620E <AmiBlitz3.ab2@3366>   MOVE.l lastcontlink(PC),D1
00036212 <AmiBlitz3.ab2@3367>    BEQ.b JL_0_4180
00036214 <AmiBlitz3.ab2@3368>   MOVEA.l D1,A0
00036218 <AmiBlitz3.ab2@3369>   CLR.w $6(A0)
00036222 <AmiBlitz3.ab2@3375>   MOVE.l destpointer,endop                                ;where end goes...
00036228 <AmiBlitz3.ab2@3377>   TST.w blitzmode
0003622C <AmiBlitz3.ab2@3378>   BEQ.w JL_0_4198
00036230 <AmiBlitz3.ab2@3379>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00036236 <AmiBlitz3.ab2@3382>   TST.w intsused
0003623A <AmiBlitz3.ab2@3383>   BEQ.b JL_0_41AA
0003623E <AmiBlitz3.ab2@3384>   MOVE.w #$C105,D1                                        ;interupts off!
00036244 <AmiBlitz3.ab2@3385>   JSR tokejsr2
00036248 <AmiBlitz3.ab2@3388>   BSR.w calcstatic
0003624E <AmiBlitz3.ab2@3389>   MOVE.w D4,numstatic
00036254 <AmiBlitz3.ab2@3390>   MOVE.l D3,staticdata
00036258 <AmiBlitz3.ab2@3391>    BSR.w calcmaxs
0003625E <AmiBlitz3.ab2@3393>   TST.l tokeslist
00036262 <AmiBlitz3.ab2@3394>    BEQ.b JL_0_41F8
00036268 <AmiBlitz3.ab2@3395>   MOVE.w gotocode,D1                                       ;jmp!
0003626E <AmiBlitz3.ab2@3396>    JSR writeword
00036278 <AmiBlitz3.ab2@3397>   MOVE.l destpointer,endjmpat
0003627C <AmiBlitz3.ab2@3398>    BSR.w addoff
00036282 <AmiBlitz3.ab2@3399>    JSR writelong                                           
00036286 <AmiBlitz3.ab2@3401>    BSR.w JL_0_6C76                                         ;has to be done before finits!
0003628C <AmiBlitz3.ab2@3405>   TST.w dontwrite
00036290 <AmiBlitz3.ab2@3406>    BNE.b JL_0_41F8
00036294 <AmiBlitz3.ab2@3407>   MOVEA.l endjmpat(PC),A4
0003629A <AmiBlitz3.ab2@3408>   MOVE.l destpointer,(A4)
000362A0 <AmiBlitz3.ab2@3411>   TST.b returncode
000362A4 <AmiBlitz3.ab2@3412>   BEQ 'l2
000362A8 <AmiBlitz3.ab2@3413>   MOVE.w #$2e80,d1
000362AE <AmiBlitz3.ab2@3414>   JSR writeword
000362B4 <AmiBlitz3.ab2@3417>   JSR JL_0_B98A
000362BA <AmiBlitz3.ab2@3418>   TST.b returncode
000362BE <AmiBlitz3.ab2@3419>   BEQ 'l3
000362C2 <AmiBlitz3.ab2@3420>   MOVE.w #$4e75,d1
000362C8 <AmiBlitz3.ab2@3421>   JSR writeword
000362CC <AmiBlitz3.ab2@3422> BRA 'l1
000362D2 <AmiBlitz3.ab2@3425>   MOVE.l #$70004E75,D1
000362D8 <AmiBlitz3.ab2@3426>   JSR writelong                                            ;write moveq #0,d0:rts
000362DE <AmiBlitz3.ab2@3429>   JSR JL_0_B73E
000362E2 <AmiBlitz3.ab2@3430>   BSR.w asmfixer
000362E6 <AmiBlitz3.ab2@3431>   BSR.w close_compilewin
000362EA <AmiBlitz3.ab2@3432> BRA.w call_setpointernormal
000362F0 <AmiBlitz3.ab2@3436> JMP do_runerrson
000362F2 <AmiBlitz3.ab2@3440> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000362F4 <AmiBlitz3.ab2@3441>             Dc.b $4E,$40                                   ;TRAP  #00
000362F8 <AmiBlitz3.ab2@3443> endjmpat:   Ds.l 1
000362FE <AmiBlitz3.ab2@3447>   MOVEA.l newtype_string,A2
00036304 <AmiBlitz3.ab2@3448>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00036308 <AmiBlitz3.ab2@3451>     CMPA.w #$0,A2
0003630C <AmiBlitz3.ab2@3452>      BEQ.w pointchk_done
00036310 <AmiBlitz3.ab2@3453>     CMP.l $4(A2),D0
00036314 <AmiBlitz3.ab2@3454>      BNE.w pointchk_next
0003631C <AmiBlitz3.ab2@3455>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00036320 <AmiBlitz3.ab2@3456> BRA.w notypeerr
00036322 <AmiBlitz3.ab2@3459>     MOVEA.l (A2),A2
00036326 <AmiBlitz3.ab2@3460> BRA.w pointchk_loop
00036328 <AmiBlitz3.ab2@3463> RTS
0003632E <AmiBlitz3.ab2@3467>   LEA labelbase,A2
00036330 <AmiBlitz3.ab2@3471>   MOVE.l (A2),D0                                           ;testlabels
00036334 <AmiBlitz3.ab2@3472>    BEQ.w errchx2_done
00036336 <AmiBlitz3.ab2@3473>   MOVEA.l D0,A2
0003633A <AmiBlitz3.ab2@3474>   MOVE.l $4(A2),D0
0003633E <AmiBlitz3.ab2@3475>   BTST #$0,D0
00036342 <AmiBlitz3.ab2@3476>    BNE.w errchx2_loop
00036346 <AmiBlitz3.ab2@3477>   MOVE.l $8(A2),D0
0003634A <AmiBlitz3.ab2@3478>    BNE.w errchx2_loop
00036352 <AmiBlitz3.ab2@3479>   MOVE.w $10(A2),linenumat+2
00036354 <AmiBlitz3.ab2@3480>   MOVEQ #0,d0
00036358 <AmiBlitz3.ab2@3481>   MOVE.b $12(a2),d0
00036360 <AmiBlitz3.ab2@3482>   MOVE.w 0(a2,d0),linenumat
00036366 <AmiBlitz3.ab2@3483> JMP nolaberr                                               ;label not found
0003636C <AmiBlitz3.ab2@3486>   MOVE.l concomsp,D0
00036372 <AmiBlitz3.ab2@3487>   CMP.l #concomstack,D0
00036376 <AmiBlitz3.ab2@3488>    BNE.w chxerr4
0003637C <AmiBlitz3.ab2@3489>   MOVE.w connest,D1
00036380 <AmiBlitz3.ab2@3490>    BNE.w chxerr4
00036382 <AmiBlitz3.ab2@3493>   MOVE.l D1,-(A7)
00036388 <AmiBlitz3.ab2@3494>   MOVE.l firstsel,D1
0003638C <AmiBlitz3.ab2@3495>    BNE.w errchx_err1
00036392 <AmiBlitz3.ab2@3496>   MOVE.l firstrep,D1
00036396 <AmiBlitz3.ab2@3497>    BNE.w errchx_err2
0003639C <AmiBlitz3.ab2@3498>   MOVE.w intstring,D1
000363A0 <AmiBlitz3.ab2@3499>    BNE.w errchx_err3
000363A4 <AmiBlitz3.ab2@3500>   MOVE.l 4(a7),d1
000363AA <AmiBlitz3.ab2@3501>   MOVE.w proceduremode,D1
000363AE <AmiBlitz3.ab2@3502>    BNE.w errchx_err6
000363B4 <AmiBlitz3.ab2@3503>   MOVE.l firstiff,d1
000363B8 <AmiBlitz3.ab2@3504>    BNE errchx_err5
000363BE <AmiBlitz3.ab2@3505>   MOVE.l firstfor,D1
000363C2 <AmiBlitz3.ab2@3506>    BNE.w errchx_err7
000363C4 <AmiBlitz3.ab2@3507>   MOVE.l (A7)+,D1
000363C6 <AmiBlitz3.ab2@3508> RTS
000363D0 <AmiBlitz3.ab2@3512>   MOVE.l sellineat,linenumat
000363D6 <AmiBlitz3.ab2@3513> JMP selerrz
000363E0 <AmiBlitz3.ab2@3516>   MOVE.l replineat,linenumat
000363E6 <AmiBlitz3.ab2@3517> JMP unterr3
000363F0 <AmiBlitz3.ab2@3520>   MOVE.l intlineat,linenumat
000363F6 <AmiBlitz3.ab2@3521> JMP interr2
00036400 <AmiBlitz3.ab2@3524>   MOVE.l iflineat,linenumat
00036406 <AmiBlitz3.ab2@3525> JMP noenderr
00036410 <AmiBlitz3.ab2@3528>   MOVE.l prolineat,linenumat
00036416 <AmiBlitz3.ab2@3529> JMP nopenderr
00036420 <AmiBlitz3.ab2@3532>   MOVE.l forlineat,linenumat
00036426 <AmiBlitz3.ab2@3533> JMP nonexterr
00036430 <AmiBlitz3.ab2@3536>   MOVE.l ciflineat,linenumat
00036436 <AmiBlitz3.ab2@3537> JMP nocenderr
00036440 <AmiBlitz3.ab2@3541>   MOVE.l data1,maxsat
00036442 <AmiBlitz3.ab2@3542>   MOVEQ.l #$00,D4
00036448 <AmiBlitz3.ab2@3543>   MOVEA.l libpointer,A2
0003644C <AmiBlitz3.ab2@3546>     CMPA.w #$0,A2
00036450 <AmiBlitz3.ab2@3547>      BEQ.w calcmaxs_done
00036454 <AmiBlitz3.ab2@3548>     TST.w $C(A2)
00036458 <AmiBlitz3.ab2@3549>      BPL.w calcmaxs_next
0003645C <AmiBlitz3.ab2@3550>     MOVE.l $12(A2),D0
00036460 <AmiBlitz3.ab2@3551>     TST.w -$2(A2,D0.L)
00036464 <AmiBlitz3.ab2@3552>      BEQ.w calcmaxs_next
00036466 <AmiBlitz3.ab2@3553>     ADDQ.w #1,D4
0003646A <AmiBlitz3.ab2@3554>     MOVE.w -$6(A2,D0.L),D1
0003646E <AmiBlitz3.ab2@3555>     BSR.w pokedata1
00036470 <AmiBlitz3.ab2@3556>     MOVEQ.l #$01,D1
00036474 <AmiBlitz3.ab2@3557>     MOVE.w -$2(A2,D0.L),D2
00036476 <AmiBlitz3.ab2@3558>     LSL.w D2,D1
0003647A <AmiBlitz3.ab2@3559>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0003647E <AmiBlitz3.ab2@3560>     BSR.w writedatalong
00036480 <AmiBlitz3.ab2@3563>     MOVEA.l (A2),A2
00036484 <AmiBlitz3.ab2@3564> BRA.w calcmaxs_loop
0003648A <AmiBlitz3.ab2@3567>   MOVE.w D4,maxsused
0003648E <AmiBlitz3.ab2@3568>    BEQ.w calcmaxs_done2
00036492 <AmiBlitz3.ab2@3569>   MOVE.w #$FFFA,D1                                         ;;use memlib
00036496 <AmiBlitz3.ab2@3570> BRA.w uselib
00036498 <AmiBlitz3.ab2@3573> RTS
0003649E <AmiBlitz3.ab2@3577>    MOVE.l a7,stackaddr
000364A2 <AmiBlitz3.ab2@3578>    BSR.w compile_term
000364A6 <AmiBlitz3.ab2@3579>    BSR.w reget
000364AA <AmiBlitz3.ab2@3580>    BNE.w illeolerr
000364B0 <AmiBlitz3.ab2@3581>    TST.w dontwrite
000364B4 <AmiBlitz3.ab2@3582>    BNE 'l1
000364BA <AmiBlitz3.ab2@3583>    TST.l stacktrack
000364BE <AmiBlitz3.ab2@3584>    BNE errormsg_stack
000364C2 <AmiBlitz3.ab2@3587>    CMP.w #-$7FDE,D0
000364C6 <AmiBlitz3.ab2@3588>    BNE.w compile_line_notelse
000364CC <AmiBlitz3.ab2@3589>    JSR do_else2
000364D0 <AmiBlitz3.ab2@3590> BRA.w compile_line
000364D2 <AmiBlitz3.ab2@3593>   TST.w D0
000364D6 <AmiBlitz3.ab2@3594>   BNE.w compile_line
000364DC <AmiBlitz3.ab2@3599>   MOVE.l firstiff,D0
000364E0 <AmiBlitz3.ab2@3600>    BEQ.w compile_line_done
000364E2 <AmiBlitz3.ab2@3601>   MOVEA.l D0,A0
000364E6 <AmiBlitz3.ab2@3602>   MOVE.w $C(A0),D1
000364EA <AmiBlitz3.ab2@3603>    BPL.w compile_line_done
000364EE <AmiBlitz3.ab2@3607>   BCLR #$F,D1
000364F4 <AmiBlitz3.ab2@3608>    JSR AJL_0_D7B8
000364FA <AmiBlitz3.ab2@3609>    JSR AJL_0_D81C
000364FE <AmiBlitz3.ab2@3610> BRA.w compile_line_unthen
00036500 <AmiBlitz3.ab2@3613> RTS
00036506 <AmiBlitz3.ab2@3617>   LEA lastgloballabel,A0
00036508 <AmiBlitz3.ab2@3618>   TST.b (A0)
0003650C <AmiBlitz3.ab2@3619>   BEQ.w nolocerr
00036512 <AmiBlitz3.ab2@3620>   LEA ptr_parameterstore,A1
00036514 <AmiBlitz3.ab2@3621>   MOVEQ.l #$00,D2
00036516 <AmiBlitz3.ab2@3624>   ADDQ.w #1,D2
00036518 <AmiBlitz3.ab2@3625>   MOVE.b (A0)+,(A1)+
0003651C <AmiBlitz3.ab2@3626>    BNE.w createlab_loop
00036522 <AmiBlitz3.ab2@3627>   MOVE.b #$27,-$1(A1)
00036524 <AmiBlitz3.ab2@3628>   MOVE.w D2,-(A7)
0003652A <AmiBlitz3.ab2@3629>    JSR makename4
0003652C <AmiBlitz3.ab2@3630>   CMP.w (A7)+,D2
00036530 <AmiBlitz3.ab2@3631>    BEQ.w syntaxerr
00036532 <AmiBlitz3.ab2@3632>    TST.w d0
00036536 <AmiBlitz3.ab2@3633>    BPL createlab_done
0003653E <AmiBlitz3.ab2@3634>    MOVE.w #$3a,lastchar
00036540 <AmiBlitz3.ab2@3635>    SUBQ.l #2,a5
00036542 <AmiBlitz3.ab2@3638> RTS
0003654C <AmiBlitz3.ab2@3642>   MOVE.l #forthstack,forthsp
00036556 <AmiBlitz3.ab2@3643>   MOVE.l #precstack,precsp
00036558 <AmiBlitz3.ab2@3644> RTS
0003655A <AmiBlitz3.ab2@3651>   MOVEQ.l #$00,D4
00036584 <AmiBlitz3.ab2@3654>   !basic
000365C6 <AmiBlitz3.ab2@3655> 
000365D6 <AmiBlitz3.ab2@3657>   If (c_abort = 1)           ; check if set
000365D8 <AmiBlitz3.ab2@3658>     MOVEQ.l #-$01,d4
000365DE <AmiBlitz3.ab2@3659>     MOVE.w D4,stopit
000365FC <AmiBlitz3.ab2@3660>     !asm
00036600 <AmiBlitz3.ab2@3661>     BRA chkrealstop__skip
0003661E <AmiBlitz3.ab2@3663>   !asm
00036620 <AmiBlitz3.ab2@3664>   MOVEQ.l #$00,D6
00036622 <AmiBlitz3.ab2@3665>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00036624 <AmiBlitz3.ab2@3669> RTS
00036628 <AmiBlitz3.ab2@3673>   MOVE.w stopit(PC),D0
0003662C <AmiBlitz3.ab2@3674>   BEQ chkstop__chk
00036632 <AmiBlitz3.ab2@3675>   SUBQ.w #1,stopit
00036634 <AmiBlitz3.ab2@3679> RTS
0003663C <AmiBlitz3.ab2@3682>   MOVE.w #2000,stopit
00036640 <AmiBlitz3.ab2@3683>   BSR.w chkrealstop
00036644 <AmiBlitz3.ab2@3684>   BEQ.b chkstop__rts
00036648 <AmiBlitz3.ab2@3686>   BSR.w close_compilewin
0003664C <AmiBlitz3.ab2@3687>   BSR.w call_setpointernormal
00036652 <AmiBlitz3.ab2@3689>   MOVEA.l errstack,A7
00036658 <AmiBlitz3.ab2@3690>   MOVEA.l errcont,A0
00036660 <AmiBlitz3.ab2@3691>   MOVE.w #-1,anyerrs
00036662 <AmiBlitz3.ab2@3692> JMP (A0)
00036666 <AmiBlitz3.ab2@3695> d_pc:           Ds.l 1
0003666A <AmiBlitz3.ab2@3696> d_bigpc:        Ds.l 1
0003666C <AmiBlitz3.ab2@3697> d_nomemleft:    Ds.w 1
00036670 <AmiBlitz3.ab2@3698> cont_pc:        Ds.l 1
00036674 <AmiBlitz3.ab2@3699> cont_pc2:       Ds.l 1
00036678 <AmiBlitz3.ab2@3700> lastcontlink:   Ds.l 1
0003667C <AmiBlitz3.ab2@3704>   ORI.w #$4E40,D1
00036680 <AmiBlitz3.ab2@3705> BRA.w JUMP_writeword
00036686 <AmiBlitz3.ab2@3709>   TST.b debugmode
0003668A <AmiBlitz3.ab2@3710>   BEQ.w debugstuff__rts
00036690 <AmiBlitz3.ab2@3717>   TST.w dirmode                                            ;or while in direct mode...
00036694 <AmiBlitz3.ab2@3718>    BNE debugstuff__rts
0003669E <AmiBlitz3.ab2@3719>   MOVE.l destpointer,d_pc
000366A8 <AmiBlitz3.ab2@3720>   MOVE.l bigpc,d_bigpc
000366B2 <AmiBlitz3.ab2@3721>   MOVE.w dontwrite,d_nomemleft
000366B6 <AmiBlitz3.ab2@3722>   MOVEM.l D0-D1,-(A7)
000366B8 <AmiBlitz3.ab2@3723>   MOVEQ.l #$01,D1
000366BC <AmiBlitz3.ab2@3724>    BSR.w writetrap                                         ;write the adress to sourceline
000366C2 <AmiBlitz3.ab2@3728>    MOVE.l destpointer,D0
000366C8 <AmiBlitz3.ab2@3729>   MOVE.l cont_pc,D1
000366CE <AmiBlitz3.ab2@3730>   MOVE.l D0,cont_pc
000366D4 <AmiBlitz3.ab2@3731>   MOVE.l D1,cont_pc2
000366D8 <AmiBlitz3.ab2@3732>    BEQ.b debugstuff__skip
000366DE <AmiBlitz3.ab2@3733>   TST.w dontwrite
000366E2 <AmiBlitz3.ab2@3734>    BNE.b debugstuff__skip
000366E4 <AmiBlitz3.ab2@3735>   MOVEA.l D1,A4
000366E6 <AmiBlitz3.ab2@3736>   SUB.l A4,D0
000366EA <AmiBlitz3.ab2@3737>   MOVE.w D0,$6(A4)
000366F0 <AmiBlitz3.ab2@3738>   MOVE.l A4,lastcontlink
000366F6 <AmiBlitz3.ab2@3741>   TST.w ininclude
000366FC <AmiBlitz3.ab2@3743>   TST.w makeexec
00036700 <AmiBlitz3.ab2@3744>   BEQ 'l1
00036706 <AmiBlitz3.ab2@3745>   TST.w exdebug
0003670A <AmiBlitz3.ab2@3746>   BEQ 'noinc
0003670E <AmiBlitz3.ab2@3749>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00036714 <AmiBlitz3.ab2@3750>   MOVE.l data1,d1
0003671A <AmiBlitz3.ab2@3751>   TST.b firsttime
0003671E <AmiBlitz3.ab2@3752>   BNE 'nofirst
00036726 <AmiBlitz3.ab2@3753>   MOVE.b #1,firsttime
0003672C <AmiBlitz3.ab2@3754>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00036732 <AmiBlitz3.ab2@3755>   JSR writedatalong
00036738 <AmiBlitz3.ab2@3756>   MOVE.l #"AmiB",d1
0003673E <AmiBlitz3.ab2@3757>   JSR writedatalong
00036744 <AmiBlitz3.ab2@3758>   MOVE.l destbufferstart,d1
0003674A <AmiBlitz3.ab2@3759>   JSR writedatalong
00036750 <AmiBlitz3.ab2@3760>   TST.w dontwrite
00036754 <AmiBlitz3.ab2@3761>   BNE 'nohunk
0003675A <AmiBlitz3.ab2@3762>   MOVE.l data1,d1
0003675C <AmiBlitz3.ab2@3763>   SUBQ.l #4,d1
00036762 <AmiBlitz3.ab2@3764>   SUB.l destbufferstart,d1
00036764 <AmiBlitz3.ab2@3765>   MOVE.l d1,d2
0003676A <AmiBlitz3.ab2@3766>   JSR addhunkoffset
00036770 <AmiBlitz3.ab2@3769>   MOVE.l destpointer,d2
00036776 <AmiBlitz3.ab2@3770>   MOVE.l data1,d1
0003677C <AmiBlitz3.ab2@3773>   MOVE.l destpointer,d2
0003677E <AmiBlitz3.ab2@3774>   MOVE.l d1,d3
00036784 <AmiBlitz3.ab2@3775>   SUB.l destbufferstart,d1
0003678A <AmiBlitz3.ab2@3776>   OR.l #$80000000,d1
00036790 <AmiBlitz3.ab2@3777>   JSR writelong
00036796 <AmiBlitz3.ab2@3778>   TST.w inmacro
0003679A <AmiBlitz3.ab2@3779>   BEQ 'sc1
000367A0 <AmiBlitz3.ab2@3780>   MOVE.l myline,a0
000367A4 <AmiBlitz3.ab2@3782> BRA 'inc2
000367AA <AmiBlitz3.ab2@3784>  'sc1  TST.w ininclude
000367AE <AmiBlitz3.ab2@3785>   BEQ 'inc
000367B4 <AmiBlitz3.ab2@3786>   MOVE.l includesourceline,a0
000367B8 <AmiBlitz3.ab2@3787> BRA 'inc2
000367BE <AmiBlitz3.ab2@3790>   MOVE.l sourceline,a0
000367C2 <AmiBlitz3.ab2@3791>   LEA 9(a0),a0
000367C4 <AmiBlitz3.ab2@3794>   MOVE.l d1,d2
000367C6 <AmiBlitz3.ab2@3795>   MOVE.l A5,D1
000367C8 <AmiBlitz3.ab2@3796>   SUB.l a0,D1
000367CE <AmiBlitz3.ab2@3797>   ADD.l #9,d1
000367D2 <AmiBlitz3.ab2@3798>   BSR.w JUMP_writeword
000367D8 <AmiBlitz3.ab2@3799>   CMP.l #9,d1
000367DC <AmiBlitz3.ab2@3800>   BEQ 'pos1
000367E2 <AmiBlitz3.ab2@3801>   TST.w dontwrite
000367E6 <AmiBlitz3.ab2@3802>   BNE 'nopad
000367EC <AmiBlitz3.ab2@3803>   MOVE.l lastsourceline,d1
000367F0 <AmiBlitz3.ab2@3804>   MOVE.l d1,-6(a4)
000367F4 <AmiBlitz3.ab2@3805> BRA 'nopad
000367FA <AmiBlitz3.ab2@3808>   MOVE.l d2,lastsourceline
00036804 <AmiBlitz3.ab2@3809>    MOVE.l destpointer,lastdestpointer
00036806 <AmiBlitz3.ab2@3810>    MOVEQ #0,d1
0003680C <AmiBlitz3.ab2@3811>   MOVE.l data1,d2
00036812 <AmiBlitz3.ab2@3812>   SUB.l destbufferstart,d2
00036818 <AmiBlitz3.ab2@3813>   JSR writedatalong
0003681E <AmiBlitz3.ab2@3814>   TST.w dontwrite
00036822 <AmiBlitz3.ab2@3815>   BNE 'no2
00036828 <AmiBlitz3.ab2@3816>   JSR addhunkoffset
0003682E <AmiBlitz3.ab2@3819>   MOVE.l data1,d2
00036834 <AmiBlitz3.ab2@3820>   SUB.l destbufferstart,d2
0003683A <AmiBlitz3.ab2@3821>   JSR writedatalong
00036840 <AmiBlitz3.ab2@3822>   TST.w dontwrite
00036844 <AmiBlitz3.ab2@3823>   BNE 'no
0003684A <AmiBlitz3.ab2@3824>   JSR addhunkoffset
00036850 <AmiBlitz3.ab2@3825>   MOVE.l lastwritedat,a1
00036856 <AmiBlitz3.ab2@3826>   CMP.l #0,a1
0003685A <AmiBlitz3.ab2@3827>   BEQ 'no
0003685C <AmiBlitz3.ab2@3828>   MOVE.l d3,(a1)
00036864 <AmiBlitz3.ab2@3829>   MOVE.l prevwritedat,4(a1)
0003686E <AmiBlitz3.ab2@3830>   MOVE.l lastwritedat,prevwritedat
00036874 <AmiBlitz3.ab2@3833>   MOVE.l d3,lastwritedat
00036876 <AmiBlitz3.ab2@3834>   MOVEQ #4,d1
0003687A <AmiBlitz3.ab2@3835>   BSR pokedata1b
0003687C <AmiBlitz3.ab2@3838>   MOVE.b (a0)+,d1
00036880 <AmiBlitz3.ab2@3839>   BEQ 'done
00036884 <AmiBlitz3.ab2@3840>   BSR pokedata1b
00036888 <AmiBlitz3.ab2@3841> BRA 'loop
0003688A <AmiBlitz3.ab2@3844>   MOVEQ #0,d1
0003688E <AmiBlitz3.ab2@3845>   BSR pokedata1b
00036894 <AmiBlitz3.ab2@3846>   MOVE.l data1,d1
00036898 <AmiBlitz3.ab2@3847>   BTST #0,d1
0003689C <AmiBlitz3.ab2@3848>   BEQ 'nopad
0003689E <AmiBlitz3.ab2@3849>   MOVEQ #0,d1
000368A2 <AmiBlitz3.ab2@3850>   BSR pokedata1b
000368A6 <AmiBlitz3.ab2@3853>   MOVEM.l (a7)+,a0-a1/d2/d3
000368AA <AmiBlitz3.ab2@3854> BRA 'noinc2
000368B0 <AmiBlitz3.ab2@3857>   MOVE.l sourceline,D1
000368B6 <AmiBlitz3.ab2@3859>   JSR writelong
000368B8 <AmiBlitz3.ab2@3860>   MOVE.l A5,D1
000368BE <AmiBlitz3.ab2@3861>   SUB.l sourceline,D1
000368C4 <AmiBlitz3.ab2@3863>   JSR writeword
000368C6 <AmiBlitz3.ab2@3866>   MOVEQ.l #$00,D1
000368CC <AmiBlitz3.ab2@3867>   JSR writeword                                            ; was: BSR.w writeword
000368D0 <AmiBlitz3.ab2@3868>   MOVEM.l (A7)+,D0-D1
000368D2 <AmiBlitz3.ab2@3871> RTS
000368D8 <AmiBlitz3.ab2@3875>   TST.b debugmode                                          ;extern debug
000368DC <AmiBlitz3.ab2@3876>    BEQ.b undodebug__rts
000368E2 <AmiBlitz3.ab2@3877>   TST.b dirmode
000368E6 <AmiBlitz3.ab2@3878>   BNE undodebug__rts
000368F0 <AmiBlitz3.ab2@3883>   MOVE.w d_nomemleft,dontwrite
000368FA <AmiBlitz3.ab2@3884>   MOVE.l d_bigpc,bigpc
00036904 <AmiBlitz3.ab2@3885>   MOVE.l d_pc,destpointer
0003690E <AmiBlitz3.ab2@3886>   MOVE.l cont_pc2,cont_pc
00036910 <AmiBlitz3.ab2@3889> RTS
0003691A <AmiBlitz3.ab2@3893>   MOVE.l #forthstack,forthsp
00036924 <AmiBlitz3.ab2@3894>   MOVE.l #precstack,precsp
0003692A <AmiBlitz3.ab2@3895>   CLR.w regnum
00036930 <AmiBlitz3.ab2@3896>   CLR.w nonew
00036936 <AmiBlitz3.ab2@3897>   CLR.w sbasegot
00036940 <AmiBlitz3.ab2@3898>   MOVE.w varcodelen,oldvcodelen
00036946 <AmiBlitz3.ab2@3899>   CLR.w varcodelen
0003694E <AmiBlitz3.ab2@3900>   MOVE.w #-1,lasta6
00036950 <AmiBlitz3.ab2@3901> RTS
00036956 <AmiBlitz3.ab2@3905>   TST.w linemode
0003695A <AmiBlitz3.ab2@3906>   BMI.b smode__skip
0003695E <AmiBlitz3.ab2@3907>   BSR.w undodebug
00036964 <AmiBlitz3.ab2@3908>   MOVE.w linemode,D1
00036966 <AmiBlitz3.ab2@3909>   ADDQ.w #4,A7
00036968 <AmiBlitz3.ab2@3910>   LSL.w #2,D1
0003696E <AmiBlitz3.ab2@3911>   LEA modetable,A0
00036972 <AmiBlitz3.ab2@3912>   MOVEA.l $0(A0,D1.W),A0
00036976 <AmiBlitz3.ab2@3913>   BSR.w reget
00036978 <AmiBlitz3.ab2@3916> JMP (A0)                                                   ;jumptokenroutine
0003697A <AmiBlitz3.ab2@3919> RTS
00036982 <AmiBlitz3.ab2@3924>   MOVE.w #0,leaa0a0+2
00036988 <AmiBlitz3.ab2@3925>   CLR.b nowdeclare
0003698E <AmiBlitz3.ab2@3926>   CLR.b notypecheck
00036994 <AmiBlitz3.ab2@3927>   CLR.l lasttoken
0003699A <AmiBlitz3.ab2@3928>   CLR.b doimmediate
000369A0 <AmiBlitz3.ab2@3929>   CLR.w vartype
000369A6 <AmiBlitz3.ab2@3930>   CLR.w regnumfunc
000369AC <AmiBlitz3.ab2@3931>   CLR.b optistring
000369B2 <AmiBlitz3.ab2@3932>   CLR.b iniffcommand
000369B8 <AmiBlitz3.ab2@3933>   CLR.w instringon  ; new
000369BE <AmiBlitz3.ab2@3934>   CLR.b funccall
000369C4 <AmiBlitz3.ab2@3935>   CLR.l currentfunccall
000369CA <AmiBlitz3.ab2@3936>   CLR.l leftsidetype
000369D0 <AmiBlitz3.ab2@3937>   CLR.l rightsidetype
000369D6 <AmiBlitz3.ab2@3938>   CLR.b peekaddrsize
000369DC <AmiBlitz3.ab2@3939>   CLR.b blitzparloop
000369E2 <AmiBlitz3.ab2@3940>   CLR.b funcparloop
000369E8 <AmiBlitz3.ab2@3941>   TST.b debugmode
000369EC <AmiBlitz3.ab2@3942>    BEQ 'fpu
000369F6 <AmiBlitz3.ab2@3948>   MOVE.b fpu,iee
000369FA <AmiBlitz3.ab2@3949>   MOVE.w stopit(PC),D0
000369FE <AmiBlitz3.ab2@3950>   BNE chkstop_chkb
00036A02 <AmiBlitz3.ab2@3951>   BSR.w chkstop                                          ; message here
00036A08 <AmiBlitz3.ab2@3954>   SUBQ.w #1,stopit
00036A0C <AmiBlitz3.ab2@3957>   BSR.w findmacro                                          ;macro
00036A12 <AmiBlitz3.ab2@4011>   TST.b debugmode
00036A16 <AmiBlitz3.ab2@4012>    BEQ.s 'l10
00036A1C <AmiBlitz3.ab2@4013>   TST.b exdebug
00036A20 <AmiBlitz3.ab2@4014>   BEQ 'l10a
00036A22 <AmiBlitz3.ab2@4015>   MOVE.w (a5),d0
00036A26 <AmiBlitz3.ab2@4016>   CMP.w #$8025,d0
00036A2A <AmiBlitz3.ab2@4017>    BEQ 'l10
00036A2E <AmiBlitz3.ab2@4020>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00036A32 <AmiBlitz3.ab2@4024>   BSR.w get1bytemain                                       ;gettokenmain
00036A36 <AmiBlitz3.ab2@4025>    BEQ.w undodebug
00036A3A <AmiBlitz3.ab2@4026>   CMP.w #$002b,d0                                            ;check for + cast sign
00036A3E <AmiBlitz3.ab2@4027>     BNE 'lb2
00036A42 <AmiBlitz3.ab2@4028>     BSR.w get1bytemain
00036A4A <AmiBlitz3.ab2@4029>     MOVE.b #1,notypecheck
00036A54 <AmiBlitz3.ab2@4037>   MOVE.l #forthstack,forthsp
00036A5E <AmiBlitz3.ab2@4038>   MOVE.l #precstack,precsp
00036A64 <AmiBlitz3.ab2@4039>   CLR.w regnum
00036A6A <AmiBlitz3.ab2@4040>   CLR.w nonew
00036A70 <AmiBlitz3.ab2@4041>   CLR.w sbasegot
00036A7A <AmiBlitz3.ab2@4042>   MOVE.w varcodelen,oldvcodelen
00036A80 <AmiBlitz3.ab2@4044>   CLR.w varcodelen
00036A88 <AmiBlitz3.ab2@4045>   MOVE.w #$FFFF,lasta6
00036A8C <AmiBlitz3.ab2@4047>   BSR.w smode
00036A8E <AmiBlitz3.ab2@4048>   TST.w D0
00036A92 <AmiBlitz3.ab2@4049>   BMI.w get_tokencode
00036A96 <AmiBlitz3.ab2@4050>   CMP.w #$2E,D0
00036A9A <AmiBlitz3.ab2@4051>    BEQ.w JL_0_4644                                         ;shortlist
00036A9E <AmiBlitz3.ab2@4052>   CMP.w #"#",D0
00036AA2 <AmiBlitz3.ab2@4053>    BEQ.w JL_0_4718                                         ;constant found
00036AA6 <AmiBlitz3.ab2@4054>   CMP.w #$27,D0
00036AAA <AmiBlitz3.ab2@4055>    BEQ.w JL_0_4638                                         ;local label
00036AB0 <AmiBlitz3.ab2@4056>   MOVE.l A5,letstart
00036AB6 <AmiBlitz3.ab2@4057>   JSR getparameter
00036ABA <AmiBlitz3.ab2@4058>   BSR.w reget
00036ABE <AmiBlitz3.ab2@4059>    BEQ.w JL_0_4658                                         ;label found
00036AC2 <AmiBlitz3.ab2@4060>   CMP.w #$7B,D0
00036AC6 <AmiBlitz3.ab2@4061>    BEQ.w JL_0_475C
00036AC8 <AmiBlitz3.ab2@4062>   TST.w d0
00036ACC <AmiBlitz3.ab2@4063>    BPL 'll1
00036AD2 <AmiBlitz3.ab2@4064>   TST.b newsyntax
00036AD6 <AmiBlitz3.ab2@4065>    BEQ 'll1
00036ADC <AmiBlitz3.ab2@4066>   LEA allowtab,a0
00036ADE <AmiBlitz3.ab2@4067>   MOVEQ #0,d1
00036AE0 <AmiBlitz3.ab2@4068>   MOVE.b d0,d1
00036AE4 <AmiBlitz3.ab2@4069>   TST.b 0(a0,d1.w)
00036AE8 <AmiBlitz3.ab2@4070>    BNE 'll1
00036AEA <AmiBlitz3.ab2@4071>   SUBQ.l #2,a5
00036AF2 <AmiBlitz3.ab2@4072>   MOVE.w #":",lastchar                                     ;no doublepoint
00036AF6 <AmiBlitz3.ab2@4073> BRA JL_0_4658
00036AFE <AmiBlitz3.ab2@4076>   CMP.l #"equ ",-1(a5)
00036B02 <AmiBlitz3.ab2@4077>    BEQ 'll4
00036B0A <AmiBlitz3.ab2@4078>   CMP.l #"EQU ",-1(a5)
00036B0E <AmiBlitz3.ab2@4079>    BNE 'll2
00036B10 <AmiBlitz3.ab2@4082>   ADDQ.l #2,a5
00036B14 <AmiBlitz3.ab2@4083>   BSR.w findlabel2
00036B18 <AmiBlitz3.ab2@4084>   BEQ.w 'lf1
00036B1C <AmiBlitz3.ab2@4085>   BSR.w addlabelhash
00036B24 <AmiBlitz3.ab2@4086>   MOVE.l #$1,$4(A2)
00036B2C <AmiBlitz3.ab2@4089>   CMPI.l #$1,$4(A2)
00036B30 <AmiBlitz3.ab2@4090>    BNE.w illconerr
00036B34 <AmiBlitz3.ab2@4091>   BSR get1bytemain
00036B36 <AmiBlitz3.ab2@4092>   MOVE.l A2,-(A7)
00036B38 <AmiBlitz3.ab2@4103>   SUBQ.l #1,a5
00036B3A <AmiBlitz3.ab2@4106>   SUBQ.l #1,a5
00036B40 <AmiBlitz3.ab2@4107>   JSR AJL_0_BF6E
00036B42 <AmiBlitz3.ab2@4108>   MOVEA.l (A7)+,A2
00036B46 <AmiBlitz3.ab2@4109>   MOVE.l D3,$8(A2)
00036B48 <AmiBlitz3.ab2@4110>   RTS
00036B4C <AmiBlitz3.ab2@4111>   BSR get1bytemain
00036B54 <AmiBlitz3.ab2@4114>   CMP.l #"SET ",-1(a5)
00036B58 <AmiBlitz3.ab2@4115>   BNE 'll3
00036B5C <AmiBlitz3.ab2@4116> BRA 'll4
00036B62 <AmiBlitz3.ab2@4119> JMP AJL_0_DEA6
00036B66 <AmiBlitz3.ab2@4122>   CMP.w #-$7FDE,D0
00036B6A <AmiBlitz3.ab2@4123>   BEQ.w get_tokencode
00036B6E <AmiBlitz3.ab2@4124> BRA.w undodebug
00036B72 <AmiBlitz3.ab2@4127>   BSR.w undodebug
00036B76 <AmiBlitz3.ab2@4128>   BSR.w createlab
00036B7A <AmiBlitz3.ab2@4129> BRA.w JL_0_466E
00036B7E <AmiBlitz3.ab2@4132>   BSR.w get1bytemain
00036B82 <AmiBlitz3.ab2@4133>    BEQ.w JL_0_462C
00036B86 <AmiBlitz3.ab2@4134>   CMP.w #"'",D0
00036B8A <AmiBlitz3.ab2@4135>    BEQ.w JL_0_4638
00036B8E <AmiBlitz3.ab2@4136>    BSR.w makename2
00036B90 <AmiBlitz3.ab2@4137>    TST.w d0
00036B94 <AmiBlitz3.ab2@4138>    BPL 'll1
00036B96 <AmiBlitz3.ab2@4139>    SUBQ.l #2,a5
00036B9E <AmiBlitz3.ab2@4140>    MOVE.w #":",lastchar
00036BA2 <AmiBlitz3.ab2@4141> BRA JL_0_4658                                              ;????
00036BA6 <AmiBlitz3.ab2@4145>   BSR.w undodebug
00036BAC <AmiBlitz3.ab2@4146>   LEA ptr_parameterstore,A0
00036BB2 <AmiBlitz3.ab2@4147>   LEA lastgloballabel,A1
00036BB4 <AmiBlitz3.ab2@4150>   MOVE.b (A0)+,(A1)+
00036BB8 <AmiBlitz3.ab2@4151>    BNE.w JL_0_4668
00036BBC <AmiBlitz3.ab2@4154>   BSR.w findlabel2
00036BC0 <AmiBlitz3.ab2@4155>    BEQ.w JL_0_4698
00036BC4 <AmiBlitz3.ab2@4156>    BSR.w addlabelhash
00036BC8 <AmiBlitz3.ab2@4159>   CLR.l $4(A2)
00036BD0 <AmiBlitz3.ab2@4160>   MOVE.l destpointer,$8(A2)
00036BD8 <AmiBlitz3.ab2@4163>   MOVE.w procnum,$10(A2)
00036BDA <AmiBlitz3.ab2@4164> RTS
00036BDE <AmiBlitz3.ab2@4168>   MOVE.l $4(A2),D0
00036BE2 <AmiBlitz3.ab2@4169>   BTST #$0,D0
00036BE6 <AmiBlitz3.ab2@4170>    BNE.w illlaberr
00036BEC <AmiBlitz3.ab2@4171>   TST.w pass
00036BF0 <AmiBlitz3.ab2@4173>   MOVE.l $8(A2),D0
00036BF4 <AmiBlitz3.ab2@4174>    BNE.w duplaberr
00036BFC <AmiBlitz3.ab2@4175>   MOVE.w procnum,$10(A2)
00036C00 <AmiBlitz3.ab2@4176>   MOVEA.l $4(A2),A3
00036C06 <AmiBlitz3.ab2@4177>   MOVEA.l _execbase,A6
00036C0A <AmiBlitz3.ab2@4180>   CMPA.w #$0,A3
00036C0E <AmiBlitz3.ab2@4181>    BEQ.w JL_0_467A
00036C12 <AmiBlitz3.ab2@4182>     MOVE.l $4(A2),D1
00036C16 <AmiBlitz3.ab2@4183>     BTST #$0,D1
00036C1A <AmiBlitz3.ab2@4184>     BNE.w illlaberr
00036C1E <AmiBlitz3.ab2@4185>   MOVE.w $8(A3),D1
00036C22 <AmiBlitz3.ab2@4186>   CMP.w $10(A2),D1
00036C26 <AmiBlitz3.ab2@4187>    BEQ.w JL_0_46DC
00036C2C <AmiBlitz3.ab2@4188>    TST.b newsyntax
00036C30 <AmiBlitz3.ab2@4189>    BEQ 'l1
00036C34 <AmiBlitz3.ab2@4190> BRA.w JL_0_46DC                                            ;label context out of range fix
00036C3C <AmiBlitz3.ab2@4195>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00036C40 <AmiBlitz3.ab2@4196> BRA.w referr
00036C46 <AmiBlitz3.ab2@4199>   MOVE.w dontwrite,D1
00036C4A <AmiBlitz3.ab2@4200>    BNE.w JL_0_4706
00036C4E <AmiBlitz3.ab2@4201>   MOVEA.l $4(A3),A1
00036C54 <AmiBlitz3.ab2@4202>   BTST #$0,$7(A3)
00036C58 <AmiBlitz3.ab2@4203>    BEQ.w JL_0_4700
00036C5A <AmiBlitz3.ab2@4204>   SUBQ.w #1,A1
00036C60 <AmiBlitz3.ab2@4205>   MOVE.l data2,(A1)
00036C64 <AmiBlitz3.ab2@4206> BRA.w JL_0_4706
00036C6A <AmiBlitz3.ab2@4209>   MOVE.l destpointer,(A1)
00036C6C <AmiBlitz3.ab2@4212>   MOVEA.l A3,A1
00036C6E <AmiBlitz3.ab2@4213>   MOVEA.l (A3),A3
00036C72 <AmiBlitz3.ab2@4214>   MOVE.l A3,$4(A2)
00036C74 <AmiBlitz3.ab2@4215>   MOVEQ.l #$0C+2,D0
00036C7A <AmiBlitz3.ab2@4216>   MOVE.l mempool,a0
00036C80 <AmiBlitz3.ab2@4217>   MOVEA.l _execbase,A6
00036C84 <AmiBlitz3.ab2@4218>   JSR _FreePooled(A6)
00036C88 <AmiBlitz3.ab2@4219> BRA.w JL_0_46BC
00036C92 <AmiBlitz3.ab2@4224>    MOVE.l #forthstack,forthsp
00036C9C <AmiBlitz3.ab2@4225>   MOVE.l #precstack,precsp
00036CA0 <AmiBlitz3.ab2@4226>    BSR.w getparameter2
00036CA4 <AmiBlitz3.ab2@4229>   BSR.w findlabel2
00036CA8 <AmiBlitz3.ab2@4230>    BEQ.w JL_0_4738
00036CAC <AmiBlitz3.ab2@4231>    BSR.w addlabelhash
00036CB4 <AmiBlitz3.ab2@4232>   MOVE.l #$1,$4(A2)
00036CB8 <AmiBlitz3.ab2@4233> BRA.w JL_0_4744
00036CC0 <AmiBlitz3.ab2@4236>   CMPI.l #$1,$4(A2)
00036CC4 <AmiBlitz3.ab2@4237>    BNE.w illconerr
00036CC8 <AmiBlitz3.ab2@4246>   CMP.w #$3D,D0
00036CCC <AmiBlitz3.ab2@4247>   BEQ.w JL_0_474E
00036CCE <AmiBlitz3.ab2@4248> RTS
00036CD0 <AmiBlitz3.ab2@4252>   MOVE.l A2,-(A7)
00036CD6 <AmiBlitz3.ab2@4253>   JSR AJL_0_BF6E
00036CD8 <AmiBlitz3.ab2@4254>   MOVEA.l (A7)+,A2
00036CDC <AmiBlitz3.ab2@4255>   MOVE.l D3,$8(A2)                                         ;store constant
00036CE4 <AmiBlitz3.ab2@4256>   CMP.w #$0a,lastchar
00036CE8 <AmiBlitz3.ab2@4257>   BNE 'l1
00036CF0 <AmiBlitz3.ab2@4258>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00036CF2 <AmiBlitz3.ab2@4261> RTS
00036CF6 <AmiBlitz3.ab2@4264>   BSR.w findproc                                           ;write statement call
00036CFA <AmiBlitz3.ab2@4265>   BEQ _state
00036D00 <AmiBlitz3.ab2@4266>   TST.l unusedfunc
00036D04 <AmiBlitz3.ab2@4267>   BEQ noprocerr
00036D0A <AmiBlitz3.ab2@4269>   JSR gotoendsource
00036D0E <AmiBlitz3.ab2@4272>   TST.b $5(A2)
00036D14 <AmiBlitz3.ab2@4274>   MOVE.l a2,currentfunccall
00036D1C <AmiBlitz3.ab2@4275>   MOVE.b #1,funccall
00036D22 <AmiBlitz3.ab2@4276>   MOVE.b #1,isfunc(a2)
00036D26 <AmiBlitz3.ab2@4277>   MOVE.l $E(A2),-(A7)
00036D28 <AmiBlitz3.ab2@4278>   MOVEQ.l #$00,D0
00036D2C <AmiBlitz3.ab2@4279>   MOVE.b $4(A2),D0
00036D32 <AmiBlitz3.ab2@4280>   MOVE.l d0,parnumtemp
00036D36 <AmiBlitz3.ab2@4281>   BEQ.w JL_0_4786
00036D3A <AmiBlitz3.ab2@4282>   TST.b $20(a2)                                            ;increase if morepar
00036D3E <AmiBlitz3.ab2@4283>   BNE 'no0par
00036D40 <AmiBlitz3.ab2@4284>   MOVE.l a5,a4
00036D44 <AmiBlitz3.ab2@4287>   CMP.b #$20,(a4)+
00036D48 <AmiBlitz3.ab2@4288>   BEQ 'l1
00036D4E <AmiBlitz3.ab2@4289>   CMP.b #"}",-1(a4)
00036D52 <AmiBlitz3.ab2@4290>   BNE  'no0par                                             ;statementcall pars
00036D54 <AmiBlitz3.ab2@4291>   MOVEQ #0,d0
00036D58 <AmiBlitz3.ab2@4294>   LEA $16(A2),A1
00036D5A <AmiBlitz3.ab2@4297>   MOVE.l d1,-(a7)
00036D5C <AmiBlitz3.ab2@4298>   MOVE.b (a1),d2
00036D5E <AmiBlitz3.ab2@4299>   MOVE.l d0,d1
00036D62 <AmiBlitz3.ab2@4300>   CMP.w #4,d2
00036D66 <AmiBlitz3.ab2@4301>   BNE 'l1b
00036D6C <AmiBlitz3.ab2@4302>   ADD.l #$203c,d1
00036D72 <AmiBlitz3.ab2@4304>   JSR writeword
00036D78 <AmiBlitz3.ab2@4305>   MOVE.l #$ffff0000,d1
00036D7E <AmiBlitz3.ab2@4307>   JSR writelong
00036D82 <AmiBlitz3.ab2@4308> BRA 'l2b
00036D88 <AmiBlitz3.ab2@4311>   TST.b fpu
00036D8C <AmiBlitz3.ab2@4312>   BNE 'l1c
00036D90 <AmiBlitz3.ab2@4313>   CMP.w #5,d2
00036D94 <AmiBlitz3.ab2@4314>   BNE 'l1c
00036D9A <AmiBlitz3.ab2@4315>   ADD.l #$203c,d1
00036DA0 <AmiBlitz3.ab2@4317>   JSR writeword
00036DA6 <AmiBlitz3.ab2@4318>   MOVE.l #$800000c1,d1
00036DAC <AmiBlitz3.ab2@4320>   JSR writelong
00036DB0 <AmiBlitz3.ab2@4321> BRA 'l2b
00036DB6 <AmiBlitz3.ab2@4324>   ADD.l #$70ff,d1
00036DBC <AmiBlitz3.ab2@4326>   JSR writeword
00036DC2 <AmiBlitz3.ab2@4327>   MOVE.l #$f23c5000,d1
00036DC4 <AmiBlitz3.ab2@4328>   MOVE.l d0,d2
00036DC6 <AmiBlitz3.ab2@4329>   ASR.l #2,d2
00036DC8 <AmiBlitz3.ab2@4330>   ADD.l d2,d1
00036DCE <AmiBlitz3.ab2@4332>   JSR writelong
00036DD2 <AmiBlitz3.ab2@4333>   MOVE.w #$ffff,d1
00036DD8 <AmiBlitz3.ab2@4335>   JSR writeword
00036DDA <AmiBlitz3.ab2@4338>   MOVE.l (a7)+,d1
00036DDC <AmiBlitz3.ab2@4339>   ADDQ.l #1,a1
00036DE2 <AmiBlitz3.ab2@4340>   ADD.l #$0200,d0
00036DE8 <AmiBlitz3.ab2@4341>   CMP.l #$0e00,d0
00036DEC <AmiBlitz3.ab2@4342>    BEQ syntaxerr
00036DEE <AmiBlitz3.ab2@4343>   TST.b (a1)
00036DF2 <AmiBlitz3.ab2@4344>    BNE 'again
00036DF6 <AmiBlitz3.ab2@4345> BRA JL_0_4786
00036E00 <AmiBlitz3.ab2@4348>   MOVE.w a2offset,a2offset2
00036E04 <AmiBlitz3.ab2@4349>   LEA $16(A2),A2
00036E0A <AmiBlitz3.ab2@4350>   MOVE.b funcparloop,-(a7)
00036E12 <AmiBlitz3.ab2@4351>   MOVE.b #1,funcparloop
00036E18 <AmiBlitz3.ab2@4352>   MOVE.b blitzparloop,-(a7)
00036E1E <AmiBlitz3.ab2@4353>   CLR.b blitzparloop
00036E22 <AmiBlitz3.ab2@4354>   BSR.w fetchpees2
00036E28 <AmiBlitz3.ab2@4355>   MOVE.b (a7)+,blitzparloop
00036E2E <AmiBlitz3.ab2@4356>   MOVE.b (a7)+,funcparloop
00036E32 <AmiBlitz3.ab2@4357> BRA.w JL_0_478A
00036E36 <AmiBlitz3.ab2@4360>   BSR.w get1bytemain
00036E3A <AmiBlitz3.ab2@4363>   CMP.w #$7D,D0
00036E3E <AmiBlitz3.ab2@4364>    BNE.w morepar_                                          ;syntax error morepar
00036E44 <AmiBlitz3.ab2@4365>    JSR chkstak
00036E46 <AmiBlitz3.ab2@4366>   MOVE.l (A7)+,D1
00036E4C <AmiBlitz3.ab2@4382>    JSR JL_0_AFCA
00036E52 <AmiBlitz3.ab2@4404>   CLR.b funccall
00036E56 <AmiBlitz3.ab2@4405> BRA.w get1bytemain
00036E5C <AmiBlitz3.ab2@4409>   MOVE.l d0,lasttoken
00036E60 <AmiBlitz3.ab2@4410>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00036E64 <AmiBlitz3.ab2@4411>   BNE 'l2
00036E68 <AmiBlitz3.ab2@4412>    MOVE.w #$dd05,d0
00036E6C <AmiBlitz3.ab2@4415>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00036E70 <AmiBlitz3.ab2@4416>   BNE 'l3
00036E74 <AmiBlitz3.ab2@4417>    MOVE.w #$dd06,d0
00036E78 <AmiBlitz3.ab2@4420>   CMP.w #-$7FC4,D0
00036E7C <AmiBlitz3.ab2@4421>   BCS.w JL_0_47C4
00036E80 <AmiBlitz3.ab2@4422>     CMP.w #-$7F4D,D0
00036E84 <AmiBlitz3.ab2@4423>     BCC.w JL_0_47C4
00036E8C <AmiBlitz3.ab2@4424>       BTST #$7,assemblercheck                              ;inline Assembler checking
00036E90 <AmiBlitz3.ab2@4425>       BNE.b JL_0_47C0
00036E96 <AmiBlitz3.ab2@4426>         TST.b debugmode
00036E9A <AmiBlitz3.ab2@4427>         BEQ.b 'l10
00036EA4 <AmiBlitz3.ab2@4432>           MOVE.w d_nomemleft,dontwrite
00036EAE <AmiBlitz3.ab2@4433>           MOVE.l d_bigpc,bigpc
00036EB8 <AmiBlitz3.ab2@4434>           MOVE.l d_pc,destpointer
00036EC2 <AmiBlitz3.ab2@4435>           MOVE.l cont_pc2,cont_pc
00036EC6 <AmiBlitz3.ab2@4441> BRA.w JL_0_612C
00036ECA <AmiBlitz3.ab2@4444>   BCLR #$F,D0
00036ECC <AmiBlitz3.ab2@4445>   MOVE.w D0,D1
00036ED0 <AmiBlitz3.ab2@4446>   ANDI.w #$7F00,D1
00036ED4 <AmiBlitz3.ab2@4447>   BNE.w JL_0_4856
00036ED8 <AmiBlitz3.ab2@4448>     CMP.w #$B3,D0                                          ;intern Instructions
00036EDC <AmiBlitz3.ab2@4449>     BCS.w JL_0_47F2
00036EE0 <AmiBlitz3.ab2@4450>       SUBI.w #$77,D0
00036EE4 <AmiBlitz3.ab2@4451>       CMP.w #$4B,D0
00036EE8 <AmiBlitz3.ab2@4452>       BEQ.w JL_0_4830
00036EEC <AmiBlitz3.ab2@4453>         CMP.w #$46,D0
00036EF0 <AmiBlitz3.ab2@4454>         BEQ.w JL_0_4830
00036EF4 <AmiBlitz3.ab2@4455> BRA.w JL_0_4834                                            ; change tokennum
00036EF8 <AmiBlitz3.ab2@4458>     CMP.w #$38,D0
00036EFC <AmiBlitz3.ab2@4459>      BEQ.w JL_0_4830
00036F00 <AmiBlitz3.ab2@4460>     CMP.w #$39,D0
00036F04 <AmiBlitz3.ab2@4461>      BEQ.w JL_0_4830
00036F08 <AmiBlitz3.ab2@4462>     CMP.w #$D,D0
00036F0C <AmiBlitz3.ab2@4463>      BEQ.w JL_0_4830
00036F10 <AmiBlitz3.ab2@4464>     CMP.w #$12,D0
00036F14 <AmiBlitz3.ab2@4465>      BEQ.w JL_0_4830
00036F18 <AmiBlitz3.ab2@4466>     CMP.w #$13,D0
00036F1C <AmiBlitz3.ab2@4467>      BEQ.w JL_0_4830
00036F20 <AmiBlitz3.ab2@4468>     CMP.w #$1A,D0
00036F24 <AmiBlitz3.ab2@4469>      BEQ.w JL_0_4830
00036F28 <AmiBlitz3.ab2@4470>     CMP.w #$2A,D0
00036F2C <AmiBlitz3.ab2@4471>      BHI.w JL_0_4834
00036F30 <AmiBlitz3.ab2@4472>     CMP.w #$23,D0
00036F34 <AmiBlitz3.ab2@4473>      BCS.b JL_0_4834
00036F38 <AmiBlitz3.ab2@4476>   BSR.w undodebug
00036F3A <AmiBlitz3.ab2@4479>   SUBQ.w #1,D0
00036F3C <AmiBlitz3.ab2@4480>   LSL.w #2,D0
00036F42 <AmiBlitz3.ab2@4487>   LEA instructionbase,A0
00036F46 <AmiBlitz3.ab2@4488>   MOVEA.l $0(A0,D0.W),A0
00036F48 <AmiBlitz3.ab2@4489>   MOVE.l A0,-(A7)
00036F4C <AmiBlitz3.ab2@4490> BRA.w get1bytemain
00036F4E <AmiBlitz3.ab2@4496>   MOVE.w D0,D1
00036F52 <AmiBlitz3.ab2@4497>    BSR.w searchinstr
00036F58 <AmiBlitz3.ab2@4498>    TST.b newmode
00036F5C <AmiBlitz3.ab2@4499>    BNE compile_term
00036F62 <AmiBlitz3.ab2@4500>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00036F66 <AmiBlitz3.ab2@4501>    BNE.w stamigalib
00036F6C <AmiBlitz3.ab2@4502>   BTST #$0,$1(A3)
00036F70 <AmiBlitz3.ab2@4503>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00036F74 <AmiBlitz3.ab2@4504>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00036F78 <AmiBlitz3.ab2@4505>    BSR.w JL_0_66F6
00036F7E <AmiBlitz3.ab2@4511>   MOVE.w numreps,-(A7)
00036F84 <AmiBlitz3.ab2@4512>   MOVE.w userp,-(A7)
00036F8A <AmiBlitz3.ab2@4513>   MOVE.w a2offset,-(A7)
00036F8C <AmiBlitz3.ab2@4514>   MOVE.l A2,-(A7)                                          ;recurs.
00036F96 <AmiBlitz3.ab2@4515>   MOVE.w convsize,userp
00036F9A <AmiBlitz3.ab2@4516>   LEA $6(A3),A1
00036F9C <AmiBlitz3.ab2@4520>    MOVE.w (A1),D2
00036FA0 <AmiBlitz3.ab2@4521>    BMI.w SERR                                              ;statement syntax error
00036FA4 <AmiBlitz3.ab2@4522>   ANDI.w #$FF,D2
00036FA6 <AmiBlitz3.ab2@4523>   CMP.w D2,D1
00036FAA <AmiBlitz3.ab2@4524>    BEQ.w JL_0_48E0
00036FAE <AmiBlitz3.ab2@4525>    BCS.w JL_0_48CC
00036FB0 <AmiBlitz3.ab2@4526>   MOVE.b (A1),D3
00036FB4 <AmiBlitz3.ab2@4527>   ANDI.w #$7,D3
00036FB8 <AmiBlitz3.ab2@4528>    BEQ.w JL_0_48CC
00036FBA <AmiBlitz3.ab2@4529>   MOVE.w D2,D4
00036FBC <AmiBlitz3.ab2@4530>   SUB.w D3,D4
00036FBE <AmiBlitz3.ab2@4531>   MOVEQ.l #$00,D5
00036FC0 <AmiBlitz3.ab2@4532>   MOVE.w D1,D5
00036FC2 <AmiBlitz3.ab2@4533>   SUB.w D4,D5
00036FC4 <AmiBlitz3.ab2@4534>   DIVU D3,D5
00036FC6 <AmiBlitz3.ab2@4535>   SWAP D5
00036FC8 <AmiBlitz3.ab2@4536>   TST.w D5
00036FCC <AmiBlitz3.ab2@4537>    BEQ.w JL_0_48E0
00036FCE <AmiBlitz3.ab2@4540>   ADDQ.w #2,A1
00036FD0 <AmiBlitz3.ab2@4541>   ADDA.w D2,A1
00036FD4 <AmiBlitz3.ab2@4542>    BSR.w aligna1
00036FD8 <AmiBlitz3.ab2@4543>    BSR.w skiplibreg
00036FDC <AmiBlitz3.ab2@4544>   LEA $C(A1),A1
00036FE0 <AmiBlitz3.ab2@4545> BRA.w JL_0_489A
00036FE2 <AmiBlitz3.ab2@4548>   MOVE.w (a3),d2
00036FE6 <AmiBlitz3.ab2@4549>   BTST #1,d2
00036FEA <AmiBlitz3.ab2@4550>   BEQ statement_
00036FEE <AmiBlitz3.ab2@4551>   CMP.w #1,d1
00036FF2 <AmiBlitz3.ab2@4552>   BEQ statement_
00036FF6 <AmiBlitz3.ab2@4555>   CMP.b #$20,(a5)+
00036FFA <AmiBlitz3.ab2@4556>   BEQ 'l2
00037000 <AmiBlitz3.ab2@4557>   CMP.b #"(",-2(a5)
00037004 <AmiBlitz3.ab2@4558>   BNE 'l1
00037008 <AmiBlitz3.ab2@4559> BRA parameter_
0003700C <AmiBlitz3.ab2@4562> BRA inbrackets_
0003700E <AmiBlitz3.ab2@4565>   MOVE.b (A1),D2
00037010 <AmiBlitz3.ab2@4566>   LSL.w #8,D2
00037012 <AmiBlitz3.ab2@4567>   OR.w D2,D1
00037014 <AmiBlitz3.ab2@4568>   MOVE.l A1,-(A7)
0003701A <AmiBlitz3.ab2@4569>   CLR.w a2offset
0003701C <AmiBlitz3.ab2@4570>   TST.w D1
00037020 <AmiBlitz3.ab2@4571>    BEQ.w JL_0_4900
00037024 <AmiBlitz3.ab2@4572>   LEA $2(A1),A2
0003702A <AmiBlitz3.ab2@4574>   MOVE.l lasttoken,-(a7)
00037030 <AmiBlitz3.ab2@4575>   CLR.l lasttoken
00037034 <AmiBlitz3.ab2@4576>   BSR.w fetchlibps
0003703A <AmiBlitz3.ab2@4577>   MOVE.l (a7)+,lasttoken
0003703E <AmiBlitz3.ab2@4578> BRA.w JL_0_4904
00037042 <AmiBlitz3.ab2@4581>   BSR.w get1bytemain
00037044 <AmiBlitz3.ab2@4584>   MOVEA.l (A7)+,A1
00037046 <AmiBlitz3.ab2@4585>   MOVEA.l (A7)+,A2
0003704C <AmiBlitz3.ab2@4586>   MOVE.w a2offset,D1
00037050 <AmiBlitz3.ab2@4587>    BEQ.w JL_0_493A
00037056 <AmiBlitz3.ab2@4588>   MOVE.w D1,preplibst+2
0003705C <AmiBlitz3.ab2@4589>   MOVE.l preplibst,D1
00037062 <AmiBlitz3.ab2@4590>    JSR writelong                                           ;write array offset stack correct
0003706C <AmiBlitz3.ab2@4591>   MOVE.w numreps,movenumrep+2
00037070 <AmiBlitz3.ab2@4592>    BEQ.w JL_0_493A
00037076 <AmiBlitz3.ab2@4593>   MOVE.l movenumrep,D1
0003707C <AmiBlitz3.ab2@4594>    JSR writelong
00037082 <AmiBlitz3.ab2@4598>   JSR userjsr
00037088 <AmiBlitz3.ab2@4601>   MOVE.w a2offset,D1
0003708C <AmiBlitz3.ab2@4602>    BEQ.w JL_0_4974
00037090 <AmiBlitz3.ab2@4603>   CMP.w #$8,D1
00037094 <AmiBlitz3.ab2@4604>    BHI.w JL_0_4964
00037098 <AmiBlitz3.ab2@4605>   ANDI.w #$7,D1
0003709A <AmiBlitz3.ab2@4606>   LSL.w #8,D1
0003709C <AmiBlitz3.ab2@4607>   LSL.w #1,D1
000370A0 <AmiBlitz3.ab2@4608>   ORI.w #$504F,D1
000370A6 <AmiBlitz3.ab2@4610>   JSR writeword
000370AA <AmiBlitz3.ab2@4611> BRA.w JL_0_4974
000370B0 <AmiBlitz3.ab2@4614>   MOVE.w D1,fixlibst+2
000370B6 <AmiBlitz3.ab2@4615>   MOVE.l fixlibst,D1
000370BC <AmiBlitz3.ab2@4616>   JSR writelong
000370C2 <AmiBlitz3.ab2@4619>   MOVE.w (A7)+,a2offset
000370C8 <AmiBlitz3.ab2@4620>   MOVE.w (A7)+,userp
000370CE <AmiBlitz3.ab2@4621>   MOVE.w (A7)+,numreps
000370D2 <AmiBlitz3.ab2@4622> BRA.w reget
000370D6 <AmiBlitz3.ab2@4626>   MOVEM.l A2-A3,-(A7)
000370DC <AmiBlitz3.ab2@4627>   CLR.b doublepeek
000370E2 <AmiBlitz3.ab2@4628>   MOVE.l A5,lastsourcepos
000370E6 <AmiBlitz3.ab2@4629>    BSR.w getchar
000370EA <AmiBlitz3.ab2@4630>   CMP.w #$2E,D0
000370EE <AmiBlitz3.ab2@4631>    BEQ.w JL_0_49B4
000370F4 <AmiBlitz3.ab2@4632>   MOVEA.l defaulttype,A2
000370F8 <AmiBlitz3.ab2@4633>   CMP.w #$24,D0
000370FC <AmiBlitz3.ab2@4634>    BNE.w JL_0_49CA
000370FE <AmiBlitz3.ab2@4635>   MOVEQ.l #$07,D1
00037102 <AmiBlitz3.ab2@4636> BRA.w JL_0_49DE
00037106 <AmiBlitz3.ab2@4639>   BSR.w getparameter2
0003710A <AmiBlitz3.ab2@4640>   BEQ.w syntaxerr
00037110 <AmiBlitz3.ab2@4641>   LEA newtypebase,A2
00037114 <AmiBlitz3.ab2@4642>   BSR.w findtype
00037118 <AmiBlitz3.ab2@4643>   BNE.w notypeerr
00037122 <AmiBlitz3.ab2@4647>   MOVE.w oldqflag,instringon
00037128 <AmiBlitz3.ab2@4648>   MOVEA.l lastsourcepos,A5
0003712C <AmiBlitz3.ab2@4653>   MOVE.w $6(A2),D1
00037132 <AmiBlitz3.ab2@4654>   CMP.w #8,8(a2)
00037136 <AmiBlitz3.ab2@4655>   BNE 'l1
0003713E <AmiBlitz3.ab2@4656>   MOVE.b #1,doublepeek
00037144 <AmiBlitz3.ab2@4660>   MOVE.w D1,convsize
00037148 <AmiBlitz3.ab2@4661>   MOVEM.l (A7)+,A2-A3
0003714A <AmiBlitz3.ab2@4662> RTS
00037150 <AmiBlitz3.ab2@4667>   BTST #$3,$1(A3)
00037154 <AmiBlitz3.ab2@4668>   BEQ.w JL_0_4A06
00037158 <AmiBlitz3.ab2@4669>   BSR.w AJL_0_498A                                         ;read peek/poke size
0003715C <AmiBlitz3.ab2@4671>   ORI.w #$7000,D1
00037162 <AmiBlitz3.ab2@4672>   JSR writeword
00037168 <AmiBlitz3.ab2@4673>   ADDQ.w #1,regnum
0003716A <AmiBlitz3.ab2@4676> RTS
0003716C <AmiBlitz3.ab2@4682>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0003716E <AmiBlitz3.ab2@4683>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00037170 <AmiBlitz3.ab2@4684>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00037172 <AmiBlitz3.ab2@4688> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00037174 <AmiBlitz3.ab2@4689>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00037176 <AmiBlitz3.ab2@4690>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00037178 <AmiBlitz3.ab2@4694> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
0003717A <AmiBlitz3.ab2@4695>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
0003717C <AmiBlitz3.ab2@4696>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0003717E <AmiBlitz3.ab2@4700> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00037180 <AmiBlitz3.ab2@4703> srctype:    Ds.w 1
00037184 <AmiBlitz3.ab2@4708>   BSR.w excget
00037188 <AmiBlitz3.ab2@4709>   CMP.w #$2C,D0
0003718C <AmiBlitz3.ab2@4710>    BNE.w syntaxerr
00037192 <AmiBlitz3.ab2@4711>   MOVE.b D2,srctype
00037198 <AmiBlitz3.ab2@4712>   MOVE.w pusha2,D1
0003719E <AmiBlitz3.ab2@4713>   JSR writeword
000371A2 <AmiBlitz3.ab2@4714>   BSR.w get1bytemain
000371A6 <AmiBlitz3.ab2@4715>   BSR.w excget
000371AC <AmiBlitz3.ab2@4716>   CMP.b srctype,D2
000371B0 <AmiBlitz3.ab2@4717>    BNE.w excerr2
000371B6 <AmiBlitz3.ab2@4718>   MOVE.w pulla1,D1
000371BC <AmiBlitz3.ab2@4719>    JSR writeword
000371C0 <AmiBlitz3.ab2@4720>   CMP.b #$2,D2
000371C4 <AmiBlitz3.ab2@4721>    BCS.w JL_0_4B2A
000371C8 <AmiBlitz3.ab2@4722>    BEQ.w JL_0_4B1E
000371CC <AmiBlitz3.ab2@4723>   LEA swapl(PC),A0
000371D0 <AmiBlitz3.ab2@4724>   LEA swaplf(PC),A1
000371D6 <AmiBlitz3.ab2@4725> JMP pokecode
000371DA <AmiBlitz3.ab2@4728>   LEA swapw(PC),A0
000371DE <AmiBlitz3.ab2@4729>   LEA swapwf(PC),A1
000371E4 <AmiBlitz3.ab2@4730> JMP pokecode
000371E8 <AmiBlitz3.ab2@4733>   LEA swapb(PC),A0
000371EC <AmiBlitz3.ab2@4734>   LEA swapbf(PC),A1
000371F2 <AmiBlitz3.ab2@4735> JMP pokecode
000371F8 <AmiBlitz3.ab2@4739>   JSR getparameter
000371FC <AmiBlitz3.ab2@4740>   BSR.w JL_0_8E3C
00037200 <AmiBlitz3.ab2@4741>   BSR.w calcvar
00037204 <AmiBlitz3.ab2@4742>   BTST #$E,D2
00037208 <AmiBlitz3.ab2@4743>    BEQ.w JL_0_4B4E
0003720C <AmiBlitz3.ab2@4744>   MOVE.b #$4,D2
0003720E <AmiBlitz3.ab2@4747>   TST.b D2
00037212 <AmiBlitz3.ab2@4748>    BEQ.w excerr
00037216 <AmiBlitz3.ab2@4749>   BTST #$F,D2
0003721A <AmiBlitz3.ab2@4750>    BNE.w JL_0_4B6A
00037220 <AmiBlitz3.ab2@4751>   MOVE.w leaamp,D1
00037226 <AmiBlitz3.ab2@4752>    JSR pokewda5s
00037228 <AmiBlitz3.ab2@4753>   MOVE.w D3,D1
0003722E <AmiBlitz3.ab2@4754> JMP writeword
00037230 <AmiBlitz3.ab2@4757> RTS
00037236 <AmiBlitz3.ab2@4763>   MOVE.l mempool,a0
0003723C <AmiBlitz3.ab2@4764>   MOVEA.l _execbase,A6
00037240 <AmiBlitz3.ab2@4765> JMP _AllocPooled(a6)
00037244 <AmiBlitz3.ab2@4772>   MOVE.w #$BF00,D1
0003724A <AmiBlitz3.ab2@4773> JMP Atokejsr
0003724E <AmiBlitz3.ab2@4777>   CMP.w #-$7FFA,D0
00037252 <AmiBlitz3.ab2@4778>    BEQ.w popreturn
00037256 <AmiBlitz3.ab2@4779>   CMP.w #-$7FEA,D0
0003725A <AmiBlitz3.ab2@4780>    BEQ.w popnext2
0003725E <AmiBlitz3.ab2@4781>   CMP.w #-$7FF2,D0
00037262 <AmiBlitz3.ab2@4782>    BEQ.w popselect2
00037266 <AmiBlitz3.ab2@4783>   CMP.w #-$7FF5,D0
0003726A <AmiBlitz3.ab2@4784>    BEQ.w get1bytemain
0003726E <AmiBlitz3.ab2@4785>   CMP.w #-$7FF4,D0
00037272 <AmiBlitz3.ab2@4786>    BEQ.w get1bytemain
00037276 <AmiBlitz3.ab2@4787>   CMP.w #-$7FEC,D0
0003727A <AmiBlitz3.ab2@4788>    BEQ.w get1bytemain
0003727E <AmiBlitz3.ab2@4789>   CMP.w #-$7F45,D0
00037282 <AmiBlitz3.ab2@4790>    BEQ.w get1bytemain
00037286 <AmiBlitz3.ab2@4791> BRA.w syntaxerr
0003728C <AmiBlitz3.ab2@4794>   TST.b debugmode
00037290 <AmiBlitz3.ab2@4795>    BEQ.w popreturn__norerr
00037294 <AmiBlitz3.ab2@4796>   LEA popreturn__rfix(PC),A0
00037298 <AmiBlitz3.ab2@4797>   LEA popreturn__rfixf(PC),A1
0003729E <AmiBlitz3.ab2@4798>    JSR pokecode
000372A2 <AmiBlitz3.ab2@4799>   MOVE.w #$C305,D1
000372A8 <AmiBlitz3.ab2@4800>    JSR Atokejsr
000372AC <AmiBlitz3.ab2@4801>   MOVE.w popreturn__rfix2(PC),D1
000372B2 <AmiBlitz3.ab2@4803>    JSR writeword
000372B6 <AmiBlitz3.ab2@4804> BRA.w get1bytemain
000372BC <AmiBlitz3.ab2@4808>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000372C0 <AmiBlitz3.ab2@4809>   BEQ.w popreturn__rfix2
000372C6 <AmiBlitz3.ab2@4812>   JSR $20000                                               ;reass
000372C8 <AmiBlitz3.ab2@4815>   ADDQ.w #6,A7
000372CC <AmiBlitz3.ab2@4819>   MOVE.w popreturn__sfix(PC),D1
000372D2 <AmiBlitz3.ab2@4820>   JSR writeword
000372D6 <AmiBlitz3.ab2@4821> BRA.w get1bytemain
000372D8 <AmiBlitz3.ab2@4826>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000372DE <AmiBlitz3.ab2@4831>   MOVE.l firstfor,D0
000372E2 <AmiBlitz3.ab2@4832>    BEQ.w noforerr
000372E4 <AmiBlitz3.ab2@4833>   MOVEA.l D0,A2
000372E8 <AmiBlitz3.ab2@4834>    BSR.w get1bytemain
000372EC <AmiBlitz3.ab2@4835>   BSR.w popnext
000372F2 <AmiBlitz3.ab2@4838>   TST.b debugmode
000372F6 <AmiBlitz3.ab2@4839>    BEQ.w popnext3__ner
000372FC <AmiBlitz3.ab2@4840>   MOVE.l nextfixw2,D1
00037302 <AmiBlitz3.ab2@4841>   CMPI.w #$3,$C(A2)
00037306 <AmiBlitz3.ab2@4842>    BCS.w writelong2
0003730C <AmiBlitz3.ab2@4843>   MOVE.l nextfixl2,D1
00037312 <AmiBlitz3.ab2@4844> writelong2 JMP  writelong
00037318 <AmiBlitz3.ab2@4847>   CMPI.w #$3,$C(A2)
0003731C <AmiBlitz3.ab2@4848>    BCS.w popnext3__skip2
00037322 <AmiBlitz3.ab2@4849>   MOVE.l nextfixl,D1
00037328 <AmiBlitz3.ab2@4850>   JMP writelong
0003732E <AmiBlitz3.ab2@4853>   MOVE.w nextfixw,D1
00037334 <AmiBlitz3.ab2@4854> JMP writeword
00037338 <AmiBlitz3.ab2@4858>   MOVE.w $C(A2),D0
0003733E <AmiBlitz3.ab2@4859>   TST.b debugmode
00037342 <AmiBlitz3.ab2@4860>    BEQ.w popnext__norunerr
00037346 <AmiBlitz3.ab2@4861>   MOVE.w #$C306,D1
0003734A <AmiBlitz3.ab2@4862>   CMP.w #$3,D0
0003734E <AmiBlitz3.ab2@4863>    BCS.w popnext__oktc
00037350 <AmiBlitz3.ab2@4864>   ADDQ.w #1,D1
00037352 <AmiBlitz3.ab2@4867>   MOVE.l A2,-(A7)
00037358 <AmiBlitz3.ab2@4868>   JSR Atokejsr
0003735A <AmiBlitz3.ab2@4869>   MOVEA.l (A7)+,A2
0003735C <AmiBlitz3.ab2@4872> RTS
00037362 <AmiBlitz3.ab2@4876>   MOVE.l firstsel,D0
00037366 <AmiBlitz3.ab2@4877>    BEQ.w eselerr
00037368 <AmiBlitz3.ab2@4878>   MOVEA.l D0,A2
0003736C <AmiBlitz3.ab2@4879>    BSR.w get1bytemain
00037370 <AmiBlitz3.ab2@4882>   MOVE.w $C(A2),D2
00037376 <AmiBlitz3.ab2@4883>   TST.b debugmode
0003737A <AmiBlitz3.ab2@4884>    BEQ.w popselect__norerr
0003737E <AmiBlitz3.ab2@4885>   MOVE.w #$C313,D1
00037382 <AmiBlitz3.ab2@4886>   CMP.w #$3,D2
00037386 <AmiBlitz3.ab2@4887>    BCS.w popselect__chkit
00037388 <AmiBlitz3.ab2@4888>   ADDQ.w #1,D1
0003738E <AmiBlitz3.ab2@4891>   JSR Atokejsr                                             ;make sure next thing on stack
00037390 <AmiBlitz3.ab2@4895>   MOVEQ.l #$02,D1
00037394 <AmiBlitz3.ab2@4896>   CMP.w #$3,D2
00037398 <AmiBlitz3.ab2@4897>    BCS.w popselect__doit
0003739A <AmiBlitz3.ab2@4898>   MOVEQ.l #$04,D1
0003739E <AmiBlitz3.ab2@4899>   CMP.w #$7,D2
000373A2 <AmiBlitz3.ab2@4900>    BCS.w popselect__doit
000373A8 <AmiBlitz3.ab2@4901>   LEA endselstr,A0
000373AE <AmiBlitz3.ab2@4902>   LEA endselstrf,A1
000373B4 <AmiBlitz3.ab2@4903>   TST.b debugmode
000373B8 <AmiBlitz3.ab2@4904>    BEQ.w popselect__norerr3
000373BE <AmiBlitz3.ab2@4905>   LEA endselstrf2,A1
000373C4 <AmiBlitz3.ab2@4908>   JSR pokecode
000373C8 <AmiBlitz3.ab2@4909>   MOVE.w #$C003,D1                                         ;global freemem
000373CE <AmiBlitz3.ab2@4910> JMP Atokejsr
000373D4 <AmiBlitz3.ab2@4913>   TST.b debugmode
000373D8 <AmiBlitz3.ab2@4914>    BEQ.w popselect__norerr2
000373DA <AmiBlitz3.ab2@4915>   ADDQ.w #2,D1                                             ;for the "sE"
000373DC <AmiBlitz3.ab2@4918>   LSL.w #8,D1
000373DE <AmiBlitz3.ab2@4919>   LSL.w #1,D1
000373E4 <AmiBlitz3.ab2@4920>   OR.w endsel,D1
000373EA <AmiBlitz3.ab2@4921> JMP writeword
000373EE <AmiBlitz3.ab2@4924> firstrep:    Ds.l 1
000373F2 <AmiBlitz3.ab2@4925> replineat:   Ds.l 1
000373F8 <AmiBlitz3.ab2@4934>   CLR.l fp0addr
00037402 <AmiBlitz3.ab2@4935>   MOVE.l linenumat,replineat
00037404 <AmiBlitz3.ab2@4936>   MOVEQ.l #$08,D0
0003740A <AmiBlitz3.ab2@4937>   MOVEA.l _execbase,A6
00037410 <AmiBlitz3.ab2@4938>   MOVE.l mempool,a0
00037414 <AmiBlitz3.ab2@4939>   JSR _AllocPooled(a6)
00037416 <AmiBlitz3.ab2@4941>   MOVEA.l D0,A0
0003741A <AmiBlitz3.ab2@4942>   MOVE.l firstrep(PC),(A0)
00037420 <AmiBlitz3.ab2@4943>   MOVE.l A0,firstrep
00037428 <AmiBlitz3.ab2@4944>   MOVE.l destpointer,$4(A0)
0003742A <AmiBlitz3.ab2@4945> RTS
00037430 <AmiBlitz3.ab2@4948> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00037434 <AmiBlitz3.ab2@4951>   LEA str_temp(PC),A1
00037436 <AmiBlitz3.ab2@4952>   CLR.w (A1)
0003743A <AmiBlitz3.ab2@4953>   CLR.l $2(A1)
0003743C <AmiBlitz3.ab2@4956>   MOVEQ.l #$04,D0
00037440 <AmiBlitz3.ab2@4959>     MOVE.b $1(A1),(A1)+
00037444 <AmiBlitz3.ab2@4960>   DBF D0,check_for_infoextention__loop
00037448 <AmiBlitz3.ab2@4965>   LEA str_temp(PC),A1
0003744A <AmiBlitz3.ab2@4966>   MOVE.b (A0),D0
0003744E <AmiBlitz3.ab2@4967>   ORI.b #$20,D0
00037452 <AmiBlitz3.ab2@4968>   MOVE.b D0,$5(A1)
00037454 <AmiBlitz3.ab2@4969>   TST.b (A0)+
00037458 <AmiBlitz3.ab2@4970>    BNE.w check_for_infoextention__loop2
0003745C <AmiBlitz3.ab2@4971>   CMPI.w #$2E69,(A1)+                                      ;".i"
00037460 <AmiBlitz3.ab2@4972>    BNE.w check_for_infoextention__no
00037466 <AmiBlitz3.ab2@4973>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00037468 <AmiBlitz3.ab2@4976> RTS
0003746C <AmiBlitz3.ab2@4980>   BPL.w gettokeps__evaltoke
0003746E <AmiBlitz3.ab2@4981>   MOVE.w D0,D1
00037472 <AmiBlitz3.ab2@4982>   ANDI.w #$7F80,D1
00037476 <AmiBlitz3.ab2@4983>    BEQ.w tokeerr
0003747A <AmiBlitz3.ab2@4984>   BCLR #$F,D0
0003747C <AmiBlitz3.ab2@4985>   MOVE.w D0,D4                                             ;got toke number
00037480 <AmiBlitz3.ab2@4986>   BSR.w get1bytemain
00037484 <AmiBlitz3.ab2@4987> BRA.w gettokeps__gotnum
0003748A <AmiBlitz3.ab2@4990>   JSR JL_0_BF6A
00037490 <AmiBlitz3.ab2@4991>   CMP.l #MaxWord,D3
00037494 <AmiBlitz3.ab2@4992>    BHI.w tokeerr
00037496 <AmiBlitz3.ab2@4993>   TST.w D6
0003749A <AmiBlitz3.ab2@4994>    BNE.w tokeerr
0003749C <AmiBlitz3.ab2@4995>   MOVE.w D3,D4
0003749E <AmiBlitz3.ab2@4998>   MOVEQ.l #$00,D5
000374A2 <AmiBlitz3.ab2@4999>   CMP.w #$2C,D0
000374A6 <AmiBlitz3.ab2@5000>    BNE.w gettokeps__gotfrom
000374A8 <AmiBlitz3.ab2@5001>   MOVE.w D4,-(A7)
000374AE <AmiBlitz3.ab2@5002>    JSR AJL_0_BF6E
000374B4 <AmiBlitz3.ab2@5003>   CMP.l #MaxWord,D3
000374B8 <AmiBlitz3.ab2@5004>    BHI.w tokeerr
000374BA <AmiBlitz3.ab2@5005>   TST.w D6
000374BE <AmiBlitz3.ab2@5006>    BNE.w tokeerr
000374C0 <AmiBlitz3.ab2@5007>   MOVE.w D3,D5
000374C2 <AmiBlitz3.ab2@5008>   MOVE.w (A7)+,D4
000374C4 <AmiBlitz3.ab2@5011> RTS                                                        ;d4=toke, d5=form
000374C6 <AmiBlitz3.ab2@5015>   TST.w D0
000374CA <AmiBlitz3.ab2@5016>    BSR.w gettokeps
000374CE <AmiBlitz3.ab2@5017>   MOVE.w #$4EB9,D1
000374D4 <AmiBlitz3.ab2@5018>   JSR writeword
000374D8 <AmiBlitz3.ab2@5019>   BSR.w addoff
000374DA <AmiBlitz3.ab2@5020>   MOVE.w D5,D1
000374DE <AmiBlitz3.ab2@5021>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000374E0 <AmiBlitz3.ab2@5022>   SWAP D1
000374E2 <AmiBlitz3.ab2@5023>   MOVE.w D4,D1
000374E8 <AmiBlitz3.ab2@5024> JMP writelong
000374EA <AmiBlitz3.ab2@5028>   TST.w D0
000374EE <AmiBlitz3.ab2@5029>    BSR.w gettokeps
000374F2 <AmiBlitz3.ab2@5030>   MOVE.w #$4EB9,D1
000374F8 <AmiBlitz3.ab2@5031>   JSR writeword
000374FC <AmiBlitz3.ab2@5032>   BSR.w addoff
000374FE <AmiBlitz3.ab2@5033>   MOVE.w D5,D1
00037502 <AmiBlitz3.ab2@5034>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00037504 <AmiBlitz3.ab2@5035>   SWAP D1
00037506 <AmiBlitz3.ab2@5036>   MOVE.w D4,D1
0003750C <AmiBlitz3.ab2@5037>   JMP writelong
00037512 <AmiBlitz3.ab2@5041>   JSR JL_0_BF6A
00037518 <AmiBlitz3.ab2@5042>   CMP.l #$10000,D3
0003751C <AmiBlitz3.ab2@5043>    BCC.w tokeerr
0003751E <AmiBlitz3.ab2@5044>   MOVE.w D3,D1
00037524 <AmiBlitz3.ab2@5045> JMP Atokejsr
00037528 <AmiBlitz3.ab2@5049>   BSR.w gettokeps
0003752C <AmiBlitz3.ab2@5050>   MOVE.w #$4EB9,D1
00037532 <AmiBlitz3.ab2@5051>   JSR writeword
00037538 <AmiBlitz3.ab2@5052>   MOVE.l destpointer,D3
00037540 <AmiBlitz3.ab2@5053>   BTST #$7,blitzmode
00037544 <AmiBlitz3.ab2@5054>    BEQ.w do_TokeJsr__inamiga
00037548 <AmiBlitz3.ab2@5055>   BSET #$E,D5
0003754C <AmiBlitz3.ab2@5058>   BSR.w JL_0_6E86
00037550 <AmiBlitz3.ab2@5059>   BSR.w addoff
00037556 <AmiBlitz3.ab2@5060>   JMP writelong
0003755A <AmiBlitz3.ab2@5064>   BEQ.w do_VWait__zero
0003755C <AmiBlitz3.ab2@5065>   MOVEQ.l #$02,D2                                          ;get a word
00037562 <AmiBlitz3.ab2@5067>   JSR bakeval
00037566 <AmiBlitz3.ab2@5068>   MOVE.w fvwait(PC),D1
0003756A <AmiBlitz3.ab2@5069> BRA.w do_VWait__vcont
0003756E <AmiBlitz3.ab2@5072>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00037574 <AmiBlitz3.ab2@5075>   JSR writeword
00037578 <AmiBlitz3.ab2@5076>   MOVE.w #$C104,D1
0003757E <AmiBlitz3.ab2@5077> JMP Atokejsr
00037580 <AmiBlitz3.ab2@5081>   SUBQ.w #1,D0
00037586 <AmiBlitz3.ab2@5084>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
0003758A <AmiBlitz3.ab2@5087>   Dc.l $426d0001                                           ;clr.w $0(A5)
0003758E <AmiBlitz3.ab2@5091>   MOVE.b debugmode(PC),D1
00037592 <AmiBlitz3.ab2@5092>   BEQ.b debugmode_codelabel__skip
00037596 <AmiBlitz3.ab2@5093>   MOVE.w #$D500,D1
0003759C <AmiBlitz3.ab2@5094> JMP Atokejsr
0003759E <AmiBlitz3.ab2@5097> RTS
000375A6 <AmiBlitz3.ab2@5101>   BSET #$0,blitzmode
000375AE <AmiBlitz3.ab2@5102>   BSET #$7,blitzmode
000375B2 <AmiBlitz3.ab2@5103>   MOVE.w #$C200,D1
000375B8 <AmiBlitz3.ab2@5104>   JSR Atokejsr
000375BE <AmiBlitz3.ab2@5105>   TST.b debugmode
000375C2 <AmiBlitz3.ab2@5106>    BEQ.w do_BLITZ__done
000375C6 <AmiBlitz3.ab2@5107>   MOVE.w cgoblitz(PC),D1
000375CC <AmiBlitz3.ab2@5108>   JSR writeword
000375CE <AmiBlitz3.ab2@5109>   MOVEQ.l #-$01,D1
000375D4 <AmiBlitz3.ab2@5110>   JSR writeword
000375DA <AmiBlitz3.ab2@5111>   JSR getbbase
000375E0 <AmiBlitz3.ab2@5112>   JSR writeword
000375E4 <AmiBlitz3.ab2@5115> BRA.w debugmode_codelabel
000375E8 <AmiBlitz3.ab2@5119>   MOVE.w #$C201,D1
000375EC <AmiBlitz3.ab2@5120> BRA.w do_AMIGA__toamode
000375F0 <AmiBlitz3.ab2@5124>   MOVE.W  #$C202,D1
000375F8 <AmiBlitz3.ab2@5127>   BSET #$0,blitzmode
00037600 <AmiBlitz3.ab2@5128>   BCLR #$7,blitzmode
00037606 <AmiBlitz3.ab2@5129>   JSR Atokejsr
0003760C <AmiBlitz3.ab2@5130>   TST.b debugmode
00037610 <AmiBlitz3.ab2@5131>    BEQ.w do_AMIGA__done
00037614 <AmiBlitz3.ab2@5132>   MOVE.w cgoamiga(PC),D1
0003761A <AmiBlitz3.ab2@5133>   JSR writeword
00037620 <AmiBlitz3.ab2@5134>   JSR getbbase
00037626 <AmiBlitz3.ab2@5135>   JSR writeword
0003762A <AmiBlitz3.ab2@5138> BRA.w debugmode_codelabel
0003762E <AmiBlitz3.ab2@5142>   MOVEM.l D2-D7/A2-A4,-(A7)
00037632 <AmiBlitz3.ab2@5145>   MOVEM.l (A7)+,D2-D7/A2-A4
00037638 <AmiBlitz3.ab2@5149>   JSR JL_0_BF6A
0003763E <AmiBlitz3.ab2@5150>   CMP.l #$E,D3
00037642 <AmiBlitz3.ab2@5151>    BCC.w interr4
00037646 <AmiBlitz3.ab2@5152>   MOVE.w #$7000,D1
00037648 <AmiBlitz3.ab2@5153>   OR.w D3,D1
0003764E <AmiBlitz3.ab2@5154>   JSR writeword
00037652 <AmiBlitz3.ab2@5155>   MOVE.w #$C101,D1
00037658 <AmiBlitz3.ab2@5156> JMP Atokejsr                                               ;clear the interupt
0003765A <AmiBlitz3.ab2@5159> inerr:       Ds.w 1                                        ;flag - in error trap mode
0003765E <AmiBlitz3.ab2@5160> errjmp:      Ds.l 1                                        ;where err jump is
00037662 <AmiBlitz3.ab2@5161> errcode:     Ds.l 1
00037666 <AmiBlitz3.ab2@5165>   MOVE.W  #$D202,D1
0003766C <AmiBlitz3.ab2@5166> JMP Atokejsr                                               ;BRA.W Atokejsr
00037670 <AmiBlitz3.ab2@5170>   MOVE.w inerr(PC),D1
00037674 <AmiBlitz3.ab2@5171>    BEQ.w errerr3
0003767A <AmiBlitz3.ab2@5172>   CLR.w inerr
00037680 <AmiBlitz3.ab2@5173>   MOVE.w dontwrite,D1
00037684 <AmiBlitz3.ab2@5174>    BNE.w doendseterr__skip
00037688 <AmiBlitz3.ab2@5175>   MOVEA.l errjmp(PC),A0
0003768E <AmiBlitz3.ab2@5176>   MOVE.l destpointer,(A0)
00037692 <AmiBlitz3.ab2@5179> BRA.w get1bytemain
00037696 <AmiBlitz3.ab2@5183>   MOVE.w #$D205,D1
0003769C <AmiBlitz3.ab2@5184> JMP Atokejsr
000376A2 <AmiBlitz3.ab2@5188>   MOVE.w proceduremode,D1
000376A6 <AmiBlitz3.ab2@5189>    BNE.w errerr1
000376AA <AmiBlitz3.ab2@5190>   MOVE.w inerr(PC),D1
000376AE <AmiBlitz3.ab2@5191>    BNE.w errerr2
000376B4 <AmiBlitz3.ab2@5192>   LEA inerr,a0
000376B6 <AmiBlitz3.ab2@5193>   NOT.w (a0)                                               ;reass
000376BA <AmiBlitz3.ab2@5194>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000376C0 <AmiBlitz3.ab2@5195>   JSR writeword
000376CA <AmiBlitz3.ab2@5196>   MOVE.l destpointer,errcode
000376CE <AmiBlitz3.ab2@5197>   BSR.w addoff
000376D2 <AmiBlitz3.ab2@5198>   BSR.w writelong
000376D6 <AmiBlitz3.ab2@5199>   MOVE.w #$D201,D1
000376DC <AmiBlitz3.ab2@5200>   JSR Atokejsr
000376E0 <AmiBlitz3.ab2@5201>   MOVE.w #$4EF9,D1                                         ;JMP
000376E4 <AmiBlitz3.ab2@5202>   BSR.w writeword
000376EE <AmiBlitz3.ab2@5203>   MOVE.l destpointer,errjmp
000376F2 <AmiBlitz3.ab2@5204>   BSR.w addoff
000376F6 <AmiBlitz3.ab2@5205>   BSR.w writelong
000376FC <AmiBlitz3.ab2@5206>   MOVE.w dontwrite,D1
00037700 <AmiBlitz3.ab2@5207>    BNE.w do_SetErr__skip
00037704 <AmiBlitz3.ab2@5208>   MOVEA.l errcode(PC),A0
0003770A <AmiBlitz3.ab2@5209>   MOVE.l destpointer,(A0)
0003770C <AmiBlitz3.ab2@5212> RTS
00037710 <AmiBlitz3.ab2@5215> intlineat:  Ds.l 1
00037712 <AmiBlitz3.ab2@5219>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00037716 <AmiBlitz3.ab2@5220>   BSR.w errchx
0003771C <AmiBlitz3.ab2@5221>   MOVE.w D1,intstring
00037726 <AmiBlitz3.ab2@5222>   MOVE.l linenumat,intlineat
0003772C <AmiBlitz3.ab2@5223>   JSR JL_0_BF6A                                           ;get constant - int level
00037732 <AmiBlitz3.ab2@5224>   CMP.l #$E,D3
00037736 <AmiBlitz3.ab2@5225>    BCC.w interr4
0003773C <AmiBlitz3.ab2@5226>   ST intsused
00037742 <AmiBlitz3.ab2@5227>   MOVE.w D3,intlevel
00037746 <AmiBlitz3.ab2@5228>   MOVE.w #$7000,D1
00037748 <AmiBlitz3.ab2@5229>   OR.w D3,D1                                              
0003774C <AmiBlitz3.ab2@5230>   BSR.w writeword                                         ;moveq #x,d0
00037750 <AmiBlitz3.ab2@5231>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00037754 <AmiBlitz3.ab2@5232>   BSR.w writeword
00037758 <AmiBlitz3.ab2@5233>   BSR.w addoff
0003775E <AmiBlitz3.ab2@5234>   MOVE.l destpointer,-(A7)
00037762 <AmiBlitz3.ab2@5235>   BSR.w writelong
00037766 <AmiBlitz3.ab2@5236>   MOVE.w #$C100,D1
0003776C <AmiBlitz3.ab2@5237>   JSR Atokejsr
00037770 <AmiBlitz3.ab2@5238>   MOVE.w #$4EF9,D1                                        ;jmp
00037774 <AmiBlitz3.ab2@5239>   BSR.w writeword
00037778 <AmiBlitz3.ab2@5240>   BSR.w addoff
00037782 <AmiBlitz3.ab2@5241>   MOVE.l destpointer,intjmpat
00037786 <AmiBlitz3.ab2@5242>   BSR.w writelong
00037788 <AmiBlitz3.ab2@5243>   MOVEA.l (A7)+,A0
0003778E <AmiBlitz3.ab2@5244>   MOVE.w dontwrite,D1
00037792 <AmiBlitz3.ab2@5245>   BNE.w do_SetInt__dontpoke
00037798 <AmiBlitz3.ab2@5246>   MOVE.l destpointer,(A0)
0003779C <AmiBlitz3.ab2@5249>   MOVE.l intstart0(PC),D1
000377A0 <AmiBlitz3.ab2@5250>   BSR.w writelong
000377A6 <AmiBlitz3.ab2@5251>   TST.b debugmode
000377AA <AmiBlitz3.ab2@5252>    BEQ.w do_SetInt__norerr
000377AC <AmiBlitz3.ab2@5256>   MOVEQ.l #$02,D1
000377B0 <AmiBlitz3.ab2@5257>   BSR.w writetrap
000377B4 <AmiBlitz3.ab2@5258>   BSR.w addoff
000377BE <AmiBlitz3.ab2@5259>   MOVE.l destpointer,intcleanat
000377C2 <AmiBlitz3.ab2@5260>   BSR.w writelong
000377C8 <AmiBlitz3.ab2@5261>   MOVE.w intlevel,D1
000377CC <AmiBlitz3.ab2@5262>   BSR.w writeword
000377D0 <AmiBlitz3.ab2@5263>   MOVE.w #$C30B,D1                                         ;disable stack checks
000377D6 <AmiBlitz3.ab2@5264>   JSR Atokejsr
000377DA <AmiBlitz3.ab2@5267>   MOVE.w #$FED3,D1
000377DE <AmiBlitz3.ab2@5268>   BSR.w uselib
000377E2 <AmiBlitz3.ab2@5269>   MOVE.w #$C102,D1
000377E8 <AmiBlitz3.ab2@5270>   JSR Atokejsr
000377F0 <AmiBlitz3.ab2@5271>   MOVE.w #-1,lasta6
000377FA <AmiBlitz3.ab2@5272>   MOVE.l linenumat,intline
000377FC <AmiBlitz3.ab2@5273> RTS
000377FE <AmiBlitz3.ab2@5277>             Ds.w 1                                         ;??looks like obsolved data??
00037802 <AmiBlitz3.ab2@5279> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00037806 <AmiBlitz3.ab2@5281> intjmpat:   Ds.l 1
0003780A <AmiBlitz3.ab2@5282> intline:    Ds.l 1
0003780C <AmiBlitz3.ab2@5283> intstring:  Ds.w 1                                         ;flag 0 = no setint
0003780E <AmiBlitz3.ab2@5286> intlevel:   Ds.w 1
00037812 <AmiBlitz3.ab2@5287> intcleanat: Ds.l 1
00037816 <AmiBlitz3.ab2@5288> ret15add:   Ds.l 1
00037818 <AmiBlitz3.ab2@5289> ret15cc:    Ds.w 1
00037820 <AmiBlitz3.ab2@5293>   ADDI.l #$12,$2(A7)
00037828 <AmiBlitz3.ab2@5294>   MOVE.l $2(A7),ret15add
0003782E <AmiBlitz3.ab2@5295>   MOVE.w (A7),ret15cc
00037836 <AmiBlitz3.ab2@5296>   MOVE.l #directdo,$2(A7)
00037838 <AmiBlitz3.ab2@5297> RTE
0003783C <AmiBlitz3.ab2@5306>   MOVE.l ret15add(PC),-(A7)
00037840 <AmiBlitz3.ab2@5307>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00037844 <AmiBlitz3.ab2@5308>   MOVEM.l D0-D7/A0-A6,-(A7)
0003784E <AmiBlitz3.ab2@5309>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00037858 <AmiBlitz3.ab2@5310>   MOVE.l destbufferstart,trap15temp2
00037862 <AmiBlitz3.ab2@5311>   MOVE.l libend,templibend
0003786C <AmiBlitz3.ab2@5312>   MOVE.l data1start,tempdata1start
00037872 <AmiBlitz3.ab2@5313>   CLR.l hunkoffsetcounter
00037878 <AmiBlitz3.ab2@5315>   MOVE.l directbuffer,a0
0003787E <AmiBlitz3.ab2@5319>   MOVE.l a0,destbufferstart
00037884 <AmiBlitz3.ab2@5320>   ADD.l #3900,a0
0003788A <AmiBlitz3.ab2@5321>   MOVE.l a0,destbufferend
00037890 <AmiBlitz3.ab2@5322>   TST.b exdebug
00037894 <AmiBlitz3.ab2@5323>   BEQ 'l1
0003789A <AmiBlitz3.ab2@5324>   MOVE.l a0,libend
000378A0 <AmiBlitz3.ab2@5325>   ADD.l #4000,a0
000378A6 <AmiBlitz3.ab2@5326>   MOVE.l a0,data1start
000378B0 <AmiBlitz3.ab2@5329>   MOVE.l #dircont,errcont
000378B6 <AmiBlitz3.ab2@5330>   MOVE.l A7,errstack
000378BE <AmiBlitz3.ab2@5331>   MOVE.w #$FFFF,dirmode
000378C2 <AmiBlitz3.ab2@5333>     MOVEA.l ret15add(PC),A1
000378C8 <AmiBlitz3.ab2@5334>     MOVE.w -(A1),blitzmode
000378CA <AmiBlitz3.ab2@5335>     CLR.l -(A1)
000378D0 <AmiBlitz3.ab2@5336>     MOVE.l -(A1),firstglob
000378D6 <AmiBlitz3.ab2@5337>     MOVE.l -(A1),firstlocal
000378DC <AmiBlitz3.ab2@5339>   CLR.w proceduremode
000378E2 <AmiBlitz3.ab2@5340>   MOVE.l firstglob,D0
000378E8 <AmiBlitz3.ab2@5341>   OR.l firstlocal,D0
000378EC <AmiBlitz3.ab2@5342>   BEQ.b directdo__skip
000378F2 <AmiBlitz3.ab2@5343>   NOT.w proceduremode
000378F4 <AmiBlitz3.ab2@5346>   MOVEA.l -(A1),A0                                         ;address of string
000378F6 <AmiBlitz3.ab2@5350>   MOVE.l A0,-(A7)
00037934 <AmiBlitz3.ab2@5353>   !ComData_GetL{comFunc_DebugTrap,A1}
00037936 <AmiBlitz3.ab2@5356>   JSR (A1)                                                 ;tokenise line.....
00037938 <AmiBlitz3.ab2@5357>   MOVEA.l (A7)+,A5
00037942 <AmiBlitz3.ab2@5358>   MOVE.l directbuffer,destpointer
00037948 <AmiBlitz3.ab2@5359>   TST.b exdebug
0003794C <AmiBlitz3.ab2@5360>   BEQ 'noexdebug
0003794E <AmiBlitz3.ab2@5361>   MOVE.l a5,a0
00037954 <AmiBlitz3.ab2@5362>   MOVE.l #200,d0
0003795A <AmiBlitz3.ab2@5365>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
0003795E <AmiBlitz3.ab2@5366>   DBF d0,'l1
00037964 <AmiBlitz3.ab2@5371>   MOVE.l destpointer,a0
00037968 <AmiBlitz3.ab2@5372>   MOVE.w #$207c,(a0)+
0003796A <AmiBlitz3.ab2@5373>   MOVE.l a5,d0
00037970 <AmiBlitz3.ab2@5374>   ADD.l #$206,d0                                           ;constant from debuglib
00037972 <AmiBlitz3.ab2@5375>   MOVE.l d0,(a0)+
00037978 <AmiBlitz3.ab2@5376>   MOVE.l a0,destpointer
0003797A <AmiBlitz3.ab2@5377>   MOVE.l a5,a0
0003797E <AmiBlitz3.ab2@5378>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00037984 <AmiBlitz3.ab2@5379>   MOVE.l #"$520",(a0)+
00037988 <AmiBlitz3.ab2@5380>   MOVE.w #"4:",(a0)+
0003798E <AmiBlitz3.ab2@5383>   CLR.w dontwrite
00037996 <AmiBlitz3.ab2@5384>   MOVE.w #$FFFF,lasta6
0003799A <AmiBlitz3.ab2@5385>   BSR.w compile_line                                        ;.....compile it
000379A0 <AmiBlitz3.ab2@5386>   TST.b exdebug
000379A4 <AmiBlitz3.ab2@5387>   BEQ 'noexdebug2
000379AA <AmiBlitz3.ab2@5388>   JSR JL_0_6C76
000379B0 <AmiBlitz3.ab2@5391>   CLR.w proceduremode
000379B4 <AmiBlitz3.ab2@5392>   BSR.w errchx
000379B8 <AmiBlitz3.ab2@5393>   MOVE.w #$4EF9,D1
000379BC <AmiBlitz3.ab2@5394>   BSR.w writeword                                          ;JMP
000379C0 <AmiBlitz3.ab2@5395>   MOVE.l ret15add(PC),D1
000379C4 <AmiBlitz3.ab2@5396>   BSR.w writelong                                          ;jmp to done
000379CA <AmiBlitz3.ab2@5397>   MOVE.w dontwrite,D0
000379CE <AmiBlitz3.ab2@5398>    BNE.w nodirmem
000379D6 <AmiBlitz3.ab2@5399>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000379DC <AmiBlitz3.ab2@5402>   CLR.w dirmode
000379E2 <AmiBlitz3.ab2@5403>   MOVE.w ret15cc(PC),$3C(A7)
000379EC <AmiBlitz3.ab2@5404>   MOVE.l trap15temp,destbufferend
000379F6 <AmiBlitz3.ab2@5405>   MOVE.l trap15temp2,destbufferstart
00037A00 <AmiBlitz3.ab2@5406>   MOVE.l tempdata1start,data1start
00037A0A <AmiBlitz3.ab2@5407>   MOVE.l templibend,libend
00037A0E <AmiBlitz3.ab2@5408>   MOVEM.l (A7)+,D0-D7/A0-A6
00037A12 <AmiBlitz3.ab2@5409>   BSR.w Aclearcache                                        ;selden used
00037A14 <AmiBlitz3.ab2@5410> RTR
00037A18 <AmiBlitz3.ab2@5413>   MOVEA.l ret15add(PC),A0
00037A1A <AmiBlitz3.ab2@5414>   SUBQ.w #2,A0
00037A1C <AmiBlitz3.ab2@5415>   MOVE.l D0,-(A0)
00037A20 <AmiBlitz3.ab2@5416> BRA.w direxit
00037A24 <AmiBlitz3.ab2@5420>   MOVE.w $6(A3),D1
00037A28 <AmiBlitz3.ab2@5421>   BSR.w uselib                                             ;get lib for base address
00037A2C <AmiBlitz3.ab2@5422>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00037A2E <AmiBlitz3.ab2@5423>   ADDQ.w #8,A3
00037A30 <AmiBlitz3.ab2@5424>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00037A32 <AmiBlitz3.ab2@5425>   MOVE.l A3,-(A7)
00037A34 <AmiBlitz3.ab2@5429>   MOVEQ.l #$00,D3
00037A3A <AmiBlitz3.ab2@5430>   JSR checka4a5
00037A3C <AmiBlitz3.ab2@5432>   MOVE.b (A3)+,D1
00037A40 <AmiBlitz3.ab2@5433>    BMI.w stamigalib__done
00037A42 <AmiBlitz3.ab2@5434>   MOVEQ.l #$03,D2
00037A44 <AmiBlitz3.ab2@5435>   ADDQ.w #1,D3
00037A48 <AmiBlitz3.ab2@5436>   MOVEM.l D3/A3,-(A7)
00037A4E <AmiBlitz3.ab2@5437>   MOVE.b funcparloop,-(a7)
00037A56 <AmiBlitz3.ab2@5438>   MOVE.b #0,funcparloop
00037A5C <AmiBlitz3.ab2@5439>   MOVE.l leftsidetype,-(a7)
00037A62 <AmiBlitz3.ab2@5440>   MOVE.l rightsidetype,-(a7)
00037A68 <AmiBlitz3.ab2@5441>   CLR.l leftsidetype
00037A6E <AmiBlitz3.ab2@5442>   CLR.l rightsidetype
00037A74 <AmiBlitz3.ab2@5443>   MOVE.b blitzparloop,-(a7)
00037A7C <AmiBlitz3.ab2@5444>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00037A82 <AmiBlitz3.ab2@5445>   JSR peval
00037A88 <AmiBlitz3.ab2@5446>   MOVE.b (a7)+,blitzparloop
00037A8E <AmiBlitz3.ab2@5447>   MOVE.l (a7)+,rightsidetype
00037A94 <AmiBlitz3.ab2@5448>   MOVE.l (a7)+,leftsidetype
00037A9A <AmiBlitz3.ab2@5449>   MOVE.b (a7)+,funcparloop
00037A9E <AmiBlitz3.ab2@5450>   MOVEM.l (A7)+,D3/A3
00037AA2 <AmiBlitz3.ab2@5451>   CMP.w #$2C,D0
00037AA6 <AmiBlitz3.ab2@5452>    BEQ.w stamigalib__loop
00037AA8 <AmiBlitz3.ab2@5453>   TST.b (A3)
00037AAC <AmiBlitz3.ab2@5454>    BPL.w syntaxerr
00037AAE <AmiBlitz3.ab2@5457>   MOVEA.l (A7)+,A3
00037AB0 <AmiBlitz3.ab2@5458>   SUBQ.w #1,D3
00037AB4 <AmiBlitz3.ab2@5459>    BPL.w stamigalib__toend
00037AB8 <AmiBlitz3.ab2@5460>    BSR.w get1bytemain                                      ;no pars - get :
00037ABC <AmiBlitz3.ab2@5461> BRA.w stamigalib__nopars
00037ABE <AmiBlitz3.ab2@5464>   TST.b (A3)+                                              ;go to end of params
00037AC2 <AmiBlitz3.ab2@5465>    BPL.w stamigalib__toend
00037AC4 <AmiBlitz3.ab2@5466>   SUBQ.w #1,A3
00037AC6 <AmiBlitz3.ab2@5469>    MOVEQ.l #$00,D1
00037AC8 <AmiBlitz3.ab2@5470>    MOVE.b -(A3),D1
00037ACC <AmiBlitz3.ab2@5471>    BTST #$4,D1
00037AD0 <AmiBlitz3.ab2@5472>     BNE.w stamigalib__addreg
00037AD2 <AmiBlitz3.ab2@5473>    LSL.w #8,D1
00037AD4 <AmiBlitz3.ab2@5474>    LSL.w #1,D1
00037AD8 <AmiBlitz3.ab2@5475>    ORI.w #$201F,D1
00037ADC <AmiBlitz3.ab2@5476>  BRA.w stamigalib__gotit
00037AE0 <AmiBlitz3.ab2@5479>    ANDI.w #$7,D1
00037AE2 <AmiBlitz3.ab2@5480>    LSL.w #8,D1
00037AE4 <AmiBlitz3.ab2@5481>    LSL.w #1,D1
00037AE8 <AmiBlitz3.ab2@5482>    ORI.w #$205F,D1
00037AEC <AmiBlitz3.ab2@5485>     BSR.w writeword
00037AF0 <AmiBlitz3.ab2@5486>   DBF D3,stamigalib__loop2
00037AF6 <AmiBlitz3.ab2@5489>   MOVE.w (A7)+,libjsr+2
00037AFC <AmiBlitz3.ab2@5490>   MOVE.w (A7)+,libbase+2
00037B02 <AmiBlitz3.ab2@5491>   MOVE.l libbase,D1
00037B06 <AmiBlitz3.ab2@5492>    BSR.w writelong
00037B0C <AmiBlitz3.ab2@5493>   MOVE.l libjsr,D1
00037B12 <AmiBlitz3.ab2@5494>   JSR writelong
00037B18 <AmiBlitz3.ab2@5495>   JSR restorea4a5
00037B1A <AmiBlitz3.ab2@5496>   RTS
00037B20 <AmiBlitz3.ab2@5499>   MOVE.l data1,D4
00037B26 <AmiBlitz3.ab2@5500>   SUB.l data1start,D4
00037B2C <AmiBlitz3.ab2@5501>   ADD.l #10000,d4
00037B32 <AmiBlitz3.ab2@5502>   MOVE.l libend,D3
00037B38 <AmiBlitz3.ab2@5503>   SUB.l destbufferend,D3
00037B3E <AmiBlitz3.ab2@5504>   ADD.l #40000,d3
00037B44 <AmiBlitz3.ab2@5505>   MOVE.l bigpc,D2
00037B4A <AmiBlitz3.ab2@5506>   SUB.l destbufferstart,D2
00037B50 <AmiBlitz3.ab2@5507>   ADD.l #20000,d2
00037B56 <AmiBlitz3.ab2@5508>   MOVE.l databuffer,D5
00037B5C <AmiBlitz3.ab2@5509>   ADD.l #10000,D5
00037B60 <AmiBlitz3.ab2@5510> BRA newallox
00037B66 <AmiBlitz3.ab2@5514>   MOVE.l objectbuffer,D2
00037B68 <AmiBlitz3.ab2@5515>   LSR.l #1,D2
00037B6E <AmiBlitz3.ab2@5516>   ADD.l objectbuffer,D2
00037B74 <AmiBlitz3.ab2@5517>   MOVE.l libsbuffer,D3
00037B76 <AmiBlitz3.ab2@5518>   LSR.l #1,D3
00037B7C <AmiBlitz3.ab2@5519>   ADD.l libsbuffer,D3
00037B82 <AmiBlitz3.ab2@5520>   MOVE.l systembuffer,D4
00037B84 <AmiBlitz3.ab2@5521>   LSR.l #1,D4
00037B8A <AmiBlitz3.ab2@5522>   ADD.l systembuffer,D4
00037B90 <AmiBlitz3.ab2@5523>   MOVE.l databuffer,D5
00037B92 <AmiBlitz3.ab2@5524>   LSR.l #1,D5
00037B98 <AmiBlitz3.ab2@5525>   ADD.l databuffer,D5
00037B9C <AmiBlitz3.ab2@5526> BRA.w newallox
00037BA2 <AmiBlitz3.ab2@5530>   MOVE.l bigpc,D2
00037BA8 <AmiBlitz3.ab2@5531>   SUB.l destbufferstart,D2                                     ;size of object buffer
00037BAE <AmiBlitz3.ab2@5532>   SUB.l savefuncspace,d2
00037BB4 <AmiBlitz3.ab2@5534>   TST.w debugversion
00037BB8 <AmiBlitz3.ab2@5535>    BNE.b alloxadj__skip
00037BBE <AmiBlitz3.ab2@5536>   ADDI.l #$800,D2
00037BC4 <AmiBlitz3.ab2@5539>   MOVE.l libend,D3
00037BCA <AmiBlitz3.ab2@5540>   SUB.l destbufferend,D3
00037BD0 <AmiBlitz3.ab2@5542>   MOVE.l data1,D4
00037BD6 <AmiBlitz3.ab2@5543>   SUB.l data1start,D4
00037BDC <AmiBlitz3.ab2@5545>   MOVE.l data2,D5
00037BE2 <AmiBlitz3.ab2@5546>   SUB.l data2at,D5
00037BE8 <AmiBlitz3.ab2@5548>   CLR.l morememadd
00037BEC <AmiBlitz3.ab2@5551>   BSR.w makeallox
00037BF0 <AmiBlitz3.ab2@5552>   BNE.w newallox__done
00037BF4 <AmiBlitz3.ab2@5553> BRA.w init_buffers
00037BF6 <AmiBlitz3.ab2@5556> RTS
00037BFC <AmiBlitz3.ab2@5560>   MOVEA.l _execbase,A6
00037C02 <AmiBlitz3.ab2@5561>   MOVE.l objlen,D0
00037C06 <AmiBlitz3.ab2@5562>   BEQ.w freeallox__skip
00037C0C <AmiBlitz3.ab2@5563>   CLR.l objlen
00037C12 <AmiBlitz3.ab2@5564>   MOVEA.l destbufferstart,A1
00037C18 <AmiBlitz3.ab2@5565>   MOVE.l mempool,a0
00037C1C <AmiBlitz3.ab2@5566> JMP _FreeVec(A6)
00037C1E <AmiBlitz3.ab2@5569> RTS
00037C24 <AmiBlitz3.ab2@5573>   MOVE.l objectbuffer,D2
00037C2A <AmiBlitz3.ab2@5574>   MOVE.l libsbuffer,D3
00037C30 <AmiBlitz3.ab2@5575>   MOVE.l systembuffer,D4
00037C36 <AmiBlitz3.ab2@5576>   MOVE.l databuffer,D5
00037C3E <AmiBlitz3.ab2@5579>   MOVE.w #$FFFF,anyerrs
00037C42 <AmiBlitz3.ab2@5580>   BSR.w freeallox
00037C44 <AmiBlitz3.ab2@5584>   ADDQ.l #1,D2
00037C48 <AmiBlitz3.ab2@5585>   BCLR #$0,D2
00037C4A <AmiBlitz3.ab2@5586>   ADDQ.l #1,D3
00037C4E <AmiBlitz3.ab2@5587>   BCLR #$0,D3
00037C50 <AmiBlitz3.ab2@5588>   ADDQ.l #1,D4
00037C54 <AmiBlitz3.ab2@5589>   BCLR #$0,D4
00037C56 <AmiBlitz3.ab2@5590>   TST.l d5
00037C5A <AmiBlitz3.ab2@5591>   BNE 'l1
00037C5C <AmiBlitz3.ab2@5594>   ADDQ.l #1,D5
00037C60 <AmiBlitz3.ab2@5595>   BCLR #$0,D5
00037C62 <AmiBlitz3.ab2@5596>   MOVE.l D2,D0
00037C64 <AmiBlitz3.ab2@5597>   ADD.l D3,D0
00037C66 <AmiBlitz3.ab2@5598>   ADD.l D4,D0
00037C68 <AmiBlitz3.ab2@5599>   ADD.l D5,D0
00037C6E <AmiBlitz3.ab2@5600>   ADD.l #moremem,d0
00037C70 <AmiBlitz3.ab2@5601>   MOVE.l D0,D6
00037C76 <AmiBlitz3.ab2@5602>   MOVE.l #MemfPublic_MemfClear,D1
00037C7C <AmiBlitz3.ab2@5603>   MOVE.l mempool,a0
00037C82 <AmiBlitz3.ab2@5604>   MOVEA.l _execbase,A6
00037C86 <AmiBlitz3.ab2@5605>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00037C88 <AmiBlitz3.ab2@5607>   TST.l D0
00037C8C <AmiBlitz3.ab2@5608>   BEQ.w exit_initbuffers
00037C92 <AmiBlitz3.ab2@5609>   MOVE.l D6,objlen
00037C98 <AmiBlitz3.ab2@5610>   MOVE.l D2,objectbuffer
00037C9E <AmiBlitz3.ab2@5611>   MOVE.l D3,libsbuffer
00037CA4 <AmiBlitz3.ab2@5612>   MOVE.l D4,systembuffer
00037CAA <AmiBlitz3.ab2@5613>   MOVE.l D5,databuffer
00037CB0 <AmiBlitz3.ab2@5614>   MOVE.l D0,destbufferstart
00037CE4 <AmiBlitz3.ab2@5617>   !ComData_SetL{comPtr_DestBufferStart,D0}
00037CE6 <AmiBlitz3.ab2@5618>   ADD.l D2,D0
00037CEC <AmiBlitz3.ab2@5619>   MOVE.l D0,destbufferend
00037CEE <AmiBlitz3.ab2@5620>   ADD.l D3,D0
00037CF4 <AmiBlitz3.ab2@5621>   MOVE.l D0,data1start
00037CF6 <AmiBlitz3.ab2@5622>   ADD.l D4,D0
00037CFC <AmiBlitz3.ab2@5623>   MOVE.l D0,data2at
00037CFE <AmiBlitz3.ab2@5624>   ADD.l D5,D0
00037D04 <AmiBlitz3.ab2@5625>   MOVE.l D0,allat
00037D06 <AmiBlitz3.ab2@5628> RTS
00037D0A <AmiBlitz3.ab2@5632>   Dc.b $00,$00,$00,$01                                     ;         1
00037D0E <AmiBlitz3.ab2@5633>   Dc.b $00,$00,$00,$0A                                     ;        10
00037D12 <AmiBlitz3.ab2@5634>   Dc.b $00,$00,$00,$64                                     ;       100
00037D16 <AmiBlitz3.ab2@5635>   Dc.b $00,$00,$03,$E8                                     ;      1000
00037D1A <AmiBlitz3.ab2@5636>   Dc.b $00,$00,$27,$10                                     ;     10000
00037D1E <AmiBlitz3.ab2@5637>   Dc.b $00,$01,$86,$A0                                     ;    100000
00037D22 <AmiBlitz3.ab2@5638>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00037D26 <AmiBlitz3.ab2@5639>   Dc.b $00,$98,$96,$80                                     ;  10000000
00037D2A <AmiBlitz3.ab2@5640>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00037D2E <AmiBlitz3.ab2@5641>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00037D30 <AmiBlitz3.ab2@5645>   MOVEQ.l #$00,D1                                          ;no zero printed
00037D32 <AmiBlitz3.ab2@5646>   MOVEQ.l #$24,D3                                          ; "$"
00037D34 <AmiBlitz3.ab2@5649>   MOVEQ.l #$30,D4                                          ; "0"
00037D38 <AmiBlitz3.ab2@5652>     CMP.l divisors(PC,D3.W),D2
00037D3C <AmiBlitz3.ab2@5653>     BCS.w makelong__skip
00037D40 <AmiBlitz3.ab2@5654>     SUB.l divisors(PC,D3.W),D2
00037D42 <AmiBlitz3.ab2@5655>     ADDQ.w #1,D4
00037D46 <AmiBlitz3.ab2@5656> BRA.w makelong__loop2
00037D4A <AmiBlitz3.ab2@5659>   CMP.b #"0",D4
00037D4E <AmiBlitz3.ab2@5660>   BNE.w makelong__doit
00037D50 <AmiBlitz3.ab2@5661>   TST.w D1
00037D54 <AmiBlitz3.ab2@5662>   BEQ.w makelong__skip2
00037D56 <AmiBlitz3.ab2@5665>   MOVE.b D4,(A0)+
00037D58 <AmiBlitz3.ab2@5666>   MOVEQ.l #$01,D1
00037D5A <AmiBlitz3.ab2@5669>   SUBQ.w #4,D3
00037D5E <AmiBlitz3.ab2@5670>   BPL.w makelong__loop
00037D60 <AmiBlitz3.ab2@5671>   TST.w D1
00037D64 <AmiBlitz3.ab2@5672>   BNE.w makelong__skip3
00037D68 <AmiBlitz3.ab2@5673>   MOVE.b #"0",(A0)+
00037D6A <AmiBlitz3.ab2@5676>   CLR.b (A0)
00037D6C <AmiBlitz3.ab2@5677> RTS
00037D8C <AmiBlitz3.ab2@5680> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00037E4C <AmiBlitz3.ab2@5681> str_residentpath:       Ds.l 48                                                ;respath org source
00037F0C <AmiBlitz3.ab2@5682> str_residentname:       Ds.l 48                                                ;resname org source
00037F12 <AmiBlitz3.ab2@5686>   MOVE.l macrobase,D0
00037F16 <AmiBlitz3.ab2@5687>    BNE.w create_residentfile
00037F1C <AmiBlitz3.ab2@5688>   MOVE.l newtype_string,D0
00037F20 <AmiBlitz3.ab2@5689>    BNE.w create_residentfile
00037F26 <AmiBlitz3.ab2@5690>   MOVEA.l labelbase,A2
00037F2A <AmiBlitz3.ab2@5693>     CMPA.w #$0,A2
00037F2E <AmiBlitz3.ab2@5694>      BEQ.w menu_createresidentfile__err
00037F36 <AmiBlitz3.ab2@5695>     CMPI.l #$1,$4(A2)
00037F3A <AmiBlitz3.ab2@5696>      BEQ.w create_residentfile
00037F3C <AmiBlitz3.ab2@5697>     MOVEA.l (A2),A2
00037F40 <AmiBlitz3.ab2@5698> BRA.w menu_createresidentfile__loop
00037F6A <AmiBlitz3.ab2@5701>   !basic
00037FCC <AmiBlitz3.ab2@5702> 
00037FEA <AmiBlitz3.ab2@5703>   !asm
00037FEC <AmiBlitz3.ab2@5704> RTS
0003802A <AmiBlitz3.ab2@5710>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00038030 <AmiBlitz3.ab2@5711>   LEA str_residentrequester,A2
00038036 <AmiBlitz3.ab2@5712>   LEA str_residentpath,A0
0003803C <AmiBlitz3.ab2@5713>   LEA str_residentname,A1
00038066 <AmiBlitz3.ab2@5714>   !basic
0003809E <AmiBlitz3.ab2@5715>     Poke$ ?str_residentpath,my_residentsdir$
000380CA <AmiBlitz3.ab2@5716>     Poke$ ?str_residentname,".res"
000380E8 <AmiBlitz3.ab2@5717>   !asm
000380EA <AmiBlitz3.ab2@5720>   JSR (A3)
000380EE <AmiBlitz3.ab2@5722>   BEQ.w menu_createresidentfile__err
000380F0 <AmiBlitz3.ab2@5725>   MOVE.l D0,D1
000380F6 <AmiBlitz3.ab2@5726>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000380FA <AmiBlitz3.ab2@5727>   MOVEA.l _dosbase(PC),A6
000380FE <AmiBlitz3.ab2@5728>   JSR _Open(A6)
00038100 <AmiBlitz3.ab2@5729>   MOVE.l D0,D7                                             ;handle
00038104 <AmiBlitz3.ab2@5730>   BEQ.w menu_createresidentfile__err
00038108 <AmiBlitz3.ab2@5731>   MOVEM.l d2-d7/a0-a6,-(a7)
0003810E <AmiBlitz3.ab2@5732>   LEA devo,a0
00038114 <AmiBlitz3.ab2@5733>   LEA ptr_parameterstore,a1
00038116 <AmiBlitz3.ab2@5736>     MOVE.b (a0)+,(a1)+
0003811A <AmiBlitz3.ab2@5737>   BNE 'l1
0003811C <AmiBlitz3.ab2@5738>   MOVEQ #13,d2
00038122 <AmiBlitz3.ab2@5739>   JSR findlabel2
00038126 <AmiBlitz3.ab2@5740>   BNE 'd
0003812A <AmiBlitz3.ab2@5741>   TST.l 8(a2)
0003812E <AmiBlitz3.ab2@5742>   BEQ 'd2
00038158 <AmiBlitz3.ab2@5743>   !basic
000381BA <AmiBlitz3.ab2@5744>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000381D8 <AmiBlitz3.ab2@5745>   !asm
000381DC <AmiBlitz3.ab2@5746>   MOVEM.l (a7)+,d2-d7/a0-a6
000381E0 <AmiBlitz3.ab2@5747>   MOVEA.l _dosbase(PC),A6
000381E2 <AmiBlitz3.ab2@5748>   MOVE.l d7,d1
000381E6 <AmiBlitz3.ab2@5749>   JSR _Close(a6)
000381EA <AmiBlitz3.ab2@5750> BRA menu_createresidentfile__err
000381EE <AmiBlitz3.ab2@5754>   MOVEM.l (a7)+,d2-d7/a0-a6
000381F2 <AmiBlitz3.ab2@5755>   BSR.w call_setpointerbusy
000381F6 <AmiBlitz3.ab2@5757>   BSR.w AJL_0_7962
000381F8 <AmiBlitz3.ab2@5758>   MOVE.l D7,D1
000381FE <AmiBlitz3.ab2@5759>   MOVE.l #tsthead,D2                                       ;header
00038200 <AmiBlitz3.ab2@5760>   MOVEQ.l #$20,D3
00038204 <AmiBlitz3.ab2@5761>   MOVEA.l _dosbase(PC),A6
00038208 <AmiBlitz3.ab2@5762>   JSR _Write(A6)
0003820A <AmiBlitz3.ab2@5763>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0003820E <AmiBlitz3.ab2@5764>   BSR.w restypes
00038212 <AmiBlitz3.ab2@5765>   BSR.w resmacs
00038216 <AmiBlitz3.ab2@5766>   BSR.w resconsts
00038218 <AmiBlitz3.ab2@5767>   MOVE.l D6,D3
0003821A <AmiBlitz3.ab2@5768>   ADDQ.l #3,D3
00038220 <AmiBlitz3.ab2@5769>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00038222 <AmiBlitz3.ab2@5770>   MOVE.l D3,-(A7)
00038224 <AmiBlitz3.ab2@5771>   SUB.l D6,D3
00038228 <AmiBlitz3.ab2@5772>   BEQ.w menu_createresidentfile__noalign
0003822E <AmiBlitz3.ab2@5773>   MOVE.l #writelist,D2
00038230 <AmiBlitz3.ab2@5774>   MOVE.l D7,D1
00038236 <AmiBlitz3.ab2@5775>   MOVEA.l _dosbase,A6
0003823A <AmiBlitz3.ab2@5776>   JSR _Write(A6)
00038244 <AmiBlitz3.ab2@5779>    MOVE.l hunkoffsetcounter,tstsize3
00038248 <AmiBlitz3.ab2@5780>    BEQ.w menu_createresidentfile__skip2a
0003824A <AmiBlitz3.ab2@5781>   MOVE.l D7,D1
00038250 <AmiBlitz3.ab2@5782>   MOVE.l #tstend,D2
00038252 <AmiBlitz3.ab2@5783>   MOVEQ.l #$0C,D3
00038258 <AmiBlitz3.ab2@5784>   MOVEA.l _dosbase,A6
0003825C <AmiBlitz3.ab2@5785>    JSR _Write(A6)
00038262 <AmiBlitz3.ab2@5789>   MOVEA.l hunkoffsetbase,A2
00038266 <AmiBlitz3.ab2@5792>   CMPA.w #$0,A2
0003826A <AmiBlitz3.ab2@5793>    BEQ.w menu_createresidentfile__skip2
0003826E <AmiBlitz3.ab2@5794>   LEA $4(A2),A1
00038270 <AmiBlitz3.ab2@5795>   MOVE.l D7,D1
00038272 <AmiBlitz3.ab2@5796>   MOVE.l A1,D2
00038274 <AmiBlitz3.ab2@5797>   MOVEQ.l #$04,D3
0003827A <AmiBlitz3.ab2@5798>   MOVEA.l _dosbase,A6
0003827E <AmiBlitz3.ab2@5799>    JSR _Write(A6)
00038280 <AmiBlitz3.ab2@5800>   MOVEA.l (A2),A2
00038284 <AmiBlitz3.ab2@5801> BRA.w menu_createresidentfile__oloop
00038286 <AmiBlitz3.ab2@5804>   MOVE.l D7,D1
0003828C <AmiBlitz3.ab2@5805>   MOVE.l #zero,D2
0003828E <AmiBlitz3.ab2@5806>   MOVEQ.l #$04,D3
00038294 <AmiBlitz3.ab2@5807>   MOVEA.l _dosbase,A6
00038298 <AmiBlitz3.ab2@5808>   JSR _Write(A6)
0003829A <AmiBlitz3.ab2@5811>   MOVE.l D7,D1
000382A0 <AmiBlitz3.ab2@5812>   MOVE.l #tstdone,D2
000382A2 <AmiBlitz3.ab2@5813>   MOVEQ.l #$04,D3
000382A8 <AmiBlitz3.ab2@5814>   MOVEA.l _dosbase,A6
000382AC <AmiBlitz3.ab2@5815>    JSR _Write(A6)
000382AE <AmiBlitz3.ab2@5816>   MOVE.l (A7)+,D0
000382B0 <AmiBlitz3.ab2@5817>   LSR.l #2,D0
000382B6 <AmiBlitz3.ab2@5818>   MOVE.l D0,temp1
000382B8 <AmiBlitz3.ab2@5819>   MOVE.l D7,D1
000382BA <AmiBlitz3.ab2@5820>   MOVEQ.l #$14,D2
000382BC <AmiBlitz3.ab2@5821>   MOVEQ.l #-$01,D3
000382C0 <AmiBlitz3.ab2@5822>   JSR _Seek(A6)
000382C2 <AmiBlitz3.ab2@5823>   MOVE.l D7,D1
000382C8 <AmiBlitz3.ab2@5824>   MOVE.l #temp1,D2
000382CA <AmiBlitz3.ab2@5825>   MOVEQ.l #$04,D3
000382CE <AmiBlitz3.ab2@5826>    JSR _Write(A6)
000382D0 <AmiBlitz3.ab2@5827>   MOVE.l D7,D1
000382D2 <AmiBlitz3.ab2@5828>   MOVEQ.l #$1C,D2
000382D4 <AmiBlitz3.ab2@5829>   MOVEQ.l #-$01,D3
000382D8 <AmiBlitz3.ab2@5830>    JSR _Seek(A6)
000382DA <AmiBlitz3.ab2@5831>   MOVE.l D7,D1
000382E0 <AmiBlitz3.ab2@5832>   MOVE.l #temp1,D2
000382E2 <AmiBlitz3.ab2@5833>   MOVEQ.l #$04,D3
000382E6 <AmiBlitz3.ab2@5834>    JSR _Write(A6)
000382E8 <AmiBlitz3.ab2@5835>   MOVE.l D7,D1
000382EC <AmiBlitz3.ab2@5836>    JSR _Close(A6)
000382F0 <AmiBlitz3.ab2@5837> BRA.w call_setpointernormal
000382F2 <AmiBlitz3.ab2@5841>   ADDQ.w #5,D1
000382F4 <AmiBlitz3.ab2@5842>   ADDQ.b #8,D0
000382F8 <AmiBlitz3.ab2@5845>     CMPA.w #$0,A2
000382FC <AmiBlitz3.ab2@5846>     BEQ.w writelist__done
00038300 <AmiBlitz3.ab2@5847>      BSR.w writeitem
00038302 <AmiBlitz3.ab2@5848>     MOVEA.l (A2),A2
00038306 <AmiBlitz3.ab2@5849> BRA.w writelist__loop
00038308 <AmiBlitz3.ab2@5852> RTS
0003830A <AmiBlitz3.ab2@5855>   MOVEQ.l #$00,D3
0003830E <AmiBlitz3.ab2@5856>   MOVE.b $0(A2,D5.W),D3
00038310 <AmiBlitz3.ab2@5857>   ADDQ.w #1,D3
00038314 <AmiBlitz3.ab2@5858>   BCLR #$0,D3                                              ;word align
00038316 <AmiBlitz3.ab2@5859>   MOVE.l (A2),-(A7)
0003831A <AmiBlitz3.ab2@5860>    BEQ.w writeitem__skip
0003831E <AmiBlitz3.ab2@5861>    BSR.w resoff
00038320 <AmiBlitz3.ab2@5862>   ADD.l D3,D6
00038322 <AmiBlitz3.ab2@5863>   MOVE.l D6,(A2)
00038324 <AmiBlitz3.ab2@5864>   SUB.l D3,D6
00038326 <AmiBlitz3.ab2@5867>    ADD.l D3,D6
00038328 <AmiBlitz3.ab2@5868>   MOVE.l A2,D2
0003832A <AmiBlitz3.ab2@5869>   MOVE.l D7,D1
00038330 <AmiBlitz3.ab2@5870>   MOVEA.l _dosbase,A6
00038334 <AmiBlitz3.ab2@5871>    JSR _Write(A6)
00038336 <AmiBlitz3.ab2@5872>   MOVE.l (A7)+,(A2)
00038338 <AmiBlitz3.ab2@5873> RTS
0003833A <AmiBlitz3.ab2@5876>   MOVE.l D6,D2
0003833E <AmiBlitz3.ab2@5877> BRA.w addhunkoffset
00038342 <AmiBlitz3.ab2@5881>     CMPA.w #$0,A2
00038346 <AmiBlitz3.ab2@5882>      BEQ.w writeoffs__done
0003834C <AmiBlitz3.ab2@5883>     MOVEA.l newtypebase,A1
0003834E <AmiBlitz3.ab2@5884>     MOVEQ.l #$00,D1
00038352 <AmiBlitz3.ab2@5887>       CMPA.w #$0,A1
00038356 <AmiBlitz3.ab2@5888>       BEQ.w writeoffs__found
0003835A <AmiBlitz3.ab2@5889>       CMPA.l $A(A2),A1
0003835E <AmiBlitz3.ab2@5890>        BEQ.w writeoffs__found
00038360 <AmiBlitz3.ab2@5891>       ADDQ.w #1,D1
00038362 <AmiBlitz3.ab2@5892>       MOVEA.l (A1),A1
00038366 <AmiBlitz3.ab2@5893> BRA.w writeoffs__loop2
0003836A <AmiBlitz3.ab2@5896>     MOVE.w $A(A2),-(A7)
0003836E <AmiBlitz3.ab2@5897>     MOVE.w D1,$A(A2)
00038372 <AmiBlitz3.ab2@5898>      BSR.w writeitem
00038376 <AmiBlitz3.ab2@5899>     MOVE.w (A7)+,$A(A2)
00038378 <AmiBlitz3.ab2@5900>     MOVEA.l (A2),A2
0003837C <AmiBlitz3.ab2@5901> BRA.w writeoffs
0003837E <AmiBlitz3.ab2@5904> RTS
00038380 <AmiBlitz3.ab2@5908>   MOVEQ.l #$00,D0
00038384 <AmiBlitz3.ab2@5911>   CMPA.w #$0,A2
00038388 <AmiBlitz3.ab2@5912>    BEQ.w countem__done
0003838A <AmiBlitz3.ab2@5913>   ADDQ.w #1,D0
0003838C <AmiBlitz3.ab2@5914>   MOVEA.l (A2),A2
00038390 <AmiBlitz3.ab2@5915> BRA.w countem__loop
00038396 <AmiBlitz3.ab2@5918>   MOVE.w D0,temp1
00038398 <AmiBlitz3.ab2@5919>   MOVE.l D7,D1
0003839E <AmiBlitz3.ab2@5920>   MOVE.l #temp1,D2
000383A0 <AmiBlitz3.ab2@5921>   MOVEQ.l #$02,D3
000383A2 <AmiBlitz3.ab2@5922>   ADDQ.l #2,D6
000383A8 <AmiBlitz3.ab2@5923>   MOVEA.l _dosbase,A6
000383AC <AmiBlitz3.ab2@5924> JMP _Write(A6)
000383B2 <AmiBlitz3.ab2@5928>    TST.b resdisable
000383B6 <AmiBlitz3.ab2@5929>    BEQ resmacs__l1
000383BC <AmiBlitz3.ab2@5930>    MOVE.l currentmacroaddr,a3
000383C2 <AmiBlitz3.ab2@5931>    CMP.l #0,a3
000383C6 <AmiBlitz3.ab2@5932>    BEQ resmacs__l1
000383C8 <AmiBlitz3.ab2@5933>    MOVE.l (a3),a3
000383CC <AmiBlitz3.ab2@5934> BRA resmacs__l2
000383D2 <AmiBlitz3.ab2@5937>   MOVEA.l macrobase,A3                                     ;??begin org code??
000383D4 <AmiBlitz3.ab2@5940>   MOVEA.l A3,A2
000383D8 <AmiBlitz3.ab2@5941>   BSR.w countem
000383DC <AmiBlitz3.ab2@5944>    CMPA.w #$0,A3
000383E0 <AmiBlitz3.ab2@5945>    BEQ.w resmacs__done
000383E2 <AmiBlitz3.ab2@5946>   MOVE.l D6,D5
000383E4 <AmiBlitz3.ab2@5947>   MOVE.l (A3),-(A7)
000383E8 <AmiBlitz3.ab2@5948>   MOVE.l $4(A3),-(A7)
000383EA <AmiBlitz3.ab2@5949>   MOVEQ.l #$00,D3
000383EE <AmiBlitz3.ab2@5950>   MOVE.b $C(A3),D3
000383F0 <AmiBlitz3.ab2@5951>   ADDQ.w #1,D3
000383F4 <AmiBlitz3.ab2@5952>   BCLR #$0,D3
000383F6 <AmiBlitz3.ab2@5953>   ADD.l D3,D6                                              ;add len of struct
000383FA <AmiBlitz3.ab2@5954>   TST.w $8(A3)
000383FE <AmiBlitz3.ab2@5955>    BEQ.w resmacs__notext
00038402 <AmiBlitz3.ab2@5956>   MOVE.l D6,$4(A3)
00038404 <AmiBlitz3.ab2@5957>   MOVE.l D5,D2
00038406 <AmiBlitz3.ab2@5958>   ADDQ.l #4,D2
0003840A <AmiBlitz3.ab2@5959>    BSR.w addhunkoffset
0003840C <AmiBlitz3.ab2@5962>   MOVEQ.l #$00,D4
00038410 <AmiBlitz3.ab2@5963>   MOVE.w $8(A3),D4
00038412 <AmiBlitz3.ab2@5964>   ADDQ.w #1,D4
00038416 <AmiBlitz3.ab2@5965>   BCLR #$0,D4
00038418 <AmiBlitz3.ab2@5966>   ADD.l D4,D6
0003841A <AmiBlitz3.ab2@5967>   TST.l (A3)
0003841E <AmiBlitz3.ab2@5968>    BEQ.w resmacs__nomore
00038420 <AmiBlitz3.ab2@5969>   MOVE.l D6,(A3)
00038422 <AmiBlitz3.ab2@5970>   MOVE.l D5,D2
00038426 <AmiBlitz3.ab2@5971>    BSR.w addhunkoffset
00038428 <AmiBlitz3.ab2@5974>   MOVE.l A3,D2
0003842A <AmiBlitz3.ab2@5975>   MOVE.l D7,D1
00038430 <AmiBlitz3.ab2@5977>    MOVEA.l _dosbase,A6
00038434 <AmiBlitz3.ab2@5978>    JSR _Write(a6)
00038436 <AmiBlitz3.ab2@5979>   TST.l D4
0003843A <AmiBlitz3.ab2@5980>    BEQ.w resmacs__skip
0003843C <AmiBlitz3.ab2@5981>   MOVE.l (A7),D2
0003843E <AmiBlitz3.ab2@5982>   MOVE.l D4,D3
00038440 <AmiBlitz3.ab2@5983>   MOVE.l D7,D1
00038446 <AmiBlitz3.ab2@5985>     MOVEA.l _dosbase,A6
0003844A <AmiBlitz3.ab2@5986>    JSR _Write(A6)
0003844E <AmiBlitz3.ab2@5989>   MOVE.l (A7)+,$4(A3)
00038450 <AmiBlitz3.ab2@5990>   MOVE.l (A7)+,(A3)
00038452 <AmiBlitz3.ab2@5991>   MOVEA.l (A3),A3
00038456 <AmiBlitz3.ab2@5992> BRA.w resmacs__loop
00038458 <AmiBlitz3.ab2@5995> RTS
0003845E <AmiBlitz3.ab2@5999>   TST.b resdisable
00038462 <AmiBlitz3.ab2@6000>   BEQ restypes__l1
00038468 <AmiBlitz3.ab2@6001>   MOVE.l lastrestype,a3
0003846E <AmiBlitz3.ab2@6002>   CMP.l #0,a3
00038472 <AmiBlitz3.ab2@6003>   BEQ restypes__l1
00038474 <AmiBlitz3.ab2@6004>   MOVE.l (a3),a3
00038478 <AmiBlitz3.ab2@6005> BRA restypes__l2
0003847E <AmiBlitz3.ab2@6008>   MOVEA.l newtype_string,A3
00038480 <AmiBlitz3.ab2@6011>   MOVEA.l A3,A2
00038484 <AmiBlitz3.ab2@6012>    BSR.w countem
00038488 <AmiBlitz3.ab2@6015>    CMPA.w #$0,A3
0003848C <AmiBlitz3.ab2@6016>    BEQ.w restypes__done
0003848E <AmiBlitz3.ab2@6017>   MOVE.l D6,-(A7)
00038492 <AmiBlitz3.ab2@6018>   MOVEA.l $4(A3),A2
00038494 <AmiBlitz3.ab2@6019>   MOVEQ.l #$0E,D5
00038498 <AmiBlitz3.ab2@6020>    BSR.w writeoffs
0003849A <AmiBlitz3.ab2@6021>   MOVE.l (A7)+,D0
0003849E <AmiBlitz3.ab2@6022>   MOVE.l $4(A3),-(A7)
000384A2 <AmiBlitz3.ab2@6023>   MOVE.l D0,$4(A3)
000384A4 <AmiBlitz3.ab2@6024>   MOVE.l D6,D2
000384A6 <AmiBlitz3.ab2@6025>   ADDQ.l #4,D2
000384AA <AmiBlitz3.ab2@6026>    BSR.w addhunkoffset
000384AC <AmiBlitz3.ab2@6027>   MOVEQ.l #$00,D3
000384B0 <AmiBlitz3.ab2@6028>   MOVE.b $A(A3),D3
000384B2 <AmiBlitz3.ab2@6029>   ADDQ.w #1,D3
000384B6 <AmiBlitz3.ab2@6030>   BCLR #$0,D3
000384B8 <AmiBlitz3.ab2@6031>   ADD.l D3,D6
000384BA <AmiBlitz3.ab2@6032>   MOVE.l A3,D2
000384BC <AmiBlitz3.ab2@6033>   MOVE.l D7,D1
000384C2 <AmiBlitz3.ab2@6035>     MOVEA.l _dosbase,A6
000384C6 <AmiBlitz3.ab2@6036>     JSR _Write(A6)
000384CA <AmiBlitz3.ab2@6037>   MOVE.l (A7)+,$4(A3)
000384CC <AmiBlitz3.ab2@6038>   MOVEA.l (A3),A3
000384D0 <AmiBlitz3.ab2@6039> BRA.w restypes__loop
000384D2 <AmiBlitz3.ab2@6042> RTS
000384D8 <AmiBlitz3.ab2@6046>    TST.b resdisable
000384DC <AmiBlitz3.ab2@6047>    BEQ resconsts__l1
000384E2 <AmiBlitz3.ab2@6048>    MOVE.l currentlabeladdr,a2
000384E8 <AmiBlitz3.ab2@6049>    CMP.l #0,a2
000384EC <AmiBlitz3.ab2@6050>    BEQ resconsts__l1
000384EE <AmiBlitz3.ab2@6051>    MOVE.l (a2),a2
000384F2 <AmiBlitz3.ab2@6052> BRA resconsts__l2
000384F8 <AmiBlitz3.ab2@6055>    MOVEA.l labelbase,A2
000384FA <AmiBlitz3.ab2@6058>    MOVEQ.l #$00,D0
000384FE <AmiBlitz3.ab2@6061>    CMPA.w #$0,A2
00038502 <AmiBlitz3.ab2@6062>    BEQ.w resconsts__done
0003850A <AmiBlitz3.ab2@6063>   CMPI.l #$1,$4(A2)
0003850E <AmiBlitz3.ab2@6064>    BNE.w resconsts__next
00038510 <AmiBlitz3.ab2@6065>   ADDQ.w #1,D0
00038512 <AmiBlitz3.ab2@6068>   MOVEA.l (A2),A2
00038516 <AmiBlitz3.ab2@6069> BRA.w resconsts__loop
0003851C <AmiBlitz3.ab2@6072>   MOVE.w D0,temp1
0003851E <AmiBlitz3.ab2@6073>   MOVE.l D7,D1
00038524 <AmiBlitz3.ab2@6074>   MOVE.l #temp1,D2
00038526 <AmiBlitz3.ab2@6075>   MOVEQ.l #$02,D3
00038528 <AmiBlitz3.ab2@6076>   ADDQ.l #2,D6
0003852E <AmiBlitz3.ab2@6078>     MOVEA.l _dosbase,A6
00038532 <AmiBlitz3.ab2@6079>     JSR _Write(A6)
00038538 <AmiBlitz3.ab2@6080>    TST.b resdisable
0003853C <AmiBlitz3.ab2@6081>    BEQ resconsts__done_l1
00038542 <AmiBlitz3.ab2@6082>    MOVE.l currentlabeladdr,a2
00038548 <AmiBlitz3.ab2@6083>    CMP.l #0,a2
0003854C <AmiBlitz3.ab2@6084>    BEQ resconsts__done_l1
0003854E <AmiBlitz3.ab2@6085>    MOVE.l (a2),a2
00038552 <AmiBlitz3.ab2@6086> BRA resconsts__loop2
00038558 <AmiBlitz3.ab2@6089>    MOVEA.l labelbase,A2                                    ;write resident labels
0003855C <AmiBlitz3.ab2@6092>    CMPA.w #$0,A2
00038560 <AmiBlitz3.ab2@6093>    BEQ.w resconsts__done2
00038568 <AmiBlitz3.ab2@6094>   CMPI.l #$1,$4(A2)
0003856C <AmiBlitz3.ab2@6095>    BNE.w resconsts__next2
0003856E <AmiBlitz3.ab2@6096>    MOVEQ.l #$00,D3
00038572 <AmiBlitz3.ab2@6097>   MOVE.b $12(A2),D3                                        ;length
00038574 <AmiBlitz3.ab2@6098>   ADDQ.w #1,D3
00038578 <AmiBlitz3.ab2@6099>   BCLR #$0,D3
0003857A <AmiBlitz3.ab2@6100>   MOVE.l D6,D2
0003857C <AmiBlitz3.ab2@6101>   ADD.l D3,D6
0003857E <AmiBlitz3.ab2@6104>   MOVE.l (A2),-(A7)
00038580 <AmiBlitz3.ab2@6105>   TST.l (A2)
00038584 <AmiBlitz3.ab2@6106>    BEQ.w resconsts__nonext
00038586 <AmiBlitz3.ab2@6107>   MOVE.l D6,(A2)
0003858A <AmiBlitz3.ab2@6108>    BSR.w addhunkoffset
0003858C <AmiBlitz3.ab2@6111>   MOVE.l A2,D2
0003858E <AmiBlitz3.ab2@6112>   MOVE.l D7,D1
00038594 <AmiBlitz3.ab2@6114>     MOVEA.l _dosbase,A6
00038598 <AmiBlitz3.ab2@6115>     JSR _Write(A6)
0003859A <AmiBlitz3.ab2@6116>   MOVE.l (A7)+,(A2)
0003859C <AmiBlitz3.ab2@6119>   MOVEA.l (A2),A2
000385A0 <AmiBlitz3.ab2@6120> BRA.w resconsts__loop2
000385A2 <AmiBlitz3.ab2@6123> RTS
000385CC <AmiBlitz3.ab2@6127>    !basic
000385D2 <AmiBlitz3.ab2@6128>     MOVE.l ptr_resfile,d0
000385E2 <AmiBlitz3.ab2@6129>     resfileP.l = Peek.l(?ptr_resfile)
000385EC <AmiBlitz3.ab2@6130>     If resfileP
00038614 <AmiBlitz3.ab2@6131>       resfile$ = Peek.s(resfileP)
00038660 <AmiBlitz3.ab2@6132>       tests.b = Instr(resfile$,"/")
000386AC <AmiBlitz3.ab2@6133>       testc.b = Instr(resfile$,":")
000386CE <AmiBlitz3.ab2@6134>       If tests=0 AND testc=0
0003874E <AmiBlitz3.ab2@6135>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00038760 <AmiBlitz3.ab2@6136>         Poke.l ?ptr_resfile,&resfile$
00038766 <AmiBlitz3.ab2@6138>     Else
000387A0 <AmiBlitz3.ab2@6139>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000387BE <AmiBlitz3.ab2@6141>    !asm
000387C0 <AmiBlitz3.ab2@6142> RTS
000387C6 <AmiBlitz3.ab2@6146> 
000387CC <AmiBlitz3.ab2@6147>   MOVE.l A7,errstack
000387D6 <AmiBlitz3.ab2@6150>   MOVE.l #next_resentry,errcont
000387DE <AmiBlitz3.ab2@6151>   MOVE.w #$FFFF,ezerr
000387E2 <AmiBlitz3.ab2@6152>   BSR.w Aclearallvars
000387E6 <AmiBlitz3.ab2@6153>   BSR.w free_residents
000387EC <AmiBlitz3.ab2@6155>   LEA residents_table,A5
000387EE <AmiBlitz3.ab2@6156>   MOVEQ.l #$07,D6
000387F0 <AmiBlitz3.ab2@6159>     TST.b (A5)
000387F4 <AmiBlitz3.ab2@6160>     BEQ.w next_resentry
000387FA <AmiBlitz3.ab2@6161>     MOVE.l A5,ptr_resfile
000387FE <AmiBlitz3.ab2@6162>     BSR check_residentpath
00038804 <AmiBlitz3.ab2@6163>     MOVE.l ptr_resfile,d1
0003880A <AmiBlitz3.ab2@6164>     MOVEA.l _dosbase,A6
0003880E <AmiBlitz3.ab2@6165>     JSR _LoadSeg(A6)
00038812 <AmiBlitz3.ab2@6166>     MOVE.l D0,$40(A5)
00038816 <AmiBlitz3.ab2@6167>     BNE.w reloadresident__yeah
0003881A <AmiBlitz3.ab2@6168>     BSR.w reserr
0003881C <AmiBlitz3.ab2@6171>     MOVEA.l D0,A3
0003881E <AmiBlitz3.ab2@6172>     ADDA.l A3,A3
00038820 <AmiBlitz3.ab2@6173>     ADDA.l A3,A3
00038822 <AmiBlitz3.ab2@6174>     ADDQ.w #4,A3                                           ;start of res
00038826 <AmiBlitz3.ab2@6175>     BSR.w JL_0_5A9E
0003882A <AmiBlitz3.ab2@6176>     BSR.w JL_0_5A62                                        ;add macros to list
0003882E <AmiBlitz3.ab2@6177>     BSR.w JL_0_5A32                                        ;read labels
00038832 <AmiBlitz3.ab2@6180>     LEA ResidentEntryStep(A5),A5       ;$44
00038836 <AmiBlitz3.ab2@6181>   DBF D6,reloadresident__loop
00038840 <AmiBlitz3.ab2@6186>   MOVE.l #free_residents,errcont
00038846 <AmiBlitz3.ab2@6188>   MOVEA.l newtype_string,A3
00038848 <AmiBlitz3.ab2@6189>   MOVEQ.l #$0B,D7
0003884C <AmiBlitz3.ab2@6190>   BSR.w checkclash
00038852 <AmiBlitz3.ab2@6192>   MOVEA.l macrobase,A3
00038854 <AmiBlitz3.ab2@6193>   MOVEQ.l #$d,D7
00038858 <AmiBlitz3.ab2@6194>   BSR.w checkclash
0003885E <AmiBlitz3.ab2@6196>   MOVEA.l firstconst,A3
00038860 <AmiBlitz3.ab2@6197>   MOVEQ.l #$19,D7
00038864 <AmiBlitz3.ab2@6198>   BSR.w checkclash
00038866 <AmiBlitz3.ab2@6201> RTS
00038868 <AmiBlitz3.ab2@6205>   MOVEA.l A3,A4
0003886C <AmiBlitz3.ab2@6208>     CMPA.w #$0,A4
00038870 <AmiBlitz3.ab2@6209>     BEQ.w checkclash__done
00038876 <AmiBlitz3.ab2@6211>     LEA ptr_parameterstore,A0
0003887A <AmiBlitz3.ab2@6212>     LEA $0(A4,D7.W),A1
0003887C <AmiBlitz3.ab2@6213>     MOVEQ.l #-$01,D2
0003887E <AmiBlitz3.ab2@6216>       ADDQ.w #1,D2
00038880 <AmiBlitz3.ab2@6217>       MOVE.b (A1)+,(A0)+
00038884 <AmiBlitz3.ab2@6218>     BNE.w checkclash__loop2
00038886 <AmiBlitz3.ab2@6219>     MOVEA.l A3,A2
0003888A <AmiBlitz3.ab2@6222>     BSR.w findlab
0003888E <AmiBlitz3.ab2@6223>     BNE.w checkclash__next                                  ;not found
00038890 <AmiBlitz3.ab2@6224>     CMPA.l A2,A4
00038894 <AmiBlitz3.ab2@6225>     BEQ.w checkclash__l1
00038896 <AmiBlitz3.ab2@6226>     MOVE.l a1,a5
0003889A <AmiBlitz3.ab2@6227> BRA clasherr
0003889E <AmiBlitz3.ab2@6230> BRA.w checkclash__more
000388A0 <AmiBlitz3.ab2@6233>     MOVEA.l (A4),A4
000388A4 <AmiBlitz3.ab2@6234> BRA.w checkclash__loop
000388A6 <AmiBlitz3.ab2@6237> RTS
000388AC <AmiBlitz3.ab2@6241>   MOVEA.l _dosbase,A6
000388B2 <AmiBlitz3.ab2@6243>   LEA newtype_string,A0
000388B8 <AmiBlitz3.ab2@6244>   MOVE.l A0,lastrestype
000388BA <AmiBlitz3.ab2@6245>   CLR.l (A0)
000388C0 <AmiBlitz3.ab2@6247>   LEA macrobase,A0
000388C6 <AmiBlitz3.ab2@6248>   MOVE.l A0,currentmacroaddr
000388C8 <AmiBlitz3.ab2@6249>   CLR.l (A0)
000388CE <AmiBlitz3.ab2@6251>   LEA labelbase,A0
000388D4 <AmiBlitz3.ab2@6252>   MOVE.l A0,currentlabeladdr
000388D6 <AmiBlitz3.ab2@6253>   CLR.l (A0)
000388DC <AmiBlitz3.ab2@6254>   CLR.w rescnt
00038914 <AmiBlitz3.ab2@6258>   !ComData_SetB{comByte_DebugMode,debugmode}
0003891A <AmiBlitz3.ab2@6261>   LEA residents_table,A2
0003891C <AmiBlitz3.ab2@6262>   MOVEQ.l #$07,D2
00038920 <AmiBlitz3.ab2@6265>      MOVE.l $40(A2),D1
00038924 <AmiBlitz3.ab2@6266>      BEQ.w free_residents__next
00038928 <AmiBlitz3.ab2@6267>       CLR.l $40(A2)
0003892E <AmiBlitz3.ab2@6268>       MOVEA.l _dosbase,A6
00038932 <AmiBlitz3.ab2@6269>       JSR _UnLoadSeg(A6)
00038936 <AmiBlitz3.ab2@6272>      LEA ResidentEntryStep(A2),A2   ; $44
0003893A <AmiBlitz3.ab2@6273>    DBF D2,free_residents__loop
0003893C <AmiBlitz3.ab2@6275> RTS
0003893E <AmiBlitz3.ab2@6279>   MOVE.w (A3)+,D1
00038942 <AmiBlitz3.ab2@6280>   BEQ.w JL_0_5A60
00038948 <AmiBlitz3.ab2@6281>   MOVEA.l currentlabeladdr,A2
0003894A <AmiBlitz3.ab2@6282>   MOVE.l A3,(A2)
0003894C <AmiBlitz3.ab2@6283>   SUBQ.w #1,D1
0003894E <AmiBlitz3.ab2@6286>     MOVEA.l A3,A2
00038950 <AmiBlitz3.ab2@6287>     MOVEA.l (A3),A3
00038954 <AmiBlitz3.ab2@6288>   DBF D1,JL_0_5A42
00038956 <AmiBlitz3.ab2@6290>   CLR.l (a2)                                               ;bugfix for object
0003895C <AmiBlitz3.ab2@6291>   MOVE.l A2,currentlabeladdr
0003895E <AmiBlitz3.ab2@6292>   MOVEA.l A2,A3
00038960 <AmiBlitz3.ab2@6293>   MOVEQ.l #$00,D0
00038964 <AmiBlitz3.ab2@6294>   MOVE.b $12(A3),D0
00038966 <AmiBlitz3.ab2@6295>   ADDQ.w #1,D0
0003896A <AmiBlitz3.ab2@6296>   BCLR #$0,D0
0003896C <AmiBlitz3.ab2@6297>   ADDA.w D0,A3
0003896E <AmiBlitz3.ab2@6300> RTS
00038970 <AmiBlitz3.ab2@6304>   MOVE.w (A3)+,D1
00038974 <AmiBlitz3.ab2@6305>   BEQ.w JL_0_5A9C
0003897A <AmiBlitz3.ab2@6307>   MOVEA.l currentmacroaddr,A2
0003897C <AmiBlitz3.ab2@6308>   MOVE.l A3,(A2)
0003897E <AmiBlitz3.ab2@6309>   SUBQ.w #1,D1
00038980 <AmiBlitz3.ab2@6312>     MOVEA.l A3,A2
00038982 <AmiBlitz3.ab2@6313>     MOVEA.l (A3),A3
00038986 <AmiBlitz3.ab2@6314>   DBF D1,JL_0_5A72
0003898C <AmiBlitz3.ab2@6316>   MOVE.l A2,currentmacroaddr
0003898E <AmiBlitz3.ab2@6317>   MOVEA.l A2,A3
00038990 <AmiBlitz3.ab2@6318>   MOVEQ.l #$00,D0
00038994 <AmiBlitz3.ab2@6319>   MOVE.b $C(A3),D0
00038996 <AmiBlitz3.ab2@6320>   ADDQ.w #1,D0
0003899A <AmiBlitz3.ab2@6321>   BCLR #$0,D0
0003899E <AmiBlitz3.ab2@6322>   MOVE.w $8(A3),D1
000389A0 <AmiBlitz3.ab2@6323>   ADDQ.w #1,D1
000389A4 <AmiBlitz3.ab2@6324>   BCLR #$0,D1
000389A6 <AmiBlitz3.ab2@6325>   ADDA.w D0,A3
000389A8 <AmiBlitz3.ab2@6326>   ADDA.w D1,A3
000389AA <AmiBlitz3.ab2@6329> RTS
000389AC <AmiBlitz3.ab2@6333>   MOVE.w (A3)+,D1
000389B0 <AmiBlitz3.ab2@6334>   BEQ.w JL_0_5B38
000389B2 <AmiBlitz3.ab2@6335>   MOVE.w D1,-(A7)
000389B4 <AmiBlitz3.ab2@6336>   SUBQ.w #1,D1
000389BA <AmiBlitz3.ab2@6337>   MOVEA.l lastrestype,A2
000389BC <AmiBlitz3.ab2@6338>   MOVE.l A2,-(A7)
000389BE <AmiBlitz3.ab2@6341>       MOVE.l (A3),D0
000389C2 <AmiBlitz3.ab2@6342>       BEQ.w JL_0_5ABC
000389C4 <AmiBlitz3.ab2@6343>       MOVEA.l D0,A3
000389C8 <AmiBlitz3.ab2@6344> BRA.w JL_0_5AB0
000389CC <AmiBlitz3.ab2@6347>       MOVE.b $E(A3),D0
000389CE <AmiBlitz3.ab2@6348>       ADDQ.w #1,D0
000389D2 <AmiBlitz3.ab2@6349>       BCLR #$0,D0
000389D4 <AmiBlitz3.ab2@6350>       ADDA.w D0,A3
000389D6 <AmiBlitz3.ab2@6351>       MOVE.l A3,(A2)
000389D8 <AmiBlitz3.ab2@6352>       MOVEA.l A3,A2
000389DA <AmiBlitz3.ab2@6353>       MOVEQ.l #$00,D0
000389DE <AmiBlitz3.ab2@6354>       MOVE.b $A(A3),D0
000389E0 <AmiBlitz3.ab2@6355>       ADDQ.w #1,D0
000389E4 <AmiBlitz3.ab2@6356>       BCLR #$0,D0
000389E6 <AmiBlitz3.ab2@6357>       ADDA.w D0,A3
000389EA <AmiBlitz3.ab2@6358>   DBF D1,JL_0_5AB0
000389EC <AmiBlitz3.ab2@6360>   MOVEA.l (A7)+,A0
000389EE <AmiBlitz3.ab2@6361>   MOVEA.l (A0),A0
000389F2 <AmiBlitz3.ab2@6364>     CMPA.w #$0,A0
000389F6 <AmiBlitz3.ab2@6365>     BEQ.w JL_0_5B2A
000389FA <AmiBlitz3.ab2@6366>     MOVEA.l $4(A0),A1
000389FE <AmiBlitz3.ab2@6369>     CMPA.w #$0,A1
00038A02 <AmiBlitz3.ab2@6370>     BEQ.w JL_0_5B24
00038A06 <AmiBlitz3.ab2@6371>     MOVE.w $A(A1),D0
00038A0C <AmiBlitz3.ab2@6372>     MOVEA.l newtypebase,A4
00038A10 <AmiBlitz3.ab2@6373>     CMP.w #$7,D0
00038A14 <AmiBlitz3.ab2@6374>     BCS.w JL_0_5B0E
00038A1A <AmiBlitz3.ab2@6375>     SUB.w rescnt,D0
00038A1C <AmiBlitz3.ab2@6378>     SUBQ.w #1,D0
00038A20 <AmiBlitz3.ab2@6379>     BMI.w JL_0_5B1A
00038A22 <AmiBlitz3.ab2@6382>        MOVEA.l (A4),A4
00038A26 <AmiBlitz3.ab2@6383>   DBF D0,JL_0_5B14
00038A2A <AmiBlitz3.ab2@6386>     MOVE.l A4,$A(A1)
00038A2C <AmiBlitz3.ab2@6387>     MOVEA.l (A1),A1
00038A30 <AmiBlitz3.ab2@6388> BRA.w JL_0_5AEE
00038A32 <AmiBlitz3.ab2@6391>     MOVEA.l (A0),A0
00038A36 <AmiBlitz3.ab2@6392> BRA.w JL_0_5AE2
00038A38 <AmiBlitz3.ab2@6395>   MOVE.w (A7)+,D0
00038A3E <AmiBlitz3.ab2@6396>   ADD.w D0,rescnt
00038A44 <AmiBlitz3.ab2@6397>   MOVE.l A2,lastrestype
00038A46 <AmiBlitz3.ab2@6400> RTS
00038A4C <AmiBlitz3.ab2@6404>   LEA tokens,A0
00038A50 <AmiBlitz3.ab2@6405>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00038A52 <AmiBlitz3.ab2@6408>     MOVEA.l (A0),A0
00038A56 <AmiBlitz3.ab2@6409>   DBF D0,JL_0_5BD0
00038A5C <AmiBlitz3.ab2@6411>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00038A60 <AmiBlitz3.ab2@6412>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00038A64 <AmiBlitz3.ab2@6415>       LEA $6(A0),A2
00038A66 <AmiBlitz3.ab2@6418>         TST.b (A2)+
00038A6A <AmiBlitz3.ab2@6419>       BNE.w JL_0_5BE4
00038A6C <AmiBlitz3.ab2@6422>         TST.b (A2)+
00038A70 <AmiBlitz3.ab2@6423>       BNE.w JL_0_5BEA
00038A72 <AmiBlitz3.ab2@6425>       ADDQ.w #1,A2
00038A74 <AmiBlitz3.ab2@6426>       EXG.l D1,A2
00038A78 <AmiBlitz3.ab2@6427>       BCLR #$0,D1
00038A7A <AmiBlitz3.ab2@6428>       EXG.l D1,A2
00038A7C <AmiBlitz3.ab2@6429>       MOVE.l A2,(A1)+
00038A7E <AmiBlitz3.ab2@6430>       MOVEA.l (A0),A0
00038A82 <AmiBlitz3.ab2@6431>   DBF D0,JL_0_5BE0
00038A84 <AmiBlitz3.ab2@6432> RTS
00038A88 <AmiBlitz3.ab2@6436>   BSR.w asmconst
00038A8A <AmiBlitz3.ab2@6437>   MOVEQ.l #$0B,D5
00038A8C <AmiBlitz3.ab2@6438> RTS
00038A8E <AmiBlitz3.ab2@6441> unmove:  Ds.w 1
00038A92 <AmiBlitz3.ab2@6445>   MOVE.w #$48E7,D1
00038A96 <AmiBlitz3.ab2@6446>   BSR.w writeword                                          ;movem.l -(a7)
00038A9A <AmiBlitz3.ab2@6447>   MOVE.w #$000F,D2
00038A9C <AmiBlitz3.ab2@6448>   SUB.w D4,D2
00038A9E <AmiBlitz3.ab2@6449>   MOVEQ.l #-$01,D1
00038AA0 <AmiBlitz3.ab2@6450>   BCLR D2,D1
00038AA4 <AmiBlitz3.ab2@6451>   BSR.w writeword
00038AA6 <AmiBlitz3.ab2@6452>   MOVEQ.l #-$01,D1
00038AA8 <AmiBlitz3.ab2@6453>   BCLR D4,D1
00038AAE <AmiBlitz3.ab2@6454>   MOVE.w D1,unmove
00038AB0 <AmiBlitz3.ab2@6455> RTS
00038AB4 <AmiBlitz3.ab2@6459>   MOVE.w #$4CDF,D1
00038AB8 <AmiBlitz3.ab2@6460>   BSR.w writeword
00038ABC <AmiBlitz3.ab2@6461>   MOVE.w unmove(PC),D1
00038AC0 <AmiBlitz3.ab2@6462> BRA.w writeword
00038AC4 <AmiBlitz3.ab2@6475>   BSR.w JL_0_5D22
00038AC8 <AmiBlitz3.ab2@6476>   CMP.w #$2C,D0                                            ;#','
00038ACC <AmiBlitz3.ab2@6477>    BNE.w syntaxerr
00038AD2 <AmiBlitz3.ab2@6478>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00038AD6 <AmiBlitz3.ab2@6479>    BSR.w writelong
00038AD8 <AmiBlitz3.ab2@6480>   MOVE.w D4,D1
00038ADC <AmiBlitz3.ab2@6481>   ORI.w #$2F00,D1
00038AE0 <AmiBlitz3.ab2@6482>    BSR.w writeword
00038AE4 <AmiBlitz3.ab2@6483>    BSR.w get1bytemain
00038AE8 <AmiBlitz3.ab2@6484>    BSR.w getparameter
00038AEC <AmiBlitz3.ab2@6485>    BSR.w JL_0_8E3C
00038AF0 <AmiBlitz3.ab2@6486>    BSR.w calcvar
00038AF4 <AmiBlitz3.ab2@6487>    BTST #$E,D2
00038AF8 <AmiBlitz3.ab2@6488>    BEQ.w JL_0_5C80
00038AFC <AmiBlitz3.ab2@6491>    MOVE.b #$3,D2
00038B00 <AmiBlitz3.ab2@6492> BRA.w JL_0_5C8E
00038B02 <AmiBlitz3.ab2@6495>   TST.b D2
00038B06 <AmiBlitz3.ab2@6496>    BEQ.w JL_0_5C78
00038B0A <AmiBlitz3.ab2@6497>   CMP.b #$7,D2
00038B0E <AmiBlitz3.ab2@6498>    BEQ.w JL_0_5C78
00038B12 <AmiBlitz3.ab2@6501>   BTST #$F,D2
00038B16 <AmiBlitz3.ab2@6502>    BNE.w JL_0_5CA4
00038B1A <AmiBlitz3.ab2@6503>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00038B1E <AmiBlitz3.ab2@6504>    BSR.w writeword
00038B20 <AmiBlitz3.ab2@6505>   MOVE.w D3,D1
00038B24 <AmiBlitz3.ab2@6506>    BSR.w writeword
00038B28 <AmiBlitz3.ab2@6509>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00038B2C <AmiBlitz3.ab2@6510>    BSR.w writeword
00038B30 <AmiBlitz3.ab2@6511>   MOVE.w #$1480,D1
00038B34 <AmiBlitz3.ab2@6512>   CMP.b #$1,D2
00038B38 <AmiBlitz3.ab2@6513>    BEQ.w JL_0_5CC8
00038B3C <AmiBlitz3.ab2@6514>   EORI.w #$3000,D1
00038B40 <AmiBlitz3.ab2@6515>   CMP.b #$2,D2
00038B44 <AmiBlitz3.ab2@6516>    BNE.w JL_0_5CC8
00038B48 <AmiBlitz3.ab2@6517>   ORI.w #$1000,D1
00038B4C <AmiBlitz3.ab2@6520>   BSR.w writeword
00038B52 <AmiBlitz3.ab2@6521>   MOVE.l #$4CDF7FFF,D1
00038B56 <AmiBlitz3.ab2@6522> BRA.w writelong
00038B5A <AmiBlitz3.ab2@6526>   BSR.w JL_0_5D22
00038B5E <AmiBlitz3.ab2@6527>   CMP.w #$2C,D0
00038B62 <AmiBlitz3.ab2@6528>    BNE.w syntaxerr
00038B66 <AmiBlitz3.ab2@6529>    BSR.w regmovems
00038B68 <AmiBlitz3.ab2@6530>   MOVE.w D4,-(A7)
00038B6A <AmiBlitz3.ab2@6531>   MOVEQ.l #$03,D2
00038B6E <AmiBlitz3.ab2@6532>    BSR.w eval
00038B70 <AmiBlitz3.ab2@6533>   MOVE.w (A7)+,D1
00038B74 <AmiBlitz3.ab2@6534>    BEQ.w JL_0_5D1A
00038B78 <AmiBlitz3.ab2@6535>   CMP.w #$8,D1
00038B7C <AmiBlitz3.ab2@6536>    BCC.w JL_0_5D0C
00038B7E <AmiBlitz3.ab2@6537>   LSL.w #8,D1
00038B80 <AmiBlitz3.ab2@6538>   LSL.w #1,D1
00038B84 <AmiBlitz3.ab2@6539>   ORI.w #$2000,D1
00038B88 <AmiBlitz3.ab2@6540>    BSR.w writeword
00038B8C <AmiBlitz3.ab2@6541> BRA.w JL_0_5D1A
00038B8E <AmiBlitz3.ab2@6544>   SUBQ.w #8,D1
00038B90 <AmiBlitz3.ab2@6545>   LSL.w #8,D1
00038B92 <AmiBlitz3.ab2@6546>   LSL.w #1,D1
00038B96 <AmiBlitz3.ab2@6547>   ORI.w #$2040,D1
00038B9A <AmiBlitz3.ab2@6548>   BSR.w writeword
00038B9E <AmiBlitz3.ab2@6551> BRA.w dounmove
00038BA2 <AmiBlitz3.ab2@6555>   BSR.w get1bytemain
00038BA6 <AmiBlitz3.ab2@6558>   ORI.w #$20,D0
00038BAA <AmiBlitz3.ab2@6559>   CMP.w #$64,D0
00038BAE <AmiBlitz3.ab2@6560>    BEQ.w JL_0_5D4E
00038BB2 <AmiBlitz3.ab2@6561>   CMP.w #$61,D0
00038BB6 <AmiBlitz3.ab2@6562>    BNE.w syntaxerr
00038BBA <AmiBlitz3.ab2@6563>    BSR.w JL_0_5D4E
00038BBC <AmiBlitz3.ab2@6564>   ADDQ.w #8,D4
00038BBE <AmiBlitz3.ab2@6565> RTS
00038BEA <AmiBlitz3.ab2@6569>   !fget                                                   ;bsr.w get1bytemain
00038BEE <AmiBlitz3.ab2@6571>   ORI.w #$20,D0
00038BF2 <AmiBlitz3.ab2@6574>   CMP.w #$61,D0
00038BF6 <AmiBlitz3.ab2@6575>   BNE.w syntaxerr
00038C22 <AmiBlitz3.ab2@6578>   !fget                                                    ;bsr.w get1bytemain
00038C26 <AmiBlitz3.ab2@6579>   SUBI.w #$30,D0
00038C2A <AmiBlitz3.ab2@6580>    BMI.w syntaxerr
00038C2E <AmiBlitz3.ab2@6581>   CMP.w #$7,D0
00038C32 <AmiBlitz3.ab2@6582>    BHI.w syntaxerr
00038C34 <AmiBlitz3.ab2@6583>   MOVE.w D0,D4
00038C60 <AmiBlitz3.ab2@6584>   !fget
00038C62 <AmiBlitz3.ab2@6585> RTS                                                        ;bra.w get1bytemain
00038C64 <AmiBlitz3.ab2@6589>   ADDQ.w #8,D4
00038C66 <AmiBlitz3.ab2@6592>   MOVEQ.l #$00,D5
00038C6A <AmiBlitz3.ab2@6593>   SUBI.w #$30,D4
00038C6E <AmiBlitz3.ab2@6596>   CMP.w #$2D,D0
00038C72 <AmiBlitz3.ab2@6597>    BEQ.w JL_0_5D9E
00038C76 <AmiBlitz3.ab2@6598>   CMP.w #$2F,D0
00038C7A <AmiBlitz3.ab2@6599>    BEQ.w JL_0_5D8C
00038C7E <AmiBlitz3.ab2@6600> BRA.w syntaxerr
00038C80 <AmiBlitz3.ab2@6603>   BSET D4,D5
00038C82 <AmiBlitz3.ab2@6606>   MOVE.w D5,D4
00038C84 <AmiBlitz3.ab2@6607>   MOVEQ.l #$0F,D5
00038C86 <AmiBlitz3.ab2@6608> RTS
00038C88 <AmiBlitz3.ab2@6611>   BSET D4,D5
00038C8C <AmiBlitz3.ab2@6612>   BSR.w JL_0_5D1E
00038C9E <AmiBlitz3.ab2@6613>   !compare3                                                ;bsr.w JL_0_5FC0
00038CA2 <AmiBlitz3.ab2@6614>   BNE.w JL_0_5D70
00038CA6 <AmiBlitz3.ab2@6615> BRA.w JL_0_5D84
00038CA8 <AmiBlitz3.ab2@6618>   MOVE.w D4,D1
00038CAC <AmiBlitz3.ab2@6619>    BSR.w JL_0_5D1E
00038CAE <AmiBlitz3.ab2@6620>   CMP.w D4,D1
00038CB2 <AmiBlitz3.ab2@6621>    BLS.w JL_0_5DAC
00038CB4 <AmiBlitz3.ab2@6622>   EXG.l D4,D1
00038CB6 <AmiBlitz3.ab2@6625>   BSET D1,D5
00038CB8 <AmiBlitz3.ab2@6626>   ADDQ.w #1,D1
00038CBA <AmiBlitz3.ab2@6627>   CMP.w D4,D1
00038CBE <AmiBlitz3.ab2@6628>    BLS.w JL_0_5DAC
00038CD0 <AmiBlitz3.ab2@6629>   !compare3                                                ;bsr.w JL_0_5FC0
00038CD4 <AmiBlitz3.ab2@6630>   BNE.w JL_0_5D70
00038CD8 <AmiBlitz3.ab2@6631> BRA.w JL_0_5D86
00038CDA <AmiBlitz3.ab2@6634>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00038D06 <AmiBlitz3.ab2@6635>    !fget
00038D0A <AmiBlitz3.ab2@6636>   CMP.w #$23,D0
00038D0E <AmiBlitz3.ab2@6637>    BEQ.w getimm
00038D12 <AmiBlitz3.ab2@6638>   CMP.w #$28,D0
00038D16 <AmiBlitz3.ab2@6639>    BEQ.w JL_0_5DFE
00038D1A <AmiBlitz3.ab2@6640>   CMP.w #$2D,D0
00038D1E <AmiBlitz3.ab2@6641>    BNE.w JL_0_5E20
00038D4A <AmiBlitz3.ab2@6642>    !fget                                                   ;bsr.w get1bytemain       -(
00038D4E <AmiBlitz3.ab2@6643>   CMP.w #$28,D0
00038D52 <AmiBlitz3.ab2@6644>    BNE.w JL_0_5F4E
00038D56 <AmiBlitz3.ab2@6645>    BSR.w JL_0_5D3E
00038D5A <AmiBlitz3.ab2@6646>   CMP.w #$29,D0
00038D5E <AmiBlitz3.ab2@6647>    BNE.w syntaxerr
00038D60 <AmiBlitz3.ab2@6648>   MOVEQ.l #$04,D5
00038D8C <AmiBlitz3.ab2@6649>   !fget                                                    ;bsr.w get1bytemain
00038D8E <AmiBlitz3.ab2@6650> RTS
00038D92 <AmiBlitz3.ab2@6654>   BSR.w JL_0_5D3E
00038D96 <AmiBlitz3.ab2@6655>   CMP.w #$29,D0
00038D9A <AmiBlitz3.ab2@6656>    BNE.w syntaxerr
00038DC6 <AmiBlitz3.ab2@6657>   !fget                                                    ;bsr.w get1bytemain
00038DCA <AmiBlitz3.ab2@6658>   CMP.w #$2B,D0
00038DCE <AmiBlitz3.ab2@6659>    BEQ.w JL_0_5E1A
00038DD0 <AmiBlitz3.ab2@6660>   MOVEQ.l #$02,D5
00038DD2 <AmiBlitz3.ab2@6661> RTS
00038DD4 <AmiBlitz3.ab2@6665>   MOVEQ.l #$03,D5
00038E00 <AmiBlitz3.ab2@6666>   !fget                                                    ;bra.w get1bytemain
00038E02 <AmiBlitz3.ab2@6667> RTS
00038E06 <AmiBlitz3.ab2@6671>   ORI.w #$20,D0
00038E08 <AmiBlitz3.ab2@6672>   MOVE.w D0,D1                                            
00038E34 <AmiBlitz3.ab2@6673>    !fget                                                   ;bsr.w get1bytemain
00038E38 <AmiBlitz3.ab2@6674>   CMP.w #$64,D1
00038E3C <AmiBlitz3.ab2@6675>    BNE.w JL_0_5E6C
00038E40 <AmiBlitz3.ab2@6676>   CMP.w #$30,D0
00038E44 <AmiBlitz3.ab2@6677>    BCS.w JL_0_5EAE
00038E48 <AmiBlitz3.ab2@6678>   CMP.w #$37,D0
00038E4C <AmiBlitz3.ab2@6679>    BHI.w JL_0_5EAE
00038E4E <AmiBlitz3.ab2@6680>   MOVE.w D0,D4
00038E7A <AmiBlitz3.ab2@6681>    !fget                                                   ;bsr.w get1bytemain
00038E8C <AmiBlitz3.ab2@6682>    !compare3                                               ;bsr.w JL_0_5FC0
00038E90 <AmiBlitz3.ab2@6683>    BEQ.w JL_0_5E64
00038E94 <AmiBlitz3.ab2@6684>   CMP.w #$2D,D0
00038E98 <AmiBlitz3.ab2@6685>    BEQ.w JL_0_5D6A
00038E9C <AmiBlitz3.ab2@6686>   CMP.w #$2F,D0
00038EA0 <AmiBlitz3.ab2@6687>    BEQ.w JL_0_5D6A
00038EA4 <AmiBlitz3.ab2@6688> BRA.w JL_0_5EB8
00038EA6 <AmiBlitz3.ab2@6691>   MOVEQ.l #$00,D5
00038EAA <AmiBlitz3.ab2@6692>   SUBI.w #$30,D4
00038EAC <AmiBlitz3.ab2@6693> RTS
00038EB0 <AmiBlitz3.ab2@6696>    CMP.w #$61,D1
00038EB4 <AmiBlitz3.ab2@6697>    BNE.w JL_0_5EAE
00038EB8 <AmiBlitz3.ab2@6698>   CMP.w #$30,D0
00038EBC <AmiBlitz3.ab2@6699>    BCS.w JL_0_5EAE
00038EC0 <AmiBlitz3.ab2@6700>   CMP.w #$37,D0
00038EC4 <AmiBlitz3.ab2@6701>    BHI.w JL_0_5EAE
00038EC6 <AmiBlitz3.ab2@6702>   MOVE.w D0,D4
00038EF2 <AmiBlitz3.ab2@6703>    !fget                                                   ;bsr.w get1bytemain
00038F04 <AmiBlitz3.ab2@6704>    !compare3                                               ;bsr.w JL_0_5FC0
00038F08 <AmiBlitz3.ab2@6705>    BEQ.w JL_0_5EA6
00038F0C <AmiBlitz3.ab2@6706>   CMP.w #$2D,D0
00038F10 <AmiBlitz3.ab2@6707>    BEQ.w JL_0_5D68                                         ;movem
00038F14 <AmiBlitz3.ab2@6708>   CMP.w #$2F,D0
00038F18 <AmiBlitz3.ab2@6709>    BEQ.w JL_0_5D68
00038F1C <AmiBlitz3.ab2@6710> BRA.w JL_0_5EB8
00038F1E <AmiBlitz3.ab2@6713>   MOVEQ.l #1,d5
00038F22 <AmiBlitz3.ab2@6714>   SUBI.w #$30,D4
00038F26 <AmiBlitz3.ab2@6716> BRA 'l10
00038F28 <AmiBlitz3.ab2@6717>   ADDQ.w #8,d4
00038F2A <AmiBlitz3.ab2@6718>   MOVEQ #0,d5
00038F2C <AmiBlitz3.ab2@6719>   BSET d4,d5
00038F2E <AmiBlitz3.ab2@6720>   MOVE.w d5,d4
00038F30 <AmiBlitz3.ab2@6721>   MOVEQ.l #$0f,D5                                          ;01
00038F32 <AmiBlitz3.ab2@6724> RTS
00038F36 <AmiBlitz3.ab2@6728>   ORI.w #$20,D0
00038F38 <AmiBlitz3.ab2@6729>   MOVE.w D0,D4
00038F64 <AmiBlitz3.ab2@6730>    !fget                                                   ;bsr.w get1bytemain
00038F76 <AmiBlitz3.ab2@6733>   !compare3                                                ;bsr.w JL_0_5FC0
00038F7A <AmiBlitz3.ab2@6734>    BNE.w JL_0_5EF2
00038F7E <AmiBlitz3.ab2@6735>   CMP.w #$73,D1
00038F82 <AmiBlitz3.ab2@6736>    BNE.w JL_0_5EF2
00038F86 <AmiBlitz3.ab2@6737>   CMP.w #$70,D4
00038F8A <AmiBlitz3.ab2@6738>    BNE.w JL_0_5EDE
00038F9C <AmiBlitz3.ab2@6739>    !compare3                                               ;bsr.w JL_0_5FC0
00038FA0 <AmiBlitz3.ab2@6740>    BNE.w JL_0_5F4E
00038FA2 <AmiBlitz3.ab2@6741>   MOVEQ.l #$07,D4
00038FA4 <AmiBlitz3.ab2@6742>   MOVEQ.l #$01,D5
00038FA6 <AmiBlitz3.ab2@6743> RTS
00038FAA <AmiBlitz3.ab2@6747>   CMP.w #$72,D4
00038FAE <AmiBlitz3.ab2@6748>    BNE.w JL_0_5F4E
00038FC0 <AmiBlitz3.ab2@6749>    !compare3                                               ;bsr.w JL_0_5FC0
00038FC4 <AmiBlitz3.ab2@6750>    BNE.w JL_0_5F4E
00038FC6 <AmiBlitz3.ab2@6751>   MOVEQ.l #$0D,D5
00038FC8 <AmiBlitz3.ab2@6752> RTS
00038FCC <AmiBlitz3.ab2@6756>   ORI.w #$20,D0
00038FD0 <AmiBlitz3.ab2@6757>   CMP.w #$63,D1
00038FD4 <AmiBlitz3.ab2@6758>    BNE.w JL_0_5F22
00038FD8 <AmiBlitz3.ab2@6759>   CMP.w #$63,D4
00038FDC <AmiBlitz3.ab2@6760>    BNE.w JL_0_5F4E
00038FE0 <AmiBlitz3.ab2@6761>   CMP.w #$72,D0
00038FE4 <AmiBlitz3.ab2@6762>    BNE.w JL_0_5F4E
00038FE8 <AmiBlitz3.ab2@6763>    BSR.w get1bytemain                                      ;??wy not !fget
00038FEC <AmiBlitz3.ab2@6764>    BEQ.w JL_0_5F1E
00038FF0 <AmiBlitz3.ab2@6765>   CMP.w #$2C,D0
00038FF4 <AmiBlitz3.ab2@6766>    BNE.w JL_0_5F4E
00038FF6 <AmiBlitz3.ab2@6769>   MOVEQ.l #$0C,D5
00038FF8 <AmiBlitz3.ab2@6770> RTS
00038FFC <AmiBlitz3.ab2@6774>   CMP.w #$75,D1
00039000 <AmiBlitz3.ab2@6775>    BNE.w JL_0_5F4E
00039004 <AmiBlitz3.ab2@6776>   CMP.w #$73,D4
00039008 <AmiBlitz3.ab2@6777>    BNE.w JL_0_5F4E
0003900C <AmiBlitz3.ab2@6778>   CMP.w #$70,D0
00039010 <AmiBlitz3.ab2@6779>    BNE.w JL_0_5F4E
00039014 <AmiBlitz3.ab2@6780>    BSR.w get1bytemain                                      ;??wy not !fget
00039018 <AmiBlitz3.ab2@6781>    BEQ.w JL_0_5F4A
0003901C <AmiBlitz3.ab2@6782>   CMP.w #$2C,D0
00039020 <AmiBlitz3.ab2@6783>    BNE.w JL_0_5F4E
00039022 <AmiBlitz3.ab2@6786>   MOVEQ.l #$0E,D5
00039024 <AmiBlitz3.ab2@6787> RTS
00039026 <AmiBlitz3.ab2@6791>   MOVEA.l A4,A5
0003902A <AmiBlitz3.ab2@6792>    BSR.w asmconst
0003903C <AmiBlitz3.ab2@6793>    !compare3                                               ;bsr.w JL_0_5FC0
00039040 <AmiBlitz3.ab2@6794>    BEQ.w JL_0_5FB8
00039044 <AmiBlitz3.ab2@6795>   CMP.w #$2E,D0
00039048 <AmiBlitz3.ab2@6796>    BEQ.w JL_0_5FA0
0003904C <AmiBlitz3.ab2@6797>   CMP.w #$28,D0
00039050 <AmiBlitz3.ab2@6798>    BNE.w syntaxerr
00039054 <AmiBlitz3.ab2@6799>    BSR.w get1bytemain                                      ;??wy not !fget
00039058 <AmiBlitz3.ab2@6800>   ORI.w #$20,D0
0003905C <AmiBlitz3.ab2@6801>   CMP.w #$70,D0
00039060 <AmiBlitz3.ab2@6802>    BNE.w JL_0_5F98
00039064 <AmiBlitz3.ab2@6803>    BSR.w get1bytemain                                      ;??wy not !fget
00039068 <AmiBlitz3.ab2@6804>   ORI.w #$20,D0
0003906C <AmiBlitz3.ab2@6805>   CMP.w #$63,D0
00039070 <AmiBlitz3.ab2@6806>    BNE.w syntaxerr
00039074 <AmiBlitz3.ab2@6807>    BSR.w get1bytemain                                      ;??wy not !fget
00039078 <AmiBlitz3.ab2@6808>    BSR.w JL_0_5FD4
0003907A <AmiBlitz3.ab2@6809>   ADDQ.w #4,D5
0003907C <AmiBlitz3.ab2@6810> RTS
00039080 <AmiBlitz3.ab2@6814>   BSR.w JL_0_5D46
00039084 <AmiBlitz3.ab2@6815> BRA.w JL_0_5FD4
00039088 <AmiBlitz3.ab2@6819>    BSR.w get1bytemain                                     ;??wy not !fget
0003908C <AmiBlitz3.ab2@6820>   ORI.w #$20,D0
00039090 <AmiBlitz3.ab2@6821>   CMP.w #$77,D0
00039094 <AmiBlitz3.ab2@6822>    BEQ.w JL_0_5FBC
00039098 <AmiBlitz3.ab2@6823>   CMP.w #$6C,D0
0003909C <AmiBlitz3.ab2@6824>    BNE.w syntaxerr
0003909E <AmiBlitz3.ab2@6827>   MOVEQ.l #$08,D5
000390A0 <AmiBlitz3.ab2@6828> RTS
000390A2 <AmiBlitz3.ab2@6832>   MOVEQ.l #$07,D5
000390A4 <AmiBlitz3.ab2@6833> RTS
000390A6 <AmiBlitz3.ab2@6837>   TST.w D0
000390AA <AmiBlitz3.ab2@6838>    BEQ.w JL_0_5FD2
000390AE <AmiBlitz3.ab2@6839>   CMP.w #$3A,D0
000390B2 <AmiBlitz3.ab2@6840>    BEQ.w JL_0_5FD2
000390B6 <AmiBlitz3.ab2@6841>   CMP.w #$2C,D0
000390B8 <AmiBlitz3.ab2@6844> RTS
000390BC <AmiBlitz3.ab2@6848>   CMP.w #$2C,D0
000390C0 <AmiBlitz3.ab2@6849>    BNE.w JL_0_6054
000390C4 <AmiBlitz3.ab2@6850>    BSR.w get1bytemain                                      ;??wy not !fget
000390C8 <AmiBlitz3.ab2@6851>   ORI.w #$20,D0
000390CA <AmiBlitz3.ab2@6852>   MOVEQ.l #$00,D1
000390CE <AmiBlitz3.ab2@6853>   CMP.w #$64,D0
000390D2 <AmiBlitz3.ab2@6854>    BEQ.w JL_0_5FFA
000390D6 <AmiBlitz3.ab2@6855>   CMP.w #$61,D0
000390DA <AmiBlitz3.ab2@6856>    BNE.w syntaxerr
000390DE <AmiBlitz3.ab2@6857>   BSET #$F,D1
000390E2 <AmiBlitz3.ab2@6860>    BSR.w get1bytemain                                      ;??wy not !fget
000390E6 <AmiBlitz3.ab2@6861>   SUBI.w #$30,D0
000390EA <AmiBlitz3.ab2@6862>    BMI.w syntaxerr
000390EE <AmiBlitz3.ab2@6863>   CMP.w #$7,D0
000390F2 <AmiBlitz3.ab2@6864>    BHI.w syntaxerr
000390F4 <AmiBlitz3.ab2@6865>   LSL.w #8,D0
000390F6 <AmiBlitz3.ab2@6866>   LSL.w #4,D0
000390F8 <AmiBlitz3.ab2@6867>   OR.w D0,D1
000390FC <AmiBlitz3.ab2@6868>    BSR.w get1bytemain                                      ;??wy not !fget
00039100 <AmiBlitz3.ab2@6869>   CMP.w #$2E,D0
00039104 <AmiBlitz3.ab2@6870>    BNE.w JL_0_6040
00039108 <AmiBlitz3.ab2@6871>    BSR.w get1bytemain                                      ;??wy not !fget
0003910C <AmiBlitz3.ab2@6872>   ORI.w #$20,D0
00039110 <AmiBlitz3.ab2@6873>   CMP.w #$77,D0
00039114 <AmiBlitz3.ab2@6874>    BEQ.w JL_0_603C
00039118 <AmiBlitz3.ab2@6875>   CMP.w #$6C,D0
0003911C <AmiBlitz3.ab2@6876>    BNE.w syntaxerr
00039120 <AmiBlitz3.ab2@6877>   BSET #$B,D1
00039124 <AmiBlitz3.ab2@6880>    BSR.w get1bytemain                                      ;??wy not !fget
00039128 <AmiBlitz3.ab2@6883>    CMP.b #"*",d0                                           ;020 * Mode
0003912C <AmiBlitz3.ab2@6884>             BNE 'l1
00039130 <AmiBlitz3.ab2@6885>             BSR.w get1bytemain                             ;??wy not !fget
00039134 <AmiBlitz3.ab2@6886>             CMP.b #"2",d0
00039138 <AmiBlitz3.ab2@6887>             BNE 'l2
0003913C <AmiBlitz3.ab2@6888>             OR.w #$200,d1
00039140 <AmiBlitz3.ab2@6889> BRA 'l1b
00039144 <AmiBlitz3.ab2@6892>             CMP.b #"4",d0
00039148 <AmiBlitz3.ab2@6893>             BNE 'l3
0003914C <AmiBlitz3.ab2@6894>             OR.w #$400,d1
00039150 <AmiBlitz3.ab2@6895> BRA 'l1b
00039154 <AmiBlitz3.ab2@6898>             CMP.b #"8",d0
00039158 <AmiBlitz3.ab2@6899>             BNE syntaxerr
0003915C <AmiBlitz3.ab2@6900>             OR.w #$600,d1
00039160 <AmiBlitz3.ab2@6903>         BSR.w get1bytemain                                 ;??wy not !fget
00039164 <AmiBlitz3.ab2@6906>   CMP.w #$29,D0
00039168 <AmiBlitz3.ab2@6907>    BNE.w syntaxerr
0003916E <AmiBlitz3.ab2@6908>   MOVE.w D1,extraword
00039170 <AmiBlitz3.ab2@6909>   MOVEQ.l #$06,D5
00039174 <AmiBlitz3.ab2@6910> BRA.w get1bytemain                                         ;??wy not !fget
00039178 <AmiBlitz3.ab2@6914>   CMP.w #")",D0                                            ;")"
0003917C <AmiBlitz3.ab2@6915>    BNE.w errorbracketmiss                                  ; was syntax error
0003917E <AmiBlitz3.ab2@6916>   MOVEQ.l #$05,D5
00039182 <AmiBlitz3.ab2@6917> BRA.w get1bytemain                                         ;??wy not !fget
00039188 <AmiBlitz3.ab2@6924>   MOVEA.l asmbuff,A0
0003918E <AmiBlitz3.ab2@6925>   MOVE.w ininclude,D1
00039194 <AmiBlitz3.ab2@6926>   OR.w inmacro,D1
00039196 <AmiBlitz3.ab2@6927>   MOVE.w D1,(A0)+                                          ;flag!
0003919A <AmiBlitz3.ab2@6928>    BNE.w copyconst
0003919C <AmiBlitz3.ab2@6929>   MOVE.l A5,-(A7)
000391A0 <AmiBlitz3.ab2@6930>    BSR.w copyconst
000391A6 <AmiBlitz3.ab2@6931>   MOVEA.l asmbuff,A0
000391AA <AmiBlitz3.ab2@6932>   CMP.w #$4,D1
000391AE <AmiBlitz3.ab2@6933>    BLS.w asmconst__leave
000391B4 <AmiBlitz3.ab2@6934>   TST.w lc
000391B8 <AmiBlitz3.ab2@6935>    BNE.w asmconst__leave
000391BA <AmiBlitz3.ab2@6936>   ADDQ.w #2,A0
000391BC <AmiBlitz3.ab2@6937>   MOVE.l (A7)+,(A0)+
000391BE <AmiBlitz3.ab2@6938>   CLR.b (A0)
000391C6 <AmiBlitz3.ab2@6939>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
000391C8 <AmiBlitz3.ab2@6940> RTS
000391CA <AmiBlitz3.ab2@6944>   NOT.w (A0)
000391CC <AmiBlitz3.ab2@6945>   ADDQ.w #4,A7
000391CE <AmiBlitz3.ab2@6946> RTS
000391D0 <AmiBlitz3.ab2@6949> lc:  Ds.w 1
000391D6 <AmiBlitz3.ab2@6953>   CLR.w lc
000391D8 <AmiBlitz3.ab2@6954>   MOVEQ.l #$00,D1
000391DA <AmiBlitz3.ab2@6957>    ADDQ.w #1,D1                                            ;label name
00039206 <AmiBlitz3.ab2@6958>    !fget                                                   ;bsr.w get1bytemain
0003920A <AmiBlitz3.ab2@6959>    BEQ.w copyconst__done
0003920E <AmiBlitz3.ab2@6960>    CMP.w #$22,d0
00039212 <AmiBlitz3.ab2@6961>    BNE.s copyconst__loop_l10
00039218 <AmiBlitz3.ab2@6962>    NOT.w instringon
0003921C <AmiBlitz3.ab2@6965>    CMP.w #":",d0
00039220 <AmiBlitz3.ab2@6966>    BNE.s copyconst__loop_l11
00039226 <AmiBlitz3.ab2@6967>    TST.w instringon
0003922A <AmiBlitz3.ab2@6968>    BEQ copyconst__done
0003922C <AmiBlitz3.ab2@6971>   TST.w D0
00039230 <AmiBlitz3.ab2@6972>   BPL.w copyconst__notmi
00039232 <AmiBlitz3.ab2@6973>   MOVE.w D0,-(A7)
00039234 <AmiBlitz3.ab2@6974>   LSR.w #8,D0
00039236 <AmiBlitz3.ab2@6975>   MOVE.b D0,(A0)+
00039238 <AmiBlitz3.ab2@6976>   MOVE.w (A7)+,D0
0003923A <AmiBlitz3.ab2@6977>   MOVE.b D0,(A0)+
0003923C <AmiBlitz3.ab2@6978>   ADDQ.w #1,D1
00039240 <AmiBlitz3.ab2@6979> BRA.s copyconst__loop
00039246 <AmiBlitz3.ab2@6982>    TST.w instringon
0003924A <AmiBlitz3.ab2@6983>    BNE.w copyconst__putbyte
00039250 <AmiBlitz3.ab2@6984>    TST.b _dcb
00039254 <AmiBlitz3.ab2@6985>    BNE copyconst__notmi_l10
00039258 <AmiBlitz3.ab2@6986>    CMP.w #$28,D0
0003925C <AmiBlitz3.ab2@6987>    BEQ.w copyconst__done
00039260 <AmiBlitz3.ab2@6990>    CMP.w #$2C,D0
00039264 <AmiBlitz3.ab2@6991>    BEQ.w copyconst__done
00039268 <AmiBlitz3.ab2@6992>    CMP.b #"'",D0
0003926C <AmiBlitz3.ab2@6993>    BNE.w copyconst__putbyte
00039272 <AmiBlitz3.ab2@6994>    MOVE.w D0,lc                                     ;locallabels
00039274 <AmiBlitz3.ab2@6995>    MOVE.l A1,-(A7)
0003927A <AmiBlitz3.ab2@6996>    LEA lastgloballabel,A1
0003927C <AmiBlitz3.ab2@6997>    TST.b (A1)
00039280 <AmiBlitz3.ab2@6998>    BEQ.w nolocerr
00039282 <AmiBlitz3.ab2@7001>   ADDQ.w #1,D1
00039284 <AmiBlitz3.ab2@7002>   MOVE.b (A1)+,(A0)+
00039288 <AmiBlitz3.ab2@7003>    BNE.w copyconst__cloop
0003928A <AmiBlitz3.ab2@7004>   SUBQ.w #1,D1
0003928C <AmiBlitz3.ab2@7005>   SUBQ.w #1,A0
0003928E <AmiBlitz3.ab2@7006>   MOVEA.l (A7)+,A1
00039290 <AmiBlitz3.ab2@7009>   MOVE.b D0,(A0)+
00039294 <AmiBlitz3.ab2@7010> BRA.w copyconst__loop
00039296 <AmiBlitz3.ab2@7013>   CLR.b (A0)
0003929C <AmiBlitz3.ab2@7014>   MOVE.w D1,asmlen2
0003929E <AmiBlitz3.ab2@7015> RTS
000392A4 <AmiBlitz3.ab2@7020>   CMP.l #$80ad,d0
000392A8 <AmiBlitz3.ab2@7021>   BNE.s 'l12
000392AE <AmiBlitz3.ab2@7022> JMP bssseg
000392B4 <AmiBlitz3.ab2@7025>   CMP.l #$807f,d0
000392B8 <AmiBlitz3.ab2@7026>     BNE.s 'l13
000392BE <AmiBlitz3.ab2@7027> JMP chipseg
000392C4 <AmiBlitz3.ab2@7030>   ADDQ.l #1,destpointer                                    ;even
000392CC <AmiBlitz3.ab2@7031>   BCLR #$0,destpointer+3
000392D0 <AmiBlitz3.ab2@7032>   SUBI.w #$803C,D0
000392D2 <AmiBlitz3.ab2@7033>   LSL.w #2,D0
000392D8 <AmiBlitz3.ab2@7034>   MOVEA.l #asmpnts,A0
000392DC <AmiBlitz3.ab2@7035>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000392E2 <AmiBlitz3.ab2@7036>   MOVE.w D0,temp1
000392E4 <AmiBlitz3.ab2@7037>   MOVE.l A0,-(A7)
000392E6 <AmiBlitz3.ab2@7038>   MOVEQ.l #$01,D1
00039312 <AmiBlitz3.ab2@7039>    !fget                                                   ;bsr.w get1bytemain
00039316 <AmiBlitz3.ab2@7040>   CMP.w #$2E,D0
0003931A <AmiBlitz3.ab2@7041>    BNE.w JL_0_6184
00039346 <AmiBlitz3.ab2@7042>   !fget                                                    ;bsr.w get1bytemain
0003934A <AmiBlitz3.ab2@7043>   ORI.w #$20,D0
0003934E <AmiBlitz3.ab2@7044>   CMP.w #$77,D0                                            ;long
00039352 <AmiBlitz3.ab2@7045>    BEQ.w JL_0_618A
00039356 <AmiBlitz3.ab2@7046>   CMP.w #$62,D0                                            ;byte
0003935A <AmiBlitz3.ab2@7047>    BEQ.w JL_0_617A
0003935E <AmiBlitz3.ab2@7048>   CMP.w #$6C,D0                                            ;word
00039362 <AmiBlitz3.ab2@7049>    BEQ.w JL_0_6196
00039366 <AmiBlitz3.ab2@7050>   CMP.w #"s",d0
0003936A <AmiBlitz3.ab2@7051>   BNE syntaxerr
0003936E <AmiBlitz3.ab2@7052> BRA.w JL_0_617A
00039370 <AmiBlitz3.ab2@7055>   MOVEQ.l #$00,D1
00039374 <AmiBlitz3.ab2@7056>   MOVE.w $8(A0),D0
00039378 <AmiBlitz3.ab2@7057> BRA.w JL_0_619E
0003937A <AmiBlitz3.ab2@7060>   MOVEQ.l #$04,D1
0003937E <AmiBlitz3.ab2@7061> BRA.w JL_0_61AE
00039380 <AmiBlitz3.ab2@7064>   MOVEQ.l #$04,D1
00039384 <AmiBlitz3.ab2@7065>   MOVE.w $8(A0),D0
00039386 <AmiBlitz3.ab2@7066>   LSR.w #4,D0
0003938A <AmiBlitz3.ab2@7067> BRA.w JL_0_619E
0003938C <AmiBlitz3.ab2@7070>   MOVEQ.l #$08,D1
00039390 <AmiBlitz3.ab2@7071>   MOVE.w $8(A0),D0
00039392 <AmiBlitz3.ab2@7072>   LSR.w #8,D0
00039396 <AmiBlitz3.ab2@7075>    ANDI.w #$F,D0
0003939A <AmiBlitz3.ab2@7076>   CMP.w #$F,D0
0003939E <AmiBlitz3.ab2@7077>    BNE.w 'cl60
000393A6 <AmiBlitz3.ab2@7080>    CMP.l #"MULS",-6(a0)
000393AA <AmiBlitz3.ab2@7081>    BNE 'c20
000393B0 <AmiBlitz3.ab2@7082>    MOVE.l #$4c000800,d1
000393B6 <AmiBlitz3.ab2@7083> JMP do32
000393BE <AmiBlitz3.ab2@7086>    CMP.l #"MULU",-6(a0)
000393C2 <AmiBlitz3.ab2@7087>    BNE 'c30
000393C8 <AmiBlitz3.ab2@7088>    MOVE.l #$4c000000,d1
000393CE <AmiBlitz3.ab2@7089> JMP do32
000393D6 <AmiBlitz3.ab2@7092>    CMP.l #"DIVS",-6(a0)
000393DA <AmiBlitz3.ab2@7093>    BNE 'c40
000393E0 <AmiBlitz3.ab2@7094>    MOVE.l #$4c400800,d1
000393E6 <AmiBlitz3.ab2@7095> JMP do32
000393EE <AmiBlitz3.ab2@7098>    CMP.l #"DIVU",-6(a0)
000393F2 <AmiBlitz3.ab2@7099>    BNE 'c50
000393F8 <AmiBlitz3.ab2@7100>    MOVE.l #$4c400000,d1
000393FE <AmiBlitz3.ab2@7101> JMP do32
00039402 <AmiBlitz3.ab2@7104> BRA illsizeerr
0003942E <AmiBlitz3.ab2@7107>   !fget                                                    ;bsr.w get1bytemain
00039434 <AmiBlitz3.ab2@7110>   MOVE.w D1,asmsize
00039436 <AmiBlitz3.ab2@7111>   MOVEQ.l #-$01,D3
0003943A <AmiBlitz3.ab2@7112>    BSR.w reget
0003943E <AmiBlitz3.ab2@7113>    BEQ.w JL_0_6200
00039448 <AmiBlitz3.ab2@7114>   MOVE.l #ptr_parameterstore,asmbuff
00039452 <AmiBlitz3.ab2@7116>    MOVE.w oldqflag,instringon
00039458 <AmiBlitz3.ab2@7117>   MOVEA.l lastsourcepos,A5
0003945C <AmiBlitz3.ab2@7118>    BSR.w JL_0_5DC2
0003945E <AmiBlitz3.ab2@7119>   MOVE.l D4,D2                                             ;to src
00039460 <AmiBlitz3.ab2@7120>   MOVE.l D5,D3
0003946A <AmiBlitz3.ab2@7121>   MOVE.w asmlen2,asmlen
0003946C <AmiBlitz3.ab2@7122>   MOVEQ.l #-$01,D5
00039476 <AmiBlitz3.ab2@7123>   MOVE.w extraword,extraword2
0003947A <AmiBlitz3.ab2@7124>   CMP.w #$2C,D0                                            ;','
0003947E <AmiBlitz3.ab2@7125>    BNE.w JL_0_6200
00039488 <AmiBlitz3.ab2@7126>   MOVE.l #namebuff2,asmbuff
0003948C <AmiBlitz3.ab2@7127>    BSR.w JL_0_5DC2                                         ;dest
0003948E <AmiBlitz3.ab2@7130>   MOVEA.l (A7)+,A0
00039494 <AmiBlitz3.ab2@7131>   MOVEA.l destpointer,A1
00039496 <AmiBlitz3.ab2@7132>   MOVEA.l A1,A4
00039498 <AmiBlitz3.ab2@7133>   ADDQ.w #2,A1
0003949A <AmiBlitz3.ab2@7134>   MOVE.w (A0),D1
0003949C <AmiBlitz3.ab2@7135>   TST.w D3
000394A0 <AmiBlitz3.ab2@7136>    BMI.w JL_0_639E
000394A4 <AmiBlitz3.ab2@7137>   MOVE.w $E(A0),D0
000394A8 <AmiBlitz3.ab2@7138>    BPL.w JL_0_6264
000394AC <AmiBlitz3.ab2@7139>   BTST #$0,D0
000394B0 <AmiBlitz3.ab2@7140>    BEQ.w JL_0_6240
000394B4 <AmiBlitz3.ab2@7141>   CMP.w #$1,D5
000394B8 <AmiBlitz3.ab2@7142>    BNE.w JL_0_6240
000394BC <AmiBlitz3.ab2@7143>   CMP.w #$E,D3
000394C0 <AmiBlitz3.ab2@7144>    BEQ.w JL_0_6264
000394C6 <AmiBlitz3.ab2@7145>   MOVE.w temp1,D0
000394C8 <AmiBlitz3.ab2@7146>   ADDQ.w #4,D0
000394CC <AmiBlitz3.ab2@7147> BRA.w JL_0_6256
000394D0 <AmiBlitz3.ab2@7150>   BTST #$1,D0
000394D4 <AmiBlitz3.ab2@7151>    BEQ.w JL_0_6264
000394D8 <AmiBlitz3.ab2@7152>   CMP.w #$B,D3
000394DC <AmiBlitz3.ab2@7153>    BNE.w JL_0_6264
000394E2 <AmiBlitz3.ab2@7154>   MOVE.w temp1,D0
000394E4 <AmiBlitz3.ab2@7157>   ADDQ.w #4,D0
000394EA <AmiBlitz3.ab2@7158>   MOVEA.l #asmpnts,A0
000394EE <AmiBlitz3.ab2@7159>   MOVEA.l $0(A0,D0.W),A0
000394F0 <AmiBlitz3.ab2@7160>   MOVE.w (A0),D1
000394FA <AmiBlitz3.ab2@7163>   MOVE.l #ptr_parameterstore,buff1
00039504 <AmiBlitz3.ab2@7164>   MOVE.l #namebuff2,buff2
00039508 <AmiBlitz3.ab2@7165>   MOVE.l $A(A0),D0
0003950C <AmiBlitz3.ab2@7166>    BEQ.w JL_0_62DC
0003950E <AmiBlitz3.ab2@7167>   MOVEA.l D0,A3
00039514 <AmiBlitz3.ab2@7168>   MOVE.w asmsize,D6
00039516 <AmiBlitz3.ab2@7171>    JSR (A3)
0003951A <AmiBlitz3.ab2@7172>    BPL.w JL_0_629A
0003951E <AmiBlitz3.ab2@7173>   CMP.w #-$2,D0
00039522 <AmiBlitz3.ab2@7174>    BEQ.w illsizeerr
00039526 <AmiBlitz3.ab2@7175> BRA.w illeaerr
0003952A <AmiBlitz3.ab2@7178>   BEQ.w JL_0_62DC
0003952C <AmiBlitz3.ab2@7179>   EXG.l D2,D4
0003952E <AmiBlitz3.ab2@7180>   EXG.l D3,D5
00039534 <AmiBlitz3.ab2@7181>   MOVE.l extraword,D6
00039536 <AmiBlitz3.ab2@7182>   SWAP D6
0003953C <AmiBlitz3.ab2@7183>   MOVE.l D6,extraword
00039546 <AmiBlitz3.ab2@7184>   MOVE.l #namebuff2,buff1
00039550 <AmiBlitz3.ab2@7185>   MOVE.l #ptr_parameterstore,buff2
00039556 <AmiBlitz3.ab2@7186>   MOVE.w asmlen,D6
0003955C <AmiBlitz3.ab2@7187>   MOVE.w asmlen2,D7
00039562 <AmiBlitz3.ab2@7188>   MOVE.w D6,asmlen2
00039568 <AmiBlitz3.ab2@7189>   MOVE.w D7,asmlen
00039572 <AmiBlitz3.ab2@7192>   MOVE.l buff1,asmbuff
00039576 <AmiBlitz3.ab2@7193>   MOVE.w $E(A0),D0
0003957A <AmiBlitz3.ab2@7194>    BEQ.w JL_0_6348
0003957E <AmiBlitz3.ab2@7195>    BMI.w JL_0_6348
00039582 <AmiBlitz3.ab2@7196>    CMP.w #$7000,d1
00039586 <AmiBlitz3.ab2@7197>    BNE 'skip
0003958A <AmiBlitz3.ab2@7198>    CMP.w #$b,d3
0003958E <AmiBlitz3.ab2@7199>    BNE illeaerr
00039592 <AmiBlitz3.ab2@7202>    CMP.w #$1,D0
00039596 <AmiBlitz3.ab2@7203>    BNE.w JL_0_630E
0003959A <AmiBlitz3.ab2@7204>    CMP.w #$B,D3
0003959E <AmiBlitz3.ab2@7205>    BNE.w JL_0_6348
000395A2 <AmiBlitz3.ab2@7208>    BSR.w insasm
000395A4 <AmiBlitz3.ab2@7209>   MOVE.w D4,D2
000395A6 <AmiBlitz3.ab2@7210>   MOVE.w D5,D3
000395AA <AmiBlitz3.ab2@7211> BRA.w JL_0_6364
000395AE <AmiBlitz3.ab2@7214>    CMP.w #$2,D0
000395B2 <AmiBlitz3.ab2@7215>    BNE.w JL_0_6324
000395B6 <AmiBlitz3.ab2@7216>   CMP.w #$8,D3
000395BA <AmiBlitz3.ab2@7217>    BNE.w illeaerr
000395BC <AmiBlitz3.ab2@7218>   MOVEQ.l #$09,D3
000395C0 <AmiBlitz3.ab2@7219> BRA.w JL_0_6348
000395C4 <AmiBlitz3.ab2@7222>    CMP.w #$3,D0
000395C8 <AmiBlitz3.ab2@7223>    BEQ.w JL_0_6302
000395CC <AmiBlitz3.ab2@7224>   CMP.w #$4,D0
000395D0 <AmiBlitz3.ab2@7225>    BEQ.w JL_0_6302
000395D4 <AmiBlitz3.ab2@7226>   CMP.w #$5,D0
000395D8 <AmiBlitz3.ab2@7227>    BNE.w JL_0_6348
000395DC <AmiBlitz3.ab2@7228>   CMP.w #$8,D5
000395E0 <AmiBlitz3.ab2@7229>    BNE.w illeaerr
000395E2 <AmiBlitz3.ab2@7230>   OR.w D2,D1
000395E4 <AmiBlitz3.ab2@7231>   MOVEQ.l #$09,D5
000395E8 <AmiBlitz3.ab2@7234>   MOVE.w $2(A0),D6
000395EC <AmiBlitz3.ab2@7235>   MOVE.b $6(A0),D7
000395F0 <AmiBlitz3.ab2@7236>   MOVEM.l D4-D5,-(A7)
000395F6 <AmiBlitz3.ab2@7237>   MOVE.w extraword2,D4
000395FA <AmiBlitz3.ab2@7238>    BSR.w doea
000395FE <AmiBlitz3.ab2@7239>   MOVEM.l (A7)+,D2-D3
00039600 <AmiBlitz3.ab2@7240>   TST.w D3
00039604 <AmiBlitz3.ab2@7243>     BMI.w JL_0_6392
0003960A <AmiBlitz3.ab2@7244>   MOVE.w extraword,D4
0003960E <AmiBlitz3.ab2@7245>   MOVE.w $4(A0),D6
00039612 <AmiBlitz3.ab2@7246>   MOVE.b $7(A0),D7
0003961C <AmiBlitz3.ab2@7247>   MOVE.l buff2,asmbuff
00039626 <AmiBlitz3.ab2@7248>   MOVE.w asmlen2,asmlen
0003962A <AmiBlitz3.ab2@7249>    BSR.w doea
0003962E <AmiBlitz3.ab2@7250> BRA.w JL_0_63AA
00039632 <AmiBlitz3.ab2@7253>   MOVE.w $4(A0),D0
00039636 <AmiBlitz3.ab2@7254>    BNE.w illeaerr
0003963A <AmiBlitz3.ab2@7255> BRA.w JL_0_63AA
0003963E <AmiBlitz3.ab2@7259>   MOVE.w $2(A0),D0
00039642 <AmiBlitz3.ab2@7260>   OR.w $4(A0),D0
00039646 <AmiBlitz3.ab2@7261>    BNE.w illeaerr
0003964A <AmiBlitz3.ab2@7264>   MOVE.w $8(A0),D0
0003964E <AmiBlitz3.ab2@7265>   ANDI.w #$F000,D0
00039652 <AmiBlitz3.ab2@7266>   CMP.w #-$1000,D0
00039656 <AmiBlitz3.ab2@7267>    BEQ.w JL_0_63D2
00039658 <AmiBlitz3.ab2@7268>   LSR.w #8,D0
0003965A <AmiBlitz3.ab2@7269>   LSR.w #4,D0
0003965E <AmiBlitz3.ab2@7270>   MOVE.w $8(A0),D2
00039664 <AmiBlitz3.ab2@7271>   MOVE.w asmsize,D3
00039666 <AmiBlitz3.ab2@7272>   LSR.w D3,D2
0003966A <AmiBlitz3.ab2@7273>   ANDI.w #$F,D2
0003966C <AmiBlitz3.ab2@7274>   LSL.w D0,D2
0003966E <AmiBlitz3.ab2@7275>   OR.w D2,D1
00039674 <AmiBlitz3.ab2@7278>   CMPA.l destbufferend,A4
00039678 <AmiBlitz3.ab2@7279>    BCS.w JL_0_63E8
00039680 <AmiBlitz3.ab2@7281>   MOVE.w #$FFFF,dontwrite
00039684 <AmiBlitz3.ab2@7282> BRA.w JL_0_63EA
00039686 <AmiBlitz3.ab2@7285>   MOVE.w D1,(A4)
0003968C <AmiBlitz3.ab2@7288>   MOVE.l A1,destpointer
0003968E <AmiBlitz3.ab2@7289> RTS
00039694 <AmiBlitz3.ab2@7293>   MOVE.l destpointer,-(A7)
0003969A <AmiBlitz3.ab2@7294>   MOVE.l A1,destpointer
0003969E <AmiBlitz3.ab2@7295>    BSR.w addoff
000396A4 <AmiBlitz3.ab2@7296>   MOVEA.l destpointer,A1
000396AA <AmiBlitz3.ab2@7297>   MOVE.l (A7)+,destpointer
000396AC <AmiBlitz3.ab2@7298> RTS
000396B0 <AmiBlitz3.ab2@7302>   MOVEM.l d2-d6,-(a7)
000396B6 <AmiBlitz3.ab2@7303>   JSR stripspaces
000396BA <AmiBlitz3.ab2@7304>   CMP.b #"d",(a5)+
000396BE <AmiBlitz3.ab2@7305>   BNE noreg
000396C0 <AmiBlitz3.ab2@7306>   MOVE.b (a5)+,d0
000396C4 <AmiBlitz3.ab2@7307>   CMP.b #$30,d0
000396C8 <AmiBlitz3.ab2@7308>   BLT noreg
000396CC <AmiBlitz3.ab2@7309>   CMP.b #$37,d0
000396D0 <AmiBlitz3.ab2@7310>   BGT noreg
000396D4 <AmiBlitz3.ab2@7311>   SUB.b #$30,d0
000396D6 <AmiBlitz3.ab2@7312>   MOVEQ #0,d3
000396D8 <AmiBlitz3.ab2@7313>   MOVE.b d0,d3                                             ;reg1
000396DA <AmiBlitz3.ab2@7314>   ASL.l #8,d3
000396DC <AmiBlitz3.ab2@7315>   ASL.l #8,d3
000396E2 <AmiBlitz3.ab2@7316>   JSR stripspaces
000396E6 <AmiBlitz3.ab2@7317>   CMP.b #",",(a5)+
000396EA <AmiBlitz3.ab2@7318>   BNE noreg
000396F0 <AmiBlitz3.ab2@7319>   JSR stripspaces
000396F4 <AmiBlitz3.ab2@7320>   CMP.b #"d",(a5)+
000396F8 <AmiBlitz3.ab2@7321>   BNE noreg
000396FA <AmiBlitz3.ab2@7322>   MOVE.b (a5)+,d0
000396FE <AmiBlitz3.ab2@7323>   CMP.b #$30,d0
00039702 <AmiBlitz3.ab2@7324>   BLT noreg
00039706 <AmiBlitz3.ab2@7325>   CMP.b #$37,d0
0003970A <AmiBlitz3.ab2@7326>   BGT noreg
0003970E <AmiBlitz3.ab2@7327>   SUB.b #$30,d0
00039710 <AmiBlitz3.ab2@7328>   MOVEQ #0,d4
00039712 <AmiBlitz3.ab2@7329>   MOVE.b d0,d4                                             ;reg2
00039714 <AmiBlitz3.ab2@7330>   ASL.l #8,d4
00039716 <AmiBlitz3.ab2@7331>   ASL.l #4,d4
00039718 <AmiBlitz3.ab2@7332>   OR.b d0,d1
0003971A <AmiBlitz3.ab2@7333>   OR.l d3,d1
0003971C <AmiBlitz3.ab2@7334>   OR.l d4,d1
00039722 <AmiBlitz3.ab2@7335>   JSR writelong
00039726 <AmiBlitz3.ab2@7336>   MOVEM.l (a7)+,d2-d6
0003972A <AmiBlitz3.ab2@7337>   MOVEM.l d1/a1-a3,-(a7)
0003972E <AmiBlitz3.ab2@7338> BRA exit
00039732 <AmiBlitz3.ab2@7342>   MOVEM.l (a7)+,d2-d6
00039738 <AmiBlitz3.ab2@7343>   LEA errtext,a0
0003973A <AmiBlitz3.ab2@7344>   MOVE.l a0,-(a7)
00039740 <AmiBlitz3.ab2@7345> JMP handle_compileerror
00039746 <AmiBlitz3.ab2@7354>   MOVE.w dontwrite,D1
0003974A <AmiBlitz3.ab2@7355>    BNE.w asmfixer__done
00039752 <AmiBlitz3.ab2@7356>   BTST #$7,make_smallestcode
00039756 <AmiBlitz3.ab2@7357>    BEQ.w asmfixer__go
0003975A <AmiBlitz3.ab2@7358>   MOVE.w pass(PC),D1
0003975E <AmiBlitz3.ab2@7359>    BEQ.w asmfixer__done
00039764 <AmiBlitz3.ab2@7362>   MOVEA.l templabel,A2                                     ;insert labels in Code
0003976C <AmiBlitz3.ab2@7363>   MOVE.b #1,curtemplabel
00039774 <AmiBlitz3.ab2@7364>   MOVE.w #$FFFF,constmode
0003977A <AmiBlitz3.ab2@7365>   CLR.w regnum
00039784 <AmiBlitz3.ab2@7366>           MOVE.l #forthstack,forthsp
0003978E <AmiBlitz3.ab2@7367>           MOVE.l #precstack,precsp
00039792 <AmiBlitz3.ab2@7368>    BSR.w prepstack
00039794 <AmiBlitz3.ab2@7371>   MOVE.l A2,-(A7)
00039798 <AmiBlitz3.ab2@7372>    BSR.w chkstop
0003979A <AmiBlitz3.ab2@7373>   MOVEA.l (A7)+,A2
0003979E <AmiBlitz3.ab2@7374>   CMPA.w #$0,A2
000397A2 <AmiBlitz3.ab2@7375>    BEQ.w asmfixer__done2
000397A8 <AmiBlitz3.ab2@7376>    CLR.b iee
000397AE <AmiBlitz3.ab2@7377>   MOVE.l A2,asmbuff
000397B2 <AmiBlitz3.ab2@7378>   LEA $10(A2),A5
000397B6 <AmiBlitz3.ab2@7379>   TST.b $F(A2)
000397BA <AmiBlitz3.ab2@7380>    BNE.w asmfixer__skipo
000397BC <AmiBlitz3.ab2@7381>   MOVEA.l (A5),A5                                          ;pointer to real text
000397C2 <AmiBlitz3.ab2@7384>    CLR.w asmtype
000397C6 <AmiBlitz3.ab2@7385>    CMP.b #".",(a5)
000397CA <AmiBlitz3.ab2@7386>    BNE.s asmfixer__skipo_l10
000397CC <AmiBlitz3.ab2@7387>    MOVE.l a2,-(a7)
000397CE <AmiBlitz3.ab2@7388>    ADDQ.l #1,a5
000397D4 <AmiBlitz3.ab2@7389>    LEA newtypebase,a2
000397D8 <AmiBlitz3.ab2@7390>    BSR getparameter2
000397DC <AmiBlitz3.ab2@7391>    BEQ.w syntaxerr
000397E0 <AmiBlitz3.ab2@7392>    BSR findtype
000397E4 <AmiBlitz3.ab2@7393>    BNE.w notypeerr
000397E8 <AmiBlitz3.ab2@7394>    LEA $4(a2),a2
000397EC <AmiBlitz3.ab2@7395>    BSR getparameter2
000397F0 <AmiBlitz3.ab2@7396>    BEQ.w syntaxerr
000397F4 <AmiBlitz3.ab2@7397>    BSR.w findvariable2
000397F8 <AmiBlitz3.ab2@7398>    BNE.w notypeerr
000397FC <AmiBlitz3.ab2@7399>    MOVE.w $4(a2),d3
000397FE <AmiBlitz3.ab2@7400>    EXT.l d3
00039802 <AmiBlitz3.ab2@7401> BRA asmfixer__skipo_l30b
00039806 <AmiBlitz3.ab2@7404>   CMP.b #"\",(a5)
0003980A <AmiBlitz3.ab2@7405>     BNE asmfixer__skipo_l20
0003980C <AmiBlitz3.ab2@7406>     ADDQ.l #1,a5
0003980E <AmiBlitz3.ab2@7407>    MOVE.l a2,-(a7)
00039810 <AmiBlitz3.ab2@7408>    MOVE.l a5,a4
00039816 <AmiBlitz3.ab2@7409>    LEA usedpath,a5
0003981A <AmiBlitz3.ab2@7410>    CMP.b #"*",(a5)
0003981E <AmiBlitz3.ab2@7411>    BNE asmfixer__skipo_lm1
00039820 <AmiBlitz3.ab2@7412>    ADDQ.l #1,a5
00039824 <AmiBlitz3.ab2@7415>    BSR.w getparameter2
00039828 <AmiBlitz3.ab2@7416>    BEQ.w syntaxerr
0003982E <AmiBlitz3.ab2@7417>    LEA varbase,A2
00039836 <AmiBlitz3.ab2@7418>    MOVE.b #1,newvariable
0003983A <AmiBlitz3.ab2@7419>    BSR.w findvariable
00039840 <AmiBlitz3.ab2@7420>    CLR.b newvariable
00039846 <AmiBlitz3.ab2@7421>    CMP.l #-1,d0
0003984A <AmiBlitz3.ab2@7422>    BEQ.w notypeerr
0003984C <AmiBlitz3.ab2@7423>    MOVE.l a4,a5
00039850 <AmiBlitz3.ab2@7424>    MOVE.l $a(a2),a2
00039854 <AmiBlitz3.ab2@7425>    LEA $4(a2),a2
00039858 <AmiBlitz3.ab2@7426>    BSR getparameter2
0003985C <AmiBlitz3.ab2@7427>    BEQ.w syntaxerr
00039860 <AmiBlitz3.ab2@7428>    BSR.w findvariable2
00039864 <AmiBlitz3.ab2@7429>    BNE.w notypeerr
00039868 <AmiBlitz3.ab2@7430>   MOVE.w $4(A2),D3
0003986A <AmiBlitz3.ab2@7431>   EXT.l D3
00039870 <AmiBlitz3.ab2@7434>    CMP.b #"[",-1(a5)
00039874 <AmiBlitz3.ab2@7435>    BNE asmfixer__skipo_l30c
00039876 <AmiBlitz3.ab2@7436>    MOVEQ #0,d0
00039878 <AmiBlitz3.ab2@7437>    MOVE.b (a5)+,d0
0003987A <AmiBlitz3.ab2@7438>    MOVE.l d3,-(a7)
0003987C <AmiBlitz3.ab2@7439>    MOVEQ #0,d3
00039882 <AmiBlitz3.ab2@7440>    JSR atoi
00039884 <AmiBlitz3.ab2@7441>    MOVE.l (a7)+,d1
00039888 <AmiBlitz3.ab2@7442>    MOVE.l $a(a2),a2
0003988C <AmiBlitz3.ab2@7443>    MOVE.w 8(a2),d0
0003988E <AmiBlitz3.ab2@7444>    MULS d0,d3
00039890 <AmiBlitz3.ab2@7445>    ADD.l d1,d3
00039892 <AmiBlitz3.ab2@7448>   MOVE.l (a7)+,a2
00039896 <AmiBlitz3.ab2@7449> BRA asmfixer__oko
0003989C <AmiBlitz3.ab2@7452>   CMP.w #$c,$8(a2)
000398A0 <AmiBlitz3.ab2@7453>      BEQ asmfixer__skipo_lf1
000398A6 <AmiBlitz3.ab2@7454>      CMP.w #$d,$8(a2)
000398AA <AmiBlitz3.ab2@7455>      BEQ asmfixer__skipo_lf1
000398B0 <AmiBlitz3.ab2@7458>   JSR AJL_0_BF6E
000398B6 <AmiBlitz3.ab2@7461>   MOVEA.l asmbuff,A2
000398BA <AmiBlitz3.ab2@7462>    BEQ.w asmfixer__oko
000398BE <AmiBlitz3.ab2@7463>   CMP.w #$28,D0
000398C2 <AmiBlitz3.ab2@7464>    BEQ.w asmfixer__oko
000398C6 <AmiBlitz3.ab2@7465>   CMP.w #$2C,D0
000398CA <AmiBlitz3.ab2@7466>    BEQ.w asmfixer__oko
000398CE <AmiBlitz3.ab2@7467> BRA.w syntaxerr
000398D6 <AmiBlitz3.ab2@7470>   MOVE.b #1,iee
000398DA <AmiBlitz3.ab2@7471> BRA asmfixer__skipo_lf2
000398DE <AmiBlitz3.ab2@7474>   MOVEA.l $4(A2),A1
000398E2 <AmiBlitz3.ab2@7476>   MOVE.w $8(A2),D1                                         ;labelmode
000398E6 <AmiBlitz3.ab2@7477>   CMP.w #$5,D1
000398EA <AmiBlitz3.ab2@7478>    BNE.w asmfixer__notdan
000398EE <AmiBlitz3.ab2@7481>    BSR.w chkword                                         ;word
000398F0 <AmiBlitz3.ab2@7484>   MOVE.w D3,(A1)
000398F4 <AmiBlitz3.ab2@7485> BRA.w asmfixer__next
000398F8 <AmiBlitz3.ab2@7488>   CMP.w #$6,D1
000398FC <AmiBlitz3.ab2@7489>    BNE.w asmfixer__notdanxi
00039900 <AmiBlitz3.ab2@7492>    BSR.w chkbyte                                         ;byte
00039904 <AmiBlitz3.ab2@7495>   MOVE.b D3,$1(A1)
00039908 <AmiBlitz3.ab2@7496> BRA.w asmfixer__next
0003990C <AmiBlitz3.ab2@7499>    CMP.w #$11,D1                                           ;byte
00039910 <AmiBlitz3.ab2@7500>    BEQ.w asmfixer__isbyte2
00039914 <AmiBlitz3.ab2@7501>    CMP.w #$c,d1
00039918 <AmiBlitz3.ab2@7502>    BEQ asmfixer__single1
0003991C <AmiBlitz3.ab2@7503>    CMP.w #$d,d1
00039920 <AmiBlitz3.ab2@7504>    BEQ asmfixer__double1
00039924 <AmiBlitz3.ab2@7505>   CMP.w #$7,D1
00039928 <AmiBlitz3.ab2@7506>    BEQ.w asmfixer__word                                    ;word
0003992C <AmiBlitz3.ab2@7507>   CMP.w #$8,D1
00039930 <AmiBlitz3.ab2@7508>    BNE.w asmfixer__notabsl
00039936 <AmiBlitz3.ab2@7511>   MOVE.w asmtype,D1                                        ;long
0003993A <AmiBlitz3.ab2@7512>    BEQ.w asmfixer__notpcrel
0003993E <AmiBlitz3.ab2@7513>      BSR.w asmoff
00039940 <AmiBlitz3.ab2@7516>   MOVE.l D3,(A1)
00039944 <AmiBlitz3.ab2@7517> BRA.w asmfixer__next
0003994A <AmiBlitz3.ab2@7521>   fmove.s fp0,0(a1)
0003994E <AmiBlitz3.ab2@7522> BRA.w asmfixer__next
00039954 <AmiBlitz3.ab2@7526>   fmove.d fp0,0(a1)
00039958 <AmiBlitz3.ab2@7527> BRA.w asmfixer__next
0003995C <AmiBlitz3.ab2@7531>   CMP.w #$9,D1
00039960 <AmiBlitz3.ab2@7532>    BNE.w asmfixer__notdpc
00039962 <AmiBlitz3.ab2@7533>   SUB.l A1,D3                                              ;branchword
00039966 <AmiBlitz3.ab2@7534>    BSR.w chkword
00039968 <AmiBlitz3.ab2@7535>   MOVE.w D3,(A1)
0003996C <AmiBlitz3.ab2@7536> BRA.w asmfixer__next
00039970 <AmiBlitz3.ab2@7540>   CMP.w #$A,D1
00039974 <AmiBlitz3.ab2@7541>    BNE.w asmfixer__imm
00039976 <AmiBlitz3.ab2@7542>   SUB.l A1,D3                                              ;branchbyte
0003997A <AmiBlitz3.ab2@7543> BRA.w asmfixer__isbyte
0003997E <AmiBlitz3.ab2@7547>   CMP.w #$11,d1
00039982 <AmiBlitz3.ab2@7548>   BLE asmfixer__imm_org
00039984 <AmiBlitz3.ab2@7549>   MOVE.l a3,-(a7)
0003998A <AmiBlitz3.ab2@7550>   LEA pluginbase,a3
0003998E <AmiBlitz3.ab2@7551>   MOVE.l 8(a2),a0
00039990 <AmiBlitz3.ab2@7552>   JSR (a0)                                                 ;hook
00039992 <AmiBlitz3.ab2@7553>   MOVE.l (a7)+,a3
00039996 <AmiBlitz3.ab2@7554> BRA asmfixer__next
0003999A <AmiBlitz3.ab2@7557>   MOVE.w $A(A2),D0
0003999E <AmiBlitz3.ab2@7558>    BEQ.w asmfixer__noflag
000399A2 <AmiBlitz3.ab2@7559>   CMP.w #$1,D0
000399A6 <AmiBlitz3.ab2@7560>    BEQ.w asmfixer__tocount
000399AA <AmiBlitz3.ab2@7561>   CMP.w #$3,D0
000399AE <AmiBlitz3.ab2@7562>    BEQ.w asmfixer__tomoveq
000399B2 <AmiBlitz3.ab2@7563>   CMP.w #$4,D0
000399B6 <AmiBlitz3.ab2@7564>    BEQ.w asmfixer__totrap
000399BA <AmiBlitz3.ab2@7567>   CMP.w #$B,D1                                             ;long
000399BE <AmiBlitz3.ab2@7568>    BEQ.w asmfixer__isabsl
000399C2 <AmiBlitz3.ab2@7569> BRA asmfixer__word2                                              ;word
000399C8 <AmiBlitz3.ab2@7572>   CMP.l #$F,D3
000399CC <AmiBlitz3.ab2@7573>    BHI.w illtraperr
000399CE <AmiBlitz3.ab2@7574>   OR.b D3,-(A1)
000399D2 <AmiBlitz3.ab2@7575> BRA.w asmfixer__next
000399D8 <AmiBlitz3.ab2@7578>   CMP.l #$8,D3
000399DC <AmiBlitz3.ab2@7579>    BHI.w illimmerr
000399DE <AmiBlitz3.ab2@7580>   TST.l D3
000399E2 <AmiBlitz3.ab2@7581>    BEQ.w illimmerr
000399E6 <AmiBlitz3.ab2@7582>   ANDI.w #$7,D3
000399E8 <AmiBlitz3.ab2@7583>   LSL.w #8,D3
000399EA <AmiBlitz3.ab2@7584>   LSL.w #1,D3
000399EC <AmiBlitz3.ab2@7585>   OR.w D3,-(A1)
000399F0 <AmiBlitz3.ab2@7586> BRA.w asmfixer__next
000399F4 <AmiBlitz3.ab2@7589>    BSR.w chkbyte
000399F6 <AmiBlitz3.ab2@7590>   MOVE.b D3,-(A1)
000399F8 <AmiBlitz3.ab2@7593>   MOVEA.l (A2),A2
000399FC <AmiBlitz3.ab2@7594> BRA.w asmfixer__loop
00039A02 <AmiBlitz3.ab2@7597>   CLR.w constmode
00039A08 <AmiBlitz3.ab2@7600>   CLR.b curtemplabel
00039A0A <AmiBlitz3.ab2@7601> RTS
00039A0C <AmiBlitz3.ab2@7610>   BTST D3,D6
00039A10 <AmiBlitz3.ab2@7611>    BEQ.w illeaerr
00039A14 <AmiBlitz3.ab2@7612>    BSR.w makemode
00039A18 <AmiBlitz3.ab2@7613>   CMP.w #$7,D3
00039A1C <AmiBlitz3.ab2@7614>    BCS.w doea__skip
00039A1E <AmiBlitz3.ab2@7615>   MOVE.w D3,D2
00039A20 <AmiBlitz3.ab2@7616>   SUBQ.w #7,D2
00039A24 <AmiBlitz3.ab2@7617>   CMP.w #$5,D2
00039A28 <AmiBlitz3.ab2@7618>    BCS.w doea__skip0
00039A2A <AmiBlitz3.ab2@7619>   MOVEQ.l #$04,D2
00039A2C <AmiBlitz3.ab2@7622>   MOVEQ.l #$07,D3
00039A2E <AmiBlitz3.ab2@7625>   MOVE.b D7,D0
00039A32 <AmiBlitz3.ab2@7626>   ANDI.w #$F,D0
00039A36 <AmiBlitz3.ab2@7627>   CMP.w #$F,D0
00039A3A <AmiBlitz3.ab2@7628>    BEQ.w doea__skip2
00039A3C <AmiBlitz3.ab2@7629>   LSL.w D0,D3
00039A3E <AmiBlitz3.ab2@7630>   OR.w D3,D1
00039A40 <AmiBlitz3.ab2@7633>   LSR.w #4,D7
00039A44 <AmiBlitz3.ab2@7634>   ANDI.w #$F,D7
00039A48 <AmiBlitz3.ab2@7635>   CMP.w #$F,D7
00039A4C <AmiBlitz3.ab2@7636>    BEQ.w doea__skip3
00039A4E <AmiBlitz3.ab2@7637>   LSL.w D7,D2
00039A50 <AmiBlitz3.ab2@7638>   OR.w D2,D1
00039A52 <AmiBlitz3.ab2@7641> RTS
00039A58 <AmiBlitz3.ab2@7645>   CMP.l #$7F,D3
00039A5C <AmiBlitz3.ab2@7646>    BGT.w illdiserr
00039A62 <AmiBlitz3.ab2@7647>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00039A66 <AmiBlitz3.ab2@7648>    BLT.w illdiserr
00039A68 <AmiBlitz3.ab2@7649> RTS
00039A6E <AmiBlitz3.ab2@7653>   CMP.l #$7fff,D3
00039A72 <AmiBlitz3.ab2@7654>    BGT.w illdiserr
00039A78 <AmiBlitz3.ab2@7655>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00039A7C <AmiBlitz3.ab2@7656>    BLT.w illdiserr
00039A7E <AmiBlitz3.ab2@7657> RTS
00039A80 <AmiBlitz3.ab2@7662>   MOVE.b (a5)+,d0
00039A82 <AmiBlitz3.ab2@7663>   CMP.b d1,d0
00039A86 <AmiBlitz3.ab2@7664>   BEQ 'll10
00039A88 <AmiBlitz3.ab2@7665>   TST.b d0
00039A8C <AmiBlitz3.ab2@7666>   BNE 'll20
00039A8E <AmiBlitz3.ab2@7669>   SUBQ #1,a5
00039A90 <AmiBlitz3.ab2@7670> RTS
00039A92 <AmiBlitz3.ab2@7675>   MOVE.b (a5)+,d0
00039A96 <AmiBlitz3.ab2@7676>   CMP.b #",",d0
00039A9A <AmiBlitz3.ab2@7677>   BEQ 'll10
00039A9E <AmiBlitz3.ab2@7678>   CMP.b #";",d0
00039AA2 <AmiBlitz3.ab2@7679>   BEQ 'll10
00039AA6 <AmiBlitz3.ab2@7680>  CMP.b #":",d0
00039AAA <AmiBlitz3.ab2@7681>   BEQ 'll10
00039AAC <AmiBlitz3.ab2@7684>   TST.b d0
00039AB0 <AmiBlitz3.ab2@7685>   BNE 'll20
00039AB2 <AmiBlitz3.ab2@7688>   SUBQ #1,a5
00039AB4 <AmiBlitz3.ab2@7689> RTS
00039AB6 <AmiBlitz3.ab2@7693>   ADD.l a2,d1
00039ABC <AmiBlitz3.ab2@7694>   LEA tempspace,a1
00039ABE <AmiBlitz3.ab2@7695>   MOVE.l d1,a0
00039AC0 <AmiBlitz3.ab2@7698>   MOVE.b (a0)+,(a1)+
00039AC4 <AmiBlitz3.ab2@7699>   BNE.s 'l10
00039AC6 <AmiBlitz3.ab2@7700>   SUBQ.l #1,a0
00039AC8 <AmiBlitz3.ab2@7701>   SUBQ.l #1,a1
00039ACA <AmiBlitz3.ab2@7704>   MOVE.b (a5)+,(a1)+
00039ACE <AmiBlitz3.ab2@7705>   BNE.s 'l20
00039AD0 <AmiBlitz3.ab2@7706>   CLR.b (a1)
00039AD6 <AmiBlitz3.ab2@7707>   LEA tempspace,a5
00039AD8 <AmiBlitz3.ab2@7708> RTS
00039ADC <AmiBlitz3.ab2@7712>   MOVEM.l D1-D2/A0,-(A7)
00039ADE <AmiBlitz3.ab2@7713>   MOVE.l d0,d2
00039AE0 <AmiBlitz3.ab2@7714>   MOVEQ #0,d1
00039AE2 <AmiBlitz3.ab2@7715>   MOVE.l a5,a4
00039AE4 <AmiBlitz3.ab2@7718>   ADDQ.l #1,d1
00039AE6 <AmiBlitz3.ab2@7719>   MOVE.b (a5)+,d0
00039AEA <AmiBlitz3.ab2@7720>   CMP.b #",",d0
00039AEE <AmiBlitz3.ab2@7721>   BEQ 'll10
00039AF2 <AmiBlitz3.ab2@7722>   CMP.b #";",d0
00039AF6 <AmiBlitz3.ab2@7723>   BEQ 'll10
00039AFA <AmiBlitz3.ab2@7724>   CMP.b #":",d0
00039AFE <AmiBlitz3.ab2@7725>   BEQ 'll10
00039B02 <AmiBlitz3.ab2@7726>   CMP.b #"(",d0
00039B06 <AmiBlitz3.ab2@7727>   BEQ 'll10
00039B08 <AmiBlitz3.ab2@7728>   TST.b d0
00039B0C <AmiBlitz3.ab2@7729>   BNE 'll20
00039B0E <AmiBlitz3.ab2@7732>   SUBQ #1,a5
00039B12 <AmiBlitz3.ab2@7733>   CMP.b #"'",(a4)
00039B16 <AmiBlitz3.ab2@7734>   BEQ 'llocal
00039B1C <AmiBlitz3.ab2@7735>   TST.w inmacro
00039B20 <AmiBlitz3.ab2@7736>   BNE 'lmacro
00039B22 <AmiBlitz3.ab2@7737>   MOVEQ.l #$14+4,D0
00039B24 <AmiBlitz3.ab2@7738>   ADD.l d1,d0
00039B26 <AmiBlitz3.ab2@7739>   MOVE.l d1,-(a7)
00039B28 <AmiBlitz3.ab2@7740>   MOVEQ.l #$01,D1
00039B2E <AmiBlitz3.ab2@7741>   MOVEA.l _execbase,A6
00039B34 <AmiBlitz3.ab2@7742>   MOVE.l mempool2,a0
00039B38 <AmiBlitz3.ab2@7743>   JSR _AllocPooled(a6)
00039B3A <AmiBlitz3.ab2@7745>   MOVE.l (a7)+,d1
00039B3C <AmiBlitz3.ab2@7746>   TST.l d0
00039B40 <AmiBlitz3.ab2@7747>   BEQ nomemory
00039B42 <AmiBlitz3.ab2@7748>   MOVEA.l D0,A0
00039B4A <AmiBlitz3.ab2@7750>   MOVE.w linenumat+2,$A(A0)
00039B50 <AmiBlitz3.ab2@7752>   MOVE.l templabel,(A0)
00039B56 <AmiBlitz3.ab2@7753>   MOVE.l A0,templabel
00039B5E <AmiBlitz3.ab2@7754>   MOVE.l destpointer,$4(A0)
00039B62 <AmiBlitz3.ab2@7755>   MOVE.l d2,$8(A0)
00039B66 <AmiBlitz3.ab2@7756>   LEA $E(A0),A0
00039B6A <AmiBlitz3.ab2@7757>   MOVE.b #$14,(A0)+
00039B6C <AmiBlitz3.ab2@7758>   CLR.b (a0)+
00039B6E <AmiBlitz3.ab2@7760>   MOVE.l a0,d2
00039B70 <AmiBlitz3.ab2@7761>   ADDQ.l #4,d2
00039B72 <AmiBlitz3.ab2@7762>   MOVE.l d2,(a0)+
00039B74 <AmiBlitz3.ab2@7765>   MOVE.b (a4)+,(a0)+
00039B76 <AmiBlitz3.ab2@7766>   SUBQ.l #1,d1
00039B7A <AmiBlitz3.ab2@7767>   BNE 'lc1
00039B7C <AmiBlitz3.ab2@7768>   CLR.b (a0)+
00039B82 <AmiBlitz3.ab2@7769>   MOVE.w linenumat,(a0)
00039B86 <AmiBlitz3.ab2@7770>   MOVEM.l (A7)+,D1-D2/A0
00039B88 <AmiBlitz3.ab2@7771> RTS
00039B8A <AmiBlitz3.ab2@7774>   MOVEQ.l #$10+2,D0
00039B8C <AmiBlitz3.ab2@7775>   ADD.l d1,d0
00039B90 <AmiBlitz3.ab2@7776>   MOVEM.l a4/d3,-(a7)
00039B92 <AmiBlitz3.ab2@7777>   MOVE.l d1,d3
00039B94 <AmiBlitz3.ab2@7778>   MOVEQ.l #$01,D1
00039B9A <AmiBlitz3.ab2@7779>   MOVEA.l _execbase,A6
00039BA0 <AmiBlitz3.ab2@7780>   MOVE.l mempool2,a0
00039BA4 <AmiBlitz3.ab2@7781>   JSR _AllocPooled(a6)
00039BA6 <AmiBlitz3.ab2@7783>   TST.l d0
00039BAA <AmiBlitz3.ab2@7784>   BEQ nomemory
00039BAC <AmiBlitz3.ab2@7785>   MOVEA.l D0,A0
00039BB4 <AmiBlitz3.ab2@7788>   MOVE.w linenumat+2,$C(A0)
00039BBA <AmiBlitz3.ab2@7789>   MOVE.l templabel,(A0)
00039BC0 <AmiBlitz3.ab2@7790>   MOVE.l A0,templabel
00039BC8 <AmiBlitz3.ab2@7791>   MOVE.l destpointer,$4(A0)
00039BCC <AmiBlitz3.ab2@7792>   MOVE.l d2,$8(A0)
00039BD0 <AmiBlitz3.ab2@7793>   LEA $E(A0),A0
00039BD2 <AmiBlitz3.ab2@7794>   MOVE.b d3,(A0)+
00039BD8 <AmiBlitz3.ab2@7795>   ADD.b #$10,-1(a0)
00039BDC <AmiBlitz3.ab2@7796>   MOVE.b #$1,(a0)+
00039BDE <AmiBlitz3.ab2@7797>   SUBQ.w #1,d3
00039BE0 <AmiBlitz3.ab2@7800>   MOVE.b (a4)+,(a0)+
00039BE2 <AmiBlitz3.ab2@7801>   SUBQ.l #1,d3
00039BE6 <AmiBlitz3.ab2@7802>   BNE.s 'lm2
00039BE8 <AmiBlitz3.ab2@7803>   CLR.b (a0)+
00039BEE <AmiBlitz3.ab2@7804>   MOVE.w linenumat,(a0)
00039BF2 <AmiBlitz3.ab2@7805>   MOVEM.l (a7)+,d3/a4
00039BF6 <AmiBlitz3.ab2@7806>   MOVEM.l (A7)+,D1-D2/A0
00039BF8 <AmiBlitz3.ab2@7807> RTS
00039BFE <AmiBlitz3.ab2@7810>   LEA lastgloballabel,a1
00039C00 <AmiBlitz3.ab2@7813>   ADDQ.l #1,d1
00039C02 <AmiBlitz3.ab2@7814>   TST.b (a1)+
00039C06 <AmiBlitz3.ab2@7815>   BNE.s 'll11
00039C08 <AmiBlitz3.ab2@7816>   MOVEQ.l #$10+2,D0
00039C0A <AmiBlitz3.ab2@7817>   ADD.l d1,d0
00039C0E <AmiBlitz3.ab2@7818>   MOVEM.l a4/d3,-(a7)
00039C10 <AmiBlitz3.ab2@7819>   MOVE.l d1,d3
00039C12 <AmiBlitz3.ab2@7820>   MOVEQ.l #$01,D1
00039C18 <AmiBlitz3.ab2@7821>   MOVEA.l _execbase,A6
00039C1E <AmiBlitz3.ab2@7822>   MOVE.l mempool2,a0
00039C22 <AmiBlitz3.ab2@7823>   JSR _AllocPooled(a6)
00039C24 <AmiBlitz3.ab2@7825>   TST.l d0
00039C28 <AmiBlitz3.ab2@7826>   BEQ nomemory
00039C2A <AmiBlitz3.ab2@7827>   MOVEA.l D0,A0
00039C32 <AmiBlitz3.ab2@7830>   MOVE.w linenumat+2,$C(A0)
00039C38 <AmiBlitz3.ab2@7831>   MOVE.l templabel,(A0)
00039C3E <AmiBlitz3.ab2@7832>   MOVE.l A0,templabel
00039C46 <AmiBlitz3.ab2@7833>   MOVE.l destpointer,$4(A0)
00039C4A <AmiBlitz3.ab2@7834>   MOVE.l d2,$8(A0)
00039C4E <AmiBlitz3.ab2@7835>   LEA $E(A0),A0
00039C50 <AmiBlitz3.ab2@7836>   MOVE.b d3,(A0)+
00039C56 <AmiBlitz3.ab2@7837>   ADD.b #$10,-1(a0)
00039C5A <AmiBlitz3.ab2@7838>   MOVE.b #$1,(a0)+
00039C5C <AmiBlitz3.ab2@7839>   SUBQ.w #1,d3
00039C62 <AmiBlitz3.ab2@7840>   LEA lastgloballabel,a1
00039C64 <AmiBlitz3.ab2@7843>   SUBQ.l #1,d3
00039C66 <AmiBlitz3.ab2@7844>   MOVE.b (a1)+,(a0)+
00039C6A <AmiBlitz3.ab2@7845>   BNE.s 'lm3
00039C6C <AmiBlitz3.ab2@7846>   SUBQ.l #1,a0
00039C6E <AmiBlitz3.ab2@7849>   MOVE.b (a4)+,(a0)+
00039C70 <AmiBlitz3.ab2@7850>   SUBQ.l #1,d3
00039C74 <AmiBlitz3.ab2@7851>   BNE.s 'lm1
00039C76 <AmiBlitz3.ab2@7852>   CLR.b (a0)+
00039C7C <AmiBlitz3.ab2@7853>   MOVE.w linenumat,(a0)
00039C80 <AmiBlitz3.ab2@7854>   MOVEM.l (a7)+,d3/a4
00039C84 <AmiBlitz3.ab2@7855>   MOVEM.l (A7)+,D1-D2/A0
00039C86 <AmiBlitz3.ab2@7856> RTS
00039CB0 <AmiBlitz3.ab2@7860>   !basic
00039D12 <AmiBlitz3.ab2@7861>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00039D24 <AmiBlitz3.ab2@7862>   loop Delay_ 1
00039D2A <AmiBlitz3.ab2@7863> Goto loop
00039D2E <AmiBlitz3.ab2@7867>   MOVEM.l D0-D2/A0,-(A7)
00039D32 <AmiBlitz3.ab2@7868>   MOVE.w $E(A0),-(A7)
00039D36 <AmiBlitz3.ab2@7869>    BPL.w insasm__ok
00039D38 <AmiBlitz3.ab2@7870>   CLR.w (A7)
00039D3A <AmiBlitz3.ab2@7873>   MOVE.l A1,-(A7)
00039D3C <AmiBlitz3.ab2@7874>   MOVEQ.l #$10+2,D0
00039D42 <AmiBlitz3.ab2@7875>   ADD.w asmlen,D0
00039D44 <AmiBlitz3.ab2@7876>   MOVE.w D0,D2
00039D46 <AmiBlitz3.ab2@7877>   MOVEQ.l #$01,D1
00039D4C <AmiBlitz3.ab2@7878>   MOVEA.l _execbase,A6
00039D52 <AmiBlitz3.ab2@7879>   MOVE.l mempool2,a0
00039D56 <AmiBlitz3.ab2@7880>   JSR _AllocPooled(a6)
00039D58 <AmiBlitz3.ab2@7882>   MOVEA.l D0,A0
00039D60 <AmiBlitz3.ab2@7885>   MOVE.w linenumat+2,$C(A0)
00039D66 <AmiBlitz3.ab2@7886>   MOVE.l templabel,(A0)
00039D6C <AmiBlitz3.ab2@7887>   MOVE.l A0,templabel
00039D70 <AmiBlitz3.ab2@7888>   MOVE.l (A7),$4(A0)
00039D74 <AmiBlitz3.ab2@7889>   MOVE.w d3,$8(A0)
00039D7A <AmiBlitz3.ab2@7890>   MOVE.w $4(A7),$A(A0)
00039D7E <AmiBlitz3.ab2@7891>   LEA $E(A0),A0
00039D80 <AmiBlitz3.ab2@7892>   MOVE.b D2,(A0)+                                           ;length
00039D86 <AmiBlitz3.ab2@7893>   MOVEA.l asmbuff,A1
00039D88 <AmiBlitz3.ab2@7894>   ADDQ.w #1,A1
00039D8A <AmiBlitz3.ab2@7895>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00039D8E <AmiBlitz3.ab2@7896>    BNE.w insasm__loop
00039D90 <AmiBlitz3.ab2@7897>   MOVE.l (A1)+,(A0)+
00039D96 <AmiBlitz3.ab2@7898>   MOVE.w linenumat,(a0)
00039D9A <AmiBlitz3.ab2@7899> BRA.w insasm__loopdone
00039D9C <AmiBlitz3.ab2@7902>    MOVE.b (A1)+,(A0)+
00039DA0 <AmiBlitz3.ab2@7903>    BNE.w insasm__loop
00039DA6 <AmiBlitz3.ab2@7904>    MOVE.w linenumat,(a0)
00039DA8 <AmiBlitz3.ab2@7907>   MOVEA.l (A7)+,A1
00039DAA <AmiBlitz3.ab2@7908>   ADDQ.w #2,A7
00039DAE <AmiBlitz3.ab2@7909>   MOVEM.l (A7)+,D0-D2/A0
00039DB0 <AmiBlitz3.ab2@7910> RTS
00039DB4 <AmiBlitz3.ab2@7914>   CMP.w #$5,D3
00039DB8 <AmiBlitz3.ab2@7915>    BCS.w makemode__done
00039DBC <AmiBlitz3.ab2@7916>   CMP.w #$B,D3
00039DC0 <AmiBlitz3.ab2@7917>    BHI.w makemode__done2
00039DC4 <AmiBlitz3.ab2@7918>    BEQ.w makemode__imm
00039DC8 <AmiBlitz3.ab2@7919>    BSR.w insasm
00039DCC <AmiBlitz3.ab2@7920>   CMP.w #$5,D3
00039DD0 <AmiBlitz3.ab2@7921>    BEQ.w makemode__word
00039DD4 <AmiBlitz3.ab2@7922>   CMP.w #$6,D3
00039DD8 <AmiBlitz3.ab2@7923>    BEQ.w makemode__dxi
00039DDC <AmiBlitz3.ab2@7924>   CMP.w #$7,D3
00039DE0 <AmiBlitz3.ab2@7925>    BEQ.w makemode__word
00039DE4 <AmiBlitz3.ab2@7926>   CMP.w #$8,D3
00039DE8 <AmiBlitz3.ab2@7927>    BEQ.w makemode__long
00039DEC <AmiBlitz3.ab2@7928>   CMP.w #$9,D3
00039DF0 <AmiBlitz3.ab2@7929>    BEQ.w makemode__word
00039DF6 <AmiBlitz3.ab2@7933>   CMPA.l destbufferend,A1
00039DFA <AmiBlitz3.ab2@7934>    BCS.w makemode__ok7
00039DFC <AmiBlitz3.ab2@7935>   ADDQ.w #2,A1
00039DFE <AmiBlitz3.ab2@7936> RTS
00039E00 <AmiBlitz3.ab2@7939>   MOVE.w D4,(A1)+
00039E02 <AmiBlitz3.ab2@7940> RTS
00039E0A <AmiBlitz3.ab2@7943>   CMPI.w #$8,asmsize
00039E0E <AmiBlitz3.ab2@7944>    BCC.w makemode__immlong
00039E10 <AmiBlitz3.ab2@7945>   MOVEQ.l #$10,D3
00039E14 <AmiBlitz3.ab2@7946>    BSR.w insasm
00039E16 <AmiBlitz3.ab2@7947>   MOVEQ.l #$0B,D3
00039E1A <AmiBlitz3.ab2@7948> BRA.w makemode__word
00039E1E <AmiBlitz3.ab2@7951>   BSR.w insasm
00039E20 <AmiBlitz3.ab2@7954>   ADDQ.w #2,A1
00039E22 <AmiBlitz3.ab2@7957>   ADDQ.w #2,A1
00039E24 <AmiBlitz3.ab2@7958> RTS
00039E28 <AmiBlitz3.ab2@7961>   CMP.w #$F,D3
00039E2C <AmiBlitz3.ab2@7962>    BNE.w makemode__done
00039E32 <AmiBlitz3.ab2@7963>   CMPA.l destbufferend,A1
00039E36 <AmiBlitz3.ab2@7964>    BCS.w makemode__ok3
00039E38 <AmiBlitz3.ab2@7965>   ADDQ.w #2,A1
00039E3A <AmiBlitz3.ab2@7966>   ADDQ.w #4,A7
00039E3C <AmiBlitz3.ab2@7967> RTS
00039E3E <AmiBlitz3.ab2@7970>   MOVE.w D2,(A1)+
00039E40 <AmiBlitz3.ab2@7971>   ADDQ.w #4,A7
00039E42 <AmiBlitz3.ab2@7974> RTS
00039E46 <AmiBlitz3.ab2@7978>   BSR.w storeloc
00039E50 <AmiBlitz3.ab2@7979>   MOVE.l linenumat,oldline
00039E52 <AmiBlitz3.ab2@7980>   MOVEQ.l #$00,D1
00039E56 <AmiBlitz3.ab2@7981>    BSR.w get1bytemain
00039E5A <AmiBlitz3.ab2@7982>    BEQ.w JL_0_676E
00039E5C <AmiBlitz3.ab2@7983>   MOVEQ.l #$00,D3
00039E60 <AmiBlitz3.ab2@7984> BRA.w JL_0_6726
00039E64 <AmiBlitz3.ab2@7987>    BSR.w get1bytemain
00039E68 <AmiBlitz3.ab2@7988>    BNE.w JL_0_671C
00039E6A <AmiBlitz3.ab2@7991>   TST.w D3
00039E6E <AmiBlitz3.ab2@7992>    BNE.w brackets_                                         ;syntax error brackets
00039E72 <AmiBlitz3.ab2@7993> BRA.w JL_0_676C
00039E78 <AmiBlitz3.ab2@7996>    MOVE.w instringon,D4
00039E7C <AmiBlitz3.ab2@7998>      BEQ JL_0_6726
00039E7E <AmiBlitz3.ab2@8001>     MOVEQ #0,d0
00039E80 <AmiBlitz3.ab2@8002>      MOVE.b (a5)+,d0                                       ;fix "ue"
00039E86 <AmiBlitz3.ab2@8003>      MOVE.w d0,lastchar
00039E8A <AmiBlitz3.ab2@8004>      BEQ ready
00039E8E <AmiBlitz3.ab2@8005>      CMP.b #$22,d0
00039E92 <AmiBlitz3.ab2@8006>      BNE 'l1
00039E98 <AmiBlitz3.ab2@8007>      NOT.w instringon
00039E9C <AmiBlitz3.ab2@8008> BRA JL_0_670A
00039EA0 <AmiBlitz3.ab2@8011>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00039EA4 <AmiBlitz3.ab2@8012>            BNE 'l10
00039EA8 <AmiBlitz3.ab2@8013>            CMP.b #"@",(a5)
00039EAC <AmiBlitz3.ab2@8014>            BNE 'l10
00039EB2 <AmiBlitz3.ab2@8017>            TST.w ininclude
00039EB6 <AmiBlitz3.ab2@8018>            BNE 'inc
00039EBC <AmiBlitz3.ab2@8019>            MOVE.l sourceline3,a5
00039EC2 <AmiBlitz3.ab2@8020>            CMP.l #0,a5
00039EC6 <AmiBlitz3.ab2@8021>            BNE 'l11t
00039ECC <AmiBlitz3.ab2@8022>            MOVEA.l sourceline,A5
00039ECE <AmiBlitz3.ab2@8025>            MOVEA.l (A5),A5
00039ED4 <AmiBlitz3.ab2@8026>            CMP.l #0,a5
00039ED8 <AmiBlitz3.ab2@8027>            BEQ JL_0_676C
00039EDE <AmiBlitz3.ab2@8028>            MOVE.l a5,sourceline3
00039EE2 <AmiBlitz3.ab2@8029>            LEA $9(A5),A5
00039EE6 <AmiBlitz3.ab2@8030> BRA 'l11
00039EE8 <AmiBlitz3.ab2@8033>            ADDQ.l #1,a5
00039EEA <AmiBlitz3.ab2@8034>            TST.b (a5)
00039EEE <AmiBlitz3.ab2@8035>            BNE 'inc
00039EF0 <AmiBlitz3.ab2@8039>            ADDQ.l #1,a5
00039EF2 <AmiBlitz3.ab2@8040>            TST.b (a5)
00039EF6 <AmiBlitz3.ab2@8041>            BEQ illeolerr
00039EF8 <AmiBlitz3.ab2@8042>            MOVE.l a5,-(a7)
00039EFC <AmiBlitz3.ab2@8045>       CMP.b #" ",(a5)+
00039F00 <AmiBlitz3.ab2@8046>       BEQ 'l110
00039F06 <AmiBlitz3.ab2@8047>        CMP.b #";",-1(a5)
00039F08 <AmiBlitz3.ab2@8048>        MOVE.l (a7)+,a5
00039F0C <AmiBlitz3.ab2@8049>        BEQ 'l111
00039F10 <AmiBlitz3.ab2@8050> BRA JL_0_670A
00039F14 <AmiBlitz3.ab2@8053>    CMP.w #$29,D0
00039F18 <AmiBlitz3.ab2@8054>    BNE.w JL_0_673A
00039F1A <AmiBlitz3.ab2@8055>   TST.w D3
00039F1E <AmiBlitz3.ab2@8056>    BEQ.w JL_0_676C
00039F20 <AmiBlitz3.ab2@8059>   SUBQ.w #1,D3
00039F24 <AmiBlitz3.ab2@8060> BRA.w JL_0_670A
00039F28 <AmiBlitz3.ab2@8063>    CMP.w #$7D,D0
00039F2C <AmiBlitz3.ab2@8064>    BEQ.w JL_0_6734
00039F30 <AmiBlitz3.ab2@8065>   CMP.w #$28,D0
00039F34 <AmiBlitz3.ab2@8066>    BNE.w JL_0_6750
00039F36 <AmiBlitz3.ab2@8069>    ADDQ.w #1,D3
00039F3A <AmiBlitz3.ab2@8070> BRA.w JL_0_670A
00039F3E <AmiBlitz3.ab2@8073>   CMP.w #$7B,D0
00039F42 <AmiBlitz3.ab2@8074>    BEQ.w JL_0_674A
00039F46 <AmiBlitz3.ab2@8075>   CMP.w #$2C,D0
00039F4A <AmiBlitz3.ab2@8076>    BNE.w JL_0_670A
00039F4C <AmiBlitz3.ab2@8077>   TST.w D3
00039F50 <AmiBlitz3.ab2@8078>    BNE.w JL_0_670A
00039F52 <AmiBlitz3.ab2@8079>   ADDQ.w #1,D1
00039F56 <AmiBlitz3.ab2@8080> BRA.w JL_0_670A
00039F58 <AmiBlitz3.ab2@8083>   ADDQ.w #1,D1
00039F5E <AmiBlitz3.ab2@8086>   CLR.l sourceline3
00039F68 <AmiBlitz3.ab2@8087>   MOVE.l oldline,linenumat
00039F6C <AmiBlitz3.ab2@8088> BRA.w resloc
00039F72 <AmiBlitz3.ab2@8092>    CLR.w numreps
00039F74 <AmiBlitz3.ab2@8093>   MOVE.w D1,D0
00039F78 <AmiBlitz3.ab2@8094>   ANDI.w #$FF00,D0
00039F7C <AmiBlitz3.ab2@8095>    BEQ.w fetchlibps__noreps
00039F7E <AmiBlitz3.ab2@8096>   LSR.w #8,D0
00039F80 <AmiBlitz3.ab2@8097>   LSR.w #4,D0
00039F84 <AmiBlitz3.ab2@8098>    BEQ.w fetchlibps__skip
00039F86 <AmiBlitz3.ab2@8099>   SUB.b D0,D1
00039F90 <AmiBlitz3.ab2@8100>    MOVE.w regnum,regnumfunc
00039F96 <AmiBlitz3.ab2@8101>    MOVE.b funcparloop,-(a7)
00039F9E <AmiBlitz3.ab2@8102>    MOVE.b #0,funcparloop
00039FA4 <AmiBlitz3.ab2@8103>    MOVE.l leftsidetype,-(a7)
00039FAA <AmiBlitz3.ab2@8104>    MOVE.l rightsidetype,-(a7)
00039FB0 <AmiBlitz3.ab2@8105>    CLR.l leftsidetype
00039FB6 <AmiBlitz3.ab2@8106>    CLR.l rightsidetype
00039FBC <AmiBlitz3.ab2@8107>    MOVE.b blitzparloop,-(a7)
00039FC4 <AmiBlitz3.ab2@8108>    MOVE.b #1,blitzparloop
00039FC8 <AmiBlitz3.ab2@8109>    BSR.w fetchpees2
00039FCE <AmiBlitz3.ab2@8110>    MOVE.b (a7)+,blitzparloop
00039FD4 <AmiBlitz3.ab2@8111>    MOVE.l (a7)+,rightsidetype
00039FDA <AmiBlitz3.ab2@8112>    MOVE.l (a7)+,leftsidetype
00039FE0 <AmiBlitz3.ab2@8113>    MOVE.b (a7)+,funcparloop
00039FE4 <AmiBlitz3.ab2@8114>   CMP.w #$2C,D0
00039FE8 <AmiBlitz3.ab2@8115>    BNE.w syntaxerr
00039FEA <AmiBlitz3.ab2@8118>   MOVE.w D1,D2
00039FEC <AmiBlitz3.ab2@8119>   LSR.w #8,D2
00039FF0 <AmiBlitz3.ab2@8120>   ANDI.w #$7,D2
00039FF2 <AmiBlitz3.ab2@8123>    CMP.b D2,D1
00039FF6 <AmiBlitz3.ab2@8124>    BCS.w fetchlibps__repsdone
00039FF8 <AmiBlitz3.ab2@8125>   SUB.b D2,D1
00039FFC <AmiBlitz3.ab2@8126>   MOVEM.l D2/A2,-(A7)
00039FFE <AmiBlitz3.ab2@8127>   MOVE.w D2,D0
0003A004 <AmiBlitz3.ab2@8128>   MOVE.b funcparloop,-(a7)
0003A00C <AmiBlitz3.ab2@8129>   MOVE.b #0,funcparloop
0003A012 <AmiBlitz3.ab2@8130>   MOVE.l leftsidetype,-(a7)
0003A018 <AmiBlitz3.ab2@8131>   MOVE.l rightsidetype,-(a7)
0003A01E <AmiBlitz3.ab2@8132>   CLR.l leftsidetype
0003A024 <AmiBlitz3.ab2@8133>   CLR.l rightsidetype
0003A02A <AmiBlitz3.ab2@8134>   MOVE.b blitzparloop,-(a7)
0003A032 <AmiBlitz3.ab2@8135>   MOVE.b #1,blitzparloop
0003A036 <AmiBlitz3.ab2@8136>   BSR.w fetchpees4
0003A03C <AmiBlitz3.ab2@8137>   MOVE.b (a7)+,blitzparloop
0003A042 <AmiBlitz3.ab2@8138>   MOVE.l (a7)+,rightsidetype
0003A048 <AmiBlitz3.ab2@8139>   MOVE.l (a7)+,leftsidetype
0003A04E <AmiBlitz3.ab2@8140>   MOVE.b (a7)+,funcparloop
0003A052 <AmiBlitz3.ab2@8141>   MOVEM.l (A7)+,D2/A2
0003A058 <AmiBlitz3.ab2@8142>   ADDQ.w #1,numreps
0003A05C <AmiBlitz3.ab2@8143> BRA.w fetchlibps__rloop
0003A062 <AmiBlitz3.ab2@8146>    MOVE.w numreps,D3
0003A066 <AmiBlitz3.ab2@8147>    BEQ.w syntaxerr
0003A068 <AmiBlitz3.ab2@8148>   ADDA.w D2,A2
0003A06C <AmiBlitz3.ab2@8149>   ANDI.w #$FF,D1
0003A070 <AmiBlitz3.ab2@8150>    BEQ.w fetchlibps__done
0003A074 <AmiBlitz3.ab2@8151>   CMP.w #$2C,D0
0003A078 <AmiBlitz3.ab2@8152>    BNE.w syntaxerr
0003A07A <AmiBlitz3.ab2@8155>    MOVE.w D1,D0
0003A07E <AmiBlitz3.ab2@8156>    BNE.w fetchpees2b
0003A080 <AmiBlitz3.ab2@8159> RTS
0003A086 <AmiBlitz3.ab2@8162>   MOVE.b funcparloop,-(a7)
0003A08C <AmiBlitz3.ab2@8163>   MOVE.l leftsidetype,-(a7)
0003A092 <AmiBlitz3.ab2@8164>   MOVE.l rightsidetype,-(a7)
0003A098 <AmiBlitz3.ab2@8165>   CLR.l leftsidetype
0003A09E <AmiBlitz3.ab2@8166>   CLR.l rightsidetype
0003A0A6 <AmiBlitz3.ab2@8167>   MOVE.b #0,funcparloop
0003A0AC <AmiBlitz3.ab2@8168>   MOVE.b blitzparloop,-(a7)
0003A0B4 <AmiBlitz3.ab2@8169>   MOVE.b #1,blitzparloop
0003A0B8 <AmiBlitz3.ab2@8170>   BSR.w fetchpees2
0003A0BE <AmiBlitz3.ab2@8171>   MOVE.b (a7)+,blitzparloop
0003A0C4 <AmiBlitz3.ab2@8172>   MOVE.l (a7)+,rightsidetype
0003A0CA <AmiBlitz3.ab2@8173>   MOVE.l (a7)+,leftsidetype
0003A0D0 <AmiBlitz3.ab2@8174>   MOVE.b (a7)+,funcparloop
0003A0D2 <AmiBlitz3.ab2@8175> RTS
0003A0D6 <AmiBlitz3.ab2@8179> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
0003A0D8 <AmiBlitz3.ab2@8182> partostack:  Ds.w 1                                        ;pmode org source
0003A0DA <AmiBlitz3.ab2@8186>   MOVEQ.l #$01,D2
0003A0DE <AmiBlitz3.ab2@8187> BRA.w fetchpees3
0003A0E0 <AmiBlitz3.ab2@8190>   MOVEQ.l #$00,D2
0003A0E4 <AmiBlitz3.ab2@8193>   ANDI.w #$F,D0
0003A0EA <AmiBlitz3.ab2@8201>   CLR.w parnum
0003A0EC <AmiBlitz3.ab2@8202>   MOVE.w D1,-(A7)
0003A0F0 <AmiBlitz3.ab2@8203>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
0003A0F6 <AmiBlitz3.ab2@8204>   MOVE.w D2,partostack
0003A0F8 <AmiBlitz3.ab2@8205>   MOVE.w D0,-(A7)
0003A0FC <AmiBlitz3.ab2@8206>   CMP.w #"@@",(a5)                                         ;was l15
0003A100 <AmiBlitz3.ab2@8207>   BNE fetchpees__loop
0003A106 <AmiBlitz3.ab2@8208>   TST.w ininclude                                          ;merge macrolines
0003A10A <AmiBlitz3.ab2@8209>   BNE errorjoin
0003A110 <AmiBlitz3.ab2@8210>        MOVEA.l sourceline,A5
0003A112 <AmiBlitz3.ab2@8213>            MOVEA.l (A5),A5
0003A118 <AmiBlitz3.ab2@8214>            MOVE.l a5,sourceline
0003A11C <AmiBlitz3.ab2@8215>            LEA $9(A5),A5
0003A122 <AmiBlitz3.ab2@8216>            ADDQ.l #1,linenumat
0003A124 <AmiBlitz3.ab2@8220>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0003A128 <AmiBlitz3.ab2@8221>    BNE.w fetchpees__skip0
0003A12E <AmiBlitz3.ab2@8222>   MOVE.w userp,D2                                          ;user selected type
0003A130 <AmiBlitz3.ab2@8224>    MOVE.l A2,-(A7)
0003A136 <AmiBlitz3.ab2@8225>    ADDQ.w #1,parnum
0003A13C <AmiBlitz3.ab2@8226>    TST.b funccall
0003A140 <AmiBlitz3.ab2@8227>    BEQ fetchpees__skip0_l1
0003A148 <AmiBlitz3.ab2@8228>    CMP.w #6,parnum
0003A14C <AmiBlitz3.ab2@8229>    BLE fetchpees__skip0_l1
0003A150 <AmiBlitz3.ab2@8230>    CMP.w #7,d2
0003A156 <AmiBlitz3.ab2@8236>    TST.b fpu
0003A15A <AmiBlitz3.ab2@8237>    BEQ fetchpees__skip0_old
0003A160 <AmiBlitz3.ab2@8238>    TST.w regnumfunc
0003A164 <AmiBlitz3.ab2@8239>    BEQ fetchpees__skip0_old
0003A16A <AmiBlitz3.ab2@8240>    CMP.w #$48e7,-4(a4)
0003A16E <AmiBlitz3.ab2@8241>    BNE fetchpees__skip0_old
0003A170 <AmiBlitz3.ab2@8242>    MOVEQ #0,d1
0003A176 <AmiBlitz3.ab2@8243>    MOVE.w regnum,d1
0003A17C <AmiBlitz3.ab2@8244>    CMP regnumfunc,d1                                       ;fpu reg function save
0003A180 <AmiBlitz3.ab2@8245>    BGE fetchpees__skip0_old
0003A182 <AmiBlitz3.ab2@8246>    ASL.w #7,d1
0003A184 <AmiBlitz3.ab2@8247>    MOVE.l d0,-(a7)
0003A18A <AmiBlitz3.ab2@8248>    MOVE.w regnumfunc,d0
0003A190 <AmiBlitz3.ab2@8249>    CLR.w regmask
0003A196 <AmiBlitz3.ab2@8251>    BSET d0,regmask
0003A198 <AmiBlitz3.ab2@8252>    SUBQ #1,d0
0003A19C <AmiBlitz3.ab2@8253>    BNE fetchpees__skip0_loop
0003A19E <AmiBlitz3.ab2@8254>     MOVEQ #0,d0
0003A1A4 <AmiBlitz3.ab2@8257>       BTST d0,regmask
0003A1A8 <AmiBlitz3.ab2@8258>       BEQ fetchpees__skip0_noa7
0003A1AA <AmiBlitz3.ab2@8259>       MOVEQ #0,d1
0003A1AC <AmiBlitz3.ab2@8260>       MOVE.w d0,d1
0003A1AE <AmiBlitz3.ab2@8261>       SUBQ.w #1,d1
0003A1B0 <AmiBlitz3.ab2@8262>       ASL #7,d1
0003A1B6 <AmiBlitz3.ab2@8263>       OR.l #$f2277400,d1                                   ;fmove.d
0003A1BA <AmiBlitz3.ab2@8265>       BSR writelong
0003A1C0 <AmiBlitz3.ab2@8267>       ADDQ.l #2,stacktrack
0003A1C6 <AmiBlitz3.ab2@8268>       MOVE.l stacktrack,d1
0003A1CC <AmiBlitz3.ab2@8269>       CMP.l #180,d1
0003A1D0 <AmiBlitz3.ab2@8270>       BGT conmemerr                                        ;formel too complex
0003A1D2 <AmiBlitz3.ab2@8271>       MOVE.l a0,-(a7)
0003A1D8 <AmiBlitz3.ab2@8272>       LEA fpustackbase,a0
0003A1E0 <AmiBlitz3.ab2@8273>       MOVE.w regmask,0(a0,d1)
0003A1E2 <AmiBlitz3.ab2@8274>       MOVE.l (a7)+,a0
0003A1E4 <AmiBlitz3.ab2@8277>       ADDQ.w #1,d0
0003A1EA <AmiBlitz3.ab2@8278>       CMP.w regnumfunc,d0
0003A1EE <AmiBlitz3.ab2@8279>       BLE fetchpees__skip0_loop2
0003A1F0 <AmiBlitz3.ab2@8282>       MOVE.l (a7)+,d0
0003A1F6 <AmiBlitz3.ab2@8285>      MOVE.l currentfunccall,-(a7)
0003A1FC <AmiBlitz3.ab2@8286>      MOVE.w parnum,-(a7)
0003A202 <AmiBlitz3.ab2@8287>      TST.l rightsidetype
0003A206 <AmiBlitz3.ab2@8288>      BSR.w JL_0_6836
0003A20C <AmiBlitz3.ab2@8289>      MOVE.w (a7)+,parnum
0003A212 <AmiBlitz3.ab2@8291>    MOVE.l (a7)+,currentfunccall
0003A218 <AmiBlitz3.ab2@8293>    TST.b typecheck                            ;typecheck for function call
0003A21C <AmiBlitz3.ab2@8294>    BEQ 'notypecheck
0003A222 <AmiBlitz3.ab2@8295>    TST.b notypecheck
0003A226 <AmiBlitz3.ab2@8296>    BNE 'notypecheck
0003A22C <AmiBlitz3.ab2@8297>    TST.b blitzparloop
0003A230 <AmiBlitz3.ab2@8298>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0003A23A <AmiBlitz3.ab2@8299>    CMP.l #0,currentfunccall
0003A23E <AmiBlitz3.ab2@8300>    BEQ 'isblitzlibcall
0003A242 <AmiBlitz3.ab2@8301>    MOVEM.l a0/a1,-(a7)
0003A248 <AmiBlitz3.ab2@8302>    MOVE.l currentfunccall,a0
0003A24E <AmiBlitz3.ab2@8303>    MOVE.w parnum,d1
0003A254 <AmiBlitz3.ab2@8304>    TST.b isconstantvalue
0003A258 <AmiBlitz3.ab2@8305>    BEQ 'noconstant
0003A262 <AmiBlitz3.ab2@8306>    CMP.l #0,lastconstantvalue
0003A266 <AmiBlitz3.ab2@8307>    BEQ 'isnull
0003A26A <AmiBlitz3.ab2@8309>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0003A270 <AmiBlitz3.ab2@8310>    CMP.l #0,a0
0003A274 <AmiBlitz3.ab2@8311>    BEQ 'notype
0003A27C <AmiBlitz3.ab2@8312>    CMP.l #$100,4(a0)
0003A280 <AmiBlitz3.ab2@8313>    BLE 'notype
0003A286 <AmiBlitz3.ab2@8314>    MOVE.l lasttoken,d1
0003A28A <AmiBlitz3.ab2@8315>    CMP.w #$b581,d1                   ; ok, when token for null
0003A28E <AmiBlitz3.ab2@8316>    BEQ 'isnull
0003A294 <AmiBlitz3.ab2@8317>    TST.l typetocast
0003A298 <AmiBlitz3.ab2@8318>    BEQ 'nocast
0003A29E <AmiBlitz3.ab2@8319>    MOVE.l typetocast,a1
0003A2A2 <AmiBlitz3.ab2@8320>    BRA 'typecheck
0003A2A8 <AmiBlitz3.ab2@8322>    MOVE.l rightsidetype,a1
0003A2AE <AmiBlitz3.ab2@8323>    CMP.l #0,a1
0003A2B2 <AmiBlitz3.ab2@8324>    BEQ 'notype
0003A2BA <AmiBlitz3.ab2@8325> 'typecheck   CMP.l #$100,4(a1)
0003A2BC <AmiBlitz3.ab2@8327>    CMP.l a0,a1
0003A2C0 <AmiBlitz3.ab2@8328>    BEQ 'ok
0003A2C8 <AmiBlitz3.ab2@8330>    CMP.l #$100,4(a1)                 ; is a type here
0003A2CC <AmiBlitz3.ab2@8331>    BLE 'error
0003A2D0 <AmiBlitz3.ab2@8332>    MOVE.l 4(a1),a1                   ; load the address of type.
0003A2D4 <AmiBlitz3.ab2@8333>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0003A2D8 <AmiBlitz3.ab2@8334>    BEQ 'ok
0003A2DE <AmiBlitz3.ab2@8335> 'error: JMP   error_convert_types    ; for syntax 4
0003A2E4 <AmiBlitz3.ab2@8339>    CLR.l typetocast
0003A2E8 <AmiBlitz3.ab2@8340>    MOVEM.l (a7)+,a0/a1
0003A2EE <AmiBlitz3.ab2@8344>    CLR.l lastfunction
0003A2F4 <AmiBlitz3.ab2@8345>    TST.b fpu
0003A2F8 <AmiBlitz3.ab2@8346>    BEQ fetchpees__skip0_noprint
0003A2FA <AmiBlitz3.ab2@8347>   MOVE.l (a7),a2
0003A2FC <AmiBlitz3.ab2@8348>   ADDQ.l #1,a2
0003A300 <AmiBlitz3.ab2@8349>    CMP.b #5,d2
0003A304 <AmiBlitz3.ab2@8350>   BNE fetchpees__skip0_noprint
0003A30A <AmiBlitz3.ab2@8351>   CMP.b #$5d,24(a2)
0003A30E <AmiBlitz3.ab2@8352>   BNE fetchpees__skip0_noprint
0003A314 <AmiBlitz3.ab2@8353>   CMP.b #$81,25(a2)
0003A318 <AmiBlitz3.ab2@8354>   BLT fetchpees__skip0_noprint
0003A31E <AmiBlitz3.ab2@8355>   CMP.b #$86,25(a2)
0003A322 <AmiBlitz3.ab2@8356>   BEQ fetchpees__skip0_ok
0003A328 <AmiBlitz3.ab2@8357>   CMP.b #$87,25(a2)
0003A32C <AmiBlitz3.ab2@8358>   BEQ fetchpees__skip0_ok
0003A332 <AmiBlitz3.ab2@8359>   CMP.b #$88,25(a2)
0003A336 <AmiBlitz3.ab2@8360>   BEQ fetchpees__skip0_ok
0003A33C <AmiBlitz3.ab2@8361>   CMP.b #$83,25(a2)
0003A340 <AmiBlitz3.ab2@8362>   BGT fetchpees__skip0_noprint
0003A346 <AmiBlitz3.ab2@8365>   MOVE.l destpointer,a4
0003A34C <AmiBlitz3.ab2@8366>   CMP.w #$2f00,-2(a4)
0003A350 <AmiBlitz3.ab2@8367>   BNE fetchpees__skip0_noprint
0003A356 <AmiBlitz3.ab2@8368>   SUBQ.l #2,destpointer
0003A35C <AmiBlitz3.ab2@8370>   MOVE.l #$f2277400,d1
0003A360 <AmiBlitz3.ab2@8371>   BSR writelong                                            ;fmove.d fp0,-(a7)
0003A366 <AmiBlitz3.ab2@8372>   ADDQ #4,a2offset
0003A36C <AmiBlitz3.ab2@8390>   CLR.b optistring
0003A36E <AmiBlitz3.ab2@8391>   MOVEA.l (A7)+,A2
0003A372 <AmiBlitz3.ab2@8392>    CMP.w #"@",d0
0003A376 <AmiBlitz3.ab2@8393>   BNE fetchpees__skip0_l10
0003A37A <AmiBlitz3.ab2@8394>    CMP.b #"@",(a5)
0003A37E <AmiBlitz3.ab2@8395>   BNE fetchpees__skip0_l10
0003A384 <AmiBlitz3.ab2@8396>   TST.w ininclude
0003A388 <AmiBlitz3.ab2@8397>   BNE errorjoin
0003A38E <AmiBlitz3.ab2@8398>   MOVEA.l sourceline,A5
0003A390 <AmiBlitz3.ab2@8399>            MOVEA.l (A5),A5
0003A396 <AmiBlitz3.ab2@8400>            MOVE.l a5,sourceline
0003A39C <AmiBlitz3.ab2@8401>            ADDQ.l #1,linenumat
0003A3A0 <AmiBlitz3.ab2@8402>            LEA $9(A5),A5
0003A3A2 <AmiBlitz3.ab2@8403>            MOVEQ #0,d0
0003A3A6 <AmiBlitz3.ab2@8404>            BSR get1bytemain
0003A3AA <AmiBlitz3.ab2@8407>    CMP.b #32,(a5)+ ;for space after a ,
0003A3AE <AmiBlitz3.ab2@8408>    BEQ fetchpees__skip0_l10:
0003A3B0 <AmiBlitz3.ab2@8409>    SUBQ.l #1,a5
0003A3B4 <AmiBlitz3.ab2@8411>    CMP.w #"@@",(a5)                                        ;if merge
0003A3B8 <AmiBlitz3.ab2@8412>    BNE fetchpees__skip0_l15
0003A3BC <AmiBlitz3.ab2@8413>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0003A3C2 <AmiBlitz3.ab2@8414>    JSR mergeline
0003A3C6 <AmiBlitz3.ab2@8415>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
0003A3C8 <AmiBlitz3.ab2@8435>       SUBQ.w #1,(A7)
0003A3CC <AmiBlitz3.ab2@8436>    BEQ.w fetchpees__done
0003A3D0 <AmiBlitz3.ab2@8438>     CMP.w #$2C,D0
0003A3D4 <AmiBlitz3.ab2@8440>    BNE overloadfunc
0003A3D8 <AmiBlitz3.ab2@8441> BRA.w fetchpees__loop
0003A3DA <AmiBlitz3.ab2@8444>   ADDQ.w #2,A7
0003A3E0 <AmiBlitz3.ab2@8445>   MOVE.w (A7)+,partostack
0003A3E2 <AmiBlitz3.ab2@8446>   MOVE.w (A7)+,D1
0003A3E8 <AmiBlitz3.ab2@8447>   CLR.b isconstantvalue
0003A3F2 <AmiBlitz3.ab2@8448>   MOVE.l currentfunccall,lastfunction
0003A3F8 <AmiBlitz3.ab2@8449>   CLR.b funccall
0003A3FE <AmiBlitz3.ab2@8450>   CLR.l currentfunccall
0003A400 <AmiBlitz3.ab2@8451> RTS
0003A406 <AmiBlitz3.ab2@8455>   CLR.b funccall
0003A40C <AmiBlitz3.ab2@8456>   MOVE.w regnum,d1
0003A412 <AmiBlitz3.ab2@8457>   MOVE.l currentfunccall,a4
0003A416 <AmiBlitz3.ab2@8458>   CMP.b $20(a4),d1                                         ;increase if more pars
0003A41A <AmiBlitz3.ab2@8459>   BLT notparerr
0003A41C <AmiBlitz3.ab2@8462>   MOVE.b (a2)+,d2
0003A424 <AmiBlitz3.ab2@8463>   ADD.w #1,parnum
0003A42A <AmiBlitz3.ab2@8464>   TST.b fpu
0003A42E <AmiBlitz3.ab2@8465>   BEQ 'nofpu
0003A432 <AmiBlitz3.ab2@8466>   CMP.b #5,d2
0003A436 <AmiBlitz3.ab2@8467>   BNE 'nofpu
0003A438 <AmiBlitz3.ab2@8468>   MOVEQ #0,d1
0003A43E <AmiBlitz3.ab2@8469>   MOVE.w regnum,d1
0003A446 <AmiBlitz3.ab2@8470>   CMP.w #6,regnum
0003A44A <AmiBlitz3.ab2@8471>   BLT 'nostack2
0003A44E <AmiBlitz3.ab2@8476>   MOVE.w #$2c3c,d1
0003A452 <AmiBlitz3.ab2@8477>   BSR writeword
0003A458 <AmiBlitz3.ab2@8478>   MOVE.l #$bf800000,d1
0003A45C <AmiBlitz3.ab2@8479>   BSR writelong
0003A460 <AmiBlitz3.ab2@8480>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0003A466 <AmiBlitz3.ab2@8481>   ADD.w parnum,d1
0003A46C <AmiBlitz3.ab2@8482>   JSR Atokejsr
0003A472 <AmiBlitz3.ab2@8483>   TST.w dontwrite
0003A476 <AmiBlitz3.ab2@8484>   BNE 'l1
0003A47C <AmiBlitz3.ab2@8485>   MOVE.l data1start,d1
0003A482 <AmiBlitz3.ab2@8486>   MOVE.l destpointer,a4
0003A486 <AmiBlitz3.ab2@8487>   ADD.l d1,-4(a4)
0003A48C <AmiBlitz3.ab2@8488>   MOVE.l destpointer,d1
0003A48E <AmiBlitz3.ab2@8489>   SUBQ.l #4,d1
0003A494 <AmiBlitz3.ab2@8490>   SUB.l destbufferstart,d1
0003A496 <AmiBlitz3.ab2@8491>   MOVE.l d2,-(a7)
0003A498 <AmiBlitz3.ab2@8492>   MOVE.l d1,d2
0003A49E <AmiBlitz3.ab2@8493>   JSR addhunkoffset
0003A4A0 <AmiBlitz3.ab2@8494>   MOVE.l (a7)+,d2
0003A4A4 <AmiBlitz3.ab2@8495> BRA 'l1
0003A4A6 <AmiBlitz3.ab2@8498>   ASL.l #7,d1
0003A4AC <AmiBlitz3.ab2@8499>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0003A4B0 <AmiBlitz3.ab2@8500>   BSR writelong
0003A4B2 <AmiBlitz3.ab2@8501>   MOVEQ #-1,d1                                             ;-1
0003A4B6 <AmiBlitz3.ab2@8502>   BSR writeword
0003A4BA <AmiBlitz3.ab2@8503> BRA 'l1
0003A4C0 <AmiBlitz3.ab2@8506>   MOVE.w regnum,d1
0003A4C8 <AmiBlitz3.ab2@8507>   CMP.w #6,regnum
0003A4CC <AmiBlitz3.ab2@8508>   BLT 'nostack
0003A4D0 <AmiBlitz3.ab2@8513>   CMP.b #2,d2
0003A4D4 <AmiBlitz3.ab2@8514>   BGT 'nw
0003A4D8 <AmiBlitz3.ab2@8515> BRA 'nos
0003A4DC <AmiBlitz3.ab2@8524>   CMP.w #7,d2
0003A4E0 <AmiBlitz3.ab2@8525>   BNE 'nos
0003A4E6 <AmiBlitz3.ab2@8526>   ADDQ #4,a2offset
0003A4EC <AmiBlitz3.ab2@8528>     MOVE.l #$48780000,d1
0003A4F0 <AmiBlitz3.ab2@8529>     BSR writelong
0003A4F6 <AmiBlitz3.ab2@8530>     ADDQ.w #4,a2offset
0003A4FA <AmiBlitz3.ab2@8531>     MOVE.w #$2f3c,d1
0003A4FE <AmiBlitz3.ab2@8532>     BSR writeword
0003A504 <AmiBlitz3.ab2@8533>     MOVE.l #-1,d1
0003A508 <AmiBlitz3.ab2@8534>     BSR writelong
0003A50C <AmiBlitz3.ab2@8535>   BRA 'l1
0003A510 <AmiBlitz3.ab2@8539>   CMP.b #4,d2
0003A514 <AmiBlitz3.ab2@8540>       BNE 'noq
0003A518 <AmiBlitz3.ab2@8541>       MOVE.w #$2c3c,d1
0003A51C <AmiBlitz3.ab2@8542>       BSR writeword
0003A522 <AmiBlitz3.ab2@8543>       MOVE.l #$ffff0000,d1
0003A526 <AmiBlitz3.ab2@8544>       BSR writelong
0003A52A <AmiBlitz3.ab2@8545> BRA 'noq2
0003A52E <AmiBlitz3.ab2@8548>      CMP.b #5,d2
0003A532 <AmiBlitz3.ab2@8549>      BNE 'nof
0003A536 <AmiBlitz3.ab2@8550>       MOVE.w #$2c3c,d1
0003A53A <AmiBlitz3.ab2@8551>       BSR writeword
0003A540 <AmiBlitz3.ab2@8552>       MOVE.l #$800000c1,d1
0003A544 <AmiBlitz3.ab2@8553>       BSR writelong
0003A548 <AmiBlitz3.ab2@8554> BRA 'noq2
0003A54C <AmiBlitz3.ab2@8557>   MOVE.w #$7cff,d1
0003A550 <AmiBlitz3.ab2@8558>   BSR writeword
0003A554 <AmiBlitz3.ab2@8561>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0003A55A <AmiBlitz3.ab2@8562>   ADD.w parnum,d1
0003A560 <AmiBlitz3.ab2@8563>   JSR Atokejsr
0003A566 <AmiBlitz3.ab2@8564>    TST.w dontwrite
0003A56A <AmiBlitz3.ab2@8565>    BNE 'l1
0003A570 <AmiBlitz3.ab2@8566>    MOVE.l data1start,d1
0003A576 <AmiBlitz3.ab2@8567>    MOVE.l destpointer,a4
0003A57A <AmiBlitz3.ab2@8568>    ADD.l d1,-4(a4)
0003A580 <AmiBlitz3.ab2@8569>    MOVE.l destpointer,d1
0003A582 <AmiBlitz3.ab2@8570>    SUBQ.l #4,d1
0003A588 <AmiBlitz3.ab2@8571>    SUB.l destbufferstart,d1
0003A58A <AmiBlitz3.ab2@8572>    MOVE.l d2,-(a7)
0003A58C <AmiBlitz3.ab2@8573>    MOVE.l d1,d2
0003A592 <AmiBlitz3.ab2@8574>    JSR addhunkoffset
0003A594 <AmiBlitz3.ab2@8575>    MOVE.l (a7)+,d2
0003A598 <AmiBlitz3.ab2@8576> BRA 'l1
0003A59A <AmiBlitz3.ab2@8579>   ASL.l #8,d1
0003A59C <AmiBlitz3.ab2@8580>   ASL.l #1,d1
0003A5A2 <AmiBlitz3.ab2@8581>   OR.l #$203c,d1                                           ;-1
0003A5A6 <AmiBlitz3.ab2@8582>   BSR writeword
0003A5AC <AmiBlitz3.ab2@8583>   MOVE.l #-1,d1
0003A5B0 <AmiBlitz3.ab2@8584>   CMP.b #4,d2
0003A5B4 <AmiBlitz3.ab2@8585>   BNE 'nq1
0003A5BA <AmiBlitz3.ab2@8586>   MOVE.l #$ffff0000,d1
0003A5BE <AmiBlitz3.ab2@8589>   CMP.b #5,d2
0003A5C2 <AmiBlitz3.ab2@8590>   BNE 'nof2
0003A5C8 <AmiBlitz3.ab2@8591>   TST.b fpu
0003A5CC <AmiBlitz3.ab2@8592>   BNE 'nof2
0003A5D2 <AmiBlitz3.ab2@8593>   MOVE.l #$800000c1,d1
0003A5D6 <AmiBlitz3.ab2@8596>    BSR writelong
0003A5DA <AmiBlitz3.ab2@8597>    CMP.b #7,d2
0003A5DE <AmiBlitz3.ab2@8598>    BNE 'l1
0003A5E4 <AmiBlitz3.ab2@8600>      MOVE.l #$48780000,d1
0003A5E8 <AmiBlitz3.ab2@8601>      BSR writelong
0003A5EE <AmiBlitz3.ab2@8603>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
0003A5F4 <AmiBlitz3.ab2@8604>    MOVE.l #$594f,d1                                        ; subq #4,a7
0003A5F8 <AmiBlitz3.ab2@8605>    BSR writeword
0003A5FA <AmiBlitz3.ab2@8608>    SUBQ.w #1,(A7)
0003A5FE <AmiBlitz3.ab2@8609>    BEQ.w fetchpees__done
0003A604 <AmiBlitz3.ab2@8610>    ADDQ.w #1,regnum
0003A608 <AmiBlitz3.ab2@8611> BRA 'ol2
0003A60A <AmiBlitz3.ab2@8614>    MOVE.w D2,D1
0003A60E <AmiBlitz3.ab2@8615>    ANDI.w #$40,D1
0003A614 <AmiBlitz3.ab2@8616>    MOVE.b D1,partostack
0003A616 <AmiBlitz3.ab2@8617>    TST.b D2
0003A61A <AmiBlitz3.ab2@8618>     BMI.w handlevara
0003A61E <AmiBlitz3.ab2@8619>    BTST #$5,D2
0003A622 <AmiBlitz3.ab2@8620>     BNE.w handlearr
0003A628 <AmiBlitz3.ab2@8621>     MOVE.w regnumstore,-(a7)
0003A62E <AmiBlitz3.ab2@8622>     MOVE.w tempregnum,-(a7)
0003A634 <AmiBlitz3.ab2@8623>     MOVE.w parnum,-(a7)
0003A638 <AmiBlitz3.ab2@8624>     BSR.w getap                                        ;recursive entry
0003A63E <AmiBlitz3.ab2@8625>     MOVE.w (a7)+,parnum
0003A644 <AmiBlitz3.ab2@8626>     MOVE.w (a7)+,tempregnum
0003A64A <AmiBlitz3.ab2@8627>     MOVE.w (a7)+,regnumstore
0003A64E <AmiBlitz3.ab2@8630>     MOVE.w partostack(PC),D1
0003A652 <AmiBlitz3.ab2@8631>     BEQ.w JL_0_6886
0003A658 <AmiBlitz3.ab2@8634>    ADDQ.w #4,a2offset
0003A65E <AmiBlitz3.ab2@8637>    MOVE.w pushdn,D1
0003A664 <AmiBlitz3.ab2@8638>    OR.w regnum,D1
0003A668 <AmiBlitz3.ab2@8639>    CMP.w #$3,D2
0003A66C <AmiBlitz3.ab2@8640>     BCC.w JL_0_6880
0003A672 <AmiBlitz3.ab2@8641>    SUBQ.w #2,a2offset
0003A676 <AmiBlitz3.ab2@8642>    ORI.w #$1000,D1
0003A67A <AmiBlitz3.ab2@8643>    BSR.w writeword
0003A67C <AmiBlitz3.ab2@8644> RTS
0003A680 <AmiBlitz3.ab2@8647>   CMP.b #7,d2
0003A684 <AmiBlitz3.ab2@8648>    BNE 'l10
0003A68C <AmiBlitz3.ab2@8649>    CMP.b #2,optistring
0003A692 <AmiBlitz3.ab2@8653>   TST.b iee
0003A696 <AmiBlitz3.ab2@8654>   BEQ 'old
0003A69A <AmiBlitz3.ab2@8655>   CMP.b #5,d2
0003A69E <AmiBlitz3.ab2@8656>   BNE 'old
0003A6A2 <AmiBlitz3.ab2@8659>   BSR.w writeword                                          ;write val to stack
0003A6A4 <AmiBlitz3.ab2@8660> RTS
0003A6AA <AmiBlitz3.ab2@8663>   SUBQ.w #4,a2offset
0003A6AC <AmiBlitz3.ab2@8664> RTS
0003A6B2 <AmiBlitz3.ab2@8667>   ADDQ.w #1,regnum
0003A6B4 <AmiBlitz3.ab2@8668> RTS
0003A6B6 <AmiBlitz3.ab2@8672>   MOVEQ.l #$03,D2
0003A6BA <AmiBlitz3.ab2@8673> BRA.w JL_0_6854
0003A6BE <AmiBlitz3.ab2@8677>   ANDI.w #$7,D2
0003A6C0 <AmiBlitz3.ab2@8678>   MOVE.w D2,-(A7)
0003A6C4 <AmiBlitz3.ab2@8679>    BSR.w JL_0_A916
0003A6C8 <AmiBlitz3.ab2@8680>   CMP.b #$7,D2                                             ;ignore pnt to $
0003A6CC <AmiBlitz3.ab2@8681>    BEQ.w JL_0_68C0
0003A6D0 <AmiBlitz3.ab2@8682>   BTST #$E,D2
0003A6D4 <AmiBlitz3.ab2@8683>    BEQ.w JL_0_68B6
0003A6D8 <AmiBlitz3.ab2@8684>   MOVE.b #$3,D2                                            ;pointer to long
0003A6DC <AmiBlitz3.ab2@8685> BRA.w JL_0_68C0
0003A6DE <AmiBlitz3.ab2@8688>    TST.b D2
0003A6E2 <AmiBlitz3.ab2@8689>    BNE.w JL_0_68C0
0003A6E6 <AmiBlitz3.ab2@8690>   MOVE.b #$3,D2
0003A6E8 <AmiBlitz3.ab2@8693>   MOVE.w (A7)+,D3
0003A6EA <AmiBlitz3.ab2@8694>   TST.b D3
0003A6EE <AmiBlitz3.ab2@8695>    BEQ.w JL_0_68D2
0003A6F0 <AmiBlitz3.ab2@8696>   CMP.b D2,D3
0003A6F4 <AmiBlitz3.ab2@8697>    BEQ.w putalp
0003A6F8 <AmiBlitz3.ab2@8698> BRA.w mismatcherr
0003A6FE <AmiBlitz3.ab2@8701>   ADDQ.w #2,a2offset
0003A702 <AmiBlitz3.ab2@8702>   MOVE.w ptype(PC),D1
0003A706 <AmiBlitz3.ab2@8703>    BSR.w writeword
0003A708 <AmiBlitz3.ab2@8704>   MOVEQ.l #$00,D1
0003A70A <AmiBlitz3.ab2@8705>   MOVE.b D2,D1
0003A70E <AmiBlitz3.ab2@8706>    BSR.w writeword
0003A712 <AmiBlitz3.ab2@8707> BRA.w putalp
0003A714 <AmiBlitz3.ab2@8710>    MOVE.w D2,-(A7)
0003A718 <AmiBlitz3.ab2@8711>    BSR.w JL_0_694E
0003A71E <AmiBlitz3.ab2@8712>   BTST #$4,$1(A7)
0003A722 <AmiBlitz3.ab2@8713>    BEQ.w JL_0_6900
0003A726 <AmiBlitz3.ab2@8714>    BSR.w JL_0_699A
0003A72C <AmiBlitz3.ab2@8717>    BTST #$3,$1(A7)
0003A730 <AmiBlitz3.ab2@8718>    BEQ.w JL_0_690E
0003A734 <AmiBlitz3.ab2@8719>    BSR.w sendtype
0003A736 <AmiBlitz3.ab2@8722>    MOVE.w (A7)+,D2
0003A73A <AmiBlitz3.ab2@8723> BRA.w get1bytemain
0003A740 <AmiBlitz3.ab2@8726>   MOVE.w regnum,D1
0003A742 <AmiBlitz3.ab2@8727>   LSL.w #8,D1
0003A744 <AmiBlitz3.ab2@8728>   LSL.w #1,D1
0003A748 <AmiBlitz3.ab2@8729>   ORI.w #$7000,D1
0003A74E <AmiBlitz3.ab2@8730>   BTST #$0,$7(A3)
0003A752 <AmiBlitz3.ab2@8731>    BNE.w JL_0_6946                                         ;A Pointer
0003A75A <AmiBlitz3.ab2@8732>   CMPI.l #$100,$4(A2)
0003A75E <AmiBlitz3.ab2@8733>    BCC.w arrerr1                                           ;illegal type to send
0003A762 <AmiBlitz3.ab2@8734>   MOVE.b $7(A2),D1
0003A766 <AmiBlitz3.ab2@8737>   BSR.w writeword                                          ;moveq #type,d regat
0003A768 <AmiBlitz3.ab2@8738>   MOVEQ.l #$02,D2                                          ;just a word.
0003A76C <AmiBlitz3.ab2@8739> BRA.w JL_0_685C
0003A770 <AmiBlitz3.ab2@8742>   MOVE.b #$3,D1
0003A774 <AmiBlitz3.ab2@8743> BRA.w JL_0_693C
0003A778 <AmiBlitz3.ab2@8747>    BSR.w get1bytemain                                      ;write array paramter code
0003A77C <AmiBlitz3.ab2@8748>    BSR.w getparameter
0003A784 <AmiBlitz3.ab2@8749>   BTST #$1,flagmask+1
0003A788 <AmiBlitz3.ab2@8750>    BEQ.w syntaxerr
0003A78C <AmiBlitz3.ab2@8751>    BSR.w JL_0_8E3C
0003A790 <AmiBlitz3.ab2@8752>    BSR.w get1bytemain
0003A794 <AmiBlitz3.ab2@8753>   CMP.w #$29,D0                                            ;we just want a() or whatever
0003A798 <AmiBlitz3.ab2@8754>    BNE.w syntaxerr
0003A79E <AmiBlitz3.ab2@8755>   MOVE.w notshared,D1
0003A7A2 <AmiBlitz3.ab2@8756>    BNE.w noarrayerr
0003A7A8 <AmiBlitz3.ab2@8757>   MOVE.w regnum,D1
0003A7AA <AmiBlitz3.ab2@8758>   LSL.w #8,D1
0003A7AC <AmiBlitz3.ab2@8759>   LSL.w #1,D1
0003A7B0 <AmiBlitz3.ab2@8760>   OR.w fbase(PC),D1
0003A7B6 <AmiBlitz3.ab2@8761>    TST.b varmode
0003A7BA <AmiBlitz3.ab2@8762>    BEQ 'l1
0003A7BE <AmiBlitz3.ab2@8763>    BCLR #0,d1
0003A7C2 <AmiBlitz3.ab2@8766>    BSR.w writeword
0003A7C6 <AmiBlitz3.ab2@8767>   MOVE.w $4(A3),D1
0003A7CA <AmiBlitz3.ab2@8768>    BSR.w writeword
0003A7CE <AmiBlitz3.ab2@8769> BRA.w putalp
0003A7D4 <AmiBlitz3.ab2@8773>   MOVE.w regnum,D1
0003A7D6 <AmiBlitz3.ab2@8774>   LSL.w #8,D1
0003A7D8 <AmiBlitz3.ab2@8775>   LSL.w #1,D1
0003A7DC <AmiBlitz3.ab2@8776>   OR.w fbase(PC),D1
0003A7E2 <AmiBlitz3.ab2@8777>    TST.b varmode
0003A7E6 <AmiBlitz3.ab2@8778>    BEQ 'l1
0003A7EA <AmiBlitz3.ab2@8779>    BCLR #0,d1
0003A7EE <AmiBlitz3.ab2@8782>    BSR.w writeword
0003A7F2 <AmiBlitz3.ab2@8783>   MOVE.w $8(A3),D1
0003A7F4 <AmiBlitz3.ab2@8784>   LSL.w #2,D1
0003A7FA <AmiBlitz3.ab2@8785>   MOVE.w varmode,D2
0003A7FE <AmiBlitz3.ab2@8786>    BEQ.w JL_0_69BE
0003A800 <AmiBlitz3.ab2@8787>   NEG.w D1
0003A804 <AmiBlitz3.ab2@8790>    ADD.w $4(A3),D1
0003A808 <AmiBlitz3.ab2@8791>    BSR.w writeword
0003A80E <AmiBlitz3.ab2@8792>   MOVE.w regnum,D1
0003A810 <AmiBlitz3.ab2@8793>   LSL.w #8,D1
0003A812 <AmiBlitz3.ab2@8794>   LSL.w #1,D1
0003A816 <AmiBlitz3.ab2@8795>   MOVE.w partostack(PC),D2
0003A81A <AmiBlitz3.ab2@8796>    BNE.w JL_0_69F4
0003A822 <AmiBlitz3.ab2@8797>   CMPI.w #$7,regnum
0003A826 <AmiBlitz3.ab2@8798>    BCC.w JL_0_69F4
0003A82A <AmiBlitz3.ab2@8799>   OR.w pushlast(PC),D1
0003A830 <AmiBlitz3.ab2@8800>   MOVE.w regnum,D2
0003A832 <AmiBlitz3.ab2@8801>   SUBQ.w #1,D2
0003A834 <AmiBlitz3.ab2@8802>   OR.w D2,D1
0003A838 <AmiBlitz3.ab2@8803> BRA.w JL_0_69F8
0003A83C <AmiBlitz3.ab2@8806>   OR.w pushadd(PC),D1
0003A840 <AmiBlitz3.ab2@8809>   BSR.w writeword
0003A848 <AmiBlitz3.ab2@8810>   MOVE.b #$1,partostack
0003A84C <AmiBlitz3.ab2@8811> BRA.w putalp
0003A850 <AmiBlitz3.ab2@8815> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0003A852 <AmiBlitz3.ab2@8816> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0003A854 <AmiBlitz3.ab2@8817> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
0003A858 <AmiBlitz3.ab2@8822>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
0003A85C <AmiBlitz3.ab2@8823>    BEQ.w evalu2
0003A860 <AmiBlitz3.ab2@8824> BRA.w eval
0003A866 <AmiBlitz3.ab2@8828>   MOVEA.l libpointer,A1
0003A86A <AmiBlitz3.ab2@8831>    CMPA.w #$0,A1
0003A86E <AmiBlitz3.ab2@8832>    BEQ.w resetlibs__done
0003A874 <AmiBlitz3.ab2@8833>   MOVE.w #-1,$A(A1)
0003A87A <AmiBlitz3.ab2@8834>   BCLR #$7,$C(A1)
0003A87C <AmiBlitz3.ab2@8835>   MOVEA.l (A1),A1
0003A880 <AmiBlitz3.ab2@8836> BRA.w resetlibs__loop
0003A882 <AmiBlitz3.ab2@8839> RTS
0003A886 <AmiBlitz3.ab2@8843>   MOVE.w #$FFFE,D1
0003A88A <AmiBlitz3.ab2@8846>    BSR.w JL_0_6F38
0003A890 <AmiBlitz3.ab2@8849>   TST.w cfetchmode
0003A894 <AmiBlitz3.ab2@8850>    BEQ.w uselib3__noconst
0003A89A <AmiBlitz3.ab2@8851>   BTST #$6,$C(A1)
0003A89E <AmiBlitz3.ab2@8852>    BNE.w uselib3__constok
0003A8A2 <AmiBlitz3.ab2@8853> BRA.w badconerr                                            ;Can't use this Library!
0003A8A4 <AmiBlitz3.ab2@8856> RTS
0003A8AA <AmiBlitz3.ab2@8859>    BSET #$7,$C(A1)
0003A8AE <AmiBlitz3.ab2@8860>    BNE.w JL_0_6C74                                         ;already done....
0003A8B4 <AmiBlitz3.ab2@8861>    CMPI.w #-1,$A(A1)
0003A8B8 <AmiBlitz3.ab2@8862>    BNE.w JL_0_6C74                                         ;something already here
0003A8BE <AmiBlitz3.ab2@8866>    TST.w dirmode
0003A8C2 <AmiBlitz3.ab2@8867>    BEQ.b JL_0_6A86
0003A8C8 <AmiBlitz3.ab2@8868>    TST.b exdebug
0003A8CC <AmiBlitz3.ab2@8869>    BEQ 'l1
0003A8D0 <AmiBlitz3.ab2@8870> BRA.b JL_0_6A86
0003A8D6 <AmiBlitz3.ab2@8873>   BCLR #$7,$C(A1)
0003A8DA <AmiBlitz3.ab2@8874> BRA.w dirliberr
0003A8E0 <AmiBlitz3.ab2@8877>   MOVE.b debugmode,-(a7)
0003A8E4 <AmiBlitz3.ab2@8878>   MOVEM.l D1/A0/A2,-(A7)
0003A8EC <AmiBlitz3.ab2@8884>   BTST #$7,use_debugger
0003A8F0 <AmiBlitz3.ab2@8885>   BNE 'debugon
0003A8F2 <AmiBlitz3.ab2@8886>   CLR.w D1
0003A8F6 <AmiBlitz3.ab2@8887> BRA.b 'debugoff
0003A8F8 <AmiBlitz3.ab2@8890>   SNE D1
0003A8FE <AmiBlitz3.ab2@8893>   MOVE.b d1,debugmode
0003A900 <AmiBlitz3.ab2@8897>   MOVEA.l A1,A0
0003A904 <AmiBlitz3.ab2@8898>   ADDA.l $12(A1),A0
0003A908 <AmiBlitz3.ab2@8899>   TST.w -$2(A0)
0003A90C <AmiBlitz3.ab2@8900>    BEQ.w JL_0_6AD2
0003A910 <AmiBlitz3.ab2@8901>   MOVEM.l A0-A1,-(A7)
0003A914 <AmiBlitz3.ab2@8902>   MOVE.w #$FB4F,D1
0003A918 <AmiBlitz3.ab2@8903>    BSR.w uselib
0003A91C <AmiBlitz3.ab2@8904>   MOVEM.l (A7)+,A0-A1
0003A922 <AmiBlitz3.ab2@8905>   ADDQ.w #1,globalvarpointer
0003A92A <AmiBlitz3.ab2@8906>   BCLR #$0,globalvarpointer+1
0003A932 <AmiBlitz3.ab2@8907>   MOVE.w globalvarpointer,-$6(A0)
0003A938 <AmiBlitz3.ab2@8908>   ADDQ.w #4,globalvarpointer
0003A93C <AmiBlitz3.ab2@8909>   TST.l -$E(A0)
0003A940 <AmiBlitz3.ab2@8910>    BEQ.w JL_0_6AD2
0003A946 <AmiBlitz3.ab2@8911>   ADDQ.w #4,globalvarpointer
0003A94E <AmiBlitz3.ab2@8914>   MOVE.l libend,$28(A1)
0003A950 <AmiBlitz3.ab2@8915>   MOVEA.l A1,A0
0003A954 <AmiBlitz3.ab2@8916>   ADDA.l $12(A1),A0
0003A956 <AmiBlitz3.ab2@8917>   MOVE.l A1,D1
0003A95A <AmiBlitz3.ab2@8918>   ADD.l $6(A1),D1
0003A95E <AmiBlitz3.ab2@8919>   TST.l $2C(A1)
0003A962 <AmiBlitz3.ab2@8920>    BEQ.w JL_0_6AFE
0003A968 <AmiBlitz3.ab2@8922>   TST.b debugmode
0003A96C <AmiBlitz3.ab2@8923>    BNE.w JL_0_6AFE
0003A96E <AmiBlitz3.ab2@8924>   MOVE.l A1,D1
0003A972 <AmiBlitz3.ab2@8925>   ADD.l $2C(A1),D1
0003A978 <AmiBlitz3.ab2@8928>   MOVEA.l libend,A2
0003A97E <AmiBlitz3.ab2@8931>   CMPA.l data1start,A2
0003A982 <AmiBlitz3.ab2@8932>    BCS.w JL_0_6B24
0003A98A <AmiBlitz3.ab2@8933>   MOVE.w #$FFFF,dontwrite
0003A98C <AmiBlitz3.ab2@8936>   ADDQ.w #2,A0
0003A98E <AmiBlitz3.ab2@8937>   ADDQ.w #2,A2
0003A990 <AmiBlitz3.ab2@8938>   CMPA.l D1,A0
0003A994 <AmiBlitz3.ab2@8939>    BCS.w JL_0_6B16
0003A998 <AmiBlitz3.ab2@8940> BRA.w JL_0_6B2C
0003A99A <AmiBlitz3.ab2@8943>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
0003A99C <AmiBlitz3.ab2@8944>   CMPA.l D1,A0
0003A9A0 <AmiBlitz3.ab2@8945>    BCS.w JL_0_6B04
0003A9A6 <AmiBlitz3.ab2@8948>   MOVE.l A2,libend
0003A9AA <AmiBlitz3.ab2@8949>   MOVE.l $20(A1),D1
0003A9AE <AmiBlitz3.ab2@8950>    BEQ.w JL_0_6BB8
0003A9B2 <AmiBlitz3.ab2@8951>   MOVEM.l D0/D2-D3,-(A7)
0003A9B6 <AmiBlitz3.ab2@8952>   MOVEA.l $24(A1),A0
0003A9B8 <AmiBlitz3.ab2@8953>   MOVEQ.l #$00,D3
0003A9BA <AmiBlitz3.ab2@8956>   MOVE.l (A0)+,D2
0003A9BE <AmiBlitz3.ab2@8957>   TST.l $2C(A1)
0003A9C2 <AmiBlitz3.ab2@8958>    BEQ.w JL_0_6B60
0003A9C8 <AmiBlitz3.ab2@8959>   TST.b debugmode
0003A9CC <AmiBlitz3.ab2@8960>    BNE.w JL_0_6B60
0003A9D0 <AmiBlitz3.ab2@8961>   CMP.l $2C(A1),D2
0003A9D4 <AmiBlitz3.ab2@8962>    BCC.w JL_0_6BA0
0003A9D8 <AmiBlitz3.ab2@8965>   TST.w $0(A1,D2.L)
0003A9DC <AmiBlitz3.ab2@8966>    BPL.w JL_0_6B72
0003A9DE <AmiBlitz3.ab2@8967>   TST.l D3
0003A9E2 <AmiBlitz3.ab2@8968>    BNE.w JL_0_6B72
0003A9E4 <AmiBlitz3.ab2@8969>   MOVE.l A0,D0
0003A9E6 <AmiBlitz3.ab2@8970>   MOVE.l D1,D3
0003A9EA <AmiBlitz3.ab2@8973>   SUB.l $12(A1),D2
0003A9EE <AmiBlitz3.ab2@8974>    BMI.w JL_0_6BA0
0003A9F2 <AmiBlitz3.ab2@8975>   ADD.l $28(A1),D2
0003A9F4 <AmiBlitz3.ab2@8976>   MOVE.l D2,-(A7)
0003A9FA <AmiBlitz3.ab2@8977>   SUB.l destbufferstart,D2
0003A9FE <AmiBlitz3.ab2@8978>    BSR.w addhunkoffset
0003AA00 <AmiBlitz3.ab2@8979>   MOVEA.l (A7)+,A2
0003AA06 <AmiBlitz3.ab2@8980>   TST.w dontwrite
0003AA0A <AmiBlitz3.ab2@8981>    BNE.w JL_0_6BA0
0003AA0E <AmiBlitz3.ab2@8982>   MOVE.l $28(A1),D2
0003AA12 <AmiBlitz3.ab2@8983>   SUB.l $12(A1),D2
0003AA14 <AmiBlitz3.ab2@8984>   ADD.l D2,(A2)
0003AA16 <AmiBlitz3.ab2@8987>    SUBQ.l #1,D1
0003AA1A <AmiBlitz3.ab2@8988>    BNE.w JL_0_6B44
0003AA1C <AmiBlitz3.ab2@8989>   MOVE.l D3,D2
0003AA20 <AmiBlitz3.ab2@8990>    BEQ.w JL_0_6BB4
0003AA22 <AmiBlitz3.ab2@8991>   MOVEA.l D0,A2
0003AA24 <AmiBlitz3.ab2@8992>   SUBQ.w #4,A2
0003AA28 <AmiBlitz3.ab2@8993>    BSR.w JL_0_6E34
0003AA2C <AmiBlitz3.ab2@8996>    MOVEM.l (A7)+,D0/D2-D3
0003AA30 <AmiBlitz3.ab2@8999>    MOVEM.l (A7)+,D1/A0/A2
0003AA34 <AmiBlitz3.ab2@9000>   MOVEM.l D1-D2,-(A7)
0003AA38 <AmiBlitz3.ab2@9001>   TST.w $1A(A1)
0003AA3C <AmiBlitz3.ab2@9002>    BNE.w JL_0_6BD0
0003AA40 <AmiBlitz3.ab2@9003>   CLR.w $A(A1)
0003AA44 <AmiBlitz3.ab2@9004> BRA.w JL_0_6C5E
0003AA4A <AmiBlitz3.ab2@9007>   ADDQ.w #1,globalvarpointer
0003AA52 <AmiBlitz3.ab2@9008>   BCLR #$0,globalvarpointer+1
0003AA5A <AmiBlitz3.ab2@9009>   MOVE.w globalvarpointer,$A(A1)
0003AA5E <AmiBlitz3.ab2@9010>   CMP.w #-$12D,D1
0003AA62 <AmiBlitz3.ab2@9011>    BNE.w JL_0_6C16
0003AA6A <AmiBlitz3.ab2@9012>   MOVE.w $A(A1),movestdn+2
0003AA72 <AmiBlitz3.ab2@9013>   MOVE.w $A(A1),pusha3+2
0003AA7A <AmiBlitz3.ab2@9014>   MOVE.w $A(A1),pusha32+2
0003AA82 <AmiBlitz3.ab2@9015>   MOVE.w $A(A1),pulla3+2
0003AA8A <AmiBlitz3.ab2@9016>   MOVE.w $A(A1),geta3+2
0003AA8E <AmiBlitz3.ab2@9019>    CMP.w #-$3E9,D1
0003AA92 <AmiBlitz3.ab2@9020>    BNE.w JL_0_6C3E
0003AA9A <AmiBlitz3.ab2@9021>   MOVE.w $A(A1),dataget+2
0003AAA2 <AmiBlitz3.ab2@9022>   MOVE.w $A(A1),dataput+2
0003AAAA <AmiBlitz3.ab2@9023>   MOVE.w $A(A1),rescode+6
0003AAB2 <AmiBlitz3.ab2@9024>   MOVE.w $A(A1),rescode2+2
0003AAB8 <AmiBlitz3.ab2@9027>   ADDQ.w #2,globalvarpointer
0003AABC <AmiBlitz3.ab2@9028>   TST.w $1A(A1)
0003AAC0 <AmiBlitz3.ab2@9029>    BMI.w JL_0_6C52
0003AAC6 <AmiBlitz3.ab2@9030>   ADDQ.w #2,globalvarpointer
0003AACA <AmiBlitz3.ab2@9033>   MOVEM.l D1/A1,-(A7)
0003AACE <AmiBlitz3.ab2@9034>   BSR.w uselib2
0003AAD2 <AmiBlitz3.ab2@9035>   MOVEM.l (A7)+,D1/A1
0003AAD4 <AmiBlitz3.ab2@9038>   MOVE.w D1,D2
0003AAD8 <AmiBlitz3.ab2@9039>   MOVE.l $16(A1),D1
0003AADC <AmiBlitz3.ab2@9040>    BSR.w uselib2_org
0003AAE0 <AmiBlitz3.ab2@9041>   MOVE.l $1C(A1),D1
0003AAE4 <AmiBlitz3.ab2@9042>    BSR.w uselib2_org
0003AAE8 <AmiBlitz3.ab2@9043>   MOVEM.l (A7)+,D1-D2
0003AAEE <AmiBlitz3.ab2@9045>   MOVE.b (a7)+,debugmode
0003AAF0 <AmiBlitz3.ab2@9048> RTS
0003AAF2 <AmiBlitz3.ab2@9052>   MOVEQ.l #$00,D2
0003AAF8 <AmiBlitz3.ab2@9055>   MOVEA.l tokeslist,A2
0003AAFA <AmiBlitz3.ab2@9056>   CMPA.l D2,A2
0003AAFE <AmiBlitz3.ab2@9057>    BEQ.w JL_0_6CE0
0003AB00 <AmiBlitz3.ab2@9058>   MOVE.l A2,-(A7)
0003AB02 <AmiBlitz3.ab2@9061>   MOVEQ.l #$00,D3
0003AB06 <AmiBlitz3.ab2@9064>   MOVEA.l $8(A2),A3
0003AB08 <AmiBlitz3.ab2@9065>   CMPA.l D3,A3
0003AB0C <AmiBlitz3.ab2@9066>    BEQ.w JL_0_6CD2
0003AB0E <AmiBlitz3.ab2@9067>   MOVE.l A3,-(A7)
0003AB12 <AmiBlitz3.ab2@9068>   MOVEM.l D2-D3/A2-A3,-(A7)
0003AB16 <AmiBlitz3.ab2@9069>   MOVE.w $4(A2),D1
0003AB1A <AmiBlitz3.ab2@9070>   MOVE.w $6(A2),D2
0003AB1E <AmiBlitz3.ab2@9071>    BSR.w JL_0_6CE2
0003AB22 <AmiBlitz3.ab2@9072>   MOVEM.l (A7)+,D2-D3/A2-A3
0003AB28 <AmiBlitz3.ab2@9073>   MOVE.w dontwrite,D0
0003AB2C <AmiBlitz3.ab2@9074>    BEQ.w JL_0_6CBE
0003AB2E <AmiBlitz3.ab2@9077>   MOVEA.l (A3),A3
0003AB30 <AmiBlitz3.ab2@9078>   CMPA.l D3,A3
0003AB34 <AmiBlitz3.ab2@9079>    BNE.w JL_0_6CB2
0003AB38 <AmiBlitz3.ab2@9080> BRA.w JL_0_6CCC
0003AB3C <AmiBlitz3.ab2@9083>   MOVEA.l $4(A3),A0
0003AB3E <AmiBlitz3.ab2@9084>   MOVE.l D7,(A0)
0003AB40 <AmiBlitz3.ab2@9085>   MOVEA.l (A3),A3
0003AB42 <AmiBlitz3.ab2@9086>   CMPA.l D3,A3
0003AB46 <AmiBlitz3.ab2@9087>    BNE.w JL_0_6CBE
0003AB48 <AmiBlitz3.ab2@9090>   MOVE.l (A7)+,D3
0003AB4C <AmiBlitz3.ab2@9091> BRA.w JL_0_6C88
0003AB4E <AmiBlitz3.ab2@9094>    MOVEA.l (A2),A2
0003AB50 <AmiBlitz3.ab2@9095>   CMPA.l D2,A2
0003AB54 <AmiBlitz3.ab2@9096>    BNE.w JL_0_6C86
0003AB56 <AmiBlitz3.ab2@9097>   MOVE.l (A7)+,D2
0003AB5A <AmiBlitz3.ab2@9098> BRA.w JL_0_6C78
0003AB5C <AmiBlitz3.ab2@9101> RTS
0003AB5E <AmiBlitz3.ab2@9105>   MOVE.w D2,-(A7)
0003AB62 <AmiBlitz3.ab2@9106>    BSR.w searchinstr
0003AB64 <AmiBlitz3.ab2@9107>   MOVE.w (A7)+,D2
0003AB6C <AmiBlitz3.ab2@9108>   BCLR #$7,blitzmode
0003AB70 <AmiBlitz3.ab2@9109>   BCLR #$E,D2
0003AB74 <AmiBlitz3.ab2@9110>    BEQ.w JL_0_6D02
0003AB7C <AmiBlitz3.ab2@9111>   BSET #$7,blitzmode
0003AB7E <AmiBlitz3.ab2@9114>   TST.w (A3)
0003AB82 <AmiBlitz3.ab2@9115>    BEQ.w JL_0_6DAC
0003AB88 <AmiBlitz3.ab2@9116>   BTST #$2,$1(A3)
0003AB8C <AmiBlitz3.ab2@9117>    BNE.w tokeerr
0003AB92 <AmiBlitz3.ab2@9118>   BTST #$3,$1(A3)
0003AB96 <AmiBlitz3.ab2@9119>    BNE.w tokeerr
0003AB9A <AmiBlitz3.ab2@9120>   LEA $6(A3),A3
0003AB9C <AmiBlitz3.ab2@9123>   MOVE.w (A3)+,D0
0003ABA0 <AmiBlitz3.ab2@9124>    BMI.w tokeerr
0003ABA4 <AmiBlitz3.ab2@9125>   ANDI.w #$FF,D0
0003ABA6 <AmiBlitz3.ab2@9126>   ADDA.w D0,A3
0003ABA8 <AmiBlitz3.ab2@9127>   ADDQ.w #1,A3
0003ABAA <AmiBlitz3.ab2@9128>   EXG.l D0,A3
0003ABAE <AmiBlitz3.ab2@9129>   BCLR #$0,D0
0003ABB0 <AmiBlitz3.ab2@9130>   EXG.l D0,A3
0003ABB2 <AmiBlitz3.ab2@9131>   SUBQ.w #1,D2
0003ABB6 <AmiBlitz3.ab2@9132>    BPL.w JL_0_6D98
0003ABB8 <AmiBlitz3.ab2@9133>   TST.w (A3)
0003ABBC <AmiBlitz3.ab2@9134>    BNE.w JL_0_6D76
0003ABC0 <AmiBlitz3.ab2@9135>   MOVE.l $2(A3),D0
0003ABC4 <AmiBlitz3.ab2@9136>   OR.l $A(A3),D0
0003ABC8 <AmiBlitz3.ab2@9137>    BNE.w JL_0_6D76
0003ABCE <AmiBlitz3.ab2@9138>   BTST #$0,$9(A3)
0003ABD2 <AmiBlitz3.ab2@9139>    BNE.w JL_0_6D76
0003ABD6 <AmiBlitz3.ab2@9140>   MOVE.l $6(A3),D7
0003ABDA <AmiBlitz3.ab2@9141>   MOVE.w $0(A2,D7.L),D0
0003ABDE <AmiBlitz3.ab2@9142>   ANDI.w #$F000,D0
0003ABE2 <AmiBlitz3.ab2@9143>   CMP.w #-$6000,D0
0003ABE6 <AmiBlitz3.ab2@9144>    BEQ.w JL_0_6D76
0003ABEA <AmiBlitz3.ab2@9147>   SUB.l $12(A2),D7
0003ABEE <AmiBlitz3.ab2@9148>   ADD.l $28(A2),D7
0003ABF0 <AmiBlitz3.ab2@9149> RTS
0003ABF6 <AmiBlitz3.ab2@9153>   LEA cutejsr,A0
0003ABFC <AmiBlitz3.ab2@9156>   MOVE.l destpointer,-(A7)
0003AC04 <AmiBlitz3.ab2@9157>   MOVE.w #$FFFF,lasta6
0003AC06 <AmiBlitz3.ab2@9160>    JSR (A0)
0003AC0A <AmiBlitz3.ab2@9161>   MOVE.w #$4E75,D1
0003AC0E <AmiBlitz3.ab2@9162>    BSR.w writeword
0003AC10 <AmiBlitz3.ab2@9163>   MOVE.l (A7)+,D7
0003AC12 <AmiBlitz3.ab2@9164> RTS
0003AC14 <AmiBlitz3.ab2@9168>   TST.w (A3)+
0003AC18 <AmiBlitz3.ab2@9169>    BEQ.w JL_0_6DA4
0003AC1A <AmiBlitz3.ab2@9170>   ADDQ.w #2,A3
0003AC1E <AmiBlitz3.ab2@9171> BRA.w JL_0_6D98
0003AC22 <AmiBlitz3.ab2@9174>   LEA $C(A3),A3
0003AC26 <AmiBlitz3.ab2@9175> BRA.w JL_0_6D20
0003AC28 <AmiBlitz3.ab2@9179>   TST.w D2
0003AC2C <AmiBlitz3.ab2@9180>    BNE.w tokeerr
0003AC30 <AmiBlitz3.ab2@9181>   TST.w $6(A3)
0003AC34 <AmiBlitz3.ab2@9182>    BNE.w JL_0_6DE4
0003AC38 <AmiBlitz3.ab2@9183>   MOVE.l $8(A3),D0
0003AC3C <AmiBlitz3.ab2@9184>   OR.l $10(A3),D0
0003AC40 <AmiBlitz3.ab2@9185>    BNE.w JL_0_6DE4
0003AC46 <AmiBlitz3.ab2@9186>   BTST #$0,$F(A3)
0003AC4A <AmiBlitz3.ab2@9187>    BNE.w JL_0_6DE4
0003AC4E <AmiBlitz3.ab2@9188>   MOVE.l $C(A3),D7
0003AC52 <AmiBlitz3.ab2@9189>   MOVE.w $0(A2,D7.L),D0
0003AC56 <AmiBlitz3.ab2@9190>   ANDI.w #$F000,D0
0003AC5A <AmiBlitz3.ab2@9191>   CMP.w #-$6000,D0
0003AC5E <AmiBlitz3.ab2@9192>    BNE.w JL_0_6D6C
0003AC60 <AmiBlitz3.ab2@9195>   MOVE.l A3,D1
0003AC62 <AmiBlitz3.ab2@9196>   SUB.l A2,D1
0003AC68 <AmiBlitz3.ab2@9197>   LEA Amakelibsub,A0
0003AC6C <AmiBlitz3.ab2@9198> BRA.w JL_0_6D7C
0003AC72 <AmiBlitz3.ab2@9202>   MOVEA.l _execbase,A6
0003AC78 <AmiBlitz3.ab2@9203>   MOVEA.l tokeslist,A2
0003AC7E <AmiBlitz3.ab2@9204>   CLR.l tokeslist
0003AC82 <AmiBlitz3.ab2@9207>     CMPA.w #$0,A2
0003AC86 <AmiBlitz3.ab2@9208>      BEQ.w JL_0_6E32
0003AC8A <AmiBlitz3.ab2@9209>     MOVEA.l $8(A2),A3
0003AC8E <AmiBlitz3.ab2@9212>       CMPA.w #$0,A3
0003AC92 <AmiBlitz3.ab2@9213>        BEQ.w JL_0_6E24
0003AC94 <AmiBlitz3.ab2@9214>       MOVEA.l A3,A1
0003AC96 <AmiBlitz3.ab2@9215>       MOVEA.l (A3),A3
0003AC98 <AmiBlitz3.ab2@9216>       MOVEQ.l #$08,D0
0003AC9E <AmiBlitz3.ab2@9217>       MOVE.l mempool,a0
0003ACA4 <AmiBlitz3.ab2@9218>       MOVEA.l _execbase,A6
0003ACA8 <AmiBlitz3.ab2@9219>       JSR _FreePooled(A6)
0003ACAC <AmiBlitz3.ab2@9220> BRA.w JL_0_6E0E
0003ACAE <AmiBlitz3.ab2@9223>     MOVEA.l A2,A1
0003ACB0 <AmiBlitz3.ab2@9224>     MOVEA.l (A2),A2
0003ACB2 <AmiBlitz3.ab2@9225>     MOVEQ.l #$0C,D0
0003ACB8 <AmiBlitz3.ab2@9226>     MOVE.l mempool,a0
0003ACBE <AmiBlitz3.ab2@9227>     MOVEA.l _execbase,A6
0003ACC2 <AmiBlitz3.ab2@9228>     JSR _FreePooled(A6)
0003ACC6 <AmiBlitz3.ab2@9229> BRA.w JL_0_6E02
0003ACC8 <AmiBlitz3.ab2@9232> RTS
0003ACCC <AmiBlitz3.ab2@9236>   MOVEM.l D3-D5/A1-A6,-(A7)
0003ACCE <AmiBlitz3.ab2@9237>   MOVEA.l A1,A4
0003ACD0 <AmiBlitz3.ab2@9240>   MOVE.l (A2)+,D3
0003ACD4 <AmiBlitz3.ab2@9241>   MOVE.w $0(A4,D3.L),D5
0003ACD8 <AmiBlitz3.ab2@9242>    BPL.w JL_0_6E7A
0003ACDC <AmiBlitz3.ab2@9243>   TST.l $2C(A4)
0003ACE0 <AmiBlitz3.ab2@9244>    BEQ.w JL_0_6E5E
0003ACE6 <AmiBlitz3.ab2@9245>   TST.b debugmode
0003ACEA <AmiBlitz3.ab2@9246>    BNE.w JL_0_6E5E
0003ACEE <AmiBlitz3.ab2@9247>   CMP.l $2C(A4),D3
0003ACF2 <AmiBlitz3.ab2@9248>    BCC.w JL_0_6E7A
0003ACF6 <AmiBlitz3.ab2@9251>   BCLR #$F,D5
0003ACFA <AmiBlitz3.ab2@9252>   MOVE.w $2(A4,D3.L),D4
0003ACFE <AmiBlitz3.ab2@9253>   SUB.l $12(A4),D3
0003AD02 <AmiBlitz3.ab2@9254>   ADD.l $28(A4),D3
0003AD06 <AmiBlitz3.ab2@9255>   MOVEM.l D2/A2/A4,-(A7)
0003AD0A <AmiBlitz3.ab2@9256>    BSR.w JL_0_6E86
0003AD0E <AmiBlitz3.ab2@9257>   MOVEM.l (A7)+,D2/A2/A4
0003AD10 <AmiBlitz3.ab2@9260>   SUBQ.l #1,D2
0003AD14 <AmiBlitz3.ab2@9261>    BNE.w JL_0_6E3A
0003AD18 <AmiBlitz3.ab2@9262>   MOVEM.l (A7)+,D3-D5/A1-A6
0003AD1A <AmiBlitz3.ab2@9263> RTS
0003AD20 <AmiBlitz3.ab2@9267>   LEA tokeslist,A3
0003AD26 <AmiBlitz3.ab2@9268>   MOVEA.l _execbase,A6
0003AD28 <AmiBlitz3.ab2@9271>   MOVE.l (A3),D0
0003AD2C <AmiBlitz3.ab2@9272>    BEQ.w JL_0_6EAC
0003AD2E <AmiBlitz3.ab2@9273>   MOVEA.l D0,A3
0003AD32 <AmiBlitz3.ab2@9274>   CMP.w $4(A3),D4
0003AD36 <AmiBlitz3.ab2@9275>    BNE.w JL_0_6E90
0003AD3A <AmiBlitz3.ab2@9276>   CMP.w $6(A3),D5
0003AD3E <AmiBlitz3.ab2@9277>    BNE.w JL_0_6E90
0003AD42 <AmiBlitz3.ab2@9278> BRA.w JL_0_6ED0
0003AD44 <AmiBlitz3.ab2@9281>   MOVEQ.l #$0C,D0
0003AD46 <AmiBlitz3.ab2@9282>   MOVEQ.l #$01,D1
0003AD4C <AmiBlitz3.ab2@9283>   MOVE.l mempool,a0
0003AD50 <AmiBlitz3.ab2@9284>   JSR _AllocPooled(a6)
0003AD52 <AmiBlitz3.ab2@9286>   MOVEA.l D0,A3
0003AD58 <AmiBlitz3.ab2@9287>   MOVE.l tokeslist,(A3)
0003AD5E <AmiBlitz3.ab2@9288>   MOVE.l A3,tokeslist
0003AD62 <AmiBlitz3.ab2@9289>   MOVE.w D4,$4(A3)
0003AD66 <AmiBlitz3.ab2@9290>   MOVE.w D5,$6(A3)
0003AD6A <AmiBlitz3.ab2@9291>   CLR.l $8(A3)
0003AD6C <AmiBlitz3.ab2@9294>   MOVEQ.l #$08,D0
0003AD6E <AmiBlitz3.ab2@9295>   MOVEQ.l #$01,D1
0003AD74 <AmiBlitz3.ab2@9296>   MOVE.l mempool,a0
0003AD78 <AmiBlitz3.ab2@9297>   JSR _AllocPooled(a6)
0003AD7A <AmiBlitz3.ab2@9299>   MOVEA.l D0,A0
0003AD7E <AmiBlitz3.ab2@9300>   MOVE.l D3,$4(A0)
0003AD82 <AmiBlitz3.ab2@9301>   MOVE.l $8(A3),(A0)
0003AD86 <AmiBlitz3.ab2@9302>   MOVE.l A0,$8(A3)
0003AD88 <AmiBlitz3.ab2@9303>   MOVE.w D4,D1
0003AD8C <AmiBlitz3.ab2@9304> BRA.w searchinstr
0003AD90 <AmiBlitz3.ab2@9307> tokeslist: Ds.l 1
0003AD94 <AmiBlitz3.ab2@9320>   BEQ.w uselib2_org__skip
0003AD96 <AmiBlitz3.ab2@9321>   MOVE.l A1,-(A7)
0003AD98 <AmiBlitz3.ab2@9322>   ADDA.l D1,A1
0003AD9A <AmiBlitz3.ab2@9323>   ADDQ.w #6,A1
0003AD9C <AmiBlitz3.ab2@9326>     MOVE.w (A1)+,D1
0003ADA0 <AmiBlitz3.ab2@9327>     BEQ.w uselib2_org__done
0003ADA2 <AmiBlitz3.ab2@9328>     CMP.w D2,D1
0003ADA6 <AmiBlitz3.ab2@9329>     BEQ.w uselib2_org__skip2
0003ADA8 <AmiBlitz3.ab2@9330>     MOVE.l A1,-(A7)
0003ADAC <AmiBlitz3.ab2@9331>     BSR.w uselib
0003ADAE <AmiBlitz3.ab2@9332>     MOVEA.l (A7)+,A1
0003ADB0 <AmiBlitz3.ab2@9335>     ADDQ.w #2,A1
0003ADB4 <AmiBlitz3.ab2@9336> BRA.w uselib2_org__loop
0003ADB6 <AmiBlitz3.ab2@9339>   MOVEA.l (A7)+,A1
0003ADB8 <AmiBlitz3.ab2@9342> RTS
0003ADBE <AmiBlitz3.ab2@9346>   MOVEA.l libpointer,A1
0003ADC2 <AmiBlitz3.ab2@9349>   CMPA.w #$0,A1
0003ADC6 <AmiBlitz3.ab2@9350>    BEQ.b JL_0_6F36
0003ADCA <AmiBlitz3.ab2@9351>   CMP.w $4(A1),D1
0003ADCE <AmiBlitz3.ab2@9352>    BEQ.w JL_0_6F34
0003ADD0 <AmiBlitz3.ab2@9353>   MOVEA.l (A1),A1
0003ADD4 <AmiBlitz3.ab2@9354> BRA.w JL_0_6F20
0003ADD6 <AmiBlitz3.ab2@9357>   MOVEQ.l #-$01,D1
0003ADD8 <AmiBlitz3.ab2@9360> RTS
0003ADDC <AmiBlitz3.ab2@9364>   MOVEM.l d0/a2,-(a7)
0003ADDE <AmiBlitz3.ab2@9365>   MOVEQ #0,d0
0003ADE4 <AmiBlitz3.ab2@9366>   LEA instrtab+4,a2
0003ADE6 <AmiBlitz3.ab2@9367>   MOVE.w d1,d0
0003ADE8 <AmiBlitz3.ab2@9368>   ASL.l #3,d0
0003ADEC <AmiBlitz3.ab2@9369>   MOVE.l 0(a2,d0.l),a1                                     ;*8
0003ADF2 <AmiBlitz3.ab2@9370>   CMP.l #0,a1
0003ADF6 <AmiBlitz3.ab2@9371>   BNE JL_0_6F54b
0003ADFC <AmiBlitz3.ab2@9373>   MOVEA.l libpointer,A1
0003AE00 <AmiBlitz3.ab2@9376>     CMPA.w #$0,A1
0003AE04 <AmiBlitz3.ab2@9377>     BEQ.w noliberr
0003AE08 <AmiBlitz3.ab2@9378>     CMP.w $4(A1),D1
0003AE0C <AmiBlitz3.ab2@9379>     BEQ.w JL_0_6F54
0003AE0E <AmiBlitz3.ab2@9380>    MOVEA.l (A1),A1
0003AE12 <AmiBlitz3.ab2@9381> BRA.w JL_0_6F3E
0003AE16 <AmiBlitz3.ab2@9384>   MOVE.l a1,0(a2,d0.l)
0003AE1A <AmiBlitz3.ab2@9387>   MOVEM.l (a7)+,d0/a2
0003AE1C <AmiBlitz3.ab2@9388> RTS
0003AE20 <AmiBlitz3.ab2@9391>   MOVEM.l d0-d1/a1,-(a7)
0003AE22 <AmiBlitz3.ab2@9392>   MOVEQ #0,d0
0003AE28 <AmiBlitz3.ab2@9393>   LEA instrtab,a1
0003AE2A <AmiBlitz3.ab2@9394>   MOVE.w d1,d0
0003AE2C <AmiBlitz3.ab2@9395>   ASL.l #3,d0
0003AE30 <AmiBlitz3.ab2@9396>   MOVE.l 0(a1,d0.l),a3
0003AE34 <AmiBlitz3.ab2@9397>   MOVE.l 4(a1,d0.l),a2
0003AE3A <AmiBlitz3.ab2@9398>   CMP.l #0,a3
0003AE3E <AmiBlitz3.ab2@9399>   BNE JL_0_6F92b
0003AE44 <AmiBlitz3.ab2@9401>   MOVEA.l libpointer,A2
0003AE48 <AmiBlitz3.ab2@9404>   CMPA.w #$0,A2
0003AE4C <AmiBlitz3.ab2@9405>   BEQ.w notokerr
0003AE50 <AmiBlitz3.ab2@9406>   CMP.w $E(A2),D1
0003AE54 <AmiBlitz3.ab2@9407>   BCS.w JL_0_6FB8
0003AE58 <AmiBlitz3.ab2@9408>   CMP.w $10(A2),D1
0003AE5C <AmiBlitz3.ab2@9409>   BCC.w JL_0_6FB8
0003AE60 <AmiBlitz3.ab2@9410>   LEA $30(A2),A3
0003AE64 <AmiBlitz3.ab2@9411>   TST.w $4(A2)
0003AE68 <AmiBlitz3.ab2@9412>   BPL.w JL_0_6FA6
0003AE6C <AmiBlitz3.ab2@9415>     CMP.w $E(A2),D1
0003AE70 <AmiBlitz3.ab2@9416>     BEQ.w JL_0_6F92
0003AE72 <AmiBlitz3.ab2@9417>     SUBQ.w #1,D1
0003AE76 <AmiBlitz3.ab2@9418>     MOVEA.l $2(A3),A3
0003AE7A <AmiBlitz3.ab2@9419> BRA.w JL_0_6F80
0003AE7E <AmiBlitz3.ab2@9422>   MOVE.l a3,0(a1,d0.l)
0003AE82 <AmiBlitz3.ab2@9423>   MOVE.l a2,4(a1,d0.l)
0003AE86 <AmiBlitz3.ab2@9426>   MOVEM.l (a7)+,d0-d1/a1
0003AE8A <AmiBlitz3.ab2@9427>   MOVEM.l D1/A1-a3,-(A7)
0003AE8E <AmiBlitz3.ab2@9428>   CMP.w #1,(a3)
0003AE92 <AmiBlitz3.ab2@9429>   BNE.s ex10
0003AE9A <AmiBlitz3.ab2@9430>   CMP.l #$12345678,$e(a3)
0003AE9E <AmiBlitz3.ab2@9431>   BNE.s ex10
0003AEA4 <AmiBlitz3.ab2@9432>   CMP.w #$ffff,$16(a3)
0003AEA8 <AmiBlitz3.ab2@9433>   BNE.s ex10
0003AEAC <AmiBlitz3.ab2@9434>   MOVE.l $12(a3),d1
0003AEB0 <AmiBlitz3.ab2@9435>   BEQ.s ex10
0003AEB6 <AmiBlitz3.ab2@9436>   LEA pluginbase,a3
0003AEBA <AmiBlitz3.ab2@9438> JMP 0(a2,d1.l)                                             ;plugin
0003AEBE <AmiBlitz3.ab2@9441>   MOVEM.l (A7)+,D1/A1-a3
0003AEC4 <AmiBlitz3.ab2@9442>   JSR stripspaces
0003AEC6 <AmiBlitz3.ab2@9443>   MOVEQ #0,d0
0003AEC8 <AmiBlitz3.ab2@9444>   MOVE.b (a5)+,d0
0003AECE <AmiBlitz3.ab2@9445>   MOVE.w d0,lastchar
0003AED0 <AmiBlitz3.ab2@9446>   ADDQ.l #4,a7
0003AED2 <AmiBlitz3.ab2@9447> RTS
0003AED4 <AmiBlitz3.ab2@9451>   MOVEA.l A2,A1
0003AEDA <AmiBlitz3.ab2@9452>   CLR.b newmode
0003AEDE <AmiBlitz3.ab2@9453>   MOVE.w $4(A1),D1
0003AEE2 <AmiBlitz3.ab2@9456>   BSR.w uselib3
0003AEE6 <AmiBlitz3.ab2@9457>   MOVEM.l (A7)+,D1/A1-a3
0003AEE8 <AmiBlitz3.ab2@9458> RTS
0003AEEE <AmiBlitz3.ab2@9461>   MOVE.w globalvarpointer,-(a7)
0003AEF6 <AmiBlitz3.ab2@9462>   MOVE.w #$8004,globalvarpointer
0003AEFA <AmiBlitz3.ab2@9463>   BSR.w uselib3
0003AF00 <AmiBlitz3.ab2@9464>   MOVE.w (a7)+,globalvarpointer
0003AF04 <AmiBlitz3.ab2@9465>   MOVEM.l (A7)+,D1/A1-a3
0003AF06 <AmiBlitz3.ab2@9466> RTS
0003AF0A <AmiBlitz3.ab2@9469>     CMP.w $E(A2),D1
0003AF0E <AmiBlitz3.ab2@9470>     BEQ.w JL_0_6F92
0003AF10 <AmiBlitz3.ab2@9471>     SUBQ.w #1,D1
0003AF14 <AmiBlitz3.ab2@9472>     MOVEA.l $2(A3),A3
0003AF18 <AmiBlitz3.ab2@9473> BRA.w JL_0_6FA6
0003AF1A <AmiBlitz3.ab2@9476>   MOVEA.l (A2),A2
0003AF1E <AmiBlitz3.ab2@9477> BRA.w JL_0_6F5C
0003AF24 <AmiBlitz3.ab2@9480> JMP writeword
0003AF28 <AmiBlitz3.ab2@9483> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0003AF2C <AmiBlitz3.ab2@9484> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0003AF30 <AmiBlitz3.ab2@9485> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0003AF32 <AmiBlitz3.ab2@9491>   TST.l D0
0003AF36 <AmiBlitz3.ab2@9492>   BEQ.w exit_loadlibsfile
0003AF38 <AmiBlitz3.ab2@9493>     MOVE.l D0,D6                                           ;d6=len
0003AF3E <AmiBlitz3.ab2@9494>     MOVEA.l _dosbase,A6
0003AF44 <AmiBlitz3.ab2@9495>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0003AF48 <AmiBlitz3.ab2@9496>     JSR _Open(A6)
0003AF4A <AmiBlitz3.ab2@9497>     MOVE.l D0,D7
0003AF4E <AmiBlitz3.ab2@9498>     BEQ.w exit_loadlibsfile
0003AF50 <AmiBlitz3.ab2@9499>       MOVE.l D6,D0
0003AF52 <AmiBlitz3.ab2@9500>       MOVEQ.l #$01,D1
0003AF58 <AmiBlitz3.ab2@9501>       MOVEA.l _execbase,A6
0003AF5E <AmiBlitz3.ab2@9502>       MOVE.l mempool,a0
0003AF62 <AmiBlitz3.ab2@9503>       JSR _AllocPooled(a6)
0003AF64 <AmiBlitz3.ab2@9504>       MOVE.l D0,D5                                         ;start address
0003AF66 <AmiBlitz3.ab2@9506>       MOVE.l D7,D1                                         ; handle
0003AF68 <AmiBlitz3.ab2@9507>       MOVE.l D5,D2                                         ; buffer addr
0003AF6A <AmiBlitz3.ab2@9508>       MOVE.l D6,D3                                         ; size
0003AF70 <AmiBlitz3.ab2@9509>       MOVEA.l _dosbase,A6
0003AF74 <AmiBlitz3.ab2@9510>       JSR _Read(A6)
0003AF76 <AmiBlitz3.ab2@9511>       MOVE.l D7,D1
0003AF7A <AmiBlitz3.ab2@9512>       JSR _Close(A6)
0003AF7C <AmiBlitz3.ab2@9514>       MOVEA.l D5,A0                                        ; buffer addr
0003AF7E <AmiBlitz3.ab2@9520>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
0003AF82 <AmiBlitz3.ab2@9521>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
0003AF86 <AmiBlitz3.ab2@9522>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
0003AF88 <AmiBlitz3.ab2@9523>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0003AF8A <AmiBlitz3.ab2@9524>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0003AF8C <AmiBlitz3.ab2@9525>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
0003AF90 <AmiBlitz3.ab2@9526>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
0003AF92 <AmiBlitz3.ab2@9527>           ADD.l D0,D0                                      ;   verdoppele D0
0003AF94 <AmiBlitz3.ab2@9528>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
0003AF98 <AmiBlitz3.ab2@9529>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0003AF9C <AmiBlitz3.ab2@9530>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
0003AFA0 <AmiBlitz3.ab2@9531>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
0003AFA2 <AmiBlitz3.ab2@9532>           CMPA.l A0,A2
0003AFA6 <AmiBlitz3.ab2@9533>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0003AFAC <AmiBlitz3.ab2@9534>             MOVE.l -$8(A2),$20(A1)                         ;
0003AFB0 <AmiBlitz3.ab2@9535>             MOVE.l A2,$24(A1)                              ;
0003AFB4 <AmiBlitz3.ab2@9536> BRA.w JL_0_7010
0003AFB6 <AmiBlitz3.ab2@9539>       MOVE.l D5,D0
0003AFB8 <AmiBlitz3.ab2@9542> RTS
0003AFE2 <AmiBlitz3.ab2@9546>   !basic
0003B056 <AmiBlitz3.ab2@9547>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0003B08A <AmiBlitz3.ab2@9548>    dos_Delete{tempmapping$}
0003B0CE <AmiBlitz3.ab2@9549>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0003B0EC <AmiBlitz3.ab2@9550>   !asm
0003B0F2 <AmiBlitz3.ab2@9552>   LEA libpointer,A3
0003B0F8 <AmiBlitz3.ab2@9556>   MOVE.l size_deflibs,D0
0003B0FE <AmiBlitz3.ab2@9557>   MOVE.l deflib,d1
0003B102 <AmiBlitz3.ab2@9558>   BEQ 'l1
0003B106 <AmiBlitz3.ab2@9559> BRA 'l2
0003B10C <AmiBlitz3.ab2@9562>   MOVE.l #str_path_deflibs,D1
0003B110 <AmiBlitz3.ab2@9565>   BSR.w load_libsfile
0003B116 <AmiBlitz3.ab2@9566>   MOVE.l D0,ptr_deflibs
0003B11C <AmiBlitz3.ab2@9569>   MOVE.l size_acidlibs,D0
0003B122 <AmiBlitz3.ab2@9570>   MOVE.l #str_path_acidlibs,D1
0003B126 <AmiBlitz3.ab2@9571>   BSR.w load_libsfile
0003B12C <AmiBlitz3.ab2@9572>   MOVE.l D0,ptr_acidlibs
0003B12E <AmiBlitz3.ab2@9576>   CLR.l (A3)
0003B134 <AmiBlitz3.ab2@9577>   MOVE.l A3,ptr_userlibs
0003B13A <AmiBlitz3.ab2@9582>   LEA str_libfilename,A0
0003B140 <AmiBlitz3.ab2@9583>   LEA str_path_userlibs,A1
0003B142 <AmiBlitz3.ab2@9586>     MOVE.b (A1)+,(A0)+
0003B146 <AmiBlitz3.ab2@9587>   BNE.b JL_0_708E
0003B148 <AmiBlitz3.ab2@9589>   SUBQ.w #1,A0
0003B14C <AmiBlitz3.ab2@9590>   MOVE.b #$2F,(A0)+
0003B14E <AmiBlitz3.ab2@9593>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
0003B154 <AmiBlitz3.ab2@9595>   LEA ptr_userlibs_list,A2
0003B15A <AmiBlitz3.ab2@9596>   MOVEA.l ptr_userlibs,A3
0003B160 <AmiBlitz3.ab2@9597>   MOVEA.l _dosbase,A6
0003B162 <AmiBlitz3.ab2@9602>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
0003B166 <AmiBlitz3.ab2@9603>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
0003B168 <AmiBlitz3.ab2@9605>       CLR.l (A3)
0003B16A <AmiBlitz3.ab2@9606>       ADDQ.w #4,A7
0003B194 <AmiBlitz3.ab2@9607>       !basic
0003B1A8 <AmiBlitz3.ab2@9608>       If fid<>-1
0003B1B2 <AmiBlitz3.ab2@9609>         file_Close{fid}
0003B1BE <AmiBlitz3.ab2@9610>         fid = -1
0003B1DC <AmiBlitz3.ab2@9612>       !asm
0003B1E0 <AmiBlitz3.ab2@9613> BRA.w process_libraries
0003B1E2 <AmiBlitz3.ab2@9616>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
0003B1E6 <AmiBlitz3.ab2@9617>       TST.w $4(A2)                                         ; naechste addresse pruefen
0003B1EA <AmiBlitz3.ab2@9618>     BEQ.b JL_0_70BA
0003B1EE <AmiBlitz3.ab2@9620>     LEA $6(A2),A1
0003B1F0 <AmiBlitz3.ab2@9621>     MOVEA.l (A7),A0
0003B1F2 <AmiBlitz3.ab2@9624>       MOVE.b (A1)+,(A0)+
0003B1F6 <AmiBlitz3.ab2@9625>     BNE.w JL_0_70D4
0003B1F8 <AmiBlitz3.ab2@9629>     MOVE.l A0,-(A7)
0003B1FE <AmiBlitz3.ab2@9630>     MOVE.l #str_libfilename,D1
0003B200 <AmiBlitz3.ab2@9631>     MOVEQ.l #-$02,D2
0003B206 <AmiBlitz3.ab2@9632>     MOVEA.l _dosbase,A6
0003B20A <AmiBlitz3.ab2@9633>      JSR _Lock(A6)
0003B20C <AmiBlitz3.ab2@9634>     MOVE.l D0,D1
0003B210 <AmiBlitz3.ab2@9635>      BEQ.w JL_0_7156
0003B212 <AmiBlitz3.ab2@9636>     MOVEA.l (A7),A0
0003B218 <AmiBlitz3.ab2@9637>     MOVE.b #$2F,-$1(A0)
0003B21A <AmiBlitz3.ab2@9640>     MOVE.l D1,-(A7)
0003B220 <AmiBlitz3.ab2@9641>     MOVE.l #ptr_parameterstore,D2
0003B226 <AmiBlitz3.ab2@9642>     MOVEA.l _dosbase,A6
0003B22A <AmiBlitz3.ab2@9643>     JSR _Examine(A6)
0003B22C <AmiBlitz3.ab2@9644>     TST.l D0
0003B230 <AmiBlitz3.ab2@9645>      BEQ.w JL_0_7150
0003B236 <AmiBlitz3.ab2@9648>     LEA fib_FileName,A0
0003B23A <AmiBlitz3.ab2@9649>     BSR.w check_for_infoextention
0003B23E <AmiBlitz3.ab2@9650>     BEQ.w JL_0_7150
0003B268 <AmiBlitz3.ab2@9653>     !basic
0003B2EC <AmiBlitz3.ab2@9654>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0003B30A <AmiBlitz3.ab2@9655>     !asm
0003B310 <AmiBlitz3.ab2@9656>     MOVE.l #str_libfilename,D1
0003B314 <AmiBlitz3.ab2@9657>     BSR.w open_userlibfile
0003B316 <AmiBlitz3.ab2@9660>     MOVE.l (A7)+,D1
0003B31C <AmiBlitz3.ab2@9661>     MOVEA.l _dosbase,A6
0003B320 <AmiBlitz3.ab2@9662>     JSR _UnLock(A6)
0003B322 <AmiBlitz3.ab2@9665>     ADDQ.w #4,A7
0003B326 <AmiBlitz3.ab2@9666> BRA.w JL_0_70BA
0003B32C <AmiBlitz3.ab2@9669>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0003B332 <AmiBlitz3.ab2@9670>   MOVEA.l _dosbase,A6
0003B336 <AmiBlitz3.ab2@9671>    JSR _Open(A6)
0003B338 <AmiBlitz3.ab2@9672>   MOVE.l D0,D7
0003B33C <AmiBlitz3.ab2@9673>    BEQ.w exit_userlibfile
0003B33E <AmiBlitz3.ab2@9676>   MOVE.l D7,D1                                             ; filehandle
0003B344 <AmiBlitz3.ab2@9677>   MOVE.l #optstuff,D2                                     ; buffer
0003B34A <AmiBlitz3.ab2@9678>   MOVEA.l _dosbase,A6
0003B34C <AmiBlitz3.ab2@9679>   MOVEQ.l #$20,D3                                          ; size
0003B350 <AmiBlitz3.ab2@9680>   JSR _Read(A6)
0003B356 <AmiBlitz3.ab2@9683>   MOVE.l optstuff+28,D6
0003B358 <AmiBlitz3.ab2@9684>   LSL.l #2,D6
0003B35A <AmiBlitz3.ab2@9685>   MOVE.l D6,D0
0003B35C <AmiBlitz3.ab2@9686>   MOVEQ.l #$01,D1
0003B362 <AmiBlitz3.ab2@9687>   MOVEA.l _execbase,A6
0003B368 <AmiBlitz3.ab2@9688>   MOVE.l mempool,a0
0003B36C <AmiBlitz3.ab2@9689>   JSR _AllocPooled(a6)
0003B36E <AmiBlitz3.ab2@9690>   MOVEA.l D0,A5
0003B374 <AmiBlitz3.ab2@9693>   MOVEA.l _dosbase,A6
0003B376 <AmiBlitz3.ab2@9694>   MOVE.l D7,D1                                             ; filehandle
0003B378 <AmiBlitz3.ab2@9695>   MOVE.l A5,D2                                             ; buffer
0003B37A <AmiBlitz3.ab2@9696>   MOVE.l D6,D3                                             ; size
0003B37E <AmiBlitz3.ab2@9697>    JSR _Read(A6)
0003B380 <AmiBlitz3.ab2@9698>   MOVE.l A5,(A3)
0003B382 <AmiBlitz3.ab2@9700>   MOVE.l A5,d0
0003B384 <AmiBlitz3.ab2@9702>   MOVEA.l A5,A3
0003B388 <AmiBlitz3.ab2@9703>   MOVE.l D6,$6(A5)
0003B38C <AmiBlitz3.ab2@9704>   CLR.l $20(A5)
0003B3B6 <AmiBlitz3.ab2@9706>   !basic
0003B3C0 <AmiBlitz3.ab2@9708>   addr_libnum.l = PutD0 + 4
0003B3D4 <AmiBlitz3.ab2@9709>   If fid<>-1
0003B474 <AmiBlitz3.ab2@9710>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
0003B4A6 <AmiBlitz3.ab2@9711>     file_WriteLine{fid,currentlib$}
0003B4C4 <AmiBlitz3.ab2@9713>   !asm
0003B4C6 <AmiBlitz3.ab2@9716>   MOVE.l D7,D1                                             ; filehandle
0003B4CC <AmiBlitz3.ab2@9717>   MOVE.l #optstuff,D2                                     ; buffer
0003B4CE <AmiBlitz3.ab2@9718>   MOVEQ.l #$0C,D3                                          ; size
0003B4D4 <AmiBlitz3.ab2@9719>   MOVEA.l _dosbase,A6
0003B4D8 <AmiBlitz3.ab2@9720>    JSR _Read(A6)
0003B4DE <AmiBlitz3.ab2@9722>   CMP.l #$C,D0
0003B4E2 <AmiBlitz3.ab2@9723>    BCS.w close_and_exit_userlibfile
0003B4E8 <AmiBlitz3.ab2@9726>   MOVE.l optstuff+4,D0
0003B4EC <AmiBlitz3.ab2@9727>   MOVE.l D0,$20(A5)
0003B4EE <AmiBlitz3.ab2@9728>   LSL.l #2,D0
0003B4F0 <AmiBlitz3.ab2@9729>   MOVE.l D0,D5
0003B4F2 <AmiBlitz3.ab2@9730>   MOVEQ.l #$01,D1
0003B4F8 <AmiBlitz3.ab2@9731>   MOVEA.l _execbase,A6
0003B4FE <AmiBlitz3.ab2@9732>   MOVE.l mempool,a0
0003B502 <AmiBlitz3.ab2@9733>   JSR _AllocPooled(a6)
0003B508 <AmiBlitz3.ab2@9735>   MOVEA.l _dosbase,A6
0003B50C <AmiBlitz3.ab2@9736>   MOVE.l D0,$24(A5)
0003B50E <AmiBlitz3.ab2@9737>   MOVE.l D7,D1
0003B510 <AmiBlitz3.ab2@9738>   MOVE.l D0,D2
0003B512 <AmiBlitz3.ab2@9739>   MOVE.l D5,D3
0003B516 <AmiBlitz3.ab2@9740>   JSR _Read(A6)
0003B518 <AmiBlitz3.ab2@9743>   MOVE.l D7,D1
0003B51E <AmiBlitz3.ab2@9744>   MOVEA.l _dosbase,A6
0003B522 <AmiBlitz3.ab2@9745> JMP _Close(A6)
0003B524 <AmiBlitz3.ab2@9748> RTS
0003B52A <AmiBlitz3.ab2@9754>   CLR.w number_of_objects
0003B530 <AmiBlitz3.ab2@9755>   MOVEA.l end_of_tokenlist,A3
0003B536 <AmiBlitz3.ab2@9756>   MOVEA.l libpointer,A2
0003B53A <AmiBlitz3.ab2@9759>     CMPA.w #$0,A2
0003B53E <AmiBlitz3.ab2@9760>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
0003B542 <AmiBlitz3.ab2@9762>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
0003B546 <AmiBlitz3.ab2@9763>     BMI.w JL_0_7226
0003B548 <AmiBlitz3.ab2@9764>       LSL.w #7,D7
0003B54A <AmiBlitz3.ab2@9765>       ADDQ.w #1,D7
0003B54E <AmiBlitz3.ab2@9766>       MOVE.w D7,$E(A2)
0003B552 <AmiBlitz3.ab2@9769>     LEA $30(A2),A1
0003B558 <AmiBlitz3.ab2@9770>     LEA temp1,A4
0003B55A <AmiBlitz3.ab2@9773>       MOVE.w (A1),D0
0003B55E <AmiBlitz3.ab2@9774>       BMI.w JL_0_72AE
0003B560 <AmiBlitz3.ab2@9775>       MOVE.l A1,(A4)
0003B562 <AmiBlitz3.ab2@9776>       MOVEA.l A1,A4
0003B564 <AmiBlitz3.ab2@9777>       ADDQ.w #2,A4
0003B566 <AmiBlitz3.ab2@9778>       ADDQ.w #6,A1
0003B56A <AmiBlitz3.ab2@9779>       CMP.w #$8,D0
0003B56E <AmiBlitz3.ab2@9780>       BEQ.w JL_0_7290
0003B572 <AmiBlitz3.ab2@9781>         ANDI.w #$F,D0
0003B576 <AmiBlitz3.ab2@9782>         BNE.w JL_0_725C
0003B57A <AmiBlitz3.ab2@9783>           BSR.w skiplibreg
0003B57E <AmiBlitz3.ab2@9784>           LEA $C(A1),A1
0003B580 <AmiBlitz3.ab2@9785>           ADDQ.w #1,D7
0003B584 <AmiBlitz3.ab2@9786> BRA.w JL_0_7230
0003B588 <AmiBlitz3.ab2@9789>     BTST #$2,D0
0003B58C <AmiBlitz3.ab2@9790>     BEQ.w JL_0_7274
0003B58E <AmiBlitz3.ab2@9791>       ADDQ.w #4,A1
0003B590 <AmiBlitz3.ab2@9794>         TST.b (A1)+
0003B594 <AmiBlitz3.ab2@9795>       BPL.w JL_0_7266
0003B598 <AmiBlitz3.ab2@9796>       BSR.w aligna1
0003B59C <AmiBlitz3.ab2@9797> BRA.w JL_0_7290
0003B59E <AmiBlitz3.ab2@9800>       MOVE.w (A1)+,D0
0003B5A2 <AmiBlitz3.ab2@9801>       BMI.w JL_0_7290
0003B5A6 <AmiBlitz3.ab2@9802>       ANDI.w #$FF,D0
0003B5A8 <AmiBlitz3.ab2@9803>       ADDA.w D0,A1
0003B5AC <AmiBlitz3.ab2@9804>       BSR.w aligna1
0003B5B0 <AmiBlitz3.ab2@9805>       BSR.w skiplibreg
0003B5B4 <AmiBlitz3.ab2@9806>       LEA $C(A1),A1
0003B5B8 <AmiBlitz3.ab2@9807> BRA.w JL_0_7274
0003B5BA <AmiBlitz3.ab2@9810>     MOVE.l A1,(A3)
0003B5BC <AmiBlitz3.ab2@9811>     MOVEA.l A1,A3
0003B5BE <AmiBlitz3.ab2@9812>     ADDQ.w #4,A1
0003B5C0 <AmiBlitz3.ab2@9813>     MOVE.w D7,(A1)+
0003B5C2 <AmiBlitz3.ab2@9816>       TST.b (A1)+
0003B5C6 <AmiBlitz3.ab2@9817>     BNE.w JL_0_7298
0003B5C8 <AmiBlitz3.ab2@9820>       TST.b (A1)+
0003B5CC <AmiBlitz3.ab2@9821>     BNE.w JL_0_729E
0003B5D0 <AmiBlitz3.ab2@9823>     BSR.w aligna1
0003B5D2 <AmiBlitz3.ab2@9824>     ADDQ.w #1,D7
0003B5D6 <AmiBlitz3.ab2@9825> BRA.w JL_0_7230
0003B5DA <AmiBlitz3.ab2@9828>     TST.w $4(A2)
0003B5DE <AmiBlitz3.ab2@9829>      BMI.w JL_0_72BA
0003B5E2 <AmiBlitz3.ab2@9830>     MOVE.w D7,$10(A2)
0003B5E4 <AmiBlitz3.ab2@9833>     ADDQ.w #2,A1
0003B5E6 <AmiBlitz3.ab2@9834>     TST.l (A1)+
0003B5EA <AmiBlitz3.ab2@9835>      BEQ.w JL_0_72CC
0003B5F0 <AmiBlitz3.ab2@9836>     ADDQ.w #1,number_of_objects
0003B5F4 <AmiBlitz3.ab2@9837>     LEA $16(A1),A1
0003B5F6 <AmiBlitz3.ab2@9840>     SUBA.l A2,A1
0003B5FA <AmiBlitz3.ab2@9841>     MOVE.l A1,$12(A2)
0003B5FC <AmiBlitz3.ab2@9842>     MOVEA.l (A2),A2
0003B600 <AmiBlitz3.ab2@9843> BRA.w JL_0_720E
0003B602 <AmiBlitz3.ab2@9846>   CLR.l (A3)
0003B608 <AmiBlitz3.ab2@9847>   MOVE.l A7,errstack
0003B612 <AmiBlitz3.ab2@9848>   MOVE.l #AL_0_730E,errcont
0003B61A <AmiBlitz3.ab2@9849>   MOVE.w #$FFFF,ezerr
0003B61E <AmiBlitz3.ab2@9850>   MOVE.w #$FFFA,D1
0003B622 <AmiBlitz3.ab2@9851>    BSR.w JL_0_6F38
0003B628 <AmiBlitz3.ab2@9852>   MOVE.l A1,tempvm
0003B62C <AmiBlitz3.ab2@9853>   MOVE.w #$FDA7,D1
0003B630 <AmiBlitz3.ab2@9854>    BSR.w JL_0_6F38
0003B636 <AmiBlitz3.ab2@9855>   MOVE.l A1,ffplib
0003B638 <AmiBlitz3.ab2@9858> RTS
0003B63C <AmiBlitz3.ab2@9861> ffplib:  Ds.l 1
0003B63E <AmiBlitz3.ab2@9865>     TST.w (A1)+
0003B642 <AmiBlitz3.ab2@9866>     BEQ.w JL_0_7320
0003B644 <AmiBlitz3.ab2@9867>     ADDQ.w #2,A1
0003B648 <AmiBlitz3.ab2@9868> BRA.w skiplibreg
0003B64A <AmiBlitz3.ab2@9871> RTS
0003B64C <AmiBlitz3.ab2@9875>   EXG.l A1,A0
0003B650 <AmiBlitz3.ab2@9876>   BSR.w aligna1
0003B652 <AmiBlitz3.ab2@9877>   EXG.l A1,A0
0003B654 <AmiBlitz3.ab2@9878> RTS
0003B656 <AmiBlitz3.ab2@9881>   EXG.l D0,A1
0003B658 <AmiBlitz3.ab2@9882>   ADDQ.l #1,D0
0003B65C <AmiBlitz3.ab2@9883>   BCLR #$0,D0
0003B65E <AmiBlitz3.ab2@9884>   EXG.l D0,A1
0003B660 <AmiBlitz3.ab2@9885> RTS
0003B666 <AmiBlitz3.ab2@9889>   MOVEA.l _execbase,A6
0003B66C <AmiBlitz3.ab2@9890>   MOVEA.l ptr_userlibs,A2
0003B66E <AmiBlitz3.ab2@9891>   MOVE.l (A2),D0
0003B670 <AmiBlitz3.ab2@9892>   CLR.l (A2)
0003B672 <AmiBlitz3.ab2@9893>   MOVEA.l D0,A2
0003B676 <AmiBlitz3.ab2@9896>     CMPA.w #$0,A2
0003B67A <AmiBlitz3.ab2@9897>     BEQ.w free_userlib
0003B67E <AmiBlitz3.ab2@9899>     MOVE.l $20(A2),D0
0003B682 <AmiBlitz3.ab2@9900>     BEQ.b JL_0_7360
0003B684 <AmiBlitz3.ab2@9901>       LSL.l #2,D0
0003B68A <AmiBlitz3.ab2@9902>       MOVE.l mempool,a0
0003B68E <AmiBlitz3.ab2@9903>       MOVEA.l $24(A2),A1
0003B692 <AmiBlitz3.ab2@9904>       JSR _FreePooled(A6)
0003B694 <AmiBlitz3.ab2@9907>     MOVEA.l A2,A1
0003B698 <AmiBlitz3.ab2@9908>     MOVE.l $6(A1),D0
0003B69E <AmiBlitz3.ab2@9909>     MOVE.l mempool,a0
0003B6A0 <AmiBlitz3.ab2@9910>     MOVEA.l (A2),A2
0003B6A6 <AmiBlitz3.ab2@9911>     MOVEA.l _execbase,A6
0003B6AA <AmiBlitz3.ab2@9912>     JSR _FreePooled(A6)
0003B6AE <AmiBlitz3.ab2@9913> BRA.w JL_0_7348
0003B6B2 <AmiBlitz3.ab2@9917>   BSR.w free_userlibs
0003B6B8 <AmiBlitz3.ab2@9918>   MOVEA.l _execbase,A6
0003B6BE <AmiBlitz3.ab2@9919>   CLR.l libpointer
0003B6C4 <AmiBlitz3.ab2@9920>   MOVEA.l end_of_tokenlist,A0
0003B6C6 <AmiBlitz3.ab2@9921>   CLR.l (A0)
0003B6CC <AmiBlitz3.ab2@9923>   MOVE.l size_acidlibs,D0
0003B6D0 <AmiBlitz3.ab2@9924>   BEQ.b JL_0_73A2
0003B6D6 <AmiBlitz3.ab2@9925>     MOVE.l ptr_acidlibs,D1
0003B6DA <AmiBlitz3.ab2@9926>     BEQ.b JL_0_73A2
0003B6E0 <AmiBlitz3.ab2@9927>       CLR.l ptr_acidlibs
0003B6E2 <AmiBlitz3.ab2@9928>       MOVEA.l D1,A1
0003B6E8 <AmiBlitz3.ab2@9929>       MOVE.l mempool,a0
0003B6EE <AmiBlitz3.ab2@9930>       MOVEA.l _execbase,A6
0003B6F2 <AmiBlitz3.ab2@9931>       JSR _FreePooled(A6)                                 ; free acidlibs
0003B6F8 <AmiBlitz3.ab2@9934>   MOVE.l size_deflibs,D0
0003B6FC <AmiBlitz3.ab2@9935>   BEQ.b JL_0_73BE
0003B702 <AmiBlitz3.ab2@9936>     MOVE.l ptr_deflibs,D1
0003B706 <AmiBlitz3.ab2@9937>     BEQ.b JL_0_73BE
0003B70C <AmiBlitz3.ab2@9938>       CLR.l ptr_deflibs                                    ; d0: memorySize
0003B70E <AmiBlitz3.ab2@9939>       MOVEA.l D1,A1                                        ; a1: memory
0003B714 <AmiBlitz3.ab2@9940>       MOVE.l mempool,a0                                    ; a0: poolHeader
0003B71A <AmiBlitz3.ab2@9941>       MOVEA.l _execbase,A6
0003B71E <AmiBlitz3.ab2@9942>       JSR _FreePooled(A6)                                  ; free deflibs
0003B720 <AmiBlitz3.ab2@9945> RTS
0003B726 <AmiBlitz3.ab2@9949>   MOVEA.l currentmacroaddr,A0
0003B728 <AmiBlitz3.ab2@9950>   MOVEA.l (A0),A2
0003B72A <AmiBlitz3.ab2@9951>   CLR.l (A0)
0003B730 <AmiBlitz3.ab2@9952>   MOVEA.l _execbase,A6
0003B734 <AmiBlitz3.ab2@9955>     CMPA.w #$0,A2
0003B738 <AmiBlitz3.ab2@9956>     BEQ.w JL_0_73FA
0003B73A <AmiBlitz3.ab2@9957>     MOVEQ.l #$00,D0
0003B73E <AmiBlitz3.ab2@9958>     MOVE.w $8(A2),D0
0003B742 <AmiBlitz3.ab2@9959>     BEQ.w JL_0_73E8
0003B746 <AmiBlitz3.ab2@9960>     MOVEA.l $4(A2),A1
0003B74C <AmiBlitz3.ab2@9961>     MOVE.l mempool,a0
0003B750 <AmiBlitz3.ab2@9962>     JSR _FreePooled(A6)
0003B752 <AmiBlitz3.ab2@9965>     MOVEA.l A2,A1
0003B754 <AmiBlitz3.ab2@9966>     MOVEA.l (A2),A2
0003B756 <AmiBlitz3.ab2@9967>     MOVEQ.l #$00,D0
0003B75A <AmiBlitz3.ab2@9968>     MOVE.b $C(A1),D0
0003B760 <AmiBlitz3.ab2@9969>     MOVE.l mempool2,a0
0003B764 <AmiBlitz3.ab2@9970>     JSR _FreePooled(A6)
0003B768 <AmiBlitz3.ab2@9971> BRA.w JL_0_73CE
0003B76A <AmiBlitz3.ab2@9974> RTS
0003B770 <AmiBlitz3.ab2@9978>   MOVEA.l templabel,A2
0003B776 <AmiBlitz3.ab2@9979>   CLR.l templabel
0003B778 <AmiBlitz3.ab2@9980> RTS
0003B77E <AmiBlitz3.ab2@9983>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
0003B782 <AmiBlitz3.ab2@9986>     CMPA.w #$0,A2
0003B786 <AmiBlitz3.ab2@9987>     BEQ.w JL_0_7426
0003B788 <AmiBlitz3.ab2@9988>     MOVEQ.l #$00,D0
0003B78C <AmiBlitz3.ab2@9989>     MOVE.b $E(A2),D0                                       ;labeltemp
0003B78E <AmiBlitz3.ab2@9990>     MOVEA.l A2,A1
0003B790 <AmiBlitz3.ab2@9991>     MOVEA.l (A2),A2
0003B796 <AmiBlitz3.ab2@9992>     MOVE.l mempool2,a0
0003B79A <AmiBlitz3.ab2@9994> BRA.w JL_0_740C
0003B79C <AmiBlitz3.ab2@9997> RTS
0003B7A2 <AmiBlitz3.ab2@10001>   MOVEA.l data1,A4
0003B7A8 <AmiBlitz3.ab2@10002>   CMPA.l data2at,A4
0003B7AC <AmiBlitz3.ab2@10003>   BCC.w JL_0_7442
0003B7AE <AmiBlitz3.ab2@10004>     MOVE.b D1,(A4)+
0003B7B4 <AmiBlitz3.ab2@10005>     MOVE.l A4,data1
0003B7B6 <AmiBlitz3.ab2@10006> RTS
0003B7BE <AmiBlitz3.ab2@10009>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
0003B7C4 <AmiBlitz3.ab2@10010>   ADDQ.l #1,data1
0003B7C6 <AmiBlitz3.ab2@10011> RTS
0003B7C8 <AmiBlitz3.ab2@10015>   SWAP D1
0003B7CC <AmiBlitz3.ab2@10016>   BSR.w pokedata1
0003B7CE <AmiBlitz3.ab2@10017>   SWAP D1
0003B7D4 <AmiBlitz3.ab2@10020>   MOVEA.l data1,A4
0003B7DA <AmiBlitz3.ab2@10021>   CMPA.l data2at,A4
0003B7DE <AmiBlitz3.ab2@10022>    BCC.w JL_0_7474
0003B7E0 <AmiBlitz3.ab2@10023>   MOVE.w D1,(A4)+
0003B7E6 <AmiBlitz3.ab2@10024>   MOVE.l A4,data1
0003B7E8 <AmiBlitz3.ab2@10025> RTS
0003B7F0 <AmiBlitz3.ab2@10028>   MOVE.w #$FFFF,dontwrite
0003B7F6 <AmiBlitz3.ab2@10029>   ADDQ.l #2,data1
0003B7F8 <AmiBlitz3.ab2@10030> RTS
0003B7FE <AmiBlitz3.ab2@10034>   MOVE.l data1,D3                                      ;write local string/type allocs
0003B800 <AmiBlitz3.ab2@10035>   MOVEQ.l #$00,D4
0003B804 <AmiBlitz3.ab2@10038>   CMPA.w #$0,A2
0003B808 <AmiBlitz3.ab2@10039>    BEQ.w JL_0_74CAc
0003B80C <AmiBlitz3.ab2@10040>   TST.w $6(A2)
0003B810 <AmiBlitz3.ab2@10041>    BNE.w JL_0_74C4c
0003B814 <AmiBlitz3.ab2@10042>   MOVEA.l $A(A2),A3
0003B81C <AmiBlitz3.ab2@10043>   CMPI.l #$100,$4(A3)
0003B820 <AmiBlitz3.ab2@10044>    BCS.w JL_0_74C4c
0003B824 <AmiBlitz3.ab2@10045>   MOVE.w $4(A2),D1
0003B828 <AmiBlitz3.ab2@10046>    BSR.w pokedata1
0003B82C <AmiBlitz3.ab2@10047>   MOVE.w $8(A3),D1
0003B830 <AmiBlitz3.ab2@10048>    BSR.w pokedata1
0003B832 <AmiBlitz3.ab2@10049>   ADDQ.w #1,D4
0003B834 <AmiBlitz3.ab2@10052>    MOVEA.l (A2),A2
0003B838 <AmiBlitz3.ab2@10053> BRA.w JL_0_7492c
0003B83A <AmiBlitz3.ab2@10056>    TST.w D4
0003B83E <AmiBlitz3.ab2@10057>    BEQ.w JL_0_74E0
0003B842 <AmiBlitz3.ab2@10058>   MOVE.w #$FF37,D1
0003B846 <AmiBlitz3.ab2@10059>    BSR.w uselib
0003B84A <AmiBlitz3.ab2@10060>   MOVE.w #$FFFA,D1
0003B84E <AmiBlitz3.ab2@10061> BRA.w uselib
0003B854 <AmiBlitz3.ab2@10069>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0003B85A <AmiBlitz3.ab2@10072>   MOVE.l data1,D3
0003B85C <AmiBlitz3.ab2@10073>   MOVEQ.l #$00,D4
0003B862 <AmiBlitz3.ab2@10074>   TST.b iserror
0003B866 <AmiBlitz3.ab2@10075>   BEQ JL_0_7492
0003B868 <AmiBlitz3.ab2@10076>   RTS
0003B86C <AmiBlitz3.ab2@10078>    CMPA.w #$0,A2
0003B870 <AmiBlitz3.ab2@10079>    BEQ.w JL_0_74CA
0003B874 <AmiBlitz3.ab2@10080>   TST.w $6(A2)
0003B878 <AmiBlitz3.ab2@10081>    BNE.w JL_0_74C4
0003B87C <AmiBlitz3.ab2@10082>   MOVEA.l $A(A2),A3
0003B884 <AmiBlitz3.ab2@10083>   CMPI.l #$100,$4(A3)
0003B888 <AmiBlitz3.ab2@10084>    BCS.w JL_0_74C4
0003B88C <AmiBlitz3.ab2@10085>   MOVE.w $4(A2),D1
0003B890 <AmiBlitz3.ab2@10086>    BSR.w pokedata1
0003B894 <AmiBlitz3.ab2@10087>   MOVE.w $8(A3),D1
0003B898 <AmiBlitz3.ab2@10088>    BSR.w pokedata1
0003B89A <AmiBlitz3.ab2@10089>   ADDQ.w #1,D4
0003B89C <AmiBlitz3.ab2@10092>   MOVEA.l (A2),A2
0003B8A0 <AmiBlitz3.ab2@10093> BRA.w JL_0_7492
0003B8A6 <AmiBlitz3.ab2@10097>   MOVEA.l sharebase,A2
0003B8AA <AmiBlitz3.ab2@10100>   CMPA.w #$0,A2
0003B8AE <AmiBlitz3.ab2@10101>    BEQ.w JL_0_74CAb
0003B8B2 <AmiBlitz3.ab2@10103>   TST.w $6(A2)
0003B8B6 <AmiBlitz3.ab2@10104>    BNE.w JL_0_74C4b
0003B8BA <AmiBlitz3.ab2@10105>   MOVEA.l $A(A2),A3
0003B8C2 <AmiBlitz3.ab2@10106>   CMPI.l #$100,$4(A3)
0003B8C6 <AmiBlitz3.ab2@10107>    BCS.w JL_0_74C4b
0003B8CA <AmiBlitz3.ab2@10108>   MOVE.w $4(A2),D1
0003B8CE <AmiBlitz3.ab2@10109>    BSR.w pokedata1
0003B8D2 <AmiBlitz3.ab2@10110>   MOVE.w $8(A3),D1
0003B8D6 <AmiBlitz3.ab2@10111>    BSR.w pokedata1
0003B8D8 <AmiBlitz3.ab2@10112>   ADDQ.w #1,D4
0003B8DA <AmiBlitz3.ab2@10115>   MOVEA.l (A2),A2
0003B8DE <AmiBlitz3.ab2@10116> BRA.w JL_0_7492b
0003B8E0 <AmiBlitz3.ab2@10119>    TST.w D4
0003B8E4 <AmiBlitz3.ab2@10120>    BEQ.w JL_0_74E0
0003B8E8 <AmiBlitz3.ab2@10121>   MOVE.w #$FF37,D1
0003B8EC <AmiBlitz3.ab2@10122>    BSR.w uselib                                            ;use statics lib
0003B8F0 <AmiBlitz3.ab2@10123>   MOVE.w #$FFFA,D1                                         ;use memlib
0003B8F4 <AmiBlitz3.ab2@10124> BRA.w uselib
0003B8F6 <AmiBlitz3.ab2@10127> RTS
0003B8FC <AmiBlitz3.ab2@10131>   MOVE.w numtoa2,D1
0003B900 <AmiBlitz3.ab2@10132>    BSR.w writeword
0003B904 <AmiBlitz3.ab2@10133>    BSR.w addoff
0003B906 <AmiBlitz3.ab2@10134>   MOVE.l D3,D1
0003B90A <AmiBlitz3.ab2@10135>    BSR.w writelong
0003B90C <AmiBlitz3.ab2@10136>   SUBQ.w #1,D4
0003B912 <AmiBlitz3.ab2@10137>   MOVE.w D4,endarray+2
0003B918 <AmiBlitz3.ab2@10138>   MOVE.l endarray,D1
0003B91C <AmiBlitz3.ab2@10139> BRA.w writelong
0003B91E <AmiBlitz3.ab2@10143>   MOVE.l D3,-(A7)
0003B924 <AmiBlitz3.ab2@10146>   MOVEA.l _dosbase,A6
0003B928 <AmiBlitz3.ab2@10147>   JSR _Write(a6)
0003B92A <AmiBlitz3.ab2@10149>   CMP.l (A7)+,D0
0003B92E <AmiBlitz3.ab2@10150>    BNE.w JL_0_7516
0003B930 <AmiBlitz3.ab2@10151> RTS
0003B932 <AmiBlitz3.ab2@10154>   MOVE.l D7,D1
0003B938 <AmiBlitz3.ab2@10156>   MOVEA.l _dosbase,A6
0003B93C <AmiBlitz3.ab2@10157>   JSR _Close(a6)
0003B942 <AmiBlitz3.ab2@10160> JMP error_create_exe
0003B948 <AmiBlitz3.ab2@10169>   MOVE.l A7,errstack
0003B94C <AmiBlitz3.ab2@10170>   MOVEM.l d2-d7/a2-a6,-(a7)
0003B956 <AmiBlitz3.ab2@10171>   MOVE.l #AL_0_7790,errcont
0003B95C <AmiBlitz3.ab2@10172>    JSR call_setpointerbusy
0003B964 <AmiBlitz3.ab2@10173>   MOVE.w #$FFFF,anyerrs
0003B96E <AmiBlitz3.ab2@10174>   CMP.l #-1,chipstart
0003B972 <AmiBlitz3.ab2@10175>   BEQ 'l01
0003B978 <AmiBlitz3.ab2@10176>   MOVE.l chipend,d1
0003B97A <AmiBlitz3.ab2@10177>   ADDQ.l #3,d1
0003B980 <AmiBlitz3.ab2@10178>   AND.l #$fffffffc,d1                                      ;bug
0003B986 <AmiBlitz3.ab2@10179>   MOVE.l d1,chipend
0003B988 <AmiBlitz3.ab2@10180>   MOVE.l d1,a1
0003B98E <AmiBlitz3.ab2@10181>   MOVE.l chipstart,a0
0003B990 <AmiBlitz3.ab2@10182>   MOVE.l a1,d1
0003B992 <AmiBlitz3.ab2@10183>   SUB.l a0,d1
0003B998 <AmiBlitz3.ab2@10184>   MOVE.l d1,chipsize
0003B9A2 <AmiBlitz3.ab2@10187>   CMP.l #-1,bssstart
0003B9A6 <AmiBlitz3.ab2@10188>   BEQ 'l11
0003B9AC <AmiBlitz3.ab2@10189>   MOVE.l realbssend,a1
0003B9B2 <AmiBlitz3.ab2@10190>   MOVE.l bssstart,a0
0003B9B4 <AmiBlitz3.ab2@10191>   MOVE.l a1,d1
0003B9B6 <AmiBlitz3.ab2@10192>   SUB.l a0,d1
0003B9BC <AmiBlitz3.ab2@10193>   MOVE.l d1,bsssize
0003B9C0 <AmiBlitz3.ab2@10194>   BEQ 'l11
0003B9C2 <AmiBlitz3.ab2@10197>   TST.b (a0)+
0003B9C6 <AmiBlitz3.ab2@10198>   BEQ 'l31
0003B9CC <AmiBlitz3.ab2@10199>   TST.b debugmode
0003B9D0 <AmiBlitz3.ab2@10200>   BEQ 'l1
0003B9D6 <AmiBlitz3.ab2@10201>   TST.b exdebug
0003B9DA <AmiBlitz3.ab2@10202>   BNE 'l31
0003B9E0 <AmiBlitz3.ab2@10205>   MOVE.l #nodata,-(a7)
0003B9E6 <AmiBlitz3.ab2@10206> JMP handle_compileerror
0003B9E8 <AmiBlitz3.ab2@10209>   CMP.l a0,a1
0003B9EC <AmiBlitz3.ab2@10210>   BGT 'l32
0003B9F2 <AmiBlitz3.ab2@10211>   MOVE.l bssend,d1
0003B9F4 <AmiBlitz3.ab2@10212>   ADDQ.l #3,d1
0003B9FA <AmiBlitz3.ab2@10213>   AND.l #$fffffffc,d1                                      ;bug
0003BA00 <AmiBlitz3.ab2@10214>   MOVE.l d1,bssend
0003BA02 <AmiBlitz3.ab2@10215>   MOVE.l d1,a1
0003BA08 <AmiBlitz3.ab2@10216>   MOVE.l bssstart,a0
0003BA0A <AmiBlitz3.ab2@10217>   MOVE.l a1,d1
0003BA0C <AmiBlitz3.ab2@10218>   SUB.l a0,d1
0003BA12 <AmiBlitz3.ab2@10219>   MOVE.l d1,bsssize
0003BA16 <AmiBlitz3.ab2@10222>   MOVEM.l d5-d7/d3,-(a7)
0003BA1C <AmiBlitz3.ab2@10223>   MOVE.w dontwrite,D1
0003BA20 <AmiBlitz3.ab2@10224>   BNE.w JL_0_757C
0003BA26 <AmiBlitz3.ab2@10225>   MOVE.l chipsize,d5
0003BA2C <AmiBlitz3.ab2@10226>   MOVE.l bsssize,d3
0003BA32 <AmiBlitz3.ab2@10227>   MOVE.l chipstart,d7
0003BA38 <AmiBlitz3.ab2@10228>   MOVE.l bssstart,d6
0003BA3E <AmiBlitz3.ab2@10229>   MOVEA.l hunkoffsetbase,A2
0003BA44 <AmiBlitz3.ab2@10230>   MOVEA.l destbufferstart,A1
0003BA46 <AmiBlitz3.ab2@10231>   MOVE.l A1,D2
0003BA4C <AmiBlitz3.ab2@10232>   ADD.l noinits,D2
0003BA52 <AmiBlitz3.ab2@10233>   CLR.l hunkoffsetnum
0003BA56 <AmiBlitz3.ab2@10236>   CMPA.w #$0,A2
0003BA5A <AmiBlitz3.ab2@10237>    BEQ.w JL_0_757C
0003BA5E <AmiBlitz3.ab2@10238>   MOVE.l $4(A2),D0
0003BA62 <AmiBlitz3.ab2@10239>    LEA $0(a1,d0.l),a0
0003BA64 <AmiBlitz3.ab2@10240>    MOVE.l (a0),d1
0003BA66 <AmiBlitz3.ab2@10241>   TST.l d1
0003BA6A <AmiBlitz3.ab2@10242>    BMI.w 'lm1
0003BA72 <AmiBlitz3.ab2@10243>   MOVE.b #0,newhunk
0003BA7C <AmiBlitz3.ab2@10244>   CMP.l #-1,chipstart
0003BA80 <AmiBlitz3.ab2@10245>   BEQ 'l10
0003BA86 <AmiBlitz3.ab2@10246>   CMP.l chipstart,d1
0003BA8A <AmiBlitz3.ab2@10247>   BLT 'l10
0003BA92 <AmiBlitz3.ab2@10248>   MOVE.b #1,newhunk
0003BA98 <AmiBlitz3.ab2@10249>   CMP.l chipend,d1
0003BA9C <AmiBlitz3.ab2@10250>   BGE 'l110
0003BA9E <AmiBlitz3.ab2@10251>   SUB.l d7,(a0)
0003BAA6 <AmiBlitz3.ab2@10252>   ADD.l #$80000000,4(a2)
0003BAAA <AmiBlitz3.ab2@10253> BRA JL_0_7576
0003BAAE <AmiBlitz3.ab2@10256>   SUB.l d5,0(a0)
0003BAB8 <AmiBlitz3.ab2@10259>   CMP.l #-1,bssstart
0003BABC <AmiBlitz3.ab2@10260>     BEQ 'l11
0003BAC2 <AmiBlitz3.ab2@10261>   CMP.l bssstart,d1
0003BAC6 <AmiBlitz3.ab2@10262>   BLT 'l11
0003BACC <AmiBlitz3.ab2@10263>   CMP.l bssend,d1
0003BAD0 <AmiBlitz3.ab2@10264>   BGE 'l111
0003BAD6 <AmiBlitz3.ab2@10265>   TST.b newhunk
0003BADA <AmiBlitz3.ab2@10266>   BEQ 'ln1
0003BADC <AmiBlitz3.ab2@10267>   ADD.l d5,(a0)
0003BADE <AmiBlitz3.ab2@10270>   SUB.l d6,(a0)
0003BAE6 <AmiBlitz3.ab2@10271>   ADD.l #$40000000,4(a2)
0003BAEA <AmiBlitz3.ab2@10272> BRA JL_0_7576
0003BAEE <AmiBlitz3.ab2@10275>   SUB.l d3,0(a0)
0003BAF0 <AmiBlitz3.ab2@10278>   SUB.l D2,(A0)
0003BAF6 <AmiBlitz3.ab2@10281>   ADDQ.l #1,hunkoffsetnum
0003BAF8 <AmiBlitz3.ab2@10284>    MOVEA.l (A2),A2
0003BAFC <AmiBlitz3.ab2@10285> BRA.w JL_0_755E
0003BB00 <AmiBlitz3.ab2@10289>   MOVEM.l (a7)+,d5-d7/d3
0003BB06 <AmiBlitz3.ab2@10290>   MOVE.l ptr_newexefilename,D1
0003BB0C <AmiBlitz3.ab2@10291>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0003BB12 <AmiBlitz3.ab2@10292>   MOVEA.l _dosbase,A6
0003BB16 <AmiBlitz3.ab2@10293>    JSR _Open(A6)
0003BB18 <AmiBlitz3.ab2@10294>   MOVE.l D0,D7
0003BB1C <AmiBlitz3.ab2@10295>    BEQ.w execerr
0003BB22 <AmiBlitz3.ab2@10296>   MOVE.l objlen,D0
0003BB28 <AmiBlitz3.ab2@10297>   SUB.l #moremem,d0
0003BB2E <AmiBlitz3.ab2@10298>   SUB.l noinits,D0
0003BB38 <AmiBlitz3.ab2@10299>   CMP.l #-1,bssstart
0003BB3C <AmiBlitz3.ab2@10300>   BEQ 'l60
0003BB42 <AmiBlitz3.ab2@10301>   SUB.l bsssize,d0
0003BB48 <AmiBlitz3.ab2@10302>   SUB.l chipsize,d0
0003BB4C <AmiBlitz3.ab2@10303> BRA.s 'l61
0003BB56 <AmiBlitz3.ab2@10306>   CMP.l #-1,chipstart
0003BB5A <AmiBlitz3.ab2@10307>   BEQ 'l61
0003BB60 <AmiBlitz3.ab2@10308>   SUB.l bsssize,d0
0003BB66 <AmiBlitz3.ab2@10309>   SUB.l chipsize,d0
0003BB68 <AmiBlitz3.ab2@10312>   ADDQ.l #3,D0
0003BB6A <AmiBlitz3.ab2@10313>   LSR.l #2,D0
0003BB70 <AmiBlitz3.ab2@10314>   MOVE.l D0,tstsize1
0003BB76 <AmiBlitz3.ab2@10315>   MOVE.l D0,tstsize2
0003BB78 <AmiBlitz3.ab2@10316>   MOVE.l D7,D1
0003BB7E <AmiBlitz3.ab2@10317>   MOVE.l #tsthead,D2                                      ;hunkbegin
0003BB80 <AmiBlitz3.ab2@10318>   MOVEQ.l #$20,D3
0003BB8A <AmiBlitz3.ab2@10319>   CMP.l #-1,bssstart
0003BB8E <AmiBlitz3.ab2@10320>   BEQ 'lb1
0003BB98 <AmiBlitz3.ab2@10321>   CMP.l #-1,chipstart
0003BB9C <AmiBlitz3.ab2@10322>   BEQ 'lb1
0003BBA6 <AmiBlitz3.ab2@10323>   MOVE.l #1,bssnum
0003BBB0 <AmiBlitz3.ab2@10324>   MOVE.l #2,chipnum
0003BBB2 <AmiBlitz3.ab2@10325>   MOVEQ.l #$28,D3
0003BBB8 <AmiBlitz3.ab2@10326>   MOVE.l bsssize,d2
0003BBBA <AmiBlitz3.ab2@10327>   ADDQ.l #3,d2
0003BBBC <AmiBlitz3.ab2@10328>   ASR.l #2,d2
0003BBC2 <AmiBlitz3.ab2@10329>   MOVE.l d2,hunkend+8
0003BBC8 <AmiBlitz3.ab2@10330>   MOVE.l d2,bsssize3
0003BBCE <AmiBlitz3.ab2@10331>   MOVE.l chipsize,d2
0003BBD0 <AmiBlitz3.ab2@10332>   ADDQ.l #3,d2
0003BBD2 <AmiBlitz3.ab2@10333>   ASR.l #2,d2
0003BBD8 <AmiBlitz3.ab2@10334>   MOVE.l d2,chipsize2
0003BBE2 <AmiBlitz3.ab2@10335>   ADD.l #$40000000,chipsize2
0003BBE8 <AmiBlitz3.ab2@10336>   MOVE.l d2,hunkend2+8
0003BBEE <AmiBlitz3.ab2@10337>   MOVE.l D0,tstsize1c
0003BBF4 <AmiBlitz3.ab2@10338>   MOVE.l D0,tstsize2c
0003BBFA <AmiBlitz3.ab2@10339>   MOVE.l #hunkbegin2,d2
0003BBFE <AmiBlitz3.ab2@10340> BRA 'l100
0003BC08 <AmiBlitz3.ab2@10343>   CMP.l #-1,bssstart
0003BC0C <AmiBlitz3.ab2@10344>   BEQ 'l10
0003BC16 <AmiBlitz3.ab2@10345>   MOVE.l #1,bssnum
0003BC18 <AmiBlitz3.ab2@10346>   MOVEQ.l #$24,D3
0003BC1E <AmiBlitz3.ab2@10347>   MOVE.l bsssize,d2
0003BC20 <AmiBlitz3.ab2@10348>   ADDQ.l #3,d2
0003BC22 <AmiBlitz3.ab2@10349>   ASR.l #2,d2
0003BC28 <AmiBlitz3.ab2@10350>   MOVE.l d2,hunkend+8
0003BC2E <AmiBlitz3.ab2@10351>   MOVE.l d2,bsssize2
0003BC34 <AmiBlitz3.ab2@10352>   MOVE.l D0,tstsize1b
0003BC3A <AmiBlitz3.ab2@10353>   MOVE.l D0,tstsize2b
0003BC40 <AmiBlitz3.ab2@10354>   MOVE.l #hunkbegin,d2
0003BC4A <AmiBlitz3.ab2@10357>   CMP.l #-1,chipstart
0003BC4E <AmiBlitz3.ab2@10358>   BEQ 'l100
0003BC58 <AmiBlitz3.ab2@10359>   MOVE.l #1,chipnum
0003BC5A <AmiBlitz3.ab2@10360>   MOVEQ.l #$24,D3
0003BC60 <AmiBlitz3.ab2@10361>   MOVE.l chipsize,d2
0003BC62 <AmiBlitz3.ab2@10362>   ADDQ.l #3,d2
0003BC64 <AmiBlitz3.ab2@10363>   ASR.l #2,d2
0003BC6A <AmiBlitz3.ab2@10364>   MOVE.l d2,hunkend2+8
0003BC70 <AmiBlitz3.ab2@10365>   MOVE.l d2,bsssize2
0003BC7A <AmiBlitz3.ab2@10366>   ADD.l #$40000000,bsssize2
0003BC80 <AmiBlitz3.ab2@10367>   MOVE.l D0,tstsize1b
0003BC86 <AmiBlitz3.ab2@10368>   MOVE.l D0,tstsize2b
0003BC8C <AmiBlitz3.ab2@10369>   MOVE.l #hunkbegin,d2
0003BC90 <AmiBlitz3.ab2@10372>    BSR.w mywrite
0003BC96 <AmiBlitz3.ab2@10373>   MOVE.l destbufferstart,D2
0003BC9C <AmiBlitz3.ab2@10374>   ADD.l noinits,D2
0003BCA2 <AmiBlitz3.ab2@10375>   MOVE.l objlen,D3
0003BCA8 <AmiBlitz3.ab2@10376>   SUB.l #moremem,d3
0003BCAE <AmiBlitz3.ab2@10377>   SUB.l noinits,D3
0003BCB8 <AmiBlitz3.ab2@10378>   CMP.l #-1,bssstart
0003BCBC <AmiBlitz3.ab2@10379>   BNE 'l40
0003BCC6 <AmiBlitz3.ab2@10380>   CMP.l #-1,chipstart
0003BCCA <AmiBlitz3.ab2@10381>   BNE 'l40
0003BCCE <AmiBlitz3.ab2@10382> BRA 'l41
0003BCD4 <AmiBlitz3.ab2@10385>   MOVE.l codeend,d1
0003BCD6 <AmiBlitz3.ab2@10386>     SUB.l d2,d1
0003BCD8 <AmiBlitz3.ab2@10387>     MOVE.l d1,d3
0003BCDE <AmiBlitz3.ab2@10388>   SUB.l bsssize,d3
0003BCE4 <AmiBlitz3.ab2@10389>   SUB.l chipsize,d3
0003BCE6 <AmiBlitz3.ab2@10390>   MOVE.l D7,D1
0003BCEA <AmiBlitz3.ab2@10391>   BSR.w mywrite
0003BCF0 <AmiBlitz3.ab2@10392>   MOVE.l objlen,D3
0003BCF6 <AmiBlitz3.ab2@10393>   SUB.l #moremem,d3
0003BCFC <AmiBlitz3.ab2@10394>   SUB.l noinits,D3
0003BCFE <AmiBlitz3.ab2@10395>   MOVE.l d3,d1
0003BD04 <AmiBlitz3.ab2@10396>   MOVE.l destbufferstart,D2
0003BD0A <AmiBlitz3.ab2@10397>   ADD.l noinits,D2
0003BD0C <AmiBlitz3.ab2@10398>   ADD.l d2,d1
0003BD12 <AmiBlitz3.ab2@10399>   SUB.l codeend,d1
0003BD14 <AmiBlitz3.ab2@10400>   MOVE.l d1,d3
0003BD1A <AmiBlitz3.ab2@10401>   MOVE.l codeend,d2
0003BD1C <AmiBlitz3.ab2@10404>   MOVE.l d2,d1
0003BD1E <AmiBlitz3.ab2@10405>   ADD.l d3,d1
0003BD20 <AmiBlitz3.ab2@10406>   ADDQ.l #3,D1
0003BD26 <AmiBlitz3.ab2@10407>   ANDI.l #$FFFFFFFC,D1
0003BD28 <AmiBlitz3.ab2@10408>   SUB.l d2,d1
0003BD2A <AmiBlitz3.ab2@10409>   MOVE.l d1,d3
0003BD2C <AmiBlitz3.ab2@10410>   MOVE.l D7,D1
0003BD30 <AmiBlitz3.ab2@10411>    BSR.w mywrite
0003BD3A <AmiBlitz3.ab2@10412>   MOVE.l hunkoffsetcounter,tstsize3
0003BD3E <AmiBlitz3.ab2@10413>    BEQ.w JL_0_7646
0003BD40 <AmiBlitz3.ab2@10414>   MOVE.l D7,D1
0003BD46 <AmiBlitz3.ab2@10415>   MOVE.l #tstend,D2
0003BD48 <AmiBlitz3.ab2@10416>   MOVEQ.l #$04,D3
0003BD4C <AmiBlitz3.ab2@10417>    BSR.w mywrite
0003BD52 <AmiBlitz3.ab2@10418>    MOVEA.l _execbase,A6
0003BD58 <AmiBlitz3.ab2@10419>    MOVE.l hunkoffsetcounter,d0
0003BD5A <AmiBlitz3.ab2@10420>    ASL.l #2,d0
0003BD60 <AmiBlitz3.ab2@10421>    ADD.l #12,d0
0003BD62 <AmiBlitz3.ab2@10422>    MOVEQ #0,d1
0003BD66 <AmiBlitz3.ab2@10423>    JSR _AllocMem(a6)
0003BD68 <AmiBlitz3.ab2@10424>    TST.l d0
0003BD6C <AmiBlitz3.ab2@10425>    BEQ nomem
0003BD72 <AmiBlitz3.ab2@10426>    MOVE.l noinits,D4
0003BD74 <AmiBlitz3.ab2@10427>    MOVE.l d5,-(a7)
0003BD76 <AmiBlitz3.ab2@10428>    MOVE.l d0,d5
0003BD78 <AmiBlitz3.ab2@10429>    MOVE.l d0,a1
0003BD7E <AmiBlitz3.ab2@10430>    MOVEA.l hunkoffsetbase,A2
0003BD86 <AmiBlitz3.ab2@10431>    MOVE.b #0,newhunk
0003BD8A <AmiBlitz3.ab2@10434>   CMPA.w #$0,A2
0003BD8E <AmiBlitz3.ab2@10435>    BEQ.w savehunk
0003BD94 <AmiBlitz3.ab2@10436>   MOVE.l destbufferstart,D2
0003BD9A <AmiBlitz3.ab2@10437>   ADD.l noinits,D2
0003BD9E <AmiBlitz3.ab2@10438>   MOVE.l  $4(A2),d1
0003BDA2 <AmiBlitz3.ab2@10439>   BTST #31,d1
0003BDA6 <AmiBlitz3.ab2@10440>   BEQ 'lh1
0003BDAE <AmiBlitz3.ab2@10441>   MOVE.b #1,newhunk
0003BDB2 <AmiBlitz3.ab2@10442> BRA 'lh3
0003BDB6 <AmiBlitz3.ab2@10445>   BTST #30,d1
0003BDBA <AmiBlitz3.ab2@10446>   BEQ 'lh2
0003BDC2 <AmiBlitz3.ab2@10447>   MOVE.b #1,newhunk
0003BDC6 <AmiBlitz3.ab2@10448> BRA 'lh3
0003BDC8 <AmiBlitz3.ab2@10451>   ADD.l d1,d2
0003BDCE <AmiBlitz3.ab2@10452>   CMP.l chipend,d2
0003BDD2 <AmiBlitz3.ab2@10453>   BLT 'l100
0003BDD8 <AmiBlitz3.ab2@10454>   SUB.l chipsize,d1
0003BDDE <AmiBlitz3.ab2@10457>   CMP.l bssend,d2
0003BDE2 <AmiBlitz3.ab2@10458>   BLT 'l101
0003BDE8 <AmiBlitz3.ab2@10459>   SUB.l bsssize,d1
0003BDEA <AmiBlitz3.ab2@10462>   MOVE.l d1,(a1)
0003BDEC <AmiBlitz3.ab2@10463>   SUB.l D4,(A1)+
0003BDEE <AmiBlitz3.ab2@10466>   MOVEA.l (A2),A2
0003BDF2 <AmiBlitz3.ab2@10467> BRA.w menu_createresidentfile__oloopb
0003BDF4 <AmiBlitz3.ab2@10471>   MOVE.l D7,D1
0003BDFA <AmiBlitz3.ab2@10472>   MOVEA.l _dosbase,A6
0003BE04 <AmiBlitz3.ab2@10473>   MOVE.l hunkoffsetnum,tstsize3
0003BE08 <AmiBlitz3.ab2@10474>   BEQ 'ln1
0003BE0E <AmiBlitz3.ab2@10475>   MOVE.l #tstend+4,d2
0003BE10 <AmiBlitz3.ab2@10476>     MOVEQ #8,d3
0003BE14 <AmiBlitz3.ab2@10477>    JSR _Write(A6)
0003BE16 <AmiBlitz3.ab2@10478>   MOVE.l d7,d1
0003BE1C <AmiBlitz3.ab2@10479>   MOVE.l hunkoffsetnum,d3
0003BE1E <AmiBlitz3.ab2@10480>   ASL.l #2,d3
0003BE20 <AmiBlitz3.ab2@10481>   MOVE.l d5,D2
0003BE24 <AmiBlitz3.ab2@10482>   JSR _Write(a6)
0003BE2A <AmiBlitz3.ab2@10485>   TST.b newhunk
0003BE2E <AmiBlitz3.ab2@10486>   BEQ 'l10
0003BE34 <AmiBlitz3.ab2@10487>   MOVEA.l hunkoffsetbase,A2
0003BE36 <AmiBlitz3.ab2@10488>   MOVE.l d5,a0
0003BE38 <AmiBlitz3.ab2@10489>   ADDQ #8,a0
0003BE40 <AmiBlitz3.ab2@10490>   MOVE.l bssnum,-4(a0)
0003BE42 <AmiBlitz3.ab2@10491>   MOVEQ #0,d6
0003BE46 <AmiBlitz3.ab2@10494>   CMPA.w #$0,A2
0003BE4A <AmiBlitz3.ab2@10495>    BEQ.w 'lh3
0003BE50 <AmiBlitz3.ab2@10496>   MOVE.l destbufferstart,D2
0003BE56 <AmiBlitz3.ab2@10497>   ADD.l noinits,D2
0003BE5A <AmiBlitz3.ab2@10498>   MOVE.l  $4(A2),d1
0003BE5E <AmiBlitz3.ab2@10499>   BTST #30,d1
0003BE62 <AmiBlitz3.ab2@10500>   BEQ 'lh1
0003BE66 <AmiBlitz3.ab2@10501>   BCLR #30,d1
0003BE68 <AmiBlitz3.ab2@10502>   MOVE.l d1,(a0)
0003BE6A <AmiBlitz3.ab2@10503>   SUB.l D4,(A0)+
0003BE6C <AmiBlitz3.ab2@10504>   ADDQ.l #1,d6
0003BE6E <AmiBlitz3.ab2@10507>   MOVE.l (a2),a2
0003BE72 <AmiBlitz3.ab2@10508> BRA 'lh2
0003BE74 <AmiBlitz3.ab2@10511>   TST.l d6
0003BE78 <AmiBlitz3.ab2@10512>     BEQ 'lh10
0003BE7A <AmiBlitz3.ab2@10513>     MOVE.l d5,a0
0003BE7C <AmiBlitz3.ab2@10514>     MOVE.l d6,(a0)
0003BE7E <AmiBlitz3.ab2@10515>     MOVE.l d7,d1
0003BE80 <AmiBlitz3.ab2@10516>     MOVE.l d5,d2
0003BE82 <AmiBlitz3.ab2@10517>     MOVE.l d6,d3
0003BE84 <AmiBlitz3.ab2@10518>     ASL.l #2,d3
0003BE86 <AmiBlitz3.ab2@10519>     ADDQ.l #8,d3
0003BE8A <AmiBlitz3.ab2@10520>     BSR.w mywrite
0003BE90 <AmiBlitz3.ab2@10523>   MOVEA.l hunkoffsetbase,A2
0003BE92 <AmiBlitz3.ab2@10524>   MOVE.l d5,a0
0003BE94 <AmiBlitz3.ab2@10525>   ADDQ #8,a0
0003BE9C <AmiBlitz3.ab2@10526>   MOVE.l chipnum,-4(a0)
0003BE9E <AmiBlitz3.ab2@10527>   MOVEQ #0,d6
0003BEA2 <AmiBlitz3.ab2@10530>   CMPA.w #$0,A2
0003BEA6 <AmiBlitz3.ab2@10531>    BEQ.w 'lh30
0003BEAC <AmiBlitz3.ab2@10532>   MOVE.l destbufferstart,D2
0003BEB2 <AmiBlitz3.ab2@10533>   ADD.l noinits,D2
0003BEB6 <AmiBlitz3.ab2@10534>   MOVE.l  $4(A2),d1
0003BEBA <AmiBlitz3.ab2@10535>   BTST #31,d1
0003BEBE <AmiBlitz3.ab2@10536>   BEQ 'lh11
0003BEC2 <AmiBlitz3.ab2@10537>   BCLR #31,d1
0003BEC4 <AmiBlitz3.ab2@10538>   MOVE.l d1,(a0)
0003BEC6 <AmiBlitz3.ab2@10539>   SUB.l D4,(A0)+
0003BEC8 <AmiBlitz3.ab2@10540>   ADDQ.l #1,d6
0003BECA <AmiBlitz3.ab2@10543>   MOVE.l (a2),a2
0003BECE <AmiBlitz3.ab2@10544> BRA 'lh20
0003BED0 <AmiBlitz3.ab2@10547>   TST.l d6
0003BED4 <AmiBlitz3.ab2@10548>     BEQ 'l10
0003BED6 <AmiBlitz3.ab2@10549>     MOVE.l d5,a0
0003BED8 <AmiBlitz3.ab2@10550>     MOVE.l d6,(a0)
0003BEDA <AmiBlitz3.ab2@10551>     MOVE.l d7,d1
0003BEDC <AmiBlitz3.ab2@10552>     MOVE.l d5,d2
0003BEDE <AmiBlitz3.ab2@10553>     MOVE.l d6,d3
0003BEE0 <AmiBlitz3.ab2@10554>     ASL.l #2,d3
0003BEE2 <AmiBlitz3.ab2@10555>     ADDQ.l #8,d3
0003BEE6 <AmiBlitz3.ab2@10556>     BSR.w mywrite
0003BEEC <AmiBlitz3.ab2@10560>    MOVEA.l _execbase,A6
0003BEF2 <AmiBlitz3.ab2@10561>    MOVE.l hunkoffsetcounter,d0
0003BEF4 <AmiBlitz3.ab2@10562>    ASL.l #2,d0
0003BEFA <AmiBlitz3.ab2@10563>    ADD.l #12,d0
0003BEFC <AmiBlitz3.ab2@10564>    MOVE.l d5,a1
0003BF00 <AmiBlitz3.ab2@10565>    JSR _FreeMem(a6)
0003BF06 <AmiBlitz3.ab2@10566>    MOVEA.l _dosbase,A6
0003BF08 <AmiBlitz3.ab2@10567>    MOVE.l (a7)+,d5
0003BF0C <AmiBlitz3.ab2@10568> BRA JL_0_7632
0003BF12 <AmiBlitz3.ab2@10572>   MOVEA.l hunkoffsetbase,A2
0003BF18 <AmiBlitz3.ab2@10573>   MOVE.l noinits,D4
0003BF1C <AmiBlitz3.ab2@10576>   CMPA.w #$0,A2                                            ;write hunkoffsets
0003BF20 <AmiBlitz3.ab2@10577>   BEQ.w JL_0_7632
0003BF24 <AmiBlitz3.ab2@10578>   LEA $4(A2),A1
0003BF26 <AmiBlitz3.ab2@10579>   SUB.l D4,(A1)
0003BF28 <AmiBlitz3.ab2@10580>   MOVE.l D7,D1
0003BF2A <AmiBlitz3.ab2@10581>   MOVE.l A1,D2
0003BF2C <AmiBlitz3.ab2@10582>   MOVEQ.l #$04,D3
0003BF30 <AmiBlitz3.ab2@10583>   BSR.w mywrite
0003BF34 <AmiBlitz3.ab2@10584>   ADD.l D4,$4(A2)
0003BF36 <AmiBlitz3.ab2@10585>   MOVEA.l (A2),A2
0003BF3A <AmiBlitz3.ab2@10586> BRA.w JL_0_7610
0003BF40 <AmiBlitz3.ab2@10589>   CLR.l tstsize3
0003BF42 <AmiBlitz3.ab2@10590>   MOVE.l D7,D1
0003BF48 <AmiBlitz3.ab2@10591>   MOVE.l #tstsize3,D2
0003BF4A <AmiBlitz3.ab2@10592>   MOVEQ.l #$04,D3
0003BF4E <AmiBlitz3.ab2@10593>    BSR.w mywrite
0003BF56 <AmiBlitz3.ab2@10596>   BTST #$7,link_debuginfo
0003BF5A <AmiBlitz3.ab2@10597>    BEQ.w JL_0_7706
0003BF60 <AmiBlitz3.ab2@10598>   MOVE.l #sysdebug,D2                                      ;debughunks
0003BF62 <AmiBlitz3.ab2@10599>   MOVEQ.l #$04,D3
0003BF64 <AmiBlitz3.ab2@10600>   MOVE.l D7,D1
0003BF68 <AmiBlitz3.ab2@10601>    BSR.w mywrite
0003BF6E <AmiBlitz3.ab2@10602>   MOVEA.l labelbase,A2
0003BF72 <AmiBlitz3.ab2@10605>   CMPA.w #$0,A2
0003BF76 <AmiBlitz3.ab2@10606>    BEQ.w JL_0_76F8
0003BF7C <AmiBlitz3.ab2@10607>   BTST #$0,$7(A2)
0003BF80 <AmiBlitz3.ab2@10608>    BEQ.w JL_0_7682
0003BF88 <AmiBlitz3.ab2@10609>   CMPI.l #$1,$4(A2)
0003BF8C <AmiBlitz3.ab2@10611>   BRA.w JL_0_76F2                                            ;only addr labels
0003BF8E <AmiBlitz3.ab2@10613>   MOVEQ.l #$00,D4
0003BF92 <AmiBlitz3.ab2@10614>   MOVE.b $12(A2),D4
0003BF96 <AmiBlitz3.ab2@10615>   SUBI.w #$13,D4
0003BF98 <AmiBlitz3.ab2@10616>   ADDQ.w #2,D4
0003BF9C <AmiBlitz3.ab2@10617>   ANDI.w #$FFFC,D4
0003BF9E <AmiBlitz3.ab2@10618>   MOVE.l D4,D5
0003BFA0 <AmiBlitz3.ab2@10619>   LSR.w #2,D5
0003BFA6 <AmiBlitz3.ab2@10620>   MOVE.l D5,temp1
0003BFA8 <AmiBlitz3.ab2@10621>   LSL.w #2,D5
0003BFAE <AmiBlitz3.ab2@10622>   MOVE.l #temp1,a1
0003BFB4 <AmiBlitz3.ab2@10624>   LEA debugstore,a0
0003BFB6 <AmiBlitz3.ab2@10625>   MOVE.l (a1),(a0)+
0003BFB8 <AmiBlitz3.ab2@10626>   MOVEQ.l #$04,D3
0003BFBC <AmiBlitz3.ab2@10629>   LEA $13(A2),A1
0003BFBE <AmiBlitz3.ab2@10630>   MOVE.l d4,d1
0003BFC0 <AmiBlitz3.ab2@10631>   SUBQ.l #1,d1
0003BFC2 <AmiBlitz3.ab2@10634>     MOVE.b (a1)+,d0
0003BFC6 <AmiBlitz3.ab2@10635>     BEQ 'l21
0003BFCA <AmiBlitz3.ab2@10636>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0003BFCE <AmiBlitz3.ab2@10637>     BNE 'ok
0003BFD2 <AmiBlitz3.ab2@10638>     MOVE.b #"_",d0
0003BFD4 <AmiBlitz3.ab2@10639> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
0003BFD8 <AmiBlitz3.ab2@10640>   DBF d1,'l10
0003BFDC <AmiBlitz3.ab2@10642> BRA 'l22
0003BFDE <AmiBlitz3.ab2@10645>       CLR.b (a0)+
0003BFE2 <AmiBlitz3.ab2@10646>   DBF d1,'l21
0003BFE4 <AmiBlitz3.ab2@10649>   ADD.l d4,d3
0003BFE6 <AmiBlitz3.ab2@10654>   SUB.l D4,D5
0003BFEA <AmiBlitz3.ab2@10655>    BEQ.w JL_0_76CE
0003BFF0 <AmiBlitz3.ab2@10656>   MOVE.l #zero,a1
0003BFF2 <AmiBlitz3.ab2@10658>   MOVE.l (a1),(a0)+
0003BFF4 <AmiBlitz3.ab2@10660>   ADD.l d5,d3
0003BFF8 <AmiBlitz3.ab2@10665>   MOVE.l $8(A2),D2
0003BFFE <AmiBlitz3.ab2@10666>   SUB.l destbufferstart,D2
0003C004 <AmiBlitz3.ab2@10667>   SUB.l noinits,D2
0003C00A <AmiBlitz3.ab2@10668>   MOVE.l D2,temp1
0003C010 <AmiBlitz3.ab2@10669>   MOVE.l #temp1,a1
0003C012 <AmiBlitz3.ab2@10671>   MOVE.l (a1),(a0)+
0003C018 <AmiBlitz3.ab2@10672>   ADD.l #4,d3
0003C01E <AmiBlitz3.ab2@10673>   LEA debugstore,a0
0003C020 <AmiBlitz3.ab2@10674>   MOVE.l a0,d2
0003C022 <AmiBlitz3.ab2@10676>   MOVE.l D7,D1
0003C026 <AmiBlitz3.ab2@10677>   BSR.w mywrite
0003C028 <AmiBlitz3.ab2@10680>   MOVEA.l (A2),A2
0003C02C <AmiBlitz3.ab2@10681> BRA.w JL_0_7664
0003C032 <AmiBlitz3.ab2@10685>   MOVE.l #zero,D2
0003C034 <AmiBlitz3.ab2@10686>   MOVEQ.l #$04,D3
0003C036 <AmiBlitz3.ab2@10687>   MOVE.l D7,D1
0003C03A <AmiBlitz3.ab2@10688>   BSR.w mywrite
0003C03C <AmiBlitz3.ab2@10691>   MOVE.l D7,D1
0003C042 <AmiBlitz3.ab2@10692>   MOVE.l #tstdone,D2                                      ;hunkend
0003C044 <AmiBlitz3.ab2@10693>   MOVEQ.l #$04,D3
0003C04E <AmiBlitz3.ab2@10694>   CMPI.l #-1,bssstart
0003C052 <AmiBlitz3.ab2@10695>   BEQ 'l10
0003C054 <AmiBlitz3.ab2@10696>   MOVEQ #16,d3
0003C05A <AmiBlitz3.ab2@10697>   MOVE.l #hunkend,d2
0003C064 <AmiBlitz3.ab2@10698>   CMPI.l #-1,chipstart
0003C068 <AmiBlitz3.ab2@10699>   BEQ 'l10
0003C06A <AmiBlitz3.ab2@10700>   MOVE.l d7,d1
0003C06C <AmiBlitz3.ab2@10701>   MOVEQ #12,d3
0003C070 <AmiBlitz3.ab2@10702>   BSR.w mywrite
0003C07A <AmiBlitz3.ab2@10705>   CMPI.l #-1,chipstart
0003C07E <AmiBlitz3.ab2@10706>   BEQ 'l11
0003C080 <AmiBlitz3.ab2@10707>   MOVEQ #12,d3
0003C086 <AmiBlitz3.ab2@10708>   MOVE.l #hunkend2,d2
0003C088 <AmiBlitz3.ab2@10709>   MOVE.l d7,d1
0003C08C <AmiBlitz3.ab2@10710>   BSR.w mywrite
0003C08E <AmiBlitz3.ab2@10711>   MOVE.l d7,d1
0003C094 <AmiBlitz3.ab2@10712>   MOVE.l chipstart,d2
0003C09A <AmiBlitz3.ab2@10713>   MOVE.l chipsize,d3
0003C09E <AmiBlitz3.ab2@10714>   BSR.w mywrite
0003C0A0 <AmiBlitz3.ab2@10715>   MOVEQ #4,d3
0003C0A6 <AmiBlitz3.ab2@10716>   MOVE.l #hunkend,d2
0003C0A8 <AmiBlitz3.ab2@10717>   MOVE.l d7,d1
0003C0AC <AmiBlitz3.ab2@10720>   BSR.w mywrite
0003C0AE <AmiBlitz3.ab2@10721>   MOVE.l D7,D1
0003C0B4 <AmiBlitz3.ab2@10722>   MOVEA.l _dosbase,A6
0003C0B8 <AmiBlitz3.ab2@10723>   JSR _Close(A6)
0003C0C0 <AmiBlitz3.ab2@10728>   BTST #$7,create_iconfile
0003C0C4 <AmiBlitz3.ab2@10729>    BEQ.w skip_createicon
0003C0CA <AmiBlitz3.ab2@10731>   MOVEA.l ptr_newexefilename,A0
0003C0CC <AmiBlitz3.ab2@10734>     TST.b (A0)+
0003C0D0 <AmiBlitz3.ab2@10735>   BNE.w JL_0_772C
0003C0D2 <AmiBlitz3.ab2@10736>   SUBQ.w #1,A0
0003C0D4 <AmiBlitz3.ab2@10737>   MOVE.l A0,-(A7)
0003C0DA <AmiBlitz3.ab2@10738>   LEA str_infoextention2,A1
0003C0DC <AmiBlitz3.ab2@10741>     MOVE.b (A1)+,(A0)+
0003C0E0 <AmiBlitz3.ab2@10742>   BNE.w JL_0_773A
0003C0E6 <AmiBlitz3.ab2@10744>   MOVE.l ptr_newexefilename,D1
0003C0E8 <AmiBlitz3.ab2@10745>   MOVEQ.l #-$02,D2
0003C0EE <AmiBlitz3.ab2@10746>   MOVEA.l _dosbase,A6
0003C0F2 <AmiBlitz3.ab2@10747>   JSR _Lock(A6)
0003C0F4 <AmiBlitz3.ab2@10748>   MOVE.l D0,D1
0003C0F8 <AmiBlitz3.ab2@10749>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0003C0FC <AmiBlitz3.ab2@10750>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0003C100 <AmiBlitz3.ab2@10751> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
0003C106 <AmiBlitz3.ab2@10754>   MOVE.l ptr_newexefilename,D1
0003C10C <AmiBlitz3.ab2@10755>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0003C112 <AmiBlitz3.ab2@10756>   MOVEA.l _dosbase,A6
0003C116 <AmiBlitz3.ab2@10757>    JSR _Open(A6)
0003C118 <AmiBlitz3.ab2@10758>   MOVE.l D0,D7
0003C11C <AmiBlitz3.ab2@10759>    BEQ.w JL_0_7788
0003C122 <AmiBlitz3.ab2@10760>   MOVE.l #icongfx_data,D2                                  ; icon graphics
0003C128 <AmiBlitz3.ab2@10761>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0003C12A <AmiBlitz3.ab2@10762>   MOVE.l D7,D1
0003C130 <AmiBlitz3.ab2@10763>   MOVEA.l _dosbase,A6
0003C134 <AmiBlitz3.ab2@10764>   JSR _Write(A6)
0003C136 <AmiBlitz3.ab2@10765>   MOVE.l D7,D1
0003C13A <AmiBlitz3.ab2@10766>   JSR _Close(A6)
0003C13C <AmiBlitz3.ab2@10769>   MOVEA.l (A7)+,A0
0003C13E <AmiBlitz3.ab2@10770>   CLR.b (A0)
0003C144 <AmiBlitz3.ab2@10775>   TST.b exdebug
0003C148 <AmiBlitz3.ab2@10776>    BEQ JL_0_757Cb
0003C14E <AmiBlitz3.ab2@10777>   MOVE.w dontwrite,D1
0003C152 <AmiBlitz3.ab2@10778>   BNE.w JL_0_757Cb
0003C158 <AmiBlitz3.ab2@10779>   MOVE.l chipsize,d5
0003C15E <AmiBlitz3.ab2@10780>   MOVE.l bsssize,d3
0003C164 <AmiBlitz3.ab2@10781>   MOVE.l chipstart,d7
0003C16A <AmiBlitz3.ab2@10782>   MOVE.l bssstart,d6
0003C170 <AmiBlitz3.ab2@10783>   MOVEA.l hunkoffsetbase,A2
0003C176 <AmiBlitz3.ab2@10784>   MOVEA.l destbufferstart,A1
0003C178 <AmiBlitz3.ab2@10785>   MOVE.l A1,D2
0003C17E <AmiBlitz3.ab2@10786>   ADD.l noinits,D2
0003C184 <AmiBlitz3.ab2@10787>   CLR.l hunkoffsetnum
0003C188 <AmiBlitz3.ab2@10790>   CMPA.w #$0,A2
0003C18C <AmiBlitz3.ab2@10791>    BEQ.w JL_0_757Cb
0003C190 <AmiBlitz3.ab2@10792>   MOVE.l $4(A2),D0
0003C194 <AmiBlitz3.ab2@10793>    LEA $0(a1,d0.l),a0
0003C196 <AmiBlitz3.ab2@10794>    MOVE.l (a0),d1
0003C198 <AmiBlitz3.ab2@10795>   TST.l d1
0003C19C <AmiBlitz3.ab2@10796>    BMI.w 'lm1
0003C1A4 <AmiBlitz3.ab2@10797>   MOVE.b #0,newhunk
0003C1AE <AmiBlitz3.ab2@10798>   CMP.l #-1,chipstart
0003C1B2 <AmiBlitz3.ab2@10799>   BEQ 'l10
0003C1B8 <AmiBlitz3.ab2@10800>   CMP.l chipstart,d1
0003C1BC <AmiBlitz3.ab2@10801>   BLT 'l10
0003C1C4 <AmiBlitz3.ab2@10802>   MOVE.b #1,newhunk
0003C1CA <AmiBlitz3.ab2@10803>   CMP.l chipend,d1
0003C1CE <AmiBlitz3.ab2@10804>   BGE 'l110
0003C1D0 <AmiBlitz3.ab2@10805>   ADD.l d7,(a0)
0003C1D8 <AmiBlitz3.ab2@10806>   ADD.l #$80000000,4(a2)
0003C1DC <AmiBlitz3.ab2@10807> BRA JL_0_7576b
0003C1E0 <AmiBlitz3.ab2@10810>   ADD.l d5,0(a0)
0003C1EA <AmiBlitz3.ab2@10813>   CMP.l #-1,bssstart
0003C1EE <AmiBlitz3.ab2@10814>     BEQ 'l11
0003C1F4 <AmiBlitz3.ab2@10815>   CMP.l bssstart,d1
0003C1F8 <AmiBlitz3.ab2@10816>   BLT 'l11
0003C1FE <AmiBlitz3.ab2@10817>   CMP.l bssend,d1
0003C202 <AmiBlitz3.ab2@10818>   BGE 'l111
0003C208 <AmiBlitz3.ab2@10819>   TST.b newhunk
0003C20C <AmiBlitz3.ab2@10820>   BEQ 'ln1
0003C20E <AmiBlitz3.ab2@10821>   ADD.l d5,(a0)
0003C210 <AmiBlitz3.ab2@10824>   ADD.l d6,(a0)
0003C218 <AmiBlitz3.ab2@10825>   ADD.l #$40000000,4(a2)
0003C21C <AmiBlitz3.ab2@10826> BRA JL_0_7576b
0003C220 <AmiBlitz3.ab2@10829>   ADD.l d3,0(a0)
0003C222 <AmiBlitz3.ab2@10832>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0003C228 <AmiBlitz3.ab2@10835>   ADDQ.l #1,hunkoffsetnum
0003C22A <AmiBlitz3.ab2@10838>   MOVEA.l (A2),A2
0003C22E <AmiBlitz3.ab2@10839> BRA.w JL_0_755Eb
0003C234 <AmiBlitz3.ab2@10842>   JSR call_setpointernormal
0003C238 <AmiBlitz3.ab2@10843>   MOVEM.l (a7)+,d2-d7/a2-a6
0003C23A <AmiBlitz3.ab2@10845> RTS
0003C23C <AmiBlitz3.ab2@10849>   MOVE.l D2,-(A7)
0003C242 <AmiBlitz3.ab2@10850>   MOVE.l destpointer,D2
0003C248 <AmiBlitz3.ab2@10851>   SUB.l destbufferstart,D2
0003C24C <AmiBlitz3.ab2@10852>   BSR.w addhunkoffset
0003C24E <AmiBlitz3.ab2@10853>   MOVE.l (A7)+,D2
0003C250 <AmiBlitz3.ab2@10854> RTS
0003C254 <AmiBlitz3.ab2@10858>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0003C25A <AmiBlitz3.ab2@10859>   TST.b nohunkoffset
0003C25E <AmiBlitz3.ab2@10860>   BNE 'l10
0003C260 <AmiBlitz3.ab2@10861>   MOVEQ.l #$8,D0
0003C262 <AmiBlitz3.ab2@10862>   MOVEQ.l #$01,D1
0003C268 <AmiBlitz3.ab2@10863>   MOVEA.l _execbase,A6
0003C26E <AmiBlitz3.ab2@10864>   MOVE.l mempool2,a0
0003C272 <AmiBlitz3.ab2@10865>   JSR _AllocPooled(a6)
0003C278 <AmiBlitz3.ab2@10867>   ADDQ.l #1,hunkoffsetcounter
0003C27A <AmiBlitz3.ab2@10868>   MOVEA.l D0,A0
0003C280 <AmiBlitz3.ab2@10869>   MOVE.l hunkoffsetbase,(A0)
0003C286 <AmiBlitz3.ab2@10870>   MOVE.l A0,hunkoffsetbase
0003C28A <AmiBlitz3.ab2@10871>   MOVE.l D2,$4(A0)
0003C28E <AmiBlitz3.ab2@10874>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0003C290 <AmiBlitz3.ab2@10875> RTS
0003C296 <AmiBlitz3.ab2@10879>   CLR.l hunkoffsetbase
0003C29C <AmiBlitz3.ab2@10880>   MOVEA.l _execbase,A6
0003C2A2 <AmiBlitz3.ab2@10881>   MOVEA.l hunkoffsetbase,A2
0003C2A6 <AmiBlitz3.ab2@10884>     CMPA.w #$0,A2
0003C2AA <AmiBlitz3.ab2@10885>      BEQ.w JL_0_7988
0003C2AC <AmiBlitz3.ab2@10886>     MOVEA.l A2,A1
0003C2AE <AmiBlitz3.ab2@10887>     MOVEQ.l #$08,D0
0003C2B0 <AmiBlitz3.ab2@10888>     MOVEA.l (A2),A2
0003C2B6 <AmiBlitz3.ab2@10889>     MOVE.l mempool2,a0
0003C2BA <AmiBlitz3.ab2@10890>     JSR _FreePooled(A6)
0003C2BE <AmiBlitz3.ab2@10891> BRA.w JL_0_7972
0003C2C4 <AmiBlitz3.ab2@10894>   CLR.l hunkoffsetcounter
0003C2C6 <AmiBlitz3.ab2@10895> RTS
0003C2DE <AmiBlitz3.ab2@10898> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
0003C2E2 <AmiBlitz3.ab2@10899> cmakea5:    Ds.l 1
0003C2E4 <AmiBlitz3.ab2@10900> cmake:      Ds.w 1
0003C364 <AmiBlitz3.ab2@10901> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
0003C36A <AmiBlitz3.ab2@10905>   MOVE.l A5,lastsourcepos
0003C374 <AmiBlitz3.ab2@10906>   MOVE.w instringon,oldqflag
0003C376 <AmiBlitz3.ab2@10910>   MOVEQ.l #$00,D0
0003C378 <AmiBlitz3.ab2@10911>   MOVE.b (A5)+,D0
0003C37C <AmiBlitz3.ab2@10912>    BEQ getcharb__donea
0003C380 <AmiBlitz3.ab2@10913>   BPL getcharb__stuffa
0003C382 <AmiBlitz3.ab2@10914>   LSL.l #8,D0
0003C384 <AmiBlitz3.ab2@10915>   MOVE.b (A5)+,D0
0003C386 <AmiBlitz3.ab2@10916>   MOVE.l a1,-(a7)
0003C38C <AmiBlitz3.ab2@10917>   LEA replacedat,a1
0003C390 <AmiBlitz3.ab2@10918>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0003C394 <AmiBlitz3.ab2@10919>   BEQ getchar__l10
0003C398 <AmiBlitz3.ab2@10920>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0003C39A <AmiBlitz3.ab2@10924>   MOVE.l (a7)+,a1
0003C39E <AmiBlitz3.ab2@10925> BRA getchar__weiter
0003C3A2 <AmiBlitz3.ab2@10928>   CMP.w #$22,D0
0003C3A6 <AmiBlitz3.ab2@10929>    BEQ.b swapquotea
0003C3AA <AmiBlitz3.ab2@10930>   CMP.w #$3B,D0
0003C3AE <AmiBlitz3.ab2@10931>    BNE.b getcharb__donea
0003C3B4 <AmiBlitz3.ab2@10932>   TST.w instringon
0003C3B8 <AmiBlitz3.ab2@10933>    BNE.b getcharb__donea
0003C3BA <AmiBlitz3.ab2@10936>   MOVE.b (A5)+,D0
0003C3BE <AmiBlitz3.ab2@10937>              BEQ getchar__l1
0003C3C2 <AmiBlitz3.ab2@10938>              CMP.b #":",d0
0003C3C6 <AmiBlitz3.ab2@10939>              BNE getcharb__loopa                                ;:@
0003C3CA <AmiBlitz3.ab2@10940>              CMP.b #"@",(a5)
0003C3CE <AmiBlitz3.ab2@10941>              BNE getcharb__loopa
0003C3D0 <AmiBlitz3.ab2@10942>              ADDQ #1,a5
0003C3D6 <AmiBlitz3.ab2@10945>   MOVE.w D0,lastchar
0003C3DA <AmiBlitz3.ab2@10948> BRA.s getchar__weiter
0003C3E0 <AmiBlitz3.ab2@10951>   NOT.w instringon
0003C3E6 <AmiBlitz3.ab2@10954>    MOVE.w D0,lastchar
0003C3EA <AmiBlitz3.ab2@10955>    BEQ.w getchar__done
0003C3EE <AmiBlitz3.ab2@10956>    BPL.w getchar__done2
0003C3F2 <AmiBlitz3.ab2@10957>   CMP.w #-$7FE4,D0                                         ;cnif
0003C3F6 <AmiBlitz3.ab2@10958>    BEQ.w getchar__cnif
0003C3FA <AmiBlitz3.ab2@10959>   CMP.w #-$7FE3,D0                                         ;csif
0003C3FE <AmiBlitz3.ab2@10960>    BEQ.w getchar__csif
0003C402 <AmiBlitz3.ab2@10961>   CMP.w #-$7FE2,D0                                         ;celse
0003C406 <AmiBlitz3.ab2@10962>    BEQ.w getchar__celse
0003C40A <AmiBlitz3.ab2@10963>   CMP.w #-$7FE1,D0                                         ;cend
0003C40E <AmiBlitz3.ab2@10964>    BEQ.w getchar__cend
0003C414 <AmiBlitz3.ab2@10967>   TST.w skipcode
0003C418 <AmiBlitz3.ab2@10968>    BEQ.w getchar
0003C41C <AmiBlitz3.ab2@10969>   CMP.w #$7E,D0
0003C420 <AmiBlitz3.ab2@10970>    BEQ.w getchar__cmake                                         ;tilde
0003C424 <AmiBlitz3.ab2@10971>   CMP.w #$2,D0
0003C428 <AmiBlitz3.ab2@10972>    BNE.w getchar__notunpath
0003C42E <AmiBlitz3.ab2@10973>   MOVEA.l usedfrom,A5
0003C434 <AmiBlitz3.ab2@10974>   CLR.l usedfrom
0003C438 <AmiBlitz3.ab2@10975> BRA.w getchar
0003C43C <AmiBlitz3.ab2@10978>   CMP.w #$1,D0
0003C440 <AmiBlitz3.ab2@10979>    BNE.w getchar__done
0003C444 <AmiBlitz3.ab2@10983>   MOVEA.l cmakea5(PC),A5
0003C448 <AmiBlitz3.ab2@10984> BRA.w getchar
0003C44E <AmiBlitz3.ab2@10987>   TST.w cmake
0003C452 <AmiBlitz3.ab2@10988>    BNE.w getchar__done
0003C456 <AmiBlitz3.ab2@10990>   MOVEM.l D0-D7/A0-A6,-(A7)
0003C45C <AmiBlitz3.ab2@10991>   LEA cmake,a0                                         ;reass
0003C45E <AmiBlitz3.ab2@10992>   NOT.w (a0)
0003C462 <AmiBlitz3.ab2@10993>   LEA cmakebak(PC),A0
0003C468 <AmiBlitz3.ab2@10994>   LEA ptr_parameterstore,A1
0003C46A <AmiBlitz3.ab2@10995>   MOVEQ.l #$1F,D0
0003C46C <AmiBlitz3.ab2@10998>     MOVE.l (A1)+,(A0)+
0003C470 <AmiBlitz3.ab2@10999>   DBF D0,getchar__cmloop
0003C476 <AmiBlitz3.ab2@11002>    JSR AJL_0_BF6E
0003C47A <AmiBlitz3.ab2@11003>   CMP.w #$7E,D0
0003C47E <AmiBlitz3.ab2@11004>    BNE.w syntaxerr
0003C484 <AmiBlitz3.ab2@11005>   MOVE.l A5,cmakea5                                      ;tilde
0003C488 <AmiBlitz3.ab2@11006>   LEA cmakebuff(PC),A0
0003C48A <AmiBlitz3.ab2@11007>   MOVE.l D3,D2
0003C48E <AmiBlitz3.ab2@11008>   BSR.w makelong
0003C490 <AmiBlitz3.ab2@11009>   ADDQ.b #1,(A0)
0003C496 <AmiBlitz3.ab2@11010>   LEA cmake,a0
0003C498 <AmiBlitz3.ab2@11011>   NOT.w (a0)                                               ;reass
0003C49C <AmiBlitz3.ab2@11012>   LEA cmakebak(PC),A0
0003C4A2 <AmiBlitz3.ab2@11013>   LEA ptr_parameterstore,A1
0003C4A4 <AmiBlitz3.ab2@11014>   MOVEQ.l #$1F,D0
0003C4A6 <AmiBlitz3.ab2@11017>     MOVE.l (A0)+,(A1)+
0003C4AA <AmiBlitz3.ab2@11018>   DBF D0,getchar__cmloop2
0003C4AE <AmiBlitz3.ab2@11020>   MOVEM.l (A7)+,D0-D7/A0-A6
0003C4B2 <AmiBlitz3.ab2@11021>   LEA cmakebuff(PC),A5
0003C4B6 <AmiBlitz3.ab2@11022> BRA.w getchar
0003C4B8 <AmiBlitz3.ab2@11025> RTS
0003C4C2 <AmiBlitz3.ab2@11029>   MOVE.l linenumat,ciflineat                               ;csif
0003C4C8 <AmiBlitz3.ab2@11030>   TST.w skipcode
0003C4CC <AmiBlitz3.ab2@11031>    BEQ.w getchar__incnest
0003C4D0 <AmiBlitz3.ab2@11032>    BSR.w get1bytemain
0003C4D2 <AmiBlitz3.ab2@11033>    MOVE.l a1,-(a7)
0003C4D8 <AmiBlitz3.ab2@11034>    JSR JL_0_C492
0003C4DA <AmiBlitz3.ab2@11035>    MOVE.l (a7)+,a1
0003C4DE <AmiBlitz3.ab2@11036> BRA.w getchar
0003C4E8 <AmiBlitz3.ab2@11039>   MOVE.l linenumat,ciflineat                               ;cnif
0003C4EE <AmiBlitz3.ab2@11040>   TST.w skipcode
0003C4F2 <AmiBlitz3.ab2@11041>    BEQ.w getchar__incnest
0003C4F6 <AmiBlitz3.ab2@11042>    BSR.w get1bytemain
0003C4FA <AmiBlitz3.ab2@11043>    CMP.b #"@",d0
0003C4FE <AmiBlitz3.ab2@11044>    BNE getchar__cnif_ok2
0003C502 <AmiBlitz3.ab2@11045>    BSR.w get1bytemain
0003C50A <AmiBlitz3.ab2@11046>    MOVE.b #1,incnif
0003C510 <AmiBlitz3.ab2@11047>    JSR findconstant2
0003C514 <AmiBlitz3.ab2@11048>    BEQ getchar__cnif_ok2
0003C51A <AmiBlitz3.ab2@11051>    MOVE.w fast,-(a7)
0003C520 <AmiBlitz3.ab2@11052>    CLR.b fast
0003C522 <AmiBlitz3.ab2@11053>    MOVE.l a1,-(a7)
0003C528 <AmiBlitz3.ab2@11054>    JSR JL_0_C47E
0003C52E <AmiBlitz3.ab2@11055>    CLR.b incnif
0003C530 <AmiBlitz3.ab2@11056>    MOVE.l (a7)+,a1
0003C536 <AmiBlitz3.ab2@11057>    MOVE.w (a7)+,fast
0003C53A <AmiBlitz3.ab2@11058> BRA.w getchar
0003C540 <AmiBlitz3.ab2@11061>   ADDQ.w #1,connest
0003C544 <AmiBlitz3.ab2@11062> BRA.w getchar
0003C54A <AmiBlitz3.ab2@11065>   MOVE.w connest,D0                                      ;celse
0003C54E <AmiBlitz3.ab2@11066>    BNE.w getchar
0003C554 <AmiBlitz3.ab2@11067>   NOT.w skipcode
0003C558 <AmiBlitz3.ab2@11068> BRA.w getchar
0003C55E <AmiBlitz3.ab2@11071>   SUBQ.w #1,connest                                      ;cend
0003C562 <AmiBlitz3.ab2@11072>    BPL.w getchar
0003C568 <AmiBlitz3.ab2@11073>   ADDQ.w #1,connest
0003C56E <AmiBlitz3.ab2@11074>   MOVEA.l concomsp,A0
0003C574 <AmiBlitz3.ab2@11075>   CMPA.l #concomstack,A0
0003C578 <AmiBlitz3.ab2@11076>    BEQ.w nociferr
0003C57A <AmiBlitz3.ab2@11077>   SUBQ.w #2,A0
0003C580 <AmiBlitz3.ab2@11078>   MOVE.l A0,concomsp
0003C586 <AmiBlitz3.ab2@11079>   MOVE.w (A0),skipcode
0003C58A <AmiBlitz3.ab2@11080> BRA.w getchar
0003C58E <AmiBlitz3.ab2@11083> ciflineat:   Ds.l 1
0003C590 <AmiBlitz3.ab2@11091>   MOVEQ.l #$00,D0
0003C592 <AmiBlitz3.ab2@11092>   MOVE.b (A5)+,D0
0003C596 <AmiBlitz3.ab2@11093>    BEQ.b getcharb__done
0003C59A <AmiBlitz3.ab2@11094>    BPL.b getcharb__stuff
0003C59C <AmiBlitz3.ab2@11095>   LSL.w #8,D0
0003C59E <AmiBlitz3.ab2@11096>   MOVE.b (A5)+,D0
0003C5A0 <AmiBlitz3.ab2@11097> RTS
0003C5A4 <AmiBlitz3.ab2@11100>   CMP.w #$22,D0
0003C5A8 <AmiBlitz3.ab2@11101>    BEQ.b swapquote
0003C5AC <AmiBlitz3.ab2@11102>   CMP.w #$3B,D0
0003C5B0 <AmiBlitz3.ab2@11103>    BNE.b getcharb__done
0003C5B6 <AmiBlitz3.ab2@11104>   TST.w instringon
0003C5BA <AmiBlitz3.ab2@11105>    BNE.b getcharb__done
0003C5BC <AmiBlitz3.ab2@11108>   MOVE.b (A5)+,D0
0003C5C0 <AmiBlitz3.ab2@11109>             BEQ getcharb__loop_l1
0003C5C4 <AmiBlitz3.ab2@11110>             CMP.b #":",d0
0003C5C8 <AmiBlitz3.ab2@11111>             BNE getcharb__loop
0003C5CC <AmiBlitz3.ab2@11112>             CMP.b #"@",(a5)
0003C5D0 <AmiBlitz3.ab2@11113>             BNE getcharb__loop
0003C5D6 <AmiBlitz3.ab2@11116>   MOVE.w D0,lastchar
0003C5D8 <AmiBlitz3.ab2@11119> RTS
0003C5DE <AmiBlitz3.ab2@11122>   NOT.w instringon
0003C5E0 <AmiBlitz3.ab2@11123> RTS
0003C5E4 <AmiBlitz3.ab2@11127>   BSR.w getchar
0003C5EA <AmiBlitz3.ab2@11128>   TST.w instringon
0003C5EE <AmiBlitz3.ab2@11129>    BNE.w get1byte__skip
0003C5F2 <AmiBlitz3.ab2@11130>   CMP.w #$20,D0
0003C5F6 <AmiBlitz3.ab2@11131>    BEQ.w get1byte_
0003C5F8 <AmiBlitz3.ab2@11134> RTS
0003C612 <AmiBlitz3.ab2@11137> gs:        Ds.w 13                                         ;ds.b 26  org source
0003C616 <AmiBlitz3.ab2@11138>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0003C618 <AmiBlitz3.ab2@11139>            Dc.b $C4,$DC
0003C61C <AmiBlitz3.ab2@11145>   BSR.w getchar
0003C622 <AmiBlitz3.ab2@11146>   TST.w instringon
0003C626 <AmiBlitz3.ab2@11147>    BNE.w gchar2
0003C62A <AmiBlitz3.ab2@11148>   CMP.w #$20,D0
0003C62E <AmiBlitz3.ab2@11149>    BEQ.w get1bytemain
0003C630 <AmiBlitz3.ab2@11151>   TST.w D0
0003C634 <AmiBlitz3.ab2@11154>   BEQ.b get1bytemain__zero
0003C63A <AmiBlitz3.ab2@11155>   TST.w instringon
0003C63E <AmiBlitz3.ab2@11156>    BEQ.b get1bytemain__noqoute
0003C642 <AmiBlitz3.ab2@11157>   CMP.b #$20,D0
0003C646 <AmiBlitz3.ab2@11158>    BCC.b get1bytemain__skip
0003C64A <AmiBlitz3.ab2@11159>   MOVE.b gs(PC,D0.W),D0
0003C64C <AmiBlitz3.ab2@11160> RTS
0003C650 <AmiBlitz3.ab2@11163>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0003C654 <AmiBlitz3.ab2@11164>    BEQ.b get1bytemain__zero
0003C658 <AmiBlitz3.ab2@11165>   CMP.w #$3A,D0
0003C65C <AmiBlitz3.ab2@11166>    BEQ.b get1bytemain__zero
0003C65E <AmiBlitz3.ab2@11169>   TST.w D0
0003C660 <AmiBlitz3.ab2@11172> RTS
0003C666 <AmiBlitz3.ab2@11176>   MOVE.w lastchar,D0
0003C66A <AmiBlitz3.ab2@11177> BRA.w gchar2
0003C674 <AmiBlitz3.ab2@11181>   MOVE.w oldqflag,instringon
0003C67A <AmiBlitz3.ab2@11182>   MOVEA.l lastsourcepos,A5
0003C67C <AmiBlitz3.ab2@11183> RTS
0003C682 <AmiBlitz3.ab2@11187>   MOVE.w D0,locchar
0003C688 <AmiBlitz3.ab2@11188>   MOVE.l A5,locloc
0003C68A <AmiBlitz3.ab2@11189> RTS
0003C690 <AmiBlitz3.ab2@11193>   MOVEA.l locloc,A5
0003C696 <AmiBlitz3.ab2@11194>   MOVE.w locchar,D0
0003C69C <AmiBlitz3.ab2@11195>   MOVE.w D0,lastchar
0003C69E <AmiBlitz3.ab2@11196> RTS
0003C69E <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
0003C6E6 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
0003C738 <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
0003C776 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
0003C7B4 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
0003C7DE <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
0003C80E <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
0003C858 <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
0003C8DE <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
0003C940 <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
0003C988 <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
0003C9DA <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
0003CA24 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
0003CA72 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
0003CAA8 <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
0003CAD6 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
0003CAF0 <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
0003CB0E <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
0003CB8C <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
0003CBB6 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
0003CBDC <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
0003CBFC <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
0003CC1A <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
0003CC3A <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
0003CC62 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
0003CC8C <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
0003CC8E <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
0003CCAA <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
0003CCD0 <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
0003CCE8 <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
0003CD46 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
0003CD68 <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
0003CD8E <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
0003CDB6 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
0003CDD6 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
0003CDFA <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
0003CE40 <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
0003CE64 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
0003CE88 <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
0003CEA8 <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
0003CECC <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
0003CEEE <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
0003CF1A <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
0003CF40 <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
0003CF4A <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
0003CF70 <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
0003CFC2 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
0003D02C <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
0003D08A <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
0003D0F8 <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
0003D134 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
0003D152 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
0003D178 <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
0003D1A8 <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
0003D1CC <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
0003D1FA <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
0003D21E <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
0003D234 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
0003D24A <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
0003D250 <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
0003D258 <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
0003D25A <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
0003D25E <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
0003D266 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
0003D268 <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
0003D2A2 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
0003D2CE <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
0003D2FE <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
0003D336 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
0003D390 <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
0003D392 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
0003D396 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
0003D39A <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
0003D39E <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
0003D3A2 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
0003D3A6 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
0003D3AA <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
0003D3AE <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
0003D3B2 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
0003D3B6 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
0003D3BA <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
0003D3F8 <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
0003D42A <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
0003D448 <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
0003D472 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
0003D48E <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
0003D4A8 <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
0003D4C6 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
0003D4EA <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
0003D4EC <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
0003D53E <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
0003D566 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
0003D58E <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
0003D5AA <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
0003D5CA <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
0003D5E2 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
0003D626 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
0003D66E <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
0003D698 <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
0003D6C2 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
0003D6DC <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
0003D706 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
0003D75A <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
0003D7A6 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
0003D7DE <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
0003D7E4 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
0003D7F2 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
0003D822 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
0003D856 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
0003D8BC <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
0003D8DA <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
0003D954 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
0003D97C <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
0003D992 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
0003D9A6 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
0003D9A8 <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
0003D9A9 <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
0003D9AA <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
0003D9CA <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
0003D9D0 <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
0003D9E2 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
0003DA16 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
0003DA2E <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
0003DA4A <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
0003DA62 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
0003DA82 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
0003DAA2 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
0003DAC8 <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
0003DADE <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
0003DAFA <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
0003DB24 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
0003DB3C <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
0003DB58 <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
0003DB78 <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
0003DB90 <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
0003DB94 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
0003DB9A <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
0003DBA0 <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
0003DBB5 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
0003DBBB <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
0003DBBC <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
0003DBC0 <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
0003DBC6 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
0003DBCC <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
0003DBDF <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
0003DBE5 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
0003DBE6 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
0003DC04 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
0003DC1C <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
0003DC38 <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
0003DC62 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
0003DC7C <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
0003DC9C <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
0003DCBA <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
0003DCE8 <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
0003DCF2 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
0003DD24 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
0003DD42 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
0003DD60 <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
0003DD80 <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
0003DDA6 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
0003DDCC <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
0003DDF4 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
0003DE12 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
0003DE32 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
0003DE4C <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
0003DE6E <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
0003DE8C <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
0003DEAE <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
0003DED2 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
0003DED8 <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
0003DEF4 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
0003DF10 <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
0003DF2E <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
0003DF4C <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
0003DF9A <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
0003DFB8 <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
0003DFD6 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
0003DFF0 <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
0003E03C <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
0003E062 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
0003E082 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
0003E0A4 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
0003E0C0 <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
0003E0E6 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
0003E102 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
0003E120 <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
0003E148 <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
0003E164 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
0003E174 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
0003E196 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
0003E19A <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
0003E19C <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
0003E1B6 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
0003E1DA <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
0003E1FA <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
0003E22C <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
0003E28A <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
0003E2C2 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
0003E300 <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
0003E336 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
0003E368 <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
0003E38C <internal_errormsg.ab2@265> XINCLUDE "internal_errormsg.ab2"
0003E3B0 <internal_errormsg.ab2@266> XINCLUDE "internal_errormsg.ab2"
0003E3FA <internal_errormsg.ab2@267> XINCLUDE "internal_errormsg.ab2"
0003E422 <internal_errormsg.ab2@268> XINCLUDE "internal_errormsg.ab2"
0003E46C <internal_errormsg.ab2@269> XINCLUDE "internal_errormsg.ab2"
0003E4AC <internal_errormsg.ab2@270> XINCLUDE "internal_errormsg.ab2"
0003E4AC <AmiBlitz3.ab2@11200> XINCLUDE "internal_errormsg.ab2"
0003E4AE <AmiBlitz3.ab2@11204> ezerr:   Ds.w 1                                            ;for simple errors
0003E4B4 <AmiBlitz3.ab2@11210>    MOVE.l myline,d0
0003E4B8 <AmiBlitz3.ab2@11211>   BNE handle_compileerror__l2
0003E4BE <AmiBlitz3.ab2@11213>     MOVE.l a5,lastsourcepos
0003E4C0 <AmiBlitz3.ab2@11215>     SUBA.l a5,a5
0003E4C6 <AmiBlitz3.ab2@11217>   TST.l usedfrom
0003E4CA <AmiBlitz3.ab2@11218>   BEQ handle_compileerror__org
0003E4D0 <AmiBlitz3.ab2@11219>     MOVEA.l usedfrom,a5
0003E4D6 <AmiBlitz3.ab2@11222>   TST.w dirmode
0003E4DA <AmiBlitz3.ab2@11223>   BNE.b handle_compileerror__quiet
0003E4E0 <AmiBlitz3.ab2@11224>     JSR call_setpointernormal
0003E4E4 <AmiBlitz3.ab2@11225>     MOVE.w ezerr(PC),D0
0003E4E8 <AmiBlitz3.ab2@11226>     BNE.w handle_compileerror__skip
0003E4EE <AmiBlitz3.ab2@11227>       MOVE.w cfetchmode,D0
0003E4F2 <AmiBlitz3.ab2@11228>       BEQ.w handle_compileerror__skip2
0003E4FC <AmiBlitz3.ab2@11229>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0003E502 <AmiBlitz3.ab2@11232>   MOVE.w constmode,D0
0003E506 <AmiBlitz3.ab2@11233>   BEQ.b handle_compileerror__skip3
0003E50A <AmiBlitz3.ab2@11234>     BSR.w asmerr2
0003E510 <AmiBlitz3.ab2@11237>   MOVE.l firstlocal,D1
0003E516 <AmiBlitz3.ab2@11238>   OR.l firstglob,D1
0003E51A <AmiBlitz3.ab2@11239>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0003E520 <AmiBlitz3.ab2@11240>     JSR JL_0_DB5C
0003E528 <AmiBlitz3.ab2@11243>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0003E532 <AmiBlitz3.ab2@11244>   CMP.l #"NORE",reqmode                                    ;for used functions
0003E536 <AmiBlitz3.ab2@11245>   BEQ handle_compileerror__notproc_l1
0003E540 <AmiBlitz3.ab2@11246>     MOVE.l linenumat,compilelinecounter
0003E546 <AmiBlitz3.ab2@11249>   JSR close_compilewin
0003E548 <AmiBlitz3.ab2@11252>   MOVEA.l (A7)+,A0
0003E552 <AmiBlitz3.ab2@11253>   CMP.l #maxerrorcount,errorcounter
0003E556 <AmiBlitz3.ab2@11254>   BLT 'lesserror
0003E55C <AmiBlitz3.ab2@11255>   LEA errorlimit_text,a0
0003E562 <AmiBlitz3.ab2@11257>   ADDQ.l #1,errorcounter
0003E568 <AmiBlitz3.ab2@11258>   JSR errorstringparse
0003E572 <AmiBlitz3.ab2@11259>   CMP.l #"NORE",reqmode                                    ;for used functions
0003E576 <AmiBlitz3.ab2@11260>   BEQ handle_compileerror__skip_Lxx2
0003E57C <AmiBlitz3.ab2@11261>   TST.l CLIMode
0003E580 <AmiBlitz3.ab2@11262>   BNE 'climode_output
0003E586 <AmiBlitz3.ab2@11264>     JSR save_errorfile
0003E58A <AmiBlitz3.ab2@11265>     BRA 'end_output
0003E590 <AmiBlitz3.ab2@11267>     JSR stdout_error
0003E59A <AmiBlitz3.ab2@11269>      CMP.l #maxerrorcount,errorcounter
0003E59E <AmiBlitz3.ab2@11270>      BGT 'end_output
0003E5A4 <AmiBlitz3.ab2@11271>     MOVE.l lastsourcepos,a5
0003E5A6 <AmiBlitz3.ab2@11272> 'loop TST.b (a5)
0003E5AA <AmiBlitz3.ab2@11273>       BEQ 'ok2
0003E5AC <AmiBlitz3.ab2@11274>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0003E5B0 <AmiBlitz3.ab2@11275>     BEQ 'ok
0003E5B4 <AmiBlitz3.ab2@11276>     CMP.b #":",d0
0003E5B8 <AmiBlitz3.ab2@11277>     BEQ 'ok
0003E5BC <AmiBlitz3.ab2@11278>     BRA 'loop
0003E5BE <AmiBlitz3.ab2@11279> 'ok SUBQ.l #1,a5
0003E5C6 <AmiBlitz3.ab2@11280> 'ok2 MOVE.w #0,lastchar
0003E5CE <AmiBlitz3.ab2@11281>     MOVE.b #1,iserror
0003E5D4 <AmiBlitz3.ab2@11282>     MOVE.l stackaddr,a7
0003E5D6 <AmiBlitz3.ab2@11283>     RTS
0003E5D8 <AmiBlitz3.ab2@11289>   MOVE.l A0,-(a7)
0003E616 <AmiBlitz3.ab2@11290>   !ComData_GetL{comFunc_ErrorRequest,A1}
0003E618 <AmiBlitz3.ab2@11291>   MOVE.l (a7)+,A0
0003E61C <AmiBlitz3.ab2@11293>   MOVEM.l d6/D7/A6,-(A7)
0003E622 <AmiBlitz3.ab2@11294>   MOVE.l includeline,d7
0003E628 <AmiBlitz3.ab2@11295>   MOVE.l #"INLN",a6
0003E632 <AmiBlitz3.ab2@11296>   MOVE.l errstack,tempa7
0003E634 <AmiBlitz3.ab2@11297>   JSR (A1)
0003E638 <AmiBlitz3.ab2@11299>   MOVEM.l (A7)+,D7/d6/A6
0003E63E <AmiBlitz3.ab2@11302>   MOVE.l tempa7,a7
0003E644 <AmiBlitz3.ab2@11303>   MOVEA.l errcont,A0
0003E646 <AmiBlitz3.ab2@11305> RTS
0003E64C <AmiBlitz3.ab2@11308>   MOVEA.l errstack,A7
0003E652 <AmiBlitz3.ab2@11309>   MOVEA.l errcont,A0
0003E654 <AmiBlitz3.ab2@11311> RTS
0003E656 <AmiBlitz3.ab2@11314>   MOVE.l (A7),D0
0003E65C <AmiBlitz3.ab2@11315>   MOVEA.l errstack,A7
0003E662 <AmiBlitz3.ab2@11316>   MOVEA.l errcont,A0
0003E664 <AmiBlitz3.ab2@11317> JMP (A0)
0003E668 <AmiBlitz3.ab2@11323>   CMP.w #$7A,D0                                            ;'z'
0003E66C <AmiBlitz3.ab2@11324>    BHI.w tstalpha__no
0003E670 <AmiBlitz3.ab2@11325>   CMP.w #$41,D0                                            ;'A'
0003E674 <AmiBlitz3.ab2@11326>    BCS.w tstalpha__no
0003E678 <AmiBlitz3.ab2@11327>   CMP.w #$61,D0                                            ;'a'
0003E67C <AmiBlitz3.ab2@11328>    BCC.w tstalpha__yes
0003E680 <AmiBlitz3.ab2@11329>   CMP.w #$5A,D0                                            ;'Z'
0003E684 <AmiBlitz3.ab2@11330>    BHI.w tstalpha__no
0003E686 <AmiBlitz3.ab2@11333>   CMP.w D0,D0
0003E688 <AmiBlitz3.ab2@11336> RTS
0003E68C <AmiBlitz3.ab2@11344>   CMP.w #$30,D0                                            ;'0'
0003E690 <AmiBlitz3.ab2@11345>    BCS.w tstnum__skip
0003E694 <AmiBlitz3.ab2@11346>   CMP.w #$39,D0                                            ;'9'
0003E698 <AmiBlitz3.ab2@11347>    BHI.w tstnum__skip                                     
0003E69A <AmiBlitz3.ab2@11348>   CMP.w D0,D0
0003E69C <AmiBlitz3.ab2@11351> RTS
0003E6BE <AmiBlitz3.ab2@11357>   !compare1                                                ;bsr.w tstalpha
0003E6C2 <AmiBlitz3.ab2@11358>    BEQ.w tstlab__skip
0003E6D4 <AmiBlitz3.ab2@11359>   !compare2                                                ;bsr.w tstnum2
0003E6D8 <AmiBlitz3.ab2@11360>    BEQ.w tstlab__skip
0003E6DC <AmiBlitz3.ab2@11361>   CMP.w #$5F,D0                                            ;'_'
0003E6E0 <AmiBlitz3.ab2@11362>    BEQ.w tstlab__skip
0003E6E4 <AmiBlitz3.ab2@11363>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0003E6E6 <AmiBlitz3.ab2@11366> RTS
0003E6F0 <AmiBlitz3.ab2@11371>   MOVE.w oldqflag,instringon
0003E6F6 <AmiBlitz3.ab2@11372>   MOVEA.l lastsourcepos,A5
0003E6FC <AmiBlitz3.ab2@11375>   MOVE.l a5,beforeparameterfetch
0003E702 <AmiBlitz3.ab2@11376>   LEA ptr_parameterstore,A1
0003E704 <AmiBlitz3.ab2@11379>   MOVEQ.l #$00,D2
0003E70A <AmiBlitz3.ab2@11382>   LEA chartab,a0
0003E70C <AmiBlitz3.ab2@11383>   MOVEQ #0,d0
0003E712 <AmiBlitz3.ab2@11384>   MOVE.l A5,lastsourcepos
0003E71C <AmiBlitz3.ab2@11385>   MOVE.w instringon,oldqflag
0003E71E <AmiBlitz3.ab2@11388>     MOVE.b (a5)+,d0
0003E722 <AmiBlitz3.ab2@11389>   CMP.b #$20,d0                                            ;space deftype
0003E726 <AmiBlitz3.ab2@11390>   BEQ makename4__retry
0003E72C <AmiBlitz3.ab2@11392>   MOVE.w d0,lastchar
0003E730 <AmiBlitz3.ab2@11393>   TST.b 0(a0,d0.w)
0003E734 <AmiBlitz3.ab2@11394>   BNE makename__done
0003E736 <AmiBlitz3.ab2@11403>   MOVE.b D0,(A1)+
0003E738 <AmiBlitz3.ab2@11404>   ADDQ.l #1,D2
0003E73E <AmiBlitz3.ab2@11405>   MOVE.l A5,lastsourcepos
0003E740 <AmiBlitz3.ab2@11408>   MOVE.b (a5)+,d0
0003E746 <AmiBlitz3.ab2@11409>   MOVE.b d0,lastchar+1
0003E74A <AmiBlitz3.ab2@11410>   CMP.b #$20,d0
0003E74E <AmiBlitz3.ab2@11411>   BEQ makename__loop_l20
0003E752 <AmiBlitz3.ab2@11413>   TST.b 0(a0,d0)
0003E756 <AmiBlitz3.ab2@11414>   BEQ makename__loop
0003E75A <AmiBlitz3.ab2@11415>   CMP.b #2,d0
0003E75E <AmiBlitz3.ab2@11416>   BNE makename__loop_lf1
0003E764 <AmiBlitz3.ab2@11417>   MOVEA.l usedfrom,A5
0003E76A <AmiBlitz3.ab2@11418>   CLR.l usedfrom
0003E76E <AmiBlitz3.ab2@11419> BRA makename__loop_ln1
0003E772 <AmiBlitz3.ab2@11422>   CMP.b #1,d0
0003E776 <AmiBlitz3.ab2@11423>   BNE makename__loop_l20
0003E77A <AmiBlitz3.ab2@11424>   MOVEA.l cmakea5(PC),A5
0003E77E <AmiBlitz3.ab2@11425> BRA makename__loop_ln1
0003E782 <AmiBlitz3.ab2@11428>   CMP.b #$7e,d0
0003E786 <AmiBlitz3.ab2@11429>             BNE makename__loop_lt
0003E78C <AmiBlitz3.ab2@11430>             TST.w cmake
0003E790 <AmiBlitz3.ab2@11431>             BNE.w makename__loop_a1
0003E792 <AmiBlitz3.ab2@11432>             SUBQ.l #1,a5
0003E796 <AmiBlitz3.ab2@11433>             BSR.w get1bytemain
0003E79A <AmiBlitz3.ab2@11434> BRA makename__loop
0003E79E <AmiBlitz3.ab2@11438> BRA makename__loop_gpex
0003E7A2 <AmiBlitz3.ab2@11442>   BSR.w getchar
0003E7C4 <AmiBlitz3.ab2@11443>    !compare1                                               ;bsr.w tstalpha
0003E7C8 <AmiBlitz3.ab2@11444>    BEQ.w makename__loop_getp1
0003E7DA <AmiBlitz3.ab2@11445>    !compare2                                               ;bsr.w tstnum
0003E7DE <AmiBlitz3.ab2@11446>    BEQ.w makename__loop_getp1
0003E7E2 <AmiBlitz3.ab2@11447>   CMP.w #$5F,D0                                            ;'_'
0003E7E6 <AmiBlitz3.ab2@11448>    BEQ.w makename__loop_getp1
0003E7EA <AmiBlitz3.ab2@11449>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0003E7EE <AmiBlitz3.ab2@11453>       BNE makename__loop_gpex
0003E7F2 <AmiBlitz3.ab2@11454>       CMP.b #$20,d0
0003E7F6 <AmiBlitz3.ab2@11455>       BNE.w makename__loop
0003E7F8 <AmiBlitz3.ab2@11458>      TST.b d0
0003E7FC <AmiBlitz3.ab2@11459>      BPL makename__loop_l10
0003E7FE <AmiBlitz3.ab2@11460>      SUBQ.l #1,a5
0003E802 <AmiBlitz3.ab2@11461>      BSR get1byte_
0003E806 <AmiBlitz3.ab2@11464>    CMP.w #$20,D0
0003E80A <AmiBlitz3.ab2@11465>    BNE.w makename__done
0003E80C <AmiBlitz3.ab2@11466>    MOVEQ #0,d0
0003E812 <AmiBlitz3.ab2@11467>   MOVE.l a5,lastsourcepos
0003E814 <AmiBlitz3.ab2@11470>   MOVE.b (a5)+,d0                                          ;neuneu
0003E818 <AmiBlitz3.ab2@11471>   BPL makename__loop_l101:
0003E81A <AmiBlitz3.ab2@11472>   ASL.w #8,d0
0003E81C <AmiBlitz3.ab2@11473>   MOVE.b (a5)+,d0
0003E822 <AmiBlitz3.ab2@11476>   TST.w instringon
0003E826 <AmiBlitz3.ab2@11477>   BNE makename__loop_l102
0003E82A <AmiBlitz3.ab2@11478>   CMP.b #$20,d0
0003E82E <AmiBlitz3.ab2@11479>   BEQ makename__loop_l103
0003E832 <AmiBlitz3.ab2@11480>   CMP.b #";",d0
0003E836 <AmiBlitz3.ab2@11481>   BNE makename__loop_l102
0003E838 <AmiBlitz3.ab2@11484>   MOVE.b (A5)+,D0
0003E83C <AmiBlitz3.ab2@11485>              BEQ makename__loop_l1
0003E840 <AmiBlitz3.ab2@11486>              CMP.b #":",d0
0003E844 <AmiBlitz3.ab2@11487>              BNE makename__loop_lr                         ;:@
0003E848 <AmiBlitz3.ab2@11488>              CMP.b #"@",(a5)
0003E84C <AmiBlitz3.ab2@11489>              BNE makename__loop_lr
0003E84E <AmiBlitz3.ab2@11490>              ADDQ #1,a5
0003E854 <AmiBlitz3.ab2@11494>   MOVE.w d0,lastchar
0003E858 <AmiBlitz3.ab2@11498>   CMP.b #";",d0
0003E85C <AmiBlitz3.ab2@11499>   BEQ makename__done_l11
0003E85E <AmiBlitz3.ab2@11500>   CLR.b (A1)
0003E860 <AmiBlitz3.ab2@11502>   TST.w D2
0003E862 <AmiBlitz3.ab2@11503> RTS
0003E864 <AmiBlitz3.ab2@11506>   CLR.b (a1)
0003E866 <AmiBlitz3.ab2@11507>   MOVEQ #0,d0
0003E86C <AmiBlitz3.ab2@11508>   MOVE.w d0,lastchar
0003E86E <AmiBlitz3.ab2@11510>   TST.w D2
0003E870 <AmiBlitz3.ab2@11511> RTS
0003E872 <AmiBlitz3.ab2@11517>   MOVE.l (A2),D0
0003E876 <AmiBlitz3.ab2@11520>   BEQ.w findlast__here
0003E878 <AmiBlitz3.ab2@11521>   MOVEA.l D0,A2
0003E87C <AmiBlitz3.ab2@11522> BRA.w findlast__loop
0003E880 <AmiBlitz3.ab2@11525> BRA.w reget
0003E882 <AmiBlitz3.ab2@11531>   MOVE.l (A2),-(A7)
0003E886 <AmiBlitz3.ab2@11532>   BSR.w addlabel
0003E888 <AmiBlitz3.ab2@11533>   MOVE.l (A7)+,(A2)
0003E88A <AmiBlitz3.ab2@11534> RTS
0003E890 <AmiBlitz3.ab2@11539>   CLR.l fp0addr
0003E896 <AmiBlitz3.ab2@11540>   TST.w dirmode
0003E89A <AmiBlitz3.ab2@11541>    BNE.w illdirerr
0003E89C <AmiBlitz3.ab2@11542>   MOVEQ.l #$00,D0
0003E89E <AmiBlitz3.ab2@11543>   MOVE.w D7,D0
0003E8A0 <AmiBlitz3.ab2@11544>   ADD.w D2,D0
0003E8A2 <AmiBlitz3.ab2@11545>   ADDQ.w #1,D0
0003E8A4 <AmiBlitz3.ab2@11546>   MOVE.w D0,D2
0003E8A6 <AmiBlitz3.ab2@11547>   ADDQ.l #2,d0
0003E8A8 <AmiBlitz3.ab2@11548>   MOVEQ.l #$01,D1
0003E8AE <AmiBlitz3.ab2@11549>   MOVEA.l _execbase,A6
0003E8B4 <AmiBlitz3.ab2@11550>   MOVE.l mempool2,a0
0003E8B8 <AmiBlitz3.ab2@11551>   JSR _AllocPooled(a6)
0003E8BE <AmiBlitz3.ab2@11553>   MOVE.l lastlabel,a2
0003E8C0 <AmiBlitz3.ab2@11554>   MOVE.l D0,(A2)
0003E8C2 <AmiBlitz3.ab2@11555>   MOVE.l d0,a0
0003E8C4 <AmiBlitz3.ab2@11556>   CLR.l (a0)
0003E8CA <AmiBlitz3.ab2@11557>   MOVE.l a0,lastlabel
0003E8CC <AmiBlitz3.ab2@11558>   MOVE.l d0,A2
0003E8D0 <AmiBlitz3.ab2@11559>   LEA -$1(A0,D7.W),A0
0003E8D2 <AmiBlitz3.ab2@11560>   MOVE.b D2,(A0)+
0003E8D8 <AmiBlitz3.ab2@11561>   LEA ptr_parameterstore,A1
0003E8DA <AmiBlitz3.ab2@11562>   MOVEQ #0,d0
0003E8DC <AmiBlitz3.ab2@11563>   MOVEQ #0,d1
0003E8DE <AmiBlitz3.ab2@11566>   MOVE.b (A1)+,d1
0003E8E2 <AmiBlitz3.ab2@11567>    BEQ 'l1
0003E8E8 <AmiBlitz3.ab2@11568>    !hashalgo
0003E8EA <AmiBlitz3.ab2@11569>    MOVE.b d1,(A0)+
0003E8EE <AmiBlitz3.ab2@11570> BRA addlabel_loop2a
0003E8F0 <AmiBlitz3.ab2@11573>    CLR.b (a0)+
0003E8F6 <AmiBlitz3.ab2@11574>    LEA labelhash,a0
0003E8FC <AmiBlitz3.ab2@11575>    AND.l #hashsize,d0
0003E8FE <AmiBlitz3.ab2@11576>    ASL.l #2,d0
0003E902 <AmiBlitz3.ab2@11577>    MOVE.l 0(a0,d0),d1
0003E906 <AmiBlitz3.ab2@11578>    MOVE.l d1,$c(a2)
0003E90A <AmiBlitz3.ab2@11579>    MOVE.l a2,0(a0,d0)
0003E90C <AmiBlitz3.ab2@11580>    MOVEQ #0,d0
0003E910 <AmiBlitz3.ab2@11581> BRA.w reget
0003E916 <AmiBlitz3.ab2@11585>    TST.b newvariable
0003E91A <AmiBlitz3.ab2@11586>    BNE addlabel
0003E920 <AmiBlitz3.ab2@11589>   TST.w dirmode
0003E924 <AmiBlitz3.ab2@11590>    BNE.w illdirerr
0003E926 <AmiBlitz3.ab2@11591>   MOVEQ.l #$00,D0
0003E928 <AmiBlitz3.ab2@11592>   MOVE.w D7,D0
0003E92A <AmiBlitz3.ab2@11593>   ADD.w D2,D0
0003E92C <AmiBlitz3.ab2@11594>   ADDQ.w #1,D0
0003E92E <AmiBlitz3.ab2@11595>   MOVE.w D0,D2
0003E930 <AmiBlitz3.ab2@11596>   MOVEQ.l #$01,D1
0003E936 <AmiBlitz3.ab2@11597>   MOVEA.l _execbase,A6
0003E93C <AmiBlitz3.ab2@11598>   MOVE.l mempool2,a0
0003E940 <AmiBlitz3.ab2@11599>   JSR _AllocPooled(a6)
0003E942 <AmiBlitz3.ab2@11600>   MOVEA.l D0,A0
0003E948 <AmiBlitz3.ab2@11602>   LEA varbase,a2
0003E94A <AmiBlitz3.ab2@11603>   MOVE.l (a2),(a0)
0003E94C <AmiBlitz3.ab2@11604>   MOVE.l A0,(A2)
0003E94E <AmiBlitz3.ab2@11605>   MOVEA.l A0,A2
0003E952 <AmiBlitz3.ab2@11606>   LEA -$1(A0,D7.W),A0
0003E954 <AmiBlitz3.ab2@11607>   MOVE.b D2,(A0)+
0003E95A <AmiBlitz3.ab2@11608>   LEA ptr_parameterstore,A1
0003E95C <AmiBlitz3.ab2@11609>   MOVEQ #0,d0
0003E95E <AmiBlitz3.ab2@11610>   MOVEQ #0,d1
0003E960 <AmiBlitz3.ab2@11613>   MOVE.b (A1)+,d1
0003E964 <AmiBlitz3.ab2@11614>    BEQ 'l12
0003E96A <AmiBlitz3.ab2@11615>    !hashalgo
0003E96C <AmiBlitz3.ab2@11616>    MOVE.b d1,(A0)+
0003E970 <AmiBlitz3.ab2@11617> BRA 'l11
0003E972 <AmiBlitz3.ab2@11620>   CLR.b (a0)+
0003E978 <AmiBlitz3.ab2@11621>   LEA variablehash,a0
0003E97E <AmiBlitz3.ab2@11622>    AND.l #hashsize,d0
0003E980 <AmiBlitz3.ab2@11623>    ASL.l #2,d0
0003E984 <AmiBlitz3.ab2@11624>    MOVE.l 0(a0,d0),d1
0003E988 <AmiBlitz3.ab2@11625>    MOVE.l d1,$e(a2)
0003E98C <AmiBlitz3.ab2@11626>    MOVE.l a2,0(a0,d0)
0003E98E <AmiBlitz3.ab2@11627>    MOVEQ #0,d0
0003E992 <AmiBlitz3.ab2@11628> BRA.w reget
0003E998 <AmiBlitz3.ab2@11632>   TST.w dirmode
0003E99C <AmiBlitz3.ab2@11633>    BNE.w illdirerr
0003E99E <AmiBlitz3.ab2@11640>   MOVEQ.l #$00,D0
0003E9A0 <AmiBlitz3.ab2@11641>   MOVE.w D7,D0
0003E9A2 <AmiBlitz3.ab2@11642>   ADD.w D2,D0
0003E9A4 <AmiBlitz3.ab2@11643>   ADDQ.w #1,D0
0003E9A6 <AmiBlitz3.ab2@11644>   MOVE.w D0,D2
0003E9A8 <AmiBlitz3.ab2@11645>   MOVEQ.l #$01,D1
0003E9AE <AmiBlitz3.ab2@11646>   MOVEA.l _execbase,A6
0003E9B4 <AmiBlitz3.ab2@11647>   MOVE.l mempool2,a0
0003E9B8 <AmiBlitz3.ab2@11648>   JSR _AllocPooled(a6)
0003E9BA <AmiBlitz3.ab2@11650>   MOVEA.l D0,A0
0003E9BC <AmiBlitz3.ab2@11651>   MOVE.l A0,(A2)
0003E9BE <AmiBlitz3.ab2@11652>   CLR.l (a0)
0003E9C2 <AmiBlitz3.ab2@11653>   CLR.l 8(a0)                                              ;clear next
0003E9C4 <AmiBlitz3.ab2@11654>   MOVEA.l A0,A2
0003E9C8 <AmiBlitz3.ab2@11655>   LEA -$1(A0,D7.W),A0
0003E9CA <AmiBlitz3.ab2@11656>   MOVE.b D2,(A0)+                                          ;put in struct length
0003E9D0 <AmiBlitz3.ab2@11657>   LEA ptr_parameterstore,A1
0003E9D2 <AmiBlitz3.ab2@11658>   MOVEQ #0,d0
0003E9D4 <AmiBlitz3.ab2@11659>   MOVEQ #0,d1
0003E9D6 <AmiBlitz3.ab2@11662>   MOVE.b (A1)+,d1
0003E9D8 <AmiBlitz3.ab2@11665>   MOVE.b d1,(A0)+
0003E9DC <AmiBlitz3.ab2@11666>   BNE.w addlabel_loop2
0003E9E0 <AmiBlitz3.ab2@11667> BRA.w reget
0003E9E2 <AmiBlitz3.ab2@11671>   MOVEQ.l #$13,D7
0003E9E8 <AmiBlitz3.ab2@11672>   LEA constantbase,A2
0003E9EC <AmiBlitz3.ab2@11673> BRA.w findlab
0003E9EE <AmiBlitz3.ab2@11677>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0003E9F4 <AmiBlitz3.ab2@11678>   LEA xinclude_base,A2
0003E9F8 <AmiBlitz3.ab2@11679> BRA.w findlab
0003E9FA <AmiBlitz3.ab2@11683>   MOVEQ.l #$09,D7
0003EA00 <AmiBlitz3.ab2@11684>   LEA firstconst,A2
0003EA04 <AmiBlitz3.ab2@11685> BRA.w findlab
0003EA06 <AmiBlitz3.ab2@11689>   MOVEQ.l #$0d,D7                                          ;find macro
0003EA0C <AmiBlitz3.ab2@11690>   LEA macrobase,A2
0003EA10 <AmiBlitz3.ab2@11691> BRA.w findlab
0003EA16 <AmiBlitz3.ab2@11695>   LEA labelhash,A2
0003EA18 <AmiBlitz3.ab2@11696>   MOVEQ.l #$13,D7
0003EA1A <AmiBlitz3.ab2@11697>   EXT.l d2
0003EA20 <AmiBlitz3.ab2@11698>   LEA ptr_parameterstore,A0
0003EA22 <AmiBlitz3.ab2@11699>   MOVEQ #0,d0
0003EA24 <AmiBlitz3.ab2@11700>   MOVEQ #0,d1
0003EA26 <AmiBlitz3.ab2@11703>     MOVE.b (a0)+,d1
0003EA2A <AmiBlitz3.ab2@11704>     BEQ 'l15
0003EA30 <AmiBlitz3.ab2@11705>     !hashalgo
0003EA34 <AmiBlitz3.ab2@11706> BRA 'l20
0003EA3A <AmiBlitz3.ab2@11709>   AND.l #hashsize,d0
0003EA3C <AmiBlitz3.ab2@11710>   ASL.l #2,d0
0003EA40 <AmiBlitz3.ab2@11711>   MOVE.l 0(a2,d0),d0
0003EA44 <AmiBlitz3.ab2@11712> BRA 'l11
0003EA48 <AmiBlitz3.ab2@11715>   MOVE.l $c(A2),D0                                         ;find label
0003EA4C <AmiBlitz3.ab2@11718>   BEQ findlab__no
0003EA4E <AmiBlitz3.ab2@11719>   MOVEA.l D0,A2
0003EA50 <AmiBlitz3.ab2@11720>   MOVEQ.l #$00,D0
0003EA54 <AmiBlitz3.ab2@11721>   MOVE.b -$1(A2,D7.l),D0
0003EA5A <AmiBlitz3.ab2@11722>   LEA ptr_parameterstore,A0
0003EA5C <AmiBlitz3.ab2@11723>   SUB.l D7,D0
0003EA5E <AmiBlitz3.ab2@11724>   SUBQ.l #1,D0
0003EA60 <AmiBlitz3.ab2@11725>   CMP.l D0,D2
0003EA64 <AmiBlitz3.ab2@11726>    BNE.b 'l10
0003EA68 <AmiBlitz3.ab2@11727>   LEA $0(A2,D7.W),A1
0003EA6A <AmiBlitz3.ab2@11728>   SUBQ.l #1,D0
0003EA6C <AmiBlitz3.ab2@11731>     MOVE.b (a1)+,d1
0003EA6E <AmiBlitz3.ab2@11732>     CMP.b (a0)+,d1
0003EA72 <AmiBlitz3.ab2@11734>     BNE.b 'l10
0003EA76 <AmiBlitz3.ab2@11735>   DBF D0,'l201
0003EA7A <AmiBlitz3.ab2@11737>   BSR.w reget
0003EA7C <AmiBlitz3.ab2@11738>   CMP.w D0,D0
0003EA7E <AmiBlitz3.ab2@11739> RTS
0003EA80 <AmiBlitz3.ab2@11743>   MOVEQ.l #$0B,D7
0003EA84 <AmiBlitz3.ab2@11744> BRA.w findlab
0003EA8A <AmiBlitz3.ab2@11748>   LEA firstproc,A2
0003EA90 <AmiBlitz3.ab2@11749>   MOVE.l #$21+#funcentry_extend,D7
0003EA94 <AmiBlitz3.ab2@11750> BRA findlab
0003EA9A <AmiBlitz3.ab2@11754>   LEA firstfor,A2
0003EA9C <AmiBlitz3.ab2@11755>   MOVEQ.l #$11,D7
0003EAA0 <AmiBlitz3.ab2@11756> BRA.w findlab
0003EAA2 <AmiBlitz3.ab2@11760>   MOVEQ.l #$0F,D7
0003EAA6 <AmiBlitz3.ab2@11761> BRA.w findlab
0003EAA8 <AmiBlitz3.ab2@11765>   MOVEQ.l #$0F+4,D7
0003EAAE <AmiBlitz3.ab2@11766>   TST.b newvariable
0003EAB2 <AmiBlitz3.ab2@11767>    BNE.w findlab
0003EAB8 <AmiBlitz3.ab2@11768>   LEA variablehash,A2
0003EABE <AmiBlitz3.ab2@11769>   LEA ptr_parameterstore,A0
0003EAC0 <AmiBlitz3.ab2@11770>   MOVEQ #0,d0
0003EAC2 <AmiBlitz3.ab2@11771>   MOVEQ #0,d1
0003EAC4 <AmiBlitz3.ab2@11774>     MOVE.b (a0)+,d1
0003EAC8 <AmiBlitz3.ab2@11775>     BEQ 'l15
0003EACE <AmiBlitz3.ab2@11776>     !hashalgo
0003EAD2 <AmiBlitz3.ab2@11777> BRA 'l20
0003EAD8 <AmiBlitz3.ab2@11780>   AND.l #hashsize,d0
0003EADA <AmiBlitz3.ab2@11781>   ASL.l #2,d0
0003EADE <AmiBlitz3.ab2@11782>   MOVE.l 0(a2,d0),d0
0003EAE2 <AmiBlitz3.ab2@11783> BRA 'l11
0003EAE6 <AmiBlitz3.ab2@11786>   MOVE.l $e(A2),D0                                         ;find label
0003EAEA <AmiBlitz3.ab2@11789>   BEQ findlab__no
0003EAEC <AmiBlitz3.ab2@11790>   MOVEA.l D0,A2
0003EAEE <AmiBlitz3.ab2@11791>   MOVEQ.l #$00,D0
0003EAF2 <AmiBlitz3.ab2@11792>   MOVE.b -$1(A2,D7.W),D0
0003EAF8 <AmiBlitz3.ab2@11793>   LEA ptr_parameterstore,A0
0003EAFA <AmiBlitz3.ab2@11794>   SUB.w D7,D0
0003EAFC <AmiBlitz3.ab2@11795>   SUBQ.l #1,D0
0003EAFE <AmiBlitz3.ab2@11796>   CMP.w D0,D2
0003EB02 <AmiBlitz3.ab2@11797>    BNE.b 'l10
0003EB06 <AmiBlitz3.ab2@11798>   LEA $0(A2,D7.W),A1
0003EB08 <AmiBlitz3.ab2@11799>   SUBQ.l #1,D0
0003EB0A <AmiBlitz3.ab2@11802>     MOVE.b (a1)+,d1
0003EB0C <AmiBlitz3.ab2@11803>     CMP.b (a0)+,d1
0003EB10 <AmiBlitz3.ab2@11805>     BNE.b 'l10
0003EB14 <AmiBlitz3.ab2@11806>   DBF D0,'l201
0003EB18 <AmiBlitz3.ab2@11808>   BSR.w reget
0003EB1A <AmiBlitz3.ab2@11809>   CMP.w D0,D0
0003EB1C <AmiBlitz3.ab2@11810> RTS
0003EB1E <AmiBlitz3.ab2@11823>     MOVE.l (A2),D0                                         ;find label
0003EB22 <AmiBlitz3.ab2@11824>      BEQ.b findlab__no
0003EB24 <AmiBlitz3.ab2@11825>     MOVEA.l D0,A2
0003EB26 <AmiBlitz3.ab2@11826>     MOVEQ.l #$00,D0
0003EB2A <AmiBlitz3.ab2@11827>     MOVE.b -$1(A2,D7.W),D0
0003EB2C <AmiBlitz3.ab2@11828>     SUB.l D7,D0
0003EB2E <AmiBlitz3.ab2@11829>     SUBQ.l #1,D0
0003EB30 <AmiBlitz3.ab2@11830>   CMP.w D0,D2
0003EB34 <AmiBlitz3.ab2@11831>   BNE.b findlab__loop
0003EB38 <AmiBlitz3.ab2@11833>   LEA $0(A2,D7.W),A1
0003EB3E <AmiBlitz3.ab2@11834>   LEA ptr_parameterstore,A0
0003EB40 <AmiBlitz3.ab2@11835>   SUBQ.l #1,D0
0003EB42 <AmiBlitz3.ab2@11838>     MOVE.b (a1)+,d1
0003EB44 <AmiBlitz3.ab2@11839>     CMP.b (a0)+,d1
0003EB48 <AmiBlitz3.ab2@11841>     BNE.b findlab__loop
0003EB4C <AmiBlitz3.ab2@11842>   DBF D0,findlab__loop2
0003EB50 <AmiBlitz3.ab2@11844>   BSR.w reget
0003EB52 <AmiBlitz3.ab2@11845>   CMP.w D0,D0
0003EB54 <AmiBlitz3.ab2@11846> RTS
0003EB58 <AmiBlitz3.ab2@11849>   BSR.w reget
0003EB5A <AmiBlitz3.ab2@11850>   MOVEQ.l #-$01,D1
0003EB5C <AmiBlitz3.ab2@11851> RTS
0003EB62 <AmiBlitz3.ab2@11855>   MOVEA.l alllocals,A4
0003EB68 <AmiBlitz3.ab2@11856>   CLR.l alllocals
0003EB6C <AmiBlitz3.ab2@11860>     CMPA.w #$0,A4
0003EB70 <AmiBlitz3.ab2@11861>      BEQ.b freeprocvs__done
0003EB74 <AmiBlitz3.ab2@11862>     MOVEA.l $4(A4),A3
0003EB78 <AmiBlitz3.ab2@11864>     MOVEA.l $8(A4),A3
0003EB7A <AmiBlitz3.ab2@11866>     MOVEA.l A4,A1
0003EB7C <AmiBlitz3.ab2@11867>     MOVEA.l (A4),A4
0003EB7E <AmiBlitz3.ab2@11868>     MOVEQ.l #$0C,D0
0003EB84 <AmiBlitz3.ab2@11869>     MOVEA.l _execbase,A6
0003EB8A <AmiBlitz3.ab2@11870>     MOVE.l mempool,a0
0003EB8E <AmiBlitz3.ab2@11871>     JSR _FreePooled(A6)
0003EB92 <AmiBlitz3.ab2@11872> BRA.b freeprocvs__loop
0003EB98 <AmiBlitz3.ab2@11875>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0003EB9E <AmiBlitz3.ab2@11876>   CLR.l firstlocal
0003EBA4 <AmiBlitz3.ab2@11877>   CLR.l sharebase
0003EBAA <AmiBlitz3.ab2@11878>   TST.l mempool2
0003EBAE <AmiBlitz3.ab2@11879>   BEQ freeprocvs__done_l10
0003EBB4 <AmiBlitz3.ab2@11881>   MOVEA.l _execbase,A6
0003EBBA <AmiBlitz3.ab2@11882>   MOVE.l mempool2,a0
0003EBC0 <AmiBlitz3.ab2@11883>   CLR.l mempool2
0003EBC4 <AmiBlitz3.ab2@11884>   JSR _DeletePool(a6)
0003EBCA <AmiBlitz3.ab2@11887>   MOVE.l _execbase,a6
0003EBD0 <AmiBlitz3.ab2@11888>   MOVE.l #$10000,d0
0003EBD6 <AmiBlitz3.ab2@11889>   MOVE.l #80000,d1
0003EBD8 <AmiBlitz3.ab2@11890>   MOVE.l d1,d2
0003EBDC <AmiBlitz3.ab2@11891>   JSR _CreatePool(a6)
0003EBE2 <AmiBlitz3.ab2@11892>   MOVE.l d0,mempool2
0003EBE4 <AmiBlitz3.ab2@11893> RTS
0003EBE8 <AmiBlitz3.ab2@11897>   CMPA.w #$0,A3
0003EBEC <AmiBlitz3.ab2@11898>    BEQ.w freevars__done
0003EBEE <AmiBlitz3.ab2@11899>   MOVEA.l A3,A1
0003EBF0 <AmiBlitz3.ab2@11900>   MOVEA.l (A3),A3
0003EBF2 <AmiBlitz3.ab2@11901>   MOVEQ.l #$00,D0
0003EBF6 <AmiBlitz3.ab2@11902>   MOVE.b $E(A1),D0
0003EBFC <AmiBlitz3.ab2@11903>   MOVEA.l _execbase,A6
0003EC02 <AmiBlitz3.ab2@11904>   MOVE.l mempool2,a0
0003EC06 <AmiBlitz3.ab2@11905>   JSR _FreePooled(A6)
0003EC0A <AmiBlitz3.ab2@11906> BRA.w freevars
0003EC0E <AmiBlitz3.ab2@11909>     CMPA.w #$0,A3
0003EC12 <AmiBlitz3.ab2@11910>      BEQ.w freevars__done
0003EC14 <AmiBlitz3.ab2@11911>     MOVEA.l A3,A1
0003EC16 <AmiBlitz3.ab2@11912>     MOVEA.l (A3),A3
0003EC18 <AmiBlitz3.ab2@11913>     MOVEQ.l #$00,D0
0003EC1C <AmiBlitz3.ab2@11914>     MOVE.b $E+4(A1),D0
0003EC22 <AmiBlitz3.ab2@11915>     MOVEA.l _execbase,A6
0003EC28 <AmiBlitz3.ab2@11916>     MOVE.l mempool2,a0
0003EC2C <AmiBlitz3.ab2@11917>     JSR _FreePooled(A6)
0003EC30 <AmiBlitz3.ab2@11918> BRA.w freevarsb
0003EC32 <AmiBlitz3.ab2@11921> RTS
0003EC38 <AmiBlitz3.ab2@11925>   MOVEA.l currentlabeladdr,A0
0003EC3E <AmiBlitz3.ab2@11926>   MOVE.l a0,lastlabel
0003EC40 <AmiBlitz3.ab2@11927>   MOVEA.l (A0),A2
0003EC42 <AmiBlitz3.ab2@11928>   CLR.l (A0)
0003EC48 <AmiBlitz3.ab2@11929>   MOVEA.l _execbase,A6
0003EC4C <AmiBlitz3.ab2@11932>   CMPA.w #$0,A2
0003EC50 <AmiBlitz3.ab2@11933>    BEQ.w clearlabels__done
0003EC54 <AmiBlitz3.ab2@11934>   MOVE.l $4(A2),D0
0003EC58 <AmiBlitz3.ab2@11935>   BTST #$0,D0
0003EC5C <AmiBlitz3.ab2@11936>    BNE.w clearlabels__skip
0003EC5E <AmiBlitz3.ab2@11937>   MOVEA.l D0,A3
0003EC62 <AmiBlitz3.ab2@11940>     CMPA.w #$0,A3
0003EC66 <AmiBlitz3.ab2@11941>      BEQ.w clearlabels__skip
0003EC68 <AmiBlitz3.ab2@11942>     MOVEA.l A3,A1
0003EC6A <AmiBlitz3.ab2@11943>     MOVEA.l (A3),A3
0003EC6C <AmiBlitz3.ab2@11944>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0003EC72 <AmiBlitz3.ab2@11945>     MOVE.l mempool,a0
0003EC76 <AmiBlitz3.ab2@11946>     JSR _FreePooled(A6)
0003EC7A <AmiBlitz3.ab2@11947> BRA.w clearlabels__loop2
0003EC7C <AmiBlitz3.ab2@11950>   MOVEQ.l #$00,D0
0003EC80 <AmiBlitz3.ab2@11951>   MOVE.b $12(A2),D0
0003EC82 <AmiBlitz3.ab2@11952>   MOVEA.l A2,A1
0003EC84 <AmiBlitz3.ab2@11953>   MOVEA.l (A2),A2
0003EC8A <AmiBlitz3.ab2@11954>   MOVE.l mempool2,a0
0003EC8E <AmiBlitz3.ab2@11956> BRA.w clearlabels__loop
0003EC90 <AmiBlitz3.ab2@11959> RTS
0003EC96 <AmiBlitz3.ab2@11963>   MOVEA.l firstpend,A3
0003EC9C <AmiBlitz3.ab2@11964>   CLR.l firstpend
0003ECA2 <AmiBlitz3.ab2@11965>   MOVEA.l _execbase,A6
0003ECA6 <AmiBlitz3.ab2@11968>     CMPA.w #$0,A3
0003ECAA <AmiBlitz3.ab2@11969>      BEQ.w freepends__done
0003ECAC <AmiBlitz3.ab2@11970>     MOVEA.l A3,A1
0003ECAE <AmiBlitz3.ab2@11971>     MOVEQ.l #$08,D0
0003ECB0 <AmiBlitz3.ab2@11972>     MOVEA.l (A3),A3
0003ECB6 <AmiBlitz3.ab2@11973>     MOVE.l mempool,a0
0003ECBA <AmiBlitz3.ab2@11974>     JSR _FreePooled(A6)
0003ECBE <AmiBlitz3.ab2@11975> BRA.w fpnd2
0003ECC0 <AmiBlitz3.ab2@11978> RTS
0003ECC6 <AmiBlitz3.ab2@11982>   MOVEA.l firstproc,A2
0003ECCC <AmiBlitz3.ab2@11983>   CLR.l firstproc
0003ECD2 <AmiBlitz3.ab2@11984>   MOVEA.l _execbase,A6
0003ECD6 <AmiBlitz3.ab2@11987>     CMPA.w #$0,A2
0003ECDA <AmiBlitz3.ab2@11988>      BEQ.w clearfunctionlist__done
0003ECDC <AmiBlitz3.ab2@11989>     MOVEA.l A2,A1
0003ECDE <AmiBlitz3.ab2@11990>     MOVEA.l (A2),A2
0003ECE0 <AmiBlitz3.ab2@11991>     MOVEQ.l #$00,D0
0003ECE4 <AmiBlitz3.ab2@11992>     MOVE.b $20+#funcentry_extend(A1),D0
0003ECEA <AmiBlitz3.ab2@11993>     MOVE.l mempool2,a0
0003ECEE <AmiBlitz3.ab2@11994>     JSR _FreePooled(A6)
0003ECF2 <AmiBlitz3.ab2@11995> BRA.w clearfunctionlist__loop
0003ECF4 <AmiBlitz3.ab2@11998> RTS
0003ECF8 <AmiBlitz3.ab2@12002>   CMPA.w #$0,A2
0003ECFC <AmiBlitz3.ab2@12003>    BEQ.w freetypes__done
0003ED00 <AmiBlitz3.ab2@12004>   MOVEA.l $4(A2),A3
0003ED04 <AmiBlitz3.ab2@12005>   CMPA.w #$FF,A3
0003ED08 <AmiBlitz3.ab2@12006>    BEQ.w freetypes__noway
0003ED0C <AmiBlitz3.ab2@12010>    BSR.w freevars
0003ED0E <AmiBlitz3.ab2@12013>     MOVEA.l A2,A1
0003ED10 <AmiBlitz3.ab2@12014>     MOVEA.l (A2),A2
0003ED12 <AmiBlitz3.ab2@12015>     MOVEQ.l #$00,D0
0003ED16 <AmiBlitz3.ab2@12016>     MOVE.b $A(A1),D0
0003ED1C <AmiBlitz3.ab2@12017>     MOVEA.l _execbase,A6
0003ED22 <AmiBlitz3.ab2@12018>     MOVE.l mempool2,a0
0003ED26 <AmiBlitz3.ab2@12019>     JSR _FreePooled(A6)
0003ED2A <AmiBlitz3.ab2@12020> BRA.w freetypes
0003ED2C <AmiBlitz3.ab2@12023> RTS
0003ED32 <AmiBlitz3.ab2@12027>   JSR uselib2
0003ED38 <AmiBlitz3.ab2@12029>   CLR.w notshared
0003ED3E <AmiBlitz3.ab2@12030>   CLR.w varmode
0003ED44 <AmiBlitz3.ab2@12031>   MOVE.w proceduremode,D1
0003ED48 <AmiBlitz3.ab2@12032>    BNE.w JL_0_8F4E
0003ED4E <AmiBlitz3.ab2@12033>   LEA varbase,A2
0003ED54 <AmiBlitz3.ab2@12034>   LEA ptr_parameterstore,a0
0003ED58 <AmiBlitz3.ab2@12035>   CMP.b #$22,(a0)
0003ED5C <AmiBlitz3.ab2@12036>   BNE JL_0_8E5E
0003ED5E <AmiBlitz3.ab2@12037>   MOVEQ #0,d0
0003ED64 <AmiBlitz3.ab2@12038> JMP error
0003ED68 <AmiBlitz3.ab2@12041>   BSR.w findvariable
0003ED6C <AmiBlitz3.ab2@12044>   BNE.w JL_0_8E7E
0003ED72 <AmiBlitz3.ab2@12047>   MOVE.b flagmask+1,D1
0003ED76 <AmiBlitz3.ab2@12048>   MOVE.b $7(A2),D3
0003ED78 <AmiBlitz3.ab2@12049>   EOR.b D3,D1
0003ED7C <AmiBlitz3.ab2@12050>   BNE 'l2
0003ED84 <AmiBlitz3.ab2@12051>   CMP.b #2,nowdeclare
0003ED88 <AmiBlitz3.ab2@12052>   BEQ errormsg_declaredtwice
0003ED8C <AmiBlitz3.ab2@12053> BRA.w JL_0_8FA8
0003ED90 <AmiBlitz3.ab2@12056>   BSR.w findlab
0003ED94 <AmiBlitz3.ab2@12057>   BNE 'l1
0003ED9C <AmiBlitz3.ab2@12058>   CMP.b #2,nowdeclare
0003EDA0 <AmiBlitz3.ab2@12059>   BEQ errormsg_declaredtwice
0003EDA2 <AmiBlitz3.ab2@12060>   CMP.w d0,d0
0003EDA6 <AmiBlitz3.ab2@12063> BRA.w JL_0_8E62
0003EDA8 <AmiBlitz3.ab2@12066>    MOVE.l a2,-(a7)
0003EDAE <AmiBlitz3.ab2@12067>    LEA sharebase,a2
0003EDB0 <AmiBlitz3.ab2@12068>    MOVEQ #$f+4,d7
0003EDB4 <AmiBlitz3.ab2@12069>    BSR.w findlab
0003EDB8 <AmiBlitz3.ab2@12070>    BEQ 'l2x
0003EDBA <AmiBlitz3.ab2@12071>    MOVE.l (a7)+,a2
0003EDBE <AmiBlitz3.ab2@12072> BRA 'cont
0003EDC0 <AmiBlitz3.ab2@12075>   ADDQ.l #4,a7
0003EDC6 <AmiBlitz3.ab2@12076>   CLR.w varmode
0003EDCC <AmiBlitz3.ab2@12077>   MOVE.b flagmask+1,D1
0003EDD0 <AmiBlitz3.ab2@12078>   MOVE.b $7(A2),D3
0003EDD2 <AmiBlitz3.ab2@12079>   EOR.b D3,D1
0003EDD6 <AmiBlitz3.ab2@12080>   BNE vardeclareerr
0003EDDA <AmiBlitz3.ab2@12081> BRA JL_0_8FA8
0003EDE0 <AmiBlitz3.ab2@12084>    MOVE.w nonew,D1
0003EDE4 <AmiBlitz3.ab2@12085>    BNE.w nonewerr
0003EDEA <AmiBlitz3.ab2@12086>    TST.b nowdeclare
0003EDEE <AmiBlitz3.ab2@12087>    BNE 'l2
0003EDF4 <AmiBlitz3.ab2@12088>    TST.b declare2
0003EDF8 <AmiBlitz3.ab2@12089>    BEQ 'l1
0003EDFC <AmiBlitz3.ab2@12090>    CMP.b #$2e,d0
0003EE00 <AmiBlitz3.ab2@12091>    BEQ 'l2
0003EE04 <AmiBlitz3.ab2@12092>    CMP.b #"$",d0
0003EE08 <AmiBlitz3.ab2@12093>    BEQ 'l2
0003EE0C <AmiBlitz3.ab2@12094> BRA vardeclareerr
0003EE12 <AmiBlitz3.ab2@12097>   TST.b declare
0003EE16 <AmiBlitz3.ab2@12098>    BNE vardeclareerr
0003EE1A <AmiBlitz3.ab2@12101>   BSR.w addvariable
0003EE20 <AmiBlitz3.ab2@12102>   NOT.w notshared
0003EE22 <AmiBlitz3.ab2@12103>   MOVEA.l A2,A3
0003EE28 <AmiBlitz3.ab2@12104>   MOVEA.l defaulttype,A2
0003EE2C <AmiBlitz3.ab2@12105>   CMP.w #$2E,D0
0003EE30 <AmiBlitz3.ab2@12106>    BEQ.w JL_0_8EB8
0003EE34 <AmiBlitz3.ab2@12107>   CMP.w #$24,D0
0003EE38 <AmiBlitz3.ab2@12108>    BNE.w JL_0_8ECA
0003EE3E <AmiBlitz3.ab2@12109>   LEA newtype_string,A2
0003EE42 <AmiBlitz3.ab2@12110>    BSR.w get1bytemain
0003EE46 <AmiBlitz3.ab2@12111> BRA.w JL_0_8ECA
0003EE4C <AmiBlitz3.ab2@12114> JMP JUMP_notypeerr
0003EE50 <AmiBlitz3.ab2@12117>    BSR.w getparameter2
0003EE56 <AmiBlitz3.ab2@12118>   LEA newtypebase,A2
0003EE5A <AmiBlitz3.ab2@12119>    BSR.w findtype
0003EE5E <AmiBlitz3.ab2@12120>    BNE.w notypeerr3
0003EE64 <AmiBlitz3.ab2@12123>   CMPA.l #newtype_byte,A2
0003EE68 <AmiBlitz3.ab2@12124>    BEQ.w JL_0_8EECb
0003EE6E <AmiBlitz3.ab2@12125>   MOVE.w varmode,D1
0003EE72 <AmiBlitz3.ab2@12126>    BNE.w JL_0_8EE4b
0003EE78 <AmiBlitz3.ab2@12127>   ADDQ.w #1,globalvarpointer
0003EE80 <AmiBlitz3.ab2@12130>   BCLR #$0,globalvarpointer+1
0003EE84 <AmiBlitz3.ab2@12133>   MOVE.l A2,$A(A3)
0003EE8C <AmiBlitz3.ab2@12134>   MOVE.w flagmask,$6(A3)                                  ;??????????
0003EE8E <AmiBlitz3.ab2@12136>   MOVEQ.l #$04,D1
0003EE96 <AmiBlitz3.ab2@12137>   BTST #$0,flagmask+1
0003EE9A <AmiBlitz3.ab2@12138>    BNE.w JL_0_8F22b
0003EEA2 <AmiBlitz3.ab2@12139>   BTST #$1,flagmask+1
0003EEA6 <AmiBlitz3.ab2@12140>    BNE.w JL_0_8F22b
0003EEAE <AmiBlitz3.ab2@12141>   CMPI.l #$100,$4(A2)
0003EEB2 <AmiBlitz3.ab2@12142>    BCC.w JL_0_8F22b
0003EEB6 <AmiBlitz3.ab2@12143>   MOVE.w $8(A2),D1
0003EEBC <AmiBlitz3.ab2@12146>   TST.w varmode
0003EEC0 <AmiBlitz3.ab2@12147> BRA.w JL_0_8F3E
0003EEC4 <AmiBlitz3.ab2@12156>   BSR.w getparameter2
0003EECA <AmiBlitz3.ab2@12157>   LEA newtypebase,A2
0003EECE <AmiBlitz3.ab2@12158>    BSR.w findtype
0003EED2 <AmiBlitz3.ab2@12159>    BNE.w notypeerr
0003EED8 <AmiBlitz3.ab2@12162>   CMPA.l #newtype_byte,A2
0003EEDC <AmiBlitz3.ab2@12163>    BEQ.w JL_0_8EEC
0003EEE2 <AmiBlitz3.ab2@12164>   MOVE.w varmode,D1
0003EEE6 <AmiBlitz3.ab2@12165>    BNE.w JL_0_8EE4
0003EEEC <AmiBlitz3.ab2@12166>   ADDQ.w #1,globalvarpointer
0003EEF4 <AmiBlitz3.ab2@12169>   BCLR #$0,globalvarpointer+1
0003EEF8 <AmiBlitz3.ab2@12172>   MOVE.l A2,$A(A3)
0003EF00 <AmiBlitz3.ab2@12173>   MOVE.w flagmask,$6(A3)                                  ;??????????
0003EF02 <AmiBlitz3.ab2@12174>   MOVEQ.l #$04,D1
0003EF0A <AmiBlitz3.ab2@12175>   BTST #$0,flagmask+1
0003EF0E <AmiBlitz3.ab2@12176>    BNE.w JL_0_8F22
0003EF16 <AmiBlitz3.ab2@12177>   BTST #$1,flagmask+1
0003EF1A <AmiBlitz3.ab2@12178>    BNE.w JL_0_8F22
0003EF22 <AmiBlitz3.ab2@12179>   CMPI.l #$100,$4(A2)
0003EF26 <AmiBlitz3.ab2@12180>    BCC.w JL_0_8F22
0003EF2A <AmiBlitz3.ab2@12181>   MOVE.w $8(A2),D1
0003EF30 <AmiBlitz3.ab2@12184>   TST.w varmode
0003EF34 <AmiBlitz3.ab2@12185>    BEQ.w JL_0_8F3E
0003EF36 <AmiBlitz3.ab2@12186>   NEG.w D1
0003EF3C <AmiBlitz3.ab2@12187>   ADD.w D1,globalvarpointer
0003EF44 <AmiBlitz3.ab2@12188>   MOVE.w globalvarpointer,$4(A3)
0003EF46 <AmiBlitz3.ab2@12189> RTS
0003EF4E <AmiBlitz3.ab2@12192>   MOVE.w globalvarpointer,$4(A3)
0003EF54 <AmiBlitz3.ab2@12193>   ADD.w D1,globalvarpointer
0003EF56 <AmiBlitz3.ab2@12194> RTS
0003EF5C <AmiBlitz3.ab2@12198>   LEA firstglob,A2
0003EF60 <AmiBlitz3.ab2@12199>    BSR.w findvariable2
0003EF64 <AmiBlitz3.ab2@12202>   BNE.w JL_0_8F74
0003EF6A <AmiBlitz3.ab2@12203>   MOVE.b flagmask+1,D1
0003EF6E <AmiBlitz3.ab2@12204>   MOVE.b $7(A2),D3
0003EF70 <AmiBlitz3.ab2@12205>   EOR.b D3,D1
0003EF74 <AmiBlitz3.ab2@12206>    BEQ.w JL_0_8FA8
0003EF78 <AmiBlitz3.ab2@12207>    BSR.w findlab
0003EF7C <AmiBlitz3.ab2@12208> BRA.w JL_0_8F58
0003EF84 <AmiBlitz3.ab2@12211>   MOVE.w #$FFFF,varmode
0003EF8A <AmiBlitz3.ab2@12212>   MOVE.w globalvarpointer,-(A7)
0003EF94 <AmiBlitz3.ab2@12213>   MOVE.w locvaroff,globalvarpointer
0003EF9A <AmiBlitz3.ab2@12214>   LEA firstlocal,A2
0003EFA2 <AmiBlitz3.ab2@12215>   MOVE.b #1,newvariable
0003EFA6 <AmiBlitz3.ab2@12216>    BSR.w JL_0_8E5E
0003EFAC <AmiBlitz3.ab2@12217>   CLR.b newvariable
0003EFB6 <AmiBlitz3.ab2@12218>   MOVE.w globalvarpointer,locvaroff
0003EFBC <AmiBlitz3.ab2@12219>   MOVE.w (A7)+,globalvarpointer
0003EFBE <AmiBlitz3.ab2@12220> RTS
0003EFC0 <AmiBlitz3.ab2@12223>   MOVEA.l A2,A3
0003EFC4 <AmiBlitz3.ab2@12224>   CMP.w #$2E,D0
0003EFC8 <AmiBlitz3.ab2@12225>    BEQ.w JL_0_8FCE
0003EFCC <AmiBlitz3.ab2@12226>   CMP.w #$24,D0
0003EFD0 <AmiBlitz3.ab2@12227>    BNE.w JL_0_8FE8
0003EFD8 <AmiBlitz3.ab2@12228>   CMPI.l #newtype_string,$A(A3)
0003EFDC <AmiBlitz3.ab2@12229>    BNE.w rongtypeerr
0003EFE0 <AmiBlitz3.ab2@12230>    BSR.w get1bytemain
0003EFE4 <AmiBlitz3.ab2@12231> BRA.w JL_0_8FE8
0003EFE8 <AmiBlitz3.ab2@12234>    BSR.w getparameter2
0003EFEE <AmiBlitz3.ab2@12235>   LEA newtypebase,A2
0003EFF2 <AmiBlitz3.ab2@12236>    BSR.w findtype
0003EFF6 <AmiBlitz3.ab2@12237>    BNE.w notypeerr
0003EFFA <AmiBlitz3.ab2@12238>   CMPA.l $A(A3),A2
0003EFFE <AmiBlitz3.ab2@12239>    BNE.w rongtypeerr
0003F006 <AmiBlitz3.ab2@12241>   BTST #$0,flagmask+1
0003F00A <AmiBlitz3.ab2@12242>    BEQ.w JL_0_8FFE
0003F010 <AmiBlitz3.ab2@12243>   BTST #$0,$7(A3)
0003F014 <AmiBlitz3.ab2@12244>    BEQ.w pointerr
0003F018 <AmiBlitz3.ab2@12247>   MOVEA.l $A(A3),A2
0003F01A <AmiBlitz3.ab2@12248> RTS
0003F01C <AmiBlitz3.ab2@12252>    TST.l D3                                                ;newtype >32kb  .w to .l
0003F020 <AmiBlitz3.ab2@12253>    BEQ.w JL_0_9042
0003F02A <AmiBlitz3.ab2@12254>    MOVE.l destpointer,loada
0003F02E <AmiBlitz3.ab2@12257> BRA JL_0_9032
0003F032 <AmiBlitz3.ab2@12259>   CMP.w #$9,D3                                             ;_addq_arrays
0003F036 <AmiBlitz3.ab2@12260>    BCC.w JL_0_9032
0003F03C <AmiBlitz3.ab2@12261>   MOVE.w d3,arrayoffset
0003F040 <AmiBlitz3.ab2@12262>   ANDI.w #$7,D3
0003F042 <AmiBlitz3.ab2@12263>   LSL.w #8,D3
0003F044 <AmiBlitz3.ab2@12264>   LSL.w #1,D3
0003F04C <AmiBlitz3.ab2@12265>   ANDI.w #$F1FF,addqa0
0003F052 <AmiBlitz3.ab2@12266>   OR.w D3,addqa0
0003F058 <AmiBlitz3.ab2@12267>   MOVE.w addqa0,D1
0003F05C <AmiBlitz3.ab2@12268> BRA.w writeword
0003F062 <AmiBlitz3.ab2@12271>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0003F066 <AmiBlitz3.ab2@12272>   BGT longoffset
0003F06C <AmiBlitz3.ab2@12273>   MOVE.w D3,leaa0a0+2
0003F072 <AmiBlitz3.ab2@12274>   MOVE.w d3,arrayoffset
0003F078 <AmiBlitz3.ab2@12275>   MOVE.l leaa0a0,D1
0003F07C <AmiBlitz3.ab2@12276>   BSR.w writelong
0003F07E <AmiBlitz3.ab2@12279> RTS
0003F082 <AmiBlitz3.ab2@12282>    MOVE.w #$d5fc,d1
0003F086 <AmiBlitz3.ab2@12283>    BSR writeword
0003F088 <AmiBlitz3.ab2@12284>    MOVE.l d3,d1
0003F08C <AmiBlitz3.ab2@12285>    BSR.w writelong
0003F08E <AmiBlitz3.ab2@12286> RTS
0003F092 <AmiBlitz3.ab2@12290>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0003F096 <AmiBlitz3.ab2@12293>    BCS.w arrchk3                                           
0003F09C <AmiBlitz3.ab2@12294>    JSR $20000                                              ;jsr 0
0003F0A2 <AmiBlitz3.ab2@12300>   TST.b fast
0003F0A6 <AmiBlitz3.ab2@12301>   BEQ 'l1
0003F0A8 <AmiBlitz3.ab2@12302>    MOVEQ #0,d1                                             ;faster arrays
0003F0AE <AmiBlitz3.ab2@12303>    MOVE.w regnum,d2
0003F0B0 <AmiBlitz3.ab2@12304>    MOVE.w d2,d1
0003F0B2 <AmiBlitz3.ab2@12305>    LSL.w #8,d1
0003F0B4 <AmiBlitz3.ab2@12306>    LSL.w #4,d1
0003F0B6 <AmiBlitz3.ab2@12307>    ADD.w d2,d1
0003F0BC <AmiBlitz3.ab2@12308>    OR.l #$4c2d0000,d1
0003F0C2 <AmiBlitz3.ab2@12309>    TST.w varmode
0003F0C6 <AmiBlitz3.ab2@12310>    BEQ 'l1a
0003F0CA <AmiBlitz3.ab2@12311>    BCLR #16,d1
0003F0CE <AmiBlitz3.ab2@12314>    BSR writelong
0003F0D2 <AmiBlitz3.ab2@12315>    MOVE.w $4(A7),D1
0003F0D6 <AmiBlitz3.ab2@12316>    BSR.w writeword
0003F0DC <AmiBlitz3.ab2@12317>    MOVE.w regnum,D1
0003F0DE <AmiBlitz3.ab2@12318>   SUBQ.w #1,D1
0003F0E0 <AmiBlitz3.ab2@12319>   LSL.w #8,D1
0003F0E2 <AmiBlitz3.ab2@12320>   LSL.w #1,D1
0003F0E6 <AmiBlitz3.ab2@12321>   ORI.w #$D080,D1
0003F0EC <AmiBlitz3.ab2@12322>   OR.w regnum,D1
0003F0F0 <AmiBlitz3.ab2@12323>    BSR.w writeword
0003F0F2 <AmiBlitz3.ab2@12324> RTS
0003F0F8 <AmiBlitz3.ab2@12327>   MOVE.w regnum,D2
0003F0FC <AmiBlitz3.ab2@12328>   MOVE.w arrmul1(PC),D1
0003F0FE <AmiBlitz3.ab2@12329>   OR.w D2,D1
0003F100 <AmiBlitz3.ab2@12330>   SUBQ.w #1,D1
0003F104 <AmiBlitz3.ab2@12331>    BSR.w writeword
0003F108 <AmiBlitz3.ab2@12332>   MOVE.w arrmul2(PC),D1
0003F10A <AmiBlitz3.ab2@12333>   OR.w D2,D1
0003F10C <AmiBlitz3.ab2@12334>   MOVE.w D2,D3
0003F10E <AmiBlitz3.ab2@12335>   SUBQ.w #1,D3
0003F110 <AmiBlitz3.ab2@12336>   LSL.w #8,D3
0003F112 <AmiBlitz3.ab2@12337>   LSL.w #1,D3
0003F114 <AmiBlitz3.ab2@12338>   OR.w D3,D1
0003F118 <AmiBlitz3.ab2@12339>    BSR.w writeword
0003F11C <AmiBlitz3.ab2@12340>   MOVE.w arrmul3(PC),D1
0003F11E <AmiBlitz3.ab2@12341>   MOVE.w D2,D3
0003F120 <AmiBlitz3.ab2@12342>   LSL.w #8,D3
0003F122 <AmiBlitz3.ab2@12343>   LSL.w #1,D3
0003F124 <AmiBlitz3.ab2@12344>   OR.w D3,D1
0003F128 <AmiBlitz3.ab2@12345>    BSR.w pokewda5s
0003F12C <AmiBlitz3.ab2@12346>   MOVE.w $4(A7),D1
0003F12E <AmiBlitz3.ab2@12347>   ADDQ.w #2,D1
0003F132 <AmiBlitz3.ab2@12348>    BSR.w writeword
0003F136 <AmiBlitz3.ab2@12349>   MOVE.w arrmul4(PC),D1
0003F138 <AmiBlitz3.ab2@12350>   MOVE.w D2,D3
0003F13A <AmiBlitz3.ab2@12351>   SUBQ.w #1,D3
0003F13C <AmiBlitz3.ab2@12352>   LSL.w #8,D3
0003F13E <AmiBlitz3.ab2@12353>   LSL.w #1,D3
0003F140 <AmiBlitz3.ab2@12354>   OR.w D3,D1
0003F144 <AmiBlitz3.ab2@12355>    BSR.w pokewda5s
0003F148 <AmiBlitz3.ab2@12356>   MOVE.w $4(A7),D1
0003F14C <AmiBlitz3.ab2@12357>    BSR.w writeword
0003F150 <AmiBlitz3.ab2@12358>   MOVE.w arrmul5(PC),D1
0003F152 <AmiBlitz3.ab2@12359>   OR.w D2,D1
0003F154 <AmiBlitz3.ab2@12360>   SUBQ.w #1,D1
0003F158 <AmiBlitz3.ab2@12361>    BSR.w writeword
0003F15C <AmiBlitz3.ab2@12362>   MOVE.w arrmul6(PC),D1
0003F15E <AmiBlitz3.ab2@12363>   OR.w D2,D1
0003F160 <AmiBlitz3.ab2@12364>   SUBQ.w #1,D1
0003F164 <AmiBlitz3.ab2@12365>    BSR.w writeword
0003F168 <AmiBlitz3.ab2@12366>   MOVE.w arrmul7(PC),D1
0003F16A <AmiBlitz3.ab2@12367>   OR.w D2,D1
0003F16C <AmiBlitz3.ab2@12368>   SUBQ.w #1,D1
0003F16E <AmiBlitz3.ab2@12369>   MOVE.w D2,D3
0003F170 <AmiBlitz3.ab2@12370>   LSL.w #8,D3
0003F172 <AmiBlitz3.ab2@12371>   LSL.w #1,D3
0003F174 <AmiBlitz3.ab2@12372>   OR.w D3,D1
0003F178 <AmiBlitz3.ab2@12373>    BSR.w writeword
0003F17C <AmiBlitz3.ab2@12374>   MOVE.w arrmul8(PC),D1
0003F17E <AmiBlitz3.ab2@12375>   MOVE.w D2,D3
0003F180 <AmiBlitz3.ab2@12376>   SUBQ.w #1,D3
0003F182 <AmiBlitz3.ab2@12377>   LSL.w #8,D3
0003F184 <AmiBlitz3.ab2@12378>   LSL.w #1,D3
0003F186 <AmiBlitz3.ab2@12379>   OR.w D3,D1
0003F18A <AmiBlitz3.ab2@12380>    BSR.w writeword
0003F190 <AmiBlitz3.ab2@12381>   MOVE.w regnum,D1
0003F192 <AmiBlitz3.ab2@12382>   SUBQ.w #1,D1
0003F194 <AmiBlitz3.ab2@12383>   LSL.w #8,D1
0003F196 <AmiBlitz3.ab2@12384>   LSL.w #1,D1
0003F19A <AmiBlitz3.ab2@12385>   ORI.w #$D080,D1
0003F1A0 <AmiBlitz3.ab2@12386>   OR.w regnum,D1
0003F1A4 <AmiBlitz3.ab2@12387> BRA.w writeword
0003F1A6 <AmiBlitz3.ab2@12395> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0003F1A8 <AmiBlitz3.ab2@12396> arrmul2:   MOVE  d0,d0
0003F1AC <AmiBlitz3.ab2@12397> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0003F1B0 <AmiBlitz3.ab2@12398> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0003F1B2 <AmiBlitz3.ab2@12400> arrmul5:   SWAP d0
0003F1B4 <AmiBlitz3.ab2@12401> arrmul6:   CLR d0
0003F1B6 <AmiBlitz3.ab2@12402> arrmul7:   ADD.l d0,d0
0003F1B8 <AmiBlitz3.ab2@12403> arrmul8:   MOVE.l (a7)+,d0
0003F1BC <AmiBlitz3.ab2@12408> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0003F1C0 <AmiBlitz3.ab2@12409> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0003F1C2 <AmiBlitz3.ab2@12410> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0003F1C8 <AmiBlitz3.ab2@12428>   CLR.l lastoffset_org
0003F1CE <AmiBlitz3.ab2@12429>   BTST #$1,$7(A3)
0003F1D2 <AmiBlitz3.ab2@12430>    BEQ.w calcvar__notarr
0003F1D8 <AmiBlitz3.ab2@12431>   MOVE.w notshared,D1
0003F1DC <AmiBlitz3.ab2@12432>    BNE.w noarrerr
0003F1E0 <AmiBlitz3.ab2@12433>    BSR.w get1bytemain
0003F1E4 <AmiBlitz3.ab2@12434>   CMP.w #$29,D0
0003F1E8 <AmiBlitz3.ab2@12435>    BNE.w calcvar__notalist
0003F1EE <AmiBlitz3.ab2@12436>   BTST #$0,$6(A3)
0003F1F2 <AmiBlitz3.ab2@12437>    BEQ.w nolisterr
0003F1FA <AmiBlitz3.ab2@12438>   MOVE.w $4(A3),listcode1+2
0003F1FE <AmiBlitz3.ab2@12439>   MOVE.l listcode1(PC),D1
0003F202 <AmiBlitz3.ab2@12440>    BSR.w pokela5s
0003F206 <AmiBlitz3.ab2@12441>   MOVE.l listcode2(PC),D1
0003F20A <AmiBlitz3.ab2@12442>    BSR.w writelong
0003F210 <AmiBlitz3.ab2@12443>   TST.b debugmode
0003F214 <AmiBlitz3.ab2@12444>    BEQ.w calcvar__nolrerr
0003F216 <AmiBlitz3.ab2@12448>   MOVE.l A2,-(A7)
0003F21A <AmiBlitz3.ab2@12449>   MOVE.w #$C315,D1
0003F21E <AmiBlitz3.ab2@12450>    BSR.w Atokejsr
0003F220 <AmiBlitz3.ab2@12451>   MOVEA.l (A7)+,A2
0003F224 <AmiBlitz3.ab2@12454>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0003F228 <AmiBlitz3.ab2@12456>    BSR.w writeword
0003F22C <AmiBlitz3.ab2@12457> BRA.w calcvar__normalar
0003F22E <AmiBlitz3.ab2@12460> calcvar__listoff:   Ds.w 1
0003F234 <AmiBlitz3.ab2@12464>   CLR.w calcvar__listoff
0003F23A <AmiBlitz3.ab2@12465>   BTST #$0,$6(A3)
0003F23E <AmiBlitz3.ab2@12466>    BEQ.w calcvar__knop
0003F246 <AmiBlitz3.ab2@12467>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0003F24A <AmiBlitz3.ab2@12470>   MOVEM.l A2-A3,-(A7)
0003F250 <AmiBlitz3.ab2@12471>   MOVE.w varmode,-(A7)
0003F254 <AmiBlitz3.ab2@12472>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0003F258 <AmiBlitz3.ab2@12473>   MOVE.w $4(A3),-(A7)                                       ;varoff
0003F25A <AmiBlitz3.ab2@12474>   MOVE.l A2,-(A7)
0003F260 <AmiBlitz3.ab2@12475>   MOVE.w flagmask,-(A7)
0003F26A <AmiBlitz3.ab2@12477>   MOVE.w oldqflag,instringon
0003F270 <AmiBlitz3.ab2@12478>   MOVEA.l lastsourcepos,A5
0003F274 <AmiBlitz3.ab2@12479>    BSR.w arreval
0003F27A <AmiBlitz3.ab2@12480>   MOVE.w (A7)+,flagmask
0003F282 <AmiBlitz3.ab2@12481>   MOVE.w $8(A7),varmode
0003F288 <AmiBlitz3.ab2@12482>   TST.b debugmode
0003F28C <AmiBlitz3.ab2@12483>    BEQ.w calcvar__noszchk
0003F28E <AmiBlitz3.ab2@12487>   MOVEA.l (A7)+,A2
0003F290 <AmiBlitz3.ab2@12488>   MOVEQ.l #$04,D1
0003F298 <AmiBlitz3.ab2@12489>   BTST #$0,flagmask+1                                      ;pointer?
0003F29C <AmiBlitz3.ab2@12490>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0003F2A0 <AmiBlitz3.ab2@12491>   MOVE.w $8(A2),D1
0003F2A4 <AmiBlitz3.ab2@12494>   ADD.w calcvar__listoff(PC),D1
0003F2A8 <AmiBlitz3.ab2@12495>   BSR.w JL_0_B6DE
0003F2AE <AmiBlitz3.ab2@12496>   ADDQ.w #1,regnum
0003F2B0 <AmiBlitz3.ab2@12499>   ADDQ.w #4,(A7)
0003F2B4 <AmiBlitz3.ab2@12500>   TST.w $4(A7)
0003F2B8 <AmiBlitz3.ab2@12501>    BEQ.w calcvar__isglob
0003F2BA <AmiBlitz3.ab2@12502>   SUBQ.w #8,(A7)                                           ;range check local array
0003F2C0 <AmiBlitz3.ab2@12505>   TST.b debugmode
0003F2C4 <AmiBlitz3.ab2@12506>    BEQ.w calcvar__noer1
0003F2CA <AmiBlitz3.ab2@12507>   MOVE.w regnum,D1
0003F2CC <AmiBlitz3.ab2@12508>   SUBQ.w #1,D1
0003F2CE <AmiBlitz3.ab2@12509>   LSL.w #8,D1
0003F2D0 <AmiBlitz3.ab2@12510>   LSL.w #1,D1
0003F2D4 <AmiBlitz3.ab2@12511>   OR.w zarrchk(PC),D1
0003F2D8 <AmiBlitz3.ab2@12512>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0003F2DA <AmiBlitz3.ab2@12513>   MOVE.w (A7),D1
0003F2DE <AmiBlitz3.ab2@12514>    BSR.w writeword
0003F2E2 <AmiBlitz3.ab2@12515>   MOVE.l arrchk2(PC),D1
0003F2E6 <AmiBlitz3.ab2@12516>    BSR.w writelong
0003F2EA <AmiBlitz3.ab2@12517>   MOVE.w #$C309,D1
0003F2EE <AmiBlitz3.ab2@12518>    BSR.w Atokejsr
0003F2F2 <AmiBlitz3.ab2@12521>   SUBQ.w #1,$2(A7)
0003F2F6 <AmiBlitz3.ab2@12522>    BEQ.w calcvar__ardone
0003F2FA <AmiBlitz3.ab2@12523>   CMP.w #$2C,D0
0003F2FE <AmiBlitz3.ab2@12524>    BNE.w syntaxerr
0003F304 <AmiBlitz3.ab2@12525>    TST.b fast
0003F308 <AmiBlitz3.ab2@12526>    BNE 'l1
0003F30C <AmiBlitz3.ab2@12527>    BSR.w arrevalchk
0003F310 <AmiBlitz3.ab2@12528> BRA 'l2
0003F314 <AmiBlitz3.ab2@12531>   BSR arreval
0003F31C <AmiBlitz3.ab2@12534>   MOVE.w $4(A7),varmode
0003F320 <AmiBlitz3.ab2@12535>   BSR.w JL_0_9052
0003F324 <AmiBlitz3.ab2@12536> BRA.w calcvar__arloop
0003F328 <AmiBlitz3.ab2@12540>   CMP.w #$29,D0
0003F32C <AmiBlitz3.ab2@12541>    BNE.w syntaxerr
0003F332 <AmiBlitz3.ab2@12542>   SUBQ.w #1,regnum
0003F334 <AmiBlitz3.ab2@12543>   ADDQ.w #6,A7
0003F338 <AmiBlitz3.ab2@12544>   MOVEM.l (A7)+,A2-A3
0003F340 <AmiBlitz3.ab2@12545>   MOVE.w $4(A3),movea5a0+2
0003F346 <AmiBlitz3.ab2@12546>   MOVE.l movea5a0,D1
0003F34A <AmiBlitz3.ab2@12547>    BSR.w pokela5s
0003F350 <AmiBlitz3.ab2@12548>   MOVE.w regnum,D1
0003F354 <AmiBlitz3.ab2@12549>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0003F358 <AmiBlitz3.ab2@12550>    BSR.w writeword
0003F35E <AmiBlitz3.ab2@12551>   BTST #$0,$6(A3)
0003F362 <AmiBlitz3.ab2@12552>    BEQ.w calcvar__normalar
0003F366 <AmiBlitz3.ab2@12556>   MOVE.w listarfix(PC),D1
0003F36A <AmiBlitz3.ab2@12557>    BSR.w writeword
0003F36E <AmiBlitz3.ab2@12560>   BSR.w get1bytemain
0003F374 <AmiBlitz3.ab2@12564>   BTST #$0,$7(A3)
0003F378 <AmiBlitz3.ab2@12565>    BEQ.w calcvar__noppnt
0003F37C <AmiBlitz3.ab2@12566>   CMP.w #$5C,D0
0003F380 <AmiBlitz3.ab2@12567>    BNE.w calcvar__pmskip
0003F384 <AmiBlitz3.ab2@12568>   MOVE.w calcvar__pfix(PC),D1
0003F388 <AmiBlitz3.ab2@12569>    BSR.w writeword
0003F38C <AmiBlitz3.ab2@12572>   MOVE.w #$8000,D2
0003F390 <AmiBlitz3.ab2@12573> BRA.w calcvar__loopml
0003F394 <AmiBlitz3.ab2@12576>   MOVE.w #$C000,D2
0003F398 <AmiBlitz3.ab2@12577> BRA.w calcvar__loopml
0003F39A <AmiBlitz3.ab2@12581> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0003F39E <AmiBlitz3.ab2@12586>   CMP.w #$28,D0
0003F3A2 <AmiBlitz3.ab2@12587>    BEQ.w noarrerr
0003F3AA <AmiBlitz3.ab2@12588>   CMPI.l #$100,$4(A2)
0003F3AE <AmiBlitz3.ab2@12589>    BCS.w calcvar__simpvar
0003F3B4 <AmiBlitz3.ab2@12590>   BTST #$0,$7(A3)
0003F3B8 <AmiBlitz3.ab2@12591>    BEQ.w calcvar__notap
0003F3BC <AmiBlitz3.ab2@12595>   CMP.w #$5C,D0
0003F3C0 <AmiBlitz3.ab2@12596>    BEQ.w calcvar__notap
0003F3C2 <AmiBlitz3.ab2@12597>   MOVEQ.l #$00,D2
0003F3C6 <AmiBlitz3.ab2@12598> BRA.w calcvar__simpvar2
0003F3CA <AmiBlitz3.ab2@12601>   MOVE.w #$8000,D2
0003F3D2 <AmiBlitz3.ab2@12602>   MOVE.w $4(A3),movea5a0+2
0003F3D8 <AmiBlitz3.ab2@12603>   MOVE.l movea5a0,D1
0003F3DC <AmiBlitz3.ab2@12604>    BSR.w pokela5s                                         ;move.l x(a5),a2
0003F3E2 <AmiBlitz3.ab2@12606>    TST.b debugmode
0003F3E6 <AmiBlitz3.ab2@12607>    BEQ.w 'skip
0003F3EA <AmiBlitz3.ab2@12608>    MOVE.w #$c320,D1
0003F3F0 <AmiBlitz3.ab2@12609>    JSR Atokejsr
0003F3F2 <AmiBlitz3.ab2@12613>   MOVEQ.l #$00,D3
0003F3F6 <AmiBlitz3.ab2@12616>   CMP.w #$5C,D0
0003F3FA <AmiBlitz3.ab2@12617>    BNE.w calcvar__done
0003F402 <AmiBlitz3.ab2@12618>   CMPI.l #$100,$4(A2)
0003F406 <AmiBlitz3.ab2@12619>    BCS.w rongtypeerr
0003F408 <AmiBlitz3.ab2@12620>   MOVE.w D2,-(A7)
0003F40C <AmiBlitz3.ab2@12621>    BSR.w getparameter2
0003F410 <AmiBlitz3.ab2@12622>    BEQ.w syntaxerr
0003F412 <AmiBlitz3.ab2@12623>   ADDQ.w #4,A2
0003F416 <AmiBlitz3.ab2@12624>    BSR.w findvariable2
0003F41A <AmiBlitz3.ab2@12625>    BNE.w noofferr
0003F41C <AmiBlitz3.ab2@12626>   MOVE.w (A7)+,D2
0003F41E <AmiBlitz3.ab2@12627>   MOVEA.l A2,A3                                             ;pointer to offset
0003F422 <AmiBlitz3.ab2@12628>   MOVEA.l $A(A3),A2                                         ;pointer to type
0003F424 <AmiBlitz3.ab2@12629>   MOVEQ #0,d1
0003F428 <AmiBlitz3.ab2@12630>   MOVE.w 4(a3),d1
0003F42A <AmiBlitz3.ab2@12631>   ADD.l d1,d3
0003F430 <AmiBlitz3.ab2@12633>   MOVE.l A3,lastoffset_org
0003F434 <AmiBlitz3.ab2@12634>   CMP.w #$5B,D0
0003F438 <AmiBlitz3.ab2@12635>    BNE.w calcvar__realdone
0003F43E <AmiBlitz3.ab2@12636>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0003F442 <AmiBlitz3.ab2@12637>    BEQ.w rongtypeerr
0003F446 <AmiBlitz3.ab2@12638>    BSR.w JL_0_9004
0003F44A <AmiBlitz3.ab2@12639>   MOVEM.l A2-A3,-(A7)
0003F450 <AmiBlitz3.ab2@12640>   MOVE.w varmode,-(A7)
0003F456 <AmiBlitz3.ab2@12641>   MOVE.l lastoffset_org,-(A7)
0003F45C <AmiBlitz3.ab2@12642>   MOVE.w pusha2,D1
0003F460 <AmiBlitz3.ab2@12643>    BSR.w writeword
0003F462 <AmiBlitz3.ab2@12644>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0003F46C <AmiBlitz3.ab2@12645>   MOVE.l destpointer,deststore
0003F472 <AmiBlitz3.ab2@12646>    MOVE.l rightsidetype,-(a7)
0003F478 <AmiBlitz3.ab2@12647>    MOVE.l leftsidetype,-(a7)
0003F47E <AmiBlitz3.ab2@12648>    CLR.l rightsidetype
0003F484 <AmiBlitz3.ab2@12649>    CLR.l leftsidetype
0003F488 <AmiBlitz3.ab2@12650>    BSR.w eval
0003F48E <AmiBlitz3.ab2@12651>    MOVE.l (a7)+,rightsidetype
0003F494 <AmiBlitz3.ab2@12652>    MOVE.l (a7)+,leftsidetype
0003F498 <AmiBlitz3.ab2@12653>   CMP.w #$5D,D0
0003F49C <AmiBlitz3.ab2@12654>    BNE.w syntaxerr
0003F4A2 <AmiBlitz3.ab2@12655>   TST.b fast                                               ;a2,-(a7) array
0003F4A6 <AmiBlitz3.ab2@12656>   BEQ calcvar__loop0_l10
0003F4AC <AmiBlitz3.ab2@12660>   MOVE.l destpointer,d1
0003F4B2 <AmiBlitz3.ab2@12661>   SUB.l deststore,d1
0003F4B8 <AmiBlitz3.ab2@12662>   CMP.l #4,d1
0003F4BC <AmiBlitz3.ab2@12663>   BNE calcvar__loop0_l10
0003F4C2 <AmiBlitz3.ab2@12664>   MOVE.l destpointer,a4
0003F4C8 <AmiBlitz3.ab2@12665>   MOVE.l -4(a4),-6(a4)
0003F4CE <AmiBlitz3.ab2@12666>   SUBQ.l #2,destpointer
0003F4D4 <AmiBlitz3.ab2@12667>   CLR.l imm_addr
0003F4DA <AmiBlitz3.ab2@12668>   CLR.l load_var_addr
0003F4DE <AmiBlitz3.ab2@12669> BRA calcvar__loop0_l20
0003F4E4 <AmiBlitz3.ab2@12672>   MOVE.w pulla2,D1
0003F4E8 <AmiBlitz3.ab2@12673>    BSR.w writeword
0003F4EE <AmiBlitz3.ab2@12676>   MOVE.l (A7)+,lastoffset_org
0003F4F4 <AmiBlitz3.ab2@12677>   MOVE.w (A7)+,varmode
0003F4F8 <AmiBlitz3.ab2@12678>   MOVEM.l (A7)+,A2-A3
0003F4FE <AmiBlitz3.ab2@12684>   TST.w debugmode
0003F502 <AmiBlitz3.ab2@12685>    BEQ.b calcvar__nobchk
0003F506 <AmiBlitz3.ab2@12686>   MOVE.w $8(A3),D1
0003F50A <AmiBlitz3.ab2@12687>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0003F510 <AmiBlitz3.ab2@12691>   MOVE.w D1,brchkcode+2
0003F516 <AmiBlitz3.ab2@12692>   MOVE.w regnum,D1
0003F518 <AmiBlitz3.ab2@12693>   LSL.w #8,D1
0003F51A <AmiBlitz3.ab2@12694>   LSL.w #1,D1
0003F51E <AmiBlitz3.ab2@12695>   OR.w brchkcode0(PC),D1
0003F524 <AmiBlitz3.ab2@12696>   MOVE.w D1,brchkcode
0003F528 <AmiBlitz3.ab2@12697>   MOVE.l brchkcode(PC),D1
0003F52C <AmiBlitz3.ab2@12698>    BSR.w writelong
0003F530 <AmiBlitz3.ab2@12699>   MOVE.l brchkcode+4(PC),D1
0003F534 <AmiBlitz3.ab2@12700>    BSR.w writelong
0003F538 <AmiBlitz3.ab2@12701>   MOVE.w brchkcode+8(PC),D1
0003F53C <AmiBlitz3.ab2@12702>    BSR.w writeword
0003F53E <AmiBlitz3.ab2@12705>   MOVEQ.l #$04,D1
0003F544 <AmiBlitz3.ab2@12706>   BTST #$0,$7(A3)
0003F548 <AmiBlitz3.ab2@12707>    BNE.w calcvar__dothemul
0003F54C <AmiBlitz3.ab2@12708>   MOVE.w $8(A2),D1
0003F550 <AmiBlitz3.ab2@12711>   BSR.w JL_0_B6DE
0003F556 <AmiBlitz3.ab2@12712>   MOVE.w addrega2,D1
0003F55C <AmiBlitz3.ab2@12713>   OR.w regnum,D1
0003F560 <AmiBlitz3.ab2@12714>    OR.w #$100,d1                                           ;>32kb types
0003F564 <AmiBlitz3.ab2@12715>    BSR.w writeword
0003F568 <AmiBlitz3.ab2@12716>    BSR.w get1bytemain
0003F56A <AmiBlitz3.ab2@12717>   MOVEQ.l #$00,D3
0003F56E <AmiBlitz3.ab2@12718>   MOVE.w #$8000,D2
0003F574 <AmiBlitz3.ab2@12721>   BTST #$0,$7(A3)
0003F578 <AmiBlitz3.ab2@12722>    BNE.w calcvar__pointer
0003F57C <AmiBlitz3.ab2@12723> BRA.w calcvar__loop0
0003F580 <AmiBlitz3.ab2@12727>  CMP.w #$5C,D0
0003F584 <AmiBlitz3.ab2@12728>    BNE.w calcvar__done3
0003F586 <AmiBlitz3.ab2@12729>   TST.w D3
0003F58A <AmiBlitz3.ab2@12730>    BNE.w calcvar__pskip
0003F590 <AmiBlitz3.ab2@12731>   MOVE.w movea0,D1
0003F594 <AmiBlitz3.ab2@12732>    BSR.w writeword
0003F598 <AmiBlitz3.ab2@12733> BRA.w calcvar__pmore
0003F59E <AmiBlitz3.ab2@12736>   MOVE.w D3,movea0a0+2
0003F5A4 <AmiBlitz3.ab2@12737>   MOVE.l movea0a0,D1
0003F5A8 <AmiBlitz3.ab2@12738>    BSR.w writelong
0003F5AE <AmiBlitz3.ab2@12741>   BTST #$2,$7(A3)
0003F5B2 <AmiBlitz3.ab2@12742>    BEQ.w calcvar__loopml
0003F5B8 <AmiBlitz3.ab2@12743>   MOVE.l adda0a0,D1
0003F5BC <AmiBlitz3.ab2@12744>    BSR.w writelong
0003F5C0 <AmiBlitz3.ab2@12745> BRA.w calcvar__loopml
0003F5C4 <AmiBlitz3.ab2@12748>   BSET #$E,D2
0003F5CA <AmiBlitz3.ab2@12749>   BTST #$2,$7(A3)
0003F5CE <AmiBlitz3.ab2@12750>    BNE.w calcvar__done
0003F5D2 <AmiBlitz3.ab2@12751>   BSET #$D,D2
0003F5DA <AmiBlitz3.ab2@12754>   CMPI.l #$100,$4(A2)
0003F5DE <AmiBlitz3.ab2@12755>    BCC.w calcvar__done2
0003F5E2 <AmiBlitz3.ab2@12756>   MOVE.b $7(A2),D2
0003F5E6 <AmiBlitz3.ab2@12759> BRA.w JL_0_9004
0003F5EA <AmiBlitz3.ab2@12762>   MOVE.w $6(A2),D2
0003F5EE <AmiBlitz3.ab2@12765>   MOVE.w $4(A3),D3
0003F5F4 <AmiBlitz3.ab2@12766>   BTST #$0,$7(A3)
0003F5F8 <AmiBlitz3.ab2@12767>    BEQ.w calcvar__nopoint
0003F5FC <AmiBlitz3.ab2@12768>   BSET #$E,D2
0003F5FE <AmiBlitz3.ab2@12771> RTS
0003F602 <AmiBlitz3.ab2@12775> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0003F606 <AmiBlitz3.ab2@12776> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0003F608 <AmiBlitz3.ab2@12777>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0003F60A <AmiBlitz3.ab2@12778>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0003F60C <AmiBlitz3.ab2@12779>              Dc.b $4E,$40                                  ;TRAP    #00
0003F612 <AmiBlitz3.ab2@12787>   TST.w varmode
0003F616 <AmiBlitz3.ab2@12788>    BEQ.w writeword
0003F61A <AmiBlitz3.ab2@12789>   BCLR #$0,D1
0003F61E <AmiBlitz3.ab2@12790> BRA.w writeword
0003F624 <AmiBlitz3.ab2@12793>   TST.w varmode
0003F628 <AmiBlitz3.ab2@12794>    BEQ.w writeword
0003F62C <AmiBlitz3.ab2@12795>   BCLR #$9,D1
0003F630 <AmiBlitz3.ab2@12796> BRA.w writeword
0003F636 <AmiBlitz3.ab2@12799>   TST.w proceduremode
0003F63A <AmiBlitz3.ab2@12800>    BEQ.w writelong
0003F63E <AmiBlitz3.ab2@12801>   BCLR #$19,D1
0003F642 <AmiBlitz3.ab2@12802> BRA.w writelong
0003F648 <AmiBlitz3.ab2@12805>   TST.w varmode
0003F64C <AmiBlitz3.ab2@12806>   BEQ.w writelong
0003F650 <AmiBlitz3.ab2@12807>   BCLR #$10,D1
0003F656 <AmiBlitz3.ab2@12810>   ADDQ.l #1,destpointer
0003F65E <AmiBlitz3.ab2@12811>   BCLR #$0,destpointer+3
0003F664 <AmiBlitz3.ab2@12812>   MOVEA.l destpointer,A4
0003F66A <AmiBlitz3.ab2@12813>   CMPA.l destbufferend,A4
0003F66E <AmiBlitz3.ab2@12814>    BCC.w writeword__overa
0003F670 <AmiBlitz3.ab2@12815>   MOVE.l D1,(A4)+
0003F676 <AmiBlitz3.ab2@12818>   MOVE.l A4,destpointer
0003F67A <AmiBlitz3.ab2@12819>   CMPA.l bigpc(PC),A4
0003F67E <AmiBlitz3.ab2@12820>    BHI.w writeword__nbp
0003F680 <AmiBlitz3.ab2@12821> RTS
0003F688 <AmiBlitz3.ab2@12824>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0003F68E <AmiBlitz3.ab2@12825>   CLR.b fast
0003F694 <AmiBlitz3.ab2@12826>   CLR.b fpu
0003F69A <AmiBlitz3.ab2@12827>   CLR.b iee
0003F69C <AmiBlitz3.ab2@12828>   ADDQ.w #4,A4
0003F6A0 <AmiBlitz3.ab2@12829> BRA.w writeword__msa
0003F6A6 <AmiBlitz3.ab2@12835>   ADDQ.l #1,destpointer
0003F6AE <AmiBlitz3.ab2@12836>   BCLR #$0,destpointer+3
0003F6B4 <AmiBlitz3.ab2@12837>   MOVEA.l destpointer,A4
0003F6BA <AmiBlitz3.ab2@12838>   CMPA.l destbufferend,A4
0003F6BE <AmiBlitz3.ab2@12839>    BCC.w writeword__over
0003F6C0 <AmiBlitz3.ab2@12840>   MOVE.w D1,(A4)+
0003F6C6 <AmiBlitz3.ab2@12843>   MOVE.l A4,destpointer
0003F6CA <AmiBlitz3.ab2@12844>   CMPA.l bigpc(PC),A4
0003F6CE <AmiBlitz3.ab2@12845>    BHI.w writeword__nbp
0003F6D0 <AmiBlitz3.ab2@12846> RTS
0003F6D6 <AmiBlitz3.ab2@12849>   ADDQ.l #1,destpointer
0003F6DE <AmiBlitz3.ab2@12850>   BCLR #$0,destpointer+3
0003F6E4 <AmiBlitz3.ab2@12851>   MOVEA.l destpointer,A4
0003F6EA <AmiBlitz3.ab2@12852>   CMPA.l destbufferend,A4
0003F6EE <AmiBlitz3.ab2@12853>    BCC.w writeword__over
0003F6F0 <AmiBlitz3.ab2@12854>   MOVE.w D1,(A4)+
0003F6F6 <AmiBlitz3.ab2@12855>   MOVE.l A4,destpointer
0003F6FA <AmiBlitz3.ab2@12856>   CMPA.l bigpc(PC),A4
0003F6FE <AmiBlitz3.ab2@12857>    BHI.w writeword__nbp
0003F700 <AmiBlitz3.ab2@12858> RTS
0003F706 <AmiBlitz3.ab2@12861>   TST.w cfetchmode
0003F70A <AmiBlitz3.ab2@12862>   BNE.w writeword__nbp2
0003F710 <AmiBlitz3.ab2@12863>   MOVE.l A4,bigpc
0003F712 <AmiBlitz3.ab2@12866> RTS
0003F71A <AmiBlitz3.ab2@12869>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0003F71C <AmiBlitz3.ab2@12870>   ADDQ.w #2,A4
0003F722 <AmiBlitz3.ab2@12871>   CLR.b fast
0003F728 <AmiBlitz3.ab2@12872>   CLR.b fpu
0003F72E <AmiBlitz3.ab2@12873>   CLR.b iee
0003F732 <AmiBlitz3.ab2@12874> BRA.w writeword__ms
0003F738 <AmiBlitz3.ab2@12878>   MOVEA.l destpointer,A4
0003F73E <AmiBlitz3.ab2@12879>   CMPA.l destbufferend,A4
0003F742 <AmiBlitz3.ab2@12880>    BCC.w writebyte__over
0003F744 <AmiBlitz3.ab2@12881>   MOVE.b D1,(A4)+
0003F74A <AmiBlitz3.ab2@12884>   MOVE.l A4,destpointer
0003F74E <AmiBlitz3.ab2@12885>   CMPA.l bigpc(PC),A4
0003F752 <AmiBlitz3.ab2@12886>    BHI.w writebyte__nbp
0003F754 <AmiBlitz3.ab2@12887> RTS
0003F75A <AmiBlitz3.ab2@12890>   TST.w cfetchmode
0003F75E <AmiBlitz3.ab2@12891>    BNE.w writebyte__nbp2
0003F764 <AmiBlitz3.ab2@12892>   MOVE.l A4,bigpc
0003F766 <AmiBlitz3.ab2@12895> RTS
0003F76E <AmiBlitz3.ab2@12898>   MOVE.w #-1,dontwrite
0003F770 <AmiBlitz3.ab2@12899>   ADDQ.w #1,A4
0003F776 <AmiBlitz3.ab2@12900>   CLR.b fast
0003F77C <AmiBlitz3.ab2@12901>   CLR.b fpu
0003F782 <AmiBlitz3.ab2@12902>   CLR.b iee
0003F786 <AmiBlitz3.ab2@12903> BRA.w writebyte__ms
0003F78A <AmiBlitz3.ab2@12906> bigpc:   Ds.l 1
0003F78C <AmiBlitz3.ab2@12910>   MOVE.w (A0)+,D1
0003F790 <AmiBlitz3.ab2@12911>   BSR.w writeword
0003F792 <AmiBlitz3.ab2@12914>     CMPA.l A1,A0
0003F796 <AmiBlitz3.ab2@12915>     BCC.w pokecode__done
0003F798 <AmiBlitz3.ab2@12916>       MOVE.w (A0)+,D1
0003F79C <AmiBlitz3.ab2@12917>       BSR.w writeword
0003F7A0 <AmiBlitz3.ab2@12918> BRA.w pokecode__loop
0003F7A2 <AmiBlitz3.ab2@12921> RTS
0003F7A4 <AmiBlitz3.ab2@12924>   MOVE.w (A0)+,D1
0003F7A8 <AmiBlitz3.ab2@12925>   BSR.w writeword
0003F7AA <AmiBlitz3.ab2@12926>   CMPA.l A1,A0
0003F7AE <AmiBlitz3.ab2@12927>   BCS.w pokecode2
0003F7B0 <AmiBlitz3.ab2@12928> RTS
0003F7B6 <AmiBlitz3.ab2@12934>   TST.b iniffcommand
0003F7BA <AmiBlitz3.ab2@12935>   BEQ 'l1
0003F7BE <AmiBlitz3.ab2@12936>     MOVE.w #$4880,D1
0003F7C4 <AmiBlitz3.ab2@12937>     OR.w regnum,D1
0003F7C8 <AmiBlitz3.ab2@12938>     BSR writeword
0003F7CA <AmiBlitz3.ab2@12941> RTS
0003F7CE <AmiBlitz3.ab2@12944>   BSR.w convert_byte_to_word
0003F7D4 <AmiBlitz3.ab2@12947>   TST.b iee
0003F7D8 <AmiBlitz3.ab2@12948>   BEQ 'old
0003F7DC <AmiBlitz3.ab2@12949>   CMP.b #5,d2
0003F7E0 <AmiBlitz3.ab2@12950>   BEQ wtof
0003F7E4 <AmiBlitz3.ab2@12953>   MOVE.w #$48C0,D1
0003F7EA <AmiBlitz3.ab2@12954>   OR.w regnum,D1
0003F7EE <AmiBlitz3.ab2@12955> BRA.w writeword
0003F7F0 <AmiBlitz3.ab2@12958>   MOVEQ #0,d0
0003F7F6 <AmiBlitz3.ab2@12959>   MOVE.w regnum,d0
0003F7F8 <AmiBlitz3.ab2@12960>   ASL.l #7,d0
0003F7FE <AmiBlitz3.ab2@12961>   MOVE.l #$f2005000,d1
0003F800 <AmiBlitz3.ab2@12962>   OR.l d0,d1
0003F802 <AmiBlitz3.ab2@12963>   ASL.l #1,d0
0003F804 <AmiBlitz3.ab2@12964>   ASL.l #8,d0
0003F806 <AmiBlitz3.ab2@12965>   OR.l d0,d1
0003F80A <AmiBlitz3.ab2@12966> BRA writelong
0003F80E <AmiBlitz3.ab2@12970>   BSR.w convert_byte_to_word
0003F812 <AmiBlitz3.ab2@12973>   MOVE.w #$4840,D1
0003F818 <AmiBlitz3.ab2@12974>   OR.w regnum,D1
0003F81C <AmiBlitz3.ab2@12975>    BSR.w writeword
0003F820 <AmiBlitz3.ab2@12976>   MOVE.w #$4240,D1
0003F826 <AmiBlitz3.ab2@12977>   OR.w regnum,D1
0003F82A <AmiBlitz3.ab2@12978> BRA.w writeword
0003F82E <AmiBlitz3.ab2@12982>   CMP.w #$ffdc,d1
0003F832 <AmiBlitz3.ab2@12983>   BNE 'negfpu
0003F834 <AmiBlitz3.ab2@12984>   MOVEQ #0,d0
0003F83A <AmiBlitz3.ab2@12985>   MOVE.w regnum,d0
0003F83C <AmiBlitz3.ab2@12986>   ASL.l #7,d0
0003F842 <AmiBlitz3.ab2@12987>   MOVE.l #$f2004000,d1
0003F844 <AmiBlitz3.ab2@12988>   OR.l d0,d1
0003F846 <AmiBlitz3.ab2@12989>   ASL.l #1,d0
0003F848 <AmiBlitz3.ab2@12990>   ASL.l #8,d0
0003F84A <AmiBlitz3.ab2@12991>   OR.l d0,d1
0003F84E <AmiBlitz3.ab2@12992> BRA writelong
0003F850 <AmiBlitz3.ab2@12996>   MOVEQ #0,d1
0003F856 <AmiBlitz3.ab2@12997>   MOVE.w regnum,d1                                         ;fpu neg
0003F858 <AmiBlitz3.ab2@12998>   ASL.l #7,d1
0003F85E <AmiBlitz3.ab2@12999>   OR.l #$f200001a,d1
0003F860 <AmiBlitz3.ab2@13000>   MOVE.l d0,-(a7)
0003F862 <AmiBlitz3.ab2@13001>   MOVEQ #0,d0
0003F868 <AmiBlitz3.ab2@13002>   MOVE.w regnum,d0
0003F86A <AmiBlitz3.ab2@13003>   ASL.l #8,d0
0003F86C <AmiBlitz3.ab2@13004>   ASL.l #2,d0
0003F86E <AmiBlitz3.ab2@13005>   OR.l d0,d1
0003F870 <AmiBlitz3.ab2@13006>   MOVE.l (a7)+,d0
0003F874 <AmiBlitz3.ab2@13007> BRA writelong
0003F87A <AmiBlitz3.ab2@13010>    TST.b iee
0003F87E <AmiBlitz3.ab2@13011>    BNE wtof
0003F882 <AmiBlitz3.ab2@13012>    BSR.w convert_byte_to_long
0003F886 <AmiBlitz3.ab2@13015>    MOVE.w #$FFDC,D1
0003F88C <AmiBlitz3.ab2@13018>    TST.b iee
0003F890 <AmiBlitz3.ab2@13019>    BNE ltof
0003F896 <AmiBlitz3.ab2@13020>    MOVE.w D1,libjsr+2
0003F89A <AmiBlitz3.ab2@13021>    BSR.w JL_0_AD40
0003F89C <AmiBlitz3.ab2@13022>   MOVE.l D4,D1
0003F8A0 <AmiBlitz3.ab2@13023>    BSR.w JL_0_AD38
0003F8A4 <AmiBlitz3.ab2@13024>   MOVE.w #$C900,D1
0003F8A8 <AmiBlitz3.ab2@13025>    BSR.w Atokejsr
0003F8AC <AmiBlitz3.ab2@13026>    BSR.w JL_0_A352
0003F8B2 <AmiBlitz3.ab2@13027>   MOVE.l libjsr,D1
0003F8B6 <AmiBlitz3.ab2@13028>    BSR.w writelong
0003F8BA <AmiBlitz3.ab2@13029>    BSR.w JL_0_A36E
0003F8BC <AmiBlitz3.ab2@13030>   MOVE.l D5,D1
0003F8C0 <AmiBlitz3.ab2@13031> BRA.w JL_0_AD38
0003F8C2 <AmiBlitz3.ab2@13034> RTS
0003F8C6 <AmiBlitz3.ab2@13037>   MOVE.w #$C317,D1
0003F8CC <AmiBlitz3.ab2@13038>   TST.b typecheck
0003F8D0 <AmiBlitz3.ab2@13039>   BEQ 'l1
0003F8D6 <AmiBlitz3.ab2@13040>    TST.b notypecheck
0003F8DA <AmiBlitz3.ab2@13041>    BNE 'l1
0003F8E0 <AmiBlitz3.ab2@13042>    TST.l lasttoken
0003F8E6 <AmiBlitz3.ab2@13049>   TST.b debugmode
0003F8EA <AmiBlitz3.ab2@13050>    BEQ.w JL_0_9696
0003F8F2 <AmiBlitz3.ab2@13051>   BTST #$7,overflowcheck
0003F8F6 <AmiBlitz3.ab2@13052>    BEQ.w JL_0_9696
0003F8FC <AmiBlitz3.ab2@13053>   TST.w cfetchmode
0003F900 <AmiBlitz3.ab2@13054>    BNE.w JL_0_9696
0003F906 <AmiBlitz3.ab2@13055>   TST.w regnum
0003F90A <AmiBlitz3.ab2@13056>    BEQ.w JL_0_968A
0003F90C <AmiBlitz3.ab2@13057>   MOVE.w D1,-(A7)
0003F910 <AmiBlitz3.ab2@13058>   MOVE.w JL_0_9698(PC),D1
0003F914 <AmiBlitz3.ab2@13059>    BSR.w writeword
0003F91A <AmiBlitz3.ab2@13060>   MOVE.w regnum,D1
0003F91E <AmiBlitz3.ab2@13061>   OR.w L_0_969C(PC),D1
0003F922 <AmiBlitz3.ab2@13062>    BSR.w writeword
0003F924 <AmiBlitz3.ab2@13063>   MOVE.w (A7)+,D1
0003F928 <AmiBlitz3.ab2@13064>    BSR.w JL_0_968A
0003F92C <AmiBlitz3.ab2@13065>   MOVE.w L_0_969A(PC),D1
0003F930 <AmiBlitz3.ab2@13066> BRA.w writeword
0003F934 <AmiBlitz3.ab2@13070>   MOVEM.l D0-D7/A0-A6,-(A7)
0003F938 <AmiBlitz3.ab2@13071>    BSR.w Atokejsr
0003F93C <AmiBlitz3.ab2@13072>   MOVEM.l (A7)+,D0-D7/A0-A6
0003F93E <AmiBlitz3.ab2@13075> RTS
0003F940 <AmiBlitz3.ab2@13078>   MOVE.l D0,-(A7)
0003F942 <AmiBlitz3.ab2@13081>   MOVE.l (A7)+,D0
0003F944 <AmiBlitz3.ab2@13084>   MOVE.l D0,D0
0003F948 <AmiBlitz3.ab2@13087>   BSR.w convert_word_to_long
0003F94E <AmiBlitz3.ab2@13088>   TST.b iee
0003F952 <AmiBlitz3.ab2@13089>   BEQ 'old
0003F956 <AmiBlitz3.ab2@13090>   CMP.b #5,d2
0003F95A <AmiBlitz3.ab2@13091>   BNE 'old
0003F95C <AmiBlitz3.ab2@13092> RTS
0003F960 <AmiBlitz3.ab2@13095> BRA.w JL_0_9600
0003F964 <AmiBlitz3.ab2@13099>   MOVE.w #$C316,D1
0003F96A <AmiBlitz3.ab2@13100>   TST.b typecheck
0003F96E <AmiBlitz3.ab2@13101>   BEQ 'l1
0003F974 <AmiBlitz3.ab2@13102>   TST.b peekaddrsize
0003F978 <AmiBlitz3.ab2@13103>   BNE 'l1
0003F97E <AmiBlitz3.ab2@13104>   TST.b notypecheck
0003F982 <AmiBlitz3.ab2@13105>   BNE 'l1
0003F988 <AmiBlitz3.ab2@13106>   TST.l lasttoken
0003F98C <AmiBlitz3.ab2@13112> BRA.w JL_0_963A
0003F990 <AmiBlitz3.ab2@13116>   MOVE.w #$C318,D1
0003F996 <AmiBlitz3.ab2@13117>   TST.b typecheck
0003F99A <AmiBlitz3.ab2@13118>   BEQ 'l1
0003F9A0 <AmiBlitz3.ab2@13119>   TST.b peekaddrsize
0003F9A4 <AmiBlitz3.ab2@13120>   BNE 'l1
0003F9AA <AmiBlitz3.ab2@13121>   TST.b notypecheck
0003F9AE <AmiBlitz3.ab2@13122>   BNE 'l1
0003F9B4 <AmiBlitz3.ab2@13123>   TST.l lasttoken
0003F9B8 <AmiBlitz3.ab2@13129> BRA.w JL_0_963A
0003F9BC <AmiBlitz3.ab2@13133>   MOVE.w #$C318,D1
0003F9C2 <AmiBlitz3.ab2@13134>   TST.b typecheck
0003F9C6 <AmiBlitz3.ab2@13135>   BEQ 'l1
0003F9CC <AmiBlitz3.ab2@13136>   TST.b notypecheck
0003F9D0 <AmiBlitz3.ab2@13137>   BNE 'l1
0003F9D6 <AmiBlitz3.ab2@13138>   TST.l lasttoken
0003F9DA <AmiBlitz3.ab2@13144>   BSR.w JL_0_963A
0003F9DE <AmiBlitz3.ab2@13145> BRA.w convert_word_to_quick
0003F9E2 <AmiBlitz3.ab2@13149> BRA.w JL_0_9600
0003F9E4 <AmiBlitz3.ab2@13153> RTS
0003F9E8 <AmiBlitz3.ab2@13157>   MOVE.w #$C319,D1
0003F9EE <AmiBlitz3.ab2@13158>   TST.b typecheck
0003F9F2 <AmiBlitz3.ab2@13159>   BEQ 'l1
0003F9F8 <AmiBlitz3.ab2@13160>   TST.b notypecheck
0003F9FC <AmiBlitz3.ab2@13161>   BNE 'l1
0003FA02 <AmiBlitz3.ab2@13162>   TST.l lasttoken
0003FA06 <AmiBlitz3.ab2@13169>   BSR.w JL_0_963A
0003FA0A <AmiBlitz3.ab2@13172>   MOVE.w #$4240,D1
0003FA10 <AmiBlitz3.ab2@13173>   OR.w regnum,D1
0003FA14 <AmiBlitz3.ab2@13174>   BSR.w writeword
0003FA18 <AmiBlitz3.ab2@13175>   MOVE.w #$4840,D1
0003FA1E <AmiBlitz3.ab2@13176>   OR.w regnum,D1
0003FA22 <AmiBlitz3.ab2@13177> BRA.w writeword
0003FA26 <AmiBlitz3.ab2@13181> BRA.w JL_0_96D0
0003FA2A <AmiBlitz3.ab2@13185>   BSR.w JL_0_96D0
0003FA2E <AmiBlitz3.ab2@13186> BRA.w convert_word_to_long
0003FA30 <AmiBlitz3.ab2@13191>   MOVEQ #0,d0
0003FA36 <AmiBlitz3.ab2@13192>   MOVE.w regnum,d0
0003FA38 <AmiBlitz3.ab2@13193>   ASL.l #7,d0
0003FA3E <AmiBlitz3.ab2@13194>   MOVE.l #$f2004000,d1
0003FA40 <AmiBlitz3.ab2@13195>   OR.l d0,d1
0003FA42 <AmiBlitz3.ab2@13196>   ASL.l #1,d0
0003FA44 <AmiBlitz3.ab2@13197>   ASL.l #8,d0
0003FA46 <AmiBlitz3.ab2@13198>   OR.l d0,d1
0003FA4A <AmiBlitz3.ab2@13199>   BSR writelong
0003FA50 <AmiBlitz3.ab2@13200>   MOVE.w regnum,d0
0003FA52 <AmiBlitz3.ab2@13201>   ASL.l #7,d0
0003FA58 <AmiBlitz3.ab2@13202>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0003FA5A <AmiBlitz3.ab2@13203>   OR.w d0,d1
0003FA5E <AmiBlitz3.ab2@13204>   BSR writelong
0003FA64 <AmiBlitz3.ab2@13205>   MOVE.l #$37800000,d1
0003FA68 <AmiBlitz3.ab2@13206>   BSR writelong
0003FA6A <AmiBlitz3.ab2@13207> RTS
0003FA70 <AmiBlitz3.ab2@13211>   TST.b iee
0003FA74 <AmiBlitz3.ab2@13212>   BNE qtof
0003FA78 <AmiBlitz3.ab2@13213>   MOVE.w #$D300,D1
0003FA7A <AmiBlitz3.ab2@13216>   MOVE.w D1,-(A7)
0003FA7E <AmiBlitz3.ab2@13217>    BSR.w JL_0_AD40
0003FA80 <AmiBlitz3.ab2@13218>   MOVE.l D4,D1
0003FA84 <AmiBlitz3.ab2@13219>    BSR.w JL_0_AD38
0003FA88 <AmiBlitz3.ab2@13220>    BSR.w JL_0_A352
0003FA8A <AmiBlitz3.ab2@13221>   MOVE.w (A7)+,D1
0003FA8E <AmiBlitz3.ab2@13222>    BSR.w Atokejsr
0003FA92 <AmiBlitz3.ab2@13223>    BSR.w JL_0_A36E
0003FA94 <AmiBlitz3.ab2@13224>   MOVE.l D5,D1
0003FA98 <AmiBlitz3.ab2@13225> BRA.w JL_0_AD38
0003FA9A <AmiBlitz3.ab2@13229> RTS
0003FAA0 <AmiBlitz3.ab2@13232>   TST.b typecheck
0003FAA4 <AmiBlitz3.ab2@13233>   BEQ 'l1
0003FAAA <AmiBlitz3.ab2@13234>   TST.b notypecheck
0003FAAE <AmiBlitz3.ab2@13235>   BNE 'l1
0003FAB4 <AmiBlitz3.ab2@13236>   TST.l lasttoken
0003FABA <AmiBlitz3.ab2@13241>   TST.b iee
0003FABE <AmiBlitz3.ab2@13242>   BNE ftol
0003FAC2 <AmiBlitz3.ab2@13243>   MOVE.w #$C31A,D1
0003FAC6 <AmiBlitz3.ab2@13244>   BSR.w JL_0_963A
0003FACA <AmiBlitz3.ab2@13245>   BSR.w JL_0_974A
0003FACE <AmiBlitz3.ab2@13246> BRA.w convert_long_to_byte
0003FAD0 <AmiBlitz3.ab2@13250> RTS
0003FAD6 <AmiBlitz3.ab2@13253>   TST.b typecheck
0003FADA <AmiBlitz3.ab2@13254>   BEQ 'l1
0003FAE0 <AmiBlitz3.ab2@13255>   TST.b notypecheck
0003FAE4 <AmiBlitz3.ab2@13256>   BNE 'l1
0003FAEA <AmiBlitz3.ab2@13257>   TST.l lasttoken
0003FAF0 <AmiBlitz3.ab2@13262>   TST.b iee
0003FAF4 <AmiBlitz3.ab2@13263>   BNE ftol
0003FAF8 <AmiBlitz3.ab2@13264>   MOVE.w #$C31B,D1
0003FAFC <AmiBlitz3.ab2@13265>   BSR.w JL_0_963A
0003FB00 <AmiBlitz3.ab2@13266>   BSR.w JL_0_974A
0003FB04 <AmiBlitz3.ab2@13267> BRA.w convert_long_to_word
0003FB06 <AmiBlitz3.ab2@13271> RTS
0003FB0C <AmiBlitz3.ab2@13274>   TST.b iee
0003FB10 <AmiBlitz3.ab2@13275>   BNE ftol
0003FB14 <AmiBlitz3.ab2@13276>   MOVE.w #$C31C,D1
0003FB18 <AmiBlitz3.ab2@13277>   BSR.w JL_0_963A
0003FB1C <AmiBlitz3.ab2@13280>   MOVE.w #$FFE2,D1
0003FB20 <AmiBlitz3.ab2@13281> BRA.w JL_0_9604
0003FB22 <AmiBlitz3.ab2@13284>   MOVE.l d0,-(a7)
0003FB24 <AmiBlitz3.ab2@13285>   MOVEQ #0,d0
0003FB2A <AmiBlitz3.ab2@13286>   MOVE.w regnum,d0
0003FB2C <AmiBlitz3.ab2@13287>   ASL.l #7,d0
0003FB32 <AmiBlitz3.ab2@13288>   MOVE.l #$f2006000,d1
0003FB34 <AmiBlitz3.ab2@13289>   OR.l d0,d1
0003FB36 <AmiBlitz3.ab2@13290>   ASL.l #1,d0
0003FB38 <AmiBlitz3.ab2@13291>   ASL.l #8,d0
0003FB3A <AmiBlitz3.ab2@13292>   OR.l d0,d1
0003FB3C <AmiBlitz3.ab2@13293>   MOVE.l (a7)+,d0
0003FB40 <AmiBlitz3.ab2@13294> BRA writelong
0003FB42 <AmiBlitz3.ab2@13298>   MOVE.l d0,-(a7)
0003FB44 <AmiBlitz3.ab2@13299>   MOVEQ #0,d0
0003FB4A <AmiBlitz3.ab2@13300>   MOVE.l #$f23c4023,d1
0003FB50 <AmiBlitz3.ab2@13301>   MOVE.w regnum,d0
0003FB52 <AmiBlitz3.ab2@13302>   ASL.l #7,d0
0003FB54 <AmiBlitz3.ab2@13303>   OR.l d0,d1
0003FB58 <AmiBlitz3.ab2@13304>   BSR writelong
0003FB5E <AmiBlitz3.ab2@13305>   MOVE.l #$00010000,d1
0003FB62 <AmiBlitz3.ab2@13306>   BSR writelong
0003FB68 <AmiBlitz3.ab2@13307>   MOVE.w regnum,d0
0003FB6A <AmiBlitz3.ab2@13308>   ASL.l #7,d0
0003FB70 <AmiBlitz3.ab2@13309>   MOVE.l #$f2006000,d1
0003FB72 <AmiBlitz3.ab2@13310>   OR.l d0,d1
0003FB74 <AmiBlitz3.ab2@13311>   ASL.l #1,d0
0003FB76 <AmiBlitz3.ab2@13312>   ASL.l #8,d0
0003FB78 <AmiBlitz3.ab2@13313>   OR.l d0,d1
0003FB7C <AmiBlitz3.ab2@13314>   BSR writelong
0003FB7E <AmiBlitz3.ab2@13315>   MOVE.l (a7)+,d0
0003FB80 <AmiBlitz3.ab2@13316> RTS
0003FB82 <AmiBlitz3.ab2@13320> RTS
0003FB88 <AmiBlitz3.ab2@13324>   TST.b iee
0003FB8C <AmiBlitz3.ab2@13325>   BNE ftoq
0003FB90 <AmiBlitz3.ab2@13326>   MOVE.w #$C31B,D1
0003FB94 <AmiBlitz3.ab2@13327>   BSR.w JL_0_963A
0003FB98 <AmiBlitz3.ab2@13328>   MOVE.w #$D301,D1
0003FB9C <AmiBlitz3.ab2@13329> BRA.w JL_0_96FC
0003FBA2 <AmiBlitz3.ab2@13335>    TST.b blitzparloop
0003FBA6 <AmiBlitz3.ab2@13336>    BNE 'l1
0003FBAC <AmiBlitz3.ab2@13337>    TST.b funcparloop
0003FBB0 <AmiBlitz3.ab2@13338>    BNE 'l1
0003FBB4 <AmiBlitz3.ab2@13339>    BRA error_convert_types
0003FBBC <AmiBlitz3.ab2@13342>   CMP.b #2,optistring
0003FBC0 <AmiBlitz3.ab2@13343>   BEQ JLrts
0003FBC6 <AmiBlitz3.ab2@13344>   MOVE.w stol,D1
0003FBCA <AmiBlitz3.ab2@13345>   BSR.w writeword
0003FBD2 <AmiBlitz3.ab2@13346>   CMPI.w #$2,sbgot
0003FBD6 <AmiBlitz3.ab2@13347>   BCS.w sbtolong
0003FBDA <AmiBlitz3.ab2@13348>   MOVE.w ceos(PC),D1
0003FBDE <AmiBlitz3.ab2@13349>   BSR.w writeword
0003FBE4 <AmiBlitz3.ab2@13352>   MOVE.w regnum,D1
0003FBE6 <AmiBlitz3.ab2@13353>   LSL.w #8,D1
0003FBE8 <AmiBlitz3.ab2@13354>   LSL.w #1,D1
0003FBF0 <AmiBlitz3.ab2@13355>   CMPI.w #$2,sbgot
0003FBF4 <AmiBlitz3.ab2@13356>   BCS.w JL_0_98E8
0003FBFA <AmiBlitz3.ab2@13357>   MOVE.w a2offset,D3
0003FC00 <AmiBlitz3.ab2@13358>   SUB.w thisstuse,D3
0003FC04 <AmiBlitz3.ab2@13359>   CMP.w #$6,D3
0003FC08 <AmiBlitz3.ab2@13360>   BNE.w JL_0_98D4b
0003FC0E <AmiBlitz3.ab2@13361>   OR.w movestst2,D1
0003FC12 <AmiBlitz3.ab2@13362>   BSR.w writeword
0003FC18 <AmiBlitz3.ab2@13363>   LEA movestst2+2,A0
0003FC1E <AmiBlitz3.ab2@13364>   LEA movestst2f,A1
0003FC22 <AmiBlitz3.ab2@13365> BRA.w pokecode2
0003FC28 <AmiBlitz3.ab2@13369>   OR.w movea7dn,D1
0003FC2C <AmiBlitz3.ab2@13370>   BSR.w writeword
0003FC32 <AmiBlitz3.ab2@13371>   MOVE.l #0,D1
0003FC36 <AmiBlitz3.ab2@13372> BRA.w writeword
0003FC3C <AmiBlitz3.ab2@13376>   ADDQ.w #1,fuckpos
0003FC40 <AmiBlitz3.ab2@13377>   BSR.w writeconvertcode
0003FC46 <AmiBlitz3.ab2@13378>   SUBQ.w #1,fuckpos
0003FC48 <AmiBlitz3.ab2@13380> RTS
0003FC4A <AmiBlitz3.ab2@13384>   MOVE.w D3,D1
0003FC4E <AmiBlitz3.ab2@13385>   CMP.w #7,d1
0003FC52 <AmiBlitz3.ab2@13386>   BLE 'ok
0003FC58 <AmiBlitz3.ab2@13387>   JMP errorinternalconvert
0003FC5A <AmiBlitz3.ab2@13388> 'ok  SUBQ.w #1,D1
0003FC5E <AmiBlitz3.ab2@13389>   MULU #$7,D1
0003FC60 <AmiBlitz3.ab2@13390>   ADD.w D2,D1
0003FC62 <AmiBlitz3.ab2@13391>   SUBQ.w #1,D1
0003FC64 <AmiBlitz3.ab2@13392>   LSL.w #2,D1
0003FC6A <AmiBlitz3.ab2@13393>   LEA convtable,A0
0003FC6E <AmiBlitz3.ab2@13394>   MOVE.l $0(A0,D1.W),D1
0003FC72 <AmiBlitz3.ab2@13395>   BEQ.w JL_0_97A2
0003FC74 <AmiBlitz3.ab2@13396>     MOVEA.l D1,A0
0003FC78 <AmiBlitz3.ab2@13397>     CMP.b #$ff,d3
0003FC7C <AmiBlitz3.ab2@13398>     BEQ JL_0_97A2
0003FC7E <AmiBlitz3.ab2@13399> JMP (A0)
0003FC80 <AmiBlitz3.ab2@13402> RTS
0003FC84 <AmiBlitz3.ab2@13405> usedfrom:  Ds.l 1
0003FC88 <AmiBlitz3.ab2@13412>   CMP.w #"\",D0
0003FC8C <AmiBlitz3.ab2@13413>   BNE.w JL_0_97C2
0003FC90 <AmiBlitz3.ab2@13414>     CMP.b #"\",(a5)
0003FC94 <AmiBlitz3.ab2@13415>     BNE 'first
0003FC9A <AmiBlitz3.ab2@13416>       MOVE.l A5,usedfrom
0003FCA0 <AmiBlitz3.ab2@13417>       LEA path2,A5
0003FCA4 <AmiBlitz3.ab2@13418> BRA 'g1
0003FCA6 <AmiBlitz3.ab2@13421>     SUBQ.w #1,A5
0003FCAC <AmiBlitz3.ab2@13422>   MOVE.l A5,usedfrom
0003FCB2 <AmiBlitz3.ab2@13423>   LEA usedpath,A5                                          ;read path
0003FCB6 <AmiBlitz3.ab2@13426>   BSR.w get1bytemain
0003FCBC <AmiBlitz3.ab2@13429>   CLR.w flagmask
0003FCC0 <AmiBlitz3.ab2@13430>   CMP.w #$2A,D0
0003FCC4 <AmiBlitz3.ab2@13431>    BNE.w JL_0_983A
0003FCCC <AmiBlitz3.ab2@13432>   MOVE.w #$0001,flagmask
0003FCD0 <AmiBlitz3.ab2@13434>    BSR.w getparameter2
0003FCD4 <AmiBlitz3.ab2@13437>    BEQ.w syntaxerr
0003FCD8 <AmiBlitz3.ab2@13438>   CMP.w #$28,D0
0003FCDC <AmiBlitz3.ab2@13439>    BEQ.w JL_0_9830
0003FCE0 <AmiBlitz3.ab2@13440>   CMP.w #$2E,D0
0003FCE4 <AmiBlitz3.ab2@13441>    BEQ.w JL_0_980C
0003FCE8 <AmiBlitz3.ab2@13442>   CMP.w #$24,D0
0003FCEC <AmiBlitz3.ab2@13443>    BNE.w JL_0_9838
0003FCF4 <AmiBlitz3.ab2@13444>   ORI.w #$8,flagmask
0003FCF8 <AmiBlitz3.ab2@13445>    BSR.w storeloc
0003FCFC <AmiBlitz3.ab2@13446>    BSR.w get1bytemain
0003FD00 <AmiBlitz3.ab2@13447> BRA.w JL_0_9822
0003FD04 <AmiBlitz3.ab2@13451>   BSR.w storeloc
0003FD06 <AmiBlitz3.ab2@13452>   MOVE.w D2,-(A7)
0003FD0C <AmiBlitz3.ab2@13453>   LEA namebuff2,A1
0003FD10 <AmiBlitz3.ab2@13454>    BSR.w makename3
0003FD14 <AmiBlitz3.ab2@13455>    BEQ.w syntaxerr
0003FD16 <AmiBlitz3.ab2@13456>   MOVE.w (A7)+,D2
0003FD18 <AmiBlitz3.ab2@13459>    MOVE.w D0,D1
0003FD1C <AmiBlitz3.ab2@13460>    BSR.w resloc
0003FD20 <AmiBlitz3.ab2@13461>    CMP.w #$28,D1
0003FD24 <AmiBlitz3.ab2@13462>    BNE.w JL_0_9838
0003FD2C <AmiBlitz3.ab2@13465>   ORI.w #$2,flagmask
0003FD2E <AmiBlitz3.ab2@13468> RTS
0003FD32 <AmiBlitz3.ab2@13472>   CMP.w #$40,D0
0003FD36 <AmiBlitz3.ab2@13473>    BNE.w JL_0_984E
0003FD3E <AmiBlitz3.ab2@13474>   MOVE.w #$0005,flagmask
0003FD42 <AmiBlitz3.ab2@13475> BRA.w JL_0_97D8
0003FD46 <AmiBlitz3.ab2@13479>   BSR.w makename2
0003FD4A <AmiBlitz3.ab2@13480> BRA.w JL_0_97DC
0003FD4E <AmiBlitz3.ab2@13484>   MOVE.w #$FED3,D1
0003FD52 <AmiBlitz3.ab2@13485>    BSR.w uselib
0003FD58 <AmiBlitz3.ab2@13486>   LEA pusha3,A0
0003FD5E <AmiBlitz3.ab2@13487>   LEA pusha3f,A1
0003FD62 <AmiBlitz3.ab2@13488> BRA.w pokecode
0003FD66 <AmiBlitz3.ab2@13492>   MOVE.w #$FED3,D1
0003FD6A <AmiBlitz3.ab2@13493>    BSR.w uselib
0003FD70 <AmiBlitz3.ab2@13494>   LEA pulla3,A0
0003FD76 <AmiBlitz3.ab2@13495>   LEA pulla3f,A1
0003FD7A <AmiBlitz3.ab2@13496> BRA.w pokecode
0003FD7C <AmiBlitz3.ab2@13500> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0003FD84 <AmiBlitz3.ab2@13505>     CMP.b #2,optistring
0003FD88 <AmiBlitz3.ab2@13506>    BEQ 'l10
0003FD8C <AmiBlitz3.ab2@13507>    MOVE.w ceos(PC),D1
0003FD90 <AmiBlitz3.ab2@13508>    BSR.w writeword                                         ;clr.b (a3)
0003FD96 <AmiBlitz3.ab2@13511>   MOVE.w regnum,D1
0003FD98 <AmiBlitz3.ab2@13512>   LSL.w #8,D1
0003FD9A <AmiBlitz3.ab2@13513>   LSL.w #1,D1
0003FDA2 <AmiBlitz3.ab2@13514>   CMPI.w #$2,sbgot
0003FDA6 <AmiBlitz3.ab2@13515>    BCS.w JL_0_98E8
0003FDAC <AmiBlitz3.ab2@13516>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0003FDB2 <AmiBlitz3.ab2@13517>   SUB.w thisstuse,D3
0003FDB6 <AmiBlitz3.ab2@13518>   CMP.w #$6,D3
0003FDBA <AmiBlitz3.ab2@13519>    BNE.w JL_0_98D4
0003FDC0 <AmiBlitz3.ab2@13520>   OR.w movestst2,D1
0003FDC4 <AmiBlitz3.ab2@13521>    BSR.w writeword
0003FDCA <AmiBlitz3.ab2@13522>   LEA movestst2+2,A0
0003FDD0 <AmiBlitz3.ab2@13523>   LEA movestst2f,A1
0003FDD4 <AmiBlitz3.ab2@13524> BRA.w pokecode2
0003FDDA <AmiBlitz3.ab2@13528>    OR.w movea7dn,D1
0003FDDE <AmiBlitz3.ab2@13529>    BSR.w writeword
0003FDE4 <AmiBlitz3.ab2@13530>   MOVE.l movea7dn+2,D1
0003FDE8 <AmiBlitz3.ab2@13542>   BSR writelong
0003FDF0 <AmiBlitz3.ab2@13545>    CMP.w #6,regnum
0003FDF4 <AmiBlitz3.ab2@13546>    BEQ 'l1
0003FDFA <AmiBlitz3.ab2@13547>    TST.w stackpar
0003FDFE <AmiBlitz3.ab2@13548>    BNE 'l1
0003FE04 <AmiBlitz3.ab2@13549>    TST.b funcparloop
0003FE08 <AmiBlitz3.ab2@13550>    BEQ 'l1
0003FE0E <AmiBlitz3.ab2@13551>    MOVE.l #$48780000,d1
0003FE12 <AmiBlitz3.ab2@13552>    BSR writelong
0003FE14 <AmiBlitz3.ab2@13556> RTS
0003FE16 <AmiBlitz3.ab2@13561>      MOVE.l d1,-(a7)
0003FE1E <AmiBlitz3.ab2@13562>      CMP.w #6,regnum
0003FE22 <AmiBlitz3.ab2@13563>      BEQ 'l1
0003FE28 <AmiBlitz3.ab2@13564>      TST.w stackpar
0003FE2C <AmiBlitz3.ab2@13565>      BNE 'l1
0003FE32 <AmiBlitz3.ab2@13566>      TST.b funcparloop
0003FE36 <AmiBlitz3.ab2@13567>      BEQ 'l1
0003FE3C <AmiBlitz3.ab2@13568>      MOVE.l #$48780000,d1
0003FE40 <AmiBlitz3.ab2@13569>      BSR writelong
0003FE42 <AmiBlitz3.ab2@13572>      MOVE.l (a7)+,d1
0003FE48 <AmiBlitz3.ab2@13574>    OR.w movestdn,D1
0003FE4C <AmiBlitz3.ab2@13575>    BSR.w writeword
0003FE50 <AmiBlitz3.ab2@13576>   MOVE.w #$FED3,D1
0003FE54 <AmiBlitz3.ab2@13577>    BSR.w uselib
0003FE58 <AmiBlitz3.ab2@13578>   MOVE.w $A(A1),D1
0003FE5C <AmiBlitz3.ab2@13579> BRA.w writeword
0003FE5E <AmiBlitz3.ab2@13582> unknown:    Ds.w 1
0003FE64 <AmiBlitz3.ab2@13585> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0003FE68 <AmiBlitz3.ab2@13586> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0003FE6E <AmiBlitz3.ab2@13587>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0003FE74 <AmiBlitz3.ab2@13593>   TST.b debugmode
0003FE78 <AmiBlitz3.ab2@13594>   BEQ.w sharreval
0003FE7C <AmiBlitz3.ab2@13595>  BSR.w arreval
0003FE80 <AmiBlitz3.ab2@13598>   MOVE.w somecode(PC),D1
0003FE86 <AmiBlitz3.ab2@13599>   OR.w regnum,D1
0003FE8A <AmiBlitz3.ab2@13600>    BSR.w writeword
0003FE8C <AmiBlitz3.ab2@13601>   MOVEQ.l #$01,D1
0003FE8E <AmiBlitz3.ab2@13602>   SWAP D1
0003FE92 <AmiBlitz3.ab2@13603>    BSR.w writelong
0003FE96 <AmiBlitz3.ab2@13604>   MOVE.l somecode2(PC),D1
0003FE9A <AmiBlitz3.ab2@13605>    BSR.w writelong
0003FE9E <AmiBlitz3.ab2@13606>   MOVE.w #$C309,D1
0003FEA2 <AmiBlitz3.ab2@13607> BRA.w Atokejsr
0003FEA4 <AmiBlitz3.ab2@13611>   MOVEQ.l #$02,D2
0003FEA6 <AmiBlitz3.ab2@13612>   MOVEQ.l #$00,D1
0003FEA8 <AmiBlitz3.ab2@13613>   MOVEQ.l #$00,D3
0003FEAC <AmiBlitz3.ab2@13614> BRA.w maineval2
0003FEAE <AmiBlitz3.ab2@13618>   MOVEQ.l #$03,D2
0003FEB0 <AmiBlitz3.ab2@13619>   MOVEQ.l #$00,D1
0003FEB2 <AmiBlitz3.ab2@13620>   MOVEQ.l #$00,D3
0003FEB8 <AmiBlitz3.ab2@13621>   MOVE.b notypecheck,-(a7)
0003FEC0 <AmiBlitz3.ab2@13622>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0003FEC6 <AmiBlitz3.ab2@13623>   JSR maineval2
0003FECC <AmiBlitz3.ab2@13624>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0003FECE <AmiBlitz3.ab2@13625>   RTS
0003FED8 <AmiBlitz3.ab2@13629>   MOVE.w oldqflag,instringon
0003FEDE <AmiBlitz3.ab2@13630>   MOVEA.l lastsourcepos,A5
0003FEE0 <AmiBlitz3.ab2@13631>   MOVEQ.l #-$01,D1
0003FEE2 <AmiBlitz3.ab2@13632>   MOVEQ.l #-$01,D3
0003FEE6 <AmiBlitz3.ab2@13633> BRA.w peval
0003FEF0 <AmiBlitz3.ab2@13638>   MOVE.w oldqflag,instringon
0003FEF6 <AmiBlitz3.ab2@13639>   MOVEA.l lastsourcepos,A5
0003FEF8 <AmiBlitz3.ab2@13642>   MOVEQ.l #-$01,D1
0003FEFA <AmiBlitz3.ab2@13643>   MOVEQ.l #$00,D3
0003FF00 <AmiBlitz3.ab2@13644>   MOVE.l leftsidetype,-(a7)
0003FF06 <AmiBlitz3.ab2@13645>   MOVE.l rightsidetype,-(a7)
0003FF0C <AmiBlitz3.ab2@13646>   CLR.l leftsidetype
0003FF12 <AmiBlitz3.ab2@13647>   CLR.l rightsidetype
0003FF18 <AmiBlitz3.ab2@13648>   JSR maineval
0003FF1E <AmiBlitz3.ab2@13649>   MOVE.l (a7)+,rightsidetype
0003FF24 <AmiBlitz3.ab2@13650>   MOVE.l (a7)+,leftsidetype
0003FF26 <AmiBlitz3.ab2@13651>   RTS
0003FF30 <AmiBlitz3.ab2@13655>   MOVE.w oldqflag,instringon
0003FF36 <AmiBlitz3.ab2@13656>   MOVEA.l lastsourcepos,A5
0003FF38 <AmiBlitz3.ab2@13657>   MOVEQ.l #$00,D1
0003FF3A <AmiBlitz3.ab2@13658>   MOVEQ.l #-$01,D3
0003FF3E <AmiBlitz3.ab2@13659> BRA.w maineval
0003FF40 <AmiBlitz3.ab2@13663>   MOVEQ.l #$01,D1
0003FF42 <AmiBlitz3.ab2@13664>   MOVEQ.l #-$01,D3
0003FF46 <AmiBlitz3.ab2@13665> BRA.w maineval
0003FF50 <AmiBlitz3.ab2@13670>   MOVE.w oldqflag,instringon
0003FF56 <AmiBlitz3.ab2@13671>   MOVEA.l lastsourcepos,A5
0003FF58 <AmiBlitz3.ab2@13674>   MOVEQ.l #$00,D1                                        ;no push
0003FF5A <AmiBlitz3.ab2@13675>   MOVEQ.l #$00,D3
0003FF62 <AmiBlitz3.ab2@13696>    CMPI.w #$6,regnum
0003FF66 <AmiBlitz3.ab2@13697>    BCS.w maineval2
0003FF68 <AmiBlitz3.ab2@13698>    MOVEQ #0,d1
0003FF6E <AmiBlitz3.ab2@13699>    MOVE.l destpointer,a4
0003FF74 <AmiBlitz3.ab2@13701>    CMPA.l destbufferend,A4
0003FF78 <AmiBlitz3.ab2@13702>    BCC.w maineval__l2
0003FF7E <AmiBlitz3.ab2@13704>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0003FF82 <AmiBlitz3.ab2@13706>    BNE maineval__l2
0003FF86 <AmiBlitz3.ab2@13710> BRA maineval__l1
0003FF88 <AmiBlitz3.ab2@13713>   MOVEQ.l #-$01,D1
0003FF90 <AmiBlitz3.ab2@13716>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0003FF96 <AmiBlitz3.ab2@13719>   MOVE.w thisstuse,-(A7)
0003FFA0 <AmiBlitz3.ab2@13720>   MOVE.w a2offset,thisstuse
0003FFA6 <AmiBlitz3.ab2@13721>   MOVE.w stackpar,-(A7)
0003FFAC <AmiBlitz3.ab2@13722>   MOVE.w D1,stackpar
0003FFB2 <AmiBlitz3.ab2@13723>   MOVE.w sbgot,-(A7)
0003FFB8 <AmiBlitz3.ab2@13724>   CLR.w sbgot
0003FFBC <AmiBlitz3.ab2@13725>   MOVE.w unknown(PC),-(A7)
0003FFC2 <AmiBlitz3.ab2@13726>   MOVE.w D3,unknown
0003FFC4 <AmiBlitz3.ab2@13727>   MOVE.w D2,-(a7)
0003FFCA <AmiBlitz3.ab2@13728>   MOVE.w d2,mode
0003FFCE <AmiBlitz3.ab2@13729>    BSR.w eval3
0003FFD0 <AmiBlitz3.ab2@13730>   MOVE.w (a7)+,d3
0003FFD4 <AmiBlitz3.ab2@13731>    BEQ.w maineval__noconv
0003FFD8 <AmiBlitz3.ab2@13732>   MOVE.w unknown(PC),D1
0003FFDC <AmiBlitz3.ab2@13733>    BNE.w maineval__noconv
0003FFDE <AmiBlitz3.ab2@13734>   EXG.l D2,D3
0003FFE0 <AmiBlitz3.ab2@13735>    MOVE.l a2,-(a7)
0003FFE6 <AmiBlitz3.ab2@13736>    TST.b curtemplabel
0003FFEA <AmiBlitz3.ab2@13737>    BEQ maineval2__l10
0003FFF0 <AmiBlitz3.ab2@13738>    MOVE.l asmbuff,a2
0003FFF6 <AmiBlitz3.ab2@13739>    CMP.w #$c,$8(a2)
0003FFFA <AmiBlitz3.ab2@13740>    BEQ maineval2__l20
00040000 <AmiBlitz3.ab2@13741>    CMP.w #$d,$8(a2)
00040004 <AmiBlitz3.ab2@13742>    BEQ maineval2__l20
00040006 <AmiBlitz3.ab2@13745>   CMP.w d2,d3
0004000A <AmiBlitz3.ab2@13746>   BEQ maineval2__l20
0004000E <AmiBlitz3.ab2@13747>   BSR.w writeconvertcode
00040014 <AmiBlitz3.ab2@13748>   CLR.b doimmediate
00040016 <AmiBlitz3.ab2@13751>   MOVE.l (a7)+,a2
0004001C <AmiBlitz3.ab2@13754>   MOVE.w (A7)+,unknown
00040022 <AmiBlitz3.ab2@13755>   MOVE.w stackpar,D1
00040026 <AmiBlitz3.ab2@13756>    BEQ.w maineval__skipme
0004002A <AmiBlitz3.ab2@13757>    BMI.w maineval__skipme
00040030 <AmiBlitz3.ab2@13761>   MOVE.w regnum,D1
00040032 <AmiBlitz3.ab2@13762>   LSL.w #8,D1
00040034 <AmiBlitz3.ab2@13763>   LSL.w #1,D1
00040038 <AmiBlitz3.ab2@13764>   CMP.w #$7,D2
0004003C <AmiBlitz3.ab2@13765>    BNE.w maineval__hi1
00040044 <AmiBlitz3.ab2@13766>    CMP.b #2,optistring
00040048 <AmiBlitz3.ab2@13767>    BEQ maineval__hi1a
0004004A <AmiBlitz3.ab2@13768>   MOVE.w D1,-(A7)
00040050 <AmiBlitz3.ab2@13769>   OR.w getstlen,D1
00040054 <AmiBlitz3.ab2@13770>    BSR.w writeword
00040056 <AmiBlitz3.ab2@13771>   MOVE.w (A7)+,D1
0004005C <AmiBlitz3.ab2@13774>   ADDQ.w #2,a2offset                                        ;lib mode to stack
00040060 <AmiBlitz3.ab2@13778>   MOVE.w #$3f3c,d1
00040064 <AmiBlitz3.ab2@13779>    BSR.w writeword
00040066 <AmiBlitz3.ab2@13783>   MOVE.w d2,d1
0004006C <AmiBlitz3.ab2@13784>   MOVE.w d1,libmode
00040070 <AmiBlitz3.ab2@13785>    BSR.w writeword
00040074 <AmiBlitz3.ab2@13786>   CMP.w #$7,D2
00040078 <AmiBlitz3.ab2@13787>    BNE.w maineval__skipme
0004007E <AmiBlitz3.ab2@13788>   MOVE.w putstlen,D1
00040084 <AmiBlitz3.ab2@13789>   OR.w regnum,D1
00040088 <AmiBlitz3.ab2@13790>    BSR.w writeword
0004008C <AmiBlitz3.ab2@13793>    CMP.w #$7,D2
00040090 <AmiBlitz3.ab2@13794>    BNE.w maineval__notst
00040098 <AmiBlitz3.ab2@13805>    CMP.b #2,optistring
0004009C <AmiBlitz3.ab2@13806>    BEQ maineval__skipme_l10
000400A2 <AmiBlitz3.ab2@13807>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
000400A6 <AmiBlitz3.ab2@13808>    BSR.w sbtolong
000400AA <AmiBlitz3.ab2@13809> BRA.w maineval__notst2
000400B2 <AmiBlitz3.ab2@13813>     CMP.w #6,regnum
000400B6 <AmiBlitz3.ab2@13814>     BEQ maineval__skipme_l10_l1
000400BC <AmiBlitz3.ab2@13815>     TST.b funcparloop
000400C0 <AmiBlitz3.ab2@13816>     BEQ maineval__skipme_l10_l1
000400C6 <AmiBlitz3.ab2@13817>     MOVE.l #$48780000,d1
000400CA <AmiBlitz3.ab2@13818>     BSR writelong
000400CE <AmiBlitz3.ab2@13821> BRA.w maineval__notst2
000400D4 <AmiBlitz3.ab2@13824>   ADDQ.w #2,a2offset
000400D8 <AmiBlitz3.ab2@13825> BRA maineval__skipme
000400E0 <AmiBlitz3.ab2@13828>   CMPI.w #$2,sbgot
000400E4 <AmiBlitz3.ab2@13829>    BCS.w maineval__notst2                                         ;correct stack
000400E8 <AmiBlitz3.ab2@13830>   MOVE.w ststfix(PC),D1
000400EC <AmiBlitz3.ab2@13831>    BSR.w writeword
000400F2 <AmiBlitz3.ab2@13834>   MOVE.w (A7)+,sbgot
000400F8 <AmiBlitz3.ab2@13835>   MOVE.w stackpar,D1
000400FC <AmiBlitz3.ab2@13836>    BPL.w maineval__skip
00040100 <AmiBlitz3.ab2@13837>    CMP.b #7,d2
00040104 <AmiBlitz3.ab2@13838>    BEQ maineval__notst2_l1
0004010A <AmiBlitz3.ab2@13839>   TST.b funcparloop
0004010E <AmiBlitz3.ab2@13840>   BEQ maineval__notst2_l1
00040112 <AmiBlitz3.ab2@13841>   CMP.b #5,d2
00040116 <AmiBlitz3.ab2@13842>   BNE maineval__notst2_skip
0004011C <AmiBlitz3.ab2@13843>   TST.b fpu
00040120 <AmiBlitz3.ab2@13844>   BEQ maineval__notst2_skip
00040126 <AmiBlitz3.ab2@13845>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0004012C <AmiBlitz3.ab2@13846>   JSR writelong
00040130 <AmiBlitz3.ab2@13849>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00040136 <AmiBlitz3.ab2@13850>   ADD.w parnum,d1
0004013C <AmiBlitz3.ab2@13851>   JSR Atokejsr
00040142 <AmiBlitz3.ab2@13852>    TST.w dontwrite
00040146 <AmiBlitz3.ab2@13853>    BNE maineval__notst2_l1
0004014C <AmiBlitz3.ab2@13854>    MOVE.l data1start,d1
00040152 <AmiBlitz3.ab2@13855>    MOVE.l destpointer,a4
00040156 <AmiBlitz3.ab2@13856>    ADD.l d1,-4(a4)
0004015C <AmiBlitz3.ab2@13857>    MOVE.l destpointer,d1
0004015E <AmiBlitz3.ab2@13858>    SUBQ.l #4,d1
00040164 <AmiBlitz3.ab2@13859>    SUB.l destbufferstart,d1
00040166 <AmiBlitz3.ab2@13860>    MOVE.l d2,-(a7)
00040168 <AmiBlitz3.ab2@13861>    MOVE.l d1,d2
0004016E <AmiBlitz3.ab2@13862>    JSR addhunkoffset
00040170 <AmiBlitz3.ab2@13863>    MOVE.l (a7)+,d2
00040174 <AmiBlitz3.ab2@13864> BRA maineval__skip
0004017A <AmiBlitz3.ab2@13867>   ADDQ.w #2,a2offset
00040180 <AmiBlitz3.ab2@13868>   MOVE.w pushd0wd,D1
00040184 <AmiBlitz3.ab2@13869>   CMP.w #$3,D2                                             ;write parameter to stack
00040188 <AmiBlitz3.ab2@13870>    BCS.w maineval__ok
0004018E <AmiBlitz3.ab2@13871>   ADDQ.w #2,a2offset
00040194 <AmiBlitz3.ab2@13872>   TST.b fpu
00040198 <AmiBlitz3.ab2@13873>   BEQ maineval__notst2_nofpu
0004019C <AmiBlitz3.ab2@13874>   CMP.w #5,d2
000401A0 <AmiBlitz3.ab2@13875>   BNE maineval__notst2_nofpu
000401A2 <AmiBlitz3.ab2@13876>   MOVEQ #0,d1
000401A8 <AmiBlitz3.ab2@13877>   MOVE.w regnum,d1
000401AA <AmiBlitz3.ab2@13878>   ASL.l #7,d1
000401B0 <AmiBlitz3.ab2@13879>   OR.l #$f2276400,d1
000401B4 <AmiBlitz3.ab2@13880>   BSR writelong
000401B8 <AmiBlitz3.ab2@13881> BRA maineval__skip
000401BE <AmiBlitz3.ab2@13884>   MOVE.w pushd0l,D1
000401C4 <AmiBlitz3.ab2@13887>    OR.w regnum,D1
000401C8 <AmiBlitz3.ab2@13888>    BSR.w writeword                                         ;nat
000401CE <AmiBlitz3.ab2@13891>   MOVE.w (A7)+,stackpar
000401D4 <AmiBlitz3.ab2@13892>   MOVE.w (A7)+,thisstuse
000401D6 <AmiBlitz3.ab2@13893> RTS
000401D8 <AmiBlitz3.ab2@13896> thisstuse: Ds.w 1
000401DA <AmiBlitz3.ab2@13899> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
000401DC <AmiBlitz3.ab2@13900> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
000401E0 <AmiBlitz3.ab2@13905>   BSR.w eval4
000401EA <AmiBlitz3.ab2@13906>   SUBI.l #$12,forthsp
000401EC <AmiBlitz3.ab2@13907> RTS
000401EE <AmiBlitz3.ab2@13911>   MOVEQ.l #$01,D1
000401F2 <AmiBlitz3.ab2@13913>       MOVEA.l precsp(PC),A1
000401F4 <AmiBlitz3.ab2@13914>       MOVE.l A0,(A1)+
000401F6 <AmiBlitz3.ab2@13915>       MOVE.w D1,(A1)+
000401FC <AmiBlitz3.ab2@13916>       MOVE.l A1,precsp
00040200 <AmiBlitz3.ab2@13917>    BSR.w calcloop
00040202 <AmiBlitz3.ab2@13918>   TST.w D1
00040206 <AmiBlitz3.ab2@13919>    BNE.w syntaxerr
0004020C <AmiBlitz3.ab2@13920>   SUBQ.l #6,precsp                                      ;pop the prec set up
0004020E <AmiBlitz3.ab2@13921> RTS
00040212 <AmiBlitz3.ab2@13926>   BSR.w JL_0_9C24
00040216 <AmiBlitz3.ab2@13929>   MOVEA.l precsp(PC),A1
00040218 <AmiBlitz3.ab2@13930>   CMP.w -(A1),D1
0004021C <AmiBlitz3.ab2@13931>    BHI.w JL_0_9B0A
0004021E <AmiBlitz3.ab2@13932> RTS
00040222 <AmiBlitz3.ab2@13937>   MOVEA.l precsp(PC),A1
00040224 <AmiBlitz3.ab2@13938>   MOVE.l A0,(A1)+
00040226 <AmiBlitz3.ab2@13939>   MOVE.w D1,(A1)+
0004022C <AmiBlitz3.ab2@13940>   MOVE.l A1,precsp
0004022E <AmiBlitz3.ab2@13941>   MOVE.w D2,-(A7)
00040234 <AmiBlitz3.ab2@13942>   ADDQ.w #1,regnum
00040238 <AmiBlitz3.ab2@13943>    BSR.w calcloop               ;constant optimizer
0004023E <AmiBlitz3.ab2@13944>   SUBQ.w #1,regnum
00040240 <AmiBlitz3.ab2@13945>   MOVE.w (A7)+,D3
00040244 <AmiBlitz3.ab2@13946>   MOVEM.l D1/A0,-(A7)
00040248 <AmiBlitz3.ab2@13947>    BEQ.w JL_0_9B2E
0004024C <AmiBlitz3.ab2@13948>    BSR.w JL_0_9770
00040250 <AmiBlitz3.ab2@13951>   BSR.w popprec
00040254 <AmiBlitz3.ab2@13952>   BSR.w writecode
00040258 <AmiBlitz3.ab2@13953>   MOVEA.l forthsp(PC),A0
0004025C <AmiBlitz3.ab2@13954>   MOVE.w -$2(A0),D1
00040260 <AmiBlitz3.ab2@13955>   OR.w -$14(A0),D1
00040264 <AmiBlitz3.ab2@13956>   MOVE.w D1,-$14(A0)
00040268 <AmiBlitz3.ab2@13957>    BNE.w JL_0_9C0E
0004026E <AmiBlitz3.ab2@13958>   MOVE.w dontwrite,D1
00040272 <AmiBlitz3.ab2@13959>    BNE.w JL_0_9C0E
00040276 <AmiBlitz3.ab2@13960>    MOVEA.l -$24(A0),A0
000403B2 <AmiBlitz3.ab2@13962>  !newcalc
000403B6 <AmiBlitz3.ab2@13963>    BEQ 'l10
000403BA <AmiBlitz3.ab2@13964>    MOVEA.l forthsp(PC),A0
000403C2 <AmiBlitz3.ab2@13965>    MOVE.w -$18(A0),lasta6
000403CA <AmiBlitz3.ab2@13966>    MOVE.l -$1C(A0),lasta6
000403CE <AmiBlitz3.ab2@13967>    MOVEA.l -$24(A0),A0
000403D4 <AmiBlitz3.ab2@13968>    MOVE.l A0,destpointer
000403DA <AmiBlitz3.ab2@13969>    MOVEA.l _mathffpbase,A6
000403E0 <AmiBlitz3.ab2@13970>    MOVEA.l ffplib,A1
000403E4 <AmiBlitz3.ab2@13971> BRA cont1
000403E8 <AmiBlitz3.ab2@13974>   MOVE.w #$2000,D1
000403EE <AmiBlitz3.ab2@13975>   OR.w regnum,D1
000403F2 <AmiBlitz3.ab2@13976>    BSR.w writeword
000403F4 <AmiBlitz3.ab2@13977>     MOVEQ #0,d1
000403FA <AmiBlitz3.ab2@13978>     MOVE.w regnum,D1
000403FC <AmiBlitz3.ab2@13979>     ASL.l #8,d1
000403FE <AmiBlitz3.ab2@13980>     ASL.l #2,d1
00040404 <AmiBlitz3.ab2@13981>     OR.l #$f2000000,d1
00040408 <AmiBlitz3.ab2@13982>     BSR writelong
0004040C <AmiBlitz3.ab2@13983>   MOVE.w #$4E75,D1
00040410 <AmiBlitz3.ab2@13984>    BSR.w writeword
00040418 <AmiBlitz3.ab2@13985>   MOVE.w -$18(A0),lasta6
00040420 <AmiBlitz3.ab2@13986>   MOVE.l -$1C(A0),lasta6
00040424 <AmiBlitz3.ab2@13987>   MOVEA.l -$24(A0),A0
0004042A <AmiBlitz3.ab2@13988>   MOVE.l A0,destpointer
0004042E <AmiBlitz3.ab2@13989>   MOVEM.l D2/A5,-(A7)
00040434 <AmiBlitz3.ab2@13990>   MOVEA.l _mathffpbase,A6
0004043A <AmiBlitz3.ab2@13991>   MOVEA.l ffplib,A1
0004043E <AmiBlitz3.ab2@13992>   MOVE.w $A(A1),D0
00040444 <AmiBlitz3.ab2@13993>   LEA _mathffpbase,A5
00040446 <AmiBlitz3.ab2@13994>   SUBA.w D0,A5
0004044C <AmiBlitz3.ab2@13995>   JSR Aclearcache                                          ;neg +
00040452 <AmiBlitz3.ab2@13996>   CLR.l load_var_addr
00040458 <AmiBlitz3.ab2@13997>   CLR.l imm_addr
0004045E <AmiBlitz3.ab2@13998>   TST.w dontwrite
00040462 <AmiBlitz3.ab2@13999>   BNE '1
00040464 <AmiBlitz3.ab2@14000>   JSR (A0)                                                 ;calc constant inline expression
00040468 <AmiBlitz3.ab2@14003>   MOVEM.l (A7)+,D2/A5
0004046E <AmiBlitz3.ab2@14006>   MOVE.b d2,isconstantvalue
00040474 <AmiBlitz3.ab2@14007>   MOVE.l d0,lastconstantvalue
0004047A <AmiBlitz3.ab2@14008>   MOVE.w regnum,D1
0004047C <AmiBlitz3.ab2@14009>   LSL.w #8,D1
0004047E <AmiBlitz3.ab2@14010>   LSL.w #1,D1
00040482 <AmiBlitz3.ab2@14011>   ORI.w #$203C,D1
00040486 <AmiBlitz3.ab2@14012>   CMP.w #$3,D2
0004048A <AmiBlitz3.ab2@14013>    BCC.w JL_0_9BCE
0004048E <AmiBlitz3.ab2@14014>   ORI.w #$1000,D1
00040492 <AmiBlitz3.ab2@14015>    BSR.w writeword
00040494 <AmiBlitz3.ab2@14016>   MOVE.w D0,D1
00040498 <AmiBlitz3.ab2@14017>    BSR.w writeword
0004049C <AmiBlitz3.ab2@14018> BRA.w JL_0_9BD8
000404A2 <AmiBlitz3.ab2@14022>   TST.b iee                                                ;fpu constant
000404A6 <AmiBlitz3.ab2@14023>   BEQ 'l10
000404AA <AmiBlitz3.ab2@14024>   CMP.b #5,d2
000404AE <AmiBlitz3.ab2@14025>   BNE 'l10
000404B0 <AmiBlitz3.ab2@14026>   MOVEQ #0,d1
000404B6 <AmiBlitz3.ab2@14027>   MOVE.w regnum,D1
000404B8 <AmiBlitz3.ab2@14028>   ASL.l #7,d1
000404BE <AmiBlitz3.ab2@14029>   OR.l #$f23c5400,d1
000404C2 <AmiBlitz3.ab2@14030>   BSR writelong
000404C4 <AmiBlitz3.ab2@14031>   SUBQ.l #8,a7
000404CA <AmiBlitz3.ab2@14032>   fmove.d fp0,0(a7)
000404CC <AmiBlitz3.ab2@14033>   MOVE.l (a7)+,d1
000404D0 <AmiBlitz3.ab2@14034>   BSR writelong
000404D2 <AmiBlitz3.ab2@14035>   MOVE.l (a7)+,d1
000404D6 <AmiBlitz3.ab2@14036>   BSR writelong
000404DA <AmiBlitz3.ab2@14037> BRA JL_0_9BD8
000404DE <AmiBlitz3.ab2@14040>   BSR.w writeword
000404E0 <AmiBlitz3.ab2@14041>   MOVE.l D0,D1
000404E4 <AmiBlitz3.ab2@14042>   BSR.w writelong
000404E8 <AmiBlitz3.ab2@14045>   MOVEA.l forthsp(PC),A0
000404EC <AmiBlitz3.ab2@14046>   MOVEA.l -$20(A0),A3
000404F2 <AmiBlitz3.ab2@14047>   MOVEA.l hunkoffsetbase,A2
000404F8 <AmiBlitz3.ab2@14048>   MOVE.l A3,hunkoffsetbase
000404FE <AmiBlitz3.ab2@14049>   MOVEA.l _execbase,A6
00040500 <AmiBlitz3.ab2@14052>   CMPA.l A3,A2
00040504 <AmiBlitz3.ab2@14053>   BEQ.w JL_0_9C0A
0004050A <AmiBlitz3.ab2@14054>   SUBQ.l #1,hunkoffsetcounter
0004050C <AmiBlitz3.ab2@14055>   MOVEA.l A2,A1
0004050E <AmiBlitz3.ab2@14056>   MOVEA.l (A2),A2
00040510 <AmiBlitz3.ab2@14057>   MOVEQ.l #$8,D0
00040516 <AmiBlitz3.ab2@14058>   MOVE.l mempool2,a0
0004051A <AmiBlitz3.ab2@14059>    JSR _FreePooled(A6)
0004051E <AmiBlitz3.ab2@14060> BRA.w JL_0_9BF0
00040522 <AmiBlitz3.ab2@14064>   MOVEA.l forthsp(PC),A0
00040526 <AmiBlitz3.ab2@14067>   LEA -$12(A0),A0
0004052C <AmiBlitz3.ab2@14068>   MOVE.l A0,forthsp
00040530 <AmiBlitz3.ab2@14069>   MOVEM.l (A7)+,D1/A0
00040534 <AmiBlitz3.ab2@14070>   BSR.w reget
00040538 <AmiBlitz3.ab2@14071> BRA.w JL_0_9AFE
0004053C <AmiBlitz3.ab2@14075>   BSR.w JL_0_A386
0004053E <AmiBlitz3.ab2@14076>   TST.w d0
00040542 <AmiBlitz3.ab2@14077>   BEQ JL_0_9C42
00040546 <AmiBlitz3.ab2@14078>   CMP.b #",",d0
0004054A <AmiBlitz3.ab2@14079>   BEQ JL_0_9C42
0004054E <AmiBlitz3.ab2@14080>   CMP.b #"@",d0                                            ;expandline @@
00040552 <AmiBlitz3.ab2@14081>   BEQ JL_0_9C42
00040558 <AmiBlitz3.ab2@14082>   LEA operators,A0
0004055A <AmiBlitz3.ab2@14085>    TST.w (A0)
0004055E <AmiBlitz3.ab2@14086>    BEQ.w JL_0_9C42
00040560 <AmiBlitz3.ab2@14087>   CMP.w (A0),D0
00040564 <AmiBlitz3.ab2@14088>    BEQ.w JL_0_9C46a
00040568 <AmiBlitz3.ab2@14089>   LEA $20(A0),A0
0004056C <AmiBlitz3.ab2@14090> BRA.w JL_0_9C2E
0004056E <AmiBlitz3.ab2@14094>   MOVEQ.l #$00,D1
00040570 <AmiBlitz3.ab2@14095> RTS
00040574 <AmiBlitz3.ab2@14099>   CMP.w #$3C,D0
00040578 <AmiBlitz3.ab2@14100>    BNE.w JL_0_9C70
0004057C <AmiBlitz3.ab2@14101>    BSR.w get1bytemain
00040580 <AmiBlitz3.ab2@14102>   CMP.w #$3D,D0
00040584 <AmiBlitz3.ab2@14103>    BNE.w JL_0_9C64
0004058A <AmiBlitz3.ab2@14104>   LEA ople,A0
0004058E <AmiBlitz3.ab2@14105> BRA.w JL_0_9CCA
00040592 <AmiBlitz3.ab2@14109>   CMP.w #$3E,D0
00040596 <AmiBlitz3.ab2@14110>    BNE.w JL_0_9C96
0004059A <AmiBlitz3.ab2@14111> BRA.w JL_0_9CC4
0004059E <AmiBlitz3.ab2@14115>   CMP.w #$3E,D0
000405A2 <AmiBlitz3.ab2@14116>    BNE.w JL_0_9C9E
000405A6 <AmiBlitz3.ab2@14117>    BSR.w get1bytemain
000405AA <AmiBlitz3.ab2@14118>   CMP.w #$3D,D0
000405AE <AmiBlitz3.ab2@14119>    BNE.w JL_0_9C8E
000405B4 <AmiBlitz3.ab2@14120>   LEA opge,A0
000405B8 <AmiBlitz3.ab2@14121> BRA.w JL_0_9CCA
000405BC <AmiBlitz3.ab2@14125>   CMP.w #$3C,D0
000405C0 <AmiBlitz3.ab2@14126>    BEQ.w JL_0_9CC4
000405CA <AmiBlitz3.ab2@14130>     MOVE.w oldqflag,instringon
000405D0 <AmiBlitz3.ab2@14131>     MOVEA.l lastsourcepos,A5
000405D4 <AmiBlitz3.ab2@14132> BRA.w JL_0_9CCA
000405D8 <AmiBlitz3.ab2@14136>   CMP.w #$3D,D0
000405DC <AmiBlitz3.ab2@14137>    BNE.w JL_0_9CCA
000405E0 <AmiBlitz3.ab2@14138>    BSR.w get1bytemain
000405E4 <AmiBlitz3.ab2@14139>   CMP.w #$3E,D0
000405E8 <AmiBlitz3.ab2@14140>    BNE.w JL_0_9CBC
000405EE <AmiBlitz3.ab2@14141>   LEA opge,A0
000405F2 <AmiBlitz3.ab2@14142> BRA.w JL_0_9CCA
000405F6 <AmiBlitz3.ab2@14146>   CMP.w #$3C,D0
000405FA <AmiBlitz3.ab2@14147>   BNE.w JL_0_9C96
00040600 <AmiBlitz3.ab2@14150>   LEA opne,A0
00040604 <AmiBlitz3.ab2@14153>   MOVE.w $1E(A0),D1
00040606 <AmiBlitz3.ab2@14154> RTS
00040608 <AmiBlitz3.ab2@14161>   MOVE.w d2,d1
0004060A <AmiBlitz3.ab2@14162>   SUBQ.w #1,D1
0004060E <AmiBlitz3.ab2@14163>    BMI.w illoperr
00040610 <AmiBlitz3.ab2@14164>   LSL.w #2,D1
00040614 <AmiBlitz3.ab2@14165>   MOVE.l $2(A0,D1.W),D1
00040618 <AmiBlitz3.ab2@14166>    BEQ.w illoperr
0004061A <AmiBlitz3.ab2@14167>   MOVEA.l D1,A0
0004061C <AmiBlitz3.ab2@14170> JMP (A0)
00040620 <AmiBlitz3.ab2@14186>   MOVEA.l precsp(PC),A1
00040626 <AmiBlitz3.ab2@14187>   CMPA.l #precstackf,A1
0004062A <AmiBlitz3.ab2@14188>    BCC.w pserr
0004062C <AmiBlitz3.ab2@14189>   MOVE.w -(A1),D1
0004062E <AmiBlitz3.ab2@14190>   MOVEA.l -(A1),A0
00040634 <AmiBlitz3.ab2@14191>   MOVE.l A1,precsp
00040636 <AmiBlitz3.ab2@14192> RTS
0004063A <AmiBlitz3.ab2@14195> precsp:      Dc.l precstack
00040736 <AmiBlitz3.ab2@14196> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
000407BA <AmiBlitz3.ab2@14197>              Ds.l 33
000407BC <AmiBlitz3.ab2@14203> mseq:  SEQ D0
000407BE <AmiBlitz3.ab2@14204> msne:    SNE D0
000407C0 <AmiBlitz3.ab2@14205> mslt:    SLT D0
000407C2 <AmiBlitz3.ab2@14206> msle:    SLE D0
000407C4 <AmiBlitz3.ab2@14207> msgt:    SGT D0
000407C6 <AmiBlitz3.ab2@14208> msge:    SGE D0
000407C8 <AmiBlitz3.ab2@14210> cmp0:    CMP.b D0,D0
000407CA <AmiBlitz3.ab2@14211> cmp1:    CMP.w D0,D0
000407CC <AmiBlitz3.ab2@14212> cmp2:    CMP.l D0,D0
000407D0 <AmiBlitz3.ab2@14216>   MOVE.w cmp0(PC),D1
000407D4 <AmiBlitz3.ab2@14217> BRA.w doeqcmp2                                            ;writecompare
000407D8 <AmiBlitz3.ab2@14221>   MOVE.w cmp0(PC),D1
000407DC <AmiBlitz3.ab2@14222> BRA.w donecmp2
000407E0 <AmiBlitz3.ab2@14226>   MOVE.w cmp0(PC),D1
000407E4 <AmiBlitz3.ab2@14227> BRA.w doltcmp2
000407E8 <AmiBlitz3.ab2@14231>   MOVE.w cmp0(PC),D1
000407EC <AmiBlitz3.ab2@14232> BRA.w dolecmp2
000407F0 <AmiBlitz3.ab2@14236>   MOVE.w cmp0(PC),D1
000407F4 <AmiBlitz3.ab2@14237> BRA.w dogtcmp2
000407F8 <AmiBlitz3.ab2@14242>   MOVE.w cmp0(PC),D1
000407FC <AmiBlitz3.ab2@14243> BRA.w dogecmp2
00040800 <AmiBlitz3.ab2@14247>   MOVE.w cmp1(PC),D1
00040804 <AmiBlitz3.ab2@14248> BRA.w doeqcmp2
00040808 <AmiBlitz3.ab2@14252>   MOVE.w cmp1(PC),D1
0004080C <AmiBlitz3.ab2@14253> BRA.w donecmp2
00040810 <AmiBlitz3.ab2@14257>   MOVE.w cmp1(PC),D1
00040814 <AmiBlitz3.ab2@14258> BRA.w doltcmp2
00040818 <AmiBlitz3.ab2@14262>   MOVE.w cmp1(PC),D1
0004081C <AmiBlitz3.ab2@14263> BRA.w dolecmp2
00040820 <AmiBlitz3.ab2@14267>   MOVE.w cmp1(PC),D1
00040824 <AmiBlitz3.ab2@14268> BRA.w dogtcmp2
00040828 <AmiBlitz3.ab2@14273>   MOVE.w cmp1(PC),D1
0004082C <AmiBlitz3.ab2@14274> BRA.w dogecmp2
00040830 <AmiBlitz3.ab2@14278>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
00040834 <AmiBlitz3.ab2@14279> BRA doeqcmp2
00040838 <AmiBlitz3.ab2@14282>   MOVE.w cmp2(PC),D1
0004083C <AmiBlitz3.ab2@14283> BRA donecmp2
00040840 <AmiBlitz3.ab2@14287>   MOVE.w cmp2(PC),D1
00040844 <AmiBlitz3.ab2@14288> BRA.w doltcmp2
00040848 <AmiBlitz3.ab2@14292>   MOVE.w cmp2(PC),D1
0004084C <AmiBlitz3.ab2@14293> BRA.w dolecmp2
00040850 <AmiBlitz3.ab2@14297>   MOVE.w cmp2(PC),D1
00040854 <AmiBlitz3.ab2@14298> BRA.w dogtcmp2
00040858 <AmiBlitz3.ab2@14302>   MOVE.w cmp2(PC),D1
0004085C <AmiBlitz3.ab2@14303> BRA.w dogecmp2
0004085E <AmiBlitz3.ab2@14306> cfregat:  Ds.w 1
00040864 <AmiBlitz3.ab2@14310>   MOVE.w D1,libjsr+2
00040868 <AmiBlitz3.ab2@14311>    BSR.w JL_0_AD40
0004086A <AmiBlitz3.ab2@14312>   MOVE.l D4,D1
0004086E <AmiBlitz3.ab2@14313>    BSR.w JL_0_AD38
00040872 <AmiBlitz3.ab2@14314>   MOVE.w #$C900,D1
00040876 <AmiBlitz3.ab2@14315>    BSR.w Atokejsr
0004087A <AmiBlitz3.ab2@14316>    BSR.w JL_0_A352
00040880 <AmiBlitz3.ab2@14317>   MOVE.l libjsr,D1
00040884 <AmiBlitz3.ab2@14318>    BSR.w writelong
0004088E <AmiBlitz3.ab2@14319>   MOVE.w regnum,cfregat
00040894 <AmiBlitz3.ab2@14320>   CLR.w regnum
00040896 <AmiBlitz3.ab2@14321> RTS
000408A0 <AmiBlitz3.ab2@14325>   MOVE.w cfregat,regnum
000408A4 <AmiBlitz3.ab2@14326>    BSR.w JL_0_A36E
000408A6 <AmiBlitz3.ab2@14327>   MOVE.l D5,D1
000408AA <AmiBlitz3.ab2@14328> BRA.w JL_0_AD38
000408AC <AmiBlitz3.ab2@14332>    MOVEQ.l #-$2A,D1
000408B2 <AmiBlitz3.ab2@14333>    TST.b fpu
000408B6 <AmiBlitz3.ab2@14334>    BEQ do_equal_float__nofpu
000408B8 <AmiBlitz3.ab2@14335>    MOVEQ #0,d1
000408BE <AmiBlitz3.ab2@14336>    MOVE.w regnum,d1
000408C0 <AmiBlitz3.ab2@14337>    MOVE.l d1,d2
000408C2 <AmiBlitz3.ab2@14338>    ASL.l #7,d1
000408C4 <AmiBlitz3.ab2@14339>    ADDQ  #1,d2
000408C6 <AmiBlitz3.ab2@14340>    ASL.l #8,d2
000408C8 <AmiBlitz3.ab2@14341>    ASL.l #2,d2
000408CA <AmiBlitz3.ab2@14342>    OR.l d2,d1
000408D0 <AmiBlitz3.ab2@14343>    OR.l #$f2000038,d1
000408D6 <AmiBlitz3.ab2@14344>    JSR writelong
000408DA <AmiBlitz3.ab2@14345>    MOVE.w #$f240,d1
000408E0 <AmiBlitz3.ab2@14346>    OR.w regnum,d1
000408E4 <AmiBlitz3.ab2@14347>    BSR writeword
000408E6 <AmiBlitz3.ab2@14348>    MOVEQ.l #1,d2
000408EA <AmiBlitz3.ab2@14349>    MOVE.w #1,d1                                            ;fpu comp fseq
000408EE <AmiBlitz3.ab2@14350>    BSR writeword
000408F0 <AmiBlitz3.ab2@14351> RTS
000408F4 <AmiBlitz3.ab2@14354>    BSR.w docflib
000408F8 <AmiBlitz3.ab2@14355>    BSR.w doeqcmp
000408FC <AmiBlitz3.ab2@14356> BRA.w docflib2
000408FE <AmiBlitz3.ab2@14360>   MOVEQ.l #-$2A,D1
00040904 <AmiBlitz3.ab2@14361>   TST.b fpu
00040908 <AmiBlitz3.ab2@14362>    BEQ do_not_equal_float__nofpu
0004090A <AmiBlitz3.ab2@14363>    MOVEQ #0,d1
00040910 <AmiBlitz3.ab2@14364>    MOVE.w regnum,d1
00040912 <AmiBlitz3.ab2@14365>    MOVE.l d1,d2
00040914 <AmiBlitz3.ab2@14366>    ASL.l #7,d1
00040916 <AmiBlitz3.ab2@14367>    ADDQ  #1,d2
00040918 <AmiBlitz3.ab2@14368>    ASL.l #8,d2
0004091A <AmiBlitz3.ab2@14369>    ASL.l #2,d2
0004091C <AmiBlitz3.ab2@14370>    OR.l d2,d1
00040922 <AmiBlitz3.ab2@14371>    OR.l #$f2000038,d1
00040928 <AmiBlitz3.ab2@14372>    JSR writelong
0004092C <AmiBlitz3.ab2@14373>    MOVE.w #$f240,d1
00040932 <AmiBlitz3.ab2@14374>    OR.w regnum,d1
00040936 <AmiBlitz3.ab2@14375>    BSR writeword
0004093C <AmiBlitz3.ab2@14376>    MOVE.l #1,d2
00040940 <AmiBlitz3.ab2@14377>    MOVE.w #$e,d1                                           ;fpu comp fsne
00040944 <AmiBlitz3.ab2@14378>    BSR writeword
00040946 <AmiBlitz3.ab2@14379> RTS
0004094A <AmiBlitz3.ab2@14382>    BSR.w docflib
0004094E <AmiBlitz3.ab2@14383>    BSR.w donecmp
00040952 <AmiBlitz3.ab2@14384> BRA.w docflib2
00040954 <AmiBlitz3.ab2@14388>   MOVEQ.l #-$2A,D1
0004095A <AmiBlitz3.ab2@14389>     TST.b fpu
0004095E <AmiBlitz3.ab2@14390>    BEQ do_littler_float__nofpu
00040960 <AmiBlitz3.ab2@14391>    MOVEQ #0,d1
00040966 <AmiBlitz3.ab2@14392>    MOVE.w regnum,d1
00040968 <AmiBlitz3.ab2@14393>    MOVE.l d1,d2
0004096A <AmiBlitz3.ab2@14394>    ASL.l #7,d1
0004096C <AmiBlitz3.ab2@14395>    ADDQ  #1,d2
0004096E <AmiBlitz3.ab2@14396>    ASL.l #8,d2
00040970 <AmiBlitz3.ab2@14397>    ASL.l #2,d2
00040972 <AmiBlitz3.ab2@14398>    OR.l d2,d1
00040978 <AmiBlitz3.ab2@14399>    OR.l #$f2000038,d1
0004097E <AmiBlitz3.ab2@14400>    JSR writelong
00040982 <AmiBlitz3.ab2@14401>    MOVE.w #$f240,d1
00040988 <AmiBlitz3.ab2@14402>    OR.w regnum,d1
0004098C <AmiBlitz3.ab2@14403>    BSR writeword
00040992 <AmiBlitz3.ab2@14404>    MOVE.l #$1,d2
00040996 <AmiBlitz3.ab2@14405>    MOVE.w #$14,d1                                          ;fpu comp fslt
0004099A <AmiBlitz3.ab2@14406>    BSR writeword
0004099C <AmiBlitz3.ab2@14407> RTS
000409A0 <AmiBlitz3.ab2@14410>    BSR.w docflib
000409A4 <AmiBlitz3.ab2@14411>    BSR.w doltcmp
000409A8 <AmiBlitz3.ab2@14412> BRA.w docflib2
000409AA <AmiBlitz3.ab2@14416>   MOVEQ.l #-$2A,D1
000409B0 <AmiBlitz3.ab2@14417>   TST.b fpu
000409B4 <AmiBlitz3.ab2@14418>    BEQ do_littler_equal_float__nofpu
000409B6 <AmiBlitz3.ab2@14419>    MOVEQ #0,d1
000409BC <AmiBlitz3.ab2@14420>    MOVE.w regnum,d1
000409BE <AmiBlitz3.ab2@14421>    MOVE.l d1,d2
000409C0 <AmiBlitz3.ab2@14422>    ASL.l #7,d1
000409C2 <AmiBlitz3.ab2@14423>    ADDQ  #1,d2
000409C4 <AmiBlitz3.ab2@14424>    ASL.l #8,d2
000409C6 <AmiBlitz3.ab2@14425>    ASL.l #2,d2
000409C8 <AmiBlitz3.ab2@14426>    OR.l d2,d1
000409CE <AmiBlitz3.ab2@14427>    OR.l #$f2000038,d1
000409D4 <AmiBlitz3.ab2@14428>    JSR writelong
000409D8 <AmiBlitz3.ab2@14429>    MOVE.w #$f240,d1
000409DE <AmiBlitz3.ab2@14430>    OR.w regnum,d1
000409E2 <AmiBlitz3.ab2@14431>    BSR writeword
000409E8 <AmiBlitz3.ab2@14432>    MOVE.l #1,d2
000409EC <AmiBlitz3.ab2@14433>    MOVE.w #$15,d1                                          ;fpu comp fsle
000409F0 <AmiBlitz3.ab2@14434>    BSR writeword
000409F2 <AmiBlitz3.ab2@14435> RTS
000409F6 <AmiBlitz3.ab2@14438>    BSR.w docflib
000409FA <AmiBlitz3.ab2@14439>    BSR.w dolecmp
000409FE <AmiBlitz3.ab2@14440> BRA.w docflib2
00040A00 <AmiBlitz3.ab2@14444>   MOVEQ.l #-$2A,D1
00040A06 <AmiBlitz3.ab2@14445>    TST.b fpu
00040A0A <AmiBlitz3.ab2@14446>    BEQ do_greater_float__nofpu
00040A0C <AmiBlitz3.ab2@14447>     MOVEQ #0,d1
00040A12 <AmiBlitz3.ab2@14448>    MOVE.w regnum,d1
00040A14 <AmiBlitz3.ab2@14449>    MOVE.l d1,d2
00040A16 <AmiBlitz3.ab2@14450>    ASL.l #7,d1
00040A18 <AmiBlitz3.ab2@14451>    ADDQ  #1,d2
00040A1A <AmiBlitz3.ab2@14452>    ASL.l #8,d2
00040A1C <AmiBlitz3.ab2@14453>    ASL.l #2,d2
00040A1E <AmiBlitz3.ab2@14454>    OR.l d2,d1
00040A24 <AmiBlitz3.ab2@14455>    OR.l #$f2000038,d1
00040A2A <AmiBlitz3.ab2@14456>    JSR writelong
00040A2E <AmiBlitz3.ab2@14457>    MOVE.w #$f240,d1
00040A34 <AmiBlitz3.ab2@14458>    OR.w regnum,d1
00040A38 <AmiBlitz3.ab2@14459>    BSR writeword
00040A3E <AmiBlitz3.ab2@14460>    MOVE.l #1,d2
00040A42 <AmiBlitz3.ab2@14461>    MOVE.w #$12,d1                                          ;fpu comp fsgt
00040A46 <AmiBlitz3.ab2@14462>    BSR writeword
00040A48 <AmiBlitz3.ab2@14463> RTS
00040A4C <AmiBlitz3.ab2@14466>    BSR.w docflib
00040A50 <AmiBlitz3.ab2@14467>    BSR.w dogtcmp
00040A54 <AmiBlitz3.ab2@14468> BRA.w docflib2
00040A56 <AmiBlitz3.ab2@14472>   MOVEQ.l #-$2A,D1
00040A5C <AmiBlitz3.ab2@14473>  TST.b fpu
00040A60 <AmiBlitz3.ab2@14474>    BEQ do_greater_equal_float__nofpu
00040A62 <AmiBlitz3.ab2@14475>    MOVEQ #0,d1
00040A68 <AmiBlitz3.ab2@14476>    MOVE.w regnum,d1
00040A6A <AmiBlitz3.ab2@14477>    MOVE.l d1,d2
00040A6C <AmiBlitz3.ab2@14478>    ASL.l #7,d1
00040A6E <AmiBlitz3.ab2@14479>    ADDQ  #1,d2
00040A70 <AmiBlitz3.ab2@14480>    ASL.l #8,d2
00040A72 <AmiBlitz3.ab2@14481>    ASL.l #2,d2
00040A74 <AmiBlitz3.ab2@14482>    OR.l d2,d1
00040A7A <AmiBlitz3.ab2@14483>    OR.l #$f2000038,d1
00040A80 <AmiBlitz3.ab2@14484>    JSR writelong
00040A84 <AmiBlitz3.ab2@14485>    MOVE.w #$f240,d1
00040A8A <AmiBlitz3.ab2@14486>    OR.w regnum,d1
00040A8E <AmiBlitz3.ab2@14487>    BSR writeword
00040A94 <AmiBlitz3.ab2@14488>    MOVE.l #1,d2
00040A98 <AmiBlitz3.ab2@14489>    MOVE.w #$13,d1                                          ;fpu comp fsge
00040A9C <AmiBlitz3.ab2@14490>    BSR writeword
00040A9E <AmiBlitz3.ab2@14491> RTS
00040AA2 <AmiBlitz3.ab2@14494>    BSR.w docflib
00040AA6 <AmiBlitz3.ab2@14495>    BSR.w dogecmp
00040AAA <AmiBlitz3.ab2@14496> BRA.w docflib2
00040AB0 <AmiBlitz3.ab2@14501>   MOVE.l #$CE00,D1
00040AB6 <AmiBlitz3.ab2@14502>    MOVE.l d1,lastinstruction
00040ABA <AmiBlitz3.ab2@14503>    BSR.w Atokejsr
00040ABE <AmiBlitz3.ab2@14504> BRA.w doeqcmp
00040AC4 <AmiBlitz3.ab2@14508>   MOVE.l #$CE00,D1
00040ACA <AmiBlitz3.ab2@14509>    MOVE.l d1,lastinstruction
00040ACE <AmiBlitz3.ab2@14510>    BSR.w Atokejsr
00040AD2 <AmiBlitz3.ab2@14511> BRA.w donecmp
00040AD8 <AmiBlitz3.ab2@14515>   MOVE.l #$CE00,D1
00040ADE <AmiBlitz3.ab2@14516>    MOVE.l d1,lastinstruction
00040AE2 <AmiBlitz3.ab2@14517>    BSR.w Atokejsr
00040AE6 <AmiBlitz3.ab2@14518> BRA.w doltcmp
00040AEC <AmiBlitz3.ab2@14522>   MOVE.l #$CE00,D1
00040AF2 <AmiBlitz3.ab2@14523>    MOVE.l d1,lastinstruction
00040AF6 <AmiBlitz3.ab2@14524>    BSR.w Atokejsr
00040AFA <AmiBlitz3.ab2@14525> BRA.w dolecmp
00040B00 <AmiBlitz3.ab2@14529>   MOVE.l #$CE00,D1
00040B06 <AmiBlitz3.ab2@14530>    MOVE.l d1,lastinstruction
00040B0A <AmiBlitz3.ab2@14531>    BSR.w Atokejsr
00040B0E <AmiBlitz3.ab2@14532> BRA.w dogtcmp
00040B14 <AmiBlitz3.ab2@14536>   MOVE.l #$CE00,D1
00040B1A <AmiBlitz3.ab2@14537>    MOVE.l d1,lastinstruction
00040B1E <AmiBlitz3.ab2@14538>    BSR.w Atokejsr
00040B22 <AmiBlitz3.ab2@14539> BRA.w dogecmp
00040B28 <AmiBlitz3.ab2@14544>   TST.b fast                                               ;compare
00040B2C <AmiBlitz3.ab2@14545>   BEQ cmpit__org
00040B32 <AmiBlitz3.ab2@14549>   MOVE.l destpointer,a0
00040B38 <AmiBlitz3.ab2@14550>   SUB.l imm_addr,a0
00040B3E <AmiBlitz3.ab2@14551>   CMP.l #6,a0
00040B42 <AmiBlitz3.ab2@14552>   BNE cmpit__l11
00040B48 <AmiBlitz3.ab2@14553>   MOVE.l imm_addr,a0
00040B50 <AmiBlitz3.ab2@14554>   CMP.w #$223c,imm_addr
00040B54 <AmiBlitz3.ab2@14555>   BNE cmpit__org
00040B5A <AmiBlitz3.ab2@14556>   ADD.w #$8e80,-6(a4)
00040B60 <AmiBlitz3.ab2@14559>   CLR.l imm_addr
00040B62 <AmiBlitz3.ab2@14560> RTS
00040B68 <AmiBlitz3.ab2@14563>   CMP.l #4,a0
00040B6C <AmiBlitz3.ab2@14564>   BNE cmpit__l10
00040B70 <AmiBlitz3.ab2@14565>   CMP.b #2,d3
00040B74 <AmiBlitz3.ab2@14566>   BNE cmpit__l11b
00040B7A <AmiBlitz3.ab2@14567>   ADD.w #$7e40,-4(a4)
00040B7C <AmiBlitz3.ab2@14568> RTS
00040B82 <AmiBlitz3.ab2@14571>  ADD.w #$7e00,-4(a4)
00040B84 <AmiBlitz3.ab2@14572> RTS
00040B8A <AmiBlitz3.ab2@14575>    MOVE.l destpointer,a0
00040B90 <AmiBlitz3.ab2@14576>    SUB.l load_var_addr,a0
00040B94 <AmiBlitz3.ab2@14577>    CMP.w #4,a0
00040B98 <AmiBlitz3.ab2@14578>    BNE cmpit__org
00040B9C <AmiBlitz3.ab2@14579>    CMP.b #3,d3
00040BA0 <AmiBlitz3.ab2@14580>    BCS cmpit__lv1
00040BA6 <AmiBlitz3.ab2@14581>    CLR.l load_var_addr
00040BAC <AmiBlitz3.ab2@14582>    ADD.w #$9080-$200,-4(a4)
00040BAE <AmiBlitz3.ab2@14583> RTS
00040BB2 <AmiBlitz3.ab2@14586>   CMP.b #2,d3
00040BB6 <AmiBlitz3.ab2@14587>    BNE cmpit__org
00040BBC <AmiBlitz3.ab2@14588>    CLR.l load_var_addr
00040BC2 <AmiBlitz3.ab2@14589>    ADD.w #$8040-$200,-4(a4)
00040BC4 <AmiBlitz3.ab2@14590> RTS
00040BCA <AmiBlitz3.ab2@14593>   MOVE.w regnum,D3
00040BCC <AmiBlitz3.ab2@14594>   OR.w D3,D1
00040BCE <AmiBlitz3.ab2@14595>   LSL.w #8,D3
00040BD0 <AmiBlitz3.ab2@14596>   LSL.w #1,D3
00040BD2 <AmiBlitz3.ab2@14597>   OR.w D3,D1
00040BD4 <AmiBlitz3.ab2@14598>   ADDQ.w #1,D1
00040BD8 <AmiBlitz3.ab2@14599> BRA.w writeword
00040BDC <AmiBlitz3.ab2@14603>    BSR.w cmpit
00040BE0 <AmiBlitz3.ab2@14606>    MOVE.w mseq(PC),D1
00040BE4 <AmiBlitz3.ab2@14607> BRA.w cpoke
00040BE8 <AmiBlitz3.ab2@14611>   BSR.w cmpit
00040BEC <AmiBlitz3.ab2@14614>   MOVE.w msne(PC),D1
00040BF0 <AmiBlitz3.ab2@14615> BRA.w cpoke
00040BF4 <AmiBlitz3.ab2@14619>   BSR.w cmpit
00040BF8 <AmiBlitz3.ab2@14622>    MOVE.w mslt(PC),D1
00040BFC <AmiBlitz3.ab2@14623> BRA.w cpoke
00040C00 <AmiBlitz3.ab2@14627>    BSR.w cmpit
00040C04 <AmiBlitz3.ab2@14630>    MOVE.w msle(PC),D1
00040C08 <AmiBlitz3.ab2@14631> BRA.w cpoke
00040C0C <AmiBlitz3.ab2@14635>    BSR.w cmpit
00040C10 <AmiBlitz3.ab2@14638>    MOVE.w msgt(PC),D1
00040C14 <AmiBlitz3.ab2@14639> BRA.w cpoke
00040C18 <AmiBlitz3.ab2@14643>   BSR.w cmpit
00040C1C <AmiBlitz3.ab2@14646>    MOVE.w msge(PC),D1
00040C22 <AmiBlitz3.ab2@14649>    OR.w regnum,D1
00040C26 <AmiBlitz3.ab2@14650>    CMP.w #5,d2
00040C2A <AmiBlitz3.ab2@14651>    BNE cpoke__nod0
00040C2E <AmiBlitz3.ab2@14652>    CMP.w #5,d3
00040C32 <AmiBlitz3.ab2@14653>    BNE cpoke__nod0
00040C34 <AmiBlitz3.ab2@14654>    MOVE.l d1,-(a7)
00040C3A <AmiBlitz3.ab2@14655>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
00040C3E <AmiBlitz3.ab2@14656>    BSR writelong
00040C40 <AmiBlitz3.ab2@14657>    MOVE.l (a7)+,d1
00040C44 <AmiBlitz3.ab2@14660>    BSR.w writeword                                         ;writeseq
00040C46 <AmiBlitz3.ab2@14661>    MOVEQ.l #1,d2
00040C4C <AmiBlitz3.ab2@14662>    MOVE.l lasttoken,d1
00040C52 <AmiBlitz3.ab2@14663>     TST.b fast
00040C56 <AmiBlitz3.ab2@14664>     BEQ.s cpoke__l11
00040C5C <AmiBlitz3.ab2@14665>    CMP.l #$800b,d1
00040C60 <AmiBlitz3.ab2@14666>    BEQ cpoke__l10
00040C64 <AmiBlitz3.ab2@14669>   MOVE.w #$4880,D1                                         ;ext.w D regat
00040C6A <AmiBlitz3.ab2@14670>   OR.w regnum,D1
00040C6E <AmiBlitz3.ab2@14671>    BSR.w writeword                                         ;writeext.w
00040C70 <AmiBlitz3.ab2@14672>   MOVEQ.l #$02,D2                                          ;type now WORD!
00040C72 <AmiBlitz3.ab2@14675> RTS
00040C76 <AmiBlitz3.ab2@14680>   MOVE.w #$D040,D1
00040C78 <AmiBlitz3.ab2@14681>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
00040C7C <AmiBlitz3.ab2@14682> BRA.w doplus2
00040C80 <AmiBlitz3.ab2@14686>   MOVE.w #$D040,D1
00040C82 <AmiBlitz3.ab2@14687>   MOVEQ.l #$03,D2                                          ;now a long
00040C86 <AmiBlitz3.ab2@14688>    BSR.w doplus2
00040C8A <AmiBlitz3.ab2@14689> BRA.w convert_word_to_long
00040C8E <AmiBlitz3.ab2@14693>   MOVE.w #$D080,D1                                         ;writeaddlong
00040C90 <AmiBlitz3.ab2@14696>   MOVE.w d1,a1
00040C96 <AmiBlitz3.ab2@14697>   TST.b fast
00040C9A <AmiBlitz3.ab2@14698>   BEQ doplus2__l10
00040C9C <AmiBlitz3.ab2@14702>   ASR.w #8,d1
00040CA0 <AmiBlitz3.ab2@14703>   CMP.b #$90,d1
00040CA4 <AmiBlitz3.ab2@14704>   BEQ doplus2__sub1
00040CA8 <AmiBlitz3.ab2@14705>   CMP.b #$d0,d1
00040CAC <AmiBlitz3.ab2@14706>   BNE doplus2__l10
00040CB0 <AmiBlitz3.ab2@14707>   CMP.b #3,d3
00040CB4 <AmiBlitz3.ab2@14708>   BCS doplus2__lq10
00040CBA <AmiBlitz3.ab2@14709>   TST.b quickadd
00040CC0 <AmiBlitz3.ab2@14713>    MOVE.l destpointer,a0
00040CC6 <AmiBlitz3.ab2@14714>    CLR.b quickadd
00040CCC <AmiBlitz3.ab2@14715>    CLR.l load_var_addr
00040CD2 <AmiBlitz3.ab2@14716>    SUB.l imm_addr,a0
00040CD6 <AmiBlitz3.ab2@14717>    CMP.w #6,a0
00040CDA <AmiBlitz3.ab2@14718>    BEQ doplus2__li10
00040CDE <AmiBlitz3.ab2@14719>    CMP.w #4,a0
00040CE2 <AmiBlitz3.ab2@14720>    BNE.s doplus2__li1
00040CE8 <AmiBlitz3.ab2@14721>    CLR.l imm_addr
00040CEE <AmiBlitz3.ab2@14722>    ADD.w #$a040-$200,-4(a4)
00040CF0 <AmiBlitz3.ab2@14723> RTS
00040CF2 <AmiBlitz3.ab2@14726>    MOVE.l a4,a0
00040CF8 <AmiBlitz3.ab2@14727>    SUB.l load_var_addr,a0
00040CFE <AmiBlitz3.ab2@14728>    CMP.l #$a,a0
00040D02 <AmiBlitz3.ab2@14729>    BNE doplus2__l10e
00040D08 <AmiBlitz3.ab2@14730>    CLR.l load_var_addr
00040D0C <AmiBlitz3.ab2@14731>    MOVE.w -$8(a4),d1
00040D12 <AmiBlitz3.ab2@14732>    MOVE.l -$4(a4),-$8(a4)
00040D16 <AmiBlitz3.ab2@14733>    MOVE.w d1,-$4(a4)
00040D1C <AmiBlitz3.ab2@14734>    SUB.w #$1980,-$a(a4)
00040D22 <AmiBlitz3.ab2@14735>    SUBQ.l #2,destpointer
00040D24 <AmiBlitz3.ab2@14736> RTS
00040D2A <AmiBlitz3.ab2@14739>   CLR.b quickadd
00040D2E <AmiBlitz3.ab2@14740> BRA doplus2__l10
00040D34 <AmiBlitz3.ab2@14743>    CLR.l imm_addr
00040D38 <AmiBlitz3.ab2@14744>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
00040D3C <AmiBlitz3.ab2@14745>    BNE doplus2__doit
00040D42 <AmiBlitz3.ab2@14746>    SUBQ.l #6,destpointer
00040D44 <AmiBlitz3.ab2@14747> RTS
00040D4A <AmiBlitz3.ab2@14750>    ADD.w #$b080-$200,-6(a4)
00040D4C <AmiBlitz3.ab2@14751> RTS
00040D52 <AmiBlitz3.ab2@14754>    MOVE.l destpointer,a0
00040D58 <AmiBlitz3.ab2@14755>    SUB.l load_var_addr,a0
00040D5C <AmiBlitz3.ab2@14756>    CMP.w #4,a0
00040D60 <AmiBlitz3.ab2@14757>    BNE doplus2__l10
00040D64 <AmiBlitz3.ab2@14758>    CMP.b #3,d3
00040D68 <AmiBlitz3.ab2@14759>    BNE doplus2__lv1
00040D6E <AmiBlitz3.ab2@14760>    CLR.l load_var_addr
00040D74 <AmiBlitz3.ab2@14761>    ADD.w #$b080-$200,-4(a4)
00040D76 <AmiBlitz3.ab2@14762> RTS
00040D7A <AmiBlitz3.ab2@14765>   CMP.b #2,d3
00040D7E <AmiBlitz3.ab2@14766>   BNE doplus2__l10
00040D84 <AmiBlitz3.ab2@14767>   CLR.l load_var_addr
00040D8A <AmiBlitz3.ab2@14768>   ADD.w #$a040-$200,-4(a4)
00040D8C <AmiBlitz3.ab2@14769> RTS
00040D92 <AmiBlitz3.ab2@14772>   MOVE.w regnum,D3
00040D94 <AmiBlitz3.ab2@14773>   MOVE.w a1,d1
00040D96 <AmiBlitz3.ab2@14774>   OR.w D3,D1
00040D98 <AmiBlitz3.ab2@14775>   ADDQ.w #1,D1
00040D9A <AmiBlitz3.ab2@14776>   LSL.w #8,D3
00040D9C <AmiBlitz3.ab2@14777>   LSL.w #1,D3
00040D9E <AmiBlitz3.ab2@14778>   OR.w D3,D1
00040DA2 <AmiBlitz3.ab2@14779> BRA.w writeword
00040DA6 <AmiBlitz3.ab2@14782>    CMP.b #3,d3
00040DAA <AmiBlitz3.ab2@14783>    BCS doplus2__sub1_lq10
00040DB0 <AmiBlitz3.ab2@14784>    TST.b quickadd
00040DB6 <AmiBlitz3.ab2@14788>    MOVE.l destpointer,a0
00040DBC <AmiBlitz3.ab2@14789>    CLR.b quickadd
00040DC2 <AmiBlitz3.ab2@14790>    CLR.l load_var_addr
00040DC8 <AmiBlitz3.ab2@14791>    SUB.l imm_addr,a0
00040DCC <AmiBlitz3.ab2@14792>    CMP.w #6,a0
00040DD0 <AmiBlitz3.ab2@14793>    BEQ doplus2__sub1_li10
00040DD4 <AmiBlitz3.ab2@14794>    CMP.w #4,a0
00040DD8 <AmiBlitz3.ab2@14795>    BNE.s doplus2__sub1_li1
00040DDE <AmiBlitz3.ab2@14796>    CLR.l imm_addr
00040DE4 <AmiBlitz3.ab2@14797>    ADD.w #$6040-$200,-4(a4)
00040DE6 <AmiBlitz3.ab2@14798> RTS
00040DE8 <AmiBlitz3.ab2@14801>    MOVE.l a4,a0
00040DEE <AmiBlitz3.ab2@14802>     SUB.l load_var_addr,a0
00040DF4 <AmiBlitz3.ab2@14803>     CMP.l #$a,a0
00040DF8 <AmiBlitz3.ab2@14804>     BNE doplus2__sub1_l10e
00040DFE <AmiBlitz3.ab2@14805>    CLR.l load_var_addr
00040E02 <AmiBlitz3.ab2@14806>    MOVE.w -$8(a4),d1
00040E08 <AmiBlitz3.ab2@14807>    MOVE.l -$4(a4),-$8(a4)
00040E0C <AmiBlitz3.ab2@14808>    MOVE.w d1,-$4(a4)
00040E12 <AmiBlitz3.ab2@14809>    SUB.w #$1b80,-$a(a4)
00040E18 <AmiBlitz3.ab2@14810>    SUBQ.l #2,destpointer
00040E1A <AmiBlitz3.ab2@14811> RTS
00040E20 <AmiBlitz3.ab2@14814>   CLR.b quickadd
00040E24 <AmiBlitz3.ab2@14815> BRA doplus2__sub1_l10
00040E2A <AmiBlitz3.ab2@14818>    CLR.l imm_addr
00040E30 <AmiBlitz3.ab2@14819>    ADD.w #$7080-$200,-6(a4)
00040E32 <AmiBlitz3.ab2@14820> RTS
00040E38 <AmiBlitz3.ab2@14823>    MOVE.l destpointer,a0
00040E3E <AmiBlitz3.ab2@14824>    SUB.l load_var_addr,a0
00040E42 <AmiBlitz3.ab2@14825>    CMP.w #4,a0
00040E46 <AmiBlitz3.ab2@14826>    BNE doplus2__sub1_l10
00040E4A <AmiBlitz3.ab2@14827>    CMP.b #3,d3
00040E4E <AmiBlitz3.ab2@14828>    BNE doplus2__sub1_lv1
00040E54 <AmiBlitz3.ab2@14829>    CLR.l load_var_addr
00040E5A <AmiBlitz3.ab2@14830>    ADD.w #$7080-$200,-4(a4)
00040E5C <AmiBlitz3.ab2@14831> RTS
00040E60 <AmiBlitz3.ab2@14834>    CMP.b #2,d3
00040E64 <AmiBlitz3.ab2@14835>    BNE doplus2__sub1_l10
00040E6A <AmiBlitz3.ab2@14836>    CLR.l load_var_addr
00040E70 <AmiBlitz3.ab2@14837>    ADD.w #$6040-$200,-4(a4)
00040E72 <AmiBlitz3.ab2@14838> RTS
00040E78 <AmiBlitz3.ab2@14841>   MOVE.w regnum,D3
00040E7A <AmiBlitz3.ab2@14842>   MOVE.w a1,d1
00040E7C <AmiBlitz3.ab2@14843>   OR.w D3,D1
00040E7E <AmiBlitz3.ab2@14844>   ADDQ.w #1,D1
00040E80 <AmiBlitz3.ab2@14845>   LSL.w #8,D3
00040E82 <AmiBlitz3.ab2@14846>   LSL.w #1,D3
00040E84 <AmiBlitz3.ab2@14847>   OR.w D3,D1
00040E88 <AmiBlitz3.ab2@14848> BRA.w writeword
00040E8A <AmiBlitz3.ab2@14852>   MOVEQ #0,d0
00040E90 <AmiBlitz3.ab2@14853>   MOVE.w regnum,d0
00040E92 <AmiBlitz3.ab2@14854>   ADDQ #1,d0
00040E94 <AmiBlitz3.ab2@14855>   ASL.w #8,d0
00040E96 <AmiBlitz3.ab2@14856>   ASL.w #2,d0
00040E9C <AmiBlitz3.ab2@14857>   MOVE.l #$f2000022,d1                                     ;fpu add
00040E9E <AmiBlitz3.ab2@14858>   OR.l d0,d1
00040EA4 <AmiBlitz3.ab2@14859>   MOVE.w regnum,d0
00040EA6 <AmiBlitz3.ab2@14860>   ASL.w #7,d0
00040EA8 <AmiBlitz3.ab2@14861>   OR.l d0,d1
00040EAC <AmiBlitz3.ab2@14862> BRA.w writelong
00040EB2 <AmiBlitz3.ab2@14868>   TST.b iee
00040EB6 <AmiBlitz3.ab2@14869>   BNE do_plus_float__fadd1
00040EBA <AmiBlitz3.ab2@14870>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
00040EC0 <AmiBlitz3.ab2@14873>    MOVE.w D1,libjsr+2
00040EC4 <AmiBlitz3.ab2@14874>    BSR.w JL_0_AD40
00040EC6 <AmiBlitz3.ab2@14875>   MOVE.l D4,D1
00040ECA <AmiBlitz3.ab2@14876>    BSR.w JL_0_AD38
00040ECE <AmiBlitz3.ab2@14877>   MOVE.w #$C900,D1
00040ED2 <AmiBlitz3.ab2@14878>    BSR.w Atokejsr
00040ED6 <AmiBlitz3.ab2@14879>    BSR.w JL_0_A352
00040EDC <AmiBlitz3.ab2@14880>   MOVE.l libjsr,D1
00040EE0 <AmiBlitz3.ab2@14881>    BSR.w writelong
00040EE4 <AmiBlitz3.ab2@14882>    BSR.w JL_0_A36E
00040EE6 <AmiBlitz3.ab2@14883>   MOVE.l D5,D1
00040EEA <AmiBlitz3.ab2@14884> BRA.w JL_0_AD38
00040EF0 <AmiBlitz3.ab2@14888>   MOVE.w regnum,D1
00040EF2 <AmiBlitz3.ab2@14889>   LSL.w #8,D1
00040EF4 <AmiBlitz3.ab2@14890>   LSL.w #1,D1
00040EF6 <AmiBlitz3.ab2@14891>   MOVE.w D1,-(A7)
00040EFA <AmiBlitz3.ab2@14892>   CMP.w #3072,d1
00040EFE <AmiBlitz3.ab2@14893>   BEQ 'l1
00040F04 <AmiBlitz3.ab2@14894>   OR.w addcode,D1                                          ;move.l (a7)+,d0
00040F08 <AmiBlitz3.ab2@14895> BRA 'l2
00040F0C <AmiBlitz3.ab2@14898>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
00040F10 <AmiBlitz3.ab2@14901>    BSR.w writeword
00040F12 <AmiBlitz3.ab2@14902>   MOVE.w (A7)+,D1
00040F18 <AmiBlitz3.ab2@14903>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
00040F1C <AmiBlitz3.ab2@14904> BRA.w writeword
00040F20 <AmiBlitz3.ab2@14910>   MOVE.w #$9040,D1
00040F24 <AmiBlitz3.ab2@14911> BRA.w doplus2
00040F28 <AmiBlitz3.ab2@14915>   MOVE.w #$9040,D1
00040F2C <AmiBlitz3.ab2@14916> BRA.w doplus2
00040F30 <AmiBlitz3.ab2@14920>   MOVE.w #$9080,D1
00040F34 <AmiBlitz3.ab2@14921> BRA.w doplus2
00040F3A <AmiBlitz3.ab2@14925>    TST.b iee
00040F3E <AmiBlitz3.ab2@14926>     BNE do_minus_float__fs1
00040F42 <AmiBlitz3.ab2@14927>   MOVE.w #$FFB8,D1                                         ;floatsub
00040F46 <AmiBlitz3.ab2@14928> BRA.w doflib
00040F48 <AmiBlitz3.ab2@14931>   MOVEQ #0,d0
00040F4E <AmiBlitz3.ab2@14932>   MOVE.w regnum,d0
00040F50 <AmiBlitz3.ab2@14933>   ADDQ #1,d0
00040F52 <AmiBlitz3.ab2@14934>   ASL.w #8,d0
00040F54 <AmiBlitz3.ab2@14935>   ASL.w #2,d0
00040F5A <AmiBlitz3.ab2@14936>   MOVE.l #$f2000028,d1
00040F5C <AmiBlitz3.ab2@14937>   OR.l d0,d1
00040F62 <AmiBlitz3.ab2@14938>   MOVE.w regnum,d0
00040F64 <AmiBlitz3.ab2@14939>   ASL.w #7,d0
00040F66 <AmiBlitz3.ab2@14940>   OR.l d0,d1
00040F6A <AmiBlitz3.ab2@14941> BRA.w writelong
00040F6E <AmiBlitz3.ab2@14947>   MOVE.w #$C1C0,D1
00040F70 <AmiBlitz3.ab2@14948>   MOVEQ.l #$02,D2                                          ;now a word
00040F74 <AmiBlitz3.ab2@14949> BRA.w doplus2
00040F78 <AmiBlitz3.ab2@14953>   MOVE.w #$C1C0,D1
00040F7A <AmiBlitz3.ab2@14954>   MOVEQ.l #$03,D2                                          ;now a long.
00040F7E <AmiBlitz3.ab2@14955> BRA.w doplus2
00040F82 <AmiBlitz3.ab2@14959>   MOVE.w #$CA00,D1                                         ;quickmul
00040F86 <AmiBlitz3.ab2@14960> BRA.w domylib
00040F8C <AmiBlitz3.ab2@14964>   TST.b fast
00040F90 <AmiBlitz3.ab2@14965>   BNE.s 'l10
00040F94 <AmiBlitz3.ab2@14966>   MOVE.w #$CA01,D1                                         ;writelongmul
00040F98 <AmiBlitz3.ab2@14967> BRA.w domylib
00040F9E <AmiBlitz3.ab2@14976>    MOVE.l destpointer,a0
00040FA4 <AmiBlitz3.ab2@14977>    SUB.l imm_addr,a0
00040FA8 <AmiBlitz3.ab2@14978>    CMP.w #6,a0
00040FAC <AmiBlitz3.ab2@14979>    BNE 'li1
00040FAE <AmiBlitz3.ab2@14980>    MOVEQ.l #2,d1
00040FB0 <AmiBlitz3.ab2@14981>    MOVEQ #1,d3
00040FB4 <AmiBlitz3.ab2@14984>   CMP.l -4(a4),d1
00040FB8 <AmiBlitz3.ab2@14985>    BEQ 'oklsl
00040FBA <AmiBlitz3.ab2@14986>     LSL.l #1,d1
00040FC0 <AmiBlitz3.ab2@14987>     ADD.l #1,d3
00040FC6 <AmiBlitz3.ab2@14988>     CMP.l #9,d3
00040FCA <AmiBlitz3.ab2@14989>     BNE 'ag
00040FCE <AmiBlitz3.ab2@14990>    MOVE.w -2(a4),d1
00040FD2 <AmiBlitz3.ab2@14991>    BSR writeword
00040FD8 <AmiBlitz3.ab2@14992>    MOVE.w -6(a4),-4(a4)
00040FE0 <AmiBlitz3.ab2@14993>    MOVE.l #$4c3c0800,-8(a4)
00040FE6 <AmiBlitz3.ab2@14994>    MOVE.w regnum,D3
00040FEA <AmiBlitz3.ab2@14995>    MULS #$1000,D3
00040FEE <AmiBlitz3.ab2@14996>    OR.w D3,-6(a4)
00040FF4 <AmiBlitz3.ab2@14997>    CLR.l load_var_addr
00040FFA <AmiBlitz3.ab2@14998>    CLR.l imm_addr
00040FFE <AmiBlitz3.ab2@14999> BRA 'li3
00041002 <AmiBlitz3.ab2@15002>    CMP.w #8,d3
00041006 <AmiBlitz3.ab2@15003>    BEQ 'ok
00041008 <AmiBlitz3.ab2@15004>    ASL.l #1,d3
0004100A <AmiBlitz3.ab2@15005>    ASL.l #8,d3
0004100E <AmiBlitz3.ab2@15006>    MOVE.w #$e188,d1
00041010 <AmiBlitz3.ab2@15007>    OR.w d3,d1
00041014 <AmiBlitz3.ab2@15008>    MOVE.w d1,-6(a4)
00041018 <AmiBlitz3.ab2@15009> BRA 'okls
0004101E <AmiBlitz3.ab2@15012>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
00041024 <AmiBlitz3.ab2@15015>   MOVE.w regnum,d3
00041028 <AmiBlitz3.ab2@15016>    OR.b d3,-5(a4)
0004102E <AmiBlitz3.ab2@15017>    SUBQ.l #4,destpointer
00041034 <AmiBlitz3.ab2@15018>    CLR.l load_var_addr
0004103A <AmiBlitz3.ab2@15019>    CLR.l imm_addr
0004103E <AmiBlitz3.ab2@15020> BRA 'li3
00041044 <AmiBlitz3.ab2@15023>    MOVE.l destpointer,a0
0004104A <AmiBlitz3.ab2@15024>    SUB.l load_var_addr,a0
0004104E <AmiBlitz3.ab2@15025>    CMP.w #4,a0
00041052 <AmiBlitz3.ab2@15026>    BNE 'li2
00041056 <AmiBlitz3.ab2@15027>    MOVE.w -2(a4),d1
0004105A <AmiBlitz3.ab2@15028>    BSR writeword
00041060 <AmiBlitz3.ab2@15029>    MOVE.b #$4c,-6(a4)
00041066 <AmiBlitz3.ab2@15030>    MOVE.w #$0800,-4(a4)
0004106C <AmiBlitz3.ab2@15031>    MOVE.w regnum,D3
00041070 <AmiBlitz3.ab2@15032>    MULS #$1000,d3
00041074 <AmiBlitz3.ab2@15033>    OR.w D3,-4(a4)
00041078 <AmiBlitz3.ab2@15034> BRA 'li3
0004107E <AmiBlitz3.ab2@15037>    MOVE.l #$4c010800,d1
00041084 <AmiBlitz3.ab2@15038>    MOVE.w regnum,D3
00041086 <AmiBlitz3.ab2@15039>    EXT.l d3
0004108A <AmiBlitz3.ab2@15040>    MULS #$1000,d3
0004108C <AmiBlitz3.ab2@15041>    OR.w D3,d1
00041090 <AmiBlitz3.ab2@15042>    MULS #$10,d3
00041092 <AmiBlitz3.ab2@15043>    ADD.l d3,d1
00041096 <AmiBlitz3.ab2@15044>    BSR writelong
00041098 <AmiBlitz3.ab2@15049> RTS
0004109A <AmiBlitz3.ab2@15053>   MOVE.w D1,-(A7)
0004109E <AmiBlitz3.ab2@15054>    BSR.w JL_0_AD40
000410A0 <AmiBlitz3.ab2@15055>   MOVE.l D4,D1
000410A4 <AmiBlitz3.ab2@15056>    BSR.w JL_0_AD38
000410A8 <AmiBlitz3.ab2@15057>    BSR.w JL_0_A352
000410AA <AmiBlitz3.ab2@15058>   MOVEQ #0,d1
000410AC <AmiBlitz3.ab2@15059>   MOVE.w (A7)+,D1
000410B2 <AmiBlitz3.ab2@15060>   MOVE.l d1,lastinstruction
000410B6 <AmiBlitz3.ab2@15061>    BSR.w Atokejsr
000410BA <AmiBlitz3.ab2@15062>    BSR.w JL_0_A36E
000410BC <AmiBlitz3.ab2@15063>   MOVE.l D5,D1
000410C0 <AmiBlitz3.ab2@15064> BRA.w JL_0_AD38
000410C6 <AmiBlitz3.ab2@15068>    TST.b iee
000410CA <AmiBlitz3.ab2@15069>     BNE fm1
000410CE <AmiBlitz3.ab2@15070>  MOVE.w #$FFB2,D1                                          ;floatmul
000410D2 <AmiBlitz3.ab2@15071> BRA.w doflib
000410D4 <AmiBlitz3.ab2@15074>   MOVEQ #0,d0
000410DA <AmiBlitz3.ab2@15075>  MOVE.w regnum,d0
000410DC <AmiBlitz3.ab2@15076>  ADDQ #1,d0
000410DE <AmiBlitz3.ab2@15077>  ASL.w #8,d0
000410E0 <AmiBlitz3.ab2@15078>  ASL.w #2,d0
000410E6 <AmiBlitz3.ab2@15079>  MOVE.l #$f2000023,d1
000410E8 <AmiBlitz3.ab2@15080>  OR.l d0,d1
000410EE <AmiBlitz3.ab2@15081>  MOVE.w regnum,d0
000410F0 <AmiBlitz3.ab2@15082>  ASL.w #7,d0
000410F2 <AmiBlitz3.ab2@15083>  OR.l d0,d1
000410F6 <AmiBlitz3.ab2@15084> BRA.w writelong
000410F8 <AmiBlitz3.ab2@15088>   MOVE.w D2,-(A7)                                          ;dopow
000410FA <AmiBlitz3.ab2@15089>   MOVE.w D2,D3
000410FC <AmiBlitz3.ab2@15090>   MOVEQ.l #$05,D2
00041100 <AmiBlitz3.ab2@15091>    BSR.w JL_0_9770
00041106 <AmiBlitz3.ab2@15092>   ADDQ.w #1,regnum
00041108 <AmiBlitz3.ab2@15093>   MOVE.w (A7)+,D3
0004110A <AmiBlitz3.ab2@15094>   MOVEQ.l #$05,D2
0004110E <AmiBlitz3.ab2@15095>    BSR.w writeconvertcode
00041114 <AmiBlitz3.ab2@15096>   SUBQ.w #1,regnum
00041118 <AmiBlitz3.ab2@15097>    BSR.w nocando
0004111E <AmiBlitz3.ab2@15098>    TST.b fpu
00041122 <AmiBlitz3.ab2@15099>    BEQ 'old
00041124 <AmiBlitz3.ab2@15100>    MOVEQ #0,d1
0004112A <AmiBlitz3.ab2@15101>    MOVE.w regnum,d1
0004112C <AmiBlitz3.ab2@15102>   MOVE.l d1,d0
0004112E <AmiBlitz3.ab2@15103>   ASL.w #7,d1
00041130 <AmiBlitz3.ab2@15104>   ASL.w #8,d0
00041132 <AmiBlitz3.ab2@15105>   ASL.w #2,d0
00041134 <AmiBlitz3.ab2@15106>   OR.w d0,d1
00041136 <AmiBlitz3.ab2@15107>   MOVE.l d1,-(a7)
0004113C <AmiBlitz3.ab2@15109>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
00041140 <AmiBlitz3.ab2@15110>    BSR writelong
00041146 <AmiBlitz3.ab2@15111>    MOVE.w regnum,d0
00041148 <AmiBlitz3.ab2@15112>  ADDQ #1,d0
0004114A <AmiBlitz3.ab2@15113>  ASL.w #8,d0
0004114C <AmiBlitz3.ab2@15114>  ASL.w #2,d0
00041152 <AmiBlitz3.ab2@15115>  MOVE.l #$f2000023,d1
00041154 <AmiBlitz3.ab2@15116>  OR.l d0,d1
0004115A <AmiBlitz3.ab2@15117>  MOVE.w regnum,d0
0004115C <AmiBlitz3.ab2@15118>  ASL.w #7,d0
0004115E <AmiBlitz3.ab2@15119>  OR.l d0,d1
00041164 <AmiBlitz3.ab2@15120>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
00041168 <AmiBlitz3.ab2@15121>    BSR writelong
0004116A <AmiBlitz3.ab2@15122>    MOVE.l (a7)+,d1
00041170 <AmiBlitz3.ab2@15124>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
00041174 <AmiBlitz3.ab2@15125>    BSR writelong
00041176 <AmiBlitz3.ab2@15126> RTS
0004117A <AmiBlitz3.ab2@15129>   MOVE.w #$6001,D1
0004117E <AmiBlitz3.ab2@15130> BRA.w domylib
00041182 <AmiBlitz3.ab2@15136>   MOVEA.l forthsp(PC),A0
00041186 <AmiBlitz3.ab2@15137>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
00041188 <AmiBlitz3.ab2@15138> RTS
0004118C <AmiBlitz3.ab2@15144>   MOVE.w #$D400,D1
00041190 <AmiBlitz3.ab2@15145> BRA.w domylib
00041194 <AmiBlitz3.ab2@15149>   MOVE.w #$D401,D1
00041198 <AmiBlitz3.ab2@15150> BRA.w domylib
0004119C <AmiBlitz3.ab2@15154>    BSR.w nocando                                           ;modlib uses an alibjsr here!
000411A0 <AmiBlitz3.ab2@15155>   MOVE.w #$D402,D1
000411A4 <AmiBlitz3.ab2@15156> BRA.w domylib
000411A8 <AmiBlitz3.ab2@15160>   MOVE.w #$D403,D1
000411AA <AmiBlitz3.ab2@15161>   MOVEQ.l #$02,D2                                          ;now a word.
000411AE <AmiBlitz3.ab2@15162> BRA.w domylib
000411B2 <AmiBlitz3.ab2@15166>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
000411B8 <AmiBlitz3.ab2@15167>   TST.b fpu
000411BC <AmiBlitz3.ab2@15168>   BEQ 'old
000411BE <AmiBlitz3.ab2@15169>   MOVEQ #0,d1
000411C4 <AmiBlitz3.ab2@15170>   MOVE.w regnum,d1                                         ;fpu mod
000411C6 <AmiBlitz3.ab2@15171>   MOVE.l d1,d0
000411C8 <AmiBlitz3.ab2@15172>   ADDQ.l #1,d1
000411CA <AmiBlitz3.ab2@15173>   ASL.l #7,d0
000411CC <AmiBlitz3.ab2@15174>   ASL.l #8,d1
000411CE <AmiBlitz3.ab2@15175>   ASL.l #2,d1
000411D0 <AmiBlitz3.ab2@15176>   OR.l d0,d1
000411D2 <AmiBlitz3.ab2@15177>   MOVE.l d0,-(a7)
000411D8 <AmiBlitz3.ab2@15178>   OR.l #$f2000021,d1
000411DC <AmiBlitz3.ab2@15179>   BSR writelong
000411DE <AmiBlitz3.ab2@15180>   MOVE.l (a7)+,d0
000411E0 <AmiBlitz3.ab2@15181>  RTS
000411E4 <AmiBlitz3.ab2@15184>   MOVE.w #$D404,D1
000411E6 <AmiBlitz3.ab2@15185>   MOVEQ.l #$03,D2                                          ;now a long
000411EA <AmiBlitz3.ab2@15186> BRA.w domylib
000411EE <AmiBlitz3.ab2@15194>   MOVE.w #$48C0,D1
000411F4 <AmiBlitz3.ab2@15195>   OR.w regnum,D1
000411F8 <AmiBlitz3.ab2@15196>    BSR.w writeword
000411FA <AmiBlitz3.ab2@15197>   ADDQ.w #1,D1
000411FE <AmiBlitz3.ab2@15198>    BSR.w writeword
00041202 <AmiBlitz3.ab2@15201>    MOVE.w #$48C0,D1
00041208 <AmiBlitz3.ab2@15202>   OR.w regnum,D1
0004120C <AmiBlitz3.ab2@15203>    BSR.w writeword
00041210 <AmiBlitz3.ab2@15204>   MOVE.w #$81C0,D1
00041214 <AmiBlitz3.ab2@15205> BRA.w doplus2
0004121A <AmiBlitz3.ab2@15209>   TST.b fast
0004121E <AmiBlitz3.ab2@15210>   BNE.s 'l10
00041222 <AmiBlitz3.ab2@15211>   MOVE.w #$CB01,D1
00041226 <AmiBlitz3.ab2@15212> BRA.w domylib
0004122A <AmiBlitz3.ab2@15218>   BSR.w JL_0_AD40
0004122C <AmiBlitz3.ab2@15219>   MOVE.l D4,D1
00041230 <AmiBlitz3.ab2@15220>    BSR.w JL_0_AD38
00041234 <AmiBlitz3.ab2@15221>    BSR.w JL_0_A352
0004123A <AmiBlitz3.ab2@15235>    MOVE.l #$4c410800,d1
0004123E <AmiBlitz3.ab2@15236>    BSR writelong
00041242 <AmiBlitz3.ab2@15239>   MOVE.w #$4e71,d1
00041246 <AmiBlitz3.ab2@15241>    BSR.w JL_0_A36E
00041248 <AmiBlitz3.ab2@15242>   MOVE.l D5,D1
0004124C <AmiBlitz3.ab2@15243> BRA.w JL_0_AD38
00041250 <AmiBlitz3.ab2@15246>     CMP.w #8,d3
00041254 <AmiBlitz3.ab2@15247>     BEQ 'ok
00041256 <AmiBlitz3.ab2@15248>     ASL.l #1,d3
00041258 <AmiBlitz3.ab2@15249>     ASL.l #8,d3
0004125C <AmiBlitz3.ab2@15250>     MOVE.w #$e080,d1
0004125E <AmiBlitz3.ab2@15251>     OR.w d3,d1
00041262 <AmiBlitz3.ab2@15252> BRA 'oklsr2
00041266 <AmiBlitz3.ab2@15255>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0004126C <AmiBlitz3.ab2@15258>      SUBQ.l #6,destpointer
00041270 <AmiBlitz3.ab2@15259>      BSR writeword
00041272 <AmiBlitz3.ab2@15260>      MOVE.l (a7)+,d3
00041274 <AmiBlitz3.ab2@15261>      MOVEQ #0,d1
0004127A <AmiBlitz3.ab2@15262>      CLR.l load_var_addr
00041280 <AmiBlitz3.ab2@15263>      CLR.l imm_addr
00041284 <AmiBlitz3.ab2@15264> BRA JL_0_AD38
00041288 <AmiBlitz3.ab2@15268>   MOVE.w #$CB00,D1                                         ;quickdiv
0004128C <AmiBlitz3.ab2@15269> BRA.w domylib
00041292 <AmiBlitz3.ab2@15273>    TST.b iee
00041296 <AmiBlitz3.ab2@15274>    BNE fdiv1
0004129A <AmiBlitz3.ab2@15275>    MOVE.w #$FFAC,D1                                        ;floatdiv
0004129E <AmiBlitz3.ab2@15276> BRA.w doflib
000412A0 <AmiBlitz3.ab2@15280>   MOVEQ #0,d0
000412A6 <AmiBlitz3.ab2@15281>   MOVE.w regnum,d0
000412A8 <AmiBlitz3.ab2@15282>   ADDQ #1,d0
000412AA <AmiBlitz3.ab2@15283>   ASL.w #8,d0
000412AC <AmiBlitz3.ab2@15284>   ASL.w #2,d0
000412B2 <AmiBlitz3.ab2@15285>   MOVE.l #$f2000020,d1                                     ;fpu div
000412B4 <AmiBlitz3.ab2@15286>   OR.l d0,d1
000412BA <AmiBlitz3.ab2@15287>   MOVE.w regnum,d0
000412BC <AmiBlitz3.ab2@15288>   ASL.w #7,d0
000412BE <AmiBlitz3.ab2@15289>   OR.l d0,d1
000412C2 <AmiBlitz3.ab2@15290> BRA.w writelong
000412C6 <AmiBlitz3.ab2@15294>   MOVE.w #$C000,D1
000412CA <AmiBlitz3.ab2@15295> BRA.w doplus2
000412CE <AmiBlitz3.ab2@15299>   MOVE.w #$C040,D1
000412D2 <AmiBlitz3.ab2@15300> BRA.w doplus2
000412D6 <AmiBlitz3.ab2@15304>   MOVE.w #$C080,D1
000412DA <AmiBlitz3.ab2@15305> BRA.w doplus2
000412DE <AmiBlitz3.ab2@15309>   MOVE.w #$8000,D1
000412E2 <AmiBlitz3.ab2@15310> BRA.w doplus2
000412E6 <AmiBlitz3.ab2@15314>   MOVE.w #$8040,D1
000412EA <AmiBlitz3.ab2@15315> BRA.w doplus2
000412EE <AmiBlitz3.ab2@15319>   MOVE.w #$8080,D1
000412F2 <AmiBlitz3.ab2@15320> BRA.w doplus2
000412F6 <AmiBlitz3.ab2@15324>   MOVE.w #$B100,D1
000412FC <AmiBlitz3.ab2@15327>    MOVE.w regnum,D3
000412FE <AmiBlitz3.ab2@15328>   OR.w D3,D1
00041300 <AmiBlitz3.ab2@15329>   ADDQ.w #1,D3
00041302 <AmiBlitz3.ab2@15330>   LSL.w #8,D3
00041304 <AmiBlitz3.ab2@15331>   LSL.w #1,D3
00041306 <AmiBlitz3.ab2@15332>   OR.w D3,D1
0004130A <AmiBlitz3.ab2@15333> BRA.w writeword
0004130E <AmiBlitz3.ab2@15337>   MOVE.w #$B140,D1
00041312 <AmiBlitz3.ab2@15338> BRA.w JL_0_A25C
00041316 <AmiBlitz3.ab2@15342>   MOVE.w #$B180,D1
0004131A <AmiBlitz3.ab2@15343> BRA.w JL_0_A25C
0004131E <AmiBlitz3.ab2@15347>   MOVE.w #$E1A8,D1
00041322 <AmiBlitz3.ab2@15348> BRA.w JL_0_A298
00041326 <AmiBlitz3.ab2@15352>   MOVE.w #$E0A8,D1
0004132A <AmiBlitz3.ab2@15353> BRA.w JL_0_A298
0004132E <AmiBlitz3.ab2@15357>   MOVE.w #$E0A0,D1
00041332 <AmiBlitz3.ab2@15358> BRA.w JL_0_A298
00041334 <AmiBlitz3.ab2@15362>   MOVE.w D1,-(A7)
0004133A <AmiBlitz3.ab2@15363>   ADDQ.w #1,regnum
0004133C <AmiBlitz3.ab2@15364>   MOVE.w D2,-(A7)
0004133E <AmiBlitz3.ab2@15365>   MOVE.w D2,D3
00041340 <AmiBlitz3.ab2@15366>   MOVEQ.l #$02,D2
00041344 <AmiBlitz3.ab2@15371>    BSR.w writeconvertcode
00041346 <AmiBlitz3.ab2@15373>   MOVE.w (A7)+,D2
0004134C <AmiBlitz3.ab2@15374>   SUBQ.w #1,regnum
00041350 <AmiBlitz3.ab2@15375>   CMP.w #$4,D2
00041354 <AmiBlitz3.ab2@15376>    BEQ.w JL_0_A2C2
00041356 <AmiBlitz3.ab2@15377>   MOVE.w D2,D3
00041358 <AmiBlitz3.ab2@15378>   MOVEQ.l #$03,D2
0004135C <AmiBlitz3.ab2@15379>    BSR.w JL_0_9770
0004135E <AmiBlitz3.ab2@15382>    MOVE.w (A7)+,D1
00041364 <AmiBlitz3.ab2@15383>   MOVE.w regnum,D3
00041366 <AmiBlitz3.ab2@15384>   OR.w D3,D1
00041368 <AmiBlitz3.ab2@15385>   ADDQ.w #1,D3
0004136A <AmiBlitz3.ab2@15386>   LSL.w #8,D3
0004136C <AmiBlitz3.ab2@15387>   LSL.w #1,D3
0004136E <AmiBlitz3.ab2@15388>   OR.w D3,D1
00041372 <AmiBlitz3.ab2@15389> BRA.w writeword
00041376 <AmiBlitz3.ab2@15393>   MOVE.w #$0100,D1
0004137A <AmiBlitz3.ab2@15394>    BSR.w JL_0_A31C
00041380 <AmiBlitz3.ab2@15395>   MOVE.w regnum,D1
00041384 <AmiBlitz3.ab2@15396>   ORI.w #$56C0,D1
00041388 <AmiBlitz3.ab2@15397>    BSR.w writeword
0004138E <AmiBlitz3.ab2@15398>   MOVE.w regnum,D1
00041392 <AmiBlitz3.ab2@15399>   ORI.w #$4880,D1
00041396 <AmiBlitz3.ab2@15400>    BSR.w writeword
00041398 <AmiBlitz3.ab2@15401>   MOVEQ.l #$02,D2
0004139A <AmiBlitz3.ab2@15402> RTS
0004139E <AmiBlitz3.ab2@15406>   MOVE.w #$01C0,D1
000413A2 <AmiBlitz3.ab2@15409>    BSR.w JL_0_A31C
000413A4 <AmiBlitz3.ab2@15410>   MOVEQ.l #$03,D2
000413A6 <AmiBlitz3.ab2@15411> RTS
000413AA <AmiBlitz3.ab2@15415>   MOVE.w #$0180,D1
000413AE <AmiBlitz3.ab2@15416> BRA.w JL_0_A304
000413B2 <AmiBlitz3.ab2@15420>   MOVE.w #$0140,D1
000413B6 <AmiBlitz3.ab2@15421> BRA.w JL_0_A304
000413B8 <AmiBlitz3.ab2@15425>   MOVE.w D1,-(A7)
000413BA <AmiBlitz3.ab2@15426>   MOVE.w D2,-(A7)
000413BC <AmiBlitz3.ab2@15427>   MOVE.w D2,D3
000413BE <AmiBlitz3.ab2@15428>   MOVEQ.l #$03,D2
000413C2 <AmiBlitz3.ab2@15429>    BSR.w JL_0_9770
000413C4 <AmiBlitz3.ab2@15430>   MOVE.w (A7)+,D3
000413C6 <AmiBlitz3.ab2@15431>   MOVEQ.l #$01,D2
000413CC <AmiBlitz3.ab2@15432>   ADDQ.w #1,regnum
000413D0 <AmiBlitz3.ab2@15433>    BSR.w writeconvertcode
000413D6 <AmiBlitz3.ab2@15434>   SUBQ.w #1,regnum
000413DC <AmiBlitz3.ab2@15435>   MOVE.w regnum,D1
000413DE <AmiBlitz3.ab2@15436>   MOVE.w D1,D2
000413E0 <AmiBlitz3.ab2@15437>   ADDQ.w #1,D2
000413E2 <AmiBlitz3.ab2@15438>   LSL.w #8,D2
000413E4 <AmiBlitz3.ab2@15439>   LSL.w #1,D2
000413E6 <AmiBlitz3.ab2@15440>   OR.w (A7)+,D1
000413E8 <AmiBlitz3.ab2@15441>   OR.w D2,D1
000413EC <AmiBlitz3.ab2@15442> BRA.w writeword
000413F2 <AmiBlitz3.ab2@15446>   MOVE.w regnum,D1
000413F6 <AmiBlitz3.ab2@15447>    BEQ.w JL_0_A36C
000413FA <AmiBlitz3.ab2@15448>   ORI.w #$2000,D1
000413FE <AmiBlitz3.ab2@15449>    BSR.w writeword
00041402 <AmiBlitz3.ab2@15450>   ADDI.w #$201,D1
00041406 <AmiBlitz3.ab2@15451>    BSR.w writeword
00041408 <AmiBlitz3.ab2@15454> RTS
0004140E <AmiBlitz3.ab2@15458>   MOVE.w regnum,D1
00041412 <AmiBlitz3.ab2@15459>    BEQ.w JL_0_A384
00041414 <AmiBlitz3.ab2@15460>   LSL.w #8,D1
00041416 <AmiBlitz3.ab2@15461>   LSL.w #1,D1
0004141A <AmiBlitz3.ab2@15462>   ORI.w #$2000,D1
0004141E <AmiBlitz3.ab2@15463>    BSR.w writeword
00041420 <AmiBlitz3.ab2@15466> RTS
00041426 <AmiBlitz3.ab2@15470>    CLR.b isconstantvalue
0004142C <AmiBlitz3.ab2@15471>    CLR.l lastconstantvalue
00041434 <AmiBlitz3.ab2@15472>    CMPI.w #$7,regnum
00041438 <AmiBlitz3.ab2@15473>    BCS.w JL_0_A6B4
0004143E <AmiBlitz3.ab2@15474>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
00041442 <AmiBlitz3.ab2@15475>   BSR writelong
00041446 <AmiBlitz3.ab2@15476>   MOVE.w #$2F06,D1                                         ;d6 to stack
0004144A <AmiBlitz3.ab2@15478>   CMP.w #$3,D2
0004144E <AmiBlitz3.ab2@15479>    BCS.w JL_0_A3A2
00041452 <AmiBlitz3.ab2@15480>   MOVE.w #$2F06,D1
00041456 <AmiBlitz3.ab2@15483>   BSR.w writeword
00041458 <AmiBlitz3.ab2@15484>   MOVE.w D1,-(A7)
0004145E <AmiBlitz3.ab2@15485>   SUBQ.w #1,regnum
00041462 <AmiBlitz3.ab2@15486>    BSR.w JL_0_A6B4
00041468 <AmiBlitz3.ab2@15487>   ADDQ.w #1,regnum
0004146E <AmiBlitz3.ab2@15488>   MOVE.l #$f2001b80,d1
00041472 <AmiBlitz3.ab2@15489>   BSR writelong
00041476 <AmiBlitz3.ab2@15490>   MOVE.w #$3E06,D1
0004147A <AmiBlitz3.ab2@15491>   CMP.w #$3,D2
0004147E <AmiBlitz3.ab2@15492>    BCS.w JL_0_A3C8
00041482 <AmiBlitz3.ab2@15493>   MOVE.w #$2E06,D1
00041486 <AmiBlitz3.ab2@15496>   BSR.w writeword
00041488 <AmiBlitz3.ab2@15497>   MOVE.w (A7)+,D1
0004148C <AmiBlitz3.ab2@15498>   ANDI.w #$F000,D1
00041490 <AmiBlitz3.ab2@15499>   ORI.w #$C1F,D1
00041496 <AmiBlitz3.ab2@15500>   JSR writeword
0004149C <AmiBlitz3.ab2@15501>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
000414A0 <AmiBlitz3.ab2@15502> BRA writelong
000414A4 <AmiBlitz3.ab2@15506>   BSR.w JL_0_A6B4
000414A8 <AmiBlitz3.ab2@15507>   MOVE.w #$4440,D1
000414AC <AmiBlitz3.ab2@15508>   CMP.w #$3,D2
000414B0 <AmiBlitz3.ab2@15509>    BCS.w JL_0_A406
000414B4 <AmiBlitz3.ab2@15510>   MOVE.w #$4480,D1
000414B8 <AmiBlitz3.ab2@15511>   CMP.w #$5,D2
000414BC <AmiBlitz3.ab2@15512>    BCS.w JL_0_A406
000414C0 <AmiBlitz3.ab2@15513>   CMP.w #$6,D2
000414C4 <AmiBlitz3.ab2@15514>    BCC.w illoperr
000414C8 <AmiBlitz3.ab2@15515>   MOVE.w #$FFC4,D1
000414CC <AmiBlitz3.ab2@15516> BRA.w JL_0_9604
000414D2 <AmiBlitz3.ab2@15519>   OR.w regnum,D1                                           ;negate
000414D8 <AmiBlitz3.ab2@15520>   CLR.l imm_addr
000414DC <AmiBlitz3.ab2@15521> BRA.w writeword
000414E0 <AmiBlitz3.ab2@15525>    BSR.w eval4
000414E4 <AmiBlitz3.ab2@15526>   CMP.w #")",D0
000414E8 <AmiBlitz3.ab2@15527>    BEQ.w JL_0_A424
000414EC <AmiBlitz3.ab2@15528>   CMP.w #"}",D0
000414F0 <AmiBlitz3.ab2@15529>    BNE.w brackets_                                         ;syntax error brackets
000414F4 <AmiBlitz3.ab2@15532> BRA.w get1bytemain
000414F8 <AmiBlitz3.ab2@15536>    BSR.w eval4
000414FC <AmiBlitz3.ab2@15537>   CMP.w #$5,D2
00041500 <AmiBlitz3.ab2@15538>    BCC.w illoperr
00041506 <AmiBlitz3.ab2@15539>   MOVE.w regnum,D1
0004150A <AmiBlitz3.ab2@15540>   ORI.w #$4640,D1
0004150E <AmiBlitz3.ab2@15541>   CMP.w #$3,D2
00041512 <AmiBlitz3.ab2@15542>    BCS.w writeword
00041516 <AmiBlitz3.ab2@15543>   EORI.w #$C0,D1
0004151A <AmiBlitz3.ab2@15544> BRA.w writeword
0004151C <AmiBlitz3.ab2@15548>   MOVEQ.l #$05,D2                                          ;fpu pi
00041522 <AmiBlitz3.ab2@15549>    TST.b fpu
00041526 <AmiBlitz3.ab2@15550>   BEQ 'old
0004152C <AmiBlitz3.ab2@15551> JMP fpupi
00041532 <AmiBlitz3.ab2@15554>   MOVE.w regnum,D1
00041534 <AmiBlitz3.ab2@15555>   LSL.w #8,D1
00041536 <AmiBlitz3.ab2@15556>   LSL.w #1,D1
0004153A <AmiBlitz3.ab2@15557>   ORI.w #$203C,D1
0004153E <AmiBlitz3.ab2@15558>    BSR.w writeword
00041544 <AmiBlitz3.ab2@15559>   MOVE.l #$C90FDA42,D1
00041548 <AmiBlitz3.ab2@15560>    BSR.w writelong
0004154C <AmiBlitz3.ab2@15561> BRA.w get1bytemain
00041648 <AmiBlitz3.ab2@15569> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
00041744 <AmiBlitz3.ab2@15570>              Ds.l 63
0004178C <AmiBlitz3.ab2@15571>              Ds.l 18
00041790 <AmiBlitz3.ab2@15572> forthsp:     Dc.l forthstack
000417BC <AmiBlitz3.ab2@15577>    !fget
000417C0 <AmiBlitz3.ab2@15578>    CMP.b #$7e,d0
000417C4 <AmiBlitz3.ab2@15579>    BNE 'noc
000417C6 <AmiBlitz3.ab2@15580>    SUBQ.l #1,a5
000417CA <AmiBlitz3.ab2@15581>    BSR get1bytemain
000417CE <AmiBlitz3.ab2@15584>    CMP.b #"#",d0
000417D2 <AmiBlitz3.ab2@15585>    BNE 'ld1
000417D6 <AmiBlitz3.ab2@15586>    CMP.b #$22,(a5)
000417DA <AmiBlitz3.ab2@15587>    BNE 'ld1
000417E0 <AmiBlitz3.ab2@15588>    JSR addimmi
000417E4 <AmiBlitz3.ab2@15591>    CMP.b #$22,d0
000417E8 <AmiBlitz3.ab2@15592>    BNE 'l11
000417EE <AmiBlitz3.ab2@15602>    NOT.w instringon
000417F0 <AmiBlitz3.ab2@15605>    TST.b d0
000417F4 <AmiBlitz3.ab2@15606>    BPL 'l10
000417F6 <AmiBlitz3.ab2@15607>    LSL.w #8,d0
000417F8 <AmiBlitz3.ab2@15608>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
000417FE <AmiBlitz3.ab2@15609>    MOVE.l d0,lasttoken
00041804 <AmiBlitz3.ab2@15610>    MOVE.w d0,lastchar
0004180A <AmiBlitz3.ab2@15611>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0004180E <AmiBlitz3.ab2@15613>   CMP.w #"(",D0
00041812 <AmiBlitz3.ab2@15614>    BEQ.w checkcast2
00041816 <AmiBlitz3.ab2@15615> nocast CMP.w #"{",D0
0004181A <AmiBlitz3.ab2@15616>    BEQ.w JL_0_A410
0004181E <AmiBlitz3.ab2@15617>   CMP.w #$2D,D0
00041822 <AmiBlitz3.ab2@15618>    BEQ.w JL_0_A3DA
00041826 <AmiBlitz3.ab2@15619>   CMP.w #-$7F77,D0
0004182A <AmiBlitz3.ab2@15620>    BEQ.w JL_0_A428
0004182E <AmiBlitz3.ab2@15621>   MOVEA.l forthsp(PC),A1
00041834 <AmiBlitz3.ab2@15622>   CMPA.l #forthsp,A1
00041838 <AmiBlitz3.ab2@15623>    BCC.w conmemerr
0004183E <AmiBlitz3.ab2@15624>   MOVE.l destpointer,(A1)+
00041844 <AmiBlitz3.ab2@15625>   MOVE.l hunkoffsetbase,(A1)+
0004184A <AmiBlitz3.ab2@15626>   MOVE.l lasta6,(A1)+
00041850 <AmiBlitz3.ab2@15627>   MOVE.w lasta6,(A1)+
00041852 <AmiBlitz3.ab2@15628>   CLR.w (A1)+
00041854 <AmiBlitz3.ab2@15629>   CLR.w (A1)+
0004185A <AmiBlitz3.ab2@15630>   MOVE.l A1,forthsp
0004186C <AmiBlitz3.ab2@15632>    !compare2
00041870 <AmiBlitz3.ab2@15633>    BEQ.w JL_0_B224
00041874 <AmiBlitz3.ab2@15634>   CMP.w #".",D0
00041878 <AmiBlitz3.ab2@15635>    BEQ.w JL_0_B21E
0004187C <AmiBlitz3.ab2@15636>   CMP.w #"#",D0
00041880 <AmiBlitz3.ab2@15637>    BEQ.w get_constant
00041884 <AmiBlitz3.ab2@15638>   CMP.w #"$",D0
00041888 <AmiBlitz3.ab2@15639>    BEQ.w get_hexconstant
0004188C <AmiBlitz3.ab2@15640>   CMP.w #"%",D0
00041890 <AmiBlitz3.ab2@15641>    BEQ.w JL_0_A8C0
00041894 <AmiBlitz3.ab2@15642>   CMP.w #-$7FD1,D0
00041898 <AmiBlitz3.ab2@15643>    BEQ.w _SizeOf
0004189C <AmiBlitz3.ab2@15644>   CMP.w #-$7F46,D0
000418A0 <AmiBlitz3.ab2@15645>    BEQ.w JL_0_A44E
000418A4 <AmiBlitz3.ab2@15646>   CMP.w #-$7F3B,D0
000418A8 <AmiBlitz3.ab2@15647>    BEQ.w JL_0_A83C
000418AC <AmiBlitz3.ab2@15648>   CMP.w #-$7F3A,D0
000418B0 <AmiBlitz3.ab2@15649>    BEQ.w JL_0_A846
000418B6 <AmiBlitz3.ab2@15650>   MOVE.w constmode,D1
000418BA <AmiBlitz3.ab2@15651>    BEQ.w JL_0_A776
000418DC <AmiBlitz3.ab2@15652>    !compare1                                               ;bsr.w tstalpha
000418E0 <AmiBlitz3.ab2@15653>    BEQ.w JL_0_AF22
000418E4 <AmiBlitz3.ab2@15654>   CMP.w #$5F,D0
000418E8 <AmiBlitz3.ab2@15655>    BEQ.w JL_0_AF22
000418EC <AmiBlitz3.ab2@15656>   CMP.w #$22,D0
000418F0 <AmiBlitz3.ab2@15657>    BEQ.w JL_0_AF00
000418F4 <AmiBlitz3.ab2@15658> BRA.w syntaxerr
000418FA <AmiBlitz3.ab2@15660> checkcast2 JMP checkcast
00041900 <AmiBlitz3.ab2@15663>   MOVE.w cfetchmode,D1
00041904 <AmiBlitz3.ab2@15664>   BEQ.w JL_0_A784
00041908 <AmiBlitz3.ab2@15665> BRA.w badconerr
0004190E <AmiBlitz3.ab2@15668> JMP syntaxerropt4
00041910 <AmiBlitz3.ab2@15672>   NOT.w -(A1)
00041932 <AmiBlitz3.ab2@15673>   !compare1                                                ;bsr.w tstalpha
00041936 <AmiBlitz3.ab2@15674>    BEQ.w JL_0_AF4C
0004193A <AmiBlitz3.ab2@15675>   CMP.w #$2A,D0
0004193E <AmiBlitz3.ab2@15676>    BEQ.w JL_0_AF4C
00041942 <AmiBlitz3.ab2@15677>   CMP.w #$5C,D0
00041946 <AmiBlitz3.ab2@15678>    BEQ.w JL_0_AF4C
0004194A <AmiBlitz3.ab2@15679>   CMP.w #$22,D0
0004194E <AmiBlitz3.ab2@15680>    BEQ.w JL_0_ADC0
00041952 <AmiBlitz3.ab2@15681>   BTST #$F,D0
00041956 <AmiBlitz3.ab2@15682>    BNE.w JL_0_AAF2
0004195A <AmiBlitz3.ab2@15683>   CMP.w #"&",D0
0004195E <AmiBlitz3.ab2@15684>    BEQ.w getvaraddr                                          ;jump to & address of var code
00041962 <AmiBlitz3.ab2@15685>   CMP.w #"?",D0
00041966 <AmiBlitz3.ab2@15686>    BEQ.w JL_0_AED4
0004196A <AmiBlitz3.ab2@15689>   CMP.b #"@",d0
0004196E <AmiBlitz3.ab2@15690>    BNE syntaxerr
00041974 <AmiBlitz3.ab2@15691>   TST.b newsyntax
00041978 <AmiBlitz3.ab2@15692>    BEQ JUMP_syntaxerropt4
0004197E <AmiBlitz3.ab2@15693>   MOVE.w regnum,D1
00041980 <AmiBlitz3.ab2@15694>   LSL.w #8,D1
00041982 <AmiBlitz3.ab2@15695>   LSL.w #1,D1
00041986 <AmiBlitz3.ab2@15696>   ORI.w #$203C,D1
0004198A <AmiBlitz3.ab2@15697>   BSR.w writeword
0004198E <AmiBlitz3.ab2@15698>   CMP.b #$22,(a5)
00041992 <AmiBlitz3.ab2@15699>    BNE syntaxerr
00041994 <AmiBlitz3.ab2@15700>   ADDQ #1,a5
00041996 <AmiBlitz3.ab2@15701>   MOVEQ #0,d0
0004199A <AmiBlitz3.ab2@15702>   CMP.b #1,d2
0004199E <AmiBlitz3.ab2@15703>    BEQ 'l3b
000419A2 <AmiBlitz3.ab2@15704>   CMP.b #2,d2
000419A6 <AmiBlitz3.ab2@15705>    BEQ 'l2b
000419AA <AmiBlitz3.ab2@15706>   CMP.b #4,d2
000419AE <AmiBlitz3.ab2@15707>    BEQ error_convert_types
000419B0 <AmiBlitz3.ab2@15708>   MOVE.b (a5)+,d0
000419B4 <AmiBlitz3.ab2@15709>   BEQ syntaxerr
000419B8 <AmiBlitz3.ab2@15710>   CMP.b #$22,d0
000419BC <AmiBlitz3.ab2@15711>   BNE 'l1
000419C0 <AmiBlitz3.ab2@15712>     MOVE.b #0,d0
000419C4 <AmiBlitz3.ab2@15713> BRA 'do
000419C6 <AmiBlitz3.ab2@15716>   ASL.l #8,d0
000419C8 <AmiBlitz3.ab2@15717>   MOVE.b (a5)+,d0
000419CC <AmiBlitz3.ab2@15718>   BEQ syntaxerr
000419D0 <AmiBlitz3.ab2@15719>   CMP.b #$22,d0
000419D4 <AmiBlitz3.ab2@15720>   BNE 'l2
000419D8 <AmiBlitz3.ab2@15721>     MOVE.b #0,d0
000419DA <AmiBlitz3.ab2@15722>     ASR.l #8,d0
000419DE <AmiBlitz3.ab2@15723> BRA 'do
000419E0 <AmiBlitz3.ab2@15726>   ASL.l #8,d0
000419E2 <AmiBlitz3.ab2@15729>   MOVE.b (a5)+,d0
000419E6 <AmiBlitz3.ab2@15730>    BEQ syntaxerr
000419EA <AmiBlitz3.ab2@15731>    CMP.b #$22,d0
000419EE <AmiBlitz3.ab2@15732>    BNE 'l3
000419F2 <AmiBlitz3.ab2@15733>    MOVE.b #0,d0
000419F4 <AmiBlitz3.ab2@15734>    ASR.l #8,d0
000419F8 <AmiBlitz3.ab2@15735> BRA 'do
000419FA <AmiBlitz3.ab2@15738>   ASL.l #8,d0
000419FC <AmiBlitz3.ab2@15741>   MOVE.b (a5)+,d0
00041A00 <AmiBlitz3.ab2@15742>    BEQ syntaxerr
00041A04 <AmiBlitz3.ab2@15743>    CMP.b #$22,d0
00041A08 <AmiBlitz3.ab2@15744>    BNE 'l4
00041A0C <AmiBlitz3.ab2@15745>    MOVE.b #0,d0
00041A0E <AmiBlitz3.ab2@15746>    ASR.l #8,d0
00041A12 <AmiBlitz3.ab2@15747> BRA 'do
00041A16 <AmiBlitz3.ab2@15750>    CMP.b #$22,(a5)+
00041A1A <AmiBlitz3.ab2@15751>    BNE JUMP_error4char
00041A1C <AmiBlitz3.ab2@15754>   MOVE.l d0,d1
00041A20 <AmiBlitz3.ab2@15755>     BSR writelong
00041A24 <AmiBlitz3.ab2@15756>     BSR get1bytemain
00041A26 <AmiBlitz3.ab2@15757> RTS
00041A2A <AmiBlitz3.ab2@15761>   BSR.w get1bytemain
00041A2E <AmiBlitz3.ab2@15762>   CMP.w #$2E,D0
00041A32 <AmiBlitz3.ab2@15763>    BEQ.b JL_0_A7F4
00041A3C <AmiBlitz3.ab2@15765>   MOVE.w oldqflag,instringon
00041A42 <AmiBlitz3.ab2@15766>   MOVEA.l lastsourcepos,A5
00041A44 <AmiBlitz3.ab2@15767>   MOVE.w D2,-(A7)
00041A48 <AmiBlitz3.ab2@15768>    BSR.w getparameter2
00041A4C <AmiBlitz3.ab2@15769>    BEQ.w syntaxerr
00041A52 <AmiBlitz3.ab2@15770>   LEA varbase,A2
00041A56 <AmiBlitz3.ab2@15771>    BSR.w findvariable
00041A5A <AmiBlitz3.ab2@15772>    BNE.w notypeerr
00041A5E <AmiBlitz3.ab2@15773>   MOVE.w $4(A2),D3
00041A60 <AmiBlitz3.ab2@15774>   EXT.l D3
00041A62 <AmiBlitz3.ab2@15775>   MOVE.w (A7)+,D2
00041A66 <AmiBlitz3.ab2@15776> BRA.w JL_0_B46E
00041A68 <AmiBlitz3.ab2@15780>   MOVE.w D2,-(A7)
00041A6C <AmiBlitz3.ab2@15781>    BSR.w getparameter2
00041A70 <AmiBlitz3.ab2@15782>    BEQ.w syntaxerr
00041A76 <AmiBlitz3.ab2@15783>   LEA newtypebase,A2
00041A7A <AmiBlitz3.ab2@15784>    BSR.w findtype
00041A7E <AmiBlitz3.ab2@15785>    BNE.w notypeerr
00041A80 <AmiBlitz3.ab2@15786>   MOVEQ.l #$00,D3
00041A84 <AmiBlitz3.ab2@15787>   CMP.w #$5C,D0
00041A88 <AmiBlitz3.ab2@15788>    BNE.w JL_0_A832
00041A8C <AmiBlitz3.ab2@15789>    BSR.w getparameter2
00041A90 <AmiBlitz3.ab2@15790>    BEQ.w syntaxerr
00041A94 <AmiBlitz3.ab2@15791>   LEA $4(A2),A2
00041A98 <AmiBlitz3.ab2@15792>    BSR.w findvariable2
00041A9C <AmiBlitz3.ab2@15793>    BNE.w noofferr
00041AA0 <AmiBlitz3.ab2@15794>   MOVE.w $4(A2),D3
00041AA4 <AmiBlitz3.ab2@15795> BRA.w JL_0_A836
00041AA8 <AmiBlitz3.ab2@15799>   MOVE.w $8(A2),D3
00041AAA <AmiBlitz3.ab2@15802>   MOVE.w (A7)+,D2
00041AAE <AmiBlitz3.ab2@15803> BRA.w JL_0_B46E
00041AB0 <AmiBlitz3.ab2@15807>   MOVEQ.l #-$01,D3
00041AB4 <AmiBlitz3.ab2@15808>    BSR.w get1bytemain
00041AB8 <AmiBlitz3.ab2@15809> BRA.w JL_0_B46E
00041ABA <AmiBlitz3.ab2@15813>   MOVEQ.l #$00,D3
00041ABE <AmiBlitz3.ab2@15814>    BSR.w get1bytemain
00041AC2 <AmiBlitz3.ab2@15815> BRA.w JL_0_B46E
00041AC6 <AmiBlitz3.ab2@15819>   CMP.w #$30,D0
00041ACA <AmiBlitz3.ab2@15820>    BCS.w JL_0_A876
00041ACE <AmiBlitz3.ab2@15821>   CMP.w #$39,D0
00041AD2 <AmiBlitz3.ab2@15822>    BLS.w JL_0_A874
00041AD6 <AmiBlitz3.ab2@15823>   ANDI.w #$FFDF,D0
00041ADA <AmiBlitz3.ab2@15824>   CMP.w #$46,D0
00041ADE <AmiBlitz3.ab2@15825>    BHI.w JL_0_A876
00041AE2 <AmiBlitz3.ab2@15826>   CMP.w #$41,D0
00041AE6 <AmiBlitz3.ab2@15827>    BCS.w JL_0_A876
00041AE8 <AmiBlitz3.ab2@15830>    CMP.w D0,D0
00041AEA <AmiBlitz3.ab2@15833> RTS
00041AEE <AmiBlitz3.ab2@15837>   CMP.w #$31,D0
00041AF2 <AmiBlitz3.ab2@15838>    BEQ.w JL_0_A884
00041AF6 <AmiBlitz3.ab2@15839>   CMP.w #$30,D0
00041AF8 <AmiBlitz3.ab2@15842> RTS
00041AFA <AmiBlitz3.ab2@15846>    MOVEQ #0,d0
00041AFC <AmiBlitz3.ab2@15847>    MOVE.b (a5)+,d0
00041AFE <AmiBlitz3.ab2@15848>    MOVE.b (a5)+,d0
00041B02 <AmiBlitz3.ab2@15849>    BSR ishex
00041B06 <AmiBlitz3.ab2@15850>    BNE syntaxerr
00041B0A <AmiBlitz3.ab2@15851>    SUBI.w #$30,D0
00041B0E <AmiBlitz3.ab2@15852>    CMP.w #$9,D0
00041B12 <AmiBlitz3.ab2@15853>    BLS.w 'l1
00041B14 <AmiBlitz3.ab2@15854>    SUBQ.w #7,D0
00041B16 <AmiBlitz3.ab2@15857>    MOVE.l d0,d1
00041B18 <AmiBlitz3.ab2@15858>    MOVE.b (a5)+,d0
00041B1C <AmiBlitz3.ab2@15859>      BSR ishex
00041B20 <AmiBlitz3.ab2@15860>     BNE syntaxerr
00041B22 <AmiBlitz3.ab2@15861>     LSL.l #4,d1
00041B26 <AmiBlitz3.ab2@15862>     SUBI.w #$30,D0
00041B2A <AmiBlitz3.ab2@15863>    CMP.w #$9,D0
00041B2E <AmiBlitz3.ab2@15864>    BLS.w 'l2
00041B30 <AmiBlitz3.ab2@15865>    SUBQ.w #7,D0
00041B32 <AmiBlitz3.ab2@15868>   ADD.l d1,d0
00041B34 <AmiBlitz3.ab2@15869> RTS
00041B38 <AmiBlitz3.ab2@15873>    BSR.w get1bytemain
00041B3C <AmiBlitz3.ab2@15874>    BSR.w ishex
00041B40 <AmiBlitz3.ab2@15875>    BNE.w syntaxerr
00041B42 <AmiBlitz3.ab2@15876>   MOVEQ.l #$00,D3
00041B46 <AmiBlitz3.ab2@15877>   CMP.w #5,d2
00041B4A <AmiBlitz3.ab2@15878>   BNE JL_0_A894
00041B50 <AmiBlitz3.ab2@15879>   CMP.l #newtype_double,a2
00041B54 <AmiBlitz3.ab2@15880>   BEQ 'doit
00041B5A <AmiBlitz3.ab2@15881>   CMP.l #newtype_float,a2
00041B5E <AmiBlitz3.ab2@15882>   BNE JL_0_A894
00041B66 <AmiBlitz3.ab2@15885>    fmove.s #0,fp0
00041B6C <AmiBlitz3.ab2@15887>   TST.b fpu
00041B70 <AmiBlitz3.ab2@15888>   BEQ JL_0_A894
00041B76 <AmiBlitz3.ab2@15889>   fmove.w #16,fp1
00041B7A <AmiBlitz3.ab2@15890>   fmul.x fp1,fp0
00041B7E <AmiBlitz3.ab2@15891>   SUBI.w #$30,D0
00041B82 <AmiBlitz3.ab2@15892>   CMP.w #$9,D0
00041B86 <AmiBlitz3.ab2@15893>    BLS.w JL_0_A8AEa
00041B88 <AmiBlitz3.ab2@15894>   SUBQ.w #7,D0
00041B8C <AmiBlitz3.ab2@15897>    fmove.w d0,fp1
00041B90 <AmiBlitz3.ab2@15898>    fadd.x fp1,fp0
00041B94 <AmiBlitz3.ab2@15899>    BSR.w get1bytemain
00041B98 <AmiBlitz3.ab2@15900>    BSR.w ishex
00041B9C <AmiBlitz3.ab2@15901>    BEQ.w JL_0_A894a
00041BA0 <AmiBlitz3.ab2@15902> BRA.w nofpregload
00041BA6 <AmiBlitz3.ab2@15906>   CMP.l #$10000000,D3
00041BAA <AmiBlitz3.ab2@15907>    BCC.w overerr
00041BAC <AmiBlitz3.ab2@15908>   LSL.l #4,D3
00041BB0 <AmiBlitz3.ab2@15909>   SUBI.w #$30,D0
00041BB4 <AmiBlitz3.ab2@15910>   CMP.w #$9,D0
00041BB8 <AmiBlitz3.ab2@15911>    BLS.w JL_0_A8AE
00041BBA <AmiBlitz3.ab2@15912>   SUBQ.w #7,D0
00041BBC <AmiBlitz3.ab2@15915>   OR.w D0,D3
00041BC0 <AmiBlitz3.ab2@15916>    BSR.w get1bytemain
00041BC4 <AmiBlitz3.ab2@15917>    BSR.w ishex
00041BC8 <AmiBlitz3.ab2@15918>    BEQ.w JL_0_A894
00041BCC <AmiBlitz3.ab2@15919> BRA.w JL_0_B46E
00041BD0 <AmiBlitz3.ab2@15923>    BSR.w get1bytemain
00041BD4 <AmiBlitz3.ab2@15924>    BSR.w JL_0_A878
00041BD8 <AmiBlitz3.ab2@15925>    BNE.w syntaxerr
00041BDA <AmiBlitz3.ab2@15926>    MOVEQ.l #$00,D3
00041BDC <AmiBlitz3.ab2@15929>    LSL.l #1,D3
00041BE0 <AmiBlitz3.ab2@15930>    BCS.w overerr
00041BE4 <AmiBlitz3.ab2@15931>   SUBI.w #$30,D0
00041BE6 <AmiBlitz3.ab2@15932>   OR.w D0,D3
00041BEA <AmiBlitz3.ab2@15933>    BSR.w get1bytemain
00041BEE <AmiBlitz3.ab2@15934>    BSR.w JL_0_A878
00041BF2 <AmiBlitz3.ab2@15935>    BEQ.w JL_0_A8CE
00041BF6 <AmiBlitz3.ab2@15936> BRA.w JL_0_B46E
00041BF8 <AmiBlitz3.ab2@15940>    MOVE.w d2,-(A7)
00041C00 <AmiBlitz3.ab2@15941>    MOVE.b #0,automode
00041C04 <AmiBlitz3.ab2@15942>    CMP.b #"@",(a5)
00041C08 <AmiBlitz3.ab2@15943>    BNE 'l1
00041C0A <AmiBlitz3.ab2@15944>    ADDQ.l #1,a5
00041C12 <AmiBlitz3.ab2@15945>    MOVE.b #1,automode
00041C16 <AmiBlitz3.ab2@15946>    BSR getparameter2
00041C1A <AmiBlitz3.ab2@15947>    BSR findlabel2
00041C1E <AmiBlitz3.ab2@15948>    BNE 'addit
00041C22 <AmiBlitz3.ab2@15949> BRA errormsg_autocount
00041C26 <AmiBlitz3.ab2@15952>   BSR.w addlabelhash
00041C2E <AmiBlitz3.ab2@15953>   MOVE.l #$1,$4(A2)
00041C32 <AmiBlitz3.ab2@15954>   MOVEM.l a2/a5,-(a7)
00041C38 <AmiBlitz3.ab2@15955>   MOVE.w lastchar,-(a7)
00041C3E <AmiBlitz3.ab2@15956>   LEA autostorename,a5
00041C42 <AmiBlitz3.ab2@15957>   BSR getparameter2
00041C46 <AmiBlitz3.ab2@15958>   BSR findlabel2
00041C4A <AmiBlitz3.ab2@15959>   BEQ 'found
00041C4E <AmiBlitz3.ab2@15960>   BSR.w addlabelhash
00041C56 <AmiBlitz3.ab2@15961>   MOVE.l #$1,$4(A2)
00041C5E <AmiBlitz3.ab2@15962>   MOVE.l #0,8(a2)
00041C60 <AmiBlitz3.ab2@15965>    MOVE.w (a7)+,d0
00041C66 <AmiBlitz3.ab2@15966>    MOVE.w d0,lastchar
00041C6A <AmiBlitz3.ab2@15967>   MOVE.l 8(a2),d3
00041C72 <AmiBlitz3.ab2@15968>   ADD.l #1,8(a2)
00041C76 <AmiBlitz3.ab2@15969>   MOVEM.l (a7)+,a2/a5
00041C7A <AmiBlitz3.ab2@15970>   MOVE.l d3,8(a2)
00041C7E <AmiBlitz3.ab2@15971>   MOVE.l $8(A2),D3
00041C82 <AmiBlitz3.ab2@15972> BRA.l 'l3
00041C86 <AmiBlitz3.ab2@15975>   BSR.w getparameter2
00041C8C <AmiBlitz3.ab2@15976>     TST.b incnif
00041C90 <AmiBlitz3.ab2@15977>     BEQ 'lc1
00041C94 <AmiBlitz3.ab2@15978>     BSR.w findlabel2
00041C98 <AmiBlitz3.ab2@15979>     BNE 'l5
00041C9A <AmiBlitz3.ab2@15980>     MOVEQ #1,d3
00041C9C <AmiBlitz3.ab2@15981>     MOVE.w (A7)+,D2
00041CA0 <AmiBlitz3.ab2@15982> BRA JL_0_B46E
00041CA2 <AmiBlitz3.ab2@15985>   MOVEQ #0,d3
00041CA4 <AmiBlitz3.ab2@15986>     MOVE.w (A7)+,D2
00041CA8 <AmiBlitz3.ab2@15987> BRA JL_0_B46E
00041CAC <AmiBlitz3.ab2@15990>    BSR.w findlabel2
00041CB0 <AmiBlitz3.ab2@15991>    BNE.w cnferr
00041CB8 <AmiBlitz3.ab2@15994>    CMPI.l #$1,$4(A2)
00041CBC <AmiBlitz3.ab2@15995>    BNE.w cnferr
00041CC0 <AmiBlitz3.ab2@15997>    MOVE.l $8(A2),D3
00041CC2 <AmiBlitz3.ab2@15998>    MOVE.w (A7)+,D2
00041CC6 <AmiBlitz3.ab2@15999> BRA.w JL_0_B46E
00041CCC <AmiBlitz3.ab2@16003>   CLR.w vartype
00041CD4 <AmiBlitz3.ab2@16004>   MOVE.b #3,peekaddrsize
00041CD8 <AmiBlitz3.ab2@16005>   BSR.w JL_0_A916
00041CDE <AmiBlitz3.ab2@16006>   MOVE.l a2,rightsidetype
00041CE0 <AmiBlitz3.ab2@16007>   MOVEQ.l #$03,D2
00041CE2 <AmiBlitz3.ab2@16008> RTS
00041CE6 <AmiBlitz3.ab2@16012>    BSR.w get1bytemain
00041CF8 <AmiBlitz3.ab2@16013>    !compare2
00041CFC <AmiBlitz3.ab2@16014>    BEQ andop2
00041D00 <AmiBlitz3.ab2@16015>    BSR.w getparameter
00041D04 <AmiBlitz3.ab2@16016>    BSR.w JL_0_8E3C
00041D08 <AmiBlitz3.ab2@16017>    BSR.w calcvar
00041D0C <AmiBlitz3.ab2@16018>   CMP.b #$7,D2
00041D10 <AmiBlitz3.ab2@16019>    BNE.w JL_0_A960
00041D14 <AmiBlitz3.ab2@16020>   BTST #$F,D2
00041D18 <AmiBlitz3.ab2@16021>    BNE.w JL_0_A94A
00041D1E <AmiBlitz3.ab2@16022>   MOVE.w D3,stamp2+2
00041D24 <AmiBlitz3.ab2@16023>   MOVE.l stamp2,D1
00041D28 <AmiBlitz3.ab2@16024>    BSR.w pokela5s
00041D2C <AmiBlitz3.ab2@16025> BRA.w JL_0_A978
00041D32 <AmiBlitz3.ab2@16029>   MOVE.w regnum,D1
00041D34 <AmiBlitz3.ab2@16030>   LSL.w #8,D1
00041D36 <AmiBlitz3.ab2@16031>   LSL.w #1,D1
00041D3C <AmiBlitz3.ab2@16032>   OR.w stamp,D1
00041D40 <AmiBlitz3.ab2@16033>    BSR.w writeword
00041D42 <AmiBlitz3.ab2@16034> RTS
00041D46 <AmiBlitz3.ab2@16038>   BTST #$F,D2
00041D4A <AmiBlitz3.ab2@16039>    BNE.w JL_0_A978
00041D50 <AmiBlitz3.ab2@16040>   MOVE.w D3,leaamp+2
00041D56 <AmiBlitz3.ab2@16041>   MOVE.l leaamp,D1
00041D5A <AmiBlitz3.ab2@16042>    BSR.w pokela5s
00041D60 <AmiBlitz3.ab2@16045>   MOVE.w regnum,D1
00041D62 <AmiBlitz3.ab2@16046>   LSL.w #8,D1
00041D64 <AmiBlitz3.ab2@16047>   LSL.w #1,D1
00041D6A <AmiBlitz3.ab2@16048>   OR.w leaamp2,D1
00041D6E <AmiBlitz3.ab2@16049> BRA.w writeword
00041D72 <AmiBlitz3.ab2@16053>   MOVE.w #$D200,D1
00041D76 <AmiBlitz3.ab2@16054>    BSR.w Atokejsr
00041D78 <AmiBlitz3.ab2@16055>   MOVEQ.l #$03,D2
00041D7A <AmiBlitz3.ab2@16056> RTS
00041D7E <AmiBlitz3.ab2@16060> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
00041D80 <AmiBlitz3.ab2@16061>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
00041D82 <AmiBlitz3.ab2@16062>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
00041D86 <AmiBlitz3.ab2@16068>    BSR.w get1bytemain
00041D88 <AmiBlitz3.ab2@16069>   MOVE.w D0,D1
00041D8C <AmiBlitz3.ab2@16070>    BPL.w syntaxerr
00041D8E <AmiBlitz3.ab2@16071>   MOVE.w D2,-(A7)
00041D92 <AmiBlitz3.ab2@16072>   BCLR #$F,D1
00041D96 <AmiBlitz3.ab2@16073>    BSR.w searchinstr
00041D9A <AmiBlitz3.ab2@16074>   MOVE.l $12(A2),D0
00041D9E <AmiBlitz3.ab2@16075>   TST.w -$2(A2,D0.L)
00041DA2 <AmiBlitz3.ab2@16076>    BEQ.w freeerr
00041DA4 <AmiBlitz3.ab2@16077>   MOVE.w (A7)+,D2
00041DA6 <AmiBlitz3.ab2@16078> RTS
00041DAA <AmiBlitz3.ab2@16082>   MOVE.l $0(A5),D0
00041DAE <AmiBlitz3.ab2@16083>    BNE.b ucodeskip
00041DB0 <AmiBlitz3.ab2@16084>   MOVEQ.l #-$01,D0
00041DB4 <AmiBlitz3.ab2@16085> BRA.b usedcodef
00041DB8 <AmiBlitz3.ab2@16088>   SUB.l $0(A5),D0
00041DBA <AmiBlitz3.ab2@16091>   LSR.w #8,D0
00041DBE <AmiBlitz3.ab2@16096>    MOVE.l $0(A5),D0
00041DC2 <AmiBlitz3.ab2@16097>    BNE.b ucodeskip2
00041DC4 <AmiBlitz3.ab2@16098>   MOVEQ.l #-$01,D0
00041DC8 <AmiBlitz3.ab2@16099> BRA.b usedcode2f
00041DCC <AmiBlitz3.ab2@16102>   SUB.l $0(A5),D0                                          ;usedcode2
00041DCE <AmiBlitz3.ab2@16103>   LSR.w #8,D0
00041DD0 <AmiBlitz3.ab2@16106>   LSR.w #8,D0
00041DD2 <AmiBlitz3.ab2@16111>   MOVE.l D0,-(A7)
00041DD4 <AmiBlitz3.ab2@16114>   MOVE.l (A7)+,D0
00041DD6 <AmiBlitz3.ab2@16117>   MOVE.l D0,D0
00041DDA <AmiBlitz3.ab2@16123>   BSR.w JL_0_A9A0
00041DDE <AmiBlitz3.ab2@16125>   MOVE.w -$2(A2,D0.L),D3
00041DE2 <AmiBlitz3.ab2@16126>   CMP.w #$9,D3
00041DE6 <AmiBlitz3.ab2@16127>    BCC.w doused__skip
00041DEA <AmiBlitz3.ab2@16131>   LEA usedcode(PC),A0
00041DEE <AmiBlitz3.ab2@16132>   LEA usedcodef(PC),A1
00041DF4 <AmiBlitz3.ab2@16134>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
00041DF8 <AmiBlitz3.ab2@16135>   ANDI.w #$7,D3
00041DFA <AmiBlitz3.ab2@16136>   LSL.w #8,D3
00041DFC <AmiBlitz3.ab2@16137>   LSL.w #1,D3
00041E00 <AmiBlitz3.ab2@16138>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
00041E04 <AmiBlitz3.ab2@16139> BRA.w doused__skip2
00041E08 <AmiBlitz3.ab2@16144>   LEA usedcode2(PC),A0
00041E0C <AmiBlitz3.ab2@16145>   LEA usedcode2f(PC),A1
00041E12 <AmiBlitz3.ab2@16147>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
00041E14 <AmiBlitz3.ab2@16148>   SUBQ.w #8,D3
00041E16 <AmiBlitz3.ab2@16149>   LSL.w #8,D3
00041E18 <AmiBlitz3.ab2@16150>   LSL.w #1,D3
00041E1C <AmiBlitz3.ab2@16151>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
00041E20 <AmiBlitz3.ab2@16154>   MOVE.w -$6(A2,D0.L),D3
00041E24 <AmiBlitz3.ab2@16155>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
00041E26 <AmiBlitz3.ab2@16156>   ADDQ.w #4,D3
00041E2A <AmiBlitz3.ab2@16157>   MOVE.w D3,$2(A0)
00041E30 <AmiBlitz3.ab2@16158>   MOVE.w regnum,D1
00041E34 <AmiBlitz3.ab2@16159>    BEQ.w doused__skip3
00041E38 <AmiBlitz3.ab2@16160>   MOVE.w usedprep(PC),D1
00041E3C <AmiBlitz3.ab2@16161>    BSR.w writeword
00041E40 <AmiBlitz3.ab2@16164>   BSR.w pokecode
00041E46 <AmiBlitz3.ab2@16165>   MOVE.w regnum,D1
00041E4A <AmiBlitz3.ab2@16166>    BEQ.w doused__skip4
00041E4C <AmiBlitz3.ab2@16167>   LSL.w #8,D1
00041E4E <AmiBlitz3.ab2@16168>   LSL.w #1,D1
00041E52 <AmiBlitz3.ab2@16169>   OR.w usedfix(PC),D1
00041E56 <AmiBlitz3.ab2@16170>    BSR.w writeword
00041E5A <AmiBlitz3.ab2@16171>   MOVE.w useddone(PC),D1
00041E5E <AmiBlitz3.ab2@16172>    BSR.w writeword
00041E60 <AmiBlitz3.ab2@16175>    MOVEQ.l #$02,D2
00041E64 <AmiBlitz3.ab2@16176> BRA.w get1bytemain
00041E68 <AmiBlitz3.ab2@16184>    BSR.w JL_0_A9A0
00041E6A <AmiBlitz3.ab2@16186>   MOVEQ.l #$00,D3
00041E6E <AmiBlitz3.ab2@16187>   MOVE.w -$4(A2,D0.L),D3
00041E72 <AmiBlitz3.ab2@16188>    BSR.w get1bytemain
00041E76 <AmiBlitz3.ab2@16189> BRA.w JL_0_B46E
00041E7A <AmiBlitz3.ab2@16196>    BSR.w get1bytemain
00041E7C <AmiBlitz3.ab2@16197>   MOVE.w D0,-(A7)
00041E80 <AmiBlitz3.ab2@16198>    BSR.w get1bytemain
00041E84 <AmiBlitz3.ab2@16199>   CMP.w #$28,D0
00041E88 <AmiBlitz3.ab2@16200>    BNE.w syntaxerr
00041E8A <AmiBlitz3.ab2@16201>   MOVE.w (A7)+,D0
00041E8E <AmiBlitz3.ab2@16202>    BSR.w JL_0_C340
00041E92 <AmiBlitz3.ab2@16203>    BSR.w reget
00041E96 <AmiBlitz3.ab2@16204>   CMP.w #$29,D0
00041E9A <AmiBlitz3.ab2@16205>    BNE.w syntaxerr
00041E9E <AmiBlitz3.ab2@16209>   LEA addrcode(PC),A0
00041EA2 <AmiBlitz3.ab2@16210>   LEA addrcodef(PC),A1
00041EA8 <AmiBlitz3.ab2@16211>   MOVE.w -$6(A2),$2(A0)
00041EAC <AmiBlitz3.ab2@16212>   MOVE.w $4(A0),D1
00041EB0 <AmiBlitz3.ab2@16213>   ANDI.w #$FFF8,D1
00041EB6 <AmiBlitz3.ab2@16214>   OR.w regnum,D1
00041EBA <AmiBlitz3.ab2@16215>   MOVE.w D1,$4(A0)
00041EBE <AmiBlitz3.ab2@16216>   MOVE.w $6(A0),D1
00041EC2 <AmiBlitz3.ab2@16217>   ANDI.w #$F1FF,D1
00041EC8 <AmiBlitz3.ab2@16218>   MOVE.w regnum,D0
00041ECA <AmiBlitz3.ab2@16219>   LSL.w #8,D0
00041ECC <AmiBlitz3.ab2@16220>   LSL.w #1,D0
00041ECE <AmiBlitz3.ab2@16221>   OR.w D0,D1
00041ED2 <AmiBlitz3.ab2@16222>   MOVE.w D1,$6(A0)
00041ED6 <AmiBlitz3.ab2@16223>    BSR.w pokecode
00041ED8 <AmiBlitz3.ab2@16224>   MOVEQ.l #$03,D2
00041EDC <AmiBlitz3.ab2@16225> BRA.w get1bytemain
00041EE0 <AmiBlitz3.ab2@16229>   CMP.w #-$7F4D,D0
00041EE4 <AmiBlitz3.ab2@16230>    BHI.w JL_0_AAFE
00041EE8 <AmiBlitz3.ab2@16231> BRA.w syntaxerr
00041EEC <AmiBlitz3.ab2@16238> .do_null   CMP.w #$b581,d0
00041EF0 <AmiBlitz3.ab2@16239>    BNE 'nonull
00041EF6 <AmiBlitz3.ab2@16240>    MOVE.l d0,lastinstruction
00041EFA <AmiBlitz3.ab2@16241>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
00041F00 <AmiBlitz3.ab2@16242>    MOVE.w regnum,d0
00041F02 <AmiBlitz3.ab2@16243>    ASL.l #7,d0
00041F04 <AmiBlitz3.ab2@16244>    ASL.l #2,d0
00041F06 <AmiBlitz3.ab2@16245>    OR.l d0,d1
00041F0A <AmiBlitz3.ab2@16246>    BSR writeword
00041F10 <AmiBlitz3.ab2@16247>    JSR get1bytemain
00041F12 <AmiBlitz3.ab2@16248>    RTS
00041F16 <AmiBlitz3.ab2@16250> 'nonull CMP.w #$c982,d0
00041F1A <AmiBlitz3.ab2@16251>        BNE nonew_
00041F1C <AmiBlitz3.ab2@16253>   MOVE.l a5,-(a7)
00041F22 <AmiBlitz3.ab2@16254>   MOVE.w lastchar,-(a7)
00041F28 <AmiBlitz3.ab2@16255>   JSR get1bytemain
00041F2C <AmiBlitz3.ab2@16256>   CMP.w #"(",d0                                             ; use oldcode
00041F30 <AmiBlitz3.ab2@16257>   BNE 'newcode
00041F36 <AmiBlitz3.ab2@16258>   JSR get1bytemain
00041F3A <AmiBlitz3.ab2@16259>   CMP.w #")",d0
00041F3E <AmiBlitz3.ab2@16260>   BEQ 'newcode
00041F44 <AmiBlitz3.ab2@16261>   MOVE.w (a7)+,lastchar
00041F46 <AmiBlitz3.ab2@16262>   MOVE.l (a7)+,a5
00041F4C <AmiBlitz3.ab2@16263>   MOVE.w lastchar,d0
00041F50 <AmiBlitz3.ab2@16264>   BRA nonew_
00041F52 <AmiBlitz3.ab2@16265> 'newcode  MOVE.l a0,-(a7)
00041F58 <AmiBlitz3.ab2@16266>   TST.b blitzparloop
00041F5C <AmiBlitz3.ab2@16267>   BNE 'err
00041F62 <AmiBlitz3.ab2@16268>   TST.b funcparloop
00041F66 <AmiBlitz3.ab2@16269>   BNE 'err
00041F6A <AmiBlitz3.ab2@16270>   BRA 'ok
00041F70 <AmiBlitz3.ab2@16271> 'err JMP errornewnotincalls
00041F76 <AmiBlitz3.ab2@16272> 'ok  MOVE.l #$203c0000,d1
00041F7A <AmiBlitz3.ab2@16273>   BSR writelong                                            ; 68k asm move.l #$xx,d0
00041F7C <AmiBlitz3.ab2@16274>   MOVEQ #0,d1
00041F80 <AmiBlitz3.ab2@16275>   MOVE.w 8(a0),d1
00041F84 <AmiBlitz3.ab2@16276>   BSR writeword
00041F88 <AmiBlitz3.ab2@16277>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
00041F8C <AmiBlitz3.ab2@16278>   BSR writeword
00041F90 <AmiBlitz3.ab2@16279>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
00041F94 <AmiBlitz3.ab2@16280>   BSR.w tokejsr2
00041F96 <AmiBlitz3.ab2@16281>   MOVE.l (a7)+,a0
00041F98 <AmiBlitz3.ab2@16282>   ADDQ.l #6,a7                      ; a5 need not restore
00041F9C <AmiBlitz3.ab2@16283>   CMP.w #")",d0
00041FA0 <AmiBlitz3.ab2@16284>   BNE 'nobracket
00041FA6 <AmiBlitz3.ab2@16285>   JSR get1bytemain
00041FA8 <AmiBlitz3.ab2@16286> 'nobracket  RTS
00041FAC <AmiBlitz3.ab2@16288> nonew_  CMP.w #-$7F4A,D0
00041FB0 <AmiBlitz3.ab2@16289>    BEQ.w JL_0_A98C
00041FB4 <AmiBlitz3.ab2@16290>   CMP.w #-$7F48,D0
00041FB8 <AmiBlitz3.ab2@16291>    BEQ.w doaddr
00041FBC <AmiBlitz3.ab2@16292>   CMP.w #-$7F3C,D0
00041FC0 <AmiBlitz3.ab2@16293>    BEQ.w domaximum
00041FC4 <AmiBlitz3.ab2@16294>   CMP.w #-$7F2F,D0
00041FC8 <AmiBlitz3.ab2@16295>    BEQ.w doused
00041FCA <AmiBlitz3.ab2@16296>   MOVE.w D2,-(A7)
00041FCC <AmiBlitz3.ab2@16297>   MOVE.w D0,D1
00041FD0 <AmiBlitz3.ab2@16298>   BCLR #$F,D1
00041FD4 <AmiBlitz3.ab2@16300>    BSR.w searchinstr
00041FD6 <AmiBlitz3.ab2@16301>   MOVE.w (A3),D1
00041FDA <AmiBlitz3.ab2@16302>   BTST #$1,D1
00041FDE <AmiBlitz3.ab2@16303>    BEQ.w noreturn_                                         ;syntax error noreturn
00041FE2 <AmiBlitz3.ab2@16304>   BTST #$2,D1
00041FE6 <AmiBlitz3.ab2@16305>    BNE.w JL_0_AC1A
00041FE8 <AmiBlitz3.ab2@16306>   LSR.w #8,D1
00041FEE <AmiBlitz3.ab2@16307>   BTST #$3,$1(A3)
00041FF2 <AmiBlitz3.ab2@16308>    BEQ.w JL_0_AB4C
00041FF8 <AmiBlitz3.ab2@16309>    JSR AJL_0_498A
00041FFE <AmiBlitz3.ab2@16312>    CLR.l rightsidetype
00042000 <AmiBlitz3.ab2@16313>    MOVE.w D1,-(A7)                                         ;is library instruction
00042004 <AmiBlitz3.ab2@16314>   CMP.w #$7,D1
00042008 <AmiBlitz3.ab2@16315>    BNE.w JL_0_AB5E
0004200A <AmiBlitz3.ab2@16316>   MOVE.l A2,-(A7)
0004200E <AmiBlitz3.ab2@16317>    BSR.w makesbase
00042010 <AmiBlitz3.ab2@16318>   MOVEA.l (A7)+,A2
00042014 <AmiBlitz3.ab2@16321>     BSR.w JL_0_AFA2
00042016 <AmiBlitz3.ab2@16322>   MOVE.w D3,-(A7)
0004201A <AmiBlitz3.ab2@16323>    BSR.w get1bytemain
0004201C <AmiBlitz3.ab2@16324>   MOVEQ.l #$00,D1
00042020 <AmiBlitz3.ab2@16325>   CMP.w #$28,D0
00042024 <AmiBlitz3.ab2@16326>    BNE.w JL_0_AB80
0004202A <AmiBlitz3.ab2@16327>    JSR JL_0_66F6
0004202C <AmiBlitz3.ab2@16328>   TST.w D1
00042030 <AmiBlitz3.ab2@16329>    BEQ.w syntaxerr
00042034 <AmiBlitz3.ab2@16330> BRA.w JL_0_AB84
0004203E <AmiBlitz3.ab2@16335>   MOVE.w oldqflag,instringon
00042044 <AmiBlitz3.ab2@16336>   MOVEA.l lastsourcepos,A5
0004204A <AmiBlitz3.ab2@16339>    MOVE.w regnum,-(A7)
00042054 <AmiBlitz3.ab2@16340>    MOVE.w regnum,regnumstore
0004205A <AmiBlitz3.ab2@16341>    TST.b fpu
0004205E <AmiBlitz3.ab2@16342>             BEQ 'nofloat
00042064 <AmiBlitz3.ab2@16343>             CMP.w #$ffff,28(a3)
00042068 <AmiBlitz3.ab2@16344>             BNE 'nofloat
0004206E <AmiBlitz3.ab2@16345>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
00042072 <AmiBlitz3.ab2@16346>             BEQ 'nofloat
00042078 <AmiBlitz3.ab2@16347>             CMP.w #$3c02,34(a3)                            ;int skip
0004207C <AmiBlitz3.ab2@16348>             BEQ 'quick
00042080 <AmiBlitz3.ab2@16349>             CMP.b #5,(a3)
00042084 <AmiBlitz3.ab2@16350>             BNE 'nofloat
0004208A <AmiBlitz3.ab2@16353>             CLR.l load_var_addr
0004208E <AmiBlitz3.ab2@16354> BRA 'isfpu
00042094 <AmiBlitz3.ab2@16357>    CLR.w regnum
00042096 <AmiBlitz3.ab2@16360>    MOVE.w D1,-(A7)
0004209C <AmiBlitz3.ab2@16361>   BTST #$3,$1(A3)
000420A0 <AmiBlitz3.ab2@16362>    BEQ.w JL_0_ABB0
000420A4 <AmiBlitz3.ab2@16381>   MOVE.w $6(A7),D1
000420AA <AmiBlitz3.ab2@16382>   MOVE.w d1,peeksize
000420AE <AmiBlitz3.ab2@16392>   ORI.w #$7000,D1
000420B2 <AmiBlitz3.ab2@16393>   BSR.w writeword                                          ;write peekmode
000420B8 <AmiBlitz3.ab2@16396>   ADDQ.w #1,regnum
000420BA <AmiBlitz3.ab2@16397>   MOVE.w (A7),D1
000420C2 <AmiBlitz3.ab2@16400>   MOVE.w 2(a7),tempregnum
000420C8 <AmiBlitz3.ab2@16401>   JSR JL_0_4878
000420CA <AmiBlitz3.ab2@16402>   TST.w (A7)+
000420CE <AmiBlitz3.ab2@16403>   BEQ.w JL_0_ABC6
000420D2 <AmiBlitz3.ab2@16404>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
000420D6 <AmiBlitz3.ab2@16405>   BNE.w errorbracketmiss                                    ; was syntax error
000420DC <AmiBlitz3.ab2@16406>   CLR.l lasttoken
000420E0 <AmiBlitz3.ab2@16407>   BSR.w get1bytemain
000420E2 <AmiBlitz3.ab2@16410>    MOVE.w (A7)+,D1
000420E8 <AmiBlitz3.ab2@16411>   MOVE.w D1,regnum
000420EC <AmiBlitz3.ab2@16412>    BEQ.w JL_0_ABDE
000420F2 <AmiBlitz3.ab2@16413>    CMP.w #$3c01,24(a2)                                     ;val skipped
000420F6 <AmiBlitz3.ab2@16414>    BNE 'noval
000420FC <AmiBlitz3.ab2@16415>    TST.b fpu
00042100 <AmiBlitz3.ab2@16416>    BEQ 'noval
00042106 <AmiBlitz3.ab2@16417>    CLR.l load_var_addr
00042108 <AmiBlitz3.ab2@16418>    MOVEQ #0,d1
0004210E <AmiBlitz3.ab2@16419>    MOVE.w regnum,d1
00042110 <AmiBlitz3.ab2@16420>    LSL.l #7,d1
00042116 <AmiBlitz3.ab2@16421>    OR.l #$f2000000,d1
0004211A <AmiBlitz3.ab2@16422>    BSR writelong
0004211E <AmiBlitz3.ab2@16423> BRA JL_0_ABDE
00042124 <AmiBlitz3.ab2@16427>    CMP.w #$3c02,24(a2)                                     ;int skipped
00042128 <AmiBlitz3.ab2@16428>    BEQ 'quick
0004212C <AmiBlitz3.ab2@16429>    CMP.b #5,d2
00042130 <AmiBlitz3.ab2@16430>    BNE 'nofpu
00042136 <AmiBlitz3.ab2@16431>    TST.b fpu
0004213A <AmiBlitz3.ab2@16432>    BEQ 'nofpu
00042140 <AmiBlitz3.ab2@16437>    CLR.l load_var_addr
00042144 <AmiBlitz3.ab2@16438> BRA JL_0_ABDE
00042146 <AmiBlitz3.ab2@16441>   LSL.w #8,D1
00042148 <AmiBlitz3.ab2@16442>   LSL.w #1,D1
0004214C <AmiBlitz3.ab2@16443>   ORI.w #$2000,D1
00042150 <AmiBlitz3.ab2@16444>   BSR.w writeword                                          ;write move.l d0,dx
00042156 <AmiBlitz3.ab2@16445>   TST.b fpu
0004215A <AmiBlitz3.ab2@16446>   BEQ JL_0_ABDE
0004215C <AmiBlitz3.ab2@16447>   MOVEQ #0,d1
00042162 <AmiBlitz3.ab2@16448>   MOVE.w regnum,d1
00042164 <AmiBlitz3.ab2@16449>   LSL.l #7,d1
0004216A <AmiBlitz3.ab2@16450>   OR.l #$f2000000,d1
0004216C <AmiBlitz3.ab2@16454>        MOVE.w (A7)+,D3
00042170 <AmiBlitz3.ab2@16455>        BEQ.w JL_0_ABFC
00042176 <AmiBlitz3.ab2@16456>        TST.b fpu
0004217A <AmiBlitz3.ab2@16457>        BEQ 'nofpu
0004217C <AmiBlitz3.ab2@16458>       MOVE.l d0,-(a7)
0004217E <AmiBlitz3.ab2@16459>        MOVE.l a0,-(a7)
00042184 <AmiBlitz3.ab2@16460>        MOVE.l stacktrack,d1
0004218A <AmiBlitz3.ab2@16461>        LEA fpustackbase,a0
00042192 <AmiBlitz3.ab2@16462>        MOVE.w 0(a0,d1),regmask
00042194 <AmiBlitz3.ab2@16463>        MOVE.l (a7)+,a0
00042198 <AmiBlitz3.ab2@16464>       MOVE.w #8,d0
0004219C <AmiBlitz3.ab2@16467>       BEQ 'ready
000421A2 <AmiBlitz3.ab2@16468>       BTST d0,regmask
000421A6 <AmiBlitz3.ab2@16469>       BEQ 'noa7
000421A8 <AmiBlitz3.ab2@16470>       MOVEQ #0,d1
000421AA <AmiBlitz3.ab2@16471>       MOVE.w d0,d1
000421AC <AmiBlitz3.ab2@16472>       SUBQ.w #1,d1
000421AE <AmiBlitz3.ab2@16473>       ASL #7,d1
000421B4 <AmiBlitz3.ab2@16475>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
000421B8 <AmiBlitz3.ab2@16476>       BSR writelong
000421BE <AmiBlitz3.ab2@16477>       SUBQ.l #2,stacktrack
000421C0 <AmiBlitz3.ab2@16480>       SUBQ.w #1,d0
000421C4 <AmiBlitz3.ab2@16481>       BNE 'loop
000421C6 <AmiBlitz3.ab2@16484>       MOVE.l (a7)+,d0
000421CC <AmiBlitz3.ab2@16485>       SUBQ.l #2,stacktrack                                 ;int track
000421D0 <AmiBlitz3.ab2@16488>    MOVE.w #$4CDF,D1
000421D4 <AmiBlitz3.ab2@16489>    BSR.w writeword                                         ;write movem.l (a7)+,
000421D6 <AmiBlitz3.ab2@16490>   MOVEQ.l #$00,D1
000421D8 <AmiBlitz3.ab2@16491>   MOVEQ.l #$0F,D4
000421DA <AmiBlitz3.ab2@16494>     LSL.w #1,D3
000421DC <AmiBlitz3.ab2@16495>     ROXR.w #1,D1
000421E0 <AmiBlitz3.ab2@16496>   DBF D4,JL_0_ABF0
000421E4 <AmiBlitz3.ab2@16498>    BSR.w writeword
000421EA <AmiBlitz3.ab2@16499>    TST.b fast
000421EE <AmiBlitz3.ab2@16500>    BEQ JL_0_ABFC
000421F4 <AmiBlitz3.ab2@16501>    TST.w regnum
000421F8 <AmiBlitz3.ab2@16502>    BEQ JL_0_ABFC
000421FE <AmiBlitz3.ab2@16503>    CMP.w #$3c0e,$1c(a3)                                    ;true
00042202 <AmiBlitz3.ab2@16504>    BNE 'l1
00042208 <AmiBlitz3.ab2@16505>    MOVE.w regnum,d1
0004220A <AmiBlitz3.ab2@16506>    ASL.l #8,d1
0004220C <AmiBlitz3.ab2@16507>    ASL.l #1,d1
00042210 <AmiBlitz3.ab2@16508>    OR.w #$70ff,d1
0004221A <AmiBlitz3.ab2@16509>    SUB.l #12,destpointer
0004221E <AmiBlitz3.ab2@16510>    BSR writeword
00042224 <AmiBlitz3.ab2@16513>   CMP.w #$3c0f,$1c(a3)                                     ;false
00042228 <AmiBlitz3.ab2@16514>    BNE 'l2
0004222E <AmiBlitz3.ab2@16515>     MOVE.w regnum,d1
00042230 <AmiBlitz3.ab2@16516>     ASL.l #8,d1
00042232 <AmiBlitz3.ab2@16517>     ASL.l #1,d1
00042236 <AmiBlitz3.ab2@16518>     OR.w #$7000,d1
00042240 <AmiBlitz3.ab2@16519>     SUB.l #12,destpointer
00042244 <AmiBlitz3.ab2@16520>     BSR writeword
00042246 <AmiBlitz3.ab2@16524>    MOVE.w (A7)+,D2
0004224A <AmiBlitz3.ab2@16525>   CMP.w #$7,D2                                             ;destination var type
0004224E <AmiBlitz3.ab2@16526>    BNE.w JL_0_AC16
00042254 <AmiBlitz3.ab2@16527>   MOVE.w putstlen,D1
0004225A <AmiBlitz3.ab2@16528>   OR.w regnum,D1
0004225E <AmiBlitz3.ab2@16529>    BSR.w writeword
00042262 <AmiBlitz3.ab2@16532> BRA.w JL_0_AF66
00042266 <AmiBlitz3.ab2@16537>   MOVE.w $6(A3),D1
0004226A <AmiBlitz3.ab2@16538>    BSR.w uselib
0004226E <AmiBlitz3.ab2@16539>    BSR.w JL_0_AD40
00042270 <AmiBlitz3.ab2@16540>   MOVE.l D4,D1
00042272 <AmiBlitz3.ab2@16541>   MOVE.l D5,-(A7)
00042276 <AmiBlitz3.ab2@16542>    BSR.w JL_0_AD38
0004227A <AmiBlitz3.ab2@16543>   MOVE.w $A(A1),-(A7)
0004227C <AmiBlitz3.ab2@16544>   ADDQ.w #8,A3
0004227E <AmiBlitz3.ab2@16545>   MOVE.w (A3)+,-(A7)
00042280 <AmiBlitz3.ab2@16546>   MOVE.l A3,-(A7)
00042284 <AmiBlitz3.ab2@16547>    BSR.w get1bytemain
00042286 <AmiBlitz3.ab2@16548>   MOVE.w D0,-(A7)
00042288 <AmiBlitz3.ab2@16549>   MOVEQ.l #$00,D3
0004228E <AmiBlitz3.ab2@16550>   JSR checka4a5
00042290 <AmiBlitz3.ab2@16552>   MOVE.b (A3)+,D1
00042294 <AmiBlitz3.ab2@16553>    BMI.w JL_0_AC6A
00042296 <AmiBlitz3.ab2@16554>   MOVEQ.l #$03,D2
00042298 <AmiBlitz3.ab2@16555>   ADDQ.w #1,D3
0004229C <AmiBlitz3.ab2@16556>   MOVEM.l D3/A3,-(A7)
000422A2 <AmiBlitz3.ab2@16557>   MOVE.b funcparloop,-(a7)
000422A8 <AmiBlitz3.ab2@16558>   CLR.b funcparloop
000422AE <AmiBlitz3.ab2@16559>   MOVE.b blitzparloop,-(a7)
000422B6 <AmiBlitz3.ab2@16560>   MOVE.b #1,blitzparloop
000422BC <AmiBlitz3.ab2@16561>   MOVE.l lasttoken,-(a7)
000422C2 <AmiBlitz3.ab2@16562>   MOVE.l leftsidetype,-(a7)
000422C8 <AmiBlitz3.ab2@16563>   MOVE.l rightsidetype,-(a7)
000422CC <AmiBlitz3.ab2@16564>   BSR.w peval
000422D2 <AmiBlitz3.ab2@16565>   MOVE.l (a7)+,rightsidetype
000422D8 <AmiBlitz3.ab2@16566>   MOVE.l (a7)+,leftsidetype
000422DE <AmiBlitz3.ab2@16567>   MOVE.l (a7)+,lasttoken
000422E4 <AmiBlitz3.ab2@16568>   MOVE.b (a7)+,blitzparloop
000422EA <AmiBlitz3.ab2@16569>   MOVE.b (a7)+,funcparloop
000422F0 <AmiBlitz3.ab2@16570>   SUBQ.w #4,a2offset
000422F4 <AmiBlitz3.ab2@16571>   MOVEM.l (A7)+,D3/A3
000422F8 <AmiBlitz3.ab2@16572>   CMP.w #$2C,D0
000422FC <AmiBlitz3.ab2@16573>    BEQ.w JL_0_AC40
000422FE <AmiBlitz3.ab2@16574>   TST.b (A3)
00042302 <AmiBlitz3.ab2@16575>    BPL.w syntaxerr
00042304 <AmiBlitz3.ab2@16578>   MOVE.w (A7)+,D1
00042308 <AmiBlitz3.ab2@16579>    BSR.w JL_0_AD04
0004230A <AmiBlitz3.ab2@16580>   MOVEA.l (A7)+,A3
0004230C <AmiBlitz3.ab2@16581>   SUBQ.w #1,D3
00042310 <AmiBlitz3.ab2@16582>    BMI.w JL_0_ACBE
00042312 <AmiBlitz3.ab2@16585>   TST.b (A3)+
00042316 <AmiBlitz3.ab2@16586>    BPL.w JL_0_AC78
00042318 <AmiBlitz3.ab2@16587>   SUBQ.w #1,A3
0004231A <AmiBlitz3.ab2@16590>     MOVEQ.l #$00,D1
0004231C <AmiBlitz3.ab2@16591>     MOVE.b -(A3),D1
00042320 <AmiBlitz3.ab2@16592>     BTST #$4,D1
00042324 <AmiBlitz3.ab2@16593>      BNE.w JL_0_ACAA
0004232A <AmiBlitz3.ab2@16594>     CMP.w regnum,D1
0004232E <AmiBlitz3.ab2@16595>      BCC.w JL_0_AC9E
00042330 <AmiBlitz3.ab2@16596>     BSET D1,D5
00042332 <AmiBlitz3.ab2@16597>     MOVEQ.l #$0F,D0
00042334 <AmiBlitz3.ab2@16598>     SUB.w D1,D0
00042336 <AmiBlitz3.ab2@16599>     BSET D0,D4
00042338 <AmiBlitz3.ab2@16602>     LSL.w #8,D1
0004233A <AmiBlitz3.ab2@16603>     LSL.w #1,D1
0004233E <AmiBlitz3.ab2@16604>     ORI.w #$201F,D1
00042342 <AmiBlitz3.ab2@16605>   BRA.w JL_0_ACB6
00042346 <AmiBlitz3.ab2@16608>     ANDI.w #$7,D1
00042348 <AmiBlitz3.ab2@16609>     LSL.w #8,D1
0004234A <AmiBlitz3.ab2@16610>     LSL.w #1,D1
0004234E <AmiBlitz3.ab2@16611>     ORI.w #$205F,D1
00042352 <AmiBlitz3.ab2@16614>      BSR.w writeword
00042356 <AmiBlitz3.ab2@16615>   DBF D3,JL_0_AC80
0004235C <AmiBlitz3.ab2@16618>   MOVE.w (A7)+,libjsr+2
00042362 <AmiBlitz3.ab2@16619>   MOVE.w (A7)+,libbase+2
00042368 <AmiBlitz3.ab2@16620>   MOVE.l libbase,D1
0004236C <AmiBlitz3.ab2@16621>    BSR.w writelong
00042372 <AmiBlitz3.ab2@16622>   MOVE.l libjsr,D1
00042376 <AmiBlitz3.ab2@16623>    BSR.w writelong
0004237C <AmiBlitz3.ab2@16624>   MOVE.w regnum,D1
00042380 <AmiBlitz3.ab2@16625>    BEQ.w JL_0_ACF4
00042382 <AmiBlitz3.ab2@16626>   LSL.w #8,D1
00042384 <AmiBlitz3.ab2@16627>   LSL.w #1,D1
00042388 <AmiBlitz3.ab2@16628>   ORI.w #$2000,D1
0004238C <AmiBlitz3.ab2@16629>    BSR.w writeword
0004238E <AmiBlitz3.ab2@16632>   MOVE.l (A7)+,D1
00042392 <AmiBlitz3.ab2@16633>    BSR.w JL_0_AD38
00042398 <AmiBlitz3.ab2@16634>    JSR restorea4a5
0004239A <AmiBlitz3.ab2@16635>   MOVEQ.l #$03,D2
0004239E <AmiBlitz3.ab2@16636>    BSR.w reget
000423A2 <AmiBlitz3.ab2@16637> BRA.w JL_0_AF66
000423A4 <AmiBlitz3.ab2@16640>   TST.w D3
000423A8 <AmiBlitz3.ab2@16641>    BEQ.w JL_0_AD1E
000423AC <AmiBlitz3.ab2@16642>   CMP.w #$28,D1
000423B0 <AmiBlitz3.ab2@16643>    BNE.w syntaxerr
000423B4 <AmiBlitz3.ab2@16644>   CMP.w #$29,D0
000423B8 <AmiBlitz3.ab2@16645>    BNE.w syntaxerr
000423BC <AmiBlitz3.ab2@16646> BRA.w get1bytemain
000423C0 <AmiBlitz3.ab2@16649>   CMP.w #$28,D1
000423C4 <AmiBlitz3.ab2@16650>    BNE.w JL_0_AD36
000423C8 <AmiBlitz3.ab2@16651>    BSR.w get1bytemain
000423CC <AmiBlitz3.ab2@16652>   CMP.w #$29,D0
000423D0 <AmiBlitz3.ab2@16653>    BNE.w syntaxerr
000423D4 <AmiBlitz3.ab2@16654> BRA.w get1bytemain
000423D6 <AmiBlitz3.ab2@16657> RTS
000423D8 <AmiBlitz3.ab2@16660>   TST.w D1
000423DC <AmiBlitz3.ab2@16661>    BNE.w writelong
000423DE <AmiBlitz3.ab2@16662> RTS
000423E2 <AmiBlitz3.ab2@16666>   MOVE.w #$48E7,D4
000423E4 <AmiBlitz3.ab2@16667>   SWAP D4
000423E6 <AmiBlitz3.ab2@16668>   CLR.w D4
000423EA <AmiBlitz3.ab2@16669>   MOVE.w #$4CDF,D5
000423EC <AmiBlitz3.ab2@16670>   SWAP D5
000423EE <AmiBlitz3.ab2@16671>   CLR.w D5
000423F4 <AmiBlitz3.ab2@16672>   MOVE.w regnum,D1
000423F8 <AmiBlitz3.ab2@16673>    BEQ.w JL_0_AD74
000423FC <AmiBlitz3.ab2@16674>   BSET #$F,D4
00042400 <AmiBlitz3.ab2@16675>   BSET #$0,D5
00042404 <AmiBlitz3.ab2@16676>   CMP.w #$2,D1
00042408 <AmiBlitz3.ab2@16677>    BCS.w JL_0_AD72
0004240C <AmiBlitz3.ab2@16680>   BSET #$E,D4
00042410 <AmiBlitz3.ab2@16681>   BSET #$1,D5
00042412 <AmiBlitz3.ab2@16684> RTS
00042418 <AmiBlitz3.ab2@16687>   TST.w fuckpos
0004241C <AmiBlitz3.ab2@16688>   BNE.w JL_0_AD6A
0004241E <AmiBlitz3.ab2@16689> RTS
00042420 <AmiBlitz3.ab2@16692> fuckpos:  Ds.w 1
00042426 <AmiBlitz3.ab2@16696>   MOVE.w sbasegot,D1
0004242A <AmiBlitz3.ab2@16697>    BEQ.w makesbase__skip
0004242E <AmiBlitz3.ab2@16701>   MOVE.w sbgot(PC),D1
00042432 <AmiBlitz3.ab2@16702>    BNE.w makesbase__skip2
0004243A <AmiBlitz3.ab2@16706>   MOVE.w #$0002,sbgot
00042440 <AmiBlitz3.ab2@16707>   MOVE.w movea3a7,D1
00042444 <AmiBlitz3.ab2@16708> BRA.w writeword
00042446 <AmiBlitz3.ab2@16711> RTS
0004244E <AmiBlitz3.ab2@16716>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
00042454 <AmiBlitz3.ab2@16719>   MOVE.l #$C601,D1
0004245C <AmiBlitz3.ab2@16720>   MOVE.w #-1,sbasegot
00042462 <AmiBlitz3.ab2@16721>   MOVE.l d1,lastinstruction
00042466 <AmiBlitz3.ab2@16722>   BSR.w Atokejsr
00042468 <AmiBlitz3.ab2@16723> RTS
00042472 <AmiBlitz3.ab2@16728>   MOVE.l data1,litdata1
00042478 <AmiBlitz3.ab2@16729>   TST.b fast
0004247C <AmiBlitz3.ab2@16730>   BEQ 'l50                                                 ;optistring  seem impossible to get work
00042480 <AmiBlitz3.ab2@16734> BRA 'l50                                                   ;to deactivate
00042486 <AmiBlitz3.ab2@16740>   TST.b optistring
0004248A <AmiBlitz3.ab2@16741>   BNE.s 'l21
00042490 <AmiBlitz3.ab2@16742>   CLR.b string1
00042498 <AmiBlitz3.ab2@16743>   MOVE.b #1,optistring
0004249E <AmiBlitz3.ab2@16744>   TST.b nostringopt
000424A2 <AmiBlitz3.ab2@16745>   BNE 'l21
000424A4 <AmiBlitz3.ab2@16746>   MOVE.l a5,a4
000424A6 <AmiBlitz3.ab2@16747>   SUBQ.l #1,a4
000424A8 <AmiBlitz3.ab2@16750>     TST.b (a4)
000424AC <AmiBlitz3.ab2@16751>     BMI 'l19a
000424B0 <AmiBlitz3.ab2@16752>     BEQ.s 'l20
000424B4 <AmiBlitz3.ab2@16753>     CMP.b #$22,(a4)
000424B8 <AmiBlitz3.ab2@16754>     BEQ.s 'l19
000424BE <AmiBlitz3.ab2@16757>     TST.w string1
000424C2 <AmiBlitz3.ab2@16758>     BNE 'l11
000424C6 <AmiBlitz3.ab2@16759>     CMP.b #":",(a4)
000424CA <AmiBlitz3.ab2@16760>     BEQ.s 'l20
000424CE <AmiBlitz3.ab2@16761>     CMP.b #";",(a4)
000424D2 <AmiBlitz3.ab2@16762>     BEQ.s 'l20
000424D6 <AmiBlitz3.ab2@16763>     CMP.b #"+",(a4)
000424DA <AmiBlitz3.ab2@16764>     BEQ.s 'l21
000424DE <AmiBlitz3.ab2@16765>     CMP.b #",",(a4)
000424E2 <AmiBlitz3.ab2@16766>     BEQ.s 'l20                                             ;was l21
000424E6 <AmiBlitz3.ab2@16767>     CMP.b #")",(a4)
000424EA <AmiBlitz3.ab2@16768>     BEQ.s 'l20                                             ;was l21
000424EC <AmiBlitz3.ab2@16771>     ADDQ.l #1,a4
000424F0 <AmiBlitz3.ab2@16772> BRA.s 'l10
000424F8 <AmiBlitz3.ab2@16775>   BCHG #0,string1
000424FC <AmiBlitz3.ab2@16776> BRA 'l18
000424FE <AmiBlitz3.ab2@16779>   ADDQ.l #1,a4
00042500 <AmiBlitz3.ab2@16780>   TST.b (a4)
00042504 <AmiBlitz3.ab2@16781>   BEQ 'l21
00042508 <AmiBlitz3.ab2@16782> BRA 'l11
0004250A <AmiBlitz3.ab2@16785>   MOVE.l a5,a4
0004250C <AmiBlitz3.ab2@16786>   SUBQ.l #1,a4
00042510 <AmiBlitz3.ab2@16789>   CMP.b #$20,-(a4)
00042514 <AmiBlitz3.ab2@16790>   BEQ 'll1
00042518 <AmiBlitz3.ab2@16791>   CMP.b #"+",(a4)
0004251C <AmiBlitz3.ab2@16792>   BEQ 'l21
00042524 <AmiBlitz3.ab2@16807>   MOVE.b #2,optistring
0004252C <AmiBlitz3.ab2@16810>   CMP.b #2,optistring
00042530 <AmiBlitz3.ab2@16811>   BEQ.s 'l100
00042534 <AmiBlitz3.ab2@16814>   BSR.w makesbase
00042538 <AmiBlitz3.ab2@16815>   BSR.w pokedata1                                          ;writestringsizespace
0004253C <AmiBlitz3.ab2@16816>   BSR.w pokedata1
0004253E <AmiBlitz3.ab2@16819>   MOVEQ.l #$00,D2
00042544 <AmiBlitz3.ab2@16822>     MOVE.l a5,lastsourcepos
00042546 <AmiBlitz3.ab2@16823>     MOVEQ #0,d0
00042548 <AmiBlitz3.ab2@16824>     MOVE.b (a5)+,d0
0004254A <AmiBlitz3.ab2@16825>     TST.w D0
0004254E <AmiBlitz3.ab2@16826>      BEQ.w notqerr
00042552 <AmiBlitz3.ab2@16827>     CMP.w #$22,D0                                          ; --- " ---
00042556 <AmiBlitz3.ab2@16828>      BEQ.w JL_0_ADF6
0004255A <AmiBlitz3.ab2@16829>     CMP.b #"\",d0
0004255E <AmiBlitz3.ab2@16830>      BNE 'l1
00042562 <AmiBlitz3.ab2@16831>     CMP.b #"\",(a5)
00042566 <AmiBlitz3.ab2@16832>      BNE 'l1
0004256C <AmiBlitz3.ab2@16833>     TST.b newsyntax
00042570 <AmiBlitz3.ab2@16834>      BEQ 'l1
00042576 <AmiBlitz3.ab2@16835>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0004257A <AmiBlitz3.ab2@16836>     BNE 'l2
0004257C <AmiBlitz3.ab2@16837>     ADDQ #2,a5
0004257E <AmiBlitz3.ab2@16840>     ADDQ.w #1,D2
00042580 <AmiBlitz3.ab2@16841>     MOVE.w D0,D1
00042584 <AmiBlitz3.ab2@16842>     BSR.w pokedata1b                                        ;writestring
00042588 <AmiBlitz3.ab2@16843> BRA.w writestring
0004258E <AmiBlitz3.ab2@16846>     JSR check_newconstants
00042592 <AmiBlitz3.ab2@16847> BRA writestring
00042598 <AmiBlitz3.ab2@16850>   NOT instringon
0004259E <AmiBlitz3.ab2@16851>   MOVE.w dontwrite,D1
000425A2 <AmiBlitz3.ab2@16852>   BNE.w JL_0_AE0A
000425AA <AmiBlitz3.ab2@16853>   CMP.b #2,optistring
000425AE <AmiBlitz3.ab2@16854>   BEQ 'l10
000425B4 <AmiBlitz3.ab2@16855>     MOVEA.l litdata1,A0
000425B6 <AmiBlitz3.ab2@16856>     CLR.w (A0)+                                            ;writesize
000425B8 <AmiBlitz3.ab2@16857>     MOVE.w D2,(A0)
000425BC <AmiBlitz3.ab2@16861>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
000425C2 <AmiBlitz3.ab2@16862>   ADDQ.l #1,data1
000425CA <AmiBlitz3.ab2@16863>   BCLR #$0,data1+3
000425CC <AmiBlitz3.ab2@16864>   MOVEQ.l #$07,D2
000425D0 <AmiBlitz3.ab2@16865> BRA.w get1bytemain
000425D4 <AmiBlitz3.ab2@16869>   BSR.w makename2
000425D8 <AmiBlitz3.ab2@16870>   BSR.w findlabel2
000425DC <AmiBlitz3.ab2@16871>   BEQ.w JL_0_AE4A
000425E0 <AmiBlitz3.ab2@16872>   BSR.w addlabelhash
000425E4 <AmiBlitz3.ab2@16873>   CLR.l $4(A2)
000425E8 <AmiBlitz3.ab2@16874>   CLR.l $8(A2)
000425F0 <AmiBlitz3.ab2@16876>   MOVE.w linenumat+2,$10(A2)
000425F6 <AmiBlitz3.ab2@16877>   MOVE.w linenumat,d0
000425F8 <AmiBlitz3.ab2@16878>   MOVEQ #0,d1
000425FC <AmiBlitz3.ab2@16879>   MOVE.b -1(a2,d7),d1
00042600 <AmiBlitz3.ab2@16880>   MOVE.w d0,0(a2,d1)
00042604 <AmiBlitz3.ab2@16881> BRA.w JL_0_AE52
00042608 <AmiBlitz3.ab2@16884>   TST.l $8(A2)
0004260C <AmiBlitz3.ab2@16885>   BNE.w JL_0_AE88
00042612 <AmiBlitz3.ab2@16888>   MOVEA.l _execbase,A6
00042614 <AmiBlitz3.ab2@16889>   MOVEQ.l #$0C+2,D0
00042616 <AmiBlitz3.ab2@16890>   MOVEQ.l #$01,D1
0004261C <AmiBlitz3.ab2@16891>   MOVE.l mempool,a0
00042620 <AmiBlitz3.ab2@16892>   JSR _AllocPooled(a6)
00042622 <AmiBlitz3.ab2@16894>   MOVEA.l D0,A0
00042626 <AmiBlitz3.ab2@16895>   MOVE.l $4(A2),(A0)
0004262A <AmiBlitz3.ab2@16896>   MOVE.l A0,$4(A2)
00042632 <AmiBlitz3.ab2@16897>   MOVE.l destpointer,$4(A0)
00042636 <AmiBlitz3.ab2@16898>   ADDQ.l #2,$4(A0)
0004263E <AmiBlitz3.ab2@16899>   MOVE.w procnum,$8(A0)
00042646 <AmiBlitz3.ab2@16900>   MOVE.w linenumat+2,$A(A0)
0004264E <AmiBlitz3.ab2@16901>   MOVE.w linenumat,$c(a0)
00042650 <AmiBlitz3.ab2@16902> RTS
00042654 <AmiBlitz3.ab2@16905>   MOVE.l $4(A2),D1
00042658 <AmiBlitz3.ab2@16906>   BTST #$0,D1
0004265C <AmiBlitz3.ab2@16907>    BNE.w illlaberr
00042662 <AmiBlitz3.ab2@16908>   MOVE.w procnum,D1
00042666 <AmiBlitz3.ab2@16909>   CMP.w $10(A2),D1
0004266A <AmiBlitz3.ab2@16910>    BNE.w referr
0004266C <AmiBlitz3.ab2@16911> RTS
0004266E <AmiBlitz3.ab2@16915>   MOVE.w D0,-(A7)
00042676 <AmiBlitz3.ab2@16916>   CMP.b #2,optistring
0004267A <AmiBlitz3.ab2@16917>   BEQ 'l10
00042680 <AmiBlitz3.ab2@16920>   MOVE.w numtoa0,D1
00042684 <AmiBlitz3.ab2@16921>    BSR.w writeword
00042688 <AmiBlitz3.ab2@16922>    BSR.w addoff
0004268E <AmiBlitz3.ab2@16923>   MOVE.l litdata1,D1
00042692 <AmiBlitz3.ab2@16924>    BSR.w writelong
00042698 <AmiBlitz3.ab2@16925>   MOVE.w pushlen,D1
0004269C <AmiBlitz3.ab2@16926>    BSR.w writeword
000426A0 <AmiBlitz3.ab2@16927>   MOVE.w #$C600,D1
000426A4 <AmiBlitz3.ab2@16928>    BSR.w Atokejsr
000426A6 <AmiBlitz3.ab2@16929>   MOVE.w (A7)+,D0
000426A8 <AmiBlitz3.ab2@16930> RTS
000426AA <AmiBlitz3.ab2@16933>   MOVEQ #0,d1
000426AE <AmiBlitz3.ab2@16934>   BSR.w pokedata1b
000426B4 <AmiBlitz3.ab2@16935>   MOVE.l destpointer,a4
000426B8 <AmiBlitz3.ab2@16936>   MOVE.w #$203c,d1
000426BE <AmiBlitz3.ab2@16937>   TST.w mode
000426C2 <AmiBlitz3.ab2@16938>   BNE 'lm10
000426C8 <AmiBlitz3.ab2@16939>    ADDQ.w #4,a2offset
000426CC <AmiBlitz3.ab2@16940>   MOVE.w #$2f3c,d1
000426D2 <AmiBlitz3.ab2@16943>   TST.w mode
000426D6 <AmiBlitz3.ab2@16944>   BEQ 'lm3
000426DC <AmiBlitz3.ab2@16945>   MOVE.w regnum,D0
000426DE <AmiBlitz3.ab2@16946>   LSL.w #8,D0
000426E0 <AmiBlitz3.ab2@16947>   LSL.w #1,D0
000426E2 <AmiBlitz3.ab2@16948>   OR.w d0,d1
000426E6 <AmiBlitz3.ab2@16949>   BSR writeword
000426EA <AmiBlitz3.ab2@16950>   BSR.w addoff
000426F0 <AmiBlitz3.ab2@16951>   MOVE.l litdata1,D1
000426F4 <AmiBlitz3.ab2@16952>   BSR.w writelong
000426FC <AmiBlitz3.ab2@16953>   CMP.w #3,mode
00042700 <AmiBlitz3.ab2@16954>   BEQ 'l30
00042706 <AmiBlitz3.ab2@16955>    ADDQ.w #4,a2offset
0004270A <AmiBlitz3.ab2@16956>   MOVE.w #$4878,D1
0004270E <AmiBlitz3.ab2@16957>   BSR.w writeword
00042710 <AmiBlitz3.ab2@16958>   MOVE.l d2,d1
00042714 <AmiBlitz3.ab2@16959>   BSR writeword
00042716 <AmiBlitz3.ab2@16962>   MOVE.w (A7)+,D0
00042718 <AmiBlitz3.ab2@16963> RTS
0004271E <AmiBlitz3.ab2@16966>   MOVE.l #$3f3c0007,d1
00042722 <AmiBlitz3.ab2@16967>   BSR writelong
00042728 <AmiBlitz3.ab2@16968>   MOVE.w regnum,D1
0004272A <AmiBlitz3.ab2@16969>   LSL.w #8,D1
0004272C <AmiBlitz3.ab2@16970>   LSL.w #1,D1
00042730 <AmiBlitz3.ab2@16971>   ORI.w #$2f3c,d1
00042734 <AmiBlitz3.ab2@16972>   BSR writeword
0004273A <AmiBlitz3.ab2@16973>    ADDQ.w #4,a2offset
0004273C <AmiBlitz3.ab2@16974>   MOVE.l d2,d1
00042740 <AmiBlitz3.ab2@16975>   BSR writelong
00042744 <AmiBlitz3.ab2@16976>   MOVE.w #$2f3c,d1
00042748 <AmiBlitz3.ab2@16977>   BSR writeword
0004274C <AmiBlitz3.ab2@16978>   BSR.w addoff
00042752 <AmiBlitz3.ab2@16979>   MOVE.l litdata1,D1
00042756 <AmiBlitz3.ab2@16980>   BSR.w writelong
00042758 <AmiBlitz3.ab2@16981>   MOVE.w (A7)+,D0
0004275A <AmiBlitz3.ab2@16982> RTS
0004275E <AmiBlitz3.ab2@16986>   BSR.w get1bytemain
00042762 <AmiBlitz3.ab2@16987>    BSR.w JL_0_AE22
00042768 <AmiBlitz3.ab2@16988>   MOVE.w regnum,D1
0004276A <AmiBlitz3.ab2@16989>   LSL.w #8,D1
0004276C <AmiBlitz3.ab2@16990>   LSL.w #1,D1
00042770 <AmiBlitz3.ab2@16991>   ORI.w #$203C,D1
00042774 <AmiBlitz3.ab2@16992>    BSR.w writeword
00042778 <AmiBlitz3.ab2@16993>    BSR.w addoff
0004277C <AmiBlitz3.ab2@16994>   MOVE.l $8(A2),D1
00042780 <AmiBlitz3.ab2@16995>    BSR.w writelong
00042782 <AmiBlitz3.ab2@16996>   MOVEQ.l #$03,D2
00042788 <AmiBlitz3.ab2@16997>   CLR.b peekaddrsize
0004278C <AmiBlitz3.ab2@16998> BRA.w reget
0004278E <AmiBlitz3.ab2@17001>   MOVEQ.l #$00,D3
00042792 <AmiBlitz3.ab2@17004>   BSR.w get1bytemain
00042796 <AmiBlitz3.ab2@17005>    BEQ.w syntaxerr
0004279A <AmiBlitz3.ab2@17006>   CMP.w #$22,D0
0004279E <AmiBlitz3.ab2@17007>    BEQ.w JL_0_AF1A
000427A0 <AmiBlitz3.ab2@17008>   LSL.l #8,D3
000427A2 <AmiBlitz3.ab2@17009>   MOVE.b D0,D3
000427A6 <AmiBlitz3.ab2@17010> BRA.w JL_0_AF02
000427AA <AmiBlitz3.ab2@17013>   BSR.w get1bytemain
000427AE <AmiBlitz3.ab2@17014> BRA.w JL_0_B46E
000427B0 <AmiBlitz3.ab2@17017>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
000427B4 <AmiBlitz3.ab2@17018>    BSR.w makename2
000427B8 <AmiBlitz3.ab2@17019>    BSR.w findlabel2
000427BC <AmiBlitz3.ab2@17020>    BEQ.w 'l10
000427C2 <AmiBlitz3.ab2@17021>    LEA ptr_parameterstore,a0
000427C8 <AmiBlitz3.ab2@17022>    CMP.b #"@",-1(a0,d2.w)
000427CC <AmiBlitz3.ab2@17023>    BNE cnferr
000427D0 <AmiBlitz3.ab2@17024>    CLR.b -1(a0,d2.w)
000427D2 <AmiBlitz3.ab2@17025>    SUBQ.l #1,d2
000427D8 <AmiBlitz3.ab2@17026>    LEA varbase,a2
000427DC <AmiBlitz3.ab2@17027>    BSR findvariable
000427E0 <AmiBlitz3.ab2@17028>    BNE cnferr
000427E4 <AmiBlitz3.ab2@17029>    CMP.b #"\",d0
000427E8 <AmiBlitz3.ab2@17030>    BNE 'l6
000427EE <AmiBlitz3.ab2@17031>    ADDQ #1,lastsourcepos
000427F2 <AmiBlitz3.ab2@17032>    MOVE.l $a(a2),a2
000427F4 <AmiBlitz3.ab2@17033>    ADDQ.l #4,a2
000427F8 <AmiBlitz3.ab2@17034>    BSR.w makename2
000427FC <AmiBlitz3.ab2@17035>    BSR findvariable2
00042800 <AmiBlitz3.ab2@17036>    BNE cnferr
00042804 <AmiBlitz3.ab2@17037> BRA.s 'l6                                                  ;???
00042808 <AmiBlitz3.ab2@17040>    MOVE.w $4(a2),d3
0004280A <AmiBlitz3.ab2@17041>    EXT.l d3
0004280E <AmiBlitz3.ab2@17042> BRA JL_0_AF46
00042812 <AmiBlitz3.ab2@17045>   MOVE.l $8(A2),D3
0004281A <AmiBlitz3.ab2@17046>   CMPI.l #$1,$4(A2)
0004281E <AmiBlitz3.ab2@17047>    BEQ.w JL_0_AF46
00042824 <AmiBlitz3.ab2@17048>   NOT.w asmtype
00042826 <AmiBlitz3.ab2@17051>   MOVE.w (A7)+,D2
0004282A <AmiBlitz3.ab2@17052> BRA.w JL_0_B46E
0004282C <AmiBlitz3.ab2@17056>   MOVE.w D2,-(A7)
00042830 <AmiBlitz3.ab2@17057>    BSR.w getparameter
00042834 <AmiBlitz3.ab2@17058>   CMP.w #"{",D0                                          ;test if var = function{}
00042838 <AmiBlitz3.ab2@17059>    BEQ.w isfunction
0004283C <AmiBlitz3.ab2@17060>    BSR.w JL_0_8E3C
00042840 <AmiBlitz3.ab2@17062>    BSR.w calcvar                                         ;getvaroffset+type
00042844 <AmiBlitz3.ab2@17063>    BSR.w JL_0_B150
0004284A <AmiBlitz3.ab2@17064>    MOVE.l a2,rightsidetype
00042850 <AmiBlitz3.ab2@17075>    TST.b typecheck
00042854 <AmiBlitz3.ab2@17076>    BEQ JL_0_AF66
0004285E <AmiBlitz3.ab2@17077>    CMP.l #$da01,lasttoken                                  ;poke
00042862 <AmiBlitz3.ab2@17078>    BEQ 'l1
0004286C <AmiBlitz3.ab2@17079>    CMP.l #$da02,lasttoken                                  ;peek
00042870 <AmiBlitz3.ab2@17080>    BNE 'l2
00042878 <AmiBlitz3.ab2@17083>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0004287C <AmiBlitz3.ab2@17084>    BNE JL_0_AF66
00042882 <AmiBlitz3.ab2@17085>    MOVE.b d2,peekaddrsize
00042886 <AmiBlitz3.ab2@17086>    BRA JL_0_AF66
0004288C <AmiBlitz3.ab2@17089>   CLR.b peekaddrsize
00042890 <AmiBlitz3.ab2@17092>   CMP.w #$1,D2
00042894 <AmiBlitz3.ab2@17093>    BNE.w JL_0_AF7C
0004289A <AmiBlitz3.ab2@17094>   MOVE.w regnum,D1
0004289E <AmiBlitz3.ab2@17095>   ORI.w #$4880,D1
000428A2 <AmiBlitz3.ab2@17096>    BSR.w writeword
000428A4 <AmiBlitz3.ab2@17099>   MOVE.w (A7)+,D3
000428A8 <AmiBlitz3.ab2@17100>    BEQ.w JL_0_AF9E
000428AE <AmiBlitz3.ab2@17101>    MOVE.l lastinstructionaddr,a0
000428B2 <AmiBlitz3.ab2@17102>   CMP.w #$3,D3
000428B6 <AmiBlitz3.ab2@17103>    BNE.w JL_0_AF92
000428BA <AmiBlitz3.ab2@17104>   CMP.w #$4,D2
000428BE <AmiBlitz3.ab2@17105>    BEQ.w JL_0_AF98
000428C0 <AmiBlitz3.ab2@17108>   CMP.w D2,D3
000428C4 <AmiBlitz3.ab2@17109>    BLS.w JL_0_AF9E
000428C6 <AmiBlitz3.ab2@17112>   EXG.l D2,D3
000428C8 <AmiBlitz3.ab2@17113>   MOVE.l a0,-(a7)
000428CE <AmiBlitz3.ab2@17114>   TST.b typecheck
000428D2 <AmiBlitz3.ab2@17115>   BEQ 'ok
000428D8 <AmiBlitz3.ab2@17116>   TST.b notypecheck
000428DC <AmiBlitz3.ab2@17117>   BNE 'ok
000428E2 <AmiBlitz3.ab2@17118>   MOVE.l leftsidetype,a0
000428EC <AmiBlitz3.ab2@17119>   CMP.l #0,leftsidetype
000428F0 <AmiBlitz3.ab2@17120>   BEQ 'ok
000428F8 <AmiBlitz3.ab2@17121>   CMP.l #$100,4(a0)
000428FC <AmiBlitz3.ab2@17122>   BLE 'ok
00042900 <AmiBlitz3.ab2@17123>   CMP.b #3,d3
00042904 <AmiBlitz3.ab2@17124>   BEQ 'ok
00042908 <AmiBlitz3.ab2@17125>   CMP.b #7,d3
0004290C <AmiBlitz3.ab2@17126>   BEQ 'ok
00042912 <AmiBlitz3.ab2@17127>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
00042914 <AmiBlitz3.ab2@17129>   MOVE.l (a7)+,a0
00042918 <AmiBlitz3.ab2@17130>   BSR.w writeconvertcode         ;called from var assign
0004291C <AmiBlitz3.ab2@17133> BRA.w reget
0004291E <AmiBlitz3.ab2@17136>   MOVEQ.l #$00,D3
00042924 <AmiBlitz3.ab2@17137>   MOVE.w regnum,D1
00042928 <AmiBlitz3.ab2@17138>    BEQ.w JL_0_AFC8
0004292A <AmiBlitz3.ab2@17139>   SUBQ.w #1,D1
0004292C <AmiBlitz3.ab2@17142>      LSR.l #1,D3
00042930 <AmiBlitz3.ab2@17143>      BSET #$F,D3
00042934 <AmiBlitz3.ab2@17144>   DBF D1,JL_0_AFB0b
0004293A <AmiBlitz3.ab2@17146>    TST.b fpu
0004293E <AmiBlitz3.ab2@17147>    BEQ 'l1
00042944 <AmiBlitz3.ab2@17148>    ADDQ.l #2,stacktrack                                    ;intern command
00042946 <AmiBlitz3.ab2@17149>     MOVE.l a0,-(a7)
0004294C <AmiBlitz3.ab2@17150>     MOVE.l stacktrack,d1
00042952 <AmiBlitz3.ab2@17151>     LEA fpustackbase,a0
00042956 <AmiBlitz3.ab2@17152>     CLR.w 0(a0,d1)
0004295C <AmiBlitz3.ab2@17153>     CLR.w regmask
0004295E <AmiBlitz3.ab2@17154>     MOVE.l (a7)+,a0
00042962 <AmiBlitz3.ab2@17157>   MOVE.w #$48E7,D1
00042966 <AmiBlitz3.ab2@17158>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
00042968 <AmiBlitz3.ab2@17159>   MOVE.w D3,D1
0004296C <AmiBlitz3.ab2@17160> BRA.w writeword
0004296E <AmiBlitz3.ab2@17165>   MOVEQ.l #$00,D3
00042974 <AmiBlitz3.ab2@17166>   MOVE.w regnum,D1
00042978 <AmiBlitz3.ab2@17167>    BEQ.w JL_0_AFC8
0004297A <AmiBlitz3.ab2@17168>   SUBQ.w #1,D1
0004297C <AmiBlitz3.ab2@17171>     LSR.l #1,D3
00042980 <AmiBlitz3.ab2@17172>     BSET #$F,D3
00042984 <AmiBlitz3.ab2@17173>   DBF D1,JL_0_AFB0
0004298A <AmiBlitz3.ab2@17175>    TST.b fpu
0004298E <AmiBlitz3.ab2@17176>    BEQ 'l1
00042994 <AmiBlitz3.ab2@17177>    ADDQ.l #2,stacktrack                                    ;intern command
00042996 <AmiBlitz3.ab2@17178>     MOVE.l a0,-(a7)
0004299C <AmiBlitz3.ab2@17179>     MOVE.l stacktrack,d1
000429A2 <AmiBlitz3.ab2@17180>     LEA fpustackbase,a0
000429A6 <AmiBlitz3.ab2@17181>     CLR.w 0(a0,d1)
000429AA <AmiBlitz3.ab2@17182>    CMP.b #5,(a3)                                           ;result float ?
000429AE <AmiBlitz3.ab2@17183>     BNE 'nofpu
000429B8 <AmiBlitz3.ab2@17185>     MOVE.w regnum,regnumfunc
000429BE <AmiBlitz3.ab2@17188>   CLR.w regmask
000429C0 <AmiBlitz3.ab2@17189>     MOVE.l (a7)+,a0
000429C4 <AmiBlitz3.ab2@17192>   MOVE.w #$48E7,D1
000429C8 <AmiBlitz3.ab2@17193>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
000429CA <AmiBlitz3.ab2@17194>   MOVE.w D3,D1
000429CE <AmiBlitz3.ab2@17195> BRA.w writeword
000429D0 <AmiBlitz3.ab2@17198> RTS
000429D2 <AmiBlitz3.ab2@17202>   MOVE.l D1,-(A7)
000429D6 <AmiBlitz3.ab2@17203>   MOVE.w #$4EB9,D1
000429DA <AmiBlitz3.ab2@17204>    BSR.w writeword
000429DE <AmiBlitz3.ab2@17205>    BSR.w addoff
000429E0 <AmiBlitz3.ab2@17206>   MOVE.l (A7)+,D1
000429E4 <AmiBlitz3.ab2@17207> BRA.w writelong
000429E8 <AmiBlitz3.ab2@17211>    BSR.w findproc                                          ;write function call
000429EC <AmiBlitz3.ab2@17212>    BEQ 'l1
000429F2 <AmiBlitz3.ab2@17213>    TST.l unusedfunc
000429F6 <AmiBlitz3.ab2@17214>    BEQ noprocerr
000429FC <AmiBlitz3.ab2@17216>    JSR gotoendsource
00042A04 <AmiBlitz3.ab2@17219>   MOVE.l funcstruct_returntype(a2),rightsidetype
00042A0A <AmiBlitz3.ab2@17220>   TST.l typetocast
00042A0E <AmiBlitz3.ab2@17221>   BEQ 'nocast
00042A18 <AmiBlitz3.ab2@17222>   MOVE.l typetocast,rightsidetype
00042A1E <AmiBlitz3.ab2@17223>   CLR.l typetocast
00042A20 <AmiBlitz3.ab2@17224>   MOVE.l a1,-(a7)
00042A26 <AmiBlitz3.ab2@17225>   MOVE.l rightsidetype,a1
00042A2C <AmiBlitz3.ab2@17226>   CMP.l leftsidetype,a1
00042A30 <AmiBlitz3.ab2@17227>   BEQ 'ok
00042A36 <AmiBlitz3.ab2@17228>   JMP errorconvertreturntype2
00042A38 <AmiBlitz3.ab2@17229> 'ok  MOVE.l (a7)+,a1
00042A3A <AmiBlitz3.ab2@17231>   MOVEQ.l #$00,D1
00042A3E <AmiBlitz3.ab2@17232>   MOVE.b $5(A2),D1
00042A44 <AmiBlitz3.ab2@17233>   MOVE.b d1,retmode
00042A48 <AmiBlitz3.ab2@17234>    BMI.w illprocerr
00042A4E <AmiBlitz3.ab2@17235>    MOVE.b #1,isfunc(a2)
00042A50 <AmiBlitz3.ab2@17236>   MOVE.w D1,-(A7)
00042A52 <AmiBlitz3.ab2@17237>   MOVEQ.l #$00,D1
00042A56 <AmiBlitz3.ab2@17238>   MOVE.b $4(A2),D1
00042A58 <AmiBlitz3.ab2@17239>   LSR.w #4,D1
00042A5C <AmiBlitz3.ab2@17240>    BEQ.w JL_0_B006
00042A5E <AmiBlitz3.ab2@17241>   LSL.w #2,D1
00042A64 <AmiBlitz3.ab2@17242>   SUB.w D1,a2offset
00042A68 <AmiBlitz3.ab2@17245>   CMPI.w #$7,(A7)
00042A6C <AmiBlitz3.ab2@17246>    BNE.b JL_0_B014
00042A6E <AmiBlitz3.ab2@17247>   MOVE.l A2,-(A7)
00042A72 <AmiBlitz3.ab2@17248>    BSR.w makesbase
00042A74 <AmiBlitz3.ab2@17249>   MOVEA.l (A7)+,A2
00042A7A <AmiBlitz3.ab2@17252>   MOVE.w sbasegot,-(A7)
00042A7E <AmiBlitz3.ab2@17253>    BEQ.b JL_0_B020
00042A82 <AmiBlitz3.ab2@17254>    BSR.w dopusha3
00042A86 <AmiBlitz3.ab2@17257>   BSR.w JL_0_AFA2func
00042A88 <AmiBlitz3.ab2@17258>   MOVE.w D3,-(A7)
00042A8C <AmiBlitz3.ab2@17259>   MOVE.l $E(A2),D1
00042A90 <AmiBlitz3.ab2@17260>   TST.b $20(a2)                                            ;increase if morepar
00042A94 <AmiBlitz3.ab2@17261>   BNE 'no0par
00042A96 <AmiBlitz3.ab2@17262>   MOVE.l a5,a4
00042A9A <AmiBlitz3.ab2@17265>   CMP.b #$20,(a4)+
00042A9E <AmiBlitz3.ab2@17266>   BEQ 'l1
00042AA4 <AmiBlitz3.ab2@17267>   CMP.b #"}",-1(a4)
00042AA8 <AmiBlitz3.ab2@17268>   BNE  'no0par
00042AAA <AmiBlitz3.ab2@17269>   MOVEQ #0,d0
00042AAE <AmiBlitz3.ab2@17272>   LEA $16(A2),A1
00042AB0 <AmiBlitz3.ab2@17275>   MOVE.l d1,-(a7)
00042AB2 <AmiBlitz3.ab2@17276>   MOVE.b (a1),d2
00042AB4 <AmiBlitz3.ab2@17277>   MOVE.l d0,d1
00042AB8 <AmiBlitz3.ab2@17278>   CMP.w #4,d2
00042ABC <AmiBlitz3.ab2@17279>   BNE 'l1b
00042AC2 <AmiBlitz3.ab2@17280>   ADD.l #$203c,d1
00042AC6 <AmiBlitz3.ab2@17281>   BSR writeword
00042ACC <AmiBlitz3.ab2@17282>   MOVE.l #$ffff0000,d1
00042AD0 <AmiBlitz3.ab2@17283>   BSR writelong
00042AD4 <AmiBlitz3.ab2@17284> BRA 'l2b
00042ADA <AmiBlitz3.ab2@17287>    TST.b fpu
00042ADE <AmiBlitz3.ab2@17288>    BNE 'l1c
00042AE2 <AmiBlitz3.ab2@17289>    CMP.w #5,d2
00042AE6 <AmiBlitz3.ab2@17290>    BNE 'l1c
00042AEC <AmiBlitz3.ab2@17291>    ADD.l #$203c,d1
00042AF0 <AmiBlitz3.ab2@17292>    BSR writeword
00042AF6 <AmiBlitz3.ab2@17293>    MOVE.l #$800000c1,d1
00042AFA <AmiBlitz3.ab2@17294>    BSR writelong
00042AFE <AmiBlitz3.ab2@17295> BRA 'l2b
00042B04 <AmiBlitz3.ab2@17298>   ADD.l #$70ff,d1
00042B08 <AmiBlitz3.ab2@17299>   BSR writeword
00042B0C <AmiBlitz3.ab2@17300>   CMP.w #7,d2
00042B10 <AmiBlitz3.ab2@17301>   BNE 'l1d
00042B16 <AmiBlitz3.ab2@17302>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
00042B1A <AmiBlitz3.ab2@17303>   BSR writelong
00042B1C <AmiBlitz3.ab2@17304>   MOVEQ #0,d1
00042B20 <AmiBlitz3.ab2@17305>   BSR writeword
00042B26 <AmiBlitz3.ab2@17306>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
00042B2A <AmiBlitz3.ab2@17307>   BSR writelong
00042B2C <AmiBlitz3.ab2@17308>   MOVEQ #0,d1
00042B30 <AmiBlitz3.ab2@17309>   BSR writeword
00042B36 <AmiBlitz3.ab2@17311> 'l1d  MOVE.l #$f23c5000,d1
00042B38 <AmiBlitz3.ab2@17312>   MOVE.l d0,d2
00042B3A <AmiBlitz3.ab2@17313>   ASR.l #2,d2
00042B3C <AmiBlitz3.ab2@17314>   ADD.l d2,d1
00042B40 <AmiBlitz3.ab2@17315>   BSR writelong
00042B44 <AmiBlitz3.ab2@17316>   MOVE.w #$ffff,d1
00042B48 <AmiBlitz3.ab2@17317>   BSR writeword
00042B4A <AmiBlitz3.ab2@17321>   MOVE.l (a7)+,d1
00042B4C <AmiBlitz3.ab2@17322>      ADDQ.l #1,a1
00042B52 <AmiBlitz3.ab2@17323>      ADD.l #$0200,d0
00042B58 <AmiBlitz3.ab2@17324>      CMP.l #$0e00,d0
00042B5C <AmiBlitz3.ab2@17325>      BEQ syntaxerr
00042B5E <AmiBlitz3.ab2@17326>      TST.b (a1)
00042B62 <AmiBlitz3.ab2@17327>      BNE 'again
00042B66 <AmiBlitz3.ab2@17328> BRA 'p1
00042B6A <AmiBlitz3.ab2@17331>   TST.b $4(A2)
00042B6E <AmiBlitz3.ab2@17332>    BNE.w JL_0_B03E
00042B72 <AmiBlitz3.ab2@17335>   BSR.w JL_0_AFCA
00042B76 <AmiBlitz3.ab2@17336>    BSR.w get1bytemain
00042B7A <AmiBlitz3.ab2@17337> BRA.w JL_0_B06C
00042B80 <AmiBlitz3.ab2@17341>   MOVE.w regnum,-(A7)
00042B8A <AmiBlitz3.ab2@17342>   MOVE.w regnum,regnumfunc
00042B8C <AmiBlitz3.ab2@17345>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
00042B94 <AmiBlitz3.ab2@17346>   MOVE.b #1,funccall
00042B96 <AmiBlitz3.ab2@17347>   MOVEQ.l #$00,D0
00042B9A <AmiBlitz3.ab2@17348>   MOVE.b $4(A2),D0
00042BA4 <AmiBlitz3.ab2@17349>   MOVE.w a2offset,a2offset2
00042BAC <AmiBlitz3.ab2@17350>   MOVE.b 5(a2),retmode
00042BB2 <AmiBlitz3.ab2@17351>   MOVE.l a2,currentfunccall
00042BB6 <AmiBlitz3.ab2@17352>   LEA $16(A2),A2
00042BBC <AmiBlitz3.ab2@17353>   CLR.w regnum
00042BC2 <AmiBlitz3.ab2@17354>   CLR.w regmask
00042BC8 <AmiBlitz3.ab2@17355>   MOVE.b isconstantvalue,-(a7)
00042BCE <AmiBlitz3.ab2@17356>   MOVE.b funcparloop,-(a7)
00042BD6 <AmiBlitz3.ab2@17357>   MOVE.b #1,funcparloop
00042BDC <AmiBlitz3.ab2@17358>   MOVE.l rightsidetype,-(a7)
00042BE2 <AmiBlitz3.ab2@17359>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
00042BE8 <AmiBlitz3.ab2@17360>   MOVE.b blitzparloop,-(a7)
00042BEE <AmiBlitz3.ab2@17361>   CLR.b blitzparloop
00042BF4 <AmiBlitz3.ab2@17362>   JSR fetchpees2
00042BFA <AmiBlitz3.ab2@17363>   MOVE.b (a7)+,blitzparloop
00042C00 <AmiBlitz3.ab2@17364>   MOVE.l (a7)+,leftsidetype
00042C06 <AmiBlitz3.ab2@17365>   MOVE.l (a7)+,rightsidetype
00042C0C <AmiBlitz3.ab2@17366>   MOVE.b (a7)+,funcparloop
00042C12 <AmiBlitz3.ab2@17367>   MOVE.b (a7)+,isconstantvalue
00042C18 <AmiBlitz3.ab2@17368>   JSR chkstak
00042C1A <AmiBlitz3.ab2@17369>   MOVE.l (A7)+,D1
00042C1E <AmiBlitz3.ab2@17385>    BTST #0,d1
00042C22 <AmiBlitz3.ab2@17386>    BNE intern1
00042C26 <AmiBlitz3.ab2@17387>    BSR.w JL_0_AFCA
00042C2C <AmiBlitz3.ab2@17409>   MOVE.w (A7)+,regnum
00042C30 <AmiBlitz3.ab2@17412>   CMP.w #"}",D0
00042C34 <AmiBlitz3.ab2@17413>    BNE.w errorbracketmiss2
00042C36 <AmiBlitz3.ab2@17414>    MOVEQ #0,d1                                            ; end of function call pars
00042C3C <AmiBlitz3.ab2@17415>   MOVE.w regnum,D1
00042C40 <AmiBlitz3.ab2@17416>    BEQ.w JL_0_B08A
00042C46 <AmiBlitz3.ab2@17417>    TST.b fpu
00042C4A <AmiBlitz3.ab2@17418>    BEQ 'old
00042C52 <AmiBlitz3.ab2@17419>    CMP.b #5,retmode
00042C56 <AmiBlitz3.ab2@17420>    BNE 'old
00042C58 <AmiBlitz3.ab2@17421>    ASL.l #7,d1
00042C5E <AmiBlitz3.ab2@17422>    OR.l #$f2000000,d1
00042C62 <AmiBlitz3.ab2@17423>    BSR writelong
00042C66 <AmiBlitz3.ab2@17424> BRA JL_0_B08A
00042C68 <AmiBlitz3.ab2@17426>  'old  LSL.w #8,D1
00042C6A <AmiBlitz3.ab2@17427>   LSL.w #1,D1
00042C6E <AmiBlitz3.ab2@17428>   ORI.w #$2000,D1
00042C72 <AmiBlitz3.ab2@17429>    BSR.w writeword
00042C74 <AmiBlitz3.ab2@17432>    MOVE.w (A7)+,D3
00042C78 <AmiBlitz3.ab2@17433>    BEQ.w JL_0_B0A8
00042C7E <AmiBlitz3.ab2@17434>    TST.b fpu
00042C82 <AmiBlitz3.ab2@17435>    BEQ 'old
00042C84 <AmiBlitz3.ab2@17436>    MOVE.l d0,-(a7)
00042C88 <AmiBlitz3.ab2@17437>    MOVE.w #8,d0
00042C8A <AmiBlitz3.ab2@17438>    MOVE.l a0,-(a7)
00042C90 <AmiBlitz3.ab2@17439>    MOVE.l stacktrack,d1
00042C96 <AmiBlitz3.ab2@17440>    LEA fpustackbase,a0
00042C9E <AmiBlitz3.ab2@17441>    MOVE.w 0(a0,d1),regmask
00042CA0 <AmiBlitz3.ab2@17442>    MOVE.l (a7)+,a0
00042CA4 <AmiBlitz3.ab2@17445>   BEQ 'ready
00042CAA <AmiBlitz3.ab2@17446>    BTST d0,regmask
00042CAE <AmiBlitz3.ab2@17447>    BEQ 'noa7
00042CB0 <AmiBlitz3.ab2@17448>    MOVEQ #0,d1
00042CB2 <AmiBlitz3.ab2@17449>    MOVE.w d0,d1
00042CB4 <AmiBlitz3.ab2@17450>    SUBQ.w #1,d1
00042CB6 <AmiBlitz3.ab2@17451>    ASL #7,d1
00042CBC <AmiBlitz3.ab2@17453>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
00042CC0 <AmiBlitz3.ab2@17454>    BSR writelong
00042CC6 <AmiBlitz3.ab2@17455>    SUBQ.l #2,stacktrack
00042CC8 <AmiBlitz3.ab2@17458>    SUBQ.w #1,d0
00042CCC <AmiBlitz3.ab2@17459>    BNE 'loop
00042CD2 <AmiBlitz3.ab2@17462>   SUBQ.l #2,stacktrack                                     ;integer sub
00042CD4 <AmiBlitz3.ab2@17463>   MOVE.l (a7)+,d0
00042CD8 <AmiBlitz3.ab2@17466>   MOVE.w #$4CDF,D1
00042CDC <AmiBlitz3.ab2@17467>    BSR.w writeword
00042CDE <AmiBlitz3.ab2@17468>   MOVEQ.l #$00,D1
00042CE0 <AmiBlitz3.ab2@17469>   MOVEQ.l #$0F,D4
00042CE2 <AmiBlitz3.ab2@17472>     LSL.w #1,D3
00042CE4 <AmiBlitz3.ab2@17473>     ROXR.w #1,D1
00042CE8 <AmiBlitz3.ab2@17474>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
00042CEC <AmiBlitz3.ab2@17476>     BSR.w writeword
00042CF2 <AmiBlitz3.ab2@17477>    CLR.w regnumfunc
00042CF4 <AmiBlitz3.ab2@17480>   MOVE.w (A7)+,D1
00042CF8 <AmiBlitz3.ab2@17481>    BEQ.b JL_0_B0D2
00042CFC <AmiBlitz3.ab2@17482>   CMPI.w #$7,(A7)
00042D00 <AmiBlitz3.ab2@17483>    BEQ.b JL_0_B0C4
00042D06 <AmiBlitz3.ab2@17484>   LEA geta3,A0
00042D0C <AmiBlitz3.ab2@17485>   LEA numtoa0,A1
00042D10 <AmiBlitz3.ab2@17486>    BSR.w pokecode
00042D14 <AmiBlitz3.ab2@17487> BRA.b JL_0_B0CE
00042D1A <AmiBlitz3.ab2@17490>   MOVE.w deca3,D1
00042D1E <AmiBlitz3.ab2@17491>    BSR.w writeword
00042D22 <AmiBlitz3.ab2@17494>   BSR.w dopulla3                                           ;fix up string base
00042D24 <AmiBlitz3.ab2@17497>   MOVE.w (A7)+,D2                                          ;what it returns!
00042D28 <AmiBlitz3.ab2@17498>   CMP.w #$7,D2
00042D2C <AmiBlitz3.ab2@17499>    BNE.w JL_0_B0EC
00042D32 <AmiBlitz3.ab2@17500>   MOVE.w putstlen,D1
00042D38 <AmiBlitz3.ab2@17501>   OR.w regnum,D1
00042D3C <AmiBlitz3.ab2@17502>    BSR.w writeword
00042D40 <AmiBlitz3.ab2@17505>   BSR.w get1bytemain
00042D44 <AmiBlitz3.ab2@17506> BRA.w JL_0_AF66
00042D46 <AmiBlitz3.ab2@17510> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
00042D4E <AmiBlitz3.ab2@17515>   CMP.b #2,optistring
00042D52 <AmiBlitz3.ab2@17516>   BEQ fs2
00042D56 <AmiBlitz3.ab2@17517>   BSR.w makesbase                                          ;writestringvariable
00042D5A <AmiBlitz3.ab2@17518>   BTST #$F,D2
00042D5E <AmiBlitz3.ab2@17519>    BNE.w JL_0_B112
00042D64 <AmiBlitz3.ab2@17520>   MOVE.w D3,leaa5d3a2+2
00042D6A <AmiBlitz3.ab2@17521>   MOVE.l leaa5d3a2,D1
00042D6E <AmiBlitz3.ab2@17522>    BSR.w pokela5s
00042D74 <AmiBlitz3.ab2@17525>   MOVE.w regnum,D1
00042D76 <AmiBlitz3.ab2@17526>   LSL.w #8,D1
00042D78 <AmiBlitz3.ab2@17527>   LSL.w #1,D1
00042D7C <AmiBlitz3.ab2@17528>   ORI.w #$7000,D1
00042D82 <AmiBlitz3.ab2@17529>   LEA stvarget2,A0
00042D84 <AmiBlitz3.ab2@17530>   MOVE.w D1,(A0)
00042D8A <AmiBlitz3.ab2@17531>   MOVE.w regnum,D1
00042D90 <AmiBlitz3.ab2@17532>   ANDI.w #$FFF8,$2(A0)
00042D94 <AmiBlitz3.ab2@17533>   OR.w D1,$2(A0)
00042D9A <AmiBlitz3.ab2@17534>   LEA stvarget2f,A1
00042D9E <AmiBlitz3.ab2@17535>    BSR.w pokecode
00042DA2 <AmiBlitz3.ab2@17536>   MOVE.w #$C600,D1
00042DA6 <AmiBlitz3.ab2@17537>    BSR.w Atokejsr
00042DA8 <AmiBlitz3.ab2@17538>   MOVEQ.l #$07,D2
00042DAC <AmiBlitz3.ab2@17539> BRA.w reget
00042DB2 <AmiBlitz3.ab2@17542>      TST.w stackpar
00042DB6 <AmiBlitz3.ab2@17543>      BMI 'l10
00042DBC <AmiBlitz3.ab2@17544>      MOVE.l #$3f3c0007,d1
00042DC2 <AmiBlitz3.ab2@17545>      ADDQ.w #2,a2offset
00042DC6 <AmiBlitz3.ab2@17546>      BSR writelong
00042DCA <AmiBlitz3.ab2@17549>   MOVE.w #$4878,d1
00042DD0 <AmiBlitz3.ab2@17550>      CLR.w stackpar
00042DD4 <AmiBlitz3.ab2@17551>      BSR writeword
00042DD8 <AmiBlitz3.ab2@17552>      MOVE.w #$0,d1
00042DDC <AmiBlitz3.ab2@17553>      BSR writeword
00042DE0 <AmiBlitz3.ab2@17554>      MOVE.w #$246d,d1
00042DE4 <AmiBlitz3.ab2@17555>      BSR writeword
00042DE6 <AmiBlitz3.ab2@17556>      MOVE.w d3,d1
00042DEA <AmiBlitz3.ab2@17557>      BSR writeword
00042DF0 <AmiBlitz3.ab2@17558>      MOVE.l #$4a926704,d1
00042DF4 <AmiBlitz3.ab2@17559>      BSR writelong
00042DFA <AmiBlitz3.ab2@17560>      MOVE.l #$2eaafffc,d1
00042DFE <AmiBlitz3.ab2@17561>      BSR writelong
00042E02 <AmiBlitz3.ab2@17562>      MOVE.w #$2f0a,d1
00042E08 <AmiBlitz3.ab2@17563>      ADDQ.w #8,a2offset
00042E0C <AmiBlitz3.ab2@17564>      BSR writeword
00042E10 <AmiBlitz3.ab2@17565> BRA.w reget
00042E14 <AmiBlitz3.ab2@17568>   CMP.b #$7,D2                                             ;load basic var
00042E18 <AmiBlitz3.ab2@17569>    BEQ.w JL_0_B0F6
00042E1E <AmiBlitz3.ab2@17571>    TST.b iee
00042E22 <AmiBlitz3.ab2@17572>    BEQ 'noiee
00042E26 <AmiBlitz3.ab2@17573>    CMP.b #5,d2
00042E2A <AmiBlitz3.ab2@17574>    BNE 'noiee
00042E2C <AmiBlitz3.ab2@17575>    MOVE.l d0,-(a7)                                         ;fpu load var
00042E30 <AmiBlitz3.ab2@17576>    BTST #15,d2
00042E34 <AmiBlitz3.ab2@17577>    BEQ 'var
00042E3A <AmiBlitz3.ab2@17578>    CMP.l #$7fff,d3
00042E3E <AmiBlitz3.ab2@17579>    BGT 'longoffset
00042E44 <AmiBlitz3.ab2@17580>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
00042E46 <AmiBlitz3.ab2@17581>    TST.w d3                                                ;offset =0
00042E4A <AmiBlitz3.ab2@17582>    BNE 'offset
00042E50 <AmiBlitz3.ab2@17585>   MOVE.l #$f2124400,d1
00042E52 <AmiBlitz3.ab2@17586>    MOVEQ #0,d3
00042E56 <AmiBlitz3.ab2@17587> BRA 'glob
00042E5C <AmiBlitz3.ab2@17590>   SUBQ.l #4,destpointer
00042E60 <AmiBlitz3.ab2@17591> BRA 'glob
00042E66 <AmiBlitz3.ab2@17594>   TST.b fast
00042E6A <AmiBlitz3.ab2@17595>    BEQ 'nofastload
00042E70 <AmiBlitz3.ab2@17596>    TST.w regnum
00042E74 <AmiBlitz3.ab2@17597>    BNE 'nofastload
00042E7A <AmiBlitz3.ab2@17598>    CMP.l fp0addr,a4
00042E7E <AmiBlitz3.ab2@17599>    BNE 'nofastload
00042E84 <AmiBlitz3.ab2@17600>    MOVE.l fp0iff,d1
00042E8A <AmiBlitz3.ab2@17601>    CMP.l firstiff,d1
00042E8E <AmiBlitz3.ab2@17602>    BNE 'nofastload
00042E94 <AmiBlitz3.ab2@17603>    MOVE.w varmode,d1
00042E9A <AmiBlitz3.ab2@17604>    CMP.w fp0mode,d1
00042E9E <AmiBlitz3.ab2@17605>    BNE 'nofastload
00042EA4 <AmiBlitz3.ab2@17606>    CMP.w fp0var,d3
00042EA8 <AmiBlitz3.ab2@17607>    BNE 'nofastload
00042EAC <AmiBlitz3.ab2@17608>    BCLR #16,d2
00042EAE <AmiBlitz3.ab2@17609>    MOVE.l (a7)+,d0
00042EB0 <AmiBlitz3.ab2@17610> RTS
00042EB2 <AmiBlitz3.ab2@17613>    MOVEQ #0,d0
00042EB8 <AmiBlitz3.ab2@17614>    MOVE.w regnum,d0
00042EBE <AmiBlitz3.ab2@17615>    CMP.l maxregs,d0
00042EC2 <AmiBlitz3.ab2@17616>    BLE 'ok
00042EC8 <AmiBlitz3.ab2@17617>    LEA cmplxerr,a0
00042ECA <AmiBlitz3.ab2@17618>   MOVE.l a0,-(a7)
00042ED0 <AmiBlitz3.ab2@17619> JMP handle_compileerror
00042ED6 <AmiBlitz3.ab2@17622>    LEA regtable,a4
00042ED8 <AmiBlitz3.ab2@17623>    TST.l (a4)
00042EDC <AmiBlitz3.ab2@17624>    BEQ 'noreg
00042EE0 <AmiBlitz3.ab2@17625>    CMP.w 0+4(a4),d3
00042EE4 <AmiBlitz3.ab2@17626>    BNE 'doreg1
00042EEA <AmiBlitz3.ab2@17627>    MOVE.l #$f2001c00,d1
00042EF0 <AmiBlitz3.ab2@17628>    MOVE.w regnum,d0
00042EF2 <AmiBlitz3.ab2@17629>    ASL.w #7,d0
00042EF4 <AmiBlitz3.ab2@17630>    OR.w d0,d1
00042EF8 <AmiBlitz3.ab2@17631>    BSR writelong
00042EFA <AmiBlitz3.ab2@17632>    MOVE.l (a7)+,d0
00042EFC <AmiBlitz3.ab2@17633> RTS
00042F00 <AmiBlitz3.ab2@17636>   CMP.w 8+4(a4),d3
00042F04 <AmiBlitz3.ab2@17637>    BNE 'doreg2
00042F0A <AmiBlitz3.ab2@17638>    MOVE.l #$f2001800,d1
00042F10 <AmiBlitz3.ab2@17639>    MOVE.w regnum,d0
00042F12 <AmiBlitz3.ab2@17640>    ASL.w #7,d0
00042F14 <AmiBlitz3.ab2@17641>    OR.w d0,d1
00042F18 <AmiBlitz3.ab2@17642>    BSR writelong
00042F1A <AmiBlitz3.ab2@17643>    MOVE.l (a7)+,d0
00042F1C <AmiBlitz3.ab2@17644> RTS
00042F20 <AmiBlitz3.ab2@17647>   CMP.w 16+4(a4),d3
00042F24 <AmiBlitz3.ab2@17648>    BNE 'doreg3
00042F2A <AmiBlitz3.ab2@17649>    MOVE.l #$f2001400,d1
00042F30 <AmiBlitz3.ab2@17650>    MOVE.w regnum,d0
00042F32 <AmiBlitz3.ab2@17651>    ASL.w #7,d0
00042F34 <AmiBlitz3.ab2@17652>    OR.w d0,d1
00042F38 <AmiBlitz3.ab2@17653>    BSR  writelong
00042F3A <AmiBlitz3.ab2@17654>    MOVE.l (a7)+,d0
00042F3C <AmiBlitz3.ab2@17655> RTS
00042F40 <AmiBlitz3.ab2@17658>   CMP.w 24+4(a4),d3
00042F44 <AmiBlitz3.ab2@17659>    BNE 'doreg4
00042F4A <AmiBlitz3.ab2@17660>    MOVE.l #$f2001000,d1
00042F50 <AmiBlitz3.ab2@17661>    MOVE.w regnum,d0
00042F52 <AmiBlitz3.ab2@17662>    ASL.w #7,d0
00042F54 <AmiBlitz3.ab2@17663>    OR.w d0,d1
00042F58 <AmiBlitz3.ab2@17664>    BSR writelong
00042F5A <AmiBlitz3.ab2@17665>    MOVE.l (a7)+,d0
00042F5C <AmiBlitz3.ab2@17666> RTS
00042F60 <AmiBlitz3.ab2@17669>    CMP.w 32+4(a4),d3
00042F64 <AmiBlitz3.ab2@17670>    BNE 'noreg
00042F6A <AmiBlitz3.ab2@17671>    MOVE.l #$f2000c00,d1
00042F70 <AmiBlitz3.ab2@17672>    MOVE.w regnum,d0
00042F72 <AmiBlitz3.ab2@17673>    ASL.w #7,d0
00042F74 <AmiBlitz3.ab2@17674>    OR.w d0,d1
00042F78 <AmiBlitz3.ab2@17675>    BSR writelong
00042F7A <AmiBlitz3.ab2@17676>    MOVE.l (a7)+,d0
00042F7C <AmiBlitz3.ab2@17677> RTS
00042F82 <AmiBlitz3.ab2@17680>    MOVE.l #$f22d4400,d1                                    ;var
00042F88 <AmiBlitz3.ab2@17681>    TST.w varmode
00042F8C <AmiBlitz3.ab2@17682>   BEQ 'glob
00042F90 <AmiBlitz3.ab2@17683>   BCLR #16,d1                                              ;local
00042F92 <AmiBlitz3.ab2@17686>    MOVEQ #0,d0
00042F98 <AmiBlitz3.ab2@17687>    MOVE.w regnum,d0
00042F9C <AmiBlitz3.ab2@17688>    CMP.w #7,d0
00042FA0 <AmiBlitz3.ab2@17689>    BLE 'ok2
00042FA6 <AmiBlitz3.ab2@17690>    LEA cmplxerr,a0
00042FA8 <AmiBlitz3.ab2@17691>   MOVE.l a0,-(a7)
00042FAE <AmiBlitz3.ab2@17692> JMP handle_compileerror
00042FB0 <AmiBlitz3.ab2@17695>      ASL.w #7,d0
00042FB2 <AmiBlitz3.ab2@17696>    OR.l d0,d1
00042FBA <AmiBlitz3.ab2@17697>    CMP.l #doublecheck,8(a2)
00042FBE <AmiBlitz3.ab2@17698>    BNE 'dbl
00042FC4 <AmiBlitz3.ab2@17699>    OR.l #$00001000,d1
00042FC8 <AmiBlitz3.ab2@17702>   BSR writelong
00042FCA <AmiBlitz3.ab2@17703>    MOVE.l (a7)+,d0
00042FCE <AmiBlitz3.ab2@17704>    AND.w #$ff,d2
00042FD0 <AmiBlitz3.ab2@17705>    MOVE.w d3,d1
00042FD4 <AmiBlitz3.ab2@17706>    BEQ 'nooffs
00042FD8 <AmiBlitz3.ab2@17707> BRA writeword
00042FDA <AmiBlitz3.ab2@17712> RTS
00042FE0 <AmiBlitz3.ab2@17715>   MOVE.w regnum,D1
00042FE6 <AmiBlitz3.ab2@17716>   MOVE.w d1,load_var_reg
00042FE8 <AmiBlitz3.ab2@17717>   LSL.w #8,D1
00042FF2 <AmiBlitz3.ab2@17718>   MOVE.l destpointer,load_var_addr
00042FF8 <AmiBlitz3.ab2@17719>   MOVE.w d2,load_var_size
00042FFA <AmiBlitz3.ab2@17720>   LSL.w #1,D1
00042FFE <AmiBlitz3.ab2@17721>   BTST #$E,D2
00043002 <AmiBlitz3.ab2@17722>    BNE.w JL_0_B17A
00043004 <AmiBlitz3.ab2@17723>   TST.b D2
00043008 <AmiBlitz3.ab2@17724>    BNE.w JL_0_B17E
0004300A <AmiBlitz3.ab2@17725>   MOVEQ.l #$03,D2
0004300E <AmiBlitz3.ab2@17726>   ORI.w #$200A,D1
00043012 <AmiBlitz3.ab2@17727> BRA.w writeword
00043016 <AmiBlitz3.ab2@17730>   MOVE.b #$3,D2
0004301A <AmiBlitz3.ab2@17733>   BTST #$F,D2
0004301E <AmiBlitz3.ab2@17734>    BEQ.w JL_0_B19A                                         ;loadarray
00043024 <AmiBlitz3.ab2@17735>    TST.b fast                                              ;lea->move xx(a2)
00043028 <AmiBlitz3.ab2@17736>    BEQ 'la10
0004302E <AmiBlitz3.ab2@17741>    CLR.l load_var_addr
00043032 <AmiBlitz3.ab2@17742> BRA 'la10
0004303A <AmiBlitz3.ab2@17744>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0004303E <AmiBlitz3.ab2@17745>    BNE 'la10
00043044 <AmiBlitz3.ab2@17746>    TST.b optiarray
00043048 <AmiBlitz3.ab2@17747>    BNE 'la10
0004304E <AmiBlitz3.ab2@17748>    MOVE.l destpointer,a4
00043054 <AmiBlitz3.ab2@17749>    SUB.l loada,a4
00043058 <AmiBlitz3.ab2@17750>    CMP.w #4,a4
0004305C <AmiBlitz3.ab2@17751>    BEQ 'la100
00043060 <AmiBlitz3.ab2@17752>    CMP.w #2,a4
00043064 <AmiBlitz3.ab2@17753>    BNE 'la10
0004306A <AmiBlitz3.ab2@17754>    MOVE.l destpointer,a4
0004306E <AmiBlitz3.ab2@17755>    CMP.b #3,d2
00043072 <AmiBlitz3.ab2@17756>    BCS 'la110
00043078 <AmiBlitz3.ab2@17757>    MOVE.w #$202a,-2(a4)
0004307C <AmiBlitz3.ab2@17758>    OR.w d1,-2(a4)
00043082 <AmiBlitz3.ab2@17759>    MOVE.w arrayoffset,d1
00043086 <AmiBlitz3.ab2@17760>    BSR writeword
0004308A <AmiBlitz3.ab2@17761> BRA JL_0_B194
0004308E <AmiBlitz3.ab2@17764>    CMP.b #2,d2
00043092 <AmiBlitz3.ab2@17765>    BNE 'la120
00043098 <AmiBlitz3.ab2@17766>     MOVE.w #$302a,-2(a4)
0004309C <AmiBlitz3.ab2@17767>    OR.w d1,-2(a4)
000430A2 <AmiBlitz3.ab2@17769>    MOVE.w arrayoffset,d1
000430A6 <AmiBlitz3.ab2@17770>    BSR writeword
000430AA <AmiBlitz3.ab2@17771> BRA JL_0_B194
000430AE <AmiBlitz3.ab2@17774>   CMP.b #1,d2
000430B2 <AmiBlitz3.ab2@17775>    BNE.s 'la10
000430B8 <AmiBlitz3.ab2@17776>     MOVE.w #$102a,-2(a4)
000430BC <AmiBlitz3.ab2@17777>    OR.w d1,-2(a4)
000430C2 <AmiBlitz3.ab2@17778>    MOVE.w arrayoffset,d1
000430C6 <AmiBlitz3.ab2@17779>    BSR writeword
000430CA <AmiBlitz3.ab2@17780> BRA JL_0_B194
000430D0 <AmiBlitz3.ab2@17783>   MOVE.l destpointer,a4
000430D6 <AmiBlitz3.ab2@17784>    CMP.w #$45ea,-2(a4)
000430DA <AmiBlitz3.ab2@17785>    BNE 'la10
000430DE <AmiBlitz3.ab2@17786>    CMP.b #3,d2
000430E2 <AmiBlitz3.ab2@17787>    BCS 'la11
000430E8 <AmiBlitz3.ab2@17788>    MOVE.w #$202a,-4(a4)
000430EC <AmiBlitz3.ab2@17789>    OR.w d1,-4(a4)
000430F0 <AmiBlitz3.ab2@17790> BRA JL_0_B194
000430F4 <AmiBlitz3.ab2@17793>    CMP.b #2,d2
000430F8 <AmiBlitz3.ab2@17794>    BNE 'la12
000430FE <AmiBlitz3.ab2@17795>     MOVE.w #$302a,-4(a4)
00043102 <AmiBlitz3.ab2@17796>    OR.w d1,-4(a4)
00043106 <AmiBlitz3.ab2@17797> BRA JL_0_B194
0004310A <AmiBlitz3.ab2@17800>   CMP.b #1,d2
0004310E <AmiBlitz3.ab2@17801>    BNE.s 'la10
00043114 <AmiBlitz3.ab2@17802>     MOVE.w #$102a,-4(a4)
00043118 <AmiBlitz3.ab2@17803>    OR.w d1,-4(a4)
0004311C <AmiBlitz3.ab2@17804> BRA JL_0_B194
00043122 <AmiBlitz3.ab2@17807>    OR.w movea2dn,D1
00043126 <AmiBlitz3.ab2@17808>    BSR.w JL_0_B1B2
0004312A <AmiBlitz3.ab2@17809>    BSR.w writeword
0004312E <AmiBlitz3.ab2@17812>   ANDI.w #$FF,D2
00043130 <AmiBlitz3.ab2@17813> RTS
00043136 <AmiBlitz3.ab2@17817>    MOVE.l destpointer,a4
0004313E <AmiBlitz3.ab2@17818>    MOVE.l #$f22a4400,-4(a4)
00043144 <AmiBlitz3.ab2@17819>    MOVE.w arrayoffset,d1
00043148 <AmiBlitz3.ab2@17820> BRA writeword
0004314E <AmiBlitz3.ab2@17824>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
00043152 <AmiBlitz3.ab2@17825>    BSR.w JL_0_B1B2
00043156 <AmiBlitz3.ab2@17826>    BSR.w pokewda5s
00043158 <AmiBlitz3.ab2@17827>   MOVE.w D3,D1
0004315C <AmiBlitz3.ab2@17828>    BSR.w writeword
00043160 <AmiBlitz3.ab2@17829> BRA.w JL_0_B194
00043164 <AmiBlitz3.ab2@17832>   BTST #$E,D2
00043168 <AmiBlitz3.ab2@17833>    BNE.w JL_0_B1CA
0004316C <AmiBlitz3.ab2@17834>   CMP.b #$1,D2
00043170 <AmiBlitz3.ab2@17835>    BEQ.w JL_0_B1CC
00043174 <AmiBlitz3.ab2@17836>   CMP.b #$2,D2
00043178 <AmiBlitz3.ab2@17837>    BEQ.w JL_0_B1D2
0004317A <AmiBlitz3.ab2@17840> RTS
0004317E <AmiBlitz3.ab2@17843>   EORI.w #$3000,D1
00043180 <AmiBlitz3.ab2@17844> RTS
00043184 <AmiBlitz3.ab2@17847>   ORI.w #$1000,D1
00043186 <AmiBlitz3.ab2@17848> RTS
0004318E <AmiBlitz3.ab2@17852>   MOVE.w #$FFFF,dfetch
00043192 <AmiBlitz3.ab2@17853>   BSR.w get1bytemain
00043196 <AmiBlitz3.ab2@17854>   CMP.w #$2D,D0
0004319A <AmiBlitz3.ab2@17855>    BNE.w JL_0_B206
0004319E <AmiBlitz3.ab2@17856>   BSR.w get1bytemain
000431A2 <AmiBlitz3.ab2@17857>   BSR.w JL_0_B206
000431A6 <AmiBlitz3.ab2@17858>   CMP.w #$5,D2
000431AA <AmiBlitz3.ab2@17859>    BCC.w JL_0_B200
000431AC <AmiBlitz3.ab2@17860>   NEG.l D0
000431AE <AmiBlitz3.ab2@17861> RTS
000431B4 <AmiBlitz3.ab2@17864>   TST.b fpu
000431B8 <AmiBlitz3.ab2@17865>   BEQ 'noneg
000431BC <AmiBlitz3.ab2@17866>   fneg.x fp0
000431BE <AmiBlitz3.ab2@17867> RTS
000431C2 <AmiBlitz3.ab2@17870>   BCHG #$7,D0
000431C4 <AmiBlitz3.ab2@17871> RTS
000431C8 <AmiBlitz3.ab2@17874>   CMP.w #$24,D0
000431CC <AmiBlitz3.ab2@17875>    BEQ.w get_hexconstant
000431D0 <AmiBlitz3.ab2@17876>   CMP.w #$25,D0
000431D4 <AmiBlitz3.ab2@17877>    BEQ.w JL_0_A8C0
000431D8 <AmiBlitz3.ab2@17878>   CMP.w #$2E,D0
000431DC <AmiBlitz3.ab2@17879>    BNE.w JL_0_B224
000431DE <AmiBlitz3.ab2@17882>   MOVEQ.l #$00,D3
000431E2 <AmiBlitz3.ab2@17883> BRA.w JL_0_B272
000431E4 <AmiBlitz3.ab2@17886>   MOVEQ.l #$00,D3                                          ;number
000431E8 <AmiBlitz3.ab2@17887>    BSR.w atoi
000431EC <AmiBlitz3.ab2@17888>   CMP.w #$2E,D0
000431F0 <AmiBlitz3.ab2@17889>    BEQ.w JL_0_B268
000431F4 <AmiBlitz3.ab2@17890>   ORI.w #$20,D0
000431F8 <AmiBlitz3.ab2@17891>   CMP.w #$65,D0
000431FC <AmiBlitz3.ab2@17892>    BNE.w JL_0_B46E
00043202 <AmiBlitz3.ab2@17893>   CMP.l #$800000,D3
00043206 <AmiBlitz3.ab2@17894>    BCC.w overerr
00043208 <AmiBlitz3.ab2@17895>   MOVEQ.l #-$01,D6
0004320C <AmiBlitz3.ab2@17896>   fmove.l d3,fp0
0004320E <AmiBlitz3.ab2@17897>   MOVE.l D3,D0
00043214 <AmiBlitz3.ab2@17898>   MOVEA.l _mathffpbase,A6
00043218 <AmiBlitz3.ab2@17899>    JSR -$24(A6)
0004321A <AmiBlitz3.ab2@17900>   MOVE.l D0,D3
0004321E <AmiBlitz3.ab2@17901>    BSR.w JL_0_B2E6
00043222 <AmiBlitz3.ab2@17902>    BSR.w reget
00043226 <AmiBlitz3.ab2@17903>    BSR.w JL_0_B480
0004322A <AmiBlitz3.ab2@17904> BRA.w JL_0_B3DC
0004322E <AmiBlitz3.ab2@17907>   CMP.b #4,d2
00043232 <AmiBlitz3.ab2@17908>   BEQ 'l4
00043236 <AmiBlitz3.ab2@17909>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0004323C <AmiBlitz3.ab2@17912>    TST.b fpu
00043240 <AmiBlitz3.ab2@17913>    BNE 'l1
00043246 <AmiBlitz3.ab2@17914>    CMP.l #$800000,D3
0004324A <AmiBlitz3.ab2@17915>    BCC.w overerr
0004324E <AmiBlitz3.ab2@17916> BRA JL_0_B272
00043254 <AmiBlitz3.ab2@17919>   CMP.l #$7fffffff,d3
00043258 <AmiBlitz3.ab2@17920>     BCC.w overerr
0004325A <AmiBlitz3.ab2@17923>   MOVEQ.l #-$01,D6
0004325C <AmiBlitz3.ab2@17924>   MOVE.l D3,D0
00043260 <AmiBlitz3.ab2@17925>   fmove.l d3,fp0
00043266 <AmiBlitz3.ab2@17926>   MOVEA.l _mathffpbase,A6
0004326A <AmiBlitz3.ab2@17927>    JSR -$24(A6)                                            ;integer to ffp
0004326C <AmiBlitz3.ab2@17928>   MOVE.l D0,-(A7)
00043270 <AmiBlitz3.ab2@17929>    BSR.w get1bytemain
00043274 <AmiBlitz3.ab2@17930>    BSR.w tstnum
00043278 <AmiBlitz3.ab2@17931>    BNE.w syntaxerr
0004327A <AmiBlitz3.ab2@17932>   MOVEQ.l #$00,D3
0004327E <AmiBlitz3.ab2@17933>    BSR.w atoi
00043280 <AmiBlitz3.ab2@17934>   TST.l D3
00043284 <AmiBlitz3.ab2@17935>    BEQ.w JL_0_B2E0
0004328A <AmiBlitz3.ab2@17936>   TST.b fpu
0004328E <AmiBlitz3.ab2@17937>   BNE 'l1
00043294 <AmiBlitz3.ab2@17938>   CMP.l #$800000,D3
00043298 <AmiBlitz3.ab2@17939>    BCC.w overerr
0004329C <AmiBlitz3.ab2@17940> BRA 'l2
000432A2 <AmiBlitz3.ab2@17943>   CMP.l #$7fffffff,d3
000432A6 <AmiBlitz3.ab2@17944>   BCC overerr
000432AA <AmiBlitz3.ab2@17947>   fmove.l d5,fp1
000432AC <AmiBlitz3.ab2@17948>   MOVE.l D5,D0
000432B0 <AmiBlitz3.ab2@17949>    JSR -$24(A6)
000432B2 <AmiBlitz3.ab2@17950>   MOVE.l D0,D5
000432B6 <AmiBlitz3.ab2@17951>   fmove.l d3,fp2
000432B8 <AmiBlitz3.ab2@17952>   MOVE.l D3,D0
000432BC <AmiBlitz3.ab2@17953>    JSR -$24(A6)
000432C0 <AmiBlitz3.ab2@17954>   fdiv.x fp1,fp2
000432C2 <AmiBlitz3.ab2@17955>   MOVE.l D5,D1
000432C6 <AmiBlitz3.ab2@17956>    JSR -$54(A6)
000432CA <AmiBlitz3.ab2@17957>   fadd.x fp2,fp0
000432CC <AmiBlitz3.ab2@17958>   MOVE.l (A7)+,D1
000432D0 <AmiBlitz3.ab2@17959>    JSR -$42(A6)
000432D2 <AmiBlitz3.ab2@17960>   MOVE.l D0,D3
000432D6 <AmiBlitz3.ab2@17961>    BSR.w reget
000432DA <AmiBlitz3.ab2@17962>   ORI.w #$20,D0
000432DE <AmiBlitz3.ab2@17963>   CMP.w #$65,D0
000432E2 <AmiBlitz3.ab2@17964>    BNE.w JL_0_B2D4
000432E6 <AmiBlitz3.ab2@17965>    BSR.w JL_0_B2E6
000432EA <AmiBlitz3.ab2@17968>    BSR.w reget
000432EE <AmiBlitz3.ab2@17969>    BSR.w JL_0_B480
000432F2 <AmiBlitz3.ab2@17970> BRA.w JL_0_B3DC
000432F4 <AmiBlitz3.ab2@17973>   MOVE.l (A7)+,D3
000432F8 <AmiBlitz3.ab2@17974> BRA.w JL_0_B2D4
000432FC <AmiBlitz3.ab2@17977>   BSR.w get1bytemain
00043300 <AmiBlitz3.ab2@17978>   CMP.w #$2B,D0
00043304 <AmiBlitz3.ab2@17979>    BEQ.w JL_0_B30E
00043308 <AmiBlitz3.ab2@17980>   CMP.w #$2D,D0
0004330C <AmiBlitz3.ab2@17981>    BNE.w JL_0_B312
00043310 <AmiBlitz3.ab2@17982>    BSR.w get1bytemain
00043314 <AmiBlitz3.ab2@17983>    BSR.w getsign
00043316 <AmiBlitz3.ab2@17984>   MOVE.l D3,D0
0004331A <AmiBlitz3.ab2@17985>   fdiv.x fp1,fp0
0004331C <AmiBlitz3.ab2@17986>   MOVE.l D4,D1
00043320 <AmiBlitz3.ab2@17987>    JSR -$54(A6)
00043322 <AmiBlitz3.ab2@17988>   MOVE.l D0,D3
00043324 <AmiBlitz3.ab2@17989> RTS
00043328 <AmiBlitz3.ab2@17992>   BSR.w get1bytemain
0004332C <AmiBlitz3.ab2@17995>   BSR.w getsign
00043330 <AmiBlitz3.ab2@17996>   fmul.x fp1,fp0
00043332 <AmiBlitz3.ab2@17997>   MOVE.l D3,D0
00043334 <AmiBlitz3.ab2@17998>   MOVE.l D4,D1
00043338 <AmiBlitz3.ab2@17999>    JSR -$4E(A6)
0004333A <AmiBlitz3.ab2@18000>   MOVE.l D0,D3
0004333C <AmiBlitz3.ab2@18001> RTS
00043340 <AmiBlitz3.ab2@18004>   BSR.w tstnum
00043344 <AmiBlitz3.ab2@18005>    BNE.w syntaxerr
00043346 <AmiBlitz3.ab2@18006>   MOVE.w D0,D4
0004334A <AmiBlitz3.ab2@18007>   SUBI.w #$30,D4
0004334E <AmiBlitz3.ab2@18008>    BSR.w get1bytemain
00043352 <AmiBlitz3.ab2@18009>    BSR.w tstnum
00043356 <AmiBlitz3.ab2@18010>    BNE.w getsign__skip
0004335A <AmiBlitz3.ab2@18011>   MULU #$A,D4
0004335E <AmiBlitz3.ab2@18012>   SUBI.w #$30,D0
00043360 <AmiBlitz3.ab2@18013>   ADD.w D0,D4
00043364 <AmiBlitz3.ab2@18014>    BSR.w get1bytemain
00043368 <AmiBlitz3.ab2@18017>   CMP.w #$12,D4
0004336C <AmiBlitz3.ab2@18018>    BHI.w overerr
0004336E <AmiBlitz3.ab2@18019>   LSL.w #3,D4
00043374 <AmiBlitz3.ab2@18020>   LEA fputab,a0
00043376 <AmiBlitz3.ab2@18021>   ADD.l d4,a0
0004337C <AmiBlitz3.ab2@18022>   fmove.d 0(a0),fp1
0004337E <AmiBlitz3.ab2@18023>   LSR.w #1,d4
00043382 <AmiBlitz3.ab2@18024>   MOVE.l facts(PC,D4.W),D4
00043384 <AmiBlitz3.ab2@18025> RTS
000433CC <AmiBlitz3.ab2@18029>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
000433D0 <AmiBlitz3.ab2@18034>   Dc.l $80000041
000433D4 <AmiBlitz3.ab2@18035>   Dc.l $A0000044
000433D8 <AmiBlitz3.ab2@18036>   Dc.l $C8000047
000433DC <AmiBlitz3.ab2@18037>   Dc.l $FA00004A
000433E0 <AmiBlitz3.ab2@18038>   Dc.l $9C40004E
000433E4 <AmiBlitz3.ab2@18039>   Dc.l $C3500051
000433E8 <AmiBlitz3.ab2@18040>   Dc.l $F4240054
000433EC <AmiBlitz3.ab2@18041>   Dc.l $98968058
000433F0 <AmiBlitz3.ab2@18042>   Dc.l $BEBC205B
000433F4 <AmiBlitz3.ab2@18043>   Dc.l $EE6B285E
000433F8 <AmiBlitz3.ab2@18044>   Dc.l $9502F962
000433FC <AmiBlitz3.ab2@18045>   Dc.l $BA43B765
00043400 <AmiBlitz3.ab2@18046>   Dc.l $E8D4A568
00043404 <AmiBlitz3.ab2@18047>   Dc.l $9184E76C
00043408 <AmiBlitz3.ab2@18048>   Dc.l $B5E6A96F
0004340C <AmiBlitz3.ab2@18049>   Dc.l $E35F2972
00043410 <AmiBlitz3.ab2@18050>   Dc.l $8E1BCA76
00043414 <AmiBlitz3.ab2@18051>   Dc.l $B1A2BD79
00043418 <AmiBlitz3.ab2@18052>   Dc.l $DE0B6C7C
0004341A <AmiBlitz3.ab2@18056>   MOVEQ.l #$01,D5
0004341C <AmiBlitz3.ab2@18059>   LSL.l #1,D5
0004341E <AmiBlitz3.ab2@18060>   MOVE.l D5,D1
00043420 <AmiBlitz3.ab2@18061>   LSL.l #2,D5
00043422 <AmiBlitz3.ab2@18062>   ADD.l D1,D5                                              ;divisor for frac convert!
00043424 <AmiBlitz3.ab2@18063>   LSL.l #1,D3
00043428 <AmiBlitz3.ab2@18064>    BCS.w overerr
0004342A <AmiBlitz3.ab2@18065>   MOVE.l D3,D1
0004342C <AmiBlitz3.ab2@18066>   LSL.l #1,D3
00043430 <AmiBlitz3.ab2@18067>    BCS.w overerr
00043432 <AmiBlitz3.ab2@18068>   LSL.l #1,D3
00043436 <AmiBlitz3.ab2@18069>    BCS.w overerr
00043438 <AmiBlitz3.ab2@18070>   ADD.l D1,D3
0004343C <AmiBlitz3.ab2@18071>   SUBI.w #$30,D0
0004343E <AmiBlitz3.ab2@18072>   ADD.l D0,D3
0004346A <AmiBlitz3.ab2@18073>    !fget                                                   ;bsr.w get1bytemain
0004346E <AmiBlitz3.ab2@18074>    CMP.b #1,d0
00043472 <AmiBlitz3.ab2@18075>    BNE 'cm1
00043474 <AmiBlitz3.ab2@18076>    SUBQ.l #1,a5
00043478 <AmiBlitz3.ab2@18077>    BSR get1bytemain                                        ;??wy not !fget
0004347C <AmiBlitz3.ab2@18080>   CMP.b #$7e,d0
00043480 <AmiBlitz3.ab2@18081>    BNE 'cm2
00043482 <AmiBlitz3.ab2@18082>    SUBQ.l #1,a5
00043486 <AmiBlitz3.ab2@18083>    BSR get1bytemain
00043488 <AmiBlitz3.ab2@18086>   TST.b d0
0004348C <AmiBlitz3.ab2@18087>    BPL 'l10
0004348E <AmiBlitz3.ab2@18088>    LSL.w #8,d0
00043490 <AmiBlitz3.ab2@18089>    MOVE.b (a5)+,d0
00043496 <AmiBlitz3.ab2@18090>    MOVE.w d0,lastchar
000434A8 <AmiBlitz3.ab2@18093>   !compare2                                                ;bsr.w tstnum ;cmake bug
000434AC <AmiBlitz3.ab2@18094>    BEQ.w atoi__loop
000434AE <AmiBlitz3.ab2@18095> RTS
000434B0 <AmiBlitz3.ab2@18098> dfetch:  Ds.w 1                                            ;fetching data?
000434B4 <AmiBlitz3.ab2@18102>   MOVE.w dfetch(PC),D1
000434B8 <AmiBlitz3.ab2@18103>    BEQ.w JL_0_B3EC
000434BE <AmiBlitz3.ab2@18104>   CLR.w dfetch
000434C0 <AmiBlitz3.ab2@18105> RTS
000434C6 <AmiBlitz3.ab2@18108>   MOVE.b d2,isconstantvalue
000434CC <AmiBlitz3.ab2@18109>   MOVE.l d0,lastconstantvalue
000434D2 <AmiBlitz3.ab2@18110>   MOVE.w d2,imm_size
000434DC <AmiBlitz3.ab2@18111>   MOVE.w regnum,imm_reg
000434E6 <AmiBlitz3.ab2@18112>   MOVE.l destpointer,imm_addr                           ; long
000434EA <AmiBlitz3.ab2@18113>   CMP.w #$3,D2
000434EE <AmiBlitz3.ab2@18114>   BEQ.w JL_0_B434
000434F2 <AmiBlitz3.ab2@18115>   CMP.w #$5,D2                                          ;float
000434F6 <AmiBlitz3.ab2@18116>   BEQ.w JL_0_B434
000434FA <AmiBlitz3.ab2@18117>   CMP.w #$1,D2
000434FE <AmiBlitz3.ab2@18118>   BEQ.w JL_0_B418
00043502 <AmiBlitz3.ab2@18119>   CMP.w #$2,D2
00043506 <AmiBlitz3.ab2@18120>   BEQ.w JL_0_B418
0004350A <AmiBlitz3.ab2@18121>   CMP.w #$4,D2
0004350E <AmiBlitz3.ab2@18122>   BEQ.w JL_0_B434
00043512 <AmiBlitz3.ab2@18124> BRA.w mismatcherr
00043518 <AmiBlitz3.ab2@18127>   MOVE.w regnum,D1
0004351A <AmiBlitz3.ab2@18128>   LSL.w #8,D1
0004351C <AmiBlitz3.ab2@18129>   LSL.w #1,D1
00043520 <AmiBlitz3.ab2@18130>   ORI.w #$303C,D1
00043524 <AmiBlitz3.ab2@18131>    BSR.w writeword
00043526 <AmiBlitz3.ab2@18132>   MOVE.w D0,D1
0004352A <AmiBlitz3.ab2@18133>    BSR.w writeword
0004352E <AmiBlitz3.ab2@18134> BRA.w reget
00043530 <AmiBlitz3.ab2@18137>   MOVEQ #0,d1
00043536 <AmiBlitz3.ab2@18138>   MOVE.w regnum,D1
0004353C <AmiBlitz3.ab2@18139>   TST.b fpu
00043540 <AmiBlitz3.ab2@18140>   BEQ 'f1
00043544 <AmiBlitz3.ab2@18141>   CMP.w #5,d2
00043548 <AmiBlitz3.ab2@18142>   BEQ 'l10
0004354C <AmiBlitz3.ab2@18143> BRA 'f2
00043552 <AmiBlitz3.ab2@18146>   TST.b iee
00043556 <AmiBlitz3.ab2@18147>   BNE 'l10
00043558 <AmiBlitz3.ab2@18150>   LSL.w #8,D1
0004355A <AmiBlitz3.ab2@18151>   LSL.w #1,D1
0004355E <AmiBlitz3.ab2@18152>   ORI.w #$203C,D1
00043562 <AmiBlitz3.ab2@18153>    BSR.w writeword
00043564 <AmiBlitz3.ab2@18154>   MOVE.l D0,D1
00043568 <AmiBlitz3.ab2@18155>    BSR.w writelong
0004356C <AmiBlitz3.ab2@18156> BRA.w reget
0004356E <AmiBlitz3.ab2@18159>   MOVEQ #5,d2
00043570 <AmiBlitz3.ab2@18160>   ASL.l #7,d1
00043572 <AmiBlitz3.ab2@18161>   SUBQ.l #8,a7
00043578 <AmiBlitz3.ab2@18166>       OR.l #$f23c4400,d1                                   ;fmove.s
0004357E <AmiBlitz3.ab2@18167>        fmove.s fp0,0(a7)
00043582 <AmiBlitz3.ab2@18169>   BSR writelong
00043584 <AmiBlitz3.ab2@18170>   MOVE.l (a7)+,d1
00043588 <AmiBlitz3.ab2@18171>   BSR writelong
0004358A <AmiBlitz3.ab2@18172>   MOVE.l (a7)+,d1
0004358E <AmiBlitz3.ab2@18176> BRA.w reget
00043590 <AmiBlitz3.ab2@18182>  MOVE.l D3,D0
00043592 <AmiBlitz3.ab2@18183>   TST.w D6
00043596 <AmiBlitz3.ab2@18184>    BEQ.w JL_0_B46C
0004359C <AmiBlitz3.ab2@18185>   MOVEA.l _mathffpbase,A6
000435A0 <AmiBlitz3.ab2@18186>    JSR -$1E(A6)
000435A4 <AmiBlitz3.ab2@18187>    BVC.w JL_0_B46C
000435A6 <AmiBlitz3.ab2@18188>   ADDQ.w #4,A7
000435AA <AmiBlitz3.ab2@18189> BRA.w JL_0_B5A0
000435AC <AmiBlitz3.ab2@18192> RTS
000435AE <AmiBlitz3.ab2@18196>   MOVEQ.l #$00,D6
000435B2 <AmiBlitz3.ab2@18197>    fmove.l d3,fp0
000435B6 <AmiBlitz3.ab2@18200>   BSR.w JL_0_B480
000435BA <AmiBlitz3.ab2@18201> BRA.w JL_0_B3DC
000435BC <AmiBlitz3.ab2@18204>   MOVE.w D2,-(A7)
000435C0 <AmiBlitz3.ab2@18205>    BSR.w JL_0_BF6A
000435C2 <AmiBlitz3.ab2@18206>   MOVE.w (A7)+,D2
000435C4 <AmiBlitz3.ab2@18209>   TST.w D2
000435C8 <AmiBlitz3.ab2@18210>    BNE.w JL_0_B498
000435CA <AmiBlitz3.ab2@18211>   TST.w D6
000435CE <AmiBlitz3.ab2@18212>    BEQ.w JL_0_B492
000435D0 <AmiBlitz3.ab2@18213>   MOVEQ.l #$04,D2
000435D4 <AmiBlitz3.ab2@18214> BRA.w JL_0_B510
000435D6 <AmiBlitz3.ab2@18217>   MOVEQ.l #$02,D2
000435DA <AmiBlitz3.ab2@18218> BRA.w JL_0_B4C4
000435DE <AmiBlitz3.ab2@18221>   CMP.w #$1,D2
000435E2 <AmiBlitz3.ab2@18222>    BEQ.w JL_0_B4C4
000435E6 <AmiBlitz3.ab2@18223>   CMP.w #$2,D2
000435EA <AmiBlitz3.ab2@18224>    BEQ.w JL_0_B4F8
000435EE <AmiBlitz3.ab2@18225>   CMP.w #$3,D2
000435F2 <AmiBlitz3.ab2@18226>    BEQ.w JL_0_B57A
000435F6 <AmiBlitz3.ab2@18227>   CMP.w #$4,D2
000435FA <AmiBlitz3.ab2@18228>    BEQ.w JL_0_B506
000435FE <AmiBlitz3.ab2@18229>   CMP.w #$5,D2
00043602 <AmiBlitz3.ab2@18230>    BEQ.w JL_0_B586
00043606 <AmiBlitz3.ab2@18231> BRA.w mismatcherr
0004360A <AmiBlitz3.ab2@18234>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
00043610 <AmiBlitz3.ab2@18235>   CMP.l #$7f,D0
00043614 <AmiBlitz3.ab2@18236>    BGT.w JL_0_B4DC
0004361A <AmiBlitz3.ab2@18237>   CMP.l #$FFFFFF80,D0
0004361E <AmiBlitz3.ab2@18238>    BGE.w JL_0_B59E
00043620 <AmiBlitz3.ab2@18241>   MOVEQ.l #$02,D2                                          ;was 2 before
00043626 <AmiBlitz3.ab2@18242>   CMP.l #$7fff,D0
0004362A <AmiBlitz3.ab2@18243>    BGT.w JL_0_B4F2
00043630 <AmiBlitz3.ab2@18244>   CMP.l #$FFFF8000,D0
00043634 <AmiBlitz3.ab2@18245>    BGE.w JL_0_B59E
00043636 <AmiBlitz3.ab2@18248>   MOVEQ.l #$03,D2
0004363A <AmiBlitz3.ab2@18249> BRA.w JL_0_B59E
0004363C <AmiBlitz3.ab2@18275>   TST.w D6
00043640 <AmiBlitz3.ab2@18276>    BNE.w JL_0_B510
00043644 <AmiBlitz3.ab2@18277>    BSR.w JL_0_B450
00043648 <AmiBlitz3.ab2@18278> BRA.w JL_0_B4DC
0004364C <AmiBlitz3.ab2@18281>   BSR.w JL_0_B450
0004364E <AmiBlitz3.ab2@18282>   TST.w D6
00043652 <AmiBlitz3.ab2@18283>   BEQ.w JL_0_B560
00043658 <AmiBlitz3.ab2@18286>   CMP.l #MaxWordSgnd,D0
0004365C <AmiBlitz3.ab2@18287>    BGT.w JL_0_B5A0
00043662 <AmiBlitz3.ab2@18288>   CMP.l #$FFFF8000,D0
00043666 <AmiBlitz3.ab2@18289>    BLT.w JL_0_B5A0
00043668 <AmiBlitz3.ab2@18290>   MOVE.w D0,-(A7)
0004366C <AmiBlitz3.ab2@18291>    JSR -$24(A6)
0004366E <AmiBlitz3.ab2@18292>   MOVE.l D0,D1
00043670 <AmiBlitz3.ab2@18293>   MOVE.l D3,D0
00043674 <AmiBlitz3.ab2@18294>    JSR -$48(A6)
0004367A <AmiBlitz3.ab2@18295>   MOVE.l #$80000051,D1
0004367E <AmiBlitz3.ab2@18296>    JSR -$4E(A6)
00043682 <AmiBlitz3.ab2@18297>    JSR -$1E(A6)
00043686 <AmiBlitz3.ab2@18298>    BEQ.w JL_0_B55A
0004368C <AmiBlitz3.ab2@18299>   CMP.l #$10000,D0
00043690 <AmiBlitz3.ab2@18300>    BCC.w JL_0_B55A
00043692 <AmiBlitz3.ab2@18301>   MOVE.w D0,D1
00043694 <AmiBlitz3.ab2@18302>   MOVE.w (A7)+,D0
00043696 <AmiBlitz3.ab2@18303>   SWAP D0
00043698 <AmiBlitz3.ab2@18304>   MOVE.w D1,D0
0004369C <AmiBlitz3.ab2@18305> BRA.w JL_0_B59E
0004369E <AmiBlitz3.ab2@18308>   ADDQ.w #2,A7
000436A2 <AmiBlitz3.ab2@18309> BRA.w JL_0_B5A0
000436A8 <AmiBlitz3.ab2@18312>   CMP.l #MaxWordSgnd,D0
000436AC <AmiBlitz3.ab2@18313>    BGT.w JL_0_B4F2
000436B2 <AmiBlitz3.ab2@18314>   CMP.l #$FFFF8000,D0
000436B6 <AmiBlitz3.ab2@18315>    BLT.w JL_0_B4F2
000436B8 <AmiBlitz3.ab2@18316>   SWAP D0
000436BC <AmiBlitz3.ab2@18317> BRA.w JL_0_B59E
000436BE <AmiBlitz3.ab2@18320>   TST.w D6
000436C2 <AmiBlitz3.ab2@18321>   BNE.w JL_0_B5A0
000436C4 <AmiBlitz3.ab2@18322>   MOVE.l D3,D0
000436C8 <AmiBlitz3.ab2@18323> BRA.w JL_0_B59E
000436CA <AmiBlitz3.ab2@18326>   TST.w D6
000436CE <AmiBlitz3.ab2@18327>   BNE.w JL_0_B5A0
000436D0 <AmiBlitz3.ab2@18328>   MOVE.l D3,D0
000436D6 <AmiBlitz3.ab2@18329>   MOVEA.l _mathffpbase,A6
000436DA <AmiBlitz3.ab2@18330>   JSR -$24(A6)
000436DC <AmiBlitz3.ab2@18331>   MOVE.l D0,D3
000436E0 <AmiBlitz3.ab2@18332> BRA.w JL_0_B5A0
000436E2 <AmiBlitz3.ab2@18335> RTS
000436E4 <AmiBlitz3.ab2@18338>   MOVEQ.l #$05,D2
000436E6 <AmiBlitz3.ab2@18339>   MOVE.l D3,D0
000436E8 <AmiBlitz3.ab2@18340> RTS
000436EC <AmiBlitz3.ab2@18344>             Ds.l 1                                         ;??Looks like unused data??
000436F0 <AmiBlitz3.ab2@18345> pushpc:     Ds.l 1
000436F4 <AmiBlitz3.ab2@18346> pushoff:    Ds.l 1
000436F8 <AmiBlitz3.ab2@18347> pushdooff:  Ds.l 1
000436FA <AmiBlitz3.ab2@18348> pushclen:   Ds.w 1
000436FE <AmiBlitz3.ab2@18349> pushat:     Ds.l 1
00043708 <AmiBlitz3.ab2@18353>   MOVE.l destpointer,pushpc
00043712 <AmiBlitz3.ab2@18354>   MOVE.l hunkoffsetbase,pushoff
00043714 <AmiBlitz3.ab2@18355> RTS
00043718 <AmiBlitz3.ab2@18359>   MOVEM.l D0-D1/A0-A1,-(A7)
0004371E <AmiBlitz3.ab2@18360>   MOVE.l destpointer,D0
00043722 <AmiBlitz3.ab2@18361>   MOVE.l pushpc(PC),D1
00043728 <AmiBlitz3.ab2@18362>   MOVE.l D1,destpointer
0004372A <AmiBlitz3.ab2@18363>   SUB.l D1,D0
00043730 <AmiBlitz3.ab2@18364>   MOVE.w D0,pushclen
00043734 <AmiBlitz3.ab2@18365>    BEQ.w JL_0_B636
0004373A <AmiBlitz3.ab2@18366>   MOVE.w dontwrite,D1
0004373E <AmiBlitz3.ab2@18367>    BNE.w JL_0_B636
00043746 <AmiBlitz3.ab2@18368>    CMP.w #1000,pushclen
0004374A <AmiBlitz3.ab2@18369>    BGE conmemerr
00043750 <AmiBlitz3.ab2@18370>    MOVE.l pushat,d0
00043754 <AmiBlitz3.ab2@18371>    BNE 'nomem
0004375A <AmiBlitz3.ab2@18372>    MOVE.l #1024,d0
0004375C <AmiBlitz3.ab2@18373>   MOVEQ.l #$01,D1
00043762 <AmiBlitz3.ab2@18374>   MOVEA.l _execbase,A6
00043768 <AmiBlitz3.ab2@18375>   MOVE.l mempool,a0
0004376C <AmiBlitz3.ab2@18376>   JSR _AllocPooled(a6)
00043772 <AmiBlitz3.ab2@18378>   MOVE.l D0,pushat
00043774 <AmiBlitz3.ab2@18381>   MOVEA.l D0,A0
0004377A <AmiBlitz3.ab2@18382>   MOVEA.l pushpc,A1
00043780 <AmiBlitz3.ab2@18383>   MOVE.l A1,destpointer
00043786 <AmiBlitz3.ab2@18384>   MOVE.w pushclen,D0
00043788 <AmiBlitz3.ab2@18385>   LSR.w #1,D0
0004378A <AmiBlitz3.ab2@18386>   SUBQ.w #1,D0
0004378C <AmiBlitz3.ab2@18389>     MOVE.w (A1)+,(A0)+
00043790 <AmiBlitz3.ab2@18390>   DBF D0,JL_0_B626
0004379A <AmiBlitz3.ab2@18392>    MOVE.l hunkoffsetbase,pushdooff
0004379E <AmiBlitz3.ab2@18395>   MOVEM.l (A7)+,D0-D1/A0-A1
000437A0 <AmiBlitz3.ab2@18396> RTS
000437A4 <AmiBlitz3.ab2@18400>   MOVEM.l D0-D1/A0-A1,-(A7)
000437A6 <AmiBlitz3.ab2@18401>   MOVEQ.l #$00,D0
000437AC <AmiBlitz3.ab2@18402>   MOVE.w pushclen,D0
000437B0 <AmiBlitz3.ab2@18403>    BEQ.w JL_0_B6D8
000437B6 <AmiBlitz3.ab2@18404>   MOVE.l destpointer,D1
000437BC <AmiBlitz3.ab2@18405>   ADD.l D0,destpointer
000437C2 <AmiBlitz3.ab2@18406>   TST.w dontwrite
000437C6 <AmiBlitz3.ab2@18407>    BNE.w JL_0_B6D8
000437C8 <AmiBlitz3.ab2@18408>   LSR.w #1,D0
000437CA <AmiBlitz3.ab2@18409>   SUBQ.w #1,D0
000437CC <AmiBlitz3.ab2@18410>   MOVEA.l D1,A1
000437D2 <AmiBlitz3.ab2@18411>   MOVEA.l pushat,A0
000437D8 <AmiBlitz3.ab2@18414>     CMPA.l destbufferend,A1
000437DC <AmiBlitz3.ab2@18415>     BCS.w JL_0_B684
000437E4 <AmiBlitz3.ab2@18417>     MOVE.w #$FFFF,dontwrite
000437E8 <AmiBlitz3.ab2@18418>   BRA.w JL_0_B6D8
000437EA <AmiBlitz3.ab2@18421>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
000437EE <AmiBlitz3.ab2@18422>   DBF D0,JL_0_B66E
000437F4 <AmiBlitz3.ab2@18424>   SUB.l pushpc,D1
000437F8 <AmiBlitz3.ab2@18425>   BEQ.w JL_0_B6C2
000437FE <AmiBlitz3.ab2@18426>   MOVEA.l pushdooff,A0
00043804 <AmiBlitz3.ab2@18429>   CMPA.l pushoff,A0
00043808 <AmiBlitz3.ab2@18430>   BEQ.w JL_0_B6C2
0004380C <AmiBlitz3.ab2@18431>   MOVEA.l $4(A0),A1
00043812 <AmiBlitz3.ab2@18432>   ADDA.l destbufferstart,A1
00043818 <AmiBlitz3.ab2@18433>   CMPA.l destbufferend,A1
0004381C <AmiBlitz3.ab2@18434>   BCC.w JL_0_B6BC
00043820 <AmiBlitz3.ab2@18435>   ADD.l D1,$4(A0)
00043822 <AmiBlitz3.ab2@18438>   MOVEA.l (A0),A0
00043826 <AmiBlitz3.ab2@18439> BRA.w JL_0_B69A
0004382C <AmiBlitz3.ab2@18442>   MOVEA.l pushat,A1
0004382E <AmiBlitz3.ab2@18443>   MOVEQ.l #$00,D0
00043834 <AmiBlitz3.ab2@18444>   MOVE.w pushclen,D0
0004383A <AmiBlitz3.ab2@18445>   MOVEA.l _execbase,A6
00043840 <AmiBlitz3.ab2@18446>   MOVE.l mempool,a0
00043844 <AmiBlitz3.ab2@18450>   MOVEM.l (A7)+,D0-D1/A0-A1
00043846 <AmiBlitz3.ab2@18451> RTS
00043848 <AmiBlitz3.ab2@18454>   MOVE.l D1,-(A7)                                          ;array mul
0004384A <AmiBlitz3.ab2@18455>   MOVEQ.l #$00,D2
0004384C <AmiBlitz3.ab2@18456>   MOVEQ.l #$0F,D3
0004384E <AmiBlitz3.ab2@18459>     LSL.w #1,D1
00043852 <AmiBlitz3.ab2@18460>     BCC.w JL_0_B6EE
00043854 <AmiBlitz3.ab2@18461>     ADDQ.w #1,D2
00043856 <AmiBlitz3.ab2@18462>     MOVE.w D3,D4
0004385A <AmiBlitz3.ab2@18465>   DBF D3,JL_0_B6E4
0004385C <AmiBlitz3.ab2@18467>   SUBQ.w #1,D2
00043860 <AmiBlitz3.ab2@18468>    BNE.w JL_0_B726
00043862 <AmiBlitz3.ab2@18469>   ADDQ.w #4,A7
00043864 <AmiBlitz3.ab2@18470>   MOVE.w D4,D1
00043868 <AmiBlitz3.ab2@18471>    BEQ.w JL_0_B724
0004386C <AmiBlitz3.ab2@18472>   CMP.w #$8,D1
00043870 <AmiBlitz3.ab2@18473>    BCS.w JL_0_B712
00043874 <AmiBlitz3.ab2@18474>   SUBI.w #$8,D1
00043878 <AmiBlitz3.ab2@18475>    BSR.w JL_0_B712
0004387A <AmiBlitz3.ab2@18476>   MOVEQ.l #$00,D1
0004387C <AmiBlitz3.ab2@18479>   LSL.w #8,D1
0004387E <AmiBlitz3.ab2@18480>   LSL.w #1,D1
00043882 <AmiBlitz3.ab2@18481>   ORI.w #$E188,D1
00043888 <AmiBlitz3.ab2@18482>   OR.w regnum,D1
0004388C <AmiBlitz3.ab2@18483> BRA.w writeword
0004388E <AmiBlitz3.ab2@18486> RTS
00043890 <AmiBlitz3.ab2@18489>   MOVEQ #0,d1
00043896 <AmiBlitz3.ab2@18490>   MOVE.w regnum,D1
00043898 <AmiBlitz3.ab2@18491>   LSL.l #8,D1
0004389A <AmiBlitz3.ab2@18493>   LSL.l #4,d1
000438A0 <AmiBlitz3.ab2@18495>   OR.l #$4c3c0000,d1
000438A6 <AmiBlitz3.ab2@18496>   OR.w regnum,d1
000438AA <AmiBlitz3.ab2@18497>   BSR.w writelong
000438AC <AmiBlitz3.ab2@18498>   MOVE.l (A7)+,D1
000438B0 <AmiBlitz3.ab2@18500> BRA writelong
000438B6 <AmiBlitz3.ab2@18503>   MOVE.l destpointer,-(A7)
000438B8 <AmiBlitz3.ab2@18504>   MOVEQ.l #-$01,D7
000438BC <AmiBlitz3.ab2@18507>     BSR.w findhilib
000438C0 <AmiBlitz3.ab2@18508>      BEQ.w JL_0_B8A4
000438C4 <AmiBlitz3.ab2@18509>     TST.w $C(A2)
000438C8 <AmiBlitz3.ab2@18510>      BPL.w JL_0_B746
000438CC <AmiBlitz3.ab2@18512>     MOVE.l $16(A2),D1
000438D0 <AmiBlitz3.ab2@18513>     BEQ.w JL_0_B746
000438D4 <AmiBlitz3.ab2@18515>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
000438D8 <AmiBlitz3.ab2@18516>     CMP.w #-$2,D1
000438DC <AmiBlitz3.ab2@18517>      BNE.w JL_0_B772
000438E0 <AmiBlitz3.ab2@18518>     BSR.w makevsize
000438E4 <AmiBlitz3.ab2@18519> BRA.w JL_0_B7FE
000438E8 <AmiBlitz3.ab2@18522>     CMP.w #-$5C4,D1
000438EC <AmiBlitz3.ab2@18523>      BNE.w JL_0_B790
000438F0 <AmiBlitz3.ab2@18524>     MOVE.w #$7000,D1
000438F8 <AmiBlitz3.ab2@18525>     BTST #$7,autorun
000438FA <AmiBlitz3.ab2@18526>     SNE D1
000438FE <AmiBlitz3.ab2@18527>     BSR.w writeword
00043902 <AmiBlitz3.ab2@18528> BRA.w JL_0_B7FE
00043906 <AmiBlitz3.ab2@18531>     CMP.w #-$12D,D1
0004390A <AmiBlitz3.ab2@18532>      BNE.w JL_0_B7A0
0004390E <AmiBlitz3.ab2@18533>     BSR.w makessize
00043912 <AmiBlitz3.ab2@18534> BRA.w JL_0_B7FE
00043916 <AmiBlitz3.ab2@18537>     CMP.w #-$1F5,D1
0004391A <AmiBlitz3.ab2@18538>      BNE.w JL_0_B7C2
0004391E <AmiBlitz3.ab2@18539>     MOVE.w #$203C,D1
00043922 <AmiBlitz3.ab2@18540>     BSR.w writeword
00043926 <AmiBlitz3.ab2@18541>     BSR.w addoff
0004392C <AmiBlitz3.ab2@18542>     MOVE.l endop,D1
00043930 <AmiBlitz3.ab2@18543>     BSR.w writelong
00043934 <AmiBlitz3.ab2@18544> BRA.w JL_0_B7FE
00043938 <AmiBlitz3.ab2@18547>     CMP.w #-$3E9,D1
0004393C <AmiBlitz3.ab2@18548>      BNE.w JL_0_B7E4
00043940 <AmiBlitz3.ab2@18549>     MOVE.w #$203C,D1
00043944 <AmiBlitz3.ab2@18550>     BSR.w writeword
00043948 <AmiBlitz3.ab2@18551>     BSR.w addoff
0004394E <AmiBlitz3.ab2@18552>     MOVE.l data2at,D1
00043952 <AmiBlitz3.ab2@18553>     BSR.w writelong
00043956 <AmiBlitz3.ab2@18554> BRA.w JL_0_B7FE
0004395A <AmiBlitz3.ab2@18557>     CMP.w #$1,D1
0004395E <AmiBlitz3.ab2@18558>      BNE.w JL_0_B7FE
00043962 <AmiBlitz3.ab2@18559>     MOVE.w #$203C,D1
00043966 <AmiBlitz3.ab2@18560>     BSR.w writeword
0004396C <AmiBlitz3.ab2@18561>     MOVE.l ptr_seg_debugger,D1
00043970 <AmiBlitz3.ab2@18562>     BSR.w writelong
00043974 <AmiBlitz3.ab2@18565>     MOVE.l $16(A2),D1
0004397C <AmiBlitz3.ab2@18566>     MOVE.w #$FFFF,lasta6
00043980 <AmiBlitz3.ab2@18567>     BSR.w Amakelibsub
00043986 <AmiBlitz3.ab2@18568>     CMPI.w #$FFFE,$4(A2)
0004398A <AmiBlitz3.ab2@18569>      BNE.w JL_0_B83A
00043990 <AmiBlitz3.ab2@18570>     MOVE.l intdata1,D1
00043994 <AmiBlitz3.ab2@18571>      BEQ.w JL_0_B83A
0004399A <AmiBlitz3.ab2@18572>     MOVE.w putidata1,D1
0004399E <AmiBlitz3.ab2@18573>     BSR.w writeword
000439A2 <AmiBlitz3.ab2@18574>     BSR.w addoff
000439A8 <AmiBlitz3.ab2@18575>     MOVE.l intdata1,D1
000439AC <AmiBlitz3.ab2@18576>     BSR.w writelong
000439B0 <AmiBlitz3.ab2@18579>     MOVE.w #$2B40,D1
000439B4 <AmiBlitz3.ab2@18580>     TST.w $1A(A2)
000439B8 <AmiBlitz3.ab2@18581>      BEQ.w JL_0_B746
000439BC <AmiBlitz3.ab2@18582>      BPL.w JL_0_B84E
000439C0 <AmiBlitz3.ab2@18583>     MOVE.w #$3B40,D1
000439C4 <AmiBlitz3.ab2@18586>     BSR.w writeword
000439C8 <AmiBlitz3.ab2@18587>     MOVE.w $A(A2),D1
000439CC <AmiBlitz3.ab2@18588>      BSR.w writeword
000439D2 <AmiBlitz3.ab2@18589>     CMPI.w #$FFFA,$4(A2)
000439D6 <AmiBlitz3.ab2@18590>      BNE.w JL_0_B746
000439D8 <AmiBlitz3.ab2@18591>     MOVE.w D7,-(A7)
000439DE <AmiBlitz3.ab2@18592>     MOVE.w numstatic,D4
000439E2 <AmiBlitz3.ab2@18593>      BEQ.w JL_0_B882
000439E8 <AmiBlitz3.ab2@18594>     MOVE.l staticdata,D3
000439EE <AmiBlitz3.ab2@18595>      JSR datastart
000439F2 <AmiBlitz3.ab2@18596>     MOVE.w #$C500,D1
000439F6 <AmiBlitz3.ab2@18597>      BSR.w tokejsr2
000439FC <AmiBlitz3.ab2@18600>     MOVE.w maxsused,D4
00043A00 <AmiBlitz3.ab2@18601>      BEQ.w JL_0_B89E
00043A06 <AmiBlitz3.ab2@18602>     MOVE.l maxsat,D3
00043A0C <AmiBlitz3.ab2@18603>      JSR datastart
00043A10 <AmiBlitz3.ab2@18604>     MOVE.w #$CF00,D1
00043A14 <AmiBlitz3.ab2@18605>      BSR.w tokejsr2
00043A16 <AmiBlitz3.ab2@18608>     MOVE.w (A7)+,D7
00043A1A <AmiBlitz3.ab2@18609> BRA.w JL_0_B746
00043A20 <AmiBlitz3.ab2@18612>   MOVE.l destpointer,D1
00043A22 <AmiBlitz3.ab2@18613>   CMP.l (A7),D1
00043A26 <AmiBlitz3.ab2@18614>    BNE.w JL_0_B8BC
00043A2E <AmiBlitz3.ab2@18615>   MOVE.w #$0008,noinits+2
00043A32 <AmiBlitz3.ab2@18616> BRA.w JL_0_B8E6
00043A38 <AmiBlitz3.ab2@18619>   CLR.w noinits+2
00043A3E <AmiBlitz3.ab2@18620>   MOVE.w dontwrite,D1
00043A42 <AmiBlitz3.ab2@18621>    BNE.w JL_0_B8DE
00043A48 <AmiBlitz3.ab2@18622>   TST.l newinitaddr
00043A4C <AmiBlitz3.ab2@18623>    BEQ 'l10
00043A52 <AmiBlitz3.ab2@18624>   MOVE.l newinitaddr,D2
00043A58 <AmiBlitz3.ab2@18625>   SUB.l destbufferstart,D2
00043A5A <AmiBlitz3.ab2@18626>   ADDQ.l #2,d2
00043A60 <AmiBlitz3.ab2@18627>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
00043A64 <AmiBlitz3.ab2@18629>   MOVE.w #$4EB9,(A0)+
00043A66 <AmiBlitz3.ab2@18630>   MOVE.l (A7),(A0)+
00043A6A <AmiBlitz3.ab2@18632> BRA 'l20
00043A70 <AmiBlitz3.ab2@18635>   MOVEA.l destbufferstart,A0                               ;write initcode
00043A76 <AmiBlitz3.ab2@18636>   TST.b saved0
00043A7A <AmiBlitz3.ab2@18637>   BEQ 'l1
00043A7E <AmiBlitz3.ab2@18638>   MOVE.w #$23c0,(a0)+
00043A80 <AmiBlitz3.ab2@18639>   MOVE.l a0,a1
00043A82 <AmiBlitz3.ab2@18640>   ADDQ.l #6,a1
00043A84 <AmiBlitz3.ab2@18641>   MOVE.l a1,(a0)+
00043A86 <AmiBlitz3.ab2@18642>   MOVEQ.l #$02,D2
00043A8A <AmiBlitz3.ab2@18643>   BSR.w addhunkoffset
00043A8E <AmiBlitz3.ab2@18644>   MOVE.w #$6004,(a0)+
00043A94 <AmiBlitz3.ab2@18645>   MOVE.l #$4e714e71,(a0)+
00043A98 <AmiBlitz3.ab2@18648>   MOVE.w #$4EB9,(A0)+
00043A9A <AmiBlitz3.ab2@18649>   MOVE.l (A7),(A0)+
00043A9C <AmiBlitz3.ab2@18650>   MOVEQ #2,d2
00043AA2 <AmiBlitz3.ab2@18651>   TST.b saved0
00043AA6 <AmiBlitz3.ab2@18652>   BEQ 'l20
00043AA8 <AmiBlitz3.ab2@18653>   MOVEQ.l #14,D2
00043AAC <AmiBlitz3.ab2@18656>   BSR.w addhunkoffset
00043AB0 <AmiBlitz3.ab2@18657>   MOVE.w #$2039,(a0)+
00043AB2 <AmiBlitz3.ab2@18658>   MOVE.l a1,(a0)+
00043AB4 <AmiBlitz3.ab2@18659>   MOVEQ.l #20,d2
00043AB8 <AmiBlitz3.ab2@18662>   BSR.w addhunkoffset
00043ABC <AmiBlitz3.ab2@18665>   MOVE.w #$4E75,D1
00043AC0 <AmiBlitz3.ab2@18666>   BSR.w writeword
00043AC2 <AmiBlitz3.ab2@18669>   ADDQ.w #4,A7
00043AC4 <AmiBlitz3.ab2@18670> RTS
00043AC8 <AmiBlitz3.ab2@18675>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
00043ACE <AmiBlitz3.ab2@18677>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
00043AD4 <AmiBlitz3.ab2@18679>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
00043ADA <AmiBlitz3.ab2@18684>   MOVE.l stringbuffer,D1
00043ADE <AmiBlitz3.ab2@18685> BRA.w makesize
00043AE0 <AmiBlitz3.ab2@18688>   MOVEQ.l #$00,D1
00043AE6 <AmiBlitz3.ab2@18689>   MOVE.w globalvarpointer,D1
00043AEA <AmiBlitz3.ab2@18690>   SUBI.w #$8000,D1
00043AEE <AmiBlitz3.ab2@18691>   BNE.w makesize
00043AF0 <AmiBlitz3.ab2@18692>     MOVEQ.l #$08,D1
00043AF2 <AmiBlitz3.ab2@18695>   MOVE.l D1,-(A7)
00043AF6 <AmiBlitz3.ab2@18696>   MOVE.w #$203C,D1
00043AFA <AmiBlitz3.ab2@18697>   BSR.w writeword
00043AFC <AmiBlitz3.ab2@18698>   MOVE.l (A7)+,D1
00043B00 <AmiBlitz3.ab2@18699> BRA.w writelong
00043B02 <AmiBlitz3.ab2@18707>   MOVEQ.l #$00,D1
00043B08 <AmiBlitz3.ab2@18708>   MOVEA.l libpointer,A1
00043B0C <AmiBlitz3.ab2@18711>     CMPA.w #$0,A1
00043B10 <AmiBlitz3.ab2@18712>     BEQ.w findhilib__done
00043B14 <AmiBlitz3.ab2@18713>       CMP.w $4(A1),D7
00043B18 <AmiBlitz3.ab2@18714>       BLS.w findhilib__next
00043B1C <AmiBlitz3.ab2@18715>         CMP.w $4(A1),D1
00043B20 <AmiBlitz3.ab2@18716>         BCC.w findhilib__next
00043B24 <AmiBlitz3.ab2@18717>           MOVE.w $4(A1),D1
00043B26 <AmiBlitz3.ab2@18718>           MOVEA.l A1,A2
00043B28 <AmiBlitz3.ab2@18721>     MOVEA.l (A1),A1
00043B2C <AmiBlitz3.ab2@18722> BRA.w findhilib__loop
00043B2E <AmiBlitz3.ab2@18725>   MOVE.w D1,D7
00043B30 <AmiBlitz3.ab2@18726> RTS
00043B32 <AmiBlitz3.ab2@18734>   MOVEQ.l #-$01,D1
00043B38 <AmiBlitz3.ab2@18735>   MOVEA.l libpointer,A1
00043B3C <AmiBlitz3.ab2@18738>     CMPA.w #$0,A1
00043B40 <AmiBlitz3.ab2@18739>      BEQ.w findlolib__done
00043B44 <AmiBlitz3.ab2@18740>     CMP.w $4(A1),D7
00043B48 <AmiBlitz3.ab2@18741>      BCC.w findlolib__next
00043B4C <AmiBlitz3.ab2@18742>     CMP.w $4(A1),D1
00043B50 <AmiBlitz3.ab2@18743>      BLS.w findlolib__next
00043B54 <AmiBlitz3.ab2@18744>     MOVE.w $4(A1),D1
00043B56 <AmiBlitz3.ab2@18745>     MOVEA.l A1,A2
00043B58 <AmiBlitz3.ab2@18748>     MOVEA.l (A1),A1
00043B5C <AmiBlitz3.ab2@18749> BRA.w findlolib__loop
00043B5E <AmiBlitz3.ab2@18752>   MOVE.w D1,D7
00043B62 <AmiBlitz3.ab2@18753>   CMP.w #-$1,D1
00043B64 <AmiBlitz3.ab2@18754> RTS
00043B6A <AmiBlitz3.ab2@18758>   ADDQ.w #1,globalvarpointer
00043B72 <AmiBlitz3.ab2@18759>   BCLR #$0,globalvarpointer+1
00043B74 <AmiBlitz3.ab2@18760>   MOVEQ.l #$00,D7
00043B78 <AmiBlitz3.ab2@18763>     BSR.w findlolib
00043B7C <AmiBlitz3.ab2@18764>     BEQ.w JL_0_BA74
00043B80 <AmiBlitz3.ab2@18765>     TST.w $C(A2)
00043B84 <AmiBlitz3.ab2@18766>     BPL.w JL_0_B99A
00043B86 <AmiBlitz3.ab2@18767>     MOVEA.l A2,A1
00043B8A <AmiBlitz3.ab2@18768>     ADDA.l $12(A1),A1
00043B8E <AmiBlitz3.ab2@18769>     TST.w -$2(A1)
00043B92 <AmiBlitz3.ab2@18770>     BEQ.w JL_0_BA34
00043B96 <AmiBlitz3.ab2@18771>     MOVE.l -$A(A1),D1
00043B9A <AmiBlitz3.ab2@18772>     LEA $6(A2,D1.L),A3
00043B9C <AmiBlitz3.ab2@18775>       TST.w (A3)+
00043BA0 <AmiBlitz3.ab2@18776>       BEQ.w JL_0_B9CC
00043BA2 <AmiBlitz3.ab2@18777>         ADDQ.w #2,A3
00043BA6 <AmiBlitz3.ab2@18778> BRA.w JL_0_B9C0
00043BAA <AmiBlitz3.ab2@18781>     TST.l $4(A3)
00043BAE <AmiBlitz3.ab2@18782>     BEQ.w JL_0_BA34
00043BB2 <AmiBlitz3.ab2@18783>       MOVE.w freemax(PC),D1
00043BB6 <AmiBlitz3.ab2@18784>       BSR.w writeword
00043BBA <AmiBlitz3.ab2@18785>       MOVE.w -$4(A1),D1
00043BBE <AmiBlitz3.ab2@18786>       BSR.w writeword
00043BC4 <AmiBlitz3.ab2@18787>       MOVE.l free,D1
00043BC8 <AmiBlitz3.ab2@18788>       MOVE.w -$6(A1),D1
00043BCC <AmiBlitz3.ab2@18789>       BSR.w writelong
00043BD2 <AmiBlitz3.ab2@18790>       MOVE.l destpointer,-(A7)
00043BD4 <AmiBlitz3.ab2@18791>       MOVEQ.l #$01,D1
00043BD8 <AmiBlitz3.ab2@18792>       MOVE.w -$2(A1),D2
00043BDA <AmiBlitz3.ab2@18793>       LSL.w D2,D1
00043BDC <AmiBlitz3.ab2@18794>       MOVE.w D1,-(A7)
00043BE0 <AmiBlitz3.ab2@18795>       MOVE.l -$A(A1),D1
00043BE4 <AmiBlitz3.ab2@18796>       BSR.w Amakelibsub
00043BE8 <AmiBlitz3.ab2@18797>       MOVE.w freemax3(PC),D1
00043BEC <AmiBlitz3.ab2@18798>       BSR.w writeword
00043BEE <AmiBlitz3.ab2@18799>       MOVE.w (A7)+,D1
00043BF2 <AmiBlitz3.ab2@18800>       BSR.w writeword
00043BF6 <AmiBlitz3.ab2@18801>       MOVE.l freemax2(PC),D1
00043BFA <AmiBlitz3.ab2@18802>       BSR.w writelong
00043BFC <AmiBlitz3.ab2@18803>       MOVE.l (A7)+,D1
00043C02 <AmiBlitz3.ab2@18804>       SUB.l destpointer,D1
00043C06 <AmiBlitz3.ab2@18805>       BSR.w writeword
00043C0A <AmiBlitz3.ab2@18806>       MOVE.w freemax4(PC),D1
00043C0E <AmiBlitz3.ab2@18807>       BSR.w writeword
00043C12 <AmiBlitz3.ab2@18810>     MOVE.l $1C(A2),D1
00043C16 <AmiBlitz3.ab2@18811>     BEQ.w JL_0_B99A
00043C1A <AmiBlitz3.ab2@18813>     MOVE.w $4(A2),D1
00043C1E <AmiBlitz3.ab2@18814>     CMP.w #-$2,D1
00043C22 <AmiBlitz3.ab2@18815>     BNE.w JL_0_BA50
00043C26 <AmiBlitz3.ab2@18816>       BSR.w makevsize
00043C2A <AmiBlitz3.ab2@18817> BRA.w JL_0_BA60
00043C2E <AmiBlitz3.ab2@18820>     CMP.w #-$12D,D1
00043C32 <AmiBlitz3.ab2@18821>     BNE.w JL_0_BA60
00043C36 <AmiBlitz3.ab2@18822>       BSR.w makessize
00043C3A <AmiBlitz3.ab2@18823> BRA.w JL_0_BA60
00043C3E <AmiBlitz3.ab2@18826>     MOVE.l $1C(A2),D1
00043C46 <AmiBlitz3.ab2@18827>     MOVE.w #$FFFF,lasta6
00043C4A <AmiBlitz3.ab2@18828>     BSR.w Amakelibsub
00043C4E <AmiBlitz3.ab2@18829> BRA.w JL_0_B99A
00043C50 <AmiBlitz3.ab2@18832> RTS
00043C54 <AmiBlitz3.ab2@18836> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
00043C56 <AmiBlitz3.ab2@18838> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
00043C5A <AmiBlitz3.ab2@18839>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
00043C5C <AmiBlitz3.ab2@18840> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
00043C60 <AmiBlitz3.ab2@18841> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
00043C66 <AmiBlitz3.ab2@18846>   TST.b debugmode
00043C6A <AmiBlitz3.ab2@18847>    BEQ.b chkstak__skip
00043C70 <AmiBlitz3.ab2@18848>   TST.w debugversion
00043C74 <AmiBlitz3.ab2@18849>    BNE.b chkstak__skip
00043C78 <AmiBlitz3.ab2@18850>   MOVE.w #$C308,D1
00043C7C <AmiBlitz3.ab2@18851> BRA.w Atokejsr
00043C7E <AmiBlitz3.ab2@18854> RTS
00043C86 <AmiBlitz3.ab2@18858>   MOVE.w #$FFFF,lasta6
00043C8A <AmiBlitz3.ab2@18863>   MOVEM.l D0-d7/A0-a6,-(A7)
00043C92 <AmiBlitz3.ab2@18864>   MOVE.b #1,nostringopt
00043C98 <AmiBlitz3.ab2@18865>   JSR searchinstr
00043C9A <AmiBlitz3.ab2@18866>   MOVE.l A3,D1
00043C9C <AmiBlitz3.ab2@18867>   SUB.l A2,D1
00043CA0 <AmiBlitz3.ab2@18868>   BSR.w Amakelibsub
00043CA4 <AmiBlitz3.ab2@18869>   MOVEM.l (A7)+,d0-d7/a0-a6
00043CA6 <AmiBlitz3.ab2@18870> RTS
00043CAC <AmiBlitz3.ab2@18877>   MOVE.l libisat,-(A7)                                   ;library write
00043CB2 <AmiBlitz3.ab2@18878>   MOVE.l A2,libisat
00043CB4 <AmiBlitz3.ab2@18880>   MOVEA.l A1,A2
00043CB6 <AmiBlitz3.ab2@18881>   MOVE.w (A2)+,D1
00043CBC <AmiBlitz3.ab2@18882>   MOVE.l a2,lastinstructionaddr
00043CC0 <AmiBlitz3.ab2@18883>   ANDI.w #$FF,D1
00043CC2 <AmiBlitz3.ab2@18884>   ADDA.w D1,A2
00043CC4 <AmiBlitz3.ab2@18885>   EXG.l D0,A2
00043CC6 <AmiBlitz3.ab2@18886>   ADDQ.l #1,D0
00043CCA <AmiBlitz3.ab2@18887>   BCLR #$0,D0
00043CCC <AmiBlitz3.ab2@18888>   EXG.l D0,A2
00043CD0 <AmiBlitz3.ab2@18889> BRA.w JL_0_BB08
00043CD6 <AmiBlitz3.ab2@18893>   MOVE.l libisat,-(A7)
00043CDC <AmiBlitz3.ab2@18894>   MOVE.l A2,libisat
00043CDE <AmiBlitz3.ab2@18895>   MOVEA.l A3,A2
00043CE2 <AmiBlitz3.ab2@18896> BRA.w JL_0_BB08
00043CE4 <AmiBlitz3.ab2@18900>   MOVE.l a1,-(a7)
00043CE6 <AmiBlitz3.ab2@18903>   MOVE.l d0,a0
00043CEA <AmiBlitz3.ab2@18904>   MOVE.l $a(a0),d0
00043CEC <AmiBlitz3.ab2@18905>   MOVE.l d0,a1
00043CF4 <AmiBlitz3.ab2@18906>   CMP.l #8,4(a1)
00043CF8 <AmiBlitz3.ab2@18907>   BLE 'norec
00043CFA <AmiBlitz3.ab2@18908>   MOVE.l a0,-(a7)
00043D00 <AmiBlitz3.ab2@18909>   MOVE.l typebase,-(a7)
00043D02 <AmiBlitz3.ab2@18910>   MOVEQ #0,d0
00043D06 <AmiBlitz3.ab2@18911>   MOVE.w 4(a0),d0
00043D0C <AmiBlitz3.ab2@18912>   ADD.l d0,typebase
00043D10 <AmiBlitz3.ab2@18913>   MOVE.l $4(a1),d0
00043D14 <AmiBlitz3.ab2@18914>   BSR scantype
00043D1A <AmiBlitz3.ab2@18915>   MOVE.l (a7)+,typebase
00043D1C <AmiBlitz3.ab2@18916>   MOVE.l (a7)+,a0
00043D22 <AmiBlitz3.ab2@18919>   CMP.l #newtype_string,d0
00043D26 <AmiBlitz3.ab2@18920>   BNE 'nostring
00043D2C <AmiBlitz3.ab2@18921>   ADDQ #2,a2offset
00043D32 <AmiBlitz3.ab2@18922>   MOVE.l #$3f3c0000,d1
00043D34 <AmiBlitz3.ab2@18923>   MOVEQ #0,d0
00043D38 <AmiBlitz3.ab2@18924>   MOVE.w 4(a0),d0
00043D3E <AmiBlitz3.ab2@18925>   ADD.l typebase,d0
00043D40 <AmiBlitz3.ab2@18926>   MOVE.w d0,d1
00043D44 <AmiBlitz3.ab2@18927>   BSR writelong
00043D4A <AmiBlitz3.ab2@18928>   TST.b debugmode
00043D4E <AmiBlitz3.ab2@18929>   BEQ 'l1a
00043D50 <AmiBlitz3.ab2@18930>   MOVE.l d1,-(a7)
00043D56 <AmiBlitz3.ab2@18931>   MOVE.l #$c308,d1
00043D5C <AmiBlitz3.ab2@18932>   JSR Atokejsr
00043D5E <AmiBlitz3.ab2@18933>   MOVE.l (a7)+,d1
00043D62 <AmiBlitz3.ab2@18936>   TST.w 8(a0)
00043D66 <AmiBlitz3.ab2@18937>   BEQ 'nostring
00043D6A <AmiBlitz3.ab2@18938>   MOVEM.l d2/d3,-(a7)
00043D6C <AmiBlitz3.ab2@18939>   MOVE.l d1,d2
00043D6E <AmiBlitz3.ab2@18940>   MOVEQ #0,d3
00043D72 <AmiBlitz3.ab2@18941>   MOVE.w 8(a0),d3
00043D74 <AmiBlitz3.ab2@18942>   SUBQ.l #1,d3
00043D78 <AmiBlitz3.ab2@18943>   BEQ 'nostring2
00043D7A <AmiBlitz3.ab2@18946>   ADDQ.l #4,d2
00043D7C <AmiBlitz3.ab2@18947>   MOVE.l d2,d1
00043D80 <AmiBlitz3.ab2@18948>   BSR writelong
00043D86 <AmiBlitz3.ab2@18949>   TST.b debugmode
00043D8A <AmiBlitz3.ab2@18950>   BEQ 'l1
00043D90 <AmiBlitz3.ab2@18951>   MOVE.l #$c308,d1
00043D96 <AmiBlitz3.ab2@18952>   JSR Atokejsr
00043D9C <AmiBlitz3.ab2@18955>   ADDQ #2,a2offset
00043D9E <AmiBlitz3.ab2@18956>   SUBQ.l #1,d3
00043DA2 <AmiBlitz3.ab2@18957>   BNE 'loop
00043DA6 <AmiBlitz3.ab2@18960>   MOVEM.l (a7)+,d2/d3
00043DA8 <AmiBlitz3.ab2@18963>   MOVE.l (a0),d0
00043DAC <AmiBlitz3.ab2@18964>   BNE 'more
00043DAE <AmiBlitz3.ab2@18965>   MOVE.l (a7)+,a1
00043DB0 <AmiBlitz3.ab2@18966> RTS
00043DB4 <AmiBlitz3.ab2@18969> libisat:   Ds.l 1
00043DBA <AmiBlitz3.ab2@18975>   MOVE.l libisat,-(A7)                                   
00043DC0 <AmiBlitz3.ab2@18976>   MOVE.l A2,libisat
00043DC4 <AmiBlitz3.ab2@18977>   LEA $6(A2,D1.L),A2
00043DCC <AmiBlitz3.ab2@18981>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
00043DD0 <AmiBlitz3.ab2@18982>   BEQ 'dowritevar
00043DD8 <AmiBlitz3.ab2@18983>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
00043DDC <AmiBlitz3.ab2@18984>   BEQ 'dowritevar
00043DE4 <AmiBlitz3.ab2@18985>   CMP.l #$3e175265,$1c(a2)
00043DE8 <AmiBlitz3.ab2@18986>   BEQ 'dowritevar
00043DF0 <AmiBlitz3.ab2@18987>   CMP.l #$3e165772,$1c(a2)
00043DF4 <AmiBlitz3.ab2@18988>   BNE 'nowritef
00043DF8 <AmiBlitz3.ab2@18991>   MOVEM.l a0-a2/d2,-(a7)
00043DFA <AmiBlitz3.ab2@18992>   MOVEQ #0,d1
00043E04 <AmiBlitz3.ab2@18993>   MOVE.l #0,typebase
00043E08 <AmiBlitz3.ab2@18994>   MOVE.l $a(a3),a0
00043E0C <AmiBlitz3.ab2@18995>   MOVE.l $4(a0),d0
00043E12 <AmiBlitz3.ab2@18996>   CMP.l #8,d0
00043E16 <AmiBlitz3.ab2@18997>   BLE 'notype
00043E1A <AmiBlitz3.ab2@18998>   BSR scantype
00043E20 <AmiBlitz3.ab2@19001>   MOVE.l #$3f3c0000,d1
00043E26 <AmiBlitz3.ab2@19002>   MOVE.w a2offset,d1
00043E2A <AmiBlitz3.ab2@19003>   BSR writelong
00043E30 <AmiBlitz3.ab2@19004>   MOVE.l #$3f3c0000,d1
00043E34 <AmiBlitz3.ab2@19005>   MOVE.l $a(a3),a0
00043E38 <AmiBlitz3.ab2@19006>   MOVE.w 8(a0),d1
00043E3C <AmiBlitz3.ab2@19007>   BSR writelong
00043E42 <AmiBlitz3.ab2@19008>   MOVE.l #$3f3cab12,d1
00043E46 <AmiBlitz3.ab2@19009>   BSR writelong
00043E4C <AmiBlitz3.ab2@19010>   ADDQ.w #6,a2offset
00043E50 <AmiBlitz3.ab2@19011>   MOVEM.l (a7)+,a0-a2/d2
00043E56 <AmiBlitz3.ab2@19014>   TST.b fpu
00043E5A <AmiBlitz3.ab2@19015>   BEQ 'nofpu2
00043E62 <AmiBlitz3.ab2@19016>   CMP.l #$496e7400,$1a(a2)
00043E66 <AmiBlitz3.ab2@19017>   BNE 'noint
00043E68 <AmiBlitz3.ab2@19018>   MOVEQ #0,d1
00043E6E <AmiBlitz3.ab2@19019>   SUBQ.l #8,destpointer                                    ;fpu int
00043E74 <AmiBlitz3.ab2@19020>   CLR.w a2offset
00043E78 <AmiBlitz3.ab2@19021>   CMP.b #2,d2
00043E7C <AmiBlitz3.ab2@19022>   BGT 'noword
00043E80 <AmiBlitz3.ab2@19023>   MOVE.w #$48c0,d1
00043E86 <AmiBlitz3.ab2@19024>   OR.w regnumstore,d1
00043E8A <AmiBlitz3.ab2@19025>   BSR writeword
00043E8E <AmiBlitz3.ab2@19026> BRA 'exit2
00043E92 <AmiBlitz3.ab2@19029>    CMP.b #3,d2
00043E96 <AmiBlitz3.ab2@19030>         BNE 'nolong
00043E9A <AmiBlitz3.ab2@19031> BRA 'exit2
00043E9E <AmiBlitz3.ab2@19034>    CMP.b #4,d2
00043EA2 <AmiBlitz3.ab2@19035>         BNE 'noquick
00043EA6 <AmiBlitz3.ab2@19036>         MOVE.w #$e080,d1
00043EAC <AmiBlitz3.ab2@19037>         OR.w regnumstore,d1
00043EB0 <AmiBlitz3.ab2@19038>         BSR writeword
00043EB4 <AmiBlitz3.ab2@19039>         MOVE.w #$e080,d1
00043EBA <AmiBlitz3.ab2@19040>         OR.w regnumstore,d1
00043EBE <AmiBlitz3.ab2@19041>         BSR writeword
00043EC2 <AmiBlitz3.ab2@19042> BRA 'exit2
00043EC4 <AmiBlitz3.ab2@19045>         MOVEQ #0,d0
00043EC6 <AmiBlitz3.ab2@19046>         MOVEQ #0,d1
00043ECC <AmiBlitz3.ab2@19047>         MOVE.w regnumstore,d0
00043ECE <AmiBlitz3.ab2@19048>         ASL.l #7,d0
00043ED4 <AmiBlitz3.ab2@19049>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
00043ED6 <AmiBlitz3.ab2@19050>         OR.l d0,d1
00043EDC <AmiBlitz3.ab2@19052>         MOVE.l #$3f000000,d1
00043EDE <AmiBlitz3.ab2@19054>         MOVEQ #0,d0
00043EE0 <AmiBlitz3.ab2@19055>         MOVEQ #0,d1
00043EE6 <AmiBlitz3.ab2@19056>         MOVE.w regnumstore,d0
00043EE8 <AmiBlitz3.ab2@19057>         ASL.l #7,d0
00043EEA <AmiBlitz3.ab2@19058>         MOVE.l d0,d1
00043EF0 <AmiBlitz3.ab2@19059>         OR.l #$f2000003,d1                                 ;fintrz fpx
00043EF2 <AmiBlitz3.ab2@19060>         ASL.l #3,d0
00043EF4 <AmiBlitz3.ab2@19061>         OR.l d0,d1
00043EF8 <AmiBlitz3.ab2@19062>         BSR writelong
00043EFA <AmiBlitz3.ab2@19063>         MOVEQ #0,d0
00043F00 <AmiBlitz3.ab2@19064>         MOVE.w regnumstore,d0
00043F02 <AmiBlitz3.ab2@19065>         ASL.l #7,d0
00043F08 <AmiBlitz3.ab2@19066>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
00043F0A <AmiBlitz3.ab2@19067>         OR.l d0,d1
00043F0C <AmiBlitz3.ab2@19068>         ASL.l #1,d0
00043F0E <AmiBlitz3.ab2@19069>         ASL.l #8,d0
00043F10 <AmiBlitz3.ab2@19070>         OR.l d0,d1
00043F14 <AmiBlitz3.ab2@19071> BRA 'exit
00043F1A <AmiBlitz3.ab2@19074>   CMP.w #$3c01,24(a2)
00043F1E <AmiBlitz3.ab2@19075>   BNE 'noval
00043F20 <AmiBlitz3.ab2@19076>   MOVE.l a2,-(a7)
00043F24 <AmiBlitz3.ab2@19077>   BSR.w JL_0_BB14
00043F26 <AmiBlitz3.ab2@19078>   MOVE.l (a7)+,a2
00043F2A <AmiBlitz3.ab2@19079> BRA 'exit2
00043F32 <AmiBlitz3.ab2@19096>   CMP.l #$41627300,$1a(a2)
00043F36 <AmiBlitz3.ab2@19097>   BNE 'noabs
00043F38 <AmiBlitz3.ab2@19098>   MOVEQ #0,d1
00043F3E <AmiBlitz3.ab2@19099>   MOVE.w regnumstore,d1
00043F40 <AmiBlitz3.ab2@19100>   MOVE.w d1,d0
00043F42 <AmiBlitz3.ab2@19101>   ASL.w #7,d1
00043F44 <AmiBlitz3.ab2@19102>   ASL.w #8,d0
00043F46 <AmiBlitz3.ab2@19103>   ASL.w #2,d0
00043F48 <AmiBlitz3.ab2@19104>   OR.w d0,d1
00043F4E <AmiBlitz3.ab2@19105>   SUBQ.l #8,destpointer                                    ;fpu abs
00043F52 <AmiBlitz3.ab2@19106>   MOVEM.l d3/d1,-(a7)
00043F56 <AmiBlitz3.ab2@19107>   MOVE.w #5,d3
00043F58 <AmiBlitz3.ab2@19108>   EXG d2,d3
00043F5E <AmiBlitz3.ab2@19109>   MOVE.w regnum,-(a7)
00043F68 <AmiBlitz3.ab2@19110>   MOVE.w regnumstore,regnum
00043F6C <AmiBlitz3.ab2@19111>   BSR writeconvertcode
00043F72 <AmiBlitz3.ab2@19112>   MOVE.w (a7)+,regnum
00043F74 <AmiBlitz3.ab2@19113>   EXG d2,d3
00043F78 <AmiBlitz3.ab2@19114>   MOVEM.l (a7)+,d3/d1
00043F7E <AmiBlitz3.ab2@19115>   OR.l #$f2000018,d1
00043F84 <AmiBlitz3.ab2@19116>   CLR.w a2offset
00043F88 <AmiBlitz3.ab2@19117> BRA 'exit
00043F8C <AmiBlitz3.ab2@19120>   CMP.b #5,d2
00043F90 <AmiBlitz3.ab2@19121>   BNE 'nofpu2
00043F94 <AmiBlitz3.ab2@19122>   MOVE.b 24(a2),d0
00043F98 <AmiBlitz3.ab2@19123>   CMP.b #$60,d0                                            ;nolib $edxx
00043F9C <AmiBlitz3.ab2@19124>   BNE 'nofpu
00043F9E <AmiBlitz3.ab2@19125>   MOVEQ #0,d1
00043FA4 <AmiBlitz3.ab2@19126>   MOVE.w regnumstore,d1
00043FA6 <AmiBlitz3.ab2@19127>   MOVE.w d1,d0
00043FA8 <AmiBlitz3.ab2@19128>   ASL.w #7,d1
00043FAA <AmiBlitz3.ab2@19129>   ASL.w #8,d0
00043FAC <AmiBlitz3.ab2@19130>   ASL.w #2,d0
00043FAE <AmiBlitz3.ab2@19131>   OR.w d0,d1
00043FB2 <AmiBlitz3.ab2@19132>   MOVE.b 25(a2),d0
00043FB6 <AmiBlitz3.ab2@19133>   CMP.b #5,d0
00043FBA <AmiBlitz3.ab2@19134>   BNE 'nocos
00043FC0 <AmiBlitz3.ab2@19135>   OR.l #$f200001d,d1                                       ;fpu cos
00043FC4 <AmiBlitz3.ab2@19136> BRA 'exit
00043FC8 <AmiBlitz3.ab2@19139>   CMP.b #$c,d0
00043FCC <AmiBlitz3.ab2@19140>   BNE 'nosqr
00043FD2 <AmiBlitz3.ab2@19141>   OR.l #$f2000004,d1                                       ;fpu sqr
00043FD6 <AmiBlitz3.ab2@19142> BRA 'exit
00043FDA <AmiBlitz3.ab2@19145>   CMP.b #$d,d0
00043FDE <AmiBlitz3.ab2@19146>   BNE 'notan
00043FE4 <AmiBlitz3.ab2@19147>   OR.l #$f200000f,d1                                       ;fpu tan
00043FE8 <AmiBlitz3.ab2@19148> BRA 'exit
00043FEC <AmiBlitz3.ab2@19151>   CMP.b #$a,d0
00043FF0 <AmiBlitz3.ab2@19152>   BNE 'nosin
00043FF6 <AmiBlitz3.ab2@19153>   OR.l #$f200000e,d1                                       ;fpu sin
00043FFA <AmiBlitz3.ab2@19154> BRA 'exit
00043FFE <AmiBlitz3.ab2@19157>   CMP.b #$3,d0
00044002 <AmiBlitz3.ab2@19158>   BNE 'noasin
00044008 <AmiBlitz3.ab2@19159>   OR.l #$f200000c,d1                                       ;fpu asin
0004400C <AmiBlitz3.ab2@19160> BRA 'exit
00044010 <AmiBlitz3.ab2@19163>   CMP.b #$2,d0
00044014 <AmiBlitz3.ab2@19164>   BNE 'noacos
0004401A <AmiBlitz3.ab2@19165>   OR.l #$f200001c,d1                                       ;fpu acos
0004401E <AmiBlitz3.ab2@19166> BRA 'exit
00044022 <AmiBlitz3.ab2@19169>   CMP.b #$4,d0
00044026 <AmiBlitz3.ab2@19170>   BNE 'noatan
0004402C <AmiBlitz3.ab2@19171>   OR.l #$f200000a,d1                                       ;fpu atan
00044030 <AmiBlitz3.ab2@19172> BRA 'exit
00044034 <AmiBlitz3.ab2@19175>   CMP.b #$e,d0
00044038 <AmiBlitz3.ab2@19176>   BNE 'nohtan
0004403E <AmiBlitz3.ab2@19177>   OR.l #$f2000009,d1                                       ;fpu htan
00044042 <AmiBlitz3.ab2@19178> BRA 'exit
00044046 <AmiBlitz3.ab2@19181>   CMP.b #$6,d0
0004404A <AmiBlitz3.ab2@19182>   BNE 'nohcos
00044050 <AmiBlitz3.ab2@19183>   OR.l #$f2000019,d1                                       ;fpu hcos
00044054 <AmiBlitz3.ab2@19184> BRA 'exit
00044058 <AmiBlitz3.ab2@19187>   CMP.b #$b,d0
0004405C <AmiBlitz3.ab2@19188>   BNE 'nohsin
00044062 <AmiBlitz3.ab2@19189>   OR.l #$f2000002,d1                                       ;fpu hsin
00044066 <AmiBlitz3.ab2@19190> BRA 'exit
0004406A <AmiBlitz3.ab2@19193>   CMP.b #$9,d0
0004406E <AmiBlitz3.ab2@19194>   BNE 'nolog
00044074 <AmiBlitz3.ab2@19195>   OR.l #$f2000014,d1                                       ;fpu log
00044078 <AmiBlitz3.ab2@19196> BRA 'exit
0004407C <AmiBlitz3.ab2@19199>   CMP.b #$8,d0
00044080 <AmiBlitz3.ab2@19200>   BNE 'nolog10
00044086 <AmiBlitz3.ab2@19201>   OR.l #$f2000015,d1                                       ;fpu log10
0004408A <AmiBlitz3.ab2@19202> BRA 'exit
0004408E <AmiBlitz3.ab2@19205>   CMP.b #$7,d0
00044092 <AmiBlitz3.ab2@19206>   BNE 'noexp
00044098 <AmiBlitz3.ab2@19207>   OR.l #$f2000010,d1                                       ;fpu exp
0004409C <AmiBlitz3.ab2@19208> BRA 'exit
000440A2 <AmiBlitz3.ab2@19211>   LEA fpuerr,a0
000440A4 <AmiBlitz3.ab2@19212>   MOVE.l a0,-(a7)
000440AA <AmiBlitz3.ab2@19213> JMP handle_compileerror
000440AE <AmiBlitz3.ab2@19217>   CMP.b #$3c,d0
000440B2 <AmiBlitz3.ab2@19218>   BNE 'nofpu2
000440B4 <AmiBlitz3.ab2@19219>   MOVEQ #0,d1
000440BA <AmiBlitz3.ab2@19220>       MOVE.w regnumstore,d1
000440BC <AmiBlitz3.ab2@19221>       MOVE.w d1,d0
000440BE <AmiBlitz3.ab2@19222>       ASL.w #7,d1
000440C0 <AmiBlitz3.ab2@19223>       ASL.w #8,d0
000440C2 <AmiBlitz3.ab2@19224>       ASL.w #2,d0
000440C4 <AmiBlitz3.ab2@19225>       OR.w d0,d1
000440CA <AmiBlitz3.ab2@19226>       CMP.b #$03,25(a2)
000440CE <AmiBlitz3.ab2@19227>       BNE 'nosgn
000440D4 <AmiBlitz3.ab2@19230>       SUBQ.l #8,destpointer                                ;fpu sgn
000440DA <AmiBlitz3.ab2@19231>         OR.l #$f200003a,d1
000440DE <AmiBlitz3.ab2@19232>         BSR writelong
000440E4 <AmiBlitz3.ab2@19233>         CLR.w a2offset
000440EA <AmiBlitz3.ab2@19234>          MOVE.l #$F28E0006,d1
000440EE <AmiBlitz3.ab2@19235>          BSR writelong
000440F4 <AmiBlitz3.ab2@19236>   MOVE.l #$7000600a,d1
000440F8 <AmiBlitz3.ab2@19237>   BSR writelong
000440FE <AmiBlitz3.ab2@19238>   MOVE.l #$70014840,d1
00044102 <AmiBlitz3.ab2@19239>   BSR writelong
00044108 <AmiBlitz3.ab2@19240>   MOVE.l #$F292,d1
0004410C <AmiBlitz3.ab2@19241>   BSR writeword
00044112 <AmiBlitz3.ab2@19242>   MOVE.l #$000470FF,d1
00044116 <AmiBlitz3.ab2@19243> BRA 'exit
0004411E <AmiBlitz3.ab2@19246>   CMP.l #"Frac",$1a(a2)
00044122 <AmiBlitz3.ab2@19247>   BNE 'nofrac
00044128 <AmiBlitz3.ab2@19248> JMP notwork
0004412C <AmiBlitz3.ab2@19289> BRA 'exit
00044130 <AmiBlitz3.ab2@19293>   BSR.w JL_0_BB14                                          ;write lib code
00044136 <AmiBlitz3.ab2@19294>   MOVE.l (A7)+,libisat
00044138 <AmiBlitz3.ab2@19295> RTS
0004413C <AmiBlitz3.ab2@19298>   BSR writelong
00044142 <AmiBlitz3.ab2@19301>   MOVE.l (A7)+,libisat
00044144 <AmiBlitz3.ab2@19302> RTS
00044148 <AmiBlitz3.ab2@19306>   BSR.w fetchregs
0004414E <AmiBlitz3.ab2@19307>   TST.b debugmode
00044152 <AmiBlitz3.ab2@19308>    BEQ.w JL_0_BB76
00044154 <AmiBlitz3.ab2@19309>   MOVE.l (A2),D1
00044158 <AmiBlitz3.ab2@19310>   OR.l $8(A2),D1
0004415C <AmiBlitz3.ab2@19311>   BCLR #$0,D1
0004415E <AmiBlitz3.ab2@19312>   TST.l D1
00044162 <AmiBlitz3.ab2@19313>    BEQ.w JL_0_BB76
00044164 <AmiBlitz3.ab2@19314>   MOVE.l (A2)+,D1
00044168 <AmiBlitz3.ab2@19315>   BTST #$0,D1
0004416C <AmiBlitz3.ab2@19316>    BEQ.w JL_0_BB60
00044172 <AmiBlitz3.ab2@19317>   TST.w blitzmode
00044176 <AmiBlitz3.ab2@19318>    BPL.w blitzerr
0004417C <AmiBlitz3.ab2@19319>   TST.b debugmode
00044180 <AmiBlitz3.ab2@19320>    BEQ.w JL_0_BB5C
00044182 <AmiBlitz3.ab2@19321>   MOVE.l D1,-(A7)
00044186 <AmiBlitz3.ab2@19322>   MOVE.w #$C311,D1
0004418A <AmiBlitz3.ab2@19323>    BSR.w makebtst
0004418C <AmiBlitz3.ab2@19324>   MOVE.l (A7)+,D1
00044190 <AmiBlitz3.ab2@19327>   BCLR #$0,D1
00044192 <AmiBlitz3.ab2@19330>   TST.l D1
00044196 <AmiBlitz3.ab2@19331>    BSR.w JL_0_BBC6
00044198 <AmiBlitz3.ab2@19332>   MOVE.l (A2)+,D1
0004419C <AmiBlitz3.ab2@19333>    BSR.w JL_0_BB98
0004419E <AmiBlitz3.ab2@19334>   MOVE.l (A2)+,D1
000441A2 <AmiBlitz3.ab2@19335>    BSR.w JL_0_BBC6
000441A6 <AmiBlitz3.ab2@19336> BRA.w JL_0_BB90
000441AC <AmiBlitz3.ab2@19339>   BTST #$0,$3(A2)
000441B0 <AmiBlitz3.ab2@19340>    BEQ.w JL_0_BB88
000441B4 <AmiBlitz3.ab2@19341>   MOVE.w blitzmode(PC),D1
000441B8 <AmiBlitz3.ab2@19342>    BPL.w blitzerr
000441BC <AmiBlitz3.ab2@19345>   MOVE.l $4(A2),D1
000441C0 <AmiBlitz3.ab2@19346>    BSR.w JL_0_BB98
000441C6 <AmiBlitz3.ab2@19349>   MOVEA.l libisat,A2
000441C8 <AmiBlitz3.ab2@19350> RTS
000441CC <AmiBlitz3.ab2@19353>   BTST #$0,D1
000441D0 <AmiBlitz3.ab2@19354>    BEQ.w JL_0_BBC4
000441D6 <AmiBlitz3.ab2@19355>   TST.w blitzmode
000441DA <AmiBlitz3.ab2@19356>    BMI.w amigaerr
000441E0 <AmiBlitz3.ab2@19357>   TST.b debugmode
000441E4 <AmiBlitz3.ab2@19358>    BEQ.w JL_0_BBC0
000441E6 <AmiBlitz3.ab2@19359>   MOVE.l D1,-(A7)
000441EA <AmiBlitz3.ab2@19360>   MOVE.w #$C312,D1
000441EE <AmiBlitz3.ab2@19361>    BSR.w makebtst
000441F0 <AmiBlitz3.ab2@19362>   MOVE.l (A7)+,D1
000441F4 <AmiBlitz3.ab2@19365>   BCLR #$0,D1
000441F6 <AmiBlitz3.ab2@19368>   TST.l D1
000441FA <AmiBlitz3.ab2@19371>    BEQ.w JL_0_BBD2
000441FC <AmiBlitz3.ab2@19372>   MOVE.l A1,-(A7)
00044200 <AmiBlitz3.ab2@19373>    BSR.w JL_0_BBD4
00044202 <AmiBlitz3.ab2@19374>   MOVEA.l (A7)+,A1
00044204 <AmiBlitz3.ab2@19377> RTS
0004420A <AmiBlitz3.ab2@19380>   MOVEA.l libisat,A0
00044210 <AmiBlitz3.ab2@19381>   TST.w cfetchmode
00044214 <AmiBlitz3.ab2@19382>    BEQ.w JL_0_BBF6
00044216 <AmiBlitz3.ab2@19383>   ADD.l A0,D1
00044218 <AmiBlitz3.ab2@19384>   MOVE.l D1,-(A7)
0004421C <AmiBlitz3.ab2@19385>   MOVE.w #$4EB9,D1
00044220 <AmiBlitz3.ab2@19386>    BSR.w writeword
00044222 <AmiBlitz3.ab2@19387>   MOVE.l (A7)+,D1
00044226 <AmiBlitz3.ab2@19388> BRA.w writelong
0004422A <AmiBlitz3.ab2@19391>   LEA $0(A0,D1.L),A1
00044230 <AmiBlitz3.ab2@19392>   CLR.w inline
00044234 <AmiBlitz3.ab2@19395>   CMPI.b #$A0,(A1)+
00044238 <AmiBlitz3.ab2@19396>    BNE.w JL_0_BC68
0004423A <AmiBlitz3.ab2@19397>   TST.b (A1)+
0004423E <AmiBlitz3.ab2@19398>    BEQ.w JL_0_BC18
00044244 <AmiBlitz3.ab2@19399>   CMPI.b #$1,-$1(A1)
00044248 <AmiBlitz3.ab2@19400>    BEQ.w JL_0_BC24
0004424E <AmiBlitz3.ab2@19403>   MOVE.w (A1)+,inline
00044250 <AmiBlitz3.ab2@19404>   ADDQ.l #4,D1
00044254 <AmiBlitz3.ab2@19405> BRA.w JL_0_BC00
0004425A <AmiBlitz3.ab2@19408>   TST.w blitzmode
0004425E <AmiBlitz3.ab2@19409>    BPL.w JL_0_BC4A
00044264 <AmiBlitz3.ab2@19410>   TST.b debugmode
00044268 <AmiBlitz3.ab2@19411>    BEQ.w JL_0_BC40
0004426C <AmiBlitz3.ab2@19412>   MOVE.w #$C311,D1
00044270 <AmiBlitz3.ab2@19413>    BSR.w makebtst
00044272 <AmiBlitz3.ab2@19416>   MOVE.l (A1)+,D1
00044276 <AmiBlitz3.ab2@19417>   LEA $0(A0,D1.L),A1
0004427A <AmiBlitz3.ab2@19418> BRA.w JL_0_BC00
00044280 <AmiBlitz3.ab2@19421>   TST.b debugmode
00044284 <AmiBlitz3.ab2@19422>    BEQ.w JL_0_BC60
00044286 <AmiBlitz3.ab2@19423>   MOVE.l D1,-(A7)
0004428A <AmiBlitz3.ab2@19424>   MOVE.w #$C312,D1
0004428E <AmiBlitz3.ab2@19425>    BSR.w makebtst
00044290 <AmiBlitz3.ab2@19426>   MOVE.l (A7)+,D1
00044292 <AmiBlitz3.ab2@19429>   ADDQ.w #4,A1
00044294 <AmiBlitz3.ab2@19430>   ADDQ.l #6,D1
00044298 <AmiBlitz3.ab2@19431> BRA.w JL_0_BC00
0004429E <AmiBlitz3.ab2@19434>   TST.w inline
000442A2 <AmiBlitz3.ab2@19435>    BEQ.w JL_0_BC7E
000442A4 <AmiBlitz3.ab2@19436>   SUBQ.w #1,A1
000442A6 <AmiBlitz3.ab2@19437>   MOVEA.l A1,A0
000442AA <AmiBlitz3.ab2@19438>   ADDA.w inline(PC),A1
000442AE <AmiBlitz3.ab2@19439> BRA.w pokecode2
000442B2 <AmiBlitz3.ab2@19442>   MOVEM.l a0/D1,-(A7)
000442B8 <AmiBlitz3.ab2@19443>   TST.w debugversion
000442BC <AmiBlitz3.ab2@19444>   BEQ 'l11
000442C4 <AmiBlitz3.ab2@19445>   BTST #$7,link_debuginfo
000442C8 <AmiBlitz3.ab2@19446>   BEQ.w 'l11
000442CE <AmiBlitz3.ab2@19447>   MOVE.l lastinstruction,d1
000442D2 <AmiBlitz3.ab2@19448>   BEQ 'l11
000442D8 <AmiBlitz3.ab2@19449>   CLR.l lastinstruction
000442DE <AmiBlitz3.ab2@19450>   CMP.l #$e000,d1
000442E2 <AmiBlitz3.ab2@19451>   BGE 'ln99
000442E8 <AmiBlitz3.ab2@19452>   LEA notf,a0
000442EE <AmiBlitz3.ab2@19453>   CMP.l #$c601,d1
000442F2 <AmiBlitz3.ab2@19454>   BNE 'ln1
000442F8 <AmiBlitz3.ab2@19455>   LEA strcpy,a0
000442FC <AmiBlitz3.ab2@19456> BRA 'ln3
00044302 <AmiBlitz3.ab2@19459>   CMP.l #$c700,d1
00044306 <AmiBlitz3.ab2@19460>   BNE 'ln2
0004430C <AmiBlitz3.ab2@19461>   LEA strvar,a0
00044310 <AmiBlitz3.ab2@19462> BRA 'ln3
00044316 <AmiBlitz3.ab2@19465>   CMP.l #$ce00,d1
0004431A <AmiBlitz3.ab2@19466>   BNE 'ln4
00044320 <AmiBlitz3.ab2@19467>   LEA strcmp,a0
00044324 <AmiBlitz3.ab2@19468> BRA 'ln3
0004432A <AmiBlitz3.ab2@19471>   CMP.l #$ca00,d1
0004432E <AmiBlitz3.ab2@19472>   BNE 'ln5
00044334 <AmiBlitz3.ab2@19473>   LEA qmul,a0
00044338 <AmiBlitz3.ab2@19474> BRA 'ln3
0004433E <AmiBlitz3.ab2@19477>   CMP.l #$d000,d1
00044342 <AmiBlitz3.ab2@19478>      BNE 'ln6
00044348 <AmiBlitz3.ab2@19479>      LEA _MaxLen,a0
0004434C <AmiBlitz3.ab2@19480> BRA 'ln3
00044352 <AmiBlitz3.ab2@19483>   CMP.l #$cb00,d1
00044356 <AmiBlitz3.ab2@19484>   BNE 'ln3
0004435C <AmiBlitz3.ab2@19485>   LEA qdiv,a0
00044360 <AmiBlitz3.ab2@19486> BRA 'ln3
00044362 <AmiBlitz3.ab2@19489>   MOVE.l d1,a0
00044366 <AmiBlitz3.ab2@19490>   LEA $8(a0),a0
0004436A <AmiBlitz3.ab2@19493>   CMP.w #$ffff,(a0)+
0004436E <AmiBlitz3.ab2@19494>   BNE 'l1
00044372 <AmiBlitz3.ab2@19495>   LEA 6(a0),a0
00044376 <AmiBlitz3.ab2@19498>   MOVEM.l a1/a2/d7/d2,-(a7)
00044378 <AmiBlitz3.ab2@19499>   MOVEQ #0,d2
0004437E <AmiBlitz3.ab2@19500>   LEA ptr_parameterstore,a1
00044380 <AmiBlitz3.ab2@19503>   ADDQ.l #1,d2
00044382 <AmiBlitz3.ab2@19504>   MOVE.b (a0)+,d0
00044386 <AmiBlitz3.ab2@19505> 
0004438A <AmiBlitz3.ab2@19506>   BNE 'nodollar
0004438E <AmiBlitz3.ab2@19507>   MOVE.b #"S",d0
00044392 <AmiBlitz3.ab2@19509>   CMP.b #"?",d0
00044396 <AmiBlitz3.ab2@19510>   BEQ 'nolabelwrite
00044398 <AmiBlitz3.ab2@19511>   MOVE.b d0,(a1)+
0004439C <AmiBlitz3.ab2@19512>   BNE 'l2
000443A2 <AmiBlitz3.ab2@19513>   MOVE.w #"__",-1(a1)
000443A4 <AmiBlitz3.ab2@19514>   ADDQ.l #2,d2
000443A8 <AmiBlitz3.ab2@19515>   CLR.b 1(a1)
000443AE <AmiBlitz3.ab2@19516>   JSR findlabel2
000443B2 <AmiBlitz3.ab2@19517>   BEQ 'l3
000443B8 <AmiBlitz3.ab2@19518>   JSR addlabelhash
000443BC <AmiBlitz3.ab2@19521>   CLR.l 4(a2)
000443C0 <AmiBlitz3.ab2@19522>   MOVE.l $14(a7),a0
000443C4 <AmiBlitz3.ab2@19523>   MOVE.l $10(a7),d1
000443C8 <AmiBlitz3.ab2@19524>   SUB.l $12(a0),d1
000443CC <AmiBlitz3.ab2@19525>   ADD.l $28(a0),d1
000443D0 <AmiBlitz3.ab2@19526>   MOVE.l d1,8(a2)
000443D4 <AmiBlitz3.ab2@19527> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
000443DA <AmiBlitz3.ab2@19530>   TST.b typecheck
000443DE <AmiBlitz3.ab2@19531>   BEQ 'p1
000443E4 <AmiBlitz3.ab2@19532>   MOVE.l lasttoken,d1
000443EA <AmiBlitz3.ab2@19533>   CMP.l #$da01,d1                                          ;poke
000443EE <AmiBlitz3.ab2@19534>   BEQ 'lp1
000443F4 <AmiBlitz3.ab2@19535>   CMP.l #$da02,d1                                          ;peek
000443F8 <AmiBlitz3.ab2@19536>   BNE 'p1
000443FE <AmiBlitz3.ab2@19539>   TST.b peekaddrsize
00044402 <AmiBlitz3.ab2@19540>   BEQ 'p1
0004440A <AmiBlitz3.ab2@19541>   CMP.b #3,peekaddrsize
0004440E <AmiBlitz3.ab2@19542>   BNE errormsg_onlylong
00044414 <AmiBlitz3.ab2@19543>   CLR.b peekaddrsize
0004441A <AmiBlitz3.ab2@19551>    TST.b fpu
0004441E <AmiBlitz3.ab2@19552>   BNE 'optf
00044424 <AmiBlitz3.ab2@19553>   TST.b fast
00044428 <AmiBlitz3.ab2@19554>   BEQ JL11a2
00044430 <AmiBlitz3.ab2@19561>   CMP.l #"Poke",20(a2)                                     ;poke
00044434 <AmiBlitz3.ab2@19562>   BNE peekopt
00044438 <AmiBlitz3.ab2@19563>   TST.b 24(a2)
0004443C <AmiBlitz3.ab2@19564>   BNE peekopt
00044440 <AmiBlitz3.ab2@19565>   CMP.b #3,d2
00044444 <AmiBlitz3.ab2@19566>   BNE 'lw1
0004444A <AmiBlitz3.ab2@19569>   MOVE.l #$21821990,d1
0004444E <AmiBlitz3.ab2@19570> BRA.s 'lpx
00044452 <AmiBlitz3.ab2@19573>   CMP.b #2,d2
00044456 <AmiBlitz3.ab2@19574>   BNE 'lb1
0004445C <AmiBlitz3.ab2@19575>   MOVE.l #$31821990,d1
00044460 <AmiBlitz3.ab2@19576> BRA.s 'lpx
00044464 <AmiBlitz3.ab2@19579>   CMP.b #1,d2
00044468 <AmiBlitz3.ab2@19580>   BNE 'lp3
0004446E <AmiBlitz3.ab2@19581>   MOVE.l #$11821990,d1
00044472 <AmiBlitz3.ab2@19582> BRA.s 'lpx
00044476 <AmiBlitz3.ab2@19585>   CMP.b #5,d2
0004447A <AmiBlitz3.ab2@19586>     BNE JL11a2
00044480 <AmiBlitz3.ab2@19587>     TST.b fpu
00044484 <AmiBlitz3.ab2@19588>     BEQ 'll1
0004448A <AmiBlitz3.ab2@19589>      MOVE.l destpointer,a4
00044492 <AmiBlitz3.ab2@19590>     CMP.l #$f22d4500,-6(a4)
00044496 <AmiBlitz3.ab2@19591>     BNE 'noglob
0004449C <AmiBlitz3.ab2@19592>     TST.b doublepeek
000444A0 <AmiBlitz3.ab2@19593>     BNE 'noglob
000444A6 <AmiBlitz3.ab2@19594>     MOVE.w -2(a4),-4(a4)
000444AC <AmiBlitz3.ab2@19595>     MOVE.w #$21ad,-6(a4)
000444B2 <AmiBlitz3.ab2@19596>     MOVE.w #$1990,-2(a4)
000444BA <AmiBlitz3.ab2@19597>     MOVE.w #9,peeksize
000444BC <AmiBlitz3.ab2@19598>     ADDQ #8,a7
000444BE <AmiBlitz3.ab2@19599> RTS
000444C6 <AmiBlitz3.ab2@19602>     CMP.l #$f22c4500,-6(a4)
000444CA <AmiBlitz3.ab2@19603>     BNE 'nolocal
000444D0 <AmiBlitz3.ab2@19604>     MOVE.w -2(a4),-4(a4)
000444D6 <AmiBlitz3.ab2@19605>     TST.b doublepeek                                       ;dont move longfix on double floats
000444DA <AmiBlitz3.ab2@19606>     BNE 'nolocal
000444E0 <AmiBlitz3.ab2@19607>     MOVE.w #$21ac,-6(a4)
000444E6 <AmiBlitz3.ab2@19608>     MOVE.w #$1990,-2(a4)
000444EE <AmiBlitz3.ab2@19609>     MOVE.w #9,peeksize
000444F0 <AmiBlitz3.ab2@19610>     ADDQ #8,a7
000444F2 <AmiBlitz3.ab2@19611> RTS
000444F6 <AmiBlitz3.ab2@19614>     MOVE.w #$f230,d1
000444FA <AmiBlitz3.ab2@19615>     BSR writeword
00044500 <AmiBlitz3.ab2@19616>   MOVE.l #$65001990,d1
00044506 <AmiBlitz3.ab2@19617>   TST.b doublepeek
0004450A <AmiBlitz3.ab2@19618>   BEQ 'lpx
00044510 <AmiBlitz3.ab2@19619>   OR.l   #$10000000,d1
00044512 <AmiBlitz3.ab2@19623>   ADDQ #8,a7
0004451A <AmiBlitz3.ab2@19624>   MOVE.w #9,peeksize
0004451E <AmiBlitz3.ab2@19625> BRA writelong
00044526 <AmiBlitz3.ab2@19628>   CMP.l #"Peek",20(a2)
0004452A <AmiBlitz3.ab2@19629>   BNE 'l10
0004452E <AmiBlitz3.ab2@19630>   TST.b 24(a2)
00044532 <AmiBlitz3.ab2@19631>   BNE 'l10
0004453A <AmiBlitz3.ab2@19632>   CMP.w #7,peeksize
0004453E <AmiBlitz3.ab2@19633>   BEQ 'l10
00044546 <AmiBlitz3.ab2@19634>    CMP.w #3,peeksize
0004454A <AmiBlitz3.ab2@19635>    BNE.s 'lw1
00044550 <AmiBlitz3.ab2@19638>   MOVE.l #$20301990,d1
00044554 <AmiBlitz3.ab2@19639> BRA exitjsr
0004455C <AmiBlitz3.ab2@19642>   CMP.w #2,peeksize
00044560 <AmiBlitz3.ab2@19643>    BNE.s 'lb1
00044566 <AmiBlitz3.ab2@19644>    MOVE.l #$30301990,d1
0004456A <AmiBlitz3.ab2@19645> BRA exitjsr
00044572 <AmiBlitz3.ab2@19648>   CMP.w #1,peeksize
00044576 <AmiBlitz3.ab2@19649>    BNE.s 'lf1
0004457C <AmiBlitz3.ab2@19650>    MOVE.l #$10301990,d1
00044580 <AmiBlitz3.ab2@19651> BRA exitjsr
00044588 <AmiBlitz3.ab2@19654>   CMP.w #5,peeksize
0004458C <AmiBlitz3.ab2@19655>    BNE 'l10
00044592 <AmiBlitz3.ab2@19656>    TST.b fpu
00044596 <AmiBlitz3.ab2@19657>    BEQ 'll1
0004459A <AmiBlitz3.ab2@19658>    MOVE.w #$f230,d1
0004459E <AmiBlitz3.ab2@19659>    BSR writeword
000445A0 <AmiBlitz3.ab2@19660>    MOVEQ #0,d1
000445A6 <AmiBlitz3.ab2@19661>    MOVE.w tempregnum,d1
000445A8 <AmiBlitz3.ab2@19662>    ASL.l #7,d1
000445AA <AmiBlitz3.ab2@19663>    ASL.l #8,d1
000445AC <AmiBlitz3.ab2@19664>    ASL.l #8,d1
000445B2 <AmiBlitz3.ab2@19665>    ADD.l #$44001990,d1
000445B8 <AmiBlitz3.ab2@19666>     TST.b doublepeek
000445BC <AmiBlitz3.ab2@19667>     BEQ 'lpx2
000445C2 <AmiBlitz3.ab2@19668>     OR.l   #$10000000,d1
000445C6 <AmiBlitz3.ab2@19670> BRA exitjsr
000445CA <AmiBlitz3.ab2@19674>   MOVE.w #$4EB9,D1
000445CE <AmiBlitz3.ab2@19675>    BSR.w writeword                                         ;writesysjsr
000445D2 <AmiBlitz3.ab2@19676>   MOVEM.l (A7)+,a0/D1
000445D8 <AmiBlitz3.ab2@19677>    JSR addoff
000445DC <AmiBlitz3.ab2@19678>   SUB.l $12(A0),D1
000445E0 <AmiBlitz3.ab2@19679>   ADD.l $28(A0),D1
000445E4 <AmiBlitz3.ab2@19680> BRA.w writelong
000445E6 <AmiBlitz3.ab2@19685>   MOVE.w D1,-(A7)
000445EA <AmiBlitz3.ab2@19686>   MOVE.w tstmode(PC),D1
000445EE <AmiBlitz3.ab2@19687>    BSR.w writeword
000445F2 <AmiBlitz3.ab2@19688>    BSR.w getbbase
000445F6 <AmiBlitz3.ab2@19689>    BSR.w writeword
000445F8 <AmiBlitz3.ab2@19690>   MOVE.w (A7)+,D1
000445FC <AmiBlitz3.ab2@19691>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00044600 <AmiBlitz3.ab2@19692>    BSR.w Atokejsr
00044604 <AmiBlitz3.ab2@19693>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00044606 <AmiBlitz3.ab2@19694> RTS
0004460A <AmiBlitz3.ab2@19702>   MOVE.w blitzoff(PC),D1
0004460E <AmiBlitz3.ab2@19703>   CMP.w #-$1,D1
00044612 <AmiBlitz3.ab2@19704>    BNE.w getbbase__done
00044618 <AmiBlitz3.ab2@19705>   ADDQ.w #1,globalvarpointer
00044620 <AmiBlitz3.ab2@19706>   BCLR #$0,globalvarpointer+1
00044626 <AmiBlitz3.ab2@19707>   MOVE.w globalvarpointer,D1
0004462C <AmiBlitz3.ab2@19708>   MOVE.w D1,blitzoff
00044632 <AmiBlitz3.ab2@19709>   ADDQ.w #2,globalvarpointer
00044634 <AmiBlitz3.ab2@19712> RTS
00044638 <AmiBlitz3.ab2@19716> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0004463A <AmiBlitz3.ab2@19719> inline:     Ds.w 1
0004463C <AmiBlitz3.ab2@19720> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0004463E <AmiBlitz3.ab2@19721> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00044640 <AmiBlitz3.ab2@19725>   MOVE.w (A2)+,D1
00044644 <AmiBlitz3.ab2@19726>    BEQ.w fetchregs__done
00044646 <AmiBlitz3.ab2@19727>   MOVE.w (A2)+,D2
0004464A <AmiBlitz3.ab2@19728>    BSR.w toreg
0004464E <AmiBlitz3.ab2@19729> BRA.w fetchregs
00044650 <AmiBlitz3.ab2@19732> RTS
00044654 <AmiBlitz3.ab2@19737>   CMP.w #-$100,D2
00044658 <AmiBlitz3.ab2@19738>    BCC.w toreg__yeah
0004465C <AmiBlitz3.ab2@19740>   BCLR #$F,D2
00044660 <AmiBlitz3.ab2@19741>    BEQ.w toreg__nobm
00044666 <AmiBlitz3.ab2@19743>   TST.w blitzmode
0004466A <AmiBlitz3.ab2@19744>    BMI.w toreg__yeah
0004466C <AmiBlitz3.ab2@19745> RTS
00044670 <AmiBlitz3.ab2@19748>   BCLR #$E,D2
00044674 <AmiBlitz3.ab2@19749>    BEQ.w toreg__yeah
0004467A <AmiBlitz3.ab2@19751>   TST.w blitzmode
0004467E <AmiBlitz3.ab2@19752>    BPL.w toreg__yeah
00044680 <AmiBlitz3.ab2@19753> RTS
00044686 <AmiBlitz3.ab2@19756>   JSR uselib
00044688 <AmiBlitz3.ab2@19757>   TST.b D2
0004468C <AmiBlitz3.ab2@19758>    BEQ.w toreg__norm
00044690 <AmiBlitz3.ab2@19759>   CMP.b #$4,D2
00044694 <AmiBlitz3.ab2@19760>    BNE.w toreg__suv
00044698 <AmiBlitz3.ab2@19761>   MOVE.w #$0004,-(A7)
0004469E <AmiBlitz3.ab2@19762>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
000446A2 <AmiBlitz3.ab2@19763> BRA.w toreg__sendmd
000446A6 <AmiBlitz3.ab2@19766>   CMP.b #$3,D2
000446AA <AmiBlitz3.ab2@19767>    BNE.w toreg__notnmax
000446AC <AmiBlitz3.ab2@19768>   CLR.w -(A7)
000446B2 <AmiBlitz3.ab2@19769>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
000446B4 <AmiBlitz3.ab2@19775>   LSR.w #8,D2
000446B8 <AmiBlitz3.ab2@19776>   MOVE.w #$303C,D1                                         ;move.w #x,dn
000446BC <AmiBlitz3.ab2@19777>   BTST #$7,D2
000446C0 <AmiBlitz3.ab2@19778>    BEQ.w toreg__skipad
000446C4 <AmiBlitz3.ab2@19779>   MOVE.w #$307C,D1                                         ;move.w #x,an
000446C8 <AmiBlitz3.ab2@19780>   CMP.w #$16,D2
000446CC <AmiBlitz3.ab2@19781>    BNE.w toreg__skipad
000446D4 <AmiBlitz3.ab2@19782>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
000446D8 <AmiBlitz3.ab2@19785>   ANDI.w #$7,D2
000446DA <AmiBlitz3.ab2@19786>   LSL.w #8,D2
000446DC <AmiBlitz3.ab2@19787>   LSL.w #1,D2
000446DE <AmiBlitz3.ab2@19788>   OR.w D2,D1
000446E2 <AmiBlitz3.ab2@19789>    BSR.w writeword
000446E6 <AmiBlitz3.ab2@19790>   MOVE.l $12(A1),D1
000446E8 <AmiBlitz3.ab2@19791>   ADD.l (A7)+,D1
000446EC <AmiBlitz3.ab2@19792>   MOVE.w $0(A1,D1.L),D1
000446EE <AmiBlitz3.ab2@19793>   ADD.w (A7)+,D1
000446F2 <AmiBlitz3.ab2@19794> BRA.w writeword
000446F4 <AmiBlitz3.ab2@19797>   MOVE.w D2,-(A7)
000446F6 <AmiBlitz3.ab2@19798>   LSR.w #8,D2
000446FA <AmiBlitz3.ab2@19799>   CMP.w #$16,D2
000446FE <AmiBlitz3.ab2@19800>    BNE.w toreg__isnta6
00044706 <AmiBlitz3.ab2@19801>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0004470A <AmiBlitz3.ab2@19804>   MOVE.l $12(A1),D1                                        ;objectspace
0004470E <AmiBlitz3.ab2@19805>   MOVE.w -$6(A1,D1.L),-(A7)
00044712 <AmiBlitz3.ab2@19806>    BSR.w makeregop
00044716 <AmiBlitz3.ab2@19807>    BSR.w writeword
00044718 <AmiBlitz3.ab2@19808>   MOVE.w (A7)+,D1
0004471A <AmiBlitz3.ab2@19809>   MOVE.w (A7)+,D2
0004471C <AmiBlitz3.ab2@19810>   TST.b D2
00044720 <AmiBlitz3.ab2@19811>    BPL.w toreg__skippy1
00044724 <AmiBlitz3.ab2@19816>    BSR.w writeword                                         ;move.l x(a5),dn
00044726 <AmiBlitz3.ab2@19817>   MOVE.w D2,-(A7)                                          ;store reg used
0004472A <AmiBlitz3.ab2@19819>   ADDA.l $12(A1),A1
0004472C <AmiBlitz3.ab2@19820>   MOVE.b D2,D1
00044730 <AmiBlitz3.ab2@19821>   ANDI.w #$7,D1
00044736 <AmiBlitz3.ab2@19823>   TST.b debugmode
0004473A <AmiBlitz3.ab2@19824>    BEQ.w toreg__norerr
0004473C <AmiBlitz3.ab2@19826>   MOVE.w D1,-(A7)
0004473E <AmiBlitz3.ab2@19827>   LSL.w #8,D1
00044740 <AmiBlitz3.ab2@19828>   LSL.w #1,D1
00044744 <AmiBlitz3.ab2@19829>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00044748 <AmiBlitz3.ab2@19830>    BSR.w writeword
0004474C <AmiBlitz3.ab2@19831>   MOVE.w -$4(A1),D1
00044750 <AmiBlitz3.ab2@19832>    BSR.w writeword
00044754 <AmiBlitz3.ab2@19833>   MOVE.l maxchk(PC),D1                                  ;bcs
00044758 <AmiBlitz3.ab2@19834>    BSR.w writelong
0004475A <AmiBlitz3.ab2@19835>   MOVE.l A2,-(A7)
0004475E <AmiBlitz3.ab2@19836>   MOVE.w #$C30A,D1
00044762 <AmiBlitz3.ab2@19837>    BSR.w Atokejsr
00044764 <AmiBlitz3.ab2@19838>   MOVEA.l (A7)+,A2
00044766 <AmiBlitz3.ab2@19839>   MOVE.w (A7)+,D1
0004476A <AmiBlitz3.ab2@19842>   MOVE.w -$2(A1),D2                                        ;shift amount
0004476E <AmiBlitz3.ab2@19845>   CMP.w #$9,D2
00044772 <AmiBlitz3.ab2@19846>    BCS.w toreg__simp
00044776 <AmiBlitz3.ab2@19847>   MOVEM.w D1-D2,-(A7)
00044778 <AmiBlitz3.ab2@19849>   MOVEQ.l #$00,D2                                          ;!!!!!
0004477A <AmiBlitz3.ab2@19851>   LSL.w #8,D2
0004477C <AmiBlitz3.ab2@19852>   LSL.w #1,D2
0004477E <AmiBlitz3.ab2@19853>   OR.w D2,D1
00044782 <AmiBlitz3.ab2@19854>   OR.w lsldn(PC),D1
00044786 <AmiBlitz3.ab2@19855>    BSR.w writeword
0004478A <AmiBlitz3.ab2@19856>   MOVEM.w (A7)+,D1-D2
0004478C <AmiBlitz3.ab2@19857>   SUBQ.w #8,D2
00044790 <AmiBlitz3.ab2@19858> BRA.w toreg__shloop
00044792 <AmiBlitz3.ab2@19861>   MOVE.w D1,-(A7)
00044796 <AmiBlitz3.ab2@19862>   OR.w #$48c0,d1
0004479A <AmiBlitz3.ab2@19863>   BSR writeword
0004479C <AmiBlitz3.ab2@19864>   MOVE.w (a7),d1
0004479E <AmiBlitz3.ab2@19865>   TST.w D2
000447A2 <AmiBlitz3.ab2@19866>   BEQ.w toreg__simp2
000447A6 <AmiBlitz3.ab2@19868>   ANDI.w #$7,D2                                            ;?????
000447A8 <AmiBlitz3.ab2@19870>   LSL.w #8,D2
000447AA <AmiBlitz3.ab2@19871>   LSL.w #1,D2
000447AC <AmiBlitz3.ab2@19872>   OR.w D2,D1
000447B0 <AmiBlitz3.ab2@19873>   OR.w lsldn(PC),D1
000447B4 <AmiBlitz3.ab2@19874>    BSR.w writeword
000447B6 <AmiBlitz3.ab2@19880>   MOVE.w (A7)+,D1
000447BA <AmiBlitz3.ab2@19881>   ANDI.w #$7,D1
000447BE <AmiBlitz3.ab2@19882>   OR.w maxdo(PC),D1
000447C0 <AmiBlitz3.ab2@19883>   MOVE.w (A7)+,D2
000447C2 <AmiBlitz3.ab2@19884>   LSL.w #1,D2
000447C6 <AmiBlitz3.ab2@19885>   ANDI.w #$E00,D2
000447C8 <AmiBlitz3.ab2@19886>   OR.w D2,D1
000447CC <AmiBlitz3.ab2@19887> BRA.w writeword
000447D0 <AmiBlitz3.ab2@19890>   CMP.b #$1,D2
000447D4 <AmiBlitz3.ab2@19891>    BEQ.w toreg__skippy
000447D6 <AmiBlitz3.ab2@19895>   ADDQ.w #4,D1
000447DC <AmiBlitz3.ab2@19897>   TST.b debugmode
000447E0 <AmiBlitz3.ab2@19898>    BEQ.w toreg__skippy
000447E4 <AmiBlitz3.ab2@19900>    BSR.w writeword
000447E6 <AmiBlitz3.ab2@19901>   SWAP D1
000447EA <AmiBlitz3.ab2@19902>   MOVE.w toreg__theretest(PC),D1
000447EC <AmiBlitz3.ab2@19903>   SWAP D1
000447F0 <AmiBlitz3.ab2@19904>    BSR.w writelong
000447F4 <AmiBlitz3.ab2@19905>   MOVE.l toreg__theretest+4(PC),D1
000447F8 <AmiBlitz3.ab2@19906>    BSR.w writelong
000447FC <AmiBlitz3.ab2@19907>   MOVE.l toreg__theretest+8(PC),D1
00044800 <AmiBlitz3.ab2@19908> BRA.w writelong
00044804 <AmiBlitz3.ab2@19911> BRA.w writeword
00044808 <AmiBlitz3.ab2@19916>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0004480C <AmiBlitz3.ab2@19917>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0004480E <AmiBlitz3.ab2@19918>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00044810 <AmiBlitz3.ab2@19919>             Dc.b $4E,$40                                   ;TRAP   #00
00044812 <AmiBlitz3.ab2@19924>   LSR.w #8,D2
00044816 <AmiBlitz3.ab2@19925>   CMP.b #$16,D2
0004481A <AmiBlitz3.ab2@19926>    BNE.w toreg__nota6
0004481E <AmiBlitz3.ab2@19927>   MOVE.w $A(A1),D1
00044824 <AmiBlitz3.ab2@19928>   CMP.w lasta6,D1
00044828 <AmiBlitz3.ab2@19929>    BEQ.w toreg__sk
0004482E <AmiBlitz3.ab2@19930>   MOVE.w D1,lasta6
00044832 <AmiBlitz3.ab2@19933>    BSR.w makeregop
00044836 <AmiBlitz3.ab2@19934>   TST.w $1A(A1)
0004483A <AmiBlitz3.ab2@19935>    BPL.w toreg__long
0004483E <AmiBlitz3.ab2@19936>   CMP.w stackop(PC),D1
00044842 <AmiBlitz3.ab2@19937>    BNE.w toreg__notst
00044848 <AmiBlitz3.ab2@19938>   SUBQ.w #2,a2offset
0004484C <AmiBlitz3.ab2@19941>    ORI.w #$1000,D1
00044850 <AmiBlitz3.ab2@19944>    BSR.w writeword
00044854 <AmiBlitz3.ab2@19945>   MOVE.w $A(A1),D1
00044858 <AmiBlitz3.ab2@19946>    BSR.w writeword
0004485A <AmiBlitz3.ab2@19949> RTS
0004485C <AmiBlitz3.ab2@19953> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00044860 <AmiBlitz3.ab2@19954> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
00044866 <AmiBlitz3.ab2@19955>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00044868 <AmiBlitz3.ab2@19958> 
0004486A <AmiBlitz3.ab2@19961>             Dc.b $00,$00
0004486E <AmiBlitz3.ab2@19962> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00044872 <AmiBlitz3.ab2@19969>   CMP.b #$FF,D2
00044876 <AmiBlitz3.ab2@19970>    BNE.w makeregop__notst
0004487A <AmiBlitz3.ab2@19971>   MOVE.w stackop(PC),D1
00044880 <AmiBlitz3.ab2@19972>   ADDQ.w #4,a2offset
00044882 <AmiBlitz3.ab2@19973> RTS
00044884 <AmiBlitz3.ab2@19976>   MOVE.l A3,-(A7)
0004488A <AmiBlitz3.ab2@19977>   LEA regtransd,A3
0004488E <AmiBlitz3.ab2@19978>   BTST #$4,D2
00044892 <AmiBlitz3.ab2@19979>    BEQ.w makeregop__skip
00044898 <AmiBlitz3.ab2@19980>   LEA regtransa,A3
0004489C <AmiBlitz3.ab2@19983>   ANDI.w #$7,D2
0004489E <AmiBlitz3.ab2@19984>   MOVE.w D2,D1
000448A0 <AmiBlitz3.ab2@19985>   LSL.w #8,D1
000448A2 <AmiBlitz3.ab2@19986>   LSL.w #1,D1
000448A4 <AmiBlitz3.ab2@19987>   OR.w (A3),D1
000448A6 <AmiBlitz3.ab2@19988>   MOVEA.l (A7)+,A3
000448A8 <AmiBlitz3.ab2@19989> RTS
000448AC <AmiBlitz3.ab2@19995>   CMP.w #$3C,D0
000448B0 <AmiBlitz3.ab2@19996>    BCS.w ifchar__no
000448B4 <AmiBlitz3.ab2@19997>   CMP.w #$3E,D0
000448B8 <AmiBlitz3.ab2@19998>    BHI.w ifchar__no
000448BC <AmiBlitz3.ab2@19999>   SUBI.w #$3C,D0
000448BE <AmiBlitz3.ab2@20000>   CMP.w D0,D0
000448C0 <AmiBlitz3.ab2@20003> RTS
000448CA <AmiBlitz3.ab2@20008>   MOVE.w oldqflag,instringon
000448D0 <AmiBlitz3.ab2@20009>   MOVEA.l lastsourcepos,A5
000448D6 <AmiBlitz3.ab2@20014>   MOVE.w regnum,-(A7)
000448DC <AmiBlitz3.ab2@20015>   CLR.w regnum
000448E2 <AmiBlitz3.ab2@20016>   MOVE.l destpointer,-(A7)
000448E8 <AmiBlitz3.ab2@20017>   MOVE.l destbufferend,-(A7)
000448EE <AmiBlitz3.ab2@20018>   MOVE.w dontwrite,-(A7)
000448F4 <AmiBlitz3.ab2@20019>   MOVE.w lasta6,-(A7)
000448FA <AmiBlitz3.ab2@20020>   MOVE.w cfetchmode,-(A7)
000448FE <AmiBlitz3.ab2@20021>    BNE.w JL_0_BFB6
00044908 <AmiBlitz3.ab2@20022>   MOVE.l destbufferend,oldlibat
0004490E <AmiBlitz3.ab2@20023>   MOVEA.l constpcat,A0
00044914 <AmiBlitz3.ab2@20024>   MOVE.l A0,destpointer
00044918 <AmiBlitz3.ab2@20025> BRA.w JL_0_BFBC
0004491E <AmiBlitz3.ab2@20028>   MOVEA.l destpointer,A0
00044920 <AmiBlitz3.ab2@20031>   MOVE.l A0,-(A7)
0004492A <AmiBlitz3.ab2@20032>   MOVE.l constlibat,destbufferend
00044930 <AmiBlitz3.ab2@20033>   CLR.w dontwrite
00044938 <AmiBlitz3.ab2@20035>   MOVE.w #$FFFF,lasta6
00044940 <AmiBlitz3.ab2@20036>   MOVE.w #$FFFF,cfetchmode
00044944 <AmiBlitz3.ab2@20038>     BSR.w arreval
00044946 <AmiBlitz3.ab2@20039>    MOVE.l (a7),a0
00044A82 <AmiBlitz3.ab2@20041>  !newcalc
00044A86 <AmiBlitz3.ab2@20042>    BEQ 'l10
00044A88 <AmiBlitz3.ab2@20043>    MOVE.l d0,d3
00044A8A <AmiBlitz3.ab2@20044>    MOVEA.l (A7)+,A0
00044A8E <AmiBlitz3.ab2@20045> BRA bc1
00044A92 <AmiBlitz3.ab2@20048>    MOVE.w #$2600,D1
00044A98 <AmiBlitz3.ab2@20049>   OR.w regnum,D1
00044A9C <AmiBlitz3.ab2@20050>    BSR.w writeword
00044AA0 <AmiBlitz3.ab2@20051>   MOVE.w #$4E75,D1
00044AA4 <AmiBlitz3.ab2@20052>    BSR.w writeword
00044AAA <AmiBlitz3.ab2@20053>   MOVE.w dontwrite,D1
00044AAE <AmiBlitz3.ab2@20054>    BNE.w conmemerr
00044AB0 <AmiBlitz3.ab2@20055>   MOVEA.l (A7)+,A0
00044AB2 <AmiBlitz3.ab2@20056>   NOP
00044AB8 <AmiBlitz3.ab2@20057>    JSR Aclearcache                                         ;simple expression
00044ABA <AmiBlitz3.ab2@20060>    JSR (A0)                                                ;writeresult
00044AC0 <AmiBlitz3.ab2@20063>   MOVE.w (A7)+,cfetchmode
00044AC6 <AmiBlitz3.ab2@20064>   MOVE.w (A7)+,lasta6
00044ACC <AmiBlitz3.ab2@20065>   MOVE.w (A7)+,dontwrite
00044AD2 <AmiBlitz3.ab2@20066>   MOVE.l (A7)+,destbufferend
00044AD8 <AmiBlitz3.ab2@20067>   MOVE.l (A7)+,destpointer
00044ADE <AmiBlitz3.ab2@20068>   MOVE.w (A7)+,regnum
00044AE4 <AmiBlitz3.ab2@20071> JMP reget
00044AE8 <AmiBlitz3.ab2@20074> oldlibat:   Ds.l 1
00044AEE <AmiBlitz3.ab2@20078>   LEA incdir,A0
00044AF2 <AmiBlitz3.ab2@20081>   CMP.w #$22,D0
00044AF6 <AmiBlitz3.ab2@20082>    BEQ.w JL_0_C052
00044AF8 <AmiBlitz3.ab2@20083>   MOVE.b D0,(A0)+
00044AFA <AmiBlitz3.ab2@20084>   TST.w D0
00044AFE <AmiBlitz3.ab2@20085>    BEQ.w JL_0_C05A
00044B02 <AmiBlitz3.ab2@20086>    BMI.w syntaxerr
00044B08 <AmiBlitz3.ab2@20089>   JSR get1bytemain                                         ;_long
00044B0C <AmiBlitz3.ab2@20090> BRA.w JL_0_C03E
00044B0E <AmiBlitz3.ab2@20093> RTS
00044B14 <AmiBlitz3.ab2@20097>   LEA ptr_parameterstore,A1                                ;getparameter
00044B1A <AmiBlitz3.ab2@20098>   LEA incdir,A0
00044B1C <AmiBlitz3.ab2@20099>   MOVEQ.l #-$01,D2
00044B1E <AmiBlitz3.ab2@20102>     ADDQ.w #1,D2
00044B20 <AmiBlitz3.ab2@20103>     MOVE.b (A0)+,(A1)+
00044B24 <AmiBlitz3.ab2@20104>   BNE.w JL_0_C06A
00044B26 <AmiBlitz3.ab2@20105>   SUBQ.w #1,A1
00044B30 <AmiBlitz3.ab2@20107>   MOVE.w oldqflag,instringon
00044B36 <AmiBlitz3.ab2@20108>   MOVEA.l lastsourcepos,A5
00044B3C <AmiBlitz3.ab2@20112>   JSR get1bytemain
00044B3E <AmiBlitz3.ab2@20113>   TST.w D0
00044B42 <AmiBlitz3.ab2@20114>    BMI.w syntaxerr
00044B46 <AmiBlitz3.ab2@20115>   CMP.b #$22,D0
00044B4A <AmiBlitz3.ab2@20116>    BEQ.w JL_0_C078
00044B4C <AmiBlitz3.ab2@20117>   MOVE.b D0,(A1)+
00044B50 <AmiBlitz3.ab2@20118>    BEQ.w JL_0_C096
00044B52 <AmiBlitz3.ab2@20119>   ADDQ.w #1,D2
00044B56 <AmiBlitz3.ab2@20120> BRA.w JL_0_C078
00044B58 <AmiBlitz3.ab2@20123>   TST.w D2
00044B5C <AmiBlitz3.ab2@20124>    BEQ.w syntaxerr
00044B5E <AmiBlitz3.ab2@20125> RTS
00044B64 <AmiBlitz3.ab2@20129>   MOVEA.l constantbase,A2
00044B68 <AmiBlitz3.ab2@20130>   MOVEA.l $E(A2),A5
00044B6E <AmiBlitz3.ab2@20131>   MOVE.l a5,includesourceline
00044B74 <AmiBlitz3.ab2@20132>   LEA inctab,a0
00044B7A <AmiBlitz3.ab2@20133>   MOVE.w ininclude,d0
00044B7E <AmiBlitz3.ab2@20134>   MOVE.l $0(a0,d0*4),d0
00044B82 <AmiBlitz3.ab2@20135>   MOVEA.l $4(A2),A0
00044B86 <AmiBlitz3.ab2@20137>   LEA $0(A0,D0.l),A0
00044B88 <AmiBlitz3.ab2@20138>   MOVEA.l A5,A1
00044B8A <AmiBlitz3.ab2@20141>     CMPA.l A0,A1
00044B8E <AmiBlitz3.ab2@20142>      BCC.w JL_0_C0C6
00044B90 <AmiBlitz3.ab2@20143>   TST.b (A1)+
00044B94 <AmiBlitz3.ab2@20144>   BNE.w JL_0_C0B6
00044B98 <AmiBlitz3.ab2@20145> BRA.w JL_0_C112
00044B9C <AmiBlitz3.ab2@20148>   MOVEA.l $4(A2),A1
00044B9E <AmiBlitz3.ab2@20151>   CMPA.l A0,A5
00044BA2 <AmiBlitz3.ab2@20152>   BCC.w JL_0_C0D6
00044BA4 <AmiBlitz3.ab2@20153>   MOVE.b (A5)+,(A1)+
00044BA8 <AmiBlitz3.ab2@20154> BRA.w JL_0_C0CA
00044BAA <AmiBlitz3.ab2@20157>   MOVE.l A1,D0
00044BAE <AmiBlitz3.ab2@20158>   SUB.l $4(A2),D0
00044BB4 <AmiBlitz3.ab2@20159>   LEA inctab,a0
00044BB6 <AmiBlitz3.ab2@20160>   MOVEQ #0,d1
00044BBC <AmiBlitz3.ab2@20161>   MOVE.w ininclude,d1
00044BC0 <AmiBlitz3.ab2@20162>   MOVE.l d0,0(a0,d1*4)
00044BC6 <AmiBlitz3.ab2@20164>   MOVEA.l _dosbase,A6
00044BCA <AmiBlitz3.ab2@20165>   MOVE.l $8(A2),D1
00044BCC <AmiBlitz3.ab2@20166>   MOVE.l A1,D2
00044BD2 <AmiBlitz3.ab2@20167>   MOVE.l D2,include_base
00044BD8 <AmiBlitz3.ab2@20169>   MOVE.l #$10000000,d3                                     ;load whole file
00044BDA <AmiBlitz3.ab2@20170>   SUB.l D0,D3
00044BDE <AmiBlitz3.ab2@20171>    JSR _Read(A6)
00044BE0 <AmiBlitz3.ab2@20172>   TST.l D0
00044BE4 <AmiBlitz3.ab2@20173>    BMI.w error_reading_file
00044BE8 <AmiBlitz3.ab2@20174>    BEQ.w JL_0_C120
00044BEE <AmiBlitz3.ab2@20175>    MOVE.l D0,include_length
00044C30 <AmiBlitz3.ab2@20176>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00044C5A <AmiBlitz3.ab2@20177>    !basic
00044C6A <AmiBlitz3.ab2@20178>    ilen.l  = Peek.l(?include_length)
00044C7A <AmiBlitz3.ab2@20179>    ibase.l = Peek.l(?include_base)
00044C8A <AmiBlitz3.ab2@20180>    ido.l   = Peek.l(?include_process)
00044C9A <AmiBlitz3.ab2@20181>    *tn.preprocessor = Peek.l(?include_preprocessor)
00044CA4 <AmiBlitz3.ab2@20182>    If ido
00044CB6 <AmiBlitz3.ab2@20183>      ioffset.l = SkipXtraHeader{ibase,ilen}
00044CDC <AmiBlitz3.ab2@20184>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00044CEE <AmiBlitz3.ab2@20185>      If nilen>0
00044CFE <AmiBlitz3.ab2@20189>        Poke.l ?include_length,nilen
00044D1C <AmiBlitz3.ab2@20192>    !asm
00044D26 <AmiBlitz3.ab2@20193>    MOVE.l #0,include_process
00044D2C <AmiBlitz3.ab2@20194>    MOVE.l include_length,D0
00044D32 <AmiBlitz3.ab2@20195>    LEA inctab,a0
00044D34 <AmiBlitz3.ab2@20196>    MOVEQ #0,d1
00044D3A <AmiBlitz3.ab2@20197>    MOVE.w ininclude,d1
00044D3E <AmiBlitz3.ab2@20198>    ADD.l d0,0(a0,d1*4)
00044D42 <AmiBlitz3.ab2@20200>   MOVEA.l $4(A2),A5
00044D46 <AmiBlitz3.ab2@20202>    MOVE.l 0(a0,d1*4),d0
00044D4A <AmiBlitz3.ab2@20203>   CLR.b $0(A5,D0.l)
00044D4C <AmiBlitz3.ab2@20206>   MOVEA.l A5,A0
00044D4E <AmiBlitz3.ab2@20209>     TST.b (A0)+
00044D52 <AmiBlitz3.ab2@20210>   BNE.w JL_0_C114
00044D56 <AmiBlitz3.ab2@20211>   MOVE.l A0,$E(A2)
00044D58 <AmiBlitz3.ab2@20212> RTS
00044D5C <AmiBlitz3.ab2@20215> include_length:        Dc.l 0                              ; for tokenizer!
00044D60 <AmiBlitz3.ab2@20216> include_base:          Dc.l 0
00044D64 <AmiBlitz3.ab2@20217> include_process:       Dc.l 0
00044D68 <AmiBlitz3.ab2@20218> include_preprocessor:  Dc.l 0
00044D6C <AmiBlitz3.ab2@20222>   MOVE.l $8(A2),D1
00044D72 <AmiBlitz3.ab2@20224>   MOVEA.l _dosbase,A6
00044D76 <AmiBlitz3.ab2@20225>   JSR _Close(a6)
00044D7C <AmiBlitz3.ab2@20226>   MOVEA.l _execbase,A6
00044D80 <AmiBlitz3.ab2@20227>   MOVEA.l $4(A2),A1
00044D86 <AmiBlitz3.ab2@20228>   MOVE.l #$400*8,D0                                        ;exit include
00044D8A <AmiBlitz3.ab2@20230>   JSR _FreeVec(a6)
00044D90 <AmiBlitz3.ab2@20233>   MOVE.l (A2),constantbase
00044D92 <AmiBlitz3.ab2@20234>   MOVEA.l A2,A1
00044D94 <AmiBlitz3.ab2@20235>   MOVEQ.l #$00,D0
00044D98 <AmiBlitz3.ab2@20236>   MOVE.b $12(A2),D0
00044D9E <AmiBlitz3.ab2@20237>   MOVEA.l _execbase,A6
00044DA4 <AmiBlitz3.ab2@20238>   MOVE.l mempool2,a0
00044DA8 <AmiBlitz3.ab2@20239>   JSR _FreePooled(A6)
00044DAE <AmiBlitz3.ab2@20240>   JSR zero_includename
00044DB4 <AmiBlitz3.ab2@20241>   SUBQ.w #1,ininclude
00044DB8 <AmiBlitz3.ab2@20242>   BNE.w AJL_0_C09E
00044DBE <AmiBlitz3.ab2@20245>   LEA _include,a0
00044DC2 <AmiBlitz3.ab2@20246>   MOVEM.l a0-a6/d0-d7,-(a7)
00044DC8 <AmiBlitz3.ab2@20247>   LEA ptr_parameterstore,a1
00044DCA <AmiBlitz3.ab2@20250>     MOVE.b (a0)+,(a1)+
00044DCE <AmiBlitz3.ab2@20251>   BNE 'l1b
00044DD0 <AmiBlitz3.ab2@20252>   MOVEQ #9,d2
00044DD6 <AmiBlitz3.ab2@20253>   JSR findlabel2
00044DDA <AmiBlitz3.ab2@20254>   BNE 'd
00044DDE <AmiBlitz3.ab2@20255>   CLR.l 8(a2)
00044DE2 <AmiBlitz3.ab2@20258>   MOVEM.l (a7)+,a0-a6/d0-d7
00044DE4 <AmiBlitz3.ab2@20259> RTS
00044DEA <AmiBlitz3.ab2@20263>   MOVE.l unusedfunc,d0
00044DEE <AmiBlitz3.ab2@20264>   BEQ 'noclear
00044DF2 <AmiBlitz3.ab2@20265>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00044DF4 <AmiBlitz3.ab2@20268>     MOVE.l d0,a1
00044DF8 <AmiBlitz3.ab2@20269>     MOVE.l 4(a1),d0
00044DFA <AmiBlitz3.ab2@20270>     MOVE.l (a1),d2
00044E00 <AmiBlitz3.ab2@20271>     MOVE.l _execbase,a6
00044E04 <AmiBlitz3.ab2@20272>     JSR _FreeMem(a6)
00044E06 <AmiBlitz3.ab2@20273>     MOVE.l d2,d0
00044E0A <AmiBlitz3.ab2@20274>   BNE 'f1
00044E10 <AmiBlitz3.ab2@20275>   CLR.l unusedfunc
00044E14 <AmiBlitz3.ab2@20276>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00044E16 <AmiBlitz3.ab2@20279> RTS
00044E1C <AmiBlitz3.ab2@20283>   MOVEA.l xinclude_base,A2
00044E22 <AmiBlitz3.ab2@20284>   CLR.l xinclude_base
00044E26 <AmiBlitz3.ab2@20287>     CMPA.w #$0,A2
00044E2A <AmiBlitz3.ab2@20288>      BEQ.w JL_0_C186
00044E2C <AmiBlitz3.ab2@20289>     MOVEQ.l #$00,D0
00044E30 <AmiBlitz3.ab2@20290>     MOVE.b 4+8(A2),D0
00044E32 <AmiBlitz3.ab2@20291>     MOVEA.l A2,A1
00044E34 <AmiBlitz3.ab2@20292>     MOVEA.l (A2),A2
00044E3A <AmiBlitz3.ab2@20293>     MOVEA.l _execbase,A6
00044E40 <AmiBlitz3.ab2@20294>     MOVE.l mempool2,a0
00044E44 <AmiBlitz3.ab2@20295>     JSR _FreePooled(A6)
00044E48 <AmiBlitz3.ab2@20296> BRA.w JL_0_C168
00044E4A <AmiBlitz3.ab2@20299> RTS
00044E50 <AmiBlitz3.ab2@20303>   MOVEA.l constantbase,A2
00044E56 <AmiBlitz3.ab2@20304>   CLR.l constantbase
00044E5A <AmiBlitz3.ab2@20307>     CMPA.w #$0,A2
00044E5E <AmiBlitz3.ab2@20308>      BEQ.w JL_0_C1DC
00044E62 <AmiBlitz3.ab2@20309>     MOVE.l $8(A2),D1
00044E66 <AmiBlitz3.ab2@20310>      BEQ.w JL_0_C1AE
00044E6C <AmiBlitz3.ab2@20311>     MOVEA.l _dosbase,A6
00044E70 <AmiBlitz3.ab2@20312>      JSR _Close(A6)
00044E74 <AmiBlitz3.ab2@20315>     MOVE.l $4(A2),D0
00044E78 <AmiBlitz3.ab2@20316>      BEQ.w JL_0_C1C6
00044E7A <AmiBlitz3.ab2@20317>     MOVEA.l D0,A1
00044E80 <AmiBlitz3.ab2@20318>     MOVE.l #$400*8,D0
00044E86 <AmiBlitz3.ab2@20319>     MOVEA.l _execbase,A6
00044E8C <AmiBlitz3.ab2@20320>     MOVE.l mempool,a0
00044E90 <AmiBlitz3.ab2@20321>     JSR _FreeVec(a6)
00044E92 <AmiBlitz3.ab2@20324>     MOVEQ.l #$00,D0
00044E96 <AmiBlitz3.ab2@20325>     MOVE.b $12(A2),D0
00044E98 <AmiBlitz3.ab2@20326>     MOVEA.l A2,A1
00044E9A <AmiBlitz3.ab2@20327>     MOVEA.l (A2),A2
00044EA0 <AmiBlitz3.ab2@20328>     MOVEA.l _execbase,A6
00044EA6 <AmiBlitz3.ab2@20329>     MOVE.l mempool2,a0
00044EAA <AmiBlitz3.ab2@20330>     JSR _FreePooled(A6)
00044EAE <AmiBlitz3.ab2@20331> BRA.w JL_0_C194
00044EB0 <AmiBlitz3.ab2@20334> RTS
00044EB2 <AmiBlitz3.ab2@20338>   SWAP D0
00044EB6 <AmiBlitz3.ab2@20339>    BSR.w JL_0_C1E6
00044EB8 <AmiBlitz3.ab2@20340>   SWAP D0
00044EBE <AmiBlitz3.ab2@20343>   MOVEA.l data2,A4
00044EC4 <AmiBlitz3.ab2@20344>   CMPA.l allat,A4
00044EC8 <AmiBlitz3.ab2@20345>    BCC.w JL_0_C200
00044ECA <AmiBlitz3.ab2@20346>   MOVE.w D0,(A4)+
00044ED0 <AmiBlitz3.ab2@20347>   MOVE.l A4,data2
00044ED2 <AmiBlitz3.ab2@20348> RTS
00044EDA <AmiBlitz3.ab2@20351>   MOVE.w #$FFFF,dontwrite
00044EE0 <AmiBlitz3.ab2@20352>   ADDQ.l #2,data2
00044EE2 <AmiBlitz3.ab2@20353> RTS
00044EE8 <AmiBlitz3.ab2@20357>   MOVEA.l data2,A4
00044EEE <AmiBlitz3.ab2@20358>   CMPA.l allat,A4
00044EF2 <AmiBlitz3.ab2@20359>    BCC.w JL_0_C22A
00044EF4 <AmiBlitz3.ab2@20360>   MOVE.b D0,(A4)+
00044EFA <AmiBlitz3.ab2@20361>   MOVE.l A4,data2
00044EFC <AmiBlitz3.ab2@20362> RTS
00044F04 <AmiBlitz3.ab2@20365>   MOVE.w #$FFFF,dontwrite
00044F0A <AmiBlitz3.ab2@20366>   ADDQ.l #1,data2
00044F0C <AmiBlitz3.ab2@20367> RTS
00044F10 <AmiBlitz3.ab2@20371>   CMP.w #$22,D0
00044F14 <AmiBlitz3.ab2@20372>    BNE.w syntaxerr
00044F1A <AmiBlitz3.ab2@20376>   JSR get1bytemain
00044F1E <AmiBlitz3.ab2@20377>   CMP.b #$22,D0
00044F22 <AmiBlitz3.ab2@20378>    BEQ.w JL_0_C25A
00044F24 <AmiBlitz3.ab2@20379>   TST.w D0
00044F28 <AmiBlitz3.ab2@20380>    BEQ.w syntaxerr
00044F2A <AmiBlitz3.ab2@20381>   MOVE.b D0,(A0)+
00044F2E <AmiBlitz3.ab2@20382> BRA.w JL_0_C242
00044F30 <AmiBlitz3.ab2@20385>   CLR.b (A0)
00044F32 <AmiBlitz3.ab2@20386> RTS
00044F34 <AmiBlitz3.ab2@20389>   TST.l D3
00044F36 <AmiBlitz3.ab2@20390> RTS
00044F3C <AmiBlitz3.ab2@20393>   LEA ptr_parameterstore,A0
00044F42 <AmiBlitz3.ab2@20394>   LEA namebuff2,A1
00044F44 <AmiBlitz3.ab2@20397>     MOVE.b (A0)+,D0
00044F48 <AmiBlitz3.ab2@20398>     BEQ.w JL_0_C27C
00044F4A <AmiBlitz3.ab2@20399>   CMP.b (A1)+,D0
00044F4E <AmiBlitz3.ab2@20400>   BEQ.w JL_0_C26E
00044F50 <AmiBlitz3.ab2@20401> RTS
00044F52 <AmiBlitz3.ab2@20404>   TST.b (A1)
00044F56 <AmiBlitz3.ab2@20405>   BNE.w JL_0_C284
00044F58 <AmiBlitz3.ab2@20406> RTS
00044F5C <AmiBlitz3.ab2@20409>   CMP.w #$1,D0
00044F5E <AmiBlitz3.ab2@20410> RTS
00044F62 <AmiBlitz3.ab2@20414>   CMP.w #$2E,D0                                            ;dodeftype
00044F66 <AmiBlitz3.ab2@20415>    BNE.w syntaxerr
00044F6A <AmiBlitz3.ab2@20416>   BSR.w getparameter2
00044F70 <AmiBlitz3.ab2@20417>   LEA newtypebase,A2
00044F74 <AmiBlitz3.ab2@20418>   BSR.w findtype
00044F78 <AmiBlitz3.ab2@20419>    BNE.w notypeerr
00044F7E <AmiBlitz3.ab2@20420>   TST.b declare
00044F82 <AmiBlitz3.ab2@20421>    BNE 'l1
00044F88 <AmiBlitz3.ab2@20422>   TST.b declare2
00044F8C <AmiBlitz3.ab2@20423>    BEQ 'l2
00044F94 <AmiBlitz3.ab2@20426>   MOVE.b #2,nowdeclare
00044F9A <AmiBlitz3.ab2@20430>   JSR reget
00044F9E <AmiBlitz3.ab2@20431>    BNE.w JL_0_C2B4
00044FA4 <AmiBlitz3.ab2@20432>   MOVE.l A2,defaulttype
00044FA6 <AmiBlitz3.ab2@20433> RTS
00044FAC <AmiBlitz3.ab2@20436>   MOVE.l defaulttype,-(A7)
00044FB2 <AmiBlitz3.ab2@20437>   MOVE.l A2,defaulttype
00044FB6 <AmiBlitz3.ab2@20440>   BSR.w getparameter
00044FBA <AmiBlitz3.ab2@20441>    BSR.w JL_0_8E3C
00044FBE <AmiBlitz3.ab2@20442>   CMP.w #$2C,D0
00044FC2 <AmiBlitz3.ab2@20443>    BNE.w JL_0_C2D8
00044FC8 <AmiBlitz3.ab2@20444>    JSR get1bytemain                                        ; was BSR.w
00044FCC <AmiBlitz3.ab2@20445> BRA.w JL_0_C2C0
00044FD2 <AmiBlitz3.ab2@20448>   MOVE.l (A7)+,defaulttype
00044FD4 <AmiBlitz3.ab2@20449> RTS
00044FD8 <AmiBlitz3.ab2@20453>   LEA $4(A5),A2                                            ;fehler function
00044FDA <AmiBlitz3.ab2@20456>   MOVE.l A2,D0
00044FDE <AmiBlitz3.ab2@20459>   BSR.w getparameter
00044FE2 <AmiBlitz3.ab2@20460>   BSR.w JL_0_8E3C
00044FE6 <AmiBlitz3.ab2@20461>   BSR.w calcvar
00044FEA <AmiBlitz3.ab2@20462>   CMP.b #$7,D2
00044FEE <AmiBlitz3.ab2@20463>    BNE.w mismatcherr
00044FF2 <AmiBlitz3.ab2@20464>   MOVE.w varmode(PC),-(A7)
00044FF6 <AmiBlitz3.ab2@20465>   CMP.w #$3D,D0
00044FFA <AmiBlitz3.ab2@20466>    BNE.w syntaxerr
00044FFE <AmiBlitz3.ab2@20467>   BTST #$F,D2
00045002 <AmiBlitz3.ab2@20468>    BNE.w JL_0_C31C
00045006 <AmiBlitz3.ab2@20469>   MOVE.w JL_0_C2E0(PC),D1
0004500A <AmiBlitz3.ab2@20470>   BSR.w pokewda5s
0004500C <AmiBlitz3.ab2@20471>   MOVE.w D3,D1
00045010 <AmiBlitz3.ab2@20472>   BSR.w writeword
00045014 <AmiBlitz3.ab2@20475>   MOVE.w L_0_C2E4(PC),D1
00045018 <AmiBlitz3.ab2@20476>   BSR.w writeword
0004501E <AmiBlitz3.ab2@20477>   ADDQ.w #1,regnum
00045020 <AmiBlitz3.ab2@20478>   MOVEQ.l #$03,D2
00045024 <AmiBlitz3.ab2@20479>   BSR.w eval
0004502A <AmiBlitz3.ab2@20480>   MOVE.l #$D000,D1
00045030 <AmiBlitz3.ab2@20481>   MOVE.l d1,lastinstruction
00045032 <AmiBlitz3.ab2@20482>   TST.w (A7)+
00045036 <AmiBlitz3.ab2@20483>    BEQ.w Atokejsr
00045038 <AmiBlitz3.ab2@20484>   ADDQ.w #1,D1
0004503C <AmiBlitz3.ab2@20485> BRA.w Atokejsr
0004503E <AmiBlitz3.ab2@20489>   MOVE.w D0,D1
00045042 <AmiBlitz3.ab2@20490>    BPL.w syntaxerr
00045046 <AmiBlitz3.ab2@20491>   BCLR #$F,D1
0004504C <AmiBlitz3.ab2@20492>    JSR searchinstr
00045050 <AmiBlitz3.ab2@20493>   MOVE.l $12(A2),D0
00045054 <AmiBlitz3.ab2@20494>   TST.w -$2(A2,D0.L)
00045058 <AmiBlitz3.ab2@20495>    BEQ.w freeerr
0004505A <AmiBlitz3.ab2@20496>   MOVEQ.l #$02,D2
0004505C <AmiBlitz3.ab2@20497>   MOVE.l A2,-(A7)
00045060 <AmiBlitz3.ab2@20498>    BSR.w eval
00045062 <AmiBlitz3.ab2@20499>   MOVEA.l (A7)+,A2
00045068 <AmiBlitz3.ab2@20500>   MOVE.l A2,mymaxlib
0004506C <AmiBlitz3.ab2@20501>   ADDA.l $12(A2),A2
00045072 <AmiBlitz3.ab2@20502>   TST.b debugmode
00045076 <AmiBlitz3.ab2@20503>    BEQ.w JL_0_C3A8
0004507C <AmiBlitz3.ab2@20504>   MOVE.w regnum,D1
0004507E <AmiBlitz3.ab2@20505>   LSL.w #8,D1
00045080 <AmiBlitz3.ab2@20506>   LSL.w #1,D1
00045084 <AmiBlitz3.ab2@20507>   ORI.w #$B07C,D1
00045088 <AmiBlitz3.ab2@20508>    BSR.w writeword
0004508C <AmiBlitz3.ab2@20509>   MOVE.w -$4(A2),D1
00045090 <AmiBlitz3.ab2@20510>    BSR.w writeword
00045096 <AmiBlitz3.ab2@20511>   MOVE.l maxchk,D1
0004509A <AmiBlitz3.ab2@20512>    BSR.w writelong
0004509C <AmiBlitz3.ab2@20513>   MOVE.l A2,-(A7)
000450A0 <AmiBlitz3.ab2@20514>   MOVE.w #$C30A,D1
000450A4 <AmiBlitz3.ab2@20515>    BSR.w Atokejsr
000450A6 <AmiBlitz3.ab2@20516>   MOVEA.l (A7)+,A2
000450AA <AmiBlitz3.ab2@20519>   MOVE.w -$2(A2),D2
000450B0 <AmiBlitz3.ab2@20522>   MOVE.w regnum,D1
000450B6 <AmiBlitz3.ab2@20523>   OR.w lslimm,D1
000450BA <AmiBlitz3.ab2@20524>   CMP.w #$8,D2
000450BE <AmiBlitz3.ab2@20525>    BCS.w JL_0_C3CE
000450C2 <AmiBlitz3.ab2@20526>    BSR.w writeword
000450C4 <AmiBlitz3.ab2@20527>   SUBQ.w #8,D2
000450C8 <AmiBlitz3.ab2@20528>    BNE.w JL_0_C3AC
000450CC <AmiBlitz3.ab2@20529> BRA.w JL_0_C3DA
000450CE <AmiBlitz3.ab2@20532>   MOVE.w D2,D0
000450D0 <AmiBlitz3.ab2@20533>   LSL.w #8,D0
000450D2 <AmiBlitz3.ab2@20534>   LSL.w #1,D0
000450D4 <AmiBlitz3.ab2@20535>   OR.w D0,D1
000450D8 <AmiBlitz3.ab2@20536>   BSR.w writeword
000450DA <AmiBlitz3.ab2@20539> RTS
000450DE <AmiBlitz3.ab2@20544>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000450E0 <AmiBlitz3.ab2@20545>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000450E4 <AmiBlitz3.ab2@20549> mymaxlib:  Ds.l 1
000450E8 <AmiBlitz3.ab2@20553>   BSR.w JL_0_C340
000450EC <AmiBlitz3.ab2@20554>   LEA free(PC),A0
000450F0 <AmiBlitz3.ab2@20555>   LEA freef(PC),A1
000450F6 <AmiBlitz3.ab2@20556>   MOVE.w -$6(A2),$2(A0)
000450FA <AmiBlitz3.ab2@20557>   BSR.w pokecode
000450FE <AmiBlitz3.ab2@20558>   MOVE.l -$A(A2),D1
00045102 <AmiBlitz3.ab2@20561>   BEQ.w nosuperr
00045106 <AmiBlitz3.ab2@20562>   MOVEA.l mymaxlib(PC),A2
0004510A <AmiBlitz3.ab2@20563> BRA.w Amakelibsub
0004510E <AmiBlitz3.ab2@20568>   BSR.w JL_0_C340
00045114 <AmiBlitz3.ab2@20569>   LEA use,A0
0004511A <AmiBlitz3.ab2@20570>   LEA usef,A1
00045120 <AmiBlitz3.ab2@20571>   MOVE.w -$6(A2),$2(A0)
00045126 <AmiBlitz3.ab2@20572>   MOVE.w -$6(A2),-$2(A1)
0004512A <AmiBlitz3.ab2@20573>   ADDQ.w #4,-$2(A1)
0004512E <AmiBlitz3.ab2@20574>   BSR.w pokecode
00045132 <AmiBlitz3.ab2@20575>   MOVE.l -$E(A2),D1
00045136 <AmiBlitz3.ab2@20576> BRA.w maxjsr
0004513C <AmiBlitz3.ab2@20580>   JSR get1bytemain
00045142 <AmiBlitz3.ab2@20584>   MOVE.l firstiff,D0
00045146 <AmiBlitz3.ab2@20585>    BEQ.w noiferr
00045148 <AmiBlitz3.ab2@20586>   MOVEA.l D0,A0
0004514E <AmiBlitz3.ab2@20587>   CMPI.b #$1,$D(A0)
00045152 <AmiBlitz3.ab2@20588>    BEQ.w illelseerr
00045156 <AmiBlitz3.ab2@20589>   MOVE.w #$6000,D1
0004515C <AmiBlitz3.ab2@20591>     TST.b fast
00045160 <AmiBlitz3.ab2@20592>     BEQ 'l1
00045166 <AmiBlitz3.ab2@20593>     OR.l #$ff,d1
0004516A <AmiBlitz3.ab2@20594>     BSR writeword
0004516C <AmiBlitz3.ab2@20598>   SWAP D1
00045170 <AmiBlitz3.ab2@20599>   BSR.w writelong
00045172 <AmiBlitz3.ab2@20600>   MOVEQ.l #$00,D1
00045176 <AmiBlitz3.ab2@20601>   BSR.w AJL_0_D7B8
0004517E <AmiBlitz3.ab2@20602>   MOVE.l destpointer,$8(A0)
00045182 <AmiBlitz3.ab2@20603> BRA.w do_then
00045188 <AmiBlitz3.ab2@20607>   LEA ptr_parameterstore,A0
0004518A <AmiBlitz3.ab2@20608>   MOVE.l A0,-(A7)
0004518E <AmiBlitz3.ab2@20609>   BSR.w JL_0_C23A
00045192 <AmiBlitz3.ab2@20610> BRA.w handle_compileerror
00045196 <AmiBlitz3.ab2@20614>   BSR.w JL_0_BF6A
00045198 <AmiBlitz3.ab2@20615>   MOVEQ.l #$05,D1
000451A2 <AmiBlitz3.ab2@20617>   MOVE.w oldqflag,instringon
000451A8 <AmiBlitz3.ab2@20618>   MOVEA.l lastsourcepos,A5
000451AE <AmiBlitz3.ab2@20619>   LEA AJL_0_C25E,A0
000451B2 <AmiBlitz3.ab2@20620> BRA.w JL_0_C4B4
000451B8 <AmiBlitz3.ab2@20624>   LEA ptr_parameterstore,A0
000451BC <AmiBlitz3.ab2@20625>   BSR.w JL_0_C23A
000451C2 <AmiBlitz3.ab2@20626>   JSR get1bytemain
000451C6 <AmiBlitz3.ab2@20627>   BSR.w JL_0_CCA8
000451CC <AmiBlitz3.ab2@20628>   LEA namebuff2,A0
000451D0 <AmiBlitz3.ab2@20629>   BSR.w JL_0_C23A
000451D6 <AmiBlitz3.ab2@20630>   LEA AJL_0_C262,A0
000451D8 <AmiBlitz3.ab2@20633>   LSL.w #2,D1
000451DE <AmiBlitz3.ab2@20634>   LEA CIF_branches,A1
000451E2 <AmiBlitz3.ab2@20635>   MOVE.l $0(A1,D1.W),-(A7)
000451E4 <AmiBlitz3.ab2@20636>   MOVEQ.l #-$01,D1
000451E6 <AmiBlitz3.ab2@20639>   JSR (A0)
000451E8 <AmiBlitz3.ab2@20640>   MOVEA.l (A7)+,A1
000451EA <AmiBlitz3.ab2@20643> JMP (A1)
000451EE <AmiBlitz3.ab2@20647>   BEQ.w JL_0_C4F6
000451F2 <AmiBlitz3.ab2@20648> BRA.w JL_0_C4F4
000451F6 <AmiBlitz3.ab2@20652>   BNE.w JL_0_C4F6
000451FA <AmiBlitz3.ab2@20653> BRA.w JL_0_C4F4
000451FE <AmiBlitz3.ab2@20657>   BLT.w JL_0_C4F6
00045202 <AmiBlitz3.ab2@20658> BRA.w JL_0_C4F4
00045206 <AmiBlitz3.ab2@20662>   BLE.w JL_0_C4F6
0004520A <AmiBlitz3.ab2@20663> BRA.w JL_0_C4F4
0004520E <AmiBlitz3.ab2@20667>   BGT.w JL_0_C4F6
00045212 <AmiBlitz3.ab2@20668> BRA.w JL_0_C4F4
00045216 <AmiBlitz3.ab2@20672>   BGE.w JL_0_C4F6
00045218 <AmiBlitz3.ab2@20675>   MOVEQ.l #$00,D1
0004521E <AmiBlitz3.ab2@20678>   MOVEA.l concomsp,A0
00045224 <AmiBlitz3.ab2@20679>   MOVE.w skipcode,(A0)+
0004522A <AmiBlitz3.ab2@20680>   MOVE.l A0,concomsp
00045230 <AmiBlitz3.ab2@20681>   MOVE.w D1,skipcode
00045236 <AmiBlitz3.ab2@20682>   JSR get1bytemain
0004523A <AmiBlitz3.ab2@20683>    BNE.w syntaxerr
00045240 <AmiBlitz3.ab2@20684> JMP bakup
00045248 <AmiBlitz3.ab2@20688> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
0004524C <AmiBlitz3.ab2@20689> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00045250 <AmiBlitz3.ab2@20696>   MOVE.w #$FC17,D1
00045256 <AmiBlitz3.ab2@20697>   JSR uselib
0004525C <AmiBlitz3.ab2@20699>   JSR reget
00045260 <AmiBlitz3.ab2@20700>    BEQ.w do_Restore__resbeg
00045264 <AmiBlitz3.ab2@20701>   BSR.w JL_0_AE22                                          ;get label name!
00045268 <AmiBlitz3.ab2@20702>   MOVE.w rescode(PC),D1
0004526C <AmiBlitz3.ab2@20703>   BSR.w writeword
00045272 <AmiBlitz3.ab2@20704>   JSR addoff                                               ;add offset
00045276 <AmiBlitz3.ab2@20705>   MOVE.l $C(A2),D1
0004527A <AmiBlitz3.ab2@20706>   BSR.w writelong
0004527E <AmiBlitz3.ab2@20707>   MOVE.w rescode+6(PC),D1
00045282 <AmiBlitz3.ab2@20708>   BSR.w writeword
00045286 <AmiBlitz3.ab2@20709>   MOVE.l $4(A2),D1                                         ;is it outstanding?
0004528A <AmiBlitz3.ab2@20710>   BEQ.w do_Restore__no
0004528C <AmiBlitz3.ab2@20712>   MOVEA.l D1,A1
00045290 <AmiBlitz3.ab2@20713>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00045292 <AmiBlitz3.ab2@20714> RTS
00045294 <AmiBlitz3.ab2@20719> RTS
00045298 <AmiBlitz3.ab2@20722>   MOVE.w #$CD00,D1
0004529E <AmiBlitz3.ab2@20723>   JSR Atokejsr
000452A2 <AmiBlitz3.ab2@20724>   MOVE.l rescode2(PC),D1
000452A8 <AmiBlitz3.ab2@20725> JMP writelong
000452AC <AmiBlitz3.ab2@20729>   MOVE.w #$FC17,D1
000452B2 <AmiBlitz3.ab2@20730>   JSR uselib
000452B8 <AmiBlitz3.ab2@20733>   MOVE.l dataget,D1
000452BC <AmiBlitz3.ab2@20734>   BSR.w writelong
000452C0 <AmiBlitz3.ab2@20735>   BSR.w getparameter
000452C4 <AmiBlitz3.ab2@20736>   BSR.w JL_0_8E3C
000452C8 <AmiBlitz3.ab2@20737>   BSR.w calcvar
000452CC <AmiBlitz3.ab2@20738>   BTST #$E,D2
000452D0 <AmiBlitz3.ab2@20739>    BEQ.w JL_0_C5A6
000452D4 <AmiBlitz3.ab2@20740>   MOVE.b #$6,D2
000452D6 <AmiBlitz3.ab2@20743>   TST.b D2
000452DA <AmiBlitz3.ab2@20744>    BEQ.w noleterr
000452E0 <AmiBlitz3.ab2@20745>   TST.b debugmode
000452E4 <AmiBlitz3.ab2@20746>    BEQ.w JL_0_C5D0
000452E8 <AmiBlitz3.ab2@20747>   MOVE.w #$7000,D1
000452EA <AmiBlitz3.ab2@20748>   MOVE.b D2,D1
000452EE <AmiBlitz3.ab2@20749>   ANDI.b #$F,D1
000452F2 <AmiBlitz3.ab2@20750>   BSR.w writeword
000452F6 <AmiBlitz3.ab2@20751>   MOVE.w #$C310,D1
000452F8 <AmiBlitz3.ab2@20752>   MOVE.w D2,-(A7)
000452FC <AmiBlitz3.ab2@20753>   BSR.w Atokejsr
000452FE <AmiBlitz3.ab2@20754>   MOVE.w (A7)+,D2
00045302 <AmiBlitz3.ab2@20757>   CMP.b #$7,D2
00045306 <AmiBlitz3.ab2@20758>    BEQ.w JL_0_C684
0004530A <AmiBlitz3.ab2@20759>   CMP.b #$1,D2
0004530E <AmiBlitz3.ab2@20760>    BNE.w JL_0_C62A
00045314 <AmiBlitz3.ab2@20761>   LEA dataletb2,A0
0004531A <AmiBlitz3.ab2@20762>   LEA dataletb2f,A1
0004531E <AmiBlitz3.ab2@20763>   BTST #$F,D2
00045322 <AmiBlitz3.ab2@20764>    BEQ.w JL_0_C5FC
00045326 <AmiBlitz3.ab2@20765>   BSR.w pokecode
0004532A <AmiBlitz3.ab2@20766> BRA.w JL_0_C668
00045330 <AmiBlitz3.ab2@20769>   LEA dataletb,A0
00045336 <AmiBlitz3.ab2@20770>   LEA dataletbf,A1
0004533C <AmiBlitz3.ab2@20771>   TST.w varmode
00045340 <AmiBlitz3.ab2@20772>    BEQ.w JL_0_C61E
00045346 <AmiBlitz3.ab2@20773>   LEA dataletbl,A0
0004534C <AmiBlitz3.ab2@20774>   LEA dataletblf,A1
00045350 <AmiBlitz3.ab2@20777>   MOVE.w D3,$4(A0)
00045354 <AmiBlitz3.ab2@20778>   BSR.w pokecode
00045358 <AmiBlitz3.ab2@20779> BRA.w JL_0_C668
0004535E <AmiBlitz3.ab2@20782>   LEA dataletw,A0
00045362 <AmiBlitz3.ab2@20783>   CMP.b #$3,D2
00045366 <AmiBlitz3.ab2@20784>    BCS.w JL_0_C63E
0004536C <AmiBlitz3.ab2@20785>   LEA dataletl,A0
00045370 <AmiBlitz3.ab2@20788>   BTST #$F,D2
00045374 <AmiBlitz3.ab2@20789>    BEQ.w JL_0_C652
00045378 <AmiBlitz3.ab2@20790>   MOVE.w $4(A0),D1
0004537C <AmiBlitz3.ab2@20791>    BSR.w writeword
00045380 <AmiBlitz3.ab2@20792> BRA.w JL_0_C668
00045386 <AmiBlitz3.ab2@20795>   TST.w varmode
0004538A <AmiBlitz3.ab2@20796>    BEQ.w JL_0_C65E
0004538C <AmiBlitz3.ab2@20797>   ADDQ.w #6,A0
00045390 <AmiBlitz3.ab2@20800>   MOVE.w D3,$2(A0)
00045392 <AmiBlitz3.ab2@20801>   MOVE.l (A0),D1
00045396 <AmiBlitz3.ab2@20802>   BSR.w writelong
0004539C <AmiBlitz3.ab2@20805>   MOVE.l dataput,D1
000453A0 <AmiBlitz3.ab2@20806>    BSR.w writelong
000453A4 <AmiBlitz3.ab2@20807>   CMP.w #$2C,D0
000453A8 <AmiBlitz3.ab2@20808>    BEQ.w JL_0_C67C
000453AA <AmiBlitz3.ab2@20809> RTS
000453B0 <AmiBlitz3.ab2@20812>   JSR get1bytemain
000453B4 <AmiBlitz3.ab2@20813> BRA.w JL_0_C584
000453BA <AmiBlitz3.ab2@20817>   MOVE.w stlenget,D1
000453BE <AmiBlitz3.ab2@20818>    BSR.w writeword
000453C2 <AmiBlitz3.ab2@20819>   BTST #$F,D2
000453C6 <AmiBlitz3.ab2@20820>    BNE.w JL_0_C6C0
000453CC <AmiBlitz3.ab2@20821>   TST.w varmode
000453D0 <AmiBlitz3.ab2@20822>    BEQ.w JL_0_C6B0
000453D6 <AmiBlitz3.ab2@20823>   MOVE.w D3,leaampl+2
000453DC <AmiBlitz3.ab2@20824>   MOVE.l leaampl,D1
000453E0 <AmiBlitz3.ab2@20825> BRA.w JL_0_C6BC
000453E6 <AmiBlitz3.ab2@20828>   MOVE.w D3,leaamp+2
000453EC <AmiBlitz3.ab2@20829>   MOVE.l leaamp,D1
000453F0 <AmiBlitz3.ab2@20832>   BSR.w writelong
000453F4 <AmiBlitz3.ab2@20835>   MOVE.w #$C701,D1
000453FA <AmiBlitz3.ab2@20836>   MOVE.w varmode,D2
000453FE <AmiBlitz3.ab2@20837>    BEQ.w JL_0_C6D0
00045400 <AmiBlitz3.ab2@20838>   SUBQ.w #1,D1
00045404 <AmiBlitz3.ab2@20841>   BSR.w Atokejsr
0004540C <AmiBlitz3.ab2@20842>   MOVE.w #$FFFF,lasta6
00045412 <AmiBlitz3.ab2@20843>   LEA stalign,A0
00045418 <AmiBlitz3.ab2@20844>   LEA stalignf,A1
0004541C <AmiBlitz3.ab2@20845>   BSR.w pokecode
00045420 <AmiBlitz3.ab2@20846> BRA.w JL_0_C668
00045424 <AmiBlitz3.ab2@20850>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00045428 <AmiBlitz3.ab2@20851>    BNE.w JL_0_C720
0004542E <AmiBlitz3.ab2@20852>   JSR get1bytemain
00045432 <AmiBlitz3.ab2@20853>   CMP.w #$77,D0
00045436 <AmiBlitz3.ab2@20854>    BEQ.w JL_0_C71C
0004543A <AmiBlitz3.ab2@20855>   CMP.w #$62,D0
0004543E <AmiBlitz3.ab2@20856>    BEQ.w JL_0_C718
00045442 <AmiBlitz3.ab2@20857>   CMP.w #"s",d0
00045446 <AmiBlitz3.ab2@20858>   BEQ single3
0004544A <AmiBlitz3.ab2@20859>   CMP.w #"d",d0
0004544E <AmiBlitz3.ab2@20860>   BEQ double3
00045452 <AmiBlitz3.ab2@20861>   CMP.w #$6C,D0
00045456 <AmiBlitz3.ab2@20862>    BNE.w syntaxerr
00045458 <AmiBlitz3.ab2@20863>   MOVEQ.l #$02,D1
0004545A <AmiBlitz3.ab2@20864> RTS
00045462 <AmiBlitz3.ab2@20868>   MOVE.b #1,iee
00045464 <AmiBlitz3.ab2@20869>   MOVEQ.l #$3,d1
00045466 <AmiBlitz3.ab2@20870> RTS
0004546E <AmiBlitz3.ab2@20874>   MOVE.b #1,iee
00045470 <AmiBlitz3.ab2@20875>   MOVEQ.l #$4,d1
00045472 <AmiBlitz3.ab2@20876> RTS
00045474 <AmiBlitz3.ab2@20880>   MOVEQ.l #$00,D1
00045476 <AmiBlitz3.ab2@20881> RTS
00045478 <AmiBlitz3.ab2@20885>   MOVEQ.l #$01,D1
0004547A <AmiBlitz3.ab2@20886> RTS
0004547C <AmiBlitz3.ab2@20890>   MOVEQ.l #$01,D1
00045482 <AmiBlitz3.ab2@20891> JMP bakup
00045486 <AmiBlitz3.ab2@20895>   BSR.w JL_0_C6F0
00045488 <AmiBlitz3.ab2@20897>   MOVE.w D1,-(A7)
0004548C <AmiBlitz3.ab2@20898>    BSR.w AJL_0_BF6E
00045490 <AmiBlitz3.ab2@20899>   CMP.w #$2C,D0
00045494 <AmiBlitz3.ab2@20900>    BNE.w syntaxerr
00045496 <AmiBlitz3.ab2@20901>   MOVE.l D3,-(A7)
0004549A <AmiBlitz3.ab2@20902>    BSR.w AJL_0_BF6E
0004549C <AmiBlitz3.ab2@20903>   MOVE.l D3,D1
0004549E <AmiBlitz3.ab2@20904>   MOVE.l (A7)+,D3
000454A0 <AmiBlitz3.ab2@20905>   MOVE.w (A7)+,D2
000454A4 <AmiBlitz3.ab2@20906>    BEQ.w JL_0_C774
000454A8 <AmiBlitz3.ab2@20910>   CMP.w #$1,D2
000454AC <AmiBlitz3.ab2@20911>    BEQ.w JL_0_C768
000454AE <AmiBlitz3.ab2@20914>   SWAP D1
000454B2 <AmiBlitz3.ab2@20915>    BSR.w writeword
000454B4 <AmiBlitz3.ab2@20916>   SWAP D1
000454B8 <AmiBlitz3.ab2@20917>    BSR.w writeword
000454BA <AmiBlitz3.ab2@20918>   SUBQ.l #1,D3
000454BE <AmiBlitz3.ab2@20919>    BNE.w JL_0_C754
000454C0 <AmiBlitz3.ab2@20920> RTS
000454C4 <AmiBlitz3.ab2@20923>    BSR.w writeword
000454C6 <AmiBlitz3.ab2@20924>   SUBQ.l #1,D3
000454CA <AmiBlitz3.ab2@20925>    BNE.w JL_0_C768
000454CC <AmiBlitz3.ab2@20926> RTS
000454D0 <AmiBlitz3.ab2@20929>    BSR.w writebyte
000454D2 <AmiBlitz3.ab2@20930>   SUBQ.l #1,D3
000454D6 <AmiBlitz3.ab2@20931>    BNE.w JL_0_C774
000454D8 <AmiBlitz3.ab2@20932> RTS
000454DC <AmiBlitz3.ab2@20936>   BSR.w JL_0_C6F0                                          ;definestorage
000454DE <AmiBlitz3.ab2@20937>   MOVE.w D1,-(A7)
000454E2 <AmiBlitz3.ab2@20938>   BSR.w AJL_0_BF6E
000454E4 <AmiBlitz3.ab2@20939>   MOVE.w (A7)+,D1
000454E6 <AmiBlitz3.ab2@20940>   LSL.l D1,D3
000454E8 <AmiBlitz3.ab2@20941>   MOVE.l d3,d0
000454EC <AmiBlitz3.ab2@20942>   BEQ 'll5
000454EE <AmiBlitz3.ab2@20943>   MOVEQ #0,d1
000454F4 <AmiBlitz3.ab2@20946>     JSR writebyte
000454F6 <AmiBlitz3.ab2@20947>     SUBQ.l #1,d3
000454FA <AmiBlitz3.ab2@20948>   BNE.s 'll10
000454FC <AmiBlitz3.ab2@20951> RTS
000454FE <AmiBlitz3.ab2@20955>   MOVE.w D0,-(A7)
00045504 <AmiBlitz3.ab2@20956>   LEA dummyasm,A0
0004550A <AmiBlitz3.ab2@20957>   MOVEA.l destpointer,A1
00045514 <AmiBlitz3.ab2@20958>   MOVE.w asmlen2,asmlen
0004551A <AmiBlitz3.ab2@20959>   JSR insasm
0004551C <AmiBlitz3.ab2@20960>   MOVE.w (A7)+,D0
0004551E <AmiBlitz3.ab2@20961> RTS
00045522 <AmiBlitz3.ab2@20965>   BSR.w JL_0_C6F0
0004552C <AmiBlitz3.ab2@20967>   MOVE.l #ptr_parameterstore,asmbuff
0004552E <AmiBlitz3.ab2@20968>   TST.w D1
00045532 <AmiBlitz3.ab2@20969>    BEQ.w JL_0_C7EE
00045536 <AmiBlitz3.ab2@20970>   CMP.w #$1,D1
0004553A <AmiBlitz3.ab2@20971>    BEQ.w JL_0_C844
0004553E <AmiBlitz3.ab2@20972>   CMP.w #$2,d1
00045542 <AmiBlitz3.ab2@20973>    BEQ long
00045546 <AmiBlitz3.ab2@20974>   CMP.w #$3,d1
0004554A <AmiBlitz3.ab2@20975>    BEQ single
0004554C <AmiBlitz3.ab2@20976>    MOVEQ.l #$0d,D3
00045552 <AmiBlitz3.ab2@20982>    JSR asmconst
00045556 <AmiBlitz3.ab2@20983>    BSR.w JL_0_C796
0004555A <AmiBlitz3.ab2@20984>    BSR.w writelong
0004555E <AmiBlitz3.ab2@20985>    BSR   writelong
00045562 <AmiBlitz3.ab2@20986>   CMP.w #$2C,D0
00045566 <AmiBlitz3.ab2@20987>    BEQ.w JL_0_C7D8b
00045568 <AmiBlitz3.ab2@20988> RTS
0004556A <AmiBlitz3.ab2@20992>   MOVEQ.l #$0B,D3
00045572 <AmiBlitz3.ab2@20996>   MOVE.b #1,_dcb
00045578 <AmiBlitz3.ab2@20999>   JSR asmconst
0004557E <AmiBlitz3.ab2@21000>   CLR.b _dcb
00045582 <AmiBlitz3.ab2@21001>   BSR.w JL_0_C796
00045586 <AmiBlitz3.ab2@21002>   BSR writebyte
0004558A <AmiBlitz3.ab2@21003>   BSR writebyte
0004558E <AmiBlitz3.ab2@21004>   BSR writebyte                                            ;long
00045592 <AmiBlitz3.ab2@21005>   BSR writebyte
00045596 <AmiBlitz3.ab2@21006>   CMP.w #$2C,D0
0004559A <AmiBlitz3.ab2@21007>    BEQ.w JL_0_C7D8
0004559C <AmiBlitz3.ab2@21008> RTS
0004559E <AmiBlitz3.ab2@21012>   MOVEQ.l #$0c,D3
000455A6 <AmiBlitz3.ab2@21016>   MOVE.b #1,_dcb
000455AC <AmiBlitz3.ab2@21019>   JSR asmconst
000455B2 <AmiBlitz3.ab2@21020>   CLR.b _dcb
000455B6 <AmiBlitz3.ab2@21021>   BSR.w JL_0_C796
000455BA <AmiBlitz3.ab2@21022>   BSR.w writebyte
000455BE <AmiBlitz3.ab2@21023>   BSR.w writebyte
000455C2 <AmiBlitz3.ab2@21024>   BSR.w writebyte
000455C6 <AmiBlitz3.ab2@21025>   BSR.w writebyte
000455CA <AmiBlitz3.ab2@21026>   CMP.w #$2C,D0
000455CE <AmiBlitz3.ab2@21027>    BEQ.w JL_0_C7D8a
000455D0 <AmiBlitz3.ab2@21028> RTS
000455D2 <AmiBlitz3.ab2@21033>   MOVEQ.l #$11,D3
000455D8 <AmiBlitz3.ab2@21036>   JSR get1bytemain
000455DC <AmiBlitz3.ab2@21037>   CMP.w #$22,D0
000455E0 <AmiBlitz3.ab2@21038>    BNE.w JL_0_C81E
000455E2 <AmiBlitz3.ab2@21041>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
000455E6 <AmiBlitz3.ab2@21042>    BEQ.w syntaxerr
000455EA <AmiBlitz3.ab2@21043>   CMP.w #$22,D0
000455EE <AmiBlitz3.ab2@21044>    BEQ.w JL_0_C816
000455F2 <AmiBlitz3.ab2@21045>   CMP.b #"\",d0
000455F6 <AmiBlitz3.ab2@21046>    BNE 'n1
000455FA <AmiBlitz3.ab2@21047>   CMP.b #"\",(a5)
000455FE <AmiBlitz3.ab2@21048>    BEQ 'do1
00045600 <AmiBlitz3.ab2@21051>   MOVE.w D0,D1
00045604 <AmiBlitz3.ab2@21052>   BSR.w writebyte
00045608 <AmiBlitz3.ab2@21053> BRA.w JL_0_C7FC
00045610 <AmiBlitz3.ab2@21056>   CMP.l #"__DA",1(a5)
00045614 <AmiBlitz3.ab2@21057>    BNE 'nodate1
0004561C <AmiBlitz3.ab2@21058>   CMP.l #"TE__",5(a5)
00045620 <AmiBlitz3.ab2@21059>    BEQ 'c1
00045628 <AmiBlitz3.ab2@21060>   CMP.l #"TE_G",5(a5)
0004562C <AmiBlitz3.ab2@21061>    BNE 'nodate1
00045634 <AmiBlitz3.ab2@21062>   CMP.l #"ER__",9(a5)
00045638 <AmiBlitz3.ab2@21063>    BNE 'nodate1
0004563E <AmiBlitz3.ab2@21064>   JSR compiledatedc_ger
00045642 <AmiBlitz3.ab2@21065> BRA 'n1
00045648 <AmiBlitz3.ab2@21068>   JSR compiledatedc
0004564C <AmiBlitz3.ab2@21069> BRA 'n1
00045654 <AmiBlitz3.ab2@21072>   CMP.l #"__VE",1(a5)
00045658 <AmiBlitz3.ab2@21073>    BNE 'n1
0004565E <AmiBlitz3.ab2@21074>   CMP.w #"R_",5(a5)
00045662 <AmiBlitz3.ab2@21075>    BNE 'n1
00045668 <AmiBlitz3.ab2@21076>   JSR version_string_dc
0004566C <AmiBlitz3.ab2@21077> BRA.w JL_0_C7FC
00045672 <AmiBlitz3.ab2@21081>   CLR.w instringon
00045678 <AmiBlitz3.ab2@21082>   JSR get1bytemain
0004567C <AmiBlitz3.ab2@21083> BRA.w JL_0_C83A
00045686 <AmiBlitz3.ab2@21088>    MOVE.w oldqflag,instringon
0004568C <AmiBlitz3.ab2@21089>   MOVEA.l lastsourcepos,A5
00045692 <AmiBlitz3.ab2@21090>    JSR asmconst
00045698 <AmiBlitz3.ab2@21091>   SUBQ.l #1,destpointer
0004569C <AmiBlitz3.ab2@21092>    BSR.w JL_0_C796
000456A2 <AmiBlitz3.ab2@21093>   ADDQ.l #1,destpointer
000456A6 <AmiBlitz3.ab2@21094>    BSR.w writebyte
000456AA <AmiBlitz3.ab2@21097>   CMP.w #$2C,D0
000456AE <AmiBlitz3.ab2@21098>    BEQ.w JL_0_C7F0
000456B0 <AmiBlitz3.ab2@21099> RTS
000456B2 <AmiBlitz3.ab2@21103>   MOVEQ.l #$10,D3
000456BA <AmiBlitz3.ab2@21109>   MOVE.b #1,_dcb
000456C0 <AmiBlitz3.ab2@21110>   JSR asmconst
000456C6 <AmiBlitz3.ab2@21111>   CLR.b _dcb
000456CA <AmiBlitz3.ab2@21112>   BSR.w JL_0_C796
000456CE <AmiBlitz3.ab2@21113>   BSR.w writebyte
000456D2 <AmiBlitz3.ab2@21114>   BSR.w writebyte
000456D6 <AmiBlitz3.ab2@21115>   CMP.w #$2C,D0
000456DA <AmiBlitz3.ab2@21116>    BEQ.w JL_0_C84A
000456DC <AmiBlitz3.ab2@21117> RTS
000456E2 <AmiBlitz3.ab2@21121>   ADDQ.l #3,destpointer
000456EA <AmiBlitz3.ab2@21122>   ANDI.w #$FFFC,destpointer+2
000456EC <AmiBlitz3.ab2@21123> RTS
000456F2 <AmiBlitz3.ab2@21127>   ADDQ.l #7,destpointer
000456FA <AmiBlitz3.ab2@21128>   ANDI.w #$FFF8,destpointer+2
000456FC <AmiBlitz3.ab2@21129> RTS
00045702 <AmiBlitz3.ab2@21133>   ADDQ.l #1,destpointer                                    ;even
0004570A <AmiBlitz3.ab2@21134>   BCLR #$0,destpointer+3
0004570C <AmiBlitz3.ab2@21135> RTS
0004570E <AmiBlitz3.ab2@21138> datasize: Ds.w 1
00045714 <AmiBlitz3.ab2@21148>   TST.b debugmode
00045718 <AmiBlitz3.ab2@21149>   BEQ.w pdt__skip
0004571C <AmiBlitz3.ab2@21150>   MOVE.w #$4420,D0                                         ;'D '
00045720 <AmiBlitz3.ab2@21151>   MOVE.b datasize+1(PC),D0
00045724 <AmiBlitz3.ab2@21152> BRA.w JL_0_C1E6
00045726 <AmiBlitz3.ab2@21155> RTS
0004572A <AmiBlitz3.ab2@21159>   MOVE.w #$FC17,D1
00045730 <AmiBlitz3.ab2@21160>    JSR uselib
0004573A <AmiBlitz3.ab2@21162>    MOVE.w oldqflag,instringon
00045740 <AmiBlitz3.ab2@21163>   MOVEA.l lastsourcepos,A5
00045746 <AmiBlitz3.ab2@21164>    JSR AJL_0_498A
0004574C <AmiBlitz3.ab2@21165>   MOVE.w D1,datasize
00045750 <AmiBlitz3.ab2@21166>   CMP.w #$7,D1
00045754 <AmiBlitz3.ab2@21167>    BEQ.w JL_0_C944
00045756 <AmiBlitz3.ab2@21168>   MOVE.w D1,-(A7)
0004575A <AmiBlitz3.ab2@21171>   BSR.w pdt
0004575C <AmiBlitz3.ab2@21172>   MOVE.w (A7),D2
00045760 <AmiBlitz3.ab2@21173>    BSR.w JL_0_B1D8
00045762 <AmiBlitz3.ab2@21174>   CMP.w (A7),D2                                            ;datamode
00045766 <AmiBlitz3.ab2@21175>    BEQ.w JL_0_C920
00045768 <AmiBlitz3.ab2@21176>   MOVE.w D2,D1
0004576A <AmiBlitz3.ab2@21177>   MOVE.w (A7),D2
0004576E <AmiBlitz3.ab2@21178>   CMP.w #$2,D2
00045772 <AmiBlitz3.ab2@21179>    BNE.w JL_0_C8FE
00045776 <AmiBlitz3.ab2@21180>   CMP.w #$3,D1
0004577A <AmiBlitz3.ab2@21181>    BNE.w baddaterr
00045780 <AmiBlitz3.ab2@21182>   CMP.l #$10000,D3
00045784 <AmiBlitz3.ab2@21183>    BCC.w baddaterr
00045788 <AmiBlitz3.ab2@21184> BRA.w JL_0_C920
0004578C <AmiBlitz3.ab2@21187>   CMP.w #$1,D2
00045790 <AmiBlitz3.ab2@21188>    BNE.w JL_0_C91C
00045794 <AmiBlitz3.ab2@21189>   CMP.w #$2,D1
00045798 <AmiBlitz3.ab2@21190>    BNE.w baddaterr
0004579E <AmiBlitz3.ab2@21191>   CMP.l #$100,D3
000457A2 <AmiBlitz3.ab2@21192>    BCC.w baddaterr
000457A6 <AmiBlitz3.ab2@21193> BRA.w JL_0_C920
000457AA <AmiBlitz3.ab2@21196> BRA.w baddaterr
000457AE <AmiBlitz3.ab2@21199>   CMP.w #$3,D2
000457B2 <AmiBlitz3.ab2@21200>   BCC.w JL_0_C930
000457B6 <AmiBlitz3.ab2@21201>   BSR.w JL_0_C1E6
000457BA <AmiBlitz3.ab2@21202> BRA.w JL_0_C934
000457C0 <AmiBlitz3.ab2@21205>   TST.b iee
000457C4 <AmiBlitz3.ab2@21206>   BEQ 'old
000457C8 <AmiBlitz3.ab2@21207>   CMP.b #5,d2
000457CC <AmiBlitz3.ab2@21208>   BNE 'old
000457D0 <AmiBlitz3.ab2@21209>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
000457D4 <AmiBlitz3.ab2@21213>   BSR.w JL_0_C1DE                                          ;write data >3
000457DA <AmiBlitz3.ab2@21216>   JSR reget
000457DE <AmiBlitz3.ab2@21217>   CMP.w #$2C,D0
000457E2 <AmiBlitz3.ab2@21218>    BEQ.w JL_0_C8CC
000457E4 <AmiBlitz3.ab2@21219>   ADDQ.w #2,A7
000457E6 <AmiBlitz3.ab2@21220> RTS
000457EA <AmiBlitz3.ab2@21223>    BSR.w pdt
000457F0 <AmiBlitz3.ab2@21224>   MOVE.l data2,-(A7)
000457F4 <AmiBlitz3.ab2@21225>    BSR.w JL_0_C1DE
000457F6 <AmiBlitz3.ab2@21226>   MOVEQ.l #$00,D1
000457FC <AmiBlitz3.ab2@21227>    JSR get1bytemain
00045800 <AmiBlitz3.ab2@21228>    BEQ.w JL_0_C9A6
00045804 <AmiBlitz3.ab2@21229>   CMP.w #$22,D0
00045808 <AmiBlitz3.ab2@21230>    BEQ.w JL_0_C988
0004580C <AmiBlitz3.ab2@21231>   CMP.w #$2C,D0
00045810 <AmiBlitz3.ab2@21232>    BEQ.w JL_0_C9A6
00045814 <AmiBlitz3.ab2@21235>    BSR.w JL_0_C210
00045816 <AmiBlitz3.ab2@21236>   ADDQ.w #1,D1
0004581C <AmiBlitz3.ab2@21237>    JSR getchar
0004581E <AmiBlitz3.ab2@21238>   TST.w D0
00045822 <AmiBlitz3.ab2@21239>    BEQ.w JL_0_C9A6
00045826 <AmiBlitz3.ab2@21240>   CMP.w #$2C,D0
0004582A <AmiBlitz3.ab2@21241>    BEQ.w JL_0_C9A6
0004582E <AmiBlitz3.ab2@21242> BRA.w JL_0_C96C
00045830 <AmiBlitz3.ab2@21246>    MOVEQ #0,d0
00045832 <AmiBlitz3.ab2@21247>    MOVE.b (a5)+,d0
00045836 <AmiBlitz3.ab2@21248>    BEQ.w notqerr2
0004583A <AmiBlitz3.ab2@21249>   CMP.w #$22,D0
0004583E <AmiBlitz3.ab2@21250>    BEQ.w JL_0_C9A2
00045842 <AmiBlitz3.ab2@21251>    BSR.w JL_0_C210
00045844 <AmiBlitz3.ab2@21252>   ADDQ.w #1,D1
00045848 <AmiBlitz3.ab2@21253> BRA.w JL_0_C988
0004584E <AmiBlitz3.ab2@21254> notqerr2 JMP notqerr
00045854 <AmiBlitz3.ab2@21256>   CLR.w instringon
0004585A <AmiBlitz3.ab2@21257>   JSR get1bytemain
0004585C <AmiBlitz3.ab2@21260>   MOVEA.l (A7)+,A0
00045862 <AmiBlitz3.ab2@21261>   MOVE.w dontwrite,D2
00045866 <AmiBlitz3.ab2@21262>    BNE.w JL_0_C9B4
00045868 <AmiBlitz3.ab2@21263>   MOVE.l D1,(A0)
0004586E <AmiBlitz3.ab2@21266>   ADDQ.l #1,data2
00045876 <AmiBlitz3.ab2@21267>   BCLR #$0,data2+3
0004587A <AmiBlitz3.ab2@21268>   CMP.w #$2C,D0
0004587E <AmiBlitz3.ab2@21269>    BEQ.w JL_0_C944
00045880 <AmiBlitz3.ab2@21270> RTS
00045886 <AmiBlitz3.ab2@21274> JMP vardeclareerr
0004588C <AmiBlitz3.ab2@21277>   MOVE.w proceduremode,D1                                  ;doshared
00045890 <AmiBlitz3.ab2@21279>   BNE.w 'l1
00045892 <AmiBlitz3.ab2@21280>   MOVE.w D1,-(A7)
00045898 <AmiBlitz3.ab2@21281>   CLR.w proceduremode
0004589E <AmiBlitz3.ab2@21284>   LEA varbase,a2
000458A2 <AmiBlitz3.ab2@21285>   BSR.w getparameter
000458A4 <AmiBlitz3.ab2@21286>   MOVE.w d2,-(a7)
000458AA <AmiBlitz3.ab2@21287>    JSR findvariable
000458AE <AmiBlitz3.ab2@21288>    BEQ 'checkdim
000458B4 <AmiBlitz3.ab2@21289>    LEA sharebase,a2
000458B6 <AmiBlitz3.ab2@21290>    MOVEQ #$f+4,d7
000458BA <AmiBlitz3.ab2@21291>    BSR.w findlab                                         ;find var
000458BE <AmiBlitz3.ab2@21292>    BEQ.b dupsherr
000458C2 <AmiBlitz3.ab2@21293>    BSR addlabel
000458C6 <AmiBlitz3.ab2@21294>    CMP.b #".",d0
000458CA <AmiBlitz3.ab2@21295>    BNE JUMP_vardeclareerr
000458CC <AmiBlitz3.ab2@21296>    MOVE.l a2,a3
000458D2 <AmiBlitz3.ab2@21297>    JSR JL_0_8EB8b
000458D4 <AmiBlitz3.ab2@21328>   MOVE.w (a7)+,d2
000458D8 <AmiBlitz3.ab2@21329>    CMP.b #",",d0
000458DC <AmiBlitz3.ab2@21330>    BNE 'ret
000458E2 <AmiBlitz3.ab2@21331>    JSR get1bytemain
000458E6 <AmiBlitz3.ab2@21332> BRA 'again2
000458EC <AmiBlitz3.ab2@21335>   MOVE.w (A7)+,proceduremode
000458EE <AmiBlitz3.ab2@21336> RTS
000458F4 <AmiBlitz3.ab2@21343>    CMP.w #2,6(a2)
000458F8 <AmiBlitz3.ab2@21344>    BEQ 'do
000458FE <AmiBlitz3.ab2@21345>    CMP.w #$102,6(a2)
00045902 <AmiBlitz3.ab2@21346>    BEQ 'do
00045908 <AmiBlitz3.ab2@21347> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0004590E <AmiBlitz3.ab2@21350>   LEA varbase,a0
00045910 <AmiBlitz3.ab2@21353>   MOVE.l (A0),D0                                           ;find label
00045914 <AmiBlitz3.ab2@21354>    BEQ.b 'z1
00045916 <AmiBlitz3.ab2@21355>    CMP.l d0,a2
0004591A <AmiBlitz3.ab2@21356>    BEQ 'z1
0004591C <AmiBlitz3.ab2@21357>    MOVE.l d0,a0
00045920 <AmiBlitz3.ab2@21358> BRA 'm1
00045922 <AmiBlitz3.ab2@21361>   MOVE.l (a2),d1
00045924 <AmiBlitz3.ab2@21362>     MOVE.l d1,(a0)
00045926 <AmiBlitz3.ab2@21363>     CLR.l (a2)
0004592C <AmiBlitz3.ab2@21364>     LEA sharebase,a0
0004592E <AmiBlitz3.ab2@21365>     MOVE.l (a0),(a2)
00045930 <AmiBlitz3.ab2@21366>     MOVE.l a2,(a0)
00045936 <AmiBlitz3.ab2@21367>     JSR get1bytemain
0004593C <AmiBlitz3.ab2@21368>     JSR get1bytemain
00045940 <AmiBlitz3.ab2@21369> BRA 'domore
00045948 <AmiBlitz3.ab2@21372>   MOVE.b #1,nowdeclare
0004594A <AmiBlitz3.ab2@21373>   MOVE.w D1,-(A7)
00045950 <AmiBlitz3.ab2@21374>   CLR.w proceduremode
00045954 <AmiBlitz3.ab2@21377>    BSR.w getparameter
00045956 <AmiBlitz3.ab2@21378>   MOVE.w D2,-(A7)
0004595C <AmiBlitz3.ab2@21379>   LEA firstglob,A2
00045960 <AmiBlitz3.ab2@21380>    BSR.w findvariable2
00045964 <AmiBlitz3.ab2@21381>    BNE.b JL_0_CA06
0004596A <AmiBlitz3.ab2@21384>   MOVE.b flagmask+1,D1
0004596E <AmiBlitz3.ab2@21385>   MOVE.b $7(A2),D3
00045970 <AmiBlitz3.ab2@21386>   EOR.b D3,D1
00045974 <AmiBlitz3.ab2@21387>    BEQ.w dupsherr
00045978 <AmiBlitz3.ab2@21388>    BSR.w findlab
0004597C <AmiBlitz3.ab2@21389>    BEQ.b JL_0_C9F0
00045980 <AmiBlitz3.ab2@21392>    BSR.w addlabel
00045982 <AmiBlitz3.ab2@21393>   MOVE.w (A7)+,D2
00045984 <AmiBlitz3.ab2@21394>   MOVE.l A2,-(A7)
00045988 <AmiBlitz3.ab2@21395>    BSR.w JL_0_8E3C
0004598A <AmiBlitz3.ab2@21396>   MOVEA.l (A7)+,A2
0004598C <AmiBlitz3.ab2@21397>   MOVEQ.l #$04,D1
0004598E <AmiBlitz3.ab2@21398>   ADDQ.w #4,A2
00045990 <AmiBlitz3.ab2@21399>   ADDQ.w #4,A3
00045992 <AmiBlitz3.ab2@21402>     MOVE.w (A3)+,(A2)+
00045996 <AmiBlitz3.ab2@21403>   DBF D1,JL_0_CA1A
0004599E <AmiBlitz3.ab2@21405>   BTST #$1,flagmask+1
000459A2 <AmiBlitz3.ab2@21406>    BEQ.w JL_0_CA3C
000459A8 <AmiBlitz3.ab2@21407>    JSR get1bytemain
000459AC <AmiBlitz3.ab2@21408>   CMP.w #$29,D0
000459B0 <AmiBlitz3.ab2@21409>    BNE.w syntaxerrc
000459B6 <AmiBlitz3.ab2@21410>    JSR get1bytemain
000459BA <AmiBlitz3.ab2@21413>    CMP.w #$2C,D0
000459BE <AmiBlitz3.ab2@21414>    BNE.w JL_0_CA4C
000459C4 <AmiBlitz3.ab2@21415>    JSR get1bytemain
000459C8 <AmiBlitz3.ab2@21416> BRA.w JL_0_C9DE
000459CE <AmiBlitz3.ab2@21419>   MOVE.w (A7)+,proceduremode
000459D0 <AmiBlitz3.ab2@21420> RTS
000459D6 <AmiBlitz3.ab2@21422> syntaxerrc JMP syntaxerr
000459DA <AmiBlitz3.ab2@21425>    BSR.w JL_0_C05C
000459E0 <AmiBlitz3.ab2@21426>    JSR check_incdir                                        ; ergebnis in d2
000459E6 <AmiBlitz3.ab2@21428>    LEA ptr_parameterstore,a1
000459E8 <AmiBlitz3.ab2@21429>    MOVE.l d2,-(a7)
000459EE <AmiBlitz3.ab2@21430>    LEA includetemp,a0                                      ; filename in includetemp packen
000459F0 <AmiBlitz3.ab2@21433>      MOVE.b (a1)+,(a0)+
000459F4 <AmiBlitz3.ab2@21434>    BNE 'l4
000459FA <AmiBlitz3.ab2@21436>    LEA ptr_parameterstore,a1
000459FC <AmiBlitz3.ab2@21437>    MOVE.l a1,a0
000459FE <AmiBlitz3.ab2@21440>     TST.b (a0)+
00045A02 <AmiBlitz3.ab2@21441>    BNE 'l1
00045A04 <AmiBlitz3.ab2@21444>      MOVE.b -(a0),d0
00045A08 <AmiBlitz3.ab2@21445>      CMP.b #":",d0
00045A0C <AmiBlitz3.ab2@21446>       BEQ 'out
00045A10 <AmiBlitz3.ab2@21447>      CMP.b #"/",d0
00045A14 <AmiBlitz3.ab2@21448>       BEQ 'out
00045A16 <AmiBlitz3.ab2@21449>      CMP.l a1,a0
00045A1A <AmiBlitz3.ab2@21450>       BEQ 'out2
00045A1E <AmiBlitz3.ab2@21451> BRA 'l2
00045A20 <AmiBlitz3.ab2@21454>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00045A22 <AmiBlitz3.ab2@21457>    MOVEQ.l #-$01,D2
00045A24 <AmiBlitz3.ab2@21460>      ADDQ.w #1,D2
00045A26 <AmiBlitz3.ab2@21461>      MOVE.b (a0)+,(a1)+
00045A2A <AmiBlitz3.ab2@21462>    BNE 'l3
00045A2C <AmiBlitz3.ab2@21463>    CLR.b (a1)+
00045A32 <AmiBlitz3.ab2@21465>    LEA ptr_parameterstore,a1
00045A36 <AmiBlitz3.ab2@21466>    BSR.w findxinc                                         ;find include
00045A3A <AmiBlitz3.ab2@21467>     BEQ.w 'outb
00045A3C <AmiBlitz3.ab2@21469>    MOVE.w D2,-(A7)
00045A40 <AmiBlitz3.ab2@21470>    BSR.w addlabel
00045A42 <AmiBlitz3.ab2@21471>    MOVE.w (A7)+,D2
00045A48 <AmiBlitz3.ab2@21473>    LEA ptr_parameterstore,a1
00045A4E <AmiBlitz3.ab2@21474>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00045A50 <AmiBlitz3.ab2@21477>     MOVE.b (a0)+,(a1)+
00045A54 <AmiBlitz3.ab2@21478>    BNE 'l4b
00045A56 <AmiBlitz3.ab2@21480>    MOVE.l (a7)+,d2
00045A5C <AmiBlitz3.ab2@21481>    LEA ptr_parameterstore,a1
00045A60 <AmiBlitz3.ab2@21482> BRA.w JL_0_CB18
00045A66 <AmiBlitz3.ab2@21485>    LEA ptr_parameterstore,a1
00045A6C <AmiBlitz3.ab2@21486>    LEA includetemp,a0
00045A6E <AmiBlitz3.ab2@21489>     MOVE.b (a0)+,(a1)+
00045A72 <AmiBlitz3.ab2@21490>    BNE 'l4b2
00045A74 <AmiBlitz3.ab2@21492>    MOVE.l (a7)+,d2
00045A7A <AmiBlitz3.ab2@21493>    LEA ptr_parameterstore,a1
00045A7C <AmiBlitz3.ab2@21496> RTS
00045A80 <AmiBlitz3.ab2@21500>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
00045A86 <AmiBlitz3.ab2@21502>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00045A8C <AmiBlitz3.ab2@21504>   MOVEA.l _dosbase,A6
00045A8E <AmiBlitz3.ab2@21505>   MOVE.l D0,D7                                                 ; store Lockpointer
00045A92 <AmiBlitz3.ab2@21506>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00045A94 <AmiBlitz3.ab2@21507>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00045A9A <AmiBlitz3.ab2@21508>   MOVE.l ptr_macrobuffer_begin,D2
00045A9E <AmiBlitz3.ab2@21509>    JSR _Examine(A6)
00045AA4 <AmiBlitz3.ab2@21510>   MOVEA.l ptr_macrobuffer_begin,A0
00045AA8 <AmiBlitz3.ab2@21511>   MOVE.l $4(A0),D0
00045AAC <AmiBlitz3.ab2@21512>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00045AB0 <AmiBlitz3.ab2@21513>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00045AB2 <AmiBlitz3.ab2@21514>   MOVE.l D7,D1                                                 ; begin unlock the file
00045AB6 <AmiBlitz3.ab2@21515>    JSR _UnLock(A6)
00045ABC <AmiBlitz3.ab2@21517>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00045AC2 <AmiBlitz3.ab2@21518>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00045AC6 <AmiBlitz3.ab2@21519>    JSR _Open(A6)
00045AC8 <AmiBlitz3.ab2@21520>   MOVE.l D0,D7
00045ACC <AmiBlitz3.ab2@21521>    BEQ.w error_cant_open_include
00045AD2 <AmiBlitz3.ab2@21522>   MOVE.l destpointer,D0
00045AD4 <AmiBlitz3.ab2@21523>   ADD.l D3,D0
00045ADA <AmiBlitz3.ab2@21524>   CMP.l destbufferend,D0
00045ADE <AmiBlitz3.ab2@21525>    BHI.w JL_0_CAF6
00045AE4 <AmiBlitz3.ab2@21526>   MOVE.l destpointer,D2
00045AE6 <AmiBlitz3.ab2@21527>   MOVE.l D7,D1
00045AEA <AmiBlitz3.ab2@21528>    JSR _Read(A6)
00045AF0 <AmiBlitz3.ab2@21529>   CMP.l #$FFFFFFFF,D0
00045AF4 <AmiBlitz3.ab2@21530>    BEQ.w error_reading_file
00045AFA <AmiBlitz3.ab2@21531>   ADD.l D0,destpointer
00045AFE <AmiBlitz3.ab2@21532> BRA.w JL_0_CB04
00045B06 <AmiBlitz3.ab2@21535>   MOVE.w #$FFFF,dontwrite
00045B0C <AmiBlitz3.ab2@21536>   MOVE.l D0,destpointer
00045B0E <AmiBlitz3.ab2@21539>   MOVE.l D7,D1
00045B12 <AmiBlitz3.ab2@21540> JMP _Close(A6)
00045B18 <AmiBlitz3.ab2@21544> JMP illdirerr
00045B1E <AmiBlitz3.ab2@21547>   TST.w dirmode                                            ;include  open
00045B22 <AmiBlitz3.ab2@21548>    BNE.w JUMP_illdirerr
00045B26 <AmiBlitz3.ab2@21549>   BSR.w JL_0_C05C
00045B2C <AmiBlitz3.ab2@21550>   JSR check_incdir
00045B30 <AmiBlitz3.ab2@21553>   BSR.w findconstant
00045B34 <AmiBlitz3.ab2@21554>    BEQ.w alincerr
00045B3A <AmiBlitz3.ab2@21556>   LEA constantbase,A2
00045B3E <AmiBlitz3.ab2@21557>   BSR.w addhere2
00045B42 <AmiBlitz3.ab2@21558>   CLR.w $C(A2)
00045B46 <AmiBlitz3.ab2@21559>   CLR.l $4(A2)
00045B4C <AmiBlitz3.ab2@21561>   MOVE.l #ptr_parameterstore,D1
00045B4E <AmiBlitz3.ab2@21562>   MOVE.l d1,a0
00045B54 <AmiBlitz3.ab2@21563>   LEA includetemp2,a1
00045B56 <AmiBlitz3.ab2@21566>     MOVE.b (a0)+,(a1)+
00045B5A <AmiBlitz3.ab2@21567>   BNE 'l1
00045B60 <AmiBlitz3.ab2@21568>   JSR save_includename
00045B6A <AmiBlitz3.ab2@21569>   MOVE.l #0,include_process
00045B72 <AmiBlitz3.ab2@21571>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00045B76 <AmiBlitz3.ab2@21572>   BEQ 'ok
00045B7E <AmiBlitz3.ab2@21573>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00045B82 <AmiBlitz3.ab2@21574>   BEQ 'ok_tokenize
00045B8A <AmiBlitz3.ab2@21575>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00045B8E <AmiBlitz3.ab2@21576>   BEQ 'ok_tokenize
00045B96 <AmiBlitz3.ab2@21577>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00045B9A <AmiBlitz3.ab2@21578>   BEQ 'ok
00045BA0 <AmiBlitz3.ab2@21579> JMP errortoken                                             ;can only include
00045BAA <AmiBlitz3.ab2@21582>    MOVE.l #-1,include_process                              ; must tokenize the include
00045BB0 <AmiBlitz3.ab2@21585>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00045BB6 <AmiBlitz3.ab2@21586>   MOVEA.l _dosbase,A6
00045BBA <AmiBlitz3.ab2@21587>   JSR _Open(A6)
00045BBE <AmiBlitz3.ab2@21588>   MOVE.l D0,$8(A2)
00045BC2 <AmiBlitz3.ab2@21589>   BEQ.w error_cant_open_include
00045BC8 <AmiBlitz3.ab2@21590>   CLR.l includeline
00045BCC <AmiBlitz3.ab2@21591>   MOVE.l 8(a2),d1
00045BCE <AmiBlitz3.ab2@21592>   MOVE.l d3,-(a7)
00045BD0 <AmiBlitz3.ab2@21593>   MOVEQ #0,d2
00045BD2 <AmiBlitz3.ab2@21594>   MOVEQ #1,d3
00045BD6 <AmiBlitz3.ab2@21595>   JSR _Seek(a6)                                            ; -66
00045BDA <AmiBlitz3.ab2@21596>   MOVE.l 8(a2),d1
00045BDC <AmiBlitz3.ab2@21597>   MOVEQ #0,d2
00045BDE <AmiBlitz3.ab2@21598>   MOVEQ #-1,d3
00045BE2 <AmiBlitz3.ab2@21599>   JSR _Seek(a6)                                            ; -66
00045BE4 <AmiBlitz3.ab2@21600>   MOVE.l (a7)+,d3
00045BE6 <AmiBlitz3.ab2@21601>   ADDQ.l #4,d0
00045BEC <AmiBlitz3.ab2@21603>   MOVE.l #$10000,D1
00045BF2 <AmiBlitz3.ab2@21604>   MOVEA.l _execbase,A6
00045BF6 <AmiBlitz3.ab2@21607>   JSR _AllocVec(a6)
00045BFA <AmiBlitz3.ab2@21609>   MOVE.l D0,$4(A2)
00045BFE <AmiBlitz3.ab2@21610>   MOVE.l D0,$E(A2)
00045C00 <AmiBlitz3.ab2@21611>   MOVEA.l D0,A5
00045C06 <AmiBlitz3.ab2@21618>   ADDQ.w #1,ininclude                                      ;enter include
00045C0C <AmiBlitz3.ab2@21621>   LEA _include,a0
00045C10 <AmiBlitz3.ab2@21622>   MOVEM.l a0-a6/d0-d7,-(a7)
00045C16 <AmiBlitz3.ab2@21623>   LEA ptr_parameterstore,a1
00045C18 <AmiBlitz3.ab2@21626>     MOVE.b (a0)+,(a1)+
00045C1C <AmiBlitz3.ab2@21627>   BNE 'l1b
00045C1E <AmiBlitz3.ab2@21629>   MOVEQ #9,d2
00045C24 <AmiBlitz3.ab2@21630>   JSR findlabel2
00045C28 <AmiBlitz3.ab2@21631>   BNE 'd
00045C30 <AmiBlitz3.ab2@21632>   MOVE.l #1,8(a2)
00045C34 <AmiBlitz3.ab2@21633>   MOVEM.l (a7)+,a0-a6/d0-d7
00045C38 <AmiBlitz3.ab2@21634> BRA 'd2
00045C3E <AmiBlitz3.ab2@21637>   JSR addlabelhash
00045C46 <AmiBlitz3.ab2@21638>   MOVE.l #$1,$4(A2)
00045C4E <AmiBlitz3.ab2@21639>   MOVE.l #1,8(a2)
00045C52 <AmiBlitz3.ab2@21640>   MOVEM.l (a7)+,a0-a6/d0-d7
00045C58 <AmiBlitz3.ab2@21643>   LEA inctab,a0
00045C5A <AmiBlitz3.ab2@21644>   MOVEQ #0,d1
00045C60 <AmiBlitz3.ab2@21645>   MOVE.w ininclude,d1
00045C64 <AmiBlitz3.ab2@21646>   CLR.l $0(a0,d1*4)
00045C6A <AmiBlitz3.ab2@21647>   MOVEA.l passstack,A7
00045C70 <AmiBlitz3.ab2@21648> JMP AJL_0_413A
00045C76 <AmiBlitz3.ab2@21650> JUMP_dupmacerr JMP dupmacerr
00045C78 <AmiBlitz3.ab2@21652> coolnest:   Ds.w 1
00045C7C <AmiBlitz3.ab2@21653> macline:    Ds.l 1
00045C86 <AmiBlitz3.ab2@21657>   MOVE.l linenumat,macline
00045C8A <AmiBlitz3.ab2@21658>    BSR.w makename2
00045C8E <AmiBlitz3.ab2@21659>    BEQ.w JUMP_syntaxerr
00045C94 <AmiBlitz3.ab2@21661>    CLR.b thenmode
00045C9E <AmiBlitz3.ab2@21663>    MOVE.w oldqflag,instringon
00045CA4 <AmiBlitz3.ab2@21664>   MOVEA.l lastsourcepos,A5
00045CA8 <AmiBlitz3.ab2@21665>    BSR.w findmac
00045CAC <AmiBlitz3.ab2@21666>    BEQ.w JUMP_dupmacerr
00045CB0 <AmiBlitz3.ab2@21667>    BSR.w addlabel
00045CB4 <AmiBlitz3.ab2@21668>   CLR.w $A(A2)
00045CBA <AmiBlitz3.ab2@21669>   MOVEA.l ptr_macrobuffer_begin,A0
00045CBC <AmiBlitz3.ab2@21670>   MOVEQ.l #$00,D2
00045CC2 <AmiBlitz3.ab2@21671>   CLR.w coolnest
00045CC4 <AmiBlitz3.ab2@21674>   MOVE.b (a5),d0
00045CC8 <AmiBlitz3.ab2@21675>      BEQ 'l3
00045CCC <AmiBlitz3.ab2@21676>      CMP.b #" ",d0
00045CD0 <AmiBlitz3.ab2@21677>       BNE 'l2                                              ;space macro
00045CD2 <AmiBlitz3.ab2@21678>       ADDQ.l #1,a5
00045CD6 <AmiBlitz3.ab2@21679> BRA 'l1
00045CDA <AmiBlitz3.ab2@21682>    CMP.b #";",d0
00045CDE <AmiBlitz3.ab2@21683>       BNE 'l3
00045CE0 <AmiBlitz3.ab2@21686>    MOVE.b (a5),d0
00045CE4 <AmiBlitz3.ab2@21687>       BEQ 'l5
00045CE8 <AmiBlitz3.ab2@21688>       BSR.w JL_0_CC98                                      ;add comment
00045CEA <AmiBlitz3.ab2@21689>       ADDQ.l #1,a5
00045CEE <AmiBlitz3.ab2@21690> BRA 'l4
00045CF2 <AmiBlitz3.ab2@21693>    MOVE.b #":",d0
00045CF6 <AmiBlitz3.ab2@21694>       BSR.w JL_0_CC98
00045CFA <AmiBlitz3.ab2@21695>       MOVE.b #"@",d0
00045CFE <AmiBlitz3.ab2@21696>       BSR.w JL_0_CC98
00045D06 <AmiBlitz3.ab2@21699>    MOVE.b #0,temp
00045D0E <AmiBlitz3.ab2@21700>       MOVE.b #0,thenmode
00045D14 <AmiBlitz3.ab2@21703>   JSR getcharb
00045D16 <AmiBlitz3.ab2@21704>   TST.w D0
00045D1A <AmiBlitz3.ab2@21705>    BNE.w JL_0_CBDE
00045D1E <AmiBlitz3.ab2@21706>   MOVEM.l D2/A0/A2,-(A7)
00045D24 <AmiBlitz3.ab2@21707>   CMP.w #"@@",-3(a5)
00045D28 <AmiBlitz3.ab2@21708>   BNE 'l2a
00045D2E <AmiBlitz3.ab2@21709>   JSR nextline
00045D32 <AmiBlitz3.ab2@21710>   BEQ.w JUMP_macenderr
00045D36 <AmiBlitz3.ab2@21711>   MOVEM.l (A7)+,D2/A0/A2
00045D3A <AmiBlitz3.ab2@21712> BRA.w JL_0_CBB6
00045D40 <AmiBlitz3.ab2@21715>    JSR nextline
00045D44 <AmiBlitz3.ab2@21716>    BEQ.w JUMP_macenderr
00045D48 <AmiBlitz3.ab2@21717>   MOVEM.l (A7)+,D2/A0/A2
00045D4A <AmiBlitz3.ab2@21718>   TST.w D2
00045D4E <AmiBlitz3.ab2@21719>    BEQ.w JL_0_CBB6
00045D50 <AmiBlitz3.ab2@21722>   MOVE.b (a5),d0
00045D54 <AmiBlitz3.ab2@21723>       CMP.b #" ",d0
00045D58 <AmiBlitz3.ab2@21724>       BNE 'l1
00045D5A <AmiBlitz3.ab2@21725>       ADDQ.w #1,a5
00045D5E <AmiBlitz3.ab2@21726> BRA 'l2
00045D64 <AmiBlitz3.ab2@21729>   TST.b thenmode
00045D68 <AmiBlitz3.ab2@21730>      BEQ 'l3
00045D6A <AmiBlitz3.ab2@21731>      MOVEQ #":",d0
00045D6E <AmiBlitz3.ab2@21732>      BSR.w JL_0_CC98
00045D72 <AmiBlitz3.ab2@21733>      MOVE.w #-$7FFE,D0                                     ;write end if
00045D76 <AmiBlitz3.ab2@21734>      BSR macputw
00045D7A <AmiBlitz3.ab2@21735>      MOVE.w #$800b,d0
00045D7E <AmiBlitz3.ab2@21736>      BSR.w macputw
00045D84 <AmiBlitz3.ab2@21737>      CLR.b thenmode
00045D86 <AmiBlitz3.ab2@21740>    MOVEQ.l #$3A,D0
00045D8E <AmiBlitz3.ab2@21741>      MOVE.b #1,temp
00045D92 <AmiBlitz3.ab2@21743> BRA.w JL_0_CC2A
00045D96 <AmiBlitz3.ab2@21747>   BPL.w JL_0_CC2A
00045D9A <AmiBlitz3.ab2@21748>   CMP.w #-$7FF3,D0                                         ;macro ?
00045D9E <AmiBlitz3.ab2@21749>    BNE.w JL_0_CBF4
00045DA4 <AmiBlitz3.ab2@21750>   ADDQ.w #1,coolnest
00045DA8 <AmiBlitz3.ab2@21751> BRA.w JL_0_CC22
00045DAE <AmiBlitz3.ab2@21753> JUMP_macnesterr JMP macnesterr
00045DB2 <AmiBlitz3.ab2@21756>   CMP.w #$80d7,d0                                          ;object ?
00045DB6 <AmiBlitz3.ab2@21757>     BNE 'l1x
00045DBC <AmiBlitz3.ab2@21758>     TST.b objectcount
00045DC0 <AmiBlitz3.ab2@21759>     BNE JUMP_macnesterr
00045DC4 <AmiBlitz3.ab2@21762>   CMP.w #$8021,d0
00045DC8 <AmiBlitz3.ab2@21763>     BNE 'nothen
00045DD0 <AmiBlitz3.ab2@21764>     MOVE.b #1,thenmode
00045DD6 <AmiBlitz3.ab2@21767>   TST.b thenmode
00045DDA <AmiBlitz3.ab2@21768>         BEQ 'l1
00045DDE <AmiBlitz3.ab2@21769>    CMP.w #$8002,d0                                         ;end if
00045DE2 <AmiBlitz3.ab2@21770>    BNE 'l1
00045DE6 <AmiBlitz3.ab2@21771>    MOVEM.l d0/a5,-(a7)
00045DEC <AmiBlitz3.ab2@21772>    JSR get1bytemain
00045DEE <AmiBlitz3.ab2@21773>    MOVE.w d0,d1
00045DF2 <AmiBlitz3.ab2@21774>    MOVEM.l (a7)+,a5/d0
00045DF6 <AmiBlitz3.ab2@21775>    CMP.w #$800b,d1
00045DFA <AmiBlitz3.ab2@21776>    BNE 'l1
00045E00 <AmiBlitz3.ab2@21777>    CLR.b thenmode
00045E04 <AmiBlitz3.ab2@21780>    CMP.w #-$7FFE,D0                                        ;end ?
00045E08 <AmiBlitz3.ab2@21781>    BNE.w JL_0_CC22
00045E0A <AmiBlitz3.ab2@21782>    MOVE.l a5,-(a7)
00045E10 <AmiBlitz3.ab2@21783>    JSR get1bytemain
00045E12 <AmiBlitz3.ab2@21784>    MOVE.l (a7)+,a5
00045E14 <AmiBlitz3.ab2@21785>    TST.w d0
00045E18 <AmiBlitz3.ab2@21786>    BEQ 'doend
00045E1C <AmiBlitz3.ab2@21787>    CMP.w #":",d0
00045E20 <AmiBlitz3.ab2@21788>    BEQ 'doend
00045E24 <AmiBlitz3.ab2@21789>    CMP.w #";",d0
00045E28 <AmiBlitz3.ab2@21790>    BEQ 'doend
00045E2A <AmiBlitz3.ab2@21791>    MOVE.l a5,-(a7)
00045E30 <AmiBlitz3.ab2@21792>    JSR get1bytemain
00045E34 <AmiBlitz3.ab2@21793>    MOVE.l -1(a5),d0
00045E36 <AmiBlitz3.ab2@21794>    MOVE.l (a7)+,a5
00045E3C <AmiBlitz3.ab2@21795>    CMP.l #"noa7",d0
00045E40 <AmiBlitz3.ab2@21796>    BEQ 'doend
00045E44 <AmiBlitz3.ab2@21797> BRA 'morechar
00045E48 <AmiBlitz3.ab2@21800>   MOVE.w #$8002,D0
00045E4C <AmiBlitz3.ab2@21801>    BSR.w macputw
00045E50 <AmiBlitz3.ab2@21802> BRA JL_0_CBB6
00045E56 <AmiBlitz3.ab2@21805>   JSR get1bytemain
00045E5A <AmiBlitz3.ab2@21806>    CMP.w #-$7FF3,D0                                        ;end macro
00045E5E <AmiBlitz3.ab2@21807>    BEQ.w 'lo1
00045E62 <AmiBlitz3.ab2@21808>   CMP.w #$80d7,d0                                          ;end object
00045E66 <AmiBlitz3.ab2@21809>   BNE JL_0_CC12
00045E6C <AmiBlitz3.ab2@21810>   SUBQ.b #1,objectcount
00045E72 <AmiBlitz3.ab2@21811>   TST.b developobject
00045E76 <AmiBlitz3.ab2@21812>   BEQ 'lo1
00045E7A <AmiBlitz3.ab2@21813>   BSR skiprest
00045E7C <AmiBlitz3.ab2@21814> RTS
00045E82 <AmiBlitz3.ab2@21817>   SUBQ.w #1,coolnest
00045E86 <AmiBlitz3.ab2@21818>    BMI.w JL_0_CC32
00045E88 <AmiBlitz3.ab2@21821>   MOVE.w D0,-(A7)
00045E8C <AmiBlitz3.ab2@21822>   MOVE.w #$8002,D0
00045E90 <AmiBlitz3.ab2@21823>    BSR.w macputw
00045E92 <AmiBlitz3.ab2@21824>   MOVE.w (A7)+,D0
00045E96 <AmiBlitz3.ab2@21825> BRA.w JL_0_CC22
00045E9A <AmiBlitz3.ab2@21828>   BSR.w macputw
00045E9E <AmiBlitz3.ab2@21829> BRA.w JL_0_CBB6
00045EA4 <AmiBlitz3.ab2@21831> JUMP_macenderr JMP macenderr
00045EAA <AmiBlitz3.ab2@21834>     CMP.w #"@@",-1(a5)                                     ;merge lines
00045EAE <AmiBlitz3.ab2@21835>     BNE 'no
00045EB2 <AmiBlitz3.ab2@21836>      MOVEM.l D2/A0/A2,-(A7)
00045EB8 <AmiBlitz3.ab2@21837>    JSR nextline
00045EBC <AmiBlitz3.ab2@21838>    BEQ.w JUMP_macenderr
00045EC0 <AmiBlitz3.ab2@21839>   MOVEM.l (A7)+,D2/A0/A2
00045EC2 <AmiBlitz3.ab2@21840>     TST.w D2
00045EC6 <AmiBlitz3.ab2@21841>    BEQ.w JL_0_CBB6
00045ECA <AmiBlitz3.ab2@21842> BRA JL_0_CBB6
00045ECE <AmiBlitz3.ab2@21846>   BSR.w JL_0_CC98
00045ED2 <AmiBlitz3.ab2@21847> BRA.w JL_0_CBB6
00045ED4 <AmiBlitz3.ab2@21850>   ADDQ.w #4,A7
00045ED6 <AmiBlitz3.ab2@21851>   MOVE.l A0,D0
00045EDC <AmiBlitz3.ab2@21852>   SUB.l ptr_macrobuffer_begin,D0
00045EE0 <AmiBlitz3.ab2@21855>    BEQ.w JL_0_CC5E
00045EE4 <AmiBlitz3.ab2@21856>   CMPI.b #":",-(A0)
00045EE8 <AmiBlitz3.ab2@21857>    BNE.w JL_0_CC5E
00045EEC <AmiBlitz3.ab2@21858>   CMP.w #$1,D0
00045EF0 <AmiBlitz3.ab2@21859>    BEQ.w JL_0_CC58
00045EF4 <AmiBlitz3.ab2@21860>   TST.b -$1(A0)
00045EF8 <AmiBlitz3.ab2@21861>    BMI.w JL_0_CC5E
00045EFA <AmiBlitz3.ab2@21864>   SUBQ.w #1,D0
00045EFE <AmiBlitz3.ab2@21865> BRA.w JL_0_CC3C
00045F02 <AmiBlitz3.ab2@21868>   MOVE.w D0,$8(A2)
00045F06 <AmiBlitz3.ab2@21869>    BEQ.w JL_0_CC8E
00045F08 <AmiBlitz3.ab2@21870>   MOVEQ.l #$01,D1
00045F0E <AmiBlitz3.ab2@21871>   MOVEA.l _execbase,A6
00045F14 <AmiBlitz3.ab2@21872>   MOVE.l mempool,a0
00045F18 <AmiBlitz3.ab2@21873>   JSR _AllocPooled(a6)
00045F1A <AmiBlitz3.ab2@21875>   MOVEA.l D0,A0
00045F1E <AmiBlitz3.ab2@21876>   MOVE.l A0,$4(A2)
00045F22 <AmiBlitz3.ab2@21877>   MOVE.w $8(A2),D1
00045F26 <AmiBlitz3.ab2@21878>    BEQ.w JL_0_CC8E
00045F28 <AmiBlitz3.ab2@21879>   SUBQ.w #1,D1
00045F2E <AmiBlitz3.ab2@21880>   MOVEA.l ptr_macrobuffer_begin,A1
00045F30 <AmiBlitz3.ab2@21883>     MOVE.b (A1)+,(A0)+
00045F34 <AmiBlitz3.ab2@21884>   DBF D1,JL_0_CC88
00045F3A <AmiBlitz3.ab2@21887> JMP get1bytemain
00045F3C <AmiBlitz3.ab2@21891>   MOVE.w D0,D1
00045F3E <AmiBlitz3.ab2@21892>   LSR.w #8,D1
00045F40 <AmiBlitz3.ab2@21893>   MOVE.b D1,(A0)+
00045F42 <AmiBlitz3.ab2@21896>   MOVEQ.l #-$01,D2
00045F44 <AmiBlitz3.ab2@21897>   MOVE.b D0,(A0)+
00045F4A <AmiBlitz3.ab2@21898>   CMPA.l ptr_macrobuffer_end,A0
00045F4E <AmiBlitz3.ab2@21899>    BCC.w macbigerr2
00045F50 <AmiBlitz3.ab2@21900> RTS
00045F56 <AmiBlitz3.ab2@21901> macbigerr2 JMP macbigerr
00045F58 <AmiBlitz3.ab2@21904>   MOVE.l d0,-(a7)
00045F5A <AmiBlitz3.ab2@21905>   MOVEQ #0,d0
00045F60 <AmiBlitz3.ab2@21906>   CLR.b skiptoggle
00045F62 <AmiBlitz3.ab2@21909>     MOVE.b (a5),d0
00045F66 <AmiBlitz3.ab2@21910>     BEQ 'l3
00045F6A <AmiBlitz3.ab2@21911>     CMP.b #";",d0
00045F6E <AmiBlitz3.ab2@21912>     BNE 'l2
00045F76 <AmiBlitz3.ab2@21913>     MOVE.b #1,skiptoggle
00045F7C <AmiBlitz3.ab2@21916>     TST.b skiptoggle
00045F80 <AmiBlitz3.ab2@21917>     BNE 'l4
00045F84 <AmiBlitz3.ab2@21918>     CMP.b #":",d0
00045F88 <AmiBlitz3.ab2@21919>     BEQ 'l3
00045F8A <AmiBlitz3.ab2@21922>     ADDQ #1,a5
00045F8E <AmiBlitz3.ab2@21923> BRA 'loop
00045F94 <AmiBlitz3.ab2@21926>   MOVE.w d0,lastchar
00045F96 <AmiBlitz3.ab2@21927>   MOVE.l (a7)+,d0
00045F98 <AmiBlitz3.ab2@21928> RTS
00045F9C <AmiBlitz3.ab2@21932>   BSR.w ifchar
00045FA0 <AmiBlitz3.ab2@21933>    BNE.w JUMP_syntaxerr
00045FA2 <AmiBlitz3.ab2@21934>   MOVE.w D0,D1
00045FA8 <AmiBlitz3.ab2@21935>   JSR get1bytemain
00045FAC <AmiBlitz3.ab2@21936>   BSR.w ifchar
00045FB0 <AmiBlitz3.ab2@21937>    BNE.w JL_0_CCDA
00045FB2 <AmiBlitz3.ab2@21938>   ADDQ.w #1,D0
00045FB4 <AmiBlitz3.ab2@21939>   MOVE.w D0,D2
00045FB6 <AmiBlitz3.ab2@21940>   ADD.w D0,D0
00045FB8 <AmiBlitz3.ab2@21941>   ADD.w D2,D0
00045FBA <AmiBlitz3.ab2@21942>   ADD.w D0,D1
00045FBC <AmiBlitz3.ab2@21943>   MOVE.w D1,D0
00045FC0 <AmiBlitz3.ab2@21944>   ANDI.w #$3,D0
00045FC4 <AmiBlitz3.ab2@21945>   CMP.w #$3,D0
00045FC8 <AmiBlitz3.ab2@21946>    BEQ.w JUMP_syntaxerr
00045FCE <AmiBlitz3.ab2@21948>   JSR get1bytemain
00045FD0 <AmiBlitz3.ab2@21951> RTS
00045FD2 <AmiBlitz3.ab2@21957> thetst1:  TST.b D0
00045FD4 <AmiBlitz3.ab2@21958> thetst2:  TST.w D0
00045FD6 <AmiBlitz3.ab2@21959> thetst3:  TST.l D0
00045FD8 <AmiBlitz3.ab2@21960> thetst4:  TST.l (A7)+                                      ;Any Length?
00045FDC <AmiBlitz3.ab2@21961> thetst5:  JSR _Reschedule(A6)
00045FE0 <AmiBlitz3.ab2@21963> posbr:    BEQ.w posbr
00045FE4 <AmiBlitz3.ab2@21964> negbr:    BNE.w negbr
00045FE6 <AmiBlitz3.ab2@21968>   MOVEQ.l #-$01,D2
00045FEA <AmiBlitz3.ab2@21969> BRA.w JL_0_D04C
00045FF0 <AmiBlitz3.ab2@21973>   CLR.l fp0addr
00045FF2 <AmiBlitz3.ab2@21974>   MOVEQ.l #$01,D1                                          ;while flag
00045FF4 <AmiBlitz3.ab2@21975>   MOVEQ.l #$00,D2                                          ;negate flag
00045FF8 <AmiBlitz3.ab2@21976> BRA.w JL_0_D04E
00045FFE <AmiBlitz3.ab2@21980>   LEA firstrep,A2
00046000 <AmiBlitz3.ab2@21981>   MOVEQ.l #$08,D2
00046004 <AmiBlitz3.ab2@21982> BRA.w freeslist
00046008 <AmiBlitz3.ab2@21986>   LEA firstsel(PC),A2
0004600A <AmiBlitz3.ab2@21987>   MOVEQ.l #$0E,D2
0004600C <AmiBlitz3.ab2@21992>   MOVEQ.l #$00,D3
0004600E <AmiBlitz3.ab2@22000>   MOVE.l (A2),D0
00046010 <AmiBlitz3.ab2@22001>   CLR.l (A2)
00046012 <AmiBlitz3.ab2@22002>   MOVEA.l D0,A2
00046018 <AmiBlitz3.ab2@22003>   MOVEA.l _execbase,A6
0004601C <AmiBlitz3.ab2@22006>     CMPA.w #$0,A2
00046020 <AmiBlitz3.ab2@22007>      BEQ.w freelist__done
00046022 <AmiBlitz3.ab2@22008>     TST.w D3
00046026 <AmiBlitz3.ab2@22009>      BEQ.w freelist__skip
0004602A <AmiBlitz3.ab2@22010>     MOVEM.l D2-D3/A2,-(A7)
0004602C <AmiBlitz3.ab2@22011>     ADDA.w D3,A2
0004602E <AmiBlitz3.ab2@22012>     MOVE.l D4,D2
00046032 <AmiBlitz3.ab2@22013>     BSR.w freeslist
00046036 <AmiBlitz3.ab2@22014>     MOVEM.l (A7)+,D2-D3/A2
00046038 <AmiBlitz3.ab2@22017>     MOVEA.l A2,A1
0004603A <AmiBlitz3.ab2@22018>     MOVE.l D2,D0
0004603C <AmiBlitz3.ab2@22019>     MOVEA.l (A2),A2
00046042 <AmiBlitz3.ab2@22020>     MOVE.l mempool,a0
00046046 <AmiBlitz3.ab2@22021>     JSR _FreePooled(A6)
0004604A <AmiBlitz3.ab2@22022> BRA.w freelist__loop
0004604C <AmiBlitz3.ab2@22025> RTS
00046052 <AmiBlitz3.ab2@22028> JMP eselerr
00046056 <AmiBlitz3.ab2@22031> firstsel:  Ds.l 1
0004605A <AmiBlitz3.ab2@22034> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
0004605C <AmiBlitz3.ab2@22037> selpushw:   MOVE.w D0,-(A7)
0004605E <AmiBlitz3.ab2@22039> selpushl:   MOVE.l D0,-(A7)
00046062 <AmiBlitz3.ab2@22041> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00046066 <AmiBlitz3.ab2@22044> selcomb:    ANDI.w #$FF,D0
00046068 <AmiBlitz3.ab2@22045> selcomw:    CMP.w (A7),D0
0004606A <AmiBlitz3.ab2@22047> selcoml:    CMP.l (A7),D0
0004606E <AmiBlitz3.ab2@22049> selbne:     BNE.w selbne
00046070 <AmiBlitz3.ab2@22051> endsel:     ADDQ.w #8,A7
00046074 <AmiBlitz3.ab2@22057>   MOVE.l firstsel(PC),D0                                  
00046078 <AmiBlitz3.ab2@22058>    BEQ.w JUMP_eselerr
0004607A <AmiBlitz3.ab2@22059>   MOVEA.l D0,A2
0004607E <AmiBlitz3.ab2@22060>    BSR.w JL_0_CDFC
00046084 <AmiBlitz3.ab2@22063>   MOVEA.l _execbase,A6
00046088 <AmiBlitz3.ab2@22066>   MOVE.l $4(A2),D0
0004608C <AmiBlitz3.ab2@22067>    BEQ.w doendsel__done
0004608E <AmiBlitz3.ab2@22068>   MOVEA.l D0,A3
00046092 <AmiBlitz3.ab2@22069>   MOVEA.l $4(A3),A0
00046098 <AmiBlitz3.ab2@22070>   MOVE.l destpointer,D1
0004609A <AmiBlitz3.ab2@22071>   SUB.l A0,D1
000460A0 <AmiBlitz3.ab2@22073>     TST.b fast
000460A4 <AmiBlitz3.ab2@22074>     BEQ doendsel__loop_l1
000460AA <AmiBlitz3.ab2@22075>     MOVE.w dontwrite,D0
000460AE <AmiBlitz3.ab2@22076>     BNE.w doendsel__skip
000460B0 <AmiBlitz3.ab2@22077>     ADDQ.l #2,d1
000460B4 <AmiBlitz3.ab2@22078>     MOVE.l d1,-2(a0)
000460B8 <AmiBlitz3.ab2@22079>   BRA doendsel__skip
000460BE <AmiBlitz3.ab2@22083>   TST.w dontwrite
000460C2 <AmiBlitz3.ab2@22084>      BNE.w doendsel__skip
000460C8 <AmiBlitz3.ab2@22085>   CMP.l #MaxWordSgnd,D1
000460CC <AmiBlitz3.ab2@22086>    BHI.w JUMP_cbraerr
000460CE <AmiBlitz3.ab2@22087>   MOVE.w D1,(A0)
000460D2 <AmiBlitz3.ab2@22090>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000460D4 <AmiBlitz3.ab2@22091>   MOVEA.l A3,A1
000460D6 <AmiBlitz3.ab2@22092>   MOVEQ.l #$08,D0
000460DC <AmiBlitz3.ab2@22093>   MOVE.l mempool,a0
000460E0 <AmiBlitz3.ab2@22094>    JSR _FreePooled(A6)
000460E4 <AmiBlitz3.ab2@22095> BRA.w doendsel__loop
000460EA <AmiBlitz3.ab2@22098>   JSR popselect                                            ;fix stack on select
000460EE <AmiBlitz3.ab2@22099>   MOVEA.l firstsel(PC),A1
000460F4 <AmiBlitz3.ab2@22100>   MOVE.l (A1),firstsel
000460F6 <AmiBlitz3.ab2@22101>   MOVEQ.l #$0E,D0
000460FC <AmiBlitz3.ab2@22102>   MOVEA.l _execbase,A6
00046102 <AmiBlitz3.ab2@22103>   MOVE.l mempool,a0
00046106 <AmiBlitz3.ab2@22104>   JSR _FreePooled(A6)
0004610C <AmiBlitz3.ab2@22105> JMP get1bytemain
0004610E <AmiBlitz3.ab2@22109>   MOVEA.l (A7)+,A1
00046110 <AmiBlitz3.ab2@22110>   SUBQ.w #8,A1
00046112 <AmiBlitz3.ab2@22111>   MOVEQ.l #$09,D0
00046114 <AmiBlitz3.ab2@22112>   ADD.l (A1),D0
00046116 <AmiBlitz3.ab2@22115>   ADDQ.w #2,A7                                             ;for runtime errs!
0004611A <AmiBlitz3.ab2@22120>   MOVE.l firstsel(PC),D0
0004611E <AmiBlitz3.ab2@22121>    BEQ.w JUMP_defaerr
00046120 <AmiBlitz3.ab2@22122>   MOVEA.l D0,A2
00046124 <AmiBlitz3.ab2@22123>   BSR.w JL_0_CE26
00046128 <AmiBlitz3.ab2@22124>   BSR.w JL_0_CDFC
0004612C <AmiBlitz3.ab2@22125>   CLR.l $8(A2)
00046130 <AmiBlitz3.ab2@22126>   MOVE.w $C(A2),D2
00046134 <AmiBlitz3.ab2@22127> BRA.w JL_0_CE5E
0004613A <AmiBlitz3.ab2@22130> JMP defaerr
0004613E <AmiBlitz3.ab2@22133>   MOVE.l $8(A2),D0
00046142 <AmiBlitz3.ab2@22134>    BEQ.w JL_0_CE24
00046144 <AmiBlitz3.ab2@22135>   MOVEA.l D0,A0
0004614A <AmiBlitz3.ab2@22136>   MOVE.l destpointer,D1
0004614C <AmiBlitz3.ab2@22137>   SUB.l A0,D1
00046152 <AmiBlitz3.ab2@22139>     TST.b fast
00046156 <AmiBlitz3.ab2@22140>     BEQ 'l1
0004615C <AmiBlitz3.ab2@22141>     TST.w dontwrite
00046160 <AmiBlitz3.ab2@22142>     BNE.w JL_0_CE24
00046162 <AmiBlitz3.ab2@22143>     ADDQ.l #2,d1
00046166 <AmiBlitz3.ab2@22144>     MOVE.l D1,-2(A0)
0004616A <AmiBlitz3.ab2@22145>   BRA JL_0_CE24
00046170 <AmiBlitz3.ab2@22149>   TST.w dontwrite
00046174 <AmiBlitz3.ab2@22150>      BNE.w JL_0_CE24
0004617A <AmiBlitz3.ab2@22151>    CMP.l #MaxWordSgnd,D1
0004617E <AmiBlitz3.ab2@22152>    BHI.w JUMP_cbraerr
00046180 <AmiBlitz3.ab2@22153>   MOVE.w D1,(A0)
00046182 <AmiBlitz3.ab2@22156> RTS
00046188 <AmiBlitz3.ab2@22159> JMP cbraerr
0004618C <AmiBlitz3.ab2@22163>   MOVE.l $8(A2),D0
00046190 <AmiBlitz3.ab2@22164>    BEQ.w JL_0_CE5C
00046192 <AmiBlitz3.ab2@22165>   MOVEA.l D0,A3
00046196 <AmiBlitz3.ab2@22166>   MOVE.w #$6000,D1
0004619C <AmiBlitz3.ab2@22168>    TST.b fast
000461A0 <AmiBlitz3.ab2@22169>    BEQ 'l1
000461A6 <AmiBlitz3.ab2@22170>    OR.l #$ff,d1
000461AA <AmiBlitz3.ab2@22171>    BSR writeword
000461AE <AmiBlitz3.ab2@22175>   BSR.w writeword
000461B0 <AmiBlitz3.ab2@22176>   MOVEQ.l #$08,D0
000461B2 <AmiBlitz3.ab2@22177>   MOVEQ.l #$01,D1
000461B8 <AmiBlitz3.ab2@22178>   MOVEA.l _execbase,A6
000461BE <AmiBlitz3.ab2@22179>   MOVE.l mempool,a0
000461C2 <AmiBlitz3.ab2@22180>   JSR _AllocPooled(a6)
000461C4 <AmiBlitz3.ab2@22182>   MOVEA.l D0,A0
000461C8 <AmiBlitz3.ab2@22183>   MOVE.l $4(A2),(A0)
000461CC <AmiBlitz3.ab2@22184>   MOVE.l A0,$4(A2)
000461D4 <AmiBlitz3.ab2@22185>   MOVE.l destpointer,$4(A0)
000461D8 <AmiBlitz3.ab2@22186> BRA.w writeword
000461DA <AmiBlitz3.ab2@22189> RTS
000461E0 <AmiBlitz3.ab2@22193>   TST.b debugmode
000461E4 <AmiBlitz3.ab2@22194>    BEQ.w JL_0_CE7A
000461E8 <AmiBlitz3.ab2@22195>   MOVE.w #$C313,D1
000461EC <AmiBlitz3.ab2@22196>   CMP.w #$3,D2
000461F0 <AmiBlitz3.ab2@22197>    BCS.w JL_0_CE76
000461F2 <AmiBlitz3.ab2@22198>   ADDQ.w #1,D1
000461F6 <AmiBlitz3.ab2@22201> BRA.w Atokejsr
000461F8 <AmiBlitz3.ab2@22204> RTS
000461FE <AmiBlitz3.ab2@22208> JMP caseerr
00046202 <AmiBlitz3.ab2@22211>   MOVE.l firstsel(PC),D0
00046206 <AmiBlitz3.ab2@22212>    BEQ.w JUMP_caseerr
00046208 <AmiBlitz3.ab2@22213>   MOVEA.l D0,A2
0004620C <AmiBlitz3.ab2@22214>    BSR.w JL_0_CE26
00046210 <AmiBlitz3.ab2@22215>    BSR.w JL_0_CDFC
00046214 <AmiBlitz3.ab2@22216>   MOVE.w $C(A2),D2
00046216 <AmiBlitz3.ab2@22217>   MOVE.w D2,-(A7)
0004621A <AmiBlitz3.ab2@22218>    BSR.w JL_0_CE5E
0004621C <AmiBlitz3.ab2@22219>   MOVE.w (A7),D2
00046220 <AmiBlitz3.ab2@22220>    BSR.w bakeval
00046222 <AmiBlitz3.ab2@22221>   MOVE.w (A7)+,D2
00046226 <AmiBlitz3.ab2@22222>   LEA selcomb(PC),A0
0004622A <AmiBlitz3.ab2@22223>   LEA selcombf(PC),A1
0004622E <AmiBlitz3.ab2@22224>   CMP.w #$1,D2
00046232 <AmiBlitz3.ab2@22225>    BEQ.w JL_0_CED8
00046236 <AmiBlitz3.ab2@22226>   LEA selcomw(PC),A0
0004623A <AmiBlitz3.ab2@22227>   CMP.w #$2,D2
0004623E <AmiBlitz3.ab2@22228>    BEQ.w JL_0_CED8
00046242 <AmiBlitz3.ab2@22229>   LEA selcoml(PC),A0
00046246 <AmiBlitz3.ab2@22230>   LEA selcomlf(PC),A1
0004624A <AmiBlitz3.ab2@22231>   CMP.w #$7,D2
0004624E <AmiBlitz3.ab2@22232>    BCS.w JL_0_CED8
00046252 <AmiBlitz3.ab2@22234>   MOVE.w #$CE01,D1
00046256 <AmiBlitz3.ab2@22235>    BSR.w Atokejsr
0004625A <AmiBlitz3.ab2@22236> BRA.w JL_0_CEDC
0004625E <AmiBlitz3.ab2@22239>   BSR.w pokecode
00046262 <AmiBlitz3.ab2@22242>   MOVE.w selbne(PC),D1
00046268 <AmiBlitz3.ab2@22244>     TST.b fast
0004626C <AmiBlitz3.ab2@22245>     BEQ 'l1
00046272 <AmiBlitz3.ab2@22246>     ORI.l #$ff,d1
00046276 <AmiBlitz3.ab2@22247>     BSR writeword
0004627A <AmiBlitz3.ab2@22250>   BSR.w writeword
0004627E <AmiBlitz3.ab2@22251>   MOVEA.l firstsel(PC),A0
00046286 <AmiBlitz3.ab2@22252>   MOVE.l destpointer,$8(A0)
0004628A <AmiBlitz3.ab2@22253> BRA.w writeword
0004628E <AmiBlitz3.ab2@22257> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00046290 <AmiBlitz3.ab2@22258> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00046294 <AmiBlitz3.ab2@22261> sellineat:  Ds.l 1
0004629A <AmiBlitz3.ab2@22267>   TST.b debugmode
0004629E <AmiBlitz3.ab2@22268>    BEQ.w JL_0_CF0E
000462A2 <AmiBlitz3.ab2@22269>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
000462A6 <AmiBlitz3.ab2@22270>    BSR.w writelong
000462B0 <AmiBlitz3.ab2@22273>   MOVE.l linenumat,sellineat
000462BA <AmiBlitz3.ab2@22275>    MOVE.l destpointer,pushpc
000462C4 <AmiBlitz3.ab2@22276>   MOVE.l hunkoffsetbase,pushoff
000462C6 <AmiBlitz3.ab2@22277>   MOVEQ.l #$00,D2
000462CA <AmiBlitz3.ab2@22278>    BSR.w bakevalu                                          ;Evaluate
000462CE <AmiBlitz3.ab2@22279>    BSR.w JL_0_B5D2
000462D2 <AmiBlitz3.ab2@22280>   CMP.w #$7,D2
000462D6 <AmiBlitz3.ab2@22281>    BNE.w JL_0_CF36
000462DA <AmiBlitz3.ab2@22282>   MOVE.w clrst(PC),D1
000462DE <AmiBlitz3.ab2@22283>    BSR.w writeword
000462E2 <AmiBlitz3.ab2@22286>    BSR.w JL_0_B63C
000462E6 <AmiBlitz3.ab2@22287>   LEA selpushb(PC),A0
000462EA <AmiBlitz3.ab2@22288>   LEA selpushbf(PC),A1
000462EE <AmiBlitz3.ab2@22289>   CMP.w #$1,D2
000462F2 <AmiBlitz3.ab2@22290>    BEQ.w JL_0_CF88
000462F6 <AmiBlitz3.ab2@22291>   LEA selpushw(PC),A0
000462FA <AmiBlitz3.ab2@22292>   CMP.w #$2,D2
000462FE <AmiBlitz3.ab2@22293>    BEQ.w JL_0_CF88
00046302 <AmiBlitz3.ab2@22294>   LEA selpushl(PC),A0
00046306 <AmiBlitz3.ab2@22295>   LEA selpushlf(PC),A1
0004630A <AmiBlitz3.ab2@22296>   CMP.w #$7,D2
0004630E <AmiBlitz3.ab2@22297>    BCS.w JL_0_CF88
00046314 <AmiBlitz3.ab2@22299>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00046318 <AmiBlitz3.ab2@22300>    BSR.w writeword
0004631C <AmiBlitz3.ab2@22301>   LEA selpushs(PC),A0
00046320 <AmiBlitz3.ab2@22302>   LEA selpushsf(PC),A1
00046324 <AmiBlitz3.ab2@22303>    BSR.w pokecode
00046328 <AmiBlitz3.ab2@22304>   MOVE.w #$C701,D1
0004632C <AmiBlitz3.ab2@22305>    BSR.w Atokejsr
00046330 <AmiBlitz3.ab2@22306> BRA.w JL_0_CF8C
00046334 <AmiBlitz3.ab2@22309>   BSR.w pokecode
00046336 <AmiBlitz3.ab2@22312>   MOVEQ.l #$0E,D0
00046338 <AmiBlitz3.ab2@22313>   MOVEQ.l #$01,D1
0004633E <AmiBlitz3.ab2@22314>   MOVEA.l _execbase,A6
00046344 <AmiBlitz3.ab2@22316>   MOVE.l mempool,a0
00046348 <AmiBlitz3.ab2@22317>   JSR _AllocPooled(a6)
0004634A <AmiBlitz3.ab2@22318>   MOVEA.l D0,A0
0004634E <AmiBlitz3.ab2@22319>   MOVE.l firstsel(PC),(A0)
00046354 <AmiBlitz3.ab2@22320>   MOVE.l A0,firstsel
00046358 <AmiBlitz3.ab2@22321>   CLR.l $4(A0)
0004635C <AmiBlitz3.ab2@22322>   CLR.l $8(A0)
00046360 <AmiBlitz3.ab2@22323>   MOVE.w D2,$C(A0)
00046362 <AmiBlitz3.ab2@22324> RTS
00046368 <AmiBlitz3.ab2@22328>   MOVE.l firstrep,D0
0004636C <AmiBlitz3.ab2@22329>    BEQ.w JUMP_unterr1
00046370 <AmiBlitz3.ab2@22330>   MOVE.w #$6000,D1
00046374 <AmiBlitz3.ab2@22331>   BSR.w writeword
00046376 <AmiBlitz3.ab2@22332>   MOVEA.l D0,A0
0004637A <AmiBlitz3.ab2@22333>   MOVE.l $4(A0),D1
00046380 <AmiBlitz3.ab2@22334>   SUB.l destpointer,D1
00046382 <AmiBlitz3.ab2@22335>   TST.w D1
00046386 <AmiBlitz3.ab2@22336>    BPL.w JUMP_unterr2
0004638A <AmiBlitz3.ab2@22337>   BSR.w writeword
00046390 <AmiBlitz3.ab2@22338>   MOVEA.l _execbase,A6
00046394 <AmiBlitz3.ab2@22339> BRA.w JL_0_D036
0004639A <AmiBlitz3.ab2@22342> JMP unterr2
000463A0 <AmiBlitz3.ab2@22345> JMP unterr1
000463A6 <AmiBlitz3.ab2@22349>   MOVE.l firstrep,D0
000463AA <AmiBlitz3.ab2@22350>    BEQ.w JUMP_unterr1
000463AE <AmiBlitz3.ab2@22351>   BSR.w do_if
000463B4 <AmiBlitz3.ab2@22352>   JSR reget
000463B8 <AmiBlitz3.ab2@22353>    BNE.w JUMP_syntaxerr
000463BE <AmiBlitz3.ab2@22354>   MOVE.w dontwrite,D1
000463C2 <AmiBlitz3.ab2@22355>    BNE.w JL_0_D020
000463C8 <AmiBlitz3.ab2@22356>   MOVEA.l firstrep,A0
000463CE <AmiBlitz3.ab2@22357>   MOVEA.l destpointer,A1
000463D4 <AmiBlitz3.ab2@22359>     TST.b fast
000463D8 <AmiBlitz3.ab2@22360>     BEQ 'l1
000463DA <AmiBlitz3.ab2@22361>     SUBQ.w #4,a1
000463DE <AmiBlitz3.ab2@22362>     MOVE.l $4(A0),D2
000463E0 <AmiBlitz3.ab2@22363>     SUB.l A1,D2
000463E2 <AmiBlitz3.ab2@22364>     MOVE.l d2,(a1)
000463E6 <AmiBlitz3.ab2@22365>   BRA JL_0_D020
000463E8 <AmiBlitz3.ab2@22369>   SUBQ.w #2,A1
000463EC <AmiBlitz3.ab2@22370>   MOVE.l $4(A0),D2
000463EE <AmiBlitz3.ab2@22371>   SUB.l A1,D2
000463F0 <AmiBlitz3.ab2@22372>   TST.w D2
000463F4 <AmiBlitz3.ab2@22373>    BPL.w JUMP_unterr2
000463F6 <AmiBlitz3.ab2@22374>   MOVE.w D2,(A1)
000463FC <AmiBlitz3.ab2@22377>   MOVEA.l firstiff,A1
00046402 <AmiBlitz3.ab2@22378>   MOVE.l (A1),firstiff
00046404 <AmiBlitz3.ab2@22379>   MOVEQ.l #$0E,D0
0004640A <AmiBlitz3.ab2@22380>   MOVEA.l _execbase,A6
00046410 <AmiBlitz3.ab2@22381>   MOVE.l mempool,a0
00046414 <AmiBlitz3.ab2@22382>   JSR _FreePooled(A6)
0004641A <AmiBlitz3.ab2@22385>   MOVEA.l firstrep,A1
00046420 <AmiBlitz3.ab2@22386>   MOVE.l (A1),firstrep
00046422 <AmiBlitz3.ab2@22387>   MOVEQ.l #$08,D0
00046428 <AmiBlitz3.ab2@22388>   MOVE.l mempool,a0
0004642C <AmiBlitz3.ab2@22389> JMP _FreePooled(A6)
00046430 <AmiBlitz3.ab2@22392> iflineat:   Ds.l 1
00046432 <AmiBlitz3.ab2@22396>   MOVEQ.l #$00,D2
00046438 <AmiBlitz3.ab2@22397>   TST.b fast
0004643C <AmiBlitz3.ab2@22398>   BEQ 'l1
00046444 <AmiBlitz3.ab2@22399>   MOVE.b #1,nostringopt
0004644C <AmiBlitz3.ab2@22400>   MOVE.b #1,iniffcommand
0004644E <AmiBlitz3.ab2@22404>   MOVEQ.l #$00,D1
00046450 <AmiBlitz3.ab2@22407>   MOVE.w D1,-(A7)
00046456 <AmiBlitz3.ab2@22408>   MOVE.l destpointer,-(A7)
00046458 <AmiBlitz3.ab2@22409>   MOVE.w D2,-(A7)
00046462 <AmiBlitz3.ab2@22410>   MOVE.l linenumat,iflineat
00046464 <AmiBlitz3.ab2@22411>   MOVEQ.l #$00,D2
0004646E <AmiBlitz3.ab2@22412>   MOVE.b optistring,optistring2
00046476 <AmiBlitz3.ab2@22413>   MOVE.b #1,optistring
0004647A <AmiBlitz3.ab2@22414>   BSR.w bakevalu
00046484 <AmiBlitz3.ab2@22415>   MOVE.b optistring2,optistring
00046488 <AmiBlitz3.ab2@22416>   CMP.w #$5,D2
0004648C <AmiBlitz3.ab2@22417>    BEQ.w JL_0_D09C
00046490 <AmiBlitz3.ab2@22418>   MOVE.w thetst1(PC),D1
00046494 <AmiBlitz3.ab2@22419>   CMP.w #$1,D2
00046498 <AmiBlitz3.ab2@22420>    BEQ.w writebranchcode
0004649C <AmiBlitz3.ab2@22421>   MOVE.w thetst2(PC),D1
000464A0 <AmiBlitz3.ab2@22422>   CMP.w #$2,D2
000464A4 <AmiBlitz3.ab2@22423>    BEQ.w writebranchcode
000464A8 <AmiBlitz3.ab2@22424>   MOVE.w thetst4(PC),D1
000464AC <AmiBlitz3.ab2@22425>   CMP.w #$7,D2
000464B0 <AmiBlitz3.ab2@22426>    BEQ.w writebranchcode
000464B4 <AmiBlitz3.ab2@22427>   MOVE.w thetst3(PC),D1
000464B8 <AmiBlitz3.ab2@22428> BRA.w writebranchcode
000464BE <AmiBlitz3.ab2@22431>   TST.b fpu
000464C2 <AmiBlitz3.ab2@22432>   BEQ 'dofpu
000464C8 <AmiBlitz3.ab2@22433>   MOVE.l #$f200003a,d1
000464CC <AmiBlitz3.ab2@22434>   BSR writelong
000464D0 <AmiBlitz3.ab2@22435>   MOVE.w #$f2c1,d1
000464D4 <AmiBlitz3.ab2@22436>   BSR writeword
000464D8 <AmiBlitz3.ab2@22437>   BSR writelong
000464DA <AmiBlitz3.ab2@22438>   ADDQ.l #2,a7
000464DE <AmiBlitz3.ab2@22439> BRA.w br2
000464E2 <AmiBlitz3.ab2@22442>    MOVE.w #$C900,D1
000464E6 <AmiBlitz3.ab2@22443>    BSR.w Atokejsr
000464EA <AmiBlitz3.ab2@22444>   MOVE.l thetst5(PC),D1
000464EE <AmiBlitz3.ab2@22445>    BSR.w writelong
000464F2 <AmiBlitz3.ab2@22446> BRA.w JL_0_D0B4
000464F8 <AmiBlitz3.ab2@22450>          CLR.b iniffcommand
000464FE <AmiBlitz3.ab2@22451>          TST.b fast                                        ;branchcode
00046502 <AmiBlitz3.ab2@22452>          BEQ b6
00046508 <AmiBlitz3.ab2@22453>          TST.b fpu
0004650C <AmiBlitz3.ab2@22454>          BEQ 'nofpu
00046512 <AmiBlitz3.ab2@22458>           MOVE.l destpointer,a0
00046518 <AmiBlitz3.ab2@22459>          SUB.l load_var_addr,a0
0004651E <AmiBlitz3.ab2@22460>          CMP.l #4,a0
00046522 <AmiBlitz3.ab2@22461>          BEQ 'nofpu
0004652A <AmiBlitz3.ab2@22462>          CMP.l #$f2400014,-4(a4)                           ;<
0004652E <AmiBlitz3.ab2@22463>          BNE 'nolt
00046534 <AmiBlitz3.ab2@22464>          SUBQ.l #2,destpointer
0004653A <AmiBlitz3.ab2@22465>          MOVE.w #$f293,-4(a4)                              ;
0004653E <AmiBlitz3.ab2@22466> BRA 'brf
00046546 <AmiBlitz3.ab2@22469>   CMP.l #$f2400015,-4(a4)                                  ;<=
0004654A <AmiBlitz3.ab2@22470>          BNE 'nole
00046550 <AmiBlitz3.ab2@22471>          SUBQ.l #2,destpointer
00046556 <AmiBlitz3.ab2@22472>          MOVE.w #$f292,-4(a4)
0004655A <AmiBlitz3.ab2@22473> BRA 'brf
00046562 <AmiBlitz3.ab2@22476>   CMP.l #$f2400013,-4(a4)                                  ;=>
00046566 <AmiBlitz3.ab2@22477>          BNE 'noge
0004656C <AmiBlitz3.ab2@22478>          SUBQ.l #2,destpointer
00046572 <AmiBlitz3.ab2@22479>          MOVE.w #$f294,-4(a4)
00046576 <AmiBlitz3.ab2@22480> BRA 'brf
0004657E <AmiBlitz3.ab2@22483>   CMP.l #$f2400012,-4(a4)                                  ;>
00046582 <AmiBlitz3.ab2@22484>          BNE 'nogt
00046588 <AmiBlitz3.ab2@22485>          SUBQ.l #2,destpointer
0004658E <AmiBlitz3.ab2@22486>          MOVE.w #$f295,-4(a4)
00046592 <AmiBlitz3.ab2@22487> BRA 'brf
0004659A <AmiBlitz3.ab2@22490>   CMP.l #$f2400001,-4(a4)                                  ;=
0004659E <AmiBlitz3.ab2@22491>          BNE 'noeq
000465A4 <AmiBlitz3.ab2@22492>          SUBQ.l #2,destpointer
000465AA <AmiBlitz3.ab2@22493>          MOVE.w #$f28e,-4(a4)
000465AE <AmiBlitz3.ab2@22494> BRA 'brf
000465B6 <AmiBlitz3.ab2@22497>   CMP.l #$f240000e,-4(a4)                                  ;<>
000465BA <AmiBlitz3.ab2@22498>          BNE 'none
000465C0 <AmiBlitz3.ab2@22499>          SUBQ.l #2,destpointer
000465C6 <AmiBlitz3.ab2@22500>          MOVE.w #$f281,-4(a4)
000465C8 <AmiBlitz3.ab2@22503>   ADDQ.l #2,a7
000465CE <AmiBlitz3.ab2@22505>     TST.b fast
000465D2 <AmiBlitz3.ab2@22506>     BEQ 'l1
000465D8 <AmiBlitz3.ab2@22507>     OR.b #$40,-3(a4)
000465DC <AmiBlitz3.ab2@22508>     BSR writeword
000465E0 <AmiBlitz3.ab2@22512>  BSR writeword
000465E4 <AmiBlitz3.ab2@22513> BRA.s br2
000465EA <AmiBlitz3.ab2@22517>   MOVE.l destpointer,a0
000465F0 <AmiBlitz3.ab2@22518>          SUB.l load_var_addr,a0
000465F6 <AmiBlitz3.ab2@22519>          CMP.l #4,a0
000465FA <AmiBlitz3.ab2@22520>          BEQ JL_0_D0B4
00046600 <AmiBlitz3.ab2@22521>          CMP.w #$4eb9,-6(a4)
00046604 <AmiBlitz3.ab2@22522>          BEQ b6
0004660A <AmiBlitz3.ab2@22523>          CMP.w #$5ec0,-2(a4)                               ;>
0004660E <AmiBlitz3.ab2@22524>      BNE.s 'lb1
00046614 <AmiBlitz3.ab2@22525>          MOVE.w #$6f00,-2(a4)                              ;ble
00046618 <AmiBlitz3.ab2@22526> BRA.s br
0004661E <AmiBlitz3.ab2@22529>  CMP.w #$5dc0,-2(a4)                                       ;<
00046622 <AmiBlitz3.ab2@22530>   BNE.s 'lb2
00046628 <AmiBlitz3.ab2@22531>          MOVE.w #$6c00,-2(a4)                              ;bge
0004662C <AmiBlitz3.ab2@22532> BRA.s br
00046632 <AmiBlitz3.ab2@22535>   CMP.w #$57c0,-2(a4)                                      ;=
00046636 <AmiBlitz3.ab2@22536>   BNE.s 'lb3
0004663C <AmiBlitz3.ab2@22537>          MOVE.w #$6600,-2(a4)                              ;bne
00046640 <AmiBlitz3.ab2@22538> BRA.s br
00046646 <AmiBlitz3.ab2@22541>   CMP.w #$56c0,-2(a4)                                      ;<>
0004664A <AmiBlitz3.ab2@22542>   BNE.s 'lb4
00046650 <AmiBlitz3.ab2@22543>          MOVE.w #$6700,-2(a4)                              ;beq
00046654 <AmiBlitz3.ab2@22544> BRA.s br
0004665A <AmiBlitz3.ab2@22547>   CMP.w #$5cc0,-2(a4)                                      ;>=
0004665E <AmiBlitz3.ab2@22548>   BNE.s 'lb5
00046664 <AmiBlitz3.ab2@22549>          MOVE.w #$6d00,-2(a4)                              ;blt
00046668 <AmiBlitz3.ab2@22550> BRA.s br
0004666E <AmiBlitz3.ab2@22553>   CMP.w #$5fc0,-2(a4)                                      ;<=
00046672 <AmiBlitz3.ab2@22554>         BNE.s b6
00046678 <AmiBlitz3.ab2@22555>          MOVE.w #$6e00,-2(a4)                              ;bgt
0004667A <AmiBlitz3.ab2@22558>   TST.w (a7)+
00046680 <AmiBlitz3.ab2@22560>         TST.b fast
00046684 <AmiBlitz3.ab2@22561>         BEQ 'l1
0004668A <AmiBlitz3.ab2@22562>         OR.b #$ff,-1(a4)                                   ;long branches
0004668E <AmiBlitz3.ab2@22563>         BSR writeword
00046692 <AmiBlitz3.ab2@22567>         BSR writeword
00046696 <AmiBlitz3.ab2@22568> BRA.s br2
0004669A <AmiBlitz3.ab2@22571>   BSR.w writeword
0004669E <AmiBlitz3.ab2@22574>   MOVE.l posbr(PC),D1
000466A0 <AmiBlitz3.ab2@22575>   TST.w (A7)+
000466A4 <AmiBlitz3.ab2@22576>    BEQ.w JL_0_D0C2
000466A8 <AmiBlitz3.ab2@22577>   MOVE.l negbr(PC),D1
000466AE <AmiBlitz3.ab2@22580>   TST.b fast
000466B2 <AmiBlitz3.ab2@22581>            BEQ 'l1
000466B8 <AmiBlitz3.ab2@22582>            OR.l #$00ff0000,d1
000466BC <AmiBlitz3.ab2@22583>            BSR writelong
000466C0 <AmiBlitz3.ab2@22584>            BSR writeword
000466C4 <AmiBlitz3.ab2@22585> BRA br2
000466C8 <AmiBlitz3.ab2@22588>   BSR.w writelong
000466CA <AmiBlitz3.ab2@22591>  MOVEQ.l #$0E,D0
000466CC <AmiBlitz3.ab2@22592>   MOVEQ.l #$01,D1
000466D2 <AmiBlitz3.ab2@22593>   MOVEA.l _execbase,A6
000466D8 <AmiBlitz3.ab2@22595>   MOVE.l mempool,a0
000466DC <AmiBlitz3.ab2@22596>   JSR _AllocPooled(a6)
000466DE <AmiBlitz3.ab2@22597>   MOVEA.l D0,A0
000466E4 <AmiBlitz3.ab2@22598>   MOVE.l firstiff,(A0)
000466EA <AmiBlitz3.ab2@22599>   MOVE.l A0,firstiff
000466EE <AmiBlitz3.ab2@22600>   MOVE.l (A7)+,$4(A0)
000466F6 <AmiBlitz3.ab2@22601>   MOVE.l destpointer,$8(A0)
000466FA <AmiBlitz3.ab2@22602>   MOVE.w (A7)+,$C(A0)
00046700 <AmiBlitz3.ab2@22603>    JSR reget
00046704 <AmiBlitz3.ab2@22604>    BEQ.w JL_0_D10C
0004670A <AmiBlitz3.ab2@22605>   BSET #$7,$C(A0)
00046714 <AmiBlitz3.ab2@22609>   MOVE.w oldqflag,instringon
0004671A <AmiBlitz3.ab2@22610>   MOVEA.l lastsourcepos,A5
00046722 <AmiBlitz3.ab2@22611>   MOVE.w #$003A,lastchar
00046724 <AmiBlitz3.ab2@22614> RTS
00046728 <AmiBlitz3.ab2@22618>   CMP.w #$1,D0
0004672C <AmiBlitz3.ab2@22619>    BLT.w JL_0_D128
00046730 <AmiBlitz3.ab2@22620>   CMP.w #$0,D0
00046734 <AmiBlitz3.ab2@22621>    BGT.w JL_0_D128
00046736 <AmiBlitz3.ab2@22622>   ADD.w D0,D0
00046738 <AmiBlitz3.ab2@22623>   ADD.w D0,D0
0004673C <AmiBlitz3.ab2@22624>   MOVEA.l JL_0_D128(PC,D0.W),A0
0004673E <AmiBlitz3.ab2@22627> JMP (A0)
00046742 <AmiBlitz3.ab2@22630> BRA.w JL_0_D128
00046746 <AmiBlitz3.ab2@22634>   CMP.w #$1,D0
0004674A <AmiBlitz3.ab2@22635>    BLT.w JL_0_D146
0004674E <AmiBlitz3.ab2@22636>   CMP.w #$0,D0
00046752 <AmiBlitz3.ab2@22637>    BGT.w JL_0_D146
00046754 <AmiBlitz3.ab2@22638>   ADD.w D0,D0
00046756 <AmiBlitz3.ab2@22639>   ADD.w D0,D0
0004675A <AmiBlitz3.ab2@22640>   MOVEA.l JL_0_D146(PC,D0.W),A0
0004675C <AmiBlitz3.ab2@22643>   JSR (A0)
00046760 <AmiBlitz3.ab2@22646> BRA.w JL_0_D146
00046764 <AmiBlitz3.ab2@22650>   CMP.w #$1,D0
00046768 <AmiBlitz3.ab2@22651>    BLT.w JL_0_D168
0004676C <AmiBlitz3.ab2@22652>   CMP.w #$0,D0
00046770 <AmiBlitz3.ab2@22653>    BGT.w JL_0_D168
00046772 <AmiBlitz3.ab2@22654>   ADD.w D0,D0
00046774 <AmiBlitz3.ab2@22655>   ADD.w D0,D0
00046778 <AmiBlitz3.ab2@22656>   MOVEA.l JL_0_D168(PC,D0.W),A0
0004677C <AmiBlitz3.ab2@22659>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
0004677E <AmiBlitz3.ab2@22662>    JSR (A0)
00046782 <AmiBlitz3.ab2@22665> BRA.w JL_0_D168
00046784 <AmiBlitz3.ab2@22668> labcnt:   Ds.w 1
00046786 <AmiBlitz3.ab2@22675>   MOVEQ.l #$02,D2
0004678A <AmiBlitz3.ab2@22676>    BSR.w bakeval
0004678E <AmiBlitz3.ab2@22677>   LEA JL_0_D10E(PC),A0
00046792 <AmiBlitz3.ab2@22678>   LEA JL_0_D12C(PC),A1
00046796 <AmiBlitz3.ab2@22679>   MOVE.w #$001A,D1
0004679A <AmiBlitz3.ab2@22680>   CMP.w #-$7FFB,D0
0004679E <AmiBlitz3.ab2@22681>    BEQ.w JL_0_D1B6
000467A2 <AmiBlitz3.ab2@22682>   CMP.w #-$7FFA,D0
000467A6 <AmiBlitz3.ab2@22683>    BNE.w JUMP_syntaxerr
000467AA <AmiBlitz3.ab2@22684>   LEA JL_0_D12C(PC),A0
000467AE <AmiBlitz3.ab2@22685>   LEA JL_0_D14A(PC),A1
000467B2 <AmiBlitz3.ab2@22686>   MOVE.w #$001A,D1
000467B8 <AmiBlitz3.ab2@22687>   TST.b debugmode
000467BC <AmiBlitz3.ab2@22688>    BEQ.b JL_0_D1B6
000467C2 <AmiBlitz3.ab2@22689>    JSR chkstak
000467C6 <AmiBlitz3.ab2@22690>   LEA JL_0_D14A(PC),A0
000467CA <AmiBlitz3.ab2@22691>   LEA labcnt(PC),A1
000467CE <AmiBlitz3.ab2@22692>   MOVE.w #$001E,D1
000467D0 <AmiBlitz3.ab2@22695>   MOVE.w D1,-(A7)
000467D6 <AmiBlitz3.ab2@22696>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
000467DA <AmiBlitz3.ab2@22697>    BSR.w pokecode
000467E0 <AmiBlitz3.ab2@22698>   CLR.w labcnt
000467E6 <AmiBlitz3.ab2@22703>    JSR get1bytemain
000467EC <AmiBlitz3.ab2@22704>   SUBQ.l #2,destpointer                                    ;for makealab!
000467F0 <AmiBlitz3.ab2@22705>    BSR.w JL_0_AE22
000467F6 <AmiBlitz3.ab2@22706>   ADDQ.l #2,destpointer
000467FC <AmiBlitz3.ab2@22707>    JSR addoff
00046800 <AmiBlitz3.ab2@22708>   MOVE.l $8(A2),D1
00046804 <AmiBlitz3.ab2@22709>    BSR.w writelong
0004680A <AmiBlitz3.ab2@22710>   ADDQ.w #1,labcnt
00046810 <AmiBlitz3.ab2@22711>    JSR reget
00046814 <AmiBlitz3.ab2@22712>   CMP.w #$2C,D0
00046818 <AmiBlitz3.ab2@22713>    BEQ.w JL_0_D1C8
0004681A <AmiBlitz3.ab2@22714>   MOVEA.l (A7)+,A0
0004681C <AmiBlitz3.ab2@22715>   MOVE.w (A7)+,D2
00046822 <AmiBlitz3.ab2@22716>   MOVE.w dontwrite,D1
00046826 <AmiBlitz3.ab2@22717>    BNE.w JL_0_D21A
0004682A <AmiBlitz3.ab2@22718>   MOVE.w labcnt(PC),D1
0004682E <AmiBlitz3.ab2@22719>   MOVE.w D1,$A(A0)
00046830 <AmiBlitz3.ab2@22720>   ADD.w D1,D1
00046832 <AmiBlitz3.ab2@22721>   ADD.w D1,D1
00046834 <AmiBlitz3.ab2@22722>   ADDQ.w #2,D1
00046838 <AmiBlitz3.ab2@22723>   MOVE.w D1,$2(A0,D2.W)
0004683A <AmiBlitz3.ab2@22726> RTS
00046840 <AmiBlitz3.ab2@22730>   TST.b debugmode
00046844 <AmiBlitz3.ab2@22731>    BEQ.w JL_0_D236
0004684A <AmiBlitz3.ab2@22732>    JSR chkstak
00046850 <AmiBlitz3.ab2@22733>   MOVE.l AL_0_D162,D1
00046854 <AmiBlitz3.ab2@22734>    BSR.w writelong
0004685A <AmiBlitz3.ab2@22736>   MOVE.w gosubcode,D1
0004685E <AmiBlitz3.ab2@22737> BRA.w JL_0_D246
00046864 <AmiBlitz3.ab2@22741>   MOVE.w gotocode,D1
00046866 <AmiBlitz3.ab2@22744>   MOVE.w D1,-(A7)
0004686A <AmiBlitz3.ab2@22745>    BSR.w JL_0_AE22
0004686C <AmiBlitz3.ab2@22746>   MOVE.w (A7)+,D1
00046870 <AmiBlitz3.ab2@22747>    BSR.w writeword
00046876 <AmiBlitz3.ab2@22748>    JSR addoff
0004687A <AmiBlitz3.ab2@22749>   MOVE.l $8(A2),D1
0004687E <AmiBlitz3.ab2@22750> BRA.w writelong
00046884 <AmiBlitz3.ab2@22754>   MOVE.w proceduremode,D1
00046888 <AmiBlitz3.ab2@22755>    BEQ.w JUMP_badpenderr
0004688C <AmiBlitz3.ab2@22756>   MOVE.w #$4EF9,D1
00046890 <AmiBlitz3.ab2@22757>    BSR.w writeword
00046896 <AmiBlitz3.ab2@22758>    JSR addoff
0004689C <AmiBlitz3.ab2@22759>   MOVEA.l _execbase,A6
0004689E <AmiBlitz3.ab2@22760>   MOVEQ.l #$08,D0
000468A0 <AmiBlitz3.ab2@22761>   MOVEQ.l #$01,D1
000468A6 <AmiBlitz3.ab2@22763>   MOVE.l mempool,a0
000468AA <AmiBlitz3.ab2@22764>   JSR _AllocPooled(a6)
000468AC <AmiBlitz3.ab2@22765>   MOVEA.l D0,A0
000468B2 <AmiBlitz3.ab2@22766>   MOVE.l firstpend,(A0)
000468B8 <AmiBlitz3.ab2@22767>   MOVE.l A0,firstpend
000468C0 <AmiBlitz3.ab2@22768>   MOVE.l destpointer,$4(A0)
000468C4 <AmiBlitz3.ab2@22769> BRA.w writelong
000468C8 <AmiBlitz3.ab2@22773>   BSR.w do_AsmExit
000468CE <AmiBlitz3.ab2@22774> JMP get1bytemain
000468D6 <AmiBlitz3.ab2@22778>   MOVE.b #1,nostringopt
000468DA <AmiBlitz3.ab2@22779>   MOVEM.l a0/a1/d1,-(a7)
000468E0 <AmiBlitz3.ab2@22780>   MOVEA.l currentfunction,A0
000468E6 <AmiBlitz3.ab2@22781>     CMP.l #0,a0
000468EA <AmiBlitz3.ab2@22782>     BNE 'l1
000468F0 <AmiBlitz3.ab2@22783>     JMP errorasmexit
000468F2 <AmiBlitz3.ab2@22784> 'l1 MOVEQ.l #$00,D2
000468F6 <AmiBlitz3.ab2@22785>   MOVE.b $5(A0),D2
000468FA <AmiBlitz3.ab2@22786>   BSR.w eval
00046900 <AmiBlitz3.ab2@22788>   MOVEA.l currentfunction,A0
00046904 <AmiBlitz3.ab2@22789>   MOVE.l funcstruct_returntype(a0),a0
0004690A <AmiBlitz3.ab2@22790>   CMP.l #0,a0
0004690E <AmiBlitz3.ab2@22791>   BEQ 'isstatement
00046916 <AmiBlitz3.ab2@22792>   CMP.l #$100,4(a0)
0004691A <AmiBlitz3.ab2@22793>   BLT.w 'isvar
0004691C <AmiBlitz3.ab2@22794>   MOVE.l a2,a1
00046922 <AmiBlitz3.ab2@22795>   TST.l typetocast
00046926 <AmiBlitz3.ab2@22796>   BEQ 'nocast
0004692C <AmiBlitz3.ab2@22797>   MOVE.l typetocast,a1
0004692E <AmiBlitz3.ab2@22798> 'nocast  CMP.l a0,a1
00046932 <AmiBlitz3.ab2@22799>   BEQ 'ok
00046938 <AmiBlitz3.ab2@22800>   CLR.l typetocast
0004693E <AmiBlitz3.ab2@22801>   MOVE.l lasttoken,d1
00046942 <AmiBlitz3.ab2@22802>   CMP.w #$b581,d1                   ; ok, when token for null
00046946 <AmiBlitz3.ab2@22803>   BEQ 'isnull
0004694C <AmiBlitz3.ab2@22804> 'error  JMP errorconvertreturntype
00046950 <AmiBlitz3.ab2@22811>   MOVEM.l (a7)+,a0/a1/d1
00046954 <AmiBlitz3.ab2@22812> BRA.w do_AsmExit
0004695A <AmiBlitz3.ab2@22814> error_convert_types2 JMP error_convert_types
00046960 <AmiBlitz3.ab2@22827>   TST.b debugmode
00046964 <AmiBlitz3.ab2@22828>    BEQ.w JL_0_D2CA
00046968 <AmiBlitz3.ab2@22829>   MOVE.w #$C305,D1
0004696C <AmiBlitz3.ab2@22830> BRA.w Atokejsr
00046970 <AmiBlitz3.ab2@22833>   MOVE.w #$4E75,D1
00046974 <AmiBlitz3.ab2@22834> BRA.w writeword
00046978 <AmiBlitz3.ab2@22837> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
0004697C <AmiBlitz3.ab2@22838> proclocals:  Ds.l 1                                        ;for debugga!
0004697E <AmiBlitz3.ab2@22839> procnum:     Ds.w 1
00046980 <AmiBlitz3.ab2@22840> procnum2:    Ds.w 1
00046984 <AmiBlitz3.ab2@22841> prolineat:   Ds.l 1
0004698A <AmiBlitz3.ab2@22845>    TST.w proceduremode
0004698E <AmiBlitz3.ab2@22846>    BGT JUMP_sreterr
00046992 <AmiBlitz3.ab2@22847>    CMP.w #-$7FF9,D0
00046996 <AmiBlitz3.ab2@22848>    BEQ.w JL_0_D29C
00046998 <AmiBlitz3.ab2@22849>    MOVEQ.l #-$01,D1
0004699C <AmiBlitz3.ab2@22850> BRA.w do_function2
000469A2 <AmiBlitz3.ab2@22853> JMP sreterr
000469A8 <AmiBlitz3.ab2@22857>   CLR.b skipfunc
000469AE <AmiBlitz3.ab2@22858>   TST.l unusedfunc
000469B2 <AmiBlitz3.ab2@22859>   BEQ 'ex
000469B6 <AmiBlitz3.ab2@22860>   MOVEM.l d0-d7/a0-a6,-(a7)
000469BC <AmiBlitz3.ab2@22861>   MOVE.l unusedfunc,d1
000469C2 <AmiBlitz3.ab2@22862>   LEA ptr_parameterstore,a5
000469C4 <AmiBlitz3.ab2@22865>   MOVE.l d1,a0
000469C8 <AmiBlitz3.ab2@22866>   LEA 12(a0),a2
000469CA <AmiBlitz3.ab2@22867>   MOVE.l a5,a1
000469CC <AmiBlitz3.ab2@22869>   CMPM.b (a1)+,(a2)+
000469D0 <AmiBlitz3.ab2@22870>   BNE 'neq
000469D2 <AmiBlitz3.ab2@22871>   TST.b (a2)
000469D6 <AmiBlitz3.ab2@22872>   BNE 'ch
000469D8 <AmiBlitz3.ab2@22873>   TST.b (a1)
000469DC <AmiBlitz3.ab2@22874>   BNE 'neq
000469E4 <AmiBlitz3.ab2@22875>   MOVE.b #1,skipfunc
000469E8 <AmiBlitz3.ab2@22876> BRA 'out
000469EA <AmiBlitz3.ab2@22879>   MOVE.l (a0),d1
000469EE <AmiBlitz3.ab2@22880>   BNE 'ag
000469F2 <AmiBlitz3.ab2@22883>   MOVEM.l (a7)+,d0-d7/a0-a6
000469F4 <AmiBlitz3.ab2@22886> RTS
000469FA <AmiBlitz3.ab2@22890> JMP dupprocerr
00046A00 <AmiBlitz3.ab2@22893> JMP illprocperr
00046A08 <AmiBlitz3.ab2@22900>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00046A0C <AmiBlitz3.ab2@22901>    BEQ JUMP_sreterr
00046A10 <AmiBlitz3.ab2@22902>   CMP.w #-$7FF9,D0
00046A14 <AmiBlitz3.ab2@22903>    BEQ.w do_function_return
00046A1E <AmiBlitz3.ab2@22906>   MOVE.w oldqflag,instringon
00046A24 <AmiBlitz3.ab2@22907>   MOVEA.l lastsourcepos,A5
00046A2A <AmiBlitz3.ab2@22908>   JSR getfunctionreturntype
00046A30 <AmiBlitz3.ab2@22909>   JSR get1bytemain
00046A36 <AmiBlitz3.ab2@22912>   TST.b declare
00046A3A <AmiBlitz3.ab2@22913>   BEQ 'l1
00046A42 <AmiBlitz3.ab2@22914>   MOVE.b #1,nowdeclare
00046A48 <AmiBlitz3.ab2@22917>   JSR errchx                                           ;writejumpoverfunction
00046A4E <AmiBlitz3.ab2@22920>   CLR.b fastfunc
00046A58 <AmiBlitz3.ab2@22921>   MOVE.l firstiff,firstiffstore
00046A60 <AmiBlitz3.ab2@22922>   CMP.l #"FAST",-1(a5)
00046A64 <AmiBlitz3.ab2@22923>   BNE 'nofast
00046A6A <AmiBlitz3.ab2@22924>   CMP.b #" ",3(a5)
00046A6E <AmiBlitz3.ab2@22925>   BNE 'nofast
00046A70 <AmiBlitz3.ab2@22926>   ADDQ.l #3,a5
00046A74 <AmiBlitz3.ab2@22929>     CMP.b #" ",(a5)
00046A78 <AmiBlitz3.ab2@22930>      BNE 'x1
00046A7A <AmiBlitz3.ab2@22931>     ADDQ #1,a5
00046A7E <AmiBlitz3.ab2@22932> BRA 'x2
00046A84 <AmiBlitz3.ab2@22935>   MOVE.l a5,lastsourcepos
00046A8C <AmiBlitz3.ab2@22936>   MOVE.b #1,fastfunc
00046A94 <AmiBlitz3.ab2@22939>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00046A98 <AmiBlitz3.ab2@22940> BRA 'noopt
00046A9E <AmiBlitz3.ab2@22942>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00046AA2 <AmiBlitz3.ab2@22943>   BNE 'noopt
00046AA4 <AmiBlitz3.ab2@22944>   ADDQ.l #4,a5
00046AA8 <AmiBlitz3.ab2@22947>     CMP.b #" ",(a5)
00046AAC <AmiBlitz3.ab2@22948>      BNE 'x1b
00046AAE <AmiBlitz3.ab2@22949>     ADDQ #1,a5
00046AB2 <AmiBlitz3.ab2@22950> BRA 'x2b
00046AB8 <AmiBlitz3.ab2@22953>   MOVE.l a5,lastsourcepos
00046ABE <AmiBlitz3.ab2@22955>   JSR makename2
00046AC2 <AmiBlitz3.ab2@22956> BRA 'l1
00046AC8 <AmiBlitz3.ab2@22960>   JSR makename2
00046ACE <AmiBlitz3.ab2@22961>   JSR checkused
00046AD4 <AmiBlitz3.ab2@22962>   TST.b skipfunc
00046AD8 <AmiBlitz3.ab2@22963>    BEQ 'l1
00046ADE <AmiBlitz3.ab2@22964>   JSR skipme
00046AE4 <AmiBlitz3.ab2@22965>   CLR.b fastfunc
00046AE6 <AmiBlitz3.ab2@22966> RTS
00046AF0 <AmiBlitz3.ab2@22969>   MOVE.l linenumat,prolineat
00046AF6 <AmiBlitz3.ab2@22970>   ADDQ.w #1,procnum2
00046AFE <AmiBlitz3.ab2@22971>   MOVE.w procnum2(PC),procnum
00046B04 <AmiBlitz3.ab2@22972>   MOVE.w D1,proceduremode
00046B0A <AmiBlitz3.ab2@22973>   CLR.w locvaroff
00046B0E <AmiBlitz3.ab2@22974>   CMP.w #$7B,D0
00046B12 <AmiBlitz3.ab2@22975>    BNE.w JUMP_syntaxerr
00046B1A <AmiBlitz3.ab2@22976>    MOVE.b #1,infunctioncode
00046B20 <AmiBlitz3.ab2@22977>   MOVEA.l tempvm,A0
00046B28 <AmiBlitz3.ab2@22978>   MOVE.w $C(A0),memlibstat
00046B2E <AmiBlitz3.ab2@22979>   BCLR #$7,$C(A0)                                          ;Bit out of range
00046B32 <AmiBlitz3.ab2@22980>   MOVE.w #$4EF9,D1
00046B36 <AmiBlitz3.ab2@22981>    BSR.w writeword
00046B3C <AmiBlitz3.ab2@22982>    JSR addoff
00046B40 <AmiBlitz3.ab2@22983>    BSR.w writelong
00046B46 <AmiBlitz3.ab2@22984>    JSR findproc                                          ;findproc function
00046B4A <AmiBlitz3.ab2@22985>    BEQ.w JUMP_dupprocerr
00046B50 <AmiBlitz3.ab2@22986>    JSR addlabel
00046B56 <AmiBlitz3.ab2@22987>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00046B5C <AmiBlitz3.ab2@22988>    MOVE.b #0,isfunc(a2)
00046B64 <AmiBlitz3.ab2@22989>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00046B6C <AmiBlitz3.ab2@22990>   MOVE.l destpointer,$E(A2)
00046B72 <AmiBlitz3.ab2@22991>   MOVE.l A2,currentfunction
00046B78 <AmiBlitz3.ab2@22992>   LEA nops8,A0
00046B7E <AmiBlitz3.ab2@22993>   LEA dataget,A1
00046B82 <AmiBlitz3.ab2@22994>    BSR.w pokecode2
00046B88 <AmiBlitz3.ab2@22995>   TST.b debugmode
00046B8C <AmiBlitz3.ab2@22996>    BEQ.b JL_0_D3AA
00046B8E <AmiBlitz3.ab2@22997>   MOVEQ.l #$04,D1
00046B94 <AmiBlitz3.ab2@22998>    JSR writetrap
00046B9E <AmiBlitz3.ab2@22999>   MOVE.l destpointer,proclocals
00046BA2 <AmiBlitz3.ab2@23000>    BSR.w writelong
00046BA6 <AmiBlitz3.ab2@23001>    BSR.w writelong
00046BAA <AmiBlitz3.ab2@23004>    LEA $16(A2),A4
00046BB2 <AmiBlitz3.ab2@23005>   MOVE.b proceduremode+1,$5(A2)
00046BB4 <AmiBlitz3.ab2@23006>   MOVEQ.l #$00,D6
00046BB6 <AmiBlitz3.ab2@23007>   MOVEQ.l #$00,D5
00046BBC <AmiBlitz3.ab2@23008>    JSR get1bytemain
00046BC0 <AmiBlitz3.ab2@23009>   CMP.w #$7D,D0
00046BC4 <AmiBlitz3.ab2@23010>    BEQ.w JL_0_D466
00046BC8 <AmiBlitz3.ab2@23013>    CMP.b #"@",d0
00046BCC <AmiBlitz3.ab2@23014>    BNE 'l2
00046BCE <AmiBlitz3.ab2@23015>    MOVE.l a0,-(a7)
00046BD4 <AmiBlitz3.ab2@23016>    MOVE.l currentfunction,a0
00046BDA <AmiBlitz3.ab2@23017>    CMP.b #31,$20(a0)                                       ;increase if morepars
00046BDE <AmiBlitz3.ab2@23018>    BNE 'l1
00046BE2 <AmiBlitz3.ab2@23019>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00046BE8 <AmiBlitz3.ab2@23022>    JSR get1bytemain
00046BEA <AmiBlitz3.ab2@23023>    MOVE.l (a7)+,a0
00046BEE <AmiBlitz3.ab2@23026>    BSR.w getparameter
00046BF2 <AmiBlitz3.ab2@23027>    BSR.w JL_0_8E3C
00046BFA <AmiBlitz3.ab2@23028>   CMPI.l #$7,$4(A2)
00046BFE <AmiBlitz3.ab2@23029>    BNE.w JL_0_D3F6
00046C04 <AmiBlitz3.ab2@23030>   LEA stbuff,A0
00046C06 <AmiBlitz3.ab2@23031>   MOVE.w D5,D1
00046C08 <AmiBlitz3.ab2@23032>   LSL.w #2,D1
00046C0C <AmiBlitz3.ab2@23033>   MOVE.w D6,$0(A0,D1.W)
00046C12 <AmiBlitz3.ab2@23034>   MOVE.w $4(A3),$2(A0,D1.W)
00046C14 <AmiBlitz3.ab2@23035>   ADDQ.w #1,D5
00046C16 <AmiBlitz3.ab2@23036>   MOVEQ.l #$07,D2
00046C1A <AmiBlitz3.ab2@23037> BRA.w JL_0_D442
00046C20 <AmiBlitz3.ab2@23040> JMP toovarerr
00046C24 <AmiBlitz3.ab2@23043>   MOVE.w #$2940,D1
00046C26 <AmiBlitz3.ab2@23044>   MOVEQ.l #$03,D2
00046C2E <AmiBlitz3.ab2@23045>   BTST #$0,flagmask+1
00046C32 <AmiBlitz3.ab2@23046>    BNE.w JL_0_D430
00046C3A <AmiBlitz3.ab2@23047>   CMPI.l #$100,$4(A2)
00046C3E <AmiBlitz3.ab2@23048>    BCC.w JUMP_illprocperr
00046C42 <AmiBlitz3.ab2@23049>   MOVE.w $6(A2),D2
00046C46 <AmiBlitz3.ab2@23050>   CMP.w #$2,D2
00046C4A <AmiBlitz3.ab2@23051>    BHI.w JL_0_D430
00046C4E <AmiBlitz3.ab2@23052>    BEQ.w JL_0_D42C
00046C52 <AmiBlitz3.ab2@23053>   EORI.w #$3000,D1
00046C56 <AmiBlitz3.ab2@23054> BRA.w JL_0_D430
00046C5C <AmiBlitz3.ab2@23057> JMP more6pard
00046C60 <AmiBlitz3.ab2@23060>   ORI.w #$1000,D1
00046C62 <AmiBlitz3.ab2@23063>   OR.w D6,D1
00046C68 <AmiBlitz3.ab2@23064>   TST.b fpu
00046C6C <AmiBlitz3.ab2@23065>   BEQ 'nofpu
00046C70 <AmiBlitz3.ab2@23066>   CMP.b #5,d2
00046C74 <AmiBlitz3.ab2@23067>   BNE 'nofpu
00046C78 <AmiBlitz3.ab2@23068>   CMP.w #6,d6
00046C7C <AmiBlitz3.ab2@23069>   BLT 'l10a
00046C82 <AmiBlitz3.ab2@23070>   CMP.l #newtype_double,a2
00046C86 <AmiBlitz3.ab2@23071>   BEQ JUMP_more6pard
00046C8A <AmiBlitz3.ab2@23072> BRA 'nofpu
00046C90 <AmiBlitz3.ab2@23075>   MOVE.l #$f22c6400,d1
00046C94 <AmiBlitz3.ab2@23076>   MOVEM.l d0/a4,-(a7)
00046C96 <AmiBlitz3.ab2@23077>   MOVE.l d6,d0
00046C98 <AmiBlitz3.ab2@23078>   ASL.l #7,d0
00046C9A <AmiBlitz3.ab2@23079>   OR.w d0,d1
00046CA0 <AmiBlitz3.ab2@23080>   CMP.l #newtype_double,a2
00046CA4 <AmiBlitz3.ab2@23081>   BNE 'l1
00046CAA <AmiBlitz3.ab2@23082>   OR.l #$1000,d1
00046CAE <AmiBlitz3.ab2@23085>   BSR writelong
00046CB2 <AmiBlitz3.ab2@23086>   MOVE.w 4(a3),d1
00046CB6 <AmiBlitz3.ab2@23087>   BSR writeword
00046CBA <AmiBlitz3.ab2@23088>   MOVEM.l (a7)+,a4/d0
00046CBE <AmiBlitz3.ab2@23089> BRA JL_0_D442
00046CC0 <AmiBlitz3.ab2@23092>   MOVE.l A4,-(A7)
00046CC4 <AmiBlitz3.ab2@23093>    CMP.w #6,d6
00046CC8 <AmiBlitz3.ab2@23094>    BLT 'l10
00046CCC <AmiBlitz3.ab2@23095>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00046CCE <AmiBlitz3.ab2@23096>    ADD.w d6,d1
00046CD4 <AmiBlitz3.ab2@23097>    JSR Atokejsr
00046CDA <AmiBlitz3.ab2@23098>    TST.w dontwrite
00046CDE <AmiBlitz3.ab2@23099>    BNE 'l10
00046CE4 <AmiBlitz3.ab2@23100>    MOVE.l data1start,d1
00046CEA <AmiBlitz3.ab2@23101>    MOVE.l destpointer,a4
00046CEE <AmiBlitz3.ab2@23102>    ADD.l d1,-6(a4)
00046CF4 <AmiBlitz3.ab2@23103>    MOVE.l destpointer,d1
00046CF6 <AmiBlitz3.ab2@23104>    SUBQ.l #6,d1
00046CFC <AmiBlitz3.ab2@23105>    SUB.l destbufferstart,d1
00046CFE <AmiBlitz3.ab2@23107>    MOVE.l d2,-(a7)
00046D00 <AmiBlitz3.ab2@23108>    MOVE.l d1,d2
00046D06 <AmiBlitz3.ab2@23109>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00046D08 <AmiBlitz3.ab2@23110>    MOVE.l (a7)+,d2
00046D0E <AmiBlitz3.ab2@23111>    MOVE.l destpointer,a4
00046D12 <AmiBlitz3.ab2@23112>    CMP.w #2,d2
00046D16 <AmiBlitz3.ab2@23113>    BNE 'nw1
00046D1C <AmiBlitz3.ab2@23115>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00046D24 <AmiBlitz3.ab2@23116>    ADD.l #2,-6(a4)
00046D28 <AmiBlitz3.ab2@23119>    CMP.w #1,d2
00046D2C <AmiBlitz3.ab2@23120>    BNE 'nb
00046D32 <AmiBlitz3.ab2@23121>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00046D3A <AmiBlitz3.ab2@23122>    ADD.l #3,-6(a4)
00046D40 <AmiBlitz3.ab2@23125>    MOVE.w $4(a3),-2(a4)
00046D44 <AmiBlitz3.ab2@23126> BRA 'ne1
00046D48 <AmiBlitz3.ab2@23129>   BSR.w writeword                                          ;write storeparameter
00046D4C <AmiBlitz3.ab2@23132>   MOVE.w $4(A3),D1
00046D50 <AmiBlitz3.ab2@23133>    BSR.w writeword
00046D52 <AmiBlitz3.ab2@23136>   MOVEA.l (A7)+,A4
00046D58 <AmiBlitz3.ab2@23139>   CLR.l functionreturntype
00046D5A <AmiBlitz3.ab2@23140>   ADDQ.w #1,D6
00046D5E <AmiBlitz3.ab2@23141>   CMP.w #11,D6                                             ;max function parameters
00046D62 <AmiBlitz3.ab2@23142>    BCC.w JUMP_toovarerr
00046D68 <AmiBlitz3.ab2@23143>   MOVE.l currentfunction,a0
00046D6C <AmiBlitz3.ab2@23144>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00046D6E <AmiBlitz3.ab2@23145>   MOVE.b D2,(A4)+
00046D72 <AmiBlitz3.ab2@23146>   CMP.w #$2C,D0
00046D76 <AmiBlitz3.ab2@23147>    BNE.w JL_0_D45E
00046D7C <AmiBlitz3.ab2@23148>    JSR get1bytemain
00046D80 <AmiBlitz3.ab2@23160> BRA.w JL_0_D3C6
00046D84 <AmiBlitz3.ab2@23163>   CMP.w #$7D,D0
00046D88 <AmiBlitz3.ab2@23164>    BNE.w JUMP_syntaxerr
00046D8E <AmiBlitz3.ab2@23167>   MOVEA.l currentfunction,A2
00046D90 <AmiBlitz3.ab2@23168>   LSL.w #4,D5
00046D92 <AmiBlitz3.ab2@23169>   OR.w D5,D6
00046D96 <AmiBlitz3.ab2@23170>   MOVE.b D6,$4(A2)
00046D98 <AmiBlitz3.ab2@23171>   LSR.w #4,D6
00046D9C <AmiBlitz3.ab2@23172>    BEQ.w JL_0_D4C4
00046DA2 <AmiBlitz3.ab2@23173>   LEA stbuff,A0
00046DA4 <AmiBlitz3.ab2@23174>   SUBQ.w #1,D6
00046DA6 <AmiBlitz3.ab2@23177>     MOVE.w D6,D1                                           ;function stringpars
00046DA8 <AmiBlitz3.ab2@23178>     LSL.w #2,D1                                            ;stringsize was 2
00046DAA <AmiBlitz3.ab2@23180>       LSL.w #1,d1
00046DAC <AmiBlitz3.ab2@23181>       ADDQ.w #4,d1
00046DAE <AmiBlitz3.ab2@23183>     ADDQ.w #8,D1
00046DB4 <AmiBlitz3.ab2@23184>     MOVE.w D1,funcst+2
00046DBA <AmiBlitz3.ab2@23185>     MOVE.l funcst,D1
00046DBE <AmiBlitz3.ab2@23186>     BSR.w writelong
00046DC0 <AmiBlitz3.ab2@23187>     MOVE.w (A0)+,D1
00046DC4 <AmiBlitz3.ab2@23188>     CMP.b #5,d1
00046DC8 <AmiBlitz3.ab2@23189>     BLE 's1
00046DCC <AmiBlitz3.ab2@23190>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00046DD0 <AmiBlitz3.ab2@23191>     BSR writeinstruction
00046DD2 <AmiBlitz3.ab2@23192>     MOVE.w D6,D1                                           ;function stringpars
00046DD4 <AmiBlitz3.ab2@23193>     LSL.w #2,D1                                            ;stringsize was 2
00046DD6 <AmiBlitz3.ab2@23195>       LSL.w #1,d1
00046DD8 <AmiBlitz3.ab2@23197>     ADDQ.w #8,D1
00046DDC <AmiBlitz3.ab2@23198>     BSR writeword
00046DE0 <AmiBlitz3.ab2@23199>   BRA 's2
00046DE6 <AmiBlitz3.ab2@23202>     OR.w movedna3,D1
00046DEA <AmiBlitz3.ab2@23203>      BSR.w writeword
00046DF0 <AmiBlitz3.ab2@23206>     MOVE.w (A0)+,least+2
00046DF6 <AmiBlitz3.ab2@23207>     MOVE.l least,D1
00046DFA <AmiBlitz3.ab2@23208>      BSR.w writelong
00046DFC <AmiBlitz3.ab2@23209>     MOVE.l A0,-(A7)
00046E00 <AmiBlitz3.ab2@23210>     MOVE.w #$C700,D1
00046E04 <AmiBlitz3.ab2@23211>      BSR.w Atokejsr
00046E06 <AmiBlitz3.ab2@23212>     MOVEA.l (A7)+,A0
00046E0A <AmiBlitz3.ab2@23213>   DBF D6,JL_0_D482
00046E10 <AmiBlitz3.ab2@23216> JMP get1bytemain
00046E16 <AmiBlitz3.ab2@23220>   MOVE.w dontwrite,D1
00046E1A <AmiBlitz3.ab2@23221>    BNE.w JL_0_D4F6
00046E20 <AmiBlitz3.ab2@23222>   MOVE.l destpointer,-(A7)
00046E26 <AmiBlitz3.ab2@23223>   MOVE.l A0,destpointer
00046E2C <AmiBlitz3.ab2@23224>   MOVE.l linksize,D1
00046E30 <AmiBlitz3.ab2@23225>    BSR.w writelong                                         ;writefunctions jumppos
00046E36 <AmiBlitz3.ab2@23226>    TST.b fastfunc
00046E3A <AmiBlitz3.ab2@23227>    BNE 'skip
00046E3E <AmiBlitz3.ab2@23228>   MOVE.w #$CC00,D1
00046E42 <AmiBlitz3.ab2@23229>    BSR.w tokejsr2                                          ;write clearvars
00046E48 <AmiBlitz3.ab2@23232>   MOVE.l (A7)+,destpointer
00046E4A <AmiBlitz3.ab2@23235> RTS
00046E50 <AmiBlitz3.ab2@23239>   MOVEA.l currentfunction,A2
00046E54 <AmiBlitz3.ab2@23240>   MOVEA.l $E(A2),A0
00046E58 <AmiBlitz3.ab2@23241>   MOVE.w $6(A2),D1
00046E5C <AmiBlitz3.ab2@23242>    BEQ.w JL_0_D538
00046E62 <AmiBlitz3.ab2@23243>   MOVE.w D1,linksize+2
00046E66 <AmiBlitz3.ab2@23244>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00046E6A <AmiBlitz3.ab2@23245>    BNE.w JL_0_D522
00046E6C <AmiBlitz3.ab2@23246>   ADDQ.w #6,A0
00046E70 <AmiBlitz3.ab2@23247>   MOVE.l A0,$E(A2)
00046E74 <AmiBlitz3.ab2@23248> BRA.w JL_0_D4C8
00046E76 <AmiBlitz3.ab2@23251>   MOVE.l A0,-(A7)
00046E7A <AmiBlitz3.ab2@23252>    BSR.w JL_0_D4C8
00046E7C <AmiBlitz3.ab2@23253>   MOVEA.l (A7)+,A0
00046E80 <AmiBlitz3.ab2@23254>   LEA $A(A0),A0
00046E86 <AmiBlitz3.ab2@23255>   MOVEA.l currentfunction,A2
00046E8A <AmiBlitz3.ab2@23256> BRA.w JL_0_D54A
00046E8E <AmiBlitz3.ab2@23259>   MOVE.w $8(A2),D1
00046E92 <AmiBlitz3.ab2@23260>    BNE.w JL_0_D54A
00046E96 <AmiBlitz3.ab2@23261>   LEA $10(A0),A0
00046E9A <AmiBlitz3.ab2@23262>   MOVE.l A0,$E(A2)
00046E9C <AmiBlitz3.ab2@23263> RTS
00046EA2 <AmiBlitz3.ab2@23267> JMP errormsg_nofast
00046EA8 <AmiBlitz3.ab2@23270>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00046EAC <AmiBlitz3.ab2@23271>    BNE.w JL_0_D580
00046EB2 <AmiBlitz3.ab2@23272>    TST.b fastfunc
00046EB6 <AmiBlitz3.ab2@23273>    BNE JUMP_errormsg_nofast
00046EBC <AmiBlitz3.ab2@23274>   MOVE.l destpointer,-(A7)
00046EC2 <AmiBlitz3.ab2@23275>   MOVE.l A0,destpointer
00046EC6 <AmiBlitz3.ab2@23276>   MOVE.w #$4EB9,D1
00046ECA <AmiBlitz3.ab2@23277>    BSR.w writeword
00046ED0 <AmiBlitz3.ab2@23278>    JSR addoff
00046ED4 <AmiBlitz3.ab2@23279>    BSR.w writelong
00046ED6 <AmiBlitz3.ab2@23280>   MOVEA.l (A7)+,A0
00046EDC <AmiBlitz3.ab2@23281>   MOVEA.l destpointer,A1
00046EDE <AmiBlitz3.ab2@23282>   MOVE.l A0,-(A1)
00046EE4 <AmiBlitz3.ab2@23283>   MOVE.l A0,destpointer
00046EE8 <AmiBlitz3.ab2@23286>   MOVE.w $8(A2),D4
00046EEC <AmiBlitz3.ab2@23287>    BPL.w JL_0_D59E
00046EF0 <AmiBlitz3.ab2@23288>   MOVE.w #$C004,D1
00046EF4 <AmiBlitz3.ab2@23289>    BSR.w tokejsr2
00046EFA <AmiBlitz3.ab2@23290>   MOVEA.l currentfunction,A2
00046EFE <AmiBlitz3.ab2@23291>   MOVE.w $8(A2),D4
00046F02 <AmiBlitz3.ab2@23292>   ANDI.w #$7FFF,D4
00046F06 <AmiBlitz3.ab2@23295>    BEQ.w JL_0_D5E0
00046F0A <AmiBlitz3.ab2@23296>   MOVE.b $4(A2),D1
00046F0E <AmiBlitz3.ab2@23297>   ANDI.w #$F,D1
00046F10 <AmiBlitz3.ab2@23298>   MOVE.w D1,-(A7)
00046F14 <AmiBlitz3.ab2@23299>   CMP.w #$5,D1
00046F18 <AmiBlitz3.ab2@23300>    BCS.w JL_0_D5BC
00046F1C <AmiBlitz3.ab2@23301>   MOVE.w #$2F04,D1
00046F20 <AmiBlitz3.ab2@23302>    BSR.w writeword
00046F26 <AmiBlitz3.ab2@23305>   MOVE.l locdatast,D3
00046F2C <AmiBlitz3.ab2@23306>    JSR datastart
00046F30 <AmiBlitz3.ab2@23307>   MOVE.w #$C501,D1
00046F34 <AmiBlitz3.ab2@23308>    BSR.w tokejsr2
00046F36 <AmiBlitz3.ab2@23309>   MOVE.w (A7)+,D1
00046F3A <AmiBlitz3.ab2@23310>   CMP.w #$5,D1
00046F3E <AmiBlitz3.ab2@23311>    BCS.w JL_0_D5E0
00046F42 <AmiBlitz3.ab2@23312>   MOVE.w #$281F,D1
00046F46 <AmiBlitz3.ab2@23313>    BSR.w writeword
00046F4A <AmiBlitz3.ab2@23315>   MOVE.w #$4E75,D1
00046F4E <AmiBlitz3.ab2@23316> BRA.w writeword
00046F54 <AmiBlitz3.ab2@23320>   LEA mwait,A0
00046F5A <AmiBlitz3.ab2@23321>   LEA mwaitf,A1
00046F5E <AmiBlitz3.ab2@23322> BRA.w pokecode
00046F64 <AmiBlitz3.ab2@23326> JMP laberr
00046F68 <AmiBlitz3.ab2@23329>   CMP.w #$2E,D0
00046F6C <AmiBlitz3.ab2@23330>   BNE.w JUMP_syntaxerr
00046F72 <AmiBlitz3.ab2@23331>   JSR getparameter2
00046F76 <AmiBlitz3.ab2@23332>   BEQ.w JUMP_laberr
00046F7C <AmiBlitz3.ab2@23333>   LEA newtypebase,A2
00046F82 <AmiBlitz3.ab2@23334>   JSR findtype
00046F86 <AmiBlitz3.ab2@23335>   BNE.w JL_0_D626
00046F8E <AmiBlitz3.ab2@23336>   CMPI.l #MaxByte,$4(A2)
00046F92 <AmiBlitz3.ab2@23337>   BNE.w JUMP_typeerr
00046F96 <AmiBlitz3.ab2@23338> BRA.w JL_0_D62A
00046F9C <AmiBlitz3.ab2@23341> JMP typeerr
00046FA2 <AmiBlitz3.ab2@23344>   JSR addlabel
00046FA6 <AmiBlitz3.ab2@23347>   CLR.l $4(A2)
00046FAC <AmiBlitz3.ab2@23348>   MOVE.l A2,thistype
00046FB2 <AmiBlitz3.ab2@23349>   CLR.l prevtype
00046FB8 <AmiBlitz3.ab2@23350>   CLR.w typelen
00046FBE <AmiBlitz3.ab2@23351>   CLR.w linemode
00046FC4 <AmiBlitz3.ab2@23352>   JSR reget
00046FC8 <AmiBlitz3.ab2@23353>   BNE.w typemode
00046FCA <AmiBlitz3.ab2@23354> RTS
00046FCE <AmiBlitz3.ab2@23357>   CMP.w #-$7FFE,D0
00046FD2 <AmiBlitz3.ab2@23358>   BEQ.w JL_0_D82E
00046FDC <AmiBlitz3.ab2@23360>   MOVE.w oldqflag,instringon
00046FE2 <AmiBlitz3.ab2@23361>   MOVEA.l lastsourcepos,A5
00046FE4 <AmiBlitz3.ab2@23362>   MOVEQ.l #$00,D6
00046FE8 <AmiBlitz3.ab2@23363>   CMP.w #$2A,D0
00046FEC <AmiBlitz3.ab2@23364>   BNE.w JL_0_D670
00046FEE <AmiBlitz3.ab2@23365>   MOVEQ.l #$01,D6
00046FF4 <AmiBlitz3.ab2@23366>   JSR get1bytemain
00046FF8 <AmiBlitz3.ab2@23367> BRA.w JL_0_D67E
00046FFC <AmiBlitz3.ab2@23370>   CMP.w #$40,D0
00047000 <AmiBlitz3.ab2@23371>   BNE.w JL_0_D67E
00047002 <AmiBlitz3.ab2@23372>   MOVEQ.l #$05,D6
00047008 <AmiBlitz3.ab2@23373>   JSR get1bytemain
0004700E <AmiBlitz3.ab2@23376>   MOVE.w D6,flagmask
00047014 <AmiBlitz3.ab2@23377>   JSR getparameter2
00047018 <AmiBlitz3.ab2@23378>   BEQ.w JUMP_syntaxerr
0004701E <AmiBlitz3.ab2@23379>   MOVEA.l thistype,A2
00047020 <AmiBlitz3.ab2@23380>   ADDQ.w #4,A2
00047026 <AmiBlitz3.ab2@23381>   JSR findvariable2
0004702A <AmiBlitz3.ab2@23382>   BEQ.w JUMP_dupofferr
00047030 <AmiBlitz3.ab2@23383>   JSR addlabel
00047032 <AmiBlitz3.ab2@23384>   MOVE.l A2,-(A7)
00047036 <AmiBlitz3.ab2@23385>   CMP.w #$2E,D0
0004703A <AmiBlitz3.ab2@23386>    BEQ.w JL_0_D6CE
0004703E <AmiBlitz3.ab2@23387>   CMP.w #$24,D0
00047042 <AmiBlitz3.ab2@23388>    BNE.w JL_0_D6C0
00047048 <AmiBlitz3.ab2@23389>   MOVE.l #newtype_string,D2
0004704E <AmiBlitz3.ab2@23390>    JSR get1bytemain
00047052 <AmiBlitz3.ab2@23391> BRA.w JL_0_D710
00047058 <AmiBlitz3.ab2@23394> JMP dupofferr
0004705E <AmiBlitz3.ab2@23397>   MOVE.l prevtype,D2
00047062 <AmiBlitz3.ab2@23398>   BEQ.w JUMP_notypeerr
00047066 <AmiBlitz3.ab2@23399> BRA.w JL_0_D706
0004706C <AmiBlitz3.ab2@23402> JMP notypeerr
00047072 <AmiBlitz3.ab2@23405>   JSR getparameter2
00047076 <AmiBlitz3.ab2@23406>    BEQ.w JUMP_syntaxerr
0004707C <AmiBlitz3.ab2@23407>   LEA newtypebase,A2
00047082 <AmiBlitz3.ab2@23408>    JSR findtype
00047086 <AmiBlitz3.ab2@23409>    BEQ.w JL_0_D704
0004708E <AmiBlitz3.ab2@23410>   BTST #$0,flagmask+1
00047092 <AmiBlitz3.ab2@23411>    BEQ.w JUMP_notypeerr
00047098 <AmiBlitz3.ab2@23412>   JSR addlabel
000470A0 <AmiBlitz3.ab2@23415>   MOVE.w linenumat+2,$8(A2)
000470A8 <AmiBlitz3.ab2@23416>   MOVE.l #MaxByte,$4(A2)
000470AA <AmiBlitz3.ab2@23419>   MOVE.l A2,D2
000470B0 <AmiBlitz3.ab2@23422>   CMP.l #newtype_byte,D2
000470B4 <AmiBlitz3.ab2@23423>    BEQ.w JL_0_D71E
000470BA <AmiBlitz3.ab2@23426>   ADDQ.w #1,typelen
000470C2 <AmiBlitz3.ab2@23427>   BCLR #$0,typelen+1
000470C4 <AmiBlitz3.ab2@23430>   MOVEQ.l #$00,D3
000470C6 <AmiBlitz3.ab2@23431>   MOVEA.l D2,A2
000470CC <AmiBlitz3.ab2@23432>   MOVE.l A2,prevtype
000470D0 <AmiBlitz3.ab2@23433>   MOVE.w $8(A2),D3
000470D2 <AmiBlitz3.ab2@23434>   MOVEA.l (A7)+,A2
000470D6 <AmiBlitz3.ab2@23435>   MOVE.l D2,$A(A2)
000470D8 <AmiBlitz3.ab2@23436>   MOVEQ.l #$00,D4
000470DE <AmiBlitz3.ab2@23437>   MOVE.w typelen,D4
000470E2 <AmiBlitz3.ab2@23438>   MOVE.w D4,$4(A2)
000470EA <AmiBlitz3.ab2@23439>   BTST #$0,flagmask+1
000470EE <AmiBlitz3.ab2@23440>    BEQ.w JL_0_D74C
000470F0 <AmiBlitz3.ab2@23441>   MOVEQ.l #$04,D3
000470F4 <AmiBlitz3.ab2@23444>   CMP.w #$5B,D0
000470F8 <AmiBlitz3.ab2@23445>    BNE.w JL_0_D782
000470FC <AmiBlitz3.ab2@23446>   MOVEM.l D3-D4/A2,-(A7)
00047100 <AmiBlitz3.ab2@23447>    BSR.w AJL_0_BF6E
00047104 <AmiBlitz3.ab2@23448>   CMP.w #$5D,D0
00047108 <AmiBlitz3.ab2@23449>    BNE.w JUMP_syntaxerr
0004710A <AmiBlitz3.ab2@23450>   TST.w D6
0004710E <AmiBlitz3.ab2@23451>    BNE.w JUMP_fpconerr
00047110 <AmiBlitz3.ab2@23452>   MOVE.l D3,D1
00047114 <AmiBlitz3.ab2@23453>   MOVEM.l (A7)+,D3-D4/A2
0004711A <AmiBlitz3.ab2@23454>    JSR get1bytemain
0004711E <AmiBlitz3.ab2@23455>   MOVE.w D1,$8(A2)
00047122 <AmiBlitz3.ab2@23456>   MULU.l d1,d3                                             ;>32k fix was mulu.w
0004712A <AmiBlitz3.ab2@23457>   ORI.w #$2,flagmask
0004712C <AmiBlitz3.ab2@23460>   ADD.l D3,D4
00047132 <AmiBlitz3.ab2@23463>     CMP.l #65532,d4
00047136 <AmiBlitz3.ab2@23468>   BCC JUMP_toolongerr
0004713E <AmiBlitz3.ab2@23469>   MOVE.w flagmask,$6(A2)
00047144 <AmiBlitz3.ab2@23470>   MOVE.w D4,typelen
00047146 <AmiBlitz3.ab2@23471> RTS
0004714C <AmiBlitz3.ab2@23474> JMP badenderr
00047152 <AmiBlitz3.ab2@23477> JMP noiferr
00047158 <AmiBlitz3.ab2@23480> JMP toolongerr
0004715E <AmiBlitz3.ab2@23483> JMP fpconerr
00047164 <AmiBlitz3.ab2@23486>   MOVE.l firstiff,D0
00047168 <AmiBlitz3.ab2@23487>    BEQ.w JUMP_noiferr
0004716A <AmiBlitz3.ab2@23488>   MOVEA.l D0,A0
0004716E <AmiBlitz3.ab2@23489>   MOVE.w $C(A0),D0
00047172 <AmiBlitz3.ab2@23490>   ANDI.w #$FF,D0
00047174 <AmiBlitz3.ab2@23491>   CMP.w D0,D1
00047178 <AmiBlitz3.ab2@23492>    BNE.w JUMP_badenderr
0004717C <AmiBlitz3.ab2@23495>   CMP.w #$1,D1
00047180 <AmiBlitz3.ab2@23496>   BNE.w JL_0_D7D8
00047184 <AmiBlitz3.ab2@23497>   MOVE.w #$6000,D1
0004718A <AmiBlitz3.ab2@23500>     TST.b fast
0004718E <AmiBlitz3.ab2@23501>     BEQ 'l1
00047194 <AmiBlitz3.ab2@23502>     OR.l #$ff,d1
00047198 <AmiBlitz3.ab2@23506>   BSR.w writeword
0004719E <AmiBlitz3.ab2@23507>   MOVEA.l destpointer,A1
000471A2 <AmiBlitz3.ab2@23508>   MOVE.l $4(A0),D1
000471A4 <AmiBlitz3.ab2@23509>   SUB.l A1,D1
000471AA <AmiBlitz3.ab2@23512>     TST.b fast
000471AE <AmiBlitz3.ab2@23513>     BEQ 'l2
000471B2 <AmiBlitz3.ab2@23514>     BSR writelong
000471B6 <AmiBlitz3.ab2@23515>   BRA JL_0_D7D8
000471BA <AmiBlitz3.ab2@23519>   BSR.w writeword
000471BE <AmiBlitz3.ab2@23522>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000471C4 <AmiBlitz3.ab2@23523>   MOVE.l destpointer,D1
000471C6 <AmiBlitz3.ab2@23524>   SUB.l A1,D1
000471CC <AmiBlitz3.ab2@23527>     TST.b fast
000471D0 <AmiBlitz3.ab2@23528>     BEQ 'l1
000471D2 <AmiBlitz3.ab2@23529>     ADDQ.l #4,D1
000471D8 <AmiBlitz3.ab2@23530>     MOVE.w dontwrite,D0
000471DC <AmiBlitz3.ab2@23531>     BNE.w JL_0_D7FE
000471E0 <AmiBlitz3.ab2@23532>     MOVE.l d1,-$4(a1)
000471E4 <AmiBlitz3.ab2@23533>   BRA JL_0_D7FE
000471E6 <AmiBlitz3.ab2@23537>   ADDQ.l #2,d1
000471EC <AmiBlitz3.ab2@23538>   TST.w dontwrite
000471F0 <AmiBlitz3.ab2@23539>   BNE JL_0_D7FE
000471F6 <AmiBlitz3.ab2@23540>   CMP.l #MinWordSgnd,D1
000471FA <AmiBlitz3.ab2@23541>   BCC.w JUMP_bigiferr
000471FE <AmiBlitz3.ab2@23542>   MOVE.w D1,-$2(A1)
00047200 <AmiBlitz3.ab2@23545> RTS
00047206 <AmiBlitz3.ab2@23548> JMP bigiferr
00047210 <AmiBlitz3.ab2@23553>   MOVE.w oldqflag,instringon
00047216 <AmiBlitz3.ab2@23554>   MOVEA.l lastsourcepos,A5
00047218 <AmiBlitz3.ab2@23557>   MOVEQ.l #$01,D1
0004721C <AmiBlitz3.ab2@23558> BRA.w JL_0_D810
00047226 <AmiBlitz3.ab2@23562>   MOVE.w oldqflag,instringon
0004722C <AmiBlitz3.ab2@23563>   MOVEA.l lastsourcepos,A5
0004722E <AmiBlitz3.ab2@23566>   MOVEQ.l #$00,D1
00047232 <AmiBlitz3.ab2@23569>   BSR.w JL_0_D79E
00047236 <AmiBlitz3.ab2@23570>   BSR.w AJL_0_D81C
0004723C <AmiBlitz3.ab2@23571> JMP get1bytemain
00047242 <AmiBlitz3.ab2@23574>   MOVE.l (A0),firstiff
00047244 <AmiBlitz3.ab2@23575>   MOVEA.l A0,A1
00047246 <AmiBlitz3.ab2@23576>   MOVEQ.l #$0E,D0
0004724C <AmiBlitz3.ab2@23577>   MOVEA.l _execbase,A6
00047252 <AmiBlitz3.ab2@23578>   MOVE.l mempool,a0
00047256 <AmiBlitz3.ab2@23579> JMP _FreePooled(A6)
0004725C <AmiBlitz3.ab2@23583>   JSR get1bytemain
00047260 <AmiBlitz3.ab2@23586>   BEQ.w JL_0_D980
00047268 <AmiBlitz3.ab2@23587>   CMP.l #"noa7",-1(a5)
0004726C <AmiBlitz3.ab2@23588>   BNE 'l1
00047272 <AmiBlitz3.ab2@23589>   JSR get1bytemain
00047278 <AmiBlitz3.ab2@23590>   JSR get1bytemain
0004727E <AmiBlitz3.ab2@23591>   JSR get1bytemain
00047286 <AmiBlitz3.ab2@23592>   MOVE.w #$3a,lastchar
0004728A <AmiBlitz3.ab2@23593> BRA JL_0_D980
00047290 <AmiBlitz3.ab2@23596>   CMP.w #"d0",-1(a5)
00047294 <AmiBlitz3.ab2@23597>   BNE 'l2
0004729C <AmiBlitz3.ab2@23598>   MOVE.b #1,returncode
000472A2 <AmiBlitz3.ab2@23599>   CLR.w lastchar
000472A6 <AmiBlitz3.ab2@23600> BRA JL_0_D980
000472AA <AmiBlitz3.ab2@23603>   CMP.w #$80d7,d0
000472AE <AmiBlitz3.ab2@23604>   BNE JL_0_D836
000472B4 <AmiBlitz3.ab2@23605>   JSR skiprest
000472B6 <AmiBlitz3.ab2@23606> RTS
000472BA <AmiBlitz3.ab2@23609>   BSR.w JL_0_D844
000472C0 <AmiBlitz3.ab2@23610>   JSR reget
000472C4 <AmiBlitz3.ab2@23611>   BNE.w JL_0_D836
000472C6 <AmiBlitz3.ab2@23612> RTS
000472CA <AmiBlitz3.ab2@23615>   CMP.w #-$7FFF,D0
000472CE <AmiBlitz3.ab2@23616>    BNE.w JL_0_D87E
000472D4 <AmiBlitz3.ab2@23617>   MOVE.w linemode,D1
000472D8 <AmiBlitz3.ab2@23618>    BNE.w JUMP_modeerr
000472DE <AmiBlitz3.ab2@23619>   ADDQ.w #1,typelen
000472E6 <AmiBlitz3.ab2@23620>   BCLR #$0,typelen+1
000472EC <AmiBlitz3.ab2@23621>   MOVEA.l thistype,A0
000472F4 <AmiBlitz3.ab2@23622>   MOVE.w typelen,$8(A0)
000472FC <AmiBlitz3.ab2@23623>   MOVE.w #$FFFF,linemode
00047302 <AmiBlitz3.ab2@23624> JMP get1bytemain
00047308 <AmiBlitz3.ab2@23627> JMP modeerr
0004730C <AmiBlitz3.ab2@23630>   CMP.w #-$7FF5,D0
00047310 <AmiBlitz3.ab2@23631>    BEQ.w JL_0_D80E
00047314 <AmiBlitz3.ab2@23632>   CMP.w #-$7FF4,D0
00047318 <AmiBlitz3.ab2@23633>    BEQ.w JL_0_D804
0004731C <AmiBlitz3.ab2@23634>   CMP.w #-$7FF8,D0
00047320 <AmiBlitz3.ab2@23635>    BNE.w JL_0_D89A
00047324 <AmiBlitz3.ab2@23638> BRA.w JL_0_D9E8
0004732A <AmiBlitz3.ab2@23641> JMP interr3
0004732E <AmiBlitz3.ab2@23644>   CMP.w #-$7FF7,D0
00047332 <AmiBlitz3.ab2@23645>    BNE.w JL_0_D8C8
00047338 <AmiBlitz3.ab2@23646>    TST.b fpu
0004733C <AmiBlitz3.ab2@23647>    BEQ 'nof
00047342 <AmiBlitz3.ab2@23648>    MOVEA.l currentfunction,A0
00047348 <AmiBlitz3.ab2@23649>    CMP.l #0,a0
0004734C <AmiBlitz3.ab2@23650>    BEQ 'nof
00047352 <AmiBlitz3.ab2@23651>    CMP.b #5,$5(a0)
00047356 <AmiBlitz3.ab2@23652>     BNE 'nof
0004735C <AmiBlitz3.ab2@23653>    MOVE.l #$f23c5000,d1
00047360 <AmiBlitz3.ab2@23654>    BSR writelong
00047364 <AmiBlitz3.ab2@23655>    MOVE.w #0,d1
00047368 <AmiBlitz3.ab2@23656>    BSR writeword
0004736C <AmiBlitz3.ab2@23659>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00047370 <AmiBlitz3.ab2@23660>    BSR.w writeword
00047376 <AmiBlitz3.ab2@23661>   MOVEA.l currentfunction,A0
0004737C <AmiBlitz3.ab2@23662>   CMP.l #0,a0
00047380 <AmiBlitz3.ab2@23663>   BEQ JL_0_D896
00047386 <AmiBlitz3.ab2@23664>   MOVE.l destpointer,d1
0004738A <AmiBlitz3.ab2@23665>   SUB.l $e(a0),d1
0004738E <AmiBlitz3.ab2@23666>   MOVE.l d1,isfunc+1(a0)
00047394 <AmiBlitz3.ab2@23667>   CMPI.b #$7,$5(A0)
00047398 <AmiBlitz3.ab2@23668>    BNE.w JL_0_D896
0004739E <AmiBlitz3.ab2@23669>   MOVE.w putstlen,D1
000473A2 <AmiBlitz3.ab2@23670>    BSR.w writeword
000473A6 <AmiBlitz3.ab2@23671> BRA.w JL_0_D896
000473AC <AmiBlitz3.ab2@23674> JMP interr
000473B0 <AmiBlitz3.ab2@23677>  CMP.w #-$7FD0,D0
000473B4 <AmiBlitz3.ab2@23678>    BNE.w JL_0_D966
000473BA <AmiBlitz3.ab2@23679>   MOVE.w proceduremode,D1
000473BE <AmiBlitz3.ab2@23680>    BNE.w JUMP_interr3
000473C4 <AmiBlitz3.ab2@23681>   TST.b debugmode
000473C8 <AmiBlitz3.ab2@23682>    BEQ.w JL_0_D90A
000473CA <AmiBlitz3.ab2@23683>   MOVEQ.l #$03,D1
000473D0 <AmiBlitz3.ab2@23684>    JSR writetrap
000473D6 <AmiBlitz3.ab2@23685>   MOVE.w dontwrite,D1
000473DA <AmiBlitz3.ab2@23686>    BNE.w JL_0_D90A
000473E0 <AmiBlitz3.ab2@23687>   MOVEA.l intcleanat,A0
000473E6 <AmiBlitz3.ab2@23688>   MOVE.l destpointer,(A0)
000473EA <AmiBlitz3.ab2@23689>   MOVE.w #$C30C,D1
000473EE <AmiBlitz3.ab2@23690>    BSR.w Atokejsr
000473F4 <AmiBlitz3.ab2@23693>   MOVE.w intstring,D1
000473F8 <AmiBlitz3.ab2@23694>    BEQ.w JUMP_interr
000473FC <AmiBlitz3.ab2@23695>    BPL.w JL_0_D934
00047402 <AmiBlitz3.ab2@23696>   MOVE.w intlevel,D1
00047406 <AmiBlitz3.ab2@23697>   ORI.w #$7200,D1
0004740A <AmiBlitz3.ab2@23698>    BSR.w writeword
0004740E <AmiBlitz3.ab2@23699>   MOVE.w #$C103,D1
00047412 <AmiBlitz3.ab2@23700>    BSR.w Atokejsr
00047418 <AmiBlitz3.ab2@23701>   CLR.w intlevel
0004741E <AmiBlitz3.ab2@23704>  CLR.w intstring
00047424 <AmiBlitz3.ab2@23705>   MOVE.l intfin,D1
00047428 <AmiBlitz3.ab2@23706>    BSR.w writelong
0004742E <AmiBlitz3.ab2@23707>   MOVE.l #$70004E75,D1
00047432 <AmiBlitz3.ab2@23708>    BSR.w writelong
00047438 <AmiBlitz3.ab2@23709>   MOVE.w dontwrite,D1
0004743C <AmiBlitz3.ab2@23710>    BNE.w JL_0_D962
00047442 <AmiBlitz3.ab2@23711>   MOVEA.l intjmpat,A0
00047446 <AmiBlitz3.ab2@23712>   MOVE.l destpointer(PC),(A0)
0004744C <AmiBlitz3.ab2@23715> JMP get1bytemain
00047450 <AmiBlitz3.ab2@23719>   CMP.w #-$7FF2,D0
00047454 <AmiBlitz3.ab2@23720>    BEQ.w doendsel
00047458 <AmiBlitz3.ab2@23721>   CMP.w #-$7F4C,D0
0004745C <AmiBlitz3.ab2@23722>    BNE.w JL_0_D97C
00047462 <AmiBlitz3.ab2@23723> JMP doendseterr
00047468 <AmiBlitz3.ab2@23727> JMP syntaxerr
0004746E <AmiBlitz3.ab2@23731>   TST.w dirmode
00047472 <AmiBlitz3.ab2@23732>   BNE.w JUMP_baddirerr
00047476 <AmiBlitz3.ab2@23733>   MOVE.w #$C800,D1
0004747C <AmiBlitz3.ab2@23734>   JSR Atokejsr                                            ;end
00047484 <AmiBlitz3.ab2@23735>   CMP.l #"noa7",-4(a5)
00047488 <AmiBlitz3.ab2@23736>   BNE 'l10
0004748E <AmiBlitz3.ab2@23737>   TST.w dontwrite
00047492 <AmiBlitz3.ab2@23738>   BNE 'l10
00047498 <AmiBlitz3.ab2@23739>   MOVE.l destpointer,d1
0004749A <AmiBlitz3.ab2@23740>   SUBQ.l #4,d1
0004749C <AmiBlitz3.ab2@23741>   MOVE.l a0,-(a7)
0004749E <AmiBlitz3.ab2@23742>   MOVE.l d1,a0
000474A0 <AmiBlitz3.ab2@23743>   MOVE.l (a0),a0
000474A6 <AmiBlitz3.ab2@23744>   MOVE.l #$60000002,(a0)+
000474AA <AmiBlitz3.ab2@23745>   MOVE.w #$588f,(a0)
000474AC <AmiBlitz3.ab2@23746>   MOVE.l (a7)+,a0
000474AE <AmiBlitz3.ab2@23749> RTS
000474B4 <AmiBlitz3.ab2@23753>   TST.w dirmode                                            ;stop
000474B8 <AmiBlitz3.ab2@23754>   BNE.w JUMP_baddirerr
000474BA <AmiBlitz3.ab2@23755>   MOVE.w d0,d1
000474BE <AmiBlitz3.ab2@23756>   BEQ 'l10
000474C2 <AmiBlitz3.ab2@23757>   CMP.b #$3a,d0
000474C6 <AmiBlitz3.ab2@23758>   BEQ 'l10
000474CC <AmiBlitz3.ab2@23759>   JSR get1bytemain
000474D2 <AmiBlitz3.ab2@23762>   TST.b debugmode
000474D6 <AmiBlitz3.ab2@23763>   BEQ.w newstop
000474DA <AmiBlitz3.ab2@23764>   MOVE.w #$D501,D1
000474DE <AmiBlitz3.ab2@23765> BRA.w Atokejsr
000474E0 <AmiBlitz3.ab2@23769>     RTS
000474E2 <AmiBlitz3.ab2@23771>   MOVE.w d1,d0
000474E6 <AmiBlitz3.ab2@23772>   BEQ 'l10
000474EA <AmiBlitz3.ab2@23773>   CMP.b #$3a,d0
000474EE <AmiBlitz3.ab2@23774>   BEQ 'l10
000474F2 <AmiBlitz3.ab2@23775>   SUB.b #$30,d0
000474F6 <AmiBlitz3.ab2@23776>   MOVE.w #$4e40,d1
000474FA <AmiBlitz3.ab2@23777> BRA 'l11
000474FE <AmiBlitz3.ab2@23780>   MOVE.w #$4e4a,d1
00047502 <AmiBlitz3.ab2@23781> BRA writeword
00047504 <AmiBlitz3.ab2@23784>   ADD.b d0,d1
00047508 <AmiBlitz3.ab2@23785> BRA writeword
0004750E <AmiBlitz3.ab2@23789> JMP badconterr
00047512 <AmiBlitz3.ab2@23792>   MOVE.w #$4E71,D1
00047516 <AmiBlitz3.ab2@23793> BRA.w writeword
0004751C <AmiBlitz3.ab2@23796>   MOVEA.l firstfor,A2
00047522 <AmiBlitz3.ab2@23797>   CLR.l firstfor
00047528 <AmiBlitz3.ab2@23798>   MOVEA.l _execbase,A6
0004752C <AmiBlitz3.ab2@23801>   CMPA.w #$0,A2
00047530 <AmiBlitz3.ab2@23802>   BEQ.w JL_0_D9E6
00047532 <AmiBlitz3.ab2@23803>   MOVEA.l A2,A1
00047534 <AmiBlitz3.ab2@23804>   MOVEA.l (A1),A2
00047536 <AmiBlitz3.ab2@23805>   MOVEQ.l #$00,D0
0004753C <AmiBlitz3.ab2@23806>   MOVE.l mempool2,a0
00047540 <AmiBlitz3.ab2@23807>   MOVE.b $10(A1),D0
00047544 <AmiBlitz3.ab2@23808>   JSR _FreePooled(A6)                                      ;freememfor_error
00047548 <AmiBlitz3.ab2@23809> BRA.w JL_0_D9CC
0004754A <AmiBlitz3.ab2@23812> RTS
00047550 <AmiBlitz3.ab2@23816> JMP badpenderr
00047556 <AmiBlitz3.ab2@23822>   MOVE.w proceduremode,D1
0004755A <AmiBlitz3.ab2@23823>    BEQ.w JUMP_badpenderr
00047560 <AmiBlitz3.ab2@23825>   MOVE.w dontwrite,D1
00047564 <AmiBlitz3.ab2@23826>    BNE.w JL_0_DA1A
0004756A <AmiBlitz3.ab2@23827>   MOVEA.l firstpend,A2
0004756E <AmiBlitz3.ab2@23830>   CMPA.w #$0,A2
00047572 <AmiBlitz3.ab2@23831>    BEQ.w JL_0_DA1A
00047576 <AmiBlitz3.ab2@23832>   MOVEA.l $4(A2),A0
0004757C <AmiBlitz3.ab2@23833>   MOVE.l destpointer,(A0)
0004757E <AmiBlitz3.ab2@23834>   MOVEA.l (A2),A2
00047582 <AmiBlitz3.ab2@23835> BRA.w JL_0_DA02
00047588 <AmiBlitz3.ab2@23838>   TST.b debugmode
0004758C <AmiBlitz3.ab2@23839>    BEQ.b JL_0_DA2A
0004758E <AmiBlitz3.ab2@23840>   MOVEQ.l #$05,D1
00047594 <AmiBlitz3.ab2@23841>   JSR writetrap
0004759A <AmiBlitz3.ab2@23844>   MOVEA.l firstlocal,A2                                    ;firstlocal
000475A0 <AmiBlitz3.ab2@23845>   JSR calcstatic2b                                           ;calcstatic
000475A6 <AmiBlitz3.ab2@23846>   MOVEA.l currentfunction,A0
000475AC <AmiBlitz3.ab2@23847>   MOVE.l destpointer,d1
000475B0 <AmiBlitz3.ab2@23848>   SUB.l $e(a0),d1
000475B4 <AmiBlitz3.ab2@23849>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
000475B8 <AmiBlitz3.ab2@23850>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
000475BE <AmiBlitz3.ab2@23851>   MOVE.l D3,locdatast
000475C4 <AmiBlitz3.ab2@23852>   MOVEA.l tempvm,A1
000475CA <AmiBlitz3.ab2@23853>  CLR.b infunctioncode
000475D0 <AmiBlitz3.ab2@23854>   MOVE.l firstiffstore,d1
000475D6 <AmiBlitz3.ab2@23855>   CMP.l firstiff,d1
000475DA <AmiBlitz3.ab2@23856>   BNE JUMP_noenderr
000475DE <AmiBlitz3.ab2@23857>   TST.w $C(A1)                                             ;dim
000475E2 <AmiBlitz3.ab2@23858>    BPL.w JL_0_DA64
000475E8 <AmiBlitz3.ab2@23859>  BSET #$7,$8(A0)
000475EC <AmiBlitz3.ab2@23860>   MOVE.w #$C005,D1
000475F0 <AmiBlitz3.ab2@23861>    BSR.w tokejsr2                                          ;writefreememstatement
000475F4 <AmiBlitz3.ab2@23862> BRA.w JL_0_DA6C
000475FA <AmiBlitz3.ab2@23865> JMP noenderr
00047602 <AmiBlitz3.ab2@23868>   MOVE.w memlibstat,$C(A1)
00047608 <AmiBlitz3.ab2@23871>   MOVEA.l currentfunction,A0
0004760C <AmiBlitz3.ab2@23872>   MOVE.l $E(A0),-(A7)
00047614 <AmiBlitz3.ab2@23873>   MOVE.w locvaroff,$6(A0)
0004761A <AmiBlitz3.ab2@23874>   BCLR #$1,$7(A0)
00047620 <AmiBlitz3.ab2@23875>   BCLR #$0,$7(A0)
00047626 <AmiBlitz3.ab2@23876>   CMPI.b #$7,$5(A0)
0004762A <AmiBlitz3.ab2@23877>    BNE.w JL_0_DA9E
00047630 <AmiBlitz3.ab2@23878>   MOVE.w getstlen,D1
00047634 <AmiBlitz3.ab2@23879>    BSR.w writeword
00047638 <AmiBlitz3.ab2@23882>   TST.w $6(A0)
0004763C <AmiBlitz3.ab2@23883>    BEQ.w JL_0_DAB8
00047640 <AmiBlitz3.ab2@23884>   MOVE.w #$FC7B,D1
00047646 <AmiBlitz3.ab2@23885>    JSR uselib
0004764C <AmiBlitz3.ab2@23886>   MOVE.w unlinka4,D1
00047650 <AmiBlitz3.ab2@23887>    BSR.w writeword
00047656 <AmiBlitz3.ab2@23890>   MOVEA.l currentfunction,A0
00047658 <AmiBlitz3.ab2@23891>   MOVEQ.l #$00,D1
0004765C <AmiBlitz3.ab2@23892>   MOVE.b $4(A0),D1
0004765E <AmiBlitz3.ab2@23893>   LSR.w #4,D1
00047662 <AmiBlitz3.ab2@23894>    BEQ.w JL_0_DB24
00047664 <AmiBlitz3.ab2@23896>      LSL.w #1,d1
00047668 <AmiBlitz3.ab2@23898>   CMP.w #$1,D1
0004766C <AmiBlitz3.ab2@23899>    BNE.w JL_0_DAE0
00047672 <AmiBlitz3.ab2@23900>   MOVE.w fix1,D1
00047676 <AmiBlitz3.ab2@23901>    BSR.w writeword
0004767A <AmiBlitz3.ab2@23902> BRA.w JL_0_DB24
0004767C <AmiBlitz3.ab2@23905>   LSL.w #2,D1
0004767E <AmiBlitz3.ab2@23906>   MOVE.w D1,-(A7)
00047684 <AmiBlitz3.ab2@23907>   MOVE.w D1,moverts+2
0004768A <AmiBlitz3.ab2@23908>   MOVE.l moverts,D1
00047690 <AmiBlitz3.ab2@23909>    JSR writelong
00047692 <AmiBlitz3.ab2@23910>   MOVE.w (A7)+,D1
00047696 <AmiBlitz3.ab2@23911>   CMP.w #$8,D1
0004769A <AmiBlitz3.ab2@23912>    BHI.w JL_0_DB14
0004769E <AmiBlitz3.ab2@23913>   ANDI.w #$7,D1
000476A0 <AmiBlitz3.ab2@23914>   LSL.w #8,D1
000476A2 <AmiBlitz3.ab2@23915>   LSL.w #1,D1
000476A8 <AmiBlitz3.ab2@23916>   OR.w fixq,D1
000476AE <AmiBlitz3.ab2@23917>    JSR writeword
000476B2 <AmiBlitz3.ab2@23918> BRA.w JL_0_DB24
000476B8 <AmiBlitz3.ab2@23922>    MOVE.w D1,fixstack+2
000476BE <AmiBlitz3.ab2@23923>   MOVE.l fixstack,D1
000476C4 <AmiBlitz3.ab2@23924>    JSR writelong
000476C8 <AmiBlitz3.ab2@23927>    BSR.w JL_0_D2CA
000476CC <AmiBlitz3.ab2@23928>    BSR.w JL_0_D4F8
000476CE <AmiBlitz3.ab2@23929>   MOVEA.l (A7)+,A0
000476D4 <AmiBlitz3.ab2@23930>   MOVE.w dontwrite,D1
000476D8 <AmiBlitz3.ab2@23931>    BNE.w JL_0_DB3E
000476DE <AmiBlitz3.ab2@23932>   MOVE.l destpointer,-(A0)
000476E4 <AmiBlitz3.ab2@23935>   CLR.w proceduremode
000476EA <AmiBlitz3.ab2@23936>   CLR.l currentfunction
000476F0 <AmiBlitz3.ab2@23937>   CLR.w procnum
000476F4 <AmiBlitz3.ab2@23938>    BSR.w JL_0_DB5C
000476FA <AmiBlitz3.ab2@23939>    JSR freepends
00047700 <AmiBlitz3.ab2@23940> JMP get1bytemain
00047702 <AmiBlitz3.ab2@23943>   MOVEQ.l #$0C,D0
00047704 <AmiBlitz3.ab2@23944>   MOVEQ.l #$01,D1
0004770A <AmiBlitz3.ab2@23945>   MOVEA.l _execbase,A6
00047710 <AmiBlitz3.ab2@23947>   MOVE.l mempool,a0
00047714 <AmiBlitz3.ab2@23948>   JSR _AllocPooled(a6)
00047716 <AmiBlitz3.ab2@23949>   MOVEA.l D0,A0
0004771C <AmiBlitz3.ab2@23950>   MOVE.l alllocals,(A0)
00047722 <AmiBlitz3.ab2@23951>   MOVE.l A0,alllocals
00047728 <AmiBlitz3.ab2@23952>   MOVE.l firstlocal,D0
0004772E <AmiBlitz3.ab2@23953>   CLR.l firstlocal
00047732 <AmiBlitz3.ab2@23954>   MOVE.l D0,$4(A0)
00047738 <AmiBlitz3.ab2@23955>   MOVE.l firstglob,D1
0004773E <AmiBlitz3.ab2@23956>   CLR.l firstglob
00047742 <AmiBlitz3.ab2@23957>   MOVE.l D1,$8(A0)
00047748 <AmiBlitz3.ab2@23958>   TST.b debugmode
0004774C <AmiBlitz3.ab2@23959>    BEQ.b JL_0_DBB0
00047752 <AmiBlitz3.ab2@23960>   TST.w dontwrite
00047756 <AmiBlitz3.ab2@23961>    BNE.b JL_0_DBB0
0004775A <AmiBlitz3.ab2@23962>   MOVEA.l proclocals(PC),A0
0004775C <AmiBlitz3.ab2@23963>   MOVE.l D0,(A0)+
0004775E <AmiBlitz3.ab2@23964>   MOVE.l D1,(A0)
00047760 <AmiBlitz3.ab2@23967> RTS
00047766 <AmiBlitz3.ab2@23970> JMP baddirerr
0004776C <AmiBlitz3.ab2@23974>   TST.w dirmode
00047770 <AmiBlitz3.ab2@23975>    BNE.w JUMP_baddirerr
00047776 <AmiBlitz3.ab2@23976>   MOVE.l firstfor,D1
0004777A <AmiBlitz3.ab2@23977>    BEQ.w JUMP_noforerr
00047780 <AmiBlitz3.ab2@23978>   JSR reget
00047784 <AmiBlitz3.ab2@23979>    BEQ.w JL_0_DC18
00047788 <AmiBlitz3.ab2@23982>   BSR.w getparameter
0004778C <AmiBlitz3.ab2@23983>   MOVEA.l firstfor(PC),A2
0004778E <AmiBlitz3.ab2@23984>   MOVEQ.l #$00,D1
00047792 <AmiBlitz3.ab2@23985>   MOVE.b $10(A2),D1
00047796 <AmiBlitz3.ab2@23986>   SUBI.w #$12,D1
00047798 <AmiBlitz3.ab2@23987>   CMP.w D1,D2
0004779C <AmiBlitz3.ab2@23988>    BNE.w JUMP_noforerr
000477A0 <AmiBlitz3.ab2@23989>   LEA ptr_parameterstore(PC),A0
000477A4 <AmiBlitz3.ab2@23990>   LEA $11(A2),A1
000477A6 <AmiBlitz3.ab2@23991>   SUBQ.w #1,D2
000477A8 <AmiBlitz3.ab2@23994>     CMPM.b (A0)+,(A1)+
000477AC <AmiBlitz3.ab2@23995>     BNE.w JUMP_noforerr
000477B0 <AmiBlitz3.ab2@23996>   DBF D2,JL_0_DBF0
000477B4 <AmiBlitz3.ab2@23998>    BSR.w JL_0_DC1A
000477BA <AmiBlitz3.ab2@23999>    JSR reget
000477BE <AmiBlitz3.ab2@24000>    BEQ.w JL_0_DC16
000477C2 <AmiBlitz3.ab2@24001>   CMP.w #$2C,D0
000477C6 <AmiBlitz3.ab2@24002>    BNE.w JUMP_syntaxerr
000477CC <AmiBlitz3.ab2@24003>    JSR get1bytemain
000477D0 <AmiBlitz3.ab2@24004> BRA.w JL_0_DBCE
000477D6 <AmiBlitz3.ab2@24007> JMP noforerr
000477D8 <AmiBlitz3.ab2@24010> RTS
000477DC <AmiBlitz3.ab2@24014>   MOVE.l 8(a7),a2
000477E0 <AmiBlitz3.ab2@24015>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
000477E4 <AmiBlitz3.ab2@24016>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
000477E8 <AmiBlitz3.ab2@24017>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
000477EA <AmiBlitz3.ab2@24021>   MOVEA.l D1,A2
000477F0 <AmiBlitz3.ab2@24024>   JSR popnext                                           ;error checking for next.
000477F4 <AmiBlitz3.ab2@24025>   MOVE.w $C(A2),D0
000477FA <AmiBlitz3.ab2@24026>   LEA nextb,A0
00047800 <AmiBlitz3.ab2@24027>   LEA nextbf,A1
00047804 <AmiBlitz3.ab2@24028>   CMP.w #$1,D0
00047808 <AmiBlitz3.ab2@24029>    BEQ.w JL_0_DC74
0004780E <AmiBlitz3.ab2@24030>   LEA nextw,A0
00047814 <AmiBlitz3.ab2@24031>   LEA nextwf,A1
00047818 <AmiBlitz3.ab2@24032>   CMP.w #$2,D0
0004781C <AmiBlitz3.ab2@24033>    BEQ.w JL_0_DC74
00047822 <AmiBlitz3.ab2@24034>   LEA nextl,A0
00047828 <AmiBlitz3.ab2@24035>   LEA nextlf,A1
0004782C <AmiBlitz3.ab2@24036>   CMP.w #$5,D0
00047830 <AmiBlitz3.ab2@24037>    BNE.w JL_0_DC74
00047836 <AmiBlitz3.ab2@24038>    TST.b fpu
0004783A <AmiBlitz3.ab2@24039>    BEQ 'old
00047840 <AmiBlitz3.ab2@24040>    LEA fpu2dats,a0                                         ;fpu next code
00047846 <AmiBlitz3.ab2@24041>    LEA fpu2date,a1
0004784A <AmiBlitz3.ab2@24042> BRA JL_0_DC74
0004784E <AmiBlitz3.ab2@24045>   MOVE.w #$C900,D1
00047852 <AmiBlitz3.ab2@24046>    BSR.w Atokejsr
00047858 <AmiBlitz3.ab2@24047>   LEA nextf,A0
0004785E <AmiBlitz3.ab2@24048>   LEA nextff,A1
00047864 <AmiBlitz3.ab2@24051>   JSR pokecode
0004786A <AmiBlitz3.ab2@24052>     TST.b fast                                             ;fast for next deactivate
0004786E <AmiBlitz3.ab2@24053> BRA 'l1
00047874 <AmiBlitz3.ab2@24055>     TST.b onestep
00047878 <AmiBlitz3.ab2@24056>     BEQ 'l1
0004787E <AmiBlitz3.ab2@24057>     CLR.b onestep
00047884 <AmiBlitz3.ab2@24058>     SUBQ.l #4,destpointer
00047888 <AmiBlitz3.ab2@24059>     MOVE.w #$5292,d1
0004788E <AmiBlitz3.ab2@24060>     JSR writeword
00047892 <AmiBlitz3.ab2@24063>   MOVE.l JL_0_DCF4(PC),D1
00047898 <AmiBlitz3.ab2@24064>    JSR writelong
0004789E <AmiBlitz3.ab2@24065>   MOVEA.l firstfor,A2
000478A4 <AmiBlitz3.ab2@24066>   MOVE.l (A2),firstfor
000478A8 <AmiBlitz3.ab2@24067>   MOVEA.l $8(A2),A0
000478AE <AmiBlitz3.ab2@24068>   MOVEA.l destpointer,A1
000478B0 <AmiBlitz3.ab2@24069>   MOVE.l A1,D1
000478B2 <AmiBlitz3.ab2@24070>   SUB.l A0,D1
000478B4 <AmiBlitz3.ab2@24071>   ADDQ.l #2,D1
000478BA <AmiBlitz3.ab2@24072>   CMP.l #MinWordSgnd,D1
000478BE <AmiBlitz3.ab2@24073>    BCC.w JUMP_bigforerr
000478C4 <AmiBlitz3.ab2@24074>   TST.w dontwrite
000478C8 <AmiBlitz3.ab2@24075>    BNE.w JL_0_DCB4
000478CC <AmiBlitz3.ab2@24076>   MOVE.w D1,-$2(A0)
000478CE <AmiBlitz3.ab2@24079>   MOVE.l A1,D1
000478D2 <AmiBlitz3.ab2@24080>   SUB.l $4(A2),D1
000478D4 <AmiBlitz3.ab2@24081>   SUBQ.l #6,D1
000478DA <AmiBlitz3.ab2@24082>   CMP.l #MinWordSgnd,D1
000478DE <AmiBlitz3.ab2@24083>    BCC.w JUMP_bigforerr
000478E4 <AmiBlitz3.ab2@24084>   TST.w dontwrite
000478E8 <AmiBlitz3.ab2@24085>    BNE.w JL_0_DCD6
000478EA <AmiBlitz3.ab2@24086>   NEG.w D1
000478EE <AmiBlitz3.ab2@24087>   MOVE.w D1,-$2(A1)
000478F4 <AmiBlitz3.ab2@24090>   JSR popnext3
000478FA <AmiBlitz3.ab2@24091>   MOVEA.l _execbase,A6
000478FC <AmiBlitz3.ab2@24092>   MOVEA.l A2,A1
000478FE <AmiBlitz3.ab2@24093>   MOVEQ.l #$00,D0
00047902 <AmiBlitz3.ab2@24094>   MOVE.b $10(A1),D0
00047908 <AmiBlitz3.ab2@24095>   MOVE.l mempool2,a0
0004790C <AmiBlitz3.ab2@24096>   JSR _FreePooled(A6)
00047912 <AmiBlitz3.ab2@24097> JMP reget
00047918 <AmiBlitz3.ab2@24100> JMP notallowd
0004791E <AmiBlitz3.ab2@24103> JMP bigforerr
00047922 <AmiBlitz3.ab2@24110>   MOVE.w #$664F,-(A7)
00047926 <AmiBlitz3.ab2@24113> BRA.w JL_0_DCF4
0004792C <AmiBlitz3.ab2@24116> JMP error_dublicate_for
00047930 <AmiBlitz3.ab2@24119> forlineat:   Ds.l 1
00047932 <AmiBlitz3.ab2@24120> fortemp:     Ds.w 1
00047938 <AmiBlitz3.ab2@24127>   CLR.l fp0addr
0004793E <AmiBlitz3.ab2@24128>   TST.w dirmode
00047942 <AmiBlitz3.ab2@24129>    BNE.w JUMP_baddirerr
0004794C <AmiBlitz3.ab2@24130>   MOVE.l linenumat,forlineat
00047952 <AmiBlitz3.ab2@24134>   MOVE.l A5,letstart
00047956 <AmiBlitz3.ab2@24135>   BSR.w getparameter
0004795C <AmiBlitz3.ab2@24136>   MOVE.w D2,fortemp
00047962 <AmiBlitz3.ab2@24137>   JSR findfor
00047966 <AmiBlitz3.ab2@24138>    BEQ.w JUMP_error_dublicate_for
0004796C <AmiBlitz3.ab2@24139>   LEA firstfor,A2
00047972 <AmiBlitz3.ab2@24140>   JSR addhere2
00047974 <AmiBlitz3.ab2@24141>   MOVE.l A2,-(A7)
0004797A <AmiBlitz3.ab2@24142>   TST.b debugmode
0004797E <AmiBlitz3.ab2@24143>    BEQ.b JL_0_DD4C
00047984 <AmiBlitz3.ab2@24144>   JSR chkstak
0004798A <AmiBlitz3.ab2@24145>   MOVE.l AJL_0_DCF0,D1
00047990 <AmiBlitz3.ab2@24146>   JSR  writelong
00047994 <AmiBlitz3.ab2@24149>   MOVE.w fortemp(PC),D2
0004799C <AmiBlitz3.ab2@24150>   MOVE.b #1,formode
000479A0 <AmiBlitz3.ab2@24151>   BSR.w AJL_0_DEA6                                         ;for get 1. value
000479A6 <AmiBlitz3.ab2@24152>   CLR.b formode
000479AA <AmiBlitz3.ab2@24153>   CMP.w #-$7FE8,D0
000479AE <AmiBlitz3.ab2@24154>    BNE.w JUMP_syntaxerr
000479B4 <AmiBlitz3.ab2@24155>   MOVE.w commode,D1
000479B8 <AmiBlitz3.ab2@24156>    BNE.w JUMP_syntaxerr
000479BC <AmiBlitz3.ab2@24157>   CMP.b #$6,D2
000479C0 <AmiBlitz3.ab2@24158>    BCC.w JUMP_badforerr
000479C4 <AmiBlitz3.ab2@24159>   BTST #$F,D2
000479C8 <AmiBlitz3.ab2@24160>    BNE.w JL_0_DD86
000479CE <AmiBlitz3.ab2@24161>   MOVE.w leaamp,D1
000479D4 <AmiBlitz3.ab2@24162>   JSR pokewda5s
000479D6 <AmiBlitz3.ab2@24163>   MOVE.w D3,D1
000479DC <AmiBlitz3.ab2@24164>   JSR  writeword
000479E2 <AmiBlitz3.ab2@24167>   MOVE.w pushindex,D1
000479E8 <AmiBlitz3.ab2@24168>   JSR  writeword
000479EC <AmiBlitz3.ab2@24169>   ANDI.w #$FF,D2
000479EE <AmiBlitz3.ab2@24171>   MOVEA.l (A7),A1
000479F2 <AmiBlitz3.ab2@24172>   MOVE.w D2,$C(A1)
000479F4 <AmiBlitz3.ab2@24173>   MOVE.w D2,-(A7)
000479F8 <AmiBlitz3.ab2@24174>    BSR.w eval
000479FE <AmiBlitz3.ab2@24175>    CLR.b onestep
00047A02 <AmiBlitz3.ab2@24176>    CMP.w #$8019,d0
00047A06 <AmiBlitz3.ab2@24177>    BEQ 'l1
00047A0E <AmiBlitz3.ab2@24178>    MOVE.b #1,onestep
00047A10 <AmiBlitz3.ab2@24181>   MOVE.w (A7),D2
00047A16 <AmiBlitz3.ab2@24182>   MOVE.w pushd0l,D1
00047A1A <AmiBlitz3.ab2@24183>   CMP.w #$3,D2
00047A1E <AmiBlitz3.ab2@24184>    BCC.w JL_0_DDB6
00047A24 <AmiBlitz3.ab2@24185>   MOVE.w pushd0wd,D1
00047A26 <AmiBlitz3.ab2@24188>    MOVE.w D1,-(A7)
00047A2C <AmiBlitz3.ab2@24189>    TST.b fpu
00047A30 <AmiBlitz3.ab2@24190>    BEQ 'old
00047A34 <AmiBlitz3.ab2@24191>    CMP.b #5,d2
00047A38 <AmiBlitz3.ab2@24192>    BNE 'old
00047A3E <AmiBlitz3.ab2@24193>    MOVE.l #$f2276400,d1
00047A44 <AmiBlitz3.ab2@24195>    JSR writelong
00047A48 <AmiBlitz3.ab2@24196> BRA 'weit
00047A4E <AmiBlitz3.ab2@24199>    JSR  writeword                                          ;fpu for end value
00047A52 <AmiBlitz3.ab2@24202>   CMP.w #-$7FE7,D0
00047A56 <AmiBlitz3.ab2@24203>    BNE.w JL_0_DDCC
00047A5A <AmiBlitz3.ab2@24204>    BSR.w eval
00047A60 <AmiBlitz3.ab2@24205>    TST.b fpu
00047A64 <AmiBlitz3.ab2@24206>    BEQ JL_0_DE0C
00047A68 <AmiBlitz3.ab2@24207>    CMP.b #5,d2
00047A6C <AmiBlitz3.ab2@24208>    BNE JL_0_DE0C
00047A72 <AmiBlitz3.ab2@24209>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00047A78 <AmiBlitz3.ab2@24211>   JSR writelong
00047A7A <AmiBlitz3.ab2@24214>    MOVE.w (a7)+,d1
00047A7E <AmiBlitz3.ab2@24215> BRA fpur
00047A82 <AmiBlitz3.ab2@24218>   CMP.w #$4,D2
00047A86 <AmiBlitz3.ab2@24219>    BCC.w JL_0_DDE0
00047A8A <AmiBlitz3.ab2@24220>   MOVE.w #$7001,D1
00047A90 <AmiBlitz3.ab2@24221>   JSR writeword
00047A94 <AmiBlitz3.ab2@24222> BRA.w JL_0_DE0C
00047A9A <AmiBlitz3.ab2@24225> JMP badforerr
00047A9E <AmiBlitz3.ab2@24228>   BNE.w JL_0_DDFA
00047AA2 <AmiBlitz3.ab2@24229>   MOVE.w #$7001,D1
00047AA8 <AmiBlitz3.ab2@24230>   JSR writeword
00047AAE <AmiBlitz3.ab2@24231>   MOVE.w swapd0,D1
00047AB4 <AmiBlitz3.ab2@24232>   JSR writeword
00047AB8 <AmiBlitz3.ab2@24233> BRA.w JL_0_DE0C
00047ABE <AmiBlitz3.ab2@24236>   TST.b fpu
00047AC2 <AmiBlitz3.ab2@24237>    BEQ 'old
00047AC6 <AmiBlitz3.ab2@24238>   CMP.b #5,d2
00047ACA <AmiBlitz3.ab2@24239>    BNE 'old
00047AD0 <AmiBlitz3.ab2@24240>   MOVE.l #$f23c5000,d1
00047AD6 <AmiBlitz3.ab2@24241>   JSR writelong
00047ADA <AmiBlitz3.ab2@24242>   MOVE.w #$1,d1
00047AE0 <AmiBlitz3.ab2@24243>   JSR writeword
00047AE6 <AmiBlitz3.ab2@24244>   MOVE.l #$f2276400,d1
00047AEC <AmiBlitz3.ab2@24245>   JSR writelong
00047AEE <AmiBlitz3.ab2@24246>   MOVE.w (a7)+,d1
00047AF2 <AmiBlitz3.ab2@24247> BRA fpur
00047AF6 <AmiBlitz3.ab2@24250>   MOVE.w #$203C,D1                                         ;write step 1
00047AFC <AmiBlitz3.ab2@24251>   JSR writeword
00047B02 <AmiBlitz3.ab2@24252>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00047B08 <AmiBlitz3.ab2@24253>   JSR writelong
00047B0A <AmiBlitz3.ab2@24256>   MOVE.w (A7)+,D1
00047B10 <AmiBlitz3.ab2@24257>   JSR writeword                                            ;push step on stack
00047B12 <AmiBlitz3.ab2@24260>   MOVE.w (A7)+,D2
00047B14 <AmiBlitz3.ab2@24261>   MOVEA.l (A7),A1
00047B1C <AmiBlitz3.ab2@24262>   MOVE.l destpointer,$4(A1)
00047B22 <AmiBlitz3.ab2@24263>   LEA forcompb,A0
00047B28 <AmiBlitz3.ab2@24264>   LEA forcompbf,A1
00047B2C <AmiBlitz3.ab2@24265>   CMP.w #$1,D2
00047B30 <AmiBlitz3.ab2@24266>    BEQ.w JL_0_DE7E
00047B36 <AmiBlitz3.ab2@24267>   LEA forcompw,A0
00047B3C <AmiBlitz3.ab2@24268>   LEA forcompwf,A1
00047B40 <AmiBlitz3.ab2@24269>   CMP.w #$2,D2
00047B44 <AmiBlitz3.ab2@24270>    BEQ.w JL_0_DE7E
00047B4A <AmiBlitz3.ab2@24271>   LEA forcompl,A0
00047B50 <AmiBlitz3.ab2@24272>   LEA forcomplf,A1
00047B54 <AmiBlitz3.ab2@24273>   CMP.w #$5,D2
00047B58 <AmiBlitz3.ab2@24274>    BNE.w JL_0_DE7E
00047B5E <AmiBlitz3.ab2@24275>   TST.b fpu
00047B62 <AmiBlitz3.ab2@24276>    BEQ 'old
00047B68 <AmiBlitz3.ab2@24277>   LEA fpu_start,a0
00047B6E <AmiBlitz3.ab2@24278>   LEA fpu_end,a1
00047B74 <AmiBlitz3.ab2@24279>   JSR pokecode
00047B78 <AmiBlitz3.ab2@24280> BRA fpu3
00047B7E <AmiBlitz3.ab2@24283>   LEA forcompf,A0                                         ;
00047B84 <AmiBlitz3.ab2@24284>   LEA forcompff,A1
00047B8A <AmiBlitz3.ab2@24285>   JSR pokecode
00047B8E <AmiBlitz3.ab2@24286>   MOVE.w #$C900,D1
00047B92 <AmiBlitz3.ab2@24287>   BSR.w Atokejsr
00047B98 <AmiBlitz3.ab2@24288>   LEA forcompf2,A0
00047B9E <AmiBlitz3.ab2@24289>   LEA forcompf2f,A1
00047BA4 <AmiBlitz3.ab2@24292>   JSR pokecode
00047BAA <AmiBlitz3.ab2@24293>   TST.b fast                                               ;fast for next
00047BAE <AmiBlitz3.ab2@24294>    BEQ 's1
00047BB2 <AmiBlitz3.ab2@24295>   CMP.w #3,d2
00047BB6 <AmiBlitz3.ab2@24296>    BNE 's1
00047BBC <AmiBlitz3.ab2@24297>   TST.b onestep
00047BC0 <AmiBlitz3.ab2@24298>    BEQ 's1
00047BCA <AmiBlitz3.ab2@24299>   SUB.l #10,destpointer
00047BCE <AmiBlitz3.ab2@24300>   MOVE.w #$b081,d1
00047BD4 <AmiBlitz3.ab2@24301>   JSR writeword
00047BD8 <AmiBlitz3.ab2@24305>   MOVE.l thebgt(PC),D1
00047BDE <AmiBlitz3.ab2@24306>   JSR writelong
00047BE0 <AmiBlitz3.ab2@24309>   MOVEA.l (A7)+,A1
00047BE8 <AmiBlitz3.ab2@24310>   MOVE.l destpointer,$8(A1)
00047BEE <AmiBlitz3.ab2@24311> JMP reget
00047BF2 <AmiBlitz3.ab2@24314>   MOVEA.l 8(a7),a2
00047BF6 <AmiBlitz3.ab2@24315>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00047BFC <AmiBlitz3.ab2@24316>   fmove.s 4(a7),fp1
00047C00 <AmiBlitz3.ab2@24317>   BTST.b #7,(a7)
00047C04 <AmiBlitz3.ab2@24318>   BNE 'negi
00047C08 <AmiBlitz3.ab2@24319>   fcmp.x fp1,fp0
00047C0C <AmiBlitz3.ab2@24320> BRA 'negi2
00047C10 <AmiBlitz3.ab2@24323>   fcmp.x fp0,fp1
00047C14 <AmiBlitz3.ab2@24326>   Dc.l $f2920000                                           ;fbgt.w
00047C18 <AmiBlitz3.ab2@24330>   BGT.w thebgt
00047C1E <AmiBlitz3.ab2@24333>   MOVE.l A5,letstart
00047C22 <AmiBlitz3.ab2@24334>   BSR.w getparameter
00047C2C <AmiBlitz3.ab2@24340>   MOVE.l destpointer,pushpc
00047C36 <AmiBlitz3.ab2@24341>   MOVE.l hunkoffsetbase,pushoff
00047C3C <AmiBlitz3.ab2@24342>   CLR.l rightsidetype
00047C44 <AmiBlitz3.ab2@24343>   MOVE.w #$0001,regnum
00047C4A <AmiBlitz3.ab2@24344>   JSR JL_0_8E3C
00047C50 <AmiBlitz3.ab2@24345>   JSR calcvar
00047C56 <AmiBlitz3.ab2@24346>   TST.b formode
00047C5A <AmiBlitz3.ab2@24347>   BEQ 'lf1
00047C60 <AmiBlitz3.ab2@24348>   CMP.l #newtype_double,A2
00047C64 <AmiBlitz3.ab2@24349>   BEQ JUMP_notallowd
00047C6A <AmiBlitz3.ab2@24350>   MOVE.l a2,currtype
00047C70 <AmiBlitz3.ab2@24353>   CLR.w startoffsetmore
00047C74 <AmiBlitz3.ab2@24354>   CMP.w #$3d,d0
00047C78 <AmiBlitz3.ab2@24355>   BNE 'l1a
00047C7C <AmiBlitz3.ab2@24356>   BTST #15,d2
00047C80 <AmiBlitz3.ab2@24357>   BEQ 'l1a
00047C84 <AmiBlitz3.ab2@24358>   CMP.b #1,d2
00047C88 <AmiBlitz3.ab2@24359>   BNE 'l1a
00047C92 <AmiBlitz3.ab2@24360>   MOVE.w leaa0a0+2,startoffsetmore
00047C98 <AmiBlitz3.ab2@24363>   CLR.w regnum
00047C9C <AmiBlitz3.ab2@24364>   BSR.w JL_0_B5D2
00047CA2 <AmiBlitz3.ab2@24365>   CLR.w commode
00047CA8 <AmiBlitz3.ab2@24366>   CLR.w stackcorrect
00047CAE <AmiBlitz3.ab2@24367>   CLR.w pcodd
00047CB4 <AmiBlitz3.ab2@24368>   MOVE.w startoffsetmore,d1
00047CB8 <AmiBlitz3.ab2@24369>   BTST #0,d1
00047CBC <AmiBlitz3.ab2@24370>   BEQ 'l2a
00047CC4 <AmiBlitz3.ab2@24371>   MOVE.w #1,pcodd
00047CC8 <AmiBlitz3.ab2@24374>   CMP.w #$3D,D0                                            ;=
00047CCC <AmiBlitz3.ab2@24375>   BEQ.w JL_0_DEE0
00047CCE <AmiBlitz3.ab2@24378>   MOVE.b (a5)+,d1
00047CD2 <AmiBlitz3.ab2@24379>   BEQ 'l10
00047CD6 <AmiBlitz3.ab2@24380>   CMP.b #":",d1
00047CDA <AmiBlitz3.ab2@24381>   BEQ 'l10
00047CDE <AmiBlitz3.ab2@24382>   CMP.b #";",d1
00047CE2 <AmiBlitz3.ab2@24383>   BEQ 'l10
00047CE6 <AmiBlitz3.ab2@24384>   CMP.b #"0",d1
00047CEA <AmiBlitz3.ab2@24385>   BLT 'l11
00047CEE <AmiBlitz3.ab2@24386>   CMP.b #"9",d1
00047CF2 <AmiBlitz3.ab2@24387>   BGT 'l11
00047CF6 <AmiBlitz3.ab2@24388> BRA.s 'l1
00047CFE <AmiBlitz3.ab2@24391>   MOVE.b #1,quickadd
00047D04 <AmiBlitz3.ab2@24394>   MOVEA.l letstart,A5
00047D06 <AmiBlitz3.ab2@24395>   SUBQ.w #1,A5
00047D0A <AmiBlitz3.ab2@24398>   CMP.b #$7,D2
00047D0E <AmiBlitz3.ab2@24399>    BNE.w JL_0_DF8A
00047D12 <AmiBlitz3.ab2@24405>   MOVEM.w D2-D3,-(A7)
00047D18 <AmiBlitz3.ab2@24406>   MOVE.l lastoffset_org,-(A7)
00047D1E <AmiBlitz3.ab2@24407>   MOVE.w varmode,-(A7)
00047D28 <AmiBlitz3.ab2@24409>    MOVE.l #forthstack,forthsp
00047D32 <AmiBlitz3.ab2@24410>    MOVE.l #precstack,precsp
00047D38 <AmiBlitz3.ab2@24411>    CLR.w regnum
00047D3E <AmiBlitz3.ab2@24412>    CLR.w nonew
00047D44 <AmiBlitz3.ab2@24413>    CLR.w sbasegot
00047D4E <AmiBlitz3.ab2@24414>    MOVE.w varcodelen,oldvcodelen
00047D54 <AmiBlitz3.ab2@24415>    CLR.w varcodelen
00047D5C <AmiBlitz3.ab2@24416>    MOVE.w #$FFFF,lasta6
00047D5E <AmiBlitz3.ab2@24419>   MOVEQ.l #$07,D2
00047D62 <AmiBlitz3.ab2@24420>    BSR.w eval
00047D68 <AmiBlitz3.ab2@24421>   MOVE.w (A7)+,varmode
00047D6E <AmiBlitz3.ab2@24422>   MOVE.l (A7)+,lastoffset_org
00047D74 <AmiBlitz3.ab2@24423>   MOVE.w moved0a3,D1
00047D7A <AmiBlitz3.ab2@24424>    JSR writeword
00047D80 <AmiBlitz3.ab2@24425>   MOVE.w commode,D1
00047D84 <AmiBlitz3.ab2@24426>    BEQ.w JL_0_DF38
00047D8A <AmiBlitz3.ab2@24427>   LEA pulla2st,A0
00047D90 <AmiBlitz3.ab2@24428>   LEA pulla2stf,A1
00047D96 <AmiBlitz3.ab2@24429>    JSR pokecode
00047D9A <AmiBlitz3.ab2@24430> BRA.w JL_0_DF3C
00047D9E <AmiBlitz3.ab2@24433>   BSR.w JL_0_B63C
00047DA2 <AmiBlitz3.ab2@24436>   MOVEM.w (A7)+,D2-D3
00047DA6 <AmiBlitz3.ab2@24437>   BTST #$F,D2
00047DAA <AmiBlitz3.ab2@24438>   BNE.w JL_0_DF58
00047DB0 <AmiBlitz3.ab2@24439>     MOVE.w D3,leaa5d3a2+2
00047DB6 <AmiBlitz3.ab2@24440>     MOVE.l leaa5d3a2,D1
00047DBC <AmiBlitz3.ab2@24441>     JSR pokela5s
00047DC0 <AmiBlitz3.ab2@24444>   MOVE.w #$FE6F,D1
00047DC6 <AmiBlitz3.ab2@24445>   JSR uselib
00047DCC <AmiBlitz3.ab2@24446>   MOVE.l #$C700,D1
00047DD2 <AmiBlitz3.ab2@24447>   MOVE.l d1,lastinstruction
00047DD8 <AmiBlitz3.ab2@24448>   MOVE.w varmode,D2
00047DDC <AmiBlitz3.ab2@24449>   BNE.w JL_0_DF70
00047DDE <AmiBlitz3.ab2@24450>     ADDQ.w #1,D1
00047DE2 <AmiBlitz3.ab2@24453>   BSR.w Atokejsr
00047DE6 <AmiBlitz3.ab2@24454>   CMP.w #$2C,D0
00047DEA <AmiBlitz3.ab2@24455>   BNE.w JL_0_E0C6
00047DF0 <AmiBlitz3.ab2@24457>   MOVE.w addq4a2,D1
00047DF6 <AmiBlitz3.ab2@24458>   JSR writeword
00047DFA <AmiBlitz3.ab2@24459> BRA.w JL_0_E018
00047E00 <AmiBlitz3.ab2@24462> JMP error4char
00047E06 <AmiBlitz3.ab2@24465> JMP error_convert_types
00047E0A <AmiBlitz3.ab2@24469>    BTST #$E,D2
00047E0E <AmiBlitz3.ab2@24470>    BNE.w JL_0_DF9C
00047E10 <AmiBlitz3.ab2@24471>   TST.b D2
00047E14 <AmiBlitz3.ab2@24472>    BEQ.w JUMP_noleterr
00047E1A <AmiBlitz3.ab2@24473>    TST.b newsyntax
00047E1E <AmiBlitz3.ab2@24474>    BEQ JL_0_DFA0
00047E22 <AmiBlitz3.ab2@24477>    CMP.w #$4022,(a5)
00047E26 <AmiBlitz3.ab2@24478>    BNE JL_0_DFA0
00047E2C <AmiBlitz3.ab2@24479>    CMP.l #3,d2
00047E30 <AmiBlitz3.ab2@24480>    BNE  JUMP_error_convert_types
00047E32 <AmiBlitz3.ab2@24481>    ADDQ #2,a5
00047E34 <AmiBlitz3.ab2@24482>    MOVEQ #0,d0
00047E36 <AmiBlitz3.ab2@24483>    MOVE.b (a5)+,d0
00047E3A <AmiBlitz3.ab2@24484>    BEQ JL_0_DFA0
00047E3E <AmiBlitz3.ab2@24485>    CMP.b #$22,d0
00047E42 <AmiBlitz3.ab2@24486>    BNE 'l1
00047E46 <AmiBlitz3.ab2@24487>    MOVE.b #0,d0
00047E4A <AmiBlitz3.ab2@24488> BRA 'do
00047E4C <AmiBlitz3.ab2@24491>   ASL.l #8,d0
00047E4E <AmiBlitz3.ab2@24492>    MOVE.b (a5)+,d0
00047E52 <AmiBlitz3.ab2@24493>    BEQ JL_0_DFA0
00047E56 <AmiBlitz3.ab2@24494>    CMP.b #$22,d0
00047E5A <AmiBlitz3.ab2@24495>    BNE 'l2
00047E5E <AmiBlitz3.ab2@24496>    MOVE.b #0,d0
00047E60 <AmiBlitz3.ab2@24497>    ASR.l #8,d0
00047E64 <AmiBlitz3.ab2@24498> BRA 'do
00047E66 <AmiBlitz3.ab2@24501>   ASL.l #8,d0
00047E68 <AmiBlitz3.ab2@24502>     MOVE.b (a5)+,d0
00047E6C <AmiBlitz3.ab2@24503>    BEQ JL_0_DFA0
00047E70 <AmiBlitz3.ab2@24504>    CMP.b #$22,d0
00047E74 <AmiBlitz3.ab2@24505>    BNE 'l3
00047E78 <AmiBlitz3.ab2@24506>    MOVE.b #0,d0
00047E7A <AmiBlitz3.ab2@24507>    ASR.l #8,d0
00047E7E <AmiBlitz3.ab2@24508> BRA 'do
00047E80 <AmiBlitz3.ab2@24511>   ASL.l #8,d0
00047E82 <AmiBlitz3.ab2@24512>     MOVE.b (a5)+,d0
00047E86 <AmiBlitz3.ab2@24513>    BEQ JL_0_DFA0
00047E8A <AmiBlitz3.ab2@24514>    CMP.b #$22,d0
00047E8E <AmiBlitz3.ab2@24515>    BNE 'l4
00047E92 <AmiBlitz3.ab2@24516>    MOVE.b #0,d0
00047E94 <AmiBlitz3.ab2@24517>    ASR.l #8,d0
00047E98 <AmiBlitz3.ab2@24518> BRA 'do
00047E9C <AmiBlitz3.ab2@24521>    CMP.b #$22,(a5)+
00047EA0 <AmiBlitz3.ab2@24522>    BNE JUMP_error4char
00047EA4 <AmiBlitz3.ab2@24525>   MOVE.w #$2b7c,d1
00047EAA <AmiBlitz3.ab2@24526>    TST.w varmode
00047EAE <AmiBlitz3.ab2@24527>    BEQ 'g3
00047EB2 <AmiBlitz3.ab2@24528>    BCLR #9,d1
00047EB8 <AmiBlitz3.ab2@24531>     JSR writeword
00047EBA <AmiBlitz3.ab2@24532>     MOVE.l d0,d1
00047EC0 <AmiBlitz3.ab2@24533>     JSR writelong
00047EC2 <AmiBlitz3.ab2@24534>     MOVE.w d3,d1
00047EC8 <AmiBlitz3.ab2@24535>     JSR writeword
00047ECE <AmiBlitz3.ab2@24536>     JSR get1bytemain
00047ED0 <AmiBlitz3.ab2@24537> RTS
00047ED6 <AmiBlitz3.ab2@24543> JMP noleterr
00047EDC <AmiBlitz3.ab2@24547>   MOVE.w d2,vartype
00047EE0 <AmiBlitz3.ab2@24548>   MOVE.b #$3,D2
00047EE4 <AmiBlitz3.ab2@24551>   CMP.b #5,d2
00047EE8 <AmiBlitz3.ab2@24552>   BNE 'l1
00047EEE <AmiBlitz3.ab2@24553>   MOVE.l a2,currtype
00047EF2 <AmiBlitz3.ab2@24557>   MOVEM.w D2-D3,-(A7)
00047EF8 <AmiBlitz3.ab2@24558>   MOVE.w varmode,-(A7)
00047EFE <AmiBlitz3.ab2@24559>   MOVE.l a2,leftsidetype
00047F02 <AmiBlitz3.ab2@24560>   BTST #$f,d2
00047F06 <AmiBlitz3.ab2@24561>   BEQ 'nomultiassign
00047F0C <AmiBlitz3.ab2@24562>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00047F10 <AmiBlitz3.ab2@24563> 'nomultiassign  ANDI.w #$FF,D2
00047F16 <AmiBlitz3.ab2@24564>   MOVE.l lastoffset_org,-(A7)
00047F1A <AmiBlitz3.ab2@24565>   BSR.w eval                                ; calc right side of var assign
00047F1E <AmiBlitz3.ab2@24567>   MOVEM.l a0/a1,-(a7)
00047F24 <AmiBlitz3.ab2@24568>   MOVE.l leftsidetype,a0
00047F2A <AmiBlitz3.ab2@24569>   CMP.l #0,a0
00047F2E <AmiBlitz3.ab2@24570>   BEQ 'nocheck
00047F36 <AmiBlitz3.ab2@24571>   CMP.l #$100,4(a0)
00047F3A <AmiBlitz3.ab2@24572>   BLE 'nocheck
00047F40 <AmiBlitz3.ab2@24573>   TST.l typetocast
00047F44 <AmiBlitz3.ab2@24574>   BEQ 'nocast
00047F4A <AmiBlitz3.ab2@24575>   MOVE.l typetocast,a1
00047F4E <AmiBlitz3.ab2@24576>   BRA 'typecheck
00047F54 <AmiBlitz3.ab2@24577> 'nocast  TST.l rightsidetype
00047F58 <AmiBlitz3.ab2@24578>   BEQ 'nocheck
00047F5E <AmiBlitz3.ab2@24579>   MOVE.l rightsidetype,a1
00047F66 <AmiBlitz3.ab2@24580>   CMP.l #$100,4(a1)
00047F6A <AmiBlitz3.ab2@24581>   BGE 'typecheck
00047F72 <AmiBlitz3.ab2@24582>   CMP.l #$3,4(a1)
00047F76 <AmiBlitz3.ab2@24583>   BEQ 'ok                              ;long assign is allow with this codelines
00047F7A <AmiBlitz3.ab2@24584>   BRA 'error
00047F80 <AmiBlitz3.ab2@24586>   TST.b typecheck
00047F84 <AmiBlitz3.ab2@24587>   BEQ 'nocheck
00047F8A <AmiBlitz3.ab2@24588>   TST.b notypecheck
00047F8E <AmiBlitz3.ab2@24589>   BNE 'ok
00047F90 <AmiBlitz3.ab2@24590>   CMP.l a0,a1
00047F94 <AmiBlitz3.ab2@24591>   BEQ 'ok
00047F98 <AmiBlitz3.ab2@24593>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00047F9C <AmiBlitz3.ab2@24594>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00047FA0 <AmiBlitz3.ab2@24595>   BEQ 'ok
00047FA6 <AmiBlitz3.ab2@24597>  JMP   error_convert_types     ;for syntax 4  = typecheck
00047FAC <AmiBlitz3.ab2@24600>    CLR.l typetocast
00047FB0 <AmiBlitz3.ab2@24601>    MOVEM.l (a7)+, a0/a1
00047FB6 <AmiBlitz3.ab2@24602>   MOVE.l (A7)+,lastoffset_org
00047FBC <AmiBlitz3.ab2@24603>   MOVE.w commode,D1
00047FC0 <AmiBlitz3.ab2@24604>    BNE.w JL_0_DFCC
00047FC4 <AmiBlitz3.ab2@24605>    BSR.w JL_0_B63C
00047FCA <AmiBlitz3.ab2@24608>   MOVE.w (A7)+,varmode
00047FCE <AmiBlitz3.ab2@24609>   MOVEM.w (A7)+,D2-D3
00047FD2 <AmiBlitz3.ab2@24611>   MOVE.w #$2B40,D1
00047FD8 <AmiBlitz3.ab2@24612>   MOVE.w varmode,D4
00047FDC <AmiBlitz3.ab2@24613>    BEQ.w JL_0_DFE8
00047FE0 <AmiBlitz3.ab2@24614>   BCLR #$9,D1
00047FE4 <AmiBlitz3.ab2@24617>   BTST #$F,D2
00047FE8 <AmiBlitz3.ab2@24618>    BEQ.w JL_0_E090
00047FEE <AmiBlitz3.ab2@24619>    TST.b stackcorrect
00047FF2 <AmiBlitz3.ab2@24620>    BNE 'st1
00047FF8 <AmiBlitz3.ab2@24621>   MOVE.w commode,D1
00047FFC <AmiBlitz3.ab2@24622>    BEQ.w JL_0_E004
00048002 <AmiBlitz3.ab2@24625>   MOVE.w pulla2,D1
00048008 <AmiBlitz3.ab2@24626>    JSR writeword
0004800C <AmiBlitz3.ab2@24629>   MOVE.w #$2480,D1
00048010 <AmiBlitz3.ab2@24630>    MOVEM.l a0/d0,-(a7)
00048016 <AmiBlitz3.ab2@24631>    MOVEA.l lastoffset_org,A0
00048018 <AmiBlitz3.ab2@24632>    MOVE.l A0,D0
0004801C <AmiBlitz3.ab2@24633>    BEQ.w 'skip
0004801E <AmiBlitz3.ab2@24634>    MOVEA.l D0,A0
00048026 <AmiBlitz3.ab2@24635>    MOVE.l $A(A0),currtype
0004802A <AmiBlitz3.ab2@24638>   MOVEM.l (a7)+,a0/d0
0004802E <AmiBlitz3.ab2@24639>   CMP.w #$2C,D0
00048032 <AmiBlitz3.ab2@24640>    BNE.w JL_0_E090
00048036 <AmiBlitz3.ab2@24641>     MOVE.w #$24C0,D1
0004803A <AmiBlitz3.ab2@24642>    BSR.w JL_0_E090                                         ;write store
00048040 <AmiBlitz3.ab2@24645>    MOVE.l lastoffset_org,D0
00048048 <AmiBlitz3.ab2@24649>   MOVE.w #$FFFF,commode
0004804E <AmiBlitz3.ab2@24650>   CLR.w varcodelen
00048056 <AmiBlitz3.ab2@24651>   MOVE.b #1,optiarray
0004805C <AmiBlitz3.ab2@24652>   MOVE.w pusha2,D1
00048062 <AmiBlitz3.ab2@24653>    JSR writeword
00048068 <AmiBlitz3.ab2@24654>   TST.l lastoffset_org
0004806C <AmiBlitz3.ab2@24655>   BEQ dimmore
00048072 <AmiBlitz3.ab2@24656>   MOVEA.l lastoffset_org,A0
00048074 <AmiBlitz3.ab2@24657>   MOVE.l (A0),D0
00048078 <AmiBlitz3.ab2@24658>    BEQ.w JUMP_comerr
0004807A <AmiBlitz3.ab2@24659>   MOVEA.l D0,A0
00048080 <AmiBlitz3.ab2@24660>   MOVE.l A0,lastoffset_org
00048086 <AmiBlitz3.ab2@24661>   BTST #$1,$7(A0)
0004808A <AmiBlitz3.ab2@24662>    BNE.w JUMP_nocomerr
0004808E <AmiBlitz3.ab2@24663>   MOVEA.l $A(A0),A1
00048092 <AmiBlitz3.ab2@24664>   MOVE.l $4(A1),D2
00048098 <AmiBlitz3.ab2@24667>   BTST #$0,$7(A0)
0004809C <AmiBlitz3.ab2@24668>    BNE.w JL_0_E078
000480A2 <AmiBlitz3.ab2@24669>   CMP.l #$100,D2
000480A6 <AmiBlitz3.ab2@24670>    BCC.l JUMP_nocomerr
000480AA <AmiBlitz3.ab2@24671> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
000480B0 <AmiBlitz3.ab2@24674>         CLR.b optiarray
000480B4 <AmiBlitz3.ab2@24675>         CMP.w #"@@",(a5)
000480B8 <AmiBlitz3.ab2@24676>         BEQ 'n1
000480BC <AmiBlitz3.ab2@24677> BRA 'd1
000480C2 <AmiBlitz3.ab2@24680>   JSR nextline
000480C4 <AmiBlitz3.ab2@24681>         MOVE.l a5,-(a7)
000480C6 <AmiBlitz3.ab2@24684>   MOVE.b (a5)+,d0
000480CA <AmiBlitz3.ab2@24685>         CMP.b #$20,d0
000480CE <AmiBlitz3.ab2@24686>         BEQ 'l2
000480D0 <AmiBlitz3.ab2@24687>         MOVE.l (a7)+,a5
000480D4 <AmiBlitz3.ab2@24688>         CMP.b #";",d0
000480D8 <AmiBlitz3.ab2@24689>         BEQ 'n1
000480DE <AmiBlitz3.ab2@24692>         TST.w debugmode
000480E2 <AmiBlitz3.ab2@24693>         BEQ JL_0_DEE0
000480E4 <AmiBlitz3.ab2@24694>         MOVE.l a0,-(a7)
000480EA <AmiBlitz3.ab2@24695>         MOVE.l pushat,a0
000480F0 <AmiBlitz3.ab2@24696>         CMP.l #0,a0
000480F4 <AmiBlitz3.ab2@24697>         BNE 'o1
000480F8 <AmiBlitz3.ab2@24698> BRA 'skip
00048100 <AmiBlitz3.ab2@24701>         ADD.l #1,2(a0)
00048106 <AmiBlitz3.ab2@24704>   CLR.w commode
0004810E <AmiBlitz3.ab2@24705>         MOVE.b #1,stackcorrect
00048110 <AmiBlitz3.ab2@24706>         MOVE.l (a7)+,a0
00048116 <AmiBlitz3.ab2@24707> JMP JL_0_DEE0
0004811C <AmiBlitz3.ab2@24710> JMP nocomerr
00048122 <AmiBlitz3.ab2@24713>   CMP.l #$100,D2
00048126 <AmiBlitz3.ab2@24714>    BCS.w JL_0_E084
00048128 <AmiBlitz3.ab2@24715>   MOVEQ.l #$00,D2
0004812C <AmiBlitz3.ab2@24718>   BSET #$E,D2
00048130 <AmiBlitz3.ab2@24721>   BSET #$F,D2
00048134 <AmiBlitz3.ab2@24722> BRA.w JL_0_DEE0
0004813A <AmiBlitz3.ab2@24725>    MOVE.l destpointer,a4
00048142 <AmiBlitz3.ab2@24726>    MOVE.l #$f22a6400,-4(a4)
00048148 <AmiBlitz3.ab2@24727>    MOVE.w arrayoffset,d1
0004814E <AmiBlitz3.ab2@24728> JMP writeword
00048154 <AmiBlitz3.ab2@24731> JMP comerr
0004815A <AmiBlitz3.ab2@24734>    TST.b fpu
0004815E <AmiBlitz3.ab2@24735>    BEQ 'nofloat
00048162 <AmiBlitz3.ab2@24736>    CMP.b #5,d2
00048166 <AmiBlitz3.ab2@24737>    BNE 'nofloat
0004816C <AmiBlitz3.ab2@24738>    CLR.w fp0var
00048172 <AmiBlitz3.ab2@24739>    LEA regtable,a4
00048174 <AmiBlitz3.ab2@24740>    TST.l (a4)
00048178 <AmiBlitz3.ab2@24741>    BEQ 'noreg
0004817C <AmiBlitz3.ab2@24742>    BTST #15,d2                                             ;regvars
00048180 <AmiBlitz3.ab2@24743>    BNE 'noreg
00048184 <AmiBlitz3.ab2@24744>    CMP.w 0+4(a4),d3
00048188 <AmiBlitz3.ab2@24745>    BNE 'doreg1
0004818E <AmiBlitz3.ab2@24746>    MOVE.l #$f2000380,d1
00048194 <AmiBlitz3.ab2@24747>    MOVE.w regnum,d0
00048198 <AmiBlitz3.ab2@24748>    BNE 'noopt
0004819E <AmiBlitz3.ab2@24754>    MOVE.l destpointer,a4
000481A6 <AmiBlitz3.ab2@24755>    CMP.l #$f2001c80,-8(a4)
000481AA <AmiBlitz3.ab2@24756>    BNE 'noopt
000481B2 <AmiBlitz3.ab2@24757>    CMP.l #$f2000422,-4(a4)
000481B6 <AmiBlitz3.ab2@24758>    BNE 'noopt
000481BC <AmiBlitz3.ab2@24759>    MOVE.l #$f20003a2,d1
000481C6 <AmiBlitz3.ab2@24760>    SUB.l #8,destpointer
000481C8 <AmiBlitz3.ab2@24763>    ASL.w #7,d0
000481CA <AmiBlitz3.ab2@24764>    OR.w d0,d1
000481D0 <AmiBlitz3.ab2@24765>    JSR writelong
000481D2 <AmiBlitz3.ab2@24766> RTS
000481D6 <AmiBlitz3.ab2@24769>   CMP.w 8+4(a4),d3
000481DA <AmiBlitz3.ab2@24770>    BNE 'doreg2
000481E0 <AmiBlitz3.ab2@24771>    MOVE.l #$f2000300,d1
000481E6 <AmiBlitz3.ab2@24772>    MOVE.w regnum,d0
000481E8 <AmiBlitz3.ab2@24773>    ASL.w #7,d0
000481EA <AmiBlitz3.ab2@24774>    OR.w d0,d1
000481F0 <AmiBlitz3.ab2@24775>    JSR writelong
000481F2 <AmiBlitz3.ab2@24776> RTS
000481F6 <AmiBlitz3.ab2@24779>   CMP.w 16+4(a4),d3
000481FA <AmiBlitz3.ab2@24780>    BNE 'doreg3
00048200 <AmiBlitz3.ab2@24781>    MOVE.l #$f2000280,d1
00048206 <AmiBlitz3.ab2@24782>    MOVE.w regnum,d0
00048208 <AmiBlitz3.ab2@24783>    ASL.w #7,d0
0004820A <AmiBlitz3.ab2@24784>    OR.w d0,d1
00048210 <AmiBlitz3.ab2@24785>    JSR  writelong
00048212 <AmiBlitz3.ab2@24786>  RTS
00048216 <AmiBlitz3.ab2@24789>   CMP.w 24+4(a4),d3
0004821A <AmiBlitz3.ab2@24790>    BNE 'doreg4
00048220 <AmiBlitz3.ab2@24791>    MOVE.l #$f2000200,d1
00048226 <AmiBlitz3.ab2@24792>    MOVE.w regnum,d0
00048228 <AmiBlitz3.ab2@24793>    ASL.w #7,d0
0004822A <AmiBlitz3.ab2@24794>    OR.w d0,d1
00048230 <AmiBlitz3.ab2@24795>    JSR writelong
00048232 <AmiBlitz3.ab2@24796> RTS
00048236 <AmiBlitz3.ab2@24799>   CMP.w 32+4(a4),d3
0004823A <AmiBlitz3.ab2@24800>    BNE 'noreg
00048240 <AmiBlitz3.ab2@24801>    MOVE.l #$f2000180,d1
00048246 <AmiBlitz3.ab2@24802>    MOVE.w regnum,d0
00048248 <AmiBlitz3.ab2@24803>    ASL.w #7,d0
0004824A <AmiBlitz3.ab2@24804>    OR.w d0,d1
00048250 <AmiBlitz3.ab2@24805>    JSR writelong
00048252 <AmiBlitz3.ab2@24806> RTS
00048258 <AmiBlitz3.ab2@24809>    TST.w regnum
0004825C <AmiBlitz3.ab2@24810>    BNE 'nofp0
00048262 <AmiBlitz3.ab2@24811>    MOVE.l destpointer ,a4
0004826A <AmiBlitz3.ab2@24812>    CMP.l #$f2304400,-6(a4)
0004826E <AmiBlitz3.ab2@24813>    BNE 'do
00048274 <AmiBlitz3.ab2@24814>    CMP.w #$1990,-2(a4)
00048278 <AmiBlitz3.ab2@24815>    BNE 'do
0004827C <AmiBlitz3.ab2@24816>    BTST #15,d2                                             ;types ?
00048280 <AmiBlitz3.ab2@24817>    BNE 'do
00048286 <AmiBlitz3.ab2@24818>   MOVE.l #$2b701990,d1                                     ;var
0004828C <AmiBlitz3.ab2@24819>   TST.w varmode
00048290 <AmiBlitz3.ab2@24820>   BEQ 'glob1
00048294 <AmiBlitz3.ab2@24821>   BCLR #25,d1
00048298 <AmiBlitz3.ab2@24824>   MOVE.l d1,-6(a4)
0004829C <AmiBlitz3.ab2@24825>   MOVE.w d3,-2(a4)
000482A2 <AmiBlitz3.ab2@24826>   CLR.w fp0var
000482AA <AmiBlitz3.ab2@24827>   MOVE.w #$ffff,fp0mode
000482AC <AmiBlitz3.ab2@24828> RTS
000482B4 <AmiBlitz3.ab2@24831>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000482B8 <AmiBlitz3.ab2@24832>    BNE 'do3
000482C2 <AmiBlitz3.ab2@24833>    CMP.l #newtype_double,currtype
000482C6 <AmiBlitz3.ab2@24834>    BEQ 'do4
000482CA <AmiBlitz3.ab2@24837>   MOVE.w #$2b6d,d1
000482D0 <AmiBlitz3.ab2@24838>    TST.w varmode
000482D4 <AmiBlitz3.ab2@24839>    BEQ 'g2
000482D8 <AmiBlitz3.ab2@24840>     BCLR #9,d1
000482DC <AmiBlitz3.ab2@24843>     CMP.w #$2b6d,d1
000482E0 <AmiBlitz3.ab2@24844>     BNE 'd1
000482E4 <AmiBlitz3.ab2@24845>     CMP.w -2(a4),d3
000482E8 <AmiBlitz3.ab2@24846>     BNE 'd1
000482EE <AmiBlitz3.ab2@24847>     SUBQ.l #6,destpointer
000482F2 <AmiBlitz3.ab2@24848> BRA 'd12
000482F6 <AmiBlitz3.ab2@24851>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000482FC <AmiBlitz3.ab2@24852>     MOVE.w -2(a4),-4(a4)
00048300 <AmiBlitz3.ab2@24853>     MOVE.w d3,-2(a4)
00048306 <AmiBlitz3.ab2@24856>   CLR.w fp0var
0004830E <AmiBlitz3.ab2@24857>     MOVE.w #$ffff,fp0mode
00048310 <AmiBlitz3.ab2@24858> RTS
00048318 <AmiBlitz3.ab2@24861>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
0004831C <AmiBlitz3.ab2@24862>    BNE 'do4
00048320 <AmiBlitz3.ab2@24863>    MOVE.w #$2b6c,d1
00048326 <AmiBlitz3.ab2@24864>       TST.w varmode
0004832A <AmiBlitz3.ab2@24865>    BEQ 'g3
0004832E <AmiBlitz3.ab2@24866>    BCLR #9,d1
00048332 <AmiBlitz3.ab2@24869>   MOVE.w d1,-6(a4)
00048338 <AmiBlitz3.ab2@24870>     MOVE.w -2(a4),-4(a4)
0004833C <AmiBlitz3.ab2@24871>     MOVE.w d3,-2(a4)
00048342 <AmiBlitz3.ab2@24872>     CLR.w fp0var
0004834A <AmiBlitz3.ab2@24873>     MOVE.w #$ffff,fp0mode
0004834C <AmiBlitz3.ab2@24874> RTS
00048352 <AmiBlitz3.ab2@24877>   MOVE.w d3,fp0var
0004835C <AmiBlitz3.ab2@24878>    MOVE.w varmode,fp0mode
0004835E <AmiBlitz3.ab2@24879>    ADDQ.l #6,a4
00048364 <AmiBlitz3.ab2@24880>    MOVE.l a4,fp0addr
0004836E <AmiBlitz3.ab2@24881>    MOVE.l firstiff,fp0iff
00048372 <AmiBlitz3.ab2@24884>   MOVEM.l d0/d4,-(a7)
00048374 <AmiBlitz3.ab2@24885>    MOVEQ #0,d0
0004837A <AmiBlitz3.ab2@24886>     MOVE.w regnum,d0
0004837C <AmiBlitz3.ab2@24887>    ASL.w #7,d0                                             ;fpu store var
00048380 <AmiBlitz3.ab2@24888>   BTST #15,d2
00048384 <AmiBlitz3.ab2@24889>    BEQ 'var
00048386 <AmiBlitz3.ab2@24890>    MOVE.w d1,d4
0004838A <AmiBlitz3.ab2@24891>    CMP.w #$24c0,d4
0004838E <AmiBlitz3.ab2@24892>    BNE 'nopl
00048394 <AmiBlitz3.ab2@24893>    MOVE.l #$f21a6400,d1
00048396 <AmiBlitz3.ab2@24894>    MOVEQ #0,d3
0004839A <AmiBlitz3.ab2@24895> BRA 'glob
000483A0 <AmiBlitz3.ab2@24899>   MOVE.l #$f2126400,d1
000483A2 <AmiBlitz3.ab2@24900>    TST.w d3                                                ;offset =0
000483A6 <AmiBlitz3.ab2@24901>    BNE 'offset
000483AC <AmiBlitz3.ab2@24902>    MOVE.l #$f2126400,d1
000483AE <AmiBlitz3.ab2@24910>    MOVEQ #0,d3
000483B2 <AmiBlitz3.ab2@24911> BRA 'glob
000483B8 <AmiBlitz3.ab2@24914>   MOVE.l #$f22d6400,d1                                     ;var
000483BE <AmiBlitz3.ab2@24915>   TST.w varmode
000483C2 <AmiBlitz3.ab2@24916>   BEQ 'glob
000483C6 <AmiBlitz3.ab2@24917>   BCLR #16,d1
000483C8 <AmiBlitz3.ab2@24918>  'glob OR.l d0,d1
000483D2 <AmiBlitz3.ab2@24921>   CMP.l #newtype_double,currtype
000483D6 <AmiBlitz3.ab2@24922>   BNE 'dbl1
000483DC <AmiBlitz3.ab2@24923>   OR.l #$00001000,d1
000483E2 <AmiBlitz3.ab2@24926>   JSR writelong
000483E8 <AmiBlitz3.ab2@24927>   CLR.l currtype
000483EC <AmiBlitz3.ab2@24928>   MOVEM.l (a7)+,d0/d4
000483EE <AmiBlitz3.ab2@24929>   MOVE.l d3,d1
000483F2 <AmiBlitz3.ab2@24930>   BEQ 'nooffs
000483F8 <AmiBlitz3.ab2@24931> JMP writeword
000483FA <AmiBlitz3.ab2@24934> RTS
00048400 <AmiBlitz3.ab2@24948>     TST.b fast                                             ;write lea->xx(a2)
00048404 <AmiBlitz3.ab2@24949>    BEQ 'la10
0004840A <AmiBlitz3.ab2@24953>    TST.b quickadd
00048410 <AmiBlitz3.ab2@24955>      CLR.b quickadd
00048414 <AmiBlitz3.ab2@24956>    CMP.w #$2480,d1
00048418 <AmiBlitz3.ab2@24957>    BNE 'la10
0004841E <AmiBlitz3.ab2@24958>    TST.b optiarray
00048422 <AmiBlitz3.ab2@24959>    BNE 'la10
00048428 <AmiBlitz3.ab2@24960>    MOVE.l destpointer,a4
0004842E <AmiBlitz3.ab2@24961>    CMP.w #$45ea,-4(a4)
00048432 <AmiBlitz3.ab2@24962>    BNE 'la10
0004843A <AmiBlitz3.ab2@24963>    CMP.w #8,pushclen
0004843E <AmiBlitz3.ab2@24964>    BEQ 'la100
00048446 <AmiBlitz3.ab2@24965>    CMP.w #6,pushclen
0004844A <AmiBlitz3.ab2@24966>    BNE 'la10
0004844E <AmiBlitz3.ab2@24967>    CMP.b #3,d2
00048452 <AmiBlitz3.ab2@24968>    BCS 'la110
00048458 <AmiBlitz3.ab2@24970>    MOVE.w #$2540,-2(a4)
0004845E <AmiBlitz3.ab2@24971>    MOVE.w arrayoffset,d1
00048464 <AmiBlitz3.ab2@24972> JMP writeword
0004846A <AmiBlitz3.ab2@24975>    CLR.b quickadd
0004846C <AmiBlitz3.ab2@24976> RTS
00048470 <AmiBlitz3.ab2@24979>    CMP.b #2,d2
00048474 <AmiBlitz3.ab2@24980>    BNE 'la120
0004847A <AmiBlitz3.ab2@24981>     MOVE.w #$3540,-2(a4)
00048480 <AmiBlitz3.ab2@24982>    MOVE.w arrayoffset,d1
00048486 <AmiBlitz3.ab2@24983> JMP writeword
0004848A <AmiBlitz3.ab2@24986>   CMP.b #1,d2
0004848E <AmiBlitz3.ab2@24987>    BNE.s 'la10
00048494 <AmiBlitz3.ab2@24988>     MOVE.w #$1540,-2(a4)
0004849A <AmiBlitz3.ab2@24989>    MOVE.w arrayoffset,d1
000484A0 <AmiBlitz3.ab2@24990> JMP writeword
000484A4 <AmiBlitz3.ab2@24993>    CMP.b #3,d2
000484A8 <AmiBlitz3.ab2@24994>    BCS 'la11
000484AE <AmiBlitz3.ab2@24995>    MOVE.w #$2540,-4(a4)
000484B0 <AmiBlitz3.ab2@24996> RTS
000484B4 <AmiBlitz3.ab2@24999>    CMP.b #2,d2
000484B8 <AmiBlitz3.ab2@25000>    BNE 'la12
000484BE <AmiBlitz3.ab2@25001>     MOVE.w #$3540,-4(a4)
000484C0 <AmiBlitz3.ab2@25002> RTS
000484C4 <AmiBlitz3.ab2@25004>  'la12 CMP.b #1,d2
000484C8 <AmiBlitz3.ab2@25005>    BNE.s 'la10
000484CE <AmiBlitz3.ab2@25006>     MOVE.w #$1540,-4(a4)
000484D0 <AmiBlitz3.ab2@25007> RTS
000484D6 <AmiBlitz3.ab2@25010>   CLR.b optiarray
000484DA <AmiBlitz3.ab2@25011>    CMP.b #$1,D2
000484DE <AmiBlitz3.ab2@25012>    BEQ.w JL_0_E0AC
000484E2 <AmiBlitz3.ab2@25013>    BSR.w varalign
000484E6 <AmiBlitz3.ab2@25014>    CMP.b #$3,D2
000484EA <AmiBlitz3.ab2@25015>    BCC.w writevarlong
000484F0 <AmiBlitz3.ab2@25016>    TST.b fast                                              ;optiimmi
000484F4 <AmiBlitz3.ab2@25017>    BEQ 'l10b
000484FA <AmiBlitz3.ab2@25022>    MOVE.l destpointer,a0
00048500 <AmiBlitz3.ab2@25023>    SUB.l imm_addr,a0
00048506 <AmiBlitz3.ab2@25024>    CMP.l #4,a0
0004850A <AmiBlitz3.ab2@25025>    BNE 'l10
00048510 <AmiBlitz3.ab2@25026>    CLR.l imm_addr
00048516 <AmiBlitz3.ab2@25027>    MOVE.l destpointer,a4
0004851A <AmiBlitz3.ab2@25028>    OR.w #$107c,d1
0004851E <AmiBlitz3.ab2@25029>    MOVE.w d1,-4(a4)
00048520 <AmiBlitz3.ab2@25030>     MOVE.w D3,D1
00048526 <AmiBlitz3.ab2@25031> JMP writeword
0004852C <AmiBlitz3.ab2@25034>   MOVE.l destpointer,a0
00048532 <AmiBlitz3.ab2@25035>   SUB.l load_var_addr,a0
00048538 <AmiBlitz3.ab2@25036>   CMP.l #4,a0
0004853C <AmiBlitz3.ab2@25037>   BNE 'l10b
00048542 <AmiBlitz3.ab2@25038>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00048546 <AmiBlitz3.ab2@25039>   BNE 'l10b
0004854C <AmiBlitz3.ab2@25041>   CLR.l load_var_addr
00048552 <AmiBlitz3.ab2@25042>   MOVE.l destpointer,a4
00048556 <AmiBlitz3.ab2@25043>   OR.w #$102d,d1
0004855A <AmiBlitz3.ab2@25044>   MOVE.w d1,-4(a4)
0004855C <AmiBlitz3.ab2@25045>   MOVE.w d3,d1
00048562 <AmiBlitz3.ab2@25046> JMP writeword
00048566 <AmiBlitz3.ab2@25049>   ORI.w #$1000,D1                                          ;word
0004856A <AmiBlitz3.ab2@25050> BRA.w writestorevar
00048570 <AmiBlitz3.ab2@25054>    TST.b fast                                              ;optiimmi
00048574 <AmiBlitz3.ab2@25055>    BEQ 'l10b
0004857A <AmiBlitz3.ab2@25060>    MOVE.l destpointer,a0
00048580 <AmiBlitz3.ab2@25061>    SUB.l imm_addr,a0
00048586 <AmiBlitz3.ab2@25062>    CMP.l #4,a0
0004858A <AmiBlitz3.ab2@25063>    BNE 'l10
00048590 <AmiBlitz3.ab2@25064>    CLR.l imm_addr
00048596 <AmiBlitz3.ab2@25065>    MOVE.l destpointer,a4
0004859A <AmiBlitz3.ab2@25066>    OR.w #$7c,d1
0004859E <AmiBlitz3.ab2@25067>    EORI #$3000,d1
000485A2 <AmiBlitz3.ab2@25068>    MOVE.w d1,-4(a4)
000485A4 <AmiBlitz3.ab2@25069>       MOVE.w D3,D1
000485AA <AmiBlitz3.ab2@25070> JMP writeword
000485B0 <AmiBlitz3.ab2@25073>   MOVE.l destpointer,a0
000485B6 <AmiBlitz3.ab2@25074>   SUB.l load_var_addr,a0
000485BC <AmiBlitz3.ab2@25075>   CMP.l #4,a0
000485C0 <AmiBlitz3.ab2@25076>   BNE 'l10b
000485C6 <AmiBlitz3.ab2@25077>   CLR.l load_var_addr
000485CC <AmiBlitz3.ab2@25078>   MOVE.l destpointer,a4
000485D2 <AmiBlitz3.ab2@25079>    CMP.w #$1b6d,-4(a4)
000485D6 <AmiBlitz3.ab2@25080>    BNE 'l10b
000485DA <AmiBlitz3.ab2@25081>    OR.w #$2d,d1
000485DE <AmiBlitz3.ab2@25082>    EORI #$3000,d1
000485E2 <AmiBlitz3.ab2@25083>    MOVE.w d1,-4(a4)
000485E4 <AmiBlitz3.ab2@25084>   MOVE.w d3,d1
000485EA <AmiBlitz3.ab2@25085> JMP writeword
000485F0 <AmiBlitz3.ab2@25088>   ADDQ.w #1,pcodd                                          ;byte
000485F4 <AmiBlitz3.ab2@25089>   EORI.w #$3000,D1
000485FA <AmiBlitz3.ab2@25092>   JSR writeword
000485FE <AmiBlitz3.ab2@25093>   BTST #$7,D1
00048602 <AmiBlitz3.ab2@25094>    BNE JL_0_E0C6
00048604 <AmiBlitz3.ab2@25095>   MOVE.w D3,D1
0004860A <AmiBlitz3.ab2@25096> JMP writeword
00048610 <AmiBlitz3.ab2@25099>    TST.b fast                                              ;optiimmi
00048614 <AmiBlitz3.ab2@25100>    BEQ 'l10b
0004861A <AmiBlitz3.ab2@25104>    MOVE.l destpointer,a0
00048620 <AmiBlitz3.ab2@25105>    SUB.l imm_addr,a0
00048626 <AmiBlitz3.ab2@25106>    CMP.l #6,a0
0004862A <AmiBlitz3.ab2@25107>    BNE 'l10
00048630 <AmiBlitz3.ab2@25108>    CLR.l imm_addr
00048636 <AmiBlitz3.ab2@25109>    MOVE.l destpointer,a4
0004863A <AmiBlitz3.ab2@25110>    OR.w #$7c,d1
0004863E <AmiBlitz3.ab2@25111>    MOVE.w d1,-6(a4)
00048640 <AmiBlitz3.ab2@25112>     MOVE.w D3,D1
00048646 <AmiBlitz3.ab2@25113> JMP writeword
0004864C <AmiBlitz3.ab2@25116>   MOVE.l destpointer,a0
00048652 <AmiBlitz3.ab2@25117>   SUB.l load_var_addr,a0
00048658 <AmiBlitz3.ab2@25118>   CMP.l #4,a0
0004865C <AmiBlitz3.ab2@25119>   BNE 'l10b
00048662 <AmiBlitz3.ab2@25120>   CLR.l load_var_addr
00048668 <AmiBlitz3.ab2@25121>   MOVE.l destpointer,a4
0004866E <AmiBlitz3.ab2@25122>   CMP.w #$245f,-2(a4)
00048672 <AmiBlitz3.ab2@25123>   BEQ 'l10b
00048676 <AmiBlitz3.ab2@25124>   OR.w #$28,d1
0004867A <AmiBlitz3.ab2@25125>   OR.w d1,-4(a4)
00048680 <AmiBlitz3.ab2@25126>   CMP.w #$2b6d,-4(a4)
00048684 <AmiBlitz3.ab2@25127>   BNE 'd1
00048688 <AmiBlitz3.ab2@25128>   CMP.w -2(a4),d3
0004868C <AmiBlitz3.ab2@25129>   BNE 'd1
00048692 <AmiBlitz3.ab2@25130>   SUBQ.l #4,destpointer
00048694 <AmiBlitz3.ab2@25131> RTS
00048696 <AmiBlitz3.ab2@25134>   MOVE.w d3,d1
0004869C <AmiBlitz3.ab2@25135> JMP writeword
000486A2 <AmiBlitz3.ab2@25138>   JSR writeword
000486A6 <AmiBlitz3.ab2@25139>   BTST #$7,D1
000486AA <AmiBlitz3.ab2@25140>    BNE.b JL_0_E0C6
000486AC <AmiBlitz3.ab2@25141>   MOVE.w D3,D1
000486B2 <AmiBlitz3.ab2@25142> JMP writeword
000486B4 <AmiBlitz3.ab2@25145> RTS
000486B6 <AmiBlitz3.ab2@25149>   MOVE.w D1,-(A7)
000486BA <AmiBlitz3.ab2@25150>   MOVE.w pcodd(PC),D1
000486BC <AmiBlitz3.ab2@25151>   LSR.w #1,D1
000486C0 <AmiBlitz3.ab2@25152>    BCC.b JL_0_E0E2
000486C6 <AmiBlitz3.ab2@25153>   CLR.w pcodd
000486CC <AmiBlitz3.ab2@25154>   MOVE.w add1a2,D1
000486D2 <AmiBlitz3.ab2@25155>    JSR writeword
000486D4 <AmiBlitz3.ab2@25158>   MOVE.w (A7)+,D1
000486D6 <AmiBlitz3.ab2@25159> RTS
000486D8 <AmiBlitz3.ab2@25163> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
000486DA <AmiBlitz3.ab2@25166> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
000486DC <AmiBlitz3.ab2@25167> listadd:   Ds.w 1                                          ;set to 8 if it's a list
000486DE <AmiBlitz3.ab2@25168> listsize:  Ds.w 1
000486E4 <AmiBlitz3.ab2@25172>   ADDQ.w #1,regnum
000486EC <AmiBlitz3.ab2@25173>   MOVE.b #1,nowdeclare
000486F2 <AmiBlitz3.ab2@25174>   CLR.b dimkeep
000486FA <AmiBlitz3.ab2@25175>    CMP.l #"KEEP",-1(a5)
000486FE <AmiBlitz3.ab2@25176>   BNE 'nokeep
00048704 <AmiBlitz3.ab2@25177>   CMP.b #" ",3(a5)
00048708 <AmiBlitz3.ab2@25178>   BNE 'nokeep
0004870A <AmiBlitz3.ab2@25179>   ADDQ.l #3,a5
0004870E <AmiBlitz3.ab2@25182>     CMP.b #" ",(a5)
00048712 <AmiBlitz3.ab2@25183>     BNE '1
00048714 <AmiBlitz3.ab2@25184>    ADDQ #1,a5
00048718 <AmiBlitz3.ab2@25185> BRA '2
0004871E <AmiBlitz3.ab2@25188>   MOVE.l a5,lastsourcepos
00048726 <AmiBlitz3.ab2@25189>   MOVE.b #1,dimkeep
0004872A <AmiBlitz3.ab2@25197>   MOVE.w #$FF9A,D1
00048730 <AmiBlitz3.ab2@25198>   JSR uselib
00048736 <AmiBlitz3.ab2@25201>   CLR.w listadd
0004873A <AmiBlitz3.ab2@25202>   CMP.w #-$7F4D,D0
0004873E <AmiBlitz3.ab2@25203>    BNE.w JL_0_E11E
00048746 <AmiBlitz3.ab2@25204>   MOVE.w #$0008,listadd
0004874A <AmiBlitz3.ab2@25205>   MOVE.w #$FFFA,D1
00048750 <AmiBlitz3.ab2@25206>    JSR uselib
00048756 <AmiBlitz3.ab2@25207>    JSR get1bytemain
0004875C <AmiBlitz3.ab2@25210>   CLR.w nonew
00048762 <AmiBlitz3.ab2@25211>    JSR getparameter
0004876A <AmiBlitz3.ab2@25212>   BTST #$1,flagmask+1
0004876E <AmiBlitz3.ab2@25213>    BEQ.w JUMP_syntaxerr
00048774 <AmiBlitz3.ab2@25214>    JSR JL_0_8E3C
0004877A <AmiBlitz3.ab2@25215>   MOVE.w notshared,D1
0004877E <AmiBlitz3.ab2@25216>    BNE.w JL_0_E198
00048786 <AmiBlitz3.ab2@25217>   MOVE.w $8(A3),temp1
0004878C <AmiBlitz3.ab2@25218>   MOVE.w proceduremode,D2
00048790 <AmiBlitz3.ab2@25219>    BNE.w JL_0_E176
00048796 <AmiBlitz3.ab2@25220>   MOVE.w globalvarpointer,-(A7)
0004879E <AmiBlitz3.ab2@25221>   MOVE.w $4(A3),globalvarpointer
000487A4 <AmiBlitz3.ab2@25222>   ADDQ.w #4,globalvarpointer
000487A8 <AmiBlitz3.ab2@25223>    BSR.w write_dim_code
000487AE <AmiBlitz3.ab2@25224>   MOVE.w (A7)+,globalvarpointer
000487B2 <AmiBlitz3.ab2@25225> BRA.w JL_0_E1BA
000487B8 <AmiBlitz3.ab2@25236>   MOVE.w globalvarpointer,-(A7)
000487BE <AmiBlitz3.ab2@25237>             MOVE.w proceduremode,-(a7)
000487C4 <AmiBlitz3.ab2@25238>             CLR.w proceduremode
000487CC <AmiBlitz3.ab2@25239>   MOVE.w $4(A3),globalvarpointer
000487D2 <AmiBlitz3.ab2@25240>   ADDQ.w #4,globalvarpointer
000487D6 <AmiBlitz3.ab2@25241>    BSR.w write_dim_code
000487DC <AmiBlitz3.ab2@25242>    MOVE.w (a7)+,proceduremode
000487E2 <AmiBlitz3.ab2@25243>   MOVE.w (A7)+,globalvarpointer
000487E6 <AmiBlitz3.ab2@25244> BRA.w JL_0_E1BA
000487EE <AmiBlitz3.ab2@25247>   MOVE.w #$FFFF,temp1
000487F2 <AmiBlitz3.ab2@25248>   MOVE.w listadd(PC),D1
000487F6 <AmiBlitz3.ab2@25249>    BEQ.w JL_0_E1B6
000487FE <AmiBlitz3.ab2@25250>   MOVE.w #$4000,temp1
00048804 <AmiBlitz3.ab2@25251>   BSET #$0,$6(A3)
0004880A <AmiBlitz3.ab2@25254>         TST.w proceduremode
0004880E <AmiBlitz3.ab2@25255>        BNE 'l1
00048814 <AmiBlitz3.ab2@25256>        MOVE.w locvaroff,-(a7)
00048818 <AmiBlitz3.ab2@25259>   BSR.w write_dim_code
0004881E <AmiBlitz3.ab2@25260>         TST.w proceduremode
00048822 <AmiBlitz3.ab2@25261>         BNE JL_0_E1BA
00048828 <AmiBlitz3.ab2@25262>        MOVE.w (A7)+,locvaroff
0004882E <AmiBlitz3.ab2@25265>   JSR get1bytemain
00048832 <AmiBlitz3.ab2@25266>   CMP.w #$2C,D0
00048836 <AmiBlitz3.ab2@25267>    BNE.w JL_0_E1CE
0004883C <AmiBlitz3.ab2@25268>    JSR get1bytemain
00048840 <AmiBlitz3.ab2@25269> BRA.w JL_0_E0FC
00048842 <AmiBlitz3.ab2@25272> RTS
0004884A <AmiBlitz3.ab2@25275>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00048850 <AmiBlitz3.ab2@25276>   MOVE.w beginarr,D1
00048856 <AmiBlitz3.ab2@25277>    JSR writeword
00048858 <AmiBlitz3.ab2@25278>   MOVEQ.l #$00,D1
0004885E <AmiBlitz3.ab2@25279>    JSR writeword
00048860 <AmiBlitz3.ab2@25280>   MOVEQ.l #$04,D1
00048868 <AmiBlitz3.ab2@25281>   BTST #$0,flagmask+1
0004886C <AmiBlitz3.ab2@25282>    BNE.w write_dim_code__pointer
00048870 <AmiBlitz3.ab2@25283>   MOVE.w $8(A2),D1
00048874 <AmiBlitz3.ab2@25286>   ADD.w listadd(PC),D1                                     ;size of one element.
0004887A <AmiBlitz3.ab2@25287>   MOVE.w D1,listsize
00048880 <AmiBlitz3.ab2@25288>    JSR writeword
00048886 <AmiBlitz3.ab2@25289>   CLR.w temp2                                              ;# dim's got
00048888 <AmiBlitz3.ab2@25290>   MOVE.l A3,-(A7)
0004888E <AmiBlitz3.ab2@25293>   ADDQ.w #1,temp2
00048890 <AmiBlitz3.ab2@25294>   MOVEQ.l #$03,D2                                          ;get word
00048896 <AmiBlitz3.ab2@25295>   MOVE.w notshared,-(a7)
0004889C <AmiBlitz3.ab2@25296>    JSR eval
000488A2 <AmiBlitz3.ab2@25297>   MOVE.w (a7)+,notshared
000488A8 <AmiBlitz3.ab2@25298>   TST.b debugmode
000488AC <AmiBlitz3.ab2@25299>    BEQ.w write_dim_code__norerr0
000488B0 <AmiBlitz3.ab2@25300>   MOVE.w #$C30F,D1
000488B4 <AmiBlitz3.ab2@25306>       MOVE.w #$5281,d1
000488BA <AmiBlitz3.ab2@25307>       JSR writeword
000488C0 <AmiBlitz3.ab2@25308>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
000488C6 <AmiBlitz3.ab2@25309>       JSR writelong
000488CC <AmiBlitz3.ab2@25310>   MOVE.w proceduremode,D2
000488D0 <AmiBlitz3.ab2@25311>    BEQ.w write_dim_code__global
000488D6 <AmiBlitz3.ab2@25312>   SUBQ.w #4,locvaroff
000488E0 <AmiBlitz3.ab2@25313>   MOVE.w locvaroff,putarr+2
000488E4 <AmiBlitz3.ab2@25314> BRA.w write_dim_code__doit
000488EA <AmiBlitz3.ab2@25317> JMP syntaxerr
000488F4 <AmiBlitz3.ab2@25320>   MOVE.w globalvarpointer,putarr+2
000488FA <AmiBlitz3.ab2@25321>   ADDQ.w #4,globalvarpointer
00048900 <AmiBlitz3.ab2@25324>   TST.b dimkeep
00048904 <AmiBlitz3.ab2@25325>            BEQ write_dim_code__doit_l1
00048906 <AmiBlitz3.ab2@25326>       MOVEQ #0,d1
0004890C <AmiBlitz3.ab2@25327>       MOVE.w putarr+2,d1
00048912 <AmiBlitz3.ab2@25328>       OR.l  #$222d0000,d1
00048918 <AmiBlitz3.ab2@25329>       MOVE.w proceduremode,D2
0004891C <AmiBlitz3.ab2@25330>       BEQ write_dim_code__doit_l2
00048922 <AmiBlitz3.ab2@25331>       TST.w notshared
00048926 <AmiBlitz3.ab2@25332>       BEQ write_dim_code__doit_l2
0004892C <AmiBlitz3.ab2@25333>       SUB.l #$00010000,d1
00048932 <AmiBlitz3.ab2@25336>   JSR writelong
00048938 <AmiBlitz3.ab2@25339>   MOVE.l putarr,D1
0004893E <AmiBlitz3.ab2@25340>       TST.w notshared
00048942 <AmiBlitz3.ab2@25341>       BNE write_dim_code__doit_l1a
00048948 <AmiBlitz3.ab2@25342>       JSR writelong
0004894C <AmiBlitz3.ab2@25343> BRA write_dim_code__doit_l4
00048952 <AmiBlitz3.ab2@25346>   JSR pokela5d
00048956 <AmiBlitz3.ab2@25349>   CMP.w #$2C,D0
0004895A <AmiBlitz3.ab2@25350>    BEQ.w write_dim_code__loop
0004895E <AmiBlitz3.ab2@25351>   CMP.w #$29,D0
00048962 <AmiBlitz3.ab2@25352>    BNE.w JUMP_syntaxerr
00048964 <AmiBlitz3.ab2@25353>   MOVEA.l (A7)+,A3
0004896A <AmiBlitz3.ab2@25354>   MOVE.w temp1,D1
0004896E <AmiBlitz3.ab2@25355>    BMI.w write_dim_code__nocare
00048972 <AmiBlitz3.ab2@25359>   BTST #$E,D1
00048976 <AmiBlitz3.ab2@25360>    BEQ.w write_dim_code__notl
0004897E <AmiBlitz3.ab2@25361>   CMPI.w #$1,temp2
00048982 <AmiBlitz3.ab2@25362>    BNE.w JUMP_redimerr
00048986 <AmiBlitz3.ab2@25363> BRA.w write_dim_code__nocare
0004898C <AmiBlitz3.ab2@25366> JMP redimerr
00048992 <AmiBlitz3.ab2@25369>   CMP.w temp2,D1
00048996 <AmiBlitz3.ab2@25370>    BNE.w JUMP_redimerr                                      ;range too long
0004899C <AmiBlitz3.ab2@25373>   LEA globalvarpointer,A0
000489A2 <AmiBlitz3.ab2@25374>   MOVE.w proceduremode,D1
000489A6 <AmiBlitz3.ab2@25375>   BEQ.w write_dim_code__gskip
000489AC <AmiBlitz3.ab2@25376>   LEA locvaroff,A0
000489B2 <AmiBlitz3.ab2@25379>   MOVE.W  extraword,(A0)
000489B6 <AmiBlitz3.ab2@25380>   BRA.W   write_dim_code__care
000489BE <AmiBlitz3.ab2@25383>   MOVE.w temp2,$8(A3)                                      ;set # dim's
000489C4 <AmiBlitz3.ab2@25386>   LEA doarr,A0
000489CA <AmiBlitz3.ab2@25387>   MOVE.w $4(A3),$2(A0)
000489D2 <AmiBlitz3.ab2@25388>   MOVE.w putarr+2,$6(A0)
000489D4 <AmiBlitz3.ab2@25389>   MOVE.l (A0)+,D1
000489DA <AmiBlitz3.ab2@25390>    JSR writelong
000489DC <AmiBlitz3.ab2@25391>   MOVE.l (A0),D1
000489E2 <AmiBlitz3.ab2@25392>    JSR writelong
000489E8 <AmiBlitz3.ab2@25393>    TST.b dimkeep
000489EC <AmiBlitz3.ab2@25394>   BNE write_dim_code__care_l3
000489F0 <AmiBlitz3.ab2@25397>   MOVE.w #$C400,D1
000489F4 <AmiBlitz3.ab2@25398> BRA write_dim_code__care_l2
000489F8 <AmiBlitz3.ab2@25401>   MOVE.w #$C405,d1
000489FE <AmiBlitz3.ab2@25404>   MOVE.w proceduremode,D2
00048A02 <AmiBlitz3.ab2@25405>    BEQ.w write_dim_code__isg
00048A08 <AmiBlitz3.ab2@25406>    TST.w notshared
00048A0C <AmiBlitz3.ab2@25407>    BEQ write_dim_code__isg
00048A0E <AmiBlitz3.ab2@25408>   ADDQ.w #1,D1
00048A12 <AmiBlitz3.ab2@25411>   MOVE.w listadd(PC),D2
00048A16 <AmiBlitz3.ab2@25412>    BEQ.w write_dim_code__isrg
00048A18 <AmiBlitz3.ab2@25413>   MOVE.w D1,-(A7)
00048A1C <AmiBlitz3.ab2@25414>   MOVE.w setles(PC),D1
00048A22 <AmiBlitz3.ab2@25415>    JSR writeword
00048A26 <AmiBlitz3.ab2@25416>   MOVE.w listsize(PC),D1
00048A2C <AmiBlitz3.ab2@25417>    JSR writeword
00048A2E <AmiBlitz3.ab2@25418>   MOVE.w (A7)+,D1
00048A30 <AmiBlitz3.ab2@25419>   ADDQ.w #3,D1
00048A34 <AmiBlitz3.ab2@25422> BRA.w Atokejsr
00048A3A <AmiBlitz3.ab2@25429>     MOVE.l #$f23c4400,d1
00048A40 <AmiBlitz3.ab2@25431>   MOVE.w regnum,d0
00048A42 <AmiBlitz3.ab2@25432>   ASL.w #7,d0
00048A44 <AmiBlitz3.ab2@25433>   OR.w d0,d1
00048A4A <AmiBlitz3.ab2@25434>   JSR writelong
00048A50 <AmiBlitz3.ab2@25440>     MOVE.l #$40490fd9,d1
00048A56 <AmiBlitz3.ab2@25442>   JSR writelong
00048A5C <AmiBlitz3.ab2@25443> JMP get1bytemain
00048A60 <AmiBlitz3.ab2@25447> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00048A64 <AmiBlitz3.ab2@25454> vbr:                Ds.l 1
00048A66 <AmiBlitz3.ab2@25455> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00048A6C <AmiBlitz3.ab2@25457> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00048A70 <AmiBlitz3.ab2@25461> constpcat:          Ds.l 1
00048A74 <AmiBlitz3.ab2@25462> constlibat:         Ds.l 1
00048A78 <AmiBlitz3.ab2@25463> constmaxpc:         Dc.l $400
00048A7C <AmiBlitz3.ab2@25465> stacksize:          Dc.l 32768                           ;stackfuck org source
00048A80 <AmiBlitz3.ab2@25466> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00048A84 <AmiBlitz3.ab2@25467> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00048A88 <AmiBlitz3.ab2@25468> lastrestype:        Dc.l newtype_string
00048A8A <AmiBlitz3.ab2@25469> rescnt:             Ds.w 1                               ;# resident
00048A8C <AmiBlitz3.ab2@25470> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00048A90 <AmiBlitz3.ab2@25471> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00048A92 <AmiBlitz3.ab2@25472> linedone:           Ds.w 1
00048AA8 <AmiBlitz3.ab2@25473> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00048AAC <AmiBlitz3.ab2@25482>   Dc.l 0                                        ; bytetobyte
00048AB0 <AmiBlitz3.ab2@25483>   Dc.l convert_byte_to_word                     ; bytetoword
00048AB4 <AmiBlitz3.ab2@25484>   Dc.l convert_byte_to_long                     ; bytetolong
00048AB8 <AmiBlitz3.ab2@25485>   Dc.l convert_byte_to_quick                    ; bytetoquick
00048ABC <AmiBlitz3.ab2@25486>   Dc.l convert_byte_to_float                    ; bytetofloat
00048AC0 <AmiBlitz3.ab2@25487>   Dc.l convert_byte_to_long                     ; bytetolong
00048AC4 <AmiBlitz3.ab2@25488>   Dc.l error_convert_types                      ; noconerr
00048AC8 <AmiBlitz3.ab2@25491>   Dc.l convert_word_to_byte                     ; wordtobyte
00048ACC <AmiBlitz3.ab2@25492>   Dc.l 0                                        ; wordtoword
00048AD0 <AmiBlitz3.ab2@25493>   Dc.l convert_word_to_long                     ; wordtolong
00048AD4 <AmiBlitz3.ab2@25494>   Dc.l convert_word_to_quick                    ; wordtoquick
00048AD8 <AmiBlitz3.ab2@25495>   Dc.l convert_word_to_float                    ; wordtofloat
00048ADC <AmiBlitz3.ab2@25496>   Dc.l convert_word_to_long                     ; wordtolong
00048AE0 <AmiBlitz3.ab2@25497>   Dc.l error_convert_types                      ; noconerr
00048AE4 <AmiBlitz3.ab2@25500>   Dc.l convert_long_to_byte                     ; longtobyte
00048AE8 <AmiBlitz3.ab2@25501>   Dc.l convert_long_to_word                     ; longtoword
00048AEC <AmiBlitz3.ab2@25502>   Dc.l 0                                        ; longtolong
00048AF0 <AmiBlitz3.ab2@25503>   Dc.l convert_long_to_quick                    ; longtoquick
00048AF4 <AmiBlitz3.ab2@25504>   Dc.l convert_long_to_float                    ; longtofloat
00048AF8 <AmiBlitz3.ab2@25505>   Dc.l 0                                        ; longtolong
00048AFC <AmiBlitz3.ab2@25506>   Dc.l error_convert_types                      ; noconerr
00048B00 <AmiBlitz3.ab2@25509>   Dc.l convert_quick_to_byte                    ; quicktobyte
00048B04 <AmiBlitz3.ab2@25510>   Dc.l convert_quick_to_word                    ; quicktoword
00048B08 <AmiBlitz3.ab2@25511>   Dc.l convert_quick_to_long                    ; quicktolong
00048B0C <AmiBlitz3.ab2@25512>   Dc.l 0                                        ; quicktoquick
00048B10 <AmiBlitz3.ab2@25513>   Dc.l convert_quick_to_float                   ; quicktofloat
00048B14 <AmiBlitz3.ab2@25514>   Dc.l convert_quick_to_long                    ; quicktolong
00048B18 <AmiBlitz3.ab2@25515>   Dc.l error_convert_types                      ; noconerr
00048B1C <AmiBlitz3.ab2@25518>   Dc.l convert_float_to_byte                    ; floattobyte
00048B20 <AmiBlitz3.ab2@25519>   Dc.l convert_float_to_word                    ; floattoword
00048B24 <AmiBlitz3.ab2@25520>   Dc.l convert_float_to_long                    ; floattolong
00048B28 <AmiBlitz3.ab2@25521>   Dc.l convert_float_to_quick                   ; floattoquick
00048B2C <AmiBlitz3.ab2@25522>   Dc.l 0                                        ; floattofloat
00048B30 <AmiBlitz3.ab2@25523>   Dc.l convert_float_to_long                    ; floattolong
00048B34 <AmiBlitz3.ab2@25524>   Dc.l error_convert_types                      ; noconerr
00048B38 <AmiBlitz3.ab2@25527>   Dc.l convert_long_to_byte                     ; longtobyte
00048B3C <AmiBlitz3.ab2@25528>   Dc.l convert_long_to_word                     ; longtoword
00048B40 <AmiBlitz3.ab2@25529>   Dc.l 0                                        ; longtolong
00048B44 <AmiBlitz3.ab2@25530>   Dc.l convert_long_to_quick                    ; longtoquick
00048B48 <AmiBlitz3.ab2@25531>   Dc.l convert_long_to_float                    ; longtofloat
00048B4C <AmiBlitz3.ab2@25532>   Dc.l 0                                        ; longtolong
00048B50 <AmiBlitz3.ab2@25533>   Dc.l error_convert_types                      ; noconerr
00048B54 <AmiBlitz3.ab2@25536>   Dc.l error_convert_types                      ; noconerr
00048B58 <AmiBlitz3.ab2@25537>   Dc.l error_convert_types                      ; noconerr
00048B5C <AmiBlitz3.ab2@25538>   Dc.l string_to_long                           ; stringtolong
00048B60 <AmiBlitz3.ab2@25539>   Dc.l error_convert_types                      ; noconerr
00048B64 <AmiBlitz3.ab2@25540>   Dc.l error_convert_types                      ; noconerr
00048B68 <AmiBlitz3.ab2@25541>   Dc.l string_to_long                           ; stringtolong
00048B6C <AmiBlitz3.ab2@25542>   Ds.l 1
00048B6E <AmiBlitz3.ab2@25548>   Dc.b $00,$2B                                  ;+ ; add
00048B72 <AmiBlitz3.ab2@25549>   Dc.l do_plus_byte                             ;doplusb
00048B76 <AmiBlitz3.ab2@25550>   Dc.l do_plus_word                             ;doplusw
00048B7A <AmiBlitz3.ab2@25551>   Dc.l do_plus_long                             ;doplusl
00048B7E <AmiBlitz3.ab2@25552>   Dc.l do_plus_long                             ;doplusl
00048B82 <AmiBlitz3.ab2@25553>   Dc.l do_plus_float                            ;doplusf
00048B86 <AmiBlitz3.ab2@25554>   Ds.l 1
00048B8A <AmiBlitz3.ab2@25555>   Dc.l add_strings                              ;addstrings
00048B8C <AmiBlitz3.ab2@25556>   Dc.b $0B,$B8
00048B8E <AmiBlitz3.ab2@25558>   Dc.b $00,$2D                                  ;- ; sub
00048B92 <AmiBlitz3.ab2@25559>   Dc.l do_minus_byte                            ;dominusb
00048B96 <AmiBlitz3.ab2@25560>   Dc.l do_minus_word                            ;dominusw
00048B9A <AmiBlitz3.ab2@25561>   Dc.l do_minus_long                            ;dominusl
00048B9E <AmiBlitz3.ab2@25562>   Dc.l do_minus_long                            ;dominusl
00048BA2 <AmiBlitz3.ab2@25563>   Dc.l do_minus_float                           ;dominusf
00048BAA <AmiBlitz3.ab2@25564>   Ds.l 2
00048BAC <AmiBlitz3.ab2@25565>   Dc.b $0B,$B8
00048BAE <AmiBlitz3.ab2@25567>   Dc.b $00,$2A                                  ;* ; mul
00048BB2 <AmiBlitz3.ab2@25568>   Dc.l do_times_byte                            ;dotimesb
00048BB6 <AmiBlitz3.ab2@25569>   Dc.l do_times_word                            ;dotimesw
00048BBA <AmiBlitz3.ab2@25570>   Dc.l do_times_long                            ;dotimesl
00048BBE <AmiBlitz3.ab2@25571>   Dc.l do_times_quick                           ;dotimesq
00048BC2 <AmiBlitz3.ab2@25572>   Dc.l do_times_float                           ;dotimesf
00048BCA <AmiBlitz3.ab2@25573>   Ds.l 2
00048BCC <AmiBlitz3.ab2@25574>   Dc.b $0F,$A0
00048BCE <AmiBlitz3.ab2@25576>   Dc.b $00,$2F                                  ;/ ; div
00048BD2 <AmiBlitz3.ab2@25577>   Dc.l do_Div_byte                              ;dodivb
00048BD6 <AmiBlitz3.ab2@25578>   Dc.l do_Div_word                              ;dodivb
00048BDA <AmiBlitz3.ab2@25579>   Dc.l do_Div_long                              ;dodivl
00048BDE <AmiBlitz3.ab2@25580>   Dc.l do_Div_quick                             ;dodivq
00048BE2 <AmiBlitz3.ab2@25581>   Dc.l do_Div_float                             ;dodivf
00048BEA <AmiBlitz3.ab2@25582>   Ds.l 2
00048BEC <AmiBlitz3.ab2@25583>   Dc.b $0F,$A0
00048BEE <AmiBlitz3.ab2@25585>   Dc.b $00,$26                                  ;& ; & int
00048BF2 <AmiBlitz3.ab2@25586>   Dc.l do_AND_byte                              ;doandb
00048BF6 <AmiBlitz3.ab2@25587>   Dc.l do_AND_word                              ;doandw
00048BFA <AmiBlitz3.ab2@25588>   Dc.l do_AND_long                              ;doandl
00048BFE <AmiBlitz3.ab2@25589>   Dc.l do_AND_long                              ;doandl
00048C0A <AmiBlitz3.ab2@25590>   Ds.l 3
00048C0C <AmiBlitz3.ab2@25591>   Dc.b $13,$88
00048C0E <AmiBlitz3.ab2@25593>   Dc.b $00,$7C                                  ;| ;or int ;
00048C12 <AmiBlitz3.ab2@25594>   Dc.l do_OR_byte                               ;doorb
00048C16 <AmiBlitz3.ab2@25595>   Dc.l do_OR_word                               ;doorw
00048C1A <AmiBlitz3.ab2@25596>   Dc.l do_OR_long                               ;doorl
00048C1E <AmiBlitz3.ab2@25597>   Dc.l do_OR_long                               ;doorl
00048C2A <AmiBlitz3.ab2@25598>   Ds.l 3
00048C2C <AmiBlitz3.ab2@25599>   Dc.b $13,$88
00048C2E <AmiBlitz3.ab2@25601>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00048C32 <AmiBlitz3.ab2@25602>   Dc.l do_AND_byte                              ;doandb
00048C36 <AmiBlitz3.ab2@25603>   Dc.l do_AND_word                              ;doandw
00048C3A <AmiBlitz3.ab2@25604>   Dc.l do_AND_long                              ;doandl
00048C3E <AmiBlitz3.ab2@25605>   Dc.l do_AND_long                              ;doandl
00048C4A <AmiBlitz3.ab2@25606>   Ds.l 3
00048C4C <AmiBlitz3.ab2@25607>   Dc.b $03,$E8
00048C4E <AmiBlitz3.ab2@25609>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00048C52 <AmiBlitz3.ab2@25610>   Dc.l do_OR_byte                               ;doorb
00048C56 <AmiBlitz3.ab2@25611>   Dc.l do_OR_word                               ;doorw
00048C5A <AmiBlitz3.ab2@25612>   Dc.l do_OR_long                               ;doorl
00048C5E <AmiBlitz3.ab2@25613>   Dc.l do_OR_long                               ;doorl
00048C6A <AmiBlitz3.ab2@25614>   Ds.l 3
00048C6C <AmiBlitz3.ab2@25615>   Dc.b $03,$E8
00048C6E <AmiBlitz3.ab2@25617>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00048C72 <AmiBlitz3.ab2@25618>   Dc.l do_EOR_byte                              ;doeorb
00048C76 <AmiBlitz3.ab2@25619>   Dc.l do_EOR_word                              ;doeorw
00048C7A <AmiBlitz3.ab2@25620>   Dc.l do_EOR_long                              ;doeorl
00048C7E <AmiBlitz3.ab2@25621>   Dc.l do_EOR_long                              ;doeorl
00048C8A <AmiBlitz3.ab2@25622>   Ds.l 3
00048C8C <AmiBlitz3.ab2@25623>   Dc.b $03,$E8
00048C8E <AmiBlitz3.ab2@25625>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00048C92 <AmiBlitz3.ab2@25626>   Dc.l do_LSL                                   ;dolslb
00048C96 <AmiBlitz3.ab2@25627>   Dc.l do_LSL                                   ;dolslw
00048C9A <AmiBlitz3.ab2@25628>   Dc.l do_LSL                                   ;dolsll
00048C9E <AmiBlitz3.ab2@25629>   Dc.l do_LSL                                   ;dolsll
00048CAA <AmiBlitz3.ab2@25630>   Ds.l 3
00048CAC <AmiBlitz3.ab2@25631>   Dc.b $17,$70
00048CAE <AmiBlitz3.ab2@25633>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00048CB2 <AmiBlitz3.ab2@25634>   Dc.l do_LSL                                   ;dolslb
00048CB6 <AmiBlitz3.ab2@25635>   Dc.l do_LSL                                   ;dolslw
00048CBA <AmiBlitz3.ab2@25636>   Dc.l do_LSL                                   ;dolsll
00048CBE <AmiBlitz3.ab2@25637>   Dc.l do_LSL                                   ;dolsll
00048CCA <AmiBlitz3.ab2@25638>   Ds.l 3
00048CCC <AmiBlitz3.ab2@25639>   Dc.b $17,$70
00048CCE <AmiBlitz3.ab2@25641>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00048CD2 <AmiBlitz3.ab2@25642>   Dc.l do_LSR                                   ;dolsrb
00048CD6 <AmiBlitz3.ab2@25643>   Dc.l do_LSR                                   ;dolsrw
00048CDA <AmiBlitz3.ab2@25644>   Dc.l do_LSR                                   ;dolsrl
00048CDE <AmiBlitz3.ab2@25645>   Dc.l do_LSR                                   ;dolsrl
00048CEA <AmiBlitz3.ab2@25646>   Ds.l 3
00048CEC <AmiBlitz3.ab2@25647>   Dc.b $17,$70
00048CEE <AmiBlitz3.ab2@25649>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00048CF2 <AmiBlitz3.ab2@25650>   Dc.l do_ASR                                   ;doasrb
00048CF6 <AmiBlitz3.ab2@25651>   Dc.l do_ASR                                   ;doasrw
00048CFA <AmiBlitz3.ab2@25652>   Dc.l do_ASR                                   ;doasrl
00048CFE <AmiBlitz3.ab2@25653>   Dc.l do_ASR                                   ;doasrl
00048D0A <AmiBlitz3.ab2@25654>   Ds.l 3
00048D0C <AmiBlitz3.ab2@25655>   Dc.b $17,$70
00048D0E <AmiBlitz3.ab2@25657>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00048D12 <AmiBlitz3.ab2@25658>   Dc.l do_mod_byte                              ;domodb
00048D16 <AmiBlitz3.ab2@25659>   Dc.l do_mod_word                              ;domodw
00048D1A <AmiBlitz3.ab2@25660>   Dc.l do_mod_long                              ;domodl
00048D1E <AmiBlitz3.ab2@25661>   Dc.l do_mod_quick                             ;domodq
00048D22 <AmiBlitz3.ab2@25662>   Dc.l do_mod_float                             ;domodf
00048D2A <AmiBlitz3.ab2@25663>   Ds.l 2
00048D2C <AmiBlitz3.ab2@25664>   Dc.b $13,$88
00048D2E <AmiBlitz3.ab2@25667>   Dc.b $00,$5E                                  ;^
00048D32 <AmiBlitz3.ab2@25668>   Dc.l do_pow                                   ;dopow
00048D36 <AmiBlitz3.ab2@25669>   Dc.l do_pow                                   ;dopow
00048D3A <AmiBlitz3.ab2@25670>   Dc.l do_pow                                   ;dopow
00048D3E <AmiBlitz3.ab2@25671>   Dc.l do_pow                                   ;dopow
00048D42 <AmiBlitz3.ab2@25672>   Dc.l do_pow                                   ;dopow
00048D4A <AmiBlitz3.ab2@25673>   Ds.l 2
00048D4C <AmiBlitz3.ab2@25674>   Dc.b $1B,$58                                  ;7000
00048D4E <AmiBlitz3.ab2@25677>   Dc.b $00,$3D                                  ;=
00048D52 <AmiBlitz3.ab2@25678>   Dc.l do_equal_byte                            ;doeqb
00048D56 <AmiBlitz3.ab2@25679>   Dc.l do_equal_word                            ;doeqw
00048D5A <AmiBlitz3.ab2@25680>   Dc.l do_equal_long                            ;doeql
00048D5E <AmiBlitz3.ab2@25681>   Dc.l do_equal_long                            ;doeql
00048D62 <AmiBlitz3.ab2@25682>   Dc.l do_equal_float                           ;doeqf
00048D66 <AmiBlitz3.ab2@25683>   Dc.l do_equal_long                            ;doeql
00048D6A <AmiBlitz3.ab2@25684>   Dc.l do_equal_string                          ;doeqs
00048D6C <AmiBlitz3.ab2@25685>   Dc.b $07,$D0                                  ;2000
00048D6E <AmiBlitz3.ab2@25688>   Dc.b $3C,$3E                                  ;<>
00048D72 <AmiBlitz3.ab2@25689>   Dc.l do_not_equal_byte                        ;doneb
00048D76 <AmiBlitz3.ab2@25690>   Dc.l do_not_equal_word                        ;donew
00048D7A <AmiBlitz3.ab2@25691>   Dc.l do_not_equal_long                        ;donel
00048D7E <AmiBlitz3.ab2@25692>   Dc.l do_not_equal_long                        ;donel
00048D82 <AmiBlitz3.ab2@25693>   Dc.l do_not_equal_float                       ;donef
00048D86 <AmiBlitz3.ab2@25694>   Dc.l do_not_equal_long                        ;donel
00048D8A <AmiBlitz3.ab2@25695>   Dc.l do_not_equal_string                      ;dones
00048D8C <AmiBlitz3.ab2@25696>   Dc.b $07,$D0                                  ;2000
00048D8E <AmiBlitz3.ab2@25699>   Dc.b $00,$3C                                  ;<
00048D92 <AmiBlitz3.ab2@25700>   Dc.l do_littler_byte                          ;doltb
00048D96 <AmiBlitz3.ab2@25701>   Dc.l do_littler_word                          ;doltw
00048D9A <AmiBlitz3.ab2@25702>   Dc.l do_littler_long                          ;doltl
00048D9E <AmiBlitz3.ab2@25703>   Dc.l do_littler_long                          ;doltl
00048DA2 <AmiBlitz3.ab2@25704>   Dc.l do_littler_float                         ;doltf
00048DA6 <AmiBlitz3.ab2@25705>   Dc.l do_littler_long                          ;doltl
00048DAA <AmiBlitz3.ab2@25706>   Dc.l do_littler_string                        ;dolts
00048DAC <AmiBlitz3.ab2@25707>   Dc.b $07,$D0                                  ;2000
00048DAE <AmiBlitz3.ab2@25710>   Dc.b $3C,$3D                                  ;<=
00048DB2 <AmiBlitz3.ab2@25711>   Dc.l do_littler_equal_byte                    ;doleb
00048DB6 <AmiBlitz3.ab2@25712>   Dc.l do_littler_equal_word                    ;doleb
00048DBA <AmiBlitz3.ab2@25713>   Dc.l do_littler_equal_long                    ;dolel
00048DBE <AmiBlitz3.ab2@25714>   Dc.l do_littler_equal_long                    ;dolel
00048DC2 <AmiBlitz3.ab2@25715>   Dc.l do_littler_equal_float                   ;dolef
00048DC6 <AmiBlitz3.ab2@25716>   Dc.l do_littler_equal_long                    ;dolel
00048DCA <AmiBlitz3.ab2@25717>   Dc.l do_littler_equal_string                  ;doles
00048DCC <AmiBlitz3.ab2@25718>   Dc.b $07,$D0                                  ;2000
00048DCE <AmiBlitz3.ab2@25721>   Dc.b $00,$3E                                  ;>
00048DD2 <AmiBlitz3.ab2@25722>   Dc.l do_greater_byte                          ;dogtb
00048DD6 <AmiBlitz3.ab2@25723>   Dc.l do_greater_word                          ;dogtw
00048DDA <AmiBlitz3.ab2@25724>   Dc.l do_greater_long                          ;dogtl
00048DDE <AmiBlitz3.ab2@25725>   Dc.l do_greater_long                          ;dogtl
00048DE2 <AmiBlitz3.ab2@25726>   Dc.l do_greater_float                         ;dogtf
00048DE6 <AmiBlitz3.ab2@25727>   Dc.l do_greater_long                          ;dogtl
00048DEA <AmiBlitz3.ab2@25728>   Dc.l do_greater_string                        ;dogts
00048DEC <AmiBlitz3.ab2@25729>   Dc.b $07,$D0                                  ;2000
00048DEE <AmiBlitz3.ab2@25732>   Dc.b $3E,$3D                                  ;>=
00048DF2 <AmiBlitz3.ab2@25733>   Dc.l do_greater_equal_byte                    ;dogeb
00048DF6 <AmiBlitz3.ab2@25734>   Dc.l do_greater_equal_word                    ;dogew
00048DFA <AmiBlitz3.ab2@25735>   Dc.l do_greater_equal_long                    ;dogel
00048DFE <AmiBlitz3.ab2@25736>   Dc.l do_greater_equal_long                    ;dogel
00048E02 <AmiBlitz3.ab2@25737>   Dc.l do_greater_equal_float                   ;dogef
00048E06 <AmiBlitz3.ab2@25738>   Dc.l do_greater_equal_long                    ;dogel
00048E0A <AmiBlitz3.ab2@25739>   Dc.l do_greater_equal_string                  ;doges
00048E0C <AmiBlitz3.ab2@25740>   Dc.b $07,$D0                                  ;2000
00048E0E <AmiBlitz3.ab2@25742>   Dc.b $80,$CD                                  ;$8000+26+tnum
00048E12 <AmiBlitz3.ab2@25743>   Dc.l _BitTst
00048E16 <AmiBlitz3.ab2@25744>   Dc.l _BitTst
00048E1A <AmiBlitz3.ab2@25745>   Dc.l _BitTst
00048E1E <AmiBlitz3.ab2@25746>   Dc.l _BitTst
00048E2A <AmiBlitz3.ab2@25747>   Ds.l 3
00048E2C <AmiBlitz3.ab2@25748>   Dc.b $1F,$40                                  ;8000
00048E2E <AmiBlitz3.ab2@25750>   Dc.b $80,$CE                                  ;$8000+27+tnum
00048E32 <AmiBlitz3.ab2@25751>   Dc.l _BitSet
00048E36 <AmiBlitz3.ab2@25752>   Dc.l _BitSet
00048E3A <AmiBlitz3.ab2@25753>   Dc.l _BitSet
00048E3E <AmiBlitz3.ab2@25754>   Dc.l _BitSet
00048E4A <AmiBlitz3.ab2@25755>   Ds.l 3
00048E4C <AmiBlitz3.ab2@25756>   Dc.b $1F,$40                                  ;8000
00048E4E <AmiBlitz3.ab2@25758>   Dc.b $80,$CF                                  ;$8000+28+tnum
00048E52 <AmiBlitz3.ab2@25759>   Dc.l _BitClr
00048E56 <AmiBlitz3.ab2@25760>   Dc.l _BitClr
00048E5A <AmiBlitz3.ab2@25761>   Dc.l _BitClr
00048E5E <AmiBlitz3.ab2@25762>   Dc.l _BitClr
00048E6A <AmiBlitz3.ab2@25763>   Ds.l 3
00048E6C <AmiBlitz3.ab2@25764>   Dc.b $1F,$40                                  ;8000
00048E6E <AmiBlitz3.ab2@25766>   Dc.b $80,$D0                                  ;$8000+29+tnum
00048E72 <AmiBlitz3.ab2@25767>   Dc.l _BitChg
00048E76 <AmiBlitz3.ab2@25768>   Dc.l _BitChg
00048E7A <AmiBlitz3.ab2@25769>   Dc.l _BitChg
00048E7E <AmiBlitz3.ab2@25770>   Dc.l _BitChg
00048E8A <AmiBlitz3.ab2@25771>   Ds.l 3
00048E8C <AmiBlitz3.ab2@25772>   Dc.b $1F,$40                                  ;8000
00048E8E <AmiBlitz3.ab2@25774>   Dc.b $00,$00
00048E92 <AmiBlitz3.ab2@25779> modetable:   Dc.l typemode
00048E96 <AmiBlitz3.ab2@25782> newtypebase: Dc.l newtype_byte
00048E9E <AmiBlitz3.ab2@25785>   Dc.l newtype_word,$01                                    
00048EA0 <AmiBlitz3.ab2@25786>   Dc.w $0001
00048EA4 <AmiBlitz3.ab2@25787>   Dc.b 13,"b",0,0
00048EAC <AmiBlitz3.ab2@25790>   Dc.l newtype_long,$02
00048EAE <AmiBlitz3.ab2@25791>   Dc.w $0002
00048EB2 <AmiBlitz3.ab2@25792>   Dc.b 13,"w",0,0
00048EBA <AmiBlitz3.ab2@25795>   Dc.l newtype_quick,$03                                   
00048EBC <AmiBlitz3.ab2@25796>   Dc.w $0004
00048EC0 <AmiBlitz3.ab2@25797>   Dc.b 13,"l",0,0
00048EC8 <AmiBlitz3.ab2@25800>   Dc.l newtype_float,$04                                   
00048ECA <AmiBlitz3.ab2@25801>   Dc.w $0004
00048ECE <AmiBlitz3.ab2@25802>   Dc.b 13,"q",0,0
00048ED6 <AmiBlitz3.ab2@25806>   Dc.l newtype_double,$05                                  ;make problems on old residents
00048ED8 <AmiBlitz3.ab2@25807>   Dc.w $0004
00048EDC <AmiBlitz3.ab2@25808>   Dc.b 13,"f",0,0
00048EE4 <AmiBlitz3.ab2@25811>   Dc.l newtype_double,$06
00048EE6 <AmiBlitz3.ab2@25812>   Dc.w $0004
00048EEA <AmiBlitz3.ab2@25813>   Dc.b 13,"a",0,0
00048EF2 <AmiBlitz3.ab2@25816>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00048EF4 <AmiBlitz3.ab2@25817>   Dc.w $0008
00048EF8 <AmiBlitz3.ab2@25818>   Dc.b 13,"d",0,0
00048F00 <AmiBlitz3.ab2@25822>   Dc.l $0000000,$07                                        ;stringtype
00048F02 <AmiBlitz3.ab2@25823>   Dc.w $0004
00048F06 <AmiBlitz3.ab2@25824>   Dc.b 13,"s",0,0
00048F0E <AmiBlitz3.ab2@25827>   Dc.l $00,$00
00048F10 <AmiBlitz3.ab2@25828>   Dc.w $0000
00048F14 <AmiBlitz3.ab2@25829>   Dc.b $01,$00,$00,$00
00048F74 <AmiBlitz3.ab2@25832> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00048F76 <AmiBlitz3.ab2@25836> dirmode:              Ds.w 1                               ;shows if directmode is on
00048F7A <AmiBlitz3.ab2@25838>                       Ds.l 1                               ;int org source ;intuition!
00048F7C <AmiBlitz3.ab2@25839> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00048F80 <AmiBlitz3.ab2@25840> maxsat:               Ds.l 1                               ;data1 info pos
00048F82 <AmiBlitz3.ab2@25841> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00048F84 <AmiBlitz3.ab2@25843> maxsused:             Ds.w 1                               ;maximums used in prog
00048F86 <AmiBlitz3.ab2@25847> dark:                 Ds.w 1                               ;dark compile?
00048F88 <AmiBlitz3.ab2@25848> qlab:                 Ds.w 1                               ;quick lab allocate
00048F8C <AmiBlitz3.ab2@25849> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00048F8E <AmiBlitz3.ab2@25854> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00048F90 <AmiBlitz3.ab2@25855> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00048F94 <AmiBlitz3.ab2@25856> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00048F98 <AmiBlitz3.ab2@25858> letstart:             Ds.l 1
00048F9A <AmiBlitz3.ab2@25859> dontwrite:            Ds.w 1                               ;nomemleft org source
0004901A <AmiBlitz3.ab2@25860> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
0004901E <AmiBlitz3.ab2@25862> locdatast:            Ds.l 1
00049022 <AmiBlitz3.ab2@25863> firstpend:            Ds.l 1
00049026 <AmiBlitz3.ab2@25867> data2at:              Ds.l 1
0004902A <AmiBlitz3.ab2@25868> data2:                Ds.l 1
0004902E <AmiBlitz3.ab2@25869> data1start:           Ds.l 1                               ;data1at org source
00049032 <AmiBlitz3.ab2@25870> data1:                Ds.l 1                               ;pc for initialized data!
00049036 <AmiBlitz3.ab2@25871> destbufferstart:      Ds.l 1                               ;pcat org source
0004903A <AmiBlitz3.ab2@25875> destbufferend:        Ds.l 1                               ;libat org source
0004903E <AmiBlitz3.ab2@25876> libend:               Ds.l 1                               ;lib org source
00049042 <AmiBlitz3.ab2@25877> allat:                Ds.l 1                               ;highest allocmemd location for code
0004904C <AmiBlitz3.ab2@25878> dummyasm:             Dc.w 0,0,0,0,0
00049050 <AmiBlitz3.ab2@25879>                       Dc.l 0
00049052 <AmiBlitz3.ab2@25880>                       Dc.w 0
00049056 <AmiBlitz3.ab2@25884> buff1:                Ds.l 1                               ;buffer for text get
0004905A <AmiBlitz3.ab2@25885> buff2:                Ds.l 1                               ;ditto for dest
0004905C <AmiBlitz3.ab2@25886> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
0004905E <AmiBlitz3.ab2@25887> asmtype:              Ds.w 1                               ;0=contains no prog reference
00049060 <AmiBlitz3.ab2@25888> extraword:            Ds.w 1                               ;the extension word for assembler
00049062 <AmiBlitz3.ab2@25889> extraword2:           Ds.w 1                               ;ditto
00049064 <AmiBlitz3.ab2@25890> asmsize:              Ds.w 1
00049068 <AmiBlitz3.ab2@25891> asmbuff:              Ds.l 1
0004906A <AmiBlitz3.ab2@25892> asmlen:               Ds.w 1                               ;first (src) text len
0004906C <AmiBlitz3.ab2@25893> asmlen2:              Ds.w 1                               ;second (dest)
00049070 <AmiBlitz3.ab2@25894> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00049072 <AmiBlitz3.ab2@25897> macnum:               Ds.w 1
00049076 <AmiBlitz3.ab2@25899>                       Dc.l 0                               ;address of next 0 in include fil
0004907A <AmiBlitz3.ab2@25900> titleat:              Ds.l 1                               ;5 longs for compile streaks
00049084 <AmiBlitz3.ab2@25901> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00049086 <AmiBlitz3.ab2@25902> connest:              Ds.w 1                               ;conditional nest level
0004908A <AmiBlitz3.ab2@25903> firstconst:           Ds.l 1                               ;first constant (#a)
0004908C <AmiBlitz3.ab2@25904> numarg:               Ds.w 1                               ;number of macro arguements
00049090 <AmiBlitz3.ab2@25905> myoline:              Ds.l 1                               ;macro done yet?
00049094 <AmiBlitz3.ab2@25906> myline:               Ds.l 1                               ;pointer to some memory to create
00049098 <AmiBlitz3.ab2@25909>                       Ds.l 1
000490D8 <AmiBlitz3.ab2@25910> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000490DC <AmiBlitz3.ab2@25911> concomsp:             Dc.l concomstack                     ;stack pointer
000490DE <AmiBlitz3.ab2@25912> oldqflag:             Ds.w 1
000490E2 <AmiBlitz3.ab2@25915>                       Ds.l 1
000490E4 <AmiBlitz3.ab2@25917>                       Ds.w 1
000490E8 <AmiBlitz3.ab2@25918> firstfor:             Ds.l 1                               ;first for
000490EA <AmiBlitz3.ab2@25919> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000490EC <AmiBlitz3.ab2@25920> sbgot:                Ds.w 1                               ;flag for string got 2
000490EE <AmiBlitz3.ab2@25921> convsize:             Ds.w 1                               ;usertype org source
000490F0 <AmiBlitz3.ab2@25922> userp:                Ds.w 1
000490F4 <AmiBlitz3.ab2@25927> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000490F6 <AmiBlitz3.ab2@25928> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000490F8 <AmiBlitz3.ab2@25929> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000490FC <AmiBlitz3.ab2@25931> locloc:               Ds.l 1
000490FE <AmiBlitz3.ab2@25932> locchar:              Ds.w 1
0004917E <AmiBlitz3.ab2@25933> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00049180 <AmiBlitz3.ab2@25934> commode:              Ds.w 1                               ;in comma mode...
00049184 <AmiBlitz3.ab2@25935> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00049188 <AmiBlitz3.ab2@25936> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0004918C <AmiBlitz3.ab2@25937> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
0004918E <AmiBlitz3.ab2@25939>                       Ds.w 1                               ;opt reset offset
0004928E <AmiBlitz3.ab2@25941>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
0004938E <AmiBlitz3.ab2@25943>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00049390 <AmiBlitz3.ab2@25944> varcodelen:           Ds.w 1                               ;and length
00049392 <AmiBlitz3.ab2@25946>                       Ds.w 1
00049398 <AmiBlitz3.ab2@25947> oldvcodelen:          Ds.w 3                               ;old varcodelen
0004939C <AmiBlitz3.ab2@25951> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0004939E <AmiBlitz3.ab2@25952> memlibstat:           Ds.w 1                               ;status of memory library during
000493A0 <AmiBlitz3.ab2@25955>                       Dc.w 0
000493A2 <AmiBlitz3.ab2@25957>                       Dc.w 0
000493A4 <AmiBlitz3.ab2@25959> varmode:              Ds.w 1                               ;0 a5 pointer to global
000493A8 <AmiBlitz3.ab2@25961> currentfunction:      Ds.l 1                               ;thisproc org source
000493AC <AmiBlitz3.ab2@25962> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000493AE <AmiBlitz3.ab2@25963> 
000493B0 <AmiBlitz3.ab2@25965> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000493B4 <AmiBlitz3.ab2@25966> passstack:            Ds.l 1
000493B8 <AmiBlitz3.ab2@25967> zero:                 Ds.l 1                               ;ZERO!
000493BA <AmiBlitz3.ab2@25968> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000493BE <AmiBlitz3.ab2@25970> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000493C2 <AmiBlitz3.ab2@25971> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000493C4 <AmiBlitz3.ab2@25972> lasta6:               Dc.w $FFFF                           ;-1 org source
000493C6 <AmiBlitz3.ab2@25973> instringon:           Ds.w 1                               ;quoteflag org source
000493CA <AmiBlitz3.ab2@25974> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000493CE <AmiBlitz3.ab2@25975> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000493D2 <AmiBlitz3.ab2@25976> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000493D6 <AmiBlitz3.ab2@25977> endop:                Ds.l 1                               ;end of program pc - before finishups!
000493DA <AmiBlitz3.ab2@25978> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000493DE <AmiBlitz3.ab2@25979> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000493E0 <AmiBlitz3.ab2@25980> numstatic:            Ds.w 1                               ;number of static structs
000493E4 <AmiBlitz3.ab2@25981> staticdata:           Ds.l 1                               ;data1 val for statics
000493E8 <AmiBlitz3.ab2@25982> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000493EA <AmiBlitz3.ab2@25983> sbasegot:             Ds.w 1                               ;string base got?
000493EE <AmiBlitz3.ab2@25984> litdata1:             Ds.l 1
000493F2 <AmiBlitz3.ab2@25988> objlen:               Ds.l 1
000493F6 <AmiBlitz3.ab2@25989> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000493FA <AmiBlitz3.ab2@25990> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000493FC <AmiBlitz3.ab2@25992> flagmask:             Ds.w 1                               ;mask for flag of variable when
000493FE <AmiBlitz3.ab2@25994> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00049400 <AmiBlitz3.ab2@25995> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00049404 <AmiBlitz3.ab2@25996> temp1:                Ds.l 1
00049408 <AmiBlitz3.ab2@25997> temp2:                Ds.l 1
0004940C <AmiBlitz3.ab2@25999> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00049410 <AmiBlitz3.ab2@26000> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00049484 <AmiBlitz3.ab2@26001> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00049488 <AmiBlitz3.ab2@26002> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00049508 <AmiBlitz3.ab2@26004> namebuff2:            Ds.b 128
00049510 <AmiBlitz3.ab2@26005>                       Ds.b 8                               ;for fileinfoblock
00049550 <AmiBlitz3.ab2@26008> optstuff:             Ds.b 64                              ;temp opt make buffer
0004958E <AmiBlitz3.ab2@26016>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
00049594 <AmiBlitz3.ab2@26017>   MOVE.l #1000,D0
00049596 <AmiBlitz3.ab2@26018>   JSR (A1)
00049598 <AmiBlitz3.ab2@26019> RTS
0004959A <AmiBlitz3.ab2@26025>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0004959E <AmiBlitz3.ab2@26026>   Dc.l xtra_versionnumber                                  ; vers org source
000495A2 <AmiBlitz3.ab2@26027>   Dc.l create_iconfile                                     ; create icon for executable
000495A6 <AmiBlitz3.ab2@26028>   Ds.l 1
000495A8 <AmiBlitz3.ab2@26030>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
000495AC <AmiBlitz3.ab2@26033>   Dc.l set_use_debugger
000495B0 <AmiBlitz3.ab2@26034>   Dc.l AL_0_11010                                          ;+obsolet: debugger
000495B4 <AmiBlitz3.ab2@26035>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
000495B8 <AmiBlitz3.ab2@26036>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
000495BC <AmiBlitz3.ab2@26037>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
000495C0 <AmiBlitz3.ab2@26038>   Dc.l set_make_smallestcode
000495C4 <AmiBlitz3.ab2@26039>   Dc.l set_link_debuginfo
000495C8 <AmiBlitz3.ab2@26040>   Dc.l set_autorun
000495CC <AmiBlitz3.ab2@26041>   Dc.l set_interruptcheck
000495D0 <AmiBlitz3.ab2@26042>   Dc.l set_assemblercheck
000495D4 <AmiBlitz3.ab2@26044>   Dc.l set_overflowcheck
000495D8 <AmiBlitz3.ab2@26045>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
000495DC <AmiBlitz3.ab2@26046>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
000495E0 <AmiBlitz3.ab2@26047>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
000495E4 <AmiBlitz3.ab2@26050>   Ds.l 1
000495E6 <AmiBlitz3.ab2@26052>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
000495EA <AmiBlitz3.ab2@26059>   Dc.l objectbuffer
000495EE <AmiBlitz3.ab2@26060>   Dc.l libsbuffer
000495F2 <AmiBlitz3.ab2@26061>   Dc.l systembuffer
000495F6 <AmiBlitz3.ab2@26062>   Dc.l databuffer
000495FA <AmiBlitz3.ab2@26063>   Dc.l macrobuffer_size
000495FE <AmiBlitz3.ab2@26064>   Dc.l stringbuffer
00049602 <AmiBlitz3.ab2@26067>   Ds.l 1
00049604 <AmiBlitz3.ab2@26071>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
0004960C <AmiBlitz3.ab2@26072>   Dc.l residents_table,0
0004960E <AmiBlitz3.ab2@26076>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00049616 <AmiBlitz3.ab2@26077>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00049618 <AmiBlitz3.ab2@26078>   Ds.w 1
00049714 <AmiBlitz3.ab2@26082>   Ds.l 63
00049810 <AmiBlitz3.ab2@26083>   Ds.l 63
0004990C <AmiBlitz3.ab2@26084>   Ds.l 63
000499EE <AmiBlitz3.ab2@26085>   Ds.w 113
000499F0 <AmiBlitz3.ab2@26088> comsettings_message:  Ds.w 1                               ;allchg org source
000499F2 <AmiBlitz3.ab2@26089> xtra_versionnumber:   Ds.w 1                               ;vers org source
000499F8 <AmiBlitz3.ab2@26093>   CLR.b exefilename
000499FA <AmiBlitz3.ab2@26094>   TST.l d0
000499FE <AmiBlitz3.ab2@26095>   BNE read_xtrafile__l10
00049A00 <AmiBlitz3.ab2@26096> RTS
00049A06 <AmiBlitz3.ab2@26099>   JSR free_residents                                       ;jsr freeres2 org source
00049A0C <AmiBlitz3.ab2@26100> 
00049A12 <AmiBlitz3.ab2@26101>   LEA ptr_xtradata,A2
00049A14 <AmiBlitz3.ab2@26102>   MOVEQ.l #$00,D4
00049A16 <AmiBlitz3.ab2@26105>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00049A1A <AmiBlitz3.ab2@26106>     BEQ.b read_xtrafile__done
00049A1C <AmiBlitz3.ab2@26109>     MOVE.l (A2)+,D2
00049A20 <AmiBlitz3.ab2@26110>   BEQ.b read_xtrafile__loop
00049A22 <AmiBlitz3.ab2@26112>   MOVE.l D4,D3
00049A24 <AmiBlitz3.ab2@26113>   MOVE.l D7,D1
00049A28 <AmiBlitz3.ab2@26114>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00049A2A <AmiBlitz3.ab2@26115>   TST.l D0
00049A2E <AmiBlitz3.ab2@26116>   BNE.b read_xtrafile__loop2
00049A32 <AmiBlitz3.ab2@26117> BRA.w read_xtrafile__done2
00049A38 <AmiBlitz3.ab2@26120>   TST.b xtra_versionnumber
00049A3C <AmiBlitz3.ab2@26121>    BNE.b read_xtrafile__nover0
00049A44 <AmiBlitz3.ab2@26122>   MOVE.w #$0080,set_autorun                                ;auto run on
00049A4E <AmiBlitz3.ab2@26123>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00049A54 <AmiBlitz3.ab2@26124>   CLR.w set_assemblercheck                                 ;assembler checking off
00049A5E <AmiBlitz3.ab2@26125>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00049A62 <AmiBlitz3.ab2@26126> BRA.b read_xtrafile__ver0
00049A64 <AmiBlitz3.ab2@26129>   MOVE.l D7,D1                                             ;load cli arg!
00049A6A <AmiBlitz3.ab2@26130>   MOVE.l #str_cliarguments,D2
00049A70 <AmiBlitz3.ab2@26131>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00049A74 <AmiBlitz3.ab2@26132>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00049A7A <AmiBlitz3.ab2@26133>   MOVE.l #str_cliarguments,A0
00049A80 <AmiBlitz3.ab2@26134>   ADDA.l #115,A0
00049A86 <AmiBlitz3.ab2@26135>   MOVE.l #0,(a0) ; terminate it!
00049A88 <AmiBlitz3.ab2@26137>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00049A8E <AmiBlitz3.ab2@26138>   MOVE.l #stacksize,D2
00049A94 <AmiBlitz3.ab2@26139>   MOVE.l #4,D3
00049A98 <AmiBlitz3.ab2@26140>   JSR _Read(A6)
00049AA2 <AmiBlitz3.ab2@26141>   CMP.l ##MIN_STACKSIZE,stacksize
00049AA6 <AmiBlitz3.ab2@26142>   BGE 'stackok
00049AB0 <AmiBlitz3.ab2@26143>   MOVE.l ##MIN_STACKSIZE,stacksize
00049AB2 <AmiBlitz3.ab2@26146>   MOVE.l D7,D1
00049AB8 <AmiBlitz3.ab2@26147>   MOVE.l #versioninformation,D2
00049ABE <AmiBlitz3.ab2@26148>   MOVE.l #4,D3
00049AC2 <AmiBlitz3.ab2@26149>   JSR _Read(A6)
00049AC4 <AmiBlitz3.ab2@26151>   MOVE.l D7,D1
00049ACA <AmiBlitz3.ab2@26152>   MOVE.l #number_of_builds,D2
00049AD0 <AmiBlitz3.ab2@26153>   MOVE.l #4,D3
00049AD4 <AmiBlitz3.ab2@26154>   JSR _Read(A6)
00049ADA <AmiBlitz3.ab2@26160>   MOVE.l A7,errstack
00049AE4 <AmiBlitz3.ab2@26161>   MOVE.l #read_xtrafile__done2,errcont
00049AEC <AmiBlitz3.ab2@26162>   MOVE.w #$FFFF,ezerr
00049AF2 <AmiBlitz3.ab2@26165>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00049AF4 <AmiBlitz3.ab2@26166>     MOVEQ.l #$04,D3
00049AF6 <AmiBlitz3.ab2@26167>     MOVE.l D7,D1
00049AFA <AmiBlitz3.ab2@26168>     JSR _Read(A6)
00049AFC <AmiBlitz3.ab2@26169>     TST.l D0
00049B00 <AmiBlitz3.ab2@26170>     BEQ.b read_xtrafile__done2
00049B06 <AmiBlitz3.ab2@26171>     MOVE.w temp1,D1
00049B08 <AmiBlitz3.ab2@26172>     TST.w d1                                               ;new
00049B0C <AmiBlitz3.ab2@26173>     BEQ read_xtrafile__done2                                         ;new
00049B12 <AmiBlitz3.ab2@26174>      JSR AJL_0_6F1A
00049B18 <AmiBlitz3.ab2@26176>     CMP.l #0,a1
00049B1C <AmiBlitz3.ab2@26177>     BEQ read_xtrafile__dloop
00049B20 <AmiBlitz3.ab2@26178>     MOVE.l $12(A1),D0
00049B28 <AmiBlitz3.ab2@26179>     MOVE.w temp1+2,-$4(A1,D0.L)
00049B2C <AmiBlitz3.ab2@26180> BRA.b read_xtrafile__dloop
00049B30 <AmiBlitz3.ab2@26186>   LEA residents_table(PC),A0
00049B32 <AmiBlitz3.ab2@26187>   MOVEQ.l #$07,D0
00049B36 <AmiBlitz3.ab2@26190>     CLR.l $40(A0)
00049B3A <AmiBlitz3.ab2@26191>     LEA ResidentEntryStep(A0),A0   ; $44
00049B3E <AmiBlitz3.ab2@26192>   DBF D0,read_xtrafile__loop3
00049B42 <AmiBlitz3.ab2@26194>   MOVEM.l D7/A6,-(A7)
00049B48 <AmiBlitz3.ab2@26195>   JSR init_buffers
00049B4E <AmiBlitz3.ab2@26196>   JSR reloadresident
00049B52 <AmiBlitz3.ab2@26197>   MOVEM.l (A7)+,D7/A6
00049B54 <AmiBlitz3.ab2@26198> RTS
00049B5C <AmiBlitz3.ab2@26202>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00049B62 <AmiBlitz3.ab2@26211>   LEA ptr_xtradata,A2
00049B64 <AmiBlitz3.ab2@26212>   MOVEQ.l #$00,D4
00049B66 <AmiBlitz3.ab2@26216>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00049B6A <AmiBlitz3.ab2@26217>   BEQ.b write_xtrafile__done
00049B6C <AmiBlitz3.ab2@26220>    MOVE.l (A2)+,D2
00049B70 <AmiBlitz3.ab2@26221>    BEQ.b write_xtrafile__loop
00049B72 <AmiBlitz3.ab2@26223>    MOVE.l D4,D3
00049B74 <AmiBlitz3.ab2@26224>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00049B78 <AmiBlitz3.ab2@26225>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00049B7C <AmiBlitz3.ab2@26226> BRA.b write_xtrafile__loop2
00049B7E <AmiBlitz3.ab2@26229>   MOVE.l D7,D1
00049B84 <AmiBlitz3.ab2@26230>   MOVE.l #str_cliarguments,D2
00049B8A <AmiBlitz3.ab2@26231>   MOVE.l #116,D3
00049B8E <AmiBlitz3.ab2@26232>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00049B90 <AmiBlitz3.ab2@26234>   MOVE.l D7,D1
00049B96 <AmiBlitz3.ab2@26235>   MOVE.l #stacksize,D2
00049B9C <AmiBlitz3.ab2@26236>   MOVE.l #4,D3
00049BA0 <AmiBlitz3.ab2@26237>   JSR _Write(A6)
00049BA2 <AmiBlitz3.ab2@26239>   MOVE.l D7,D1
00049BA8 <AmiBlitz3.ab2@26240>   MOVE.l #versioninformation,D2
00049BAE <AmiBlitz3.ab2@26241>   MOVE.l #4,D3
00049BB2 <AmiBlitz3.ab2@26242>   JSR _Write(A6)
00049BB4 <AmiBlitz3.ab2@26244>   MOVE.l D7,D1
00049BBA <AmiBlitz3.ab2@26245>   MOVE.l #number_of_builds,D2
00049BC0 <AmiBlitz3.ab2@26246>   MOVE.l #4,D3
00049BC4 <AmiBlitz3.ab2@26247>   JSR _Write(A6)
00049BCA <AmiBlitz3.ab2@26253>   LEA libpointer,A2
00049BCC <AmiBlitz3.ab2@26256>     MOVE.l (A2),D0
00049BD0 <AmiBlitz3.ab2@26257>     BEQ.w write_xtrafile__done2
00049BD2 <AmiBlitz3.ab2@26258>     MOVEA.l D0,A2
00049BD6 <AmiBlitz3.ab2@26259>     MOVE.l $12(A2),D4
00049BDA <AmiBlitz3.ab2@26260>     TST.w -$2(A2,D4.L)
00049BDE <AmiBlitz3.ab2@26261>     BEQ.w write_xtrafile__loop3
00049BE2 <AmiBlitz3.ab2@26263>     LEA $4(A2),A0
00049BE4 <AmiBlitz3.ab2@26264>     MOVE.l A0,D2
00049BE6 <AmiBlitz3.ab2@26265>     MOVEQ.l #$02,D3
00049BE8 <AmiBlitz3.ab2@26266>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00049BEC <AmiBlitz3.ab2@26267>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00049BF0 <AmiBlitz3.ab2@26269>     LEA -$4(A2,D4.L),A0
00049BF2 <AmiBlitz3.ab2@26270>     MOVE.l A0,D2
00049BF4 <AmiBlitz3.ab2@26271>     MOVEQ.l #$02,D3
00049BF6 <AmiBlitz3.ab2@26272>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00049BFA <AmiBlitz3.ab2@26273>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00049BFE <AmiBlitz3.ab2@26274> BRA.w write_xtrafile__loop3
00049C04 <AmiBlitz3.ab2@26279>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00049C06 <AmiBlitz3.ab2@26280>   MOVE.l A2,D2           ; move the address to d2
00049C0C <AmiBlitz3.ab2@26281>   MOVE.l #4,D3           ; we only need 4 bytes to save
00049C0E <AmiBlitz3.ab2@26282>   MOVE.l D7,D1           ; we set the file handle
00049C12 <AmiBlitz3.ab2@26283>   JSR _Write(A6)         ; and we write it.
00049C14 <AmiBlitz3.ab2@26285> RTS
00049C1A <AmiBlitz3.ab2@26290>   LEA optssave,A0                      ; backup address
00049C20 <AmiBlitz3.ab2@26291>   LEA ptr_xtradata,A1                  ; source address
00049C22 <AmiBlitz3.ab2@26294>   MOVE.w (A1)+,D0                                          ;length of data move
00049C26 <AmiBlitz3.ab2@26295>   BEQ.b 'backupdone
00049C28 <AmiBlitz3.ab2@26296>   SUBQ.w #1,D0
00049C2A <AmiBlitz3.ab2@26299>     MOVE.l (A1)+,D1
00049C2E <AmiBlitz3.ab2@26300>     BEQ.b 'backuploop
00049C30 <AmiBlitz3.ab2@26301>     MOVEA.l D1,A2
00049C32 <AmiBlitz3.ab2@26302>     MOVE.w D0,D1
00049C34 <AmiBlitz3.ab2@26305>       MOVE.b (A2)+,(A0)+
00049C38 <AmiBlitz3.ab2@26306>   DBF D1,'backuploop3
00049C3C <AmiBlitz3.ab2@26308> BRA.w 'backuploop2
00049C42 <AmiBlitz3.ab2@26312>   LEA bufferlist,A1
00049C44 <AmiBlitz3.ab2@26315>     MOVE.l (A1)+,D2
00049C48 <AmiBlitz3.ab2@26316>     BEQ.b 'loop4done
00049C4A <AmiBlitz3.ab2@26318>     MOVEA.l D2,A0
00049C4C <AmiBlitz3.ab2@26319>     MOVE.l (A0),D2
00049C4E <AmiBlitz3.ab2@26320>     ADDQ.w #8,A0
00049C54 <AmiBlitz3.ab2@26321>     JSR makelong
00049C58 <AmiBlitz3.ab2@26322> BRA.b 'loop4
00049C5E <AmiBlitz3.ab2@26325>   CLR.w state_of_residents                                 ;resident change
00049C64 <AmiBlitz3.ab2@26326>   CLR.w comsettings_message                                ;alloc change
00049C6A <AmiBlitz3.ab2@26327>   CLR.w maxobject_pos
00049C6C <AmiBlitz3.ab2@26328> RTS   ; new tomsmart1
00049C72 <AmiBlitz3.ab2@26332>   LEA optssave,A0
00049C78 <AmiBlitz3.ab2@26333>   LEA ptr_xtradata,A1
00049C7A <AmiBlitz3.ab2@26336>   MOVE.w (A1)+,D0
00049C7E <AmiBlitz3.ab2@26337>   BEQ.b 'restoredone
00049C80 <AmiBlitz3.ab2@26338>   SUBQ.w #1,D0
00049C82 <AmiBlitz3.ab2@26341>     MOVE.l (A1)+,D1
00049C86 <AmiBlitz3.ab2@26342>     BEQ.b 'restoreloop1
00049C88 <AmiBlitz3.ab2@26343>     MOVEA.l D1,A2
00049C8A <AmiBlitz3.ab2@26344>     MOVE.w D0,D1
00049C8C <AmiBlitz3.ab2@26347>       MOVE.b (A0)+,(A2)+
00049C90 <AmiBlitz3.ab2@26348>   DBF D1,'restoreloop3
00049C94 <AmiBlitz3.ab2@26350> BRA.b 'restoreloop2
00049C96 <AmiBlitz3.ab2@26353> RTS
00049C9C <AmiBlitz3.ab2@26357>   JSR free_residents                    ; first free the allready loaded residents
00049CA2 <AmiBlitz3.ab2@26358>   JSR Clear_Residents_table             ; second clear the complete resident table
00049CA4 <AmiBlitz3.ab2@26359> RTS
00049CAC <AmiBlitz3.ab2@26363>   MOVE.w #$FFFF,state_of_residents
00049CB2 <AmiBlitz3.ab2@26364>   MOVE.w state_of_residents,D0
00049CB8 <AmiBlitz3.ab2@26365>   JSR reloadresident
00049CBA <AmiBlitz3.ab2@26366> RTS
00049CBC <AmiBlitz3.ab2@26371>   MOVE.l d0,a1
00049CC2 <AmiBlitz3.ab2@26372>   MOVEA.l libpointer,A2
00049CC6 <AmiBlitz3.ab2@26375>     MOVE.l $12(A2),D0
00049CCA <AmiBlitz3.ab2@26376>     TST.w -$2(A2,D0.L)
00049CCE <AmiBlitz3.ab2@26377>      BEQ.w JL_0_102AAa
00049CD0 <AmiBlitz3.ab2@26378>     SUBQ.w #1,D1
00049CD4 <AmiBlitz3.ab2@26379>      BPL.w JL_0_102AAa
00049CD8 <AmiBlitz3.ab2@26380>     MOVEA.l -$1A(A2,D0.L),A3
00049CDA <AmiBlitz3.ab2@26381>     ADDA.l A2,A3
00049CDC <AmiBlitz3.ab2@26384>       MOVE.b (A3)+,(A1)+
00049CE0 <AmiBlitz3.ab2@26385>     BNE.w JL_0_10294a
00049CE2 <AmiBlitz3.ab2@26387>     CLR.b -(A1)
00049CE6 <AmiBlitz3.ab2@26388>     MOVE.w -$4(A2,D0.L),D0
00049CEC <AmiBlitz3.ab2@26389>     AND.l #$ffff,d0
00049CEE <AmiBlitz3.ab2@26390> RTS
00049CF0 <AmiBlitz3.ab2@26393>     MOVEA.l (A2),A2
00049CF4 <AmiBlitz3.ab2@26394> BRA.w JL_0_1027Ca
00049D04 <AmiBlitz3.ab2@26399> str_maxobjects_name:   Dc.b "              ",0 : Even
00049D14 <AmiBlitz3.ab2@26400> str_maxobjects_name2:  Dc.b "              ",0 : Even
00049D18 <AmiBlitz3.ab2@26401> objectbuffer:          Dc.l $00004000
00049D1C <AmiBlitz3.ab2@26402>                        Dc.l $00000000
00049D28 <AmiBlitz3.ab2@26403> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00049D2C <AmiBlitz3.ab2@26405> libsbuffer:            Dc.l $00008000
00049D30 <AmiBlitz3.ab2@26406>                        Dc.l $00000000
00049D3C <AmiBlitz3.ab2@26407> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00049D40 <AmiBlitz3.ab2@26409> systembuffer:          Dc.l $00001000                      ; systen buffer
00049D44 <AmiBlitz3.ab2@26410>                        Dc.l $00000000
00049D50 <AmiBlitz3.ab2@26411> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00049D54 <AmiBlitz3.ab2@26413> databuffer:            Dc.l $00001000                      ; data buffer
00049D58 <AmiBlitz3.ab2@26414>                        Dc.l $00000000
00049D64 <AmiBlitz3.ab2@26415> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00049D68 <AmiBlitz3.ab2@26417> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00049D6C <AmiBlitz3.ab2@26418>                        Dc.l $00000000
00049D78 <AmiBlitz3.ab2@26419> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
00049D7C <AmiBlitz3.ab2@26421> stringbuffer:          Dc.l $00002800                      ; string buffer
00049D80 <AmiBlitz3.ab2@26422>                        Dc.l $00000000
00049D8C <AmiBlitz3.ab2@26423> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00049D8E <AmiBlitz3.ab2@26425> maxobjects_value:      Dc.w $0064
00049D92 <AmiBlitz3.ab2@26426>                        Dc.l $00000000
00049D9E <AmiBlitz3.ab2@26427> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00049DA0 <AmiBlitz3.ab2@26429> maxobjects_value2:     Dc.w $0014
00049DA2 <AmiBlitz3.ab2@26430>                        Dc.w $0000
00049DAE <AmiBlitz3.ab2@26432> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00049DAF <AmiBlitz3.ab2@26436> set_create_iconfile:   Dc.b $00
00049DB2 <AmiBlitz3.ab2@26437> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00049DB4 <AmiBlitz3.ab2@26438>                        Dc.b $00,$01
00049DB5 <AmiBlitz3.ab2@26440> set_use_debugger:      Dc.b $00                            ; Flags.w
00049DB8 <AmiBlitz3.ab2@26441> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00049DBA <AmiBlitz3.ab2@26442>                        Dc.b $00,$01                        ; GadgetType.w
00049DBE <AmiBlitz3.ab2@26443> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00049DC2 <AmiBlitz3.ab2@26444> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00049DC6 <AmiBlitz3.ab2@26445> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00049DC8 <AmiBlitz3.ab2@26446> AL_0_11094:            Ds.w 1
00049DC9 <AmiBlitz3.ab2@26448> set_make_smallestcode: Ds.b 1
00049DCC <AmiBlitz3.ab2@26449> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00049DCE <AmiBlitz3.ab2@26450>                        Dc.b $00,$01
00049DCF <AmiBlitz3.ab2@26451> set_link_debuginfo:    Ds.b 1
00049DD2 <AmiBlitz3.ab2@26452> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00049DD4 <AmiBlitz3.ab2@26453>                        Dc.b $00,$01
00049FF4 <AmiBlitz3.ab2@26458>   Ds.l 136         ;resident files STEP $44 piece 8
0004A074 <AmiBlitz3.ab2@26463> str_calcexpression:        Ds.l 32
0004A078 <AmiBlitz3.ab2@26464> destbufferend_backup_calc: Ds.l 1
0004A082 <AmiBlitz3.ab2@26469>   MOVE.l destbufferend,destbufferend_backup_calc
0004A088 <AmiBlitz3.ab2@26470>   MOVE.l A7,errstack
0004A092 <AmiBlitz3.ab2@26471>   MOVE.l #Calc_Error_Exit,errcont
0004A0BC <AmiBlitz3.ab2@26478>   !basic         ; get the flage for the conversion form the editor
0004A100 <AmiBlitz3.ab2@26479>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
0004A144 <AmiBlitz3.ab2@26480>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
0004A162 <AmiBlitz3.ab2@26481>   !asm
0004A168 <AmiBlitz3.ab2@26483>   LEA str_calcexpression,A0
0004A16E <AmiBlitz3.ab2@26491>   JSR setcvars
0004A174 <AmiBlitz3.ab2@26492>   JSR setsvars
0004A17A <AmiBlitz3.ab2@26493>   CLR.w connest
0004A180 <AmiBlitz3.ab2@26494>   LEA str_calcexpression,A5
0004A186 <AmiBlitz3.ab2@26495>   JSR AJL_0_BF6E
0004A18C <AmiBlitz3.ab2@26496>   LEA str_calcexpression,A0
0004A18E <AmiBlitz3.ab2@26497>   TST.l D3
0004A192 <AmiBlitz3.ab2@26498>    BPL.w JL_0_11AE8
0004A196 <AmiBlitz3.ab2@26499>   MOVE.b #$2D,(A0)+
0004A198 <AmiBlitz3.ab2@26500>   NEG.l D3
0004A1A0 <AmiBlitz3.ab2@26503>   CMPI.w #$80,CalculatorButtonDecFlag
0004A1A4 <AmiBlitz3.ab2@26504>    BEQ.w JL_0_11B74
0004A1A6 <AmiBlitz3.ab2@26505>   MOVEQ.l #$00,D1
0004A1AE <AmiBlitz3.ab2@26506>   CMPI.w #$80,CalculatorButtonBinFlag
0004A1B2 <AmiBlitz3.ab2@26507>    BNE.w JL_0_11B36
0004A1B4 <AmiBlitz3.ab2@26508>   MOVEQ.l #$1F,D0
0004A1B8 <AmiBlitz3.ab2@26509>   MOVE.b #$25,(A0)+
0004A1BA <AmiBlitz3.ab2@26512>       LSL.l #1,D3
0004A1BE <AmiBlitz3.ab2@26513>        BCC.w JL_0_11B18
0004A1C2 <AmiBlitz3.ab2@26514>       MOVE.b #"1",(A0)+
0004A1C4 <AmiBlitz3.ab2@26515>       MOVEQ.l #-$01,D1
0004A1C8 <AmiBlitz3.ab2@26516>   BRA.w JL_0_11B22
0004A1CA <AmiBlitz3.ab2@26519>       TST.w D1
0004A1CE <AmiBlitz3.ab2@26520>       BEQ.w JL_0_11B22
0004A1D2 <AmiBlitz3.ab2@26521>       MOVE.b #"0",(A0)+
0004A1D6 <AmiBlitz3.ab2@26524>  DBF D0,JL_0_11B08
0004A1D8 <AmiBlitz3.ab2@26527>   TST.w D1
0004A1DC <AmiBlitz3.ab2@26528>   BNE.w JL_0_11B30
0004A1E0 <AmiBlitz3.ab2@26529>   MOVE.b #"0",(A0)+
0004A1E2 <AmiBlitz3.ab2@26532>   CLR.b (A0)
0004A1E6 <AmiBlitz3.ab2@26533> BRA.w JL_0_11B7C
0004A1E8 <AmiBlitz3.ab2@26536>   MOVEQ.l #$07,D0
0004A1EC <AmiBlitz3.ab2@26537>   MOVE.b #$24,(A0)+
0004A1EE <AmiBlitz3.ab2@26540>     MOVE.l D3,D2
0004A1F0 <AmiBlitz3.ab2@26541>     SWAP D2
0004A1F2 <AmiBlitz3.ab2@26542>     LSR.w #8,D2
0004A1F4 <AmiBlitz3.ab2@26543>     LSR.w #4,D2
0004A1F8 <AmiBlitz3.ab2@26544>     ADDI.w #$30,D2
0004A1FC <AmiBlitz3.ab2@26545>     CMP.w #$3A,D2
0004A200 <AmiBlitz3.ab2@26546>      BCS.w JL_0_11B52
0004A202 <AmiBlitz3.ab2@26547>     ADDQ.w #7,D2
0004A206 <AmiBlitz3.ab2@26550>     CMP.w #$30,D2
0004A20A <AmiBlitz3.ab2@26551>     BEQ.w JL_0_11B62
0004A20C <AmiBlitz3.ab2@26552>     MOVE.b D2,(A0)+
0004A20E <AmiBlitz3.ab2@26553>     MOVEQ.l #-$01,D1
0004A212 <AmiBlitz3.ab2@26554>   BRA.w JL_0_11B6A
0004A214 <AmiBlitz3.ab2@26557>     TST.w D1
0004A218 <AmiBlitz3.ab2@26558>      BEQ.w JL_0_11B6A
0004A21A <AmiBlitz3.ab2@26559>     MOVE.b D2,(A0)+
0004A21C <AmiBlitz3.ab2@26562>     LSL.l #4,D3
0004A220 <AmiBlitz3.ab2@26563>  DBF D0,JL_0_11B3C
0004A224 <AmiBlitz3.ab2@26565> BRA.w JL_0_11B26
0004A226 <AmiBlitz3.ab2@26568>   MOVE.l D3,D2
0004A22C <AmiBlitz3.ab2@26569>   JSR makelong
0004A236 <AmiBlitz3.ab2@26576>   MOVE.l destbufferend_backup_calc,destbufferend
0004A238 <AmiBlitz3.ab2@26578> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
0004A337 <AmiBlitz3.ab2@26582> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
0004A338 <AmiBlitz3.ab2@26584> Even
0004A376 <AmiBlitz3.ab2@26589>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
0004A37C <AmiBlitz3.ab2@26590>   MOVE.l #1001,D0
0004A382 <AmiBlitz3.ab2@26591>   MOVE.l #str_cliarguments,D1
0004A384 <AmiBlitz3.ab2@26592>   JSR (A1)
0004A386 <AmiBlitz3.ab2@26593> RTS
0004A388 <AmiBlitz3.ab2@26598>     MOVE.b (a5)+,d0
0004A38C <AmiBlitz3.ab2@26599>     BEQ 'l2
0004A390 <AmiBlitz3.ab2@26600>     CMP.b #$80,d0
0004A394 <AmiBlitz3.ab2@26601>     BNE 'l1
0004A396 <AmiBlitz3.ab2@26602>     MOVE.b (a5)+,d0
0004A39A <AmiBlitz3.ab2@26603>     BEQ 'l2
0004A39E <AmiBlitz3.ab2@26604>     CMP.b #$02,d0
0004A3A2 <AmiBlitz3.ab2@26605>   BNE 'l1
0004A3A6 <AmiBlitz3.ab2@26608>     CMP.b #$20,(a5)+
0004A3AA <AmiBlitz3.ab2@26609>   BEQ 'l3
0004A3AC <AmiBlitz3.ab2@26610>   SUBQ.l #1,a5
0004A3AE <AmiBlitz3.ab2@26611>   TST.b (a5)
0004A3B2 <AmiBlitz3.ab2@26612>   BEQ 'l2
0004A3B6 <AmiBlitz3.ab2@26613>   CMP.w #$8008,(a5)
0004A3BA <AmiBlitz3.ab2@26614>   BEQ 'l4
0004A3BE <AmiBlitz3.ab2@26615>   CMP.w #$8009,(a5)
0004A3C2 <AmiBlitz3.ab2@26616>   BEQ 'l4
0004A3C6 <AmiBlitz3.ab2@26617> BRA 'l1
0004A3C8 <AmiBlitz3.ab2@26620>   ADDQ.l #2,a5
0004A3CE <AmiBlitz3.ab2@26621>   JSR skiprest
0004A3D0 <AmiBlitz3.ab2@26622> RTS
0004A3D6 <AmiBlitz3.ab2@26625>   JSR nextline
0004A3DA <AmiBlitz3.ab2@26626>   BNE 'l1
0004A3DC <AmiBlitz3.ab2@26627> RTS
0004A406 <AmiBlitz3.ab2@26631>   !basic
0004A410 <AmiBlitz3.ab2@26632>   DateFormat 1
0004A41E <AmiBlitz3.ab2@26633>   i.l=SystemDate
0004A444 <AmiBlitz3.ab2@26634>   a$=Date$ (i)
0004A4C2 <AmiBlitz3.ab2@26635>   a$=Replace$(a$,"/",".")
0004A4C8 <AmiBlitz3.ab2@26636>   GetD0 &a$
0004A4CA <AmiBlitz3.ab2@26637>   MOVEQ #8,d2
0004A4CC <AmiBlitz3.ab2@26638>   MOVE.l d0,a0
0004A4CE <AmiBlitz3.ab2@26641>     MOVE.b (a0)+,d1
0004A4D4 <AmiBlitz3.ab2@26642>     JSR pokedata1b
0004A4D8 <AmiBlitz3.ab2@26643>  DBF d2,'l1
0004A4DA <AmiBlitz3.ab2@26645>   MOVEQ #0,d0
0004A4DC <AmiBlitz3.ab2@26646>   MOVE.b (a0)+,d0
0004A4FA <AmiBlitz3.ab2@26647>   !asm
0004A500 <AmiBlitz3.ab2@26648>   ADD.l #9,d2
0004A506 <AmiBlitz3.ab2@26649>   ADD.l #9,a5
0004A508 <AmiBlitz3.ab2@26650> RTS
0004A532 <AmiBlitz3.ab2@26654>   !basic
0004A53C <AmiBlitz3.ab2@26655>   DateFormat 0
0004A54A <AmiBlitz3.ab2@26656>   i.l=SystemDate
0004A570 <AmiBlitz3.ab2@26657>   a$=Date$ (i)
0004A5EE <AmiBlitz3.ab2@26658>   a$=Replace$(a$,"/",".")
0004A5F4 <AmiBlitz3.ab2@26659>   GetD0 &a$
0004A5F6 <AmiBlitz3.ab2@26660>   MOVEQ #8,d2
0004A5F8 <AmiBlitz3.ab2@26661>   MOVE.l d0,a0
0004A5FA <AmiBlitz3.ab2@26664>     MOVE.b (a0)+,d1
0004A600 <AmiBlitz3.ab2@26665>     JSR pokedata1b
0004A604 <AmiBlitz3.ab2@26666>  DBF d2,'l1
0004A606 <AmiBlitz3.ab2@26668>   MOVEQ #0,d0
0004A608 <AmiBlitz3.ab2@26669>   MOVE.b (a0)+,d0
0004A626 <AmiBlitz3.ab2@26670>   !asm
0004A62C <AmiBlitz3.ab2@26671>   ADD.l #9,d2
0004A632 <AmiBlitz3.ab2@26672>   ADD.l #13,a5
0004A634 <AmiBlitz3.ab2@26673> RTS
0004A65E <AmiBlitz3.ab2@26677>   !basic
0004A668 <AmiBlitz3.ab2@26678>   DateFormat 1
0004A676 <AmiBlitz3.ab2@26679>   i.l = SystemDate
0004A69C <AmiBlitz3.ab2@26680>   a$ = Date$ (i)
0004A71A <AmiBlitz3.ab2@26681>   a$ = Replace$(a$,"/",".")
0004A720 <AmiBlitz3.ab2@26682>   GetD0 &a$
0004A722 <AmiBlitz3.ab2@26683>   MOVEQ #8,d2
0004A724 <AmiBlitz3.ab2@26684>   MOVE.l d0,a0
0004A726 <AmiBlitz3.ab2@26687>     MOVE.b (a0)+,d1
0004A72C <AmiBlitz3.ab2@26688>     JSR writebyte
0004A730 <AmiBlitz3.ab2@26689>  DBF d2,'l1
0004A732 <AmiBlitz3.ab2@26691>   MOVEQ #0,d0
0004A734 <AmiBlitz3.ab2@26692>   MOVE.b (a0)+,d0
0004A752 <AmiBlitz3.ab2@26693>   !asm
0004A758 <AmiBlitz3.ab2@26694>   ADD.l #9,a5
0004A75A <AmiBlitz3.ab2@26695> RTS
0004A784 <AmiBlitz3.ab2@26699>   !basic
0004A78E <AmiBlitz3.ab2@26700>   DateFormat 0
0004A79C <AmiBlitz3.ab2@26701>   i.l=SystemDate
0004A7C2 <AmiBlitz3.ab2@26702>   a$=Date$ (i)
0004A840 <AmiBlitz3.ab2@26703>   a$=Replace$(a$,"/",".")
0004A846 <AmiBlitz3.ab2@26704>   GetD0 &a$
0004A848 <AmiBlitz3.ab2@26705>   MOVEQ #8,d2
0004A84A <AmiBlitz3.ab2@26706>   MOVE.l d0,a0
0004A84C <AmiBlitz3.ab2@26709>     MOVE.b (a0)+,d1
0004A852 <AmiBlitz3.ab2@26710>     JSR writebyte
0004A856 <AmiBlitz3.ab2@26711>  DBF d2,'l1
0004A858 <AmiBlitz3.ab2@26713>   MOVEQ #0,d0
0004A85A <AmiBlitz3.ab2@26714>   MOVE.b (a0)+,d0
0004A878 <AmiBlitz3.ab2@26715>   !asm
0004A87E <AmiBlitz3.ab2@26716>   ADD.l #13,a5
0004A880 <AmiBlitz3.ab2@26717> RTS
0004A882 <AmiBlitz3.ab2@26721>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0004A884 <AmiBlitz3.ab2@26722>   MOVE.l a5,d0
0004A8AE <AmiBlitz3.ab2@26723>   !basic
0004A8B2 <AmiBlitz3.ab2@26724>   _myD0.l = PutD0
0004A8BC <AmiBlitz3.ab2@26725>   If _myD0
0004A902 <AmiBlitz3.ab2@26726>     verstring$ = Left$(Peek.s(_myD0),9+3)
0004A954 <AmiBlitz3.ab2@26727>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0004A95A <AmiBlitz3.ab2@26728>   Else
0004A994 <AmiBlitz3.ab2@26729>     error{"INTERNAL: Invalid pointer in version_string!"}
0004A9A4 <AmiBlitz3.ab2@26734>   actual_version.l = Peek.l(?versioninformation)
0004A9B4 <AmiBlitz3.ab2@26735>   actual_build.l   = Peek.l(?number_of_builds)
0004A9D8 <AmiBlitz3.ab2@26737>   Format "00"
0004AA0E <AmiBlitz3.ab2@26738>   Select verstring$
0004AA32 <AmiBlitz3.ab2@26740>     Case "VER_MAJOR"
0004AA6E <AmiBlitz3.ab2@26741>      put_versionstr$ = Str$(actual_version LSR 24)
0004AA98 <AmiBlitz3.ab2@26743>     Case "VER_MINOR"
0004AADC <AmiBlitz3.ab2@26744>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0004AB06 <AmiBlitz3.ab2@26746>     Case "VER_PATCH"
0004AB4A <AmiBlitz3.ab2@26747>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0004AB74 <AmiBlitz3.ab2@26749>     Case "VER_BUILD"
0004AB98 <AmiBlitz3.ab2@26750>      Format ""
0004ABCC <AmiBlitz3.ab2@26751>      put_versionstr$ = Str$(actual_build)
0004ABD2 <AmiBlitz3.ab2@26753>     Default
0004ABFA <AmiBlitz3.ab2@26754>      put_versionstr$ = "{unknown compilerconstant}"
0004AC08 <AmiBlitz3.ab2@26757>   End Select
0004AC2C <AmiBlitz3.ab2@26758>   Format ""
0004AC3C <AmiBlitz3.ab2@26760>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
0004AC3E <AmiBlitz3.ab2@26761>   MOVE.l d0,d2
0004AC40 <AmiBlitz3.ab2@26762>   MOVE.l d2,-(a7)
0004AC44 <AmiBlitz3.ab2@26763>   SUB #1,d2
0004AC4A <AmiBlitz3.ab2@26765>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0004AC4C <AmiBlitz3.ab2@26766>   MOVE.l d0,a0
0004AC4E <AmiBlitz3.ab2@26769>     MOVE.b (a0)+,d1
0004AC54 <AmiBlitz3.ab2@26770>     JSR pokedata1b
0004AC58 <AmiBlitz3.ab2@26771>  DBF d2,'l1
0004AC5A <AmiBlitz3.ab2@26773>   MOVEQ #0,d0
0004AC78 <AmiBlitz3.ab2@26774>   !asm
0004AC7A <AmiBlitz3.ab2@26775>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0004AC7C <AmiBlitz3.ab2@26776>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0004AC7E <AmiBlitz3.ab2@26777>   ADD.l d0,d2
0004AC84 <AmiBlitz3.ab2@26778>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0004AC86 <AmiBlitz3.ab2@26779>   MOVEQ #0,d0
0004AC88 <AmiBlitz3.ab2@26780> RTS
0004AC8A <AmiBlitz3.ab2@26784>   MOVE.l a5,d0
0004ACB4 <AmiBlitz3.ab2@26785>   !basic
0004ACB8 <AmiBlitz3.ab2@26786>   _myD0.l = PutD0
0004ACC2 <AmiBlitz3.ab2@26787>   If _myD0
0004AD08 <AmiBlitz3.ab2@26788>     verstring$ = Left$(Peek.s(_myD0),9+3)
0004AD5A <AmiBlitz3.ab2@26789>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0004AD60 <AmiBlitz3.ab2@26790>   Else
0004AD9A <AmiBlitz3.ab2@26791>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0004ADAA <AmiBlitz3.ab2@26796>   actual_version.l = Peek.l(?versioninformation)
0004ADBA <AmiBlitz3.ab2@26797>   actual_build.l   = Peek.l(?number_of_builds)
0004ADDE <AmiBlitz3.ab2@26799>   Format ""
0004AE14 <AmiBlitz3.ab2@26800>   Select verstring$
0004AE38 <AmiBlitz3.ab2@26802>     Case "VER_MAJOR"
0004AE74 <AmiBlitz3.ab2@26803>      put_versionstr$ = Str$(actual_version LSR 24)
0004AE9E <AmiBlitz3.ab2@26805>     Case "VER_MINOR"
0004AEE2 <AmiBlitz3.ab2@26806>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0004AF0C <AmiBlitz3.ab2@26808>     Case "VER_PATCH"
0004AF50 <AmiBlitz3.ab2@26809>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0004AF7A <AmiBlitz3.ab2@26811>     Case "VER_BUILD"
0004AF9E <AmiBlitz3.ab2@26812>      Format ""
0004AFD2 <AmiBlitz3.ab2@26813>      put_versionstr$ = Str$(actual_build)
0004AFD8 <AmiBlitz3.ab2@26815>     Default
0004B000 <AmiBlitz3.ab2@26816>      put_versionstr$ = "{unknown compilerconstant}"
0004B00E <AmiBlitz3.ab2@26818>   End Select
0004B032 <AmiBlitz3.ab2@26819>   Format ""
0004B048 <AmiBlitz3.ab2@26821>   GetD0 FLen(put_versionstr$)-1
0004B04A <AmiBlitz3.ab2@26822>   MOVE.l d0,d2
0004B050 <AmiBlitz3.ab2@26824>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0004B052 <AmiBlitz3.ab2@26825>   MOVE.l d0,a0
0004B054 <AmiBlitz3.ab2@26828>     MOVE.b (a0)+,d1
0004B05A <AmiBlitz3.ab2@26829>     JSR writebyte
0004B05E <AmiBlitz3.ab2@26830>  DBF d2,'l1
0004B060 <AmiBlitz3.ab2@26832>   MOVEQ #0,d0
0004B062 <AmiBlitz3.ab2@26833>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0004B080 <AmiBlitz3.ab2@26834>   !asm
0004B086 <AmiBlitz3.ab2@26835>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0004B088 <AmiBlitz3.ab2@26836> RTS
0004B08A <AmiBlitz3.ab2@26938>  MOVE.l a5,-(a7)
0004B0B6 <AmiBlitz3.ab2@26939>  !fget
0004B0BA <AmiBlitz3.ab2@26940>  CMP.w #".",d0
0004B0BE <AmiBlitz3.ab2@26941>  BNE 'skip
0004B0C2 <AmiBlitz3.ab2@26942>  MOVEM.l a2/d2,-(a7)
0004B0C8 <AmiBlitz3.ab2@26943>  LEA newtypebase,a2
0004B0CE <AmiBlitz3.ab2@26944>  JSR getparameter2
0004B0D2 <AmiBlitz3.ab2@26945>  BEQ.w JUMP_syntaxerr
0004B0D8 <AmiBlitz3.ab2@26946>  JSR findtype
0004B0DC <AmiBlitz3.ab2@26947>  BNE.w JUMP_notypeerr
0004B0E2 <AmiBlitz3.ab2@26948>  MOVE.l a2,typetocast
0004B0E6 <AmiBlitz3.ab2@26949>  MOVEM.l (a7)+,a2/d2
0004B0EA <AmiBlitz3.ab2@26950>  CMP.w #")",d0
0004B0EE <AmiBlitz3.ab2@26951>  BNE JUMP_errorbracketmiss
0004B0F0 <AmiBlitz3.ab2@26952>  ADDQ.l #4,a7
0004B11C <AmiBlitz3.ab2@26953>  !fget
0004B122 <AmiBlitz3.ab2@26954>  JMP nocast
0004B124 <AmiBlitz3.ab2@26956> 'skip MOVE.l (a7)+,a5
0004B12A <AmiBlitz3.ab2@26957>  JMP JL_0_A410
0004B130 <AmiBlitz3.ab2@26959> JUMP_errorbracketmiss JMP errorbracketmiss
0004B15A <AmiBlitz3.ab2@26961> Function.l ab3_GetIncludeLock{filename.s}
0004B17A <AmiBlitz3.ab2@26962>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
0004B1D2 <AmiBlitz3.ab2@26963>   ex.s       = dos_GetExt{filename}
0004B1E6 <AmiBlitz3.ab2@26965>   If incLock = False
0004B25A <AmiBlitz3.ab2@26966>     filename = dos_SetExt{filename,"ab3"}
0004B27A <AmiBlitz3.ab2@26967>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0004B28E <AmiBlitz3.ab2@26970>   If incLock = False
0004B302 <AmiBlitz3.ab2@26971>     filename = dos_SetExt{filename,"ab2"}
0004B322 <AmiBlitz3.ab2@26972>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
0004B336 <AmiBlitz3.ab2@26975>   If incLock = False
0004B3AA <AmiBlitz3.ab2@26976>     filename = dos_SetExt{filename,"bb2"}
0004B3CA <AmiBlitz3.ab2@26977>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0004B3DE <AmiBlitz3.ab2@26980>   If incLock = False
0004B470 <AmiBlitz3.ab2@26981>     filename = dos_SetExt{filename,ex+".ab3"}
0004B490 <AmiBlitz3.ab2@26982>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
0004B4A4 <AmiBlitz3.ab2@26985>   If incLock = False
0004B518 <AmiBlitz3.ab2@26986>     filename = dos_SetExt{filename,"ab2"}
0004B538 <AmiBlitz3.ab2@26987>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0004B54C <AmiBlitz3.ab2@26990>   If incLock = False
0004B5C0 <AmiBlitz3.ab2@26991>     filename = dos_SetExt{filename,"bb2"}
0004B5E0 <AmiBlitz3.ab2@26992>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
0004B5EA <AmiBlitz3.ab2@26995>  Function Return incLock
0004B604 <AmiBlitz3.ab2@26996> End Function
0004B62E <AmiBlitz3.ab2@27000>   !basic
0004B658 <AmiBlitz3.ab2@27001>   incString.s = Peek$(?ptr_parameterstore)
0004B686 <AmiBlitz3.ab2@27003>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0004B68A <AmiBlitz3.ab2@27004>   incDirP.l   = PutD0                                       ;    "
0004B6B2 <AmiBlitz3.ab2@27005>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0004B732 <AmiBlitz3.ab2@27006>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0004B764 <AmiBlitz3.ab2@27007>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0004B778 <AmiBlitz3.ab2@27009>   If incLock = False ; not found => check default Include Directory
0004B788 <AmiBlitz3.ab2@27010>     incDirP.l = Peek.l(?incd)
0004B792 <AmiBlitz3.ab2@27011>     If incDirP
0004B7BA <AmiBlitz3.ab2@27012>       incDir_.s = Peek.s(incDirP)
0004B7C0 <AmiBlitz3.ab2@27013>     Else
0004B82A <AmiBlitz3.ab2@27014>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0004B8AA <AmiBlitz3.ab2@27016>     incFile.s = dos_AddPart{incDir_,incString}
0004B8DC <AmiBlitz3.ab2@27017>     incLock.l = ab3_GetIncludeLock{incFile}
0004B8F0 <AmiBlitz3.ab2@27020>   If incLock = False ; not found => check relative to current source
0004B908 <AmiBlitz3.ab2@27021>     incDepth.l = Peek.w(?ininclude)-1
0004B92E <AmiBlitz3.ab2@27022>     If incDepth >= 0 AND incDepth < #maxincludes
0004B98E <AmiBlitz3.ab2@27023>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
0004BA0E <AmiBlitz3.ab2@27024>       incFile.s = dos_AddPart{incDir_,incString}
0004BA40 <AmiBlitz3.ab2@27025>       incLock.l = ab3_GetIncludeLock{incFile}
0004BA54 <AmiBlitz3.ab2@27029>   If incLock = False ; still not found => check default Include Directory and name only
0004BA64 <AmiBlitz3.ab2@27030>     incDirP.l = Peek.l(?incd)
0004BA6E <AmiBlitz3.ab2@27031>     If incDirP
0004BA96 <AmiBlitz3.ab2@27032>       incDir_.s = Peek.s(incDirP)
0004BA9C <AmiBlitz3.ab2@27033>     Else
0004BB06 <AmiBlitz3.ab2@27034>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0004BBB4 <AmiBlitz3.ab2@27036>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
0004BBE6 <AmiBlitz3.ab2@27037>     incLock.l = ab3_GetIncludeLock{incFile}
0004BBF0 <AmiBlitz3.ab2@27040>   If incLock
0004BC06 <AmiBlitz3.ab2@27041>     MaxLen incFile = 1024
0004BC2A <AmiBlitz3.ab2@27042>     NameFromLock_ incLock,&incFile,1024
0004BC54 <AmiBlitz3.ab2@27043>     incFile = Peek.s(&incFile)
0004BC8C <AmiBlitz3.ab2@27044>     Poke$ ?ptr_parameterstore,incFile
0004BCA0 <AmiBlitz3.ab2@27045>     i = FLen(incFile)
0004BCAC <AmiBlitz3.ab2@27046>     GetReg d0,i
0004BCB2 <AmiBlitz3.ab2@27047>     MOVE.l d0,tempstore
0004BCC2 <AmiBlitz3.ab2@27048>     UnLock_ incLock
0004BCE0 <AmiBlitz3.ab2@27051>   !asm
0004BCE6 <AmiBlitz3.ab2@27052>   TST.l tempstore
0004BCEA <AmiBlitz3.ab2@27053>    BEQ 'l1
0004BCF0 <AmiBlitz3.ab2@27054>   MOVE.l tempstore,d2
0004BCF2 <AmiBlitz3.ab2@27057> RTS
0004BD1C <AmiBlitz3.ab2@27061>   !basic
0004BD46 <AmiBlitz3.ab2@27062>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
0004BD74 <AmiBlitz3.ab2@27063>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0004BD78 <AmiBlitz3.ab2@27064>   incDirP.l   = PutD0                                       ;    "
0004BDA0 <AmiBlitz3.ab2@27065>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0004BE20 <AmiBlitz3.ab2@27066>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0004BE40 <AmiBlitz3.ab2@27067>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
0004BE54 <AmiBlitz3.ab2@27069>   If incLock = False                                        ; not found => try orignal string only to find
0004BE74 <AmiBlitz3.ab2@27070>     incLock.l = Lock_(&incString,#ACCESS_READ)
0004BE7E <AmiBlitz3.ab2@27073>   If incLock                                                ; found => store full path
0004BE94 <AmiBlitz3.ab2@27074>     MaxLen incFile = 1024
0004BEB8 <AmiBlitz3.ab2@27075>     NameFromLock_ incLock,&incFile,1024
0004BEE2 <AmiBlitz3.ab2@27076>     incFile = Peek.s(&incFile)
0004BF1A <AmiBlitz3.ab2@27077>     Poke$ ?ptr_parameterstore,incFile
0004BF26 <AmiBlitz3.ab2@27080> 
0004BF44 <AmiBlitz3.ab2@27081>   !asm
0004BF46 <AmiBlitz3.ab2@27082> RTS
0004BF4C <AmiBlitz3.ab2@27093>   JSR Aclearallvars
0004BF52 <AmiBlitz3.ab2@27094>   JSR free_unusedfunctions
0004BF5C <AmiBlitz3.ab2@27109>   MOVE.l #"NORE",reqmode
0004BF62 <AmiBlitz3.ab2@27110> JSR handle_compileerror
0004BF64 <AmiBlitz3.ab2@27113>   MOVE.l d0,-(a7)
0004BF66 <AmiBlitz3.ab2@27114>   MOVE.l a5,d0
0004BF70 <AmiBlitz3.ab2@27115>   !basica7
0004BF74 <AmiBlitz3.ab2@27116>   i.l = PutD0
0004BF7E <AmiBlitz3.ab2@27117>   If i
0004BFA6 <AmiBlitz3.ab2@27118>     a$ = Peek$(i)
0004BFD8 <AmiBlitz3.ab2@27119>     b$ = Peeks$(i-7,7)
0004C110 <AmiBlitz3.ab2@27121> 
0004C116 <AmiBlitz3.ab2@27122>     MOVE.l d0,result
0004C11A <AmiBlitz3.ab2@27124>   !asma7
0004C11C <AmiBlitz3.ab2@27125>   MOVE.l (a7)+,d0
0004C11E <AmiBlitz3.ab2@27126> RTS
0004C148 <AmiBlitz3.ab2@27130>   !basic
0004C176 <AmiBlitz3.ab2@27131>   !ComData_LEA{comStr_CurrentDir,D0}
0004C17A <AmiBlitz3.ab2@27132>   currentDirP.l = PutD0
0004C1A8 <AmiBlitz3.ab2@27134>   !ComData_LEA{comStr_SourceName,D0}
0004C1AC <AmiBlitz3.ab2@27135>   fileNameP.l = PutD0
0004C1D4 <AmiBlitz3.ab2@27137>   check_dirname$  = Peek$(currentDirP)
0004C1FC <AmiBlitz3.ab2@27138>   check_filename$ = Peek$(fileNameP)
0004C282 <AmiBlitz3.ab2@27139>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0004C288 <AmiBlitz3.ab2@27140>     JSR free_unusedfunctions
0004C2D2 <AmiBlitz3.ab2@27142>   olddirname$ = Peek$(check_dirname$)
0004C31C <AmiBlitz3.ab2@27143>   oldfilename$ = Peek$(check_filename$)
0004C346 <AmiBlitz3.ab2@27144>   For i = 0 To #maxincludes-1
0004C35A <AmiBlitz3.ab2@27145>     incline(i) = 0
0004C36A <AmiBlitz3.ab2@27146>   Next
0004C388 <AmiBlitz3.ab2@27147>   !asm
0004C38A <AmiBlitz3.ab2@27148> RTS
0004C38C <AmiBlitz3.ab2@27152>   MOVEQ #0,d1
0004C38E <AmiBlitz3.ab2@27155>   MOVE.b (a5)+,d0
0004C392 <AmiBlitz3.ab2@27156>   BEQ 'er1
0004C396 <AmiBlitz3.ab2@27157>   CMP.b #$20,d0
0004C39A <AmiBlitz3.ab2@27158>   BEQ 'l1
0004C39C <AmiBlitz3.ab2@27159>   ADDQ #1,d1
0004C3A0 <AmiBlitz3.ab2@27160>   CMP.b #$22,d0
0004C3A4 <AmiBlitz3.ab2@27161>   BNE 'l1
0004C3A6 <AmiBlitz3.ab2@27162> RTS
0004C3AC <AmiBlitz3.ab2@27165> JMP syntaxerr
0004C3D0 <AmiBlitz3.ab2@27176> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0004C3EE <AmiBlitz3.ab2@27177> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0004C3F4 <AmiBlitz3.ab2@27182>   TST.b exdebug
0004C3F8 <AmiBlitz3.ab2@27183>   BNE 'l10
0004C3FE <AmiBlitz3.ab2@27184>   MOVE.l #$4e71,d1
0004C404 <AmiBlitz3.ab2@27185>   JSR writeword
0004C40A <AmiBlitz3.ab2@27186>   MOVE.l destpointer,d0
0004C40C <AmiBlitz3.ab2@27187>   MOVE.l d0,d1
0004C40E <AmiBlitz3.ab2@27188>   ADDQ.l #3,d1
0004C414 <AmiBlitz3.ab2@27189>   AND.l #$fffffffc,d1
0004C41A <AmiBlitz3.ab2@27190>   MOVE.l d1,destpointer
0004C420 <AmiBlitz3.ab2@27191>   SUB.l destpointer,d0
0004C424 <AmiBlitz3.ab2@27192>   BEQ 'lnf1
0004C42E <AmiBlitz3.ab2@27193>   CMP.l #-1,bssstart
0004C432 <AmiBlitz3.ab2@27194>   BNE 'lnf1
0004C43C <AmiBlitz3.ab2@27195>   CMP.l #-1,chipstart
0004C440 <AmiBlitz3.ab2@27196>   BNE 'lnf1
0004C446 <AmiBlitz3.ab2@27197>   MOVE.l destpointer,a4
0004C44C <AmiBlitz3.ab2@27198>   TST.w dontwrite
0004C450 <AmiBlitz3.ab2@27199>   BNE 'lnf1
0004C456 <AmiBlitz3.ab2@27200>   MOVE.w #$4e71,-2(a4)
0004C460 <AmiBlitz3.ab2@27203>   CMP.l #-1,bssstart
0004C464 <AmiBlitz3.ab2@27204>   BEQ 'l11
0004C46A <AmiBlitz3.ab2@27205>   MOVE.l #erro1t,-(a7)
0004C470 <AmiBlitz3.ab2@27206> JMP handle_compileerror
0004C47A <AmiBlitz3.ab2@27209>   MOVE.l destpointer,bssstart
0004C482 <AmiBlitz3.ab2@27210>   MOVE.b #1,bssmode
0004C488 <AmiBlitz3.ab2@27213>   TST.b chipmode
0004C48C <AmiBlitz3.ab2@27214>   BEQ 'l10
0004C496 <AmiBlitz3.ab2@27215>   MOVE.l destpointer,chipend
0004C49C <AmiBlitz3.ab2@27216>   CLR.b chipmode
0004C4A2 <AmiBlitz3.ab2@27219>   JSR get1bytemain
0004C4A4 <AmiBlitz3.ab2@27220> RTS
0004C4AA <AmiBlitz3.ab2@27224>    TST.b exdebug
0004C4AE <AmiBlitz3.ab2@27225>   BNE 'x1
0004C4B4 <AmiBlitz3.ab2@27226>   MOVE.l destpointer,d0
0004C4BA <AmiBlitz3.ab2@27227>   MOVE.l d0,realbssend
0004C4C0 <AmiBlitz3.ab2@27228>   MOVE.l #$4e71,d1
0004C4C6 <AmiBlitz3.ab2@27229>   JSR writeword
0004C4CC <AmiBlitz3.ab2@27230>   MOVE.l destpointer,d0
0004C4CE <AmiBlitz3.ab2@27231>   MOVE.l d0,d1
0004C4D0 <AmiBlitz3.ab2@27232>   ADDQ.l #3,d1
0004C4D6 <AmiBlitz3.ab2@27233>   AND.l #$fffffffc,d1
0004C4DC <AmiBlitz3.ab2@27234>   MOVE.l d1,destpointer
0004C4E2 <AmiBlitz3.ab2@27235>   SUB.l destpointer,d0
0004C4E6 <AmiBlitz3.ab2@27236>   BEQ 'lnf1
0004C4EC <AmiBlitz3.ab2@27237>   MOVE.l destpointer,a4
0004C4F6 <AmiBlitz3.ab2@27238>   CMP.l #-1,bssstart
0004C4FA <AmiBlitz3.ab2@27239>   BNE 'lnf1
0004C504 <AmiBlitz3.ab2@27240>   CMP.l #-1,chipstart
0004C508 <AmiBlitz3.ab2@27241>   BNE 'lnf1
0004C50E <AmiBlitz3.ab2@27242>   TST.w dontwrite
0004C512 <AmiBlitz3.ab2@27243>   BNE 'lnf1
0004C518 <AmiBlitz3.ab2@27244>   MOVE.w #$4e71,-2(a4)
0004C51E <AmiBlitz3.ab2@27247>   TST.b bssmode
0004C522 <AmiBlitz3.ab2@27248>   BEQ 'l10
0004C52C <AmiBlitz3.ab2@27249>   MOVE.l destpointer,bssend
0004C532 <AmiBlitz3.ab2@27250>   CLR.b bssmode
0004C53C <AmiBlitz3.ab2@27255>   CMP.l #-1,chipstart
0004C540 <AmiBlitz3.ab2@27256>   BEQ 'l11
0004C546 <AmiBlitz3.ab2@27257>   MOVE.l #erro1t,-(a7)
0004C54C <AmiBlitz3.ab2@27258> JMP handle_compileerror
0004C556 <AmiBlitz3.ab2@27261>   MOVE.l destpointer,chipstart
0004C55E <AmiBlitz3.ab2@27262>   MOVE.b #1,chipmode
0004C564 <AmiBlitz3.ab2@27265>   JSR get1bytemain
0004C566 <AmiBlitz3.ab2@27266> RTS
0004C590 <AmiBlitz3.ab2@27270>   !basic
0004C5A2 <AmiBlitz3.ab2@27280>   i.l = Peek.w(?ininclude)
0004C5C8 <AmiBlitz3.ab2@27281>   If i>=0 AND i<#maxincludes
0004C5FA <AmiBlitz3.ab2@27282>     incdim (i) = Peek.s(?includetemp2)
0004C614 <AmiBlitz3.ab2@27283>     incline(i) = Peek.l(?includeline)
0004C61E <AmiBlitz3.ab2@27285>     If CLIMode
0004C6CC <AmiBlitz3.ab2@27286>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
0004C6EA <AmiBlitz3.ab2@27290>   !asm
0004C6EC <AmiBlitz3.ab2@27291> RTS
0004C716 <AmiBlitz3.ab2@27295>   !basic
0004C728 <AmiBlitz3.ab2@27296>   i.l = Peek.w(?ininclude)
0004C74E <AmiBlitz3.ab2@27297>   If i>=0 AND i<#maxincludes
0004C77E <AmiBlitz3.ab2@27298>     incdim (i) = ""
0004C792 <AmiBlitz3.ab2@27299>     incline(i) = 0
0004C7CA <AmiBlitz3.ab2@27300>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
0004C7E8 <AmiBlitz3.ab2@27302>   !asm
0004C7EA <AmiBlitz3.ab2@27303> RTS
0004C7F0 <AmiBlitz3.ab2@27307>   LEA replacedat,a0
0004C7F4 <AmiBlitz3.ab2@27308>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
0004C7F6 <AmiBlitz3.ab2@27309> RTS
0004C7FC <AmiBlitz3.ab2@27313>   TST.b fpu
0004C800 <AmiBlitz3.ab2@27314>   BEQ 'l1
0004C80A <AmiBlitz3.ab2@27317>   MOVE.l destpointer,newinitaddr
0004C810 <AmiBlitz3.ab2@27318>   JSR writeword
0004C816 <AmiBlitz3.ab2@27319>   JSR writelong
0004C818 <AmiBlitz3.ab2@27320> RTS
0004C81A <AmiBlitz3.ab2@27325>   TST.b (a5)
0004C81E <AmiBlitz3.ab2@27326>    BEQ.s 'll20
0004C822 <AmiBlitz3.ab2@27327>   CMP.b #$20,(a5)
0004C826 <AmiBlitz3.ab2@27328>    BNE.s 'll10
0004C828 <AmiBlitz3.ab2@27329>   ADDQ.l #1,a5
0004C82C <AmiBlitz3.ab2@27330> BRA.s 'll21
0004C830 <AmiBlitz3.ab2@27333>   CMP.b #";",(a5)
0004C834 <AmiBlitz3.ab2@27334>   BNE.s 'll20
0004C836 <AmiBlitz3.ab2@27337>   TST.b (a5)+
0004C83A <AmiBlitz3.ab2@27338>   BEQ.s 'll23
0004C83E <AmiBlitz3.ab2@27339> BRA.s 'll25
0004C840 <AmiBlitz3.ab2@27342>   SUBQ.l #1,a5
0004C842 <AmiBlitz3.ab2@27345> RTS
0004C846 <AmiBlitz3.ab2@27349>   MOVEM.l a2/d2,-(a7)
0004C848 <AmiBlitz3.ab2@27350>   MOVEQ #0,d2
0004C84E <AmiBlitz3.ab2@27351>   LEA ptr_parameterstore,a0
0004C854 <AmiBlitz3.ab2@27352>   LEA chartab,a2
0004C856 <AmiBlitz3.ab2@27355>   MOVE.b (a5),d0
0004C85A <AmiBlitz3.ab2@27356>   TST.b 0(a2,d0)
0004C85E <AmiBlitz3.ab2@27357>   BNE 'l10
0004C860 <AmiBlitz3.ab2@27358>   ADDQ.l #1,a5
0004C862 <AmiBlitz3.ab2@27359>   MOVE.b d0,(a0)+
0004C864 <AmiBlitz3.ab2@27360>   ADDQ.l #1,d2
0004C868 <AmiBlitz3.ab2@27361> BRA fc2
0004C86A <AmiBlitz3.ab2@27364>   CLR.b (a0)+
0004C870 <AmiBlitz3.ab2@27365>   JSR findlabel2
0004C872 <AmiBlitz3.ab2@27366>   MOVE.l a2,a0
0004C876 <AmiBlitz3.ab2@27367>   MOVEM.l (a7)+,a2/d2
0004C878 <AmiBlitz3.ab2@27368> RTS
0004C87A <AmiBlitz3.ab2@27372>   TST.l d0
0004C87E <AmiBlitz3.ab2@27373>   BNE 'l10
0004C884 <AmiBlitz3.ab2@27374>     MOVE.l #syntax_,-(a7)
0004C88A <AmiBlitz3.ab2@27375> JMP handle_compileerror
0004C890 <AmiBlitz3.ab2@27378>   CMP.l #1,d0
0004C894 <AmiBlitz3.ab2@27379>   BNE 'l20
0004C89A <AmiBlitz3.ab2@27380>     MOVE.l #overflow,-(a7)
0004C8A0 <AmiBlitz3.ab2@27381> JMP handle_compileerror
0004C8A2 <AmiBlitz3.ab2@27384>   ADD.l a2,d0
0004C8A4 <AmiBlitz3.ab2@27385>   MOVE.l d0,-(a7)
0004C8AA <AmiBlitz3.ab2@27386> JMP handle_compileerror
0004C8B0 <AmiBlitz3.ab2@27390>   JMP _return
0004C8B6 <AmiBlitz3.ab2@27391>   JMP _return
0004C8BC <AmiBlitz3.ab2@27392>   JMP _return
0004C8C2 <AmiBlitz3.ab2@27393>   JMP _return
0004C8C8 <AmiBlitz3.ab2@27394>   JMP _return
0004C8CE <AmiBlitz3.ab2@27395>   JMP _return
0004C8D4 <AmiBlitz3.ab2@27396>   JMP _return
0004C8DA <AmiBlitz3.ab2@27397>   JMP _return
0004C8E0 <AmiBlitz3.ab2@27398>   JMP _return
0004C8E6 <AmiBlitz3.ab2@27399>   JMP _return
0004C8EC <AmiBlitz3.ab2@27400>   JMP Atokejsr
0004C8F2 <AmiBlitz3.ab2@27401>   JMP writeinit
0004C8F8 <AmiBlitz3.ab2@27402>   JMP macroexecute
0004C8FE <AmiBlitz3.ab2@27403>   JMP findnext
0004C904 <AmiBlitz3.ab2@27404>   JMP replacelib
0004C90A <AmiBlitz3.ab2@27405>   JMP findconstant2
0004C910 <AmiBlitz3.ab2@27406>   JMP findchar                                             ;char in d1
0004C916 <AmiBlitz3.ab2@27407>   JMP stripspaces
0004C91C <AmiBlitz3.ab2@27408>   JMP calc                                                 ;d0 varmode
0004C922 <AmiBlitz3.ab2@27409>   JMP error
0004C928 <AmiBlitz3.ab2@27410>   JMP writelong                                            ;d1 value
0004C92E <AmiBlitz3.ab2@27411>   JMP writeword                                            ;d1 value
0004C934 <AmiBlitz3.ab2@27412>   JMP writebyte                                            ;d1 value
0004C93A <AmiBlitz3.ab2@27413> JMP exit
0004C93E <AmiBlitz3.ab2@27417>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
0004C940 <AmiBlitz3.ab2@27420>   fast            Dc.w 0
0004C942 <AmiBlitz3.ab2@27421>   fpu             Dc.w 0
0004C944 <AmiBlitz3.ab2@27422>   newsyntax       Dc.w 0
0004C945 <AmiBlitz3.ab2@27424>   optistring      Dc.b 0
0004C946 <AmiBlitz3.ab2@27425>   optistring2     Dc.b 0
0004C947 <AmiBlitz3.ab2@27426>   optiarray       Dc.b 0
0004C948 <AmiBlitz3.ab2@27427>   quickadd        Dc.b 0
0004C94A <AmiBlitz3.ab2@27428>   newmode         Dc.w 0
0004C94C <AmiBlitz3.ab2@27429>   mode            Dc.w 0
0004C94E <AmiBlitz3.ab2@27430>   string1         Dc.w 0
0004C950 <AmiBlitz3.ab2@27431>   load_var_size   Dc.w 0
0004C952 <AmiBlitz3.ab2@27432>   load_var_reg    Dc.w 0
0004C956 <AmiBlitz3.ab2@27433>   load_var_addr   Dc.l 0
0004C958 <AmiBlitz3.ab2@27434>   imm_size        Dc.w 0
0004C95A <AmiBlitz3.ab2@27435>   imm_reg         Dc.w 0
0004C95E <AmiBlitz3.ab2@27436>   imm_addr        Dc.l 0
0004C95F <AmiBlitz3.ab2@27437>   iee             Dc.b 0
0004C960 <AmiBlitz3.ab2@27438>   _dcb            Dc.b 0
0004C964 <AmiBlitz3.ab2@27439>   nohunkoffset    Dc.l 0
0004C968 <AmiBlitz3.ab2@27442> teddata:        Dc.l tokens
0004C96C <AmiBlitz3.ab2@27443>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
0004C970 <AmiBlitz3.ab2@27444>                 Dc.l read_xtrafile
0004C974 <AmiBlitz3.ab2@27445>                 Dc.l write_xtrafile
0004C978 <AmiBlitz3.ab2@27446>                 Dc.l call_menuentry                        ; compile AND RUN ?
0004C97C <AmiBlitz3.ab2@27447>                 Dc.l 0
0004C980 <AmiBlitz3.ab2@27448>                 Dc.b ":",34,".;"
0004C984 <AmiBlitz3.ab2@27449>                 Dc.l "NEW1"
0004C988 <AmiBlitz3.ab2@27450>                 Dc.l newtypebase
0004C98C <AmiBlitz3.ab2@27451> realconstbase:  Dc.l labelbase
0004C990 <AmiBlitz3.ab2@27452> deflib          Dc.l 0
0004C994 <AmiBlitz3.ab2@27453> incd            Dc.l 0
0004C998 <AmiBlitz3.ab2@27454>                 Dc.l 0
0004C99C <AmiBlitz3.ab2@27455>                 Dc.l 0
0004C9A0 <AmiBlitz3.ab2@27456>                 Dc.l 0
0004C9A2 <AmiBlitz3.ab2@27457> _return         RTS
0004C9A3 <AmiBlitz3.ab2@27458>                 Dc.b 0
0004CDA3 <AmiBlitz3.ab2@27459> chartab2        Ds.l 256
0004CDA7 <AmiBlitz3.ab2@27460> codeend         Dc.l 0
0004CDAB <AmiBlitz3.ab2@27461> hunkoffsetnum   Dc.l 0
0004CDAF <AmiBlitz3.ab2@27462> chipsize        Dc.l 0
0004CDB3 <AmiBlitz3.ab2@27463> bsssize         Dc.l 0
0004CDB7 <AmiBlitz3.ab2@27464> bssstart        Dc.l -1
0004CDBB <AmiBlitz3.ab2@27465> bssend          Dc.l -1
0004CDBF <AmiBlitz3.ab2@27466> chipstart       Dc.l -1
0004CDC3 <AmiBlitz3.ab2@27467> chipend         Dc.l -1
0004CDC4 <AmiBlitz3.ab2@27468> bssmode         Dc.b 0
0004CDC5 <AmiBlitz3.ab2@27469> chipmode        Dc.b 0
0004CDC6 <AmiBlitz3.ab2@27470> newhunk         Dc.b 0
0004CDCA <AmiBlitz3.ab2@27471> bssnum          Dc.l 0
0004CDCE <AmiBlitz3.ab2@27472> chipnum         Dc.l 0
0004CDD2 <AmiBlitz3.ab2@27473> lastinstruction Dc.l 0
0004CDD6 <AmiBlitz3.ab2@27474> lastinstructionaddr Dc.l 0
0004CDEA <AmiBlitz3.ab2@27475> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0004CDEE <AmiBlitz3.ab2@27476> tstsize1b:      Ds.l 1
0004CDF2 <AmiBlitz3.ab2@27477> bsssize2        Dc.l 1
0004CDF6 <AmiBlitz3.ab2@27478>                 Dc.l $03E9
0004CDFA <AmiBlitz3.ab2@27479> tstsize2b:      Dc.l $100
0004CE0E <AmiBlitz3.ab2@27480> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
0004CE12 <AmiBlitz3.ab2@27481> tstsize1c:      Ds.l 1
0004CE16 <AmiBlitz3.ab2@27482> bsssize3        Dc.l 1
0004CE1A <AmiBlitz3.ab2@27483> chipsize2       Dc.l 1
0004CE1E <AmiBlitz3.ab2@27484>                 Dc.l $3e9
0004CE22 <AmiBlitz3.ab2@27485> tstsize2c       Dc.l 0
0004CE32 <AmiBlitz3.ab2@27486> hunkend         Dc.l $3f2,$3eb,0,$3f2
0004CE42 <AmiBlitz3.ab2@27487> hunkend2        Dc.l $3f2,$3ea,0,$3f2
0004CE49 <AmiBlitz3.ab2@27488> strcpy          Dc.b "strcpy",0
0004CE50 <AmiBlitz3.ab2@27489> strcmp          Dc.b "strcmp",0
0004CE57 <AmiBlitz3.ab2@27490> strvar          Dc.b "strvar",0
0004CE5C <AmiBlitz3.ab2@27491> qmul            Dc.b "qmul",0
0004CE61 <AmiBlitz3.ab2@27492> qdiv            Dc.b "qdiv",0
0004CE68 <AmiBlitz3.ab2@27493> _MaxLen         Dc.b "maxlen",0
0004CE6D <AmiBlitz3.ab2@27494> notf            Dc.b "????",0
0004CE90 <AmiBlitz3.ab2@27496> errtext         Dc.b "only reg addressing Mode supported",0
0004CEBA <AmiBlitz3.ab2@27497> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0004CEFC <AmiBlitz3.ab2@27498> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0004CEFE <AmiBlitz3.ab2@27499> peeksize        Dc.w 0
0004CF02 <AmiBlitz3.ab2@27501> mainstart       Dc.l 0
0004CF03 <AmiBlitz3.ab2@27503> infunctioncode  Dc.b 0
0004CF05 <AmiBlitz3.ab2@27504> regnumstore     Dc.w 0
0004CF32 <AmiBlitz3.ab2@27505>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0004CF3A <AmiBlitz3.ab2@27506> testcode        Dc.b "print i",0
0004CF9E <AmiBlitz3.ab2@27507>                 Ds.b 100
0004CFAC <AmiBlitz3.ab2@27508> devo            Dc.b "developobject",0 : Even
0004CFBE <AmiBlitz3.ab2@27509> autostorename   Dc.b "__autoconstantnum",0
0004CFC8 <AmiBlitz3.ab2@27510> _include        Dc.b "__include",0
0004CFD0 <AmiBlitz3.ab2@27511> _debug          Dc.b "__debug",0
0004CFD4 <AmiBlitz3.ab2@27512> unusedfunc      Dc.l 0
0004CFD6 <AmiBlitz3.ab2@27516> MOVE.l a0,d0
0004D000 <AmiBlitz3.ab2@27517> !basic
0004D004 <AmiBlitz3.ab2@27518> *olderror.l= PutD0
0004D05E <AmiBlitz3.ab2@27519> 
0004D092 <AmiBlitz3.ab2@27520> error_type$ = error$
0004D12E <AmiBlitz3.ab2@27521> 
0004D142 <AmiBlitz3.ab2@27522> If Peek.l (?beforeparameterfetch)
0004D158 <AmiBlitz3.ab2@27523>   MaxLen detokenline.s = 65536
0004D19A <AmiBlitz3.ab2@27524>  !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0004D1AA <AmiBlitz3.ab2@27525>  *tn.preprocessor = Peek.l(?include_preprocessor)
0004D1D4 <AmiBlitz3.ab2@27526>   written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0004D1FC <AmiBlitz3.ab2@27527>   If written>0 Then Poke.b &detokenline+written,0
0004D226 <AmiBlitz3.ab2@27528>   sourceLineText.s = Peek.s(&detokenline)
0004D22C <AmiBlitz3.ab2@27529> Else
0004D254 <AmiBlitz3.ab2@27530>   sourceLineText = "NULL"
0004D288 <AmiBlitz3.ab2@27532> error_source$ = sourceLineText
0004D2DA <AmiBlitz3.ab2@27533> error$=error$+sourceLineText
0004D2E0 <AmiBlitz3.ab2@27534> GetD0 &error$
0004D2FE <AmiBlitz3.ab2@27535> !asm
0004D300 <AmiBlitz3.ab2@27536> MOVE.l d0,a0
0004D302 <AmiBlitz3.ab2@27537> RTS
0004D304 <AmiBlitz3.ab2@27541>   MOVE.l a0,-(a7)
0004D306 <AmiBlitz3.ab2@27542>   MOVE.l a0,d0
0004D308 <AmiBlitz3.ab2@27543>   MOVE.l a5,a0                                             ;macro title
0004D332 <AmiBlitz3.ab2@27544>   !basic
0004D336 <AmiBlitz3.ab2@27545>   i = PutD0
0004D338 <AmiBlitz3.ab2@27546>   MOVEQ #20,d0
0004D33A <AmiBlitz3.ab2@27549>     MOVE.b -(a0),d1
0004D33E <AmiBlitz3.ab2@27550>     BEQ 'l1
0004D342 <AmiBlitz3.ab2@27551>     CMP.b #":",d1
0004D346 <AmiBlitz3.ab2@27552>     BEQ 'l1
0004D348 <AmiBlitz3.ab2@27553>     SUBQ.l #1,d0
0004D34C <AmiBlitz3.ab2@27554>     BNE 'l2
0004D34E <AmiBlitz3.ab2@27557>   ADDQ #1,a0
0004D350 <AmiBlitz3.ab2@27558>   MOVE.l a0,d0
0004D354 <AmiBlitz3.ab2@27559>   i2.l = PutD0
0004D370 <AmiBlitz3.ab2@27560>   If Peek.w (?ininclude)>0
0004D3CA <AmiBlitz3.ab2@27561>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
0004D3DA <AmiBlitz3.ab2@27562>     errorline.l = Peek.l(?includeline);-1
0004D402 <AmiBlitz3.ab2@27563>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0004D42C <AmiBlitz3.ab2@27564>     errorfile.s = Peek.s(?includetemp2)
0004D432 <AmiBlitz3.ab2@27565>   Else
0004D46A <AmiBlitz3.ab2@27566>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0004D480 <AmiBlitz3.ab2@27567>     errorline.l = Peek.l(?compilelinecounter) + 1
0004D4B4 <AmiBlitz3.ab2@27568>     errorfile.s = cli_sourcefile
0004D4BE <AmiBlitz3.ab2@27571>   If i
0004D562 <AmiBlitz3.ab2@27572>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
0004D5E0 <AmiBlitz3.ab2@27573>     errortext.s = Replace$(errortext,"\n","\\0a")
0004D5E6 <AmiBlitz3.ab2@27574>   Else
0004D60E <AmiBlitz3.ab2@27575>     errortext.s = "???"
0004D786 <AmiBlitz3.ab2@27578>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
0004D84E <AmiBlitz3.ab2@27579>   NPrint "  ",error_type$,"\\n  ",error_source$
0004D86C <AmiBlitz3.ab2@27583>   !asm
0004D86E <AmiBlitz3.ab2@27584>   MOVE.l (a7)+,a0
0004D870 <AmiBlitz3.ab2@27585> RTS
0004D872 <AmiBlitz3.ab2@27589>   MOVE.l a0,-(a7)
0004D874 <AmiBlitz3.ab2@27590>   MOVE.l a0,d0
0004D876 <AmiBlitz3.ab2@27591>   MOVE.l a5,a0                                             ;macro title
0004D8A0 <AmiBlitz3.ab2@27592>   !basic
0004D8A4 <AmiBlitz3.ab2@27593>   i = PutD0
0004D8A6 <AmiBlitz3.ab2@27594>   MOVEQ #20,d0
0004D8A8 <AmiBlitz3.ab2@27597>     MOVE.b -(a0),d1
0004D8AC <AmiBlitz3.ab2@27598>     BEQ 'l1
0004D8B0 <AmiBlitz3.ab2@27599>     CMP.b #":",d1
0004D8B4 <AmiBlitz3.ab2@27600>     BEQ 'l1
0004D8B6 <AmiBlitz3.ab2@27601>     SUBQ.l #1,d0
0004D8BA <AmiBlitz3.ab2@27602>     BNE 'l2
0004D8BC <AmiBlitz3.ab2@27605>   ADDQ #1,a0
0004D8BE <AmiBlitz3.ab2@27606>   MOVE.l a0,d0
0004D8C2 <AmiBlitz3.ab2@27607>   i2.l = PutD0
0004D946 <AmiBlitz3.ab2@27608>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
0004D95A <AmiBlitz3.ab2@27609>   If fid <> -1
0004D976 <AmiBlitz3.ab2@27610>     If Peek.w (?ininclude)>0
0004D9D0 <AmiBlitz3.ab2@27611>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
0004D9D6 <AmiBlitz3.ab2@27612>     Else
0004DA02 <AmiBlitz3.ab2@27613>       Poke$(?includetemp2),""
0004DA2C <AmiBlitz3.ab2@27615>     a$ = Peek$(?includetemp2)
0004DA9E <AmiBlitz3.ab2@27616>     x$ = Replace$(Peek$(i),"\\0a","\n")
0004DAD0 <AmiBlitz3.ab2@27617>     file_WriteLine{fid,x$}
0004DB1A <AmiBlitz3.ab2@27618>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
0004DB46 <AmiBlitz3.ab2@27619>     If a$
0004DB78 <AmiBlitz3.ab2@27620>       file_WriteLine{fid,a$}
0004DBC2 <AmiBlitz3.ab2@27621>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
0004DBEA <AmiBlitz3.ab2@27622>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0004DBF0 <AmiBlitz3.ab2@27623>     Else
0004DC16 <AmiBlitz3.ab2@27624>       file_WriteLine{fid,"none"}
0004DC46 <AmiBlitz3.ab2@27626>     file_WriteLine{fid,Peek$(i2)}
0004DC9C <AmiBlitz3.ab2@27627>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0004DCE6 <AmiBlitz3.ab2@27628>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0004DCF0 <AmiBlitz3.ab2@27629>     file_Close{fid}
0004DD0E <AmiBlitz3.ab2@27631>   !asm
0004DD10 <AmiBlitz3.ab2@27632>   MOVE.l (a7)+,a0
0004DD12 <AmiBlitz3.ab2@27633> RTS
0004DD3C <AmiBlitz3.ab2@27637>   !basic
0004DD40 <AmiBlitz3.ab2@27638>   progress.l     = PutD0
0004DD52 <AmiBlitz3.ab2@27639>   total.l        = Peek.w(?progressbar_width)
0004DD70 <AmiBlitz3.ab2@27640>   calcpro        = (progress * 100) / total +1
0004DD82 <AmiBlitz3.ab2@27641>   pass.l         = Peek.w(?pass)
0004DD94 <AmiBlitz3.ab2@27642>   typ.l          = Peek.w(?compiler_job)
0004DDB2 <AmiBlitz3.ab2@27645> If (pass><pass_old OR typ><typ_old)
0004DDC0 <AmiBlitz3.ab2@27647>     If pass_old><pass
0004DE5C <AmiBlitz3.ab2@27648>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
0004DEB2 <AmiBlitz3.ab2@27649>       If cli_verbose>=2 Then NPrint passtatusstr
0004DEB8 <AmiBlitz3.ab2@27652>     pass_old = pass
0004DEBE <AmiBlitz3.ab2@27653>     typ_old  = typ
0004DEC4 <AmiBlitz3.ab2@27654>     update_comstatus_gui = True
0004DED6 <AmiBlitz3.ab2@27655>     If typ=0
0004DFB6 <AmiBlitz3.ab2@27656>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0004DFBE <AmiBlitz3.ab2@27657>       calcpro = 0  ; set gauge to 0
0004DFD0 <AmiBlitz3.ab2@27659>     If typ=1
0004E0B0 <AmiBlitz3.ab2@27660>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0004E0B8 <AmiBlitz3.ab2@27661>       calcpro = 0  ; set gauge to 0
0004E10E <AmiBlitz3.ab2@27664>     If cli_verbose>=3 Then NPrint comstatusstr
0004E11C <AmiBlitz3.ab2@27667>   If (calcpro >< calcpro_old)
0004E170 <AmiBlitz3.ab2@27668>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0004E176 <AmiBlitz3.ab2@27669>     calcpro_old = calcpro
0004E17C <AmiBlitz3.ab2@27670>     update_comstatus_gui = True
0004E196 <AmiBlitz3.ab2@27673>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0004E1B4 <AmiBlitz3.ab2@27674>     !asm
0004E1E6 <AmiBlitz3.ab2@27675> 
0004E210 <AmiBlitz3.ab2@27676>     !basic
0004E216 <AmiBlitz3.ab2@27677>     update_comstatus_gui  = False ; because we update the gui
0004E234 <AmiBlitz3.ab2@27679>   !asm
0004E236 <AmiBlitz3.ab2@27680> RTS
0004E23C <AmiBlitz3.ab2@27685>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0004E242 <AmiBlitz3.ab2@27686>   LEA maxobjects_value,A3                                  ;current value
0004E248 <AmiBlitz3.ab2@27687>   MOVEA.l libpointer,A2
0004E24C <AmiBlitz3.ab2@27690>   CMPA.w #$0,A2
0004E250 <AmiBlitz3.ab2@27691>   BEQ.w menu4c__igotb
0004E252 <AmiBlitz3.ab2@27692>   MOVEA.l A2,A1
0004E256 <AmiBlitz3.ab2@27693>   ADDA.l $12(A1),A1
0004E25A <AmiBlitz3.ab2@27694>   TST.w -$2(A1)
0004E25E <AmiBlitz3.ab2@27695>   BEQ.w JL_0_FFF6b
0004E260 <AmiBlitz3.ab2@27696>   SUBQ.w #1,D5
0004E264 <AmiBlitz3.ab2@27697>   BMI.w JL_0_FFFCb
0004E266 <AmiBlitz3.ab2@27700>   MOVEA.l (A2),A2
0004E26A <AmiBlitz3.ab2@27701> BRA.w JL_0_FFDAb
0004E26E <AmiBlitz3.ab2@27704>   MOVE.w (A3),-$4(A1)
0004E270 <AmiBlitz3.ab2@27707> RTS
0004E276 <AmiBlitz3.ab2@27711>   MOVE.w debugnest,d0
0004E27C <AmiBlitz3.ab2@27712>   LEA storedebugmode, a0
0004E284 <AmiBlitz3.ab2@27713>   MOVE.b 0(a0,d0.w),debugmode
0004E28A <AmiBlitz3.ab2@27714>   TST.w debugnest
0004E28E <AmiBlitz3.ab2@27715>   BEQ JUMP_unpairrunerrs
0004E294 <AmiBlitz3.ab2@27716>   SUBQ.w #1,debugnest
0004E296 <AmiBlitz3.ab2@27717> RTS
0004E29C <AmiBlitz3.ab2@27720> JMP runerrsoverflow
0004E2A2 <AmiBlitz3.ab2@27723> JMP unpairrunerrs
0004E2AA <AmiBlitz3.ab2@27727>   BCHG #$7,use_debugger
0004E2B2 <AmiBlitz3.ab2@27729>   BTST #$7,use_debugger
0004E2B6 <AmiBlitz3.ab2@27730>   BNE 'debugon
0004E2BC <AmiBlitz3.ab2@27731>   CLR.w debugmode
0004E2C0 <AmiBlitz3.ab2@27732> BRA.b 'debugoff
0004E2C6 <AmiBlitz3.ab2@27735>   SNE debugmode
0004E2C8 <AmiBlitz3.ab2@27738>   MOVE.l a0,-(a7)
0004E300 <AmiBlitz3.ab2@27741>   !ComData_SetB{comByte_DebugMode,debugmode}
0004E302 <AmiBlitz3.ab2@27746>   MOVE.l (a7)+,a0
0004E304 <AmiBlitz3.ab2@27747> RTS
0004E30C <AmiBlitz3.ab2@27752>   BTST #$7,use_debugger
0004E310 <AmiBlitz3.ab2@27753>   BNE 'debugon
0004E316 <AmiBlitz3.ab2@27754>   CLR.w debugmode
0004E31A <AmiBlitz3.ab2@27755> BRA.b 'debugoff
0004E320 <AmiBlitz3.ab2@27758>   SNE debugmode
0004E322 <AmiBlitz3.ab2@27761> RTS
0004E328 <AmiBlitz3.ab2@27765>   ADDQ.w #1,debugnest
0004E32E <AmiBlitz3.ab2@27766>   MOVE.w debugnest,d0
0004E332 <AmiBlitz3.ab2@27767>   CMP.w #18,d0
0004E336 <AmiBlitz3.ab2@27768>    BGE JUMP_runerrsoverflow
0004E33C <AmiBlitz3.ab2@27769>   LEA storedebugmode, a0
0004E344 <AmiBlitz3.ab2@27770>   MOVE.b debugmode,0( a0,d0.w)
0004E34A <AmiBlitz3.ab2@27773>   SF debugmode
0004E34C <AmiBlitz3.ab2@27774> RTS
0004E3CC <AmiBlitz3.ab2@27777> usedpath:  Ds.l 32
0004E3D0 <AmiBlitz3.ab2@27781>   BEQ.w JUMP_syntaxerr
0004E3D6 <AmiBlitz3.ab2@27782>   LEA lastpath,A0
0004E3DA <AmiBlitz3.ab2@27783>   MOVEM.l a0-a1/d0,-(a7)
0004E3E0 <AmiBlitz3.ab2@27784>   LEA lastpath2,a1
0004E3E2 <AmiBlitz3.ab2@27787>     MOVE.b (a0)+,(a1)+
0004E3E6 <AmiBlitz3.ab2@27788>   BNE 'l2
0004E3EA <AmiBlitz3.ab2@27789>   MOVEM.l (a7)+,a0-a1/d0
0004E3EE <AmiBlitz3.ab2@27790>   LEA usedpath(PC),A0
0004E3F2 <AmiBlitz3.ab2@27791>   MOVEM.l a0-a1/d0,-(a7)
0004E3F8 <AmiBlitz3.ab2@27792>   LEA lastpath,a1
0004E3FA <AmiBlitz3.ab2@27795>     MOVE.b (a0)+,(a1)+
0004E3FE <AmiBlitz3.ab2@27796>   BNE 'l1
0004E402 <AmiBlitz3.ab2@27797>   MOVEM.l (a7)+,a0-a1/d0
0004E404 <AmiBlitz3.ab2@27800>   TST.w D0
0004E408 <AmiBlitz3.ab2@27801>    BMI.w JUMP_syntaxerr
0004E40A <AmiBlitz3.ab2@27802>   MOVE.b D0,(A0)+
0004E40E <AmiBlitz3.ab2@27803>   BSR.w JUMP_get1bytemain
0004E412 <AmiBlitz3.ab2@27804>    BNE.w JL_0_4AA8
0004E416 <AmiBlitz3.ab2@27805>   MOVE.b #$2,(A0)
0004E418 <AmiBlitz3.ab2@27806> RTS
0004E41C <AmiBlitz3.ab2@27810>   BEQ.w JUMP_syntaxerr
0004E422 <AmiBlitz3.ab2@27811>   LEA path2,A0
0004E424 <AmiBlitz3.ab2@27821>   TST.w D0
0004E428 <AmiBlitz3.ab2@27822>    BMI.w JUMP_syntaxerr
0004E42A <AmiBlitz3.ab2@27823>   MOVE.b D0,(A0)+
0004E42E <AmiBlitz3.ab2@27824>   BSR.w JUMP_get1bytemain
0004E432 <AmiBlitz3.ab2@27825>    BNE.w JL_0_4AA8b
0004E436 <AmiBlitz3.ab2@27826>   MOVE.b #$2,(A0)
0004E438 <AmiBlitz3.ab2@27827> RTS
0004E43E <AmiBlitz3.ab2@27836> JMP errormsg_reg
0004E448 <AmiBlitz3.ab2@27840>   MOVE.l #$f22d6780,fpucodeglobal
0004E452 <AmiBlitz3.ab2@27841>   MOVE.l #$f22c6780,fpucodelocal
0004E458 <AmiBlitz3.ab2@27842>   LEA regtable,a0
0004E462 <AmiBlitz3.ab2@27843>   MOVE.l #7,maxregs
0004E464 <AmiBlitz3.ab2@27846>   MOVE.l (a0),d0
0004E468 <AmiBlitz3.ab2@27847>   BEQ 'e1
0004E46A <AmiBlitz3.ab2@27848>   CLR.l (a0)
0004E46E <AmiBlitz3.ab2@27849>   MOVE.w 4(a0),d0
0004E478 <AmiBlitz3.ab2@27850>   MOVE.l fpucodeglobal,fpucode
0004E47C <AmiBlitz3.ab2@27851>   TST.w 6(a0)
0004E480 <AmiBlitz3.ab2@27852>   BEQ 'glob
0004E48A <AmiBlitz3.ab2@27853>   MOVE.l fpucodelocal,fpucode
0004E490 <AmiBlitz3.ab2@27856>   MOVE.l fpucode,d1
0004E496 <AmiBlitz3.ab2@27857>   JSR writelong
0004E4A0 <AmiBlitz3.ab2@27858>   SUB.l #$80,fpucodelocal
0004E4AA <AmiBlitz3.ab2@27859>   SUB.l #$80,fpucodeglobal
0004E4AC <AmiBlitz3.ab2@27860>   MOVE.w d0,d1
0004E4B2 <AmiBlitz3.ab2@27861>   JSR writeword
0004E4B4 <AmiBlitz3.ab2@27862>   ADDQ #8,a0
0004E4B8 <AmiBlitz3.ab2@27863> BRA 'again
0004E4BA <AmiBlitz3.ab2@27866> RTS
0004E4C0 <AmiBlitz3.ab2@27873> JMP notypeerr
0004E4C6 <AmiBlitz3.ab2@27876> JMP illtypeerr
0004E4D0 <AmiBlitz3.ab2@27879>   MOVE.l #$f22d4780,fpucodeglobal
0004E4DA <AmiBlitz3.ab2@27880>   MOVE.l #$f22c4780,fpucodelocal
0004E4E0 <AmiBlitz3.ab2@27881>   LEA regtable,a0
0004E4E2 <AmiBlitz3.ab2@27882>   TST.l (a0)
0004E4E6 <AmiBlitz3.ab2@27883>    BNE JUMP_errormsg_reg
0004E4E8 <AmiBlitz3.ab2@27884>   MOVE.l d7,-(a7)
0004E4EA <AmiBlitz3.ab2@27885>   SUBQ.l #1,a5
0004E4F0 <AmiBlitz3.ab2@27888>   JSR getparameter2
0004E4F4 <AmiBlitz3.ab2@27889>   BEQ.w 'nopar
0004E4FA <AmiBlitz3.ab2@27890>   MOVE.w d0,lastchar
0004E500 <AmiBlitz3.ab2@27891>   JSR findvariable
0004E504 <AmiBlitz3.ab2@27892>   BNE 'islocal
0004E50E <AmiBlitz3.ab2@27893>   MOVE.l fpucodeglobal,fpucode
0004E518 <AmiBlitz3.ab2@27894>   MOVE.l #3,maxregs
0004E51A <AmiBlitz3.ab2@27895>   MOVEQ #0,d7
0004E522 <AmiBlitz3.ab2@27898>   CMP.l #newtype_float,$a(a2)                              ;is float type
0004E526 <AmiBlitz3.ab2@27899>    BEQ 'doit
0004E52E <AmiBlitz3.ab2@27900>   CMP.l #newtype_double,$a(a2)
0004E532 <AmiBlitz3.ab2@27901>    BNE JUMP_illtypeerr
0004E538 <AmiBlitz3.ab2@27904>   LEA regtable,a0
0004E53A <AmiBlitz3.ab2@27905>   MOVEQ #0,d0
0004E53C <AmiBlitz3.ab2@27908>   TST.l (a0)
0004E540 <AmiBlitz3.ab2@27909>    BEQ 'store
0004E542 <AmiBlitz3.ab2@27910>   ADDQ.l #4,d0
0004E544 <AmiBlitz3.ab2@27911>   ADDQ.l #8,a0
0004E54A <AmiBlitz3.ab2@27912>   CMP.l #16,d0
0004E54E <AmiBlitz3.ab2@27913>    BCS 'loop
0004E558 <AmiBlitz3.ab2@27914>   MOVE.l #2,maxregs
0004E55E <AmiBlitz3.ab2@27915>   CMP.l #20,d0
0004E562 <AmiBlitz3.ab2@27916>    BCS 'loop
0004E56C <AmiBlitz3.ab2@27917>   MOVE.l #1,maxregs
0004E572 <AmiBlitz3.ab2@27918>   CMP.l #24,d0
0004E576 <AmiBlitz3.ab2@27919>    BCS 'loop
0004E57C <AmiBlitz3.ab2@27920> JMP toovarerr
0004E582 <AmiBlitz3.ab2@27923>   TST.b fpu
0004E586 <AmiBlitz3.ab2@27924>    BEQ 'nofpu
0004E588 <AmiBlitz3.ab2@27925>   MOVE.l a2,(a0)
0004E58E <AmiBlitz3.ab2@27926>   MOVE.w 4(a2),4(a0)
0004E592 <AmiBlitz3.ab2@27927>   MOVE.w d7,6(a0)
0004E598 <AmiBlitz3.ab2@27928>   MOVE.l fpucode,d1
0004E5A2 <AmiBlitz3.ab2@27929>   SUB.l #$80,fpucodeglobal
0004E5AC <AmiBlitz3.ab2@27930>   SUB.l #$80,fpucodelocal
0004E5B2 <AmiBlitz3.ab2@27931>   JSR writelong
0004E5B6 <AmiBlitz3.ab2@27932>   MOVE.w 4(a2),d1
0004E5BC <AmiBlitz3.ab2@27933>   JSR writeword
0004E5C2 <AmiBlitz3.ab2@27936>   MOVE.w lastchar,d0
0004E5C6 <AmiBlitz3.ab2@27937>   CMP.w #":",d0
0004E5CA <AmiBlitz3.ab2@27938>    BEQ 'nopar
0004E5CC <AmiBlitz3.ab2@27939>   TST.w d0
0004E5D0 <AmiBlitz3.ab2@27940>    BEQ 'nopar
0004E5D4 <AmiBlitz3.ab2@27941>   CMP.w #",",d0
0004E5D8 <AmiBlitz3.ab2@27942>   BNE JUMP_syntaxerr
0004E5DC <AmiBlitz3.ab2@27943> BRA 'l2
0004E5DE <AmiBlitz3.ab2@27946>    MOVE.l (a7)+,d7
0004E5E0 <AmiBlitz3.ab2@27947> RTS
0004E5E2 <AmiBlitz3.ab2@27950>   MOVEQ #1,d7
0004E5EA <AmiBlitz3.ab2@27951>   MOVE.b #1,newvariable
0004E5F0 <AmiBlitz3.ab2@27952>   LEA firstlocal,a2
0004E5F6 <AmiBlitz3.ab2@27953>   JSR findvariable
0004E5FC <AmiBlitz3.ab2@27954>   CLR.b newvariable
0004E602 <AmiBlitz3.ab2@27955>   CMP.l #-1,d0
0004E606 <AmiBlitz3.ab2@27956>   BEQ.w JUMP_notypeerr2
0004E610 <AmiBlitz3.ab2@27957>   MOVE.l fpucodelocal,fpucode
0004E614 <AmiBlitz3.ab2@27958> BRA 'go
0004E618 <AmiBlitz3.ab2@27961>   CMP.b #".",d0
0004E61C <AmiBlitz3.ab2@27962>    BNE 'l1
0004E620 <AmiBlitz3.ab2@27963>   BSR JUMP_get1bytemain
0004E624 <AmiBlitz3.ab2@27964>   BSR JUMP_get1bytemain
0004E628 <AmiBlitz3.ab2@27967>   ORI .b #$20,d0
0004E62C <AmiBlitz3.ab2@27968>   CMP.b #"d",d0
0004E630 <AmiBlitz3.ab2@27969>    BNE JUMP_illeaerr
0004E634 <AmiBlitz3.ab2@27970>   BSR JUMP_get1bytemain
0004E638 <AmiBlitz3.ab2@27971>   SUB.b #$30,d0
0004E63C <AmiBlitz3.ab2@27972>   CMP.b #$7,d0
0004E640 <AmiBlitz3.ab2@27973>    BGT JUMP_syntaxerr
0004E644 <AmiBlitz3.ab2@27974>   MOVE.w #$49c0,d1
0004E646 <AmiBlitz3.ab2@27975>   ADD.b d0,d1
0004E64C <AmiBlitz3.ab2@27976>   JSR writeword
0004E650 <AmiBlitz3.ab2@27977>   BSR JUMP_get1bytemain
0004E652 <AmiBlitz3.ab2@27978> RTS
0004E658 <AmiBlitz3.ab2@27982>   LEA lastpath,a0
0004E65C <AmiBlitz3.ab2@27983>   LEA usedpath(PC),A1
0004E65E <AmiBlitz3.ab2@27986>     MOVE.b (a0)+,(a1)+
0004E662 <AmiBlitz3.ab2@27987>   BNE 'l1
0004E668 <AmiBlitz3.ab2@27989>   LEA lastpath2,a0
0004E66E <AmiBlitz3.ab2@27990>   LEA lastpath,A1
0004E670 <AmiBlitz3.ab2@27993>     MOVE.b (a0)+,(a1)+
0004E674 <AmiBlitz3.ab2@27994>   BNE 'l2
0004E676 <AmiBlitz3.ab2@27995> RTS
0004E67C <AmiBlitz3.ab2@27999>   TST.b objectcount
0004E680 <AmiBlitz3.ab2@28000>   BEQ 'l2a
0004E686 <AmiBlitz3.ab2@28001> JMP macnesterr
0004E68C <AmiBlitz3.ab2@28004>   LEA devo,a0
0004E692 <AmiBlitz3.ab2@28005>   ADDQ.b #1,objectcount
0004E696 <AmiBlitz3.ab2@28006>   MOVEM.l a1/d2,-(a7)
0004E69C <AmiBlitz3.ab2@28007>   LEA ptr_parameterstore,a1
0004E69E <AmiBlitz3.ab2@28010>     MOVE.b (a0)+,(a1)+
0004E6A2 <AmiBlitz3.ab2@28011>   BNE 'l1
0004E6A4 <AmiBlitz3.ab2@28013>   MOVEQ #13,d2
0004E6AA <AmiBlitz3.ab2@28014>   JSR findlabel2
0004E6AE <AmiBlitz3.ab2@28015>   BNE 'd
0004E6B2 <AmiBlitz3.ab2@28016>   TST.l 8(a2)
0004E6B6 <AmiBlitz3.ab2@28017>   BEQ 'd
0004E6BC <AmiBlitz3.ab2@28018>   SUBQ.b #1,objectcount
0004E6C0 <AmiBlitz3.ab2@28019>   MOVEM.l (a7)+,a1/d2
0004E6C6 <AmiBlitz3.ab2@28020>   JSR skiprest
0004E6CE <AmiBlitz3.ab2@28021>   MOVE.b #1,developobject
0004E6D0 <AmiBlitz3.ab2@28022> RTS
0004E6D4 <AmiBlitz3.ab2@28025>   MOVEM.l (a7)+,a1/d2
0004E6DC <AmiBlitz3.ab2@28026>   MOVE.b #1,resdisable
0004E6E2 <AmiBlitz3.ab2@28029>   CLR.b developobject
0004E6E8 <AmiBlitz3.ab2@28030> JMP do_Macro
0004E6EE <AmiBlitz3.ab2@28034> JMP illeaerr
0004E6F4 <AmiBlitz3.ab2@28038>   CLR.b typecheck
0004E6FA <AmiBlitz3.ab2@28039>   CLR.b declare
0004E700 <AmiBlitz3.ab2@28040>   CLR.b declare2
0004E704 <AmiBlitz3.ab2@28041>   SUB.b #$30,d0
0004E708 <AmiBlitz3.ab2@28042>   BTST #0,d0
0004E70C <AmiBlitz3.ab2@28043>   BEQ 'l1
0004E714 <AmiBlitz3.ab2@28044>   MOVE.b #1,declare
0004E718 <AmiBlitz3.ab2@28047>   BTST #1,d0
0004E71C <AmiBlitz3.ab2@28048>   BEQ 'l2
0004E724 <AmiBlitz3.ab2@28049>   MOVE.b #1,declare2
0004E728 <AmiBlitz3.ab2@28052>   BTST #2,d0
0004E72C <AmiBlitz3.ab2@28053>   BEQ 'l3
0004E734 <AmiBlitz3.ab2@28054>   MOVE.b #1,typecheck
0004E738 <AmiBlitz3.ab2@28056>   BSR.w JUMP_get1bytemain
0004E73A <AmiBlitz3.ab2@28057> RTS
0004E740 <AmiBlitz3.ab2@28060> JMP get1bytemain
0004E76A <AmiBlitz3.ab2@28064>   !basic
0004E78A <AmiBlitz3.ab2@28066>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0004E7A8 <AmiBlitz3.ab2@28067>   !asm
0004E7AA <AmiBlitz3.ab2@28068> Return
0004E7AC <AmiBlitz3.ab2@28073>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0004E7AE <AmiBlitz3.ab2@28074>   ADDQ #1,a5
0004E7B0 <AmiBlitz3.ab2@28075>   MOVE.l a5,-(a7)
0004E7DA <AmiBlitz3.ab2@28076>   !basic
0004E7E0 <AmiBlitz3.ab2@28077>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0004E7EA <AmiBlitz3.ab2@28078>   If _myD0
0004E82A <AmiBlitz3.ab2@28079>     newconst$ = UCase$(Peek.s(_myD0))
0004E830 <AmiBlitz3.ab2@28080>   Else
0004E86A <AmiBlitz3.ab2@28081>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0004E892 <AmiBlitz3.ab2@28082>     nwconst$="xxx"
0004E8BA <AmiBlitz3.ab2@28084>   condata$ =""
0004E8CA <AmiBlitz3.ab2@28085>   Poke.b ?skip_bytes,0
0004E926 <AmiBlitz3.ab2@28086>   If Left$(newconst$,2) = "__"
0004E980 <AmiBlitz3.ab2@28087>     Select Mid$(newconst$,3,4)
0004E9A4 <AmiBlitz3.ab2@28089>      Case "DATE"
0004E9FE <AmiBlitz3.ab2@28090>       Select Mid$(newconst$,3,6)
0004EA3C <AmiBlitz3.ab2@28091>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0004EA80 <AmiBlitz3.ab2@28092>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0004EA8E <AmiBlitz3.ab2@28093>       End Select
0004EA9C <AmiBlitz3.ab2@28094>       i.l=SystemDate
0004EAC2 <AmiBlitz3.ab2@28095>       condata$ = Date$ (i)
0004EB40 <AmiBlitz3.ab2@28096>       condata$ = Replace$(condata$,"/",".")
0004EB6A <AmiBlitz3.ab2@28098>      Case "VER_"
0004EB7A <AmiBlitz3.ab2@28101>       actual_version.l = Peek.l(?versioninformation)
0004EB8A <AmiBlitz3.ab2@28102>       actual_build.l   = Peek.l(?number_of_builds)
0004EBAE <AmiBlitz3.ab2@28104>       Format ""
0004EC08 <AmiBlitz3.ab2@28105>       Select Mid$(newconst$,3,9)
0004EC2C <AmiBlitz3.ab2@28107>        Case "VER_MAJOR"
0004EC68 <AmiBlitz3.ab2@28108>         condata$ = Str$(actual_version LSR 24)
0004EC92 <AmiBlitz3.ab2@28110>        Case "VER_MINOR"
0004ECD6 <AmiBlitz3.ab2@28111>         condata$ = Str$((actual_version LSL 8) LSR 24)
0004ED00 <AmiBlitz3.ab2@28113>        Case "VER_PATCH"
0004ED44 <AmiBlitz3.ab2@28114>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0004ED6E <AmiBlitz3.ab2@28116>        Case "VER_BUILD"
0004ED92 <AmiBlitz3.ab2@28117>         Format ""
0004EDC6 <AmiBlitz3.ab2@28118>         condata$ = Str$(actual_build)
0004EDCC <AmiBlitz3.ab2@28120>        Default
0004EDF4 <AmiBlitz3.ab2@28121>         condata$ = "{unknown compiler constant}"
0004EE02 <AmiBlitz3.ab2@28123>       End Select
0004EE26 <AmiBlitz3.ab2@28124>       Format ""
0004EE36 <AmiBlitz3.ab2@28125>       Poke.b ?skip_bytes,11
0004EE60 <AmiBlitz3.ab2@28127>      Case "THIS"
0004EEBA <AmiBlitz3.ab2@28128>       Select Mid$(newconst$,3,9)
0004EEDE <AmiBlitz3.ab2@28130>        Case "THIS_FUNC"
0004EEEE <AmiBlitz3.ab2@28131>         Poke.b ?skip_bytes,15
0004EF0E <AmiBlitz3.ab2@28132>         If Peek.l(?currentfunction)<>0
0004EF5A <AmiBlitz3.ab2@28133>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0004EF60 <AmiBlitz3.ab2@28134>         Else
0004EF88 <AmiBlitz3.ab2@28135>           condata$ = "GLOBAL"
0004EFB2 <AmiBlitz3.ab2@28138>        Case "THIS_INCL"
0004EFC2 <AmiBlitz3.ab2@28139>         Poke.b ?skip_bytes,14
0004EFE2 <AmiBlitz3.ab2@28140>         If Peek.l(?includetemp2)<>0
0004F030 <AmiBlitz3.ab2@28141>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0004F05A <AmiBlitz3.ab2@28144>        Case "THIS_POIN"
0004F06A <AmiBlitz3.ab2@28145>         Poke.b ?skip_bytes,14
0004F08A <AmiBlitz3.ab2@28146>         If Peek.l(?currentfunction)<>0
0004F0B8 <AmiBlitz3.ab2@28147>           condata$ = Hex$(Peek.l(?currentfunction))
0004F0C6 <AmiBlitz3.ab2@28150>       End Select
0004F0F0 <AmiBlitz3.ab2@28152>      Case "CODE"
0004F100 <AmiBlitz3.ab2@28153>       Poke.b ?skip_bytes,10
0004F162 <AmiBlitz3.ab2@28154>       If Mid$(newconst$,3,8) = "CODELINE"
0004F19E <AmiBlitz3.ab2@28155>         condata$ = Str$(Peek.l(?globallinecount))
0004F1AC <AmiBlitz3.ab2@28158>     End Select
0004F1B2 <AmiBlitz3.ab2@28160>   Else
0004F206 <AmiBlitz3.ab2@28161>     Select Left$(newconst$,1)
0004F22A <AmiBlitz3.ab2@28163>      Case "R"
0004F23A <AmiBlitz3.ab2@28164>       Poke.b ?skip_bytes,3
0004F2B2 <AmiBlitz3.ab2@28165>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0004F332 <AmiBlitz3.ab2@28166>         condata$ = condata$ + Mid$(newconst$,4,1)
0004F342 <AmiBlitz3.ab2@28167>       Next
0004F36C <AmiBlitz3.ab2@28169>      Case "N"
0004F37C <AmiBlitz3.ab2@28170>       Poke.b ?skip_bytes,1
0004F3A0 <AmiBlitz3.ab2@28171>       condata$ = Chr$(10)
0004F3A6 <AmiBlitz3.ab2@28173>      Default
0004F3B8 <AmiBlitz3.ab2@28174>       char1.b = Peek.b(&newconst$)
0004F3D0 <AmiBlitz3.ab2@28175>       char2.b = Peek.b(&newconst$+1)
0004F3DC <AmiBlitz3.ab2@28176>       nibble1.l = -1
0004F3E8 <AmiBlitz3.ab2@28177>       nibble2.l = -1
0004F426 <AmiBlitz3.ab2@28179>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0004F464 <AmiBlitz3.ab2@28180>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0004F4A8 <AmiBlitz3.ab2@28182>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0004F4EC <AmiBlitz3.ab2@28183>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0004F530 <AmiBlitz3.ab2@28185>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0004F574 <AmiBlitz3.ab2@28186>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0004F59A <AmiBlitz3.ab2@28188>       If nibble1>=0 AND nibble2>=0
0004F5B0 <AmiBlitz3.ab2@28189>         newchar.l = (nibble1 LSL 4) + (nibble2)
0004F5D4 <AmiBlitz3.ab2@28190>         condata$ = Chr$(newchar)
0004F5E4 <AmiBlitz3.ab2@28191>         Poke.b ?skip_bytes,2
0004F5F2 <AmiBlitz3.ab2@28194>     End Select
0004F652 <AmiBlitz3.ab2@28196>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0004F778 <AmiBlitz3.ab2@28197>     !cout{"detected unknown const: " + newconst$}
0004F7AC <AmiBlitz3.ab2@28198>     condata$ = newconst$
0004F7C2 <AmiBlitz3.ab2@28201>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0004F7C4 <AmiBlitz3.ab2@28202>   MOVE.l d0,d2
0004F7C6 <AmiBlitz3.ab2@28203>   MOVE.l d2,-(a7)
0004F7CC <AmiBlitz3.ab2@28205>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0004F7CE <AmiBlitz3.ab2@28206>   MOVE.l d0,a0
0004F7D0 <AmiBlitz3.ab2@28209>     MOVE.b (a0)+,d1
0004F7D6 <AmiBlitz3.ab2@28210>     JSR pokedata1b
0004F7DA <AmiBlitz3.ab2@28211>  DBF d2,'l1
0004F7F8 <AmiBlitz3.ab2@28213>   !asm
0004F7FA <AmiBlitz3.ab2@28214>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0004F7FC <AmiBlitz3.ab2@28215>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0004F7FE <AmiBlitz3.ab2@28216>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0004F804 <AmiBlitz3.ab2@28217>   ADD.l #1,d2
0004F80A <AmiBlitz3.ab2@28219>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0004F810 <AmiBlitz3.ab2@28220>   MOVE.b skip_bytes,D0
0004F812 <AmiBlitz3.ab2@28221>   ADD.l D0,a5
0004F814 <AmiBlitz3.ab2@28222> RTS
0004F818 <AmiBlitz3.ab2@28297> MOVEM.l a3/d1,-(a7)
0004F81E <AmiBlitz3.ab2@28299> CLR.b a4a5store
0004F820 <AmiBlitz3.ab2@28300> 'continue: MOVE.b (a3)+,d1
0004F824 <AmiBlitz3.ab2@28301> CMP.b #$15,d1
0004F828 <AmiBlitz3.ab2@28302> BEQ 'find
0004F82C <AmiBlitz3.ab2@28303> CMP.b #$14,d1
0004F830 <AmiBlitz3.ab2@28304> BEQ 'find
0004F834 <AmiBlitz3.ab2@28305> CMP.b #$ff,d1
0004F838 <AmiBlitz3.ab2@28306> BNE 'continue
0004F83C <AmiBlitz3.ab2@28307> BRA 'notfind
0004F842 <AmiBlitz3.ab2@28309> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0004F848 <AmiBlitz3.ab2@28310> JSR writelong
0004F850 <AmiBlitz3.ab2@28311> MOVE.b #1,a4a5store
0004F854 <AmiBlitz3.ab2@28312> 'notfind: MOVEM.l (a7)+,a3/d1
0004F856 <AmiBlitz3.ab2@28313> RTS
0004F85C <AmiBlitz3.ab2@28316> TST.b a4a5store
0004F860 <AmiBlitz3.ab2@28317> BEQ 'no
0004F866 <AmiBlitz3.ab2@28318> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0004F86C <AmiBlitz3.ab2@28319> JSR writelong
0004F872 <AmiBlitz3.ab2@28320> CLR.b a4a5store
0004F874 <AmiBlitz3.ab2@28321> 'no RTS
0004F874 <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
0004F878 <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
0004F87A <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
0004F882 <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
0004F88E <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
0004F892 <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
0004F894 <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
0004F898 <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
0004F8E1 <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
0004F8E2 <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
0004F8E6 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
0004F8E8 <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
0004F8EC <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
0004F908 <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
0004F90C <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
0004F90E <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
0004F912 <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
0004F96F <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
0004F970 <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
0004F974 <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
0004F976 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
0004F97B <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
0004F98B <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
0004F98C <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
0004F990 <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
0004F992 <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
0004F998 <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
0004F9A8 <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
0004F9AC <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
0004F9AE <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
0004F9B5 <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
0004F9B6 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
0004F9BA <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
0004F9BC <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
0004F9C6 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
0004F9F9 <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
0004F9FA <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
0004F9FE <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
0004FA00 <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
0004FA09 <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
0004FA44 <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
0004FA48 <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
0004FA4A <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
0004FA54 <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
0004FA55 <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
0004FA56 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
0004FA5A <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
0004FA5C <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
0004FA5F <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
0004FA76 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
0004FA7A <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
0004FA7C <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
0004FA82 <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
0004FA8F <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
0004FA90 <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
0004FA94 <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
0004FA96 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
0004FA9C <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
0004FAA8 <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
0004FAAC <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
0004FAAE <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
0004FAB5 <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
0004FAC2 <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
0004FAC6 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
0004FAC8 <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
0004FACD <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
0004FADA <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
0004FADE <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
0004FAE0 <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
0004FAE8 <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
0004FAE9 <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
0004FAEA <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
0004FAEE <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
0004FAF0 <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
0004FAF8 <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
0004FAF9 <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
0004FAFA <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
0004FAFE <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
0004FB00 <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
0004FB09 <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
0004FB14 <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
0004FB18 <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
0004FB1A <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
0004FB22 <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
0004FB2D <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
0004FB2E <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
0004FB32 <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
0004FB34 <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
0004FB3B <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
0004FB9D <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
0004FB9E <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
0004FBA2 <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
0004FBA4 <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
0004FBAB <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
0004FBBA <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
0004FBBE <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
0004FBC0 <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
0004FBC4 <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
0004FBFA <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
0004FBFE <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
0004FC00 <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
0004FC05 <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
0004FC14 <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
0004FC18 <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
0004FC1A <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
0004FC1D <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
0004FC3E <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
0004FC42 <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
0004FC44 <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
0004FC49 <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
0004FC55 <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
0004FC56 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
0004FC5A <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
0004FC5C <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
0004FC61 <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
0004FC78 <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
0004FC7C <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
0004FC7E <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
0004FC83 <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
0004FC92 <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
0004FC96 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
0004FC98 <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
0004FC9D <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
0004FCBC <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
0004FCC0 <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
0004FCC2 <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
0004FCC7 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
0004FCE6 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
0004FCEA <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
0004FCEC <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
0004FCF2 <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
0004FCF3 <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
0004FCF4 <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
0004FCF8 <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
0004FCFA <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
0004FCFF <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
0004FD00 <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
0004FD04 <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
0004FD06 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
0004FD0B <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
0004FD18 <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
0004FD1C <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
0004FD1E <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
0004FD23 <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
0004FD32 <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
0004FD36 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
0004FD38 <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
0004FD3D <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
0004FD4C <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
0004FD50 <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
0004FD52 <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
0004FD58 <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
0004FD75 <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
0004FD76 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
0004FD7A <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
0004FD7C <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
0004FD82 <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
0004FD9F <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
0004FDA0 <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
0004FDA4 <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
0004FDA6 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
0004FDA9 <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
0004FDC0 <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
0004FDC4 <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
0004FDC6 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
0004FDC9 <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
0004FDD8 <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
0004FDDC <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
0004FDDE <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
0004FDE3 <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
0004FDE4 <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
0004FDE8 <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
0004FDEA <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
0004FDEE <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
0004FE03 <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
0004FE04 <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
0004FE08 <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
0004FE0A <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
0004FE11 <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
0004FE2A <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
0004FE2E <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
0004FE30 <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
0004FE37 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
0004FE42 <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
0004FE46 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
0004FE48 <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
0004FE4D <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
0004FE64 <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
0004FE68 <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
0004FE6A <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
0004FE6E <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
0004FE85 <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
0004FE86 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
0004FE8A <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
0004FE8C <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
0004FE91 <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
0004FE92 <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
0004FE96 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
0004FE98 <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
0004FE9D <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
0004FEA1 <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
0004FEA2 <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
0004FEA6 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
0004FEA8 <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
0004FEAF <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
0004FEC7 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
0004FEC8 <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
0004FECC <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
0004FECE <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
0004FED5 <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
0004FEDA <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
0004FEDE <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
0004FEE0 <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
0004FEE7 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
0004FEEC <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
0004FEF0 <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
0004FEF2 <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
0004FEF9 <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
0004FF14 <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
0004FF18 <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
0004FF1A <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
0004FF22 <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
0004FF3B <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
0004FF3C <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
0004FF40 <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
0004FF42 <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
0004FF48 <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
0004FF49 <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
0004FF4A <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
0004FF4E <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
0004FF50 <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
0004FF56 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
0004FF57 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
0004FF58 <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
0004FF5C <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
0004FF5E <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
0004FF65 <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
0004FF66 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
0004FF6A <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
0004FF6C <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
0004FF72 <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
0004FF7B <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
0004FF7C <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
0004FF80 <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
0004FF82 <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
0004FF8A <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
0004FF97 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
0004FF98 <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
0004FF9C <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
0004FF9E <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
0004FFA6 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
0004FFB3 <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
0004FFB4 <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
0004FFB8 <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
0004FFBA <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
0004FFC2 <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
0004FFCF <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
0004FFD0 <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
0004FFD4 <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
0004FFD6 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
0004FFDB <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
0004FFDC <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
0004FFE0 <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
0004FFE2 <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
0004FFE7 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
0004FFE8 <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
0004FFEA <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
0004FFEE <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
0004FFF0 <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
0004FFF2 <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
0004FFF6 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
0004FFF8 <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
0004FFFC <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
0004FFFE <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
00050002 <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
00050003 <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
00050004 <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
00050006 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
0005000A <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
0005000C <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
0005000E <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
00050012 <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
00050014 <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
00050018 <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
0005001A <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
0005001F <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
00050020 <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
00050022 <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
00050026 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
00050028 <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
0005002A <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
0005002E <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
00050030 <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
00050034 <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
00050036 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
0005003B <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
0005003C <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
0005003E <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
00050042 <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
00050044 <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
00050046 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
0005004A <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
0005004C <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
00050050 <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
00050052 <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
00050057 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
00050058 <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
0005005A <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
0005005E <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
00050060 <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
00050062 <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
00050066 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
00050068 <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
0005006C <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
0005006E <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
00050073 <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
00050074 <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
00050076 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
0005007A <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
0005007C <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
0005007E <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
00050082 <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
00050084 <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
00050088 <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
0005008A <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
0005008E <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
0005008F <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
00050090 <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
00050092 <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
00050096 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
00050098 <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
0005009A <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
0005009E <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
000500A0 <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
000500A4 <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
000500A6 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
000500AB <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
000500AC <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
000500AE <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
000500B2 <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
000500B4 <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
000500B6 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
000500BA <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
000500BC <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
000500C0 <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
000500C2 <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
000500C6 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
000500C7 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
000500C8 <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
000500CA <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
000500CE <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
000500D0 <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
000500D2 <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
000500D6 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
000500D8 <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
000500DC <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
000500DE <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
000500E2 <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
000500E3 <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
000500E4 <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
000500E6 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
000500EA <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
000500EC <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
000500EE <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
000500F2 <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
000500F4 <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
000500F8 <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
000500FA <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
000500FE <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
000500FF <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
00050100 <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
00050102 <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
00050106 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
00050108 <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
0005010A <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
0005010E <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
00050110 <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
00050114 <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
00050116 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
0005011A <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
0005011B <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
0005011C <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
0005011E <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
00050122 <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
00050124 <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
00050126 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
0005012A <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
0005012C <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
00050130 <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
00050132 <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
00050136 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
00050137 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
00050138 <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
0005013A <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
0005013E <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
00050140 <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
00050142 <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
00050146 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
00050148 <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
0005014C <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
0005014E <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
00050152 <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
00050153 <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
00050154 <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
00050156 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
0005015A <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
0005015C <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
0005015E <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
00050162 <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
00050164 <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
00050168 <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
0005016A <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
0005016E <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
0005016F <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
00050170 <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
00050172 <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
00050176 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
00050178 <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
0005017A <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
0005017E <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
00050180 <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
00050184 <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
00050186 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
0005018A <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
0005018B <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
0005018C <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
0005018E <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
00050192 <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
00050194 <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
00050196 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
0005019A <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
0005019C <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
000501A0 <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
000501A2 <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
000501A6 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
000501A7 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
000501A8 <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
000501AA <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
000501AE <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
000501B0 <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
000501B2 <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
000501B6 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
000501B8 <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
000501BC <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
000501BE <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
000501C2 <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
000501C3 <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
000501C4 <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
000501C6 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
000501CA <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
000501CC <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
000501CE <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
000501D2 <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
000501D4 <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
000501D8 <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
000501DA <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
000501DE <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
000501DF <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
000501E0 <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
000501E2 <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
000501E6 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
000501E8 <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
000501EA <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
000501EE <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
000501F0 <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
000501F4 <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
000501F6 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
000501FA <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
000501FB <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
000501FC <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
000501FE <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
00050202 <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
00050204 <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
00050206 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
0005020A <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
0005020C <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
00050210 <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
00050212 <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
00050216 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
00050217 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
00050218 <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
0005021A <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
0005021E <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
00050220 <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
00050222 <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
00050226 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
00050228 <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
0005022C <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
0005022E <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
00050232 <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
00050233 <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
00050234 <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
00050236 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
0005023A <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
0005023C <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
0005023E <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
00050242 <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
00050244 <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
00050248 <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
0005024A <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
0005024E <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
0005024F <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
00050250 <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
00050252 <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
00050256 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
00050258 <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
0005025A <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
0005025E <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
00050260 <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
00050264 <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
00050266 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
0005026A <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
0005026B <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
0005026C <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
0005026E <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
00050272 <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
00050274 <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
00050276 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
0005027A <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
0005027C <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
00050280 <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
00050282 <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
00050287 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
00050288 <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
0005028A <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
0005028E <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
00050290 <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
00050292 <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
00050296 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
00050298 <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
0005029C <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
0005029E <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
000502A3 <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
000502A4 <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
000502A6 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
000502AA <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
000502AC <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
000502AE <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
000502B2 <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
000502B4 <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
000502B8 <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
000502BA <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
000502BF <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
000502C0 <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
000502C2 <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
000502C6 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
000502C8 <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
000502CA <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
000502CE <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
000502D0 <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
000502D4 <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
000502D6 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
000502DB <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
000502DC <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
000502DE <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
000502E2 <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
000502E4 <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
000502E6 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
000502EA <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
000502EC <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
000502F0 <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
000502F2 <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
000502F6 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
000502F7 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
000502F8 <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
000502FA <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
000502FE <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
00050300 <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
00050302 <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
00050306 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
00050308 <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
0005030C <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
0005030E <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
00050312 <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
00050313 <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
00050314 <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
00050316 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
0005031A <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
0005031C <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
0005031E <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
00050322 <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
00050324 <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
00050328 <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
0005032A <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
0005032E <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
0005032F <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
00050330 <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
00050332 <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
00050336 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
00050338 <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
0005033A <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
0005033E <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
00050340 <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
00050344 <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
00050346 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
0005034A <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
0005034B <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
0005034C <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
0005034E <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
00050352 <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
00050354 <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
00050356 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
0005035A <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
0005035C <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
00050360 <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
00050362 <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
00050366 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
00050367 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
00050368 <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
0005036A <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
0005036E <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
00050370 <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
00050372 <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
00050376 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
00050378 <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
0005037C <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
0005037E <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
00050383 <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
00050384 <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
00050386 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
0005038A <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
0005038C <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
0005038E <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
00050392 <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
00050394 <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
00050398 <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
0005039A <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
0005039F <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
000503A0 <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
000503A2 <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
000503A6 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
000503A8 <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
000503AA <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
000503AE <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
000503B0 <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
000503B4 <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
000503B6 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
000503BB <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
000503BC <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
000503BE <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
000503C2 <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
000503C4 <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
000503C6 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
000503CA <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
000503CC <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
000503D0 <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
000503D2 <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
000503D7 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
000503D8 <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
000503DA <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
000503DE <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
000503E0 <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
000503E2 <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
000503E6 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
000503E8 <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
000503EC <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
000503EE <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
000503F3 <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
000503F4 <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
000503F6 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
000503FA <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
000503FC <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
000503FE <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
00050402 <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
00050404 <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
00050408 <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
0005040A <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
0005040F <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
00050410 <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
00050412 <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
00050416 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
00050418 <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
0005041A <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
0005041E <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
00050420 <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
00050424 <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
00050426 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
0005042B <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
0005042C <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
0005042E <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
00050432 <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
00050434 <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
00050436 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
0005043A <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
0005043C <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
00050440 <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
00050442 <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
00050447 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
00050448 <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
0005044A <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
0005044E <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
00050450 <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
00050452 <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
00050456 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
00050458 <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
0005045C <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
0005045E <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
00050463 <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
00050464 <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
00050466 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
0005046A <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
0005046C <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
0005046E <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
00050472 <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
00050474 <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
00050478 <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
0005047A <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
0005047F <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
00050480 <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
00050482 <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
00050486 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
00050488 <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
0005048A <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
0005048E <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
00050490 <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
00050494 <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
00050496 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
0005049B <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
0005049C <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
0005049E <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
000504A2 <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
000504A4 <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
000504A6 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
000504AA <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
000504AC <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
000504B0 <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
000504B2 <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
000504B7 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
000504B8 <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
000504BA <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
000504BE <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
000504C0 <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
000504C2 <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
000504C6 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
000504C8 <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
000504CC <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
000504CE <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
000504D3 <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
000504D4 <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
000504D6 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
000504DA <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
000504DC <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
000504DE <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
000504E2 <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
000504E4 <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
000504E8 <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
000504EA <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
000504EF <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
000504F0 <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
000504F2 <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
000504F6 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
000504F8 <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
000504FA <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
000504FE <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
00050500 <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
00050504 <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
00050506 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
0005050B <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
0005050C <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
0005050E <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
00050512 <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
00050514 <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
00050516 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
0005051A <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
0005051C <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
00050520 <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
00050522 <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
00050527 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
00050528 <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
0005052A <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
0005052E <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
00050530 <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
00050532 <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
00050536 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
00050538 <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
0005053C <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
0005053E <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
00050543 <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
00050544 <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
00050546 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
0005054A <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
0005054C <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
0005054E <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
00050552 <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
00050554 <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
00050558 <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
0005055A <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
0005055E <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
0005055F <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
00050560 <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
00050562 <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
00050566 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
00050568 <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
0005056A <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
0005056E <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
00050570 <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
00050574 <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
00050576 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
0005057B <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
0005057C <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
0005057E <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
00050582 <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
00050584 <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
00050586 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
0005058A <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
0005058C <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
00050590 <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
00050592 <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
00050596 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
00050597 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
00050598 <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
0005059A <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
0005059E <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
000505A0 <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
000505A2 <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
000505A6 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
000505A8 <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
000505AC <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
000505AE <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
000505B3 <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
000505B4 <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
000505B6 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
000505BA <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
000505BC <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
000505BE <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
000505C2 <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
000505C4 <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
000505C8 <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
000505CA <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
000505CF <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
000505D0 <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
000505D2 <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
000505D6 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
000505D8 <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
000505DA <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
000505DE <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
000505E0 <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
000505E4 <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
000505E6 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
000505EA <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
000505EB <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
000505EC <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
000505EE <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
000505F2 <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
000505F4 <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
000505F6 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
000505FA <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
000505FC <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
00050600 <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
00050602 <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
00050607 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
00050608 <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
0005060A <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
0005060E <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
00050610 <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
00050612 <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
00050616 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
00050618 <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
0005061C <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
0005061E <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
00050622 <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
00050623 <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
00050624 <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
00050626 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
0005062A <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
0005062C <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
0005062E <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
00050632 <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
00050634 <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
00050638 <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
0005063A <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
0005063E <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
0005063F <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
00050640 <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
00050642 <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
00050646 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
00050648 <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
0005064A <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
0005064E <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
00050650 <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
00050654 <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
00050656 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
0005065E <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
0005065F <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
00050660 <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
00050662 <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
00050666 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
00050668 <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
0005066A <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
0005066E <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
00050670 <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
00050674 <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
00050676 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
0005067A <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
0005067B <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
0005067C <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
0005067E <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
00050682 <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
00050684 <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
00050686 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
0005068A <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
0005068C <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
00050690 <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
00050692 <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
00050696 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
00050697 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
00050698 <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
0005069A <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
0005069E <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
000506A0 <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
000506A2 <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
000506A6 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
000506A8 <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
000506AC <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
000506AE <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
000506B2 <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
000506B3 <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
000506B4 <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
000506B6 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
000506BA <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
000506BC <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
000506BE <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
000506C2 <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
000506C4 <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
000506C8 <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
000506CA <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
000506CF <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
000506D0 <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
000506D2 <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
000506D6 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
000506D8 <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
000506DA <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
000506DE <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
000506E0 <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
000506E4 <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
000506E6 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
000506EA <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
000506EB <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
000506EC <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
000506EE <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
000506F2 <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
000506F4 <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
000506F6 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
000506FA <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
000506FC <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
00050700 <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
00050702 <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
00050706 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
00050707 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
00050708 <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
0005070A <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
0005070E <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
00050710 <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
00050712 <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
00050716 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
00050718 <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
0005071C <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
0005071E <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
00050723 <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
00050724 <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
00050726 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
0005072A <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
0005072C <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
0005072E <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
00050732 <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
00050734 <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
00050738 <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
0005073A <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
0005073F <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
00050740 <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
00050742 <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
00050746 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
00050748 <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
0005074A <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
0005074E <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
00050750 <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
00050754 <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
00050756 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
0005075C <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
0005075D <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
0005075E <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
00050760 <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
00050764 <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
00050766 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
00050768 <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
0005076C <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
0005076E <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
00050772 <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
00050774 <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
0005077A <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
0005077B <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
0005077C <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
0005077E <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
00050782 <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
00050784 <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
00050786 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
0005078A <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
0005078C <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
00050790 <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
00050792 <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
00050798 <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
00050799 <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
0005079A <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
0005079C <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
000507A0 <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
000507A2 <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
000507A4 <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
000507A8 <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
000507AA <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
000507AE <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
000507B0 <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
000507B5 <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
000507B6 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
000507B8 <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
000507BC <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
000507BE <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
000507C0 <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
000507C4 <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
000507C6 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
000507CA <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
000507CC <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
000507D1 <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
000507D2 <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
000507D4 <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
000507D8 <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
000507DA <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
000507DC <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
000507E0 <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
000507E2 <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
000507E6 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
000507E8 <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
000507ED <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
000507EE <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
000507F0 <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
000507F4 <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
000507F6 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
000507F8 <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
000507FC <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
000507FE <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
00050802 <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
00050804 <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
00050808 <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
00050809 <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
0005080A <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
0005080C <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
00050810 <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
00050812 <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
00050814 <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
00050818 <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
0005081A <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
0005081E <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
00050820 <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
00050825 <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
00050826 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
00050828 <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
0005082C <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
0005082E <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
00050830 <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
00050834 <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
00050836 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
0005083A <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
0005083C <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
00050840 <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
00050841 <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
00050842 <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
00050844 <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
00050848 <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
0005084A <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
0005084C <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
00050850 <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
00050852 <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
00050856 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
00050858 <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
0005085C <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
0005085D <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
0005085E <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
00050860 <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
00050864 <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
00050866 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
00050868 <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
0005086C <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
0005086E <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
00050872 <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
00050874 <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
00050877 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
00050878 <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
0005087A <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
0005087E <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
00050880 <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
00050882 <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
00050886 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
00050888 <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
0005088C <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
0005088E <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
00050892 <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
00050893 <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
00050894 <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
00050896 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
0005089A <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
0005089C <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
0005089E <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
000508A2 <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
000508A4 <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
000508A8 <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
000508AA <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
000508AE <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
000508AF <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
000508B0 <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
000508B2 <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
000508B6 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
000508B8 <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
000508BA <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
000508BE <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
000508C0 <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
000508C4 <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
000508C6 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
000508CC <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
000508CD <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
000508CE <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
000508D0 <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
000508D4 <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
000508D6 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
000508D8 <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
000508DC <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
000508DE <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
000508E2 <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
000508E4 <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
000508E8 <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
000508E9 <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
000508EA <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
000508EC <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
000508F0 <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
000508F2 <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
000508F4 <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
000508F8 <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
000508FA <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
000508FE <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
00050900 <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
00050904 <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
00050905 <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
00050906 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
00050908 <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
0005090C <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
0005090E <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
00050910 <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
00050914 <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
00050916 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
0005091A <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
0005091C <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
00050921 <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
00050922 <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
00050924 <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
00050928 <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
0005092A <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
0005092C <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
00050930 <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
00050932 <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
00050936 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
00050938 <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
0005093D <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
0005093E <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
00050940 <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
00050944 <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
00050946 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
00050948 <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
0005094C <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
0005094E <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
00050952 <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
00050954 <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
00050958 <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
00050959 <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
0005095A <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
0005095C <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
00050960 <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
00050962 <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
00050964 <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
00050968 <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
0005096A <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
0005096E <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
00050970 <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
00050974 <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
00050975 <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
00050976 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
00050978 <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
0005097C <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
0005097E <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
00050980 <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
00050984 <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
00050986 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
0005098A <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
0005098C <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
00050990 <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
00050991 <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
00050992 <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
00050994 <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
00050998 <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
0005099A <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
0005099C <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
000509A0 <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
000509A2 <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
000509A6 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
000509A8 <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
000509AD <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
000509AE <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
000509B0 <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
000509B4 <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
000509B6 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
000509B8 <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
000509BC <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
000509BE <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
000509C2 <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
000509C4 <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
000509C8 <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
000509C9 <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
000509CA <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
000509CC <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
000509D0 <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
000509D2 <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
000509D4 <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
000509D8 <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
000509DA <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
000509DE <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
000509E0 <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
000509E4 <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
000509E5 <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
000509E6 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
000509E8 <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
000509EC <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
000509EE <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
000509F0 <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
000509F4 <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
000509F6 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
000509FA <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
000509FC <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
00050A00 <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
00050A01 <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
00050A02 <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
00050A04 <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
00050A08 <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
00050A0A <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
00050A0C <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
00050A10 <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
00050A12 <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
00050A16 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
00050A18 <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
00050A1C <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
00050A1D <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
00050A1E <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
00050A20 <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
00050A24 <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
00050A26 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
00050A28 <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
00050A2C <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
00050A2E <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
00050A32 <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
00050A34 <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
00050A38 <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
00050A39 <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
00050A3A <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
00050A3C <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
00050A40 <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
00050A42 <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
00050A44 <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
00050A48 <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
00050A4A <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
00050A4E <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
00050A50 <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
00050A54 <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
00050A55 <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
00050A56 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
00050A58 <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
00050A5C <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
00050A5E <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
00050A60 <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
00050A64 <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
00050A66 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
00050A6A <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
00050A6C <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
00050A70 <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
00050A71 <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
00050A72 <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
00050A74 <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
00050A78 <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
00050A7A <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
00050A7C <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
00050A80 <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
00050A82 <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
00050A86 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
00050A88 <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
00050A8C <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
00050A8D <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
00050A8E <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
00050A90 <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
00050A94 <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
00050A96 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
00050A98 <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
00050A9C <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
00050A9E <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
00050AA2 <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
00050AA4 <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
00050AA8 <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
00050AA9 <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
00050AAA <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
00050AAC <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
00050AB0 <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
00050AB2 <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
00050AB4 <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
00050AB8 <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
00050ABA <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
00050ABE <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
00050AC0 <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
00050AC4 <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
00050AC5 <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
00050AC6 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
00050AC8 <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
00050ACC <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
00050ACE <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
00050AD0 <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
00050AD4 <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
00050AD6 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
00050ADA <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
00050ADC <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
00050AE0 <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
00050AE1 <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
00050AE2 <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
00050AE4 <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
00050AE8 <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
00050AEA <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
00050AEC <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
00050AF0 <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
00050AF2 <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
00050AF6 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
00050AF8 <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
00050AFC <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
00050AFD <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
00050AFE <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
00050B00 <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
00050B04 <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
00050B06 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
00050B08 <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
00050B0C <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
00050B0E <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
00050B12 <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
00050B14 <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
00050B18 <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
00050B19 <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
00050B1A <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
00050B1C <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
00050B20 <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
00050B22 <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
00050B24 <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
00050B28 <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
00050B2A <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
00050B2E <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
00050B30 <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
00050B34 <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
00050B35 <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
00050B36 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
00050B38 <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
00050B3C <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
00050B3E <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
00050B40 <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
00050B44 <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
00050B46 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
00050B4A <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
00050B4C <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
00050B4F <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
00050B50 <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
00050B52 <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
00050B56 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
00050B58 <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
00050B5A <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
00050B5E <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
00050B60 <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
00050B64 <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
00050B66 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
00050B69 <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
00050B6A <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
00050B6C <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
00050B70 <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
00050B72 <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
00050B74 <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
00050B78 <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
00050B7A <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
00050B7E <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
00050B80 <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
00050B85 <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
00050B86 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
00050B88 <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
00050B8C <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
00050B8E <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
00050B90 <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
00050B94 <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
00050B96 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
00050B9A <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
00050B9C <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
00050BA0 <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
00050BA1 <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
00050BA2 <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
00050BA4 <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
00050BA8 <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
00050BAA <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
00050BAC <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
00050BB0 <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
00050BB2 <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
00050BB6 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
00050BB8 <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
00050BBD <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
00050BBE <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
00050BC0 <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
00050BC4 <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
00050BC6 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
00050BC8 <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
00050BCC <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
00050BCE <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
00050BD2 <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
00050BD4 <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
00050BD9 <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
00050BDA <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
00050BDC <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
00050BE0 <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
00050BE2 <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
00050BE4 <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
00050BE8 <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
00050BEA <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
00050BEE <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
00050BF0 <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
00050BF5 <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
00050BF6 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
00050BF8 <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
00050BFC <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
00050BFE <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
00050C00 <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
00050C04 <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
00050C06 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
00050C0A <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
00050C0C <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
00050C11 <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
00050C12 <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
00050C14 <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
00050C18 <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
00050C1A <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
00050C1C <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
00050C20 <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
00050C22 <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
00050C26 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
00050C28 <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
00050C2D <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
00050C2E <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
00050C30 <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
00050C34 <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
00050C36 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
00050C38 <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
00050C3C <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
00050C3E <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
00050C42 <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
00050C44 <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
00050C48 <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
00050C49 <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
00050C4A <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
00050C4C <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
00050C50 <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
00050C52 <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
00050C54 <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
00050C58 <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
00050C5A <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
00050C5E <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
00050C60 <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
00050C65 <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
00050C66 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
00050C68 <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
00050C6C <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
00050C6E <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
00050C70 <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
00050C74 <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
00050C76 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
00050C7A <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
00050C7C <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
00050C82 <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
00050C83 <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
00050C84 <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
00050C86 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
00050C8A <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
00050C8C <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
00050C8E <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
00050C92 <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
00050C94 <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
00050C98 <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
00050C9A <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
00050C9E <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
00050C9F <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
00050CA0 <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
00050CA2 <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
00050CA6 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
00050CA8 <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
00050CAA <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
00050CAE <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
00050CB0 <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
00050CB4 <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
00050CB6 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
00050CBB <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
00050CBC <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
00050CBE <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
00050CC2 <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
00050CC4 <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
00050CC6 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
00050CCA <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
00050CCC <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
00050CD0 <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
00050CD2 <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
00050CD9 <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
00050CDA <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
00050CDC <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
00050CDE <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
00050CE0 <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
00050CE2 <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
00050CE4 <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
00050CE6 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
00050CE8 <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
00050CEA <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
00050CEC <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
00050CF0 <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
00050CF2 <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
00050CF4 <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
00050CF6 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
00050CF8 <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
00050CFC <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
00050D02 <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
00050D06 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
00050D08 <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
00050D0A <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
00050D0C <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
00050D0E <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
00050D10 <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
00050D12 <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
00050D16 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
00050D1A <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
00050D1E <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
00050D22 <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
00050D26 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
00050D28 <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
00050D2A <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
00050D2E <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
00050D32 <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
00050D36 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
00050D3A <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
00050D3C <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
00050D3E <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
00050D42 <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
00050D46 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
00050D4A <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
00050D4E <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
00050D50 <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
00050D52 <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
00050D54 <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
00050D58 <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
00050D5A <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
00050D5E <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
00050D60 <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
00050D64 <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
00050D66 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
00050D6A <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
00050D6E <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
00050D72 <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
00050D76 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
00050D7A <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
00050D7E <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
00050D82 <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
00050D86 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
00050D8A <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
00050D8E <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
00050D92 <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
00050D96 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
00050D9A <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
00050D9E <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
00050DA2 <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
00050DA6 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
00050DAA <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
00050DAE <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
00050DB2 <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
00050DB6 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
00050DBA <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
00050DBE <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
00050DC2 <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
00050DC6 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
00050DCA <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
00050DCE <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
00050DD0 <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
00050DD4 <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
00050DD8 <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
00050DDC <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
00050DE0 <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
00050DE4 <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
00050DE8 <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
00050DEC <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
00050DF0 <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
00050DF4 <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
00050DF6 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
00050DF8 <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
00050DFA <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
00050DFC <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
00050DFE <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
00050E02 <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
00050E06 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
00050E0A <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
00050E0E <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
00050E10 <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
00050E14 <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
00050E18 <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
00050E1C <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
00050E20 <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
00050E22 <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
00050E24 <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
00050E28 <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
00050E2C <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
00050E30 <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
00050E34 <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
00050E38 <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
00050E3C <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
00050E3E <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
00050E40 <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
00050E44 <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
00050E48 <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
00050E4C <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
00050E4E <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
00050E52 <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
00050E56 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
00050E58 <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
00050E5C <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
00050E60 <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
00050E62 <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
00050E66 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
00050E6A <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
00050E6E <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
00050E72 <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
00050E76 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
00050E78 <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
00050E7C <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
00050E7E <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
00050E80 <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
00050E82 <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
00050E86 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
00050E8A <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
00050E8E <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
00050E92 <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
00050E96 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
00050E9A <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
00050E9E <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
00050EA2 <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
00050EA6 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
00050EAA <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
00050EAE <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
00050EB2 <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
00050EB4 <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
00050EB8 <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
00050EBC <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
00050EBE <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
00050EC0 <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
00050EC2 <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
00050EC6 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
00050ECA <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
00050ECC <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
00050ED0 <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
00050ED2 <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
00050ED4 <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
00050ED6 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
00050EDA <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
00050EDE <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
00050EE0 <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
00050EE2 <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
00050EE6 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
00050EEA <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
00050EEE <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
00050EF2 <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
00050EF4 <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
00050EF8 <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
00050EFC <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
00050F00 <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
00050F02 <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
00050F04 <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
00050F06 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
00050F08 <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
00050F0A <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
00050F0C <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
00050F10 <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
00050F14 <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
00050F16 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
00050F1A <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
00050F1C <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
00050F20 <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
00050F24 <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
00050F26 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
00050F28 <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
00050F2A <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
00050F2E <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
00050F30 <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
00050F34 <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
00050F38 <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
00050F3C <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
00050F3E <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
00050F42 <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
00050F46 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
00050F48 <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
00050F4C <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
00050F50 <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
00050F54 <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
00050F58 <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
00050F5C <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
00050F60 <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
00050F64 <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
00050F68 <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
00050F6A <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
00050F6F <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
00050F70 <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
00050F74 <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
00050F76 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
00050F7D <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
00050F7E <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
00050F82 <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
00050F84 <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
00050F8B <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
00050F8C <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
00050F90 <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
00050F92 <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
00050F9A <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
00050F9B <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
00050F9C <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
00050FA0 <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
00050FA2 <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
00050FA7 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
00050FBB <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
00050FBC <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
00050FC0 <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
00050FC2 <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
00050FC6 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
00050FC7 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
00050FC8 <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
00050FCC <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
00050FCE <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
00050FD1 <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
00050FD2 <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
00050FD6 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
00050FD8 <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
00050FDF <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
00050FE0 <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
00050FE4 <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
00050FE6 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
00050FEC <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
00050FF9 <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
00050FFA <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
00050FFE <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
00051000 <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
00051007 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
0005101F <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
00051020 <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
00051024 <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
00051026 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
0005102A <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
0005104D <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
0005104E <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
00051052 <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
00051054 <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
0005105B <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
00051066 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
0005106A <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
0005106C <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
00051072 <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
00051073 <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
00051074 <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
00051078 <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
0005107A <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
0005107F <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
00051080 <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
00051084 <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
00051086 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
0005108D <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
0005109F <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
000510A0 <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
000510A4 <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
000510A6 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
000510B0 <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
000510B1 <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
000510B2 <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
000510B6 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
000510B8 <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
000510C0 <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
000510CD <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
000510CE <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
000510D2 <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
000510D4 <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
000510D7 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
00051112 <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
00051116 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
00051118 <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
0005111C <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
0005111D <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
0005111E <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
00051122 <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
00051124 <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
0005112C <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
0005112D <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
0005112E <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
00051132 <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
00051134 <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
0005113C <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
0005114C <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
00051150 <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
00051152 <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
0005115B <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
00051163 <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
00051164 <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
00051168 <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
0005116A <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
00051172 <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
0005117B <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
0005117C <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
00051180 <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
00051182 <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
0005118A <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
0005118B <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
0005118C <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
00051190 <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
00051192 <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
00051198 <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
00051199 <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
0005119A <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
0005119E <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
000511A0 <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
000511A7 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
000511A8 <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
000511AC <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
000511AE <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
000511B5 <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
000511B6 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
000511BA <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
000511BC <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
000511C3 <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
000511C4 <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
000511C8 <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
000511CA <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
000511D1 <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
000511D2 <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
000511D6 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
000511D8 <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
000511DD <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
000511F3 <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
000511F4 <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
000511F8 <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
000511FA <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
00051204 <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
00051205 <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
00051206 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
0005120A <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
0005120C <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
00051217 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
00051218 <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
0005121C <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
0005121E <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
0005122A <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
00051257 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
00051258 <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
0005125C <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
0005125E <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
00051266 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
0005129D <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
0005129E <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
000512A2 <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
000512A4 <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
000512AC <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
000512CB <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
000512CC <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
000512D0 <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
000512D2 <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
000512D9 <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
0005130F <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
00051310 <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
00051314 <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
00051316 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
0005131F <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
00051354 <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
00051358 <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
0005135A <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
0005136A <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
000513A1 <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
000513A2 <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
000513A2 <AmiBlitz3.ab2@28325> INCLUDE "internal_commands.ab2"
000513A6 <AmiBlitz3.ab2@28330>            Dc.l cif_lt                                     ;ciflt
000513AA <AmiBlitz3.ab2@28331>            Dc.l cif_eq                                     ;cifeq
000513AE <AmiBlitz3.ab2@28332>            Dc.l cif_gt                                     ;cifgt
000513B2 <AmiBlitz3.ab2@28333>            Ds.l 1                                          ;0
000513B6 <AmiBlitz3.ab2@28334>            Dc.l cif_le                                     ;cifle
000513BA <AmiBlitz3.ab2@28335>            Dc.l cif_ne                                     ;cifne
000513BE <AmiBlitz3.ab2@28336>            Dc.l cif_le                                     ;cifge
000513C2 <AmiBlitz3.ab2@28337>            Ds.l 1                                          ;0
000513C6 <AmiBlitz3.ab2@28338>            Dc.l cif_ge                                     ;cifge
000513CA <AmiBlitz3.ab2@28339>            Dc.l cif_ne                                     ;cifne
000513CE <AmiBlitz3.ab2@28340>            Dc.l cif_ge                                     ;cifge
000513D2 <AmiBlitz3.ab2@28341>            Ds.l 1                                          ;0
000513D6 <AmiBlitz3.ab2@28344>            Dc.l do_newtype                                 ;donewtype
000513DA <AmiBlitz3.ab2@28345>            Dc.l do_end                                     ;doend
000513DE <AmiBlitz3.ab2@28346>            Dc.l do_let                                     ;dolet
000513E2 <AmiBlitz3.ab2@28347>            Dc.l do_dim                                     ;dodim
000513E6 <AmiBlitz3.ab2@28348>            Dc.l do_goto                                    ;dogoto
000513EA <AmiBlitz3.ab2@28349>            Dc.l do_gosub                                   ;dogosub
000513EE <AmiBlitz3.ab2@28350>            Dc.l do_return                                  ;doreturn
000513F2 <AmiBlitz3.ab2@28351>            Dc.l do_statement                               ;dostatement
000513F6 <AmiBlitz3.ab2@28352>            Dc.l do_function                                ;dofunc
000513FA <AmiBlitz3.ab2@28353>            Dc.l do_mousewait                               ;domwait
000513FE <AmiBlitz3.ab2@28354>            Dc.l do_if                                      ;doif
00051402 <AmiBlitz3.ab2@28355>            Dc.l do_while                                   ;dowhile
00051406 <AmiBlitz3.ab2@28356>            Dc.l do_Macro                                   ;domacro
0005140A <AmiBlitz3.ab2@28357>            Dc.l do_select                                  ;doselect
0005140E <AmiBlitz3.ab2@28358>            Dc.l do_case                                    ;docase
00051412 <AmiBlitz3.ab2@28359>            Dc.l do_default                                 ;dodefault
00051416 <AmiBlitz3.ab2@28360>            Dc.l do_AsmExit                                 ;doasmexit
0005141A <AmiBlitz3.ab2@28361>            Dc.l do_xinclude                                ;doxinclude
0005141E <AmiBlitz3.ab2@28362>            Dc.l do_INCLUDE                                 ;doinclude
00051422 <AmiBlitz3.ab2@28363>            Dc.l do_syntax                                  ;syntaxerr
00051426 <AmiBlitz3.ab2@28364>            Dc.l do_shared                                  ;doshared
0005142A <AmiBlitz3.ab2@28365>            Dc.l do_for                                     ;dofor
0005142E <AmiBlitz3.ab2@28366>            Dc.l do_next                                    ;donext
00051432 <AmiBlitz3.ab2@28367>            Dc.l syntaxerr                                  ; To
00051436 <AmiBlitz3.ab2@28368>            Dc.l syntaxerr                                  ; Step
0005143A <AmiBlitz3.ab2@28369>            Dc.l do_data                                    ;dodata
0005143E <AmiBlitz3.ab2@28370>            Dc.l do_read                                    ;doread
00051442 <AmiBlitz3.ab2@28374>            Dc.l syntaxerr                                  ; CNIF
00051446 <AmiBlitz3.ab2@28375>            Dc.l syntaxerr                                  ; CSIF
0005144A <AmiBlitz3.ab2@28376>            Dc.l syntaxerr                                  ; CELSE
0005144E <AmiBlitz3.ab2@28377>            Dc.l syntaxerr                                  ; CEND
00051452 <AmiBlitz3.ab2@28378>            Dc.l do_cerr                                    ;docerr
00051456 <AmiBlitz3.ab2@28379>            Dc.l do_then                                    ;dothen
0005145A <AmiBlitz3.ab2@28380>            Dc.l do_else                                    ;doelse
0005145E <AmiBlitz3.ab2@28381>            Dc.l do_even4                                   ;doeven4
00051462 <AmiBlitz3.ab2@28382>            Dc.l do_even8                                   ;doeven8
00051466 <AmiBlitz3.ab2@28384>            Dc.l do_dc                                      ;dodc
0005146A <AmiBlitz3.ab2@28385>            Dc.l do_ds                                      ;dods
0005146E <AmiBlitz3.ab2@28386>            Dc.l do_even                                    ;doeven
00051472 <AmiBlitz3.ab2@28387>            Dc.l do_dcb                                     ;dodcb
00051476 <AmiBlitz3.ab2@28388>            Dc.l do_setreg                                  ;dosetreg
0005147A <AmiBlitz3.ab2@28389>            Dc.l do_IncBin                                  ;doincbin
0005147E <AmiBlitz3.ab2@28390>            Dc.l do_free                                    ;dofree
00051482 <AmiBlitz3.ab2@28391>            Dc.l do_use                                     ;douse
00051486 <AmiBlitz3.ab2@28392>            Dc.l do_Stop                                    ;dostop
0005148A <AmiBlitz3.ab2@28393>            Dc.l do_Cont                                    ;docont
0005148E <AmiBlitz3.ab2@28394>            Dc.l syntaxerr                                  ;syntaxeer
00051492 <AmiBlitz3.ab2@28395>            Dc.l do_SetInt                                  ;dosetint
00051496 <AmiBlitz3.ab2@28396>            Dc.l do_ClrInt                                  ;doclrint
0005149A <AmiBlitz3.ab2@28397>            Dc.l do_MaxLen                                  ;domaxlen
0005149E <AmiBlitz3.ab2@28398>            Dc.l do_DEFTYPE                                 ;dodeftype
000514A2 <AmiBlitz3.ab2@28399>            Dc.l do_BLITZ                                   ;doblitz
000514A6 <AmiBlitz3.ab2@28400>            Dc.l do_AMIGA                                   ;doamiga
000514AA <AmiBlitz3.ab2@28401>            Dc.l do_QAMIGA                                  ;doqamiga
000514AE <AmiBlitz3.ab2@28402>            Dc.l do_VWait                                   ;dovwait
000514B2 <AmiBlitz3.ab2@28403>            Dc.l do_LibJsr                                  ;dolibjsr
000514B6 <AmiBlitz3.ab2@28404>            Dc.l do_TokeJsr                                 ;dotokejsr
000514BA <AmiBlitz3.ab2@28405>            Dc.l do_BLibJsr                                 ;doblibjsr
000514BE <AmiBlitz3.ab2@28406>            Dc.l _extb                                      ;syntaxerr
000514C2 <AmiBlitz3.ab2@28410>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
000514C6 <AmiBlitz3.ab2@28411>            Dc.l do_SetErr                                  ;doseterr
000514CA <AmiBlitz3.ab2@28412>            Dc.l do_ClrErr                                  ;doclrerr
000514CE <AmiBlitz3.ab2@28413>            Dc.l syntaxerr                                  ;syntaxerr
000514D2 <AmiBlitz3.ab2@28414>            Dc.l do_ErrFail                                 ;doerrfail
000514D6 <AmiBlitz3.ab2@28415>            Dc.l syntaxerr
000514DA <AmiBlitz3.ab2@28416>            Dc.l syntaxerr                                  ;mod
000514DE <AmiBlitz3.ab2@28417>            Dc.l syntaxerr                                  ;Pi
000514E2 <AmiBlitz3.ab2@28418>            Dc.l do_Repeat                                  ;dorepeat
000514E6 <AmiBlitz3.ab2@28419>            Dc.l do_Until                                   ;dountil
000514EA <AmiBlitz3.ab2@28420>            Dc.l do_PutReg                                  ;doputreg
000514EE <AmiBlitz3.ab2@28421>            Dc.l do_Pop                                     ;dopop
000514F2 <AmiBlitz3.ab2@28422>            Dc.l do_INCDIR                                  ;doincdir
000514F6 <AmiBlitz3.ab2@28423>            Dc.l mydo_Endif2                                ;mydoendif2
000514FA <AmiBlitz3.ab2@28424>            Dc.l do_Wend                                    ;dowend
000514FE <AmiBlitz3.ab2@28425>            Dc.l do_SysJsr                                  ;dosysjsr
00051502 <AmiBlitz3.ab2@28426>            Dc.l do_WBStartup                               ;dowbstartup
00051506 <AmiBlitz3.ab2@28427>            Dc.l syntaxerr
0005150A <AmiBlitz3.ab2@28428>            Dc.l do_Ongo                                    ;doongo
0005150E <AmiBlitz3.ab2@28429>            Dc.l syntaxerr
00051512 <AmiBlitz3.ab2@28430>            Dc.l do_Forever                                 ;doforever
00051516 <AmiBlitz3.ab2@28431>            Dc.l do_Restore                                 ;dorestore
0005151A <AmiBlitz3.ab2@28432>            Dc.l do_Exchange                                ;doexchange
0005151E <AmiBlitz3.ab2@28433>            Dc.l do_USEPATH                                 ;dousepath
00051522 <AmiBlitz3.ab2@28434>            Dc.l do_CloseEd                                 ;doclosed
00051526 <AmiBlitz3.ab2@28435>            Dc.l do_NoCli                                   ;donocli
0005152A <AmiBlitz3.ab2@28436>            Dc.l syntaxerr                                  ;syntaxerr
0005152E <AmiBlitz3.ab2@28437>            Dc.l syntaxerr                                  ;syntaxerr
00051532 <AmiBlitz3.ab2@28438>            Dc.l syntaxerr                                  ;syntaxerr
00051536 <AmiBlitz3.ab2@28439>            Dc.l syntaxerr                                  ;syntaxerr
0005153A <AmiBlitz3.ab2@28440>            Dc.l syntaxerr                                  ;syntaxerr
0005153E <AmiBlitz3.ab2@28441>            Dc.l do_runerrson                               ;dorunerrson
00051542 <AmiBlitz3.ab2@28442>            Dc.l do_runerrsoff                              ;dorunerrsoff
00051546 <AmiBlitz3.ab2@28443>            Dc.l do_uselastpath
0005154A <AmiBlitz3.ab2@28444>            Dc.l do_regload
0005154E <AmiBlitz3.ab2@28445>            Dc.l do_regsave
00051552 <AmiBlitz3.ab2@28446>            Dc.l do_Object
00051556 <AmiBlitz3.ab2@28447>            Dc.l do_usepath2
0005155A <AmiBlitz3.ab2@28448>            Dc.l do_LastRunErrsMode
0005155E <AmiBlitz3.ab2@28471> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
00051562 <AmiBlitz3.ab2@28472>            Dc.l menu_run
00051566 <AmiBlitz3.ab2@28473>            Dc.l menu_createexecutable
0005156A <AmiBlitz3.ab2@28474>            Dc.l menu_dummyfunc          ;was menu_compileroptions
0005156E <AmiBlitz3.ab2@28475>            Dc.l menu_createresidentfile
00051572 <AmiBlitz3.ab2@28476>            Dc.l menu_viewnewtypes
00051576 <AmiBlitz3.ab2@28477>            Dc.l menu_simcliarguments
0005157A <AmiBlitz3.ab2@28478>            Dc.l menu_dummyfunc          ;was menu_calculator
0005157E <AmiBlitz3.ab2@28479>            Dc.l menu_reloadlibs
00051582 <AmiBlitz3.ab2@28480>            Dc.l menu_loaddebugmodule
00051586 <AmiBlitz3.ab2@28481>            Dc.l menu_dummyfunc
0005158A <AmiBlitz3.ab2@28482>            Dc.l menu_newcreate
0005158E <AmiBlitz3.ab2@28483>            Dc.l menu_dummyfunc
00051592 <AmiBlitz3.ab2@28484>            Dc.l toggledebug
00051596 <AmiBlitz3.ab2@28485>            Dc.l menu_dummyfunc
0005159A <AmiBlitz3.ab2@28486>            Dc.l menu_dummyfunc
0005159C <AmiBlitz3.ab2@28487> Even4
000515C6 <AmiBlitz3.ab2@28491>   !basic
00051628 <AmiBlitz3.ab2@28492>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
00051646 <AmiBlitz3.ab2@28493>   !asm
00051648 <AmiBlitz3.ab2@28494> RTS
00051649 <AmiBlitz3.ab2@28500> set_autorun:               Dc.b $00
0005164E <AmiBlitz3.ab2@28501> autorun:                   Dc.b $80,$01,$01,$00,$01
0005164F <AmiBlitz3.ab2@28503> set_interruptcheck:        Dc.b $00
00051654 <AmiBlitz3.ab2@28504> interruptcheck             Dc.b $80,$01,$01,$00,$01
00051655 <AmiBlitz3.ab2@28506> set_assemblercheck:        Ds.b 1
0005165A <AmiBlitz3.ab2@28507> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0005165B <AmiBlitz3.ab2@28509> set_overflowcheck:         Ds.b 1
00051660 <AmiBlitz3.ab2@28510> overflowcheck:             Dc.b $00,$01,$01,$00,$01
00051666 <AmiBlitz3.ab2@28512> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0005166C <AmiBlitz3.ab2@28513> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
00051672 <AmiBlitz3.ab2@28514> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
00051674 <AmiBlitz3.ab2@28515> Even4
00051680 <AmiBlitz3.ab2@28518> tsthead:                   Dc.l $000003F3,$00000000,$00000001
00051688 <AmiBlitz3.ab2@28519>                            Dc.l $00000000,$00000000
00051690 <AmiBlitz3.ab2@28520> tstsize1:                  Dc.l $00000100,$000003E9
00051694 <AmiBlitz3.ab2@28521> tstsize2:                  Dc.l $00000100
00051698 <AmiBlitz3.ab2@28522> tstend:                    Dc.l $000003EC
000516A0 <AmiBlitz3.ab2@28523> tstsize3:                  Ds.l 2
000516A4 <AmiBlitz3.ab2@28524> tstdone:                   Dc.l $000003F2
000516A8 <AmiBlitz3.ab2@28527> edstruct:                  Dc.l tokens                     ;data for ted
000516AC <AmiBlitz3.ab2@28531>                            Dc.l 0
000516B0 <AmiBlitz3.ab2@28533>                            Dc.l read_xtrafile              ;load .xtra routine
000516B4 <AmiBlitz3.ab2@28534>                            Dc.l write_xtrafile             ;save .xtra routine
000516B8 <AmiBlitz3.ab2@28535>                            Dc.l call_menuentry             ;Menu Routine
000516BC <AmiBlitz3.ab2@28536>                            Ds.l 1                          ;cleanup (?)
000516C0 <AmiBlitz3.ab2@28537>                            Dc.b ":",34,".;"
000517BC <AmiBlitz3.ab2@28540> 
0005189C <AmiBlitz3.ab2@28541>                            Ds.l 56
0005189E <AmiBlitz3.ab2@28546> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
000518A2 <AmiBlitz3.ab2@28549> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000518A4 <AmiBlitz3.ab2@28550>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000518A8 <AmiBlitz3.ab2@28551>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
000518AE <AmiBlitz3.ab2@28555> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
000518B0 <AmiBlitz3.ab2@28559>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
000518B4 <AmiBlitz3.ab2@28562> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
000518B8 <AmiBlitz3.ab2@28565> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
000518BC <AmiBlitz3.ab2@28566>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
000518BE <AmiBlitz3.ab2@28572>                            Dc.b $4A,$40                                             ;TST.W   D0
000518C0 <AmiBlitz3.ab2@28576>                            Dc.b $4A,$80                                             ;TST.L   D0
000518C2 <AmiBlitz3.ab2@28579> nops8:                     Dc.b $4E,$71                                             ;NOP
000518C4 <AmiBlitz3.ab2@28580>                            Dc.b $4E,$71                                             ;NOP
000518C6 <AmiBlitz3.ab2@28581>                            Dc.b $4E,$71                                             ;NOP
000518C8 <AmiBlitz3.ab2@28582>                            Dc.b $4E,$71                                             ;NOP
000518CA <AmiBlitz3.ab2@28583> nops4:                     Dc.b $4E,$71                                             ;NOP
000518CC <AmiBlitz3.ab2@28585>                            Dc.b $4E,$71                                             ;NOP
000518CE <AmiBlitz3.ab2@28586>                            Dc.b $4E,$71                                             ;NOP
000518D0 <AmiBlitz3.ab2@28587>                            Dc.b $4E,$71                                             ;NOP
000518D4 <AmiBlitz3.ab2@28591> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
000518D8 <AmiBlitz3.ab2@28594> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
000518DA <AmiBlitz3.ab2@28597> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
000518DC <AmiBlitz3.ab2@28600> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000518DE <AmiBlitz3.ab2@28601>                            Dc.b $C1,$8B                                             ;EXG D0,A3
000518E2 <AmiBlitz3.ab2@28602>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
000518E4 <AmiBlitz3.ab2@28603>                            Dc.b $C1,$8B                                             ;EXG D0,A3
000518E6 <AmiBlitz3.ab2@28609> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000518EA <AmiBlitz3.ab2@28610>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
000518EC <AmiBlitz3.ab2@28615> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000518F0 <AmiBlitz3.ab2@28616>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
000518F2 <AmiBlitz3.ab2@28620> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
000518F4 <AmiBlitz3.ab2@28621>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
000518F8 <AmiBlitz3.ab2@28627> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
000518FA <AmiBlitz3.ab2@28628>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
000518FE <AmiBlitz3.ab2@28629>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
00051902 <AmiBlitz3.ab2@28633> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
00051904 <AmiBlitz3.ab2@28634>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
00051908 <AmiBlitz3.ab2@28635>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0005190A <AmiBlitz3.ab2@28638> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0005190E <AmiBlitz3.ab2@28641> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
00051912 <AmiBlitz3.ab2@28644> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
00051916 <AmiBlitz3.ab2@28647> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0005191A <AmiBlitz3.ab2@28651>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0005191C <AmiBlitz3.ab2@28652>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0005191E <AmiBlitz3.ab2@28653>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
00051922 <AmiBlitz3.ab2@28658>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00051924 <AmiBlitz3.ab2@28659>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
00051926 <AmiBlitz3.ab2@28660>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0005192A <AmiBlitz3.ab2@28665>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0005192C <AmiBlitz3.ab2@28666>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0005192E <AmiBlitz3.ab2@28667>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
00051932 <AmiBlitz3.ab2@28672>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
00051934 <AmiBlitz3.ab2@28673>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00051936 <AmiBlitz3.ab2@28674>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0005193A <AmiBlitz3.ab2@28675>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0005193C <AmiBlitz3.ab2@28676>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
00051940 <AmiBlitz3.ab2@28681>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00051942 <AmiBlitz3.ab2@28682>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
00051946 <AmiBlitz3.ab2@28683>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
00051948 <AmiBlitz3.ab2@28684>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0005194C <AmiBlitz3.ab2@28685>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0005194E <AmiBlitz3.ab2@28686>                            Dc.b $C1,$41                                             ;EXG D0,D1
00051950 <AmiBlitz3.ab2@28689>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
00051954 <AmiBlitz3.ab2@28694>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00051956 <AmiBlitz3.ab2@28695>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0005195A <AmiBlitz3.ab2@28696>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0005195C <AmiBlitz3.ab2@28697>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00051960 <AmiBlitz3.ab2@28698>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
00051962 <AmiBlitz3.ab2@28699>                            Dc.b $C1,$41                                             ;EXG D0,D1
00051964 <AmiBlitz3.ab2@28702>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
00051968 <AmiBlitz3.ab2@28707>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0005196A <AmiBlitz3.ab2@28708>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0005196E <AmiBlitz3.ab2@28709>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
00051970 <AmiBlitz3.ab2@28710>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00051974 <AmiBlitz3.ab2@28711>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
00051976 <AmiBlitz3.ab2@28712>                            Dc.b $C1,$41                                             ;EXG D0,D1
00051978 <AmiBlitz3.ab2@28715>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0005197C <AmiBlitz3.ab2@28720>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0005197E <AmiBlitz3.ab2@28721>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00051982 <AmiBlitz3.ab2@28722>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
00051988 <AmiBlitz3.ab2@28723>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0005198C <AmiBlitz3.ab2@28724>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0005198E <AmiBlitz3.ab2@28725>                            Dc.b $C1,$41                                             ;EXG D0,D1
00051992 <AmiBlitz3.ab2@28732>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
00051994 <AmiBlitz3.ab2@28736> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
00051996 <AmiBlitz3.ab2@28739> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0005199A <AmiBlitz3.ab2@28742> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0005199C <AmiBlitz3.ab2@28743> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
000519A0 <AmiBlitz3.ab2@28746> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
000519A2 <AmiBlitz3.ab2@28749> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
000519A6 <AmiBlitz3.ab2@28752> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
000519A8 <AmiBlitz3.ab2@28756>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000519AA <AmiBlitz3.ab2@28759> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
000519AC <AmiBlitz3.ab2@28762> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
000519B0 <AmiBlitz3.ab2@28765> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
000519B4 <AmiBlitz3.ab2@28768> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
000519B8 <AmiBlitz3.ab2@28771> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
000519BA <AmiBlitz3.ab2@28774> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
000519BC <AmiBlitz3.ab2@28777> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
000519C0 <AmiBlitz3.ab2@28780> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
000519C6 <AmiBlitz3.ab2@28781>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
000519C8 <AmiBlitz3.ab2@28782>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
000519CC <AmiBlitz3.ab2@28786> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
000519CE <AmiBlitz3.ab2@28787>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
000519D0 <AmiBlitz3.ab2@28791> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
000519D4 <AmiBlitz3.ab2@28794> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
000519D6 <AmiBlitz3.ab2@28798>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
000519D8 <AmiBlitz3.ab2@28802>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
000519DA <AmiBlitz3.ab2@28806>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
000519DE <AmiBlitz3.ab2@28809> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
000519E2 <AmiBlitz3.ab2@28812> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
000519E4 <AmiBlitz3.ab2@28815> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
000519E6 <AmiBlitz3.ab2@28818> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
000519E8 <AmiBlitz3.ab2@28821> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
000519EC <AmiBlitz3.ab2@28824> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
000519F0 <AmiBlitz3.ab2@28827> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
000519F2 <AmiBlitz3.ab2@28830> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
000519F4 <AmiBlitz3.ab2@28834>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
000519F8 <AmiBlitz3.ab2@28837>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
000519FA <AmiBlitz3.ab2@28843>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
000519FE <AmiBlitz3.ab2@28846>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
00051A00 <AmiBlitz3.ab2@28852>                            Dc.b $CB,$4C                                             ;EXG A5,A4
00051A04 <AmiBlitz3.ab2@28856> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
00051A06 <AmiBlitz3.ab2@28859> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
00051A08 <AmiBlitz3.ab2@28863>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
00051A0A <AmiBlitz3.ab2@28867>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
00051A10 <AmiBlitz3.ab2@28870> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
00051A16 <AmiBlitz3.ab2@28873> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
00051A1E <AmiBlitz3.ab2@28877> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
00051A22 <AmiBlitz3.ab2@28878>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
00051A24 <AmiBlitz3.ab2@28882> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
00051A28 <AmiBlitz3.ab2@28885> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
00051A2C <AmiBlitz3.ab2@28888> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
00051A30 <AmiBlitz3.ab2@28891> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
00051A34 <AmiBlitz3.ab2@28892> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
00051A38 <AmiBlitz3.ab2@28896>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
00051A3C <AmiBlitz3.ab2@28898>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
00051A3E <AmiBlitz3.ab2@28901> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00051A42 <AmiBlitz3.ab2@28904> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
00051A44 <AmiBlitz3.ab2@28907> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
00051A46 <AmiBlitz3.ab2@28908>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
00051A48 <AmiBlitz3.ab2@28909>                            Dc.b $4A,$92                                             ;TST.L   (A2)
00051A4C <AmiBlitz3.ab2@28910> 
00051A4E <AmiBlitz3.ab2@28911>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
00051A50 <AmiBlitz3.ab2@28912>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
00051A52 <AmiBlitz3.ab2@28913>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
00051A58 <AmiBlitz3.ab2@28915>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
00051A5A <AmiBlitz3.ab2@28920> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
00051A5C <AmiBlitz3.ab2@28921>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
00051A5E <AmiBlitz3.ab2@28925> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
00051A62 <AmiBlitz3.ab2@28928> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
00051A64 <AmiBlitz3.ab2@28931> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
00051A66 <AmiBlitz3.ab2@28935>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
00051A68 <AmiBlitz3.ab2@28938> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
00051A6C <AmiBlitz3.ab2@28941> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00051A6E <AmiBlitz3.ab2@28942>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00051A72 <AmiBlitz3.ab2@28946> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
00051A76 <AmiBlitz3.ab2@28947> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
00051A7A <AmiBlitz3.ab2@28951> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
00051A7E <AmiBlitz3.ab2@28955> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
00051A84 <AmiBlitz3.ab2@28959> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
00051A8A <AmiBlitz3.ab2@28962> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
00051A8E <AmiBlitz3.ab2@28966> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
00051A92 <AmiBlitz3.ab2@28970>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
00051A96 <AmiBlitz3.ab2@28971>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
00051A9C <AmiBlitz3.ab2@28976>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
00051AA0 <AmiBlitz3.ab2@28981>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
00051AA2 <AmiBlitz3.ab2@28986>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
00051AA6 <AmiBlitz3.ab2@28990>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
00051AA8 <AmiBlitz3.ab2@28994> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
00051AAA <AmiBlitz3.ab2@28997> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
00051AAC <AmiBlitz3.ab2@28998>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
00051AB0 <AmiBlitz3.ab2@29002>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
00051AB4 <AmiBlitz3.ab2@29006> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
00051AB8 <AmiBlitz3.ab2@29009> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
00051ABA <AmiBlitz3.ab2@29012> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
00051ABE <AmiBlitz3.ab2@29015> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
00051AC0 <AmiBlitz3.ab2@29018> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
00051AC9 <AmiBlitz3.ab2@29022>                            Dc.b "ram:test",0
00051ACA <AmiBlitz3.ab2@29023> Even
00051ACE <AmiBlitz3.ab2@29027>                            Dc.l  0                          ;was  Ds.w 3 org source
00051AD0 <AmiBlitz3.ab2@29029>                            Dc.w  0
00051AD4 <AmiBlitz3.ab2@29032> _mathffpbase:              Ds.l 1                           ;maths org source
00051AD6 <AmiBlitz3.ab2@29033> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
00051AD8 <AmiBlitz3.ab2@29034> typelen:                   Ds.w 1
00051ADC <AmiBlitz3.ab2@29035> prevtype:                  Ds.l 1
00051AE0 <AmiBlitz3.ab2@29036> lastsourcepos:             Ds.l 1                           ;prevloc org source
00051AE2 <AmiBlitz3.ab2@29037> lastchar:                  Ds.w 1
00051AE6 <AmiBlitz3.ab2@29038> thistype:                  Ds.l 1
00051AEA <AmiBlitz3.ab2@29039> errstack:                  Ds.l 1
00051AEE <AmiBlitz3.ab2@29040> errcont:                   Ds.l 1
00051AF0 <AmiBlitz3.ab2@29041> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
00051AF2 <AmiBlitz3.ab2@29042> linesleft:                 Ds.w 1
00051AF6 <AmiBlitz3.ab2@29043> sourceline:                Ds.l 1                          ;thisitem org source
00051AFA <AmiBlitz3.ab2@29044> varbase:                   Ds.l 1                          ;firstvar org source
00051AFE <AmiBlitz3.ab2@29045> alllocals:                 Ds.l 1
00051B02 <AmiBlitz3.ab2@29046> firstlocal:                Ds.l 1
00051B06 <AmiBlitz3.ab2@29047> firstglob:                 Ds.l 1
00051B08 <AmiBlitz3.ab2@29048> globalvarpointer:          Ds.w 1                          ;varoff org source
00051B0A <AmiBlitz3.ab2@29049> locvaroff:                 Ds.w 1
00051B0E <AmiBlitz3.ab2@29050> firstitem_:                 Ds.l 1
00051B10 <AmiBlitz3.ab2@29051> numlines_org:              Ds.w 1                          ;numlines org source
00051B12 <AmiBlitz3.ab2@29052> returncode_org:            Ds.w 1                          ;returncode org source
00051B16 <AmiBlitz3.ab2@29053> firstiff:                  Ds.l 1                          ;firstif org source
00051B1A <AmiBlitz3.ab2@29054> ptr_seg_ped:               Ds.l 1                          ;segadd org source
00051D1A <AmiBlitz3.ab2@29055> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
00051D2A <AmiBlitz3.ab2@29056> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
00051F2A <AmiBlitz3.ab2@29057> str_libfilename:           Ds.b #MAX_STRINGSIZE
0005212A <AmiBlitz3.ab2@29058> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0005232A <AmiBlitz3.ab2@29059> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0005232E <AmiBlitz3.ab2@29061> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0005252E <AmiBlitz3.ab2@29062> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0005272E <AmiBlitz3.ab2@29064> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
00052732 <AmiBlitz3.ab2@29065> size_acidlibs:             Ds.l 1                          ;acidlibs org source
00052932 <AmiBlitz3.ab2@29066> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
00052936 <AmiBlitz3.ab2@29067> size_deflibs:              Ds.l 1                          ;deflibs org source
00052B36 <AmiBlitz3.ab2@29068> str_tempfilename:          Ds.b #MAX_STRINGSIZE
00052D36 <AmiBlitz3.ab2@29070> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
00052D3A <AmiBlitz3.ab2@29071> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
00052F3A <AmiBlitz3.ab2@29073> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
00052F3E <AmiBlitz3.ab2@29079>   Dc.b $E3,$10,$00,$01                                     ;icondata  
00052F42 <AmiBlitz3.ab2@29080>   Dc.b $00,$00,$00,$00
00052F46 <AmiBlitz3.ab2@29081>   Dc.b $00,$19,$00,$11
00052F4A <AmiBlitz3.ab2@29082>   Dc.b $00,$2E,$00,$18
00052F4E <AmiBlitz3.ab2@29083>   Dc.b $00,$04,$00,$03
00052F52 <AmiBlitz3.ab2@29084>   Dc.b $00,$01,$00,$22
00052F56 <AmiBlitz3.ab2@29085>   Dc.b $73,$68,$00,$00
00052F5A <AmiBlitz3.ab2@29086>   Dc.b $00,$00,$00,$00
00052F5E <AmiBlitz3.ab2@29087>   Dc.b $00,$00,$00,$00
00052F62 <AmiBlitz3.ab2@29088>   Dc.b $00,$00,$00,$00
00052F66 <AmiBlitz3.ab2@29089>   Dc.b $00,$00,$00,$00
00052F6A <AmiBlitz3.ab2@29090>   Dc.b $00,$00,$00,$00
00052F6E <AmiBlitz3.ab2@29091>   Dc.b $03,$22,$00,$21
00052F72 <AmiBlitz3.ab2@29092>   Dc.b $3C,$28,$00,$22
00052F76 <AmiBlitz3.ab2@29093>   Dc.b $6E,$C0,$00,$00
00052F7A <AmiBlitz3.ab2@29094>   Dc.b $00,$12,$00,$00
00052F7E <AmiBlitz3.ab2@29095>   Dc.b $00,$0E,$00,$00
00052F82 <AmiBlitz3.ab2@29096>   Dc.b $00,$00,$00,$00
00052F86 <AmiBlitz3.ab2@29097>   Dc.b $00,$00,$00,$00
00052F8A <AmiBlitz3.ab2@29098>   Dc.b $00,$00,$00,$00
00052F8E <AmiBlitz3.ab2@29099>   Dc.b $00,$00,$00,$2E
00052F92 <AmiBlitz3.ab2@29100>   Dc.b $00,$17,$00,$02
00052F96 <AmiBlitz3.ab2@29101>   Dc.b $00,$01,$8E,$80
00052F9A <AmiBlitz3.ab2@29102>   Dc.b $03,$00,$00,$00
00052F9E <AmiBlitz3.ab2@29103>   Dc.b $00,$00,$FF,$FF
00052FA2 <AmiBlitz3.ab2@29104>   Dc.b $FF,$FF,$FF,$FC
00052FA6 <AmiBlitz3.ab2@29105>   Dc.b $80,$00,$00,$00
00052FAA <AmiBlitz3.ab2@29106>   Dc.b $00,$00,$80,$00
00052FAE <AmiBlitz3.ab2@29107>   Dc.b $00,$3F,$BB,$40
00052FB2 <AmiBlitz3.ab2@29108>   Dc.b $80,$1F,$C0,$00
00052FB6 <AmiBlitz3.ab2@29109>   Dc.b $00,$00,$80,$3F
00052FBA <AmiBlitz3.ab2@29110>   Dc.b $C0,$0F,$BB,$40
00052FBE <AmiBlitz3.ab2@29111>   Dc.b $80,$1F,$C0,$00
00052FC2 <AmiBlitz3.ab2@29112>   Dc.b $00,$00,$8E,$00
00052FC6 <AmiBlitz3.ab2@29113>   Dc.b $F8,$00,$00,$00
00052FCA <AmiBlitz3.ab2@29114>   Dc.b $8F,$01,$FF,$00
00052FCE <AmiBlitz3.ab2@29115>   Dc.b $3B,$40,$81,$E3
00052FD2 <AmiBlitz3.ab2@29116>   Dc.b $F7,$C0,$00,$00
00052FD6 <AmiBlitz3.ab2@29117>   Dc.b $80,$7F,$F8,$70
00052FDA <AmiBlitz3.ab2@29118>   Dc.b $3B,$40,$80,$0F
00052FDE <AmiBlitz3.ab2@29119>   Dc.b $7C,$E0,$00,$00
00052FE2 <AmiBlitz3.ab2@29120>   Dc.b $80,$00,$FD,$80
00052FE6 <AmiBlitz3.ab2@29121>   Dc.b $00,$00,$80,$01
00052FEA <AmiBlitz3.ab2@29122>   Dc.b $F6,$00,$FB,$40
00052FEE <AmiBlitz3.ab2@29123>   Dc.b $80,$03,$EF,$00
00052FF2 <AmiBlitz3.ab2@29124>   Dc.b $00,$00,$80,$07
00052FF6 <AmiBlitz3.ab2@29125>   Dc.b $87,$80,$3B,$40
00052FFA <AmiBlitz3.ab2@29126>   Dc.b $80,$0F,$01,$C0
00052FFE <AmiBlitz3.ab2@29127>   Dc.b $00,$00,$80,$03
00053002 <AmiBlitz3.ab2@29128>   Dc.b $F0,$70,$1D,$40
00053006 <AmiBlitz3.ab2@29129>   Dc.b $80,$00,$18,$1C
0005300A <AmiBlitz3.ab2@29130>   Dc.b $00,$00,$80,$00
0005300E <AmiBlitz3.ab2@29131>   Dc.b $10,$06,$03,$40
00053012 <AmiBlitz3.ab2@29132>   Dc.b $80,$00,$20,$1F
00053016 <AmiBlitz3.ab2@29133>   Dc.b $00,$00,$80,$00
0005301A <AmiBlitz3.ab2@29134>   Dc.b $00,$00,$01,$40
0005301E <AmiBlitz3.ab2@29135>   Dc.b $80,$00,$00,$00
00053022 <AmiBlitz3.ab2@29136>   Dc.b $00,$00,$80,$00
00053026 <AmiBlitz3.ab2@29137>   Dc.b $00,$00,$00,$00
0005302A <AmiBlitz3.ab2@29138>   Dc.b $00,$00,$00,$00
0005302E <AmiBlitz3.ab2@29139>   Dc.b $00,$00,$00,$00
00053032 <AmiBlitz3.ab2@29140>   Dc.b $00,$00,$00,$04
00053036 <AmiBlitz3.ab2@29141>   Dc.b $00,$3F,$FC,$01
0005303A <AmiBlitz3.ab2@29142>   Dc.b $BB,$44,$00,$60
0005303E <AmiBlitz3.ab2@29143>   Dc.b $FE,$00,$00,$04
00053042 <AmiBlitz3.ab2@29144>   Dc.b $00,$CF,$FF,$01
00053046 <AmiBlitz3.ab2@29145>   Dc.b $BB,$44,$1F,$EF
0005304A <AmiBlitz3.ab2@29146>   Dc.b $FF,$00,$00,$04
0005304E <AmiBlitz3.ab2@29147>   Dc.b $33,$FF,$FF,$E0
00053052 <AmiBlitz3.ab2@29148>   Dc.b $00,$04,$37,$FE
00053056 <AmiBlitz3.ab2@29149>   Dc.b $7F,$FC,$1B,$44
0005305A <AmiBlitz3.ab2@29150>   Dc.b $0F,$9C,$FF,$FF
0005305E <AmiBlitz3.ab2@29151>   Dc.b $00,$04,$03,$E3
00053062 <AmiBlitz3.ab2@29152>   Dc.b $FF,$FF,$DB,$44
00053066 <AmiBlitz3.ab2@29153>   Dc.b $00,$7F,$BF,$FF
0005306A <AmiBlitz3.ab2@29154>   Dc.b $80,$04,$00,$0F
0005306E <AmiBlitz3.ab2@29155>   Dc.b $3F,$FE,$00,$04
00053072 <AmiBlitz3.ab2@29156>   Dc.b $00,$06,$7F,$F8
00053076 <AmiBlitz3.ab2@29157>   Dc.b $1B,$44,$00,$0C
0005307A <AmiBlitz3.ab2@29158>   Dc.b $F7,$FC,$00,$04
0005307E <AmiBlitz3.ab2@29159>   Dc.b $00,$19,$F9,$FE
00053082 <AmiBlitz3.ab2@29160>   Dc.b $1B,$44,$00,$33
00053086 <AmiBlitz3.ab2@29161>   Dc.b $FE,$7F,$00,$04
0005308A <AmiBlitz3.ab2@29162>   Dc.b $00,$0F,$FF,$BF
0005308E <AmiBlitz3.ab2@29163>   Dc.b $CD,$44,$00,$03
00053092 <AmiBlitz3.ab2@29164>   Dc.b $EF,$EF,$F0,$04
00053096 <AmiBlitz3.ab2@29165>   Dc.b $00,$00,$7F,$DF
0005309A <AmiBlitz3.ab2@29166>   Dc.b $FB,$44,$00,$00
0005309E <AmiBlitz3.ab2@29167>   Dc.b $FF,$A7,$FC,$04
000530A2 <AmiBlitz3.ab2@29168>   Dc.b $00,$00,$7E,$3F
000530A6 <AmiBlitz3.ab2@29169>   Dc.b $FD,$44,$00,$00
000530AA <AmiBlitz3.ab2@29170>   Dc.b $00,$00,$00,$04
000530AE <AmiBlitz3.ab2@29171>   Dc.b $7F,$FF,$FF,$FF
000530B2 <AmiBlitz3.ab2@29172>   Dc.b $FF,$FC,$00,$00
000530B6 <AmiBlitz3.ab2@29173>   Dc.b $00,$01,$00,$00
000530B9 <AmiBlitz3.ab2@29174>   Dc.b $00,$00,$04
000530BF <AmiBlitz3.ab2@29177> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
00053117 <AmiBlitz3.ab2@29178> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
00053118 <AmiBlitz3.ab2@29179> Even
0005311C <AmiBlitz3.ab2@29181> sysdebug:            Dc.l $3F0
00053120 <AmiBlitz3.ab2@29185> exelock              Ds.l 1
00053124 <AmiBlitz3.ab2@29189> includesourceline    Dc.l 0
00053128 <AmiBlitz3.ab2@29190> linenum              Ds.l 1
0005312C <AmiBlitz3.ab2@29191> globallinecount      Ds.l 1
00053148 <AmiBlitz3.ab2@29192> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0005314C <AmiBlitz3.ab2@29193> calc_option          Dc.l 1
00053150 <AmiBlitz3.ab2@29194> versioninformation   Dc.l $00
00053154 <AmiBlitz3.ab2@29195> number_of_builds     Dc.l $00
00053158 <AmiBlitz3.ab2@29198> BSS
0005315A <AmiBlitz3.ab2@29199> debugnest            Ds.w 1
0005315E <AmiBlitz3.ab2@29200> instringf            Ds.l 1
00053162 <AmiBlitz3.ab2@29201> funcscanon           Ds.l 1
00053176 <AmiBlitz3.ab2@29202> storedebugmode       Ds.b 20
0005317A <AmiBlitz3.ab2@29203> firsttimepref        Ds.l 1
0005317B <AmiBlitz3.ab2@29204> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0005317C <AmiBlitz3.ab2@29205> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0005317E <AmiBlitz3.ab2@29206> nostringopt          Ds.w 1
000531FE <AmiBlitz3.ab2@29207> path2:               Ds.l 32
00053202 <AmiBlitz3.ab2@29208> typebase             Dc.l 0
00053204 <AmiBlitz3.ab2@29209> doublepeek           Dc.w 0
00053208 <AmiBlitz3.ab2@29210> lastoffset           Dc.l 0
0005320A <AmiBlitz3.ab2@29211> firsttime            Dc.w 0
0005320E <AmiBlitz3.ab2@29212> lastdestpointer      Dc.l 0
00053212 <AmiBlitz3.ab2@29213> prevwritedat         Dc.l 0
00053216 <AmiBlitz3.ab2@29214> lastsourceline       Dc.l 0
0005321A <AmiBlitz3.ab2@29215> lastwritedat         Dc.l 0
0005321C <AmiBlitz3.ab2@29216> makeexec             Dc.w 0
0005321E <AmiBlitz3.ab2@29217> makeexec_remember    Dc.w 0
00053222 <AmiBlitz3.ab2@29218> sharebase            Ds.l 1
00053226 <AmiBlitz3.ab2@29219> tempa7               Ds.l 1
00053228 <AmiBlitz3.ab2@29220> incnif               Ds.w 1
0005322C <AmiBlitz3.ab2@29221> tempstore            Ds.l 1
00053230 <AmiBlitz3.ab2@29222> result               Ds.l 1
00053232 <AmiBlitz3.ab2@29223> automode             Ds.w 1
00053234 <AmiBlitz3.ab2@29224> stackcorrect         Ds.w 1
00053236 <AmiBlitz3.ab2@29225> formode              Ds.w 1
0005323A <AmiBlitz3.ab2@29226> limitregs            Ds.l 1
0005323C <AmiBlitz3.ab2@29227> onestep              Ds.w 1
00053240 <AmiBlitz3.ab2@29228> reqmode              Ds.l 1
000532E0 <AmiBlitz3.ab2@29229> inctab               Ds.l 40
000532E2 <AmiBlitz3.ab2@29230> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
000532E6 <AmiBlitz3.ab2@29231> includeline          Ds.l 1
000532EA <AmiBlitz3.ab2@29232> morememadd           Ds.l 1
000532EC <AmiBlitz3.ab2@29233> objectcount          Ds.w 1
000532F0 <AmiBlitz3.ab2@29234> savefuncspace        Ds.l 1
000532F4 <AmiBlitz3.ab2@29235> lasttrap1            Ds.l 1
000532F8 <AmiBlitz3.ab2@29236> currentfunccall      Ds.l 1
000532F9 <AmiBlitz3.ab2@29237> skipfunc             Ds.b 1
000532FA <AmiBlitz3.ab2@29238> resdisable           Ds.b 1
000532FB <AmiBlitz3.ab2@29239> skiptoggle           Ds.b 1
000532FC <AmiBlitz3.ab2@29240> developobject        Ds.b 1
000532FE <AmiBlitz3.ab2@29241> iniffcommand         Ds.w 1
00053300 <AmiBlitz3.ab2@29242> startoffsetmore      Ds.w 1
00053302 <AmiBlitz3.ab2@29243> olddebugmode         Ds.w 1
00053306 <AmiBlitz3.ab2@29244> fpucodeglobal        Ds.l 1
0005330A <AmiBlitz3.ab2@29245> fpucodelocal         Ds.l 1
0005330E <AmiBlitz3.ab2@29246> maxregs              Ds.l 1
00053312 <AmiBlitz3.ab2@29247> fpucode              Ds.l 1
00053314 <AmiBlitz3.ab2@29248> firstmline           Ds.w 1
00053354 <AmiBlitz3.ab2@29249> regtable             Ds.l 16
00053356 <AmiBlitz3.ab2@29250> exdebug              Ds.w 1
00053358 <AmiBlitz3.ab2@29251> a2offset2            Ds.w 1
0005335C <AmiBlitz3.ab2@29252> parnumtemp           Ds.l 1
0005335D <AmiBlitz3.ab2@29253> doimmediate          Ds.b 1
0005335E <AmiBlitz3.ab2@29254> notypecheck          Ds.b 1
00053360 <AmiBlitz3.ab2@29255> vartype              Ds.w 1
00053361 <AmiBlitz3.ab2@29256> peekaddrsize         Ds.b 1
00053362 <AmiBlitz3.ab2@29257> declare2             Ds.b 1
00053364 <AmiBlitz3.ab2@29258> parameternum         Ds.w 1
00053368 <AmiBlitz3.ab2@29259> lasttoken            Ds.l 1
0005336A <AmiBlitz3.ab2@29260> newvariable          Ds.w 1
0005336B <AmiBlitz3.ab2@29261> declare              Ds.b 1
0005336C <AmiBlitz3.ab2@29262> typecheck            Ds.b 1
0005336D <AmiBlitz3.ab2@29263> nowdeclare           Ds.b 1
0005336E <AmiBlitz3.ab2@29264> dimkeep              Ds.b 1
0005336F <AmiBlitz3.ab2@29265> a4a5store            Ds.b 1
00053370 <AmiBlitz3.ab2@29266> ___freetouse         Ds.b 1
00053374 <AmiBlitz3.ab2@29267> firstiffstore        Ds.l 1
00053378 <AmiBlitz3.ab2@29268> destpointer2         Ds.l 1
0005337C <AmiBlitz3.ab2@29269> stackaddr            Ds.l 1
00053480 <AmiBlitz3.ab2@29270> allowtab             Ds.b 260
00053580 <AmiBlitz3.ab2@29271> templine             Ds.b 256
00053582 <AmiBlitz3.ab2@29272> thenmode             Ds.w 1
00053584 <AmiBlitz3.ab2@29273> temp                 Ds.w 1
00053586 <AmiBlitz3.ab2@29274> tempregnum           Ds.w 1
0005358A <AmiBlitz3.ab2@29276> numlines2            Ds.l 1
0005358E <AmiBlitz3.ab2@29277> numlines             Ds.l 1
00053590 <AmiBlitz3.ab2@29278> exmac                Ds.w 1
00053592 <AmiBlitz3.ab2@29279> returncode           Ds.w 1
00053596 <AmiBlitz3.ab2@29280> fp0iff               Ds.l 1
0005359A <AmiBlitz3.ab2@29281> fp0addr              Ds.l 1
0005359C <AmiBlitz3.ab2@29282> fp0mode              Ds.w 1
0005359E <AmiBlitz3.ab2@29283> fp0var               Ds.w 1
000535A0 <AmiBlitz3.ab2@29284> fastfunc             Ds.w 1
000535A2 <AmiBlitz3.ab2@29285> retmode              Ds.w 1
000535A4 <AmiBlitz3.ab2@29286> parnum               Ds.w 1
000535A6 <AmiBlitz3.ab2@29287> regmask              Ds.w 1
000535A8 <AmiBlitz3.ab2@29288> regnumfunc           Ds.w 1
000535AA <AmiBlitz3.ab2@29289> libmode              Ds.w 1
000535AE <AmiBlitz3.ab2@29290> oldline              Ds.l 1
000535B2 <AmiBlitz3.ab2@29291> sourceline3          Ds.l 1
0005367A <AmiBlitz3.ab2@29292> debugstore           Ds.b 200
0005367E <AmiBlitz3.ab2@29293> deststore            Ds.l 1
00053682 <AmiBlitz3.ab2@29295> loada                Ds.l 1
00053686 <AmiBlitz3.ab2@29297> currtype             Ds.l 1
0005368A <AmiBlitz3.ab2@29298> arrayoffset          Ds.l 1
0005368E <AmiBlitz3.ab2@29299> lastlabel            Ds.l 1
00053692 <AmiBlitz3.ab2@29300> curtemplabel         Ds.l 1
00053696 <AmiBlitz3.ab2@29301> sourceline2          Ds.l 1
00053796 <AmiBlitz3.ab2@29302> chartab              Ds.b 256
0005380E <AmiBlitz3.ab2@29303> tempspace            Ds.b 120
000D381E <AmiBlitz3.ab2@29304> instrtab             Ds.l 65538*2
000DB81E <AmiBlitz3.ab2@29306> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000FB822 <AmiBlitz3.ab2@29307> replacedat           Ds.w 65538
00103822 <AmiBlitz3.ab2@29308> variablehash         Ds.l 8192
00103826 <AmiBlitz3.ab2@29309> newinitaddr          Ds.l 1
0010382A <AmiBlitz3.ab2@29310> realbssend           Ds.l 1
0010382C <AmiBlitz3.ab2@29311> saved0               Ds.w 1
001038AC <AmiBlitz3.ab2@29312> lastpath             Ds.b 128
0010392C <AmiBlitz3.ab2@29313> lastpath2            Ds.b 128
001039F4 <AmiBlitz3.ab2@29314> fpustackbase         Ds.w 100
001039F8 <AmiBlitz3.ab2@29315> 
001039FA <AmiBlitz3.ab2@29316> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
001039FE <AmiBlitz3.ab2@29317> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
00103A02 <AmiBlitz3.ab2@29318> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
00103A06 <AmiBlitz3.ab2@29319> rightsidetype        Dc.l 0  ; same as above but right side
00103A0A <AmiBlitz3.ab2@29322> trap15temp           Ds.l 1
00103A0E <AmiBlitz3.ab2@29323> trap15temp2          Ds.l 1
00103A12 <AmiBlitz3.ab2@29324> templibend           Ds.l 1
00103A16 <AmiBlitz3.ab2@29325> tempdata1start       Ds.l 1
00103A1A <AmiBlitz3.ab2@29326> stacktrack           Ds.l 1
00103A1E <AmiBlitz3.ab2@29327> pad                  Ds.l 1
00103B1E <AmiBlitz3.ab2@29328> includetemp          Ds.b 256
0010451E <AmiBlitz3.ab2@29329> includetemp2         Ds.b 256*10
00104520 <AmiBlitz3.ab2@29330> funccall             Ds.w 1
00104524 <AmiBlitz3.ab2@29333> ptr_resfile          Ds.l 1
00104526 <AmiBlitz3.ab2@29334> CalculatorButtonBinFlag:    Ds.w 1
00104528 <AmiBlitz3.ab2@29335> CalculatorButtonDecFlag:    Ds.w 1
0010452C <AmiBlitz3.ab2@29336> ped_startup_addr:    Ds.l 1
0010452D <AmiBlitz3.ab2@29337> start_without_libs:  Ds.b 1
0010452E <AmiBlitz3.ab2@29338> skip_bytes:          Ds.b 1
00104532 <AmiBlitz3.ab2@29339> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
00104536 <AmiBlitz3.ab2@29340> beforeparameterfetch Ds.l 1
0010453A <AmiBlitz3.ab2@29341> typetocast           Ds.l 1
0010453E <AmiBlitz3.ab2@29342> errorcounter         Ds.l 1
0010453F <AmiBlitz3.ab2@29343> iserror              Ds.b 1
00104540 <AmiBlitz3.ab2@29344> Even
00104544 <AmiBlitz3.ab2@29346> CLIMode:             Dc.l 0
00104548 <AmiBlitz3.ab2@29347> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
