00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502C <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503E <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005086 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A0 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B2 <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F4 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005168 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E2 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520C <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525C <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005262 <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005266 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D4 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005330 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005354 <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00005362 <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005370 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B2 <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BC <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C2 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000540A <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543E <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547E <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005498 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A6 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005554 <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005598 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EE <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056E0 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F2 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005742 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005752 <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D0 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586A <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005882 <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000589A <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C8 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EE <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F8 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005906 <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005950 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005964 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A10 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A46 <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A8C <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B72 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB6 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD8 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C06 <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C36 <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C70 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC2 <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCC <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDC <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEA <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF0 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1E <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D50 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D88 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9C <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB4 <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0E <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E38 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E4C <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EA0 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ECA <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F0E <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F34 <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F58 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F94 <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9A <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBC <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FEA <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608C <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006144 <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E4 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000628E <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062B2 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062E6 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006320 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635C <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636A <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006396 <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006430 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006502 <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006508 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00006546 <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656C <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006576 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A2 <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BC <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DC <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E2 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006622 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006636 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006672 <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A6 <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675C <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006766 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B0 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DC <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006986 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B0 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C0 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EA <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1A <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A28 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A38 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A42 <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A76 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A90 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE8 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B02 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB8 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BE2 <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C16 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C96 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBC <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCA <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDE <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D22 <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D40 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D84 <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D9E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E08 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B38 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B54 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C20 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2A <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C34 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C3A <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC0 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D48 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D72 <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF4 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E16 <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5C <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA4 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00008004 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008020 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00008034 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00008074 <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000807A <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A0 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B4 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FA <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008118 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008162 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008176 <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C8 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F0 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008242 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C6 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837E <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841E <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843A <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008472 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008520 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008760 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E4 <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883A <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
0000889A <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B8 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DE <preprocessor.include.ab3@456> XINCLUDE "/Shared/preprocessor.include.ab3"
00008900 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008928 <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892E <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893C <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008942 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008956 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897C <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008994 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B0 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BA <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D6 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A04 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A40 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A50 <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A5E <preprocessor.include.ab3@475> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A64 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A74 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA4 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD0 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AE0 <preprocessor.include.ab3@482> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@484> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1C <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B52 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B76 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@491> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B9A <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BB8 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC6 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BEA <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0E <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C24 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2A <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4C <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C54 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C8A <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CA6 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAC <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CE2 <preprocessor.include.ab3@515> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CFE <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D44 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D62 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D90 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DF2 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E0C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E26 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E30 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6E <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E72 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7C <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAA <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE2 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F40 <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F6C <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F7E <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8E <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA6 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAC <preprocessor.include.ab3@541> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FE6 <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF0 <preprocessor.include.ab3@544> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF6 <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009000 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009012 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009036 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000903E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000906C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
0000909A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000910A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009118 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009168 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009168 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009168 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009168 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000918C <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091B4 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
000091D8 <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009206 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
00009424 <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
00009452 <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
0000947E <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094BA <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
000094E6 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
00009512 <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000953E <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
0000956A <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
00009596 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095C2 <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
000095EE <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
0000961A <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096A4 <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
0000972E <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097CC <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009816 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009856 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000985C <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098A6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
000098E6 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009910 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009916 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
00009940 <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
0000996A <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
00009994 <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
0000999E <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099BC <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
000099DE <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A0C <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A3A <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A68 <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AAE <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009AF4 <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B3A <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B72 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C70 <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009C8E <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009C98 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CBE <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CD0 <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009CFE <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D26 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D38 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009D8E <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DC4 <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DD4 <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009DDA <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009DEC <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009DF6 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E30 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E36 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009E8E <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009EAC <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009EB2 <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EC2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F0C <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F20 <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F36 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F5E <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F68 <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009F7A <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FB4 <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FBE <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
00009FE8 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A000 <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A052 <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A080 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A112 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A158 <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A1EA <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A204 <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A204 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A21A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A230 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A246 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A25C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A268 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A274 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A280 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A28C <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2B4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2DC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A304 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A328 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A34C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A366 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A376 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A378 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A37A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A37C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A37E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A380 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A384 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A388 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A38C <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A38E <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A390 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A392 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A394 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A3E2 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A3E8 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A41E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A444 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A46E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A49A <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4BC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4D6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A516 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A534 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A53A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A558 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A55E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A580 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5D8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A5F4 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A5FA <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A600 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A606 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A60C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A628 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A674 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A67A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6B4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6C0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6DC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A6E2 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A71C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A726 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A72C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A74A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A778 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A77E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A794 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A79C <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A7F8 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A806 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A80C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A83E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A848 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A84E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A87A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8D8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A912 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A94C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A96A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A988 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A99E <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9BA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9D4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA52 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA64 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA7A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAA4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAAE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AABE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAC2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AAF0 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB0A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB1C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB52 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AB8A <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABB4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABDE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000ABF6 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC0C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC54 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC7C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACBA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACC6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACD0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000ACE2 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000ACE8 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000ACF6 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD1E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD32 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD5A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD6E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AD96 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADAA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADD2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADD4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000ADF8 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE30 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEBA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AEE2 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF12 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF4A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFA2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000AFFA <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B07A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0AE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B0E2 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B0E8 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B0F6 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B12A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B152 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B20A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B28A <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2BE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B2E4 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B2EA <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3BA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3CE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B486 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B506 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B5F6 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B600 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B634 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B65A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B660 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B730 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B744 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B778 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7A0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B858 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8D8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B90C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B932 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B938 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA08 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA1C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAD4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB54 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BB88 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBAE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBB4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BC84 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BC8A <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCC4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCC6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCCC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD64 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD76 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BD8C <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BDF6 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE60 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE7A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BE96 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BEB4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BECE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BED8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BEF4 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF16 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF1C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF42 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF5E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF70 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFCE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C006 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C00C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C054 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C06E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C07C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C082 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C088 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C09A <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C186 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C18C <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1D2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1DE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C244 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C28A <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2D2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C33A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C340 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C37A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C380 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C3E2 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C3EC <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C400 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C41A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C446 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C462 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4C0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4C4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C4E6 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C4EC <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C508 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C566 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5B4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C5EA <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C5F0 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C5F6 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C626 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C62C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C632 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C644 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6A2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6DA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C6E0 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C728 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C742 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C750 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C756 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C75C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C76E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C774 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C77A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7D8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C820 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C82A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C830 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C898 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8D6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C8E0 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C8E6 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C90C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C912 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C938 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C998 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9B2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9BC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9D6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000C9E0 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000C9F8 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA28 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA44 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA52 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA58 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CA92 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CA9C <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAA2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAC0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAC6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAD8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB04 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB3A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB4C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CB96 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CC80 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CC9E <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCC4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CCE0 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD0C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD16 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD44 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD5E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD7A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CD80 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDBA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDC0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDC6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDCC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE6C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE72 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF14 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF1A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF54 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF5E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF64 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CF9C <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFA2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D090 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D096 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D09C <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0C6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0D2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0D8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D0FA <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D102 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D118 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D130 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D142 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D14E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D154 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D15C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D194 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1A6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1CA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1DC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D1E8 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D1EE <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D1FE <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D21C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D22E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D27A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D280 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2AA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2C2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D2F0 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D304 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D31A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D350 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D374 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D396 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3AE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3D0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3D6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D408 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D41C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D434 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D44C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D49C <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4CC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4DE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D4E6 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D510 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D51A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D534 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D54E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D56C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5D6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D5F0 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D602 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D638 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D64A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D652 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D67A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D680 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6A8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6B8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6CC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D6F2 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D6F6 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D70C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D736 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D73E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D73E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D7E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D7E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D7EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D828 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D85A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D868 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D898 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DEAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E038 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0AC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0EE <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E108 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E112 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E124 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E148 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E156 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E162 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E166 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E19E <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1C8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1D6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E1E2 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E1F0 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E1FC <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E208 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E22A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E234 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E25E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E268 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E278 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E282 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E294 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2AA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2BA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2BE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E31A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E324 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E328 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E356 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E356 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E370 <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E37A <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3A2 <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3C4 <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E3DC <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E3F2 <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E3F6 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E430 <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E43A <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E454 <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E462 <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E470 <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E48C <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E498 <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4A2 <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4B0 <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4BE <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E4E6 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E4F4 <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E504 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E514 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E524 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E532 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E53C <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E542 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E560 <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E570 <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5BE <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E5DC <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E5E6 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E5F8 <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E624 <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E63A <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E652 <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E658 <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E65E <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E664 <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E69C <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6A2 <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6A8 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6B2 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6B8 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E6EA <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E706 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E720 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E734 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E784 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7A6 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7BA <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7C8 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7D4 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E7DC <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E7EC <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E7F4 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E7FA <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E82A <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E856 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E868 <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E86E <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E896 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8BA <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E8E2 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E916 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E926 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E930 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E93E <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E952 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E958 <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E978 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E97E <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E986 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9C0 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000E9E6 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000E9FE <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA32 <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA3A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA48 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA66 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA6C <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA72 <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EA8C <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EA92 <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EA98 <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EA9E <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EAAC <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EAF4 <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB1A <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB32 <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB3E <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB4A <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB56 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB62 <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB6E <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EB78 <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EB9A <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EBD8 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EBDE <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC44 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EC84 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ECDA <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED4C <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED58 <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED66 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDAC <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EDF6 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE2E <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EE82 <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EE88 <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EE8E <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EE9C <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EEDE <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF04 <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF1C <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF52 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF68 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EF76 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EF8E <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFC6 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000EFEC <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F034 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F03A <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F054 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F060 <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F066 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F092 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0A6 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0B4 <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0BC <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F0F6 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F11C <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F134 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F16E <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F198 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1B0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F1E0 <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F20C <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F236 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F282 <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2BE <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F32A <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F358 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F386 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3CE <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F3E8 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F430 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F44E <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F46C <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F486 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F492 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F498 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4C4 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F4DC <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F4E2 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F4F6 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F504 <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F528 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F554 <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F57C <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5A4 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F610 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F620 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F64C <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6A2 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6B0 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6C4 <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F718 <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F838 <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F888 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F8DE <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F94A <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F952 <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F98C <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9B2 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9CA <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA04 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA2E <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA46 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA6A <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FABE <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAC6 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FACC <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB2E <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB5A <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FB84 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FBF2 <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC5E <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FC8C <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCA0 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCD2 <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD1C <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD2C <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD60 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FD82 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FD92 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FD9A <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FDDE <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE4A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FE78 <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FE9C <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FEE0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF4C <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FF7A <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFA8 <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFB0 <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
0000FFDE <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
00010050 <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010056 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
00010084 <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
000100F6 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
00010114 <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
00010138 <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
00010150 <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010156 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
0001015C <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
0001015E <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010168 <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
00010194 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101BE <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101C4 <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001020C <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010232 <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
0001024A <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
00010284 <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102C6 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
000102DE <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010316 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
0001031E <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
00010358 <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
0001036A <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
00010390 <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103A6 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103CC <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
000103E0 <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
000103F8 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
0001040A <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010428 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010442 <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
00010470 <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
0001048C <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104C8 <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
000104E4 <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
00010514 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
0001051E <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010526 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
0001052C <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
0001055A <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
00010582 <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105C2 <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
000105DA <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
00010620 <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
00010678 <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
00010692 <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
00010698 <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106B0 <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106BA <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106CC <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
00010704 <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
00010712 <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
0001071E <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
0001073A <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
0001075C <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
0001077E <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107A0 <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107C2 <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
000107DE <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
000107FC <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
00010810 <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010816 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010818 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
0001081E <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010828 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
0001082E <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
0001084C <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
00010876 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
00010894 <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108C2 <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
000108F0 <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
0001091E <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
0001094C <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
00010980 <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
00010990 <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
0001099A <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109A0 <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109A0 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
000109EA <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A0A <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A14 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A28 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A6E <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010AB4 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010AFA <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B04 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B4A <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BC8 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C46 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CC4 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D42 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DC0 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E3E <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EBC <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F3A <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FB8 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011036 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110BA <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
000110EA <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011146 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011172 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001123C <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001124A <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
00011288 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001130C <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011336 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011354 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
0001136E <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
00011378 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
00011384 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113A4 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113B4 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113C4 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113C8 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011406 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
0001145E <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114BA <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011544 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115C2 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000115DC <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001160A <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011646 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011714 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000117E2 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
0001182E <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118AC <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001192A <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
00011988 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A1E <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A56 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011AB4 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B3C <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B44 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BAE <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C1A <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C58 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011CE0 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D0C <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D68 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E30 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011E94 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011E9A <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011ECE <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011F9C <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
0001206A <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
00012094 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120B2 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
000120E0 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001211C <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
0001218C <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
00012194 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000121E6 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
0001220E <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012226 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000122DA <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000122E8 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
0001233E <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
0001239C <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123A2 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012426 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124AA <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
0001252E <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125AC <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001262A <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126A8 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012726 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127A4 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012822 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128A0 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128CA <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000128E8 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012916 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001295A <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012960 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001297A <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
00012996 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129CA <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
000129EE <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A16 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012A82 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012AE0 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B3E <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012B8A <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012BE4 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012BEA <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012BF0 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012BFA <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C04 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C1E <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C4C <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C52 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012C96 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CB0 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CC0 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CCA <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012CE0 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D04 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D4C <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012D94 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012DDC <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012DF2 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E10 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E1A <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E34 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EA2 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EBC <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F1A <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F34 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F4C <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F56 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012F80 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012F8C <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FD8 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
0001302A <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
0001307C <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00013090 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130A0 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130A6 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130A8 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130AE <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130B8 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130C2 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
000130DC <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013106 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001311C <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013126 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
0001319E <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000131DA <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000131EA <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001320A <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001322A <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001324A <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013280 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132A8 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000132E0 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013344 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013364 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000133E0 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
00013418 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
0001348E <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134AE <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001352A <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013562 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135D8 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
000135F8 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013674 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136A0 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136A8 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
000136EE <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
0001370E <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
00013718 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013730 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013740 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
00013778 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137AA <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137BC <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
0001383E <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
00013848 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001387A <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138AC <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138D8 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013904 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013926 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013930 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001394A <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001394A <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013960 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001397C <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
0001397E <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139AC <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139AC <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139AC <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139C6 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139D0 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A0A <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A24 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A56 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A60 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A66 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A78 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013AEC <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013AF2 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B2C <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B36 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B3C <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B74 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B76 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BA4 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BBE <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BD4 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C08 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C0C <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C26 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C3C <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C70 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C74 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013C8E <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CA4 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CD8 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013CDC <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013CF6 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D0C <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D40 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D44 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D5E <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D74 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DA8 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DC2 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DD8 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013DE6 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013DF4 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E10 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E22 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E28 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E62 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E66 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013E7C <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013E92 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013E9E <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013EAA <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EB2 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EBA <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EBE <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013EE8 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F14 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F26 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F54 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F5A <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013F90 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FC8 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014000 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014038 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014070 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140A8 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
000140E0 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014118 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014150 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141C0 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
000141F8 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014230 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014264 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001426E <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
00014278 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00014282 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142B6 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142BA <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000142EE <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014316 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014322 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014328 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
00014334 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001433A <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014346 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014352 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001438C <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
00014392 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143A8 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143B2 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143B8 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143BE <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143BF <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143C0 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143C1 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143C2 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143C4 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000143C6 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000143C8 <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
000143CA <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143CE <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143D0 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143D2 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
000143D6 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143D8 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
000143DA <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
000143DE <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
000143E0 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000143E6 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
000143F6 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
0001440E <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
00014414 <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@183> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001443C <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
00014446 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
0001444C <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014450 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001445A <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001446A <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
0001446E <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014472 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001447E <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
00014482 <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
00014486 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014496 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000144B4 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
000144B8 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000144C4 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
000144C8 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000144CC <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144D0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144D4 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144D8 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144DC <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144E0 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144E4 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
000144EC <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
000144F0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144F4 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144F8 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144FC <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014500 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014504 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014508 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014510 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014514 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014518 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014524 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014528 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
0001453C <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0001454C <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014550 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
0001455A <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001455E <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014564 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014582 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000145AA <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
000145B0 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
000145B8 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
000145C4 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000145D8 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000145DC <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
000145E6 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145F0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
000145F4 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
000145F8 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000145FC <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
00014604 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00014608 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00014642 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
0001465A <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001469E <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
000146A2 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000146AE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
000146E2 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
000146F2 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
000146F4 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
0001472C <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00014764 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
0001479C <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000147A6 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000147AC <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
000147C2 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014800 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
00014804 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001480C <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
0001484A <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00014850 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0001488E <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00014892 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
000148D0 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000148D4 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00014908 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001491C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014942 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00014948 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00014956 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001495C <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
00014994 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014998 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
000149C8 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
000149E8 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
000149F6 <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
000149F8 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00014A16 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014A18 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00014A1E <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00014A24 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00014A50 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014A7E <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014A82 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014AB0 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00014AB4 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014AEA <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00014AF0 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00014AF6 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00014B30 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00014B3A <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00014B72 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00014B80 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014B86 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00014BA8 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014BC0 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014C10 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014C1E <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014C24 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00014C38 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00014C50 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00014CA8 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00014CB6 <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00014CE6 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00014CF4 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014CFA <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014D08 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014D0E <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014D14 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014D22 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014D2A <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00014D40 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014D4A <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014DB8 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014DBC <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014DFA <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014E3C <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00014E40 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014E48 <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00014E50 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00014E94 <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00014EA6 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00014EB4 <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00014EE8 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00014F0C <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00014F16 <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
00014F30 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014F9C <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001503C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00015044 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
0001507C <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00015082 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00015092 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
000150BA <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
000150E2 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000150EA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000150F0 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000150F8 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00015100 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00015128 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00015130 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00015138 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0001513E <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00015144 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
0001514A <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00015150 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00015156 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001515C <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00015162 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00015168 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00015170 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00015178 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
000151A0 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000151A6 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
000151AC <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
000151B4 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
000151D4 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000151E4 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
000151F4 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00015204 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00015214 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00015224 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00015234 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00015244 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00015254 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
00015264 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00015274 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00015284 <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
00015294 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000152A4 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000152B4 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000152C4 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000152D4 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000152E6 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000152F8 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
0001530A <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
0001531C <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001532E <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015340 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001535E <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00015364 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
00015394 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
000153A6 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
000153DA <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
000153F2 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
0001543E <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015450 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
000154A6 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015518 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001551E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015552 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001557A <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
000155DC <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
000155F4 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
00015678 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
00015692 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000156E0 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000156F0 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000156F8 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001570C <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00015752 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
00015758 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
000157A2 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001580C <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
00015872 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000158A6 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000158D2 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015920 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00015944 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001594A <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00015958 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000159B6 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
00015A14 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00015A3E <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00015A48 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00015A50 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00015A8E <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015ADA <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00015AEC <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015B42 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015BBA <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015BC0 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015BF4 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015C1C <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015C52 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00015C60 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00015C6E <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00015CE2 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00015CE8 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00015D32 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00015D7C <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00015DAC <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00015DDC <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00015E06 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015E58 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015EAE <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015EFE <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00015F64 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00015FD0 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
0001602C <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000160A8 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000160D8 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00016108 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00016138 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00016168 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00016198 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
000161C8 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
000161F8 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00016228 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00016258 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00016288 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00016304 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00016336 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00016368 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00016398 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
0001639E <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00016412 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
0001647E <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00016490 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000164BE <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
000164E6 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
000164FA <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00016524 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00016568 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00016578 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00016588 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0001658E <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
0001659E <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000165AC <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
000165B6 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
000165EE <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00016626 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001665E <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
0001666E <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
000166D6 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
0001670E <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
0001671E <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001672E <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00016796 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
000167FE <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00016866 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
000168CE <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00016936 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
0001699E <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00016A06 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00016A6E <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00016A7E <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00016AB6 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00016AF0 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00016B2A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00016B62 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00016B7E <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016BDC <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016BE4 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00016BEC <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016BF4 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016BFC <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00016C10 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00016C3E <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016C58 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016C66 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00016CD2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016D14 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016D1E <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016D28 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016D34 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016D42 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016D4E <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016D8A <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016DA4 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00016DB2 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016DE0 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016DEE <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016DF4 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00016E04 <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016E08 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00016E3C <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00016E70 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016E74 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00016EA8 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00016EAC <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00016EE0 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00016EE6 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00016F1C <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00016F52 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00016F88 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016FC0 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00016FF8 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00017098 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000170D8 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001710E <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
00017144 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
0001719E <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000171A4 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000171AA <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
000171AE <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000171D8 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000171EC <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0001722A <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
0001725E <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00017294 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000172EC <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0001731A <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
0001731E <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00017354 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00017382 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000173B0 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000173B4 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000173EA <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
0001741C <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00017480 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00017486 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000174C0 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
000174CA <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
000174D4 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
000174EE <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00017518 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
0001751E <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
0001753E <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00017548 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
0001754E <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
0001756C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00017574 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000175A6 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
000175D4 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
0001760A <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00017640 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017646 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
0001764C <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00017686 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017690 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000176AA <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000176C8 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000176F2 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00017720 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000177B0 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000177BA <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000177CE <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
0001780A <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00017882 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
000178BE <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
000178FA <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00017900 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
0001793A <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
0001794C <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
0001795C <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017968 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00017982 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00017984 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
000179A2 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
000179A8 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000179D2 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000179D4 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
000179DE <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
000179E4 <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
000179F6 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00017A30 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017A4A <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017AC8 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00017ACE <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017B38 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00017BB6 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00017BEC <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00017BF2 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017C5C <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017C70 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00017CA6 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017CAC <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00017CE2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00017CF6 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00017D60 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00017D66 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00017DD0 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00017DE4 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00017E1A <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00017E20 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00017E56 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00017E70 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017E84 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017EEE <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017EF4 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00017F5E <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017F72 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00017FDC <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017FE2 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
0001804C <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00018060 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000180CA <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
000180D0 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
0001813A <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001814E <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
000181B8 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
000181BE <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00018228 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001823A <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00018254 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
000182BE <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
000182C4 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
0001832E <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00018338 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
000183A2 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
000183D8 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
000183DE <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00018448 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
0001847E <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00018486 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
000184B4 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
000184B8 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
000184E0 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
000184E6 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
000184F2 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
000184F8 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
000184FE <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00018508 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00018512 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00018540 <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
0001856C <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
00018574 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
000185DA <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
0001860E <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
00018614 <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00018694 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
000186A6 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
0001870C <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
00018772 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
00018778 <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
00018780 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
00018782 <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
000187A0 <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
00018822 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
00018828 <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
0001882E <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
00018838 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
0001883E <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
00018844 <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
0001884A <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
00018850 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
00018854 <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
0001885E <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018862 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
0001888E <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
00018894 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
00018898 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001889E <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000188A2 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000188B2 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001890C <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001891E <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
00018988 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001898E <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
000189D8 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000189EA <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
00018A16 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
00018ABC <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
00018ADA <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
00018AE0 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018B0A <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
00018B14 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018B46 <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018B60 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018B74 <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
00018B80 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
00018B9A <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
00018BA4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018BBE <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018BE8 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018C0C <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018C4E <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018C8C <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
00018C90 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
00018CCE <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018D0C <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018D0E <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
00018D42 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018D48 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018D8C <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018D9E <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
00018DA6 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018DAC <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018DB6 <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018DC4 <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018DCA <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018DF2 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018E0C <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018E16 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
00018E1C <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018E3A <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
00018E44 <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
00018E4A <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
00018E50 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
00018E5A <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
00018E68 <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
00018E6E <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
00018E7E <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018EAA <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00018EC0 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018ECA <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018ED0 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018F28 <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018F96 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018FAE <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018FB4 <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018FEC <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
0001901A <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00019044 <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
0001904E <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00019076 <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
000190A0 <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
00019142 <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00019150 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
000191A0 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
000191B0 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00019278 <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
000192AC <CLIModeSupport.ab3@1141> XINCLUDE "CLIModeSupport.ab3"
000192E0 <CLIModeSupport.ab3@1142> XINCLUDE "CLIModeSupport.ab3"
00019314 <CLIModeSupport.ab3@1143> XINCLUDE "CLIModeSupport.ab3"
00019348 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
0001937C <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
000193B0 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
000193E4 <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00019418 <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
0001941A <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00019458 <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
0001945C <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
0001949A <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
000194D8 <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
000194DA <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
000194E0 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
000194E4 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
000194E6 <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
00019524 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00019562 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00019564 <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
00019566 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00019568 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
0001956E <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00019572 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00019582 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
0001959A <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
000195B2 <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
000195CA <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
000195F4 <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
0001961E <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
0001964C <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00019650 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00019678 <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
0001967A <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
000196B8 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
000196BC <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
000196FA <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
000196FE <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
0001973C <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00019740 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
0001977E <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
00019782 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
000197A8 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000197CE <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
000197F4 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
0001981A <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
00019840 <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
00019896 <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
000198EC <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
0001993A <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
00019990 <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
000199B6 <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
000199DC <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019A02 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019A58 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019AA6 <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
00019AF4 <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
00019BAE <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
00019C04 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019C2A <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019C50 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019C76 <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
00019CCC <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
00019D22 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
00019D70 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
00019DBE <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019E0C <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019E5A <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019EA8 <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
00019EF6 <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
00019F44 <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
00019F6A <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
00019FB6 <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
0001A004 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
0001A052 <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
0001A0A8 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
0001A0F6 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001A144 <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
0001A192 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001A1B8 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001A1DE <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001A204 <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001A23C <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001A264 <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001A278 <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001A2EC <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001A332 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001A3E0 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
0001A44C <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
0001A45C <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
0001A482 <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
0001A48C <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001A4B6 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
0001A4BC <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
0001A4CC <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
0001A56C <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
0001A5AC <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001A5B2 <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
0001A614 <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001A61E <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
0001A628 <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
0001A642 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
0001A664 <CLIModeSupport.ab3@1335> XINCLUDE "CLIModeSupport.ab3"
0001A686 <CLIModeSupport.ab3@1336> XINCLUDE "CLIModeSupport.ab3"
0001A6E0 <CLIModeSupport.ab3@1337> XINCLUDE "CLIModeSupport.ab3"
0001A702 <CLIModeSupport.ab3@1338> XINCLUDE "CLIModeSupport.ab3"
0001A724 <CLIModeSupport.ab3@1339> XINCLUDE "CLIModeSupport.ab3"
0001A77E <CLIModeSupport.ab3@1340> XINCLUDE "CLIModeSupport.ab3"
0001A7C0 <CLIModeSupport.ab3@1341> XINCLUDE "CLIModeSupport.ab3"
0001A7C6 <CLIModeSupport.ab3@1343> XINCLUDE "CLIModeSupport.ab3"
0001A7D4 <CLIModeSupport.ab3@1344> XINCLUDE "CLIModeSupport.ab3"
0001A7DA <CLIModeSupport.ab3@1346> XINCLUDE "CLIModeSupport.ab3"
0001A7EE <CLIModeSupport.ab3@1347> XINCLUDE "CLIModeSupport.ab3"
0001A7F8 <CLIModeSupport.ab3@1348> XINCLUDE "CLIModeSupport.ab3"
0001A872 <CLIModeSupport.ab3@1349> XINCLUDE "CLIModeSupport.ab3"
0001A87C <CLIModeSupport.ab3@1350> XINCLUDE "CLIModeSupport.ab3"
0001A882 <CLIModeSupport.ab3@1351> XINCLUDE "CLIModeSupport.ab3"
0001A896 <CLIModeSupport.ab3@1354> XINCLUDE "CLIModeSupport.ab3"
0001A8A0 <CLIModeSupport.ab3@1355> XINCLUDE "CLIModeSupport.ab3"
0001A920 <CLIModeSupport.ab3@1356> XINCLUDE "CLIModeSupport.ab3"
0001A92A <CLIModeSupport.ab3@1357> XINCLUDE "CLIModeSupport.ab3"
0001A930 <CLIModeSupport.ab3@1358> XINCLUDE "CLIModeSupport.ab3"
0001A944 <CLIModeSupport.ab3@1361> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1362> XINCLUDE "CLIModeSupport.ab3"
0001A996 <CLIModeSupport.ab3@1363> XINCLUDE "CLIModeSupport.ab3"
0001A9A4 <CLIModeSupport.ab3@1364> XINCLUDE "CLIModeSupport.ab3"
0001A9CA <CLIModeSupport.ab3@1365> XINCLUDE "CLIModeSupport.ab3"
0001A9D4 <CLIModeSupport.ab3@1366> XINCLUDE "CLIModeSupport.ab3"
0001AA3E <CLIModeSupport.ab3@1367> XINCLUDE "CLIModeSupport.ab3"
0001AB10 <CLIModeSupport.ab3@1368> XINCLUDE "CLIModeSupport.ab3"
0001AB1A <CLIModeSupport.ab3@1369> XINCLUDE "CLIModeSupport.ab3"
0001AB20 <CLIModeSupport.ab3@1370> XINCLUDE "CLIModeSupport.ab3"
0001AB2A <CLIModeSupport.ab3@1372> XINCLUDE "CLIModeSupport.ab3"
0001AB30 <CLIModeSupport.ab3@1373> XINCLUDE "CLIModeSupport.ab3"
0001AB44 <CLIModeSupport.ab3@1376> XINCLUDE "CLIModeSupport.ab3"
0001AB4E <CLIModeSupport.ab3@1377> XINCLUDE "CLIModeSupport.ab3"
0001AB96 <CLIModeSupport.ab3@1378> XINCLUDE "CLIModeSupport.ab3"
0001ABA0 <CLIModeSupport.ab3@1379> XINCLUDE "CLIModeSupport.ab3"
0001ABA6 <CLIModeSupport.ab3@1380> XINCLUDE "CLIModeSupport.ab3"
0001ABBA <CLIModeSupport.ab3@1383> XINCLUDE "CLIModeSupport.ab3"
0001ABE0 <CLIModeSupport.ab3@1384> XINCLUDE "CLIModeSupport.ab3"
0001ABF4 <CLIModeSupport.ab3@1387> XINCLUDE "CLIModeSupport.ab3"
0001AC1A <CLIModeSupport.ab3@1388> XINCLUDE "CLIModeSupport.ab3"
0001AC2E <CLIModeSupport.ab3@1391> XINCLUDE "CLIModeSupport.ab3"
0001AC54 <CLIModeSupport.ab3@1392> XINCLUDE "CLIModeSupport.ab3"
0001AC68 <CLIModeSupport.ab3@1395> XINCLUDE "CLIModeSupport.ab3"
0001AC72 <CLIModeSupport.ab3@1396> XINCLUDE "CLIModeSupport.ab3"
0001ACA0 <CLIModeSupport.ab3@1397> XINCLUDE "CLIModeSupport.ab3"
0001ACF0 <CLIModeSupport.ab3@1398> XINCLUDE "CLIModeSupport.ab3"
0001AD10 <CLIModeSupport.ab3@1399> XINCLUDE "CLIModeSupport.ab3"
0001AD28 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001AE0C <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001AE16 <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001AE1C <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001AE1E <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001AE32 <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001AE64 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001AE6A <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001AEAE <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001AEC0 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001AED2 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001AEDC <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001AEE2 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001AEEC <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001AF06 <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001AF06 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001AF86 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AFBE <AmiBlitz3.ab3@99> If dynassign <> ""
0001AFD4 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AFDE <AmiBlitz3.ab3@101>     If *AssignSema
0001AFEE <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AFF4 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B014 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B01E <AmiBlitz3.ab3@105>       If *AssignSema
0001B02E <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B062 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B074 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B0B0 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B0BC <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B0C8 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B0D8 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B0E8 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B134 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B194 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B228 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B260 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B2E2 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B364 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B3E6 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B468 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B4EA <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B55E <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B5D2 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B646 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B674 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B698 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B6C6 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B6F4 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B7BE <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B7F6 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B834 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B844 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B84A <AmiBlitz3.ab3@152> Else
0001B85A <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B880 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B8AE <AmiBlitz3.ab3@161> If ( FindResident_("MorphOS") )
0001B8BE <AmiBlitz3.ab3@162>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B8C4 <AmiBlitz3.ab3@163> Else
0001B8D4 <AmiBlitz3.ab3@164>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001B8E0 <AmiBlitz3.ab3@168> dbg_fid.l = -1 ; no debug file id yet!
0001B8F2 <AmiBlitz3.ab3@171> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B8FC <AmiBlitz3.ab3@173> If CLIMode
0001B902 <AmiBlitz3.ab3@176>   err.l      = False                                       ; indicate that an error has occured
0001B908 <AmiBlitz3.ab3@177>   showhelp.l = False                                       ; show the CLI tool's help
0001B960 <AmiBlitz3.ab3@180>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B988 <AmiBlitz3.ab3@181>   cli_sourcefile.s    = ""
0001B9B0 <AmiBlitz3.ab3@182>   cli_exefile.s       = ""
0001B9D8 <AmiBlitz3.ab3@183>   cli_savefile.s      = ""
0001BA00 <AmiBlitz3.ab3@184>   cli_dumpfile.s      = ""
0001BA28 <AmiBlitz3.ab3@185>   cli_includepath.s   = ""
0001BA50 <AmiBlitz3.ab3@186>   cli_blitzlibpath.s  = ""
0001BA56 <AmiBlitz3.ab3@187>   cli_debuginfo.l     = False
0001BA5C <AmiBlitz3.ab3@188>   cli_run.l           = False
0001BA64 <AmiBlitz3.ab3@189>   cli_dumpflags.l     = $FFFFFFFF
0001BA8C <AmiBlitz3.ab3@190>   cli_info.s          = ""
0001BA92 <AmiBlitz3.ab3@191>   cli_release.l       = False
0001BA9C <AmiBlitz3.ab3@192>   cli_numargs.l       = dos_GetNumArgs{}
0001BAA2 <AmiBlitz3.ab3@193>   cli_gui.l           = False
0001BAAA <AmiBlitz3.ab3@194>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BAB2 <AmiBlitz3.ab3@195>   cli_verbose.l       = 1
0001BABA <AmiBlitz3.ab3@196>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BAC2 <AmiBlitz3.ab3@197>   cli_comstrbufsize.l = 0
0001BACA <AmiBlitz3.ab3@198>   cli_exestacksize.l  = 0
0001BAD2 <AmiBlitz3.ab3@199>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BAEA <AmiBlitz3.ab3@200>   If cli_numargs=0 Then showhelp=True
0001BB1A <AmiBlitz3.ab3@204>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BB66 <AmiBlitz3.ab3@205>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BC2E <AmiBlitz3.ab3@206>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BC64 <AmiBlitz3.ab3@207>     Select larg
0001BCB0 <AmiBlitz3.ab3@208>       Case "s" : larg="source"
0001BD02 <AmiBlitz3.ab3@209>       Case "e" : larg="exe"
0001BD54 <AmiBlitz3.ab3@210>       Case "d" : larg="debug"
0001BDA6 <AmiBlitz3.ab3@211>       Case "r" : larg="release"
0001BDF8 <AmiBlitz3.ab3@212>       Case "h" : larg="help"
0001BE4A <AmiBlitz3.ab3@213>       Case "v" : larg="verbose"
0001BE58 <AmiBlitz3.ab3@214>     End Select
0001BE8E <AmiBlitz3.ab3@216>     Select larg
0001BEE2 <AmiBlitz3.ab3@217>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BF3C <AmiBlitz3.ab3@218>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BF96 <AmiBlitz3.ab3@219>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BFC6 <AmiBlitz3.ab3@220>       Case "debug"    : cli_debuginfo   = True
0001BFF6 <AmiBlitz3.ab3@221>       Case "run"      : cli_run         = True
0001C026 <AmiBlitz3.ab3@222>       Case "release"  : cli_release     = True
0001C056 <AmiBlitz3.ab3@223>       Case "ped"      : cli_gui         = True
0001C0B0 <AmiBlitz3.ab3@224>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C122 <AmiBlitz3.ab3@225>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C152 <AmiBlitz3.ab3@226>                         cli_dumpfile    = dos_GetNextArg{}
0001C15A <AmiBlitz3.ab3@227>                         cli_dumpflags   = $0
0001C1BA <AmiBlitz3.ab3@228>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C21A <AmiBlitz3.ab3@229>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C27A <AmiBlitz3.ab3@230>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C2DA <AmiBlitz3.ab3@231>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C33A <AmiBlitz3.ab3@232>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C39A <AmiBlitz3.ab3@233>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C3FA <AmiBlitz3.ab3@234>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C45A <AmiBlitz3.ab3@235>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C4BA <AmiBlitz3.ab3@236>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C4CC <AmiBlitz3.ab3@237>                         If cli_dumpflags = $0
0001C4D2 <AmiBlitz3.ab3@238>                          err=True
0001C566 <AmiBlitz3.ab3@239>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C5D8 <AmiBlitz3.ab3@242>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C5E0 <AmiBlitz3.ab3@243>                         cli_comflags.l  = $0
0001C640 <AmiBlitz3.ab3@244>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C6A0 <AmiBlitz3.ab3@245>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C700 <AmiBlitz3.ab3@246>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C760 <AmiBlitz3.ab3@247> 
0001C7C0 <AmiBlitz3.ab3@248>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C7DA <AmiBlitz3.ab3@249>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C7E0 <AmiBlitz3.ab3@250>                           err=True                                                                ; no
0001C874 <AmiBlitz3.ab3@251>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C87A <AmiBlitz3.ab3@252>                         Else
0001C888 <AmiBlitz3.ab3@253>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C8FA <AmiBlitz3.ab3@256>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C902 <AmiBlitz3.ab3@257>                         cli_dbgflags.l  = $0
0001C962 <AmiBlitz3.ab3@258>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C9C2 <AmiBlitz3.ab3@259>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CA22 <AmiBlitz3.ab3@260>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CA82 <AmiBlitz3.ab3@261>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CA9C <AmiBlitz3.ab3@262>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CAA2 <AmiBlitz3.ab3@263>                           err=True                                                                ; no
0001CB36 <AmiBlitz3.ab3@264>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CB3C <AmiBlitz3.ab3@265>                         Else
0001CB4A <AmiBlitz3.ab3@266>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CBA4 <AmiBlitz3.ab3@268>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CBFE <AmiBlitz3.ab3@269>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CC58 <AmiBlitz3.ab3@270> 
0001CC7E <AmiBlitz3.ab3@271>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CC8E <AmiBlitz3.ab3@272>                           Poke.l ?maxerrorcount,cli_maxerrors
0001CCE8 <AmiBlitz3.ab3@275>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001CD18 <AmiBlitz3.ab3@276>       Case "h"        : showhelp        = True             ; show the help and quit
0001CD1E <AmiBlitz3.ab3@277>       Default
0001CD56 <AmiBlitz3.ab3@278>         If arg><""
0001CDEA <AmiBlitz3.ab3@279>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001CDF0 <AmiBlitz3.ab3@280>           err = True
0001CDFE <AmiBlitz3.ab3@282>     End Select
0001CE4A <AmiBlitz3.ab3@283>   Until arg = "" OR err=True          ; until we processed all arguments
0001CE6C <AmiBlitz3.ab3@286>   If err><False OR showhelp = True
0001CE76 <AmiBlitz3.ab3@287>     If showhelp
0001CED8 <AmiBlitz3.ab3@288>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CF10 <AmiBlitz3.ab3@289>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CF48 <AmiBlitz3.ab3@290>     NPrint "\\nOptions:"
0001CF80 <AmiBlitz3.ab3@291>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CFB8 <AmiBlitz3.ab3@292>     NPrint "  -(e)xe <file>       : output executable filename"
0001CFF0 <AmiBlitz3.ab3@293>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D028 <AmiBlitz3.ab3@294>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D060 <AmiBlitz3.ab3@295>     NPrint "  -run                : run compiled program"
0001D098 <AmiBlitz3.ab3@296>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D0D0 <AmiBlitz3.ab3@297>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D108 <AmiBlitz3.ab3@298>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D140 <AmiBlitz3.ab3@299>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D178 <AmiBlitz3.ab3@300>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D1B0 <AmiBlitz3.ab3@301>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D1E8 <AmiBlitz3.ab3@302>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D220 <AmiBlitz3.ab3@303>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D258 <AmiBlitz3.ab3@304>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D290 <AmiBlitz3.ab3@305>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D2C8 <AmiBlitz3.ab3@306>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D300 <AmiBlitz3.ab3@307>     NPrint "  -(h)elp             : show this help"
0001D338 <AmiBlitz3.ab3@308>     NPrint "\\nExample:"
0001D370 <AmiBlitz3.ab3@309>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D3A8 <AmiBlitz3.ab3@310>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D3AE <AmiBlitz3.ab3@313>     Goto abnormal_exit
0001D3CA <AmiBlitz3.ab3@316>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D42E <AmiBlitz3.ab3@317>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D43E <AmiBlitz3.ab3@320> Poke.l ?CLIMode,CLIMode
0001D462 <AmiBlitz3.ab3@355>   Dim incdim.s (#maxincludes)
0001D486 <AmiBlitz3.ab3@356>   Dim incline.l(#maxincludes)
0001D4A0 <AmiBlitz3.ab3@624> Function.s Get_Libinfo{addr_libnum.l}
0001D4AC <AmiBlitz3.ab3@626>   lib_ab2.b = False : lib_os.b = False
0001D4B2 <AmiBlitz3.ab3@627>   addr_counter.l = addr_libnum
0001D4BA <AmiBlitz3.ab3@628>   skip.l = 0
0001D4CC <AmiBlitz3.ab3@629>   If addr_counter=0
0001D506 <AmiBlitz3.ab3@630>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D524 <AmiBlitz3.ab3@631>     Function Return ""
0001D532 <AmiBlitz3.ab3@636>     mem.l = Peek.l(addr_counter)
0001D540 <AmiBlitz3.ab3@641>     addr_counter + 2
0001D560 <AmiBlitz3.ab3@642>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D57A <AmiBlitz3.ab3@643>     If (mem LSR 16) = $ffe2
0001D580 <AmiBlitz3.ab3@645>       lib_os = True
0001D588 <AmiBlitz3.ab3@646>       skip = 10
0001D5CE <AmiBlitz3.ab3@647>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D612 <AmiBlitz3.ab3@649>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D628 <AmiBlitz3.ab3@651>   If (addr_counter>addr_libnum + $400)
0001D646 <AmiBlitz3.ab3@653>     Function Return ""
0001D64C <AmiBlitz3.ab3@654>   Else
0001D670 <AmiBlitz3.ab3@655>     Function Return Peek$(addr_counter + skip)
0001D67A <AmiBlitz3.ab3@657> End Function
0001D698 <AmiBlitz3.ab3@697>   !asm
0001D69E <AmiBlitz3.ab3@698>   MOVEA.l _execbase,A6
0001D6A2 <AmiBlitz3.ab3@699>   MOVEM.l d0/a0,-(a7)
0001D6A4 <AmiBlitz3.ab3@701>   MOVEQ #127,d0
0001D6AA <AmiBlitz3.ab3@702>   LEA chartab,a0
0001D6B0 <AmiBlitz3.ab3@705>     MOVE.b #1,128(a0)
0001D6B2 <AmiBlitz3.ab3@706>     CLR.b (a0)+
0001D6B6 <AmiBlitz3.ab3@707>   DBF d0,'l12
0001D6BC <AmiBlitz3.ab3@709>   LEA chartab,a0
0001D6C0 <AmiBlitz3.ab3@710>   MOVE.b #1,(a0)
0001D6C6 <AmiBlitz3.ab3@711>   MOVE.b #1,","(a0)
0001D6CC <AmiBlitz3.ab3@712>   MOVE.b #1,";"(a0)
0001D6D2 <AmiBlitz3.ab3@713>   MOVE.b #1,":"(a0)
0001D6D8 <AmiBlitz3.ab3@714>   MOVE.b #1,"("(a0)
0001D6DE <AmiBlitz3.ab3@715>   MOVE.b #1,")"(a0)
0001D6E4 <AmiBlitz3.ab3@716>   MOVE.b #1,"="(a0)
0001D6EA <AmiBlitz3.ab3@717>   MOVE.b #1,"+"(a0)
0001D6F0 <AmiBlitz3.ab3@718>   MOVE.b #1,"-"(a0)
0001D6F6 <AmiBlitz3.ab3@719>   MOVE.b #1,"*"(a0)
0001D6FC <AmiBlitz3.ab3@720>   MOVE.b #1,"/"(a0)
0001D702 <AmiBlitz3.ab3@721>   MOVE.b #1,"$"(a0)
0001D708 <AmiBlitz3.ab3@722>   MOVE.b #1,"%"(a0)
0001D70E <AmiBlitz3.ab3@723>   MOVE.b #1,"."(a0)
0001D714 <AmiBlitz3.ab3@724>   MOVE.b #1,"["(a0)
0001D71A <AmiBlitz3.ab3@725>   MOVE.b #1,"]"(a0)
0001D720 <AmiBlitz3.ab3@726>   MOVE.b #1,"{"(a0)
0001D726 <AmiBlitz3.ab3@727>   MOVE.b #1,"}"(a0)
0001D72C <AmiBlitz3.ab3@728>   MOVE.b #1,"\"(a0)
0001D732 <AmiBlitz3.ab3@729>   MOVE.b #1,">"(a0)
0001D738 <AmiBlitz3.ab3@730>   MOVE.b #1,"<"(a0)
0001D73E <AmiBlitz3.ab3@731>   MOVE.b #1,"&"(a0)
0001D744 <AmiBlitz3.ab3@732>   MOVE.b #1,"|"(a0)
0001D74A <AmiBlitz3.ab3@733>   MOVE.b #1,"^"(a0)
0001D750 <AmiBlitz3.ab3@734>   MOVE.b #1,$7e(a0)
0001D756 <AmiBlitz3.ab3@735>   MOVE.w #$0101,1(a0)
0001D75C <AmiBlitz3.ab3@737>   LEA instrtab,a0
0001D762 <AmiBlitz3.ab3@738>   MOVE.l #labelhash-instrtab,d0
0001D764 <AmiBlitz3.ab3@739>   ASR.l #2,d0
0001D766 <AmiBlitz3.ab3@740>   SUBQ.l #1,d0
0001D768 <AmiBlitz3.ab3@743>    CLR.l (a0)+
0001D76A <AmiBlitz3.ab3@744>    SUBQ.l #1,d0
0001D76E <AmiBlitz3.ab3@745>   BNE 'l10
0001D774 <AmiBlitz3.ab3@747>   LEA allowtab,a0
0001D77A <AmiBlitz3.ab3@748>   MOVE.l #255,d0
0001D77C <AmiBlitz3.ab3@751>     CLR.b (a0)+
0001D780 <AmiBlitz3.ab3@752>   DBF d0,'la1
0001D786 <AmiBlitz3.ab3@754>   LEA allowtab,a0
0001D78C <AmiBlitz3.ab3@755>   MOVE.b #1,$7d(a0)
0001D792 <AmiBlitz3.ab3@756>   MOVE.b #1,$7c(a0)
0001D798 <AmiBlitz3.ab3@757>   MOVE.b #1,$44(a0)
0001D79E <AmiBlitz3.ab3@758>   MOVE.b #1,$45(a0)
0001D7A4 <AmiBlitz3.ab3@759>   MOVE.b #1,$b9(a0)
0001D7AA <AmiBlitz3.ab3@760>   MOVE.b #1,$89(a0)
0001D7B0 <AmiBlitz3.ab3@761>   MOVE.b #1,$ce(a0)
0001D7B6 <AmiBlitz3.ab3@762>   MOVE.b #1,$cf(a0)
0001D7BC <AmiBlitz3.ab3@763>   MOVE.b #1,$d0(a0)
0001D7C2 <AmiBlitz3.ab3@764>   MOVE.b #1,$cd(a0)
0001D7C4 <AmiBlitz3.ab3@765>   MOVEQ #0,d0
0001D7CA <AmiBlitz3.ab3@767>   MOVEA.l _execbase,a6
0001D7D0 <AmiBlitz3.ab3@772>   MOVE.l #$10000,d0
0001D7D6 <AmiBlitz3.ab3@773>   MOVE.l #80000,d1
0001D7D8 <AmiBlitz3.ab3@774>   MOVE.l d1,d2
0001D7DC <AmiBlitz3.ab3@775>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D7E2 <AmiBlitz3.ab3@776>   MOVE.l d0,mempool
0001D7E6 <AmiBlitz3.ab3@777>   MOVEM.l (a7)+,d0/a0
0001D7EC <AmiBlitz3.ab3@778>   TST.l mempool
0001D7F0 <AmiBlitz3.ab3@779>   BEQ shutdown_compiler
0001D7F4 <AmiBlitz3.ab3@781>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D7FA <AmiBlitz3.ab3@782>   MOVE.l A4,ptr_ThisTask
0001D7FE <AmiBlitz3.ab3@784>   BSR.w open_doslibrary
0001D802 <AmiBlitz3.ab3@785>   BEQ.w shutdown_compiler
0001D808 <AmiBlitz3.ab3@787>   MOVE.l D2,stacksize
0001D80A <AmiBlitz3.ab3@791>   MOVEQ.l #$00,D0
0001D810 <AmiBlitz3.ab3@792>   LEA tokens,A0
0001D812 <AmiBlitz3.ab3@795>     ADDQ.w #1,D0
0001D814 <AmiBlitz3.ab3@796>     MOVE.l (A0),D1
0001D818 <AmiBlitz3.ab3@797>     BEQ.w JL_0_2D1C
0001D81A <AmiBlitz3.ab3@798>     MOVEA.l D1,A0
0001D81E <AmiBlitz3.ab3@799> BRA.w JL_0_2D0E
0001D824 <AmiBlitz3.ab3@802>   MOVE.l A0,end_of_tokenlist
0001D828 <AmiBlitz3.ab3@804>   BSR.w makeasmtable
0001D830 <AmiBlitz3.ab3@805>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D834 <AmiBlitz3.ab3@807>   BSR.w open_mathlibrary
0001D838 <AmiBlitz3.ab3@808>   BEQ.w freemem_and_quit4
0001D83E <AmiBlitz3.ab3@810>   MOVE.l constmaxpc,D0
0001D840 <AmiBlitz3.ab3@811>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D846 <AmiBlitz3.ab3@812>   MOVEA.l _execbase,A6
0001D84A <AmiBlitz3.ab3@813>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D850 <AmiBlitz3.ab3@814>   MOVE.l D0,constpcat
0001D854 <AmiBlitz3.ab3@815>   BEQ.w freemem_and_quit3
0001D85A <AmiBlitz3.ab3@816>   ADD.l constmaxpc,D0
0001D860 <AmiBlitz3.ab3@817>   MOVE.l D0,constlibat
0001D866 <AmiBlitz3.ab3@819>   MOVE.l macrobuffer_size,D0
0001D86C <AmiBlitz3.ab3@820>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D870 <AmiBlitz3.ab3@821>   BGE 'ok
0001D876 <AmiBlitz3.ab3@822>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D87C <AmiBlitz3.ab3@823>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D87E <AmiBlitz3.ab3@826>   ADDQ.l #4,d0
0001D880 <AmiBlitz3.ab3@827>   MOVEQ.l #$01,D1
0001D886 <AmiBlitz3.ab3@828>   MOVEA.l _execbase,A6
0001D88A <AmiBlitz3.ab3@829>   JSR _AllocMem(A6)                                        ;macro mem
0001D88C <AmiBlitz3.ab3@830>   MOVE.l d0,a0
0001D892 <AmiBlitz3.ab3@831>   MOVE.l macrobuffer_size,(a0)+
0001D894 <AmiBlitz3.ab3@832>   MOVE.l a0,d0
0001D89A <AmiBlitz3.ab3@833>   MOVE.l D0,ptr_macrobuffer_begin
0001D89E <AmiBlitz3.ab3@834>   BEQ.w freemem_and_quit2
0001D8A4 <AmiBlitz3.ab3@835>   ADD.l macrobuffer_size,D0
0001D8AA <AmiBlitz3.ab3@836>   MOVE.l D0,ptr_macrobuffer_end
0001D8B0 <AmiBlitz3.ab3@838>   TST.l CLIMode
0001D8B4 <AmiBlitz3.ab3@839>   BEQ load_ped
0001D8DE <AmiBlitz3.ab3@842>   !basic
0001D8E8 <AmiBlitz3.ab3@843>   succ.l = InitEmulatedPED{}
0001D8EC <AmiBlitz3.ab3@844>   GetD0 succ
0001D90A <AmiBlitz3.ab3@845>   !asm
0001D90C <AmiBlitz3.ab3@846>   TST.l d0
0001D910 <AmiBlitz3.ab3@847>   BEQ freemem_and_quit
0001D916 <AmiBlitz3.ab3@848> JMP skip_ped
0001D91C <AmiBlitz3.ab3@853>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D922 <AmiBlitz3.ab3@854>   MOVEA.l _dosbase,A6
0001D926 <AmiBlitz3.ab3@855>   JSR _LoadSeg(A6)
0001D92C <AmiBlitz3.ab3@856>   MOVE.l D0,ptr_seg_ped
0001D930 <AmiBlitz3.ab3@858>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D932 <AmiBlitz3.ab3@862>   MOVEA.l D0,A2
0001D934 <AmiBlitz3.ab3@863>   ADDA.l A2,A2
0001D936 <AmiBlitz3.ab3@864>   ADDA.l A2,A2
0001D93C <AmiBlitz3.ab3@866>   LEA teddata,a1                                           ;lea edstruct,A1
0001D942 <AmiBlitz3.ab3@867>   MOVE.l #"TEDY",d1
0001D946 <AmiBlitz3.ab3@868>   JSR 4(A2)                                                ; Run PED
0001D94C <AmiBlitz3.ab3@870>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D952 <AmiBlitz3.ab3@871>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D990 <AmiBlitz3.ab3@873>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D994 <AmiBlitz3.ab3@874>   BEQ.w unload_ped
0001D998 <AmiBlitz3.ab3@875> 
0001D99C <AmiBlitz3.ab3@876>   BNE old_version_of_PED                                   ; no, than exit
0001D9DA <AmiBlitz3.ab3@882>   !ComData_GetL{comData_Magic,D0}
0001D9E0 <AmiBlitz3.ab3@883>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D9E4 <AmiBlitz3.ab3@884>   BNE unload_ped
0001DA1C <AmiBlitz3.ab3@887>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DA54 <AmiBlitz3.ab3@888>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DA8C <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DAC4 <AmiBlitz3.ab3@890>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DAFC <AmiBlitz3.ab3@891>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DB34 <AmiBlitz3.ab3@892>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DB6C <AmiBlitz3.ab3@893>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DBA4 <AmiBlitz3.ab3@894>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DBDC <AmiBlitz3.ab3@895>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DC14 <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DC4C <AmiBlitz3.ab3@897>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DC84 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DCBC <AmiBlitz3.ab3@901>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DCF4 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DD2C <AmiBlitz3.ab3@905>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001DD64 <AmiBlitz3.ab3@906>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001DD9C <AmiBlitz3.ab3@908>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001DDD4 <AmiBlitz3.ab3@909>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DE0C <AmiBlitz3.ab3@911>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DE44 <AmiBlitz3.ab3@912>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DE7C <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DEB4 <AmiBlitz3.ab3@915>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DEEC <AmiBlitz3.ab3@916>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DF24 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DF5C <AmiBlitz3.ab3@918>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DF94 <AmiBlitz3.ab3@919>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DFCC <AmiBlitz3.ab3@920>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E004 <AmiBlitz3.ab3@921>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E03C <AmiBlitz3.ab3@922>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E074 <AmiBlitz3.ab3@923>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E0AC <AmiBlitz3.ab3@924>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E0E4 <AmiBlitz3.ab3@925>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E11C <AmiBlitz3.ab3@926>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E154 <AmiBlitz3.ab3@927>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E18C <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E192 <AmiBlitz3.ab3@932>   CLR.w returncode_org
0001E1BC <AmiBlitz3.ab3@934>   !basic
0001E1C6 <AmiBlitz3.ab3@935>   If CLIMode
0001E238 <AmiBlitz3.ab3@936>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E256 <AmiBlitz3.ab3@938>   !asm
0001E25C <AmiBlitz3.ab3@942>   TST.b start_without_libs
0001E260 <AmiBlitz3.ab3@943>   BNE skip_loading_libs
0001E264 <AmiBlitz3.ab3@944>     BSR.w call_setpointerbusy
0001E26E <AmiBlitz3.ab3@945>     MOVE.l #$FFFFffff,linenumat
0001E272 <AmiBlitz3.ab3@946>     BSR.w get_libraries
0001E278 <AmiBlitz3.ab3@947>     JSR init_libraries
0001E27C <AmiBlitz3.ab3@948>     BSR.w init_buffers
0001E280 <AmiBlitz3.ab3@949>     BSR.w call_setpointernormal
0001E282 <AmiBlitz3.ab3@954>   MOVEQ.l #-$01,D0
0001E288 <AmiBlitz3.ab3@955>   MOVEA.l _execbase,A6
0001E28C <AmiBlitz3.ab3@956>   JSR _AllocSignal(A6)
0001E292 <AmiBlitz3.ab3@957>   MOVE.l D0,signalNum
0001E294 <AmiBlitz3.ab3@958>   MOVEQ.l #$00,D1
0001E296 <AmiBlitz3.ab3@959>   BSET D0,D1
0001E29C <AmiBlitz3.ab3@960>   MOVE.l D1,signals
0001E2A2 <AmiBlitz3.ab3@964>   MOVE.l #str_defaultdbug,D1
0001E2A6 <AmiBlitz3.ab3@965>   MOVEA.l _dosbase(PC),A6
0001E2AA <AmiBlitz3.ab3@966>   JSR _LoadSeg(A6)
0001E2B0 <AmiBlitz3.ab3@967>   MOVE.l D0,ptr_seg_debugger
0001E2B2 <AmiBlitz3.ab3@968>   TST.l d0
0001E2B6 <AmiBlitz3.ab3@969>   BNE ok_12
0001E2E0 <AmiBlitz3.ab3@970>     !basic
0001E342 <AmiBlitz3.ab3@971>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E360 <AmiBlitz3.ab3@972>     !asm
0001E366 <AmiBlitz3.ab3@975>   TST.l CLIMode
0001E36A <AmiBlitz3.ab3@976>   BEQ run_ped
0001E394 <AmiBlitz3.ab3@982>   !basic
0001E39A <AmiBlitz3.ab3@983>   err.l = False
0001E3C6 <AmiBlitz3.ab3@991>   If cli_sourcefile
0001E3E6 <AmiBlitz3.ab3@992>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E3F0 <AmiBlitz3.ab3@993>     If lock
0001E414 <AmiBlitz3.ab3@994>       NameFromLock_ lock,&cli_tempstr,1024
0001E43E <AmiBlitz3.ab3@995>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E44E <AmiBlitz3.ab3@996>       UnLock_ lock
0001E47A <AmiBlitz3.ab3@999>     If cli_exefile
0001E4CC <AmiBlitz3.ab3@1000>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E524 <AmiBlitz3.ab3@1001>       path.s = dos_PathPart{cli_exefile}
0001E544 <AmiBlitz3.ab3@1002>       lock.l = Lock_(&path,#ACCESS_READ)
0001E54E <AmiBlitz3.ab3@1003>       If lock
0001E572 <AmiBlitz3.ab3@1004>         NameFromLock_ lock,&cli_tempstr,1024
0001E59C <AmiBlitz3.ab3@1005>         path.s = Peek.s(&cli_tempstr)
0001E64A <AmiBlitz3.ab3@1006>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E65A <AmiBlitz3.ab3@1007>         UnLock_ lock
0001E6A4 <AmiBlitz3.ab3@1018>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E718 <AmiBlitz3.ab3@1019> 
0001E722 <AmiBlitz3.ab3@1020>   *PreProcessor.preprocessor = preproc_Create{}
0001E732 <AmiBlitz3.ab3@1021>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E764 <AmiBlitz3.ab3@1022>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E778 <AmiBlitz3.ab3@1023>   If *PreProcessor\tokens=#NULL
0001E7F2 <AmiBlitz3.ab3@1024>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E7FC <AmiBlitz3.ab3@1025>     preproc_QueryTokens{*PreProcessor}
0001E82E <AmiBlitz3.ab3@1026>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E87A <AmiBlitz3.ab3@1034>   If cli_sourcefile><"" AND err=False
0001E920 <AmiBlitz3.ab3@1035>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E952 <AmiBlitz3.ab3@1036>     succ=LoadSource{cli_sourcefile}
0001E95C <AmiBlitz3.ab3@1037>     If succ
0001E994 <AmiBlitz3.ab3@1038> 
0001EA0E <AmiBlitz3.ab3@1039>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001EA50 <AmiBlitz3.ab3@1040> 
0001EA5A <AmiBlitz3.ab3@1042>         If comerr
0001EA60 <AmiBlitz3.ab3@1044>         Else
0001EA66 <AmiBlitz3.ab3@1048>     Else
0001EAB6 <AmiBlitz3.ab3@1049>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EB02 <AmiBlitz3.ab3@1053>   If cli_savefile><"" AND err=False
0001EB7C <AmiBlitz3.ab3@1054>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EBAA <AmiBlitz3.ab3@1055>     SaveSource{cli_savefile}
0001EBF6 <AmiBlitz3.ab3@1058>   If cli_dumpfile><"" AND err=False
0001EC40 <AmiBlitz3.ab3@1059>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EC76 <AmiBlitz3.ab3@1060>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EC80 <AmiBlitz3.ab3@1063>   If cli_run
0001EC94 <AmiBlitz3.ab3@1064>     If comerr=False
0001ECC0 <AmiBlitz3.ab3@1065>       If cli_exefile
0001ED3A <AmiBlitz3.ab3@1066>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001ED70 <AmiBlitz3.ab3@1067> 
0001EDBA <AmiBlitz3.ab3@1069>       If cli_verbose>=1 Then NPrint "Running program..."
0001EDC8 <AmiBlitz3.ab3@1070> 
0001EDCA <AmiBlitz3.ab3@1072>         CLR.l d0
0001EE08 <AmiBlitz3.ab3@1073>         !ComData_GetB{comByte_RunningFlag,D0}
0001EE0C <AmiBlitz3.ab3@1074>         running.l = PutD0
0001EE28 <AmiBlitz3.ab3@1075>         If running Then Delay_ 50
0001EE3C <AmiBlitz3.ab3@1077>       Until running=False
0001EE50 <AmiBlitz3.ab3@1078>       If Peek.l(?_runerror)
0001EEA0 <AmiBlitz3.ab3@1079>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EEB2 <AmiBlitz3.ab3@1090>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001EEFC <AmiBlitz3.ab3@1091>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EF02 <AmiBlitz3.ab3@1092>   DeinitEmulatedPED{}
0001EF20 <AmiBlitz3.ab3@1094>   !asm
0001EF26 <AmiBlitz3.ab3@1095> JMP terminate_ab3
0001EF2C <AmiBlitz3.ab3@1100>   MOVEA.l ped_startup_addr,A1
0001EF32 <AmiBlitz3.ab3@1101>   LEA str_tempfilename,A0
0001EF34 <AmiBlitz3.ab3@1102>   JSR (A1)
0001EF3A <AmiBlitz3.ab3@1109>   MOVE.l signalNum,D0
0001EF40 <AmiBlitz3.ab3@1110>   MOVEA.l _execbase,A6
0001EF44 <AmiBlitz3.ab3@1111>   JSR _FreeSignal(A6)
0001EF4A <AmiBlitz3.ab3@1113>   MOVE.l ptr_seg_debugger,D1
0001EF4E <AmiBlitz3.ab3@1114>   BEQ.b skip_unload_debugger
0001EF52 <AmiBlitz3.ab3@1115>     MOVEA.l _dosbase(PC),A6
0001EF56 <AmiBlitz3.ab3@1116>     JSR _UnLoadSeg(A6)
0001EF5A <AmiBlitz3.ab3@1119>   BSR.w Aclearallvars
0001EF5E <AmiBlitz3.ab3@1120>   BSR.w free_residents
0001EF64 <AmiBlitz3.ab3@1121>   JSR free_blitzlibs
0001EF6A <AmiBlitz3.ab3@1124>   MOVE.l ptr_seg_ped,D1
0001EF6E <AmiBlitz3.ab3@1125>   BEQ freemem_and_quit
0001EF72 <AmiBlitz3.ab3@1126>   MOVEA.l _dosbase(PC),A6
0001EF76 <AmiBlitz3.ab3@1127>   JSR _UnLoadSeg(A6)
0001EF7A <AmiBlitz3.ab3@1128>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EFA4 <AmiBlitz3.ab3@1131>   !basic
0001F068 <AmiBlitz3.ab3@1132> 
0001F086 <AmiBlitz3.ab3@1133>   !asm
0001F08A <AmiBlitz3.ab3@1134>   BRA freemem_and_quit
0001F0B4 <AmiBlitz3.ab3@1137>   !basic
0001F178 <AmiBlitz3.ab3@1138>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F196 <AmiBlitz3.ab3@1139>   !asm
0001F19A <AmiBlitz3.ab3@1143>   BSR.w freeallox
0001F1A0 <AmiBlitz3.ab3@1144>   MOVEA.l ptr_macrobuffer_begin,A1
0001F1A2 <AmiBlitz3.ab3@1145>   MOVE.l -(a1),D0
0001F1A4 <AmiBlitz3.ab3@1146>   ADDQ.l #4,d0
0001F1AA <AmiBlitz3.ab3@1147>   MOVEA.l _execbase,A6
0001F1AE <AmiBlitz3.ab3@1148>   JSR _FreeMem(A6)
0001F1B4 <AmiBlitz3.ab3@1151>   MOVEA.l _dosbase,A1
0001F1BA <AmiBlitz3.ab3@1152>   MOVEA.l _execbase,A6
0001F1BE <AmiBlitz3.ab3@1153>   JSR _CloseLibrary(A6)
0001F1C4 <AmiBlitz3.ab3@1155>   MOVEA.l constpcat,A1
0001F1CA <AmiBlitz3.ab3@1156>   MOVE.l constmaxpc,D0
0001F1D0 <AmiBlitz3.ab3@1157>   MOVEA.l _execbase,A6
0001F1D4 <AmiBlitz3.ab3@1158>   JSR _FreeMem(A6)
0001F1DA <AmiBlitz3.ab3@1161>   MOVEA.l _mathffpbase,A1
0001F1E0 <AmiBlitz3.ab3@1162>   MOVEA.l _execbase,A6
0001F1E4 <AmiBlitz3.ab3@1163>   JSR _CloseLibrary(A6)
0001F1EA <AmiBlitz3.ab3@1173>     MOVEA.l _execbase,A6
0001F1F0 <AmiBlitz3.ab3@1174>     MOVE.l mempool,a0
0001F1F4 <AmiBlitz3.ab3@1175>     JSR _DeletePool(a6)
0001F1FA <AmiBlitz3.ab3@1176>     CLR.l pushat
0001F200 <AmiBlitz3.ab3@1183>   JSR free_unusedfunctions
0001F202 <AmiBlitz3.ab3@1184>   MOVEQ #0,d0
0001F210 <AmiBlitz3.ab3@1187>   !exitasm
0001F248 <AmiBlitz3.ab3@1188>   If dynassign<>""
0001F252 <AmiBlitz3.ab3@1189>     If *AssignSema
0001F262 <AmiBlitz3.ab3@1190>       ReleaseSemaphore_ *AssignSema
0001F27A <AmiBlitz3.ab3@1191>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F30E <AmiBlitz3.ab3@1192>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F348 <AmiBlitz3.ab3@1193>         dos_RemAssign{dynassign}
0001F358 <AmiBlitz3.ab3@1194>         RemSemaphore_ *AssignSema
0001F368 <AmiBlitz3.ab3@1195>         ReleaseSemaphore_ *AssignSema
0001F39E <AmiBlitz3.ab3@1196>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001F3AE <AmiBlitz3.ab3@1197>         FreeVec_ *AssignSema
0001F3B6 <AmiBlitz3.ab3@1198>         *AssignSema = #NULL
0001F3E4 <AmiBlitz3.ab3@1202>   SetCurrentDir{cli_path}
0001F406 <AmiBlitz3.ab3@1203>   !coutclose
0001F40C <AmiBlitz3.ab3@1204> End
0001F418 <AmiBlitz3.ab3@1209> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F41C <AmiBlitz3.ab3@1210> _dosbase:           Ds.l 1
0001F422 <AmiBlitz3.ab3@1214>   MOVEA.l _execbase,A6
0001F428 <AmiBlitz3.ab3@1215>   LEA str_doslibrary,A1
0001F42C <AmiBlitz3.ab3@1216>   JSR _OldOpenLibrary(A6)
0001F432 <AmiBlitz3.ab3@1217>   MOVE.l D0,_dosbase
0001F434 <AmiBlitz3.ab3@1218> RTS
0001F43A <AmiBlitz3.ab3@1222>   MOVEA.l #str_mathffpname,A1
0001F440 <AmiBlitz3.ab3@1223>   MOVEA.l _execbase,A6
0001F444 <AmiBlitz3.ab3@1224>   JSR _OldOpenLibrary(A6)
0001F44A <AmiBlitz3.ab3@1225>   MOVE.l D0,_mathffpbase
0001F44C <AmiBlitz3.ab3@1226> RTS
0001F47E <AmiBlitz3.ab3@1234> !ComData_JMP{comFunc_SetNormalPointer}
0001F4B0 <AmiBlitz3.ab3@1242> !ComData_JMP{comFunc_SetBusyPointer}
0001F4DA <AmiBlitz3.ab3@1246>   !basic
0001F4DE <AmiBlitz3.ab3@1247>   ab3save_filenameP.l = PutD0
0001F4E8 <AmiBlitz3.ab3@1248>   If ab3save_filenameP
0001F510 <AmiBlitz3.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F53E <AmiBlitz3.ab3@1251>     SaveSource{ab3save_filename}
0001F544 <AmiBlitz3.ab3@1252>   Else
0001F57E <AmiBlitz3.ab3@1253>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F59C <AmiBlitz3.ab3@1255>   !asm
0001F59E <AmiBlitz3.ab3@1256>   RTS
0001F5C8 <AmiBlitz3.ab3@1259>   !basic
0001F5CC <AmiBlitz3.ab3@1260>   ab3save_filenameP.l = PutD0
0001F5D6 <AmiBlitz3.ab3@1261>   If ab3save_filenameP
0001F5FE <AmiBlitz3.ab3@1262>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F62C <AmiBlitz3.ab3@1263>     LoadSource{ab3save_filename}
0001F632 <AmiBlitz3.ab3@1264>   Else
0001F66C <AmiBlitz3.ab3@1265>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F68A <AmiBlitz3.ab3@1267>   !asm
0001F68C <AmiBlitz3.ab3@1268>   RTS
0001F6B6 <AmiBlitz3.ab3@1271>   !basic
0001F6BC <AmiBlitz3.ab3@1272>   ClearSource{}
0001F6DA <AmiBlitz3.ab3@1273>   !asm
0001F6DC <AmiBlitz3.ab3@1274>   RTS
0001F706 <AmiBlitz3.ab3@1277>   !basic
0001F70C <AmiBlitz3.ab3@1278>   OpenConsoleFake{}
0001F72A <AmiBlitz3.ab3@1279>   !asm
0001F72C <AmiBlitz3.ab3@1280>   RTS
0001F756 <AmiBlitz3.ab3@1284>   !basic
0001F75C <AmiBlitz3.ab3@1285>   CloseConsoleFake{}
0001F77A <AmiBlitz3.ab3@1286>   !asm
0001F77C <AmiBlitz3.ab3@1287>   RTS
0001F782 <AmiBlitz3.ab3@1291>   MOVE.w d6,menuitemdebug
0001F7AC <AmiBlitz3.ab3@1292>   !basic
0001F7BE <AmiBlitz3.ab3@1293>   menuitemx.l = Peek.w(?menuitemdebug)
0001F7E4 <AmiBlitz3.ab3@1294>   If menuitemx>16 OR  menuitemx<0
0001F858 <AmiBlitz3.ab3@1295>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F860 <AmiBlitz3.ab3@1296>     menuitemx=0
0001F870 <AmiBlitz3.ab3@1298>   Poke.w ?menuitemdebug,menuitemx
0001F88E <AmiBlitz3.ab3@1299>   !asm
0001F894 <AmiBlitz3.ab3@1300>   MOVE.w menuitemdebug,d6
0001F89A <AmiBlitz3.ab3@1303>   MOVE.l A5,firstitem_
0001F8A0 <AmiBlitz3.ab3@1304>   MOVE.w D7,numlines_org
0001F8A6 <AmiBlitz3.ab3@1305>   MOVE.l d7,numlines
0001F8A8 <AmiBlitz3.ab3@1306>   LSL.w #2,D6
0001F8AE <AmiBlitz3.ab3@1307>   LEA menu_items,A0
0001F8B2 <AmiBlitz3.ab3@1308>   MOVEA.l $0(A0,D6.W),A0
0001F8BC <AmiBlitz3.ab3@1309>   MOVE.l #$FFFFffff,linenumat
0001F8C6 <AmiBlitz3.ab3@1310>   MOVE.l #$FFFFffff,compilelinecounter
0001F8C8 <AmiBlitz3.ab3@1313>   JSR (A0)                              ; jsr to the function for the menuitem
0001F8CE <AmiBlitz3.ab3@1314>   MOVE.l compilelinecounter,D0
0001F8D0 <AmiBlitz3.ab3@1315> RTS
0001F8D4 <AmiBlitz3.ab3@1317> menuitemdebug: Dc.l 0
0001F8D8 <AmiBlitz3.ab3@1319> mempool                Dc.l 0
0001F8EE <AmiBlitz3.ab3@1320> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F8F4 <AmiBlitz3.ab3@1321> dloaderr:             JSR handle_compileerror
0001F910 <AmiBlitz3.ab3@1322>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F94E <AmiBlitz3.ab3@1330>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F954 <AmiBlitz3.ab3@1331>   LEA str_loaddebugmessage,A2
0001F95A <AmiBlitz3.ab3@1332>   LEA str_blitz3assign,A0
0001F960 <AmiBlitz3.ab3@1333>   LEA str_temp_debugmodulename,A1
0001F962 <AmiBlitz3.ab3@1335>   JSR (A3)                                                  ;open ped filerequest
0001F966 <AmiBlitz3.ab3@1337>   BEQ.w menu_loaddebugmodule_noload
0001F96C <AmiBlitz3.ab3@1338>   MOVE.l D0,ptr_temp_debugmodule
0001F970 <AmiBlitz3.ab3@1339>   BSR.w call_setpointerbusy
0001F976 <AmiBlitz3.ab3@1340> 
0001F97C <AmiBlitz3.ab3@1341>   MOVE.l A7,errstack
0001F986 <AmiBlitz3.ab3@1342>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F98C <AmiBlitz3.ab3@1343>   MOVE.l ptr_temp_debugmodule,D1
0001F990 <AmiBlitz3.ab3@1345>   MOVEA.l _dosbase(PC),A6
0001F994 <AmiBlitz3.ab3@1346>   JSR _LoadSeg(A6)
0001F996 <AmiBlitz3.ab3@1347>   MOVE.l D0,D7
0001F99A <AmiBlitz3.ab3@1348>   BEQ.w dloaderr
0001F9A0 <AmiBlitz3.ab3@1349>   MOVE.l ptr_seg_debugger,D1
0001F9A4 <AmiBlitz3.ab3@1350>   BEQ.b menu_loaddebugmodule_ndseg
0001F9A8 <AmiBlitz3.ab3@1351>   MOVEA.l _dosbase(PC),A6
0001F9AC <AmiBlitz3.ab3@1352>   JSR _UnLoadSeg(A6)
0001F9B0 <AmiBlitz3.ab3@1353>   BSR.w call_setpointernormal
0001F9B6 <AmiBlitz3.ab3@1356>   MOVE.l D7,ptr_seg_debugger
0001F9B8 <AmiBlitz3.ab3@1359> RTS
0001F9D6 <AmiBlitz3.ab3@1362> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FA96 <AmiBlitz3.ab3@1363> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FB56 <AmiBlitz3.ab3@1364> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FB5A <AmiBlitz3.ab3@1365> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FB84 <AmiBlitz3.ab3@1369>   !basic
0001FBAE <AmiBlitz3.ab3@1370>   exepath.s = Peek.s(?exepath)
0001FBD8 <AmiBlitz3.ab3@1371>   exefile.s = Peek.s(?exefilename)
0001FC58 <AmiBlitz3.ab3@1372>   exefile.s = dos_AddPart{exepath,exefile}
0001FC90 <AmiBlitz3.ab3@1373>   Poke.s ?tempspace,exefile
0001FCAE <AmiBlitz3.ab3@1374>   !asm
0001FCB4 <AmiBlitz3.ab3@1395>   LEA tempspace,a0
0001FCB6 <AmiBlitz3.ab3@1396>   MOVE.l a0,d0
0001FCBA <AmiBlitz3.ab3@1397> BRA newcreate2
0001FCE4 <AmiBlitz3.ab3@1403>   !basic
0001FD0E <AmiBlitz3.ab3@1404>   request_exename.s = Peek.s(?str_request_exename )
0001FD6A <AmiBlitz3.ab3@1405>   request_exename   = !TRANS{request_exename}
0001FD70 <AmiBlitz3.ab3@1406>   GetD0 &request_exename
0001FD8E <AmiBlitz3.ab3@1407>   !asm
0001FD90 <AmiBlitz3.ab3@1408>   MOVE.l D0,A2
0001FDCE <AmiBlitz3.ab3@1411>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FDD4 <AmiBlitz3.ab3@1413>   LEA exepath,A0
0001FDDA <AmiBlitz3.ab3@1414>   LEA exefilename,A1
0001FDDC <AmiBlitz3.ab3@1416>   JSR (A3)                                                 ;open ped filerequest
0001FDE0 <AmiBlitz3.ab3@1418>   BEQ.w cancel_createexe
0001FDEA <AmiBlitz3.ab3@1421>   ADD.l #1,number_of_builds
0001FDF0 <AmiBlitz3.ab3@1424>   MOVE.l D0,ptr_newexefilename
0001FDF8 <AmiBlitz3.ab3@1425>   MOVE.w #-1,debugversion
0001FDFE <AmiBlitz3.ab3@1426>   MOVE.w set_make_smallestcode,-(A7)
0001FE06 <AmiBlitz3.ab3@1430>     MOVE.w #1,makeexec
0001FE0C <AmiBlitz3.ab3@1431>     JSR ab3_OpenDebugFile
0001FE10 <AmiBlitz3.ab3@1432>     BSR.w startcompile
0001FE16 <AmiBlitz3.ab3@1433>     JSR ab3_CloseDebugFile
0001FE20 <AmiBlitz3.ab3@1434>     CMP.l #"NORE",reqmode
0001FE24 <AmiBlitz3.ab3@1435>   BEQ 'l1
0001FE2A <AmiBlitz3.ab3@1437>   TST.w anyerrs
0001FE2E <AmiBlitz3.ab3@1438>   BNE.b menu_createexecutable__skip
0001FE32 <AmiBlitz3.ab3@1439>   BSR.w savefile
0001FE38 <AmiBlitz3.ab3@1442>   MOVE.w (A7)+,set_make_smallestcode
0001FE3A <AmiBlitz3.ab3@1445> RTS
0001FE42 <AmiBlitz3.ab3@1449>   MOVE.w #-1,flag_noPED
0001FE44 <AmiBlitz3.ab3@1450> RTS
0001FE4C <AmiBlitz3.ab3@1454>   MOVE.w #-1,flag_noCLI
0001FE4E <AmiBlitz3.ab3@1455> RTS
0001FE78 <AmiBlitz3.ab3@1458>   !basic
0001FEA0 <AmiBlitz3.ab3@1459>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FEB0 <AmiBlitz3.ab3@1460>     Poke.w ?word_WriteDebugFileNow,0
0001FECE <AmiBlitz3.ab3@1461>   !asm
0001FED0 <AmiBlitz3.ab3@1462> RTS
0001FEFA <AmiBlitz3.ab3@1465>   !basic
0001FF0A <AmiBlitz3.ab3@1466>   Poke.w ?word_WriteDebugFileNow,0
0001FF1C <AmiBlitz3.ab3@1467>   If dbg_fid>=0
0001FF32 <AmiBlitz3.ab3@1468>     file_Close{dbg_fid} : dbg_fid = -1
0001FF44 <AmiBlitz3.ab3@1470>   If dbg_fid.l<0
0001FF46 <AmiBlitz3.ab3@1471>     CLR.l d0
0001FF84 <AmiBlitz3.ab3@1472>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FF88 <AmiBlitz3.ab3@1473>     dbg_Create.l = PutD0
0001FF92 <AmiBlitz3.ab3@1474>     If (dbg_Create) ; only when set!
0001FFA2 <AmiBlitz3.ab3@1475>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FFCA <AmiBlitz3.ab3@1476>       exefile.s = ""
0001FFFC <AmiBlitz3.ab3@1477>       If exefileP Then exefile.s = Peek.s(exefileP)
00020034 <AmiBlitz3.ab3@1478>       If exefile><""
0002008A <AmiBlitz3.ab3@1479>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002009C <AmiBlitz3.ab3@1480>         If dbg_fid>=0
000200AE <AmiBlitz3.ab3@1481>           Poke.w ?word_WriteDebugFileNow,-1
000200BA <AmiBlitz3.ab3@1484>       oldhunkoffset.l = -1
000200E2 <AmiBlitz3.ab3@1485>       oldfile.s       = ""
00020100 <AmiBlitz3.ab3@1488>   !asm
00020102 <AmiBlitz3.ab3@1489> RTS
00020108 <AmiBlitz3.ab3@1492> TST.w word_WriteDebugFileNow
0002010C <AmiBlitz3.ab3@1493> BEQ 'skipdebugfile
00020136 <AmiBlitz3.ab3@1494> !basic
00020148 <AmiBlitz3.ab3@1495>   If dbg_fid>=0
0002015A <AmiBlitz3.ab3@1496>     pass.l          = Peek.w(?pass)
0002016C <AmiBlitz3.ab3@1497>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
00020190 <AmiBlitz3.ab3@1498> 
00020196 <AmiBlitz3.ab3@1499>       oldhunkoffset.l = hunkoffset.l
000201CA <AmiBlitz3.ab3@1500>       oldfile.s       = codefile.s
000201E6 <AmiBlitz3.ab3@1501>       If Peek.w (?ininclude)>0
000201F6 <AmiBlitz3.ab3@1502>         codeline.l = Peek.l(?includeline);-1
00020266 <AmiBlitz3.ab3@1503>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0002026C <AmiBlitz3.ab3@1504>       Else
0002029A <AmiBlitz3.ab3@1505>         !ComData_LEA{comStr_SourceName,A0}
0002029C <AmiBlitz3.ab3@1506>         MOVE.l A0,D0
000202A0 <AmiBlitz3.ab3@1507>         sourceP.l = PutD0
000202C8 <AmiBlitz3.ab3@1508>         codefile.s = Peek.s(sourceP)
000202D8 <AmiBlitz3.ab3@1509>         codeline.l = Peek.l(?linenumat)
00020300 <AmiBlitz3.ab3@1511>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020354 <AmiBlitz3.ab3@1512>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00020364 <AmiBlitz3.ab3@1519>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002036E <AmiBlitz3.ab3@1520>         If *sourceLine
00020384 <AmiBlitz3.ab3@1521>           MaxLen detokenline.s = 65536
000203C6 <AmiBlitz3.ab3@1522>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000203D6 <AmiBlitz3.ab3@1523>          *tn.preprocessor = Peek.l(?include_preprocessor)
00020402 <AmiBlitz3.ab3@1524>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00020430 <AmiBlitz3.ab3@1525>           If written>0 Then Poke.b &detokenline+written-1,0
0002045A <AmiBlitz3.ab3@1526>           sourceLineText.s = Peek.s(&detokenline)
00020460 <AmiBlitz3.ab3@1527>         Else
00020488 <AmiBlitz3.ab3@1528>           sourceLineText = "NULL"
00020550 <AmiBlitz3.ab3@1531>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0002056E <AmiBlitz3.ab3@1537> !asm
00020570 <AmiBlitz3.ab3@1539> RTS
00020572 <AmiBlitz3.ab3@1541> word_WriteDebugFileNow: Dc.w 0
00020574 <AmiBlitz3.ab3@1543> flag_noPED:  Ds.w 1                                        ;closeed org source
00020576 <AmiBlitz3.ab3@1544> flag_noCLI:  Ds.w 1                                        ;nocli org source
0002057A <AmiBlitz3.ab3@1548>   MOVEM.l A2-A3,-(A7)
00020580 <AmiBlitz3.ab3@1549>   CLR.b doublepeek
00020586 <AmiBlitz3.ab3@1550>   MOVE.l A5,lastsourcepos
0002058C <AmiBlitz3.ab3@1551>    JSR getchar
00020590 <AmiBlitz3.ab3@1552>   CMP.w #$2E,D0
00020594 <AmiBlitz3.ab3@1553>    BEQ.w JL_0_49B4b
0002059A <AmiBlitz3.ab3@1554>   MOVEA.l defaulttype,A2
0002059E <AmiBlitz3.ab3@1555>   CMP.w #$24,D0
000205A2 <AmiBlitz3.ab3@1556>    BNE.w JL_0_49CAb
000205A4 <AmiBlitz3.ab3@1557>   MOVEQ.l #$07,D1
000205A8 <AmiBlitz3.ab3@1558> BRA.w JL_0_49DEb
000205AE <AmiBlitz3.ab3@1561>   JSR getparameter2
000205B2 <AmiBlitz3.ab3@1562>   BEQ.w syntaxerrb
000205B8 <AmiBlitz3.ab3@1563>   LEA newtypebase,A2
000205BE <AmiBlitz3.ab3@1564>   JSR findtype
000205C2 <AmiBlitz3.ab3@1565>   BNE.w notypeerrb
000205CC <AmiBlitz3.ab3@1570>   MOVE.w oldqflag,instringon
000205D2 <AmiBlitz3.ab3@1571>   MOVEA.l lastsourcepos,A5
000205D8 <AmiBlitz3.ab3@1573>   MOVE.l a2,functionreturntype
000205E0 <AmiBlitz3.ab3@1574>   CMPI.l #$100,$4(A2)
000205E4 <AmiBlitz3.ab3@1575>   BLE.w 'isvar
000205E6 <AmiBlitz3.ab3@1579>   MOVEQ #3,d1
000205EA <AmiBlitz3.ab3@1580>   BRA JL_0_49DEb
000205EE <AmiBlitz3.ab3@1587>   MOVE.w $6(A2),D1
000205F4 <AmiBlitz3.ab3@1588>   CMP.w #8,8(a2)
000205F8 <AmiBlitz3.ab3@1589>   BNE 'l1
00020600 <AmiBlitz3.ab3@1590>   MOVE.b #1,doublepeek
00020606 <AmiBlitz3.ab3@1594>   MOVE.w D1,convsize
0002060A <AmiBlitz3.ab3@1595>   MOVEM.l (A7)+,A2-A3
0002060C <AmiBlitz3.ab3@1596> RTS
00020612 <AmiBlitz3.ab3@1598> notypeerrb  JMP notypeerr
00020618 <AmiBlitz3.ab3@1599> illtypeerrb JMP illtypeerr
0002061E <AmiBlitz3.ab3@1600> syntaxerrb  JMP syntaxerr
00020622 <AmiBlitz3.ab3@1605>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00020628 <AmiBlitz3.ab3@1606>   MOVEA.l _execbase,A6
0002062E <AmiBlitz3.ab3@1607>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
00020632 <AmiBlitz3.ab3@1608>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
00020634 <AmiBlitz3.ab3@1610>   MOVEQ.l #8,d1
0002063A <AmiBlitz3.ab3@1611>   MOVE.l #200,d0
0002063E <AmiBlitz3.ab3@1612>   JSR _CacheClearE(A6)
00020642 <AmiBlitz3.ab3@1613>  BRA 'exit
00020646 <AmiBlitz3.ab3@1652>   JSR _CacheClearU(A6)
0002064A <AmiBlitz3.ab3@1655>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002064C <AmiBlitz3.ab3@1656> RTS
00020656 <AmiBlitz3.ab3@1661>   ADD.l #1,number_of_builds
0002065C <AmiBlitz3.ab3@1663>   CLR.w debugversion
00020662 <AmiBlitz3.ab3@1664>   CLR.w flag_noPED
00020668 <AmiBlitz3.ab3@1665>   CLR.w flag_noCLI
00020670 <AmiBlitz3.ab3@1668>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020674 <AmiBlitz3.ab3@1669>     BSR.w startcompile
0002067E <AmiBlitz3.ab3@1670>     CMP.l #"NORE",reqmode
00020682 <AmiBlitz3.ab3@1671>   BEQ 'l1
00020688 <AmiBlitz3.ab3@1674>   TST.w anyerrs
0002068C <AmiBlitz3.ab3@1675>    BNE.w JL_0_3482
00020690 <AmiBlitz3.ab3@1677>   MOVE.w flag_noPED(PC),D1
00020694 <AmiBlitz3.ab3@1678>    BEQ.w skip_closingGUI
000206C6 <AmiBlitz3.ab3@1683>   !ComData_JSR{comFunc_CloseGUI}
000206CA <AmiBlitz3.ab3@1684> BRA.b runprogram
000206CE <AmiBlitz3.ab3@1688>   BSR.w compilerequester
000206D4 <AmiBlitz3.ab3@1691>   MOVEA.l _dosbase,A6
000206DA <AmiBlitz3.ab3@1692>   LEA exepath,a0
000206DC <AmiBlitz3.ab3@1693>   MOVE.l a0,d1
000206DE <AmiBlitz3.ab3@1694>   MOVEQ #-2,d2
000206E2 <AmiBlitz3.ab3@1695>   JSR _Lock(a6)                                            ;lock
000206E8 <AmiBlitz3.ab3@1696>   MOVE.l d0,exelock
000206EE <AmiBlitz3.ab3@1697>   MOVE.l #0,d1
000206F2 <AmiBlitz3.ab3@1698>   JSR _CurrentDir(A6)
000206F8 <AmiBlitz3.ab3@1699>   MOVE.l D0,lock_currentdir
000206FA <AmiBlitz3.ab3@1700>   MOVE.l D0,D1
000206FE <AmiBlitz3.ab3@1701>   JSR _CurrentDir(A6)
00020704 <AmiBlitz3.ab3@1702>   CLR.l ptr_exetask
0002070A <AmiBlitz3.ab3@1711>   MOVE.l #str_process_name,D1
0002070C <AmiBlitz3.ab3@1712>   MOVEQ.l #$00,D2
00020712 <AmiBlitz3.ab3@1713>   MOVE.l #proc_seglist,D3
00020714 <AmiBlitz3.ab3@1714>   LSR.l #2,D3
0002071A <AmiBlitz3.ab3@1715>   MOVE.l stacksize,D4
00020720 <AmiBlitz3.ab3@1716>   MOVEA.l _dosbase,A6
00020724 <AmiBlitz3.ab3@1717>   JSR _CreateProc(A6)                                      ;runtask
00020726 <AmiBlitz3.ab3@1718>   TST.l D0
0002072A <AmiBlitz3.ab3@1719>    BEQ ErrorRunningProg
00020760 <AmiBlitz3.ab3@1721>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020766 <AmiBlitz3.ab3@1723>   TST.w flag_noPED
0002076A <AmiBlitz3.ab3@1724>    BNE.b JL_0_344E
0002076E <AmiBlitz3.ab3@1725>   BSR.w close_compilewin
00020774 <AmiBlitz3.ab3@1728>   CLR.l firstlocal
0002077A <AmiBlitz3.ab3@1729>   CLR.l firstglob
0002077E <AmiBlitz3.ab3@1730>   MOVE.w flag_noPED(PC),D1
00020782 <AmiBlitz3.ab3@1731>   BEQ.w skip_openGUI
000207B4 <AmiBlitz3.ab3@1735>   !ComData_JSR{comFunc_CreateGUI}
000207B6 <AmiBlitz3.ab3@1745> RTS
000207C0 <AmiBlitz3.ab3@1748> MOVE.l #1,_runerror
000207C4 <AmiBlitz3.ab3@1749> BRA JL_0_344E
000207C8 <AmiBlitz3.ab3@1751> _runerror: Dc.l 0
000207CC <AmiBlitz3.ab3@1752> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000207D0 <AmiBlitz3.ab3@1753> ptr_exetask:        Ds.l 1                                          ;panictask org source
000207D4 <AmiBlitz3.ab3@1754> signalNum:          Ds.l 1                                          ;panicbit org source
000207D8 <AmiBlitz3.ab3@1755> signals:            Ds.l 1                                          ;panicmask org source
000207EE <AmiBlitz3.ab3@1757> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000207F3 <AmiBlitz3.ab3@1758>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000207F4 <AmiBlitz3.ab3@1759> Even4
000207F8 <AmiBlitz3.ab3@1761> ptr_ThisTask:       Ds.l 1                                          ;length
000207FC <AmiBlitz3.ab3@1762> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020802 <AmiBlitz3.ab3@1766>   MOVEA.l $4,A0
0002080A <AmiBlitz3.ab3@1767>   MOVE.l  $114(A0),ptr_exetask
00020810 <AmiBlitz3.ab3@1769>   MOVEA.l _dosbase,A6
00020816 <AmiBlitz3.ab3@1770>   MOVE.l exelock,D1
0002081A <AmiBlitz3.ab3@1771>   JSR _CurrentDir(A6)
00020850 <AmiBlitz3.ab3@1776>   !ComData_SetB{comByte_RunningFlag,#1}
00020854 <AmiBlitz3.ab3@1782>   MOVE.w flag_noCLI(PC),D1
00020858 <AmiBlitz3.ab3@1783>    BNE.b skip_openconsole
0002088A <AmiBlitz3.ab3@1787>   !ComData_JSR{comFunc_OpenConsole}
0002088E <AmiBlitz3.ab3@1790>   BSR.w calcvbr
00020894 <AmiBlitz3.ab3@1791>   MOVEA.l vbr,A0
0002089A <AmiBlitz3.ab3@1796>   CLR.w dirmode
000208A0 <AmiBlitz3.ab3@1797>   CLR.l firstglob
000208A6 <AmiBlitz3.ab3@1798>   CLR.l firstlocal
000208AC <AmiBlitz3.ab3@1800>   MOVE.l stacksize,D2
000208B2 <AmiBlitz3.ab3@1801>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
000208B8 <AmiBlitz3.ab3@1802>   LEA str_cliarguments,A0                                   ;cli arguement
000208BE <AmiBlitz3.ab3@1803>   MOVEA.l destbufferstart,A1
000208C2 <AmiBlitz3.ab3@1804>   BSR.w Aclearcache
000208C4 <AmiBlitz3.ab3@1807>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000208CA <AmiBlitz3.ab3@1809>   MOVEA.l vbr,A0
000208D0 <AmiBlitz3.ab3@1811>   CLR.l firstglob
000208D6 <AmiBlitz3.ab3@1812>   CLR.l firstlocal
000208DC <AmiBlitz3.ab3@1813>   MOVEA.l _dosbase,A6
000208E2 <AmiBlitz3.ab3@1814>   MOVE.l exelock,d1
000208E6 <AmiBlitz3.ab3@1815>   BEQ 'nolock
000208EA <AmiBlitz3.ab3@1816>   JSR _UnLock(a6)
00020920 <AmiBlitz3.ab3@1821>   !ComData_SetB{comByte_RunningFlag,#0}
00020924 <AmiBlitz3.ab3@1824>   MOVE.w flag_noCLI(PC),D1
00020928 <AmiBlitz3.ab3@1825>    BNE.b skip_closeconsole
0002095A <AmiBlitz3.ab3@1829>   !ComData_JSR{comFunc_CloseConsole}
00020962 <AmiBlitz3.ab3@1832>   MOVE.w #$0001,stopit
00020966 <AmiBlitz3.ab3@1833>   MOVE.l signals(PC),D0
0002096C <AmiBlitz3.ab3@1834>   MOVEA.l ptr_ThisTask,A1
00020972 <AmiBlitz3.ab3@1835>   MOVEA.l _execbase,A6
00020976 <AmiBlitz3.ab3@1836>   JSR _Signal(A6)
00020978 <AmiBlitz3.ab3@1837> RTS
0002097E <AmiBlitz3.ab3@1841>   MOVEA.l _execbase,A6
00020982 <AmiBlitz3.ab3@1842>   MOVE.w $128(A6),D0
00020984 <AmiBlitz3.ab3@1843>   MOVEQ.l #$00,D1
00020988 <AmiBlitz3.ab3@1844>   ANDI.w #$F,D0
0002098C <AmiBlitz3.ab3@1847>     BEQ.b calcvbr__skip
0002098E <AmiBlitz3.ab3@1848>     ADDQ.w #1,D1
00020990 <AmiBlitz3.ab3@1849>     LSR.w #1,D0
00020994 <AmiBlitz3.ab3@1850> BRA.b calcvbr_loop
00020996 <AmiBlitz3.ab3@1853>   MOVEQ.l #$00,D2
0002099A <AmiBlitz3.ab3@1854>   CMP.w #$2,D1
0002099E <AmiBlitz3.ab3@1855>    BCS.b calcvbr__skip2
000209A4 <AmiBlitz3.ab3@1856>   MOVEA.l _execbase,A6
000209A8 <AmiBlitz3.ab3@1857>   JSR _SuperState(A6)
000209AC <AmiBlitz3.ab3@1858>   Dc.l $4E7A2801                                           ;movec vbr,D2
000209B0 <AmiBlitz3.ab3@1859>   JSR _UserState(A6)
000209B6 <AmiBlitz3.ab3@1862>   MOVE.l D2,vbr
000209B8 <AmiBlitz3.ab3@1863> RTS
000209BE <AmiBlitz3.ab3@1867>   LEA instrtab,a0
000209C4 <AmiBlitz3.ab3@1868>   MOVE.l #labelhash-instrtab,d0
000209C6 <AmiBlitz3.ab3@1869>   ASR.l #2,d0
000209C8 <AmiBlitz3.ab3@1870>   SUBQ.l #1,d0
000209CA <AmiBlitz3.ab3@1873>   CLR.l (a0)+
000209CC <AmiBlitz3.ab3@1874>   SUBQ.l #1,d0
000209D0 <AmiBlitz3.ab3@1875>   BNE 'l10
000209D4 <AmiBlitz3.ab3@1876>   BSR.w call_setpointerbusy
000209D8 <AmiBlitz3.ab3@1877>   BSR.w free_userlibs
000209DC <AmiBlitz3.ab3@1878>   BSR.w scan_for_userlibs
000209E0 <AmiBlitz3.ab3@1879>   BSR.w JL_0_7082
000209E4 <AmiBlitz3.ab3@1880> BRA.w call_setpointernormal
00020A0E <AmiBlitz3.ab3@1886>   !basic
00020A48 <AmiBlitz3.ab3@1887>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020A58 <AmiBlitz3.ab3@1889>   deflibNameP.l = Peek.l(?deflib)
00020A62 <AmiBlitz3.ab3@1890>   If deflibNameP
00020A94 <AmiBlitz3.ab3@1891>     If Peek.s(deflibNameP)<>""
00020ADE <AmiBlitz3.ab3@1892>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020AE4 <AmiBlitz3.ab3@1893>     Else
00020B1E <AmiBlitz3.ab3@1894>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020B24 <AmiBlitz3.ab3@1896>   Else
00020B5E <AmiBlitz3.ab3@1897>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020B98 <AmiBlitz3.ab3@1898>     error{"INTERNAL: Invalid deflib name pointer!"}
00020BB6 <AmiBlitz3.ab3@1900>   !asm
00020BBC <AmiBlitz3.ab3@1905>   MOVE.l #str_path_userlibs,D1
00020BBE <AmiBlitz3.ab3@1906>   MOVEQ.l #-$02,D2
00020BC4 <AmiBlitz3.ab3@1907>   MOVEA.l _dosbase,A6
00020BC8 <AmiBlitz3.ab3@1908>   JSR _Lock(A6)
00020BCA <AmiBlitz3.ab3@1909>   MOVE.l D0,D7
00020BCE <AmiBlitz3.ab3@1910>    BEQ.w exit_get_libraries
00020BD0 <AmiBlitz3.ab3@1911>   MOVE.l D7,D1
00020BD6 <AmiBlitz3.ab3@1912>   MOVE.l #ptr_parameterstore,D2
00020BDA <AmiBlitz3.ab3@1913>   JSR _Examine(A6)
00020BDC <AmiBlitz3.ab3@1914>   TST.l D0
00020BE0 <AmiBlitz3.ab3@1915>   BEQ.w unlock_and_exit_get_libraries
00020BE6 <AmiBlitz3.ab3@1916>   MOVE.l fib_DirEntryType,D0
00020BEA <AmiBlitz3.ab3@1917>   BMI.w unlock_and_exit_get_libraries
00020BEC <AmiBlitz3.ab3@1922>     MOVE.l D7,D1
00020BF2 <AmiBlitz3.ab3@1923>     MOVE.l #ptr_parameterstore,D2
00020BF8 <AmiBlitz3.ab3@1924>     MOVEA.l _dosbase,A6
00020BFC <AmiBlitz3.ab3@1925>     JSR _ExNext(A6)
00020BFE <AmiBlitz3.ab3@1926>     TST.l D0
00020C02 <AmiBlitz3.ab3@1927>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00020C08 <AmiBlitz3.ab3@1929>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020C0C <AmiBlitz3.ab3@1930>     BPL.w scan_libsdrawer                                  ; skip directories
00020C12 <AmiBlitz3.ab3@1932>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020C16 <AmiBlitz3.ab3@1933>     BSR.w check_for_infoextention
00020C1A <AmiBlitz3.ab3@1934>     BEQ.w scan_libsdrawer
00020C20 <AmiBlitz3.ab3@1936>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020C22 <AmiBlitz3.ab3@1937>     MOVEQ.l #$26,D0
00020C24 <AmiBlitz3.ab3@1938>     MOVEQ.l #$01,D1
00020C2A <AmiBlitz3.ab3@1939>     MOVE.l mempool,a0
00020C2E <AmiBlitz3.ab3@1940>     JSR _AllocPooled(a6)
00020C34 <AmiBlitz3.ab3@1942>     MOVEA.l _dosbase,A6
00020C36 <AmiBlitz3.ab3@1943>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020C3C <AmiBlitz3.ab3@1946>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020C3E <AmiBlitz3.ab3@1949>     MOVE.l (A0),D5
00020C42 <AmiBlitz3.ab3@1950>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020C44 <AmiBlitz3.ab3@1951>     MOVEA.l D5,A2
00020C46 <AmiBlitz3.ab3@1952>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020C4C <AmiBlitz3.ab3@1955>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020C4E <AmiBlitz3.ab3@1958>       MOVEQ.l #$00,D0
00020C50 <AmiBlitz3.ab3@1959>       MOVE.b (A1)+,D0
00020C54 <AmiBlitz3.ab3@1960>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020C56 <AmiBlitz3.ab3@1961>       MOVEQ.l #$00,D1
00020C58 <AmiBlitz3.ab3@1962>       MOVE.b (A2)+,D1
00020C5C <AmiBlitz3.ab3@1963>        BEQ.w JL_0_371C
00020C7E <AmiBlitz3.ab3@1964>       !compare1                                            ;bsr.w tstalpha
00020C82 <AmiBlitz3.ab3@1965>       BNE.w JL_0_3702
00020C86 <AmiBlitz3.ab3@1966>       ANDI.w #$DF,D0
00020C88 <AmiBlitz3.ab3@1969>       EXG.l D0,D1
00020CAA <AmiBlitz3.ab3@1970>       !compare1                                            ;bsr.w tstalpha
00020CAE <AmiBlitz3.ab3@1971>       BNE.w JL_0_3710
00020CB2 <AmiBlitz3.ab3@1972>       ANDI.w #$DF,D0
00020CB4 <AmiBlitz3.ab3@1975>       EXG.l D0,D1
00020CB6 <AmiBlitz3.ab3@1976>       CMP.b D1,D0
00020CBA <AmiBlitz3.ab3@1977>     BEQ.w JL_0_36E6
00020CBE <AmiBlitz3.ab3@1978>     BCS.w JL_0_3722
00020CC0 <AmiBlitz3.ab3@1981>     MOVEA.l D5,A0
00020CC4 <AmiBlitz3.ab3@1982> BRA.w JL_0_36D6
00020CC6 <AmiBlitz3.ab3@1985>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020CC8 <AmiBlitz3.ab3@1986>     MOVE.l (A0),(A1)
00020CCA <AmiBlitz3.ab3@1987>     MOVE.l A1,(A0)
00020CCC <AmiBlitz3.ab3@1988>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020CD0 <AmiBlitz3.ab3@1989>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00020CD6 <AmiBlitz3.ab3@1990>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020CD8 <AmiBlitz3.ab3@1993>       MOVE.b (A0)+,(A1)+
00020CDC <AmiBlitz3.ab3@1994>     BNE.w JL_0_3734
00020CE0 <AmiBlitz3.ab3@1995> BRA.w scan_libsdrawer
00020CE2 <AmiBlitz3.ab3@1998>   MOVE.l D7,D1
00020CE8 <AmiBlitz3.ab3@1999>   MOVEA.l _dosbase,A6
00020CEC <AmiBlitz3.ab3@2000>   JSR _UnLock(A6)
00020CEE <AmiBlitz3.ab3@2001>   MOVEQ.l #-$01,D0
00020CF0 <AmiBlitz3.ab3@2004> RTS
00020CF2 <AmiBlitz3.ab3@2007>   MOVE.l D7,D1
00020CF8 <AmiBlitz3.ab3@2008>   MOVEA.l _dosbase,A6
00020CFC <AmiBlitz3.ab3@2009>   JSR _UnLock(A6)
00020CFE <AmiBlitz3.ab3@2010>   MOVEQ.l #$00,D0
00020D00 <AmiBlitz3.ab3@2011> RTS
00020D06 <AmiBlitz3.ab3@2015>   MOVEA.l _execbase,A6
00020D0C <AmiBlitz3.ab3@2016>   MOVEA.l ptr_userlibs_list,A2
00020D12 <AmiBlitz3.ab3@2017>   CLR.l ptr_userlibs_list
00020D16 <AmiBlitz3.ab3@2020>     CMPA.w #$0,A2
00020D1A <AmiBlitz3.ab3@2021>     BEQ.w exit_free_userlib
00020D1C <AmiBlitz3.ab3@2022>       MOVEA.l A2,A1
00020D1E <AmiBlitz3.ab3@2023>       MOVEQ.l #$26,D0
00020D20 <AmiBlitz3.ab3@2024>       MOVEA.l (A2),A2
00020D26 <AmiBlitz3.ab3@2025>       MOVE.l mempool,a0
00020D2C <AmiBlitz3.ab3@2026>       MOVEA.l _execbase,A6
00020D30 <AmiBlitz3.ab3@2027>       JSR _FreePooled(A6)
00020D34 <AmiBlitz3.ab3@2028> BRA.w loop_free_userlib
00020D36 <AmiBlitz3.ab3@2031> RTS
00020D38 <AmiBlitz3.ab3@2034> pass:  Dc.w 0                                             ; smallpass org source
00020D3A <AmiBlitz3.ab3@2035> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020D40 <AmiBlitz3.ab3@2039>   MOVE.l A7,errstack                                      ;startcompile
00020D46 <AmiBlitz3.ab3@2048>   CLR.l reqmode
00020D50 <AmiBlitz3.ab3@2050>   MOVE.l #Aclearallvars,errcont
00020D5A <AmiBlitz3.ab3@2051>   MOVE.l #concomstack,concomsp
00020D5E <AmiBlitz3.ab3@2059>   MOVE.w #1450,D0
00020D60 <AmiBlitz3.ab3@2060>   LSR.w #3,D0
00020D62 <AmiBlitz3.ab3@2061>   SUBQ.w #7,D0                                             ; 173
00020D68 <AmiBlitz3.ab3@2062>   MOVE.w D0,progressbar_width
00020D6A <AmiBlitz3.ab3@2063>   SWAP D0
00020D6C <AmiBlitz3.ab3@2064>   CLR.w D0
00020D72 <AmiBlitz3.ab3@2065>   MOVE.l numlines,d1
00020D76 <AmiBlitz3.ab3@2066>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020D78 <AmiBlitz3.ab3@2068>   TST.w D0
00020D7C <AmiBlitz3.ab3@2069>   BNE.w JL_0_37C0
00020D7E <AmiBlitz3.ab3@2070>   MOVEQ.l #-$01,D0
00020D84 <AmiBlitz3.ab3@2073>   MOVE.w D0,progress_per_line
00020D8C <AmiBlitz3.ab3@2082>   BTST #$7,use_debugger
00020D90 <AmiBlitz3.ab3@2084>   BNE 'debugon
00020D96 <AmiBlitz3.ab3@2085>   CLR.w debugmode
00020D9A <AmiBlitz3.ab3@2086> BRA.b 'debugoff
00020DA0 <AmiBlitz3.ab3@2089>   SNE debugmode
00020DD8 <AmiBlitz3.ab3@2097>   !ComData_SetB{comByte_DebugMode,debugmode}
00020DDE <AmiBlitz3.ab3@2100>   CLR.w dirmode                                            ;direct mode flag
00020DE4 <AmiBlitz3.ab3@2101>   CLR.w ezerr                                              ;quiet error
00020DEA <AmiBlitz3.ab3@2102>   CLR.l currentfunction
00020DF0 <AmiBlitz3.ab3@2103>   CLR.w connest
00020DF6 <AmiBlitz3.ab3@2104>   CLR.w varmode
00020DFC <AmiBlitz3.ab3@2105>   CLR.w proceduremode
00020E02 <AmiBlitz3.ab3@2106>   CLR.w ininclude
00020E08 <AmiBlitz3.ab3@2107>   CLR.w intstring
00020E0E <AmiBlitz3.ab3@2108>   CLR.w pass
00020E16 <AmiBlitz3.ab3@2109>   MOVE.w #0,compiler_job
00020E1C <AmiBlitz3.ab3@2110>   CLR.l funcscanon
00020E22 <AmiBlitz3.ab3@2119>   CLR.l funcscanon
00020E26 <AmiBlitz3.ab3@2120>   BSR.w compileall
00020E2C <AmiBlitz3.ab3@2121> 
00020E32 <AmiBlitz3.ab3@2122>   TST.l errorcounter
00020E36 <AmiBlitz3.ab3@2123>   BEQ _skiperrorstop
00020E38 <AmiBlitz3.ab3@2124>   RTS
00020E3E <AmiBlitz3.ab3@2127>   MOVE.w dontwrite,d0
00020E42 <AmiBlitz3.ab3@2128>   CMP.w #1,d0
00020E46 <AmiBlitz3.ab3@2129>   BNE 'l3
00020E4C <AmiBlitz3.ab3@2130>   TST.l errorcounter
00020E50 <AmiBlitz3.ab3@2131>   BNE 'l3
00020E56 <AmiBlitz3.ab3@2132>   CLR.w dontwrite
00020E5A <AmiBlitz3.ab3@2133>   BSR compileall                                           ;if a function is not found
00020E60 <AmiBlitz3.ab3@2134>   ADDQ.w #1,pass
00020E9E <AmiBlitz3.ab3@2139>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020EA2 <AmiBlitz3.ab3@2140>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020EA8 <AmiBlitz3.ab3@2141>   LEA firstproc,a0
00020EAE <AmiBlitz3.ab3@2142>   CLR.l savefuncspace
00020EB0 <AmiBlitz3.ab3@2143>   MOVE.l (a0),d0
00020EB2 <AmiBlitz3.ab3@2147>     MOVE.l d0,a0
00020EB6 <AmiBlitz3.ab3@2148>     BEQ 'out
00020EBA <AmiBlitz3.ab3@2149>     TST.b isfunc(a0)
00020EBE <AmiBlitz3.ab3@2150>     BNE 'nex
00020EC2 <AmiBlitz3.ab3@2151>     MOVEM.l d2/a6/a0,-(a7)
00020EC4 <AmiBlitz3.ab3@2153>     MOVEQ #0,d0
00020EC8 <AmiBlitz3.ab3@2154>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020ECC <AmiBlitz3.ab3@2155>     SUB.w #$21+#funcentry_extend,d0
00020ED0 <AmiBlitz3.ab3@2156>     ADD.w #16,d0
00020ED6 <AmiBlitz3.ab3@2157>     MOVE.l #$10000,d1
00020ED8 <AmiBlitz3.ab3@2158>     MOVE.l d0,d2
00020EDE <AmiBlitz3.ab3@2159>     MOVEA.l _execbase,A6
00020EE2 <AmiBlitz3.ab3@2160>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020EE4 <AmiBlitz3.ab3@2161>     MOVE.l d0,a1
00020EE8 <AmiBlitz3.ab3@2162>     MOVE.l d2,4(a1)
00020EEE <AmiBlitz3.ab3@2163>     MOVE.l unusedfunc,(a1)
00020EF4 <AmiBlitz3.ab3@2164>     MOVE.l d0,unusedfunc
00020EF8 <AmiBlitz3.ab3@2165>     MOVEM.l (a7)+,a6/a0/d2
00020EFC <AmiBlitz3.ab3@2166>     MOVE.l isfunc+1(a0),d0
00020EFE <AmiBlitz3.ab3@2167>     ADDQ.l #6,d0
00020F04 <AmiBlitz3.ab3@2168>     ADD.l d0,savefuncspace
00020F08 <AmiBlitz3.ab3@2171>     MOVE.l d0,8(a1)
00020F0C <AmiBlitz3.ab3@2172>     LEA 12(a1),a1
00020F0E <AmiBlitz3.ab3@2173>     MOVE.l a0,-(a7)
00020F12 <AmiBlitz3.ab3@2174>     LEA $21+#funcentry_extend(a0),a0
00020F14 <AmiBlitz3.ab3@2177>       MOVE.b (a0)+,(a1)+
00020F18 <AmiBlitz3.ab3@2178>     BNE 'l1
00020F1A <AmiBlitz3.ab3@2179>     MOVE.l (a7)+,a0
00020F1C <AmiBlitz3.ab3@2182>     MOVE.l (a0),d0
00020F20 <AmiBlitz3.ab3@2183> BRA 'lr1
00020F28 <AmiBlitz3.ab3@2186>   BTST #$7,make_smallestcode
00020F2C <AmiBlitz3.ab3@2187>   BEQ.b JL_0_3844                                           ;optimize for executable
00020F32 <AmiBlitz3.ab3@2188>   CLR.l morememadd
00020F36 <AmiBlitz3.ab3@2190>   BSR.w alloxadj
00020F3A <AmiBlitz3.ab3@2191>   BEQ.w JL_0_388A
00020F3E <AmiBlitz3.ab3@2194>   BSR.w compileall
00020F44 <AmiBlitz3.ab3@2195>   ADDQ.w #1,pass
00020F4A <AmiBlitz3.ab3@2198>   MOVE.w dontwrite,D1
00020F4E <AmiBlitz3.ab3@2199>   BEQ.w JL_0_38A2
00020F52 <AmiBlitz3.ab3@2219> BRA.w JL_0_3896
00020F5A <AmiBlitz3.ab3@2230>   MOVE.w #$FFFF,anyerrs
00020F5E <AmiBlitz3.ab3@2231> BRA.w JL_0_38A2
00020F62 <AmiBlitz3.ab3@2234>   BSR.w alloxinc                                          ;increase all by 50%
00020F66 <AmiBlitz3.ab3@2235>   BEQ.w Aclearallvars
00020F6A <AmiBlitz3.ab3@2236> BRA.w JL_0_3824
00020F6E <AmiBlitz3.ab3@2248> BRA.w JL_0_38A6                                            ;???????
00020F74 <AmiBlitz3.ab3@2252>   JSR freereps
00020F7A <AmiBlitz3.ab3@2253>   JSR freesels
00020F80 <AmiBlitz3.ab3@2254>   JSR AJL_0_6DF2
00020F86 <AmiBlitz3.ab3@2255>   JSR freepends
00020F8C <AmiBlitz3.ab3@2256>   JSR freeifs
00020F92 <AmiBlitz3.ab3@2257>   JSR AJL_0_C188
00020F98 <AmiBlitz3.ab3@2258>   JSR AJL_0_C15C
00020F9E <AmiBlitz3.ab3@2259>   JSR AJL_0_D9BC
00020FA4 <AmiBlitz3.ab3@2262> JMP cleartemplabel
00020FA8 <AmiBlitz3.ab3@2265> mempool2:  Dc.l 0
00020FAE <AmiBlitz3.ab3@2269>   JSR Aclearcache
00020FB6 <AmiBlitz3.ab3@2271>   BTST #$7,use_debugger
00020FBA <AmiBlitz3.ab3@2273>   BNE 'debugon
00020FC0 <AmiBlitz3.ab3@2274>   CLR.w debugmode
00020FC4 <AmiBlitz3.ab3@2275> BRA.b 'debugoff
00020FCA <AmiBlitz3.ab3@2278>   SNE debugmode
00021002 <AmiBlitz3.ab3@2283>   !ComData_SetB{comByte_DebugMode,debugmode}
00021008 <AmiBlitz3.ab3@2285>   LEA regtable,a0
0002100A <AmiBlitz3.ab3@2286>   MOVEQ #10,d0
0002100C <AmiBlitz3.ab3@2289>     CLR.l (a0)+
00021010 <AmiBlitz3.ab3@2290>   DBF d0,'l1
00021016 <AmiBlitz3.ab3@2292>   LEA includetemp2,a0
00021018 <AmiBlitz3.ab3@2293>   CLR.b (a0)
00021022 <AmiBlitz3.ab3@2294>   MOVE.l #7,maxregs
00021028 <AmiBlitz3.ab3@2295>   CLR.w debugnest
0002102E <AmiBlitz3.ab3@2296>   CLR.b funcparloop
00021034 <AmiBlitz3.ab3@2297>   CLR.b nostringopt
0002103A <AmiBlitz3.ab3@2298>   CLR.b firsttime
00021040 <AmiBlitz3.ab3@2299>   CLR.l lastdestpointer
00021046 <AmiBlitz3.ab3@2300>   CLR.l lastwritedat
0002104C <AmiBlitz3.ab3@2301>   CLR.l prevwritedat
00021052 <AmiBlitz3.ab3@2302>   CLR.l includeline
00021058 <AmiBlitz3.ab3@2303>   CLR.b incnif
0002105E <AmiBlitz3.ab3@2304>   CLR.b formode
00021064 <AmiBlitz3.ab3@2305>   CLR.b funccall
0002106A <AmiBlitz3.ab3@2306>   CLR.w objectcount
00021070 <AmiBlitz3.ab3@2307>   CLR.b resdisable
00021076 <AmiBlitz3.ab3@2308>   CLR.b developobject
0002107C <AmiBlitz3.ab3@2309>   CLR.b optistring
00021082 <AmiBlitz3.ab3@2310>   CLR.b optistring2
00021088 <AmiBlitz3.ab3@2311>   CLR.b optiarray
0002108E <AmiBlitz3.ab3@2312>   CLR.b quickadd
00021094 <AmiBlitz3.ab3@2313>   CLR.w newmode
0002109A <AmiBlitz3.ab3@2314>   CLR.w mode
000210A0 <AmiBlitz3.ab3@2315>   CLR.w string1
000210A6 <AmiBlitz3.ab3@2316>   CLR.b fastfunc
000210AC <AmiBlitz3.ab3@2317>   CLR.w load_var_size
000210B2 <AmiBlitz3.ab3@2318>   CLR.w load_var_reg
000210B8 <AmiBlitz3.ab3@2319>   CLR.l load_var_addr
000210BE <AmiBlitz3.ab3@2320>   CLR.w imm_size
000210C4 <AmiBlitz3.ab3@2321>   CLR.w imm_reg
000210CA <AmiBlitz3.ab3@2322>   CLR.l imm_addr
000210D0 <AmiBlitz3.ab3@2323>   CLR.b _dcb
000210D6 <AmiBlitz3.ab3@2324>   CLR.l nohunkoffset
000210DC <AmiBlitz3.ab3@2325>   CLR.b peekaddrsize
000210E2 <AmiBlitz3.ab3@2326>   CLR.b typecheck
000210E8 <AmiBlitz3.ab3@2327>   CLR.b declare2
000210EE <AmiBlitz3.ab3@2328>   CLR.b declare
000210F4 <AmiBlitz3.ab3@2329>   CLR.l myoline                                          ;check
000210FA <AmiBlitz3.ab3@2330>   CLR.l myline                                          ;check
00021100 <AmiBlitz3.ab3@2331>   CLR.b newvariable
00021106 <AmiBlitz3.ab3@2332>   CLR.b saved0
0002110C <AmiBlitz3.ab3@2333>   CLR.l bsssize
00021112 <AmiBlitz3.ab3@2334>   CLR.l chipsize
00021118 <AmiBlitz3.ab3@2335>   CLR.b infunctioncode
0002111E <AmiBlitz3.ab3@2336>   CLR.l errorcounter
00021128 <AmiBlitz3.ab3@2337>   MOVE.l #-1,bssstart
00021132 <AmiBlitz3.ab3@2338>   MOVE.l #-1,bssend
0002113C <AmiBlitz3.ab3@2339>   MOVE.l #-1,chipstart
00021146 <AmiBlitz3.ab3@2340>   MOVE.l #-1,chipend
0002114E <AmiBlitz3.ab3@2341>   MOVE.w #0,bssmode
00021154 <AmiBlitz3.ab3@2342>   CLR.w a2offset
0002115A <AmiBlitz3.ab3@2343>   CLR.w fast
00021160 <AmiBlitz3.ab3@2344>   CLR.w fpu
00021166 <AmiBlitz3.ab3@2345>   CLR.b iee
0002116C <AmiBlitz3.ab3@2346>   CLR.w newsyntax
00021170 <AmiBlitz3.ab3@2347>   BSR.w JL_0_38A6
00021176 <AmiBlitz3.ab3@2348>   JSR AJL_0_7962
0002117C <AmiBlitz3.ab3@2349>   JSR frallvars
00021182 <AmiBlitz3.ab3@2350>   JSR fralltypes
00021188 <AmiBlitz3.ab3@2351>   JSR freemacs
0002118E <AmiBlitz3.ab3@2352>   JSR clearfunctionlist
00021194 <AmiBlitz3.ab3@2353>   TST.w pass
0002119A <AmiBlitz3.ab3@2355>   JSR clearlabels
000211A0 <AmiBlitz3.ab3@2356>   JSR clearhash
000211A6 <AmiBlitz3.ab3@2359>   LEA devo,a0
000211AA <AmiBlitz3.ab3@2360>   MOVEM.l a0-a6/d0-d7,-(a7)
000211B0 <AmiBlitz3.ab3@2361>   LEA ptr_parameterstore,a1
000211B2 <AmiBlitz3.ab3@2364>     MOVE.b (a0)+,(a1)+
000211B6 <AmiBlitz3.ab3@2365>   BNE 'l1b
000211B8 <AmiBlitz3.ab3@2366>   MOVEQ #13,d2
000211BE <AmiBlitz3.ab3@2367>   JSR findlabel2
000211C2 <AmiBlitz3.ab3@2368>   BNE 'd
000211C6 <AmiBlitz3.ab3@2369>   CLR.l 8(a2)
000211CA <AmiBlitz3.ab3@2372>   MOVEM.l (a7)+,a0-a6/d0-d7
000211F4 <AmiBlitz3.ab3@2373>   !basic
00021268 <AmiBlitz3.ab3@2374>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00021286 <AmiBlitz3.ab3@2375>   !asm
0002128C <AmiBlitz3.ab3@2376>   CLR.b returncode
00021292 <AmiBlitz3.ab3@2377> JMP freeprocvs
00021298 <AmiBlitz3.ab3@2381>   MOVE.l #bssstore-labelhash,d0
0002129A <AmiBlitz3.ab3@2382>   ASR.l #2,d0
000212A0 <AmiBlitz3.ab3@2383>   LEA labelhash,a0
000212A2 <AmiBlitz3.ab3@2386>     CLR.l (a0)+
000212A4 <AmiBlitz3.ab3@2387>     SUBQ.l #1,d0
000212A8 <AmiBlitz3.ab3@2388>   BNE.s 'l10
000212AE <AmiBlitz3.ab3@2390>   LEA labelbase,a1
000212B0 <AmiBlitz3.ab3@2391>   MOVE.l (a1),d0
000212B4 <AmiBlitz3.ab3@2392>   BEQ 'l11
000212B6 <AmiBlitz3.ab3@2395>     MOVE.l d0,a1
000212BA <AmiBlitz3.ab3@2396>     TST.l 4(a1)
000212BE <AmiBlitz3.ab3@2397>     BEQ 'l29
000212C2 <AmiBlitz3.ab3@2398>     LEA $13(a1),a0
000212C4 <AmiBlitz3.ab3@2399>     MOVEQ #0,d0
000212C6 <AmiBlitz3.ab3@2400>     MOVEQ #0,d1
000212C8 <AmiBlitz3.ab3@2403>       MOVE.b (a0)+,d1
000212CC <AmiBlitz3.ab3@2404>       BEQ 'l12
000212D2 <AmiBlitz3.ab3@2405>       !hashalgo
000212D6 <AmiBlitz3.ab3@2406> BRA 'l13
000212DC <AmiBlitz3.ab3@2409>     LEA labelhash,a0
000212E2 <AmiBlitz3.ab3@2410>     AND.l #hashsize,d0
000212E4 <AmiBlitz3.ab3@2411>      ASL.l #2,d0
000212E8 <AmiBlitz3.ab3@2412>     MOVE.l 0(a0,d0),d1                                     ;*4
000212EC <AmiBlitz3.ab3@2413>     MOVE.l d1,$c(a1)
000212F0 <AmiBlitz3.ab3@2414>     MOVE.l a1,0(a0,d0)
000212F2 <AmiBlitz3.ab3@2417>     MOVE.l (a1),d0
000212F6 <AmiBlitz3.ab3@2418>   BNE 'l21
000212F8 <AmiBlitz3.ab3@2421> RTS
000212FE <AmiBlitz3.ab3@2425>   MOVEA.l lastrestype,A0
00021300 <AmiBlitz3.ab3@2426>   MOVEA.l (A0),A2
00021302 <AmiBlitz3.ab3@2427>   CLR.l (A0)
00021308 <AmiBlitz3.ab3@2428> JMP freetypes
0002130E <AmiBlitz3.ab3@2432>   MOVEA.l varbase,A3
00021314 <AmiBlitz3.ab3@2433>   CLR.l varbase
00021318 <AmiBlitz3.ab3@2436>   CMPA.w #$0,A3
0002131C <AmiBlitz3.ab3@2437>   BEQ.w 'l20
0002131E <AmiBlitz3.ab3@2438>   MOVEA.l A3,A1
00021320 <AmiBlitz3.ab3@2439>   MOVEA.l (A3),A3
00021322 <AmiBlitz3.ab3@2440>   MOVEQ.l #$00,D0
00021326 <AmiBlitz3.ab3@2441>   MOVE.b $E+4(A1),D0
0002132C <AmiBlitz3.ab3@2442>   MOVEA.l _execbase,A6
00021332 <AmiBlitz3.ab3@2443>   MOVE.l mempool2,a0
00021336 <AmiBlitz3.ab3@2444>   JSR _FreePooled(A6)
0002133A <AmiBlitz3.ab3@2445> BRA.w 'l10
0002133C <AmiBlitz3.ab3@2448> RTS
00021342 <AmiBlitz3.ab3@2453>   LEA firstiff,A2
00021344 <AmiBlitz3.ab3@2454>   MOVEQ.l #$0E,D2
0002134A <AmiBlitz3.ab3@2455> JMP freeslist
0002134C <AmiBlitz3.ab3@2461> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002134E <AmiBlitz3.ab3@2462> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00021354 <AmiBlitz3.ab3@2466>   CLR.w inmacro
0002135A <AmiBlitz3.ab3@2467>   ADDQ.l #1,globallinecount
00021360 <AmiBlitz3.ab3@2468>   CLR.b nostringopt
00021364 <AmiBlitz3.ab3@2469>   BSR.w JL_0_3CA4
0002136A <AmiBlitz3.ab3@2470>   CLR.w instringon
00021370 <AmiBlitz3.ab3@2473>   TST.w ininclude
00021374 <AmiBlitz3.ab3@2474>   BEQ.w JL_0_39B0
0002137A <AmiBlitz3.ab3@2475>   ADDQ.l #1,includeline
00021380 <AmiBlitz3.ab3@2476>     JSR ab3_WriteDebugFile
00021386 <AmiBlitz3.ab3@2477>   JSR AJL_0_C09E
0002138A <AmiBlitz3.ab3@2478>   BEQ.w JL_0_39B0
00021390 <AmiBlitz3.ab3@2479>   MOVE.w ininclude,D0
00021394 <AmiBlitz3.ab3@2480>   CMP.w #$4,D0
00021398 <AmiBlitz3.ab3@2481>   BCC.w JL_0_39AC
0002139A <AmiBlitz3.ab3@2482>   ADD.w D0,D0
000213A0 <AmiBlitz3.ab3@2483>   LEA progress_per_line,A0
000213A4 <AmiBlitz3.ab3@2484>   MOVE.w $0(A0,D0.W),D2
000213A8 <AmiBlitz3.ab3@2485>   CMP.w progressbar_width(PC),D2
000213AC <AmiBlitz3.ab3@2486>   BCC.w JL_0_39AC
000213B0 <AmiBlitz3.ab3@2487>   ADDQ.w #1,$0(A0,D0.W)
000213B2 <AmiBlitz3.ab3@2488>   LSR.w #1,D0
000213B4 <AmiBlitz3.ab3@2489>   MOVE.l d0,d1
000213B6 <AmiBlitz3.ab3@2490>   EXT.l d1
000213B8 <AmiBlitz3.ab3@2491>   MOVE.l d2,d0
000213BA <AmiBlitz3.ab3@2492>   EXT.l d0                                                 ;d0=x,d1=y
000213C0 <AmiBlitz3.ab3@2494>   JSR update_progressbar
000213C2 <AmiBlitz3.ab3@2497>   MOVEQ.l #-$01,D0
000213C4 <AmiBlitz3.ab3@2498> RTS
000213CA <AmiBlitz3.ab3@2502>   MOVE.l titleat,D0
000213CC <AmiBlitz3.ab3@2503>   MOVEQ.l #$00,D1
000213D2 <AmiBlitz3.ab3@2504>   MOVE.w progress_per_line,D1
000213D4 <AmiBlitz3.ab3@2505>   ADD.l D1,D0
000213D6 <AmiBlitz3.ab3@2506>   MOVE.l D0,D1
000213D8 <AmiBlitz3.ab3@2507>   SWAP D0
000213DE <AmiBlitz3.ab3@2508>   CMP.w titleat,D0
000213E2 <AmiBlitz3.ab3@2509>    BEQ.w JL_0_39E4
000213E4 <AmiBlitz3.ab3@2513>   EXT.l d0
000213E6 <AmiBlitz3.ab3@2514>   MOVE.l d1,-(a7)
000213EE <AmiBlitz3.ab3@2517>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
000213F4 <AmiBlitz3.ab3@2518>   JSR update_progressbar
000213FC <AmiBlitz3.ab3@2519>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
000213FE <AmiBlitz3.ab3@2523>   MOVE.l (a7)+,d1
00021404 <AmiBlitz3.ab3@2526>   MOVE.l D1,titleat
0002140A <AmiBlitz3.ab3@2527>   ADDQ.l #1,linenumat
00021410 <AmiBlitz3.ab3@2528>   CLR.w linedone
00021416 <AmiBlitz3.ab3@2529>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002141C <AmiBlitz3.ab3@2531>   SUBQ.l #1,numlines2
00021420 <AmiBlitz3.ab3@2532>    BEQ.w JL_0_3A12
00021426 <AmiBlitz3.ab3@2533>   MOVEA.l sourceline,A0
00021428 <AmiBlitz3.ab3@2534>   MOVEA.l (A0),A0
0002142E <AmiBlitz3.ab3@2535>   MOVE.l A0,sourceline
00021432 <AmiBlitz3.ab3@2536>   LEA $9(A0),A5
00021434 <AmiBlitz3.ab3@2539> RTS
00021436 <AmiBlitz3.ab3@2543>   MOVE.w D0,-(A7)
00021438 <AmiBlitz3.ab3@2544>   MOVEQ.l #$03,D0
0002143A <AmiBlitz3.ab3@2547>     MOVE.w D1,D2
0002143E <AmiBlitz3.ab3@2548>     ANDI.w #$F,D2
00021442 <AmiBlitz3.ab3@2549>     ADDI.w #$30,D2
00021446 <AmiBlitz3.ab3@2550>     CMP.w #$3A,D2
0002144A <AmiBlitz3.ab3@2551>      BCS.w JL_0_3A2C
0002144C <AmiBlitz3.ab3@2552>     ADDQ.w #7,D2
00021450 <AmiBlitz3.ab3@2555>     MOVE.b D2,$0(A0,D0.W)
00021452 <AmiBlitz3.ab3@2556>     LSR.w #4,D1
00021456 <AmiBlitz3.ab3@2557>   DBF D0,JL_0_3A18
00021458 <AmiBlitz3.ab3@2559>   MOVE.w (A7)+,D0
0002145A <AmiBlitz3.ab3@2560> RTS
00021460 <AmiBlitz3.ab3@2570>   MOVE.w skipcode,D1
00021464 <AmiBlitz3.ab3@2571>   BNE.w JL_0_3A46
00021466 <AmiBlitz3.ab3@2572> RTS
00021468 <AmiBlitz3.ab3@2575>   MOVE.l A5,-(A7)
0002146A <AmiBlitz3.ab3@2576>   MOVEQ.l #$3A,D1                                          ;':'
0002146C <AmiBlitz3.ab3@2577>   MOVEQ.l #$21,D2                                          ;'!'
0002146E <AmiBlitz3.ab3@2578>   MOVEQ.l #$3B,D3                                          ;';'
00021470 <AmiBlitz3.ab3@2579>   MOVEQ.l #$22,D4                                          ;'"'
00021472 <AmiBlitz3.ab3@2582>   MOVE.b (A5)+,D0
00021476 <AmiBlitz3.ab3@2583>    BEQ.w JL_0_3CA0
0002147A <AmiBlitz3.ab3@2584>    BPL.w JL_0_3A60
0002147C <AmiBlitz3.ab3@2585>   MOVE.b (A5)+,D0
00021480 <AmiBlitz3.ab3@2586> BRA.w JL_0_3A50
00021482 <AmiBlitz3.ab3@2589>   CMP.b D4,D0
00021486 <AmiBlitz3.ab3@2590>    BNE.w JL_0_3A82
00021488 <AmiBlitz3.ab3@2593>   MOVE.b (A5)+,D0
0002148C <AmiBlitz3.ab3@2594>    BEQ.w notqerr
00021490 <AmiBlitz3.ab3@2600>   CMP.b #$22,D0
00021494 <AmiBlitz3.ab3@2601>    BNE.w JL_0_3A66
00021498 <AmiBlitz3.ab3@2602> BRA.w JL_0_3A50
0002149A <AmiBlitz3.ab3@2605>   CMP.b D1,D0
0002149E <AmiBlitz3.ab3@2606>    BEQ.w JL_0_3CA0
000214A0 <AmiBlitz3.ab3@2607>   CMP.b D3,D0
000214A4 <AmiBlitz3.ab3@2608>    BEQ.w JL_0_3CA0
000214A6 <AmiBlitz3.ab3@2611>   CMP.b D2,D0
000214AA <AmiBlitz3.ab3@2612>    BNE.w JL_0_3A50
000214B2 <AmiBlitz3.ab3@2613>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000214B4 <AmiBlitz3.ab3@2614>   MOVEA.l A5,A3
000214BA <AmiBlitz3.ab3@2615>    JSR getparameter2
000214BE <AmiBlitz3.ab3@2616>    BNE.w JL_0_3AAC
000214C4 <AmiBlitz3.ab3@2617> JMP syntaxerr
000214CE <AmiBlitz3.ab3@2622>    MOVE.w oldqflag,instringon
000214D4 <AmiBlitz3.ab3@2623>   MOVEA.l lastsourcepos,A5
000214DA <AmiBlitz3.ab3@2624>    JSR findmac                                             ;find macro
000214DE <AmiBlitz3.ab3@2625>    BEQ.w JL_0_3ABE
000214E4 <AmiBlitz3.ab3@2626> JMP nomacerr
000214EA <AmiBlitz3.ab3@2629>   TST.b debugmode
000214EE <AmiBlitz3.ab3@2630>   BEQ 'sk1
000214F2 <AmiBlitz3.ab3@2631>   MOVE.w #$4e71,d1
000214F8 <AmiBlitz3.ab3@2632>   JSR writeword
000214FA <AmiBlitz3.ab3@2633>   MOVE.l a5,-(a7)
000214FC <AmiBlitz3.ab3@2634>   MOVE.l a3,a5
000214FE <AmiBlitz3.ab3@2635>   SUBQ.l #1,a5
00021506 <AmiBlitz3.ab3@2636>   MOVE.w #$0,inmacro
0002150A <AmiBlitz3.ab3@2637>   BSR debugstuffa
00021512 <AmiBlitz3.ab3@2638>   MOVE.w #$FFFF,inmacro
00021514 <AmiBlitz3.ab3@2639>   MOVE.l (a7)+,a5
00021518 <AmiBlitz3.ab3@2640>   MOVE.w #$4e71,d1
0002151E <AmiBlitz3.ab3@2641>   JSR writeword
00021520 <AmiBlitz3.ab3@2644>   MOVEA.l A5,A4
00021524 <AmiBlitz3.ab3@2647>    CMP.b #" ",(a4)+
00021528 <AmiBlitz3.ab3@2648>     BEQ 'l5a
0002152A <AmiBlitz3.ab3@2649>      SUBQ.l#1,a4
0002152E <AmiBlitz3.ab3@2650>      CMP.b #",",(a4)
00021532 <AmiBlitz3.ab3@2651>     BEQ JL_0_3AEA
00021534 <AmiBlitz3.ab3@2654>   MOVEQ.l #$00,D4
0002153A <AmiBlitz3.ab3@2655>   TST.b newsyntax
0002153E <AmiBlitz3.ab3@2656>   BEQ 'l10b
00021542 <AmiBlitz3.ab3@2657>   MOVEM.l a0/d0,-(a7)
00021546 <AmiBlitz3.ab3@2658>   MOVE.l 4(a2),a0
0002154A <AmiBlitz3.ab3@2659>   MOVE.w 8(a2),d0
0002154E <AmiBlitz3.ab3@2662>   CMP.b #"`",(a0)+
00021552 <AmiBlitz3.ab3@2663>   BEQ 'x1
00021554 <AmiBlitz3.ab3@2664>   SUBQ.w #1,d0
00021558 <AmiBlitz3.ab3@2665>   BNE 'x2
0002155C <AmiBlitz3.ab3@2666> BRA 'x3
00021560 <AmiBlitz3.ab3@2669>   MOVEM.l (a7)+,a0/d0
00021564 <AmiBlitz3.ab3@2670> BRA 'l10
00021568 <AmiBlitz3.ab3@2673>   MOVEM.l (a7)+,a0/d0
0002156C <AmiBlitz3.ab3@2674> BRA JL_0_3AEA
00021570 <AmiBlitz3.ab3@2677>   CMPI.b #"{",(A4)
00021574 <AmiBlitz3.ab3@2678>    BNE.w JL_0_3AEA
00021576 <AmiBlitz3.ab3@2682>   ADDQ.l #1,a4
0002157A <AmiBlitz3.ab3@2685>     CMP.b #" ",(a4)
0002157E <AmiBlitz3.ab3@2686>     BEQ 'l5
00021582 <AmiBlitz3.ab3@2687>     MOVEM.l a0/d0,-(a7)
00021588 <AmiBlitz3.ab3@2688>     CLR.b exmac
0002158E <AmiBlitz3.ab3@2689>     LEA chartab,a0
00021590 <AmiBlitz3.ab3@2690>     MOVEQ #0,d0
00021592 <AmiBlitz3.ab3@2691>     MOVE.b (a4),d0
00021596 <AmiBlitz3.ab3@2692>     BMI 'm1
0002159A <AmiBlitz3.ab3@2693>     TST.b 0(a0,d0)
0002159E <AmiBlitz3.ab3@2694>     BEQ 'm1
000215A4 <AmiBlitz3.ab3@2695>     TST.b newsyntax
000215A8 <AmiBlitz3.ab3@2696>     BEQ 'ns1
000215AC <AmiBlitz3.ab3@2697>     CMP.b #"#",d0
000215B0 <AmiBlitz3.ab3@2698>     BEQ 'm1
000215B4 <AmiBlitz3.ab3@2699>     CMP.b #"$",d0
000215B8 <AmiBlitz3.ab3@2700>     BEQ 'm1
000215BC <AmiBlitz3.ab3@2701>     CMP.b #"-",d0
000215C0 <AmiBlitz3.ab3@2702>     BEQ 'm1
000215C4 <AmiBlitz3.ab3@2705>   CMP.b #",",d0
000215C8 <AmiBlitz3.ab3@2706>     BEQ 'm1
000215CC <AmiBlitz3.ab3@2707>     CMP.b #"{",d0
000215D0 <AmiBlitz3.ab3@2708>     BNE 'm1b
000215D2 <AmiBlitz3.ab3@2709>     ADDQ.l #1,a4
000215D6 <AmiBlitz3.ab3@2710> BRA 'm1
000215DC <AmiBlitz3.ab3@2713>   TST.b newsyntax
000215E0 <AmiBlitz3.ab3@2714>     BEQ 'm1
000215E8 <AmiBlitz3.ab3@2715>     MOVE.b #1,exmac
000215EC <AmiBlitz3.ab3@2718>   MOVEM.l (a7)+,a0/d0
000215F2 <AmiBlitz3.ab3@2719>     TST.b exmac
000215F6 <AmiBlitz3.ab3@2720>     BNE JL_0_3AEA
000215F8 <AmiBlitz3.ab3@2727>   TST.b (a4)
000215FC <AmiBlitz3.ab3@2728>   BEQ JL_0_3AEA
00021602 <AmiBlitz3.ab3@2731>   MOVEA.l ptr_macrobuffer_begin,A0
00021604 <AmiBlitz3.ab3@2734>   ADDQ.w #1,D4
00021606 <AmiBlitz3.ab3@2735>   MOVE.l A4,(A0)
0002160A <AmiBlitz3.ab3@2736>   CLR.w 4(a0)
0002160E <AmiBlitz3.ab3@2737>    BSR.w JL_0_3CC6
00021610 <AmiBlitz3.ab3@2739>   ADDQ.l #4,a0
00021612 <AmiBlitz3.ab3@2743>   SUBQ.w #1,(a0)+
00021616 <AmiBlitz3.ab3@2744>   CMP.b #$7D,D0
0002161A <AmiBlitz3.ab3@2745>   BEQ 'l10
0002161C <AmiBlitz3.ab3@2746>   TST.b d0
00021620 <AmiBlitz3.ab3@2747>   BEQ 'l10
00021624 <AmiBlitz3.ab3@2748> BRA JL_0_3AD0
0002162A <AmiBlitz3.ab3@2752>   CLR.l sourceline3
0002162C <AmiBlitz3.ab3@2753>   MOVEA.l A4,A5
00021632 <AmiBlitz3.ab3@2756>   MOVE.w D4,numarg
00021638 <AmiBlitz3.ab3@2763>   MOVE.l #$01,D1
0002163E <AmiBlitz3.ab3@2764>   MOVEA.l _execbase,A6
00021644 <AmiBlitz3.ab3@2765>   MOVE.l mempool,a0
0002164A <AmiBlitz3.ab3@2766>   MOVE.l macrobuffer_size,D0
00021650 <AmiBlitz3.ab3@2767>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021654 <AmiBlitz3.ab3@2768>   BGE 'l1m
0002165A <AmiBlitz3.ab3@2769>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021660 <AmiBlitz3.ab3@2770>   MOVE.l d0,macrobuffer_size
00021664 <AmiBlitz3.ab3@2773>   JSR _AllocPooled(a6)
0002166E <AmiBlitz3.ab3@2775>   MOVE.l myline,myoline
00021670 <AmiBlitz3.ab3@2778>   ADDQ.l #1,d0
00021676 <AmiBlitz3.ab3@2779>   MOVE.l D0,myline
00021678 <AmiBlitz3.ab3@2780>   MOVEA.l D0,A1
0002167E <AmiBlitz3.ab3@2781>   MOVE.b #":",-1(a1)
00021680 <AmiBlitz3.ab3@2782>   MOVEA.l A1,A6
00021686 <AmiBlitz3.ab3@2783>   ADDA.l macrobuffer_size,A6
00021688 <AmiBlitz3.ab3@2784>   MOVEA.l (A7)+,A0
0002168A <AmiBlitz3.ab3@2787>   CMPA.l A6,A1
0002168E <AmiBlitz3.ab3@2788>    BCC.w mbovererr
00021690 <AmiBlitz3.ab3@2789>   MOVE.b (A0)+,(a1)+
00021692 <AmiBlitz3.ab3@2790>   CMPA.l A3,A0
00021696 <AmiBlitz3.ab3@2791>    BCS.w JL_0_3B1E
00021698 <AmiBlitz3.ab3@2792>   SUBQ.w #1,A1
0002169C <AmiBlitz3.ab3@2793>   MOVE.w $8(A2),D1
000216A0 <AmiBlitz3.ab3@2794>    BEQ.w JL_0_3C70
000216A8 <AmiBlitz3.ab3@2795>   MOVE.w $A(A2),macnum
000216AC <AmiBlitz3.ab3@2796>   ADDQ.w #1,$A(A2)
000216B0 <AmiBlitz3.ab3@2797>   MOVEA.l $4(A2),A2
000216B2 <AmiBlitz3.ab3@2798>   SUBQ.w #1,D1
000216B8 <AmiBlitz3.ab3@2799>   CLR.b firstmline
000216BA <AmiBlitz3.ab3@2802>     MOVEQ.l #$00,D0
000216BC <AmiBlitz3.ab3@2803>     MOVE.b (A2)+,D0
000216C2 <AmiBlitz3.ab3@2804>     TST.b firstmline
000216C6 <AmiBlitz3.ab3@2805>     BNE 'c1
000216CA <AmiBlitz3.ab3@2806>     CMP.b #$22,d0
000216CE <AmiBlitz3.ab3@2807>     BNE 's1
000216D6 <AmiBlitz3.ab3@2808>     MOVE.b #1,firstmline
000216DA <AmiBlitz3.ab3@2811>     CMP.b #":",d0
000216DE <AmiBlitz3.ab3@2812>     BNE 'm1
000216E6 <AmiBlitz3.ab3@2813>     MOVE.b #1,firstmline
000216EA <AmiBlitz3.ab3@2816>     CMP.b #";",d0
000216EE <AmiBlitz3.ab3@2817>     BNE 'c1
000216F0 <AmiBlitz3.ab3@2820>     SUBQ.w #1,d1                                           ;filter out comment
000216F2 <AmiBlitz3.ab3@2821>     MOVE.b (a2)+,d0
000216F8 <AmiBlitz3.ab3@2822>     CMP.w #":@",-1(a2)
000216FC <AmiBlitz3.ab3@2823>     BEQ 'c2
000216FE <AmiBlitz3.ab3@2824>     TST.w d1
00021702 <AmiBlitz3.ab3@2825>     BNE 'l1
00021706 <AmiBlitz3.ab3@2826>   BRA JL_0_3C6C
0002170C <AmiBlitz3.ab3@2829>     CMP.b #":",1(a2)
00021710 <AmiBlitz3.ab3@2830>       BNE 'l1
00021712 <AmiBlitz3.ab3@2831>       ADDQ #2,a2
00021714 <AmiBlitz3.ab3@2832>       SUBQ #3,d1
00021716 <AmiBlitz3.ab3@2833>       MOVE.b (a2)+,d0
0002171E <AmiBlitz3.ab3@2834>       MOVE.b #1,firstmline
00021722 <AmiBlitz3.ab3@2837>     CMP.b #"`",D0
00021726 <AmiBlitz3.ab3@2838>      BNE.w JL_0_3C56
00021728 <AmiBlitz3.ab3@2839>     SUBQ.w #1,D1
0002172A <AmiBlitz3.ab3@2840>     MOVE.b (A2)+,D0
0002172E <AmiBlitz3.ab3@2841>     CMP.w #$7B,D0
00021732 <AmiBlitz3.ab3@2842>      BEQ.w JL_0_3BB6
00021736 <AmiBlitz3.ab3@2843>     CMP.w #$40,D0
0002173A <AmiBlitz3.ab3@2844>      BNE.w JL_0_3B82
0002173C <AmiBlitz3.ab3@2845>     MOVEQ.l #$00,D2
00021742 <AmiBlitz3.ab3@2846>     MOVE.w macnum,D2
00021744 <AmiBlitz3.ab3@2847>     MOVEA.l A1,A0
00021746 <AmiBlitz3.ab3@2848>     MOVE.w D1,-(A7)
0002174C <AmiBlitz3.ab3@2849>      JSR makelong
0002174E <AmiBlitz3.ab3@2850>     MOVEA.l A0,A1
00021750 <AmiBlitz3.ab3@2851>     MOVE.w (A7)+,D1
00021754 <AmiBlitz3.ab3@2852>   BRA.w JL_0_3C6C
00021758 <AmiBlitz3.ab3@2855>     ORI.w #$20,D0
0002175C <AmiBlitz3.ab3@2856>     CMP.w #$7A,D0
00021760 <AmiBlitz3.ab3@2857>      BCS.w JL_0_3B94
00021766 <AmiBlitz3.ab3@2858>   JMP ilconsterr
0002176A <AmiBlitz3.ab3@2861>     SUBI.w #$30,D0
0002176E <AmiBlitz3.ab3@2862>     CMP.w #$A,D0
00021772 <AmiBlitz3.ab3@2863>      BCS.w JL_0_3BF2
00021776 <AmiBlitz3.ab3@2864>     SUBI.w #$27,D0
0002177A <AmiBlitz3.ab3@2865>     CMP.w #$A,D0
0002177E <AmiBlitz3.ab3@2866>      BCC.w JL_0_3BB2
00021784 <AmiBlitz3.ab3@2867>   JMP ilconsterr
00021788 <AmiBlitz3.ab3@2870>   BRA.w JL_0_3BF2
0002178A <AmiBlitz3.ab3@2873>     MOVE.l A5,-(A7)
0002178E <AmiBlitz3.ab3@2874>     MOVEM.l D1/A1-A2/A6,-(A7)
00021790 <AmiBlitz3.ab3@2875>     MOVEA.l A2,A5
00021796 <AmiBlitz3.ab3@2876>      JSR AJL_0_BF6E
0002179A <AmiBlitz3.ab3@2877>     CMP.w #$7D,D0
0002179E <AmiBlitz3.ab3@2878>      BEQ.w JL_0_3BD2
000217A4 <AmiBlitz3.ab3@2879>   JMP syntaxerr
000217A8 <AmiBlitz3.ab3@2882>     MOVEM.l (A7)+,D1/A1-A2/A6
000217AA <AmiBlitz3.ab3@2883>     MOVE.l A5,D2
000217AC <AmiBlitz3.ab3@2884>     SUB.l A2,D2
000217AE <AmiBlitz3.ab3@2885>     SUB.w D2,D1
000217B0 <AmiBlitz3.ab3@2886>     MOVEA.l A5,A2
000217B6 <AmiBlitz3.ab3@2887>     CLR.w instringon
000217B8 <AmiBlitz3.ab3@2888>     MOVEA.l (A7)+,A5
000217BA <AmiBlitz3.ab3@2889>     MOVE.l D3,D0
000217BE <AmiBlitz3.ab3@2890>     BPL.w JL_0_3BF2
000217C4 <AmiBlitz3.ab3@2891>   JMP ilconsterr
000217C6 <AmiBlitz3.ab3@2894>     SUBQ.w #1,D0
000217CA <AmiBlitz3.ab3@2895>      BPL.w JL_0_3C20
000217D0 <AmiBlitz3.ab3@2899>     MOVE.w numarg,D0
000217D4 <AmiBlitz3.ab3@2900>     DIVU #$A,D0
000217D8 <AmiBlitz3.ab3@2901>     ADDI.w #$30,D0
000217DA <AmiBlitz3.ab3@2902>     CMPA.l A6,A1
000217DE <AmiBlitz3.ab3@2903>      BCC.w mbovererr
000217E0 <AmiBlitz3.ab3@2904>     MOVE.b D0,(A1)+
000217E2 <AmiBlitz3.ab3@2905>     SWAP D0
000217E6 <AmiBlitz3.ab3@2906>     ADDI.w #$30,D0
000217E8 <AmiBlitz3.ab3@2907>     CMPA.l A6,A1
000217EC <AmiBlitz3.ab3@2908>      BCC.w mbovererr
000217EE <AmiBlitz3.ab3@2909>     MOVE.b D0,(A1)+
000217F2 <AmiBlitz3.ab3@2910>   BRA.w JL_0_3C6C
000217F8 <AmiBlitz3.ab3@2916>     CMP.w numarg,D0
000217FC <AmiBlitz3.ab3@2917>      BCC.w JL_0_3C6C
000217FE <AmiBlitz3.ab3@2918>     LSL.w #1,D0
00021800 <AmiBlitz3.ab3@2919>     MOVE.w D0,D4
00021802 <AmiBlitz3.ab3@2920>     LSL.w #1,D0
00021804 <AmiBlitz3.ab3@2921>     ADD.w D4,D0
0002180A <AmiBlitz3.ab3@2922>     MOVEA.l ptr_macrobuffer_begin,A0
0002180C <AmiBlitz3.ab3@2923>     ADDA.w D0,A0
00021810 <AmiBlitz3.ab3@2924>     MOVE.w $4(A0),D4
00021814 <AmiBlitz3.ab3@2925>      BEQ.w JL_0_3C6C
00021816 <AmiBlitz3.ab3@2926>     MOVEA.l (A0),A0
00021818 <AmiBlitz3.ab3@2927>     SUBQ.w #1,D4
0002181A <AmiBlitz3.ab3@2930>       CMPA.l A6,A1
0002181E <AmiBlitz3.ab3@2931>        BCC.w mbovererr
00021822 <AmiBlitz3.ab3@2932>       CMP.w #"@@",(a0)
00021826 <AmiBlitz3.ab3@2933>        BNE 'l10
0002182C <AmiBlitz3.ab3@2934>       TST.w ininclude
00021830 <AmiBlitz3.ab3@2935>        BNE errorjoin
00021836 <AmiBlitz3.ab3@2938>       MOVE.l sourceline,a0
00021838 <AmiBlitz3.ab3@2939>       MOVE.l (a0),a0
0002183E <AmiBlitz3.ab3@2940>       CMP.l #0,a0
00021842 <AmiBlitz3.ab3@2941>       BNE 'l11
00021844 <AmiBlitz3.ab3@2942>       MOVEQ #0,d0
0002184A <AmiBlitz3.ab3@2943>       JSR error
00021850 <AmiBlitz3.ab3@2946>       MOVE.l a0,sourceline
00021856 <AmiBlitz3.ab3@2947>       ADDQ.l #1,linenumat
0002185A <AmiBlitz3.ab3@2948>       LEA 9(a0),a0
0002185C <AmiBlitz3.ab3@2949>       MOVE.l a0,-(a7)
00021860 <AmiBlitz3.ab3@2952>       CMP.b #" ",(a0)+
00021864 <AmiBlitz3.ab3@2953>        BEQ 'l110
0002186A <AmiBlitz3.ab3@2954>       CMP.b #";",-1(a0)
0002186C <AmiBlitz3.ab3@2955>       MOVE.l (a7)+,a0
00021870 <AmiBlitz3.ab3@2956>        BEQ 'l111
00021872 <AmiBlitz3.ab3@2957>       SUBQ.l #1,d4
00021874 <AmiBlitz3.ab3@2960>       MOVE.b (A0)+,(A1)+
00021878 <AmiBlitz3.ab3@2961>     DBF D4,JL_0_3C46
0002187C <AmiBlitz3.ab3@2963>   BRA.w JL_0_3C6C
0002187E <AmiBlitz3.ab3@2966>     CMPA.l A6,A1
00021882 <AmiBlitz3.ab3@2967>      BCC.w mbovererr
00021884 <AmiBlitz3.ab3@2968>     MOVE.b D0,(A1)+
00021888 <AmiBlitz3.ab3@2969>      BPL.w JL_0_3C6C
0002188A <AmiBlitz3.ab3@2970>     CMPA.l A6,A1
0002188E <AmiBlitz3.ab3@2971>      BCC.w mbovererr
00021890 <AmiBlitz3.ab3@2972>     MOVE.b (A2)+,(A1)+
00021892 <AmiBlitz3.ab3@2973>     SUBQ.w #1,D1
00021896 <AmiBlitz3.ab3@2976>   DBF D1,JL_0_3B48
00021898 <AmiBlitz3.ab3@2986>   CMPA.l A6,A1
0002189C <AmiBlitz3.ab3@2987>    BCC.w mbovererr
0002189E <AmiBlitz3.ab3@2988>   MOVE.b (A5)+,(A1)+
000218A2 <AmiBlitz3.ab3@2989>    BNE.w JL_0_3C70
000218A8 <AmiBlitz3.ab3@2990>   MOVEA.l myline,A5
000218AE <AmiBlitz3.ab3@2991>   MOVE.l myoline,D0
000218B2 <AmiBlitz3.ab3@2992>    BEQ.w JL_0_3C9C
000218B4 <AmiBlitz3.ab3@2993>   SUBQ.l #1,d0
000218B6 <AmiBlitz3.ab3@2994>   MOVEA.l D0,A1
000218BC <AmiBlitz3.ab3@2995>   MOVE.l macrobuffer_size,D0
000218C2 <AmiBlitz3.ab3@2996>   MOVEA.l _execbase,A6
000218C8 <AmiBlitz3.ab3@2997>   MOVE.l mempool,a0
000218CC <AmiBlitz3.ab3@2998>   JSR _FreePooled(A6)
000218D0 <AmiBlitz3.ab3@3001> BRA.w JL_0_3A46
000218D2 <AmiBlitz3.ab3@3004>   MOVEA.l (A7)+,A5
000218D4 <AmiBlitz3.ab3@3005> RTS
000218DA <AmiBlitz3.ab3@3009>   MOVE.l myline,D0
000218DE <AmiBlitz3.ab3@3010>   BEQ.w JL_0_3CC4
000218E0 <AmiBlitz3.ab3@3011>   SUBQ.l #1,d0
000218E6 <AmiBlitz3.ab3@3012>   CLR.l myline
000218E8 <AmiBlitz3.ab3@3013>   MOVEA.l D0,A1
000218EE <AmiBlitz3.ab3@3014>   MOVE.l macrobuffer_size,D0
000218F4 <AmiBlitz3.ab3@3015>   MOVEA.l _execbase,A6
000218FA <AmiBlitz3.ab3@3016>   MOVE.l mempool,a0
000218FE <AmiBlitz3.ab3@3017> JMP _FreePooled(A6)
00021900 <AmiBlitz3.ab3@3020> RTS
00021902 <AmiBlitz3.ab3@3024>   MOVEQ.l #$00,D2
00021906 <AmiBlitz3.ab3@3027>   ADDQ.w #1,4(a0)
00021908 <AmiBlitz3.ab3@3028>    MOVE.b (A4)+,D0
0002190C <AmiBlitz3.ab3@3030>    BEQ exit1
00021910 <AmiBlitz3.ab3@3031>    BPL.w JL_0_3CD8
00021914 <AmiBlitz3.ab3@3032>   ADDQ.w #1,4(a0)
00021916 <AmiBlitz3.ab3@3033>   ADDQ.w #1,A4
0002191A <AmiBlitz3.ab3@3034> BRA.w JL_0_3CC8
00021920 <AmiBlitz3.ab3@3037>    TST.w instringon
00021924 <AmiBlitz3.ab3@3038>    BNE 'lnom
00021928 <AmiBlitz3.ab3@3039>    CMP.b #";",d0
0002192C <AmiBlitz3.ab3@3040>    BEQ exit2
00021930 <AmiBlitz3.ab3@3041>    CMP.b #":",d0
00021934 <AmiBlitz3.ab3@3042>    BEQ exit2
00021938 <AmiBlitz3.ab3@3045>   CMP.b #$22,D0
0002193C <AmiBlitz3.ab3@3046>    BNE.w JL_0_3CEA
00021942 <AmiBlitz3.ab3@3047>   NOT.w instringon
00021946 <AmiBlitz3.ab3@3048> BRA.w JL_0_3CC8
0002194C <AmiBlitz3.ab3@3052>   TST.w instringon
00021950 <AmiBlitz3.ab3@3053>    BNE.w JL_0_3CC8
00021954 <AmiBlitz3.ab3@3054>    CMP.b #"@",d0
00021958 <AmiBlitz3.ab3@3055>    BNE 'l10
0002195C <AmiBlitz3.ab3@3056>    CMP.b #"@",(a4)
00021960 <AmiBlitz3.ab3@3057>    BNE 'l10
00021966 <AmiBlitz3.ab3@3058>    TST.w ininclude
0002196A <AmiBlitz3.ab3@3059>    BNE errorjoin
00021970 <AmiBlitz3.ab3@3060>    MOVE.l sourceline3,a4
00021976 <AmiBlitz3.ab3@3061>    CMP.l #0,a4
0002197A <AmiBlitz3.ab3@3062>    BNE 'l11
00021980 <AmiBlitz3.ab3@3063>    MOVE.l sourceline,a4
00021982 <AmiBlitz3.ab3@3066>   MOVE.l (a4),a4
00021988 <AmiBlitz3.ab3@3067>       CMP.l #0,a4
0002198C <AmiBlitz3.ab3@3068>       BNE 'l12
0002198E <AmiBlitz3.ab3@3069>       MOVEQ #0,d0
00021994 <AmiBlitz3.ab3@3070>       JSR error
0002199A <AmiBlitz3.ab3@3073>    MOVE.l a4,sourceline3
0002199E <AmiBlitz3.ab3@3074>    LEA 9(a4),a4
000219A0 <AmiBlitz3.ab3@3075>    MOVEQ #",",d0
000219A4 <AmiBlitz3.ab3@3078>   CMP.b #$2C,D0
000219A8 <AmiBlitz3.ab3@3079>    BNE.w JL_0_3D06
000219AA <AmiBlitz3.ab3@3080>   TST.w D2
000219AE <AmiBlitz3.ab3@3081>    BEQ.w JL_0_3D30
000219B2 <AmiBlitz3.ab3@3082> BRA.w JL_0_3CC8
000219B6 <AmiBlitz3.ab3@3086>    CMP.b #$7B,D0                                           ;"{"
000219BA <AmiBlitz3.ab3@3087>    BEQ.w 'l10
000219BE <AmiBlitz3.ab3@3088>   CMP.b #$28,D0                                            ;"("
000219C2 <AmiBlitz3.ab3@3091>    BNE.w JL_0_3D14
000219C4 <AmiBlitz3.ab3@3092>   ADDQ.w #1,D2
000219C8 <AmiBlitz3.ab3@3093> BRA.w JL_0_3CC8
000219CC <AmiBlitz3.ab3@3096>   CMP.b #$7D,D0                                           ;"}"
000219D0 <AmiBlitz3.ab3@3097>    BNE.w JL_0_3D22
000219D2 <AmiBlitz3.ab3@3098>  TST.w D2
000219D6 <AmiBlitz3.ab3@3099>    BEQ.w JL_0_3D30
000219DA <AmiBlitz3.ab3@3103>    CMP.b #$7D,D0                                           ;"}"
000219DE <AmiBlitz3.ab3@3104>    BEQ.w 'l10
000219E2 <AmiBlitz3.ab3@3105>   CMP.b #$29,D0                                            ;")"
000219E6 <AmiBlitz3.ab3@3108>    BNE.w JL_0_3CC8
000219E8 <AmiBlitz3.ab3@3109>   SUBQ.w #1,D2
000219EC <AmiBlitz3.ab3@3110> BRA.w JL_0_3CC8
000219EE <AmiBlitz3.ab3@3113> RTS
000219F0 <AmiBlitz3.ab3@3117>       SUBQ.l #1,a4
000219F6 <AmiBlitz3.ab3@3118>       CLR.l sourceline3
000219F8 <AmiBlitz3.ab3@3119> RTS
000219FA <AmiBlitz3.ab3@3123>       MOVEQ #0,d0
000219FC <AmiBlitz3.ab3@3124>       SUBQ.l #1,a4
00021A02 <AmiBlitz3.ab3@3125>       CLR.l sourceline3
00021A04 <AmiBlitz3.ab3@3126> RTS
00021A08 <AmiBlitz3.ab3@3130>   CMP.b #$7B,D0                                            ;"{"
00021A0C <AmiBlitz3.ab3@3131>   BEQ.w JL_0_3D3E
00021A10 <AmiBlitz3.ab3@3132>   CMP.b #$28,D0                                            ;"("
00021A12 <AmiBlitz3.ab3@3135> RTS
00021A16 <AmiBlitz3.ab3@3139>   CMP.b #$7D,D0                                            ;"}"
00021A1A <AmiBlitz3.ab3@3140>   BEQ.w JL_0_3D4C
00021A1E <AmiBlitz3.ab3@3141>   CMP.b #$29,D0                                            ;")"
00021A20 <AmiBlitz3.ab3@3144> RTS
00021A22 <AmiBlitz3.ab3@3148> stopit:     Ds.w 1
00021A24 <AmiBlitz3.ab3@3149> clrreq:     Ds.w 1
00021A28 <AmiBlitz3.ab3@3170>   MOVE.w clrreq(PC),D0
00021A2C <AmiBlitz3.ab3@3171>    BEQ.w close_compilewin__skip
00021A5E <AmiBlitz3.ab3@3173> 
00021A64 <AmiBlitz3.ab3@3175>   LEA clrreq,a0
00021A66 <AmiBlitz3.ab3@3176>   NOT.w (a0)                                               ;reass
00021A6C <AmiBlitz3.ab3@3177>   MOVEA.l ptr_ThisTask,A0
00021A70 <AmiBlitz3.ab3@3178>   CLR.l $1E(A0)
00021A74 <AmiBlitz3.ab3@3179>   CLR.l $2A(A0)
00021A76 <AmiBlitz3.ab3@3182> RTS
00021A78 <AmiBlitz3.ab3@3185> intsused:  Ds.w 1
00021A80 <AmiBlitz3.ab3@3189>   MOVE.w #-1,blitzoff
00021A86 <AmiBlitz3.ab3@3190>   CLR.w intsused
00021A8C <AmiBlitz3.ab3@3191>   CLR.w anyerrs
00021A92 <AmiBlitz3.ab3@3192>   CLR.w blitzmode
00021A98 <AmiBlitz3.ab3@3193>   CLR.w dontwrite                                              ;nomemleft
00021A9E <AmiBlitz3.ab3@3194>   CLR.w constmode
00021AA4 <AmiBlitz3.ab3@3195>   CLR.w cmake
00021AAA <AmiBlitz3.ab3@3196>   CLR.w cfetchmode
00021AB0 <AmiBlitz3.ab3@3197>   CLR.l intdata1
00021AB6 <AmiBlitz3.ab3@3198>   CLR.w fuckpos
00021ABC <AmiBlitz3.ab3@3199>   CLR.w procnum
00021AC2 <AmiBlitz3.ab3@3200>   CLR.w procnum2
00021AC8 <AmiBlitz3.ab3@3201>   CLR.w dfetch
00021ACE <AmiBlitz3.ab3@3202>   CLR.l titleat
00021AD4 <AmiBlitz3.ab3@3203>   CLR.b usedpath
00021ADA <AmiBlitz3.ab3@3204>   CLR.b path2
00021AE0 <AmiBlitz3.ab3@3205>   CLR.w inerr
00021AE6 <AmiBlitz3.ab3@3206>   CLR.w intlevel
00021AEC <AmiBlitz3.ab3@3207>   CLR.l cont_pc
00021AF2 <AmiBlitz3.ab3@3208>   CLR.l cont_pc2
00021AF8 <AmiBlitz3.ab3@3209>   CLR.l lastcontlink
00021B02 <AmiBlitz3.ab3@3210>   MOVE.l destbufferstart,destpointer
00021B0C <AmiBlitz3.ab3@3211>   MOVE.l destbufferstart,bigpc
00021B16 <AmiBlitz3.ab3@3212>   MOVE.l destbufferend,libend
00021B20 <AmiBlitz3.ab3@3213>   MOVE.l data1start,data1
00021B2A <AmiBlitz3.ab3@3214>   MOVE.l data2at,data2
00021B32 <AmiBlitz3.ab3@3215>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021B3A <AmiBlitz3.ab3@3216>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021B40 <AmiBlitz3.ab3@3217>   CLR.w oldvcodelen
00021B46 <AmiBlitz3.ab3@3218>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021B48 <AmiBlitz3.ab3@3219> RTS
00021B4A <AmiBlitz3.ab3@3222> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021B50 <AmiBlitz3.ab3@3226>   LEA  clrreq,a1
00021B54 <AmiBlitz3.ab3@3227>   MOVE.w #2000,(a1)
00021B7E <AmiBlitz3.ab3@3228>   !basic
00021B94 <AmiBlitz3.ab3@3229> 
00021BE4 <AmiBlitz3.ab3@3230>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021BEC <AmiBlitz3.ab3@3231>   calcpro.l      = 0
00021BF4 <AmiBlitz3.ab3@3232>   calcpro_old.l  = 0
00021C00 <AmiBlitz3.ab3@3233>   typ_old.l      = -1
00021C0C <AmiBlitz3.ab3@3234>   pass_old.l     = -1
00021C12 <AmiBlitz3.ab3@3235>   update_comstatus_gui.b = True ; for the first
00021C4C <AmiBlitz3.ab3@3237>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021C86 <AmiBlitz3.ab3@3238>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021CA4 <AmiBlitz3.ab3@3239>   !asm
00021CD6 <AmiBlitz3.ab3@3240> 
00021CDC <AmiBlitz3.ab3@3242>   CLR.w stopit
00021CDE <AmiBlitz3.ab3@3243> RTS
00021CE4 <AmiBlitz3.ab3@3247>   CLR.w storedebugmode
00021CEA <AmiBlitz3.ab3@3248>   CLR.b iserror
00021CEE <AmiBlitz3.ab3@3249>   BSR.w compilerequester
00021CF8 <AmiBlitz3.ab3@3251>   MOVE.l #0,globallinecount
00021CFE <AmiBlitz3.ab3@3252>   JSR check_of_same_source
00021D02 <AmiBlitz3.ab3@3253>   BSR.w call_setpointerbusy
00021D06 <AmiBlitz3.ab3@3254>   BSR.w setcvars
00021D0E <AmiBlitz3.ab3@3255>   MOVE.w #$8000,globalvarpointer
00021D18 <AmiBlitz3.ab3@3256>   MOVE.l #newtype_quick,defaulttype
00021D1E <AmiBlitz3.ab3@3257>   MOVE.l A7,passstack
00021D28 <AmiBlitz3.ab3@3258>   MOVE.l #firstitem_,sourceline
00021D32 <AmiBlitz3.ab3@3259>   MOVE.w numlines_org,linesleft
00021D3C <AmiBlitz3.ab3@3260>   MOVE.l numlines,numlines2
00021D42 <AmiBlitz3.ab3@3261>   ADDQ.w #1,linesleft
00021D48 <AmiBlitz3.ab3@3262>   ADDQ.l #1,numlines2
00021D52 <AmiBlitz3.ab3@3263>   MOVE.l #-1,linenumat
00021D56 <AmiBlitz3.ab3@3264>   BSR.w resetlibs
00021D5A <AmiBlitz3.ab3@3265>   BSR.w Aclearallvars
00021D60 <AmiBlitz3.ab3@3266>   LEA progress_per_line+2,A0
00021D62 <AmiBlitz3.ab3@3267>   MOVEQ.l #$03,D0
00021D64 <AmiBlitz3.ab3@3270>     CLR.w (A0)+
00021D68 <AmiBlitz3.ab3@3271>   DBF D0,JL_0_40EC
00021D6E <AmiBlitz3.ab3@3274>   LEA _include,a0
00021D72 <AmiBlitz3.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
00021D78 <AmiBlitz3.ab3@3276>   LEA ptr_parameterstore,a1
00021D7A <AmiBlitz3.ab3@3279>     MOVE.b (a0)+,(a1)+
00021D7E <AmiBlitz3.ab3@3280>   BNE 'l1b
00021D80 <AmiBlitz3.ab3@3282>   MOVEQ #9,d2
00021D86 <AmiBlitz3.ab3@3283>   JSR findlabel2
00021D8A <AmiBlitz3.ab3@3284>   BNE 'd
00021D92 <AmiBlitz3.ab3@3285>   MOVE.l #0,8(a2)
00021D96 <AmiBlitz3.ab3@3286>   MOVEM.l (a7)+,a0-a6/d0-d7
00021D9A <AmiBlitz3.ab3@3287> BRA 'd2
00021DA0 <AmiBlitz3.ab3@3290>   JSR addlabelhash
00021DA8 <AmiBlitz3.ab3@3291>   MOVE.l #$1,$4(A2)
00021DB0 <AmiBlitz3.ab3@3292>   MOVE.l #0,8(a2)
00021DB4 <AmiBlitz3.ab3@3293>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DBA <AmiBlitz3.ab3@3296>   LEA _debug,a0
00021DBE <AmiBlitz3.ab3@3297>   MOVEM.l a0-a6/d0-d7,-(a7)
00021DC4 <AmiBlitz3.ab3@3298>   LEA ptr_parameterstore,a1
00021DC6 <AmiBlitz3.ab3@3301>     MOVE.b (a0)+,(a1)+
00021DCA <AmiBlitz3.ab3@3302>   BNE 'l9b
00021DCC <AmiBlitz3.ab3@3304>   MOVEQ #7,d2
00021DD2 <AmiBlitz3.ab3@3305>   JSR findlabel2
00021DD6 <AmiBlitz3.ab3@3306>   BNE 'd9
00021DDA <AmiBlitz3.ab3@3307>   MOVE.b debugmode(PC),D0
00021DDC <AmiBlitz3.ab3@3308>   EXT.w d0
00021DDE <AmiBlitz3.ab3@3309>   EXT.l d0
00021DE2 <AmiBlitz3.ab3@3310>   MOVE.l d0,8(a2)
00021DE6 <AmiBlitz3.ab3@3311>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DEA <AmiBlitz3.ab3@3312> BRA 'd9b
00021DF0 <AmiBlitz3.ab3@3315>   JSR addlabelhash
00021DF8 <AmiBlitz3.ab3@3316>   MOVE.l #$1,$4(A2)
00021DFC <AmiBlitz3.ab3@3317>   MOVE.b debugmode(PC),D0
00021DFE <AmiBlitz3.ab3@3318>   EXT.w d0
00021E00 <AmiBlitz3.ab3@3319>   EXT.l d0
00021E04 <AmiBlitz3.ab3@3320>   MOVE.l d0,8(a2)
00021E08 <AmiBlitz3.ab3@3321>   MOVEM.l (a7)+,a0-a6/d0-d7
00021E0E <AmiBlitz3.ab3@3324>   MOVE.l #firstitem_,a0
00021E10 <AmiBlitz3.ab3@3325>   MOVE.l (a0),a0
00021E14 <AmiBlitz3.ab3@3326>   LEA 9(a0),a0
00021E1C <AmiBlitz3.ab3@3327>   MOVE.w #0,exdebug
00021E22 <AmiBlitz3.ab3@3328>   TST.b debugmode
00021E26 <AmiBlitz3.ab3@3329>    BEQ 'l10
00021E28 <AmiBlitz3.ab3@3332>   MOVE.b (a0)+,d0
00021E2C <AmiBlitz3.ab3@3333>    BEQ 'l10
00021E30 <AmiBlitz3.ab3@3334>   CMP.b #$20,d0
00021E34 <AmiBlitz3.ab3@3335>    BEQ 'l2
00021E36 <AmiBlitz3.ab3@3336>   SUBQ.l #1,a0
00021E3C <AmiBlitz3.ab3@3337>   CMP.l #"DEBU",(a0)
00021E40 <AmiBlitz3.ab3@3338>    BNE 'l10
00021E46 <AmiBlitz3.ab3@3339>   CMP.b #"G",4(a0)
00021E4A <AmiBlitz3.ab3@3340>    BNE 'l10
00021E52 <AmiBlitz3.ab3@3341>   MOVE.w #$0,debugversion
00021E5A <AmiBlitz3.ab3@3342>   MOVE.b #1,exdebug
00021E60 <AmiBlitz3.ab3@3345>   LEA nops4,A0
00021E66 <AmiBlitz3.ab3@3346>   LEA dataget,A1
00021E6C <AmiBlitz3.ab3@3347>   JSR pokecode2                                            ;write intro nops
00021E72 <AmiBlitz3.ab3@3348>   MOVE.l #$01010101,d1
00021E78 <AmiBlitz3.ab3@3349>   JSR writedatalong                                        ;for the 4 tempregs
00021E7E <AmiBlitz3.ab3@3350>   JSR writedatalong
00021E84 <AmiBlitz3.ab3@3351>   JSR writedatalong
00021E8A <AmiBlitz3.ab3@3352>   JSR writedatalong
00021E90 <AmiBlitz3.ab3@3353>   TST.b saved0
00021E94 <AmiBlitz3.ab3@3354>    BEQ 'l1
00021E9A <AmiBlitz3.ab3@3355>   MOVE.l #$4e714e71,d1
00021EA0 <AmiBlitz3.ab3@3356>   JSR writelong                                            ;add 2 nops
00021EA6 <AmiBlitz3.ab3@3357>   MOVE.l #$4e714e71,d1
00021EAC <AmiBlitz3.ab3@3358>   JSR writelong                                            ;add 2 nops
00021EB2 <AmiBlitz3.ab3@3359>   MOVE.l #$4e714e71,d1
00021EB8 <AmiBlitz3.ab3@3360>   JSR writelong                                            ;add 2 nops
00021EBE <AmiBlitz3.ab3@3361>    MOVE.l #$4e714e71,d1
00021EC4 <AmiBlitz3.ab3@3362>   JSR writelong                                            ;add 2 nops
00021EC8 <AmiBlitz3.ab3@3365>   MOVE.b debugmode(PC),D1
00021ECC <AmiBlitz3.ab3@3366>    BEQ.b JL_0_4132
00021ED6 <AmiBlitz3.ab3@3367>   MOVE.b debugmode,storedebugmode
00021EDA <AmiBlitz3.ab3@3368>   MOVE.w #$FFDC,D1
00021EDE <AmiBlitz3.ab3@3369>    BSR.w uselib
00021EE4 <AmiBlitz3.ab3@3370>   TST.w debugversion                                       ;make a version for debugger
00021EE8 <AmiBlitz3.ab3@3371>    BNE.b JL_0_412A
00021EEC <AmiBlitz3.ab3@3375>   MOVE.w #$FA3C,D1
00021EF0 <AmiBlitz3.ab3@3376>    BSR.w uselib
00021EF4 <AmiBlitz3.ab3@3377>   MOVE.w #$0001,D1
00021EF8 <AmiBlitz3.ab3@3378>    BSR.w uselib
00021EFC <AmiBlitz3.ab3@3379> BRA.b JL_0_4132
00021F00 <AmiBlitz3.ab3@3382>   MOVE.w #$FA32,D1
00021F04 <AmiBlitz3.ab3@3383>   BSR.w uselib
00021F08 <AmiBlitz3.ab3@3386>   BSR.w nextline
00021F0E <AmiBlitz3.ab3@3387>   CLR.l linenum
00021F14 <AmiBlitz3.ab3@3388>   CLR.l stacktrack
00021F1A <AmiBlitz3.ab3@3391>   ADDQ.l #1,linenum
00021F24 <AmiBlitz3.ab3@3392>   MOVE.l destpointer,destpointer2
00021F2A <AmiBlitz3.ab3@3393>   MOVE.l a5,sourceline2
00021F2E <AmiBlitz3.ab3@3394>   BSR.w compile_line                                        ;compile pass
00021F32 <AmiBlitz3.ab3@3397>   BSR.w nextline
00021F36 <AmiBlitz3.ab3@3398>    BNE.w JL_0_4136
00021F3A <AmiBlitz3.ab3@3399>   BSR.w JUMP_do_runerrson
00021F3E <AmiBlitz3.ab3@3400>   BSR.w pointchk
00021F44 <AmiBlitz3.ab3@3401>   TST.b objectcount
00021F48 <AmiBlitz3.ab3@3402>    BNE macenderr
00021F4E <AmiBlitz3.ab3@3403>   CLR.l linenumat
00021F52 <AmiBlitz3.ab3@3404>   BSR.w errchx2
00021F5C <AmiBlitz3.ab3@3405>   CMP.l #-1,bssend
00021F60 <AmiBlitz3.ab3@3406>    BNE 'l30
00021F6A <AmiBlitz3.ab3@3407>   MOVE.l destpointer,bssend                                ;compile end
00021F70 <AmiBlitz3.ab3@3410>   MOVE.l destpointer,d0
00021F7A <AmiBlitz3.ab3@3411>   CMP.l #-1,bssstart
00021F7E <AmiBlitz3.ab3@3412>   BNE 'lnf6
00021F88 <AmiBlitz3.ab3@3413>   CMP.l #-1,chipstart
00021F8C <AmiBlitz3.ab3@3414>   BNE 'lnf6
00021F90 <AmiBlitz3.ab3@3415> BRA 'leven4
00021F96 <AmiBlitz3.ab3@3418>   MOVE.l destpointer,d1
00021F98 <AmiBlitz3.ab3@3419>   ADDQ.l #3,d1
00021F9E <AmiBlitz3.ab3@3420>   AND.l #$fffffffc,d1                                      ;bug ?
00021FA4 <AmiBlitz3.ab3@3421>   MOVE.l d1,destpointer
00021FAE <AmiBlitz3.ab3@3424>   MOVE.l destpointer,codeend
00021FB8 <AmiBlitz3.ab3@3425>   CMP.l #-1,chipend
00021FBC <AmiBlitz3.ab3@3426>   BNE 'l31
00021FC6 <AmiBlitz3.ab3@3427>   MOVE.l destpointer,chipend
00021FCC <AmiBlitz3.ab3@3430>   MOVE.l destpointer,d1
00021FCE <AmiBlitz3.ab3@3431>   ADDQ.l #1,d1
00021FD4 <AmiBlitz3.ab3@3432>   AND.l #$fffffffe,d1                                     ;new evenexit
00021FDA <AmiBlitz3.ab3@3433>   MOVE.l d1,destpointer
00021FDE <AmiBlitz3.ab3@3434>   MOVE.b debugmode(PC),D1
00021FE2 <AmiBlitz3.ab3@3435>    BEQ.b JL_0_4180
00021FE6 <AmiBlitz3.ab3@3436>    BSR.w debugstuff
00021FEA <AmiBlitz3.ab3@3437>   MOVE.w #$C300,D1
00021FF0 <AmiBlitz3.ab3@3438>    JSR Atokejsr
00021FF4 <AmiBlitz3.ab3@3439>    BSR.w debugstuff
00021FF8 <AmiBlitz3.ab3@3440>   MOVE.l eopcode(PC),D1
00021FFE <AmiBlitz3.ab3@3441>    JSR writelong
00022002 <AmiBlitz3.ab3@3442>   MOVE.l lastcontlink(PC),D1
00022006 <AmiBlitz3.ab3@3443>    BEQ.b JL_0_4180
00022008 <AmiBlitz3.ab3@3444>   MOVEA.l D1,A0
0002200C <AmiBlitz3.ab3@3445>   CLR.w $6(A0)
00022016 <AmiBlitz3.ab3@3451>   MOVE.l destpointer,endop                                ;where end goes...
0002201C <AmiBlitz3.ab3@3453>   TST.w blitzmode
00022020 <AmiBlitz3.ab3@3454>   BEQ.w JL_0_4198
00022024 <AmiBlitz3.ab3@3455>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
0002202A <AmiBlitz3.ab3@3458>   TST.w intsused
0002202E <AmiBlitz3.ab3@3459>   BEQ.b JL_0_41AA
00022032 <AmiBlitz3.ab3@3460>   MOVE.w #$C105,D1                                        ;interupts off!
00022038 <AmiBlitz3.ab3@3461>   JSR tokejsr2
0002203C <AmiBlitz3.ab3@3464>   BSR.w calcstatic
00022042 <AmiBlitz3.ab3@3465>   MOVE.w D4,numstatic
00022048 <AmiBlitz3.ab3@3466>   MOVE.l D3,staticdata
0002204C <AmiBlitz3.ab3@3467>    BSR.w calcmaxs
00022052 <AmiBlitz3.ab3@3469>   TST.l tokeslist
00022056 <AmiBlitz3.ab3@3470>    BEQ.b JL_0_41F8
0002205C <AmiBlitz3.ab3@3471>   MOVE.w gotocode,D1                                       ;jmp!
00022062 <AmiBlitz3.ab3@3472>    JSR writeword
0002206C <AmiBlitz3.ab3@3473>   MOVE.l destpointer,endjmpat
00022070 <AmiBlitz3.ab3@3474>    BSR.w addoff
00022076 <AmiBlitz3.ab3@3475>    JSR writelong                                           
0002207A <AmiBlitz3.ab3@3477>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00022080 <AmiBlitz3.ab3@3481>   TST.w dontwrite
00022084 <AmiBlitz3.ab3@3482>    BNE.b JL_0_41F8
00022088 <AmiBlitz3.ab3@3483>   MOVEA.l endjmpat(PC),A4
0002208E <AmiBlitz3.ab3@3484>   MOVE.l destpointer,(A4)
00022094 <AmiBlitz3.ab3@3487>   TST.b returncode
00022098 <AmiBlitz3.ab3@3488>   BEQ 'l2
0002209C <AmiBlitz3.ab3@3489>   MOVE.w #$2e80,d1
000220A2 <AmiBlitz3.ab3@3490>   JSR writeword
000220A8 <AmiBlitz3.ab3@3493>   JSR JL_0_B98A
000220AE <AmiBlitz3.ab3@3494>   TST.b returncode
000220B2 <AmiBlitz3.ab3@3495>   BEQ 'l3
000220B6 <AmiBlitz3.ab3@3496>   MOVE.w #$4e75,d1
000220BC <AmiBlitz3.ab3@3497>   JSR writeword
000220C0 <AmiBlitz3.ab3@3498> BRA 'l1
000220C6 <AmiBlitz3.ab3@3501>   MOVE.l #$70004E75,D1
000220CC <AmiBlitz3.ab3@3502>   JSR writelong                                            ;write moveq #0,d0:rts
000220D2 <AmiBlitz3.ab3@3505>   JSR JL_0_B73E
000220D6 <AmiBlitz3.ab3@3506>   BSR.w asmfixer
000220DA <AmiBlitz3.ab3@3507>   BSR.w close_compilewin
000220DE <AmiBlitz3.ab3@3508> BRA.w call_setpointernormal
000220E4 <AmiBlitz3.ab3@3512> JMP do_runerrson
000220E6 <AmiBlitz3.ab3@3516> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000220E8 <AmiBlitz3.ab3@3517>             Dc.b $4E,$40                                   ;TRAP  #00
000220EC <AmiBlitz3.ab3@3519> endjmpat:   Ds.l 1
000220F2 <AmiBlitz3.ab3@3523>   MOVEA.l newtype_string,A2
000220F8 <AmiBlitz3.ab3@3524>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000220FC <AmiBlitz3.ab3@3527>     CMPA.w #$0,A2
00022100 <AmiBlitz3.ab3@3528>      BEQ.w pointchk_done
00022104 <AmiBlitz3.ab3@3529>     CMP.l $4(A2),D0
00022108 <AmiBlitz3.ab3@3530>      BNE.w pointchk_next
00022110 <AmiBlitz3.ab3@3531>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00022114 <AmiBlitz3.ab3@3532> BRA.w notypeerr
00022116 <AmiBlitz3.ab3@3535>     MOVEA.l (A2),A2
0002211A <AmiBlitz3.ab3@3536> BRA.w pointchk_loop
0002211C <AmiBlitz3.ab3@3539> RTS
00022122 <AmiBlitz3.ab3@3543>   LEA labelbase,A2
00022124 <AmiBlitz3.ab3@3547>   MOVE.l (A2),D0                                           ;testlabels
00022128 <AmiBlitz3.ab3@3548>    BEQ.w errchx2_done
0002212A <AmiBlitz3.ab3@3549>   MOVEA.l D0,A2
0002212E <AmiBlitz3.ab3@3550>   MOVE.l $4(A2),D0
00022132 <AmiBlitz3.ab3@3551>   BTST #$0,D0
00022136 <AmiBlitz3.ab3@3552>    BNE.w errchx2_loop
0002213A <AmiBlitz3.ab3@3553>   MOVE.l $8(A2),D0
0002213E <AmiBlitz3.ab3@3554>    BNE.w errchx2_loop
00022146 <AmiBlitz3.ab3@3555>   MOVE.w $10(A2),linenumat+2
00022148 <AmiBlitz3.ab3@3556>   MOVEQ #0,d0
0002214C <AmiBlitz3.ab3@3557>   MOVE.b $12(a2),d0
00022154 <AmiBlitz3.ab3@3558>   MOVE.w 0(a2,d0),linenumat
0002215A <AmiBlitz3.ab3@3559> JMP nolaberr                                               ;label not found
00022160 <AmiBlitz3.ab3@3562>   MOVE.l concomsp,D0
00022166 <AmiBlitz3.ab3@3563>   CMP.l #concomstack,D0
0002216A <AmiBlitz3.ab3@3564>    BNE.w chxerr4
00022170 <AmiBlitz3.ab3@3565>   MOVE.w connest,D1
00022174 <AmiBlitz3.ab3@3566>    BNE.w chxerr4
00022176 <AmiBlitz3.ab3@3569>   MOVE.l D1,-(A7)
0002217C <AmiBlitz3.ab3@3570>   MOVE.l firstsel,D1
00022180 <AmiBlitz3.ab3@3571>    BNE.w errchx_err1
00022186 <AmiBlitz3.ab3@3572>   MOVE.l firstrep,D1
0002218A <AmiBlitz3.ab3@3573>    BNE.w errchx_err2
00022190 <AmiBlitz3.ab3@3574>   MOVE.w intstring,D1
00022194 <AmiBlitz3.ab3@3575>    BNE.w errchx_err3
00022198 <AmiBlitz3.ab3@3576>   MOVE.l 4(a7),d1
0002219E <AmiBlitz3.ab3@3577>   MOVE.w proceduremode,D1
000221A2 <AmiBlitz3.ab3@3578>    BNE.w errchx_err6
000221A8 <AmiBlitz3.ab3@3579>   MOVE.l firstiff,d1
000221AC <AmiBlitz3.ab3@3580>    BNE errchx_err5
000221B2 <AmiBlitz3.ab3@3581>   MOVE.l firstfor,D1
000221B6 <AmiBlitz3.ab3@3582>    BNE.w errchx_err7
000221B8 <AmiBlitz3.ab3@3583>   MOVE.l (A7)+,D1
000221BA <AmiBlitz3.ab3@3584> RTS
000221C4 <AmiBlitz3.ab3@3588>   MOVE.l sellineat,linenumat
000221CA <AmiBlitz3.ab3@3589> JMP selerrz
000221D4 <AmiBlitz3.ab3@3592>   MOVE.l replineat,linenumat
000221DA <AmiBlitz3.ab3@3593> JMP unterr3
000221E4 <AmiBlitz3.ab3@3596>   MOVE.l intlineat,linenumat
000221EA <AmiBlitz3.ab3@3597> JMP interr2
000221F4 <AmiBlitz3.ab3@3600>   MOVE.l iflineat,linenumat
000221FA <AmiBlitz3.ab3@3601> JMP noenderr
00022204 <AmiBlitz3.ab3@3604>   MOVE.l prolineat,linenumat
0002220A <AmiBlitz3.ab3@3605> JMP nopenderr
00022214 <AmiBlitz3.ab3@3608>   MOVE.l forlineat,linenumat
0002221A <AmiBlitz3.ab3@3609> JMP nonexterr
00022224 <AmiBlitz3.ab3@3612>   MOVE.l ciflineat,linenumat
0002222A <AmiBlitz3.ab3@3613> JMP nocenderr
00022234 <AmiBlitz3.ab3@3617>   MOVE.l data1,maxsat
00022236 <AmiBlitz3.ab3@3618>   MOVEQ.l #$00,D4
0002223C <AmiBlitz3.ab3@3619>   MOVEA.l libpointer,A2
00022240 <AmiBlitz3.ab3@3622>     CMPA.w #$0,A2
00022244 <AmiBlitz3.ab3@3623>      BEQ.w calcmaxs_done
00022248 <AmiBlitz3.ab3@3624>     TST.w $C(A2)
0002224C <AmiBlitz3.ab3@3625>      BPL.w calcmaxs_next
00022250 <AmiBlitz3.ab3@3626>     MOVE.l $12(A2),D0
00022254 <AmiBlitz3.ab3@3627>     TST.w -$2(A2,D0.L)
00022258 <AmiBlitz3.ab3@3628>      BEQ.w calcmaxs_next
0002225A <AmiBlitz3.ab3@3629>     ADDQ.w #1,D4
0002225E <AmiBlitz3.ab3@3630>     MOVE.w -$6(A2,D0.L),D1
00022262 <AmiBlitz3.ab3@3631>     BSR.w pokedata1
00022264 <AmiBlitz3.ab3@3632>     MOVEQ.l #$01,D1
00022268 <AmiBlitz3.ab3@3633>     MOVE.w -$2(A2,D0.L),D2
0002226A <AmiBlitz3.ab3@3634>     LSL.w D2,D1
0002226E <AmiBlitz3.ab3@3635>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00022272 <AmiBlitz3.ab3@3636>     BSR.w writedatalong
00022274 <AmiBlitz3.ab3@3639>     MOVEA.l (A2),A2
00022278 <AmiBlitz3.ab3@3640> BRA.w calcmaxs_loop
0002227E <AmiBlitz3.ab3@3643>   MOVE.w D4,maxsused
00022282 <AmiBlitz3.ab3@3644>    BEQ.w calcmaxs_done2
00022286 <AmiBlitz3.ab3@3645>   MOVE.w #$FFFA,D1                                         ;;use memlib
0002228A <AmiBlitz3.ab3@3646> BRA.w uselib
0002228C <AmiBlitz3.ab3@3649> RTS
00022292 <AmiBlitz3.ab3@3653>    MOVE.l a7,stackaddr
00022296 <AmiBlitz3.ab3@3654>    BSR.w compile_term
0002229A <AmiBlitz3.ab3@3655>    BSR.w reget
0002229E <AmiBlitz3.ab3@3656>    BNE.w illeolerr
000222A4 <AmiBlitz3.ab3@3657>    TST.w dontwrite
000222A8 <AmiBlitz3.ab3@3658>    BNE 'l1
000222AE <AmiBlitz3.ab3@3659>    TST.l stacktrack
000222B2 <AmiBlitz3.ab3@3660>    BNE errormsg_stack
000222B6 <AmiBlitz3.ab3@3663>    CMP.w #-$7FDE,D0
000222BA <AmiBlitz3.ab3@3664>    BNE.w compile_line_notelse
000222C0 <AmiBlitz3.ab3@3665>    JSR do_else2
000222C4 <AmiBlitz3.ab3@3666> BRA.w compile_line
000222C6 <AmiBlitz3.ab3@3669>   TST.w D0
000222CA <AmiBlitz3.ab3@3670>   BNE.w compile_line
000222D0 <AmiBlitz3.ab3@3675>   MOVE.l firstiff,D0
000222D4 <AmiBlitz3.ab3@3676>    BEQ.w compile_line_done
000222D6 <AmiBlitz3.ab3@3677>   MOVEA.l D0,A0
000222DA <AmiBlitz3.ab3@3678>   MOVE.w $C(A0),D1
000222DE <AmiBlitz3.ab3@3679>    BPL.w compile_line_done
000222E2 <AmiBlitz3.ab3@3683>   BCLR #$F,D1
000222E8 <AmiBlitz3.ab3@3684>    JSR AJL_0_D7B8
000222EE <AmiBlitz3.ab3@3685>    JSR AJL_0_D81C
000222F2 <AmiBlitz3.ab3@3686> BRA.w compile_line_unthen
000222F4 <AmiBlitz3.ab3@3689> RTS
000222FA <AmiBlitz3.ab3@3693>   LEA lastgloballabel,A0
000222FC <AmiBlitz3.ab3@3694>   TST.b (A0)
00022300 <AmiBlitz3.ab3@3695>   BEQ.w nolocerr
00022306 <AmiBlitz3.ab3@3696>   LEA ptr_parameterstore,A1
00022308 <AmiBlitz3.ab3@3697>   MOVEQ.l #$00,D2
0002230A <AmiBlitz3.ab3@3700>   ADDQ.w #1,D2
0002230C <AmiBlitz3.ab3@3701>   MOVE.b (A0)+,(A1)+
00022310 <AmiBlitz3.ab3@3702>    BNE.w createlab_loop
00022316 <AmiBlitz3.ab3@3703>   MOVE.b #$27,-$1(A1)
00022318 <AmiBlitz3.ab3@3704>   MOVE.w D2,-(A7)
0002231E <AmiBlitz3.ab3@3705>    JSR makename4
00022320 <AmiBlitz3.ab3@3706>   CMP.w (A7)+,D2
00022324 <AmiBlitz3.ab3@3707>    BEQ.w syntaxerr
00022326 <AmiBlitz3.ab3@3708>    TST.w d0
0002232A <AmiBlitz3.ab3@3709>    BPL createlab_done
00022332 <AmiBlitz3.ab3@3710>    MOVE.w #$3a,lastchar
00022334 <AmiBlitz3.ab3@3711>    SUBQ.l #2,a5
00022336 <AmiBlitz3.ab3@3714> RTS
00022340 <AmiBlitz3.ab3@3718>   MOVE.l #forthstack,forthsp
0002234A <AmiBlitz3.ab3@3719>   MOVE.l #precstack,precsp
0002234C <AmiBlitz3.ab3@3720> RTS
0002234E <AmiBlitz3.ab3@3727>   MOVEQ.l #$00,D4
00022378 <AmiBlitz3.ab3@3730>   !basic
000223BA <AmiBlitz3.ab3@3731> 
000223CA <AmiBlitz3.ab3@3733>   If (c_abort = 1)           ; check if set
000223CC <AmiBlitz3.ab3@3734>     MOVEQ.l #-$01,d4
000223D2 <AmiBlitz3.ab3@3735>     MOVE.w D4,stopit
000223F0 <AmiBlitz3.ab3@3736>     !asm
000223F4 <AmiBlitz3.ab3@3737>     BRA chkrealstop__skip
00022412 <AmiBlitz3.ab3@3739>   !asm
00022414 <AmiBlitz3.ab3@3740>   MOVEQ.l #$00,D6
00022416 <AmiBlitz3.ab3@3741>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022418 <AmiBlitz3.ab3@3745> RTS
0002241C <AmiBlitz3.ab3@3749>   MOVE.w stopit(PC),D0
00022420 <AmiBlitz3.ab3@3750>   BEQ chkstop__chk
00022426 <AmiBlitz3.ab3@3751>   SUBQ.w #1,stopit
00022428 <AmiBlitz3.ab3@3755> RTS
00022430 <AmiBlitz3.ab3@3758>   MOVE.w #2000,stopit
00022434 <AmiBlitz3.ab3@3759>   BSR.w chkrealstop
00022438 <AmiBlitz3.ab3@3760>   BEQ.b chkstop__rts
0002243C <AmiBlitz3.ab3@3762>   BSR.w close_compilewin
00022440 <AmiBlitz3.ab3@3763>   BSR.w call_setpointernormal
00022446 <AmiBlitz3.ab3@3765>   MOVEA.l errstack,A7
0002244C <AmiBlitz3.ab3@3766>   MOVEA.l errcont,A0
00022454 <AmiBlitz3.ab3@3767>   MOVE.w #-1,anyerrs
00022456 <AmiBlitz3.ab3@3768> JMP (A0)
0002245A <AmiBlitz3.ab3@3771> d_pc:           Ds.l 1
0002245E <AmiBlitz3.ab3@3772> d_bigpc:        Ds.l 1
00022460 <AmiBlitz3.ab3@3773> d_nomemleft:    Ds.w 1
00022464 <AmiBlitz3.ab3@3774> cont_pc:        Ds.l 1
00022468 <AmiBlitz3.ab3@3775> cont_pc2:       Ds.l 1
0002246C <AmiBlitz3.ab3@3776> lastcontlink:   Ds.l 1
00022470 <AmiBlitz3.ab3@3780>   ORI.w #$4E40,D1
00022474 <AmiBlitz3.ab3@3781> BRA.w JUMP_writeword
0002247A <AmiBlitz3.ab3@3785>   TST.b debugmode
0002247E <AmiBlitz3.ab3@3786>   BEQ.w debugstuff__rts
00022484 <AmiBlitz3.ab3@3793>   TST.w dirmode                                            ;or while in direct mode...
00022488 <AmiBlitz3.ab3@3794>    BNE debugstuff__rts
00022492 <AmiBlitz3.ab3@3795>   MOVE.l destpointer,d_pc
0002249C <AmiBlitz3.ab3@3796>   MOVE.l bigpc,d_bigpc
000224A6 <AmiBlitz3.ab3@3797>   MOVE.w dontwrite,d_nomemleft
000224AA <AmiBlitz3.ab3@3798>   MOVEM.l D0-D1,-(A7)
000224AC <AmiBlitz3.ab3@3799>   MOVEQ.l #$01,D1
000224B0 <AmiBlitz3.ab3@3800>    BSR.w writetrap                                         ;write the adress to sourceline
000224B6 <AmiBlitz3.ab3@3804>    MOVE.l destpointer,D0
000224BC <AmiBlitz3.ab3@3805>   MOVE.l cont_pc,D1
000224C2 <AmiBlitz3.ab3@3806>   MOVE.l D0,cont_pc
000224C8 <AmiBlitz3.ab3@3807>   MOVE.l D1,cont_pc2
000224CC <AmiBlitz3.ab3@3808>    BEQ.b debugstuff__skip
000224D2 <AmiBlitz3.ab3@3809>   TST.w dontwrite
000224D6 <AmiBlitz3.ab3@3810>    BNE.b debugstuff__skip
000224D8 <AmiBlitz3.ab3@3811>   MOVEA.l D1,A4
000224DA <AmiBlitz3.ab3@3812>   SUB.l A4,D0
000224DE <AmiBlitz3.ab3@3813>   MOVE.w D0,$6(A4)
000224E4 <AmiBlitz3.ab3@3814>   MOVE.l A4,lastcontlink
000224EA <AmiBlitz3.ab3@3817>   TST.w ininclude
000224F0 <AmiBlitz3.ab3@3819>   TST.w makeexec
000224F4 <AmiBlitz3.ab3@3820>   BEQ 'l1
000224FA <AmiBlitz3.ab3@3821>   TST.w exdebug
000224FE <AmiBlitz3.ab3@3822>   BEQ 'noinc
00022502 <AmiBlitz3.ab3@3825>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022508 <AmiBlitz3.ab3@3826>   MOVE.l data1,d1
0002250E <AmiBlitz3.ab3@3827>   TST.b firsttime
00022512 <AmiBlitz3.ab3@3828>   BNE 'nofirst
0002251A <AmiBlitz3.ab3@3829>   MOVE.b #1,firsttime
00022520 <AmiBlitz3.ab3@3830>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022526 <AmiBlitz3.ab3@3831>   JSR writedatalong
0002252C <AmiBlitz3.ab3@3832>   MOVE.l #"AmiB",d1
00022532 <AmiBlitz3.ab3@3833>   JSR writedatalong
00022538 <AmiBlitz3.ab3@3834>   MOVE.l destbufferstart,d1
0002253E <AmiBlitz3.ab3@3835>   JSR writedatalong
00022544 <AmiBlitz3.ab3@3836>   TST.w dontwrite
00022548 <AmiBlitz3.ab3@3837>   BNE 'nohunk
0002254E <AmiBlitz3.ab3@3838>   MOVE.l data1,d1
00022550 <AmiBlitz3.ab3@3839>   SUBQ.l #4,d1
00022556 <AmiBlitz3.ab3@3840>   SUB.l destbufferstart,d1
00022558 <AmiBlitz3.ab3@3841>   MOVE.l d1,d2
0002255E <AmiBlitz3.ab3@3842>   JSR addhunkoffset
00022564 <AmiBlitz3.ab3@3845>   MOVE.l destpointer,d2
0002256A <AmiBlitz3.ab3@3846>   MOVE.l data1,d1
00022570 <AmiBlitz3.ab3@3849>   MOVE.l destpointer,d2
00022572 <AmiBlitz3.ab3@3850>   MOVE.l d1,d3
00022578 <AmiBlitz3.ab3@3851>   SUB.l destbufferstart,d1
0002257E <AmiBlitz3.ab3@3852>   OR.l #$80000000,d1
00022584 <AmiBlitz3.ab3@3853>   JSR writelong
0002258A <AmiBlitz3.ab3@3854>   TST.w inmacro
0002258E <AmiBlitz3.ab3@3855>   BEQ 'sc1
00022594 <AmiBlitz3.ab3@3856>   MOVE.l myline,a0
00022598 <AmiBlitz3.ab3@3858> BRA 'inc2
0002259E <AmiBlitz3.ab3@3860>  'sc1  TST.w ininclude
000225A2 <AmiBlitz3.ab3@3861>   BEQ 'inc
000225A8 <AmiBlitz3.ab3@3862>   MOVE.l includesourceline,a0
000225AC <AmiBlitz3.ab3@3863> BRA 'inc2
000225B2 <AmiBlitz3.ab3@3866>   MOVE.l sourceline,a0
000225B6 <AmiBlitz3.ab3@3867>   LEA 9(a0),a0
000225B8 <AmiBlitz3.ab3@3870>   MOVE.l d1,d2
000225BA <AmiBlitz3.ab3@3871>   MOVE.l A5,D1
000225BC <AmiBlitz3.ab3@3872>   SUB.l a0,D1
000225C2 <AmiBlitz3.ab3@3873>   ADD.l #9,d1
000225C6 <AmiBlitz3.ab3@3874>   BSR.w JUMP_writeword
000225CC <AmiBlitz3.ab3@3875>   CMP.l #9,d1
000225D0 <AmiBlitz3.ab3@3876>   BEQ 'pos1
000225D6 <AmiBlitz3.ab3@3877>   TST.w dontwrite
000225DA <AmiBlitz3.ab3@3878>   BNE 'nopad
000225E0 <AmiBlitz3.ab3@3879>   MOVE.l lastsourceline,d1
000225E4 <AmiBlitz3.ab3@3880>   MOVE.l d1,-6(a4)
000225E8 <AmiBlitz3.ab3@3881> BRA 'nopad
000225EE <AmiBlitz3.ab3@3884>   MOVE.l d2,lastsourceline
000225F8 <AmiBlitz3.ab3@3885>    MOVE.l destpointer,lastdestpointer
000225FA <AmiBlitz3.ab3@3886>    MOVEQ #0,d1
00022600 <AmiBlitz3.ab3@3887>   MOVE.l data1,d2
00022606 <AmiBlitz3.ab3@3888>   SUB.l destbufferstart,d2
0002260C <AmiBlitz3.ab3@3889>   JSR writedatalong
00022612 <AmiBlitz3.ab3@3890>   TST.w dontwrite
00022616 <AmiBlitz3.ab3@3891>   BNE 'no2
0002261C <AmiBlitz3.ab3@3892>   JSR addhunkoffset
00022622 <AmiBlitz3.ab3@3895>   MOVE.l data1,d2
00022628 <AmiBlitz3.ab3@3896>   SUB.l destbufferstart,d2
0002262E <AmiBlitz3.ab3@3897>   JSR writedatalong
00022634 <AmiBlitz3.ab3@3898>   TST.w dontwrite
00022638 <AmiBlitz3.ab3@3899>   BNE 'no
0002263E <AmiBlitz3.ab3@3900>   JSR addhunkoffset
00022644 <AmiBlitz3.ab3@3901>   MOVE.l lastwritedat,a1
0002264A <AmiBlitz3.ab3@3902>   CMP.l #0,a1
0002264E <AmiBlitz3.ab3@3903>   BEQ 'no
00022650 <AmiBlitz3.ab3@3904>   MOVE.l d3,(a1)
00022658 <AmiBlitz3.ab3@3905>   MOVE.l prevwritedat,4(a1)
00022662 <AmiBlitz3.ab3@3906>   MOVE.l lastwritedat,prevwritedat
00022668 <AmiBlitz3.ab3@3909>   MOVE.l d3,lastwritedat
0002266A <AmiBlitz3.ab3@3910>   MOVEQ #4,d1
0002266E <AmiBlitz3.ab3@3911>   BSR pokedata1b
00022670 <AmiBlitz3.ab3@3914>   MOVE.b (a0)+,d1
00022674 <AmiBlitz3.ab3@3915>   BEQ 'done
00022678 <AmiBlitz3.ab3@3916>   BSR pokedata1b
0002267C <AmiBlitz3.ab3@3917> BRA 'loop
0002267E <AmiBlitz3.ab3@3920>   MOVEQ #0,d1
00022682 <AmiBlitz3.ab3@3921>   BSR pokedata1b
00022688 <AmiBlitz3.ab3@3922>   MOVE.l data1,d1
0002268C <AmiBlitz3.ab3@3923>   BTST #0,d1
00022690 <AmiBlitz3.ab3@3924>   BEQ 'nopad
00022692 <AmiBlitz3.ab3@3925>   MOVEQ #0,d1
00022696 <AmiBlitz3.ab3@3926>   BSR pokedata1b
0002269A <AmiBlitz3.ab3@3929>   MOVEM.l (a7)+,a0-a1/d2/d3
0002269E <AmiBlitz3.ab3@3930> BRA 'noinc2
000226A4 <AmiBlitz3.ab3@3933>   MOVE.l sourceline,D1
000226AA <AmiBlitz3.ab3@3935>   JSR writelong
000226AC <AmiBlitz3.ab3@3936>   MOVE.l A5,D1
000226B2 <AmiBlitz3.ab3@3937>   SUB.l sourceline,D1
000226B8 <AmiBlitz3.ab3@3939>   JSR writeword
000226BA <AmiBlitz3.ab3@3942>   MOVEQ.l #$00,D1
000226C0 <AmiBlitz3.ab3@3943>   JSR writeword                                            ; was: BSR.w writeword
000226C4 <AmiBlitz3.ab3@3944>   MOVEM.l (A7)+,D0-D1
000226C6 <AmiBlitz3.ab3@3947> RTS
000226CC <AmiBlitz3.ab3@3951>   TST.b debugmode                                          ;extern debug
000226D0 <AmiBlitz3.ab3@3952>    BEQ.b undodebug__rts
000226D6 <AmiBlitz3.ab3@3953>   TST.b dirmode
000226DA <AmiBlitz3.ab3@3954>   BNE undodebug__rts
000226E4 <AmiBlitz3.ab3@3959>   MOVE.w d_nomemleft,dontwrite
000226EE <AmiBlitz3.ab3@3960>   MOVE.l d_bigpc,bigpc
000226F8 <AmiBlitz3.ab3@3961>   MOVE.l d_pc,destpointer
00022702 <AmiBlitz3.ab3@3962>   MOVE.l cont_pc2,cont_pc
00022704 <AmiBlitz3.ab3@3965> RTS
0002270E <AmiBlitz3.ab3@3969>   MOVE.l #forthstack,forthsp
00022718 <AmiBlitz3.ab3@3970>   MOVE.l #precstack,precsp
0002271E <AmiBlitz3.ab3@3971>   CLR.w regnum
00022724 <AmiBlitz3.ab3@3972>   CLR.w nonew
0002272A <AmiBlitz3.ab3@3973>   CLR.w sbasegot
00022734 <AmiBlitz3.ab3@3974>   MOVE.w varcodelen,oldvcodelen
0002273A <AmiBlitz3.ab3@3975>   CLR.w varcodelen
00022742 <AmiBlitz3.ab3@3976>   MOVE.w #-1,lasta6
00022744 <AmiBlitz3.ab3@3977> RTS
0002274A <AmiBlitz3.ab3@3981>   TST.w linemode
0002274E <AmiBlitz3.ab3@3982>   BMI.b smode__skip
00022752 <AmiBlitz3.ab3@3983>   BSR.w undodebug
00022758 <AmiBlitz3.ab3@3984>   MOVE.w linemode,D1
0002275A <AmiBlitz3.ab3@3985>   ADDQ.w #4,A7
0002275C <AmiBlitz3.ab3@3986>   LSL.w #2,D1
00022762 <AmiBlitz3.ab3@3987>   LEA modetable,A0
00022766 <AmiBlitz3.ab3@3988>   MOVEA.l $0(A0,D1.W),A0
0002276A <AmiBlitz3.ab3@3989>   BSR.w reget
0002276C <AmiBlitz3.ab3@3992> JMP (A0)                                                   ;jumptokenroutine
0002276E <AmiBlitz3.ab3@3995> RTS
00022776 <AmiBlitz3.ab3@4000>   MOVE.w #0,leaa0a0+2
0002277C <AmiBlitz3.ab3@4001>   CLR.b nowdeclare
00022782 <AmiBlitz3.ab3@4002>   CLR.b notypecheck
00022788 <AmiBlitz3.ab3@4003>   CLR.l lasttoken
0002278E <AmiBlitz3.ab3@4004>   CLR.b doimmediate
00022794 <AmiBlitz3.ab3@4005>   CLR.w vartype
0002279A <AmiBlitz3.ab3@4006>   CLR.w regnumfunc
000227A0 <AmiBlitz3.ab3@4007>   CLR.b optistring
000227A6 <AmiBlitz3.ab3@4008>   CLR.b iniffcommand
000227AC <AmiBlitz3.ab3@4009>   CLR.w instringon  ; new
000227B2 <AmiBlitz3.ab3@4010>   CLR.b funccall
000227B8 <AmiBlitz3.ab3@4011>   CLR.l currentfunccall
000227BE <AmiBlitz3.ab3@4012>   CLR.l leftsidetype
000227C4 <AmiBlitz3.ab3@4013>   CLR.l rightsidetype
000227CA <AmiBlitz3.ab3@4014>   CLR.w leftsideflagmask
000227D0 <AmiBlitz3.ab3@4015>   CLR.w rightsideflagmask
000227D6 <AmiBlitz3.ab3@4016>   CLR.b peekaddrsize
000227DC <AmiBlitz3.ab3@4017>   CLR.b blitzparloop
000227E2 <AmiBlitz3.ab3@4018>   CLR.b funcparloop
000227E8 <AmiBlitz3.ab3@4019>   CLR.w parnum           ;7.2014
000227EE <AmiBlitz3.ab3@4020>   TST.b debugmode
000227F2 <AmiBlitz3.ab3@4021>    BEQ 'fpu
000227FC <AmiBlitz3.ab3@4027>   MOVE.b fpu,iee
00022800 <AmiBlitz3.ab3@4028>   MOVE.w stopit(PC),D0
00022804 <AmiBlitz3.ab3@4029>   BNE chkstop_chkb
00022808 <AmiBlitz3.ab3@4030>   BSR.w chkstop                                          ; message here
0002280E <AmiBlitz3.ab3@4033>   SUBQ.w #1,stopit
00022812 <AmiBlitz3.ab3@4036>   BSR.w findmacro                                          ;macro
00022818 <AmiBlitz3.ab3@4090>   TST.b debugmode
0002281C <AmiBlitz3.ab3@4091>    BEQ.s 'l10
00022822 <AmiBlitz3.ab3@4092>   TST.b exdebug
00022826 <AmiBlitz3.ab3@4093>   BEQ 'l10a
00022828 <AmiBlitz3.ab3@4094>   MOVE.w (a5),d0
0002282C <AmiBlitz3.ab3@4095>   CMP.w #$8025,d0
00022830 <AmiBlitz3.ab3@4096>    BEQ 'l10
00022834 <AmiBlitz3.ab3@4099>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022838 <AmiBlitz3.ab3@4103>   BSR.w get1bytemain                                       ;gettokenmain
0002283C <AmiBlitz3.ab3@4104>    BEQ.w undodebug
00022840 <AmiBlitz3.ab3@4105>   CMP.w #$002b,d0                                            ;check for + cast sign
00022844 <AmiBlitz3.ab3@4106>     BNE 'lb2
00022848 <AmiBlitz3.ab3@4107>     BSR.w get1bytemain
00022850 <AmiBlitz3.ab3@4108>     MOVE.b #1,notypecheck
0002285A <AmiBlitz3.ab3@4116>   MOVE.l #forthstack,forthsp
00022864 <AmiBlitz3.ab3@4117>   MOVE.l #precstack,precsp
0002286A <AmiBlitz3.ab3@4118>   CLR.w regnum
00022870 <AmiBlitz3.ab3@4119>   CLR.w nonew
00022876 <AmiBlitz3.ab3@4120>   CLR.w sbasegot
00022880 <AmiBlitz3.ab3@4121>   MOVE.w varcodelen,oldvcodelen
00022886 <AmiBlitz3.ab3@4123>   CLR.w varcodelen
0002288E <AmiBlitz3.ab3@4124>   MOVE.w #$FFFF,lasta6
00022892 <AmiBlitz3.ab3@4126>   BSR.w smode
00022894 <AmiBlitz3.ab3@4127>   TST.w D0
00022898 <AmiBlitz3.ab3@4128>   BMI.w get_tokencode
0002289C <AmiBlitz3.ab3@4129>   CMP.w #$2E,D0
000228A0 <AmiBlitz3.ab3@4130>    BEQ.w JL_0_4644                                         ;shortlist
000228A4 <AmiBlitz3.ab3@4131>   CMP.w #"#",D0
000228A8 <AmiBlitz3.ab3@4132>    BEQ.w JL_0_4718                                         ;constant found
000228AC <AmiBlitz3.ab3@4133>   CMP.w #$27,D0
000228B0 <AmiBlitz3.ab3@4134>    BEQ.w JL_0_4638                                         ;local label
000228B6 <AmiBlitz3.ab3@4135>   MOVE.l A5,letstart
000228BC <AmiBlitz3.ab3@4136>   JSR getparameter
000228C0 <AmiBlitz3.ab3@4137>   BSR.w reget
000228C4 <AmiBlitz3.ab3@4138>    BEQ.w JL_0_4658                                         ;label found
000228C8 <AmiBlitz3.ab3@4139>   CMP.w #$7B,D0
000228CC <AmiBlitz3.ab3@4140>    BEQ.w JL_0_475C
000228CE <AmiBlitz3.ab3@4141>   TST.w d0
000228D2 <AmiBlitz3.ab3@4142>    BPL 'll1
000228D8 <AmiBlitz3.ab3@4143>   TST.b newsyntax
000228DC <AmiBlitz3.ab3@4144>    BEQ 'll1
000228E2 <AmiBlitz3.ab3@4145>   LEA allowtab,a0
000228E4 <AmiBlitz3.ab3@4146>   MOVEQ #0,d1
000228E6 <AmiBlitz3.ab3@4147>   MOVE.b d0,d1
000228EA <AmiBlitz3.ab3@4148>   TST.b 0(a0,d1.w)
000228EE <AmiBlitz3.ab3@4149>    BNE 'll1
000228F0 <AmiBlitz3.ab3@4150>   SUBQ.l #2,a5
000228F8 <AmiBlitz3.ab3@4151>   MOVE.w #":",lastchar                                     ;no doublepoint
000228FC <AmiBlitz3.ab3@4152> BRA JL_0_4658
00022904 <AmiBlitz3.ab3@4155>   CMP.l #"equ ",-1(a5)
00022908 <AmiBlitz3.ab3@4156>    BEQ 'll4
00022910 <AmiBlitz3.ab3@4157>   CMP.l #"EQU ",-1(a5)
00022914 <AmiBlitz3.ab3@4158>    BNE 'll2
00022916 <AmiBlitz3.ab3@4161>   ADDQ.l #2,a5
0002291A <AmiBlitz3.ab3@4162>   BSR.w findlabel2
0002291E <AmiBlitz3.ab3@4163>   BEQ.w 'lf1
00022922 <AmiBlitz3.ab3@4164>   BSR.w addlabelhash
0002292A <AmiBlitz3.ab3@4165>   MOVE.l #$1,$4(A2)
00022932 <AmiBlitz3.ab3@4168>   CMPI.l #$1,$4(A2)
00022936 <AmiBlitz3.ab3@4169>    BNE.w illconerr
0002293A <AmiBlitz3.ab3@4170>   BSR get1bytemain
0002293C <AmiBlitz3.ab3@4171>   MOVE.l A2,-(A7)
0002293E <AmiBlitz3.ab3@4182>   SUBQ.l #1,a5
00022940 <AmiBlitz3.ab3@4185>   SUBQ.l #1,a5
00022946 <AmiBlitz3.ab3@4186>   JSR AJL_0_BF6E
00022948 <AmiBlitz3.ab3@4187>   MOVEA.l (A7)+,A2
0002294C <AmiBlitz3.ab3@4188>   MOVE.l D3,$8(A2)
0002294E <AmiBlitz3.ab3@4189>   RTS
00022952 <AmiBlitz3.ab3@4190>   BSR get1bytemain
0002295A <AmiBlitz3.ab3@4193>   CMP.l #"SET ",-1(a5)
0002295E <AmiBlitz3.ab3@4194>   BNE 'll3
00022962 <AmiBlitz3.ab3@4195> BRA 'll4
00022968 <AmiBlitz3.ab3@4198> JMP AJL_0_DEA6
0002296C <AmiBlitz3.ab3@4201>   CMP.w #-$7FDE,D0
00022970 <AmiBlitz3.ab3@4202>   BEQ.w get_tokencode
00022974 <AmiBlitz3.ab3@4203> BRA.w undodebug
00022978 <AmiBlitz3.ab3@4206>   BSR.w undodebug
0002297C <AmiBlitz3.ab3@4207>   BSR.w createlab
00022980 <AmiBlitz3.ab3@4208> BRA.w JL_0_466E
00022984 <AmiBlitz3.ab3@4211>   BSR.w get1bytemain
00022988 <AmiBlitz3.ab3@4212>    BEQ.w JL_0_462C
0002298C <AmiBlitz3.ab3@4213>   CMP.w #"'",D0
00022990 <AmiBlitz3.ab3@4214>    BEQ.w JL_0_4638
00022994 <AmiBlitz3.ab3@4215>    BSR.w makename2
00022996 <AmiBlitz3.ab3@4216>    TST.w d0
0002299A <AmiBlitz3.ab3@4217>    BPL 'll1
0002299C <AmiBlitz3.ab3@4218>    SUBQ.l #2,a5
000229A4 <AmiBlitz3.ab3@4219>    MOVE.w #":",lastchar
000229A8 <AmiBlitz3.ab3@4220> BRA JL_0_4658                                              ;????
000229AC <AmiBlitz3.ab3@4224>   BSR.w undodebug
000229B2 <AmiBlitz3.ab3@4225>   LEA ptr_parameterstore,A0
000229B8 <AmiBlitz3.ab3@4226>   LEA lastgloballabel,A1
000229BA <AmiBlitz3.ab3@4229>   MOVE.b (A0)+,(A1)+
000229BE <AmiBlitz3.ab3@4230>    BNE.w JL_0_4668
000229C2 <AmiBlitz3.ab3@4233>   BSR.w findlabel2
000229C6 <AmiBlitz3.ab3@4234>    BEQ.w JL_0_4698
000229CA <AmiBlitz3.ab3@4235>    BSR.w addlabelhash
000229CE <AmiBlitz3.ab3@4238>   CLR.l $4(A2)
000229D6 <AmiBlitz3.ab3@4239>   MOVE.l destpointer,$8(A2)
000229DE <AmiBlitz3.ab3@4242>   MOVE.w procnum,$10(A2)
000229E0 <AmiBlitz3.ab3@4243> RTS
000229E4 <AmiBlitz3.ab3@4247>   MOVE.l $4(A2),D0
000229E8 <AmiBlitz3.ab3@4248>   BTST #$0,D0
000229EC <AmiBlitz3.ab3@4249>    BNE.w illlaberr
000229F2 <AmiBlitz3.ab3@4250>   TST.w pass
000229F6 <AmiBlitz3.ab3@4252>   MOVE.l $8(A2),D0
000229FA <AmiBlitz3.ab3@4253>    BNE.w duplaberr
00022A02 <AmiBlitz3.ab3@4254>   MOVE.w procnum,$10(A2)
00022A06 <AmiBlitz3.ab3@4255>   MOVEA.l $4(A2),A3
00022A0C <AmiBlitz3.ab3@4256>   MOVEA.l _execbase,A6
00022A10 <AmiBlitz3.ab3@4259>   CMPA.w #$0,A3
00022A14 <AmiBlitz3.ab3@4260>    BEQ.w JL_0_467A
00022A18 <AmiBlitz3.ab3@4261>     MOVE.l $4(A2),D1
00022A1C <AmiBlitz3.ab3@4262>     BTST #$0,D1
00022A20 <AmiBlitz3.ab3@4263>     BNE.w illlaberr
00022A24 <AmiBlitz3.ab3@4264>   MOVE.w $8(A3),D1
00022A28 <AmiBlitz3.ab3@4265>   CMP.w $10(A2),D1
00022A2C <AmiBlitz3.ab3@4266>    BEQ.w JL_0_46DC
00022A32 <AmiBlitz3.ab3@4267>    TST.b newsyntax
00022A36 <AmiBlitz3.ab3@4268>    BEQ 'l1
00022A3A <AmiBlitz3.ab3@4269> BRA.w JL_0_46DC                                            ;label context out of range fix
00022A42 <AmiBlitz3.ab3@4274>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022A46 <AmiBlitz3.ab3@4275> BRA.w referr
00022A4C <AmiBlitz3.ab3@4278>   MOVE.w dontwrite,D1
00022A50 <AmiBlitz3.ab3@4279>    BNE.w JL_0_4706
00022A54 <AmiBlitz3.ab3@4280>   MOVEA.l $4(A3),A1
00022A5A <AmiBlitz3.ab3@4281>   BTST #$0,$7(A3)
00022A5E <AmiBlitz3.ab3@4282>    BEQ.w JL_0_4700
00022A60 <AmiBlitz3.ab3@4283>   SUBQ.w #1,A1
00022A66 <AmiBlitz3.ab3@4284>   MOVE.l data2,(A1)
00022A6A <AmiBlitz3.ab3@4285> BRA.w JL_0_4706
00022A70 <AmiBlitz3.ab3@4288>   MOVE.l destpointer,(A1)
00022A72 <AmiBlitz3.ab3@4291>   MOVEA.l A3,A1
00022A74 <AmiBlitz3.ab3@4292>   MOVEA.l (A3),A3
00022A78 <AmiBlitz3.ab3@4293>   MOVE.l A3,$4(A2)
00022A7A <AmiBlitz3.ab3@4294>   MOVEQ.l #$0C+2,D0
00022A80 <AmiBlitz3.ab3@4295>   MOVE.l mempool,a0
00022A86 <AmiBlitz3.ab3@4296>   MOVEA.l _execbase,A6
00022A8A <AmiBlitz3.ab3@4297>   JSR _FreePooled(A6)
00022A8E <AmiBlitz3.ab3@4298> BRA.w JL_0_46BC
00022A98 <AmiBlitz3.ab3@4303>    MOVE.l #forthstack,forthsp
00022AA2 <AmiBlitz3.ab3@4304>   MOVE.l #precstack,precsp
00022AA6 <AmiBlitz3.ab3@4305>    BSR.w getparameter2
00022AAA <AmiBlitz3.ab3@4308>   BSR.w findlabel2
00022AAE <AmiBlitz3.ab3@4309>    BEQ.w JL_0_4738
00022AB2 <AmiBlitz3.ab3@4310>    BSR.w addlabelhash
00022ABA <AmiBlitz3.ab3@4311>   MOVE.l #$1,$4(A2)
00022ABE <AmiBlitz3.ab3@4312> BRA.w JL_0_4744
00022AC6 <AmiBlitz3.ab3@4315>   CMPI.l #$1,$4(A2)
00022ACA <AmiBlitz3.ab3@4316>    BNE.w illconerr
00022ACE <AmiBlitz3.ab3@4325>   CMP.w #$3D,D0
00022AD2 <AmiBlitz3.ab3@4326>   BEQ.w JL_0_474E
00022AD4 <AmiBlitz3.ab3@4327> RTS
00022AD6 <AmiBlitz3.ab3@4331>   MOVE.l A2,-(A7)
00022ADC <AmiBlitz3.ab3@4332>   JSR AJL_0_BF6E
00022ADE <AmiBlitz3.ab3@4333>   MOVEA.l (A7)+,A2
00022AE2 <AmiBlitz3.ab3@4334>   MOVE.l D3,$8(A2)                                         ;store constant
00022AEA <AmiBlitz3.ab3@4335>   CMP.w #$0a,lastchar
00022AEE <AmiBlitz3.ab3@4336>   BNE 'l1
00022AF6 <AmiBlitz3.ab3@4337>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022AF8 <AmiBlitz3.ab3@4340> RTS
00022AFC <AmiBlitz3.ab3@4343>   BSR.w findproc                                           ;write statement call
00022B00 <AmiBlitz3.ab3@4344>   BEQ _state
00022B06 <AmiBlitz3.ab3@4345>   TST.l unusedfunc
00022B0A <AmiBlitz3.ab3@4346>   BEQ noprocerr
00022B10 <AmiBlitz3.ab3@4348>   JSR gotoendsource
00022B14 <AmiBlitz3.ab3@4351>   TST.b $5(A2)
00022B1A <AmiBlitz3.ab3@4353>   MOVE.l a2,currentfunccall
00022B22 <AmiBlitz3.ab3@4354>   MOVE.b #1,funccall
00022B28 <AmiBlitz3.ab3@4355>   MOVE.b #1,isfunc(a2)
00022B2C <AmiBlitz3.ab3@4356>   MOVE.l $E(A2),-(A7)
00022B2E <AmiBlitz3.ab3@4357>   MOVEQ.l #$00,D0
00022B32 <AmiBlitz3.ab3@4358>   MOVE.b $4(A2),D0
00022B38 <AmiBlitz3.ab3@4359>   MOVE.l d0,parnumtemp
00022B3C <AmiBlitz3.ab3@4360>   BEQ.w JL_0_4786
00022B40 <AmiBlitz3.ab3@4361>   TST.b $20(a2)                                            ;increase if morepar
00022B44 <AmiBlitz3.ab3@4362>   BNE 'no0par
00022B46 <AmiBlitz3.ab3@4363>   MOVE.l a5,a4
00022B4A <AmiBlitz3.ab3@4366>   CMP.b #$20,(a4)+
00022B4E <AmiBlitz3.ab3@4367>   BEQ 'l1
00022B54 <AmiBlitz3.ab3@4368>   CMP.b #"}",-1(a4)
00022B58 <AmiBlitz3.ab3@4369>   BNE  'no0par                                             ;statementcall pars
00022B5A <AmiBlitz3.ab3@4370>   MOVEQ #0,d0
00022B5E <AmiBlitz3.ab3@4373>   LEA $16(A2),A1
00022B60 <AmiBlitz3.ab3@4376>   MOVE.l d1,-(a7)
00022B62 <AmiBlitz3.ab3@4377>   MOVE.b (a1),d2
00022B64 <AmiBlitz3.ab3@4378>   MOVE.l d0,d1
00022B68 <AmiBlitz3.ab3@4379>   CMP.w #4,d2
00022B6C <AmiBlitz3.ab3@4380>   BNE 'l1b
00022B72 <AmiBlitz3.ab3@4381>   ADD.l #$203c,d1
00022B78 <AmiBlitz3.ab3@4383>   JSR writeword
00022B7E <AmiBlitz3.ab3@4384>   MOVE.l #$ffff0000,d1
00022B84 <AmiBlitz3.ab3@4386>   JSR writelong
00022B88 <AmiBlitz3.ab3@4387> BRA 'l2b
00022B8E <AmiBlitz3.ab3@4390>   TST.b fpu
00022B92 <AmiBlitz3.ab3@4391>   BNE 'l1c
00022B96 <AmiBlitz3.ab3@4392>   CMP.w #5,d2
00022B9A <AmiBlitz3.ab3@4393>   BNE 'l1c
00022BA0 <AmiBlitz3.ab3@4394>   ADD.l #$203c,d1
00022BA6 <AmiBlitz3.ab3@4396>   JSR writeword
00022BAC <AmiBlitz3.ab3@4397>   MOVE.l #$800000c1,d1
00022BB2 <AmiBlitz3.ab3@4399>   JSR writelong
00022BB6 <AmiBlitz3.ab3@4400> BRA 'l2b
00022BBC <AmiBlitz3.ab3@4403>   ADD.l #$70ff,d1
00022BC2 <AmiBlitz3.ab3@4405>   JSR writeword
00022BC8 <AmiBlitz3.ab3@4406>   MOVE.l #$f23c5000,d1
00022BCA <AmiBlitz3.ab3@4407>   MOVE.l d0,d2
00022BCC <AmiBlitz3.ab3@4408>   ASR.l #2,d2
00022BCE <AmiBlitz3.ab3@4409>   ADD.l d2,d1
00022BD4 <AmiBlitz3.ab3@4411>   JSR writelong
00022BD8 <AmiBlitz3.ab3@4412>   MOVE.w #$ffff,d1
00022BDE <AmiBlitz3.ab3@4414>   JSR writeword
00022BE0 <AmiBlitz3.ab3@4417>   MOVE.l (a7)+,d1
00022BE2 <AmiBlitz3.ab3@4418>   ADDQ.l #1,a1
00022BE8 <AmiBlitz3.ab3@4419>   ADD.l #$0200,d0
00022BEE <AmiBlitz3.ab3@4420>   CMP.l #$0e00,d0
00022BF2 <AmiBlitz3.ab3@4421>    BEQ syntaxerr
00022BF4 <AmiBlitz3.ab3@4422>   TST.b (a1)
00022BF8 <AmiBlitz3.ab3@4423>    BNE 'again
00022BFC <AmiBlitz3.ab3@4424> BRA JL_0_4786
00022C06 <AmiBlitz3.ab3@4427>   MOVE.w a2offset,a2offset2
00022C0A <AmiBlitz3.ab3@4428>   LEA $16(A2),A2
00022C10 <AmiBlitz3.ab3@4429>   MOVE.b funcparloop,-(a7)
00022C18 <AmiBlitz3.ab3@4430>   MOVE.b #1,funcparloop
00022C1E <AmiBlitz3.ab3@4431>   MOVE.b blitzparloop,-(a7)
00022C24 <AmiBlitz3.ab3@4432>   CLR.b blitzparloop
00022C28 <AmiBlitz3.ab3@4433>   BSR.w fetchpees2
00022C2E <AmiBlitz3.ab3@4434>   MOVE.b (a7)+,blitzparloop
00022C34 <AmiBlitz3.ab3@4435>   MOVE.b (a7)+,funcparloop
00022C38 <AmiBlitz3.ab3@4436> BRA.w JL_0_478A
00022C3C <AmiBlitz3.ab3@4439>   BSR.w get1bytemain
00022C40 <AmiBlitz3.ab3@4442>   CMP.w #$7D,D0
00022C44 <AmiBlitz3.ab3@4443>    BNE.w morepar_                                          ;syntax error morepar
00022C4A <AmiBlitz3.ab3@4444>    JSR chkstak
00022C4C <AmiBlitz3.ab3@4445>   MOVE.l (A7)+,D1
00022C52 <AmiBlitz3.ab3@4461>    JSR JL_0_AFCA
00022C58 <AmiBlitz3.ab3@4483>   CLR.b funccall
00022C5C <AmiBlitz3.ab3@4484> BRA.w get1bytemain
00022C62 <AmiBlitz3.ab3@4488>   MOVE.l d0,lasttoken
00022C66 <AmiBlitz3.ab3@4489>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022C6A <AmiBlitz3.ab3@4490>   BNE 'l2
00022C6E <AmiBlitz3.ab3@4491>    MOVE.w #$dd05,d0
00022C72 <AmiBlitz3.ab3@4494>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022C76 <AmiBlitz3.ab3@4495>   BNE 'l3
00022C7A <AmiBlitz3.ab3@4496>    MOVE.w #$dd06,d0
00022C7E <AmiBlitz3.ab3@4499>   CMP.w #-$7FC4,D0
00022C82 <AmiBlitz3.ab3@4500>   BCS.w JL_0_47C4
00022C86 <AmiBlitz3.ab3@4501>     CMP.w #-$7F4D,D0
00022C8A <AmiBlitz3.ab3@4502>     BCC.w JL_0_47C4
00022C92 <AmiBlitz3.ab3@4503>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022C96 <AmiBlitz3.ab3@4504>       BNE.b JL_0_47C0
00022C9C <AmiBlitz3.ab3@4505>         TST.b debugmode
00022CA0 <AmiBlitz3.ab3@4506>         BEQ.b 'l10
00022CAA <AmiBlitz3.ab3@4511>           MOVE.w d_nomemleft,dontwrite
00022CB4 <AmiBlitz3.ab3@4512>           MOVE.l d_bigpc,bigpc
00022CBE <AmiBlitz3.ab3@4513>           MOVE.l d_pc,destpointer
00022CC8 <AmiBlitz3.ab3@4514>           MOVE.l cont_pc2,cont_pc
00022CCC <AmiBlitz3.ab3@4520> BRA.w JL_0_612C
00022CD0 <AmiBlitz3.ab3@4523>   BCLR #$F,D0
00022CD2 <AmiBlitz3.ab3@4524>   MOVE.w D0,D1
00022CD6 <AmiBlitz3.ab3@4525>   ANDI.w #$7F00,D1
00022CDA <AmiBlitz3.ab3@4526>   BNE.w JL_0_4856
00022CDE <AmiBlitz3.ab3@4527>     CMP.w #$B3,D0                                          ;intern Instructions
00022CE2 <AmiBlitz3.ab3@4528>     BCS.w JL_0_47F2
00022CE6 <AmiBlitz3.ab3@4529>       SUBI.w #$77,D0
00022CEA <AmiBlitz3.ab3@4530>       CMP.w #$4B,D0
00022CEE <AmiBlitz3.ab3@4531>       BEQ.w JL_0_4830
00022CF2 <AmiBlitz3.ab3@4532>         CMP.w #$46,D0
00022CF6 <AmiBlitz3.ab3@4533>         BEQ.w JL_0_4830
00022CFA <AmiBlitz3.ab3@4534> BRA.w JL_0_4834                                            ; change tokennum
00022CFE <AmiBlitz3.ab3@4537>     CMP.w #$38,D0
00022D02 <AmiBlitz3.ab3@4538>      BEQ.w JL_0_4830
00022D06 <AmiBlitz3.ab3@4539>     CMP.w #$39,D0
00022D0A <AmiBlitz3.ab3@4540>      BEQ.w JL_0_4830
00022D0E <AmiBlitz3.ab3@4541>     CMP.w #$D,D0
00022D12 <AmiBlitz3.ab3@4542>      BEQ.w JL_0_4830
00022D16 <AmiBlitz3.ab3@4543>     CMP.w #$12,D0
00022D1A <AmiBlitz3.ab3@4544>      BEQ.w JL_0_4830
00022D1E <AmiBlitz3.ab3@4545>     CMP.w #$13,D0
00022D22 <AmiBlitz3.ab3@4546>      BEQ.w JL_0_4830
00022D26 <AmiBlitz3.ab3@4547>     CMP.w #$1A,D0
00022D2A <AmiBlitz3.ab3@4548>      BEQ.w JL_0_4830
00022D2E <AmiBlitz3.ab3@4549>     CMP.w #$2A,D0
00022D32 <AmiBlitz3.ab3@4550>      BHI.w JL_0_4834
00022D36 <AmiBlitz3.ab3@4551>     CMP.w #$23,D0
00022D3A <AmiBlitz3.ab3@4552>      BCS.b JL_0_4834
00022D3E <AmiBlitz3.ab3@4555>   BSR.w undodebug
00022D40 <AmiBlitz3.ab3@4558>   SUBQ.w #1,D0
00022D42 <AmiBlitz3.ab3@4559>   LSL.w #2,D0
00022D48 <AmiBlitz3.ab3@4566>   LEA instructionbase,A0
00022D4C <AmiBlitz3.ab3@4567>   MOVEA.l $0(A0,D0.W),A0
00022D4E <AmiBlitz3.ab3@4568>   MOVE.l A0,-(A7)
00022D52 <AmiBlitz3.ab3@4569> BRA.w get1bytemain
00022D54 <AmiBlitz3.ab3@4575>   MOVE.w D0,D1
00022D58 <AmiBlitz3.ab3@4576>    BSR.w searchinstr
00022D5E <AmiBlitz3.ab3@4577>    TST.b newmode
00022D62 <AmiBlitz3.ab3@4578>    BNE compile_term
00022D68 <AmiBlitz3.ab3@4579>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022D6C <AmiBlitz3.ab3@4580>    BNE.w stamigalib
00022D72 <AmiBlitz3.ab3@4581>   BTST #$0,$1(A3)
00022D76 <AmiBlitz3.ab3@4582>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022D7A <AmiBlitz3.ab3@4583>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022D7E <AmiBlitz3.ab3@4584>    BSR.w JL_0_66F6
00022D84 <AmiBlitz3.ab3@4590>   MOVE.w numreps,-(A7)
00022D8A <AmiBlitz3.ab3@4591>   MOVE.w userp,-(A7)
00022D90 <AmiBlitz3.ab3@4592>   MOVE.w a2offset,-(A7)
00022D92 <AmiBlitz3.ab3@4593>   MOVE.l A2,-(A7)                                          ;recurs.
00022D9C <AmiBlitz3.ab3@4594>   MOVE.w convsize,userp
00022DA0 <AmiBlitz3.ab3@4595>   LEA $6(A3),A1
00022DA2 <AmiBlitz3.ab3@4599>    MOVE.w (A1),D2
00022DA6 <AmiBlitz3.ab3@4600>    BMI.w SERR                                              ;statement syntax error
00022DAA <AmiBlitz3.ab3@4601>   ANDI.w #$FF,D2
00022DAC <AmiBlitz3.ab3@4602>   CMP.w D2,D1
00022DB0 <AmiBlitz3.ab3@4603>    BEQ.w JL_0_48E0
00022DB4 <AmiBlitz3.ab3@4604>    BCS.w JL_0_48CC
00022DB6 <AmiBlitz3.ab3@4605>   MOVE.b (A1),D3
00022DBA <AmiBlitz3.ab3@4606>   ANDI.w #$7,D3
00022DBE <AmiBlitz3.ab3@4607>    BEQ.w JL_0_48CC
00022DC0 <AmiBlitz3.ab3@4608>   MOVE.w D2,D4
00022DC2 <AmiBlitz3.ab3@4609>   SUB.w D3,D4
00022DC4 <AmiBlitz3.ab3@4610>   MOVEQ.l #$00,D5
00022DC6 <AmiBlitz3.ab3@4611>   MOVE.w D1,D5
00022DC8 <AmiBlitz3.ab3@4612>   SUB.w D4,D5
00022DCA <AmiBlitz3.ab3@4613>   DIVU D3,D5
00022DCC <AmiBlitz3.ab3@4614>   SWAP D5
00022DCE <AmiBlitz3.ab3@4615>   TST.w D5
00022DD2 <AmiBlitz3.ab3@4616>    BEQ.w JL_0_48E0
00022DD4 <AmiBlitz3.ab3@4619>   ADDQ.w #2,A1
00022DD6 <AmiBlitz3.ab3@4620>   ADDA.w D2,A1
00022DDA <AmiBlitz3.ab3@4621>    BSR.w aligna1
00022DDE <AmiBlitz3.ab3@4622>    BSR.w skiplibreg
00022DE2 <AmiBlitz3.ab3@4623>   LEA $C(A1),A1
00022DE6 <AmiBlitz3.ab3@4624> BRA.w JL_0_489A
00022DE8 <AmiBlitz3.ab3@4627>   MOVE.w (a3),d2
00022DEC <AmiBlitz3.ab3@4628>   BTST #1,d2
00022DF0 <AmiBlitz3.ab3@4629>   BEQ statement_
00022DF4 <AmiBlitz3.ab3@4630>   CMP.w #1,d1
00022DF8 <AmiBlitz3.ab3@4631>   BEQ statement_
00022DFC <AmiBlitz3.ab3@4634>   CMP.b #$20,(a5)+
00022E00 <AmiBlitz3.ab3@4635>   BEQ 'l2
00022E06 <AmiBlitz3.ab3@4636>   CMP.b #"(",-2(a5)
00022E0A <AmiBlitz3.ab3@4637>   BNE 'l1
00022E0E <AmiBlitz3.ab3@4638> BRA parameter_
00022E12 <AmiBlitz3.ab3@4641> BRA inbrackets_
00022E14 <AmiBlitz3.ab3@4644>   MOVE.b (A1),D2
00022E16 <AmiBlitz3.ab3@4645>   LSL.w #8,D2
00022E18 <AmiBlitz3.ab3@4646>   OR.w D2,D1
00022E1A <AmiBlitz3.ab3@4647>   MOVE.l A1,-(A7)
00022E20 <AmiBlitz3.ab3@4648>   CLR.w a2offset
00022E22 <AmiBlitz3.ab3@4649>   TST.w D1
00022E26 <AmiBlitz3.ab3@4650>    BEQ.w JL_0_4900
00022E2A <AmiBlitz3.ab3@4651>   LEA $2(A1),A2
00022E30 <AmiBlitz3.ab3@4653>   MOVE.l lasttoken,-(a7)
00022E36 <AmiBlitz3.ab3@4654>   CLR.l lasttoken
00022E3A <AmiBlitz3.ab3@4655>   BSR.w fetchlibps
00022E40 <AmiBlitz3.ab3@4656>   MOVE.l (a7)+,lasttoken
00022E44 <AmiBlitz3.ab3@4657> BRA.w JL_0_4904
00022E48 <AmiBlitz3.ab3@4660>   BSR.w get1bytemain
00022E4A <AmiBlitz3.ab3@4663>   MOVEA.l (A7)+,A1
00022E4C <AmiBlitz3.ab3@4664>   MOVEA.l (A7)+,A2
00022E52 <AmiBlitz3.ab3@4665>   MOVE.w a2offset,D1
00022E56 <AmiBlitz3.ab3@4666>    BEQ.w JL_0_493A
00022E5C <AmiBlitz3.ab3@4667>   MOVE.w D1,preplibst+2
00022E62 <AmiBlitz3.ab3@4668>   MOVE.l preplibst,D1
00022E68 <AmiBlitz3.ab3@4669>    JSR writelong                                           ;write array offset stack correct
00022E72 <AmiBlitz3.ab3@4670>   MOVE.w numreps,movenumrep+2
00022E76 <AmiBlitz3.ab3@4671>    BEQ.w JL_0_493A
00022E7C <AmiBlitz3.ab3@4672>   MOVE.l movenumrep,D1
00022E82 <AmiBlitz3.ab3@4673>    JSR writelong
00022E88 <AmiBlitz3.ab3@4677>   JSR userjsr
00022E8E <AmiBlitz3.ab3@4680>   MOVE.w a2offset,D1
00022E92 <AmiBlitz3.ab3@4681>    BEQ.w JL_0_4974
00022E96 <AmiBlitz3.ab3@4682>   CMP.w #$8,D1
00022E9A <AmiBlitz3.ab3@4683>    BHI.w JL_0_4964
00022E9E <AmiBlitz3.ab3@4684>   ANDI.w #$7,D1
00022EA0 <AmiBlitz3.ab3@4685>   LSL.w #8,D1
00022EA2 <AmiBlitz3.ab3@4686>   LSL.w #1,D1
00022EA6 <AmiBlitz3.ab3@4687>   ORI.w #$504F,D1
00022EAC <AmiBlitz3.ab3@4689>   JSR writeword
00022EB0 <AmiBlitz3.ab3@4690> BRA.w JL_0_4974
00022EB6 <AmiBlitz3.ab3@4693>   MOVE.w D1,fixlibst+2
00022EBC <AmiBlitz3.ab3@4694>   MOVE.l fixlibst,D1
00022EC2 <AmiBlitz3.ab3@4695>   JSR writelong
00022EC8 <AmiBlitz3.ab3@4698>   MOVE.w (A7)+,a2offset
00022ECE <AmiBlitz3.ab3@4699>   MOVE.w (A7)+,userp
00022ED4 <AmiBlitz3.ab3@4700>   MOVE.w (A7)+,numreps
00022ED8 <AmiBlitz3.ab3@4701> BRA.w reget
00022EDC <AmiBlitz3.ab3@4705>   MOVEM.l A2-A3,-(A7)
00022EE2 <AmiBlitz3.ab3@4706>   CLR.b doublepeek
00022EE8 <AmiBlitz3.ab3@4707>   MOVE.l A5,lastsourcepos
00022EEC <AmiBlitz3.ab3@4708>    BSR.w getchar
00022EF0 <AmiBlitz3.ab3@4709>   CMP.w #$2E,D0
00022EF4 <AmiBlitz3.ab3@4710>    BEQ.w JL_0_49B4
00022EFA <AmiBlitz3.ab3@4711>   MOVEA.l defaulttype,A2
00022EFE <AmiBlitz3.ab3@4712>   CMP.w #$24,D0
00022F02 <AmiBlitz3.ab3@4713>    BNE.w JL_0_49CA
00022F04 <AmiBlitz3.ab3@4714>   MOVEQ.l #$07,D1
00022F08 <AmiBlitz3.ab3@4715> BRA.w JL_0_49DE
00022F0C <AmiBlitz3.ab3@4718>   BSR.w getparameter2
00022F10 <AmiBlitz3.ab3@4719>   BEQ.w syntaxerr
00022F16 <AmiBlitz3.ab3@4720>   LEA newtypebase,A2
00022F1A <AmiBlitz3.ab3@4721>   BSR.w findtype
00022F1E <AmiBlitz3.ab3@4722>   BNE.w notypeerr
00022F28 <AmiBlitz3.ab3@4726>   MOVE.w oldqflag,instringon
00022F2E <AmiBlitz3.ab3@4727>   MOVEA.l lastsourcepos,A5
00022F32 <AmiBlitz3.ab3@4732>   MOVE.w $6(A2),D1
00022F38 <AmiBlitz3.ab3@4733>   CMP.w #8,8(a2)
00022F3C <AmiBlitz3.ab3@4734>   BNE 'l1
00022F44 <AmiBlitz3.ab3@4735>   MOVE.b #1,doublepeek
00022F4A <AmiBlitz3.ab3@4739>   MOVE.w D1,convsize
00022F4E <AmiBlitz3.ab3@4740>   MOVEM.l (A7)+,A2-A3
00022F50 <AmiBlitz3.ab3@4741> RTS
00022F56 <AmiBlitz3.ab3@4746>   BTST #$3,$1(A3)
00022F5A <AmiBlitz3.ab3@4747>   BEQ.w JL_0_4A06
00022F5E <AmiBlitz3.ab3@4748>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022F62 <AmiBlitz3.ab3@4750>   ORI.w #$7000,D1
00022F68 <AmiBlitz3.ab3@4751>   JSR writeword
00022F6E <AmiBlitz3.ab3@4752>   ADDQ.w #1,regnum
00022F70 <AmiBlitz3.ab3@4755> RTS
00022F72 <AmiBlitz3.ab3@4761>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022F74 <AmiBlitz3.ab3@4762>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022F76 <AmiBlitz3.ab3@4763>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022F78 <AmiBlitz3.ab3@4767> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022F7A <AmiBlitz3.ab3@4768>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022F7C <AmiBlitz3.ab3@4769>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022F7E <AmiBlitz3.ab3@4773> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022F80 <AmiBlitz3.ab3@4774>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022F82 <AmiBlitz3.ab3@4775>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022F84 <AmiBlitz3.ab3@4779> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022F86 <AmiBlitz3.ab3@4782> srctype:    Ds.w 1
00022F8A <AmiBlitz3.ab3@4787>   BSR.w excget
00022F8E <AmiBlitz3.ab3@4788>   CMP.w #$2C,D0
00022F92 <AmiBlitz3.ab3@4789>    BNE.w syntaxerr
00022F98 <AmiBlitz3.ab3@4790>   MOVE.b D2,srctype
00022F9E <AmiBlitz3.ab3@4791>   MOVE.w pusha2,D1
00022FA4 <AmiBlitz3.ab3@4792>   JSR writeword
00022FA8 <AmiBlitz3.ab3@4793>   BSR.w get1bytemain
00022FAC <AmiBlitz3.ab3@4794>   BSR.w excget
00022FB2 <AmiBlitz3.ab3@4795>   CMP.b srctype,D2
00022FB6 <AmiBlitz3.ab3@4796>    BNE.w excerr2
00022FBC <AmiBlitz3.ab3@4797>   MOVE.w pulla1,D1
00022FC2 <AmiBlitz3.ab3@4798>    JSR writeword
00022FC6 <AmiBlitz3.ab3@4799>   CMP.b #$2,D2
00022FCA <AmiBlitz3.ab3@4800>    BCS.w JL_0_4B2A
00022FCE <AmiBlitz3.ab3@4801>    BEQ.w JL_0_4B1E
00022FD2 <AmiBlitz3.ab3@4802>   LEA swapl(PC),A0
00022FD6 <AmiBlitz3.ab3@4803>   LEA swaplf(PC),A1
00022FDC <AmiBlitz3.ab3@4804> JMP pokecode
00022FE0 <AmiBlitz3.ab3@4807>   LEA swapw(PC),A0
00022FE4 <AmiBlitz3.ab3@4808>   LEA swapwf(PC),A1
00022FEA <AmiBlitz3.ab3@4809> JMP pokecode
00022FEE <AmiBlitz3.ab3@4812>   LEA swapb(PC),A0
00022FF2 <AmiBlitz3.ab3@4813>   LEA swapbf(PC),A1
00022FF8 <AmiBlitz3.ab3@4814> JMP pokecode
00022FFE <AmiBlitz3.ab3@4818>   JSR getparameter
00023002 <AmiBlitz3.ab3@4819>   BSR.w JL_0_8E3C
00023008 <AmiBlitz3.ab3@4820>   JSR calcvar
0002300C <AmiBlitz3.ab3@4821>   BTST #$E,D2
00023010 <AmiBlitz3.ab3@4822>    BEQ.w JL_0_4B4E
00023014 <AmiBlitz3.ab3@4823>   MOVE.b #$4,D2
00023016 <AmiBlitz3.ab3@4826>   TST.b D2
0002301A <AmiBlitz3.ab3@4827>    BEQ.w excerr
0002301E <AmiBlitz3.ab3@4828>   BTST #$F,D2
00023022 <AmiBlitz3.ab3@4829>    BNE.w JL_0_4B6A
00023028 <AmiBlitz3.ab3@4830>   MOVE.w leaamp,D1
0002302E <AmiBlitz3.ab3@4831>    JSR pokewda5s
00023030 <AmiBlitz3.ab3@4832>   MOVE.w D3,D1
00023036 <AmiBlitz3.ab3@4833> JMP writeword
00023038 <AmiBlitz3.ab3@4836> RTS
0002303E <AmiBlitz3.ab3@4846>   MOVE.l mempool,a0
00023044 <AmiBlitz3.ab3@4847>   MOVEA.l _execbase,A6
00023048 <AmiBlitz3.ab3@4848> JMP _AllocPooled(a6)
0002304C <AmiBlitz3.ab3@4852>   MOVE.w #$BF00,D1
00023052 <AmiBlitz3.ab3@4853> JMP Atokejsr
00023056 <AmiBlitz3.ab3@4857>   CMP.w #-$7FFA,D0
0002305A <AmiBlitz3.ab3@4858>    BEQ.w popreturn
0002305E <AmiBlitz3.ab3@4859>   CMP.w #-$7FEA,D0
00023062 <AmiBlitz3.ab3@4860>    BEQ.w popnext2
00023066 <AmiBlitz3.ab3@4861>   CMP.w #-$7FF2,D0
0002306A <AmiBlitz3.ab3@4862>    BEQ.w popselect2
0002306E <AmiBlitz3.ab3@4863>   CMP.w #-$7FF5,D0
00023072 <AmiBlitz3.ab3@4864>    BEQ.w get1bytemain
00023076 <AmiBlitz3.ab3@4865>   CMP.w #-$7FF4,D0
0002307A <AmiBlitz3.ab3@4866>    BEQ.w get1bytemain
0002307E <AmiBlitz3.ab3@4867>   CMP.w #-$7FEC,D0
00023082 <AmiBlitz3.ab3@4868>    BEQ.w get1bytemain
00023086 <AmiBlitz3.ab3@4869>   CMP.w #-$7F45,D0
0002308A <AmiBlitz3.ab3@4870>    BEQ.w get1bytemain
0002308E <AmiBlitz3.ab3@4871> BRA.w syntaxerr
00023094 <AmiBlitz3.ab3@4874>   TST.b debugmode
00023098 <AmiBlitz3.ab3@4875>    BEQ.w popreturn__norerr
0002309C <AmiBlitz3.ab3@4876>   LEA popreturn__rfix(PC),A0
000230A0 <AmiBlitz3.ab3@4877>   LEA popreturn__rfixf(PC),A1
000230A6 <AmiBlitz3.ab3@4878>    JSR pokecode
000230AA <AmiBlitz3.ab3@4879>   MOVE.w #$C305,D1
000230B0 <AmiBlitz3.ab3@4880>    JSR Atokejsr
000230B4 <AmiBlitz3.ab3@4881>   MOVE.w popreturn__rfix2(PC),D1
000230BA <AmiBlitz3.ab3@4883>    JSR writeword
000230BE <AmiBlitz3.ab3@4884> BRA.w get1bytemain
000230C4 <AmiBlitz3.ab3@4888>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000230C8 <AmiBlitz3.ab3@4889>   BEQ.w popreturn__rfix2
000230CE <AmiBlitz3.ab3@4892>   JSR $20000                                               ;reass
000230D0 <AmiBlitz3.ab3@4895>   ADDQ.w #6,A7
000230D4 <AmiBlitz3.ab3@4899>   MOVE.w popreturn__sfix(PC),D1
000230DA <AmiBlitz3.ab3@4900>   JSR writeword
000230DE <AmiBlitz3.ab3@4901> BRA.w get1bytemain
000230E0 <AmiBlitz3.ab3@4906>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000230E6 <AmiBlitz3.ab3@4911>   MOVE.l firstfor,D0
000230EA <AmiBlitz3.ab3@4912>    BEQ.w noforerr
000230EC <AmiBlitz3.ab3@4913>   MOVEA.l D0,A2
000230F0 <AmiBlitz3.ab3@4914>    BSR.w get1bytemain
000230F4 <AmiBlitz3.ab3@4915>   BSR.w popnext
000230FA <AmiBlitz3.ab3@4918>   TST.b debugmode
000230FE <AmiBlitz3.ab3@4919>    BEQ.w popnext3__ner
00023104 <AmiBlitz3.ab3@4920>   MOVE.l nextfixw2,D1
0002310A <AmiBlitz3.ab3@4921>   CMPI.w #$3,$C(A2)
0002310E <AmiBlitz3.ab3@4922>    BCS.w writelong2
00023114 <AmiBlitz3.ab3@4923>   MOVE.l nextfixl2,D1
0002311A <AmiBlitz3.ab3@4924> writelong2 JMP  writelong
00023120 <AmiBlitz3.ab3@4927>   CMPI.w #$3,$C(A2)
00023124 <AmiBlitz3.ab3@4928>    BCS.w popnext3__skip2
0002312A <AmiBlitz3.ab3@4929>   MOVE.l nextfixl,D1
00023130 <AmiBlitz3.ab3@4930>   JMP writelong
00023136 <AmiBlitz3.ab3@4933>   MOVE.w nextfixw,D1
0002313C <AmiBlitz3.ab3@4934> JMP writeword
00023140 <AmiBlitz3.ab3@4938>   MOVE.w $C(A2),D0
00023146 <AmiBlitz3.ab3@4939>   TST.b debugmode
0002314A <AmiBlitz3.ab3@4940>    BEQ.w popnext__norunerr
0002314E <AmiBlitz3.ab3@4941>   MOVE.w #$C306,D1
00023152 <AmiBlitz3.ab3@4942>   CMP.w #$3,D0
00023156 <AmiBlitz3.ab3@4943>    BCS.w popnext__oktc
00023158 <AmiBlitz3.ab3@4944>   ADDQ.w #1,D1
0002315A <AmiBlitz3.ab3@4947>   MOVE.l A2,-(A7)
00023160 <AmiBlitz3.ab3@4948>   JSR Atokejsr
00023162 <AmiBlitz3.ab3@4949>   MOVEA.l (A7)+,A2
00023164 <AmiBlitz3.ab3@4952> RTS
0002316A <AmiBlitz3.ab3@4956>   MOVE.l firstsel,D0
0002316E <AmiBlitz3.ab3@4957>    BEQ.w eselerr
00023170 <AmiBlitz3.ab3@4958>   MOVEA.l D0,A2
00023174 <AmiBlitz3.ab3@4959>    BSR.w get1bytemain
00023178 <AmiBlitz3.ab3@4962>   MOVE.w $C(A2),D2
0002317E <AmiBlitz3.ab3@4963>   TST.b debugmode
00023182 <AmiBlitz3.ab3@4964>    BEQ.w popselect__norerr
00023186 <AmiBlitz3.ab3@4965>   MOVE.w #$C313,D1
0002318A <AmiBlitz3.ab3@4966>   CMP.w #$3,D2
0002318E <AmiBlitz3.ab3@4967>    BCS.w popselect__chkit
00023190 <AmiBlitz3.ab3@4968>   ADDQ.w #1,D1
00023196 <AmiBlitz3.ab3@4971>   JSR Atokejsr                                             ;make sure next thing on stack
00023198 <AmiBlitz3.ab3@4975>   MOVEQ.l #$02,D1
0002319C <AmiBlitz3.ab3@4976>   CMP.w #$3,D2
000231A0 <AmiBlitz3.ab3@4977>    BCS.w popselect__doit
000231A2 <AmiBlitz3.ab3@4978>   MOVEQ.l #$04,D1
000231A6 <AmiBlitz3.ab3@4979>   CMP.w #$7,D2
000231AA <AmiBlitz3.ab3@4980>    BCS.w popselect__doit
000231B0 <AmiBlitz3.ab3@4981>   LEA endselstr,A0
000231B6 <AmiBlitz3.ab3@4982>   LEA endselstrf,A1
000231BC <AmiBlitz3.ab3@4983>   TST.b debugmode
000231C0 <AmiBlitz3.ab3@4984>    BEQ.w popselect__norerr3
000231C6 <AmiBlitz3.ab3@4985>   LEA endselstrf2,A1
000231CC <AmiBlitz3.ab3@4988>   JSR pokecode
000231D0 <AmiBlitz3.ab3@4989>   MOVE.w #$C003,D1                                         ;global freemem
000231D6 <AmiBlitz3.ab3@4990> JMP Atokejsr
000231DC <AmiBlitz3.ab3@4993>   TST.b debugmode
000231E0 <AmiBlitz3.ab3@4994>    BEQ.w popselect__norerr2
000231E2 <AmiBlitz3.ab3@4995>   ADDQ.w #2,D1                                             ;for the "sE"
000231E4 <AmiBlitz3.ab3@4998>   LSL.w #8,D1
000231E6 <AmiBlitz3.ab3@4999>   LSL.w #1,D1
000231EC <AmiBlitz3.ab3@5000>   OR.w endsel,D1
000231F2 <AmiBlitz3.ab3@5001> JMP writeword
000231F6 <AmiBlitz3.ab3@5004> firstrep:    Ds.l 1
000231FA <AmiBlitz3.ab3@5005> replineat:   Ds.l 1
00023200 <AmiBlitz3.ab3@5014>   CLR.l fp0addr
0002320A <AmiBlitz3.ab3@5015>   MOVE.l linenumat,replineat
0002320C <AmiBlitz3.ab3@5016>   MOVEQ.l #$08,D0
00023212 <AmiBlitz3.ab3@5017>   MOVEA.l _execbase,A6
00023218 <AmiBlitz3.ab3@5018>   MOVE.l mempool,a0
0002321C <AmiBlitz3.ab3@5019>   JSR _AllocPooled(a6)
0002321E <AmiBlitz3.ab3@5021>   MOVEA.l D0,A0
00023222 <AmiBlitz3.ab3@5022>   MOVE.l firstrep(PC),(A0)
00023228 <AmiBlitz3.ab3@5023>   MOVE.l A0,firstrep
00023230 <AmiBlitz3.ab3@5024>   MOVE.l destpointer,$4(A0)
00023232 <AmiBlitz3.ab3@5025> RTS
00023238 <AmiBlitz3.ab3@5028> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002323C <AmiBlitz3.ab3@5031>   LEA str_temp(PC),A1
0002323E <AmiBlitz3.ab3@5032>   CLR.w (A1)
00023242 <AmiBlitz3.ab3@5033>   CLR.l $2(A1)
00023244 <AmiBlitz3.ab3@5036>   MOVEQ.l #$04,D0
00023248 <AmiBlitz3.ab3@5039>     MOVE.b $1(A1),(A1)+
0002324C <AmiBlitz3.ab3@5040>   DBF D0,check_for_infoextention__loop
00023250 <AmiBlitz3.ab3@5045>   LEA str_temp(PC),A1
00023252 <AmiBlitz3.ab3@5046>   MOVE.b (A0),D0
00023256 <AmiBlitz3.ab3@5047>   ORI.b #$20,D0
0002325A <AmiBlitz3.ab3@5048>   MOVE.b D0,$5(A1)
0002325C <AmiBlitz3.ab3@5049>   TST.b (A0)+
00023260 <AmiBlitz3.ab3@5050>    BNE.w check_for_infoextention__loop2
00023264 <AmiBlitz3.ab3@5051>   CMPI.w #$2E69,(A1)+                                      ;".i"
00023268 <AmiBlitz3.ab3@5052>    BNE.w check_for_infoextention__no
0002326E <AmiBlitz3.ab3@5053>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023270 <AmiBlitz3.ab3@5056> RTS
00023274 <AmiBlitz3.ab3@5060>   BPL.w gettokeps__evaltoke
00023276 <AmiBlitz3.ab3@5061>   MOVE.w D0,D1
0002327A <AmiBlitz3.ab3@5062>   ANDI.w #$7F80,D1
0002327E <AmiBlitz3.ab3@5063>    BEQ.w tokeerr
00023282 <AmiBlitz3.ab3@5064>   BCLR #$F,D0
00023284 <AmiBlitz3.ab3@5065>   MOVE.w D0,D4                                             ;got toke number
00023288 <AmiBlitz3.ab3@5066>   BSR.w get1bytemain
0002328C <AmiBlitz3.ab3@5067> BRA.w gettokeps__gotnum
00023292 <AmiBlitz3.ab3@5070>   JSR JL_0_BF6A
00023298 <AmiBlitz3.ab3@5071>   CMP.l #MaxWord,D3
0002329C <AmiBlitz3.ab3@5072>    BHI.w tokeerr
0002329E <AmiBlitz3.ab3@5073>   TST.w D6
000232A2 <AmiBlitz3.ab3@5074>    BNE.w tokeerr
000232A4 <AmiBlitz3.ab3@5075>   MOVE.w D3,D4
000232A6 <AmiBlitz3.ab3@5078>   MOVEQ.l #$00,D5
000232AA <AmiBlitz3.ab3@5079>   CMP.w #$2C,D0
000232AE <AmiBlitz3.ab3@5080>    BNE.w gettokeps__gotfrom
000232B0 <AmiBlitz3.ab3@5081>   MOVE.w D4,-(A7)
000232B6 <AmiBlitz3.ab3@5082>    JSR AJL_0_BF6E
000232BC <AmiBlitz3.ab3@5083>   CMP.l #MaxWord,D3
000232C0 <AmiBlitz3.ab3@5084>    BHI.w tokeerr
000232C2 <AmiBlitz3.ab3@5085>   TST.w D6
000232C6 <AmiBlitz3.ab3@5086>    BNE.w tokeerr
000232C8 <AmiBlitz3.ab3@5087>   MOVE.w D3,D5
000232CA <AmiBlitz3.ab3@5088>   MOVE.w (A7)+,D4
000232CC <AmiBlitz3.ab3@5091> RTS                                                        ;d4=toke, d5=form
000232CE <AmiBlitz3.ab3@5095>   TST.w D0
000232D2 <AmiBlitz3.ab3@5096>    BSR.w gettokeps
000232D6 <AmiBlitz3.ab3@5097>   MOVE.w #$4EB9,D1
000232DC <AmiBlitz3.ab3@5098>   JSR writeword
000232E0 <AmiBlitz3.ab3@5099>   BSR.w addoff
000232E2 <AmiBlitz3.ab3@5100>   MOVE.w D5,D1
000232E6 <AmiBlitz3.ab3@5101>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000232E8 <AmiBlitz3.ab3@5102>   SWAP D1
000232EA <AmiBlitz3.ab3@5103>   MOVE.w D4,D1
000232F0 <AmiBlitz3.ab3@5104> JMP writelong
000232F2 <AmiBlitz3.ab3@5108>   TST.w D0
000232F6 <AmiBlitz3.ab3@5109>    BSR.w gettokeps
000232FA <AmiBlitz3.ab3@5110>   MOVE.w #$4EB9,D1
00023300 <AmiBlitz3.ab3@5111>   JSR writeword
00023304 <AmiBlitz3.ab3@5112>   BSR.w addoff
00023306 <AmiBlitz3.ab3@5113>   MOVE.w D5,D1
0002330A <AmiBlitz3.ab3@5114>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002330C <AmiBlitz3.ab3@5115>   SWAP D1
0002330E <AmiBlitz3.ab3@5116>   MOVE.w D4,D1
00023314 <AmiBlitz3.ab3@5117>   JMP writelong
0002331A <AmiBlitz3.ab3@5121>   JSR JL_0_BF6A
00023320 <AmiBlitz3.ab3@5122>   CMP.l #$10000,D3
00023324 <AmiBlitz3.ab3@5123>    BCC.w tokeerr
00023326 <AmiBlitz3.ab3@5124>   MOVE.w D3,D1
0002332C <AmiBlitz3.ab3@5125> JMP Atokejsr
00023330 <AmiBlitz3.ab3@5129>   BSR.w gettokeps
00023334 <AmiBlitz3.ab3@5130>   MOVE.w #$4EB9,D1
0002333A <AmiBlitz3.ab3@5131>   JSR writeword
00023340 <AmiBlitz3.ab3@5132>   MOVE.l destpointer,D3
00023348 <AmiBlitz3.ab3@5133>   BTST #$7,blitzmode
0002334C <AmiBlitz3.ab3@5134>    BEQ.w do_TokeJsr__inamiga
00023350 <AmiBlitz3.ab3@5135>   BSET #$E,D5
00023354 <AmiBlitz3.ab3@5138>   BSR.w JL_0_6E86
00023358 <AmiBlitz3.ab3@5139>   BSR.w addoff
0002335E <AmiBlitz3.ab3@5140>   JMP writelong
00023362 <AmiBlitz3.ab3@5144>   BEQ.w do_VWait__zero
00023364 <AmiBlitz3.ab3@5145>   MOVEQ.l #$02,D2                                          ;get a word
0002336A <AmiBlitz3.ab3@5147>   JSR bakeval
0002336E <AmiBlitz3.ab3@5148>   MOVE.w fvwait(PC),D1
00023372 <AmiBlitz3.ab3@5149> BRA.w do_VWait__vcont
00023376 <AmiBlitz3.ab3@5152>   MOVE.w #$7000,D1                                         ;moveq #0,d0
0002337C <AmiBlitz3.ab3@5155>   JSR writeword
00023380 <AmiBlitz3.ab3@5156>   MOVE.w #$C104,D1
00023386 <AmiBlitz3.ab3@5157> JMP Atokejsr
00023388 <AmiBlitz3.ab3@5161>   SUBQ.w #1,D0
0002338E <AmiBlitz3.ab3@5164>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00023392 <AmiBlitz3.ab3@5167>   Dc.l $426d0001                                           ;clr.w $0(A5)
00023396 <AmiBlitz3.ab3@5171>   MOVE.b debugmode(PC),D1
0002339A <AmiBlitz3.ab3@5172>   BEQ.b debugmode_codelabel__skip
0002339E <AmiBlitz3.ab3@5173>   MOVE.w #$D500,D1
000233A4 <AmiBlitz3.ab3@5174> JMP Atokejsr
000233A6 <AmiBlitz3.ab3@5177> RTS
000233AE <AmiBlitz3.ab3@5181>   BSET #$0,blitzmode
000233B6 <AmiBlitz3.ab3@5182>   BSET #$7,blitzmode
000233BA <AmiBlitz3.ab3@5183>   MOVE.w #$C200,D1
000233C0 <AmiBlitz3.ab3@5184>   JSR Atokejsr
000233C6 <AmiBlitz3.ab3@5185>   TST.b debugmode
000233CA <AmiBlitz3.ab3@5186>    BEQ.w do_BLITZ__done
000233CE <AmiBlitz3.ab3@5187>   MOVE.w cgoblitz(PC),D1
000233D4 <AmiBlitz3.ab3@5188>   JSR writeword
000233D6 <AmiBlitz3.ab3@5189>   MOVEQ.l #-$01,D1
000233DC <AmiBlitz3.ab3@5190>   JSR writeword
000233E2 <AmiBlitz3.ab3@5191>   JSR getbbase
000233E8 <AmiBlitz3.ab3@5192>   JSR writeword
000233EC <AmiBlitz3.ab3@5195> BRA.w debugmode_codelabel
000233F0 <AmiBlitz3.ab3@5199>   MOVE.w #$C201,D1
000233F4 <AmiBlitz3.ab3@5200> BRA.w do_AMIGA__toamode
000233F8 <AmiBlitz3.ab3@5204>   MOVE.W  #$C202,D1
00023400 <AmiBlitz3.ab3@5207>   BSET #$0,blitzmode
00023408 <AmiBlitz3.ab3@5208>   BCLR #$7,blitzmode
0002340E <AmiBlitz3.ab3@5209>   JSR Atokejsr
00023414 <AmiBlitz3.ab3@5210>   TST.b debugmode
00023418 <AmiBlitz3.ab3@5211>    BEQ.w do_AMIGA__done
0002341C <AmiBlitz3.ab3@5212>   MOVE.w cgoamiga(PC),D1
00023422 <AmiBlitz3.ab3@5213>   JSR writeword
00023428 <AmiBlitz3.ab3@5214>   JSR getbbase
0002342E <AmiBlitz3.ab3@5215>   JSR writeword
00023432 <AmiBlitz3.ab3@5218> BRA.w debugmode_codelabel
00023436 <AmiBlitz3.ab3@5222>   MOVEM.l D2-D7/A2-A4,-(A7)
0002343A <AmiBlitz3.ab3@5225>   MOVEM.l (A7)+,D2-D7/A2-A4
00023440 <AmiBlitz3.ab3@5229>   JSR JL_0_BF6A
00023446 <AmiBlitz3.ab3@5230>   CMP.l #$E,D3
0002344A <AmiBlitz3.ab3@5231>    BCC.w interr4
0002344E <AmiBlitz3.ab3@5232>   MOVE.w #$7000,D1
00023450 <AmiBlitz3.ab3@5233>   OR.w D3,D1
00023456 <AmiBlitz3.ab3@5234>   JSR writeword
0002345A <AmiBlitz3.ab3@5235>   MOVE.w #$C101,D1
00023460 <AmiBlitz3.ab3@5236> JMP Atokejsr                                               ;clear the interupt
00023462 <AmiBlitz3.ab3@5239> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023466 <AmiBlitz3.ab3@5240> errjmp:      Ds.l 1                                        ;where err jump is
0002346A <AmiBlitz3.ab3@5241> errcode:     Ds.l 1
0002346E <AmiBlitz3.ab3@5245>   MOVE.W  #$D202,D1
00023474 <AmiBlitz3.ab3@5246> JMP Atokejsr                                               ;BRA.W Atokejsr
00023478 <AmiBlitz3.ab3@5250>   MOVE.w inerr(PC),D1
0002347C <AmiBlitz3.ab3@5251>    BEQ.w errerr3
00023482 <AmiBlitz3.ab3@5252>   CLR.w inerr
00023488 <AmiBlitz3.ab3@5253>   MOVE.w dontwrite,D1
0002348C <AmiBlitz3.ab3@5254>    BNE.w doendseterr__skip
00023490 <AmiBlitz3.ab3@5255>   MOVEA.l errjmp(PC),A0
00023496 <AmiBlitz3.ab3@5256>   MOVE.l destpointer,(A0)
0002349A <AmiBlitz3.ab3@5259> BRA.w get1bytemain
0002349E <AmiBlitz3.ab3@5263>   MOVE.w #$D205,D1
000234A4 <AmiBlitz3.ab3@5264> JMP Atokejsr
000234AA <AmiBlitz3.ab3@5268>   MOVE.w proceduremode,D1
000234AE <AmiBlitz3.ab3@5269>    BNE.w errerr1
000234B2 <AmiBlitz3.ab3@5270>   MOVE.w inerr(PC),D1
000234B6 <AmiBlitz3.ab3@5271>    BNE.w errerr2
000234BC <AmiBlitz3.ab3@5272>   LEA inerr,a0
000234BE <AmiBlitz3.ab3@5273>   NOT.w (a0)                                               ;reass
000234C2 <AmiBlitz3.ab3@5274>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000234C8 <AmiBlitz3.ab3@5275>   JSR writeword
000234D2 <AmiBlitz3.ab3@5276>   MOVE.l destpointer,errcode
000234D6 <AmiBlitz3.ab3@5277>   BSR.w addoff
000234DC <AmiBlitz3.ab3@5278>   JSR writelong
000234E0 <AmiBlitz3.ab3@5279>   MOVE.w #$D201,D1
000234E6 <AmiBlitz3.ab3@5280>   JSR Atokejsr
000234EA <AmiBlitz3.ab3@5281>   MOVE.w #$4EF9,D1                                         ;JMP
000234F0 <AmiBlitz3.ab3@5282>   JSR writeword
000234FA <AmiBlitz3.ab3@5283>   MOVE.l destpointer,errjmp
000234FE <AmiBlitz3.ab3@5284>   BSR.w addoff
00023504 <AmiBlitz3.ab3@5285>   JSR writelong
0002350A <AmiBlitz3.ab3@5286>   MOVE.w dontwrite,D1
0002350E <AmiBlitz3.ab3@5287>    BNE.w do_SetErr__skip
00023512 <AmiBlitz3.ab3@5288>   MOVEA.l errcode(PC),A0
00023518 <AmiBlitz3.ab3@5289>   MOVE.l destpointer,(A0)
0002351A <AmiBlitz3.ab3@5292> RTS
0002351E <AmiBlitz3.ab3@5295> intlineat:  Ds.l 1
00023520 <AmiBlitz3.ab3@5299>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023524 <AmiBlitz3.ab3@5300>   BSR.w errchx
0002352A <AmiBlitz3.ab3@5301>   MOVE.w D1,intstring
00023534 <AmiBlitz3.ab3@5302>   MOVE.l linenumat,intlineat
0002353A <AmiBlitz3.ab3@5303>   JSR JL_0_BF6A                                           ;get constant - int level
00023540 <AmiBlitz3.ab3@5304>   CMP.l #$E,D3
00023544 <AmiBlitz3.ab3@5305>    BCC.w interr4
0002354A <AmiBlitz3.ab3@5306>   ST intsused
00023550 <AmiBlitz3.ab3@5307>   MOVE.w D3,intlevel
00023554 <AmiBlitz3.ab3@5308>   MOVE.w #$7000,D1
00023556 <AmiBlitz3.ab3@5309>   OR.w D3,D1                                              
0002355C <AmiBlitz3.ab3@5310>   JSR writeword                                         ;moveq #x,d0
00023560 <AmiBlitz3.ab3@5311>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023566 <AmiBlitz3.ab3@5312>   JSR writeword
0002356A <AmiBlitz3.ab3@5313>   BSR.w addoff
00023570 <AmiBlitz3.ab3@5314>   MOVE.l destpointer,-(A7)
00023574 <AmiBlitz3.ab3@5315>   BSR.w writelong
00023578 <AmiBlitz3.ab3@5316>   MOVE.w #$C100,D1
0002357E <AmiBlitz3.ab3@5317>   JSR Atokejsr
00023582 <AmiBlitz3.ab3@5318>   MOVE.w #$4EF9,D1                                        ;jmp
00023588 <AmiBlitz3.ab3@5319>   JSR writeword
0002358C <AmiBlitz3.ab3@5320>   BSR.w addoff
00023596 <AmiBlitz3.ab3@5321>   MOVE.l destpointer,intjmpat
0002359A <AmiBlitz3.ab3@5322>   BSR.w writelong
0002359C <AmiBlitz3.ab3@5323>   MOVEA.l (A7)+,A0
000235A2 <AmiBlitz3.ab3@5324>   MOVE.w dontwrite,D1
000235A6 <AmiBlitz3.ab3@5325>   BNE.w do_SetInt__dontpoke
000235AC <AmiBlitz3.ab3@5326>   MOVE.l destpointer,(A0)
000235B0 <AmiBlitz3.ab3@5329>   MOVE.l intstart0(PC),D1
000235B4 <AmiBlitz3.ab3@5330>   BSR.w writelong
000235BA <AmiBlitz3.ab3@5331>   TST.b debugmode
000235BE <AmiBlitz3.ab3@5332>    BEQ.w do_SetInt__norerr
000235C0 <AmiBlitz3.ab3@5336>   MOVEQ.l #$02,D1
000235C4 <AmiBlitz3.ab3@5337>   BSR.w writetrap
000235C8 <AmiBlitz3.ab3@5338>   BSR.w addoff
000235D2 <AmiBlitz3.ab3@5339>   MOVE.l destpointer,intcleanat
000235D6 <AmiBlitz3.ab3@5340>   BSR.w writelong
000235DC <AmiBlitz3.ab3@5341>   MOVE.w intlevel,D1
000235E0 <AmiBlitz3.ab3@5342>   BSR.w writeword
000235E4 <AmiBlitz3.ab3@5343>   MOVE.w #$C30B,D1                                         ;disable stack checks
000235EA <AmiBlitz3.ab3@5344>   JSR Atokejsr
000235EE <AmiBlitz3.ab3@5347>   MOVE.w #$FED3,D1
000235F2 <AmiBlitz3.ab3@5348>   BSR.w uselib
000235F6 <AmiBlitz3.ab3@5349>   MOVE.w #$C102,D1
000235FC <AmiBlitz3.ab3@5350>   JSR Atokejsr
00023604 <AmiBlitz3.ab3@5351>   MOVE.w #-1,lasta6
0002360E <AmiBlitz3.ab3@5352>   MOVE.l linenumat,intline
00023610 <AmiBlitz3.ab3@5353> RTS
00023612 <AmiBlitz3.ab3@5357>             Ds.w 1                                         ;??looks like obsolved data??
00023616 <AmiBlitz3.ab3@5359> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
0002361A <AmiBlitz3.ab3@5361> intjmpat:   Ds.l 1
0002361E <AmiBlitz3.ab3@5362> intline:    Ds.l 1
00023620 <AmiBlitz3.ab3@5363> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023622 <AmiBlitz3.ab3@5366> intlevel:   Ds.w 1
00023626 <AmiBlitz3.ab3@5367> intcleanat: Ds.l 1
0002362A <AmiBlitz3.ab3@5368> ret15add:   Ds.l 1
0002362C <AmiBlitz3.ab3@5369> ret15cc:    Ds.w 1
00023634 <AmiBlitz3.ab3@5373>   ADDI.l #$12,$2(A7)
0002363C <AmiBlitz3.ab3@5374>   MOVE.l $2(A7),ret15add
00023642 <AmiBlitz3.ab3@5375>   MOVE.w (A7),ret15cc
0002364A <AmiBlitz3.ab3@5376>   MOVE.l #directdo,$2(A7)
0002364C <AmiBlitz3.ab3@5377> RTE
00023650 <AmiBlitz3.ab3@5386>   MOVE.l ret15add(PC),-(A7)
00023654 <AmiBlitz3.ab3@5387>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023658 <AmiBlitz3.ab3@5388>   MOVEM.l D0-D7/A0-A6,-(A7)
00023662 <AmiBlitz3.ab3@5389>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
0002366C <AmiBlitz3.ab3@5390>   MOVE.l destbufferstart,trap15temp2
00023676 <AmiBlitz3.ab3@5391>   MOVE.l libend,templibend
00023680 <AmiBlitz3.ab3@5392>   MOVE.l data1start,tempdata1start
00023686 <AmiBlitz3.ab3@5393>   CLR.l hunkoffsetcounter
0002368C <AmiBlitz3.ab3@5395>   MOVE.l directbuffer,a0
00023692 <AmiBlitz3.ab3@5399>   MOVE.l a0,destbufferstart
00023698 <AmiBlitz3.ab3@5400>   ADD.l #3900,a0
0002369E <AmiBlitz3.ab3@5401>   MOVE.l a0,destbufferend
000236A4 <AmiBlitz3.ab3@5402>   TST.b exdebug
000236A8 <AmiBlitz3.ab3@5403>   BEQ 'l1
000236AE <AmiBlitz3.ab3@5404>   MOVE.l a0,libend
000236B4 <AmiBlitz3.ab3@5405>   ADD.l #4000,a0
000236BA <AmiBlitz3.ab3@5406>   MOVE.l a0,data1start
000236C4 <AmiBlitz3.ab3@5409>   MOVE.l #dircont,errcont
000236CA <AmiBlitz3.ab3@5410> 
000236D0 <AmiBlitz3.ab3@5411>   MOVE.l A7,errstack
000236D8 <AmiBlitz3.ab3@5412>   MOVE.w #$FFFF,dirmode
000236DC <AmiBlitz3.ab3@5414>     MOVEA.l ret15add(PC),A1
000236E2 <AmiBlitz3.ab3@5415>     MOVE.w -(A1),blitzmode
000236E4 <AmiBlitz3.ab3@5416>     CLR.l -(A1)
000236EA <AmiBlitz3.ab3@5417>     MOVE.l -(A1),firstglob
000236F0 <AmiBlitz3.ab3@5418>     MOVE.l -(A1),firstlocal
000236F6 <AmiBlitz3.ab3@5420>   CLR.w proceduremode
000236FC <AmiBlitz3.ab3@5421>   MOVE.l firstglob,D0
00023702 <AmiBlitz3.ab3@5422>   OR.l firstlocal,D0
00023706 <AmiBlitz3.ab3@5423>   BEQ.b directdo__skip
0002370C <AmiBlitz3.ab3@5424>   NOT.w proceduremode
0002370E <AmiBlitz3.ab3@5427>   MOVEA.l -(A1),A0                                         ;address of string
00023710 <AmiBlitz3.ab3@5431>   MOVE.l A0,-(A7)
0002374E <AmiBlitz3.ab3@5434>   !ComData_GetL{comFunc_DebugTrap,A1}
00023750 <AmiBlitz3.ab3@5436>   JSR (A1)                                                 ;tokenise line.....
00023752 <AmiBlitz3.ab3@5438>   MOVEA.l (A7)+,A5
0002375C <AmiBlitz3.ab3@5439>   MOVE.l directbuffer,destpointer
00023762 <AmiBlitz3.ab3@5440>   TST.b exdebug
00023766 <AmiBlitz3.ab3@5441>   BEQ 'noexdebug
00023768 <AmiBlitz3.ab3@5442>   MOVE.l a5,a0
0002376E <AmiBlitz3.ab3@5443>   MOVE.l #200,d0
00023774 <AmiBlitz3.ab3@5446>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023778 <AmiBlitz3.ab3@5447>   DBF d0,'l1
0002377E <AmiBlitz3.ab3@5452>   MOVE.l destpointer,a0
00023782 <AmiBlitz3.ab3@5453>   MOVE.w #$207c,(a0)+
00023784 <AmiBlitz3.ab3@5454>   MOVE.l a5,d0
0002378A <AmiBlitz3.ab3@5455>   ADD.l #$206,d0                                           ;constant from debuglib
0002378C <AmiBlitz3.ab3@5456>   MOVE.l d0,(a0)+
00023792 <AmiBlitz3.ab3@5457>   MOVE.l a0,destpointer
00023794 <AmiBlitz3.ab3@5458>   MOVE.l a5,a0
00023798 <AmiBlitz3.ab3@5459>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
0002379E <AmiBlitz3.ab3@5460>   MOVE.l #"$520",(a0)+
000237A2 <AmiBlitz3.ab3@5461>   MOVE.w #"4:",(a0)+
000237A8 <AmiBlitz3.ab3@5464>   CLR.w dontwrite
000237B0 <AmiBlitz3.ab3@5465>   MOVE.w #$FFFF,lasta6
000237B4 <AmiBlitz3.ab3@5466>   BSR.w compile_line                                        ;.....compile it
000237BA <AmiBlitz3.ab3@5467>   TST.b exdebug
000237BE <AmiBlitz3.ab3@5468>   BEQ 'noexdebug2
000237C4 <AmiBlitz3.ab3@5469>   JSR JL_0_6C76
000237CA <AmiBlitz3.ab3@5472>   CLR.w proceduremode
000237CE <AmiBlitz3.ab3@5473>   BSR.w errchx
000237D2 <AmiBlitz3.ab3@5474>   MOVE.w #$4EF9,D1
000237D6 <AmiBlitz3.ab3@5475>   BSR.w writeword                                          ;JMP
000237DA <AmiBlitz3.ab3@5476>   MOVE.l ret15add(PC),D1
000237DE <AmiBlitz3.ab3@5477>   BSR.w writelong                                          ;jmp to done
000237E4 <AmiBlitz3.ab3@5478>   MOVE.w dontwrite,D0
000237E8 <AmiBlitz3.ab3@5479>    BNE.w nodirmem
000237F0 <AmiBlitz3.ab3@5480>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000237F6 <AmiBlitz3.ab3@5483>   CLR.w dirmode
000237FC <AmiBlitz3.ab3@5484>   MOVE.w ret15cc(PC),$3C(A7)
00023806 <AmiBlitz3.ab3@5485>   MOVE.l trap15temp,destbufferend
00023810 <AmiBlitz3.ab3@5486>   MOVE.l trap15temp2,destbufferstart
0002381A <AmiBlitz3.ab3@5487>   MOVE.l tempdata1start,data1start
00023824 <AmiBlitz3.ab3@5488>   MOVE.l templibend,libend
00023828 <AmiBlitz3.ab3@5489>   MOVEM.l (A7)+,D0-D7/A0-A6
0002382C <AmiBlitz3.ab3@5490>   BSR.w Aclearcache                                        ;selden used
0002382E <AmiBlitz3.ab3@5491> RTR
00023832 <AmiBlitz3.ab3@5494>   MOVEA.l ret15add(PC),A0
00023834 <AmiBlitz3.ab3@5495>   SUBQ.w #2,A0
00023836 <AmiBlitz3.ab3@5496>   MOVE.l D0,-(A0)
0002383A <AmiBlitz3.ab3@5497> BRA.w direxit
0002383E <AmiBlitz3.ab3@5501>   MOVE.w $6(A3),D1
00023842 <AmiBlitz3.ab3@5502>   BSR.w uselib                                             ;get lib for base address
00023846 <AmiBlitz3.ab3@5503>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023848 <AmiBlitz3.ab3@5504>   ADDQ.w #8,A3
0002384A <AmiBlitz3.ab3@5505>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
0002384C <AmiBlitz3.ab3@5506>   MOVE.l A3,-(A7)
0002384E <AmiBlitz3.ab3@5510>   MOVEQ.l #$00,D3
00023854 <AmiBlitz3.ab3@5511>   JSR checka4a5
00023856 <AmiBlitz3.ab3@5513>   MOVE.b (A3)+,D1
0002385A <AmiBlitz3.ab3@5514>    BMI.w stamigalib__done
0002385C <AmiBlitz3.ab3@5515>   MOVEQ.l #$03,D2
0002385E <AmiBlitz3.ab3@5516>   ADDQ.w #1,D3
00023862 <AmiBlitz3.ab3@5517>   MOVEM.l D3/A3,-(A7)
00023868 <AmiBlitz3.ab3@5518>   MOVE.b funcparloop,-(a7)
00023870 <AmiBlitz3.ab3@5519>   MOVE.b #0,funcparloop
00023876 <AmiBlitz3.ab3@5520>   MOVE.l leftsidetype,-(a7)
0002387C <AmiBlitz3.ab3@5521>   MOVE.l rightsidetype,-(a7)
00023882 <AmiBlitz3.ab3@5522>   MOVE.w leftsideflagmask,-(a7)
00023888 <AmiBlitz3.ab3@5523>   MOVE.w rightsideflagmask,-(a7)
0002388E <AmiBlitz3.ab3@5524>   CLR.l leftsidetype
00023894 <AmiBlitz3.ab3@5525>   CLR.l rightsidetype
0002389A <AmiBlitz3.ab3@5526>   CLR.w leftsideflagmask
000238A0 <AmiBlitz3.ab3@5527>   CLR.w rightsideflagmask
000238A6 <AmiBlitz3.ab3@5528>   MOVE.b blitzparloop,-(a7)
000238AE <AmiBlitz3.ab3@5529>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
000238B4 <AmiBlitz3.ab3@5530>   JSR peval
000238BA <AmiBlitz3.ab3@5531>   MOVE.b (a7)+,blitzparloop
000238C0 <AmiBlitz3.ab3@5532>   MOVE.w (a7)+,rightsideflagmask
000238C6 <AmiBlitz3.ab3@5533>   MOVE.w (a7)+,leftsideflagmask
000238CC <AmiBlitz3.ab3@5534>   MOVE.l (a7)+,rightsidetype
000238D2 <AmiBlitz3.ab3@5535>   MOVE.l (a7)+,leftsidetype
000238D8 <AmiBlitz3.ab3@5536>   MOVE.b (a7)+,funcparloop
000238DC <AmiBlitz3.ab3@5537>   MOVEM.l (A7)+,D3/A3
000238E0 <AmiBlitz3.ab3@5538>   CMP.w #$2C,D0
000238E4 <AmiBlitz3.ab3@5539>    BEQ.w stamigalib__loop
000238E6 <AmiBlitz3.ab3@5540>   TST.b (A3)
000238EA <AmiBlitz3.ab3@5541>    BPL.w syntaxerr
000238EC <AmiBlitz3.ab3@5544>   MOVEA.l (A7)+,A3
000238EE <AmiBlitz3.ab3@5545>   SUBQ.w #1,D3
000238F2 <AmiBlitz3.ab3@5546>    BPL.w stamigalib__toend
000238F6 <AmiBlitz3.ab3@5547>    BSR.w get1bytemain                                      ;no pars - get :
000238FA <AmiBlitz3.ab3@5548> BRA.w stamigalib__nopars
000238FC <AmiBlitz3.ab3@5551>   TST.b (A3)+                                              ;go to end of params
00023900 <AmiBlitz3.ab3@5552>    BPL.w stamigalib__toend
00023902 <AmiBlitz3.ab3@5553>   SUBQ.w #1,A3
00023904 <AmiBlitz3.ab3@5556>    MOVEQ.l #$00,D1
00023906 <AmiBlitz3.ab3@5557>    MOVE.b -(A3),D1
0002390A <AmiBlitz3.ab3@5558>    BTST #$4,D1
0002390E <AmiBlitz3.ab3@5559>     BNE.w stamigalib__addreg
00023910 <AmiBlitz3.ab3@5560>    LSL.w #8,D1
00023912 <AmiBlitz3.ab3@5561>    LSL.w #1,D1
00023916 <AmiBlitz3.ab3@5562>    ORI.w #$201F,D1
0002391A <AmiBlitz3.ab3@5563>  BRA.w stamigalib__gotit
0002391E <AmiBlitz3.ab3@5566>    ANDI.w #$7,D1
00023920 <AmiBlitz3.ab3@5567>    LSL.w #8,D1
00023922 <AmiBlitz3.ab3@5568>    LSL.w #1,D1
00023926 <AmiBlitz3.ab3@5569>    ORI.w #$205F,D1
0002392A <AmiBlitz3.ab3@5572>     BSR.w writeword
0002392E <AmiBlitz3.ab3@5573>   DBF D3,stamigalib__loop2
00023934 <AmiBlitz3.ab3@5576>   MOVE.w (A7)+,libjsr+2
0002393A <AmiBlitz3.ab3@5577>   MOVE.w (A7)+,libbase+2
00023940 <AmiBlitz3.ab3@5578>   MOVE.l libbase,D1
00023944 <AmiBlitz3.ab3@5579>    BSR.w writelong
0002394A <AmiBlitz3.ab3@5580>   MOVE.l libjsr,D1
00023950 <AmiBlitz3.ab3@5581>   JSR writelong
00023956 <AmiBlitz3.ab3@5582>   JSR restorea4a5
00023958 <AmiBlitz3.ab3@5583>   RTS
0002395E <AmiBlitz3.ab3@5586>   MOVE.l data1,D4
00023964 <AmiBlitz3.ab3@5587>   SUB.l data1start,D4
0002396A <AmiBlitz3.ab3@5588>   ADD.l #10000,d4
00023970 <AmiBlitz3.ab3@5589>   MOVE.l libend,D3
00023976 <AmiBlitz3.ab3@5590>   SUB.l destbufferend,D3
0002397C <AmiBlitz3.ab3@5591>   ADD.l #40000,d3
00023982 <AmiBlitz3.ab3@5592>   MOVE.l bigpc,D2
00023988 <AmiBlitz3.ab3@5593>   SUB.l destbufferstart,D2
0002398E <AmiBlitz3.ab3@5594>   ADD.l #20000,d2
00023994 <AmiBlitz3.ab3@5595>   MOVE.l databuffer,D5
0002399A <AmiBlitz3.ab3@5596>   ADD.l #10000,D5
0002399E <AmiBlitz3.ab3@5597> BRA newallox
000239A4 <AmiBlitz3.ab3@5601>   MOVE.l objectbuffer,D2
000239A6 <AmiBlitz3.ab3@5602>   LSR.l #1,D2
000239AC <AmiBlitz3.ab3@5603>   ADD.l objectbuffer,D2
000239B2 <AmiBlitz3.ab3@5604>   MOVE.l libsbuffer,D3
000239B4 <AmiBlitz3.ab3@5605>   LSR.l #1,D3
000239BA <AmiBlitz3.ab3@5606>   ADD.l libsbuffer,D3
000239C0 <AmiBlitz3.ab3@5607>   MOVE.l systembuffer,D4
000239C2 <AmiBlitz3.ab3@5608>   LSR.l #1,D4
000239C8 <AmiBlitz3.ab3@5609>   ADD.l systembuffer,D4
000239CE <AmiBlitz3.ab3@5610>   MOVE.l databuffer,D5
000239D0 <AmiBlitz3.ab3@5611>   LSR.l #1,D5
000239D6 <AmiBlitz3.ab3@5612>   ADD.l databuffer,D5
000239DA <AmiBlitz3.ab3@5613> BRA.w newallox
000239E0 <AmiBlitz3.ab3@5617>   MOVE.l bigpc,D2
000239E6 <AmiBlitz3.ab3@5618>   SUB.l destbufferstart,D2                                     ;size of object buffer
000239EC <AmiBlitz3.ab3@5619>   SUB.l savefuncspace,d2
000239F2 <AmiBlitz3.ab3@5621>   TST.w debugversion
000239F6 <AmiBlitz3.ab3@5622>    BNE.b alloxadj__skip
000239FC <AmiBlitz3.ab3@5623>   ADDI.l #$800,D2
00023A02 <AmiBlitz3.ab3@5626>   MOVE.l libend,D3
00023A08 <AmiBlitz3.ab3@5627>   SUB.l destbufferend,D3
00023A0E <AmiBlitz3.ab3@5629>   MOVE.l data1,D4
00023A14 <AmiBlitz3.ab3@5630>   SUB.l data1start,D4
00023A1A <AmiBlitz3.ab3@5632>   MOVE.l data2,D5
00023A20 <AmiBlitz3.ab3@5633>   SUB.l data2at,D5
00023A26 <AmiBlitz3.ab3@5635>   CLR.l morememadd
00023A2A <AmiBlitz3.ab3@5638>   BSR.w makeallox
00023A2E <AmiBlitz3.ab3@5639>   BNE.w newallox__done
00023A32 <AmiBlitz3.ab3@5640> BRA.w init_buffers
00023A34 <AmiBlitz3.ab3@5643> RTS
00023A3A <AmiBlitz3.ab3@5647>   MOVEA.l _execbase,A6
00023A40 <AmiBlitz3.ab3@5648>   MOVE.l objlen,D0
00023A44 <AmiBlitz3.ab3@5649>   BEQ.w freeallox__skip
00023A4A <AmiBlitz3.ab3@5650>   CLR.l objlen
00023A50 <AmiBlitz3.ab3@5651>   MOVEA.l destbufferstart,A1
00023A56 <AmiBlitz3.ab3@5652>   MOVE.l mempool,a0
00023A5A <AmiBlitz3.ab3@5653> JMP _FreeVec(A6)
00023A5C <AmiBlitz3.ab3@5656> RTS
00023A62 <AmiBlitz3.ab3@5660>   MOVE.l objectbuffer,D2
00023A68 <AmiBlitz3.ab3@5661>   MOVE.l libsbuffer,D3
00023A6E <AmiBlitz3.ab3@5662>   MOVE.l systembuffer,D4
00023A74 <AmiBlitz3.ab3@5663>   MOVE.l databuffer,D5
00023A7C <AmiBlitz3.ab3@5666>   MOVE.w #$FFFF,anyerrs
00023A80 <AmiBlitz3.ab3@5667>   BSR.w freeallox
00023A82 <AmiBlitz3.ab3@5671>   ADDQ.l #1,D2
00023A86 <AmiBlitz3.ab3@5672>   BCLR #$0,D2
00023A88 <AmiBlitz3.ab3@5673>   ADDQ.l #1,D3
00023A8C <AmiBlitz3.ab3@5674>   BCLR #$0,D3
00023A8E <AmiBlitz3.ab3@5675>   ADDQ.l #1,D4
00023A92 <AmiBlitz3.ab3@5676>   BCLR #$0,D4
00023A94 <AmiBlitz3.ab3@5677>   TST.l d5
00023A98 <AmiBlitz3.ab3@5678>   BNE 'l1
00023A9A <AmiBlitz3.ab3@5681>   ADDQ.l #1,D5
00023A9E <AmiBlitz3.ab3@5682>   BCLR #$0,D5
00023AA0 <AmiBlitz3.ab3@5683>   MOVE.l D2,D0
00023AA2 <AmiBlitz3.ab3@5684>   ADD.l D3,D0
00023AA4 <AmiBlitz3.ab3@5685>   ADD.l D4,D0
00023AA6 <AmiBlitz3.ab3@5686>   ADD.l D5,D0
00023AAC <AmiBlitz3.ab3@5687>   ADD.l #moremem,d0
00023AAE <AmiBlitz3.ab3@5688>   MOVE.l D0,D6
00023AB4 <AmiBlitz3.ab3@5689>   MOVE.l #MemfPublic_MemfClear,D1
00023ABA <AmiBlitz3.ab3@5690>   MOVE.l mempool,a0
00023AC0 <AmiBlitz3.ab3@5691>   MOVEA.l _execbase,A6
00023AC4 <AmiBlitz3.ab3@5692>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023AC6 <AmiBlitz3.ab3@5694>   TST.l D0
00023ACA <AmiBlitz3.ab3@5695>   BEQ.w exit_initbuffers
00023AD0 <AmiBlitz3.ab3@5696>   MOVE.l D6,objlen
00023AD6 <AmiBlitz3.ab3@5697>   MOVE.l D2,objectbuffer
00023ADC <AmiBlitz3.ab3@5698>   MOVE.l D3,libsbuffer
00023AE2 <AmiBlitz3.ab3@5699>   MOVE.l D4,systembuffer
00023AE8 <AmiBlitz3.ab3@5700>   MOVE.l D5,databuffer
00023AEE <AmiBlitz3.ab3@5701>   MOVE.l D0,destbufferstart
00023B22 <AmiBlitz3.ab3@5704>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023B24 <AmiBlitz3.ab3@5705>   ADD.l D2,D0
00023B2A <AmiBlitz3.ab3@5706>   MOVE.l D0,destbufferend
00023B2C <AmiBlitz3.ab3@5707>   ADD.l D3,D0
00023B32 <AmiBlitz3.ab3@5708>   MOVE.l D0,data1start
00023B34 <AmiBlitz3.ab3@5709>   ADD.l D4,D0
00023B3A <AmiBlitz3.ab3@5710>   MOVE.l D0,data2at
00023B3C <AmiBlitz3.ab3@5711>   ADD.l D5,D0
00023B42 <AmiBlitz3.ab3@5712>   MOVE.l D0,allat
00023B44 <AmiBlitz3.ab3@5715> RTS
00023B48 <AmiBlitz3.ab3@5719>   Dc.b $00,$00,$00,$01                                     ;         1
00023B4C <AmiBlitz3.ab3@5720>   Dc.b $00,$00,$00,$0A                                     ;        10
00023B50 <AmiBlitz3.ab3@5721>   Dc.b $00,$00,$00,$64                                     ;       100
00023B54 <AmiBlitz3.ab3@5722>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023B58 <AmiBlitz3.ab3@5723>   Dc.b $00,$00,$27,$10                                     ;     10000
00023B5C <AmiBlitz3.ab3@5724>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023B60 <AmiBlitz3.ab3@5725>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023B64 <AmiBlitz3.ab3@5726>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023B68 <AmiBlitz3.ab3@5727>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023B6C <AmiBlitz3.ab3@5728>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023B6E <AmiBlitz3.ab3@5732>   MOVEQ.l #$00,D1                                          ;no zero printed
00023B70 <AmiBlitz3.ab3@5733>   MOVEQ.l #$24,D3                                          ; "$"
00023B72 <AmiBlitz3.ab3@5736>   MOVEQ.l #$30,D4                                          ; "0"
00023B76 <AmiBlitz3.ab3@5739>     CMP.l divisors(PC,D3.W),D2
00023B7A <AmiBlitz3.ab3@5740>     BCS.w makelong__skip
00023B7E <AmiBlitz3.ab3@5741>     SUB.l divisors(PC,D3.W),D2
00023B80 <AmiBlitz3.ab3@5742>     ADDQ.w #1,D4
00023B84 <AmiBlitz3.ab3@5743> BRA.w makelong__loop2
00023B88 <AmiBlitz3.ab3@5746>   CMP.b #"0",D4
00023B8C <AmiBlitz3.ab3@5747>   BNE.w makelong__doit
00023B8E <AmiBlitz3.ab3@5748>   TST.w D1
00023B92 <AmiBlitz3.ab3@5749>   BEQ.w makelong__skip2
00023B94 <AmiBlitz3.ab3@5752>   MOVE.b D4,(A0)+
00023B96 <AmiBlitz3.ab3@5753>   MOVEQ.l #$01,D1
00023B98 <AmiBlitz3.ab3@5756>   SUBQ.w #4,D3
00023B9C <AmiBlitz3.ab3@5757>   BPL.w makelong__loop
00023B9E <AmiBlitz3.ab3@5758>   TST.w D1
00023BA2 <AmiBlitz3.ab3@5759>   BNE.w makelong__skip3
00023BA6 <AmiBlitz3.ab3@5760>   MOVE.b #"0",(A0)+
00023BA8 <AmiBlitz3.ab3@5763>   CLR.b (A0)
00023BAA <AmiBlitz3.ab3@5764> RTS
00023BCA <AmiBlitz3.ab3@5767> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023C8A <AmiBlitz3.ab3@5768> str_residentpath:       Ds.l 48                                                ;respath org source
00023D4A <AmiBlitz3.ab3@5769> str_residentname:       Ds.l 48                                                ;resname org source
00023D50 <AmiBlitz3.ab3@5773>   MOVE.l macrobase,D0
00023D54 <AmiBlitz3.ab3@5774>    BNE.w create_residentfile
00023D5A <AmiBlitz3.ab3@5775>   MOVE.l newtype_string,D0
00023D5E <AmiBlitz3.ab3@5776>    BNE.w create_residentfile
00023D64 <AmiBlitz3.ab3@5777>   MOVEA.l labelbase,A2
00023D68 <AmiBlitz3.ab3@5780>     CMPA.w #$0,A2
00023D6C <AmiBlitz3.ab3@5781>      BEQ.w menu_createresidentfile__err
00023D74 <AmiBlitz3.ab3@5782>     CMPI.l #$1,$4(A2)
00023D78 <AmiBlitz3.ab3@5783>      BEQ.w create_residentfile
00023D7A <AmiBlitz3.ab3@5784>     MOVEA.l (A2),A2
00023D7E <AmiBlitz3.ab3@5785> BRA.w menu_createresidentfile__loop
00023DA8 <AmiBlitz3.ab3@5788>   !basic
00023E0A <AmiBlitz3.ab3@5789> 
00023E28 <AmiBlitz3.ab3@5790>   !asm
00023E2A <AmiBlitz3.ab3@5791> RTS
00023E68 <AmiBlitz3.ab3@5797>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023E6E <AmiBlitz3.ab3@5798>   LEA str_residentrequester,A2
00023E74 <AmiBlitz3.ab3@5799>   LEA str_residentpath,A0
00023E7A <AmiBlitz3.ab3@5800>   LEA str_residentname,A1
00023EA4 <AmiBlitz3.ab3@5801>   !basic
00023EDC <AmiBlitz3.ab3@5802>     Poke$ ?str_residentpath,my_residentsdir$
00023F08 <AmiBlitz3.ab3@5803>     Poke$ ?str_residentname,".res"
00023F26 <AmiBlitz3.ab3@5804>   !asm
00023F28 <AmiBlitz3.ab3@5806>   JSR (A3)                                                 ;open ped filerequest
00023F2C <AmiBlitz3.ab3@5808>   BEQ.w menu_createresidentfile__err
00023F2E <AmiBlitz3.ab3@5811>   MOVE.l D0,D1
00023F34 <AmiBlitz3.ab3@5812>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023F38 <AmiBlitz3.ab3@5813>   MOVEA.l _dosbase(PC),A6
00023F3C <AmiBlitz3.ab3@5814>   JSR _Open(A6)
00023F3E <AmiBlitz3.ab3@5815>   MOVE.l D0,D7                                             ;handle
00023F42 <AmiBlitz3.ab3@5816>   BEQ.w menu_createresidentfile__err
00023F46 <AmiBlitz3.ab3@5817>   MOVEM.l d2-d7/a0-a6,-(a7)
00023F4C <AmiBlitz3.ab3@5818>   LEA devo,a0
00023F52 <AmiBlitz3.ab3@5819>   LEA ptr_parameterstore,a1
00023F54 <AmiBlitz3.ab3@5822>     MOVE.b (a0)+,(a1)+
00023F58 <AmiBlitz3.ab3@5823>   BNE 'l1
00023F5A <AmiBlitz3.ab3@5824>   MOVEQ #13,d2
00023F60 <AmiBlitz3.ab3@5825>   JSR findlabel2
00023F64 <AmiBlitz3.ab3@5826>   BNE 'd
00023F68 <AmiBlitz3.ab3@5827>   TST.l 8(a2)
00023F6C <AmiBlitz3.ab3@5828>   BEQ 'd2
00023F96 <AmiBlitz3.ab3@5829>   !basic
00023FF8 <AmiBlitz3.ab3@5830>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00024016 <AmiBlitz3.ab3@5831>   !asm
0002401A <AmiBlitz3.ab3@5832>   MOVEM.l (a7)+,d2-d7/a0-a6
0002401E <AmiBlitz3.ab3@5833>   MOVEA.l _dosbase(PC),A6
00024020 <AmiBlitz3.ab3@5834>   MOVE.l d7,d1
00024024 <AmiBlitz3.ab3@5835>   JSR _Close(a6)
00024028 <AmiBlitz3.ab3@5836> BRA menu_createresidentfile__err
0002402C <AmiBlitz3.ab3@5840>   MOVEM.l (a7)+,d2-d7/a0-a6
00024030 <AmiBlitz3.ab3@5841>   BSR.w call_setpointerbusy
00024034 <AmiBlitz3.ab3@5843>   BSR.w AJL_0_7962
00024036 <AmiBlitz3.ab3@5844>   MOVE.l D7,D1
0002403C <AmiBlitz3.ab3@5845>   MOVE.l #tsthead,D2                                       ;header
0002403E <AmiBlitz3.ab3@5846>   MOVEQ.l #$20,D3
00024042 <AmiBlitz3.ab3@5847>   MOVEA.l _dosbase(PC),A6
00024046 <AmiBlitz3.ab3@5848>   JSR _Write(A6)
00024048 <AmiBlitz3.ab3@5849>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002404C <AmiBlitz3.ab3@5850>   BSR.w restypes
00024050 <AmiBlitz3.ab3@5851>   BSR.w resmacs
00024054 <AmiBlitz3.ab3@5852>   BSR.w resconsts
00024056 <AmiBlitz3.ab3@5853>   MOVE.l D6,D3
00024058 <AmiBlitz3.ab3@5854>   ADDQ.l #3,D3
0002405E <AmiBlitz3.ab3@5855>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00024060 <AmiBlitz3.ab3@5856>   MOVE.l D3,-(A7)
00024062 <AmiBlitz3.ab3@5857>   SUB.l D6,D3
00024066 <AmiBlitz3.ab3@5858>   BEQ.w menu_createresidentfile__noalign
0002406C <AmiBlitz3.ab3@5859>   MOVE.l #writelist,D2
0002406E <AmiBlitz3.ab3@5860>   MOVE.l D7,D1
00024074 <AmiBlitz3.ab3@5861>   MOVEA.l _dosbase,A6
00024078 <AmiBlitz3.ab3@5862>   JSR _Write(A6)
00024082 <AmiBlitz3.ab3@5865>    MOVE.l hunkoffsetcounter,tstsize3
00024086 <AmiBlitz3.ab3@5866>    BEQ.w menu_createresidentfile__skip2a
00024088 <AmiBlitz3.ab3@5867>   MOVE.l D7,D1
0002408E <AmiBlitz3.ab3@5868>   MOVE.l #tstend,D2
00024090 <AmiBlitz3.ab3@5869>   MOVEQ.l #$0C,D3
00024096 <AmiBlitz3.ab3@5870>   MOVEA.l _dosbase,A6
0002409A <AmiBlitz3.ab3@5871>    JSR _Write(A6)
000240A0 <AmiBlitz3.ab3@5875>   MOVEA.l hunkoffsetbase,A2
000240A4 <AmiBlitz3.ab3@5878>   CMPA.w #$0,A2
000240A8 <AmiBlitz3.ab3@5879>    BEQ.w menu_createresidentfile__skip2
000240AC <AmiBlitz3.ab3@5880>   LEA $4(A2),A1
000240AE <AmiBlitz3.ab3@5881>   MOVE.l D7,D1
000240B0 <AmiBlitz3.ab3@5882>   MOVE.l A1,D2
000240B2 <AmiBlitz3.ab3@5883>   MOVEQ.l #$04,D3
000240B8 <AmiBlitz3.ab3@5884>   MOVEA.l _dosbase,A6
000240BC <AmiBlitz3.ab3@5885>    JSR _Write(A6)
000240BE <AmiBlitz3.ab3@5886>   MOVEA.l (A2),A2
000240C2 <AmiBlitz3.ab3@5887> BRA.w menu_createresidentfile__oloop
000240C4 <AmiBlitz3.ab3@5890>   MOVE.l D7,D1
000240CA <AmiBlitz3.ab3@5891>   MOVE.l #zero,D2
000240CC <AmiBlitz3.ab3@5892>   MOVEQ.l #$04,D3
000240D2 <AmiBlitz3.ab3@5893>   MOVEA.l _dosbase,A6
000240D6 <AmiBlitz3.ab3@5894>   JSR _Write(A6)
000240D8 <AmiBlitz3.ab3@5897>   MOVE.l D7,D1
000240DE <AmiBlitz3.ab3@5898>   MOVE.l #tstdone,D2
000240E0 <AmiBlitz3.ab3@5899>   MOVEQ.l #$04,D3
000240E6 <AmiBlitz3.ab3@5900>   MOVEA.l _dosbase,A6
000240EA <AmiBlitz3.ab3@5901>    JSR _Write(A6)
000240EC <AmiBlitz3.ab3@5902>   MOVE.l (A7)+,D0
000240EE <AmiBlitz3.ab3@5903>   LSR.l #2,D0
000240F4 <AmiBlitz3.ab3@5904>   MOVE.l D0,temp1
000240F6 <AmiBlitz3.ab3@5905>   MOVE.l D7,D1
000240F8 <AmiBlitz3.ab3@5906>   MOVEQ.l #$14,D2
000240FA <AmiBlitz3.ab3@5907>   MOVEQ.l #-$01,D3
000240FE <AmiBlitz3.ab3@5908>   JSR _Seek(A6)
00024100 <AmiBlitz3.ab3@5909>   MOVE.l D7,D1
00024106 <AmiBlitz3.ab3@5910>   MOVE.l #temp1,D2
00024108 <AmiBlitz3.ab3@5911>   MOVEQ.l #$04,D3
0002410C <AmiBlitz3.ab3@5912>    JSR _Write(A6)
0002410E <AmiBlitz3.ab3@5913>   MOVE.l D7,D1
00024110 <AmiBlitz3.ab3@5914>   MOVEQ.l #$1C,D2
00024112 <AmiBlitz3.ab3@5915>   MOVEQ.l #-$01,D3
00024116 <AmiBlitz3.ab3@5916>    JSR _Seek(A6)
00024118 <AmiBlitz3.ab3@5917>   MOVE.l D7,D1
0002411E <AmiBlitz3.ab3@5918>   MOVE.l #temp1,D2
00024120 <AmiBlitz3.ab3@5919>   MOVEQ.l #$04,D3
00024124 <AmiBlitz3.ab3@5920>    JSR _Write(A6)
00024126 <AmiBlitz3.ab3@5921>   MOVE.l D7,D1
0002412A <AmiBlitz3.ab3@5922>    JSR _Close(A6)
0002412E <AmiBlitz3.ab3@5923> BRA.w call_setpointernormal
00024130 <AmiBlitz3.ab3@5927>   ADDQ.w #5,D1
00024132 <AmiBlitz3.ab3@5928>   ADDQ.b #8,D0
00024136 <AmiBlitz3.ab3@5931>     CMPA.w #$0,A2
0002413A <AmiBlitz3.ab3@5932>     BEQ.w writelist__done
0002413E <AmiBlitz3.ab3@5933>      BSR.w writeitem
00024140 <AmiBlitz3.ab3@5934>     MOVEA.l (A2),A2
00024144 <AmiBlitz3.ab3@5935> BRA.w writelist__loop
00024146 <AmiBlitz3.ab3@5938> RTS
00024148 <AmiBlitz3.ab3@5941>   MOVEQ.l #$00,D3
0002414C <AmiBlitz3.ab3@5942>   MOVE.b $0(A2,D5.W),D3
0002414E <AmiBlitz3.ab3@5943>   ADDQ.w #1,D3
00024152 <AmiBlitz3.ab3@5944>   BCLR #$0,D3                                              ;word align
00024154 <AmiBlitz3.ab3@5945>   MOVE.l (A2),-(A7)
00024158 <AmiBlitz3.ab3@5946>    BEQ.w writeitem__skip
0002415C <AmiBlitz3.ab3@5947>    BSR.w resoff
0002415E <AmiBlitz3.ab3@5948>   ADD.l D3,D6
00024160 <AmiBlitz3.ab3@5949>   MOVE.l D6,(A2)
00024162 <AmiBlitz3.ab3@5950>   SUB.l D3,D6
00024164 <AmiBlitz3.ab3@5953>    ADD.l D3,D6
00024166 <AmiBlitz3.ab3@5954>   MOVE.l A2,D2
00024168 <AmiBlitz3.ab3@5955>   MOVE.l D7,D1
0002416E <AmiBlitz3.ab3@5956>   MOVEA.l _dosbase,A6
00024172 <AmiBlitz3.ab3@5957>    JSR _Write(A6)
00024174 <AmiBlitz3.ab3@5958>   MOVE.l (A7)+,(A2)
00024176 <AmiBlitz3.ab3@5959> RTS
00024178 <AmiBlitz3.ab3@5962>   MOVE.l D6,D2
0002417C <AmiBlitz3.ab3@5963> BRA.w addhunkoffset
00024180 <AmiBlitz3.ab3@5967>     CMPA.w #$0,A2
00024184 <AmiBlitz3.ab3@5968>      BEQ.w writeoffs__done
0002418A <AmiBlitz3.ab3@5969>     MOVEA.l newtypebase,A1
0002418C <AmiBlitz3.ab3@5970>     MOVEQ.l #$00,D1
00024190 <AmiBlitz3.ab3@5973>       CMPA.w #$0,A1
00024194 <AmiBlitz3.ab3@5974>       BEQ.w writeoffs__found
00024198 <AmiBlitz3.ab3@5975>       CMPA.l $A(A2),A1
0002419C <AmiBlitz3.ab3@5976>        BEQ.w writeoffs__found
0002419E <AmiBlitz3.ab3@5977>       ADDQ.w #1,D1
000241A0 <AmiBlitz3.ab3@5978>       MOVEA.l (A1),A1
000241A4 <AmiBlitz3.ab3@5979> BRA.w writeoffs__loop2
000241A8 <AmiBlitz3.ab3@5982>     MOVE.w $A(A2),-(A7)
000241AC <AmiBlitz3.ab3@5983>     MOVE.w D1,$A(A2)
000241B0 <AmiBlitz3.ab3@5984>      BSR.w writeitem
000241B4 <AmiBlitz3.ab3@5985>     MOVE.w (A7)+,$A(A2)
000241B6 <AmiBlitz3.ab3@5986>     MOVEA.l (A2),A2
000241BA <AmiBlitz3.ab3@5987> BRA.w writeoffs
000241BC <AmiBlitz3.ab3@5990> RTS
000241BE <AmiBlitz3.ab3@5994>   MOVEQ.l #$00,D0
000241C2 <AmiBlitz3.ab3@5997>   CMPA.w #$0,A2
000241C6 <AmiBlitz3.ab3@5998>    BEQ.w countem__done
000241C8 <AmiBlitz3.ab3@5999>   ADDQ.w #1,D0
000241CA <AmiBlitz3.ab3@6000>   MOVEA.l (A2),A2
000241CE <AmiBlitz3.ab3@6001> BRA.w countem__loop
000241D4 <AmiBlitz3.ab3@6004>   MOVE.w D0,temp1
000241D6 <AmiBlitz3.ab3@6005>   MOVE.l D7,D1
000241DC <AmiBlitz3.ab3@6006>   MOVE.l #temp1,D2
000241DE <AmiBlitz3.ab3@6007>   MOVEQ.l #$02,D3
000241E0 <AmiBlitz3.ab3@6008>   ADDQ.l #2,D6
000241E6 <AmiBlitz3.ab3@6009>   MOVEA.l _dosbase,A6
000241EA <AmiBlitz3.ab3@6010> JMP _Write(A6)
000241F0 <AmiBlitz3.ab3@6014>    TST.b resdisable
000241F4 <AmiBlitz3.ab3@6015>    BEQ resmacs__l1
000241FA <AmiBlitz3.ab3@6016>    MOVE.l currentmacroaddr,a3
00024200 <AmiBlitz3.ab3@6017>    CMP.l #0,a3
00024204 <AmiBlitz3.ab3@6018>    BEQ resmacs__l1
00024206 <AmiBlitz3.ab3@6019>    MOVE.l (a3),a3
0002420A <AmiBlitz3.ab3@6020> BRA resmacs__l2
00024210 <AmiBlitz3.ab3@6023>   MOVEA.l macrobase,A3                                     ;??begin org code??
00024212 <AmiBlitz3.ab3@6026>   MOVEA.l A3,A2
00024216 <AmiBlitz3.ab3@6027>   BSR.w countem
0002421A <AmiBlitz3.ab3@6030>    CMPA.w #$0,A3
0002421E <AmiBlitz3.ab3@6031>    BEQ.w resmacs__done
00024220 <AmiBlitz3.ab3@6032>   MOVE.l D6,D5
00024222 <AmiBlitz3.ab3@6033>   MOVE.l (A3),-(A7)
00024226 <AmiBlitz3.ab3@6034>   MOVE.l $4(A3),-(A7)
00024228 <AmiBlitz3.ab3@6035>   MOVEQ.l #$00,D3
0002422C <AmiBlitz3.ab3@6036>   MOVE.b $C(A3),D3
0002422E <AmiBlitz3.ab3@6037>   ADDQ.w #1,D3
00024232 <AmiBlitz3.ab3@6038>   BCLR #$0,D3
00024234 <AmiBlitz3.ab3@6039>   ADD.l D3,D6                                              ;add len of struct
00024238 <AmiBlitz3.ab3@6040>   TST.w $8(A3)
0002423C <AmiBlitz3.ab3@6041>    BEQ.w resmacs__notext
00024240 <AmiBlitz3.ab3@6042>   MOVE.l D6,$4(A3)
00024242 <AmiBlitz3.ab3@6043>   MOVE.l D5,D2
00024244 <AmiBlitz3.ab3@6044>   ADDQ.l #4,D2
00024248 <AmiBlitz3.ab3@6045>    BSR.w addhunkoffset
0002424A <AmiBlitz3.ab3@6048>   MOVEQ.l #$00,D4
0002424E <AmiBlitz3.ab3@6049>   MOVE.w $8(A3),D4
00024250 <AmiBlitz3.ab3@6050>   ADDQ.w #1,D4
00024254 <AmiBlitz3.ab3@6051>   BCLR #$0,D4
00024256 <AmiBlitz3.ab3@6052>   ADD.l D4,D6
00024258 <AmiBlitz3.ab3@6053>   TST.l (A3)
0002425C <AmiBlitz3.ab3@6054>    BEQ.w resmacs__nomore
0002425E <AmiBlitz3.ab3@6055>   MOVE.l D6,(A3)
00024260 <AmiBlitz3.ab3@6056>   MOVE.l D5,D2
00024264 <AmiBlitz3.ab3@6057>    BSR.w addhunkoffset
00024266 <AmiBlitz3.ab3@6060>   MOVE.l A3,D2
00024268 <AmiBlitz3.ab3@6061>   MOVE.l D7,D1
0002426E <AmiBlitz3.ab3@6063>    MOVEA.l _dosbase,A6
00024272 <AmiBlitz3.ab3@6064>    JSR _Write(a6)
00024274 <AmiBlitz3.ab3@6065>   TST.l D4
00024278 <AmiBlitz3.ab3@6066>    BEQ.w resmacs__skip
0002427A <AmiBlitz3.ab3@6067>   MOVE.l (A7),D2
0002427C <AmiBlitz3.ab3@6068>   MOVE.l D4,D3
0002427E <AmiBlitz3.ab3@6069>   MOVE.l D7,D1
00024284 <AmiBlitz3.ab3@6071>     MOVEA.l _dosbase,A6
00024288 <AmiBlitz3.ab3@6072>    JSR _Write(A6)
0002428C <AmiBlitz3.ab3@6075>   MOVE.l (A7)+,$4(A3)
0002428E <AmiBlitz3.ab3@6076>   MOVE.l (A7)+,(A3)
00024290 <AmiBlitz3.ab3@6077>   MOVEA.l (A3),A3
00024294 <AmiBlitz3.ab3@6078> BRA.w resmacs__loop
00024296 <AmiBlitz3.ab3@6081> RTS
0002429C <AmiBlitz3.ab3@6085>   TST.b resdisable
000242A0 <AmiBlitz3.ab3@6086>   BEQ restypes__l1
000242A6 <AmiBlitz3.ab3@6087>   MOVE.l lastrestype,a3
000242AC <AmiBlitz3.ab3@6088>   CMP.l #0,a3
000242B0 <AmiBlitz3.ab3@6089>   BEQ restypes__l1
000242B2 <AmiBlitz3.ab3@6090>   MOVE.l (a3),a3
000242B6 <AmiBlitz3.ab3@6091> BRA restypes__l2
000242BC <AmiBlitz3.ab3@6094>   MOVEA.l newtype_string,A3
000242BE <AmiBlitz3.ab3@6097>   MOVEA.l A3,A2
000242C2 <AmiBlitz3.ab3@6098>    BSR.w countem
000242C6 <AmiBlitz3.ab3@6101>    CMPA.w #$0,A3
000242CA <AmiBlitz3.ab3@6102>    BEQ.w restypes__done
000242CC <AmiBlitz3.ab3@6103>   MOVE.l D6,-(A7)
000242D0 <AmiBlitz3.ab3@6104>   MOVEA.l $4(A3),A2
000242D2 <AmiBlitz3.ab3@6105>   MOVEQ.l #$0E,D5
000242D6 <AmiBlitz3.ab3@6106>    BSR.w writeoffs
000242D8 <AmiBlitz3.ab3@6107>   MOVE.l (A7)+,D0
000242DC <AmiBlitz3.ab3@6108>   MOVE.l $4(A3),-(A7)
000242E0 <AmiBlitz3.ab3@6109>   MOVE.l D0,$4(A3)
000242E2 <AmiBlitz3.ab3@6110>   MOVE.l D6,D2
000242E4 <AmiBlitz3.ab3@6111>   ADDQ.l #4,D2
000242E8 <AmiBlitz3.ab3@6112>    BSR.w addhunkoffset
000242EA <AmiBlitz3.ab3@6113>   MOVEQ.l #$00,D3
000242EE <AmiBlitz3.ab3@6114>   MOVE.b $A(A3),D3
000242F0 <AmiBlitz3.ab3@6115>   ADDQ.w #1,D3
000242F4 <AmiBlitz3.ab3@6116>   BCLR #$0,D3
000242F6 <AmiBlitz3.ab3@6117>   ADD.l D3,D6
000242F8 <AmiBlitz3.ab3@6118>   MOVE.l A3,D2
000242FA <AmiBlitz3.ab3@6119>   MOVE.l D7,D1
00024300 <AmiBlitz3.ab3@6121>     MOVEA.l _dosbase,A6
00024304 <AmiBlitz3.ab3@6122>     JSR _Write(A6)
00024308 <AmiBlitz3.ab3@6123>   MOVE.l (A7)+,$4(A3)
0002430A <AmiBlitz3.ab3@6124>   MOVEA.l (A3),A3
0002430E <AmiBlitz3.ab3@6125> BRA.w restypes__loop
00024310 <AmiBlitz3.ab3@6128> RTS
00024316 <AmiBlitz3.ab3@6132>    TST.b resdisable
0002431A <AmiBlitz3.ab3@6133>    BEQ resconsts__l1
00024320 <AmiBlitz3.ab3@6134>    MOVE.l currentlabeladdr,a2
00024326 <AmiBlitz3.ab3@6135>    CMP.l #0,a2
0002432A <AmiBlitz3.ab3@6136>    BEQ resconsts__l1
0002432C <AmiBlitz3.ab3@6137>    MOVE.l (a2),a2
00024330 <AmiBlitz3.ab3@6138> BRA resconsts__l2
00024336 <AmiBlitz3.ab3@6141>    MOVEA.l labelbase,A2
00024338 <AmiBlitz3.ab3@6144>    MOVEQ.l #$00,D0
0002433C <AmiBlitz3.ab3@6147>    CMPA.w #$0,A2
00024340 <AmiBlitz3.ab3@6148>    BEQ.w resconsts__done
00024348 <AmiBlitz3.ab3@6149>   CMPI.l #$1,$4(A2)
0002434C <AmiBlitz3.ab3@6150>    BNE.w resconsts__next
0002434E <AmiBlitz3.ab3@6151>   ADDQ.w #1,D0
00024350 <AmiBlitz3.ab3@6154>   MOVEA.l (A2),A2
00024354 <AmiBlitz3.ab3@6155> BRA.w resconsts__loop
0002435A <AmiBlitz3.ab3@6158>   MOVE.w D0,temp1
0002435C <AmiBlitz3.ab3@6159>   MOVE.l D7,D1
00024362 <AmiBlitz3.ab3@6160>   MOVE.l #temp1,D2
00024364 <AmiBlitz3.ab3@6161>   MOVEQ.l #$02,D3
00024366 <AmiBlitz3.ab3@6162>   ADDQ.l #2,D6
0002436C <AmiBlitz3.ab3@6164>     MOVEA.l _dosbase,A6
00024370 <AmiBlitz3.ab3@6165>     JSR _Write(A6)
00024376 <AmiBlitz3.ab3@6166>    TST.b resdisable
0002437A <AmiBlitz3.ab3@6167>    BEQ resconsts__done_l1
00024380 <AmiBlitz3.ab3@6168>    MOVE.l currentlabeladdr,a2
00024386 <AmiBlitz3.ab3@6169>    CMP.l #0,a2
0002438A <AmiBlitz3.ab3@6170>    BEQ resconsts__done_l1
0002438C <AmiBlitz3.ab3@6171>    MOVE.l (a2),a2
00024390 <AmiBlitz3.ab3@6172> BRA resconsts__loop2
00024396 <AmiBlitz3.ab3@6175>    MOVEA.l labelbase,A2                                    ;write resident labels
0002439A <AmiBlitz3.ab3@6178>    CMPA.w #$0,A2
0002439E <AmiBlitz3.ab3@6179>    BEQ.w resconsts__done2
000243A6 <AmiBlitz3.ab3@6180>   CMPI.l #$1,$4(A2)
000243AA <AmiBlitz3.ab3@6181>    BNE.w resconsts__next2
000243AC <AmiBlitz3.ab3@6182>    MOVEQ.l #$00,D3
000243B0 <AmiBlitz3.ab3@6183>   MOVE.b $12(A2),D3                                        ;length
000243B2 <AmiBlitz3.ab3@6184>   ADDQ.w #1,D3
000243B6 <AmiBlitz3.ab3@6185>   BCLR #$0,D3
000243B8 <AmiBlitz3.ab3@6186>   MOVE.l D6,D2
000243BA <AmiBlitz3.ab3@6187>   ADD.l D3,D6
000243BC <AmiBlitz3.ab3@6190>   MOVE.l (A2),-(A7)
000243BE <AmiBlitz3.ab3@6191>   TST.l (A2)
000243C2 <AmiBlitz3.ab3@6192>    BEQ.w resconsts__nonext
000243C4 <AmiBlitz3.ab3@6193>   MOVE.l D6,(A2)
000243C8 <AmiBlitz3.ab3@6194>    BSR.w addhunkoffset
000243CA <AmiBlitz3.ab3@6197>   MOVE.l A2,D2
000243CC <AmiBlitz3.ab3@6198>   MOVE.l D7,D1
000243D2 <AmiBlitz3.ab3@6200>     MOVEA.l _dosbase,A6
000243D6 <AmiBlitz3.ab3@6201>     JSR _Write(A6)
000243D8 <AmiBlitz3.ab3@6202>   MOVE.l (A7)+,(A2)
000243DA <AmiBlitz3.ab3@6205>   MOVEA.l (A2),A2
000243DE <AmiBlitz3.ab3@6206> BRA.w resconsts__loop2
000243E0 <AmiBlitz3.ab3@6209> RTS
0002440A <AmiBlitz3.ab3@6213>    !basic
00024410 <AmiBlitz3.ab3@6214>     MOVE.l ptr_resfile,d0
00024420 <AmiBlitz3.ab3@6215>     resfileP.l = Peek.l(?ptr_resfile)
0002442A <AmiBlitz3.ab3@6216>     If resfileP
00024452 <AmiBlitz3.ab3@6217>       resfile$ = Peek.s(resfileP)
0002449E <AmiBlitz3.ab3@6218>       tests.b = Instr(resfile$,"/")
000244EA <AmiBlitz3.ab3@6219>       testc.b = Instr(resfile$,":")
0002450C <AmiBlitz3.ab3@6220>       If tests=0 AND testc=0
0002458C <AmiBlitz3.ab3@6221>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
0002459E <AmiBlitz3.ab3@6222>         Poke.l ?ptr_resfile,&resfile$
000245A4 <AmiBlitz3.ab3@6224>     Else
000245DE <AmiBlitz3.ab3@6225>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000245FC <AmiBlitz3.ab3@6227>    !asm
000245FE <AmiBlitz3.ab3@6228> RTS
00024604 <AmiBlitz3.ab3@6232> 
0002460A <AmiBlitz3.ab3@6233>   MOVE.l A7,errstack
00024614 <AmiBlitz3.ab3@6236>   MOVE.l #next_resentry,errcont
0002461C <AmiBlitz3.ab3@6237>   MOVE.w #$FFFF,ezerr
00024620 <AmiBlitz3.ab3@6238>   BSR.w Aclearallvars
00024624 <AmiBlitz3.ab3@6239>   BSR.w free_residents
0002462A <AmiBlitz3.ab3@6241>   LEA residents_table,A5
0002462C <AmiBlitz3.ab3@6242>   MOVEQ.l #$07,D6
0002462E <AmiBlitz3.ab3@6245>     TST.b (A5)
00024632 <AmiBlitz3.ab3@6246>     BEQ.w next_resentry
00024638 <AmiBlitz3.ab3@6247>     MOVE.l A5,ptr_resfile
0002463C <AmiBlitz3.ab3@6248>     BSR check_residentpath
00024642 <AmiBlitz3.ab3@6249>     MOVE.l ptr_resfile,d1
00024648 <AmiBlitz3.ab3@6250>     MOVEA.l _dosbase,A6
0002464C <AmiBlitz3.ab3@6251>     JSR _LoadSeg(A6)
00024650 <AmiBlitz3.ab3@6252>     MOVE.l D0,$40(A5)
00024654 <AmiBlitz3.ab3@6253>     BNE.w reloadresident__yeah
00024658 <AmiBlitz3.ab3@6254>     BSR.w reserr
0002465A <AmiBlitz3.ab3@6257>     MOVEA.l D0,A3
0002465C <AmiBlitz3.ab3@6258>     ADDA.l A3,A3
0002465E <AmiBlitz3.ab3@6259>     ADDA.l A3,A3
00024660 <AmiBlitz3.ab3@6260>     ADDQ.w #4,A3                                           ;start of res
00024664 <AmiBlitz3.ab3@6261>     BSR.w JL_0_5A9E
00024668 <AmiBlitz3.ab3@6262>     BSR.w JL_0_5A62                                        ;add macros to list
0002466C <AmiBlitz3.ab3@6263>     BSR.w JL_0_5A32                                        ;read labels
00024670 <AmiBlitz3.ab3@6266>     LEA ResidentEntryStep(A5),A5       ;$44
00024674 <AmiBlitz3.ab3@6267>   DBF D6,reloadresident__loop
0002467E <AmiBlitz3.ab3@6272>   MOVE.l #free_residents,errcont
00024684 <AmiBlitz3.ab3@6274>   MOVEA.l newtype_string,A3
00024686 <AmiBlitz3.ab3@6275>   MOVEQ.l #$0B,D7
0002468A <AmiBlitz3.ab3@6276>   BSR.w checkclash
00024690 <AmiBlitz3.ab3@6278>   MOVEA.l macrobase,A3
00024692 <AmiBlitz3.ab3@6279>   MOVEQ.l #$d,D7
00024696 <AmiBlitz3.ab3@6280>   BSR.w checkclash
0002469C <AmiBlitz3.ab3@6282>   MOVEA.l firstconst,A3
0002469E <AmiBlitz3.ab3@6283>   MOVEQ.l #$19,D7
000246A2 <AmiBlitz3.ab3@6284>   BSR.w checkclash
000246A4 <AmiBlitz3.ab3@6287> RTS
000246A6 <AmiBlitz3.ab3@6291>   MOVEA.l A3,A4
000246AA <AmiBlitz3.ab3@6294>     CMPA.w #$0,A4
000246AE <AmiBlitz3.ab3@6295>     BEQ.w checkclash__done
000246B4 <AmiBlitz3.ab3@6297>     LEA ptr_parameterstore,A0
000246B8 <AmiBlitz3.ab3@6298>     LEA $0(A4,D7.W),A1
000246BA <AmiBlitz3.ab3@6299>     MOVEQ.l #-$01,D2
000246BC <AmiBlitz3.ab3@6302>       ADDQ.w #1,D2
000246BE <AmiBlitz3.ab3@6303>       MOVE.b (A1)+,(A0)+
000246C2 <AmiBlitz3.ab3@6304>     BNE.w checkclash__loop2
000246C4 <AmiBlitz3.ab3@6305>     MOVEA.l A3,A2
000246C8 <AmiBlitz3.ab3@6308>     BSR.w findlab
000246CC <AmiBlitz3.ab3@6309>     BNE.w checkclash__next                                  ;not found
000246CE <AmiBlitz3.ab3@6310>     CMPA.l A2,A4
000246D2 <AmiBlitz3.ab3@6311>     BEQ.w checkclash__l1
000246D4 <AmiBlitz3.ab3@6312>     MOVE.l a1,a5
000246D8 <AmiBlitz3.ab3@6313> BRA clasherr
000246DC <AmiBlitz3.ab3@6316> BRA.w checkclash__more
000246DE <AmiBlitz3.ab3@6319>     MOVEA.l (A4),A4
000246E2 <AmiBlitz3.ab3@6320> BRA.w checkclash__loop
000246E4 <AmiBlitz3.ab3@6323> RTS
000246EA <AmiBlitz3.ab3@6327>   MOVEA.l _dosbase,A6
000246F0 <AmiBlitz3.ab3@6329>   LEA newtype_string,A0
000246F6 <AmiBlitz3.ab3@6330>   MOVE.l A0,lastrestype
000246F8 <AmiBlitz3.ab3@6331>   CLR.l (A0)
000246FE <AmiBlitz3.ab3@6333>   LEA macrobase,A0
00024704 <AmiBlitz3.ab3@6334>   MOVE.l A0,currentmacroaddr
00024706 <AmiBlitz3.ab3@6335>   CLR.l (A0)
0002470C <AmiBlitz3.ab3@6337>   LEA labelbase,A0
00024712 <AmiBlitz3.ab3@6338>   MOVE.l A0,currentlabeladdr
00024714 <AmiBlitz3.ab3@6339>   CLR.l (A0)
0002471A <AmiBlitz3.ab3@6340>   CLR.w rescnt
00024752 <AmiBlitz3.ab3@6344>   !ComData_SetB{comByte_DebugMode,debugmode}
00024758 <AmiBlitz3.ab3@6347>   LEA residents_table,A2
0002475A <AmiBlitz3.ab3@6348>   MOVEQ.l #$07,D2
0002475E <AmiBlitz3.ab3@6351>      MOVE.l $40(A2),D1
00024762 <AmiBlitz3.ab3@6352>      BEQ.w free_residents__next
00024766 <AmiBlitz3.ab3@6353>       CLR.l $40(A2)
0002476C <AmiBlitz3.ab3@6354>       MOVEA.l _dosbase,A6
00024770 <AmiBlitz3.ab3@6355>       JSR _UnLoadSeg(A6)
00024774 <AmiBlitz3.ab3@6358>      LEA ResidentEntryStep(A2),A2   ; $44
00024778 <AmiBlitz3.ab3@6359>    DBF D2,free_residents__loop
0002477A <AmiBlitz3.ab3@6361> RTS
0002477C <AmiBlitz3.ab3@6365>   MOVE.w (A3)+,D1
00024780 <AmiBlitz3.ab3@6366>   BEQ.w JL_0_5A60
00024786 <AmiBlitz3.ab3@6367>   MOVEA.l currentlabeladdr,A2
00024788 <AmiBlitz3.ab3@6368>   MOVE.l A3,(A2)
0002478A <AmiBlitz3.ab3@6369>   SUBQ.w #1,D1
0002478C <AmiBlitz3.ab3@6372>     MOVEA.l A3,A2
0002478E <AmiBlitz3.ab3@6373>     MOVEA.l (A3),A3
00024792 <AmiBlitz3.ab3@6374>   DBF D1,JL_0_5A42
00024794 <AmiBlitz3.ab3@6376>   CLR.l (a2)                                               ;bugfix for object
0002479A <AmiBlitz3.ab3@6377>   MOVE.l A2,currentlabeladdr
0002479C <AmiBlitz3.ab3@6378>   MOVEA.l A2,A3
0002479E <AmiBlitz3.ab3@6379>   MOVEQ.l #$00,D0
000247A2 <AmiBlitz3.ab3@6380>   MOVE.b $12(A3),D0
000247A4 <AmiBlitz3.ab3@6381>   ADDQ.w #1,D0
000247A8 <AmiBlitz3.ab3@6382>   BCLR #$0,D0
000247AA <AmiBlitz3.ab3@6383>   ADDA.w D0,A3
000247AC <AmiBlitz3.ab3@6386> RTS
000247AE <AmiBlitz3.ab3@6390>   MOVE.w (A3)+,D1
000247B2 <AmiBlitz3.ab3@6391>   BEQ.w JL_0_5A9C
000247B8 <AmiBlitz3.ab3@6393>   MOVEA.l currentmacroaddr,A2
000247BA <AmiBlitz3.ab3@6394>   MOVE.l A3,(A2)
000247BC <AmiBlitz3.ab3@6395>   SUBQ.w #1,D1
000247BE <AmiBlitz3.ab3@6398>     MOVEA.l A3,A2
000247C0 <AmiBlitz3.ab3@6399>     MOVEA.l (A3),A3
000247C4 <AmiBlitz3.ab3@6400>   DBF D1,JL_0_5A72
000247CA <AmiBlitz3.ab3@6402>   MOVE.l A2,currentmacroaddr
000247CC <AmiBlitz3.ab3@6403>   MOVEA.l A2,A3
000247CE <AmiBlitz3.ab3@6404>   MOVEQ.l #$00,D0
000247D2 <AmiBlitz3.ab3@6405>   MOVE.b $C(A3),D0
000247D4 <AmiBlitz3.ab3@6406>   ADDQ.w #1,D0
000247D8 <AmiBlitz3.ab3@6407>   BCLR #$0,D0
000247DC <AmiBlitz3.ab3@6408>   MOVE.w $8(A3),D1
000247DE <AmiBlitz3.ab3@6409>   ADDQ.w #1,D1
000247E2 <AmiBlitz3.ab3@6410>   BCLR #$0,D1
000247E4 <AmiBlitz3.ab3@6411>   ADDA.w D0,A3
000247E6 <AmiBlitz3.ab3@6412>   ADDA.w D1,A3
000247E8 <AmiBlitz3.ab3@6415> RTS
000247EA <AmiBlitz3.ab3@6419>   MOVE.w (A3)+,D1
000247EE <AmiBlitz3.ab3@6420>   BEQ.w JL_0_5B38
000247F0 <AmiBlitz3.ab3@6421>   MOVE.w D1,-(A7)
000247F2 <AmiBlitz3.ab3@6422>   SUBQ.w #1,D1
000247F8 <AmiBlitz3.ab3@6423>   MOVEA.l lastrestype,A2
000247FA <AmiBlitz3.ab3@6424>   MOVE.l A2,-(A7)
000247FC <AmiBlitz3.ab3@6427>       MOVE.l (A3),D0
00024800 <AmiBlitz3.ab3@6428>       BEQ.w JL_0_5ABC
00024802 <AmiBlitz3.ab3@6429>       MOVEA.l D0,A3
00024806 <AmiBlitz3.ab3@6430> BRA.w JL_0_5AB0
0002480A <AmiBlitz3.ab3@6433>       MOVE.b $E(A3),D0
0002480C <AmiBlitz3.ab3@6434>       ADDQ.w #1,D0
00024810 <AmiBlitz3.ab3@6435>       BCLR #$0,D0
00024812 <AmiBlitz3.ab3@6436>       ADDA.w D0,A3
00024814 <AmiBlitz3.ab3@6437>       MOVE.l A3,(A2)
00024816 <AmiBlitz3.ab3@6438>       MOVEA.l A3,A2
00024818 <AmiBlitz3.ab3@6439>       MOVEQ.l #$00,D0
0002481C <AmiBlitz3.ab3@6440>       MOVE.b $A(A3),D0
0002481E <AmiBlitz3.ab3@6441>       ADDQ.w #1,D0
00024822 <AmiBlitz3.ab3@6442>       BCLR #$0,D0
00024824 <AmiBlitz3.ab3@6443>       ADDA.w D0,A3
00024828 <AmiBlitz3.ab3@6444>   DBF D1,JL_0_5AB0
0002482A <AmiBlitz3.ab3@6446>   MOVEA.l (A7)+,A0
0002482C <AmiBlitz3.ab3@6447>   MOVEA.l (A0),A0
00024830 <AmiBlitz3.ab3@6450>     CMPA.w #$0,A0
00024834 <AmiBlitz3.ab3@6451>     BEQ.w JL_0_5B2A
00024838 <AmiBlitz3.ab3@6452>     MOVEA.l $4(A0),A1
0002483C <AmiBlitz3.ab3@6455>     CMPA.w #$0,A1
00024840 <AmiBlitz3.ab3@6456>     BEQ.w JL_0_5B24
00024844 <AmiBlitz3.ab3@6457>     MOVE.w $A(A1),D0
0002484A <AmiBlitz3.ab3@6458>     MOVEA.l newtypebase,A4
0002484E <AmiBlitz3.ab3@6459>     CMP.w #$7,D0
00024852 <AmiBlitz3.ab3@6460>     BCS.w JL_0_5B0E
00024858 <AmiBlitz3.ab3@6461>     SUB.w rescnt,D0
0002485A <AmiBlitz3.ab3@6464>     SUBQ.w #1,D0
0002485E <AmiBlitz3.ab3@6465>     BMI.w JL_0_5B1A
00024860 <AmiBlitz3.ab3@6468>        MOVEA.l (A4),A4
00024864 <AmiBlitz3.ab3@6469>   DBF D0,JL_0_5B14
00024868 <AmiBlitz3.ab3@6472>     MOVE.l A4,$A(A1)
0002486A <AmiBlitz3.ab3@6473>     MOVEA.l (A1),A1
0002486E <AmiBlitz3.ab3@6474> BRA.w JL_0_5AEE
00024870 <AmiBlitz3.ab3@6477>     MOVEA.l (A0),A0
00024874 <AmiBlitz3.ab3@6478> BRA.w JL_0_5AE2
00024876 <AmiBlitz3.ab3@6481>   MOVE.w (A7)+,D0
0002487C <AmiBlitz3.ab3@6482>   ADD.w D0,rescnt
00024882 <AmiBlitz3.ab3@6483>   MOVE.l A2,lastrestype
00024884 <AmiBlitz3.ab3@6486> RTS
0002488A <AmiBlitz3.ab3@6490>   LEA tokens,A0
0002488E <AmiBlitz3.ab3@6491>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024890 <AmiBlitz3.ab3@6494>     MOVEA.l (A0),A0
00024894 <AmiBlitz3.ab3@6495>   DBF D0,JL_0_5BD0
0002489A <AmiBlitz3.ab3@6497>   MOVEA.l #asmpnts,A1                                      ;create tokentab
0002489E <AmiBlitz3.ab3@6498>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
000248A2 <AmiBlitz3.ab3@6501>       LEA $6(A0),A2
000248A4 <AmiBlitz3.ab3@6504>         TST.b (A2)+
000248A8 <AmiBlitz3.ab3@6505>       BNE.w JL_0_5BE4
000248AA <AmiBlitz3.ab3@6508>         TST.b (A2)+
000248AE <AmiBlitz3.ab3@6509>       BNE.w JL_0_5BEA
000248B0 <AmiBlitz3.ab3@6511>       ADDQ.w #1,A2
000248B2 <AmiBlitz3.ab3@6512>       EXG.l D1,A2
000248B6 <AmiBlitz3.ab3@6513>       BCLR #$0,D1
000248B8 <AmiBlitz3.ab3@6514>       EXG.l D1,A2
000248BA <AmiBlitz3.ab3@6515>       MOVE.l A2,(A1)+
000248BC <AmiBlitz3.ab3@6516>       MOVEA.l (A0),A0
000248C0 <AmiBlitz3.ab3@6517>   DBF D0,JL_0_5BE0
000248C2 <AmiBlitz3.ab3@6518> RTS
000248C6 <AmiBlitz3.ab3@6522>   BSR.w asmconst
000248C8 <AmiBlitz3.ab3@6523>   MOVEQ.l #$0B,D5
000248CA <AmiBlitz3.ab3@6524> RTS
000248CC <AmiBlitz3.ab3@6527> unmove:  Ds.w 1
000248D0 <AmiBlitz3.ab3@6531>   MOVE.w #$48E7,D1
000248D4 <AmiBlitz3.ab3@6532>   BSR.w writeword                                          ;movem.l -(a7)
000248D8 <AmiBlitz3.ab3@6533>   MOVE.w #$000F,D2
000248DA <AmiBlitz3.ab3@6534>   SUB.w D4,D2
000248DC <AmiBlitz3.ab3@6535>   MOVEQ.l #-$01,D1
000248DE <AmiBlitz3.ab3@6536>   BCLR D2,D1
000248E2 <AmiBlitz3.ab3@6537>   BSR.w writeword
000248E4 <AmiBlitz3.ab3@6538>   MOVEQ.l #-$01,D1
000248E6 <AmiBlitz3.ab3@6539>   BCLR D4,D1
000248EC <AmiBlitz3.ab3@6540>   MOVE.w D1,unmove
000248EE <AmiBlitz3.ab3@6541> RTS
000248F2 <AmiBlitz3.ab3@6545>   MOVE.w #$4CDF,D1
000248F6 <AmiBlitz3.ab3@6546>   BSR.w writeword
000248FA <AmiBlitz3.ab3@6547>   MOVE.w unmove(PC),D1
000248FE <AmiBlitz3.ab3@6548> BRA.w writeword
00024902 <AmiBlitz3.ab3@6561>   BSR.w JL_0_5D22
00024906 <AmiBlitz3.ab3@6562>   CMP.w #$2C,D0                                            ;#','
0002490A <AmiBlitz3.ab3@6563>    BNE.w syntaxerr
00024910 <AmiBlitz3.ab3@6564>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024914 <AmiBlitz3.ab3@6565>    BSR.w writelong
00024916 <AmiBlitz3.ab3@6566>   MOVE.w D4,D1
0002491A <AmiBlitz3.ab3@6567>   ORI.w #$2F00,D1
0002491E <AmiBlitz3.ab3@6568>    BSR.w writeword
00024922 <AmiBlitz3.ab3@6569>    BSR.w get1bytemain
00024926 <AmiBlitz3.ab3@6570>    BSR.w getparameter
0002492A <AmiBlitz3.ab3@6571>    BSR.w JL_0_8E3C
0002492E <AmiBlitz3.ab3@6572>    BSR.w calcvar
00024932 <AmiBlitz3.ab3@6573>    BTST #$E,D2
00024936 <AmiBlitz3.ab3@6574>    BEQ.w JL_0_5C80
0002493A <AmiBlitz3.ab3@6577>    MOVE.b #$3,D2
0002493E <AmiBlitz3.ab3@6578> BRA.w JL_0_5C8E
00024940 <AmiBlitz3.ab3@6581>   TST.b D2
00024944 <AmiBlitz3.ab3@6582>    BEQ.w JL_0_5C78
00024948 <AmiBlitz3.ab3@6583>   CMP.b #$7,D2
0002494C <AmiBlitz3.ab3@6584>    BEQ.w JL_0_5C78
00024950 <AmiBlitz3.ab3@6587>   BTST #$F,D2
00024954 <AmiBlitz3.ab3@6588>    BNE.w JL_0_5CA4
00024958 <AmiBlitz3.ab3@6589>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002495C <AmiBlitz3.ab3@6590>    BSR.w writeword
0002495E <AmiBlitz3.ab3@6591>   MOVE.w D3,D1
00024962 <AmiBlitz3.ab3@6592>    BSR.w writeword
00024966 <AmiBlitz3.ab3@6595>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002496A <AmiBlitz3.ab3@6596>    BSR.w writeword
0002496E <AmiBlitz3.ab3@6597>   MOVE.w #$1480,D1
00024972 <AmiBlitz3.ab3@6598>   CMP.b #$1,D2
00024976 <AmiBlitz3.ab3@6599>    BEQ.w JL_0_5CC8
0002497A <AmiBlitz3.ab3@6600>   EORI.w #$3000,D1
0002497E <AmiBlitz3.ab3@6601>   CMP.b #$2,D2
00024982 <AmiBlitz3.ab3@6602>    BNE.w JL_0_5CC8
00024986 <AmiBlitz3.ab3@6603>   ORI.w #$1000,D1
0002498A <AmiBlitz3.ab3@6606>   BSR.w writeword
00024990 <AmiBlitz3.ab3@6607>   MOVE.l #$4CDF7FFF,D1
00024994 <AmiBlitz3.ab3@6608> BRA.w writelong
00024998 <AmiBlitz3.ab3@6612>   BSR.w JL_0_5D22
0002499C <AmiBlitz3.ab3@6613>   CMP.w #$2C,D0
000249A0 <AmiBlitz3.ab3@6614>    BNE.w syntaxerr
000249A4 <AmiBlitz3.ab3@6615>    BSR.w regmovems
000249A6 <AmiBlitz3.ab3@6616>   MOVE.w D4,-(A7)
000249A8 <AmiBlitz3.ab3@6617>   MOVEQ.l #$03,D2
000249AC <AmiBlitz3.ab3@6618>    BSR.w eval
000249AE <AmiBlitz3.ab3@6619>   MOVE.w (A7)+,D1
000249B2 <AmiBlitz3.ab3@6620>    BEQ.w JL_0_5D1A
000249B6 <AmiBlitz3.ab3@6621>   CMP.w #$8,D1
000249BA <AmiBlitz3.ab3@6622>    BCC.w JL_0_5D0C
000249BC <AmiBlitz3.ab3@6623>   LSL.w #8,D1
000249BE <AmiBlitz3.ab3@6624>   LSL.w #1,D1
000249C2 <AmiBlitz3.ab3@6625>   ORI.w #$2000,D1
000249C6 <AmiBlitz3.ab3@6626>    BSR.w writeword
000249CA <AmiBlitz3.ab3@6627> BRA.w JL_0_5D1A
000249CC <AmiBlitz3.ab3@6630>   SUBQ.w #8,D1
000249CE <AmiBlitz3.ab3@6631>   LSL.w #8,D1
000249D0 <AmiBlitz3.ab3@6632>   LSL.w #1,D1
000249D4 <AmiBlitz3.ab3@6633>   ORI.w #$2040,D1
000249D8 <AmiBlitz3.ab3@6634>   BSR.w writeword
000249DC <AmiBlitz3.ab3@6637> BRA.w dounmove
000249E0 <AmiBlitz3.ab3@6641>   BSR.w get1bytemain
000249E4 <AmiBlitz3.ab3@6644>   ORI.w #$20,D0
000249E8 <AmiBlitz3.ab3@6645>   CMP.w #$64,D0
000249EC <AmiBlitz3.ab3@6646>    BEQ.w JL_0_5D4E
000249F0 <AmiBlitz3.ab3@6647>   CMP.w #$61,D0
000249F4 <AmiBlitz3.ab3@6648>    BNE.w syntaxerr
000249F8 <AmiBlitz3.ab3@6649>    BSR.w JL_0_5D4E
000249FA <AmiBlitz3.ab3@6650>   ADDQ.w #8,D4
000249FC <AmiBlitz3.ab3@6651> RTS
00024A28 <AmiBlitz3.ab3@6655>   !fget                                                   ;bsr.w get1bytemain
00024A2C <AmiBlitz3.ab3@6657>   ORI.w #$20,D0
00024A30 <AmiBlitz3.ab3@6660>   CMP.w #$61,D0
00024A34 <AmiBlitz3.ab3@6661>   BNE.w syntaxerr
00024A60 <AmiBlitz3.ab3@6664>   !fget                                                    ;bsr.w get1bytemain
00024A64 <AmiBlitz3.ab3@6665>   SUBI.w #$30,D0
00024A68 <AmiBlitz3.ab3@6666>    BMI.w syntaxerr
00024A6C <AmiBlitz3.ab3@6667>   CMP.w #$7,D0
00024A70 <AmiBlitz3.ab3@6668>    BHI.w syntaxerr
00024A72 <AmiBlitz3.ab3@6669>   MOVE.w D0,D4
00024A9E <AmiBlitz3.ab3@6670>   !fget
00024AA0 <AmiBlitz3.ab3@6671> RTS                                                        ;bra.w get1bytemain
00024AA2 <AmiBlitz3.ab3@6675>   ADDQ.w #8,D4
00024AA4 <AmiBlitz3.ab3@6678>   MOVEQ.l #$00,D5
00024AA8 <AmiBlitz3.ab3@6679>   SUBI.w #$30,D4
00024AAC <AmiBlitz3.ab3@6682>   CMP.w #$2D,D0
00024AB0 <AmiBlitz3.ab3@6683>    BEQ.w JL_0_5D9E
00024AB4 <AmiBlitz3.ab3@6684>   CMP.w #$2F,D0
00024AB8 <AmiBlitz3.ab3@6685>    BEQ.w JL_0_5D8C
00024ABC <AmiBlitz3.ab3@6686> BRA.w syntaxerr
00024ABE <AmiBlitz3.ab3@6689>   BSET D4,D5
00024AC0 <AmiBlitz3.ab3@6692>   MOVE.w D5,D4
00024AC2 <AmiBlitz3.ab3@6693>   MOVEQ.l #$0F,D5
00024AC4 <AmiBlitz3.ab3@6694> RTS
00024AC6 <AmiBlitz3.ab3@6697>   BSET D4,D5
00024ACA <AmiBlitz3.ab3@6698>   BSR.w JL_0_5D1E
00024ADC <AmiBlitz3.ab3@6699>   !compare3                                                ;bsr.w JL_0_5FC0
00024AE0 <AmiBlitz3.ab3@6700>   BNE.w JL_0_5D70
00024AE4 <AmiBlitz3.ab3@6701> BRA.w JL_0_5D84
00024AE6 <AmiBlitz3.ab3@6704>   MOVE.w D4,D1
00024AEA <AmiBlitz3.ab3@6705>    BSR.w JL_0_5D1E
00024AEC <AmiBlitz3.ab3@6706>   CMP.w D4,D1
00024AF0 <AmiBlitz3.ab3@6707>    BLS.w JL_0_5DAC
00024AF2 <AmiBlitz3.ab3@6708>   EXG.l D4,D1
00024AF4 <AmiBlitz3.ab3@6711>   BSET D1,D5
00024AF6 <AmiBlitz3.ab3@6712>   ADDQ.w #1,D1
00024AF8 <AmiBlitz3.ab3@6713>   CMP.w D4,D1
00024AFC <AmiBlitz3.ab3@6714>    BLS.w JL_0_5DAC
00024B0E <AmiBlitz3.ab3@6715>   !compare3                                                ;bsr.w JL_0_5FC0
00024B12 <AmiBlitz3.ab3@6716>   BNE.w JL_0_5D70
00024B16 <AmiBlitz3.ab3@6717> BRA.w JL_0_5D86
00024B18 <AmiBlitz3.ab3@6720>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024B44 <AmiBlitz3.ab3@6721>    !fget
00024B48 <AmiBlitz3.ab3@6722>   CMP.w #$23,D0
00024B4C <AmiBlitz3.ab3@6723>    BEQ.w getimm
00024B50 <AmiBlitz3.ab3@6724>   CMP.w #$28,D0
00024B54 <AmiBlitz3.ab3@6725>    BEQ.w JL_0_5DFE
00024B58 <AmiBlitz3.ab3@6726>   CMP.w #$2D,D0
00024B5C <AmiBlitz3.ab3@6727>    BNE.w JL_0_5E20
00024B88 <AmiBlitz3.ab3@6728>    !fget                                                   ;bsr.w get1bytemain       -(
00024B8C <AmiBlitz3.ab3@6729>   CMP.w #$28,D0
00024B90 <AmiBlitz3.ab3@6730>    BNE.w JL_0_5F4E
00024B94 <AmiBlitz3.ab3@6731>    BSR.w JL_0_5D3E
00024B98 <AmiBlitz3.ab3@6732>   CMP.w #$29,D0
00024B9C <AmiBlitz3.ab3@6733>    BNE.w syntaxerr
00024B9E <AmiBlitz3.ab3@6734>   MOVEQ.l #$04,D5
00024BCA <AmiBlitz3.ab3@6735>   !fget                                                    ;bsr.w get1bytemain
00024BCC <AmiBlitz3.ab3@6736> RTS
00024BD0 <AmiBlitz3.ab3@6740>   BSR.w JL_0_5D3E
00024BD4 <AmiBlitz3.ab3@6741>   CMP.w #$29,D0
00024BD8 <AmiBlitz3.ab3@6742>    BNE.w syntaxerr
00024C04 <AmiBlitz3.ab3@6743>   !fget                                                    ;bsr.w get1bytemain
00024C08 <AmiBlitz3.ab3@6744>   CMP.w #$2B,D0
00024C0C <AmiBlitz3.ab3@6745>    BEQ.w JL_0_5E1A
00024C0E <AmiBlitz3.ab3@6746>   MOVEQ.l #$02,D5
00024C10 <AmiBlitz3.ab3@6747> RTS
00024C12 <AmiBlitz3.ab3@6751>   MOVEQ.l #$03,D5
00024C3E <AmiBlitz3.ab3@6752>   !fget                                                    ;bra.w get1bytemain
00024C40 <AmiBlitz3.ab3@6753> RTS
00024C44 <AmiBlitz3.ab3@6757>   ORI.w #$20,D0
00024C46 <AmiBlitz3.ab3@6758>   MOVE.w D0,D1                                            
00024C72 <AmiBlitz3.ab3@6759>    !fget                                                   ;bsr.w get1bytemain
00024C76 <AmiBlitz3.ab3@6760>   CMP.w #$64,D1
00024C7A <AmiBlitz3.ab3@6761>    BNE.w JL_0_5E6C
00024C7E <AmiBlitz3.ab3@6762>   CMP.w #$30,D0
00024C82 <AmiBlitz3.ab3@6763>    BCS.w JL_0_5EAE
00024C86 <AmiBlitz3.ab3@6764>   CMP.w #$37,D0
00024C8A <AmiBlitz3.ab3@6765>    BHI.w JL_0_5EAE
00024C8C <AmiBlitz3.ab3@6766>   MOVE.w D0,D4
00024CB8 <AmiBlitz3.ab3@6767>    !fget                                                   ;bsr.w get1bytemain
00024CCA <AmiBlitz3.ab3@6768>    !compare3                                               ;bsr.w JL_0_5FC0
00024CCE <AmiBlitz3.ab3@6769>    BEQ.w JL_0_5E64
00024CD2 <AmiBlitz3.ab3@6770>   CMP.w #$2D,D0
00024CD6 <AmiBlitz3.ab3@6771>    BEQ.w JL_0_5D6A
00024CDA <AmiBlitz3.ab3@6772>   CMP.w #$2F,D0
00024CDE <AmiBlitz3.ab3@6773>    BEQ.w JL_0_5D6A
00024CE2 <AmiBlitz3.ab3@6774> BRA.w JL_0_5EB8
00024CE4 <AmiBlitz3.ab3@6777>   MOVEQ.l #$00,D5
00024CE8 <AmiBlitz3.ab3@6778>   SUBI.w #$30,D4
00024CEA <AmiBlitz3.ab3@6779> RTS
00024CEE <AmiBlitz3.ab3@6782>    CMP.w #$61,D1
00024CF2 <AmiBlitz3.ab3@6783>    BNE.w JL_0_5EAE
00024CF6 <AmiBlitz3.ab3@6784>   CMP.w #$30,D0
00024CFA <AmiBlitz3.ab3@6785>    BCS.w JL_0_5EAE
00024CFE <AmiBlitz3.ab3@6786>   CMP.w #$37,D0
00024D02 <AmiBlitz3.ab3@6787>    BHI.w JL_0_5EAE
00024D04 <AmiBlitz3.ab3@6788>   MOVE.w D0,D4
00024D30 <AmiBlitz3.ab3@6789>    !fget                                                   ;bsr.w get1bytemain
00024D42 <AmiBlitz3.ab3@6790>    !compare3                                               ;bsr.w JL_0_5FC0
00024D46 <AmiBlitz3.ab3@6791>    BEQ.w JL_0_5EA6
00024D4A <AmiBlitz3.ab3@6792>   CMP.w #$2D,D0
00024D4E <AmiBlitz3.ab3@6793>    BEQ.w JL_0_5D68                                         ;movem
00024D52 <AmiBlitz3.ab3@6794>   CMP.w #$2F,D0
00024D56 <AmiBlitz3.ab3@6795>    BEQ.w JL_0_5D68
00024D5A <AmiBlitz3.ab3@6796> BRA.w JL_0_5EB8
00024D5C <AmiBlitz3.ab3@6799>   MOVEQ.l #1,d5
00024D60 <AmiBlitz3.ab3@6800>   SUBI.w #$30,D4
00024D64 <AmiBlitz3.ab3@6802> BRA 'l10
00024D66 <AmiBlitz3.ab3@6803>   ADDQ.w #8,d4
00024D68 <AmiBlitz3.ab3@6804>   MOVEQ #0,d5
00024D6A <AmiBlitz3.ab3@6805>   BSET d4,d5
00024D6C <AmiBlitz3.ab3@6806>   MOVE.w d5,d4
00024D6E <AmiBlitz3.ab3@6807>   MOVEQ.l #$0f,D5                                          ;01
00024D70 <AmiBlitz3.ab3@6810> RTS
00024D74 <AmiBlitz3.ab3@6814>   ORI.w #$20,D0
00024D76 <AmiBlitz3.ab3@6815>   MOVE.w D0,D4
00024DA2 <AmiBlitz3.ab3@6816>    !fget                                                   ;bsr.w get1bytemain
00024DB4 <AmiBlitz3.ab3@6819>   !compare3                                                ;bsr.w JL_0_5FC0
00024DB8 <AmiBlitz3.ab3@6820>    BNE.w JL_0_5EF2
00024DBC <AmiBlitz3.ab3@6821>   CMP.w #$73,D1
00024DC0 <AmiBlitz3.ab3@6822>    BNE.w JL_0_5EF2
00024DC4 <AmiBlitz3.ab3@6823>   CMP.w #$70,D4
00024DC8 <AmiBlitz3.ab3@6824>    BNE.w JL_0_5EDE
00024DDA <AmiBlitz3.ab3@6825>    !compare3                                               ;bsr.w JL_0_5FC0
00024DDE <AmiBlitz3.ab3@6826>    BNE.w JL_0_5F4E
00024DE0 <AmiBlitz3.ab3@6827>   MOVEQ.l #$07,D4
00024DE2 <AmiBlitz3.ab3@6828>   MOVEQ.l #$01,D5
00024DE4 <AmiBlitz3.ab3@6829> RTS
00024DE8 <AmiBlitz3.ab3@6833>   CMP.w #$72,D4
00024DEC <AmiBlitz3.ab3@6834>    BNE.w JL_0_5F4E
00024DFE <AmiBlitz3.ab3@6835>    !compare3                                               ;bsr.w JL_0_5FC0
00024E02 <AmiBlitz3.ab3@6836>    BNE.w JL_0_5F4E
00024E04 <AmiBlitz3.ab3@6837>   MOVEQ.l #$0D,D5
00024E06 <AmiBlitz3.ab3@6838> RTS
00024E0A <AmiBlitz3.ab3@6842>   ORI.w #$20,D0
00024E0E <AmiBlitz3.ab3@6843>   CMP.w #$63,D1
00024E12 <AmiBlitz3.ab3@6844>    BNE.w JL_0_5F22
00024E16 <AmiBlitz3.ab3@6845>   CMP.w #$63,D4
00024E1A <AmiBlitz3.ab3@6846>    BNE.w JL_0_5F4E
00024E1E <AmiBlitz3.ab3@6847>   CMP.w #$72,D0
00024E22 <AmiBlitz3.ab3@6848>    BNE.w JL_0_5F4E
00024E26 <AmiBlitz3.ab3@6849>    BSR.w get1bytemain                                      ;??wy not !fget
00024E2A <AmiBlitz3.ab3@6850>    BEQ.w JL_0_5F1E
00024E2E <AmiBlitz3.ab3@6851>   CMP.w #$2C,D0
00024E32 <AmiBlitz3.ab3@6852>    BNE.w JL_0_5F4E
00024E34 <AmiBlitz3.ab3@6855>   MOVEQ.l #$0C,D5
00024E36 <AmiBlitz3.ab3@6856> RTS
00024E3A <AmiBlitz3.ab3@6860>   CMP.w #$75,D1
00024E3E <AmiBlitz3.ab3@6861>    BNE.w JL_0_5F4E
00024E42 <AmiBlitz3.ab3@6862>   CMP.w #$73,D4
00024E46 <AmiBlitz3.ab3@6863>    BNE.w JL_0_5F4E
00024E4A <AmiBlitz3.ab3@6864>   CMP.w #$70,D0
00024E4E <AmiBlitz3.ab3@6865>    BNE.w JL_0_5F4E
00024E52 <AmiBlitz3.ab3@6866>    BSR.w get1bytemain                                      ;??wy not !fget
00024E56 <AmiBlitz3.ab3@6867>    BEQ.w JL_0_5F4A
00024E5A <AmiBlitz3.ab3@6868>   CMP.w #$2C,D0
00024E5E <AmiBlitz3.ab3@6869>    BNE.w JL_0_5F4E
00024E60 <AmiBlitz3.ab3@6872>   MOVEQ.l #$0E,D5
00024E62 <AmiBlitz3.ab3@6873> RTS
00024E64 <AmiBlitz3.ab3@6877>   MOVEA.l A4,A5
00024E68 <AmiBlitz3.ab3@6878>    BSR.w asmconst
00024E7A <AmiBlitz3.ab3@6879>    !compare3                                               ;bsr.w JL_0_5FC0
00024E7E <AmiBlitz3.ab3@6880>    BEQ.w JL_0_5FB8
00024E82 <AmiBlitz3.ab3@6881>   CMP.w #$2E,D0
00024E86 <AmiBlitz3.ab3@6882>    BEQ.w JL_0_5FA0
00024E8A <AmiBlitz3.ab3@6883>   CMP.w #$28,D0
00024E8E <AmiBlitz3.ab3@6884>    BNE.w syntaxerr
00024E92 <AmiBlitz3.ab3@6885>    BSR.w get1bytemain                                      ;??wy not !fget
00024E96 <AmiBlitz3.ab3@6886>   ORI.w #$20,D0
00024E9A <AmiBlitz3.ab3@6887>   CMP.w #$70,D0
00024E9E <AmiBlitz3.ab3@6888>    BNE.w JL_0_5F98
00024EA2 <AmiBlitz3.ab3@6889>    BSR.w get1bytemain                                      ;??wy not !fget
00024EA6 <AmiBlitz3.ab3@6890>   ORI.w #$20,D0
00024EAA <AmiBlitz3.ab3@6891>   CMP.w #$63,D0
00024EAE <AmiBlitz3.ab3@6892>    BNE.w syntaxerr
00024EB2 <AmiBlitz3.ab3@6893>    BSR.w get1bytemain                                      ;??wy not !fget
00024EB6 <AmiBlitz3.ab3@6894>    BSR.w JL_0_5FD4
00024EB8 <AmiBlitz3.ab3@6895>   ADDQ.w #4,D5
00024EBA <AmiBlitz3.ab3@6896> RTS
00024EBE <AmiBlitz3.ab3@6900>   BSR.w JL_0_5D46
00024EC2 <AmiBlitz3.ab3@6901> BRA.w JL_0_5FD4
00024EC6 <AmiBlitz3.ab3@6905>    BSR.w get1bytemain                                     ;??wy not !fget
00024ECA <AmiBlitz3.ab3@6906>   ORI.w #$20,D0
00024ECE <AmiBlitz3.ab3@6907>   CMP.w #$77,D0
00024ED2 <AmiBlitz3.ab3@6908>    BEQ.w JL_0_5FBC
00024ED6 <AmiBlitz3.ab3@6909>   CMP.w #$6C,D0
00024EDA <AmiBlitz3.ab3@6910>    BNE.w syntaxerr
00024EDC <AmiBlitz3.ab3@6913>   MOVEQ.l #$08,D5
00024EDE <AmiBlitz3.ab3@6914> RTS
00024EE0 <AmiBlitz3.ab3@6918>   MOVEQ.l #$07,D5
00024EE2 <AmiBlitz3.ab3@6919> RTS
00024EE4 <AmiBlitz3.ab3@6923>   TST.w D0
00024EE8 <AmiBlitz3.ab3@6924>    BEQ.w JL_0_5FD2
00024EEC <AmiBlitz3.ab3@6925>   CMP.w #$3A,D0
00024EF0 <AmiBlitz3.ab3@6926>    BEQ.w JL_0_5FD2
00024EF4 <AmiBlitz3.ab3@6927>   CMP.w #$2C,D0
00024EF6 <AmiBlitz3.ab3@6930> RTS
00024EFA <AmiBlitz3.ab3@6934>   CMP.w #$2C,D0
00024EFE <AmiBlitz3.ab3@6935>    BNE.w JL_0_6054
00024F02 <AmiBlitz3.ab3@6936>    BSR.w get1bytemain                                      ;??wy not !fget
00024F06 <AmiBlitz3.ab3@6937>   ORI.w #$20,D0
00024F08 <AmiBlitz3.ab3@6938>   MOVEQ.l #$00,D1
00024F0C <AmiBlitz3.ab3@6939>   CMP.w #$64,D0
00024F10 <AmiBlitz3.ab3@6940>    BEQ.w JL_0_5FFA
00024F14 <AmiBlitz3.ab3@6941>   CMP.w #$61,D0
00024F18 <AmiBlitz3.ab3@6942>    BNE.w syntaxerr
00024F1C <AmiBlitz3.ab3@6943>   BSET #$F,D1
00024F20 <AmiBlitz3.ab3@6946>    BSR.w get1bytemain                                      ;??wy not !fget
00024F24 <AmiBlitz3.ab3@6947>   SUBI.w #$30,D0
00024F28 <AmiBlitz3.ab3@6948>    BMI.w syntaxerr
00024F2C <AmiBlitz3.ab3@6949>   CMP.w #$7,D0
00024F30 <AmiBlitz3.ab3@6950>    BHI.w syntaxerr
00024F32 <AmiBlitz3.ab3@6951>   LSL.w #8,D0
00024F34 <AmiBlitz3.ab3@6952>   LSL.w #4,D0
00024F36 <AmiBlitz3.ab3@6953>   OR.w D0,D1
00024F3A <AmiBlitz3.ab3@6954>    BSR.w get1bytemain                                      ;??wy not !fget
00024F3E <AmiBlitz3.ab3@6955>   CMP.w #$2E,D0
00024F42 <AmiBlitz3.ab3@6956>    BNE.w JL_0_6040
00024F46 <AmiBlitz3.ab3@6957>    BSR.w get1bytemain                                      ;??wy not !fget
00024F4A <AmiBlitz3.ab3@6958>   ORI.w #$20,D0
00024F4E <AmiBlitz3.ab3@6959>   CMP.w #$77,D0
00024F52 <AmiBlitz3.ab3@6960>    BEQ.w JL_0_603C
00024F56 <AmiBlitz3.ab3@6961>   CMP.w #$6C,D0
00024F5A <AmiBlitz3.ab3@6962>    BNE.w syntaxerr
00024F5E <AmiBlitz3.ab3@6963>   BSET #$B,D1
00024F62 <AmiBlitz3.ab3@6966>    BSR.w get1bytemain                                      ;??wy not !fget
00024F66 <AmiBlitz3.ab3@6969>    CMP.b #"*",d0                                           ;020 * Mode
00024F6A <AmiBlitz3.ab3@6970>             BNE 'l1
00024F6E <AmiBlitz3.ab3@6971>             BSR.w get1bytemain                             ;??wy not !fget
00024F72 <AmiBlitz3.ab3@6972>             CMP.b #"2",d0
00024F76 <AmiBlitz3.ab3@6973>             BNE 'l2
00024F7A <AmiBlitz3.ab3@6974>             OR.w #$200,d1
00024F7E <AmiBlitz3.ab3@6975> BRA 'l1b
00024F82 <AmiBlitz3.ab3@6978>             CMP.b #"4",d0
00024F86 <AmiBlitz3.ab3@6979>             BNE 'l3
00024F8A <AmiBlitz3.ab3@6980>             OR.w #$400,d1
00024F8E <AmiBlitz3.ab3@6981> BRA 'l1b
00024F92 <AmiBlitz3.ab3@6984>             CMP.b #"8",d0
00024F96 <AmiBlitz3.ab3@6985>             BNE syntaxerr
00024F9A <AmiBlitz3.ab3@6986>             OR.w #$600,d1
00024F9E <AmiBlitz3.ab3@6989>         BSR.w get1bytemain                                 ;??wy not !fget
00024FA2 <AmiBlitz3.ab3@6992>   CMP.w #$29,D0
00024FA6 <AmiBlitz3.ab3@6993>    BNE.w syntaxerr
00024FAC <AmiBlitz3.ab3@6994>   MOVE.w D1,extraword
00024FAE <AmiBlitz3.ab3@6995>   MOVEQ.l #$06,D5
00024FB2 <AmiBlitz3.ab3@6996> BRA.w get1bytemain                                         ;??wy not !fget
00024FB6 <AmiBlitz3.ab3@7000>   CMP.w #")",D0                                            ;")"
00024FBA <AmiBlitz3.ab3@7001>    BNE.w errorbracketmiss                                  ; was syntax error
00024FBC <AmiBlitz3.ab3@7002>   MOVEQ.l #$05,D5
00024FC0 <AmiBlitz3.ab3@7003> BRA.w get1bytemain                                         ;??wy not !fget
00024FC6 <AmiBlitz3.ab3@7010>   MOVEA.l asmbuff,A0
00024FCC <AmiBlitz3.ab3@7011>   MOVE.w ininclude,D1
00024FD2 <AmiBlitz3.ab3@7012>   OR.w inmacro,D1
00024FD4 <AmiBlitz3.ab3@7013>   MOVE.w D1,(A0)+                                          ;flag!
00024FD8 <AmiBlitz3.ab3@7014>    BNE.w copyconst
00024FDA <AmiBlitz3.ab3@7015>   MOVE.l A5,-(A7)
00024FDE <AmiBlitz3.ab3@7016>    BSR.w copyconst
00024FE4 <AmiBlitz3.ab3@7017>   MOVEA.l asmbuff,A0
00024FE8 <AmiBlitz3.ab3@7018>   CMP.w #$4,D1
00024FEC <AmiBlitz3.ab3@7019>    BLS.w asmconst__leave
00024FF2 <AmiBlitz3.ab3@7020>   TST.w lc
00024FF6 <AmiBlitz3.ab3@7021>    BNE.w asmconst__leave
00024FF8 <AmiBlitz3.ab3@7022>   ADDQ.w #2,A0
00024FFA <AmiBlitz3.ab3@7023>   MOVE.l (A7)+,(A0)+
00024FFC <AmiBlitz3.ab3@7024>   CLR.b (A0)
00025004 <AmiBlitz3.ab3@7025>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00025006 <AmiBlitz3.ab3@7026> RTS
00025008 <AmiBlitz3.ab3@7030>   NOT.w (A0)
0002500A <AmiBlitz3.ab3@7031>   ADDQ.w #4,A7
0002500C <AmiBlitz3.ab3@7032> RTS
0002500E <AmiBlitz3.ab3@7035> lc:  Ds.w 1
00025014 <AmiBlitz3.ab3@7039>   CLR.w lc
00025016 <AmiBlitz3.ab3@7040>   MOVEQ.l #$00,D1
00025018 <AmiBlitz3.ab3@7043>    ADDQ.w #1,D1                                            ;label name
00025044 <AmiBlitz3.ab3@7044>    !fget                                                   ;bsr.w get1bytemain
00025048 <AmiBlitz3.ab3@7045>    BEQ.w copyconst__done
0002504C <AmiBlitz3.ab3@7046>    CMP.w #$22,d0
00025050 <AmiBlitz3.ab3@7047>    BNE.s copyconst__loop_l10
00025056 <AmiBlitz3.ab3@7048>    NOT.w instringon
0002505A <AmiBlitz3.ab3@7051>    CMP.w #":",d0
0002505E <AmiBlitz3.ab3@7052>    BNE.s copyconst__loop_l11
00025064 <AmiBlitz3.ab3@7053>    TST.w instringon
00025068 <AmiBlitz3.ab3@7054>    BEQ copyconst__done
0002506A <AmiBlitz3.ab3@7057>   TST.w D0
0002506E <AmiBlitz3.ab3@7058>   BPL.w copyconst__notmi
00025070 <AmiBlitz3.ab3@7059>   MOVE.w D0,-(A7)
00025072 <AmiBlitz3.ab3@7060>   LSR.w #8,D0
00025074 <AmiBlitz3.ab3@7061>   MOVE.b D0,(A0)+
00025076 <AmiBlitz3.ab3@7062>   MOVE.w (A7)+,D0
00025078 <AmiBlitz3.ab3@7063>   MOVE.b D0,(A0)+
0002507A <AmiBlitz3.ab3@7064>   ADDQ.w #1,D1
0002507E <AmiBlitz3.ab3@7065> BRA.s copyconst__loop
00025084 <AmiBlitz3.ab3@7068>    TST.w instringon
00025088 <AmiBlitz3.ab3@7069>    BNE.w copyconst__putbyte
0002508E <AmiBlitz3.ab3@7070>    TST.b _dcb
00025092 <AmiBlitz3.ab3@7071>    BNE copyconst__notmi_l10
00025096 <AmiBlitz3.ab3@7072>    CMP.w #$28,D0
0002509A <AmiBlitz3.ab3@7073>    BEQ.w copyconst__done
0002509E <AmiBlitz3.ab3@7076>    CMP.w #$2C,D0
000250A2 <AmiBlitz3.ab3@7077>    BEQ.w copyconst__done
000250A6 <AmiBlitz3.ab3@7078>    CMP.b #"'",D0
000250AA <AmiBlitz3.ab3@7079>    BNE.w copyconst__putbyte
000250B0 <AmiBlitz3.ab3@7080>    MOVE.w D0,lc                                     ;locallabels
000250B2 <AmiBlitz3.ab3@7081>    MOVE.l A1,-(A7)
000250B8 <AmiBlitz3.ab3@7082>    LEA lastgloballabel,A1
000250BA <AmiBlitz3.ab3@7083>    TST.b (A1)
000250BE <AmiBlitz3.ab3@7084>    BEQ.w nolocerr
000250C0 <AmiBlitz3.ab3@7087>   ADDQ.w #1,D1
000250C2 <AmiBlitz3.ab3@7088>   MOVE.b (A1)+,(A0)+
000250C6 <AmiBlitz3.ab3@7089>    BNE.w copyconst__cloop
000250C8 <AmiBlitz3.ab3@7090>   SUBQ.w #1,D1
000250CA <AmiBlitz3.ab3@7091>   SUBQ.w #1,A0
000250CC <AmiBlitz3.ab3@7092>   MOVEA.l (A7)+,A1
000250CE <AmiBlitz3.ab3@7095>   MOVE.b D0,(A0)+
000250D2 <AmiBlitz3.ab3@7096> BRA.w copyconst__loop
000250D4 <AmiBlitz3.ab3@7099>   CLR.b (A0)
000250DA <AmiBlitz3.ab3@7100>   MOVE.w D1,asmlen2
000250DC <AmiBlitz3.ab3@7101> RTS
000250E2 <AmiBlitz3.ab3@7106>   CMP.l #$80ad,d0
000250E6 <AmiBlitz3.ab3@7107>   BNE.s 'l12
000250EC <AmiBlitz3.ab3@7108> JMP bssseg
000250F2 <AmiBlitz3.ab3@7111>   CMP.l #$807f,d0
000250F6 <AmiBlitz3.ab3@7112>     BNE.s 'l13
000250FC <AmiBlitz3.ab3@7113> JMP chipseg
00025102 <AmiBlitz3.ab3@7116>   ADDQ.l #1,destpointer                                    ;even
0002510A <AmiBlitz3.ab3@7117>   BCLR #$0,destpointer+3
0002510E <AmiBlitz3.ab3@7118>   SUBI.w #$803C,D0
00025110 <AmiBlitz3.ab3@7119>   LSL.w #2,D0
00025116 <AmiBlitz3.ab3@7120>   MOVEA.l #asmpnts,A0
0002511A <AmiBlitz3.ab3@7121>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00025120 <AmiBlitz3.ab3@7122>   MOVE.w D0,temp1
00025122 <AmiBlitz3.ab3@7123>   MOVE.l A0,-(A7)
00025124 <AmiBlitz3.ab3@7124>   MOVEQ.l #$01,D1
00025150 <AmiBlitz3.ab3@7125>    !fget                                                   ;bsr.w get1bytemain
00025154 <AmiBlitz3.ab3@7126>   CMP.w #$2E,D0
00025158 <AmiBlitz3.ab3@7127>    BNE.w JL_0_6184
00025184 <AmiBlitz3.ab3@7128>   !fget                                                    ;bsr.w get1bytemain
00025188 <AmiBlitz3.ab3@7129>   ORI.w #$20,D0
0002518C <AmiBlitz3.ab3@7130>   CMP.w #$77,D0                                            ;long
00025190 <AmiBlitz3.ab3@7131>    BEQ.w JL_0_618A
00025194 <AmiBlitz3.ab3@7132>   CMP.w #$62,D0                                            ;byte
00025198 <AmiBlitz3.ab3@7133>    BEQ.w JL_0_617A
0002519C <AmiBlitz3.ab3@7134>   CMP.w #$6C,D0                                            ;word
000251A0 <AmiBlitz3.ab3@7135>    BEQ.w JL_0_6196
000251A4 <AmiBlitz3.ab3@7136>   CMP.w #"s",d0
000251A8 <AmiBlitz3.ab3@7137>   BNE syntaxerr
000251AC <AmiBlitz3.ab3@7138> BRA.w JL_0_617A
000251AE <AmiBlitz3.ab3@7141>   MOVEQ.l #$00,D1
000251B2 <AmiBlitz3.ab3@7142>   MOVE.w $8(A0),D0
000251B6 <AmiBlitz3.ab3@7143> BRA.w JL_0_619E
000251B8 <AmiBlitz3.ab3@7146>   MOVEQ.l #$04,D1
000251BC <AmiBlitz3.ab3@7147> BRA.w JL_0_61AE
000251BE <AmiBlitz3.ab3@7150>   MOVEQ.l #$04,D1
000251C2 <AmiBlitz3.ab3@7151>   MOVE.w $8(A0),D0
000251C4 <AmiBlitz3.ab3@7152>   LSR.w #4,D0
000251C8 <AmiBlitz3.ab3@7153> BRA.w JL_0_619E
000251CA <AmiBlitz3.ab3@7156>   MOVEQ.l #$08,D1
000251CE <AmiBlitz3.ab3@7157>   MOVE.w $8(A0),D0
000251D0 <AmiBlitz3.ab3@7158>   LSR.w #8,D0
000251D4 <AmiBlitz3.ab3@7161>    ANDI.w #$F,D0
000251D8 <AmiBlitz3.ab3@7162>   CMP.w #$F,D0
000251DC <AmiBlitz3.ab3@7163>    BNE.w 'cl60
000251E4 <AmiBlitz3.ab3@7166>    CMP.l #"MULS",-6(a0)
000251E8 <AmiBlitz3.ab3@7167>    BNE 'c20
000251EE <AmiBlitz3.ab3@7168>    MOVE.l #$4c000800,d1
000251F4 <AmiBlitz3.ab3@7169> JMP do32
000251FC <AmiBlitz3.ab3@7172>    CMP.l #"MULU",-6(a0)
00025200 <AmiBlitz3.ab3@7173>    BNE 'c30
00025206 <AmiBlitz3.ab3@7174>    MOVE.l #$4c000000,d1
0002520C <AmiBlitz3.ab3@7175> JMP do32
00025214 <AmiBlitz3.ab3@7178>    CMP.l #"DIVS",-6(a0)
00025218 <AmiBlitz3.ab3@7179>    BNE 'c40
0002521E <AmiBlitz3.ab3@7180>    MOVE.l #$4c400800,d1
00025224 <AmiBlitz3.ab3@7181> JMP do32
0002522C <AmiBlitz3.ab3@7184>    CMP.l #"DIVU",-6(a0)
00025230 <AmiBlitz3.ab3@7185>    BNE 'c50
00025236 <AmiBlitz3.ab3@7186>    MOVE.l #$4c400000,d1
0002523C <AmiBlitz3.ab3@7187> JMP do32
00025240 <AmiBlitz3.ab3@7190> BRA illsizeerr
0002526C <AmiBlitz3.ab3@7193>   !fget                                                    ;bsr.w get1bytemain
00025272 <AmiBlitz3.ab3@7196>   MOVE.w D1,asmsize
00025274 <AmiBlitz3.ab3@7197>   MOVEQ.l #-$01,D3
00025278 <AmiBlitz3.ab3@7198>    BSR.w reget
0002527C <AmiBlitz3.ab3@7199>    BEQ.w JL_0_6200
00025286 <AmiBlitz3.ab3@7200>   MOVE.l #ptr_parameterstore,asmbuff
00025290 <AmiBlitz3.ab3@7202>    MOVE.w oldqflag,instringon
00025296 <AmiBlitz3.ab3@7203>   MOVEA.l lastsourcepos,A5
0002529A <AmiBlitz3.ab3@7204>    BSR.w JL_0_5DC2
0002529C <AmiBlitz3.ab3@7205>   MOVE.l D4,D2                                             ;to src
0002529E <AmiBlitz3.ab3@7206>   MOVE.l D5,D3
000252A8 <AmiBlitz3.ab3@7207>   MOVE.w asmlen2,asmlen
000252AA <AmiBlitz3.ab3@7208>   MOVEQ.l #-$01,D5
000252B4 <AmiBlitz3.ab3@7209>   MOVE.w extraword,extraword2
000252B8 <AmiBlitz3.ab3@7210>   CMP.w #$2C,D0                                            ;','
000252BC <AmiBlitz3.ab3@7211>    BNE.w JL_0_6200
000252C6 <AmiBlitz3.ab3@7212>   MOVE.l #namebuff2,asmbuff
000252CA <AmiBlitz3.ab3@7213>    BSR.w JL_0_5DC2                                         ;dest
000252CC <AmiBlitz3.ab3@7216>   MOVEA.l (A7)+,A0
000252D2 <AmiBlitz3.ab3@7217>   MOVEA.l destpointer,A1
000252D4 <AmiBlitz3.ab3@7218>   MOVEA.l A1,A4
000252D6 <AmiBlitz3.ab3@7219>   ADDQ.w #2,A1
000252D8 <AmiBlitz3.ab3@7220>   MOVE.w (A0),D1
000252DA <AmiBlitz3.ab3@7221>   TST.w D3
000252DE <AmiBlitz3.ab3@7222>    BMI.w JL_0_639E
000252E2 <AmiBlitz3.ab3@7223>   MOVE.w $E(A0),D0
000252E6 <AmiBlitz3.ab3@7224>    BPL.w JL_0_6264
000252EA <AmiBlitz3.ab3@7225>   BTST #$0,D0
000252EE <AmiBlitz3.ab3@7226>    BEQ.w JL_0_6240
000252F2 <AmiBlitz3.ab3@7227>   CMP.w #$1,D5
000252F6 <AmiBlitz3.ab3@7228>    BNE.w JL_0_6240
000252FA <AmiBlitz3.ab3@7229>   CMP.w #$E,D3
000252FE <AmiBlitz3.ab3@7230>    BEQ.w JL_0_6264
00025304 <AmiBlitz3.ab3@7231>   MOVE.w temp1,D0
00025306 <AmiBlitz3.ab3@7232>   ADDQ.w #4,D0
0002530A <AmiBlitz3.ab3@7233> BRA.w JL_0_6256
0002530E <AmiBlitz3.ab3@7236>   BTST #$1,D0
00025312 <AmiBlitz3.ab3@7237>    BEQ.w JL_0_6264
00025316 <AmiBlitz3.ab3@7238>   CMP.w #$B,D3
0002531A <AmiBlitz3.ab3@7239>    BNE.w JL_0_6264
00025320 <AmiBlitz3.ab3@7240>   MOVE.w temp1,D0
00025322 <AmiBlitz3.ab3@7243>   ADDQ.w #4,D0
00025328 <AmiBlitz3.ab3@7244>   MOVEA.l #asmpnts,A0
0002532C <AmiBlitz3.ab3@7245>   MOVEA.l $0(A0,D0.W),A0
0002532E <AmiBlitz3.ab3@7246>   MOVE.w (A0),D1
00025338 <AmiBlitz3.ab3@7249>   MOVE.l #ptr_parameterstore,buff1
00025342 <AmiBlitz3.ab3@7250>   MOVE.l #namebuff2,buff2
00025346 <AmiBlitz3.ab3@7251>   MOVE.l $A(A0),D0
0002534A <AmiBlitz3.ab3@7252>    BEQ.w JL_0_62DC
0002534C <AmiBlitz3.ab3@7253>   MOVEA.l D0,A3
00025352 <AmiBlitz3.ab3@7254>   MOVE.w asmsize,D6
00025354 <AmiBlitz3.ab3@7257>    JSR (A3)
00025358 <AmiBlitz3.ab3@7258>    BPL.w JL_0_629A
0002535C <AmiBlitz3.ab3@7259>   CMP.w #-$2,D0
00025360 <AmiBlitz3.ab3@7260>    BEQ.w illsizeerr
00025364 <AmiBlitz3.ab3@7261> BRA.w illeaerr
00025368 <AmiBlitz3.ab3@7264>   BEQ.w JL_0_62DC
0002536A <AmiBlitz3.ab3@7265>   EXG.l D2,D4
0002536C <AmiBlitz3.ab3@7266>   EXG.l D3,D5
00025372 <AmiBlitz3.ab3@7267>   MOVE.l extraword,D6
00025374 <AmiBlitz3.ab3@7268>   SWAP D6
0002537A <AmiBlitz3.ab3@7269>   MOVE.l D6,extraword
00025384 <AmiBlitz3.ab3@7270>   MOVE.l #namebuff2,buff1
0002538E <AmiBlitz3.ab3@7271>   MOVE.l #ptr_parameterstore,buff2
00025394 <AmiBlitz3.ab3@7272>   MOVE.w asmlen,D6
0002539A <AmiBlitz3.ab3@7273>   MOVE.w asmlen2,D7
000253A0 <AmiBlitz3.ab3@7274>   MOVE.w D6,asmlen2
000253A6 <AmiBlitz3.ab3@7275>   MOVE.w D7,asmlen
000253B0 <AmiBlitz3.ab3@7278>   MOVE.l buff1,asmbuff
000253B4 <AmiBlitz3.ab3@7279>   MOVE.w $E(A0),D0
000253B8 <AmiBlitz3.ab3@7280>    BEQ.w JL_0_6348
000253BC <AmiBlitz3.ab3@7281>    BMI.w JL_0_6348
000253C0 <AmiBlitz3.ab3@7282>    CMP.w #$7000,d1
000253C4 <AmiBlitz3.ab3@7283>    BNE 'skip
000253C8 <AmiBlitz3.ab3@7284>    CMP.w #$b,d3
000253CC <AmiBlitz3.ab3@7285>    BNE illeaerr
000253D0 <AmiBlitz3.ab3@7288>    CMP.w #$1,D0
000253D4 <AmiBlitz3.ab3@7289>    BNE.w JL_0_630E
000253D8 <AmiBlitz3.ab3@7290>    CMP.w #$B,D3
000253DC <AmiBlitz3.ab3@7291>    BNE.w JL_0_6348
000253E0 <AmiBlitz3.ab3@7294>    BSR.w insasm
000253E2 <AmiBlitz3.ab3@7295>   MOVE.w D4,D2
000253E4 <AmiBlitz3.ab3@7296>   MOVE.w D5,D3
000253E8 <AmiBlitz3.ab3@7297> BRA.w JL_0_6364
000253EC <AmiBlitz3.ab3@7300>    CMP.w #$2,D0
000253F0 <AmiBlitz3.ab3@7301>    BNE.w JL_0_6324
000253F4 <AmiBlitz3.ab3@7302>   CMP.w #$8,D3
000253F8 <AmiBlitz3.ab3@7303>    BNE.w illeaerr
000253FA <AmiBlitz3.ab3@7304>   MOVEQ.l #$09,D3
000253FE <AmiBlitz3.ab3@7305> BRA.w JL_0_6348
00025402 <AmiBlitz3.ab3@7308>    CMP.w #$3,D0
00025406 <AmiBlitz3.ab3@7309>    BEQ.w JL_0_6302
0002540A <AmiBlitz3.ab3@7310>   CMP.w #$4,D0
0002540E <AmiBlitz3.ab3@7311>    BEQ.w JL_0_6302
00025412 <AmiBlitz3.ab3@7312>   CMP.w #$5,D0
00025416 <AmiBlitz3.ab3@7313>    BNE.w JL_0_6348
0002541A <AmiBlitz3.ab3@7314>   CMP.w #$8,D5
0002541E <AmiBlitz3.ab3@7315>    BNE.w illeaerr
00025420 <AmiBlitz3.ab3@7316>   OR.w D2,D1
00025422 <AmiBlitz3.ab3@7317>   MOVEQ.l #$09,D5
00025426 <AmiBlitz3.ab3@7320>   MOVE.w $2(A0),D6
0002542A <AmiBlitz3.ab3@7321>   MOVE.b $6(A0),D7
0002542E <AmiBlitz3.ab3@7322>   MOVEM.l D4-D5,-(A7)
00025434 <AmiBlitz3.ab3@7323>   MOVE.w extraword2,D4
00025438 <AmiBlitz3.ab3@7324>    BSR.w doea
0002543C <AmiBlitz3.ab3@7325>   MOVEM.l (A7)+,D2-D3
0002543E <AmiBlitz3.ab3@7326>   TST.w D3
00025442 <AmiBlitz3.ab3@7329>     BMI.w JL_0_6392
00025448 <AmiBlitz3.ab3@7330>   MOVE.w extraword,D4
0002544C <AmiBlitz3.ab3@7331>   MOVE.w $4(A0),D6
00025450 <AmiBlitz3.ab3@7332>   MOVE.b $7(A0),D7
0002545A <AmiBlitz3.ab3@7333>   MOVE.l buff2,asmbuff
00025464 <AmiBlitz3.ab3@7334>   MOVE.w asmlen2,asmlen
00025468 <AmiBlitz3.ab3@7335>    BSR.w doea
0002546C <AmiBlitz3.ab3@7336> BRA.w JL_0_63AA
00025470 <AmiBlitz3.ab3@7339>   MOVE.w $4(A0),D0
00025474 <AmiBlitz3.ab3@7340>    BNE.w illeaerr
00025478 <AmiBlitz3.ab3@7341> BRA.w JL_0_63AA
0002547C <AmiBlitz3.ab3@7345>   MOVE.w $2(A0),D0
00025480 <AmiBlitz3.ab3@7346>   OR.w $4(A0),D0
00025484 <AmiBlitz3.ab3@7347>    BNE.w illeaerr
00025488 <AmiBlitz3.ab3@7350>   MOVE.w $8(A0),D0
0002548C <AmiBlitz3.ab3@7351>   ANDI.w #$F000,D0
00025490 <AmiBlitz3.ab3@7352>   CMP.w #-$1000,D0
00025494 <AmiBlitz3.ab3@7353>    BEQ.w JL_0_63D2
00025496 <AmiBlitz3.ab3@7354>   LSR.w #8,D0
00025498 <AmiBlitz3.ab3@7355>   LSR.w #4,D0
0002549C <AmiBlitz3.ab3@7356>   MOVE.w $8(A0),D2
000254A2 <AmiBlitz3.ab3@7357>   MOVE.w asmsize,D3
000254A4 <AmiBlitz3.ab3@7358>   LSR.w D3,D2
000254A8 <AmiBlitz3.ab3@7359>   ANDI.w #$F,D2
000254AA <AmiBlitz3.ab3@7360>   LSL.w D0,D2
000254AC <AmiBlitz3.ab3@7361>   OR.w D2,D1
000254B2 <AmiBlitz3.ab3@7364>   CMPA.l destbufferend,A4
000254B6 <AmiBlitz3.ab3@7365>    BCS.w JL_0_63E8
000254BE <AmiBlitz3.ab3@7367>   MOVE.w #$FFFF,dontwrite
000254C2 <AmiBlitz3.ab3@7368> BRA.w JL_0_63EA
000254C4 <AmiBlitz3.ab3@7371>   MOVE.w D1,(A4)
000254CA <AmiBlitz3.ab3@7374>   MOVE.l A1,destpointer
000254CC <AmiBlitz3.ab3@7375> RTS
000254D2 <AmiBlitz3.ab3@7379>   MOVE.l destpointer,-(A7)
000254D8 <AmiBlitz3.ab3@7380>   MOVE.l A1,destpointer
000254DC <AmiBlitz3.ab3@7381>    BSR.w addoff
000254E2 <AmiBlitz3.ab3@7382>   MOVEA.l destpointer,A1
000254E8 <AmiBlitz3.ab3@7383>   MOVE.l (A7)+,destpointer
000254EA <AmiBlitz3.ab3@7384> RTS
000254EE <AmiBlitz3.ab3@7388>   MOVEM.l d2-d6,-(a7)
000254F4 <AmiBlitz3.ab3@7389>   JSR stripspaces
000254F8 <AmiBlitz3.ab3@7390>   CMP.b #"d",(a5)+
000254FC <AmiBlitz3.ab3@7391>   BNE noreg
000254FE <AmiBlitz3.ab3@7392>   MOVE.b (a5)+,d0
00025502 <AmiBlitz3.ab3@7393>   CMP.b #$30,d0
00025506 <AmiBlitz3.ab3@7394>   BLT noreg
0002550A <AmiBlitz3.ab3@7395>   CMP.b #$37,d0
0002550E <AmiBlitz3.ab3@7396>   BGT noreg
00025512 <AmiBlitz3.ab3@7397>   SUB.b #$30,d0
00025514 <AmiBlitz3.ab3@7398>   MOVEQ #0,d3
00025516 <AmiBlitz3.ab3@7399>   MOVE.b d0,d3                                             ;reg1
00025518 <AmiBlitz3.ab3@7400>   ASL.l #8,d3
0002551A <AmiBlitz3.ab3@7401>   ASL.l #8,d3
00025520 <AmiBlitz3.ab3@7402>   JSR stripspaces
00025524 <AmiBlitz3.ab3@7403>   CMP.b #",",(a5)+
00025528 <AmiBlitz3.ab3@7404>   BNE noreg
0002552E <AmiBlitz3.ab3@7405>   JSR stripspaces
00025532 <AmiBlitz3.ab3@7406>   CMP.b #"d",(a5)+
00025536 <AmiBlitz3.ab3@7407>   BNE noreg
00025538 <AmiBlitz3.ab3@7408>   MOVE.b (a5)+,d0
0002553C <AmiBlitz3.ab3@7409>   CMP.b #$30,d0
00025540 <AmiBlitz3.ab3@7410>   BLT noreg
00025544 <AmiBlitz3.ab3@7411>   CMP.b #$37,d0
00025548 <AmiBlitz3.ab3@7412>   BGT noreg
0002554C <AmiBlitz3.ab3@7413>   SUB.b #$30,d0
0002554E <AmiBlitz3.ab3@7414>   MOVEQ #0,d4
00025550 <AmiBlitz3.ab3@7415>   MOVE.b d0,d4                                             ;reg2
00025552 <AmiBlitz3.ab3@7416>   ASL.l #8,d4
00025554 <AmiBlitz3.ab3@7417>   ASL.l #4,d4
00025556 <AmiBlitz3.ab3@7418>   OR.b d0,d1
00025558 <AmiBlitz3.ab3@7419>   OR.l d3,d1
0002555A <AmiBlitz3.ab3@7420>   OR.l d4,d1
00025560 <AmiBlitz3.ab3@7421>   JSR writelong
00025564 <AmiBlitz3.ab3@7422>   MOVEM.l (a7)+,d2-d6
00025568 <AmiBlitz3.ab3@7423>   MOVEM.l d1/a1-a3,-(a7)
0002556C <AmiBlitz3.ab3@7424> BRA exit
00025570 <AmiBlitz3.ab3@7428>   MOVEM.l (a7)+,d2-d6
00025576 <AmiBlitz3.ab3@7429>   LEA errtext,a0
00025578 <AmiBlitz3.ab3@7430>   MOVE.l a0,-(a7)
0002557E <AmiBlitz3.ab3@7431> JMP handle_compileerror
00025584 <AmiBlitz3.ab3@7440>   MOVE.w dontwrite,D1
00025588 <AmiBlitz3.ab3@7441>    BNE.w asmfixer__done
00025590 <AmiBlitz3.ab3@7442>   BTST #$7,make_smallestcode
00025594 <AmiBlitz3.ab3@7443>    BEQ.w asmfixer__go
00025598 <AmiBlitz3.ab3@7444>   MOVE.w pass(PC),D1
0002559C <AmiBlitz3.ab3@7445>    BEQ.w asmfixer__done
000255A2 <AmiBlitz3.ab3@7448>   MOVEA.l templabel,A2                                     ;insert labels in Code
000255AA <AmiBlitz3.ab3@7449>   MOVE.b #1,curtemplabel
000255B2 <AmiBlitz3.ab3@7450>   MOVE.w #$FFFF,constmode
000255B8 <AmiBlitz3.ab3@7451>   CLR.w regnum
000255C2 <AmiBlitz3.ab3@7452>           MOVE.l #forthstack,forthsp
000255CC <AmiBlitz3.ab3@7453>           MOVE.l #precstack,precsp
000255D0 <AmiBlitz3.ab3@7454>    BSR.w prepstack
000255D2 <AmiBlitz3.ab3@7457>   MOVE.l A2,-(A7)
000255D6 <AmiBlitz3.ab3@7458>    BSR.w chkstop
000255D8 <AmiBlitz3.ab3@7459>   MOVEA.l (A7)+,A2
000255DC <AmiBlitz3.ab3@7460>   CMPA.w #$0,A2
000255E0 <AmiBlitz3.ab3@7461>    BEQ.w asmfixer__done2
000255E6 <AmiBlitz3.ab3@7462>    CLR.b iee
000255EC <AmiBlitz3.ab3@7463>   MOVE.l A2,asmbuff
000255F0 <AmiBlitz3.ab3@7464>   LEA $10(A2),A5
000255F4 <AmiBlitz3.ab3@7465>   TST.b $F(A2)
000255F8 <AmiBlitz3.ab3@7466>    BNE.w asmfixer__skipo
000255FA <AmiBlitz3.ab3@7467>   MOVEA.l (A5),A5                                          ;pointer to real text
00025600 <AmiBlitz3.ab3@7470>    CLR.w asmtype
00025604 <AmiBlitz3.ab3@7471>    CMP.b #".",(a5)
00025608 <AmiBlitz3.ab3@7472>    BNE.s asmfixer__skipo_l10
0002560A <AmiBlitz3.ab3@7473>    MOVE.l a2,-(a7)
0002560C <AmiBlitz3.ab3@7474>    ADDQ.l #1,a5
00025612 <AmiBlitz3.ab3@7475>    LEA newtypebase,a2
00025616 <AmiBlitz3.ab3@7476>    BSR getparameter2
0002561A <AmiBlitz3.ab3@7477>    BEQ.w syntaxerr
0002561E <AmiBlitz3.ab3@7478>    BSR findtype
00025622 <AmiBlitz3.ab3@7479>    BNE.w notypeerr
00025626 <AmiBlitz3.ab3@7480>    LEA $4(a2),a2
0002562A <AmiBlitz3.ab3@7481>    BSR getparameter2
0002562E <AmiBlitz3.ab3@7482>    BEQ.w syntaxerr
00025632 <AmiBlitz3.ab3@7483>    BSR.w findvariable2
00025636 <AmiBlitz3.ab3@7484>    BNE.w notypeerr
0002563A <AmiBlitz3.ab3@7485>    MOVE.w $4(a2),d3
0002563C <AmiBlitz3.ab3@7486>    EXT.l d3
00025640 <AmiBlitz3.ab3@7487> BRA asmfixer__skipo_l30b
00025644 <AmiBlitz3.ab3@7490>   CMP.b #"\",(a5)
00025648 <AmiBlitz3.ab3@7491>     BNE asmfixer__skipo_l20
0002564A <AmiBlitz3.ab3@7492>     ADDQ.l #1,a5
0002564C <AmiBlitz3.ab3@7493>    MOVE.l a2,-(a7)
0002564E <AmiBlitz3.ab3@7494>    MOVE.l a5,a4
00025654 <AmiBlitz3.ab3@7495>    LEA usedpath,a5
00025658 <AmiBlitz3.ab3@7496>    CMP.b #"*",(a5)
0002565C <AmiBlitz3.ab3@7497>    BNE asmfixer__skipo_lm1
0002565E <AmiBlitz3.ab3@7498>    ADDQ.l #1,a5
00025662 <AmiBlitz3.ab3@7501>    BSR.w getparameter2
00025666 <AmiBlitz3.ab3@7502>    BEQ.w syntaxerr
0002566C <AmiBlitz3.ab3@7503>    LEA varbase,A2
00025674 <AmiBlitz3.ab3@7504>    MOVE.b #1,newvariable
00025678 <AmiBlitz3.ab3@7505>    BSR.w findvariable
0002567E <AmiBlitz3.ab3@7506>    CLR.b newvariable
00025684 <AmiBlitz3.ab3@7507>    CMP.l #-1,d0
00025688 <AmiBlitz3.ab3@7508>    BEQ.w notypeerr
0002568A <AmiBlitz3.ab3@7509>    MOVE.l a4,a5
0002568E <AmiBlitz3.ab3@7510>    MOVE.l $a(a2),a2
00025692 <AmiBlitz3.ab3@7511>    LEA $4(a2),a2
00025696 <AmiBlitz3.ab3@7512>    BSR getparameter2
0002569A <AmiBlitz3.ab3@7513>    BEQ.w syntaxerr
0002569E <AmiBlitz3.ab3@7514>    BSR.w findvariable2
000256A2 <AmiBlitz3.ab3@7515>    BNE.w notypeerr
000256A6 <AmiBlitz3.ab3@7516>   MOVE.w $4(A2),D3
000256A8 <AmiBlitz3.ab3@7517>   EXT.l D3
000256AE <AmiBlitz3.ab3@7520>    CMP.b #"[",-1(a5)
000256B2 <AmiBlitz3.ab3@7521>    BNE asmfixer__skipo_l30c
000256B4 <AmiBlitz3.ab3@7522>    MOVEQ #0,d0
000256B6 <AmiBlitz3.ab3@7523>    MOVE.b (a5)+,d0
000256B8 <AmiBlitz3.ab3@7524>    MOVE.l d3,-(a7)
000256BA <AmiBlitz3.ab3@7525>    MOVEQ #0,d3
000256C0 <AmiBlitz3.ab3@7526>    JSR atoi
000256C2 <AmiBlitz3.ab3@7527>    MOVE.l (a7)+,d1
000256C6 <AmiBlitz3.ab3@7528>    MOVE.l $a(a2),a2
000256CA <AmiBlitz3.ab3@7529>    MOVE.w 8(a2),d0
000256CC <AmiBlitz3.ab3@7530>    MULS d0,d3
000256CE <AmiBlitz3.ab3@7531>    ADD.l d1,d3
000256D0 <AmiBlitz3.ab3@7534>   MOVE.l (a7)+,a2
000256D4 <AmiBlitz3.ab3@7535> BRA asmfixer__oko
000256DA <AmiBlitz3.ab3@7538>   CMP.w #$c,$8(a2)
000256DE <AmiBlitz3.ab3@7539>      BEQ asmfixer__skipo_lf1
000256E4 <AmiBlitz3.ab3@7540>      CMP.w #$d,$8(a2)
000256E8 <AmiBlitz3.ab3@7541>      BEQ asmfixer__skipo_lf1
000256EE <AmiBlitz3.ab3@7544>   JSR AJL_0_BF6E
000256F4 <AmiBlitz3.ab3@7547>   MOVEA.l asmbuff,A2
000256F8 <AmiBlitz3.ab3@7548>    BEQ.w asmfixer__oko
000256FC <AmiBlitz3.ab3@7549>   CMP.w #$28,D0
00025700 <AmiBlitz3.ab3@7550>    BEQ.w asmfixer__oko
00025704 <AmiBlitz3.ab3@7551>   CMP.w #$2C,D0
00025708 <AmiBlitz3.ab3@7552>    BEQ.w asmfixer__oko
0002570C <AmiBlitz3.ab3@7553> BRA.w syntaxerr
00025714 <AmiBlitz3.ab3@7556>   MOVE.b #1,iee
00025718 <AmiBlitz3.ab3@7557> BRA asmfixer__skipo_lf2
0002571C <AmiBlitz3.ab3@7560>   MOVEA.l $4(A2),A1
00025720 <AmiBlitz3.ab3@7562>   MOVE.w $8(A2),D1                                         ;labelmode
00025724 <AmiBlitz3.ab3@7563>   CMP.w #$5,D1
00025728 <AmiBlitz3.ab3@7564>    BNE.w asmfixer__notdan
0002572C <AmiBlitz3.ab3@7567>    BSR.w chkword                                         ;word
0002572E <AmiBlitz3.ab3@7570>   MOVE.w D3,(A1)
00025732 <AmiBlitz3.ab3@7571> BRA.w asmfixer__next
00025736 <AmiBlitz3.ab3@7574>   CMP.w #$6,D1
0002573A <AmiBlitz3.ab3@7575>    BNE.w asmfixer__notdanxi
0002573E <AmiBlitz3.ab3@7578>    BSR.w chkbyte                                         ;byte
00025742 <AmiBlitz3.ab3@7581>   MOVE.b D3,$1(A1)
00025746 <AmiBlitz3.ab3@7582> BRA.w asmfixer__next
0002574A <AmiBlitz3.ab3@7585>    CMP.w #$11,D1                                           ;byte
0002574E <AmiBlitz3.ab3@7586>    BEQ.w asmfixer__isbyte2
00025752 <AmiBlitz3.ab3@7587>    CMP.w #$c,d1
00025756 <AmiBlitz3.ab3@7588>    BEQ asmfixer__single1
0002575A <AmiBlitz3.ab3@7589>    CMP.w #$d,d1
0002575E <AmiBlitz3.ab3@7590>    BEQ asmfixer__double1
00025762 <AmiBlitz3.ab3@7591>   CMP.w #$7,D1
00025766 <AmiBlitz3.ab3@7592>    BEQ.w asmfixer__word                                    ;word
0002576A <AmiBlitz3.ab3@7593>   CMP.w #$8,D1
0002576E <AmiBlitz3.ab3@7594>    BNE.w asmfixer__notabsl
00025774 <AmiBlitz3.ab3@7597>   MOVE.w asmtype,D1                                        ;long
00025778 <AmiBlitz3.ab3@7598>    BEQ.w asmfixer__notpcrel
0002577C <AmiBlitz3.ab3@7599>      BSR.w asmoff
0002577E <AmiBlitz3.ab3@7602>   MOVE.l D3,(A1)
00025782 <AmiBlitz3.ab3@7603> BRA.w asmfixer__next
00025788 <AmiBlitz3.ab3@7607>   fmove.s fp0,0(a1)
0002578C <AmiBlitz3.ab3@7608> BRA.w asmfixer__next
00025792 <AmiBlitz3.ab3@7612>   fmove.d fp0,0(a1)
00025796 <AmiBlitz3.ab3@7613> BRA.w asmfixer__next
0002579A <AmiBlitz3.ab3@7617>   CMP.w #$9,D1
0002579E <AmiBlitz3.ab3@7618>    BNE.w asmfixer__notdpc
000257A0 <AmiBlitz3.ab3@7619>   SUB.l A1,D3                                              ;branchword
000257A4 <AmiBlitz3.ab3@7620>    BSR.w chkword
000257A6 <AmiBlitz3.ab3@7621>   MOVE.w D3,(A1)
000257AA <AmiBlitz3.ab3@7622> BRA.w asmfixer__next
000257AE <AmiBlitz3.ab3@7626>   CMP.w #$A,D1
000257B2 <AmiBlitz3.ab3@7627>    BNE.w asmfixer__imm
000257B4 <AmiBlitz3.ab3@7628>   SUB.l A1,D3                                              ;branchbyte
000257B8 <AmiBlitz3.ab3@7629> BRA.w asmfixer__isbyte
000257BC <AmiBlitz3.ab3@7633>   CMP.w #$11,d1
000257C0 <AmiBlitz3.ab3@7634>   BLE asmfixer__imm_org
000257C2 <AmiBlitz3.ab3@7635>   MOVE.l a3,-(a7)
000257C8 <AmiBlitz3.ab3@7636>   LEA pluginbase,a3
000257CC <AmiBlitz3.ab3@7637>   MOVE.l 8(a2),a0
000257CE <AmiBlitz3.ab3@7638>   JSR (a0)                                                 ;hook
000257D0 <AmiBlitz3.ab3@7639>   MOVE.l (a7)+,a3
000257D4 <AmiBlitz3.ab3@7640> BRA asmfixer__next
000257D8 <AmiBlitz3.ab3@7643>   MOVE.w $A(A2),D0
000257DC <AmiBlitz3.ab3@7644>    BEQ.w asmfixer__noflag
000257E0 <AmiBlitz3.ab3@7645>   CMP.w #$1,D0
000257E4 <AmiBlitz3.ab3@7646>    BEQ.w asmfixer__tocount
000257E8 <AmiBlitz3.ab3@7647>   CMP.w #$3,D0
000257EC <AmiBlitz3.ab3@7648>    BEQ.w asmfixer__tomoveq
000257F0 <AmiBlitz3.ab3@7649>   CMP.w #$4,D0
000257F4 <AmiBlitz3.ab3@7650>    BEQ.w asmfixer__totrap
000257F8 <AmiBlitz3.ab3@7653>   CMP.w #$B,D1                                             ;long
000257FC <AmiBlitz3.ab3@7654>    BEQ.w asmfixer__isabsl
00025800 <AmiBlitz3.ab3@7655> BRA asmfixer__word2                                              ;word
00025806 <AmiBlitz3.ab3@7658>   CMP.l #$F,D3
0002580A <AmiBlitz3.ab3@7659>    BHI.w illtraperr
0002580C <AmiBlitz3.ab3@7660>   OR.b D3,-(A1)
00025810 <AmiBlitz3.ab3@7661> BRA.w asmfixer__next
00025816 <AmiBlitz3.ab3@7664>   CMP.l #$8,D3
0002581A <AmiBlitz3.ab3@7665>    BHI.w illimmerr
0002581C <AmiBlitz3.ab3@7666>   TST.l D3
00025820 <AmiBlitz3.ab3@7667>    BEQ.w illimmerr
00025824 <AmiBlitz3.ab3@7668>   ANDI.w #$7,D3
00025826 <AmiBlitz3.ab3@7669>   LSL.w #8,D3
00025828 <AmiBlitz3.ab3@7670>   LSL.w #1,D3
0002582A <AmiBlitz3.ab3@7671>   OR.w D3,-(A1)
0002582E <AmiBlitz3.ab3@7672> BRA.w asmfixer__next
00025832 <AmiBlitz3.ab3@7675>    BSR.w chkbyte
00025834 <AmiBlitz3.ab3@7676>   MOVE.b D3,-(A1)
00025836 <AmiBlitz3.ab3@7679>   MOVEA.l (A2),A2
0002583A <AmiBlitz3.ab3@7680> BRA.w asmfixer__loop
00025840 <AmiBlitz3.ab3@7683>   CLR.w constmode
00025846 <AmiBlitz3.ab3@7686>   CLR.b curtemplabel
00025848 <AmiBlitz3.ab3@7687> RTS
0002584A <AmiBlitz3.ab3@7696>   BTST D3,D6
0002584E <AmiBlitz3.ab3@7697>    BEQ.w illeaerr
00025852 <AmiBlitz3.ab3@7698>    BSR.w makemode
00025856 <AmiBlitz3.ab3@7699>   CMP.w #$7,D3
0002585A <AmiBlitz3.ab3@7700>    BCS.w doea__skip
0002585C <AmiBlitz3.ab3@7701>   MOVE.w D3,D2
0002585E <AmiBlitz3.ab3@7702>   SUBQ.w #7,D2
00025862 <AmiBlitz3.ab3@7703>   CMP.w #$5,D2
00025866 <AmiBlitz3.ab3@7704>    BCS.w doea__skip0
00025868 <AmiBlitz3.ab3@7705>   MOVEQ.l #$04,D2
0002586A <AmiBlitz3.ab3@7708>   MOVEQ.l #$07,D3
0002586C <AmiBlitz3.ab3@7711>   MOVE.b D7,D0
00025870 <AmiBlitz3.ab3@7712>   ANDI.w #$F,D0
00025874 <AmiBlitz3.ab3@7713>   CMP.w #$F,D0
00025878 <AmiBlitz3.ab3@7714>    BEQ.w doea__skip2
0002587A <AmiBlitz3.ab3@7715>   LSL.w D0,D3
0002587C <AmiBlitz3.ab3@7716>   OR.w D3,D1
0002587E <AmiBlitz3.ab3@7719>   LSR.w #4,D7
00025882 <AmiBlitz3.ab3@7720>   ANDI.w #$F,D7
00025886 <AmiBlitz3.ab3@7721>   CMP.w #$F,D7
0002588A <AmiBlitz3.ab3@7722>    BEQ.w doea__skip3
0002588C <AmiBlitz3.ab3@7723>   LSL.w D7,D2
0002588E <AmiBlitz3.ab3@7724>   OR.w D2,D1
00025890 <AmiBlitz3.ab3@7727> RTS
00025896 <AmiBlitz3.ab3@7731>   CMP.l #$7F,D3
0002589A <AmiBlitz3.ab3@7732>    BGT.w illdiserr
000258A0 <AmiBlitz3.ab3@7733>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
000258A4 <AmiBlitz3.ab3@7734>    BLT.w illdiserr
000258A6 <AmiBlitz3.ab3@7735> RTS
000258AC <AmiBlitz3.ab3@7739>   CMP.l #$7fff,D3
000258B0 <AmiBlitz3.ab3@7740>    BGT.w illdiserr
000258B6 <AmiBlitz3.ab3@7741>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
000258BA <AmiBlitz3.ab3@7742>    BLT.w illdiserr
000258BC <AmiBlitz3.ab3@7743> RTS
000258BE <AmiBlitz3.ab3@7748>   MOVE.b (a5)+,d0
000258C0 <AmiBlitz3.ab3@7749>   CMP.b d1,d0
000258C4 <AmiBlitz3.ab3@7750>   BEQ 'll10
000258C6 <AmiBlitz3.ab3@7751>   TST.b d0
000258CA <AmiBlitz3.ab3@7752>   BNE 'll20
000258CC <AmiBlitz3.ab3@7755>   SUBQ #1,a5
000258CE <AmiBlitz3.ab3@7756> RTS
000258D0 <AmiBlitz3.ab3@7761>   MOVE.b (a5)+,d0
000258D4 <AmiBlitz3.ab3@7762>   CMP.b #",",d0
000258D8 <AmiBlitz3.ab3@7763>   BEQ 'll10
000258DC <AmiBlitz3.ab3@7764>   CMP.b #";",d0
000258E0 <AmiBlitz3.ab3@7765>   BEQ 'll10
000258E4 <AmiBlitz3.ab3@7766>  CMP.b #":",d0
000258E8 <AmiBlitz3.ab3@7767>   BEQ 'll10
000258EA <AmiBlitz3.ab3@7770>   TST.b d0
000258EE <AmiBlitz3.ab3@7771>   BNE 'll20
000258F0 <AmiBlitz3.ab3@7774>   SUBQ #1,a5
000258F2 <AmiBlitz3.ab3@7775> RTS
000258F4 <AmiBlitz3.ab3@7779>   ADD.l a2,d1
000258FA <AmiBlitz3.ab3@7780>   LEA tempspace,a1
000258FC <AmiBlitz3.ab3@7781>   MOVE.l d1,a0
000258FE <AmiBlitz3.ab3@7784>   MOVE.b (a0)+,(a1)+
00025902 <AmiBlitz3.ab3@7785>   BNE.s 'l10
00025904 <AmiBlitz3.ab3@7786>   SUBQ.l #1,a0
00025906 <AmiBlitz3.ab3@7787>   SUBQ.l #1,a1
00025908 <AmiBlitz3.ab3@7790>   MOVE.b (a5)+,(a1)+
0002590C <AmiBlitz3.ab3@7791>   BNE.s 'l20
0002590E <AmiBlitz3.ab3@7792>   CLR.b (a1)
00025914 <AmiBlitz3.ab3@7793>   LEA tempspace,a5
00025916 <AmiBlitz3.ab3@7794> RTS
0002591A <AmiBlitz3.ab3@7798>   MOVEM.l D1-D2/A0,-(A7)
0002591C <AmiBlitz3.ab3@7799>   MOVE.l d0,d2
0002591E <AmiBlitz3.ab3@7800>   MOVEQ #0,d1
00025920 <AmiBlitz3.ab3@7801>   MOVE.l a5,a4
00025922 <AmiBlitz3.ab3@7804>   ADDQ.l #1,d1
00025924 <AmiBlitz3.ab3@7805>   MOVE.b (a5)+,d0
00025928 <AmiBlitz3.ab3@7806>   CMP.b #",",d0
0002592C <AmiBlitz3.ab3@7807>   BEQ 'll10
00025930 <AmiBlitz3.ab3@7808>   CMP.b #";",d0
00025934 <AmiBlitz3.ab3@7809>   BEQ 'll10
00025938 <AmiBlitz3.ab3@7810>   CMP.b #":",d0
0002593C <AmiBlitz3.ab3@7811>   BEQ 'll10
00025940 <AmiBlitz3.ab3@7812>   CMP.b #"(",d0
00025944 <AmiBlitz3.ab3@7813>   BEQ 'll10
00025946 <AmiBlitz3.ab3@7814>   TST.b d0
0002594A <AmiBlitz3.ab3@7815>   BNE 'll20
0002594C <AmiBlitz3.ab3@7818>   SUBQ #1,a5
00025950 <AmiBlitz3.ab3@7819>   CMP.b #"'",(a4)
00025954 <AmiBlitz3.ab3@7820>   BEQ 'llocal
0002595A <AmiBlitz3.ab3@7821>   TST.w inmacro
0002595E <AmiBlitz3.ab3@7822>   BNE 'lmacro
00025960 <AmiBlitz3.ab3@7823>   MOVEQ.l #$14+4,D0
00025962 <AmiBlitz3.ab3@7824>   ADD.l d1,d0
00025964 <AmiBlitz3.ab3@7825>   MOVE.l d1,-(a7)
00025966 <AmiBlitz3.ab3@7826>   MOVEQ.l #$01,D1
0002596C <AmiBlitz3.ab3@7827>   MOVEA.l _execbase,A6
00025972 <AmiBlitz3.ab3@7828>   MOVE.l mempool2,a0
00025976 <AmiBlitz3.ab3@7829>   JSR _AllocPooled(a6)
00025978 <AmiBlitz3.ab3@7831>   MOVE.l (a7)+,d1
0002597A <AmiBlitz3.ab3@7832>   TST.l d0
0002597E <AmiBlitz3.ab3@7833>   BEQ nomemory
00025980 <AmiBlitz3.ab3@7834>   MOVEA.l D0,A0
00025988 <AmiBlitz3.ab3@7836>   MOVE.w linenumat+2,$A(A0)
0002598E <AmiBlitz3.ab3@7838>   MOVE.l templabel,(A0)
00025994 <AmiBlitz3.ab3@7839>   MOVE.l A0,templabel
0002599C <AmiBlitz3.ab3@7840>   MOVE.l destpointer,$4(A0)
000259A0 <AmiBlitz3.ab3@7841>   MOVE.l d2,$8(A0)
000259A4 <AmiBlitz3.ab3@7842>   LEA $E(A0),A0
000259A8 <AmiBlitz3.ab3@7843>   MOVE.b #$14,(A0)+
000259AA <AmiBlitz3.ab3@7844>   CLR.b (a0)+
000259AC <AmiBlitz3.ab3@7846>   MOVE.l a0,d2
000259AE <AmiBlitz3.ab3@7847>   ADDQ.l #4,d2
000259B0 <AmiBlitz3.ab3@7848>   MOVE.l d2,(a0)+
000259B2 <AmiBlitz3.ab3@7851>   MOVE.b (a4)+,(a0)+
000259B4 <AmiBlitz3.ab3@7852>   SUBQ.l #1,d1
000259B8 <AmiBlitz3.ab3@7853>   BNE 'lc1
000259BA <AmiBlitz3.ab3@7854>   CLR.b (a0)+
000259C0 <AmiBlitz3.ab3@7855>   MOVE.w linenumat,(a0)
000259C4 <AmiBlitz3.ab3@7856>   MOVEM.l (A7)+,D1-D2/A0
000259C6 <AmiBlitz3.ab3@7857> RTS
000259C8 <AmiBlitz3.ab3@7860>   MOVEQ.l #$10+2,D0
000259CA <AmiBlitz3.ab3@7861>   ADD.l d1,d0
000259CE <AmiBlitz3.ab3@7862>   MOVEM.l a4/d3,-(a7)
000259D0 <AmiBlitz3.ab3@7863>   MOVE.l d1,d3
000259D2 <AmiBlitz3.ab3@7864>   MOVEQ.l #$01,D1
000259D8 <AmiBlitz3.ab3@7865>   MOVEA.l _execbase,A6
000259DE <AmiBlitz3.ab3@7866>   MOVE.l mempool2,a0
000259E2 <AmiBlitz3.ab3@7867>   JSR _AllocPooled(a6)
000259E4 <AmiBlitz3.ab3@7869>   TST.l d0
000259E8 <AmiBlitz3.ab3@7870>   BEQ nomemory
000259EA <AmiBlitz3.ab3@7871>   MOVEA.l D0,A0
000259F2 <AmiBlitz3.ab3@7874>   MOVE.w linenumat+2,$C(A0)
000259F8 <AmiBlitz3.ab3@7875>   MOVE.l templabel,(A0)
000259FE <AmiBlitz3.ab3@7876>   MOVE.l A0,templabel
00025A06 <AmiBlitz3.ab3@7877>   MOVE.l destpointer,$4(A0)
00025A0A <AmiBlitz3.ab3@7878>   MOVE.l d2,$8(A0)
00025A0E <AmiBlitz3.ab3@7879>   LEA $E(A0),A0
00025A10 <AmiBlitz3.ab3@7880>   MOVE.b d3,(A0)+
00025A16 <AmiBlitz3.ab3@7881>   ADD.b #$10,-1(a0)
00025A1A <AmiBlitz3.ab3@7882>   MOVE.b #$1,(a0)+
00025A1C <AmiBlitz3.ab3@7883>   SUBQ.w #1,d3
00025A1E <AmiBlitz3.ab3@7886>   MOVE.b (a4)+,(a0)+
00025A20 <AmiBlitz3.ab3@7887>   SUBQ.l #1,d3
00025A24 <AmiBlitz3.ab3@7888>   BNE.s 'lm2
00025A26 <AmiBlitz3.ab3@7889>   CLR.b (a0)+
00025A2C <AmiBlitz3.ab3@7890>   MOVE.w linenumat,(a0)
00025A30 <AmiBlitz3.ab3@7891>   MOVEM.l (a7)+,d3/a4
00025A34 <AmiBlitz3.ab3@7892>   MOVEM.l (A7)+,D1-D2/A0
00025A36 <AmiBlitz3.ab3@7893> RTS
00025A3C <AmiBlitz3.ab3@7896>   LEA lastgloballabel,a1
00025A3E <AmiBlitz3.ab3@7899>   ADDQ.l #1,d1
00025A40 <AmiBlitz3.ab3@7900>   TST.b (a1)+
00025A44 <AmiBlitz3.ab3@7901>   BNE.s 'll11
00025A46 <AmiBlitz3.ab3@7902>   MOVEQ.l #$10+2,D0
00025A48 <AmiBlitz3.ab3@7903>   ADD.l d1,d0
00025A4C <AmiBlitz3.ab3@7904>   MOVEM.l a4/d3,-(a7)
00025A4E <AmiBlitz3.ab3@7905>   MOVE.l d1,d3
00025A50 <AmiBlitz3.ab3@7906>   MOVEQ.l #$01,D1
00025A56 <AmiBlitz3.ab3@7907>   MOVEA.l _execbase,A6
00025A5C <AmiBlitz3.ab3@7908>   MOVE.l mempool2,a0
00025A60 <AmiBlitz3.ab3@7909>   JSR _AllocPooled(a6)
00025A62 <AmiBlitz3.ab3@7911>   TST.l d0
00025A66 <AmiBlitz3.ab3@7912>   BEQ nomemory
00025A68 <AmiBlitz3.ab3@7913>   MOVEA.l D0,A0
00025A70 <AmiBlitz3.ab3@7916>   MOVE.w linenumat+2,$C(A0)
00025A76 <AmiBlitz3.ab3@7917>   MOVE.l templabel,(A0)
00025A7C <AmiBlitz3.ab3@7918>   MOVE.l A0,templabel
00025A84 <AmiBlitz3.ab3@7919>   MOVE.l destpointer,$4(A0)
00025A88 <AmiBlitz3.ab3@7920>   MOVE.l d2,$8(A0)
00025A8C <AmiBlitz3.ab3@7921>   LEA $E(A0),A0
00025A8E <AmiBlitz3.ab3@7922>   MOVE.b d3,(A0)+
00025A94 <AmiBlitz3.ab3@7923>   ADD.b #$10,-1(a0)
00025A98 <AmiBlitz3.ab3@7924>   MOVE.b #$1,(a0)+
00025A9A <AmiBlitz3.ab3@7925>   SUBQ.w #1,d3
00025AA0 <AmiBlitz3.ab3@7926>   LEA lastgloballabel,a1
00025AA2 <AmiBlitz3.ab3@7929>   SUBQ.l #1,d3
00025AA4 <AmiBlitz3.ab3@7930>   MOVE.b (a1)+,(a0)+
00025AA8 <AmiBlitz3.ab3@7931>   BNE.s 'lm3
00025AAA <AmiBlitz3.ab3@7932>   SUBQ.l #1,a0
00025AAC <AmiBlitz3.ab3@7935>   MOVE.b (a4)+,(a0)+
00025AAE <AmiBlitz3.ab3@7936>   SUBQ.l #1,d3
00025AB2 <AmiBlitz3.ab3@7937>   BNE.s 'lm1
00025AB4 <AmiBlitz3.ab3@7938>   CLR.b (a0)+
00025ABA <AmiBlitz3.ab3@7939>   MOVE.w linenumat,(a0)
00025ABE <AmiBlitz3.ab3@7940>   MOVEM.l (a7)+,d3/a4
00025AC2 <AmiBlitz3.ab3@7941>   MOVEM.l (A7)+,D1-D2/A0
00025AC4 <AmiBlitz3.ab3@7942> RTS
00025AEE <AmiBlitz3.ab3@7946>   !basic
00025B50 <AmiBlitz3.ab3@7947>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025B62 <AmiBlitz3.ab3@7948>   loop Delay_ 1
00025B68 <AmiBlitz3.ab3@7949> Goto loop
00025B6C <AmiBlitz3.ab3@7953>   MOVEM.l D0-D2/A0,-(A7)
00025B70 <AmiBlitz3.ab3@7954>   MOVE.w $E(A0),-(A7)
00025B74 <AmiBlitz3.ab3@7955>    BPL.w insasm__ok
00025B76 <AmiBlitz3.ab3@7956>   CLR.w (A7)
00025B78 <AmiBlitz3.ab3@7959>   MOVE.l A1,-(A7)
00025B7A <AmiBlitz3.ab3@7960>   MOVEQ.l #$10+2,D0
00025B80 <AmiBlitz3.ab3@7961>   ADD.w asmlen,D0
00025B82 <AmiBlitz3.ab3@7962>   MOVE.w D0,D2
00025B84 <AmiBlitz3.ab3@7963>   MOVEQ.l #$01,D1
00025B8A <AmiBlitz3.ab3@7964>   MOVEA.l _execbase,A6
00025B90 <AmiBlitz3.ab3@7965>   MOVE.l mempool2,a0
00025B94 <AmiBlitz3.ab3@7966>   JSR _AllocPooled(a6)
00025B96 <AmiBlitz3.ab3@7968>   MOVEA.l D0,A0
00025B9E <AmiBlitz3.ab3@7971>   MOVE.w linenumat+2,$C(A0)
00025BA4 <AmiBlitz3.ab3@7972>   MOVE.l templabel,(A0)
00025BAA <AmiBlitz3.ab3@7973>   MOVE.l A0,templabel
00025BAE <AmiBlitz3.ab3@7974>   MOVE.l (A7),$4(A0)
00025BB2 <AmiBlitz3.ab3@7975>   MOVE.w d3,$8(A0)
00025BB8 <AmiBlitz3.ab3@7976>   MOVE.w $4(A7),$A(A0)
00025BBC <AmiBlitz3.ab3@7977>   LEA $E(A0),A0
00025BBE <AmiBlitz3.ab3@7978>   MOVE.b D2,(A0)+                                           ;length
00025BC4 <AmiBlitz3.ab3@7979>   MOVEA.l asmbuff,A1
00025BC6 <AmiBlitz3.ab3@7980>   ADDQ.w #1,A1
00025BC8 <AmiBlitz3.ab3@7981>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025BCC <AmiBlitz3.ab3@7982>    BNE.w insasm__loop
00025BCE <AmiBlitz3.ab3@7983>   MOVE.l (A1)+,(A0)+
00025BD4 <AmiBlitz3.ab3@7984>   MOVE.w linenumat,(a0)
00025BD8 <AmiBlitz3.ab3@7985> BRA.w insasm__loopdone
00025BDA <AmiBlitz3.ab3@7988>    MOVE.b (A1)+,(A0)+
00025BDE <AmiBlitz3.ab3@7989>    BNE.w insasm__loop
00025BE4 <AmiBlitz3.ab3@7990>    MOVE.w linenumat,(a0)
00025BE6 <AmiBlitz3.ab3@7993>   MOVEA.l (A7)+,A1
00025BE8 <AmiBlitz3.ab3@7994>   ADDQ.w #2,A7
00025BEC <AmiBlitz3.ab3@7995>   MOVEM.l (A7)+,D0-D2/A0
00025BEE <AmiBlitz3.ab3@7996> RTS
00025BF2 <AmiBlitz3.ab3@8000>   CMP.w #$5,D3
00025BF6 <AmiBlitz3.ab3@8001>    BCS.w makemode__done
00025BFA <AmiBlitz3.ab3@8002>   CMP.w #$B,D3
00025BFE <AmiBlitz3.ab3@8003>    BHI.w makemode__done2
00025C02 <AmiBlitz3.ab3@8004>    BEQ.w makemode__imm
00025C06 <AmiBlitz3.ab3@8005>    BSR.w insasm
00025C0A <AmiBlitz3.ab3@8006>   CMP.w #$5,D3
00025C0E <AmiBlitz3.ab3@8007>    BEQ.w makemode__word
00025C12 <AmiBlitz3.ab3@8008>   CMP.w #$6,D3
00025C16 <AmiBlitz3.ab3@8009>    BEQ.w makemode__dxi
00025C1A <AmiBlitz3.ab3@8010>   CMP.w #$7,D3
00025C1E <AmiBlitz3.ab3@8011>    BEQ.w makemode__word
00025C22 <AmiBlitz3.ab3@8012>   CMP.w #$8,D3
00025C26 <AmiBlitz3.ab3@8013>    BEQ.w makemode__long
00025C2A <AmiBlitz3.ab3@8014>   CMP.w #$9,D3
00025C2E <AmiBlitz3.ab3@8015>    BEQ.w makemode__word
00025C34 <AmiBlitz3.ab3@8019>   CMPA.l destbufferend,A1
00025C38 <AmiBlitz3.ab3@8020>    BCS.w makemode__ok7
00025C3A <AmiBlitz3.ab3@8021>   ADDQ.w #2,A1
00025C3C <AmiBlitz3.ab3@8022> RTS
00025C3E <AmiBlitz3.ab3@8025>   MOVE.w D4,(A1)+
00025C40 <AmiBlitz3.ab3@8026> RTS
00025C48 <AmiBlitz3.ab3@8029>   CMPI.w #$8,asmsize
00025C4C <AmiBlitz3.ab3@8030>    BCC.w makemode__immlong
00025C4E <AmiBlitz3.ab3@8031>   MOVEQ.l #$10,D3
00025C52 <AmiBlitz3.ab3@8032>    BSR.w insasm
00025C54 <AmiBlitz3.ab3@8033>   MOVEQ.l #$0B,D3
00025C58 <AmiBlitz3.ab3@8034> BRA.w makemode__word
00025C5C <AmiBlitz3.ab3@8037>   BSR.w insasm
00025C5E <AmiBlitz3.ab3@8040>   ADDQ.w #2,A1
00025C60 <AmiBlitz3.ab3@8043>   ADDQ.w #2,A1
00025C62 <AmiBlitz3.ab3@8044> RTS
00025C66 <AmiBlitz3.ab3@8047>   CMP.w #$F,D3
00025C6A <AmiBlitz3.ab3@8048>    BNE.w makemode__done
00025C70 <AmiBlitz3.ab3@8049>   CMPA.l destbufferend,A1
00025C74 <AmiBlitz3.ab3@8050>    BCS.w makemode__ok3
00025C76 <AmiBlitz3.ab3@8051>   ADDQ.w #2,A1
00025C78 <AmiBlitz3.ab3@8052>   ADDQ.w #4,A7
00025C7A <AmiBlitz3.ab3@8053> RTS
00025C7C <AmiBlitz3.ab3@8056>   MOVE.w D2,(A1)+
00025C7E <AmiBlitz3.ab3@8057>   ADDQ.w #4,A7
00025C80 <AmiBlitz3.ab3@8060> RTS
00025C84 <AmiBlitz3.ab3@8064>   BSR.w storeloc
00025C8E <AmiBlitz3.ab3@8065>   MOVE.l linenumat,oldline
00025C90 <AmiBlitz3.ab3@8066>   MOVEQ.l #$00,D1
00025C94 <AmiBlitz3.ab3@8067>    BSR.w get1bytemain
00025C98 <AmiBlitz3.ab3@8068>    BEQ.w JL_0_676E
00025C9A <AmiBlitz3.ab3@8069>   MOVEQ.l #$00,D3
00025C9E <AmiBlitz3.ab3@8070> BRA.w JL_0_6726
00025CA2 <AmiBlitz3.ab3@8073>    BSR.w get1bytemain
00025CA6 <AmiBlitz3.ab3@8074>    BNE.w JL_0_671C
00025CA8 <AmiBlitz3.ab3@8077>   TST.w D3
00025CAC <AmiBlitz3.ab3@8078>    BNE.w brackets_                                         ;syntax error brackets
00025CB0 <AmiBlitz3.ab3@8079> BRA.w JL_0_676C
00025CB6 <AmiBlitz3.ab3@8082>    MOVE.w instringon,D4
00025CBA <AmiBlitz3.ab3@8084>      BEQ JL_0_6726
00025CBC <AmiBlitz3.ab3@8087>     MOVEQ #0,d0
00025CBE <AmiBlitz3.ab3@8088>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025CC4 <AmiBlitz3.ab3@8089>      MOVE.w d0,lastchar
00025CC8 <AmiBlitz3.ab3@8090>      BEQ ready
00025CCC <AmiBlitz3.ab3@8091>      CMP.b #$22,d0
00025CD0 <AmiBlitz3.ab3@8092>      BNE 'l1
00025CD6 <AmiBlitz3.ab3@8093>      NOT.w instringon
00025CDA <AmiBlitz3.ab3@8094> BRA JL_0_670A
00025CDE <AmiBlitz3.ab3@8097>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025CE2 <AmiBlitz3.ab3@8098>            BNE 'l10
00025CE6 <AmiBlitz3.ab3@8099>            CMP.b #"@",(a5)
00025CEA <AmiBlitz3.ab3@8100>            BNE 'l10
00025CF0 <AmiBlitz3.ab3@8103>            TST.w ininclude
00025CF4 <AmiBlitz3.ab3@8104>            BNE 'inc
00025CFA <AmiBlitz3.ab3@8105>            MOVE.l sourceline3,a5
00025D00 <AmiBlitz3.ab3@8106>            CMP.l #0,a5
00025D04 <AmiBlitz3.ab3@8107>            BNE 'l11t
00025D0A <AmiBlitz3.ab3@8108>            MOVEA.l sourceline,A5
00025D0C <AmiBlitz3.ab3@8111>            MOVEA.l (A5),A5
00025D12 <AmiBlitz3.ab3@8112>            CMP.l #0,a5
00025D16 <AmiBlitz3.ab3@8113>            BEQ JL_0_676C
00025D1C <AmiBlitz3.ab3@8114>            MOVE.l a5,sourceline3
00025D20 <AmiBlitz3.ab3@8115>            LEA $9(A5),A5
00025D24 <AmiBlitz3.ab3@8116> BRA 'l11
00025D26 <AmiBlitz3.ab3@8119>            ADDQ.l #1,a5
00025D28 <AmiBlitz3.ab3@8120>            TST.b (a5)
00025D2C <AmiBlitz3.ab3@8121>            BNE 'inc
00025D2E <AmiBlitz3.ab3@8125>            ADDQ.l #1,a5
00025D30 <AmiBlitz3.ab3@8126>            TST.b (a5)
00025D34 <AmiBlitz3.ab3@8127>            BEQ illeolerr
00025D36 <AmiBlitz3.ab3@8128>            MOVE.l a5,-(a7)
00025D3A <AmiBlitz3.ab3@8131>       CMP.b #" ",(a5)+
00025D3E <AmiBlitz3.ab3@8132>       BEQ 'l110
00025D44 <AmiBlitz3.ab3@8133>        CMP.b #";",-1(a5)
00025D46 <AmiBlitz3.ab3@8134>        MOVE.l (a7)+,a5
00025D4A <AmiBlitz3.ab3@8135>        BEQ 'l111
00025D4E <AmiBlitz3.ab3@8136> BRA JL_0_670A
00025D52 <AmiBlitz3.ab3@8139>    CMP.w #$29,D0
00025D56 <AmiBlitz3.ab3@8140>    BNE.w JL_0_673A
00025D58 <AmiBlitz3.ab3@8141>   TST.w D3
00025D5C <AmiBlitz3.ab3@8142>    BEQ.w JL_0_676C
00025D5E <AmiBlitz3.ab3@8145>   SUBQ.w #1,D3
00025D62 <AmiBlitz3.ab3@8146> BRA.w JL_0_670A
00025D66 <AmiBlitz3.ab3@8149>    CMP.w #$7D,D0
00025D6A <AmiBlitz3.ab3@8150>    BEQ.w JL_0_6734
00025D6E <AmiBlitz3.ab3@8151>   CMP.w #$28,D0
00025D72 <AmiBlitz3.ab3@8152>    BNE.w JL_0_6750
00025D74 <AmiBlitz3.ab3@8155>    ADDQ.w #1,D3
00025D78 <AmiBlitz3.ab3@8156> BRA.w JL_0_670A
00025D7C <AmiBlitz3.ab3@8159>   CMP.w #$7B,D0
00025D80 <AmiBlitz3.ab3@8160>    BEQ.w JL_0_674A
00025D84 <AmiBlitz3.ab3@8161>   CMP.w #$2C,D0
00025D88 <AmiBlitz3.ab3@8162>    BNE.w JL_0_670A
00025D8A <AmiBlitz3.ab3@8163>   TST.w D3
00025D8E <AmiBlitz3.ab3@8164>    BNE.w JL_0_670A
00025D90 <AmiBlitz3.ab3@8165>   ADDQ.w #1,D1
00025D94 <AmiBlitz3.ab3@8166> BRA.w JL_0_670A
00025D96 <AmiBlitz3.ab3@8169>   ADDQ.w #1,D1
00025D9C <AmiBlitz3.ab3@8172>   CLR.l sourceline3
00025DA6 <AmiBlitz3.ab3@8173>   MOVE.l oldline,linenumat
00025DAA <AmiBlitz3.ab3@8174> BRA.w resloc
00025DB0 <AmiBlitz3.ab3@8178>    CLR.w numreps
00025DB2 <AmiBlitz3.ab3@8179>   MOVE.w D1,D0
00025DB6 <AmiBlitz3.ab3@8180>   ANDI.w #$FF00,D0
00025DBA <AmiBlitz3.ab3@8181>    BEQ.w fetchlibps__noreps
00025DBC <AmiBlitz3.ab3@8182>   LSR.w #8,D0
00025DBE <AmiBlitz3.ab3@8183>   LSR.w #4,D0
00025DC2 <AmiBlitz3.ab3@8184>    BEQ.w fetchlibps__skip
00025DC4 <AmiBlitz3.ab3@8185>   SUB.b D0,D1
00025DCE <AmiBlitz3.ab3@8186>    MOVE.w regnum,regnumfunc
00025DD4 <AmiBlitz3.ab3@8187>    MOVE.b funcparloop,-(a7)
00025DDC <AmiBlitz3.ab3@8188>    MOVE.b #0,funcparloop
00025DE2 <AmiBlitz3.ab3@8189>    MOVE.l leftsidetype,-(a7)
00025DE8 <AmiBlitz3.ab3@8190>    MOVE.l rightsidetype,-(a7)
00025DEE <AmiBlitz3.ab3@8191>    MOVE.w leftsideflagmask,-(a7)
00025DF4 <AmiBlitz3.ab3@8192>    MOVE.w rightsideflagmask,-(a7)
00025DFA <AmiBlitz3.ab3@8193>    CLR.l leftsidetype
00025E00 <AmiBlitz3.ab3@8194>    CLR.l rightsidetype
00025E06 <AmiBlitz3.ab3@8195>    CLR.w leftsideflagmask
00025E0C <AmiBlitz3.ab3@8196>    CLR.w rightsideflagmask
00025E12 <AmiBlitz3.ab3@8197>    MOVE.b blitzparloop,-(a7)
00025E1A <AmiBlitz3.ab3@8198>    MOVE.b #1,blitzparloop
00025E1E <AmiBlitz3.ab3@8199>    BSR.w fetchpees2
00025E24 <AmiBlitz3.ab3@8200>    MOVE.b (a7)+,blitzparloop
00025E2A <AmiBlitz3.ab3@8201>    MOVE.w (a7)+,rightsideflagmask
00025E30 <AmiBlitz3.ab3@8202>    MOVE.w (a7)+,leftsideflagmask
00025E36 <AmiBlitz3.ab3@8203>    MOVE.l (a7)+,rightsidetype
00025E3C <AmiBlitz3.ab3@8204>    MOVE.l (a7)+,leftsidetype
00025E42 <AmiBlitz3.ab3@8205>    MOVE.b (a7)+,funcparloop
00025E46 <AmiBlitz3.ab3@8206>   CMP.w #$2C,D0
00025E4A <AmiBlitz3.ab3@8207>    BNE.w syntaxerr
00025E4C <AmiBlitz3.ab3@8210>   MOVE.w D1,D2
00025E4E <AmiBlitz3.ab3@8211>   LSR.w #8,D2
00025E52 <AmiBlitz3.ab3@8212>   ANDI.w #$7,D2
00025E54 <AmiBlitz3.ab3@8215>    CMP.b D2,D1
00025E58 <AmiBlitz3.ab3@8216>    BCS.w fetchlibps__repsdone
00025E5A <AmiBlitz3.ab3@8217>   SUB.b D2,D1
00025E5E <AmiBlitz3.ab3@8218>   MOVEM.l D2/A2,-(A7)
00025E60 <AmiBlitz3.ab3@8219>   MOVE.w D2,D0
00025E66 <AmiBlitz3.ab3@8220>   MOVE.b funcparloop,-(a7)
00025E6E <AmiBlitz3.ab3@8221>   MOVE.b #0,funcparloop
00025E74 <AmiBlitz3.ab3@8222>   MOVE.l leftsidetype,-(a7)
00025E7A <AmiBlitz3.ab3@8223>   MOVE.l rightsidetype,-(a7)
00025E80 <AmiBlitz3.ab3@8224>   MOVE.w leftsideflagmask,-(a7)
00025E86 <AmiBlitz3.ab3@8225>   MOVE.w rightsideflagmask,-(a7)
00025E8C <AmiBlitz3.ab3@8226>   CLR.l leftsidetype
00025E92 <AmiBlitz3.ab3@8227>   CLR.l rightsidetype
00025E98 <AmiBlitz3.ab3@8228>   CLR.w leftsideflagmask
00025E9E <AmiBlitz3.ab3@8229>   CLR.w rightsideflagmask
00025EA4 <AmiBlitz3.ab3@8230>   MOVE.b blitzparloop,-(a7)
00025EAC <AmiBlitz3.ab3@8231>   MOVE.b #1,blitzparloop
00025EB0 <AmiBlitz3.ab3@8232>   BSR.w fetchpees4
00025EB6 <AmiBlitz3.ab3@8233>   MOVE.b (a7)+,blitzparloop
00025EBC <AmiBlitz3.ab3@8234>   MOVE.w (a7)+,rightsideflagmask
00025EC2 <AmiBlitz3.ab3@8235>   MOVE.w (a7)+,leftsideflagmask
00025EC8 <AmiBlitz3.ab3@8236>   MOVE.l (a7)+,rightsidetype
00025ECE <AmiBlitz3.ab3@8237>   MOVE.l (a7)+,leftsidetype
00025ED4 <AmiBlitz3.ab3@8238>   MOVE.b (a7)+,funcparloop
00025ED8 <AmiBlitz3.ab3@8239>   MOVEM.l (A7)+,D2/A2
00025EDE <AmiBlitz3.ab3@8240>   ADDQ.w #1,numreps
00025EE2 <AmiBlitz3.ab3@8241> BRA.w fetchlibps__rloop
00025EE8 <AmiBlitz3.ab3@8244>    MOVE.w numreps,D3
00025EEC <AmiBlitz3.ab3@8245>    BEQ.w syntaxerr
00025EEE <AmiBlitz3.ab3@8246>   ADDA.w D2,A2
00025EF2 <AmiBlitz3.ab3@8247>   ANDI.w #$FF,D1
00025EF6 <AmiBlitz3.ab3@8248>    BEQ.w fetchlibps__done
00025EFA <AmiBlitz3.ab3@8249>   CMP.w #$2C,D0
00025EFE <AmiBlitz3.ab3@8250>    BNE.w syntaxerr
00025F00 <AmiBlitz3.ab3@8253>    MOVE.w D1,D0
00025F04 <AmiBlitz3.ab3@8254>    BNE.w fetchpees2b
00025F06 <AmiBlitz3.ab3@8257> RTS
00025F0C <AmiBlitz3.ab3@8260>   MOVE.b funcparloop,-(a7)
00025F12 <AmiBlitz3.ab3@8261>   MOVE.l leftsidetype,-(a7)
00025F18 <AmiBlitz3.ab3@8262>   MOVE.l rightsidetype,-(a7)
00025F1E <AmiBlitz3.ab3@8263>   MOVE.w leftsideflagmask,-(a7)
00025F24 <AmiBlitz3.ab3@8264>   MOVE.w rightsideflagmask,-(a7)
00025F2A <AmiBlitz3.ab3@8265>   CLR.l leftsidetype
00025F30 <AmiBlitz3.ab3@8266>   CLR.l rightsidetype
00025F36 <AmiBlitz3.ab3@8267>   CLR.w leftsideflagmask
00025F3C <AmiBlitz3.ab3@8268>   CLR.w rightsideflagmask
00025F44 <AmiBlitz3.ab3@8269>   MOVE.b #0,funcparloop
00025F4A <AmiBlitz3.ab3@8270>   MOVE.b blitzparloop,-(a7)
00025F52 <AmiBlitz3.ab3@8271>   MOVE.b #1,blitzparloop
00025F56 <AmiBlitz3.ab3@8272>   BSR.w fetchpees2
00025F5C <AmiBlitz3.ab3@8273>   MOVE.b (a7)+,blitzparloop
00025F62 <AmiBlitz3.ab3@8274>   MOVE.w (a7)+,rightsideflagmask
00025F68 <AmiBlitz3.ab3@8275>   MOVE.w (a7)+,leftsideflagmask
00025F6E <AmiBlitz3.ab3@8276>   MOVE.l (a7)+,rightsidetype
00025F74 <AmiBlitz3.ab3@8277>   MOVE.l (a7)+,leftsidetype
00025F7A <AmiBlitz3.ab3@8278>   MOVE.b (a7)+,funcparloop
00025F7C <AmiBlitz3.ab3@8279> RTS
00025F80 <AmiBlitz3.ab3@8283> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025F82 <AmiBlitz3.ab3@8286> partostack:  Ds.w 1                                        ;pmode org source
00025F84 <AmiBlitz3.ab3@8290>   MOVEQ.l #$01,D2
00025F88 <AmiBlitz3.ab3@8291> BRA.w fetchpees3
00025F8A <AmiBlitz3.ab3@8294>   MOVEQ.l #$00,D2
00025F8E <AmiBlitz3.ab3@8297>   ANDI.w #$F,D0
00025F94 <AmiBlitz3.ab3@8305>   CLR.w parnum
00025F96 <AmiBlitz3.ab3@8306>   MOVE.w D1,-(A7)
00025F9A <AmiBlitz3.ab3@8307>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025FA0 <AmiBlitz3.ab3@8308>   MOVE.w D2,partostack
00025FA2 <AmiBlitz3.ab3@8309>   MOVE.w D0,-(A7)
00025FA6 <AmiBlitz3.ab3@8310>   CMP.w #"@@",(a5)                                         ;was l15
00025FAA <AmiBlitz3.ab3@8311>   BNE fetchpees__loop
00025FB0 <AmiBlitz3.ab3@8312>   TST.w ininclude                                          ;merge macrolines
00025FB4 <AmiBlitz3.ab3@8313>   BNE errorjoin
00025FBA <AmiBlitz3.ab3@8314>        MOVEA.l sourceline,A5
00025FBC <AmiBlitz3.ab3@8317>            MOVEA.l (A5),A5
00025FC2 <AmiBlitz3.ab3@8318>            MOVE.l a5,sourceline
00025FC6 <AmiBlitz3.ab3@8319>            LEA $9(A5),A5
00025FCC <AmiBlitz3.ab3@8320>            ADDQ.l #1,linenumat
00025FCE <AmiBlitz3.ab3@8324>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025FD2 <AmiBlitz3.ab3@8325>    BNE.w fetchpees__skip0
00025FD8 <AmiBlitz3.ab3@8326>   MOVE.w userp,D2                                          ;user selected type
00025FDA <AmiBlitz3.ab3@8328>    MOVE.l A2,-(A7)
00025FE0 <AmiBlitz3.ab3@8329>    ADDQ.w #1,parnum
00025FE6 <AmiBlitz3.ab3@8330>    TST.b funccall
00025FEA <AmiBlitz3.ab3@8331>    BEQ fetchpees__skip0_l1
00025FF2 <AmiBlitz3.ab3@8332>    CMP.w #6,parnum
00025FF6 <AmiBlitz3.ab3@8333>    BLE fetchpees__skip0_l1
00025FFA <AmiBlitz3.ab3@8334>    CMP.w #7,d2
00026000 <AmiBlitz3.ab3@8340>    TST.b fpu
00026004 <AmiBlitz3.ab3@8341>    BEQ fetchpees__skip0_old
0002600A <AmiBlitz3.ab3@8342>    TST.w regnumfunc
0002600E <AmiBlitz3.ab3@8343>    BEQ fetchpees__skip0_old
00026014 <AmiBlitz3.ab3@8344>    CMP.w #$48e7,-4(a4)
00026018 <AmiBlitz3.ab3@8345>    BNE fetchpees__skip0_old
0002601A <AmiBlitz3.ab3@8346>    MOVEQ #0,d1
00026020 <AmiBlitz3.ab3@8347>    MOVE.w regnum,d1
00026026 <AmiBlitz3.ab3@8348>    CMP regnumfunc,d1                                       ;fpu reg function save
0002602A <AmiBlitz3.ab3@8349>    BGE fetchpees__skip0_old
0002602C <AmiBlitz3.ab3@8350>    ASL.w #7,d1
0002602E <AmiBlitz3.ab3@8351>    MOVE.l d0,-(a7)
00026034 <AmiBlitz3.ab3@8352>    MOVE.w regnumfunc,d0
0002603A <AmiBlitz3.ab3@8353>    CLR.w regmask
00026040 <AmiBlitz3.ab3@8355>    BSET d0,regmask
00026042 <AmiBlitz3.ab3@8356>    SUBQ #1,d0
00026046 <AmiBlitz3.ab3@8357>    BNE fetchpees__skip0_loop
00026048 <AmiBlitz3.ab3@8358>     MOVEQ #0,d0
0002604E <AmiBlitz3.ab3@8361>       BTST d0,regmask
00026052 <AmiBlitz3.ab3@8362>       BEQ fetchpees__skip0_noa7
00026054 <AmiBlitz3.ab3@8363>       MOVEQ #0,d1
00026056 <AmiBlitz3.ab3@8364>       MOVE.w d0,d1
00026058 <AmiBlitz3.ab3@8365>       SUBQ.w #1,d1
0002605A <AmiBlitz3.ab3@8366>       ASL #7,d1
00026060 <AmiBlitz3.ab3@8367>       OR.l #$f2277400,d1                                   ;fmove.d
00026064 <AmiBlitz3.ab3@8369>       BSR writelong
0002606A <AmiBlitz3.ab3@8371>       ADDQ.l #2,stacktrack
00026070 <AmiBlitz3.ab3@8372>       MOVE.l stacktrack,d1
00026076 <AmiBlitz3.ab3@8373>       CMP.l #180,d1
0002607A <AmiBlitz3.ab3@8374>       BGT conmemerr                                        ;formel too complex
0002607C <AmiBlitz3.ab3@8375>       MOVE.l a0,-(a7)
00026082 <AmiBlitz3.ab3@8376>       LEA fpustackbase,a0
0002608A <AmiBlitz3.ab3@8377>       MOVE.w regmask,0(a0,d1)
0002608C <AmiBlitz3.ab3@8378>       MOVE.l (a7)+,a0
0002608E <AmiBlitz3.ab3@8381>       ADDQ.w #1,d0
00026094 <AmiBlitz3.ab3@8382>       CMP.w regnumfunc,d0
00026098 <AmiBlitz3.ab3@8383>       BLE fetchpees__skip0_loop2
0002609A <AmiBlitz3.ab3@8386>       MOVE.l (a7)+,d0
000260A0 <AmiBlitz3.ab3@8389>      MOVE.l currentfunccall,-(a7)
000260A6 <AmiBlitz3.ab3@8390>      MOVE.w parnum,-(a7)
000260AC <AmiBlitz3.ab3@8391>      TST.l rightsidetype
000260B0 <AmiBlitz3.ab3@8392>      BSR.w JL_0_6836
000260B6 <AmiBlitz3.ab3@8393>      MOVE.w (a7)+,parnum
000260BC <AmiBlitz3.ab3@8395>    MOVE.l (a7)+,currentfunccall
000260C2 <AmiBlitz3.ab3@8397>    TST.b typecheck                            ;typecheck for function call
000260C6 <AmiBlitz3.ab3@8398>    BEQ 'notypecheck
000260CC <AmiBlitz3.ab3@8399>    TST.b notypecheck
000260D0 <AmiBlitz3.ab3@8400>    BNE 'notypecheck
000260D6 <AmiBlitz3.ab3@8401>    TST.b blitzparloop
000260DA <AmiBlitz3.ab3@8402>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
000260E4 <AmiBlitz3.ab3@8403>    CMP.l #0,currentfunccall
000260E8 <AmiBlitz3.ab3@8404>    BEQ 'isblitzlibcall
000260EC <AmiBlitz3.ab3@8405>    MOVEM.l a0/a1,-(a7)
000260F2 <AmiBlitz3.ab3@8406>    MOVE.l currentfunccall,a0
000260F8 <AmiBlitz3.ab3@8407>    MOVE.w parnum,d1
000260FE <AmiBlitz3.ab3@8408>    TST.b isconstantvalue
00026102 <AmiBlitz3.ab3@8409>    BEQ 'noconstant
0002610C <AmiBlitz3.ab3@8410>    CMP.l #0,lastconstantvalue
00026110 <AmiBlitz3.ab3@8411>    BEQ 'isnull
00026114 <AmiBlitz3.ab3@8413>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0002611A <AmiBlitz3.ab3@8414>    CMP.l #0,a0
0002611E <AmiBlitz3.ab3@8415>    BEQ 'notype
00026126 <AmiBlitz3.ab3@8416>    CMP.l #$100,4(a0)
0002612A <AmiBlitz3.ab3@8417>    BLE 'notype
00026130 <AmiBlitz3.ab3@8418>    MOVE.l lasttoken,d1
00026134 <AmiBlitz3.ab3@8419>    CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00026138 <AmiBlitz3.ab3@8420>    BEQ 'isnull
0002613E <AmiBlitz3.ab3@8421>    TST.l typetocast
00026142 <AmiBlitz3.ab3@8422>    BEQ 'nocast
00026148 <AmiBlitz3.ab3@8423>    MOVE.l typetocast,a1
0002614C <AmiBlitz3.ab3@8424>    BRA 'typecheck
00026152 <AmiBlitz3.ab3@8426>    MOVE.l rightsidetype,a1
00026158 <AmiBlitz3.ab3@8427>    CMP.l #0,a1
0002615C <AmiBlitz3.ab3@8428>    BEQ 'notype
00026164 <AmiBlitz3.ab3@8429> 'typecheck   CMP.l #$100,4(a1)
00026166 <AmiBlitz3.ab3@8431>    CMP.l a0,a1
0002616A <AmiBlitz3.ab3@8432>    BEQ 'ok
00026172 <AmiBlitz3.ab3@8434>    CMP.l #$100,4(a1)                 ; is a type here
00026176 <AmiBlitz3.ab3@8435>    BLE 'error
0002617A <AmiBlitz3.ab3@8436>    MOVE.l 4(a1),a1                   ; load the address of type.
0002617E <AmiBlitz3.ab3@8437>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00026182 <AmiBlitz3.ab3@8438>    BEQ 'ok
00026188 <AmiBlitz3.ab3@8439> 'error: JMP   error_convert_types    ; for syntax 4
0002618E <AmiBlitz3.ab3@8443>    CLR.l typetocast
00026192 <AmiBlitz3.ab3@8444>    MOVEM.l (a7)+,a0/a1
00026198 <AmiBlitz3.ab3@8448>    CLR.l lastfunction
0002619E <AmiBlitz3.ab3@8449>    TST.b fpu
000261A2 <AmiBlitz3.ab3@8450>    BEQ fetchpees__skip0_noprint
000261A4 <AmiBlitz3.ab3@8451>   MOVE.l (a7),a2
000261A6 <AmiBlitz3.ab3@8452>   ADDQ.l #1,a2
000261AA <AmiBlitz3.ab3@8453>    CMP.b #5,d2
000261AE <AmiBlitz3.ab3@8454>   BNE fetchpees__skip0_noprint
000261B4 <AmiBlitz3.ab3@8455>   CMP.b #$5d,24(a2)
000261B8 <AmiBlitz3.ab3@8456>   BNE fetchpees__skip0_noprint
000261BE <AmiBlitz3.ab3@8457>   CMP.b #$81,25(a2)
000261C2 <AmiBlitz3.ab3@8458>   BLT fetchpees__skip0_noprint
000261C8 <AmiBlitz3.ab3@8459>   CMP.b #$86,25(a2)
000261CC <AmiBlitz3.ab3@8460>   BEQ fetchpees__skip0_ok
000261D2 <AmiBlitz3.ab3@8461>   CMP.b #$87,25(a2)
000261D6 <AmiBlitz3.ab3@8462>   BEQ fetchpees__skip0_ok
000261DC <AmiBlitz3.ab3@8463>   CMP.b #$88,25(a2)
000261E0 <AmiBlitz3.ab3@8464>   BEQ fetchpees__skip0_ok
000261E6 <AmiBlitz3.ab3@8465>   CMP.b #$83,25(a2)
000261EA <AmiBlitz3.ab3@8466>   BGT fetchpees__skip0_noprint
000261F0 <AmiBlitz3.ab3@8469>   MOVE.l destpointer,a4
000261F6 <AmiBlitz3.ab3@8470>   CMP.w #$2f00,-2(a4)
000261FA <AmiBlitz3.ab3@8471>   BNE fetchpees__skip0_noprint
00026200 <AmiBlitz3.ab3@8472>   SUBQ.l #2,destpointer
00026206 <AmiBlitz3.ab3@8474>   MOVE.l #$f2277400,d1
0002620A <AmiBlitz3.ab3@8475>   BSR writelong                                            ;fmove.d fp0,-(a7)
00026210 <AmiBlitz3.ab3@8476>   ADDQ #4,a2offset
00026216 <AmiBlitz3.ab3@8494>   CLR.b optistring
00026218 <AmiBlitz3.ab3@8495>   MOVEA.l (A7)+,A2
0002621C <AmiBlitz3.ab3@8496>    CMP.w #"@",d0
00026220 <AmiBlitz3.ab3@8497>   BNE fetchpees__skip0_l10
00026224 <AmiBlitz3.ab3@8498>    CMP.b #"@",(a5)
00026228 <AmiBlitz3.ab3@8499>   BNE fetchpees__skip0_l10
0002622E <AmiBlitz3.ab3@8500>   TST.w ininclude
00026232 <AmiBlitz3.ab3@8501>   BNE errorjoin
00026238 <AmiBlitz3.ab3@8502>   MOVEA.l sourceline,A5
0002623A <AmiBlitz3.ab3@8503>            MOVEA.l (A5),A5
00026240 <AmiBlitz3.ab3@8504>            MOVE.l a5,sourceline
00026246 <AmiBlitz3.ab3@8505>            ADDQ.l #1,linenumat
0002624A <AmiBlitz3.ab3@8506>            LEA $9(A5),A5
0002624C <AmiBlitz3.ab3@8507>            MOVEQ #0,d0
00026250 <AmiBlitz3.ab3@8508>            BSR get1bytemain
00026254 <AmiBlitz3.ab3@8511>    CMP.b #32,(a5)+ ;for space after a ,
00026258 <AmiBlitz3.ab3@8512>    BEQ fetchpees__skip0_l10:
0002625A <AmiBlitz3.ab3@8513>    SUBQ.l #1,a5
0002625E <AmiBlitz3.ab3@8515>    CMP.w #"@@",(a5)                                        ;if merge
00026262 <AmiBlitz3.ab3@8516>    BNE fetchpees__skip0_l15
00026266 <AmiBlitz3.ab3@8517>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002626C <AmiBlitz3.ab3@8518>    JSR mergeline
00026270 <AmiBlitz3.ab3@8519>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00026272 <AmiBlitz3.ab3@8539>       SUBQ.w #1,(A7)
00026276 <AmiBlitz3.ab3@8540>    BEQ.w fetchpees__done
0002627A <AmiBlitz3.ab3@8542>     CMP.w #$2C,D0
0002627E <AmiBlitz3.ab3@8544>    BNE overloadfunc
00026282 <AmiBlitz3.ab3@8545> BRA.w fetchpees__loop
00026284 <AmiBlitz3.ab3@8548>   ADDQ.w #2,A7
0002628A <AmiBlitz3.ab3@8549>   MOVE.w (A7)+,partostack
0002628C <AmiBlitz3.ab3@8550>   MOVE.w (A7)+,D1
00026292 <AmiBlitz3.ab3@8551>   CLR.b isconstantvalue
0002629C <AmiBlitz3.ab3@8552>   MOVE.l currentfunccall,lastfunction
000262A2 <AmiBlitz3.ab3@8553>   CLR.b funccall
000262A8 <AmiBlitz3.ab3@8554>   CLR.l currentfunccall
000262AA <AmiBlitz3.ab3@8555> RTS
000262B0 <AmiBlitz3.ab3@8559>   CLR.b funccall
000262B6 <AmiBlitz3.ab3@8560>   MOVE.w regnum,d1
000262BC <AmiBlitz3.ab3@8561>   MOVE.l currentfunccall,a4
000262C0 <AmiBlitz3.ab3@8562>   CMP.b $20(a4),d1                                         ;increase if more pars
000262C4 <AmiBlitz3.ab3@8563>   BLT notparerr
000262C6 <AmiBlitz3.ab3@8566>   MOVE.b (a2)+,d2
000262CE <AmiBlitz3.ab3@8567>   ADD.w #1,parnum
000262D4 <AmiBlitz3.ab3@8568>   TST.b fpu
000262D8 <AmiBlitz3.ab3@8569>   BEQ 'nofpu
000262DC <AmiBlitz3.ab3@8570>   CMP.b #5,d2
000262E0 <AmiBlitz3.ab3@8571>   BNE 'nofpu
000262E2 <AmiBlitz3.ab3@8572>   MOVEQ #0,d1
000262E8 <AmiBlitz3.ab3@8573>   MOVE.w regnum,d1
000262F0 <AmiBlitz3.ab3@8574>   CMP.w #6,regnum
000262F4 <AmiBlitz3.ab3@8575>   BLT 'nostack2
000262F8 <AmiBlitz3.ab3@8580>   MOVE.w #$2c3c,d1
000262FC <AmiBlitz3.ab3@8581>   BSR writeword
00026302 <AmiBlitz3.ab3@8582>   MOVE.l #$bf800000,d1
00026306 <AmiBlitz3.ab3@8583>   BSR writelong
0002630A <AmiBlitz3.ab3@8584>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026310 <AmiBlitz3.ab3@8585>   ADD.w parnum,d1
00026316 <AmiBlitz3.ab3@8586>   JSR Atokejsr
0002631C <AmiBlitz3.ab3@8587>   TST.w dontwrite
00026320 <AmiBlitz3.ab3@8588>   BNE 'l1
00026326 <AmiBlitz3.ab3@8589>   MOVE.l data1start,d1
0002632C <AmiBlitz3.ab3@8590>   MOVE.l destpointer,a4
00026330 <AmiBlitz3.ab3@8591>   ADD.l d1,-4(a4)
00026336 <AmiBlitz3.ab3@8592>   MOVE.l destpointer,d1
00026338 <AmiBlitz3.ab3@8593>   SUBQ.l #4,d1
0002633E <AmiBlitz3.ab3@8594>   SUB.l destbufferstart,d1
00026340 <AmiBlitz3.ab3@8595>   MOVE.l d2,-(a7)
00026342 <AmiBlitz3.ab3@8596>   MOVE.l d1,d2
00026348 <AmiBlitz3.ab3@8597>   JSR addhunkoffset
0002634A <AmiBlitz3.ab3@8598>   MOVE.l (a7)+,d2
0002634E <AmiBlitz3.ab3@8599> BRA 'l1
00026350 <AmiBlitz3.ab3@8602>   ASL.l #7,d1
00026356 <AmiBlitz3.ab3@8603>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0002635A <AmiBlitz3.ab3@8604>   BSR writelong
0002635C <AmiBlitz3.ab3@8605>   MOVEQ #-1,d1                                             ;-1
00026360 <AmiBlitz3.ab3@8606>   BSR writeword
00026364 <AmiBlitz3.ab3@8607> BRA 'l1
0002636A <AmiBlitz3.ab3@8610>   MOVE.w regnum,d1
00026372 <AmiBlitz3.ab3@8611>   CMP.w #6,regnum
00026376 <AmiBlitz3.ab3@8612>   BLT 'nostack
0002637A <AmiBlitz3.ab3@8617>   CMP.b #2,d2
0002637E <AmiBlitz3.ab3@8618>   BGT 'nw
00026382 <AmiBlitz3.ab3@8619> BRA 'nos
00026386 <AmiBlitz3.ab3@8628>   CMP.w #7,d2
0002638A <AmiBlitz3.ab3@8629>   BNE 'nos
00026390 <AmiBlitz3.ab3@8630>   ADDQ #4,a2offset
00026396 <AmiBlitz3.ab3@8632>     MOVE.l #$48780000,d1
0002639A <AmiBlitz3.ab3@8633>     BSR writelong
000263A0 <AmiBlitz3.ab3@8634>     ADDQ.w #4,a2offset
000263A4 <AmiBlitz3.ab3@8635>     MOVE.w #$2f3c,d1
000263A8 <AmiBlitz3.ab3@8636>     BSR writeword
000263AE <AmiBlitz3.ab3@8637>     MOVE.l #-1,d1
000263B2 <AmiBlitz3.ab3@8638>     BSR writelong
000263B6 <AmiBlitz3.ab3@8639>   BRA 'l1
000263BA <AmiBlitz3.ab3@8643>   CMP.b #4,d2
000263BE <AmiBlitz3.ab3@8644>       BNE 'noq
000263C2 <AmiBlitz3.ab3@8645>       MOVE.w #$2c3c,d1
000263C6 <AmiBlitz3.ab3@8646>       BSR writeword
000263CC <AmiBlitz3.ab3@8647>       MOVE.l #$ffff0000,d1
000263D0 <AmiBlitz3.ab3@8648>       BSR writelong
000263D4 <AmiBlitz3.ab3@8649> BRA 'noq2
000263D8 <AmiBlitz3.ab3@8652>      CMP.b #5,d2
000263DC <AmiBlitz3.ab3@8653>      BNE 'nof
000263E0 <AmiBlitz3.ab3@8654>       MOVE.w #$2c3c,d1
000263E4 <AmiBlitz3.ab3@8655>       BSR writeword
000263EA <AmiBlitz3.ab3@8656>       MOVE.l #$800000c1,d1
000263EE <AmiBlitz3.ab3@8657>       BSR writelong
000263F2 <AmiBlitz3.ab3@8658> BRA 'noq2
000263F6 <AmiBlitz3.ab3@8661>   MOVE.w #$7cff,d1
000263FA <AmiBlitz3.ab3@8662>   BSR writeword
000263FE <AmiBlitz3.ab3@8665>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026404 <AmiBlitz3.ab3@8666>   ADD.w parnum,d1
0002640A <AmiBlitz3.ab3@8667>   JSR Atokejsr
00026410 <AmiBlitz3.ab3@8668>    TST.w dontwrite
00026414 <AmiBlitz3.ab3@8669>    BNE 'l1
0002641A <AmiBlitz3.ab3@8670>    MOVE.l data1start,d1
00026420 <AmiBlitz3.ab3@8671>    MOVE.l destpointer,a4
00026424 <AmiBlitz3.ab3@8672>    ADD.l d1,-4(a4)
0002642A <AmiBlitz3.ab3@8673>    MOVE.l destpointer,d1
0002642C <AmiBlitz3.ab3@8674>    SUBQ.l #4,d1
00026432 <AmiBlitz3.ab3@8675>    SUB.l destbufferstart,d1
00026434 <AmiBlitz3.ab3@8676>    MOVE.l d2,-(a7)
00026436 <AmiBlitz3.ab3@8677>    MOVE.l d1,d2
0002643C <AmiBlitz3.ab3@8678>    JSR addhunkoffset
0002643E <AmiBlitz3.ab3@8679>    MOVE.l (a7)+,d2
00026442 <AmiBlitz3.ab3@8680> BRA 'l1
00026444 <AmiBlitz3.ab3@8683>   ASL.l #8,d1
00026446 <AmiBlitz3.ab3@8684>   ASL.l #1,d1
0002644C <AmiBlitz3.ab3@8685>   OR.l #$203c,d1                                           ;-1
00026450 <AmiBlitz3.ab3@8686>   BSR writeword
00026456 <AmiBlitz3.ab3@8687>   MOVE.l #-1,d1
0002645A <AmiBlitz3.ab3@8688>   CMP.b #4,d2
0002645E <AmiBlitz3.ab3@8689>   BNE 'nq1
00026464 <AmiBlitz3.ab3@8690>   MOVE.l #$ffff0000,d1
00026468 <AmiBlitz3.ab3@8693>   CMP.b #5,d2
0002646C <AmiBlitz3.ab3@8694>   BNE 'nof2
00026472 <AmiBlitz3.ab3@8695>   TST.b fpu
00026476 <AmiBlitz3.ab3@8696>   BNE 'nof2
0002647C <AmiBlitz3.ab3@8697>   MOVE.l #$800000c1,d1
00026480 <AmiBlitz3.ab3@8700>    BSR writelong
00026484 <AmiBlitz3.ab3@8701>    CMP.b #7,d2
00026488 <AmiBlitz3.ab3@8702>    BNE 'l1
0002648E <AmiBlitz3.ab3@8704>      MOVE.l #$48780000,d1
00026492 <AmiBlitz3.ab3@8705>      BSR writelong
00026498 <AmiBlitz3.ab3@8707>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
0002649E <AmiBlitz3.ab3@8708>    MOVE.l #$594f,d1                                        ; subq #4,a7
000264A2 <AmiBlitz3.ab3@8709>    BSR writeword
000264A4 <AmiBlitz3.ab3@8712>    SUBQ.w #1,(A7)
000264A8 <AmiBlitz3.ab3@8713>    BEQ.w fetchpees__done
000264AE <AmiBlitz3.ab3@8714>    ADDQ.w #1,regnum
000264B2 <AmiBlitz3.ab3@8715> BRA 'ol2
000264B4 <AmiBlitz3.ab3@8718>    MOVE.w D2,D1
000264B8 <AmiBlitz3.ab3@8719>    ANDI.w #$40,D1
000264BE <AmiBlitz3.ab3@8720>    MOVE.b D1,partostack
000264C0 <AmiBlitz3.ab3@8721>    TST.b D2
000264C4 <AmiBlitz3.ab3@8722>     BMI.w handlevara
000264C8 <AmiBlitz3.ab3@8723>    BTST #$5,D2
000264CC <AmiBlitz3.ab3@8724>     BNE.w handlearr
000264D2 <AmiBlitz3.ab3@8725>     MOVE.w regnumstore,-(a7)
000264D8 <AmiBlitz3.ab3@8726>     MOVE.w tempregnum,-(a7)
000264DE <AmiBlitz3.ab3@8727>     MOVE.w parnum,-(a7)
000264E2 <AmiBlitz3.ab3@8728>     BSR.w getap                                        ;recursive entry
000264E8 <AmiBlitz3.ab3@8729>     MOVE.w (a7)+,parnum
000264EE <AmiBlitz3.ab3@8730>     MOVE.w (a7)+,tempregnum
000264F4 <AmiBlitz3.ab3@8731>     MOVE.w (a7)+,regnumstore
000264F8 <AmiBlitz3.ab3@8734>     MOVE.w partostack(PC),D1
000264FC <AmiBlitz3.ab3@8735>     BEQ.w JL_0_6886
00026502 <AmiBlitz3.ab3@8738>    ADDQ.w #4,a2offset
00026508 <AmiBlitz3.ab3@8741>    MOVE.w pushdn,D1
0002650E <AmiBlitz3.ab3@8742>    OR.w regnum,D1
00026512 <AmiBlitz3.ab3@8743>    CMP.w #$3,D2
00026516 <AmiBlitz3.ab3@8744>     BCC.w JL_0_6880
0002651C <AmiBlitz3.ab3@8745>    SUBQ.w #2,a2offset
00026520 <AmiBlitz3.ab3@8746>    ORI.w #$1000,D1
00026524 <AmiBlitz3.ab3@8747>    BSR.w writeword
00026526 <AmiBlitz3.ab3@8748> RTS
0002652A <AmiBlitz3.ab3@8751>   CMP.b #7,d2
0002652E <AmiBlitz3.ab3@8752>    BNE 'l10
00026536 <AmiBlitz3.ab3@8753>    CMP.b #2,optistring
0002653C <AmiBlitz3.ab3@8757>   TST.b iee
00026540 <AmiBlitz3.ab3@8758>   BEQ 'old
00026544 <AmiBlitz3.ab3@8759>   CMP.b #5,d2
00026548 <AmiBlitz3.ab3@8760>   BNE 'old
0002654C <AmiBlitz3.ab3@8763>   BSR.w writeword                                          ;write val to stack
0002654E <AmiBlitz3.ab3@8764> RTS
00026554 <AmiBlitz3.ab3@8767>   SUBQ.w #4,a2offset
00026556 <AmiBlitz3.ab3@8768> RTS
0002655C <AmiBlitz3.ab3@8771>   ADDQ.w #1,regnum
0002655E <AmiBlitz3.ab3@8772> RTS
00026560 <AmiBlitz3.ab3@8776>   MOVEQ.l #$03,D2
00026564 <AmiBlitz3.ab3@8777> BRA.w JL_0_6854
00026568 <AmiBlitz3.ab3@8781>   ANDI.w #$7,D2
0002656A <AmiBlitz3.ab3@8782>   MOVE.w D2,-(A7)
0002656E <AmiBlitz3.ab3@8783>    BSR.w JL_0_A916
00026572 <AmiBlitz3.ab3@8784>   CMP.b #$7,D2                                             ;ignore pnt to $
00026576 <AmiBlitz3.ab3@8785>    BEQ.w JL_0_68C0
0002657A <AmiBlitz3.ab3@8786>   BTST #$E,D2
0002657E <AmiBlitz3.ab3@8787>    BEQ.w JL_0_68B6
00026582 <AmiBlitz3.ab3@8788>   MOVE.b #$3,D2                                            ;pointer to long
00026586 <AmiBlitz3.ab3@8789> BRA.w JL_0_68C0
00026588 <AmiBlitz3.ab3@8792>    TST.b D2
0002658C <AmiBlitz3.ab3@8793>    BNE.w JL_0_68C0
00026590 <AmiBlitz3.ab3@8794>   MOVE.b #$3,D2
00026592 <AmiBlitz3.ab3@8797>   MOVE.w (A7)+,D3
00026594 <AmiBlitz3.ab3@8798>   TST.b D3
00026598 <AmiBlitz3.ab3@8799>    BEQ.w JL_0_68D2
0002659A <AmiBlitz3.ab3@8800>   CMP.b D2,D3
0002659E <AmiBlitz3.ab3@8801>    BEQ.w putalp
000265A2 <AmiBlitz3.ab3@8802> BRA.w mismatcherr
000265A8 <AmiBlitz3.ab3@8805>   ADDQ.w #2,a2offset
000265AC <AmiBlitz3.ab3@8806>   MOVE.w ptype(PC),D1
000265B0 <AmiBlitz3.ab3@8807>    BSR.w writeword
000265B2 <AmiBlitz3.ab3@8808>   MOVEQ.l #$00,D1
000265B4 <AmiBlitz3.ab3@8809>   MOVE.b D2,D1
000265B8 <AmiBlitz3.ab3@8810>    BSR.w writeword
000265BC <AmiBlitz3.ab3@8811> BRA.w putalp
000265BE <AmiBlitz3.ab3@8814>    MOVE.w D2,-(A7)
000265C2 <AmiBlitz3.ab3@8815>    BSR.w JL_0_694E
000265C8 <AmiBlitz3.ab3@8816>   BTST #$4,$1(A7)
000265CC <AmiBlitz3.ab3@8817>    BEQ.w JL_0_6900
000265D0 <AmiBlitz3.ab3@8818>    BSR.w JL_0_699A
000265D6 <AmiBlitz3.ab3@8821>    BTST #$3,$1(A7)
000265DA <AmiBlitz3.ab3@8822>    BEQ.w JL_0_690E
000265DE <AmiBlitz3.ab3@8823>    BSR.w sendtype
000265E0 <AmiBlitz3.ab3@8826>    MOVE.w (A7)+,D2
000265E4 <AmiBlitz3.ab3@8827> BRA.w get1bytemain
000265EA <AmiBlitz3.ab3@8830>   MOVE.w regnum,D1
000265EC <AmiBlitz3.ab3@8831>   LSL.w #8,D1
000265EE <AmiBlitz3.ab3@8832>   LSL.w #1,D1
000265F2 <AmiBlitz3.ab3@8833>   ORI.w #$7000,D1
000265F8 <AmiBlitz3.ab3@8834>   BTST #$0,$7(A3)
000265FC <AmiBlitz3.ab3@8835>    BNE.w JL_0_6946                                         ;A Pointer
00026604 <AmiBlitz3.ab3@8836>   CMPI.l #$100,$4(A2)
00026608 <AmiBlitz3.ab3@8837>    BCC.w arrerr1                                           ;illegal type to send
0002660C <AmiBlitz3.ab3@8838>   MOVE.b $7(A2),D1
00026610 <AmiBlitz3.ab3@8841>   BSR.w writeword                                          ;moveq #type,d regat
00026612 <AmiBlitz3.ab3@8842>   MOVEQ.l #$02,D2                                          ;just a word.
00026616 <AmiBlitz3.ab3@8843> BRA.w JL_0_685C
0002661A <AmiBlitz3.ab3@8846>   MOVE.b #$3,D1
0002661E <AmiBlitz3.ab3@8847> BRA.w JL_0_693C
00026622 <AmiBlitz3.ab3@8851>    BSR.w get1bytemain                                      ;write array paramter code
00026626 <AmiBlitz3.ab3@8852>    BSR.w getparameter
0002662E <AmiBlitz3.ab3@8853>   BTST #$1,flagmask+1
00026632 <AmiBlitz3.ab3@8854>    BEQ.w syntaxerr
00026636 <AmiBlitz3.ab3@8855>    BSR.w JL_0_8E3C
0002663A <AmiBlitz3.ab3@8856>    BSR.w get1bytemain
0002663E <AmiBlitz3.ab3@8857>   CMP.w #$29,D0                                            ;we just want a() or whatever
00026642 <AmiBlitz3.ab3@8858>    BNE.w syntaxerr
00026648 <AmiBlitz3.ab3@8859>   MOVE.w notshared,D1
0002664C <AmiBlitz3.ab3@8860>    BNE.w noarrayerr
00026652 <AmiBlitz3.ab3@8861>   MOVE.w regnum,D1
00026654 <AmiBlitz3.ab3@8862>   LSL.w #8,D1
00026656 <AmiBlitz3.ab3@8863>   LSL.w #1,D1
0002665A <AmiBlitz3.ab3@8864>   OR.w fbase(PC),D1
00026660 <AmiBlitz3.ab3@8865>    TST.b varmode
00026664 <AmiBlitz3.ab3@8866>    BEQ 'l1
00026668 <AmiBlitz3.ab3@8867>    BCLR #0,d1
0002666C <AmiBlitz3.ab3@8870>    BSR.w writeword
00026670 <AmiBlitz3.ab3@8871>   MOVE.w $4(A3),D1
00026674 <AmiBlitz3.ab3@8872>    BSR.w writeword
00026678 <AmiBlitz3.ab3@8873> BRA.w putalp
0002667E <AmiBlitz3.ab3@8877>   MOVE.w regnum,D1
00026680 <AmiBlitz3.ab3@8878>   LSL.w #8,D1
00026682 <AmiBlitz3.ab3@8879>   LSL.w #1,D1
00026686 <AmiBlitz3.ab3@8880>   OR.w fbase(PC),D1
0002668C <AmiBlitz3.ab3@8881>    TST.b varmode
00026690 <AmiBlitz3.ab3@8882>    BEQ 'l1
00026694 <AmiBlitz3.ab3@8883>    BCLR #0,d1
00026698 <AmiBlitz3.ab3@8886>    BSR.w writeword
0002669C <AmiBlitz3.ab3@8887>   MOVE.w $8(A3),D1
0002669E <AmiBlitz3.ab3@8888>   LSL.w #2,D1
000266A4 <AmiBlitz3.ab3@8889>   MOVE.w varmode,D2
000266A8 <AmiBlitz3.ab3@8890>    BEQ.w JL_0_69BE
000266AA <AmiBlitz3.ab3@8891>   NEG.w D1
000266AE <AmiBlitz3.ab3@8894>    ADD.w $4(A3),D1
000266B2 <AmiBlitz3.ab3@8895>    BSR.w writeword
000266B8 <AmiBlitz3.ab3@8896>   MOVE.w regnum,D1
000266BA <AmiBlitz3.ab3@8897>   LSL.w #8,D1
000266BC <AmiBlitz3.ab3@8898>   LSL.w #1,D1
000266C0 <AmiBlitz3.ab3@8899>   MOVE.w partostack(PC),D2
000266C4 <AmiBlitz3.ab3@8900>    BNE.w JL_0_69F4
000266CC <AmiBlitz3.ab3@8901>   CMPI.w #$7,regnum
000266D0 <AmiBlitz3.ab3@8902>    BCC.w JL_0_69F4
000266D4 <AmiBlitz3.ab3@8903>   OR.w pushlast(PC),D1
000266DA <AmiBlitz3.ab3@8904>   MOVE.w regnum,D2
000266DC <AmiBlitz3.ab3@8905>   SUBQ.w #1,D2
000266DE <AmiBlitz3.ab3@8906>   OR.w D2,D1
000266E2 <AmiBlitz3.ab3@8907> BRA.w JL_0_69F8
000266E6 <AmiBlitz3.ab3@8910>   OR.w pushadd(PC),D1
000266EA <AmiBlitz3.ab3@8913>   BSR.w writeword
000266F2 <AmiBlitz3.ab3@8914>   MOVE.b #$1,partostack
000266F6 <AmiBlitz3.ab3@8915> BRA.w putalp
000266FA <AmiBlitz3.ab3@8919> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
000266FC <AmiBlitz3.ab3@8920> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
000266FE <AmiBlitz3.ab3@8921> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026702 <AmiBlitz3.ab3@8926>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026706 <AmiBlitz3.ab3@8927>    BEQ.w evalu2
0002670A <AmiBlitz3.ab3@8928> BRA.w eval
00026710 <AmiBlitz3.ab3@8932>   MOVEA.l libpointer,A1
00026714 <AmiBlitz3.ab3@8935>    CMPA.w #$0,A1
00026718 <AmiBlitz3.ab3@8936>    BEQ.w resetlibs__done
0002671E <AmiBlitz3.ab3@8937>   MOVE.w #-1,$A(A1)
00026724 <AmiBlitz3.ab3@8938>   BCLR #$7,$C(A1)
00026726 <AmiBlitz3.ab3@8939>   MOVEA.l (A1),A1
0002672A <AmiBlitz3.ab3@8940> BRA.w resetlibs__loop
0002672C <AmiBlitz3.ab3@8943> RTS
00026730 <AmiBlitz3.ab3@8947>   MOVE.w #$FFFE,D1
00026734 <AmiBlitz3.ab3@8950>    BSR.w JL_0_6F38
0002673A <AmiBlitz3.ab3@8953>   TST.w cfetchmode
0002673E <AmiBlitz3.ab3@8954>    BEQ.w uselib3__noconst
00026744 <AmiBlitz3.ab3@8955>   BTST #$6,$C(A1)
00026748 <AmiBlitz3.ab3@8956>    BNE.w uselib3__constok
0002674C <AmiBlitz3.ab3@8957> BRA.w badconerr                                            ;Can't use this Library!
0002674E <AmiBlitz3.ab3@8960> RTS
00026754 <AmiBlitz3.ab3@8963>    BSET #$7,$C(A1)
00026758 <AmiBlitz3.ab3@8964>    BNE.w JL_0_6C74                                         ;already done....
0002675E <AmiBlitz3.ab3@8965>    CMPI.w #-1,$A(A1)
00026762 <AmiBlitz3.ab3@8966>    BNE.w JL_0_6C74                                         ;something already here
00026768 <AmiBlitz3.ab3@8970>    TST.w dirmode
0002676C <AmiBlitz3.ab3@8971>    BEQ.b JL_0_6A86
00026772 <AmiBlitz3.ab3@8972>    TST.b exdebug
00026776 <AmiBlitz3.ab3@8973>    BEQ 'l1
0002677A <AmiBlitz3.ab3@8974> BRA.b JL_0_6A86
00026780 <AmiBlitz3.ab3@8977>   BCLR #$7,$C(A1)
00026784 <AmiBlitz3.ab3@8978> BRA.w dirliberr
0002678A <AmiBlitz3.ab3@8981>   MOVE.b debugmode,-(a7)
0002678E <AmiBlitz3.ab3@8982>   MOVEM.l D1/A0/A2,-(A7)
00026796 <AmiBlitz3.ab3@8988>   BTST #$7,use_debugger
0002679A <AmiBlitz3.ab3@8989>   BNE 'debugon
0002679C <AmiBlitz3.ab3@8990>   CLR.w D1
000267A0 <AmiBlitz3.ab3@8991> BRA.b 'debugoff
000267A2 <AmiBlitz3.ab3@8994>   SNE D1
000267A8 <AmiBlitz3.ab3@8997>   MOVE.b d1,debugmode
000267AA <AmiBlitz3.ab3@9001>   MOVEA.l A1,A0
000267AE <AmiBlitz3.ab3@9002>   ADDA.l $12(A1),A0
000267B2 <AmiBlitz3.ab3@9003>   TST.w -$2(A0)
000267B6 <AmiBlitz3.ab3@9004>    BEQ.w JL_0_6AD2
000267BA <AmiBlitz3.ab3@9005>   MOVEM.l A0-A1,-(A7)
000267BE <AmiBlitz3.ab3@9006>   MOVE.w #$FB4F,D1
000267C2 <AmiBlitz3.ab3@9007>    BSR.w uselib
000267C6 <AmiBlitz3.ab3@9008>   MOVEM.l (A7)+,A0-A1
000267CC <AmiBlitz3.ab3@9009>   ADDQ.w #1,globalvarpointer
000267D4 <AmiBlitz3.ab3@9010>   BCLR #$0,globalvarpointer+1
000267DC <AmiBlitz3.ab3@9011>   MOVE.w globalvarpointer,-$6(A0)
000267E2 <AmiBlitz3.ab3@9012>   ADDQ.w #4,globalvarpointer
000267E6 <AmiBlitz3.ab3@9013>   TST.l -$E(A0)
000267EA <AmiBlitz3.ab3@9014>    BEQ.w JL_0_6AD2
000267F0 <AmiBlitz3.ab3@9015>   ADDQ.w #4,globalvarpointer
000267F8 <AmiBlitz3.ab3@9018>   MOVE.l libend,$28(A1)
000267FA <AmiBlitz3.ab3@9019>   MOVEA.l A1,A0
000267FE <AmiBlitz3.ab3@9020>   ADDA.l $12(A1),A0
00026800 <AmiBlitz3.ab3@9021>   MOVE.l A1,D1
00026804 <AmiBlitz3.ab3@9022>   ADD.l $6(A1),D1
00026808 <AmiBlitz3.ab3@9023>   TST.l $2C(A1)
0002680C <AmiBlitz3.ab3@9024>    BEQ.w JL_0_6AFE
00026812 <AmiBlitz3.ab3@9026>   TST.b debugmode
00026816 <AmiBlitz3.ab3@9027>    BNE.w JL_0_6AFE
00026818 <AmiBlitz3.ab3@9028>   MOVE.l A1,D1
0002681C <AmiBlitz3.ab3@9029>   ADD.l $2C(A1),D1
00026822 <AmiBlitz3.ab3@9032>   MOVEA.l libend,A2
00026828 <AmiBlitz3.ab3@9035>   CMPA.l data1start,A2
0002682C <AmiBlitz3.ab3@9036>    BCS.w JL_0_6B24
00026834 <AmiBlitz3.ab3@9037>   MOVE.w #$FFFF,dontwrite
00026836 <AmiBlitz3.ab3@9040>   ADDQ.w #2,A0
00026838 <AmiBlitz3.ab3@9041>   ADDQ.w #2,A2
0002683A <AmiBlitz3.ab3@9042>   CMPA.l D1,A0
0002683E <AmiBlitz3.ab3@9043>    BCS.w JL_0_6B16
00026842 <AmiBlitz3.ab3@9044> BRA.w JL_0_6B2C
00026844 <AmiBlitz3.ab3@9047>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026846 <AmiBlitz3.ab3@9048>   CMPA.l D1,A0
0002684A <AmiBlitz3.ab3@9049>    BCS.w JL_0_6B04
00026850 <AmiBlitz3.ab3@9052>   MOVE.l A2,libend
00026854 <AmiBlitz3.ab3@9053>   MOVE.l $20(A1),D1
00026858 <AmiBlitz3.ab3@9054>    BEQ.w JL_0_6BB8
0002685C <AmiBlitz3.ab3@9055>   MOVEM.l D0/D2-D3,-(A7)
00026860 <AmiBlitz3.ab3@9056>   MOVEA.l $24(A1),A0
00026862 <AmiBlitz3.ab3@9057>   MOVEQ.l #$00,D3
00026864 <AmiBlitz3.ab3@9060>   MOVE.l (A0)+,D2
00026868 <AmiBlitz3.ab3@9061>   TST.l $2C(A1)
0002686C <AmiBlitz3.ab3@9062>    BEQ.w JL_0_6B60
00026872 <AmiBlitz3.ab3@9063>   TST.b debugmode
00026876 <AmiBlitz3.ab3@9064>    BNE.w JL_0_6B60
0002687A <AmiBlitz3.ab3@9065>   CMP.l $2C(A1),D2
0002687E <AmiBlitz3.ab3@9066>    BCC.w JL_0_6BA0
00026882 <AmiBlitz3.ab3@9069>   TST.w $0(A1,D2.L)
00026886 <AmiBlitz3.ab3@9070>    BPL.w JL_0_6B72
00026888 <AmiBlitz3.ab3@9071>   TST.l D3
0002688C <AmiBlitz3.ab3@9072>    BNE.w JL_0_6B72
0002688E <AmiBlitz3.ab3@9073>   MOVE.l A0,D0
00026890 <AmiBlitz3.ab3@9074>   MOVE.l D1,D3
00026894 <AmiBlitz3.ab3@9077>   SUB.l $12(A1),D2
00026898 <AmiBlitz3.ab3@9078>    BMI.w JL_0_6BA0
0002689C <AmiBlitz3.ab3@9079>   ADD.l $28(A1),D2
0002689E <AmiBlitz3.ab3@9080>   MOVE.l D2,-(A7)
000268A4 <AmiBlitz3.ab3@9081>   SUB.l destbufferstart,D2
000268A8 <AmiBlitz3.ab3@9082>    BSR.w addhunkoffset
000268AA <AmiBlitz3.ab3@9083>   MOVEA.l (A7)+,A2
000268B0 <AmiBlitz3.ab3@9084>   TST.w dontwrite
000268B4 <AmiBlitz3.ab3@9085>    BNE.w JL_0_6BA0
000268B8 <AmiBlitz3.ab3@9086>   MOVE.l $28(A1),D2
000268BC <AmiBlitz3.ab3@9087>   SUB.l $12(A1),D2
000268BE <AmiBlitz3.ab3@9088>   ADD.l D2,(A2)
000268C0 <AmiBlitz3.ab3@9091>    SUBQ.l #1,D1
000268C4 <AmiBlitz3.ab3@9092>    BNE.w JL_0_6B44
000268C6 <AmiBlitz3.ab3@9093>   MOVE.l D3,D2
000268CA <AmiBlitz3.ab3@9094>    BEQ.w JL_0_6BB4
000268CC <AmiBlitz3.ab3@9095>   MOVEA.l D0,A2
000268CE <AmiBlitz3.ab3@9096>   SUBQ.w #4,A2
000268D2 <AmiBlitz3.ab3@9097>    BSR.w JL_0_6E34
000268D6 <AmiBlitz3.ab3@9100>    MOVEM.l (A7)+,D0/D2-D3
000268DA <AmiBlitz3.ab3@9103>    MOVEM.l (A7)+,D1/A0/A2
000268DE <AmiBlitz3.ab3@9104>   MOVEM.l D1-D2,-(A7)
000268E2 <AmiBlitz3.ab3@9105>   TST.w $1A(A1)
000268E6 <AmiBlitz3.ab3@9106>    BNE.w JL_0_6BD0
000268EA <AmiBlitz3.ab3@9107>   CLR.w $A(A1)
000268EE <AmiBlitz3.ab3@9108> BRA.w JL_0_6C5E
000268F4 <AmiBlitz3.ab3@9111>   ADDQ.w #1,globalvarpointer
000268FC <AmiBlitz3.ab3@9112>   BCLR #$0,globalvarpointer+1
00026904 <AmiBlitz3.ab3@9113>   MOVE.w globalvarpointer,$A(A1)
00026908 <AmiBlitz3.ab3@9114>   CMP.w #-$12D,D1
0002690C <AmiBlitz3.ab3@9115>    BNE.w JL_0_6C16
00026914 <AmiBlitz3.ab3@9116>   MOVE.w $A(A1),movestdn+2
0002691C <AmiBlitz3.ab3@9117>   MOVE.w $A(A1),pusha3+2
00026924 <AmiBlitz3.ab3@9118>   MOVE.w $A(A1),pusha32+2
0002692C <AmiBlitz3.ab3@9119>   MOVE.w $A(A1),pulla3+2
00026934 <AmiBlitz3.ab3@9120>   MOVE.w $A(A1),geta3+2
00026938 <AmiBlitz3.ab3@9123>    CMP.w #-$3E9,D1
0002693C <AmiBlitz3.ab3@9124>    BNE.w JL_0_6C3E
00026944 <AmiBlitz3.ab3@9125>   MOVE.w $A(A1),dataget+2
0002694C <AmiBlitz3.ab3@9126>   MOVE.w $A(A1),dataput+2
00026954 <AmiBlitz3.ab3@9127>   MOVE.w $A(A1),rescode+6
0002695C <AmiBlitz3.ab3@9128>   MOVE.w $A(A1),rescode2+2
00026962 <AmiBlitz3.ab3@9131>   ADDQ.w #2,globalvarpointer
00026966 <AmiBlitz3.ab3@9132>   TST.w $1A(A1)
0002696A <AmiBlitz3.ab3@9133>    BMI.w JL_0_6C52
00026970 <AmiBlitz3.ab3@9134>   ADDQ.w #2,globalvarpointer
00026974 <AmiBlitz3.ab3@9137>   MOVEM.l D1/A1,-(A7)
00026978 <AmiBlitz3.ab3@9138>   BSR.w uselib2
0002697C <AmiBlitz3.ab3@9139>   MOVEM.l (A7)+,D1/A1
0002697E <AmiBlitz3.ab3@9142>   MOVE.w D1,D2
00026982 <AmiBlitz3.ab3@9143>   MOVE.l $16(A1),D1
00026986 <AmiBlitz3.ab3@9144>    BSR.w uselib2_org
0002698A <AmiBlitz3.ab3@9145>   MOVE.l $1C(A1),D1
0002698E <AmiBlitz3.ab3@9146>    BSR.w uselib2_org
00026992 <AmiBlitz3.ab3@9147>   MOVEM.l (A7)+,D1-D2
00026998 <AmiBlitz3.ab3@9149>   MOVE.b (a7)+,debugmode
0002699A <AmiBlitz3.ab3@9152> RTS
0002699C <AmiBlitz3.ab3@9156>   MOVEQ.l #$00,D2
000269A2 <AmiBlitz3.ab3@9159>   MOVEA.l tokeslist,A2
000269A4 <AmiBlitz3.ab3@9160>   CMPA.l D2,A2
000269A8 <AmiBlitz3.ab3@9161>    BEQ.w JL_0_6CE0
000269AA <AmiBlitz3.ab3@9162>   MOVE.l A2,-(A7)
000269AC <AmiBlitz3.ab3@9165>   MOVEQ.l #$00,D3
000269B0 <AmiBlitz3.ab3@9168>   MOVEA.l $8(A2),A3
000269B2 <AmiBlitz3.ab3@9169>   CMPA.l D3,A3
000269B6 <AmiBlitz3.ab3@9170>    BEQ.w JL_0_6CD2
000269B8 <AmiBlitz3.ab3@9171>   MOVE.l A3,-(A7)
000269BC <AmiBlitz3.ab3@9172>   MOVEM.l D2-D3/A2-A3,-(A7)
000269C0 <AmiBlitz3.ab3@9173>   MOVE.w $4(A2),D1
000269C4 <AmiBlitz3.ab3@9174>   MOVE.w $6(A2),D2
000269C8 <AmiBlitz3.ab3@9175>    BSR.w JL_0_6CE2
000269CC <AmiBlitz3.ab3@9176>   MOVEM.l (A7)+,D2-D3/A2-A3
000269D2 <AmiBlitz3.ab3@9177>   MOVE.w dontwrite,D0
000269D6 <AmiBlitz3.ab3@9178>    BEQ.w JL_0_6CBE
000269D8 <AmiBlitz3.ab3@9181>   MOVEA.l (A3),A3
000269DA <AmiBlitz3.ab3@9182>   CMPA.l D3,A3
000269DE <AmiBlitz3.ab3@9183>    BNE.w JL_0_6CB2
000269E2 <AmiBlitz3.ab3@9184> BRA.w JL_0_6CCC
000269E6 <AmiBlitz3.ab3@9187>   MOVEA.l $4(A3),A0
000269E8 <AmiBlitz3.ab3@9188>   MOVE.l D7,(A0)
000269EA <AmiBlitz3.ab3@9189>   MOVEA.l (A3),A3
000269EC <AmiBlitz3.ab3@9190>   CMPA.l D3,A3
000269F0 <AmiBlitz3.ab3@9191>    BNE.w JL_0_6CBE
000269F2 <AmiBlitz3.ab3@9194>   MOVE.l (A7)+,D3
000269F6 <AmiBlitz3.ab3@9195> BRA.w JL_0_6C88
000269F8 <AmiBlitz3.ab3@9198>    MOVEA.l (A2),A2
000269FA <AmiBlitz3.ab3@9199>   CMPA.l D2,A2
000269FE <AmiBlitz3.ab3@9200>    BNE.w JL_0_6C86
00026A00 <AmiBlitz3.ab3@9201>   MOVE.l (A7)+,D2
00026A04 <AmiBlitz3.ab3@9202> BRA.w JL_0_6C78
00026A06 <AmiBlitz3.ab3@9205> RTS
00026A08 <AmiBlitz3.ab3@9209>   MOVE.w D2,-(A7)
00026A0C <AmiBlitz3.ab3@9210>    BSR.w searchinstr
00026A0E <AmiBlitz3.ab3@9211>   MOVE.w (A7)+,D2
00026A16 <AmiBlitz3.ab3@9212>   BCLR #$7,blitzmode
00026A1A <AmiBlitz3.ab3@9213>   BCLR #$E,D2
00026A1E <AmiBlitz3.ab3@9214>    BEQ.w JL_0_6D02
00026A26 <AmiBlitz3.ab3@9215>   BSET #$7,blitzmode
00026A28 <AmiBlitz3.ab3@9218>   TST.w (A3)
00026A2C <AmiBlitz3.ab3@9219>    BEQ.w JL_0_6DAC
00026A32 <AmiBlitz3.ab3@9220>   BTST #$2,$1(A3)
00026A36 <AmiBlitz3.ab3@9221>    BNE.w tokeerr
00026A3C <AmiBlitz3.ab3@9222>   BTST #$3,$1(A3)
00026A40 <AmiBlitz3.ab3@9223>    BNE.w tokeerr
00026A44 <AmiBlitz3.ab3@9224>   LEA $6(A3),A3
00026A46 <AmiBlitz3.ab3@9227>   MOVE.w (A3)+,D0
00026A4A <AmiBlitz3.ab3@9228>    BMI.w tokeerr
00026A4E <AmiBlitz3.ab3@9229>   ANDI.w #$FF,D0
00026A50 <AmiBlitz3.ab3@9230>   ADDA.w D0,A3
00026A52 <AmiBlitz3.ab3@9231>   ADDQ.w #1,A3
00026A54 <AmiBlitz3.ab3@9232>   EXG.l D0,A3
00026A58 <AmiBlitz3.ab3@9233>   BCLR #$0,D0
00026A5A <AmiBlitz3.ab3@9234>   EXG.l D0,A3
00026A5C <AmiBlitz3.ab3@9235>   SUBQ.w #1,D2
00026A60 <AmiBlitz3.ab3@9236>    BPL.w JL_0_6D98
00026A62 <AmiBlitz3.ab3@9237>   TST.w (A3)
00026A66 <AmiBlitz3.ab3@9238>    BNE.w JL_0_6D76
00026A6A <AmiBlitz3.ab3@9239>   MOVE.l $2(A3),D0
00026A6E <AmiBlitz3.ab3@9240>   OR.l $A(A3),D0
00026A72 <AmiBlitz3.ab3@9241>    BNE.w JL_0_6D76
00026A78 <AmiBlitz3.ab3@9242>   BTST #$0,$9(A3)
00026A7C <AmiBlitz3.ab3@9243>    BNE.w JL_0_6D76
00026A80 <AmiBlitz3.ab3@9244>   MOVE.l $6(A3),D7
00026A84 <AmiBlitz3.ab3@9245>   MOVE.w $0(A2,D7.L),D0
00026A88 <AmiBlitz3.ab3@9246>   ANDI.w #$F000,D0
00026A8C <AmiBlitz3.ab3@9247>   CMP.w #-$6000,D0
00026A90 <AmiBlitz3.ab3@9248>    BEQ.w JL_0_6D76
00026A94 <AmiBlitz3.ab3@9251>   SUB.l $12(A2),D7
00026A98 <AmiBlitz3.ab3@9252>   ADD.l $28(A2),D7
00026A9A <AmiBlitz3.ab3@9253> RTS
00026AA0 <AmiBlitz3.ab3@9257>   LEA cutejsr,A0
00026AA6 <AmiBlitz3.ab3@9260>   MOVE.l destpointer,-(A7)
00026AAE <AmiBlitz3.ab3@9261>   MOVE.w #$FFFF,lasta6
00026AB0 <AmiBlitz3.ab3@9264>    JSR (A0)
00026AB4 <AmiBlitz3.ab3@9265>   MOVE.w #$4E75,D1
00026AB8 <AmiBlitz3.ab3@9266>    BSR.w writeword
00026ABA <AmiBlitz3.ab3@9267>   MOVE.l (A7)+,D7
00026ABC <AmiBlitz3.ab3@9268> RTS
00026ABE <AmiBlitz3.ab3@9272>   TST.w (A3)+
00026AC2 <AmiBlitz3.ab3@9273>    BEQ.w JL_0_6DA4
00026AC4 <AmiBlitz3.ab3@9274>   ADDQ.w #2,A3
00026AC8 <AmiBlitz3.ab3@9275> BRA.w JL_0_6D98
00026ACC <AmiBlitz3.ab3@9278>   LEA $C(A3),A3
00026AD0 <AmiBlitz3.ab3@9279> BRA.w JL_0_6D20
00026AD2 <AmiBlitz3.ab3@9283>   TST.w D2
00026AD6 <AmiBlitz3.ab3@9284>    BNE.w tokeerr
00026ADA <AmiBlitz3.ab3@9285>   TST.w $6(A3)
00026ADE <AmiBlitz3.ab3@9286>    BNE.w JL_0_6DE4
00026AE2 <AmiBlitz3.ab3@9287>   MOVE.l $8(A3),D0
00026AE6 <AmiBlitz3.ab3@9288>   OR.l $10(A3),D0
00026AEA <AmiBlitz3.ab3@9289>    BNE.w JL_0_6DE4
00026AF0 <AmiBlitz3.ab3@9290>   BTST #$0,$F(A3)
00026AF4 <AmiBlitz3.ab3@9291>    BNE.w JL_0_6DE4
00026AF8 <AmiBlitz3.ab3@9292>   MOVE.l $C(A3),D7
00026AFC <AmiBlitz3.ab3@9293>   MOVE.w $0(A2,D7.L),D0
00026B00 <AmiBlitz3.ab3@9294>   ANDI.w #$F000,D0
00026B04 <AmiBlitz3.ab3@9295>   CMP.w #-$6000,D0
00026B08 <AmiBlitz3.ab3@9296>    BNE.w JL_0_6D6C
00026B0A <AmiBlitz3.ab3@9299>   MOVE.l A3,D1
00026B0C <AmiBlitz3.ab3@9300>   SUB.l A2,D1
00026B12 <AmiBlitz3.ab3@9301>   LEA Amakelibsub,A0
00026B16 <AmiBlitz3.ab3@9302> BRA.w JL_0_6D7C
00026B1C <AmiBlitz3.ab3@9306>   MOVEA.l _execbase,A6
00026B22 <AmiBlitz3.ab3@9307>   MOVEA.l tokeslist,A2
00026B28 <AmiBlitz3.ab3@9308>   CLR.l tokeslist
00026B2C <AmiBlitz3.ab3@9311>     CMPA.w #$0,A2
00026B30 <AmiBlitz3.ab3@9312>      BEQ.w JL_0_6E32
00026B34 <AmiBlitz3.ab3@9313>     MOVEA.l $8(A2),A3
00026B38 <AmiBlitz3.ab3@9316>       CMPA.w #$0,A3
00026B3C <AmiBlitz3.ab3@9317>        BEQ.w JL_0_6E24
00026B3E <AmiBlitz3.ab3@9318>       MOVEA.l A3,A1
00026B40 <AmiBlitz3.ab3@9319>       MOVEA.l (A3),A3
00026B42 <AmiBlitz3.ab3@9320>       MOVEQ.l #$08,D0
00026B48 <AmiBlitz3.ab3@9321>       MOVE.l mempool,a0
00026B4E <AmiBlitz3.ab3@9322>       MOVEA.l _execbase,A6
00026B52 <AmiBlitz3.ab3@9323>       JSR _FreePooled(A6)
00026B56 <AmiBlitz3.ab3@9324> BRA.w JL_0_6E0E
00026B58 <AmiBlitz3.ab3@9327>     MOVEA.l A2,A1
00026B5A <AmiBlitz3.ab3@9328>     MOVEA.l (A2),A2
00026B5C <AmiBlitz3.ab3@9329>     MOVEQ.l #$0C,D0
00026B62 <AmiBlitz3.ab3@9330>     MOVE.l mempool,a0
00026B68 <AmiBlitz3.ab3@9331>     MOVEA.l _execbase,A6
00026B6C <AmiBlitz3.ab3@9332>     JSR _FreePooled(A6)
00026B70 <AmiBlitz3.ab3@9333> BRA.w JL_0_6E02
00026B72 <AmiBlitz3.ab3@9336> RTS
00026B76 <AmiBlitz3.ab3@9340>   MOVEM.l D3-D5/A1-A6,-(A7)
00026B78 <AmiBlitz3.ab3@9341>   MOVEA.l A1,A4
00026B7A <AmiBlitz3.ab3@9344>   MOVE.l (A2)+,D3
00026B7E <AmiBlitz3.ab3@9345>   MOVE.w $0(A4,D3.L),D5
00026B82 <AmiBlitz3.ab3@9346>    BPL.w JL_0_6E7A
00026B86 <AmiBlitz3.ab3@9347>   TST.l $2C(A4)
00026B8A <AmiBlitz3.ab3@9348>    BEQ.w JL_0_6E5E
00026B90 <AmiBlitz3.ab3@9349>   TST.b debugmode
00026B94 <AmiBlitz3.ab3@9350>    BNE.w JL_0_6E5E
00026B98 <AmiBlitz3.ab3@9351>   CMP.l $2C(A4),D3
00026B9C <AmiBlitz3.ab3@9352>    BCC.w JL_0_6E7A
00026BA0 <AmiBlitz3.ab3@9355>   BCLR #$F,D5
00026BA4 <AmiBlitz3.ab3@9356>   MOVE.w $2(A4,D3.L),D4
00026BA8 <AmiBlitz3.ab3@9357>   SUB.l $12(A4),D3
00026BAC <AmiBlitz3.ab3@9358>   ADD.l $28(A4),D3
00026BB0 <AmiBlitz3.ab3@9359>   MOVEM.l D2/A2/A4,-(A7)
00026BB4 <AmiBlitz3.ab3@9360>    BSR.w JL_0_6E86
00026BB8 <AmiBlitz3.ab3@9361>   MOVEM.l (A7)+,D2/A2/A4
00026BBA <AmiBlitz3.ab3@9364>   SUBQ.l #1,D2
00026BBE <AmiBlitz3.ab3@9365>    BNE.w JL_0_6E3A
00026BC2 <AmiBlitz3.ab3@9366>   MOVEM.l (A7)+,D3-D5/A1-A6
00026BC4 <AmiBlitz3.ab3@9367> RTS
00026BCA <AmiBlitz3.ab3@9371>   LEA tokeslist,A3
00026BD0 <AmiBlitz3.ab3@9372>   MOVEA.l _execbase,A6
00026BD2 <AmiBlitz3.ab3@9375>   MOVE.l (A3),D0
00026BD6 <AmiBlitz3.ab3@9376>    BEQ.w JL_0_6EAC
00026BD8 <AmiBlitz3.ab3@9377>   MOVEA.l D0,A3
00026BDC <AmiBlitz3.ab3@9378>   CMP.w $4(A3),D4
00026BE0 <AmiBlitz3.ab3@9379>    BNE.w JL_0_6E90
00026BE4 <AmiBlitz3.ab3@9380>   CMP.w $6(A3),D5
00026BE8 <AmiBlitz3.ab3@9381>    BNE.w JL_0_6E90
00026BEC <AmiBlitz3.ab3@9382> BRA.w JL_0_6ED0
00026BEE <AmiBlitz3.ab3@9385>   MOVEQ.l #$0C,D0
00026BF0 <AmiBlitz3.ab3@9386>   MOVEQ.l #$01,D1
00026BF6 <AmiBlitz3.ab3@9387>   MOVE.l mempool,a0
00026BFA <AmiBlitz3.ab3@9388>   JSR _AllocPooled(a6)
00026BFC <AmiBlitz3.ab3@9390>   MOVEA.l D0,A3
00026C02 <AmiBlitz3.ab3@9391>   MOVE.l tokeslist,(A3)
00026C08 <AmiBlitz3.ab3@9392>   MOVE.l A3,tokeslist
00026C0C <AmiBlitz3.ab3@9393>   MOVE.w D4,$4(A3)
00026C10 <AmiBlitz3.ab3@9394>   MOVE.w D5,$6(A3)
00026C14 <AmiBlitz3.ab3@9395>   CLR.l $8(A3)
00026C16 <AmiBlitz3.ab3@9398>   MOVEQ.l #$08,D0
00026C18 <AmiBlitz3.ab3@9399>   MOVEQ.l #$01,D1
00026C1E <AmiBlitz3.ab3@9400>   MOVE.l mempool,a0
00026C22 <AmiBlitz3.ab3@9401>   JSR _AllocPooled(a6)
00026C24 <AmiBlitz3.ab3@9403>   MOVEA.l D0,A0
00026C28 <AmiBlitz3.ab3@9404>   MOVE.l D3,$4(A0)
00026C2C <AmiBlitz3.ab3@9405>   MOVE.l $8(A3),(A0)
00026C30 <AmiBlitz3.ab3@9406>   MOVE.l A0,$8(A3)
00026C32 <AmiBlitz3.ab3@9407>   MOVE.w D4,D1
00026C36 <AmiBlitz3.ab3@9408> BRA.w searchinstr
00026C3A <AmiBlitz3.ab3@9411> tokeslist: Ds.l 1
00026C3E <AmiBlitz3.ab3@9424>   BEQ.w uselib2_org__skip
00026C40 <AmiBlitz3.ab3@9425>   MOVE.l A1,-(A7)
00026C42 <AmiBlitz3.ab3@9426>   ADDA.l D1,A1
00026C44 <AmiBlitz3.ab3@9427>   ADDQ.w #6,A1
00026C46 <AmiBlitz3.ab3@9430>     MOVE.w (A1)+,D1
00026C4A <AmiBlitz3.ab3@9431>     BEQ.w uselib2_org__done
00026C4C <AmiBlitz3.ab3@9432>     CMP.w D2,D1
00026C50 <AmiBlitz3.ab3@9433>     BEQ.w uselib2_org__skip2
00026C52 <AmiBlitz3.ab3@9434>     MOVE.l A1,-(A7)
00026C56 <AmiBlitz3.ab3@9435>     BSR.w uselib
00026C58 <AmiBlitz3.ab3@9436>     MOVEA.l (A7)+,A1
00026C5A <AmiBlitz3.ab3@9439>     ADDQ.w #2,A1
00026C5E <AmiBlitz3.ab3@9440> BRA.w uselib2_org__loop
00026C60 <AmiBlitz3.ab3@9443>   MOVEA.l (A7)+,A1
00026C62 <AmiBlitz3.ab3@9446> RTS
00026C68 <AmiBlitz3.ab3@9450>   MOVEA.l libpointer,A1
00026C6C <AmiBlitz3.ab3@9453>   CMPA.w #$0,A1
00026C70 <AmiBlitz3.ab3@9454>    BEQ.b JL_0_6F36
00026C74 <AmiBlitz3.ab3@9455>   CMP.w $4(A1),D1
00026C78 <AmiBlitz3.ab3@9456>    BEQ.w JL_0_6F34
00026C7A <AmiBlitz3.ab3@9457>   MOVEA.l (A1),A1
00026C7E <AmiBlitz3.ab3@9458> BRA.w JL_0_6F20
00026C80 <AmiBlitz3.ab3@9461>   MOVEQ.l #-$01,D1
00026C82 <AmiBlitz3.ab3@9464> RTS
00026C86 <AmiBlitz3.ab3@9468>   MOVEM.l d0/a2,-(a7)
00026C88 <AmiBlitz3.ab3@9469>   MOVEQ #0,d0
00026C8E <AmiBlitz3.ab3@9470>   LEA instrtab+4,a2
00026C90 <AmiBlitz3.ab3@9471>   MOVE.w d1,d0
00026C92 <AmiBlitz3.ab3@9472>   ASL.l #3,d0
00026C96 <AmiBlitz3.ab3@9473>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026C9C <AmiBlitz3.ab3@9474>   CMP.l #0,a1
00026CA0 <AmiBlitz3.ab3@9475>   BNE JL_0_6F54b
00026CA6 <AmiBlitz3.ab3@9477>   MOVEA.l libpointer,A1
00026CAA <AmiBlitz3.ab3@9480>     CMPA.w #$0,A1
00026CAE <AmiBlitz3.ab3@9481>     BEQ.w noliberr
00026CB2 <AmiBlitz3.ab3@9482>     CMP.w $4(A1),D1
00026CB6 <AmiBlitz3.ab3@9483>     BEQ.w JL_0_6F54
00026CB8 <AmiBlitz3.ab3@9484>    MOVEA.l (A1),A1
00026CBC <AmiBlitz3.ab3@9485> BRA.w JL_0_6F3E
00026CC0 <AmiBlitz3.ab3@9488>   MOVE.l a1,0(a2,d0.l)
00026CC4 <AmiBlitz3.ab3@9491>   MOVEM.l (a7)+,d0/a2
00026CC6 <AmiBlitz3.ab3@9492> RTS
00026CCA <AmiBlitz3.ab3@9495>   MOVEM.l d0-d1/a1,-(a7)
00026CCC <AmiBlitz3.ab3@9496>   MOVEQ #0,d0
00026CD2 <AmiBlitz3.ab3@9497>   LEA instrtab,a1
00026CD4 <AmiBlitz3.ab3@9498>   MOVE.w d1,d0
00026CD6 <AmiBlitz3.ab3@9499>   ASL.l #3,d0
00026CDA <AmiBlitz3.ab3@9500>   MOVE.l 0(a1,d0.l),a3
00026CDE <AmiBlitz3.ab3@9501>   MOVE.l 4(a1,d0.l),a2
00026CE4 <AmiBlitz3.ab3@9502>   CMP.l #0,a3
00026CE8 <AmiBlitz3.ab3@9503>   BNE JL_0_6F92b
00026CEE <AmiBlitz3.ab3@9505>   MOVEA.l libpointer,A2
00026CF2 <AmiBlitz3.ab3@9508>   CMPA.w #$0,A2
00026CF6 <AmiBlitz3.ab3@9509>   BEQ.w notokerr
00026CFA <AmiBlitz3.ab3@9510>   CMP.w $E(A2),D1
00026CFE <AmiBlitz3.ab3@9511>   BCS.w JL_0_6FB8
00026D02 <AmiBlitz3.ab3@9512>   CMP.w $10(A2),D1
00026D06 <AmiBlitz3.ab3@9513>   BCC.w JL_0_6FB8
00026D0A <AmiBlitz3.ab3@9514>   LEA $30(A2),A3
00026D0E <AmiBlitz3.ab3@9515>   TST.w $4(A2)
00026D12 <AmiBlitz3.ab3@9516>   BPL.w JL_0_6FA6
00026D16 <AmiBlitz3.ab3@9519>     CMP.w $E(A2),D1
00026D1A <AmiBlitz3.ab3@9520>     BEQ.w JL_0_6F92
00026D1C <AmiBlitz3.ab3@9521>     SUBQ.w #1,D1
00026D20 <AmiBlitz3.ab3@9522>     MOVEA.l $2(A3),A3
00026D24 <AmiBlitz3.ab3@9523> BRA.w JL_0_6F80
00026D28 <AmiBlitz3.ab3@9526>   MOVE.l a3,0(a1,d0.l)
00026D2C <AmiBlitz3.ab3@9527>   MOVE.l a2,4(a1,d0.l)
00026D30 <AmiBlitz3.ab3@9530>   MOVEM.l (a7)+,d0-d1/a1
00026D34 <AmiBlitz3.ab3@9531>   MOVEM.l D1/A1-a3,-(A7)
00026D38 <AmiBlitz3.ab3@9532>   CMP.w #1,(a3)
00026D3C <AmiBlitz3.ab3@9533>   BNE.s ex10
00026D44 <AmiBlitz3.ab3@9534>   CMP.l #$12345678,$e(a3)
00026D48 <AmiBlitz3.ab3@9535>   BNE.s ex10
00026D4E <AmiBlitz3.ab3@9536>   CMP.w #$ffff,$16(a3)
00026D52 <AmiBlitz3.ab3@9537>   BNE.s ex10
00026D56 <AmiBlitz3.ab3@9538>   MOVE.l $12(a3),d1
00026D5A <AmiBlitz3.ab3@9539>   BEQ.s ex10
00026D60 <AmiBlitz3.ab3@9540>   LEA pluginbase,a3
00026D64 <AmiBlitz3.ab3@9542> JMP 0(a2,d1.l)                                             ;plugin
00026D68 <AmiBlitz3.ab3@9545>   MOVEM.l (A7)+,D1/A1-a3
00026D6E <AmiBlitz3.ab3@9546>   JSR stripspaces
00026D70 <AmiBlitz3.ab3@9547>   MOVEQ #0,d0
00026D72 <AmiBlitz3.ab3@9548>   MOVE.b (a5)+,d0
00026D78 <AmiBlitz3.ab3@9549>   MOVE.w d0,lastchar
00026D7A <AmiBlitz3.ab3@9550>   ADDQ.l #4,a7
00026D7C <AmiBlitz3.ab3@9551> RTS
00026D7E <AmiBlitz3.ab3@9555>   MOVEA.l A2,A1
00026D84 <AmiBlitz3.ab3@9556>   CLR.b newmode
00026D88 <AmiBlitz3.ab3@9557>   MOVE.w $4(A1),D1
00026D8C <AmiBlitz3.ab3@9560>   BSR.w uselib3
00026D90 <AmiBlitz3.ab3@9561>   MOVEM.l (A7)+,D1/A1-a3
00026D92 <AmiBlitz3.ab3@9562> RTS
00026D98 <AmiBlitz3.ab3@9565>   MOVE.w globalvarpointer,-(a7)
00026DA0 <AmiBlitz3.ab3@9566>   MOVE.w #$8004,globalvarpointer
00026DA4 <AmiBlitz3.ab3@9567>   BSR.w uselib3
00026DAA <AmiBlitz3.ab3@9568>   MOVE.w (a7)+,globalvarpointer
00026DAE <AmiBlitz3.ab3@9569>   MOVEM.l (A7)+,D1/A1-a3
00026DB0 <AmiBlitz3.ab3@9570> RTS
00026DB4 <AmiBlitz3.ab3@9573>     CMP.w $E(A2),D1
00026DB8 <AmiBlitz3.ab3@9574>     BEQ.w JL_0_6F92
00026DBA <AmiBlitz3.ab3@9575>     SUBQ.w #1,D1
00026DBE <AmiBlitz3.ab3@9576>     MOVEA.l $2(A3),A3
00026DC2 <AmiBlitz3.ab3@9577> BRA.w JL_0_6FA6
00026DC4 <AmiBlitz3.ab3@9580>   MOVEA.l (A2),A2
00026DC8 <AmiBlitz3.ab3@9581> BRA.w JL_0_6F5C
00026DCE <AmiBlitz3.ab3@9584> JMP writeword
00026DD2 <AmiBlitz3.ab3@9587> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026DD6 <AmiBlitz3.ab3@9588> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026DDA <AmiBlitz3.ab3@9589> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026DDC <AmiBlitz3.ab3@9595>   TST.l D0
00026DE0 <AmiBlitz3.ab3@9596>   BEQ.w exit_loadlibsfile
00026DE2 <AmiBlitz3.ab3@9597>     MOVE.l D0,D6                                           ;d6=len
00026DE8 <AmiBlitz3.ab3@9598>     MOVEA.l _dosbase,A6
00026DEE <AmiBlitz3.ab3@9599>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026DF2 <AmiBlitz3.ab3@9600>     JSR _Open(A6)
00026DF4 <AmiBlitz3.ab3@9601>     MOVE.l D0,D7
00026DF8 <AmiBlitz3.ab3@9602>     BEQ.w exit_loadlibsfile
00026DFA <AmiBlitz3.ab3@9603>       MOVE.l D6,D0
00026DFC <AmiBlitz3.ab3@9604>       MOVEQ.l #$01,D1
00026E02 <AmiBlitz3.ab3@9605>       MOVEA.l _execbase,A6
00026E08 <AmiBlitz3.ab3@9606>       MOVE.l mempool,a0
00026E0C <AmiBlitz3.ab3@9607>       JSR _AllocPooled(a6)
00026E0E <AmiBlitz3.ab3@9608>       MOVE.l D0,D5                                         ;start address
00026E10 <AmiBlitz3.ab3@9610>       MOVE.l D7,D1                                         ; handle
00026E12 <AmiBlitz3.ab3@9611>       MOVE.l D5,D2                                         ; buffer addr
00026E14 <AmiBlitz3.ab3@9612>       MOVE.l D6,D3                                         ; size
00026E1A <AmiBlitz3.ab3@9613>       MOVEA.l _dosbase,A6
00026E1E <AmiBlitz3.ab3@9614>       JSR _Read(A6)
00026E20 <AmiBlitz3.ab3@9615>       MOVE.l D7,D1
00026E24 <AmiBlitz3.ab3@9616>       JSR _Close(A6)
00026E26 <AmiBlitz3.ab3@9618>       MOVEA.l D5,A0                                        ; buffer addr
00026E28 <AmiBlitz3.ab3@9624>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026E2C <AmiBlitz3.ab3@9625>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026E30 <AmiBlitz3.ab3@9626>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026E32 <AmiBlitz3.ab3@9627>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026E34 <AmiBlitz3.ab3@9628>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026E36 <AmiBlitz3.ab3@9629>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026E3A <AmiBlitz3.ab3@9630>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026E3C <AmiBlitz3.ab3@9631>           ADD.l D0,D0                                      ;   verdoppele D0
00026E3E <AmiBlitz3.ab3@9632>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026E42 <AmiBlitz3.ab3@9633>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00026E46 <AmiBlitz3.ab3@9634>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026E4A <AmiBlitz3.ab3@9635>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026E4C <AmiBlitz3.ab3@9636>           CMPA.l A0,A2
00026E50 <AmiBlitz3.ab3@9637>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00026E56 <AmiBlitz3.ab3@9638>             MOVE.l -$8(A2),$20(A1)                         ;
00026E5A <AmiBlitz3.ab3@9639>             MOVE.l A2,$24(A1)                              ;
00026E5E <AmiBlitz3.ab3@9640> BRA.w JL_0_7010
00026E60 <AmiBlitz3.ab3@9643>       MOVE.l D5,D0
00026E62 <AmiBlitz3.ab3@9646> RTS
00026E8C <AmiBlitz3.ab3@9650>   !basic
00026F00 <AmiBlitz3.ab3@9651>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026F34 <AmiBlitz3.ab3@9652>    dos_Delete{tempmapping$}
00026F78 <AmiBlitz3.ab3@9653>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026F96 <AmiBlitz3.ab3@9654>   !asm
00026F9C <AmiBlitz3.ab3@9656>   LEA libpointer,A3
00026FA2 <AmiBlitz3.ab3@9660>   MOVE.l size_deflibs,D0
00026FA8 <AmiBlitz3.ab3@9661>   MOVE.l deflib,d1
00026FAC <AmiBlitz3.ab3@9662>   BEQ 'l1
00026FB0 <AmiBlitz3.ab3@9663> BRA 'l2
00026FB6 <AmiBlitz3.ab3@9666>   MOVE.l #str_path_deflibs,D1
00026FBA <AmiBlitz3.ab3@9669>   BSR.w load_libsfile
00026FC0 <AmiBlitz3.ab3@9670>   MOVE.l D0,ptr_deflibs
00026FC6 <AmiBlitz3.ab3@9673>   MOVE.l size_acidlibs,D0
00026FCC <AmiBlitz3.ab3@9674>   MOVE.l #str_path_acidlibs,D1
00026FD0 <AmiBlitz3.ab3@9675>   BSR.w load_libsfile
00026FD6 <AmiBlitz3.ab3@9676>   MOVE.l D0,ptr_acidlibs
00026FD8 <AmiBlitz3.ab3@9680>   CLR.l (A3)
00026FDE <AmiBlitz3.ab3@9681>   MOVE.l A3,ptr_userlibs
00026FE4 <AmiBlitz3.ab3@9686>   LEA str_libfilename,A0
00026FEA <AmiBlitz3.ab3@9687>   LEA str_path_userlibs,A1
00026FEC <AmiBlitz3.ab3@9690>     MOVE.b (A1)+,(A0)+
00026FF0 <AmiBlitz3.ab3@9691>   BNE.b JL_0_708E
00026FF2 <AmiBlitz3.ab3@9693>   SUBQ.w #1,A0
00026FF6 <AmiBlitz3.ab3@9694>   MOVE.b #$2F,(A0)+
00026FF8 <AmiBlitz3.ab3@9697>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026FFE <AmiBlitz3.ab3@9699>   LEA ptr_userlibs_list,A2
00027004 <AmiBlitz3.ab3@9700>   MOVEA.l ptr_userlibs,A3
0002700A <AmiBlitz3.ab3@9701>   MOVEA.l _dosbase,A6
0002700C <AmiBlitz3.ab3@9706>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00027010 <AmiBlitz3.ab3@9707>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00027012 <AmiBlitz3.ab3@9709>       CLR.l (A3)
00027014 <AmiBlitz3.ab3@9710>       ADDQ.w #4,A7
0002703E <AmiBlitz3.ab3@9711>       !basic
00027052 <AmiBlitz3.ab3@9712>       If fid<>-1
0002705C <AmiBlitz3.ab3@9713>         file_Close{fid}
00027068 <AmiBlitz3.ab3@9714>         fid = -1
00027086 <AmiBlitz3.ab3@9716>       !asm
0002708A <AmiBlitz3.ab3@9717> BRA.w process_libraries
0002708C <AmiBlitz3.ab3@9720>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027090 <AmiBlitz3.ab3@9721>       TST.w $4(A2)                                         ; naechste addresse pruefen
00027094 <AmiBlitz3.ab3@9722>     BEQ.b JL_0_70BA
00027098 <AmiBlitz3.ab3@9724>     LEA $6(A2),A1
0002709A <AmiBlitz3.ab3@9725>     MOVEA.l (A7),A0
0002709C <AmiBlitz3.ab3@9728>       MOVE.b (A1)+,(A0)+
000270A0 <AmiBlitz3.ab3@9729>     BNE.w JL_0_70D4
000270A2 <AmiBlitz3.ab3@9733>     MOVE.l A0,-(A7)
000270A8 <AmiBlitz3.ab3@9734>     MOVE.l #str_libfilename,D1
000270AA <AmiBlitz3.ab3@9735>     MOVEQ.l #-$02,D2
000270B0 <AmiBlitz3.ab3@9736>     MOVEA.l _dosbase,A6
000270B4 <AmiBlitz3.ab3@9737>      JSR _Lock(A6)
000270B6 <AmiBlitz3.ab3@9738>     MOVE.l D0,D1
000270BA <AmiBlitz3.ab3@9739>      BEQ.w JL_0_7156
000270BC <AmiBlitz3.ab3@9740>     MOVEA.l (A7),A0
000270C2 <AmiBlitz3.ab3@9741>     MOVE.b #$2F,-$1(A0)
000270C4 <AmiBlitz3.ab3@9744>     MOVE.l D1,-(A7)
000270CA <AmiBlitz3.ab3@9745>     MOVE.l #ptr_parameterstore,D2
000270D0 <AmiBlitz3.ab3@9746>     MOVEA.l _dosbase,A6
000270D4 <AmiBlitz3.ab3@9747>     JSR _Examine(A6)
000270D6 <AmiBlitz3.ab3@9748>     TST.l D0
000270DA <AmiBlitz3.ab3@9749>      BEQ.w JL_0_7150
000270E0 <AmiBlitz3.ab3@9752>     LEA fib_FileName,A0
000270E4 <AmiBlitz3.ab3@9753>     BSR.w check_for_infoextention
000270E8 <AmiBlitz3.ab3@9754>     BEQ.w JL_0_7150
00027112 <AmiBlitz3.ab3@9757>     !basic
00027196 <AmiBlitz3.ab3@9758>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
000271B4 <AmiBlitz3.ab3@9759>     !asm
000271BA <AmiBlitz3.ab3@9760>     MOVE.l #str_libfilename,D1
000271BE <AmiBlitz3.ab3@9761>     BSR.w open_userlibfile
000271C0 <AmiBlitz3.ab3@9764>     MOVE.l (A7)+,D1
000271C6 <AmiBlitz3.ab3@9765>     MOVEA.l _dosbase,A6
000271CA <AmiBlitz3.ab3@9766>     JSR _UnLock(A6)
000271CC <AmiBlitz3.ab3@9769>     ADDQ.w #4,A7
000271D0 <AmiBlitz3.ab3@9770> BRA.w JL_0_70BA
000271D6 <AmiBlitz3.ab3@9773>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000271DC <AmiBlitz3.ab3@9774>   MOVEA.l _dosbase,A6
000271E0 <AmiBlitz3.ab3@9775>    JSR _Open(A6)
000271E2 <AmiBlitz3.ab3@9776>   MOVE.l D0,D7
000271E6 <AmiBlitz3.ab3@9777>    BEQ.w exit_userlibfile
000271E8 <AmiBlitz3.ab3@9780>   MOVE.l D7,D1                                             ; filehandle
000271EE <AmiBlitz3.ab3@9781>   MOVE.l #optstuff,D2                                     ; buffer
000271F4 <AmiBlitz3.ab3@9782>   MOVEA.l _dosbase,A6
000271F6 <AmiBlitz3.ab3@9783>   MOVEQ.l #$20,D3                                          ; size
000271FA <AmiBlitz3.ab3@9784>   JSR _Read(A6)
00027200 <AmiBlitz3.ab3@9787>   MOVE.l optstuff+28,D6
00027202 <AmiBlitz3.ab3@9788>   LSL.l #2,D6
00027204 <AmiBlitz3.ab3@9789>   MOVE.l D6,D0
00027206 <AmiBlitz3.ab3@9790>   MOVEQ.l #$01,D1
0002720C <AmiBlitz3.ab3@9791>   MOVEA.l _execbase,A6
00027212 <AmiBlitz3.ab3@9792>   MOVE.l mempool,a0
00027216 <AmiBlitz3.ab3@9793>   JSR _AllocPooled(a6)
00027218 <AmiBlitz3.ab3@9794>   MOVEA.l D0,A5
0002721E <AmiBlitz3.ab3@9797>   MOVEA.l _dosbase,A6
00027220 <AmiBlitz3.ab3@9798>   MOVE.l D7,D1                                             ; filehandle
00027222 <AmiBlitz3.ab3@9799>   MOVE.l A5,D2                                             ; buffer
00027224 <AmiBlitz3.ab3@9800>   MOVE.l D6,D3                                             ; size
00027228 <AmiBlitz3.ab3@9801>    JSR _Read(A6)
0002722A <AmiBlitz3.ab3@9802>   MOVE.l A5,(A3)
0002722C <AmiBlitz3.ab3@9804>   MOVE.l A5,d0
0002722E <AmiBlitz3.ab3@9806>   MOVEA.l A5,A3
00027232 <AmiBlitz3.ab3@9807>   MOVE.l D6,$6(A5)
00027236 <AmiBlitz3.ab3@9808>   CLR.l $20(A5)
00027260 <AmiBlitz3.ab3@9810>   !basic
0002726A <AmiBlitz3.ab3@9812>   addr_libnum.l = PutD0 + 4
0002727E <AmiBlitz3.ab3@9813>   If fid<>-1
0002731E <AmiBlitz3.ab3@9814>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00027350 <AmiBlitz3.ab3@9815>     file_WriteLine{fid,currentlib$}
0002736E <AmiBlitz3.ab3@9817>   !asm
00027370 <AmiBlitz3.ab3@9820>   MOVE.l D7,D1                                             ; filehandle
00027376 <AmiBlitz3.ab3@9821>   MOVE.l #optstuff,D2                                     ; buffer
00027378 <AmiBlitz3.ab3@9822>   MOVEQ.l #$0C,D3                                          ; size
0002737E <AmiBlitz3.ab3@9823>   MOVEA.l _dosbase,A6
00027382 <AmiBlitz3.ab3@9824>    JSR _Read(A6)
00027388 <AmiBlitz3.ab3@9826>   CMP.l #$C,D0
0002738C <AmiBlitz3.ab3@9827>    BCS.w close_and_exit_userlibfile
00027392 <AmiBlitz3.ab3@9830>   MOVE.l optstuff+4,D0
00027396 <AmiBlitz3.ab3@9831>   MOVE.l D0,$20(A5)
00027398 <AmiBlitz3.ab3@9832>   LSL.l #2,D0
0002739A <AmiBlitz3.ab3@9833>   MOVE.l D0,D5
0002739C <AmiBlitz3.ab3@9834>   MOVEQ.l #$01,D1
000273A2 <AmiBlitz3.ab3@9835>   MOVEA.l _execbase,A6
000273A8 <AmiBlitz3.ab3@9836>   MOVE.l mempool,a0
000273AC <AmiBlitz3.ab3@9837>   JSR _AllocPooled(a6)
000273B2 <AmiBlitz3.ab3@9839>   MOVEA.l _dosbase,A6
000273B6 <AmiBlitz3.ab3@9840>   MOVE.l D0,$24(A5)
000273B8 <AmiBlitz3.ab3@9841>   MOVE.l D7,D1
000273BA <AmiBlitz3.ab3@9842>   MOVE.l D0,D2
000273BC <AmiBlitz3.ab3@9843>   MOVE.l D5,D3
000273C0 <AmiBlitz3.ab3@9844>   JSR _Read(A6)
000273C2 <AmiBlitz3.ab3@9847>   MOVE.l D7,D1
000273C8 <AmiBlitz3.ab3@9848>   MOVEA.l _dosbase,A6
000273CC <AmiBlitz3.ab3@9849> JMP _Close(A6)
000273CE <AmiBlitz3.ab3@9852> RTS
000273D4 <AmiBlitz3.ab3@9858>   CLR.w number_of_objects
000273DA <AmiBlitz3.ab3@9859>   MOVEA.l end_of_tokenlist,A3
000273E0 <AmiBlitz3.ab3@9860>   MOVEA.l libpointer,A2
000273E4 <AmiBlitz3.ab3@9863>     CMPA.w #$0,A2
000273E8 <AmiBlitz3.ab3@9864>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
000273EC <AmiBlitz3.ab3@9866>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000273F0 <AmiBlitz3.ab3@9867>     BMI.w JL_0_7226
000273F2 <AmiBlitz3.ab3@9868>       LSL.w #7,D7
000273F4 <AmiBlitz3.ab3@9869>       ADDQ.w #1,D7
000273F8 <AmiBlitz3.ab3@9870>       MOVE.w D7,$E(A2)
000273FC <AmiBlitz3.ab3@9873>     LEA $30(A2),A1
00027402 <AmiBlitz3.ab3@9874>     LEA temp1,A4
00027404 <AmiBlitz3.ab3@9877>       MOVE.w (A1),D0
00027408 <AmiBlitz3.ab3@9878>       BMI.w JL_0_72AE
0002740A <AmiBlitz3.ab3@9879>       MOVE.l A1,(A4)
0002740C <AmiBlitz3.ab3@9880>       MOVEA.l A1,A4
0002740E <AmiBlitz3.ab3@9881>       ADDQ.w #2,A4
00027410 <AmiBlitz3.ab3@9882>       ADDQ.w #6,A1
00027414 <AmiBlitz3.ab3@9883>       CMP.w #$8,D0
00027418 <AmiBlitz3.ab3@9884>       BEQ.w JL_0_7290
0002741C <AmiBlitz3.ab3@9885>         ANDI.w #$F,D0
00027420 <AmiBlitz3.ab3@9886>         BNE.w JL_0_725C
00027424 <AmiBlitz3.ab3@9887>           BSR.w skiplibreg
00027428 <AmiBlitz3.ab3@9888>           LEA $C(A1),A1
0002742A <AmiBlitz3.ab3@9889>           ADDQ.w #1,D7
0002742E <AmiBlitz3.ab3@9890> BRA.w JL_0_7230
00027432 <AmiBlitz3.ab3@9893>     BTST #$2,D0
00027436 <AmiBlitz3.ab3@9894>     BEQ.w JL_0_7274
00027438 <AmiBlitz3.ab3@9895>       ADDQ.w #4,A1
0002743A <AmiBlitz3.ab3@9898>         TST.b (A1)+
0002743E <AmiBlitz3.ab3@9899>       BPL.w JL_0_7266
00027442 <AmiBlitz3.ab3@9900>       BSR.w aligna1
00027446 <AmiBlitz3.ab3@9901> BRA.w JL_0_7290
00027448 <AmiBlitz3.ab3@9904>       MOVE.w (A1)+,D0
0002744C <AmiBlitz3.ab3@9905>       BMI.w JL_0_7290
00027450 <AmiBlitz3.ab3@9906>       ANDI.w #$FF,D0
00027452 <AmiBlitz3.ab3@9907>       ADDA.w D0,A1
00027456 <AmiBlitz3.ab3@9908>       BSR.w aligna1
0002745A <AmiBlitz3.ab3@9909>       BSR.w skiplibreg
0002745E <AmiBlitz3.ab3@9910>       LEA $C(A1),A1
00027462 <AmiBlitz3.ab3@9911> BRA.w JL_0_7274
00027464 <AmiBlitz3.ab3@9914>     MOVE.l A1,(A3)
00027466 <AmiBlitz3.ab3@9915>     MOVEA.l A1,A3
00027468 <AmiBlitz3.ab3@9916>     ADDQ.w #4,A1
0002746A <AmiBlitz3.ab3@9917>     MOVE.w D7,(A1)+
0002746C <AmiBlitz3.ab3@9920>       TST.b (A1)+
00027470 <AmiBlitz3.ab3@9921>     BNE.w JL_0_7298
00027472 <AmiBlitz3.ab3@9924>       TST.b (A1)+
00027476 <AmiBlitz3.ab3@9925>     BNE.w JL_0_729E
0002747A <AmiBlitz3.ab3@9927>     BSR.w aligna1
0002747C <AmiBlitz3.ab3@9928>     ADDQ.w #1,D7
00027480 <AmiBlitz3.ab3@9929> BRA.w JL_0_7230
00027484 <AmiBlitz3.ab3@9932>     TST.w $4(A2)
00027488 <AmiBlitz3.ab3@9933>      BMI.w JL_0_72BA
0002748C <AmiBlitz3.ab3@9934>     MOVE.w D7,$10(A2)
0002748E <AmiBlitz3.ab3@9937>     ADDQ.w #2,A1
00027490 <AmiBlitz3.ab3@9938>     TST.l (A1)+
00027494 <AmiBlitz3.ab3@9939>      BEQ.w JL_0_72CC
0002749A <AmiBlitz3.ab3@9940>     ADDQ.w #1,number_of_objects
0002749E <AmiBlitz3.ab3@9941>     LEA $16(A1),A1
000274A0 <AmiBlitz3.ab3@9944>     SUBA.l A2,A1
000274A4 <AmiBlitz3.ab3@9945>     MOVE.l A1,$12(A2)
000274A6 <AmiBlitz3.ab3@9946>     MOVEA.l (A2),A2
000274AA <AmiBlitz3.ab3@9947> BRA.w JL_0_720E
000274AC <AmiBlitz3.ab3@9950>   CLR.l (A3)
000274B2 <AmiBlitz3.ab3@9951> 
000274B8 <AmiBlitz3.ab3@9952>   MOVE.l A7,errstack
000274C2 <AmiBlitz3.ab3@9953>   MOVE.l #AL_0_730E,errcont
000274CA <AmiBlitz3.ab3@9954>   MOVE.w #$FFFF,ezerr
000274CE <AmiBlitz3.ab3@9955>   MOVE.w #$FFFA,D1
000274D2 <AmiBlitz3.ab3@9956>    BSR.w JL_0_6F38
000274D8 <AmiBlitz3.ab3@9957>   MOVE.l A1,tempvm
000274DC <AmiBlitz3.ab3@9958>   MOVE.w #$FDA7,D1
000274E0 <AmiBlitz3.ab3@9959>    BSR.w JL_0_6F38
000274E6 <AmiBlitz3.ab3@9960>   MOVE.l A1,ffplib
000274E8 <AmiBlitz3.ab3@9963> RTS
000274EC <AmiBlitz3.ab3@9966> ffplib:  Ds.l 1
000274EE <AmiBlitz3.ab3@9970>     TST.w (A1)+
000274F2 <AmiBlitz3.ab3@9971>     BEQ.w JL_0_7320
000274F4 <AmiBlitz3.ab3@9972>     ADDQ.w #2,A1
000274F8 <AmiBlitz3.ab3@9973> BRA.w skiplibreg
000274FA <AmiBlitz3.ab3@9976> RTS
000274FC <AmiBlitz3.ab3@9980>   EXG.l A1,A0
00027500 <AmiBlitz3.ab3@9981>   BSR.w aligna1
00027502 <AmiBlitz3.ab3@9982>   EXG.l A1,A0
00027504 <AmiBlitz3.ab3@9983> RTS
00027506 <AmiBlitz3.ab3@9986>   EXG.l D0,A1
00027508 <AmiBlitz3.ab3@9987>   ADDQ.l #1,D0
0002750C <AmiBlitz3.ab3@9988>   BCLR #$0,D0
0002750E <AmiBlitz3.ab3@9989>   EXG.l D0,A1
00027510 <AmiBlitz3.ab3@9990> RTS
00027516 <AmiBlitz3.ab3@9994>   MOVEA.l _execbase,A6
0002751C <AmiBlitz3.ab3@9995>   MOVEA.l ptr_userlibs,A2
0002751E <AmiBlitz3.ab3@9996>   MOVE.l (A2),D0
00027520 <AmiBlitz3.ab3@9997>   CLR.l (A2)
00027522 <AmiBlitz3.ab3@9998>   MOVEA.l D0,A2
00027526 <AmiBlitz3.ab3@10001>     CMPA.w #$0,A2
0002752A <AmiBlitz3.ab3@10002>     BEQ.w free_userlib
0002752E <AmiBlitz3.ab3@10004>     MOVE.l $20(A2),D0
00027532 <AmiBlitz3.ab3@10005>     BEQ.b JL_0_7360
00027534 <AmiBlitz3.ab3@10006>       LSL.l #2,D0
0002753A <AmiBlitz3.ab3@10007>       MOVE.l mempool,a0
0002753E <AmiBlitz3.ab3@10008>       MOVEA.l $24(A2),A1
00027542 <AmiBlitz3.ab3@10009>       JSR _FreePooled(A6)
00027544 <AmiBlitz3.ab3@10012>     MOVEA.l A2,A1
00027548 <AmiBlitz3.ab3@10013>     MOVE.l $6(A1),D0
0002754E <AmiBlitz3.ab3@10014>     MOVE.l mempool,a0
00027550 <AmiBlitz3.ab3@10015>     MOVEA.l (A2),A2
00027556 <AmiBlitz3.ab3@10016>     MOVEA.l _execbase,A6
0002755A <AmiBlitz3.ab3@10017>     JSR _FreePooled(A6)
0002755E <AmiBlitz3.ab3@10018> BRA.w JL_0_7348
00027562 <AmiBlitz3.ab3@10022>   BSR.w free_userlibs
00027568 <AmiBlitz3.ab3@10023>   MOVEA.l _execbase,A6
0002756E <AmiBlitz3.ab3@10024>   CLR.l libpointer
00027574 <AmiBlitz3.ab3@10025>   MOVEA.l end_of_tokenlist,A0
00027576 <AmiBlitz3.ab3@10026>   CLR.l (A0)
0002757C <AmiBlitz3.ab3@10028>   MOVE.l size_acidlibs,D0
00027580 <AmiBlitz3.ab3@10029>   BEQ.b JL_0_73A2
00027586 <AmiBlitz3.ab3@10030>     MOVE.l ptr_acidlibs,D1
0002758A <AmiBlitz3.ab3@10031>     BEQ.b JL_0_73A2
00027590 <AmiBlitz3.ab3@10032>       CLR.l ptr_acidlibs
00027592 <AmiBlitz3.ab3@10033>       MOVEA.l D1,A1
00027598 <AmiBlitz3.ab3@10034>       MOVE.l mempool,a0
0002759E <AmiBlitz3.ab3@10035>       MOVEA.l _execbase,A6
000275A2 <AmiBlitz3.ab3@10036>       JSR _FreePooled(A6)                                 ; free acidlibs
000275A8 <AmiBlitz3.ab3@10039>   MOVE.l size_deflibs,D0
000275AC <AmiBlitz3.ab3@10040>   BEQ.b JL_0_73BE
000275B2 <AmiBlitz3.ab3@10041>     MOVE.l ptr_deflibs,D1
000275B6 <AmiBlitz3.ab3@10042>     BEQ.b JL_0_73BE
000275BC <AmiBlitz3.ab3@10043>       CLR.l ptr_deflibs                                    ; d0: memorySize
000275BE <AmiBlitz3.ab3@10044>       MOVEA.l D1,A1                                        ; a1: memory
000275C4 <AmiBlitz3.ab3@10045>       MOVE.l mempool,a0                                    ; a0: poolHeader
000275CA <AmiBlitz3.ab3@10046>       MOVEA.l _execbase,A6
000275CE <AmiBlitz3.ab3@10047>       JSR _FreePooled(A6)                                  ; free deflibs
000275D0 <AmiBlitz3.ab3@10050> RTS
000275D6 <AmiBlitz3.ab3@10054>   MOVEA.l currentmacroaddr,A0
000275D8 <AmiBlitz3.ab3@10055>   MOVEA.l (A0),A2
000275DA <AmiBlitz3.ab3@10056>   CLR.l (A0)
000275E0 <AmiBlitz3.ab3@10057>   MOVEA.l _execbase,A6
000275E4 <AmiBlitz3.ab3@10060>     CMPA.w #$0,A2
000275E8 <AmiBlitz3.ab3@10061>     BEQ.w JL_0_73FA
000275EA <AmiBlitz3.ab3@10062>     MOVEQ.l #$00,D0
000275EE <AmiBlitz3.ab3@10063>     MOVE.w $8(A2),D0
000275F2 <AmiBlitz3.ab3@10064>     BEQ.w JL_0_73E8
000275F6 <AmiBlitz3.ab3@10065>     MOVEA.l $4(A2),A1
000275FC <AmiBlitz3.ab3@10066>     MOVE.l mempool,a0
00027600 <AmiBlitz3.ab3@10067>     JSR _FreePooled(A6)
00027602 <AmiBlitz3.ab3@10070>     MOVEA.l A2,A1
00027604 <AmiBlitz3.ab3@10071>     MOVEA.l (A2),A2
00027606 <AmiBlitz3.ab3@10072>     MOVEQ.l #$00,D0
0002760A <AmiBlitz3.ab3@10073>     MOVE.b $C(A1),D0
00027610 <AmiBlitz3.ab3@10074>     MOVE.l mempool2,a0
00027614 <AmiBlitz3.ab3@10075>     JSR _FreePooled(A6)
00027618 <AmiBlitz3.ab3@10076> BRA.w JL_0_73CE
0002761A <AmiBlitz3.ab3@10079> RTS
00027620 <AmiBlitz3.ab3@10083>   MOVEA.l templabel,A2
00027626 <AmiBlitz3.ab3@10084>   CLR.l templabel
00027628 <AmiBlitz3.ab3@10085> RTS
0002762E <AmiBlitz3.ab3@10088>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027632 <AmiBlitz3.ab3@10091>     CMPA.w #$0,A2
00027636 <AmiBlitz3.ab3@10092>     BEQ.w JL_0_7426
00027638 <AmiBlitz3.ab3@10093>     MOVEQ.l #$00,D0
0002763C <AmiBlitz3.ab3@10094>     MOVE.b $E(A2),D0                                       ;labeltemp
0002763E <AmiBlitz3.ab3@10095>     MOVEA.l A2,A1
00027640 <AmiBlitz3.ab3@10096>     MOVEA.l (A2),A2
00027646 <AmiBlitz3.ab3@10097>     MOVE.l mempool2,a0
0002764A <AmiBlitz3.ab3@10099> BRA.w JL_0_740C
0002764C <AmiBlitz3.ab3@10102> RTS
00027652 <AmiBlitz3.ab3@10106>   MOVEA.l data1,A4
00027658 <AmiBlitz3.ab3@10107>   CMPA.l data2at,A4
0002765C <AmiBlitz3.ab3@10108>   BCC.w JL_0_7442
0002765E <AmiBlitz3.ab3@10109>     MOVE.b D1,(A4)+
00027664 <AmiBlitz3.ab3@10110>     MOVE.l A4,data1
00027666 <AmiBlitz3.ab3@10111> RTS
0002766E <AmiBlitz3.ab3@10114>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00027674 <AmiBlitz3.ab3@10115>   ADDQ.l #1,data1
00027676 <AmiBlitz3.ab3@10116> RTS
00027678 <AmiBlitz3.ab3@10120>   SWAP D1
0002767C <AmiBlitz3.ab3@10121>   BSR.w pokedata1
0002767E <AmiBlitz3.ab3@10122>   SWAP D1
00027684 <AmiBlitz3.ab3@10125>   MOVEA.l data1,A4
0002768A <AmiBlitz3.ab3@10126>   CMPA.l data2at,A4
0002768E <AmiBlitz3.ab3@10127>    BCC.w JL_0_7474
00027690 <AmiBlitz3.ab3@10128>   MOVE.w D1,(A4)+
00027696 <AmiBlitz3.ab3@10129>   MOVE.l A4,data1
00027698 <AmiBlitz3.ab3@10130> RTS
000276A0 <AmiBlitz3.ab3@10133>   MOVE.w #$FFFF,dontwrite
000276A6 <AmiBlitz3.ab3@10134>   ADDQ.l #2,data1
000276A8 <AmiBlitz3.ab3@10135> RTS
000276AE <AmiBlitz3.ab3@10139>   MOVE.l data1,D3                                      ;write local string/type allocs
000276B0 <AmiBlitz3.ab3@10140>   MOVEQ.l #$00,D4
000276B4 <AmiBlitz3.ab3@10143>   CMPA.w #$0,A2
000276B8 <AmiBlitz3.ab3@10144>    BEQ.w JL_0_74CAc
000276BC <AmiBlitz3.ab3@10145>   TST.w $6(A2)
000276C0 <AmiBlitz3.ab3@10146>    BNE.w JL_0_74C4c
000276C4 <AmiBlitz3.ab3@10147>   MOVEA.l $A(A2),A3
000276CC <AmiBlitz3.ab3@10148>   CMPI.l #$100,$4(A3)
000276D0 <AmiBlitz3.ab3@10149>    BCS.w JL_0_74C4c
000276D4 <AmiBlitz3.ab3@10150>   MOVE.w $4(A2),D1
000276D8 <AmiBlitz3.ab3@10151>    BSR.w pokedata1
000276DC <AmiBlitz3.ab3@10152>   MOVE.w $8(A3),D1
000276E0 <AmiBlitz3.ab3@10153>    BSR.w pokedata1
000276E2 <AmiBlitz3.ab3@10154>   ADDQ.w #1,D4
000276E4 <AmiBlitz3.ab3@10157>    MOVEA.l (A2),A2
000276E8 <AmiBlitz3.ab3@10158> BRA.w JL_0_7492c
000276EA <AmiBlitz3.ab3@10161>    TST.w D4
000276EE <AmiBlitz3.ab3@10162>    BEQ.w JL_0_74E0
000276F2 <AmiBlitz3.ab3@10163>   MOVE.w #$FF37,D1
000276F6 <AmiBlitz3.ab3@10164>    BSR.w uselib
000276FA <AmiBlitz3.ab3@10165>   MOVE.w #$FFFA,D1
000276FE <AmiBlitz3.ab3@10166> BRA.w uselib
00027704 <AmiBlitz3.ab3@10174>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002770A <AmiBlitz3.ab3@10177>   MOVE.l data1,D3
0002770C <AmiBlitz3.ab3@10178>   MOVEQ.l #$00,D4
00027712 <AmiBlitz3.ab3@10179>   TST.b iserror
00027716 <AmiBlitz3.ab3@10180>   BEQ JL_0_7492
00027718 <AmiBlitz3.ab3@10181>   RTS
0002771C <AmiBlitz3.ab3@10183>    CMPA.w #$0,A2
00027720 <AmiBlitz3.ab3@10184>    BEQ.w JL_0_74CA
00027724 <AmiBlitz3.ab3@10185>   TST.w $6(A2)
00027728 <AmiBlitz3.ab3@10186>    BNE.w JL_0_74C4
0002772C <AmiBlitz3.ab3@10187>   MOVEA.l $A(A2),A3
00027734 <AmiBlitz3.ab3@10188>   CMPI.l #$100,$4(A3)
00027738 <AmiBlitz3.ab3@10189>    BCS.w JL_0_74C4
0002773C <AmiBlitz3.ab3@10190>   MOVE.w $4(A2),D1
00027740 <AmiBlitz3.ab3@10191>    BSR.w pokedata1
00027744 <AmiBlitz3.ab3@10192>   MOVE.w $8(A3),D1
00027748 <AmiBlitz3.ab3@10193>    BSR.w pokedata1
0002774A <AmiBlitz3.ab3@10194>   ADDQ.w #1,D4
0002774C <AmiBlitz3.ab3@10197>   MOVEA.l (A2),A2
00027750 <AmiBlitz3.ab3@10198> BRA.w JL_0_7492
00027756 <AmiBlitz3.ab3@10202>   MOVEA.l sharebase,A2
0002775A <AmiBlitz3.ab3@10205>   CMPA.w #$0,A2
0002775E <AmiBlitz3.ab3@10206>    BEQ.w JL_0_74CAb
00027762 <AmiBlitz3.ab3@10208>   TST.w $6(A2)
00027766 <AmiBlitz3.ab3@10209>    BNE.w JL_0_74C4b
0002776A <AmiBlitz3.ab3@10210>   MOVEA.l $A(A2),A3
00027772 <AmiBlitz3.ab3@10211>   CMPI.l #$100,$4(A3)
00027776 <AmiBlitz3.ab3@10212>    BCS.w JL_0_74C4b
0002777A <AmiBlitz3.ab3@10213>   MOVE.w $4(A2),D1
0002777E <AmiBlitz3.ab3@10214>    BSR.w pokedata1
00027782 <AmiBlitz3.ab3@10215>   MOVE.w $8(A3),D1
00027786 <AmiBlitz3.ab3@10216>    BSR.w pokedata1
00027788 <AmiBlitz3.ab3@10217>   ADDQ.w #1,D4
0002778A <AmiBlitz3.ab3@10220>   MOVEA.l (A2),A2
0002778E <AmiBlitz3.ab3@10221> BRA.w JL_0_7492b
00027790 <AmiBlitz3.ab3@10224>    TST.w D4
00027794 <AmiBlitz3.ab3@10225>    BEQ.w JL_0_74E0
00027798 <AmiBlitz3.ab3@10226>   MOVE.w #$FF37,D1
0002779C <AmiBlitz3.ab3@10227>    BSR.w uselib                                            ;use statics lib
000277A0 <AmiBlitz3.ab3@10228>   MOVE.w #$FFFA,D1                                         ;use memlib
000277A4 <AmiBlitz3.ab3@10229> BRA.w uselib
000277A6 <AmiBlitz3.ab3@10232> RTS
000277AC <AmiBlitz3.ab3@10236>   MOVE.w numtoa2,D1
000277B0 <AmiBlitz3.ab3@10237>    BSR.w writeword
000277B4 <AmiBlitz3.ab3@10238>    BSR.w addoff
000277B6 <AmiBlitz3.ab3@10239>   MOVE.l D3,D1
000277BA <AmiBlitz3.ab3@10240>    BSR.w writelong
000277BC <AmiBlitz3.ab3@10241>   SUBQ.w #1,D4
000277C2 <AmiBlitz3.ab3@10242>   MOVE.w D4,endarray+2
000277C8 <AmiBlitz3.ab3@10243>   MOVE.l endarray,D1
000277CC <AmiBlitz3.ab3@10244> BRA.w writelong
000277CE <AmiBlitz3.ab3@10248>   MOVE.l D3,-(A7)
000277D4 <AmiBlitz3.ab3@10251>   MOVEA.l _dosbase,A6
000277D8 <AmiBlitz3.ab3@10252>   JSR _Write(a6)
000277DA <AmiBlitz3.ab3@10254>   CMP.l (A7)+,D0
000277DE <AmiBlitz3.ab3@10255>    BNE.w JL_0_7516
000277E0 <AmiBlitz3.ab3@10256> RTS
000277E2 <AmiBlitz3.ab3@10259>   MOVE.l D7,D1
000277E8 <AmiBlitz3.ab3@10261>   MOVEA.l _dosbase,A6
000277EC <AmiBlitz3.ab3@10262>   JSR _Close(a6)
000277F2 <AmiBlitz3.ab3@10265> JMP error_create_exe
000277F8 <AmiBlitz3.ab3@10274> 
000277FE <AmiBlitz3.ab3@10275>   MOVE.l A7,errstack
00027802 <AmiBlitz3.ab3@10276>   MOVEM.l d2-d7/a2-a6,-(a7)
0002780C <AmiBlitz3.ab3@10277>   MOVE.l #AL_0_7790,errcont
00027812 <AmiBlitz3.ab3@10278>    JSR call_setpointerbusy
0002781A <AmiBlitz3.ab3@10279>   MOVE.w #$FFFF,anyerrs
00027824 <AmiBlitz3.ab3@10280>   CMP.l #-1,chipstart
00027828 <AmiBlitz3.ab3@10281>   BEQ 'l01
0002782E <AmiBlitz3.ab3@10282>   MOVE.l chipend,d1
00027830 <AmiBlitz3.ab3@10283>   ADDQ.l #3,d1
00027836 <AmiBlitz3.ab3@10284>   AND.l #$fffffffc,d1                                      ;bug
0002783C <AmiBlitz3.ab3@10285>   MOVE.l d1,chipend
0002783E <AmiBlitz3.ab3@10286>   MOVE.l d1,a1
00027844 <AmiBlitz3.ab3@10287>   MOVE.l chipstart,a0
00027846 <AmiBlitz3.ab3@10288>   MOVE.l a1,d1
00027848 <AmiBlitz3.ab3@10289>   SUB.l a0,d1
0002784E <AmiBlitz3.ab3@10290>   MOVE.l d1,chipsize
00027858 <AmiBlitz3.ab3@10293>   CMP.l #-1,bssstart
0002785C <AmiBlitz3.ab3@10294>   BEQ 'l11
00027862 <AmiBlitz3.ab3@10295>   MOVE.l realbssend,a1
00027868 <AmiBlitz3.ab3@10296>   MOVE.l bssstart,a0
0002786A <AmiBlitz3.ab3@10297>   MOVE.l a1,d1
0002786C <AmiBlitz3.ab3@10298>   SUB.l a0,d1
00027872 <AmiBlitz3.ab3@10299>   MOVE.l d1,bsssize
00027876 <AmiBlitz3.ab3@10300>   BEQ 'l11
00027878 <AmiBlitz3.ab3@10303>   TST.b (a0)+
0002787C <AmiBlitz3.ab3@10304>   BEQ 'l31
00027882 <AmiBlitz3.ab3@10305>   TST.b debugmode
00027886 <AmiBlitz3.ab3@10306>   BEQ 'l1
0002788C <AmiBlitz3.ab3@10307>   TST.b exdebug
00027890 <AmiBlitz3.ab3@10308>   BNE 'l31
00027896 <AmiBlitz3.ab3@10311>   MOVE.l #nodata,-(a7)
0002789C <AmiBlitz3.ab3@10312> JMP handle_compileerror
0002789E <AmiBlitz3.ab3@10315>   CMP.l a0,a1
000278A2 <AmiBlitz3.ab3@10316>   BGT 'l32
000278A8 <AmiBlitz3.ab3@10317>   MOVE.l bssend,d1
000278AA <AmiBlitz3.ab3@10318>   ADDQ.l #3,d1
000278B0 <AmiBlitz3.ab3@10319>   AND.l #$fffffffc,d1                                      ;bug
000278B6 <AmiBlitz3.ab3@10320>   MOVE.l d1,bssend
000278B8 <AmiBlitz3.ab3@10321>   MOVE.l d1,a1
000278BE <AmiBlitz3.ab3@10322>   MOVE.l bssstart,a0
000278C0 <AmiBlitz3.ab3@10323>   MOVE.l a1,d1
000278C2 <AmiBlitz3.ab3@10324>   SUB.l a0,d1
000278C8 <AmiBlitz3.ab3@10325>   MOVE.l d1,bsssize
000278CC <AmiBlitz3.ab3@10328>   MOVEM.l d5-d7/d3,-(a7)
000278D2 <AmiBlitz3.ab3@10329>   MOVE.w dontwrite,D1
000278D6 <AmiBlitz3.ab3@10330>   BNE.w JL_0_757C
000278DC <AmiBlitz3.ab3@10331>   MOVE.l chipsize,d5
000278E2 <AmiBlitz3.ab3@10332>   MOVE.l bsssize,d3
000278E8 <AmiBlitz3.ab3@10333>   MOVE.l chipstart,d7
000278EE <AmiBlitz3.ab3@10334>   MOVE.l bssstart,d6
000278F4 <AmiBlitz3.ab3@10335>   MOVEA.l hunkoffsetbase,A2
000278FA <AmiBlitz3.ab3@10336>   MOVEA.l destbufferstart,A1
000278FC <AmiBlitz3.ab3@10337>   MOVE.l A1,D2
00027902 <AmiBlitz3.ab3@10338>   ADD.l noinits,D2
00027908 <AmiBlitz3.ab3@10339>   CLR.l hunkoffsetnum
0002790C <AmiBlitz3.ab3@10342>   CMPA.w #$0,A2
00027910 <AmiBlitz3.ab3@10343>    BEQ.w JL_0_757C
00027914 <AmiBlitz3.ab3@10344>   MOVE.l $4(A2),D0
00027918 <AmiBlitz3.ab3@10345>    LEA $0(a1,d0.l),a0
0002791A <AmiBlitz3.ab3@10346>    MOVE.l (a0),d1
0002791C <AmiBlitz3.ab3@10347>   TST.l d1
00027920 <AmiBlitz3.ab3@10348>    BMI.w 'lm1
00027928 <AmiBlitz3.ab3@10349>   MOVE.b #0,newhunk
00027932 <AmiBlitz3.ab3@10350>   CMP.l #-1,chipstart
00027936 <AmiBlitz3.ab3@10351>   BEQ 'l10
0002793C <AmiBlitz3.ab3@10352>   CMP.l chipstart,d1
00027940 <AmiBlitz3.ab3@10353>   BLT 'l10
00027948 <AmiBlitz3.ab3@10354>   MOVE.b #1,newhunk
0002794E <AmiBlitz3.ab3@10355>   CMP.l chipend,d1
00027952 <AmiBlitz3.ab3@10356>   BGE 'l110
00027954 <AmiBlitz3.ab3@10357>   SUB.l d7,(a0)
0002795C <AmiBlitz3.ab3@10358>   ADD.l #$80000000,4(a2)
00027960 <AmiBlitz3.ab3@10359> BRA JL_0_7576
00027964 <AmiBlitz3.ab3@10362>   SUB.l d5,0(a0)
0002796E <AmiBlitz3.ab3@10365>   CMP.l #-1,bssstart
00027972 <AmiBlitz3.ab3@10366>     BEQ 'l11
00027978 <AmiBlitz3.ab3@10367>   CMP.l bssstart,d1
0002797C <AmiBlitz3.ab3@10368>   BLT 'l11
00027982 <AmiBlitz3.ab3@10369>   CMP.l bssend,d1
00027986 <AmiBlitz3.ab3@10370>   BGE 'l111
0002798C <AmiBlitz3.ab3@10371>   TST.b newhunk
00027990 <AmiBlitz3.ab3@10372>   BEQ 'ln1
00027992 <AmiBlitz3.ab3@10373>   ADD.l d5,(a0)
00027994 <AmiBlitz3.ab3@10376>   SUB.l d6,(a0)
0002799C <AmiBlitz3.ab3@10377>   ADD.l #$40000000,4(a2)
000279A0 <AmiBlitz3.ab3@10378> BRA JL_0_7576
000279A4 <AmiBlitz3.ab3@10381>   SUB.l d3,0(a0)
000279A6 <AmiBlitz3.ab3@10384>   SUB.l D2,(A0)
000279AC <AmiBlitz3.ab3@10387>   ADDQ.l #1,hunkoffsetnum
000279AE <AmiBlitz3.ab3@10390>    MOVEA.l (A2),A2
000279B2 <AmiBlitz3.ab3@10391> BRA.w JL_0_755E
000279B6 <AmiBlitz3.ab3@10395>   MOVEM.l (a7)+,d5-d7/d3
000279BC <AmiBlitz3.ab3@10396>   MOVE.l ptr_newexefilename,D1
000279C2 <AmiBlitz3.ab3@10397>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000279C8 <AmiBlitz3.ab3@10398>   MOVEA.l _dosbase,A6
000279CC <AmiBlitz3.ab3@10399>    JSR _Open(A6)
000279CE <AmiBlitz3.ab3@10400>   MOVE.l D0,D7
000279D2 <AmiBlitz3.ab3@10401>    BEQ.w execerr
000279D8 <AmiBlitz3.ab3@10402>   MOVE.l objlen,D0
000279DE <AmiBlitz3.ab3@10403>   SUB.l #moremem,d0
000279E4 <AmiBlitz3.ab3@10404>   SUB.l noinits,D0
000279EE <AmiBlitz3.ab3@10405>   CMP.l #-1,bssstart
000279F2 <AmiBlitz3.ab3@10406>   BEQ 'l60
000279F8 <AmiBlitz3.ab3@10407>   SUB.l bsssize,d0
000279FE <AmiBlitz3.ab3@10408>   SUB.l chipsize,d0
00027A02 <AmiBlitz3.ab3@10409> BRA.s 'l61
00027A0C <AmiBlitz3.ab3@10412>   CMP.l #-1,chipstart
00027A10 <AmiBlitz3.ab3@10413>   BEQ 'l61
00027A16 <AmiBlitz3.ab3@10414>   SUB.l bsssize,d0
00027A1C <AmiBlitz3.ab3@10415>   SUB.l chipsize,d0
00027A1E <AmiBlitz3.ab3@10418>   ADDQ.l #3,D0
00027A20 <AmiBlitz3.ab3@10419>   LSR.l #2,D0
00027A26 <AmiBlitz3.ab3@10420>   MOVE.l D0,tstsize1
00027A2C <AmiBlitz3.ab3@10421>   MOVE.l D0,tstsize2
00027A2E <AmiBlitz3.ab3@10422>   MOVE.l D7,D1
00027A34 <AmiBlitz3.ab3@10423>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027A36 <AmiBlitz3.ab3@10424>   MOVEQ.l #$20,D3
00027A40 <AmiBlitz3.ab3@10425>   CMP.l #-1,bssstart
00027A44 <AmiBlitz3.ab3@10426>   BEQ 'lb1
00027A4E <AmiBlitz3.ab3@10427>   CMP.l #-1,chipstart
00027A52 <AmiBlitz3.ab3@10428>   BEQ 'lb1
00027A5C <AmiBlitz3.ab3@10429>   MOVE.l #1,bssnum
00027A66 <AmiBlitz3.ab3@10430>   MOVE.l #2,chipnum
00027A68 <AmiBlitz3.ab3@10431>   MOVEQ.l #$28,D3
00027A6E <AmiBlitz3.ab3@10432>   MOVE.l bsssize,d2
00027A70 <AmiBlitz3.ab3@10433>   ADDQ.l #3,d2
00027A72 <AmiBlitz3.ab3@10434>   ASR.l #2,d2
00027A78 <AmiBlitz3.ab3@10435>   MOVE.l d2,hunkend+8
00027A7E <AmiBlitz3.ab3@10436>   MOVE.l d2,bsssize3
00027A84 <AmiBlitz3.ab3@10437>   MOVE.l chipsize,d2
00027A86 <AmiBlitz3.ab3@10438>   ADDQ.l #3,d2
00027A88 <AmiBlitz3.ab3@10439>   ASR.l #2,d2
00027A8E <AmiBlitz3.ab3@10440>   MOVE.l d2,chipsize2
00027A98 <AmiBlitz3.ab3@10441>   ADD.l #$40000000,chipsize2
00027A9E <AmiBlitz3.ab3@10442>   MOVE.l d2,hunkend2+8
00027AA4 <AmiBlitz3.ab3@10443>   MOVE.l D0,tstsize1c
00027AAA <AmiBlitz3.ab3@10444>   MOVE.l D0,tstsize2c
00027AB0 <AmiBlitz3.ab3@10445>   MOVE.l #hunkbegin2,d2
00027AB4 <AmiBlitz3.ab3@10446> BRA 'l100
00027ABE <AmiBlitz3.ab3@10449>   CMP.l #-1,bssstart
00027AC2 <AmiBlitz3.ab3@10450>   BEQ 'l10
00027ACC <AmiBlitz3.ab3@10451>   MOVE.l #1,bssnum
00027ACE <AmiBlitz3.ab3@10452>   MOVEQ.l #$24,D3
00027AD4 <AmiBlitz3.ab3@10453>   MOVE.l bsssize,d2
00027AD6 <AmiBlitz3.ab3@10454>   ADDQ.l #3,d2
00027AD8 <AmiBlitz3.ab3@10455>   ASR.l #2,d2
00027ADE <AmiBlitz3.ab3@10456>   MOVE.l d2,hunkend+8
00027AE4 <AmiBlitz3.ab3@10457>   MOVE.l d2,bsssize2
00027AEA <AmiBlitz3.ab3@10458>   MOVE.l D0,tstsize1b
00027AF0 <AmiBlitz3.ab3@10459>   MOVE.l D0,tstsize2b
00027AF6 <AmiBlitz3.ab3@10460>   MOVE.l #hunkbegin,d2
00027B00 <AmiBlitz3.ab3@10463>   CMP.l #-1,chipstart
00027B04 <AmiBlitz3.ab3@10464>   BEQ 'l100
00027B0E <AmiBlitz3.ab3@10465>   MOVE.l #1,chipnum
00027B10 <AmiBlitz3.ab3@10466>   MOVEQ.l #$24,D3
00027B16 <AmiBlitz3.ab3@10467>   MOVE.l chipsize,d2
00027B18 <AmiBlitz3.ab3@10468>   ADDQ.l #3,d2
00027B1A <AmiBlitz3.ab3@10469>   ASR.l #2,d2
00027B20 <AmiBlitz3.ab3@10470>   MOVE.l d2,hunkend2+8
00027B26 <AmiBlitz3.ab3@10471>   MOVE.l d2,bsssize2
00027B30 <AmiBlitz3.ab3@10472>   ADD.l #$40000000,bsssize2
00027B36 <AmiBlitz3.ab3@10473>   MOVE.l D0,tstsize1b
00027B3C <AmiBlitz3.ab3@10474>   MOVE.l D0,tstsize2b
00027B42 <AmiBlitz3.ab3@10475>   MOVE.l #hunkbegin,d2
00027B46 <AmiBlitz3.ab3@10478>    BSR.w mywrite
00027B4C <AmiBlitz3.ab3@10479>   MOVE.l destbufferstart,D2
00027B52 <AmiBlitz3.ab3@10480>   ADD.l noinits,D2
00027B58 <AmiBlitz3.ab3@10481>   MOVE.l objlen,D3
00027B5E <AmiBlitz3.ab3@10482>   SUB.l #moremem,d3
00027B64 <AmiBlitz3.ab3@10483>   SUB.l noinits,D3
00027B6E <AmiBlitz3.ab3@10484>   CMP.l #-1,bssstart
00027B72 <AmiBlitz3.ab3@10485>   BNE 'l40
00027B7C <AmiBlitz3.ab3@10486>   CMP.l #-1,chipstart
00027B80 <AmiBlitz3.ab3@10487>   BNE 'l40
00027B84 <AmiBlitz3.ab3@10488> BRA 'l41
00027B8A <AmiBlitz3.ab3@10491>   MOVE.l codeend,d1
00027B8C <AmiBlitz3.ab3@10492>     SUB.l d2,d1
00027B8E <AmiBlitz3.ab3@10493>     MOVE.l d1,d3
00027B94 <AmiBlitz3.ab3@10494>   SUB.l bsssize,d3
00027B9A <AmiBlitz3.ab3@10495>   SUB.l chipsize,d3
00027B9C <AmiBlitz3.ab3@10496>   MOVE.l D7,D1
00027BA0 <AmiBlitz3.ab3@10497>   BSR.w mywrite
00027BA6 <AmiBlitz3.ab3@10498>   MOVE.l objlen,D3
00027BAC <AmiBlitz3.ab3@10499>   SUB.l #moremem,d3
00027BB2 <AmiBlitz3.ab3@10500>   SUB.l noinits,D3
00027BB4 <AmiBlitz3.ab3@10501>   MOVE.l d3,d1
00027BBA <AmiBlitz3.ab3@10502>   MOVE.l destbufferstart,D2
00027BC0 <AmiBlitz3.ab3@10503>   ADD.l noinits,D2
00027BC2 <AmiBlitz3.ab3@10504>   ADD.l d2,d1
00027BC8 <AmiBlitz3.ab3@10505>   SUB.l codeend,d1
00027BCA <AmiBlitz3.ab3@10506>   MOVE.l d1,d3
00027BD0 <AmiBlitz3.ab3@10507>   MOVE.l codeend,d2
00027BD2 <AmiBlitz3.ab3@10510>   MOVE.l d2,d1
00027BD4 <AmiBlitz3.ab3@10511>   ADD.l d3,d1
00027BD6 <AmiBlitz3.ab3@10512>   ADDQ.l #3,D1
00027BDC <AmiBlitz3.ab3@10513>   ANDI.l #$FFFFFFFC,D1
00027BDE <AmiBlitz3.ab3@10514>   SUB.l d2,d1
00027BE0 <AmiBlitz3.ab3@10515>   MOVE.l d1,d3
00027BE2 <AmiBlitz3.ab3@10516>   MOVE.l D7,D1
00027BE6 <AmiBlitz3.ab3@10517>    BSR.w mywrite
00027BF0 <AmiBlitz3.ab3@10518>   MOVE.l hunkoffsetcounter,tstsize3
00027BF4 <AmiBlitz3.ab3@10519>    BEQ.w JL_0_7646
00027BF6 <AmiBlitz3.ab3@10520>   MOVE.l D7,D1
00027BFC <AmiBlitz3.ab3@10521>   MOVE.l #tstend,D2
00027BFE <AmiBlitz3.ab3@10522>   MOVEQ.l #$04,D3
00027C02 <AmiBlitz3.ab3@10523>    BSR.w mywrite
00027C08 <AmiBlitz3.ab3@10524>    MOVEA.l _execbase,A6
00027C0E <AmiBlitz3.ab3@10525>    MOVE.l hunkoffsetcounter,d0
00027C10 <AmiBlitz3.ab3@10526>    ASL.l #2,d0
00027C16 <AmiBlitz3.ab3@10527>    ADD.l #12,d0
00027C18 <AmiBlitz3.ab3@10528>    MOVEQ #0,d1
00027C1C <AmiBlitz3.ab3@10529>    JSR _AllocMem(a6)
00027C1E <AmiBlitz3.ab3@10530>    TST.l d0
00027C22 <AmiBlitz3.ab3@10531>    BEQ nomem
00027C28 <AmiBlitz3.ab3@10532>    MOVE.l noinits,D4
00027C2A <AmiBlitz3.ab3@10533>    MOVE.l d5,-(a7)
00027C2C <AmiBlitz3.ab3@10534>    MOVE.l d0,d5
00027C2E <AmiBlitz3.ab3@10535>    MOVE.l d0,a1
00027C34 <AmiBlitz3.ab3@10536>    MOVEA.l hunkoffsetbase,A2
00027C3C <AmiBlitz3.ab3@10537>    MOVE.b #0,newhunk
00027C40 <AmiBlitz3.ab3@10540>   CMPA.w #$0,A2
00027C44 <AmiBlitz3.ab3@10541>    BEQ.w savehunk
00027C4A <AmiBlitz3.ab3@10542>   MOVE.l destbufferstart,D2
00027C50 <AmiBlitz3.ab3@10543>   ADD.l noinits,D2
00027C54 <AmiBlitz3.ab3@10544>   MOVE.l  $4(A2),d1
00027C58 <AmiBlitz3.ab3@10545>   BTST #31,d1
00027C5C <AmiBlitz3.ab3@10546>   BEQ 'lh1
00027C64 <AmiBlitz3.ab3@10547>   MOVE.b #1,newhunk
00027C68 <AmiBlitz3.ab3@10548> BRA 'lh3
00027C6C <AmiBlitz3.ab3@10551>   BTST #30,d1
00027C70 <AmiBlitz3.ab3@10552>   BEQ 'lh2
00027C78 <AmiBlitz3.ab3@10553>   MOVE.b #1,newhunk
00027C7C <AmiBlitz3.ab3@10554> BRA 'lh3
00027C7E <AmiBlitz3.ab3@10557>   ADD.l d1,d2
00027C84 <AmiBlitz3.ab3@10558>   CMP.l chipend,d2
00027C88 <AmiBlitz3.ab3@10559>   BLT 'l100
00027C8E <AmiBlitz3.ab3@10560>   SUB.l chipsize,d1
00027C94 <AmiBlitz3.ab3@10563>   CMP.l bssend,d2
00027C98 <AmiBlitz3.ab3@10564>   BLT 'l101
00027C9E <AmiBlitz3.ab3@10565>   SUB.l bsssize,d1
00027CA0 <AmiBlitz3.ab3@10568>   MOVE.l d1,(a1)
00027CA2 <AmiBlitz3.ab3@10569>   SUB.l D4,(A1)+
00027CA4 <AmiBlitz3.ab3@10572>   MOVEA.l (A2),A2
00027CA8 <AmiBlitz3.ab3@10573> BRA.w menu_createresidentfile__oloopb
00027CAA <AmiBlitz3.ab3@10577>   MOVE.l D7,D1
00027CB0 <AmiBlitz3.ab3@10578>   MOVEA.l _dosbase,A6
00027CBA <AmiBlitz3.ab3@10579>   MOVE.l hunkoffsetnum,tstsize3
00027CBE <AmiBlitz3.ab3@10580>   BEQ 'ln1
00027CC4 <AmiBlitz3.ab3@10581>   MOVE.l #tstend+4,d2
00027CC6 <AmiBlitz3.ab3@10582>     MOVEQ #8,d3
00027CCA <AmiBlitz3.ab3@10583>    JSR _Write(A6)
00027CCC <AmiBlitz3.ab3@10584>   MOVE.l d7,d1
00027CD2 <AmiBlitz3.ab3@10585>   MOVE.l hunkoffsetnum,d3
00027CD4 <AmiBlitz3.ab3@10586>   ASL.l #2,d3
00027CD6 <AmiBlitz3.ab3@10587>   MOVE.l d5,D2
00027CDA <AmiBlitz3.ab3@10588>   JSR _Write(a6)
00027CE0 <AmiBlitz3.ab3@10591>   TST.b newhunk
00027CE4 <AmiBlitz3.ab3@10592>   BEQ 'l10
00027CEA <AmiBlitz3.ab3@10593>   MOVEA.l hunkoffsetbase,A2
00027CEC <AmiBlitz3.ab3@10594>   MOVE.l d5,a0
00027CEE <AmiBlitz3.ab3@10595>   ADDQ #8,a0
00027CF6 <AmiBlitz3.ab3@10596>   MOVE.l bssnum,-4(a0)
00027CF8 <AmiBlitz3.ab3@10597>   MOVEQ #0,d6
00027CFC <AmiBlitz3.ab3@10600>   CMPA.w #$0,A2
00027D00 <AmiBlitz3.ab3@10601>    BEQ.w 'lh3
00027D06 <AmiBlitz3.ab3@10602>   MOVE.l destbufferstart,D2
00027D0C <AmiBlitz3.ab3@10603>   ADD.l noinits,D2
00027D10 <AmiBlitz3.ab3@10604>   MOVE.l  $4(A2),d1
00027D14 <AmiBlitz3.ab3@10605>   BTST #30,d1
00027D18 <AmiBlitz3.ab3@10606>   BEQ 'lh1
00027D1C <AmiBlitz3.ab3@10607>   BCLR #30,d1
00027D1E <AmiBlitz3.ab3@10608>   MOVE.l d1,(a0)
00027D20 <AmiBlitz3.ab3@10609>   SUB.l D4,(A0)+
00027D22 <AmiBlitz3.ab3@10610>   ADDQ.l #1,d6
00027D24 <AmiBlitz3.ab3@10613>   MOVE.l (a2),a2
00027D28 <AmiBlitz3.ab3@10614> BRA 'lh2
00027D2A <AmiBlitz3.ab3@10617>   TST.l d6
00027D2E <AmiBlitz3.ab3@10618>     BEQ 'lh10
00027D30 <AmiBlitz3.ab3@10619>     MOVE.l d5,a0
00027D32 <AmiBlitz3.ab3@10620>     MOVE.l d6,(a0)
00027D34 <AmiBlitz3.ab3@10621>     MOVE.l d7,d1
00027D36 <AmiBlitz3.ab3@10622>     MOVE.l d5,d2
00027D38 <AmiBlitz3.ab3@10623>     MOVE.l d6,d3
00027D3A <AmiBlitz3.ab3@10624>     ASL.l #2,d3
00027D3C <AmiBlitz3.ab3@10625>     ADDQ.l #8,d3
00027D40 <AmiBlitz3.ab3@10626>     BSR.w mywrite
00027D46 <AmiBlitz3.ab3@10629>   MOVEA.l hunkoffsetbase,A2
00027D48 <AmiBlitz3.ab3@10630>   MOVE.l d5,a0
00027D4A <AmiBlitz3.ab3@10631>   ADDQ #8,a0
00027D52 <AmiBlitz3.ab3@10632>   MOVE.l chipnum,-4(a0)
00027D54 <AmiBlitz3.ab3@10633>   MOVEQ #0,d6
00027D58 <AmiBlitz3.ab3@10636>   CMPA.w #$0,A2
00027D5C <AmiBlitz3.ab3@10637>    BEQ.w 'lh30
00027D62 <AmiBlitz3.ab3@10638>   MOVE.l destbufferstart,D2
00027D68 <AmiBlitz3.ab3@10639>   ADD.l noinits,D2
00027D6C <AmiBlitz3.ab3@10640>   MOVE.l  $4(A2),d1
00027D70 <AmiBlitz3.ab3@10641>   BTST #31,d1
00027D74 <AmiBlitz3.ab3@10642>   BEQ 'lh11
00027D78 <AmiBlitz3.ab3@10643>   BCLR #31,d1
00027D7A <AmiBlitz3.ab3@10644>   MOVE.l d1,(a0)
00027D7C <AmiBlitz3.ab3@10645>   SUB.l D4,(A0)+
00027D7E <AmiBlitz3.ab3@10646>   ADDQ.l #1,d6
00027D80 <AmiBlitz3.ab3@10649>   MOVE.l (a2),a2
00027D84 <AmiBlitz3.ab3@10650> BRA 'lh20
00027D86 <AmiBlitz3.ab3@10653>   TST.l d6
00027D8A <AmiBlitz3.ab3@10654>     BEQ 'l10
00027D8C <AmiBlitz3.ab3@10655>     MOVE.l d5,a0
00027D8E <AmiBlitz3.ab3@10656>     MOVE.l d6,(a0)
00027D90 <AmiBlitz3.ab3@10657>     MOVE.l d7,d1
00027D92 <AmiBlitz3.ab3@10658>     MOVE.l d5,d2
00027D94 <AmiBlitz3.ab3@10659>     MOVE.l d6,d3
00027D96 <AmiBlitz3.ab3@10660>     ASL.l #2,d3
00027D98 <AmiBlitz3.ab3@10661>     ADDQ.l #8,d3
00027D9C <AmiBlitz3.ab3@10662>     BSR.w mywrite
00027DA2 <AmiBlitz3.ab3@10666>    MOVEA.l _execbase,A6
00027DA8 <AmiBlitz3.ab3@10667>    MOVE.l hunkoffsetcounter,d0
00027DAA <AmiBlitz3.ab3@10668>    ASL.l #2,d0
00027DB0 <AmiBlitz3.ab3@10669>    ADD.l #12,d0
00027DB2 <AmiBlitz3.ab3@10670>    MOVE.l d5,a1
00027DB6 <AmiBlitz3.ab3@10671>    JSR _FreeMem(a6)
00027DBC <AmiBlitz3.ab3@10672>    MOVEA.l _dosbase,A6
00027DBE <AmiBlitz3.ab3@10673>    MOVE.l (a7)+,d5
00027DC2 <AmiBlitz3.ab3@10674> BRA JL_0_7632
00027DC8 <AmiBlitz3.ab3@10678>   MOVEA.l hunkoffsetbase,A2
00027DCE <AmiBlitz3.ab3@10679>   MOVE.l noinits,D4
00027DD2 <AmiBlitz3.ab3@10682>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027DD6 <AmiBlitz3.ab3@10683>   BEQ.w JL_0_7632
00027DDA <AmiBlitz3.ab3@10684>   LEA $4(A2),A1
00027DDC <AmiBlitz3.ab3@10685>   SUB.l D4,(A1)
00027DDE <AmiBlitz3.ab3@10686>   MOVE.l D7,D1
00027DE0 <AmiBlitz3.ab3@10687>   MOVE.l A1,D2
00027DE2 <AmiBlitz3.ab3@10688>   MOVEQ.l #$04,D3
00027DE6 <AmiBlitz3.ab3@10689>   BSR.w mywrite
00027DEA <AmiBlitz3.ab3@10690>   ADD.l D4,$4(A2)
00027DEC <AmiBlitz3.ab3@10691>   MOVEA.l (A2),A2
00027DF0 <AmiBlitz3.ab3@10692> BRA.w JL_0_7610
00027DF6 <AmiBlitz3.ab3@10695>   CLR.l tstsize3
00027DF8 <AmiBlitz3.ab3@10696>   MOVE.l D7,D1
00027DFE <AmiBlitz3.ab3@10697>   MOVE.l #tstsize3,D2
00027E00 <AmiBlitz3.ab3@10698>   MOVEQ.l #$04,D3
00027E04 <AmiBlitz3.ab3@10699>    BSR.w mywrite
00027E0C <AmiBlitz3.ab3@10702>   BTST #$7,link_debuginfo
00027E10 <AmiBlitz3.ab3@10703>    BEQ.w JL_0_7706
00027E16 <AmiBlitz3.ab3@10704>   MOVE.l #sysdebug,D2                                      ;debughunks
00027E18 <AmiBlitz3.ab3@10705>   MOVEQ.l #$04,D3
00027E1A <AmiBlitz3.ab3@10706>   MOVE.l D7,D1
00027E1E <AmiBlitz3.ab3@10707>    BSR.w mywrite
00027E24 <AmiBlitz3.ab3@10708>   MOVEA.l labelbase,A2
00027E28 <AmiBlitz3.ab3@10711>   CMPA.w #$0,A2
00027E2C <AmiBlitz3.ab3@10712>    BEQ.w JL_0_76F8
00027E32 <AmiBlitz3.ab3@10713>   BTST #$0,$7(A2)
00027E36 <AmiBlitz3.ab3@10714>    BEQ.w JL_0_7682
00027E3E <AmiBlitz3.ab3@10715>   CMPI.l #$1,$4(A2)
00027E42 <AmiBlitz3.ab3@10717>   BRA.w JL_0_76F2                                            ;only addr labels
00027E44 <AmiBlitz3.ab3@10719>   MOVEQ.l #$00,D4
00027E48 <AmiBlitz3.ab3@10720>   MOVE.b $12(A2),D4
00027E4C <AmiBlitz3.ab3@10721>   SUBI.w #$13,D4
00027E4E <AmiBlitz3.ab3@10722>   ADDQ.w #2,D4
00027E52 <AmiBlitz3.ab3@10723>   ANDI.w #$FFFC,D4
00027E54 <AmiBlitz3.ab3@10724>   MOVE.l D4,D5
00027E56 <AmiBlitz3.ab3@10725>   LSR.w #2,D5
00027E5C <AmiBlitz3.ab3@10726>   MOVE.l D5,temp1
00027E5E <AmiBlitz3.ab3@10727>   LSL.w #2,D5
00027E64 <AmiBlitz3.ab3@10728>   MOVE.l #temp1,a1
00027E6A <AmiBlitz3.ab3@10730>   LEA debugstore,a0
00027E6C <AmiBlitz3.ab3@10731>   MOVE.l (a1),(a0)+
00027E6E <AmiBlitz3.ab3@10732>   MOVEQ.l #$04,D3
00027E72 <AmiBlitz3.ab3@10735>   LEA $13(A2),A1
00027E74 <AmiBlitz3.ab3@10736>   MOVE.l d4,d1
00027E76 <AmiBlitz3.ab3@10737>   SUBQ.l #1,d1
00027E78 <AmiBlitz3.ab3@10740>     MOVE.b (a1)+,d0
00027E7C <AmiBlitz3.ab3@10741>     BEQ 'l21
00027E80 <AmiBlitz3.ab3@10742>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00027E84 <AmiBlitz3.ab3@10743>     BNE 'ok
00027E88 <AmiBlitz3.ab3@10744>     MOVE.b #"_",d0
00027E8A <AmiBlitz3.ab3@10745> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00027E8E <AmiBlitz3.ab3@10746>   DBF d1,'l10
00027E92 <AmiBlitz3.ab3@10748> BRA 'l22
00027E94 <AmiBlitz3.ab3@10751>       CLR.b (a0)+
00027E98 <AmiBlitz3.ab3@10752>   DBF d1,'l21
00027E9A <AmiBlitz3.ab3@10755>   ADD.l d4,d3
00027E9C <AmiBlitz3.ab3@10760>   SUB.l D4,D5
00027EA0 <AmiBlitz3.ab3@10761>    BEQ.w JL_0_76CE
00027EA6 <AmiBlitz3.ab3@10762>   MOVE.l #zero,a1
00027EA8 <AmiBlitz3.ab3@10764>   MOVE.l (a1),(a0)+
00027EAA <AmiBlitz3.ab3@10766>   ADD.l d5,d3
00027EAE <AmiBlitz3.ab3@10771>   MOVE.l $8(A2),D2
00027EB4 <AmiBlitz3.ab3@10772>   SUB.l destbufferstart,D2
00027EBA <AmiBlitz3.ab3@10773>   SUB.l noinits,D2
00027EC0 <AmiBlitz3.ab3@10774>   MOVE.l D2,temp1
00027EC6 <AmiBlitz3.ab3@10775>   MOVE.l #temp1,a1
00027EC8 <AmiBlitz3.ab3@10777>   MOVE.l (a1),(a0)+
00027ECE <AmiBlitz3.ab3@10778>   ADD.l #4,d3
00027ED4 <AmiBlitz3.ab3@10779>   LEA debugstore,a0
00027ED6 <AmiBlitz3.ab3@10780>   MOVE.l a0,d2
00027ED8 <AmiBlitz3.ab3@10782>   MOVE.l D7,D1
00027EDC <AmiBlitz3.ab3@10783>   BSR.w mywrite
00027EDE <AmiBlitz3.ab3@10786>   MOVEA.l (A2),A2
00027EE2 <AmiBlitz3.ab3@10787> BRA.w JL_0_7664
00027EE8 <AmiBlitz3.ab3@10791>   MOVE.l #zero,D2
00027EEA <AmiBlitz3.ab3@10792>   MOVEQ.l #$04,D3
00027EEC <AmiBlitz3.ab3@10793>   MOVE.l D7,D1
00027EF0 <AmiBlitz3.ab3@10794>   BSR.w mywrite
00027EF2 <AmiBlitz3.ab3@10797>   MOVE.l D7,D1
00027EF8 <AmiBlitz3.ab3@10798>   MOVE.l #tstdone,D2                                      ;hunkend
00027EFA <AmiBlitz3.ab3@10799>   MOVEQ.l #$04,D3
00027F04 <AmiBlitz3.ab3@10800>   CMPI.l #-1,bssstart
00027F08 <AmiBlitz3.ab3@10801>   BEQ 'l10
00027F0A <AmiBlitz3.ab3@10802>   MOVEQ #16,d3
00027F10 <AmiBlitz3.ab3@10803>   MOVE.l #hunkend,d2
00027F1A <AmiBlitz3.ab3@10804>   CMPI.l #-1,chipstart
00027F1E <AmiBlitz3.ab3@10805>   BEQ 'l10
00027F20 <AmiBlitz3.ab3@10806>   MOVE.l d7,d1
00027F22 <AmiBlitz3.ab3@10807>   MOVEQ #12,d3
00027F26 <AmiBlitz3.ab3@10808>   BSR.w mywrite
00027F30 <AmiBlitz3.ab3@10811>   CMPI.l #-1,chipstart
00027F34 <AmiBlitz3.ab3@10812>   BEQ 'l11
00027F36 <AmiBlitz3.ab3@10813>   MOVEQ #12,d3
00027F3C <AmiBlitz3.ab3@10814>   MOVE.l #hunkend2,d2
00027F3E <AmiBlitz3.ab3@10815>   MOVE.l d7,d1
00027F42 <AmiBlitz3.ab3@10816>   BSR.w mywrite
00027F44 <AmiBlitz3.ab3@10817>   MOVE.l d7,d1
00027F4A <AmiBlitz3.ab3@10818>   MOVE.l chipstart,d2
00027F50 <AmiBlitz3.ab3@10819>   MOVE.l chipsize,d3
00027F54 <AmiBlitz3.ab3@10820>   BSR.w mywrite
00027F56 <AmiBlitz3.ab3@10821>   MOVEQ #4,d3
00027F5C <AmiBlitz3.ab3@10822>   MOVE.l #hunkend,d2
00027F5E <AmiBlitz3.ab3@10823>   MOVE.l d7,d1
00027F62 <AmiBlitz3.ab3@10826>   BSR.w mywrite
00027F64 <AmiBlitz3.ab3@10827>   MOVE.l D7,D1
00027F6A <AmiBlitz3.ab3@10828>   MOVEA.l _dosbase,A6
00027F6E <AmiBlitz3.ab3@10829>   JSR _Close(A6)
00027F76 <AmiBlitz3.ab3@10834>   BTST #$7,create_iconfile
00027F7A <AmiBlitz3.ab3@10835>    BEQ.w skip_createicon
00027F80 <AmiBlitz3.ab3@10837>   MOVEA.l ptr_newexefilename,A0
00027F82 <AmiBlitz3.ab3@10840>     TST.b (A0)+
00027F86 <AmiBlitz3.ab3@10841>   BNE.w JL_0_772C
00027F88 <AmiBlitz3.ab3@10842>   SUBQ.w #1,A0
00027F8A <AmiBlitz3.ab3@10843>   MOVE.l A0,-(A7)
00027F90 <AmiBlitz3.ab3@10844>   LEA str_infoextention2,A1
00027F92 <AmiBlitz3.ab3@10847>     MOVE.b (A1)+,(A0)+
00027F96 <AmiBlitz3.ab3@10848>   BNE.w JL_0_773A
00027F9C <AmiBlitz3.ab3@10850>   MOVE.l ptr_newexefilename,D1
00027F9E <AmiBlitz3.ab3@10851>   MOVEQ.l #-$02,D2
00027FA4 <AmiBlitz3.ab3@10852>   MOVEA.l _dosbase,A6
00027FA8 <AmiBlitz3.ab3@10853>   JSR _Lock(A6)
00027FAA <AmiBlitz3.ab3@10854>   MOVE.l D0,D1
00027FAE <AmiBlitz3.ab3@10855>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027FB2 <AmiBlitz3.ab3@10856>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027FB6 <AmiBlitz3.ab3@10857> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027FBC <AmiBlitz3.ab3@10860>   MOVE.l ptr_newexefilename,D1
00027FC2 <AmiBlitz3.ab3@10861>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027FC8 <AmiBlitz3.ab3@10862>   MOVEA.l _dosbase,A6
00027FCC <AmiBlitz3.ab3@10863>    JSR _Open(A6)
00027FCE <AmiBlitz3.ab3@10864>   MOVE.l D0,D7
00027FD2 <AmiBlitz3.ab3@10865>    BEQ.w JL_0_7788
00027FD8 <AmiBlitz3.ab3@10866>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027FDE <AmiBlitz3.ab3@10867>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027FE0 <AmiBlitz3.ab3@10868>   MOVE.l D7,D1
00027FE6 <AmiBlitz3.ab3@10869>   MOVEA.l _dosbase,A6
00027FEA <AmiBlitz3.ab3@10870>   JSR _Write(A6)
00027FEC <AmiBlitz3.ab3@10871>   MOVE.l D7,D1
00027FF0 <AmiBlitz3.ab3@10872>   JSR _Close(A6)
00027FF2 <AmiBlitz3.ab3@10875>   MOVEA.l (A7)+,A0
00027FF4 <AmiBlitz3.ab3@10876>   CLR.b (A0)
00027FFA <AmiBlitz3.ab3@10881>   TST.b exdebug
00027FFE <AmiBlitz3.ab3@10882>    BEQ JL_0_757Cb
00028004 <AmiBlitz3.ab3@10883>   MOVE.w dontwrite,D1
00028008 <AmiBlitz3.ab3@10884>   BNE.w JL_0_757Cb
0002800E <AmiBlitz3.ab3@10885>   MOVE.l chipsize,d5
00028014 <AmiBlitz3.ab3@10886>   MOVE.l bsssize,d3
0002801A <AmiBlitz3.ab3@10887>   MOVE.l chipstart,d7
00028020 <AmiBlitz3.ab3@10888>   MOVE.l bssstart,d6
00028026 <AmiBlitz3.ab3@10889>   MOVEA.l hunkoffsetbase,A2
0002802C <AmiBlitz3.ab3@10890>   MOVEA.l destbufferstart,A1
0002802E <AmiBlitz3.ab3@10891>   MOVE.l A1,D2
00028034 <AmiBlitz3.ab3@10892>   ADD.l noinits,D2
0002803A <AmiBlitz3.ab3@10893>   CLR.l hunkoffsetnum
0002803E <AmiBlitz3.ab3@10896>   CMPA.w #$0,A2
00028042 <AmiBlitz3.ab3@10897>    BEQ.w JL_0_757Cb
00028046 <AmiBlitz3.ab3@10898>   MOVE.l $4(A2),D0
0002804A <AmiBlitz3.ab3@10899>    LEA $0(a1,d0.l),a0
0002804C <AmiBlitz3.ab3@10900>    MOVE.l (a0),d1
0002804E <AmiBlitz3.ab3@10901>   TST.l d1
00028052 <AmiBlitz3.ab3@10902>    BMI.w 'lm1
0002805A <AmiBlitz3.ab3@10903>   MOVE.b #0,newhunk
00028064 <AmiBlitz3.ab3@10904>   CMP.l #-1,chipstart
00028068 <AmiBlitz3.ab3@10905>   BEQ 'l10
0002806E <AmiBlitz3.ab3@10906>   CMP.l chipstart,d1
00028072 <AmiBlitz3.ab3@10907>   BLT 'l10
0002807A <AmiBlitz3.ab3@10908>   MOVE.b #1,newhunk
00028080 <AmiBlitz3.ab3@10909>   CMP.l chipend,d1
00028084 <AmiBlitz3.ab3@10910>   BGE 'l110
00028086 <AmiBlitz3.ab3@10911>   ADD.l d7,(a0)
0002808E <AmiBlitz3.ab3@10912>   ADD.l #$80000000,4(a2)
00028092 <AmiBlitz3.ab3@10913> BRA JL_0_7576b
00028096 <AmiBlitz3.ab3@10916>   ADD.l d5,0(a0)
000280A0 <AmiBlitz3.ab3@10919>   CMP.l #-1,bssstart
000280A4 <AmiBlitz3.ab3@10920>     BEQ 'l11
000280AA <AmiBlitz3.ab3@10921>   CMP.l bssstart,d1
000280AE <AmiBlitz3.ab3@10922>   BLT 'l11
000280B4 <AmiBlitz3.ab3@10923>   CMP.l bssend,d1
000280B8 <AmiBlitz3.ab3@10924>   BGE 'l111
000280BE <AmiBlitz3.ab3@10925>   TST.b newhunk
000280C2 <AmiBlitz3.ab3@10926>   BEQ 'ln1
000280C4 <AmiBlitz3.ab3@10927>   ADD.l d5,(a0)
000280C6 <AmiBlitz3.ab3@10930>   ADD.l d6,(a0)
000280CE <AmiBlitz3.ab3@10931>   ADD.l #$40000000,4(a2)
000280D2 <AmiBlitz3.ab3@10932> BRA JL_0_7576b
000280D6 <AmiBlitz3.ab3@10935>   ADD.l d3,0(a0)
000280D8 <AmiBlitz3.ab3@10938>   ADD.l D2,(A0)                                            ;only normal code offsets restore
000280DE <AmiBlitz3.ab3@10941>   ADDQ.l #1,hunkoffsetnum
000280E0 <AmiBlitz3.ab3@10944>   MOVEA.l (A2),A2
000280E4 <AmiBlitz3.ab3@10945> BRA.w JL_0_755Eb
000280EA <AmiBlitz3.ab3@10948>   JSR call_setpointernormal
000280EE <AmiBlitz3.ab3@10949>   MOVEM.l (a7)+,d2-d7/a2-a6
000280F0 <AmiBlitz3.ab3@10951> RTS
000280F2 <AmiBlitz3.ab3@10955>   MOVE.l D2,-(A7)
000280F8 <AmiBlitz3.ab3@10956>   MOVE.l destpointer,D2
000280FE <AmiBlitz3.ab3@10957>   SUB.l destbufferstart,D2
00028102 <AmiBlitz3.ab3@10958>   BSR.w addhunkoffset
00028104 <AmiBlitz3.ab3@10959>   MOVE.l (A7)+,D2
00028106 <AmiBlitz3.ab3@10960> RTS
0002810A <AmiBlitz3.ab3@10964>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00028110 <AmiBlitz3.ab3@10965>   TST.b nohunkoffset
00028114 <AmiBlitz3.ab3@10966>   BNE 'l10
00028116 <AmiBlitz3.ab3@10967>   MOVEQ.l #$8,D0
00028118 <AmiBlitz3.ab3@10968>   MOVEQ.l #$01,D1
0002811E <AmiBlitz3.ab3@10969>   MOVEA.l _execbase,A6
00028124 <AmiBlitz3.ab3@10970>   MOVE.l mempool2,a0
00028128 <AmiBlitz3.ab3@10971>   JSR _AllocPooled(a6)
0002812E <AmiBlitz3.ab3@10973>   ADDQ.l #1,hunkoffsetcounter
00028130 <AmiBlitz3.ab3@10974>   MOVEA.l D0,A0
00028136 <AmiBlitz3.ab3@10975>   MOVE.l hunkoffsetbase,(A0)
0002813C <AmiBlitz3.ab3@10976>   MOVE.l A0,hunkoffsetbase
00028140 <AmiBlitz3.ab3@10977>   MOVE.l D2,$4(A0)
00028144 <AmiBlitz3.ab3@10980>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00028146 <AmiBlitz3.ab3@10981> RTS
0002814C <AmiBlitz3.ab3@10985>   CLR.l hunkoffsetbase
00028152 <AmiBlitz3.ab3@10986>   MOVEA.l _execbase,A6
00028158 <AmiBlitz3.ab3@10987>   MOVEA.l hunkoffsetbase,A2
0002815C <AmiBlitz3.ab3@10990>     CMPA.w #$0,A2
00028160 <AmiBlitz3.ab3@10991>      BEQ.w JL_0_7988
00028162 <AmiBlitz3.ab3@10992>     MOVEA.l A2,A1
00028164 <AmiBlitz3.ab3@10993>     MOVEQ.l #$08,D0
00028166 <AmiBlitz3.ab3@10994>     MOVEA.l (A2),A2
0002816C <AmiBlitz3.ab3@10995>     MOVE.l mempool2,a0
00028170 <AmiBlitz3.ab3@10996>     JSR _FreePooled(A6)
00028174 <AmiBlitz3.ab3@10997> BRA.w JL_0_7972
0002817A <AmiBlitz3.ab3@11000>   CLR.l hunkoffsetcounter
0002817C <AmiBlitz3.ab3@11001> RTS
00028194 <AmiBlitz3.ab3@11004> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00028198 <AmiBlitz3.ab3@11005> cmakea5:    Ds.l 1
0002819A <AmiBlitz3.ab3@11006> cmake:      Ds.w 1
0002821A <AmiBlitz3.ab3@11007> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00028220 <AmiBlitz3.ab3@11011>   MOVE.l A5,lastsourcepos
0002822A <AmiBlitz3.ab3@11012>   MOVE.w instringon,oldqflag
0002822C <AmiBlitz3.ab3@11016>   MOVEQ.l #$00,D0
0002822E <AmiBlitz3.ab3@11017>   MOVE.b (A5)+,D0
00028232 <AmiBlitz3.ab3@11018>    BEQ getcharb__donea
00028236 <AmiBlitz3.ab3@11019>   BPL getcharb__stuffa
00028238 <AmiBlitz3.ab3@11020>   LSL.l #8,D0
0002823A <AmiBlitz3.ab3@11021>   MOVE.b (A5)+,D0
0002823C <AmiBlitz3.ab3@11022>   MOVE.l a1,-(a7)
00028242 <AmiBlitz3.ab3@11023>   LEA replacedat,a1
00028246 <AmiBlitz3.ab3@11024>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002824A <AmiBlitz3.ab3@11025>   BEQ getchar__l10
0002824E <AmiBlitz3.ab3@11026>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00028250 <AmiBlitz3.ab3@11030>   MOVE.l (a7)+,a1
00028254 <AmiBlitz3.ab3@11031> BRA getchar__weiter
00028258 <AmiBlitz3.ab3@11034>   CMP.w #$22,D0
0002825C <AmiBlitz3.ab3@11035>    BEQ.b swapquotea
00028260 <AmiBlitz3.ab3@11036>   CMP.w #$3B,D0
00028264 <AmiBlitz3.ab3@11037>    BNE.b getcharb__donea
0002826A <AmiBlitz3.ab3@11038>   TST.w instringon
0002826E <AmiBlitz3.ab3@11039>    BNE.b getcharb__donea
00028270 <AmiBlitz3.ab3@11042>   MOVE.b (A5)+,D0
00028274 <AmiBlitz3.ab3@11043>              BEQ getchar__l1
00028278 <AmiBlitz3.ab3@11044>              CMP.b #":",d0
0002827C <AmiBlitz3.ab3@11045>              BNE getcharb__loopa                                ;:@
00028280 <AmiBlitz3.ab3@11046>              CMP.b #"@",(a5)
00028284 <AmiBlitz3.ab3@11047>              BNE getcharb__loopa
00028286 <AmiBlitz3.ab3@11048>              ADDQ #1,a5
0002828C <AmiBlitz3.ab3@11051>   MOVE.w D0,lastchar
00028290 <AmiBlitz3.ab3@11054> BRA.s getchar__weiter
00028296 <AmiBlitz3.ab3@11057>   NOT.w instringon
0002829C <AmiBlitz3.ab3@11060>    MOVE.w D0,lastchar
000282A0 <AmiBlitz3.ab3@11061>    BEQ.w getchar__done
000282A4 <AmiBlitz3.ab3@11062>    BPL.w getchar__done2
000282A8 <AmiBlitz3.ab3@11063>   CMP.w #-$7FE4,D0                                         ;cnif
000282AC <AmiBlitz3.ab3@11064>    BEQ.w getchar__cnif
000282B0 <AmiBlitz3.ab3@11065>   CMP.w #-$7FE3,D0                                         ;csif
000282B4 <AmiBlitz3.ab3@11066>    BEQ.w getchar__csif
000282B8 <AmiBlitz3.ab3@11067>   CMP.w #-$7FE2,D0                                         ;celse
000282BC <AmiBlitz3.ab3@11068>    BEQ.w getchar__celse
000282C0 <AmiBlitz3.ab3@11069>   CMP.w #-$7FE1,D0                                         ;cend
000282C4 <AmiBlitz3.ab3@11070>    BEQ.w getchar__cend
000282CA <AmiBlitz3.ab3@11073>   TST.w skipcode
000282CE <AmiBlitz3.ab3@11074>    BEQ.w getchar
000282D2 <AmiBlitz3.ab3@11075>   CMP.w #$7E,D0
000282D6 <AmiBlitz3.ab3@11076>    BEQ.w getchar__cmake                                         ;tilde
000282DA <AmiBlitz3.ab3@11077>   CMP.w #$2,D0
000282DE <AmiBlitz3.ab3@11078>    BNE.w getchar__notunpath
000282E4 <AmiBlitz3.ab3@11079>   MOVEA.l usedfrom,A5
000282EA <AmiBlitz3.ab3@11080>   CLR.l usedfrom
000282EE <AmiBlitz3.ab3@11081> BRA.w getchar
000282F2 <AmiBlitz3.ab3@11084>   CMP.w #$1,D0
000282F6 <AmiBlitz3.ab3@11085>    BNE.w getchar__done
000282FA <AmiBlitz3.ab3@11089>   MOVEA.l cmakea5(PC),A5
000282FE <AmiBlitz3.ab3@11090> BRA.w getchar
00028304 <AmiBlitz3.ab3@11093>   TST.w cmake
00028308 <AmiBlitz3.ab3@11094>    BNE.w getchar__done
0002830C <AmiBlitz3.ab3@11096>   MOVEM.l D0-D7/A0-A6,-(A7)
00028312 <AmiBlitz3.ab3@11097>   LEA cmake,a0                                         ;reass
00028314 <AmiBlitz3.ab3@11098>   NOT.w (a0)
00028318 <AmiBlitz3.ab3@11099>   LEA cmakebak(PC),A0
0002831E <AmiBlitz3.ab3@11100>   LEA ptr_parameterstore,A1
00028320 <AmiBlitz3.ab3@11101>   MOVEQ.l #$1F,D0
00028322 <AmiBlitz3.ab3@11104>     MOVE.l (A1)+,(A0)+
00028326 <AmiBlitz3.ab3@11105>   DBF D0,getchar__cmloop
0002832C <AmiBlitz3.ab3@11108>    JSR AJL_0_BF6E
00028330 <AmiBlitz3.ab3@11109>   CMP.w #$7E,D0
00028334 <AmiBlitz3.ab3@11110>    BNE.w syntaxerr
0002833A <AmiBlitz3.ab3@11111>   MOVE.l A5,cmakea5                                      ;tilde
0002833E <AmiBlitz3.ab3@11112>   LEA cmakebuff(PC),A0
00028340 <AmiBlitz3.ab3@11113>   MOVE.l D3,D2
00028344 <AmiBlitz3.ab3@11114>   BSR.w makelong
00028346 <AmiBlitz3.ab3@11115>   ADDQ.b #1,(A0)
0002834C <AmiBlitz3.ab3@11116>   LEA cmake,a0
0002834E <AmiBlitz3.ab3@11117>   NOT.w (a0)                                               ;reass
00028352 <AmiBlitz3.ab3@11118>   LEA cmakebak(PC),A0
00028358 <AmiBlitz3.ab3@11119>   LEA ptr_parameterstore,A1
0002835A <AmiBlitz3.ab3@11120>   MOVEQ.l #$1F,D0
0002835C <AmiBlitz3.ab3@11123>     MOVE.l (A0)+,(A1)+
00028360 <AmiBlitz3.ab3@11124>   DBF D0,getchar__cmloop2
00028364 <AmiBlitz3.ab3@11126>   MOVEM.l (A7)+,D0-D7/A0-A6
00028368 <AmiBlitz3.ab3@11127>   LEA cmakebuff(PC),A5
0002836C <AmiBlitz3.ab3@11128> BRA.w getchar
0002836E <AmiBlitz3.ab3@11131> RTS
00028378 <AmiBlitz3.ab3@11135>   MOVE.l linenumat,ciflineat                               ;csif
0002837E <AmiBlitz3.ab3@11136>   TST.w skipcode
00028382 <AmiBlitz3.ab3@11137>    BEQ.w getchar__incnest
00028386 <AmiBlitz3.ab3@11138>    BSR.w get1bytemain
00028388 <AmiBlitz3.ab3@11139>    MOVE.l a1,-(a7)
0002838E <AmiBlitz3.ab3@11140>    JSR JL_0_C492
00028390 <AmiBlitz3.ab3@11141>    MOVE.l (a7)+,a1
00028394 <AmiBlitz3.ab3@11142> BRA.w getchar
0002839E <AmiBlitz3.ab3@11145>   MOVE.l linenumat,ciflineat                               ;cnif
000283A4 <AmiBlitz3.ab3@11146>   TST.w skipcode
000283A8 <AmiBlitz3.ab3@11147>    BEQ.w getchar__incnest
000283AC <AmiBlitz3.ab3@11148>    BSR.w get1bytemain
000283B0 <AmiBlitz3.ab3@11149>    CMP.b #"@",d0
000283B4 <AmiBlitz3.ab3@11150>    BNE getchar__cnif_ok2
000283B8 <AmiBlitz3.ab3@11151>    BSR.w get1bytemain
000283C0 <AmiBlitz3.ab3@11152>    MOVE.b #1,incnif
000283C6 <AmiBlitz3.ab3@11153>    JSR findconstant2
000283CA <AmiBlitz3.ab3@11154>    BEQ getchar__cnif_ok2
000283D0 <AmiBlitz3.ab3@11157>    MOVE.w fast,-(a7)
000283D6 <AmiBlitz3.ab3@11158>    CLR.b fast
000283D8 <AmiBlitz3.ab3@11159>    MOVE.l a1,-(a7)
000283DE <AmiBlitz3.ab3@11160>    JSR JL_0_C47E
000283E4 <AmiBlitz3.ab3@11161>    CLR.b incnif
000283E6 <AmiBlitz3.ab3@11162>    MOVE.l (a7)+,a1
000283EC <AmiBlitz3.ab3@11163>    MOVE.w (a7)+,fast
000283F0 <AmiBlitz3.ab3@11164> BRA.w getchar
000283F6 <AmiBlitz3.ab3@11167>   ADDQ.w #1,connest
000283FA <AmiBlitz3.ab3@11168> BRA.w getchar
00028400 <AmiBlitz3.ab3@11171>   MOVE.w connest,D0                                      ;celse
00028404 <AmiBlitz3.ab3@11172>    BNE.w getchar
0002840A <AmiBlitz3.ab3@11173>   NOT.w skipcode
0002840E <AmiBlitz3.ab3@11174> BRA.w getchar
00028414 <AmiBlitz3.ab3@11177>   SUBQ.w #1,connest                                      ;cend
00028418 <AmiBlitz3.ab3@11178>    BPL.w getchar
0002841E <AmiBlitz3.ab3@11179>   ADDQ.w #1,connest
00028424 <AmiBlitz3.ab3@11180>   MOVEA.l concomsp,A0
0002842A <AmiBlitz3.ab3@11181>   CMPA.l #concomstack,A0
0002842E <AmiBlitz3.ab3@11182>    BEQ.w nociferr
00028430 <AmiBlitz3.ab3@11183>   SUBQ.w #2,A0
00028436 <AmiBlitz3.ab3@11184>   MOVE.l A0,concomsp
0002843C <AmiBlitz3.ab3@11185>   MOVE.w (A0),skipcode
00028440 <AmiBlitz3.ab3@11186> BRA.w getchar
00028444 <AmiBlitz3.ab3@11189> ciflineat:   Ds.l 1
00028446 <AmiBlitz3.ab3@11197>   MOVEQ.l #$00,D0
00028448 <AmiBlitz3.ab3@11198>   MOVE.b (A5)+,D0
0002844C <AmiBlitz3.ab3@11199>    BEQ.b getcharb__done
00028450 <AmiBlitz3.ab3@11200>    BPL.b getcharb__stuff
00028452 <AmiBlitz3.ab3@11201>   LSL.w #8,D0
00028454 <AmiBlitz3.ab3@11202>   MOVE.b (A5)+,D0
00028456 <AmiBlitz3.ab3@11203> RTS
0002845A <AmiBlitz3.ab3@11206>   CMP.w #$22,D0
0002845E <AmiBlitz3.ab3@11207>    BEQ.b swapquote
00028462 <AmiBlitz3.ab3@11208>   CMP.w #$3B,D0
00028466 <AmiBlitz3.ab3@11209>    BNE.b getcharb__done
0002846C <AmiBlitz3.ab3@11210>   TST.w instringon
00028470 <AmiBlitz3.ab3@11211>    BNE.b getcharb__done
00028472 <AmiBlitz3.ab3@11214>   MOVE.b (A5)+,D0
00028476 <AmiBlitz3.ab3@11215>             BEQ getcharb__loop_l1
0002847A <AmiBlitz3.ab3@11216>             CMP.b #":",d0
0002847E <AmiBlitz3.ab3@11217>             BNE getcharb__loop
00028482 <AmiBlitz3.ab3@11218>             CMP.b #"@",(a5)
00028486 <AmiBlitz3.ab3@11219>             BNE getcharb__loop
0002848C <AmiBlitz3.ab3@11222>   MOVE.w D0,lastchar
0002848E <AmiBlitz3.ab3@11225> RTS
00028494 <AmiBlitz3.ab3@11228>   NOT.w instringon
00028496 <AmiBlitz3.ab3@11229> RTS
0002849A <AmiBlitz3.ab3@11233>   BSR.w getchar
000284A0 <AmiBlitz3.ab3@11234>   TST.w instringon
000284A4 <AmiBlitz3.ab3@11235>    BNE.w get1byte__skip
000284A8 <AmiBlitz3.ab3@11236>   CMP.w #$20,D0
000284AC <AmiBlitz3.ab3@11237>    BEQ.w get1byte_
000284AE <AmiBlitz3.ab3@11240> RTS
000284C8 <AmiBlitz3.ab3@11243> gs:        Ds.w 13                                         ;ds.b 26  org source
000284CC <AmiBlitz3.ab3@11244>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
000284CE <AmiBlitz3.ab3@11245>            Dc.b $C4,$DC
000284D2 <AmiBlitz3.ab3@11251>   BSR.w getchar
000284D8 <AmiBlitz3.ab3@11252>   TST.w instringon
000284DC <AmiBlitz3.ab3@11253>    BNE.w gchar2
000284E0 <AmiBlitz3.ab3@11254>   CMP.w #$20,D0
000284E4 <AmiBlitz3.ab3@11255>    BEQ.w get1bytemain
000284E6 <AmiBlitz3.ab3@11257>   TST.w D0
000284EA <AmiBlitz3.ab3@11260>   BEQ.b get1bytemain__zero
000284F0 <AmiBlitz3.ab3@11261>   TST.w instringon
000284F4 <AmiBlitz3.ab3@11262>    BEQ.b get1bytemain__noqoute
000284F8 <AmiBlitz3.ab3@11263>   CMP.b #$20,D0
000284FC <AmiBlitz3.ab3@11264>    BCC.b get1bytemain__skip
00028500 <AmiBlitz3.ab3@11265>   MOVE.b gs(PC,D0.W),D0
00028502 <AmiBlitz3.ab3@11266> RTS
00028506 <AmiBlitz3.ab3@11269>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002850A <AmiBlitz3.ab3@11270>    BEQ.b get1bytemain__zero
0002850E <AmiBlitz3.ab3@11271>   CMP.w #$3A,D0
00028512 <AmiBlitz3.ab3@11272>    BEQ.b get1bytemain__zero
00028514 <AmiBlitz3.ab3@11275>   TST.w D0
00028516 <AmiBlitz3.ab3@11278> RTS
0002851C <AmiBlitz3.ab3@11282>   MOVE.w lastchar,D0
00028520 <AmiBlitz3.ab3@11283> BRA.w gchar2
0002852A <AmiBlitz3.ab3@11287>   MOVE.w oldqflag,instringon
00028530 <AmiBlitz3.ab3@11288>   MOVEA.l lastsourcepos,A5
00028532 <AmiBlitz3.ab3@11289> RTS
00028538 <AmiBlitz3.ab3@11293>   MOVE.w D0,locchar
0002853E <AmiBlitz3.ab3@11294>   MOVE.l A5,locloc
00028540 <AmiBlitz3.ab3@11295> RTS
00028546 <AmiBlitz3.ab3@11299>   MOVEA.l locloc,A5
0002854C <AmiBlitz3.ab3@11300>   MOVE.w locchar,D0
00028552 <AmiBlitz3.ab3@11301>   MOVE.w D0,lastchar
00028554 <AmiBlitz3.ab3@11302> RTS
00028554 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
0002859C <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
000285EE <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
0002862C <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
0002866A <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028694 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
000286C4 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
0002870E <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028794 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
000287F6 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
0002883E <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028890 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
000288F2 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028940 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028976 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
000289A4 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
000289BE <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
000289DC <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028A5A <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028A84 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028AAA <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028ACA <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028AE8 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028B08 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028B30 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028B5A <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028B5C <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028B78 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028B9E <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028BB6 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028C14 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028C36 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028C5C <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00028C84 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028CA4 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028CC8 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028D0E <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028D32 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028D56 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00028D76 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00028D9A <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028DBC <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028DE8 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028E0E <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028E18 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028E3E <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00028E90 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028EFA <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028F58 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028FC6 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00029002 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029020 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00029046 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00029076 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
0002909A <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
000290C8 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
000290EC <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00029102 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00029118 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
0002911E <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00029126 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00029128 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
0002912C <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00029134 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029136 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029170 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
0002919C <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000291CC <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00029204 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
0002925E <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00029260 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00029264 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029268 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
0002926C <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029270 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00029274 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029278 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
0002927C <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00029280 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00029284 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00029288 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000292C6 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000292F8 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00029316 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00029340 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002935C <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029376 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00029394 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
000293B8 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
000293BA <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
0002940C <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00029434 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
0002945C <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00029478 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029498 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
000294B0 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
000294F4 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
0002953C <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029566 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029590 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
000295AA <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
000295D4 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029628 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029674 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
000296AC <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
000296B2 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
000296C0 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
000296F0 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00029724 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
0002978A <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
000297A8 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029822 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
0002984A <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029860 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029874 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029876 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00029877 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00029878 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029898 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
0002989E <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
000298B0 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
000298E4 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
000298FC <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029918 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029930 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029950 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029970 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029996 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
000299AC <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
000299C8 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
000299F2 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029A0A <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029A26 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00029A46 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029A5E <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029A62 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029A68 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029A6E <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029A83 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029A89 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00029A8A <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029A8E <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029A94 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00029A9A <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029AAD <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029AB3 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029AB4 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029AD2 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029AEA <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029B06 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029B30 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029B4A <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029B6A <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00029B88 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029BB6 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029BC0 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029BF2 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029C10 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029C2E <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029C4E <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00029C74 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029C9A <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029CC2 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029CE0 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029D00 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029D1A <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029D3C <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029D5A <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00029D7C <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029DA0 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00029DA6 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029DC2 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029DDE <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029DFC <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029E1A <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029E68 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00029E86 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00029EA4 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029EBE <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029F0A <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029F30 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029F50 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029F72 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029F8E <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029FB4 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029FD0 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029FEE <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A016 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A032 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A042 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A064 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002A068 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A06A <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
0002A084 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A0A8 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A0C8 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A0FA <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A158 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A190 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A1CE <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A204 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A236 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A25A <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A27E <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A2C8 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A2F0 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A33A <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
0002A37A <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
0002A37A <AmiBlitz3.ab3@11306> XINCLUDE "internal_errormsg.ab3"
0002A37C <AmiBlitz3.ab3@11310> ezerr:   Ds.w 1                                            ;for simple errors
0002A382 <AmiBlitz3.ab3@11316>    MOVE.l myline,d0
0002A386 <AmiBlitz3.ab3@11317>   BNE handle_compileerror__l2
0002A38C <AmiBlitz3.ab3@11319>     MOVE.l a5,lastsourcepos
0002A38E <AmiBlitz3.ab3@11321>     SUBA.l a5,a5
0002A394 <AmiBlitz3.ab3@11323>   TST.l usedfrom
0002A398 <AmiBlitz3.ab3@11324>   BEQ handle_compileerror__org
0002A39E <AmiBlitz3.ab3@11325>     MOVEA.l usedfrom,a5
0002A3A4 <AmiBlitz3.ab3@11328>   TST.w dirmode
0002A3A8 <AmiBlitz3.ab3@11329>   BNE.b handle_compileerror__quiet
0002A3AE <AmiBlitz3.ab3@11330>     JSR call_setpointernormal
0002A3B2 <AmiBlitz3.ab3@11331>     MOVE.w ezerr(PC),D0
0002A3B6 <AmiBlitz3.ab3@11332>     BNE.w handle_compileerror__skip
0002A3BC <AmiBlitz3.ab3@11333>       MOVE.w cfetchmode,D0
0002A3C0 <AmiBlitz3.ab3@11334>       BEQ.w handle_compileerror__skip2
0002A3CA <AmiBlitz3.ab3@11335>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A3D0 <AmiBlitz3.ab3@11338>   MOVE.w constmode,D0
0002A3D4 <AmiBlitz3.ab3@11339>   BEQ.b handle_compileerror__skip3
0002A3D8 <AmiBlitz3.ab3@11340>     BSR.w asmerr2
0002A3DE <AmiBlitz3.ab3@11343>   MOVE.l firstlocal,D1
0002A3E4 <AmiBlitz3.ab3@11344>   OR.l firstglob,D1
0002A3E8 <AmiBlitz3.ab3@11345>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0002A3EE <AmiBlitz3.ab3@11346> 
0002A3F2 <AmiBlitz3.ab3@11347>     BNE handle_compileerror__notproc                       ; yes skip
0002A3F8 <AmiBlitz3.ab3@11348>       JSR JL_0_DB5C                                        ; no free some data ????
0002A400 <AmiBlitz3.ab3@11351>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A40A <AmiBlitz3.ab3@11352>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A40E <AmiBlitz3.ab3@11353>   BEQ handle_compileerror__notproc_l1
0002A418 <AmiBlitz3.ab3@11354>     MOVE.l linenumat,compilelinecounter
0002A41E <AmiBlitz3.ab3@11357>   JSR close_compilewin
0002A420 <AmiBlitz3.ab3@11360>   MOVEA.l (A7)+,A0
0002A426 <AmiBlitz3.ab3@11361>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A42C <AmiBlitz3.ab3@11362>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A430 <AmiBlitz3.ab3@11363>   BLT 'lesserror
0002A436 <AmiBlitz3.ab3@11364>   LEA errorlimit_text,a0
0002A43C <AmiBlitz3.ab3@11367>   ADDQ.l #1,errorcounter
0002A442 <AmiBlitz3.ab3@11368>   JSR errorstringparse
0002A44C <AmiBlitz3.ab3@11369>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A450 <AmiBlitz3.ab3@11370>   BEQ handle_compileerror__skip_Lxx2
0002A456 <AmiBlitz3.ab3@11371>   TST.l CLIMode
0002A45A <AmiBlitz3.ab3@11372>   BNE 'climode_output
0002A460 <AmiBlitz3.ab3@11375>     JSR save_errorfile
0002A464 <AmiBlitz3.ab3@11376>     BRA 'end_output
0002A46A <AmiBlitz3.ab3@11379>     JSR stdout_error
0002A470 <AmiBlitz3.ab3@11381>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A476 <AmiBlitz3.ab3@11382>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A47A <AmiBlitz3.ab3@11383>      BGT 'end_output
0002A480 <AmiBlitz3.ab3@11384>     MOVE.l lastsourcepos,a5
0002A482 <AmiBlitz3.ab3@11386>  'loop TST.b (a5)
0002A486 <AmiBlitz3.ab3@11387>       BEQ 'ok2
0002A488 <AmiBlitz3.ab3@11388>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A48C <AmiBlitz3.ab3@11389>     BEQ 'ok
0002A490 <AmiBlitz3.ab3@11390>     CMP.b #":",d0
0002A494 <AmiBlitz3.ab3@11391>     BEQ 'ok
0002A498 <AmiBlitz3.ab3@11392>     BRA 'loop
0002A49A <AmiBlitz3.ab3@11394>  'ok SUBQ.l #1,a5
0002A4A2 <AmiBlitz3.ab3@11396>  'ok2 MOVE.w #0,lastchar
0002A4AA <AmiBlitz3.ab3@11397>     MOVE.b #1,iserror
0002A4B0 <AmiBlitz3.ab3@11398>     MOVE.l stackaddr,a7
0002A4B2 <AmiBlitz3.ab3@11399>     RTS
0002A4B4 <AmiBlitz3.ab3@11405>   MOVE.l A0,-(a7)
0002A4F2 <AmiBlitz3.ab3@11406>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A4F4 <AmiBlitz3.ab3@11407>   MOVE.l (a7)+,A0
0002A4F8 <AmiBlitz3.ab3@11409>   MOVEM.l d6/D7/A6,-(A7)
0002A4FE <AmiBlitz3.ab3@11410>   MOVE.l includeline,d7
0002A504 <AmiBlitz3.ab3@11411>   MOVE.l #"INLN",a6
0002A50E <AmiBlitz3.ab3@11412>   MOVE.l errstack,tempa7
0002A510 <AmiBlitz3.ab3@11413>   JSR (A1)                                                  ;open ped errorrequest
0002A514 <AmiBlitz3.ab3@11415>   MOVEM.l (A7)+,D7/d6/A6
0002A51A <AmiBlitz3.ab3@11418>   MOVE.l tempa7,a7
0002A520 <AmiBlitz3.ab3@11419>   MOVEA.l errcont,A0
0002A522 <AmiBlitz3.ab3@11421> RTS
0002A528 <AmiBlitz3.ab3@11424>   MOVEA.l errstack,A7
0002A52E <AmiBlitz3.ab3@11425>   MOVEA.l errcont,A0
0002A530 <AmiBlitz3.ab3@11427> RTS
0002A532 <AmiBlitz3.ab3@11430>   MOVE.l (A7),D0
0002A538 <AmiBlitz3.ab3@11431>   MOVEA.l errstack,A7
0002A53E <AmiBlitz3.ab3@11432>   MOVEA.l errcont,A0
0002A540 <AmiBlitz3.ab3@11433> JMP (A0)
0002A544 <AmiBlitz3.ab3@11439>   CMP.w #$7A,D0                                            ;'z'
0002A548 <AmiBlitz3.ab3@11440>    BHI.w tstalpha__no
0002A54C <AmiBlitz3.ab3@11441>   CMP.w #$41,D0                                            ;'A'
0002A550 <AmiBlitz3.ab3@11442>    BCS.w tstalpha__no
0002A554 <AmiBlitz3.ab3@11443>   CMP.w #$61,D0                                            ;'a'
0002A558 <AmiBlitz3.ab3@11444>    BCC.w tstalpha__yes
0002A55C <AmiBlitz3.ab3@11445>   CMP.w #$5A,D0                                            ;'Z'
0002A560 <AmiBlitz3.ab3@11446>    BHI.w tstalpha__no
0002A562 <AmiBlitz3.ab3@11449>   CMP.w D0,D0
0002A564 <AmiBlitz3.ab3@11452> RTS
0002A568 <AmiBlitz3.ab3@11460>   CMP.w #$30,D0                                            ;'0'
0002A56C <AmiBlitz3.ab3@11461>    BCS.w tstnum__skip
0002A570 <AmiBlitz3.ab3@11462>   CMP.w #$39,D0                                            ;'9'
0002A574 <AmiBlitz3.ab3@11463>    BHI.w tstnum__skip                                     
0002A576 <AmiBlitz3.ab3@11464>   CMP.w D0,D0
0002A578 <AmiBlitz3.ab3@11467> RTS
0002A59A <AmiBlitz3.ab3@11473>   !compare1                                                ;bsr.w tstalpha
0002A59E <AmiBlitz3.ab3@11474>    BEQ.w tstlab__skip
0002A5B0 <AmiBlitz3.ab3@11475>   !compare2                                                ;bsr.w tstnum2
0002A5B4 <AmiBlitz3.ab3@11476>    BEQ.w tstlab__skip
0002A5B8 <AmiBlitz3.ab3@11477>   CMP.w #$5F,D0                                            ;'_'
0002A5BC <AmiBlitz3.ab3@11478>    BEQ.w tstlab__skip
0002A5C0 <AmiBlitz3.ab3@11479>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A5C2 <AmiBlitz3.ab3@11482> RTS
0002A5CC <AmiBlitz3.ab3@11487>   MOVE.w oldqflag,instringon
0002A5D2 <AmiBlitz3.ab3@11488>   MOVEA.l lastsourcepos,A5
0002A5D8 <AmiBlitz3.ab3@11491>   MOVE.l a5,beforeparameterfetch
0002A5DE <AmiBlitz3.ab3@11492>   LEA ptr_parameterstore,A1
0002A5E0 <AmiBlitz3.ab3@11495>   MOVEQ.l #$00,D2
0002A5E6 <AmiBlitz3.ab3@11498>   LEA chartab,a0
0002A5E8 <AmiBlitz3.ab3@11499>   MOVEQ #0,d0
0002A5EE <AmiBlitz3.ab3@11500>   MOVE.l A5,lastsourcepos
0002A5F8 <AmiBlitz3.ab3@11501>   MOVE.w instringon,oldqflag
0002A5FA <AmiBlitz3.ab3@11504>     MOVE.b (a5)+,d0
0002A5FE <AmiBlitz3.ab3@11505>   CMP.b #$20,d0                                            ;space deftype
0002A602 <AmiBlitz3.ab3@11506>   BEQ makename4__retry
0002A608 <AmiBlitz3.ab3@11508>   MOVE.w d0,lastchar
0002A60C <AmiBlitz3.ab3@11509>   TST.b 0(a0,d0.w)
0002A610 <AmiBlitz3.ab3@11510>   BNE makename__done
0002A612 <AmiBlitz3.ab3@11519>   MOVE.b D0,(A1)+
0002A614 <AmiBlitz3.ab3@11520>   ADDQ.l #1,D2
0002A61A <AmiBlitz3.ab3@11521>   MOVE.l A5,lastsourcepos
0002A61C <AmiBlitz3.ab3@11524>   MOVE.b (a5)+,d0
0002A622 <AmiBlitz3.ab3@11525>   MOVE.b d0,lastchar+1
0002A626 <AmiBlitz3.ab3@11526>   CMP.b #$20,d0
0002A62A <AmiBlitz3.ab3@11527>   BEQ makename__loop_l20
0002A62E <AmiBlitz3.ab3@11529>   TST.b 0(a0,d0)
0002A632 <AmiBlitz3.ab3@11530>   BEQ makename__loop
0002A636 <AmiBlitz3.ab3@11531>   CMP.b #2,d0
0002A63A <AmiBlitz3.ab3@11532>   BNE makename__loop_lf1
0002A640 <AmiBlitz3.ab3@11533>   MOVEA.l usedfrom,A5
0002A646 <AmiBlitz3.ab3@11534>   CLR.l usedfrom
0002A64A <AmiBlitz3.ab3@11535> BRA makename__loop_ln1
0002A64E <AmiBlitz3.ab3@11538>   CMP.b #1,d0
0002A652 <AmiBlitz3.ab3@11539>   BNE makename__loop_l20
0002A656 <AmiBlitz3.ab3@11540>   MOVEA.l cmakea5(PC),A5
0002A65A <AmiBlitz3.ab3@11541> BRA makename__loop_ln1
0002A65E <AmiBlitz3.ab3@11544>   CMP.b #$7e,d0
0002A662 <AmiBlitz3.ab3@11545>             BNE makename__loop_lt
0002A668 <AmiBlitz3.ab3@11546>             TST.w cmake
0002A66C <AmiBlitz3.ab3@11547>             BNE.w makename__loop_a1
0002A66E <AmiBlitz3.ab3@11548>             SUBQ.l #1,a5
0002A672 <AmiBlitz3.ab3@11549>             BSR.w get1bytemain
0002A676 <AmiBlitz3.ab3@11550> BRA makename__loop
0002A67A <AmiBlitz3.ab3@11554> BRA makename__loop_gpex
0002A67E <AmiBlitz3.ab3@11558>   BSR.w getchar
0002A6A0 <AmiBlitz3.ab3@11559>    !compare1                                               ;bsr.w tstalpha
0002A6A4 <AmiBlitz3.ab3@11560>    BEQ.w makename__loop_getp1
0002A6B6 <AmiBlitz3.ab3@11561>    !compare2                                               ;bsr.w tstnum
0002A6BA <AmiBlitz3.ab3@11562>    BEQ.w makename__loop_getp1
0002A6BE <AmiBlitz3.ab3@11563>   CMP.w #$5F,D0                                            ;'_'
0002A6C2 <AmiBlitz3.ab3@11564>    BEQ.w makename__loop_getp1
0002A6C6 <AmiBlitz3.ab3@11565>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A6CA <AmiBlitz3.ab3@11569>       BNE makename__loop_gpex
0002A6CE <AmiBlitz3.ab3@11570>       CMP.b #$20,d0
0002A6D2 <AmiBlitz3.ab3@11571>       BNE.w makename__loop
0002A6D4 <AmiBlitz3.ab3@11574>      TST.b d0
0002A6D8 <AmiBlitz3.ab3@11575>      BPL makename__loop_l10
0002A6DA <AmiBlitz3.ab3@11576>      SUBQ.l #1,a5
0002A6DE <AmiBlitz3.ab3@11577>      BSR get1byte_
0002A6E2 <AmiBlitz3.ab3@11580>    CMP.w #$20,D0
0002A6E6 <AmiBlitz3.ab3@11581>    BNE.w makename__done
0002A6E8 <AmiBlitz3.ab3@11582>    MOVEQ #0,d0
0002A6EE <AmiBlitz3.ab3@11583>   MOVE.l a5,lastsourcepos
0002A6F0 <AmiBlitz3.ab3@11586>   MOVE.b (a5)+,d0                                          ;neuneu
0002A6F4 <AmiBlitz3.ab3@11587>   BPL makename__loop_l101:
0002A6F6 <AmiBlitz3.ab3@11588>   ASL.w #8,d0
0002A6F8 <AmiBlitz3.ab3@11589>   MOVE.b (a5)+,d0
0002A6FE <AmiBlitz3.ab3@11592>   TST.w instringon
0002A702 <AmiBlitz3.ab3@11593>   BNE makename__loop_l102
0002A706 <AmiBlitz3.ab3@11594>   CMP.b #$20,d0
0002A70A <AmiBlitz3.ab3@11595>   BEQ makename__loop_l103
0002A70E <AmiBlitz3.ab3@11596>   CMP.b #";",d0
0002A712 <AmiBlitz3.ab3@11597>   BNE makename__loop_l102
0002A714 <AmiBlitz3.ab3@11600>   MOVE.b (A5)+,D0
0002A718 <AmiBlitz3.ab3@11601>              BEQ makename__loop_l1
0002A71C <AmiBlitz3.ab3@11602>              CMP.b #":",d0
0002A720 <AmiBlitz3.ab3@11603>              BNE makename__loop_lr                         ;:@
0002A724 <AmiBlitz3.ab3@11604>              CMP.b #"@",(a5)
0002A728 <AmiBlitz3.ab3@11605>              BNE makename__loop_lr
0002A72A <AmiBlitz3.ab3@11606>              ADDQ #1,a5
0002A730 <AmiBlitz3.ab3@11610>   MOVE.w d0,lastchar
0002A734 <AmiBlitz3.ab3@11614>   CMP.b #";",d0
0002A738 <AmiBlitz3.ab3@11615>   BEQ makename__done_l11
0002A73A <AmiBlitz3.ab3@11616>   CLR.b (A1)
0002A73C <AmiBlitz3.ab3@11618>   TST.w D2
0002A73E <AmiBlitz3.ab3@11619> RTS
0002A740 <AmiBlitz3.ab3@11622>   CLR.b (a1)
0002A742 <AmiBlitz3.ab3@11623>   MOVEQ #0,d0
0002A748 <AmiBlitz3.ab3@11624>   MOVE.w d0,lastchar
0002A74A <AmiBlitz3.ab3@11626>   TST.w D2
0002A74C <AmiBlitz3.ab3@11627> RTS
0002A74E <AmiBlitz3.ab3@11633>   MOVE.l (A2),D0
0002A752 <AmiBlitz3.ab3@11636>   BEQ.w findlast__here
0002A754 <AmiBlitz3.ab3@11637>   MOVEA.l D0,A2
0002A758 <AmiBlitz3.ab3@11638> BRA.w findlast__loop
0002A75C <AmiBlitz3.ab3@11641> BRA.w reget
0002A75E <AmiBlitz3.ab3@11647>   MOVE.l (A2),-(A7)
0002A762 <AmiBlitz3.ab3@11648>   BSR.w addlabel
0002A764 <AmiBlitz3.ab3@11649>   MOVE.l (A7)+,(A2)
0002A766 <AmiBlitz3.ab3@11650> RTS
0002A76C <AmiBlitz3.ab3@11655>   CLR.l fp0addr
0002A772 <AmiBlitz3.ab3@11656>   TST.w dirmode
0002A776 <AmiBlitz3.ab3@11657>    BNE.w illdirerr
0002A778 <AmiBlitz3.ab3@11658>   MOVEQ.l #$00,D0
0002A77A <AmiBlitz3.ab3@11659>   MOVE.w D7,D0
0002A77C <AmiBlitz3.ab3@11660>   ADD.w D2,D0
0002A77E <AmiBlitz3.ab3@11661>   ADDQ.w #1,D0
0002A780 <AmiBlitz3.ab3@11662>   MOVE.w D0,D2
0002A782 <AmiBlitz3.ab3@11663>   ADDQ.l #2,d0
0002A784 <AmiBlitz3.ab3@11664>   MOVEQ.l #$01,D1
0002A78A <AmiBlitz3.ab3@11665>   MOVEA.l _execbase,A6
0002A790 <AmiBlitz3.ab3@11666>   MOVE.l mempool2,a0
0002A794 <AmiBlitz3.ab3@11667>   JSR _AllocPooled(a6)
0002A79A <AmiBlitz3.ab3@11669>   MOVE.l lastlabel,a2
0002A79C <AmiBlitz3.ab3@11670>   MOVE.l D0,(A2)
0002A79E <AmiBlitz3.ab3@11671>   MOVE.l d0,a0
0002A7A0 <AmiBlitz3.ab3@11672>   CLR.l (a0)
0002A7A6 <AmiBlitz3.ab3@11673>   MOVE.l a0,lastlabel
0002A7A8 <AmiBlitz3.ab3@11674>   MOVE.l d0,A2
0002A7AC <AmiBlitz3.ab3@11675>   LEA -$1(A0,D7.W),A0
0002A7AE <AmiBlitz3.ab3@11676>   MOVE.b D2,(A0)+
0002A7B4 <AmiBlitz3.ab3@11677>   LEA ptr_parameterstore,A1
0002A7B6 <AmiBlitz3.ab3@11678>   MOVEQ #0,d0
0002A7B8 <AmiBlitz3.ab3@11679>   MOVEQ #0,d1
0002A7BA <AmiBlitz3.ab3@11682>   MOVE.b (A1)+,d1
0002A7BE <AmiBlitz3.ab3@11683>    BEQ 'l1
0002A7C4 <AmiBlitz3.ab3@11684>    !hashalgo
0002A7C6 <AmiBlitz3.ab3@11685>    MOVE.b d1,(A0)+
0002A7CA <AmiBlitz3.ab3@11686> BRA addlabel_loop2a
0002A7CC <AmiBlitz3.ab3@11689>    CLR.b (a0)+
0002A7D2 <AmiBlitz3.ab3@11690>    LEA labelhash,a0
0002A7D8 <AmiBlitz3.ab3@11691>    AND.l #hashsize,d0
0002A7DA <AmiBlitz3.ab3@11692>    ASL.l #2,d0
0002A7DE <AmiBlitz3.ab3@11693>    MOVE.l 0(a0,d0),d1
0002A7E2 <AmiBlitz3.ab3@11694>    MOVE.l d1,$c(a2)
0002A7E6 <AmiBlitz3.ab3@11695>    MOVE.l a2,0(a0,d0)
0002A7E8 <AmiBlitz3.ab3@11696>    MOVEQ #0,d0
0002A7EC <AmiBlitz3.ab3@11697> BRA.w reget
0002A7F2 <AmiBlitz3.ab3@11701>    TST.b newvariable
0002A7F6 <AmiBlitz3.ab3@11702>    BNE addlabel
0002A7FC <AmiBlitz3.ab3@11705>   TST.w dirmode
0002A800 <AmiBlitz3.ab3@11706>    BNE.w illdirerr
0002A802 <AmiBlitz3.ab3@11707>   MOVEQ.l #$00,D0
0002A804 <AmiBlitz3.ab3@11708>   MOVE.w D7,D0
0002A806 <AmiBlitz3.ab3@11709>   ADD.w D2,D0
0002A808 <AmiBlitz3.ab3@11710>   ADDQ.w #1,D0
0002A80A <AmiBlitz3.ab3@11711>   MOVE.w D0,D2
0002A80C <AmiBlitz3.ab3@11712>   MOVEQ.l #$01,D1
0002A812 <AmiBlitz3.ab3@11713>   MOVEA.l _execbase,A6
0002A818 <AmiBlitz3.ab3@11714>   MOVE.l mempool2,a0
0002A81C <AmiBlitz3.ab3@11715>   JSR _AllocPooled(a6)
0002A81E <AmiBlitz3.ab3@11716>   MOVEA.l D0,A0
0002A824 <AmiBlitz3.ab3@11718>   LEA varbase,a2
0002A826 <AmiBlitz3.ab3@11719>   MOVE.l (a2),(a0)
0002A828 <AmiBlitz3.ab3@11720>   MOVE.l A0,(A2)
0002A82A <AmiBlitz3.ab3@11721>   MOVEA.l A0,A2
0002A82E <AmiBlitz3.ab3@11722>   LEA -$1(A0,D7.W),A0
0002A830 <AmiBlitz3.ab3@11723>   MOVE.b D2,(A0)+
0002A836 <AmiBlitz3.ab3@11724>   LEA ptr_parameterstore,A1
0002A838 <AmiBlitz3.ab3@11725>   MOVEQ #0,d0
0002A83A <AmiBlitz3.ab3@11726>   MOVEQ #0,d1
0002A83C <AmiBlitz3.ab3@11729>   MOVE.b (A1)+,d1
0002A840 <AmiBlitz3.ab3@11730>    BEQ 'l12
0002A846 <AmiBlitz3.ab3@11731>    !hashalgo
0002A848 <AmiBlitz3.ab3@11732>    MOVE.b d1,(A0)+
0002A84C <AmiBlitz3.ab3@11733> BRA 'l11
0002A84E <AmiBlitz3.ab3@11736>   CLR.b (a0)+
0002A854 <AmiBlitz3.ab3@11737>   LEA variablehash,a0
0002A85A <AmiBlitz3.ab3@11738>    AND.l #hashsize,d0
0002A85C <AmiBlitz3.ab3@11739>    ASL.l #2,d0
0002A860 <AmiBlitz3.ab3@11740>    MOVE.l 0(a0,d0),d1
0002A864 <AmiBlitz3.ab3@11741>    MOVE.l d1,$e(a2)
0002A868 <AmiBlitz3.ab3@11742>    MOVE.l a2,0(a0,d0)
0002A86A <AmiBlitz3.ab3@11743>    MOVEQ #0,d0
0002A86E <AmiBlitz3.ab3@11744> BRA.w reget
0002A874 <AmiBlitz3.ab3@11748>   TST.w dirmode
0002A878 <AmiBlitz3.ab3@11749>    BNE.w illdirerr
0002A87A <AmiBlitz3.ab3@11756>   MOVEQ.l #$00,D0
0002A87C <AmiBlitz3.ab3@11757>   MOVE.w D7,D0
0002A87E <AmiBlitz3.ab3@11758>   ADD.w D2,D0
0002A880 <AmiBlitz3.ab3@11759>   ADDQ.w #1,D0
0002A882 <AmiBlitz3.ab3@11760>   MOVE.w D0,D2
0002A884 <AmiBlitz3.ab3@11761>   MOVEQ.l #$01,D1
0002A88A <AmiBlitz3.ab3@11762>   MOVEA.l _execbase,A6
0002A890 <AmiBlitz3.ab3@11763>   MOVE.l mempool2,a0
0002A894 <AmiBlitz3.ab3@11764>   JSR _AllocPooled(a6)
0002A896 <AmiBlitz3.ab3@11766>   MOVEA.l D0,A0
0002A898 <AmiBlitz3.ab3@11767>   MOVE.l A0,(A2)
0002A89A <AmiBlitz3.ab3@11768>   CLR.l (a0)
0002A89E <AmiBlitz3.ab3@11769>   CLR.l 8(a0)                                              ;clear next
0002A8A0 <AmiBlitz3.ab3@11770>   MOVEA.l A0,A2
0002A8A4 <AmiBlitz3.ab3@11771>   LEA -$1(A0,D7.W),A0
0002A8A6 <AmiBlitz3.ab3@11772>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A8AC <AmiBlitz3.ab3@11773>   LEA ptr_parameterstore,A1
0002A8AE <AmiBlitz3.ab3@11774>   MOVEQ #0,d0
0002A8B0 <AmiBlitz3.ab3@11775>   MOVEQ #0,d1
0002A8B2 <AmiBlitz3.ab3@11778>   MOVE.b (A1)+,d1
0002A8B4 <AmiBlitz3.ab3@11781>   MOVE.b d1,(A0)+
0002A8B8 <AmiBlitz3.ab3@11782>   BNE.w addlabel_loop2
0002A8BC <AmiBlitz3.ab3@11783> BRA.w reget
0002A8BE <AmiBlitz3.ab3@11787>   MOVEQ.l #$13,D7
0002A8C4 <AmiBlitz3.ab3@11788>   LEA constantbase,A2
0002A8C8 <AmiBlitz3.ab3@11789> BRA.w findlab
0002A8CA <AmiBlitz3.ab3@11793>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A8D0 <AmiBlitz3.ab3@11794>   LEA xinclude_base,A2
0002A8D4 <AmiBlitz3.ab3@11795> BRA.w findlab
0002A8D6 <AmiBlitz3.ab3@11799>   MOVEQ.l #$09,D7
0002A8DC <AmiBlitz3.ab3@11800>   LEA firstconst,A2
0002A8E0 <AmiBlitz3.ab3@11801> BRA.w findlab
0002A8E2 <AmiBlitz3.ab3@11805>   MOVEQ.l #$0d,D7                                          ;find macro
0002A8E8 <AmiBlitz3.ab3@11806>   LEA macrobase,A2
0002A8EC <AmiBlitz3.ab3@11807> BRA.w findlab
0002A8F2 <AmiBlitz3.ab3@11811>   LEA labelhash,A2
0002A8F4 <AmiBlitz3.ab3@11812>   MOVEQ.l #$13,D7
0002A8F6 <AmiBlitz3.ab3@11813>   EXT.l d2
0002A8FC <AmiBlitz3.ab3@11814>   LEA ptr_parameterstore,A0
0002A8FE <AmiBlitz3.ab3@11815>   MOVEQ #0,d0
0002A900 <AmiBlitz3.ab3@11816>   MOVEQ #0,d1
0002A902 <AmiBlitz3.ab3@11819>     MOVE.b (a0)+,d1
0002A906 <AmiBlitz3.ab3@11820>     BEQ 'l15
0002A90C <AmiBlitz3.ab3@11821>     !hashalgo
0002A910 <AmiBlitz3.ab3@11822> BRA 'l20
0002A916 <AmiBlitz3.ab3@11825>   AND.l #hashsize,d0
0002A918 <AmiBlitz3.ab3@11826>   ASL.l #2,d0
0002A91C <AmiBlitz3.ab3@11827>   MOVE.l 0(a2,d0),d0
0002A920 <AmiBlitz3.ab3@11828> BRA 'l11
0002A924 <AmiBlitz3.ab3@11831>   MOVE.l $c(A2),D0                                         ;find label
0002A928 <AmiBlitz3.ab3@11834>   BEQ findlab__no
0002A92A <AmiBlitz3.ab3@11835>   MOVEA.l D0,A2
0002A92C <AmiBlitz3.ab3@11836>   MOVEQ.l #$00,D0
0002A930 <AmiBlitz3.ab3@11837>   MOVE.b -$1(A2,D7.l),D0
0002A936 <AmiBlitz3.ab3@11838>   LEA ptr_parameterstore,A0
0002A938 <AmiBlitz3.ab3@11839>   SUB.l D7,D0
0002A93A <AmiBlitz3.ab3@11840>   SUBQ.l #1,D0
0002A93C <AmiBlitz3.ab3@11841>   CMP.l D0,D2
0002A940 <AmiBlitz3.ab3@11842>    BNE.b 'l10
0002A944 <AmiBlitz3.ab3@11843>   LEA $0(A2,D7.W),A1
0002A946 <AmiBlitz3.ab3@11844>   SUBQ.l #1,D0
0002A948 <AmiBlitz3.ab3@11847>     MOVE.b (a1)+,d1
0002A94A <AmiBlitz3.ab3@11848>     CMP.b (a0)+,d1
0002A94E <AmiBlitz3.ab3@11850>     BNE.b 'l10
0002A952 <AmiBlitz3.ab3@11851>   DBF D0,'l201
0002A956 <AmiBlitz3.ab3@11853>   BSR.w reget
0002A958 <AmiBlitz3.ab3@11854>   CMP.w D0,D0
0002A95A <AmiBlitz3.ab3@11855> RTS
0002A95C <AmiBlitz3.ab3@11859>   MOVEQ.l #$0B,D7
0002A960 <AmiBlitz3.ab3@11860> BRA.w findlab
0002A966 <AmiBlitz3.ab3@11864>   LEA firstproc,A2
0002A96C <AmiBlitz3.ab3@11865>   MOVE.l #$21+#funcentry_extend,D7
0002A970 <AmiBlitz3.ab3@11866> BRA findlab
0002A976 <AmiBlitz3.ab3@11870>   LEA firstfor,A2
0002A978 <AmiBlitz3.ab3@11871>   MOVEQ.l #$11,D7
0002A97C <AmiBlitz3.ab3@11872> BRA.w findlab
0002A97E <AmiBlitz3.ab3@11876>   MOVEQ.l #$0F,D7
0002A982 <AmiBlitz3.ab3@11877> BRA.w findlab
0002A984 <AmiBlitz3.ab3@11881>   MOVEQ.l #$0F+4,D7
0002A98A <AmiBlitz3.ab3@11882>   TST.b newvariable
0002A98E <AmiBlitz3.ab3@11883>    BNE.w findlab
0002A994 <AmiBlitz3.ab3@11884>   LEA variablehash,A2
0002A99A <AmiBlitz3.ab3@11885>   LEA ptr_parameterstore,A0
0002A99C <AmiBlitz3.ab3@11886>   MOVEQ #0,d0
0002A99E <AmiBlitz3.ab3@11887>   MOVEQ #0,d1
0002A9A0 <AmiBlitz3.ab3@11890>     MOVE.b (a0)+,d1
0002A9A4 <AmiBlitz3.ab3@11891>     BEQ 'l15
0002A9AA <AmiBlitz3.ab3@11892>     !hashalgo
0002A9AE <AmiBlitz3.ab3@11893> BRA 'l20
0002A9B4 <AmiBlitz3.ab3@11896>   AND.l #hashsize,d0
0002A9B6 <AmiBlitz3.ab3@11897>   ASL.l #2,d0
0002A9BA <AmiBlitz3.ab3@11898>   MOVE.l 0(a2,d0),d0
0002A9BE <AmiBlitz3.ab3@11899> BRA 'l11
0002A9C2 <AmiBlitz3.ab3@11902>   MOVE.l $e(A2),D0                                         ;find label
0002A9C6 <AmiBlitz3.ab3@11905>   BEQ findlab__no
0002A9C8 <AmiBlitz3.ab3@11906>   MOVEA.l D0,A2
0002A9CA <AmiBlitz3.ab3@11907>   MOVEQ.l #$00,D0
0002A9CE <AmiBlitz3.ab3@11908>   MOVE.b -$1(A2,D7.W),D0
0002A9D4 <AmiBlitz3.ab3@11909>   LEA ptr_parameterstore,A0
0002A9D6 <AmiBlitz3.ab3@11910>   SUB.w D7,D0
0002A9D8 <AmiBlitz3.ab3@11911>   SUBQ.l #1,D0
0002A9DA <AmiBlitz3.ab3@11912>   CMP.w D0,D2
0002A9DE <AmiBlitz3.ab3@11913>    BNE.b 'l10
0002A9E2 <AmiBlitz3.ab3@11914>   LEA $0(A2,D7.W),A1
0002A9E4 <AmiBlitz3.ab3@11915>   SUBQ.l #1,D0
0002A9E6 <AmiBlitz3.ab3@11918>     MOVE.b (a1)+,d1
0002A9E8 <AmiBlitz3.ab3@11919>     CMP.b (a0)+,d1
0002A9EC <AmiBlitz3.ab3@11921>     BNE.b 'l10
0002A9F0 <AmiBlitz3.ab3@11922>   DBF D0,'l201
0002A9F4 <AmiBlitz3.ab3@11924>   BSR.w reget
0002A9F6 <AmiBlitz3.ab3@11925>   CMP.w D0,D0
0002A9F8 <AmiBlitz3.ab3@11926> RTS
0002A9FA <AmiBlitz3.ab3@11939>     MOVE.l (A2),D0                                         ;find label
0002A9FE <AmiBlitz3.ab3@11940>      BEQ.b findlab__no
0002AA00 <AmiBlitz3.ab3@11941>     MOVEA.l D0,A2
0002AA02 <AmiBlitz3.ab3@11942>     MOVEQ.l #$00,D0
0002AA06 <AmiBlitz3.ab3@11943>     MOVE.b -$1(A2,D7.W),D0
0002AA08 <AmiBlitz3.ab3@11944>     SUB.l D7,D0
0002AA0A <AmiBlitz3.ab3@11945>     SUBQ.l #1,D0
0002AA0C <AmiBlitz3.ab3@11946>   CMP.w D0,D2
0002AA10 <AmiBlitz3.ab3@11947>   BNE.b findlab__loop
0002AA14 <AmiBlitz3.ab3@11949>   LEA $0(A2,D7.W),A1
0002AA1A <AmiBlitz3.ab3@11950>   LEA ptr_parameterstore,A0
0002AA1C <AmiBlitz3.ab3@11951>   SUBQ.l #1,D0
0002AA1E <AmiBlitz3.ab3@11954>     MOVE.b (a1)+,d1
0002AA20 <AmiBlitz3.ab3@11955>     CMP.b (a0)+,d1
0002AA24 <AmiBlitz3.ab3@11957>     BNE.b findlab__loop
0002AA28 <AmiBlitz3.ab3@11958>   DBF D0,findlab__loop2
0002AA2C <AmiBlitz3.ab3@11960>   BSR.w reget
0002AA2E <AmiBlitz3.ab3@11961>   CMP.w D0,D0
0002AA30 <AmiBlitz3.ab3@11962> RTS
0002AA34 <AmiBlitz3.ab3@11965>   BSR.w reget
0002AA36 <AmiBlitz3.ab3@11966>   MOVEQ.l #-$01,D1
0002AA38 <AmiBlitz3.ab3@11967> RTS
0002AA3E <AmiBlitz3.ab3@11971>   MOVEA.l alllocals,A4
0002AA44 <AmiBlitz3.ab3@11972>   CLR.l alllocals
0002AA48 <AmiBlitz3.ab3@11976>     CMPA.w #$0,A4
0002AA4C <AmiBlitz3.ab3@11977>      BEQ.b freeprocvs__done
0002AA50 <AmiBlitz3.ab3@11978>     MOVEA.l $4(A4),A3
0002AA54 <AmiBlitz3.ab3@11980>     MOVEA.l $8(A4),A3
0002AA56 <AmiBlitz3.ab3@11982>     MOVEA.l A4,A1
0002AA58 <AmiBlitz3.ab3@11983>     MOVEA.l (A4),A4
0002AA5A <AmiBlitz3.ab3@11984>     MOVEQ.l #$0C,D0
0002AA60 <AmiBlitz3.ab3@11985>     MOVEA.l _execbase,A6
0002AA66 <AmiBlitz3.ab3@11986>     MOVE.l mempool,a0
0002AA6A <AmiBlitz3.ab3@11987>     JSR _FreePooled(A6)
0002AA6E <AmiBlitz3.ab3@11988> BRA.b freeprocvs__loop
0002AA74 <AmiBlitz3.ab3@11991>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AA7A <AmiBlitz3.ab3@11992>   CLR.l firstlocal
0002AA80 <AmiBlitz3.ab3@11993>   CLR.l sharebase
0002AA86 <AmiBlitz3.ab3@11994>   TST.l mempool2
0002AA8A <AmiBlitz3.ab3@11995>   BEQ freeprocvs__done_l10
0002AA90 <AmiBlitz3.ab3@11997>   MOVEA.l _execbase,A6
0002AA96 <AmiBlitz3.ab3@11998>   MOVE.l mempool2,a0
0002AA9C <AmiBlitz3.ab3@11999>   CLR.l mempool2
0002AAA0 <AmiBlitz3.ab3@12000>   JSR _DeletePool(a6)
0002AAA6 <AmiBlitz3.ab3@12003>   MOVE.l _execbase,a6
0002AAAC <AmiBlitz3.ab3@12004>   MOVE.l #$10000,d0
0002AAB2 <AmiBlitz3.ab3@12005>   MOVE.l #80000,d1
0002AAB4 <AmiBlitz3.ab3@12006>   MOVE.l d1,d2
0002AAB8 <AmiBlitz3.ab3@12007>   JSR _CreatePool(a6)
0002AABE <AmiBlitz3.ab3@12008>   MOVE.l d0,mempool2
0002AAC0 <AmiBlitz3.ab3@12009> RTS
0002AAC4 <AmiBlitz3.ab3@12013>   CMPA.w #$0,A3
0002AAC8 <AmiBlitz3.ab3@12014>    BEQ.w freevars__done
0002AACA <AmiBlitz3.ab3@12015>   MOVEA.l A3,A1
0002AACC <AmiBlitz3.ab3@12016>   MOVEA.l (A3),A3
0002AACE <AmiBlitz3.ab3@12017>   MOVEQ.l #$00,D0
0002AAD2 <AmiBlitz3.ab3@12018>   MOVE.b $E(A1),D0
0002AAD8 <AmiBlitz3.ab3@12019>   MOVEA.l _execbase,A6
0002AADE <AmiBlitz3.ab3@12020>   MOVE.l mempool2,a0
0002AAE2 <AmiBlitz3.ab3@12021>   JSR _FreePooled(A6)
0002AAE6 <AmiBlitz3.ab3@12022> BRA.w freevars
0002AAEA <AmiBlitz3.ab3@12025>     CMPA.w #$0,A3
0002AAEE <AmiBlitz3.ab3@12026>      BEQ.w freevars__done
0002AAF0 <AmiBlitz3.ab3@12027>     MOVEA.l A3,A1
0002AAF2 <AmiBlitz3.ab3@12028>     MOVEA.l (A3),A3
0002AAF4 <AmiBlitz3.ab3@12029>     MOVEQ.l #$00,D0
0002AAF8 <AmiBlitz3.ab3@12030>     MOVE.b $E+4(A1),D0
0002AAFE <AmiBlitz3.ab3@12031>     MOVEA.l _execbase,A6
0002AB04 <AmiBlitz3.ab3@12032>     MOVE.l mempool2,a0
0002AB08 <AmiBlitz3.ab3@12033>     JSR _FreePooled(A6)
0002AB0C <AmiBlitz3.ab3@12034> BRA.w freevarsb
0002AB0E <AmiBlitz3.ab3@12037> RTS
0002AB14 <AmiBlitz3.ab3@12041>   MOVEA.l currentlabeladdr,A0
0002AB1A <AmiBlitz3.ab3@12042>   MOVE.l a0,lastlabel
0002AB1C <AmiBlitz3.ab3@12043>   MOVEA.l (A0),A2
0002AB1E <AmiBlitz3.ab3@12044>   CLR.l (A0)
0002AB24 <AmiBlitz3.ab3@12045>   MOVEA.l _execbase,A6
0002AB28 <AmiBlitz3.ab3@12048>   CMPA.w #$0,A2
0002AB2C <AmiBlitz3.ab3@12049>    BEQ.w clearlabels__done
0002AB30 <AmiBlitz3.ab3@12050>   MOVE.l $4(A2),D0
0002AB34 <AmiBlitz3.ab3@12051>   BTST #$0,D0
0002AB38 <AmiBlitz3.ab3@12052>    BNE.w clearlabels__skip
0002AB3A <AmiBlitz3.ab3@12053>   MOVEA.l D0,A3
0002AB3E <AmiBlitz3.ab3@12056>     CMPA.w #$0,A3
0002AB42 <AmiBlitz3.ab3@12057>      BEQ.w clearlabels__skip
0002AB44 <AmiBlitz3.ab3@12058>     MOVEA.l A3,A1
0002AB46 <AmiBlitz3.ab3@12059>     MOVEA.l (A3),A3
0002AB48 <AmiBlitz3.ab3@12060>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002AB4E <AmiBlitz3.ab3@12061>     MOVE.l mempool,a0
0002AB52 <AmiBlitz3.ab3@12062>     JSR _FreePooled(A6)
0002AB56 <AmiBlitz3.ab3@12063> BRA.w clearlabels__loop2
0002AB58 <AmiBlitz3.ab3@12066>   MOVEQ.l #$00,D0
0002AB5C <AmiBlitz3.ab3@12067>   MOVE.b $12(A2),D0
0002AB5E <AmiBlitz3.ab3@12068>   MOVEA.l A2,A1
0002AB60 <AmiBlitz3.ab3@12069>   MOVEA.l (A2),A2
0002AB66 <AmiBlitz3.ab3@12070>   MOVE.l mempool2,a0
0002AB6A <AmiBlitz3.ab3@12072> BRA.w clearlabels__loop
0002AB6C <AmiBlitz3.ab3@12075> RTS
0002AB72 <AmiBlitz3.ab3@12079>   MOVEA.l firstpend,A3
0002AB78 <AmiBlitz3.ab3@12080>   CLR.l firstpend
0002AB7E <AmiBlitz3.ab3@12081>   MOVEA.l _execbase,A6
0002AB82 <AmiBlitz3.ab3@12084>     CMPA.w #$0,A3
0002AB86 <AmiBlitz3.ab3@12085>      BEQ.w freepends__done
0002AB88 <AmiBlitz3.ab3@12086>     MOVEA.l A3,A1
0002AB8A <AmiBlitz3.ab3@12087>     MOVEQ.l #$08,D0
0002AB8C <AmiBlitz3.ab3@12088>     MOVEA.l (A3),A3
0002AB92 <AmiBlitz3.ab3@12089>     MOVE.l mempool,a0
0002AB96 <AmiBlitz3.ab3@12090>     JSR _FreePooled(A6)
0002AB9A <AmiBlitz3.ab3@12091> BRA.w fpnd2
0002AB9C <AmiBlitz3.ab3@12094> RTS
0002ABA2 <AmiBlitz3.ab3@12098>   MOVEA.l firstproc,A2
0002ABA8 <AmiBlitz3.ab3@12099>   CLR.l firstproc
0002ABAE <AmiBlitz3.ab3@12100>   MOVEA.l _execbase,A6
0002ABB2 <AmiBlitz3.ab3@12103>     CMPA.w #$0,A2
0002ABB6 <AmiBlitz3.ab3@12104>      BEQ.w clearfunctionlist__done
0002ABB8 <AmiBlitz3.ab3@12105>     MOVEA.l A2,A1
0002ABBA <AmiBlitz3.ab3@12106>     MOVEA.l (A2),A2
0002ABBC <AmiBlitz3.ab3@12107>     MOVEQ.l #$00,D0
0002ABC0 <AmiBlitz3.ab3@12108>     MOVE.b $20+#funcentry_extend(A1),D0
0002ABC6 <AmiBlitz3.ab3@12109>     MOVE.l mempool2,a0
0002ABCA <AmiBlitz3.ab3@12110>     JSR _FreePooled(A6)
0002ABCE <AmiBlitz3.ab3@12111> BRA.w clearfunctionlist__loop
0002ABD0 <AmiBlitz3.ab3@12114> RTS
0002ABD4 <AmiBlitz3.ab3@12118>   CMPA.w #$0,A2
0002ABD8 <AmiBlitz3.ab3@12119>    BEQ.w freetypes__done
0002ABDC <AmiBlitz3.ab3@12120>   MOVEA.l $4(A2),A3
0002ABE0 <AmiBlitz3.ab3@12121>   CMPA.w #$FF,A3
0002ABE4 <AmiBlitz3.ab3@12122>    BEQ.w freetypes__noway
0002ABE8 <AmiBlitz3.ab3@12126>    BSR.w freevars
0002ABEA <AmiBlitz3.ab3@12129>     MOVEA.l A2,A1
0002ABEC <AmiBlitz3.ab3@12130>     MOVEA.l (A2),A2
0002ABEE <AmiBlitz3.ab3@12131>     MOVEQ.l #$00,D0
0002ABF2 <AmiBlitz3.ab3@12132>     MOVE.b $A(A1),D0
0002ABF8 <AmiBlitz3.ab3@12133>     MOVEA.l _execbase,A6
0002ABFE <AmiBlitz3.ab3@12134>     MOVE.l mempool2,a0
0002AC02 <AmiBlitz3.ab3@12135>     JSR _FreePooled(A6)
0002AC06 <AmiBlitz3.ab3@12136> BRA.w freetypes
0002AC08 <AmiBlitz3.ab3@12139> RTS
0002AC0E <AmiBlitz3.ab3@12143>   JSR uselib2
0002AC14 <AmiBlitz3.ab3@12145>   CLR.w notshared
0002AC1A <AmiBlitz3.ab3@12146>   CLR.w varmode
0002AC20 <AmiBlitz3.ab3@12147>   MOVE.w proceduremode,D1
0002AC24 <AmiBlitz3.ab3@12148>    BNE.w JL_0_8F4E
0002AC2A <AmiBlitz3.ab3@12149>   LEA varbase,A2
0002AC30 <AmiBlitz3.ab3@12150>   LEA ptr_parameterstore,a0
0002AC34 <AmiBlitz3.ab3@12151>   CMP.b #$22,(a0)
0002AC38 <AmiBlitz3.ab3@12152>   BNE JL_0_8E5E
0002AC3A <AmiBlitz3.ab3@12153>   MOVEQ #0,d0
0002AC40 <AmiBlitz3.ab3@12154> JMP error
0002AC44 <AmiBlitz3.ab3@12157>   BSR.w findvariable
0002AC48 <AmiBlitz3.ab3@12160>   BNE.w JL_0_8E7E
0002AC4E <AmiBlitz3.ab3@12163>   MOVE.b flagmask+1,D1
0002AC52 <AmiBlitz3.ab3@12164>   MOVE.b $7(A2),D3
0002AC54 <AmiBlitz3.ab3@12165>   EOR.b D3,D1
0002AC58 <AmiBlitz3.ab3@12166>   BNE 'l2
0002AC60 <AmiBlitz3.ab3@12167>   CMP.b #2,nowdeclare
0002AC64 <AmiBlitz3.ab3@12168>   BEQ errormsg_declaredtwice
0002AC68 <AmiBlitz3.ab3@12169> BRA.w JL_0_8FA8
0002AC6C <AmiBlitz3.ab3@12172>   BSR.w findlab
0002AC70 <AmiBlitz3.ab3@12173>   BNE 'l1
0002AC78 <AmiBlitz3.ab3@12174>   CMP.b #2,nowdeclare
0002AC7C <AmiBlitz3.ab3@12175>   BEQ errormsg_declaredtwice
0002AC7E <AmiBlitz3.ab3@12176>   CMP.w d0,d0
0002AC82 <AmiBlitz3.ab3@12179> BRA.w JL_0_8E62
0002AC84 <AmiBlitz3.ab3@12182>    MOVE.l a2,-(a7)
0002AC8A <AmiBlitz3.ab3@12183>    LEA sharebase,a2
0002AC8C <AmiBlitz3.ab3@12184>    MOVEQ #$f+4,d7
0002AC90 <AmiBlitz3.ab3@12185>    BSR.w findlab
0002AC94 <AmiBlitz3.ab3@12186>    BEQ 'l2x
0002AC96 <AmiBlitz3.ab3@12187>    MOVE.l (a7)+,a2
0002AC9A <AmiBlitz3.ab3@12188> BRA 'cont
0002AC9C <AmiBlitz3.ab3@12191>   ADDQ.l #4,a7
0002ACA2 <AmiBlitz3.ab3@12192>   CLR.w varmode
0002ACA8 <AmiBlitz3.ab3@12193>   MOVE.b flagmask+1,D1
0002ACAC <AmiBlitz3.ab3@12194>   MOVE.b $7(A2),D3
0002ACAE <AmiBlitz3.ab3@12195>   EOR.b D3,D1
0002ACB2 <AmiBlitz3.ab3@12196>   BNE vardeclareerr
0002ACB6 <AmiBlitz3.ab3@12197> BRA JL_0_8FA8
0002ACBC <AmiBlitz3.ab3@12200>    MOVE.w nonew,D1
0002ACC0 <AmiBlitz3.ab3@12201>    BNE.w nonewerr
0002ACC6 <AmiBlitz3.ab3@12202>    TST.b nowdeclare
0002ACCA <AmiBlitz3.ab3@12203>    BNE 'l2
0002ACD0 <AmiBlitz3.ab3@12204>    TST.b declare2
0002ACD4 <AmiBlitz3.ab3@12205>    BEQ 'l1
0002ACD8 <AmiBlitz3.ab3@12206>    CMP.b #$2e,d0
0002ACDC <AmiBlitz3.ab3@12207>    BEQ 'l2
0002ACE0 <AmiBlitz3.ab3@12208>    CMP.b #"$",d0
0002ACE4 <AmiBlitz3.ab3@12209>    BEQ 'l2
0002ACE8 <AmiBlitz3.ab3@12210> BRA vardeclareerr
0002ACEE <AmiBlitz3.ab3@12213>   TST.b declare
0002ACF2 <AmiBlitz3.ab3@12214>    BNE vardeclareerr
0002ACF6 <AmiBlitz3.ab3@12217>   BSR.w addvariable
0002ACFC <AmiBlitz3.ab3@12218>   NOT.w notshared
0002ACFE <AmiBlitz3.ab3@12219>   MOVEA.l A2,A3
0002AD04 <AmiBlitz3.ab3@12220>   MOVEA.l defaulttype,A2
0002AD08 <AmiBlitz3.ab3@12221>   CMP.w #$2E,D0
0002AD0C <AmiBlitz3.ab3@12222>    BEQ.w JL_0_8EB8
0002AD10 <AmiBlitz3.ab3@12223>   CMP.w #$24,D0
0002AD14 <AmiBlitz3.ab3@12224>    BNE.w JL_0_8ECA
0002AD1A <AmiBlitz3.ab3@12225>   LEA newtype_string,A2
0002AD1E <AmiBlitz3.ab3@12226>    BSR.w get1bytemain
0002AD22 <AmiBlitz3.ab3@12227> BRA.w JL_0_8ECA
0002AD28 <AmiBlitz3.ab3@12230> JMP JUMP_notypeerr
0002AD2C <AmiBlitz3.ab3@12233>    BSR.w getparameter2
0002AD32 <AmiBlitz3.ab3@12234>   LEA newtypebase,A2
0002AD36 <AmiBlitz3.ab3@12235>    BSR.w findtype
0002AD3A <AmiBlitz3.ab3@12236>    BNE.w notypeerr3
0002AD40 <AmiBlitz3.ab3@12239>   CMPA.l #newtype_byte,A2
0002AD44 <AmiBlitz3.ab3@12240>    BEQ.w JL_0_8EECb
0002AD4A <AmiBlitz3.ab3@12241>   MOVE.w varmode,D1
0002AD4E <AmiBlitz3.ab3@12242>    BNE.w JL_0_8EE4b
0002AD54 <AmiBlitz3.ab3@12243>   ADDQ.w #1,globalvarpointer
0002AD5C <AmiBlitz3.ab3@12246>   BCLR #$0,globalvarpointer+1
0002AD60 <AmiBlitz3.ab3@12249>   MOVE.l A2,$A(A3)
0002AD68 <AmiBlitz3.ab3@12250>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AD6A <AmiBlitz3.ab3@12252>   MOVEQ.l #$04,D1
0002AD72 <AmiBlitz3.ab3@12253>   BTST #$0,flagmask+1
0002AD76 <AmiBlitz3.ab3@12254>    BNE.w JL_0_8F22b
0002AD7E <AmiBlitz3.ab3@12255>   BTST #$1,flagmask+1
0002AD82 <AmiBlitz3.ab3@12256>    BNE.w JL_0_8F22b
0002AD8A <AmiBlitz3.ab3@12257>   CMPI.l #$100,$4(A2)
0002AD8E <AmiBlitz3.ab3@12258>    BCC.w JL_0_8F22b
0002AD92 <AmiBlitz3.ab3@12259>   MOVE.w $8(A2),D1
0002AD98 <AmiBlitz3.ab3@12262>   TST.w varmode
0002AD9C <AmiBlitz3.ab3@12263> BRA.w JL_0_8F3E
0002ADA0 <AmiBlitz3.ab3@12272>   BSR.w getparameter2
0002ADA6 <AmiBlitz3.ab3@12273>   LEA newtypebase,A2
0002ADAA <AmiBlitz3.ab3@12274>    BSR.w findtype
0002ADAE <AmiBlitz3.ab3@12275>    BNE.w notypeerr
0002ADB4 <AmiBlitz3.ab3@12278>   CMPA.l #newtype_byte,A2
0002ADB8 <AmiBlitz3.ab3@12279>    BEQ.w JL_0_8EEC
0002ADBE <AmiBlitz3.ab3@12280>   MOVE.w varmode,D1
0002ADC2 <AmiBlitz3.ab3@12281>    BNE.w JL_0_8EE4
0002ADC8 <AmiBlitz3.ab3@12282>   ADDQ.w #1,globalvarpointer
0002ADD0 <AmiBlitz3.ab3@12285>   BCLR #$0,globalvarpointer+1
0002ADD4 <AmiBlitz3.ab3@12288>   MOVE.l A2,$A(A3)
0002ADDC <AmiBlitz3.ab3@12289>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002ADDE <AmiBlitz3.ab3@12290>   MOVEQ.l #$04,D1
0002ADE6 <AmiBlitz3.ab3@12291>   BTST #$0,flagmask+1
0002ADEA <AmiBlitz3.ab3@12292>    BNE.w JL_0_8F22
0002ADF2 <AmiBlitz3.ab3@12293>   BTST #$1,flagmask+1
0002ADF6 <AmiBlitz3.ab3@12294>    BNE.w JL_0_8F22
0002ADFE <AmiBlitz3.ab3@12295>   CMPI.l #$100,$4(A2)
0002AE02 <AmiBlitz3.ab3@12296>    BCC.w JL_0_8F22
0002AE06 <AmiBlitz3.ab3@12297>   MOVE.w $8(A2),D1
0002AE0C <AmiBlitz3.ab3@12300>   TST.w varmode
0002AE10 <AmiBlitz3.ab3@12301>    BEQ.w JL_0_8F3E
0002AE12 <AmiBlitz3.ab3@12302>   NEG.w D1
0002AE18 <AmiBlitz3.ab3@12303>   ADD.w D1,globalvarpointer
0002AE20 <AmiBlitz3.ab3@12304>   MOVE.w globalvarpointer,$4(A3)
0002AE22 <AmiBlitz3.ab3@12305> RTS
0002AE2A <AmiBlitz3.ab3@12308>   MOVE.w globalvarpointer,$4(A3)
0002AE30 <AmiBlitz3.ab3@12309>   ADD.w D1,globalvarpointer
0002AE32 <AmiBlitz3.ab3@12310> RTS
0002AE38 <AmiBlitz3.ab3@12314>   LEA firstglob,A2
0002AE3C <AmiBlitz3.ab3@12315>    BSR.w findvariable2
0002AE40 <AmiBlitz3.ab3@12318>   BNE.w JL_0_8F74
0002AE46 <AmiBlitz3.ab3@12319>   MOVE.b flagmask+1,D1
0002AE4A <AmiBlitz3.ab3@12320>   MOVE.b $7(A2),D3
0002AE4C <AmiBlitz3.ab3@12321>   EOR.b D3,D1
0002AE50 <AmiBlitz3.ab3@12322>    BEQ.w JL_0_8FA8
0002AE54 <AmiBlitz3.ab3@12323>    BSR.w findlab
0002AE58 <AmiBlitz3.ab3@12324> BRA.w JL_0_8F58
0002AE60 <AmiBlitz3.ab3@12327>   MOVE.w #$FFFF,varmode
0002AE66 <AmiBlitz3.ab3@12328>   MOVE.w globalvarpointer,-(A7)
0002AE70 <AmiBlitz3.ab3@12329>   MOVE.w locvaroff,globalvarpointer
0002AE76 <AmiBlitz3.ab3@12330>   LEA firstlocal,A2
0002AE7E <AmiBlitz3.ab3@12331>   MOVE.b #1,newvariable
0002AE82 <AmiBlitz3.ab3@12332>    BSR.w JL_0_8E5E
0002AE88 <AmiBlitz3.ab3@12333>   CLR.b newvariable
0002AE92 <AmiBlitz3.ab3@12334>   MOVE.w globalvarpointer,locvaroff
0002AE98 <AmiBlitz3.ab3@12335>   MOVE.w (A7)+,globalvarpointer
0002AE9A <AmiBlitz3.ab3@12336> RTS
0002AE9C <AmiBlitz3.ab3@12339>   MOVEA.l A2,A3
0002AEA0 <AmiBlitz3.ab3@12340>   CMP.w #$2E,D0
0002AEA4 <AmiBlitz3.ab3@12341>    BEQ.w JL_0_8FCE
0002AEA8 <AmiBlitz3.ab3@12342>   CMP.w #$24,D0
0002AEAC <AmiBlitz3.ab3@12343>    BNE.w JL_0_8FE8
0002AEB4 <AmiBlitz3.ab3@12344>   CMPI.l #newtype_string,$A(A3)
0002AEB8 <AmiBlitz3.ab3@12345>    BNE.w rongtypeerr
0002AEBC <AmiBlitz3.ab3@12346>    BSR.w get1bytemain
0002AEC0 <AmiBlitz3.ab3@12347> BRA.w JL_0_8FE8
0002AEC4 <AmiBlitz3.ab3@12350>    BSR.w getparameter2
0002AECA <AmiBlitz3.ab3@12351>   LEA newtypebase,A2
0002AECE <AmiBlitz3.ab3@12352>    BSR.w findtype
0002AED2 <AmiBlitz3.ab3@12353>    BNE.w notypeerr
0002AED6 <AmiBlitz3.ab3@12354>   CMPA.l $A(A3),A2
0002AEDA <AmiBlitz3.ab3@12355>    BNE.w rongtypeerr
0002AEE2 <AmiBlitz3.ab3@12357>   BTST #$0,flagmask+1
0002AEE6 <AmiBlitz3.ab3@12358>    BEQ.w JL_0_8FFE
0002AEEC <AmiBlitz3.ab3@12359>   BTST #$0,$7(A3)
0002AEF0 <AmiBlitz3.ab3@12360>    BEQ.w pointerr
0002AEF4 <AmiBlitz3.ab3@12363>   MOVEA.l $A(A3),A2
0002AEF6 <AmiBlitz3.ab3@12364> RTS
0002AEF8 <AmiBlitz3.ab3@12368>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AEFC <AmiBlitz3.ab3@12369>    BEQ.w JL_0_9042
0002AF06 <AmiBlitz3.ab3@12370>    MOVE.l destpointer,loada
0002AF0A <AmiBlitz3.ab3@12373> BRA JL_0_9032
0002AF0E <AmiBlitz3.ab3@12375>   CMP.w #$9,D3                                             ;_addq_arrays
0002AF12 <AmiBlitz3.ab3@12376>    BCC.w JL_0_9032
0002AF18 <AmiBlitz3.ab3@12377>   MOVE.w d3,arrayoffset
0002AF1C <AmiBlitz3.ab3@12378>   ANDI.w #$7,D3
0002AF1E <AmiBlitz3.ab3@12379>   LSL.w #8,D3
0002AF20 <AmiBlitz3.ab3@12380>   LSL.w #1,D3
0002AF28 <AmiBlitz3.ab3@12381>   ANDI.w #$F1FF,addqa0
0002AF2E <AmiBlitz3.ab3@12382>   OR.w D3,addqa0
0002AF34 <AmiBlitz3.ab3@12383>   MOVE.w addqa0,D1
0002AF38 <AmiBlitz3.ab3@12384> BRA.w writeword
0002AF3E <AmiBlitz3.ab3@12387>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AF42 <AmiBlitz3.ab3@12388>   BGT longoffset
0002AF48 <AmiBlitz3.ab3@12389>   MOVE.w D3,leaa0a0+2
0002AF4E <AmiBlitz3.ab3@12390>   MOVE.w d3,arrayoffset
0002AF54 <AmiBlitz3.ab3@12391>   MOVE.l leaa0a0,D1
0002AF58 <AmiBlitz3.ab3@12392>   BSR.w writelong
0002AF5A <AmiBlitz3.ab3@12395> RTS
0002AF5E <AmiBlitz3.ab3@12398>    MOVE.w #$d5fc,d1
0002AF62 <AmiBlitz3.ab3@12399>    BSR writeword
0002AF64 <AmiBlitz3.ab3@12400>    MOVE.l d3,d1
0002AF68 <AmiBlitz3.ab3@12401>    BSR.w writelong
0002AF6A <AmiBlitz3.ab3@12402> RTS
0002AF6E <AmiBlitz3.ab3@12406>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AF72 <AmiBlitz3.ab3@12409>    BCS.w arrchk3                                           
0002AF78 <AmiBlitz3.ab3@12410>    JSR $20000                                              ;jsr 0
0002AF7E <AmiBlitz3.ab3@12416>   TST.b fast
0002AF82 <AmiBlitz3.ab3@12417>   BEQ 'l1
0002AF84 <AmiBlitz3.ab3@12418>    MOVEQ #0,d1                                             ;faster arrays
0002AF8A <AmiBlitz3.ab3@12419>    MOVE.w regnum,d2
0002AF8C <AmiBlitz3.ab3@12420>    MOVE.w d2,d1
0002AF8E <AmiBlitz3.ab3@12421>    LSL.w #8,d1
0002AF90 <AmiBlitz3.ab3@12422>    LSL.w #4,d1
0002AF92 <AmiBlitz3.ab3@12423>    ADD.w d2,d1
0002AF98 <AmiBlitz3.ab3@12424>    OR.l #$4c2d0000,d1
0002AF9E <AmiBlitz3.ab3@12425>    TST.w varmode
0002AFA2 <AmiBlitz3.ab3@12426>    BEQ 'l1a
0002AFA6 <AmiBlitz3.ab3@12427>    BCLR #16,d1
0002AFAA <AmiBlitz3.ab3@12430>    BSR writelong
0002AFAE <AmiBlitz3.ab3@12431>    MOVE.w $4(A7),D1
0002AFB2 <AmiBlitz3.ab3@12432>    BSR.w writeword
0002AFB8 <AmiBlitz3.ab3@12433>    MOVE.w regnum,D1
0002AFBA <AmiBlitz3.ab3@12434>   SUBQ.w #1,D1
0002AFBC <AmiBlitz3.ab3@12435>   LSL.w #8,D1
0002AFBE <AmiBlitz3.ab3@12436>   LSL.w #1,D1
0002AFC2 <AmiBlitz3.ab3@12437>   ORI.w #$D080,D1
0002AFC8 <AmiBlitz3.ab3@12438>   OR.w regnum,D1
0002AFCC <AmiBlitz3.ab3@12439>    BSR.w writeword
0002AFCE <AmiBlitz3.ab3@12440> RTS
0002AFD4 <AmiBlitz3.ab3@12443>   MOVE.w regnum,D2
0002AFD8 <AmiBlitz3.ab3@12444>   MOVE.w arrmul1(PC),D1
0002AFDA <AmiBlitz3.ab3@12445>   OR.w D2,D1
0002AFDC <AmiBlitz3.ab3@12446>   SUBQ.w #1,D1
0002AFE0 <AmiBlitz3.ab3@12447>    BSR.w writeword
0002AFE4 <AmiBlitz3.ab3@12448>   MOVE.w arrmul2(PC),D1
0002AFE6 <AmiBlitz3.ab3@12449>   OR.w D2,D1
0002AFE8 <AmiBlitz3.ab3@12450>   MOVE.w D2,D3
0002AFEA <AmiBlitz3.ab3@12451>   SUBQ.w #1,D3
0002AFEC <AmiBlitz3.ab3@12452>   LSL.w #8,D3
0002AFEE <AmiBlitz3.ab3@12453>   LSL.w #1,D3
0002AFF0 <AmiBlitz3.ab3@12454>   OR.w D3,D1
0002AFF4 <AmiBlitz3.ab3@12455>    BSR.w writeword
0002AFF8 <AmiBlitz3.ab3@12456>   MOVE.w arrmul3(PC),D1
0002AFFA <AmiBlitz3.ab3@12457>   MOVE.w D2,D3
0002AFFC <AmiBlitz3.ab3@12458>   LSL.w #8,D3
0002AFFE <AmiBlitz3.ab3@12459>   LSL.w #1,D3
0002B000 <AmiBlitz3.ab3@12460>   OR.w D3,D1
0002B004 <AmiBlitz3.ab3@12461>    BSR.w pokewda5s
0002B008 <AmiBlitz3.ab3@12462>   MOVE.w $4(A7),D1
0002B00A <AmiBlitz3.ab3@12463>   ADDQ.w #2,D1
0002B00E <AmiBlitz3.ab3@12464>    BSR.w writeword
0002B012 <AmiBlitz3.ab3@12465>   MOVE.w arrmul4(PC),D1
0002B014 <AmiBlitz3.ab3@12466>   MOVE.w D2,D3
0002B016 <AmiBlitz3.ab3@12467>   SUBQ.w #1,D3
0002B018 <AmiBlitz3.ab3@12468>   LSL.w #8,D3
0002B01A <AmiBlitz3.ab3@12469>   LSL.w #1,D3
0002B01C <AmiBlitz3.ab3@12470>   OR.w D3,D1
0002B020 <AmiBlitz3.ab3@12471>    BSR.w pokewda5s
0002B024 <AmiBlitz3.ab3@12472>   MOVE.w $4(A7),D1
0002B028 <AmiBlitz3.ab3@12473>    BSR.w writeword
0002B02C <AmiBlitz3.ab3@12474>   MOVE.w arrmul5(PC),D1
0002B02E <AmiBlitz3.ab3@12475>   OR.w D2,D1
0002B030 <AmiBlitz3.ab3@12476>   SUBQ.w #1,D1
0002B034 <AmiBlitz3.ab3@12477>    BSR.w writeword
0002B038 <AmiBlitz3.ab3@12478>   MOVE.w arrmul6(PC),D1
0002B03A <AmiBlitz3.ab3@12479>   OR.w D2,D1
0002B03C <AmiBlitz3.ab3@12480>   SUBQ.w #1,D1
0002B040 <AmiBlitz3.ab3@12481>    BSR.w writeword
0002B044 <AmiBlitz3.ab3@12482>   MOVE.w arrmul7(PC),D1
0002B046 <AmiBlitz3.ab3@12483>   OR.w D2,D1
0002B048 <AmiBlitz3.ab3@12484>   SUBQ.w #1,D1
0002B04A <AmiBlitz3.ab3@12485>   MOVE.w D2,D3
0002B04C <AmiBlitz3.ab3@12486>   LSL.w #8,D3
0002B04E <AmiBlitz3.ab3@12487>   LSL.w #1,D3
0002B050 <AmiBlitz3.ab3@12488>   OR.w D3,D1
0002B054 <AmiBlitz3.ab3@12489>    BSR.w writeword
0002B058 <AmiBlitz3.ab3@12490>   MOVE.w arrmul8(PC),D1
0002B05A <AmiBlitz3.ab3@12491>   MOVE.w D2,D3
0002B05C <AmiBlitz3.ab3@12492>   SUBQ.w #1,D3
0002B05E <AmiBlitz3.ab3@12493>   LSL.w #8,D3
0002B060 <AmiBlitz3.ab3@12494>   LSL.w #1,D3
0002B062 <AmiBlitz3.ab3@12495>   OR.w D3,D1
0002B066 <AmiBlitz3.ab3@12496>    BSR.w writeword
0002B06C <AmiBlitz3.ab3@12497>   MOVE.w regnum,D1
0002B06E <AmiBlitz3.ab3@12498>   SUBQ.w #1,D1
0002B070 <AmiBlitz3.ab3@12499>   LSL.w #8,D1
0002B072 <AmiBlitz3.ab3@12500>   LSL.w #1,D1
0002B076 <AmiBlitz3.ab3@12501>   ORI.w #$D080,D1
0002B07C <AmiBlitz3.ab3@12502>   OR.w regnum,D1
0002B080 <AmiBlitz3.ab3@12503> BRA.w writeword
0002B082 <AmiBlitz3.ab3@12511> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B084 <AmiBlitz3.ab3@12512> arrmul2:   MOVE  d0,d0
0002B088 <AmiBlitz3.ab3@12513> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B08C <AmiBlitz3.ab3@12514> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B08E <AmiBlitz3.ab3@12516> arrmul5:   SWAP d0
0002B090 <AmiBlitz3.ab3@12517> arrmul6:   CLR d0
0002B092 <AmiBlitz3.ab3@12518> arrmul7:   ADD.l d0,d0
0002B094 <AmiBlitz3.ab3@12519> arrmul8:   MOVE.l (a7)+,d0
0002B098 <AmiBlitz3.ab3@12524> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B09C <AmiBlitz3.ab3@12525> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B09E <AmiBlitz3.ab3@12526> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B0A4 <AmiBlitz3.ab3@12544>   CLR.l lastoffset_org
0002B0AA <AmiBlitz3.ab3@12545>   BTST #$1,$7(A3)
0002B0AE <AmiBlitz3.ab3@12546>    BEQ.w calcvar__notarr
0002B0B4 <AmiBlitz3.ab3@12547>   MOVE.w notshared,D1
0002B0B8 <AmiBlitz3.ab3@12548>    BNE.w noarrerr
0002B0BC <AmiBlitz3.ab3@12549>    BSR.w get1bytemain
0002B0C0 <AmiBlitz3.ab3@12550>   CMP.w #$29,D0
0002B0C4 <AmiBlitz3.ab3@12551>    BNE.w calcvar__notalist
0002B0CA <AmiBlitz3.ab3@12552>   BTST #$0,$6(A3)
0002B0CE <AmiBlitz3.ab3@12553>    BEQ.w nolisterr
0002B0D6 <AmiBlitz3.ab3@12554>   MOVE.w $4(A3),listcode1+2
0002B0DA <AmiBlitz3.ab3@12555>   MOVE.l listcode1(PC),D1
0002B0DE <AmiBlitz3.ab3@12556>    BSR.w pokela5s
0002B0E2 <AmiBlitz3.ab3@12557>   MOVE.l listcode2(PC),D1
0002B0E6 <AmiBlitz3.ab3@12558>    BSR.w writelong
0002B0EC <AmiBlitz3.ab3@12559>   TST.b debugmode
0002B0F0 <AmiBlitz3.ab3@12560>    BEQ.w calcvar__nolrerr
0002B0F2 <AmiBlitz3.ab3@12564>   MOVE.l A2,-(A7)
0002B0F6 <AmiBlitz3.ab3@12565>   MOVE.w #$C315,D1
0002B0FA <AmiBlitz3.ab3@12566>    BSR.w Atokejsr
0002B0FC <AmiBlitz3.ab3@12567>   MOVEA.l (A7)+,A2
0002B100 <AmiBlitz3.ab3@12570>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B104 <AmiBlitz3.ab3@12572>    BSR.w writeword
0002B108 <AmiBlitz3.ab3@12573> BRA.w calcvar__normalar
0002B10A <AmiBlitz3.ab3@12576> calcvar__listoff:   Ds.w 1
0002B110 <AmiBlitz3.ab3@12580>   CLR.w calcvar__listoff
0002B116 <AmiBlitz3.ab3@12581>   BTST #$0,$6(A3)
0002B11A <AmiBlitz3.ab3@12582>    BEQ.w calcvar__knop
0002B122 <AmiBlitz3.ab3@12583>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002B126 <AmiBlitz3.ab3@12586>   MOVEM.l A2-A3,-(A7)
0002B12C <AmiBlitz3.ab3@12587>   MOVE.w varmode,-(A7)
0002B130 <AmiBlitz3.ab3@12588>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B134 <AmiBlitz3.ab3@12589>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B136 <AmiBlitz3.ab3@12590>   MOVE.l A2,-(A7)
0002B13C <AmiBlitz3.ab3@12591>   MOVE.w flagmask,-(A7)
0002B146 <AmiBlitz3.ab3@12593>   MOVE.w oldqflag,instringon
0002B14C <AmiBlitz3.ab3@12594>   MOVEA.l lastsourcepos,A5
0002B150 <AmiBlitz3.ab3@12595>    BSR.w arreval
0002B156 <AmiBlitz3.ab3@12596>   MOVE.w (A7)+,flagmask
0002B15E <AmiBlitz3.ab3@12597>   MOVE.w $8(A7),varmode
0002B164 <AmiBlitz3.ab3@12598>   TST.b debugmode
0002B168 <AmiBlitz3.ab3@12599>    BEQ.w calcvar__noszchk
0002B16A <AmiBlitz3.ab3@12603>   MOVEA.l (A7)+,A2
0002B16C <AmiBlitz3.ab3@12604>   MOVEQ.l #$04,D1
0002B174 <AmiBlitz3.ab3@12605>   BTST #$0,flagmask+1                                      ;pointer?
0002B178 <AmiBlitz3.ab3@12606>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002B17C <AmiBlitz3.ab3@12607>   MOVE.w $8(A2),D1
0002B180 <AmiBlitz3.ab3@12610>   ADD.w calcvar__listoff(PC),D1
0002B184 <AmiBlitz3.ab3@12611>   BSR.w JL_0_B6DE
0002B18A <AmiBlitz3.ab3@12612>   ADDQ.w #1,regnum
0002B18C <AmiBlitz3.ab3@12615>   ADDQ.w #4,(A7)
0002B190 <AmiBlitz3.ab3@12616>   TST.w $4(A7)
0002B194 <AmiBlitz3.ab3@12617>    BEQ.w calcvar__isglob
0002B196 <AmiBlitz3.ab3@12618>   SUBQ.w #8,(A7)                                           ;range check local array
0002B19C <AmiBlitz3.ab3@12621>   TST.b debugmode
0002B1A0 <AmiBlitz3.ab3@12622>    BEQ.w calcvar__noer1
0002B1A6 <AmiBlitz3.ab3@12623>   MOVE.w regnum,D1
0002B1A8 <AmiBlitz3.ab3@12624>   SUBQ.w #1,D1
0002B1AA <AmiBlitz3.ab3@12625>   LSL.w #8,D1
0002B1AC <AmiBlitz3.ab3@12626>   LSL.w #1,D1
0002B1B0 <AmiBlitz3.ab3@12627>   OR.w zarrchk(PC),D1
0002B1B4 <AmiBlitz3.ab3@12628>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B1B6 <AmiBlitz3.ab3@12629>   MOVE.w (A7),D1
0002B1BA <AmiBlitz3.ab3@12630>    BSR.w writeword
0002B1BE <AmiBlitz3.ab3@12631>   MOVE.l arrchk2(PC),D1
0002B1C2 <AmiBlitz3.ab3@12632>    BSR.w writelong
0002B1C6 <AmiBlitz3.ab3@12633>   MOVE.w #$C309,D1
0002B1CA <AmiBlitz3.ab3@12634>    BSR.w Atokejsr
0002B1CE <AmiBlitz3.ab3@12637>   SUBQ.w #1,$2(A7)
0002B1D2 <AmiBlitz3.ab3@12638>    BEQ.w calcvar__ardone
0002B1D6 <AmiBlitz3.ab3@12639>   CMP.w #$2C,D0
0002B1DA <AmiBlitz3.ab3@12640>    BNE.w syntaxerr
0002B1E0 <AmiBlitz3.ab3@12641>    TST.b fast
0002B1E4 <AmiBlitz3.ab3@12642>    BNE 'l1
0002B1E8 <AmiBlitz3.ab3@12643>    BSR.w arrevalchk
0002B1EC <AmiBlitz3.ab3@12644> BRA 'l2
0002B1F0 <AmiBlitz3.ab3@12647>   BSR arreval
0002B1F8 <AmiBlitz3.ab3@12650>   MOVE.w $4(A7),varmode
0002B1FC <AmiBlitz3.ab3@12651>   BSR.w JL_0_9052
0002B200 <AmiBlitz3.ab3@12652> BRA.w calcvar__arloop
0002B204 <AmiBlitz3.ab3@12656>   CMP.w #$29,D0
0002B208 <AmiBlitz3.ab3@12657>    BNE.w syntaxerr
0002B20E <AmiBlitz3.ab3@12658>   SUBQ.w #1,regnum
0002B210 <AmiBlitz3.ab3@12659>   ADDQ.w #6,A7
0002B214 <AmiBlitz3.ab3@12660>   MOVEM.l (A7)+,A2-A3
0002B21C <AmiBlitz3.ab3@12661>   MOVE.w $4(A3),movea5a0+2
0002B222 <AmiBlitz3.ab3@12662>   MOVE.l movea5a0,D1
0002B226 <AmiBlitz3.ab3@12663>    BSR.w pokela5s
0002B22C <AmiBlitz3.ab3@12664>   MOVE.w regnum,D1
0002B230 <AmiBlitz3.ab3@12665>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B234 <AmiBlitz3.ab3@12666>    BSR.w writeword
0002B23A <AmiBlitz3.ab3@12667>   BTST #$0,$6(A3)
0002B23E <AmiBlitz3.ab3@12668>    BEQ.w calcvar__normalar
0002B242 <AmiBlitz3.ab3@12672>   MOVE.w listarfix(PC),D1
0002B246 <AmiBlitz3.ab3@12673>    BSR.w writeword
0002B24A <AmiBlitz3.ab3@12676>   BSR.w get1bytemain
0002B250 <AmiBlitz3.ab3@12680>   BTST #$0,$7(A3)
0002B254 <AmiBlitz3.ab3@12681>    BEQ.w calcvar__noppnt
0002B258 <AmiBlitz3.ab3@12682>   CMP.w #$5C,D0
0002B25C <AmiBlitz3.ab3@12683>    BNE.w calcvar__pmskip
0002B260 <AmiBlitz3.ab3@12684>   MOVE.w calcvar__pfix(PC),D1
0002B264 <AmiBlitz3.ab3@12685>    BSR.w writeword
0002B268 <AmiBlitz3.ab3@12688>   MOVE.w #$8000,D2
0002B26C <AmiBlitz3.ab3@12689> BRA.w calcvar__loopml
0002B270 <AmiBlitz3.ab3@12692>   MOVE.w #$C000,D2
0002B274 <AmiBlitz3.ab3@12693> BRA.w calcvar__loopml
0002B276 <AmiBlitz3.ab3@12697> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B27A <AmiBlitz3.ab3@12702>   CMP.w #$28,D0
0002B27E <AmiBlitz3.ab3@12703>    BEQ.w noarrerr
0002B286 <AmiBlitz3.ab3@12704>   CMPI.l #$100,$4(A2)
0002B28A <AmiBlitz3.ab3@12705>    BCS.w calcvar__simpvar
0002B290 <AmiBlitz3.ab3@12706>   BTST #$0,$7(A3)
0002B294 <AmiBlitz3.ab3@12707>    BEQ.w calcvar__notap
0002B298 <AmiBlitz3.ab3@12711>   CMP.w #$5C,D0
0002B29C <AmiBlitz3.ab3@12712>    BEQ.w calcvar__notap
0002B29E <AmiBlitz3.ab3@12713>   MOVEQ.l #$00,D2
0002B2A2 <AmiBlitz3.ab3@12714> BRA.w calcvar__simpvar2
0002B2A6 <AmiBlitz3.ab3@12717>   MOVE.w #$8000,D2
0002B2AE <AmiBlitz3.ab3@12718>   MOVE.w $4(A3),movea5a0+2
0002B2B4 <AmiBlitz3.ab3@12719>   MOVE.l movea5a0,D1
0002B2B8 <AmiBlitz3.ab3@12720>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B2BE <AmiBlitz3.ab3@12722>    TST.b debugmode
0002B2C2 <AmiBlitz3.ab3@12723>    BEQ.w 'skip
0002B2C6 <AmiBlitz3.ab3@12724>    MOVE.w #$c320,D1
0002B2CC <AmiBlitz3.ab3@12725>    JSR Atokejsr
0002B2CE <AmiBlitz3.ab3@12729>   MOVEQ.l #$00,D3
0002B2D2 <AmiBlitz3.ab3@12732>   CMP.w #$5C,D0
0002B2D6 <AmiBlitz3.ab3@12733>    BNE.w calcvar__done
0002B2DE <AmiBlitz3.ab3@12734>   CMPI.l #$100,$4(A2)
0002B2E2 <AmiBlitz3.ab3@12735>    BCS.w rongtypeerr
0002B2E4 <AmiBlitz3.ab3@12736>   MOVE.w D2,-(A7)
0002B2E8 <AmiBlitz3.ab3@12737>    BSR.w getparameter2
0002B2EC <AmiBlitz3.ab3@12738>    BEQ.w syntaxerr
0002B2EE <AmiBlitz3.ab3@12739>   ADDQ.w #4,A2
0002B2F2 <AmiBlitz3.ab3@12740>    BSR.w findvariable2
0002B2F6 <AmiBlitz3.ab3@12741>    BNE.w noofferr
0002B2F8 <AmiBlitz3.ab3@12742>   MOVE.w (A7)+,D2
0002B2FA <AmiBlitz3.ab3@12743>   MOVEA.l A2,A3                                             ;pointer to offset
0002B2FE <AmiBlitz3.ab3@12744>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B300 <AmiBlitz3.ab3@12745>   MOVEQ #0,d1
0002B304 <AmiBlitz3.ab3@12746>   MOVE.w 4(a3),d1
0002B306 <AmiBlitz3.ab3@12747>   ADD.l d1,d3
0002B30C <AmiBlitz3.ab3@12749>   MOVE.l A3,lastoffset_org
0002B310 <AmiBlitz3.ab3@12750>   CMP.w #$5B,D0
0002B314 <AmiBlitz3.ab3@12751>    BNE.w calcvar__realdone
0002B31A <AmiBlitz3.ab3@12752>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B31E <AmiBlitz3.ab3@12753>    BEQ.w rongtypeerr
0002B322 <AmiBlitz3.ab3@12754>    BSR.w JL_0_9004
0002B326 <AmiBlitz3.ab3@12755>   MOVEM.l A2-A3,-(A7)
0002B32C <AmiBlitz3.ab3@12756>   MOVE.w varmode,-(A7)
0002B332 <AmiBlitz3.ab3@12757>   MOVE.l lastoffset_org,-(A7)
0002B338 <AmiBlitz3.ab3@12758>   MOVE.w pusha2,D1
0002B33C <AmiBlitz3.ab3@12759>   BSR.w writeword
0002B33E <AmiBlitz3.ab3@12760>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B348 <AmiBlitz3.ab3@12761>   MOVE.l destpointer,deststore
0002B34E <AmiBlitz3.ab3@12762>   MOVE.l leftsidetype,-(a7)
0002B354 <AmiBlitz3.ab3@12763>   MOVE.l rightsidetype,-(a7)
0002B35A <AmiBlitz3.ab3@12765>   MOVE.w leftsideflagmask,-(a7)
0002B360 <AmiBlitz3.ab3@12766>   MOVE.w rightsideflagmask,-(a7)
0002B366 <AmiBlitz3.ab3@12767>   CLR.l rightsidetype
0002B36C <AmiBlitz3.ab3@12768>   CLR.l leftsidetype
0002B372 <AmiBlitz3.ab3@12769>   CLR.w leftsideflagmask
0002B378 <AmiBlitz3.ab3@12770>   CLR.w rightsideflagmask
0002B37C <AmiBlitz3.ab3@12771>   BSR.w eval
0002B382 <AmiBlitz3.ab3@12772>   MOVE.w (a7)+,rightsideflagmask
0002B388 <AmiBlitz3.ab3@12773>   MOVE.w (a7)+,leftsideflagmask
0002B38E <AmiBlitz3.ab3@12774>   MOVE.l (a7)+,rightsidetype
0002B394 <AmiBlitz3.ab3@12775>   MOVE.l (a7)+,leftsidetype
0002B398 <AmiBlitz3.ab3@12776>   CMP.w #$5D,D0
0002B39C <AmiBlitz3.ab3@12777>    BNE.w syntaxerr
0002B3A2 <AmiBlitz3.ab3@12778>   TST.b fast                                               ;a2,-(a7) array
0002B3A6 <AmiBlitz3.ab3@12779>   BEQ calcvar__loop0_l10
0002B3AC <AmiBlitz3.ab3@12783>   MOVE.l destpointer,d1
0002B3B2 <AmiBlitz3.ab3@12784>   SUB.l deststore,d1
0002B3B8 <AmiBlitz3.ab3@12785>   CMP.l #4,d1
0002B3BC <AmiBlitz3.ab3@12786>   BNE calcvar__loop0_l10
0002B3C2 <AmiBlitz3.ab3@12787>   MOVE.l destpointer,a4
0002B3C8 <AmiBlitz3.ab3@12788>   MOVE.l -4(a4),-6(a4)
0002B3CE <AmiBlitz3.ab3@12789>   SUBQ.l #2,destpointer
0002B3D4 <AmiBlitz3.ab3@12790>   CLR.l imm_addr
0002B3DA <AmiBlitz3.ab3@12791>   CLR.l load_var_addr
0002B3DE <AmiBlitz3.ab3@12792> BRA calcvar__loop0_l20
0002B3E4 <AmiBlitz3.ab3@12795>   MOVE.w pulla2,D1
0002B3E8 <AmiBlitz3.ab3@12796>    BSR.w writeword
0002B3EE <AmiBlitz3.ab3@12799>   MOVE.l (A7)+,lastoffset_org
0002B3F4 <AmiBlitz3.ab3@12800>   MOVE.w (A7)+,varmode
0002B3F8 <AmiBlitz3.ab3@12801>   MOVEM.l (A7)+,A2-A3
0002B3FE <AmiBlitz3.ab3@12807>   TST.w debugmode
0002B402 <AmiBlitz3.ab3@12808>    BEQ.b calcvar__nobchk
0002B406 <AmiBlitz3.ab3@12809>   MOVE.w $8(A3),D1
0002B40A <AmiBlitz3.ab3@12810>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002B410 <AmiBlitz3.ab3@12814>   MOVE.w D1,brchkcode+2
0002B416 <AmiBlitz3.ab3@12815>   MOVE.w regnum,D1
0002B418 <AmiBlitz3.ab3@12816>   LSL.w #8,D1
0002B41A <AmiBlitz3.ab3@12817>   LSL.w #1,D1
0002B41E <AmiBlitz3.ab3@12818>   OR.w brchkcode0(PC),D1
0002B424 <AmiBlitz3.ab3@12819>   MOVE.w D1,brchkcode
0002B428 <AmiBlitz3.ab3@12820>   MOVE.l brchkcode(PC),D1
0002B42C <AmiBlitz3.ab3@12821>    BSR.w writelong
0002B430 <AmiBlitz3.ab3@12822>   MOVE.l brchkcode+4(PC),D1
0002B434 <AmiBlitz3.ab3@12823>    BSR.w writelong
0002B438 <AmiBlitz3.ab3@12824>   MOVE.w brchkcode+8(PC),D1
0002B43C <AmiBlitz3.ab3@12825>    BSR.w writeword
0002B43E <AmiBlitz3.ab3@12828>   MOVEQ.l #$04,D1
0002B444 <AmiBlitz3.ab3@12829>   BTST #$0,$7(A3)
0002B448 <AmiBlitz3.ab3@12830>    BNE.w calcvar__dothemul
0002B44C <AmiBlitz3.ab3@12831>   MOVE.w $8(A2),D1
0002B450 <AmiBlitz3.ab3@12834>   BSR.w JL_0_B6DE
0002B456 <AmiBlitz3.ab3@12835>   MOVE.w addrega2,D1
0002B45C <AmiBlitz3.ab3@12836>   OR.w regnum,D1
0002B460 <AmiBlitz3.ab3@12837>    OR.w #$100,d1                                           ;>32kb types
0002B464 <AmiBlitz3.ab3@12838>    BSR.w writeword
0002B468 <AmiBlitz3.ab3@12839>    BSR.w get1bytemain
0002B46A <AmiBlitz3.ab3@12840>   MOVEQ.l #$00,D3
0002B46E <AmiBlitz3.ab3@12841>   MOVE.w #$8000,D2
0002B474 <AmiBlitz3.ab3@12844>   BTST #$0,$7(A3)
0002B478 <AmiBlitz3.ab3@12845>    BNE.w calcvar__pointer
0002B47C <AmiBlitz3.ab3@12846> BRA.w calcvar__loop0
0002B480 <AmiBlitz3.ab3@12850>  CMP.w #$5C,D0
0002B484 <AmiBlitz3.ab3@12851>    BNE.w calcvar__done3
0002B486 <AmiBlitz3.ab3@12852>   TST.w D3
0002B48A <AmiBlitz3.ab3@12853>    BNE.w calcvar__pskip
0002B490 <AmiBlitz3.ab3@12854>   MOVE.w movea0,D1
0002B494 <AmiBlitz3.ab3@12855>    BSR.w writeword
0002B498 <AmiBlitz3.ab3@12856> BRA.w calcvar__pmore
0002B49E <AmiBlitz3.ab3@12859>   MOVE.w D3,movea0a0+2
0002B4A4 <AmiBlitz3.ab3@12860>   MOVE.l movea0a0,D1
0002B4A8 <AmiBlitz3.ab3@12861>    BSR.w writelong
0002B4AE <AmiBlitz3.ab3@12864>   BTST #$2,$7(A3)
0002B4B2 <AmiBlitz3.ab3@12865>    BEQ.w calcvar__loopml
0002B4B8 <AmiBlitz3.ab3@12866>   MOVE.l adda0a0,D1
0002B4BC <AmiBlitz3.ab3@12867>    BSR.w writelong
0002B4C0 <AmiBlitz3.ab3@12868> BRA.w calcvar__loopml
0002B4C4 <AmiBlitz3.ab3@12871>   BSET #$E,D2
0002B4CA <AmiBlitz3.ab3@12872>   BTST #$2,$7(A3)
0002B4CE <AmiBlitz3.ab3@12873>    BNE.w calcvar__done
0002B4D2 <AmiBlitz3.ab3@12874>   BSET #$D,D2
0002B4DA <AmiBlitz3.ab3@12877>   CMPI.l #$100,$4(A2)
0002B4DE <AmiBlitz3.ab3@12878>    BCC.w calcvar__done2
0002B4E2 <AmiBlitz3.ab3@12879>   MOVE.b $7(A2),D2
0002B4E6 <AmiBlitz3.ab3@12882> BRA.w JL_0_9004
0002B4EA <AmiBlitz3.ab3@12885>   MOVE.w $6(A2),D2
0002B4EE <AmiBlitz3.ab3@12888>   MOVE.w $4(A3),D3
0002B4F4 <AmiBlitz3.ab3@12889>   BTST #$0,$7(A3)
0002B4F8 <AmiBlitz3.ab3@12890>    BEQ.w calcvar__nopoint
0002B4FC <AmiBlitz3.ab3@12891>   BSET #$E,D2
0002B4FE <AmiBlitz3.ab3@12894> RTS
0002B502 <AmiBlitz3.ab3@12898> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B506 <AmiBlitz3.ab3@12899> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B508 <AmiBlitz3.ab3@12900>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B50A <AmiBlitz3.ab3@12901>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B50C <AmiBlitz3.ab3@12902>              Dc.b $4E,$40                                  ;TRAP    #00
0002B512 <AmiBlitz3.ab3@12910>   TST.w varmode
0002B516 <AmiBlitz3.ab3@12911>    BEQ.w writeword
0002B51A <AmiBlitz3.ab3@12912>   BCLR #$0,D1
0002B51E <AmiBlitz3.ab3@12913> BRA.w writeword
0002B524 <AmiBlitz3.ab3@12916>   TST.w varmode
0002B528 <AmiBlitz3.ab3@12917>    BEQ.w writeword
0002B52C <AmiBlitz3.ab3@12918>   BCLR #$9,D1
0002B530 <AmiBlitz3.ab3@12919> BRA.w writeword
0002B536 <AmiBlitz3.ab3@12922>   TST.w proceduremode
0002B53A <AmiBlitz3.ab3@12923>    BEQ.w writelong
0002B53E <AmiBlitz3.ab3@12924>   BCLR #$19,D1
0002B542 <AmiBlitz3.ab3@12925> BRA.w writelong
0002B548 <AmiBlitz3.ab3@12928>   TST.w varmode
0002B54C <AmiBlitz3.ab3@12929>   BEQ.w writelong
0002B550 <AmiBlitz3.ab3@12930>   BCLR #$10,D1
0002B556 <AmiBlitz3.ab3@12933>   ADDQ.l #1,destpointer
0002B55E <AmiBlitz3.ab3@12934>   BCLR #$0,destpointer+3
0002B564 <AmiBlitz3.ab3@12935>   MOVEA.l destpointer,A4
0002B56A <AmiBlitz3.ab3@12936>   CMPA.l destbufferend,A4
0002B56E <AmiBlitz3.ab3@12937>    BCC.w writeword__overa
0002B570 <AmiBlitz3.ab3@12938>   MOVE.l D1,(A4)+
0002B576 <AmiBlitz3.ab3@12941>   MOVE.l A4,destpointer
0002B57A <AmiBlitz3.ab3@12942>   CMPA.l bigpc(PC),A4
0002B57E <AmiBlitz3.ab3@12943>    BHI.w writeword__nbp
0002B580 <AmiBlitz3.ab3@12944> RTS
0002B588 <AmiBlitz3.ab3@12947>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B58E <AmiBlitz3.ab3@12948>   CLR.b fast
0002B594 <AmiBlitz3.ab3@12949>   CLR.b fpu
0002B59A <AmiBlitz3.ab3@12950>   CLR.b iee
0002B59C <AmiBlitz3.ab3@12951>   ADDQ.w #4,A4
0002B5A0 <AmiBlitz3.ab3@12952> BRA.w writeword__msa
0002B5A6 <AmiBlitz3.ab3@12958>   ADDQ.l #1,destpointer
0002B5AE <AmiBlitz3.ab3@12959>   BCLR #$0,destpointer+3
0002B5B4 <AmiBlitz3.ab3@12960>   MOVEA.l destpointer,A4
0002B5BA <AmiBlitz3.ab3@12961>   CMPA.l destbufferend,A4
0002B5BE <AmiBlitz3.ab3@12962>    BCC.w writeword__over
0002B5C0 <AmiBlitz3.ab3@12963>   MOVE.w D1,(A4)+
0002B5C6 <AmiBlitz3.ab3@12966>   MOVE.l A4,destpointer
0002B5CA <AmiBlitz3.ab3@12967>   CMPA.l bigpc(PC),A4
0002B5CE <AmiBlitz3.ab3@12968>    BHI.w writeword__nbp
0002B5D0 <AmiBlitz3.ab3@12969> RTS
0002B5D6 <AmiBlitz3.ab3@12972>   ADDQ.l #1,destpointer
0002B5DE <AmiBlitz3.ab3@12973>   BCLR #$0,destpointer+3
0002B5E4 <AmiBlitz3.ab3@12974>   MOVEA.l destpointer,A4
0002B5EA <AmiBlitz3.ab3@12975>   CMPA.l destbufferend,A4
0002B5EE <AmiBlitz3.ab3@12976>    BCC.w writeword__over
0002B5F0 <AmiBlitz3.ab3@12977>   MOVE.w D1,(A4)+
0002B5F6 <AmiBlitz3.ab3@12978>   MOVE.l A4,destpointer
0002B5FA <AmiBlitz3.ab3@12979>   CMPA.l bigpc(PC),A4
0002B5FE <AmiBlitz3.ab3@12980>    BHI.w writeword__nbp
0002B600 <AmiBlitz3.ab3@12981> RTS
0002B606 <AmiBlitz3.ab3@12984>   TST.w cfetchmode
0002B60A <AmiBlitz3.ab3@12985>   BNE.w writeword__nbp2
0002B610 <AmiBlitz3.ab3@12986>   MOVE.l A4,bigpc
0002B612 <AmiBlitz3.ab3@12989> RTS
0002B61A <AmiBlitz3.ab3@12992>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B61C <AmiBlitz3.ab3@12993>   ADDQ.w #2,A4
0002B622 <AmiBlitz3.ab3@12994>   CLR.b fast
0002B628 <AmiBlitz3.ab3@12995>   CLR.b fpu
0002B62E <AmiBlitz3.ab3@12996>   CLR.b iee
0002B632 <AmiBlitz3.ab3@12997> BRA.w writeword__ms
0002B638 <AmiBlitz3.ab3@13001>   MOVEA.l destpointer,A4
0002B63E <AmiBlitz3.ab3@13002>   CMPA.l destbufferend,A4
0002B642 <AmiBlitz3.ab3@13003>    BCC.w writebyte__over
0002B644 <AmiBlitz3.ab3@13004>   MOVE.b D1,(A4)+
0002B64A <AmiBlitz3.ab3@13007>   MOVE.l A4,destpointer
0002B64E <AmiBlitz3.ab3@13008>   CMPA.l bigpc(PC),A4
0002B652 <AmiBlitz3.ab3@13009>    BHI.w writebyte__nbp
0002B654 <AmiBlitz3.ab3@13010> RTS
0002B65A <AmiBlitz3.ab3@13013>   TST.w cfetchmode
0002B65E <AmiBlitz3.ab3@13014>    BNE.w writebyte__nbp2
0002B664 <AmiBlitz3.ab3@13015>   MOVE.l A4,bigpc
0002B666 <AmiBlitz3.ab3@13018> RTS
0002B66E <AmiBlitz3.ab3@13021>   MOVE.w #-1,dontwrite
0002B670 <AmiBlitz3.ab3@13022>   ADDQ.w #1,A4
0002B676 <AmiBlitz3.ab3@13023>   CLR.b fast
0002B67C <AmiBlitz3.ab3@13024>   CLR.b fpu
0002B682 <AmiBlitz3.ab3@13025>   CLR.b iee
0002B686 <AmiBlitz3.ab3@13026> BRA.w writebyte__ms
0002B68A <AmiBlitz3.ab3@13029> bigpc:   Ds.l 1
0002B68C <AmiBlitz3.ab3@13033>   MOVE.w (A0)+,D1
0002B690 <AmiBlitz3.ab3@13034>   BSR.w writeword
0002B692 <AmiBlitz3.ab3@13037>     CMPA.l A1,A0
0002B696 <AmiBlitz3.ab3@13038>     BCC.w pokecode__done
0002B698 <AmiBlitz3.ab3@13039>       MOVE.w (A0)+,D1
0002B69C <AmiBlitz3.ab3@13040>       BSR.w writeword
0002B6A0 <AmiBlitz3.ab3@13041> BRA.w pokecode__loop
0002B6A2 <AmiBlitz3.ab3@13044> RTS
0002B6A4 <AmiBlitz3.ab3@13047>   MOVE.w (A0)+,D1
0002B6A8 <AmiBlitz3.ab3@13048>   BSR.w writeword
0002B6AA <AmiBlitz3.ab3@13049>   CMPA.l A1,A0
0002B6AE <AmiBlitz3.ab3@13050>   BCS.w pokecode2
0002B6B0 <AmiBlitz3.ab3@13051> RTS
0002B6B6 <AmiBlitz3.ab3@13057>   TST.b iniffcommand
0002B6BA <AmiBlitz3.ab3@13058>   BEQ 'l1
0002B6BE <AmiBlitz3.ab3@13059>     MOVE.w #$4880,D1
0002B6C4 <AmiBlitz3.ab3@13060>     OR.w regnum,D1
0002B6C8 <AmiBlitz3.ab3@13061>     BSR writeword
0002B6CA <AmiBlitz3.ab3@13064> RTS
0002B6CE <AmiBlitz3.ab3@13067>   BSR.w convert_byte_to_word
0002B6D4 <AmiBlitz3.ab3@13070>   TST.b iee
0002B6D8 <AmiBlitz3.ab3@13071>   BEQ 'old
0002B6DC <AmiBlitz3.ab3@13072>   CMP.b #5,d2
0002B6E0 <AmiBlitz3.ab3@13073>   BEQ wtof
0002B6E4 <AmiBlitz3.ab3@13076>   MOVE.w #$48C0,D1
0002B6EA <AmiBlitz3.ab3@13077>   OR.w regnum,D1
0002B6EE <AmiBlitz3.ab3@13078> BRA.w writeword
0002B6F0 <AmiBlitz3.ab3@13081>   MOVEQ #0,d0
0002B6F6 <AmiBlitz3.ab3@13082>   MOVE.w regnum,d0
0002B6F8 <AmiBlitz3.ab3@13083>   ASL.l #7,d0
0002B6FE <AmiBlitz3.ab3@13084>   MOVE.l #$f2005000,d1
0002B700 <AmiBlitz3.ab3@13085>   OR.l d0,d1
0002B702 <AmiBlitz3.ab3@13086>   ASL.l #1,d0
0002B704 <AmiBlitz3.ab3@13087>   ASL.l #8,d0
0002B706 <AmiBlitz3.ab3@13088>   OR.l d0,d1
0002B70A <AmiBlitz3.ab3@13089> BRA writelong
0002B70E <AmiBlitz3.ab3@13093>   BSR.w convert_byte_to_word
0002B712 <AmiBlitz3.ab3@13096>   MOVE.w #$4840,D1
0002B718 <AmiBlitz3.ab3@13097>   OR.w regnum,D1
0002B71C <AmiBlitz3.ab3@13098>    BSR.w writeword
0002B720 <AmiBlitz3.ab3@13099>   MOVE.w #$4240,D1
0002B726 <AmiBlitz3.ab3@13100>   OR.w regnum,D1
0002B72A <AmiBlitz3.ab3@13101> BRA.w writeword
0002B72E <AmiBlitz3.ab3@13105>   CMP.w #$ffdc,d1
0002B732 <AmiBlitz3.ab3@13106>   BNE 'negfpu
0002B734 <AmiBlitz3.ab3@13107>   MOVEQ #0,d0
0002B73A <AmiBlitz3.ab3@13108>   MOVE.w regnum,d0
0002B73C <AmiBlitz3.ab3@13109>   ASL.l #7,d0
0002B742 <AmiBlitz3.ab3@13110>   MOVE.l #$f2004000,d1
0002B744 <AmiBlitz3.ab3@13111>   OR.l d0,d1
0002B746 <AmiBlitz3.ab3@13112>   ASL.l #1,d0
0002B748 <AmiBlitz3.ab3@13113>   ASL.l #8,d0
0002B74A <AmiBlitz3.ab3@13114>   OR.l d0,d1
0002B74E <AmiBlitz3.ab3@13115> BRA writelong
0002B750 <AmiBlitz3.ab3@13119>   MOVEQ #0,d1
0002B756 <AmiBlitz3.ab3@13120>   MOVE.w regnum,d1                                         ;fpu neg
0002B758 <AmiBlitz3.ab3@13121>   ASL.l #7,d1
0002B75E <AmiBlitz3.ab3@13122>   OR.l #$f200001a,d1
0002B760 <AmiBlitz3.ab3@13123>   MOVE.l d0,-(a7)
0002B762 <AmiBlitz3.ab3@13124>   MOVEQ #0,d0
0002B768 <AmiBlitz3.ab3@13125>   MOVE.w regnum,d0
0002B76A <AmiBlitz3.ab3@13126>   ASL.l #8,d0
0002B76C <AmiBlitz3.ab3@13127>   ASL.l #2,d0
0002B76E <AmiBlitz3.ab3@13128>   OR.l d0,d1
0002B770 <AmiBlitz3.ab3@13129>   MOVE.l (a7)+,d0
0002B774 <AmiBlitz3.ab3@13130> BRA writelong
0002B77A <AmiBlitz3.ab3@13133>    TST.b iee
0002B77E <AmiBlitz3.ab3@13134>    BNE wtof
0002B782 <AmiBlitz3.ab3@13135>    BSR.w convert_byte_to_long
0002B786 <AmiBlitz3.ab3@13138>    MOVE.w #$FFDC,D1
0002B78C <AmiBlitz3.ab3@13141>    TST.b iee
0002B790 <AmiBlitz3.ab3@13142>    BNE ltof
0002B796 <AmiBlitz3.ab3@13143>    MOVE.w D1,libjsr+2
0002B79A <AmiBlitz3.ab3@13144>    BSR.w JL_0_AD40
0002B79C <AmiBlitz3.ab3@13145>   MOVE.l D4,D1
0002B7A0 <AmiBlitz3.ab3@13146>    BSR.w JL_0_AD38
0002B7A4 <AmiBlitz3.ab3@13147>   MOVE.w #$C900,D1
0002B7A8 <AmiBlitz3.ab3@13148>    BSR.w Atokejsr
0002B7AC <AmiBlitz3.ab3@13149>    BSR.w JL_0_A352
0002B7B2 <AmiBlitz3.ab3@13150>   MOVE.l libjsr,D1
0002B7B6 <AmiBlitz3.ab3@13151>    BSR.w writelong
0002B7BA <AmiBlitz3.ab3@13152>    BSR.w JL_0_A36E
0002B7BC <AmiBlitz3.ab3@13153>   MOVE.l D5,D1
0002B7C0 <AmiBlitz3.ab3@13154> BRA.w JL_0_AD38
0002B7C2 <AmiBlitz3.ab3@13157> RTS
0002B7C6 <AmiBlitz3.ab3@13160>   MOVE.w #$C317,D1
0002B7CC <AmiBlitz3.ab3@13161>   TST.b typecheck
0002B7D0 <AmiBlitz3.ab3@13162>   BEQ 'l1
0002B7D6 <AmiBlitz3.ab3@13163>    TST.b notypecheck
0002B7DA <AmiBlitz3.ab3@13164>    BNE 'l1
0002B7E0 <AmiBlitz3.ab3@13165>    TST.l lasttoken
0002B7E6 <AmiBlitz3.ab3@13172>   TST.b debugmode
0002B7EA <AmiBlitz3.ab3@13173>    BEQ.w JL_0_9696
0002B7F2 <AmiBlitz3.ab3@13174>   BTST #$7,overflowcheck
0002B7F6 <AmiBlitz3.ab3@13175>    BEQ.w JL_0_9696
0002B7FC <AmiBlitz3.ab3@13176>   TST.w cfetchmode
0002B800 <AmiBlitz3.ab3@13177>    BNE.w JL_0_9696
0002B806 <AmiBlitz3.ab3@13178>   TST.w regnum
0002B80A <AmiBlitz3.ab3@13179>    BEQ.w JL_0_968A
0002B80C <AmiBlitz3.ab3@13180>   MOVE.w D1,-(A7)
0002B810 <AmiBlitz3.ab3@13181>   MOVE.w JL_0_9698(PC),D1
0002B814 <AmiBlitz3.ab3@13182>    BSR.w writeword
0002B81A <AmiBlitz3.ab3@13183>   MOVE.w regnum,D1
0002B81E <AmiBlitz3.ab3@13184>   OR.w L_0_969C(PC),D1
0002B822 <AmiBlitz3.ab3@13185>    BSR.w writeword
0002B824 <AmiBlitz3.ab3@13186>   MOVE.w (A7)+,D1
0002B828 <AmiBlitz3.ab3@13187>    BSR.w JL_0_968A
0002B82C <AmiBlitz3.ab3@13188>   MOVE.w L_0_969A(PC),D1
0002B830 <AmiBlitz3.ab3@13189> BRA.w writeword
0002B834 <AmiBlitz3.ab3@13193>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B838 <AmiBlitz3.ab3@13194>    BSR.w Atokejsr
0002B83C <AmiBlitz3.ab3@13195>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B83E <AmiBlitz3.ab3@13198> RTS
0002B840 <AmiBlitz3.ab3@13201>   MOVE.l D0,-(A7)
0002B842 <AmiBlitz3.ab3@13204>   MOVE.l (A7)+,D0
0002B844 <AmiBlitz3.ab3@13207>   MOVE.l D0,D0
0002B848 <AmiBlitz3.ab3@13210>   BSR.w convert_word_to_long
0002B84E <AmiBlitz3.ab3@13211>   TST.b iee
0002B852 <AmiBlitz3.ab3@13212>   BEQ 'old
0002B856 <AmiBlitz3.ab3@13213>   CMP.b #5,d2
0002B85A <AmiBlitz3.ab3@13214>   BNE 'old
0002B85C <AmiBlitz3.ab3@13215> RTS
0002B860 <AmiBlitz3.ab3@13218> BRA.w JL_0_9600
0002B864 <AmiBlitz3.ab3@13222>   MOVE.w #$C316,D1
0002B86A <AmiBlitz3.ab3@13223>   TST.b typecheck
0002B86E <AmiBlitz3.ab3@13224>   BEQ 'l1
0002B874 <AmiBlitz3.ab3@13225>   TST.b peekaddrsize
0002B878 <AmiBlitz3.ab3@13226>   BNE 'l1
0002B87E <AmiBlitz3.ab3@13227>   TST.b notypecheck
0002B882 <AmiBlitz3.ab3@13228>   BNE 'l1
0002B888 <AmiBlitz3.ab3@13229>   TST.l lasttoken
0002B88C <AmiBlitz3.ab3@13235> BRA.w JL_0_963A
0002B890 <AmiBlitz3.ab3@13239>   MOVE.w #$C318,D1
0002B896 <AmiBlitz3.ab3@13240>   TST.b typecheck
0002B89A <AmiBlitz3.ab3@13241>   BEQ 'l1
0002B8A0 <AmiBlitz3.ab3@13242>   TST.b peekaddrsize
0002B8A4 <AmiBlitz3.ab3@13243>   BNE 'l1
0002B8AA <AmiBlitz3.ab3@13244>   TST.b notypecheck
0002B8AE <AmiBlitz3.ab3@13245>   BNE 'l1
0002B8B4 <AmiBlitz3.ab3@13246>   TST.l lasttoken
0002B8B8 <AmiBlitz3.ab3@13252> BRA.w JL_0_963A
0002B8BC <AmiBlitz3.ab3@13256>   MOVE.w #$C318,D1
0002B8C2 <AmiBlitz3.ab3@13257>   TST.b typecheck
0002B8C6 <AmiBlitz3.ab3@13258>   BEQ 'l1
0002B8CC <AmiBlitz3.ab3@13259>   TST.b notypecheck
0002B8D0 <AmiBlitz3.ab3@13260>   BNE 'l1
0002B8D6 <AmiBlitz3.ab3@13261>   TST.l lasttoken
0002B8DA <AmiBlitz3.ab3@13267>   BSR.w JL_0_963A
0002B8DE <AmiBlitz3.ab3@13268> BRA.w convert_word_to_quick
0002B8E2 <AmiBlitz3.ab3@13272> BRA.w JL_0_9600
0002B8E4 <AmiBlitz3.ab3@13276> RTS
0002B8E8 <AmiBlitz3.ab3@13280>   MOVE.w #$C319,D1
0002B8EE <AmiBlitz3.ab3@13281>   TST.b typecheck
0002B8F2 <AmiBlitz3.ab3@13282>   BEQ 'l1
0002B8F8 <AmiBlitz3.ab3@13283>   TST.b notypecheck
0002B8FC <AmiBlitz3.ab3@13284>   BNE 'l1
0002B902 <AmiBlitz3.ab3@13285>   TST.l lasttoken
0002B906 <AmiBlitz3.ab3@13292>   BSR.w JL_0_963A
0002B90A <AmiBlitz3.ab3@13295>   MOVE.w #$4240,D1
0002B910 <AmiBlitz3.ab3@13296>   OR.w regnum,D1
0002B914 <AmiBlitz3.ab3@13297>   BSR.w writeword
0002B918 <AmiBlitz3.ab3@13298>   MOVE.w #$4840,D1
0002B91E <AmiBlitz3.ab3@13299>   OR.w regnum,D1
0002B922 <AmiBlitz3.ab3@13300> BRA.w writeword
0002B926 <AmiBlitz3.ab3@13304> BRA.w JL_0_96D0
0002B92A <AmiBlitz3.ab3@13308>   BSR.w JL_0_96D0
0002B92E <AmiBlitz3.ab3@13309> BRA.w convert_word_to_long
0002B930 <AmiBlitz3.ab3@13314>   MOVEQ #0,d0
0002B936 <AmiBlitz3.ab3@13315>   MOVE.w regnum,d0
0002B938 <AmiBlitz3.ab3@13316>   ASL.l #7,d0
0002B93E <AmiBlitz3.ab3@13317>   MOVE.l #$f2004000,d1
0002B940 <AmiBlitz3.ab3@13318>   OR.l d0,d1
0002B942 <AmiBlitz3.ab3@13319>   ASL.l #1,d0
0002B944 <AmiBlitz3.ab3@13320>   ASL.l #8,d0
0002B946 <AmiBlitz3.ab3@13321>   OR.l d0,d1
0002B94A <AmiBlitz3.ab3@13322>   BSR writelong
0002B950 <AmiBlitz3.ab3@13323>   MOVE.w regnum,d0
0002B952 <AmiBlitz3.ab3@13324>   ASL.l #7,d0
0002B958 <AmiBlitz3.ab3@13325>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B95A <AmiBlitz3.ab3@13326>   OR.w d0,d1
0002B95E <AmiBlitz3.ab3@13327>   BSR writelong
0002B964 <AmiBlitz3.ab3@13328>   MOVE.l #$37800000,d1
0002B968 <AmiBlitz3.ab3@13329>   BSR writelong
0002B96A <AmiBlitz3.ab3@13330> RTS
0002B970 <AmiBlitz3.ab3@13334>   TST.b iee
0002B974 <AmiBlitz3.ab3@13335>   BNE qtof
0002B978 <AmiBlitz3.ab3@13336>   MOVE.w #$D300,D1
0002B97A <AmiBlitz3.ab3@13339>   MOVE.w D1,-(A7)
0002B97E <AmiBlitz3.ab3@13340>    BSR.w JL_0_AD40
0002B980 <AmiBlitz3.ab3@13341>   MOVE.l D4,D1
0002B984 <AmiBlitz3.ab3@13342>    BSR.w JL_0_AD38
0002B988 <AmiBlitz3.ab3@13343>    BSR.w JL_0_A352
0002B98A <AmiBlitz3.ab3@13344>   MOVE.w (A7)+,D1
0002B98E <AmiBlitz3.ab3@13345>    BSR.w Atokejsr
0002B992 <AmiBlitz3.ab3@13346>    BSR.w JL_0_A36E
0002B994 <AmiBlitz3.ab3@13347>   MOVE.l D5,D1
0002B998 <AmiBlitz3.ab3@13348> BRA.w JL_0_AD38
0002B99A <AmiBlitz3.ab3@13352> RTS
0002B9A0 <AmiBlitz3.ab3@13355>   TST.b typecheck
0002B9A4 <AmiBlitz3.ab3@13356>   BEQ 'l1
0002B9AA <AmiBlitz3.ab3@13357>   TST.b notypecheck
0002B9AE <AmiBlitz3.ab3@13358>   BNE 'l1
0002B9B4 <AmiBlitz3.ab3@13359>   TST.l lasttoken
0002B9BA <AmiBlitz3.ab3@13364>   TST.b iee
0002B9BE <AmiBlitz3.ab3@13365>   BNE ftol
0002B9C2 <AmiBlitz3.ab3@13366>   MOVE.w #$C31A,D1
0002B9C6 <AmiBlitz3.ab3@13367>   BSR.w JL_0_963A
0002B9CA <AmiBlitz3.ab3@13368>   BSR.w JL_0_974A
0002B9CE <AmiBlitz3.ab3@13369> BRA.w convert_long_to_byte
0002B9D0 <AmiBlitz3.ab3@13373> RTS
0002B9D6 <AmiBlitz3.ab3@13376>   TST.b typecheck
0002B9DA <AmiBlitz3.ab3@13377>   BEQ 'l1
0002B9E0 <AmiBlitz3.ab3@13378>   TST.b notypecheck
0002B9E4 <AmiBlitz3.ab3@13379>   BNE 'l1
0002B9EA <AmiBlitz3.ab3@13380>   TST.l lasttoken
0002B9F0 <AmiBlitz3.ab3@13385>   TST.b iee
0002B9F4 <AmiBlitz3.ab3@13386>   BNE ftol
0002B9F8 <AmiBlitz3.ab3@13387>   MOVE.w #$C31B,D1
0002B9FC <AmiBlitz3.ab3@13388>   BSR.w JL_0_963A
0002BA00 <AmiBlitz3.ab3@13389>   BSR.w JL_0_974A
0002BA04 <AmiBlitz3.ab3@13390> BRA.w convert_long_to_word
0002BA06 <AmiBlitz3.ab3@13394> RTS
0002BA0C <AmiBlitz3.ab3@13397>   TST.b iee
0002BA10 <AmiBlitz3.ab3@13398>   BNE ftol
0002BA14 <AmiBlitz3.ab3@13399>   MOVE.w #$C31C,D1
0002BA18 <AmiBlitz3.ab3@13400>   BSR.w JL_0_963A
0002BA1C <AmiBlitz3.ab3@13403>   MOVE.w #$FFE2,D1
0002BA20 <AmiBlitz3.ab3@13404> BRA.w JL_0_9604
0002BA22 <AmiBlitz3.ab3@13407>   MOVE.l d0,-(a7)
0002BA24 <AmiBlitz3.ab3@13408>   MOVEQ #0,d0
0002BA2A <AmiBlitz3.ab3@13409>   MOVE.w regnum,d0
0002BA2C <AmiBlitz3.ab3@13410>   ASL.l #7,d0
0002BA32 <AmiBlitz3.ab3@13411>   MOVE.l #$f2006000,d1
0002BA34 <AmiBlitz3.ab3@13412>   OR.l d0,d1
0002BA36 <AmiBlitz3.ab3@13413>   ASL.l #1,d0
0002BA38 <AmiBlitz3.ab3@13414>   ASL.l #8,d0
0002BA3A <AmiBlitz3.ab3@13415>   OR.l d0,d1
0002BA3C <AmiBlitz3.ab3@13416>   MOVE.l (a7)+,d0
0002BA40 <AmiBlitz3.ab3@13417> BRA writelong
0002BA42 <AmiBlitz3.ab3@13421>   MOVE.l d0,-(a7)
0002BA44 <AmiBlitz3.ab3@13422>   MOVEQ #0,d0
0002BA4A <AmiBlitz3.ab3@13423>   MOVE.l #$f23c4023,d1
0002BA50 <AmiBlitz3.ab3@13424>   MOVE.w regnum,d0
0002BA52 <AmiBlitz3.ab3@13425>   ASL.l #7,d0
0002BA54 <AmiBlitz3.ab3@13426>   OR.l d0,d1
0002BA58 <AmiBlitz3.ab3@13427>   BSR writelong
0002BA5E <AmiBlitz3.ab3@13428>   MOVE.l #$00010000,d1
0002BA62 <AmiBlitz3.ab3@13429>   BSR writelong
0002BA68 <AmiBlitz3.ab3@13430>   MOVE.w regnum,d0
0002BA6A <AmiBlitz3.ab3@13431>   ASL.l #7,d0
0002BA70 <AmiBlitz3.ab3@13432>   MOVE.l #$f2006000,d1
0002BA72 <AmiBlitz3.ab3@13433>   OR.l d0,d1
0002BA74 <AmiBlitz3.ab3@13434>   ASL.l #1,d0
0002BA76 <AmiBlitz3.ab3@13435>   ASL.l #8,d0
0002BA78 <AmiBlitz3.ab3@13436>   OR.l d0,d1
0002BA7C <AmiBlitz3.ab3@13437>   BSR writelong
0002BA7E <AmiBlitz3.ab3@13438>   MOVE.l (a7)+,d0
0002BA80 <AmiBlitz3.ab3@13439> RTS
0002BA82 <AmiBlitz3.ab3@13443> RTS
0002BA88 <AmiBlitz3.ab3@13447>   TST.b iee
0002BA8C <AmiBlitz3.ab3@13448>   BNE ftoq
0002BA90 <AmiBlitz3.ab3@13449>   MOVE.w #$C31B,D1
0002BA94 <AmiBlitz3.ab3@13450>   BSR.w JL_0_963A
0002BA98 <AmiBlitz3.ab3@13451>   MOVE.w #$D301,D1
0002BA9C <AmiBlitz3.ab3@13452> BRA.w JL_0_96FC
0002BAA2 <AmiBlitz3.ab3@13458>    TST.b blitzparloop
0002BAA6 <AmiBlitz3.ab3@13459>    BNE 'l1
0002BAAC <AmiBlitz3.ab3@13460>    TST.b funcparloop
0002BAB0 <AmiBlitz3.ab3@13461>    BNE 'l1
0002BAB4 <AmiBlitz3.ab3@13462>    BRA error_convert_types
0002BABC <AmiBlitz3.ab3@13465>   CMP.b #2,optistring
0002BAC0 <AmiBlitz3.ab3@13466>   BEQ JLrts
0002BAC6 <AmiBlitz3.ab3@13467>   MOVE.w stol,D1
0002BACA <AmiBlitz3.ab3@13468>   BSR.w writeword
0002BAD2 <AmiBlitz3.ab3@13469>   CMPI.w #$2,sbgot
0002BAD6 <AmiBlitz3.ab3@13470>   BCS.w sbtolong
0002BADA <AmiBlitz3.ab3@13471>   MOVE.w ceos(PC),D1
0002BADE <AmiBlitz3.ab3@13472>   BSR.w writeword
0002BAE4 <AmiBlitz3.ab3@13475>   MOVE.w regnum,D1
0002BAE6 <AmiBlitz3.ab3@13476>   LSL.w #8,D1
0002BAE8 <AmiBlitz3.ab3@13477>   LSL.w #1,D1
0002BAF0 <AmiBlitz3.ab3@13478>   CMPI.w #$2,sbgot
0002BAF4 <AmiBlitz3.ab3@13479>   BCS.w JL_0_98E8
0002BAFA <AmiBlitz3.ab3@13480>   MOVE.w a2offset,D3
0002BB00 <AmiBlitz3.ab3@13481>   SUB.w thisstuse,D3
0002BB04 <AmiBlitz3.ab3@13482>   CMP.w #$6,D3
0002BB08 <AmiBlitz3.ab3@13483>   BNE.w JL_0_98D4b
0002BB0E <AmiBlitz3.ab3@13484>   OR.w movestst2,D1
0002BB12 <AmiBlitz3.ab3@13485>   BSR.w writeword
0002BB18 <AmiBlitz3.ab3@13486>   LEA movestst2+2,A0
0002BB1E <AmiBlitz3.ab3@13487>   LEA movestst2f,A1
0002BB22 <AmiBlitz3.ab3@13488> BRA.w pokecode2
0002BB28 <AmiBlitz3.ab3@13492>   OR.w movea7dn,D1
0002BB2C <AmiBlitz3.ab3@13493>   BSR.w writeword
0002BB32 <AmiBlitz3.ab3@13494>   MOVE.l #0,D1
0002BB36 <AmiBlitz3.ab3@13495> BRA.w writeword
0002BB3C <AmiBlitz3.ab3@13499>   ADDQ.w #1,fuckpos
0002BB40 <AmiBlitz3.ab3@13500>   BSR.w writeconvertcode
0002BB46 <AmiBlitz3.ab3@13501>   SUBQ.w #1,fuckpos
0002BB48 <AmiBlitz3.ab3@13503> RTS
0002BB4A <AmiBlitz3.ab3@13507>   MOVE.w D3,D1
0002BB4E <AmiBlitz3.ab3@13508>   CMP.w #7,d1
0002BB52 <AmiBlitz3.ab3@13509>   BLE 'ok
0002BB58 <AmiBlitz3.ab3@13510>   JMP errorinternalconvert
0002BB5A <AmiBlitz3.ab3@13511> 'ok  SUBQ.w #1,D1
0002BB5E <AmiBlitz3.ab3@13512>   MULU #$7,D1
0002BB60 <AmiBlitz3.ab3@13513>   ADD.w D2,D1
0002BB62 <AmiBlitz3.ab3@13514>   SUBQ.w #1,D1
0002BB64 <AmiBlitz3.ab3@13515>   LSL.w #2,D1
0002BB6A <AmiBlitz3.ab3@13516>   LEA convtable,A0
0002BB6E <AmiBlitz3.ab3@13517>   MOVE.l $0(A0,D1.W),D1
0002BB72 <AmiBlitz3.ab3@13518>   BEQ.w JL_0_97A2
0002BB74 <AmiBlitz3.ab3@13519>     MOVEA.l D1,A0
0002BB78 <AmiBlitz3.ab3@13520>     CMP.b #$ff,d3
0002BB7C <AmiBlitz3.ab3@13521>     BEQ JL_0_97A2
0002BB7E <AmiBlitz3.ab3@13522> JMP (A0)
0002BB80 <AmiBlitz3.ab3@13525> RTS
0002BB84 <AmiBlitz3.ab3@13528> usedfrom:  Ds.l 1
0002BB88 <AmiBlitz3.ab3@13535>   CMP.w #"\",D0
0002BB8C <AmiBlitz3.ab3@13536>   BNE.w JL_0_97C2
0002BB90 <AmiBlitz3.ab3@13537>     CMP.b #"\",(a5)
0002BB94 <AmiBlitz3.ab3@13538>     BNE 'first
0002BB9A <AmiBlitz3.ab3@13539>       MOVE.l A5,usedfrom
0002BBA0 <AmiBlitz3.ab3@13540>       LEA path2,A5
0002BBA4 <AmiBlitz3.ab3@13541> BRA 'g1
0002BBA6 <AmiBlitz3.ab3@13544>     SUBQ.w #1,A5
0002BBAC <AmiBlitz3.ab3@13545>   MOVE.l A5,usedfrom
0002BBB2 <AmiBlitz3.ab3@13546>   LEA usedpath,A5                                          ;read path
0002BBB6 <AmiBlitz3.ab3@13549>   BSR.w get1bytemain
0002BBBC <AmiBlitz3.ab3@13552>   CLR.w flagmask
0002BBC0 <AmiBlitz3.ab3@13553>   CMP.w #$2A,D0
0002BBC4 <AmiBlitz3.ab3@13554>    BNE.w JL_0_983A
0002BBCC <AmiBlitz3.ab3@13555>   MOVE.w #$0001,flagmask
0002BBD0 <AmiBlitz3.ab3@13557>    BSR.w getparameter2
0002BBD4 <AmiBlitz3.ab3@13560>    BEQ.w syntaxerr
0002BBD8 <AmiBlitz3.ab3@13561>   CMP.w #$28,D0
0002BBDC <AmiBlitz3.ab3@13562>    BEQ.w JL_0_9830
0002BBE0 <AmiBlitz3.ab3@13563>   CMP.w #$2E,D0
0002BBE4 <AmiBlitz3.ab3@13564>    BEQ.w JL_0_980C
0002BBE8 <AmiBlitz3.ab3@13565>   CMP.w #$24,D0
0002BBEC <AmiBlitz3.ab3@13566>    BNE.w JL_0_9838
0002BBF4 <AmiBlitz3.ab3@13567>   ORI.w #$8,flagmask
0002BBF8 <AmiBlitz3.ab3@13568>    BSR.w storeloc
0002BBFC <AmiBlitz3.ab3@13569>    BSR.w get1bytemain
0002BC00 <AmiBlitz3.ab3@13570> BRA.w JL_0_9822
0002BC04 <AmiBlitz3.ab3@13574>   BSR.w storeloc
0002BC06 <AmiBlitz3.ab3@13575>   MOVE.w D2,-(A7)
0002BC0C <AmiBlitz3.ab3@13576>   LEA namebuff2,A1
0002BC10 <AmiBlitz3.ab3@13577>    BSR.w makename3
0002BC14 <AmiBlitz3.ab3@13578>    BEQ.w syntaxerr
0002BC16 <AmiBlitz3.ab3@13579>   MOVE.w (A7)+,D2
0002BC18 <AmiBlitz3.ab3@13582>    MOVE.w D0,D1
0002BC1C <AmiBlitz3.ab3@13583>    BSR.w resloc
0002BC20 <AmiBlitz3.ab3@13584>    CMP.w #$28,D1
0002BC24 <AmiBlitz3.ab3@13585>    BNE.w JL_0_9838
0002BC2C <AmiBlitz3.ab3@13588>   ORI.w #$2,flagmask
0002BC2E <AmiBlitz3.ab3@13591> RTS
0002BC32 <AmiBlitz3.ab3@13595>   CMP.w #$40,D0
0002BC36 <AmiBlitz3.ab3@13596>    BNE.w JL_0_984E
0002BC3E <AmiBlitz3.ab3@13597>   MOVE.w #$0005,flagmask
0002BC42 <AmiBlitz3.ab3@13598> BRA.w JL_0_97D8
0002BC46 <AmiBlitz3.ab3@13602>   BSR.w makename2
0002BC4A <AmiBlitz3.ab3@13603> BRA.w JL_0_97DC
0002BC4E <AmiBlitz3.ab3@13607>   MOVE.w #$FED3,D1
0002BC52 <AmiBlitz3.ab3@13608>    BSR.w uselib
0002BC58 <AmiBlitz3.ab3@13609>   LEA pusha3,A0
0002BC5E <AmiBlitz3.ab3@13610>   LEA pusha3f,A1
0002BC62 <AmiBlitz3.ab3@13611> BRA.w pokecode
0002BC66 <AmiBlitz3.ab3@13615>   MOVE.w #$FED3,D1
0002BC6A <AmiBlitz3.ab3@13616>    BSR.w uselib
0002BC70 <AmiBlitz3.ab3@13617>   LEA pulla3,A0
0002BC76 <AmiBlitz3.ab3@13618>   LEA pulla3f,A1
0002BC7A <AmiBlitz3.ab3@13619> BRA.w pokecode
0002BC7C <AmiBlitz3.ab3@13623> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002BC84 <AmiBlitz3.ab3@13628>     CMP.b #2,optistring
0002BC88 <AmiBlitz3.ab3@13629>    BEQ 'l10
0002BC8C <AmiBlitz3.ab3@13630>    MOVE.w ceos(PC),D1
0002BC90 <AmiBlitz3.ab3@13631>    BSR.w writeword                                         ;clr.b (a3)
0002BC96 <AmiBlitz3.ab3@13634>   MOVE.w regnum,D1
0002BC98 <AmiBlitz3.ab3@13635>   LSL.w #8,D1
0002BC9A <AmiBlitz3.ab3@13636>   LSL.w #1,D1
0002BCA2 <AmiBlitz3.ab3@13637>   CMPI.w #$2,sbgot
0002BCA6 <AmiBlitz3.ab3@13638>    BCS.w JL_0_98E8
0002BCAC <AmiBlitz3.ab3@13639>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002BCB2 <AmiBlitz3.ab3@13640>   SUB.w thisstuse,D3
0002BCB6 <AmiBlitz3.ab3@13641>   CMP.w #$6,D3
0002BCBA <AmiBlitz3.ab3@13642>    BNE.w JL_0_98D4
0002BCC0 <AmiBlitz3.ab3@13643>   OR.w movestst2,D1
0002BCC4 <AmiBlitz3.ab3@13644>    BSR.w writeword
0002BCCA <AmiBlitz3.ab3@13645>   LEA movestst2+2,A0
0002BCD0 <AmiBlitz3.ab3@13646>   LEA movestst2f,A1
0002BCD4 <AmiBlitz3.ab3@13647> BRA.w pokecode2
0002BCDA <AmiBlitz3.ab3@13651>    OR.w movea7dn,D1
0002BCDE <AmiBlitz3.ab3@13652>    BSR.w writeword
0002BCE4 <AmiBlitz3.ab3@13653>   MOVE.l movea7dn+2,D1
0002BCE8 <AmiBlitz3.ab3@13665>   BSR writelong
0002BCF0 <AmiBlitz3.ab3@13668>    CMP.w #6,regnum
0002BCF4 <AmiBlitz3.ab3@13669>    BEQ 'l1
0002BCFA <AmiBlitz3.ab3@13670>    TST.w stackpar
0002BCFE <AmiBlitz3.ab3@13671>    BNE 'l1
0002BD04 <AmiBlitz3.ab3@13672>    TST.b funcparloop
0002BD08 <AmiBlitz3.ab3@13673>    BEQ 'l1
0002BD0E <AmiBlitz3.ab3@13674>    MOVE.l #$48780000,d1
0002BD12 <AmiBlitz3.ab3@13675>    BSR writelong
0002BD14 <AmiBlitz3.ab3@13679> RTS
0002BD16 <AmiBlitz3.ab3@13684>      MOVE.l d1,-(a7)
0002BD1E <AmiBlitz3.ab3@13685>      CMP.w #6,regnum
0002BD22 <AmiBlitz3.ab3@13686>      BEQ 'l1
0002BD28 <AmiBlitz3.ab3@13687>      TST.w stackpar
0002BD2C <AmiBlitz3.ab3@13688>      BNE 'l1
0002BD32 <AmiBlitz3.ab3@13689>      TST.b funcparloop
0002BD36 <AmiBlitz3.ab3@13690>      BEQ 'l1
0002BD3C <AmiBlitz3.ab3@13691>      MOVE.l #$48780000,d1
0002BD40 <AmiBlitz3.ab3@13692>      BSR writelong
0002BD42 <AmiBlitz3.ab3@13695>      MOVE.l (a7)+,d1
0002BD48 <AmiBlitz3.ab3@13697>    OR.w movestdn,D1
0002BD4C <AmiBlitz3.ab3@13698>    BSR.w writeword
0002BD50 <AmiBlitz3.ab3@13699>   MOVE.w #$FED3,D1
0002BD54 <AmiBlitz3.ab3@13700>    BSR.w uselib
0002BD58 <AmiBlitz3.ab3@13701>   MOVE.w $A(A1),D1
0002BD5C <AmiBlitz3.ab3@13702> BRA.w writeword
0002BD5E <AmiBlitz3.ab3@13705> unknown:    Ds.w 1
0002BD64 <AmiBlitz3.ab3@13708> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002BD68 <AmiBlitz3.ab3@13709> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002BD6E <AmiBlitz3.ab3@13710>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002BD74 <AmiBlitz3.ab3@13716>   TST.b debugmode
0002BD78 <AmiBlitz3.ab3@13717>   BEQ.w sharreval
0002BD7C <AmiBlitz3.ab3@13718>  BSR.w arreval
0002BD80 <AmiBlitz3.ab3@13721>   MOVE.w somecode(PC),D1
0002BD86 <AmiBlitz3.ab3@13722>   OR.w regnum,D1
0002BD8A <AmiBlitz3.ab3@13723>    BSR.w writeword
0002BD8C <AmiBlitz3.ab3@13724>   MOVEQ.l #$01,D1
0002BD8E <AmiBlitz3.ab3@13725>   SWAP D1
0002BD92 <AmiBlitz3.ab3@13726>    BSR.w writelong
0002BD96 <AmiBlitz3.ab3@13727>   MOVE.l somecode2(PC),D1
0002BD9A <AmiBlitz3.ab3@13728>    BSR.w writelong
0002BD9E <AmiBlitz3.ab3@13729>   MOVE.w #$C309,D1
0002BDA2 <AmiBlitz3.ab3@13730> BRA.w Atokejsr
0002BDA4 <AmiBlitz3.ab3@13734>   MOVEQ.l #$02,D2
0002BDA6 <AmiBlitz3.ab3@13735>   MOVEQ.l #$00,D1
0002BDA8 <AmiBlitz3.ab3@13736>   MOVEQ.l #$00,D3
0002BDAC <AmiBlitz3.ab3@13737> BRA.w maineval2
0002BDAE <AmiBlitz3.ab3@13741>   MOVEQ.l #$03,D2
0002BDB0 <AmiBlitz3.ab3@13742>   MOVEQ.l #$00,D1
0002BDB2 <AmiBlitz3.ab3@13743>   MOVEQ.l #$00,D3
0002BDB8 <AmiBlitz3.ab3@13744>   MOVE.b notypecheck,-(a7)
0002BDC0 <AmiBlitz3.ab3@13745>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002BDC6 <AmiBlitz3.ab3@13746>   JSR maineval2
0002BDCC <AmiBlitz3.ab3@13747>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002BDCE <AmiBlitz3.ab3@13748>   RTS
0002BDD8 <AmiBlitz3.ab3@13752>   MOVE.w oldqflag,instringon
0002BDDE <AmiBlitz3.ab3@13753>   MOVEA.l lastsourcepos,A5
0002BDE0 <AmiBlitz3.ab3@13754>   MOVEQ.l #-$01,D1
0002BDE2 <AmiBlitz3.ab3@13755>   MOVEQ.l #-$01,D3
0002BDE6 <AmiBlitz3.ab3@13756> BRA.w peval
0002BDF0 <AmiBlitz3.ab3@13761>   MOVE.w oldqflag,instringon
0002BDF6 <AmiBlitz3.ab3@13762>   MOVEA.l lastsourcepos,A5
0002BDF8 <AmiBlitz3.ab3@13765>   MOVEQ.l #-$01,D1
0002BDFA <AmiBlitz3.ab3@13766>   MOVEQ.l #$00,D3
0002BE00 <AmiBlitz3.ab3@13767>   MOVE.l leftsidetype,-(a7)
0002BE06 <AmiBlitz3.ab3@13768>   MOVE.l rightsidetype,-(a7)
0002BE0C <AmiBlitz3.ab3@13769>   MOVE.w leftsideflagmask,-(a7)
0002BE12 <AmiBlitz3.ab3@13770>   MOVE.w rightsideflagmask,-(a7)
0002BE18 <AmiBlitz3.ab3@13771>   CLR.l leftsidetype
0002BE1E <AmiBlitz3.ab3@13772>   CLR.l rightsidetype
0002BE24 <AmiBlitz3.ab3@13773>   CLR.w leftsideflagmask
0002BE2A <AmiBlitz3.ab3@13774>   CLR.w rightsideflagmask
0002BE30 <AmiBlitz3.ab3@13775>   JSR maineval
0002BE36 <AmiBlitz3.ab3@13776>   MOVE.w (a7)+,rightsideflagmask
0002BE3C <AmiBlitz3.ab3@13777>   MOVE.w (a7)+,leftsideflagmask
0002BE42 <AmiBlitz3.ab3@13778>   MOVE.l (a7)+,rightsidetype
0002BE48 <AmiBlitz3.ab3@13779>   MOVE.l (a7)+,leftsidetype
0002BE4A <AmiBlitz3.ab3@13780>   RTS
0002BE54 <AmiBlitz3.ab3@13784>   MOVE.w oldqflag,instringon
0002BE5A <AmiBlitz3.ab3@13785>   MOVEA.l lastsourcepos,A5
0002BE5C <AmiBlitz3.ab3@13786>   MOVEQ.l #$00,D1
0002BE5E <AmiBlitz3.ab3@13787>   MOVEQ.l #-$01,D3
0002BE62 <AmiBlitz3.ab3@13788> BRA.w maineval
0002BE64 <AmiBlitz3.ab3@13792>   MOVEQ.l #$01,D1
0002BE66 <AmiBlitz3.ab3@13793>   MOVEQ.l #-$01,D3
0002BE6A <AmiBlitz3.ab3@13794> BRA.w maineval
0002BE74 <AmiBlitz3.ab3@13799>   MOVE.w oldqflag,instringon
0002BE7A <AmiBlitz3.ab3@13800>   MOVEA.l lastsourcepos,A5
0002BE7C <AmiBlitz3.ab3@13803>   MOVEQ.l #$00,D1                                        ;no push
0002BE7E <AmiBlitz3.ab3@13804>   MOVEQ.l #$00,D3
0002BE86 <AmiBlitz3.ab3@13825>    CMPI.w #$6,regnum
0002BE8A <AmiBlitz3.ab3@13826>    BCS.w maineval2
0002BE8C <AmiBlitz3.ab3@13827>    MOVEQ #0,d1
0002BE92 <AmiBlitz3.ab3@13828>    MOVE.l destpointer,a4
0002BE98 <AmiBlitz3.ab3@13830>    CMPA.l destbufferend,A4
0002BE9C <AmiBlitz3.ab3@13831>    BCC.w maineval__l2
0002BEA2 <AmiBlitz3.ab3@13833>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002BEA6 <AmiBlitz3.ab3@13835>    BNE maineval__l2
0002BEAA <AmiBlitz3.ab3@13839> BRA maineval__l1
0002BEAC <AmiBlitz3.ab3@13842>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002BEB4 <AmiBlitz3.ab3@13845>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002BEBA <AmiBlitz3.ab3@13848>   MOVE.w thisstuse,-(A7)
0002BEC4 <AmiBlitz3.ab3@13849>   MOVE.w a2offset,thisstuse
0002BECA <AmiBlitz3.ab3@13850>   MOVE.w stackpar,-(A7)
0002BED0 <AmiBlitz3.ab3@13851>   MOVE.w D1,stackpar
0002BED6 <AmiBlitz3.ab3@13852>   MOVE.w sbgot,-(A7)
0002BEDC <AmiBlitz3.ab3@13853>   CLR.w sbgot
0002BEE0 <AmiBlitz3.ab3@13854>   MOVE.w unknown(PC),-(A7)
0002BEE6 <AmiBlitz3.ab3@13855>   MOVE.w D3,unknown
0002BEE8 <AmiBlitz3.ab3@13856>   MOVE.w D2,-(a7)
0002BEEE <AmiBlitz3.ab3@13857>   MOVE.w d2,mode
0002BEF2 <AmiBlitz3.ab3@13858>    BSR.w eval3
0002BEF4 <AmiBlitz3.ab3@13859>   MOVE.w (a7)+,d3
0002BEF8 <AmiBlitz3.ab3@13860>    BEQ.w maineval__noconv
0002BEFC <AmiBlitz3.ab3@13861>   MOVE.w unknown(PC),D1
0002BF00 <AmiBlitz3.ab3@13862>    BNE.w maineval__noconv
0002BF02 <AmiBlitz3.ab3@13863>   EXG.l D2,D3
0002BF04 <AmiBlitz3.ab3@13864>    MOVE.l a2,-(a7)
0002BF0A <AmiBlitz3.ab3@13865>    TST.b curtemplabel
0002BF0E <AmiBlitz3.ab3@13866>    BEQ maineval2__l10
0002BF14 <AmiBlitz3.ab3@13867>    MOVE.l asmbuff,a2
0002BF1A <AmiBlitz3.ab3@13868>    CMP.w #$c,$8(a2)
0002BF1E <AmiBlitz3.ab3@13869>    BEQ maineval2__l20
0002BF24 <AmiBlitz3.ab3@13870>    CMP.w #$d,$8(a2)
0002BF28 <AmiBlitz3.ab3@13871>    BEQ maineval2__l20
0002BF2A <AmiBlitz3.ab3@13874>   CMP.w d2,d3
0002BF2E <AmiBlitz3.ab3@13875>   BEQ maineval2__l20
0002BF32 <AmiBlitz3.ab3@13876>   BSR.w writeconvertcode
0002BF38 <AmiBlitz3.ab3@13877>   CLR.b doimmediate
0002BF3A <AmiBlitz3.ab3@13880>   MOVE.l (a7)+,a2
0002BF40 <AmiBlitz3.ab3@13883>   MOVE.w (A7)+,unknown
0002BF46 <AmiBlitz3.ab3@13884>   MOVE.w stackpar,D1
0002BF4A <AmiBlitz3.ab3@13885>    BEQ.w maineval__skipme
0002BF4E <AmiBlitz3.ab3@13886>    BMI.w maineval__skipme
0002BF54 <AmiBlitz3.ab3@13890>   MOVE.w regnum,D1
0002BF56 <AmiBlitz3.ab3@13891>   LSL.w #8,D1
0002BF58 <AmiBlitz3.ab3@13892>   LSL.w #1,D1
0002BF5C <AmiBlitz3.ab3@13893>   CMP.w #$7,D2
0002BF60 <AmiBlitz3.ab3@13894>    BNE.w maineval__hi1
0002BF68 <AmiBlitz3.ab3@13895>    CMP.b #2,optistring
0002BF6C <AmiBlitz3.ab3@13896>    BEQ maineval__hi1a
0002BF6E <AmiBlitz3.ab3@13897>   MOVE.w D1,-(A7)
0002BF74 <AmiBlitz3.ab3@13898>   OR.w getstlen,D1
0002BF78 <AmiBlitz3.ab3@13899>    BSR.w writeword
0002BF7A <AmiBlitz3.ab3@13900>   MOVE.w (A7)+,D1
0002BF80 <AmiBlitz3.ab3@13903>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BF84 <AmiBlitz3.ab3@13907>   MOVE.w #$3f3c,d1
0002BF88 <AmiBlitz3.ab3@13908>    BSR.w writeword
0002BF8A <AmiBlitz3.ab3@13912>   MOVE.w d2,d1
0002BF90 <AmiBlitz3.ab3@13913>   MOVE.w d1,libmode
0002BF94 <AmiBlitz3.ab3@13914>    BSR.w writeword
0002BF98 <AmiBlitz3.ab3@13915>   CMP.w #$7,D2
0002BF9C <AmiBlitz3.ab3@13916>    BNE.w maineval__skipme
0002BFA2 <AmiBlitz3.ab3@13917>   MOVE.w putstlen,D1
0002BFA8 <AmiBlitz3.ab3@13918>   OR.w regnum,D1
0002BFAC <AmiBlitz3.ab3@13919>    BSR.w writeword
0002BFB0 <AmiBlitz3.ab3@13922>    CMP.w #$7,D2
0002BFB4 <AmiBlitz3.ab3@13923>    BNE.w maineval__notst
0002BFBC <AmiBlitz3.ab3@13934>    CMP.b #2,optistring
0002BFC0 <AmiBlitz3.ab3@13935>    BEQ maineval__skipme_l10
0002BFC6 <AmiBlitz3.ab3@13936>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BFCA <AmiBlitz3.ab3@13937>    BSR.w sbtolong
0002BFCE <AmiBlitz3.ab3@13938> BRA.w maineval__notst2
0002BFD6 <AmiBlitz3.ab3@13942>     CMP.w #6,regnum
0002BFDA <AmiBlitz3.ab3@13943>     BEQ maineval__skipme_l10_l1
0002BFE0 <AmiBlitz3.ab3@13944>     TST.b funcparloop
0002BFE4 <AmiBlitz3.ab3@13945>     BEQ maineval__skipme_l10_l1
0002BFEA <AmiBlitz3.ab3@13946>     MOVE.l #$48780000,d1
0002BFEE <AmiBlitz3.ab3@13947>     BSR writelong
0002BFF2 <AmiBlitz3.ab3@13950> BRA.w maineval__notst2
0002BFF8 <AmiBlitz3.ab3@13953>   ADDQ.w #2,a2offset
0002BFFC <AmiBlitz3.ab3@13954> BRA maineval__skipme
0002C004 <AmiBlitz3.ab3@13957>   CMPI.w #$2,sbgot
0002C008 <AmiBlitz3.ab3@13958>    BCS.w maineval__notst2                                         ;correct stack
0002C00C <AmiBlitz3.ab3@13959>   MOVE.w ststfix(PC),D1
0002C010 <AmiBlitz3.ab3@13960>    BSR.w writeword
0002C016 <AmiBlitz3.ab3@13963>   MOVE.w (A7)+,sbgot
0002C01C <AmiBlitz3.ab3@13964>   MOVE.w stackpar,D1
0002C020 <AmiBlitz3.ab3@13965>    BPL.w maineval__skip
0002C024 <AmiBlitz3.ab3@13966>    CMP.b #7,d2
0002C028 <AmiBlitz3.ab3@13967>    BEQ maineval__notst2_l1
0002C02E <AmiBlitz3.ab3@13968>   TST.b funcparloop
0002C032 <AmiBlitz3.ab3@13969>   BEQ maineval__notst2_l1
0002C036 <AmiBlitz3.ab3@13970>   CMP.b #5,d2
0002C03A <AmiBlitz3.ab3@13971>   BNE maineval__notst2_skip
0002C040 <AmiBlitz3.ab3@13972>   TST.b fpu
0002C044 <AmiBlitz3.ab3@13973>   BEQ maineval__notst2_skip
0002C04A <AmiBlitz3.ab3@13974>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C050 <AmiBlitz3.ab3@13975>   JSR writelong
0002C054 <AmiBlitz3.ab3@13978>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C05A <AmiBlitz3.ab3@13979>   ADD.w parnum,d1
0002C060 <AmiBlitz3.ab3@13980>   JSR Atokejsr
0002C066 <AmiBlitz3.ab3@13981>    TST.w dontwrite
0002C06A <AmiBlitz3.ab3@13982>    BNE maineval__notst2_l1
0002C070 <AmiBlitz3.ab3@13983>    MOVE.l data1start,d1
0002C076 <AmiBlitz3.ab3@13984>    MOVE.l destpointer,a4
0002C07A <AmiBlitz3.ab3@13985>    ADD.l d1,-4(a4)
0002C080 <AmiBlitz3.ab3@13986>    MOVE.l destpointer,d1
0002C082 <AmiBlitz3.ab3@13987>    SUBQ.l #4,d1
0002C088 <AmiBlitz3.ab3@13988>    SUB.l destbufferstart,d1
0002C08A <AmiBlitz3.ab3@13989>    MOVE.l d2,-(a7)
0002C08C <AmiBlitz3.ab3@13990>    MOVE.l d1,d2
0002C092 <AmiBlitz3.ab3@13991>    JSR addhunkoffset
0002C094 <AmiBlitz3.ab3@13992>    MOVE.l (a7)+,d2
0002C098 <AmiBlitz3.ab3@13993> BRA maineval__skip
0002C09E <AmiBlitz3.ab3@13996>   ADDQ.w #2,a2offset
0002C0A4 <AmiBlitz3.ab3@13997>   MOVE.w pushd0wd,D1
0002C0A8 <AmiBlitz3.ab3@13998>   CMP.w #$3,D2                                             ;write parameter to stack
0002C0AC <AmiBlitz3.ab3@13999>    BCS.w maineval__ok
0002C0B2 <AmiBlitz3.ab3@14000>   ADDQ.w #2,a2offset
0002C0B8 <AmiBlitz3.ab3@14001>   TST.b fpu
0002C0BC <AmiBlitz3.ab3@14002>   BEQ maineval__notst2_nofpu
0002C0C0 <AmiBlitz3.ab3@14003>   CMP.w #5,d2
0002C0C4 <AmiBlitz3.ab3@14004>   BNE maineval__notst2_nofpu
0002C0C6 <AmiBlitz3.ab3@14005>   MOVEQ #0,d1
0002C0CC <AmiBlitz3.ab3@14006>   MOVE.w regnum,d1
0002C0CE <AmiBlitz3.ab3@14007>   ASL.l #7,d1
0002C0D4 <AmiBlitz3.ab3@14008>   OR.l #$f2276400,d1
0002C0D8 <AmiBlitz3.ab3@14009>   BSR writelong
0002C0DC <AmiBlitz3.ab3@14010> BRA maineval__skip
0002C0E2 <AmiBlitz3.ab3@14013>   MOVE.w pushd0l,D1
0002C0E8 <AmiBlitz3.ab3@14016>    OR.w regnum,D1
0002C0EC <AmiBlitz3.ab3@14017>    BSR.w writeword                                         ;nat
0002C0F2 <AmiBlitz3.ab3@14020>   MOVE.w (A7)+,stackpar
0002C0F8 <AmiBlitz3.ab3@14021>   MOVE.w (A7)+,thisstuse
0002C0FA <AmiBlitz3.ab3@14022> RTS
0002C0FC <AmiBlitz3.ab3@14025> thisstuse: Ds.w 1
0002C0FE <AmiBlitz3.ab3@14028> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C100 <AmiBlitz3.ab3@14029> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C104 <AmiBlitz3.ab3@14034>   BSR.w eval4
0002C10E <AmiBlitz3.ab3@14035>   SUBI.l #$12,forthsp
0002C110 <AmiBlitz3.ab3@14036> RTS
0002C112 <AmiBlitz3.ab3@14040>   MOVEQ.l #$01,D1
0002C116 <AmiBlitz3.ab3@14042>       MOVEA.l precsp(PC),A1
0002C118 <AmiBlitz3.ab3@14043>       MOVE.l A0,(A1)+
0002C11A <AmiBlitz3.ab3@14044>       MOVE.w D1,(A1)+
0002C120 <AmiBlitz3.ab3@14045>       MOVE.l A1,precsp
0002C124 <AmiBlitz3.ab3@14046>    BSR.w calcloop
0002C126 <AmiBlitz3.ab3@14047>   TST.w D1
0002C12A <AmiBlitz3.ab3@14048>    BNE.w syntaxerr
0002C130 <AmiBlitz3.ab3@14049>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002C132 <AmiBlitz3.ab3@14050> RTS
0002C136 <AmiBlitz3.ab3@14055>   BSR.w JL_0_9C24
0002C13A <AmiBlitz3.ab3@14058>   MOVEA.l precsp(PC),A1
0002C13C <AmiBlitz3.ab3@14059>   CMP.w -(A1),D1
0002C140 <AmiBlitz3.ab3@14060>    BHI.w JL_0_9B0A
0002C142 <AmiBlitz3.ab3@14061> RTS
0002C146 <AmiBlitz3.ab3@14066>   MOVEA.l precsp(PC),A1
0002C148 <AmiBlitz3.ab3@14067>   MOVE.l A0,(A1)+
0002C14A <AmiBlitz3.ab3@14068>   MOVE.w D1,(A1)+
0002C150 <AmiBlitz3.ab3@14069>   MOVE.l A1,precsp
0002C152 <AmiBlitz3.ab3@14070>   MOVE.w D2,-(A7)
0002C158 <AmiBlitz3.ab3@14071>   ADDQ.w #1,regnum
0002C15C <AmiBlitz3.ab3@14072>    BSR.w calcloop               ;constant optimizer
0002C162 <AmiBlitz3.ab3@14073>   SUBQ.w #1,regnum
0002C164 <AmiBlitz3.ab3@14074>   MOVE.w (A7)+,D3
0002C168 <AmiBlitz3.ab3@14075>   MOVEM.l D1/A0,-(A7)
0002C16C <AmiBlitz3.ab3@14076>    BEQ.w JL_0_9B2E
0002C170 <AmiBlitz3.ab3@14077>    BSR.w JL_0_9770
0002C174 <AmiBlitz3.ab3@14080>   BSR.w popprec
0002C178 <AmiBlitz3.ab3@14081>   BSR.w writecode
0002C17C <AmiBlitz3.ab3@14082>   MOVEA.l forthsp(PC),A0
0002C180 <AmiBlitz3.ab3@14083>   MOVE.w -$2(A0),D1
0002C184 <AmiBlitz3.ab3@14084>   OR.w -$14(A0),D1
0002C188 <AmiBlitz3.ab3@14085>   MOVE.w D1,-$14(A0)
0002C18C <AmiBlitz3.ab3@14086>    BNE.w JL_0_9C0E
0002C192 <AmiBlitz3.ab3@14087>   MOVE.w dontwrite,D1
0002C196 <AmiBlitz3.ab3@14088>    BNE.w JL_0_9C0E
0002C19A <AmiBlitz3.ab3@14089>    MOVEA.l -$24(A0),A0
0002C2D6 <AmiBlitz3.ab3@14091>  !newcalc
0002C2DA <AmiBlitz3.ab3@14092>    BEQ 'l10
0002C2DE <AmiBlitz3.ab3@14093>    MOVEA.l forthsp(PC),A0
0002C2E6 <AmiBlitz3.ab3@14094>    MOVE.w -$18(A0),lasta6
0002C2EE <AmiBlitz3.ab3@14095>    MOVE.l -$1C(A0),lasta6
0002C2F2 <AmiBlitz3.ab3@14096>    MOVEA.l -$24(A0),A0
0002C2F8 <AmiBlitz3.ab3@14097>    MOVE.l A0,destpointer
0002C2FE <AmiBlitz3.ab3@14098>    MOVEA.l _mathffpbase,A6
0002C304 <AmiBlitz3.ab3@14099>    MOVEA.l ffplib,A1
0002C308 <AmiBlitz3.ab3@14100> BRA cont1
0002C30C <AmiBlitz3.ab3@14103>   MOVE.w #$2000,D1
0002C312 <AmiBlitz3.ab3@14104>   OR.w regnum,D1
0002C316 <AmiBlitz3.ab3@14105>    BSR.w writeword
0002C318 <AmiBlitz3.ab3@14106>     MOVEQ #0,d1
0002C31E <AmiBlitz3.ab3@14107>     MOVE.w regnum,D1
0002C320 <AmiBlitz3.ab3@14108>     ASL.l #8,d1
0002C322 <AmiBlitz3.ab3@14109>     ASL.l #2,d1
0002C328 <AmiBlitz3.ab3@14110>     OR.l #$f2000000,d1
0002C32C <AmiBlitz3.ab3@14111>     BSR writelong
0002C330 <AmiBlitz3.ab3@14112>   MOVE.w #$4E75,D1
0002C334 <AmiBlitz3.ab3@14113>    BSR.w writeword
0002C33C <AmiBlitz3.ab3@14114>   MOVE.w -$18(A0),lasta6
0002C344 <AmiBlitz3.ab3@14115>   MOVE.l -$1C(A0),lasta6
0002C348 <AmiBlitz3.ab3@14116>   MOVEA.l -$24(A0),A0
0002C34E <AmiBlitz3.ab3@14117>   MOVE.l A0,destpointer
0002C352 <AmiBlitz3.ab3@14118>   MOVEM.l D2/A5,-(A7)
0002C358 <AmiBlitz3.ab3@14119>   MOVEA.l _mathffpbase,A6
0002C35E <AmiBlitz3.ab3@14120>   MOVEA.l ffplib,A1
0002C362 <AmiBlitz3.ab3@14121>   MOVE.w $A(A1),D0
0002C368 <AmiBlitz3.ab3@14122>   LEA _mathffpbase,A5
0002C36A <AmiBlitz3.ab3@14123>   SUBA.w D0,A5
0002C370 <AmiBlitz3.ab3@14124>   JSR Aclearcache                                          ;neg +
0002C376 <AmiBlitz3.ab3@14125>   CLR.l load_var_addr
0002C37C <AmiBlitz3.ab3@14126>   CLR.l imm_addr
0002C382 <AmiBlitz3.ab3@14127>   TST.w dontwrite
0002C386 <AmiBlitz3.ab3@14128>   BNE '1
0002C388 <AmiBlitz3.ab3@14129>   JSR (A0)                                                 ;calc constant inline expression
0002C38C <AmiBlitz3.ab3@14132>   MOVEM.l (A7)+,D2/A5
0002C392 <AmiBlitz3.ab3@14135>   MOVE.b d2,isconstantvalue
0002C398 <AmiBlitz3.ab3@14136>   MOVE.l d0,lastconstantvalue
0002C39E <AmiBlitz3.ab3@14137>   MOVE.w regnum,D1
0002C3A0 <AmiBlitz3.ab3@14138>   LSL.w #8,D1
0002C3A2 <AmiBlitz3.ab3@14139>   LSL.w #1,D1
0002C3A6 <AmiBlitz3.ab3@14140>   ORI.w #$203C,D1
0002C3AA <AmiBlitz3.ab3@14141>   CMP.w #$3,D2
0002C3AE <AmiBlitz3.ab3@14142>    BCC.w JL_0_9BCE
0002C3B2 <AmiBlitz3.ab3@14143>   ORI.w #$1000,D1
0002C3B6 <AmiBlitz3.ab3@14144>    BSR.w writeword
0002C3B8 <AmiBlitz3.ab3@14145>   MOVE.w D0,D1
0002C3BC <AmiBlitz3.ab3@14146>    BSR.w writeword
0002C3C0 <AmiBlitz3.ab3@14147> BRA.w JL_0_9BD8
0002C3C6 <AmiBlitz3.ab3@14151>   TST.b iee                                                ;fpu constant
0002C3CA <AmiBlitz3.ab3@14152>   BEQ 'l10
0002C3CE <AmiBlitz3.ab3@14153>   CMP.b #5,d2
0002C3D2 <AmiBlitz3.ab3@14154>   BNE 'l10
0002C3D4 <AmiBlitz3.ab3@14155>   MOVEQ #0,d1
0002C3DA <AmiBlitz3.ab3@14156>   MOVE.w regnum,D1
0002C3DC <AmiBlitz3.ab3@14157>   ASL.l #7,d1
0002C3E2 <AmiBlitz3.ab3@14158>   OR.l #$f23c5400,d1
0002C3E6 <AmiBlitz3.ab3@14159>   BSR writelong
0002C3E8 <AmiBlitz3.ab3@14160>   SUBQ.l #8,a7
0002C3EE <AmiBlitz3.ab3@14161>   fmove.d fp0,0(a7)
0002C3F0 <AmiBlitz3.ab3@14162>   MOVE.l (a7)+,d1
0002C3F4 <AmiBlitz3.ab3@14163>   BSR writelong
0002C3F6 <AmiBlitz3.ab3@14164>   MOVE.l (a7)+,d1
0002C3FA <AmiBlitz3.ab3@14165>   BSR writelong
0002C3FE <AmiBlitz3.ab3@14166> BRA JL_0_9BD8
0002C402 <AmiBlitz3.ab3@14169>   BSR.w writeword
0002C404 <AmiBlitz3.ab3@14170>   MOVE.l D0,D1
0002C408 <AmiBlitz3.ab3@14171>   BSR.w writelong
0002C40C <AmiBlitz3.ab3@14174>   MOVEA.l forthsp(PC),A0
0002C410 <AmiBlitz3.ab3@14175>   MOVEA.l -$20(A0),A3
0002C416 <AmiBlitz3.ab3@14176>   MOVEA.l hunkoffsetbase,A2
0002C41C <AmiBlitz3.ab3@14177>   MOVE.l A3,hunkoffsetbase
0002C422 <AmiBlitz3.ab3@14178>   MOVEA.l _execbase,A6
0002C424 <AmiBlitz3.ab3@14181>   CMPA.l A3,A2
0002C428 <AmiBlitz3.ab3@14182>   BEQ.w JL_0_9C0A
0002C42E <AmiBlitz3.ab3@14183>   SUBQ.l #1,hunkoffsetcounter
0002C430 <AmiBlitz3.ab3@14184>   MOVEA.l A2,A1
0002C432 <AmiBlitz3.ab3@14185>   MOVEA.l (A2),A2
0002C434 <AmiBlitz3.ab3@14186>   MOVEQ.l #$8,D0
0002C43A <AmiBlitz3.ab3@14187>   MOVE.l mempool2,a0
0002C43E <AmiBlitz3.ab3@14188>    JSR _FreePooled(A6)
0002C442 <AmiBlitz3.ab3@14189> BRA.w JL_0_9BF0
0002C446 <AmiBlitz3.ab3@14193>   MOVEA.l forthsp(PC),A0
0002C44A <AmiBlitz3.ab3@14196>   LEA -$12(A0),A0
0002C450 <AmiBlitz3.ab3@14197>   MOVE.l A0,forthsp
0002C454 <AmiBlitz3.ab3@14198>   MOVEM.l (A7)+,D1/A0
0002C458 <AmiBlitz3.ab3@14199>   BSR.w reget
0002C45C <AmiBlitz3.ab3@14200> BRA.w JL_0_9AFE
0002C460 <AmiBlitz3.ab3@14204>   BSR.w JL_0_A386
0002C462 <AmiBlitz3.ab3@14205>   TST.w d0
0002C466 <AmiBlitz3.ab3@14206>   BEQ JL_0_9C42
0002C46A <AmiBlitz3.ab3@14207>   CMP.b #",",d0
0002C46E <AmiBlitz3.ab3@14208>   BEQ JL_0_9C42
0002C472 <AmiBlitz3.ab3@14209>   CMP.b #"@",d0                                            ;expandline @@
0002C476 <AmiBlitz3.ab3@14210>   BEQ JL_0_9C42
0002C47C <AmiBlitz3.ab3@14211>   LEA operators,A0
0002C47E <AmiBlitz3.ab3@14214>    TST.w (A0)
0002C482 <AmiBlitz3.ab3@14215>    BEQ.w JL_0_9C42
0002C484 <AmiBlitz3.ab3@14216>   CMP.w (A0),D0
0002C488 <AmiBlitz3.ab3@14217>    BEQ.w JL_0_9C46a
0002C48C <AmiBlitz3.ab3@14218>   LEA $20(A0),A0
0002C490 <AmiBlitz3.ab3@14219> BRA.w JL_0_9C2E
0002C492 <AmiBlitz3.ab3@14223>   MOVEQ.l #$00,D1
0002C494 <AmiBlitz3.ab3@14224> RTS
0002C498 <AmiBlitz3.ab3@14228>   CMP.w #$3C,D0
0002C49C <AmiBlitz3.ab3@14229>    BNE.w JL_0_9C70
0002C4A0 <AmiBlitz3.ab3@14230>    BSR.w get1bytemain
0002C4A4 <AmiBlitz3.ab3@14231>   CMP.w #$3D,D0
0002C4A8 <AmiBlitz3.ab3@14232>    BNE.w JL_0_9C64
0002C4AE <AmiBlitz3.ab3@14233>   LEA ople,A0
0002C4B2 <AmiBlitz3.ab3@14234> BRA.w JL_0_9CCA
0002C4B6 <AmiBlitz3.ab3@14238>   CMP.w #$3E,D0
0002C4BA <AmiBlitz3.ab3@14239>    BNE.w JL_0_9C96
0002C4BE <AmiBlitz3.ab3@14240> BRA.w JL_0_9CC4
0002C4C2 <AmiBlitz3.ab3@14244>   CMP.w #$3E,D0
0002C4C6 <AmiBlitz3.ab3@14245>    BNE.w JL_0_9C9E
0002C4CA <AmiBlitz3.ab3@14246>    BSR.w get1bytemain
0002C4CE <AmiBlitz3.ab3@14247>   CMP.w #$3D,D0
0002C4D2 <AmiBlitz3.ab3@14248>    BNE.w JL_0_9C8E
0002C4D8 <AmiBlitz3.ab3@14249>   LEA opge,A0
0002C4DC <AmiBlitz3.ab3@14250> BRA.w JL_0_9CCA
0002C4E0 <AmiBlitz3.ab3@14254>   CMP.w #$3C,D0
0002C4E4 <AmiBlitz3.ab3@14255>    BEQ.w JL_0_9CC4
0002C4EE <AmiBlitz3.ab3@14259>     MOVE.w oldqflag,instringon
0002C4F4 <AmiBlitz3.ab3@14260>     MOVEA.l lastsourcepos,A5
0002C4F8 <AmiBlitz3.ab3@14261> BRA.w JL_0_9CCA
0002C4FC <AmiBlitz3.ab3@14265>   CMP.w #$3D,D0
0002C500 <AmiBlitz3.ab3@14266>    BNE.w JL_0_9CCA
0002C504 <AmiBlitz3.ab3@14267>    BSR.w get1bytemain
0002C508 <AmiBlitz3.ab3@14268>   CMP.w #$3E,D0
0002C50C <AmiBlitz3.ab3@14269>    BNE.w JL_0_9CBC
0002C512 <AmiBlitz3.ab3@14270>   LEA opge,A0
0002C516 <AmiBlitz3.ab3@14271> BRA.w JL_0_9CCA
0002C51A <AmiBlitz3.ab3@14275>   CMP.w #$3C,D0
0002C51E <AmiBlitz3.ab3@14276>   BNE.w JL_0_9C96
0002C524 <AmiBlitz3.ab3@14279>   LEA opne,A0
0002C528 <AmiBlitz3.ab3@14282>   MOVE.w $1E(A0),D1
0002C52A <AmiBlitz3.ab3@14283> RTS
0002C52C <AmiBlitz3.ab3@14290>   MOVE.w d2,d1
0002C52E <AmiBlitz3.ab3@14291>   SUBQ.w #1,D1
0002C532 <AmiBlitz3.ab3@14292>    BMI.w illoperr
0002C534 <AmiBlitz3.ab3@14293>   LSL.w #2,D1
0002C538 <AmiBlitz3.ab3@14294>   MOVE.l $2(A0,D1.W),D1
0002C53C <AmiBlitz3.ab3@14295>    BEQ.w illoperr
0002C53E <AmiBlitz3.ab3@14296>   MOVEA.l D1,A0
0002C540 <AmiBlitz3.ab3@14299> JMP (A0)
0002C544 <AmiBlitz3.ab3@14315>   MOVEA.l precsp(PC),A1
0002C54A <AmiBlitz3.ab3@14316>   CMPA.l #precstackf,A1
0002C54E <AmiBlitz3.ab3@14317>    BCC.w pserr
0002C550 <AmiBlitz3.ab3@14318>   MOVE.w -(A1),D1
0002C552 <AmiBlitz3.ab3@14319>   MOVEA.l -(A1),A0
0002C558 <AmiBlitz3.ab3@14320>   MOVE.l A1,precsp
0002C55A <AmiBlitz3.ab3@14321> RTS
0002C55E <AmiBlitz3.ab3@14324> precsp:      Dc.l precstack
0002C65A <AmiBlitz3.ab3@14325> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C6DE <AmiBlitz3.ab3@14326>              Ds.l 33
0002C6E0 <AmiBlitz3.ab3@14332> mseq:  SEQ D0
0002C6E2 <AmiBlitz3.ab3@14333> msne:    SNE D0
0002C6E4 <AmiBlitz3.ab3@14334> mslt:    SLT D0
0002C6E6 <AmiBlitz3.ab3@14335> msle:    SLE D0
0002C6E8 <AmiBlitz3.ab3@14336> msgt:    SGT D0
0002C6EA <AmiBlitz3.ab3@14337> msge:    SGE D0
0002C6EC <AmiBlitz3.ab3@14339> cmp0:    CMP.b D0,D0
0002C6EE <AmiBlitz3.ab3@14340> cmp1:    CMP.w D0,D0
0002C6F0 <AmiBlitz3.ab3@14341> cmp2:    CMP.l D0,D0
0002C6F4 <AmiBlitz3.ab3@14345>   MOVE.w cmp0(PC),D1
0002C6F8 <AmiBlitz3.ab3@14346> BRA.w doeqcmp2                                            ;writecompare
0002C6FC <AmiBlitz3.ab3@14350>   MOVE.w cmp0(PC),D1
0002C700 <AmiBlitz3.ab3@14351> BRA.w donecmp2
0002C704 <AmiBlitz3.ab3@14355>   MOVE.w cmp0(PC),D1
0002C708 <AmiBlitz3.ab3@14356> BRA.w doltcmp2
0002C70C <AmiBlitz3.ab3@14360>   MOVE.w cmp0(PC),D1
0002C710 <AmiBlitz3.ab3@14361> BRA.w dolecmp2
0002C714 <AmiBlitz3.ab3@14365>   MOVE.w cmp0(PC),D1
0002C718 <AmiBlitz3.ab3@14366> BRA.w dogtcmp2
0002C71C <AmiBlitz3.ab3@14371>   MOVE.w cmp0(PC),D1
0002C720 <AmiBlitz3.ab3@14372> BRA.w dogecmp2
0002C724 <AmiBlitz3.ab3@14376>   MOVE.w cmp1(PC),D1
0002C728 <AmiBlitz3.ab3@14377> BRA.w doeqcmp2
0002C72C <AmiBlitz3.ab3@14381>   MOVE.w cmp1(PC),D1
0002C730 <AmiBlitz3.ab3@14382> BRA.w donecmp2
0002C734 <AmiBlitz3.ab3@14386>   MOVE.w cmp1(PC),D1
0002C738 <AmiBlitz3.ab3@14387> BRA.w doltcmp2
0002C73C <AmiBlitz3.ab3@14391>   MOVE.w cmp1(PC),D1
0002C740 <AmiBlitz3.ab3@14392> BRA.w dolecmp2
0002C744 <AmiBlitz3.ab3@14396>   MOVE.w cmp1(PC),D1
0002C748 <AmiBlitz3.ab3@14397> BRA.w dogtcmp2
0002C74C <AmiBlitz3.ab3@14402>   MOVE.w cmp1(PC),D1
0002C750 <AmiBlitz3.ab3@14403> BRA.w dogecmp2
0002C754 <AmiBlitz3.ab3@14407>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C758 <AmiBlitz3.ab3@14408> BRA doeqcmp2
0002C75C <AmiBlitz3.ab3@14411>   MOVE.w cmp2(PC),D1
0002C760 <AmiBlitz3.ab3@14412> BRA donecmp2
0002C764 <AmiBlitz3.ab3@14416>   MOVE.w cmp2(PC),D1
0002C768 <AmiBlitz3.ab3@14417> BRA.w doltcmp2
0002C76C <AmiBlitz3.ab3@14421>   MOVE.w cmp2(PC),D1
0002C770 <AmiBlitz3.ab3@14422> BRA.w dolecmp2
0002C774 <AmiBlitz3.ab3@14426>   MOVE.w cmp2(PC),D1
0002C778 <AmiBlitz3.ab3@14427> BRA.w dogtcmp2
0002C77C <AmiBlitz3.ab3@14431>   MOVE.w cmp2(PC),D1
0002C780 <AmiBlitz3.ab3@14432> BRA.w dogecmp2
0002C782 <AmiBlitz3.ab3@14435> cfregat:  Ds.w 1
0002C788 <AmiBlitz3.ab3@14439>   MOVE.w D1,libjsr+2
0002C78C <AmiBlitz3.ab3@14440>    BSR.w JL_0_AD40
0002C78E <AmiBlitz3.ab3@14441>   MOVE.l D4,D1
0002C792 <AmiBlitz3.ab3@14442>    BSR.w JL_0_AD38
0002C796 <AmiBlitz3.ab3@14443>   MOVE.w #$C900,D1
0002C79A <AmiBlitz3.ab3@14444>    BSR.w Atokejsr
0002C79E <AmiBlitz3.ab3@14445>    BSR.w JL_0_A352
0002C7A4 <AmiBlitz3.ab3@14446>   MOVE.l libjsr,D1
0002C7A8 <AmiBlitz3.ab3@14447>    BSR.w writelong
0002C7B2 <AmiBlitz3.ab3@14448>   MOVE.w regnum,cfregat
0002C7B8 <AmiBlitz3.ab3@14449>   CLR.w regnum
0002C7BA <AmiBlitz3.ab3@14450> RTS
0002C7C4 <AmiBlitz3.ab3@14454>   MOVE.w cfregat,regnum
0002C7C8 <AmiBlitz3.ab3@14455>    BSR.w JL_0_A36E
0002C7CA <AmiBlitz3.ab3@14456>   MOVE.l D5,D1
0002C7CE <AmiBlitz3.ab3@14457> BRA.w JL_0_AD38
0002C7D0 <AmiBlitz3.ab3@14461>    MOVEQ.l #-$2A,D1
0002C7D6 <AmiBlitz3.ab3@14462>    TST.b fpu
0002C7DA <AmiBlitz3.ab3@14463>    BEQ do_equal_float__nofpu
0002C7DC <AmiBlitz3.ab3@14464>    MOVEQ #0,d1
0002C7E2 <AmiBlitz3.ab3@14465>    MOVE.w regnum,d1
0002C7E4 <AmiBlitz3.ab3@14466>    MOVE.l d1,d2
0002C7E6 <AmiBlitz3.ab3@14467>    ASL.l #7,d1
0002C7E8 <AmiBlitz3.ab3@14468>    ADDQ  #1,d2
0002C7EA <AmiBlitz3.ab3@14469>    ASL.l #8,d2
0002C7EC <AmiBlitz3.ab3@14470>    ASL.l #2,d2
0002C7EE <AmiBlitz3.ab3@14471>    OR.l d2,d1
0002C7F4 <AmiBlitz3.ab3@14472>    OR.l #$f2000038,d1
0002C7FA <AmiBlitz3.ab3@14473>    JSR writelong
0002C7FE <AmiBlitz3.ab3@14474>    MOVE.w #$f240,d1
0002C804 <AmiBlitz3.ab3@14475>    OR.w regnum,d1
0002C808 <AmiBlitz3.ab3@14476>    BSR writeword
0002C80A <AmiBlitz3.ab3@14477>    MOVEQ.l #1,d2
0002C80E <AmiBlitz3.ab3@14478>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C812 <AmiBlitz3.ab3@14479>    BSR writeword
0002C814 <AmiBlitz3.ab3@14480> RTS
0002C818 <AmiBlitz3.ab3@14483>    BSR.w docflib
0002C81C <AmiBlitz3.ab3@14484>    BSR.w doeqcmp
0002C820 <AmiBlitz3.ab3@14485> BRA.w docflib2
0002C822 <AmiBlitz3.ab3@14489>   MOVEQ.l #-$2A,D1
0002C828 <AmiBlitz3.ab3@14490>   TST.b fpu
0002C82C <AmiBlitz3.ab3@14491>    BEQ do_not_equal_float__nofpu
0002C82E <AmiBlitz3.ab3@14492>    MOVEQ #0,d1
0002C834 <AmiBlitz3.ab3@14493>    MOVE.w regnum,d1
0002C836 <AmiBlitz3.ab3@14494>    MOVE.l d1,d2
0002C838 <AmiBlitz3.ab3@14495>    ASL.l #7,d1
0002C83A <AmiBlitz3.ab3@14496>    ADDQ  #1,d2
0002C83C <AmiBlitz3.ab3@14497>    ASL.l #8,d2
0002C83E <AmiBlitz3.ab3@14498>    ASL.l #2,d2
0002C840 <AmiBlitz3.ab3@14499>    OR.l d2,d1
0002C846 <AmiBlitz3.ab3@14500>    OR.l #$f2000038,d1
0002C84C <AmiBlitz3.ab3@14501>    JSR writelong
0002C850 <AmiBlitz3.ab3@14502>    MOVE.w #$f240,d1
0002C856 <AmiBlitz3.ab3@14503>    OR.w regnum,d1
0002C85A <AmiBlitz3.ab3@14504>    BSR writeword
0002C860 <AmiBlitz3.ab3@14505>    MOVE.l #1,d2
0002C864 <AmiBlitz3.ab3@14506>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C868 <AmiBlitz3.ab3@14507>    BSR writeword
0002C86A <AmiBlitz3.ab3@14508> RTS
0002C86E <AmiBlitz3.ab3@14511>    BSR.w docflib
0002C872 <AmiBlitz3.ab3@14512>    BSR.w donecmp
0002C876 <AmiBlitz3.ab3@14513> BRA.w docflib2
0002C878 <AmiBlitz3.ab3@14517>   MOVEQ.l #-$2A,D1
0002C87E <AmiBlitz3.ab3@14518>     TST.b fpu
0002C882 <AmiBlitz3.ab3@14519>    BEQ do_littler_float__nofpu
0002C884 <AmiBlitz3.ab3@14520>    MOVEQ #0,d1
0002C88A <AmiBlitz3.ab3@14521>    MOVE.w regnum,d1
0002C88C <AmiBlitz3.ab3@14522>    MOVE.l d1,d2
0002C88E <AmiBlitz3.ab3@14523>    ASL.l #7,d1
0002C890 <AmiBlitz3.ab3@14524>    ADDQ  #1,d2
0002C892 <AmiBlitz3.ab3@14525>    ASL.l #8,d2
0002C894 <AmiBlitz3.ab3@14526>    ASL.l #2,d2
0002C896 <AmiBlitz3.ab3@14527>    OR.l d2,d1
0002C89C <AmiBlitz3.ab3@14528>    OR.l #$f2000038,d1
0002C8A2 <AmiBlitz3.ab3@14529>    JSR writelong
0002C8A6 <AmiBlitz3.ab3@14530>    MOVE.w #$f240,d1
0002C8AC <AmiBlitz3.ab3@14531>    OR.w regnum,d1
0002C8B0 <AmiBlitz3.ab3@14532>    BSR writeword
0002C8B6 <AmiBlitz3.ab3@14533>    MOVE.l #$1,d2
0002C8BA <AmiBlitz3.ab3@14534>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C8BE <AmiBlitz3.ab3@14535>    BSR writeword
0002C8C0 <AmiBlitz3.ab3@14536> RTS
0002C8C4 <AmiBlitz3.ab3@14539>    BSR.w docflib
0002C8C8 <AmiBlitz3.ab3@14540>    BSR.w doltcmp
0002C8CC <AmiBlitz3.ab3@14541> BRA.w docflib2
0002C8CE <AmiBlitz3.ab3@14545>   MOVEQ.l #-$2A,D1
0002C8D4 <AmiBlitz3.ab3@14546>   TST.b fpu
0002C8D8 <AmiBlitz3.ab3@14547>    BEQ do_littler_equal_float__nofpu
0002C8DA <AmiBlitz3.ab3@14548>    MOVEQ #0,d1
0002C8E0 <AmiBlitz3.ab3@14549>    MOVE.w regnum,d1
0002C8E2 <AmiBlitz3.ab3@14550>    MOVE.l d1,d2
0002C8E4 <AmiBlitz3.ab3@14551>    ASL.l #7,d1
0002C8E6 <AmiBlitz3.ab3@14552>    ADDQ  #1,d2
0002C8E8 <AmiBlitz3.ab3@14553>    ASL.l #8,d2
0002C8EA <AmiBlitz3.ab3@14554>    ASL.l #2,d2
0002C8EC <AmiBlitz3.ab3@14555>    OR.l d2,d1
0002C8F2 <AmiBlitz3.ab3@14556>    OR.l #$f2000038,d1
0002C8F8 <AmiBlitz3.ab3@14557>    JSR writelong
0002C8FC <AmiBlitz3.ab3@14558>    MOVE.w #$f240,d1
0002C902 <AmiBlitz3.ab3@14559>    OR.w regnum,d1
0002C906 <AmiBlitz3.ab3@14560>    BSR writeword
0002C90C <AmiBlitz3.ab3@14561>    MOVE.l #1,d2
0002C910 <AmiBlitz3.ab3@14562>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C914 <AmiBlitz3.ab3@14563>    BSR writeword
0002C916 <AmiBlitz3.ab3@14564> RTS
0002C91A <AmiBlitz3.ab3@14567>    BSR.w docflib
0002C91E <AmiBlitz3.ab3@14568>    BSR.w dolecmp
0002C922 <AmiBlitz3.ab3@14569> BRA.w docflib2
0002C924 <AmiBlitz3.ab3@14573>   MOVEQ.l #-$2A,D1
0002C92A <AmiBlitz3.ab3@14574>    TST.b fpu
0002C92E <AmiBlitz3.ab3@14575>    BEQ do_greater_float__nofpu
0002C930 <AmiBlitz3.ab3@14576>     MOVEQ #0,d1
0002C936 <AmiBlitz3.ab3@14577>    MOVE.w regnum,d1
0002C938 <AmiBlitz3.ab3@14578>    MOVE.l d1,d2
0002C93A <AmiBlitz3.ab3@14579>    ASL.l #7,d1
0002C93C <AmiBlitz3.ab3@14580>    ADDQ  #1,d2
0002C93E <AmiBlitz3.ab3@14581>    ASL.l #8,d2
0002C940 <AmiBlitz3.ab3@14582>    ASL.l #2,d2
0002C942 <AmiBlitz3.ab3@14583>    OR.l d2,d1
0002C948 <AmiBlitz3.ab3@14584>    OR.l #$f2000038,d1
0002C94E <AmiBlitz3.ab3@14585>    JSR writelong
0002C952 <AmiBlitz3.ab3@14586>    MOVE.w #$f240,d1
0002C958 <AmiBlitz3.ab3@14587>    OR.w regnum,d1
0002C95C <AmiBlitz3.ab3@14588>    BSR writeword
0002C962 <AmiBlitz3.ab3@14589>    MOVE.l #1,d2
0002C966 <AmiBlitz3.ab3@14590>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C96A <AmiBlitz3.ab3@14591>    BSR writeword
0002C96C <AmiBlitz3.ab3@14592> RTS
0002C970 <AmiBlitz3.ab3@14595>    BSR.w docflib
0002C974 <AmiBlitz3.ab3@14596>    BSR.w dogtcmp
0002C978 <AmiBlitz3.ab3@14597> BRA.w docflib2
0002C97A <AmiBlitz3.ab3@14601>   MOVEQ.l #-$2A,D1
0002C980 <AmiBlitz3.ab3@14602>  TST.b fpu
0002C984 <AmiBlitz3.ab3@14603>    BEQ do_greater_equal_float__nofpu
0002C986 <AmiBlitz3.ab3@14604>    MOVEQ #0,d1
0002C98C <AmiBlitz3.ab3@14605>    MOVE.w regnum,d1
0002C98E <AmiBlitz3.ab3@14606>    MOVE.l d1,d2
0002C990 <AmiBlitz3.ab3@14607>    ASL.l #7,d1
0002C992 <AmiBlitz3.ab3@14608>    ADDQ  #1,d2
0002C994 <AmiBlitz3.ab3@14609>    ASL.l #8,d2
0002C996 <AmiBlitz3.ab3@14610>    ASL.l #2,d2
0002C998 <AmiBlitz3.ab3@14611>    OR.l d2,d1
0002C99E <AmiBlitz3.ab3@14612>    OR.l #$f2000038,d1
0002C9A4 <AmiBlitz3.ab3@14613>    JSR writelong
0002C9A8 <AmiBlitz3.ab3@14614>    MOVE.w #$f240,d1
0002C9AE <AmiBlitz3.ab3@14615>    OR.w regnum,d1
0002C9B2 <AmiBlitz3.ab3@14616>    BSR writeword
0002C9B8 <AmiBlitz3.ab3@14617>    MOVE.l #1,d2
0002C9BC <AmiBlitz3.ab3@14618>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C9C0 <AmiBlitz3.ab3@14619>    BSR writeword
0002C9C2 <AmiBlitz3.ab3@14620> RTS
0002C9C6 <AmiBlitz3.ab3@14623>    BSR.w docflib
0002C9CA <AmiBlitz3.ab3@14624>    BSR.w dogecmp
0002C9CE <AmiBlitz3.ab3@14625> BRA.w docflib2
0002C9D4 <AmiBlitz3.ab3@14630>   MOVE.l #$CE00,D1
0002C9DA <AmiBlitz3.ab3@14631>    MOVE.l d1,lastinstruction
0002C9DE <AmiBlitz3.ab3@14632>    BSR.w Atokejsr
0002C9E2 <AmiBlitz3.ab3@14633> BRA.w doeqcmp
0002C9E8 <AmiBlitz3.ab3@14637>   MOVE.l #$CE00,D1
0002C9EE <AmiBlitz3.ab3@14638>    MOVE.l d1,lastinstruction
0002C9F2 <AmiBlitz3.ab3@14639>    BSR.w Atokejsr
0002C9F6 <AmiBlitz3.ab3@14640> BRA.w donecmp
0002C9FC <AmiBlitz3.ab3@14644>   MOVE.l #$CE00,D1
0002CA02 <AmiBlitz3.ab3@14645>    MOVE.l d1,lastinstruction
0002CA06 <AmiBlitz3.ab3@14646>    BSR.w Atokejsr
0002CA0A <AmiBlitz3.ab3@14647> BRA.w doltcmp
0002CA10 <AmiBlitz3.ab3@14651>   MOVE.l #$CE00,D1
0002CA16 <AmiBlitz3.ab3@14652>    MOVE.l d1,lastinstruction
0002CA1A <AmiBlitz3.ab3@14653>    BSR.w Atokejsr
0002CA1E <AmiBlitz3.ab3@14654> BRA.w dolecmp
0002CA24 <AmiBlitz3.ab3@14658>   MOVE.l #$CE00,D1
0002CA2A <AmiBlitz3.ab3@14659>    MOVE.l d1,lastinstruction
0002CA2E <AmiBlitz3.ab3@14660>    BSR.w Atokejsr
0002CA32 <AmiBlitz3.ab3@14661> BRA.w dogtcmp
0002CA38 <AmiBlitz3.ab3@14665>   MOVE.l #$CE00,D1
0002CA3E <AmiBlitz3.ab3@14666>    MOVE.l d1,lastinstruction
0002CA42 <AmiBlitz3.ab3@14667>    BSR.w Atokejsr
0002CA46 <AmiBlitz3.ab3@14668> BRA.w dogecmp
0002CA4C <AmiBlitz3.ab3@14673>   TST.b fast                                               ;compare
0002CA50 <AmiBlitz3.ab3@14674>   BEQ cmpit__org
0002CA56 <AmiBlitz3.ab3@14678>   MOVE.l destpointer,a0
0002CA5C <AmiBlitz3.ab3@14679>   SUB.l imm_addr,a0
0002CA62 <AmiBlitz3.ab3@14680>   CMP.l #6,a0
0002CA66 <AmiBlitz3.ab3@14681>   BNE cmpit__l11
0002CA6C <AmiBlitz3.ab3@14682>   MOVE.l imm_addr,a0
0002CA74 <AmiBlitz3.ab3@14683>   CMP.w #$223c,imm_addr
0002CA78 <AmiBlitz3.ab3@14684>   BNE cmpit__org
0002CA7E <AmiBlitz3.ab3@14685>   ADD.w #$8e80,-6(a4)
0002CA84 <AmiBlitz3.ab3@14688>   CLR.l imm_addr
0002CA86 <AmiBlitz3.ab3@14689> RTS
0002CA8C <AmiBlitz3.ab3@14692>   CMP.l #4,a0
0002CA90 <AmiBlitz3.ab3@14693>   BNE cmpit__l10
0002CA94 <AmiBlitz3.ab3@14694>   CMP.b #2,d3
0002CA98 <AmiBlitz3.ab3@14695>   BNE cmpit__l11b
0002CA9E <AmiBlitz3.ab3@14696>   ADD.w #$7e40,-4(a4)
0002CAA0 <AmiBlitz3.ab3@14697> RTS
0002CAA6 <AmiBlitz3.ab3@14700>  ADD.w #$7e00,-4(a4)
0002CAA8 <AmiBlitz3.ab3@14701> RTS
0002CAAE <AmiBlitz3.ab3@14704>    MOVE.l destpointer,a0
0002CAB4 <AmiBlitz3.ab3@14705>    SUB.l load_var_addr,a0
0002CAB8 <AmiBlitz3.ab3@14706>    CMP.w #4,a0
0002CABC <AmiBlitz3.ab3@14707>    BNE cmpit__org
0002CAC0 <AmiBlitz3.ab3@14708>    CMP.b #3,d3
0002CAC4 <AmiBlitz3.ab3@14709>    BCS cmpit__lv1
0002CACA <AmiBlitz3.ab3@14710>    CLR.l load_var_addr
0002CAD0 <AmiBlitz3.ab3@14711>    ADD.w #$9080-$200,-4(a4)
0002CAD2 <AmiBlitz3.ab3@14712> RTS
0002CAD6 <AmiBlitz3.ab3@14715>   CMP.b #2,d3
0002CADA <AmiBlitz3.ab3@14716>    BNE cmpit__org
0002CAE0 <AmiBlitz3.ab3@14717>    CLR.l load_var_addr
0002CAE6 <AmiBlitz3.ab3@14718>    ADD.w #$8040-$200,-4(a4)
0002CAE8 <AmiBlitz3.ab3@14719> RTS
0002CAEE <AmiBlitz3.ab3@14722>   MOVE.w regnum,D3
0002CAF0 <AmiBlitz3.ab3@14723>   OR.w D3,D1
0002CAF2 <AmiBlitz3.ab3@14724>   LSL.w #8,D3
0002CAF4 <AmiBlitz3.ab3@14725>   LSL.w #1,D3
0002CAF6 <AmiBlitz3.ab3@14726>   OR.w D3,D1
0002CAF8 <AmiBlitz3.ab3@14727>   ADDQ.w #1,D1
0002CAFC <AmiBlitz3.ab3@14728> BRA.w writeword
0002CB00 <AmiBlitz3.ab3@14732>    BSR.w cmpit
0002CB04 <AmiBlitz3.ab3@14735>    MOVE.w mseq(PC),D1
0002CB08 <AmiBlitz3.ab3@14736> BRA.w cpoke
0002CB0C <AmiBlitz3.ab3@14740>   BSR.w cmpit
0002CB10 <AmiBlitz3.ab3@14743>   MOVE.w msne(PC),D1
0002CB14 <AmiBlitz3.ab3@14744> BRA.w cpoke
0002CB18 <AmiBlitz3.ab3@14748>   BSR.w cmpit
0002CB1C <AmiBlitz3.ab3@14751>    MOVE.w mslt(PC),D1
0002CB20 <AmiBlitz3.ab3@14752> BRA.w cpoke
0002CB24 <AmiBlitz3.ab3@14756>    BSR.w cmpit
0002CB28 <AmiBlitz3.ab3@14759>    MOVE.w msle(PC),D1
0002CB2C <AmiBlitz3.ab3@14760> BRA.w cpoke
0002CB30 <AmiBlitz3.ab3@14764>    BSR.w cmpit
0002CB34 <AmiBlitz3.ab3@14767>    MOVE.w msgt(PC),D1
0002CB38 <AmiBlitz3.ab3@14768> BRA.w cpoke
0002CB3C <AmiBlitz3.ab3@14772>   BSR.w cmpit
0002CB40 <AmiBlitz3.ab3@14775>    MOVE.w msge(PC),D1
0002CB46 <AmiBlitz3.ab3@14778>    OR.w regnum,D1
0002CB4A <AmiBlitz3.ab3@14779>    CMP.w #5,d2
0002CB4E <AmiBlitz3.ab3@14780>    BNE cpoke__nod0
0002CB52 <AmiBlitz3.ab3@14781>    CMP.w #5,d3
0002CB56 <AmiBlitz3.ab3@14782>    BNE cpoke__nod0
0002CB58 <AmiBlitz3.ab3@14783>    MOVE.l d1,-(a7)
0002CB5E <AmiBlitz3.ab3@14784>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CB62 <AmiBlitz3.ab3@14785>    BSR writelong
0002CB64 <AmiBlitz3.ab3@14786>    MOVE.l (a7)+,d1
0002CB68 <AmiBlitz3.ab3@14789>    BSR.w writeword                                         ;writeseq
0002CB6A <AmiBlitz3.ab3@14790>    MOVEQ.l #1,d2
0002CB70 <AmiBlitz3.ab3@14791>    MOVE.l lasttoken,d1
0002CB76 <AmiBlitz3.ab3@14792>     TST.b fast
0002CB7A <AmiBlitz3.ab3@14793>     BEQ.s cpoke__l11
0002CB80 <AmiBlitz3.ab3@14794>    CMP.l #$800b,d1
0002CB84 <AmiBlitz3.ab3@14795>    BEQ cpoke__l10
0002CB88 <AmiBlitz3.ab3@14798>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CB8E <AmiBlitz3.ab3@14799>   OR.w regnum,D1
0002CB92 <AmiBlitz3.ab3@14800>    BSR.w writeword                                         ;writeext.w
0002CB94 <AmiBlitz3.ab3@14801>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CB96 <AmiBlitz3.ab3@14804> RTS
0002CB9A <AmiBlitz3.ab3@14809>   MOVE.w #$D040,D1
0002CB9C <AmiBlitz3.ab3@14810>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CBA0 <AmiBlitz3.ab3@14811> BRA.w doplus2
0002CBA4 <AmiBlitz3.ab3@14815>   MOVE.w #$D040,D1
0002CBA6 <AmiBlitz3.ab3@14816>   MOVEQ.l #$03,D2                                          ;now a long
0002CBAA <AmiBlitz3.ab3@14817>    BSR.w doplus2
0002CBAE <AmiBlitz3.ab3@14818> BRA.w convert_word_to_long
0002CBB2 <AmiBlitz3.ab3@14822>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CBB4 <AmiBlitz3.ab3@14825>   MOVE.w d1,a1
0002CBBA <AmiBlitz3.ab3@14826>   TST.b fast
0002CBBE <AmiBlitz3.ab3@14827>   BEQ doplus2__l10
0002CBC0 <AmiBlitz3.ab3@14831>   ASR.w #8,d1
0002CBC4 <AmiBlitz3.ab3@14832>   CMP.b #$90,d1
0002CBC8 <AmiBlitz3.ab3@14833>   BEQ doplus2__sub1
0002CBCC <AmiBlitz3.ab3@14834>   CMP.b #$d0,d1
0002CBD0 <AmiBlitz3.ab3@14835>   BNE doplus2__l10
0002CBD4 <AmiBlitz3.ab3@14836>   CMP.b #3,d3
0002CBD8 <AmiBlitz3.ab3@14837>   BCS doplus2__lq10
0002CBDE <AmiBlitz3.ab3@14838>   TST.b quickadd
0002CBE4 <AmiBlitz3.ab3@14842>    MOVE.l destpointer,a0
0002CBEA <AmiBlitz3.ab3@14843>    CLR.b quickadd
0002CBF0 <AmiBlitz3.ab3@14844>    CLR.l load_var_addr
0002CBF6 <AmiBlitz3.ab3@14845>    SUB.l imm_addr,a0
0002CBFA <AmiBlitz3.ab3@14846>    CMP.w #6,a0
0002CBFE <AmiBlitz3.ab3@14847>    BEQ doplus2__li10
0002CC02 <AmiBlitz3.ab3@14848>    CMP.w #4,a0
0002CC06 <AmiBlitz3.ab3@14849>    BNE.s doplus2__li1
0002CC0C <AmiBlitz3.ab3@14850>    CLR.l imm_addr
0002CC12 <AmiBlitz3.ab3@14851>    ADD.w #$a040-$200,-4(a4)
0002CC14 <AmiBlitz3.ab3@14852> RTS
0002CC16 <AmiBlitz3.ab3@14855>    MOVE.l a4,a0
0002CC1C <AmiBlitz3.ab3@14856>    SUB.l load_var_addr,a0
0002CC22 <AmiBlitz3.ab3@14857>    CMP.l #$a,a0
0002CC26 <AmiBlitz3.ab3@14858>    BNE doplus2__l10e
0002CC2C <AmiBlitz3.ab3@14859>    CLR.l load_var_addr
0002CC30 <AmiBlitz3.ab3@14860>    MOVE.w -$8(a4),d1
0002CC36 <AmiBlitz3.ab3@14861>    MOVE.l -$4(a4),-$8(a4)
0002CC3A <AmiBlitz3.ab3@14862>    MOVE.w d1,-$4(a4)
0002CC40 <AmiBlitz3.ab3@14863>    SUB.w #$1980,-$a(a4)
0002CC46 <AmiBlitz3.ab3@14864>    SUBQ.l #2,destpointer
0002CC48 <AmiBlitz3.ab3@14865> RTS
0002CC4E <AmiBlitz3.ab3@14868>   CLR.b quickadd
0002CC52 <AmiBlitz3.ab3@14869> BRA doplus2__l10
0002CC58 <AmiBlitz3.ab3@14872>    CLR.l imm_addr
0002CC5C <AmiBlitz3.ab3@14873>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002CC60 <AmiBlitz3.ab3@14874>    BNE doplus2__doit
0002CC66 <AmiBlitz3.ab3@14875>    SUBQ.l #6,destpointer
0002CC68 <AmiBlitz3.ab3@14876> RTS
0002CC6E <AmiBlitz3.ab3@14879>    ADD.w #$b080-$200,-6(a4)
0002CC70 <AmiBlitz3.ab3@14880> RTS
0002CC76 <AmiBlitz3.ab3@14883>    MOVE.l destpointer,a0
0002CC7C <AmiBlitz3.ab3@14884>    SUB.l load_var_addr,a0
0002CC80 <AmiBlitz3.ab3@14885>    CMP.w #4,a0
0002CC84 <AmiBlitz3.ab3@14886>    BNE doplus2__l10
0002CC88 <AmiBlitz3.ab3@14887>    CMP.b #3,d3
0002CC8C <AmiBlitz3.ab3@14888>    BNE doplus2__lv1
0002CC92 <AmiBlitz3.ab3@14889>    CLR.l load_var_addr
0002CC98 <AmiBlitz3.ab3@14890>    ADD.w #$b080-$200,-4(a4)
0002CC9A <AmiBlitz3.ab3@14891> RTS
0002CC9E <AmiBlitz3.ab3@14894>   CMP.b #2,d3
0002CCA2 <AmiBlitz3.ab3@14895>   BNE doplus2__l10
0002CCA8 <AmiBlitz3.ab3@14896>   CLR.l load_var_addr
0002CCAE <AmiBlitz3.ab3@14897>   ADD.w #$a040-$200,-4(a4)
0002CCB0 <AmiBlitz3.ab3@14898> RTS
0002CCB6 <AmiBlitz3.ab3@14901>   MOVE.w regnum,D3
0002CCB8 <AmiBlitz3.ab3@14902>   MOVE.w a1,d1
0002CCBA <AmiBlitz3.ab3@14903>   OR.w D3,D1
0002CCBC <AmiBlitz3.ab3@14904>   ADDQ.w #1,D1
0002CCBE <AmiBlitz3.ab3@14905>   LSL.w #8,D3
0002CCC0 <AmiBlitz3.ab3@14906>   LSL.w #1,D3
0002CCC2 <AmiBlitz3.ab3@14907>   OR.w D3,D1
0002CCC6 <AmiBlitz3.ab3@14908> BRA.w writeword
0002CCCA <AmiBlitz3.ab3@14911>    CMP.b #3,d3
0002CCCE <AmiBlitz3.ab3@14912>    BCS doplus2__sub1_lq10
0002CCD4 <AmiBlitz3.ab3@14913>    TST.b quickadd
0002CCDA <AmiBlitz3.ab3@14917>    MOVE.l destpointer,a0
0002CCE0 <AmiBlitz3.ab3@14918>    CLR.b quickadd
0002CCE6 <AmiBlitz3.ab3@14919>    CLR.l load_var_addr
0002CCEC <AmiBlitz3.ab3@14920>    SUB.l imm_addr,a0
0002CCF0 <AmiBlitz3.ab3@14921>    CMP.w #6,a0
0002CCF4 <AmiBlitz3.ab3@14922>    BEQ doplus2__sub1_li10
0002CCF8 <AmiBlitz3.ab3@14923>    CMP.w #4,a0
0002CCFC <AmiBlitz3.ab3@14924>    BNE.s doplus2__sub1_li1
0002CD02 <AmiBlitz3.ab3@14925>    CLR.l imm_addr
0002CD08 <AmiBlitz3.ab3@14926>    ADD.w #$6040-$200,-4(a4)
0002CD0A <AmiBlitz3.ab3@14927> RTS
0002CD0C <AmiBlitz3.ab3@14930>    MOVE.l a4,a0
0002CD12 <AmiBlitz3.ab3@14931>     SUB.l load_var_addr,a0
0002CD18 <AmiBlitz3.ab3@14932>     CMP.l #$a,a0
0002CD1C <AmiBlitz3.ab3@14933>     BNE doplus2__sub1_l10e
0002CD22 <AmiBlitz3.ab3@14934>    CLR.l load_var_addr
0002CD26 <AmiBlitz3.ab3@14935>    MOVE.w -$8(a4),d1
0002CD2C <AmiBlitz3.ab3@14936>    MOVE.l -$4(a4),-$8(a4)
0002CD30 <AmiBlitz3.ab3@14937>    MOVE.w d1,-$4(a4)
0002CD36 <AmiBlitz3.ab3@14938>    SUB.w #$1b80,-$a(a4)
0002CD3C <AmiBlitz3.ab3@14939>    SUBQ.l #2,destpointer
0002CD3E <AmiBlitz3.ab3@14940> RTS
0002CD44 <AmiBlitz3.ab3@14943>   CLR.b quickadd
0002CD48 <AmiBlitz3.ab3@14944> BRA doplus2__sub1_l10
0002CD4E <AmiBlitz3.ab3@14947>    CLR.l imm_addr
0002CD54 <AmiBlitz3.ab3@14948>    ADD.w #$7080-$200,-6(a4)
0002CD56 <AmiBlitz3.ab3@14949> RTS
0002CD5C <AmiBlitz3.ab3@14952>    MOVE.l destpointer,a0
0002CD62 <AmiBlitz3.ab3@14953>    SUB.l load_var_addr,a0
0002CD66 <AmiBlitz3.ab3@14954>    CMP.w #4,a0
0002CD6A <AmiBlitz3.ab3@14955>    BNE doplus2__sub1_l10
0002CD6E <AmiBlitz3.ab3@14956>    CMP.b #3,d3
0002CD72 <AmiBlitz3.ab3@14957>    BNE doplus2__sub1_lv1
0002CD78 <AmiBlitz3.ab3@14958>    CLR.l load_var_addr
0002CD7E <AmiBlitz3.ab3@14959>    ADD.w #$7080-$200,-4(a4)
0002CD80 <AmiBlitz3.ab3@14960> RTS
0002CD84 <AmiBlitz3.ab3@14963>    CMP.b #2,d3
0002CD88 <AmiBlitz3.ab3@14964>    BNE doplus2__sub1_l10
0002CD8E <AmiBlitz3.ab3@14965>    CLR.l load_var_addr
0002CD94 <AmiBlitz3.ab3@14966>    ADD.w #$6040-$200,-4(a4)
0002CD96 <AmiBlitz3.ab3@14967> RTS
0002CD9C <AmiBlitz3.ab3@14970>   MOVE.w regnum,D3
0002CD9E <AmiBlitz3.ab3@14971>   MOVE.w a1,d1
0002CDA0 <AmiBlitz3.ab3@14972>   OR.w D3,D1
0002CDA2 <AmiBlitz3.ab3@14973>   ADDQ.w #1,D1
0002CDA4 <AmiBlitz3.ab3@14974>   LSL.w #8,D3
0002CDA6 <AmiBlitz3.ab3@14975>   LSL.w #1,D3
0002CDA8 <AmiBlitz3.ab3@14976>   OR.w D3,D1
0002CDAC <AmiBlitz3.ab3@14977> BRA.w writeword
0002CDAE <AmiBlitz3.ab3@14981>   MOVEQ #0,d0
0002CDB4 <AmiBlitz3.ab3@14982>   MOVE.w regnum,d0
0002CDB6 <AmiBlitz3.ab3@14983>   ADDQ #1,d0
0002CDB8 <AmiBlitz3.ab3@14984>   ASL.w #8,d0
0002CDBA <AmiBlitz3.ab3@14985>   ASL.w #2,d0
0002CDC0 <AmiBlitz3.ab3@14986>   MOVE.l #$f2000022,d1                                     ;fpu add
0002CDC2 <AmiBlitz3.ab3@14987>   OR.l d0,d1
0002CDC8 <AmiBlitz3.ab3@14988>   MOVE.w regnum,d0
0002CDCA <AmiBlitz3.ab3@14989>   ASL.w #7,d0
0002CDCC <AmiBlitz3.ab3@14990>   OR.l d0,d1
0002CDD0 <AmiBlitz3.ab3@14991> BRA.w writelong
0002CDD6 <AmiBlitz3.ab3@14997>   TST.b iee
0002CDDA <AmiBlitz3.ab3@14998>   BNE do_plus_float__fadd1
0002CDDE <AmiBlitz3.ab3@14999>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002CDE4 <AmiBlitz3.ab3@15002>    MOVE.w D1,libjsr+2
0002CDE8 <AmiBlitz3.ab3@15003>    BSR.w JL_0_AD40
0002CDEA <AmiBlitz3.ab3@15004>   MOVE.l D4,D1
0002CDEE <AmiBlitz3.ab3@15005>    BSR.w JL_0_AD38
0002CDF2 <AmiBlitz3.ab3@15006>   MOVE.w #$C900,D1
0002CDF6 <AmiBlitz3.ab3@15007>    BSR.w Atokejsr
0002CDFA <AmiBlitz3.ab3@15008>    BSR.w JL_0_A352
0002CE00 <AmiBlitz3.ab3@15009>   MOVE.l libjsr,D1
0002CE04 <AmiBlitz3.ab3@15010>    BSR.w writelong
0002CE08 <AmiBlitz3.ab3@15011>    BSR.w JL_0_A36E
0002CE0A <AmiBlitz3.ab3@15012>   MOVE.l D5,D1
0002CE0E <AmiBlitz3.ab3@15013> BRA.w JL_0_AD38
0002CE14 <AmiBlitz3.ab3@15017>   MOVE.w regnum,D1
0002CE16 <AmiBlitz3.ab3@15018>   LSL.w #8,D1
0002CE18 <AmiBlitz3.ab3@15019>   LSL.w #1,D1
0002CE1A <AmiBlitz3.ab3@15020>   MOVE.w D1,-(A7)
0002CE1E <AmiBlitz3.ab3@15021>   CMP.w #3072,d1
0002CE22 <AmiBlitz3.ab3@15022>   BEQ 'l1
0002CE28 <AmiBlitz3.ab3@15023>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002CE2C <AmiBlitz3.ab3@15024> BRA 'l2
0002CE30 <AmiBlitz3.ab3@15027>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002CE34 <AmiBlitz3.ab3@15030>    BSR.w writeword
0002CE36 <AmiBlitz3.ab3@15031>   MOVE.w (A7)+,D1
0002CE3C <AmiBlitz3.ab3@15032>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002CE40 <AmiBlitz3.ab3@15033> BRA.w writeword
0002CE44 <AmiBlitz3.ab3@15039>   MOVE.w #$9040,D1
0002CE48 <AmiBlitz3.ab3@15040> BRA.w doplus2
0002CE4C <AmiBlitz3.ab3@15044>   MOVE.w #$9040,D1
0002CE50 <AmiBlitz3.ab3@15045> BRA.w doplus2
0002CE54 <AmiBlitz3.ab3@15049>   MOVE.w #$9080,D1
0002CE58 <AmiBlitz3.ab3@15050> BRA.w doplus2
0002CE5E <AmiBlitz3.ab3@15054>    TST.b iee
0002CE62 <AmiBlitz3.ab3@15055>     BNE do_minus_float__fs1
0002CE66 <AmiBlitz3.ab3@15056>   MOVE.w #$FFB8,D1                                         ;floatsub
0002CE6A <AmiBlitz3.ab3@15057> BRA.w doflib
0002CE6C <AmiBlitz3.ab3@15060>   MOVEQ #0,d0
0002CE72 <AmiBlitz3.ab3@15061>   MOVE.w regnum,d0
0002CE74 <AmiBlitz3.ab3@15062>   ADDQ #1,d0
0002CE76 <AmiBlitz3.ab3@15063>   ASL.w #8,d0
0002CE78 <AmiBlitz3.ab3@15064>   ASL.w #2,d0
0002CE7E <AmiBlitz3.ab3@15065>   MOVE.l #$f2000028,d1
0002CE80 <AmiBlitz3.ab3@15066>   OR.l d0,d1
0002CE86 <AmiBlitz3.ab3@15067>   MOVE.w regnum,d0
0002CE88 <AmiBlitz3.ab3@15068>   ASL.w #7,d0
0002CE8A <AmiBlitz3.ab3@15069>   OR.l d0,d1
0002CE8E <AmiBlitz3.ab3@15070> BRA.w writelong
0002CE92 <AmiBlitz3.ab3@15076>   MOVE.w #$C1C0,D1
0002CE94 <AmiBlitz3.ab3@15077>   MOVEQ.l #$02,D2                                          ;now a word
0002CE98 <AmiBlitz3.ab3@15078> BRA.w doplus2
0002CE9C <AmiBlitz3.ab3@15082>   MOVE.w #$C1C0,D1
0002CE9E <AmiBlitz3.ab3@15083>   MOVEQ.l #$03,D2                                          ;now a long.
0002CEA2 <AmiBlitz3.ab3@15084> BRA.w doplus2
0002CEA6 <AmiBlitz3.ab3@15088>   MOVE.w #$CA00,D1                                         ;quickmul
0002CEAA <AmiBlitz3.ab3@15089> BRA.w domylib
0002CEB0 <AmiBlitz3.ab3@15093>   TST.b fast
0002CEB4 <AmiBlitz3.ab3@15094>   BNE.s 'l10
0002CEB8 <AmiBlitz3.ab3@15095>   MOVE.w #$CA01,D1                                         ;writelongmul
0002CEBC <AmiBlitz3.ab3@15096> BRA.w domylib
0002CEC2 <AmiBlitz3.ab3@15105>    MOVE.l destpointer,a0
0002CEC8 <AmiBlitz3.ab3@15106>    SUB.l imm_addr,a0
0002CECC <AmiBlitz3.ab3@15107>    CMP.w #6,a0
0002CED0 <AmiBlitz3.ab3@15108>    BNE 'li1
0002CED2 <AmiBlitz3.ab3@15109>    MOVEQ.l #2,d1
0002CED4 <AmiBlitz3.ab3@15110>    MOVEQ #1,d3
0002CED8 <AmiBlitz3.ab3@15113>   CMP.l -4(a4),d1
0002CEDC <AmiBlitz3.ab3@15114>    BEQ 'oklsl
0002CEDE <AmiBlitz3.ab3@15115>     LSL.l #1,d1
0002CEE4 <AmiBlitz3.ab3@15116>     ADD.l #1,d3
0002CEEA <AmiBlitz3.ab3@15117>     CMP.l #9,d3
0002CEEE <AmiBlitz3.ab3@15118>     BNE 'ag
0002CEF2 <AmiBlitz3.ab3@15119>    MOVE.w -2(a4),d1
0002CEF6 <AmiBlitz3.ab3@15120>    BSR writeword
0002CEFC <AmiBlitz3.ab3@15121>    MOVE.w -6(a4),-4(a4)
0002CF04 <AmiBlitz3.ab3@15122>    MOVE.l #$4c3c0800,-8(a4)
0002CF0A <AmiBlitz3.ab3@15123>    MOVE.w regnum,D3
0002CF0E <AmiBlitz3.ab3@15124>    MULS #$1000,D3
0002CF12 <AmiBlitz3.ab3@15125>    OR.w D3,-6(a4)
0002CF18 <AmiBlitz3.ab3@15126>    CLR.l load_var_addr
0002CF1E <AmiBlitz3.ab3@15127>    CLR.l imm_addr
0002CF22 <AmiBlitz3.ab3@15128> BRA 'li3
0002CF26 <AmiBlitz3.ab3@15131>    CMP.w #8,d3
0002CF2A <AmiBlitz3.ab3@15132>    BEQ 'ok
0002CF2C <AmiBlitz3.ab3@15133>    ASL.l #1,d3
0002CF2E <AmiBlitz3.ab3@15134>    ASL.l #8,d3
0002CF32 <AmiBlitz3.ab3@15135>    MOVE.w #$e188,d1
0002CF34 <AmiBlitz3.ab3@15136>    OR.w d3,d1
0002CF38 <AmiBlitz3.ab3@15137>    MOVE.w d1,-6(a4)
0002CF3C <AmiBlitz3.ab3@15138> BRA 'okls
0002CF42 <AmiBlitz3.ab3@15141>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CF48 <AmiBlitz3.ab3@15144>   MOVE.w regnum,d3
0002CF4C <AmiBlitz3.ab3@15145>    OR.b d3,-5(a4)
0002CF52 <AmiBlitz3.ab3@15146>    SUBQ.l #4,destpointer
0002CF58 <AmiBlitz3.ab3@15147>    CLR.l load_var_addr
0002CF5E <AmiBlitz3.ab3@15148>    CLR.l imm_addr
0002CF62 <AmiBlitz3.ab3@15149> BRA 'li3
0002CF68 <AmiBlitz3.ab3@15152>    MOVE.l destpointer,a0
0002CF6E <AmiBlitz3.ab3@15153>    SUB.l load_var_addr,a0
0002CF72 <AmiBlitz3.ab3@15154>    CMP.w #4,a0
0002CF76 <AmiBlitz3.ab3@15155>    BNE 'li2
0002CF7A <AmiBlitz3.ab3@15156>    MOVE.w -2(a4),d1
0002CF7E <AmiBlitz3.ab3@15157>    BSR writeword
0002CF84 <AmiBlitz3.ab3@15158>    MOVE.b #$4c,-6(a4)
0002CF8A <AmiBlitz3.ab3@15159>    MOVE.w #$0800,-4(a4)
0002CF90 <AmiBlitz3.ab3@15160>    MOVE.w regnum,D3
0002CF94 <AmiBlitz3.ab3@15161>    MULS #$1000,d3
0002CF98 <AmiBlitz3.ab3@15162>    OR.w D3,-4(a4)
0002CF9C <AmiBlitz3.ab3@15163> BRA 'li3
0002CFA2 <AmiBlitz3.ab3@15166>    MOVE.l #$4c010800,d1
0002CFA8 <AmiBlitz3.ab3@15167>    MOVE.w regnum,D3
0002CFAA <AmiBlitz3.ab3@15168>    EXT.l d3
0002CFAE <AmiBlitz3.ab3@15169>    MULS #$1000,d3
0002CFB0 <AmiBlitz3.ab3@15170>    OR.w D3,d1
0002CFB4 <AmiBlitz3.ab3@15171>    MULS #$10,d3
0002CFB6 <AmiBlitz3.ab3@15172>    ADD.l d3,d1
0002CFBA <AmiBlitz3.ab3@15173>    BSR writelong
0002CFBC <AmiBlitz3.ab3@15178> RTS
0002CFBE <AmiBlitz3.ab3@15182>   MOVE.w D1,-(A7)
0002CFC2 <AmiBlitz3.ab3@15183>    BSR.w JL_0_AD40
0002CFC4 <AmiBlitz3.ab3@15184>   MOVE.l D4,D1
0002CFC8 <AmiBlitz3.ab3@15185>    BSR.w JL_0_AD38
0002CFCC <AmiBlitz3.ab3@15186>    BSR.w JL_0_A352
0002CFCE <AmiBlitz3.ab3@15187>   MOVEQ #0,d1
0002CFD0 <AmiBlitz3.ab3@15188>   MOVE.w (A7)+,D1
0002CFD6 <AmiBlitz3.ab3@15189>   MOVE.l d1,lastinstruction
0002CFDA <AmiBlitz3.ab3@15190>    BSR.w Atokejsr
0002CFDE <AmiBlitz3.ab3@15191>    BSR.w JL_0_A36E
0002CFE0 <AmiBlitz3.ab3@15192>   MOVE.l D5,D1
0002CFE4 <AmiBlitz3.ab3@15193> BRA.w JL_0_AD38
0002CFEA <AmiBlitz3.ab3@15197>    TST.b iee
0002CFEE <AmiBlitz3.ab3@15198>     BNE fm1
0002CFF2 <AmiBlitz3.ab3@15199>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CFF6 <AmiBlitz3.ab3@15200> BRA.w doflib
0002CFF8 <AmiBlitz3.ab3@15203>   MOVEQ #0,d0
0002CFFE <AmiBlitz3.ab3@15204>  MOVE.w regnum,d0
0002D000 <AmiBlitz3.ab3@15205>  ADDQ #1,d0
0002D002 <AmiBlitz3.ab3@15206>  ASL.w #8,d0
0002D004 <AmiBlitz3.ab3@15207>  ASL.w #2,d0
0002D00A <AmiBlitz3.ab3@15208>  MOVE.l #$f2000023,d1
0002D00C <AmiBlitz3.ab3@15209>  OR.l d0,d1
0002D012 <AmiBlitz3.ab3@15210>  MOVE.w regnum,d0
0002D014 <AmiBlitz3.ab3@15211>  ASL.w #7,d0
0002D016 <AmiBlitz3.ab3@15212>  OR.l d0,d1
0002D01A <AmiBlitz3.ab3@15213> BRA.w writelong
0002D01C <AmiBlitz3.ab3@15217>   MOVE.w D2,-(A7)                                          ;dopow
0002D01E <AmiBlitz3.ab3@15218>   MOVE.w D2,D3
0002D020 <AmiBlitz3.ab3@15219>   MOVEQ.l #$05,D2
0002D024 <AmiBlitz3.ab3@15220>    BSR.w JL_0_9770
0002D02A <AmiBlitz3.ab3@15221>   ADDQ.w #1,regnum
0002D02C <AmiBlitz3.ab3@15222>   MOVE.w (A7)+,D3
0002D02E <AmiBlitz3.ab3@15223>   MOVEQ.l #$05,D2
0002D032 <AmiBlitz3.ab3@15224>    BSR.w writeconvertcode
0002D038 <AmiBlitz3.ab3@15225>   SUBQ.w #1,regnum
0002D03C <AmiBlitz3.ab3@15226>    BSR.w nocando
0002D042 <AmiBlitz3.ab3@15227>    TST.b fpu
0002D046 <AmiBlitz3.ab3@15228>    BEQ 'old
0002D048 <AmiBlitz3.ab3@15229>    MOVEQ #0,d1
0002D04E <AmiBlitz3.ab3@15230>    MOVE.w regnum,d1
0002D050 <AmiBlitz3.ab3@15231>   MOVE.l d1,d0
0002D052 <AmiBlitz3.ab3@15232>   ASL.w #7,d1
0002D054 <AmiBlitz3.ab3@15233>   ASL.w #8,d0
0002D056 <AmiBlitz3.ab3@15234>   ASL.w #2,d0
0002D058 <AmiBlitz3.ab3@15235>   OR.w d0,d1
0002D05A <AmiBlitz3.ab3@15236>   MOVE.l d1,-(a7)
0002D060 <AmiBlitz3.ab3@15238>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D064 <AmiBlitz3.ab3@15239>    BSR writelong
0002D06A <AmiBlitz3.ab3@15240>    MOVE.w regnum,d0
0002D06C <AmiBlitz3.ab3@15241>  ADDQ #1,d0
0002D06E <AmiBlitz3.ab3@15242>  ASL.w #8,d0
0002D070 <AmiBlitz3.ab3@15243>  ASL.w #2,d0
0002D076 <AmiBlitz3.ab3@15244>  MOVE.l #$f2000023,d1
0002D078 <AmiBlitz3.ab3@15245>  OR.l d0,d1
0002D07E <AmiBlitz3.ab3@15246>  MOVE.w regnum,d0
0002D080 <AmiBlitz3.ab3@15247>  ASL.w #7,d0
0002D082 <AmiBlitz3.ab3@15248>  OR.l d0,d1
0002D088 <AmiBlitz3.ab3@15249>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D08C <AmiBlitz3.ab3@15250>    BSR writelong
0002D08E <AmiBlitz3.ab3@15251>    MOVE.l (a7)+,d1
0002D094 <AmiBlitz3.ab3@15253>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D098 <AmiBlitz3.ab3@15254>    BSR writelong
0002D09A <AmiBlitz3.ab3@15255> RTS
0002D09E <AmiBlitz3.ab3@15258>   MOVE.w #$6001,D1
0002D0A2 <AmiBlitz3.ab3@15259> BRA.w domylib
0002D0A6 <AmiBlitz3.ab3@15265>   MOVEA.l forthsp(PC),A0
0002D0AA <AmiBlitz3.ab3@15266>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D0AC <AmiBlitz3.ab3@15267> RTS
0002D0B0 <AmiBlitz3.ab3@15273>   MOVE.w #$D400,D1
0002D0B4 <AmiBlitz3.ab3@15274> BRA.w domylib
0002D0B8 <AmiBlitz3.ab3@15278>   MOVE.w #$D401,D1
0002D0BC <AmiBlitz3.ab3@15279> BRA.w domylib
0002D0C0 <AmiBlitz3.ab3@15283>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D0C4 <AmiBlitz3.ab3@15284>   MOVE.w #$D402,D1
0002D0C8 <AmiBlitz3.ab3@15285> BRA.w domylib
0002D0CC <AmiBlitz3.ab3@15289>   MOVE.w #$D403,D1
0002D0CE <AmiBlitz3.ab3@15290>   MOVEQ.l #$02,D2                                          ;now a word.
0002D0D2 <AmiBlitz3.ab3@15291> BRA.w domylib
0002D0D6 <AmiBlitz3.ab3@15295>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D0DC <AmiBlitz3.ab3@15296>   TST.b fpu
0002D0E0 <AmiBlitz3.ab3@15297>   BEQ 'old
0002D0E2 <AmiBlitz3.ab3@15298>   MOVEQ #0,d1
0002D0E8 <AmiBlitz3.ab3@15299>   MOVE.w regnum,d1                                         ;fpu mod
0002D0EA <AmiBlitz3.ab3@15300>   MOVE.l d1,d0
0002D0EC <AmiBlitz3.ab3@15301>   ADDQ.l #1,d1
0002D0EE <AmiBlitz3.ab3@15302>   ASL.l #7,d0
0002D0F0 <AmiBlitz3.ab3@15303>   ASL.l #8,d1
0002D0F2 <AmiBlitz3.ab3@15304>   ASL.l #2,d1
0002D0F4 <AmiBlitz3.ab3@15305>   OR.l d0,d1
0002D0F6 <AmiBlitz3.ab3@15306>   MOVE.l d0,-(a7)
0002D0FC <AmiBlitz3.ab3@15307>   OR.l #$f2000021,d1
0002D100 <AmiBlitz3.ab3@15308>   BSR writelong
0002D102 <AmiBlitz3.ab3@15309>   MOVE.l (a7)+,d0
0002D104 <AmiBlitz3.ab3@15310>  RTS
0002D108 <AmiBlitz3.ab3@15313>   MOVE.w #$D404,D1
0002D10A <AmiBlitz3.ab3@15314>   MOVEQ.l #$03,D2                                          ;now a long
0002D10E <AmiBlitz3.ab3@15315> BRA.w domylib
0002D112 <AmiBlitz3.ab3@15323>   MOVE.w #$48C0,D1
0002D118 <AmiBlitz3.ab3@15324>   OR.w regnum,D1
0002D11C <AmiBlitz3.ab3@15325>    BSR.w writeword
0002D11E <AmiBlitz3.ab3@15326>   ADDQ.w #1,D1
0002D122 <AmiBlitz3.ab3@15327>    BSR.w writeword
0002D126 <AmiBlitz3.ab3@15330>    MOVE.w #$48C0,D1
0002D12C <AmiBlitz3.ab3@15331>   OR.w regnum,D1
0002D130 <AmiBlitz3.ab3@15332>    BSR.w writeword
0002D134 <AmiBlitz3.ab3@15333>   MOVE.w #$81C0,D1
0002D138 <AmiBlitz3.ab3@15334> BRA.w doplus2
0002D13E <AmiBlitz3.ab3@15338>   TST.b fast
0002D142 <AmiBlitz3.ab3@15339>   BNE.s 'l10
0002D146 <AmiBlitz3.ab3@15340>   MOVE.w #$CB01,D1
0002D14A <AmiBlitz3.ab3@15341> BRA.w domylib
0002D14E <AmiBlitz3.ab3@15347>   BSR.w JL_0_AD40
0002D150 <AmiBlitz3.ab3@15348>   MOVE.l D4,D1
0002D154 <AmiBlitz3.ab3@15349>    BSR.w JL_0_AD38
0002D158 <AmiBlitz3.ab3@15350>    BSR.w JL_0_A352
0002D15E <AmiBlitz3.ab3@15364>    MOVE.l #$4c410800,d1
0002D162 <AmiBlitz3.ab3@15365>    BSR writelong
0002D166 <AmiBlitz3.ab3@15368>   MOVE.w #$4e71,d1
0002D16A <AmiBlitz3.ab3@15370>    BSR.w JL_0_A36E
0002D16C <AmiBlitz3.ab3@15371>   MOVE.l D5,D1
0002D170 <AmiBlitz3.ab3@15372> BRA.w JL_0_AD38
0002D174 <AmiBlitz3.ab3@15375>     CMP.w #8,d3
0002D178 <AmiBlitz3.ab3@15376>     BEQ 'ok
0002D17A <AmiBlitz3.ab3@15377>     ASL.l #1,d3
0002D17C <AmiBlitz3.ab3@15378>     ASL.l #8,d3
0002D180 <AmiBlitz3.ab3@15379>     MOVE.w #$e080,d1
0002D182 <AmiBlitz3.ab3@15380>     OR.w d3,d1
0002D186 <AmiBlitz3.ab3@15381> BRA 'oklsr2
0002D18A <AmiBlitz3.ab3@15384>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D190 <AmiBlitz3.ab3@15387>      SUBQ.l #6,destpointer
0002D194 <AmiBlitz3.ab3@15388>      BSR writeword
0002D196 <AmiBlitz3.ab3@15389>      MOVE.l (a7)+,d3
0002D198 <AmiBlitz3.ab3@15390>      MOVEQ #0,d1
0002D19E <AmiBlitz3.ab3@15391>      CLR.l load_var_addr
0002D1A4 <AmiBlitz3.ab3@15392>      CLR.l imm_addr
0002D1A8 <AmiBlitz3.ab3@15393> BRA JL_0_AD38
0002D1AC <AmiBlitz3.ab3@15397>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D1B0 <AmiBlitz3.ab3@15398> BRA.w domylib
0002D1B6 <AmiBlitz3.ab3@15402>    TST.b iee
0002D1BA <AmiBlitz3.ab3@15403>    BNE fdiv1
0002D1BE <AmiBlitz3.ab3@15404>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D1C2 <AmiBlitz3.ab3@15405> BRA.w doflib
0002D1C4 <AmiBlitz3.ab3@15409>   MOVEQ #0,d0
0002D1CA <AmiBlitz3.ab3@15410>   MOVE.w regnum,d0
0002D1CC <AmiBlitz3.ab3@15411>   ADDQ #1,d0
0002D1CE <AmiBlitz3.ab3@15412>   ASL.w #8,d0
0002D1D0 <AmiBlitz3.ab3@15413>   ASL.w #2,d0
0002D1D6 <AmiBlitz3.ab3@15414>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D1D8 <AmiBlitz3.ab3@15415>   OR.l d0,d1
0002D1DE <AmiBlitz3.ab3@15416>   MOVE.w regnum,d0
0002D1E0 <AmiBlitz3.ab3@15417>   ASL.w #7,d0
0002D1E2 <AmiBlitz3.ab3@15418>   OR.l d0,d1
0002D1E6 <AmiBlitz3.ab3@15419> BRA.w writelong
0002D1EA <AmiBlitz3.ab3@15423>   MOVE.w #$C000,D1
0002D1EE <AmiBlitz3.ab3@15424> BRA.w doplus2
0002D1F2 <AmiBlitz3.ab3@15428>   MOVE.w #$C040,D1
0002D1F6 <AmiBlitz3.ab3@15429> BRA.w doplus2
0002D1FA <AmiBlitz3.ab3@15433>   MOVE.w #$C080,D1
0002D1FE <AmiBlitz3.ab3@15434> BRA.w doplus2
0002D202 <AmiBlitz3.ab3@15438>   MOVE.w #$8000,D1
0002D206 <AmiBlitz3.ab3@15439> BRA.w doplus2
0002D20A <AmiBlitz3.ab3@15443>   MOVE.w #$8040,D1
0002D20E <AmiBlitz3.ab3@15444> BRA.w doplus2
0002D212 <AmiBlitz3.ab3@15448>   MOVE.w #$8080,D1
0002D216 <AmiBlitz3.ab3@15449> BRA.w doplus2
0002D21A <AmiBlitz3.ab3@15453>   MOVE.w #$B100,D1
0002D220 <AmiBlitz3.ab3@15456>    MOVE.w regnum,D3
0002D222 <AmiBlitz3.ab3@15457>   OR.w D3,D1
0002D224 <AmiBlitz3.ab3@15458>   ADDQ.w #1,D3
0002D226 <AmiBlitz3.ab3@15459>   LSL.w #8,D3
0002D228 <AmiBlitz3.ab3@15460>   LSL.w #1,D3
0002D22A <AmiBlitz3.ab3@15461>   OR.w D3,D1
0002D22E <AmiBlitz3.ab3@15462> BRA.w writeword
0002D232 <AmiBlitz3.ab3@15466>   MOVE.w #$B140,D1
0002D236 <AmiBlitz3.ab3@15467> BRA.w JL_0_A25C
0002D23A <AmiBlitz3.ab3@15471>   MOVE.w #$B180,D1
0002D23E <AmiBlitz3.ab3@15472> BRA.w JL_0_A25C
0002D242 <AmiBlitz3.ab3@15476>   MOVE.w #$E1A8,D1
0002D246 <AmiBlitz3.ab3@15477> BRA.w JL_0_A298
0002D24A <AmiBlitz3.ab3@15481>   MOVE.w #$E0A8,D1
0002D24E <AmiBlitz3.ab3@15482> BRA.w JL_0_A298
0002D252 <AmiBlitz3.ab3@15486>   MOVE.w #$E0A0,D1
0002D256 <AmiBlitz3.ab3@15487> BRA.w JL_0_A298
0002D258 <AmiBlitz3.ab3@15491>   MOVE.w D1,-(A7)
0002D25E <AmiBlitz3.ab3@15492>   ADDQ.w #1,regnum
0002D260 <AmiBlitz3.ab3@15493>   MOVE.w D2,-(A7)
0002D262 <AmiBlitz3.ab3@15494>   MOVE.w D2,D3
0002D264 <AmiBlitz3.ab3@15495>   MOVEQ.l #$02,D2
0002D268 <AmiBlitz3.ab3@15500>    BSR.w writeconvertcode
0002D26A <AmiBlitz3.ab3@15502>   MOVE.w (A7)+,D2
0002D270 <AmiBlitz3.ab3@15503>   SUBQ.w #1,regnum
0002D274 <AmiBlitz3.ab3@15504>   CMP.w #$4,D2
0002D278 <AmiBlitz3.ab3@15505>    BEQ.w JL_0_A2C2
0002D27A <AmiBlitz3.ab3@15506>   MOVE.w D2,D3
0002D27C <AmiBlitz3.ab3@15507>   MOVEQ.l #$03,D2
0002D280 <AmiBlitz3.ab3@15508>    BSR.w JL_0_9770
0002D282 <AmiBlitz3.ab3@15511>    MOVE.w (A7)+,D1
0002D288 <AmiBlitz3.ab3@15512>   MOVE.w regnum,D3
0002D28A <AmiBlitz3.ab3@15513>   OR.w D3,D1
0002D28C <AmiBlitz3.ab3@15514>   ADDQ.w #1,D3
0002D28E <AmiBlitz3.ab3@15515>   LSL.w #8,D3
0002D290 <AmiBlitz3.ab3@15516>   LSL.w #1,D3
0002D292 <AmiBlitz3.ab3@15517>   OR.w D3,D1
0002D296 <AmiBlitz3.ab3@15518> BRA.w writeword
0002D29A <AmiBlitz3.ab3@15522>   MOVE.w #$0100,D1
0002D29E <AmiBlitz3.ab3@15523>    BSR.w JL_0_A31C
0002D2A4 <AmiBlitz3.ab3@15524>   MOVE.w regnum,D1
0002D2A8 <AmiBlitz3.ab3@15525>   ORI.w #$56C0,D1
0002D2AC <AmiBlitz3.ab3@15526>    BSR.w writeword
0002D2B2 <AmiBlitz3.ab3@15527>   MOVE.w regnum,D1
0002D2B6 <AmiBlitz3.ab3@15528>   ORI.w #$4880,D1
0002D2BA <AmiBlitz3.ab3@15529>    BSR.w writeword
0002D2BC <AmiBlitz3.ab3@15530>   MOVEQ.l #$02,D2
0002D2BE <AmiBlitz3.ab3@15531> RTS
0002D2C2 <AmiBlitz3.ab3@15535>   MOVE.w #$01C0,D1
0002D2C6 <AmiBlitz3.ab3@15538>    BSR.w JL_0_A31C
0002D2C8 <AmiBlitz3.ab3@15539>   MOVEQ.l #$03,D2
0002D2CA <AmiBlitz3.ab3@15540> RTS
0002D2CE <AmiBlitz3.ab3@15544>   MOVE.w #$0180,D1
0002D2D2 <AmiBlitz3.ab3@15545> BRA.w JL_0_A304
0002D2D6 <AmiBlitz3.ab3@15549>   MOVE.w #$0140,D1
0002D2DA <AmiBlitz3.ab3@15550> BRA.w JL_0_A304
0002D2DC <AmiBlitz3.ab3@15554>   MOVE.w D1,-(A7)
0002D2DE <AmiBlitz3.ab3@15555>   MOVE.w D2,-(A7)
0002D2E0 <AmiBlitz3.ab3@15556>   MOVE.w D2,D3
0002D2E2 <AmiBlitz3.ab3@15557>   MOVEQ.l #$03,D2
0002D2E6 <AmiBlitz3.ab3@15558>    BSR.w JL_0_9770
0002D2E8 <AmiBlitz3.ab3@15559>   MOVE.w (A7)+,D3
0002D2EA <AmiBlitz3.ab3@15560>   MOVEQ.l #$01,D2
0002D2F0 <AmiBlitz3.ab3@15561>   ADDQ.w #1,regnum
0002D2F4 <AmiBlitz3.ab3@15562>    BSR.w writeconvertcode
0002D2FA <AmiBlitz3.ab3@15563>   SUBQ.w #1,regnum
0002D300 <AmiBlitz3.ab3@15564>   MOVE.w regnum,D1
0002D302 <AmiBlitz3.ab3@15565>   MOVE.w D1,D2
0002D304 <AmiBlitz3.ab3@15566>   ADDQ.w #1,D2
0002D306 <AmiBlitz3.ab3@15567>   LSL.w #8,D2
0002D308 <AmiBlitz3.ab3@15568>   LSL.w #1,D2
0002D30A <AmiBlitz3.ab3@15569>   OR.w (A7)+,D1
0002D30C <AmiBlitz3.ab3@15570>   OR.w D2,D1
0002D310 <AmiBlitz3.ab3@15571> BRA.w writeword
0002D316 <AmiBlitz3.ab3@15575>   MOVE.w regnum,D1
0002D31A <AmiBlitz3.ab3@15576>    BEQ.w JL_0_A36C
0002D31E <AmiBlitz3.ab3@15577>   ORI.w #$2000,D1
0002D322 <AmiBlitz3.ab3@15578>    BSR.w writeword
0002D326 <AmiBlitz3.ab3@15579>   ADDI.w #$201,D1
0002D32A <AmiBlitz3.ab3@15580>    BSR.w writeword
0002D32C <AmiBlitz3.ab3@15583> RTS
0002D332 <AmiBlitz3.ab3@15587>   MOVE.w regnum,D1
0002D336 <AmiBlitz3.ab3@15588>    BEQ.w JL_0_A384
0002D338 <AmiBlitz3.ab3@15589>   LSL.w #8,D1
0002D33A <AmiBlitz3.ab3@15590>   LSL.w #1,D1
0002D33E <AmiBlitz3.ab3@15591>   ORI.w #$2000,D1
0002D342 <AmiBlitz3.ab3@15592>    BSR.w writeword
0002D344 <AmiBlitz3.ab3@15595> RTS
0002D34A <AmiBlitz3.ab3@15599>    CLR.b isconstantvalue
0002D350 <AmiBlitz3.ab3@15600>    CLR.l lastconstantvalue
0002D358 <AmiBlitz3.ab3@15601>    CMPI.w #$7,regnum
0002D35C <AmiBlitz3.ab3@15602>    BCS.w JL_0_A6B4
0002D362 <AmiBlitz3.ab3@15603>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D366 <AmiBlitz3.ab3@15604>   BSR writelong
0002D36A <AmiBlitz3.ab3@15605>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D36E <AmiBlitz3.ab3@15607>   CMP.w #$3,D2
0002D372 <AmiBlitz3.ab3@15608>    BCS.w JL_0_A3A2
0002D376 <AmiBlitz3.ab3@15609>   MOVE.w #$2F06,D1
0002D37A <AmiBlitz3.ab3@15612>   BSR.w writeword
0002D37C <AmiBlitz3.ab3@15613>   MOVE.w D1,-(A7)
0002D382 <AmiBlitz3.ab3@15614>   SUBQ.w #1,regnum
0002D386 <AmiBlitz3.ab3@15615>    BSR.w JL_0_A6B4
0002D38C <AmiBlitz3.ab3@15616>   ADDQ.w #1,regnum
0002D392 <AmiBlitz3.ab3@15617>   MOVE.l #$f2001b80,d1
0002D396 <AmiBlitz3.ab3@15618>   BSR writelong
0002D39A <AmiBlitz3.ab3@15619>   MOVE.w #$3E06,D1
0002D39E <AmiBlitz3.ab3@15620>   CMP.w #$3,D2
0002D3A2 <AmiBlitz3.ab3@15621>    BCS.w JL_0_A3C8
0002D3A6 <AmiBlitz3.ab3@15622>   MOVE.w #$2E06,D1
0002D3AA <AmiBlitz3.ab3@15625>   BSR.w writeword
0002D3AC <AmiBlitz3.ab3@15626>   MOVE.w (A7)+,D1
0002D3B0 <AmiBlitz3.ab3@15627>   ANDI.w #$F000,D1
0002D3B4 <AmiBlitz3.ab3@15628>   ORI.w #$C1F,D1
0002D3BA <AmiBlitz3.ab3@15629>   JSR writeword
0002D3C0 <AmiBlitz3.ab3@15630>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D3C4 <AmiBlitz3.ab3@15631> BRA writelong
0002D3C8 <AmiBlitz3.ab3@15635>   BSR.w JL_0_A6B4
0002D3CC <AmiBlitz3.ab3@15636>   MOVE.w #$4440,D1
0002D3D0 <AmiBlitz3.ab3@15637>   CMP.w #$3,D2
0002D3D4 <AmiBlitz3.ab3@15638>    BCS.w JL_0_A406
0002D3D8 <AmiBlitz3.ab3@15639>   MOVE.w #$4480,D1
0002D3DC <AmiBlitz3.ab3@15640>   CMP.w #$5,D2
0002D3E0 <AmiBlitz3.ab3@15641>    BCS.w JL_0_A406
0002D3E4 <AmiBlitz3.ab3@15642>   CMP.w #$6,D2
0002D3E8 <AmiBlitz3.ab3@15643>    BCC.w illoperr
0002D3EC <AmiBlitz3.ab3@15644>   MOVE.w #$FFC4,D1
0002D3F0 <AmiBlitz3.ab3@15645> BRA.w JL_0_9604
0002D3F6 <AmiBlitz3.ab3@15648>   OR.w regnum,D1                                           ;negate
0002D3FC <AmiBlitz3.ab3@15649>   CLR.l imm_addr
0002D400 <AmiBlitz3.ab3@15650> BRA.w writeword
0002D404 <AmiBlitz3.ab3@15654>    BSR.w eval4
0002D408 <AmiBlitz3.ab3@15655>   CMP.w #")",D0
0002D40C <AmiBlitz3.ab3@15656>    BEQ.w JL_0_A424
0002D410 <AmiBlitz3.ab3@15657>   CMP.w #"}",D0
0002D414 <AmiBlitz3.ab3@15658>    BNE.w brackets_                                         ;syntax error brackets
0002D418 <AmiBlitz3.ab3@15661> BRA.w get1bytemain
0002D41C <AmiBlitz3.ab3@15665>    BSR.w eval4
0002D420 <AmiBlitz3.ab3@15666>   CMP.w #$5,D2
0002D424 <AmiBlitz3.ab3@15667>    BCC.w illoperr
0002D42A <AmiBlitz3.ab3@15668>   MOVE.w regnum,D1
0002D42E <AmiBlitz3.ab3@15669>   ORI.w #$4640,D1
0002D432 <AmiBlitz3.ab3@15670>   CMP.w #$3,D2
0002D436 <AmiBlitz3.ab3@15671>    BCS.w writeword
0002D43A <AmiBlitz3.ab3@15672>   EORI.w #$C0,D1
0002D43E <AmiBlitz3.ab3@15673> BRA.w writeword
0002D440 <AmiBlitz3.ab3@15677>   MOVEQ.l #$05,D2                                          ;fpu pi
0002D446 <AmiBlitz3.ab3@15678>    TST.b fpu
0002D44A <AmiBlitz3.ab3@15679>   BEQ 'old
0002D450 <AmiBlitz3.ab3@15680> JMP fpupi
0002D456 <AmiBlitz3.ab3@15683>   MOVE.w regnum,D1
0002D458 <AmiBlitz3.ab3@15684>   LSL.w #8,D1
0002D45A <AmiBlitz3.ab3@15685>   LSL.w #1,D1
0002D45E <AmiBlitz3.ab3@15686>   ORI.w #$203C,D1
0002D462 <AmiBlitz3.ab3@15687>    BSR.w writeword
0002D468 <AmiBlitz3.ab3@15688>   MOVE.l #$C90FDA42,D1
0002D46C <AmiBlitz3.ab3@15689>    BSR.w writelong
0002D470 <AmiBlitz3.ab3@15690> BRA.w get1bytemain
0002D56C <AmiBlitz3.ab3@15698> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D668 <AmiBlitz3.ab3@15699>              Ds.l 63
0002D6B0 <AmiBlitz3.ab3@15700>              Ds.l 18
0002D6B4 <AmiBlitz3.ab3@15701> forthsp:     Dc.l forthstack
0002D6E0 <AmiBlitz3.ab3@15706>    !fget
0002D6E4 <AmiBlitz3.ab3@15707>    CMP.b #$7e,d0
0002D6E8 <AmiBlitz3.ab3@15708>    BNE 'noc
0002D6EA <AmiBlitz3.ab3@15709>    SUBQ.l #1,a5
0002D6EE <AmiBlitz3.ab3@15710>    BSR get1bytemain
0002D6F2 <AmiBlitz3.ab3@15713>    CMP.b #"#",d0
0002D6F6 <AmiBlitz3.ab3@15714>    BNE 'ld1
0002D6FA <AmiBlitz3.ab3@15715>    CMP.b #$22,(a5)
0002D6FE <AmiBlitz3.ab3@15716>    BNE 'ld1
0002D704 <AmiBlitz3.ab3@15717>    JSR addimmi
0002D708 <AmiBlitz3.ab3@15720>    CMP.b #$22,d0
0002D70C <AmiBlitz3.ab3@15721>    BNE 'l11
0002D712 <AmiBlitz3.ab3@15731>    NOT.w instringon
0002D714 <AmiBlitz3.ab3@15734>    TST.b d0
0002D718 <AmiBlitz3.ab3@15735>    BPL 'l10
0002D71A <AmiBlitz3.ab3@15736>    LSL.w #8,d0
0002D71C <AmiBlitz3.ab3@15737>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D722 <AmiBlitz3.ab3@15738>    MOVE.l d0,lasttoken
0002D728 <AmiBlitz3.ab3@15739>    MOVE.w d0,lastchar
0002D72E <AmiBlitz3.ab3@15740>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D734 <AmiBlitz3.ab3@15741>    CLR.w rightsideflagmask
0002D738 <AmiBlitz3.ab3@15743>   CMP.w #"(",D0
0002D73C <AmiBlitz3.ab3@15744>    BEQ.w checkcast2
0002D740 <AmiBlitz3.ab3@15745> nocast CMP.w #"{",D0
0002D744 <AmiBlitz3.ab3@15746>    BEQ.w JL_0_A410
0002D748 <AmiBlitz3.ab3@15747>   CMP.w #$2D,D0
0002D74C <AmiBlitz3.ab3@15748>    BEQ.w JL_0_A3DA
0002D750 <AmiBlitz3.ab3@15749>   CMP.w #-$7F77,D0
0002D754 <AmiBlitz3.ab3@15750>    BEQ.w JL_0_A428
0002D758 <AmiBlitz3.ab3@15751>   MOVEA.l forthsp(PC),A1
0002D75E <AmiBlitz3.ab3@15752>   CMPA.l #forthsp,A1
0002D762 <AmiBlitz3.ab3@15753>    BCC.w conmemerr
0002D768 <AmiBlitz3.ab3@15754>   MOVE.l destpointer,(A1)+
0002D76E <AmiBlitz3.ab3@15755>   MOVE.l hunkoffsetbase,(A1)+
0002D774 <AmiBlitz3.ab3@15756>   MOVE.l lasta6,(A1)+
0002D77A <AmiBlitz3.ab3@15757>   MOVE.w lasta6,(A1)+
0002D77C <AmiBlitz3.ab3@15758>   CLR.w (A1)+
0002D77E <AmiBlitz3.ab3@15759>   CLR.w (A1)+
0002D784 <AmiBlitz3.ab3@15760>   MOVE.l A1,forthsp
0002D796 <AmiBlitz3.ab3@15762>    !compare2
0002D79A <AmiBlitz3.ab3@15763>    BEQ.w JL_0_B224
0002D79E <AmiBlitz3.ab3@15764>   CMP.w #".",D0
0002D7A2 <AmiBlitz3.ab3@15765>    BEQ.w JL_0_B21E
0002D7A6 <AmiBlitz3.ab3@15766>   CMP.w #"#",D0
0002D7AA <AmiBlitz3.ab3@15767>    BEQ.w get_constant
0002D7AE <AmiBlitz3.ab3@15768>   CMP.w #"$",D0
0002D7B2 <AmiBlitz3.ab3@15769>    BEQ.w get_hexconstant
0002D7B6 <AmiBlitz3.ab3@15770>   CMP.w #"%",D0
0002D7BA <AmiBlitz3.ab3@15771>    BEQ.w JL_0_A8C0
0002D7BE <AmiBlitz3.ab3@15772>   CMP.w #-$7FD1,D0
0002D7C2 <AmiBlitz3.ab3@15773>    BEQ.w _SizeOf
0002D7C6 <AmiBlitz3.ab3@15774>   CMP.w #-$7F46,D0
0002D7CA <AmiBlitz3.ab3@15775>    BEQ.w JL_0_A44E
0002D7CE <AmiBlitz3.ab3@15776>   CMP.w #-$7F3B,D0
0002D7D2 <AmiBlitz3.ab3@15777>    BEQ.w JL_0_A83C
0002D7D6 <AmiBlitz3.ab3@15778>   CMP.w #-$7F3A,D0
0002D7DA <AmiBlitz3.ab3@15779>    BEQ.w JL_0_A846
0002D7E0 <AmiBlitz3.ab3@15780>   MOVE.w constmode,D1
0002D7E4 <AmiBlitz3.ab3@15781>    BEQ.w JL_0_A776
0002D806 <AmiBlitz3.ab3@15782>    !compare1                                               ;bsr.w tstalpha
0002D80A <AmiBlitz3.ab3@15783>    BEQ.w JL_0_AF22
0002D80E <AmiBlitz3.ab3@15784>   CMP.w #$5F,D0
0002D812 <AmiBlitz3.ab3@15785>    BEQ.w JL_0_AF22
0002D816 <AmiBlitz3.ab3@15786>   CMP.w #$22,D0
0002D81A <AmiBlitz3.ab3@15787>    BEQ.w JL_0_AF00
0002D81E <AmiBlitz3.ab3@15788> BRA.w syntaxerr
0002D824 <AmiBlitz3.ab3@15790> checkcast2 JMP checkcast
0002D82A <AmiBlitz3.ab3@15793>   MOVE.w cfetchmode,D1
0002D82E <AmiBlitz3.ab3@15794>   BEQ.w JL_0_A784
0002D832 <AmiBlitz3.ab3@15795> BRA.w badconerr
0002D838 <AmiBlitz3.ab3@15798> JMP syntaxerropt4
0002D83A <AmiBlitz3.ab3@15802>   NOT.w -(A1)
0002D85C <AmiBlitz3.ab3@15803>   !compare1                                                ;bsr.w tstalpha
0002D860 <AmiBlitz3.ab3@15804>    BEQ.w JL_0_AF4C
0002D864 <AmiBlitz3.ab3@15805>   CMP.w #$2A,D0
0002D868 <AmiBlitz3.ab3@15806>    BEQ.w JL_0_AF4C
0002D86C <AmiBlitz3.ab3@15807>   CMP.w #$5C,D0
0002D870 <AmiBlitz3.ab3@15808>    BEQ.w JL_0_AF4C
0002D874 <AmiBlitz3.ab3@15809>   CMP.w #$22,D0
0002D878 <AmiBlitz3.ab3@15810>    BEQ.w JL_0_ADC0
0002D87C <AmiBlitz3.ab3@15811>   BTST #$F,D0
0002D880 <AmiBlitz3.ab3@15812>    BNE.w JL_0_AAF2
0002D884 <AmiBlitz3.ab3@15813>   CMP.w #"&",D0
0002D888 <AmiBlitz3.ab3@15814>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D88C <AmiBlitz3.ab3@15815>   CMP.w #"?",D0
0002D890 <AmiBlitz3.ab3@15816>    BEQ.w JL_0_AED4
0002D894 <AmiBlitz3.ab3@15819>   CMP.b #"@",d0
0002D898 <AmiBlitz3.ab3@15820>    BNE syntaxerr
0002D89E <AmiBlitz3.ab3@15821>   TST.b newsyntax
0002D8A2 <AmiBlitz3.ab3@15822>    BEQ JUMP_syntaxerropt4
0002D8A8 <AmiBlitz3.ab3@15823>   MOVE.w regnum,D1
0002D8AA <AmiBlitz3.ab3@15824>   LSL.w #8,D1
0002D8AC <AmiBlitz3.ab3@15825>   LSL.w #1,D1
0002D8B0 <AmiBlitz3.ab3@15826>   ORI.w #$203C,D1
0002D8B4 <AmiBlitz3.ab3@15827>   BSR.w writeword
0002D8B8 <AmiBlitz3.ab3@15828>   CMP.b #$22,(a5)
0002D8BC <AmiBlitz3.ab3@15829>    BNE syntaxerr
0002D8BE <AmiBlitz3.ab3@15830>   ADDQ #1,a5
0002D8C0 <AmiBlitz3.ab3@15831>   MOVEQ #0,d0
0002D8C4 <AmiBlitz3.ab3@15832>   CMP.b #1,d2
0002D8C8 <AmiBlitz3.ab3@15833>    BEQ 'l3b
0002D8CC <AmiBlitz3.ab3@15834>   CMP.b #2,d2
0002D8D0 <AmiBlitz3.ab3@15835>    BEQ 'l2b
0002D8D4 <AmiBlitz3.ab3@15836>   CMP.b #4,d2
0002D8D8 <AmiBlitz3.ab3@15837>    BEQ error_convert_types
0002D8DA <AmiBlitz3.ab3@15838>   MOVE.b (a5)+,d0
0002D8DE <AmiBlitz3.ab3@15839>   BEQ syntaxerr
0002D8E2 <AmiBlitz3.ab3@15840>   CMP.b #$22,d0
0002D8E6 <AmiBlitz3.ab3@15841>   BNE 'l1
0002D8EA <AmiBlitz3.ab3@15842>     MOVE.b #0,d0
0002D8EE <AmiBlitz3.ab3@15843> BRA 'do
0002D8F0 <AmiBlitz3.ab3@15846>   ASL.l #8,d0
0002D8F2 <AmiBlitz3.ab3@15847>   MOVE.b (a5)+,d0
0002D8F6 <AmiBlitz3.ab3@15848>   BEQ syntaxerr
0002D8FA <AmiBlitz3.ab3@15849>   CMP.b #$22,d0
0002D8FE <AmiBlitz3.ab3@15850>   BNE 'l2
0002D902 <AmiBlitz3.ab3@15851>     MOVE.b #0,d0
0002D904 <AmiBlitz3.ab3@15852>     ASR.l #8,d0
0002D908 <AmiBlitz3.ab3@15853> BRA 'do
0002D90A <AmiBlitz3.ab3@15856>   ASL.l #8,d0
0002D90C <AmiBlitz3.ab3@15859>   MOVE.b (a5)+,d0
0002D910 <AmiBlitz3.ab3@15860>    BEQ syntaxerr
0002D914 <AmiBlitz3.ab3@15861>    CMP.b #$22,d0
0002D918 <AmiBlitz3.ab3@15862>    BNE 'l3
0002D91C <AmiBlitz3.ab3@15863>    MOVE.b #0,d0
0002D91E <AmiBlitz3.ab3@15864>    ASR.l #8,d0
0002D922 <AmiBlitz3.ab3@15865> BRA 'do
0002D924 <AmiBlitz3.ab3@15868>   ASL.l #8,d0
0002D926 <AmiBlitz3.ab3@15871>   MOVE.b (a5)+,d0
0002D92A <AmiBlitz3.ab3@15872>    BEQ syntaxerr
0002D92E <AmiBlitz3.ab3@15873>    CMP.b #$22,d0
0002D932 <AmiBlitz3.ab3@15874>    BNE 'l4
0002D936 <AmiBlitz3.ab3@15875>    MOVE.b #0,d0
0002D938 <AmiBlitz3.ab3@15876>    ASR.l #8,d0
0002D93C <AmiBlitz3.ab3@15877> BRA 'do
0002D940 <AmiBlitz3.ab3@15880>    CMP.b #$22,(a5)+
0002D944 <AmiBlitz3.ab3@15881>    BNE JUMP_error4char
0002D946 <AmiBlitz3.ab3@15884>   MOVE.l d0,d1
0002D94A <AmiBlitz3.ab3@15885>     BSR writelong
0002D94E <AmiBlitz3.ab3@15886>     BSR get1bytemain
0002D950 <AmiBlitz3.ab3@15887> RTS
0002D954 <AmiBlitz3.ab3@15891>   BSR.w get1bytemain
0002D958 <AmiBlitz3.ab3@15892>   CMP.w #$2E,D0
0002D95C <AmiBlitz3.ab3@15893>    BEQ.b JL_0_A7F4
0002D966 <AmiBlitz3.ab3@15895>   MOVE.w oldqflag,instringon
0002D96C <AmiBlitz3.ab3@15896>   MOVEA.l lastsourcepos,A5
0002D96E <AmiBlitz3.ab3@15897>   MOVE.w D2,-(A7)
0002D972 <AmiBlitz3.ab3@15898>    BSR.w getparameter2
0002D976 <AmiBlitz3.ab3@15899>    BEQ.w syntaxerr
0002D97C <AmiBlitz3.ab3@15900>   LEA varbase,A2
0002D980 <AmiBlitz3.ab3@15901>    BSR.w findvariable
0002D984 <AmiBlitz3.ab3@15902>    BNE.w notypeerr
0002D988 <AmiBlitz3.ab3@15903>   MOVE.w $4(A2),D3
0002D98A <AmiBlitz3.ab3@15904>   EXT.l D3
0002D98C <AmiBlitz3.ab3@15905>   MOVE.w (A7)+,D2
0002D990 <AmiBlitz3.ab3@15906> BRA.w JL_0_B46E
0002D992 <AmiBlitz3.ab3@15910>   MOVE.w D2,-(A7)
0002D996 <AmiBlitz3.ab3@15911>    BSR.w getparameter2
0002D99A <AmiBlitz3.ab3@15912>    BEQ.w syntaxerr
0002D9A0 <AmiBlitz3.ab3@15913>   LEA newtypebase,A2
0002D9A4 <AmiBlitz3.ab3@15914>    BSR.w findtype
0002D9A8 <AmiBlitz3.ab3@15915>    BNE.w notypeerr
0002D9AA <AmiBlitz3.ab3@15916>   MOVEQ.l #$00,D3
0002D9AE <AmiBlitz3.ab3@15917>   CMP.w #$5C,D0
0002D9B2 <AmiBlitz3.ab3@15918>    BNE.w JL_0_A832
0002D9B6 <AmiBlitz3.ab3@15919>    BSR.w getparameter2
0002D9BA <AmiBlitz3.ab3@15920>    BEQ.w syntaxerr
0002D9BE <AmiBlitz3.ab3@15921>   LEA $4(A2),A2
0002D9C2 <AmiBlitz3.ab3@15922>    BSR.w findvariable2
0002D9C6 <AmiBlitz3.ab3@15923>    BNE.w noofferr
0002D9CA <AmiBlitz3.ab3@15924>   MOVE.w $4(A2),D3
0002D9CE <AmiBlitz3.ab3@15925> BRA.w JL_0_A836
0002D9D2 <AmiBlitz3.ab3@15929>   MOVE.w $8(A2),D3
0002D9D4 <AmiBlitz3.ab3@15932>   MOVE.w (A7)+,D2
0002D9D8 <AmiBlitz3.ab3@15933> BRA.w JL_0_B46E
0002D9DA <AmiBlitz3.ab3@15937>   MOVEQ.l #-$01,D3
0002D9DE <AmiBlitz3.ab3@15938>    BSR.w get1bytemain
0002D9E2 <AmiBlitz3.ab3@15939> BRA.w JL_0_B46E
0002D9E4 <AmiBlitz3.ab3@15943>   MOVEQ.l #$00,D3
0002D9E8 <AmiBlitz3.ab3@15944>    BSR.w get1bytemain
0002D9EC <AmiBlitz3.ab3@15945> BRA.w JL_0_B46E
0002D9F0 <AmiBlitz3.ab3@15949>   CMP.w #$30,D0
0002D9F4 <AmiBlitz3.ab3@15950>    BCS.w JL_0_A876
0002D9F8 <AmiBlitz3.ab3@15951>   CMP.w #$39,D0
0002D9FC <AmiBlitz3.ab3@15952>    BLS.w JL_0_A874
0002DA00 <AmiBlitz3.ab3@15953>   ANDI.w #$FFDF,D0
0002DA04 <AmiBlitz3.ab3@15954>   CMP.w #$46,D0
0002DA08 <AmiBlitz3.ab3@15955>    BHI.w JL_0_A876
0002DA0C <AmiBlitz3.ab3@15956>   CMP.w #$41,D0
0002DA10 <AmiBlitz3.ab3@15957>    BCS.w JL_0_A876
0002DA12 <AmiBlitz3.ab3@15960>    CMP.w D0,D0
0002DA14 <AmiBlitz3.ab3@15963> RTS
0002DA18 <AmiBlitz3.ab3@15967>   CMP.w #$31,D0
0002DA1C <AmiBlitz3.ab3@15968>    BEQ.w JL_0_A884
0002DA20 <AmiBlitz3.ab3@15969>   CMP.w #$30,D0
0002DA22 <AmiBlitz3.ab3@15972> RTS
0002DA24 <AmiBlitz3.ab3@15976>    MOVEQ #0,d0
0002DA26 <AmiBlitz3.ab3@15977>    MOVE.b (a5)+,d0
0002DA28 <AmiBlitz3.ab3@15978>    MOVE.b (a5)+,d0
0002DA2C <AmiBlitz3.ab3@15979>    BSR ishex
0002DA30 <AmiBlitz3.ab3@15980>    BNE syntaxerr
0002DA34 <AmiBlitz3.ab3@15981>    SUBI.w #$30,D0
0002DA38 <AmiBlitz3.ab3@15982>    CMP.w #$9,D0
0002DA3C <AmiBlitz3.ab3@15983>    BLS.w 'l1
0002DA3E <AmiBlitz3.ab3@15984>    SUBQ.w #7,D0
0002DA40 <AmiBlitz3.ab3@15987>    MOVE.l d0,d1
0002DA42 <AmiBlitz3.ab3@15988>    MOVE.b (a5)+,d0
0002DA46 <AmiBlitz3.ab3@15989>      BSR ishex
0002DA4A <AmiBlitz3.ab3@15990>     BNE syntaxerr
0002DA4C <AmiBlitz3.ab3@15991>     LSL.l #4,d1
0002DA50 <AmiBlitz3.ab3@15992>     SUBI.w #$30,D0
0002DA54 <AmiBlitz3.ab3@15993>    CMP.w #$9,D0
0002DA58 <AmiBlitz3.ab3@15994>    BLS.w 'l2
0002DA5A <AmiBlitz3.ab3@15995>    SUBQ.w #7,D0
0002DA5C <AmiBlitz3.ab3@15998>   ADD.l d1,d0
0002DA5E <AmiBlitz3.ab3@15999> RTS
0002DA62 <AmiBlitz3.ab3@16003>    BSR.w get1bytemain
0002DA66 <AmiBlitz3.ab3@16004>    BSR.w ishex
0002DA6A <AmiBlitz3.ab3@16005>    BNE.w syntaxerr
0002DA6C <AmiBlitz3.ab3@16006>   MOVEQ.l #$00,D3
0002DA70 <AmiBlitz3.ab3@16007>   CMP.w #5,d2
0002DA74 <AmiBlitz3.ab3@16008>   BNE JL_0_A894
0002DA7A <AmiBlitz3.ab3@16009>   CMP.l #newtype_double,a2
0002DA7E <AmiBlitz3.ab3@16010>   BEQ 'doit
0002DA84 <AmiBlitz3.ab3@16011>   CMP.l #newtype_float,a2
0002DA88 <AmiBlitz3.ab3@16012>   BNE JL_0_A894
0002DA90 <AmiBlitz3.ab3@16015>    fmove.s #0,fp0
0002DA96 <AmiBlitz3.ab3@16017>   TST.b fpu
0002DA9A <AmiBlitz3.ab3@16018>   BEQ JL_0_A894
0002DAA0 <AmiBlitz3.ab3@16019>   fmove.w #16,fp1
0002DAA4 <AmiBlitz3.ab3@16020>   fmul.x fp1,fp0
0002DAA8 <AmiBlitz3.ab3@16021>   SUBI.w #$30,D0
0002DAAC <AmiBlitz3.ab3@16022>   CMP.w #$9,D0
0002DAB0 <AmiBlitz3.ab3@16023>    BLS.w JL_0_A8AEa
0002DAB2 <AmiBlitz3.ab3@16024>   SUBQ.w #7,D0
0002DAB6 <AmiBlitz3.ab3@16027>    fmove.w d0,fp1
0002DABA <AmiBlitz3.ab3@16028>    fadd.x fp1,fp0
0002DABE <AmiBlitz3.ab3@16029>    BSR.w get1bytemain
0002DAC2 <AmiBlitz3.ab3@16030>    BSR.w ishex
0002DAC6 <AmiBlitz3.ab3@16031>    BEQ.w JL_0_A894a
0002DACA <AmiBlitz3.ab3@16032> BRA.w nofpregload
0002DAD0 <AmiBlitz3.ab3@16036>   CMP.l #$10000000,D3
0002DAD4 <AmiBlitz3.ab3@16037>    BCC.w overerr
0002DAD6 <AmiBlitz3.ab3@16038>   LSL.l #4,D3
0002DADA <AmiBlitz3.ab3@16039>   SUBI.w #$30,D0
0002DADE <AmiBlitz3.ab3@16040>   CMP.w #$9,D0
0002DAE2 <AmiBlitz3.ab3@16041>    BLS.w JL_0_A8AE
0002DAE4 <AmiBlitz3.ab3@16042>   SUBQ.w #7,D0
0002DAE6 <AmiBlitz3.ab3@16045>   OR.w D0,D3
0002DAEA <AmiBlitz3.ab3@16046>    BSR.w get1bytemain
0002DAEE <AmiBlitz3.ab3@16047>    BSR.w ishex
0002DAF2 <AmiBlitz3.ab3@16048>    BEQ.w JL_0_A894
0002DAF6 <AmiBlitz3.ab3@16049> BRA.w JL_0_B46E
0002DAFA <AmiBlitz3.ab3@16053>    BSR.w get1bytemain
0002DAFE <AmiBlitz3.ab3@16054>    BSR.w JL_0_A878
0002DB02 <AmiBlitz3.ab3@16055>    BNE.w syntaxerr
0002DB04 <AmiBlitz3.ab3@16056>    MOVEQ.l #$00,D3
0002DB06 <AmiBlitz3.ab3@16059>    LSL.l #1,D3
0002DB0A <AmiBlitz3.ab3@16060>    BCS.w overerr
0002DB0E <AmiBlitz3.ab3@16061>   SUBI.w #$30,D0
0002DB10 <AmiBlitz3.ab3@16062>   OR.w D0,D3
0002DB14 <AmiBlitz3.ab3@16063>    BSR.w get1bytemain
0002DB18 <AmiBlitz3.ab3@16064>    BSR.w JL_0_A878
0002DB1C <AmiBlitz3.ab3@16065>    BEQ.w JL_0_A8CE
0002DB20 <AmiBlitz3.ab3@16066> BRA.w JL_0_B46E
0002DB22 <AmiBlitz3.ab3@16070>    MOVE.w d2,-(A7)
0002DB2A <AmiBlitz3.ab3@16071>    MOVE.b #0,automode
0002DB2E <AmiBlitz3.ab3@16072>    CMP.b #"@",(a5)
0002DB32 <AmiBlitz3.ab3@16073>    BNE 'l1
0002DB34 <AmiBlitz3.ab3@16074>    ADDQ.l #1,a5
0002DB3C <AmiBlitz3.ab3@16075>    MOVE.b #1,automode
0002DB40 <AmiBlitz3.ab3@16076>    BSR getparameter2
0002DB44 <AmiBlitz3.ab3@16077>    BSR findlabel2
0002DB48 <AmiBlitz3.ab3@16078>    BNE 'addit
0002DB4C <AmiBlitz3.ab3@16079> BRA errormsg_autocount
0002DB50 <AmiBlitz3.ab3@16082>   BSR.w addlabelhash
0002DB58 <AmiBlitz3.ab3@16083>   MOVE.l #$1,$4(A2)
0002DB5C <AmiBlitz3.ab3@16084>   MOVEM.l a2/a5,-(a7)
0002DB62 <AmiBlitz3.ab3@16085>   MOVE.w lastchar,-(a7)
0002DB68 <AmiBlitz3.ab3@16086>   LEA autostorename,a5
0002DB6C <AmiBlitz3.ab3@16087>   BSR getparameter2
0002DB70 <AmiBlitz3.ab3@16088>   BSR findlabel2
0002DB74 <AmiBlitz3.ab3@16089>   BEQ 'found
0002DB78 <AmiBlitz3.ab3@16090>   BSR.w addlabelhash
0002DB80 <AmiBlitz3.ab3@16091>   MOVE.l #$1,$4(A2)
0002DB88 <AmiBlitz3.ab3@16092>   MOVE.l #0,8(a2)
0002DB8A <AmiBlitz3.ab3@16095>    MOVE.w (a7)+,d0
0002DB90 <AmiBlitz3.ab3@16096>    MOVE.w d0,lastchar
0002DB94 <AmiBlitz3.ab3@16097>   MOVE.l 8(a2),d3
0002DB9C <AmiBlitz3.ab3@16098>   ADD.l #1,8(a2)
0002DBA0 <AmiBlitz3.ab3@16099>   MOVEM.l (a7)+,a2/a5
0002DBA4 <AmiBlitz3.ab3@16100>   MOVE.l d3,8(a2)
0002DBA8 <AmiBlitz3.ab3@16101>   MOVE.l $8(A2),D3
0002DBAC <AmiBlitz3.ab3@16102> BRA.l 'l3
0002DBB0 <AmiBlitz3.ab3@16105>   BSR.w getparameter2
0002DBB6 <AmiBlitz3.ab3@16106>     TST.b incnif
0002DBBA <AmiBlitz3.ab3@16107>     BEQ 'lc1
0002DBBE <AmiBlitz3.ab3@16108>     BSR.w findlabel2
0002DBC2 <AmiBlitz3.ab3@16109>     BNE 'l5
0002DBC4 <AmiBlitz3.ab3@16110>     MOVEQ #1,d3
0002DBC6 <AmiBlitz3.ab3@16111>     MOVE.w (A7)+,D2
0002DBCA <AmiBlitz3.ab3@16112> BRA JL_0_B46E
0002DBCC <AmiBlitz3.ab3@16115>   MOVEQ #0,d3
0002DBCE <AmiBlitz3.ab3@16116>     MOVE.w (A7)+,D2
0002DBD2 <AmiBlitz3.ab3@16117> BRA JL_0_B46E
0002DBD6 <AmiBlitz3.ab3@16120>    BSR.w findlabel2
0002DBDA <AmiBlitz3.ab3@16121>    BNE.w cnferr
0002DBE2 <AmiBlitz3.ab3@16124>    CMPI.l #$1,$4(A2)
0002DBE6 <AmiBlitz3.ab3@16125>    BNE.w cnferr
0002DBEA <AmiBlitz3.ab3@16127>    MOVE.l $8(A2),D3
0002DBEC <AmiBlitz3.ab3@16128>    MOVE.w (A7)+,D2
0002DBF0 <AmiBlitz3.ab3@16129> BRA.w JL_0_B46E
0002DBF6 <AmiBlitz3.ab3@16133>   CLR.w vartype
0002DBFE <AmiBlitz3.ab3@16134>   MOVE.b #3,peekaddrsize
0002DC02 <AmiBlitz3.ab3@16135>   BSR.w JL_0_A916
0002DC08 <AmiBlitz3.ab3@16136>   MOVE.l a2,rightsidetype
0002DC12 <AmiBlitz3.ab3@16137>   MOVE.w flagmask,rightsideflagmask
0002DC14 <AmiBlitz3.ab3@16138>   MOVEQ.l #$03,D2
0002DC16 <AmiBlitz3.ab3@16139> RTS
0002DC1A <AmiBlitz3.ab3@16143>    BSR.w get1bytemain
0002DC2C <AmiBlitz3.ab3@16144>    !compare2
0002DC30 <AmiBlitz3.ab3@16145>    BEQ andop2
0002DC34 <AmiBlitz3.ab3@16146>    BSR.w getparameter
0002DC38 <AmiBlitz3.ab3@16147>    BSR.w JL_0_8E3C
0002DC3C <AmiBlitz3.ab3@16148>    BSR.w calcvar
0002DC40 <AmiBlitz3.ab3@16149>   CMP.b #$7,D2
0002DC44 <AmiBlitz3.ab3@16150>    BNE.w JL_0_A960
0002DC48 <AmiBlitz3.ab3@16151>   BTST #$F,D2
0002DC4C <AmiBlitz3.ab3@16152>    BNE.w JL_0_A94A
0002DC52 <AmiBlitz3.ab3@16153>   MOVE.w D3,stamp2+2
0002DC58 <AmiBlitz3.ab3@16154>   MOVE.l stamp2,D1
0002DC5C <AmiBlitz3.ab3@16155>    BSR.w pokela5s
0002DC60 <AmiBlitz3.ab3@16156> BRA.w JL_0_A978
0002DC66 <AmiBlitz3.ab3@16160>   MOVE.w regnum,D1
0002DC68 <AmiBlitz3.ab3@16161>   LSL.w #8,D1
0002DC6A <AmiBlitz3.ab3@16162>   LSL.w #1,D1
0002DC70 <AmiBlitz3.ab3@16163>   OR.w stamp,D1
0002DC74 <AmiBlitz3.ab3@16164>    BSR.w writeword
0002DC76 <AmiBlitz3.ab3@16165> RTS
0002DC7A <AmiBlitz3.ab3@16169>   BTST #$F,D2
0002DC7E <AmiBlitz3.ab3@16170>    BNE.w JL_0_A978
0002DC84 <AmiBlitz3.ab3@16171>   MOVE.w D3,leaamp+2
0002DC8A <AmiBlitz3.ab3@16172>   MOVE.l leaamp,D1
0002DC8E <AmiBlitz3.ab3@16173>    BSR.w pokela5s
0002DC94 <AmiBlitz3.ab3@16176>   MOVE.w regnum,D1
0002DC96 <AmiBlitz3.ab3@16177>   LSL.w #8,D1
0002DC98 <AmiBlitz3.ab3@16178>   LSL.w #1,D1
0002DC9E <AmiBlitz3.ab3@16179>   OR.w leaamp2,D1
0002DCA2 <AmiBlitz3.ab3@16180> BRA.w writeword
0002DCA6 <AmiBlitz3.ab3@16184>   MOVE.w #$D200,D1
0002DCAA <AmiBlitz3.ab3@16185>    BSR.w Atokejsr
0002DCAC <AmiBlitz3.ab3@16186>   MOVEQ.l #$03,D2
0002DCAE <AmiBlitz3.ab3@16187> RTS
0002DCB2 <AmiBlitz3.ab3@16191> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002DCB4 <AmiBlitz3.ab3@16192>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002DCB6 <AmiBlitz3.ab3@16193>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002DCBA <AmiBlitz3.ab3@16199>    BSR.w get1bytemain
0002DCBC <AmiBlitz3.ab3@16200>   MOVE.w D0,D1
0002DCC0 <AmiBlitz3.ab3@16201>    BPL.w syntaxerr
0002DCC2 <AmiBlitz3.ab3@16202>   MOVE.w D2,-(A7)
0002DCC6 <AmiBlitz3.ab3@16203>   BCLR #$F,D1
0002DCCA <AmiBlitz3.ab3@16204>    BSR.w searchinstr
0002DCCE <AmiBlitz3.ab3@16205>   MOVE.l $12(A2),D0
0002DCD2 <AmiBlitz3.ab3@16206>   TST.w -$2(A2,D0.L)
0002DCD6 <AmiBlitz3.ab3@16207>    BEQ.w freeerr
0002DCD8 <AmiBlitz3.ab3@16208>   MOVE.w (A7)+,D2
0002DCDA <AmiBlitz3.ab3@16209> RTS
0002DCDE <AmiBlitz3.ab3@16213>   MOVE.l $0(A5),D0
0002DCE2 <AmiBlitz3.ab3@16214>    BNE.b ucodeskip
0002DCE4 <AmiBlitz3.ab3@16215>   MOVEQ.l #-$01,D0
0002DCE8 <AmiBlitz3.ab3@16216> BRA.b usedcodef
0002DCEC <AmiBlitz3.ab3@16219>   SUB.l $0(A5),D0
0002DCEE <AmiBlitz3.ab3@16222>   LSR.w #8,D0
0002DCF2 <AmiBlitz3.ab3@16227>    MOVE.l $0(A5),D0
0002DCF6 <AmiBlitz3.ab3@16228>    BNE.b ucodeskip2
0002DCF8 <AmiBlitz3.ab3@16229>   MOVEQ.l #-$01,D0
0002DCFC <AmiBlitz3.ab3@16230> BRA.b usedcode2f
0002DD00 <AmiBlitz3.ab3@16233>   SUB.l $0(A5),D0                                          ;usedcode2
0002DD02 <AmiBlitz3.ab3@16234>   LSR.w #8,D0
0002DD04 <AmiBlitz3.ab3@16237>   LSR.w #8,D0
0002DD06 <AmiBlitz3.ab3@16242>   MOVE.l D0,-(A7)
0002DD08 <AmiBlitz3.ab3@16245>   MOVE.l (A7)+,D0
0002DD0A <AmiBlitz3.ab3@16248>   MOVE.l D0,D0
0002DD0E <AmiBlitz3.ab3@16254>   BSR.w JL_0_A9A0
0002DD12 <AmiBlitz3.ab3@16256>   MOVE.w -$2(A2,D0.L),D3
0002DD16 <AmiBlitz3.ab3@16257>   CMP.w #$9,D3
0002DD1A <AmiBlitz3.ab3@16258>    BCC.w doused__skip
0002DD1E <AmiBlitz3.ab3@16262>   LEA usedcode(PC),A0
0002DD22 <AmiBlitz3.ab3@16263>   LEA usedcodef(PC),A1
0002DD28 <AmiBlitz3.ab3@16265>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002DD2C <AmiBlitz3.ab3@16266>   ANDI.w #$7,D3
0002DD2E <AmiBlitz3.ab3@16267>   LSL.w #8,D3
0002DD30 <AmiBlitz3.ab3@16268>   LSL.w #1,D3
0002DD34 <AmiBlitz3.ab3@16269>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002DD38 <AmiBlitz3.ab3@16270> BRA.w doused__skip2
0002DD3C <AmiBlitz3.ab3@16275>   LEA usedcode2(PC),A0
0002DD40 <AmiBlitz3.ab3@16276>   LEA usedcode2f(PC),A1
0002DD46 <AmiBlitz3.ab3@16278>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002DD48 <AmiBlitz3.ab3@16279>   SUBQ.w #8,D3
0002DD4A <AmiBlitz3.ab3@16280>   LSL.w #8,D3
0002DD4C <AmiBlitz3.ab3@16281>   LSL.w #1,D3
0002DD50 <AmiBlitz3.ab3@16282>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002DD54 <AmiBlitz3.ab3@16285>   MOVE.w -$6(A2,D0.L),D3
0002DD58 <AmiBlitz3.ab3@16286>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002DD5A <AmiBlitz3.ab3@16287>   ADDQ.w #4,D3
0002DD5E <AmiBlitz3.ab3@16288>   MOVE.w D3,$2(A0)
0002DD64 <AmiBlitz3.ab3@16289>   MOVE.w regnum,D1
0002DD68 <AmiBlitz3.ab3@16290>    BEQ.w doused__skip3
0002DD6C <AmiBlitz3.ab3@16291>   MOVE.w usedprep(PC),D1
0002DD70 <AmiBlitz3.ab3@16292>    BSR.w writeword
0002DD74 <AmiBlitz3.ab3@16295>   BSR.w pokecode
0002DD7A <AmiBlitz3.ab3@16296>   MOVE.w regnum,D1
0002DD7E <AmiBlitz3.ab3@16297>    BEQ.w doused__skip4
0002DD80 <AmiBlitz3.ab3@16298>   LSL.w #8,D1
0002DD82 <AmiBlitz3.ab3@16299>   LSL.w #1,D1
0002DD86 <AmiBlitz3.ab3@16300>   OR.w usedfix(PC),D1
0002DD8A <AmiBlitz3.ab3@16301>    BSR.w writeword
0002DD8E <AmiBlitz3.ab3@16302>   MOVE.w useddone(PC),D1
0002DD92 <AmiBlitz3.ab3@16303>    BSR.w writeword
0002DD94 <AmiBlitz3.ab3@16306>    MOVEQ.l #$02,D2
0002DD98 <AmiBlitz3.ab3@16307> BRA.w get1bytemain
0002DD9C <AmiBlitz3.ab3@16315>    BSR.w JL_0_A9A0
0002DD9E <AmiBlitz3.ab3@16317>   MOVEQ.l #$00,D3
0002DDA2 <AmiBlitz3.ab3@16318>   MOVE.w -$4(A2,D0.L),D3
0002DDA6 <AmiBlitz3.ab3@16319>    BSR.w get1bytemain
0002DDAA <AmiBlitz3.ab3@16320> BRA.w JL_0_B46E
0002DDAE <AmiBlitz3.ab3@16327>    BSR.w get1bytemain
0002DDB0 <AmiBlitz3.ab3@16328>   MOVE.w D0,-(A7)
0002DDB4 <AmiBlitz3.ab3@16329>    BSR.w get1bytemain
0002DDB8 <AmiBlitz3.ab3@16330>   CMP.w #$28,D0
0002DDBC <AmiBlitz3.ab3@16331>    BNE.w syntaxerr
0002DDBE <AmiBlitz3.ab3@16332>   MOVE.w (A7)+,D0
0002DDC2 <AmiBlitz3.ab3@16333>    BSR.w JL_0_C340
0002DDC6 <AmiBlitz3.ab3@16334>    BSR.w reget
0002DDCA <AmiBlitz3.ab3@16335>   CMP.w #$29,D0
0002DDCE <AmiBlitz3.ab3@16336>    BNE.w syntaxerr
0002DDD2 <AmiBlitz3.ab3@16340>   LEA addrcode(PC),A0
0002DDD6 <AmiBlitz3.ab3@16341>   LEA addrcodef(PC),A1
0002DDDC <AmiBlitz3.ab3@16342>   MOVE.w -$6(A2),$2(A0)
0002DDE0 <AmiBlitz3.ab3@16343>   MOVE.w $4(A0),D1
0002DDE4 <AmiBlitz3.ab3@16344>   ANDI.w #$FFF8,D1
0002DDEA <AmiBlitz3.ab3@16345>   OR.w regnum,D1
0002DDEE <AmiBlitz3.ab3@16346>   MOVE.w D1,$4(A0)
0002DDF2 <AmiBlitz3.ab3@16347>   MOVE.w $6(A0),D1
0002DDF6 <AmiBlitz3.ab3@16348>   ANDI.w #$F1FF,D1
0002DDFC <AmiBlitz3.ab3@16349>   MOVE.w regnum,D0
0002DDFE <AmiBlitz3.ab3@16350>   LSL.w #8,D0
0002DE00 <AmiBlitz3.ab3@16351>   LSL.w #1,D0
0002DE02 <AmiBlitz3.ab3@16352>   OR.w D0,D1
0002DE06 <AmiBlitz3.ab3@16353>   MOVE.w D1,$6(A0)
0002DE0A <AmiBlitz3.ab3@16354>    BSR.w pokecode
0002DE0C <AmiBlitz3.ab3@16355>   MOVEQ.l #$03,D2
0002DE10 <AmiBlitz3.ab3@16356> BRA.w get1bytemain
0002DE14 <AmiBlitz3.ab3@16360>   CMP.w #-$7F4D,D0
0002DE18 <AmiBlitz3.ab3@16361>    BHI.w JL_0_AAFE
0002DE1C <AmiBlitz3.ab3@16362> BRA.w syntaxerr
0002DE20 <AmiBlitz3.ab3@16369> .do_null   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002DE24 <AmiBlitz3.ab3@16370>    BNE 'nonull
0002DE2A <AmiBlitz3.ab3@16371>    MOVE.l d0,lastinstruction
0002DE2E <AmiBlitz3.ab3@16372>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002DE34 <AmiBlitz3.ab3@16373>    MOVE.w regnum,d0
0002DE36 <AmiBlitz3.ab3@16374>    ASL.l #7,d0
0002DE38 <AmiBlitz3.ab3@16375>    ASL.l #2,d0
0002DE3A <AmiBlitz3.ab3@16376>    OR.l d0,d1
0002DE3E <AmiBlitz3.ab3@16377>    BSR writeword
0002DE44 <AmiBlitz3.ab3@16378>    JSR get1bytemain
0002DE46 <AmiBlitz3.ab3@16379>    RTS
0002DE4A <AmiBlitz3.ab3@16381> 'nonull CMP.w #$c982,d0
0002DE4E <AmiBlitz3.ab3@16382>        BNE nonew_
0002DE50 <AmiBlitz3.ab3@16384>   MOVE.l a5,-(a7)
0002DE56 <AmiBlitz3.ab3@16385>   MOVE.w lastchar,-(a7)
0002DE5C <AmiBlitz3.ab3@16386>   JSR get1bytemain
0002DE60 <AmiBlitz3.ab3@16387>   CMP.w #"(",d0                                             ; use oldcode
0002DE64 <AmiBlitz3.ab3@16388>   BNE 'newcode
0002DE6A <AmiBlitz3.ab3@16389>   JSR get1bytemain
0002DE6E <AmiBlitz3.ab3@16390>   CMP.w #")",d0
0002DE72 <AmiBlitz3.ab3@16391>   BEQ 'newcode
0002DE78 <AmiBlitz3.ab3@16392>   MOVE.w (a7)+,lastchar
0002DE7A <AmiBlitz3.ab3@16393>   MOVE.l (a7)+,a5
0002DE80 <AmiBlitz3.ab3@16394>   MOVE.w lastchar,d0
0002DE84 <AmiBlitz3.ab3@16395>   BRA nonew_
0002DE86 <AmiBlitz3.ab3@16396> 'newcode  MOVE.l a0,-(a7)
0002DE8C <AmiBlitz3.ab3@16397>   TST.b blitzparloop
0002DE90 <AmiBlitz3.ab3@16398>   BNE 'err
0002DE96 <AmiBlitz3.ab3@16399>   TST.b funcparloop
0002DE9A <AmiBlitz3.ab3@16400>   BNE 'err
0002DE9E <AmiBlitz3.ab3@16401>   BRA 'ok
0002DEA4 <AmiBlitz3.ab3@16402> 'err JMP errornewnotincalls
0002DEAA <AmiBlitz3.ab3@16403> 'ok  MOVE.l #$203c0000,d1
0002DEAE <AmiBlitz3.ab3@16404>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002DEB0 <AmiBlitz3.ab3@16405>   MOVEQ #0,d1
0002DEB4 <AmiBlitz3.ab3@16406>   MOVE.w 8(a0),d1
0002DEB8 <AmiBlitz3.ab3@16407>   BSR writeword
0002DEBC <AmiBlitz3.ab3@16408>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002DEC0 <AmiBlitz3.ab3@16409>   BSR writeword
0002DEC4 <AmiBlitz3.ab3@16410>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002DEC8 <AmiBlitz3.ab3@16411>   BSR.w tokejsr2
0002DECA <AmiBlitz3.ab3@16412>   MOVE.l (a7)+,a0
0002DECC <AmiBlitz3.ab3@16413>   ADDQ.l #6,a7                      ; a5 need not restore
0002DED0 <AmiBlitz3.ab3@16414>   CMP.w #")",d0
0002DED4 <AmiBlitz3.ab3@16415>   BNE 'nobracket
0002DEDA <AmiBlitz3.ab3@16416>   JSR get1bytemain
0002DEDC <AmiBlitz3.ab3@16417> 'nobracket  RTS
0002DEE0 <AmiBlitz3.ab3@16419> nonew_  CMP.w #-$7F4A,D0
0002DEE4 <AmiBlitz3.ab3@16420>    BEQ.w JL_0_A98C
0002DEE8 <AmiBlitz3.ab3@16421>   CMP.w #-$7F48,D0
0002DEEC <AmiBlitz3.ab3@16422>    BEQ.w doaddr
0002DEF0 <AmiBlitz3.ab3@16423>   CMP.w #-$7F3C,D0
0002DEF4 <AmiBlitz3.ab3@16424>    BEQ.w domaximum
0002DEF8 <AmiBlitz3.ab3@16425>   CMP.w #-$7F2F,D0
0002DEFC <AmiBlitz3.ab3@16426>    BEQ.w doused
0002DEFE <AmiBlitz3.ab3@16427>   MOVE.w D2,-(A7)
0002DF00 <AmiBlitz3.ab3@16428>   MOVE.w D0,D1
0002DF04 <AmiBlitz3.ab3@16429>   BCLR #$F,D1
0002DF08 <AmiBlitz3.ab3@16431>    BSR.w searchinstr
0002DF0A <AmiBlitz3.ab3@16432>   MOVE.w (A3),D1
0002DF0E <AmiBlitz3.ab3@16433>   BTST #$1,D1
0002DF12 <AmiBlitz3.ab3@16434>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DF16 <AmiBlitz3.ab3@16435>   BTST #$2,D1
0002DF1A <AmiBlitz3.ab3@16436>    BNE.w JL_0_AC1A
0002DF1C <AmiBlitz3.ab3@16437>   LSR.w #8,D1
0002DF22 <AmiBlitz3.ab3@16438>   BTST #$3,$1(A3)
0002DF26 <AmiBlitz3.ab3@16439>    BEQ.w JL_0_AB4C
0002DF2C <AmiBlitz3.ab3@16440>    JSR AJL_0_498A
0002DF32 <AmiBlitz3.ab3@16443>    CLR.l rightsidetype
0002DF38 <AmiBlitz3.ab3@16444>    CLR.w rightsideflagmask
0002DF3A <AmiBlitz3.ab3@16445>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DF3E <AmiBlitz3.ab3@16446>   CMP.w #$7,D1
0002DF42 <AmiBlitz3.ab3@16447>    BNE.w JL_0_AB5E
0002DF44 <AmiBlitz3.ab3@16448>   MOVE.l A2,-(A7)
0002DF48 <AmiBlitz3.ab3@16449>    BSR.w makesbase
0002DF4A <AmiBlitz3.ab3@16450>   MOVEA.l (A7)+,A2
0002DF4E <AmiBlitz3.ab3@16453>     BSR.w JL_0_AFA2
0002DF50 <AmiBlitz3.ab3@16454>   MOVE.w D3,-(A7)
0002DF54 <AmiBlitz3.ab3@16455>    BSR.w get1bytemain
0002DF56 <AmiBlitz3.ab3@16456>   MOVEQ.l #$00,D1
0002DF5A <AmiBlitz3.ab3@16457>   CMP.w #$28,D0
0002DF5E <AmiBlitz3.ab3@16458>    BNE.w JL_0_AB80
0002DF64 <AmiBlitz3.ab3@16459>    JSR JL_0_66F6
0002DF66 <AmiBlitz3.ab3@16460>   TST.w D1
0002DF6A <AmiBlitz3.ab3@16461>    BEQ.w syntaxerr
0002DF6E <AmiBlitz3.ab3@16462> BRA.w JL_0_AB84
0002DF78 <AmiBlitz3.ab3@16467>   MOVE.w oldqflag,instringon
0002DF7E <AmiBlitz3.ab3@16468>   MOVEA.l lastsourcepos,A5
0002DF84 <AmiBlitz3.ab3@16471>    MOVE.w regnum,-(A7)
0002DF8E <AmiBlitz3.ab3@16472>    MOVE.w regnum,regnumstore
0002DF94 <AmiBlitz3.ab3@16473>    TST.b fpu
0002DF98 <AmiBlitz3.ab3@16474>             BEQ 'nofloat
0002DF9E <AmiBlitz3.ab3@16475>             CMP.w #$ffff,28(a3)
0002DFA2 <AmiBlitz3.ab3@16476>             BNE 'nofloat
0002DFA8 <AmiBlitz3.ab3@16477>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DFAC <AmiBlitz3.ab3@16478>             BEQ 'nofloat
0002DFB2 <AmiBlitz3.ab3@16479>             CMP.w #$3c02,34(a3)                            ;int skip
0002DFB6 <AmiBlitz3.ab3@16480>             BEQ 'quick
0002DFBA <AmiBlitz3.ab3@16481>             CMP.b #5,(a3)
0002DFBE <AmiBlitz3.ab3@16482>             BNE 'nofloat
0002DFC4 <AmiBlitz3.ab3@16485>             CLR.l load_var_addr
0002DFC8 <AmiBlitz3.ab3@16486> BRA 'isfpu
0002DFCE <AmiBlitz3.ab3@16489>    CLR.w regnum
0002DFD0 <AmiBlitz3.ab3@16492>    MOVE.w D1,-(A7)
0002DFD6 <AmiBlitz3.ab3@16493>   BTST #$3,$1(A3)
0002DFDA <AmiBlitz3.ab3@16494>    BEQ.w JL_0_ABB0
0002DFDE <AmiBlitz3.ab3@16513>   MOVE.w $6(A7),D1
0002DFE4 <AmiBlitz3.ab3@16514>   MOVE.w d1,peeksize
0002DFE8 <AmiBlitz3.ab3@16524>   ORI.w #$7000,D1
0002DFEC <AmiBlitz3.ab3@16525>   BSR.w writeword                                          ;write peekmode
0002DFF2 <AmiBlitz3.ab3@16528>   ADDQ.w #1,regnum
0002DFF4 <AmiBlitz3.ab3@16529>   MOVE.w (A7),D1
0002DFFC <AmiBlitz3.ab3@16532>   MOVE.w 2(a7),tempregnum
0002E002 <AmiBlitz3.ab3@16533>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E008 <AmiBlitz3.ab3@16534>   CLR.w parnum                                              ;7.2014
0002E00E <AmiBlitz3.ab3@16535>   JSR JL_0_4878                                             ;write code of blitzfunc
0002E014 <AmiBlitz3.ab3@16536>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E016 <AmiBlitz3.ab3@16537>   TST.w (A7)+
0002E01A <AmiBlitz3.ab3@16538>   BEQ.w JL_0_ABC6
0002E01E <AmiBlitz3.ab3@16539>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E022 <AmiBlitz3.ab3@16540>   BNE.w errorbracketmiss                                    ; was syntax error
0002E028 <AmiBlitz3.ab3@16541>   CLR.l lasttoken
0002E02C <AmiBlitz3.ab3@16542>   BSR.w get1bytemain
0002E02E <AmiBlitz3.ab3@16545>    MOVE.w (A7)+,D1
0002E034 <AmiBlitz3.ab3@16546>    MOVE.w D1,regnum
0002E038 <AmiBlitz3.ab3@16547>    BEQ.w JL_0_ABDE
0002E03E <AmiBlitz3.ab3@16548>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E042 <AmiBlitz3.ab3@16549>    BNE 'noval
0002E048 <AmiBlitz3.ab3@16550>    TST.b fpu
0002E04C <AmiBlitz3.ab3@16551>    BEQ 'noval
0002E052 <AmiBlitz3.ab3@16552>    CLR.l load_var_addr
0002E054 <AmiBlitz3.ab3@16553>    MOVEQ #0,d1
0002E05A <AmiBlitz3.ab3@16554>    MOVE.w regnum,d1
0002E05C <AmiBlitz3.ab3@16555>    LSL.l #7,d1
0002E062 <AmiBlitz3.ab3@16556>    OR.l #$f2000000,d1
0002E066 <AmiBlitz3.ab3@16557>    BSR writelong
0002E06A <AmiBlitz3.ab3@16558> BRA JL_0_ABDE
0002E070 <AmiBlitz3.ab3@16562>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E074 <AmiBlitz3.ab3@16563>    BEQ 'quick
0002E078 <AmiBlitz3.ab3@16564>    CMP.b #5,d2
0002E07C <AmiBlitz3.ab3@16565>    BNE 'nofpu
0002E082 <AmiBlitz3.ab3@16566>    TST.b fpu
0002E086 <AmiBlitz3.ab3@16567>    BEQ 'nofpu
0002E08C <AmiBlitz3.ab3@16572>    CLR.l load_var_addr
0002E090 <AmiBlitz3.ab3@16573> BRA JL_0_ABDE
0002E092 <AmiBlitz3.ab3@16576>   LSL.w #8,D1
0002E094 <AmiBlitz3.ab3@16577>   LSL.w #1,D1
0002E098 <AmiBlitz3.ab3@16578>   ORI.w #$2000,D1
0002E09C <AmiBlitz3.ab3@16579>   BSR.w writeword                                          ;write move.l d0,dx
0002E0A2 <AmiBlitz3.ab3@16580>   TST.b fpu
0002E0A6 <AmiBlitz3.ab3@16581>   BEQ JL_0_ABDE
0002E0A8 <AmiBlitz3.ab3@16582>   MOVEQ #0,d1
0002E0AE <AmiBlitz3.ab3@16583>   MOVE.w regnum,d1
0002E0B0 <AmiBlitz3.ab3@16584>   LSL.l #7,d1
0002E0B6 <AmiBlitz3.ab3@16585>   OR.l #$f2000000,d1
0002E0B8 <AmiBlitz3.ab3@16589>        MOVE.w (A7)+,D3
0002E0BC <AmiBlitz3.ab3@16590>        BEQ.w JL_0_ABFC
0002E0C2 <AmiBlitz3.ab3@16591>        TST.b fpu
0002E0C6 <AmiBlitz3.ab3@16592>        BEQ 'nofpu
0002E0C8 <AmiBlitz3.ab3@16593>       MOVE.l d0,-(a7)
0002E0CA <AmiBlitz3.ab3@16594>        MOVE.l a0,-(a7)
0002E0D0 <AmiBlitz3.ab3@16595>        MOVE.l stacktrack,d1
0002E0D6 <AmiBlitz3.ab3@16596>        LEA fpustackbase,a0
0002E0DE <AmiBlitz3.ab3@16597>        MOVE.w 0(a0,d1),regmask
0002E0E0 <AmiBlitz3.ab3@16598>        MOVE.l (a7)+,a0
0002E0E4 <AmiBlitz3.ab3@16599>       MOVE.w #8,d0
0002E0E8 <AmiBlitz3.ab3@16602>       BEQ 'ready
0002E0EE <AmiBlitz3.ab3@16603>       BTST d0,regmask
0002E0F2 <AmiBlitz3.ab3@16604>       BEQ 'noa7
0002E0F4 <AmiBlitz3.ab3@16605>       MOVEQ #0,d1
0002E0F6 <AmiBlitz3.ab3@16606>       MOVE.w d0,d1
0002E0F8 <AmiBlitz3.ab3@16607>       SUBQ.w #1,d1
0002E0FA <AmiBlitz3.ab3@16608>       ASL #7,d1
0002E100 <AmiBlitz3.ab3@16610>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E104 <AmiBlitz3.ab3@16611>       BSR writelong
0002E10A <AmiBlitz3.ab3@16612>       SUBQ.l #2,stacktrack
0002E10C <AmiBlitz3.ab3@16615>       SUBQ.w #1,d0
0002E110 <AmiBlitz3.ab3@16616>       BNE 'loop
0002E112 <AmiBlitz3.ab3@16619>       MOVE.l (a7)+,d0
0002E118 <AmiBlitz3.ab3@16620>       SUBQ.l #2,stacktrack                                 ;int track
0002E11C <AmiBlitz3.ab3@16623>    MOVE.w #$4CDF,D1
0002E120 <AmiBlitz3.ab3@16624>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E122 <AmiBlitz3.ab3@16625>   MOVEQ.l #$00,D1
0002E124 <AmiBlitz3.ab3@16626>   MOVEQ.l #$0F,D4
0002E126 <AmiBlitz3.ab3@16629>     LSL.w #1,D3
0002E128 <AmiBlitz3.ab3@16630>     ROXR.w #1,D1
0002E12C <AmiBlitz3.ab3@16631>   DBF D4,JL_0_ABF0
0002E130 <AmiBlitz3.ab3@16633>    BSR.w writeword
0002E136 <AmiBlitz3.ab3@16634>    TST.b fast
0002E13A <AmiBlitz3.ab3@16635>    BEQ JL_0_ABFC
0002E140 <AmiBlitz3.ab3@16636>    TST.w regnum
0002E144 <AmiBlitz3.ab3@16637>    BEQ JL_0_ABFC
0002E14A <AmiBlitz3.ab3@16638>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E14E <AmiBlitz3.ab3@16639>    BNE 'l1
0002E154 <AmiBlitz3.ab3@16640>    MOVE.w regnum,d1
0002E156 <AmiBlitz3.ab3@16641>    ASL.l #8,d1
0002E158 <AmiBlitz3.ab3@16642>    ASL.l #1,d1
0002E15C <AmiBlitz3.ab3@16643>    OR.w #$70ff,d1
0002E166 <AmiBlitz3.ab3@16644>    SUB.l #12,destpointer
0002E16A <AmiBlitz3.ab3@16645>    BSR writeword
0002E170 <AmiBlitz3.ab3@16648>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E174 <AmiBlitz3.ab3@16649>    BNE 'l2
0002E17A <AmiBlitz3.ab3@16650>     MOVE.w regnum,d1
0002E17C <AmiBlitz3.ab3@16651>     ASL.l #8,d1
0002E17E <AmiBlitz3.ab3@16652>     ASL.l #1,d1
0002E182 <AmiBlitz3.ab3@16653>     OR.w #$7000,d1
0002E18C <AmiBlitz3.ab3@16654>     SUB.l #12,destpointer
0002E190 <AmiBlitz3.ab3@16655>     BSR writeword
0002E192 <AmiBlitz3.ab3@16659>    MOVE.w (A7)+,D2
0002E196 <AmiBlitz3.ab3@16660>   CMP.w #$7,D2                                             ;destination var type
0002E19A <AmiBlitz3.ab3@16661>    BNE.w JL_0_AC16
0002E1A0 <AmiBlitz3.ab3@16662>   MOVE.w putstlen,D1
0002E1A6 <AmiBlitz3.ab3@16663>   OR.w regnum,D1
0002E1AA <AmiBlitz3.ab3@16664>    BSR.w writeword
0002E1AE <AmiBlitz3.ab3@16667> BRA.w JL_0_AF66
0002E1B2 <AmiBlitz3.ab3@16672>   MOVE.w $6(A3),D1
0002E1B6 <AmiBlitz3.ab3@16673>    BSR.w uselib
0002E1BA <AmiBlitz3.ab3@16674>    BSR.w JL_0_AD40
0002E1BC <AmiBlitz3.ab3@16675>   MOVE.l D4,D1
0002E1BE <AmiBlitz3.ab3@16676>   MOVE.l D5,-(A7)
0002E1C2 <AmiBlitz3.ab3@16677>    BSR.w JL_0_AD38
0002E1C6 <AmiBlitz3.ab3@16678>   MOVE.w $A(A1),-(A7)
0002E1C8 <AmiBlitz3.ab3@16679>   ADDQ.w #8,A3
0002E1CA <AmiBlitz3.ab3@16680>   MOVE.w (A3)+,-(A7)
0002E1CC <AmiBlitz3.ab3@16681>   MOVE.l A3,-(A7)
0002E1D0 <AmiBlitz3.ab3@16682>    BSR.w get1bytemain
0002E1D2 <AmiBlitz3.ab3@16683>   MOVE.w D0,-(A7)
0002E1D4 <AmiBlitz3.ab3@16684>   MOVEQ.l #$00,D3
0002E1DA <AmiBlitz3.ab3@16685>   JSR checka4a5
0002E1DC <AmiBlitz3.ab3@16687>   MOVE.b (A3)+,D1
0002E1E0 <AmiBlitz3.ab3@16688>    BMI.w JL_0_AC6A
0002E1E2 <AmiBlitz3.ab3@16689>   MOVEQ.l #$03,D2
0002E1E4 <AmiBlitz3.ab3@16690>   ADDQ.w #1,D3
0002E1E8 <AmiBlitz3.ab3@16691>   MOVEM.l D3/A3,-(A7)
0002E1EE <AmiBlitz3.ab3@16692>   MOVE.b funcparloop,-(a7)
0002E1F4 <AmiBlitz3.ab3@16693>   CLR.b funcparloop
0002E1FA <AmiBlitz3.ab3@16694>   MOVE.b blitzparloop,-(a7)
0002E202 <AmiBlitz3.ab3@16695>   MOVE.b #1,blitzparloop
0002E208 <AmiBlitz3.ab3@16696>   MOVE.l lasttoken,-(a7)
0002E20E <AmiBlitz3.ab3@16697>   MOVE.l leftsidetype,-(a7)
0002E214 <AmiBlitz3.ab3@16698>   MOVE.l rightsidetype,-(a7)
0002E218 <AmiBlitz3.ab3@16699>   BSR.w peval
0002E21E <AmiBlitz3.ab3@16700>   MOVE.l (a7)+,rightsidetype
0002E224 <AmiBlitz3.ab3@16701>   MOVE.l (a7)+,leftsidetype
0002E22A <AmiBlitz3.ab3@16702>   MOVE.l (a7)+,lasttoken
0002E230 <AmiBlitz3.ab3@16703>   MOVE.b (a7)+,blitzparloop
0002E236 <AmiBlitz3.ab3@16704>   MOVE.b (a7)+,funcparloop
0002E23C <AmiBlitz3.ab3@16705>   SUBQ.w #4,a2offset
0002E240 <AmiBlitz3.ab3@16706>   MOVEM.l (A7)+,D3/A3
0002E244 <AmiBlitz3.ab3@16707>   CMP.w #$2C,D0
0002E248 <AmiBlitz3.ab3@16708>    BEQ.w JL_0_AC40
0002E24A <AmiBlitz3.ab3@16709>   TST.b (A3)
0002E24E <AmiBlitz3.ab3@16710>    BPL.w syntaxerr
0002E250 <AmiBlitz3.ab3@16713>   MOVE.w (A7)+,D1
0002E254 <AmiBlitz3.ab3@16714>    BSR.w JL_0_AD04
0002E256 <AmiBlitz3.ab3@16715>   MOVEA.l (A7)+,A3
0002E258 <AmiBlitz3.ab3@16716>   SUBQ.w #1,D3
0002E25C <AmiBlitz3.ab3@16717>    BMI.w JL_0_ACBE
0002E25E <AmiBlitz3.ab3@16720>   TST.b (A3)+
0002E262 <AmiBlitz3.ab3@16721>    BPL.w JL_0_AC78
0002E264 <AmiBlitz3.ab3@16722>   SUBQ.w #1,A3
0002E266 <AmiBlitz3.ab3@16725>     MOVEQ.l #$00,D1
0002E268 <AmiBlitz3.ab3@16726>     MOVE.b -(A3),D1
0002E26C <AmiBlitz3.ab3@16727>     BTST #$4,D1
0002E270 <AmiBlitz3.ab3@16728>      BNE.w JL_0_ACAA
0002E276 <AmiBlitz3.ab3@16729>     CMP.w regnum,D1
0002E27A <AmiBlitz3.ab3@16730>      BCC.w JL_0_AC9E
0002E27C <AmiBlitz3.ab3@16731>     BSET D1,D5
0002E27E <AmiBlitz3.ab3@16732>     MOVEQ.l #$0F,D0
0002E280 <AmiBlitz3.ab3@16733>     SUB.w D1,D0
0002E282 <AmiBlitz3.ab3@16734>     BSET D0,D4
0002E284 <AmiBlitz3.ab3@16737>     LSL.w #8,D1
0002E286 <AmiBlitz3.ab3@16738>     LSL.w #1,D1
0002E28A <AmiBlitz3.ab3@16739>     ORI.w #$201F,D1
0002E28E <AmiBlitz3.ab3@16740>   BRA.w JL_0_ACB6
0002E292 <AmiBlitz3.ab3@16743>     ANDI.w #$7,D1
0002E294 <AmiBlitz3.ab3@16744>     LSL.w #8,D1
0002E296 <AmiBlitz3.ab3@16745>     LSL.w #1,D1
0002E29A <AmiBlitz3.ab3@16746>     ORI.w #$205F,D1
0002E29E <AmiBlitz3.ab3@16749>      BSR.w writeword
0002E2A2 <AmiBlitz3.ab3@16750>   DBF D3,JL_0_AC80
0002E2A8 <AmiBlitz3.ab3@16753>   MOVE.w (A7)+,libjsr+2
0002E2AE <AmiBlitz3.ab3@16754>   MOVE.w (A7)+,libbase+2
0002E2B4 <AmiBlitz3.ab3@16755>   MOVE.l libbase,D1
0002E2B8 <AmiBlitz3.ab3@16756>    BSR.w writelong
0002E2BE <AmiBlitz3.ab3@16757>   MOVE.l libjsr,D1
0002E2C2 <AmiBlitz3.ab3@16758>    BSR.w writelong
0002E2C8 <AmiBlitz3.ab3@16759>   MOVE.w regnum,D1
0002E2CC <AmiBlitz3.ab3@16760>    BEQ.w JL_0_ACF4
0002E2CE <AmiBlitz3.ab3@16761>   LSL.w #8,D1
0002E2D0 <AmiBlitz3.ab3@16762>   LSL.w #1,D1
0002E2D4 <AmiBlitz3.ab3@16763>   ORI.w #$2000,D1
0002E2D8 <AmiBlitz3.ab3@16764>    BSR.w writeword
0002E2DA <AmiBlitz3.ab3@16767>   MOVE.l (A7)+,D1
0002E2DE <AmiBlitz3.ab3@16768>    BSR.w JL_0_AD38
0002E2E4 <AmiBlitz3.ab3@16769>    JSR restorea4a5
0002E2E6 <AmiBlitz3.ab3@16770>   MOVEQ.l #$03,D2
0002E2EA <AmiBlitz3.ab3@16771>    BSR.w reget
0002E2EE <AmiBlitz3.ab3@16772> BRA.w JL_0_AF66
0002E2F0 <AmiBlitz3.ab3@16775>   TST.w D3
0002E2F4 <AmiBlitz3.ab3@16776>    BEQ.w JL_0_AD1E
0002E2F8 <AmiBlitz3.ab3@16777>   CMP.w #$28,D1
0002E2FC <AmiBlitz3.ab3@16778>    BNE.w syntaxerr
0002E300 <AmiBlitz3.ab3@16779>   CMP.w #$29,D0
0002E304 <AmiBlitz3.ab3@16780>    BNE.w syntaxerr
0002E308 <AmiBlitz3.ab3@16781> BRA.w get1bytemain
0002E30C <AmiBlitz3.ab3@16784>   CMP.w #$28,D1
0002E310 <AmiBlitz3.ab3@16785>    BNE.w JL_0_AD36
0002E314 <AmiBlitz3.ab3@16786>    BSR.w get1bytemain
0002E318 <AmiBlitz3.ab3@16787>   CMP.w #$29,D0
0002E31C <AmiBlitz3.ab3@16788>    BNE.w syntaxerr
0002E320 <AmiBlitz3.ab3@16789> BRA.w get1bytemain
0002E322 <AmiBlitz3.ab3@16792> RTS
0002E324 <AmiBlitz3.ab3@16795>   TST.w D1
0002E328 <AmiBlitz3.ab3@16796>    BNE.w writelong
0002E32A <AmiBlitz3.ab3@16797> RTS
0002E32E <AmiBlitz3.ab3@16801>   MOVE.w #$48E7,D4
0002E330 <AmiBlitz3.ab3@16802>   SWAP D4
0002E332 <AmiBlitz3.ab3@16803>   CLR.w D4
0002E336 <AmiBlitz3.ab3@16804>   MOVE.w #$4CDF,D5
0002E338 <AmiBlitz3.ab3@16805>   SWAP D5
0002E33A <AmiBlitz3.ab3@16806>   CLR.w D5
0002E340 <AmiBlitz3.ab3@16807>   MOVE.w regnum,D1
0002E344 <AmiBlitz3.ab3@16808>    BEQ.w JL_0_AD74
0002E348 <AmiBlitz3.ab3@16809>   BSET #$F,D4
0002E34C <AmiBlitz3.ab3@16810>   BSET #$0,D5
0002E350 <AmiBlitz3.ab3@16811>   CMP.w #$2,D1
0002E354 <AmiBlitz3.ab3@16812>    BCS.w JL_0_AD72
0002E358 <AmiBlitz3.ab3@16815>   BSET #$E,D4
0002E35C <AmiBlitz3.ab3@16816>   BSET #$1,D5
0002E35E <AmiBlitz3.ab3@16819> RTS
0002E364 <AmiBlitz3.ab3@16822>   TST.w fuckpos
0002E368 <AmiBlitz3.ab3@16823>   BNE.w JL_0_AD6A
0002E36A <AmiBlitz3.ab3@16824> RTS
0002E36C <AmiBlitz3.ab3@16827> fuckpos:  Ds.w 1
0002E372 <AmiBlitz3.ab3@16831>   MOVE.w sbasegot,D1
0002E376 <AmiBlitz3.ab3@16832>    BEQ.w makesbase__skip
0002E37A <AmiBlitz3.ab3@16836>   MOVE.w sbgot(PC),D1
0002E37E <AmiBlitz3.ab3@16837>    BNE.w makesbase__skip2
0002E386 <AmiBlitz3.ab3@16841>   MOVE.w #$0002,sbgot
0002E38C <AmiBlitz3.ab3@16842>   MOVE.w movea3a7,D1
0002E390 <AmiBlitz3.ab3@16843> BRA.w writeword
0002E392 <AmiBlitz3.ab3@16846> RTS
0002E39A <AmiBlitz3.ab3@16851>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E3A0 <AmiBlitz3.ab3@16854>   MOVE.l #$C601,D1
0002E3A8 <AmiBlitz3.ab3@16855>   MOVE.w #-1,sbasegot
0002E3AE <AmiBlitz3.ab3@16856>   MOVE.l d1,lastinstruction
0002E3B2 <AmiBlitz3.ab3@16857>   BSR.w Atokejsr
0002E3B4 <AmiBlitz3.ab3@16858> RTS
0002E3BE <AmiBlitz3.ab3@16863>   MOVE.l data1,litdata1
0002E3C4 <AmiBlitz3.ab3@16864>   TST.b fast
0002E3C8 <AmiBlitz3.ab3@16865>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E3CC <AmiBlitz3.ab3@16869> BRA 'l50                                                   ;to deactivate
0002E3D2 <AmiBlitz3.ab3@16875>   TST.b optistring
0002E3D6 <AmiBlitz3.ab3@16876>   BNE.s 'l21
0002E3DC <AmiBlitz3.ab3@16877>   CLR.b string1
0002E3E4 <AmiBlitz3.ab3@16878>   MOVE.b #1,optistring
0002E3EA <AmiBlitz3.ab3@16879>   TST.b nostringopt
0002E3EE <AmiBlitz3.ab3@16880>   BNE 'l21
0002E3F0 <AmiBlitz3.ab3@16881>   MOVE.l a5,a4
0002E3F2 <AmiBlitz3.ab3@16882>   SUBQ.l #1,a4
0002E3F4 <AmiBlitz3.ab3@16885>     TST.b (a4)
0002E3F8 <AmiBlitz3.ab3@16886>     BMI 'l19a
0002E3FC <AmiBlitz3.ab3@16887>     BEQ.s 'l20
0002E400 <AmiBlitz3.ab3@16888>     CMP.b #$22,(a4)
0002E404 <AmiBlitz3.ab3@16889>     BEQ.s 'l19
0002E40A <AmiBlitz3.ab3@16892>     TST.w string1
0002E40E <AmiBlitz3.ab3@16893>     BNE 'l11
0002E412 <AmiBlitz3.ab3@16894>     CMP.b #":",(a4)
0002E416 <AmiBlitz3.ab3@16895>     BEQ.s 'l20
0002E41A <AmiBlitz3.ab3@16896>     CMP.b #";",(a4)
0002E41E <AmiBlitz3.ab3@16897>     BEQ.s 'l20
0002E422 <AmiBlitz3.ab3@16898>     CMP.b #"+",(a4)
0002E426 <AmiBlitz3.ab3@16899>     BEQ.s 'l21
0002E42A <AmiBlitz3.ab3@16900>     CMP.b #",",(a4)
0002E42E <AmiBlitz3.ab3@16901>     BEQ.s 'l20                                             ;was l21
0002E432 <AmiBlitz3.ab3@16902>     CMP.b #")",(a4)
0002E436 <AmiBlitz3.ab3@16903>     BEQ.s 'l20                                             ;was l21
0002E438 <AmiBlitz3.ab3@16906>     ADDQ.l #1,a4
0002E43C <AmiBlitz3.ab3@16907> BRA.s 'l10
0002E444 <AmiBlitz3.ab3@16910>   BCHG #0,string1
0002E448 <AmiBlitz3.ab3@16911> BRA 'l18
0002E44A <AmiBlitz3.ab3@16914>   ADDQ.l #1,a4
0002E44C <AmiBlitz3.ab3@16915>   TST.b (a4)
0002E450 <AmiBlitz3.ab3@16916>   BEQ 'l21
0002E454 <AmiBlitz3.ab3@16917> BRA 'l11
0002E456 <AmiBlitz3.ab3@16920>   MOVE.l a5,a4
0002E458 <AmiBlitz3.ab3@16921>   SUBQ.l #1,a4
0002E45C <AmiBlitz3.ab3@16924>   CMP.b #$20,-(a4)
0002E460 <AmiBlitz3.ab3@16925>   BEQ 'll1
0002E464 <AmiBlitz3.ab3@16926>   CMP.b #"+",(a4)
0002E468 <AmiBlitz3.ab3@16927>   BEQ 'l21
0002E470 <AmiBlitz3.ab3@16942>   MOVE.b #2,optistring
0002E478 <AmiBlitz3.ab3@16945>   CMP.b #2,optistring
0002E47C <AmiBlitz3.ab3@16946>   BEQ.s 'l100
0002E480 <AmiBlitz3.ab3@16949>   BSR.w makesbase
0002E484 <AmiBlitz3.ab3@16950>   BSR.w pokedata1                                          ;writestringsizespace
0002E488 <AmiBlitz3.ab3@16951>   BSR.w pokedata1
0002E48A <AmiBlitz3.ab3@16954>   MOVEQ.l #$00,D2
0002E490 <AmiBlitz3.ab3@16957>     MOVE.l a5,lastsourcepos
0002E492 <AmiBlitz3.ab3@16958>     MOVEQ #0,d0
0002E494 <AmiBlitz3.ab3@16959>     MOVE.b (a5)+,d0
0002E496 <AmiBlitz3.ab3@16960>     TST.w D0
0002E49A <AmiBlitz3.ab3@16961>      BEQ.w notqerr
0002E49E <AmiBlitz3.ab3@16962>     CMP.w #$22,D0                                          ; --- " ---
0002E4A2 <AmiBlitz3.ab3@16963>      BEQ.w JL_0_ADF6
0002E4A6 <AmiBlitz3.ab3@16964>     CMP.b #"\",d0
0002E4AA <AmiBlitz3.ab3@16965>      BNE 'l1
0002E4AE <AmiBlitz3.ab3@16966>     CMP.b #"\",(a5)
0002E4B2 <AmiBlitz3.ab3@16967>      BNE 'l1
0002E4B8 <AmiBlitz3.ab3@16968>     TST.b newsyntax
0002E4BC <AmiBlitz3.ab3@16969>      BEQ 'l1
0002E4C2 <AmiBlitz3.ab3@16970>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E4C6 <AmiBlitz3.ab3@16971>     BNE 'l2
0002E4C8 <AmiBlitz3.ab3@16972>     ADDQ #2,a5
0002E4CA <AmiBlitz3.ab3@16975>     ADDQ.w #1,D2
0002E4CC <AmiBlitz3.ab3@16976>     MOVE.w D0,D1
0002E4D0 <AmiBlitz3.ab3@16977>     BSR.w pokedata1b                                        ;writestring
0002E4D4 <AmiBlitz3.ab3@16978> BRA.w writestring
0002E4DA <AmiBlitz3.ab3@16981>     JSR check_newconstants
0002E4DE <AmiBlitz3.ab3@16982> BRA writestring
0002E4E4 <AmiBlitz3.ab3@16985>   NOT instringon
0002E4EA <AmiBlitz3.ab3@16986>   MOVE.w dontwrite,D1
0002E4EE <AmiBlitz3.ab3@16987>   BNE.w JL_0_AE0A
0002E4F6 <AmiBlitz3.ab3@16988>   CMP.b #2,optistring
0002E4FA <AmiBlitz3.ab3@16989>   BEQ 'l10
0002E500 <AmiBlitz3.ab3@16990>     MOVEA.l litdata1,A0
0002E502 <AmiBlitz3.ab3@16991>     CLR.w (A0)+                                            ;writesize
0002E504 <AmiBlitz3.ab3@16992>     MOVE.w D2,(A0)
0002E508 <AmiBlitz3.ab3@16996>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002E50E <AmiBlitz3.ab3@16997>   ADDQ.l #1,data1
0002E516 <AmiBlitz3.ab3@16998>   BCLR #$0,data1+3
0002E518 <AmiBlitz3.ab3@16999>   MOVEQ.l #$07,D2
0002E51C <AmiBlitz3.ab3@17000> BRA.w get1bytemain
0002E520 <AmiBlitz3.ab3@17004>   BSR.w makename2
0002E524 <AmiBlitz3.ab3@17005>   BSR.w findlabel2
0002E528 <AmiBlitz3.ab3@17006>   BEQ.w JL_0_AE4A
0002E52C <AmiBlitz3.ab3@17007>   BSR.w addlabelhash
0002E530 <AmiBlitz3.ab3@17008>   CLR.l $4(A2)
0002E534 <AmiBlitz3.ab3@17009>   CLR.l $8(A2)
0002E53C <AmiBlitz3.ab3@17011>   MOVE.w linenumat+2,$10(A2)
0002E542 <AmiBlitz3.ab3@17012>   MOVE.w linenumat,d0
0002E544 <AmiBlitz3.ab3@17013>   MOVEQ #0,d1
0002E548 <AmiBlitz3.ab3@17014>   MOVE.b -1(a2,d7),d1
0002E54C <AmiBlitz3.ab3@17015>   MOVE.w d0,0(a2,d1)
0002E550 <AmiBlitz3.ab3@17016> BRA.w JL_0_AE52
0002E554 <AmiBlitz3.ab3@17019>   TST.l $8(A2)
0002E558 <AmiBlitz3.ab3@17020>   BNE.w JL_0_AE88
0002E55E <AmiBlitz3.ab3@17023>   MOVEA.l _execbase,A6
0002E560 <AmiBlitz3.ab3@17024>   MOVEQ.l #$0C+2,D0
0002E562 <AmiBlitz3.ab3@17025>   MOVEQ.l #$01,D1
0002E568 <AmiBlitz3.ab3@17026>   MOVE.l mempool,a0
0002E56C <AmiBlitz3.ab3@17027>   JSR _AllocPooled(a6)
0002E56E <AmiBlitz3.ab3@17029>   MOVEA.l D0,A0
0002E572 <AmiBlitz3.ab3@17030>   MOVE.l $4(A2),(A0)
0002E576 <AmiBlitz3.ab3@17031>   MOVE.l A0,$4(A2)
0002E57E <AmiBlitz3.ab3@17032>   MOVE.l destpointer,$4(A0)
0002E582 <AmiBlitz3.ab3@17033>   ADDQ.l #2,$4(A0)
0002E58A <AmiBlitz3.ab3@17034>   MOVE.w procnum,$8(A0)
0002E592 <AmiBlitz3.ab3@17035>   MOVE.w linenumat+2,$A(A0)
0002E59A <AmiBlitz3.ab3@17036>   MOVE.w linenumat,$c(a0)
0002E59C <AmiBlitz3.ab3@17037> RTS
0002E5A0 <AmiBlitz3.ab3@17040>   MOVE.l $4(A2),D1
0002E5A4 <AmiBlitz3.ab3@17041>   BTST #$0,D1
0002E5A8 <AmiBlitz3.ab3@17042>    BNE.w illlaberr
0002E5AE <AmiBlitz3.ab3@17043>   MOVE.w procnum,D1
0002E5B2 <AmiBlitz3.ab3@17044>   CMP.w $10(A2),D1
0002E5B6 <AmiBlitz3.ab3@17045>    BNE.w referr
0002E5B8 <AmiBlitz3.ab3@17046> RTS
0002E5BA <AmiBlitz3.ab3@17050>   MOVE.w D0,-(A7)
0002E5C2 <AmiBlitz3.ab3@17051>   CMP.b #2,optistring
0002E5C6 <AmiBlitz3.ab3@17052>   BEQ 'l10
0002E5CC <AmiBlitz3.ab3@17055>   MOVE.w numtoa0,D1
0002E5D0 <AmiBlitz3.ab3@17056>    BSR.w writeword
0002E5D4 <AmiBlitz3.ab3@17057>    BSR.w addoff
0002E5DA <AmiBlitz3.ab3@17058>   MOVE.l litdata1,D1
0002E5DE <AmiBlitz3.ab3@17059>    BSR.w writelong
0002E5E4 <AmiBlitz3.ab3@17060>   MOVE.w pushlen,D1
0002E5E8 <AmiBlitz3.ab3@17061>    BSR.w writeword
0002E5EC <AmiBlitz3.ab3@17062>   MOVE.w #$C600,D1
0002E5F0 <AmiBlitz3.ab3@17063>    BSR.w Atokejsr
0002E5F2 <AmiBlitz3.ab3@17064>   MOVE.w (A7)+,D0
0002E5F4 <AmiBlitz3.ab3@17065> RTS
0002E5F6 <AmiBlitz3.ab3@17068>   MOVEQ #0,d1
0002E5FA <AmiBlitz3.ab3@17069>   BSR.w pokedata1b
0002E600 <AmiBlitz3.ab3@17070>   MOVE.l destpointer,a4
0002E604 <AmiBlitz3.ab3@17071>   MOVE.w #$203c,d1
0002E60A <AmiBlitz3.ab3@17072>   TST.w mode
0002E60E <AmiBlitz3.ab3@17073>   BNE 'lm10
0002E614 <AmiBlitz3.ab3@17074>    ADDQ.w #4,a2offset
0002E618 <AmiBlitz3.ab3@17075>   MOVE.w #$2f3c,d1
0002E61E <AmiBlitz3.ab3@17078>   TST.w mode
0002E622 <AmiBlitz3.ab3@17079>   BEQ 'lm3
0002E628 <AmiBlitz3.ab3@17080>   MOVE.w regnum,D0
0002E62A <AmiBlitz3.ab3@17081>   LSL.w #8,D0
0002E62C <AmiBlitz3.ab3@17082>   LSL.w #1,D0
0002E62E <AmiBlitz3.ab3@17083>   OR.w d0,d1
0002E632 <AmiBlitz3.ab3@17084>   BSR writeword
0002E636 <AmiBlitz3.ab3@17085>   BSR.w addoff
0002E63C <AmiBlitz3.ab3@17086>   MOVE.l litdata1,D1
0002E640 <AmiBlitz3.ab3@17087>   BSR.w writelong
0002E648 <AmiBlitz3.ab3@17088>   CMP.w #3,mode
0002E64C <AmiBlitz3.ab3@17089>   BEQ 'l30
0002E652 <AmiBlitz3.ab3@17090>    ADDQ.w #4,a2offset
0002E656 <AmiBlitz3.ab3@17091>   MOVE.w #$4878,D1
0002E65A <AmiBlitz3.ab3@17092>   BSR.w writeword
0002E65C <AmiBlitz3.ab3@17093>   MOVE.l d2,d1
0002E660 <AmiBlitz3.ab3@17094>   BSR writeword
0002E662 <AmiBlitz3.ab3@17097>   MOVE.w (A7)+,D0
0002E664 <AmiBlitz3.ab3@17098> RTS
0002E66A <AmiBlitz3.ab3@17101>   MOVE.l #$3f3c0007,d1
0002E66E <AmiBlitz3.ab3@17102>   BSR writelong
0002E674 <AmiBlitz3.ab3@17103>   MOVE.w regnum,D1
0002E676 <AmiBlitz3.ab3@17104>   LSL.w #8,D1
0002E678 <AmiBlitz3.ab3@17105>   LSL.w #1,D1
0002E67C <AmiBlitz3.ab3@17106>   ORI.w #$2f3c,d1
0002E680 <AmiBlitz3.ab3@17107>   BSR writeword
0002E686 <AmiBlitz3.ab3@17108>    ADDQ.w #4,a2offset
0002E688 <AmiBlitz3.ab3@17109>   MOVE.l d2,d1
0002E68C <AmiBlitz3.ab3@17110>   BSR writelong
0002E690 <AmiBlitz3.ab3@17111>   MOVE.w #$2f3c,d1
0002E694 <AmiBlitz3.ab3@17112>   BSR writeword
0002E698 <AmiBlitz3.ab3@17113>   BSR.w addoff
0002E69E <AmiBlitz3.ab3@17114>   MOVE.l litdata1,D1
0002E6A2 <AmiBlitz3.ab3@17115>   BSR.w writelong
0002E6A4 <AmiBlitz3.ab3@17116>   MOVE.w (A7)+,D0
0002E6A6 <AmiBlitz3.ab3@17117> RTS
0002E6AA <AmiBlitz3.ab3@17121>   BSR.w get1bytemain
0002E6AE <AmiBlitz3.ab3@17122>    BSR.w JL_0_AE22
0002E6B4 <AmiBlitz3.ab3@17123>   MOVE.w regnum,D1
0002E6B6 <AmiBlitz3.ab3@17124>   LSL.w #8,D1
0002E6B8 <AmiBlitz3.ab3@17125>   LSL.w #1,D1
0002E6BC <AmiBlitz3.ab3@17126>   ORI.w #$203C,D1
0002E6C0 <AmiBlitz3.ab3@17127>    BSR.w writeword
0002E6C4 <AmiBlitz3.ab3@17128>    BSR.w addoff
0002E6C8 <AmiBlitz3.ab3@17129>   MOVE.l $8(A2),D1
0002E6CC <AmiBlitz3.ab3@17130>    BSR.w writelong
0002E6CE <AmiBlitz3.ab3@17131>   MOVEQ.l #$03,D2
0002E6D4 <AmiBlitz3.ab3@17132>   CLR.b peekaddrsize
0002E6D8 <AmiBlitz3.ab3@17133> BRA.w reget
0002E6DA <AmiBlitz3.ab3@17136>   MOVEQ.l #$00,D3
0002E6DE <AmiBlitz3.ab3@17139>   BSR.w get1bytemain
0002E6E2 <AmiBlitz3.ab3@17140>    BEQ.w syntaxerr
0002E6E6 <AmiBlitz3.ab3@17141>   CMP.w #$22,D0
0002E6EA <AmiBlitz3.ab3@17142>    BEQ.w JL_0_AF1A
0002E6EC <AmiBlitz3.ab3@17143>   LSL.l #8,D3
0002E6EE <AmiBlitz3.ab3@17144>   MOVE.b D0,D3
0002E6F2 <AmiBlitz3.ab3@17145> BRA.w JL_0_AF02
0002E6F6 <AmiBlitz3.ab3@17148>   BSR.w get1bytemain
0002E6FA <AmiBlitz3.ab3@17149> BRA.w JL_0_B46E
0002E6FC <AmiBlitz3.ab3@17152>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E700 <AmiBlitz3.ab3@17153>    BSR.w makename2
0002E704 <AmiBlitz3.ab3@17154>    BSR.w findlabel2
0002E708 <AmiBlitz3.ab3@17155>    BEQ.w 'l10
0002E70E <AmiBlitz3.ab3@17156>    LEA ptr_parameterstore,a0
0002E714 <AmiBlitz3.ab3@17157>    CMP.b #"@",-1(a0,d2.w)
0002E718 <AmiBlitz3.ab3@17158>    BNE cnferr
0002E71C <AmiBlitz3.ab3@17159>    CLR.b -1(a0,d2.w)
0002E71E <AmiBlitz3.ab3@17160>    SUBQ.l #1,d2
0002E724 <AmiBlitz3.ab3@17161>    LEA varbase,a2
0002E728 <AmiBlitz3.ab3@17162>    BSR findvariable
0002E72C <AmiBlitz3.ab3@17163>    BNE cnferr
0002E730 <AmiBlitz3.ab3@17164>    CMP.b #"\",d0
0002E734 <AmiBlitz3.ab3@17165>    BNE 'l6
0002E73A <AmiBlitz3.ab3@17166>    ADDQ #1,lastsourcepos
0002E73E <AmiBlitz3.ab3@17167>    MOVE.l $a(a2),a2
0002E740 <AmiBlitz3.ab3@17168>    ADDQ.l #4,a2
0002E744 <AmiBlitz3.ab3@17169>    BSR.w makename2
0002E748 <AmiBlitz3.ab3@17170>    BSR findvariable2
0002E74C <AmiBlitz3.ab3@17171>    BNE cnferr
0002E750 <AmiBlitz3.ab3@17172> BRA.s 'l6                                                  ;???
0002E754 <AmiBlitz3.ab3@17175>    MOVE.w $4(a2),d3
0002E756 <AmiBlitz3.ab3@17176>    EXT.l d3
0002E75A <AmiBlitz3.ab3@17177> BRA JL_0_AF46
0002E75E <AmiBlitz3.ab3@17180>   MOVE.l $8(A2),D3
0002E766 <AmiBlitz3.ab3@17181>   CMPI.l #$1,$4(A2)
0002E76A <AmiBlitz3.ab3@17182>    BEQ.w JL_0_AF46
0002E770 <AmiBlitz3.ab3@17183>   NOT.w asmtype
0002E772 <AmiBlitz3.ab3@17186>   MOVE.w (A7)+,D2
0002E776 <AmiBlitz3.ab3@17187> BRA.w JL_0_B46E
0002E778 <AmiBlitz3.ab3@17191>   MOVE.w D2,-(A7)
0002E77C <AmiBlitz3.ab3@17192>    BSR.w getparameter
0002E780 <AmiBlitz3.ab3@17193>   CMP.w #"{",D0                                          ;test if var = function{}
0002E784 <AmiBlitz3.ab3@17194>    BEQ.w isfunction
0002E788 <AmiBlitz3.ab3@17195>    BSR.w JL_0_8E3C
0002E78C <AmiBlitz3.ab3@17197>    BSR.w calcvar                                         ;getvaroffset+type
0002E790 <AmiBlitz3.ab3@17198>    BSR.w JL_0_B150
0002E796 <AmiBlitz3.ab3@17199>    MOVE.l a2,rightsidetype
0002E7A0 <AmiBlitz3.ab3@17200>    MOVE.w flagmask, rightsideflagmask
0002E7A6 <AmiBlitz3.ab3@17211>    TST.b typecheck
0002E7AA <AmiBlitz3.ab3@17212>    BEQ JL_0_AF66
0002E7B4 <AmiBlitz3.ab3@17213>    CMP.l #$da01,lasttoken                                  ;poke
0002E7B8 <AmiBlitz3.ab3@17214>    BEQ 'l1
0002E7C2 <AmiBlitz3.ab3@17215>    CMP.l #$da02,lasttoken                                  ;peek
0002E7C6 <AmiBlitz3.ab3@17216>    BNE 'l2
0002E7CE <AmiBlitz3.ab3@17219>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E7D2 <AmiBlitz3.ab3@17220>    BNE JL_0_AF66
0002E7D8 <AmiBlitz3.ab3@17221>    MOVE.b d2,peekaddrsize
0002E7DC <AmiBlitz3.ab3@17222>    BRA JL_0_AF66
0002E7E2 <AmiBlitz3.ab3@17225>   CLR.b peekaddrsize
0002E7E6 <AmiBlitz3.ab3@17228>   CMP.w #$1,D2
0002E7EA <AmiBlitz3.ab3@17229>    BNE.w JL_0_AF7C
0002E7F0 <AmiBlitz3.ab3@17230>   MOVE.w regnum,D1
0002E7F4 <AmiBlitz3.ab3@17231>   ORI.w #$4880,D1
0002E7F8 <AmiBlitz3.ab3@17232>    BSR.w writeword
0002E7FA <AmiBlitz3.ab3@17235>   MOVE.w (A7)+,D3
0002E7FE <AmiBlitz3.ab3@17236>    BEQ.w JL_0_AF9E
0002E804 <AmiBlitz3.ab3@17237>    MOVE.l lastinstructionaddr,a0
0002E808 <AmiBlitz3.ab3@17238>   CMP.w #$3,D3
0002E80C <AmiBlitz3.ab3@17239>    BNE.w JL_0_AF92
0002E810 <AmiBlitz3.ab3@17240>   CMP.w #$4,D2
0002E814 <AmiBlitz3.ab3@17241>    BEQ.w JL_0_AF98
0002E816 <AmiBlitz3.ab3@17244>   CMP.w D2,D3
0002E81A <AmiBlitz3.ab3@17245>    BLS.w JL_0_AF9E
0002E81C <AmiBlitz3.ab3@17248>   EXG.l D2,D3
0002E81E <AmiBlitz3.ab3@17249>   MOVE.l a0,-(a7)
0002E824 <AmiBlitz3.ab3@17250>   TST.b typecheck
0002E828 <AmiBlitz3.ab3@17251>   BEQ 'ok
0002E82E <AmiBlitz3.ab3@17252>   TST.b notypecheck
0002E832 <AmiBlitz3.ab3@17253>   BNE 'ok
0002E838 <AmiBlitz3.ab3@17254>   MOVE.l leftsidetype,a0
0002E842 <AmiBlitz3.ab3@17255>   CMP.l #0,leftsidetype
0002E846 <AmiBlitz3.ab3@17256>   BEQ 'ok
0002E84E <AmiBlitz3.ab3@17257>   CMP.w #1,leftsideflagmask
0002E852 <AmiBlitz3.ab3@17258>   BEQ 'isptr
0002E85A <AmiBlitz3.ab3@17259>   CMP.l #$100,4(a0)
0002E85E <AmiBlitz3.ab3@17260>   BLE 'ok
0002E862 <AmiBlitz3.ab3@17262>   CMP.b #3,d3
0002E866 <AmiBlitz3.ab3@17263>   BEQ 'ok
0002E86A <AmiBlitz3.ab3@17264>   CMP.b #7,d3
0002E86E <AmiBlitz3.ab3@17265>   BEQ 'ok
0002E874 <AmiBlitz3.ab3@17266>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E876 <AmiBlitz3.ab3@17268>   MOVE.l (a7)+,a0
0002E87A <AmiBlitz3.ab3@17269>   BSR.w writeconvertcode         ;called from var assign
0002E87E <AmiBlitz3.ab3@17272> BRA.w reget
0002E880 <AmiBlitz3.ab3@17275>   MOVEQ.l #$00,D3
0002E886 <AmiBlitz3.ab3@17276>   MOVE.w regnum,D1
0002E88A <AmiBlitz3.ab3@17277>    BEQ.w JL_0_AFC8
0002E88C <AmiBlitz3.ab3@17278>   SUBQ.w #1,D1
0002E88E <AmiBlitz3.ab3@17281>      LSR.l #1,D3
0002E892 <AmiBlitz3.ab3@17282>      BSET #$F,D3
0002E896 <AmiBlitz3.ab3@17283>   DBF D1,JL_0_AFB0b
0002E89C <AmiBlitz3.ab3@17285>    TST.b fpu
0002E8A0 <AmiBlitz3.ab3@17286>    BEQ 'l1
0002E8A6 <AmiBlitz3.ab3@17287>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8A8 <AmiBlitz3.ab3@17288>     MOVE.l a0,-(a7)
0002E8AE <AmiBlitz3.ab3@17289>     MOVE.l stacktrack,d1
0002E8B4 <AmiBlitz3.ab3@17290>     LEA fpustackbase,a0
0002E8B8 <AmiBlitz3.ab3@17291>     CLR.w 0(a0,d1)
0002E8BE <AmiBlitz3.ab3@17292>     CLR.w regmask
0002E8C0 <AmiBlitz3.ab3@17293>     MOVE.l (a7)+,a0
0002E8C4 <AmiBlitz3.ab3@17296>   MOVE.w #$48E7,D1
0002E8C8 <AmiBlitz3.ab3@17297>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E8CA <AmiBlitz3.ab3@17298>   MOVE.w D3,D1
0002E8CE <AmiBlitz3.ab3@17299> BRA.w writeword
0002E8D0 <AmiBlitz3.ab3@17304>   MOVEQ.l #$00,D3
0002E8D6 <AmiBlitz3.ab3@17305>   MOVE.w regnum,D1
0002E8DA <AmiBlitz3.ab3@17306>    BEQ.w JL_0_AFC8
0002E8DC <AmiBlitz3.ab3@17307>   SUBQ.w #1,D1
0002E8DE <AmiBlitz3.ab3@17310>     LSR.l #1,D3
0002E8E2 <AmiBlitz3.ab3@17311>     BSET #$F,D3
0002E8E6 <AmiBlitz3.ab3@17312>   DBF D1,JL_0_AFB0
0002E8EC <AmiBlitz3.ab3@17314>    TST.b fpu
0002E8F0 <AmiBlitz3.ab3@17315>    BEQ 'l1
0002E8F6 <AmiBlitz3.ab3@17316>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8F8 <AmiBlitz3.ab3@17317>     MOVE.l a0,-(a7)
0002E8FE <AmiBlitz3.ab3@17318>     MOVE.l stacktrack,d1
0002E904 <AmiBlitz3.ab3@17319>     LEA fpustackbase,a0
0002E908 <AmiBlitz3.ab3@17320>     CLR.w 0(a0,d1)
0002E90C <AmiBlitz3.ab3@17321>    CMP.b #5,(a3)                                           ;result float ?
0002E910 <AmiBlitz3.ab3@17322>     BNE 'nofpu
0002E91A <AmiBlitz3.ab3@17324>     MOVE.w regnum,regnumfunc
0002E920 <AmiBlitz3.ab3@17327>   CLR.w regmask
0002E922 <AmiBlitz3.ab3@17328>     MOVE.l (a7)+,a0
0002E926 <AmiBlitz3.ab3@17331>   MOVE.w #$48E7,D1
0002E92A <AmiBlitz3.ab3@17332>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E92C <AmiBlitz3.ab3@17333>   MOVE.w D3,D1
0002E930 <AmiBlitz3.ab3@17334> BRA.w writeword
0002E932 <AmiBlitz3.ab3@17337> RTS
0002E934 <AmiBlitz3.ab3@17341>   MOVE.l D1,-(A7)
0002E938 <AmiBlitz3.ab3@17342>   MOVE.w #$4EB9,D1
0002E93C <AmiBlitz3.ab3@17343>    BSR.w writeword
0002E940 <AmiBlitz3.ab3@17344>    BSR.w addoff
0002E942 <AmiBlitz3.ab3@17345>   MOVE.l (A7)+,D1
0002E946 <AmiBlitz3.ab3@17346> BRA.w writelong
0002E94A <AmiBlitz3.ab3@17350>    BSR.w findproc                                          ;write function call
0002E94E <AmiBlitz3.ab3@17351>    BEQ 'l1
0002E954 <AmiBlitz3.ab3@17352>    TST.l unusedfunc
0002E958 <AmiBlitz3.ab3@17353>    BEQ noprocerr
0002E95E <AmiBlitz3.ab3@17355>    JSR gotoendsource
0002E966 <AmiBlitz3.ab3@17358>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E96C <AmiBlitz3.ab3@17359>   TST.l typetocast
0002E970 <AmiBlitz3.ab3@17360>   BEQ 'nocast
0002E97A <AmiBlitz3.ab3@17361>   MOVE.l typetocast,rightsidetype
0002E980 <AmiBlitz3.ab3@17362>   CLR.l typetocast
0002E982 <AmiBlitz3.ab3@17363>   MOVE.l a1,-(a7)
0002E988 <AmiBlitz3.ab3@17364>   MOVE.l rightsidetype,a1
0002E98E <AmiBlitz3.ab3@17365>   CMP.l leftsidetype,a1
0002E992 <AmiBlitz3.ab3@17366>   BEQ 'ok
0002E998 <AmiBlitz3.ab3@17367>   JMP errorconvertreturntype2
0002E99A <AmiBlitz3.ab3@17368> 'ok  MOVE.l (a7)+,a1
0002E99C <AmiBlitz3.ab3@17370>   MOVEQ.l #$00,D1
0002E9A0 <AmiBlitz3.ab3@17371>   MOVE.b $5(A2),D1
0002E9A6 <AmiBlitz3.ab3@17372>   MOVE.b d1,retmode
0002E9AA <AmiBlitz3.ab3@17373>    BMI.w illprocerr
0002E9B0 <AmiBlitz3.ab3@17374>    MOVE.b #1,isfunc(a2)
0002E9B2 <AmiBlitz3.ab3@17375>   MOVE.w D1,-(A7)
0002E9B4 <AmiBlitz3.ab3@17376>   MOVEQ.l #$00,D1
0002E9B8 <AmiBlitz3.ab3@17377>   MOVE.b $4(A2),D1
0002E9BA <AmiBlitz3.ab3@17378>   LSR.w #4,D1
0002E9BE <AmiBlitz3.ab3@17379>    BEQ.w JL_0_B006
0002E9C0 <AmiBlitz3.ab3@17380>   LSL.w #2,D1
0002E9C6 <AmiBlitz3.ab3@17381>   SUB.w D1,a2offset
0002E9CA <AmiBlitz3.ab3@17384>   CMPI.w #$7,(A7)
0002E9CE <AmiBlitz3.ab3@17385>    BNE.b JL_0_B014
0002E9D0 <AmiBlitz3.ab3@17386>   MOVE.l A2,-(A7)
0002E9D4 <AmiBlitz3.ab3@17387>    BSR.w makesbase
0002E9D6 <AmiBlitz3.ab3@17388>   MOVEA.l (A7)+,A2
0002E9DC <AmiBlitz3.ab3@17391>   MOVE.w sbasegot,-(A7)
0002E9E0 <AmiBlitz3.ab3@17392>    BEQ.b JL_0_B020
0002E9E4 <AmiBlitz3.ab3@17393>    BSR.w dopusha3
0002E9E8 <AmiBlitz3.ab3@17396>   BSR.w JL_0_AFA2func
0002E9EA <AmiBlitz3.ab3@17397>   MOVE.w D3,-(A7)
0002E9EE <AmiBlitz3.ab3@17398>   MOVE.l $E(A2),D1
0002E9F2 <AmiBlitz3.ab3@17399>   TST.b $20(a2)                                            ;increase if morepar
0002E9F6 <AmiBlitz3.ab3@17400>   BNE 'no0par
0002E9F8 <AmiBlitz3.ab3@17401>   MOVE.l a5,a4
0002E9FC <AmiBlitz3.ab3@17404>   CMP.b #$20,(a4)+
0002EA00 <AmiBlitz3.ab3@17405>   BEQ 'l1
0002EA06 <AmiBlitz3.ab3@17406>   CMP.b #"}",-1(a4)
0002EA0A <AmiBlitz3.ab3@17407>   BNE  'no0par
0002EA0C <AmiBlitz3.ab3@17408>   MOVEQ #0,d0
0002EA10 <AmiBlitz3.ab3@17411>   LEA $16(A2),A1
0002EA12 <AmiBlitz3.ab3@17414>   MOVE.l d1,-(a7)
0002EA14 <AmiBlitz3.ab3@17415>   MOVE.b (a1),d2
0002EA16 <AmiBlitz3.ab3@17416>   MOVE.l d0,d1
0002EA1A <AmiBlitz3.ab3@17417>   CMP.w #4,d2
0002EA1E <AmiBlitz3.ab3@17418>   BNE 'l1b
0002EA24 <AmiBlitz3.ab3@17419>   ADD.l #$203c,d1
0002EA28 <AmiBlitz3.ab3@17420>   BSR writeword
0002EA2E <AmiBlitz3.ab3@17421>   MOVE.l #$ffff0000,d1
0002EA32 <AmiBlitz3.ab3@17422>   BSR writelong
0002EA36 <AmiBlitz3.ab3@17423> BRA 'l2b
0002EA3C <AmiBlitz3.ab3@17426>    TST.b fpu
0002EA40 <AmiBlitz3.ab3@17427>    BNE 'l1c
0002EA44 <AmiBlitz3.ab3@17428>    CMP.w #5,d2
0002EA48 <AmiBlitz3.ab3@17429>    BNE 'l1c
0002EA4E <AmiBlitz3.ab3@17430>    ADD.l #$203c,d1
0002EA52 <AmiBlitz3.ab3@17431>    BSR writeword
0002EA58 <AmiBlitz3.ab3@17432>    MOVE.l #$800000c1,d1
0002EA5C <AmiBlitz3.ab3@17433>    BSR writelong
0002EA60 <AmiBlitz3.ab3@17434> BRA 'l2b
0002EA66 <AmiBlitz3.ab3@17437>   ADD.l #$70ff,d1
0002EA6A <AmiBlitz3.ab3@17438>   BSR writeword
0002EA6E <AmiBlitz3.ab3@17439>   CMP.w #7,d2
0002EA72 <AmiBlitz3.ab3@17440>   BNE 'l1d
0002EA78 <AmiBlitz3.ab3@17441>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA7C <AmiBlitz3.ab3@17442>   BSR writelong
0002EA7E <AmiBlitz3.ab3@17443>   MOVEQ #0,d1
0002EA82 <AmiBlitz3.ab3@17444>   BSR writeword
0002EA88 <AmiBlitz3.ab3@17445>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA8C <AmiBlitz3.ab3@17446>   BSR writelong
0002EA8E <AmiBlitz3.ab3@17447>   MOVEQ #0,d1
0002EA92 <AmiBlitz3.ab3@17448>   BSR writeword
0002EA98 <AmiBlitz3.ab3@17450> 'l1d  MOVE.l #$f23c5000,d1
0002EA9A <AmiBlitz3.ab3@17451>   MOVE.l d0,d2
0002EA9C <AmiBlitz3.ab3@17452>   ASR.l #2,d2
0002EA9E <AmiBlitz3.ab3@17453>   ADD.l d2,d1
0002EAA2 <AmiBlitz3.ab3@17454>   BSR writelong
0002EAA6 <AmiBlitz3.ab3@17455>   MOVE.w #$ffff,d1
0002EAAA <AmiBlitz3.ab3@17456>   BSR writeword
0002EAAC <AmiBlitz3.ab3@17460>   MOVE.l (a7)+,d1
0002EAAE <AmiBlitz3.ab3@17461>      ADDQ.l #1,a1
0002EAB4 <AmiBlitz3.ab3@17462>      ADD.l #$0200,d0
0002EABA <AmiBlitz3.ab3@17463>      CMP.l #$0e00,d0
0002EABE <AmiBlitz3.ab3@17464>      BEQ syntaxerr
0002EAC0 <AmiBlitz3.ab3@17465>      TST.b (a1)
0002EAC4 <AmiBlitz3.ab3@17466>      BNE 'again
0002EAC8 <AmiBlitz3.ab3@17467> BRA 'p1
0002EACC <AmiBlitz3.ab3@17470>   TST.b $4(A2)
0002EAD0 <AmiBlitz3.ab3@17471>    BNE.w JL_0_B03E
0002EAD4 <AmiBlitz3.ab3@17474>   BSR.w JL_0_AFCA
0002EAD8 <AmiBlitz3.ab3@17475>    BSR.w get1bytemain
0002EADC <AmiBlitz3.ab3@17476> BRA.w JL_0_B06C
0002EAE2 <AmiBlitz3.ab3@17480>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EAE8 <AmiBlitz3.ab3@17481>   MOVE.w regnum,-(A7)
0002EAF2 <AmiBlitz3.ab3@17482>   MOVE.w regnum,regnumfunc
0002EAF4 <AmiBlitz3.ab3@17485>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EAFC <AmiBlitz3.ab3@17486>   MOVE.b #1,funccall
0002EAFE <AmiBlitz3.ab3@17487>   MOVEQ.l #$00,D0
0002EB02 <AmiBlitz3.ab3@17488>   MOVE.b $4(A2),D0
0002EB0C <AmiBlitz3.ab3@17489>   MOVE.w a2offset,a2offset2
0002EB14 <AmiBlitz3.ab3@17490>   MOVE.b 5(a2),retmode
0002EB1A <AmiBlitz3.ab3@17491>   MOVE.l a2,currentfunccall
0002EB1E <AmiBlitz3.ab3@17492>   LEA $16(A2),A2
0002EB24 <AmiBlitz3.ab3@17493>   CLR.w regnum
0002EB2A <AmiBlitz3.ab3@17494>   CLR.w regmask
0002EB30 <AmiBlitz3.ab3@17495>   MOVE.b isconstantvalue,-(a7)
0002EB36 <AmiBlitz3.ab3@17496>   MOVE.b funcparloop,-(a7)
0002EB3E <AmiBlitz3.ab3@17497>   MOVE.b #1,funcparloop
0002EB44 <AmiBlitz3.ab3@17498>   MOVE.l rightsidetype,-(a7)
0002EB4A <AmiBlitz3.ab3@17499>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EB50 <AmiBlitz3.ab3@17500>   MOVE.b blitzparloop,-(a7)
0002EB56 <AmiBlitz3.ab3@17501>   CLR.b blitzparloop
0002EB5C <AmiBlitz3.ab3@17502>   JSR fetchpees2
0002EB62 <AmiBlitz3.ab3@17503>   MOVE.b (a7)+,blitzparloop
0002EB68 <AmiBlitz3.ab3@17504>   MOVE.l (a7)+,leftsidetype
0002EB6E <AmiBlitz3.ab3@17505>   MOVE.l (a7)+,rightsidetype
0002EB74 <AmiBlitz3.ab3@17506>   MOVE.b (a7)+,funcparloop
0002EB7A <AmiBlitz3.ab3@17507>   MOVE.b (a7)+,isconstantvalue
0002EB80 <AmiBlitz3.ab3@17508>   JSR chkstak
0002EB82 <AmiBlitz3.ab3@17509>   MOVE.l (A7)+,D1
0002EB86 <AmiBlitz3.ab3@17525>    BTST #0,d1
0002EB8A <AmiBlitz3.ab3@17526>    BNE intern1
0002EB8E <AmiBlitz3.ab3@17527>    BSR.w JL_0_AFCA
0002EB94 <AmiBlitz3.ab3@17549>   MOVE.w (A7)+,regnum
0002EB9A <AmiBlitz3.ab3@17550>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EB9E <AmiBlitz3.ab3@17552>   CMP.w #"}",D0
0002EBA2 <AmiBlitz3.ab3@17553>    BNE.w errorbracketmiss2
0002EBA4 <AmiBlitz3.ab3@17554>    MOVEQ #0,d1                                            ; end of function call pars
0002EBAA <AmiBlitz3.ab3@17555>   MOVE.w regnum,D1
0002EBAE <AmiBlitz3.ab3@17556>    BEQ.w JL_0_B08A
0002EBB4 <AmiBlitz3.ab3@17557>    TST.b fpu
0002EBB8 <AmiBlitz3.ab3@17558>    BEQ 'old
0002EBC0 <AmiBlitz3.ab3@17559>    CMP.b #5,retmode
0002EBC4 <AmiBlitz3.ab3@17560>    BNE 'old
0002EBC6 <AmiBlitz3.ab3@17561>    ASL.l #7,d1
0002EBCC <AmiBlitz3.ab3@17562>    OR.l #$f2000000,d1
0002EBD0 <AmiBlitz3.ab3@17563>    BSR writelong
0002EBD4 <AmiBlitz3.ab3@17564> BRA JL_0_B08A
0002EBD6 <AmiBlitz3.ab3@17566>  'old  LSL.w #8,D1
0002EBD8 <AmiBlitz3.ab3@17567>   LSL.w #1,D1
0002EBDC <AmiBlitz3.ab3@17568>   ORI.w #$2000,D1
0002EBE0 <AmiBlitz3.ab3@17569>    BSR.w writeword
0002EBE2 <AmiBlitz3.ab3@17572>    MOVE.w (A7)+,D3
0002EBE6 <AmiBlitz3.ab3@17573>    BEQ.w JL_0_B0A8
0002EBEC <AmiBlitz3.ab3@17574>    TST.b fpu
0002EBF0 <AmiBlitz3.ab3@17575>    BEQ 'old
0002EBF2 <AmiBlitz3.ab3@17576>    MOVE.l d0,-(a7)
0002EBF6 <AmiBlitz3.ab3@17577>    MOVE.w #8,d0
0002EBF8 <AmiBlitz3.ab3@17578>    MOVE.l a0,-(a7)
0002EBFE <AmiBlitz3.ab3@17579>    MOVE.l stacktrack,d1
0002EC04 <AmiBlitz3.ab3@17580>    LEA fpustackbase,a0
0002EC0C <AmiBlitz3.ab3@17581>    MOVE.w 0(a0,d1),regmask
0002EC0E <AmiBlitz3.ab3@17582>    MOVE.l (a7)+,a0
0002EC12 <AmiBlitz3.ab3@17585>   BEQ 'ready
0002EC18 <AmiBlitz3.ab3@17586>    BTST d0,regmask
0002EC1C <AmiBlitz3.ab3@17587>    BEQ 'noa7
0002EC1E <AmiBlitz3.ab3@17588>    MOVEQ #0,d1
0002EC20 <AmiBlitz3.ab3@17589>    MOVE.w d0,d1
0002EC22 <AmiBlitz3.ab3@17590>    SUBQ.w #1,d1
0002EC24 <AmiBlitz3.ab3@17591>    ASL #7,d1
0002EC2A <AmiBlitz3.ab3@17593>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002EC2E <AmiBlitz3.ab3@17594>    BSR writelong
0002EC34 <AmiBlitz3.ab3@17595>    SUBQ.l #2,stacktrack
0002EC36 <AmiBlitz3.ab3@17598>    SUBQ.w #1,d0
0002EC3A <AmiBlitz3.ab3@17599>    BNE 'loop
0002EC40 <AmiBlitz3.ab3@17602>   SUBQ.l #2,stacktrack                                     ;integer sub
0002EC42 <AmiBlitz3.ab3@17603>   MOVE.l (a7)+,d0
0002EC46 <AmiBlitz3.ab3@17606>   MOVE.w #$4CDF,D1
0002EC4A <AmiBlitz3.ab3@17607>    BSR.w writeword
0002EC4C <AmiBlitz3.ab3@17608>   MOVEQ.l #$00,D1
0002EC4E <AmiBlitz3.ab3@17609>   MOVEQ.l #$0F,D4
0002EC50 <AmiBlitz3.ab3@17612>     LSL.w #1,D3
0002EC52 <AmiBlitz3.ab3@17613>     ROXR.w #1,D1
0002EC56 <AmiBlitz3.ab3@17614>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002EC5A <AmiBlitz3.ab3@17616>     BSR.w writeword
0002EC60 <AmiBlitz3.ab3@17617>    CLR.w regnumfunc
0002EC62 <AmiBlitz3.ab3@17620>   MOVE.w (A7)+,D1
0002EC66 <AmiBlitz3.ab3@17621>    BEQ.b JL_0_B0D2
0002EC6A <AmiBlitz3.ab3@17622>   CMPI.w #$7,(A7)
0002EC6E <AmiBlitz3.ab3@17623>    BEQ.b JL_0_B0C4
0002EC74 <AmiBlitz3.ab3@17624>   LEA geta3,A0
0002EC7A <AmiBlitz3.ab3@17625>   LEA numtoa0,A1
0002EC7E <AmiBlitz3.ab3@17626>    BSR.w pokecode
0002EC82 <AmiBlitz3.ab3@17627> BRA.b JL_0_B0CE
0002EC88 <AmiBlitz3.ab3@17630>   MOVE.w deca3,D1
0002EC8C <AmiBlitz3.ab3@17631>    BSR.w writeword
0002EC90 <AmiBlitz3.ab3@17634>   BSR.w dopulla3                                           ;fix up string base
0002EC92 <AmiBlitz3.ab3@17637>   MOVE.w (A7)+,D2                                          ;what it returns!
0002EC96 <AmiBlitz3.ab3@17638>   CMP.w #$7,D2
0002EC9A <AmiBlitz3.ab3@17639>    BNE.w JL_0_B0EC
0002ECA0 <AmiBlitz3.ab3@17640>   MOVE.w putstlen,D1
0002ECA6 <AmiBlitz3.ab3@17641>   OR.w regnum,D1
0002ECAA <AmiBlitz3.ab3@17642>    BSR.w writeword
0002ECAE <AmiBlitz3.ab3@17645>   BSR.w get1bytemain
0002ECB2 <AmiBlitz3.ab3@17646> BRA.w JL_0_AF66
0002ECB4 <AmiBlitz3.ab3@17650> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002ECBC <AmiBlitz3.ab3@17655>   CMP.b #2,optistring
0002ECC0 <AmiBlitz3.ab3@17656>   BEQ fs2
0002ECC4 <AmiBlitz3.ab3@17657>   BSR.w makesbase                                          ;writestringvariable
0002ECC8 <AmiBlitz3.ab3@17658>   BTST #$F,D2
0002ECCC <AmiBlitz3.ab3@17659>    BNE.w JL_0_B112
0002ECD2 <AmiBlitz3.ab3@17660>   MOVE.w D3,leaa5d3a2+2
0002ECD8 <AmiBlitz3.ab3@17661>   MOVE.l leaa5d3a2,D1
0002ECDC <AmiBlitz3.ab3@17662>    BSR.w pokela5s
0002ECE2 <AmiBlitz3.ab3@17665>   MOVE.w regnum,D1
0002ECE4 <AmiBlitz3.ab3@17666>   LSL.w #8,D1
0002ECE6 <AmiBlitz3.ab3@17667>   LSL.w #1,D1
0002ECEA <AmiBlitz3.ab3@17668>   ORI.w #$7000,D1
0002ECF0 <AmiBlitz3.ab3@17669>   LEA stvarget2,A0
0002ECF2 <AmiBlitz3.ab3@17670>   MOVE.w D1,(A0)
0002ECF8 <AmiBlitz3.ab3@17671>   MOVE.w regnum,D1
0002ECFE <AmiBlitz3.ab3@17672>   ANDI.w #$FFF8,$2(A0)
0002ED02 <AmiBlitz3.ab3@17673>   OR.w D1,$2(A0)
0002ED08 <AmiBlitz3.ab3@17674>   LEA stvarget2f,A1
0002ED0C <AmiBlitz3.ab3@17675>    BSR.w pokecode
0002ED10 <AmiBlitz3.ab3@17676>   MOVE.w #$C600,D1
0002ED14 <AmiBlitz3.ab3@17677>    BSR.w Atokejsr
0002ED16 <AmiBlitz3.ab3@17678>   MOVEQ.l #$07,D2
0002ED1A <AmiBlitz3.ab3@17679> BRA.w reget
0002ED20 <AmiBlitz3.ab3@17682>      TST.w stackpar
0002ED24 <AmiBlitz3.ab3@17683>      BMI 'l10
0002ED2A <AmiBlitz3.ab3@17684>      MOVE.l #$3f3c0007,d1
0002ED30 <AmiBlitz3.ab3@17685>      ADDQ.w #2,a2offset
0002ED34 <AmiBlitz3.ab3@17686>      BSR writelong
0002ED38 <AmiBlitz3.ab3@17689>   MOVE.w #$4878,d1
0002ED3E <AmiBlitz3.ab3@17690>      CLR.w stackpar
0002ED42 <AmiBlitz3.ab3@17691>      BSR writeword
0002ED46 <AmiBlitz3.ab3@17692>      MOVE.w #$0,d1
0002ED4A <AmiBlitz3.ab3@17693>      BSR writeword
0002ED4E <AmiBlitz3.ab3@17694>      MOVE.w #$246d,d1
0002ED52 <AmiBlitz3.ab3@17695>      BSR writeword
0002ED54 <AmiBlitz3.ab3@17696>      MOVE.w d3,d1
0002ED58 <AmiBlitz3.ab3@17697>      BSR writeword
0002ED5E <AmiBlitz3.ab3@17698>      MOVE.l #$4a926704,d1
0002ED62 <AmiBlitz3.ab3@17699>      BSR writelong
0002ED68 <AmiBlitz3.ab3@17700>      MOVE.l #$2eaafffc,d1
0002ED6C <AmiBlitz3.ab3@17701>      BSR writelong
0002ED70 <AmiBlitz3.ab3@17702>      MOVE.w #$2f0a,d1
0002ED76 <AmiBlitz3.ab3@17703>      ADDQ.w #8,a2offset
0002ED7A <AmiBlitz3.ab3@17704>      BSR writeword
0002ED7E <AmiBlitz3.ab3@17705> BRA.w reget
0002ED82 <AmiBlitz3.ab3@17708>   CMP.b #$7,D2                                             ;load basic var
0002ED86 <AmiBlitz3.ab3@17709>    BEQ.w JL_0_B0F6
0002ED8C <AmiBlitz3.ab3@17711>    TST.b iee
0002ED90 <AmiBlitz3.ab3@17712>    BEQ 'noiee
0002ED94 <AmiBlitz3.ab3@17713>    CMP.b #5,d2
0002ED98 <AmiBlitz3.ab3@17714>    BNE 'noiee
0002ED9A <AmiBlitz3.ab3@17715>    MOVE.l d0,-(a7)                                         ;fpu load var
0002ED9E <AmiBlitz3.ab3@17716>    BTST #15,d2
0002EDA2 <AmiBlitz3.ab3@17717>    BEQ 'var
0002EDA8 <AmiBlitz3.ab3@17718>    CMP.l #$7fff,d3
0002EDAC <AmiBlitz3.ab3@17719>    BGT 'longoffset
0002EDB2 <AmiBlitz3.ab3@17720>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002EDB4 <AmiBlitz3.ab3@17721>    TST.w d3                                                ;offset =0
0002EDB8 <AmiBlitz3.ab3@17722>    BNE 'offset
0002EDBE <AmiBlitz3.ab3@17725>   MOVE.l #$f2124400,d1
0002EDC0 <AmiBlitz3.ab3@17726>    MOVEQ #0,d3
0002EDC4 <AmiBlitz3.ab3@17727> BRA 'glob
0002EDCA <AmiBlitz3.ab3@17730>   SUBQ.l #4,destpointer
0002EDCE <AmiBlitz3.ab3@17731> BRA 'glob
0002EDD4 <AmiBlitz3.ab3@17734>   TST.b fast
0002EDD8 <AmiBlitz3.ab3@17735>    BEQ 'nofastload
0002EDDE <AmiBlitz3.ab3@17736>    TST.w regnum
0002EDE2 <AmiBlitz3.ab3@17737>    BNE 'nofastload
0002EDE8 <AmiBlitz3.ab3@17738>    CMP.l fp0addr,a4
0002EDEC <AmiBlitz3.ab3@17739>    BNE 'nofastload
0002EDF2 <AmiBlitz3.ab3@17740>    MOVE.l fp0iff,d1
0002EDF8 <AmiBlitz3.ab3@17741>    CMP.l firstiff,d1
0002EDFC <AmiBlitz3.ab3@17742>    BNE 'nofastload
0002EE02 <AmiBlitz3.ab3@17743>    MOVE.w varmode,d1
0002EE08 <AmiBlitz3.ab3@17744>    CMP.w fp0mode,d1
0002EE0C <AmiBlitz3.ab3@17745>    BNE 'nofastload
0002EE12 <AmiBlitz3.ab3@17746>    CMP.w fp0var,d3
0002EE16 <AmiBlitz3.ab3@17747>    BNE 'nofastload
0002EE1A <AmiBlitz3.ab3@17748>    BCLR #16,d2
0002EE1C <AmiBlitz3.ab3@17749>    MOVE.l (a7)+,d0
0002EE1E <AmiBlitz3.ab3@17750> RTS
0002EE20 <AmiBlitz3.ab3@17753>    MOVEQ #0,d0
0002EE26 <AmiBlitz3.ab3@17754>    MOVE.w regnum,d0
0002EE2C <AmiBlitz3.ab3@17755>    CMP.l maxregs,d0
0002EE30 <AmiBlitz3.ab3@17756>    BLE 'ok
0002EE36 <AmiBlitz3.ab3@17757>    LEA cmplxerr,a0
0002EE38 <AmiBlitz3.ab3@17758>   MOVE.l a0,-(a7)
0002EE3E <AmiBlitz3.ab3@17759> JMP handle_compileerror
0002EE44 <AmiBlitz3.ab3@17762>    LEA regtable,a4
0002EE46 <AmiBlitz3.ab3@17763>    TST.l (a4)
0002EE4A <AmiBlitz3.ab3@17764>    BEQ 'noreg
0002EE4E <AmiBlitz3.ab3@17765>    CMP.w 0+4(a4),d3
0002EE52 <AmiBlitz3.ab3@17766>    BNE 'doreg1
0002EE58 <AmiBlitz3.ab3@17767>    MOVE.l #$f2001c00,d1
0002EE5E <AmiBlitz3.ab3@17768>    MOVE.w regnum,d0
0002EE60 <AmiBlitz3.ab3@17769>    ASL.w #7,d0
0002EE62 <AmiBlitz3.ab3@17770>    OR.w d0,d1
0002EE66 <AmiBlitz3.ab3@17771>    BSR writelong
0002EE68 <AmiBlitz3.ab3@17772>    MOVE.l (a7)+,d0
0002EE6A <AmiBlitz3.ab3@17773> RTS
0002EE6E <AmiBlitz3.ab3@17776>   CMP.w 8+4(a4),d3
0002EE72 <AmiBlitz3.ab3@17777>    BNE 'doreg2
0002EE78 <AmiBlitz3.ab3@17778>    MOVE.l #$f2001800,d1
0002EE7E <AmiBlitz3.ab3@17779>    MOVE.w regnum,d0
0002EE80 <AmiBlitz3.ab3@17780>    ASL.w #7,d0
0002EE82 <AmiBlitz3.ab3@17781>    OR.w d0,d1
0002EE86 <AmiBlitz3.ab3@17782>    BSR writelong
0002EE88 <AmiBlitz3.ab3@17783>    MOVE.l (a7)+,d0
0002EE8A <AmiBlitz3.ab3@17784> RTS
0002EE8E <AmiBlitz3.ab3@17787>   CMP.w 16+4(a4),d3
0002EE92 <AmiBlitz3.ab3@17788>    BNE 'doreg3
0002EE98 <AmiBlitz3.ab3@17789>    MOVE.l #$f2001400,d1
0002EE9E <AmiBlitz3.ab3@17790>    MOVE.w regnum,d0
0002EEA0 <AmiBlitz3.ab3@17791>    ASL.w #7,d0
0002EEA2 <AmiBlitz3.ab3@17792>    OR.w d0,d1
0002EEA6 <AmiBlitz3.ab3@17793>    BSR  writelong
0002EEA8 <AmiBlitz3.ab3@17794>    MOVE.l (a7)+,d0
0002EEAA <AmiBlitz3.ab3@17795> RTS
0002EEAE <AmiBlitz3.ab3@17798>   CMP.w 24+4(a4),d3
0002EEB2 <AmiBlitz3.ab3@17799>    BNE 'doreg4
0002EEB8 <AmiBlitz3.ab3@17800>    MOVE.l #$f2001000,d1
0002EEBE <AmiBlitz3.ab3@17801>    MOVE.w regnum,d0
0002EEC0 <AmiBlitz3.ab3@17802>    ASL.w #7,d0
0002EEC2 <AmiBlitz3.ab3@17803>    OR.w d0,d1
0002EEC6 <AmiBlitz3.ab3@17804>    BSR writelong
0002EEC8 <AmiBlitz3.ab3@17805>    MOVE.l (a7)+,d0
0002EECA <AmiBlitz3.ab3@17806> RTS
0002EECE <AmiBlitz3.ab3@17809>    CMP.w 32+4(a4),d3
0002EED2 <AmiBlitz3.ab3@17810>    BNE 'noreg
0002EED8 <AmiBlitz3.ab3@17811>    MOVE.l #$f2000c00,d1
0002EEDE <AmiBlitz3.ab3@17812>    MOVE.w regnum,d0
0002EEE0 <AmiBlitz3.ab3@17813>    ASL.w #7,d0
0002EEE2 <AmiBlitz3.ab3@17814>    OR.w d0,d1
0002EEE6 <AmiBlitz3.ab3@17815>    BSR writelong
0002EEE8 <AmiBlitz3.ab3@17816>    MOVE.l (a7)+,d0
0002EEEA <AmiBlitz3.ab3@17817> RTS
0002EEF0 <AmiBlitz3.ab3@17820>    MOVE.l #$f22d4400,d1                                    ;var
0002EEF6 <AmiBlitz3.ab3@17821>    TST.w varmode
0002EEFA <AmiBlitz3.ab3@17822>   BEQ 'glob
0002EEFE <AmiBlitz3.ab3@17823>   BCLR #16,d1                                              ;local
0002EF00 <AmiBlitz3.ab3@17826>    MOVEQ #0,d0
0002EF06 <AmiBlitz3.ab3@17827>    MOVE.w regnum,d0
0002EF0A <AmiBlitz3.ab3@17828>    CMP.w #7,d0
0002EF0E <AmiBlitz3.ab3@17829>    BLE 'ok2
0002EF14 <AmiBlitz3.ab3@17830>    LEA cmplxerr,a0
0002EF16 <AmiBlitz3.ab3@17831>   MOVE.l a0,-(a7)
0002EF1C <AmiBlitz3.ab3@17832> JMP handle_compileerror
0002EF1E <AmiBlitz3.ab3@17835>      ASL.w #7,d0
0002EF20 <AmiBlitz3.ab3@17836>    OR.l d0,d1
0002EF28 <AmiBlitz3.ab3@17837>    CMP.l #doublecheck,8(a2)
0002EF2C <AmiBlitz3.ab3@17838>    BNE 'dbl
0002EF32 <AmiBlitz3.ab3@17839>    OR.l #$00001000,d1
0002EF36 <AmiBlitz3.ab3@17842>   BSR writelong
0002EF38 <AmiBlitz3.ab3@17843>    MOVE.l (a7)+,d0
0002EF3C <AmiBlitz3.ab3@17844>    AND.w #$ff,d2
0002EF3E <AmiBlitz3.ab3@17845>    MOVE.w d3,d1
0002EF42 <AmiBlitz3.ab3@17846>    BEQ 'nooffs
0002EF46 <AmiBlitz3.ab3@17847> BRA writeword
0002EF48 <AmiBlitz3.ab3@17852> RTS
0002EF4E <AmiBlitz3.ab3@17855>   MOVE.w regnum,D1
0002EF54 <AmiBlitz3.ab3@17856>   MOVE.w d1,load_var_reg
0002EF56 <AmiBlitz3.ab3@17857>   LSL.w #8,D1
0002EF60 <AmiBlitz3.ab3@17858>   MOVE.l destpointer,load_var_addr
0002EF66 <AmiBlitz3.ab3@17859>   MOVE.w d2,load_var_size
0002EF68 <AmiBlitz3.ab3@17860>   LSL.w #1,D1
0002EF6C <AmiBlitz3.ab3@17861>   BTST #$E,D2
0002EF70 <AmiBlitz3.ab3@17862>    BNE.w JL_0_B17A
0002EF72 <AmiBlitz3.ab3@17863>   TST.b D2
0002EF76 <AmiBlitz3.ab3@17864>    BNE.w JL_0_B17E
0002EF78 <AmiBlitz3.ab3@17865>   MOVEQ.l #$03,D2
0002EF7C <AmiBlitz3.ab3@17866>   ORI.w #$200A,D1
0002EF80 <AmiBlitz3.ab3@17867> BRA.w writeword
0002EF84 <AmiBlitz3.ab3@17870>   MOVE.b #$3,D2
0002EF88 <AmiBlitz3.ab3@17873>   BTST #$F,D2
0002EF8C <AmiBlitz3.ab3@17874>    BEQ.w JL_0_B19A                                         ;loadarray
0002EF92 <AmiBlitz3.ab3@17875>    TST.b fast                                              ;lea->move xx(a2)
0002EF96 <AmiBlitz3.ab3@17876>    BEQ 'la10
0002EF9C <AmiBlitz3.ab3@17881>    CLR.l load_var_addr
0002EFA0 <AmiBlitz3.ab3@17882> BRA 'la10
0002EFA8 <AmiBlitz3.ab3@17884>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EFAC <AmiBlitz3.ab3@17885>    BNE 'la10
0002EFB2 <AmiBlitz3.ab3@17886>    TST.b optiarray
0002EFB6 <AmiBlitz3.ab3@17887>    BNE 'la10
0002EFBC <AmiBlitz3.ab3@17888>    MOVE.l destpointer,a4
0002EFC2 <AmiBlitz3.ab3@17889>    SUB.l loada,a4
0002EFC6 <AmiBlitz3.ab3@17890>    CMP.w #4,a4
0002EFCA <AmiBlitz3.ab3@17891>    BEQ 'la100
0002EFCE <AmiBlitz3.ab3@17892>    CMP.w #2,a4
0002EFD2 <AmiBlitz3.ab3@17893>    BNE 'la10
0002EFD8 <AmiBlitz3.ab3@17894>    MOVE.l destpointer,a4
0002EFDC <AmiBlitz3.ab3@17895>    CMP.b #3,d2
0002EFE0 <AmiBlitz3.ab3@17896>    BCS 'la110
0002EFE6 <AmiBlitz3.ab3@17897>    MOVE.w #$202a,-2(a4)
0002EFEA <AmiBlitz3.ab3@17898>    OR.w d1,-2(a4)
0002EFF0 <AmiBlitz3.ab3@17899>    MOVE.w arrayoffset,d1
0002EFF4 <AmiBlitz3.ab3@17900>    BSR writeword
0002EFF8 <AmiBlitz3.ab3@17901> BRA JL_0_B194
0002EFFC <AmiBlitz3.ab3@17904>    CMP.b #2,d2
0002F000 <AmiBlitz3.ab3@17905>    BNE 'la120
0002F006 <AmiBlitz3.ab3@17906>     MOVE.w #$302a,-2(a4)
0002F00A <AmiBlitz3.ab3@17907>    OR.w d1,-2(a4)
0002F010 <AmiBlitz3.ab3@17909>    MOVE.w arrayoffset,d1
0002F014 <AmiBlitz3.ab3@17910>    BSR writeword
0002F018 <AmiBlitz3.ab3@17911> BRA JL_0_B194
0002F01C <AmiBlitz3.ab3@17914>   CMP.b #1,d2
0002F020 <AmiBlitz3.ab3@17915>    BNE.s 'la10
0002F026 <AmiBlitz3.ab3@17916>     MOVE.w #$102a,-2(a4)
0002F02A <AmiBlitz3.ab3@17917>    OR.w d1,-2(a4)
0002F030 <AmiBlitz3.ab3@17918>    MOVE.w arrayoffset,d1
0002F034 <AmiBlitz3.ab3@17919>    BSR writeword
0002F038 <AmiBlitz3.ab3@17920> BRA JL_0_B194
0002F03E <AmiBlitz3.ab3@17923>   MOVE.l destpointer,a4
0002F044 <AmiBlitz3.ab3@17924>    CMP.w #$45ea,-2(a4)
0002F048 <AmiBlitz3.ab3@17925>    BNE 'la10
0002F04C <AmiBlitz3.ab3@17926>    CMP.b #3,d2
0002F050 <AmiBlitz3.ab3@17927>    BCS 'la11
0002F056 <AmiBlitz3.ab3@17928>    MOVE.w #$202a,-4(a4)
0002F05A <AmiBlitz3.ab3@17929>    OR.w d1,-4(a4)
0002F05E <AmiBlitz3.ab3@17930> BRA JL_0_B194
0002F062 <AmiBlitz3.ab3@17933>    CMP.b #2,d2
0002F066 <AmiBlitz3.ab3@17934>    BNE 'la12
0002F06C <AmiBlitz3.ab3@17935>     MOVE.w #$302a,-4(a4)
0002F070 <AmiBlitz3.ab3@17936>    OR.w d1,-4(a4)
0002F074 <AmiBlitz3.ab3@17937> BRA JL_0_B194
0002F078 <AmiBlitz3.ab3@17940>   CMP.b #1,d2
0002F07C <AmiBlitz3.ab3@17941>    BNE.s 'la10
0002F082 <AmiBlitz3.ab3@17942>     MOVE.w #$102a,-4(a4)
0002F086 <AmiBlitz3.ab3@17943>    OR.w d1,-4(a4)
0002F08A <AmiBlitz3.ab3@17944> BRA JL_0_B194
0002F090 <AmiBlitz3.ab3@17947>    OR.w movea2dn,D1
0002F094 <AmiBlitz3.ab3@17948>    BSR.w JL_0_B1B2
0002F098 <AmiBlitz3.ab3@17949>    BSR.w writeword
0002F09C <AmiBlitz3.ab3@17952>   ANDI.w #$FF,D2
0002F09E <AmiBlitz3.ab3@17953> RTS
0002F0A4 <AmiBlitz3.ab3@17957>    MOVE.l destpointer,a4
0002F0AC <AmiBlitz3.ab3@17958>    MOVE.l #$f22a4400,-4(a4)
0002F0B2 <AmiBlitz3.ab3@17959>    MOVE.w arrayoffset,d1
0002F0B6 <AmiBlitz3.ab3@17960> BRA writeword
0002F0BC <AmiBlitz3.ab3@17964>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F0C0 <AmiBlitz3.ab3@17965>    BSR.w JL_0_B1B2
0002F0C4 <AmiBlitz3.ab3@17966>    BSR.w pokewda5s
0002F0C6 <AmiBlitz3.ab3@17967>   MOVE.w D3,D1
0002F0CA <AmiBlitz3.ab3@17968>    BSR.w writeword
0002F0CE <AmiBlitz3.ab3@17969> BRA.w JL_0_B194
0002F0D2 <AmiBlitz3.ab3@17972>   BTST #$E,D2
0002F0D6 <AmiBlitz3.ab3@17973>    BNE.w JL_0_B1CA
0002F0DA <AmiBlitz3.ab3@17974>   CMP.b #$1,D2
0002F0DE <AmiBlitz3.ab3@17975>    BEQ.w JL_0_B1CC
0002F0E2 <AmiBlitz3.ab3@17976>   CMP.b #$2,D2
0002F0E6 <AmiBlitz3.ab3@17977>    BEQ.w JL_0_B1D2
0002F0E8 <AmiBlitz3.ab3@17980> RTS
0002F0EC <AmiBlitz3.ab3@17983>   EORI.w #$3000,D1
0002F0EE <AmiBlitz3.ab3@17984> RTS
0002F0F2 <AmiBlitz3.ab3@17987>   ORI.w #$1000,D1
0002F0F4 <AmiBlitz3.ab3@17988> RTS
0002F0FC <AmiBlitz3.ab3@17992>   MOVE.w #$FFFF,dfetch
0002F100 <AmiBlitz3.ab3@17993>   BSR.w get1bytemain
0002F104 <AmiBlitz3.ab3@17994>   CMP.w #$2D,D0
0002F108 <AmiBlitz3.ab3@17995>    BNE.w JL_0_B206
0002F10C <AmiBlitz3.ab3@17996>   BSR.w get1bytemain
0002F110 <AmiBlitz3.ab3@17997>   BSR.w JL_0_B206
0002F114 <AmiBlitz3.ab3@17998>   CMP.w #$5,D2
0002F118 <AmiBlitz3.ab3@17999>    BCC.w JL_0_B200
0002F11A <AmiBlitz3.ab3@18000>   NEG.l D0
0002F11C <AmiBlitz3.ab3@18001> RTS
0002F122 <AmiBlitz3.ab3@18004>   TST.b fpu
0002F126 <AmiBlitz3.ab3@18005>   BEQ 'noneg
0002F12A <AmiBlitz3.ab3@18006>   fneg.x fp0
0002F12C <AmiBlitz3.ab3@18007> RTS
0002F130 <AmiBlitz3.ab3@18010>   BCHG #$7,D0
0002F132 <AmiBlitz3.ab3@18011> RTS
0002F136 <AmiBlitz3.ab3@18014>   CMP.w #$24,D0
0002F13A <AmiBlitz3.ab3@18015>    BEQ.w get_hexconstant
0002F13E <AmiBlitz3.ab3@18016>   CMP.w #$25,D0
0002F142 <AmiBlitz3.ab3@18017>    BEQ.w JL_0_A8C0
0002F146 <AmiBlitz3.ab3@18018>   CMP.w #$2E,D0
0002F14A <AmiBlitz3.ab3@18019>    BNE.w JL_0_B224
0002F14C <AmiBlitz3.ab3@18022>   MOVEQ.l #$00,D3
0002F150 <AmiBlitz3.ab3@18023> BRA.w JL_0_B272
0002F152 <AmiBlitz3.ab3@18026>   MOVEQ.l #$00,D3                                          ;number
0002F156 <AmiBlitz3.ab3@18027>    BSR.w atoi
0002F15A <AmiBlitz3.ab3@18028>   CMP.w #$2E,D0
0002F15E <AmiBlitz3.ab3@18029>    BEQ.w JL_0_B268
0002F162 <AmiBlitz3.ab3@18030>   ORI.w #$20,D0
0002F166 <AmiBlitz3.ab3@18031>   CMP.w #$65,D0
0002F16A <AmiBlitz3.ab3@18032>    BNE.w JL_0_B46E
0002F170 <AmiBlitz3.ab3@18033>   CMP.l #$800000,D3
0002F174 <AmiBlitz3.ab3@18034>    BCC.w overerr
0002F176 <AmiBlitz3.ab3@18035>   MOVEQ.l #-$01,D6
0002F17A <AmiBlitz3.ab3@18036>   fmove.l d3,fp0
0002F17C <AmiBlitz3.ab3@18037>   MOVE.l D3,D0
0002F182 <AmiBlitz3.ab3@18038>   MOVEA.l _mathffpbase,A6
0002F186 <AmiBlitz3.ab3@18039>    JSR -$24(A6)
0002F188 <AmiBlitz3.ab3@18040>   MOVE.l D0,D3
0002F18C <AmiBlitz3.ab3@18041>    BSR.w JL_0_B2E6
0002F190 <AmiBlitz3.ab3@18042>    BSR.w reget
0002F194 <AmiBlitz3.ab3@18043>    BSR.w JL_0_B480
0002F198 <AmiBlitz3.ab3@18044> BRA.w JL_0_B3DC
0002F19C <AmiBlitz3.ab3@18047>   CMP.b #4,d2
0002F1A0 <AmiBlitz3.ab3@18048>   BEQ 'l4
0002F1A4 <AmiBlitz3.ab3@18049>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F1AA <AmiBlitz3.ab3@18052>    TST.b fpu
0002F1AE <AmiBlitz3.ab3@18053>    BNE 'l1
0002F1B4 <AmiBlitz3.ab3@18054>    CMP.l #$800000,D3
0002F1B8 <AmiBlitz3.ab3@18055>    BCC.w overerr
0002F1BC <AmiBlitz3.ab3@18056> BRA JL_0_B272
0002F1C2 <AmiBlitz3.ab3@18059>   CMP.l #$7fffffff,d3
0002F1C6 <AmiBlitz3.ab3@18060>     BCC.w overerr
0002F1C8 <AmiBlitz3.ab3@18063>   MOVEQ.l #-$01,D6
0002F1CA <AmiBlitz3.ab3@18064>   MOVE.l D3,D0
0002F1CE <AmiBlitz3.ab3@18065>   fmove.l d3,fp0
0002F1D4 <AmiBlitz3.ab3@18066>   MOVEA.l _mathffpbase,A6
0002F1D8 <AmiBlitz3.ab3@18067>    JSR -$24(A6)                                            ;integer to ffp
0002F1DA <AmiBlitz3.ab3@18068>   MOVE.l D0,-(A7)
0002F1DE <AmiBlitz3.ab3@18069>    BSR.w get1bytemain
0002F1E2 <AmiBlitz3.ab3@18070>    BSR.w tstnum
0002F1E6 <AmiBlitz3.ab3@18071>    BNE.w syntaxerr
0002F1E8 <AmiBlitz3.ab3@18072>   MOVEQ.l #$00,D3
0002F1EC <AmiBlitz3.ab3@18073>    BSR.w atoi
0002F1EE <AmiBlitz3.ab3@18074>   TST.l D3
0002F1F2 <AmiBlitz3.ab3@18075>    BEQ.w JL_0_B2E0
0002F1F8 <AmiBlitz3.ab3@18076>   TST.b fpu
0002F1FC <AmiBlitz3.ab3@18077>   BNE 'l1
0002F202 <AmiBlitz3.ab3@18078>   CMP.l #$800000,D3
0002F206 <AmiBlitz3.ab3@18079>    BCC.w overerr
0002F20A <AmiBlitz3.ab3@18080> BRA 'l2
0002F210 <AmiBlitz3.ab3@18083>   CMP.l #$7fffffff,d3
0002F214 <AmiBlitz3.ab3@18084>   BCC overerr
0002F218 <AmiBlitz3.ab3@18087>   fmove.l d5,fp1
0002F21A <AmiBlitz3.ab3@18088>   MOVE.l D5,D0
0002F21E <AmiBlitz3.ab3@18089>    JSR -$24(A6)
0002F220 <AmiBlitz3.ab3@18090>   MOVE.l D0,D5
0002F224 <AmiBlitz3.ab3@18091>   fmove.l d3,fp2
0002F226 <AmiBlitz3.ab3@18092>   MOVE.l D3,D0
0002F22A <AmiBlitz3.ab3@18093>    JSR -$24(A6)
0002F22E <AmiBlitz3.ab3@18094>   fdiv.x fp1,fp2
0002F230 <AmiBlitz3.ab3@18095>   MOVE.l D5,D1
0002F234 <AmiBlitz3.ab3@18096>    JSR -$54(A6)
0002F238 <AmiBlitz3.ab3@18097>   fadd.x fp2,fp0
0002F23A <AmiBlitz3.ab3@18098>   MOVE.l (A7)+,D1
0002F23E <AmiBlitz3.ab3@18099>    JSR -$42(A6)
0002F240 <AmiBlitz3.ab3@18100>   MOVE.l D0,D3
0002F244 <AmiBlitz3.ab3@18101>    BSR.w reget
0002F248 <AmiBlitz3.ab3@18102>   ORI.w #$20,D0
0002F24C <AmiBlitz3.ab3@18103>   CMP.w #$65,D0
0002F250 <AmiBlitz3.ab3@18104>    BNE.w JL_0_B2D4
0002F254 <AmiBlitz3.ab3@18105>    BSR.w JL_0_B2E6
0002F258 <AmiBlitz3.ab3@18108>    BSR.w reget
0002F25C <AmiBlitz3.ab3@18109>    BSR.w JL_0_B480
0002F260 <AmiBlitz3.ab3@18110> BRA.w JL_0_B3DC
0002F262 <AmiBlitz3.ab3@18113>   MOVE.l (A7)+,D3
0002F266 <AmiBlitz3.ab3@18114> BRA.w JL_0_B2D4
0002F26A <AmiBlitz3.ab3@18117>   BSR.w get1bytemain
0002F26E <AmiBlitz3.ab3@18118>   CMP.w #$2B,D0
0002F272 <AmiBlitz3.ab3@18119>    BEQ.w JL_0_B30E
0002F276 <AmiBlitz3.ab3@18120>   CMP.w #$2D,D0
0002F27A <AmiBlitz3.ab3@18121>    BNE.w JL_0_B312
0002F27E <AmiBlitz3.ab3@18122>    BSR.w get1bytemain
0002F282 <AmiBlitz3.ab3@18123>    BSR.w getsign
0002F284 <AmiBlitz3.ab3@18124>   MOVE.l D3,D0
0002F288 <AmiBlitz3.ab3@18125>   fdiv.x fp1,fp0
0002F28A <AmiBlitz3.ab3@18126>   MOVE.l D4,D1
0002F28E <AmiBlitz3.ab3@18127>    JSR -$54(A6)
0002F290 <AmiBlitz3.ab3@18128>   MOVE.l D0,D3
0002F292 <AmiBlitz3.ab3@18129> RTS
0002F296 <AmiBlitz3.ab3@18132>   BSR.w get1bytemain
0002F29A <AmiBlitz3.ab3@18135>   BSR.w getsign
0002F29E <AmiBlitz3.ab3@18136>   fmul.x fp1,fp0
0002F2A0 <AmiBlitz3.ab3@18137>   MOVE.l D3,D0
0002F2A2 <AmiBlitz3.ab3@18138>   MOVE.l D4,D1
0002F2A6 <AmiBlitz3.ab3@18139>    JSR -$4E(A6)
0002F2A8 <AmiBlitz3.ab3@18140>   MOVE.l D0,D3
0002F2AA <AmiBlitz3.ab3@18141> RTS
0002F2AE <AmiBlitz3.ab3@18144>   BSR.w tstnum
0002F2B2 <AmiBlitz3.ab3@18145>    BNE.w syntaxerr
0002F2B4 <AmiBlitz3.ab3@18146>   MOVE.w D0,D4
0002F2B8 <AmiBlitz3.ab3@18147>   SUBI.w #$30,D4
0002F2BC <AmiBlitz3.ab3@18148>    BSR.w get1bytemain
0002F2C0 <AmiBlitz3.ab3@18149>    BSR.w tstnum
0002F2C4 <AmiBlitz3.ab3@18150>    BNE.w getsign__skip
0002F2C8 <AmiBlitz3.ab3@18151>   MULU #$A,D4
0002F2CC <AmiBlitz3.ab3@18152>   SUBI.w #$30,D0
0002F2CE <AmiBlitz3.ab3@18153>   ADD.w D0,D4
0002F2D2 <AmiBlitz3.ab3@18154>    BSR.w get1bytemain
0002F2D6 <AmiBlitz3.ab3@18157>   CMP.w #$12,D4
0002F2DA <AmiBlitz3.ab3@18158>    BHI.w overerr
0002F2DC <AmiBlitz3.ab3@18159>   LSL.w #3,D4
0002F2E2 <AmiBlitz3.ab3@18160>   LEA fputab,a0
0002F2E4 <AmiBlitz3.ab3@18161>   ADD.l d4,a0
0002F2EA <AmiBlitz3.ab3@18162>   fmove.d 0(a0),fp1
0002F2EC <AmiBlitz3.ab3@18163>   LSR.w #1,d4
0002F2F0 <AmiBlitz3.ab3@18164>   MOVE.l facts(PC,D4.W),D4
0002F2F2 <AmiBlitz3.ab3@18165> RTS
0002F33A <AmiBlitz3.ab3@18169>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F33E <AmiBlitz3.ab3@18174>   Dc.l $80000041
0002F342 <AmiBlitz3.ab3@18175>   Dc.l $A0000044
0002F346 <AmiBlitz3.ab3@18176>   Dc.l $C8000047
0002F34A <AmiBlitz3.ab3@18177>   Dc.l $FA00004A
0002F34E <AmiBlitz3.ab3@18178>   Dc.l $9C40004E
0002F352 <AmiBlitz3.ab3@18179>   Dc.l $C3500051
0002F356 <AmiBlitz3.ab3@18180>   Dc.l $F4240054
0002F35A <AmiBlitz3.ab3@18181>   Dc.l $98968058
0002F35E <AmiBlitz3.ab3@18182>   Dc.l $BEBC205B
0002F362 <AmiBlitz3.ab3@18183>   Dc.l $EE6B285E
0002F366 <AmiBlitz3.ab3@18184>   Dc.l $9502F962
0002F36A <AmiBlitz3.ab3@18185>   Dc.l $BA43B765
0002F36E <AmiBlitz3.ab3@18186>   Dc.l $E8D4A568
0002F372 <AmiBlitz3.ab3@18187>   Dc.l $9184E76C
0002F376 <AmiBlitz3.ab3@18188>   Dc.l $B5E6A96F
0002F37A <AmiBlitz3.ab3@18189>   Dc.l $E35F2972
0002F37E <AmiBlitz3.ab3@18190>   Dc.l $8E1BCA76
0002F382 <AmiBlitz3.ab3@18191>   Dc.l $B1A2BD79
0002F386 <AmiBlitz3.ab3@18192>   Dc.l $DE0B6C7C
0002F388 <AmiBlitz3.ab3@18196>   MOVEQ.l #$01,D5
0002F38A <AmiBlitz3.ab3@18199>   LSL.l #1,D5
0002F38C <AmiBlitz3.ab3@18200>   MOVE.l D5,D1
0002F38E <AmiBlitz3.ab3@18201>   LSL.l #2,D5
0002F390 <AmiBlitz3.ab3@18202>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F392 <AmiBlitz3.ab3@18203>   LSL.l #1,D3
0002F396 <AmiBlitz3.ab3@18204>    BCS.w overerr
0002F398 <AmiBlitz3.ab3@18205>   MOVE.l D3,D1
0002F39A <AmiBlitz3.ab3@18206>   LSL.l #1,D3
0002F39E <AmiBlitz3.ab3@18207>    BCS.w overerr
0002F3A0 <AmiBlitz3.ab3@18208>   LSL.l #1,D3
0002F3A4 <AmiBlitz3.ab3@18209>    BCS.w overerr
0002F3A6 <AmiBlitz3.ab3@18210>   ADD.l D1,D3
0002F3AA <AmiBlitz3.ab3@18211>   SUBI.w #$30,D0
0002F3AC <AmiBlitz3.ab3@18212>   ADD.l D0,D3
0002F3D8 <AmiBlitz3.ab3@18213>    !fget                                                   ;bsr.w get1bytemain
0002F3DC <AmiBlitz3.ab3@18214>    CMP.b #1,d0
0002F3E0 <AmiBlitz3.ab3@18215>    BNE 'cm1
0002F3E2 <AmiBlitz3.ab3@18216>    SUBQ.l #1,a5
0002F3E6 <AmiBlitz3.ab3@18217>    BSR get1bytemain                                        ;??wy not !fget
0002F3EA <AmiBlitz3.ab3@18220>   CMP.b #$7e,d0
0002F3EE <AmiBlitz3.ab3@18221>    BNE 'cm2
0002F3F0 <AmiBlitz3.ab3@18222>    SUBQ.l #1,a5
0002F3F4 <AmiBlitz3.ab3@18223>    BSR get1bytemain
0002F3F6 <AmiBlitz3.ab3@18226>   TST.b d0
0002F3FA <AmiBlitz3.ab3@18227>    BPL 'l10
0002F3FC <AmiBlitz3.ab3@18228>    LSL.w #8,d0
0002F3FE <AmiBlitz3.ab3@18229>    MOVE.b (a5)+,d0
0002F404 <AmiBlitz3.ab3@18230>    MOVE.w d0,lastchar
0002F416 <AmiBlitz3.ab3@18233>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F41A <AmiBlitz3.ab3@18234>    BEQ.w atoi__loop
0002F41C <AmiBlitz3.ab3@18235> RTS
0002F41E <AmiBlitz3.ab3@18238> dfetch:  Ds.w 1                                            ;fetching data?
0002F422 <AmiBlitz3.ab3@18242>   MOVE.w dfetch(PC),D1
0002F426 <AmiBlitz3.ab3@18243>    BEQ.w JL_0_B3EC
0002F42C <AmiBlitz3.ab3@18244>   CLR.w dfetch
0002F42E <AmiBlitz3.ab3@18245> RTS
0002F434 <AmiBlitz3.ab3@18248>   MOVE.b d2,isconstantvalue
0002F43A <AmiBlitz3.ab3@18249>   MOVE.l d0,lastconstantvalue
0002F440 <AmiBlitz3.ab3@18250>   MOVE.w d2,imm_size
0002F44A <AmiBlitz3.ab3@18251>   MOVE.w regnum,imm_reg
0002F454 <AmiBlitz3.ab3@18252>   MOVE.l destpointer,imm_addr                           ; long
0002F458 <AmiBlitz3.ab3@18253>   CMP.w #$3,D2
0002F45C <AmiBlitz3.ab3@18254>   BEQ.w JL_0_B434
0002F460 <AmiBlitz3.ab3@18255>   CMP.w #$5,D2                                          ;float
0002F464 <AmiBlitz3.ab3@18256>   BEQ.w JL_0_B434
0002F468 <AmiBlitz3.ab3@18257>   CMP.w #$1,D2
0002F46C <AmiBlitz3.ab3@18258>   BEQ.w JL_0_B418
0002F470 <AmiBlitz3.ab3@18259>   CMP.w #$2,D2
0002F474 <AmiBlitz3.ab3@18260>   BEQ.w JL_0_B418
0002F478 <AmiBlitz3.ab3@18261>   CMP.w #$4,D2
0002F47C <AmiBlitz3.ab3@18262>   BEQ.w JL_0_B434
0002F480 <AmiBlitz3.ab3@18264> BRA.w mismatcherr
0002F486 <AmiBlitz3.ab3@18267>   MOVE.w regnum,D1
0002F488 <AmiBlitz3.ab3@18268>   LSL.w #8,D1
0002F48A <AmiBlitz3.ab3@18269>   LSL.w #1,D1
0002F48E <AmiBlitz3.ab3@18270>   ORI.w #$303C,D1
0002F492 <AmiBlitz3.ab3@18271>    BSR.w writeword
0002F494 <AmiBlitz3.ab3@18272>   MOVE.w D0,D1
0002F498 <AmiBlitz3.ab3@18273>    BSR.w writeword
0002F49C <AmiBlitz3.ab3@18274> BRA.w reget
0002F49E <AmiBlitz3.ab3@18277>   MOVEQ #0,d1
0002F4A4 <AmiBlitz3.ab3@18278>   MOVE.w regnum,D1
0002F4AA <AmiBlitz3.ab3@18279>   TST.b fpu
0002F4AE <AmiBlitz3.ab3@18280>   BEQ 'f1
0002F4B2 <AmiBlitz3.ab3@18281>   CMP.w #5,d2
0002F4B6 <AmiBlitz3.ab3@18282>   BEQ 'l10
0002F4BA <AmiBlitz3.ab3@18283> BRA 'f2
0002F4C0 <AmiBlitz3.ab3@18286>   TST.b iee
0002F4C4 <AmiBlitz3.ab3@18287>   BNE 'l10
0002F4C6 <AmiBlitz3.ab3@18290>   LSL.w #8,D1
0002F4C8 <AmiBlitz3.ab3@18291>   LSL.w #1,D1
0002F4CC <AmiBlitz3.ab3@18292>   ORI.w #$203C,D1
0002F4D0 <AmiBlitz3.ab3@18293>    BSR.w writeword
0002F4D2 <AmiBlitz3.ab3@18294>   MOVE.l D0,D1
0002F4D6 <AmiBlitz3.ab3@18295>    BSR.w writelong
0002F4DA <AmiBlitz3.ab3@18296> BRA.w reget
0002F4DC <AmiBlitz3.ab3@18299>   MOVEQ #5,d2
0002F4DE <AmiBlitz3.ab3@18300>   ASL.l #7,d1
0002F4E0 <AmiBlitz3.ab3@18301>   SUBQ.l #8,a7
0002F4E6 <AmiBlitz3.ab3@18306>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F4EC <AmiBlitz3.ab3@18307>        fmove.s fp0,0(a7)
0002F4F0 <AmiBlitz3.ab3@18309>   BSR writelong
0002F4F2 <AmiBlitz3.ab3@18310>   MOVE.l (a7)+,d1
0002F4F6 <AmiBlitz3.ab3@18311>   BSR writelong
0002F4F8 <AmiBlitz3.ab3@18312>   MOVE.l (a7)+,d1
0002F4FC <AmiBlitz3.ab3@18316> BRA.w reget
0002F4FE <AmiBlitz3.ab3@18322>  MOVE.l D3,D0
0002F500 <AmiBlitz3.ab3@18323>   TST.w D6
0002F504 <AmiBlitz3.ab3@18324>    BEQ.w JL_0_B46C
0002F50A <AmiBlitz3.ab3@18325>   MOVEA.l _mathffpbase,A6
0002F50E <AmiBlitz3.ab3@18326>    JSR -$1E(A6)
0002F512 <AmiBlitz3.ab3@18327>    BVC.w JL_0_B46C
0002F514 <AmiBlitz3.ab3@18328>   ADDQ.w #4,A7
0002F518 <AmiBlitz3.ab3@18329> BRA.w JL_0_B5A0
0002F51A <AmiBlitz3.ab3@18332> RTS
0002F51C <AmiBlitz3.ab3@18336>   MOVEQ.l #$00,D6
0002F520 <AmiBlitz3.ab3@18337>    fmove.l d3,fp0
0002F524 <AmiBlitz3.ab3@18340>   BSR.w JL_0_B480
0002F528 <AmiBlitz3.ab3@18341> BRA.w JL_0_B3DC
0002F52A <AmiBlitz3.ab3@18344>   MOVE.w D2,-(A7)
0002F52E <AmiBlitz3.ab3@18345>    BSR.w JL_0_BF6A
0002F530 <AmiBlitz3.ab3@18346>   MOVE.w (A7)+,D2
0002F532 <AmiBlitz3.ab3@18349>   TST.w D2
0002F536 <AmiBlitz3.ab3@18350>    BNE.w JL_0_B498
0002F538 <AmiBlitz3.ab3@18351>   TST.w D6
0002F53C <AmiBlitz3.ab3@18352>    BEQ.w JL_0_B492
0002F53E <AmiBlitz3.ab3@18353>   MOVEQ.l #$04,D2
0002F542 <AmiBlitz3.ab3@18354> BRA.w JL_0_B510
0002F544 <AmiBlitz3.ab3@18357>   MOVEQ.l #$02,D2
0002F548 <AmiBlitz3.ab3@18358> BRA.w JL_0_B4C4
0002F54C <AmiBlitz3.ab3@18361>   CMP.w #$1,D2
0002F550 <AmiBlitz3.ab3@18362>    BEQ.w JL_0_B4C4
0002F554 <AmiBlitz3.ab3@18363>   CMP.w #$2,D2
0002F558 <AmiBlitz3.ab3@18364>    BEQ.w JL_0_B4F8
0002F55C <AmiBlitz3.ab3@18365>   CMP.w #$3,D2
0002F560 <AmiBlitz3.ab3@18366>    BEQ.w JL_0_B57A
0002F564 <AmiBlitz3.ab3@18367>   CMP.w #$4,D2
0002F568 <AmiBlitz3.ab3@18368>    BEQ.w JL_0_B506
0002F56C <AmiBlitz3.ab3@18369>   CMP.w #$5,D2
0002F570 <AmiBlitz3.ab3@18370>    BEQ.w JL_0_B586
0002F574 <AmiBlitz3.ab3@18371> BRA.w mismatcherr
0002F578 <AmiBlitz3.ab3@18374>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F57E <AmiBlitz3.ab3@18375>   CMP.l #$7f,D0
0002F582 <AmiBlitz3.ab3@18376>    BGT.w JL_0_B4DC
0002F588 <AmiBlitz3.ab3@18377>   CMP.l #$FFFFFF80,D0
0002F58C <AmiBlitz3.ab3@18378>    BGE.w JL_0_B59E
0002F58E <AmiBlitz3.ab3@18381>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F594 <AmiBlitz3.ab3@18382>   CMP.l #$7fff,D0
0002F598 <AmiBlitz3.ab3@18383>    BGT.w JL_0_B4F2
0002F59E <AmiBlitz3.ab3@18384>   CMP.l #$FFFF8000,D0
0002F5A2 <AmiBlitz3.ab3@18385>    BGE.w JL_0_B59E
0002F5A4 <AmiBlitz3.ab3@18388>   MOVEQ.l #$03,D2
0002F5A8 <AmiBlitz3.ab3@18389> BRA.w JL_0_B59E
0002F5AA <AmiBlitz3.ab3@18415>   TST.w D6
0002F5AE <AmiBlitz3.ab3@18416>    BNE.w JL_0_B510
0002F5B2 <AmiBlitz3.ab3@18417>    BSR.w JL_0_B450
0002F5B6 <AmiBlitz3.ab3@18418> BRA.w JL_0_B4DC
0002F5BA <AmiBlitz3.ab3@18421>   BSR.w JL_0_B450
0002F5BC <AmiBlitz3.ab3@18422>   TST.w D6
0002F5C0 <AmiBlitz3.ab3@18423>   BEQ.w JL_0_B560
0002F5C6 <AmiBlitz3.ab3@18426>   CMP.l #MaxWordSgnd,D0
0002F5CA <AmiBlitz3.ab3@18427>    BGT.w JL_0_B5A0
0002F5D0 <AmiBlitz3.ab3@18428>   CMP.l #$FFFF8000,D0
0002F5D4 <AmiBlitz3.ab3@18429>    BLT.w JL_0_B5A0
0002F5D6 <AmiBlitz3.ab3@18430>   MOVE.w D0,-(A7)
0002F5DA <AmiBlitz3.ab3@18431>    JSR -$24(A6)
0002F5DC <AmiBlitz3.ab3@18432>   MOVE.l D0,D1
0002F5DE <AmiBlitz3.ab3@18433>   MOVE.l D3,D0
0002F5E2 <AmiBlitz3.ab3@18434>    JSR -$48(A6)
0002F5E8 <AmiBlitz3.ab3@18435>   MOVE.l #$80000051,D1
0002F5EC <AmiBlitz3.ab3@18436>    JSR -$4E(A6)
0002F5F0 <AmiBlitz3.ab3@18437>    JSR -$1E(A6)
0002F5F4 <AmiBlitz3.ab3@18438>    BEQ.w JL_0_B55A
0002F5FA <AmiBlitz3.ab3@18439>   CMP.l #$10000,D0
0002F5FE <AmiBlitz3.ab3@18440>    BCC.w JL_0_B55A
0002F600 <AmiBlitz3.ab3@18441>   MOVE.w D0,D1
0002F602 <AmiBlitz3.ab3@18442>   MOVE.w (A7)+,D0
0002F604 <AmiBlitz3.ab3@18443>   SWAP D0
0002F606 <AmiBlitz3.ab3@18444>   MOVE.w D1,D0
0002F60A <AmiBlitz3.ab3@18445> BRA.w JL_0_B59E
0002F60C <AmiBlitz3.ab3@18448>   ADDQ.w #2,A7
0002F610 <AmiBlitz3.ab3@18449> BRA.w JL_0_B5A0
0002F616 <AmiBlitz3.ab3@18452>   CMP.l #MaxWordSgnd,D0
0002F61A <AmiBlitz3.ab3@18453>    BGT.w JL_0_B4F2
0002F620 <AmiBlitz3.ab3@18454>   CMP.l #$FFFF8000,D0
0002F624 <AmiBlitz3.ab3@18455>    BLT.w JL_0_B4F2
0002F626 <AmiBlitz3.ab3@18456>   SWAP D0
0002F62A <AmiBlitz3.ab3@18457> BRA.w JL_0_B59E
0002F62C <AmiBlitz3.ab3@18460>   TST.w D6
0002F630 <AmiBlitz3.ab3@18461>   BNE.w JL_0_B5A0
0002F632 <AmiBlitz3.ab3@18462>   MOVE.l D3,D0
0002F636 <AmiBlitz3.ab3@18463> BRA.w JL_0_B59E
0002F638 <AmiBlitz3.ab3@18466>   TST.w D6
0002F63C <AmiBlitz3.ab3@18467>   BNE.w JL_0_B5A0
0002F63E <AmiBlitz3.ab3@18468>   MOVE.l D3,D0
0002F644 <AmiBlitz3.ab3@18469>   MOVEA.l _mathffpbase,A6
0002F648 <AmiBlitz3.ab3@18470>   JSR -$24(A6)
0002F64A <AmiBlitz3.ab3@18471>   MOVE.l D0,D3
0002F64E <AmiBlitz3.ab3@18472> BRA.w JL_0_B5A0
0002F650 <AmiBlitz3.ab3@18475> RTS
0002F652 <AmiBlitz3.ab3@18478>   MOVEQ.l #$05,D2
0002F654 <AmiBlitz3.ab3@18479>   MOVE.l D3,D0
0002F656 <AmiBlitz3.ab3@18480> RTS
0002F65A <AmiBlitz3.ab3@18484>             Ds.l 1                                         ;??Looks like unused data??
0002F65E <AmiBlitz3.ab3@18485> pushpc:     Ds.l 1
0002F662 <AmiBlitz3.ab3@18486> pushoff:    Ds.l 1
0002F666 <AmiBlitz3.ab3@18487> pushdooff:  Ds.l 1
0002F668 <AmiBlitz3.ab3@18488> pushclen:   Ds.w 1
0002F66C <AmiBlitz3.ab3@18489> pushat:     Ds.l 1
0002F676 <AmiBlitz3.ab3@18493>   MOVE.l destpointer,pushpc
0002F680 <AmiBlitz3.ab3@18494>   MOVE.l hunkoffsetbase,pushoff
0002F682 <AmiBlitz3.ab3@18495> RTS
0002F686 <AmiBlitz3.ab3@18499>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F68C <AmiBlitz3.ab3@18500>   MOVE.l destpointer,D0
0002F690 <AmiBlitz3.ab3@18501>   MOVE.l pushpc(PC),D1
0002F696 <AmiBlitz3.ab3@18502>   MOVE.l D1,destpointer
0002F698 <AmiBlitz3.ab3@18503>   SUB.l D1,D0
0002F69E <AmiBlitz3.ab3@18504>   MOVE.w D0,pushclen
0002F6A2 <AmiBlitz3.ab3@18505>    BEQ.w JL_0_B636
0002F6A8 <AmiBlitz3.ab3@18506>   MOVE.w dontwrite,D1
0002F6AC <AmiBlitz3.ab3@18507>    BNE.w JL_0_B636
0002F6B4 <AmiBlitz3.ab3@18508>    CMP.w #1000,pushclen
0002F6B8 <AmiBlitz3.ab3@18509>    BGE conmemerr
0002F6BE <AmiBlitz3.ab3@18510>    MOVE.l pushat,d0
0002F6C2 <AmiBlitz3.ab3@18511>    BNE 'nomem
0002F6C8 <AmiBlitz3.ab3@18512>    MOVE.l #1024,d0
0002F6CA <AmiBlitz3.ab3@18513>   MOVEQ.l #$01,D1
0002F6D0 <AmiBlitz3.ab3@18514>   MOVEA.l _execbase,A6
0002F6D6 <AmiBlitz3.ab3@18515>   MOVE.l mempool,a0
0002F6DA <AmiBlitz3.ab3@18516>   JSR _AllocPooled(a6)
0002F6E0 <AmiBlitz3.ab3@18518>   MOVE.l D0,pushat
0002F6E2 <AmiBlitz3.ab3@18521>   MOVEA.l D0,A0
0002F6E8 <AmiBlitz3.ab3@18522>   MOVEA.l pushpc,A1
0002F6EE <AmiBlitz3.ab3@18523>   MOVE.l A1,destpointer
0002F6F4 <AmiBlitz3.ab3@18524>   MOVE.w pushclen,D0
0002F6F6 <AmiBlitz3.ab3@18525>   LSR.w #1,D0
0002F6F8 <AmiBlitz3.ab3@18526>   SUBQ.w #1,D0
0002F6FA <AmiBlitz3.ab3@18529>     MOVE.w (A1)+,(A0)+
0002F6FE <AmiBlitz3.ab3@18530>   DBF D0,JL_0_B626
0002F708 <AmiBlitz3.ab3@18532>    MOVE.l hunkoffsetbase,pushdooff
0002F70C <AmiBlitz3.ab3@18535>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F70E <AmiBlitz3.ab3@18536> RTS
0002F712 <AmiBlitz3.ab3@18540>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F714 <AmiBlitz3.ab3@18541>   MOVEQ.l #$00,D0
0002F71A <AmiBlitz3.ab3@18542>   MOVE.w pushclen,D0
0002F71E <AmiBlitz3.ab3@18543>    BEQ.w JL_0_B6D8
0002F724 <AmiBlitz3.ab3@18544>   MOVE.l destpointer,D1
0002F72A <AmiBlitz3.ab3@18545>   ADD.l D0,destpointer
0002F730 <AmiBlitz3.ab3@18546>   TST.w dontwrite
0002F734 <AmiBlitz3.ab3@18547>    BNE.w JL_0_B6D8
0002F736 <AmiBlitz3.ab3@18548>   LSR.w #1,D0
0002F738 <AmiBlitz3.ab3@18549>   SUBQ.w #1,D0
0002F73A <AmiBlitz3.ab3@18550>   MOVEA.l D1,A1
0002F740 <AmiBlitz3.ab3@18551>   MOVEA.l pushat,A0
0002F746 <AmiBlitz3.ab3@18554>     CMPA.l destbufferend,A1
0002F74A <AmiBlitz3.ab3@18555>     BCS.w JL_0_B684
0002F752 <AmiBlitz3.ab3@18557>     MOVE.w #$FFFF,dontwrite
0002F756 <AmiBlitz3.ab3@18558>   BRA.w JL_0_B6D8
0002F758 <AmiBlitz3.ab3@18561>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F75C <AmiBlitz3.ab3@18562>   DBF D0,JL_0_B66E
0002F762 <AmiBlitz3.ab3@18564>   SUB.l pushpc,D1
0002F766 <AmiBlitz3.ab3@18565>   BEQ.w JL_0_B6C2
0002F76C <AmiBlitz3.ab3@18566>   MOVEA.l pushdooff,A0
0002F772 <AmiBlitz3.ab3@18569>   CMPA.l pushoff,A0
0002F776 <AmiBlitz3.ab3@18570>   BEQ.w JL_0_B6C2
0002F77A <AmiBlitz3.ab3@18571>   MOVEA.l $4(A0),A1
0002F780 <AmiBlitz3.ab3@18572>   ADDA.l destbufferstart,A1
0002F786 <AmiBlitz3.ab3@18573>   CMPA.l destbufferend,A1
0002F78A <AmiBlitz3.ab3@18574>   BCC.w JL_0_B6BC
0002F78E <AmiBlitz3.ab3@18575>   ADD.l D1,$4(A0)
0002F790 <AmiBlitz3.ab3@18578>   MOVEA.l (A0),A0
0002F794 <AmiBlitz3.ab3@18579> BRA.w JL_0_B69A
0002F79A <AmiBlitz3.ab3@18582>   MOVEA.l pushat,A1
0002F79C <AmiBlitz3.ab3@18583>   MOVEQ.l #$00,D0
0002F7A2 <AmiBlitz3.ab3@18584>   MOVE.w pushclen,D0
0002F7A8 <AmiBlitz3.ab3@18585>   MOVEA.l _execbase,A6
0002F7AE <AmiBlitz3.ab3@18586>   MOVE.l mempool,a0
0002F7B2 <AmiBlitz3.ab3@18590>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F7B4 <AmiBlitz3.ab3@18591> RTS
0002F7B6 <AmiBlitz3.ab3@18594>   MOVE.l D1,-(A7)                                          ;array mul
0002F7B8 <AmiBlitz3.ab3@18595>   MOVEQ.l #$00,D2
0002F7BA <AmiBlitz3.ab3@18596>   MOVEQ.l #$0F,D3
0002F7BC <AmiBlitz3.ab3@18599>     LSL.w #1,D1
0002F7C0 <AmiBlitz3.ab3@18600>     BCC.w JL_0_B6EE
0002F7C2 <AmiBlitz3.ab3@18601>     ADDQ.w #1,D2
0002F7C4 <AmiBlitz3.ab3@18602>     MOVE.w D3,D4
0002F7C8 <AmiBlitz3.ab3@18605>   DBF D3,JL_0_B6E4
0002F7CA <AmiBlitz3.ab3@18607>   SUBQ.w #1,D2
0002F7CE <AmiBlitz3.ab3@18608>    BNE.w JL_0_B726
0002F7D0 <AmiBlitz3.ab3@18609>   ADDQ.w #4,A7
0002F7D2 <AmiBlitz3.ab3@18610>   MOVE.w D4,D1
0002F7D6 <AmiBlitz3.ab3@18611>    BEQ.w JL_0_B724
0002F7DA <AmiBlitz3.ab3@18612>   CMP.w #$8,D1
0002F7DE <AmiBlitz3.ab3@18613>    BCS.w JL_0_B712
0002F7E2 <AmiBlitz3.ab3@18614>   SUBI.w #$8,D1
0002F7E6 <AmiBlitz3.ab3@18615>    BSR.w JL_0_B712
0002F7E8 <AmiBlitz3.ab3@18616>   MOVEQ.l #$00,D1
0002F7EA <AmiBlitz3.ab3@18619>   LSL.w #8,D1
0002F7EC <AmiBlitz3.ab3@18620>   LSL.w #1,D1
0002F7F0 <AmiBlitz3.ab3@18621>   ORI.w #$E188,D1
0002F7F6 <AmiBlitz3.ab3@18622>   OR.w regnum,D1
0002F7FA <AmiBlitz3.ab3@18623> BRA.w writeword
0002F7FC <AmiBlitz3.ab3@18626> RTS
0002F7FE <AmiBlitz3.ab3@18629>   MOVEQ #0,d1
0002F804 <AmiBlitz3.ab3@18630>   MOVE.w regnum,D1
0002F806 <AmiBlitz3.ab3@18631>   LSL.l #8,D1
0002F808 <AmiBlitz3.ab3@18633>   LSL.l #4,d1
0002F80E <AmiBlitz3.ab3@18635>   OR.l #$4c3c0000,d1
0002F814 <AmiBlitz3.ab3@18636>   OR.w regnum,d1
0002F818 <AmiBlitz3.ab3@18637>   BSR.w writelong
0002F81A <AmiBlitz3.ab3@18638>   MOVE.l (A7)+,D1
0002F81E <AmiBlitz3.ab3@18640> BRA writelong
0002F824 <AmiBlitz3.ab3@18643>   MOVE.l destpointer,-(A7)
0002F826 <AmiBlitz3.ab3@18644>   MOVEQ.l #-$01,D7
0002F82A <AmiBlitz3.ab3@18647>     BSR.w findhilib
0002F82E <AmiBlitz3.ab3@18648>      BEQ.w JL_0_B8A4
0002F832 <AmiBlitz3.ab3@18649>     TST.w $C(A2)
0002F836 <AmiBlitz3.ab3@18650>      BPL.w JL_0_B746
0002F83A <AmiBlitz3.ab3@18652>     MOVE.l $16(A2),D1
0002F83E <AmiBlitz3.ab3@18653>     BEQ.w JL_0_B746
0002F842 <AmiBlitz3.ab3@18655>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F846 <AmiBlitz3.ab3@18656>     CMP.w #-$2,D1
0002F84A <AmiBlitz3.ab3@18657>      BNE.w JL_0_B772
0002F84E <AmiBlitz3.ab3@18658>     BSR.w makevsize
0002F852 <AmiBlitz3.ab3@18659> BRA.w JL_0_B7FE
0002F856 <AmiBlitz3.ab3@18662>     CMP.w #-$5C4,D1
0002F85A <AmiBlitz3.ab3@18663>      BNE.w JL_0_B790
0002F85E <AmiBlitz3.ab3@18664>     MOVE.w #$7000,D1
0002F866 <AmiBlitz3.ab3@18665>     BTST #$7,autorun
0002F868 <AmiBlitz3.ab3@18666>     SNE D1
0002F86C <AmiBlitz3.ab3@18667>     BSR.w writeword
0002F870 <AmiBlitz3.ab3@18668> BRA.w JL_0_B7FE
0002F874 <AmiBlitz3.ab3@18671>     CMP.w #-$12D,D1
0002F878 <AmiBlitz3.ab3@18672>      BNE.w JL_0_B7A0
0002F87C <AmiBlitz3.ab3@18673>     BSR.w makessize
0002F880 <AmiBlitz3.ab3@18674> BRA.w JL_0_B7FE
0002F884 <AmiBlitz3.ab3@18677>     CMP.w #-$1F5,D1
0002F888 <AmiBlitz3.ab3@18678>      BNE.w JL_0_B7C2
0002F88C <AmiBlitz3.ab3@18679>     MOVE.w #$203C,D1
0002F890 <AmiBlitz3.ab3@18680>     BSR.w writeword
0002F894 <AmiBlitz3.ab3@18681>     BSR.w addoff
0002F89A <AmiBlitz3.ab3@18682>     MOVE.l endop,D1
0002F89E <AmiBlitz3.ab3@18683>     BSR.w writelong
0002F8A2 <AmiBlitz3.ab3@18684> BRA.w JL_0_B7FE
0002F8A6 <AmiBlitz3.ab3@18687>     CMP.w #-$3E9,D1
0002F8AA <AmiBlitz3.ab3@18688>      BNE.w JL_0_B7E4
0002F8AE <AmiBlitz3.ab3@18689>     MOVE.w #$203C,D1
0002F8B2 <AmiBlitz3.ab3@18690>     BSR.w writeword
0002F8B6 <AmiBlitz3.ab3@18691>     BSR.w addoff
0002F8BC <AmiBlitz3.ab3@18692>     MOVE.l data2at,D1
0002F8C0 <AmiBlitz3.ab3@18693>     BSR.w writelong
0002F8C4 <AmiBlitz3.ab3@18694> BRA.w JL_0_B7FE
0002F8C8 <AmiBlitz3.ab3@18697>     CMP.w #$1,D1
0002F8CC <AmiBlitz3.ab3@18698>      BNE.w JL_0_B7FE
0002F8D0 <AmiBlitz3.ab3@18699>     MOVE.w #$203C,D1
0002F8D4 <AmiBlitz3.ab3@18700>     BSR.w writeword
0002F8DA <AmiBlitz3.ab3@18701>     MOVE.l ptr_seg_debugger,D1
0002F8DE <AmiBlitz3.ab3@18702>     BSR.w writelong
0002F8E2 <AmiBlitz3.ab3@18705>     MOVE.l $16(A2),D1
0002F8EA <AmiBlitz3.ab3@18706>     MOVE.w #$FFFF,lasta6
0002F8EE <AmiBlitz3.ab3@18707>     BSR.w Amakelibsub
0002F8F4 <AmiBlitz3.ab3@18708>     CMPI.w #$FFFE,$4(A2)
0002F8F8 <AmiBlitz3.ab3@18709>      BNE.w JL_0_B83A
0002F8FE <AmiBlitz3.ab3@18710>     MOVE.l intdata1,D1
0002F902 <AmiBlitz3.ab3@18711>      BEQ.w JL_0_B83A
0002F908 <AmiBlitz3.ab3@18712>     MOVE.w putidata1,D1
0002F90C <AmiBlitz3.ab3@18713>     BSR.w writeword
0002F910 <AmiBlitz3.ab3@18714>     BSR.w addoff
0002F916 <AmiBlitz3.ab3@18715>     MOVE.l intdata1,D1
0002F91A <AmiBlitz3.ab3@18716>     BSR.w writelong
0002F91E <AmiBlitz3.ab3@18719>     MOVE.w #$2B40,D1
0002F922 <AmiBlitz3.ab3@18720>     TST.w $1A(A2)
0002F926 <AmiBlitz3.ab3@18721>      BEQ.w JL_0_B746
0002F92A <AmiBlitz3.ab3@18722>      BPL.w JL_0_B84E
0002F92E <AmiBlitz3.ab3@18723>     MOVE.w #$3B40,D1
0002F932 <AmiBlitz3.ab3@18726>     BSR.w writeword
0002F936 <AmiBlitz3.ab3@18727>     MOVE.w $A(A2),D1
0002F93A <AmiBlitz3.ab3@18728>      BSR.w writeword
0002F940 <AmiBlitz3.ab3@18729>     CMPI.w #$FFFA,$4(A2)
0002F944 <AmiBlitz3.ab3@18730>      BNE.w JL_0_B746
0002F946 <AmiBlitz3.ab3@18731>     MOVE.w D7,-(A7)
0002F94C <AmiBlitz3.ab3@18732>     MOVE.w numstatic,D4
0002F950 <AmiBlitz3.ab3@18733>      BEQ.w JL_0_B882
0002F956 <AmiBlitz3.ab3@18734>     MOVE.l staticdata,D3
0002F95C <AmiBlitz3.ab3@18735>      JSR datastart
0002F960 <AmiBlitz3.ab3@18736>     MOVE.w #$C500,D1
0002F964 <AmiBlitz3.ab3@18737>      BSR.w tokejsr2
0002F96A <AmiBlitz3.ab3@18740>     MOVE.w maxsused,D4
0002F96E <AmiBlitz3.ab3@18741>      BEQ.w JL_0_B89E
0002F974 <AmiBlitz3.ab3@18742>     MOVE.l maxsat,D3
0002F97A <AmiBlitz3.ab3@18743>      JSR datastart
0002F97E <AmiBlitz3.ab3@18744>     MOVE.w #$CF00,D1
0002F982 <AmiBlitz3.ab3@18745>      BSR.w tokejsr2
0002F984 <AmiBlitz3.ab3@18748>     MOVE.w (A7)+,D7
0002F988 <AmiBlitz3.ab3@18749> BRA.w JL_0_B746
0002F98E <AmiBlitz3.ab3@18752>   MOVE.l destpointer,D1
0002F990 <AmiBlitz3.ab3@18753>   CMP.l (A7),D1
0002F994 <AmiBlitz3.ab3@18754>    BNE.w JL_0_B8BC
0002F99C <AmiBlitz3.ab3@18755>   MOVE.w #$0008,noinits+2
0002F9A0 <AmiBlitz3.ab3@18756> BRA.w JL_0_B8E6
0002F9A6 <AmiBlitz3.ab3@18759>   CLR.w noinits+2
0002F9AC <AmiBlitz3.ab3@18760>   MOVE.w dontwrite,D1
0002F9B0 <AmiBlitz3.ab3@18761>    BNE.w JL_0_B8DE
0002F9B6 <AmiBlitz3.ab3@18762>   TST.l newinitaddr
0002F9BA <AmiBlitz3.ab3@18763>    BEQ 'l10
0002F9C0 <AmiBlitz3.ab3@18764>   MOVE.l newinitaddr,D2
0002F9C6 <AmiBlitz3.ab3@18765>   SUB.l destbufferstart,D2
0002F9C8 <AmiBlitz3.ab3@18766>   ADDQ.l #2,d2
0002F9CE <AmiBlitz3.ab3@18767>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F9D2 <AmiBlitz3.ab3@18769>   MOVE.w #$4EB9,(A0)+
0002F9D4 <AmiBlitz3.ab3@18770>   MOVE.l (A7),(A0)+
0002F9D8 <AmiBlitz3.ab3@18772> BRA 'l20
0002F9DE <AmiBlitz3.ab3@18775>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F9E4 <AmiBlitz3.ab3@18776>   TST.b saved0
0002F9E8 <AmiBlitz3.ab3@18777>   BEQ 'l1
0002F9EC <AmiBlitz3.ab3@18778>   MOVE.w #$23c0,(a0)+
0002F9EE <AmiBlitz3.ab3@18779>   MOVE.l a0,a1
0002F9F0 <AmiBlitz3.ab3@18780>   ADDQ.l #6,a1
0002F9F2 <AmiBlitz3.ab3@18781>   MOVE.l a1,(a0)+
0002F9F4 <AmiBlitz3.ab3@18782>   MOVEQ.l #$02,D2
0002F9F8 <AmiBlitz3.ab3@18783>   BSR.w addhunkoffset
0002F9FC <AmiBlitz3.ab3@18784>   MOVE.w #$6004,(a0)+
0002FA02 <AmiBlitz3.ab3@18785>   MOVE.l #$4e714e71,(a0)+
0002FA06 <AmiBlitz3.ab3@18788>   MOVE.w #$4EB9,(A0)+
0002FA08 <AmiBlitz3.ab3@18789>   MOVE.l (A7),(A0)+
0002FA0A <AmiBlitz3.ab3@18790>   MOVEQ #2,d2
0002FA10 <AmiBlitz3.ab3@18791>   TST.b saved0
0002FA14 <AmiBlitz3.ab3@18792>   BEQ 'l20
0002FA16 <AmiBlitz3.ab3@18793>   MOVEQ.l #14,D2
0002FA1A <AmiBlitz3.ab3@18796>   BSR.w addhunkoffset
0002FA1E <AmiBlitz3.ab3@18797>   MOVE.w #$2039,(a0)+
0002FA20 <AmiBlitz3.ab3@18798>   MOVE.l a1,(a0)+
0002FA22 <AmiBlitz3.ab3@18799>   MOVEQ.l #20,d2
0002FA26 <AmiBlitz3.ab3@18802>   BSR.w addhunkoffset
0002FA2A <AmiBlitz3.ab3@18805>   MOVE.w #$4E75,D1
0002FA2E <AmiBlitz3.ab3@18806>   BSR.w writeword
0002FA30 <AmiBlitz3.ab3@18809>   ADDQ.w #4,A7
0002FA32 <AmiBlitz3.ab3@18810> RTS
0002FA36 <AmiBlitz3.ab3@18815>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FA3C <AmiBlitz3.ab3@18817>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FA42 <AmiBlitz3.ab3@18819>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FA48 <AmiBlitz3.ab3@18824>   MOVE.l stringbuffer,D1
0002FA4C <AmiBlitz3.ab3@18825> BRA.w makesize
0002FA4E <AmiBlitz3.ab3@18828>   MOVEQ.l #$00,D1
0002FA54 <AmiBlitz3.ab3@18829>   MOVE.w globalvarpointer,D1
0002FA58 <AmiBlitz3.ab3@18830>   SUBI.w #$8000,D1
0002FA5C <AmiBlitz3.ab3@18831>   BNE.w makesize
0002FA5E <AmiBlitz3.ab3@18832>     MOVEQ.l #$08,D1
0002FA60 <AmiBlitz3.ab3@18835>   MOVE.l D1,-(A7)
0002FA64 <AmiBlitz3.ab3@18836>   MOVE.w #$203C,D1
0002FA68 <AmiBlitz3.ab3@18837>   BSR.w writeword
0002FA6A <AmiBlitz3.ab3@18838>   MOVE.l (A7)+,D1
0002FA6E <AmiBlitz3.ab3@18839> BRA.w writelong
0002FA70 <AmiBlitz3.ab3@18847>   MOVEQ.l #$00,D1
0002FA76 <AmiBlitz3.ab3@18848>   MOVEA.l libpointer,A1
0002FA7A <AmiBlitz3.ab3@18851>     CMPA.w #$0,A1
0002FA7E <AmiBlitz3.ab3@18852>     BEQ.w findhilib__done
0002FA82 <AmiBlitz3.ab3@18853>       CMP.w $4(A1),D7
0002FA86 <AmiBlitz3.ab3@18854>       BLS.w findhilib__next
0002FA8A <AmiBlitz3.ab3@18855>         CMP.w $4(A1),D1
0002FA8E <AmiBlitz3.ab3@18856>         BCC.w findhilib__next
0002FA92 <AmiBlitz3.ab3@18857>           MOVE.w $4(A1),D1
0002FA94 <AmiBlitz3.ab3@18858>           MOVEA.l A1,A2
0002FA96 <AmiBlitz3.ab3@18861>     MOVEA.l (A1),A1
0002FA9A <AmiBlitz3.ab3@18862> BRA.w findhilib__loop
0002FA9C <AmiBlitz3.ab3@18865>   MOVE.w D1,D7
0002FA9E <AmiBlitz3.ab3@18866> RTS
0002FAA0 <AmiBlitz3.ab3@18874>   MOVEQ.l #-$01,D1
0002FAA6 <AmiBlitz3.ab3@18875>   MOVEA.l libpointer,A1
0002FAAA <AmiBlitz3.ab3@18878>     CMPA.w #$0,A1
0002FAAE <AmiBlitz3.ab3@18879>      BEQ.w findlolib__done
0002FAB2 <AmiBlitz3.ab3@18880>     CMP.w $4(A1),D7
0002FAB6 <AmiBlitz3.ab3@18881>      BCC.w findlolib__next
0002FABA <AmiBlitz3.ab3@18882>     CMP.w $4(A1),D1
0002FABE <AmiBlitz3.ab3@18883>      BLS.w findlolib__next
0002FAC2 <AmiBlitz3.ab3@18884>     MOVE.w $4(A1),D1
0002FAC4 <AmiBlitz3.ab3@18885>     MOVEA.l A1,A2
0002FAC6 <AmiBlitz3.ab3@18888>     MOVEA.l (A1),A1
0002FACA <AmiBlitz3.ab3@18889> BRA.w findlolib__loop
0002FACC <AmiBlitz3.ab3@18892>   MOVE.w D1,D7
0002FAD0 <AmiBlitz3.ab3@18893>   CMP.w #-$1,D1
0002FAD2 <AmiBlitz3.ab3@18894> RTS
0002FAD8 <AmiBlitz3.ab3@18898>   ADDQ.w #1,globalvarpointer
0002FAE0 <AmiBlitz3.ab3@18899>   BCLR #$0,globalvarpointer+1
0002FAE2 <AmiBlitz3.ab3@18900>   MOVEQ.l #$00,D7
0002FAE6 <AmiBlitz3.ab3@18903>     BSR.w findlolib
0002FAEA <AmiBlitz3.ab3@18904>     BEQ.w JL_0_BA74
0002FAEE <AmiBlitz3.ab3@18905>     TST.w $C(A2)
0002FAF2 <AmiBlitz3.ab3@18906>     BPL.w JL_0_B99A
0002FAF4 <AmiBlitz3.ab3@18907>     MOVEA.l A2,A1
0002FAF8 <AmiBlitz3.ab3@18908>     ADDA.l $12(A1),A1
0002FAFC <AmiBlitz3.ab3@18909>     TST.w -$2(A1)
0002FB00 <AmiBlitz3.ab3@18910>     BEQ.w JL_0_BA34
0002FB04 <AmiBlitz3.ab3@18911>     MOVE.l -$A(A1),D1
0002FB08 <AmiBlitz3.ab3@18912>     LEA $6(A2,D1.L),A3
0002FB0A <AmiBlitz3.ab3@18915>       TST.w (A3)+
0002FB0E <AmiBlitz3.ab3@18916>       BEQ.w JL_0_B9CC
0002FB10 <AmiBlitz3.ab3@18917>         ADDQ.w #2,A3
0002FB14 <AmiBlitz3.ab3@18918> BRA.w JL_0_B9C0
0002FB18 <AmiBlitz3.ab3@18921>     TST.l $4(A3)
0002FB1C <AmiBlitz3.ab3@18922>     BEQ.w JL_0_BA34
0002FB20 <AmiBlitz3.ab3@18923>       MOVE.w freemax(PC),D1
0002FB24 <AmiBlitz3.ab3@18924>       BSR.w writeword
0002FB28 <AmiBlitz3.ab3@18925>       MOVE.w -$4(A1),D1
0002FB2C <AmiBlitz3.ab3@18926>       BSR.w writeword
0002FB32 <AmiBlitz3.ab3@18927>       MOVE.l free,D1
0002FB36 <AmiBlitz3.ab3@18928>       MOVE.w -$6(A1),D1
0002FB3A <AmiBlitz3.ab3@18929>       BSR.w writelong
0002FB40 <AmiBlitz3.ab3@18930>       MOVE.l destpointer,-(A7)
0002FB42 <AmiBlitz3.ab3@18931>       MOVEQ.l #$01,D1
0002FB46 <AmiBlitz3.ab3@18932>       MOVE.w -$2(A1),D2
0002FB48 <AmiBlitz3.ab3@18933>       LSL.w D2,D1
0002FB4A <AmiBlitz3.ab3@18934>       MOVE.w D1,-(A7)
0002FB4E <AmiBlitz3.ab3@18935>       MOVE.l -$A(A1),D1
0002FB52 <AmiBlitz3.ab3@18936>       BSR.w Amakelibsub
0002FB56 <AmiBlitz3.ab3@18937>       MOVE.w freemax3(PC),D1
0002FB5A <AmiBlitz3.ab3@18938>       BSR.w writeword
0002FB5C <AmiBlitz3.ab3@18939>       MOVE.w (A7)+,D1
0002FB60 <AmiBlitz3.ab3@18940>       BSR.w writeword
0002FB64 <AmiBlitz3.ab3@18941>       MOVE.l freemax2(PC),D1
0002FB68 <AmiBlitz3.ab3@18942>       BSR.w writelong
0002FB6A <AmiBlitz3.ab3@18943>       MOVE.l (A7)+,D1
0002FB70 <AmiBlitz3.ab3@18944>       SUB.l destpointer,D1
0002FB74 <AmiBlitz3.ab3@18945>       BSR.w writeword
0002FB78 <AmiBlitz3.ab3@18946>       MOVE.w freemax4(PC),D1
0002FB7C <AmiBlitz3.ab3@18947>       BSR.w writeword
0002FB80 <AmiBlitz3.ab3@18950>     MOVE.l $1C(A2),D1
0002FB84 <AmiBlitz3.ab3@18951>     BEQ.w JL_0_B99A
0002FB88 <AmiBlitz3.ab3@18953>     MOVE.w $4(A2),D1
0002FB8C <AmiBlitz3.ab3@18954>     CMP.w #-$2,D1
0002FB90 <AmiBlitz3.ab3@18955>     BNE.w JL_0_BA50
0002FB94 <AmiBlitz3.ab3@18956>       BSR.w makevsize
0002FB98 <AmiBlitz3.ab3@18957> BRA.w JL_0_BA60
0002FB9C <AmiBlitz3.ab3@18960>     CMP.w #-$12D,D1
0002FBA0 <AmiBlitz3.ab3@18961>     BNE.w JL_0_BA60
0002FBA4 <AmiBlitz3.ab3@18962>       BSR.w makessize
0002FBA8 <AmiBlitz3.ab3@18963> BRA.w JL_0_BA60
0002FBAC <AmiBlitz3.ab3@18966>     MOVE.l $1C(A2),D1
0002FBB4 <AmiBlitz3.ab3@18967>     MOVE.w #$FFFF,lasta6
0002FBB8 <AmiBlitz3.ab3@18968>     BSR.w Amakelibsub
0002FBBC <AmiBlitz3.ab3@18969> BRA.w JL_0_B99A
0002FBBE <AmiBlitz3.ab3@18972> RTS
0002FBC2 <AmiBlitz3.ab3@18976> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002FBC4 <AmiBlitz3.ab3@18978> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002FBC8 <AmiBlitz3.ab3@18979>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002FBCA <AmiBlitz3.ab3@18980> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002FBCE <AmiBlitz3.ab3@18981> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002FBD4 <AmiBlitz3.ab3@18986>   TST.b debugmode
0002FBD8 <AmiBlitz3.ab3@18987>    BEQ.b chkstak__skip
0002FBDE <AmiBlitz3.ab3@18988>   TST.w debugversion
0002FBE2 <AmiBlitz3.ab3@18989>    BNE.b chkstak__skip
0002FBE6 <AmiBlitz3.ab3@18990>   MOVE.w #$C308,D1
0002FBEA <AmiBlitz3.ab3@18991> BRA.w Atokejsr
0002FBEC <AmiBlitz3.ab3@18994> RTS
0002FBF4 <AmiBlitz3.ab3@18998>   MOVE.w #$FFFF,lasta6
0002FBF8 <AmiBlitz3.ab3@19003>   MOVEM.l D0-d7/A0-a6,-(A7)
0002FC00 <AmiBlitz3.ab3@19004>   MOVE.b #1,nostringopt
0002FC06 <AmiBlitz3.ab3@19005>   JSR searchinstr
0002FC08 <AmiBlitz3.ab3@19006>   MOVE.l A3,D1
0002FC0A <AmiBlitz3.ab3@19007>   SUB.l A2,D1
0002FC0E <AmiBlitz3.ab3@19008>   BSR.w Amakelibsub
0002FC12 <AmiBlitz3.ab3@19009>   MOVEM.l (A7)+,d0-d7/a0-a6
0002FC14 <AmiBlitz3.ab3@19010> RTS
0002FC1A <AmiBlitz3.ab3@19017>   MOVE.l libisat,-(A7)                                   ;library write
0002FC20 <AmiBlitz3.ab3@19018>   MOVE.l A2,libisat
0002FC22 <AmiBlitz3.ab3@19020>   MOVEA.l A1,A2
0002FC24 <AmiBlitz3.ab3@19021>   MOVE.w (A2)+,D1
0002FC2A <AmiBlitz3.ab3@19022>   MOVE.l a2,lastinstructionaddr
0002FC2E <AmiBlitz3.ab3@19023>   ANDI.w #$FF,D1
0002FC30 <AmiBlitz3.ab3@19024>   ADDA.w D1,A2
0002FC32 <AmiBlitz3.ab3@19025>   EXG.l D0,A2
0002FC34 <AmiBlitz3.ab3@19026>   ADDQ.l #1,D0
0002FC38 <AmiBlitz3.ab3@19027>   BCLR #$0,D0
0002FC3A <AmiBlitz3.ab3@19028>   EXG.l D0,A2
0002FC3E <AmiBlitz3.ab3@19029> BRA.w JL_0_BB08
0002FC44 <AmiBlitz3.ab3@19033>   MOVE.l libisat,-(A7)
0002FC4A <AmiBlitz3.ab3@19034>   MOVE.l A2,libisat
0002FC4C <AmiBlitz3.ab3@19035>   MOVEA.l A3,A2
0002FC50 <AmiBlitz3.ab3@19036> BRA.w JL_0_BB08
0002FC52 <AmiBlitz3.ab3@19040>   MOVE.l a1,-(a7)
0002FC54 <AmiBlitz3.ab3@19043>   MOVE.l d0,a0
0002FC58 <AmiBlitz3.ab3@19044>   MOVE.l $a(a0),d0
0002FC5A <AmiBlitz3.ab3@19045>   MOVE.l d0,a1
0002FC62 <AmiBlitz3.ab3@19046>   CMP.l #8,4(a1)
0002FC66 <AmiBlitz3.ab3@19047>   BLE 'norec
0002FC68 <AmiBlitz3.ab3@19048>   MOVE.l a0,-(a7)
0002FC6E <AmiBlitz3.ab3@19049>   MOVE.l typebase,-(a7)
0002FC70 <AmiBlitz3.ab3@19050>   MOVEQ #0,d0
0002FC74 <AmiBlitz3.ab3@19051>   MOVE.w 4(a0),d0
0002FC7A <AmiBlitz3.ab3@19052>   ADD.l d0,typebase
0002FC7E <AmiBlitz3.ab3@19053>   MOVE.l $4(a1),d0
0002FC82 <AmiBlitz3.ab3@19054>   BSR scantype
0002FC88 <AmiBlitz3.ab3@19055>   MOVE.l (a7)+,typebase
0002FC8A <AmiBlitz3.ab3@19056>   MOVE.l (a7)+,a0
0002FC90 <AmiBlitz3.ab3@19059>   CMP.l #newtype_string,d0
0002FC94 <AmiBlitz3.ab3@19060>   BNE 'nostring
0002FC9A <AmiBlitz3.ab3@19061>   ADDQ #2,a2offset
0002FCA0 <AmiBlitz3.ab3@19062>   MOVE.l #$3f3c0000,d1
0002FCA2 <AmiBlitz3.ab3@19063>   MOVEQ #0,d0
0002FCA6 <AmiBlitz3.ab3@19064>   MOVE.w 4(a0),d0
0002FCAC <AmiBlitz3.ab3@19065>   ADD.l typebase,d0
0002FCAE <AmiBlitz3.ab3@19066>   MOVE.w d0,d1
0002FCB2 <AmiBlitz3.ab3@19067>   BSR writelong
0002FCB8 <AmiBlitz3.ab3@19068>   TST.b debugmode
0002FCBC <AmiBlitz3.ab3@19069>   BEQ 'l1a
0002FCBE <AmiBlitz3.ab3@19070>   MOVE.l d1,-(a7)
0002FCC4 <AmiBlitz3.ab3@19071>   MOVE.l #$c308,d1
0002FCCA <AmiBlitz3.ab3@19072>   JSR Atokejsr
0002FCCC <AmiBlitz3.ab3@19073>   MOVE.l (a7)+,d1
0002FCD0 <AmiBlitz3.ab3@19076>   TST.w 8(a0)
0002FCD4 <AmiBlitz3.ab3@19077>   BEQ 'nostring
0002FCD8 <AmiBlitz3.ab3@19078>   MOVEM.l d2/d3,-(a7)
0002FCDA <AmiBlitz3.ab3@19079>   MOVE.l d1,d2
0002FCDC <AmiBlitz3.ab3@19080>   MOVEQ #0,d3
0002FCE0 <AmiBlitz3.ab3@19081>   MOVE.w 8(a0),d3
0002FCE2 <AmiBlitz3.ab3@19082>   SUBQ.l #1,d3
0002FCE6 <AmiBlitz3.ab3@19083>   BEQ 'nostring2
0002FCE8 <AmiBlitz3.ab3@19086>   ADDQ.l #4,d2
0002FCEA <AmiBlitz3.ab3@19087>   MOVE.l d2,d1
0002FCEE <AmiBlitz3.ab3@19088>   BSR writelong
0002FCF4 <AmiBlitz3.ab3@19089>   TST.b debugmode
0002FCF8 <AmiBlitz3.ab3@19090>   BEQ 'l1
0002FCFE <AmiBlitz3.ab3@19091>   MOVE.l #$c308,d1
0002FD04 <AmiBlitz3.ab3@19092>   JSR Atokejsr
0002FD0A <AmiBlitz3.ab3@19095>   ADDQ #2,a2offset
0002FD0C <AmiBlitz3.ab3@19096>   SUBQ.l #1,d3
0002FD10 <AmiBlitz3.ab3@19097>   BNE 'loop
0002FD14 <AmiBlitz3.ab3@19100>   MOVEM.l (a7)+,d2/d3
0002FD16 <AmiBlitz3.ab3@19103>   MOVE.l (a0),d0
0002FD1A <AmiBlitz3.ab3@19104>   BNE 'more
0002FD1C <AmiBlitz3.ab3@19105>   MOVE.l (a7)+,a1
0002FD1E <AmiBlitz3.ab3@19106> RTS
0002FD22 <AmiBlitz3.ab3@19109> libisat:   Ds.l 1
0002FD28 <AmiBlitz3.ab3@19115>   MOVE.l libisat,-(A7)                                   
0002FD2E <AmiBlitz3.ab3@19116>   MOVE.l A2,libisat
0002FD32 <AmiBlitz3.ab3@19117>   LEA $6(A2,D1.L),A2
0002FD3A <AmiBlitz3.ab3@19121>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002FD3E <AmiBlitz3.ab3@19122>   BEQ 'dowritevar
0002FD46 <AmiBlitz3.ab3@19123>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002FD4A <AmiBlitz3.ab3@19124>   BEQ 'dowritevar
0002FD52 <AmiBlitz3.ab3@19125>   CMP.l #$3e175265,$1c(a2)
0002FD56 <AmiBlitz3.ab3@19126>   BEQ 'dowritevar
0002FD5E <AmiBlitz3.ab3@19127>   CMP.l #$3e165772,$1c(a2)
0002FD62 <AmiBlitz3.ab3@19128>   BNE 'nowritef
0002FD66 <AmiBlitz3.ab3@19131>   MOVEM.l a0-a2/d2,-(a7)
0002FD68 <AmiBlitz3.ab3@19132>   MOVEQ #0,d1
0002FD72 <AmiBlitz3.ab3@19133>   MOVE.l #0,typebase
0002FD76 <AmiBlitz3.ab3@19134>   MOVE.l $a(a3),a0
0002FD7A <AmiBlitz3.ab3@19135>   MOVE.l $4(a0),d0
0002FD80 <AmiBlitz3.ab3@19136>   CMP.l #8,d0
0002FD84 <AmiBlitz3.ab3@19137>   BLE 'notype
0002FD88 <AmiBlitz3.ab3@19138>   BSR scantype
0002FD8E <AmiBlitz3.ab3@19141>   MOVE.l #$3f3c0000,d1
0002FD94 <AmiBlitz3.ab3@19142>   MOVE.w a2offset,d1
0002FD98 <AmiBlitz3.ab3@19143>   BSR writelong
0002FD9E <AmiBlitz3.ab3@19144>   MOVE.l #$3f3c0000,d1
0002FDA2 <AmiBlitz3.ab3@19145>   MOVE.l $a(a3),a0
0002FDA6 <AmiBlitz3.ab3@19146>   MOVE.w 8(a0),d1
0002FDAA <AmiBlitz3.ab3@19147>   BSR writelong
0002FDB0 <AmiBlitz3.ab3@19148>   MOVE.l #$3f3cab12,d1
0002FDB4 <AmiBlitz3.ab3@19149>   BSR writelong
0002FDBA <AmiBlitz3.ab3@19150>   ADDQ.w #6,a2offset
0002FDBE <AmiBlitz3.ab3@19151>   MOVEM.l (a7)+,a0-a2/d2
0002FDC4 <AmiBlitz3.ab3@19154>   TST.b fpu
0002FDC8 <AmiBlitz3.ab3@19155>   BEQ 'nofpu2
0002FDD0 <AmiBlitz3.ab3@19156>   CMP.l #$496e7400,$1a(a2)
0002FDD4 <AmiBlitz3.ab3@19157>   BNE 'noint
0002FDD6 <AmiBlitz3.ab3@19158>   MOVEQ #0,d1
0002FDDC <AmiBlitz3.ab3@19159>   SUBQ.l #8,destpointer                                    ;fpu int
0002FDE2 <AmiBlitz3.ab3@19160>   CLR.w a2offset
0002FDE6 <AmiBlitz3.ab3@19161>   CMP.b #2,d2
0002FDEA <AmiBlitz3.ab3@19162>   BGT 'noword
0002FDEE <AmiBlitz3.ab3@19163>   MOVE.w #$48c0,d1
0002FDF4 <AmiBlitz3.ab3@19164>   OR.w regnumstore,d1
0002FDF8 <AmiBlitz3.ab3@19165>   BSR writeword
0002FDFC <AmiBlitz3.ab3@19166> BRA 'exit2
0002FE00 <AmiBlitz3.ab3@19169>    CMP.b #3,d2
0002FE04 <AmiBlitz3.ab3@19170>         BNE 'nolong
0002FE08 <AmiBlitz3.ab3@19171> BRA 'exit2
0002FE0C <AmiBlitz3.ab3@19174>    CMP.b #4,d2
0002FE10 <AmiBlitz3.ab3@19175>         BNE 'noquick
0002FE14 <AmiBlitz3.ab3@19176>         MOVE.w #$e080,d1
0002FE1A <AmiBlitz3.ab3@19177>         OR.w regnumstore,d1
0002FE1E <AmiBlitz3.ab3@19178>         BSR writeword
0002FE22 <AmiBlitz3.ab3@19179>         MOVE.w #$e080,d1
0002FE28 <AmiBlitz3.ab3@19180>         OR.w regnumstore,d1
0002FE2C <AmiBlitz3.ab3@19181>         BSR writeword
0002FE30 <AmiBlitz3.ab3@19182> BRA 'exit2
0002FE32 <AmiBlitz3.ab3@19185>         MOVEQ #0,d0
0002FE34 <AmiBlitz3.ab3@19186>         MOVEQ #0,d1
0002FE3A <AmiBlitz3.ab3@19187>         MOVE.w regnumstore,d0
0002FE3C <AmiBlitz3.ab3@19188>         ASL.l #7,d0
0002FE42 <AmiBlitz3.ab3@19189>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002FE44 <AmiBlitz3.ab3@19190>         OR.l d0,d1
0002FE4A <AmiBlitz3.ab3@19192>         MOVE.l #$3f000000,d1
0002FE4C <AmiBlitz3.ab3@19194>         MOVEQ #0,d0
0002FE4E <AmiBlitz3.ab3@19195>         MOVEQ #0,d1
0002FE54 <AmiBlitz3.ab3@19196>         MOVE.w regnumstore,d0
0002FE56 <AmiBlitz3.ab3@19197>         ASL.l #7,d0
0002FE58 <AmiBlitz3.ab3@19198>         MOVE.l d0,d1
0002FE5E <AmiBlitz3.ab3@19199>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002FE60 <AmiBlitz3.ab3@19200>         ASL.l #3,d0
0002FE62 <AmiBlitz3.ab3@19201>         OR.l d0,d1
0002FE66 <AmiBlitz3.ab3@19202>         BSR writelong
0002FE68 <AmiBlitz3.ab3@19203>         MOVEQ #0,d0
0002FE6E <AmiBlitz3.ab3@19204>         MOVE.w regnumstore,d0
0002FE70 <AmiBlitz3.ab3@19205>         ASL.l #7,d0
0002FE76 <AmiBlitz3.ab3@19206>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002FE78 <AmiBlitz3.ab3@19207>         OR.l d0,d1
0002FE7A <AmiBlitz3.ab3@19208>         ASL.l #1,d0
0002FE7C <AmiBlitz3.ab3@19209>         ASL.l #8,d0
0002FE7E <AmiBlitz3.ab3@19210>         OR.l d0,d1
0002FE82 <AmiBlitz3.ab3@19211> BRA 'exit
0002FE88 <AmiBlitz3.ab3@19214>   CMP.w #$3c01,24(a2)
0002FE8C <AmiBlitz3.ab3@19215>   BNE 'noval
0002FE8E <AmiBlitz3.ab3@19216>   MOVE.l a2,-(a7)
0002FE92 <AmiBlitz3.ab3@19217>   BSR.w JL_0_BB14
0002FE94 <AmiBlitz3.ab3@19218>   MOVE.l (a7)+,a2
0002FE98 <AmiBlitz3.ab3@19219> BRA 'exit2
0002FEA0 <AmiBlitz3.ab3@19236>   CMP.l #$41627300,$1a(a2)
0002FEA4 <AmiBlitz3.ab3@19237>   BNE 'noabs
0002FEA6 <AmiBlitz3.ab3@19238>   MOVEQ #0,d1
0002FEAC <AmiBlitz3.ab3@19239>   MOVE.w regnumstore,d1
0002FEAE <AmiBlitz3.ab3@19240>   MOVE.w d1,d0
0002FEB0 <AmiBlitz3.ab3@19241>   ASL.w #7,d1
0002FEB2 <AmiBlitz3.ab3@19242>   ASL.w #8,d0
0002FEB4 <AmiBlitz3.ab3@19243>   ASL.w #2,d0
0002FEB6 <AmiBlitz3.ab3@19244>   OR.w d0,d1
0002FEBC <AmiBlitz3.ab3@19245>   SUBQ.l #8,destpointer                                    ;fpu abs
0002FEC0 <AmiBlitz3.ab3@19246>   MOVEM.l d3/d1,-(a7)
0002FEC4 <AmiBlitz3.ab3@19247>   MOVE.w #5,d3
0002FEC6 <AmiBlitz3.ab3@19248>   EXG d2,d3
0002FECC <AmiBlitz3.ab3@19249>   MOVE.w regnum,-(a7)
0002FED6 <AmiBlitz3.ab3@19250>   MOVE.w regnumstore,regnum
0002FEDA <AmiBlitz3.ab3@19251>   BSR writeconvertcode
0002FEE0 <AmiBlitz3.ab3@19252>   MOVE.w (a7)+,regnum
0002FEE2 <AmiBlitz3.ab3@19253>   EXG d2,d3
0002FEE6 <AmiBlitz3.ab3@19254>   MOVEM.l (a7)+,d3/d1
0002FEEC <AmiBlitz3.ab3@19255>   OR.l #$f2000018,d1
0002FEF2 <AmiBlitz3.ab3@19256>   CLR.w a2offset
0002FEF6 <AmiBlitz3.ab3@19257> BRA 'exit
0002FEFA <AmiBlitz3.ab3@19260>   CMP.b #5,d2
0002FEFE <AmiBlitz3.ab3@19261>   BNE 'nofpu2
0002FF02 <AmiBlitz3.ab3@19262>   MOVE.b 24(a2),d0
0002FF06 <AmiBlitz3.ab3@19263>   CMP.b #$60,d0                                            ;nolib $edxx
0002FF0A <AmiBlitz3.ab3@19264>   BNE 'nofpu
0002FF0C <AmiBlitz3.ab3@19265>   MOVEQ #0,d1
0002FF12 <AmiBlitz3.ab3@19266>   MOVE.w regnumstore,d1
0002FF14 <AmiBlitz3.ab3@19267>   MOVE.w d1,d0
0002FF16 <AmiBlitz3.ab3@19268>   ASL.w #7,d1
0002FF18 <AmiBlitz3.ab3@19269>   ASL.w #8,d0
0002FF1A <AmiBlitz3.ab3@19270>   ASL.w #2,d0
0002FF1C <AmiBlitz3.ab3@19271>   OR.w d0,d1
0002FF20 <AmiBlitz3.ab3@19272>   MOVE.b 25(a2),d0
0002FF24 <AmiBlitz3.ab3@19273>   CMP.b #5,d0
0002FF28 <AmiBlitz3.ab3@19274>   BNE 'nocos
0002FF2E <AmiBlitz3.ab3@19275>   OR.l #$f200001d,d1                                       ;fpu cos
0002FF32 <AmiBlitz3.ab3@19276> BRA 'exit
0002FF36 <AmiBlitz3.ab3@19279>   CMP.b #$c,d0
0002FF3A <AmiBlitz3.ab3@19280>   BNE 'nosqr
0002FF40 <AmiBlitz3.ab3@19281>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FF44 <AmiBlitz3.ab3@19282> BRA 'exit
0002FF48 <AmiBlitz3.ab3@19285>   CMP.b #$d,d0
0002FF4C <AmiBlitz3.ab3@19286>   BNE 'notan
0002FF52 <AmiBlitz3.ab3@19287>   OR.l #$f200000f,d1                                       ;fpu tan
0002FF56 <AmiBlitz3.ab3@19288> BRA 'exit
0002FF5A <AmiBlitz3.ab3@19291>   CMP.b #$a,d0
0002FF5E <AmiBlitz3.ab3@19292>   BNE 'nosin
0002FF64 <AmiBlitz3.ab3@19293>   OR.l #$f200000e,d1                                       ;fpu sin
0002FF68 <AmiBlitz3.ab3@19294> BRA 'exit
0002FF6C <AmiBlitz3.ab3@19297>   CMP.b #$3,d0
0002FF70 <AmiBlitz3.ab3@19298>   BNE 'noasin
0002FF76 <AmiBlitz3.ab3@19299>   OR.l #$f200000c,d1                                       ;fpu asin
0002FF7A <AmiBlitz3.ab3@19300> BRA 'exit
0002FF7E <AmiBlitz3.ab3@19303>   CMP.b #$2,d0
0002FF82 <AmiBlitz3.ab3@19304>   BNE 'noacos
0002FF88 <AmiBlitz3.ab3@19305>   OR.l #$f200001c,d1                                       ;fpu acos
0002FF8C <AmiBlitz3.ab3@19306> BRA 'exit
0002FF90 <AmiBlitz3.ab3@19309>   CMP.b #$4,d0
0002FF94 <AmiBlitz3.ab3@19310>   BNE 'noatan
0002FF9A <AmiBlitz3.ab3@19311>   OR.l #$f200000a,d1                                       ;fpu atan
0002FF9E <AmiBlitz3.ab3@19312> BRA 'exit
0002FFA2 <AmiBlitz3.ab3@19315>   CMP.b #$e,d0
0002FFA6 <AmiBlitz3.ab3@19316>   BNE 'nohtan
0002FFAC <AmiBlitz3.ab3@19317>   OR.l #$f2000009,d1                                       ;fpu htan
0002FFB0 <AmiBlitz3.ab3@19318> BRA 'exit
0002FFB4 <AmiBlitz3.ab3@19321>   CMP.b #$6,d0
0002FFB8 <AmiBlitz3.ab3@19322>   BNE 'nohcos
0002FFBE <AmiBlitz3.ab3@19323>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FFC2 <AmiBlitz3.ab3@19324> BRA 'exit
0002FFC6 <AmiBlitz3.ab3@19327>   CMP.b #$b,d0
0002FFCA <AmiBlitz3.ab3@19328>   BNE 'nohsin
0002FFD0 <AmiBlitz3.ab3@19329>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FFD4 <AmiBlitz3.ab3@19330> BRA 'exit
0002FFD8 <AmiBlitz3.ab3@19333>   CMP.b #$9,d0
0002FFDC <AmiBlitz3.ab3@19334>   BNE 'nolog
0002FFE2 <AmiBlitz3.ab3@19335>   OR.l #$f2000014,d1                                       ;fpu log
0002FFE6 <AmiBlitz3.ab3@19336> BRA 'exit
0002FFEA <AmiBlitz3.ab3@19339>   CMP.b #$8,d0
0002FFEE <AmiBlitz3.ab3@19340>   BNE 'nolog10
0002FFF4 <AmiBlitz3.ab3@19341>   OR.l #$f2000015,d1                                       ;fpu log10
0002FFF8 <AmiBlitz3.ab3@19342> BRA 'exit
0002FFFC <AmiBlitz3.ab3@19345>   CMP.b #$7,d0
00030000 <AmiBlitz3.ab3@19346>   BNE 'noexp
00030006 <AmiBlitz3.ab3@19347>   OR.l #$f2000010,d1                                       ;fpu exp
0003000A <AmiBlitz3.ab3@19348> BRA 'exit
00030010 <AmiBlitz3.ab3@19351>   LEA fpuerr,a0
00030012 <AmiBlitz3.ab3@19352>   MOVE.l a0,-(a7)
00030018 <AmiBlitz3.ab3@19353> JMP handle_compileerror
0003001C <AmiBlitz3.ab3@19357>   CMP.b #$3c,d0
00030020 <AmiBlitz3.ab3@19358>   BNE 'nofpu2
00030022 <AmiBlitz3.ab3@19359>   MOVEQ #0,d1
00030028 <AmiBlitz3.ab3@19360>       MOVE.w regnumstore,d1
0003002A <AmiBlitz3.ab3@19361>       MOVE.w d1,d0
0003002C <AmiBlitz3.ab3@19362>       ASL.w #7,d1
0003002E <AmiBlitz3.ab3@19363>       ASL.w #8,d0
00030030 <AmiBlitz3.ab3@19364>       ASL.w #2,d0
00030032 <AmiBlitz3.ab3@19365>       OR.w d0,d1
00030038 <AmiBlitz3.ab3@19366>       CMP.b #$03,25(a2)
0003003C <AmiBlitz3.ab3@19367>       BNE 'nosgn
00030042 <AmiBlitz3.ab3@19370>       SUBQ.l #8,destpointer                                ;fpu sgn
00030048 <AmiBlitz3.ab3@19371>         OR.l #$f200003a,d1
0003004C <AmiBlitz3.ab3@19372>         BSR writelong
00030052 <AmiBlitz3.ab3@19373>         CLR.w a2offset
00030058 <AmiBlitz3.ab3@19374>          MOVE.l #$F28E0006,d1
0003005C <AmiBlitz3.ab3@19375>          BSR writelong
00030062 <AmiBlitz3.ab3@19376>   MOVE.l #$7000600a,d1
00030066 <AmiBlitz3.ab3@19377>   BSR writelong
0003006C <AmiBlitz3.ab3@19378>   MOVE.l #$70014840,d1
00030070 <AmiBlitz3.ab3@19379>   BSR writelong
00030076 <AmiBlitz3.ab3@19380>   MOVE.l #$F292,d1
0003007A <AmiBlitz3.ab3@19381>   BSR writeword
00030080 <AmiBlitz3.ab3@19382>   MOVE.l #$000470FF,d1
00030084 <AmiBlitz3.ab3@19383> BRA 'exit
0003008C <AmiBlitz3.ab3@19386>   CMP.l #"Frac",$1a(a2)
00030090 <AmiBlitz3.ab3@19387>   BNE 'nofrac
00030096 <AmiBlitz3.ab3@19388> JMP notwork
0003009A <AmiBlitz3.ab3@19429> BRA 'exit
0003009E <AmiBlitz3.ab3@19433>   BSR.w JL_0_BB14                                          ;write lib code
000300A4 <AmiBlitz3.ab3@19434>   MOVE.l (A7)+,libisat
000300A6 <AmiBlitz3.ab3@19435> RTS
000300AA <AmiBlitz3.ab3@19438>   BSR writelong
000300B0 <AmiBlitz3.ab3@19441>   MOVE.l (A7)+,libisat
000300B2 <AmiBlitz3.ab3@19442> RTS
000300B6 <AmiBlitz3.ab3@19446>   BSR.w fetchregs
000300BC <AmiBlitz3.ab3@19447>   TST.b debugmode
000300C0 <AmiBlitz3.ab3@19448>    BEQ.w JL_0_BB76
000300C2 <AmiBlitz3.ab3@19449>   MOVE.l (A2),D1
000300C6 <AmiBlitz3.ab3@19450>   OR.l $8(A2),D1
000300CA <AmiBlitz3.ab3@19451>   BCLR #$0,D1
000300CC <AmiBlitz3.ab3@19452>   TST.l D1
000300D0 <AmiBlitz3.ab3@19453>    BEQ.w JL_0_BB76
000300D2 <AmiBlitz3.ab3@19454>   MOVE.l (A2)+,D1
000300D6 <AmiBlitz3.ab3@19455>   BTST #$0,D1
000300DA <AmiBlitz3.ab3@19456>    BEQ.w JL_0_BB60
000300E0 <AmiBlitz3.ab3@19457>   TST.w blitzmode
000300E4 <AmiBlitz3.ab3@19458>    BPL.w blitzerr
000300EA <AmiBlitz3.ab3@19459>   TST.b debugmode
000300EE <AmiBlitz3.ab3@19460>    BEQ.w JL_0_BB5C
000300F0 <AmiBlitz3.ab3@19461>   MOVE.l D1,-(A7)
000300F4 <AmiBlitz3.ab3@19462>   MOVE.w #$C311,D1
000300F8 <AmiBlitz3.ab3@19463>    BSR.w makebtst
000300FA <AmiBlitz3.ab3@19464>   MOVE.l (A7)+,D1
000300FE <AmiBlitz3.ab3@19467>   BCLR #$0,D1
00030100 <AmiBlitz3.ab3@19470>   TST.l D1
00030104 <AmiBlitz3.ab3@19471>    BSR.w JL_0_BBC6
00030106 <AmiBlitz3.ab3@19472>   MOVE.l (A2)+,D1
0003010A <AmiBlitz3.ab3@19473>    BSR.w JL_0_BB98
0003010C <AmiBlitz3.ab3@19474>   MOVE.l (A2)+,D1
00030110 <AmiBlitz3.ab3@19475>    BSR.w JL_0_BBC6
00030114 <AmiBlitz3.ab3@19476> BRA.w JL_0_BB90
0003011A <AmiBlitz3.ab3@19479>   BTST #$0,$3(A2)
0003011E <AmiBlitz3.ab3@19480>    BEQ.w JL_0_BB88
00030122 <AmiBlitz3.ab3@19481>   MOVE.w blitzmode(PC),D1
00030126 <AmiBlitz3.ab3@19482>    BPL.w blitzerr
0003012A <AmiBlitz3.ab3@19485>   MOVE.l $4(A2),D1
0003012E <AmiBlitz3.ab3@19486>    BSR.w JL_0_BB98
00030134 <AmiBlitz3.ab3@19489>   MOVEA.l libisat,A2
00030136 <AmiBlitz3.ab3@19490> RTS
0003013A <AmiBlitz3.ab3@19493>   BTST #$0,D1
0003013E <AmiBlitz3.ab3@19494>    BEQ.w JL_0_BBC4
00030144 <AmiBlitz3.ab3@19495>   TST.w blitzmode
00030148 <AmiBlitz3.ab3@19496>    BMI.w amigaerr
0003014E <AmiBlitz3.ab3@19497>   TST.b debugmode
00030152 <AmiBlitz3.ab3@19498>    BEQ.w JL_0_BBC0
00030154 <AmiBlitz3.ab3@19499>   MOVE.l D1,-(A7)
00030158 <AmiBlitz3.ab3@19500>   MOVE.w #$C312,D1
0003015C <AmiBlitz3.ab3@19501>    BSR.w makebtst
0003015E <AmiBlitz3.ab3@19502>   MOVE.l (A7)+,D1
00030162 <AmiBlitz3.ab3@19505>   BCLR #$0,D1
00030164 <AmiBlitz3.ab3@19508>   TST.l D1
00030168 <AmiBlitz3.ab3@19511>    BEQ.w JL_0_BBD2
0003016A <AmiBlitz3.ab3@19512>   MOVE.l A1,-(A7)
0003016E <AmiBlitz3.ab3@19513>    BSR.w JL_0_BBD4
00030170 <AmiBlitz3.ab3@19514>   MOVEA.l (A7)+,A1
00030172 <AmiBlitz3.ab3@19517> RTS
00030178 <AmiBlitz3.ab3@19520>   MOVEA.l libisat,A0
0003017E <AmiBlitz3.ab3@19521>   TST.w cfetchmode
00030182 <AmiBlitz3.ab3@19522>    BEQ.w JL_0_BBF6
00030184 <AmiBlitz3.ab3@19523>   ADD.l A0,D1
00030186 <AmiBlitz3.ab3@19524>   MOVE.l D1,-(A7)
0003018A <AmiBlitz3.ab3@19525>   MOVE.w #$4EB9,D1
0003018E <AmiBlitz3.ab3@19526>    BSR.w writeword
00030190 <AmiBlitz3.ab3@19527>   MOVE.l (A7)+,D1
00030194 <AmiBlitz3.ab3@19528> BRA.w writelong
00030198 <AmiBlitz3.ab3@19531>   LEA $0(A0,D1.L),A1
0003019E <AmiBlitz3.ab3@19532>   CLR.w inline
000301A2 <AmiBlitz3.ab3@19535>   CMPI.b #$A0,(A1)+
000301A6 <AmiBlitz3.ab3@19536>    BNE.w JL_0_BC68
000301A8 <AmiBlitz3.ab3@19537>   TST.b (A1)+
000301AC <AmiBlitz3.ab3@19538>    BEQ.w JL_0_BC18
000301B2 <AmiBlitz3.ab3@19539>   CMPI.b #$1,-$1(A1)
000301B6 <AmiBlitz3.ab3@19540>    BEQ.w JL_0_BC24
000301BC <AmiBlitz3.ab3@19543>   MOVE.w (A1)+,inline
000301BE <AmiBlitz3.ab3@19544>   ADDQ.l #4,D1
000301C2 <AmiBlitz3.ab3@19545> BRA.w JL_0_BC00
000301C8 <AmiBlitz3.ab3@19548>   TST.w blitzmode
000301CC <AmiBlitz3.ab3@19549>    BPL.w JL_0_BC4A
000301D2 <AmiBlitz3.ab3@19550>   TST.b debugmode
000301D6 <AmiBlitz3.ab3@19551>    BEQ.w JL_0_BC40
000301DA <AmiBlitz3.ab3@19552>   MOVE.w #$C311,D1
000301DE <AmiBlitz3.ab3@19553>    BSR.w makebtst
000301E0 <AmiBlitz3.ab3@19556>   MOVE.l (A1)+,D1
000301E4 <AmiBlitz3.ab3@19557>   LEA $0(A0,D1.L),A1
000301E8 <AmiBlitz3.ab3@19558> BRA.w JL_0_BC00
000301EE <AmiBlitz3.ab3@19561>   TST.b debugmode
000301F2 <AmiBlitz3.ab3@19562>    BEQ.w JL_0_BC60
000301F4 <AmiBlitz3.ab3@19563>   MOVE.l D1,-(A7)
000301F8 <AmiBlitz3.ab3@19564>   MOVE.w #$C312,D1
000301FC <AmiBlitz3.ab3@19565>    BSR.w makebtst
000301FE <AmiBlitz3.ab3@19566>   MOVE.l (A7)+,D1
00030200 <AmiBlitz3.ab3@19569>   ADDQ.w #4,A1
00030202 <AmiBlitz3.ab3@19570>   ADDQ.l #6,D1
00030206 <AmiBlitz3.ab3@19571> BRA.w JL_0_BC00
0003020C <AmiBlitz3.ab3@19574>   TST.w inline
00030210 <AmiBlitz3.ab3@19575>    BEQ.w JL_0_BC7E
00030212 <AmiBlitz3.ab3@19576>   SUBQ.w #1,A1
00030214 <AmiBlitz3.ab3@19577>   MOVEA.l A1,A0
00030218 <AmiBlitz3.ab3@19578>   ADDA.w inline(PC),A1
0003021C <AmiBlitz3.ab3@19579> BRA.w pokecode2
00030220 <AmiBlitz3.ab3@19582>   MOVEM.l a0/D1,-(A7)
00030226 <AmiBlitz3.ab3@19583>   TST.w debugversion
0003022A <AmiBlitz3.ab3@19584>   BEQ 'l11
00030232 <AmiBlitz3.ab3@19585>   BTST #$7,link_debuginfo
00030236 <AmiBlitz3.ab3@19586>   BEQ.w 'l11
0003023C <AmiBlitz3.ab3@19587>   MOVE.l lastinstruction,d1
00030240 <AmiBlitz3.ab3@19588>   BEQ 'l11
00030246 <AmiBlitz3.ab3@19589>   CLR.l lastinstruction
0003024C <AmiBlitz3.ab3@19590>   CMP.l #$e000,d1
00030250 <AmiBlitz3.ab3@19591>   BGE 'ln99
00030256 <AmiBlitz3.ab3@19592>   LEA notf,a0
0003025C <AmiBlitz3.ab3@19593>   CMP.l #$c601,d1
00030260 <AmiBlitz3.ab3@19594>   BNE 'ln1
00030266 <AmiBlitz3.ab3@19595>   LEA strcpy,a0
0003026A <AmiBlitz3.ab3@19596> BRA 'ln3
00030270 <AmiBlitz3.ab3@19599>   CMP.l #$c700,d1
00030274 <AmiBlitz3.ab3@19600>   BNE 'ln2
0003027A <AmiBlitz3.ab3@19601>   LEA strvar,a0
0003027E <AmiBlitz3.ab3@19602> BRA 'ln3
00030284 <AmiBlitz3.ab3@19605>   CMP.l #$ce00,d1
00030288 <AmiBlitz3.ab3@19606>   BNE 'ln4
0003028E <AmiBlitz3.ab3@19607>   LEA strcmp,a0
00030292 <AmiBlitz3.ab3@19608> BRA 'ln3
00030298 <AmiBlitz3.ab3@19611>   CMP.l #$ca00,d1
0003029C <AmiBlitz3.ab3@19612>   BNE 'ln5
000302A2 <AmiBlitz3.ab3@19613>   LEA qmul,a0
000302A6 <AmiBlitz3.ab3@19614> BRA 'ln3
000302AC <AmiBlitz3.ab3@19617>   CMP.l #$d000,d1
000302B0 <AmiBlitz3.ab3@19618>      BNE 'ln6
000302B6 <AmiBlitz3.ab3@19619>      LEA _MaxLen,a0
000302BA <AmiBlitz3.ab3@19620> BRA 'ln3
000302C0 <AmiBlitz3.ab3@19623>   CMP.l #$cb00,d1
000302C4 <AmiBlitz3.ab3@19624>   BNE 'ln3
000302CA <AmiBlitz3.ab3@19625>   LEA qdiv,a0
000302CE <AmiBlitz3.ab3@19626> BRA 'ln3
000302D0 <AmiBlitz3.ab3@19629>   MOVE.l d1,a0
000302D4 <AmiBlitz3.ab3@19630>   LEA $8(a0),a0
000302D8 <AmiBlitz3.ab3@19633>   CMP.w #$ffff,(a0)+
000302DC <AmiBlitz3.ab3@19634>   BNE 'l1
000302E0 <AmiBlitz3.ab3@19635>   LEA 6(a0),a0
000302E4 <AmiBlitz3.ab3@19638>   MOVEM.l a1/a2/d7/d2,-(a7)
000302E6 <AmiBlitz3.ab3@19639>   MOVEQ #0,d2
000302EC <AmiBlitz3.ab3@19640>   LEA ptr_parameterstore,a1
000302EE <AmiBlitz3.ab3@19643>   ADDQ.l #1,d2
000302F0 <AmiBlitz3.ab3@19644>   MOVE.b (a0)+,d0
000302F4 <AmiBlitz3.ab3@19645> 
000302F8 <AmiBlitz3.ab3@19646>   BNE 'nodollar
000302FC <AmiBlitz3.ab3@19647>   MOVE.b #"S",d0
00030300 <AmiBlitz3.ab3@19649>   CMP.b #"?",d0
00030304 <AmiBlitz3.ab3@19650>   BEQ 'nolabelwrite
00030306 <AmiBlitz3.ab3@19651>   MOVE.b d0,(a1)+
0003030A <AmiBlitz3.ab3@19652>   BNE 'l2
00030310 <AmiBlitz3.ab3@19653>   MOVE.w #"__",-1(a1)
00030312 <AmiBlitz3.ab3@19654>   ADDQ.l #2,d2
00030316 <AmiBlitz3.ab3@19655>   CLR.b 1(a1)
0003031C <AmiBlitz3.ab3@19656>   JSR findlabel2
00030320 <AmiBlitz3.ab3@19657>   BEQ 'l3
00030326 <AmiBlitz3.ab3@19658>   JSR addlabelhash
0003032A <AmiBlitz3.ab3@19661>   CLR.l 4(a2)
0003032E <AmiBlitz3.ab3@19662>   MOVE.l $14(a7),a0
00030332 <AmiBlitz3.ab3@19663>   MOVE.l $10(a7),d1
00030336 <AmiBlitz3.ab3@19664>   SUB.l $12(a0),d1
0003033A <AmiBlitz3.ab3@19665>   ADD.l $28(a0),d1
0003033E <AmiBlitz3.ab3@19666>   MOVE.l d1,8(a2)
00030342 <AmiBlitz3.ab3@19667> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
00030348 <AmiBlitz3.ab3@19670>   TST.b typecheck
0003034C <AmiBlitz3.ab3@19671>   BEQ 'p1
00030352 <AmiBlitz3.ab3@19672>   MOVE.l lasttoken,d1
00030358 <AmiBlitz3.ab3@19673>   CMP.l #$da01,d1                                          ;poke
0003035C <AmiBlitz3.ab3@19674>   BEQ 'lp1
00030362 <AmiBlitz3.ab3@19675>   CMP.l #$da02,d1                                          ;peek
00030366 <AmiBlitz3.ab3@19676>   BNE 'p1
0003036C <AmiBlitz3.ab3@19679>   TST.b peekaddrsize
00030370 <AmiBlitz3.ab3@19680>   BEQ 'p1
00030378 <AmiBlitz3.ab3@19681>   CMP.b #3,peekaddrsize
0003037C <AmiBlitz3.ab3@19682>   BNE errormsg_onlylong
00030382 <AmiBlitz3.ab3@19683>   CLR.b peekaddrsize
00030388 <AmiBlitz3.ab3@19691>    TST.b fpu
0003038C <AmiBlitz3.ab3@19692>   BNE 'optf
00030392 <AmiBlitz3.ab3@19693>   TST.b fast
00030396 <AmiBlitz3.ab3@19694>   BEQ JL11a2
0003039E <AmiBlitz3.ab3@19701>   CMP.l #"Poke",20(a2)                                     ;poke
000303A2 <AmiBlitz3.ab3@19702>   BNE peekopt
000303A6 <AmiBlitz3.ab3@19703>   TST.b 24(a2)
000303AA <AmiBlitz3.ab3@19704>   BNE peekopt
000303AE <AmiBlitz3.ab3@19705>   CMP.b #3,d2
000303B2 <AmiBlitz3.ab3@19706>   BNE 'lw1
000303B8 <AmiBlitz3.ab3@19709>   MOVE.l #$21821990,d1
000303BC <AmiBlitz3.ab3@19710> BRA.s 'lpx
000303C0 <AmiBlitz3.ab3@19713>   CMP.b #2,d2
000303C4 <AmiBlitz3.ab3@19714>   BNE 'lb1
000303CA <AmiBlitz3.ab3@19715>   MOVE.l #$31821990,d1
000303CE <AmiBlitz3.ab3@19716> BRA.s 'lpx
000303D2 <AmiBlitz3.ab3@19719>   CMP.b #1,d2
000303D6 <AmiBlitz3.ab3@19720>   BNE 'lp3
000303DC <AmiBlitz3.ab3@19721>   MOVE.l #$11821990,d1
000303E0 <AmiBlitz3.ab3@19722> BRA.s 'lpx
000303E4 <AmiBlitz3.ab3@19725>   CMP.b #5,d2
000303E8 <AmiBlitz3.ab3@19726>     BNE JL11a2
000303EE <AmiBlitz3.ab3@19727>     TST.b fpu
000303F2 <AmiBlitz3.ab3@19728>     BEQ 'll1
000303F8 <AmiBlitz3.ab3@19729>      MOVE.l destpointer,a4
00030400 <AmiBlitz3.ab3@19730>     CMP.l #$f22d4500,-6(a4)
00030404 <AmiBlitz3.ab3@19731>     BNE 'noglob
0003040A <AmiBlitz3.ab3@19732>     TST.b doublepeek
0003040E <AmiBlitz3.ab3@19733>     BNE 'noglob
00030414 <AmiBlitz3.ab3@19734>     MOVE.w -2(a4),-4(a4)
0003041A <AmiBlitz3.ab3@19735>     MOVE.w #$21ad,-6(a4)
00030420 <AmiBlitz3.ab3@19736>     MOVE.w #$1990,-2(a4)
00030428 <AmiBlitz3.ab3@19737>     MOVE.w #9,peeksize
0003042A <AmiBlitz3.ab3@19738>     ADDQ #8,a7
0003042C <AmiBlitz3.ab3@19739> RTS
00030434 <AmiBlitz3.ab3@19742>     CMP.l #$f22c4500,-6(a4)
00030438 <AmiBlitz3.ab3@19743>     BNE 'nolocal
0003043E <AmiBlitz3.ab3@19744>     MOVE.w -2(a4),-4(a4)
00030444 <AmiBlitz3.ab3@19745>     TST.b doublepeek                                       ;dont move longfix on double floats
00030448 <AmiBlitz3.ab3@19746>     BNE 'nolocal
0003044E <AmiBlitz3.ab3@19747>     MOVE.w #$21ac,-6(a4)
00030454 <AmiBlitz3.ab3@19748>     MOVE.w #$1990,-2(a4)
0003045C <AmiBlitz3.ab3@19749>     MOVE.w #9,peeksize
0003045E <AmiBlitz3.ab3@19750>     ADDQ #8,a7
00030460 <AmiBlitz3.ab3@19751> RTS
00030464 <AmiBlitz3.ab3@19754>     MOVE.w #$f230,d1
00030468 <AmiBlitz3.ab3@19755>     BSR writeword
0003046E <AmiBlitz3.ab3@19756>   MOVE.l #$65001990,d1
00030474 <AmiBlitz3.ab3@19757>   TST.b doublepeek
00030478 <AmiBlitz3.ab3@19758>   BEQ 'lpx
0003047E <AmiBlitz3.ab3@19759>   OR.l   #$10000000,d1
00030480 <AmiBlitz3.ab3@19763>   ADDQ #8,a7
00030488 <AmiBlitz3.ab3@19764>   MOVE.w #9,peeksize
0003048C <AmiBlitz3.ab3@19765> BRA writelong
00030494 <AmiBlitz3.ab3@19768>   CMP.l #"Peek",20(a2)
00030498 <AmiBlitz3.ab3@19769>   BNE 'l10
0003049C <AmiBlitz3.ab3@19770>   TST.b 24(a2)
000304A0 <AmiBlitz3.ab3@19771>   BNE 'l10
000304A8 <AmiBlitz3.ab3@19772>   CMP.w #7,peeksize
000304AC <AmiBlitz3.ab3@19773>   BEQ 'l10
000304B4 <AmiBlitz3.ab3@19774>    CMP.w #3,peeksize
000304B8 <AmiBlitz3.ab3@19775>    BNE.s 'lw1
000304BE <AmiBlitz3.ab3@19778>   MOVE.l #$20301990,d1
000304C2 <AmiBlitz3.ab3@19779> BRA exitjsr
000304CA <AmiBlitz3.ab3@19782>   CMP.w #2,peeksize
000304CE <AmiBlitz3.ab3@19783>    BNE.s 'lb1
000304D4 <AmiBlitz3.ab3@19784>    MOVE.l #$30301990,d1
000304D8 <AmiBlitz3.ab3@19785> BRA exitjsr
000304E0 <AmiBlitz3.ab3@19788>   CMP.w #1,peeksize
000304E4 <AmiBlitz3.ab3@19789>    BNE.s 'lf1
000304EA <AmiBlitz3.ab3@19790>    MOVE.l #$10301990,d1
000304EE <AmiBlitz3.ab3@19791> BRA exitjsr
000304F6 <AmiBlitz3.ab3@19794>   CMP.w #5,peeksize
000304FA <AmiBlitz3.ab3@19795>    BNE 'l10
00030500 <AmiBlitz3.ab3@19796>    TST.b fpu
00030504 <AmiBlitz3.ab3@19797>    BEQ 'll1
00030508 <AmiBlitz3.ab3@19798>    MOVE.w #$f230,d1
0003050C <AmiBlitz3.ab3@19799>    BSR writeword
0003050E <AmiBlitz3.ab3@19800>    MOVEQ #0,d1
00030514 <AmiBlitz3.ab3@19801>    MOVE.w tempregnum,d1
00030516 <AmiBlitz3.ab3@19802>    ASL.l #7,d1
00030518 <AmiBlitz3.ab3@19803>    ASL.l #8,d1
0003051A <AmiBlitz3.ab3@19804>    ASL.l #8,d1
00030520 <AmiBlitz3.ab3@19805>    ADD.l #$44001990,d1
00030526 <AmiBlitz3.ab3@19806>     TST.b doublepeek
0003052A <AmiBlitz3.ab3@19807>     BEQ 'lpx2
00030530 <AmiBlitz3.ab3@19808>     OR.l   #$10000000,d1
00030534 <AmiBlitz3.ab3@19810> BRA exitjsr
00030538 <AmiBlitz3.ab3@19814>   MOVE.w #$4EB9,D1
0003053C <AmiBlitz3.ab3@19815>    BSR.w writeword                                         ;writesysjsr
00030540 <AmiBlitz3.ab3@19816>   MOVEM.l (A7)+,a0/D1
00030546 <AmiBlitz3.ab3@19817>    JSR addoff
0003054A <AmiBlitz3.ab3@19818>   SUB.l $12(A0),D1
0003054E <AmiBlitz3.ab3@19819>   ADD.l $28(A0),D1
00030552 <AmiBlitz3.ab3@19820> BRA.w writelong
00030554 <AmiBlitz3.ab3@19825>   MOVE.w D1,-(A7)
00030558 <AmiBlitz3.ab3@19826>   MOVE.w tstmode(PC),D1
0003055C <AmiBlitz3.ab3@19827>    BSR.w writeword
00030560 <AmiBlitz3.ab3@19828>    BSR.w getbbase
00030564 <AmiBlitz3.ab3@19829>    BSR.w writeword
00030566 <AmiBlitz3.ab3@19830>   MOVE.w (A7)+,D1
0003056A <AmiBlitz3.ab3@19831>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003056E <AmiBlitz3.ab3@19832>    BSR.w Atokejsr
00030572 <AmiBlitz3.ab3@19833>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030574 <AmiBlitz3.ab3@19834> RTS
00030578 <AmiBlitz3.ab3@19842>   MOVE.w blitzoff(PC),D1
0003057C <AmiBlitz3.ab3@19843>   CMP.w #-$1,D1
00030580 <AmiBlitz3.ab3@19844>    BNE.w getbbase__done
00030586 <AmiBlitz3.ab3@19845>   ADDQ.w #1,globalvarpointer
0003058E <AmiBlitz3.ab3@19846>   BCLR #$0,globalvarpointer+1
00030594 <AmiBlitz3.ab3@19847>   MOVE.w globalvarpointer,D1
0003059A <AmiBlitz3.ab3@19848>   MOVE.w D1,blitzoff
000305A0 <AmiBlitz3.ab3@19849>   ADDQ.w #2,globalvarpointer
000305A2 <AmiBlitz3.ab3@19852> RTS
000305A6 <AmiBlitz3.ab3@19856> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
000305A8 <AmiBlitz3.ab3@19859> inline:     Ds.w 1
000305AA <AmiBlitz3.ab3@19860> blitzoff:   Dc.w $FFFF                                   ;-1 org source
000305AC <AmiBlitz3.ab3@19861> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
000305AE <AmiBlitz3.ab3@19865>   MOVE.w (A2)+,D1
000305B2 <AmiBlitz3.ab3@19866>    BEQ.w fetchregs__done
000305B4 <AmiBlitz3.ab3@19867>   MOVE.w (A2)+,D2
000305B8 <AmiBlitz3.ab3@19868>    BSR.w toreg
000305BC <AmiBlitz3.ab3@19869> BRA.w fetchregs
000305BE <AmiBlitz3.ab3@19872> RTS
000305C2 <AmiBlitz3.ab3@19877>   CMP.w #-$100,D2
000305C6 <AmiBlitz3.ab3@19878>    BCC.w toreg__yeah
000305CA <AmiBlitz3.ab3@19880>   BCLR #$F,D2
000305CE <AmiBlitz3.ab3@19881>    BEQ.w toreg__nobm
000305D4 <AmiBlitz3.ab3@19883>   TST.w blitzmode
000305D8 <AmiBlitz3.ab3@19884>    BMI.w toreg__yeah
000305DA <AmiBlitz3.ab3@19885> RTS
000305DE <AmiBlitz3.ab3@19888>   BCLR #$E,D2
000305E2 <AmiBlitz3.ab3@19889>    BEQ.w toreg__yeah
000305E8 <AmiBlitz3.ab3@19891>   TST.w blitzmode
000305EC <AmiBlitz3.ab3@19892>    BPL.w toreg__yeah
000305EE <AmiBlitz3.ab3@19893> RTS
000305F4 <AmiBlitz3.ab3@19896>   JSR uselib
000305F6 <AmiBlitz3.ab3@19897>   TST.b D2
000305FA <AmiBlitz3.ab3@19898>    BEQ.w toreg__norm
000305FE <AmiBlitz3.ab3@19899>   CMP.b #$4,D2
00030602 <AmiBlitz3.ab3@19900>    BNE.w toreg__suv
00030606 <AmiBlitz3.ab3@19901>   MOVE.w #$0004,-(A7)
0003060C <AmiBlitz3.ab3@19902>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030610 <AmiBlitz3.ab3@19903> BRA.w toreg__sendmd
00030614 <AmiBlitz3.ab3@19906>   CMP.b #$3,D2
00030618 <AmiBlitz3.ab3@19907>    BNE.w toreg__notnmax
0003061A <AmiBlitz3.ab3@19908>   CLR.w -(A7)
00030620 <AmiBlitz3.ab3@19909>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030622 <AmiBlitz3.ab3@19915>   LSR.w #8,D2
00030626 <AmiBlitz3.ab3@19916>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0003062A <AmiBlitz3.ab3@19917>   BTST #$7,D2
0003062E <AmiBlitz3.ab3@19918>    BEQ.w toreg__skipad
00030632 <AmiBlitz3.ab3@19919>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030636 <AmiBlitz3.ab3@19920>   CMP.w #$16,D2
0003063A <AmiBlitz3.ab3@19921>    BNE.w toreg__skipad
00030642 <AmiBlitz3.ab3@19922>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030646 <AmiBlitz3.ab3@19925>   ANDI.w #$7,D2
00030648 <AmiBlitz3.ab3@19926>   LSL.w #8,D2
0003064A <AmiBlitz3.ab3@19927>   LSL.w #1,D2
0003064C <AmiBlitz3.ab3@19928>   OR.w D2,D1
00030650 <AmiBlitz3.ab3@19929>    BSR.w writeword
00030654 <AmiBlitz3.ab3@19930>   MOVE.l $12(A1),D1
00030656 <AmiBlitz3.ab3@19931>   ADD.l (A7)+,D1
0003065A <AmiBlitz3.ab3@19932>   MOVE.w $0(A1,D1.L),D1
0003065C <AmiBlitz3.ab3@19933>   ADD.w (A7)+,D1
00030660 <AmiBlitz3.ab3@19934> BRA.w writeword
00030662 <AmiBlitz3.ab3@19937>   MOVE.w D2,-(A7)
00030664 <AmiBlitz3.ab3@19938>   LSR.w #8,D2
00030668 <AmiBlitz3.ab3@19939>   CMP.w #$16,D2
0003066C <AmiBlitz3.ab3@19940>    BNE.w toreg__isnta6
00030674 <AmiBlitz3.ab3@19941>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030678 <AmiBlitz3.ab3@19944>   MOVE.l $12(A1),D1                                        ;objectspace
0003067C <AmiBlitz3.ab3@19945>   MOVE.w -$6(A1,D1.L),-(A7)
00030680 <AmiBlitz3.ab3@19946>    BSR.w makeregop
00030684 <AmiBlitz3.ab3@19947>    BSR.w writeword
00030686 <AmiBlitz3.ab3@19948>   MOVE.w (A7)+,D1
00030688 <AmiBlitz3.ab3@19949>   MOVE.w (A7)+,D2
0003068A <AmiBlitz3.ab3@19950>   TST.b D2
0003068E <AmiBlitz3.ab3@19951>    BPL.w toreg__skippy1
00030692 <AmiBlitz3.ab3@19956>    BSR.w writeword                                         ;move.l x(a5),dn
00030694 <AmiBlitz3.ab3@19957>   MOVE.w D2,-(A7)                                          ;store reg used
00030698 <AmiBlitz3.ab3@19959>   ADDA.l $12(A1),A1
0003069A <AmiBlitz3.ab3@19960>   MOVE.b D2,D1
0003069E <AmiBlitz3.ab3@19961>   ANDI.w #$7,D1
000306A4 <AmiBlitz3.ab3@19963>   TST.b debugmode
000306A8 <AmiBlitz3.ab3@19964>    BEQ.w toreg__norerr
000306AA <AmiBlitz3.ab3@19966>   MOVE.w D1,-(A7)
000306AC <AmiBlitz3.ab3@19967>   LSL.w #8,D1
000306AE <AmiBlitz3.ab3@19968>   LSL.w #1,D1
000306B2 <AmiBlitz3.ab3@19969>   ORI.w #$B07C,D1                                          ;cmp #x,dn
000306B6 <AmiBlitz3.ab3@19970>    BSR.w writeword
000306BA <AmiBlitz3.ab3@19971>   MOVE.w -$4(A1),D1
000306BE <AmiBlitz3.ab3@19972>    BSR.w writeword
000306C2 <AmiBlitz3.ab3@19973>   MOVE.l maxchk(PC),D1                                  ;bcs
000306C6 <AmiBlitz3.ab3@19974>    BSR.w writelong
000306C8 <AmiBlitz3.ab3@19975>   MOVE.l A2,-(A7)
000306CC <AmiBlitz3.ab3@19976>   MOVE.w #$C30A,D1
000306D0 <AmiBlitz3.ab3@19977>    BSR.w Atokejsr
000306D2 <AmiBlitz3.ab3@19978>   MOVEA.l (A7)+,A2
000306D4 <AmiBlitz3.ab3@19979>   MOVE.w (A7)+,D1
000306D8 <AmiBlitz3.ab3@19982>   MOVE.w -$2(A1),D2                                        ;shift amount
000306DC <AmiBlitz3.ab3@19985>   CMP.w #$9,D2
000306E0 <AmiBlitz3.ab3@19986>    BCS.w toreg__simp
000306E4 <AmiBlitz3.ab3@19987>   MOVEM.w D1-D2,-(A7)
000306E6 <AmiBlitz3.ab3@19989>   MOVEQ.l #$00,D2                                          ;!!!!!
000306E8 <AmiBlitz3.ab3@19991>   LSL.w #8,D2
000306EA <AmiBlitz3.ab3@19992>   LSL.w #1,D2
000306EC <AmiBlitz3.ab3@19993>   OR.w D2,D1
000306F0 <AmiBlitz3.ab3@19994>   OR.w lsldn(PC),D1
000306F4 <AmiBlitz3.ab3@19995>    BSR.w writeword
000306F8 <AmiBlitz3.ab3@19996>   MOVEM.w (A7)+,D1-D2
000306FA <AmiBlitz3.ab3@19997>   SUBQ.w #8,D2
000306FE <AmiBlitz3.ab3@19998> BRA.w toreg__shloop
00030700 <AmiBlitz3.ab3@20001>   MOVE.w D1,-(A7)
00030704 <AmiBlitz3.ab3@20002>   OR.w #$48c0,d1
00030708 <AmiBlitz3.ab3@20003>   BSR writeword
0003070A <AmiBlitz3.ab3@20004>   MOVE.w (a7),d1
0003070C <AmiBlitz3.ab3@20005>   TST.w D2
00030710 <AmiBlitz3.ab3@20006>   BEQ.w toreg__simp2
00030714 <AmiBlitz3.ab3@20008>   ANDI.w #$7,D2                                            ;?????
00030716 <AmiBlitz3.ab3@20010>   LSL.w #8,D2
00030718 <AmiBlitz3.ab3@20011>   LSL.w #1,D2
0003071A <AmiBlitz3.ab3@20012>   OR.w D2,D1
0003071E <AmiBlitz3.ab3@20013>   OR.w lsldn(PC),D1
00030722 <AmiBlitz3.ab3@20014>    BSR.w writeword
00030724 <AmiBlitz3.ab3@20020>   MOVE.w (A7)+,D1
00030728 <AmiBlitz3.ab3@20021>   ANDI.w #$7,D1
0003072C <AmiBlitz3.ab3@20022>   OR.w maxdo(PC),D1
0003072E <AmiBlitz3.ab3@20023>   MOVE.w (A7)+,D2
00030730 <AmiBlitz3.ab3@20024>   LSL.w #1,D2
00030734 <AmiBlitz3.ab3@20025>   ANDI.w #$E00,D2
00030736 <AmiBlitz3.ab3@20026>   OR.w D2,D1
0003073A <AmiBlitz3.ab3@20027> BRA.w writeword
0003073E <AmiBlitz3.ab3@20030>   CMP.b #$1,D2
00030742 <AmiBlitz3.ab3@20031>    BEQ.w toreg__skippy
00030744 <AmiBlitz3.ab3@20035>   ADDQ.w #4,D1
0003074A <AmiBlitz3.ab3@20037>   TST.b debugmode
0003074E <AmiBlitz3.ab3@20038>    BEQ.w toreg__skippy
00030752 <AmiBlitz3.ab3@20040>    BSR.w writeword
00030754 <AmiBlitz3.ab3@20041>   SWAP D1
00030758 <AmiBlitz3.ab3@20042>   MOVE.w toreg__theretest(PC),D1
0003075A <AmiBlitz3.ab3@20043>   SWAP D1
0003075E <AmiBlitz3.ab3@20044>    BSR.w writelong
00030762 <AmiBlitz3.ab3@20045>   MOVE.l toreg__theretest+4(PC),D1
00030766 <AmiBlitz3.ab3@20046>    BSR.w writelong
0003076A <AmiBlitz3.ab3@20047>   MOVE.l toreg__theretest+8(PC),D1
0003076E <AmiBlitz3.ab3@20048> BRA.w writelong
00030772 <AmiBlitz3.ab3@20051> BRA.w writeword
00030776 <AmiBlitz3.ab3@20056>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0003077A <AmiBlitz3.ab3@20057>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003077C <AmiBlitz3.ab3@20058>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0003077E <AmiBlitz3.ab3@20059>             Dc.b $4E,$40                                   ;TRAP   #00
00030780 <AmiBlitz3.ab3@20064>   LSR.w #8,D2
00030784 <AmiBlitz3.ab3@20065>   CMP.b #$16,D2
00030788 <AmiBlitz3.ab3@20066>    BNE.w toreg__nota6
0003078C <AmiBlitz3.ab3@20067>   MOVE.w $A(A1),D1
00030792 <AmiBlitz3.ab3@20068>   CMP.w lasta6,D1
00030796 <AmiBlitz3.ab3@20069>    BEQ.w toreg__sk
0003079C <AmiBlitz3.ab3@20070>   MOVE.w D1,lasta6
000307A0 <AmiBlitz3.ab3@20073>    BSR.w makeregop
000307A4 <AmiBlitz3.ab3@20074>   TST.w $1A(A1)
000307A8 <AmiBlitz3.ab3@20075>    BPL.w toreg__long
000307AC <AmiBlitz3.ab3@20076>   CMP.w stackop(PC),D1
000307B0 <AmiBlitz3.ab3@20077>    BNE.w toreg__notst
000307B6 <AmiBlitz3.ab3@20078>   SUBQ.w #2,a2offset
000307BA <AmiBlitz3.ab3@20081>    ORI.w #$1000,D1
000307BE <AmiBlitz3.ab3@20084>    BSR.w writeword
000307C2 <AmiBlitz3.ab3@20085>   MOVE.w $A(A1),D1
000307C6 <AmiBlitz3.ab3@20086>    BSR.w writeword
000307C8 <AmiBlitz3.ab3@20089> RTS
000307CA <AmiBlitz3.ab3@20093> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
000307CE <AmiBlitz3.ab3@20094> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
000307D4 <AmiBlitz3.ab3@20095>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
000307D6 <AmiBlitz3.ab3@20098> 
000307D8 <AmiBlitz3.ab3@20101>             Dc.b $00,$00
000307DC <AmiBlitz3.ab3@20102> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
000307E0 <AmiBlitz3.ab3@20109>   CMP.b #$FF,D2
000307E4 <AmiBlitz3.ab3@20110>    BNE.w makeregop__notst
000307E8 <AmiBlitz3.ab3@20111>   MOVE.w stackop(PC),D1
000307EE <AmiBlitz3.ab3@20112>   ADDQ.w #4,a2offset
000307F0 <AmiBlitz3.ab3@20113> RTS
000307F2 <AmiBlitz3.ab3@20116>   MOVE.l A3,-(A7)
000307F8 <AmiBlitz3.ab3@20117>   LEA regtransd,A3
000307FC <AmiBlitz3.ab3@20118>   BTST #$4,D2
00030800 <AmiBlitz3.ab3@20119>    BEQ.w makeregop__skip
00030806 <AmiBlitz3.ab3@20120>   LEA regtransa,A3
0003080A <AmiBlitz3.ab3@20123>   ANDI.w #$7,D2
0003080C <AmiBlitz3.ab3@20124>   MOVE.w D2,D1
0003080E <AmiBlitz3.ab3@20125>   LSL.w #8,D1
00030810 <AmiBlitz3.ab3@20126>   LSL.w #1,D1
00030812 <AmiBlitz3.ab3@20127>   OR.w (A3),D1
00030814 <AmiBlitz3.ab3@20128>   MOVEA.l (A7)+,A3
00030816 <AmiBlitz3.ab3@20129> RTS
0003081A <AmiBlitz3.ab3@20135>   CMP.w #$3C,D0
0003081E <AmiBlitz3.ab3@20136>    BCS.w ifchar__no
00030822 <AmiBlitz3.ab3@20137>   CMP.w #$3E,D0
00030826 <AmiBlitz3.ab3@20138>    BHI.w ifchar__no
0003082A <AmiBlitz3.ab3@20139>   SUBI.w #$3C,D0
0003082C <AmiBlitz3.ab3@20140>   CMP.w D0,D0
0003082E <AmiBlitz3.ab3@20143> RTS
00030838 <AmiBlitz3.ab3@20148>   MOVE.w oldqflag,instringon
0003083E <AmiBlitz3.ab3@20149>   MOVEA.l lastsourcepos,A5
00030844 <AmiBlitz3.ab3@20154>   MOVE.w regnum,-(A7)
0003084A <AmiBlitz3.ab3@20155>   CLR.w regnum
00030850 <AmiBlitz3.ab3@20156>   MOVE.l destpointer,-(A7)
00030856 <AmiBlitz3.ab3@20157>   MOVE.l destbufferend,-(A7)
0003085C <AmiBlitz3.ab3@20158>   MOVE.w dontwrite,-(A7)
00030862 <AmiBlitz3.ab3@20159>   MOVE.w lasta6,-(A7)
00030868 <AmiBlitz3.ab3@20160>   MOVE.w cfetchmode,-(A7)
0003086C <AmiBlitz3.ab3@20161>    BNE.w JL_0_BFB6
00030876 <AmiBlitz3.ab3@20162>   MOVE.l destbufferend,oldlibat
0003087C <AmiBlitz3.ab3@20163>   MOVEA.l constpcat,A0
00030882 <AmiBlitz3.ab3@20164>   MOVE.l A0,destpointer
00030886 <AmiBlitz3.ab3@20165> BRA.w JL_0_BFBC
0003088C <AmiBlitz3.ab3@20168>   MOVEA.l destpointer,A0
0003088E <AmiBlitz3.ab3@20171>   MOVE.l A0,-(A7)
00030898 <AmiBlitz3.ab3@20172>   MOVE.l constlibat,destbufferend
0003089E <AmiBlitz3.ab3@20173>   CLR.w dontwrite
000308A6 <AmiBlitz3.ab3@20175>   MOVE.w #$FFFF,lasta6
000308AE <AmiBlitz3.ab3@20176>   MOVE.w #$FFFF,cfetchmode
000308B2 <AmiBlitz3.ab3@20178>     BSR.w arreval
000308B4 <AmiBlitz3.ab3@20179>    MOVE.l (a7),a0
000309F0 <AmiBlitz3.ab3@20181>  !newcalc
000309F4 <AmiBlitz3.ab3@20182>    BEQ 'l10
000309F6 <AmiBlitz3.ab3@20183>    MOVE.l d0,d3
000309F8 <AmiBlitz3.ab3@20184>    MOVEA.l (A7)+,A0
000309FC <AmiBlitz3.ab3@20185> BRA bc1
00030A00 <AmiBlitz3.ab3@20188>    MOVE.w #$2600,D1
00030A06 <AmiBlitz3.ab3@20189>   OR.w regnum,D1
00030A0A <AmiBlitz3.ab3@20190>    BSR.w writeword
00030A0E <AmiBlitz3.ab3@20191>   MOVE.w #$4E75,D1
00030A12 <AmiBlitz3.ab3@20192>    BSR.w writeword
00030A18 <AmiBlitz3.ab3@20193>   MOVE.w dontwrite,D1
00030A1C <AmiBlitz3.ab3@20194>    BNE.w conmemerr
00030A1E <AmiBlitz3.ab3@20195>   MOVEA.l (A7)+,A0
00030A20 <AmiBlitz3.ab3@20196>   NOP
00030A26 <AmiBlitz3.ab3@20197>    JSR Aclearcache                                         ;simple expression
00030A28 <AmiBlitz3.ab3@20200>    JSR (A0)                                                ;writeresult
00030A2E <AmiBlitz3.ab3@20203>   MOVE.w (A7)+,cfetchmode
00030A34 <AmiBlitz3.ab3@20204>   MOVE.w (A7)+,lasta6
00030A3A <AmiBlitz3.ab3@20205>   MOVE.w (A7)+,dontwrite
00030A40 <AmiBlitz3.ab3@20206>   MOVE.l (A7)+,destbufferend
00030A46 <AmiBlitz3.ab3@20207>   MOVE.l (A7)+,destpointer
00030A4C <AmiBlitz3.ab3@20208>   MOVE.w (A7)+,regnum
00030A52 <AmiBlitz3.ab3@20211> JMP reget
00030A56 <AmiBlitz3.ab3@20214> oldlibat:   Ds.l 1
00030A5C <AmiBlitz3.ab3@20218>   LEA incdir,A0
00030A60 <AmiBlitz3.ab3@20221>   CMP.w #$22,D0
00030A64 <AmiBlitz3.ab3@20222>    BEQ.w JL_0_C052
00030A66 <AmiBlitz3.ab3@20223>   MOVE.b D0,(A0)+
00030A68 <AmiBlitz3.ab3@20224>   TST.w D0
00030A6C <AmiBlitz3.ab3@20225>    BEQ.w JL_0_C05A
00030A70 <AmiBlitz3.ab3@20226>    BMI.w syntaxerr
00030A76 <AmiBlitz3.ab3@20229>   JSR get1bytemain                                         ;_long
00030A7A <AmiBlitz3.ab3@20230> BRA.w JL_0_C03E
00030A7C <AmiBlitz3.ab3@20233> RTS
00030A82 <AmiBlitz3.ab3@20237>   LEA ptr_parameterstore,A1                                ;getparameter
00030A88 <AmiBlitz3.ab3@20238>   LEA incdir,A0
00030A8A <AmiBlitz3.ab3@20239>   MOVEQ.l #-$01,D2
00030A8C <AmiBlitz3.ab3@20242>     ADDQ.w #1,D2
00030A8E <AmiBlitz3.ab3@20243>     MOVE.b (A0)+,(A1)+
00030A92 <AmiBlitz3.ab3@20244>   BNE.w JL_0_C06A
00030A94 <AmiBlitz3.ab3@20245>   SUBQ.w #1,A1
00030A9E <AmiBlitz3.ab3@20247>   MOVE.w oldqflag,instringon
00030AA4 <AmiBlitz3.ab3@20248>   MOVEA.l lastsourcepos,A5
00030AAA <AmiBlitz3.ab3@20252>   JSR get1bytemain
00030AAC <AmiBlitz3.ab3@20253>   TST.w D0
00030AB0 <AmiBlitz3.ab3@20254>    BMI.w syntaxerr
00030AB4 <AmiBlitz3.ab3@20255>   CMP.b #$22,D0
00030AB8 <AmiBlitz3.ab3@20256>    BEQ.w JL_0_C078
00030ABA <AmiBlitz3.ab3@20257>   MOVE.b D0,(A1)+
00030ABE <AmiBlitz3.ab3@20258>    BEQ.w JL_0_C096
00030AC0 <AmiBlitz3.ab3@20259>   ADDQ.w #1,D2
00030AC4 <AmiBlitz3.ab3@20260> BRA.w JL_0_C078
00030AC6 <AmiBlitz3.ab3@20263>   TST.w D2
00030ACA <AmiBlitz3.ab3@20264>    BEQ.w syntaxerr
00030ACC <AmiBlitz3.ab3@20265> RTS
00030AD2 <AmiBlitz3.ab3@20269>   MOVEA.l constantbase,A2
00030AD6 <AmiBlitz3.ab3@20270>   MOVEA.l $E(A2),A5
00030ADC <AmiBlitz3.ab3@20271>   MOVE.l a5,includesourceline
00030AE2 <AmiBlitz3.ab3@20272>   LEA inctab,a0
00030AE8 <AmiBlitz3.ab3@20273>   MOVE.w ininclude,d0
00030AEC <AmiBlitz3.ab3@20274>   MOVE.l $0(a0,d0*4),d0
00030AF0 <AmiBlitz3.ab3@20275>   MOVEA.l $4(A2),A0
00030AF4 <AmiBlitz3.ab3@20277>   LEA $0(A0,D0.l),A0
00030AF6 <AmiBlitz3.ab3@20278>   MOVEA.l A5,A1
00030AF8 <AmiBlitz3.ab3@20281>     CMPA.l A0,A1
00030AFC <AmiBlitz3.ab3@20282>      BCC.w JL_0_C0C6
00030AFE <AmiBlitz3.ab3@20283>   TST.b (A1)+
00030B02 <AmiBlitz3.ab3@20284>   BNE.w JL_0_C0B6
00030B06 <AmiBlitz3.ab3@20285> BRA.w JL_0_C112
00030B0A <AmiBlitz3.ab3@20288>   MOVEA.l $4(A2),A1
00030B0C <AmiBlitz3.ab3@20291>   CMPA.l A0,A5
00030B10 <AmiBlitz3.ab3@20292>   BCC.w JL_0_C0D6
00030B12 <AmiBlitz3.ab3@20293>   MOVE.b (A5)+,(A1)+
00030B16 <AmiBlitz3.ab3@20294> BRA.w JL_0_C0CA
00030B18 <AmiBlitz3.ab3@20297>   MOVE.l A1,D0
00030B1C <AmiBlitz3.ab3@20298>   SUB.l $4(A2),D0
00030B22 <AmiBlitz3.ab3@20299>   LEA inctab,a0
00030B24 <AmiBlitz3.ab3@20300>   MOVEQ #0,d1
00030B2A <AmiBlitz3.ab3@20301>   MOVE.w ininclude,d1
00030B2E <AmiBlitz3.ab3@20302>   MOVE.l d0,0(a0,d1*4)
00030B34 <AmiBlitz3.ab3@20304>   MOVEA.l _dosbase,A6
00030B38 <AmiBlitz3.ab3@20305>   MOVE.l $8(A2),D1
00030B3A <AmiBlitz3.ab3@20306>   MOVE.l A1,D2
00030B40 <AmiBlitz3.ab3@20307>   MOVE.l D2,include_base
00030B46 <AmiBlitz3.ab3@20309>   MOVE.l #$10000000,d3                                     ;load whole file
00030B48 <AmiBlitz3.ab3@20310>   SUB.l D0,D3
00030B4C <AmiBlitz3.ab3@20311>    JSR _Read(A6)
00030B4E <AmiBlitz3.ab3@20312>   TST.l D0
00030B52 <AmiBlitz3.ab3@20313>    BMI.w error_reading_file
00030B56 <AmiBlitz3.ab3@20314>    BEQ.w JL_0_C120
00030B5C <AmiBlitz3.ab3@20315>    MOVE.l D0,include_length
00030B9E <AmiBlitz3.ab3@20316>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030BC8 <AmiBlitz3.ab3@20317>    !basic
00030BD8 <AmiBlitz3.ab3@20318>    ilen.l  = Peek.l(?include_length)
00030BE8 <AmiBlitz3.ab3@20319>    ibase.l = Peek.l(?include_base)
00030BF8 <AmiBlitz3.ab3@20320>    ido.l   = Peek.l(?include_process)
00030C08 <AmiBlitz3.ab3@20321>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030C12 <AmiBlitz3.ab3@20322>    If ido
00030C24 <AmiBlitz3.ab3@20323>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030C4A <AmiBlitz3.ab3@20324>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030C5C <AmiBlitz3.ab3@20325>      If nilen>0
00030C6C <AmiBlitz3.ab3@20329>        Poke.l ?include_length,nilen
00030C8A <AmiBlitz3.ab3@20332>    !asm
00030C94 <AmiBlitz3.ab3@20333>    MOVE.l #0,include_process
00030C9A <AmiBlitz3.ab3@20334>    MOVE.l include_length,D0
00030CA0 <AmiBlitz3.ab3@20335>    LEA inctab,a0
00030CA2 <AmiBlitz3.ab3@20336>    MOVEQ #0,d1
00030CA8 <AmiBlitz3.ab3@20337>    MOVE.w ininclude,d1
00030CAC <AmiBlitz3.ab3@20338>    ADD.l d0,0(a0,d1*4)
00030CB0 <AmiBlitz3.ab3@20340>   MOVEA.l $4(A2),A5
00030CB4 <AmiBlitz3.ab3@20342>    MOVE.l 0(a0,d1*4),d0
00030CB8 <AmiBlitz3.ab3@20343>   CLR.b $0(A5,D0.l)
00030CBA <AmiBlitz3.ab3@20346>   MOVEA.l A5,A0
00030CBC <AmiBlitz3.ab3@20349>     TST.b (A0)+
00030CC0 <AmiBlitz3.ab3@20350>   BNE.w JL_0_C114
00030CC4 <AmiBlitz3.ab3@20351>   MOVE.l A0,$E(A2)
00030CC6 <AmiBlitz3.ab3@20352> RTS
00030CCA <AmiBlitz3.ab3@20355> include_length:        Dc.l 0                              ; for tokenizer!
00030CCE <AmiBlitz3.ab3@20356> include_base:          Dc.l 0
00030CD2 <AmiBlitz3.ab3@20357> include_process:       Dc.l 0
00030CD6 <AmiBlitz3.ab3@20358> include_preprocessor:  Dc.l 0
00030CDA <AmiBlitz3.ab3@20362>   MOVE.l $8(A2),D1
00030CE0 <AmiBlitz3.ab3@20364>   MOVEA.l _dosbase,A6
00030CE4 <AmiBlitz3.ab3@20365>   JSR _Close(a6)
00030CEA <AmiBlitz3.ab3@20366>   MOVEA.l _execbase,A6
00030CEE <AmiBlitz3.ab3@20367>   MOVEA.l $4(A2),A1
00030CF4 <AmiBlitz3.ab3@20368>   MOVE.l #$400*8,D0                                        ;exit include
00030CF8 <AmiBlitz3.ab3@20370>   JSR _FreeVec(a6)
00030CFE <AmiBlitz3.ab3@20373>   MOVE.l (A2),constantbase
00030D00 <AmiBlitz3.ab3@20374>   MOVEA.l A2,A1
00030D02 <AmiBlitz3.ab3@20375>   MOVEQ.l #$00,D0
00030D06 <AmiBlitz3.ab3@20376>   MOVE.b $12(A2),D0
00030D0C <AmiBlitz3.ab3@20377>   MOVEA.l _execbase,A6
00030D12 <AmiBlitz3.ab3@20378>   MOVE.l mempool2,a0
00030D16 <AmiBlitz3.ab3@20379>   JSR _FreePooled(A6)
00030D1C <AmiBlitz3.ab3@20380>   JSR zero_includename
00030D22 <AmiBlitz3.ab3@20381>   SUBQ.w #1,ininclude
00030D26 <AmiBlitz3.ab3@20382>   BNE.w AJL_0_C09E
00030D2C <AmiBlitz3.ab3@20385>   LEA _include,a0
00030D30 <AmiBlitz3.ab3@20386>   MOVEM.l a0-a6/d0-d7,-(a7)
00030D36 <AmiBlitz3.ab3@20387>   LEA ptr_parameterstore,a1
00030D38 <AmiBlitz3.ab3@20390>     MOVE.b (a0)+,(a1)+
00030D3C <AmiBlitz3.ab3@20391>   BNE 'l1b
00030D3E <AmiBlitz3.ab3@20392>   MOVEQ #9,d2
00030D44 <AmiBlitz3.ab3@20393>   JSR findlabel2
00030D48 <AmiBlitz3.ab3@20394>   BNE 'd
00030D4C <AmiBlitz3.ab3@20395>   CLR.l 8(a2)
00030D50 <AmiBlitz3.ab3@20398>   MOVEM.l (a7)+,a0-a6/d0-d7
00030D52 <AmiBlitz3.ab3@20399> RTS
00030D58 <AmiBlitz3.ab3@20403>   MOVE.l unusedfunc,d0
00030D5C <AmiBlitz3.ab3@20404>   BEQ 'noclear
00030D60 <AmiBlitz3.ab3@20405>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030D62 <AmiBlitz3.ab3@20408>     MOVE.l d0,a1
00030D66 <AmiBlitz3.ab3@20409>     MOVE.l 4(a1),d0
00030D68 <AmiBlitz3.ab3@20410>     MOVE.l (a1),d2
00030D6E <AmiBlitz3.ab3@20411>     MOVE.l _execbase,a6
00030D72 <AmiBlitz3.ab3@20412>     JSR _FreeMem(a6)
00030D74 <AmiBlitz3.ab3@20413>     MOVE.l d2,d0
00030D78 <AmiBlitz3.ab3@20414>   BNE 'f1
00030D7E <AmiBlitz3.ab3@20415>   CLR.l unusedfunc
00030D82 <AmiBlitz3.ab3@20416>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030D84 <AmiBlitz3.ab3@20419> RTS
00030D8A <AmiBlitz3.ab3@20423>   MOVEA.l xinclude_base,A2
00030D90 <AmiBlitz3.ab3@20424>   CLR.l xinclude_base
00030D94 <AmiBlitz3.ab3@20427>     CMPA.w #$0,A2
00030D98 <AmiBlitz3.ab3@20428>      BEQ.w JL_0_C186
00030D9A <AmiBlitz3.ab3@20429>     MOVEQ.l #$00,D0
00030D9E <AmiBlitz3.ab3@20430>     MOVE.b 4+8(A2),D0
00030DA0 <AmiBlitz3.ab3@20431>     MOVEA.l A2,A1
00030DA2 <AmiBlitz3.ab3@20432>     MOVEA.l (A2),A2
00030DA8 <AmiBlitz3.ab3@20433>     MOVEA.l _execbase,A6
00030DAE <AmiBlitz3.ab3@20434>     MOVE.l mempool2,a0
00030DB2 <AmiBlitz3.ab3@20435>     JSR _FreePooled(A6)
00030DB6 <AmiBlitz3.ab3@20436> BRA.w JL_0_C168
00030DB8 <AmiBlitz3.ab3@20439> RTS
00030DBE <AmiBlitz3.ab3@20443>   MOVEA.l constantbase,A2
00030DC4 <AmiBlitz3.ab3@20444>   CLR.l constantbase
00030DC8 <AmiBlitz3.ab3@20447>     CMPA.w #$0,A2
00030DCC <AmiBlitz3.ab3@20448>      BEQ.w JL_0_C1DC
00030DD0 <AmiBlitz3.ab3@20449>     MOVE.l $8(A2),D1
00030DD4 <AmiBlitz3.ab3@20450>      BEQ.w JL_0_C1AE
00030DDA <AmiBlitz3.ab3@20451>     MOVEA.l _dosbase,A6
00030DDE <AmiBlitz3.ab3@20452>      JSR _Close(A6)
00030DE2 <AmiBlitz3.ab3@20455>     MOVE.l $4(A2),D0
00030DE6 <AmiBlitz3.ab3@20456>      BEQ.w JL_0_C1C6
00030DE8 <AmiBlitz3.ab3@20457>     MOVEA.l D0,A1
00030DEE <AmiBlitz3.ab3@20458>     MOVE.l #$400*8,D0
00030DF4 <AmiBlitz3.ab3@20459>     MOVEA.l _execbase,A6
00030DFA <AmiBlitz3.ab3@20460>     MOVE.l mempool,a0
00030DFE <AmiBlitz3.ab3@20461>     JSR _FreeVec(a6)
00030E00 <AmiBlitz3.ab3@20464>     MOVEQ.l #$00,D0
00030E04 <AmiBlitz3.ab3@20465>     MOVE.b $12(A2),D0
00030E06 <AmiBlitz3.ab3@20466>     MOVEA.l A2,A1
00030E08 <AmiBlitz3.ab3@20467>     MOVEA.l (A2),A2
00030E0E <AmiBlitz3.ab3@20468>     MOVEA.l _execbase,A6
00030E14 <AmiBlitz3.ab3@20469>     MOVE.l mempool2,a0
00030E18 <AmiBlitz3.ab3@20470>     JSR _FreePooled(A6)
00030E1C <AmiBlitz3.ab3@20471> BRA.w JL_0_C194
00030E1E <AmiBlitz3.ab3@20474> RTS
00030E20 <AmiBlitz3.ab3@20478>   SWAP D0
00030E24 <AmiBlitz3.ab3@20479>    BSR.w JL_0_C1E6
00030E26 <AmiBlitz3.ab3@20480>   SWAP D0
00030E2C <AmiBlitz3.ab3@20483>   MOVEA.l data2,A4
00030E32 <AmiBlitz3.ab3@20484>   CMPA.l allat,A4
00030E36 <AmiBlitz3.ab3@20485>    BCC.w JL_0_C200
00030E38 <AmiBlitz3.ab3@20486>   MOVE.w D0,(A4)+
00030E3E <AmiBlitz3.ab3@20487>   MOVE.l A4,data2
00030E40 <AmiBlitz3.ab3@20488> RTS
00030E48 <AmiBlitz3.ab3@20491>   MOVE.w #$FFFF,dontwrite
00030E4E <AmiBlitz3.ab3@20492>   ADDQ.l #2,data2
00030E50 <AmiBlitz3.ab3@20493> RTS
00030E56 <AmiBlitz3.ab3@20497>   MOVEA.l data2,A4
00030E5C <AmiBlitz3.ab3@20498>   CMPA.l allat,A4
00030E60 <AmiBlitz3.ab3@20499>    BCC.w JL_0_C22A
00030E62 <AmiBlitz3.ab3@20500>   MOVE.b D0,(A4)+
00030E68 <AmiBlitz3.ab3@20501>   MOVE.l A4,data2
00030E6A <AmiBlitz3.ab3@20502> RTS
00030E72 <AmiBlitz3.ab3@20505>   MOVE.w #$FFFF,dontwrite
00030E78 <AmiBlitz3.ab3@20506>   ADDQ.l #1,data2
00030E7A <AmiBlitz3.ab3@20507> RTS
00030E7E <AmiBlitz3.ab3@20511>   CMP.w #$22,D0
00030E82 <AmiBlitz3.ab3@20512>    BNE.w syntaxerr
00030E88 <AmiBlitz3.ab3@20516>   JSR get1bytemain
00030E8C <AmiBlitz3.ab3@20517>   CMP.b #$22,D0
00030E90 <AmiBlitz3.ab3@20518>    BEQ.w JL_0_C25A
00030E92 <AmiBlitz3.ab3@20519>   TST.w D0
00030E96 <AmiBlitz3.ab3@20520>    BEQ.w syntaxerr
00030E98 <AmiBlitz3.ab3@20521>   MOVE.b D0,(A0)+
00030E9C <AmiBlitz3.ab3@20522> BRA.w JL_0_C242
00030E9E <AmiBlitz3.ab3@20525>   CLR.b (A0)
00030EA0 <AmiBlitz3.ab3@20526> RTS
00030EA2 <AmiBlitz3.ab3@20529>   TST.l D3
00030EA4 <AmiBlitz3.ab3@20530> RTS
00030EAA <AmiBlitz3.ab3@20533>   LEA ptr_parameterstore,A0
00030EB0 <AmiBlitz3.ab3@20534>   LEA namebuff2,A1
00030EB2 <AmiBlitz3.ab3@20537>     MOVE.b (A0)+,D0
00030EB6 <AmiBlitz3.ab3@20538>     BEQ.w JL_0_C27C
00030EB8 <AmiBlitz3.ab3@20539>   CMP.b (A1)+,D0
00030EBC <AmiBlitz3.ab3@20540>   BEQ.w JL_0_C26E
00030EBE <AmiBlitz3.ab3@20541> RTS
00030EC0 <AmiBlitz3.ab3@20544>   TST.b (A1)
00030EC4 <AmiBlitz3.ab3@20545>   BNE.w JL_0_C284
00030EC6 <AmiBlitz3.ab3@20546> RTS
00030ECA <AmiBlitz3.ab3@20549>   CMP.w #$1,D0
00030ECC <AmiBlitz3.ab3@20550> RTS
00030ED0 <AmiBlitz3.ab3@20554>   CMP.w #$2E,D0                                            ;dodeftype
00030ED4 <AmiBlitz3.ab3@20555>    BNE.w syntaxerr
00030ED8 <AmiBlitz3.ab3@20556>   BSR.w getparameter2
00030EDE <AmiBlitz3.ab3@20557>   LEA newtypebase,A2
00030EE2 <AmiBlitz3.ab3@20558>   BSR.w findtype
00030EE6 <AmiBlitz3.ab3@20559>    BNE.w notypeerr
00030EEC <AmiBlitz3.ab3@20560>   TST.b declare
00030EF0 <AmiBlitz3.ab3@20561>    BNE 'l1
00030EF6 <AmiBlitz3.ab3@20562>   TST.b declare2
00030EFA <AmiBlitz3.ab3@20563>    BEQ 'l2
00030F02 <AmiBlitz3.ab3@20566>   MOVE.b #2,nowdeclare
00030F08 <AmiBlitz3.ab3@20570>   JSR reget
00030F0C <AmiBlitz3.ab3@20571>    BNE.w JL_0_C2B4
00030F12 <AmiBlitz3.ab3@20572>   MOVE.l A2,defaulttype
00030F14 <AmiBlitz3.ab3@20573> RTS
00030F1A <AmiBlitz3.ab3@20576>   MOVE.l defaulttype,-(A7)
00030F20 <AmiBlitz3.ab3@20577>   MOVE.l A2,defaulttype
00030F24 <AmiBlitz3.ab3@20580>   BSR.w getparameter
00030F28 <AmiBlitz3.ab3@20581>    BSR.w JL_0_8E3C
00030F2C <AmiBlitz3.ab3@20582>   CMP.w #$2C,D0
00030F30 <AmiBlitz3.ab3@20583>    BNE.w JL_0_C2D8
00030F36 <AmiBlitz3.ab3@20584>    JSR get1bytemain                                        ; was BSR.w
00030F3A <AmiBlitz3.ab3@20585> BRA.w JL_0_C2C0
00030F40 <AmiBlitz3.ab3@20588>   MOVE.l (A7)+,defaulttype
00030F42 <AmiBlitz3.ab3@20589> RTS
00030F46 <AmiBlitz3.ab3@20593>   LEA $4(A5),A2                                            ;fehler function
00030F48 <AmiBlitz3.ab3@20596>   MOVE.l A2,D0
00030F4C <AmiBlitz3.ab3@20599>   BSR.w getparameter
00030F50 <AmiBlitz3.ab3@20600>   BSR.w JL_0_8E3C
00030F54 <AmiBlitz3.ab3@20601>   BSR.w calcvar
00030F58 <AmiBlitz3.ab3@20602>   CMP.b #$7,D2
00030F5C <AmiBlitz3.ab3@20603>    BNE.w mismatcherr
00030F60 <AmiBlitz3.ab3@20604>   MOVE.w varmode(PC),-(A7)
00030F64 <AmiBlitz3.ab3@20605>   CMP.w #$3D,D0
00030F68 <AmiBlitz3.ab3@20606>    BNE.w syntaxerr
00030F6C <AmiBlitz3.ab3@20607>   BTST #$F,D2
00030F70 <AmiBlitz3.ab3@20608>    BNE.w JL_0_C31C
00030F74 <AmiBlitz3.ab3@20609>   MOVE.w JL_0_C2E0(PC),D1
00030F78 <AmiBlitz3.ab3@20610>   BSR.w pokewda5s
00030F7A <AmiBlitz3.ab3@20611>   MOVE.w D3,D1
00030F7E <AmiBlitz3.ab3@20612>   BSR.w writeword
00030F82 <AmiBlitz3.ab3@20615>   MOVE.w L_0_C2E4(PC),D1
00030F86 <AmiBlitz3.ab3@20616>   BSR.w writeword
00030F8C <AmiBlitz3.ab3@20617>   ADDQ.w #1,regnum
00030F8E <AmiBlitz3.ab3@20618>   MOVEQ.l #$03,D2
00030F92 <AmiBlitz3.ab3@20619>   BSR.w eval
00030F98 <AmiBlitz3.ab3@20620>   MOVE.l #$D000,D1
00030F9E <AmiBlitz3.ab3@20621>   MOVE.l d1,lastinstruction
00030FA0 <AmiBlitz3.ab3@20622>   TST.w (A7)+
00030FA4 <AmiBlitz3.ab3@20623>    BEQ.w Atokejsr
00030FA6 <AmiBlitz3.ab3@20624>   ADDQ.w #1,D1
00030FAA <AmiBlitz3.ab3@20625> BRA.w Atokejsr
00030FAC <AmiBlitz3.ab3@20629>   MOVE.w D0,D1
00030FB0 <AmiBlitz3.ab3@20630>    BPL.w syntaxerr
00030FB4 <AmiBlitz3.ab3@20631>   BCLR #$F,D1
00030FBA <AmiBlitz3.ab3@20632>    JSR searchinstr
00030FBE <AmiBlitz3.ab3@20633>   MOVE.l $12(A2),D0
00030FC2 <AmiBlitz3.ab3@20634>   TST.w -$2(A2,D0.L)
00030FC6 <AmiBlitz3.ab3@20635>    BEQ.w freeerr
00030FC8 <AmiBlitz3.ab3@20636>   MOVEQ.l #$02,D2
00030FCA <AmiBlitz3.ab3@20637>   MOVE.l A2,-(A7)
00030FCE <AmiBlitz3.ab3@20638>    BSR.w eval
00030FD0 <AmiBlitz3.ab3@20639>   MOVEA.l (A7)+,A2
00030FD6 <AmiBlitz3.ab3@20640>   MOVE.l A2,mymaxlib
00030FDA <AmiBlitz3.ab3@20641>   ADDA.l $12(A2),A2
00030FE0 <AmiBlitz3.ab3@20642>   TST.b debugmode
00030FE4 <AmiBlitz3.ab3@20643>    BEQ.w JL_0_C3A8
00030FEA <AmiBlitz3.ab3@20644>   MOVE.w regnum,D1
00030FEC <AmiBlitz3.ab3@20645>   LSL.w #8,D1
00030FEE <AmiBlitz3.ab3@20646>   LSL.w #1,D1
00030FF2 <AmiBlitz3.ab3@20647>   ORI.w #$B07C,D1
00030FF6 <AmiBlitz3.ab3@20648>    BSR.w writeword
00030FFA <AmiBlitz3.ab3@20649>   MOVE.w -$4(A2),D1
00030FFE <AmiBlitz3.ab3@20650>    BSR.w writeword
00031004 <AmiBlitz3.ab3@20651>   MOVE.l maxchk,D1
00031008 <AmiBlitz3.ab3@20652>    BSR.w writelong
0003100A <AmiBlitz3.ab3@20653>   MOVE.l A2,-(A7)
0003100E <AmiBlitz3.ab3@20654>   MOVE.w #$C30A,D1
00031012 <AmiBlitz3.ab3@20655>    BSR.w Atokejsr
00031014 <AmiBlitz3.ab3@20656>   MOVEA.l (A7)+,A2
00031018 <AmiBlitz3.ab3@20659>   MOVE.w -$2(A2),D2
0003101E <AmiBlitz3.ab3@20662>   MOVE.w regnum,D1
00031024 <AmiBlitz3.ab3@20663>   OR.w lslimm,D1
00031028 <AmiBlitz3.ab3@20664>   CMP.w #$8,D2
0003102C <AmiBlitz3.ab3@20665>    BCS.w JL_0_C3CE
00031030 <AmiBlitz3.ab3@20666>    BSR.w writeword
00031032 <AmiBlitz3.ab3@20667>   SUBQ.w #8,D2
00031036 <AmiBlitz3.ab3@20668>    BNE.w JL_0_C3AC
0003103A <AmiBlitz3.ab3@20669> BRA.w JL_0_C3DA
0003103C <AmiBlitz3.ab3@20672>   MOVE.w D2,D0
0003103E <AmiBlitz3.ab3@20673>   LSL.w #8,D0
00031040 <AmiBlitz3.ab3@20674>   LSL.w #1,D0
00031042 <AmiBlitz3.ab3@20675>   OR.w D0,D1
00031046 <AmiBlitz3.ab3@20676>   BSR.w writeword
00031048 <AmiBlitz3.ab3@20679> RTS
0003104C <AmiBlitz3.ab3@20684>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003104E <AmiBlitz3.ab3@20685>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00031052 <AmiBlitz3.ab3@20689> mymaxlib:  Ds.l 1
00031056 <AmiBlitz3.ab3@20693>   BSR.w JL_0_C340
0003105A <AmiBlitz3.ab3@20694>   LEA free(PC),A0
0003105E <AmiBlitz3.ab3@20695>   LEA freef(PC),A1
00031064 <AmiBlitz3.ab3@20696>   MOVE.w -$6(A2),$2(A0)
00031068 <AmiBlitz3.ab3@20697>   BSR.w pokecode
0003106C <AmiBlitz3.ab3@20698>   MOVE.l -$A(A2),D1
00031070 <AmiBlitz3.ab3@20701>   BEQ.w nosuperr
00031074 <AmiBlitz3.ab3@20702>   MOVEA.l mymaxlib(PC),A2
00031078 <AmiBlitz3.ab3@20703> BRA.w Amakelibsub
0003107C <AmiBlitz3.ab3@20708>   BSR.w JL_0_C340
00031082 <AmiBlitz3.ab3@20709>   LEA use,A0
00031088 <AmiBlitz3.ab3@20710>   LEA usef,A1
0003108E <AmiBlitz3.ab3@20711>   MOVE.w -$6(A2),$2(A0)
00031094 <AmiBlitz3.ab3@20712>   MOVE.w -$6(A2),-$2(A1)
00031098 <AmiBlitz3.ab3@20713>   ADDQ.w #4,-$2(A1)
0003109C <AmiBlitz3.ab3@20714>   BSR.w pokecode
000310A0 <AmiBlitz3.ab3@20715>   MOVE.l -$E(A2),D1
000310A4 <AmiBlitz3.ab3@20716> BRA.w maxjsr
000310AA <AmiBlitz3.ab3@20720>   JSR get1bytemain
000310B0 <AmiBlitz3.ab3@20724>   MOVE.l firstiff,D0
000310B4 <AmiBlitz3.ab3@20725>    BEQ.w noiferr
000310B6 <AmiBlitz3.ab3@20726>   MOVEA.l D0,A0
000310BC <AmiBlitz3.ab3@20727>   CMPI.b #$1,$D(A0)
000310C0 <AmiBlitz3.ab3@20728>    BEQ.w illelseerr
000310C4 <AmiBlitz3.ab3@20729>   MOVE.w #$6000,D1
000310CA <AmiBlitz3.ab3@20731>     TST.b fast
000310CE <AmiBlitz3.ab3@20732>     BEQ 'l1
000310D4 <AmiBlitz3.ab3@20733>     OR.l #$ff,d1
000310D8 <AmiBlitz3.ab3@20734>     BSR writeword
000310DA <AmiBlitz3.ab3@20738>   SWAP D1
000310DE <AmiBlitz3.ab3@20739>   BSR.w writelong
000310E0 <AmiBlitz3.ab3@20740>   MOVEQ.l #$00,D1
000310E4 <AmiBlitz3.ab3@20741>   BSR.w AJL_0_D7B8
000310EC <AmiBlitz3.ab3@20742>   MOVE.l destpointer,$8(A0)
000310F0 <AmiBlitz3.ab3@20743> BRA.w do_then
000310F6 <AmiBlitz3.ab3@20747>   LEA ptr_parameterstore,A0
000310F8 <AmiBlitz3.ab3@20748>   MOVE.l A0,-(A7)
000310FC <AmiBlitz3.ab3@20749>   BSR.w JL_0_C23A
00031100 <AmiBlitz3.ab3@20750> BRA.w handle_compileerror
00031104 <AmiBlitz3.ab3@20754>   BSR.w JL_0_BF6A
00031106 <AmiBlitz3.ab3@20755>   MOVEQ.l #$05,D1
00031110 <AmiBlitz3.ab3@20757>   MOVE.w oldqflag,instringon
00031116 <AmiBlitz3.ab3@20758>   MOVEA.l lastsourcepos,A5
0003111C <AmiBlitz3.ab3@20759>   LEA AJL_0_C25E,A0
00031120 <AmiBlitz3.ab3@20760> BRA.w JL_0_C4B4
00031126 <AmiBlitz3.ab3@20764>   LEA ptr_parameterstore,A0
0003112A <AmiBlitz3.ab3@20765>   BSR.w JL_0_C23A
00031130 <AmiBlitz3.ab3@20766>   JSR get1bytemain
00031134 <AmiBlitz3.ab3@20767>   BSR.w JL_0_CCA8
0003113A <AmiBlitz3.ab3@20768>   LEA namebuff2,A0
0003113E <AmiBlitz3.ab3@20769>   BSR.w JL_0_C23A
00031144 <AmiBlitz3.ab3@20770>   LEA AJL_0_C262,A0
00031146 <AmiBlitz3.ab3@20773>   LSL.w #2,D1
0003114C <AmiBlitz3.ab3@20774>   LEA CIF_branches,A1
00031150 <AmiBlitz3.ab3@20775>   MOVE.l $0(A1,D1.W),-(A7)
00031152 <AmiBlitz3.ab3@20776>   MOVEQ.l #-$01,D1
00031154 <AmiBlitz3.ab3@20779>   JSR (A0)
00031156 <AmiBlitz3.ab3@20781>   MOVEA.l (A7)+,A1
00031158 <AmiBlitz3.ab3@20783> JMP (A1)
0003115C <AmiBlitz3.ab3@20787>   BEQ.w JL_0_C4F6
00031160 <AmiBlitz3.ab3@20788> BRA.w JL_0_C4F4
00031164 <AmiBlitz3.ab3@20792>   BNE.w JL_0_C4F6
00031168 <AmiBlitz3.ab3@20793> BRA.w JL_0_C4F4
0003116C <AmiBlitz3.ab3@20797>   BLT.w JL_0_C4F6
00031170 <AmiBlitz3.ab3@20798> BRA.w JL_0_C4F4
00031174 <AmiBlitz3.ab3@20802>   BLE.w JL_0_C4F6
00031178 <AmiBlitz3.ab3@20803> BRA.w JL_0_C4F4
0003117C <AmiBlitz3.ab3@20807>   BGT.w JL_0_C4F6
00031180 <AmiBlitz3.ab3@20808> BRA.w JL_0_C4F4
00031184 <AmiBlitz3.ab3@20812>   BGE.w JL_0_C4F6
00031186 <AmiBlitz3.ab3@20815>   MOVEQ.l #$00,D1
0003118C <AmiBlitz3.ab3@20818>   MOVEA.l concomsp,A0
00031192 <AmiBlitz3.ab3@20819>   MOVE.w skipcode,(A0)+
00031198 <AmiBlitz3.ab3@20820>   MOVE.l A0,concomsp
0003119E <AmiBlitz3.ab3@20821>   MOVE.w D1,skipcode
000311A4 <AmiBlitz3.ab3@20822>   JSR get1bytemain
000311A8 <AmiBlitz3.ab3@20823>    BNE.w syntaxerr
000311AE <AmiBlitz3.ab3@20824> JMP bakup
000311B6 <AmiBlitz3.ab3@20828> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000311BA <AmiBlitz3.ab3@20829> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000311BE <AmiBlitz3.ab3@20836>   MOVE.w #$FC17,D1
000311C4 <AmiBlitz3.ab3@20837>   JSR uselib
000311CA <AmiBlitz3.ab3@20839>   JSR reget
000311CE <AmiBlitz3.ab3@20840>    BEQ.w do_Restore__resbeg
000311D2 <AmiBlitz3.ab3@20841>   BSR.w JL_0_AE22                                          ;get label name!
000311D6 <AmiBlitz3.ab3@20842>   MOVE.w rescode(PC),D1
000311DA <AmiBlitz3.ab3@20843>   BSR.w writeword
000311E0 <AmiBlitz3.ab3@20844>   JSR addoff                                               ;add offset
000311E4 <AmiBlitz3.ab3@20845>   MOVE.l $C(A2),D1
000311E8 <AmiBlitz3.ab3@20846>   BSR.w writelong
000311EC <AmiBlitz3.ab3@20847>   MOVE.w rescode+6(PC),D1
000311F0 <AmiBlitz3.ab3@20848>   BSR.w writeword
000311F4 <AmiBlitz3.ab3@20849>   MOVE.l $4(A2),D1                                         ;is it outstanding?
000311F8 <AmiBlitz3.ab3@20850>   BEQ.w do_Restore__no
000311FA <AmiBlitz3.ab3@20852>   MOVEA.l D1,A1
000311FE <AmiBlitz3.ab3@20853>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00031200 <AmiBlitz3.ab3@20854> RTS
00031202 <AmiBlitz3.ab3@20859> RTS
00031206 <AmiBlitz3.ab3@20862>   MOVE.w #$CD00,D1
0003120C <AmiBlitz3.ab3@20863>   JSR Atokejsr
00031210 <AmiBlitz3.ab3@20864>   MOVE.l rescode2(PC),D1
00031216 <AmiBlitz3.ab3@20865> JMP writelong
0003121A <AmiBlitz3.ab3@20869>   MOVE.w #$FC17,D1
00031220 <AmiBlitz3.ab3@20870>   JSR uselib
00031226 <AmiBlitz3.ab3@20873>   MOVE.l dataget,D1
0003122A <AmiBlitz3.ab3@20874>   BSR.w writelong
0003122E <AmiBlitz3.ab3@20875>   BSR.w getparameter
00031232 <AmiBlitz3.ab3@20876>   BSR.w JL_0_8E3C
00031236 <AmiBlitz3.ab3@20877>   BSR.w calcvar
0003123A <AmiBlitz3.ab3@20878>   BTST #$E,D2
0003123E <AmiBlitz3.ab3@20879>    BEQ.w JL_0_C5A6
00031242 <AmiBlitz3.ab3@20880>   MOVE.b #$6,D2
00031244 <AmiBlitz3.ab3@20883>   TST.b D2
00031248 <AmiBlitz3.ab3@20884>    BEQ.w noleterr
0003124E <AmiBlitz3.ab3@20885>   TST.b debugmode
00031252 <AmiBlitz3.ab3@20886>    BEQ.w JL_0_C5D0
00031256 <AmiBlitz3.ab3@20887>   MOVE.w #$7000,D1
00031258 <AmiBlitz3.ab3@20888>   MOVE.b D2,D1
0003125C <AmiBlitz3.ab3@20889>   ANDI.b #$F,D1
00031260 <AmiBlitz3.ab3@20890>   BSR.w writeword
00031264 <AmiBlitz3.ab3@20891>   MOVE.w #$C310,D1
00031266 <AmiBlitz3.ab3@20892>   MOVE.w D2,-(A7)
0003126A <AmiBlitz3.ab3@20893>   BSR.w Atokejsr
0003126C <AmiBlitz3.ab3@20894>   MOVE.w (A7)+,D2
00031270 <AmiBlitz3.ab3@20897>   CMP.b #$7,D2
00031274 <AmiBlitz3.ab3@20898>    BEQ.w JL_0_C684
00031278 <AmiBlitz3.ab3@20899>   CMP.b #$1,D2
0003127C <AmiBlitz3.ab3@20900>    BNE.w JL_0_C62A
00031282 <AmiBlitz3.ab3@20901>   LEA dataletb2,A0
00031288 <AmiBlitz3.ab3@20902>   LEA dataletb2f,A1
0003128C <AmiBlitz3.ab3@20903>   BTST #$F,D2
00031290 <AmiBlitz3.ab3@20904>    BEQ.w JL_0_C5FC
00031294 <AmiBlitz3.ab3@20905>   BSR.w pokecode
00031298 <AmiBlitz3.ab3@20906> BRA.w JL_0_C668
0003129E <AmiBlitz3.ab3@20909>   LEA dataletb,A0
000312A4 <AmiBlitz3.ab3@20910>   LEA dataletbf,A1
000312AA <AmiBlitz3.ab3@20911>   TST.w varmode
000312AE <AmiBlitz3.ab3@20912>    BEQ.w JL_0_C61E
000312B4 <AmiBlitz3.ab3@20913>   LEA dataletbl,A0
000312BA <AmiBlitz3.ab3@20914>   LEA dataletblf,A1
000312BE <AmiBlitz3.ab3@20917>   MOVE.w D3,$4(A0)
000312C2 <AmiBlitz3.ab3@20918>   BSR.w pokecode
000312C6 <AmiBlitz3.ab3@20919> BRA.w JL_0_C668
000312CC <AmiBlitz3.ab3@20922>   LEA dataletw,A0
000312D0 <AmiBlitz3.ab3@20923>   CMP.b #$3,D2
000312D4 <AmiBlitz3.ab3@20924>    BCS.w JL_0_C63E
000312DA <AmiBlitz3.ab3@20925>   LEA dataletl,A0
000312DE <AmiBlitz3.ab3@20928>   BTST #$F,D2
000312E2 <AmiBlitz3.ab3@20929>    BEQ.w JL_0_C652
000312E6 <AmiBlitz3.ab3@20930>   MOVE.w $4(A0),D1
000312EA <AmiBlitz3.ab3@20931>    BSR.w writeword
000312EE <AmiBlitz3.ab3@20932> BRA.w JL_0_C668
000312F4 <AmiBlitz3.ab3@20935>   TST.w varmode
000312F8 <AmiBlitz3.ab3@20936>    BEQ.w JL_0_C65E
000312FA <AmiBlitz3.ab3@20937>   ADDQ.w #6,A0
000312FE <AmiBlitz3.ab3@20940>   MOVE.w D3,$2(A0)
00031300 <AmiBlitz3.ab3@20941>   MOVE.l (A0),D1
00031304 <AmiBlitz3.ab3@20942>   BSR.w writelong
0003130A <AmiBlitz3.ab3@20945>   MOVE.l dataput,D1
0003130E <AmiBlitz3.ab3@20946>    BSR.w writelong
00031312 <AmiBlitz3.ab3@20947>   CMP.w #$2C,D0
00031316 <AmiBlitz3.ab3@20948>    BEQ.w JL_0_C67C
00031318 <AmiBlitz3.ab3@20949> RTS
0003131E <AmiBlitz3.ab3@20952>   JSR get1bytemain
00031322 <AmiBlitz3.ab3@20953> BRA.w JL_0_C584
00031328 <AmiBlitz3.ab3@20957>   MOVE.w stlenget,D1
0003132C <AmiBlitz3.ab3@20958>    BSR.w writeword
00031330 <AmiBlitz3.ab3@20959>   BTST #$F,D2
00031334 <AmiBlitz3.ab3@20960>    BNE.w JL_0_C6C0
0003133A <AmiBlitz3.ab3@20961>   TST.w varmode
0003133E <AmiBlitz3.ab3@20962>    BEQ.w JL_0_C6B0
00031344 <AmiBlitz3.ab3@20963>   MOVE.w D3,leaampl+2
0003134A <AmiBlitz3.ab3@20964>   MOVE.l leaampl,D1
0003134E <AmiBlitz3.ab3@20965> BRA.w JL_0_C6BC
00031354 <AmiBlitz3.ab3@20968>   MOVE.w D3,leaamp+2
0003135A <AmiBlitz3.ab3@20969>   MOVE.l leaamp,D1
0003135E <AmiBlitz3.ab3@20972>   BSR.w writelong
00031362 <AmiBlitz3.ab3@20975>   MOVE.w #$C701,D1
00031368 <AmiBlitz3.ab3@20976>   MOVE.w varmode,D2
0003136C <AmiBlitz3.ab3@20977>    BEQ.w JL_0_C6D0
0003136E <AmiBlitz3.ab3@20978>   SUBQ.w #1,D1
00031372 <AmiBlitz3.ab3@20981>   BSR.w Atokejsr
0003137A <AmiBlitz3.ab3@20982>   MOVE.w #$FFFF,lasta6
00031380 <AmiBlitz3.ab3@20983>   LEA stalign,A0
00031386 <AmiBlitz3.ab3@20984>   LEA stalignf,A1
0003138A <AmiBlitz3.ab3@20985>   BSR.w pokecode
0003138E <AmiBlitz3.ab3@20986> BRA.w JL_0_C668
00031392 <AmiBlitz3.ab3@20990>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00031396 <AmiBlitz3.ab3@20991>    BNE.w JL_0_C720
0003139C <AmiBlitz3.ab3@20992>   JSR get1bytemain
000313A0 <AmiBlitz3.ab3@20993>   CMP.w #$77,D0
000313A4 <AmiBlitz3.ab3@20994>    BEQ.w JL_0_C71C
000313A8 <AmiBlitz3.ab3@20995>   CMP.w #$62,D0
000313AC <AmiBlitz3.ab3@20996>    BEQ.w JL_0_C718
000313B0 <AmiBlitz3.ab3@20997>   CMP.w #"s",d0
000313B4 <AmiBlitz3.ab3@20998>   BEQ single3
000313B8 <AmiBlitz3.ab3@20999>   CMP.w #"d",d0
000313BC <AmiBlitz3.ab3@21000>   BEQ double3
000313C0 <AmiBlitz3.ab3@21001>   CMP.w #$6C,D0
000313C4 <AmiBlitz3.ab3@21002>    BNE.w syntaxerr
000313C6 <AmiBlitz3.ab3@21003>   MOVEQ.l #$02,D1
000313C8 <AmiBlitz3.ab3@21004> RTS
000313D0 <AmiBlitz3.ab3@21008>   MOVE.b #1,iee
000313D2 <AmiBlitz3.ab3@21009>   MOVEQ.l #$3,d1
000313D4 <AmiBlitz3.ab3@21010> RTS
000313DC <AmiBlitz3.ab3@21014>   MOVE.b #1,iee
000313DE <AmiBlitz3.ab3@21015>   MOVEQ.l #$4,d1
000313E0 <AmiBlitz3.ab3@21016> RTS
000313E2 <AmiBlitz3.ab3@21020>   MOVEQ.l #$00,D1
000313E4 <AmiBlitz3.ab3@21021> RTS
000313E6 <AmiBlitz3.ab3@21025>   MOVEQ.l #$01,D1
000313E8 <AmiBlitz3.ab3@21026> RTS
000313EA <AmiBlitz3.ab3@21030>   MOVEQ.l #$01,D1
000313F0 <AmiBlitz3.ab3@21031> JMP bakup
000313F4 <AmiBlitz3.ab3@21035>   BSR.w JL_0_C6F0
000313F6 <AmiBlitz3.ab3@21037>   MOVE.w D1,-(A7)
000313FA <AmiBlitz3.ab3@21038>    BSR.w AJL_0_BF6E
000313FE <AmiBlitz3.ab3@21039>   CMP.w #$2C,D0
00031402 <AmiBlitz3.ab3@21040>    BNE.w syntaxerr
00031404 <AmiBlitz3.ab3@21041>   MOVE.l D3,-(A7)
00031408 <AmiBlitz3.ab3@21042>    BSR.w AJL_0_BF6E
0003140A <AmiBlitz3.ab3@21043>   MOVE.l D3,D1
0003140C <AmiBlitz3.ab3@21044>   MOVE.l (A7)+,D3
0003140E <AmiBlitz3.ab3@21045>   MOVE.w (A7)+,D2
00031412 <AmiBlitz3.ab3@21046>    BEQ.w JL_0_C774
00031416 <AmiBlitz3.ab3@21050>   CMP.w #$1,D2
0003141A <AmiBlitz3.ab3@21051>    BEQ.w JL_0_C768
0003141C <AmiBlitz3.ab3@21054>   SWAP D1
00031420 <AmiBlitz3.ab3@21055>    BSR.w writeword
00031422 <AmiBlitz3.ab3@21056>   SWAP D1
00031426 <AmiBlitz3.ab3@21057>    BSR.w writeword
00031428 <AmiBlitz3.ab3@21058>   SUBQ.l #1,D3
0003142C <AmiBlitz3.ab3@21059>    BNE.w JL_0_C754
0003142E <AmiBlitz3.ab3@21060> RTS
00031432 <AmiBlitz3.ab3@21063>    BSR.w writeword
00031434 <AmiBlitz3.ab3@21064>   SUBQ.l #1,D3
00031438 <AmiBlitz3.ab3@21065>    BNE.w JL_0_C768
0003143A <AmiBlitz3.ab3@21066> RTS
0003143E <AmiBlitz3.ab3@21069>    BSR.w writebyte
00031440 <AmiBlitz3.ab3@21070>   SUBQ.l #1,D3
00031444 <AmiBlitz3.ab3@21071>    BNE.w JL_0_C774
00031446 <AmiBlitz3.ab3@21072> RTS
0003144A <AmiBlitz3.ab3@21076>   BSR.w JL_0_C6F0                                          ;definestorage
0003144C <AmiBlitz3.ab3@21077>   MOVE.w D1,-(A7)
00031450 <AmiBlitz3.ab3@21078>   BSR.w AJL_0_BF6E
00031452 <AmiBlitz3.ab3@21079>   MOVE.w (A7)+,D1
00031454 <AmiBlitz3.ab3@21080>   LSL.l D1,D3
00031456 <AmiBlitz3.ab3@21081>   MOVE.l d3,d0
0003145A <AmiBlitz3.ab3@21082>   BEQ 'll5
0003145C <AmiBlitz3.ab3@21083>   MOVEQ #0,d1
00031462 <AmiBlitz3.ab3@21086>     JSR writebyte
00031464 <AmiBlitz3.ab3@21087>     SUBQ.l #1,d3
00031468 <AmiBlitz3.ab3@21088>   BNE.s 'll10
0003146A <AmiBlitz3.ab3@21091> RTS
0003146C <AmiBlitz3.ab3@21095>   MOVE.w D0,-(A7)
00031472 <AmiBlitz3.ab3@21096>   LEA dummyasm,A0
00031478 <AmiBlitz3.ab3@21097>   MOVEA.l destpointer,A1
00031482 <AmiBlitz3.ab3@21098>   MOVE.w asmlen2,asmlen
00031488 <AmiBlitz3.ab3@21099>   JSR insasm
0003148A <AmiBlitz3.ab3@21100>   MOVE.w (A7)+,D0
0003148C <AmiBlitz3.ab3@21101> RTS
00031490 <AmiBlitz3.ab3@21105>   BSR.w JL_0_C6F0
0003149A <AmiBlitz3.ab3@21107>   MOVE.l #ptr_parameterstore,asmbuff
0003149C <AmiBlitz3.ab3@21108>   TST.w D1
000314A0 <AmiBlitz3.ab3@21109>    BEQ.w JL_0_C7EE
000314A4 <AmiBlitz3.ab3@21110>   CMP.w #$1,D1
000314A8 <AmiBlitz3.ab3@21111>    BEQ.w JL_0_C844
000314AC <AmiBlitz3.ab3@21112>   CMP.w #$2,d1
000314B0 <AmiBlitz3.ab3@21113>    BEQ long
000314B4 <AmiBlitz3.ab3@21114>   CMP.w #$3,d1
000314B8 <AmiBlitz3.ab3@21115>    BEQ single
000314BA <AmiBlitz3.ab3@21116>    MOVEQ.l #$0d,D3
000314C0 <AmiBlitz3.ab3@21122>    JSR asmconst
000314C4 <AmiBlitz3.ab3@21123>    BSR.w JL_0_C796
000314C8 <AmiBlitz3.ab3@21124>    BSR.w writelong
000314CC <AmiBlitz3.ab3@21125>    BSR   writelong
000314D0 <AmiBlitz3.ab3@21126>   CMP.w #$2C,D0
000314D4 <AmiBlitz3.ab3@21127>    BEQ.w JL_0_C7D8b
000314D6 <AmiBlitz3.ab3@21128> RTS
000314D8 <AmiBlitz3.ab3@21132>   MOVEQ.l #$0B,D3
000314E0 <AmiBlitz3.ab3@21136>   MOVE.b #1,_dcb
000314E6 <AmiBlitz3.ab3@21139>   JSR asmconst
000314EC <AmiBlitz3.ab3@21140>   CLR.b _dcb
000314F0 <AmiBlitz3.ab3@21141>   BSR.w JL_0_C796
000314F4 <AmiBlitz3.ab3@21142>   BSR writebyte
000314F8 <AmiBlitz3.ab3@21143>   BSR writebyte
000314FC <AmiBlitz3.ab3@21144>   BSR writebyte                                            ;long
00031500 <AmiBlitz3.ab3@21145>   BSR writebyte
00031504 <AmiBlitz3.ab3@21146>   CMP.w #$2C,D0
00031508 <AmiBlitz3.ab3@21147>    BEQ.w JL_0_C7D8
0003150A <AmiBlitz3.ab3@21148> RTS
0003150C <AmiBlitz3.ab3@21152>   MOVEQ.l #$0c,D3
00031514 <AmiBlitz3.ab3@21156>   MOVE.b #1,_dcb
0003151A <AmiBlitz3.ab3@21159>   JSR asmconst
00031520 <AmiBlitz3.ab3@21160>   CLR.b _dcb
00031524 <AmiBlitz3.ab3@21161>   BSR.w JL_0_C796
00031528 <AmiBlitz3.ab3@21162>   BSR.w writebyte
0003152C <AmiBlitz3.ab3@21163>   BSR.w writebyte
00031530 <AmiBlitz3.ab3@21164>   BSR.w writebyte
00031534 <AmiBlitz3.ab3@21165>   BSR.w writebyte
00031538 <AmiBlitz3.ab3@21166>   CMP.w #$2C,D0
0003153C <AmiBlitz3.ab3@21167>    BEQ.w JL_0_C7D8a
0003153E <AmiBlitz3.ab3@21168> RTS
00031540 <AmiBlitz3.ab3@21173>   MOVEQ.l #$11,D3
00031546 <AmiBlitz3.ab3@21176>   JSR get1bytemain
0003154A <AmiBlitz3.ab3@21177>   CMP.w #$22,D0
0003154E <AmiBlitz3.ab3@21178>    BNE.w JL_0_C81E
00031550 <AmiBlitz3.ab3@21181>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031554 <AmiBlitz3.ab3@21182>    BEQ.w syntaxerr
00031558 <AmiBlitz3.ab3@21183>   CMP.w #$22,D0
0003155C <AmiBlitz3.ab3@21184>    BEQ.w JL_0_C816
00031560 <AmiBlitz3.ab3@21185>   CMP.b #"\",d0
00031564 <AmiBlitz3.ab3@21186>    BNE 'n1
00031568 <AmiBlitz3.ab3@21187>   CMP.b #"\",(a5)
0003156C <AmiBlitz3.ab3@21188>    BEQ 'do1
0003156E <AmiBlitz3.ab3@21191>   MOVE.w D0,D1
00031572 <AmiBlitz3.ab3@21192>   BSR.w writebyte
00031576 <AmiBlitz3.ab3@21193> BRA.w JL_0_C7FC
0003157E <AmiBlitz3.ab3@21196>   CMP.l #"__DA",1(a5)
00031582 <AmiBlitz3.ab3@21197>    BNE 'nodate1
0003158A <AmiBlitz3.ab3@21198>   CMP.l #"TE__",5(a5)
0003158E <AmiBlitz3.ab3@21199>    BEQ 'c1
00031596 <AmiBlitz3.ab3@21200>   CMP.l #"TE_G",5(a5)
0003159A <AmiBlitz3.ab3@21201>    BNE 'nodate1
000315A2 <AmiBlitz3.ab3@21202>   CMP.l #"ER__",9(a5)
000315A6 <AmiBlitz3.ab3@21203>    BNE 'nodate1
000315AC <AmiBlitz3.ab3@21204>   JSR compiledatedc_ger
000315B0 <AmiBlitz3.ab3@21205> BRA 'n1
000315B6 <AmiBlitz3.ab3@21208>   JSR compiledatedc
000315BA <AmiBlitz3.ab3@21209> BRA 'n1
000315C2 <AmiBlitz3.ab3@21212>   CMP.l #"__VE",1(a5)
000315C6 <AmiBlitz3.ab3@21213>    BNE 'n1
000315CC <AmiBlitz3.ab3@21214>   CMP.w #"R_",5(a5)
000315D0 <AmiBlitz3.ab3@21215>    BNE 'n1
000315D6 <AmiBlitz3.ab3@21216>   JSR version_string_dc
000315DA <AmiBlitz3.ab3@21217> BRA.w JL_0_C7FC
000315E0 <AmiBlitz3.ab3@21221>   CLR.w instringon
000315E6 <AmiBlitz3.ab3@21222>   JSR get1bytemain
000315EA <AmiBlitz3.ab3@21223> BRA.w JL_0_C83A
000315F4 <AmiBlitz3.ab3@21228>    MOVE.w oldqflag,instringon
000315FA <AmiBlitz3.ab3@21229>   MOVEA.l lastsourcepos,A5
00031600 <AmiBlitz3.ab3@21230>    JSR asmconst
00031606 <AmiBlitz3.ab3@21231>   SUBQ.l #1,destpointer
0003160A <AmiBlitz3.ab3@21232>    BSR.w JL_0_C796
00031610 <AmiBlitz3.ab3@21233>   ADDQ.l #1,destpointer
00031614 <AmiBlitz3.ab3@21234>    BSR.w writebyte
00031618 <AmiBlitz3.ab3@21237>   CMP.w #$2C,D0
0003161C <AmiBlitz3.ab3@21238>    BEQ.w JL_0_C7F0
0003161E <AmiBlitz3.ab3@21239> RTS
00031620 <AmiBlitz3.ab3@21243>   MOVEQ.l #$10,D3
00031628 <AmiBlitz3.ab3@21249>   MOVE.b #1,_dcb
0003162E <AmiBlitz3.ab3@21250>   JSR asmconst
00031634 <AmiBlitz3.ab3@21251>   CLR.b _dcb
00031638 <AmiBlitz3.ab3@21252>   BSR.w JL_0_C796
0003163C <AmiBlitz3.ab3@21253>   BSR.w writebyte
00031640 <AmiBlitz3.ab3@21254>   BSR.w writebyte
00031644 <AmiBlitz3.ab3@21255>   CMP.w #$2C,D0
00031648 <AmiBlitz3.ab3@21256>    BEQ.w JL_0_C84A
0003164A <AmiBlitz3.ab3@21257> RTS
00031650 <AmiBlitz3.ab3@21261>   ADDQ.l #3,destpointer
00031658 <AmiBlitz3.ab3@21262>   ANDI.w #$FFFC,destpointer+2
0003165A <AmiBlitz3.ab3@21263> RTS
00031660 <AmiBlitz3.ab3@21267>   ADDQ.l #7,destpointer
00031668 <AmiBlitz3.ab3@21268>   ANDI.w #$FFF8,destpointer+2
0003166A <AmiBlitz3.ab3@21269> RTS
00031670 <AmiBlitz3.ab3@21273>   ADDQ.l #1,destpointer                                    ;even
00031678 <AmiBlitz3.ab3@21274>   BCLR #$0,destpointer+3
0003167A <AmiBlitz3.ab3@21275> RTS
0003167C <AmiBlitz3.ab3@21278> datasize: Ds.w 1
00031682 <AmiBlitz3.ab3@21288>   TST.b debugmode
00031686 <AmiBlitz3.ab3@21289>   BEQ.w pdt__skip
0003168A <AmiBlitz3.ab3@21290>   MOVE.w #$4420,D0                                         ;'D '
0003168E <AmiBlitz3.ab3@21291>   MOVE.b datasize+1(PC),D0
00031692 <AmiBlitz3.ab3@21292> BRA.w JL_0_C1E6
00031694 <AmiBlitz3.ab3@21295> RTS
00031698 <AmiBlitz3.ab3@21299>   MOVE.w #$FC17,D1
0003169E <AmiBlitz3.ab3@21300>    JSR uselib
000316A8 <AmiBlitz3.ab3@21302>    MOVE.w oldqflag,instringon
000316AE <AmiBlitz3.ab3@21303>   MOVEA.l lastsourcepos,A5
000316B4 <AmiBlitz3.ab3@21304>    JSR AJL_0_498A
000316BA <AmiBlitz3.ab3@21305>   MOVE.w D1,datasize
000316BE <AmiBlitz3.ab3@21306>   CMP.w #$7,D1
000316C2 <AmiBlitz3.ab3@21307>    BEQ.w JL_0_C944
000316C4 <AmiBlitz3.ab3@21308>   MOVE.w D1,-(A7)
000316C8 <AmiBlitz3.ab3@21311>   BSR.w pdt
000316CA <AmiBlitz3.ab3@21312>   MOVE.w (A7),D2
000316CE <AmiBlitz3.ab3@21313>    BSR.w JL_0_B1D8
000316D0 <AmiBlitz3.ab3@21314>   CMP.w (A7),D2                                            ;datamode
000316D4 <AmiBlitz3.ab3@21315>    BEQ.w JL_0_C920
000316D6 <AmiBlitz3.ab3@21316>   MOVE.w D2,D1
000316D8 <AmiBlitz3.ab3@21317>   MOVE.w (A7),D2
000316DC <AmiBlitz3.ab3@21318>   CMP.w #$2,D2
000316E0 <AmiBlitz3.ab3@21319>    BNE.w JL_0_C8FE
000316E4 <AmiBlitz3.ab3@21320>   CMP.w #$3,D1
000316E8 <AmiBlitz3.ab3@21321>    BNE.w baddaterr
000316EE <AmiBlitz3.ab3@21322>   CMP.l #$10000,D3
000316F2 <AmiBlitz3.ab3@21323>    BCC.w baddaterr
000316F6 <AmiBlitz3.ab3@21324> BRA.w JL_0_C920
000316FA <AmiBlitz3.ab3@21327>   CMP.w #$1,D2
000316FE <AmiBlitz3.ab3@21328>    BNE.w JL_0_C91C
00031702 <AmiBlitz3.ab3@21329>   CMP.w #$2,D1
00031706 <AmiBlitz3.ab3@21330>    BNE.w baddaterr
0003170C <AmiBlitz3.ab3@21331>   CMP.l #$100,D3
00031710 <AmiBlitz3.ab3@21332>    BCC.w baddaterr
00031714 <AmiBlitz3.ab3@21333> BRA.w JL_0_C920
00031718 <AmiBlitz3.ab3@21336> BRA.w baddaterr
0003171C <AmiBlitz3.ab3@21339>   CMP.w #$3,D2
00031720 <AmiBlitz3.ab3@21340>   BCC.w JL_0_C930
00031724 <AmiBlitz3.ab3@21341>   BSR.w JL_0_C1E6
00031728 <AmiBlitz3.ab3@21342> BRA.w JL_0_C934
0003172E <AmiBlitz3.ab3@21345>   TST.b iee
00031732 <AmiBlitz3.ab3@21346>   BEQ 'old
00031736 <AmiBlitz3.ab3@21347>   CMP.b #5,d2
0003173A <AmiBlitz3.ab3@21348>   BNE 'old
0003173E <AmiBlitz3.ab3@21349>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031742 <AmiBlitz3.ab3@21353>   BSR.w JL_0_C1DE                                          ;write data >3
00031748 <AmiBlitz3.ab3@21356>   JSR reget
0003174C <AmiBlitz3.ab3@21357>   CMP.w #$2C,D0
00031750 <AmiBlitz3.ab3@21358>    BEQ.w JL_0_C8CC
00031752 <AmiBlitz3.ab3@21359>   ADDQ.w #2,A7
00031754 <AmiBlitz3.ab3@21360> RTS
00031758 <AmiBlitz3.ab3@21363>    BSR.w pdt
0003175E <AmiBlitz3.ab3@21364>   MOVE.l data2,-(A7)
00031762 <AmiBlitz3.ab3@21365>    BSR.w JL_0_C1DE
00031764 <AmiBlitz3.ab3@21366>   MOVEQ.l #$00,D1
0003176A <AmiBlitz3.ab3@21367>    JSR get1bytemain
0003176E <AmiBlitz3.ab3@21368>    BEQ.w JL_0_C9A6
00031772 <AmiBlitz3.ab3@21369>   CMP.w #$22,D0
00031776 <AmiBlitz3.ab3@21370>    BEQ.w JL_0_C988
0003177A <AmiBlitz3.ab3@21371>   CMP.w #$2C,D0
0003177E <AmiBlitz3.ab3@21372>    BEQ.w JL_0_C9A6
00031782 <AmiBlitz3.ab3@21375>    BSR.w JL_0_C210
00031784 <AmiBlitz3.ab3@21376>   ADDQ.w #1,D1
0003178A <AmiBlitz3.ab3@21377>    JSR getchar
0003178C <AmiBlitz3.ab3@21378>   TST.w D0
00031790 <AmiBlitz3.ab3@21379>    BEQ.w JL_0_C9A6
00031794 <AmiBlitz3.ab3@21380>   CMP.w #$2C,D0
00031798 <AmiBlitz3.ab3@21381>    BEQ.w JL_0_C9A6
0003179C <AmiBlitz3.ab3@21382> BRA.w JL_0_C96C
0003179E <AmiBlitz3.ab3@21386>    MOVEQ #0,d0
000317A0 <AmiBlitz3.ab3@21387>    MOVE.b (a5)+,d0
000317A4 <AmiBlitz3.ab3@21388>    BEQ.w notqerr2
000317A8 <AmiBlitz3.ab3@21389>   CMP.w #$22,D0
000317AC <AmiBlitz3.ab3@21390>    BEQ.w JL_0_C9A2
000317B0 <AmiBlitz3.ab3@21391>    BSR.w JL_0_C210
000317B2 <AmiBlitz3.ab3@21392>   ADDQ.w #1,D1
000317B6 <AmiBlitz3.ab3@21393> BRA.w JL_0_C988
000317BC <AmiBlitz3.ab3@21394> notqerr2 JMP notqerr
000317C2 <AmiBlitz3.ab3@21396>   CLR.w instringon
000317C8 <AmiBlitz3.ab3@21397>   JSR get1bytemain
000317CA <AmiBlitz3.ab3@21400>   MOVEA.l (A7)+,A0
000317D0 <AmiBlitz3.ab3@21401>   MOVE.w dontwrite,D2
000317D4 <AmiBlitz3.ab3@21402>    BNE.w JL_0_C9B4
000317D6 <AmiBlitz3.ab3@21403>   MOVE.l D1,(A0)
000317DC <AmiBlitz3.ab3@21406>   ADDQ.l #1,data2
000317E4 <AmiBlitz3.ab3@21407>   BCLR #$0,data2+3
000317E8 <AmiBlitz3.ab3@21408>   CMP.w #$2C,D0
000317EC <AmiBlitz3.ab3@21409>    BEQ.w JL_0_C944
000317EE <AmiBlitz3.ab3@21410> RTS
000317F4 <AmiBlitz3.ab3@21414> JMP vardeclareerr
000317FA <AmiBlitz3.ab3@21417>   MOVE.w proceduremode,D1                                  ;doshared
000317FE <AmiBlitz3.ab3@21419>   BNE.w 'l1
00031800 <AmiBlitz3.ab3@21420>   MOVE.w D1,-(A7)
00031806 <AmiBlitz3.ab3@21421>   CLR.w proceduremode
0003180C <AmiBlitz3.ab3@21424>   LEA varbase,a2
00031810 <AmiBlitz3.ab3@21425>   BSR.w getparameter
00031812 <AmiBlitz3.ab3@21426>   MOVE.w d2,-(a7)
00031818 <AmiBlitz3.ab3@21427>    JSR findvariable
0003181C <AmiBlitz3.ab3@21428>    BEQ 'checkdim
00031822 <AmiBlitz3.ab3@21429>    LEA sharebase,a2
00031824 <AmiBlitz3.ab3@21430>    MOVEQ #$f+4,d7
00031828 <AmiBlitz3.ab3@21431>    BSR.w findlab                                         ;find var
0003182C <AmiBlitz3.ab3@21432>    BEQ.b dupsherr
00031830 <AmiBlitz3.ab3@21433>    BSR addlabel
00031834 <AmiBlitz3.ab3@21434>    CMP.b #".",d0
00031838 <AmiBlitz3.ab3@21435>    BNE JUMP_vardeclareerr
0003183A <AmiBlitz3.ab3@21436>    MOVE.l a2,a3
00031840 <AmiBlitz3.ab3@21437>    JSR JL_0_8EB8b
00031842 <AmiBlitz3.ab3@21468>   MOVE.w (a7)+,d2
00031846 <AmiBlitz3.ab3@21469>    CMP.b #",",d0
0003184A <AmiBlitz3.ab3@21470>    BNE 'ret
00031850 <AmiBlitz3.ab3@21471>    JSR get1bytemain
00031854 <AmiBlitz3.ab3@21472> BRA 'again2
0003185A <AmiBlitz3.ab3@21475>   MOVE.w (A7)+,proceduremode
0003185C <AmiBlitz3.ab3@21476> RTS
00031862 <AmiBlitz3.ab3@21483>    CMP.w #2,6(a2)
00031866 <AmiBlitz3.ab3@21484>    BEQ 'do
0003186C <AmiBlitz3.ab3@21485>    CMP.w #$102,6(a2)
00031870 <AmiBlitz3.ab3@21486>    BEQ 'do
00031876 <AmiBlitz3.ab3@21487> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003187C <AmiBlitz3.ab3@21490>   LEA varbase,a0
0003187E <AmiBlitz3.ab3@21493>   MOVE.l (A0),D0                                           ;find label
00031882 <AmiBlitz3.ab3@21494>    BEQ.b 'z1
00031884 <AmiBlitz3.ab3@21495>    CMP.l d0,a2
00031888 <AmiBlitz3.ab3@21496>    BEQ 'z1
0003188A <AmiBlitz3.ab3@21497>    MOVE.l d0,a0
0003188E <AmiBlitz3.ab3@21498> BRA 'm1
00031890 <AmiBlitz3.ab3@21501>   MOVE.l (a2),d1
00031892 <AmiBlitz3.ab3@21502>     MOVE.l d1,(a0)
00031894 <AmiBlitz3.ab3@21503>     CLR.l (a2)
0003189A <AmiBlitz3.ab3@21504>     LEA sharebase,a0
0003189C <AmiBlitz3.ab3@21505>     MOVE.l (a0),(a2)
0003189E <AmiBlitz3.ab3@21506>     MOVE.l a2,(a0)
000318A4 <AmiBlitz3.ab3@21507>     JSR get1bytemain
000318AA <AmiBlitz3.ab3@21508>     JSR get1bytemain
000318AE <AmiBlitz3.ab3@21509> BRA 'domore
000318B6 <AmiBlitz3.ab3@21512>   MOVE.b #1,nowdeclare
000318B8 <AmiBlitz3.ab3@21513>   MOVE.w D1,-(A7)
000318BE <AmiBlitz3.ab3@21514>   CLR.w proceduremode
000318C2 <AmiBlitz3.ab3@21517>    BSR.w getparameter
000318C4 <AmiBlitz3.ab3@21518>   MOVE.w D2,-(A7)
000318CA <AmiBlitz3.ab3@21519>   LEA firstglob,A2
000318CE <AmiBlitz3.ab3@21520>    BSR.w findvariable2
000318D2 <AmiBlitz3.ab3@21521>    BNE.b JL_0_CA06
000318D8 <AmiBlitz3.ab3@21524>   MOVE.b flagmask+1,D1
000318DC <AmiBlitz3.ab3@21525>   MOVE.b $7(A2),D3
000318DE <AmiBlitz3.ab3@21526>   EOR.b D3,D1
000318E2 <AmiBlitz3.ab3@21527>    BEQ.w dupsherr
000318E6 <AmiBlitz3.ab3@21528>    BSR.w findlab
000318EA <AmiBlitz3.ab3@21529>    BEQ.b JL_0_C9F0
000318EE <AmiBlitz3.ab3@21532>    BSR.w addlabel
000318F0 <AmiBlitz3.ab3@21533>   MOVE.w (A7)+,D2
000318F2 <AmiBlitz3.ab3@21534>   MOVE.l A2,-(A7)
000318F6 <AmiBlitz3.ab3@21535>    BSR.w JL_0_8E3C
000318F8 <AmiBlitz3.ab3@21536>   MOVEA.l (A7)+,A2
000318FA <AmiBlitz3.ab3@21537>   MOVEQ.l #$04,D1
000318FC <AmiBlitz3.ab3@21538>   ADDQ.w #4,A2
000318FE <AmiBlitz3.ab3@21539>   ADDQ.w #4,A3
00031900 <AmiBlitz3.ab3@21542>     MOVE.w (A3)+,(A2)+
00031904 <AmiBlitz3.ab3@21543>   DBF D1,JL_0_CA1A
0003190C <AmiBlitz3.ab3@21545>   BTST #$1,flagmask+1
00031910 <AmiBlitz3.ab3@21546>    BEQ.w JL_0_CA3C
00031916 <AmiBlitz3.ab3@21547>    JSR get1bytemain
0003191A <AmiBlitz3.ab3@21548>   CMP.w #$29,D0
0003191E <AmiBlitz3.ab3@21549>    BNE.w syntaxerrc
00031924 <AmiBlitz3.ab3@21550>    JSR get1bytemain
00031928 <AmiBlitz3.ab3@21553>    CMP.w #$2C,D0
0003192C <AmiBlitz3.ab3@21554>    BNE.w JL_0_CA4C
00031932 <AmiBlitz3.ab3@21555>    JSR get1bytemain
00031936 <AmiBlitz3.ab3@21556> BRA.w JL_0_C9DE
0003193C <AmiBlitz3.ab3@21559>   MOVE.w (A7)+,proceduremode
0003193E <AmiBlitz3.ab3@21560> RTS
00031944 <AmiBlitz3.ab3@21562> syntaxerrc JMP syntaxerr
00031948 <AmiBlitz3.ab3@21565>    BSR.w JL_0_C05C
0003194E <AmiBlitz3.ab3@21566>    JSR check_incdir                                        ; ergebnis in d2
00031954 <AmiBlitz3.ab3@21568>    LEA ptr_parameterstore,a1
00031956 <AmiBlitz3.ab3@21569>    MOVE.l d2,-(a7)
0003195C <AmiBlitz3.ab3@21570>    LEA includetemp,a0                                      ; filename in includetemp packen
0003195E <AmiBlitz3.ab3@21573>      MOVE.b (a1)+,(a0)+
00031962 <AmiBlitz3.ab3@21574>    BNE 'l4
00031968 <AmiBlitz3.ab3@21576>    LEA ptr_parameterstore,a1
0003196A <AmiBlitz3.ab3@21577>    MOVE.l a1,a0
0003196C <AmiBlitz3.ab3@21580>     TST.b (a0)+
00031970 <AmiBlitz3.ab3@21581>    BNE 'l1
00031972 <AmiBlitz3.ab3@21584>      MOVE.b -(a0),d0
00031976 <AmiBlitz3.ab3@21585>      CMP.b #":",d0
0003197A <AmiBlitz3.ab3@21586>       BEQ 'out
0003197E <AmiBlitz3.ab3@21587>      CMP.b #"/",d0
00031982 <AmiBlitz3.ab3@21588>       BEQ 'out
00031984 <AmiBlitz3.ab3@21589>      CMP.l a1,a0
00031988 <AmiBlitz3.ab3@21590>       BEQ 'out2
0003198C <AmiBlitz3.ab3@21591> BRA 'l2
0003198E <AmiBlitz3.ab3@21594>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031990 <AmiBlitz3.ab3@21597>    MOVEQ.l #-$01,D2
00031992 <AmiBlitz3.ab3@21600>      ADDQ.w #1,D2
00031994 <AmiBlitz3.ab3@21601>      MOVE.b (a0)+,(a1)+
00031998 <AmiBlitz3.ab3@21602>    BNE 'l3
0003199A <AmiBlitz3.ab3@21603>    CLR.b (a1)+
000319A0 <AmiBlitz3.ab3@21605>    LEA ptr_parameterstore,a1
000319A4 <AmiBlitz3.ab3@21606>    BSR.w findxinc                                         ;find include
000319A8 <AmiBlitz3.ab3@21607>     BEQ.w 'outb
000319AA <AmiBlitz3.ab3@21609>    MOVE.w D2,-(A7)
000319AE <AmiBlitz3.ab3@21610>    BSR.w addlabel
000319B0 <AmiBlitz3.ab3@21611>    MOVE.w (A7)+,D2
000319B6 <AmiBlitz3.ab3@21613>    LEA ptr_parameterstore,a1
000319BC <AmiBlitz3.ab3@21614>    LEA includetemp,a0                                      ; namen in includetemp schreiben
000319BE <AmiBlitz3.ab3@21617>     MOVE.b (a0)+,(a1)+
000319C2 <AmiBlitz3.ab3@21618>    BNE 'l4b
000319C4 <AmiBlitz3.ab3@21620>    MOVE.l (a7)+,d2
000319CA <AmiBlitz3.ab3@21621>    LEA ptr_parameterstore,a1
000319CE <AmiBlitz3.ab3@21622> BRA.w JL_0_CB18
000319D4 <AmiBlitz3.ab3@21625>    LEA ptr_parameterstore,a1
000319DA <AmiBlitz3.ab3@21626>    LEA includetemp,a0
000319DC <AmiBlitz3.ab3@21629>     MOVE.b (a0)+,(a1)+
000319E0 <AmiBlitz3.ab3@21630>    BNE 'l4b2
000319E2 <AmiBlitz3.ab3@21632>    MOVE.l (a7)+,d2
000319E8 <AmiBlitz3.ab3@21633>    LEA ptr_parameterstore,a1
000319EA <AmiBlitz3.ab3@21636> RTS
000319EE <AmiBlitz3.ab3@21640>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000319F4 <AmiBlitz3.ab3@21642>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000319FA <AmiBlitz3.ab3@21644>   MOVEA.l _dosbase,A6
000319FC <AmiBlitz3.ab3@21645>   MOVE.l D0,D7                                                 ; store Lockpointer
00031A00 <AmiBlitz3.ab3@21646>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031A02 <AmiBlitz3.ab3@21647>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031A08 <AmiBlitz3.ab3@21648>   MOVE.l ptr_macrobuffer_begin,D2
00031A0C <AmiBlitz3.ab3@21649>    JSR _Examine(A6)
00031A12 <AmiBlitz3.ab3@21650>   MOVEA.l ptr_macrobuffer_begin,A0
00031A16 <AmiBlitz3.ab3@21651>   MOVE.l $4(A0),D0
00031A1A <AmiBlitz3.ab3@21652>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031A1E <AmiBlitz3.ab3@21653>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00031A20 <AmiBlitz3.ab3@21654>   MOVE.l D7,D1                                                 ; begin unlock the file
00031A24 <AmiBlitz3.ab3@21655>    JSR _UnLock(A6)
00031A2A <AmiBlitz3.ab3@21657>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031A30 <AmiBlitz3.ab3@21658>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031A34 <AmiBlitz3.ab3@21659>    JSR _Open(A6)
00031A36 <AmiBlitz3.ab3@21660>   MOVE.l D0,D7
00031A3A <AmiBlitz3.ab3@21661>    BEQ.w error_cant_open_include
00031A40 <AmiBlitz3.ab3@21662>   MOVE.l destpointer,D0
00031A42 <AmiBlitz3.ab3@21663>   ADD.l D3,D0
00031A48 <AmiBlitz3.ab3@21664>   CMP.l destbufferend,D0
00031A4C <AmiBlitz3.ab3@21665>    BHI.w JL_0_CAF6
00031A52 <AmiBlitz3.ab3@21666>   MOVE.l destpointer,D2
00031A54 <AmiBlitz3.ab3@21667>   MOVE.l D7,D1
00031A58 <AmiBlitz3.ab3@21668>    JSR _Read(A6)
00031A5E <AmiBlitz3.ab3@21669>   CMP.l #$FFFFFFFF,D0
00031A62 <AmiBlitz3.ab3@21670>    BEQ.w error_reading_file
00031A68 <AmiBlitz3.ab3@21671>   ADD.l D0,destpointer
00031A6C <AmiBlitz3.ab3@21672> BRA.w JL_0_CB04
00031A74 <AmiBlitz3.ab3@21675>   MOVE.w #$FFFF,dontwrite
00031A7A <AmiBlitz3.ab3@21676>   MOVE.l D0,destpointer
00031A7C <AmiBlitz3.ab3@21679>   MOVE.l D7,D1
00031A80 <AmiBlitz3.ab3@21680> JMP _Close(A6)
00031A86 <AmiBlitz3.ab3@21684> JMP illdirerr
00031A8C <AmiBlitz3.ab3@21687>   TST.w dirmode                                            ;include  open
00031A90 <AmiBlitz3.ab3@21688>    BNE.w JUMP_illdirerr
00031A94 <AmiBlitz3.ab3@21689>   BSR.w JL_0_C05C
00031A9A <AmiBlitz3.ab3@21690>   JSR check_incdir
00031A9E <AmiBlitz3.ab3@21693>   BSR.w findconstant
00031AA2 <AmiBlitz3.ab3@21694>    BEQ.w alincerr
00031AA8 <AmiBlitz3.ab3@21696>   LEA constantbase,A2
00031AAC <AmiBlitz3.ab3@21697>   BSR.w addhere2
00031AB0 <AmiBlitz3.ab3@21698>   CLR.w $C(A2)
00031AB4 <AmiBlitz3.ab3@21699>   CLR.l $4(A2)
00031ABA <AmiBlitz3.ab3@21701>   MOVE.l #ptr_parameterstore,D1
00031ABC <AmiBlitz3.ab3@21702>   MOVE.l d1,a0
00031AC2 <AmiBlitz3.ab3@21703>   LEA includetemp2,a1
00031AC4 <AmiBlitz3.ab3@21706>     MOVE.b (a0)+,(a1)+
00031AC8 <AmiBlitz3.ab3@21707>   BNE 'l1
00031ACE <AmiBlitz3.ab3@21708>   JSR save_includename
00031AD8 <AmiBlitz3.ab3@21709>   MOVE.l #0,include_process
00031AE0 <AmiBlitz3.ab3@21711>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031AE4 <AmiBlitz3.ab3@21712>   BEQ 'ok
00031AEC <AmiBlitz3.ab3@21713>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031AF0 <AmiBlitz3.ab3@21714>   BEQ 'ok_tokenize
00031AF8 <AmiBlitz3.ab3@21715>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031AFC <AmiBlitz3.ab3@21716>   BEQ 'ok_tokenize
00031B04 <AmiBlitz3.ab3@21717>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031B08 <AmiBlitz3.ab3@21718>   BEQ 'ok
00031B0E <AmiBlitz3.ab3@21719> JMP errortoken                                             ;can only include
00031B18 <AmiBlitz3.ab3@21722>    MOVE.l #-1,include_process                              ; must tokenize the include
00031B1E <AmiBlitz3.ab3@21725>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031B24 <AmiBlitz3.ab3@21726>   MOVEA.l _dosbase,A6
00031B28 <AmiBlitz3.ab3@21727>   JSR _Open(A6)
00031B2C <AmiBlitz3.ab3@21728>   MOVE.l D0,$8(A2)
00031B30 <AmiBlitz3.ab3@21729>   BEQ.w error_cant_open_include
00031B36 <AmiBlitz3.ab3@21730>   CLR.l includeline
00031B3A <AmiBlitz3.ab3@21731>   MOVE.l 8(a2),d1
00031B3C <AmiBlitz3.ab3@21732>   MOVE.l d3,-(a7)
00031B3E <AmiBlitz3.ab3@21733>   MOVEQ #0,d2
00031B40 <AmiBlitz3.ab3@21734>   MOVEQ #1,d3
00031B44 <AmiBlitz3.ab3@21735>   JSR _Seek(a6)                                            ; -66
00031B48 <AmiBlitz3.ab3@21736>   MOVE.l 8(a2),d1
00031B4A <AmiBlitz3.ab3@21737>   MOVEQ #0,d2
00031B4C <AmiBlitz3.ab3@21738>   MOVEQ #-1,d3
00031B50 <AmiBlitz3.ab3@21739>   JSR _Seek(a6)                                            ; -66
00031B52 <AmiBlitz3.ab3@21740>   MOVE.l (a7)+,d3
00031B54 <AmiBlitz3.ab3@21741>   ADDQ.l #4,d0
00031B5A <AmiBlitz3.ab3@21743>   MOVE.l #$10000,D1
00031B60 <AmiBlitz3.ab3@21744>   MOVEA.l _execbase,A6
00031B64 <AmiBlitz3.ab3@21747>   JSR _AllocVec(a6)
00031B68 <AmiBlitz3.ab3@21749>   MOVE.l D0,$4(A2)
00031B6C <AmiBlitz3.ab3@21750>   MOVE.l D0,$E(A2)
00031B6E <AmiBlitz3.ab3@21751>   MOVEA.l D0,A5
00031B74 <AmiBlitz3.ab3@21758>   ADDQ.w #1,ininclude                                      ;enter include
00031B7A <AmiBlitz3.ab3@21761>   LEA _include,a0
00031B7E <AmiBlitz3.ab3@21762>   MOVEM.l a0-a6/d0-d7,-(a7)
00031B84 <AmiBlitz3.ab3@21763>   LEA ptr_parameterstore,a1
00031B86 <AmiBlitz3.ab3@21766>     MOVE.b (a0)+,(a1)+
00031B8A <AmiBlitz3.ab3@21767>   BNE 'l1b
00031B8C <AmiBlitz3.ab3@21769>   MOVEQ #9,d2
00031B92 <AmiBlitz3.ab3@21770>   JSR findlabel2
00031B96 <AmiBlitz3.ab3@21771>   BNE 'd
00031B9E <AmiBlitz3.ab3@21772>   MOVE.l #1,8(a2)
00031BA2 <AmiBlitz3.ab3@21773>   MOVEM.l (a7)+,a0-a6/d0-d7
00031BA6 <AmiBlitz3.ab3@21774> BRA 'd2
00031BAC <AmiBlitz3.ab3@21777>   JSR addlabelhash
00031BB4 <AmiBlitz3.ab3@21778>   MOVE.l #$1,$4(A2)
00031BBC <AmiBlitz3.ab3@21779>   MOVE.l #1,8(a2)
00031BC0 <AmiBlitz3.ab3@21780>   MOVEM.l (a7)+,a0-a6/d0-d7
00031BC6 <AmiBlitz3.ab3@21783>   LEA inctab,a0
00031BC8 <AmiBlitz3.ab3@21784>   MOVEQ #0,d1
00031BCE <AmiBlitz3.ab3@21785>   MOVE.w ininclude,d1
00031BD2 <AmiBlitz3.ab3@21786>   CLR.l $0(a0,d1*4)
00031BD8 <AmiBlitz3.ab3@21787>   MOVEA.l passstack,A7
00031BDE <AmiBlitz3.ab3@21788> JMP AJL_0_413A
00031BE4 <AmiBlitz3.ab3@21790> JUMP_dupmacerr JMP dupmacerr
00031BE6 <AmiBlitz3.ab3@21792> coolnest:   Ds.w 1
00031BEA <AmiBlitz3.ab3@21793> macline:    Ds.l 1
00031BF4 <AmiBlitz3.ab3@21797>   MOVE.l linenumat,macline
00031BF8 <AmiBlitz3.ab3@21798>    BSR.w makename2
00031BFC <AmiBlitz3.ab3@21799>    BEQ.w JUMP_syntaxerr
00031C02 <AmiBlitz3.ab3@21801>    CLR.b thenmode
00031C0C <AmiBlitz3.ab3@21803>    MOVE.w oldqflag,instringon
00031C12 <AmiBlitz3.ab3@21804>   MOVEA.l lastsourcepos,A5
00031C16 <AmiBlitz3.ab3@21805>    BSR.w findmac
00031C1A <AmiBlitz3.ab3@21806>    BEQ.w JUMP_dupmacerr
00031C1E <AmiBlitz3.ab3@21807>    BSR.w addlabel
00031C22 <AmiBlitz3.ab3@21808>   CLR.w $A(A2)
00031C28 <AmiBlitz3.ab3@21809>   MOVEA.l ptr_macrobuffer_begin,A0
00031C2A <AmiBlitz3.ab3@21810>   MOVEQ.l #$00,D2
00031C30 <AmiBlitz3.ab3@21811>   CLR.w coolnest
00031C32 <AmiBlitz3.ab3@21814>   MOVE.b (a5),d0
00031C36 <AmiBlitz3.ab3@21815>      BEQ 'l3
00031C3A <AmiBlitz3.ab3@21816>      CMP.b #" ",d0
00031C3E <AmiBlitz3.ab3@21817>       BNE 'l2                                              ;space macro
00031C40 <AmiBlitz3.ab3@21818>       ADDQ.l #1,a5
00031C44 <AmiBlitz3.ab3@21819> BRA 'l1
00031C48 <AmiBlitz3.ab3@21822>    CMP.b #";",d0
00031C4C <AmiBlitz3.ab3@21823>       BNE 'l3
00031C4E <AmiBlitz3.ab3@21826>    MOVE.b (a5),d0
00031C52 <AmiBlitz3.ab3@21827>       BEQ 'l5
00031C56 <AmiBlitz3.ab3@21828>       BSR.w JL_0_CC98                                      ;add comment
00031C58 <AmiBlitz3.ab3@21829>       ADDQ.l #1,a5
00031C5C <AmiBlitz3.ab3@21830> BRA 'l4
00031C60 <AmiBlitz3.ab3@21833>    MOVE.b #":",d0
00031C64 <AmiBlitz3.ab3@21834>       BSR.w JL_0_CC98
00031C68 <AmiBlitz3.ab3@21835>       MOVE.b #"@",d0
00031C6C <AmiBlitz3.ab3@21836>       BSR.w JL_0_CC98
00031C74 <AmiBlitz3.ab3@21839>    MOVE.b #0,temp
00031C7C <AmiBlitz3.ab3@21840>       MOVE.b #0,thenmode
00031C82 <AmiBlitz3.ab3@21843>   JSR getcharb
00031C84 <AmiBlitz3.ab3@21844>   TST.w D0
00031C88 <AmiBlitz3.ab3@21845>    BNE.w JL_0_CBDE
00031C8C <AmiBlitz3.ab3@21846>   MOVEM.l D2/A0/A2,-(A7)
00031C92 <AmiBlitz3.ab3@21847>   CMP.w #"@@",-3(a5)
00031C96 <AmiBlitz3.ab3@21848>   BNE 'l2a
00031C9C <AmiBlitz3.ab3@21849>   JSR nextline
00031CA0 <AmiBlitz3.ab3@21850>   BEQ.w JUMP_macenderr
00031CA4 <AmiBlitz3.ab3@21851>   MOVEM.l (A7)+,D2/A0/A2
00031CA8 <AmiBlitz3.ab3@21852> BRA.w JL_0_CBB6
00031CAE <AmiBlitz3.ab3@21855>    JSR nextline
00031CB2 <AmiBlitz3.ab3@21856>    BEQ.w JUMP_macenderr
00031CB6 <AmiBlitz3.ab3@21857>   MOVEM.l (A7)+,D2/A0/A2
00031CB8 <AmiBlitz3.ab3@21858>   TST.w D2
00031CBC <AmiBlitz3.ab3@21859>    BEQ.w JL_0_CBB6
00031CBE <AmiBlitz3.ab3@21862>   MOVE.b (a5),d0
00031CC2 <AmiBlitz3.ab3@21863>       CMP.b #" ",d0
00031CC6 <AmiBlitz3.ab3@21864>       BNE 'l1
00031CC8 <AmiBlitz3.ab3@21865>       ADDQ.w #1,a5
00031CCC <AmiBlitz3.ab3@21866> BRA 'l2
00031CD2 <AmiBlitz3.ab3@21869>   TST.b thenmode
00031CD6 <AmiBlitz3.ab3@21870>      BEQ 'l3
00031CD8 <AmiBlitz3.ab3@21871>      MOVEQ #":",d0
00031CDC <AmiBlitz3.ab3@21872>      BSR.w JL_0_CC98
00031CE0 <AmiBlitz3.ab3@21873>      MOVE.w #-$7FFE,D0                                     ;write end if
00031CE4 <AmiBlitz3.ab3@21874>      BSR macputw
00031CE8 <AmiBlitz3.ab3@21875>      MOVE.w #$800b,d0
00031CEC <AmiBlitz3.ab3@21876>      BSR.w macputw
00031CF2 <AmiBlitz3.ab3@21877>      CLR.b thenmode
00031CF4 <AmiBlitz3.ab3@21880>    MOVEQ.l #$3A,D0
00031CFC <AmiBlitz3.ab3@21881>      MOVE.b #1,temp
00031D00 <AmiBlitz3.ab3@21883> BRA.w JL_0_CC2A
00031D04 <AmiBlitz3.ab3@21887>   BPL.w JL_0_CC2A
00031D08 <AmiBlitz3.ab3@21888>   CMP.w #-$7FF3,D0                                         ;macro ?
00031D0C <AmiBlitz3.ab3@21889>    BNE.w JL_0_CBF4
00031D12 <AmiBlitz3.ab3@21890>   ADDQ.w #1,coolnest
00031D16 <AmiBlitz3.ab3@21891> BRA.w JL_0_CC22
00031D1C <AmiBlitz3.ab3@21893> JUMP_macnesterr JMP macnesterr
00031D20 <AmiBlitz3.ab3@21896>   CMP.w #$80d7,d0                                          ;object ?
00031D24 <AmiBlitz3.ab3@21897>     BNE 'l1x
00031D2A <AmiBlitz3.ab3@21898>     TST.b objectcount
00031D2E <AmiBlitz3.ab3@21899>     BNE JUMP_macnesterr
00031D32 <AmiBlitz3.ab3@21902>   CMP.w #$8021,d0
00031D36 <AmiBlitz3.ab3@21903>     BNE 'nothen
00031D3E <AmiBlitz3.ab3@21904>     MOVE.b #1,thenmode
00031D44 <AmiBlitz3.ab3@21907>   TST.b thenmode
00031D48 <AmiBlitz3.ab3@21908>         BEQ 'l1
00031D4C <AmiBlitz3.ab3@21909>    CMP.w #$8002,d0                                         ;end if
00031D50 <AmiBlitz3.ab3@21910>    BNE 'l1
00031D54 <AmiBlitz3.ab3@21911>    MOVEM.l d0/a5,-(a7)
00031D5A <AmiBlitz3.ab3@21912>    JSR get1bytemain
00031D5C <AmiBlitz3.ab3@21913>    MOVE.w d0,d1
00031D60 <AmiBlitz3.ab3@21914>    MOVEM.l (a7)+,a5/d0
00031D64 <AmiBlitz3.ab3@21915>    CMP.w #$800b,d1
00031D68 <AmiBlitz3.ab3@21916>    BNE 'l1
00031D6E <AmiBlitz3.ab3@21917>    CLR.b thenmode
00031D72 <AmiBlitz3.ab3@21920>    CMP.w #-$7FFE,D0                                        ;end ?
00031D76 <AmiBlitz3.ab3@21921>    BNE.w JL_0_CC22
00031D78 <AmiBlitz3.ab3@21922>    MOVE.l a5,-(a7)
00031D7E <AmiBlitz3.ab3@21923>    JSR get1bytemain
00031D80 <AmiBlitz3.ab3@21924>    MOVE.l (a7)+,a5
00031D82 <AmiBlitz3.ab3@21925>    TST.w d0
00031D86 <AmiBlitz3.ab3@21926>    BEQ 'doend
00031D8A <AmiBlitz3.ab3@21927>    CMP.w #":",d0
00031D8E <AmiBlitz3.ab3@21928>    BEQ 'doend
00031D92 <AmiBlitz3.ab3@21929>    CMP.w #";",d0
00031D96 <AmiBlitz3.ab3@21930>    BEQ 'doend
00031D98 <AmiBlitz3.ab3@21931>    MOVE.l a5,-(a7)
00031D9E <AmiBlitz3.ab3@21932>    JSR get1bytemain
00031DA2 <AmiBlitz3.ab3@21933>    MOVE.l -1(a5),d0
00031DA4 <AmiBlitz3.ab3@21934>    MOVE.l (a7)+,a5
00031DAA <AmiBlitz3.ab3@21935>    CMP.l #"noa7",d0
00031DAE <AmiBlitz3.ab3@21936>    BEQ 'doend
00031DB2 <AmiBlitz3.ab3@21937> BRA 'morechar
00031DB6 <AmiBlitz3.ab3@21940>   MOVE.w #$8002,D0
00031DBA <AmiBlitz3.ab3@21941>    BSR.w macputw
00031DBE <AmiBlitz3.ab3@21942> BRA JL_0_CBB6
00031DC4 <AmiBlitz3.ab3@21945>   JSR get1bytemain
00031DC8 <AmiBlitz3.ab3@21946>    CMP.w #-$7FF3,D0                                        ;end macro
00031DCC <AmiBlitz3.ab3@21947>    BEQ.w 'lo1
00031DD0 <AmiBlitz3.ab3@21948>   CMP.w #$80d7,d0                                          ;end object
00031DD4 <AmiBlitz3.ab3@21949>   BNE JL_0_CC12
00031DDA <AmiBlitz3.ab3@21950>   SUBQ.b #1,objectcount
00031DE0 <AmiBlitz3.ab3@21951>   TST.b developobject
00031DE4 <AmiBlitz3.ab3@21952>   BEQ 'lo1
00031DE8 <AmiBlitz3.ab3@21953>   BSR skiprest
00031DEA <AmiBlitz3.ab3@21954> RTS
00031DF0 <AmiBlitz3.ab3@21957>   SUBQ.w #1,coolnest
00031DF4 <AmiBlitz3.ab3@21958>    BMI.w JL_0_CC32
00031DF6 <AmiBlitz3.ab3@21961>   MOVE.w D0,-(A7)
00031DFA <AmiBlitz3.ab3@21962>   MOVE.w #$8002,D0
00031DFE <AmiBlitz3.ab3@21963>    BSR.w macputw
00031E00 <AmiBlitz3.ab3@21964>   MOVE.w (A7)+,D0
00031E04 <AmiBlitz3.ab3@21965> BRA.w JL_0_CC22
00031E08 <AmiBlitz3.ab3@21968>   BSR.w macputw
00031E0C <AmiBlitz3.ab3@21969> BRA.w JL_0_CBB6
00031E12 <AmiBlitz3.ab3@21971> JUMP_macenderr JMP macenderr
00031E18 <AmiBlitz3.ab3@21974>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031E1C <AmiBlitz3.ab3@21975>     BNE 'no
00031E20 <AmiBlitz3.ab3@21976>      MOVEM.l D2/A0/A2,-(A7)
00031E26 <AmiBlitz3.ab3@21977>    JSR nextline
00031E2A <AmiBlitz3.ab3@21978>    BEQ.w JUMP_macenderr
00031E2E <AmiBlitz3.ab3@21979>   MOVEM.l (A7)+,D2/A0/A2
00031E30 <AmiBlitz3.ab3@21980>     TST.w D2
00031E34 <AmiBlitz3.ab3@21981>    BEQ.w JL_0_CBB6
00031E38 <AmiBlitz3.ab3@21982> BRA JL_0_CBB6
00031E3C <AmiBlitz3.ab3@21986>   BSR.w JL_0_CC98
00031E40 <AmiBlitz3.ab3@21987> BRA.w JL_0_CBB6
00031E42 <AmiBlitz3.ab3@21990>   ADDQ.w #4,A7
00031E44 <AmiBlitz3.ab3@21991>   MOVE.l A0,D0
00031E4A <AmiBlitz3.ab3@21992>   SUB.l ptr_macrobuffer_begin,D0
00031E4E <AmiBlitz3.ab3@21995>    BEQ.w JL_0_CC5E
00031E52 <AmiBlitz3.ab3@21996>   CMPI.b #":",-(A0)
00031E56 <AmiBlitz3.ab3@21997>    BNE.w JL_0_CC5E
00031E5A <AmiBlitz3.ab3@21998>   CMP.w #$1,D0
00031E5E <AmiBlitz3.ab3@21999>    BEQ.w JL_0_CC58
00031E62 <AmiBlitz3.ab3@22000>   TST.b -$1(A0)
00031E66 <AmiBlitz3.ab3@22001>    BMI.w JL_0_CC5E
00031E68 <AmiBlitz3.ab3@22004>   SUBQ.w #1,D0
00031E6C <AmiBlitz3.ab3@22005> BRA.w JL_0_CC3C
00031E70 <AmiBlitz3.ab3@22008>   MOVE.w D0,$8(A2)
00031E74 <AmiBlitz3.ab3@22009>    BEQ.w JL_0_CC8E
00031E76 <AmiBlitz3.ab3@22010>   MOVEQ.l #$01,D1
00031E7C <AmiBlitz3.ab3@22011>   MOVEA.l _execbase,A6
00031E82 <AmiBlitz3.ab3@22012>   MOVE.l mempool,a0
00031E86 <AmiBlitz3.ab3@22013>   JSR _AllocPooled(a6)
00031E88 <AmiBlitz3.ab3@22015>   MOVEA.l D0,A0
00031E8C <AmiBlitz3.ab3@22016>   MOVE.l A0,$4(A2)
00031E90 <AmiBlitz3.ab3@22017>   MOVE.w $8(A2),D1
00031E94 <AmiBlitz3.ab3@22018>    BEQ.w JL_0_CC8E
00031E96 <AmiBlitz3.ab3@22019>   SUBQ.w #1,D1
00031E9C <AmiBlitz3.ab3@22020>   MOVEA.l ptr_macrobuffer_begin,A1
00031E9E <AmiBlitz3.ab3@22023>     MOVE.b (A1)+,(A0)+
00031EA2 <AmiBlitz3.ab3@22024>   DBF D1,JL_0_CC88
00031EA8 <AmiBlitz3.ab3@22027> JMP get1bytemain
00031EAA <AmiBlitz3.ab3@22031>   MOVE.w D0,D1
00031EAC <AmiBlitz3.ab3@22032>   LSR.w #8,D1
00031EAE <AmiBlitz3.ab3@22033>   MOVE.b D1,(A0)+
00031EB0 <AmiBlitz3.ab3@22036>   MOVEQ.l #-$01,D2
00031EB2 <AmiBlitz3.ab3@22037>   MOVE.b D0,(A0)+
00031EB8 <AmiBlitz3.ab3@22038>   CMPA.l ptr_macrobuffer_end,A0
00031EBC <AmiBlitz3.ab3@22039>    BCC.w macbigerr2
00031EBE <AmiBlitz3.ab3@22040> RTS
00031EC4 <AmiBlitz3.ab3@22041> macbigerr2 JMP macbigerr
00031EC6 <AmiBlitz3.ab3@22044>   MOVE.l d0,-(a7)
00031EC8 <AmiBlitz3.ab3@22045>   MOVEQ #0,d0
00031ECE <AmiBlitz3.ab3@22046>   CLR.b skiptoggle
00031ED0 <AmiBlitz3.ab3@22049>     MOVE.b (a5),d0
00031ED4 <AmiBlitz3.ab3@22050>     BEQ 'l3
00031ED8 <AmiBlitz3.ab3@22051>     CMP.b #";",d0
00031EDC <AmiBlitz3.ab3@22052>     BNE 'l2
00031EE4 <AmiBlitz3.ab3@22053>     MOVE.b #1,skiptoggle
00031EEA <AmiBlitz3.ab3@22056>     TST.b skiptoggle
00031EEE <AmiBlitz3.ab3@22057>     BNE 'l4
00031EF2 <AmiBlitz3.ab3@22058>     CMP.b #":",d0
00031EF6 <AmiBlitz3.ab3@22059>     BEQ 'l3
00031EF8 <AmiBlitz3.ab3@22062>     ADDQ #1,a5
00031EFC <AmiBlitz3.ab3@22063> BRA 'loop
00031F02 <AmiBlitz3.ab3@22066>   MOVE.w d0,lastchar
00031F04 <AmiBlitz3.ab3@22067>   MOVE.l (a7)+,d0
00031F06 <AmiBlitz3.ab3@22068> RTS
00031F0A <AmiBlitz3.ab3@22072>   BSR.w ifchar
00031F0E <AmiBlitz3.ab3@22073>    BNE.w JUMP_syntaxerr
00031F10 <AmiBlitz3.ab3@22074>   MOVE.w D0,D1
00031F16 <AmiBlitz3.ab3@22075>   JSR get1bytemain
00031F1A <AmiBlitz3.ab3@22076>   BSR.w ifchar
00031F1E <AmiBlitz3.ab3@22077>    BNE.w JL_0_CCDA
00031F20 <AmiBlitz3.ab3@22078>   ADDQ.w #1,D0
00031F22 <AmiBlitz3.ab3@22079>   MOVE.w D0,D2
00031F24 <AmiBlitz3.ab3@22080>   ADD.w D0,D0
00031F26 <AmiBlitz3.ab3@22081>   ADD.w D2,D0
00031F28 <AmiBlitz3.ab3@22082>   ADD.w D0,D1
00031F2A <AmiBlitz3.ab3@22083>   MOVE.w D1,D0
00031F2E <AmiBlitz3.ab3@22084>   ANDI.w #$3,D0
00031F32 <AmiBlitz3.ab3@22085>   CMP.w #$3,D0
00031F36 <AmiBlitz3.ab3@22086>    BEQ.w JUMP_syntaxerr
00031F3C <AmiBlitz3.ab3@22088>   JSR get1bytemain
00031F3E <AmiBlitz3.ab3@22091> RTS
00031F40 <AmiBlitz3.ab3@22097> thetst1:  TST.b D0
00031F42 <AmiBlitz3.ab3@22098> thetst2:  TST.w D0
00031F44 <AmiBlitz3.ab3@22099> thetst3:  TST.l D0
00031F46 <AmiBlitz3.ab3@22100> thetst4:  TST.l (A7)+                                      ;Any Length?
00031F4A <AmiBlitz3.ab3@22101> thetst5:  JSR _Reschedule(A6)
00031F4E <AmiBlitz3.ab3@22103> posbr:    BEQ.w posbr
00031F52 <AmiBlitz3.ab3@22104> negbr:    BNE.w negbr
00031F54 <AmiBlitz3.ab3@22108>   MOVEQ.l #-$01,D2
00031F58 <AmiBlitz3.ab3@22109> BRA.w JL_0_D04C
00031F5E <AmiBlitz3.ab3@22113>   CLR.l fp0addr
00031F60 <AmiBlitz3.ab3@22114>   MOVEQ.l #$01,D1                                          ;while flag
00031F62 <AmiBlitz3.ab3@22115>   MOVEQ.l #$00,D2                                          ;negate flag
00031F66 <AmiBlitz3.ab3@22116> BRA.w JL_0_D04E
00031F6C <AmiBlitz3.ab3@22120>   LEA firstrep,A2
00031F6E <AmiBlitz3.ab3@22121>   MOVEQ.l #$08,D2
00031F72 <AmiBlitz3.ab3@22122> BRA.w freeslist
00031F76 <AmiBlitz3.ab3@22126>   LEA firstsel(PC),A2
00031F78 <AmiBlitz3.ab3@22127>   MOVEQ.l #$0E,D2
00031F7A <AmiBlitz3.ab3@22132>   MOVEQ.l #$00,D3
00031F7C <AmiBlitz3.ab3@22140>   MOVE.l (A2),D0
00031F7E <AmiBlitz3.ab3@22141>   CLR.l (A2)
00031F80 <AmiBlitz3.ab3@22142>   MOVEA.l D0,A2
00031F86 <AmiBlitz3.ab3@22143>   MOVEA.l _execbase,A6
00031F8A <AmiBlitz3.ab3@22146>     CMPA.w #$0,A2
00031F8E <AmiBlitz3.ab3@22147>      BEQ.w freelist__done
00031F90 <AmiBlitz3.ab3@22148>     TST.w D3
00031F94 <AmiBlitz3.ab3@22149>      BEQ.w freelist__skip
00031F98 <AmiBlitz3.ab3@22150>     MOVEM.l D2-D3/A2,-(A7)
00031F9A <AmiBlitz3.ab3@22151>     ADDA.w D3,A2
00031F9C <AmiBlitz3.ab3@22152>     MOVE.l D4,D2
00031FA0 <AmiBlitz3.ab3@22153>     BSR.w freeslist
00031FA4 <AmiBlitz3.ab3@22154>     MOVEM.l (A7)+,D2-D3/A2
00031FA6 <AmiBlitz3.ab3@22157>     MOVEA.l A2,A1
00031FA8 <AmiBlitz3.ab3@22158>     MOVE.l D2,D0
00031FAA <AmiBlitz3.ab3@22159>     MOVEA.l (A2),A2
00031FB0 <AmiBlitz3.ab3@22160>     MOVE.l mempool,a0
00031FB4 <AmiBlitz3.ab3@22161>     JSR _FreePooled(A6)
00031FB8 <AmiBlitz3.ab3@22162> BRA.w freelist__loop
00031FBA <AmiBlitz3.ab3@22165> RTS
00031FC0 <AmiBlitz3.ab3@22168> JMP eselerr
00031FC4 <AmiBlitz3.ab3@22171> firstsel:  Ds.l 1
00031FC8 <AmiBlitz3.ab3@22174> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031FCA <AmiBlitz3.ab3@22177> selpushw:   MOVE.w D0,-(A7)
00031FCC <AmiBlitz3.ab3@22179> selpushl:   MOVE.l D0,-(A7)
00031FD0 <AmiBlitz3.ab3@22181> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031FD4 <AmiBlitz3.ab3@22184> selcomb:    ANDI.w #$FF,D0
00031FD6 <AmiBlitz3.ab3@22185> selcomw:    CMP.w (A7),D0
00031FD8 <AmiBlitz3.ab3@22187> selcoml:    CMP.l (A7),D0
00031FDC <AmiBlitz3.ab3@22189> selbne:     BNE.w selbne
00031FDE <AmiBlitz3.ab3@22191> endsel:     ADDQ.w #8,A7
00031FE2 <AmiBlitz3.ab3@22197>   MOVE.l firstsel(PC),D0                                  
00031FE6 <AmiBlitz3.ab3@22198>    BEQ.w JUMP_eselerr
00031FE8 <AmiBlitz3.ab3@22199>   MOVEA.l D0,A2
00031FEC <AmiBlitz3.ab3@22200>    BSR.w JL_0_CDFC
00031FF2 <AmiBlitz3.ab3@22203>   MOVEA.l _execbase,A6
00031FF6 <AmiBlitz3.ab3@22206>   MOVE.l $4(A2),D0
00031FFA <AmiBlitz3.ab3@22207>    BEQ.w doendsel__done
00031FFC <AmiBlitz3.ab3@22208>   MOVEA.l D0,A3
00032000 <AmiBlitz3.ab3@22209>   MOVEA.l $4(A3),A0
00032006 <AmiBlitz3.ab3@22210>   MOVE.l destpointer,D1
00032008 <AmiBlitz3.ab3@22211>   SUB.l A0,D1
0003200E <AmiBlitz3.ab3@22213>     TST.b fast
00032012 <AmiBlitz3.ab3@22214>     BEQ doendsel__loop_l1
00032018 <AmiBlitz3.ab3@22215>     MOVE.w dontwrite,D0
0003201C <AmiBlitz3.ab3@22216>     BNE.w doendsel__skip
0003201E <AmiBlitz3.ab3@22217>     ADDQ.l #2,d1
00032022 <AmiBlitz3.ab3@22218>     MOVE.l d1,-2(a0)
00032026 <AmiBlitz3.ab3@22219>   BRA doendsel__skip
0003202C <AmiBlitz3.ab3@22223>   TST.w dontwrite
00032030 <AmiBlitz3.ab3@22224>      BNE.w doendsel__skip
00032036 <AmiBlitz3.ab3@22225>   CMP.l #MaxWordSgnd,D1
0003203A <AmiBlitz3.ab3@22226>    BHI.w JUMP_cbraerr
0003203C <AmiBlitz3.ab3@22227>   MOVE.w D1,(A0)
00032040 <AmiBlitz3.ab3@22230>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032042 <AmiBlitz3.ab3@22231>   MOVEA.l A3,A1
00032044 <AmiBlitz3.ab3@22232>   MOVEQ.l #$08,D0
0003204A <AmiBlitz3.ab3@22233>   MOVE.l mempool,a0
0003204E <AmiBlitz3.ab3@22234>    JSR _FreePooled(A6)
00032052 <AmiBlitz3.ab3@22235> BRA.w doendsel__loop
00032058 <AmiBlitz3.ab3@22238>   JSR popselect                                            ;fix stack on select
0003205C <AmiBlitz3.ab3@22239>   MOVEA.l firstsel(PC),A1
00032062 <AmiBlitz3.ab3@22240>   MOVE.l (A1),firstsel
00032064 <AmiBlitz3.ab3@22241>   MOVEQ.l #$0E,D0
0003206A <AmiBlitz3.ab3@22242>   MOVEA.l _execbase,A6
00032070 <AmiBlitz3.ab3@22243>   MOVE.l mempool,a0
00032074 <AmiBlitz3.ab3@22244>   JSR _FreePooled(A6)
0003207A <AmiBlitz3.ab3@22245> JMP get1bytemain
0003207C <AmiBlitz3.ab3@22249>   MOVEA.l (A7)+,A1
0003207E <AmiBlitz3.ab3@22250>   SUBQ.w #8,A1
00032080 <AmiBlitz3.ab3@22251>   MOVEQ.l #$09,D0
00032082 <AmiBlitz3.ab3@22252>   ADD.l (A1),D0
00032084 <AmiBlitz3.ab3@22255>   ADDQ.w #2,A7                                             ;for runtime errs!
00032088 <AmiBlitz3.ab3@22260>   MOVE.l firstsel(PC),D0
0003208C <AmiBlitz3.ab3@22261>    BEQ.w JUMP_defaerr
0003208E <AmiBlitz3.ab3@22262>   MOVEA.l D0,A2
00032092 <AmiBlitz3.ab3@22263>   BSR.w JL_0_CE26
00032096 <AmiBlitz3.ab3@22264>   BSR.w JL_0_CDFC
0003209A <AmiBlitz3.ab3@22265>   CLR.l $8(A2)
0003209E <AmiBlitz3.ab3@22266>   MOVE.w $C(A2),D2
000320A2 <AmiBlitz3.ab3@22267> BRA.w JL_0_CE5E
000320A8 <AmiBlitz3.ab3@22270> JMP defaerr
000320AC <AmiBlitz3.ab3@22273>   MOVE.l $8(A2),D0
000320B0 <AmiBlitz3.ab3@22274>    BEQ.w JL_0_CE24
000320B2 <AmiBlitz3.ab3@22275>   MOVEA.l D0,A0
000320B8 <AmiBlitz3.ab3@22276>   MOVE.l destpointer,D1
000320BA <AmiBlitz3.ab3@22277>   SUB.l A0,D1
000320C0 <AmiBlitz3.ab3@22279>     TST.b fast
000320C4 <AmiBlitz3.ab3@22280>     BEQ 'l1
000320CA <AmiBlitz3.ab3@22281>     TST.w dontwrite
000320CE <AmiBlitz3.ab3@22282>     BNE.w JL_0_CE24
000320D0 <AmiBlitz3.ab3@22283>     ADDQ.l #2,d1
000320D4 <AmiBlitz3.ab3@22284>     MOVE.l D1,-2(A0)
000320D8 <AmiBlitz3.ab3@22285>   BRA JL_0_CE24
000320DE <AmiBlitz3.ab3@22289>   TST.w dontwrite
000320E2 <AmiBlitz3.ab3@22290>      BNE.w JL_0_CE24
000320E8 <AmiBlitz3.ab3@22291>    CMP.l #MaxWordSgnd,D1
000320EC <AmiBlitz3.ab3@22292>    BHI.w JUMP_cbraerr
000320EE <AmiBlitz3.ab3@22293>   MOVE.w D1,(A0)
000320F0 <AmiBlitz3.ab3@22296> RTS
000320F6 <AmiBlitz3.ab3@22299> JMP cbraerr
000320FA <AmiBlitz3.ab3@22303>   MOVE.l $8(A2),D0
000320FE <AmiBlitz3.ab3@22304>    BEQ.w JL_0_CE5C
00032100 <AmiBlitz3.ab3@22305>   MOVEA.l D0,A3
00032104 <AmiBlitz3.ab3@22306>   MOVE.w #$6000,D1
0003210A <AmiBlitz3.ab3@22308>    TST.b fast
0003210E <AmiBlitz3.ab3@22309>    BEQ 'l1
00032114 <AmiBlitz3.ab3@22310>    OR.l #$ff,d1
00032118 <AmiBlitz3.ab3@22311>    BSR writeword
0003211C <AmiBlitz3.ab3@22315>   BSR.w writeword
0003211E <AmiBlitz3.ab3@22316>   MOVEQ.l #$08,D0
00032120 <AmiBlitz3.ab3@22317>   MOVEQ.l #$01,D1
00032126 <AmiBlitz3.ab3@22318>   MOVEA.l _execbase,A6
0003212C <AmiBlitz3.ab3@22319>   MOVE.l mempool,a0
00032130 <AmiBlitz3.ab3@22320>   JSR _AllocPooled(a6)
00032132 <AmiBlitz3.ab3@22322>   MOVEA.l D0,A0
00032136 <AmiBlitz3.ab3@22323>   MOVE.l $4(A2),(A0)
0003213A <AmiBlitz3.ab3@22324>   MOVE.l A0,$4(A2)
00032142 <AmiBlitz3.ab3@22325>   MOVE.l destpointer,$4(A0)
00032146 <AmiBlitz3.ab3@22326> BRA.w writeword
00032148 <AmiBlitz3.ab3@22329> RTS
0003214E <AmiBlitz3.ab3@22333>   TST.b debugmode
00032152 <AmiBlitz3.ab3@22334>    BEQ.w JL_0_CE7A
00032156 <AmiBlitz3.ab3@22335>   MOVE.w #$C313,D1
0003215A <AmiBlitz3.ab3@22336>   CMP.w #$3,D2
0003215E <AmiBlitz3.ab3@22337>    BCS.w JL_0_CE76
00032160 <AmiBlitz3.ab3@22338>   ADDQ.w #1,D1
00032164 <AmiBlitz3.ab3@22341> BRA.w Atokejsr
00032166 <AmiBlitz3.ab3@22344> RTS
0003216C <AmiBlitz3.ab3@22348> JMP caseerr
00032170 <AmiBlitz3.ab3@22351>   MOVE.l firstsel(PC),D0
00032174 <AmiBlitz3.ab3@22352>    BEQ.w JUMP_caseerr
00032176 <AmiBlitz3.ab3@22353>   MOVEA.l D0,A2
0003217A <AmiBlitz3.ab3@22354>    BSR.w JL_0_CE26
0003217E <AmiBlitz3.ab3@22355>    BSR.w JL_0_CDFC
00032182 <AmiBlitz3.ab3@22356>   MOVE.w $C(A2),D2
00032184 <AmiBlitz3.ab3@22357>   MOVE.w D2,-(A7)
00032188 <AmiBlitz3.ab3@22358>    BSR.w JL_0_CE5E
0003218A <AmiBlitz3.ab3@22359>   MOVE.w (A7),D2
0003218E <AmiBlitz3.ab3@22360>    BSR.w bakeval
00032190 <AmiBlitz3.ab3@22361>   MOVE.w (A7)+,D2
00032194 <AmiBlitz3.ab3@22362>   LEA selcomb(PC),A0
00032198 <AmiBlitz3.ab3@22363>   LEA selcombf(PC),A1
0003219C <AmiBlitz3.ab3@22364>   CMP.w #$1,D2
000321A0 <AmiBlitz3.ab3@22365>    BEQ.w JL_0_CED8
000321A4 <AmiBlitz3.ab3@22366>   LEA selcomw(PC),A0
000321A8 <AmiBlitz3.ab3@22367>   CMP.w #$2,D2
000321AC <AmiBlitz3.ab3@22368>    BEQ.w JL_0_CED8
000321B0 <AmiBlitz3.ab3@22369>   LEA selcoml(PC),A0
000321B4 <AmiBlitz3.ab3@22370>   LEA selcomlf(PC),A1
000321B8 <AmiBlitz3.ab3@22371>   CMP.w #$7,D2
000321BC <AmiBlitz3.ab3@22372>    BCS.w JL_0_CED8
000321C0 <AmiBlitz3.ab3@22374>   MOVE.w #$CE01,D1
000321C4 <AmiBlitz3.ab3@22375>    BSR.w Atokejsr
000321C8 <AmiBlitz3.ab3@22376> BRA.w JL_0_CEDC
000321CC <AmiBlitz3.ab3@22379>   BSR.w pokecode
000321D0 <AmiBlitz3.ab3@22382>   MOVE.w selbne(PC),D1
000321D6 <AmiBlitz3.ab3@22384>     TST.b fast
000321DA <AmiBlitz3.ab3@22385>     BEQ 'l1
000321E0 <AmiBlitz3.ab3@22386>     ORI.l #$ff,d1
000321E4 <AmiBlitz3.ab3@22387>     BSR writeword
000321E8 <AmiBlitz3.ab3@22390>   BSR.w writeword
000321EC <AmiBlitz3.ab3@22391>   MOVEA.l firstsel(PC),A0
000321F4 <AmiBlitz3.ab3@22392>   MOVE.l destpointer,$8(A0)
000321F8 <AmiBlitz3.ab3@22393> BRA.w writeword
000321FC <AmiBlitz3.ab3@22397> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000321FE <AmiBlitz3.ab3@22398> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00032202 <AmiBlitz3.ab3@22401> sellineat:  Ds.l 1
00032208 <AmiBlitz3.ab3@22407>   TST.b debugmode
0003220C <AmiBlitz3.ab3@22408>    BEQ.w JL_0_CF0E
00032210 <AmiBlitz3.ab3@22409>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00032214 <AmiBlitz3.ab3@22410>    BSR.w writelong
0003221E <AmiBlitz3.ab3@22413>   MOVE.l linenumat,sellineat
00032228 <AmiBlitz3.ab3@22415>    MOVE.l destpointer,pushpc
00032232 <AmiBlitz3.ab3@22416>   MOVE.l hunkoffsetbase,pushoff
00032234 <AmiBlitz3.ab3@22417>   MOVEQ.l #$00,D2
00032238 <AmiBlitz3.ab3@22418>    BSR.w bakevalu                                          ;Evaluate
0003223C <AmiBlitz3.ab3@22419>    BSR.w JL_0_B5D2
00032240 <AmiBlitz3.ab3@22420>   CMP.w #$7,D2
00032244 <AmiBlitz3.ab3@22421>    BNE.w JL_0_CF36
00032248 <AmiBlitz3.ab3@22422>   MOVE.w clrst(PC),D1
0003224C <AmiBlitz3.ab3@22423>    BSR.w writeword
00032250 <AmiBlitz3.ab3@22426>    BSR.w JL_0_B63C
00032254 <AmiBlitz3.ab3@22427>   LEA selpushb(PC),A0
00032258 <AmiBlitz3.ab3@22428>   LEA selpushbf(PC),A1
0003225C <AmiBlitz3.ab3@22429>   CMP.w #$1,D2
00032260 <AmiBlitz3.ab3@22430>    BEQ.w JL_0_CF88
00032264 <AmiBlitz3.ab3@22431>   LEA selpushw(PC),A0
00032268 <AmiBlitz3.ab3@22432>   CMP.w #$2,D2
0003226C <AmiBlitz3.ab3@22433>    BEQ.w JL_0_CF88
00032270 <AmiBlitz3.ab3@22434>   LEA selpushl(PC),A0
00032274 <AmiBlitz3.ab3@22435>   LEA selpushlf(PC),A1
00032278 <AmiBlitz3.ab3@22436>   CMP.w #$7,D2
0003227C <AmiBlitz3.ab3@22437>    BCS.w JL_0_CF88
00032282 <AmiBlitz3.ab3@22439>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00032286 <AmiBlitz3.ab3@22440>    BSR.w writeword
0003228A <AmiBlitz3.ab3@22441>   LEA selpushs(PC),A0
0003228E <AmiBlitz3.ab3@22442>   LEA selpushsf(PC),A1
00032292 <AmiBlitz3.ab3@22443>    BSR.w pokecode
00032296 <AmiBlitz3.ab3@22444>   MOVE.w #$C701,D1
0003229A <AmiBlitz3.ab3@22445>    BSR.w Atokejsr
0003229E <AmiBlitz3.ab3@22446> BRA.w JL_0_CF8C
000322A2 <AmiBlitz3.ab3@22449>   BSR.w pokecode
000322A4 <AmiBlitz3.ab3@22452>   MOVEQ.l #$0E,D0
000322A6 <AmiBlitz3.ab3@22453>   MOVEQ.l #$01,D1
000322AC <AmiBlitz3.ab3@22454>   MOVEA.l _execbase,A6
000322B2 <AmiBlitz3.ab3@22456>   MOVE.l mempool,a0
000322B6 <AmiBlitz3.ab3@22457>   JSR _AllocPooled(a6)
000322B8 <AmiBlitz3.ab3@22458>   MOVEA.l D0,A0
000322BC <AmiBlitz3.ab3@22459>   MOVE.l firstsel(PC),(A0)
000322C2 <AmiBlitz3.ab3@22460>   MOVE.l A0,firstsel
000322C6 <AmiBlitz3.ab3@22461>   CLR.l $4(A0)
000322CA <AmiBlitz3.ab3@22462>   CLR.l $8(A0)
000322CE <AmiBlitz3.ab3@22463>   MOVE.w D2,$C(A0)
000322D0 <AmiBlitz3.ab3@22464> RTS
000322D6 <AmiBlitz3.ab3@22468>   MOVE.l firstrep,D0
000322DA <AmiBlitz3.ab3@22469>    BEQ.w JUMP_unterr1
000322DE <AmiBlitz3.ab3@22470>   MOVE.w #$6000,D1
000322E2 <AmiBlitz3.ab3@22471>   BSR.w writeword
000322E4 <AmiBlitz3.ab3@22472>   MOVEA.l D0,A0
000322E8 <AmiBlitz3.ab3@22473>   MOVE.l $4(A0),D1
000322EE <AmiBlitz3.ab3@22474>   SUB.l destpointer,D1
000322F0 <AmiBlitz3.ab3@22475>   TST.w D1
000322F4 <AmiBlitz3.ab3@22476>    BPL.w JUMP_unterr2
000322F8 <AmiBlitz3.ab3@22477>   BSR.w writeword
000322FE <AmiBlitz3.ab3@22478>   MOVEA.l _execbase,A6
00032302 <AmiBlitz3.ab3@22479> BRA.w JL_0_D036
00032308 <AmiBlitz3.ab3@22482> JMP unterr2
0003230E <AmiBlitz3.ab3@22485> JMP unterr1
00032314 <AmiBlitz3.ab3@22489>   MOVE.l firstrep,D0
00032318 <AmiBlitz3.ab3@22490>    BEQ.w JUMP_unterr1
0003231C <AmiBlitz3.ab3@22491>   BSR.w do_if
00032322 <AmiBlitz3.ab3@22492>   JSR reget
00032326 <AmiBlitz3.ab3@22493>    BNE.w JUMP_syntaxerr
0003232C <AmiBlitz3.ab3@22494>   MOVE.w dontwrite,D1
00032330 <AmiBlitz3.ab3@22495>    BNE.w JL_0_D020
00032336 <AmiBlitz3.ab3@22496>   MOVEA.l firstrep,A0
0003233C <AmiBlitz3.ab3@22497>   MOVEA.l destpointer,A1
00032342 <AmiBlitz3.ab3@22499>     TST.b fast
00032346 <AmiBlitz3.ab3@22500>     BEQ 'l1
00032348 <AmiBlitz3.ab3@22501>     SUBQ.w #4,a1
0003234C <AmiBlitz3.ab3@22502>     MOVE.l $4(A0),D2
0003234E <AmiBlitz3.ab3@22503>     SUB.l A1,D2
00032350 <AmiBlitz3.ab3@22504>     MOVE.l d2,(a1)
00032354 <AmiBlitz3.ab3@22505>   BRA JL_0_D020
00032356 <AmiBlitz3.ab3@22509>   SUBQ.w #2,A1
0003235A <AmiBlitz3.ab3@22510>   MOVE.l $4(A0),D2
0003235C <AmiBlitz3.ab3@22511>   SUB.l A1,D2
0003235E <AmiBlitz3.ab3@22512>   TST.w D2
00032362 <AmiBlitz3.ab3@22513>    BPL.w JUMP_unterr2
00032364 <AmiBlitz3.ab3@22514>   MOVE.w D2,(A1)
0003236A <AmiBlitz3.ab3@22517>   MOVEA.l firstiff,A1
00032370 <AmiBlitz3.ab3@22518>   MOVE.l (A1),firstiff
00032372 <AmiBlitz3.ab3@22519>   MOVEQ.l #$0E,D0
00032378 <AmiBlitz3.ab3@22520>   MOVEA.l _execbase,A6
0003237E <AmiBlitz3.ab3@22521>   MOVE.l mempool,a0
00032382 <AmiBlitz3.ab3@22522>   JSR _FreePooled(A6)
00032388 <AmiBlitz3.ab3@22525>   MOVEA.l firstrep,A1
0003238E <AmiBlitz3.ab3@22526>   MOVE.l (A1),firstrep
00032390 <AmiBlitz3.ab3@22527>   MOVEQ.l #$08,D0
00032396 <AmiBlitz3.ab3@22528>   MOVE.l mempool,a0
0003239A <AmiBlitz3.ab3@22529> JMP _FreePooled(A6)
0003239E <AmiBlitz3.ab3@22532> iflineat:   Ds.l 1
000323A0 <AmiBlitz3.ab3@22536>   MOVEQ.l #$00,D2
000323A6 <AmiBlitz3.ab3@22537>   TST.b fast
000323AA <AmiBlitz3.ab3@22538>   BEQ 'l1
000323B2 <AmiBlitz3.ab3@22539>   MOVE.b #1,nostringopt
000323BA <AmiBlitz3.ab3@22540>   MOVE.b #1,iniffcommand
000323BC <AmiBlitz3.ab3@22544>   MOVEQ.l #$00,D1
000323BE <AmiBlitz3.ab3@22547>   MOVE.w D1,-(A7)
000323C4 <AmiBlitz3.ab3@22548>   MOVE.l destpointer,-(A7)
000323C6 <AmiBlitz3.ab3@22549>   MOVE.w D2,-(A7)
000323D0 <AmiBlitz3.ab3@22550>   MOVE.l linenumat,iflineat
000323D2 <AmiBlitz3.ab3@22551>   MOVEQ.l #$00,D2
000323DC <AmiBlitz3.ab3@22552>   MOVE.b optistring,optistring2
000323E4 <AmiBlitz3.ab3@22553>   MOVE.b #1,optistring
000323E8 <AmiBlitz3.ab3@22554>   BSR.w bakevalu
000323F2 <AmiBlitz3.ab3@22555>   MOVE.b optistring2,optistring
000323F6 <AmiBlitz3.ab3@22556>   CMP.w #$5,D2
000323FA <AmiBlitz3.ab3@22557>    BEQ.w JL_0_D09C
000323FE <AmiBlitz3.ab3@22558>   MOVE.w thetst1(PC),D1
00032402 <AmiBlitz3.ab3@22559>   CMP.w #$1,D2
00032406 <AmiBlitz3.ab3@22560>    BEQ.w writebranchcode
0003240A <AmiBlitz3.ab3@22561>   MOVE.w thetst2(PC),D1
0003240E <AmiBlitz3.ab3@22562>   CMP.w #$2,D2
00032412 <AmiBlitz3.ab3@22563>    BEQ.w writebranchcode
00032416 <AmiBlitz3.ab3@22564>   MOVE.w thetst4(PC),D1
0003241A <AmiBlitz3.ab3@22565>   CMP.w #$7,D2
0003241E <AmiBlitz3.ab3@22566>    BEQ.w writebranchcode
00032422 <AmiBlitz3.ab3@22567>   MOVE.w thetst3(PC),D1
00032426 <AmiBlitz3.ab3@22568> BRA.w writebranchcode
0003242C <AmiBlitz3.ab3@22571>   TST.b fpu
00032430 <AmiBlitz3.ab3@22572>   BEQ 'dofpu
00032436 <AmiBlitz3.ab3@22573>   MOVE.l #$f200003a,d1
0003243A <AmiBlitz3.ab3@22574>   BSR writelong
0003243E <AmiBlitz3.ab3@22575>   MOVE.w #$f2c1,d1
00032442 <AmiBlitz3.ab3@22576>   BSR writeword
00032446 <AmiBlitz3.ab3@22577>   BSR writelong
00032448 <AmiBlitz3.ab3@22578>   ADDQ.l #2,a7
0003244C <AmiBlitz3.ab3@22579> BRA.w br2
00032450 <AmiBlitz3.ab3@22582>    MOVE.w #$C900,D1
00032454 <AmiBlitz3.ab3@22583>    BSR.w Atokejsr
00032458 <AmiBlitz3.ab3@22584>   MOVE.l thetst5(PC),D1
0003245C <AmiBlitz3.ab3@22585>    BSR.w writelong
00032460 <AmiBlitz3.ab3@22586> BRA.w JL_0_D0B4
00032466 <AmiBlitz3.ab3@22590>          CLR.b iniffcommand
0003246C <AmiBlitz3.ab3@22591>          TST.b fast                                        ;branchcode
00032470 <AmiBlitz3.ab3@22592>          BEQ b6
00032476 <AmiBlitz3.ab3@22593>          TST.b fpu
0003247A <AmiBlitz3.ab3@22594>          BEQ 'nofpu
00032480 <AmiBlitz3.ab3@22598>           MOVE.l destpointer,a0
00032486 <AmiBlitz3.ab3@22599>          SUB.l load_var_addr,a0
0003248C <AmiBlitz3.ab3@22600>          CMP.l #4,a0
00032490 <AmiBlitz3.ab3@22601>          BEQ 'nofpu
00032498 <AmiBlitz3.ab3@22602>          CMP.l #$f2400014,-4(a4)                           ;<
0003249C <AmiBlitz3.ab3@22603>          BNE 'nolt
000324A2 <AmiBlitz3.ab3@22604>          SUBQ.l #2,destpointer
000324A8 <AmiBlitz3.ab3@22605>          MOVE.w #$f293,-4(a4)                              ;
000324AC <AmiBlitz3.ab3@22606> BRA 'brf
000324B4 <AmiBlitz3.ab3@22609>   CMP.l #$f2400015,-4(a4)                                  ;<=
000324B8 <AmiBlitz3.ab3@22610>          BNE 'nole
000324BE <AmiBlitz3.ab3@22611>          SUBQ.l #2,destpointer
000324C4 <AmiBlitz3.ab3@22612>          MOVE.w #$f292,-4(a4)
000324C8 <AmiBlitz3.ab3@22613> BRA 'brf
000324D0 <AmiBlitz3.ab3@22616>   CMP.l #$f2400013,-4(a4)                                  ;=>
000324D4 <AmiBlitz3.ab3@22617>          BNE 'noge
000324DA <AmiBlitz3.ab3@22618>          SUBQ.l #2,destpointer
000324E0 <AmiBlitz3.ab3@22619>          MOVE.w #$f294,-4(a4)
000324E4 <AmiBlitz3.ab3@22620> BRA 'brf
000324EC <AmiBlitz3.ab3@22623>   CMP.l #$f2400012,-4(a4)                                  ;>
000324F0 <AmiBlitz3.ab3@22624>          BNE 'nogt
000324F6 <AmiBlitz3.ab3@22625>          SUBQ.l #2,destpointer
000324FC <AmiBlitz3.ab3@22626>          MOVE.w #$f295,-4(a4)
00032500 <AmiBlitz3.ab3@22627> BRA 'brf
00032508 <AmiBlitz3.ab3@22630>   CMP.l #$f2400001,-4(a4)                                  ;=
0003250C <AmiBlitz3.ab3@22631>          BNE 'noeq
00032512 <AmiBlitz3.ab3@22632>          SUBQ.l #2,destpointer
00032518 <AmiBlitz3.ab3@22633>          MOVE.w #$f28e,-4(a4)
0003251C <AmiBlitz3.ab3@22634> BRA 'brf
00032524 <AmiBlitz3.ab3@22637>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032528 <AmiBlitz3.ab3@22638>          BNE 'none
0003252E <AmiBlitz3.ab3@22639>          SUBQ.l #2,destpointer
00032534 <AmiBlitz3.ab3@22640>          MOVE.w #$f281,-4(a4)
00032536 <AmiBlitz3.ab3@22643>   ADDQ.l #2,a7
0003253C <AmiBlitz3.ab3@22645>     TST.b fast
00032540 <AmiBlitz3.ab3@22646>     BEQ 'l1
00032546 <AmiBlitz3.ab3@22647>     OR.b #$40,-3(a4)
0003254A <AmiBlitz3.ab3@22648>     BSR writeword
0003254E <AmiBlitz3.ab3@22652>  BSR writeword
00032552 <AmiBlitz3.ab3@22653> BRA.s br2
00032558 <AmiBlitz3.ab3@22657>   MOVE.l destpointer,a0
0003255E <AmiBlitz3.ab3@22658>          SUB.l load_var_addr,a0
00032564 <AmiBlitz3.ab3@22659>          CMP.l #4,a0
00032568 <AmiBlitz3.ab3@22660>          BEQ JL_0_D0B4
0003256E <AmiBlitz3.ab3@22661>          CMP.w #$4eb9,-6(a4)
00032572 <AmiBlitz3.ab3@22662>          BEQ b6
00032578 <AmiBlitz3.ab3@22663>          CMP.w #$5ec0,-2(a4)                               ;>
0003257C <AmiBlitz3.ab3@22664>      BNE.s 'lb1
00032582 <AmiBlitz3.ab3@22665>          MOVE.w #$6f00,-2(a4)                              ;ble
00032586 <AmiBlitz3.ab3@22666> BRA.s br
0003258C <AmiBlitz3.ab3@22669>  CMP.w #$5dc0,-2(a4)                                       ;<
00032590 <AmiBlitz3.ab3@22670>   BNE.s 'lb2
00032596 <AmiBlitz3.ab3@22671>          MOVE.w #$6c00,-2(a4)                              ;bge
0003259A <AmiBlitz3.ab3@22672> BRA.s br
000325A0 <AmiBlitz3.ab3@22675>   CMP.w #$57c0,-2(a4)                                      ;=
000325A4 <AmiBlitz3.ab3@22676>   BNE.s 'lb3
000325AA <AmiBlitz3.ab3@22677>          MOVE.w #$6600,-2(a4)                              ;bne
000325AE <AmiBlitz3.ab3@22678> BRA.s br
000325B4 <AmiBlitz3.ab3@22681>   CMP.w #$56c0,-2(a4)                                      ;<>
000325B8 <AmiBlitz3.ab3@22682>   BNE.s 'lb4
000325BE <AmiBlitz3.ab3@22683>          MOVE.w #$6700,-2(a4)                              ;beq
000325C2 <AmiBlitz3.ab3@22684> BRA.s br
000325C8 <AmiBlitz3.ab3@22687>   CMP.w #$5cc0,-2(a4)                                      ;>=
000325CC <AmiBlitz3.ab3@22688>   BNE.s 'lb5
000325D2 <AmiBlitz3.ab3@22689>          MOVE.w #$6d00,-2(a4)                              ;blt
000325D6 <AmiBlitz3.ab3@22690> BRA.s br
000325DC <AmiBlitz3.ab3@22693>   CMP.w #$5fc0,-2(a4)                                      ;<=
000325E0 <AmiBlitz3.ab3@22694>         BNE.s b6
000325E6 <AmiBlitz3.ab3@22695>          MOVE.w #$6e00,-2(a4)                              ;bgt
000325E8 <AmiBlitz3.ab3@22698>   TST.w (a7)+
000325EE <AmiBlitz3.ab3@22700>         TST.b fast
000325F2 <AmiBlitz3.ab3@22701>         BEQ 'l1
000325F8 <AmiBlitz3.ab3@22702>         OR.b #$ff,-1(a4)                                   ;long branches
000325FC <AmiBlitz3.ab3@22703>         BSR writeword
00032600 <AmiBlitz3.ab3@22707>         BSR writeword
00032604 <AmiBlitz3.ab3@22708> BRA.s br2
00032608 <AmiBlitz3.ab3@22711>   BSR.w writeword
0003260C <AmiBlitz3.ab3@22714>   MOVE.l posbr(PC),D1
0003260E <AmiBlitz3.ab3@22715>   TST.w (A7)+
00032612 <AmiBlitz3.ab3@22716>    BEQ.w JL_0_D0C2
00032616 <AmiBlitz3.ab3@22717>   MOVE.l negbr(PC),D1
0003261C <AmiBlitz3.ab3@22720>   TST.b fast
00032620 <AmiBlitz3.ab3@22721>            BEQ 'l1
00032626 <AmiBlitz3.ab3@22722>            OR.l #$00ff0000,d1
0003262A <AmiBlitz3.ab3@22723>            BSR writelong
0003262E <AmiBlitz3.ab3@22724>            BSR writeword
00032632 <AmiBlitz3.ab3@22725> BRA br2
00032636 <AmiBlitz3.ab3@22728>   BSR.w writelong
00032638 <AmiBlitz3.ab3@22731>  MOVEQ.l #$0E,D0
0003263A <AmiBlitz3.ab3@22732>   MOVEQ.l #$01,D1
00032640 <AmiBlitz3.ab3@22733>   MOVEA.l _execbase,A6
00032646 <AmiBlitz3.ab3@22735>   MOVE.l mempool,a0
0003264A <AmiBlitz3.ab3@22736>   JSR _AllocPooled(a6)
0003264C <AmiBlitz3.ab3@22737>   MOVEA.l D0,A0
00032652 <AmiBlitz3.ab3@22738>   MOVE.l firstiff,(A0)
00032658 <AmiBlitz3.ab3@22739>   MOVE.l A0,firstiff
0003265C <AmiBlitz3.ab3@22740>   MOVE.l (A7)+,$4(A0)
00032664 <AmiBlitz3.ab3@22741>   MOVE.l destpointer,$8(A0)
00032668 <AmiBlitz3.ab3@22742>   MOVE.w (A7)+,$C(A0)
0003266E <AmiBlitz3.ab3@22743>    JSR reget
00032672 <AmiBlitz3.ab3@22744>    BEQ.w JL_0_D10C
00032678 <AmiBlitz3.ab3@22745>   BSET #$7,$C(A0)
00032682 <AmiBlitz3.ab3@22749>   MOVE.w oldqflag,instringon
00032688 <AmiBlitz3.ab3@22750>   MOVEA.l lastsourcepos,A5
00032690 <AmiBlitz3.ab3@22751>   MOVE.w #$003A,lastchar
00032692 <AmiBlitz3.ab3@22754> RTS
00032696 <AmiBlitz3.ab3@22758>   CMP.w #$1,D0
0003269A <AmiBlitz3.ab3@22759>    BLT.w JL_0_D128
0003269E <AmiBlitz3.ab3@22760>   CMP.w #$0,D0
000326A2 <AmiBlitz3.ab3@22761>    BGT.w JL_0_D128
000326A4 <AmiBlitz3.ab3@22762>   ADD.w D0,D0
000326A6 <AmiBlitz3.ab3@22763>   ADD.w D0,D0
000326AA <AmiBlitz3.ab3@22764>   MOVEA.l JL_0_D128(PC,D0.W),A0
000326AC <AmiBlitz3.ab3@22767> JMP (A0)
000326B0 <AmiBlitz3.ab3@22770> BRA.w JL_0_D128
000326B4 <AmiBlitz3.ab3@22774>   CMP.w #$1,D0
000326B8 <AmiBlitz3.ab3@22775>    BLT.w JL_0_D146
000326BC <AmiBlitz3.ab3@22776>   CMP.w #$0,D0
000326C0 <AmiBlitz3.ab3@22777>    BGT.w JL_0_D146
000326C2 <AmiBlitz3.ab3@22778>   ADD.w D0,D0
000326C4 <AmiBlitz3.ab3@22779>   ADD.w D0,D0
000326C8 <AmiBlitz3.ab3@22780>   MOVEA.l JL_0_D146(PC,D0.W),A0
000326CA <AmiBlitz3.ab3@22783>   JSR (A0)
000326CE <AmiBlitz3.ab3@22786> BRA.w JL_0_D146
000326D2 <AmiBlitz3.ab3@22790>   CMP.w #$1,D0
000326D6 <AmiBlitz3.ab3@22791>    BLT.w JL_0_D168
000326DA <AmiBlitz3.ab3@22792>   CMP.w #$0,D0
000326DE <AmiBlitz3.ab3@22793>    BGT.w JL_0_D168
000326E0 <AmiBlitz3.ab3@22794>   ADD.w D0,D0
000326E2 <AmiBlitz3.ab3@22795>   ADD.w D0,D0
000326E6 <AmiBlitz3.ab3@22796>   MOVEA.l JL_0_D168(PC,D0.W),A0
000326EA <AmiBlitz3.ab3@22799>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000326EC <AmiBlitz3.ab3@22802>    JSR (A0)
000326F0 <AmiBlitz3.ab3@22805> BRA.w JL_0_D168
000326F2 <AmiBlitz3.ab3@22808> labcnt:   Ds.w 1
000326F4 <AmiBlitz3.ab3@22815>   MOVEQ.l #$02,D2
000326F8 <AmiBlitz3.ab3@22816>    BSR.w bakeval
000326FC <AmiBlitz3.ab3@22817>   LEA JL_0_D10E(PC),A0
00032700 <AmiBlitz3.ab3@22818>   LEA JL_0_D12C(PC),A1
00032704 <AmiBlitz3.ab3@22819>   MOVE.w #$001A,D1
00032708 <AmiBlitz3.ab3@22820>   CMP.w #-$7FFB,D0
0003270C <AmiBlitz3.ab3@22821>    BEQ.w JL_0_D1B6
00032710 <AmiBlitz3.ab3@22822>   CMP.w #-$7FFA,D0
00032714 <AmiBlitz3.ab3@22823>    BNE.w JUMP_syntaxerr
00032718 <AmiBlitz3.ab3@22824>   LEA JL_0_D12C(PC),A0
0003271C <AmiBlitz3.ab3@22825>   LEA JL_0_D14A(PC),A1
00032720 <AmiBlitz3.ab3@22826>   MOVE.w #$001A,D1
00032726 <AmiBlitz3.ab3@22827>   TST.b debugmode
0003272A <AmiBlitz3.ab3@22828>    BEQ.b JL_0_D1B6
00032730 <AmiBlitz3.ab3@22829>    JSR chkstak
00032734 <AmiBlitz3.ab3@22830>   LEA JL_0_D14A(PC),A0
00032738 <AmiBlitz3.ab3@22831>   LEA labcnt(PC),A1
0003273C <AmiBlitz3.ab3@22832>   MOVE.w #$001E,D1
0003273E <AmiBlitz3.ab3@22835>   MOVE.w D1,-(A7)
00032744 <AmiBlitz3.ab3@22836>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032748 <AmiBlitz3.ab3@22837>    BSR.w pokecode
0003274E <AmiBlitz3.ab3@22838>   CLR.w labcnt
00032754 <AmiBlitz3.ab3@22843>    JSR get1bytemain
0003275A <AmiBlitz3.ab3@22844>   SUBQ.l #2,destpointer                                    ;for makealab!
0003275E <AmiBlitz3.ab3@22845>    BSR.w JL_0_AE22
00032764 <AmiBlitz3.ab3@22846>   ADDQ.l #2,destpointer
0003276A <AmiBlitz3.ab3@22847>    JSR addoff
0003276E <AmiBlitz3.ab3@22848>   MOVE.l $8(A2),D1
00032772 <AmiBlitz3.ab3@22849>    BSR.w writelong
00032778 <AmiBlitz3.ab3@22850>   ADDQ.w #1,labcnt
0003277E <AmiBlitz3.ab3@22851>    JSR reget
00032782 <AmiBlitz3.ab3@22852>   CMP.w #$2C,D0
00032786 <AmiBlitz3.ab3@22853>    BEQ.w JL_0_D1C8
00032788 <AmiBlitz3.ab3@22854>   MOVEA.l (A7)+,A0
0003278A <AmiBlitz3.ab3@22855>   MOVE.w (A7)+,D2
00032790 <AmiBlitz3.ab3@22856>   MOVE.w dontwrite,D1
00032794 <AmiBlitz3.ab3@22857>    BNE.w JL_0_D21A
00032798 <AmiBlitz3.ab3@22858>   MOVE.w labcnt(PC),D1
0003279C <AmiBlitz3.ab3@22859>   MOVE.w D1,$A(A0)
0003279E <AmiBlitz3.ab3@22860>   ADD.w D1,D1
000327A0 <AmiBlitz3.ab3@22861>   ADD.w D1,D1
000327A2 <AmiBlitz3.ab3@22862>   ADDQ.w #2,D1
000327A6 <AmiBlitz3.ab3@22863>   MOVE.w D1,$2(A0,D2.W)
000327A8 <AmiBlitz3.ab3@22866> RTS
000327AE <AmiBlitz3.ab3@22870>   TST.b debugmode
000327B2 <AmiBlitz3.ab3@22871>    BEQ.w JL_0_D236
000327B8 <AmiBlitz3.ab3@22872>    JSR chkstak
000327BE <AmiBlitz3.ab3@22873>   MOVE.l AL_0_D162,D1
000327C2 <AmiBlitz3.ab3@22874>    BSR.w writelong
000327C8 <AmiBlitz3.ab3@22876>   MOVE.w gosubcode,D1
000327CC <AmiBlitz3.ab3@22877> BRA.w JL_0_D246
000327D2 <AmiBlitz3.ab3@22881>   MOVE.w gotocode,D1
000327D4 <AmiBlitz3.ab3@22884>   MOVE.w D1,-(A7)
000327D8 <AmiBlitz3.ab3@22885>    BSR.w JL_0_AE22
000327DA <AmiBlitz3.ab3@22886>   MOVE.w (A7)+,D1
000327DE <AmiBlitz3.ab3@22887>    BSR.w writeword
000327E4 <AmiBlitz3.ab3@22888>    JSR addoff
000327E8 <AmiBlitz3.ab3@22889>   MOVE.l $8(A2),D1
000327EC <AmiBlitz3.ab3@22890> BRA.w writelong
000327F2 <AmiBlitz3.ab3@22894>   MOVE.w proceduremode,D1
000327F6 <AmiBlitz3.ab3@22895>    BEQ.w JUMP_badpenderr
000327FA <AmiBlitz3.ab3@22896>   MOVE.w #$4EF9,D1
000327FE <AmiBlitz3.ab3@22897>    BSR.w writeword
00032804 <AmiBlitz3.ab3@22898>    JSR addoff
0003280A <AmiBlitz3.ab3@22899>   MOVEA.l _execbase,A6
0003280C <AmiBlitz3.ab3@22900>   MOVEQ.l #$08,D0
0003280E <AmiBlitz3.ab3@22901>   MOVEQ.l #$01,D1
00032814 <AmiBlitz3.ab3@22903>   MOVE.l mempool,a0
00032818 <AmiBlitz3.ab3@22904>   JSR _AllocPooled(a6)
0003281A <AmiBlitz3.ab3@22905>   MOVEA.l D0,A0
00032820 <AmiBlitz3.ab3@22906>   MOVE.l firstpend,(A0)
00032826 <AmiBlitz3.ab3@22907>   MOVE.l A0,firstpend
0003282E <AmiBlitz3.ab3@22908>   MOVE.l destpointer,$4(A0)
00032832 <AmiBlitz3.ab3@22909> BRA.w writelong
00032836 <AmiBlitz3.ab3@22913>   BSR.w do_AsmExit
0003283C <AmiBlitz3.ab3@22914> JMP get1bytemain
00032844 <AmiBlitz3.ab3@22918>   MOVE.b #1,nostringopt
00032848 <AmiBlitz3.ab3@22919>   MOVEM.l a0/a1/d1,-(a7)
0003284E <AmiBlitz3.ab3@22920>   MOVEA.l currentfunction,A0
00032854 <AmiBlitz3.ab3@22921>     CMP.l #0,a0
00032858 <AmiBlitz3.ab3@22922>     BNE 'l1
0003285E <AmiBlitz3.ab3@22923>     JMP errorasmexit
00032860 <AmiBlitz3.ab3@22924> 'l1 MOVEQ.l #$00,D2
00032864 <AmiBlitz3.ab3@22925>   MOVE.b $5(A0),D2
00032868 <AmiBlitz3.ab3@22926>   BSR.w eval
0003286E <AmiBlitz3.ab3@22928>   MOVEA.l currentfunction,A0
00032872 <AmiBlitz3.ab3@22929>   MOVE.l funcstruct_returntype(a0),a0
00032878 <AmiBlitz3.ab3@22930>   CMP.l #0,a0
0003287C <AmiBlitz3.ab3@22931>   BEQ 'isstatement
00032884 <AmiBlitz3.ab3@22932>   CMP.l #$100,4(a0)
00032888 <AmiBlitz3.ab3@22933>   BLT.w 'isvar
0003288A <AmiBlitz3.ab3@22934>   MOVE.l a2,a1
00032890 <AmiBlitz3.ab3@22935>   TST.l typetocast
00032894 <AmiBlitz3.ab3@22936>   BEQ 'nocast
0003289A <AmiBlitz3.ab3@22937>   MOVE.l typetocast,a1
0003289C <AmiBlitz3.ab3@22938> 'nocast  CMP.l a0,a1
000328A0 <AmiBlitz3.ab3@22939>   BEQ 'ok
000328A6 <AmiBlitz3.ab3@22940>   CLR.l typetocast
000328AC <AmiBlitz3.ab3@22941>   MOVE.l lasttoken,d1
000328B0 <AmiBlitz3.ab3@22942>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000328B4 <AmiBlitz3.ab3@22943>   BEQ 'isnull
000328BA <AmiBlitz3.ab3@22944> 'error  JMP errorconvertreturntype
000328BE <AmiBlitz3.ab3@22951>   MOVEM.l (a7)+,a0/a1/d1
000328C2 <AmiBlitz3.ab3@22952> BRA.w do_AsmExit
000328C8 <AmiBlitz3.ab3@22954> error_convert_types2 JMP error_convert_types
000328CE <AmiBlitz3.ab3@22967>   TST.b debugmode
000328D2 <AmiBlitz3.ab3@22968>    BEQ.w JL_0_D2CA
000328D6 <AmiBlitz3.ab3@22969>   MOVE.w #$C305,D1
000328DA <AmiBlitz3.ab3@22970> BRA.w Atokejsr
000328DE <AmiBlitz3.ab3@22973>   MOVE.w #$4E75,D1
000328E2 <AmiBlitz3.ab3@22974> BRA.w writeword
000328E6 <AmiBlitz3.ab3@22977> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
000328EA <AmiBlitz3.ab3@22978> proclocals:  Ds.l 1                                        ;for debugga!
000328EC <AmiBlitz3.ab3@22979> procnum:     Ds.w 1
000328EE <AmiBlitz3.ab3@22980> procnum2:    Ds.w 1
000328F2 <AmiBlitz3.ab3@22981> prolineat:   Ds.l 1
000328F8 <AmiBlitz3.ab3@22985>    TST.w proceduremode
000328FC <AmiBlitz3.ab3@22986>    BGT JUMP_sreterr
00032900 <AmiBlitz3.ab3@22987>    CMP.w #-$7FF9,D0
00032904 <AmiBlitz3.ab3@22988>    BEQ.w JL_0_D29C
00032906 <AmiBlitz3.ab3@22989>    MOVEQ.l #-$01,D1
0003290A <AmiBlitz3.ab3@22990> BRA.w do_function2
00032910 <AmiBlitz3.ab3@22993> JMP sreterr
00032916 <AmiBlitz3.ab3@22997>   CLR.b skipfunc
0003291C <AmiBlitz3.ab3@22998>   TST.l unusedfunc
00032920 <AmiBlitz3.ab3@22999>   BEQ 'ex
00032924 <AmiBlitz3.ab3@23000>   MOVEM.l d0-d7/a0-a6,-(a7)
0003292A <AmiBlitz3.ab3@23001>   MOVE.l unusedfunc,d1
00032930 <AmiBlitz3.ab3@23002>   LEA ptr_parameterstore,a5
00032932 <AmiBlitz3.ab3@23005>   MOVE.l d1,a0
00032936 <AmiBlitz3.ab3@23006>   LEA 12(a0),a2
00032938 <AmiBlitz3.ab3@23007>   MOVE.l a5,a1
0003293A <AmiBlitz3.ab3@23009>   CMPM.b (a1)+,(a2)+
0003293E <AmiBlitz3.ab3@23010>   BNE 'neq
00032940 <AmiBlitz3.ab3@23011>   TST.b (a2)
00032944 <AmiBlitz3.ab3@23012>   BNE 'ch
00032946 <AmiBlitz3.ab3@23013>   TST.b (a1)
0003294A <AmiBlitz3.ab3@23014>   BNE 'neq
00032952 <AmiBlitz3.ab3@23015>   MOVE.b #1,skipfunc
00032956 <AmiBlitz3.ab3@23016> BRA 'out
00032958 <AmiBlitz3.ab3@23019>   MOVE.l (a0),d1
0003295C <AmiBlitz3.ab3@23020>   BNE 'ag
00032960 <AmiBlitz3.ab3@23023>   MOVEM.l (a7)+,d0-d7/a0-a6
00032962 <AmiBlitz3.ab3@23026> RTS
00032968 <AmiBlitz3.ab3@23030> JMP dupprocerr
0003296E <AmiBlitz3.ab3@23033> JMP illprocperr
00032976 <AmiBlitz3.ab3@23040>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
0003297A <AmiBlitz3.ab3@23041>    BEQ JUMP_sreterr
0003297E <AmiBlitz3.ab3@23042>   CMP.w #-$7FF9,D0
00032982 <AmiBlitz3.ab3@23043>    BEQ.w do_function_return
0003298C <AmiBlitz3.ab3@23046>   MOVE.w oldqflag,instringon
00032992 <AmiBlitz3.ab3@23047>   MOVEA.l lastsourcepos,A5
00032998 <AmiBlitz3.ab3@23048>   JSR getfunctionreturntype
0003299E <AmiBlitz3.ab3@23049>   JSR get1bytemain
000329A4 <AmiBlitz3.ab3@23052>   TST.b declare
000329A8 <AmiBlitz3.ab3@23053>   BEQ 'l1
000329B0 <AmiBlitz3.ab3@23054>   MOVE.b #1,nowdeclare
000329B6 <AmiBlitz3.ab3@23057>   JSR errchx                                           ;writejumpoverfunction
000329BC <AmiBlitz3.ab3@23060>   CLR.b fastfunc
000329C6 <AmiBlitz3.ab3@23061>   MOVE.l firstiff,firstiffstore
000329CE <AmiBlitz3.ab3@23062>   CMP.l #"FAST",-1(a5)
000329D2 <AmiBlitz3.ab3@23063>   BNE 'nofast
000329D8 <AmiBlitz3.ab3@23064>   CMP.b #" ",3(a5)
000329DC <AmiBlitz3.ab3@23065>   BNE 'nofast
000329DE <AmiBlitz3.ab3@23066>   ADDQ.l #3,a5
000329E2 <AmiBlitz3.ab3@23069>     CMP.b #" ",(a5)
000329E6 <AmiBlitz3.ab3@23070>      BNE 'x1
000329E8 <AmiBlitz3.ab3@23071>     ADDQ #1,a5
000329EC <AmiBlitz3.ab3@23072> BRA 'x2
000329F2 <AmiBlitz3.ab3@23075>   MOVE.l a5,lastsourcepos
000329FA <AmiBlitz3.ab3@23076>   MOVE.b #1,fastfunc
00032A02 <AmiBlitz3.ab3@23079>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032A06 <AmiBlitz3.ab3@23080> BRA 'noopt
00032A0C <AmiBlitz3.ab3@23082>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032A10 <AmiBlitz3.ab3@23083>   BNE 'noopt
00032A12 <AmiBlitz3.ab3@23084>   ADDQ.l #4,a5
00032A16 <AmiBlitz3.ab3@23087>     CMP.b #" ",(a5)
00032A1A <AmiBlitz3.ab3@23088>      BNE 'x1b
00032A1C <AmiBlitz3.ab3@23089>     ADDQ #1,a5
00032A20 <AmiBlitz3.ab3@23090> BRA 'x2b
00032A26 <AmiBlitz3.ab3@23093>   MOVE.l a5,lastsourcepos
00032A2C <AmiBlitz3.ab3@23095>   JSR makename2
00032A30 <AmiBlitz3.ab3@23096> BRA 'l1
00032A36 <AmiBlitz3.ab3@23100>   JSR makename2
00032A3C <AmiBlitz3.ab3@23101>   JSR checkused
00032A42 <AmiBlitz3.ab3@23102>   TST.b skipfunc
00032A46 <AmiBlitz3.ab3@23103>    BEQ 'l1
00032A4C <AmiBlitz3.ab3@23104>   JSR skipme
00032A52 <AmiBlitz3.ab3@23105>   CLR.b fastfunc
00032A54 <AmiBlitz3.ab3@23106> RTS
00032A5E <AmiBlitz3.ab3@23109>   MOVE.l linenumat,prolineat
00032A64 <AmiBlitz3.ab3@23110>   ADDQ.w #1,procnum2
00032A6C <AmiBlitz3.ab3@23111>   MOVE.w procnum2(PC),procnum
00032A72 <AmiBlitz3.ab3@23112>   MOVE.w D1,proceduremode
00032A78 <AmiBlitz3.ab3@23113>   CLR.w locvaroff
00032A7C <AmiBlitz3.ab3@23114>   CMP.w #$7B,D0
00032A80 <AmiBlitz3.ab3@23115>    BNE.w JUMP_syntaxerr
00032A88 <AmiBlitz3.ab3@23116>    MOVE.b #1,infunctioncode
00032A8E <AmiBlitz3.ab3@23117>   MOVEA.l tempvm,A0
00032A96 <AmiBlitz3.ab3@23118>   MOVE.w $C(A0),memlibstat
00032A9C <AmiBlitz3.ab3@23119>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032AA0 <AmiBlitz3.ab3@23120>   MOVE.w #$4EF9,D1
00032AA4 <AmiBlitz3.ab3@23121>    BSR.w writeword
00032AAA <AmiBlitz3.ab3@23122>    JSR addoff
00032AAE <AmiBlitz3.ab3@23123>    BSR.w writelong
00032AB4 <AmiBlitz3.ab3@23124>    JSR findproc                                          ;findproc function
00032AB8 <AmiBlitz3.ab3@23125>    BEQ.w JUMP_dupprocerr
00032ABE <AmiBlitz3.ab3@23126>    JSR addlabel
00032AC4 <AmiBlitz3.ab3@23127>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032ACA <AmiBlitz3.ab3@23128>    MOVE.b #0,isfunc(a2)
00032AD2 <AmiBlitz3.ab3@23129>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032ADA <AmiBlitz3.ab3@23130>   MOVE.l destpointer,$E(A2)
00032AE0 <AmiBlitz3.ab3@23131>   MOVE.l A2,currentfunction
00032AE6 <AmiBlitz3.ab3@23132>   LEA nops8,A0
00032AEC <AmiBlitz3.ab3@23133>   LEA dataget,A1
00032AF0 <AmiBlitz3.ab3@23134>    BSR.w pokecode2
00032AF6 <AmiBlitz3.ab3@23135>   TST.b debugmode
00032AFA <AmiBlitz3.ab3@23136>    BEQ.b JL_0_D3AA
00032AFC <AmiBlitz3.ab3@23137>   MOVEQ.l #$04,D1
00032B02 <AmiBlitz3.ab3@23138>    JSR writetrap
00032B0C <AmiBlitz3.ab3@23139>   MOVE.l destpointer,proclocals
00032B10 <AmiBlitz3.ab3@23140>    BSR.w writelong
00032B14 <AmiBlitz3.ab3@23141>    BSR.w writelong
00032B18 <AmiBlitz3.ab3@23144>    LEA $16(A2),A4
00032B20 <AmiBlitz3.ab3@23145>   MOVE.b proceduremode+1,$5(A2)
00032B22 <AmiBlitz3.ab3@23146>   MOVEQ.l #$00,D6
00032B24 <AmiBlitz3.ab3@23147>   MOVEQ.l #$00,D5
00032B2A <AmiBlitz3.ab3@23148>    JSR get1bytemain
00032B2E <AmiBlitz3.ab3@23149>   CMP.w #$7D,D0
00032B32 <AmiBlitz3.ab3@23150>    BEQ.w JL_0_D466
00032B36 <AmiBlitz3.ab3@23153>    CMP.b #"@",d0
00032B3A <AmiBlitz3.ab3@23154>    BNE 'l2
00032B3C <AmiBlitz3.ab3@23155>    MOVE.l a0,-(a7)
00032B42 <AmiBlitz3.ab3@23156>    MOVE.l currentfunction,a0
00032B48 <AmiBlitz3.ab3@23157>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032B4C <AmiBlitz3.ab3@23158>    BNE 'l1
00032B50 <AmiBlitz3.ab3@23159>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032B56 <AmiBlitz3.ab3@23162>    JSR get1bytemain
00032B58 <AmiBlitz3.ab3@23163>    MOVE.l (a7)+,a0
00032B5C <AmiBlitz3.ab3@23166>    BSR.w getparameter
00032B60 <AmiBlitz3.ab3@23167>    BSR.w JL_0_8E3C
00032B68 <AmiBlitz3.ab3@23168>   CMPI.l #$7,$4(A2)
00032B6C <AmiBlitz3.ab3@23169>    BNE.w JL_0_D3F6
00032B72 <AmiBlitz3.ab3@23170>   LEA stbuff,A0
00032B74 <AmiBlitz3.ab3@23171>   MOVE.w D5,D1
00032B76 <AmiBlitz3.ab3@23172>   LSL.w #2,D1
00032B7A <AmiBlitz3.ab3@23173>   MOVE.w D6,$0(A0,D1.W)
00032B80 <AmiBlitz3.ab3@23174>   MOVE.w $4(A3),$2(A0,D1.W)
00032B82 <AmiBlitz3.ab3@23175>   ADDQ.w #1,D5
00032B84 <AmiBlitz3.ab3@23176>   MOVEQ.l #$07,D2
00032B88 <AmiBlitz3.ab3@23177> BRA.w JL_0_D442
00032B8E <AmiBlitz3.ab3@23180> JMP toovarerr
00032B92 <AmiBlitz3.ab3@23183>   MOVE.w #$2940,D1
00032B94 <AmiBlitz3.ab3@23184>   MOVEQ.l #$03,D2
00032B9C <AmiBlitz3.ab3@23185>   BTST #$0,flagmask+1
00032BA0 <AmiBlitz3.ab3@23186>    BNE.w JL_0_D430
00032BA8 <AmiBlitz3.ab3@23187>   CMPI.l #$100,$4(A2)
00032BAC <AmiBlitz3.ab3@23188>    BCC.w JUMP_illprocperr
00032BB0 <AmiBlitz3.ab3@23189>   MOVE.w $6(A2),D2
00032BB4 <AmiBlitz3.ab3@23190>   CMP.w #$2,D2
00032BB8 <AmiBlitz3.ab3@23191>    BHI.w JL_0_D430
00032BBC <AmiBlitz3.ab3@23192>    BEQ.w JL_0_D42C
00032BC0 <AmiBlitz3.ab3@23193>   EORI.w #$3000,D1
00032BC4 <AmiBlitz3.ab3@23194> BRA.w JL_0_D430
00032BCA <AmiBlitz3.ab3@23197> JMP more6pard
00032BCE <AmiBlitz3.ab3@23200>   ORI.w #$1000,D1
00032BD0 <AmiBlitz3.ab3@23203>   OR.w D6,D1
00032BD6 <AmiBlitz3.ab3@23204>   TST.b fpu
00032BDA <AmiBlitz3.ab3@23205>   BEQ 'nofpu
00032BDE <AmiBlitz3.ab3@23206>   CMP.b #5,d2
00032BE2 <AmiBlitz3.ab3@23207>   BNE 'nofpu
00032BE6 <AmiBlitz3.ab3@23208>   CMP.w #6,d6
00032BEA <AmiBlitz3.ab3@23209>   BLT 'l10a
00032BF0 <AmiBlitz3.ab3@23210>   CMP.l #newtype_double,a2
00032BF4 <AmiBlitz3.ab3@23211>   BEQ JUMP_more6pard
00032BF8 <AmiBlitz3.ab3@23212> BRA 'nofpu
00032BFE <AmiBlitz3.ab3@23215>   MOVE.l #$f22c6400,d1
00032C02 <AmiBlitz3.ab3@23216>   MOVEM.l d0/a4,-(a7)
00032C04 <AmiBlitz3.ab3@23217>   MOVE.l d6,d0
00032C06 <AmiBlitz3.ab3@23218>   ASL.l #7,d0
00032C08 <AmiBlitz3.ab3@23219>   OR.w d0,d1
00032C0E <AmiBlitz3.ab3@23220>   CMP.l #newtype_double,a2
00032C12 <AmiBlitz3.ab3@23221>   BNE 'l1
00032C18 <AmiBlitz3.ab3@23222>   OR.l #$1000,d1
00032C1C <AmiBlitz3.ab3@23225>   BSR writelong
00032C20 <AmiBlitz3.ab3@23226>   MOVE.w 4(a3),d1
00032C24 <AmiBlitz3.ab3@23227>   BSR writeword
00032C28 <AmiBlitz3.ab3@23228>   MOVEM.l (a7)+,a4/d0
00032C2C <AmiBlitz3.ab3@23229> BRA JL_0_D442
00032C2E <AmiBlitz3.ab3@23232>   MOVE.l A4,-(A7)
00032C32 <AmiBlitz3.ab3@23233>    CMP.w #6,d6
00032C36 <AmiBlitz3.ab3@23234>    BLT 'l10
00032C3A <AmiBlitz3.ab3@23235>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032C3C <AmiBlitz3.ab3@23236>    ADD.w d6,d1
00032C42 <AmiBlitz3.ab3@23237>    JSR Atokejsr
00032C48 <AmiBlitz3.ab3@23238>    TST.w dontwrite
00032C4C <AmiBlitz3.ab3@23239>    BNE 'l10
00032C52 <AmiBlitz3.ab3@23240>    MOVE.l data1start,d1
00032C58 <AmiBlitz3.ab3@23241>    MOVE.l destpointer,a4
00032C5C <AmiBlitz3.ab3@23242>    ADD.l d1,-6(a4)
00032C62 <AmiBlitz3.ab3@23243>    MOVE.l destpointer,d1
00032C64 <AmiBlitz3.ab3@23244>    SUBQ.l #6,d1
00032C6A <AmiBlitz3.ab3@23245>    SUB.l destbufferstart,d1
00032C6C <AmiBlitz3.ab3@23247>    MOVE.l d2,-(a7)
00032C6E <AmiBlitz3.ab3@23248>    MOVE.l d1,d2
00032C74 <AmiBlitz3.ab3@23249>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032C76 <AmiBlitz3.ab3@23250>    MOVE.l (a7)+,d2
00032C7C <AmiBlitz3.ab3@23251>    MOVE.l destpointer,a4
00032C80 <AmiBlitz3.ab3@23252>    CMP.w #2,d2
00032C84 <AmiBlitz3.ab3@23253>    BNE 'nw1
00032C8A <AmiBlitz3.ab3@23255>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032C92 <AmiBlitz3.ab3@23256>    ADD.l #2,-6(a4)
00032C96 <AmiBlitz3.ab3@23259>    CMP.w #1,d2
00032C9A <AmiBlitz3.ab3@23260>    BNE 'nb
00032CA0 <AmiBlitz3.ab3@23261>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032CA8 <AmiBlitz3.ab3@23262>    ADD.l #3,-6(a4)
00032CAE <AmiBlitz3.ab3@23265>    MOVE.w $4(a3),-2(a4)
00032CB2 <AmiBlitz3.ab3@23266> BRA 'ne1
00032CB6 <AmiBlitz3.ab3@23269>   BSR.w writeword                                          ;write storeparameter
00032CBA <AmiBlitz3.ab3@23272>   MOVE.w $4(A3),D1
00032CBE <AmiBlitz3.ab3@23273>    BSR.w writeword
00032CC0 <AmiBlitz3.ab3@23276>   MOVEA.l (A7)+,A4
00032CC6 <AmiBlitz3.ab3@23279>   CLR.l functionreturntype
00032CC8 <AmiBlitz3.ab3@23280>   ADDQ.w #1,D6
00032CCC <AmiBlitz3.ab3@23281>   CMP.w #11,D6                                             ;max function parameters
00032CD0 <AmiBlitz3.ab3@23282>    BCC.w JUMP_toovarerr
00032CD6 <AmiBlitz3.ab3@23283>   MOVE.l currentfunction,a0
00032CDA <AmiBlitz3.ab3@23284>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032CDC <AmiBlitz3.ab3@23285>   MOVE.b D2,(A4)+
00032CE0 <AmiBlitz3.ab3@23286>   CMP.w #$2C,D0
00032CE4 <AmiBlitz3.ab3@23287>    BNE.w JL_0_D45E
00032CEA <AmiBlitz3.ab3@23288>    JSR get1bytemain
00032CEE <AmiBlitz3.ab3@23300> BRA.w JL_0_D3C6
00032CF2 <AmiBlitz3.ab3@23303>   CMP.w #$7D,D0
00032CF6 <AmiBlitz3.ab3@23304>    BNE.w JUMP_syntaxerr
00032CFC <AmiBlitz3.ab3@23307>   MOVEA.l currentfunction,A2
00032CFE <AmiBlitz3.ab3@23308>   LSL.w #4,D5
00032D00 <AmiBlitz3.ab3@23309>   OR.w D5,D6
00032D04 <AmiBlitz3.ab3@23310>   MOVE.b D6,$4(A2)
00032D06 <AmiBlitz3.ab3@23311>   LSR.w #4,D6
00032D0A <AmiBlitz3.ab3@23312>    BEQ.w JL_0_D4C4
00032D10 <AmiBlitz3.ab3@23313>   LEA stbuff,A0
00032D12 <AmiBlitz3.ab3@23314>   SUBQ.w #1,D6
00032D14 <AmiBlitz3.ab3@23317>     MOVE.w D6,D1                                           ;function stringpars
00032D16 <AmiBlitz3.ab3@23318>     LSL.w #2,D1                                            ;stringsize was 2
00032D18 <AmiBlitz3.ab3@23320>       LSL.w #1,d1
00032D1A <AmiBlitz3.ab3@23321>       ADDQ.w #4,d1
00032D1C <AmiBlitz3.ab3@23323>     ADDQ.w #8,D1
00032D22 <AmiBlitz3.ab3@23324>     MOVE.w D1,funcst+2
00032D28 <AmiBlitz3.ab3@23325>     MOVE.l funcst,D1
00032D2C <AmiBlitz3.ab3@23326>     BSR.w writelong
00032D2E <AmiBlitz3.ab3@23327>     MOVE.w (A0)+,D1
00032D32 <AmiBlitz3.ab3@23328>     CMP.b #5,d1
00032D36 <AmiBlitz3.ab3@23329>     BLE 's1
00032D3A <AmiBlitz3.ab3@23330>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032D3E <AmiBlitz3.ab3@23331>     BSR writeinstruction
00032D40 <AmiBlitz3.ab3@23332>     MOVE.w D6,D1                                           ;function stringpars
00032D42 <AmiBlitz3.ab3@23333>     LSL.w #2,D1                                            ;stringsize was 2
00032D44 <AmiBlitz3.ab3@23335>       LSL.w #1,d1
00032D46 <AmiBlitz3.ab3@23337>     ADDQ.w #8,D1
00032D4A <AmiBlitz3.ab3@23338>     BSR writeword
00032D4E <AmiBlitz3.ab3@23339>   BRA 's2
00032D54 <AmiBlitz3.ab3@23342>     OR.w movedna3,D1
00032D58 <AmiBlitz3.ab3@23343>      BSR.w writeword
00032D5E <AmiBlitz3.ab3@23346>     MOVE.w (A0)+,least+2
00032D64 <AmiBlitz3.ab3@23347>     MOVE.l least,D1
00032D68 <AmiBlitz3.ab3@23348>      BSR.w writelong
00032D6A <AmiBlitz3.ab3@23349>     MOVE.l A0,-(A7)
00032D6E <AmiBlitz3.ab3@23350>     MOVE.w #$C700,D1
00032D72 <AmiBlitz3.ab3@23351>      BSR.w Atokejsr
00032D74 <AmiBlitz3.ab3@23352>     MOVEA.l (A7)+,A0
00032D78 <AmiBlitz3.ab3@23353>   DBF D6,JL_0_D482
00032D7E <AmiBlitz3.ab3@23356> JMP get1bytemain
00032D84 <AmiBlitz3.ab3@23360>   MOVE.w dontwrite,D1
00032D88 <AmiBlitz3.ab3@23361>    BNE.w JL_0_D4F6
00032D8E <AmiBlitz3.ab3@23362>   MOVE.l destpointer,-(A7)
00032D94 <AmiBlitz3.ab3@23363>   MOVE.l A0,destpointer
00032D9A <AmiBlitz3.ab3@23364>   MOVE.l linksize,D1
00032D9E <AmiBlitz3.ab3@23365>    BSR.w writelong                                         ;writefunctions jumppos
00032DA4 <AmiBlitz3.ab3@23366>    TST.b fastfunc
00032DA8 <AmiBlitz3.ab3@23367>    BNE 'skip
00032DAC <AmiBlitz3.ab3@23368>   MOVE.w #$CC00,D1
00032DB0 <AmiBlitz3.ab3@23369>    BSR.w tokejsr2                                          ;write clearvars
00032DB6 <AmiBlitz3.ab3@23372>   MOVE.l (A7)+,destpointer
00032DB8 <AmiBlitz3.ab3@23375> RTS
00032DBE <AmiBlitz3.ab3@23379>   MOVEA.l currentfunction,A2
00032DC2 <AmiBlitz3.ab3@23380>   MOVEA.l $E(A2),A0
00032DC6 <AmiBlitz3.ab3@23381>   MOVE.w $6(A2),D1
00032DCA <AmiBlitz3.ab3@23382>    BEQ.w JL_0_D538
00032DD0 <AmiBlitz3.ab3@23383>   MOVE.w D1,linksize+2
00032DD4 <AmiBlitz3.ab3@23384>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032DD8 <AmiBlitz3.ab3@23385>    BNE.w JL_0_D522
00032DDA <AmiBlitz3.ab3@23386>   ADDQ.w #6,A0
00032DDE <AmiBlitz3.ab3@23387>   MOVE.l A0,$E(A2)
00032DE2 <AmiBlitz3.ab3@23388> BRA.w JL_0_D4C8
00032DE4 <AmiBlitz3.ab3@23391>   MOVE.l A0,-(A7)
00032DE8 <AmiBlitz3.ab3@23392>    BSR.w JL_0_D4C8
00032DEA <AmiBlitz3.ab3@23393>   MOVEA.l (A7)+,A0
00032DEE <AmiBlitz3.ab3@23394>   LEA $A(A0),A0
00032DF4 <AmiBlitz3.ab3@23395>   MOVEA.l currentfunction,A2
00032DF8 <AmiBlitz3.ab3@23396> BRA.w JL_0_D54A
00032DFC <AmiBlitz3.ab3@23399>   MOVE.w $8(A2),D1
00032E00 <AmiBlitz3.ab3@23400>    BNE.w JL_0_D54A
00032E04 <AmiBlitz3.ab3@23401>   LEA $10(A0),A0
00032E08 <AmiBlitz3.ab3@23402>   MOVE.l A0,$E(A2)
00032E0A <AmiBlitz3.ab3@23403> RTS
00032E10 <AmiBlitz3.ab3@23407> JMP errormsg_nofast
00032E16 <AmiBlitz3.ab3@23410>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00032E1A <AmiBlitz3.ab3@23411>    BNE.w JL_0_D580
00032E20 <AmiBlitz3.ab3@23412>    TST.b fastfunc
00032E24 <AmiBlitz3.ab3@23413>    BNE JUMP_errormsg_nofast
00032E2A <AmiBlitz3.ab3@23414>   MOVE.l destpointer,-(A7)
00032E30 <AmiBlitz3.ab3@23415>   MOVE.l A0,destpointer
00032E34 <AmiBlitz3.ab3@23416>   MOVE.w #$4EB9,D1
00032E38 <AmiBlitz3.ab3@23417>    BSR.w writeword
00032E3E <AmiBlitz3.ab3@23418>    JSR addoff
00032E42 <AmiBlitz3.ab3@23419>    BSR.w writelong
00032E44 <AmiBlitz3.ab3@23420>   MOVEA.l (A7)+,A0
00032E4A <AmiBlitz3.ab3@23421>   MOVEA.l destpointer,A1
00032E4C <AmiBlitz3.ab3@23422>   MOVE.l A0,-(A1)
00032E52 <AmiBlitz3.ab3@23423>   MOVE.l A0,destpointer
00032E56 <AmiBlitz3.ab3@23426>   MOVE.w $8(A2),D4
00032E5A <AmiBlitz3.ab3@23427>    BPL.w JL_0_D59E
00032E5E <AmiBlitz3.ab3@23428>   MOVE.w #$C004,D1
00032E62 <AmiBlitz3.ab3@23429>    BSR.w tokejsr2
00032E68 <AmiBlitz3.ab3@23430>   MOVEA.l currentfunction,A2
00032E6C <AmiBlitz3.ab3@23431>   MOVE.w $8(A2),D4
00032E70 <AmiBlitz3.ab3@23432>   ANDI.w #$7FFF,D4
00032E74 <AmiBlitz3.ab3@23435>    BEQ.w JL_0_D5E0
00032E78 <AmiBlitz3.ab3@23436>   MOVE.b $4(A2),D1
00032E7C <AmiBlitz3.ab3@23437>   ANDI.w #$F,D1
00032E7E <AmiBlitz3.ab3@23438>   MOVE.w D1,-(A7)
00032E82 <AmiBlitz3.ab3@23439>   CMP.w #$5,D1
00032E86 <AmiBlitz3.ab3@23440>    BCS.w JL_0_D5BC
00032E8A <AmiBlitz3.ab3@23441>   MOVE.w #$2F04,D1
00032E8E <AmiBlitz3.ab3@23442>    BSR.w writeword
00032E94 <AmiBlitz3.ab3@23445>   MOVE.l locdatast,D3
00032E9A <AmiBlitz3.ab3@23446>    JSR datastart
00032E9E <AmiBlitz3.ab3@23447>   MOVE.w #$C501,D1
00032EA2 <AmiBlitz3.ab3@23448>    BSR.w tokejsr2
00032EA4 <AmiBlitz3.ab3@23449>   MOVE.w (A7)+,D1
00032EA8 <AmiBlitz3.ab3@23450>   CMP.w #$5,D1
00032EAC <AmiBlitz3.ab3@23451>    BCS.w JL_0_D5E0
00032EB0 <AmiBlitz3.ab3@23452>   MOVE.w #$281F,D1
00032EB4 <AmiBlitz3.ab3@23453>    BSR.w writeword
00032EB8 <AmiBlitz3.ab3@23455>   MOVE.w #$4E75,D1
00032EBC <AmiBlitz3.ab3@23456> BRA.w writeword
00032EC2 <AmiBlitz3.ab3@23460>   LEA mwait,A0
00032EC8 <AmiBlitz3.ab3@23461>   LEA mwaitf,A1
00032ECC <AmiBlitz3.ab3@23462> BRA.w pokecode
00032ED2 <AmiBlitz3.ab3@23466> JMP laberr
00032ED6 <AmiBlitz3.ab3@23469>   CMP.w #$2E,D0
00032EDA <AmiBlitz3.ab3@23470>   BNE.w JUMP_syntaxerr
00032EE0 <AmiBlitz3.ab3@23471>   JSR getparameter2
00032EE4 <AmiBlitz3.ab3@23472>   BEQ.w JUMP_laberr
00032EEA <AmiBlitz3.ab3@23473>   LEA newtypebase,A2
00032EF0 <AmiBlitz3.ab3@23474>   JSR findtype
00032EF4 <AmiBlitz3.ab3@23475>   BNE.w JL_0_D626
00032EFC <AmiBlitz3.ab3@23476>   CMPI.l #MaxByte,$4(A2)
00032F00 <AmiBlitz3.ab3@23477>   BNE.w JUMP_typeerr
00032F04 <AmiBlitz3.ab3@23478> BRA.w JL_0_D62A
00032F0A <AmiBlitz3.ab3@23481> JMP typeerr
00032F10 <AmiBlitz3.ab3@23484>   JSR addlabel
00032F14 <AmiBlitz3.ab3@23487>   CLR.l $4(A2)
00032F1A <AmiBlitz3.ab3@23488>   MOVE.l A2,thistype
00032F20 <AmiBlitz3.ab3@23489>   CLR.l prevtype
00032F26 <AmiBlitz3.ab3@23490>   CLR.w typelen
00032F2C <AmiBlitz3.ab3@23491>   CLR.w linemode
00032F32 <AmiBlitz3.ab3@23492>   JSR reget
00032F36 <AmiBlitz3.ab3@23493>   BNE.w typemode
00032F38 <AmiBlitz3.ab3@23494> RTS
00032F3C <AmiBlitz3.ab3@23497>   CMP.w #-$7FFE,D0
00032F40 <AmiBlitz3.ab3@23498>   BEQ.w JL_0_D82E
00032F4A <AmiBlitz3.ab3@23500>   MOVE.w oldqflag,instringon
00032F50 <AmiBlitz3.ab3@23501>   MOVEA.l lastsourcepos,A5
00032F52 <AmiBlitz3.ab3@23502>   MOVEQ.l #$00,D6
00032F56 <AmiBlitz3.ab3@23503>   CMP.w #$2A,D0
00032F5A <AmiBlitz3.ab3@23504>   BNE.w JL_0_D670
00032F5C <AmiBlitz3.ab3@23505>   MOVEQ.l #$01,D6
00032F62 <AmiBlitz3.ab3@23506>   JSR get1bytemain
00032F66 <AmiBlitz3.ab3@23507> BRA.w JL_0_D67E
00032F6A <AmiBlitz3.ab3@23510>   CMP.w #$40,D0
00032F6E <AmiBlitz3.ab3@23511>   BNE.w JL_0_D67E
00032F70 <AmiBlitz3.ab3@23512>   MOVEQ.l #$05,D6
00032F76 <AmiBlitz3.ab3@23513>   JSR get1bytemain
00032F7C <AmiBlitz3.ab3@23516>   MOVE.w D6,flagmask
00032F82 <AmiBlitz3.ab3@23517>   JSR getparameter2
00032F86 <AmiBlitz3.ab3@23518>   BEQ.w JUMP_syntaxerr
00032F8C <AmiBlitz3.ab3@23519>   MOVEA.l thistype,A2
00032F8E <AmiBlitz3.ab3@23520>   ADDQ.w #4,A2
00032F94 <AmiBlitz3.ab3@23521>   JSR findvariable2
00032F98 <AmiBlitz3.ab3@23522>   BEQ.w JUMP_dupofferr
00032F9E <AmiBlitz3.ab3@23523>   JSR addlabel
00032FA0 <AmiBlitz3.ab3@23524>   MOVE.l A2,-(A7)
00032FA4 <AmiBlitz3.ab3@23525>   CMP.w #$2E,D0
00032FA8 <AmiBlitz3.ab3@23526>    BEQ.w JL_0_D6CE
00032FAC <AmiBlitz3.ab3@23527>   CMP.w #$24,D0
00032FB0 <AmiBlitz3.ab3@23528>    BNE.w JL_0_D6C0
00032FB6 <AmiBlitz3.ab3@23529>   MOVE.l #newtype_string,D2
00032FBC <AmiBlitz3.ab3@23530>    JSR get1bytemain
00032FC0 <AmiBlitz3.ab3@23531> BRA.w JL_0_D710
00032FC6 <AmiBlitz3.ab3@23534> JMP dupofferr
00032FCC <AmiBlitz3.ab3@23537>   MOVE.l prevtype,D2
00032FD0 <AmiBlitz3.ab3@23538>   BEQ.w JUMP_notypeerr
00032FD4 <AmiBlitz3.ab3@23539> BRA.w JL_0_D706
00032FDA <AmiBlitz3.ab3@23542> JMP notypeerr
00032FE0 <AmiBlitz3.ab3@23545>   JSR getparameter2
00032FE4 <AmiBlitz3.ab3@23546>    BEQ.w JUMP_syntaxerr
00032FEA <AmiBlitz3.ab3@23547>   LEA newtypebase,A2
00032FF0 <AmiBlitz3.ab3@23548>    JSR findtype
00032FF4 <AmiBlitz3.ab3@23549>    BEQ.w JL_0_D704
00032FFC <AmiBlitz3.ab3@23550>   BTST #$0,flagmask+1
00033000 <AmiBlitz3.ab3@23551>    BEQ.w JUMP_notypeerr
00033006 <AmiBlitz3.ab3@23552>   JSR addlabel
0003300E <AmiBlitz3.ab3@23555>   MOVE.w linenumat+2,$8(A2)
00033016 <AmiBlitz3.ab3@23556>   MOVE.l #MaxByte,$4(A2)
00033018 <AmiBlitz3.ab3@23559>   MOVE.l A2,D2
0003301E <AmiBlitz3.ab3@23562>   CMP.l #newtype_byte,D2
00033022 <AmiBlitz3.ab3@23563>    BEQ.w JL_0_D71E
00033028 <AmiBlitz3.ab3@23566>   ADDQ.w #1,typelen
00033030 <AmiBlitz3.ab3@23567>   BCLR #$0,typelen+1
00033032 <AmiBlitz3.ab3@23570>   MOVEQ.l #$00,D3
00033034 <AmiBlitz3.ab3@23571>   MOVEA.l D2,A2
0003303A <AmiBlitz3.ab3@23572>   MOVE.l A2,prevtype
0003303E <AmiBlitz3.ab3@23573>   MOVE.w $8(A2),D3
00033040 <AmiBlitz3.ab3@23574>   MOVEA.l (A7)+,A2
00033044 <AmiBlitz3.ab3@23575>   MOVE.l D2,$A(A2)
00033046 <AmiBlitz3.ab3@23576>   MOVEQ.l #$00,D4
0003304C <AmiBlitz3.ab3@23577>   MOVE.w typelen,D4
00033050 <AmiBlitz3.ab3@23578>   MOVE.w D4,$4(A2)
00033058 <AmiBlitz3.ab3@23579>   BTST #$0,flagmask+1
0003305C <AmiBlitz3.ab3@23580>    BEQ.w JL_0_D74C
0003305E <AmiBlitz3.ab3@23581>   MOVEQ.l #$04,D3
00033062 <AmiBlitz3.ab3@23584>   CMP.w #$5B,D0
00033066 <AmiBlitz3.ab3@23585>    BNE.w JL_0_D782
0003306A <AmiBlitz3.ab3@23586>   MOVEM.l D3-D4/A2,-(A7)
0003306E <AmiBlitz3.ab3@23587>    BSR.w AJL_0_BF6E
00033072 <AmiBlitz3.ab3@23588>   CMP.w #$5D,D0
00033076 <AmiBlitz3.ab3@23589>    BNE.w JUMP_syntaxerr
00033078 <AmiBlitz3.ab3@23590>   TST.w D6
0003307C <AmiBlitz3.ab3@23591>    BNE.w JUMP_fpconerr
0003307E <AmiBlitz3.ab3@23592>   MOVE.l D3,D1
00033082 <AmiBlitz3.ab3@23593>   MOVEM.l (A7)+,D3-D4/A2
00033088 <AmiBlitz3.ab3@23594>    JSR get1bytemain
0003308C <AmiBlitz3.ab3@23595>   MOVE.w D1,$8(A2)
00033090 <AmiBlitz3.ab3@23596>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00033098 <AmiBlitz3.ab3@23597>   ORI.w #$2,flagmask
0003309A <AmiBlitz3.ab3@23600>   ADD.l D3,D4
000330A0 <AmiBlitz3.ab3@23603>     CMP.l #65532,d4
000330A4 <AmiBlitz3.ab3@23608>   BCC JUMP_toolongerr
000330AC <AmiBlitz3.ab3@23609>   MOVE.w flagmask,$6(A2)
000330B2 <AmiBlitz3.ab3@23610>   MOVE.w D4,typelen
000330B4 <AmiBlitz3.ab3@23611> RTS
000330BA <AmiBlitz3.ab3@23614> JMP badenderr
000330C0 <AmiBlitz3.ab3@23617> JMP noiferr
000330C6 <AmiBlitz3.ab3@23620> JMP toolongerr
000330CC <AmiBlitz3.ab3@23623> JMP fpconerr
000330D2 <AmiBlitz3.ab3@23626>   MOVE.l firstiff,D0
000330D6 <AmiBlitz3.ab3@23627>    BEQ.w JUMP_noiferr
000330D8 <AmiBlitz3.ab3@23628>   MOVEA.l D0,A0
000330DC <AmiBlitz3.ab3@23629>   MOVE.w $C(A0),D0
000330E0 <AmiBlitz3.ab3@23630>   ANDI.w #$FF,D0
000330E2 <AmiBlitz3.ab3@23631>   CMP.w D0,D1
000330E6 <AmiBlitz3.ab3@23632>    BNE.w JUMP_badenderr
000330EA <AmiBlitz3.ab3@23635>   CMP.w #$1,D1
000330EE <AmiBlitz3.ab3@23636>   BNE.w JL_0_D7D8
000330F2 <AmiBlitz3.ab3@23637>   MOVE.w #$6000,D1
000330F8 <AmiBlitz3.ab3@23640>     TST.b fast
000330FC <AmiBlitz3.ab3@23641>     BEQ 'l1
00033102 <AmiBlitz3.ab3@23642>     OR.l #$ff,d1
00033106 <AmiBlitz3.ab3@23646>   BSR.w writeword
0003310C <AmiBlitz3.ab3@23647>   MOVEA.l destpointer,A1
00033110 <AmiBlitz3.ab3@23648>   MOVE.l $4(A0),D1
00033112 <AmiBlitz3.ab3@23649>   SUB.l A1,D1
00033118 <AmiBlitz3.ab3@23652>     TST.b fast
0003311C <AmiBlitz3.ab3@23653>     BEQ 'l2
00033120 <AmiBlitz3.ab3@23654>     BSR writelong
00033124 <AmiBlitz3.ab3@23655>   BRA JL_0_D7D8
00033128 <AmiBlitz3.ab3@23659>   BSR.w writeword
0003312C <AmiBlitz3.ab3@23662>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033132 <AmiBlitz3.ab3@23663>   MOVE.l destpointer,D1
00033134 <AmiBlitz3.ab3@23664>   SUB.l A1,D1
0003313A <AmiBlitz3.ab3@23667>     TST.b fast
0003313E <AmiBlitz3.ab3@23668>     BEQ 'l1
00033140 <AmiBlitz3.ab3@23669>     ADDQ.l #4,D1
00033146 <AmiBlitz3.ab3@23670>     MOVE.w dontwrite,D0
0003314A <AmiBlitz3.ab3@23671>     BNE.w JL_0_D7FE
0003314E <AmiBlitz3.ab3@23672>     MOVE.l d1,-$4(a1)
00033152 <AmiBlitz3.ab3@23673>   BRA JL_0_D7FE
00033154 <AmiBlitz3.ab3@23677>   ADDQ.l #2,d1
0003315A <AmiBlitz3.ab3@23678>   TST.w dontwrite
0003315E <AmiBlitz3.ab3@23679>   BNE JL_0_D7FE
00033164 <AmiBlitz3.ab3@23680>   CMP.l #MinWordSgnd,D1
00033168 <AmiBlitz3.ab3@23681>   BCC.w JUMP_bigiferr
0003316C <AmiBlitz3.ab3@23682>   MOVE.w D1,-$2(A1)
0003316E <AmiBlitz3.ab3@23685> RTS
00033174 <AmiBlitz3.ab3@23688> JMP bigiferr
0003317E <AmiBlitz3.ab3@23693>   MOVE.w oldqflag,instringon
00033184 <AmiBlitz3.ab3@23694>   MOVEA.l lastsourcepos,A5
00033186 <AmiBlitz3.ab3@23697>   MOVEQ.l #$01,D1
0003318A <AmiBlitz3.ab3@23698> BRA.w JL_0_D810
00033194 <AmiBlitz3.ab3@23702>   MOVE.w oldqflag,instringon
0003319A <AmiBlitz3.ab3@23703>   MOVEA.l lastsourcepos,A5
0003319C <AmiBlitz3.ab3@23706>   MOVEQ.l #$00,D1
000331A0 <AmiBlitz3.ab3@23709>   BSR.w JL_0_D79E
000331A4 <AmiBlitz3.ab3@23710>   BSR.w AJL_0_D81C
000331AA <AmiBlitz3.ab3@23711> JMP get1bytemain
000331B0 <AmiBlitz3.ab3@23714>   MOVE.l (A0),firstiff
000331B2 <AmiBlitz3.ab3@23715>   MOVEA.l A0,A1
000331B4 <AmiBlitz3.ab3@23716>   MOVEQ.l #$0E,D0
000331BA <AmiBlitz3.ab3@23717>   MOVEA.l _execbase,A6
000331C0 <AmiBlitz3.ab3@23718>   MOVE.l mempool,a0
000331C4 <AmiBlitz3.ab3@23719> JMP _FreePooled(A6)
000331CA <AmiBlitz3.ab3@23723>   JSR get1bytemain
000331CE <AmiBlitz3.ab3@23726>   BEQ.w JL_0_D980
000331D6 <AmiBlitz3.ab3@23727>   CMP.l #"noa7",-1(a5)
000331DA <AmiBlitz3.ab3@23728>   BNE 'l1
000331E0 <AmiBlitz3.ab3@23729>   JSR get1bytemain
000331E6 <AmiBlitz3.ab3@23730>   JSR get1bytemain
000331EC <AmiBlitz3.ab3@23731>   JSR get1bytemain
000331F4 <AmiBlitz3.ab3@23732>   MOVE.w #$3a,lastchar
000331F8 <AmiBlitz3.ab3@23733> BRA JL_0_D980
000331FE <AmiBlitz3.ab3@23736>   CMP.w #"d0",-1(a5)
00033202 <AmiBlitz3.ab3@23737>   BNE 'l2
0003320A <AmiBlitz3.ab3@23738>   MOVE.b #1,returncode
00033210 <AmiBlitz3.ab3@23739>   CLR.w lastchar
00033214 <AmiBlitz3.ab3@23740> BRA JL_0_D980
00033218 <AmiBlitz3.ab3@23743>   CMP.w #$80d7,d0
0003321C <AmiBlitz3.ab3@23744>   BNE JL_0_D836
00033222 <AmiBlitz3.ab3@23745>   JSR skiprest
00033224 <AmiBlitz3.ab3@23746> RTS
00033228 <AmiBlitz3.ab3@23749>   BSR.w JL_0_D844
0003322E <AmiBlitz3.ab3@23750>   JSR reget
00033232 <AmiBlitz3.ab3@23751>   BNE.w JL_0_D836
00033234 <AmiBlitz3.ab3@23752> RTS
00033238 <AmiBlitz3.ab3@23755>   CMP.w #-$7FFF,D0
0003323C <AmiBlitz3.ab3@23756>    BNE.w JL_0_D87E
00033242 <AmiBlitz3.ab3@23757>   MOVE.w linemode,D1
00033246 <AmiBlitz3.ab3@23758>    BNE.w JUMP_modeerr
0003324C <AmiBlitz3.ab3@23759>   ADDQ.w #1,typelen
00033254 <AmiBlitz3.ab3@23760>   BCLR #$0,typelen+1
0003325A <AmiBlitz3.ab3@23761>   MOVEA.l thistype,A0
00033262 <AmiBlitz3.ab3@23762>   MOVE.w typelen,$8(A0)
0003326A <AmiBlitz3.ab3@23763>   MOVE.w #$FFFF,linemode
00033270 <AmiBlitz3.ab3@23764> JMP get1bytemain
00033276 <AmiBlitz3.ab3@23767> JMP modeerr
0003327A <AmiBlitz3.ab3@23770>   CMP.w #-$7FF5,D0
0003327E <AmiBlitz3.ab3@23771>    BEQ.w JL_0_D80E
00033282 <AmiBlitz3.ab3@23772>   CMP.w #-$7FF4,D0
00033286 <AmiBlitz3.ab3@23773>    BEQ.w JL_0_D804
0003328A <AmiBlitz3.ab3@23774>   CMP.w #-$7FF8,D0
0003328E <AmiBlitz3.ab3@23775>    BNE.w JL_0_D89A
00033292 <AmiBlitz3.ab3@23778> BRA.w JL_0_D9E8
00033298 <AmiBlitz3.ab3@23781> JMP interr3
0003329C <AmiBlitz3.ab3@23784>   CMP.w #-$7FF7,D0
000332A0 <AmiBlitz3.ab3@23785>    BNE.w JL_0_D8C8
000332A6 <AmiBlitz3.ab3@23786>    TST.b fpu
000332AA <AmiBlitz3.ab3@23787>    BEQ 'nof
000332B0 <AmiBlitz3.ab3@23788>    MOVEA.l currentfunction,A0
000332B6 <AmiBlitz3.ab3@23789>    CMP.l #0,a0
000332BA <AmiBlitz3.ab3@23790>    BEQ 'nof
000332C0 <AmiBlitz3.ab3@23791>    CMP.b #5,$5(a0)
000332C4 <AmiBlitz3.ab3@23792>     BNE 'nof
000332CA <AmiBlitz3.ab3@23793>    MOVE.l #$f23c5000,d1
000332CE <AmiBlitz3.ab3@23794>    BSR writelong
000332D2 <AmiBlitz3.ab3@23795>    MOVE.w #0,d1
000332D6 <AmiBlitz3.ab3@23796>    BSR writeword
000332DA <AmiBlitz3.ab3@23799>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000332DE <AmiBlitz3.ab3@23800>    BSR.w writeword
000332E4 <AmiBlitz3.ab3@23801>   MOVEA.l currentfunction,A0
000332EA <AmiBlitz3.ab3@23802>   CMP.l #0,a0
000332EE <AmiBlitz3.ab3@23803>   BEQ JL_0_D896
000332F4 <AmiBlitz3.ab3@23804>   MOVE.l destpointer,d1
000332F8 <AmiBlitz3.ab3@23805>   SUB.l $e(a0),d1
000332FC <AmiBlitz3.ab3@23806>   MOVE.l d1,isfunc+1(a0)
00033302 <AmiBlitz3.ab3@23807>   CMPI.b #$7,$5(A0)
00033306 <AmiBlitz3.ab3@23808>    BNE.w JL_0_D896
0003330C <AmiBlitz3.ab3@23809>   MOVE.w putstlen,D1
00033310 <AmiBlitz3.ab3@23810>    BSR.w writeword
00033314 <AmiBlitz3.ab3@23811> BRA.w JL_0_D896
0003331A <AmiBlitz3.ab3@23814> JMP interr
0003331E <AmiBlitz3.ab3@23817>  CMP.w #-$7FD0,D0
00033322 <AmiBlitz3.ab3@23818>    BNE.w JL_0_D966
00033328 <AmiBlitz3.ab3@23819>   MOVE.w proceduremode,D1
0003332C <AmiBlitz3.ab3@23820>    BNE.w JUMP_interr3
00033332 <AmiBlitz3.ab3@23821>   TST.b debugmode
00033336 <AmiBlitz3.ab3@23822>    BEQ.w JL_0_D90A
00033338 <AmiBlitz3.ab3@23823>   MOVEQ.l #$03,D1
0003333E <AmiBlitz3.ab3@23824>    JSR writetrap
00033344 <AmiBlitz3.ab3@23825>   MOVE.w dontwrite,D1
00033348 <AmiBlitz3.ab3@23826>    BNE.w JL_0_D90A
0003334E <AmiBlitz3.ab3@23827>   MOVEA.l intcleanat,A0
00033354 <AmiBlitz3.ab3@23828>   MOVE.l destpointer,(A0)
00033358 <AmiBlitz3.ab3@23829>   MOVE.w #$C30C,D1
0003335C <AmiBlitz3.ab3@23830>    BSR.w Atokejsr
00033362 <AmiBlitz3.ab3@23833>   MOVE.w intstring,D1
00033366 <AmiBlitz3.ab3@23834>    BEQ.w JUMP_interr
0003336A <AmiBlitz3.ab3@23835>    BPL.w JL_0_D934
00033370 <AmiBlitz3.ab3@23836>   MOVE.w intlevel,D1
00033374 <AmiBlitz3.ab3@23837>   ORI.w #$7200,D1
00033378 <AmiBlitz3.ab3@23838>    BSR.w writeword
0003337C <AmiBlitz3.ab3@23839>   MOVE.w #$C103,D1
00033380 <AmiBlitz3.ab3@23840>    BSR.w Atokejsr
00033386 <AmiBlitz3.ab3@23841>   CLR.w intlevel
0003338C <AmiBlitz3.ab3@23844>  CLR.w intstring
00033392 <AmiBlitz3.ab3@23845>   MOVE.l intfin,D1
00033396 <AmiBlitz3.ab3@23846>    BSR.w writelong
0003339C <AmiBlitz3.ab3@23847>   MOVE.l #$70004E75,D1
000333A0 <AmiBlitz3.ab3@23848>    BSR.w writelong
000333A6 <AmiBlitz3.ab3@23849>   MOVE.w dontwrite,D1
000333AA <AmiBlitz3.ab3@23850>    BNE.w JL_0_D962
000333B0 <AmiBlitz3.ab3@23851>   MOVEA.l intjmpat,A0
000333B4 <AmiBlitz3.ab3@23852>   MOVE.l destpointer(PC),(A0)
000333BA <AmiBlitz3.ab3@23855> JMP get1bytemain
000333BE <AmiBlitz3.ab3@23859>   CMP.w #-$7FF2,D0
000333C2 <AmiBlitz3.ab3@23860>    BEQ.w doendsel
000333C6 <AmiBlitz3.ab3@23861>   CMP.w #-$7F4C,D0
000333CA <AmiBlitz3.ab3@23862>    BNE.w JL_0_D97C
000333D0 <AmiBlitz3.ab3@23863> JMP doendseterr
000333D6 <AmiBlitz3.ab3@23867> JMP syntaxerr
000333DC <AmiBlitz3.ab3@23871>   TST.w dirmode
000333E0 <AmiBlitz3.ab3@23872>   BNE.w JUMP_baddirerr
000333E4 <AmiBlitz3.ab3@23873>   MOVE.w #$C800,D1
000333EA <AmiBlitz3.ab3@23874>   JSR Atokejsr                                            ;end
000333F2 <AmiBlitz3.ab3@23875>   CMP.l #"noa7",-4(a5)
000333F6 <AmiBlitz3.ab3@23876>   BNE 'l10
000333FC <AmiBlitz3.ab3@23877>   TST.w dontwrite
00033400 <AmiBlitz3.ab3@23878>   BNE 'l10
00033406 <AmiBlitz3.ab3@23879>   MOVE.l destpointer,d1
00033408 <AmiBlitz3.ab3@23880>   SUBQ.l #4,d1
0003340A <AmiBlitz3.ab3@23881>   MOVE.l a0,-(a7)
0003340C <AmiBlitz3.ab3@23882>   MOVE.l d1,a0
0003340E <AmiBlitz3.ab3@23883>   MOVE.l (a0),a0
00033414 <AmiBlitz3.ab3@23884>   MOVE.l #$60000002,(a0)+
00033418 <AmiBlitz3.ab3@23885>   MOVE.w #$588f,(a0)
0003341A <AmiBlitz3.ab3@23886>   MOVE.l (a7)+,a0
0003341C <AmiBlitz3.ab3@23889> RTS
00033422 <AmiBlitz3.ab3@23893>   TST.w dirmode                                            ;stop
00033426 <AmiBlitz3.ab3@23894>   BNE.w JUMP_baddirerr
00033428 <AmiBlitz3.ab3@23895>   MOVE.w d0,d1
0003342C <AmiBlitz3.ab3@23896>   BEQ 'l10
00033430 <AmiBlitz3.ab3@23897>   CMP.b #$3a,d0
00033434 <AmiBlitz3.ab3@23898>   BEQ 'l10
0003343A <AmiBlitz3.ab3@23899>   JSR get1bytemain
00033440 <AmiBlitz3.ab3@23902>   TST.b debugmode
00033444 <AmiBlitz3.ab3@23903>   BEQ.w newstop
00033448 <AmiBlitz3.ab3@23904>   MOVE.w #$D501,D1
0003344C <AmiBlitz3.ab3@23905> BRA.w Atokejsr
0003344E <AmiBlitz3.ab3@23909>     RTS
00033450 <AmiBlitz3.ab3@23911>   MOVE.w d1,d0
00033454 <AmiBlitz3.ab3@23912>   BEQ 'l10
00033458 <AmiBlitz3.ab3@23913>   CMP.b #$3a,d0
0003345C <AmiBlitz3.ab3@23914>   BEQ 'l10
00033460 <AmiBlitz3.ab3@23915>   SUB.b #$30,d0
00033464 <AmiBlitz3.ab3@23916>   MOVE.w #$4e40,d1
00033468 <AmiBlitz3.ab3@23917> BRA 'l11
0003346C <AmiBlitz3.ab3@23920>   MOVE.w #$4e4a,d1
00033470 <AmiBlitz3.ab3@23921> BRA writeword
00033472 <AmiBlitz3.ab3@23924>   ADD.b d0,d1
00033476 <AmiBlitz3.ab3@23925> BRA writeword
0003347C <AmiBlitz3.ab3@23929> JMP badconterr
00033480 <AmiBlitz3.ab3@23932>   MOVE.w #$4E71,D1
00033484 <AmiBlitz3.ab3@23933> BRA.w writeword
0003348A <AmiBlitz3.ab3@23936>   MOVEA.l firstfor,A2
00033490 <AmiBlitz3.ab3@23937>   CLR.l firstfor
00033496 <AmiBlitz3.ab3@23938>   MOVEA.l _execbase,A6
0003349A <AmiBlitz3.ab3@23941>   CMPA.w #$0,A2
0003349E <AmiBlitz3.ab3@23942>   BEQ.w JL_0_D9E6
000334A0 <AmiBlitz3.ab3@23943>   MOVEA.l A2,A1
000334A2 <AmiBlitz3.ab3@23944>   MOVEA.l (A1),A2
000334A4 <AmiBlitz3.ab3@23945>   MOVEQ.l #$00,D0
000334AA <AmiBlitz3.ab3@23946>   MOVE.l mempool2,a0
000334AE <AmiBlitz3.ab3@23947>   MOVE.b $10(A1),D0
000334B2 <AmiBlitz3.ab3@23948>   JSR _FreePooled(A6)                                      ;freememfor_error
000334B6 <AmiBlitz3.ab3@23949> BRA.w JL_0_D9CC
000334B8 <AmiBlitz3.ab3@23952> RTS
000334BE <AmiBlitz3.ab3@23956> JMP badpenderr
000334C4 <AmiBlitz3.ab3@23962>   MOVE.w proceduremode,D1
000334C8 <AmiBlitz3.ab3@23963>    BEQ.w JUMP_badpenderr
000334CE <AmiBlitz3.ab3@23965>   MOVE.w dontwrite,D1
000334D2 <AmiBlitz3.ab3@23966>    BNE.w JL_0_DA1A
000334D8 <AmiBlitz3.ab3@23967>   MOVEA.l firstpend,A2
000334DC <AmiBlitz3.ab3@23970>   CMPA.w #$0,A2
000334E0 <AmiBlitz3.ab3@23971>    BEQ.w JL_0_DA1A
000334E4 <AmiBlitz3.ab3@23972>   MOVEA.l $4(A2),A0
000334EA <AmiBlitz3.ab3@23973>   MOVE.l destpointer,(A0)
000334EC <AmiBlitz3.ab3@23974>   MOVEA.l (A2),A2
000334F0 <AmiBlitz3.ab3@23975> BRA.w JL_0_DA02
000334F6 <AmiBlitz3.ab3@23978>   TST.b debugmode
000334FA <AmiBlitz3.ab3@23979>    BEQ.b JL_0_DA2A
000334FC <AmiBlitz3.ab3@23980>   MOVEQ.l #$05,D1
00033502 <AmiBlitz3.ab3@23981>   JSR writetrap
00033508 <AmiBlitz3.ab3@23984>   MOVEA.l firstlocal,A2                                    ;firstlocal
0003350E <AmiBlitz3.ab3@23985>   JSR calcstatic2b                                           ;calcstatic
00033514 <AmiBlitz3.ab3@23986>   MOVEA.l currentfunction,A0
0003351A <AmiBlitz3.ab3@23987>   MOVE.l destpointer,d1
0003351E <AmiBlitz3.ab3@23988>   SUB.l $e(a0),d1
00033522 <AmiBlitz3.ab3@23989>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033526 <AmiBlitz3.ab3@23990>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
0003352C <AmiBlitz3.ab3@23991>   MOVE.l D3,locdatast
00033532 <AmiBlitz3.ab3@23992>   MOVEA.l tempvm,A1
00033538 <AmiBlitz3.ab3@23993>  CLR.b infunctioncode
0003353E <AmiBlitz3.ab3@23994>   MOVE.l firstiffstore,d1
00033544 <AmiBlitz3.ab3@23995>   CMP.l firstiff,d1
00033548 <AmiBlitz3.ab3@23996>   BNE JUMP_noenderr
0003354C <AmiBlitz3.ab3@23997>   TST.w $C(A1)                                             ;dim
00033550 <AmiBlitz3.ab3@23998>    BPL.w JL_0_DA64
00033556 <AmiBlitz3.ab3@23999>  BSET #$7,$8(A0)
0003355A <AmiBlitz3.ab3@24000>   MOVE.w #$C005,D1
0003355E <AmiBlitz3.ab3@24001>    BSR.w tokejsr2                                          ;writefreememstatement
00033562 <AmiBlitz3.ab3@24002> BRA.w JL_0_DA6C
00033568 <AmiBlitz3.ab3@24005> JMP noenderr
00033570 <AmiBlitz3.ab3@24008>   MOVE.w memlibstat,$C(A1)
00033576 <AmiBlitz3.ab3@24011>   MOVEA.l currentfunction,A0
0003357A <AmiBlitz3.ab3@24012>   MOVE.l $E(A0),-(A7)
00033582 <AmiBlitz3.ab3@24013>   MOVE.w locvaroff,$6(A0)
00033588 <AmiBlitz3.ab3@24014>   BCLR #$1,$7(A0)
0003358E <AmiBlitz3.ab3@24015>   BCLR #$0,$7(A0)
00033594 <AmiBlitz3.ab3@24016>   CMPI.b #$7,$5(A0)
00033598 <AmiBlitz3.ab3@24017>    BNE.w JL_0_DA9E
0003359E <AmiBlitz3.ab3@24018>   MOVE.w getstlen,D1
000335A2 <AmiBlitz3.ab3@24019>    BSR.w writeword
000335A6 <AmiBlitz3.ab3@24022>   TST.w $6(A0)
000335AA <AmiBlitz3.ab3@24023>    BEQ.w JL_0_DAB8
000335AE <AmiBlitz3.ab3@24024>   MOVE.w #$FC7B,D1
000335B4 <AmiBlitz3.ab3@24025>    JSR uselib
000335BA <AmiBlitz3.ab3@24026>   MOVE.w unlinka4,D1
000335C0 <AmiBlitz3.ab3@24027>    JSR writeword
000335C6 <AmiBlitz3.ab3@24030>   MOVEA.l currentfunction,A0
000335C8 <AmiBlitz3.ab3@24031>   MOVEQ.l #$00,D1
000335CC <AmiBlitz3.ab3@24032>   MOVE.b $4(A0),D1
000335CE <AmiBlitz3.ab3@24033>   LSR.w #4,D1
000335D2 <AmiBlitz3.ab3@24034>    BEQ.w JL_0_DB24
000335D4 <AmiBlitz3.ab3@24036>      LSL.w #1,d1
000335D8 <AmiBlitz3.ab3@24038>   CMP.w #$1,D1
000335DC <AmiBlitz3.ab3@24039>    BNE.w JL_0_DAE0
000335E2 <AmiBlitz3.ab3@24040>   MOVE.w fix1,D1
000335E8 <AmiBlitz3.ab3@24041>    JSR writeword
000335EC <AmiBlitz3.ab3@24042> BRA.w JL_0_DB24
000335EE <AmiBlitz3.ab3@24045>   LSL.w #2,D1
000335F0 <AmiBlitz3.ab3@24046>   MOVE.w D1,-(A7)
000335F6 <AmiBlitz3.ab3@24047>   MOVE.w D1,moverts+2
000335FC <AmiBlitz3.ab3@24048>   MOVE.l moverts,D1
00033602 <AmiBlitz3.ab3@24049>    JSR writelong
00033604 <AmiBlitz3.ab3@24050>   MOVE.w (A7)+,D1
00033608 <AmiBlitz3.ab3@24051>   CMP.w #$8,D1
0003360C <AmiBlitz3.ab3@24052>    BHI.w JL_0_DB14
00033610 <AmiBlitz3.ab3@24053>   ANDI.w #$7,D1
00033612 <AmiBlitz3.ab3@24054>   LSL.w #8,D1
00033614 <AmiBlitz3.ab3@24055>   LSL.w #1,D1
0003361A <AmiBlitz3.ab3@24056>   OR.w fixq,D1
00033620 <AmiBlitz3.ab3@24057>    JSR writeword
00033624 <AmiBlitz3.ab3@24058> BRA.w JL_0_DB24
0003362A <AmiBlitz3.ab3@24062>    MOVE.w D1,fixstack+2
00033630 <AmiBlitz3.ab3@24063>   MOVE.l fixstack,D1
00033636 <AmiBlitz3.ab3@24064>    JSR writelong
0003363A <AmiBlitz3.ab3@24067>    BSR.w JL_0_D2CA
0003363E <AmiBlitz3.ab3@24068>    BSR.w JL_0_D4F8
00033640 <AmiBlitz3.ab3@24069>   MOVEA.l (A7)+,A0
00033646 <AmiBlitz3.ab3@24070>   MOVE.w dontwrite,D1
0003364A <AmiBlitz3.ab3@24071>    BNE.w JL_0_DB3E
00033650 <AmiBlitz3.ab3@24072>   MOVE.l destpointer,-(A0)
00033656 <AmiBlitz3.ab3@24075>   CLR.w proceduremode
0003365C <AmiBlitz3.ab3@24076>   CLR.l currentfunction
00033662 <AmiBlitz3.ab3@24077>   CLR.w procnum
00033666 <AmiBlitz3.ab3@24078>    BSR.w JL_0_DB5C
0003366C <AmiBlitz3.ab3@24079>    JSR freepends
00033672 <AmiBlitz3.ab3@24080> JMP get1bytemain
00033674 <AmiBlitz3.ab3@24083>   MOVEQ.l #$0C,D0
00033676 <AmiBlitz3.ab3@24084>   MOVEQ.l #$01,D1
0003367C <AmiBlitz3.ab3@24085>   MOVEA.l _execbase,A6
00033682 <AmiBlitz3.ab3@24087>   MOVE.l mempool,a0
00033686 <AmiBlitz3.ab3@24088>   JSR _AllocPooled(a6)
00033688 <AmiBlitz3.ab3@24089>   MOVEA.l D0,A0
0003368E <AmiBlitz3.ab3@24090>   MOVE.l alllocals,(A0)
00033694 <AmiBlitz3.ab3@24091>   MOVE.l A0,alllocals
0003369A <AmiBlitz3.ab3@24092>   MOVE.l firstlocal,D0
000336A0 <AmiBlitz3.ab3@24093>   CLR.l firstlocal
000336A4 <AmiBlitz3.ab3@24094>   MOVE.l D0,$4(A0)
000336AA <AmiBlitz3.ab3@24095>   MOVE.l firstglob,D1
000336B0 <AmiBlitz3.ab3@24096>   CLR.l firstglob
000336B4 <AmiBlitz3.ab3@24097>   MOVE.l D1,$8(A0)
000336BA <AmiBlitz3.ab3@24098>   TST.b debugmode
000336BE <AmiBlitz3.ab3@24099>    BEQ.b JL_0_DBB0
000336C4 <AmiBlitz3.ab3@24100>   TST.w dontwrite
000336C8 <AmiBlitz3.ab3@24101>    BNE.b JL_0_DBB0
000336CC <AmiBlitz3.ab3@24102>   MOVEA.l proclocals(PC),A0
000336CE <AmiBlitz3.ab3@24103>   MOVE.l D0,(A0)+
000336D0 <AmiBlitz3.ab3@24104>   MOVE.l D1,(A0)
000336D2 <AmiBlitz3.ab3@24107> RTS
000336D8 <AmiBlitz3.ab3@24110> JMP baddirerr
000336DE <AmiBlitz3.ab3@24114>   TST.w dirmode
000336E2 <AmiBlitz3.ab3@24115>    BNE.w JUMP_baddirerr
000336E8 <AmiBlitz3.ab3@24116>   MOVE.l firstfor,D1
000336EC <AmiBlitz3.ab3@24117>    BEQ.w JUMP_noforerr
000336F2 <AmiBlitz3.ab3@24118>   JSR reget
000336F6 <AmiBlitz3.ab3@24119>    BEQ.w JL_0_DC18
000336FA <AmiBlitz3.ab3@24122>   BSR.w getparameter
000336FE <AmiBlitz3.ab3@24123>   MOVEA.l firstfor(PC),A2
00033700 <AmiBlitz3.ab3@24124>   MOVEQ.l #$00,D1
00033704 <AmiBlitz3.ab3@24125>   MOVE.b $10(A2),D1
00033708 <AmiBlitz3.ab3@24126>   SUBI.w #$12,D1
0003370A <AmiBlitz3.ab3@24127>   CMP.w D1,D2
0003370E <AmiBlitz3.ab3@24128>    BNE.w JUMP_noforerr
00033712 <AmiBlitz3.ab3@24129>   LEA ptr_parameterstore(PC),A0
00033716 <AmiBlitz3.ab3@24130>   LEA $11(A2),A1
00033718 <AmiBlitz3.ab3@24131>   SUBQ.w #1,D2
0003371A <AmiBlitz3.ab3@24134>     CMPM.b (A0)+,(A1)+
0003371E <AmiBlitz3.ab3@24135>     BNE.w JUMP_noforerr
00033722 <AmiBlitz3.ab3@24136>   DBF D2,JL_0_DBF0
00033726 <AmiBlitz3.ab3@24138>    BSR.w JL_0_DC1A
0003372C <AmiBlitz3.ab3@24139>    JSR reget
00033730 <AmiBlitz3.ab3@24140>    BEQ.w JL_0_DC16
00033734 <AmiBlitz3.ab3@24141>   CMP.w #$2C,D0
00033738 <AmiBlitz3.ab3@24142>    BNE.w JUMP_syntaxerr
0003373E <AmiBlitz3.ab3@24143>    JSR get1bytemain
00033742 <AmiBlitz3.ab3@24144> BRA.w JL_0_DBCE
00033748 <AmiBlitz3.ab3@24147> JMP noforerr
0003374A <AmiBlitz3.ab3@24150> RTS
0003374E <AmiBlitz3.ab3@24154>   MOVE.l 8(a7),a2
00033752 <AmiBlitz3.ab3@24155>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033756 <AmiBlitz3.ab3@24156>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
0003375A <AmiBlitz3.ab3@24157>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
0003375C <AmiBlitz3.ab3@24161>   MOVEA.l D1,A2
00033762 <AmiBlitz3.ab3@24164>   JSR popnext                                           ;error checking for next.
00033766 <AmiBlitz3.ab3@24165>   MOVE.w $C(A2),D0
0003376C <AmiBlitz3.ab3@24166>   LEA nextb,A0
00033772 <AmiBlitz3.ab3@24167>   LEA nextbf,A1
00033776 <AmiBlitz3.ab3@24168>   CMP.w #$1,D0
0003377A <AmiBlitz3.ab3@24169>    BEQ.w JL_0_DC74
00033780 <AmiBlitz3.ab3@24170>   LEA nextw,A0
00033786 <AmiBlitz3.ab3@24171>   LEA nextwf,A1
0003378A <AmiBlitz3.ab3@24172>   CMP.w #$2,D0
0003378E <AmiBlitz3.ab3@24173>    BEQ.w JL_0_DC74
00033794 <AmiBlitz3.ab3@24174>   LEA nextl,A0
0003379A <AmiBlitz3.ab3@24175>   LEA nextlf,A1
0003379E <AmiBlitz3.ab3@24176>   CMP.w #$5,D0
000337A2 <AmiBlitz3.ab3@24177>    BNE.w JL_0_DC74
000337A8 <AmiBlitz3.ab3@24178>    TST.b fpu
000337AC <AmiBlitz3.ab3@24179>    BEQ 'old
000337B2 <AmiBlitz3.ab3@24180>    LEA fpu2dats,a0                                         ;fpu next code
000337B8 <AmiBlitz3.ab3@24181>    LEA fpu2date,a1
000337BC <AmiBlitz3.ab3@24182> BRA JL_0_DC74
000337C0 <AmiBlitz3.ab3@24185>   MOVE.w #$C900,D1
000337C4 <AmiBlitz3.ab3@24186>    BSR.w Atokejsr
000337CA <AmiBlitz3.ab3@24187>   LEA nextf,A0
000337D0 <AmiBlitz3.ab3@24188>   LEA nextff,A1
000337D6 <AmiBlitz3.ab3@24191>   JSR pokecode
000337DC <AmiBlitz3.ab3@24192>     TST.b fast                                             ;fast for next deactivate
000337E0 <AmiBlitz3.ab3@24193> BRA 'l1
000337E6 <AmiBlitz3.ab3@24195>     TST.b onestep
000337EA <AmiBlitz3.ab3@24196>     BEQ 'l1
000337F0 <AmiBlitz3.ab3@24197>     CLR.b onestep
000337F6 <AmiBlitz3.ab3@24198>     SUBQ.l #4,destpointer
000337FA <AmiBlitz3.ab3@24199>     MOVE.w #$5292,d1
00033800 <AmiBlitz3.ab3@24200>     JSR writeword
00033804 <AmiBlitz3.ab3@24203>   MOVE.l JL_0_DCF4(PC),D1
0003380A <AmiBlitz3.ab3@24204>    JSR writelong
00033810 <AmiBlitz3.ab3@24205>   MOVEA.l firstfor,A2
00033816 <AmiBlitz3.ab3@24206>   MOVE.l (A2),firstfor
0003381A <AmiBlitz3.ab3@24207>   MOVEA.l $8(A2),A0
00033820 <AmiBlitz3.ab3@24208>   MOVEA.l destpointer,A1
00033822 <AmiBlitz3.ab3@24209>   MOVE.l A1,D1
00033824 <AmiBlitz3.ab3@24210>   SUB.l A0,D1
00033826 <AmiBlitz3.ab3@24211>   ADDQ.l #2,D1
0003382C <AmiBlitz3.ab3@24212>   CMP.l #MinWordSgnd,D1
00033830 <AmiBlitz3.ab3@24213>    BCC.w JUMP_bigforerr
00033836 <AmiBlitz3.ab3@24214>   TST.w dontwrite
0003383A <AmiBlitz3.ab3@24215>    BNE.w JL_0_DCB4
0003383E <AmiBlitz3.ab3@24216>   MOVE.w D1,-$2(A0)
00033840 <AmiBlitz3.ab3@24219>   MOVE.l A1,D1
00033844 <AmiBlitz3.ab3@24220>   SUB.l $4(A2),D1
00033846 <AmiBlitz3.ab3@24221>   SUBQ.l #6,D1
0003384C <AmiBlitz3.ab3@24222>   CMP.l #MinWordSgnd,D1
00033850 <AmiBlitz3.ab3@24223>    BCC.w JUMP_bigforerr
00033856 <AmiBlitz3.ab3@24224>   TST.w dontwrite
0003385A <AmiBlitz3.ab3@24225>    BNE.w JL_0_DCD6
0003385C <AmiBlitz3.ab3@24226>   NEG.w D1
00033860 <AmiBlitz3.ab3@24227>   MOVE.w D1,-$2(A1)
00033866 <AmiBlitz3.ab3@24230>   JSR popnext3
0003386C <AmiBlitz3.ab3@24231>   MOVEA.l _execbase,A6
0003386E <AmiBlitz3.ab3@24232>   MOVEA.l A2,A1
00033870 <AmiBlitz3.ab3@24233>   MOVEQ.l #$00,D0
00033874 <AmiBlitz3.ab3@24234>   MOVE.b $10(A1),D0
0003387A <AmiBlitz3.ab3@24235>   MOVE.l mempool2,a0
0003387E <AmiBlitz3.ab3@24236>   JSR _FreePooled(A6)
00033884 <AmiBlitz3.ab3@24237> JMP reget
0003388A <AmiBlitz3.ab3@24240> JMP notallowd
00033890 <AmiBlitz3.ab3@24243> JMP bigforerr
00033894 <AmiBlitz3.ab3@24250>   MOVE.w #$664F,-(A7)
00033898 <AmiBlitz3.ab3@24253> BRA.w JL_0_DCF4
0003389E <AmiBlitz3.ab3@24256> JMP error_dublicate_for
000338A2 <AmiBlitz3.ab3@24259> forlineat:   Ds.l 1
000338A4 <AmiBlitz3.ab3@24260> fortemp:     Ds.w 1
000338AA <AmiBlitz3.ab3@24267>   CLR.l fp0addr
000338B0 <AmiBlitz3.ab3@24268>   TST.w dirmode
000338B4 <AmiBlitz3.ab3@24269>    BNE.w JUMP_baddirerr
000338BE <AmiBlitz3.ab3@24270>   MOVE.l linenumat,forlineat
000338C4 <AmiBlitz3.ab3@24274>   MOVE.l A5,letstart
000338C8 <AmiBlitz3.ab3@24275>   BSR.w getparameter
000338CE <AmiBlitz3.ab3@24276>   MOVE.w D2,fortemp
000338D4 <AmiBlitz3.ab3@24277>   JSR findfor
000338D8 <AmiBlitz3.ab3@24278>    BEQ.w JUMP_error_dublicate_for
000338DE <AmiBlitz3.ab3@24279>   LEA firstfor,A2
000338E4 <AmiBlitz3.ab3@24280>   JSR addhere2
000338E6 <AmiBlitz3.ab3@24281>   MOVE.l A2,-(A7)
000338EC <AmiBlitz3.ab3@24282>   TST.b debugmode
000338F0 <AmiBlitz3.ab3@24283>    BEQ.b JL_0_DD4C
000338F6 <AmiBlitz3.ab3@24284>   JSR chkstak
000338FC <AmiBlitz3.ab3@24285>   MOVE.l AJL_0_DCF0,D1
00033902 <AmiBlitz3.ab3@24286>   JSR  writelong
00033906 <AmiBlitz3.ab3@24289>   MOVE.w fortemp(PC),D2
0003390E <AmiBlitz3.ab3@24290>   MOVE.b #1,formode
00033912 <AmiBlitz3.ab3@24291>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00033918 <AmiBlitz3.ab3@24292>   CLR.b formode
0003391C <AmiBlitz3.ab3@24293>   CMP.w #-$7FE8,D0
00033920 <AmiBlitz3.ab3@24294>    BNE.w JUMP_syntaxerr
00033926 <AmiBlitz3.ab3@24295>   MOVE.w commode,D1
0003392A <AmiBlitz3.ab3@24296>    BNE.w JUMP_syntaxerr
0003392E <AmiBlitz3.ab3@24297>   CMP.b #$6,D2
00033932 <AmiBlitz3.ab3@24298>    BCC.w JUMP_badforerr
00033936 <AmiBlitz3.ab3@24299>   BTST #$F,D2
0003393A <AmiBlitz3.ab3@24300>    BNE.w JL_0_DD86
00033940 <AmiBlitz3.ab3@24301>   MOVE.w leaamp,D1
00033946 <AmiBlitz3.ab3@24302>   JSR pokewda5s
00033948 <AmiBlitz3.ab3@24303>   MOVE.w D3,D1
0003394E <AmiBlitz3.ab3@24304>   JSR  writeword
00033954 <AmiBlitz3.ab3@24307>   MOVE.w pushindex,D1
0003395A <AmiBlitz3.ab3@24308>   JSR  writeword
0003395E <AmiBlitz3.ab3@24309>   ANDI.w #$FF,D2
00033960 <AmiBlitz3.ab3@24311>   MOVEA.l (A7),A1
00033964 <AmiBlitz3.ab3@24312>   MOVE.w D2,$C(A1)
00033966 <AmiBlitz3.ab3@24313>   MOVE.w D2,-(A7)
0003396A <AmiBlitz3.ab3@24314>    BSR.w eval
00033970 <AmiBlitz3.ab3@24315>    CLR.b onestep
00033974 <AmiBlitz3.ab3@24316>    CMP.w #$8019,d0
00033978 <AmiBlitz3.ab3@24317>    BEQ 'l1
00033980 <AmiBlitz3.ab3@24318>    MOVE.b #1,onestep
00033982 <AmiBlitz3.ab3@24321>   MOVE.w (A7),D2
00033988 <AmiBlitz3.ab3@24322>   MOVE.w pushd0l,D1
0003398C <AmiBlitz3.ab3@24323>   CMP.w #$3,D2
00033990 <AmiBlitz3.ab3@24324>    BCC.w JL_0_DDB6
00033996 <AmiBlitz3.ab3@24325>   MOVE.w pushd0wd,D1
00033998 <AmiBlitz3.ab3@24328>    MOVE.w D1,-(A7)
0003399E <AmiBlitz3.ab3@24329>    TST.b fpu
000339A2 <AmiBlitz3.ab3@24330>    BEQ 'old
000339A6 <AmiBlitz3.ab3@24331>    CMP.b #5,d2
000339AA <AmiBlitz3.ab3@24332>    BNE 'old
000339B0 <AmiBlitz3.ab3@24333>    MOVE.l #$f2276400,d1
000339B6 <AmiBlitz3.ab3@24335>    JSR writelong
000339BA <AmiBlitz3.ab3@24336> BRA 'weit
000339C0 <AmiBlitz3.ab3@24339>    JSR  writeword                                          ;fpu for end value
000339C4 <AmiBlitz3.ab3@24342>   CMP.w #-$7FE7,D0
000339C8 <AmiBlitz3.ab3@24343>    BNE.w JL_0_DDCC
000339CC <AmiBlitz3.ab3@24344>    BSR.w eval
000339D2 <AmiBlitz3.ab3@24345>    TST.b fpu
000339D6 <AmiBlitz3.ab3@24346>    BEQ JL_0_DE0C
000339DA <AmiBlitz3.ab3@24347>    CMP.b #5,d2
000339DE <AmiBlitz3.ab3@24348>    BNE JL_0_DE0C
000339E4 <AmiBlitz3.ab3@24349>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000339EA <AmiBlitz3.ab3@24351>   JSR writelong
000339EC <AmiBlitz3.ab3@24354>    MOVE.w (a7)+,d1
000339F0 <AmiBlitz3.ab3@24355> BRA fpur
000339F4 <AmiBlitz3.ab3@24358>   CMP.w #$4,D2
000339F8 <AmiBlitz3.ab3@24359>    BCC.w JL_0_DDE0
000339FC <AmiBlitz3.ab3@24360>   MOVE.w #$7001,D1
00033A02 <AmiBlitz3.ab3@24361>   JSR writeword
00033A06 <AmiBlitz3.ab3@24362> BRA.w JL_0_DE0C
00033A0C <AmiBlitz3.ab3@24365> JMP badforerr
00033A10 <AmiBlitz3.ab3@24368>   BNE.w JL_0_DDFA
00033A14 <AmiBlitz3.ab3@24369>   MOVE.w #$7001,D1
00033A1A <AmiBlitz3.ab3@24370>   JSR writeword
00033A20 <AmiBlitz3.ab3@24371>   MOVE.w swapd0,D1
00033A26 <AmiBlitz3.ab3@24372>   JSR writeword
00033A2A <AmiBlitz3.ab3@24373> BRA.w JL_0_DE0C
00033A30 <AmiBlitz3.ab3@24376>   TST.b fpu
00033A34 <AmiBlitz3.ab3@24377>    BEQ 'old
00033A38 <AmiBlitz3.ab3@24378>   CMP.b #5,d2
00033A3C <AmiBlitz3.ab3@24379>    BNE 'old
00033A42 <AmiBlitz3.ab3@24380>   MOVE.l #$f23c5000,d1
00033A48 <AmiBlitz3.ab3@24381>   JSR writelong
00033A4C <AmiBlitz3.ab3@24382>   MOVE.w #$1,d1
00033A52 <AmiBlitz3.ab3@24383>   JSR writeword
00033A58 <AmiBlitz3.ab3@24384>   MOVE.l #$f2276400,d1
00033A5E <AmiBlitz3.ab3@24385>   JSR writelong
00033A60 <AmiBlitz3.ab3@24386>   MOVE.w (a7)+,d1
00033A64 <AmiBlitz3.ab3@24387> BRA fpur
00033A68 <AmiBlitz3.ab3@24390>   MOVE.w #$203C,D1                                         ;write step 1
00033A6E <AmiBlitz3.ab3@24391>   JSR writeword
00033A74 <AmiBlitz3.ab3@24392>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033A7A <AmiBlitz3.ab3@24393>   JSR writelong
00033A7C <AmiBlitz3.ab3@24396>   MOVE.w (A7)+,D1
00033A82 <AmiBlitz3.ab3@24397>   JSR writeword                                            ;push step on stack
00033A84 <AmiBlitz3.ab3@24400>   MOVE.w (A7)+,D2
00033A86 <AmiBlitz3.ab3@24401>   MOVEA.l (A7),A1
00033A8E <AmiBlitz3.ab3@24402>   MOVE.l destpointer,$4(A1)
00033A94 <AmiBlitz3.ab3@24403>   LEA forcompb,A0
00033A9A <AmiBlitz3.ab3@24404>   LEA forcompbf,A1
00033A9E <AmiBlitz3.ab3@24405>   CMP.w #$1,D2
00033AA2 <AmiBlitz3.ab3@24406>    BEQ.w JL_0_DE7E
00033AA8 <AmiBlitz3.ab3@24407>   LEA forcompw,A0
00033AAE <AmiBlitz3.ab3@24408>   LEA forcompwf,A1
00033AB2 <AmiBlitz3.ab3@24409>   CMP.w #$2,D2
00033AB6 <AmiBlitz3.ab3@24410>    BEQ.w JL_0_DE7E
00033ABC <AmiBlitz3.ab3@24411>   LEA forcompl,A0
00033AC2 <AmiBlitz3.ab3@24412>   LEA forcomplf,A1
00033AC6 <AmiBlitz3.ab3@24413>   CMP.w #$5,D2
00033ACA <AmiBlitz3.ab3@24414>    BNE.w JL_0_DE7E
00033AD0 <AmiBlitz3.ab3@24415>   TST.b fpu
00033AD4 <AmiBlitz3.ab3@24416>    BEQ 'old
00033ADA <AmiBlitz3.ab3@24417>   LEA fpu_start,a0
00033AE0 <AmiBlitz3.ab3@24418>   LEA fpu_end,a1
00033AE6 <AmiBlitz3.ab3@24419>   JSR pokecode
00033AEA <AmiBlitz3.ab3@24420> BRA fpu3
00033AF0 <AmiBlitz3.ab3@24423>   LEA forcompf,A0                                         ;
00033AF6 <AmiBlitz3.ab3@24424>   LEA forcompff,A1
00033AFC <AmiBlitz3.ab3@24425>   JSR pokecode
00033B00 <AmiBlitz3.ab3@24426>   MOVE.w #$C900,D1
00033B04 <AmiBlitz3.ab3@24427>   BSR.w Atokejsr
00033B0A <AmiBlitz3.ab3@24428>   LEA forcompf2,A0
00033B10 <AmiBlitz3.ab3@24429>   LEA forcompf2f,A1
00033B16 <AmiBlitz3.ab3@24432>   JSR pokecode
00033B1C <AmiBlitz3.ab3@24433>   TST.b fast                                               ;fast for next
00033B20 <AmiBlitz3.ab3@24434>    BEQ 's1
00033B24 <AmiBlitz3.ab3@24435>   CMP.w #3,d2
00033B28 <AmiBlitz3.ab3@24436>    BNE 's1
00033B2E <AmiBlitz3.ab3@24437>   TST.b onestep
00033B32 <AmiBlitz3.ab3@24438>    BEQ 's1
00033B3C <AmiBlitz3.ab3@24439>   SUB.l #10,destpointer
00033B40 <AmiBlitz3.ab3@24440>   MOVE.w #$b081,d1
00033B46 <AmiBlitz3.ab3@24441>   JSR writeword
00033B4A <AmiBlitz3.ab3@24445>   MOVE.l thebgt(PC),D1
00033B50 <AmiBlitz3.ab3@24446>   JSR writelong
00033B52 <AmiBlitz3.ab3@24449>   MOVEA.l (A7)+,A1
00033B5A <AmiBlitz3.ab3@24450>   MOVE.l destpointer,$8(A1)
00033B60 <AmiBlitz3.ab3@24451> JMP reget
00033B64 <AmiBlitz3.ab3@24454>   MOVEA.l 8(a7),a2
00033B68 <AmiBlitz3.ab3@24455>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033B6E <AmiBlitz3.ab3@24456>   fmove.s 4(a7),fp1
00033B72 <AmiBlitz3.ab3@24457>   BTST.b #7,(a7)
00033B76 <AmiBlitz3.ab3@24458>   BNE 'negi
00033B7A <AmiBlitz3.ab3@24459>   fcmp.x fp1,fp0
00033B7E <AmiBlitz3.ab3@24460> BRA 'negi2
00033B82 <AmiBlitz3.ab3@24463>   fcmp.x fp0,fp1
00033B86 <AmiBlitz3.ab3@24466>   Dc.l $f2920000                                           ;fbgt.w
00033B8A <AmiBlitz3.ab3@24470>   BGT.w thebgt
00033B90 <AmiBlitz3.ab3@24473>   MOVE.l A5,letstart
00033B96 <AmiBlitz3.ab3@24474>   JSR getparameter
00033BA0 <AmiBlitz3.ab3@24480>   MOVE.l destpointer,pushpc
00033BAA <AmiBlitz3.ab3@24481>   MOVE.l hunkoffsetbase,pushoff
00033BB0 <AmiBlitz3.ab3@24482>   CLR.l rightsidetype
00033BB6 <AmiBlitz3.ab3@24483>   CLR.w rightsideflagmask
00033BBE <AmiBlitz3.ab3@24484>   MOVE.w #$0001,regnum
00033BC4 <AmiBlitz3.ab3@24485>   JSR JL_0_8E3C
00033BCA <AmiBlitz3.ab3@24486>   JSR calcvar
00033BD0 <AmiBlitz3.ab3@24487>   TST.b formode
00033BD4 <AmiBlitz3.ab3@24488>   BEQ 'lf1
00033BDA <AmiBlitz3.ab3@24489>   CMP.l #newtype_double,A2
00033BDE <AmiBlitz3.ab3@24490>   BEQ JUMP_notallowd
00033BE4 <AmiBlitz3.ab3@24491>   MOVE.l a2,currtype
00033BEA <AmiBlitz3.ab3@24494>   CLR.w startoffsetmore
00033BEE <AmiBlitz3.ab3@24495>   CMP.w #$3d,d0
00033BF2 <AmiBlitz3.ab3@24496>   BNE 'l1a
00033BF6 <AmiBlitz3.ab3@24497>   BTST #15,d2
00033BFA <AmiBlitz3.ab3@24498>   BEQ 'l1a
00033BFE <AmiBlitz3.ab3@24499>   CMP.b #1,d2
00033C02 <AmiBlitz3.ab3@24500>   BNE 'l1a
00033C0C <AmiBlitz3.ab3@24501>   MOVE.w leaa0a0+2,startoffsetmore
00033C12 <AmiBlitz3.ab3@24504>   CLR.w regnum
00033C16 <AmiBlitz3.ab3@24505>   BSR.w JL_0_B5D2
00033C1C <AmiBlitz3.ab3@24506>   CLR.w commode
00033C22 <AmiBlitz3.ab3@24507>   CLR.w stackcorrect
00033C28 <AmiBlitz3.ab3@24508>   CLR.w pcodd
00033C2E <AmiBlitz3.ab3@24509>   MOVE.w startoffsetmore,d1
00033C32 <AmiBlitz3.ab3@24510>   BTST #0,d1
00033C36 <AmiBlitz3.ab3@24511>   BEQ 'l2a
00033C3E <AmiBlitz3.ab3@24512>   MOVE.w #1,pcodd
00033C42 <AmiBlitz3.ab3@24515>   CMP.w #$3D,D0                                            ;=
00033C46 <AmiBlitz3.ab3@24516>   BEQ.w JL_0_DEE0
00033C48 <AmiBlitz3.ab3@24519>   MOVE.b (a5)+,d1
00033C4C <AmiBlitz3.ab3@24520>   BEQ 'l10
00033C50 <AmiBlitz3.ab3@24521>   CMP.b #":",d1
00033C54 <AmiBlitz3.ab3@24522>   BEQ 'l10
00033C58 <AmiBlitz3.ab3@24523>   CMP.b #";",d1
00033C5C <AmiBlitz3.ab3@24524>   BEQ 'l10
00033C60 <AmiBlitz3.ab3@24525>   CMP.b #"0",d1
00033C64 <AmiBlitz3.ab3@24526>   BLT 'l11
00033C68 <AmiBlitz3.ab3@24527>   CMP.b #"9",d1
00033C6C <AmiBlitz3.ab3@24528>   BGT 'l11
00033C70 <AmiBlitz3.ab3@24529> BRA.s 'l1
00033C78 <AmiBlitz3.ab3@24532>   MOVE.b #1,quickadd
00033C7E <AmiBlitz3.ab3@24535>   MOVEA.l letstart,A5
00033C80 <AmiBlitz3.ab3@24536>   SUBQ.w #1,A5
00033C84 <AmiBlitz3.ab3@24539>   CMP.b #$7,D2
00033C88 <AmiBlitz3.ab3@24540>    BNE.w JL_0_DF8A
00033C8C <AmiBlitz3.ab3@24546>   MOVEM.w D2-D3,-(A7)
00033C92 <AmiBlitz3.ab3@24547>   MOVE.l lastoffset_org,-(A7)
00033C98 <AmiBlitz3.ab3@24548>   MOVE.w varmode,-(A7)
00033CA2 <AmiBlitz3.ab3@24550>    MOVE.l #forthstack,forthsp
00033CAC <AmiBlitz3.ab3@24551>    MOVE.l #precstack,precsp
00033CB2 <AmiBlitz3.ab3@24552>    CLR.w regnum
00033CB8 <AmiBlitz3.ab3@24553>    CLR.w nonew
00033CBE <AmiBlitz3.ab3@24554>    CLR.w sbasegot
00033CC8 <AmiBlitz3.ab3@24555>    MOVE.w varcodelen,oldvcodelen
00033CCE <AmiBlitz3.ab3@24556>    CLR.w varcodelen
00033CD6 <AmiBlitz3.ab3@24557>    MOVE.w #$FFFF,lasta6
00033CD8 <AmiBlitz3.ab3@24560>   MOVEQ.l #$07,D2
00033CDC <AmiBlitz3.ab3@24561>    BSR.w eval
00033CE2 <AmiBlitz3.ab3@24562>   MOVE.w (A7)+,varmode
00033CE8 <AmiBlitz3.ab3@24563>   MOVE.l (A7)+,lastoffset_org
00033CEE <AmiBlitz3.ab3@24564>   MOVE.w moved0a3,D1
00033CF4 <AmiBlitz3.ab3@24565>    JSR writeword
00033CFA <AmiBlitz3.ab3@24566>   MOVE.w commode,D1
00033CFE <AmiBlitz3.ab3@24567>    BEQ.w JL_0_DF38
00033D04 <AmiBlitz3.ab3@24568>   LEA pulla2st,A0
00033D0A <AmiBlitz3.ab3@24569>   LEA pulla2stf,A1
00033D10 <AmiBlitz3.ab3@24570>    JSR pokecode
00033D14 <AmiBlitz3.ab3@24571> BRA.w JL_0_DF3C
00033D18 <AmiBlitz3.ab3@24574>   BSR.w JL_0_B63C
00033D1C <AmiBlitz3.ab3@24577>   MOVEM.w (A7)+,D2-D3
00033D20 <AmiBlitz3.ab3@24578>   BTST #$F,D2
00033D24 <AmiBlitz3.ab3@24579>   BNE.w JL_0_DF58
00033D2A <AmiBlitz3.ab3@24580>     MOVE.w D3,leaa5d3a2+2
00033D30 <AmiBlitz3.ab3@24581>     MOVE.l leaa5d3a2,D1
00033D36 <AmiBlitz3.ab3@24582>     JSR pokela5s
00033D3A <AmiBlitz3.ab3@24585>   MOVE.w #$FE6F,D1
00033D40 <AmiBlitz3.ab3@24586>   JSR uselib
00033D46 <AmiBlitz3.ab3@24587>   MOVE.l #$C700,D1
00033D4C <AmiBlitz3.ab3@24588>   MOVE.l d1,lastinstruction
00033D52 <AmiBlitz3.ab3@24589>   MOVE.w varmode,D2
00033D56 <AmiBlitz3.ab3@24590>   BNE.w JL_0_DF70
00033D58 <AmiBlitz3.ab3@24591>     ADDQ.w #1,D1
00033D5C <AmiBlitz3.ab3@24594>   BSR.w Atokejsr
00033D60 <AmiBlitz3.ab3@24595>   CMP.w #$2C,D0
00033D64 <AmiBlitz3.ab3@24596>   BNE.w JL_0_E0C6
00033D6A <AmiBlitz3.ab3@24598>   MOVE.w addq4a2,D1
00033D70 <AmiBlitz3.ab3@24599>   JSR writeword
00033D74 <AmiBlitz3.ab3@24600> BRA.w JL_0_E018
00033D7A <AmiBlitz3.ab3@24603> JMP error4char
00033D80 <AmiBlitz3.ab3@24606> JMP error_convert_types
00033D84 <AmiBlitz3.ab3@24610>    BTST #$E,D2
00033D88 <AmiBlitz3.ab3@24611>    BNE.w JL_0_DF9C
00033D8A <AmiBlitz3.ab3@24612>   TST.b D2
00033D8E <AmiBlitz3.ab3@24613>    BEQ.w JUMP_noleterr
00033D94 <AmiBlitz3.ab3@24614>    TST.b newsyntax
00033D98 <AmiBlitz3.ab3@24615>    BEQ JL_0_DFA0
00033D9C <AmiBlitz3.ab3@24618>    CMP.w #$4022,(a5)
00033DA0 <AmiBlitz3.ab3@24619>    BNE JL_0_DFA0
00033DA6 <AmiBlitz3.ab3@24620>    CMP.l #3,d2
00033DAA <AmiBlitz3.ab3@24621>    BNE  JUMP_error_convert_types
00033DAC <AmiBlitz3.ab3@24622>    ADDQ #2,a5
00033DAE <AmiBlitz3.ab3@24623>    MOVEQ #0,d0
00033DB0 <AmiBlitz3.ab3@24624>    MOVE.b (a5)+,d0
00033DB4 <AmiBlitz3.ab3@24625>    BEQ JL_0_DFA0
00033DB8 <AmiBlitz3.ab3@24626>    CMP.b #$22,d0
00033DBC <AmiBlitz3.ab3@24627>    BNE 'l1
00033DC0 <AmiBlitz3.ab3@24628>    MOVE.b #0,d0
00033DC4 <AmiBlitz3.ab3@24629> BRA 'do
00033DC6 <AmiBlitz3.ab3@24632>   ASL.l #8,d0
00033DC8 <AmiBlitz3.ab3@24633>    MOVE.b (a5)+,d0
00033DCC <AmiBlitz3.ab3@24634>    BEQ JL_0_DFA0
00033DD0 <AmiBlitz3.ab3@24635>    CMP.b #$22,d0
00033DD4 <AmiBlitz3.ab3@24636>    BNE 'l2
00033DD8 <AmiBlitz3.ab3@24637>    MOVE.b #0,d0
00033DDA <AmiBlitz3.ab3@24638>    ASR.l #8,d0
00033DDE <AmiBlitz3.ab3@24639> BRA 'do
00033DE0 <AmiBlitz3.ab3@24642>   ASL.l #8,d0
00033DE2 <AmiBlitz3.ab3@24643>     MOVE.b (a5)+,d0
00033DE6 <AmiBlitz3.ab3@24644>    BEQ JL_0_DFA0
00033DEA <AmiBlitz3.ab3@24645>    CMP.b #$22,d0
00033DEE <AmiBlitz3.ab3@24646>    BNE 'l3
00033DF2 <AmiBlitz3.ab3@24647>    MOVE.b #0,d0
00033DF4 <AmiBlitz3.ab3@24648>    ASR.l #8,d0
00033DF8 <AmiBlitz3.ab3@24649> BRA 'do
00033DFA <AmiBlitz3.ab3@24652>   ASL.l #8,d0
00033DFC <AmiBlitz3.ab3@24653>     MOVE.b (a5)+,d0
00033E00 <AmiBlitz3.ab3@24654>    BEQ JL_0_DFA0
00033E04 <AmiBlitz3.ab3@24655>    CMP.b #$22,d0
00033E08 <AmiBlitz3.ab3@24656>    BNE 'l4
00033E0C <AmiBlitz3.ab3@24657>    MOVE.b #0,d0
00033E0E <AmiBlitz3.ab3@24658>    ASR.l #8,d0
00033E12 <AmiBlitz3.ab3@24659> BRA 'do
00033E16 <AmiBlitz3.ab3@24662>    CMP.b #$22,(a5)+
00033E1A <AmiBlitz3.ab3@24663>    BNE JUMP_error4char
00033E1E <AmiBlitz3.ab3@24666>   MOVE.w #$2b7c,d1
00033E24 <AmiBlitz3.ab3@24667>    TST.w varmode
00033E28 <AmiBlitz3.ab3@24668>    BEQ 'g3
00033E2C <AmiBlitz3.ab3@24669>    BCLR #9,d1
00033E32 <AmiBlitz3.ab3@24672>     JSR writeword
00033E34 <AmiBlitz3.ab3@24673>     MOVE.l d0,d1
00033E3A <AmiBlitz3.ab3@24674>     JSR writelong
00033E3C <AmiBlitz3.ab3@24675>     MOVE.w d3,d1
00033E42 <AmiBlitz3.ab3@24676>     JSR writeword
00033E48 <AmiBlitz3.ab3@24677>     JSR get1bytemain
00033E4A <AmiBlitz3.ab3@24678> RTS
00033E50 <AmiBlitz3.ab3@24684> JMP noleterr
00033E56 <AmiBlitz3.ab3@24688>   MOVE.w d2,vartype
00033E5A <AmiBlitz3.ab3@24689>   MOVE.b #$3,D2
00033E5E <AmiBlitz3.ab3@24692>   CMP.b #5,d2
00033E62 <AmiBlitz3.ab3@24693>   BNE 'l1
00033E68 <AmiBlitz3.ab3@24694>   MOVE.l a2,currtype
00033E6C <AmiBlitz3.ab3@24698>   MOVEM.w D2-D3,-(A7)
00033E72 <AmiBlitz3.ab3@24699>   MOVE.w varmode,-(A7)
00033E78 <AmiBlitz3.ab3@24700>   MOVE.l a2,leftsidetype
00033E82 <AmiBlitz3.ab3@24701>   MOVE.w flagmask,leftsideflagmask
00033E86 <AmiBlitz3.ab3@24702>   BTST #$f,d2
00033E8A <AmiBlitz3.ab3@24703>   BEQ 'nomultiassign
00033E90 <AmiBlitz3.ab3@24704>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033E96 <AmiBlitz3.ab3@24705>   CLR.w leftsideflagmask
00033E9A <AmiBlitz3.ab3@24706> 'nomultiassign  ANDI.w #$FF,D2
00033EA0 <AmiBlitz3.ab3@24707>   MOVE.l lastoffset_org,-(A7)
00033EA6 <AmiBlitz3.ab3@24708>   JSR eval                                ; calc right side of var assign
00033EAA <AmiBlitz3.ab3@24709>   MOVEM.l a0/a1,-(a7)
00033EB0 <AmiBlitz3.ab3@24710>   MOVE.l leftsidetype,a0
00033EB6 <AmiBlitz3.ab3@24711>   CMP.l #0,a0
00033EBA <AmiBlitz3.ab3@24712>   BEQ 'nocheck
00033EC2 <AmiBlitz3.ab3@24713>   CMP.w #1,leftsideflagmask
00033EC6 <AmiBlitz3.ab3@24714>   BEQ 'isptr
00033ECE <AmiBlitz3.ab3@24715>   CMP.l #$100,4(a0)
00033ED2 <AmiBlitz3.ab3@24716>   BLE 'nocheck
00033ED8 <AmiBlitz3.ab3@24717> 'isptr TST.l typetocast
00033EDC <AmiBlitz3.ab3@24718>   BEQ 'nocast
00033EE2 <AmiBlitz3.ab3@24719>   MOVE.l typetocast,a1
00033EE6 <AmiBlitz3.ab3@24720>   BRA 'typecheck
00033EEC <AmiBlitz3.ab3@24721> 'nocast  TST.l rightsidetype
00033EF0 <AmiBlitz3.ab3@24722>   BEQ 'nocheck
00033EF6 <AmiBlitz3.ab3@24723>   MOVE.l rightsidetype,a1
00033EFE <AmiBlitz3.ab3@24724>   CMP.w #1,rightsideflagmask
00033F02 <AmiBlitz3.ab3@24725>   BEQ 'ok
00033F0A <AmiBlitz3.ab3@24726>   CMP.l #$100,4(a1)
00033F0E <AmiBlitz3.ab3@24727>   BGE 'typecheck
00033F16 <AmiBlitz3.ab3@24728>   CMP.l #$3,4(a1)
00033F1A <AmiBlitz3.ab3@24729>   BEQ 'ok                              ;long assign is allow with this codelines
00033F1E <AmiBlitz3.ab3@24730>   BRA 'error
00033F24 <AmiBlitz3.ab3@24732>   TST.b typecheck
00033F28 <AmiBlitz3.ab3@24733>   BEQ 'nocheck
00033F2E <AmiBlitz3.ab3@24734>   TST.b notypecheck
00033F32 <AmiBlitz3.ab3@24735>   BNE 'ok
00033F34 <AmiBlitz3.ab3@24736>   CMP.l a0,a1
00033F38 <AmiBlitz3.ab3@24737>   BEQ 'ok
00033F3C <AmiBlitz3.ab3@24739>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033F40 <AmiBlitz3.ab3@24740>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033F44 <AmiBlitz3.ab3@24741>   BEQ 'ok
00033F4A <AmiBlitz3.ab3@24743>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033F50 <AmiBlitz3.ab3@24746>    CLR.l typetocast
00033F54 <AmiBlitz3.ab3@24747>    MOVEM.l (a7)+, a0/a1
00033F5A <AmiBlitz3.ab3@24748>   MOVE.l (A7)+,lastoffset_org
00033F60 <AmiBlitz3.ab3@24749>   MOVE.w commode,D1
00033F64 <AmiBlitz3.ab3@24750>    BNE.w JL_0_DFCC
00033F68 <AmiBlitz3.ab3@24751>    BSR.w JL_0_B63C
00033F6E <AmiBlitz3.ab3@24754>   MOVE.w (A7)+,varmode
00033F72 <AmiBlitz3.ab3@24755>   MOVEM.w (A7)+,D2-D3
00033F76 <AmiBlitz3.ab3@24757>   MOVE.w #$2B40,D1
00033F7C <AmiBlitz3.ab3@24758>   MOVE.w varmode,D4
00033F80 <AmiBlitz3.ab3@24759>    BEQ.w JL_0_DFE8
00033F84 <AmiBlitz3.ab3@24760>   BCLR #$9,D1
00033F88 <AmiBlitz3.ab3@24763>   BTST #$F,D2
00033F8C <AmiBlitz3.ab3@24764>    BEQ.w JL_0_E090
00033F92 <AmiBlitz3.ab3@24765>    TST.b stackcorrect
00033F96 <AmiBlitz3.ab3@24766>    BNE 'st1
00033F9C <AmiBlitz3.ab3@24767>   MOVE.w commode,D1
00033FA0 <AmiBlitz3.ab3@24768>    BEQ.w JL_0_E004
00033FA6 <AmiBlitz3.ab3@24771>   MOVE.w pulla2,D1
00033FAC <AmiBlitz3.ab3@24772>    JSR writeword
00033FB0 <AmiBlitz3.ab3@24775>   MOVE.w #$2480,D1
00033FB4 <AmiBlitz3.ab3@24776>    MOVEM.l a0/d0,-(a7)
00033FBA <AmiBlitz3.ab3@24777>    MOVEA.l lastoffset_org,A0
00033FBC <AmiBlitz3.ab3@24778>    MOVE.l A0,D0
00033FC0 <AmiBlitz3.ab3@24779>    BEQ.w 'skip
00033FC2 <AmiBlitz3.ab3@24780>    MOVEA.l D0,A0
00033FCA <AmiBlitz3.ab3@24781>    MOVE.l $A(A0),currtype
00033FCE <AmiBlitz3.ab3@24784>   MOVEM.l (a7)+,a0/d0
00033FD2 <AmiBlitz3.ab3@24785>   CMP.w #$2C,D0
00033FD6 <AmiBlitz3.ab3@24786>    BNE.w JL_0_E090
00033FDA <AmiBlitz3.ab3@24787>     MOVE.w #$24C0,D1
00033FDE <AmiBlitz3.ab3@24788>    BSR.w JL_0_E090                                         ;write store
00033FE4 <AmiBlitz3.ab3@24791>    MOVE.l lastoffset_org,D0
00033FEC <AmiBlitz3.ab3@24795>   MOVE.w #$FFFF,commode
00033FF2 <AmiBlitz3.ab3@24796>   CLR.w varcodelen
00033FFA <AmiBlitz3.ab3@24797>   MOVE.b #1,optiarray
00034000 <AmiBlitz3.ab3@24798>   MOVE.w pusha2,D1
00034006 <AmiBlitz3.ab3@24799>    JSR writeword
0003400C <AmiBlitz3.ab3@24800>   TST.l lastoffset_org
00034010 <AmiBlitz3.ab3@24801>   BEQ dimmore
00034016 <AmiBlitz3.ab3@24802>   MOVEA.l lastoffset_org,A0
00034018 <AmiBlitz3.ab3@24803>   MOVE.l (A0),D0
0003401C <AmiBlitz3.ab3@24804>    BEQ.w JUMP_comerr
0003401E <AmiBlitz3.ab3@24805>   MOVEA.l D0,A0
00034024 <AmiBlitz3.ab3@24806>   MOVE.l A0,lastoffset_org
0003402A <AmiBlitz3.ab3@24807>   BTST #$1,$7(A0)
0003402E <AmiBlitz3.ab3@24808>    BNE.w JUMP_nocomerr
00034032 <AmiBlitz3.ab3@24809>   MOVEA.l $A(A0),A1
00034036 <AmiBlitz3.ab3@24810>   MOVE.l $4(A1),D2
0003403C <AmiBlitz3.ab3@24813>   BTST #$0,$7(A0)
00034040 <AmiBlitz3.ab3@24814>    BNE.w JL_0_E078
00034046 <AmiBlitz3.ab3@24815>   CMP.l #$100,D2
0003404A <AmiBlitz3.ab3@24816>    BCC.l JUMP_nocomerr
0003404E <AmiBlitz3.ab3@24817> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00034054 <AmiBlitz3.ab3@24820>         CLR.b optiarray
00034058 <AmiBlitz3.ab3@24821>         CMP.w #"@@",(a5)
0003405C <AmiBlitz3.ab3@24822>         BEQ 'n1
00034060 <AmiBlitz3.ab3@24823> BRA 'd1
00034066 <AmiBlitz3.ab3@24826>   JSR nextline
00034068 <AmiBlitz3.ab3@24827>         MOVE.l a5,-(a7)
0003406A <AmiBlitz3.ab3@24830>   MOVE.b (a5)+,d0
0003406E <AmiBlitz3.ab3@24831>         CMP.b #$20,d0
00034072 <AmiBlitz3.ab3@24832>         BEQ 'l2
00034074 <AmiBlitz3.ab3@24833>         MOVE.l (a7)+,a5
00034078 <AmiBlitz3.ab3@24834>         CMP.b #";",d0
0003407C <AmiBlitz3.ab3@24835>         BEQ 'n1
00034082 <AmiBlitz3.ab3@24838>         TST.w debugmode
00034086 <AmiBlitz3.ab3@24839>         BEQ JL_0_DEE0
00034088 <AmiBlitz3.ab3@24840>         MOVE.l a0,-(a7)
0003408E <AmiBlitz3.ab3@24841>         MOVE.l pushat,a0
00034094 <AmiBlitz3.ab3@24842>         CMP.l #0,a0
00034098 <AmiBlitz3.ab3@24843>         BNE 'o1
0003409C <AmiBlitz3.ab3@24844> BRA 'skip
000340A4 <AmiBlitz3.ab3@24847>         ADD.l #1,2(a0)
000340AA <AmiBlitz3.ab3@24850>   CLR.w commode
000340B2 <AmiBlitz3.ab3@24851>         MOVE.b #1,stackcorrect
000340B4 <AmiBlitz3.ab3@24852>         MOVE.l (a7)+,a0
000340BA <AmiBlitz3.ab3@24853> JMP JL_0_DEE0
000340C0 <AmiBlitz3.ab3@24856> JMP nocomerr
000340C6 <AmiBlitz3.ab3@24859>   CMP.l #$100,D2
000340CA <AmiBlitz3.ab3@24860>    BCS.w JL_0_E084
000340CC <AmiBlitz3.ab3@24861>   MOVEQ.l #$00,D2
000340D0 <AmiBlitz3.ab3@24864>   BSET #$E,D2
000340D4 <AmiBlitz3.ab3@24867>   BSET #$F,D2
000340D8 <AmiBlitz3.ab3@24868> BRA.w JL_0_DEE0
000340DE <AmiBlitz3.ab3@24871>    MOVE.l destpointer,a4
000340E6 <AmiBlitz3.ab3@24872>    MOVE.l #$f22a6400,-4(a4)
000340EC <AmiBlitz3.ab3@24873>    MOVE.w arrayoffset,d1
000340F2 <AmiBlitz3.ab3@24874> JMP writeword
000340F8 <AmiBlitz3.ab3@24877> JMP comerr
000340FE <AmiBlitz3.ab3@24880>    TST.b fpu
00034102 <AmiBlitz3.ab3@24881>    BEQ 'nofloat
00034106 <AmiBlitz3.ab3@24882>    CMP.b #5,d2
0003410A <AmiBlitz3.ab3@24883>    BNE 'nofloat
00034110 <AmiBlitz3.ab3@24884>    CLR.w fp0var
00034116 <AmiBlitz3.ab3@24885>    LEA regtable,a4
00034118 <AmiBlitz3.ab3@24886>    TST.l (a4)
0003411C <AmiBlitz3.ab3@24887>    BEQ 'noreg
00034120 <AmiBlitz3.ab3@24888>    BTST #15,d2                                             ;regvars
00034124 <AmiBlitz3.ab3@24889>    BNE 'noreg
00034128 <AmiBlitz3.ab3@24890>    CMP.w 0+4(a4),d3
0003412C <AmiBlitz3.ab3@24891>    BNE 'doreg1
00034132 <AmiBlitz3.ab3@24892>    MOVE.l #$f2000380,d1
00034138 <AmiBlitz3.ab3@24893>    MOVE.w regnum,d0
0003413C <AmiBlitz3.ab3@24894>    BNE 'noopt
00034142 <AmiBlitz3.ab3@24900>    MOVE.l destpointer,a4
0003414A <AmiBlitz3.ab3@24901>    CMP.l #$f2001c80,-8(a4)
0003414E <AmiBlitz3.ab3@24902>    BNE 'noopt
00034156 <AmiBlitz3.ab3@24903>    CMP.l #$f2000422,-4(a4)
0003415A <AmiBlitz3.ab3@24904>    BNE 'noopt
00034160 <AmiBlitz3.ab3@24905>    MOVE.l #$f20003a2,d1
0003416A <AmiBlitz3.ab3@24906>    SUB.l #8,destpointer
0003416C <AmiBlitz3.ab3@24909>    ASL.w #7,d0
0003416E <AmiBlitz3.ab3@24910>    OR.w d0,d1
00034174 <AmiBlitz3.ab3@24911>    JSR writelong
00034176 <AmiBlitz3.ab3@24912> RTS
0003417A <AmiBlitz3.ab3@24915>   CMP.w 8+4(a4),d3
0003417E <AmiBlitz3.ab3@24916>    BNE 'doreg2
00034184 <AmiBlitz3.ab3@24917>    MOVE.l #$f2000300,d1
0003418A <AmiBlitz3.ab3@24918>    MOVE.w regnum,d0
0003418C <AmiBlitz3.ab3@24919>    ASL.w #7,d0
0003418E <AmiBlitz3.ab3@24920>    OR.w d0,d1
00034194 <AmiBlitz3.ab3@24921>    JSR writelong
00034196 <AmiBlitz3.ab3@24922> RTS
0003419A <AmiBlitz3.ab3@24925>   CMP.w 16+4(a4),d3
0003419E <AmiBlitz3.ab3@24926>    BNE 'doreg3
000341A4 <AmiBlitz3.ab3@24927>    MOVE.l #$f2000280,d1
000341AA <AmiBlitz3.ab3@24928>    MOVE.w regnum,d0
000341AC <AmiBlitz3.ab3@24929>    ASL.w #7,d0
000341AE <AmiBlitz3.ab3@24930>    OR.w d0,d1
000341B4 <AmiBlitz3.ab3@24931>    JSR  writelong
000341B6 <AmiBlitz3.ab3@24932>  RTS
000341BA <AmiBlitz3.ab3@24935>   CMP.w 24+4(a4),d3
000341BE <AmiBlitz3.ab3@24936>    BNE 'doreg4
000341C4 <AmiBlitz3.ab3@24937>    MOVE.l #$f2000200,d1
000341CA <AmiBlitz3.ab3@24938>    MOVE.w regnum,d0
000341CC <AmiBlitz3.ab3@24939>    ASL.w #7,d0
000341CE <AmiBlitz3.ab3@24940>    OR.w d0,d1
000341D4 <AmiBlitz3.ab3@24941>    JSR writelong
000341D6 <AmiBlitz3.ab3@24942> RTS
000341DA <AmiBlitz3.ab3@24945>   CMP.w 32+4(a4),d3
000341DE <AmiBlitz3.ab3@24946>    BNE 'noreg
000341E4 <AmiBlitz3.ab3@24947>    MOVE.l #$f2000180,d1
000341EA <AmiBlitz3.ab3@24948>    MOVE.w regnum,d0
000341EC <AmiBlitz3.ab3@24949>    ASL.w #7,d0
000341EE <AmiBlitz3.ab3@24950>    OR.w d0,d1
000341F4 <AmiBlitz3.ab3@24951>    JSR writelong
000341F6 <AmiBlitz3.ab3@24952> RTS
000341FC <AmiBlitz3.ab3@24955>    TST.w regnum
00034200 <AmiBlitz3.ab3@24956>    BNE 'nofp0
00034206 <AmiBlitz3.ab3@24957>    MOVE.l destpointer ,a4
0003420E <AmiBlitz3.ab3@24958>    CMP.l #$f2304400,-6(a4)
00034212 <AmiBlitz3.ab3@24959>    BNE 'do
00034218 <AmiBlitz3.ab3@24960>    CMP.w #$1990,-2(a4)
0003421C <AmiBlitz3.ab3@24961>    BNE 'do
00034220 <AmiBlitz3.ab3@24962>    BTST #15,d2                                             ;types ?
00034224 <AmiBlitz3.ab3@24963>    BNE 'do
0003422A <AmiBlitz3.ab3@24964>   MOVE.l #$2b701990,d1                                     ;var
00034230 <AmiBlitz3.ab3@24965>   TST.w varmode
00034234 <AmiBlitz3.ab3@24966>   BEQ 'glob1
00034238 <AmiBlitz3.ab3@24967>   BCLR #25,d1
0003423C <AmiBlitz3.ab3@24970>   MOVE.l d1,-6(a4)
00034240 <AmiBlitz3.ab3@24971>   MOVE.w d3,-2(a4)
00034246 <AmiBlitz3.ab3@24972>   CLR.w fp0var
0003424E <AmiBlitz3.ab3@24973>   MOVE.w #$ffff,fp0mode
00034250 <AmiBlitz3.ab3@24974> RTS
00034258 <AmiBlitz3.ab3@24977>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003425C <AmiBlitz3.ab3@24978>    BNE 'do3
00034266 <AmiBlitz3.ab3@24979>    CMP.l #newtype_double,currtype
0003426A <AmiBlitz3.ab3@24980>    BEQ 'do4
0003426E <AmiBlitz3.ab3@24983>   MOVE.w #$2b6d,d1
00034274 <AmiBlitz3.ab3@24984>    TST.w varmode
00034278 <AmiBlitz3.ab3@24985>    BEQ 'g2
0003427C <AmiBlitz3.ab3@24986>     BCLR #9,d1
00034280 <AmiBlitz3.ab3@24989>     CMP.w #$2b6d,d1
00034284 <AmiBlitz3.ab3@24990>     BNE 'd1
00034288 <AmiBlitz3.ab3@24991>     CMP.w -2(a4),d3
0003428C <AmiBlitz3.ab3@24992>     BNE 'd1
00034292 <AmiBlitz3.ab3@24993>     SUBQ.l #6,destpointer
00034296 <AmiBlitz3.ab3@24994> BRA 'd12
0003429A <AmiBlitz3.ab3@24997>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000342A0 <AmiBlitz3.ab3@24998>     MOVE.w -2(a4),-4(a4)
000342A4 <AmiBlitz3.ab3@24999>     MOVE.w d3,-2(a4)
000342AA <AmiBlitz3.ab3@25002>   CLR.w fp0var
000342B2 <AmiBlitz3.ab3@25003>     MOVE.w #$ffff,fp0mode
000342B4 <AmiBlitz3.ab3@25004> RTS
000342BC <AmiBlitz3.ab3@25007>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000342C0 <AmiBlitz3.ab3@25008>    BNE 'do4
000342C4 <AmiBlitz3.ab3@25009>    MOVE.w #$2b6c,d1
000342CA <AmiBlitz3.ab3@25010>       TST.w varmode
000342CE <AmiBlitz3.ab3@25011>    BEQ 'g3
000342D2 <AmiBlitz3.ab3@25012>    BCLR #9,d1
000342D6 <AmiBlitz3.ab3@25015>   MOVE.w d1,-6(a4)
000342DC <AmiBlitz3.ab3@25016>     MOVE.w -2(a4),-4(a4)
000342E0 <AmiBlitz3.ab3@25017>     MOVE.w d3,-2(a4)
000342E6 <AmiBlitz3.ab3@25018>     CLR.w fp0var
000342EE <AmiBlitz3.ab3@25019>     MOVE.w #$ffff,fp0mode
000342F0 <AmiBlitz3.ab3@25020> RTS
000342F6 <AmiBlitz3.ab3@25023>   MOVE.w d3,fp0var
00034300 <AmiBlitz3.ab3@25024>    MOVE.w varmode,fp0mode
00034302 <AmiBlitz3.ab3@25025>    ADDQ.l #6,a4
00034308 <AmiBlitz3.ab3@25026>    MOVE.l a4,fp0addr
00034312 <AmiBlitz3.ab3@25027>    MOVE.l firstiff,fp0iff
00034316 <AmiBlitz3.ab3@25030>   MOVEM.l d0/d4,-(a7)
00034318 <AmiBlitz3.ab3@25031>    MOVEQ #0,d0
0003431E <AmiBlitz3.ab3@25032>     MOVE.w regnum,d0
00034320 <AmiBlitz3.ab3@25033>    ASL.w #7,d0                                             ;fpu store var
00034324 <AmiBlitz3.ab3@25034>   BTST #15,d2
00034328 <AmiBlitz3.ab3@25035>    BEQ 'var
0003432A <AmiBlitz3.ab3@25036>    MOVE.w d1,d4
0003432E <AmiBlitz3.ab3@25037>    CMP.w #$24c0,d4
00034332 <AmiBlitz3.ab3@25038>    BNE 'nopl
00034338 <AmiBlitz3.ab3@25039>    MOVE.l #$f21a6400,d1
0003433A <AmiBlitz3.ab3@25040>    MOVEQ #0,d3
0003433E <AmiBlitz3.ab3@25041> BRA 'glob
00034344 <AmiBlitz3.ab3@25045>   MOVE.l #$f2126400,d1
00034346 <AmiBlitz3.ab3@25046>    TST.w d3                                                ;offset =0
0003434A <AmiBlitz3.ab3@25047>    BNE 'offset
00034350 <AmiBlitz3.ab3@25048>    MOVE.l #$f2126400,d1
00034352 <AmiBlitz3.ab3@25056>    MOVEQ #0,d3
00034356 <AmiBlitz3.ab3@25057> BRA 'glob
0003435C <AmiBlitz3.ab3@25060>   MOVE.l #$f22d6400,d1                                     ;var
00034362 <AmiBlitz3.ab3@25061>   TST.w varmode
00034366 <AmiBlitz3.ab3@25062>   BEQ 'glob
0003436A <AmiBlitz3.ab3@25063>   BCLR #16,d1
0003436C <AmiBlitz3.ab3@25064>  'glob OR.l d0,d1
00034376 <AmiBlitz3.ab3@25067>   CMP.l #newtype_double,currtype
0003437A <AmiBlitz3.ab3@25068>   BNE 'dbl1
00034380 <AmiBlitz3.ab3@25069>   OR.l #$00001000,d1
00034386 <AmiBlitz3.ab3@25072>   JSR writelong
0003438C <AmiBlitz3.ab3@25073>   CLR.l currtype
00034390 <AmiBlitz3.ab3@25074>   MOVEM.l (a7)+,d0/d4
00034392 <AmiBlitz3.ab3@25075>   MOVE.l d3,d1
00034396 <AmiBlitz3.ab3@25076>   BEQ 'nooffs
0003439C <AmiBlitz3.ab3@25077> JMP writeword
0003439E <AmiBlitz3.ab3@25080> RTS
000343A4 <AmiBlitz3.ab3@25094>     TST.b fast                                             ;write lea->xx(a2)
000343A8 <AmiBlitz3.ab3@25095>    BEQ 'la10
000343AE <AmiBlitz3.ab3@25099>    TST.b quickadd
000343B4 <AmiBlitz3.ab3@25101>      CLR.b quickadd
000343B8 <AmiBlitz3.ab3@25102>    CMP.w #$2480,d1
000343BC <AmiBlitz3.ab3@25103>    BNE 'la10
000343C2 <AmiBlitz3.ab3@25104>    TST.b optiarray
000343C6 <AmiBlitz3.ab3@25105>    BNE 'la10
000343CC <AmiBlitz3.ab3@25106>    MOVE.l destpointer,a4
000343D2 <AmiBlitz3.ab3@25107>    CMP.w #$45ea,-4(a4)
000343D6 <AmiBlitz3.ab3@25108>    BNE 'la10
000343DE <AmiBlitz3.ab3@25109>    CMP.w #8,pushclen
000343E2 <AmiBlitz3.ab3@25110>    BEQ 'la100
000343EA <AmiBlitz3.ab3@25111>    CMP.w #6,pushclen
000343EE <AmiBlitz3.ab3@25112>    BNE 'la10
000343F2 <AmiBlitz3.ab3@25113>    CMP.b #3,d2
000343F6 <AmiBlitz3.ab3@25114>    BCS 'la110
000343FC <AmiBlitz3.ab3@25116>    MOVE.w #$2540,-2(a4)
00034402 <AmiBlitz3.ab3@25117>    MOVE.w arrayoffset,d1
00034408 <AmiBlitz3.ab3@25118> JMP writeword
0003440E <AmiBlitz3.ab3@25121>    CLR.b quickadd
00034410 <AmiBlitz3.ab3@25122> RTS
00034414 <AmiBlitz3.ab3@25125>    CMP.b #2,d2
00034418 <AmiBlitz3.ab3@25126>    BNE 'la120
0003441E <AmiBlitz3.ab3@25127>     MOVE.w #$3540,-2(a4)
00034424 <AmiBlitz3.ab3@25128>    MOVE.w arrayoffset,d1
0003442A <AmiBlitz3.ab3@25129> JMP writeword
0003442E <AmiBlitz3.ab3@25132>   CMP.b #1,d2
00034432 <AmiBlitz3.ab3@25133>    BNE.s 'la10
00034438 <AmiBlitz3.ab3@25134>     MOVE.w #$1540,-2(a4)
0003443E <AmiBlitz3.ab3@25135>    MOVE.w arrayoffset,d1
00034444 <AmiBlitz3.ab3@25136> JMP writeword
00034448 <AmiBlitz3.ab3@25139>    CMP.b #3,d2
0003444C <AmiBlitz3.ab3@25140>    BCS 'la11
00034452 <AmiBlitz3.ab3@25141>    MOVE.w #$2540,-4(a4)
00034454 <AmiBlitz3.ab3@25142> RTS
00034458 <AmiBlitz3.ab3@25145>    CMP.b #2,d2
0003445C <AmiBlitz3.ab3@25146>    BNE 'la12
00034462 <AmiBlitz3.ab3@25147>     MOVE.w #$3540,-4(a4)
00034464 <AmiBlitz3.ab3@25148> RTS
00034468 <AmiBlitz3.ab3@25150>  'la12 CMP.b #1,d2
0003446C <AmiBlitz3.ab3@25151>    BNE.s 'la10
00034472 <AmiBlitz3.ab3@25152>     MOVE.w #$1540,-4(a4)
00034474 <AmiBlitz3.ab3@25153> RTS
0003447A <AmiBlitz3.ab3@25156>   CLR.b optiarray
0003447E <AmiBlitz3.ab3@25157>    CMP.b #$1,D2
00034482 <AmiBlitz3.ab3@25158>    BEQ.w JL_0_E0AC
00034486 <AmiBlitz3.ab3@25159>    BSR.w varalign
0003448A <AmiBlitz3.ab3@25160>    CMP.b #$3,D2
0003448E <AmiBlitz3.ab3@25161>    BCC.w writevarlong
00034494 <AmiBlitz3.ab3@25162>    TST.b fast                                              ;optiimmi
00034498 <AmiBlitz3.ab3@25163>    BEQ 'l10b
0003449E <AmiBlitz3.ab3@25168>    MOVE.l destpointer,a0
000344A4 <AmiBlitz3.ab3@25169>    SUB.l imm_addr,a0
000344AA <AmiBlitz3.ab3@25170>    CMP.l #4,a0
000344AE <AmiBlitz3.ab3@25171>    BNE 'l10
000344B4 <AmiBlitz3.ab3@25172>    CLR.l imm_addr
000344BA <AmiBlitz3.ab3@25173>    MOVE.l destpointer,a4
000344BE <AmiBlitz3.ab3@25174>    OR.w #$107c,d1
000344C2 <AmiBlitz3.ab3@25175>    MOVE.w d1,-4(a4)
000344C4 <AmiBlitz3.ab3@25176>     MOVE.w D3,D1
000344CA <AmiBlitz3.ab3@25177> JMP writeword
000344D0 <AmiBlitz3.ab3@25180>   MOVE.l destpointer,a0
000344D6 <AmiBlitz3.ab3@25181>   SUB.l load_var_addr,a0
000344DC <AmiBlitz3.ab3@25182>   CMP.l #4,a0
000344E0 <AmiBlitz3.ab3@25183>   BNE 'l10b
000344E6 <AmiBlitz3.ab3@25184>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000344EA <AmiBlitz3.ab3@25185>   BNE 'l10b
000344F0 <AmiBlitz3.ab3@25187>   CLR.l load_var_addr
000344F6 <AmiBlitz3.ab3@25188>   MOVE.l destpointer,a4
000344FA <AmiBlitz3.ab3@25189>   OR.w #$102d,d1
000344FE <AmiBlitz3.ab3@25190>   MOVE.w d1,-4(a4)
00034500 <AmiBlitz3.ab3@25191>   MOVE.w d3,d1
00034506 <AmiBlitz3.ab3@25192> JMP writeword
0003450A <AmiBlitz3.ab3@25195>   ORI.w #$1000,D1                                          ;word
0003450E <AmiBlitz3.ab3@25196> BRA.w writestorevar
00034514 <AmiBlitz3.ab3@25200>    TST.b fast                                              ;optiimmi
00034518 <AmiBlitz3.ab3@25201>    BEQ 'l10b
0003451E <AmiBlitz3.ab3@25206>    MOVE.l destpointer,a0
00034524 <AmiBlitz3.ab3@25207>    SUB.l imm_addr,a0
0003452A <AmiBlitz3.ab3@25208>    CMP.l #4,a0
0003452E <AmiBlitz3.ab3@25209>    BNE 'l10
00034534 <AmiBlitz3.ab3@25210>    CLR.l imm_addr
0003453A <AmiBlitz3.ab3@25211>    MOVE.l destpointer,a4
0003453E <AmiBlitz3.ab3@25212>    OR.w #$7c,d1
00034542 <AmiBlitz3.ab3@25213>    EORI #$3000,d1
00034546 <AmiBlitz3.ab3@25214>    MOVE.w d1,-4(a4)
00034548 <AmiBlitz3.ab3@25215>       MOVE.w D3,D1
0003454E <AmiBlitz3.ab3@25216> JMP writeword
00034554 <AmiBlitz3.ab3@25219>   MOVE.l destpointer,a0
0003455A <AmiBlitz3.ab3@25220>   SUB.l load_var_addr,a0
00034560 <AmiBlitz3.ab3@25221>   CMP.l #4,a0
00034564 <AmiBlitz3.ab3@25222>   BNE 'l10b
0003456A <AmiBlitz3.ab3@25223>   CLR.l load_var_addr
00034570 <AmiBlitz3.ab3@25224>   MOVE.l destpointer,a4
00034576 <AmiBlitz3.ab3@25225>    CMP.w #$1b6d,-4(a4)
0003457A <AmiBlitz3.ab3@25226>    BNE 'l10b
0003457E <AmiBlitz3.ab3@25227>    OR.w #$2d,d1
00034582 <AmiBlitz3.ab3@25228>    EORI #$3000,d1
00034586 <AmiBlitz3.ab3@25229>    MOVE.w d1,-4(a4)
00034588 <AmiBlitz3.ab3@25230>   MOVE.w d3,d1
0003458E <AmiBlitz3.ab3@25231> JMP writeword
00034594 <AmiBlitz3.ab3@25234>   ADDQ.w #1,pcodd                                          ;byte
00034598 <AmiBlitz3.ab3@25235>   EORI.w #$3000,D1
0003459E <AmiBlitz3.ab3@25238>   JSR writeword
000345A2 <AmiBlitz3.ab3@25239>   BTST #$7,D1
000345A6 <AmiBlitz3.ab3@25240>    BNE JL_0_E0C6
000345A8 <AmiBlitz3.ab3@25241>   MOVE.w D3,D1
000345AE <AmiBlitz3.ab3@25242> JMP writeword
000345B4 <AmiBlitz3.ab3@25245>    TST.b fast                                              ;optiimmi
000345B8 <AmiBlitz3.ab3@25246>    BEQ 'l10b
000345BE <AmiBlitz3.ab3@25250>    MOVE.l destpointer,a0
000345C4 <AmiBlitz3.ab3@25251>    SUB.l imm_addr,a0
000345CA <AmiBlitz3.ab3@25252>    CMP.l #6,a0
000345CE <AmiBlitz3.ab3@25253>    BNE 'l10
000345D4 <AmiBlitz3.ab3@25254>    CLR.l imm_addr
000345DA <AmiBlitz3.ab3@25255>    MOVE.l destpointer,a4
000345DE <AmiBlitz3.ab3@25256>    OR.w #$7c,d1
000345E2 <AmiBlitz3.ab3@25257>    MOVE.w d1,-6(a4)
000345E4 <AmiBlitz3.ab3@25258>     MOVE.w D3,D1
000345EA <AmiBlitz3.ab3@25259> JMP writeword
000345F0 <AmiBlitz3.ab3@25262>   MOVE.l destpointer,a0
000345F6 <AmiBlitz3.ab3@25263>   SUB.l load_var_addr,a0
000345FC <AmiBlitz3.ab3@25264>   CMP.l #4,a0
00034600 <AmiBlitz3.ab3@25265>   BNE 'l10b
00034606 <AmiBlitz3.ab3@25266>   CLR.l load_var_addr
0003460C <AmiBlitz3.ab3@25267>   MOVE.l destpointer,a4
00034612 <AmiBlitz3.ab3@25268>   CMP.w #$245f,-2(a4)
00034616 <AmiBlitz3.ab3@25269>   BEQ 'l10b
0003461A <AmiBlitz3.ab3@25270>   OR.w #$28,d1
0003461E <AmiBlitz3.ab3@25271>   OR.w d1,-4(a4)
00034624 <AmiBlitz3.ab3@25272>   CMP.w #$2b6d,-4(a4)
00034628 <AmiBlitz3.ab3@25273>   BNE 'd1
0003462C <AmiBlitz3.ab3@25274>   CMP.w -2(a4),d3
00034630 <AmiBlitz3.ab3@25275>   BNE 'd1
00034636 <AmiBlitz3.ab3@25276>   SUBQ.l #4,destpointer
00034638 <AmiBlitz3.ab3@25277> RTS
0003463A <AmiBlitz3.ab3@25280>   MOVE.w d3,d1
00034640 <AmiBlitz3.ab3@25281> JMP writeword
00034646 <AmiBlitz3.ab3@25284>   JSR writeword
0003464A <AmiBlitz3.ab3@25285>   BTST #$7,D1
0003464E <AmiBlitz3.ab3@25286>    BNE.b JL_0_E0C6
00034650 <AmiBlitz3.ab3@25287>   MOVE.w D3,D1
00034656 <AmiBlitz3.ab3@25288> JMP writeword
00034658 <AmiBlitz3.ab3@25291> RTS
0003465A <AmiBlitz3.ab3@25295>   MOVE.w D1,-(A7)
0003465E <AmiBlitz3.ab3@25296>   MOVE.w pcodd(PC),D1
00034660 <AmiBlitz3.ab3@25297>   LSR.w #1,D1
00034664 <AmiBlitz3.ab3@25298>    BCC.b JL_0_E0E2
0003466A <AmiBlitz3.ab3@25299>   CLR.w pcodd
00034670 <AmiBlitz3.ab3@25300>   MOVE.w add1a2,D1
00034676 <AmiBlitz3.ab3@25301>    JSR writeword
00034678 <AmiBlitz3.ab3@25304>   MOVE.w (A7)+,D1
0003467A <AmiBlitz3.ab3@25305> RTS
0003467C <AmiBlitz3.ab3@25309> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003467E <AmiBlitz3.ab3@25312> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034680 <AmiBlitz3.ab3@25313> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034682 <AmiBlitz3.ab3@25314> listsize:  Ds.w 1
00034688 <AmiBlitz3.ab3@25318>   ADDQ.w #1,regnum
00034690 <AmiBlitz3.ab3@25319>   MOVE.b #1,nowdeclare
00034696 <AmiBlitz3.ab3@25320>   CLR.b dimkeep
0003469E <AmiBlitz3.ab3@25321>    CMP.l #"KEEP",-1(a5)
000346A2 <AmiBlitz3.ab3@25322>   BNE 'nokeep
000346A8 <AmiBlitz3.ab3@25323>   CMP.b #" ",3(a5)
000346AC <AmiBlitz3.ab3@25324>   BNE 'nokeep
000346AE <AmiBlitz3.ab3@25325>   ADDQ.l #3,a5
000346B2 <AmiBlitz3.ab3@25328>     CMP.b #" ",(a5)
000346B6 <AmiBlitz3.ab3@25329>     BNE '1
000346B8 <AmiBlitz3.ab3@25330>    ADDQ #1,a5
000346BC <AmiBlitz3.ab3@25331> BRA '2
000346C2 <AmiBlitz3.ab3@25334>   MOVE.l a5,lastsourcepos
000346CA <AmiBlitz3.ab3@25335>   MOVE.b #1,dimkeep
000346CE <AmiBlitz3.ab3@25343>   MOVE.w #$FF9A,D1
000346D4 <AmiBlitz3.ab3@25344>   JSR uselib
000346DA <AmiBlitz3.ab3@25347>   CLR.w listadd
000346DE <AmiBlitz3.ab3@25348>   CMP.w #-$7F4D,D0
000346E2 <AmiBlitz3.ab3@25349>    BNE.w JL_0_E11E
000346EA <AmiBlitz3.ab3@25350>   MOVE.w #$0008,listadd
000346EE <AmiBlitz3.ab3@25351>   MOVE.w #$FFFA,D1
000346F4 <AmiBlitz3.ab3@25352>    JSR uselib
000346FA <AmiBlitz3.ab3@25353>    JSR get1bytemain
00034700 <AmiBlitz3.ab3@25356>   CLR.w nonew
00034706 <AmiBlitz3.ab3@25357>    JSR getparameter
0003470E <AmiBlitz3.ab3@25358>   BTST #$1,flagmask+1
00034712 <AmiBlitz3.ab3@25359>    BEQ.w JUMP_syntaxerr
00034718 <AmiBlitz3.ab3@25360>    JSR JL_0_8E3C
0003471E <AmiBlitz3.ab3@25361>   MOVE.w notshared,D1
00034722 <AmiBlitz3.ab3@25362>    BNE.w JL_0_E198
0003472A <AmiBlitz3.ab3@25363>   MOVE.w $8(A3),temp1
00034730 <AmiBlitz3.ab3@25364>   MOVE.w proceduremode,D2
00034734 <AmiBlitz3.ab3@25365>    BNE.w JL_0_E176
0003473A <AmiBlitz3.ab3@25366>   MOVE.w globalvarpointer,-(A7)
00034742 <AmiBlitz3.ab3@25367>   MOVE.w $4(A3),globalvarpointer
00034748 <AmiBlitz3.ab3@25368>   ADDQ.w #4,globalvarpointer
0003474C <AmiBlitz3.ab3@25369>    BSR.w write_dim_code
00034752 <AmiBlitz3.ab3@25370>   MOVE.w (A7)+,globalvarpointer
00034756 <AmiBlitz3.ab3@25371> BRA.w JL_0_E1BA
0003475C <AmiBlitz3.ab3@25382>   MOVE.w globalvarpointer,-(A7)
00034762 <AmiBlitz3.ab3@25383>             MOVE.w proceduremode,-(a7)
00034768 <AmiBlitz3.ab3@25384>             CLR.w proceduremode
00034770 <AmiBlitz3.ab3@25385>   MOVE.w $4(A3),globalvarpointer
00034776 <AmiBlitz3.ab3@25386>   ADDQ.w #4,globalvarpointer
0003477A <AmiBlitz3.ab3@25387>    BSR.w write_dim_code
00034780 <AmiBlitz3.ab3@25388>    MOVE.w (a7)+,proceduremode
00034786 <AmiBlitz3.ab3@25389>   MOVE.w (A7)+,globalvarpointer
0003478A <AmiBlitz3.ab3@25390> BRA.w JL_0_E1BA
00034792 <AmiBlitz3.ab3@25393>   MOVE.w #$FFFF,temp1
00034796 <AmiBlitz3.ab3@25394>   MOVE.w listadd(PC),D1
0003479A <AmiBlitz3.ab3@25395>    BEQ.w JL_0_E1B6
000347A2 <AmiBlitz3.ab3@25396>   MOVE.w #$4000,temp1
000347A8 <AmiBlitz3.ab3@25397>   BSET #$0,$6(A3)
000347AE <AmiBlitz3.ab3@25400>         TST.w proceduremode
000347B2 <AmiBlitz3.ab3@25401>        BNE 'l1
000347B8 <AmiBlitz3.ab3@25402>        MOVE.w locvaroff,-(a7)
000347BC <AmiBlitz3.ab3@25405>   BSR.w write_dim_code
000347C2 <AmiBlitz3.ab3@25406>         TST.w proceduremode
000347C6 <AmiBlitz3.ab3@25407>         BNE JL_0_E1BA
000347CC <AmiBlitz3.ab3@25408>        MOVE.w (A7)+,locvaroff
000347D2 <AmiBlitz3.ab3@25411>   JSR get1bytemain
000347D6 <AmiBlitz3.ab3@25412>   CMP.w #$2C,D0
000347DA <AmiBlitz3.ab3@25413>    BNE.w JL_0_E1CE
000347E0 <AmiBlitz3.ab3@25414>    JSR get1bytemain
000347E4 <AmiBlitz3.ab3@25415> BRA.w JL_0_E0FC
000347E6 <AmiBlitz3.ab3@25418> RTS
000347EE <AmiBlitz3.ab3@25421>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000347F4 <AmiBlitz3.ab3@25422>   MOVE.w beginarr,D1
000347FA <AmiBlitz3.ab3@25423>    JSR writeword
000347FC <AmiBlitz3.ab3@25424>   MOVEQ.l #$00,D1
00034802 <AmiBlitz3.ab3@25425>    JSR writeword
00034804 <AmiBlitz3.ab3@25426>   MOVEQ.l #$04,D1
0003480C <AmiBlitz3.ab3@25427>   BTST #$0,flagmask+1
00034810 <AmiBlitz3.ab3@25428>    BNE.w write_dim_code__pointer
00034814 <AmiBlitz3.ab3@25429>   MOVE.w $8(A2),D1
00034818 <AmiBlitz3.ab3@25432>   ADD.w listadd(PC),D1                                     ;size of one element.
0003481E <AmiBlitz3.ab3@25433>   MOVE.w D1,listsize
00034824 <AmiBlitz3.ab3@25434>    JSR writeword
0003482A <AmiBlitz3.ab3@25435>   CLR.w temp2                                              ;# dim's got
0003482C <AmiBlitz3.ab3@25436>   MOVE.l A3,-(A7)
00034832 <AmiBlitz3.ab3@25439>   ADDQ.w #1,temp2
00034834 <AmiBlitz3.ab3@25440>   MOVEQ.l #$03,D2                                          ;get word
0003483A <AmiBlitz3.ab3@25441>   MOVE.w notshared,-(a7)
00034840 <AmiBlitz3.ab3@25442>    JSR eval
00034846 <AmiBlitz3.ab3@25443>   MOVE.w (a7)+,notshared
0003484C <AmiBlitz3.ab3@25444>   TST.b debugmode
00034850 <AmiBlitz3.ab3@25445>    BEQ.w write_dim_code__norerr0
00034854 <AmiBlitz3.ab3@25446>   MOVE.w #$C30F,D1
00034858 <AmiBlitz3.ab3@25452>       MOVE.w #$5281,d1
0003485E <AmiBlitz3.ab3@25453>       JSR writeword
00034864 <AmiBlitz3.ab3@25454>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
0003486A <AmiBlitz3.ab3@25455>       JSR writelong
00034870 <AmiBlitz3.ab3@25456>   MOVE.w proceduremode,D2
00034874 <AmiBlitz3.ab3@25457>    BEQ.w write_dim_code__global
0003487A <AmiBlitz3.ab3@25458>   SUBQ.w #4,locvaroff
00034884 <AmiBlitz3.ab3@25459>   MOVE.w locvaroff,putarr+2
00034888 <AmiBlitz3.ab3@25460> BRA.w write_dim_code__doit
0003488E <AmiBlitz3.ab3@25463> JMP syntaxerr
00034898 <AmiBlitz3.ab3@25466>   MOVE.w globalvarpointer,putarr+2
0003489E <AmiBlitz3.ab3@25467>   ADDQ.w #4,globalvarpointer
000348A4 <AmiBlitz3.ab3@25470>   TST.b dimkeep
000348A8 <AmiBlitz3.ab3@25471>            BEQ write_dim_code__doit_l1
000348AA <AmiBlitz3.ab3@25472>       MOVEQ #0,d1
000348B0 <AmiBlitz3.ab3@25473>       MOVE.w putarr+2,d1
000348B6 <AmiBlitz3.ab3@25474>       OR.l  #$222d0000,d1
000348BC <AmiBlitz3.ab3@25475>       MOVE.w proceduremode,D2
000348C0 <AmiBlitz3.ab3@25476>       BEQ write_dim_code__doit_l2
000348C6 <AmiBlitz3.ab3@25477>       TST.w notshared
000348CA <AmiBlitz3.ab3@25478>       BEQ write_dim_code__doit_l2
000348D0 <AmiBlitz3.ab3@25479>       SUB.l #$00010000,d1
000348D6 <AmiBlitz3.ab3@25482>   JSR writelong
000348DC <AmiBlitz3.ab3@25485>   MOVE.l putarr,D1
000348E2 <AmiBlitz3.ab3@25486>       TST.w notshared
000348E6 <AmiBlitz3.ab3@25487>       BNE write_dim_code__doit_l1a
000348EC <AmiBlitz3.ab3@25488>       JSR writelong
000348F0 <AmiBlitz3.ab3@25489> BRA write_dim_code__doit_l4
000348F6 <AmiBlitz3.ab3@25492>   JSR pokela5d
000348FA <AmiBlitz3.ab3@25495>   CMP.w #$2C,D0
000348FE <AmiBlitz3.ab3@25496>    BEQ.w write_dim_code__loop
00034902 <AmiBlitz3.ab3@25497>   CMP.w #$29,D0
00034906 <AmiBlitz3.ab3@25498>    BNE.w JUMP_syntaxerr
00034908 <AmiBlitz3.ab3@25499>   MOVEA.l (A7)+,A3
0003490E <AmiBlitz3.ab3@25500>   MOVE.w temp1,D1
00034912 <AmiBlitz3.ab3@25501>    BMI.w write_dim_code__nocare
00034916 <AmiBlitz3.ab3@25505>   BTST #$E,D1
0003491A <AmiBlitz3.ab3@25506>    BEQ.w write_dim_code__notl
00034922 <AmiBlitz3.ab3@25507>   CMPI.w #$1,temp2
00034926 <AmiBlitz3.ab3@25508>    BNE.w JUMP_redimerr
0003492A <AmiBlitz3.ab3@25509> BRA.w write_dim_code__nocare
00034930 <AmiBlitz3.ab3@25512> JMP redimerr
00034936 <AmiBlitz3.ab3@25515>   CMP.w temp2,D1
0003493A <AmiBlitz3.ab3@25516>    BNE.w JUMP_redimerr                                      ;range too long
00034940 <AmiBlitz3.ab3@25519>   LEA globalvarpointer,A0
00034946 <AmiBlitz3.ab3@25520>   MOVE.w proceduremode,D1
0003494A <AmiBlitz3.ab3@25521>   BEQ.w write_dim_code__gskip
00034950 <AmiBlitz3.ab3@25522>   LEA locvaroff,A0
00034956 <AmiBlitz3.ab3@25525>   MOVE.W  extraword,(A0)
0003495A <AmiBlitz3.ab3@25526>   BRA.W   write_dim_code__care
00034962 <AmiBlitz3.ab3@25529>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034968 <AmiBlitz3.ab3@25532>   LEA doarr,A0
0003496E <AmiBlitz3.ab3@25533>   MOVE.w $4(A3),$2(A0)
00034976 <AmiBlitz3.ab3@25534>   MOVE.w putarr+2,$6(A0)
00034978 <AmiBlitz3.ab3@25535>   MOVE.l (A0)+,D1
0003497E <AmiBlitz3.ab3@25536>    JSR writelong
00034980 <AmiBlitz3.ab3@25537>   MOVE.l (A0),D1
00034986 <AmiBlitz3.ab3@25538>    JSR writelong
0003498C <AmiBlitz3.ab3@25539>    TST.b dimkeep
00034990 <AmiBlitz3.ab3@25540>   BNE write_dim_code__care_l3
00034994 <AmiBlitz3.ab3@25543>   MOVE.w #$C400,D1
00034998 <AmiBlitz3.ab3@25544> BRA write_dim_code__care_l2
0003499C <AmiBlitz3.ab3@25547>   MOVE.w #$C405,d1
000349A2 <AmiBlitz3.ab3@25550>   MOVE.w proceduremode,D2
000349A6 <AmiBlitz3.ab3@25551>    BEQ.w write_dim_code__isg
000349AC <AmiBlitz3.ab3@25552>    TST.w notshared
000349B0 <AmiBlitz3.ab3@25553>    BEQ write_dim_code__isg
000349B2 <AmiBlitz3.ab3@25554>   ADDQ.w #1,D1
000349B6 <AmiBlitz3.ab3@25557>   MOVE.w listadd(PC),D2
000349BA <AmiBlitz3.ab3@25558>    BEQ.w write_dim_code__isrg
000349BC <AmiBlitz3.ab3@25559>   MOVE.w D1,-(A7)
000349C0 <AmiBlitz3.ab3@25560>   MOVE.w setles(PC),D1
000349C6 <AmiBlitz3.ab3@25561>    JSR writeword
000349CA <AmiBlitz3.ab3@25562>   MOVE.w listsize(PC),D1
000349D0 <AmiBlitz3.ab3@25563>    JSR writeword
000349D2 <AmiBlitz3.ab3@25564>   MOVE.w (A7)+,D1
000349D4 <AmiBlitz3.ab3@25565>   ADDQ.w #3,D1
000349D8 <AmiBlitz3.ab3@25568> BRA.w Atokejsr
000349DE <AmiBlitz3.ab3@25575>     MOVE.l #$f23c4400,d1
000349E4 <AmiBlitz3.ab3@25577>   MOVE.w regnum,d0
000349E6 <AmiBlitz3.ab3@25578>   ASL.w #7,d0
000349E8 <AmiBlitz3.ab3@25579>   OR.w d0,d1
000349EE <AmiBlitz3.ab3@25580>   JSR writelong
000349F4 <AmiBlitz3.ab3@25586>     MOVE.l #$40490fd9,d1
000349FA <AmiBlitz3.ab3@25588>   JSR writelong
00034A00 <AmiBlitz3.ab3@25589> JMP get1bytemain
00034A04 <AmiBlitz3.ab3@25593> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034A08 <AmiBlitz3.ab3@25600> vbr:                Ds.l 1
00034A0A <AmiBlitz3.ab3@25601> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034A10 <AmiBlitz3.ab3@25603> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034A14 <AmiBlitz3.ab3@25607> constpcat:          Ds.l 1
00034A18 <AmiBlitz3.ab3@25608> constlibat:         Ds.l 1
00034A1C <AmiBlitz3.ab3@25609> constmaxpc:         Dc.l $400
00034A20 <AmiBlitz3.ab3@25611> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034A24 <AmiBlitz3.ab3@25612> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034A28 <AmiBlitz3.ab3@25613> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034A2C <AmiBlitz3.ab3@25614> lastrestype:        Dc.l newtype_string
00034A2E <AmiBlitz3.ab3@25615> rescnt:             Ds.w 1                               ;# resident
00034A30 <AmiBlitz3.ab3@25616> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034A34 <AmiBlitz3.ab3@25617> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034A36 <AmiBlitz3.ab3@25618> linedone:           Ds.w 1
00034A4C <AmiBlitz3.ab3@25619> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034A50 <AmiBlitz3.ab3@25628>   Dc.l 0                                        ; bytetobyte
00034A54 <AmiBlitz3.ab3@25629>   Dc.l convert_byte_to_word                     ; bytetoword
00034A58 <AmiBlitz3.ab3@25630>   Dc.l convert_byte_to_long                     ; bytetolong
00034A5C <AmiBlitz3.ab3@25631>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034A60 <AmiBlitz3.ab3@25632>   Dc.l convert_byte_to_float                    ; bytetofloat
00034A64 <AmiBlitz3.ab3@25633>   Dc.l convert_byte_to_long                     ; bytetolong
00034A68 <AmiBlitz3.ab3@25634>   Dc.l error_convert_types                      ; noconerr
00034A6C <AmiBlitz3.ab3@25637>   Dc.l convert_word_to_byte                     ; wordtobyte
00034A70 <AmiBlitz3.ab3@25638>   Dc.l 0                                        ; wordtoword
00034A74 <AmiBlitz3.ab3@25639>   Dc.l convert_word_to_long                     ; wordtolong
00034A78 <AmiBlitz3.ab3@25640>   Dc.l convert_word_to_quick                    ; wordtoquick
00034A7C <AmiBlitz3.ab3@25641>   Dc.l convert_word_to_float                    ; wordtofloat
00034A80 <AmiBlitz3.ab3@25642>   Dc.l convert_word_to_long                     ; wordtolong
00034A84 <AmiBlitz3.ab3@25643>   Dc.l error_convert_types                      ; noconerr
00034A88 <AmiBlitz3.ab3@25646>   Dc.l convert_long_to_byte                     ; longtobyte
00034A8C <AmiBlitz3.ab3@25647>   Dc.l convert_long_to_word                     ; longtoword
00034A90 <AmiBlitz3.ab3@25648>   Dc.l 0                                        ; longtolong
00034A94 <AmiBlitz3.ab3@25649>   Dc.l convert_long_to_quick                    ; longtoquick
00034A98 <AmiBlitz3.ab3@25650>   Dc.l convert_long_to_float                    ; longtofloat
00034A9C <AmiBlitz3.ab3@25651>   Dc.l 0                                        ; longtolong
00034AA0 <AmiBlitz3.ab3@25652>   Dc.l error_convert_types                      ; noconerr
00034AA4 <AmiBlitz3.ab3@25655>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034AA8 <AmiBlitz3.ab3@25656>   Dc.l convert_quick_to_word                    ; quicktoword
00034AAC <AmiBlitz3.ab3@25657>   Dc.l convert_quick_to_long                    ; quicktolong
00034AB0 <AmiBlitz3.ab3@25658>   Dc.l 0                                        ; quicktoquick
00034AB4 <AmiBlitz3.ab3@25659>   Dc.l convert_quick_to_float                   ; quicktofloat
00034AB8 <AmiBlitz3.ab3@25660>   Dc.l convert_quick_to_long                    ; quicktolong
00034ABC <AmiBlitz3.ab3@25661>   Dc.l error_convert_types                      ; noconerr
00034AC0 <AmiBlitz3.ab3@25664>   Dc.l convert_float_to_byte                    ; floattobyte
00034AC4 <AmiBlitz3.ab3@25665>   Dc.l convert_float_to_word                    ; floattoword
00034AC8 <AmiBlitz3.ab3@25666>   Dc.l convert_float_to_long                    ; floattolong
00034ACC <AmiBlitz3.ab3@25667>   Dc.l convert_float_to_quick                   ; floattoquick
00034AD0 <AmiBlitz3.ab3@25668>   Dc.l 0                                        ; floattofloat
00034AD4 <AmiBlitz3.ab3@25669>   Dc.l convert_float_to_long                    ; floattolong
00034AD8 <AmiBlitz3.ab3@25670>   Dc.l error_convert_types                      ; noconerr
00034ADC <AmiBlitz3.ab3@25673>   Dc.l convert_long_to_byte                     ; longtobyte
00034AE0 <AmiBlitz3.ab3@25674>   Dc.l convert_long_to_word                     ; longtoword
00034AE4 <AmiBlitz3.ab3@25675>   Dc.l 0                                        ; longtolong
00034AE8 <AmiBlitz3.ab3@25676>   Dc.l convert_long_to_quick                    ; longtoquick
00034AEC <AmiBlitz3.ab3@25677>   Dc.l convert_long_to_float                    ; longtofloat
00034AF0 <AmiBlitz3.ab3@25678>   Dc.l 0                                        ; longtolong
00034AF4 <AmiBlitz3.ab3@25679>   Dc.l error_convert_types                      ; noconerr
00034AF8 <AmiBlitz3.ab3@25682>   Dc.l error_convert_types                      ; noconerr
00034AFC <AmiBlitz3.ab3@25683>   Dc.l error_convert_types                      ; noconerr
00034B00 <AmiBlitz3.ab3@25684>   Dc.l string_to_long                           ; stringtolong
00034B04 <AmiBlitz3.ab3@25685>   Dc.l error_convert_types                      ; noconerr
00034B08 <AmiBlitz3.ab3@25686>   Dc.l error_convert_types                      ; noconerr
00034B0C <AmiBlitz3.ab3@25687>   Dc.l string_to_long                           ; stringtolong
00034B10 <AmiBlitz3.ab3@25688>   Ds.l 1
00034B12 <AmiBlitz3.ab3@25694>   Dc.b $00,$2B                                  ;+ ; add
00034B16 <AmiBlitz3.ab3@25695>   Dc.l do_plus_byte                             ;doplusb
00034B1A <AmiBlitz3.ab3@25696>   Dc.l do_plus_word                             ;doplusw
00034B1E <AmiBlitz3.ab3@25697>   Dc.l do_plus_long                             ;doplusl
00034B22 <AmiBlitz3.ab3@25698>   Dc.l do_plus_long                             ;doplusl
00034B26 <AmiBlitz3.ab3@25699>   Dc.l do_plus_float                            ;doplusf
00034B2A <AmiBlitz3.ab3@25700>   Ds.l 1
00034B2E <AmiBlitz3.ab3@25701>   Dc.l add_strings                              ;addstrings
00034B30 <AmiBlitz3.ab3@25702>   Dc.b $0B,$B8
00034B32 <AmiBlitz3.ab3@25704>   Dc.b $00,$2D                                  ;- ; sub
00034B36 <AmiBlitz3.ab3@25705>   Dc.l do_minus_byte                            ;dominusb
00034B3A <AmiBlitz3.ab3@25706>   Dc.l do_minus_word                            ;dominusw
00034B3E <AmiBlitz3.ab3@25707>   Dc.l do_minus_long                            ;dominusl
00034B42 <AmiBlitz3.ab3@25708>   Dc.l do_minus_long                            ;dominusl
00034B46 <AmiBlitz3.ab3@25709>   Dc.l do_minus_float                           ;dominusf
00034B4E <AmiBlitz3.ab3@25710>   Ds.l 2
00034B50 <AmiBlitz3.ab3@25711>   Dc.b $0B,$B8
00034B52 <AmiBlitz3.ab3@25713>   Dc.b $00,$2A                                  ;* ; mul
00034B56 <AmiBlitz3.ab3@25714>   Dc.l do_times_byte                            ;dotimesb
00034B5A <AmiBlitz3.ab3@25715>   Dc.l do_times_word                            ;dotimesw
00034B5E <AmiBlitz3.ab3@25716>   Dc.l do_times_long                            ;dotimesl
00034B62 <AmiBlitz3.ab3@25717>   Dc.l do_times_quick                           ;dotimesq
00034B66 <AmiBlitz3.ab3@25718>   Dc.l do_times_float                           ;dotimesf
00034B6E <AmiBlitz3.ab3@25719>   Ds.l 2
00034B70 <AmiBlitz3.ab3@25720>   Dc.b $0F,$A0
00034B72 <AmiBlitz3.ab3@25722>   Dc.b $00,$2F                                  ;/ ; div
00034B76 <AmiBlitz3.ab3@25723>   Dc.l do_Div_byte                              ;dodivb
00034B7A <AmiBlitz3.ab3@25724>   Dc.l do_Div_word                              ;dodivb
00034B7E <AmiBlitz3.ab3@25725>   Dc.l do_Div_long                              ;dodivl
00034B82 <AmiBlitz3.ab3@25726>   Dc.l do_Div_quick                             ;dodivq
00034B86 <AmiBlitz3.ab3@25727>   Dc.l do_Div_float                             ;dodivf
00034B8E <AmiBlitz3.ab3@25728>   Ds.l 2
00034B90 <AmiBlitz3.ab3@25729>   Dc.b $0F,$A0
00034B92 <AmiBlitz3.ab3@25731>   Dc.b $00,$26                                  ;& ; & int
00034B96 <AmiBlitz3.ab3@25732>   Dc.l do_AND_byte                              ;doandb
00034B9A <AmiBlitz3.ab3@25733>   Dc.l do_AND_word                              ;doandw
00034B9E <AmiBlitz3.ab3@25734>   Dc.l do_AND_long                              ;doandl
00034BA2 <AmiBlitz3.ab3@25735>   Dc.l do_AND_long                              ;doandl
00034BAE <AmiBlitz3.ab3@25736>   Ds.l 3
00034BB0 <AmiBlitz3.ab3@25737>   Dc.b $13,$88
00034BB2 <AmiBlitz3.ab3@25739>   Dc.b $00,$7C                                  ;| ;or int ;
00034BB6 <AmiBlitz3.ab3@25740>   Dc.l do_OR_byte                               ;doorb
00034BBA <AmiBlitz3.ab3@25741>   Dc.l do_OR_word                               ;doorw
00034BBE <AmiBlitz3.ab3@25742>   Dc.l do_OR_long                               ;doorl
00034BC2 <AmiBlitz3.ab3@25743>   Dc.l do_OR_long                               ;doorl
00034BCE <AmiBlitz3.ab3@25744>   Ds.l 3
00034BD0 <AmiBlitz3.ab3@25745>   Dc.b $13,$88
00034BD2 <AmiBlitz3.ab3@25747>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034BD6 <AmiBlitz3.ab3@25748>   Dc.l do_AND_byte                              ;doandb
00034BDA <AmiBlitz3.ab3@25749>   Dc.l do_AND_word                              ;doandw
00034BDE <AmiBlitz3.ab3@25750>   Dc.l do_AND_long                              ;doandl
00034BE2 <AmiBlitz3.ab3@25751>   Dc.l do_AND_long                              ;doandl
00034BEE <AmiBlitz3.ab3@25752>   Ds.l 3
00034BF0 <AmiBlitz3.ab3@25753>   Dc.b $03,$E8
00034BF2 <AmiBlitz3.ab3@25755>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034BF6 <AmiBlitz3.ab3@25756>   Dc.l do_OR_byte                               ;doorb
00034BFA <AmiBlitz3.ab3@25757>   Dc.l do_OR_word                               ;doorw
00034BFE <AmiBlitz3.ab3@25758>   Dc.l do_OR_long                               ;doorl
00034C02 <AmiBlitz3.ab3@25759>   Dc.l do_OR_long                               ;doorl
00034C0E <AmiBlitz3.ab3@25760>   Ds.l 3
00034C10 <AmiBlitz3.ab3@25761>   Dc.b $03,$E8
00034C12 <AmiBlitz3.ab3@25763>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034C16 <AmiBlitz3.ab3@25764>   Dc.l do_EOR_byte                              ;doeorb
00034C1A <AmiBlitz3.ab3@25765>   Dc.l do_EOR_word                              ;doeorw
00034C1E <AmiBlitz3.ab3@25766>   Dc.l do_EOR_long                              ;doeorl
00034C22 <AmiBlitz3.ab3@25767>   Dc.l do_EOR_long                              ;doeorl
00034C2E <AmiBlitz3.ab3@25768>   Ds.l 3
00034C30 <AmiBlitz3.ab3@25769>   Dc.b $03,$E8
00034C32 <AmiBlitz3.ab3@25771>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034C36 <AmiBlitz3.ab3@25772>   Dc.l do_LSL                                   ;dolslb
00034C3A <AmiBlitz3.ab3@25773>   Dc.l do_LSL                                   ;dolslw
00034C3E <AmiBlitz3.ab3@25774>   Dc.l do_LSL                                   ;dolsll
00034C42 <AmiBlitz3.ab3@25775>   Dc.l do_LSL                                   ;dolsll
00034C4E <AmiBlitz3.ab3@25776>   Ds.l 3
00034C50 <AmiBlitz3.ab3@25777>   Dc.b $17,$70
00034C52 <AmiBlitz3.ab3@25779>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034C56 <AmiBlitz3.ab3@25780>   Dc.l do_LSL                                   ;dolslb
00034C5A <AmiBlitz3.ab3@25781>   Dc.l do_LSL                                   ;dolslw
00034C5E <AmiBlitz3.ab3@25782>   Dc.l do_LSL                                   ;dolsll
00034C62 <AmiBlitz3.ab3@25783>   Dc.l do_LSL                                   ;dolsll
00034C6E <AmiBlitz3.ab3@25784>   Ds.l 3
00034C70 <AmiBlitz3.ab3@25785>   Dc.b $17,$70
00034C72 <AmiBlitz3.ab3@25787>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034C76 <AmiBlitz3.ab3@25788>   Dc.l do_LSR                                   ;dolsrb
00034C7A <AmiBlitz3.ab3@25789>   Dc.l do_LSR                                   ;dolsrw
00034C7E <AmiBlitz3.ab3@25790>   Dc.l do_LSR                                   ;dolsrl
00034C82 <AmiBlitz3.ab3@25791>   Dc.l do_LSR                                   ;dolsrl
00034C8E <AmiBlitz3.ab3@25792>   Ds.l 3
00034C90 <AmiBlitz3.ab3@25793>   Dc.b $17,$70
00034C92 <AmiBlitz3.ab3@25795>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034C96 <AmiBlitz3.ab3@25796>   Dc.l do_ASR                                   ;doasrb
00034C9A <AmiBlitz3.ab3@25797>   Dc.l do_ASR                                   ;doasrw
00034C9E <AmiBlitz3.ab3@25798>   Dc.l do_ASR                                   ;doasrl
00034CA2 <AmiBlitz3.ab3@25799>   Dc.l do_ASR                                   ;doasrl
00034CAE <AmiBlitz3.ab3@25800>   Ds.l 3
00034CB0 <AmiBlitz3.ab3@25801>   Dc.b $17,$70
00034CB2 <AmiBlitz3.ab3@25803>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034CB6 <AmiBlitz3.ab3@25804>   Dc.l do_mod_byte                              ;domodb
00034CBA <AmiBlitz3.ab3@25805>   Dc.l do_mod_word                              ;domodw
00034CBE <AmiBlitz3.ab3@25806>   Dc.l do_mod_long                              ;domodl
00034CC2 <AmiBlitz3.ab3@25807>   Dc.l do_mod_quick                             ;domodq
00034CC6 <AmiBlitz3.ab3@25808>   Dc.l do_mod_float                             ;domodf
00034CCE <AmiBlitz3.ab3@25809>   Ds.l 2
00034CD0 <AmiBlitz3.ab3@25810>   Dc.b $13,$88
00034CD2 <AmiBlitz3.ab3@25813>   Dc.b $00,$5E                                  ;^
00034CD6 <AmiBlitz3.ab3@25814>   Dc.l do_pow                                   ;dopow
00034CDA <AmiBlitz3.ab3@25815>   Dc.l do_pow                                   ;dopow
00034CDE <AmiBlitz3.ab3@25816>   Dc.l do_pow                                   ;dopow
00034CE2 <AmiBlitz3.ab3@25817>   Dc.l do_pow                                   ;dopow
00034CE6 <AmiBlitz3.ab3@25818>   Dc.l do_pow                                   ;dopow
00034CEE <AmiBlitz3.ab3@25819>   Ds.l 2
00034CF0 <AmiBlitz3.ab3@25820>   Dc.b $1B,$58                                  ;7000
00034CF2 <AmiBlitz3.ab3@25823>   Dc.b $00,$3D                                  ;=
00034CF6 <AmiBlitz3.ab3@25824>   Dc.l do_equal_byte                            ;doeqb
00034CFA <AmiBlitz3.ab3@25825>   Dc.l do_equal_word                            ;doeqw
00034CFE <AmiBlitz3.ab3@25826>   Dc.l do_equal_long                            ;doeql
00034D02 <AmiBlitz3.ab3@25827>   Dc.l do_equal_long                            ;doeql
00034D06 <AmiBlitz3.ab3@25828>   Dc.l do_equal_float                           ;doeqf
00034D0A <AmiBlitz3.ab3@25829>   Dc.l do_equal_long                            ;doeql
00034D0E <AmiBlitz3.ab3@25830>   Dc.l do_equal_string                          ;doeqs
00034D10 <AmiBlitz3.ab3@25831>   Dc.b $07,$D0                                  ;2000
00034D12 <AmiBlitz3.ab3@25834>   Dc.b $3C,$3E                                  ;<>
00034D16 <AmiBlitz3.ab3@25835>   Dc.l do_not_equal_byte                        ;doneb
00034D1A <AmiBlitz3.ab3@25836>   Dc.l do_not_equal_word                        ;donew
00034D1E <AmiBlitz3.ab3@25837>   Dc.l do_not_equal_long                        ;donel
00034D22 <AmiBlitz3.ab3@25838>   Dc.l do_not_equal_long                        ;donel
00034D26 <AmiBlitz3.ab3@25839>   Dc.l do_not_equal_float                       ;donef
00034D2A <AmiBlitz3.ab3@25840>   Dc.l do_not_equal_long                        ;donel
00034D2E <AmiBlitz3.ab3@25841>   Dc.l do_not_equal_string                      ;dones
00034D30 <AmiBlitz3.ab3@25842>   Dc.b $07,$D0                                  ;2000
00034D32 <AmiBlitz3.ab3@25845>   Dc.b $00,$3C                                  ;<
00034D36 <AmiBlitz3.ab3@25846>   Dc.l do_littler_byte                          ;doltb
00034D3A <AmiBlitz3.ab3@25847>   Dc.l do_littler_word                          ;doltw
00034D3E <AmiBlitz3.ab3@25848>   Dc.l do_littler_long                          ;doltl
00034D42 <AmiBlitz3.ab3@25849>   Dc.l do_littler_long                          ;doltl
00034D46 <AmiBlitz3.ab3@25850>   Dc.l do_littler_float                         ;doltf
00034D4A <AmiBlitz3.ab3@25851>   Dc.l do_littler_long                          ;doltl
00034D4E <AmiBlitz3.ab3@25852>   Dc.l do_littler_string                        ;dolts
00034D50 <AmiBlitz3.ab3@25853>   Dc.b $07,$D0                                  ;2000
00034D52 <AmiBlitz3.ab3@25856>   Dc.b $3C,$3D                                  ;<=
00034D56 <AmiBlitz3.ab3@25857>   Dc.l do_littler_equal_byte                    ;doleb
00034D5A <AmiBlitz3.ab3@25858>   Dc.l do_littler_equal_word                    ;doleb
00034D5E <AmiBlitz3.ab3@25859>   Dc.l do_littler_equal_long                    ;dolel
00034D62 <AmiBlitz3.ab3@25860>   Dc.l do_littler_equal_long                    ;dolel
00034D66 <AmiBlitz3.ab3@25861>   Dc.l do_littler_equal_float                   ;dolef
00034D6A <AmiBlitz3.ab3@25862>   Dc.l do_littler_equal_long                    ;dolel
00034D6E <AmiBlitz3.ab3@25863>   Dc.l do_littler_equal_string                  ;doles
00034D70 <AmiBlitz3.ab3@25864>   Dc.b $07,$D0                                  ;2000
00034D72 <AmiBlitz3.ab3@25867>   Dc.b $00,$3E                                  ;>
00034D76 <AmiBlitz3.ab3@25868>   Dc.l do_greater_byte                          ;dogtb
00034D7A <AmiBlitz3.ab3@25869>   Dc.l do_greater_word                          ;dogtw
00034D7E <AmiBlitz3.ab3@25870>   Dc.l do_greater_long                          ;dogtl
00034D82 <AmiBlitz3.ab3@25871>   Dc.l do_greater_long                          ;dogtl
00034D86 <AmiBlitz3.ab3@25872>   Dc.l do_greater_float                         ;dogtf
00034D8A <AmiBlitz3.ab3@25873>   Dc.l do_greater_long                          ;dogtl
00034D8E <AmiBlitz3.ab3@25874>   Dc.l do_greater_string                        ;dogts
00034D90 <AmiBlitz3.ab3@25875>   Dc.b $07,$D0                                  ;2000
00034D92 <AmiBlitz3.ab3@25878>   Dc.b $3E,$3D                                  ;>=
00034D96 <AmiBlitz3.ab3@25879>   Dc.l do_greater_equal_byte                    ;dogeb
00034D9A <AmiBlitz3.ab3@25880>   Dc.l do_greater_equal_word                    ;dogew
00034D9E <AmiBlitz3.ab3@25881>   Dc.l do_greater_equal_long                    ;dogel
00034DA2 <AmiBlitz3.ab3@25882>   Dc.l do_greater_equal_long                    ;dogel
00034DA6 <AmiBlitz3.ab3@25883>   Dc.l do_greater_equal_float                   ;dogef
00034DAA <AmiBlitz3.ab3@25884>   Dc.l do_greater_equal_long                    ;dogel
00034DAE <AmiBlitz3.ab3@25885>   Dc.l do_greater_equal_string                  ;doges
00034DB0 <AmiBlitz3.ab3@25886>   Dc.b $07,$D0                                  ;2000
00034DB2 <AmiBlitz3.ab3@25888>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034DB6 <AmiBlitz3.ab3@25889>   Dc.l _BitTst
00034DBA <AmiBlitz3.ab3@25890>   Dc.l _BitTst
00034DBE <AmiBlitz3.ab3@25891>   Dc.l _BitTst
00034DC2 <AmiBlitz3.ab3@25892>   Dc.l _BitTst
00034DCE <AmiBlitz3.ab3@25893>   Ds.l 3
00034DD0 <AmiBlitz3.ab3@25894>   Dc.b $1F,$40                                  ;8000
00034DD2 <AmiBlitz3.ab3@25896>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034DD6 <AmiBlitz3.ab3@25897>   Dc.l _BitSet
00034DDA <AmiBlitz3.ab3@25898>   Dc.l _BitSet
00034DDE <AmiBlitz3.ab3@25899>   Dc.l _BitSet
00034DE2 <AmiBlitz3.ab3@25900>   Dc.l _BitSet
00034DEE <AmiBlitz3.ab3@25901>   Ds.l 3
00034DF0 <AmiBlitz3.ab3@25902>   Dc.b $1F,$40                                  ;8000
00034DF2 <AmiBlitz3.ab3@25904>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034DF6 <AmiBlitz3.ab3@25905>   Dc.l _BitClr
00034DFA <AmiBlitz3.ab3@25906>   Dc.l _BitClr
00034DFE <AmiBlitz3.ab3@25907>   Dc.l _BitClr
00034E02 <AmiBlitz3.ab3@25908>   Dc.l _BitClr
00034E0E <AmiBlitz3.ab3@25909>   Ds.l 3
00034E10 <AmiBlitz3.ab3@25910>   Dc.b $1F,$40                                  ;8000
00034E12 <AmiBlitz3.ab3@25912>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034E16 <AmiBlitz3.ab3@25913>   Dc.l _BitChg
00034E1A <AmiBlitz3.ab3@25914>   Dc.l _BitChg
00034E1E <AmiBlitz3.ab3@25915>   Dc.l _BitChg
00034E22 <AmiBlitz3.ab3@25916>   Dc.l _BitChg
00034E2E <AmiBlitz3.ab3@25917>   Ds.l 3
00034E30 <AmiBlitz3.ab3@25918>   Dc.b $1F,$40                                  ;8000
00034E32 <AmiBlitz3.ab3@25920>   Dc.b $00,$00
00034E36 <AmiBlitz3.ab3@25925> modetable:   Dc.l typemode
00034E3A <AmiBlitz3.ab3@25928> newtypebase: Dc.l newtype_byte
00034E42 <AmiBlitz3.ab3@25931>   Dc.l newtype_word,$01                                    
00034E44 <AmiBlitz3.ab3@25932>   Dc.w $0001
00034E48 <AmiBlitz3.ab3@25933>   Dc.b 13,"b",0,0
00034E50 <AmiBlitz3.ab3@25936>   Dc.l newtype_long,$02
00034E52 <AmiBlitz3.ab3@25937>   Dc.w $0002
00034E56 <AmiBlitz3.ab3@25938>   Dc.b 13,"w",0,0
00034E5E <AmiBlitz3.ab3@25941>   Dc.l newtype_quick,$03                                   
00034E60 <AmiBlitz3.ab3@25942>   Dc.w $0004
00034E64 <AmiBlitz3.ab3@25943>   Dc.b 13,"l",0,0
00034E6C <AmiBlitz3.ab3@25946>   Dc.l newtype_float,$04                                   
00034E6E <AmiBlitz3.ab3@25947>   Dc.w $0004
00034E72 <AmiBlitz3.ab3@25948>   Dc.b 13,"q",0,0
00034E7A <AmiBlitz3.ab3@25952>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034E7C <AmiBlitz3.ab3@25953>   Dc.w $0004
00034E80 <AmiBlitz3.ab3@25954>   Dc.b 13,"f",0,0
00034E88 <AmiBlitz3.ab3@25957>   Dc.l newtype_double,$06
00034E8A <AmiBlitz3.ab3@25958>   Dc.w $0004
00034E8E <AmiBlitz3.ab3@25959>   Dc.b 13,"a",0,0
00034E96 <AmiBlitz3.ab3@25962>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034E98 <AmiBlitz3.ab3@25963>   Dc.w $0008
00034E9C <AmiBlitz3.ab3@25964>   Dc.b 13,"d",0,0
00034EA4 <AmiBlitz3.ab3@25968>   Dc.l $0000000,$07                                        ;stringtype
00034EA6 <AmiBlitz3.ab3@25969>   Dc.w $0004
00034EAA <AmiBlitz3.ab3@25970>   Dc.b 13,"s",0,0
00034EB2 <AmiBlitz3.ab3@25973>   Dc.l $00,$00
00034EB4 <AmiBlitz3.ab3@25974>   Dc.w $0000
00034EB8 <AmiBlitz3.ab3@25975>   Dc.b $01,$00,$00,$00
00034F18 <AmiBlitz3.ab3@25978> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034F1A <AmiBlitz3.ab3@25982> dirmode:              Ds.w 1                               ;shows if directmode is on
00034F1E <AmiBlitz3.ab3@25984>                       Ds.l 1                               ;int org source ;intuition!
00034F20 <AmiBlitz3.ab3@25985> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034F24 <AmiBlitz3.ab3@25986> maxsat:               Ds.l 1                               ;data1 info pos
00034F26 <AmiBlitz3.ab3@25987> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034F28 <AmiBlitz3.ab3@25989> maxsused:             Ds.w 1                               ;maximums used in prog
00034F2A <AmiBlitz3.ab3@25993> dark:                 Ds.w 1                               ;dark compile?
00034F2C <AmiBlitz3.ab3@25994> qlab:                 Ds.w 1                               ;quick lab allocate
00034F30 <AmiBlitz3.ab3@25995> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034F32 <AmiBlitz3.ab3@26000> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034F34 <AmiBlitz3.ab3@26001> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034F38 <AmiBlitz3.ab3@26002> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034F3C <AmiBlitz3.ab3@26004> letstart:             Ds.l 1
00034F3E <AmiBlitz3.ab3@26005> dontwrite:            Ds.w 1                               ;nomemleft org source
00034FBE <AmiBlitz3.ab3@26006> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034FC2 <AmiBlitz3.ab3@26008> locdatast:            Ds.l 1
00034FC6 <AmiBlitz3.ab3@26009> firstpend:            Ds.l 1
00034FCA <AmiBlitz3.ab3@26013> data2at:              Ds.l 1
00034FCE <AmiBlitz3.ab3@26014> data2:                Ds.l 1
00034FD2 <AmiBlitz3.ab3@26015> data1start:           Ds.l 1                               ;data1at org source
00034FD6 <AmiBlitz3.ab3@26016> data1:                Ds.l 1                               ;pc for initialized data!
00034FDA <AmiBlitz3.ab3@26017> destbufferstart:      Ds.l 1                               ;pcat org source
00034FDE <AmiBlitz3.ab3@26021> destbufferend:        Ds.l 1                               ;libat org source
00034FE2 <AmiBlitz3.ab3@26022> libend:               Ds.l 1                               ;lib org source
00034FE6 <AmiBlitz3.ab3@26023> allat:                Ds.l 1                               ;highest allocmemd location for code
00034FF0 <AmiBlitz3.ab3@26024> dummyasm:             Dc.w 0,0,0,0,0
00034FF4 <AmiBlitz3.ab3@26025>                       Dc.l 0
00034FF6 <AmiBlitz3.ab3@26026>                       Dc.w 0
00034FFA <AmiBlitz3.ab3@26030> buff1:                Ds.l 1                               ;buffer for text get
00034FFE <AmiBlitz3.ab3@26031> buff2:                Ds.l 1                               ;ditto for dest
00035000 <AmiBlitz3.ab3@26032> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00035002 <AmiBlitz3.ab3@26033> asmtype:              Ds.w 1                               ;0=contains no prog reference
00035004 <AmiBlitz3.ab3@26034> extraword:            Ds.w 1                               ;the extension word for assembler
00035006 <AmiBlitz3.ab3@26035> extraword2:           Ds.w 1                               ;ditto
00035008 <AmiBlitz3.ab3@26036> asmsize:              Ds.w 1
0003500C <AmiBlitz3.ab3@26037> asmbuff:              Ds.l 1
0003500E <AmiBlitz3.ab3@26038> asmlen:               Ds.w 1                               ;first (src) text len
00035010 <AmiBlitz3.ab3@26039> asmlen2:              Ds.w 1                               ;second (dest)
00035014 <AmiBlitz3.ab3@26040> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00035016 <AmiBlitz3.ab3@26043> macnum:               Ds.w 1
0003501A <AmiBlitz3.ab3@26045>                       Dc.l 0                               ;address of next 0 in include fil
0003501E <AmiBlitz3.ab3@26046> titleat:              Ds.l 1                               ;5 longs for compile streaks
00035028 <AmiBlitz3.ab3@26047> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003502A <AmiBlitz3.ab3@26048> connest:              Ds.w 1                               ;conditional nest level
0003502E <AmiBlitz3.ab3@26049> firstconst:           Ds.l 1                               ;first constant (#a)
00035030 <AmiBlitz3.ab3@26050> numarg:               Ds.w 1                               ;number of macro arguements
00035034 <AmiBlitz3.ab3@26051> myoline:              Ds.l 1                               ;macro done yet?
00035038 <AmiBlitz3.ab3@26052> myline:               Ds.l 1                               ;pointer to some memory to create
0003503C <AmiBlitz3.ab3@26055>                       Ds.l 1
0003507C <AmiBlitz3.ab3@26056> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00035080 <AmiBlitz3.ab3@26057> concomsp:             Dc.l concomstack                     ;stack pointer
00035082 <AmiBlitz3.ab3@26058> oldqflag:             Ds.w 1
00035086 <AmiBlitz3.ab3@26061>                       Ds.l 1
00035088 <AmiBlitz3.ab3@26063>                       Ds.w 1
0003508C <AmiBlitz3.ab3@26064> firstfor:             Ds.l 1                               ;first for
0003508E <AmiBlitz3.ab3@26065> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00035090 <AmiBlitz3.ab3@26066> sbgot:                Ds.w 1                               ;flag for string got 2
00035092 <AmiBlitz3.ab3@26067> convsize:             Ds.w 1                               ;usertype org source
00035094 <AmiBlitz3.ab3@26068> userp:                Ds.w 1
00035098 <AmiBlitz3.ab3@26073> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003509A <AmiBlitz3.ab3@26074> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003509C <AmiBlitz3.ab3@26075> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000350A0 <AmiBlitz3.ab3@26077> locloc:               Ds.l 1
000350A2 <AmiBlitz3.ab3@26078> locchar:              Ds.w 1
00035122 <AmiBlitz3.ab3@26079> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00035124 <AmiBlitz3.ab3@26080> commode:              Ds.w 1                               ;in comma mode...
00035128 <AmiBlitz3.ab3@26081> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003512C <AmiBlitz3.ab3@26082> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00035130 <AmiBlitz3.ab3@26083> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00035132 <AmiBlitz3.ab3@26085>                       Ds.w 1                               ;opt reset offset
00035232 <AmiBlitz3.ab3@26087>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00035332 <AmiBlitz3.ab3@26089>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00035334 <AmiBlitz3.ab3@26090> varcodelen:           Ds.w 1                               ;and length
00035336 <AmiBlitz3.ab3@26092>                       Ds.w 1
0003533C <AmiBlitz3.ab3@26093> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035340 <AmiBlitz3.ab3@26097> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00035342 <AmiBlitz3.ab3@26098> memlibstat:           Ds.w 1                               ;status of memory library during
00035344 <AmiBlitz3.ab3@26101>                       Dc.w 0
00035346 <AmiBlitz3.ab3@26103>                       Dc.w 0
00035348 <AmiBlitz3.ab3@26105> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003534C <AmiBlitz3.ab3@26107> currentfunction:      Ds.l 1                               ;thisproc org source
00035350 <AmiBlitz3.ab3@26108> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00035352 <AmiBlitz3.ab3@26109> 
00035354 <AmiBlitz3.ab3@26111> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00035358 <AmiBlitz3.ab3@26112> passstack:            Ds.l 1
0003535C <AmiBlitz3.ab3@26113> zero:                 Ds.l 1                               ;ZERO!
0003535E <AmiBlitz3.ab3@26114> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00035362 <AmiBlitz3.ab3@26116> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00035366 <AmiBlitz3.ab3@26117> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00035368 <AmiBlitz3.ab3@26118> lasta6:               Dc.w $FFFF                           ;-1 org source
0003536A <AmiBlitz3.ab3@26119> instringon:           Ds.w 1                               ;quoteflag org source
0003536E <AmiBlitz3.ab3@26120> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00035372 <AmiBlitz3.ab3@26121> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00035376 <AmiBlitz3.ab3@26122> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003537A <AmiBlitz3.ab3@26123> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003537E <AmiBlitz3.ab3@26124> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00035382 <AmiBlitz3.ab3@26125> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00035384 <AmiBlitz3.ab3@26126> numstatic:            Ds.w 1                               ;number of static structs
00035388 <AmiBlitz3.ab3@26127> staticdata:           Ds.l 1                               ;data1 val for statics
0003538C <AmiBlitz3.ab3@26128> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003538E <AmiBlitz3.ab3@26129> sbasegot:             Ds.w 1                               ;string base got?
00035392 <AmiBlitz3.ab3@26130> litdata1:             Ds.l 1
00035396 <AmiBlitz3.ab3@26134> objlen:               Ds.l 1
0003539A <AmiBlitz3.ab3@26135> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003539E <AmiBlitz3.ab3@26136> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000353A0 <AmiBlitz3.ab3@26138> flagmask:             Ds.w 1                               ;mask for flag of variable when
000353A2 <AmiBlitz3.ab3@26140> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000353A4 <AmiBlitz3.ab3@26141> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000353A8 <AmiBlitz3.ab3@26142> temp1:                Ds.l 1
000353AC <AmiBlitz3.ab3@26143> temp2:                Ds.l 1
000353B0 <AmiBlitz3.ab3@26145> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000353B4 <AmiBlitz3.ab3@26146> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00035428 <AmiBlitz3.ab3@26147> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
0003542C <AmiBlitz3.ab3@26148> fib_Size:             Ds.l 1                               ;namebuff+124 org source
000354AC <AmiBlitz3.ab3@26150> namebuff2:            Ds.b 128
000354B4 <AmiBlitz3.ab3@26151>                       Ds.b 8                               ;for fileinfoblock
000354F4 <AmiBlitz3.ab3@26154> optstuff:             Ds.b 64                              ;temp opt make buffer
000354F6 <AmiBlitz3.ab3@26171>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
000354FA <AmiBlitz3.ab3@26172>   Dc.l xtra_versionnumber                                  ; vers org source
000354FE <AmiBlitz3.ab3@26173>   Dc.l create_iconfile                                     ; create icon for executable
00035502 <AmiBlitz3.ab3@26174>   Ds.l 1
00035504 <AmiBlitz3.ab3@26176>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035508 <AmiBlitz3.ab3@26179>   Dc.l set_use_debugger
0003550C <AmiBlitz3.ab3@26180>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035510 <AmiBlitz3.ab3@26181>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035514 <AmiBlitz3.ab3@26182>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035518 <AmiBlitz3.ab3@26183>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
0003551C <AmiBlitz3.ab3@26184>   Dc.l set_make_smallestcode
00035520 <AmiBlitz3.ab3@26185>   Dc.l set_link_debuginfo
00035524 <AmiBlitz3.ab3@26186>   Dc.l set_autorun
00035528 <AmiBlitz3.ab3@26187>   Dc.l set_interruptcheck
0003552C <AmiBlitz3.ab3@26188>   Dc.l set_assemblercheck
00035530 <AmiBlitz3.ab3@26190>   Dc.l set_overflowcheck
00035534 <AmiBlitz3.ab3@26191>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035538 <AmiBlitz3.ab3@26192>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
0003553C <AmiBlitz3.ab3@26193>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035540 <AmiBlitz3.ab3@26196>   Ds.l 1
00035542 <AmiBlitz3.ab3@26198>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035546 <AmiBlitz3.ab3@26205>   Dc.l objectbuffer
0003554A <AmiBlitz3.ab3@26206>   Dc.l libsbuffer
0003554E <AmiBlitz3.ab3@26207>   Dc.l systembuffer
00035552 <AmiBlitz3.ab3@26208>   Dc.l databuffer
00035556 <AmiBlitz3.ab3@26209>   Dc.l macrobuffer_size
0003555A <AmiBlitz3.ab3@26210>   Dc.l stringbuffer
0003555E <AmiBlitz3.ab3@26213>   Ds.l 1
00035560 <AmiBlitz3.ab3@26217>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035568 <AmiBlitz3.ab3@26218>   Dc.l residents_table,0
0003556A <AmiBlitz3.ab3@26222>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035572 <AmiBlitz3.ab3@26223>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035574 <AmiBlitz3.ab3@26224>   Ds.w 1
00035670 <AmiBlitz3.ab3@26228>   Ds.l 63
0003576C <AmiBlitz3.ab3@26229>   Ds.l 63
00035868 <AmiBlitz3.ab3@26230>   Ds.l 63
0003594A <AmiBlitz3.ab3@26231>   Ds.w 113
0003594C <AmiBlitz3.ab3@26234> comsettings_message:  Ds.w 1                               ;allchg org source
0003594E <AmiBlitz3.ab3@26235> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035954 <AmiBlitz3.ab3@26239>   CLR.b exefilename
00035956 <AmiBlitz3.ab3@26240>   TST.l d0
0003595A <AmiBlitz3.ab3@26241>   BNE read_xtrafile__l10
0003595C <AmiBlitz3.ab3@26242> RTS
00035962 <AmiBlitz3.ab3@26245>   JSR free_residents                                       ;jsr freeres2 org source
00035968 <AmiBlitz3.ab3@26246> 
0003596E <AmiBlitz3.ab3@26247>   LEA ptr_xtradata,A2
00035970 <AmiBlitz3.ab3@26248>   MOVEQ.l #$00,D4
00035972 <AmiBlitz3.ab3@26251>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035976 <AmiBlitz3.ab3@26252>     BEQ.b read_xtrafile__done
00035978 <AmiBlitz3.ab3@26255>     MOVE.l (A2)+,D2
0003597C <AmiBlitz3.ab3@26256>   BEQ.b read_xtrafile__loop
0003597E <AmiBlitz3.ab3@26258>   MOVE.l D4,D3
00035980 <AmiBlitz3.ab3@26259>   MOVE.l D7,D1
00035984 <AmiBlitz3.ab3@26260>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035986 <AmiBlitz3.ab3@26261>   TST.l D0
0003598A <AmiBlitz3.ab3@26262>   BNE.b read_xtrafile__loop2
0003598E <AmiBlitz3.ab3@26263> BRA.w read_xtrafile__done2
00035994 <AmiBlitz3.ab3@26266>   TST.b xtra_versionnumber
00035998 <AmiBlitz3.ab3@26267>    BNE.b read_xtrafile__nover0
000359A0 <AmiBlitz3.ab3@26268>   MOVE.w #$0080,set_autorun                                ;auto run on
000359AA <AmiBlitz3.ab3@26269>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
000359B0 <AmiBlitz3.ab3@26270>   CLR.w set_assemblercheck                                 ;assembler checking off
000359BA <AmiBlitz3.ab3@26271>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
000359BE <AmiBlitz3.ab3@26272> BRA.b read_xtrafile__ver0
000359C0 <AmiBlitz3.ab3@26275>   MOVE.l D7,D1                                             ;load cli arg!
000359C6 <AmiBlitz3.ab3@26276>   MOVE.l #str_cliarguments,D2
000359CC <AmiBlitz3.ab3@26277>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
000359D0 <AmiBlitz3.ab3@26278>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000359D6 <AmiBlitz3.ab3@26279>   MOVE.l #str_cliarguments,A0
000359DC <AmiBlitz3.ab3@26280>   ADDA.l #115,A0
000359E2 <AmiBlitz3.ab3@26281>   MOVE.l #0,(a0) ; terminate it!
000359E4 <AmiBlitz3.ab3@26283>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000359EA <AmiBlitz3.ab3@26284>   MOVE.l #stacksize,D2
000359F0 <AmiBlitz3.ab3@26285>   MOVE.l #4,D3
000359F4 <AmiBlitz3.ab3@26286>   JSR _Read(A6)
000359FE <AmiBlitz3.ab3@26287>   CMP.l ##MIN_STACKSIZE,stacksize
00035A02 <AmiBlitz3.ab3@26288>   BGE 'stackok
00035A0C <AmiBlitz3.ab3@26289>   MOVE.l ##MIN_STACKSIZE,stacksize
00035A0E <AmiBlitz3.ab3@26292>   MOVE.l D7,D1
00035A14 <AmiBlitz3.ab3@26293>   MOVE.l #versioninformation,D2
00035A1A <AmiBlitz3.ab3@26294>   MOVE.l #4,D3
00035A1E <AmiBlitz3.ab3@26295>   JSR _Read(A6)
00035A20 <AmiBlitz3.ab3@26297>   MOVE.l D7,D1
00035A26 <AmiBlitz3.ab3@26298>   MOVE.l #number_of_builds,D2
00035A2C <AmiBlitz3.ab3@26299>   MOVE.l #4,D3
00035A30 <AmiBlitz3.ab3@26300>   JSR _Read(A6)
00035A36 <AmiBlitz3.ab3@26306> 
00035A3C <AmiBlitz3.ab3@26307>   MOVE.l A7,errstack
00035A46 <AmiBlitz3.ab3@26308>   MOVE.l #read_xtrafile__done2,errcont
00035A4E <AmiBlitz3.ab3@26309>   MOVE.w #$FFFF,ezerr
00035A54 <AmiBlitz3.ab3@26312>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035A56 <AmiBlitz3.ab3@26313>     MOVEQ.l #$04,D3
00035A58 <AmiBlitz3.ab3@26314>     MOVE.l D7,D1
00035A5C <AmiBlitz3.ab3@26315>     JSR _Read(A6)
00035A5E <AmiBlitz3.ab3@26316>     TST.l D0
00035A62 <AmiBlitz3.ab3@26317>     BEQ.b read_xtrafile__done2
00035A68 <AmiBlitz3.ab3@26318>     MOVE.w temp1,D1
00035A6A <AmiBlitz3.ab3@26319>     TST.w d1                                               ;new
00035A6E <AmiBlitz3.ab3@26320>     BEQ read_xtrafile__done2                                         ;new
00035A74 <AmiBlitz3.ab3@26321>      JSR AJL_0_6F1A
00035A7A <AmiBlitz3.ab3@26323>     CMP.l #0,a1
00035A7E <AmiBlitz3.ab3@26324>     BEQ read_xtrafile__dloop
00035A82 <AmiBlitz3.ab3@26325>     MOVE.l $12(A1),D0
00035A8A <AmiBlitz3.ab3@26326>     MOVE.w temp1+2,-$4(A1,D0.L)
00035A8E <AmiBlitz3.ab3@26327> BRA.b read_xtrafile__dloop
00035A92 <AmiBlitz3.ab3@26333>   LEA residents_table(PC),A0
00035A94 <AmiBlitz3.ab3@26334>   MOVEQ.l #$07,D0
00035A98 <AmiBlitz3.ab3@26337>     CLR.l $40(A0)
00035A9C <AmiBlitz3.ab3@26338>     LEA ResidentEntryStep(A0),A0   ; $44
00035AA0 <AmiBlitz3.ab3@26339>   DBF D0,read_xtrafile__loop3
00035AA4 <AmiBlitz3.ab3@26341>   MOVEM.l D7/A6,-(A7)
00035AAA <AmiBlitz3.ab3@26342>   JSR init_buffers
00035AB0 <AmiBlitz3.ab3@26343>   JSR reloadresident
00035AB4 <AmiBlitz3.ab3@26344>   MOVEM.l (A7)+,D7/A6
00035AB6 <AmiBlitz3.ab3@26345> RTS
00035ABE <AmiBlitz3.ab3@26349>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035AC4 <AmiBlitz3.ab3@26358>   LEA ptr_xtradata,A2
00035AC6 <AmiBlitz3.ab3@26359>   MOVEQ.l #$00,D4
00035AC8 <AmiBlitz3.ab3@26363>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035ACC <AmiBlitz3.ab3@26364>   BEQ.b write_xtrafile__done
00035ACE <AmiBlitz3.ab3@26367>    MOVE.l (A2)+,D2
00035AD2 <AmiBlitz3.ab3@26368>    BEQ.b write_xtrafile__loop
00035AD4 <AmiBlitz3.ab3@26370>    MOVE.l D4,D3
00035AD6 <AmiBlitz3.ab3@26371>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035ADA <AmiBlitz3.ab3@26372>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035ADE <AmiBlitz3.ab3@26373> BRA.b write_xtrafile__loop2
00035AE0 <AmiBlitz3.ab3@26376>   MOVE.l D7,D1
00035AE6 <AmiBlitz3.ab3@26377>   MOVE.l #str_cliarguments,D2
00035AEC <AmiBlitz3.ab3@26378>   MOVE.l #116,D3
00035AF0 <AmiBlitz3.ab3@26379>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035AF2 <AmiBlitz3.ab3@26381>   MOVE.l D7,D1
00035AF8 <AmiBlitz3.ab3@26382>   MOVE.l #stacksize,D2
00035AFE <AmiBlitz3.ab3@26383>   MOVE.l #4,D3
00035B02 <AmiBlitz3.ab3@26384>   JSR _Write(A6)
00035B04 <AmiBlitz3.ab3@26386>   MOVE.l D7,D1
00035B0A <AmiBlitz3.ab3@26387>   MOVE.l #versioninformation,D2
00035B10 <AmiBlitz3.ab3@26388>   MOVE.l #4,D3
00035B14 <AmiBlitz3.ab3@26389>   JSR _Write(A6)
00035B16 <AmiBlitz3.ab3@26391>   MOVE.l D7,D1
00035B1C <AmiBlitz3.ab3@26392>   MOVE.l #number_of_builds,D2
00035B22 <AmiBlitz3.ab3@26393>   MOVE.l #4,D3
00035B26 <AmiBlitz3.ab3@26394>   JSR _Write(A6)
00035B2C <AmiBlitz3.ab3@26400>   LEA libpointer,A2
00035B2E <AmiBlitz3.ab3@26403>     MOVE.l (A2),D0
00035B32 <AmiBlitz3.ab3@26404>     BEQ.w write_xtrafile__done2
00035B34 <AmiBlitz3.ab3@26405>     MOVEA.l D0,A2
00035B38 <AmiBlitz3.ab3@26406>     MOVE.l $12(A2),D4
00035B3C <AmiBlitz3.ab3@26407>     TST.w -$2(A2,D4.L)
00035B40 <AmiBlitz3.ab3@26408>     BEQ.w write_xtrafile__loop3
00035B44 <AmiBlitz3.ab3@26410>     LEA $4(A2),A0
00035B46 <AmiBlitz3.ab3@26411>     MOVE.l A0,D2
00035B48 <AmiBlitz3.ab3@26412>     MOVEQ.l #$02,D3
00035B4A <AmiBlitz3.ab3@26413>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035B4E <AmiBlitz3.ab3@26414>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B52 <AmiBlitz3.ab3@26416>     LEA -$4(A2,D4.L),A0
00035B54 <AmiBlitz3.ab3@26417>     MOVE.l A0,D2
00035B56 <AmiBlitz3.ab3@26418>     MOVEQ.l #$02,D3
00035B58 <AmiBlitz3.ab3@26419>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035B5C <AmiBlitz3.ab3@26420>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B60 <AmiBlitz3.ab3@26421> BRA.w write_xtrafile__loop3
00035B66 <AmiBlitz3.ab3@26426>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035B68 <AmiBlitz3.ab3@26427>   MOVE.l A2,D2           ; move the address to d2
00035B6E <AmiBlitz3.ab3@26428>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035B70 <AmiBlitz3.ab3@26429>   MOVE.l D7,D1           ; we set the file handle
00035B74 <AmiBlitz3.ab3@26430>   JSR _Write(A6)         ; and we write it.
00035B76 <AmiBlitz3.ab3@26432> RTS
00035B7C <AmiBlitz3.ab3@26437>   LEA optssave,A0                      ; backup address
00035B82 <AmiBlitz3.ab3@26438>   LEA ptr_xtradata,A1                  ; source address
00035B84 <AmiBlitz3.ab3@26441>   MOVE.w (A1)+,D0                                          ;length of data move
00035B88 <AmiBlitz3.ab3@26442>   BEQ.b 'backupdone
00035B8A <AmiBlitz3.ab3@26443>   SUBQ.w #1,D0
00035B8C <AmiBlitz3.ab3@26446>     MOVE.l (A1)+,D1
00035B90 <AmiBlitz3.ab3@26447>     BEQ.b 'backuploop
00035B92 <AmiBlitz3.ab3@26448>     MOVEA.l D1,A2
00035B94 <AmiBlitz3.ab3@26449>     MOVE.w D0,D1
00035B96 <AmiBlitz3.ab3@26452>       MOVE.b (A2)+,(A0)+
00035B9A <AmiBlitz3.ab3@26453>   DBF D1,'backuploop3
00035B9E <AmiBlitz3.ab3@26455> BRA.w 'backuploop2
00035BA4 <AmiBlitz3.ab3@26459>   LEA bufferlist,A1
00035BA6 <AmiBlitz3.ab3@26462>     MOVE.l (A1)+,D2
00035BAA <AmiBlitz3.ab3@26463>     BEQ.b 'loop4done
00035BAC <AmiBlitz3.ab3@26465>     MOVEA.l D2,A0
00035BAE <AmiBlitz3.ab3@26466>     MOVE.l (A0),D2
00035BB0 <AmiBlitz3.ab3@26467>     ADDQ.w #8,A0
00035BB6 <AmiBlitz3.ab3@26468>     JSR makelong
00035BBA <AmiBlitz3.ab3@26469> BRA.b 'loop4
00035BC0 <AmiBlitz3.ab3@26472>   CLR.w state_of_residents                                 ;resident change
00035BC6 <AmiBlitz3.ab3@26473>   CLR.w comsettings_message                                ;alloc change
00035BCC <AmiBlitz3.ab3@26474>   CLR.w maxobject_pos
00035BCE <AmiBlitz3.ab3@26475> RTS   ; new tomsmart1
00035BD4 <AmiBlitz3.ab3@26479>   LEA optssave,A0
00035BDA <AmiBlitz3.ab3@26480>   LEA ptr_xtradata,A1
00035BDC <AmiBlitz3.ab3@26483>   MOVE.w (A1)+,D0
00035BE0 <AmiBlitz3.ab3@26484>   BEQ.b 'restoredone
00035BE2 <AmiBlitz3.ab3@26485>   SUBQ.w #1,D0
00035BE4 <AmiBlitz3.ab3@26488>     MOVE.l (A1)+,D1
00035BE8 <AmiBlitz3.ab3@26489>     BEQ.b 'restoreloop1
00035BEA <AmiBlitz3.ab3@26490>     MOVEA.l D1,A2
00035BEC <AmiBlitz3.ab3@26491>     MOVE.w D0,D1
00035BEE <AmiBlitz3.ab3@26494>       MOVE.b (A0)+,(A2)+
00035BF2 <AmiBlitz3.ab3@26495>   DBF D1,'restoreloop3
00035BF6 <AmiBlitz3.ab3@26497> BRA.b 'restoreloop2
00035BF8 <AmiBlitz3.ab3@26500> RTS
00035BFE <AmiBlitz3.ab3@26504>   JSR free_residents                    ; first free the allready loaded residents
00035C04 <AmiBlitz3.ab3@26505>   JSR Clear_Residents_table             ; second clear the complete resident table
00035C06 <AmiBlitz3.ab3@26506> RTS
00035C0E <AmiBlitz3.ab3@26510>   MOVE.w #$FFFF,state_of_residents
00035C14 <AmiBlitz3.ab3@26511>   MOVE.w state_of_residents,D0
00035C1A <AmiBlitz3.ab3@26512>   JSR reloadresident
00035C1C <AmiBlitz3.ab3@26513> RTS
00035C1E <AmiBlitz3.ab3@26518>   MOVE.l d0,a1
00035C24 <AmiBlitz3.ab3@26519>   MOVEA.l libpointer,A2
00035C28 <AmiBlitz3.ab3@26522>     MOVE.l $12(A2),D0
00035C2C <AmiBlitz3.ab3@26523>     TST.w -$2(A2,D0.L)
00035C30 <AmiBlitz3.ab3@26524>      BEQ.w JL_0_102AAa
00035C32 <AmiBlitz3.ab3@26525>     SUBQ.w #1,D1
00035C36 <AmiBlitz3.ab3@26526>      BPL.w JL_0_102AAa
00035C3A <AmiBlitz3.ab3@26527>     MOVEA.l -$1A(A2,D0.L),A3
00035C3C <AmiBlitz3.ab3@26528>     ADDA.l A2,A3
00035C3E <AmiBlitz3.ab3@26531>       MOVE.b (A3)+,(A1)+
00035C42 <AmiBlitz3.ab3@26532>     BNE.w JL_0_10294a
00035C44 <AmiBlitz3.ab3@26534>     CLR.b -(A1)
00035C48 <AmiBlitz3.ab3@26535>     MOVE.w -$4(A2,D0.L),D0
00035C4E <AmiBlitz3.ab3@26536>     AND.l #$ffff,d0
00035C50 <AmiBlitz3.ab3@26537> RTS
00035C52 <AmiBlitz3.ab3@26540>     MOVEA.l (A2),A2
00035C56 <AmiBlitz3.ab3@26541> BRA.w JL_0_1027Ca
00035C66 <AmiBlitz3.ab3@26546> str_maxobjects_name:   Dc.b "              ",0 : Even
00035C76 <AmiBlitz3.ab3@26547> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035C7A <AmiBlitz3.ab3@26548> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035C7E <AmiBlitz3.ab3@26549>                        Dc.l $00000000
00035C8A <AmiBlitz3.ab3@26550> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035C8E <AmiBlitz3.ab3@26552> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035C92 <AmiBlitz3.ab3@26553>                        Dc.l $00000000
00035C9E <AmiBlitz3.ab3@26554> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035CA2 <AmiBlitz3.ab3@26556> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035CA6 <AmiBlitz3.ab3@26557>                        Dc.l $00000000
00035CB2 <AmiBlitz3.ab3@26558> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035CB6 <AmiBlitz3.ab3@26560> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035CBA <AmiBlitz3.ab3@26561>                        Dc.l $00000000
00035CC6 <AmiBlitz3.ab3@26562> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035CCA <AmiBlitz3.ab3@26564> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035CCE <AmiBlitz3.ab3@26565>                        Dc.l $00000000
00035CDA <AmiBlitz3.ab3@26566> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035CDE <AmiBlitz3.ab3@26568> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035CE2 <AmiBlitz3.ab3@26569>                        Dc.l $00000000
00035CEE <AmiBlitz3.ab3@26570> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035CF0 <AmiBlitz3.ab3@26572> maxobjects_value:      Dc.w $0064
00035CF4 <AmiBlitz3.ab3@26573>                        Dc.l $00000000
00035D00 <AmiBlitz3.ab3@26574> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035D02 <AmiBlitz3.ab3@26576> maxobjects_value2:     Dc.w $0014
00035D04 <AmiBlitz3.ab3@26577>                        Dc.w $0000
00035D10 <AmiBlitz3.ab3@26579> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035D11 <AmiBlitz3.ab3@26583> set_create_iconfile:   Dc.b $00
00035D14 <AmiBlitz3.ab3@26584> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035D16 <AmiBlitz3.ab3@26585>                        Dc.b $00,$01
00035D17 <AmiBlitz3.ab3@26587> set_use_debugger:      Dc.b $00                            ; Flags.w
00035D1A <AmiBlitz3.ab3@26588> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035D1C <AmiBlitz3.ab3@26589>                        Dc.b $00,$01                        ; GadgetType.w
00035D20 <AmiBlitz3.ab3@26590> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D24 <AmiBlitz3.ab3@26591> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D28 <AmiBlitz3.ab3@26592> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D2A <AmiBlitz3.ab3@26593> AL_0_11094:            Ds.w 1
00035D2B <AmiBlitz3.ab3@26595> set_make_smallestcode: Ds.b 1
00035D2E <AmiBlitz3.ab3@26596> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035D30 <AmiBlitz3.ab3@26597>                        Dc.b $00,$01
00035D31 <AmiBlitz3.ab3@26598> set_link_debuginfo:    Ds.b 1
00035D34 <AmiBlitz3.ab3@26599> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035D36 <AmiBlitz3.ab3@26600>                        Dc.b $00,$01
00035F56 <AmiBlitz3.ab3@26605>   Ds.l 136         ;resident files STEP $44 piece 8
00035FD6 <AmiBlitz3.ab3@26610> str_calcexpression:        Ds.l 32
00035FDA <AmiBlitz3.ab3@26611> destbufferend_backup_calc: Ds.l 1
00035FE4 <AmiBlitz3.ab3@26616>   MOVE.l destbufferend,destbufferend_backup_calc
00035FEA <AmiBlitz3.ab3@26617> 
00035FF0 <AmiBlitz3.ab3@26618>   MOVE.l A7,errstack
00035FFA <AmiBlitz3.ab3@26619>   MOVE.l #Calc_Error_Exit,errcont
00036024 <AmiBlitz3.ab3@26626>   !basic         ; get the flage for the conversion form the editor
00036068 <AmiBlitz3.ab3@26627>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000360AC <AmiBlitz3.ab3@26628>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
000360CA <AmiBlitz3.ab3@26629>   !asm
000360D0 <AmiBlitz3.ab3@26631>   LEA str_calcexpression,A0
000360D6 <AmiBlitz3.ab3@26640>   JSR setcvars
000360DC <AmiBlitz3.ab3@26641>   JSR setsvars
000360E2 <AmiBlitz3.ab3@26642>   CLR.w connest
000360E8 <AmiBlitz3.ab3@26643>   LEA str_calcexpression,A5
000360EE <AmiBlitz3.ab3@26644>   JSR AJL_0_BF6E
000360F4 <AmiBlitz3.ab3@26645>   LEA str_calcexpression,A0
000360F6 <AmiBlitz3.ab3@26646>   TST.l D3
000360FA <AmiBlitz3.ab3@26647>    BPL.w JL_0_11AE8
000360FE <AmiBlitz3.ab3@26648>   MOVE.b #$2D,(A0)+
00036100 <AmiBlitz3.ab3@26649>   NEG.l D3
00036108 <AmiBlitz3.ab3@26652>   CMPI.w #$80,CalculatorButtonDecFlag
0003610C <AmiBlitz3.ab3@26653>    BEQ.w JL_0_11B74
0003610E <AmiBlitz3.ab3@26654>   MOVEQ.l #$00,D1
00036116 <AmiBlitz3.ab3@26655>   CMPI.w #$80,CalculatorButtonBinFlag
0003611A <AmiBlitz3.ab3@26656>    BNE.w JL_0_11B36
0003611C <AmiBlitz3.ab3@26657>   MOVEQ.l #$1F,D0
00036120 <AmiBlitz3.ab3@26658>   MOVE.b #$25,(A0)+
00036122 <AmiBlitz3.ab3@26661>       LSL.l #1,D3
00036126 <AmiBlitz3.ab3@26662>        BCC.w JL_0_11B18
0003612A <AmiBlitz3.ab3@26663>       MOVE.b #"1",(A0)+
0003612C <AmiBlitz3.ab3@26664>       MOVEQ.l #-$01,D1
00036130 <AmiBlitz3.ab3@26665>   BRA.w JL_0_11B22
00036132 <AmiBlitz3.ab3@26668>       TST.w D1
00036136 <AmiBlitz3.ab3@26669>       BEQ.w JL_0_11B22
0003613A <AmiBlitz3.ab3@26670>       MOVE.b #"0",(A0)+
0003613E <AmiBlitz3.ab3@26673>  DBF D0,JL_0_11B08
00036140 <AmiBlitz3.ab3@26676>   TST.w D1
00036144 <AmiBlitz3.ab3@26677>   BNE.w JL_0_11B30
00036148 <AmiBlitz3.ab3@26678>   MOVE.b #"0",(A0)+
0003614A <AmiBlitz3.ab3@26681>   CLR.b (A0)
0003614E <AmiBlitz3.ab3@26682> BRA.w JL_0_11B7C
00036150 <AmiBlitz3.ab3@26685>   MOVEQ.l #$07,D0
00036154 <AmiBlitz3.ab3@26686>   MOVE.b #$24,(A0)+
00036156 <AmiBlitz3.ab3@26689>     MOVE.l D3,D2
00036158 <AmiBlitz3.ab3@26690>     SWAP D2
0003615A <AmiBlitz3.ab3@26691>     LSR.w #8,D2
0003615C <AmiBlitz3.ab3@26692>     LSR.w #4,D2
00036160 <AmiBlitz3.ab3@26693>     ADDI.w #$30,D2
00036164 <AmiBlitz3.ab3@26694>     CMP.w #$3A,D2
00036168 <AmiBlitz3.ab3@26695>      BCS.w JL_0_11B52
0003616A <AmiBlitz3.ab3@26696>     ADDQ.w #7,D2
0003616E <AmiBlitz3.ab3@26699>     CMP.w #$30,D2
00036172 <AmiBlitz3.ab3@26700>     BEQ.w JL_0_11B62
00036174 <AmiBlitz3.ab3@26701>     MOVE.b D2,(A0)+
00036176 <AmiBlitz3.ab3@26702>     MOVEQ.l #-$01,D1
0003617A <AmiBlitz3.ab3@26703>   BRA.w JL_0_11B6A
0003617C <AmiBlitz3.ab3@26706>     TST.w D1
00036180 <AmiBlitz3.ab3@26707>      BEQ.w JL_0_11B6A
00036182 <AmiBlitz3.ab3@26708>     MOVE.b D2,(A0)+
00036184 <AmiBlitz3.ab3@26711>     LSL.l #4,D3
00036188 <AmiBlitz3.ab3@26712>  DBF D0,JL_0_11B3C
0003618C <AmiBlitz3.ab3@26714> BRA.w JL_0_11B26
0003618E <AmiBlitz3.ab3@26717>   MOVE.l D3,D2
00036194 <AmiBlitz3.ab3@26718>   JSR makelong
0003619E <AmiBlitz3.ab3@26725>   MOVE.l destbufferend_backup_calc,destbufferend
000361A0 <AmiBlitz3.ab3@26727> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
0003629F <AmiBlitz3.ab3@26731> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000362A0 <AmiBlitz3.ab3@26733> Even
000362A2 <AmiBlitz3.ab3@26747>     MOVE.b (a5)+,d0
000362A6 <AmiBlitz3.ab3@26748>     BEQ 'l2
000362AA <AmiBlitz3.ab3@26749>     CMP.b #$80,d0
000362AE <AmiBlitz3.ab3@26750>     BNE 'l1
000362B0 <AmiBlitz3.ab3@26751>     MOVE.b (a5)+,d0
000362B4 <AmiBlitz3.ab3@26752>     BEQ 'l2
000362B8 <AmiBlitz3.ab3@26753>     CMP.b #$02,d0
000362BC <AmiBlitz3.ab3@26754>   BNE 'l1
000362C0 <AmiBlitz3.ab3@26757>     CMP.b #$20,(a5)+
000362C4 <AmiBlitz3.ab3@26758>   BEQ 'l3
000362C6 <AmiBlitz3.ab3@26759>   SUBQ.l #1,a5
000362C8 <AmiBlitz3.ab3@26760>   TST.b (a5)
000362CC <AmiBlitz3.ab3@26761>   BEQ 'l2
000362D0 <AmiBlitz3.ab3@26762>   CMP.w #$8008,(a5)
000362D4 <AmiBlitz3.ab3@26763>   BEQ 'l4
000362D8 <AmiBlitz3.ab3@26764>   CMP.w #$8009,(a5)
000362DC <AmiBlitz3.ab3@26765>   BEQ 'l4
000362E0 <AmiBlitz3.ab3@26766> BRA 'l1
000362E2 <AmiBlitz3.ab3@26769>   ADDQ.l #2,a5
000362E8 <AmiBlitz3.ab3@26770>   JSR skiprest
000362EA <AmiBlitz3.ab3@26771> RTS
000362F0 <AmiBlitz3.ab3@26774>   JSR nextline
000362F4 <AmiBlitz3.ab3@26775>   BNE 'l1
000362F6 <AmiBlitz3.ab3@26776> RTS
00036320 <AmiBlitz3.ab3@26780>   !basic
0003632A <AmiBlitz3.ab3@26781>   DateFormat 1
00036338 <AmiBlitz3.ab3@26782>   i.l=SystemDate
0003635E <AmiBlitz3.ab3@26783>   a$=Date$ (i)
000363DC <AmiBlitz3.ab3@26784>   a$=Replace$(a$,"/",".")
000363E2 <AmiBlitz3.ab3@26785>   GetD0 &a$
000363E4 <AmiBlitz3.ab3@26786>   MOVEQ #8,d2
000363E6 <AmiBlitz3.ab3@26787>   MOVE.l d0,a0
000363E8 <AmiBlitz3.ab3@26790>     MOVE.b (a0)+,d1
000363EE <AmiBlitz3.ab3@26791>     JSR pokedata1b
000363F2 <AmiBlitz3.ab3@26792>  DBF d2,'l1
000363F4 <AmiBlitz3.ab3@26794>   MOVEQ #0,d0
000363F6 <AmiBlitz3.ab3@26795>   MOVE.b (a0)+,d0
00036414 <AmiBlitz3.ab3@26796>   !asm
0003641A <AmiBlitz3.ab3@26797>   ADD.l #9,d2
00036420 <AmiBlitz3.ab3@26798>   ADD.l #9,a5
00036422 <AmiBlitz3.ab3@26799> RTS
0003644C <AmiBlitz3.ab3@26803>   !basic
00036456 <AmiBlitz3.ab3@26804>   DateFormat 0
00036464 <AmiBlitz3.ab3@26805>   i.l=SystemDate
0003648A <AmiBlitz3.ab3@26806>   a$=Date$ (i)
00036508 <AmiBlitz3.ab3@26807>   a$=Replace$(a$,"/",".")
0003650E <AmiBlitz3.ab3@26808>   GetD0 &a$
00036510 <AmiBlitz3.ab3@26809>   MOVEQ #8,d2
00036512 <AmiBlitz3.ab3@26810>   MOVE.l d0,a0
00036514 <AmiBlitz3.ab3@26813>     MOVE.b (a0)+,d1
0003651A <AmiBlitz3.ab3@26814>     JSR pokedata1b
0003651E <AmiBlitz3.ab3@26815>  DBF d2,'l1
00036520 <AmiBlitz3.ab3@26817>   MOVEQ #0,d0
00036522 <AmiBlitz3.ab3@26818>   MOVE.b (a0)+,d0
00036540 <AmiBlitz3.ab3@26819>   !asm
00036546 <AmiBlitz3.ab3@26820>   ADD.l #9,d2
0003654C <AmiBlitz3.ab3@26821>   ADD.l #13,a5
0003654E <AmiBlitz3.ab3@26822> RTS
00036578 <AmiBlitz3.ab3@26826>   !basic
00036582 <AmiBlitz3.ab3@26827>   DateFormat 1
00036590 <AmiBlitz3.ab3@26828>   i.l = SystemDate
000365B6 <AmiBlitz3.ab3@26829>   a$ = Date$ (i)
00036634 <AmiBlitz3.ab3@26830>   a$ = Replace$(a$,"/",".")
0003663A <AmiBlitz3.ab3@26831>   GetD0 &a$
0003663C <AmiBlitz3.ab3@26832>   MOVEQ #8,d2
0003663E <AmiBlitz3.ab3@26833>   MOVE.l d0,a0
00036640 <AmiBlitz3.ab3@26836>     MOVE.b (a0)+,d1
00036646 <AmiBlitz3.ab3@26837>     JSR writebyte
0003664A <AmiBlitz3.ab3@26838>  DBF d2,'l1
0003664C <AmiBlitz3.ab3@26840>   MOVEQ #0,d0
0003664E <AmiBlitz3.ab3@26841>   MOVE.b (a0)+,d0
0003666C <AmiBlitz3.ab3@26842>   !asm
00036672 <AmiBlitz3.ab3@26843>   ADD.l #9,a5
00036674 <AmiBlitz3.ab3@26844> RTS
0003669E <AmiBlitz3.ab3@26848>   !basic
000366A8 <AmiBlitz3.ab3@26849>   DateFormat 0
000366B6 <AmiBlitz3.ab3@26850>   i.l=SystemDate
000366DC <AmiBlitz3.ab3@26851>   a$=Date$ (i)
0003675A <AmiBlitz3.ab3@26852>   a$=Replace$(a$,"/",".")
00036760 <AmiBlitz3.ab3@26853>   GetD0 &a$
00036762 <AmiBlitz3.ab3@26854>   MOVEQ #8,d2
00036764 <AmiBlitz3.ab3@26855>   MOVE.l d0,a0
00036766 <AmiBlitz3.ab3@26858>     MOVE.b (a0)+,d1
0003676C <AmiBlitz3.ab3@26859>     JSR writebyte
00036770 <AmiBlitz3.ab3@26860>  DBF d2,'l1
00036772 <AmiBlitz3.ab3@26862>   MOVEQ #0,d0
00036774 <AmiBlitz3.ab3@26863>   MOVE.b (a0)+,d0
00036792 <AmiBlitz3.ab3@26864>   !asm
00036798 <AmiBlitz3.ab3@26865>   ADD.l #13,a5
0003679A <AmiBlitz3.ab3@26866> RTS
0003679C <AmiBlitz3.ab3@26870>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003679E <AmiBlitz3.ab3@26871>   MOVE.l a5,d0
000367C8 <AmiBlitz3.ab3@26872>   !basic
000367CC <AmiBlitz3.ab3@26873>   _myD0.l = PutD0
000367D6 <AmiBlitz3.ab3@26874>   If _myD0
0003681C <AmiBlitz3.ab3@26875>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003686E <AmiBlitz3.ab3@26876>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036874 <AmiBlitz3.ab3@26877>   Else
000368AE <AmiBlitz3.ab3@26878>     error{"INTERNAL: Invalid pointer in version_string!"}
000368BE <AmiBlitz3.ab3@26883>   actual_version.l = Peek.l(?versioninformation)
000368CE <AmiBlitz3.ab3@26884>   actual_build.l   = Peek.l(?number_of_builds)
000368F2 <AmiBlitz3.ab3@26886>   Format "00"
00036928 <AmiBlitz3.ab3@26887>   Select verstring$
0003694C <AmiBlitz3.ab3@26889>     Case "VER_MAJOR"
00036988 <AmiBlitz3.ab3@26890>      put_versionstr$ = Str$(actual_version LSR 24)
000369B2 <AmiBlitz3.ab3@26892>     Case "VER_MINOR"
000369F6 <AmiBlitz3.ab3@26893>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036A20 <AmiBlitz3.ab3@26895>     Case "VER_PATCH"
00036A64 <AmiBlitz3.ab3@26896>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036A8E <AmiBlitz3.ab3@26898>     Case "VER_BUILD"
00036AB2 <AmiBlitz3.ab3@26899>      Format ""
00036AE6 <AmiBlitz3.ab3@26900>      put_versionstr$ = Str$(actual_build)
00036AEC <AmiBlitz3.ab3@26902>     Default
00036B14 <AmiBlitz3.ab3@26903>      put_versionstr$ = "{unknown compilerconstant}"
00036B22 <AmiBlitz3.ab3@26906>   End Select
00036B46 <AmiBlitz3.ab3@26907>   Format ""
00036B56 <AmiBlitz3.ab3@26909>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036B58 <AmiBlitz3.ab3@26910>   MOVE.l d0,d2
00036B5A <AmiBlitz3.ab3@26911>   MOVE.l d2,-(a7)
00036B5E <AmiBlitz3.ab3@26912>   SUB #1,d2
00036B64 <AmiBlitz3.ab3@26914>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036B66 <AmiBlitz3.ab3@26915>   MOVE.l d0,a0
00036B68 <AmiBlitz3.ab3@26918>     MOVE.b (a0)+,d1
00036B6E <AmiBlitz3.ab3@26919>     JSR pokedata1b
00036B72 <AmiBlitz3.ab3@26920>  DBF d2,'l1
00036B74 <AmiBlitz3.ab3@26922>   MOVEQ #0,d0
00036B92 <AmiBlitz3.ab3@26923>   !asm
00036B94 <AmiBlitz3.ab3@26924>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036B96 <AmiBlitz3.ab3@26925>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036B98 <AmiBlitz3.ab3@26926>   ADD.l d0,d2
00036B9E <AmiBlitz3.ab3@26927>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036BA0 <AmiBlitz3.ab3@26928>   MOVEQ #0,d0
00036BA2 <AmiBlitz3.ab3@26929> RTS
00036BA4 <AmiBlitz3.ab3@26933>   MOVE.l a5,d0
00036BCE <AmiBlitz3.ab3@26934>   !basic
00036BD2 <AmiBlitz3.ab3@26935>   _myD0.l = PutD0
00036BDC <AmiBlitz3.ab3@26936>   If _myD0
00036C22 <AmiBlitz3.ab3@26937>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036C74 <AmiBlitz3.ab3@26938>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036C7A <AmiBlitz3.ab3@26939>   Else
00036CB4 <AmiBlitz3.ab3@26940>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036CC4 <AmiBlitz3.ab3@26945>   actual_version.l = Peek.l(?versioninformation)
00036CD4 <AmiBlitz3.ab3@26946>   actual_build.l   = Peek.l(?number_of_builds)
00036CF8 <AmiBlitz3.ab3@26948>   Format ""
00036D2E <AmiBlitz3.ab3@26949>   Select verstring$
00036D52 <AmiBlitz3.ab3@26951>     Case "VER_MAJOR"
00036D8E <AmiBlitz3.ab3@26952>      put_versionstr$ = Str$(actual_version LSR 24)
00036DB8 <AmiBlitz3.ab3@26954>     Case "VER_MINOR"
00036DFC <AmiBlitz3.ab3@26955>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036E26 <AmiBlitz3.ab3@26957>     Case "VER_PATCH"
00036E6A <AmiBlitz3.ab3@26958>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036E94 <AmiBlitz3.ab3@26960>     Case "VER_BUILD"
00036EB8 <AmiBlitz3.ab3@26961>      Format ""
00036EEC <AmiBlitz3.ab3@26962>      put_versionstr$ = Str$(actual_build)
00036EF2 <AmiBlitz3.ab3@26964>     Default
00036F1A <AmiBlitz3.ab3@26965>      put_versionstr$ = "{unknown compilerconstant}"
00036F28 <AmiBlitz3.ab3@26967>   End Select
00036F4C <AmiBlitz3.ab3@26968>   Format ""
00036F62 <AmiBlitz3.ab3@26970>   GetD0 FLen(put_versionstr$)-1
00036F64 <AmiBlitz3.ab3@26971>   MOVE.l d0,d2
00036F6A <AmiBlitz3.ab3@26973>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036F6C <AmiBlitz3.ab3@26974>   MOVE.l d0,a0
00036F6E <AmiBlitz3.ab3@26977>     MOVE.b (a0)+,d1
00036F74 <AmiBlitz3.ab3@26978>     JSR writebyte
00036F78 <AmiBlitz3.ab3@26979>  DBF d2,'l1
00036F7A <AmiBlitz3.ab3@26981>   MOVEQ #0,d0
00036F7C <AmiBlitz3.ab3@26982>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036F9A <AmiBlitz3.ab3@26983>   !asm
00036FA0 <AmiBlitz3.ab3@26984>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036FA2 <AmiBlitz3.ab3@26985> RTS
00036FA4 <AmiBlitz3.ab3@27087>  MOVE.l a5,-(a7)
00036FD0 <AmiBlitz3.ab3@27088>  !fget
00036FD4 <AmiBlitz3.ab3@27089>  CMP.w #".",d0
00036FD8 <AmiBlitz3.ab3@27090>  BNE 'skip
00036FDC <AmiBlitz3.ab3@27091>  MOVEM.l a2/d2,-(a7)
00036FE2 <AmiBlitz3.ab3@27092>  LEA newtypebase,a2
00036FE8 <AmiBlitz3.ab3@27093>  JSR getparameter2
00036FEC <AmiBlitz3.ab3@27094>  BEQ.w JUMP_syntaxerr
00036FF2 <AmiBlitz3.ab3@27095>  JSR findtype
00036FF6 <AmiBlitz3.ab3@27096>  BNE.w JUMP_notypeerr
00036FFC <AmiBlitz3.ab3@27097>  MOVE.l a2,typetocast
00037000 <AmiBlitz3.ab3@27098>  MOVEM.l (a7)+,a2/d2
00037004 <AmiBlitz3.ab3@27099>  CMP.w #")",d0
00037008 <AmiBlitz3.ab3@27100>  BNE JUMP_errorbracketmiss
0003700A <AmiBlitz3.ab3@27101>  ADDQ.l #4,a7
00037036 <AmiBlitz3.ab3@27102>  !fget
0003703C <AmiBlitz3.ab3@27103>  JMP nocast
0003703E <AmiBlitz3.ab3@27105> 'skip MOVE.l (a7)+,a5
00037044 <AmiBlitz3.ab3@27106>  JMP JL_0_A410
0003704A <AmiBlitz3.ab3@27108> JUMP_errorbracketmiss JMP errorbracketmiss
00037074 <AmiBlitz3.ab3@27110> Function.l ab3_GetIncludeLock{filename.s}
00037094 <AmiBlitz3.ab3@27111>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000370EC <AmiBlitz3.ab3@27112>   ex.s       = dos_GetExt{filename}
00037100 <AmiBlitz3.ab3@27114>   If incLock = False
00037174 <AmiBlitz3.ab3@27115>     filename = dos_SetExt{filename,"ab3"}
00037194 <AmiBlitz3.ab3@27116>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000371A8 <AmiBlitz3.ab3@27119>   If incLock = False
0003721C <AmiBlitz3.ab3@27120>     filename = dos_SetExt{filename,"ab2"}
0003723C <AmiBlitz3.ab3@27121>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00037250 <AmiBlitz3.ab3@27124>   If incLock = False
000372C4 <AmiBlitz3.ab3@27125>     filename = dos_SetExt{filename,"bb2"}
000372E4 <AmiBlitz3.ab3@27126>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000372F8 <AmiBlitz3.ab3@27129>   If incLock = False
0003738A <AmiBlitz3.ab3@27130>     filename = dos_SetExt{filename,ex+".ab3"}
000373AA <AmiBlitz3.ab3@27131>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000373BE <AmiBlitz3.ab3@27134>   If incLock = False
00037432 <AmiBlitz3.ab3@27135>     filename = dos_SetExt{filename,"ab2"}
00037452 <AmiBlitz3.ab3@27136>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00037466 <AmiBlitz3.ab3@27139>   If incLock = False
000374DA <AmiBlitz3.ab3@27140>     filename = dos_SetExt{filename,"bb2"}
000374FA <AmiBlitz3.ab3@27141>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037504 <AmiBlitz3.ab3@27144>  Function Return incLock
0003751E <AmiBlitz3.ab3@27145> End Function
00037548 <AmiBlitz3.ab3@27149>   !basic
00037572 <AmiBlitz3.ab3@27150>   incString.s = Peek$(?ptr_parameterstore)
000375A0 <AmiBlitz3.ab3@27152>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000375A4 <AmiBlitz3.ab3@27153>   incDirP.l   = PutD0                                       ;    "
000375CC <AmiBlitz3.ab3@27154>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003764C <AmiBlitz3.ab3@27155>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003767E <AmiBlitz3.ab3@27156>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037692 <AmiBlitz3.ab3@27158>   If incLock = False ; not found => check default Include Directory
000376A2 <AmiBlitz3.ab3@27159>     incDirP.l = Peek.l(?incd)
000376AC <AmiBlitz3.ab3@27160>     If incDirP
000376D4 <AmiBlitz3.ab3@27161>       incDir_.s = Peek.s(incDirP)
000376DA <AmiBlitz3.ab3@27162>     Else
00037744 <AmiBlitz3.ab3@27163>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
000377C4 <AmiBlitz3.ab3@27165>     incFile.s = dos_AddPart{incDir_,incString}
000377F6 <AmiBlitz3.ab3@27166>     incLock.l = ab3_GetIncludeLock{incFile}
0003780A <AmiBlitz3.ab3@27169>   If incLock = False ; not found => check relative to current source
00037822 <AmiBlitz3.ab3@27170>     incDepth.l = Peek.w(?ininclude)-1
00037848 <AmiBlitz3.ab3@27171>     If incDepth >= 0 AND incDepth < #maxincludes
000378A8 <AmiBlitz3.ab3@27172>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037928 <AmiBlitz3.ab3@27173>       incFile.s = dos_AddPart{incDir_,incString}
0003795A <AmiBlitz3.ab3@27174>       incLock.l = ab3_GetIncludeLock{incFile}
0003796E <AmiBlitz3.ab3@27178>   If incLock = False ; still not found => check default Include Directory and name only
0003797E <AmiBlitz3.ab3@27179>     incDirP.l = Peek.l(?incd)
00037988 <AmiBlitz3.ab3@27180>     If incDirP
000379B0 <AmiBlitz3.ab3@27181>       incDir_.s = Peek.s(incDirP)
000379B6 <AmiBlitz3.ab3@27182>     Else
00037A20 <AmiBlitz3.ab3@27183>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037ACE <AmiBlitz3.ab3@27185>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037B00 <AmiBlitz3.ab3@27186>     incLock.l = ab3_GetIncludeLock{incFile}
00037B0A <AmiBlitz3.ab3@27189>   If incLock
00037B20 <AmiBlitz3.ab3@27190>     MaxLen incFile = 1024
00037B44 <AmiBlitz3.ab3@27191>     NameFromLock_ incLock,&incFile,1024
00037B6E <AmiBlitz3.ab3@27192>     incFile = Peek.s(&incFile)
00037BA6 <AmiBlitz3.ab3@27193>     Poke$ ?ptr_parameterstore,incFile
00037BBA <AmiBlitz3.ab3@27194>     i = FLen(incFile)
00037BC6 <AmiBlitz3.ab3@27195>     GetReg d0,i
00037BCC <AmiBlitz3.ab3@27196>     MOVE.l d0,tempstore
00037BDC <AmiBlitz3.ab3@27197>     UnLock_ incLock
00037BFA <AmiBlitz3.ab3@27200>   !asm
00037C00 <AmiBlitz3.ab3@27201>   TST.l tempstore
00037C04 <AmiBlitz3.ab3@27202>    BEQ 'l1
00037C0A <AmiBlitz3.ab3@27203>   MOVE.l tempstore,d2
00037C0C <AmiBlitz3.ab3@27206> RTS
00037C36 <AmiBlitz3.ab3@27210>   !basic
00037C60 <AmiBlitz3.ab3@27211>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037C8E <AmiBlitz3.ab3@27212>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037C92 <AmiBlitz3.ab3@27213>   incDirP.l   = PutD0                                       ;    "
00037CBA <AmiBlitz3.ab3@27214>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037D3A <AmiBlitz3.ab3@27215>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037D5A <AmiBlitz3.ab3@27216>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037D6E <AmiBlitz3.ab3@27218>   If incLock = False                                        ; not found => try orignal string only to find
00037D8E <AmiBlitz3.ab3@27219>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037D98 <AmiBlitz3.ab3@27222>   If incLock                                                ; found => store full path
00037DAE <AmiBlitz3.ab3@27223>     MaxLen incFile = 1024
00037DD2 <AmiBlitz3.ab3@27224>     NameFromLock_ incLock,&incFile,1024
00037DFC <AmiBlitz3.ab3@27225>     incFile = Peek.s(&incFile)
00037E34 <AmiBlitz3.ab3@27226>     Poke$ ?ptr_parameterstore,incFile
00037E40 <AmiBlitz3.ab3@27229> 
00037E5E <AmiBlitz3.ab3@27230>   !asm
00037E60 <AmiBlitz3.ab3@27231> RTS
00037E66 <AmiBlitz3.ab3@27242>   JSR Aclearallvars
00037E6C <AmiBlitz3.ab3@27243>   JSR free_unusedfunctions
00037E76 <AmiBlitz3.ab3@27258>   MOVE.l #"NORE",reqmode
00037E7C <AmiBlitz3.ab3@27259> JSR handle_compileerror
00037E7E <AmiBlitz3.ab3@27262>   MOVE.l d0,-(a7)
00037E80 <AmiBlitz3.ab3@27263>   MOVE.l a5,d0
00037E8A <AmiBlitz3.ab3@27264>   !basica7
00037E8E <AmiBlitz3.ab3@27265>   i.l = PutD0
00037E98 <AmiBlitz3.ab3@27266>   If i
00037EC0 <AmiBlitz3.ab3@27267>     a$ = Peek$(i)
00037EF2 <AmiBlitz3.ab3@27268>     b$ = Peeks$(i-7,7)
0003802A <AmiBlitz3.ab3@27270> 
00038030 <AmiBlitz3.ab3@27271>     MOVE.l d0,result
00038034 <AmiBlitz3.ab3@27273>   !asma7
00038036 <AmiBlitz3.ab3@27274>   MOVE.l (a7)+,d0
00038038 <AmiBlitz3.ab3@27275> RTS
00038062 <AmiBlitz3.ab3@27279>   !basic
00038090 <AmiBlitz3.ab3@27280>   !ComData_LEA{comStr_CurrentDir,D0}
00038094 <AmiBlitz3.ab3@27281>   currentDirP.l = PutD0
000380C2 <AmiBlitz3.ab3@27283>   !ComData_LEA{comStr_SourceName,D0}
000380C6 <AmiBlitz3.ab3@27284>   fileNameP.l = PutD0
000380EE <AmiBlitz3.ab3@27286>   check_dirname$  = Peek$(currentDirP)
00038116 <AmiBlitz3.ab3@27287>   check_filename$ = Peek$(fileNameP)
0003819C <AmiBlitz3.ab3@27288>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000381A2 <AmiBlitz3.ab3@27289>     JSR free_unusedfunctions
000381EC <AmiBlitz3.ab3@27291>   olddirname$ = Peek$(check_dirname$)
00038236 <AmiBlitz3.ab3@27292>   oldfilename$ = Peek$(check_filename$)
00038260 <AmiBlitz3.ab3@27293>   For i = 0 To #maxincludes-1
00038274 <AmiBlitz3.ab3@27294>     incline(i) = 0
00038284 <AmiBlitz3.ab3@27295>   Next
000382A2 <AmiBlitz3.ab3@27296>   !asm
000382A4 <AmiBlitz3.ab3@27297> RTS
000382A6 <AmiBlitz3.ab3@27301>   MOVEQ #0,d1
000382A8 <AmiBlitz3.ab3@27304>   MOVE.b (a5)+,d0
000382AC <AmiBlitz3.ab3@27305>   BEQ 'er1
000382B0 <AmiBlitz3.ab3@27306>   CMP.b #$20,d0
000382B4 <AmiBlitz3.ab3@27307>   BEQ 'l1
000382B6 <AmiBlitz3.ab3@27308>   ADDQ #1,d1
000382BA <AmiBlitz3.ab3@27309>   CMP.b #$22,d0
000382BE <AmiBlitz3.ab3@27310>   BNE 'l1
000382C0 <AmiBlitz3.ab3@27311> RTS
000382C6 <AmiBlitz3.ab3@27314> JMP syntaxerr
000382EA <AmiBlitz3.ab3@27325> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00038308 <AmiBlitz3.ab3@27326> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003830E <AmiBlitz3.ab3@27331>   TST.b exdebug
00038312 <AmiBlitz3.ab3@27332>   BNE 'l10
00038318 <AmiBlitz3.ab3@27333>   MOVE.l #$4e71,d1
0003831E <AmiBlitz3.ab3@27334>   JSR writeword
00038324 <AmiBlitz3.ab3@27335>   MOVE.l destpointer,d0
00038326 <AmiBlitz3.ab3@27336>   MOVE.l d0,d1
00038328 <AmiBlitz3.ab3@27337>   ADDQ.l #3,d1
0003832E <AmiBlitz3.ab3@27338>   AND.l #$fffffffc,d1
00038334 <AmiBlitz3.ab3@27339>   MOVE.l d1,destpointer
0003833A <AmiBlitz3.ab3@27340>   SUB.l destpointer,d0
0003833E <AmiBlitz3.ab3@27341>   BEQ 'lnf1
00038348 <AmiBlitz3.ab3@27342>   CMP.l #-1,bssstart
0003834C <AmiBlitz3.ab3@27343>   BNE 'lnf1
00038356 <AmiBlitz3.ab3@27344>   CMP.l #-1,chipstart
0003835A <AmiBlitz3.ab3@27345>   BNE 'lnf1
00038360 <AmiBlitz3.ab3@27346>   MOVE.l destpointer,a4
00038366 <AmiBlitz3.ab3@27347>   TST.w dontwrite
0003836A <AmiBlitz3.ab3@27348>   BNE 'lnf1
00038370 <AmiBlitz3.ab3@27349>   MOVE.w #$4e71,-2(a4)
0003837A <AmiBlitz3.ab3@27352>   CMP.l #-1,bssstart
0003837E <AmiBlitz3.ab3@27353>   BEQ 'l11
00038384 <AmiBlitz3.ab3@27354>   MOVE.l #erro1t,-(a7)
0003838A <AmiBlitz3.ab3@27355> JMP handle_compileerror
00038394 <AmiBlitz3.ab3@27358>   MOVE.l destpointer,bssstart
0003839C <AmiBlitz3.ab3@27359>   MOVE.b #1,bssmode
000383A2 <AmiBlitz3.ab3@27362>   TST.b chipmode
000383A6 <AmiBlitz3.ab3@27363>   BEQ 'l10
000383B0 <AmiBlitz3.ab3@27364>   MOVE.l destpointer,chipend
000383B6 <AmiBlitz3.ab3@27365>   CLR.b chipmode
000383BC <AmiBlitz3.ab3@27368>   JSR get1bytemain
000383BE <AmiBlitz3.ab3@27369> RTS
000383C4 <AmiBlitz3.ab3@27373>    TST.b exdebug
000383C8 <AmiBlitz3.ab3@27374>   BNE 'x1
000383CE <AmiBlitz3.ab3@27375>   MOVE.l destpointer,d0
000383D4 <AmiBlitz3.ab3@27376>   MOVE.l d0,realbssend
000383DA <AmiBlitz3.ab3@27377>   MOVE.l #$4e71,d1
000383E0 <AmiBlitz3.ab3@27378>   JSR writeword
000383E6 <AmiBlitz3.ab3@27379>   MOVE.l destpointer,d0
000383E8 <AmiBlitz3.ab3@27380>   MOVE.l d0,d1
000383EA <AmiBlitz3.ab3@27381>   ADDQ.l #3,d1
000383F0 <AmiBlitz3.ab3@27382>   AND.l #$fffffffc,d1
000383F6 <AmiBlitz3.ab3@27383>   MOVE.l d1,destpointer
000383FC <AmiBlitz3.ab3@27384>   SUB.l destpointer,d0
00038400 <AmiBlitz3.ab3@27385>   BEQ 'lnf1
00038406 <AmiBlitz3.ab3@27386>   MOVE.l destpointer,a4
00038410 <AmiBlitz3.ab3@27387>   CMP.l #-1,bssstart
00038414 <AmiBlitz3.ab3@27388>   BNE 'lnf1
0003841E <AmiBlitz3.ab3@27389>   CMP.l #-1,chipstart
00038422 <AmiBlitz3.ab3@27390>   BNE 'lnf1
00038428 <AmiBlitz3.ab3@27391>   TST.w dontwrite
0003842C <AmiBlitz3.ab3@27392>   BNE 'lnf1
00038432 <AmiBlitz3.ab3@27393>   MOVE.w #$4e71,-2(a4)
00038438 <AmiBlitz3.ab3@27396>   TST.b bssmode
0003843C <AmiBlitz3.ab3@27397>   BEQ 'l10
00038446 <AmiBlitz3.ab3@27398>   MOVE.l destpointer,bssend
0003844C <AmiBlitz3.ab3@27399>   CLR.b bssmode
00038456 <AmiBlitz3.ab3@27404>   CMP.l #-1,chipstart
0003845A <AmiBlitz3.ab3@27405>   BEQ 'l11
00038460 <AmiBlitz3.ab3@27406>   MOVE.l #erro1t,-(a7)
00038466 <AmiBlitz3.ab3@27407> JMP handle_compileerror
00038470 <AmiBlitz3.ab3@27410>   MOVE.l destpointer,chipstart
00038478 <AmiBlitz3.ab3@27411>   MOVE.b #1,chipmode
0003847E <AmiBlitz3.ab3@27414>   JSR get1bytemain
00038480 <AmiBlitz3.ab3@27415> RTS
000384AA <AmiBlitz3.ab3@27419>   !basic
000384BC <AmiBlitz3.ab3@27429>   i.l = Peek.w(?ininclude)
000384E2 <AmiBlitz3.ab3@27430>   If i>=0 AND i<#maxincludes
00038514 <AmiBlitz3.ab3@27431>     incdim (i) = Peek.s(?includetemp2)
0003852E <AmiBlitz3.ab3@27432>     incline(i) = Peek.l(?includeline)
00038538 <AmiBlitz3.ab3@27434>     If CLIMode
000385E6 <AmiBlitz3.ab3@27435>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038604 <AmiBlitz3.ab3@27439>   !asm
00038606 <AmiBlitz3.ab3@27440> RTS
00038630 <AmiBlitz3.ab3@27444>   !basic
00038642 <AmiBlitz3.ab3@27445>   i.l = Peek.w(?ininclude)
00038668 <AmiBlitz3.ab3@27446>   If i>=0 AND i<#maxincludes
00038698 <AmiBlitz3.ab3@27447>     incdim (i) = ""
000386AC <AmiBlitz3.ab3@27448>     incline(i) = 0
000386E4 <AmiBlitz3.ab3@27449>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038702 <AmiBlitz3.ab3@27451>   !asm
00038704 <AmiBlitz3.ab3@27452> RTS
0003870A <AmiBlitz3.ab3@27456>   LEA replacedat,a0
0003870E <AmiBlitz3.ab3@27457>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038710 <AmiBlitz3.ab3@27458> RTS
00038716 <AmiBlitz3.ab3@27462>   TST.b fpu
0003871A <AmiBlitz3.ab3@27463>   BEQ 'l1
00038724 <AmiBlitz3.ab3@27466>   MOVE.l destpointer,newinitaddr
0003872A <AmiBlitz3.ab3@27467>   JSR writeword
00038730 <AmiBlitz3.ab3@27468>   JSR writelong
00038732 <AmiBlitz3.ab3@27469> RTS
00038734 <AmiBlitz3.ab3@27474>   TST.b (a5)
00038738 <AmiBlitz3.ab3@27475>    BEQ.s 'll20
0003873C <AmiBlitz3.ab3@27476>   CMP.b #$20,(a5)
00038740 <AmiBlitz3.ab3@27477>    BNE.s 'll10
00038742 <AmiBlitz3.ab3@27478>   ADDQ.l #1,a5
00038746 <AmiBlitz3.ab3@27479> BRA.s 'll21
0003874A <AmiBlitz3.ab3@27482>   CMP.b #";",(a5)
0003874E <AmiBlitz3.ab3@27483>   BNE.s 'll20
00038750 <AmiBlitz3.ab3@27486>   TST.b (a5)+
00038754 <AmiBlitz3.ab3@27487>   BEQ.s 'll23
00038758 <AmiBlitz3.ab3@27488> BRA.s 'll25
0003875A <AmiBlitz3.ab3@27491>   SUBQ.l #1,a5
0003875C <AmiBlitz3.ab3@27494> RTS
00038760 <AmiBlitz3.ab3@27498>   MOVEM.l a2/d2,-(a7)
00038762 <AmiBlitz3.ab3@27499>   MOVEQ #0,d2
00038768 <AmiBlitz3.ab3@27500>   LEA ptr_parameterstore,a0
0003876E <AmiBlitz3.ab3@27501>   LEA chartab,a2
00038770 <AmiBlitz3.ab3@27504>   MOVE.b (a5),d0
00038774 <AmiBlitz3.ab3@27505>   TST.b 0(a2,d0)
00038778 <AmiBlitz3.ab3@27506>   BNE 'l10
0003877A <AmiBlitz3.ab3@27507>   ADDQ.l #1,a5
0003877C <AmiBlitz3.ab3@27508>   MOVE.b d0,(a0)+
0003877E <AmiBlitz3.ab3@27509>   ADDQ.l #1,d2
00038782 <AmiBlitz3.ab3@27510> BRA fc2
00038784 <AmiBlitz3.ab3@27513>   CLR.b (a0)+
0003878A <AmiBlitz3.ab3@27514>   JSR findlabel2
0003878C <AmiBlitz3.ab3@27515>   MOVE.l a2,a0
00038790 <AmiBlitz3.ab3@27516>   MOVEM.l (a7)+,a2/d2
00038792 <AmiBlitz3.ab3@27517> RTS
00038794 <AmiBlitz3.ab3@27521>   TST.l d0
00038798 <AmiBlitz3.ab3@27522>   BNE 'l10
0003879E <AmiBlitz3.ab3@27523>     MOVE.l #syntax_,-(a7)
000387A4 <AmiBlitz3.ab3@27524> JMP handle_compileerror
000387AA <AmiBlitz3.ab3@27527>   CMP.l #1,d0
000387AE <AmiBlitz3.ab3@27528>   BNE 'l20
000387B4 <AmiBlitz3.ab3@27529>     MOVE.l #overflow,-(a7)
000387BA <AmiBlitz3.ab3@27530> JMP handle_compileerror
000387BC <AmiBlitz3.ab3@27533>   ADD.l a2,d0
000387BE <AmiBlitz3.ab3@27534>   MOVE.l d0,-(a7)
000387C4 <AmiBlitz3.ab3@27535> JMP handle_compileerror
000387CA <AmiBlitz3.ab3@27539>   JMP _return
000387D0 <AmiBlitz3.ab3@27540>   JMP _return
000387D6 <AmiBlitz3.ab3@27541>   JMP _return
000387DC <AmiBlitz3.ab3@27542>   JMP _return
000387E2 <AmiBlitz3.ab3@27543>   JMP _return
000387E8 <AmiBlitz3.ab3@27544>   JMP _return
000387EE <AmiBlitz3.ab3@27545>   JMP _return
000387F4 <AmiBlitz3.ab3@27546>   JMP _return
000387FA <AmiBlitz3.ab3@27547>   JMP _return
00038800 <AmiBlitz3.ab3@27548>   JMP _return
00038806 <AmiBlitz3.ab3@27549>   JMP Atokejsr
0003880C <AmiBlitz3.ab3@27550>   JMP writeinit
00038812 <AmiBlitz3.ab3@27551>   JMP macroexecute
00038818 <AmiBlitz3.ab3@27552>   JMP findnext
0003881E <AmiBlitz3.ab3@27553>   JMP replacelib
00038824 <AmiBlitz3.ab3@27554>   JMP findconstant2
0003882A <AmiBlitz3.ab3@27555>   JMP findchar                                             ;char in d1
00038830 <AmiBlitz3.ab3@27556>   JMP stripspaces
00038836 <AmiBlitz3.ab3@27557>   JMP calc                                                 ;d0 varmode
0003883C <AmiBlitz3.ab3@27558>   JMP error
00038842 <AmiBlitz3.ab3@27559>   JMP writelong                                            ;d1 value
00038848 <AmiBlitz3.ab3@27560>   JMP writeword                                            ;d1 value
0003884E <AmiBlitz3.ab3@27561>   JMP writebyte                                            ;d1 value
00038854 <AmiBlitz3.ab3@27562> JMP exit
00038858 <AmiBlitz3.ab3@27566>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
0003885A <AmiBlitz3.ab3@27569>   fast            Dc.w 0
0003885C <AmiBlitz3.ab3@27570>   fpu             Dc.w 0
0003885E <AmiBlitz3.ab3@27571>   newsyntax       Dc.w 0
0003885F <AmiBlitz3.ab3@27573>   optistring      Dc.b 0
00038860 <AmiBlitz3.ab3@27574>   optistring2     Dc.b 0
00038861 <AmiBlitz3.ab3@27575>   optiarray       Dc.b 0
00038862 <AmiBlitz3.ab3@27576>   quickadd        Dc.b 0
00038864 <AmiBlitz3.ab3@27577>   newmode         Dc.w 0
00038866 <AmiBlitz3.ab3@27578>   mode            Dc.w 0
00038868 <AmiBlitz3.ab3@27579>   string1         Dc.w 0
0003886A <AmiBlitz3.ab3@27580>   load_var_size   Dc.w 0
0003886C <AmiBlitz3.ab3@27581>   load_var_reg    Dc.w 0
00038870 <AmiBlitz3.ab3@27582>   load_var_addr   Dc.l 0
00038872 <AmiBlitz3.ab3@27583>   imm_size        Dc.w 0
00038874 <AmiBlitz3.ab3@27584>   imm_reg         Dc.w 0
00038878 <AmiBlitz3.ab3@27585>   imm_addr        Dc.l 0
00038879 <AmiBlitz3.ab3@27586>   iee             Dc.b 0
0003887A <AmiBlitz3.ab3@27587>   _dcb            Dc.b 0
0003887E <AmiBlitz3.ab3@27588>   nohunkoffset    Dc.l 0
00038882 <AmiBlitz3.ab3@27591> teddata:        Dc.l tokens
00038886 <AmiBlitz3.ab3@27592>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
0003888A <AmiBlitz3.ab3@27593>                 Dc.l read_xtrafile
0003888E <AmiBlitz3.ab3@27594>                 Dc.l write_xtrafile
00038892 <AmiBlitz3.ab3@27595>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038896 <AmiBlitz3.ab3@27596>                 Dc.l 0
0003889A <AmiBlitz3.ab3@27597>                 Dc.b ":",34,".;"
0003889E <AmiBlitz3.ab3@27598>                 Dc.l "NEW1"
000388A2 <AmiBlitz3.ab3@27599>                 Dc.l newtypebase
000388A6 <AmiBlitz3.ab3@27600> realconstbase:  Dc.l labelbase
000388AA <AmiBlitz3.ab3@27601> deflib          Dc.l 0
000388AE <AmiBlitz3.ab3@27602> incd            Dc.l 0
000388B2 <AmiBlitz3.ab3@27603>                 Dc.l 0
000388B6 <AmiBlitz3.ab3@27604>                 Dc.l 0
000388BA <AmiBlitz3.ab3@27605>                 Dc.l 0
000388BC <AmiBlitz3.ab3@27606> _return         RTS
000388BD <AmiBlitz3.ab3@27607>                 Dc.b 0
00038CBD <AmiBlitz3.ab3@27608> chartab2        Ds.l 256
00038CC1 <AmiBlitz3.ab3@27609> codeend         Dc.l 0
00038CC5 <AmiBlitz3.ab3@27610> hunkoffsetnum   Dc.l 0
00038CC9 <AmiBlitz3.ab3@27611> chipsize        Dc.l 0
00038CCD <AmiBlitz3.ab3@27612> bsssize         Dc.l 0
00038CD1 <AmiBlitz3.ab3@27613> bssstart        Dc.l -1
00038CD5 <AmiBlitz3.ab3@27614> bssend          Dc.l -1
00038CD9 <AmiBlitz3.ab3@27615> chipstart       Dc.l -1
00038CDD <AmiBlitz3.ab3@27616> chipend         Dc.l -1
00038CDE <AmiBlitz3.ab3@27617> bssmode         Dc.b 0
00038CDF <AmiBlitz3.ab3@27618> chipmode        Dc.b 0
00038CE0 <AmiBlitz3.ab3@27619> newhunk         Dc.b 0
00038CE4 <AmiBlitz3.ab3@27620> bssnum          Dc.l 0
00038CE8 <AmiBlitz3.ab3@27621> chipnum         Dc.l 0
00038CEC <AmiBlitz3.ab3@27622> lastinstruction Dc.l 0
00038CF0 <AmiBlitz3.ab3@27623> lastinstructionaddr Dc.l 0
00038D04 <AmiBlitz3.ab3@27624> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038D08 <AmiBlitz3.ab3@27625> tstsize1b:      Ds.l 1
00038D0C <AmiBlitz3.ab3@27626> bsssize2        Dc.l 1
00038D10 <AmiBlitz3.ab3@27627>                 Dc.l $03E9
00038D14 <AmiBlitz3.ab3@27628> tstsize2b:      Dc.l $100
00038D28 <AmiBlitz3.ab3@27629> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038D2C <AmiBlitz3.ab3@27630> tstsize1c:      Ds.l 1
00038D30 <AmiBlitz3.ab3@27631> bsssize3        Dc.l 1
00038D34 <AmiBlitz3.ab3@27632> chipsize2       Dc.l 1
00038D38 <AmiBlitz3.ab3@27633>                 Dc.l $3e9
00038D3C <AmiBlitz3.ab3@27634> tstsize2c       Dc.l 0
00038D4C <AmiBlitz3.ab3@27635> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038D5C <AmiBlitz3.ab3@27636> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038D63 <AmiBlitz3.ab3@27637> strcpy          Dc.b "strcpy",0
00038D6A <AmiBlitz3.ab3@27638> strcmp          Dc.b "strcmp",0
00038D71 <AmiBlitz3.ab3@27639> strvar          Dc.b "strvar",0
00038D76 <AmiBlitz3.ab3@27640> qmul            Dc.b "qmul",0
00038D7B <AmiBlitz3.ab3@27641> qdiv            Dc.b "qdiv",0
00038D82 <AmiBlitz3.ab3@27642> _MaxLen         Dc.b "maxlen",0
00038D87 <AmiBlitz3.ab3@27643> notf            Dc.b "????",0
00038DAA <AmiBlitz3.ab3@27645> errtext         Dc.b "only reg addressing Mode supported",0
00038DD4 <AmiBlitz3.ab3@27646> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038E16 <AmiBlitz3.ab3@27647> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038E18 <AmiBlitz3.ab3@27648> peeksize        Dc.w 0
00038E1C <AmiBlitz3.ab3@27650> mainstart       Dc.l 0
00038E1D <AmiBlitz3.ab3@27652> infunctioncode  Dc.b 0
00038E1F <AmiBlitz3.ab3@27653> regnumstore     Dc.w 0
00038E4C <AmiBlitz3.ab3@27654>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038E54 <AmiBlitz3.ab3@27655> testcode        Dc.b "print i",0
00038EB8 <AmiBlitz3.ab3@27656>                 Ds.b 100
00038EC6 <AmiBlitz3.ab3@27657> devo            Dc.b "developobject",0 : Even
00038ED8 <AmiBlitz3.ab3@27658> autostorename   Dc.b "__autoconstantnum",0
00038EE2 <AmiBlitz3.ab3@27659> _include        Dc.b "__include",0
00038EEA <AmiBlitz3.ab3@27660> _debug          Dc.b "__debug",0
00038EEE <AmiBlitz3.ab3@27661> unusedfunc      Dc.l 0
00038EF0 <AmiBlitz3.ab3@27665>   MOVE.l a0,d0
00038F1A <AmiBlitz3.ab3@27666>   !basic
00038F1E <AmiBlitz3.ab3@27667>   *olderror.l= PutD0
00038F78 <AmiBlitz3.ab3@27668> 
00038FAC <AmiBlitz3.ab3@27669>   error_type$ = error$
00039048 <AmiBlitz3.ab3@27670> 
0003905C <AmiBlitz3.ab3@27671>   If Peek.l (?beforeparameterfetch)
00039072 <AmiBlitz3.ab3@27672>     MaxLen detokenline.s = 65536
000390B4 <AmiBlitz3.ab3@27673>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000390C4 <AmiBlitz3.ab3@27674>    *tn.preprocessor = Peek.l(?include_preprocessor)
000390EE <AmiBlitz3.ab3@27675>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00039116 <AmiBlitz3.ab3@27676>     If written>0 Then Poke.b &detokenline+written,0
00039140 <AmiBlitz3.ab3@27677>     sourceLineText.s = Peek.s(&detokenline)
00039146 <AmiBlitz3.ab3@27678>   Else
0003916E <AmiBlitz3.ab3@27679>     sourceLineText = "NULL"
000391A2 <AmiBlitz3.ab3@27681>   error_source$ = sourceLineText
000391F4 <AmiBlitz3.ab3@27682>   error$=error$+sourceLineText
000391FA <AmiBlitz3.ab3@27683>   GetD0 &error$
00039218 <AmiBlitz3.ab3@27684>   !asm
0003921A <AmiBlitz3.ab3@27685>   MOVE.l d0,a0
0003921C <AmiBlitz3.ab3@27686> RTS
0003921E <AmiBlitz3.ab3@27690>   MOVE.l a0,-(a7)
00039220 <AmiBlitz3.ab3@27691>   MOVE.l a0,d0
00039222 <AmiBlitz3.ab3@27692>   MOVE.l a5,a0                                             ;macro title
0003924C <AmiBlitz3.ab3@27693>   !basic
00039250 <AmiBlitz3.ab3@27694>   i = PutD0
00039252 <AmiBlitz3.ab3@27695>   MOVEQ #20,d0
00039254 <AmiBlitz3.ab3@27698>     MOVE.b -(a0),d1
00039258 <AmiBlitz3.ab3@27699>     BEQ 'l1
0003925C <AmiBlitz3.ab3@27700>     CMP.b #":",d1
00039260 <AmiBlitz3.ab3@27701>     BEQ 'l1
00039262 <AmiBlitz3.ab3@27702>     SUBQ.l #1,d0
00039266 <AmiBlitz3.ab3@27703>     BNE 'l2
00039268 <AmiBlitz3.ab3@27706>   ADDQ #1,a0
0003926A <AmiBlitz3.ab3@27707>   MOVE.l a0,d0
0003926E <AmiBlitz3.ab3@27708>   i2.l = PutD0
0003928A <AmiBlitz3.ab3@27709>   If Peek.w (?ininclude)>0
000392E4 <AmiBlitz3.ab3@27710>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000392F4 <AmiBlitz3.ab3@27711>     errorline.l = Peek.l(?includeline);-1
0003931C <AmiBlitz3.ab3@27712>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039346 <AmiBlitz3.ab3@27713>     errorfile.s = Peek.s(?includetemp2)
0003934C <AmiBlitz3.ab3@27714>   Else
00039384 <AmiBlitz3.ab3@27715>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003939A <AmiBlitz3.ab3@27716>     errorline.l = Peek.l(?compilelinecounter) + 1
000393CE <AmiBlitz3.ab3@27717>     errorfile.s = cli_sourcefile
000393D8 <AmiBlitz3.ab3@27720>   If i
0003947C <AmiBlitz3.ab3@27721>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000394FA <AmiBlitz3.ab3@27722>     errortext.s = Replace$(errortext,"\n","\\0a")
00039500 <AmiBlitz3.ab3@27723>   Else
00039528 <AmiBlitz3.ab3@27724>     errortext.s = "???"
000396A0 <AmiBlitz3.ab3@27727>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039768 <AmiBlitz3.ab3@27728>   NPrint "  ",error_type$,"\\n  ",error_source$
00039786 <AmiBlitz3.ab3@27732>   !asm
00039788 <AmiBlitz3.ab3@27733>   MOVE.l (a7)+,a0
0003978A <AmiBlitz3.ab3@27734> RTS
0003978C <AmiBlitz3.ab3@27738>   MOVE.l a0,-(a7)
0003978E <AmiBlitz3.ab3@27739>   MOVE.l a0,d0
00039790 <AmiBlitz3.ab3@27740>   MOVE.l a5,a0                                             ;macro title
000397BA <AmiBlitz3.ab3@27741>   !basic
000397BE <AmiBlitz3.ab3@27742>   i = PutD0
000397C0 <AmiBlitz3.ab3@27743>   MOVEQ #20,d0
000397C2 <AmiBlitz3.ab3@27746>     MOVE.b -(a0),d1
000397C6 <AmiBlitz3.ab3@27747>     BEQ 'l1
000397CA <AmiBlitz3.ab3@27748>     CMP.b #":",d1
000397CE <AmiBlitz3.ab3@27749>     BEQ 'l1
000397D0 <AmiBlitz3.ab3@27750>     SUBQ.l #1,d0
000397D4 <AmiBlitz3.ab3@27751>     BNE 'l2
000397D6 <AmiBlitz3.ab3@27754>   ADDQ #1,a0
000397D8 <AmiBlitz3.ab3@27755>   MOVE.l a0,d0
000397DC <AmiBlitz3.ab3@27756>   i2.l = PutD0
00039860 <AmiBlitz3.ab3@27757>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039874 <AmiBlitz3.ab3@27758>   If fid <> -1
00039890 <AmiBlitz3.ab3@27759>     If Peek.w (?ininclude)>0
000398EA <AmiBlitz3.ab3@27760>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
000398F0 <AmiBlitz3.ab3@27761>     Else
0003991C <AmiBlitz3.ab3@27762>       Poke$(?includetemp2),""
00039946 <AmiBlitz3.ab3@27764>     a$ = Peek$(?includetemp2)
000399B8 <AmiBlitz3.ab3@27765>     x$ = Replace$(Peek$(i),"\\0a","\n")
000399EA <AmiBlitz3.ab3@27766>     file_WriteLine{fid,x$}
00039A34 <AmiBlitz3.ab3@27767>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039A60 <AmiBlitz3.ab3@27768>     If a$
00039A92 <AmiBlitz3.ab3@27769>       file_WriteLine{fid,a$}
00039ADC <AmiBlitz3.ab3@27770>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039B04 <AmiBlitz3.ab3@27771>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039B0A <AmiBlitz3.ab3@27772>     Else
00039B30 <AmiBlitz3.ab3@27773>       file_WriteLine{fid,"none"}
00039B60 <AmiBlitz3.ab3@27775>     file_WriteLine{fid,Peek$(i2)}
00039BB6 <AmiBlitz3.ab3@27776>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039C00 <AmiBlitz3.ab3@27777>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039C0A <AmiBlitz3.ab3@27778>     file_Close{fid}
00039C28 <AmiBlitz3.ab3@27780>   !asm
00039C2A <AmiBlitz3.ab3@27781>   MOVE.l (a7)+,a0
00039C2C <AmiBlitz3.ab3@27782> RTS
00039C56 <AmiBlitz3.ab3@27786>   !basic
00039C5A <AmiBlitz3.ab3@27787>   progress.l     = PutD0
00039C6C <AmiBlitz3.ab3@27788>   total.l        = Peek.w(?progressbar_width)
00039C8A <AmiBlitz3.ab3@27789>   calcpro        = (progress * 100) / total +1
00039C9C <AmiBlitz3.ab3@27790>   pass.l         = Peek.w(?pass)
00039CAE <AmiBlitz3.ab3@27791>   typ.l          = Peek.w(?compiler_job)
00039CCC <AmiBlitz3.ab3@27794> If (pass><pass_old OR typ><typ_old)
00039CDA <AmiBlitz3.ab3@27796>     If pass_old><pass
00039D76 <AmiBlitz3.ab3@27797>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039DCC <AmiBlitz3.ab3@27798>       If cli_verbose>=2 Then NPrint passtatusstr
00039DD2 <AmiBlitz3.ab3@27801>     pass_old = pass
00039DD8 <AmiBlitz3.ab3@27802>     typ_old  = typ
00039DDE <AmiBlitz3.ab3@27803>     update_comstatus_gui = True
00039DF0 <AmiBlitz3.ab3@27804>     If typ=0
00039ED0 <AmiBlitz3.ab3@27805>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039ED8 <AmiBlitz3.ab3@27806>       calcpro = 0  ; set gauge to 0
00039EEA <AmiBlitz3.ab3@27808>     If typ=1
00039FCA <AmiBlitz3.ab3@27809>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039FD2 <AmiBlitz3.ab3@27810>       calcpro = 0  ; set gauge to 0
0003A028 <AmiBlitz3.ab3@27813>     If cli_verbose>=3 Then NPrint comstatusstr
0003A036 <AmiBlitz3.ab3@27816>   If (calcpro >< calcpro_old)
0003A08A <AmiBlitz3.ab3@27817>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A090 <AmiBlitz3.ab3@27818>     calcpro_old = calcpro
0003A096 <AmiBlitz3.ab3@27819>     update_comstatus_gui = True
0003A0B0 <AmiBlitz3.ab3@27822>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A0CE <AmiBlitz3.ab3@27823>     !asm
0003A100 <AmiBlitz3.ab3@27824> 
0003A12A <AmiBlitz3.ab3@27825>     !basic
0003A130 <AmiBlitz3.ab3@27826>     update_comstatus_gui  = False ; because we update the gui
0003A14E <AmiBlitz3.ab3@27828>   !asm
0003A150 <AmiBlitz3.ab3@27829> RTS
0003A156 <AmiBlitz3.ab3@27834>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A15C <AmiBlitz3.ab3@27835>   LEA maxobjects_value,A3                                  ;current value
0003A162 <AmiBlitz3.ab3@27836>   MOVEA.l libpointer,A2
0003A166 <AmiBlitz3.ab3@27839>   CMPA.w #$0,A2
0003A16A <AmiBlitz3.ab3@27840>   BEQ.w menu4c__igotb
0003A16C <AmiBlitz3.ab3@27841>   MOVEA.l A2,A1
0003A170 <AmiBlitz3.ab3@27842>   ADDA.l $12(A1),A1
0003A174 <AmiBlitz3.ab3@27843>   TST.w -$2(A1)
0003A178 <AmiBlitz3.ab3@27844>   BEQ.w JL_0_FFF6b
0003A17A <AmiBlitz3.ab3@27845>   SUBQ.w #1,D5
0003A17E <AmiBlitz3.ab3@27846>   BMI.w JL_0_FFFCb
0003A180 <AmiBlitz3.ab3@27849>   MOVEA.l (A2),A2
0003A184 <AmiBlitz3.ab3@27850> BRA.w JL_0_FFDAb
0003A188 <AmiBlitz3.ab3@27853>   MOVE.w (A3),-$4(A1)
0003A18A <AmiBlitz3.ab3@27856> RTS
0003A190 <AmiBlitz3.ab3@27860>   MOVE.w debugnest,d0
0003A196 <AmiBlitz3.ab3@27861>   LEA storedebugmode, a0
0003A19E <AmiBlitz3.ab3@27862>   MOVE.b 0(a0,d0.w),debugmode
0003A1A4 <AmiBlitz3.ab3@27863>   TST.w debugnest
0003A1A8 <AmiBlitz3.ab3@27864>   BEQ JUMP_unpairrunerrs
0003A1AE <AmiBlitz3.ab3@27865>   SUBQ.w #1,debugnest
0003A1B0 <AmiBlitz3.ab3@27866> RTS
0003A1B6 <AmiBlitz3.ab3@27869> JMP runerrsoverflow
0003A1BC <AmiBlitz3.ab3@27872> JMP unpairrunerrs
0003A1C4 <AmiBlitz3.ab3@27876>   BCHG #$7,use_debugger
0003A1CC <AmiBlitz3.ab3@27878>   BTST #$7,use_debugger
0003A1D0 <AmiBlitz3.ab3@27879>   BNE 'debugon
0003A1D6 <AmiBlitz3.ab3@27880>   CLR.w debugmode
0003A1DA <AmiBlitz3.ab3@27881> BRA.b 'debugoff
0003A1E0 <AmiBlitz3.ab3@27884>   SNE debugmode
0003A1E2 <AmiBlitz3.ab3@27887>   MOVE.l a0,-(a7)
0003A21A <AmiBlitz3.ab3@27890>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A21C <AmiBlitz3.ab3@27895>   MOVE.l (a7)+,a0
0003A21E <AmiBlitz3.ab3@27896> RTS
0003A226 <AmiBlitz3.ab3@27901>   BTST #$7,use_debugger
0003A22A <AmiBlitz3.ab3@27902>   BNE 'debugon
0003A230 <AmiBlitz3.ab3@27903>   CLR.w debugmode
0003A234 <AmiBlitz3.ab3@27904> BRA.b 'debugoff
0003A23A <AmiBlitz3.ab3@27907>   SNE debugmode
0003A23C <AmiBlitz3.ab3@27910> RTS
0003A242 <AmiBlitz3.ab3@27914>   ADDQ.w #1,debugnest
0003A248 <AmiBlitz3.ab3@27915>   MOVE.w debugnest,d0
0003A24C <AmiBlitz3.ab3@27916>   CMP.w #18,d0
0003A250 <AmiBlitz3.ab3@27917>    BGE JUMP_runerrsoverflow
0003A256 <AmiBlitz3.ab3@27918>   LEA storedebugmode, a0
0003A25E <AmiBlitz3.ab3@27919>   MOVE.b debugmode,0( a0,d0.w)
0003A264 <AmiBlitz3.ab3@27922>   SF debugmode
0003A266 <AmiBlitz3.ab3@27923> RTS
0003A2E6 <AmiBlitz3.ab3@27926> usedpath:  Ds.l 32
0003A2EA <AmiBlitz3.ab3@27930>   BEQ.w JUMP_syntaxerr
0003A2F0 <AmiBlitz3.ab3@27931>   LEA lastpath,A0
0003A2F4 <AmiBlitz3.ab3@27932>   MOVEM.l a0-a1/d0,-(a7)
0003A2FA <AmiBlitz3.ab3@27933>   LEA lastpath2,a1
0003A2FC <AmiBlitz3.ab3@27936>     MOVE.b (a0)+,(a1)+
0003A300 <AmiBlitz3.ab3@27937>   BNE 'l2
0003A304 <AmiBlitz3.ab3@27938>   MOVEM.l (a7)+,a0-a1/d0
0003A308 <AmiBlitz3.ab3@27939>   LEA usedpath(PC),A0
0003A30C <AmiBlitz3.ab3@27940>   MOVEM.l a0-a1/d0,-(a7)
0003A312 <AmiBlitz3.ab3@27941>   LEA lastpath,a1
0003A314 <AmiBlitz3.ab3@27944>     MOVE.b (a0)+,(a1)+
0003A318 <AmiBlitz3.ab3@27945>   BNE 'l1
0003A31C <AmiBlitz3.ab3@27946>   MOVEM.l (a7)+,a0-a1/d0
0003A31E <AmiBlitz3.ab3@27949>   TST.w D0
0003A322 <AmiBlitz3.ab3@27950>    BMI.w JUMP_syntaxerr
0003A324 <AmiBlitz3.ab3@27951>   MOVE.b D0,(A0)+
0003A328 <AmiBlitz3.ab3@27952>   BSR.w JUMP_get1bytemain
0003A32C <AmiBlitz3.ab3@27953>    BNE.w JL_0_4AA8
0003A330 <AmiBlitz3.ab3@27954>   MOVE.b #$2,(A0)
0003A332 <AmiBlitz3.ab3@27955> RTS
0003A336 <AmiBlitz3.ab3@27959>   BEQ.w JUMP_syntaxerr
0003A33C <AmiBlitz3.ab3@27960>   LEA path2,A0
0003A33E <AmiBlitz3.ab3@27970>   TST.w D0
0003A342 <AmiBlitz3.ab3@27971>    BMI.w JUMP_syntaxerr
0003A344 <AmiBlitz3.ab3@27972>   MOVE.b D0,(A0)+
0003A348 <AmiBlitz3.ab3@27973>   BSR.w JUMP_get1bytemain
0003A34C <AmiBlitz3.ab3@27974>    BNE.w JL_0_4AA8b
0003A350 <AmiBlitz3.ab3@27975>   MOVE.b #$2,(A0)
0003A352 <AmiBlitz3.ab3@27976> RTS
0003A358 <AmiBlitz3.ab3@27985> JMP errormsg_reg
0003A362 <AmiBlitz3.ab3@27989>   MOVE.l #$f22d6780,fpucodeglobal
0003A36C <AmiBlitz3.ab3@27990>   MOVE.l #$f22c6780,fpucodelocal
0003A372 <AmiBlitz3.ab3@27991>   LEA regtable,a0
0003A37C <AmiBlitz3.ab3@27992>   MOVE.l #7,maxregs
0003A37E <AmiBlitz3.ab3@27995>   MOVE.l (a0),d0
0003A382 <AmiBlitz3.ab3@27996>   BEQ 'e1
0003A384 <AmiBlitz3.ab3@27997>   CLR.l (a0)
0003A388 <AmiBlitz3.ab3@27998>   MOVE.w 4(a0),d0
0003A392 <AmiBlitz3.ab3@27999>   MOVE.l fpucodeglobal,fpucode
0003A396 <AmiBlitz3.ab3@28000>   TST.w 6(a0)
0003A39A <AmiBlitz3.ab3@28001>   BEQ 'glob
0003A3A4 <AmiBlitz3.ab3@28002>   MOVE.l fpucodelocal,fpucode
0003A3AA <AmiBlitz3.ab3@28005>   MOVE.l fpucode,d1
0003A3B0 <AmiBlitz3.ab3@28006>   JSR writelong
0003A3BA <AmiBlitz3.ab3@28007>   SUB.l #$80,fpucodelocal
0003A3C4 <AmiBlitz3.ab3@28008>   SUB.l #$80,fpucodeglobal
0003A3C6 <AmiBlitz3.ab3@28009>   MOVE.w d0,d1
0003A3CC <AmiBlitz3.ab3@28010>   JSR writeword
0003A3CE <AmiBlitz3.ab3@28011>   ADDQ #8,a0
0003A3D2 <AmiBlitz3.ab3@28012> BRA 'again
0003A3D4 <AmiBlitz3.ab3@28015> RTS
0003A3DA <AmiBlitz3.ab3@28022> JMP notypeerr
0003A3E0 <AmiBlitz3.ab3@28025> JMP illtypeerr
0003A3EA <AmiBlitz3.ab3@28028>   MOVE.l #$f22d4780,fpucodeglobal
0003A3F4 <AmiBlitz3.ab3@28029>   MOVE.l #$f22c4780,fpucodelocal
0003A3FA <AmiBlitz3.ab3@28030>   LEA regtable,a0
0003A3FC <AmiBlitz3.ab3@28031>   TST.l (a0)
0003A400 <AmiBlitz3.ab3@28032>    BNE JUMP_errormsg_reg
0003A402 <AmiBlitz3.ab3@28033>   MOVE.l d7,-(a7)
0003A404 <AmiBlitz3.ab3@28034>   SUBQ.l #1,a5
0003A40A <AmiBlitz3.ab3@28037>   JSR getparameter2
0003A40E <AmiBlitz3.ab3@28038>   BEQ.w 'nopar
0003A414 <AmiBlitz3.ab3@28039>   MOVE.w d0,lastchar
0003A41A <AmiBlitz3.ab3@28040>   JSR findvariable
0003A41E <AmiBlitz3.ab3@28041>   BNE 'islocal
0003A428 <AmiBlitz3.ab3@28042>   MOVE.l fpucodeglobal,fpucode
0003A432 <AmiBlitz3.ab3@28043>   MOVE.l #3,maxregs
0003A434 <AmiBlitz3.ab3@28044>   MOVEQ #0,d7
0003A43C <AmiBlitz3.ab3@28047>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A440 <AmiBlitz3.ab3@28048>    BEQ 'doit
0003A448 <AmiBlitz3.ab3@28049>   CMP.l #newtype_double,$a(a2)
0003A44C <AmiBlitz3.ab3@28050>    BNE JUMP_illtypeerr
0003A452 <AmiBlitz3.ab3@28053>   LEA regtable,a0
0003A454 <AmiBlitz3.ab3@28054>   MOVEQ #0,d0
0003A456 <AmiBlitz3.ab3@28057>   TST.l (a0)
0003A45A <AmiBlitz3.ab3@28058>    BEQ 'store
0003A45C <AmiBlitz3.ab3@28059>   ADDQ.l #4,d0
0003A45E <AmiBlitz3.ab3@28060>   ADDQ.l #8,a0
0003A464 <AmiBlitz3.ab3@28061>   CMP.l #16,d0
0003A468 <AmiBlitz3.ab3@28062>    BCS 'loop
0003A472 <AmiBlitz3.ab3@28063>   MOVE.l #2,maxregs
0003A478 <AmiBlitz3.ab3@28064>   CMP.l #20,d0
0003A47C <AmiBlitz3.ab3@28065>    BCS 'loop
0003A486 <AmiBlitz3.ab3@28066>   MOVE.l #1,maxregs
0003A48C <AmiBlitz3.ab3@28067>   CMP.l #24,d0
0003A490 <AmiBlitz3.ab3@28068>    BCS 'loop
0003A496 <AmiBlitz3.ab3@28069> JMP toovarerr
0003A49C <AmiBlitz3.ab3@28072>   TST.b fpu
0003A4A0 <AmiBlitz3.ab3@28073>    BEQ 'nofpu
0003A4A2 <AmiBlitz3.ab3@28074>   MOVE.l a2,(a0)
0003A4A8 <AmiBlitz3.ab3@28075>   MOVE.w 4(a2),4(a0)
0003A4AC <AmiBlitz3.ab3@28076>   MOVE.w d7,6(a0)
0003A4B2 <AmiBlitz3.ab3@28077>   MOVE.l fpucode,d1
0003A4BC <AmiBlitz3.ab3@28078>   SUB.l #$80,fpucodeglobal
0003A4C6 <AmiBlitz3.ab3@28079>   SUB.l #$80,fpucodelocal
0003A4CC <AmiBlitz3.ab3@28080>   JSR writelong
0003A4D0 <AmiBlitz3.ab3@28081>   MOVE.w 4(a2),d1
0003A4D6 <AmiBlitz3.ab3@28082>   JSR writeword
0003A4DC <AmiBlitz3.ab3@28085>   MOVE.w lastchar,d0
0003A4E0 <AmiBlitz3.ab3@28086>   CMP.w #":",d0
0003A4E4 <AmiBlitz3.ab3@28087>    BEQ 'nopar
0003A4E6 <AmiBlitz3.ab3@28088>   TST.w d0
0003A4EA <AmiBlitz3.ab3@28089>    BEQ 'nopar
0003A4EE <AmiBlitz3.ab3@28090>   CMP.w #",",d0
0003A4F2 <AmiBlitz3.ab3@28091>   BNE JUMP_syntaxerr
0003A4F6 <AmiBlitz3.ab3@28092> BRA 'l2
0003A4F8 <AmiBlitz3.ab3@28095>    MOVE.l (a7)+,d7
0003A4FA <AmiBlitz3.ab3@28096> RTS
0003A4FC <AmiBlitz3.ab3@28099>   MOVEQ #1,d7
0003A504 <AmiBlitz3.ab3@28100>   MOVE.b #1,newvariable
0003A50A <AmiBlitz3.ab3@28101>   LEA firstlocal,a2
0003A510 <AmiBlitz3.ab3@28102>   JSR findvariable
0003A516 <AmiBlitz3.ab3@28103>   CLR.b newvariable
0003A51C <AmiBlitz3.ab3@28104>   CMP.l #-1,d0
0003A520 <AmiBlitz3.ab3@28105>   BEQ.w JUMP_notypeerr2
0003A52A <AmiBlitz3.ab3@28106>   MOVE.l fpucodelocal,fpucode
0003A52E <AmiBlitz3.ab3@28107> BRA 'go
0003A532 <AmiBlitz3.ab3@28110>   CMP.b #".",d0
0003A536 <AmiBlitz3.ab3@28111>    BNE 'l1
0003A53A <AmiBlitz3.ab3@28112>   BSR JUMP_get1bytemain
0003A53E <AmiBlitz3.ab3@28113>   BSR JUMP_get1bytemain
0003A542 <AmiBlitz3.ab3@28116>   ORI .b #$20,d0
0003A546 <AmiBlitz3.ab3@28117>   CMP.b #"d",d0
0003A54A <AmiBlitz3.ab3@28118>    BNE JUMP_illeaerr
0003A54E <AmiBlitz3.ab3@28119>   BSR JUMP_get1bytemain
0003A552 <AmiBlitz3.ab3@28120>   SUB.b #$30,d0
0003A556 <AmiBlitz3.ab3@28121>   CMP.b #$7,d0
0003A55A <AmiBlitz3.ab3@28122>    BGT JUMP_syntaxerr
0003A55E <AmiBlitz3.ab3@28123>   MOVE.w #$49c0,d1
0003A560 <AmiBlitz3.ab3@28124>   ADD.b d0,d1
0003A566 <AmiBlitz3.ab3@28125>   JSR writeword
0003A56A <AmiBlitz3.ab3@28126>   BSR JUMP_get1bytemain
0003A56C <AmiBlitz3.ab3@28127> RTS
0003A572 <AmiBlitz3.ab3@28131>   LEA lastpath,a0
0003A576 <AmiBlitz3.ab3@28132>   LEA usedpath(PC),A1
0003A578 <AmiBlitz3.ab3@28135>     MOVE.b (a0)+,(a1)+
0003A57C <AmiBlitz3.ab3@28136>   BNE 'l1
0003A582 <AmiBlitz3.ab3@28138>   LEA lastpath2,a0
0003A588 <AmiBlitz3.ab3@28139>   LEA lastpath,A1
0003A58A <AmiBlitz3.ab3@28142>     MOVE.b (a0)+,(a1)+
0003A58E <AmiBlitz3.ab3@28143>   BNE 'l2
0003A590 <AmiBlitz3.ab3@28144> RTS
0003A596 <AmiBlitz3.ab3@28148>   TST.b objectcount
0003A59A <AmiBlitz3.ab3@28149>   BEQ 'l2a
0003A5A0 <AmiBlitz3.ab3@28150> JMP macnesterr
0003A5A6 <AmiBlitz3.ab3@28153>   LEA devo,a0
0003A5AC <AmiBlitz3.ab3@28154>   ADDQ.b #1,objectcount
0003A5B0 <AmiBlitz3.ab3@28155>   MOVEM.l a1/d2,-(a7)
0003A5B6 <AmiBlitz3.ab3@28156>   LEA ptr_parameterstore,a1
0003A5B8 <AmiBlitz3.ab3@28159>     MOVE.b (a0)+,(a1)+
0003A5BC <AmiBlitz3.ab3@28160>   BNE 'l1
0003A5BE <AmiBlitz3.ab3@28162>   MOVEQ #13,d2
0003A5C4 <AmiBlitz3.ab3@28163>   JSR findlabel2
0003A5C8 <AmiBlitz3.ab3@28164>   BNE 'd
0003A5CC <AmiBlitz3.ab3@28165>   TST.l 8(a2)
0003A5D0 <AmiBlitz3.ab3@28166>   BEQ 'd
0003A5D6 <AmiBlitz3.ab3@28167>   SUBQ.b #1,objectcount
0003A5DA <AmiBlitz3.ab3@28168>   MOVEM.l (a7)+,a1/d2
0003A5E0 <AmiBlitz3.ab3@28169>   JSR skiprest
0003A5E8 <AmiBlitz3.ab3@28170>   MOVE.b #1,developobject
0003A5EA <AmiBlitz3.ab3@28171> RTS
0003A5EE <AmiBlitz3.ab3@28174>   MOVEM.l (a7)+,a1/d2
0003A5F6 <AmiBlitz3.ab3@28175>   MOVE.b #1,resdisable
0003A5FC <AmiBlitz3.ab3@28178>   CLR.b developobject
0003A602 <AmiBlitz3.ab3@28179> JMP do_Macro
0003A608 <AmiBlitz3.ab3@28183> JMP illeaerr
0003A60E <AmiBlitz3.ab3@28187>   CLR.b typecheck
0003A614 <AmiBlitz3.ab3@28188>   CLR.b declare
0003A61A <AmiBlitz3.ab3@28189>   CLR.b declare2
0003A61E <AmiBlitz3.ab3@28190>   SUB.b #$30,d0
0003A622 <AmiBlitz3.ab3@28191>   BTST #0,d0
0003A626 <AmiBlitz3.ab3@28192>   BEQ 'l1
0003A62E <AmiBlitz3.ab3@28193>   MOVE.b #1,declare
0003A632 <AmiBlitz3.ab3@28196>   BTST #1,d0
0003A636 <AmiBlitz3.ab3@28197>   BEQ 'l2
0003A63E <AmiBlitz3.ab3@28198>   MOVE.b #1,declare2
0003A642 <AmiBlitz3.ab3@28201>   BTST #2,d0
0003A646 <AmiBlitz3.ab3@28202>   BEQ 'l3
0003A64E <AmiBlitz3.ab3@28203>   MOVE.b #1,typecheck
0003A652 <AmiBlitz3.ab3@28205>   BSR.w JUMP_get1bytemain
0003A654 <AmiBlitz3.ab3@28206> RTS
0003A65A <AmiBlitz3.ab3@28209> JMP get1bytemain
0003A684 <AmiBlitz3.ab3@28213>   !basic
0003A6A4 <AmiBlitz3.ab3@28215>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A6C2 <AmiBlitz3.ab3@28216>   !asm
0003A6C4 <AmiBlitz3.ab3@28217> Return
0003A6C6 <AmiBlitz3.ab3@28222>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A6C8 <AmiBlitz3.ab3@28223>   ADDQ #1,a5
0003A6CA <AmiBlitz3.ab3@28224>   MOVE.l a5,-(a7)
0003A6F4 <AmiBlitz3.ab3@28225>   !basic
0003A6FA <AmiBlitz3.ab3@28226>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A704 <AmiBlitz3.ab3@28227>   If _myD0
0003A744 <AmiBlitz3.ab3@28228>     newconst$ = UCase$(Peek.s(_myD0))
0003A74A <AmiBlitz3.ab3@28229>   Else
0003A784 <AmiBlitz3.ab3@28230>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A7AC <AmiBlitz3.ab3@28231>     nwconst$="xxx"
0003A7D4 <AmiBlitz3.ab3@28233>   condata$ =""
0003A7E4 <AmiBlitz3.ab3@28234>   Poke.b ?skip_bytes,0
0003A840 <AmiBlitz3.ab3@28235>   If Left$(newconst$,2) = "__"
0003A89A <AmiBlitz3.ab3@28236>     Select Mid$(newconst$,3,4)
0003A8BE <AmiBlitz3.ab3@28238>      Case "DATE"
0003A918 <AmiBlitz3.ab3@28239>       Select Mid$(newconst$,3,6)
0003A956 <AmiBlitz3.ab3@28240>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A99A <AmiBlitz3.ab3@28241>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A9A8 <AmiBlitz3.ab3@28242>       End Select
0003A9B6 <AmiBlitz3.ab3@28243>       i.l=SystemDate
0003A9DC <AmiBlitz3.ab3@28244>       condata$ = Date$ (i)
0003AA5A <AmiBlitz3.ab3@28245>       condata$ = Replace$(condata$,"/",".")
0003AA84 <AmiBlitz3.ab3@28247>      Case "VER_"
0003AA94 <AmiBlitz3.ab3@28250>       actual_version.l = Peek.l(?versioninformation)
0003AAA4 <AmiBlitz3.ab3@28251>       actual_build.l   = Peek.l(?number_of_builds)
0003AAC8 <AmiBlitz3.ab3@28253>       Format ""
0003AB22 <AmiBlitz3.ab3@28254>       Select Mid$(newconst$,3,9)
0003AB46 <AmiBlitz3.ab3@28256>        Case "VER_MAJOR"
0003AB82 <AmiBlitz3.ab3@28257>         condata$ = Str$(actual_version LSR 24)
0003ABAC <AmiBlitz3.ab3@28259>        Case "VER_MINOR"
0003ABF0 <AmiBlitz3.ab3@28260>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003AC1A <AmiBlitz3.ab3@28262>        Case "VER_PATCH"
0003AC5E <AmiBlitz3.ab3@28263>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003AC88 <AmiBlitz3.ab3@28265>        Case "VER_BUILD"
0003ACAC <AmiBlitz3.ab3@28266>         Format ""
0003ACE0 <AmiBlitz3.ab3@28267>         condata$ = Str$(actual_build)
0003ACE6 <AmiBlitz3.ab3@28269>        Default
0003AD0E <AmiBlitz3.ab3@28270>         condata$ = "{unknown compiler constant}"
0003AD1C <AmiBlitz3.ab3@28272>       End Select
0003AD40 <AmiBlitz3.ab3@28273>       Format ""
0003AD50 <AmiBlitz3.ab3@28274>       Poke.b ?skip_bytes,11
0003AD7A <AmiBlitz3.ab3@28276>      Case "THIS"
0003ADD4 <AmiBlitz3.ab3@28277>       Select Mid$(newconst$,3,9)
0003ADF8 <AmiBlitz3.ab3@28279>        Case "THIS_FUNC"
0003AE08 <AmiBlitz3.ab3@28280>         Poke.b ?skip_bytes,15
0003AE28 <AmiBlitz3.ab3@28281>         If Peek.l(?currentfunction)<>0
0003AE74 <AmiBlitz3.ab3@28282>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003AE7A <AmiBlitz3.ab3@28283>         Else
0003AEA2 <AmiBlitz3.ab3@28284>           condata$ = "GLOBAL"
0003AECC <AmiBlitz3.ab3@28287>        Case "THIS_INCL"
0003AEDC <AmiBlitz3.ab3@28288>         Poke.b ?skip_bytes,14
0003AEFC <AmiBlitz3.ab3@28289>         If Peek.l(?includetemp2)<>0
0003AF4A <AmiBlitz3.ab3@28290>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AF74 <AmiBlitz3.ab3@28293>        Case "THIS_POIN"
0003AF84 <AmiBlitz3.ab3@28294>         Poke.b ?skip_bytes,14
0003AFA4 <AmiBlitz3.ab3@28295>         If Peek.l(?currentfunction)<>0
0003AFD2 <AmiBlitz3.ab3@28296>           condata$ = Hex$(Peek.l(?currentfunction))
0003AFE0 <AmiBlitz3.ab3@28299>       End Select
0003B00A <AmiBlitz3.ab3@28301>      Case "CODE"
0003B01A <AmiBlitz3.ab3@28302>       Poke.b ?skip_bytes,10
0003B07C <AmiBlitz3.ab3@28303>       If Mid$(newconst$,3,8) = "CODELINE"
0003B0B8 <AmiBlitz3.ab3@28304>         condata$ = Str$(Peek.l(?globallinecount))
0003B0C6 <AmiBlitz3.ab3@28307>     End Select
0003B0CC <AmiBlitz3.ab3@28309>   Else
0003B120 <AmiBlitz3.ab3@28310>     Select Left$(newconst$,1)
0003B144 <AmiBlitz3.ab3@28312>      Case "R"
0003B154 <AmiBlitz3.ab3@28313>       Poke.b ?skip_bytes,3
0003B1CC <AmiBlitz3.ab3@28314>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B24C <AmiBlitz3.ab3@28315>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B25C <AmiBlitz3.ab3@28316>       Next
0003B286 <AmiBlitz3.ab3@28318>      Case "N"
0003B296 <AmiBlitz3.ab3@28319>       Poke.b ?skip_bytes,1
0003B2BA <AmiBlitz3.ab3@28320>       condata$ = Chr$(10)
0003B2C0 <AmiBlitz3.ab3@28322>      Default
0003B2D2 <AmiBlitz3.ab3@28323>       char1.b = Peek.b(&newconst$)
0003B2EA <AmiBlitz3.ab3@28324>       char2.b = Peek.b(&newconst$+1)
0003B2F6 <AmiBlitz3.ab3@28325>       nibble1.l = -1
0003B302 <AmiBlitz3.ab3@28326>       nibble2.l = -1
0003B340 <AmiBlitz3.ab3@28328>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B37E <AmiBlitz3.ab3@28329>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B3C2 <AmiBlitz3.ab3@28331>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B406 <AmiBlitz3.ab3@28332>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B44A <AmiBlitz3.ab3@28334>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B48E <AmiBlitz3.ab3@28335>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B4B4 <AmiBlitz3.ab3@28337>       If nibble1>=0 AND nibble2>=0
0003B4CA <AmiBlitz3.ab3@28338>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B4EE <AmiBlitz3.ab3@28339>         condata$ = Chr$(newchar)
0003B4FE <AmiBlitz3.ab3@28340>         Poke.b ?skip_bytes,2
0003B50C <AmiBlitz3.ab3@28343>     End Select
0003B56C <AmiBlitz3.ab3@28345>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B692 <AmiBlitz3.ab3@28346>     !cout{"detected unknown const: " + newconst$}
0003B6C6 <AmiBlitz3.ab3@28347>     condata$ = newconst$
0003B6DC <AmiBlitz3.ab3@28350>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B6DE <AmiBlitz3.ab3@28351>   MOVE.l d0,d2
0003B6E0 <AmiBlitz3.ab3@28352>   MOVE.l d2,-(a7)
0003B6E6 <AmiBlitz3.ab3@28354>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B6E8 <AmiBlitz3.ab3@28355>   MOVE.l d0,a0
0003B6EA <AmiBlitz3.ab3@28358>     MOVE.b (a0)+,d1
0003B6F0 <AmiBlitz3.ab3@28359>     JSR pokedata1b
0003B6F4 <AmiBlitz3.ab3@28360>  DBF d2,'l1
0003B712 <AmiBlitz3.ab3@28362>   !asm
0003B714 <AmiBlitz3.ab3@28363>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B716 <AmiBlitz3.ab3@28364>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B718 <AmiBlitz3.ab3@28365>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B71E <AmiBlitz3.ab3@28366>   ADD.l #1,d2
0003B724 <AmiBlitz3.ab3@28368>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B72A <AmiBlitz3.ab3@28369>   MOVE.b skip_bytes,D0
0003B72C <AmiBlitz3.ab3@28370>   ADD.l D0,a5
0003B72E <AmiBlitz3.ab3@28371> RTS
0003B732 <AmiBlitz3.ab3@28446> MOVEM.l a3/d1,-(a7)
0003B738 <AmiBlitz3.ab3@28448> CLR.b a4a5store
0003B73A <AmiBlitz3.ab3@28449> 'continue: MOVE.b (a3)+,d1
0003B73E <AmiBlitz3.ab3@28450> CMP.b #$15,d1
0003B742 <AmiBlitz3.ab3@28451> BEQ 'find
0003B746 <AmiBlitz3.ab3@28452> CMP.b #$14,d1
0003B74A <AmiBlitz3.ab3@28453> BEQ 'find
0003B74E <AmiBlitz3.ab3@28454> CMP.b #$ff,d1
0003B752 <AmiBlitz3.ab3@28455> BNE 'continue
0003B756 <AmiBlitz3.ab3@28456> BRA 'notfind
0003B75C <AmiBlitz3.ab3@28458> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B762 <AmiBlitz3.ab3@28459> JSR writelong
0003B76A <AmiBlitz3.ab3@28460> MOVE.b #1,a4a5store
0003B76E <AmiBlitz3.ab3@28461> 'notfind: MOVEM.l (a7)+,a3/d1
0003B770 <AmiBlitz3.ab3@28462> RTS
0003B776 <AmiBlitz3.ab3@28465> TST.b a4a5store
0003B77A <AmiBlitz3.ab3@28466> BEQ 'no
0003B780 <AmiBlitz3.ab3@28467> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B786 <AmiBlitz3.ab3@28468> JSR writelong
0003B78C <AmiBlitz3.ab3@28469> CLR.b a4a5store
0003B78E <AmiBlitz3.ab3@28470> 'no RTS
0003B78E <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B792 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B794 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B79C <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B7A8 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B7AC <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B7AE <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B7B2 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B7FB <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B7FC <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B800 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B802 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B806 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B822 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B826 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B828 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B82C <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B889 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B88A <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B895 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B8A5 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B8A6 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B8AA <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B8AC <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B8B2 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B8C2 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B8C6 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B8C8 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B8CF <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B8D0 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B8D4 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B8D6 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B8E0 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B913 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B914 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B918 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B91A <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B923 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B95E <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B962 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B964 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B96F <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B974 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B976 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B979 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B990 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B994 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B996 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B99C <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B9A9 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B9AA <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B9AE <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B9B0 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B9B6 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B9C6 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B9CF <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B9DC <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B9E0 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B9E2 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B9E7 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003BA02 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003BA03 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003BA04 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003BA0A <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003BA12 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003BA13 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003BA18 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003BA1A <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003BA23 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003BA2E <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003BA32 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003BA34 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003BA3C <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BA47 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BA48 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BA4C <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BA55 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BAB7 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BABC <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BAC5 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BADE <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003BB14 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003BB1A <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003BB1F <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003BB32 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003BB37 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003BB5C <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003BB63 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003BB6F <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003BB70 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003BB76 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003BB7B <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003BB92 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003BB98 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003BB9D <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003BBAC <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003BBB0 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003BBB2 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003BBB7 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003BBE1 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003BC06 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003BC0D <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003BC0E <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003BC12 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003BC19 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003BC1A <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003BC1E <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003BC25 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003BC32 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003BC36 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003BC3D <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003BC50 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003BC57 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003BC66 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003BC6A <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003BC6C <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003BC72 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003BC8F <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003BC90 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003BC94 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003BC96 <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003BC9C <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003BCB9 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003BCC3 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003BCDA <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003BCE0 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003BCE3 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003BCF2 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003BCF6 <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003BCFD <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003BCFE <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003BD04 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003BD1D <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003BD22 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003BD2B <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003BD48 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003BD4A <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003BD51 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003BD60 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003BD62 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003BD67 <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003BD7E <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003BD82 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003BD84 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003BD9F <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003BDA0 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003BDAB <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003BDB7 <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003BDBB <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003BDBC <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003BDC2 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003BDC9 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003BDE1 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003BDEF <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003BDF8 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003BDFA <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003BE01 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003BE06 <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003BE13 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003BE34 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003BE55 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003BE56 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003BE5A <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003BE62 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003BE63 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003BE64 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003BE68 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003BE71 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003BE7F <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003BE84 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003BE95 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003BE9A <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003BEB1 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003BEB6 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003BEB8 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003BECD <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003BEE9 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003BEF0 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003BEF5 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003BEF6 <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003BF01 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003BF0C <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003BF12 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003BF1D <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BF39 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003BF55 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BF71 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BF82 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BF8D <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BF9E <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BFA9 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BFC5 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BFE1 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BFFD <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003C019 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003C01A <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C020 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003C035 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003C051 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003C06D <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C082 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003C089 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C09E <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003C0A5 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C0BA <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003C0C1 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C0D6 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003C0DD <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003C0F9 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003C115 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003C131 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003C14D <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003C169 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C184 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003C185 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C18C <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C1A1 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C1A8 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C1BD <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C1C4 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C1D9 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C1F5 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C1FC <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003C211 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003C22D <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003C249 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003C265 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003C281 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C29D <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C2A4 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C2B9 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C2C0 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C2D5 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C2F1 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C30D <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C314 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C329 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C330 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C345 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C361 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C37D <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C399 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C3B5 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C3D1 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C3ED <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C409 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C410 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C425 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C42C <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C441 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C45D <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C479 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C495 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C4B1 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C4CD <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C4E9 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C505 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C521 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C53D <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C559 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C579 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C595 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C5B1 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C5CD <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C5E9 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C605 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C621 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C63D <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C659 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C677 <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C695 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C6B3 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C6CF <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C6E0 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C6EB <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C707 <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C723 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C73F <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C75B <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C777 <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C791 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C7AD <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C7C8 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C7C9 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C7E7 <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C803 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C81F <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C83B <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C857 <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C873 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C88F <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C8AB <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C8C7 <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C8E3 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C8FF <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C91B <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C937 <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C953 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C96F <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C98B <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C9A7 <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C9C3 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C9DF <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C9FB <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CA02 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003CA17 <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003CA33 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CA48 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003CA4F <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CA56 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CA64 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CA69 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CA72 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CA80 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CA83 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CA8E <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CA9F <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CAAA <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003CABB <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CAC6 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CAD7 <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003CADA <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CAE2 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CAF3 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CAFE <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CB0F <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CB1A <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CB2B <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CB36 <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CB47 <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CB52 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003CB63 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CB6E <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003CB7F <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003CB9D <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003CBA8 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003CBB9 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003CBD5 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003CBF3 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003CBF6 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003CBFE <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003CC06 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003CC56 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003CC6A <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003CC6E <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003CC7E <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003CCB4 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003CCBC <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003CD14 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003CD1C <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003CD24 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003CD42 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003CD46 <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003CD76 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003CD90 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003CD9A <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003CDA8 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003CDC8 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003CDEA <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003CDEC <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003CE0E <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003CE16 <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003CE1C <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003CE22 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003CE2A <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003CE30 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003CE34 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003CE3E <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003CE44 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003CE62 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003CE89 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003CE90 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003CE97 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003CEA5 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003CEB4 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003CEB5 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003CEBC <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003CEC1 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003CED5 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003CEDC <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003CEE0 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003CEE1 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003CEE8 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003CEEB <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003CEEC <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003CEF0 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003CEF9 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003CF00 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003CF13 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003CF14 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003CF18 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003CF21 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CF39 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003CF3A <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CF67 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CF68 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CF6C <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CF6E <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CF75 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CF80 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CF84 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CF8C <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CF8D <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CF8E <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CF94 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CF99 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CF9A <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CF9E <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CFA0 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CFA7 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CFB9 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CFBA <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CFBE <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CFCA <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CFCB <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CFD0 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CFD2 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CFE7 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CFEC <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CFEE <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CFF1 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D02C <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D030 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003D032 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D037 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D038 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D03C <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D047 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D048 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003D04E <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D056 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D075 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D07D <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D07E <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003D084 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D08C <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D095 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003D09C <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D0A4 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D0A5 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D0AA <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D0B3 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D0B8 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D0C1 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D0C2 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D0C6 <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003D0C8 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D0CF <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D0D0 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003D0D6 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D0DD <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D0DE <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D0E2 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003D0E4 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D0EB <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D0EC <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003D0F2 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D0F7 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D10D <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003D114 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D11E <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D11F <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D120 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D124 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003D126 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D131 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D132 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D136 <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D144 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D171 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D172 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D176 <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D180 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D1B7 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D1B8 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D1BC <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003D1BE <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D1C6 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D1E5 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D1E6 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D1EA <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003D1EC <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D1F3 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D229 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D22A <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D22E <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003D230 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D239 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D26E <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D272 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003D274 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D2BB <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D2BC <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D2BC <AmiBlitz3.ab3@28474> INCLUDE "internal_commands.ab3"
0003D2C0 <AmiBlitz3.ab3@28479>            Dc.l cif_lt                                     ;ciflt
0003D2C4 <AmiBlitz3.ab3@28480>            Dc.l cif_eq                                     ;cifeq
0003D2C8 <AmiBlitz3.ab3@28481>            Dc.l cif_gt                                     ;cifgt
0003D2CC <AmiBlitz3.ab3@28482>            Ds.l 1                                          ;0
0003D2D0 <AmiBlitz3.ab3@28483>            Dc.l cif_le                                     ;cifle
0003D2D4 <AmiBlitz3.ab3@28484>            Dc.l cif_ne                                     ;cifne
0003D2D8 <AmiBlitz3.ab3@28485>            Dc.l cif_le                                     ;cifge
0003D2DC <AmiBlitz3.ab3@28486>            Ds.l 1                                          ;0
0003D2E0 <AmiBlitz3.ab3@28487>            Dc.l cif_ge                                     ;cifge
0003D2E4 <AmiBlitz3.ab3@28488>            Dc.l cif_ne                                     ;cifne
0003D2E8 <AmiBlitz3.ab3@28489>            Dc.l cif_ge                                     ;cifge
0003D2EC <AmiBlitz3.ab3@28490>            Ds.l 1                                          ;0
0003D2F0 <AmiBlitz3.ab3@28493>            Dc.l do_newtype                                 ;donewtype
0003D2F4 <AmiBlitz3.ab3@28494>            Dc.l do_end                                     ;doend
0003D2F8 <AmiBlitz3.ab3@28495>            Dc.l do_let                                     ;dolet
0003D2FC <AmiBlitz3.ab3@28496>            Dc.l do_dim                                     ;dodim
0003D300 <AmiBlitz3.ab3@28497>            Dc.l do_goto                                    ;dogoto
0003D304 <AmiBlitz3.ab3@28498>            Dc.l do_gosub                                   ;dogosub
0003D308 <AmiBlitz3.ab3@28499>            Dc.l do_return                                  ;doreturn
0003D30C <AmiBlitz3.ab3@28500>            Dc.l do_statement                               ;dostatement
0003D310 <AmiBlitz3.ab3@28501>            Dc.l do_function                                ;dofunc
0003D314 <AmiBlitz3.ab3@28502>            Dc.l do_mousewait                               ;domwait
0003D318 <AmiBlitz3.ab3@28503>            Dc.l do_if                                      ;doif
0003D31C <AmiBlitz3.ab3@28504>            Dc.l do_while                                   ;dowhile
0003D320 <AmiBlitz3.ab3@28505>            Dc.l do_Macro                                   ;domacro
0003D324 <AmiBlitz3.ab3@28506>            Dc.l do_select                                  ;doselect
0003D328 <AmiBlitz3.ab3@28507>            Dc.l do_case                                    ;docase
0003D32C <AmiBlitz3.ab3@28508>            Dc.l do_default                                 ;dodefault
0003D330 <AmiBlitz3.ab3@28509>            Dc.l do_AsmExit                                 ;doasmexit
0003D334 <AmiBlitz3.ab3@28510>            Dc.l do_xinclude                                ;doxinclude
0003D338 <AmiBlitz3.ab3@28511>            Dc.l do_INCLUDE                                 ;doinclude
0003D33C <AmiBlitz3.ab3@28512>            Dc.l do_syntax                                  ;syntaxerr
0003D340 <AmiBlitz3.ab3@28513>            Dc.l do_shared                                  ;doshared
0003D344 <AmiBlitz3.ab3@28514>            Dc.l do_for                                     ;dofor
0003D348 <AmiBlitz3.ab3@28515>            Dc.l do_next                                    ;donext
0003D34C <AmiBlitz3.ab3@28516>            Dc.l syntaxerr                                  ; To
0003D350 <AmiBlitz3.ab3@28517>            Dc.l syntaxerr                                  ; Step
0003D354 <AmiBlitz3.ab3@28518>            Dc.l do_data                                    ;dodata
0003D358 <AmiBlitz3.ab3@28519>            Dc.l do_read                                    ;doread
0003D35C <AmiBlitz3.ab3@28523>            Dc.l syntaxerr                                  ; CNIF
0003D360 <AmiBlitz3.ab3@28524>            Dc.l syntaxerr                                  ; CSIF
0003D364 <AmiBlitz3.ab3@28525>            Dc.l syntaxerr                                  ; CELSE
0003D368 <AmiBlitz3.ab3@28526>            Dc.l syntaxerr                                  ; CEND
0003D36C <AmiBlitz3.ab3@28527>            Dc.l do_cerr                                    ;docerr
0003D370 <AmiBlitz3.ab3@28528>            Dc.l do_then                                    ;dothen
0003D374 <AmiBlitz3.ab3@28529>            Dc.l do_else                                    ;doelse
0003D378 <AmiBlitz3.ab3@28530>            Dc.l do_even4                                   ;doeven4
0003D37C <AmiBlitz3.ab3@28531>            Dc.l do_even8                                   ;doeven8
0003D380 <AmiBlitz3.ab3@28533>            Dc.l do_dc                                      ;dodc
0003D384 <AmiBlitz3.ab3@28534>            Dc.l do_ds                                      ;dods
0003D388 <AmiBlitz3.ab3@28535>            Dc.l do_even                                    ;doeven
0003D38C <AmiBlitz3.ab3@28536>            Dc.l do_dcb                                     ;dodcb
0003D390 <AmiBlitz3.ab3@28537>            Dc.l do_setreg                                  ;dosetreg
0003D394 <AmiBlitz3.ab3@28538>            Dc.l do_IncBin                                  ;doincbin
0003D398 <AmiBlitz3.ab3@28539>            Dc.l do_free                                    ;dofree
0003D39C <AmiBlitz3.ab3@28540>            Dc.l do_use                                     ;douse
0003D3A0 <AmiBlitz3.ab3@28541>            Dc.l do_Stop                                    ;dostop
0003D3A4 <AmiBlitz3.ab3@28542>            Dc.l do_Cont                                    ;docont
0003D3A8 <AmiBlitz3.ab3@28543>            Dc.l syntaxerr                                  ;syntaxeer
0003D3AC <AmiBlitz3.ab3@28544>            Dc.l do_SetInt                                  ;dosetint
0003D3B0 <AmiBlitz3.ab3@28545>            Dc.l do_ClrInt                                  ;doclrint
0003D3B4 <AmiBlitz3.ab3@28546>            Dc.l do_MaxLen                                  ;domaxlen
0003D3B8 <AmiBlitz3.ab3@28547>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D3BC <AmiBlitz3.ab3@28548>            Dc.l do_BLITZ                                   ;doblitz
0003D3C0 <AmiBlitz3.ab3@28549>            Dc.l do_AMIGA                                   ;doamiga
0003D3C4 <AmiBlitz3.ab3@28550>            Dc.l do_QAMIGA                                  ;doqamiga
0003D3C8 <AmiBlitz3.ab3@28551>            Dc.l do_VWait                                   ;dovwait
0003D3CC <AmiBlitz3.ab3@28552>            Dc.l do_LibJsr                                  ;dolibjsr
0003D3D0 <AmiBlitz3.ab3@28553>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D3D4 <AmiBlitz3.ab3@28554>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D3D8 <AmiBlitz3.ab3@28555>            Dc.l _extb                                      ;syntaxerr
0003D3DC <AmiBlitz3.ab3@28559>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D3E0 <AmiBlitz3.ab3@28560>            Dc.l do_SetErr                                  ;doseterr
0003D3E4 <AmiBlitz3.ab3@28561>            Dc.l do_ClrErr                                  ;doclrerr
0003D3E8 <AmiBlitz3.ab3@28562>            Dc.l syntaxerr                                  ;syntaxerr
0003D3EC <AmiBlitz3.ab3@28563>            Dc.l do_ErrFail                                 ;doerrfail
0003D3F0 <AmiBlitz3.ab3@28564>            Dc.l syntaxerr
0003D3F4 <AmiBlitz3.ab3@28565>            Dc.l syntaxerr                                  ;mod
0003D3F8 <AmiBlitz3.ab3@28566>            Dc.l syntaxerr                                  ;Pi
0003D3FC <AmiBlitz3.ab3@28567>            Dc.l do_Repeat                                  ;dorepeat
0003D400 <AmiBlitz3.ab3@28568>            Dc.l do_Until                                   ;dountil
0003D404 <AmiBlitz3.ab3@28569>            Dc.l do_PutReg                                  ;doputreg
0003D408 <AmiBlitz3.ab3@28570>            Dc.l do_Pop                                     ;dopop
0003D40C <AmiBlitz3.ab3@28571>            Dc.l do_INCDIR                                  ;doincdir
0003D410 <AmiBlitz3.ab3@28572>            Dc.l mydo_Endif2                                ;mydoendif2
0003D414 <AmiBlitz3.ab3@28573>            Dc.l do_Wend                                    ;dowend
0003D418 <AmiBlitz3.ab3@28574>            Dc.l do_SysJsr                                  ;dosysjsr
0003D41C <AmiBlitz3.ab3@28575>            Dc.l do_WBStartup                               ;dowbstartup
0003D420 <AmiBlitz3.ab3@28576>            Dc.l syntaxerr
0003D424 <AmiBlitz3.ab3@28577>            Dc.l do_Ongo                                    ;doongo
0003D428 <AmiBlitz3.ab3@28578>            Dc.l syntaxerr
0003D42C <AmiBlitz3.ab3@28579>            Dc.l do_Forever                                 ;doforever
0003D430 <AmiBlitz3.ab3@28580>            Dc.l do_Restore                                 ;dorestore
0003D434 <AmiBlitz3.ab3@28581>            Dc.l do_Exchange                                ;doexchange
0003D438 <AmiBlitz3.ab3@28582>            Dc.l do_USEPATH                                 ;dousepath
0003D43C <AmiBlitz3.ab3@28583>            Dc.l do_CloseEd                                 ;doclosed
0003D440 <AmiBlitz3.ab3@28584>            Dc.l do_NoCli                                   ;donocli
0003D444 <AmiBlitz3.ab3@28585>            Dc.l syntaxerr                                  ;syntaxerr
0003D448 <AmiBlitz3.ab3@28586>            Dc.l syntaxerr                                  ;syntaxerr
0003D44C <AmiBlitz3.ab3@28587>            Dc.l syntaxerr                                  ;syntaxerr
0003D450 <AmiBlitz3.ab3@28588>            Dc.l syntaxerr                                  ;syntaxerr
0003D454 <AmiBlitz3.ab3@28589>            Dc.l syntaxerr                                  ;syntaxerr
0003D458 <AmiBlitz3.ab3@28590>            Dc.l do_runerrson                               ;dorunerrson
0003D45C <AmiBlitz3.ab3@28591>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D460 <AmiBlitz3.ab3@28592>            Dc.l do_uselastpath
0003D464 <AmiBlitz3.ab3@28593>            Dc.l do_regload
0003D468 <AmiBlitz3.ab3@28594>            Dc.l do_regsave
0003D46C <AmiBlitz3.ab3@28595>            Dc.l do_Object
0003D470 <AmiBlitz3.ab3@28596>            Dc.l do_usepath2
0003D474 <AmiBlitz3.ab3@28597>            Dc.l do_LastRunErrsMode
0003D478 <AmiBlitz3.ab3@28620> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D47C <AmiBlitz3.ab3@28621>            Dc.l menu_run
0003D480 <AmiBlitz3.ab3@28622>            Dc.l menu_createexecutable
0003D484 <AmiBlitz3.ab3@28623>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D488 <AmiBlitz3.ab3@28624>            Dc.l menu_createresidentfile
0003D48C <AmiBlitz3.ab3@28625> 
0003D490 <AmiBlitz3.ab3@28626> 
0003D494 <AmiBlitz3.ab3@28627>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D498 <AmiBlitz3.ab3@28628>            Dc.l menu_reloadlibs
0003D49C <AmiBlitz3.ab3@28629>            Dc.l menu_loaddebugmodule
0003D4A0 <AmiBlitz3.ab3@28630>            Dc.l menu_dummyfunc
0003D4A4 <AmiBlitz3.ab3@28631>            Dc.l menu_newcreate
0003D4A8 <AmiBlitz3.ab3@28632>            Dc.l menu_dummyfunc
0003D4AC <AmiBlitz3.ab3@28633>            Dc.l menu_toggledebug
0003D4B0 <AmiBlitz3.ab3@28634>            Dc.l menu_dummyfunc
0003D4B4 <AmiBlitz3.ab3@28635>            Dc.l menu_dummyfunc
0003D4DE <AmiBlitz3.ab3@28640>   !basic
0003D540 <AmiBlitz3.ab3@28641>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D55E <AmiBlitz3.ab3@28642>   !asm
0003D560 <AmiBlitz3.ab3@28643> RTS
0003D561 <AmiBlitz3.ab3@28649> set_autorun:               Dc.b $00
0003D566 <AmiBlitz3.ab3@28650> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D567 <AmiBlitz3.ab3@28652> set_interruptcheck:        Dc.b $00
0003D56C <AmiBlitz3.ab3@28653> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D56D <AmiBlitz3.ab3@28655> set_assemblercheck:        Ds.b 1
0003D572 <AmiBlitz3.ab3@28656> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D573 <AmiBlitz3.ab3@28658> set_overflowcheck:         Ds.b 1
0003D578 <AmiBlitz3.ab3@28659> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D57E <AmiBlitz3.ab3@28661> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D584 <AmiBlitz3.ab3@28662> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D58A <AmiBlitz3.ab3@28663> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D58C <AmiBlitz3.ab3@28664> Even4
0003D598 <AmiBlitz3.ab3@28667> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D5A0 <AmiBlitz3.ab3@28668>                            Dc.l $00000000,$00000000
0003D5A8 <AmiBlitz3.ab3@28669> tstsize1:                  Dc.l $00000100,$000003E9
0003D5AC <AmiBlitz3.ab3@28670> tstsize2:                  Dc.l $00000100
0003D5B0 <AmiBlitz3.ab3@28671> tstend:                    Dc.l $000003EC
0003D5B8 <AmiBlitz3.ab3@28672> tstsize3:                  Ds.l 2
0003D5BC <AmiBlitz3.ab3@28673> tstdone:                   Dc.l $000003F2
0003D5C0 <AmiBlitz3.ab3@28676> edstruct:                  Dc.l tokens                     ;data for ted
0003D5C4 <AmiBlitz3.ab3@28680>                            Dc.l 0
0003D5C8 <AmiBlitz3.ab3@28682>                            Dc.l read_xtrafile              ;load .xtra routine
0003D5CC <AmiBlitz3.ab3@28683>                            Dc.l write_xtrafile             ;save .xtra routine
0003D5D0 <AmiBlitz3.ab3@28684>                            Dc.l call_menuentry             ;Menu Routine
0003D5D4 <AmiBlitz3.ab3@28685>                            Ds.l 1                          ;cleanup (?)
0003D5D8 <AmiBlitz3.ab3@28686>                            Dc.b ":",34,".;"
0003D6D4 <AmiBlitz3.ab3@28689> 
0003D7B4 <AmiBlitz3.ab3@28690>                            Ds.l 56
0003D7B6 <AmiBlitz3.ab3@28695> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D7BA <AmiBlitz3.ab3@28698> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D7BC <AmiBlitz3.ab3@28699>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D7C0 <AmiBlitz3.ab3@28700>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D7C6 <AmiBlitz3.ab3@28704> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D7C8 <AmiBlitz3.ab3@28708>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D7CC <AmiBlitz3.ab3@28711> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D7D0 <AmiBlitz3.ab3@28714> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D7D4 <AmiBlitz3.ab3@28715>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D7D6 <AmiBlitz3.ab3@28721>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D7D8 <AmiBlitz3.ab3@28725>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D7DA <AmiBlitz3.ab3@28728> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D7DC <AmiBlitz3.ab3@28729>                            Dc.b $4E,$71                                             ;NOP
0003D7DE <AmiBlitz3.ab3@28730>                            Dc.b $4E,$71                                             ;NOP
0003D7E0 <AmiBlitz3.ab3@28731>                            Dc.b $4E,$71                                             ;NOP
0003D7E2 <AmiBlitz3.ab3@28732> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D7E4 <AmiBlitz3.ab3@28734>                            Dc.b $4E,$71                                             ;NOP
0003D7E6 <AmiBlitz3.ab3@28735>                            Dc.b $4E,$71                                             ;NOP
0003D7E8 <AmiBlitz3.ab3@28736>                            Dc.b $4E,$71                                             ;NOP
0003D7EC <AmiBlitz3.ab3@28740> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D7F0 <AmiBlitz3.ab3@28743> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D7F2 <AmiBlitz3.ab3@28746> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D7F4 <AmiBlitz3.ab3@28749> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7F6 <AmiBlitz3.ab3@28750>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7FA <AmiBlitz3.ab3@28751>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D7FC <AmiBlitz3.ab3@28752>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7FE <AmiBlitz3.ab3@28758> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D802 <AmiBlitz3.ab3@28759>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D804 <AmiBlitz3.ab3@28764> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D808 <AmiBlitz3.ab3@28765>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D80A <AmiBlitz3.ab3@28769> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D80C <AmiBlitz3.ab3@28770>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D810 <AmiBlitz3.ab3@28776> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D812 <AmiBlitz3.ab3@28777>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D816 <AmiBlitz3.ab3@28778>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D81A <AmiBlitz3.ab3@28782> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D81C <AmiBlitz3.ab3@28783>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D820 <AmiBlitz3.ab3@28784>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D822 <AmiBlitz3.ab3@28787> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D826 <AmiBlitz3.ab3@28790> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D82A <AmiBlitz3.ab3@28793> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D82E <AmiBlitz3.ab3@28796> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D832 <AmiBlitz3.ab3@28800>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D834 <AmiBlitz3.ab3@28801>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D836 <AmiBlitz3.ab3@28802>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D83A <AmiBlitz3.ab3@28807>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D83C <AmiBlitz3.ab3@28808>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D83E <AmiBlitz3.ab3@28809>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D842 <AmiBlitz3.ab3@28814>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D844 <AmiBlitz3.ab3@28815>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D846 <AmiBlitz3.ab3@28816>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D84A <AmiBlitz3.ab3@28821>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D84C <AmiBlitz3.ab3@28822>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D84E <AmiBlitz3.ab3@28823>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D852 <AmiBlitz3.ab3@28824>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D854 <AmiBlitz3.ab3@28825>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D858 <AmiBlitz3.ab3@28830>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D85A <AmiBlitz3.ab3@28831>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D85E <AmiBlitz3.ab3@28832>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D860 <AmiBlitz3.ab3@28833>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D864 <AmiBlitz3.ab3@28834>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D866 <AmiBlitz3.ab3@28835>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D868 <AmiBlitz3.ab3@28838>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D86C <AmiBlitz3.ab3@28843>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D86E <AmiBlitz3.ab3@28844>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D872 <AmiBlitz3.ab3@28845>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D874 <AmiBlitz3.ab3@28846>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D878 <AmiBlitz3.ab3@28847>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D87A <AmiBlitz3.ab3@28848>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D87C <AmiBlitz3.ab3@28851>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D880 <AmiBlitz3.ab3@28856>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D882 <AmiBlitz3.ab3@28857>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D886 <AmiBlitz3.ab3@28858>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D888 <AmiBlitz3.ab3@28859>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D88C <AmiBlitz3.ab3@28860>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D88E <AmiBlitz3.ab3@28861>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D890 <AmiBlitz3.ab3@28864>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D894 <AmiBlitz3.ab3@28869>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D896 <AmiBlitz3.ab3@28870>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D89A <AmiBlitz3.ab3@28871>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D8A0 <AmiBlitz3.ab3@28872>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D8A4 <AmiBlitz3.ab3@28873>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D8A6 <AmiBlitz3.ab3@28874>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D8AA <AmiBlitz3.ab3@28881>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D8AC <AmiBlitz3.ab3@28885> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D8AE <AmiBlitz3.ab3@28888> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D8B2 <AmiBlitz3.ab3@28891> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D8B4 <AmiBlitz3.ab3@28892> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D8B8 <AmiBlitz3.ab3@28895> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D8BA <AmiBlitz3.ab3@28898> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D8BE <AmiBlitz3.ab3@28901> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D8C0 <AmiBlitz3.ab3@28905>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D8C2 <AmiBlitz3.ab3@28908> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D8C4 <AmiBlitz3.ab3@28911> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D8C8 <AmiBlitz3.ab3@28914> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D8CC <AmiBlitz3.ab3@28917> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D8D0 <AmiBlitz3.ab3@28920> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D8D2 <AmiBlitz3.ab3@28923> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D8D4 <AmiBlitz3.ab3@28926> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D8D8 <AmiBlitz3.ab3@28929> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D8DE <AmiBlitz3.ab3@28930>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D8E0 <AmiBlitz3.ab3@28931>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8E4 <AmiBlitz3.ab3@28935> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D8E6 <AmiBlitz3.ab3@28936>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8E8 <AmiBlitz3.ab3@28940> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D8EC <AmiBlitz3.ab3@28943> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D8EE <AmiBlitz3.ab3@28947>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D8F0 <AmiBlitz3.ab3@28951>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D8F2 <AmiBlitz3.ab3@28955>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D8F6 <AmiBlitz3.ab3@28958> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D8FA <AmiBlitz3.ab3@28961> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D8FC <AmiBlitz3.ab3@28964> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D8FE <AmiBlitz3.ab3@28967> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D900 <AmiBlitz3.ab3@28970> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D904 <AmiBlitz3.ab3@28973> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D908 <AmiBlitz3.ab3@28976> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D90A <AmiBlitz3.ab3@28979> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D90C <AmiBlitz3.ab3@28983>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D910 <AmiBlitz3.ab3@28986>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D912 <AmiBlitz3.ab3@28992>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D916 <AmiBlitz3.ab3@28995>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D918 <AmiBlitz3.ab3@29001>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D91C <AmiBlitz3.ab3@29005> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D91E <AmiBlitz3.ab3@29008> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D920 <AmiBlitz3.ab3@29012>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D922 <AmiBlitz3.ab3@29016>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D928 <AmiBlitz3.ab3@29019> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D92E <AmiBlitz3.ab3@29022> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D936 <AmiBlitz3.ab3@29026> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D93A <AmiBlitz3.ab3@29027>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D93C <AmiBlitz3.ab3@29031> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D940 <AmiBlitz3.ab3@29034> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D944 <AmiBlitz3.ab3@29037> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D948 <AmiBlitz3.ab3@29040> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D94C <AmiBlitz3.ab3@29041> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D950 <AmiBlitz3.ab3@29045>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D954 <AmiBlitz3.ab3@29047>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D956 <AmiBlitz3.ab3@29050> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D95A <AmiBlitz3.ab3@29053> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D95C <AmiBlitz3.ab3@29056> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D95E <AmiBlitz3.ab3@29057>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D960 <AmiBlitz3.ab3@29058>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D964 <AmiBlitz3.ab3@29059> 
0003D966 <AmiBlitz3.ab3@29060>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D968 <AmiBlitz3.ab3@29061>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D96A <AmiBlitz3.ab3@29062>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D970 <AmiBlitz3.ab3@29064>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D972 <AmiBlitz3.ab3@29069> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D974 <AmiBlitz3.ab3@29070>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D976 <AmiBlitz3.ab3@29074> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D97A <AmiBlitz3.ab3@29077> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D97C <AmiBlitz3.ab3@29080> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D97E <AmiBlitz3.ab3@29084>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D980 <AmiBlitz3.ab3@29087> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D984 <AmiBlitz3.ab3@29090> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D986 <AmiBlitz3.ab3@29091>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D98A <AmiBlitz3.ab3@29095> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D98E <AmiBlitz3.ab3@29096> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D992 <AmiBlitz3.ab3@29100> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D996 <AmiBlitz3.ab3@29104> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D99C <AmiBlitz3.ab3@29108> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D9A2 <AmiBlitz3.ab3@29111> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D9A6 <AmiBlitz3.ab3@29115> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D9AA <AmiBlitz3.ab3@29119>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D9AE <AmiBlitz3.ab3@29120>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D9B4 <AmiBlitz3.ab3@29125>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D9B8 <AmiBlitz3.ab3@29130>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D9BA <AmiBlitz3.ab3@29135>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D9BE <AmiBlitz3.ab3@29139>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D9C0 <AmiBlitz3.ab3@29143> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D9C2 <AmiBlitz3.ab3@29146> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D9C4 <AmiBlitz3.ab3@29147>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D9C8 <AmiBlitz3.ab3@29151>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D9CC <AmiBlitz3.ab3@29155> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D9D0 <AmiBlitz3.ab3@29158> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D9D2 <AmiBlitz3.ab3@29161> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D9D6 <AmiBlitz3.ab3@29164> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D9D8 <AmiBlitz3.ab3@29167> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D9E1 <AmiBlitz3.ab3@29171>                            Dc.b "ram:test",0
0003D9E2 <AmiBlitz3.ab3@29172> Even
0003D9E6 <AmiBlitz3.ab3@29176>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D9E8 <AmiBlitz3.ab3@29178>                            Dc.w  0
0003D9EC <AmiBlitz3.ab3@29181> _mathffpbase:              Ds.l 1                           ;maths org source
0003D9EE <AmiBlitz3.ab3@29182> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D9F0 <AmiBlitz3.ab3@29183> typelen:                   Ds.w 1
0003D9F4 <AmiBlitz3.ab3@29184> prevtype:                  Ds.l 1
0003D9F8 <AmiBlitz3.ab3@29185> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D9FA <AmiBlitz3.ab3@29186> lastchar:                  Ds.w 1
0003D9FE <AmiBlitz3.ab3@29187> thistype:                  Ds.l 1
0003DA02 <AmiBlitz3.ab3@29188> errstack:                  Ds.l 1
0003DA06 <AmiBlitz3.ab3@29189> errcont:                   Ds.l 1
0003DA08 <AmiBlitz3.ab3@29190> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003DA0A <AmiBlitz3.ab3@29191> linesleft:                 Ds.w 1
0003DA0E <AmiBlitz3.ab3@29192> sourceline:                Ds.l 1                          ;thisitem org source
0003DA12 <AmiBlitz3.ab3@29193> varbase:                   Ds.l 1                          ;firstvar org source
0003DA16 <AmiBlitz3.ab3@29194> alllocals:                 Ds.l 1
0003DA1A <AmiBlitz3.ab3@29195> firstlocal:                Ds.l 1
0003DA1E <AmiBlitz3.ab3@29196> firstglob:                 Ds.l 1
0003DA20 <AmiBlitz3.ab3@29197> globalvarpointer:          Ds.w 1                          ;varoff org source
0003DA22 <AmiBlitz3.ab3@29198> locvaroff:                 Ds.w 1
0003DA26 <AmiBlitz3.ab3@29199> firstitem_:                 Ds.l 1
0003DA28 <AmiBlitz3.ab3@29200> numlines_org:              Ds.w 1                          ;numlines org source
0003DA2A <AmiBlitz3.ab3@29201> returncode_org:            Ds.w 1                          ;returncode org source
0003DA2E <AmiBlitz3.ab3@29202> firstiff:                  Ds.l 1                          ;firstif org source
0003DA32 <AmiBlitz3.ab3@29203> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003DC32 <AmiBlitz3.ab3@29204> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003DC42 <AmiBlitz3.ab3@29205> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003DE42 <AmiBlitz3.ab3@29206> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E042 <AmiBlitz3.ab3@29207> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E242 <AmiBlitz3.ab3@29208> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E246 <AmiBlitz3.ab3@29210> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E446 <AmiBlitz3.ab3@29211> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E646 <AmiBlitz3.ab3@29213> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E64A <AmiBlitz3.ab3@29214> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E84A <AmiBlitz3.ab3@29215> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E84E <AmiBlitz3.ab3@29216> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EA4E <AmiBlitz3.ab3@29217> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003EC4E <AmiBlitz3.ab3@29219> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003EC52 <AmiBlitz3.ab3@29220> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003EE52 <AmiBlitz3.ab3@29222> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EE56 <AmiBlitz3.ab3@29228>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003EE5A <AmiBlitz3.ab3@29229>   Dc.b $00,$00,$00,$00
0003EE5E <AmiBlitz3.ab3@29230>   Dc.b $00,$19,$00,$11
0003EE62 <AmiBlitz3.ab3@29231>   Dc.b $00,$2E,$00,$18
0003EE66 <AmiBlitz3.ab3@29232>   Dc.b $00,$04,$00,$03
0003EE6A <AmiBlitz3.ab3@29233>   Dc.b $00,$01,$00,$22
0003EE6E <AmiBlitz3.ab3@29234>   Dc.b $73,$68,$00,$00
0003EE72 <AmiBlitz3.ab3@29235>   Dc.b $00,$00,$00,$00
0003EE76 <AmiBlitz3.ab3@29236>   Dc.b $00,$00,$00,$00
0003EE7A <AmiBlitz3.ab3@29237>   Dc.b $00,$00,$00,$00
0003EE7E <AmiBlitz3.ab3@29238>   Dc.b $00,$00,$00,$00
0003EE82 <AmiBlitz3.ab3@29239>   Dc.b $00,$00,$00,$00
0003EE86 <AmiBlitz3.ab3@29240>   Dc.b $03,$22,$00,$21
0003EE8A <AmiBlitz3.ab3@29241>   Dc.b $3C,$28,$00,$22
0003EE8E <AmiBlitz3.ab3@29242>   Dc.b $6E,$C0,$00,$00
0003EE92 <AmiBlitz3.ab3@29243>   Dc.b $00,$12,$00,$00
0003EE96 <AmiBlitz3.ab3@29244>   Dc.b $00,$0E,$00,$00
0003EE9A <AmiBlitz3.ab3@29245>   Dc.b $00,$00,$00,$00
0003EE9E <AmiBlitz3.ab3@29246>   Dc.b $00,$00,$00,$00
0003EEA2 <AmiBlitz3.ab3@29247>   Dc.b $00,$00,$00,$00
0003EEA6 <AmiBlitz3.ab3@29248>   Dc.b $00,$00,$00,$2E
0003EEAA <AmiBlitz3.ab3@29249>   Dc.b $00,$17,$00,$02
0003EEAE <AmiBlitz3.ab3@29250>   Dc.b $00,$01,$8E,$80
0003EEB2 <AmiBlitz3.ab3@29251>   Dc.b $03,$00,$00,$00
0003EEB6 <AmiBlitz3.ab3@29252>   Dc.b $00,$00,$FF,$FF
0003EEBA <AmiBlitz3.ab3@29253>   Dc.b $FF,$FF,$FF,$FC
0003EEBE <AmiBlitz3.ab3@29254>   Dc.b $80,$00,$00,$00
0003EEC2 <AmiBlitz3.ab3@29255>   Dc.b $00,$00,$80,$00
0003EEC6 <AmiBlitz3.ab3@29256>   Dc.b $00,$3F,$BB,$40
0003EECA <AmiBlitz3.ab3@29257>   Dc.b $80,$1F,$C0,$00
0003EECE <AmiBlitz3.ab3@29258>   Dc.b $00,$00,$80,$3F
0003EED2 <AmiBlitz3.ab3@29259>   Dc.b $C0,$0F,$BB,$40
0003EED6 <AmiBlitz3.ab3@29260>   Dc.b $80,$1F,$C0,$00
0003EEDA <AmiBlitz3.ab3@29261>   Dc.b $00,$00,$8E,$00
0003EEDE <AmiBlitz3.ab3@29262>   Dc.b $F8,$00,$00,$00
0003EEE2 <AmiBlitz3.ab3@29263>   Dc.b $8F,$01,$FF,$00
0003EEE6 <AmiBlitz3.ab3@29264>   Dc.b $3B,$40,$81,$E3
0003EEEA <AmiBlitz3.ab3@29265>   Dc.b $F7,$C0,$00,$00
0003EEEE <AmiBlitz3.ab3@29266>   Dc.b $80,$7F,$F8,$70
0003EEF2 <AmiBlitz3.ab3@29267>   Dc.b $3B,$40,$80,$0F
0003EEF6 <AmiBlitz3.ab3@29268>   Dc.b $7C,$E0,$00,$00
0003EEFA <AmiBlitz3.ab3@29269>   Dc.b $80,$00,$FD,$80
0003EEFE <AmiBlitz3.ab3@29270>   Dc.b $00,$00,$80,$01
0003EF02 <AmiBlitz3.ab3@29271>   Dc.b $F6,$00,$FB,$40
0003EF06 <AmiBlitz3.ab3@29272>   Dc.b $80,$03,$EF,$00
0003EF0A <AmiBlitz3.ab3@29273>   Dc.b $00,$00,$80,$07
0003EF0E <AmiBlitz3.ab3@29274>   Dc.b $87,$80,$3B,$40
0003EF12 <AmiBlitz3.ab3@29275>   Dc.b $80,$0F,$01,$C0
0003EF16 <AmiBlitz3.ab3@29276>   Dc.b $00,$00,$80,$03
0003EF1A <AmiBlitz3.ab3@29277>   Dc.b $F0,$70,$1D,$40
0003EF1E <AmiBlitz3.ab3@29278>   Dc.b $80,$00,$18,$1C
0003EF22 <AmiBlitz3.ab3@29279>   Dc.b $00,$00,$80,$00
0003EF26 <AmiBlitz3.ab3@29280>   Dc.b $10,$06,$03,$40
0003EF2A <AmiBlitz3.ab3@29281>   Dc.b $80,$00,$20,$1F
0003EF2E <AmiBlitz3.ab3@29282>   Dc.b $00,$00,$80,$00
0003EF32 <AmiBlitz3.ab3@29283>   Dc.b $00,$00,$01,$40
0003EF36 <AmiBlitz3.ab3@29284>   Dc.b $80,$00,$00,$00
0003EF3A <AmiBlitz3.ab3@29285>   Dc.b $00,$00,$80,$00
0003EF3E <AmiBlitz3.ab3@29286>   Dc.b $00,$00,$00,$00
0003EF42 <AmiBlitz3.ab3@29287>   Dc.b $00,$00,$00,$00
0003EF46 <AmiBlitz3.ab3@29288>   Dc.b $00,$00,$00,$00
0003EF4A <AmiBlitz3.ab3@29289>   Dc.b $00,$00,$00,$04
0003EF4E <AmiBlitz3.ab3@29290>   Dc.b $00,$3F,$FC,$01
0003EF52 <AmiBlitz3.ab3@29291>   Dc.b $BB,$44,$00,$60
0003EF56 <AmiBlitz3.ab3@29292>   Dc.b $FE,$00,$00,$04
0003EF5A <AmiBlitz3.ab3@29293>   Dc.b $00,$CF,$FF,$01
0003EF5E <AmiBlitz3.ab3@29294>   Dc.b $BB,$44,$1F,$EF
0003EF62 <AmiBlitz3.ab3@29295>   Dc.b $FF,$00,$00,$04
0003EF66 <AmiBlitz3.ab3@29296>   Dc.b $33,$FF,$FF,$E0
0003EF6A <AmiBlitz3.ab3@29297>   Dc.b $00,$04,$37,$FE
0003EF6E <AmiBlitz3.ab3@29298>   Dc.b $7F,$FC,$1B,$44
0003EF72 <AmiBlitz3.ab3@29299>   Dc.b $0F,$9C,$FF,$FF
0003EF76 <AmiBlitz3.ab3@29300>   Dc.b $00,$04,$03,$E3
0003EF7A <AmiBlitz3.ab3@29301>   Dc.b $FF,$FF,$DB,$44
0003EF7E <AmiBlitz3.ab3@29302>   Dc.b $00,$7F,$BF,$FF
0003EF82 <AmiBlitz3.ab3@29303>   Dc.b $80,$04,$00,$0F
0003EF86 <AmiBlitz3.ab3@29304>   Dc.b $3F,$FE,$00,$04
0003EF8A <AmiBlitz3.ab3@29305>   Dc.b $00,$06,$7F,$F8
0003EF8E <AmiBlitz3.ab3@29306>   Dc.b $1B,$44,$00,$0C
0003EF92 <AmiBlitz3.ab3@29307>   Dc.b $F7,$FC,$00,$04
0003EF96 <AmiBlitz3.ab3@29308>   Dc.b $00,$19,$F9,$FE
0003EF9A <AmiBlitz3.ab3@29309>   Dc.b $1B,$44,$00,$33
0003EF9E <AmiBlitz3.ab3@29310>   Dc.b $FE,$7F,$00,$04
0003EFA2 <AmiBlitz3.ab3@29311>   Dc.b $00,$0F,$FF,$BF
0003EFA6 <AmiBlitz3.ab3@29312>   Dc.b $CD,$44,$00,$03
0003EFAA <AmiBlitz3.ab3@29313>   Dc.b $EF,$EF,$F0,$04
0003EFAE <AmiBlitz3.ab3@29314>   Dc.b $00,$00,$7F,$DF
0003EFB2 <AmiBlitz3.ab3@29315>   Dc.b $FB,$44,$00,$00
0003EFB6 <AmiBlitz3.ab3@29316>   Dc.b $FF,$A7,$FC,$04
0003EFBA <AmiBlitz3.ab3@29317>   Dc.b $00,$00,$7E,$3F
0003EFBE <AmiBlitz3.ab3@29318>   Dc.b $FD,$44,$00,$00
0003EFC2 <AmiBlitz3.ab3@29319>   Dc.b $00,$00,$00,$04
0003EFC6 <AmiBlitz3.ab3@29320>   Dc.b $7F,$FF,$FF,$FF
0003EFCA <AmiBlitz3.ab3@29321>   Dc.b $FF,$FC,$00,$00
0003EFCE <AmiBlitz3.ab3@29322>   Dc.b $00,$01,$00,$00
0003EFD1 <AmiBlitz3.ab3@29323>   Dc.b $00,$00,$04
0003EFD7 <AmiBlitz3.ab3@29326> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F02F <AmiBlitz3.ab3@29327> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F030 <AmiBlitz3.ab3@29328> Even
0003F034 <AmiBlitz3.ab3@29330> sysdebug:            Dc.l $3F0
0003F038 <AmiBlitz3.ab3@29334> exelock              Ds.l 1
0003F03C <AmiBlitz3.ab3@29338> includesourceline    Dc.l 0
0003F040 <AmiBlitz3.ab3@29339> linenum              Ds.l 1
0003F044 <AmiBlitz3.ab3@29340> globallinecount      Ds.l 1
0003F062 <AmiBlitz3.ab3@29341> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F066 <AmiBlitz3.ab3@29342> calc_option          Dc.l 1
0003F06A <AmiBlitz3.ab3@29343> versioninformation   Dc.l $00
0003F06E <AmiBlitz3.ab3@29344> number_of_builds     Dc.l $00
0003F070 <AmiBlitz3.ab3@29345> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003F072 <AmiBlitz3.ab3@29346> rightsideflagmask    Ds.w 1
0003F074 <AmiBlitz3.ab3@29348> BSS
0003F076 <AmiBlitz3.ab3@29349> debugnest            Ds.w 1
0003F07A <AmiBlitz3.ab3@29350> instringf            Ds.l 1
0003F07E <AmiBlitz3.ab3@29351> funcscanon           Ds.l 1
0003F092 <AmiBlitz3.ab3@29352> storedebugmode       Ds.b 20
0003F096 <AmiBlitz3.ab3@29353> firsttimepref        Ds.l 1
0003F097 <AmiBlitz3.ab3@29354> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003F098 <AmiBlitz3.ab3@29355> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003F09A <AmiBlitz3.ab3@29356> nostringopt          Ds.w 1
0003F11A <AmiBlitz3.ab3@29357> path2:               Ds.l 32
0003F11E <AmiBlitz3.ab3@29358> typebase             Dc.l 0
0003F120 <AmiBlitz3.ab3@29359> doublepeek           Dc.w 0
0003F124 <AmiBlitz3.ab3@29360> lastoffset           Dc.l 0
0003F126 <AmiBlitz3.ab3@29361> firsttime            Dc.w 0
0003F12A <AmiBlitz3.ab3@29362> lastdestpointer      Dc.l 0
0003F12E <AmiBlitz3.ab3@29363> prevwritedat         Dc.l 0
0003F132 <AmiBlitz3.ab3@29364> lastsourceline       Dc.l 0
0003F136 <AmiBlitz3.ab3@29365> lastwritedat         Dc.l 0
0003F138 <AmiBlitz3.ab3@29366> makeexec             Dc.w 0
0003F13A <AmiBlitz3.ab3@29367> makeexec_remember    Dc.w 0
0003F13E <AmiBlitz3.ab3@29368> sharebase            Ds.l 1
0003F142 <AmiBlitz3.ab3@29369> tempa7               Ds.l 1
0003F144 <AmiBlitz3.ab3@29370> incnif               Ds.w 1
0003F148 <AmiBlitz3.ab3@29371> tempstore            Ds.l 1
0003F14C <AmiBlitz3.ab3@29372> result               Ds.l 1
0003F14E <AmiBlitz3.ab3@29373> automode             Ds.w 1
0003F150 <AmiBlitz3.ab3@29374> stackcorrect         Ds.w 1
0003F152 <AmiBlitz3.ab3@29375> formode              Ds.w 1
0003F156 <AmiBlitz3.ab3@29376> limitregs            Ds.l 1
0003F158 <AmiBlitz3.ab3@29377> onestep              Ds.w 1
0003F15C <AmiBlitz3.ab3@29378> reqmode              Ds.l 1
0003F1FC <AmiBlitz3.ab3@29379> inctab               Ds.l 40
0003F1FE <AmiBlitz3.ab3@29380> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003F202 <AmiBlitz3.ab3@29381> includeline          Ds.l 1
0003F206 <AmiBlitz3.ab3@29382> morememadd           Ds.l 1
0003F208 <AmiBlitz3.ab3@29383> objectcount          Ds.w 1
0003F20C <AmiBlitz3.ab3@29384> savefuncspace        Ds.l 1
0003F210 <AmiBlitz3.ab3@29385> lasttrap1            Ds.l 1
0003F214 <AmiBlitz3.ab3@29386> currentfunccall      Ds.l 1
0003F215 <AmiBlitz3.ab3@29387> skipfunc             Ds.b 1
0003F216 <AmiBlitz3.ab3@29388> resdisable           Ds.b 1
0003F217 <AmiBlitz3.ab3@29389> skiptoggle           Ds.b 1
0003F218 <AmiBlitz3.ab3@29390> developobject        Ds.b 1
0003F21A <AmiBlitz3.ab3@29391> iniffcommand         Ds.w 1
0003F21C <AmiBlitz3.ab3@29392> startoffsetmore      Ds.w 1
0003F21E <AmiBlitz3.ab3@29393> olddebugmode         Ds.w 1
0003F222 <AmiBlitz3.ab3@29394> fpucodeglobal        Ds.l 1
0003F226 <AmiBlitz3.ab3@29395> fpucodelocal         Ds.l 1
0003F22A <AmiBlitz3.ab3@29396> maxregs              Ds.l 1
0003F22E <AmiBlitz3.ab3@29397> fpucode              Ds.l 1
0003F230 <AmiBlitz3.ab3@29398> firstmline           Ds.w 1
0003F270 <AmiBlitz3.ab3@29399> regtable             Ds.l 16
0003F272 <AmiBlitz3.ab3@29400> exdebug              Ds.w 1
0003F274 <AmiBlitz3.ab3@29401> a2offset2            Ds.w 1
0003F278 <AmiBlitz3.ab3@29402> parnumtemp           Ds.l 1
0003F279 <AmiBlitz3.ab3@29403> doimmediate          Ds.b 1
0003F27A <AmiBlitz3.ab3@29404> notypecheck          Ds.b 1
0003F27C <AmiBlitz3.ab3@29405> vartype              Ds.w 1
0003F27D <AmiBlitz3.ab3@29406> peekaddrsize         Ds.b 1
0003F27E <AmiBlitz3.ab3@29407> declare2             Ds.b 1
0003F280 <AmiBlitz3.ab3@29408> parameternum         Ds.w 1
0003F284 <AmiBlitz3.ab3@29409> lasttoken            Ds.l 1
0003F286 <AmiBlitz3.ab3@29410> newvariable          Ds.w 1
0003F287 <AmiBlitz3.ab3@29411> declare              Ds.b 1
0003F288 <AmiBlitz3.ab3@29412> typecheck            Ds.b 1
0003F289 <AmiBlitz3.ab3@29413> nowdeclare           Ds.b 1
0003F28A <AmiBlitz3.ab3@29414> dimkeep              Ds.b 1
0003F28B <AmiBlitz3.ab3@29415> a4a5store            Ds.b 1
0003F28C <AmiBlitz3.ab3@29416> ___freetouse         Ds.b 1
0003F290 <AmiBlitz3.ab3@29417> firstiffstore        Ds.l 1
0003F294 <AmiBlitz3.ab3@29418> destpointer2         Ds.l 1
0003F298 <AmiBlitz3.ab3@29419> stackaddr            Ds.l 1
0003F39C <AmiBlitz3.ab3@29420> allowtab             Ds.b 260
0003F49C <AmiBlitz3.ab3@29421> templine             Ds.b 256
0003F49E <AmiBlitz3.ab3@29422> thenmode             Ds.w 1
0003F4A0 <AmiBlitz3.ab3@29423> temp                 Ds.w 1
0003F4A2 <AmiBlitz3.ab3@29424> tempregnum           Ds.w 1
0003F4A6 <AmiBlitz3.ab3@29426> numlines2            Ds.l 1
0003F4AA <AmiBlitz3.ab3@29427> numlines             Ds.l 1
0003F4AC <AmiBlitz3.ab3@29428> exmac                Ds.w 1
0003F4AE <AmiBlitz3.ab3@29429> returncode           Ds.w 1
0003F4B2 <AmiBlitz3.ab3@29430> fp0iff               Ds.l 1
0003F4B6 <AmiBlitz3.ab3@29431> fp0addr              Ds.l 1
0003F4B8 <AmiBlitz3.ab3@29432> fp0mode              Ds.w 1
0003F4BA <AmiBlitz3.ab3@29433> fp0var               Ds.w 1
0003F4BC <AmiBlitz3.ab3@29434> fastfunc             Ds.w 1
0003F4BE <AmiBlitz3.ab3@29435> retmode              Ds.w 1
0003F4C0 <AmiBlitz3.ab3@29436> parnum               Ds.w 1
0003F4C2 <AmiBlitz3.ab3@29437> regmask              Ds.w 1
0003F4C4 <AmiBlitz3.ab3@29438> regnumfunc           Ds.w 1
0003F4C6 <AmiBlitz3.ab3@29439> libmode              Ds.w 1
0003F4CA <AmiBlitz3.ab3@29440> oldline              Ds.l 1
0003F4CE <AmiBlitz3.ab3@29441> sourceline3          Ds.l 1
0003F596 <AmiBlitz3.ab3@29442> debugstore           Ds.b 200
0003F59A <AmiBlitz3.ab3@29443> deststore            Ds.l 1
0003F59E <AmiBlitz3.ab3@29445> loada                Ds.l 1
0003F5A2 <AmiBlitz3.ab3@29447> currtype             Ds.l 1
0003F5A6 <AmiBlitz3.ab3@29448> arrayoffset          Ds.l 1
0003F5AA <AmiBlitz3.ab3@29449> lastlabel            Ds.l 1
0003F5AE <AmiBlitz3.ab3@29450> curtemplabel         Ds.l 1
0003F5B2 <AmiBlitz3.ab3@29451> sourceline2          Ds.l 1
0003F6B2 <AmiBlitz3.ab3@29452> chartab              Ds.b 256
0003F72A <AmiBlitz3.ab3@29453> tempspace            Ds.b 120
000BF73A <AmiBlitz3.ab3@29454> instrtab             Ds.l 65538*2
000C773A <AmiBlitz3.ab3@29456> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E773E <AmiBlitz3.ab3@29457> replacedat           Ds.w 65538
000EF73E <AmiBlitz3.ab3@29458> variablehash         Ds.l 8192
000EF742 <AmiBlitz3.ab3@29459> newinitaddr          Ds.l 1
000EF746 <AmiBlitz3.ab3@29460> realbssend           Ds.l 1
000EF748 <AmiBlitz3.ab3@29461> saved0               Ds.w 1
000EF7C8 <AmiBlitz3.ab3@29462> lastpath             Ds.b 128
000EF848 <AmiBlitz3.ab3@29463> lastpath2            Ds.b 128
000EF910 <AmiBlitz3.ab3@29464> fpustackbase         Ds.w 100
000EF914 <AmiBlitz3.ab3@29465> 
000EF916 <AmiBlitz3.ab3@29466> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF91A <AmiBlitz3.ab3@29467> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF91E <AmiBlitz3.ab3@29468> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF922 <AmiBlitz3.ab3@29469> rightsidetype        Dc.l 0  ; same as above but right side
000EF926 <AmiBlitz3.ab3@29472> trap15temp           Ds.l 1
000EF92A <AmiBlitz3.ab3@29473> trap15temp2          Ds.l 1
000EF92E <AmiBlitz3.ab3@29474> templibend           Ds.l 1
000EF932 <AmiBlitz3.ab3@29475> tempdata1start       Ds.l 1
000EF936 <AmiBlitz3.ab3@29476> stacktrack           Ds.l 1
000EF93A <AmiBlitz3.ab3@29477> pad                  Ds.l 1
000EFA3A <AmiBlitz3.ab3@29478> includetemp          Ds.b 256
000F043A <AmiBlitz3.ab3@29479> includetemp2         Ds.b 256*10
000F043C <AmiBlitz3.ab3@29480> funccall             Ds.w 1
000F0440 <AmiBlitz3.ab3@29483> ptr_resfile          Ds.l 1
000F0442 <AmiBlitz3.ab3@29484> CalculatorButtonBinFlag:    Ds.w 1
000F0444 <AmiBlitz3.ab3@29485> CalculatorButtonDecFlag:    Ds.w 1
000F0448 <AmiBlitz3.ab3@29486> ped_startup_addr:    Ds.l 1
000F0449 <AmiBlitz3.ab3@29487> start_without_libs:  Ds.b 1
000F044A <AmiBlitz3.ab3@29488> skip_bytes:          Ds.b 1
000F044E <AmiBlitz3.ab3@29489> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F0452 <AmiBlitz3.ab3@29490> beforeparameterfetch Ds.l 1
000F0456 <AmiBlitz3.ab3@29491> typetocast           Ds.l 1
000F045A <AmiBlitz3.ab3@29492> errorcounter         Ds.l 1
000F045B <AmiBlitz3.ab3@29493> iserror              Ds.b 1
000F045C <AmiBlitz3.ab3@29494> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F0460 <AmiBlitz3.ab3@29497> CLIMode:             Dc.l 0
000F0464 <AmiBlitz3.ab3@29498> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F0468 <AmiBlitz3.ab3@29499> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
