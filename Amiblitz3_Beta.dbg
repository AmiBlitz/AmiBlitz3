00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000021C6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000021D0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
000021F8 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
000021FE <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002226 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002250 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000226E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
00002298 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002308 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002332 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002350 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000237A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
0000239A <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000023C6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000023D0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
000023EA <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002414 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000024C2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000024D8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
000024E2 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002514 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000251A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002520 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002526 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002538 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002542 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000255C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
0000259A <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000025A2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002650 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002664 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000026A6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000026C6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000026D0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
000026EC <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002726 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000272E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000027DC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002812 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002832 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002850 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002874 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000287E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
0000289A <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000028D4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002982 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
000029DA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
000029E0 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002A00 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002A0A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002A24 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002A3C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002A46 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002A62 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002A8C <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002A9A <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002B60 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002B8A <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002BB2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002BDC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002C06 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002C24 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002C4E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002CBA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002CE2 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002CF0 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002D24 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002D32 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002D54 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002D62 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002D86 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002DB0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002DF8 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002E22 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002E7A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002EA4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002EC2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002ED8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002EDE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00002EE8 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00002EF2 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00002F10 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00002F16 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
00002F1C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
00002F2C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00002F32 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
00002F3A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00002F62 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
00002F6C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00002F76 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
00002F8A <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
00002FA0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
00002FA6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
00002FCA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
00002FEE <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003018 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003044 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003046 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003074 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
0000309E <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003122 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
000031EA <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
000031F4 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000323E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
0000328A <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000032C2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000032D4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
000032EA <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
000032F0 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003306 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000333A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003340 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000334A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003364 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000033AE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
000033E4 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003408 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003412 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000343A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
00003482 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003558 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
00003582 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000035DC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
000035E2 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
000035E8 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
000035F0 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003626 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003634 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000363E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000366A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
00003682 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000036B0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000372E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
00003780 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
00003792 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003800 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003806 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003852 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003A00 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003A6C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003A72 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003A8E <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003A9C <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003AA2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003AB4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003ACA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003AD4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003AF0 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003B1A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003B2E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003B6C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003C52 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003C58 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003CA8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003CD2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003CF0 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003D1A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003D2E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003D6C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003E52 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003E58 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003ECA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00003EF4 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00003F12 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
00003F4C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
00003F84 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00003FDC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004040 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000406A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
0000408A <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000040B4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000040BA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000040D0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000040DA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
000040E0 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
000040F0 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
000040FA <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004114 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004142 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004164 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000416C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000417A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
00004194 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000041C2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000041D6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000420A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004224 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000422C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000423A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004254 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000427E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
0000428A <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000042AA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000042D0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
000042FC <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004314 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004322 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004328 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004334 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000433A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004346 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004356 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000435C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004368 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004372 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
0000438C <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
0000438C <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
0000439A <AmiBlitz3.ab3@81> If dos_FromCLI{}
000043A0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000043AC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000043AC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043D4 <common.ab3@40> XINCLUDE "/Shared/common.ab3"
000043DA <common.ab3@253> XINCLUDE "/Shared/common.ab3"
000043DC <common.ab3@254> XINCLUDE "/Shared/common.ab3"
0000456C <common.ab3@255> XINCLUDE "/Shared/common.ab3"
00004570 <common.ab3@256> XINCLUDE "/Shared/common.ab3"
00004574 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
00004578 <common.ab3@259> XINCLUDE "/Shared/common.ab3"
0000457C <common.ab3@261> XINCLUDE "/Shared/common.ab3"
00004580 <common.ab3@262> XINCLUDE "/Shared/common.ab3"
00004584 <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004588 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
0000458C <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004590 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004594 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004598 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000459C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000045A0 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000045A4 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000045A8 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000045AC <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000045B0 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000045B4 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045B8 <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000045BC <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045C0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000045D0 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045D4 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045DC <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045E0 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045E4 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000045E8 <common.ab3@292> XINCLUDE "/Shared/common.ab3"
000045EC <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000045F8 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
00004600 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
00004604 <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004608 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
0000460C <common.ab3@299> XINCLUDE "/Shared/common.ab3"
0000460E <common.ab3@301> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@305> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@309> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000472A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000472D <common.ab3@318> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@320> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@321> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@322> XINCLUDE "/Shared/common.ab3"
00004734 <common.ab3@324> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@327> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@331> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000474A <common.ab3@341> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004756 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@351> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004764 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@361> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@367> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@369> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@371> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@373> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@374> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000477C <common.ab3@376> XINCLUDE "/Shared/common.ab3"
0000477E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004780 <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004782 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004784 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004786 <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000478A <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000478C <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000047C4 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000047C8 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000047CA <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000047CC <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000047D0 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000047D4 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000047DD <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000047E0 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
0000480D <common.ab3@397> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004859 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048A9 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048B5 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004905 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004A01 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004A03 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004AC3 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004B03 <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004B05 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B06 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
00004B0A <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B0E <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B12 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B16 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B1A <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004B1E <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B22 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004B26 <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004B2A <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B2E <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004B32 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004B36 <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004B3A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004B3E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004B42 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004B58 <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B5C <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004B60 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B62 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004B64 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B82 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B86 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004B88 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004B8C <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004BC4 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004BE4 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004BE6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C3C <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CDE <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004CEA <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D14 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@517> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D47 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D48 <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D49 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D4C <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D50 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D58 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D60 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D64 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D65 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D68 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D6C <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D70 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004D78 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D7C <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D80 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004D84 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004D88 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004D8C <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D94 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004D98 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004D9C <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004DA0 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004DA3 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004DA7 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004DAB <common.ab3@556> XINCLUDE "/Shared/common.ab3"
00004DAF <common.ab3@557> XINCLUDE "/Shared/common.ab3"
00004DB3 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004DB4 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004DC9 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004DD2 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004DDE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004DEA <common.ab3@584> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@585> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DF6 <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004E02 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004E0E <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004E12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004E16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004E1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004E1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004E22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004E26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004E26 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004E26 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E26 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E44 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E4C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E7A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EAA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EBA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ECA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EEC <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F1C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F44 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F4A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F7C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8E <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9C <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE8 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FFA <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005044 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000504A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005078 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050D4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E2 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005126 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005134 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005144 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000514C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005184 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005232 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005268 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005276 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005314 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000538E <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000539C <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005412 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005480 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000054E4 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000553C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005582 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005588 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005616 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005626 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000563C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005642 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005648 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005660 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000056BC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EE <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005702 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005716 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005760 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005786 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000578C <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E4 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000057F2 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FC <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005828 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005850 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00005886 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FC <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005916 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005928 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005932 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005978 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005996 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A02 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A64 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A72 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A86 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B28 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B2E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B62 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BBE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BCE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE0 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C14 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C44 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C8E <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CA6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CFE <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D28 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DBA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DFE <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E24 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E66 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E84 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8A <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F80 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006038 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608A <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000060B2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006122 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006178 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006180 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F4 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FE <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006232 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000624E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000626A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006288 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006322 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639A <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F6 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000063FC <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006406 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000640C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000643A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006440 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006460 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000648C <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00006496 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000064CA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000064E2 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EA <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006568 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658E <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006628 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006652 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000665C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006680 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000066CA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006710 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000067AA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006822 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006832 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006838 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006844 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006872 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006884 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068AE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000068BE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E8 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006910 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000691A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006990 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A26 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A40 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A74 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A8E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE2 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B0C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B16 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B24 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B96 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C00 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C22 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C40 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C74 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C84 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C88 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D08 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D18 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D50 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E14 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E30 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E68 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E84 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F10 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F48 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F64 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F80 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007028 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007044 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007060 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007098 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EC <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007108 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007124 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007140 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007178 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007194 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E8 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007204 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007220 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007258 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007274 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007290 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E4 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007300 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007338 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007354 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007370 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E0 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007418 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007434 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007450 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007488 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007514 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007530 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007568 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007584 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007610 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007648 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007664 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007680 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007728 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007744 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007760 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007798 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EC <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007808 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007824 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007840 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007878 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007894 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E8 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007904 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007920 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007958 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007974 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007990 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E4 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A00 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A38 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A54 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A70 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE0 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B18 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B2A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE2 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BEC <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF6 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C48 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C64 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C72 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CCE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D4E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D54 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D62 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEA <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFE <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E56 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E92 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E98 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE6 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F04 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F12 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F66 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F74 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F7A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFA <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008008 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008062 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008076 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F0 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008112 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008142 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008170 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000081CC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F2 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008214 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000825C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008284 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008292 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E0 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F0 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008306 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008344 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008360 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008372 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083DC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F2 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F8 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008420 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E0 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008516 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008526 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008534 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000853A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000854A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008574 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000857A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E4 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F2 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008660 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008670 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868E <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869C <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008700 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000872E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008734 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000873A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008756 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008776 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008784 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878A <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879A <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008828 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008842 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008866 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008894 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008904 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008940 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008974 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E0 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F0 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A52 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A76 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEA <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B14 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B24 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B4C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B54 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFE <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C26 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C90 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF2 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D30 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D72 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D7C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DCA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DE2 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E40 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE6 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF0 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF6 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F12 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F36 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00008F3E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00008F6C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
00008F9A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000900A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009018 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009068 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009068 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009068 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000908C <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000090B4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000090D8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009106 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009324 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009352 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000937E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000093BA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000093E6 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009412 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000943E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000946A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009496 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000094C2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000094EE <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000951A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000095A4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000962E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000096CC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009716 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009756 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000975C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000097A6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
000097E6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009810 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009816 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000986A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
00009894 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
0000989E <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000098BC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000098DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
0000990C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009968 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
000099AE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
000099F4 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009A3A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009A72 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009B70 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009B8E <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009B98 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009BBE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009BD0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009BFE <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009C26 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009C38 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009C8E <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009CC4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009CD4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009CDA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009CEC <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009CF6 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009D30 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009D36 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009D8E <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009DAC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009DB2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009DC2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009DD2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009DE2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009DF2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009E02 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009E36 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009E5E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009E68 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009E7A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009EB4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009EBE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009EE8 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
00009F00 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
00009F52 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
00009F80 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A058 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A0EA <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A104 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A104 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A11A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A130 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A146 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A15C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A168 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A174 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A180 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A18C <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A1B4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A1DC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A204 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A228 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A24C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A276 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A278 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A27A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A27E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A280 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A284 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A28C <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A28E <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A290 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A296 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A298 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A29A <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A2A4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A2C4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A2E2 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A2E8 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A302 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A31E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A344 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A364 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A36E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A3D6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A3DC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A416 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A434 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A43A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A458 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A45E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A480 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A4A0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A4D8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A4F4 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A4FA <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A50C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A528 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A574 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A57A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A5B4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A5DC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A5E2 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A64A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A678 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A67E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A69C <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A6F8 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A73E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A748 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A74E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A768 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A77A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A7D8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A812 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A84C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A86A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A89E <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A8BA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A8D4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000A952 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000A964 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000A97A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000A9A4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000A9AE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000A9C2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000A9F0 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AA0A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AA1C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AA3C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AA52 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AA8A <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000AAB4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AAF6 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AB0C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AB54 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AB74 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ABBA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ABC6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ABD0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000ABE2 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000ABE8 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000ABF6 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AC1E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AC32 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AC5A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AC6E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AC96 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ACAA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ACD2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ACD4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000ACF8 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AD30 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000ADBA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000ADE2 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AE12 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AE4A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AEA2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000AEFA <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000AF7A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000AFAE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000AFE2 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000AFE8 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000AFF6 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B02A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B052 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B10A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B18A <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B1BE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B1DE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B1E4 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B1EA <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B2BA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B2CE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B386 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B406 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B4F6 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B500 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B534 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B554 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B55A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B560 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B630 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B644 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B678 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B6A0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B758 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B7D8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B80C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B82C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B832 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B838 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000B908 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000B91C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000B9D4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BA54 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BA88 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BAA8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BAAE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BAB4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BB84 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BB8A <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BBC4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BBC6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BBCC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BC64 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BC76 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BC8C <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BD60 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BD7A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BDB4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BDCE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BDD8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BDF4 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BE1C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BE42 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BE5E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BE70 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BECE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000BF06 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000BF0C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000BF54 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000BF6E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000BF7C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000BF82 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C086 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C08C <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C0D2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C0DE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C144 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C18A <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C1D2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C23A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C240 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C27A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C280 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C2E2 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C2EC <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C300 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C31A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C320 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C346 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C362 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C3C0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C3C4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C3E6 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C3EC <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C408 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C428 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C4B4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C4F0 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C4F6 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C526 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C52C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C544 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C5A2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C5DA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C5E0 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C628 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C642 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C674 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C67A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C6D8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C720 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C72A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C730 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C74A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C750 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C7D6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C7E0 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C7E6 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C80C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C812 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C838 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C898 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C8B2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C8BC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C8D6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000C8E0 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000C8F8 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000C928 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000C944 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000C952 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000C992 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000C99C <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000C9A2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000C9C0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000C9C6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000C9D8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CA04 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CA3A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CA4C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CA96 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CB80 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CB9E <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CBC4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CBE0 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CC0C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CC16 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CC44 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CC5E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CC7A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CC80 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CCBA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CCC0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CCC6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CCCC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CD6C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CD72 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CE14 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CE1A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CE54 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CE5E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CE64 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CE7E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CEA2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CEBC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CEDC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000CF90 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000CF96 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000CF9C <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000CFD2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000CFD8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000CFF2 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000CFFA <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D002 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D018 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D030 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D042 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D04E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D054 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D05C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D094 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D0A6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D0CA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D0DC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D0E8 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D0EE <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D0FE <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D12E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D17A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D180 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D1AA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D1C2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D1F0 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D204 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D21A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D23A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D250 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D25A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D274 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D296 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D2AE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D2D0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D2D6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D308 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D31C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D334 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D34C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D36C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D39C <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D3CC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D3DE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D3E6 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D410 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D41A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D434 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D44E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D4D6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D4F0 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D502 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D538 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D54A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D552 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D57A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D580 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D5A8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D5B8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D5CC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D5E2 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D5F2 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D60C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D636 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D63E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D63E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D6DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D6E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D6EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D728 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D75A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D798 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DB08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DB16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DB1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DDAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DDC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DE02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DE54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DE62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DEB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DEBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000DF38 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000DFAC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000DFD2 <AmiBlitz3.ab3@90> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
0000DFD2 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFD2 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFD2 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFD2 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFFA <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E014 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E01E <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E030 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E054 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E062 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E06E <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E072 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E090 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E0AA <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E0CA <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E0D4 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E0E2 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E0EE <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E0FC <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E108 <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E114 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E126 <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E136 <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E140 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E146 <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E160 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E16A <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E174 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E18E <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E1A0 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E1B6 <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E1C0 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E1C6 <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E1CA <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E1E0 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E1E6 <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E1F0 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E226 <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E230 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E234 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E262 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E262 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E27C <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E286 <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E2AE <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E2D0 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E2EC <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E2FC <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E300 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E31A <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E33A <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E344 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E35E <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E36C <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E37A <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E388 <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E396 <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E3A2 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E3B0 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E3BE <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E3CC <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E3DA <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E3F4 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E402 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E412 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E422 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E432 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E440 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E44A <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E450 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E46E <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E474 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E49E <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E4EA <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E4F4 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E506 <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E532 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E548 <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E560 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E56C <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E572 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E5AA <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E5B0 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E5B6 <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E5C0 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E5C6 <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E5F8 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E612 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E62A <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E63E <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E68E <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E6AE <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E6C2 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E6D0 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E6DC <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E6E4 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E6EC <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E6F4 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E6FC <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E702 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E710 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E732 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E75E <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E770 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E776 <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E79E <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E7EA <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E81E <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E82E <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E838 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E85A <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E860 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E880 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E886 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E88E <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E8C8 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E8EE <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E906 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E93A <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E950 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000E956 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E97A <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E9A0 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E9A6 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9B4 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9C2 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000E9FC <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EA22 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA3A <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA46 <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA52 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EA5E <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EA76 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA80 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAA2 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EAE0 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EAE6 <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EB4C <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000EB8C <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000EBE2 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000EC54 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000EC6E <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000ECB4 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000ECFE <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000ED36 <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000ED8A <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000ED90 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000ED96 <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000EDA4 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EDAC <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EDE6 <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EE0C <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EE24 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EE5A <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EE70 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EE7E <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EE96 <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EECE <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000EEF4 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000EF3C <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000EF42 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000EF5C <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EF68 <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EF9A <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EFAE <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EFBC <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000EFC4 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EFFE <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F024 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F03C <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F076 <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F0A0 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F0B8 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F0E8 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F114 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F130 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F13E <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F14C <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F1C6 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F232 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F28E <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F2D6 <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F2F0 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F338 <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F356 <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F38E <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F39A <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F3A0 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F3CC <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F3E4 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F3FE <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F40C <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F41A <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F428 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F430 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F45C <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F484 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F4AC <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F518 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F528 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F554 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F5AA <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F5B8 <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F5C6 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F5CC <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F620 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F740 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F790 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F7E6 <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F852 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F85A <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F894 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F8BA <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F8D2 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F90C <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F936 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F94E <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F972 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000F9C6 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F9D4 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FA36 <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FA7E <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FA8C <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FA9A <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FAA8 <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FAB6 <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FAFA <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FB66 <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FB94 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FBA8 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FBDA <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FC24 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FC34 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FC68 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FC8A <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FC9A <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FCA2 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FCE6 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FD52 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FD80 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FDA4 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FDE8 <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FE54 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FE82 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FEB0 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FEE6 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FF58 <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FF5E <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FF8C <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FFFE <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0001001C <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010040 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
00010058 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0001005E <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010064 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
00010066 <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010070 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0001009C <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000100BE <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000100C6 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000100CC <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000100DA <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010114 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001013A <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010152 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
0001018C <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000101CE <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000101E6 <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
0001021E <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
00010226 <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010260 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010272 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
00010298 <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000102D4 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000102E8 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010300 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010312 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001031C <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010330 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001034A <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
00010368 <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001037A <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
00010398 <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000103D4 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
000103F0 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010410 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001041A <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010420 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001042A <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
00010436 <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
0001043C <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001046A <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010492 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000104D2 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000104EA <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010530 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001055A <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
00010588 <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
000105A2 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
000105AA <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000105C2 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000105CC <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000105DE <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
00010616 <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010624 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010630 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
0001064C <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
0001066E <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
00010690 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000106B2 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000106D4 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
000106F0 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
0001070E <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010722 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
00010728 <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001072A <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010730 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001073A <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010740 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
0001075E <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010764 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
00010788 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
000107A6 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000107D4 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
00010802 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010830 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
0001085E <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
00010892 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000108A2 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000108AC <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000108B2 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000108B2 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
000108FC <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
0001091C <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010926 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
0001093A <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010980 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
000109C6 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010A0C <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010A16 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010A32 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010A5C <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010ADA <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010B58 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010BD6 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010C54 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010CD2 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010D50 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010DCE <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010E4C <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010ECA <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00010F48 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
00010FCC <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00010FFC <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011058 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011084 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001114E <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001115C <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
0001119A <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001121E <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011248 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011266 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011280 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001128A <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
00011296 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000112A6 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000112B6 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000112C6 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000112D6 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000112DA <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011318 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011370 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000113CC <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011456 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000114D4 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000114EE <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001151C <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011558 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011626 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000116F4 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011740 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000117BE <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001183C <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
0001189A <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011930 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011968 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
000119C6 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011A4E <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011A56 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011AC0 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011B2C <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011B6A <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011BF2 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011C1E <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011C7A <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011D42 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011DA6 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011DAC <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011DE0 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011EAE <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00011F7C <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
00011FA6 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
00011FC4 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00011FF2 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001202E <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
0001209E <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000120A6 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000120F8 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012120 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012138 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000121EC <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000121FA <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012250 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000122AE <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000122B4 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012338 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000123BC <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012440 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000124BE <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001253C <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000125BA <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012638 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000126B6 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012734 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000127B2 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000127DC <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000127FA <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012828 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001286C <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012872 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001288C <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000128A8 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000128DC <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012900 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012928 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012994 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
000129F2 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012A50 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012A9C <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012AF6 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012AFC <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012B02 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012B0C <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012B16 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012B30 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012B5E <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012B64 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012BA8 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012BC2 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012BD2 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012BDC <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012BE8 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012BF2 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012C16 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012C5E <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012CA6 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012CEE <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012D04 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012D18 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012D22 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012D2C <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012D46 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012D70 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012DB4 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012DCE <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012E2C <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012E46 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012E68 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012E84 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012E92 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012E9E <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012EEA <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00012F3C <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
00012F8E <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00012FA2 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
00012FB2 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
00012FB8 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
00012FBA <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
00012FC0 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
00012FCA <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
00012FD4 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00012FEE <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013018 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001302E <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013038 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000130B0 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000130EC <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000130FC <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001311C <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001313C <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001315C <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013192 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000131BA <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000131F2 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013256 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013276 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000132F2 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001332A <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000133A0 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000133C0 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001343C <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013474 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000134EA <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001350A <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013586 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000135B2 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000135BA <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013600 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013620 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001362A <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013642 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013652 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001368A <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000136BC <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000136CE <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013750 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001375A <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001378C <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000137BE <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000137EA <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013816 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013838 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013842 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001385C <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001385C <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013872 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001388E <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
00013890 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000138BE <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000138BE <AmiBlitz3.ab3@93> XINCLUDE "translation.include.ab3"
000138BE <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000138D8 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000138E2 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013904 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
0001391C <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013936 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013968 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013972 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013978 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001398A <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
000139FE <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013A04 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013A3E <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013A48 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013A4E <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013A64 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013A6E <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013A86 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013A88 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013AB6 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013AD0 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013AE6 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013B1A <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013B1E <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013B38 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013B4E <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013B82 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013B86 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013BA0 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013BB6 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013BEA <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013BEE <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013C08 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013C1E <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013C52 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013C56 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013C70 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013C86 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013CBA <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013CBE <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013CBE <AmiBlitz3.ab3@94> XINCLUDE "/Shared/ted.include.ab3"
00013CBE <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013CD4 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013CEA <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013CF8 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013D06 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013D10 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013D22 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013D34 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013D3A <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013D74 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013D78 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013D8E <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013DA4 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013DB0 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013DBC <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013DC4 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013DCC <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013DD0 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013DFA <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013E26 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013E38 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013E50 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013E66 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013E6C <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013EDA <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013F12 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013F4A <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013F82 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013FBA <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001402A <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014062 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
0001409A <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000140D2 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001410A <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014142 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001414C <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014156 <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014160 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001418A <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00014194 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
00014198 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000141CC <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000141D2 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001420C <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014212 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
00014228 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014232 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014238 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001424E <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014254 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00014292 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
00014296 <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000142A0 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
000142A2 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000142E6 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000142F0 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000142F6 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001434A <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
0001434E <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
00014356 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
00014394 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
00014396 <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
0001439A <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143D8 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00014492 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
000144A6 <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
0001450C <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
0001453C <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
0001456E <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001467A <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014684 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0001469E <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000146BC <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000146CA <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000146D0 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000146F2 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
0001470A <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014730 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001475A <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014768 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
0001476E <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014782 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0001479A <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000147A8 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000147BC <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000147F2 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
00014800 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014830 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001483E <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014844 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014852 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014858 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001485E <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001486C <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001486E <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014874 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001488A <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014894 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001489A <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000148C4 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014902 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014906 <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014948 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001498A <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014992 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
0001499A <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
000149DE <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000149F0 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000149FE <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014A32 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014A56 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014A60 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014A7A <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014A8E <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014AE6 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014B86 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014B8E <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014BC6 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014BCC <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014BDC <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014C04 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014C2C <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014C34 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014C3A <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014C42 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014C4A <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014C7A <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014C82 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014C8E <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014C9A <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014CA0 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014CA6 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014CAC <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014CB2 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014CBA <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014CC2 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014CEA <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014CF0 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014CF6 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014CFE <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014D1E <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014D2E <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014D5E <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014D6E <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014D7E <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014D8E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014D9E <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014DAE <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014DBE <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014DCE <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014DDE <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014DEE <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014E0E <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014E1E <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014E30 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014E42 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014E54 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014E78 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014E8A <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014EA8 <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014EAE <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014EB4 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014EDE <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014EF0 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014F24 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014F3C <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014F88 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014F9A <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014FF0 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015062 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
00015068 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
0001509C <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000150C4 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000150EC <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
00015126 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
0001513E <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000151C2 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000151DC <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001522A <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001523A <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015242 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00015256 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001529C <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000152A2 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000152EC <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00015356 <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000153BC <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000153F0 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001541C <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001546A <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001548E <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015494 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000154A2 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
00015500 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001555E <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00015588 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015592 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001559A <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000155D8 <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015624 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
00015636 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0001568C <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00015704 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001570A <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
0001573E <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
00015766 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
0001579C <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000157AA <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000157B8 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0001582C <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015832 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
0001587C <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000158C6 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000158F6 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00015926 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015950 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
000159A2 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000159F8 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015A48 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015AAE <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015B1A <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015B46 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015B76 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015BF2 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015C22 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015C52 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015C82 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015CB2 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015CE2 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015D12 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015D42 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015D72 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015DA2 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015DD2 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015E4E <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015E80 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015EB2 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015EE2 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015EE8 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015F5C <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015FC8 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015FDA <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00016008 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016030 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016044 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001606E <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
000160B2 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000160C2 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000160D2 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000160D8 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000160E8 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000160F6 <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00016100 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
00016138 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016170 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
000161A8 <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
000161B8 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016220 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00016258 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
00016268 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00016278 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000162E0 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00016348 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000163B0 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00016418 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016480 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000164E8 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016550 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000165B8 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000165C8 <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016600 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001663A <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016674 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000166AC <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000166C8 <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016700 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
00016726 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
0001672E <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00016736 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
0001673E <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00016746 <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001675A <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00016788 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
000167A2 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
000167B0 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001681C <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016842 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
0001685E <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00016868 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016872 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
0001687E <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
0001688C <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00016898 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000168D4 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000168EE <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
000168FC <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
0001691C <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
0001692A <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016938 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001693E <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001694E <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016952 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016986 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
000169BA <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000169BE <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000169F2 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
000169F6 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016A2A <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016A30 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016A66 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016A9C <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016AD2 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016B42 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016BE2 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016C22 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016C58 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016C8E <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016CC6 <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016CE4 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016CE8 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016CEE <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016CF4 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016D22 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016D74 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016DA8 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016DDE <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016E64 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016E68 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016E9E <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016ECC <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016EFA <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016EFE <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016F34 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016F62 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016F66 <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016FCA <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016FD0 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
0001700A <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00017014 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
0001701E <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00017038 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017062 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00017068 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00017088 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00017092 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00017096 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00017098 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000170B6 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000170B8 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000170BE <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000170C4 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
000170EE <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
000170F0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0001711E <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017122 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017150 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017154 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001717A <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001718A <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00017190 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00017196 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000171DA <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000171F4 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
0001720E <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017238 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
00017266 <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000172F6 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
00017300 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
00017314 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017350 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
0001738C <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000173C8 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00017404 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017440 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00017446 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017480 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001748C <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000174A8 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000174C6 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000174CC <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000174F6 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000174F8 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00017502 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00017508 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001751A <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00017550 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
0001756A <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001757E <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000175E8 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000175EE <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
00017658 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001766C <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
000176D6 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001770C <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
00017712 <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
0001777C <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
00017790 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000177C6 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
000177CC <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017802 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00017816 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017880 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017886 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000178F0 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00017904 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
0001793A <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00017940 <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017976 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00017990 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
000179A4 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
00017A0E <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00017A14 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00017A7E <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017A92 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017AFC <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017B02 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017B6C <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00017B80 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017BEA <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017BF0 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017C5A <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00017C6E <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017CD8 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017CDE <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017D48 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00017D52 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00017DBC <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00017DC2 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00017E2C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00017E36 <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00017EA0 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00017ED6 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017EDC <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017F46 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017F7C <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00017F84 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017FB2 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017FB6 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
00017FDE <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00017FE4 <CLIModeSupport.ab3@691> XINCLUDE "CLIModeSupport.ab3"
00017FEA <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00017FF0 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00017FF6 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00017FFC <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00018006 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00018010 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001803E <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
0001806A <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00018072 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
000180A6 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
000180B8 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001811E <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00018184 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
0001818A <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00018192 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00018194 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
000181B2 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
000181F0 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
0001822E <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00018234 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001823A <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00018240 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00018250 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00018256 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
0001825C <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00018262 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00018266 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00018270 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00018274 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
0001829E <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
000182A0 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000182A6 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
000182AA <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
000182B0 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000182B4 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
000182C4 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
0001831E <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00018330 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
0001839A <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000183A0 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000183EA <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
000183FC <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00018428 <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
000184CE <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
000184F2 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001851C <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00018526 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00018558 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00018572 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00018586 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00018592 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000185AC <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000185B6 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
000185D0 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000185FA <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
0001861E <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
0001865C <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00018660 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
0001869E <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000186A2 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
000186E0 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0001871E <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
00018720 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00018754 <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
0001875A <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
0001879E <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000187B0 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
000187B8 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000187BE <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
000187C8 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000187D6 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
000187DC <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00018804 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
0001881E <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00018828 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
0001882E <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
0001884C <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018856 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
0001885C <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018862 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
0001886C <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
0001887A <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018880 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018890 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
000188BC <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
000188D2 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
000188DC <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
000188E2 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
0001893A <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
000189A8 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
000189C0 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
000189C6 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
000189FE <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018A2C <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018A56 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018A60 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018A88 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018AB2 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00018B54 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018B62 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00018BB2 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018BC2 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018C8A <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018CBE <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00018CF2 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018D26 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018D5A <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00018D8E <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018DC2 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018DF6 <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00018E2A <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00018E2C <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00018E6A <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00018E6E <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00018EAC <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00018EEA <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00018EEC <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00018EF2 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00018EF6 <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00018EF8 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00018F36 <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
00018F74 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
00018F76 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
00018F78 <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
00018F7A <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00018F80 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00018F84 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00018F94 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00018FAC <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00018FC4 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00018FDC <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
00019006 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
00019030 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
0001905E <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
00019062 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
0001908A <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
0001908C <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
000190CA <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
000190CE <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
0001910C <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
00019110 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
0001914E <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
00019152 <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
00019190 <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
00019194 <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
000191BA <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
000191E0 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
00019206 <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
0001922C <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
00019252 <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
000192A8 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
000192FE <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
0001934C <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
000193A2 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
000193C8 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
000193EE <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
00019414 <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
0001946A <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000194B8 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
00019506 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
000195C0 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00019616 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
0001963C <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00019662 <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
00019688 <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
000196DE <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00019734 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00019782 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
000197D0 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
0001981E <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
0001986C <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000198BA <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019908 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00019956 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
0001997C <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
000199A2 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
000199C8 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
00019A16 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00019A64 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00019ABA <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00019B08 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019B56 <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019BA4 <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
00019BCA <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019BF0 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019C16 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00019C4E <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019C76 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019C8A <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019CFE <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019D44 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019DF2 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019E5E <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019E6E <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019E94 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019E9E <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019EC8 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019ECE <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019EDE <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019F7E <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00019FBE <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
00019FC4 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
0001A026 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
0001A030 <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
0001A03A <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
0001A054 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0001A076 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
0001A098 <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
0001A0F2 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
0001A114 <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
0001A16E <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
0001A1B0 <CLIModeSupport.ab3@1017> XINCLUDE "CLIModeSupport.ab3"
0001A1B6 <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
0001A1C4 <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
0001A1CA <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
0001A1DE <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
0001A1E8 <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
0001A262 <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
0001A26C <CLIModeSupport.ab3@1026> XINCLUDE "CLIModeSupport.ab3"
0001A272 <CLIModeSupport.ab3@1027> XINCLUDE "CLIModeSupport.ab3"
0001A286 <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
0001A290 <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
0001A310 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
0001A31A <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
0001A320 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
0001A334 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
0001A33E <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
0001A386 <CLIModeSupport.ab3@1039> XINCLUDE "CLIModeSupport.ab3"
0001A390 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001A396 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
0001A3AA <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
0001A3B4 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001A3FC <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001A406 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
0001A40C <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001A420 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
0001A446 <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
0001A45A <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001A480 <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
0001A494 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001A4BA <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
0001A4CE <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001A4D8 <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001A506 <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
0001A556 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
0001A576 <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
0001A58E <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
0001A672 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
0001A67C <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
0001A682 <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001A684 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001A698 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001A6CA <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001A6D0 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001A714 <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001A726 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
0001A738 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001A742 <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001A748 <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
0001A752 <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
0001A76C <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
0001A76C <AmiBlitz3.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001A7EC <AmiBlitz3.ab3@100> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001A824 <AmiBlitz3.ab3@101> If dynassign <> ""
0001A83A <AmiBlitz3.ab3@102>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001A844 <AmiBlitz3.ab3@103>     If *AssignSema
0001A854 <AmiBlitz3.ab3@104>       ObtainSemaphoreShared_ *AssignSema
0001A85A <AmiBlitz3.ab3@105>     Else                                                        ; no, create one...
0001A87A <AmiBlitz3.ab3@106>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A884 <AmiBlitz3.ab3@107>       If *AssignSema
0001A894 <AmiBlitz3.ab3@108>         InitSemaphore_ *AssignSema
0001A8C8 <AmiBlitz3.ab3@110>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A8DA <AmiBlitz3.ab3@111>         If *AssignSema\ss_Link\ln_Name
0001A916 <AmiBlitz3.ab3@112>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001A922 <AmiBlitz3.ab3@114>         *AssignSema\ss_Link\ln_Pri  = 1
0001A92E <AmiBlitz3.ab3@115>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001A93E <AmiBlitz3.ab3@117>         AddSemaphore_ *AssignSema
0001A94E <AmiBlitz3.ab3@118>         ObtainSemaphoreShared_ *AssignSema
0001A99A <AmiBlitz3.ab3@124>   mydir.s = dos_GetProgDir{"Sys:"}
0001A9FA <AmiBlitz3.ab3@125>   If dos_SetAssign{dynassign,mydir,False}
0001AA8E <AmiBlitz3.ab3@126>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001AAC6 <AmiBlitz3.ab3@129>   Poke$ ?str_blitz3assign,dynassign
0001AB48 <AmiBlitz3.ab3@130>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001ABCA <AmiBlitz3.ab3@133>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001AC4C <AmiBlitz3.ab3@134>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001ACCE <AmiBlitz3.ab3@135>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001AD50 <AmiBlitz3.ab3@136>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001ADC4 <AmiBlitz3.ab3@137>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001AE38 <AmiBlitz3.ab3@138>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001AEAC <AmiBlitz3.ab3@139>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001AEDA <AmiBlitz3.ab3@140>   dos_CreateDir{my_blitzlibsdir$}
0001AEFE <AmiBlitz3.ab3@141>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001AF2C <AmiBlitz3.ab3@142>   dos_CreateDir{my_residentsdir$}
0001AF5A <AmiBlitz3.ab3@143>   dos_CreateDir{my_systemdir$}
0001B024 <AmiBlitz3.ab3@149> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B05C <AmiBlitz3.ab3@150> Poke.s ?str_pedfile,pedfile$
0001B09A <AmiBlitz3.ab3@152> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B0AA <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,1
0001B0B0 <AmiBlitz3.ab3@154> Else
0001B0C0 <AmiBlitz3.ab3@155>   Poke.b ?start_without_libs,0
0001B0E6 <AmiBlitz3.ab3@158> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B0F2 <AmiBlitz3.ab3@162> dbg_fid.l = -1 ; no debug file id yet!
0001B0FC <AmiBlitz3.ab3@164> If CLIMode
0001B102 <AmiBlitz3.ab3@167>   err.l      = False                                       ; indicate that an error has occured
0001B108 <AmiBlitz3.ab3@168>   showhelp.l = False                                       ; show the CLI tool's help
0001B160 <AmiBlitz3.ab3@171>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001B188 <AmiBlitz3.ab3@172>   cli_sourcefile.s   = ""
0001B1B0 <AmiBlitz3.ab3@173>   cli_exefile.s      = ""
0001B1D8 <AmiBlitz3.ab3@174>   cli_savefile.s     = ""
0001B200 <AmiBlitz3.ab3@175>   cli_dumpfile.s     = ""
0001B228 <AmiBlitz3.ab3@176>   cli_includepath.s  = ""
0001B250 <AmiBlitz3.ab3@177>   cli_blitzlibpath.s = ""
0001B256 <AmiBlitz3.ab3@178>   cli_debuginfo.l    = False
0001B25C <AmiBlitz3.ab3@179>   cli_run.l          = False
0001B264 <AmiBlitz3.ab3@180>   cli_dumpflags.l    = $FFFFFFFF
0001B28C <AmiBlitz3.ab3@181>   cli_info.s         = ""
0001B292 <AmiBlitz3.ab3@182>   cli_release.l      = False
0001B29C <AmiBlitz3.ab3@183>   cli_numargs.l      = dos_GetNumArgs{}
0001B2A2 <AmiBlitz3.ab3@184>   cli_gui.l          = False
0001B2AA <AmiBlitz3.ab3@185>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001B2B2 <AmiBlitz3.ab3@186>   cli_verbose.l      = 1
0001B2BA <AmiBlitz3.ab3@187>   cli_comdbgflags.l  = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001B2D2 <AmiBlitz3.ab3@188>   If cli_numargs=0 Then showhelp=True
0001B302 <AmiBlitz3.ab3@192>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001B34E <AmiBlitz3.ab3@193>     larg.s = LCase$(arg)                                   ; lower case the option string
0001B416 <AmiBlitz3.ab3@194>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001B44C <AmiBlitz3.ab3@195>     Select larg
0001B498 <AmiBlitz3.ab3@196>       Case "s" : larg="source"
0001B4EA <AmiBlitz3.ab3@197>       Case "e" : larg="exe"
0001B53C <AmiBlitz3.ab3@198>       Case "d" : larg="debug"
0001B58E <AmiBlitz3.ab3@199>       Case "r" : larg="release"
0001B5E0 <AmiBlitz3.ab3@200>       Case "h" : larg="help"
0001B632 <AmiBlitz3.ab3@201>       Case "v" : larg="verbose"
0001B640 <AmiBlitz3.ab3@202>     End Select
0001B676 <AmiBlitz3.ab3@204>     Select larg
0001B6CA <AmiBlitz3.ab3@205>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001B724 <AmiBlitz3.ab3@206>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001B77E <AmiBlitz3.ab3@207>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001B7AE <AmiBlitz3.ab3@208>       Case "debug"    : cli_debuginfo   = True
0001B7DE <AmiBlitz3.ab3@209>       Case "run"      : cli_run         = True
0001B80E <AmiBlitz3.ab3@210>       Case "release"  : cli_release     = True
0001B83E <AmiBlitz3.ab3@211>       Case "ped"      : cli_gui         = True
0001B898 <AmiBlitz3.ab3@212>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001B90A <AmiBlitz3.ab3@213>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001B93A <AmiBlitz3.ab3@214>                         cli_dumpfile    = dos_GetNextArg{}
0001B942 <AmiBlitz3.ab3@215>                         cli_dumpflags   = $0
0001B9A2 <AmiBlitz3.ab3@216>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001BA02 <AmiBlitz3.ab3@217>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001BA62 <AmiBlitz3.ab3@218>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001BAC2 <AmiBlitz3.ab3@219>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001BB22 <AmiBlitz3.ab3@220>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001BB82 <AmiBlitz3.ab3@221>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001BBE2 <AmiBlitz3.ab3@222>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001BC42 <AmiBlitz3.ab3@223>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001BCA2 <AmiBlitz3.ab3@224>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001BCB4 <AmiBlitz3.ab3@225>                         If cli_dumpflags = $0
0001BCBA <AmiBlitz3.ab3@226>                          err=True
0001BD4E <AmiBlitz3.ab3@227>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001BDC0 <AmiBlitz3.ab3@230>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001BDC8 <AmiBlitz3.ab3@231>                         cli_comflags.l  = $0
0001BE28 <AmiBlitz3.ab3@232>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001BE88 <AmiBlitz3.ab3@233>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001BEE8 <AmiBlitz3.ab3@234>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001BF48 <AmiBlitz3.ab3@235> 
0001BFA8 <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001BFC2 <AmiBlitz3.ab3@237>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001BFC8 <AmiBlitz3.ab3@238>                           err=True                                                                ; no
0001C05C <AmiBlitz3.ab3@239>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C062 <AmiBlitz3.ab3@240>                         Else
0001C070 <AmiBlitz3.ab3@241>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C0E2 <AmiBlitz3.ab3@244>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C0EA <AmiBlitz3.ab3@245>                         cli_dbgflags.l  = $0
0001C14A <AmiBlitz3.ab3@246>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C1AA <AmiBlitz3.ab3@247>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C20A <AmiBlitz3.ab3@248>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001C26A <AmiBlitz3.ab3@249>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001C284 <AmiBlitz3.ab3@250>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001C28A <AmiBlitz3.ab3@251>                           err=True                                                                ; no
0001C31E <AmiBlitz3.ab3@252>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001C324 <AmiBlitz3.ab3@253>                         Else
0001C332 <AmiBlitz3.ab3@254>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001C38C <AmiBlitz3.ab3@257>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001C3BC <AmiBlitz3.ab3@258>       Case "h"        : showhelp        = True             ; show the help and quit
0001C3C2 <AmiBlitz3.ab3@259>       Default
0001C3FA <AmiBlitz3.ab3@260>         If arg><""
0001C48E <AmiBlitz3.ab3@261>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001C494 <AmiBlitz3.ab3@262>           err = True
0001C4A2 <AmiBlitz3.ab3@264>     End Select
0001C4EE <AmiBlitz3.ab3@265>   Until arg = "" OR err=True          ; until we processed all arguments
0001C510 <AmiBlitz3.ab3@268>   If err><False OR showhelp = True
0001C51A <AmiBlitz3.ab3@269>     If showhelp
0001C57C <AmiBlitz3.ab3@270>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001C5B4 <AmiBlitz3.ab3@271>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001C5EC <AmiBlitz3.ab3@272>     NPrint "\\nOptions:"
0001C624 <AmiBlitz3.ab3@273>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001C65C <AmiBlitz3.ab3@274>     NPrint "  -(e)xe <file>       : output executable filename"
0001C694 <AmiBlitz3.ab3@275>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001C6CC <AmiBlitz3.ab3@276>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001C704 <AmiBlitz3.ab3@277>     NPrint "  -run                : run compiled program"
0001C73C <AmiBlitz3.ab3@278>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001C774 <AmiBlitz3.ab3@279>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001C7AC <AmiBlitz3.ab3@280>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001C7E4 <AmiBlitz3.ab3@281>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001C81C <AmiBlitz3.ab3@282>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001C854 <AmiBlitz3.ab3@283>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001C88C <AmiBlitz3.ab3@284>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001C8C4 <AmiBlitz3.ab3@285>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001C8FC <AmiBlitz3.ab3@286>     NPrint "  -(h)elp             : show this help"
0001C934 <AmiBlitz3.ab3@287>     NPrint "\\nExample:"
0001C96C <AmiBlitz3.ab3@288>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001C9A4 <AmiBlitz3.ab3@289>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001C9AA <AmiBlitz3.ab3@292>     Goto abnormal_exit
0001C9C6 <AmiBlitz3.ab3@295>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001CA2A <AmiBlitz3.ab3@296>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001CA3A <AmiBlitz3.ab3@299> Poke.l ?CLIMode,CLIMode
0001CA5E <AmiBlitz3.ab3@330>   Dim incdim.s (#maxincludes)
0001CA82 <AmiBlitz3.ab3@331>   Dim incline.l(#maxincludes)
0001CA9C <AmiBlitz3.ab3@599> Function.s Get_Libinfo{addr_libnum.l}
0001CAA8 <AmiBlitz3.ab3@601>   lib_ab2.b = False : lib_os.b = False
0001CAAE <AmiBlitz3.ab3@602>   addr_counter.l = addr_libnum
0001CAB6 <AmiBlitz3.ab3@603>   skip.l = 0
0001CAC8 <AmiBlitz3.ab3@604>   If addr_counter=0
0001CB02 <AmiBlitz3.ab3@605>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001CB20 <AmiBlitz3.ab3@606>     Function Return ""
0001CB2E <AmiBlitz3.ab3@611>     mem.l = Peek.l(addr_counter)
0001CB3C <AmiBlitz3.ab3@616>     addr_counter + 2
0001CB5C <AmiBlitz3.ab3@617>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001CB76 <AmiBlitz3.ab3@618>     If (mem LSR 16) = $ffe2
0001CB7C <AmiBlitz3.ab3@620>       lib_os = True
0001CB84 <AmiBlitz3.ab3@621>       skip = 10
0001CBCA <AmiBlitz3.ab3@622>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001CC0E <AmiBlitz3.ab3@624>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001CC24 <AmiBlitz3.ab3@626>   If (addr_counter>addr_libnum + $400)
0001CC42 <AmiBlitz3.ab3@628>     Function Return ""
0001CC48 <AmiBlitz3.ab3@629>   Else
0001CC6C <AmiBlitz3.ab3@630>     Function Return Peek$(addr_counter + skip)
0001CC76 <AmiBlitz3.ab3@632> End Function
0001CC94 <AmiBlitz3.ab3@672>   !asm
0001CC9A <AmiBlitz3.ab3@673>   MOVEA.l _execbase,A6
0001CC9E <AmiBlitz3.ab3@674>   MOVEM.l d0/a0,-(a7)
0001CCA0 <AmiBlitz3.ab3@676>   MOVEQ #127,d0
0001CCA6 <AmiBlitz3.ab3@677>   LEA chartab,a0
0001CCAC <AmiBlitz3.ab3@680>     MOVE.b #1,128(a0)
0001CCAE <AmiBlitz3.ab3@681>     CLR.b (a0)+
0001CCB2 <AmiBlitz3.ab3@682>   DBF d0,'l12
0001CCB8 <AmiBlitz3.ab3@684>   LEA chartab,a0
0001CCBC <AmiBlitz3.ab3@685>   MOVE.b #1,(a0)
0001CCC2 <AmiBlitz3.ab3@686>   MOVE.b #1,","(a0)
0001CCC8 <AmiBlitz3.ab3@687>   MOVE.b #1,";"(a0)
0001CCCE <AmiBlitz3.ab3@688>   MOVE.b #1,":"(a0)
0001CCD4 <AmiBlitz3.ab3@689>   MOVE.b #1,"("(a0)
0001CCDA <AmiBlitz3.ab3@690>   MOVE.b #1,")"(a0)
0001CCE0 <AmiBlitz3.ab3@691>   MOVE.b #1,"="(a0)
0001CCE6 <AmiBlitz3.ab3@692>   MOVE.b #1,"+"(a0)
0001CCEC <AmiBlitz3.ab3@693>   MOVE.b #1,"-"(a0)
0001CCF2 <AmiBlitz3.ab3@694>   MOVE.b #1,"*"(a0)
0001CCF8 <AmiBlitz3.ab3@695>   MOVE.b #1,"/"(a0)
0001CCFE <AmiBlitz3.ab3@696>   MOVE.b #1,"$"(a0)
0001CD04 <AmiBlitz3.ab3@697>   MOVE.b #1,"%"(a0)
0001CD0A <AmiBlitz3.ab3@698>   MOVE.b #1,"."(a0)
0001CD10 <AmiBlitz3.ab3@699>   MOVE.b #1,"["(a0)
0001CD16 <AmiBlitz3.ab3@700>   MOVE.b #1,"]"(a0)
0001CD1C <AmiBlitz3.ab3@701>   MOVE.b #1,"{"(a0)
0001CD22 <AmiBlitz3.ab3@702>   MOVE.b #1,"}"(a0)
0001CD28 <AmiBlitz3.ab3@703>   MOVE.b #1,"\"(a0)
0001CD2E <AmiBlitz3.ab3@704>   MOVE.b #1,">"(a0)
0001CD34 <AmiBlitz3.ab3@705>   MOVE.b #1,"<"(a0)
0001CD3A <AmiBlitz3.ab3@706>   MOVE.b #1,"&"(a0)
0001CD40 <AmiBlitz3.ab3@707>   MOVE.b #1,"|"(a0)
0001CD46 <AmiBlitz3.ab3@708>   MOVE.b #1,"^"(a0)
0001CD4C <AmiBlitz3.ab3@709>   MOVE.b #1,$7e(a0)
0001CD52 <AmiBlitz3.ab3@710>   MOVE.w #$0101,1(a0)
0001CD58 <AmiBlitz3.ab3@712>   LEA instrtab,a0
0001CD5E <AmiBlitz3.ab3@713>   MOVE.l #labelhash-instrtab,d0
0001CD60 <AmiBlitz3.ab3@714>   ASR.l #2,d0
0001CD62 <AmiBlitz3.ab3@715>   SUBQ.l #1,d0
0001CD64 <AmiBlitz3.ab3@718>    CLR.l (a0)+
0001CD66 <AmiBlitz3.ab3@719>    SUBQ.l #1,d0
0001CD6A <AmiBlitz3.ab3@720>   BNE 'l10
0001CD70 <AmiBlitz3.ab3@722>   LEA allowtab,a0
0001CD76 <AmiBlitz3.ab3@723>   MOVE.l #255,d0
0001CD78 <AmiBlitz3.ab3@726>     CLR.b (a0)+
0001CD7C <AmiBlitz3.ab3@727>   DBF d0,'la1
0001CD82 <AmiBlitz3.ab3@729>   LEA allowtab,a0
0001CD88 <AmiBlitz3.ab3@730>   MOVE.b #1,$7d(a0)
0001CD8E <AmiBlitz3.ab3@731>   MOVE.b #1,$7c(a0)
0001CD94 <AmiBlitz3.ab3@732>   MOVE.b #1,$44(a0)
0001CD9A <AmiBlitz3.ab3@733>   MOVE.b #1,$45(a0)
0001CDA0 <AmiBlitz3.ab3@734>   MOVE.b #1,$b9(a0)
0001CDA6 <AmiBlitz3.ab3@735>   MOVE.b #1,$89(a0)
0001CDAC <AmiBlitz3.ab3@736>   MOVE.b #1,$ce(a0)
0001CDB2 <AmiBlitz3.ab3@737>   MOVE.b #1,$cf(a0)
0001CDB8 <AmiBlitz3.ab3@738>   MOVE.b #1,$d0(a0)
0001CDBE <AmiBlitz3.ab3@739>   MOVE.b #1,$cd(a0)
0001CDC0 <AmiBlitz3.ab3@740>   MOVEQ #0,d0
0001CDC6 <AmiBlitz3.ab3@742>   MOVEA.l _execbase,a6
0001CDCC <AmiBlitz3.ab3@747>   MOVE.l #$10000,d0
0001CDD2 <AmiBlitz3.ab3@748>   MOVE.l #80000,d1
0001CDD4 <AmiBlitz3.ab3@749>   MOVE.l d1,d2
0001CDD8 <AmiBlitz3.ab3@750>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001CDDE <AmiBlitz3.ab3@751>   MOVE.l d0,mempool
0001CDE2 <AmiBlitz3.ab3@752>   MOVEM.l (a7)+,d0/a0
0001CDE8 <AmiBlitz3.ab3@753>   TST.l mempool
0001CDEC <AmiBlitz3.ab3@754>   BEQ shutdown_compiler
0001CDF0 <AmiBlitz3.ab3@756>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001CDF6 <AmiBlitz3.ab3@757>   MOVE.l A4,ptr_ThisTask
0001CDFA <AmiBlitz3.ab3@759>   BSR.w open_doslibrary
0001CDFE <AmiBlitz3.ab3@760>   BEQ.w shutdown_compiler
0001CE04 <AmiBlitz3.ab3@762>   MOVE.l D2,stacksize
0001CE06 <AmiBlitz3.ab3@766>   MOVEQ.l #$00,D0
0001CE0C <AmiBlitz3.ab3@767>   LEA tokens,A0
0001CE0E <AmiBlitz3.ab3@770>     ADDQ.w #1,D0
0001CE10 <AmiBlitz3.ab3@771>     MOVE.l (A0),D1
0001CE14 <AmiBlitz3.ab3@772>     BEQ.w JL_0_2D1C
0001CE16 <AmiBlitz3.ab3@773>     MOVEA.l D1,A0
0001CE1A <AmiBlitz3.ab3@774> BRA.w JL_0_2D0E
0001CE20 <AmiBlitz3.ab3@777>   MOVE.l A0,end_of_tokenlist
0001CE24 <AmiBlitz3.ab3@779>   BSR.w makeasmtable
0001CE2C <AmiBlitz3.ab3@780>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001CE30 <AmiBlitz3.ab3@782>   BSR.w open_mathlibrary
0001CE34 <AmiBlitz3.ab3@783>   BEQ.w freemem_and_quit4
0001CE3A <AmiBlitz3.ab3@785>   MOVE.l constmaxpc,D0
0001CE3C <AmiBlitz3.ab3@786>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001CE42 <AmiBlitz3.ab3@787>   MOVEA.l _execbase,A6
0001CE46 <AmiBlitz3.ab3@788>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001CE4C <AmiBlitz3.ab3@789>   MOVE.l D0,constpcat
0001CE50 <AmiBlitz3.ab3@790>   BEQ.w freemem_and_quit3
0001CE56 <AmiBlitz3.ab3@791>   ADD.l constmaxpc,D0
0001CE5C <AmiBlitz3.ab3@792>   MOVE.l D0,constlibat
0001CE62 <AmiBlitz3.ab3@794>   MOVE.l macrobuffer_size,D0
0001CE68 <AmiBlitz3.ab3@795>   CMP.l #40000,d0
0001CE6C <AmiBlitz3.ab3@796>   BGE 'ok
0001CE72 <AmiBlitz3.ab3@797>     MOVE.l #40000,d0
0001CE78 <AmiBlitz3.ab3@798>     MOVE.l d0,macrobuffer_size
0001CE7A <AmiBlitz3.ab3@801>   ADDQ.l #4,d0
0001CE7C <AmiBlitz3.ab3@802>   MOVEQ.l #$01,D1
0001CE82 <AmiBlitz3.ab3@803>   MOVEA.l _execbase,A6
0001CE86 <AmiBlitz3.ab3@804>   JSR _AllocMem(A6)                                        ;macro mem
0001CE88 <AmiBlitz3.ab3@805>   MOVE.l d0,a0
0001CE8E <AmiBlitz3.ab3@806>   MOVE.l macrobuffer_size,(a0)+
0001CE90 <AmiBlitz3.ab3@807>   MOVE.l a0,d0
0001CE96 <AmiBlitz3.ab3@808>   MOVE.l D0,ptr_macrobuffer_begin
0001CE9A <AmiBlitz3.ab3@809>   BEQ.w freemem_and_quit2
0001CEA0 <AmiBlitz3.ab3@810>   ADD.l macrobuffer_size,D0
0001CEA6 <AmiBlitz3.ab3@811>   MOVE.l D0,ptr_macrobuffer_end
0001CEAC <AmiBlitz3.ab3@813>   TST.l CLIMode
0001CEB0 <AmiBlitz3.ab3@814>   BEQ load_ped
0001CEDA <AmiBlitz3.ab3@817>   !basic
0001CEE4 <AmiBlitz3.ab3@818>   succ.l = InitEmulatedPED{}
0001CEE8 <AmiBlitz3.ab3@819>   GetD0 succ
0001CF06 <AmiBlitz3.ab3@820>   !asm
0001CF08 <AmiBlitz3.ab3@821>   TST.l d0
0001CF0C <AmiBlitz3.ab3@822>   BEQ freemem_and_quit
0001CF12 <AmiBlitz3.ab3@823> JMP skip_ped
0001CF18 <AmiBlitz3.ab3@828>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001CF1E <AmiBlitz3.ab3@829>   MOVEA.l _dosbase,A6
0001CF22 <AmiBlitz3.ab3@830>   JSR _LoadSeg(A6)
0001CF28 <AmiBlitz3.ab3@831>   MOVE.l D0,ptr_seg_ped
0001CF2C <AmiBlitz3.ab3@833>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001CF2E <AmiBlitz3.ab3@837>   MOVEA.l D0,A2
0001CF30 <AmiBlitz3.ab3@838>   ADDA.l A2,A2
0001CF32 <AmiBlitz3.ab3@839>   ADDA.l A2,A2
0001CF38 <AmiBlitz3.ab3@841>   LEA teddata,a1                                           ;lea edstruct,A1
0001CF3E <AmiBlitz3.ab3@842>   MOVE.l #"TEDY",d1
0001CF42 <AmiBlitz3.ab3@843>   JSR 4(A2)                                                ; Run PED
0001CF48 <AmiBlitz3.ab3@845>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001CF4E <AmiBlitz3.ab3@846>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001CF8C <AmiBlitz3.ab3@848>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001CF90 <AmiBlitz3.ab3@849>   BEQ.w unload_ped
0001CF94 <AmiBlitz3.ab3@850> 
0001CF98 <AmiBlitz3.ab3@851>   BNE old_version_of_PED                                   ; no, than exit
0001CFD6 <AmiBlitz3.ab3@857>   !ComData_GetL{comData_Magic,D0}
0001CFDC <AmiBlitz3.ab3@858>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001CFE0 <AmiBlitz3.ab3@859>   BNE unload_ped
0001D018 <AmiBlitz3.ab3@862>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001D050 <AmiBlitz3.ab3@863>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001D088 <AmiBlitz3.ab3@864>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001D0C0 <AmiBlitz3.ab3@865>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001D0F8 <AmiBlitz3.ab3@866>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001D130 <AmiBlitz3.ab3@867>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001D168 <AmiBlitz3.ab3@868>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001D1A0 <AmiBlitz3.ab3@869>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001D1D8 <AmiBlitz3.ab3@870>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001D210 <AmiBlitz3.ab3@871>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001D248 <AmiBlitz3.ab3@872>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001D280 <AmiBlitz3.ab3@873>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001D2B8 <AmiBlitz3.ab3@876>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001D2F0 <AmiBlitz3.ab3@877>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001D328 <AmiBlitz3.ab3@880>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001D360 <AmiBlitz3.ab3@881>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001D398 <AmiBlitz3.ab3@883>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001D3D0 <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001D408 <AmiBlitz3.ab3@886>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001D440 <AmiBlitz3.ab3@887>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001D478 <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001D4B0 <AmiBlitz3.ab3@890>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001D4E8 <AmiBlitz3.ab3@891>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001D520 <AmiBlitz3.ab3@892>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001D558 <AmiBlitz3.ab3@893>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001D590 <AmiBlitz3.ab3@894>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001D5C8 <AmiBlitz3.ab3@895>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001D600 <AmiBlitz3.ab3@896>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001D638 <AmiBlitz3.ab3@897>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001D670 <AmiBlitz3.ab3@898>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001D6A8 <AmiBlitz3.ab3@899>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001D6E0 <AmiBlitz3.ab3@900>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001D718 <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001D750 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001D788 <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001D78E <AmiBlitz3.ab3@907>   CLR.w returncode_org
0001D7B8 <AmiBlitz3.ab3@909>   !basic
0001D7C2 <AmiBlitz3.ab3@910>   If CLIMode
0001D834 <AmiBlitz3.ab3@911>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001D852 <AmiBlitz3.ab3@913>   !asm
0001D858 <AmiBlitz3.ab3@917>   TST.b start_without_libs
0001D85C <AmiBlitz3.ab3@918>   BNE skip_loading_libs
0001D860 <AmiBlitz3.ab3@919>     BSR.w call_setpointerbusy
0001D86A <AmiBlitz3.ab3@920>     MOVE.l #$FFFFffff,linenumat
0001D86E <AmiBlitz3.ab3@921>     BSR.w get_libraries
0001D874 <AmiBlitz3.ab3@922>     JSR init_libraries
0001D878 <AmiBlitz3.ab3@923>     BSR.w init_buffers
0001D87C <AmiBlitz3.ab3@924>     BSR.w call_setpointernormal
0001D87E <AmiBlitz3.ab3@929>   MOVEQ.l #-$01,D0
0001D884 <AmiBlitz3.ab3@930>   MOVEA.l _execbase,A6
0001D888 <AmiBlitz3.ab3@931>   JSR _AllocSignal(A6)
0001D88E <AmiBlitz3.ab3@932>   MOVE.l D0,signalNum
0001D890 <AmiBlitz3.ab3@933>   MOVEQ.l #$00,D1
0001D892 <AmiBlitz3.ab3@934>   BSET D0,D1
0001D898 <AmiBlitz3.ab3@935>   MOVE.l D1,signals
0001D89E <AmiBlitz3.ab3@939>   MOVE.l #str_defaultdbug,D1
0001D8A2 <AmiBlitz3.ab3@940>   MOVEA.l _dosbase(PC),A6
0001D8A6 <AmiBlitz3.ab3@941>   JSR _LoadSeg(A6)
0001D8AC <AmiBlitz3.ab3@942>   MOVE.l D0,ptr_seg_debugger
0001D8AE <AmiBlitz3.ab3@943>   TST.l d0
0001D8B2 <AmiBlitz3.ab3@944>   BNE ok_12
0001D8DC <AmiBlitz3.ab3@945>     !basic
0001D93E <AmiBlitz3.ab3@946>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001D95C <AmiBlitz3.ab3@947>     !asm
0001D962 <AmiBlitz3.ab3@950>   TST.l CLIMode
0001D966 <AmiBlitz3.ab3@951>   BEQ run_ped
0001D990 <AmiBlitz3.ab3@957>   !basic
0001D996 <AmiBlitz3.ab3@958>   err.l = False
0001D9C2 <AmiBlitz3.ab3@966>   If cli_sourcefile
0001D9E2 <AmiBlitz3.ab3@967>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001D9EC <AmiBlitz3.ab3@968>     If lock
0001DA10 <AmiBlitz3.ab3@969>       NameFromLock_ lock,&cli_tempstr,1024
0001DA3A <AmiBlitz3.ab3@970>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001DA4A <AmiBlitz3.ab3@971>       UnLock_ lock
0001DA76 <AmiBlitz3.ab3@974>     If cli_exefile
0001DAC8 <AmiBlitz3.ab3@975>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001DB20 <AmiBlitz3.ab3@976>       path.s = dos_PathPart{cli_exefile}
0001DB40 <AmiBlitz3.ab3@977>       lock.l = Lock_(&path,#ACCESS_READ)
0001DB4A <AmiBlitz3.ab3@978>       If lock
0001DB6E <AmiBlitz3.ab3@979>         NameFromLock_ lock,&cli_tempstr,1024
0001DB98 <AmiBlitz3.ab3@980>         path.s = Peek.s(&cli_tempstr)
0001DC46 <AmiBlitz3.ab3@981>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001DC56 <AmiBlitz3.ab3@982>         UnLock_ lock
0001DCA0 <AmiBlitz3.ab3@993>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001DD14 <AmiBlitz3.ab3@994> 
0001DD1E <AmiBlitz3.ab3@995>   *PreProcessor.preprocessor = preproc_Create{}
0001DD2E <AmiBlitz3.ab3@996>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001DD60 <AmiBlitz3.ab3@997>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001DD74 <AmiBlitz3.ab3@998>   If *PreProcessor\tokens=#NULL
0001DDEE <AmiBlitz3.ab3@999>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001DDF8 <AmiBlitz3.ab3@1000>     preproc_QueryTokens{*PreProcessor}
0001DE2A <AmiBlitz3.ab3@1001>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001DE76 <AmiBlitz3.ab3@1009>   If cli_sourcefile><"" AND err=False
0001DF1C <AmiBlitz3.ab3@1010>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001DF4E <AmiBlitz3.ab3@1011>     succ=LoadSource{cli_sourcefile}
0001DF58 <AmiBlitz3.ab3@1012>     If succ
0001DF90 <AmiBlitz3.ab3@1013> 
0001E00A <AmiBlitz3.ab3@1014>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001E048 <AmiBlitz3.ab3@1015> 
0001E052 <AmiBlitz3.ab3@1017>         If comerr
0001E058 <AmiBlitz3.ab3@1019>         Else
0001E05E <AmiBlitz3.ab3@1023>     Else
0001E0AE <AmiBlitz3.ab3@1024>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001E0FA <AmiBlitz3.ab3@1028>   If cli_savefile><"" AND err=False
0001E174 <AmiBlitz3.ab3@1029>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001E1A2 <AmiBlitz3.ab3@1030>     SaveSource{cli_savefile}
0001E1EE <AmiBlitz3.ab3@1033>   If cli_dumpfile><"" AND err=False
0001E238 <AmiBlitz3.ab3@1034>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001E26E <AmiBlitz3.ab3@1035>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001E278 <AmiBlitz3.ab3@1038>   If cli_run
0001E28C <AmiBlitz3.ab3@1039>     If comerr=False
0001E2B8 <AmiBlitz3.ab3@1040>       If cli_exefile
0001E332 <AmiBlitz3.ab3@1041>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001E364 <AmiBlitz3.ab3@1042> 
0001E3AE <AmiBlitz3.ab3@1044>       If cli_verbose>=1 Then NPrint "Running program..."
0001E3B8 <AmiBlitz3.ab3@1045> 
0001E3BA <AmiBlitz3.ab3@1047>         CLR.l d0
0001E3F8 <AmiBlitz3.ab3@1048>         !ComData_GetB{comByte_RunningFlag,D0}
0001E3FC <AmiBlitz3.ab3@1049>         running.l = PutD0
0001E418 <AmiBlitz3.ab3@1050>         If running Then Delay_ 50
0001E42C <AmiBlitz3.ab3@1052>       Until running=False
0001E440 <AmiBlitz3.ab3@1053>       If Peek.l(?_runerror)
0001E490 <AmiBlitz3.ab3@1054>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001E4A2 <AmiBlitz3.ab3@1065>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001E4EC <AmiBlitz3.ab3@1066>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001E4F2 <AmiBlitz3.ab3@1067>   DeinitEmulatedPED{}
0001E510 <AmiBlitz3.ab3@1069>   !asm
0001E516 <AmiBlitz3.ab3@1070> JMP terminate_ab3
0001E51C <AmiBlitz3.ab3@1075>   MOVEA.l ped_startup_addr,A1
0001E522 <AmiBlitz3.ab3@1076>   LEA str_tempfilename,A0
0001E524 <AmiBlitz3.ab3@1077>   JSR (A1)
0001E52A <AmiBlitz3.ab3@1084>   MOVE.l signalNum,D0
0001E530 <AmiBlitz3.ab3@1085>   MOVEA.l _execbase,A6
0001E534 <AmiBlitz3.ab3@1086>   JSR _FreeSignal(A6)
0001E53A <AmiBlitz3.ab3@1088>   MOVE.l ptr_seg_debugger,D1
0001E53E <AmiBlitz3.ab3@1089>   BEQ.b skip_unload_debugger
0001E542 <AmiBlitz3.ab3@1090>     MOVEA.l _dosbase(PC),A6
0001E546 <AmiBlitz3.ab3@1091>     JSR _UnLoadSeg(A6)
0001E54A <AmiBlitz3.ab3@1094>   BSR.w Aclearallvars
0001E54E <AmiBlitz3.ab3@1095>   BSR.w free_residents
0001E554 <AmiBlitz3.ab3@1096>   JSR free_blitzlibs
0001E55A <AmiBlitz3.ab3@1099>   MOVE.l ptr_seg_ped,D1
0001E55E <AmiBlitz3.ab3@1100>   BEQ freemem_and_quit
0001E562 <AmiBlitz3.ab3@1101>   MOVEA.l _dosbase(PC),A6
0001E566 <AmiBlitz3.ab3@1102>   JSR _UnLoadSeg(A6)
0001E56A <AmiBlitz3.ab3@1103>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001E594 <AmiBlitz3.ab3@1106>   !basic
0001E658 <AmiBlitz3.ab3@1107> 
0001E676 <AmiBlitz3.ab3@1108>   !asm
0001E67A <AmiBlitz3.ab3@1109>   BRA freemem_and_quit
0001E6A4 <AmiBlitz3.ab3@1112>   !basic
0001E768 <AmiBlitz3.ab3@1113>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001E786 <AmiBlitz3.ab3@1114>   !asm
0001E78A <AmiBlitz3.ab3@1118>   BSR.w freeallox
0001E790 <AmiBlitz3.ab3@1119>   MOVEA.l ptr_macrobuffer_begin,A1
0001E792 <AmiBlitz3.ab3@1120>   MOVE.l -(a1),D0
0001E794 <AmiBlitz3.ab3@1121>   ADDQ.l #4,d0
0001E79A <AmiBlitz3.ab3@1122>   MOVEA.l _execbase,A6
0001E79E <AmiBlitz3.ab3@1123>   JSR _FreeMem(A6)
0001E7A4 <AmiBlitz3.ab3@1126>   MOVEA.l _dosbase,A1
0001E7AA <AmiBlitz3.ab3@1127>   MOVEA.l _execbase,A6
0001E7AE <AmiBlitz3.ab3@1128>   JSR _CloseLibrary(A6)
0001E7B4 <AmiBlitz3.ab3@1130>   MOVEA.l constpcat,A1
0001E7BA <AmiBlitz3.ab3@1131>   MOVE.l constmaxpc,D0
0001E7C0 <AmiBlitz3.ab3@1132>   MOVEA.l _execbase,A6
0001E7C4 <AmiBlitz3.ab3@1133>   JSR _FreeMem(A6)
0001E7CA <AmiBlitz3.ab3@1136>   MOVEA.l _mathffpbase,A1
0001E7D0 <AmiBlitz3.ab3@1137>   MOVEA.l _execbase,A6
0001E7D4 <AmiBlitz3.ab3@1138>   JSR _CloseLibrary(A6)
0001E7DA <AmiBlitz3.ab3@1148>     MOVEA.l _execbase,A6
0001E7E0 <AmiBlitz3.ab3@1149>     MOVE.l mempool,a0
0001E7E4 <AmiBlitz3.ab3@1150>     JSR _DeletePool(a6)
0001E7EA <AmiBlitz3.ab3@1151>     CLR.l pushat
0001E7F0 <AmiBlitz3.ab3@1158>   JSR free_unusedfunctions
0001E7F2 <AmiBlitz3.ab3@1159>   MOVEQ #0,d0
0001E800 <AmiBlitz3.ab3@1162>   !exitasm
0001E838 <AmiBlitz3.ab3@1163>   If dynassign<>""
0001E842 <AmiBlitz3.ab3@1164>     If *AssignSema
0001E852 <AmiBlitz3.ab3@1165>       ReleaseSemaphore_ *AssignSema
0001E86A <AmiBlitz3.ab3@1166>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001E8FE <AmiBlitz3.ab3@1167>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001E938 <AmiBlitz3.ab3@1168>         dos_RemAssign{dynassign}
0001E948 <AmiBlitz3.ab3@1169>         RemSemaphore_ *AssignSema
0001E958 <AmiBlitz3.ab3@1170>         ReleaseSemaphore_ *AssignSema
0001E98E <AmiBlitz3.ab3@1171>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001E99E <AmiBlitz3.ab3@1172>         FreeVec_ *AssignSema
0001E9A6 <AmiBlitz3.ab3@1173>         *AssignSema = #NULL
0001E9D4 <AmiBlitz3.ab3@1177>   SetCurrentDir{cli_path}
0001E9F6 <AmiBlitz3.ab3@1178>   !coutclose
0001E9FC <AmiBlitz3.ab3@1179> End
0001EA08 <AmiBlitz3.ab3@1184> str_doslibrary:     Dc.b "dos.library",0 : Even
0001EA0C <AmiBlitz3.ab3@1185> _dosbase:           Ds.l 1
0001EA12 <AmiBlitz3.ab3@1189>   MOVEA.l _execbase,A6
0001EA18 <AmiBlitz3.ab3@1190>   LEA str_doslibrary,A1
0001EA1C <AmiBlitz3.ab3@1191>   JSR _OldOpenLibrary(A6)
0001EA22 <AmiBlitz3.ab3@1192>   MOVE.l D0,_dosbase
0001EA24 <AmiBlitz3.ab3@1193> RTS
0001EA2A <AmiBlitz3.ab3@1197>   MOVEA.l #str_mathffpname,A1
0001EA30 <AmiBlitz3.ab3@1198>   MOVEA.l _execbase,A6
0001EA34 <AmiBlitz3.ab3@1199>   JSR _OldOpenLibrary(A6)
0001EA3A <AmiBlitz3.ab3@1200>   MOVE.l D0,_mathffpbase
0001EA3C <AmiBlitz3.ab3@1201> RTS
0001EA6E <AmiBlitz3.ab3@1209> !ComData_JMP{comFunc_SetNormalPointer}
0001EAA0 <AmiBlitz3.ab3@1217> !ComData_JMP{comFunc_SetBusyPointer}
0001EACA <AmiBlitz3.ab3@1221>   !basic
0001EACE <AmiBlitz3.ab3@1222>   ab3save_filenameP.l = PutD0
0001EAD8 <AmiBlitz3.ab3@1223>   If ab3save_filenameP
0001EB00 <AmiBlitz3.ab3@1224>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001EB2E <AmiBlitz3.ab3@1226>     SaveSource{ab3save_filename}
0001EB34 <AmiBlitz3.ab3@1227>   Else
0001EB6E <AmiBlitz3.ab3@1228>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001EB8C <AmiBlitz3.ab3@1230>   !asm
0001EB8E <AmiBlitz3.ab3@1231>   RTS
0001EBB8 <AmiBlitz3.ab3@1234>   !basic
0001EBBC <AmiBlitz3.ab3@1235>   ab3save_filenameP.l = PutD0
0001EBC6 <AmiBlitz3.ab3@1236>   If ab3save_filenameP
0001EBEE <AmiBlitz3.ab3@1237>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001EC1C <AmiBlitz3.ab3@1238>     LoadSource{ab3save_filename}
0001EC22 <AmiBlitz3.ab3@1239>   Else
0001EC5C <AmiBlitz3.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001EC7A <AmiBlitz3.ab3@1242>   !asm
0001EC7C <AmiBlitz3.ab3@1243>   RTS
0001ECA6 <AmiBlitz3.ab3@1246>   !basic
0001ECAC <AmiBlitz3.ab3@1247>   ClearSource{}
0001ECCA <AmiBlitz3.ab3@1248>   !asm
0001ECCC <AmiBlitz3.ab3@1249>   RTS
0001ECF6 <AmiBlitz3.ab3@1252>   !basic
0001ECFC <AmiBlitz3.ab3@1253>   OpenConsoleFake{}
0001ED1A <AmiBlitz3.ab3@1254>   !asm
0001ED1C <AmiBlitz3.ab3@1255>   RTS
0001ED46 <AmiBlitz3.ab3@1259>   !basic
0001ED4C <AmiBlitz3.ab3@1260>   CloseConsoleFake{}
0001ED6A <AmiBlitz3.ab3@1261>   !asm
0001ED6C <AmiBlitz3.ab3@1262>   RTS
0001ED72 <AmiBlitz3.ab3@1266>   MOVE.w d6,menuitemdebug
0001ED9C <AmiBlitz3.ab3@1267>   !basic
0001EDAE <AmiBlitz3.ab3@1268>   menuitemx.l = Peek.w(?menuitemdebug)
0001EDD4 <AmiBlitz3.ab3@1269>   If menuitemx>16 OR  menuitemx<0
0001EE48 <AmiBlitz3.ab3@1270>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001EE50 <AmiBlitz3.ab3@1271>     menuitemx=0
0001EE60 <AmiBlitz3.ab3@1273>   Poke.w ?menuitemdebug,menuitemx
0001EE7E <AmiBlitz3.ab3@1274>   !asm
0001EE84 <AmiBlitz3.ab3@1275>   MOVE.w menuitemdebug,d6
0001EE8A <AmiBlitz3.ab3@1278>   MOVE.l A5,firstitem_
0001EE90 <AmiBlitz3.ab3@1279>   MOVE.w D7,numlines_org
0001EE96 <AmiBlitz3.ab3@1280>   MOVE.l d7,numlines
0001EE98 <AmiBlitz3.ab3@1281>   LSL.w #2,D6
0001EE9E <AmiBlitz3.ab3@1282>   LEA menu_items,A0
0001EEA2 <AmiBlitz3.ab3@1283>   MOVEA.l $0(A0,D6.W),A0
0001EEAC <AmiBlitz3.ab3@1284>   MOVE.l #$FFFFffff,linenumat
0001EEB6 <AmiBlitz3.ab3@1285>   MOVE.l #$FFFFffff,compilelinecounter
0001EEB8 <AmiBlitz3.ab3@1288>   JSR (A0)                              ; jsr to the function for the menuitem
0001EEBE <AmiBlitz3.ab3@1289>   MOVE.l compilelinecounter,D0
0001EEC0 <AmiBlitz3.ab3@1290> RTS
0001EEC4 <AmiBlitz3.ab3@1292> menuitemdebug: Dc.l 0
0001EEC8 <AmiBlitz3.ab3@1294> mempool                Dc.l 0
0001EEDE <AmiBlitz3.ab3@1295> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001EEE4 <AmiBlitz3.ab3@1296> dloaderr:             JSR handle_compileerror
0001EF00 <AmiBlitz3.ab3@1297>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001EF3E <AmiBlitz3.ab3@1305>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001EF44 <AmiBlitz3.ab3@1306>   LEA str_loaddebugmessage,A2
0001EF4A <AmiBlitz3.ab3@1307>   LEA str_blitz3assign,A0
0001EF50 <AmiBlitz3.ab3@1308>   LEA str_temp_debugmodulename,A1
0001EF52 <AmiBlitz3.ab3@1310>   JSR (A3)                                                  ;open ped filerequest
0001EF56 <AmiBlitz3.ab3@1312>   BEQ.w menu_loaddebugmodule_noload
0001EF5C <AmiBlitz3.ab3@1313>   MOVE.l D0,ptr_temp_debugmodule
0001EF60 <AmiBlitz3.ab3@1314>   BSR.w call_setpointerbusy
0001EF66 <AmiBlitz3.ab3@1315> 
0001EF6C <AmiBlitz3.ab3@1316>   MOVE.l A7,errstack
0001EF76 <AmiBlitz3.ab3@1317>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001EF7C <AmiBlitz3.ab3@1318>   MOVE.l ptr_temp_debugmodule,D1
0001EF80 <AmiBlitz3.ab3@1320>   MOVEA.l _dosbase(PC),A6
0001EF84 <AmiBlitz3.ab3@1321>   JSR _LoadSeg(A6)
0001EF86 <AmiBlitz3.ab3@1322>   MOVE.l D0,D7
0001EF8A <AmiBlitz3.ab3@1323>   BEQ.w dloaderr
0001EF90 <AmiBlitz3.ab3@1324>   MOVE.l ptr_seg_debugger,D1
0001EF94 <AmiBlitz3.ab3@1325>   BEQ.b menu_loaddebugmodule_ndseg
0001EF98 <AmiBlitz3.ab3@1326>   MOVEA.l _dosbase(PC),A6
0001EF9C <AmiBlitz3.ab3@1327>   JSR _UnLoadSeg(A6)
0001EFA0 <AmiBlitz3.ab3@1328>   BSR.w call_setpointernormal
0001EFA6 <AmiBlitz3.ab3@1331>   MOVE.l D7,ptr_seg_debugger
0001EFA8 <AmiBlitz3.ab3@1334> RTS
0001EFC6 <AmiBlitz3.ab3@1337> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001F086 <AmiBlitz3.ab3@1338> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001F146 <AmiBlitz3.ab3@1339> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001F14A <AmiBlitz3.ab3@1340> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001F174 <AmiBlitz3.ab3@1344>   !basic
0001F19E <AmiBlitz3.ab3@1345>   exepath.s = Peek.s(?exepath)
0001F1C8 <AmiBlitz3.ab3@1346>   exefile.s = Peek.s(?exefilename)
0001F248 <AmiBlitz3.ab3@1347>   exefile.s = dos_AddPart{exepath,exefile}
0001F280 <AmiBlitz3.ab3@1348>   Poke.s ?tempspace,exefile
0001F29E <AmiBlitz3.ab3@1349>   !asm
0001F2A4 <AmiBlitz3.ab3@1370>   LEA tempspace,a0
0001F2A6 <AmiBlitz3.ab3@1371>   MOVE.l a0,d0
0001F2AA <AmiBlitz3.ab3@1372> BRA newcreate2
0001F2D4 <AmiBlitz3.ab3@1378>   !basic
0001F2FE <AmiBlitz3.ab3@1379>   request_exename.s = Peek.s(?str_request_exename )
0001F35A <AmiBlitz3.ab3@1380>   request_exename   = !TRANS{request_exename}
0001F360 <AmiBlitz3.ab3@1381>   GetD0 &request_exename
0001F37E <AmiBlitz3.ab3@1382>   !asm
0001F380 <AmiBlitz3.ab3@1383>   MOVE.l D0,A2
0001F3BE <AmiBlitz3.ab3@1386>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F3C4 <AmiBlitz3.ab3@1388>   LEA exepath,A0
0001F3CA <AmiBlitz3.ab3@1389>   LEA exefilename,A1
0001F3CC <AmiBlitz3.ab3@1391>   JSR (A3)                                                 ;open ped filerequest
0001F3D0 <AmiBlitz3.ab3@1393>   BEQ.w cancel_createexe
0001F3DA <AmiBlitz3.ab3@1396>   ADD.l #1,number_of_builds
0001F3E0 <AmiBlitz3.ab3@1399>   MOVE.l D0,ptr_newexefilename
0001F3E8 <AmiBlitz3.ab3@1400>   MOVE.w #-1,debugversion
0001F3EE <AmiBlitz3.ab3@1401>   MOVE.w set_make_smallestcode,-(A7)
0001F3F6 <AmiBlitz3.ab3@1405>     MOVE.w #1,makeexec
0001F3FC <AmiBlitz3.ab3@1406>     JSR ab3_OpenDebugFile
0001F400 <AmiBlitz3.ab3@1407>     BSR.w startcompile
0001F406 <AmiBlitz3.ab3@1408>     JSR ab3_CloseDebugFile
0001F410 <AmiBlitz3.ab3@1409>     CMP.l #"NORE",reqmode
0001F414 <AmiBlitz3.ab3@1410>   BEQ 'l1
0001F41A <AmiBlitz3.ab3@1412>   TST.w anyerrs
0001F41E <AmiBlitz3.ab3@1413>   BNE.b menu_createexecutable__skip
0001F422 <AmiBlitz3.ab3@1414>   BSR.w savefile
0001F428 <AmiBlitz3.ab3@1417>   MOVE.w (A7)+,set_make_smallestcode
0001F42A <AmiBlitz3.ab3@1420> RTS
0001F432 <AmiBlitz3.ab3@1424>   MOVE.w #-1,flag_noPED
0001F434 <AmiBlitz3.ab3@1425> RTS
0001F43C <AmiBlitz3.ab3@1429>   MOVE.w #-1,flag_noCLI
0001F43E <AmiBlitz3.ab3@1430> RTS
0001F468 <AmiBlitz3.ab3@1433>   !basic
0001F490 <AmiBlitz3.ab3@1434>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001F4A0 <AmiBlitz3.ab3@1435>     Poke.w ?word_WriteDebugFileNow,0
0001F4BE <AmiBlitz3.ab3@1436>   !asm
0001F4C0 <AmiBlitz3.ab3@1437> RTS
0001F4EA <AmiBlitz3.ab3@1440>   !basic
0001F4FA <AmiBlitz3.ab3@1441>   Poke.w ?word_WriteDebugFileNow,0
0001F50C <AmiBlitz3.ab3@1442>   If dbg_fid>=0
0001F522 <AmiBlitz3.ab3@1443>     file_Close{dbg_fid} : dbg_fid = -1
0001F534 <AmiBlitz3.ab3@1445>   If dbg_fid.l<0
0001F536 <AmiBlitz3.ab3@1446>     CLR.l d0
0001F574 <AmiBlitz3.ab3@1447>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001F578 <AmiBlitz3.ab3@1448>     dbg_Create.l = PutD0
0001F582 <AmiBlitz3.ab3@1449>     If (dbg_Create) ; only when set!
0001F592 <AmiBlitz3.ab3@1450>       exefileP.l = Peek.l (?ptr_newexefilename)
0001F5BA <AmiBlitz3.ab3@1451>       exefile.s = ""
0001F5EC <AmiBlitz3.ab3@1452>       If exefileP Then exefile.s = Peek.s(exefileP)
0001F624 <AmiBlitz3.ab3@1453>       If exefile><""
0001F67A <AmiBlitz3.ab3@1454>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001F68C <AmiBlitz3.ab3@1455>         If dbg_fid>=0
0001F69E <AmiBlitz3.ab3@1456>           Poke.w ?word_WriteDebugFileNow,-1
0001F6AA <AmiBlitz3.ab3@1459>       oldhunkoffset.l = -1
0001F6D2 <AmiBlitz3.ab3@1460>       oldfile.s       = ""
0001F6F0 <AmiBlitz3.ab3@1463>   !asm
0001F6F2 <AmiBlitz3.ab3@1464> RTS
0001F6F8 <AmiBlitz3.ab3@1467> TST.w word_WriteDebugFileNow
0001F6FC <AmiBlitz3.ab3@1468> BEQ 'skipdebugfile
0001F726 <AmiBlitz3.ab3@1469> !basic
0001F738 <AmiBlitz3.ab3@1470>   If dbg_fid>=0
0001F74A <AmiBlitz3.ab3@1471>     pass.l          = Peek.w(?pass)
0001F75C <AmiBlitz3.ab3@1472>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001F780 <AmiBlitz3.ab3@1473> 
0001F786 <AmiBlitz3.ab3@1474>       oldhunkoffset.l = hunkoffset.l
0001F7BA <AmiBlitz3.ab3@1475>       oldfile.s       = codefile.s
0001F7D6 <AmiBlitz3.ab3@1476>       If Peek.w (?ininclude)>0
0001F7E6 <AmiBlitz3.ab3@1477>         codeline.l = Peek.l(?includeline);-1
0001F856 <AmiBlitz3.ab3@1478>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001F85C <AmiBlitz3.ab3@1479>       Else
0001F88A <AmiBlitz3.ab3@1480>         !ComData_LEA{comStr_SourceName,A0}
0001F88C <AmiBlitz3.ab3@1481>         MOVE.l A0,D0
0001F890 <AmiBlitz3.ab3@1482>         sourceP.l = PutD0
0001F8B8 <AmiBlitz3.ab3@1483>         codefile.s = Peek.s(sourceP)
0001F8C8 <AmiBlitz3.ab3@1484>         codeline.l = Peek.l(?linenumat)
0001F8F0 <AmiBlitz3.ab3@1486>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001F944 <AmiBlitz3.ab3@1487>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001F954 <AmiBlitz3.ab3@1494>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001F95E <AmiBlitz3.ab3@1495>         If *sourceLine
0001F974 <AmiBlitz3.ab3@1496>           MaxLen detokenline.s = 65536
0001F9B6 <AmiBlitz3.ab3@1497>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001F9C6 <AmiBlitz3.ab3@1498>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001F9F2 <AmiBlitz3.ab3@1499>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001FA20 <AmiBlitz3.ab3@1500>           If written>0 Then Poke.b &detokenline+written-1,0
0001FA4A <AmiBlitz3.ab3@1501>           sourceLineText.s = Peek.s(&detokenline)
0001FA50 <AmiBlitz3.ab3@1502>         Else
0001FA78 <AmiBlitz3.ab3@1503>           sourceLineText = "NULL"
0001FB40 <AmiBlitz3.ab3@1506>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001FB5E <AmiBlitz3.ab3@1512> !asm
0001FB60 <AmiBlitz3.ab3@1514> RTS
0001FB62 <AmiBlitz3.ab3@1516> word_WriteDebugFileNow: Dc.w 0
0001FB64 <AmiBlitz3.ab3@1518> flag_noPED:  Ds.w 1                                        ;closeed org source
0001FB66 <AmiBlitz3.ab3@1519> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001FB6A <AmiBlitz3.ab3@1523>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001FB70 <AmiBlitz3.ab3@1524>   MOVEA.l _execbase,A6
0001FB74 <AmiBlitz3.ab3@1525>   JSR _CacheClearU(A6)
0001FB78 <AmiBlitz3.ab3@1526>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001FB7A <AmiBlitz3.ab3@1527> RTS
0001FB7E <AmiBlitz3.ab3@1530>   MOVEM.l A2-A3,-(A7)
0001FB84 <AmiBlitz3.ab3@1531>   CLR.b doublepeek
0001FB8A <AmiBlitz3.ab3@1532>   MOVE.l A5,lastsourcepos
0001FB90 <AmiBlitz3.ab3@1533>    JSR getchar
0001FB94 <AmiBlitz3.ab3@1534>   CMP.w #$2E,D0
0001FB98 <AmiBlitz3.ab3@1535>    BEQ.w JL_0_49B4b
0001FB9E <AmiBlitz3.ab3@1536>   MOVEA.l defaulttype,A2
0001FBA2 <AmiBlitz3.ab3@1537>   CMP.w #$24,D0
0001FBA6 <AmiBlitz3.ab3@1538>    BNE.w JL_0_49CAb
0001FBA8 <AmiBlitz3.ab3@1539>   MOVEQ.l #$07,D1
0001FBAC <AmiBlitz3.ab3@1540> BRA.w JL_0_49DEb
0001FBB2 <AmiBlitz3.ab3@1543>   JSR getparameter2
0001FBB6 <AmiBlitz3.ab3@1544>   BEQ.w syntaxerrb
0001FBBC <AmiBlitz3.ab3@1545>   LEA newtypebase,A2
0001FBC2 <AmiBlitz3.ab3@1546>   JSR findtype
0001FBC6 <AmiBlitz3.ab3@1547>   BNE.w notypeerrb
0001FBD0 <AmiBlitz3.ab3@1552>   MOVE.w oldqflag,instringon
0001FBD6 <AmiBlitz3.ab3@1553>   MOVEA.l lastsourcepos,A5
0001FBDC <AmiBlitz3.ab3@1555>   MOVE.l a2,functionreturntype
0001FBE4 <AmiBlitz3.ab3@1556>   CMPI.l #$100,$4(A2)
0001FBE8 <AmiBlitz3.ab3@1557>   BLE.w 'isvar
0001FBEA <AmiBlitz3.ab3@1561>   MOVEQ #3,d1
0001FBEE <AmiBlitz3.ab3@1562>   BRA JL_0_49DEb
0001FBF2 <AmiBlitz3.ab3@1569>   MOVE.w $6(A2),D1
0001FBF8 <AmiBlitz3.ab3@1570>   CMP.w #8,8(a2)
0001FBFC <AmiBlitz3.ab3@1571>   BNE 'l1
0001FC04 <AmiBlitz3.ab3@1572>   MOVE.b #1,doublepeek
0001FC0A <AmiBlitz3.ab3@1576>   MOVE.w D1,convsize
0001FC0E <AmiBlitz3.ab3@1577>   MOVEM.l (A7)+,A2-A3
0001FC10 <AmiBlitz3.ab3@1578> RTS
0001FC16 <AmiBlitz3.ab3@1580> notypeerrb JMP notypeerr
0001FC1C <AmiBlitz3.ab3@1581> illtypeerrb JMP illtypeerr
0001FC22 <AmiBlitz3.ab3@1582> syntaxerrb JMP syntaxerr
0001FC2C <AmiBlitz3.ab3@1627>   ADD.l #1,number_of_builds
0001FC32 <AmiBlitz3.ab3@1629>   CLR.w debugversion
0001FC38 <AmiBlitz3.ab3@1630>   CLR.w flag_noPED
0001FC3E <AmiBlitz3.ab3@1631>   CLR.w flag_noCLI
0001FC46 <AmiBlitz3.ab3@1634>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001FC4A <AmiBlitz3.ab3@1635>     BSR.w startcompile
0001FC54 <AmiBlitz3.ab3@1636>     CMP.l #"NORE",reqmode
0001FC58 <AmiBlitz3.ab3@1637>   BEQ 'l1
0001FC5E <AmiBlitz3.ab3@1640>   TST.w anyerrs
0001FC62 <AmiBlitz3.ab3@1641>    BNE.w JL_0_3482
0001FC66 <AmiBlitz3.ab3@1643>   MOVE.w flag_noPED(PC),D1
0001FC6A <AmiBlitz3.ab3@1644>    BEQ.w skip_closingGUI
0001FC9C <AmiBlitz3.ab3@1649>   !ComData_JSR{comFunc_CloseGUI}
0001FCA0 <AmiBlitz3.ab3@1650> BRA.b runprogram
0001FCA4 <AmiBlitz3.ab3@1654>   BSR.w compilerequester
0001FCAA <AmiBlitz3.ab3@1657>   MOVEA.l _dosbase,A6
0001FCB0 <AmiBlitz3.ab3@1658>   LEA exepath,a0
0001FCB2 <AmiBlitz3.ab3@1659>   MOVE.l a0,d1
0001FCB4 <AmiBlitz3.ab3@1660>   MOVEQ #-2,d2
0001FCB8 <AmiBlitz3.ab3@1661>   JSR _Lock(a6)                                            ;lock
0001FCBE <AmiBlitz3.ab3@1662>   MOVE.l d0,exelock
0001FCC4 <AmiBlitz3.ab3@1663>   MOVE.l #0,d1
0001FCC8 <AmiBlitz3.ab3@1664>   JSR _CurrentDir(A6)
0001FCCE <AmiBlitz3.ab3@1665>   MOVE.l D0,lock_currentdir
0001FCD0 <AmiBlitz3.ab3@1666>   MOVE.l D0,D1
0001FCD4 <AmiBlitz3.ab3@1667>   JSR _CurrentDir(A6)
0001FCDA <AmiBlitz3.ab3@1668>   CLR.l ptr_exetask
0001FCE0 <AmiBlitz3.ab3@1677>   MOVE.l #str_process_name,D1
0001FCE2 <AmiBlitz3.ab3@1678>   MOVEQ.l #$00,D2
0001FCE8 <AmiBlitz3.ab3@1679>   MOVE.l #proc_seglist,D3
0001FCEA <AmiBlitz3.ab3@1680>   LSR.l #2,D3
0001FCF0 <AmiBlitz3.ab3@1681>   MOVE.l stacksize,D4
0001FCF6 <AmiBlitz3.ab3@1682>   MOVEA.l _dosbase,A6
0001FCFA <AmiBlitz3.ab3@1683>   JSR _CreateProc(A6)                                      ;runtask
0001FCFC <AmiBlitz3.ab3@1684>   TST.l D0
0001FD00 <AmiBlitz3.ab3@1685>    BEQ ErrorRunningProg
0001FD36 <AmiBlitz3.ab3@1687>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001FD3C <AmiBlitz3.ab3@1689>   TST.w flag_noPED
0001FD40 <AmiBlitz3.ab3@1690>    BNE.b JL_0_344E
0001FD44 <AmiBlitz3.ab3@1691>   BSR.w close_compilewin
0001FD4A <AmiBlitz3.ab3@1694>   CLR.l firstlocal
0001FD50 <AmiBlitz3.ab3@1695>   CLR.l firstglob
0001FD54 <AmiBlitz3.ab3@1696>   MOVE.w flag_noPED(PC),D1
0001FD58 <AmiBlitz3.ab3@1697>   BEQ.w skip_openGUI
0001FD8A <AmiBlitz3.ab3@1701>   !ComData_JSR{comFunc_CreateGUI}
0001FD8C <AmiBlitz3.ab3@1711> RTS
0001FD96 <AmiBlitz3.ab3@1714> MOVE.l #1,_runerror
0001FD9A <AmiBlitz3.ab3@1715> BRA JL_0_344E
0001FD9E <AmiBlitz3.ab3@1717> _runerror: Dc.l 0
0001FDA2 <AmiBlitz3.ab3@1718> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001FDA6 <AmiBlitz3.ab3@1719> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001FDAA <AmiBlitz3.ab3@1720> signalNum:          Ds.l 1                                          ;panicbit org source
0001FDAE <AmiBlitz3.ab3@1721> signals:            Ds.l 1                                          ;panicmask org source
0001FDC4 <AmiBlitz3.ab3@1723> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001FDC9 <AmiBlitz3.ab3@1724>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001FDCC <AmiBlitz3.ab3@1725> Even4
0001FDD0 <AmiBlitz3.ab3@1727> ptr_ThisTask:       Ds.l 1                                          ;length
0001FDD4 <AmiBlitz3.ab3@1728> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001FDDA <AmiBlitz3.ab3@1732>   MOVEA.l $4,A0
0001FDE2 <AmiBlitz3.ab3@1733>   MOVE.l  $114(A0),ptr_exetask
0001FDE8 <AmiBlitz3.ab3@1735>   MOVEA.l _dosbase,A6
0001FDEE <AmiBlitz3.ab3@1736>   MOVE.l exelock,D1
0001FDF2 <AmiBlitz3.ab3@1737>   JSR _CurrentDir(A6)
0001FE28 <AmiBlitz3.ab3@1742>   !ComData_SetB{comByte_RunningFlag,#1}
0001FE2C <AmiBlitz3.ab3@1748>   MOVE.w flag_noCLI(PC),D1
0001FE30 <AmiBlitz3.ab3@1749>    BNE.b skip_openconsole
0001FE62 <AmiBlitz3.ab3@1753>   !ComData_JSR{comFunc_OpenConsole}
0001FE66 <AmiBlitz3.ab3@1756>   BSR.w calcvbr
0001FE6C <AmiBlitz3.ab3@1757>   MOVEA.l vbr,A0
0001FE72 <AmiBlitz3.ab3@1762>   CLR.w dirmode
0001FE78 <AmiBlitz3.ab3@1763>   CLR.l firstglob
0001FE7E <AmiBlitz3.ab3@1764>   CLR.l firstlocal
0001FE84 <AmiBlitz3.ab3@1766>   MOVE.l stacksize,D2
0001FE8A <AmiBlitz3.ab3@1767>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
0001FE90 <AmiBlitz3.ab3@1768>   LEA str_cliarguments,A0                                   ;cli arguement
0001FE96 <AmiBlitz3.ab3@1769>   MOVEA.l destbufferstart,A1
0001FE9A <AmiBlitz3.ab3@1770>   BSR.w Aclearcache
0001FE9C <AmiBlitz3.ab3@1773>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
0001FEA2 <AmiBlitz3.ab3@1775>   MOVEA.l vbr,A0
0001FEA8 <AmiBlitz3.ab3@1777>   CLR.l firstglob
0001FEAE <AmiBlitz3.ab3@1778>   CLR.l firstlocal
0001FEB4 <AmiBlitz3.ab3@1779>   MOVEA.l _dosbase,A6
0001FEBA <AmiBlitz3.ab3@1780>   MOVE.l exelock,d1
0001FEBE <AmiBlitz3.ab3@1781>   BEQ 'nolock
0001FEC2 <AmiBlitz3.ab3@1782>   JSR _UnLock(a6)
0001FEF8 <AmiBlitz3.ab3@1787>   !ComData_SetB{comByte_RunningFlag,#0}
0001FEFC <AmiBlitz3.ab3@1790>   MOVE.w flag_noCLI(PC),D1
0001FF00 <AmiBlitz3.ab3@1791>    BNE.b skip_closeconsole
0001FF32 <AmiBlitz3.ab3@1795>   !ComData_JSR{comFunc_CloseConsole}
0001FF3A <AmiBlitz3.ab3@1798>   MOVE.w #$0001,stopit
0001FF3E <AmiBlitz3.ab3@1799>   MOVE.l signals(PC),D0
0001FF44 <AmiBlitz3.ab3@1800>   MOVEA.l ptr_ThisTask,A1
0001FF4A <AmiBlitz3.ab3@1801>   MOVEA.l _execbase,A6
0001FF4E <AmiBlitz3.ab3@1802>   JSR _Signal(A6)
0001FF50 <AmiBlitz3.ab3@1803> RTS
0001FF56 <AmiBlitz3.ab3@1807>   MOVEA.l _execbase,A6
0001FF5A <AmiBlitz3.ab3@1808>   MOVE.w $128(A6),D0
0001FF5C <AmiBlitz3.ab3@1809>   MOVEQ.l #$00,D1
0001FF60 <AmiBlitz3.ab3@1810>   ANDI.w #$F,D0
0001FF64 <AmiBlitz3.ab3@1813>     BEQ.b calcvbr__skip
0001FF66 <AmiBlitz3.ab3@1814>     ADDQ.w #1,D1
0001FF68 <AmiBlitz3.ab3@1815>     LSR.w #1,D0
0001FF6C <AmiBlitz3.ab3@1816> BRA.b calcvbr_loop
0001FF6E <AmiBlitz3.ab3@1819>   MOVEQ.l #$00,D2
0001FF72 <AmiBlitz3.ab3@1820>   CMP.w #$2,D1
0001FF76 <AmiBlitz3.ab3@1821>    BCS.b calcvbr__skip2
0001FF7C <AmiBlitz3.ab3@1822>   MOVEA.l _execbase,A6
0001FF80 <AmiBlitz3.ab3@1823>   JSR _SuperState(A6)
0001FF84 <AmiBlitz3.ab3@1824>   Dc.l $4E7A2801                                           ;movec vbr,D2
0001FF88 <AmiBlitz3.ab3@1825>   JSR _UserState(A6)
0001FF8E <AmiBlitz3.ab3@1828>   MOVE.l D2,vbr
0001FF90 <AmiBlitz3.ab3@1829> RTS
0001FF96 <AmiBlitz3.ab3@1833>   LEA instrtab,a0
0001FF9C <AmiBlitz3.ab3@1834>   MOVE.l #labelhash-instrtab,d0
0001FF9E <AmiBlitz3.ab3@1835>   ASR.l #2,d0
0001FFA0 <AmiBlitz3.ab3@1836>   SUBQ.l #1,d0
0001FFA2 <AmiBlitz3.ab3@1839>   CLR.l (a0)+
0001FFA4 <AmiBlitz3.ab3@1840>   SUBQ.l #1,d0
0001FFA8 <AmiBlitz3.ab3@1841>   BNE 'l10
0001FFAC <AmiBlitz3.ab3@1842>   BSR.w call_setpointerbusy
0001FFB0 <AmiBlitz3.ab3@1843>   BSR.w free_userlibs
0001FFB4 <AmiBlitz3.ab3@1844>   BSR.w scan_for_userlibs
0001FFB8 <AmiBlitz3.ab3@1845>   BSR.w JL_0_7082
0001FFBC <AmiBlitz3.ab3@1846> BRA.w call_setpointernormal
0001FFE6 <AmiBlitz3.ab3@1852>   !basic
00020020 <AmiBlitz3.ab3@1853>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020030 <AmiBlitz3.ab3@1855>   deflibNameP.l = Peek.l(?deflib)
0002003A <AmiBlitz3.ab3@1856>   If deflibNameP
0002006C <AmiBlitz3.ab3@1857>     If Peek.s(deflibNameP)<>""
000200B6 <AmiBlitz3.ab3@1858>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
000200BC <AmiBlitz3.ab3@1859>     Else
000200F6 <AmiBlitz3.ab3@1860>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
000200FC <AmiBlitz3.ab3@1862>   Else
00020136 <AmiBlitz3.ab3@1863>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020170 <AmiBlitz3.ab3@1864>     error{"INTERNAL: Invalid deflib name pointer!"}
0002018E <AmiBlitz3.ab3@1866>   !asm
00020194 <AmiBlitz3.ab3@1871>   MOVE.l #str_path_userlibs,D1
00020196 <AmiBlitz3.ab3@1872>   MOVEQ.l #-$02,D2
0002019C <AmiBlitz3.ab3@1873>   MOVEA.l _dosbase,A6
000201A0 <AmiBlitz3.ab3@1874>   JSR _Lock(A6)
000201A2 <AmiBlitz3.ab3@1875>   MOVE.l D0,D7
000201A6 <AmiBlitz3.ab3@1876>    BEQ.w exit_get_libraries
000201A8 <AmiBlitz3.ab3@1877>   MOVE.l D7,D1
000201AE <AmiBlitz3.ab3@1878>   MOVE.l #ptr_parameterstore,D2
000201B2 <AmiBlitz3.ab3@1879>   JSR _Examine(A6)
000201B4 <AmiBlitz3.ab3@1880>   TST.l D0
000201B8 <AmiBlitz3.ab3@1881>   BEQ.w unlock_and_exit_get_libraries
000201BE <AmiBlitz3.ab3@1882>   MOVE.l fib_DirEntryType,D0
000201C2 <AmiBlitz3.ab3@1883>   BMI.w unlock_and_exit_get_libraries
000201C4 <AmiBlitz3.ab3@1888>     MOVE.l D7,D1
000201CA <AmiBlitz3.ab3@1889>     MOVE.l #ptr_parameterstore,D2
000201D0 <AmiBlitz3.ab3@1890>     MOVEA.l _dosbase,A6
000201D4 <AmiBlitz3.ab3@1891>     JSR _ExNext(A6)
000201D6 <AmiBlitz3.ab3@1892>     TST.l D0
000201DA <AmiBlitz3.ab3@1893>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000201E0 <AmiBlitz3.ab3@1895>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000201E4 <AmiBlitz3.ab3@1896>     BPL.w scan_libsdrawer                                  ; skip directories
000201EA <AmiBlitz3.ab3@1898>     LEA fib_FileName,A0                                    ; pruefen ob infofile
000201EE <AmiBlitz3.ab3@1899>     BSR.w check_for_infoextention
000201F2 <AmiBlitz3.ab3@1900>     BEQ.w scan_libsdrawer
000201F8 <AmiBlitz3.ab3@1902>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
000201FA <AmiBlitz3.ab3@1903>     MOVEQ.l #$26,D0
000201FC <AmiBlitz3.ab3@1904>     MOVEQ.l #$01,D1
00020202 <AmiBlitz3.ab3@1905>     MOVE.l mempool,a0
00020206 <AmiBlitz3.ab3@1906>     JSR _AllocPooled(a6)
0002020C <AmiBlitz3.ab3@1908>     MOVEA.l _dosbase,A6
0002020E <AmiBlitz3.ab3@1909>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020214 <AmiBlitz3.ab3@1912>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020216 <AmiBlitz3.ab3@1915>     MOVE.l (A0),D5
0002021A <AmiBlitz3.ab3@1916>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0002021C <AmiBlitz3.ab3@1917>     MOVEA.l D5,A2
0002021E <AmiBlitz3.ab3@1918>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020224 <AmiBlitz3.ab3@1921>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020226 <AmiBlitz3.ab3@1924>       MOVEQ.l #$00,D0
00020228 <AmiBlitz3.ab3@1925>       MOVE.b (A1)+,D0
0002022C <AmiBlitz3.ab3@1926>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
0002022E <AmiBlitz3.ab3@1927>       MOVEQ.l #$00,D1
00020230 <AmiBlitz3.ab3@1928>       MOVE.b (A2)+,D1
00020234 <AmiBlitz3.ab3@1929>        BEQ.w JL_0_371C
00020256 <AmiBlitz3.ab3@1930>       !compare1                                            ;bsr.w tstalpha
0002025A <AmiBlitz3.ab3@1931>       BNE.w JL_0_3702
0002025E <AmiBlitz3.ab3@1932>       ANDI.w #$DF,D0
00020260 <AmiBlitz3.ab3@1935>       EXG.l D0,D1
00020282 <AmiBlitz3.ab3@1936>       !compare1                                            ;bsr.w tstalpha
00020286 <AmiBlitz3.ab3@1937>       BNE.w JL_0_3710
0002028A <AmiBlitz3.ab3@1938>       ANDI.w #$DF,D0
0002028C <AmiBlitz3.ab3@1941>       EXG.l D0,D1
0002028E <AmiBlitz3.ab3@1942>       CMP.b D1,D0
00020292 <AmiBlitz3.ab3@1943>     BEQ.w JL_0_36E6
00020296 <AmiBlitz3.ab3@1944>     BCS.w JL_0_3722
00020298 <AmiBlitz3.ab3@1947>     MOVEA.l D5,A0
0002029C <AmiBlitz3.ab3@1948> BRA.w JL_0_36D6
0002029E <AmiBlitz3.ab3@1951>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
000202A0 <AmiBlitz3.ab3@1952>     MOVE.l (A0),(A1)
000202A2 <AmiBlitz3.ab3@1953>     MOVE.l A1,(A0)
000202A4 <AmiBlitz3.ab3@1954>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
000202A8 <AmiBlitz3.ab3@1955>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
000202AE <AmiBlitz3.ab3@1956>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
000202B0 <AmiBlitz3.ab3@1959>       MOVE.b (A0)+,(A1)+
000202B4 <AmiBlitz3.ab3@1960>     BNE.w JL_0_3734
000202B8 <AmiBlitz3.ab3@1961> BRA.w scan_libsdrawer
000202BA <AmiBlitz3.ab3@1964>   MOVE.l D7,D1
000202C0 <AmiBlitz3.ab3@1965>   MOVEA.l _dosbase,A6
000202C4 <AmiBlitz3.ab3@1966>   JSR _UnLock(A6)
000202C6 <AmiBlitz3.ab3@1967>   MOVEQ.l #-$01,D0
000202C8 <AmiBlitz3.ab3@1970> RTS
000202CA <AmiBlitz3.ab3@1973>   MOVE.l D7,D1
000202D0 <AmiBlitz3.ab3@1974>   MOVEA.l _dosbase,A6
000202D4 <AmiBlitz3.ab3@1975>   JSR _UnLock(A6)
000202D6 <AmiBlitz3.ab3@1976>   MOVEQ.l #$00,D0
000202D8 <AmiBlitz3.ab3@1977> RTS
000202DE <AmiBlitz3.ab3@1981>   MOVEA.l _execbase,A6
000202E4 <AmiBlitz3.ab3@1982>   MOVEA.l ptr_userlibs_list,A2
000202EA <AmiBlitz3.ab3@1983>   CLR.l ptr_userlibs_list
000202EE <AmiBlitz3.ab3@1986>     CMPA.w #$0,A2
000202F2 <AmiBlitz3.ab3@1987>     BEQ.w exit_free_userlib
000202F4 <AmiBlitz3.ab3@1988>       MOVEA.l A2,A1
000202F6 <AmiBlitz3.ab3@1989>       MOVEQ.l #$26,D0
000202F8 <AmiBlitz3.ab3@1990>       MOVEA.l (A2),A2
000202FE <AmiBlitz3.ab3@1991>       MOVE.l mempool,a0
00020304 <AmiBlitz3.ab3@1992>       MOVEA.l _execbase,A6
00020308 <AmiBlitz3.ab3@1993>       JSR _FreePooled(A6)
0002030C <AmiBlitz3.ab3@1994> BRA.w loop_free_userlib
0002030E <AmiBlitz3.ab3@1997> RTS
00020310 <AmiBlitz3.ab3@2000> pass:  Dc.w 0                                             ; smallpass org source
00020312 <AmiBlitz3.ab3@2001> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020318 <AmiBlitz3.ab3@2005>   MOVE.l A7,errstack                                      ;startcompile
0002031E <AmiBlitz3.ab3@2014>   CLR.l reqmode
00020328 <AmiBlitz3.ab3@2016>   MOVE.l #Aclearallvars,errcont
00020332 <AmiBlitz3.ab3@2017>   MOVE.l #concomstack,concomsp
00020336 <AmiBlitz3.ab3@2025>   MOVE.w #1450,D0
00020338 <AmiBlitz3.ab3@2026>   LSR.w #3,D0
0002033A <AmiBlitz3.ab3@2027>   SUBQ.w #7,D0                                             ; 173
00020340 <AmiBlitz3.ab3@2028>   MOVE.w D0,progressbar_width
00020342 <AmiBlitz3.ab3@2029>   SWAP D0
00020344 <AmiBlitz3.ab3@2030>   CLR.w D0
0002034A <AmiBlitz3.ab3@2031>   MOVE.l numlines,d1
0002034E <AmiBlitz3.ab3@2032>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020350 <AmiBlitz3.ab3@2034>   TST.w D0
00020354 <AmiBlitz3.ab3@2035>   BNE.w JL_0_37C0
00020356 <AmiBlitz3.ab3@2036>   MOVEQ.l #-$01,D0
0002035C <AmiBlitz3.ab3@2039>   MOVE.w D0,progress_per_line
00020364 <AmiBlitz3.ab3@2048>   BTST #$7,use_debugger
00020368 <AmiBlitz3.ab3@2050>   BNE 'debugon
0002036E <AmiBlitz3.ab3@2051>   CLR.w debugmode
00020372 <AmiBlitz3.ab3@2052> BRA.b 'debugoff
00020378 <AmiBlitz3.ab3@2055>   SNE debugmode
000203B0 <AmiBlitz3.ab3@2063>   !ComData_SetB{comByte_DebugMode,debugmode}
000203B6 <AmiBlitz3.ab3@2066>   CLR.w dirmode                                            ;direct mode flag
000203BC <AmiBlitz3.ab3@2067>   CLR.w ezerr                                              ;quiet error
000203C2 <AmiBlitz3.ab3@2068>   CLR.l currentfunction
000203C8 <AmiBlitz3.ab3@2069>   CLR.w connest
000203CE <AmiBlitz3.ab3@2070>   CLR.w varmode
000203D4 <AmiBlitz3.ab3@2071>   CLR.w proceduremode
000203DA <AmiBlitz3.ab3@2072>   CLR.w ininclude
000203E0 <AmiBlitz3.ab3@2073>   CLR.w intstring
000203E6 <AmiBlitz3.ab3@2074>   CLR.w pass
000203EE <AmiBlitz3.ab3@2075>   MOVE.w #0,compiler_job
000203F4 <AmiBlitz3.ab3@2076>   CLR.l funcscanon
000203FA <AmiBlitz3.ab3@2085>   CLR.l funcscanon
000203FE <AmiBlitz3.ab3@2086>   BSR.w compileall
00020404 <AmiBlitz3.ab3@2087> 
0002040A <AmiBlitz3.ab3@2088>   TST.l errorcounter
0002040E <AmiBlitz3.ab3@2089>   BEQ _skiperrorstop
00020410 <AmiBlitz3.ab3@2090>   RTS
00020416 <AmiBlitz3.ab3@2093>   MOVE.w dontwrite,d0
0002041A <AmiBlitz3.ab3@2094>   CMP.w #1,d0
0002041E <AmiBlitz3.ab3@2095>   BNE 'l3
00020424 <AmiBlitz3.ab3@2096>   TST.l errorcounter
00020428 <AmiBlitz3.ab3@2097>   BNE 'l3
0002042E <AmiBlitz3.ab3@2098>   CLR.w dontwrite
00020432 <AmiBlitz3.ab3@2099>   BSR compileall                                           ;if a function is not found
00020438 <AmiBlitz3.ab3@2100>   ADDQ.w #1,pass
00020476 <AmiBlitz3.ab3@2105>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
0002047A <AmiBlitz3.ab3@2106>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020480 <AmiBlitz3.ab3@2107>   LEA firstproc,a0
00020486 <AmiBlitz3.ab3@2108>   CLR.l savefuncspace
00020488 <AmiBlitz3.ab3@2109>   MOVE.l (a0),d0
0002048A <AmiBlitz3.ab3@2113>     MOVE.l d0,a0
0002048E <AmiBlitz3.ab3@2114>     BEQ 'out
00020492 <AmiBlitz3.ab3@2115>     TST.b isfunc(a0)
00020496 <AmiBlitz3.ab3@2116>     BNE 'nex
0002049A <AmiBlitz3.ab3@2117>     MOVEM.l d2/a6/a0,-(a7)
0002049C <AmiBlitz3.ab3@2119>     MOVEQ #0,d0
000204A0 <AmiBlitz3.ab3@2120>     MOVE.b $21+#funcentry_extend-1(a0),d0
000204A4 <AmiBlitz3.ab3@2121>     SUB.w #$21+#funcentry_extend,d0
000204A8 <AmiBlitz3.ab3@2122>     ADD.w #16,d0
000204AE <AmiBlitz3.ab3@2123>     MOVE.l #$10000,d1
000204B0 <AmiBlitz3.ab3@2124>     MOVE.l d0,d2
000204B6 <AmiBlitz3.ab3@2125>     MOVEA.l _execbase,A6
000204BA <AmiBlitz3.ab3@2126>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
000204BC <AmiBlitz3.ab3@2127>     MOVE.l d0,a1
000204C0 <AmiBlitz3.ab3@2128>     MOVE.l d2,4(a1)
000204C6 <AmiBlitz3.ab3@2129>     MOVE.l unusedfunc,(a1)
000204CC <AmiBlitz3.ab3@2130>     MOVE.l d0,unusedfunc
000204D0 <AmiBlitz3.ab3@2131>     MOVEM.l (a7)+,a6/a0/d2
000204D4 <AmiBlitz3.ab3@2132>     MOVE.l isfunc+1(a0),d0
000204D6 <AmiBlitz3.ab3@2133>     ADDQ.l #6,d0
000204DC <AmiBlitz3.ab3@2134>     ADD.l d0,savefuncspace
000204E0 <AmiBlitz3.ab3@2137>     MOVE.l d0,8(a1)
000204E4 <AmiBlitz3.ab3@2138>     LEA 12(a1),a1
000204E6 <AmiBlitz3.ab3@2139>     MOVE.l a0,-(a7)
000204EA <AmiBlitz3.ab3@2140>     LEA $21+#funcentry_extend(a0),a0
000204EC <AmiBlitz3.ab3@2143>       MOVE.b (a0)+,(a1)+
000204F0 <AmiBlitz3.ab3@2144>     BNE 'l1
000204F2 <AmiBlitz3.ab3@2145>     MOVE.l (a7)+,a0
000204F4 <AmiBlitz3.ab3@2148>     MOVE.l (a0),d0
000204F8 <AmiBlitz3.ab3@2149> BRA 'lr1
00020500 <AmiBlitz3.ab3@2152>   BTST #$7,make_smallestcode
00020504 <AmiBlitz3.ab3@2153>   BEQ.b JL_0_3844                                           ;optimize for executable
0002050A <AmiBlitz3.ab3@2154>   CLR.l morememadd
0002050E <AmiBlitz3.ab3@2156>   BSR.w alloxadj
00020512 <AmiBlitz3.ab3@2157>   BEQ.w JL_0_388A
00020516 <AmiBlitz3.ab3@2160>   BSR.w compileall
0002051C <AmiBlitz3.ab3@2161>   ADDQ.w #1,pass
00020522 <AmiBlitz3.ab3@2164>   MOVE.w dontwrite,D1
00020526 <AmiBlitz3.ab3@2165>   BEQ.w JL_0_38A2
0002052A <AmiBlitz3.ab3@2185> BRA.w JL_0_3896
00020532 <AmiBlitz3.ab3@2196>   MOVE.w #$FFFF,anyerrs
00020536 <AmiBlitz3.ab3@2197> BRA.w JL_0_38A2
0002053A <AmiBlitz3.ab3@2200>   BSR.w alloxinc                                          ;increase all by 50%
0002053E <AmiBlitz3.ab3@2201>   BEQ.w Aclearallvars
00020542 <AmiBlitz3.ab3@2202> BRA.w JL_0_3824
00020546 <AmiBlitz3.ab3@2214> BRA.w JL_0_38A6                                            ;???????
0002054C <AmiBlitz3.ab3@2218>   JSR freereps
00020552 <AmiBlitz3.ab3@2219>   JSR freesels
00020558 <AmiBlitz3.ab3@2220>   JSR AJL_0_6DF2
0002055E <AmiBlitz3.ab3@2221>   JSR freepends
00020564 <AmiBlitz3.ab3@2222>   JSR freeifs
0002056A <AmiBlitz3.ab3@2223>   JSR AJL_0_C188
00020570 <AmiBlitz3.ab3@2224>   JSR AJL_0_C15C
00020576 <AmiBlitz3.ab3@2225>   JSR AJL_0_D9BC
0002057C <AmiBlitz3.ab3@2228> JMP cleartemplabel
00020580 <AmiBlitz3.ab3@2231> mempool2:  Dc.l 0
00020586 <AmiBlitz3.ab3@2235>   JSR Aclearcache
0002058E <AmiBlitz3.ab3@2237>   BTST #$7,use_debugger
00020592 <AmiBlitz3.ab3@2239>   BNE 'debugon
00020598 <AmiBlitz3.ab3@2240>   CLR.w debugmode
0002059C <AmiBlitz3.ab3@2241> BRA.b 'debugoff
000205A2 <AmiBlitz3.ab3@2244>   SNE debugmode
000205DA <AmiBlitz3.ab3@2249>   !ComData_SetB{comByte_DebugMode,debugmode}
000205E0 <AmiBlitz3.ab3@2251>   LEA regtable,a0
000205E2 <AmiBlitz3.ab3@2252>   MOVEQ #10,d0
000205E4 <AmiBlitz3.ab3@2255>     CLR.l (a0)+
000205E8 <AmiBlitz3.ab3@2256>   DBF d0,'l1
000205EE <AmiBlitz3.ab3@2258>   LEA includetemp2,a0
000205F0 <AmiBlitz3.ab3@2259>   CLR.b (a0)
000205FA <AmiBlitz3.ab3@2260>   MOVE.l #7,maxregs
00020600 <AmiBlitz3.ab3@2261>   CLR.w debugnest
00020606 <AmiBlitz3.ab3@2262>   CLR.b funcparloop
0002060C <AmiBlitz3.ab3@2263>   CLR.b nostringopt
00020612 <AmiBlitz3.ab3@2264>   CLR.b firsttime
00020618 <AmiBlitz3.ab3@2265>   CLR.l lastdestpointer
0002061E <AmiBlitz3.ab3@2266>   CLR.l lastwritedat
00020624 <AmiBlitz3.ab3@2267>   CLR.l prevwritedat
0002062A <AmiBlitz3.ab3@2268>   CLR.l includeline
00020630 <AmiBlitz3.ab3@2269>   CLR.b incnif
00020636 <AmiBlitz3.ab3@2270>   CLR.b formode
0002063C <AmiBlitz3.ab3@2271>   CLR.b funccall
00020642 <AmiBlitz3.ab3@2272>   CLR.w objectcount
00020648 <AmiBlitz3.ab3@2273>   CLR.b resdisable
0002064E <AmiBlitz3.ab3@2274>   CLR.b developobject
00020654 <AmiBlitz3.ab3@2275>   CLR.b optistring
0002065A <AmiBlitz3.ab3@2276>   CLR.b optistring2
00020660 <AmiBlitz3.ab3@2277>   CLR.b optiarray
00020666 <AmiBlitz3.ab3@2278>   CLR.b quickadd
0002066C <AmiBlitz3.ab3@2279>   CLR.w newmode
00020672 <AmiBlitz3.ab3@2280>   CLR.w mode
00020678 <AmiBlitz3.ab3@2281>   CLR.w string1
0002067E <AmiBlitz3.ab3@2282>   CLR.b fastfunc
00020684 <AmiBlitz3.ab3@2283>   CLR.w load_var_size
0002068A <AmiBlitz3.ab3@2284>   CLR.w load_var_reg
00020690 <AmiBlitz3.ab3@2285>   CLR.l load_var_addr
00020696 <AmiBlitz3.ab3@2286>   CLR.w imm_size
0002069C <AmiBlitz3.ab3@2287>   CLR.w imm_reg
000206A2 <AmiBlitz3.ab3@2288>   CLR.l imm_addr
000206A8 <AmiBlitz3.ab3@2289>   CLR.b _dcb
000206AE <AmiBlitz3.ab3@2290>   CLR.l nohunkoffset
000206B4 <AmiBlitz3.ab3@2291>   CLR.b peekaddrsize
000206BA <AmiBlitz3.ab3@2292>   CLR.b typecheck
000206C0 <AmiBlitz3.ab3@2293>   CLR.b declare2
000206C6 <AmiBlitz3.ab3@2294>   CLR.b declare
000206CC <AmiBlitz3.ab3@2295>   CLR.l myoline                                          ;check
000206D2 <AmiBlitz3.ab3@2296>   CLR.l myline                                          ;check
000206D8 <AmiBlitz3.ab3@2297>   CLR.b newvariable
000206DE <AmiBlitz3.ab3@2298>   CLR.b saved0
000206E4 <AmiBlitz3.ab3@2299>   CLR.l bsssize
000206EA <AmiBlitz3.ab3@2300>   CLR.l chipsize
000206F0 <AmiBlitz3.ab3@2301>   CLR.b infunctioncode
000206F6 <AmiBlitz3.ab3@2302>   CLR.l errorcounter
00020700 <AmiBlitz3.ab3@2303>   MOVE.l #-1,bssstart
0002070A <AmiBlitz3.ab3@2304>   MOVE.l #-1,bssend
00020714 <AmiBlitz3.ab3@2305>   MOVE.l #-1,chipstart
0002071E <AmiBlitz3.ab3@2306>   MOVE.l #-1,chipend
00020726 <AmiBlitz3.ab3@2307>   MOVE.w #0,bssmode
0002072C <AmiBlitz3.ab3@2308>   CLR.w a2offset
00020732 <AmiBlitz3.ab3@2309>   CLR.w fast
00020738 <AmiBlitz3.ab3@2310>   CLR.w fpu
0002073E <AmiBlitz3.ab3@2311>   CLR.b iee
00020744 <AmiBlitz3.ab3@2312>   CLR.w newsyntax
00020748 <AmiBlitz3.ab3@2313>   BSR.w JL_0_38A6
0002074E <AmiBlitz3.ab3@2314>   JSR AJL_0_7962
00020754 <AmiBlitz3.ab3@2315>   JSR frallvars
0002075A <AmiBlitz3.ab3@2316>   JSR fralltypes
00020760 <AmiBlitz3.ab3@2317>   JSR freemacs
00020766 <AmiBlitz3.ab3@2318>   JSR clearfunctionlist
0002076C <AmiBlitz3.ab3@2319>   TST.w pass
00020772 <AmiBlitz3.ab3@2321>   JSR clearlabels
00020778 <AmiBlitz3.ab3@2322>   JSR clearhash
0002077E <AmiBlitz3.ab3@2325>   LEA devo,a0
00020782 <AmiBlitz3.ab3@2326>   MOVEM.l a0-a6/d0-d7,-(a7)
00020788 <AmiBlitz3.ab3@2327>   LEA ptr_parameterstore,a1
0002078A <AmiBlitz3.ab3@2330>     MOVE.b (a0)+,(a1)+
0002078E <AmiBlitz3.ab3@2331>   BNE 'l1b
00020790 <AmiBlitz3.ab3@2332>   MOVEQ #13,d2
00020796 <AmiBlitz3.ab3@2333>   JSR findlabel2
0002079A <AmiBlitz3.ab3@2334>   BNE 'd
0002079E <AmiBlitz3.ab3@2335>   CLR.l 8(a2)
000207A2 <AmiBlitz3.ab3@2338>   MOVEM.l (a7)+,a0-a6/d0-d7
000207CC <AmiBlitz3.ab3@2339>   !basic
00020840 <AmiBlitz3.ab3@2340>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0002085E <AmiBlitz3.ab3@2341>   !asm
00020864 <AmiBlitz3.ab3@2342>   CLR.b returncode
0002086A <AmiBlitz3.ab3@2343> JMP freeprocvs
00020870 <AmiBlitz3.ab3@2347>   MOVE.l #bssstore-labelhash,d0
00020872 <AmiBlitz3.ab3@2348>   ASR.l #2,d0
00020878 <AmiBlitz3.ab3@2349>   LEA labelhash,a0
0002087A <AmiBlitz3.ab3@2352>     CLR.l (a0)+
0002087C <AmiBlitz3.ab3@2353>     SUBQ.l #1,d0
00020880 <AmiBlitz3.ab3@2354>   BNE.s 'l10
00020886 <AmiBlitz3.ab3@2356>   LEA labelbase,a1
00020888 <AmiBlitz3.ab3@2357>   MOVE.l (a1),d0
0002088C <AmiBlitz3.ab3@2358>   BEQ 'l11
0002088E <AmiBlitz3.ab3@2361>     MOVE.l d0,a1
00020892 <AmiBlitz3.ab3@2362>     TST.l 4(a1)
00020896 <AmiBlitz3.ab3@2363>     BEQ 'l29
0002089A <AmiBlitz3.ab3@2364>     LEA $13(a1),a0
0002089C <AmiBlitz3.ab3@2365>     MOVEQ #0,d0
0002089E <AmiBlitz3.ab3@2366>     MOVEQ #0,d1
000208A0 <AmiBlitz3.ab3@2369>       MOVE.b (a0)+,d1
000208A4 <AmiBlitz3.ab3@2370>       BEQ 'l12
000208AA <AmiBlitz3.ab3@2371>       !hashalgo
000208AE <AmiBlitz3.ab3@2372> BRA 'l13
000208B4 <AmiBlitz3.ab3@2375>     LEA labelhash,a0
000208BA <AmiBlitz3.ab3@2376>     AND.l #hashsize,d0
000208BC <AmiBlitz3.ab3@2377>      ASL.l #2,d0
000208C0 <AmiBlitz3.ab3@2378>     MOVE.l 0(a0,d0),d1                                     ;*4
000208C4 <AmiBlitz3.ab3@2379>     MOVE.l d1,$c(a1)
000208C8 <AmiBlitz3.ab3@2380>     MOVE.l a1,0(a0,d0)
000208CA <AmiBlitz3.ab3@2383>     MOVE.l (a1),d0
000208CE <AmiBlitz3.ab3@2384>   BNE 'l21
000208D0 <AmiBlitz3.ab3@2387> RTS
000208D6 <AmiBlitz3.ab3@2391>   MOVEA.l lastrestype,A0
000208D8 <AmiBlitz3.ab3@2392>   MOVEA.l (A0),A2
000208DA <AmiBlitz3.ab3@2393>   CLR.l (A0)
000208E0 <AmiBlitz3.ab3@2394> JMP freetypes
000208E6 <AmiBlitz3.ab3@2398>   MOVEA.l varbase,A3
000208EC <AmiBlitz3.ab3@2399>   CLR.l varbase
000208F0 <AmiBlitz3.ab3@2402>   CMPA.w #$0,A3
000208F4 <AmiBlitz3.ab3@2403>   BEQ.w 'l20
000208F6 <AmiBlitz3.ab3@2404>   MOVEA.l A3,A1
000208F8 <AmiBlitz3.ab3@2405>   MOVEA.l (A3),A3
000208FA <AmiBlitz3.ab3@2406>   MOVEQ.l #$00,D0
000208FE <AmiBlitz3.ab3@2407>   MOVE.b $E+4(A1),D0
00020904 <AmiBlitz3.ab3@2408>   MOVEA.l _execbase,A6
0002090A <AmiBlitz3.ab3@2409>   MOVE.l mempool2,a0
0002090E <AmiBlitz3.ab3@2410>   JSR _FreePooled(A6)
00020912 <AmiBlitz3.ab3@2411> BRA.w 'l10
00020914 <AmiBlitz3.ab3@2414> RTS
0002091A <AmiBlitz3.ab3@2419>   LEA firstiff,A2
0002091C <AmiBlitz3.ab3@2420>   MOVEQ.l #$0E,D2
00020922 <AmiBlitz3.ab3@2421> JMP freeslist
00020924 <AmiBlitz3.ab3@2427> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00020926 <AmiBlitz3.ab3@2428> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0002092C <AmiBlitz3.ab3@2432>   CLR.w inmacro
00020932 <AmiBlitz3.ab3@2433>   ADDQ.l #1,globallinecount
00020938 <AmiBlitz3.ab3@2434>   CLR.b nostringopt
0002093C <AmiBlitz3.ab3@2435>   BSR.w JL_0_3CA4
00020942 <AmiBlitz3.ab3@2436>   CLR.w instringon
00020948 <AmiBlitz3.ab3@2439>   TST.w ininclude
0002094C <AmiBlitz3.ab3@2440>   BEQ.w JL_0_39B0
00020952 <AmiBlitz3.ab3@2441>   ADDQ.l #1,includeline
00020958 <AmiBlitz3.ab3@2442>     JSR ab3_WriteDebugFile
0002095E <AmiBlitz3.ab3@2443>   JSR AJL_0_C09E
00020962 <AmiBlitz3.ab3@2444>   BEQ.w JL_0_39B0
00020968 <AmiBlitz3.ab3@2445>   MOVE.w ininclude,D0
0002096C <AmiBlitz3.ab3@2446>   CMP.w #$4,D0
00020970 <AmiBlitz3.ab3@2447>   BCC.w JL_0_39AC
00020972 <AmiBlitz3.ab3@2448>   ADD.w D0,D0
00020978 <AmiBlitz3.ab3@2449>   LEA progress_per_line,A0
0002097C <AmiBlitz3.ab3@2450>   MOVE.w $0(A0,D0.W),D2
00020980 <AmiBlitz3.ab3@2451>   CMP.w progressbar_width(PC),D2
00020984 <AmiBlitz3.ab3@2452>   BCC.w JL_0_39AC
00020988 <AmiBlitz3.ab3@2453>   ADDQ.w #1,$0(A0,D0.W)
0002098A <AmiBlitz3.ab3@2454>   LSR.w #1,D0
0002098C <AmiBlitz3.ab3@2455>   MOVE.l d0,d1
0002098E <AmiBlitz3.ab3@2456>   EXT.l d1
00020990 <AmiBlitz3.ab3@2457>   MOVE.l d2,d0
00020992 <AmiBlitz3.ab3@2458>   EXT.l d0                                                 ;d0=x,d1=y
00020998 <AmiBlitz3.ab3@2460>   JSR update_progressbar
0002099A <AmiBlitz3.ab3@2463>   MOVEQ.l #-$01,D0
0002099C <AmiBlitz3.ab3@2464> RTS
000209A2 <AmiBlitz3.ab3@2468>   MOVE.l titleat,D0
000209A4 <AmiBlitz3.ab3@2469>   MOVEQ.l #$00,D1
000209AA <AmiBlitz3.ab3@2470>   MOVE.w progress_per_line,D1
000209AC <AmiBlitz3.ab3@2471>   ADD.l D1,D0
000209AE <AmiBlitz3.ab3@2472>   MOVE.l D0,D1
000209B0 <AmiBlitz3.ab3@2473>   SWAP D0
000209B6 <AmiBlitz3.ab3@2474>   CMP.w titleat,D0
000209BA <AmiBlitz3.ab3@2475>    BEQ.w JL_0_39E4
000209BC <AmiBlitz3.ab3@2479>   EXT.l d0
000209BE <AmiBlitz3.ab3@2480>   MOVE.l d1,-(a7)
000209C6 <AmiBlitz3.ab3@2483>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
000209CC <AmiBlitz3.ab3@2484>   JSR update_progressbar
000209D4 <AmiBlitz3.ab3@2485>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
000209D6 <AmiBlitz3.ab3@2489>   MOVE.l (a7)+,d1
000209DC <AmiBlitz3.ab3@2492>   MOVE.l D1,titleat
000209E2 <AmiBlitz3.ab3@2493>   ADDQ.l #1,linenumat
000209E8 <AmiBlitz3.ab3@2494>   CLR.w linedone
000209EE <AmiBlitz3.ab3@2495>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
000209F4 <AmiBlitz3.ab3@2497>   SUBQ.l #1,numlines2
000209F8 <AmiBlitz3.ab3@2498>    BEQ.w JL_0_3A12
000209FE <AmiBlitz3.ab3@2499>   MOVEA.l sourceline,A0
00020A00 <AmiBlitz3.ab3@2500>   MOVEA.l (A0),A0
00020A06 <AmiBlitz3.ab3@2501>   MOVE.l A0,sourceline
00020A0A <AmiBlitz3.ab3@2502>   LEA $9(A0),A5
00020A0C <AmiBlitz3.ab3@2505> RTS
00020A0E <AmiBlitz3.ab3@2509>   MOVE.w D0,-(A7)
00020A10 <AmiBlitz3.ab3@2510>   MOVEQ.l #$03,D0
00020A12 <AmiBlitz3.ab3@2513>     MOVE.w D1,D2
00020A16 <AmiBlitz3.ab3@2514>     ANDI.w #$F,D2
00020A1A <AmiBlitz3.ab3@2515>     ADDI.w #$30,D2
00020A1E <AmiBlitz3.ab3@2516>     CMP.w #$3A,D2
00020A22 <AmiBlitz3.ab3@2517>      BCS.w JL_0_3A2C
00020A24 <AmiBlitz3.ab3@2518>     ADDQ.w #7,D2
00020A28 <AmiBlitz3.ab3@2521>     MOVE.b D2,$0(A0,D0.W)
00020A2A <AmiBlitz3.ab3@2522>     LSR.w #4,D1
00020A2E <AmiBlitz3.ab3@2523>   DBF D0,JL_0_3A18
00020A30 <AmiBlitz3.ab3@2525>   MOVE.w (A7)+,D0
00020A32 <AmiBlitz3.ab3@2526> RTS
00020A38 <AmiBlitz3.ab3@2536>   MOVE.w skipcode,D1
00020A3C <AmiBlitz3.ab3@2537>   BNE.w JL_0_3A46
00020A3E <AmiBlitz3.ab3@2538> RTS
00020A40 <AmiBlitz3.ab3@2541>   MOVE.l A5,-(A7)
00020A42 <AmiBlitz3.ab3@2542>   MOVEQ.l #$3A,D1                                          ;':'
00020A44 <AmiBlitz3.ab3@2543>   MOVEQ.l #$21,D2                                          ;'!'
00020A46 <AmiBlitz3.ab3@2544>   MOVEQ.l #$3B,D3                                          ;';'
00020A48 <AmiBlitz3.ab3@2545>   MOVEQ.l #$22,D4                                          ;'"'
00020A4A <AmiBlitz3.ab3@2548>   MOVE.b (A5)+,D0
00020A4E <AmiBlitz3.ab3@2549>    BEQ.w JL_0_3CA0
00020A52 <AmiBlitz3.ab3@2550>    BPL.w JL_0_3A60
00020A54 <AmiBlitz3.ab3@2551>   MOVE.b (A5)+,D0
00020A58 <AmiBlitz3.ab3@2552> BRA.w JL_0_3A50
00020A5A <AmiBlitz3.ab3@2555>   CMP.b D4,D0
00020A5E <AmiBlitz3.ab3@2556>    BNE.w JL_0_3A82
00020A60 <AmiBlitz3.ab3@2559>   MOVE.b (A5)+,D0
00020A64 <AmiBlitz3.ab3@2560>    BEQ.w notqerr
00020A68 <AmiBlitz3.ab3@2566>   CMP.b #$22,D0
00020A6C <AmiBlitz3.ab3@2567>    BNE.w JL_0_3A66
00020A70 <AmiBlitz3.ab3@2568> BRA.w JL_0_3A50
00020A72 <AmiBlitz3.ab3@2571>   CMP.b D1,D0
00020A76 <AmiBlitz3.ab3@2572>    BEQ.w JL_0_3CA0
00020A78 <AmiBlitz3.ab3@2573>   CMP.b D3,D0
00020A7C <AmiBlitz3.ab3@2574>    BEQ.w JL_0_3CA0
00020A7E <AmiBlitz3.ab3@2577>   CMP.b D2,D0
00020A82 <AmiBlitz3.ab3@2578>    BNE.w JL_0_3A50
00020A8A <AmiBlitz3.ab3@2579>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
00020A8C <AmiBlitz3.ab3@2580>   MOVEA.l A5,A3
00020A92 <AmiBlitz3.ab3@2581>    JSR getparameter2
00020A96 <AmiBlitz3.ab3@2582>    BNE.w JL_0_3AAC
00020A9C <AmiBlitz3.ab3@2583> JMP syntaxerr
00020AA6 <AmiBlitz3.ab3@2588>    MOVE.w oldqflag,instringon
00020AAC <AmiBlitz3.ab3@2589>   MOVEA.l lastsourcepos,A5
00020AB2 <AmiBlitz3.ab3@2590>    JSR findmac                                             ;find macro
00020AB6 <AmiBlitz3.ab3@2591>    BEQ.w JL_0_3ABE
00020ABC <AmiBlitz3.ab3@2592> JMP nomacerr
00020AC2 <AmiBlitz3.ab3@2595>   TST.b debugmode
00020AC6 <AmiBlitz3.ab3@2596>   BEQ 'sk1
00020ACA <AmiBlitz3.ab3@2597>   MOVE.w #$4e71,d1
00020AD0 <AmiBlitz3.ab3@2598>   JSR writeword
00020AD2 <AmiBlitz3.ab3@2599>   MOVE.l a5,-(a7)
00020AD4 <AmiBlitz3.ab3@2600>   MOVE.l a3,a5
00020AD6 <AmiBlitz3.ab3@2601>   SUBQ.l #1,a5
00020ADE <AmiBlitz3.ab3@2602>   MOVE.w #$0,inmacro
00020AE2 <AmiBlitz3.ab3@2603>   BSR debugstuffa
00020AEA <AmiBlitz3.ab3@2604>   MOVE.w #$FFFF,inmacro
00020AEC <AmiBlitz3.ab3@2605>   MOVE.l (a7)+,a5
00020AF0 <AmiBlitz3.ab3@2606>   MOVE.w #$4e71,d1
00020AF6 <AmiBlitz3.ab3@2607>   JSR writeword
00020AF8 <AmiBlitz3.ab3@2610>   MOVEA.l A5,A4
00020AFC <AmiBlitz3.ab3@2613>    CMP.b #" ",(a4)+
00020B00 <AmiBlitz3.ab3@2614>     BEQ 'l5a
00020B02 <AmiBlitz3.ab3@2615>      SUBQ.l#1,a4
00020B06 <AmiBlitz3.ab3@2616>      CMP.b #",",(a4)
00020B0A <AmiBlitz3.ab3@2617>     BEQ JL_0_3AEA
00020B0C <AmiBlitz3.ab3@2620>   MOVEQ.l #$00,D4
00020B12 <AmiBlitz3.ab3@2621>   TST.b newsyntax
00020B16 <AmiBlitz3.ab3@2622>   BEQ 'l10b
00020B1A <AmiBlitz3.ab3@2623>   MOVEM.l a0/d0,-(a7)
00020B1E <AmiBlitz3.ab3@2624>   MOVE.l 4(a2),a0
00020B22 <AmiBlitz3.ab3@2625>   MOVE.w 8(a2),d0
00020B26 <AmiBlitz3.ab3@2628>   CMP.b #"`",(a0)+
00020B2A <AmiBlitz3.ab3@2629>   BEQ 'x1
00020B2C <AmiBlitz3.ab3@2630>   SUBQ.w #1,d0
00020B30 <AmiBlitz3.ab3@2631>   BNE 'x2
00020B34 <AmiBlitz3.ab3@2632> BRA 'x3
00020B38 <AmiBlitz3.ab3@2635>   MOVEM.l (a7)+,a0/d0
00020B3C <AmiBlitz3.ab3@2636> BRA 'l10
00020B40 <AmiBlitz3.ab3@2639>   MOVEM.l (a7)+,a0/d0
00020B44 <AmiBlitz3.ab3@2640> BRA JL_0_3AEA
00020B48 <AmiBlitz3.ab3@2643>   CMPI.b #"{",(A4)
00020B4C <AmiBlitz3.ab3@2644>    BNE.w JL_0_3AEA
00020B4E <AmiBlitz3.ab3@2648>   ADDQ.l #1,a4
00020B52 <AmiBlitz3.ab3@2651>     CMP.b #" ",(a4)
00020B56 <AmiBlitz3.ab3@2652>     BEQ 'l5
00020B5A <AmiBlitz3.ab3@2653>     MOVEM.l a0/d0,-(a7)
00020B60 <AmiBlitz3.ab3@2654>     CLR.b exmac
00020B66 <AmiBlitz3.ab3@2655>     LEA chartab,a0
00020B68 <AmiBlitz3.ab3@2656>     MOVEQ #0,d0
00020B6A <AmiBlitz3.ab3@2657>     MOVE.b (a4),d0
00020B6E <AmiBlitz3.ab3@2658>     BMI 'm1
00020B72 <AmiBlitz3.ab3@2659>     TST.b 0(a0,d0)
00020B76 <AmiBlitz3.ab3@2660>     BEQ 'm1
00020B7C <AmiBlitz3.ab3@2661>     TST.b newsyntax
00020B80 <AmiBlitz3.ab3@2662>     BEQ 'ns1
00020B84 <AmiBlitz3.ab3@2663>     CMP.b #"#",d0
00020B88 <AmiBlitz3.ab3@2664>     BEQ 'm1
00020B8C <AmiBlitz3.ab3@2665>     CMP.b #"$",d0
00020B90 <AmiBlitz3.ab3@2666>     BEQ 'm1
00020B94 <AmiBlitz3.ab3@2667>     CMP.b #"-",d0
00020B98 <AmiBlitz3.ab3@2668>     BEQ 'm1
00020B9C <AmiBlitz3.ab3@2671>   CMP.b #",",d0
00020BA0 <AmiBlitz3.ab3@2672>     BEQ 'm1
00020BA4 <AmiBlitz3.ab3@2673>     CMP.b #"{",d0
00020BA8 <AmiBlitz3.ab3@2674>     BNE 'm1b
00020BAA <AmiBlitz3.ab3@2675>     ADDQ.l #1,a4
00020BAE <AmiBlitz3.ab3@2676> BRA 'm1
00020BB4 <AmiBlitz3.ab3@2679>   TST.b newsyntax
00020BB8 <AmiBlitz3.ab3@2680>     BEQ 'm1
00020BC0 <AmiBlitz3.ab3@2681>     MOVE.b #1,exmac
00020BC4 <AmiBlitz3.ab3@2684>   MOVEM.l (a7)+,a0/d0
00020BCA <AmiBlitz3.ab3@2685>     TST.b exmac
00020BCE <AmiBlitz3.ab3@2686>     BNE JL_0_3AEA
00020BD0 <AmiBlitz3.ab3@2693>   TST.b (a4)
00020BD4 <AmiBlitz3.ab3@2694>   BEQ JL_0_3AEA
00020BDA <AmiBlitz3.ab3@2697>   MOVEA.l ptr_macrobuffer_begin,A0
00020BDC <AmiBlitz3.ab3@2700>   ADDQ.w #1,D4
00020BDE <AmiBlitz3.ab3@2701>   MOVE.l A4,(A0)
00020BE2 <AmiBlitz3.ab3@2702>   CLR.w 4(a0)
00020BE6 <AmiBlitz3.ab3@2703>    BSR.w JL_0_3CC6
00020BE8 <AmiBlitz3.ab3@2705>   ADDQ.l #4,a0
00020BEA <AmiBlitz3.ab3@2709>   SUBQ.w #1,(a0)+
00020BEE <AmiBlitz3.ab3@2710>   CMP.b #$7D,D0
00020BF2 <AmiBlitz3.ab3@2711>   BEQ 'l10
00020BF4 <AmiBlitz3.ab3@2712>   TST.b d0
00020BF8 <AmiBlitz3.ab3@2713>   BEQ 'l10
00020BFC <AmiBlitz3.ab3@2714> BRA JL_0_3AD0
00020C02 <AmiBlitz3.ab3@2718>   CLR.l sourceline3
00020C04 <AmiBlitz3.ab3@2719>   MOVEA.l A4,A5
00020C0A <AmiBlitz3.ab3@2722>   MOVE.w D4,numarg
00020C10 <AmiBlitz3.ab3@2729>   MOVE.l #$01,D1
00020C16 <AmiBlitz3.ab3@2730>   MOVEA.l _execbase,A6
00020C1C <AmiBlitz3.ab3@2731>   MOVE.l mempool,a0
00020C22 <AmiBlitz3.ab3@2732>   MOVE.l macrobuffer_size,D0
00020C28 <AmiBlitz3.ab3@2733>   CMP.l #40000,d0
00020C2C <AmiBlitz3.ab3@2734>   BGE 'l1m
00020C32 <AmiBlitz3.ab3@2735>   MOVE.l #40000,d0
00020C38 <AmiBlitz3.ab3@2736>   MOVE.l d0,macrobuffer_size
00020C3C <AmiBlitz3.ab3@2739>   JSR _AllocPooled(a6)
00020C46 <AmiBlitz3.ab3@2741>   MOVE.l myline,myoline
00020C48 <AmiBlitz3.ab3@2744>   ADDQ.l #1,d0
00020C4E <AmiBlitz3.ab3@2745>   MOVE.l D0,myline
00020C50 <AmiBlitz3.ab3@2746>   MOVEA.l D0,A1
00020C56 <AmiBlitz3.ab3@2747>   MOVE.b #":",-1(a1)
00020C58 <AmiBlitz3.ab3@2748>   MOVEA.l A1,A6
00020C5E <AmiBlitz3.ab3@2749>   ADDA.l macrobuffer_size,A6
00020C60 <AmiBlitz3.ab3@2750>   MOVEA.l (A7)+,A0
00020C62 <AmiBlitz3.ab3@2753>   CMPA.l A6,A1
00020C66 <AmiBlitz3.ab3@2754>    BCC.w mbovererr
00020C68 <AmiBlitz3.ab3@2755>   MOVE.b (A0)+,(a1)+
00020C6A <AmiBlitz3.ab3@2756>   CMPA.l A3,A0
00020C6E <AmiBlitz3.ab3@2757>    BCS.w JL_0_3B1E
00020C70 <AmiBlitz3.ab3@2758>   SUBQ.w #1,A1
00020C74 <AmiBlitz3.ab3@2759>   MOVE.w $8(A2),D1
00020C78 <AmiBlitz3.ab3@2760>    BEQ.w JL_0_3C70
00020C80 <AmiBlitz3.ab3@2761>   MOVE.w $A(A2),macnum
00020C84 <AmiBlitz3.ab3@2762>   ADDQ.w #1,$A(A2)
00020C88 <AmiBlitz3.ab3@2763>   MOVEA.l $4(A2),A2
00020C8A <AmiBlitz3.ab3@2764>   SUBQ.w #1,D1
00020C90 <AmiBlitz3.ab3@2765>   CLR.b firstmline
00020C92 <AmiBlitz3.ab3@2768>     MOVEQ.l #$00,D0
00020C94 <AmiBlitz3.ab3@2769>     MOVE.b (A2)+,D0
00020C9A <AmiBlitz3.ab3@2770>     TST.b firstmline
00020C9E <AmiBlitz3.ab3@2771>     BNE 'c1
00020CA2 <AmiBlitz3.ab3@2772>     CMP.b #$22,d0
00020CA6 <AmiBlitz3.ab3@2773>     BNE 's1
00020CAE <AmiBlitz3.ab3@2774>     MOVE.b #1,firstmline
00020CB2 <AmiBlitz3.ab3@2777>     CMP.b #":",d0
00020CB6 <AmiBlitz3.ab3@2778>     BNE 'm1
00020CBE <AmiBlitz3.ab3@2779>     MOVE.b #1,firstmline
00020CC2 <AmiBlitz3.ab3@2782>     CMP.b #";",d0
00020CC6 <AmiBlitz3.ab3@2783>     BNE 'c1
00020CC8 <AmiBlitz3.ab3@2786>     SUBQ.w #1,d1                                           ;filter out comment
00020CCA <AmiBlitz3.ab3@2787>     MOVE.b (a2)+,d0
00020CD0 <AmiBlitz3.ab3@2788>     CMP.w #":@",-1(a2)
00020CD4 <AmiBlitz3.ab3@2789>     BEQ 'c2
00020CD6 <AmiBlitz3.ab3@2790>     TST.w d1
00020CDA <AmiBlitz3.ab3@2791>     BNE 'l1
00020CDE <AmiBlitz3.ab3@2792>   BRA JL_0_3C6C
00020CE4 <AmiBlitz3.ab3@2795>     CMP.b #":",1(a2)
00020CE8 <AmiBlitz3.ab3@2796>       BNE 'l1
00020CEA <AmiBlitz3.ab3@2797>       ADDQ #2,a2
00020CEC <AmiBlitz3.ab3@2798>       SUBQ #3,d1
00020CEE <AmiBlitz3.ab3@2799>       MOVE.b (a2)+,d0
00020CF6 <AmiBlitz3.ab3@2800>       MOVE.b #1,firstmline
00020CFA <AmiBlitz3.ab3@2803>     CMP.b #"`",D0
00020CFE <AmiBlitz3.ab3@2804>      BNE.w JL_0_3C56
00020D00 <AmiBlitz3.ab3@2805>     SUBQ.w #1,D1
00020D02 <AmiBlitz3.ab3@2806>     MOVE.b (A2)+,D0
00020D06 <AmiBlitz3.ab3@2807>     CMP.w #$7B,D0
00020D0A <AmiBlitz3.ab3@2808>      BEQ.w JL_0_3BB6
00020D0E <AmiBlitz3.ab3@2809>     CMP.w #$40,D0
00020D12 <AmiBlitz3.ab3@2810>      BNE.w JL_0_3B82
00020D14 <AmiBlitz3.ab3@2811>     MOVEQ.l #$00,D2
00020D1A <AmiBlitz3.ab3@2812>     MOVE.w macnum,D2
00020D1C <AmiBlitz3.ab3@2813>     MOVEA.l A1,A0
00020D1E <AmiBlitz3.ab3@2814>     MOVE.w D1,-(A7)
00020D24 <AmiBlitz3.ab3@2815>      JSR makelong
00020D26 <AmiBlitz3.ab3@2816>     MOVEA.l A0,A1
00020D28 <AmiBlitz3.ab3@2817>     MOVE.w (A7)+,D1
00020D2C <AmiBlitz3.ab3@2818>   BRA.w JL_0_3C6C
00020D30 <AmiBlitz3.ab3@2821>     ORI.w #$20,D0
00020D34 <AmiBlitz3.ab3@2822>     CMP.w #$7A,D0
00020D38 <AmiBlitz3.ab3@2823>      BCS.w JL_0_3B94
00020D3E <AmiBlitz3.ab3@2824>   JMP ilconsterr
00020D42 <AmiBlitz3.ab3@2827>     SUBI.w #$30,D0
00020D46 <AmiBlitz3.ab3@2828>     CMP.w #$A,D0
00020D4A <AmiBlitz3.ab3@2829>      BCS.w JL_0_3BF2
00020D4E <AmiBlitz3.ab3@2830>     SUBI.w #$27,D0
00020D52 <AmiBlitz3.ab3@2831>     CMP.w #$A,D0
00020D56 <AmiBlitz3.ab3@2832>      BCC.w JL_0_3BB2
00020D5C <AmiBlitz3.ab3@2833>   JMP ilconsterr
00020D60 <AmiBlitz3.ab3@2836>   BRA.w JL_0_3BF2
00020D62 <AmiBlitz3.ab3@2839>     MOVE.l A5,-(A7)
00020D66 <AmiBlitz3.ab3@2840>     MOVEM.l D1/A1-A2/A6,-(A7)
00020D68 <AmiBlitz3.ab3@2841>     MOVEA.l A2,A5
00020D6E <AmiBlitz3.ab3@2842>      JSR AJL_0_BF6E
00020D72 <AmiBlitz3.ab3@2843>     CMP.w #$7D,D0
00020D76 <AmiBlitz3.ab3@2844>      BEQ.w JL_0_3BD2
00020D7C <AmiBlitz3.ab3@2845>   JMP syntaxerr
00020D80 <AmiBlitz3.ab3@2848>     MOVEM.l (A7)+,D1/A1-A2/A6
00020D82 <AmiBlitz3.ab3@2849>     MOVE.l A5,D2
00020D84 <AmiBlitz3.ab3@2850>     SUB.l A2,D2
00020D86 <AmiBlitz3.ab3@2851>     SUB.w D2,D1
00020D88 <AmiBlitz3.ab3@2852>     MOVEA.l A5,A2
00020D8E <AmiBlitz3.ab3@2853>     CLR.w instringon
00020D90 <AmiBlitz3.ab3@2854>     MOVEA.l (A7)+,A5
00020D92 <AmiBlitz3.ab3@2855>     MOVE.l D3,D0
00020D96 <AmiBlitz3.ab3@2856>     BPL.w JL_0_3BF2
00020D9C <AmiBlitz3.ab3@2857>   JMP ilconsterr
00020D9E <AmiBlitz3.ab3@2860>     SUBQ.w #1,D0
00020DA2 <AmiBlitz3.ab3@2861>      BPL.w JL_0_3C20
00020DA8 <AmiBlitz3.ab3@2865>     MOVE.w numarg,D0
00020DAC <AmiBlitz3.ab3@2866>     DIVU #$A,D0
00020DB0 <AmiBlitz3.ab3@2867>     ADDI.w #$30,D0
00020DB2 <AmiBlitz3.ab3@2868>     CMPA.l A6,A1
00020DB6 <AmiBlitz3.ab3@2869>      BCC.w mbovererr
00020DB8 <AmiBlitz3.ab3@2870>     MOVE.b D0,(A1)+
00020DBA <AmiBlitz3.ab3@2871>     SWAP D0
00020DBE <AmiBlitz3.ab3@2872>     ADDI.w #$30,D0
00020DC0 <AmiBlitz3.ab3@2873>     CMPA.l A6,A1
00020DC4 <AmiBlitz3.ab3@2874>      BCC.w mbovererr
00020DC6 <AmiBlitz3.ab3@2875>     MOVE.b D0,(A1)+
00020DCA <AmiBlitz3.ab3@2876>   BRA.w JL_0_3C6C
00020DD0 <AmiBlitz3.ab3@2882>     CMP.w numarg,D0
00020DD4 <AmiBlitz3.ab3@2883>      BCC.w JL_0_3C6C
00020DD6 <AmiBlitz3.ab3@2884>     LSL.w #1,D0
00020DD8 <AmiBlitz3.ab3@2885>     MOVE.w D0,D4
00020DDA <AmiBlitz3.ab3@2886>     LSL.w #1,D0
00020DDC <AmiBlitz3.ab3@2887>     ADD.w D4,D0
00020DE2 <AmiBlitz3.ab3@2888>     MOVEA.l ptr_macrobuffer_begin,A0
00020DE4 <AmiBlitz3.ab3@2889>     ADDA.w D0,A0
00020DE8 <AmiBlitz3.ab3@2890>     MOVE.w $4(A0),D4
00020DEC <AmiBlitz3.ab3@2891>      BEQ.w JL_0_3C6C
00020DEE <AmiBlitz3.ab3@2892>     MOVEA.l (A0),A0
00020DF0 <AmiBlitz3.ab3@2893>     SUBQ.w #1,D4
00020DF2 <AmiBlitz3.ab3@2896>       CMPA.l A6,A1
00020DF6 <AmiBlitz3.ab3@2897>        BCC.w mbovererr
00020DFA <AmiBlitz3.ab3@2898>       CMP.w #"@@",(a0)
00020DFE <AmiBlitz3.ab3@2899>        BNE 'l10
00020E04 <AmiBlitz3.ab3@2900>       TST.w ininclude
00020E08 <AmiBlitz3.ab3@2901>        BNE errorjoin
00020E0E <AmiBlitz3.ab3@2904>       MOVE.l sourceline,a0
00020E10 <AmiBlitz3.ab3@2905>       MOVE.l (a0),a0
00020E16 <AmiBlitz3.ab3@2906>       CMP.l #0,a0
00020E1A <AmiBlitz3.ab3@2907>       BNE 'l11
00020E1C <AmiBlitz3.ab3@2908>       MOVEQ #0,d0
00020E22 <AmiBlitz3.ab3@2909>       JSR error
00020E28 <AmiBlitz3.ab3@2912>       MOVE.l a0,sourceline
00020E2E <AmiBlitz3.ab3@2913>       ADDQ.l #1,linenumat
00020E32 <AmiBlitz3.ab3@2914>       LEA 9(a0),a0
00020E34 <AmiBlitz3.ab3@2915>       MOVE.l a0,-(a7)
00020E38 <AmiBlitz3.ab3@2918>       CMP.b #" ",(a0)+
00020E3C <AmiBlitz3.ab3@2919>        BEQ 'l110
00020E42 <AmiBlitz3.ab3@2920>       CMP.b #";",-1(a0)
00020E44 <AmiBlitz3.ab3@2921>       MOVE.l (a7)+,a0
00020E48 <AmiBlitz3.ab3@2922>        BEQ 'l111
00020E4A <AmiBlitz3.ab3@2923>       SUBQ.l #1,d4
00020E4C <AmiBlitz3.ab3@2926>       MOVE.b (A0)+,(A1)+
00020E50 <AmiBlitz3.ab3@2927>     DBF D4,JL_0_3C46
00020E54 <AmiBlitz3.ab3@2929>   BRA.w JL_0_3C6C
00020E56 <AmiBlitz3.ab3@2932>     CMPA.l A6,A1
00020E5A <AmiBlitz3.ab3@2933>      BCC.w mbovererr
00020E5C <AmiBlitz3.ab3@2934>     MOVE.b D0,(A1)+
00020E60 <AmiBlitz3.ab3@2935>      BPL.w JL_0_3C6C
00020E62 <AmiBlitz3.ab3@2936>     CMPA.l A6,A1
00020E66 <AmiBlitz3.ab3@2937>      BCC.w mbovererr
00020E68 <AmiBlitz3.ab3@2938>     MOVE.b (A2)+,(A1)+
00020E6A <AmiBlitz3.ab3@2939>     SUBQ.w #1,D1
00020E6E <AmiBlitz3.ab3@2942>   DBF D1,JL_0_3B48
00020E70 <AmiBlitz3.ab3@2952>   CMPA.l A6,A1
00020E74 <AmiBlitz3.ab3@2953>    BCC.w mbovererr
00020E76 <AmiBlitz3.ab3@2954>   MOVE.b (A5)+,(A1)+
00020E7A <AmiBlitz3.ab3@2955>    BNE.w JL_0_3C70
00020E80 <AmiBlitz3.ab3@2956>   MOVEA.l myline,A5
00020E86 <AmiBlitz3.ab3@2957>   MOVE.l myoline,D0
00020E8A <AmiBlitz3.ab3@2958>    BEQ.w JL_0_3C9C
00020E8C <AmiBlitz3.ab3@2959>   SUBQ.l #1,d0
00020E8E <AmiBlitz3.ab3@2960>   MOVEA.l D0,A1
00020E94 <AmiBlitz3.ab3@2961>   MOVE.l macrobuffer_size,D0
00020E9A <AmiBlitz3.ab3@2962>   MOVEA.l _execbase,A6
00020EA0 <AmiBlitz3.ab3@2963>   MOVE.l mempool,a0
00020EA4 <AmiBlitz3.ab3@2964>   JSR _FreePooled(A6)
00020EA8 <AmiBlitz3.ab3@2967> BRA.w JL_0_3A46
00020EAA <AmiBlitz3.ab3@2970>   MOVEA.l (A7)+,A5
00020EAC <AmiBlitz3.ab3@2971> RTS
00020EB2 <AmiBlitz3.ab3@2975>   MOVE.l myline,D0
00020EB6 <AmiBlitz3.ab3@2976>   BEQ.w JL_0_3CC4
00020EB8 <AmiBlitz3.ab3@2977>   SUBQ.l #1,d0
00020EBE <AmiBlitz3.ab3@2978>   CLR.l myline
00020EC0 <AmiBlitz3.ab3@2979>   MOVEA.l D0,A1
00020EC6 <AmiBlitz3.ab3@2980>   MOVE.l macrobuffer_size,D0
00020ECC <AmiBlitz3.ab3@2981>   MOVEA.l _execbase,A6
00020ED2 <AmiBlitz3.ab3@2982>   MOVE.l mempool,a0
00020ED6 <AmiBlitz3.ab3@2983> JMP _FreePooled(A6)
00020ED8 <AmiBlitz3.ab3@2986> RTS
00020EDA <AmiBlitz3.ab3@2990>   MOVEQ.l #$00,D2
00020EDE <AmiBlitz3.ab3@2993>   ADDQ.w #1,4(a0)
00020EE0 <AmiBlitz3.ab3@2994>    MOVE.b (A4)+,D0
00020EE4 <AmiBlitz3.ab3@2996>    BEQ exit1
00020EE8 <AmiBlitz3.ab3@2997>    BPL.w JL_0_3CD8
00020EEC <AmiBlitz3.ab3@2998>   ADDQ.w #1,4(a0)
00020EEE <AmiBlitz3.ab3@2999>   ADDQ.w #1,A4
00020EF2 <AmiBlitz3.ab3@3000> BRA.w JL_0_3CC8
00020EF8 <AmiBlitz3.ab3@3003>    TST.w instringon
00020EFC <AmiBlitz3.ab3@3004>    BNE 'lnom
00020F00 <AmiBlitz3.ab3@3005>    CMP.b #";",d0
00020F04 <AmiBlitz3.ab3@3006>    BEQ exit2
00020F08 <AmiBlitz3.ab3@3007>    CMP.b #":",d0
00020F0C <AmiBlitz3.ab3@3008>    BEQ exit2
00020F10 <AmiBlitz3.ab3@3011>   CMP.b #$22,D0
00020F14 <AmiBlitz3.ab3@3012>    BNE.w JL_0_3CEA
00020F1A <AmiBlitz3.ab3@3013>   NOT.w instringon
00020F1E <AmiBlitz3.ab3@3014> BRA.w JL_0_3CC8
00020F24 <AmiBlitz3.ab3@3018>   TST.w instringon
00020F28 <AmiBlitz3.ab3@3019>    BNE.w JL_0_3CC8
00020F2C <AmiBlitz3.ab3@3020>    CMP.b #"@",d0
00020F30 <AmiBlitz3.ab3@3021>    BNE 'l10
00020F34 <AmiBlitz3.ab3@3022>    CMP.b #"@",(a4)
00020F38 <AmiBlitz3.ab3@3023>    BNE 'l10
00020F3E <AmiBlitz3.ab3@3024>    TST.w ininclude
00020F42 <AmiBlitz3.ab3@3025>    BNE errorjoin
00020F48 <AmiBlitz3.ab3@3026>    MOVE.l sourceline3,a4
00020F4E <AmiBlitz3.ab3@3027>    CMP.l #0,a4
00020F52 <AmiBlitz3.ab3@3028>    BNE 'l11
00020F58 <AmiBlitz3.ab3@3029>    MOVE.l sourceline,a4
00020F5A <AmiBlitz3.ab3@3032>   MOVE.l (a4),a4
00020F60 <AmiBlitz3.ab3@3033>       CMP.l #0,a4
00020F64 <AmiBlitz3.ab3@3034>       BNE 'l12
00020F66 <AmiBlitz3.ab3@3035>       MOVEQ #0,d0
00020F6C <AmiBlitz3.ab3@3036>       JSR error
00020F72 <AmiBlitz3.ab3@3039>    MOVE.l a4,sourceline3
00020F76 <AmiBlitz3.ab3@3040>    LEA 9(a4),a4
00020F78 <AmiBlitz3.ab3@3041>    MOVEQ #",",d0
00020F7C <AmiBlitz3.ab3@3044>   CMP.b #$2C,D0
00020F80 <AmiBlitz3.ab3@3045>    BNE.w JL_0_3D06
00020F82 <AmiBlitz3.ab3@3046>   TST.w D2
00020F86 <AmiBlitz3.ab3@3047>    BEQ.w JL_0_3D30
00020F8A <AmiBlitz3.ab3@3048> BRA.w JL_0_3CC8
00020F8E <AmiBlitz3.ab3@3052>    CMP.b #$7B,D0                                           ;"{"
00020F92 <AmiBlitz3.ab3@3053>    BEQ.w 'l10
00020F96 <AmiBlitz3.ab3@3054>   CMP.b #$28,D0                                            ;"("
00020F9A <AmiBlitz3.ab3@3057>    BNE.w JL_0_3D14
00020F9C <AmiBlitz3.ab3@3058>   ADDQ.w #1,D2
00020FA0 <AmiBlitz3.ab3@3059> BRA.w JL_0_3CC8
00020FA4 <AmiBlitz3.ab3@3062>   CMP.b #$7D,D0                                           ;"}"
00020FA8 <AmiBlitz3.ab3@3063>    BNE.w JL_0_3D22
00020FAA <AmiBlitz3.ab3@3064>  TST.w D2
00020FAE <AmiBlitz3.ab3@3065>    BEQ.w JL_0_3D30
00020FB2 <AmiBlitz3.ab3@3069>    CMP.b #$7D,D0                                           ;"}"
00020FB6 <AmiBlitz3.ab3@3070>    BEQ.w 'l10
00020FBA <AmiBlitz3.ab3@3071>   CMP.b #$29,D0                                            ;")"
00020FBE <AmiBlitz3.ab3@3074>    BNE.w JL_0_3CC8
00020FC0 <AmiBlitz3.ab3@3075>   SUBQ.w #1,D2
00020FC4 <AmiBlitz3.ab3@3076> BRA.w JL_0_3CC8
00020FC6 <AmiBlitz3.ab3@3079> RTS
00020FC8 <AmiBlitz3.ab3@3083>       SUBQ.l #1,a4
00020FCE <AmiBlitz3.ab3@3084>       CLR.l sourceline3
00020FD0 <AmiBlitz3.ab3@3085> RTS
00020FD2 <AmiBlitz3.ab3@3089>       MOVEQ #0,d0
00020FD4 <AmiBlitz3.ab3@3090>       SUBQ.l #1,a4
00020FDA <AmiBlitz3.ab3@3091>       CLR.l sourceline3
00020FDC <AmiBlitz3.ab3@3092> RTS
00020FE0 <AmiBlitz3.ab3@3096>   CMP.b #$7B,D0                                            ;"{"
00020FE4 <AmiBlitz3.ab3@3097>   BEQ.w JL_0_3D3E
00020FE8 <AmiBlitz3.ab3@3098>   CMP.b #$28,D0                                            ;"("
00020FEA <AmiBlitz3.ab3@3101> RTS
00020FEE <AmiBlitz3.ab3@3105>   CMP.b #$7D,D0                                            ;"}"
00020FF2 <AmiBlitz3.ab3@3106>   BEQ.w JL_0_3D4C
00020FF6 <AmiBlitz3.ab3@3107>   CMP.b #$29,D0                                            ;")"
00020FF8 <AmiBlitz3.ab3@3110> RTS
00020FFA <AmiBlitz3.ab3@3114> stopit:     Ds.w 1
00020FFC <AmiBlitz3.ab3@3115> clrreq:     Ds.w 1
00021000 <AmiBlitz3.ab3@3136>   MOVE.w clrreq(PC),D0
00021004 <AmiBlitz3.ab3@3137>    BEQ.w close_compilewin__skip
00021036 <AmiBlitz3.ab3@3139> 
0002103C <AmiBlitz3.ab3@3141>   LEA clrreq,a0
0002103E <AmiBlitz3.ab3@3142>   NOT.w (a0)                                               ;reass
00021044 <AmiBlitz3.ab3@3143>   MOVEA.l ptr_ThisTask,A0
00021048 <AmiBlitz3.ab3@3144>   CLR.l $1E(A0)
0002104C <AmiBlitz3.ab3@3145>   CLR.l $2A(A0)
0002104E <AmiBlitz3.ab3@3148> RTS
00021050 <AmiBlitz3.ab3@3151> intsused:  Ds.w 1
00021058 <AmiBlitz3.ab3@3155>   MOVE.w #-1,blitzoff
0002105E <AmiBlitz3.ab3@3156>   CLR.w intsused
00021064 <AmiBlitz3.ab3@3157>   CLR.w anyerrs
0002106A <AmiBlitz3.ab3@3158>   CLR.w blitzmode
00021070 <AmiBlitz3.ab3@3159>   CLR.w dontwrite                                              ;nomemleft
00021076 <AmiBlitz3.ab3@3160>   CLR.w constmode
0002107C <AmiBlitz3.ab3@3161>   CLR.w cmake
00021082 <AmiBlitz3.ab3@3162>   CLR.w cfetchmode
00021088 <AmiBlitz3.ab3@3163>   CLR.l intdata1
0002108E <AmiBlitz3.ab3@3164>   CLR.w fuckpos
00021094 <AmiBlitz3.ab3@3165>   CLR.w procnum
0002109A <AmiBlitz3.ab3@3166>   CLR.w procnum2
000210A0 <AmiBlitz3.ab3@3167>   CLR.w dfetch
000210A6 <AmiBlitz3.ab3@3168>   CLR.l titleat
000210AC <AmiBlitz3.ab3@3169>   CLR.b usedpath
000210B2 <AmiBlitz3.ab3@3170>   CLR.b path2
000210B8 <AmiBlitz3.ab3@3171>   CLR.w inerr
000210BE <AmiBlitz3.ab3@3172>   CLR.w intlevel
000210C4 <AmiBlitz3.ab3@3173>   CLR.l cont_pc
000210CA <AmiBlitz3.ab3@3174>   CLR.l cont_pc2
000210D0 <AmiBlitz3.ab3@3175>   CLR.l lastcontlink
000210DA <AmiBlitz3.ab3@3176>   MOVE.l destbufferstart,destpointer
000210E4 <AmiBlitz3.ab3@3177>   MOVE.l destbufferstart,bigpc
000210EE <AmiBlitz3.ab3@3178>   MOVE.l destbufferend,libend
000210F8 <AmiBlitz3.ab3@3179>   MOVE.l data1start,data1
00021102 <AmiBlitz3.ab3@3180>   MOVE.l data2at,data2
0002110A <AmiBlitz3.ab3@3181>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021112 <AmiBlitz3.ab3@3182>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021118 <AmiBlitz3.ab3@3183>   CLR.w oldvcodelen
0002111E <AmiBlitz3.ab3@3184>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021120 <AmiBlitz3.ab3@3185> RTS
00021122 <AmiBlitz3.ab3@3188> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021128 <AmiBlitz3.ab3@3192>   LEA  clrreq,a1
0002112C <AmiBlitz3.ab3@3193>   MOVE.w #2000,(a1)
00021156 <AmiBlitz3.ab3@3194>   !basic
0002116C <AmiBlitz3.ab3@3195> 
000211BC <AmiBlitz3.ab3@3196>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
000211C4 <AmiBlitz3.ab3@3197>   calcpro.l      = 0
000211CC <AmiBlitz3.ab3@3198>   calcpro_old.l  = 0
000211D8 <AmiBlitz3.ab3@3199>   typ_old.l      = -1
000211E4 <AmiBlitz3.ab3@3200>   pass_old.l     = -1
000211EA <AmiBlitz3.ab3@3201>   update_comstatus_gui.b = True ; for the first
00021224 <AmiBlitz3.ab3@3203>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
0002125E <AmiBlitz3.ab3@3204>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
0002127C <AmiBlitz3.ab3@3205>   !asm
000212AE <AmiBlitz3.ab3@3206> 
000212B4 <AmiBlitz3.ab3@3208>   CLR.w stopit
000212B6 <AmiBlitz3.ab3@3209> RTS
000212BC <AmiBlitz3.ab3@3213>   CLR.w storedebugmode
000212C2 <AmiBlitz3.ab3@3214>   CLR.b iserror
000212C6 <AmiBlitz3.ab3@3215>   BSR.w compilerequester
000212D0 <AmiBlitz3.ab3@3217>   MOVE.l #0,globallinecount
000212D6 <AmiBlitz3.ab3@3218>   JSR check_of_same_source
000212DA <AmiBlitz3.ab3@3219>   BSR.w call_setpointerbusy
000212DE <AmiBlitz3.ab3@3220>   BSR.w setcvars
000212E6 <AmiBlitz3.ab3@3221>   MOVE.w #$8000,globalvarpointer
000212F0 <AmiBlitz3.ab3@3222>   MOVE.l #newtype_quick,defaulttype
000212F6 <AmiBlitz3.ab3@3223>   MOVE.l A7,passstack
00021300 <AmiBlitz3.ab3@3224>   MOVE.l #firstitem_,sourceline
0002130A <AmiBlitz3.ab3@3225>   MOVE.w numlines_org,linesleft
00021314 <AmiBlitz3.ab3@3226>   MOVE.l numlines,numlines2
0002131A <AmiBlitz3.ab3@3227>   ADDQ.w #1,linesleft
00021320 <AmiBlitz3.ab3@3228>   ADDQ.l #1,numlines2
0002132A <AmiBlitz3.ab3@3229>   MOVE.l #-1,linenumat
0002132E <AmiBlitz3.ab3@3230>   BSR.w resetlibs
00021332 <AmiBlitz3.ab3@3231>   BSR.w Aclearallvars
00021338 <AmiBlitz3.ab3@3232>   LEA progress_per_line+2,A0
0002133A <AmiBlitz3.ab3@3233>   MOVEQ.l #$03,D0
0002133C <AmiBlitz3.ab3@3236>     CLR.w (A0)+
00021340 <AmiBlitz3.ab3@3237>   DBF D0,JL_0_40EC
00021346 <AmiBlitz3.ab3@3240>   LEA _include,a0
0002134A <AmiBlitz3.ab3@3241>   MOVEM.l a0-a6/d0-d7,-(a7)
00021350 <AmiBlitz3.ab3@3242>   LEA ptr_parameterstore,a1
00021352 <AmiBlitz3.ab3@3245>     MOVE.b (a0)+,(a1)+
00021356 <AmiBlitz3.ab3@3246>   BNE 'l1b
00021358 <AmiBlitz3.ab3@3248>   MOVEQ #9,d2
0002135E <AmiBlitz3.ab3@3249>   JSR findlabel2
00021362 <AmiBlitz3.ab3@3250>   BNE 'd
0002136A <AmiBlitz3.ab3@3251>   MOVE.l #0,8(a2)
0002136E <AmiBlitz3.ab3@3252>   MOVEM.l (a7)+,a0-a6/d0-d7
00021372 <AmiBlitz3.ab3@3253> BRA 'd2
00021378 <AmiBlitz3.ab3@3256>   JSR addlabelhash
00021380 <AmiBlitz3.ab3@3257>   MOVE.l #$1,$4(A2)
00021388 <AmiBlitz3.ab3@3258>   MOVE.l #0,8(a2)
0002138C <AmiBlitz3.ab3@3259>   MOVEM.l (a7)+,a0-a6/d0-d7
00021392 <AmiBlitz3.ab3@3262>   LEA _debug,a0
00021396 <AmiBlitz3.ab3@3263>   MOVEM.l a0-a6/d0-d7,-(a7)
0002139C <AmiBlitz3.ab3@3264>   LEA ptr_parameterstore,a1
0002139E <AmiBlitz3.ab3@3267>     MOVE.b (a0)+,(a1)+
000213A2 <AmiBlitz3.ab3@3268>   BNE 'l9b
000213A4 <AmiBlitz3.ab3@3270>   MOVEQ #7,d2
000213AA <AmiBlitz3.ab3@3271>   JSR findlabel2
000213AE <AmiBlitz3.ab3@3272>   BNE 'd9
000213B2 <AmiBlitz3.ab3@3273>   MOVE.b debugmode(PC),D0
000213B4 <AmiBlitz3.ab3@3274>   EXT.w d0
000213B6 <AmiBlitz3.ab3@3275>   EXT.l d0
000213BA <AmiBlitz3.ab3@3276>   MOVE.l d0,8(a2)
000213BE <AmiBlitz3.ab3@3277>   MOVEM.l (a7)+,a0-a6/d0-d7
000213C2 <AmiBlitz3.ab3@3278> BRA 'd9b
000213C8 <AmiBlitz3.ab3@3281>   JSR addlabelhash
000213D0 <AmiBlitz3.ab3@3282>   MOVE.l #$1,$4(A2)
000213D4 <AmiBlitz3.ab3@3283>   MOVE.b debugmode(PC),D0
000213D6 <AmiBlitz3.ab3@3284>   EXT.w d0
000213D8 <AmiBlitz3.ab3@3285>   EXT.l d0
000213DC <AmiBlitz3.ab3@3286>   MOVE.l d0,8(a2)
000213E0 <AmiBlitz3.ab3@3287>   MOVEM.l (a7)+,a0-a6/d0-d7
000213E6 <AmiBlitz3.ab3@3290>   MOVE.l #firstitem_,a0
000213E8 <AmiBlitz3.ab3@3291>   MOVE.l (a0),a0
000213EC <AmiBlitz3.ab3@3292>   LEA 9(a0),a0
000213F4 <AmiBlitz3.ab3@3293>   MOVE.w #0,exdebug
000213FA <AmiBlitz3.ab3@3294>   TST.b debugmode
000213FE <AmiBlitz3.ab3@3295>    BEQ 'l10
00021400 <AmiBlitz3.ab3@3298>   MOVE.b (a0)+,d0
00021404 <AmiBlitz3.ab3@3299>    BEQ 'l10
00021408 <AmiBlitz3.ab3@3300>   CMP.b #$20,d0
0002140C <AmiBlitz3.ab3@3301>    BEQ 'l2
0002140E <AmiBlitz3.ab3@3302>   SUBQ.l #1,a0
00021414 <AmiBlitz3.ab3@3303>   CMP.l #"DEBU",(a0)
00021418 <AmiBlitz3.ab3@3304>    BNE 'l10
0002141E <AmiBlitz3.ab3@3305>   CMP.b #"G",4(a0)
00021422 <AmiBlitz3.ab3@3306>    BNE 'l10
0002142A <AmiBlitz3.ab3@3307>   MOVE.w #$0,debugversion
00021432 <AmiBlitz3.ab3@3308>   MOVE.b #1,exdebug
00021438 <AmiBlitz3.ab3@3311>   LEA nops4,A0
0002143E <AmiBlitz3.ab3@3312>   LEA dataget,A1
00021444 <AmiBlitz3.ab3@3313>   JSR pokecode2                                            ;write intro nops
0002144A <AmiBlitz3.ab3@3314>   MOVE.l #$01010101,d1
00021450 <AmiBlitz3.ab3@3315>   JSR writedatalong                                        ;for the 4 tempregs
00021456 <AmiBlitz3.ab3@3316>   JSR writedatalong
0002145C <AmiBlitz3.ab3@3317>   JSR writedatalong
00021462 <AmiBlitz3.ab3@3318>   JSR writedatalong
00021468 <AmiBlitz3.ab3@3319>   TST.b saved0
0002146C <AmiBlitz3.ab3@3320>    BEQ 'l1
00021472 <AmiBlitz3.ab3@3321>   MOVE.l #$4e714e71,d1
00021478 <AmiBlitz3.ab3@3322>   JSR writelong                                            ;add 2 nops
0002147E <AmiBlitz3.ab3@3323>   MOVE.l #$4e714e71,d1
00021484 <AmiBlitz3.ab3@3324>   JSR writelong                                            ;add 2 nops
0002148A <AmiBlitz3.ab3@3325>   MOVE.l #$4e714e71,d1
00021490 <AmiBlitz3.ab3@3326>   JSR writelong                                            ;add 2 nops
00021496 <AmiBlitz3.ab3@3327>    MOVE.l #$4e714e71,d1
0002149C <AmiBlitz3.ab3@3328>   JSR writelong                                            ;add 2 nops
000214A0 <AmiBlitz3.ab3@3331>   MOVE.b debugmode(PC),D1
000214A4 <AmiBlitz3.ab3@3332>    BEQ.b JL_0_4132
000214AE <AmiBlitz3.ab3@3333>   MOVE.b debugmode,storedebugmode
000214B2 <AmiBlitz3.ab3@3334>   MOVE.w #$FFDC,D1
000214B6 <AmiBlitz3.ab3@3335>    BSR.w uselib
000214BC <AmiBlitz3.ab3@3336>   TST.w debugversion                                       ;make a version for debugger
000214C0 <AmiBlitz3.ab3@3337>    BNE.b JL_0_412A
000214C4 <AmiBlitz3.ab3@3341>   MOVE.w #$FA3C,D1
000214C8 <AmiBlitz3.ab3@3342>    BSR.w uselib
000214CC <AmiBlitz3.ab3@3343>   MOVE.w #$0001,D1
000214D0 <AmiBlitz3.ab3@3344>    BSR.w uselib
000214D4 <AmiBlitz3.ab3@3345> BRA.b JL_0_4132
000214D8 <AmiBlitz3.ab3@3348>   MOVE.w #$FA32,D1
000214DC <AmiBlitz3.ab3@3349>   BSR.w uselib
000214E0 <AmiBlitz3.ab3@3352>   BSR.w nextline
000214E6 <AmiBlitz3.ab3@3353>   CLR.l linenum
000214EC <AmiBlitz3.ab3@3354>   CLR.l stacktrack
000214F2 <AmiBlitz3.ab3@3357>   ADDQ.l #1,linenum
000214FC <AmiBlitz3.ab3@3358>   MOVE.l destpointer,destpointer2
00021502 <AmiBlitz3.ab3@3359>   MOVE.l a5,sourceline2
00021506 <AmiBlitz3.ab3@3360>   BSR.w compile_line                                        ;compile pass
0002150A <AmiBlitz3.ab3@3363>   BSR.w nextline
0002150E <AmiBlitz3.ab3@3364>    BNE.w JL_0_4136
00021512 <AmiBlitz3.ab3@3365>   BSR.w JUMP_do_runerrson
00021516 <AmiBlitz3.ab3@3366>   BSR.w pointchk
0002151C <AmiBlitz3.ab3@3367>   TST.b objectcount
00021520 <AmiBlitz3.ab3@3368>    BNE macenderr
00021526 <AmiBlitz3.ab3@3369>   CLR.l linenumat
0002152A <AmiBlitz3.ab3@3370>   BSR.w errchx2
00021534 <AmiBlitz3.ab3@3371>   CMP.l #-1,bssend
00021538 <AmiBlitz3.ab3@3372>    BNE 'l30
00021542 <AmiBlitz3.ab3@3373>   MOVE.l destpointer,bssend                                ;compile end
00021548 <AmiBlitz3.ab3@3376>   MOVE.l destpointer,d0
00021552 <AmiBlitz3.ab3@3377>   CMP.l #-1,bssstart
00021556 <AmiBlitz3.ab3@3378>   BNE 'lnf6
00021560 <AmiBlitz3.ab3@3379>   CMP.l #-1,chipstart
00021564 <AmiBlitz3.ab3@3380>   BNE 'lnf6
00021568 <AmiBlitz3.ab3@3381> BRA 'leven4
0002156E <AmiBlitz3.ab3@3384>   MOVE.l destpointer,d1
00021570 <AmiBlitz3.ab3@3385>   ADDQ.l #3,d1
00021576 <AmiBlitz3.ab3@3386>   AND.l #$fffffffc,d1                                      ;bug ?
0002157C <AmiBlitz3.ab3@3387>   MOVE.l d1,destpointer
00021586 <AmiBlitz3.ab3@3390>   MOVE.l destpointer,codeend
00021590 <AmiBlitz3.ab3@3391>   CMP.l #-1,chipend
00021594 <AmiBlitz3.ab3@3392>   BNE 'l31
0002159E <AmiBlitz3.ab3@3393>   MOVE.l destpointer,chipend
000215A4 <AmiBlitz3.ab3@3396>   MOVE.l destpointer,d1
000215A6 <AmiBlitz3.ab3@3397>   ADDQ.l #1,d1
000215AC <AmiBlitz3.ab3@3398>   AND.l #$fffffffe,d1                                     ;new evenexit
000215B2 <AmiBlitz3.ab3@3399>   MOVE.l d1,destpointer
000215B6 <AmiBlitz3.ab3@3400>   MOVE.b debugmode(PC),D1
000215BA <AmiBlitz3.ab3@3401>    BEQ.b JL_0_4180
000215BE <AmiBlitz3.ab3@3402>    BSR.w debugstuff
000215C2 <AmiBlitz3.ab3@3403>   MOVE.w #$C300,D1
000215C8 <AmiBlitz3.ab3@3404>    JSR Atokejsr
000215CC <AmiBlitz3.ab3@3405>    BSR.w debugstuff
000215D0 <AmiBlitz3.ab3@3406>   MOVE.l eopcode(PC),D1
000215D6 <AmiBlitz3.ab3@3407>    JSR writelong
000215DA <AmiBlitz3.ab3@3408>   MOVE.l lastcontlink(PC),D1
000215DE <AmiBlitz3.ab3@3409>    BEQ.b JL_0_4180
000215E0 <AmiBlitz3.ab3@3410>   MOVEA.l D1,A0
000215E4 <AmiBlitz3.ab3@3411>   CLR.w $6(A0)
000215EE <AmiBlitz3.ab3@3417>   MOVE.l destpointer,endop                                ;where end goes...
000215F4 <AmiBlitz3.ab3@3419>   TST.w blitzmode
000215F8 <AmiBlitz3.ab3@3420>   BEQ.w JL_0_4198
000215FC <AmiBlitz3.ab3@3421>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021602 <AmiBlitz3.ab3@3424>   TST.w intsused
00021606 <AmiBlitz3.ab3@3425>   BEQ.b JL_0_41AA
0002160A <AmiBlitz3.ab3@3426>   MOVE.w #$C105,D1                                        ;interupts off!
00021610 <AmiBlitz3.ab3@3427>   JSR tokejsr2
00021614 <AmiBlitz3.ab3@3430>   BSR.w calcstatic
0002161A <AmiBlitz3.ab3@3431>   MOVE.w D4,numstatic
00021620 <AmiBlitz3.ab3@3432>   MOVE.l D3,staticdata
00021624 <AmiBlitz3.ab3@3433>    BSR.w calcmaxs
0002162A <AmiBlitz3.ab3@3435>   TST.l tokeslist
0002162E <AmiBlitz3.ab3@3436>    BEQ.b JL_0_41F8
00021634 <AmiBlitz3.ab3@3437>   MOVE.w gotocode,D1                                       ;jmp!
0002163A <AmiBlitz3.ab3@3438>    JSR writeword
00021644 <AmiBlitz3.ab3@3439>   MOVE.l destpointer,endjmpat
00021648 <AmiBlitz3.ab3@3440>    BSR.w addoff
0002164E <AmiBlitz3.ab3@3441>    JSR writelong                                           
00021652 <AmiBlitz3.ab3@3443>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00021658 <AmiBlitz3.ab3@3447>   TST.w dontwrite
0002165C <AmiBlitz3.ab3@3448>    BNE.b JL_0_41F8
00021660 <AmiBlitz3.ab3@3449>   MOVEA.l endjmpat(PC),A4
00021666 <AmiBlitz3.ab3@3450>   MOVE.l destpointer,(A4)
0002166C <AmiBlitz3.ab3@3453>   TST.b returncode
00021670 <AmiBlitz3.ab3@3454>   BEQ 'l2
00021674 <AmiBlitz3.ab3@3455>   MOVE.w #$2e80,d1
0002167A <AmiBlitz3.ab3@3456>   JSR writeword
00021680 <AmiBlitz3.ab3@3459>   JSR JL_0_B98A
00021686 <AmiBlitz3.ab3@3460>   TST.b returncode
0002168A <AmiBlitz3.ab3@3461>   BEQ 'l3
0002168E <AmiBlitz3.ab3@3462>   MOVE.w #$4e75,d1
00021694 <AmiBlitz3.ab3@3463>   JSR writeword
00021698 <AmiBlitz3.ab3@3464> BRA 'l1
0002169E <AmiBlitz3.ab3@3467>   MOVE.l #$70004E75,D1
000216A4 <AmiBlitz3.ab3@3468>   JSR writelong                                            ;write moveq #0,d0:rts
000216AA <AmiBlitz3.ab3@3471>   JSR JL_0_B73E
000216AE <AmiBlitz3.ab3@3472>   BSR.w asmfixer
000216B2 <AmiBlitz3.ab3@3473>   BSR.w close_compilewin
000216B6 <AmiBlitz3.ab3@3474> BRA.w call_setpointernormal
000216BC <AmiBlitz3.ab3@3478> JMP do_runerrson
000216BE <AmiBlitz3.ab3@3482> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000216C0 <AmiBlitz3.ab3@3483>             Dc.b $4E,$40                                   ;TRAP  #00
000216C4 <AmiBlitz3.ab3@3485> endjmpat:   Ds.l 1
000216CA <AmiBlitz3.ab3@3489>   MOVEA.l newtype_string,A2
000216D0 <AmiBlitz3.ab3@3490>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000216D4 <AmiBlitz3.ab3@3493>     CMPA.w #$0,A2
000216D8 <AmiBlitz3.ab3@3494>      BEQ.w pointchk_done
000216DC <AmiBlitz3.ab3@3495>     CMP.l $4(A2),D0
000216E0 <AmiBlitz3.ab3@3496>      BNE.w pointchk_next
000216E8 <AmiBlitz3.ab3@3497>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000216EC <AmiBlitz3.ab3@3498> BRA.w notypeerr
000216EE <AmiBlitz3.ab3@3501>     MOVEA.l (A2),A2
000216F2 <AmiBlitz3.ab3@3502> BRA.w pointchk_loop
000216F4 <AmiBlitz3.ab3@3505> RTS
000216FA <AmiBlitz3.ab3@3509>   LEA labelbase,A2
000216FC <AmiBlitz3.ab3@3513>   MOVE.l (A2),D0                                           ;testlabels
00021700 <AmiBlitz3.ab3@3514>    BEQ.w errchx2_done
00021702 <AmiBlitz3.ab3@3515>   MOVEA.l D0,A2
00021706 <AmiBlitz3.ab3@3516>   MOVE.l $4(A2),D0
0002170A <AmiBlitz3.ab3@3517>   BTST #$0,D0
0002170E <AmiBlitz3.ab3@3518>    BNE.w errchx2_loop
00021712 <AmiBlitz3.ab3@3519>   MOVE.l $8(A2),D0
00021716 <AmiBlitz3.ab3@3520>    BNE.w errchx2_loop
0002171E <AmiBlitz3.ab3@3521>   MOVE.w $10(A2),linenumat+2
00021720 <AmiBlitz3.ab3@3522>   MOVEQ #0,d0
00021724 <AmiBlitz3.ab3@3523>   MOVE.b $12(a2),d0
0002172C <AmiBlitz3.ab3@3524>   MOVE.w 0(a2,d0),linenumat
00021732 <AmiBlitz3.ab3@3525> JMP nolaberr                                               ;label not found
00021738 <AmiBlitz3.ab3@3528>   MOVE.l concomsp,D0
0002173E <AmiBlitz3.ab3@3529>   CMP.l #concomstack,D0
00021742 <AmiBlitz3.ab3@3530>    BNE.w chxerr4
00021748 <AmiBlitz3.ab3@3531>   MOVE.w connest,D1
0002174C <AmiBlitz3.ab3@3532>    BNE.w chxerr4
0002174E <AmiBlitz3.ab3@3535>   MOVE.l D1,-(A7)
00021754 <AmiBlitz3.ab3@3536>   MOVE.l firstsel,D1
00021758 <AmiBlitz3.ab3@3537>    BNE.w errchx_err1
0002175E <AmiBlitz3.ab3@3538>   MOVE.l firstrep,D1
00021762 <AmiBlitz3.ab3@3539>    BNE.w errchx_err2
00021768 <AmiBlitz3.ab3@3540>   MOVE.w intstring,D1
0002176C <AmiBlitz3.ab3@3541>    BNE.w errchx_err3
00021770 <AmiBlitz3.ab3@3542>   MOVE.l 4(a7),d1
00021776 <AmiBlitz3.ab3@3543>   MOVE.w proceduremode,D1
0002177A <AmiBlitz3.ab3@3544>    BNE.w errchx_err6
00021780 <AmiBlitz3.ab3@3545>   MOVE.l firstiff,d1
00021784 <AmiBlitz3.ab3@3546>    BNE errchx_err5
0002178A <AmiBlitz3.ab3@3547>   MOVE.l firstfor,D1
0002178E <AmiBlitz3.ab3@3548>    BNE.w errchx_err7
00021790 <AmiBlitz3.ab3@3549>   MOVE.l (A7)+,D1
00021792 <AmiBlitz3.ab3@3550> RTS
0002179C <AmiBlitz3.ab3@3554>   MOVE.l sellineat,linenumat
000217A2 <AmiBlitz3.ab3@3555> JMP selerrz
000217AC <AmiBlitz3.ab3@3558>   MOVE.l replineat,linenumat
000217B2 <AmiBlitz3.ab3@3559> JMP unterr3
000217BC <AmiBlitz3.ab3@3562>   MOVE.l intlineat,linenumat
000217C2 <AmiBlitz3.ab3@3563> JMP interr2
000217CC <AmiBlitz3.ab3@3566>   MOVE.l iflineat,linenumat
000217D2 <AmiBlitz3.ab3@3567> JMP noenderr
000217DC <AmiBlitz3.ab3@3570>   MOVE.l prolineat,linenumat
000217E2 <AmiBlitz3.ab3@3571> JMP nopenderr
000217EC <AmiBlitz3.ab3@3574>   MOVE.l forlineat,linenumat
000217F2 <AmiBlitz3.ab3@3575> JMP nonexterr
000217FC <AmiBlitz3.ab3@3578>   MOVE.l ciflineat,linenumat
00021802 <AmiBlitz3.ab3@3579> JMP nocenderr
0002180C <AmiBlitz3.ab3@3583>   MOVE.l data1,maxsat
0002180E <AmiBlitz3.ab3@3584>   MOVEQ.l #$00,D4
00021814 <AmiBlitz3.ab3@3585>   MOVEA.l libpointer,A2
00021818 <AmiBlitz3.ab3@3588>     CMPA.w #$0,A2
0002181C <AmiBlitz3.ab3@3589>      BEQ.w calcmaxs_done
00021820 <AmiBlitz3.ab3@3590>     TST.w $C(A2)
00021824 <AmiBlitz3.ab3@3591>      BPL.w calcmaxs_next
00021828 <AmiBlitz3.ab3@3592>     MOVE.l $12(A2),D0
0002182C <AmiBlitz3.ab3@3593>     TST.w -$2(A2,D0.L)
00021830 <AmiBlitz3.ab3@3594>      BEQ.w calcmaxs_next
00021832 <AmiBlitz3.ab3@3595>     ADDQ.w #1,D4
00021836 <AmiBlitz3.ab3@3596>     MOVE.w -$6(A2,D0.L),D1
0002183A <AmiBlitz3.ab3@3597>     BSR.w pokedata1
0002183C <AmiBlitz3.ab3@3598>     MOVEQ.l #$01,D1
00021840 <AmiBlitz3.ab3@3599>     MOVE.w -$2(A2,D0.L),D2
00021842 <AmiBlitz3.ab3@3600>     LSL.w D2,D1
00021846 <AmiBlitz3.ab3@3601>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0002184A <AmiBlitz3.ab3@3602>     BSR.w writedatalong
0002184C <AmiBlitz3.ab3@3605>     MOVEA.l (A2),A2
00021850 <AmiBlitz3.ab3@3606> BRA.w calcmaxs_loop
00021856 <AmiBlitz3.ab3@3609>   MOVE.w D4,maxsused
0002185A <AmiBlitz3.ab3@3610>    BEQ.w calcmaxs_done2
0002185E <AmiBlitz3.ab3@3611>   MOVE.w #$FFFA,D1                                         ;;use memlib
00021862 <AmiBlitz3.ab3@3612> BRA.w uselib
00021864 <AmiBlitz3.ab3@3615> RTS
0002186A <AmiBlitz3.ab3@3619>    MOVE.l a7,stackaddr
0002186E <AmiBlitz3.ab3@3620>    BSR.w compile_term
00021872 <AmiBlitz3.ab3@3621>    BSR.w reget
00021876 <AmiBlitz3.ab3@3622>    BNE.w illeolerr
0002187C <AmiBlitz3.ab3@3623>    TST.w dontwrite
00021880 <AmiBlitz3.ab3@3624>    BNE 'l1
00021886 <AmiBlitz3.ab3@3625>    TST.l stacktrack
0002188A <AmiBlitz3.ab3@3626>    BNE errormsg_stack
0002188E <AmiBlitz3.ab3@3629>    CMP.w #-$7FDE,D0
00021892 <AmiBlitz3.ab3@3630>    BNE.w compile_line_notelse
00021898 <AmiBlitz3.ab3@3631>    JSR do_else2
0002189C <AmiBlitz3.ab3@3632> BRA.w compile_line
0002189E <AmiBlitz3.ab3@3635>   TST.w D0
000218A2 <AmiBlitz3.ab3@3636>   BNE.w compile_line
000218A8 <AmiBlitz3.ab3@3641>   MOVE.l firstiff,D0
000218AC <AmiBlitz3.ab3@3642>    BEQ.w compile_line_done
000218AE <AmiBlitz3.ab3@3643>   MOVEA.l D0,A0
000218B2 <AmiBlitz3.ab3@3644>   MOVE.w $C(A0),D1
000218B6 <AmiBlitz3.ab3@3645>    BPL.w compile_line_done
000218BA <AmiBlitz3.ab3@3649>   BCLR #$F,D1
000218C0 <AmiBlitz3.ab3@3650>    JSR AJL_0_D7B8
000218C6 <AmiBlitz3.ab3@3651>    JSR AJL_0_D81C
000218CA <AmiBlitz3.ab3@3652> BRA.w compile_line_unthen
000218CC <AmiBlitz3.ab3@3655> RTS
000218D2 <AmiBlitz3.ab3@3659>   LEA lastgloballabel,A0
000218D4 <AmiBlitz3.ab3@3660>   TST.b (A0)
000218D8 <AmiBlitz3.ab3@3661>   BEQ.w nolocerr
000218DE <AmiBlitz3.ab3@3662>   LEA ptr_parameterstore,A1
000218E0 <AmiBlitz3.ab3@3663>   MOVEQ.l #$00,D2
000218E2 <AmiBlitz3.ab3@3666>   ADDQ.w #1,D2
000218E4 <AmiBlitz3.ab3@3667>   MOVE.b (A0)+,(A1)+
000218E8 <AmiBlitz3.ab3@3668>    BNE.w createlab_loop
000218EE <AmiBlitz3.ab3@3669>   MOVE.b #$27,-$1(A1)
000218F0 <AmiBlitz3.ab3@3670>   MOVE.w D2,-(A7)
000218F6 <AmiBlitz3.ab3@3671>    JSR makename4
000218F8 <AmiBlitz3.ab3@3672>   CMP.w (A7)+,D2
000218FC <AmiBlitz3.ab3@3673>    BEQ.w syntaxerr
000218FE <AmiBlitz3.ab3@3674>    TST.w d0
00021902 <AmiBlitz3.ab3@3675>    BPL createlab_done
0002190A <AmiBlitz3.ab3@3676>    MOVE.w #$3a,lastchar
0002190C <AmiBlitz3.ab3@3677>    SUBQ.l #2,a5
0002190E <AmiBlitz3.ab3@3680> RTS
00021918 <AmiBlitz3.ab3@3684>   MOVE.l #forthstack,forthsp
00021922 <AmiBlitz3.ab3@3685>   MOVE.l #precstack,precsp
00021924 <AmiBlitz3.ab3@3686> RTS
00021926 <AmiBlitz3.ab3@3693>   MOVEQ.l #$00,D4
00021950 <AmiBlitz3.ab3@3696>   !basic
00021992 <AmiBlitz3.ab3@3697> 
000219A2 <AmiBlitz3.ab3@3699>   If (c_abort = 1)           ; check if set
000219A4 <AmiBlitz3.ab3@3700>     MOVEQ.l #-$01,d4
000219AA <AmiBlitz3.ab3@3701>     MOVE.w D4,stopit
000219C8 <AmiBlitz3.ab3@3702>     !asm
000219CC <AmiBlitz3.ab3@3703>     BRA chkrealstop__skip
000219EA <AmiBlitz3.ab3@3705>   !asm
000219EC <AmiBlitz3.ab3@3706>   MOVEQ.l #$00,D6
000219EE <AmiBlitz3.ab3@3707>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000219F0 <AmiBlitz3.ab3@3711> RTS
000219F4 <AmiBlitz3.ab3@3715>   MOVE.w stopit(PC),D0
000219F8 <AmiBlitz3.ab3@3716>   BEQ chkstop__chk
000219FE <AmiBlitz3.ab3@3717>   SUBQ.w #1,stopit
00021A00 <AmiBlitz3.ab3@3721> RTS
00021A08 <AmiBlitz3.ab3@3724>   MOVE.w #2000,stopit
00021A0C <AmiBlitz3.ab3@3725>   BSR.w chkrealstop
00021A10 <AmiBlitz3.ab3@3726>   BEQ.b chkstop__rts
00021A14 <AmiBlitz3.ab3@3728>   BSR.w close_compilewin
00021A18 <AmiBlitz3.ab3@3729>   BSR.w call_setpointernormal
00021A1E <AmiBlitz3.ab3@3731>   MOVEA.l errstack,A7
00021A24 <AmiBlitz3.ab3@3732>   MOVEA.l errcont,A0
00021A2C <AmiBlitz3.ab3@3733>   MOVE.w #-1,anyerrs
00021A2E <AmiBlitz3.ab3@3734> JMP (A0)
00021A32 <AmiBlitz3.ab3@3737> d_pc:           Ds.l 1
00021A36 <AmiBlitz3.ab3@3738> d_bigpc:        Ds.l 1
00021A38 <AmiBlitz3.ab3@3739> d_nomemleft:    Ds.w 1
00021A3C <AmiBlitz3.ab3@3740> cont_pc:        Ds.l 1
00021A40 <AmiBlitz3.ab3@3741> cont_pc2:       Ds.l 1
00021A44 <AmiBlitz3.ab3@3742> lastcontlink:   Ds.l 1
00021A48 <AmiBlitz3.ab3@3746>   ORI.w #$4E40,D1
00021A4C <AmiBlitz3.ab3@3747> BRA.w JUMP_writeword
00021A52 <AmiBlitz3.ab3@3751>   TST.b debugmode
00021A56 <AmiBlitz3.ab3@3752>   BEQ.w debugstuff__rts
00021A5C <AmiBlitz3.ab3@3759>   TST.w dirmode                                            ;or while in direct mode...
00021A60 <AmiBlitz3.ab3@3760>    BNE debugstuff__rts
00021A6A <AmiBlitz3.ab3@3761>   MOVE.l destpointer,d_pc
00021A74 <AmiBlitz3.ab3@3762>   MOVE.l bigpc,d_bigpc
00021A7E <AmiBlitz3.ab3@3763>   MOVE.w dontwrite,d_nomemleft
00021A82 <AmiBlitz3.ab3@3764>   MOVEM.l D0-D1,-(A7)
00021A84 <AmiBlitz3.ab3@3765>   MOVEQ.l #$01,D1
00021A88 <AmiBlitz3.ab3@3766>    BSR.w writetrap                                         ;write the adress to sourceline
00021A8E <AmiBlitz3.ab3@3770>    MOVE.l destpointer,D0
00021A94 <AmiBlitz3.ab3@3771>   MOVE.l cont_pc,D1
00021A9A <AmiBlitz3.ab3@3772>   MOVE.l D0,cont_pc
00021AA0 <AmiBlitz3.ab3@3773>   MOVE.l D1,cont_pc2
00021AA4 <AmiBlitz3.ab3@3774>    BEQ.b debugstuff__skip
00021AAA <AmiBlitz3.ab3@3775>   TST.w dontwrite
00021AAE <AmiBlitz3.ab3@3776>    BNE.b debugstuff__skip
00021AB0 <AmiBlitz3.ab3@3777>   MOVEA.l D1,A4
00021AB2 <AmiBlitz3.ab3@3778>   SUB.l A4,D0
00021AB6 <AmiBlitz3.ab3@3779>   MOVE.w D0,$6(A4)
00021ABC <AmiBlitz3.ab3@3780>   MOVE.l A4,lastcontlink
00021AC2 <AmiBlitz3.ab3@3783>   TST.w ininclude
00021AC8 <AmiBlitz3.ab3@3785>   TST.w makeexec
00021ACC <AmiBlitz3.ab3@3786>   BEQ 'l1
00021AD2 <AmiBlitz3.ab3@3787>   TST.w exdebug
00021AD6 <AmiBlitz3.ab3@3788>   BEQ 'noinc
00021ADA <AmiBlitz3.ab3@3791>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00021AE0 <AmiBlitz3.ab3@3792>   MOVE.l data1,d1
00021AE6 <AmiBlitz3.ab3@3793>   TST.b firsttime
00021AEA <AmiBlitz3.ab3@3794>   BNE 'nofirst
00021AF2 <AmiBlitz3.ab3@3795>   MOVE.b #1,firsttime
00021AF8 <AmiBlitz3.ab3@3796>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00021AFE <AmiBlitz3.ab3@3797>   JSR writedatalong
00021B04 <AmiBlitz3.ab3@3798>   MOVE.l #"AmiB",d1
00021B0A <AmiBlitz3.ab3@3799>   JSR writedatalong
00021B10 <AmiBlitz3.ab3@3800>   MOVE.l destbufferstart,d1
00021B16 <AmiBlitz3.ab3@3801>   JSR writedatalong
00021B1C <AmiBlitz3.ab3@3802>   TST.w dontwrite
00021B20 <AmiBlitz3.ab3@3803>   BNE 'nohunk
00021B26 <AmiBlitz3.ab3@3804>   MOVE.l data1,d1
00021B28 <AmiBlitz3.ab3@3805>   SUBQ.l #4,d1
00021B2E <AmiBlitz3.ab3@3806>   SUB.l destbufferstart,d1
00021B30 <AmiBlitz3.ab3@3807>   MOVE.l d1,d2
00021B36 <AmiBlitz3.ab3@3808>   JSR addhunkoffset
00021B3C <AmiBlitz3.ab3@3811>   MOVE.l destpointer,d2
00021B42 <AmiBlitz3.ab3@3812>   MOVE.l data1,d1
00021B48 <AmiBlitz3.ab3@3815>   MOVE.l destpointer,d2
00021B4A <AmiBlitz3.ab3@3816>   MOVE.l d1,d3
00021B50 <AmiBlitz3.ab3@3817>   SUB.l destbufferstart,d1
00021B56 <AmiBlitz3.ab3@3818>   OR.l #$80000000,d1
00021B5C <AmiBlitz3.ab3@3819>   JSR writelong
00021B62 <AmiBlitz3.ab3@3820>   TST.w inmacro
00021B66 <AmiBlitz3.ab3@3821>   BEQ 'sc1
00021B6C <AmiBlitz3.ab3@3822>   MOVE.l myline,a0
00021B70 <AmiBlitz3.ab3@3824> BRA 'inc2
00021B76 <AmiBlitz3.ab3@3826>  'sc1  TST.w ininclude
00021B7A <AmiBlitz3.ab3@3827>   BEQ 'inc
00021B80 <AmiBlitz3.ab3@3828>   MOVE.l includesourceline,a0
00021B84 <AmiBlitz3.ab3@3829> BRA 'inc2
00021B8A <AmiBlitz3.ab3@3832>   MOVE.l sourceline,a0
00021B8E <AmiBlitz3.ab3@3833>   LEA 9(a0),a0
00021B90 <AmiBlitz3.ab3@3836>   MOVE.l d1,d2
00021B92 <AmiBlitz3.ab3@3837>   MOVE.l A5,D1
00021B94 <AmiBlitz3.ab3@3838>   SUB.l a0,D1
00021B9A <AmiBlitz3.ab3@3839>   ADD.l #9,d1
00021B9E <AmiBlitz3.ab3@3840>   BSR.w JUMP_writeword
00021BA4 <AmiBlitz3.ab3@3841>   CMP.l #9,d1
00021BA8 <AmiBlitz3.ab3@3842>   BEQ 'pos1
00021BAE <AmiBlitz3.ab3@3843>   TST.w dontwrite
00021BB2 <AmiBlitz3.ab3@3844>   BNE 'nopad
00021BB8 <AmiBlitz3.ab3@3845>   MOVE.l lastsourceline,d1
00021BBC <AmiBlitz3.ab3@3846>   MOVE.l d1,-6(a4)
00021BC0 <AmiBlitz3.ab3@3847> BRA 'nopad
00021BC6 <AmiBlitz3.ab3@3850>   MOVE.l d2,lastsourceline
00021BD0 <AmiBlitz3.ab3@3851>    MOVE.l destpointer,lastdestpointer
00021BD2 <AmiBlitz3.ab3@3852>    MOVEQ #0,d1
00021BD8 <AmiBlitz3.ab3@3853>   MOVE.l data1,d2
00021BDE <AmiBlitz3.ab3@3854>   SUB.l destbufferstart,d2
00021BE4 <AmiBlitz3.ab3@3855>   JSR writedatalong
00021BEA <AmiBlitz3.ab3@3856>   TST.w dontwrite
00021BEE <AmiBlitz3.ab3@3857>   BNE 'no2
00021BF4 <AmiBlitz3.ab3@3858>   JSR addhunkoffset
00021BFA <AmiBlitz3.ab3@3861>   MOVE.l data1,d2
00021C00 <AmiBlitz3.ab3@3862>   SUB.l destbufferstart,d2
00021C06 <AmiBlitz3.ab3@3863>   JSR writedatalong
00021C0C <AmiBlitz3.ab3@3864>   TST.w dontwrite
00021C10 <AmiBlitz3.ab3@3865>   BNE 'no
00021C16 <AmiBlitz3.ab3@3866>   JSR addhunkoffset
00021C1C <AmiBlitz3.ab3@3867>   MOVE.l lastwritedat,a1
00021C22 <AmiBlitz3.ab3@3868>   CMP.l #0,a1
00021C26 <AmiBlitz3.ab3@3869>   BEQ 'no
00021C28 <AmiBlitz3.ab3@3870>   MOVE.l d3,(a1)
00021C30 <AmiBlitz3.ab3@3871>   MOVE.l prevwritedat,4(a1)
00021C3A <AmiBlitz3.ab3@3872>   MOVE.l lastwritedat,prevwritedat
00021C40 <AmiBlitz3.ab3@3875>   MOVE.l d3,lastwritedat
00021C42 <AmiBlitz3.ab3@3876>   MOVEQ #4,d1
00021C46 <AmiBlitz3.ab3@3877>   BSR pokedata1b
00021C48 <AmiBlitz3.ab3@3880>   MOVE.b (a0)+,d1
00021C4C <AmiBlitz3.ab3@3881>   BEQ 'done
00021C50 <AmiBlitz3.ab3@3882>   BSR pokedata1b
00021C54 <AmiBlitz3.ab3@3883> BRA 'loop
00021C56 <AmiBlitz3.ab3@3886>   MOVEQ #0,d1
00021C5A <AmiBlitz3.ab3@3887>   BSR pokedata1b
00021C60 <AmiBlitz3.ab3@3888>   MOVE.l data1,d1
00021C64 <AmiBlitz3.ab3@3889>   BTST #0,d1
00021C68 <AmiBlitz3.ab3@3890>   BEQ 'nopad
00021C6A <AmiBlitz3.ab3@3891>   MOVEQ #0,d1
00021C6E <AmiBlitz3.ab3@3892>   BSR pokedata1b
00021C72 <AmiBlitz3.ab3@3895>   MOVEM.l (a7)+,a0-a1/d2/d3
00021C76 <AmiBlitz3.ab3@3896> BRA 'noinc2
00021C7C <AmiBlitz3.ab3@3899>   MOVE.l sourceline,D1
00021C82 <AmiBlitz3.ab3@3901>   JSR writelong
00021C84 <AmiBlitz3.ab3@3902>   MOVE.l A5,D1
00021C8A <AmiBlitz3.ab3@3903>   SUB.l sourceline,D1
00021C90 <AmiBlitz3.ab3@3905>   JSR writeword
00021C92 <AmiBlitz3.ab3@3908>   MOVEQ.l #$00,D1
00021C98 <AmiBlitz3.ab3@3909>   JSR writeword                                            ; was: BSR.w writeword
00021C9C <AmiBlitz3.ab3@3910>   MOVEM.l (A7)+,D0-D1
00021C9E <AmiBlitz3.ab3@3913> RTS
00021CA4 <AmiBlitz3.ab3@3917>   TST.b debugmode                                          ;extern debug
00021CA8 <AmiBlitz3.ab3@3918>    BEQ.b undodebug__rts
00021CAE <AmiBlitz3.ab3@3919>   TST.b dirmode
00021CB2 <AmiBlitz3.ab3@3920>   BNE undodebug__rts
00021CBC <AmiBlitz3.ab3@3925>   MOVE.w d_nomemleft,dontwrite
00021CC6 <AmiBlitz3.ab3@3926>   MOVE.l d_bigpc,bigpc
00021CD0 <AmiBlitz3.ab3@3927>   MOVE.l d_pc,destpointer
00021CDA <AmiBlitz3.ab3@3928>   MOVE.l cont_pc2,cont_pc
00021CDC <AmiBlitz3.ab3@3931> RTS
00021CE6 <AmiBlitz3.ab3@3935>   MOVE.l #forthstack,forthsp
00021CF0 <AmiBlitz3.ab3@3936>   MOVE.l #precstack,precsp
00021CF6 <AmiBlitz3.ab3@3937>   CLR.w regnum
00021CFC <AmiBlitz3.ab3@3938>   CLR.w nonew
00021D02 <AmiBlitz3.ab3@3939>   CLR.w sbasegot
00021D0C <AmiBlitz3.ab3@3940>   MOVE.w varcodelen,oldvcodelen
00021D12 <AmiBlitz3.ab3@3941>   CLR.w varcodelen
00021D1A <AmiBlitz3.ab3@3942>   MOVE.w #-1,lasta6
00021D1C <AmiBlitz3.ab3@3943> RTS
00021D22 <AmiBlitz3.ab3@3947>   TST.w linemode
00021D26 <AmiBlitz3.ab3@3948>   BMI.b smode__skip
00021D2A <AmiBlitz3.ab3@3949>   BSR.w undodebug
00021D30 <AmiBlitz3.ab3@3950>   MOVE.w linemode,D1
00021D32 <AmiBlitz3.ab3@3951>   ADDQ.w #4,A7
00021D34 <AmiBlitz3.ab3@3952>   LSL.w #2,D1
00021D3A <AmiBlitz3.ab3@3953>   LEA modetable,A0
00021D3E <AmiBlitz3.ab3@3954>   MOVEA.l $0(A0,D1.W),A0
00021D42 <AmiBlitz3.ab3@3955>   BSR.w reget
00021D44 <AmiBlitz3.ab3@3958> JMP (A0)                                                   ;jumptokenroutine
00021D46 <AmiBlitz3.ab3@3961> RTS
00021D4E <AmiBlitz3.ab3@3966>   MOVE.w #0,leaa0a0+2
00021D54 <AmiBlitz3.ab3@3967>   CLR.b nowdeclare
00021D5A <AmiBlitz3.ab3@3968>   CLR.b notypecheck
00021D60 <AmiBlitz3.ab3@3969>   CLR.l lasttoken
00021D66 <AmiBlitz3.ab3@3970>   CLR.b doimmediate
00021D6C <AmiBlitz3.ab3@3971>   CLR.w vartype
00021D72 <AmiBlitz3.ab3@3972>   CLR.w regnumfunc
00021D78 <AmiBlitz3.ab3@3973>   CLR.b optistring
00021D7E <AmiBlitz3.ab3@3974>   CLR.b iniffcommand
00021D84 <AmiBlitz3.ab3@3975>   CLR.w instringon  ; new
00021D8A <AmiBlitz3.ab3@3976>   CLR.b funccall
00021D90 <AmiBlitz3.ab3@3977>   CLR.l currentfunccall
00021D96 <AmiBlitz3.ab3@3978>   CLR.l leftsidetype
00021D9C <AmiBlitz3.ab3@3979>   CLR.l rightsidetype
00021DA2 <AmiBlitz3.ab3@3980>   CLR.b peekaddrsize
00021DA8 <AmiBlitz3.ab3@3981>   CLR.b blitzparloop
00021DAE <AmiBlitz3.ab3@3982>   CLR.b funcparloop
00021DB4 <AmiBlitz3.ab3@3983>   TST.b debugmode
00021DB8 <AmiBlitz3.ab3@3984>    BEQ 'fpu
00021DC2 <AmiBlitz3.ab3@3990>   MOVE.b fpu,iee
00021DC6 <AmiBlitz3.ab3@3991>   MOVE.w stopit(PC),D0
00021DCA <AmiBlitz3.ab3@3992>   BNE chkstop_chkb
00021DCE <AmiBlitz3.ab3@3993>   BSR.w chkstop                                          ; message here
00021DD4 <AmiBlitz3.ab3@3996>   SUBQ.w #1,stopit
00021DD8 <AmiBlitz3.ab3@3999>   BSR.w findmacro                                          ;macro
00021DDE <AmiBlitz3.ab3@4053>   TST.b debugmode
00021DE2 <AmiBlitz3.ab3@4054>    BEQ.s 'l10
00021DE8 <AmiBlitz3.ab3@4055>   TST.b exdebug
00021DEC <AmiBlitz3.ab3@4056>   BEQ 'l10a
00021DEE <AmiBlitz3.ab3@4057>   MOVE.w (a5),d0
00021DF2 <AmiBlitz3.ab3@4058>   CMP.w #$8025,d0
00021DF6 <AmiBlitz3.ab3@4059>    BEQ 'l10
00021DFA <AmiBlitz3.ab3@4062>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00021DFE <AmiBlitz3.ab3@4066>   BSR.w get1bytemain                                       ;gettokenmain
00021E02 <AmiBlitz3.ab3@4067>    BEQ.w undodebug
00021E06 <AmiBlitz3.ab3@4068>   CMP.w #$002b,d0                                            ;check for + cast sign
00021E0A <AmiBlitz3.ab3@4069>     BNE 'lb2
00021E0E <AmiBlitz3.ab3@4070>     BSR.w get1bytemain
00021E16 <AmiBlitz3.ab3@4071>     MOVE.b #1,notypecheck
00021E20 <AmiBlitz3.ab3@4079>   MOVE.l #forthstack,forthsp
00021E2A <AmiBlitz3.ab3@4080>   MOVE.l #precstack,precsp
00021E30 <AmiBlitz3.ab3@4081>   CLR.w regnum
00021E36 <AmiBlitz3.ab3@4082>   CLR.w nonew
00021E3C <AmiBlitz3.ab3@4083>   CLR.w sbasegot
00021E46 <AmiBlitz3.ab3@4084>   MOVE.w varcodelen,oldvcodelen
00021E4C <AmiBlitz3.ab3@4086>   CLR.w varcodelen
00021E54 <AmiBlitz3.ab3@4087>   MOVE.w #$FFFF,lasta6
00021E58 <AmiBlitz3.ab3@4089>   BSR.w smode
00021E5A <AmiBlitz3.ab3@4090>   TST.w D0
00021E5E <AmiBlitz3.ab3@4091>   BMI.w get_tokencode
00021E62 <AmiBlitz3.ab3@4092>   CMP.w #$2E,D0
00021E66 <AmiBlitz3.ab3@4093>    BEQ.w JL_0_4644                                         ;shortlist
00021E6A <AmiBlitz3.ab3@4094>   CMP.w #"#",D0
00021E6E <AmiBlitz3.ab3@4095>    BEQ.w JL_0_4718                                         ;constant found
00021E72 <AmiBlitz3.ab3@4096>   CMP.w #$27,D0
00021E76 <AmiBlitz3.ab3@4097>    BEQ.w JL_0_4638                                         ;local label
00021E7C <AmiBlitz3.ab3@4098>   MOVE.l A5,letstart
00021E82 <AmiBlitz3.ab3@4099>   JSR getparameter
00021E86 <AmiBlitz3.ab3@4100>   BSR.w reget
00021E8A <AmiBlitz3.ab3@4101>    BEQ.w JL_0_4658                                         ;label found
00021E8E <AmiBlitz3.ab3@4102>   CMP.w #$7B,D0
00021E92 <AmiBlitz3.ab3@4103>    BEQ.w JL_0_475C
00021E94 <AmiBlitz3.ab3@4104>   TST.w d0
00021E98 <AmiBlitz3.ab3@4105>    BPL 'll1
00021E9E <AmiBlitz3.ab3@4106>   TST.b newsyntax
00021EA2 <AmiBlitz3.ab3@4107>    BEQ 'll1
00021EA8 <AmiBlitz3.ab3@4108>   LEA allowtab,a0
00021EAA <AmiBlitz3.ab3@4109>   MOVEQ #0,d1
00021EAC <AmiBlitz3.ab3@4110>   MOVE.b d0,d1
00021EB0 <AmiBlitz3.ab3@4111>   TST.b 0(a0,d1.w)
00021EB4 <AmiBlitz3.ab3@4112>    BNE 'll1
00021EB6 <AmiBlitz3.ab3@4113>   SUBQ.l #2,a5
00021EBE <AmiBlitz3.ab3@4114>   MOVE.w #":",lastchar                                     ;no doublepoint
00021EC2 <AmiBlitz3.ab3@4115> BRA JL_0_4658
00021ECA <AmiBlitz3.ab3@4118>   CMP.l #"equ ",-1(a5)
00021ECE <AmiBlitz3.ab3@4119>    BEQ 'll4
00021ED6 <AmiBlitz3.ab3@4120>   CMP.l #"EQU ",-1(a5)
00021EDA <AmiBlitz3.ab3@4121>    BNE 'll2
00021EDC <AmiBlitz3.ab3@4124>   ADDQ.l #2,a5
00021EE0 <AmiBlitz3.ab3@4125>   BSR.w findlabel2
00021EE4 <AmiBlitz3.ab3@4126>   BEQ.w 'lf1
00021EE8 <AmiBlitz3.ab3@4127>   BSR.w addlabelhash
00021EF0 <AmiBlitz3.ab3@4128>   MOVE.l #$1,$4(A2)
00021EF8 <AmiBlitz3.ab3@4131>   CMPI.l #$1,$4(A2)
00021EFC <AmiBlitz3.ab3@4132>    BNE.w illconerr
00021F00 <AmiBlitz3.ab3@4133>   BSR get1bytemain
00021F02 <AmiBlitz3.ab3@4134>   MOVE.l A2,-(A7)
00021F04 <AmiBlitz3.ab3@4145>   SUBQ.l #1,a5
00021F06 <AmiBlitz3.ab3@4148>   SUBQ.l #1,a5
00021F0C <AmiBlitz3.ab3@4149>   JSR AJL_0_BF6E
00021F0E <AmiBlitz3.ab3@4150>   MOVEA.l (A7)+,A2
00021F12 <AmiBlitz3.ab3@4151>   MOVE.l D3,$8(A2)
00021F14 <AmiBlitz3.ab3@4152>   RTS
00021F18 <AmiBlitz3.ab3@4153>   BSR get1bytemain
00021F20 <AmiBlitz3.ab3@4156>   CMP.l #"SET ",-1(a5)
00021F24 <AmiBlitz3.ab3@4157>   BNE 'll3
00021F28 <AmiBlitz3.ab3@4158> BRA 'll4
00021F2E <AmiBlitz3.ab3@4161> JMP AJL_0_DEA6
00021F32 <AmiBlitz3.ab3@4164>   CMP.w #-$7FDE,D0
00021F36 <AmiBlitz3.ab3@4165>   BEQ.w get_tokencode
00021F3A <AmiBlitz3.ab3@4166> BRA.w undodebug
00021F3E <AmiBlitz3.ab3@4169>   BSR.w undodebug
00021F42 <AmiBlitz3.ab3@4170>   BSR.w createlab
00021F46 <AmiBlitz3.ab3@4171> BRA.w JL_0_466E
00021F4A <AmiBlitz3.ab3@4174>   BSR.w get1bytemain
00021F4E <AmiBlitz3.ab3@4175>    BEQ.w JL_0_462C
00021F52 <AmiBlitz3.ab3@4176>   CMP.w #"'",D0
00021F56 <AmiBlitz3.ab3@4177>    BEQ.w JL_0_4638
00021F5A <AmiBlitz3.ab3@4178>    BSR.w makename2
00021F5C <AmiBlitz3.ab3@4179>    TST.w d0
00021F60 <AmiBlitz3.ab3@4180>    BPL 'll1
00021F62 <AmiBlitz3.ab3@4181>    SUBQ.l #2,a5
00021F6A <AmiBlitz3.ab3@4182>    MOVE.w #":",lastchar
00021F6E <AmiBlitz3.ab3@4183> BRA JL_0_4658                                              ;????
00021F72 <AmiBlitz3.ab3@4187>   BSR.w undodebug
00021F78 <AmiBlitz3.ab3@4188>   LEA ptr_parameterstore,A0
00021F7E <AmiBlitz3.ab3@4189>   LEA lastgloballabel,A1
00021F80 <AmiBlitz3.ab3@4192>   MOVE.b (A0)+,(A1)+
00021F84 <AmiBlitz3.ab3@4193>    BNE.w JL_0_4668
00021F88 <AmiBlitz3.ab3@4196>   BSR.w findlabel2
00021F8C <AmiBlitz3.ab3@4197>    BEQ.w JL_0_4698
00021F90 <AmiBlitz3.ab3@4198>    BSR.w addlabelhash
00021F94 <AmiBlitz3.ab3@4201>   CLR.l $4(A2)
00021F9C <AmiBlitz3.ab3@4202>   MOVE.l destpointer,$8(A2)
00021FA4 <AmiBlitz3.ab3@4205>   MOVE.w procnum,$10(A2)
00021FA6 <AmiBlitz3.ab3@4206> RTS
00021FAA <AmiBlitz3.ab3@4210>   MOVE.l $4(A2),D0
00021FAE <AmiBlitz3.ab3@4211>   BTST #$0,D0
00021FB2 <AmiBlitz3.ab3@4212>    BNE.w illlaberr
00021FB8 <AmiBlitz3.ab3@4213>   TST.w pass
00021FBC <AmiBlitz3.ab3@4215>   MOVE.l $8(A2),D0
00021FC0 <AmiBlitz3.ab3@4216>    BNE.w duplaberr
00021FC8 <AmiBlitz3.ab3@4217>   MOVE.w procnum,$10(A2)
00021FCC <AmiBlitz3.ab3@4218>   MOVEA.l $4(A2),A3
00021FD2 <AmiBlitz3.ab3@4219>   MOVEA.l _execbase,A6
00021FD6 <AmiBlitz3.ab3@4222>   CMPA.w #$0,A3
00021FDA <AmiBlitz3.ab3@4223>    BEQ.w JL_0_467A
00021FDE <AmiBlitz3.ab3@4224>     MOVE.l $4(A2),D1
00021FE2 <AmiBlitz3.ab3@4225>     BTST #$0,D1
00021FE6 <AmiBlitz3.ab3@4226>     BNE.w illlaberr
00021FEA <AmiBlitz3.ab3@4227>   MOVE.w $8(A3),D1
00021FEE <AmiBlitz3.ab3@4228>   CMP.w $10(A2),D1
00021FF2 <AmiBlitz3.ab3@4229>    BEQ.w JL_0_46DC
00021FF8 <AmiBlitz3.ab3@4230>    TST.b newsyntax
00021FFC <AmiBlitz3.ab3@4231>    BEQ 'l1
00022000 <AmiBlitz3.ab3@4232> BRA.w JL_0_46DC                                            ;label context out of range fix
00022008 <AmiBlitz3.ab3@4237>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
0002200C <AmiBlitz3.ab3@4238> BRA.w referr
00022012 <AmiBlitz3.ab3@4241>   MOVE.w dontwrite,D1
00022016 <AmiBlitz3.ab3@4242>    BNE.w JL_0_4706
0002201A <AmiBlitz3.ab3@4243>   MOVEA.l $4(A3),A1
00022020 <AmiBlitz3.ab3@4244>   BTST #$0,$7(A3)
00022024 <AmiBlitz3.ab3@4245>    BEQ.w JL_0_4700
00022026 <AmiBlitz3.ab3@4246>   SUBQ.w #1,A1
0002202C <AmiBlitz3.ab3@4247>   MOVE.l data2,(A1)
00022030 <AmiBlitz3.ab3@4248> BRA.w JL_0_4706
00022036 <AmiBlitz3.ab3@4251>   MOVE.l destpointer,(A1)
00022038 <AmiBlitz3.ab3@4254>   MOVEA.l A3,A1
0002203A <AmiBlitz3.ab3@4255>   MOVEA.l (A3),A3
0002203E <AmiBlitz3.ab3@4256>   MOVE.l A3,$4(A2)
00022040 <AmiBlitz3.ab3@4257>   MOVEQ.l #$0C+2,D0
00022046 <AmiBlitz3.ab3@4258>   MOVE.l mempool,a0
0002204C <AmiBlitz3.ab3@4259>   MOVEA.l _execbase,A6
00022050 <AmiBlitz3.ab3@4260>   JSR _FreePooled(A6)
00022054 <AmiBlitz3.ab3@4261> BRA.w JL_0_46BC
0002205E <AmiBlitz3.ab3@4266>    MOVE.l #forthstack,forthsp
00022068 <AmiBlitz3.ab3@4267>   MOVE.l #precstack,precsp
0002206C <AmiBlitz3.ab3@4268>    BSR.w getparameter2
00022070 <AmiBlitz3.ab3@4271>   BSR.w findlabel2
00022074 <AmiBlitz3.ab3@4272>    BEQ.w JL_0_4738
00022078 <AmiBlitz3.ab3@4273>    BSR.w addlabelhash
00022080 <AmiBlitz3.ab3@4274>   MOVE.l #$1,$4(A2)
00022084 <AmiBlitz3.ab3@4275> BRA.w JL_0_4744
0002208C <AmiBlitz3.ab3@4278>   CMPI.l #$1,$4(A2)
00022090 <AmiBlitz3.ab3@4279>    BNE.w illconerr
00022094 <AmiBlitz3.ab3@4288>   CMP.w #$3D,D0
00022098 <AmiBlitz3.ab3@4289>   BEQ.w JL_0_474E
0002209A <AmiBlitz3.ab3@4290> RTS
0002209C <AmiBlitz3.ab3@4294>   MOVE.l A2,-(A7)
000220A2 <AmiBlitz3.ab3@4295>   JSR AJL_0_BF6E
000220A4 <AmiBlitz3.ab3@4296>   MOVEA.l (A7)+,A2
000220A8 <AmiBlitz3.ab3@4297>   MOVE.l D3,$8(A2)                                         ;store constant
000220B0 <AmiBlitz3.ab3@4298>   CMP.w #$0a,lastchar
000220B4 <AmiBlitz3.ab3@4299>   BNE 'l1
000220BC <AmiBlitz3.ab3@4300>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000220BE <AmiBlitz3.ab3@4303> RTS
000220C2 <AmiBlitz3.ab3@4306>   BSR.w findproc                                           ;write statement call
000220C6 <AmiBlitz3.ab3@4307>   BEQ _state
000220CC <AmiBlitz3.ab3@4308>   TST.l unusedfunc
000220D0 <AmiBlitz3.ab3@4309>   BEQ noprocerr
000220D6 <AmiBlitz3.ab3@4311>   JSR gotoendsource
000220DA <AmiBlitz3.ab3@4314>   TST.b $5(A2)
000220E0 <AmiBlitz3.ab3@4316>   MOVE.l a2,currentfunccall
000220E8 <AmiBlitz3.ab3@4317>   MOVE.b #1,funccall
000220EE <AmiBlitz3.ab3@4318>   MOVE.b #1,isfunc(a2)
000220F2 <AmiBlitz3.ab3@4319>   MOVE.l $E(A2),-(A7)
000220F4 <AmiBlitz3.ab3@4320>   MOVEQ.l #$00,D0
000220F8 <AmiBlitz3.ab3@4321>   MOVE.b $4(A2),D0
000220FE <AmiBlitz3.ab3@4322>   MOVE.l d0,parnumtemp
00022102 <AmiBlitz3.ab3@4323>   BEQ.w JL_0_4786
00022106 <AmiBlitz3.ab3@4324>   TST.b $20(a2)                                            ;increase if morepar
0002210A <AmiBlitz3.ab3@4325>   BNE 'no0par
0002210C <AmiBlitz3.ab3@4326>   MOVE.l a5,a4
00022110 <AmiBlitz3.ab3@4329>   CMP.b #$20,(a4)+
00022114 <AmiBlitz3.ab3@4330>   BEQ 'l1
0002211A <AmiBlitz3.ab3@4331>   CMP.b #"}",-1(a4)
0002211E <AmiBlitz3.ab3@4332>   BNE  'no0par                                             ;statementcall pars
00022120 <AmiBlitz3.ab3@4333>   MOVEQ #0,d0
00022124 <AmiBlitz3.ab3@4336>   LEA $16(A2),A1
00022126 <AmiBlitz3.ab3@4339>   MOVE.l d1,-(a7)
00022128 <AmiBlitz3.ab3@4340>   MOVE.b (a1),d2
0002212A <AmiBlitz3.ab3@4341>   MOVE.l d0,d1
0002212E <AmiBlitz3.ab3@4342>   CMP.w #4,d2
00022132 <AmiBlitz3.ab3@4343>   BNE 'l1b
00022138 <AmiBlitz3.ab3@4344>   ADD.l #$203c,d1
0002213E <AmiBlitz3.ab3@4346>   JSR writeword
00022144 <AmiBlitz3.ab3@4347>   MOVE.l #$ffff0000,d1
0002214A <AmiBlitz3.ab3@4349>   JSR writelong
0002214E <AmiBlitz3.ab3@4350> BRA 'l2b
00022154 <AmiBlitz3.ab3@4353>   TST.b fpu
00022158 <AmiBlitz3.ab3@4354>   BNE 'l1c
0002215C <AmiBlitz3.ab3@4355>   CMP.w #5,d2
00022160 <AmiBlitz3.ab3@4356>   BNE 'l1c
00022166 <AmiBlitz3.ab3@4357>   ADD.l #$203c,d1
0002216C <AmiBlitz3.ab3@4359>   JSR writeword
00022172 <AmiBlitz3.ab3@4360>   MOVE.l #$800000c1,d1
00022178 <AmiBlitz3.ab3@4362>   JSR writelong
0002217C <AmiBlitz3.ab3@4363> BRA 'l2b
00022182 <AmiBlitz3.ab3@4366>   ADD.l #$70ff,d1
00022188 <AmiBlitz3.ab3@4368>   JSR writeword
0002218E <AmiBlitz3.ab3@4369>   MOVE.l #$f23c5000,d1
00022190 <AmiBlitz3.ab3@4370>   MOVE.l d0,d2
00022192 <AmiBlitz3.ab3@4371>   ASR.l #2,d2
00022194 <AmiBlitz3.ab3@4372>   ADD.l d2,d1
0002219A <AmiBlitz3.ab3@4374>   JSR writelong
0002219E <AmiBlitz3.ab3@4375>   MOVE.w #$ffff,d1
000221A4 <AmiBlitz3.ab3@4377>   JSR writeword
000221A6 <AmiBlitz3.ab3@4380>   MOVE.l (a7)+,d1
000221A8 <AmiBlitz3.ab3@4381>   ADDQ.l #1,a1
000221AE <AmiBlitz3.ab3@4382>   ADD.l #$0200,d0
000221B4 <AmiBlitz3.ab3@4383>   CMP.l #$0e00,d0
000221B8 <AmiBlitz3.ab3@4384>    BEQ syntaxerr
000221BA <AmiBlitz3.ab3@4385>   TST.b (a1)
000221BE <AmiBlitz3.ab3@4386>    BNE 'again
000221C2 <AmiBlitz3.ab3@4387> BRA JL_0_4786
000221CC <AmiBlitz3.ab3@4390>   MOVE.w a2offset,a2offset2
000221D0 <AmiBlitz3.ab3@4391>   LEA $16(A2),A2
000221D6 <AmiBlitz3.ab3@4392>   MOVE.b funcparloop,-(a7)
000221DE <AmiBlitz3.ab3@4393>   MOVE.b #1,funcparloop
000221E4 <AmiBlitz3.ab3@4394>   MOVE.b blitzparloop,-(a7)
000221EA <AmiBlitz3.ab3@4395>   CLR.b blitzparloop
000221EE <AmiBlitz3.ab3@4396>   BSR.w fetchpees2
000221F4 <AmiBlitz3.ab3@4397>   MOVE.b (a7)+,blitzparloop
000221FA <AmiBlitz3.ab3@4398>   MOVE.b (a7)+,funcparloop
000221FE <AmiBlitz3.ab3@4399> BRA.w JL_0_478A
00022202 <AmiBlitz3.ab3@4402>   BSR.w get1bytemain
00022206 <AmiBlitz3.ab3@4405>   CMP.w #$7D,D0
0002220A <AmiBlitz3.ab3@4406>    BNE.w morepar_                                          ;syntax error morepar
00022210 <AmiBlitz3.ab3@4407>    JSR chkstak
00022212 <AmiBlitz3.ab3@4408>   MOVE.l (A7)+,D1
00022218 <AmiBlitz3.ab3@4424>    JSR JL_0_AFCA
0002221E <AmiBlitz3.ab3@4446>   CLR.b funccall
00022222 <AmiBlitz3.ab3@4447> BRA.w get1bytemain
00022228 <AmiBlitz3.ab3@4451>   MOVE.l d0,lasttoken
0002222C <AmiBlitz3.ab3@4452>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022230 <AmiBlitz3.ab3@4453>   BNE 'l2
00022234 <AmiBlitz3.ab3@4454>    MOVE.w #$dd05,d0
00022238 <AmiBlitz3.ab3@4457>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
0002223C <AmiBlitz3.ab3@4458>   BNE 'l3
00022240 <AmiBlitz3.ab3@4459>    MOVE.w #$dd06,d0
00022244 <AmiBlitz3.ab3@4462>   CMP.w #-$7FC4,D0
00022248 <AmiBlitz3.ab3@4463>   BCS.w JL_0_47C4
0002224C <AmiBlitz3.ab3@4464>     CMP.w #-$7F4D,D0
00022250 <AmiBlitz3.ab3@4465>     BCC.w JL_0_47C4
00022258 <AmiBlitz3.ab3@4466>       BTST #$7,assemblercheck                              ;inline Assembler checking
0002225C <AmiBlitz3.ab3@4467>       BNE.b JL_0_47C0
00022262 <AmiBlitz3.ab3@4468>         TST.b debugmode
00022266 <AmiBlitz3.ab3@4469>         BEQ.b 'l10
00022270 <AmiBlitz3.ab3@4474>           MOVE.w d_nomemleft,dontwrite
0002227A <AmiBlitz3.ab3@4475>           MOVE.l d_bigpc,bigpc
00022284 <AmiBlitz3.ab3@4476>           MOVE.l d_pc,destpointer
0002228E <AmiBlitz3.ab3@4477>           MOVE.l cont_pc2,cont_pc
00022292 <AmiBlitz3.ab3@4483> BRA.w JL_0_612C
00022296 <AmiBlitz3.ab3@4486>   BCLR #$F,D0
00022298 <AmiBlitz3.ab3@4487>   MOVE.w D0,D1
0002229C <AmiBlitz3.ab3@4488>   ANDI.w #$7F00,D1
000222A0 <AmiBlitz3.ab3@4489>   BNE.w JL_0_4856
000222A4 <AmiBlitz3.ab3@4490>     CMP.w #$B3,D0                                          ;intern Instructions
000222A8 <AmiBlitz3.ab3@4491>     BCS.w JL_0_47F2
000222AC <AmiBlitz3.ab3@4492>       SUBI.w #$77,D0
000222B0 <AmiBlitz3.ab3@4493>       CMP.w #$4B,D0
000222B4 <AmiBlitz3.ab3@4494>       BEQ.w JL_0_4830
000222B8 <AmiBlitz3.ab3@4495>         CMP.w #$46,D0
000222BC <AmiBlitz3.ab3@4496>         BEQ.w JL_0_4830
000222C0 <AmiBlitz3.ab3@4497> BRA.w JL_0_4834                                            ; change tokennum
000222C4 <AmiBlitz3.ab3@4500>     CMP.w #$38,D0
000222C8 <AmiBlitz3.ab3@4501>      BEQ.w JL_0_4830
000222CC <AmiBlitz3.ab3@4502>     CMP.w #$39,D0
000222D0 <AmiBlitz3.ab3@4503>      BEQ.w JL_0_4830
000222D4 <AmiBlitz3.ab3@4504>     CMP.w #$D,D0
000222D8 <AmiBlitz3.ab3@4505>      BEQ.w JL_0_4830
000222DC <AmiBlitz3.ab3@4506>     CMP.w #$12,D0
000222E0 <AmiBlitz3.ab3@4507>      BEQ.w JL_0_4830
000222E4 <AmiBlitz3.ab3@4508>     CMP.w #$13,D0
000222E8 <AmiBlitz3.ab3@4509>      BEQ.w JL_0_4830
000222EC <AmiBlitz3.ab3@4510>     CMP.w #$1A,D0
000222F0 <AmiBlitz3.ab3@4511>      BEQ.w JL_0_4830
000222F4 <AmiBlitz3.ab3@4512>     CMP.w #$2A,D0
000222F8 <AmiBlitz3.ab3@4513>      BHI.w JL_0_4834
000222FC <AmiBlitz3.ab3@4514>     CMP.w #$23,D0
00022300 <AmiBlitz3.ab3@4515>      BCS.b JL_0_4834
00022304 <AmiBlitz3.ab3@4518>   BSR.w undodebug
00022306 <AmiBlitz3.ab3@4521>   SUBQ.w #1,D0
00022308 <AmiBlitz3.ab3@4522>   LSL.w #2,D0
0002230E <AmiBlitz3.ab3@4529>   LEA instructionbase,A0
00022312 <AmiBlitz3.ab3@4530>   MOVEA.l $0(A0,D0.W),A0
00022314 <AmiBlitz3.ab3@4531>   MOVE.l A0,-(A7)
00022318 <AmiBlitz3.ab3@4532> BRA.w get1bytemain
0002231A <AmiBlitz3.ab3@4538>   MOVE.w D0,D1
0002231E <AmiBlitz3.ab3@4539>    BSR.w searchinstr
00022324 <AmiBlitz3.ab3@4540>    TST.b newmode
00022328 <AmiBlitz3.ab3@4541>    BNE compile_term
0002232E <AmiBlitz3.ab3@4542>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022332 <AmiBlitz3.ab3@4543>    BNE.w stamigalib
00022338 <AmiBlitz3.ab3@4544>   BTST #$0,$1(A3)
0002233C <AmiBlitz3.ab3@4545>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022340 <AmiBlitz3.ab3@4546>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022344 <AmiBlitz3.ab3@4547>    BSR.w JL_0_66F6
0002234A <AmiBlitz3.ab3@4553>   MOVE.w numreps,-(A7)
00022350 <AmiBlitz3.ab3@4554>   MOVE.w userp,-(A7)
00022356 <AmiBlitz3.ab3@4555>   MOVE.w a2offset,-(A7)
00022358 <AmiBlitz3.ab3@4556>   MOVE.l A2,-(A7)                                          ;recurs.
00022362 <AmiBlitz3.ab3@4557>   MOVE.w convsize,userp
00022366 <AmiBlitz3.ab3@4558>   LEA $6(A3),A1
00022368 <AmiBlitz3.ab3@4562>    MOVE.w (A1),D2
0002236C <AmiBlitz3.ab3@4563>    BMI.w SERR                                              ;statement syntax error
00022370 <AmiBlitz3.ab3@4564>   ANDI.w #$FF,D2
00022372 <AmiBlitz3.ab3@4565>   CMP.w D2,D1
00022376 <AmiBlitz3.ab3@4566>    BEQ.w JL_0_48E0
0002237A <AmiBlitz3.ab3@4567>    BCS.w JL_0_48CC
0002237C <AmiBlitz3.ab3@4568>   MOVE.b (A1),D3
00022380 <AmiBlitz3.ab3@4569>   ANDI.w #$7,D3
00022384 <AmiBlitz3.ab3@4570>    BEQ.w JL_0_48CC
00022386 <AmiBlitz3.ab3@4571>   MOVE.w D2,D4
00022388 <AmiBlitz3.ab3@4572>   SUB.w D3,D4
0002238A <AmiBlitz3.ab3@4573>   MOVEQ.l #$00,D5
0002238C <AmiBlitz3.ab3@4574>   MOVE.w D1,D5
0002238E <AmiBlitz3.ab3@4575>   SUB.w D4,D5
00022390 <AmiBlitz3.ab3@4576>   DIVU D3,D5
00022392 <AmiBlitz3.ab3@4577>   SWAP D5
00022394 <AmiBlitz3.ab3@4578>   TST.w D5
00022398 <AmiBlitz3.ab3@4579>    BEQ.w JL_0_48E0
0002239A <AmiBlitz3.ab3@4582>   ADDQ.w #2,A1
0002239C <AmiBlitz3.ab3@4583>   ADDA.w D2,A1
000223A0 <AmiBlitz3.ab3@4584>    BSR.w aligna1
000223A4 <AmiBlitz3.ab3@4585>    BSR.w skiplibreg
000223A8 <AmiBlitz3.ab3@4586>   LEA $C(A1),A1
000223AC <AmiBlitz3.ab3@4587> BRA.w JL_0_489A
000223AE <AmiBlitz3.ab3@4590>   MOVE.w (a3),d2
000223B2 <AmiBlitz3.ab3@4591>   BTST #1,d2
000223B6 <AmiBlitz3.ab3@4592>   BEQ statement_
000223BA <AmiBlitz3.ab3@4593>   CMP.w #1,d1
000223BE <AmiBlitz3.ab3@4594>   BEQ statement_
000223C2 <AmiBlitz3.ab3@4597>   CMP.b #$20,(a5)+
000223C6 <AmiBlitz3.ab3@4598>   BEQ 'l2
000223CC <AmiBlitz3.ab3@4599>   CMP.b #"(",-2(a5)
000223D0 <AmiBlitz3.ab3@4600>   BNE 'l1
000223D4 <AmiBlitz3.ab3@4601> BRA parameter_
000223D8 <AmiBlitz3.ab3@4604> BRA inbrackets_
000223DA <AmiBlitz3.ab3@4607>   MOVE.b (A1),D2
000223DC <AmiBlitz3.ab3@4608>   LSL.w #8,D2
000223DE <AmiBlitz3.ab3@4609>   OR.w D2,D1
000223E0 <AmiBlitz3.ab3@4610>   MOVE.l A1,-(A7)
000223E6 <AmiBlitz3.ab3@4611>   CLR.w a2offset
000223E8 <AmiBlitz3.ab3@4612>   TST.w D1
000223EC <AmiBlitz3.ab3@4613>    BEQ.w JL_0_4900
000223F0 <AmiBlitz3.ab3@4614>   LEA $2(A1),A2
000223F6 <AmiBlitz3.ab3@4616>   MOVE.l lasttoken,-(a7)
000223FC <AmiBlitz3.ab3@4617>   CLR.l lasttoken
00022400 <AmiBlitz3.ab3@4618>   BSR.w fetchlibps
00022406 <AmiBlitz3.ab3@4619>   MOVE.l (a7)+,lasttoken
0002240A <AmiBlitz3.ab3@4620> BRA.w JL_0_4904
0002240E <AmiBlitz3.ab3@4623>   BSR.w get1bytemain
00022410 <AmiBlitz3.ab3@4626>   MOVEA.l (A7)+,A1
00022412 <AmiBlitz3.ab3@4627>   MOVEA.l (A7)+,A2
00022418 <AmiBlitz3.ab3@4628>   MOVE.w a2offset,D1
0002241C <AmiBlitz3.ab3@4629>    BEQ.w JL_0_493A
00022422 <AmiBlitz3.ab3@4630>   MOVE.w D1,preplibst+2
00022428 <AmiBlitz3.ab3@4631>   MOVE.l preplibst,D1
0002242E <AmiBlitz3.ab3@4632>    JSR writelong                                           ;write array offset stack correct
00022438 <AmiBlitz3.ab3@4633>   MOVE.w numreps,movenumrep+2
0002243C <AmiBlitz3.ab3@4634>    BEQ.w JL_0_493A
00022442 <AmiBlitz3.ab3@4635>   MOVE.l movenumrep,D1
00022448 <AmiBlitz3.ab3@4636>    JSR writelong
0002244E <AmiBlitz3.ab3@4640>   JSR userjsr
00022454 <AmiBlitz3.ab3@4643>   MOVE.w a2offset,D1
00022458 <AmiBlitz3.ab3@4644>    BEQ.w JL_0_4974
0002245C <AmiBlitz3.ab3@4645>   CMP.w #$8,D1
00022460 <AmiBlitz3.ab3@4646>    BHI.w JL_0_4964
00022464 <AmiBlitz3.ab3@4647>   ANDI.w #$7,D1
00022466 <AmiBlitz3.ab3@4648>   LSL.w #8,D1
00022468 <AmiBlitz3.ab3@4649>   LSL.w #1,D1
0002246C <AmiBlitz3.ab3@4650>   ORI.w #$504F,D1
00022472 <AmiBlitz3.ab3@4652>   JSR writeword
00022476 <AmiBlitz3.ab3@4653> BRA.w JL_0_4974
0002247C <AmiBlitz3.ab3@4656>   MOVE.w D1,fixlibst+2
00022482 <AmiBlitz3.ab3@4657>   MOVE.l fixlibst,D1
00022488 <AmiBlitz3.ab3@4658>   JSR writelong
0002248E <AmiBlitz3.ab3@4661>   MOVE.w (A7)+,a2offset
00022494 <AmiBlitz3.ab3@4662>   MOVE.w (A7)+,userp
0002249A <AmiBlitz3.ab3@4663>   MOVE.w (A7)+,numreps
0002249E <AmiBlitz3.ab3@4664> BRA.w reget
000224A2 <AmiBlitz3.ab3@4668>   MOVEM.l A2-A3,-(A7)
000224A8 <AmiBlitz3.ab3@4669>   CLR.b doublepeek
000224AE <AmiBlitz3.ab3@4670>   MOVE.l A5,lastsourcepos
000224B2 <AmiBlitz3.ab3@4671>    BSR.w getchar
000224B6 <AmiBlitz3.ab3@4672>   CMP.w #$2E,D0
000224BA <AmiBlitz3.ab3@4673>    BEQ.w JL_0_49B4
000224C0 <AmiBlitz3.ab3@4674>   MOVEA.l defaulttype,A2
000224C4 <AmiBlitz3.ab3@4675>   CMP.w #$24,D0
000224C8 <AmiBlitz3.ab3@4676>    BNE.w JL_0_49CA
000224CA <AmiBlitz3.ab3@4677>   MOVEQ.l #$07,D1
000224CE <AmiBlitz3.ab3@4678> BRA.w JL_0_49DE
000224D2 <AmiBlitz3.ab3@4681>   BSR.w getparameter2
000224D6 <AmiBlitz3.ab3@4682>   BEQ.w syntaxerr
000224DC <AmiBlitz3.ab3@4683>   LEA newtypebase,A2
000224E0 <AmiBlitz3.ab3@4684>   BSR.w findtype
000224E4 <AmiBlitz3.ab3@4685>   BNE.w notypeerr
000224EE <AmiBlitz3.ab3@4689>   MOVE.w oldqflag,instringon
000224F4 <AmiBlitz3.ab3@4690>   MOVEA.l lastsourcepos,A5
000224F8 <AmiBlitz3.ab3@4695>   MOVE.w $6(A2),D1
000224FE <AmiBlitz3.ab3@4696>   CMP.w #8,8(a2)
00022502 <AmiBlitz3.ab3@4697>   BNE 'l1
0002250A <AmiBlitz3.ab3@4698>   MOVE.b #1,doublepeek
00022510 <AmiBlitz3.ab3@4702>   MOVE.w D1,convsize
00022514 <AmiBlitz3.ab3@4703>   MOVEM.l (A7)+,A2-A3
00022516 <AmiBlitz3.ab3@4704> RTS
0002251C <AmiBlitz3.ab3@4709>   BTST #$3,$1(A3)
00022520 <AmiBlitz3.ab3@4710>   BEQ.w JL_0_4A06
00022524 <AmiBlitz3.ab3@4711>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022528 <AmiBlitz3.ab3@4713>   ORI.w #$7000,D1
0002252E <AmiBlitz3.ab3@4714>   JSR writeword
00022534 <AmiBlitz3.ab3@4715>   ADDQ.w #1,regnum
00022536 <AmiBlitz3.ab3@4718> RTS
00022538 <AmiBlitz3.ab3@4724>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0002253A <AmiBlitz3.ab3@4725>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
0002253C <AmiBlitz3.ab3@4726>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
0002253E <AmiBlitz3.ab3@4730> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022540 <AmiBlitz3.ab3@4731>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022542 <AmiBlitz3.ab3@4732>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022544 <AmiBlitz3.ab3@4736> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022546 <AmiBlitz3.ab3@4737>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022548 <AmiBlitz3.ab3@4738>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0002254A <AmiBlitz3.ab3@4742> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
0002254C <AmiBlitz3.ab3@4745> srctype:    Ds.w 1
00022550 <AmiBlitz3.ab3@4750>   BSR.w excget
00022554 <AmiBlitz3.ab3@4751>   CMP.w #$2C,D0
00022558 <AmiBlitz3.ab3@4752>    BNE.w syntaxerr
0002255E <AmiBlitz3.ab3@4753>   MOVE.b D2,srctype
00022564 <AmiBlitz3.ab3@4754>   MOVE.w pusha2,D1
0002256A <AmiBlitz3.ab3@4755>   JSR writeword
0002256E <AmiBlitz3.ab3@4756>   BSR.w get1bytemain
00022572 <AmiBlitz3.ab3@4757>   BSR.w excget
00022578 <AmiBlitz3.ab3@4758>   CMP.b srctype,D2
0002257C <AmiBlitz3.ab3@4759>    BNE.w excerr2
00022582 <AmiBlitz3.ab3@4760>   MOVE.w pulla1,D1
00022588 <AmiBlitz3.ab3@4761>    JSR writeword
0002258C <AmiBlitz3.ab3@4762>   CMP.b #$2,D2
00022590 <AmiBlitz3.ab3@4763>    BCS.w JL_0_4B2A
00022594 <AmiBlitz3.ab3@4764>    BEQ.w JL_0_4B1E
00022598 <AmiBlitz3.ab3@4765>   LEA swapl(PC),A0
0002259C <AmiBlitz3.ab3@4766>   LEA swaplf(PC),A1
000225A2 <AmiBlitz3.ab3@4767> JMP pokecode
000225A6 <AmiBlitz3.ab3@4770>   LEA swapw(PC),A0
000225AA <AmiBlitz3.ab3@4771>   LEA swapwf(PC),A1
000225B0 <AmiBlitz3.ab3@4772> JMP pokecode
000225B4 <AmiBlitz3.ab3@4775>   LEA swapb(PC),A0
000225B8 <AmiBlitz3.ab3@4776>   LEA swapbf(PC),A1
000225BE <AmiBlitz3.ab3@4777> JMP pokecode
000225C4 <AmiBlitz3.ab3@4781>   JSR getparameter
000225C8 <AmiBlitz3.ab3@4782>   BSR.w JL_0_8E3C
000225CC <AmiBlitz3.ab3@4783>   BSR.w calcvar
000225D0 <AmiBlitz3.ab3@4784>   BTST #$E,D2
000225D4 <AmiBlitz3.ab3@4785>    BEQ.w JL_0_4B4E
000225D8 <AmiBlitz3.ab3@4786>   MOVE.b #$4,D2
000225DA <AmiBlitz3.ab3@4789>   TST.b D2
000225DE <AmiBlitz3.ab3@4790>    BEQ.w excerr
000225E2 <AmiBlitz3.ab3@4791>   BTST #$F,D2
000225E6 <AmiBlitz3.ab3@4792>    BNE.w JL_0_4B6A
000225EC <AmiBlitz3.ab3@4793>   MOVE.w leaamp,D1
000225F2 <AmiBlitz3.ab3@4794>    JSR pokewda5s
000225F4 <AmiBlitz3.ab3@4795>   MOVE.w D3,D1
000225FA <AmiBlitz3.ab3@4796> JMP writeword
000225FC <AmiBlitz3.ab3@4799> RTS
00022602 <AmiBlitz3.ab3@4809>   MOVE.l mempool,a0
00022608 <AmiBlitz3.ab3@4810>   MOVEA.l _execbase,A6
0002260C <AmiBlitz3.ab3@4811> JMP _AllocPooled(a6)
00022610 <AmiBlitz3.ab3@4815>   MOVE.w #$BF00,D1
00022616 <AmiBlitz3.ab3@4816> JMP Atokejsr
0002261A <AmiBlitz3.ab3@4820>   CMP.w #-$7FFA,D0
0002261E <AmiBlitz3.ab3@4821>    BEQ.w popreturn
00022622 <AmiBlitz3.ab3@4822>   CMP.w #-$7FEA,D0
00022626 <AmiBlitz3.ab3@4823>    BEQ.w popnext2
0002262A <AmiBlitz3.ab3@4824>   CMP.w #-$7FF2,D0
0002262E <AmiBlitz3.ab3@4825>    BEQ.w popselect2
00022632 <AmiBlitz3.ab3@4826>   CMP.w #-$7FF5,D0
00022636 <AmiBlitz3.ab3@4827>    BEQ.w get1bytemain
0002263A <AmiBlitz3.ab3@4828>   CMP.w #-$7FF4,D0
0002263E <AmiBlitz3.ab3@4829>    BEQ.w get1bytemain
00022642 <AmiBlitz3.ab3@4830>   CMP.w #-$7FEC,D0
00022646 <AmiBlitz3.ab3@4831>    BEQ.w get1bytemain
0002264A <AmiBlitz3.ab3@4832>   CMP.w #-$7F45,D0
0002264E <AmiBlitz3.ab3@4833>    BEQ.w get1bytemain
00022652 <AmiBlitz3.ab3@4834> BRA.w syntaxerr
00022658 <AmiBlitz3.ab3@4837>   TST.b debugmode
0002265C <AmiBlitz3.ab3@4838>    BEQ.w popreturn__norerr
00022660 <AmiBlitz3.ab3@4839>   LEA popreturn__rfix(PC),A0
00022664 <AmiBlitz3.ab3@4840>   LEA popreturn__rfixf(PC),A1
0002266A <AmiBlitz3.ab3@4841>    JSR pokecode
0002266E <AmiBlitz3.ab3@4842>   MOVE.w #$C305,D1
00022674 <AmiBlitz3.ab3@4843>    JSR Atokejsr
00022678 <AmiBlitz3.ab3@4844>   MOVE.w popreturn__rfix2(PC),D1
0002267E <AmiBlitz3.ab3@4846>    JSR writeword
00022682 <AmiBlitz3.ab3@4847> BRA.w get1bytemain
00022688 <AmiBlitz3.ab3@4851>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
0002268C <AmiBlitz3.ab3@4852>   BEQ.w popreturn__rfix2
00022692 <AmiBlitz3.ab3@4855>   JSR $20000                                               ;reass
00022694 <AmiBlitz3.ab3@4858>   ADDQ.w #6,A7
00022698 <AmiBlitz3.ab3@4862>   MOVE.w popreturn__sfix(PC),D1
0002269E <AmiBlitz3.ab3@4863>   JSR writeword
000226A2 <AmiBlitz3.ab3@4864> BRA.w get1bytemain
000226A4 <AmiBlitz3.ab3@4869>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000226AA <AmiBlitz3.ab3@4874>   MOVE.l firstfor,D0
000226AE <AmiBlitz3.ab3@4875>    BEQ.w noforerr
000226B0 <AmiBlitz3.ab3@4876>   MOVEA.l D0,A2
000226B4 <AmiBlitz3.ab3@4877>    BSR.w get1bytemain
000226B8 <AmiBlitz3.ab3@4878>   BSR.w popnext
000226BE <AmiBlitz3.ab3@4881>   TST.b debugmode
000226C2 <AmiBlitz3.ab3@4882>    BEQ.w popnext3__ner
000226C8 <AmiBlitz3.ab3@4883>   MOVE.l nextfixw2,D1
000226CE <AmiBlitz3.ab3@4884>   CMPI.w #$3,$C(A2)
000226D2 <AmiBlitz3.ab3@4885>    BCS.w writelong2
000226D8 <AmiBlitz3.ab3@4886>   MOVE.l nextfixl2,D1
000226DE <AmiBlitz3.ab3@4887> writelong2 JMP  writelong
000226E4 <AmiBlitz3.ab3@4890>   CMPI.w #$3,$C(A2)
000226E8 <AmiBlitz3.ab3@4891>    BCS.w popnext3__skip2
000226EE <AmiBlitz3.ab3@4892>   MOVE.l nextfixl,D1
000226F4 <AmiBlitz3.ab3@4893>   JMP writelong
000226FA <AmiBlitz3.ab3@4896>   MOVE.w nextfixw,D1
00022700 <AmiBlitz3.ab3@4897> JMP writeword
00022704 <AmiBlitz3.ab3@4901>   MOVE.w $C(A2),D0
0002270A <AmiBlitz3.ab3@4902>   TST.b debugmode
0002270E <AmiBlitz3.ab3@4903>    BEQ.w popnext__norunerr
00022712 <AmiBlitz3.ab3@4904>   MOVE.w #$C306,D1
00022716 <AmiBlitz3.ab3@4905>   CMP.w #$3,D0
0002271A <AmiBlitz3.ab3@4906>    BCS.w popnext__oktc
0002271C <AmiBlitz3.ab3@4907>   ADDQ.w #1,D1
0002271E <AmiBlitz3.ab3@4910>   MOVE.l A2,-(A7)
00022724 <AmiBlitz3.ab3@4911>   JSR Atokejsr
00022726 <AmiBlitz3.ab3@4912>   MOVEA.l (A7)+,A2
00022728 <AmiBlitz3.ab3@4915> RTS
0002272E <AmiBlitz3.ab3@4919>   MOVE.l firstsel,D0
00022732 <AmiBlitz3.ab3@4920>    BEQ.w eselerr
00022734 <AmiBlitz3.ab3@4921>   MOVEA.l D0,A2
00022738 <AmiBlitz3.ab3@4922>    BSR.w get1bytemain
0002273C <AmiBlitz3.ab3@4925>   MOVE.w $C(A2),D2
00022742 <AmiBlitz3.ab3@4926>   TST.b debugmode
00022746 <AmiBlitz3.ab3@4927>    BEQ.w popselect__norerr
0002274A <AmiBlitz3.ab3@4928>   MOVE.w #$C313,D1
0002274E <AmiBlitz3.ab3@4929>   CMP.w #$3,D2
00022752 <AmiBlitz3.ab3@4930>    BCS.w popselect__chkit
00022754 <AmiBlitz3.ab3@4931>   ADDQ.w #1,D1
0002275A <AmiBlitz3.ab3@4934>   JSR Atokejsr                                             ;make sure next thing on stack
0002275C <AmiBlitz3.ab3@4938>   MOVEQ.l #$02,D1
00022760 <AmiBlitz3.ab3@4939>   CMP.w #$3,D2
00022764 <AmiBlitz3.ab3@4940>    BCS.w popselect__doit
00022766 <AmiBlitz3.ab3@4941>   MOVEQ.l #$04,D1
0002276A <AmiBlitz3.ab3@4942>   CMP.w #$7,D2
0002276E <AmiBlitz3.ab3@4943>    BCS.w popselect__doit
00022774 <AmiBlitz3.ab3@4944>   LEA endselstr,A0
0002277A <AmiBlitz3.ab3@4945>   LEA endselstrf,A1
00022780 <AmiBlitz3.ab3@4946>   TST.b debugmode
00022784 <AmiBlitz3.ab3@4947>    BEQ.w popselect__norerr3
0002278A <AmiBlitz3.ab3@4948>   LEA endselstrf2,A1
00022790 <AmiBlitz3.ab3@4951>   JSR pokecode
00022794 <AmiBlitz3.ab3@4952>   MOVE.w #$C003,D1                                         ;global freemem
0002279A <AmiBlitz3.ab3@4953> JMP Atokejsr
000227A0 <AmiBlitz3.ab3@4956>   TST.b debugmode
000227A4 <AmiBlitz3.ab3@4957>    BEQ.w popselect__norerr2
000227A6 <AmiBlitz3.ab3@4958>   ADDQ.w #2,D1                                             ;for the "sE"
000227A8 <AmiBlitz3.ab3@4961>   LSL.w #8,D1
000227AA <AmiBlitz3.ab3@4962>   LSL.w #1,D1
000227B0 <AmiBlitz3.ab3@4963>   OR.w endsel,D1
000227B6 <AmiBlitz3.ab3@4964> JMP writeword
000227BA <AmiBlitz3.ab3@4967> firstrep:    Ds.l 1
000227BE <AmiBlitz3.ab3@4968> replineat:   Ds.l 1
000227C4 <AmiBlitz3.ab3@4977>   CLR.l fp0addr
000227CE <AmiBlitz3.ab3@4978>   MOVE.l linenumat,replineat
000227D0 <AmiBlitz3.ab3@4979>   MOVEQ.l #$08,D0
000227D6 <AmiBlitz3.ab3@4980>   MOVEA.l _execbase,A6
000227DC <AmiBlitz3.ab3@4981>   MOVE.l mempool,a0
000227E0 <AmiBlitz3.ab3@4982>   JSR _AllocPooled(a6)
000227E2 <AmiBlitz3.ab3@4984>   MOVEA.l D0,A0
000227E6 <AmiBlitz3.ab3@4985>   MOVE.l firstrep(PC),(A0)
000227EC <AmiBlitz3.ab3@4986>   MOVE.l A0,firstrep
000227F4 <AmiBlitz3.ab3@4987>   MOVE.l destpointer,$4(A0)
000227F6 <AmiBlitz3.ab3@4988> RTS
000227FC <AmiBlitz3.ab3@4991> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00022800 <AmiBlitz3.ab3@4994>   LEA str_temp(PC),A1
00022802 <AmiBlitz3.ab3@4995>   CLR.w (A1)
00022806 <AmiBlitz3.ab3@4996>   CLR.l $2(A1)
00022808 <AmiBlitz3.ab3@4999>   MOVEQ.l #$04,D0
0002280C <AmiBlitz3.ab3@5002>     MOVE.b $1(A1),(A1)+
00022810 <AmiBlitz3.ab3@5003>   DBF D0,check_for_infoextention__loop
00022814 <AmiBlitz3.ab3@5008>   LEA str_temp(PC),A1
00022816 <AmiBlitz3.ab3@5009>   MOVE.b (A0),D0
0002281A <AmiBlitz3.ab3@5010>   ORI.b #$20,D0
0002281E <AmiBlitz3.ab3@5011>   MOVE.b D0,$5(A1)
00022820 <AmiBlitz3.ab3@5012>   TST.b (A0)+
00022824 <AmiBlitz3.ab3@5013>    BNE.w check_for_infoextention__loop2
00022828 <AmiBlitz3.ab3@5014>   CMPI.w #$2E69,(A1)+                                      ;".i"
0002282C <AmiBlitz3.ab3@5015>    BNE.w check_for_infoextention__no
00022832 <AmiBlitz3.ab3@5016>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00022834 <AmiBlitz3.ab3@5019> RTS
00022838 <AmiBlitz3.ab3@5023>   BPL.w gettokeps__evaltoke
0002283A <AmiBlitz3.ab3@5024>   MOVE.w D0,D1
0002283E <AmiBlitz3.ab3@5025>   ANDI.w #$7F80,D1
00022842 <AmiBlitz3.ab3@5026>    BEQ.w tokeerr
00022846 <AmiBlitz3.ab3@5027>   BCLR #$F,D0
00022848 <AmiBlitz3.ab3@5028>   MOVE.w D0,D4                                             ;got toke number
0002284C <AmiBlitz3.ab3@5029>   BSR.w get1bytemain
00022850 <AmiBlitz3.ab3@5030> BRA.w gettokeps__gotnum
00022856 <AmiBlitz3.ab3@5033>   JSR JL_0_BF6A
0002285C <AmiBlitz3.ab3@5034>   CMP.l #MaxWord,D3
00022860 <AmiBlitz3.ab3@5035>    BHI.w tokeerr
00022862 <AmiBlitz3.ab3@5036>   TST.w D6
00022866 <AmiBlitz3.ab3@5037>    BNE.w tokeerr
00022868 <AmiBlitz3.ab3@5038>   MOVE.w D3,D4
0002286A <AmiBlitz3.ab3@5041>   MOVEQ.l #$00,D5
0002286E <AmiBlitz3.ab3@5042>   CMP.w #$2C,D0
00022872 <AmiBlitz3.ab3@5043>    BNE.w gettokeps__gotfrom
00022874 <AmiBlitz3.ab3@5044>   MOVE.w D4,-(A7)
0002287A <AmiBlitz3.ab3@5045>    JSR AJL_0_BF6E
00022880 <AmiBlitz3.ab3@5046>   CMP.l #MaxWord,D3
00022884 <AmiBlitz3.ab3@5047>    BHI.w tokeerr
00022886 <AmiBlitz3.ab3@5048>   TST.w D6
0002288A <AmiBlitz3.ab3@5049>    BNE.w tokeerr
0002288C <AmiBlitz3.ab3@5050>   MOVE.w D3,D5
0002288E <AmiBlitz3.ab3@5051>   MOVE.w (A7)+,D4
00022890 <AmiBlitz3.ab3@5054> RTS                                                        ;d4=toke, d5=form
00022892 <AmiBlitz3.ab3@5058>   TST.w D0
00022896 <AmiBlitz3.ab3@5059>    BSR.w gettokeps
0002289A <AmiBlitz3.ab3@5060>   MOVE.w #$4EB9,D1
000228A0 <AmiBlitz3.ab3@5061>   JSR writeword
000228A4 <AmiBlitz3.ab3@5062>   BSR.w addoff
000228A6 <AmiBlitz3.ab3@5063>   MOVE.w D5,D1
000228AA <AmiBlitz3.ab3@5064>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000228AC <AmiBlitz3.ab3@5065>   SWAP D1
000228AE <AmiBlitz3.ab3@5066>   MOVE.w D4,D1
000228B4 <AmiBlitz3.ab3@5067> JMP writelong
000228B6 <AmiBlitz3.ab3@5071>   TST.w D0
000228BA <AmiBlitz3.ab3@5072>    BSR.w gettokeps
000228BE <AmiBlitz3.ab3@5073>   MOVE.w #$4EB9,D1
000228C4 <AmiBlitz3.ab3@5074>   JSR writeword
000228C8 <AmiBlitz3.ab3@5075>   BSR.w addoff
000228CA <AmiBlitz3.ab3@5076>   MOVE.w D5,D1
000228CE <AmiBlitz3.ab3@5077>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000228D0 <AmiBlitz3.ab3@5078>   SWAP D1
000228D2 <AmiBlitz3.ab3@5079>   MOVE.w D4,D1
000228D8 <AmiBlitz3.ab3@5080>   JMP writelong
000228DE <AmiBlitz3.ab3@5084>   JSR JL_0_BF6A
000228E4 <AmiBlitz3.ab3@5085>   CMP.l #$10000,D3
000228E8 <AmiBlitz3.ab3@5086>    BCC.w tokeerr
000228EA <AmiBlitz3.ab3@5087>   MOVE.w D3,D1
000228F0 <AmiBlitz3.ab3@5088> JMP Atokejsr
000228F4 <AmiBlitz3.ab3@5092>   BSR.w gettokeps
000228F8 <AmiBlitz3.ab3@5093>   MOVE.w #$4EB9,D1
000228FE <AmiBlitz3.ab3@5094>   JSR writeword
00022904 <AmiBlitz3.ab3@5095>   MOVE.l destpointer,D3
0002290C <AmiBlitz3.ab3@5096>   BTST #$7,blitzmode
00022910 <AmiBlitz3.ab3@5097>    BEQ.w do_TokeJsr__inamiga
00022914 <AmiBlitz3.ab3@5098>   BSET #$E,D5
00022918 <AmiBlitz3.ab3@5101>   BSR.w JL_0_6E86
0002291C <AmiBlitz3.ab3@5102>   BSR.w addoff
00022922 <AmiBlitz3.ab3@5103>   JMP writelong
00022926 <AmiBlitz3.ab3@5107>   BEQ.w do_VWait__zero
00022928 <AmiBlitz3.ab3@5108>   MOVEQ.l #$02,D2                                          ;get a word
0002292E <AmiBlitz3.ab3@5110>   JSR bakeval
00022932 <AmiBlitz3.ab3@5111>   MOVE.w fvwait(PC),D1
00022936 <AmiBlitz3.ab3@5112> BRA.w do_VWait__vcont
0002293A <AmiBlitz3.ab3@5115>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00022940 <AmiBlitz3.ab3@5118>   JSR writeword
00022944 <AmiBlitz3.ab3@5119>   MOVE.w #$C104,D1
0002294A <AmiBlitz3.ab3@5120> JMP Atokejsr
0002294C <AmiBlitz3.ab3@5124>   SUBQ.w #1,D0
00022952 <AmiBlitz3.ab3@5127>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00022956 <AmiBlitz3.ab3@5130>   Dc.l $426d0001                                           ;clr.w $0(A5)
0002295A <AmiBlitz3.ab3@5134>   MOVE.b debugmode(PC),D1
0002295E <AmiBlitz3.ab3@5135>   BEQ.b debugmode_codelabel__skip
00022962 <AmiBlitz3.ab3@5136>   MOVE.w #$D500,D1
00022968 <AmiBlitz3.ab3@5137> JMP Atokejsr
0002296A <AmiBlitz3.ab3@5140> RTS
00022972 <AmiBlitz3.ab3@5144>   BSET #$0,blitzmode
0002297A <AmiBlitz3.ab3@5145>   BSET #$7,blitzmode
0002297E <AmiBlitz3.ab3@5146>   MOVE.w #$C200,D1
00022984 <AmiBlitz3.ab3@5147>   JSR Atokejsr
0002298A <AmiBlitz3.ab3@5148>   TST.b debugmode
0002298E <AmiBlitz3.ab3@5149>    BEQ.w do_BLITZ__done
00022992 <AmiBlitz3.ab3@5150>   MOVE.w cgoblitz(PC),D1
00022998 <AmiBlitz3.ab3@5151>   JSR writeword
0002299A <AmiBlitz3.ab3@5152>   MOVEQ.l #-$01,D1
000229A0 <AmiBlitz3.ab3@5153>   JSR writeword
000229A6 <AmiBlitz3.ab3@5154>   JSR getbbase
000229AC <AmiBlitz3.ab3@5155>   JSR writeword
000229B0 <AmiBlitz3.ab3@5158> BRA.w debugmode_codelabel
000229B4 <AmiBlitz3.ab3@5162>   MOVE.w #$C201,D1
000229B8 <AmiBlitz3.ab3@5163> BRA.w do_AMIGA__toamode
000229BC <AmiBlitz3.ab3@5167>   MOVE.W  #$C202,D1
000229C4 <AmiBlitz3.ab3@5170>   BSET #$0,blitzmode
000229CC <AmiBlitz3.ab3@5171>   BCLR #$7,blitzmode
000229D2 <AmiBlitz3.ab3@5172>   JSR Atokejsr
000229D8 <AmiBlitz3.ab3@5173>   TST.b debugmode
000229DC <AmiBlitz3.ab3@5174>    BEQ.w do_AMIGA__done
000229E0 <AmiBlitz3.ab3@5175>   MOVE.w cgoamiga(PC),D1
000229E6 <AmiBlitz3.ab3@5176>   JSR writeword
000229EC <AmiBlitz3.ab3@5177>   JSR getbbase
000229F2 <AmiBlitz3.ab3@5178>   JSR writeword
000229F6 <AmiBlitz3.ab3@5181> BRA.w debugmode_codelabel
000229FA <AmiBlitz3.ab3@5185>   MOVEM.l D2-D7/A2-A4,-(A7)
000229FE <AmiBlitz3.ab3@5188>   MOVEM.l (A7)+,D2-D7/A2-A4
00022A04 <AmiBlitz3.ab3@5192>   JSR JL_0_BF6A
00022A0A <AmiBlitz3.ab3@5193>   CMP.l #$E,D3
00022A0E <AmiBlitz3.ab3@5194>    BCC.w interr4
00022A12 <AmiBlitz3.ab3@5195>   MOVE.w #$7000,D1
00022A14 <AmiBlitz3.ab3@5196>   OR.w D3,D1
00022A1A <AmiBlitz3.ab3@5197>   JSR writeword
00022A1E <AmiBlitz3.ab3@5198>   MOVE.w #$C101,D1
00022A24 <AmiBlitz3.ab3@5199> JMP Atokejsr                                               ;clear the interupt
00022A26 <AmiBlitz3.ab3@5202> inerr:       Ds.w 1                                        ;flag - in error trap mode
00022A2A <AmiBlitz3.ab3@5203> errjmp:      Ds.l 1                                        ;where err jump is
00022A2E <AmiBlitz3.ab3@5204> errcode:     Ds.l 1
00022A32 <AmiBlitz3.ab3@5208>   MOVE.W  #$D202,D1
00022A38 <AmiBlitz3.ab3@5209> JMP Atokejsr                                               ;BRA.W Atokejsr
00022A3C <AmiBlitz3.ab3@5213>   MOVE.w inerr(PC),D1
00022A40 <AmiBlitz3.ab3@5214>    BEQ.w errerr3
00022A46 <AmiBlitz3.ab3@5215>   CLR.w inerr
00022A4C <AmiBlitz3.ab3@5216>   MOVE.w dontwrite,D1
00022A50 <AmiBlitz3.ab3@5217>    BNE.w doendseterr__skip
00022A54 <AmiBlitz3.ab3@5218>   MOVEA.l errjmp(PC),A0
00022A5A <AmiBlitz3.ab3@5219>   MOVE.l destpointer,(A0)
00022A5E <AmiBlitz3.ab3@5222> BRA.w get1bytemain
00022A62 <AmiBlitz3.ab3@5226>   MOVE.w #$D205,D1
00022A68 <AmiBlitz3.ab3@5227> JMP Atokejsr
00022A6E <AmiBlitz3.ab3@5231>   MOVE.w proceduremode,D1
00022A72 <AmiBlitz3.ab3@5232>    BNE.w errerr1
00022A76 <AmiBlitz3.ab3@5233>   MOVE.w inerr(PC),D1
00022A7A <AmiBlitz3.ab3@5234>    BNE.w errerr2
00022A80 <AmiBlitz3.ab3@5235>   LEA inerr,a0
00022A82 <AmiBlitz3.ab3@5236>   NOT.w (a0)                                               ;reass
00022A86 <AmiBlitz3.ab3@5237>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00022A8C <AmiBlitz3.ab3@5238>   JSR writeword
00022A96 <AmiBlitz3.ab3@5239>   MOVE.l destpointer,errcode
00022A9A <AmiBlitz3.ab3@5240>   BSR.w addoff
00022A9E <AmiBlitz3.ab3@5241>   BSR.w writelong
00022AA2 <AmiBlitz3.ab3@5242>   MOVE.w #$D201,D1
00022AA8 <AmiBlitz3.ab3@5243>   JSR Atokejsr
00022AAC <AmiBlitz3.ab3@5244>   MOVE.w #$4EF9,D1                                         ;JMP
00022AB0 <AmiBlitz3.ab3@5245>   BSR.w writeword
00022ABA <AmiBlitz3.ab3@5246>   MOVE.l destpointer,errjmp
00022ABE <AmiBlitz3.ab3@5247>   BSR.w addoff
00022AC2 <AmiBlitz3.ab3@5248>   BSR.w writelong
00022AC8 <AmiBlitz3.ab3@5249>   MOVE.w dontwrite,D1
00022ACC <AmiBlitz3.ab3@5250>    BNE.w do_SetErr__skip
00022AD0 <AmiBlitz3.ab3@5251>   MOVEA.l errcode(PC),A0
00022AD6 <AmiBlitz3.ab3@5252>   MOVE.l destpointer,(A0)
00022AD8 <AmiBlitz3.ab3@5255> RTS
00022ADC <AmiBlitz3.ab3@5258> intlineat:  Ds.l 1
00022ADE <AmiBlitz3.ab3@5262>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00022AE2 <AmiBlitz3.ab3@5263>   BSR.w errchx
00022AE8 <AmiBlitz3.ab3@5264>   MOVE.w D1,intstring
00022AF2 <AmiBlitz3.ab3@5265>   MOVE.l linenumat,intlineat
00022AF8 <AmiBlitz3.ab3@5266>   JSR JL_0_BF6A                                           ;get constant - int level
00022AFE <AmiBlitz3.ab3@5267>   CMP.l #$E,D3
00022B02 <AmiBlitz3.ab3@5268>    BCC.w interr4
00022B08 <AmiBlitz3.ab3@5269>   ST intsused
00022B0E <AmiBlitz3.ab3@5270>   MOVE.w D3,intlevel
00022B12 <AmiBlitz3.ab3@5271>   MOVE.w #$7000,D1
00022B14 <AmiBlitz3.ab3@5272>   OR.w D3,D1                                              
00022B18 <AmiBlitz3.ab3@5273>   BSR.w writeword                                         ;moveq #x,d0
00022B1C <AmiBlitz3.ab3@5274>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00022B20 <AmiBlitz3.ab3@5275>   BSR.w writeword
00022B24 <AmiBlitz3.ab3@5276>   BSR.w addoff
00022B2A <AmiBlitz3.ab3@5277>   MOVE.l destpointer,-(A7)
00022B2E <AmiBlitz3.ab3@5278>   BSR.w writelong
00022B32 <AmiBlitz3.ab3@5279>   MOVE.w #$C100,D1
00022B38 <AmiBlitz3.ab3@5280>   JSR Atokejsr
00022B3C <AmiBlitz3.ab3@5281>   MOVE.w #$4EF9,D1                                        ;jmp
00022B40 <AmiBlitz3.ab3@5282>   BSR.w writeword
00022B44 <AmiBlitz3.ab3@5283>   BSR.w addoff
00022B4E <AmiBlitz3.ab3@5284>   MOVE.l destpointer,intjmpat
00022B52 <AmiBlitz3.ab3@5285>   BSR.w writelong
00022B54 <AmiBlitz3.ab3@5286>   MOVEA.l (A7)+,A0
00022B5A <AmiBlitz3.ab3@5287>   MOVE.w dontwrite,D1
00022B5E <AmiBlitz3.ab3@5288>   BNE.w do_SetInt__dontpoke
00022B64 <AmiBlitz3.ab3@5289>   MOVE.l destpointer,(A0)
00022B68 <AmiBlitz3.ab3@5292>   MOVE.l intstart0(PC),D1
00022B6C <AmiBlitz3.ab3@5293>   BSR.w writelong
00022B72 <AmiBlitz3.ab3@5294>   TST.b debugmode
00022B76 <AmiBlitz3.ab3@5295>    BEQ.w do_SetInt__norerr
00022B78 <AmiBlitz3.ab3@5299>   MOVEQ.l #$02,D1
00022B7C <AmiBlitz3.ab3@5300>   BSR.w writetrap
00022B80 <AmiBlitz3.ab3@5301>   BSR.w addoff
00022B8A <AmiBlitz3.ab3@5302>   MOVE.l destpointer,intcleanat
00022B8E <AmiBlitz3.ab3@5303>   BSR.w writelong
00022B94 <AmiBlitz3.ab3@5304>   MOVE.w intlevel,D1
00022B98 <AmiBlitz3.ab3@5305>   BSR.w writeword
00022B9C <AmiBlitz3.ab3@5306>   MOVE.w #$C30B,D1                                         ;disable stack checks
00022BA2 <AmiBlitz3.ab3@5307>   JSR Atokejsr
00022BA6 <AmiBlitz3.ab3@5310>   MOVE.w #$FED3,D1
00022BAA <AmiBlitz3.ab3@5311>   BSR.w uselib
00022BAE <AmiBlitz3.ab3@5312>   MOVE.w #$C102,D1
00022BB4 <AmiBlitz3.ab3@5313>   JSR Atokejsr
00022BBC <AmiBlitz3.ab3@5314>   MOVE.w #-1,lasta6
00022BC6 <AmiBlitz3.ab3@5315>   MOVE.l linenumat,intline
00022BC8 <AmiBlitz3.ab3@5316> RTS
00022BCA <AmiBlitz3.ab3@5320>             Ds.w 1                                         ;??looks like obsolved data??
00022BCE <AmiBlitz3.ab3@5322> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00022BD2 <AmiBlitz3.ab3@5324> intjmpat:   Ds.l 1
00022BD6 <AmiBlitz3.ab3@5325> intline:    Ds.l 1
00022BD8 <AmiBlitz3.ab3@5326> intstring:  Ds.w 1                                         ;flag 0 = no setint
00022BDA <AmiBlitz3.ab3@5329> intlevel:   Ds.w 1
00022BDE <AmiBlitz3.ab3@5330> intcleanat: Ds.l 1
00022BE2 <AmiBlitz3.ab3@5331> ret15add:   Ds.l 1
00022BE4 <AmiBlitz3.ab3@5332> ret15cc:    Ds.w 1
00022BEC <AmiBlitz3.ab3@5336>   ADDI.l #$12,$2(A7)
00022BF4 <AmiBlitz3.ab3@5337>   MOVE.l $2(A7),ret15add
00022BFA <AmiBlitz3.ab3@5338>   MOVE.w (A7),ret15cc
00022C02 <AmiBlitz3.ab3@5339>   MOVE.l #directdo,$2(A7)
00022C04 <AmiBlitz3.ab3@5340> RTE
00022C08 <AmiBlitz3.ab3@5349>   MOVE.l ret15add(PC),-(A7)
00022C0C <AmiBlitz3.ab3@5350>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00022C10 <AmiBlitz3.ab3@5351>   MOVEM.l D0-D7/A0-A6,-(A7)
00022C1A <AmiBlitz3.ab3@5352>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00022C24 <AmiBlitz3.ab3@5353>   MOVE.l destbufferstart,trap15temp2
00022C2E <AmiBlitz3.ab3@5354>   MOVE.l libend,templibend
00022C38 <AmiBlitz3.ab3@5355>   MOVE.l data1start,tempdata1start
00022C3E <AmiBlitz3.ab3@5356>   CLR.l hunkoffsetcounter
00022C44 <AmiBlitz3.ab3@5358>   MOVE.l directbuffer,a0
00022C4A <AmiBlitz3.ab3@5362>   MOVE.l a0,destbufferstart
00022C50 <AmiBlitz3.ab3@5363>   ADD.l #3900,a0
00022C56 <AmiBlitz3.ab3@5364>   MOVE.l a0,destbufferend
00022C5C <AmiBlitz3.ab3@5365>   TST.b exdebug
00022C60 <AmiBlitz3.ab3@5366>   BEQ 'l1
00022C66 <AmiBlitz3.ab3@5367>   MOVE.l a0,libend
00022C6C <AmiBlitz3.ab3@5368>   ADD.l #4000,a0
00022C72 <AmiBlitz3.ab3@5369>   MOVE.l a0,data1start
00022C7C <AmiBlitz3.ab3@5372>   MOVE.l #dircont,errcont
00022C82 <AmiBlitz3.ab3@5373> 
00022C88 <AmiBlitz3.ab3@5374>   MOVE.l A7,errstack
00022C90 <AmiBlitz3.ab3@5375>   MOVE.w #$FFFF,dirmode
00022C94 <AmiBlitz3.ab3@5377>     MOVEA.l ret15add(PC),A1
00022C9A <AmiBlitz3.ab3@5378>     MOVE.w -(A1),blitzmode
00022C9C <AmiBlitz3.ab3@5379>     CLR.l -(A1)
00022CA2 <AmiBlitz3.ab3@5380>     MOVE.l -(A1),firstglob
00022CA8 <AmiBlitz3.ab3@5381>     MOVE.l -(A1),firstlocal
00022CAE <AmiBlitz3.ab3@5383>   CLR.w proceduremode
00022CB4 <AmiBlitz3.ab3@5384>   MOVE.l firstglob,D0
00022CBA <AmiBlitz3.ab3@5385>   OR.l firstlocal,D0
00022CBE <AmiBlitz3.ab3@5386>   BEQ.b directdo__skip
00022CC4 <AmiBlitz3.ab3@5387>   NOT.w proceduremode
00022CC6 <AmiBlitz3.ab3@5390>   MOVEA.l -(A1),A0                                         ;address of string
00022CC8 <AmiBlitz3.ab3@5394>   MOVE.l A0,-(A7)
00022D06 <AmiBlitz3.ab3@5397>   !ComData_GetL{comFunc_DebugTrap,A1}
00022D08 <AmiBlitz3.ab3@5399>   JSR (A1)                                                 ;tokenise line.....
00022D0A <AmiBlitz3.ab3@5401>   MOVEA.l (A7)+,A5
00022D14 <AmiBlitz3.ab3@5402>   MOVE.l directbuffer,destpointer
00022D1A <AmiBlitz3.ab3@5403>   TST.b exdebug
00022D1E <AmiBlitz3.ab3@5404>   BEQ 'noexdebug
00022D20 <AmiBlitz3.ab3@5405>   MOVE.l a5,a0
00022D26 <AmiBlitz3.ab3@5406>   MOVE.l #200,d0
00022D2C <AmiBlitz3.ab3@5409>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00022D30 <AmiBlitz3.ab3@5410>   DBF d0,'l1
00022D36 <AmiBlitz3.ab3@5415>   MOVE.l destpointer,a0
00022D3A <AmiBlitz3.ab3@5416>   MOVE.w #$207c,(a0)+
00022D3C <AmiBlitz3.ab3@5417>   MOVE.l a5,d0
00022D42 <AmiBlitz3.ab3@5418>   ADD.l #$206,d0                                           ;constant from debuglib
00022D44 <AmiBlitz3.ab3@5419>   MOVE.l d0,(a0)+
00022D4A <AmiBlitz3.ab3@5420>   MOVE.l a0,destpointer
00022D4C <AmiBlitz3.ab3@5421>   MOVE.l a5,a0
00022D50 <AmiBlitz3.ab3@5422>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00022D56 <AmiBlitz3.ab3@5423>   MOVE.l #"$520",(a0)+
00022D5A <AmiBlitz3.ab3@5424>   MOVE.w #"4:",(a0)+
00022D60 <AmiBlitz3.ab3@5427>   CLR.w dontwrite
00022D68 <AmiBlitz3.ab3@5428>   MOVE.w #$FFFF,lasta6
00022D6C <AmiBlitz3.ab3@5429>   BSR.w compile_line                                        ;.....compile it
00022D72 <AmiBlitz3.ab3@5430>   TST.b exdebug
00022D76 <AmiBlitz3.ab3@5431>   BEQ 'noexdebug2
00022D7C <AmiBlitz3.ab3@5432>   JSR JL_0_6C76
00022D82 <AmiBlitz3.ab3@5435>   CLR.w proceduremode
00022D86 <AmiBlitz3.ab3@5436>   BSR.w errchx
00022D8A <AmiBlitz3.ab3@5437>   MOVE.w #$4EF9,D1
00022D8E <AmiBlitz3.ab3@5438>   BSR.w writeword                                          ;JMP
00022D92 <AmiBlitz3.ab3@5439>   MOVE.l ret15add(PC),D1
00022D96 <AmiBlitz3.ab3@5440>   BSR.w writelong                                          ;jmp to done
00022D9C <AmiBlitz3.ab3@5441>   MOVE.w dontwrite,D0
00022DA0 <AmiBlitz3.ab3@5442>    BNE.w nodirmem
00022DA8 <AmiBlitz3.ab3@5443>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00022DAE <AmiBlitz3.ab3@5446>   CLR.w dirmode
00022DB4 <AmiBlitz3.ab3@5447>   MOVE.w ret15cc(PC),$3C(A7)
00022DBE <AmiBlitz3.ab3@5448>   MOVE.l trap15temp,destbufferend
00022DC8 <AmiBlitz3.ab3@5449>   MOVE.l trap15temp2,destbufferstart
00022DD2 <AmiBlitz3.ab3@5450>   MOVE.l tempdata1start,data1start
00022DDC <AmiBlitz3.ab3@5451>   MOVE.l templibend,libend
00022DE0 <AmiBlitz3.ab3@5452>   MOVEM.l (A7)+,D0-D7/A0-A6
00022DE4 <AmiBlitz3.ab3@5453>   BSR.w Aclearcache                                        ;selden used
00022DE6 <AmiBlitz3.ab3@5454> RTR
00022DEA <AmiBlitz3.ab3@5457>   MOVEA.l ret15add(PC),A0
00022DEC <AmiBlitz3.ab3@5458>   SUBQ.w #2,A0
00022DEE <AmiBlitz3.ab3@5459>   MOVE.l D0,-(A0)
00022DF2 <AmiBlitz3.ab3@5460> BRA.w direxit
00022DF6 <AmiBlitz3.ab3@5464>   MOVE.w $6(A3),D1
00022DFA <AmiBlitz3.ab3@5465>   BSR.w uselib                                             ;get lib for base address
00022DFE <AmiBlitz3.ab3@5466>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00022E00 <AmiBlitz3.ab3@5467>   ADDQ.w #8,A3
00022E02 <AmiBlitz3.ab3@5468>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00022E04 <AmiBlitz3.ab3@5469>   MOVE.l A3,-(A7)
00022E06 <AmiBlitz3.ab3@5473>   MOVEQ.l #$00,D3
00022E0C <AmiBlitz3.ab3@5474>   JSR checka4a5
00022E0E <AmiBlitz3.ab3@5476>   MOVE.b (A3)+,D1
00022E12 <AmiBlitz3.ab3@5477>    BMI.w stamigalib__done
00022E14 <AmiBlitz3.ab3@5478>   MOVEQ.l #$03,D2
00022E16 <AmiBlitz3.ab3@5479>   ADDQ.w #1,D3
00022E1A <AmiBlitz3.ab3@5480>   MOVEM.l D3/A3,-(A7)
00022E20 <AmiBlitz3.ab3@5481>   MOVE.b funcparloop,-(a7)
00022E28 <AmiBlitz3.ab3@5482>   MOVE.b #0,funcparloop
00022E2E <AmiBlitz3.ab3@5483>   MOVE.l leftsidetype,-(a7)
00022E34 <AmiBlitz3.ab3@5484>   MOVE.l rightsidetype,-(a7)
00022E3A <AmiBlitz3.ab3@5485>   CLR.l leftsidetype
00022E40 <AmiBlitz3.ab3@5486>   CLR.l rightsidetype
00022E46 <AmiBlitz3.ab3@5487>   MOVE.b blitzparloop,-(a7)
00022E4E <AmiBlitz3.ab3@5488>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00022E54 <AmiBlitz3.ab3@5489>   JSR peval
00022E5A <AmiBlitz3.ab3@5490>   MOVE.b (a7)+,blitzparloop
00022E60 <AmiBlitz3.ab3@5491>   MOVE.l (a7)+,rightsidetype
00022E66 <AmiBlitz3.ab3@5492>   MOVE.l (a7)+,leftsidetype
00022E6C <AmiBlitz3.ab3@5493>   MOVE.b (a7)+,funcparloop
00022E70 <AmiBlitz3.ab3@5494>   MOVEM.l (A7)+,D3/A3
00022E74 <AmiBlitz3.ab3@5495>   CMP.w #$2C,D0
00022E78 <AmiBlitz3.ab3@5496>    BEQ.w stamigalib__loop
00022E7A <AmiBlitz3.ab3@5497>   TST.b (A3)
00022E7E <AmiBlitz3.ab3@5498>    BPL.w syntaxerr
00022E80 <AmiBlitz3.ab3@5501>   MOVEA.l (A7)+,A3
00022E82 <AmiBlitz3.ab3@5502>   SUBQ.w #1,D3
00022E86 <AmiBlitz3.ab3@5503>    BPL.w stamigalib__toend
00022E8A <AmiBlitz3.ab3@5504>    BSR.w get1bytemain                                      ;no pars - get :
00022E8E <AmiBlitz3.ab3@5505> BRA.w stamigalib__nopars
00022E90 <AmiBlitz3.ab3@5508>   TST.b (A3)+                                              ;go to end of params
00022E94 <AmiBlitz3.ab3@5509>    BPL.w stamigalib__toend
00022E96 <AmiBlitz3.ab3@5510>   SUBQ.w #1,A3
00022E98 <AmiBlitz3.ab3@5513>    MOVEQ.l #$00,D1
00022E9A <AmiBlitz3.ab3@5514>    MOVE.b -(A3),D1
00022E9E <AmiBlitz3.ab3@5515>    BTST #$4,D1
00022EA2 <AmiBlitz3.ab3@5516>     BNE.w stamigalib__addreg
00022EA4 <AmiBlitz3.ab3@5517>    LSL.w #8,D1
00022EA6 <AmiBlitz3.ab3@5518>    LSL.w #1,D1
00022EAA <AmiBlitz3.ab3@5519>    ORI.w #$201F,D1
00022EAE <AmiBlitz3.ab3@5520>  BRA.w stamigalib__gotit
00022EB2 <AmiBlitz3.ab3@5523>    ANDI.w #$7,D1
00022EB4 <AmiBlitz3.ab3@5524>    LSL.w #8,D1
00022EB6 <AmiBlitz3.ab3@5525>    LSL.w #1,D1
00022EBA <AmiBlitz3.ab3@5526>    ORI.w #$205F,D1
00022EBE <AmiBlitz3.ab3@5529>     BSR.w writeword
00022EC2 <AmiBlitz3.ab3@5530>   DBF D3,stamigalib__loop2
00022EC8 <AmiBlitz3.ab3@5533>   MOVE.w (A7)+,libjsr+2
00022ECE <AmiBlitz3.ab3@5534>   MOVE.w (A7)+,libbase+2
00022ED4 <AmiBlitz3.ab3@5535>   MOVE.l libbase,D1
00022ED8 <AmiBlitz3.ab3@5536>    BSR.w writelong
00022EDE <AmiBlitz3.ab3@5537>   MOVE.l libjsr,D1
00022EE4 <AmiBlitz3.ab3@5538>   JSR writelong
00022EEA <AmiBlitz3.ab3@5539>   JSR restorea4a5
00022EEC <AmiBlitz3.ab3@5540>   RTS
00022EF2 <AmiBlitz3.ab3@5543>   MOVE.l data1,D4
00022EF8 <AmiBlitz3.ab3@5544>   SUB.l data1start,D4
00022EFE <AmiBlitz3.ab3@5545>   ADD.l #10000,d4
00022F04 <AmiBlitz3.ab3@5546>   MOVE.l libend,D3
00022F0A <AmiBlitz3.ab3@5547>   SUB.l destbufferend,D3
00022F10 <AmiBlitz3.ab3@5548>   ADD.l #40000,d3
00022F16 <AmiBlitz3.ab3@5549>   MOVE.l bigpc,D2
00022F1C <AmiBlitz3.ab3@5550>   SUB.l destbufferstart,D2
00022F22 <AmiBlitz3.ab3@5551>   ADD.l #20000,d2
00022F28 <AmiBlitz3.ab3@5552>   MOVE.l databuffer,D5
00022F2E <AmiBlitz3.ab3@5553>   ADD.l #10000,D5
00022F32 <AmiBlitz3.ab3@5554> BRA newallox
00022F38 <AmiBlitz3.ab3@5558>   MOVE.l objectbuffer,D2
00022F3A <AmiBlitz3.ab3@5559>   LSR.l #1,D2
00022F40 <AmiBlitz3.ab3@5560>   ADD.l objectbuffer,D2
00022F46 <AmiBlitz3.ab3@5561>   MOVE.l libsbuffer,D3
00022F48 <AmiBlitz3.ab3@5562>   LSR.l #1,D3
00022F4E <AmiBlitz3.ab3@5563>   ADD.l libsbuffer,D3
00022F54 <AmiBlitz3.ab3@5564>   MOVE.l systembuffer,D4
00022F56 <AmiBlitz3.ab3@5565>   LSR.l #1,D4
00022F5C <AmiBlitz3.ab3@5566>   ADD.l systembuffer,D4
00022F62 <AmiBlitz3.ab3@5567>   MOVE.l databuffer,D5
00022F64 <AmiBlitz3.ab3@5568>   LSR.l #1,D5
00022F6A <AmiBlitz3.ab3@5569>   ADD.l databuffer,D5
00022F6E <AmiBlitz3.ab3@5570> BRA.w newallox
00022F74 <AmiBlitz3.ab3@5574>   MOVE.l bigpc,D2
00022F7A <AmiBlitz3.ab3@5575>   SUB.l destbufferstart,D2                                     ;size of object buffer
00022F80 <AmiBlitz3.ab3@5576>   SUB.l savefuncspace,d2
00022F86 <AmiBlitz3.ab3@5578>   TST.w debugversion
00022F8A <AmiBlitz3.ab3@5579>    BNE.b alloxadj__skip
00022F90 <AmiBlitz3.ab3@5580>   ADDI.l #$800,D2
00022F96 <AmiBlitz3.ab3@5583>   MOVE.l libend,D3
00022F9C <AmiBlitz3.ab3@5584>   SUB.l destbufferend,D3
00022FA2 <AmiBlitz3.ab3@5586>   MOVE.l data1,D4
00022FA8 <AmiBlitz3.ab3@5587>   SUB.l data1start,D4
00022FAE <AmiBlitz3.ab3@5589>   MOVE.l data2,D5
00022FB4 <AmiBlitz3.ab3@5590>   SUB.l data2at,D5
00022FBA <AmiBlitz3.ab3@5592>   CLR.l morememadd
00022FBE <AmiBlitz3.ab3@5595>   BSR.w makeallox
00022FC2 <AmiBlitz3.ab3@5596>   BNE.w newallox__done
00022FC6 <AmiBlitz3.ab3@5597> BRA.w init_buffers
00022FC8 <AmiBlitz3.ab3@5600> RTS
00022FCE <AmiBlitz3.ab3@5604>   MOVEA.l _execbase,A6
00022FD4 <AmiBlitz3.ab3@5605>   MOVE.l objlen,D0
00022FD8 <AmiBlitz3.ab3@5606>   BEQ.w freeallox__skip
00022FDE <AmiBlitz3.ab3@5607>   CLR.l objlen
00022FE4 <AmiBlitz3.ab3@5608>   MOVEA.l destbufferstart,A1
00022FEA <AmiBlitz3.ab3@5609>   MOVE.l mempool,a0
00022FEE <AmiBlitz3.ab3@5610> JMP _FreeVec(A6)
00022FF0 <AmiBlitz3.ab3@5613> RTS
00022FF6 <AmiBlitz3.ab3@5617>   MOVE.l objectbuffer,D2
00022FFC <AmiBlitz3.ab3@5618>   MOVE.l libsbuffer,D3
00023002 <AmiBlitz3.ab3@5619>   MOVE.l systembuffer,D4
00023008 <AmiBlitz3.ab3@5620>   MOVE.l databuffer,D5
00023010 <AmiBlitz3.ab3@5623>   MOVE.w #$FFFF,anyerrs
00023014 <AmiBlitz3.ab3@5624>   BSR.w freeallox
00023016 <AmiBlitz3.ab3@5628>   ADDQ.l #1,D2
0002301A <AmiBlitz3.ab3@5629>   BCLR #$0,D2
0002301C <AmiBlitz3.ab3@5630>   ADDQ.l #1,D3
00023020 <AmiBlitz3.ab3@5631>   BCLR #$0,D3
00023022 <AmiBlitz3.ab3@5632>   ADDQ.l #1,D4
00023026 <AmiBlitz3.ab3@5633>   BCLR #$0,D4
00023028 <AmiBlitz3.ab3@5634>   TST.l d5
0002302C <AmiBlitz3.ab3@5635>   BNE 'l1
0002302E <AmiBlitz3.ab3@5638>   ADDQ.l #1,D5
00023032 <AmiBlitz3.ab3@5639>   BCLR #$0,D5
00023034 <AmiBlitz3.ab3@5640>   MOVE.l D2,D0
00023036 <AmiBlitz3.ab3@5641>   ADD.l D3,D0
00023038 <AmiBlitz3.ab3@5642>   ADD.l D4,D0
0002303A <AmiBlitz3.ab3@5643>   ADD.l D5,D0
00023040 <AmiBlitz3.ab3@5644>   ADD.l #moremem,d0
00023042 <AmiBlitz3.ab3@5645>   MOVE.l D0,D6
00023048 <AmiBlitz3.ab3@5646>   MOVE.l #MemfPublic_MemfClear,D1
0002304E <AmiBlitz3.ab3@5647>   MOVE.l mempool,a0
00023054 <AmiBlitz3.ab3@5648>   MOVEA.l _execbase,A6
00023058 <AmiBlitz3.ab3@5649>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
0002305A <AmiBlitz3.ab3@5651>   TST.l D0
0002305E <AmiBlitz3.ab3@5652>   BEQ.w exit_initbuffers
00023064 <AmiBlitz3.ab3@5653>   MOVE.l D6,objlen
0002306A <AmiBlitz3.ab3@5654>   MOVE.l D2,objectbuffer
00023070 <AmiBlitz3.ab3@5655>   MOVE.l D3,libsbuffer
00023076 <AmiBlitz3.ab3@5656>   MOVE.l D4,systembuffer
0002307C <AmiBlitz3.ab3@5657>   MOVE.l D5,databuffer
00023082 <AmiBlitz3.ab3@5658>   MOVE.l D0,destbufferstart
000230B6 <AmiBlitz3.ab3@5661>   !ComData_SetL{comPtr_DestBufferStart,D0}
000230B8 <AmiBlitz3.ab3@5662>   ADD.l D2,D0
000230BE <AmiBlitz3.ab3@5663>   MOVE.l D0,destbufferend
000230C0 <AmiBlitz3.ab3@5664>   ADD.l D3,D0
000230C6 <AmiBlitz3.ab3@5665>   MOVE.l D0,data1start
000230C8 <AmiBlitz3.ab3@5666>   ADD.l D4,D0
000230CE <AmiBlitz3.ab3@5667>   MOVE.l D0,data2at
000230D0 <AmiBlitz3.ab3@5668>   ADD.l D5,D0
000230D6 <AmiBlitz3.ab3@5669>   MOVE.l D0,allat
000230D8 <AmiBlitz3.ab3@5672> RTS
000230DC <AmiBlitz3.ab3@5676>   Dc.b $00,$00,$00,$01                                     ;         1
000230E0 <AmiBlitz3.ab3@5677>   Dc.b $00,$00,$00,$0A                                     ;        10
000230E4 <AmiBlitz3.ab3@5678>   Dc.b $00,$00,$00,$64                                     ;       100
000230E8 <AmiBlitz3.ab3@5679>   Dc.b $00,$00,$03,$E8                                     ;      1000
000230EC <AmiBlitz3.ab3@5680>   Dc.b $00,$00,$27,$10                                     ;     10000
000230F0 <AmiBlitz3.ab3@5681>   Dc.b $00,$01,$86,$A0                                     ;    100000
000230F4 <AmiBlitz3.ab3@5682>   Dc.b $00,$0F,$42,$40                                     ;   1000000
000230F8 <AmiBlitz3.ab3@5683>   Dc.b $00,$98,$96,$80                                     ;  10000000
000230FC <AmiBlitz3.ab3@5684>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023100 <AmiBlitz3.ab3@5685>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023102 <AmiBlitz3.ab3@5689>   MOVEQ.l #$00,D1                                          ;no zero printed
00023104 <AmiBlitz3.ab3@5690>   MOVEQ.l #$24,D3                                          ; "$"
00023106 <AmiBlitz3.ab3@5693>   MOVEQ.l #$30,D4                                          ; "0"
0002310A <AmiBlitz3.ab3@5696>     CMP.l divisors(PC,D3.W),D2
0002310E <AmiBlitz3.ab3@5697>     BCS.w makelong__skip
00023112 <AmiBlitz3.ab3@5698>     SUB.l divisors(PC,D3.W),D2
00023114 <AmiBlitz3.ab3@5699>     ADDQ.w #1,D4
00023118 <AmiBlitz3.ab3@5700> BRA.w makelong__loop2
0002311C <AmiBlitz3.ab3@5703>   CMP.b #"0",D4
00023120 <AmiBlitz3.ab3@5704>   BNE.w makelong__doit
00023122 <AmiBlitz3.ab3@5705>   TST.w D1
00023126 <AmiBlitz3.ab3@5706>   BEQ.w makelong__skip2
00023128 <AmiBlitz3.ab3@5709>   MOVE.b D4,(A0)+
0002312A <AmiBlitz3.ab3@5710>   MOVEQ.l #$01,D1
0002312C <AmiBlitz3.ab3@5713>   SUBQ.w #4,D3
00023130 <AmiBlitz3.ab3@5714>   BPL.w makelong__loop
00023132 <AmiBlitz3.ab3@5715>   TST.w D1
00023136 <AmiBlitz3.ab3@5716>   BNE.w makelong__skip3
0002313A <AmiBlitz3.ab3@5717>   MOVE.b #"0",(A0)+
0002313C <AmiBlitz3.ab3@5720>   CLR.b (A0)
0002313E <AmiBlitz3.ab3@5721> RTS
0002315E <AmiBlitz3.ab3@5724> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002321E <AmiBlitz3.ab3@5725> str_residentpath:       Ds.l 48                                                ;respath org source
000232DE <AmiBlitz3.ab3@5726> str_residentname:       Ds.l 48                                                ;resname org source
000232E4 <AmiBlitz3.ab3@5730>   MOVE.l macrobase,D0
000232E8 <AmiBlitz3.ab3@5731>    BNE.w create_residentfile
000232EE <AmiBlitz3.ab3@5732>   MOVE.l newtype_string,D0
000232F2 <AmiBlitz3.ab3@5733>    BNE.w create_residentfile
000232F8 <AmiBlitz3.ab3@5734>   MOVEA.l labelbase,A2
000232FC <AmiBlitz3.ab3@5737>     CMPA.w #$0,A2
00023300 <AmiBlitz3.ab3@5738>      BEQ.w menu_createresidentfile__err
00023308 <AmiBlitz3.ab3@5739>     CMPI.l #$1,$4(A2)
0002330C <AmiBlitz3.ab3@5740>      BEQ.w create_residentfile
0002330E <AmiBlitz3.ab3@5741>     MOVEA.l (A2),A2
00023312 <AmiBlitz3.ab3@5742> BRA.w menu_createresidentfile__loop
0002333C <AmiBlitz3.ab3@5745>   !basic
0002339E <AmiBlitz3.ab3@5746> 
000233BC <AmiBlitz3.ab3@5747>   !asm
000233BE <AmiBlitz3.ab3@5748> RTS
000233FC <AmiBlitz3.ab3@5754>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023402 <AmiBlitz3.ab3@5755>   LEA str_residentrequester,A2
00023408 <AmiBlitz3.ab3@5756>   LEA str_residentpath,A0
0002340E <AmiBlitz3.ab3@5757>   LEA str_residentname,A1
00023438 <AmiBlitz3.ab3@5758>   !basic
00023470 <AmiBlitz3.ab3@5759>     Poke$ ?str_residentpath,my_residentsdir$
0002349C <AmiBlitz3.ab3@5760>     Poke$ ?str_residentname,".res"
000234BA <AmiBlitz3.ab3@5761>   !asm
000234BC <AmiBlitz3.ab3@5763>   JSR (A3)                                                 ;open ped filerequest
000234C0 <AmiBlitz3.ab3@5765>   BEQ.w menu_createresidentfile__err
000234C2 <AmiBlitz3.ab3@5768>   MOVE.l D0,D1
000234C8 <AmiBlitz3.ab3@5769>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000234CC <AmiBlitz3.ab3@5770>   MOVEA.l _dosbase(PC),A6
000234D0 <AmiBlitz3.ab3@5771>   JSR _Open(A6)
000234D2 <AmiBlitz3.ab3@5772>   MOVE.l D0,D7                                             ;handle
000234D6 <AmiBlitz3.ab3@5773>   BEQ.w menu_createresidentfile__err
000234DA <AmiBlitz3.ab3@5774>   MOVEM.l d2-d7/a0-a6,-(a7)
000234E0 <AmiBlitz3.ab3@5775>   LEA devo,a0
000234E6 <AmiBlitz3.ab3@5776>   LEA ptr_parameterstore,a1
000234E8 <AmiBlitz3.ab3@5779>     MOVE.b (a0)+,(a1)+
000234EC <AmiBlitz3.ab3@5780>   BNE 'l1
000234EE <AmiBlitz3.ab3@5781>   MOVEQ #13,d2
000234F4 <AmiBlitz3.ab3@5782>   JSR findlabel2
000234F8 <AmiBlitz3.ab3@5783>   BNE 'd
000234FC <AmiBlitz3.ab3@5784>   TST.l 8(a2)
00023500 <AmiBlitz3.ab3@5785>   BEQ 'd2
0002352A <AmiBlitz3.ab3@5786>   !basic
0002358C <AmiBlitz3.ab3@5787>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000235AA <AmiBlitz3.ab3@5788>   !asm
000235AE <AmiBlitz3.ab3@5789>   MOVEM.l (a7)+,d2-d7/a0-a6
000235B2 <AmiBlitz3.ab3@5790>   MOVEA.l _dosbase(PC),A6
000235B4 <AmiBlitz3.ab3@5791>   MOVE.l d7,d1
000235B8 <AmiBlitz3.ab3@5792>   JSR _Close(a6)
000235BC <AmiBlitz3.ab3@5793> BRA menu_createresidentfile__err
000235C0 <AmiBlitz3.ab3@5797>   MOVEM.l (a7)+,d2-d7/a0-a6
000235C4 <AmiBlitz3.ab3@5798>   BSR.w call_setpointerbusy
000235C8 <AmiBlitz3.ab3@5800>   BSR.w AJL_0_7962
000235CA <AmiBlitz3.ab3@5801>   MOVE.l D7,D1
000235D0 <AmiBlitz3.ab3@5802>   MOVE.l #tsthead,D2                                       ;header
000235D2 <AmiBlitz3.ab3@5803>   MOVEQ.l #$20,D3
000235D6 <AmiBlitz3.ab3@5804>   MOVEA.l _dosbase(PC),A6
000235DA <AmiBlitz3.ab3@5805>   JSR _Write(A6)
000235DC <AmiBlitz3.ab3@5806>   MOVEQ.l #$00,D6                                          ;offset from start of file!
000235E0 <AmiBlitz3.ab3@5807>   BSR.w restypes
000235E4 <AmiBlitz3.ab3@5808>   BSR.w resmacs
000235E8 <AmiBlitz3.ab3@5809>   BSR.w resconsts
000235EA <AmiBlitz3.ab3@5810>   MOVE.l D6,D3
000235EC <AmiBlitz3.ab3@5811>   ADDQ.l #3,D3
000235F2 <AmiBlitz3.ab3@5812>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
000235F4 <AmiBlitz3.ab3@5813>   MOVE.l D3,-(A7)
000235F6 <AmiBlitz3.ab3@5814>   SUB.l D6,D3
000235FA <AmiBlitz3.ab3@5815>   BEQ.w menu_createresidentfile__noalign
00023600 <AmiBlitz3.ab3@5816>   MOVE.l #writelist,D2
00023602 <AmiBlitz3.ab3@5817>   MOVE.l D7,D1
00023608 <AmiBlitz3.ab3@5818>   MOVEA.l _dosbase,A6
0002360C <AmiBlitz3.ab3@5819>   JSR _Write(A6)
00023616 <AmiBlitz3.ab3@5822>    MOVE.l hunkoffsetcounter,tstsize3
0002361A <AmiBlitz3.ab3@5823>    BEQ.w menu_createresidentfile__skip2a
0002361C <AmiBlitz3.ab3@5824>   MOVE.l D7,D1
00023622 <AmiBlitz3.ab3@5825>   MOVE.l #tstend,D2
00023624 <AmiBlitz3.ab3@5826>   MOVEQ.l #$0C,D3
0002362A <AmiBlitz3.ab3@5827>   MOVEA.l _dosbase,A6
0002362E <AmiBlitz3.ab3@5828>    JSR _Write(A6)
00023634 <AmiBlitz3.ab3@5832>   MOVEA.l hunkoffsetbase,A2
00023638 <AmiBlitz3.ab3@5835>   CMPA.w #$0,A2
0002363C <AmiBlitz3.ab3@5836>    BEQ.w menu_createresidentfile__skip2
00023640 <AmiBlitz3.ab3@5837>   LEA $4(A2),A1
00023642 <AmiBlitz3.ab3@5838>   MOVE.l D7,D1
00023644 <AmiBlitz3.ab3@5839>   MOVE.l A1,D2
00023646 <AmiBlitz3.ab3@5840>   MOVEQ.l #$04,D3
0002364C <AmiBlitz3.ab3@5841>   MOVEA.l _dosbase,A6
00023650 <AmiBlitz3.ab3@5842>    JSR _Write(A6)
00023652 <AmiBlitz3.ab3@5843>   MOVEA.l (A2),A2
00023656 <AmiBlitz3.ab3@5844> BRA.w menu_createresidentfile__oloop
00023658 <AmiBlitz3.ab3@5847>   MOVE.l D7,D1
0002365E <AmiBlitz3.ab3@5848>   MOVE.l #zero,D2
00023660 <AmiBlitz3.ab3@5849>   MOVEQ.l #$04,D3
00023666 <AmiBlitz3.ab3@5850>   MOVEA.l _dosbase,A6
0002366A <AmiBlitz3.ab3@5851>   JSR _Write(A6)
0002366C <AmiBlitz3.ab3@5854>   MOVE.l D7,D1
00023672 <AmiBlitz3.ab3@5855>   MOVE.l #tstdone,D2
00023674 <AmiBlitz3.ab3@5856>   MOVEQ.l #$04,D3
0002367A <AmiBlitz3.ab3@5857>   MOVEA.l _dosbase,A6
0002367E <AmiBlitz3.ab3@5858>    JSR _Write(A6)
00023680 <AmiBlitz3.ab3@5859>   MOVE.l (A7)+,D0
00023682 <AmiBlitz3.ab3@5860>   LSR.l #2,D0
00023688 <AmiBlitz3.ab3@5861>   MOVE.l D0,temp1
0002368A <AmiBlitz3.ab3@5862>   MOVE.l D7,D1
0002368C <AmiBlitz3.ab3@5863>   MOVEQ.l #$14,D2
0002368E <AmiBlitz3.ab3@5864>   MOVEQ.l #-$01,D3
00023692 <AmiBlitz3.ab3@5865>   JSR _Seek(A6)
00023694 <AmiBlitz3.ab3@5866>   MOVE.l D7,D1
0002369A <AmiBlitz3.ab3@5867>   MOVE.l #temp1,D2
0002369C <AmiBlitz3.ab3@5868>   MOVEQ.l #$04,D3
000236A0 <AmiBlitz3.ab3@5869>    JSR _Write(A6)
000236A2 <AmiBlitz3.ab3@5870>   MOVE.l D7,D1
000236A4 <AmiBlitz3.ab3@5871>   MOVEQ.l #$1C,D2
000236A6 <AmiBlitz3.ab3@5872>   MOVEQ.l #-$01,D3
000236AA <AmiBlitz3.ab3@5873>    JSR _Seek(A6)
000236AC <AmiBlitz3.ab3@5874>   MOVE.l D7,D1
000236B2 <AmiBlitz3.ab3@5875>   MOVE.l #temp1,D2
000236B4 <AmiBlitz3.ab3@5876>   MOVEQ.l #$04,D3
000236B8 <AmiBlitz3.ab3@5877>    JSR _Write(A6)
000236BA <AmiBlitz3.ab3@5878>   MOVE.l D7,D1
000236BE <AmiBlitz3.ab3@5879>    JSR _Close(A6)
000236C2 <AmiBlitz3.ab3@5880> BRA.w call_setpointernormal
000236C4 <AmiBlitz3.ab3@5884>   ADDQ.w #5,D1
000236C6 <AmiBlitz3.ab3@5885>   ADDQ.b #8,D0
000236CA <AmiBlitz3.ab3@5888>     CMPA.w #$0,A2
000236CE <AmiBlitz3.ab3@5889>     BEQ.w writelist__done
000236D2 <AmiBlitz3.ab3@5890>      BSR.w writeitem
000236D4 <AmiBlitz3.ab3@5891>     MOVEA.l (A2),A2
000236D8 <AmiBlitz3.ab3@5892> BRA.w writelist__loop
000236DA <AmiBlitz3.ab3@5895> RTS
000236DC <AmiBlitz3.ab3@5898>   MOVEQ.l #$00,D3
000236E0 <AmiBlitz3.ab3@5899>   MOVE.b $0(A2,D5.W),D3
000236E2 <AmiBlitz3.ab3@5900>   ADDQ.w #1,D3
000236E6 <AmiBlitz3.ab3@5901>   BCLR #$0,D3                                              ;word align
000236E8 <AmiBlitz3.ab3@5902>   MOVE.l (A2),-(A7)
000236EC <AmiBlitz3.ab3@5903>    BEQ.w writeitem__skip
000236F0 <AmiBlitz3.ab3@5904>    BSR.w resoff
000236F2 <AmiBlitz3.ab3@5905>   ADD.l D3,D6
000236F4 <AmiBlitz3.ab3@5906>   MOVE.l D6,(A2)
000236F6 <AmiBlitz3.ab3@5907>   SUB.l D3,D6
000236F8 <AmiBlitz3.ab3@5910>    ADD.l D3,D6
000236FA <AmiBlitz3.ab3@5911>   MOVE.l A2,D2
000236FC <AmiBlitz3.ab3@5912>   MOVE.l D7,D1
00023702 <AmiBlitz3.ab3@5913>   MOVEA.l _dosbase,A6
00023706 <AmiBlitz3.ab3@5914>    JSR _Write(A6)
00023708 <AmiBlitz3.ab3@5915>   MOVE.l (A7)+,(A2)
0002370A <AmiBlitz3.ab3@5916> RTS
0002370C <AmiBlitz3.ab3@5919>   MOVE.l D6,D2
00023710 <AmiBlitz3.ab3@5920> BRA.w addhunkoffset
00023714 <AmiBlitz3.ab3@5924>     CMPA.w #$0,A2
00023718 <AmiBlitz3.ab3@5925>      BEQ.w writeoffs__done
0002371E <AmiBlitz3.ab3@5926>     MOVEA.l newtypebase,A1
00023720 <AmiBlitz3.ab3@5927>     MOVEQ.l #$00,D1
00023724 <AmiBlitz3.ab3@5930>       CMPA.w #$0,A1
00023728 <AmiBlitz3.ab3@5931>       BEQ.w writeoffs__found
0002372C <AmiBlitz3.ab3@5932>       CMPA.l $A(A2),A1
00023730 <AmiBlitz3.ab3@5933>        BEQ.w writeoffs__found
00023732 <AmiBlitz3.ab3@5934>       ADDQ.w #1,D1
00023734 <AmiBlitz3.ab3@5935>       MOVEA.l (A1),A1
00023738 <AmiBlitz3.ab3@5936> BRA.w writeoffs__loop2
0002373C <AmiBlitz3.ab3@5939>     MOVE.w $A(A2),-(A7)
00023740 <AmiBlitz3.ab3@5940>     MOVE.w D1,$A(A2)
00023744 <AmiBlitz3.ab3@5941>      BSR.w writeitem
00023748 <AmiBlitz3.ab3@5942>     MOVE.w (A7)+,$A(A2)
0002374A <AmiBlitz3.ab3@5943>     MOVEA.l (A2),A2
0002374E <AmiBlitz3.ab3@5944> BRA.w writeoffs
00023750 <AmiBlitz3.ab3@5947> RTS
00023752 <AmiBlitz3.ab3@5951>   MOVEQ.l #$00,D0
00023756 <AmiBlitz3.ab3@5954>   CMPA.w #$0,A2
0002375A <AmiBlitz3.ab3@5955>    BEQ.w countem__done
0002375C <AmiBlitz3.ab3@5956>   ADDQ.w #1,D0
0002375E <AmiBlitz3.ab3@5957>   MOVEA.l (A2),A2
00023762 <AmiBlitz3.ab3@5958> BRA.w countem__loop
00023768 <AmiBlitz3.ab3@5961>   MOVE.w D0,temp1
0002376A <AmiBlitz3.ab3@5962>   MOVE.l D7,D1
00023770 <AmiBlitz3.ab3@5963>   MOVE.l #temp1,D2
00023772 <AmiBlitz3.ab3@5964>   MOVEQ.l #$02,D3
00023774 <AmiBlitz3.ab3@5965>   ADDQ.l #2,D6
0002377A <AmiBlitz3.ab3@5966>   MOVEA.l _dosbase,A6
0002377E <AmiBlitz3.ab3@5967> JMP _Write(A6)
00023784 <AmiBlitz3.ab3@5971>    TST.b resdisable
00023788 <AmiBlitz3.ab3@5972>    BEQ resmacs__l1
0002378E <AmiBlitz3.ab3@5973>    MOVE.l currentmacroaddr,a3
00023794 <AmiBlitz3.ab3@5974>    CMP.l #0,a3
00023798 <AmiBlitz3.ab3@5975>    BEQ resmacs__l1
0002379A <AmiBlitz3.ab3@5976>    MOVE.l (a3),a3
0002379E <AmiBlitz3.ab3@5977> BRA resmacs__l2
000237A4 <AmiBlitz3.ab3@5980>   MOVEA.l macrobase,A3                                     ;??begin org code??
000237A6 <AmiBlitz3.ab3@5983>   MOVEA.l A3,A2
000237AA <AmiBlitz3.ab3@5984>   BSR.w countem
000237AE <AmiBlitz3.ab3@5987>    CMPA.w #$0,A3
000237B2 <AmiBlitz3.ab3@5988>    BEQ.w resmacs__done
000237B4 <AmiBlitz3.ab3@5989>   MOVE.l D6,D5
000237B6 <AmiBlitz3.ab3@5990>   MOVE.l (A3),-(A7)
000237BA <AmiBlitz3.ab3@5991>   MOVE.l $4(A3),-(A7)
000237BC <AmiBlitz3.ab3@5992>   MOVEQ.l #$00,D3
000237C0 <AmiBlitz3.ab3@5993>   MOVE.b $C(A3),D3
000237C2 <AmiBlitz3.ab3@5994>   ADDQ.w #1,D3
000237C6 <AmiBlitz3.ab3@5995>   BCLR #$0,D3
000237C8 <AmiBlitz3.ab3@5996>   ADD.l D3,D6                                              ;add len of struct
000237CC <AmiBlitz3.ab3@5997>   TST.w $8(A3)
000237D0 <AmiBlitz3.ab3@5998>    BEQ.w resmacs__notext
000237D4 <AmiBlitz3.ab3@5999>   MOVE.l D6,$4(A3)
000237D6 <AmiBlitz3.ab3@6000>   MOVE.l D5,D2
000237D8 <AmiBlitz3.ab3@6001>   ADDQ.l #4,D2
000237DC <AmiBlitz3.ab3@6002>    BSR.w addhunkoffset
000237DE <AmiBlitz3.ab3@6005>   MOVEQ.l #$00,D4
000237E2 <AmiBlitz3.ab3@6006>   MOVE.w $8(A3),D4
000237E4 <AmiBlitz3.ab3@6007>   ADDQ.w #1,D4
000237E8 <AmiBlitz3.ab3@6008>   BCLR #$0,D4
000237EA <AmiBlitz3.ab3@6009>   ADD.l D4,D6
000237EC <AmiBlitz3.ab3@6010>   TST.l (A3)
000237F0 <AmiBlitz3.ab3@6011>    BEQ.w resmacs__nomore
000237F2 <AmiBlitz3.ab3@6012>   MOVE.l D6,(A3)
000237F4 <AmiBlitz3.ab3@6013>   MOVE.l D5,D2
000237F8 <AmiBlitz3.ab3@6014>    BSR.w addhunkoffset
000237FA <AmiBlitz3.ab3@6017>   MOVE.l A3,D2
000237FC <AmiBlitz3.ab3@6018>   MOVE.l D7,D1
00023802 <AmiBlitz3.ab3@6020>    MOVEA.l _dosbase,A6
00023806 <AmiBlitz3.ab3@6021>    JSR _Write(a6)
00023808 <AmiBlitz3.ab3@6022>   TST.l D4
0002380C <AmiBlitz3.ab3@6023>    BEQ.w resmacs__skip
0002380E <AmiBlitz3.ab3@6024>   MOVE.l (A7),D2
00023810 <AmiBlitz3.ab3@6025>   MOVE.l D4,D3
00023812 <AmiBlitz3.ab3@6026>   MOVE.l D7,D1
00023818 <AmiBlitz3.ab3@6028>     MOVEA.l _dosbase,A6
0002381C <AmiBlitz3.ab3@6029>    JSR _Write(A6)
00023820 <AmiBlitz3.ab3@6032>   MOVE.l (A7)+,$4(A3)
00023822 <AmiBlitz3.ab3@6033>   MOVE.l (A7)+,(A3)
00023824 <AmiBlitz3.ab3@6034>   MOVEA.l (A3),A3
00023828 <AmiBlitz3.ab3@6035> BRA.w resmacs__loop
0002382A <AmiBlitz3.ab3@6038> RTS
00023830 <AmiBlitz3.ab3@6042>   TST.b resdisable
00023834 <AmiBlitz3.ab3@6043>   BEQ restypes__l1
0002383A <AmiBlitz3.ab3@6044>   MOVE.l lastrestype,a3
00023840 <AmiBlitz3.ab3@6045>   CMP.l #0,a3
00023844 <AmiBlitz3.ab3@6046>   BEQ restypes__l1
00023846 <AmiBlitz3.ab3@6047>   MOVE.l (a3),a3
0002384A <AmiBlitz3.ab3@6048> BRA restypes__l2
00023850 <AmiBlitz3.ab3@6051>   MOVEA.l newtype_string,A3
00023852 <AmiBlitz3.ab3@6054>   MOVEA.l A3,A2
00023856 <AmiBlitz3.ab3@6055>    BSR.w countem
0002385A <AmiBlitz3.ab3@6058>    CMPA.w #$0,A3
0002385E <AmiBlitz3.ab3@6059>    BEQ.w restypes__done
00023860 <AmiBlitz3.ab3@6060>   MOVE.l D6,-(A7)
00023864 <AmiBlitz3.ab3@6061>   MOVEA.l $4(A3),A2
00023866 <AmiBlitz3.ab3@6062>   MOVEQ.l #$0E,D5
0002386A <AmiBlitz3.ab3@6063>    BSR.w writeoffs
0002386C <AmiBlitz3.ab3@6064>   MOVE.l (A7)+,D0
00023870 <AmiBlitz3.ab3@6065>   MOVE.l $4(A3),-(A7)
00023874 <AmiBlitz3.ab3@6066>   MOVE.l D0,$4(A3)
00023876 <AmiBlitz3.ab3@6067>   MOVE.l D6,D2
00023878 <AmiBlitz3.ab3@6068>   ADDQ.l #4,D2
0002387C <AmiBlitz3.ab3@6069>    BSR.w addhunkoffset
0002387E <AmiBlitz3.ab3@6070>   MOVEQ.l #$00,D3
00023882 <AmiBlitz3.ab3@6071>   MOVE.b $A(A3),D3
00023884 <AmiBlitz3.ab3@6072>   ADDQ.w #1,D3
00023888 <AmiBlitz3.ab3@6073>   BCLR #$0,D3
0002388A <AmiBlitz3.ab3@6074>   ADD.l D3,D6
0002388C <AmiBlitz3.ab3@6075>   MOVE.l A3,D2
0002388E <AmiBlitz3.ab3@6076>   MOVE.l D7,D1
00023894 <AmiBlitz3.ab3@6078>     MOVEA.l _dosbase,A6
00023898 <AmiBlitz3.ab3@6079>     JSR _Write(A6)
0002389C <AmiBlitz3.ab3@6080>   MOVE.l (A7)+,$4(A3)
0002389E <AmiBlitz3.ab3@6081>   MOVEA.l (A3),A3
000238A2 <AmiBlitz3.ab3@6082> BRA.w restypes__loop
000238A4 <AmiBlitz3.ab3@6085> RTS
000238AA <AmiBlitz3.ab3@6089>    TST.b resdisable
000238AE <AmiBlitz3.ab3@6090>    BEQ resconsts__l1
000238B4 <AmiBlitz3.ab3@6091>    MOVE.l currentlabeladdr,a2
000238BA <AmiBlitz3.ab3@6092>    CMP.l #0,a2
000238BE <AmiBlitz3.ab3@6093>    BEQ resconsts__l1
000238C0 <AmiBlitz3.ab3@6094>    MOVE.l (a2),a2
000238C4 <AmiBlitz3.ab3@6095> BRA resconsts__l2
000238CA <AmiBlitz3.ab3@6098>    MOVEA.l labelbase,A2
000238CC <AmiBlitz3.ab3@6101>    MOVEQ.l #$00,D0
000238D0 <AmiBlitz3.ab3@6104>    CMPA.w #$0,A2
000238D4 <AmiBlitz3.ab3@6105>    BEQ.w resconsts__done
000238DC <AmiBlitz3.ab3@6106>   CMPI.l #$1,$4(A2)
000238E0 <AmiBlitz3.ab3@6107>    BNE.w resconsts__next
000238E2 <AmiBlitz3.ab3@6108>   ADDQ.w #1,D0
000238E4 <AmiBlitz3.ab3@6111>   MOVEA.l (A2),A2
000238E8 <AmiBlitz3.ab3@6112> BRA.w resconsts__loop
000238EE <AmiBlitz3.ab3@6115>   MOVE.w D0,temp1
000238F0 <AmiBlitz3.ab3@6116>   MOVE.l D7,D1
000238F6 <AmiBlitz3.ab3@6117>   MOVE.l #temp1,D2
000238F8 <AmiBlitz3.ab3@6118>   MOVEQ.l #$02,D3
000238FA <AmiBlitz3.ab3@6119>   ADDQ.l #2,D6
00023900 <AmiBlitz3.ab3@6121>     MOVEA.l _dosbase,A6
00023904 <AmiBlitz3.ab3@6122>     JSR _Write(A6)
0002390A <AmiBlitz3.ab3@6123>    TST.b resdisable
0002390E <AmiBlitz3.ab3@6124>    BEQ resconsts__done_l1
00023914 <AmiBlitz3.ab3@6125>    MOVE.l currentlabeladdr,a2
0002391A <AmiBlitz3.ab3@6126>    CMP.l #0,a2
0002391E <AmiBlitz3.ab3@6127>    BEQ resconsts__done_l1
00023920 <AmiBlitz3.ab3@6128>    MOVE.l (a2),a2
00023924 <AmiBlitz3.ab3@6129> BRA resconsts__loop2
0002392A <AmiBlitz3.ab3@6132>    MOVEA.l labelbase,A2                                    ;write resident labels
0002392E <AmiBlitz3.ab3@6135>    CMPA.w #$0,A2
00023932 <AmiBlitz3.ab3@6136>    BEQ.w resconsts__done2
0002393A <AmiBlitz3.ab3@6137>   CMPI.l #$1,$4(A2)
0002393E <AmiBlitz3.ab3@6138>    BNE.w resconsts__next2
00023940 <AmiBlitz3.ab3@6139>    MOVEQ.l #$00,D3
00023944 <AmiBlitz3.ab3@6140>   MOVE.b $12(A2),D3                                        ;length
00023946 <AmiBlitz3.ab3@6141>   ADDQ.w #1,D3
0002394A <AmiBlitz3.ab3@6142>   BCLR #$0,D3
0002394C <AmiBlitz3.ab3@6143>   MOVE.l D6,D2
0002394E <AmiBlitz3.ab3@6144>   ADD.l D3,D6
00023950 <AmiBlitz3.ab3@6147>   MOVE.l (A2),-(A7)
00023952 <AmiBlitz3.ab3@6148>   TST.l (A2)
00023956 <AmiBlitz3.ab3@6149>    BEQ.w resconsts__nonext
00023958 <AmiBlitz3.ab3@6150>   MOVE.l D6,(A2)
0002395C <AmiBlitz3.ab3@6151>    BSR.w addhunkoffset
0002395E <AmiBlitz3.ab3@6154>   MOVE.l A2,D2
00023960 <AmiBlitz3.ab3@6155>   MOVE.l D7,D1
00023966 <AmiBlitz3.ab3@6157>     MOVEA.l _dosbase,A6
0002396A <AmiBlitz3.ab3@6158>     JSR _Write(A6)
0002396C <AmiBlitz3.ab3@6159>   MOVE.l (A7)+,(A2)
0002396E <AmiBlitz3.ab3@6162>   MOVEA.l (A2),A2
00023972 <AmiBlitz3.ab3@6163> BRA.w resconsts__loop2
00023974 <AmiBlitz3.ab3@6166> RTS
0002399E <AmiBlitz3.ab3@6170>    !basic
000239A4 <AmiBlitz3.ab3@6171>     MOVE.l ptr_resfile,d0
000239B4 <AmiBlitz3.ab3@6172>     resfileP.l = Peek.l(?ptr_resfile)
000239BE <AmiBlitz3.ab3@6173>     If resfileP
000239E6 <AmiBlitz3.ab3@6174>       resfile$ = Peek.s(resfileP)
00023A32 <AmiBlitz3.ab3@6175>       tests.b = Instr(resfile$,"/")
00023A7E <AmiBlitz3.ab3@6176>       testc.b = Instr(resfile$,":")
00023AA0 <AmiBlitz3.ab3@6177>       If tests=0 AND testc=0
00023B20 <AmiBlitz3.ab3@6178>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00023B32 <AmiBlitz3.ab3@6179>         Poke.l ?ptr_resfile,&resfile$
00023B38 <AmiBlitz3.ab3@6181>     Else
00023B72 <AmiBlitz3.ab3@6182>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00023B90 <AmiBlitz3.ab3@6184>    !asm
00023B92 <AmiBlitz3.ab3@6185> RTS
00023B98 <AmiBlitz3.ab3@6189> 
00023B9E <AmiBlitz3.ab3@6190>   MOVE.l A7,errstack
00023BA8 <AmiBlitz3.ab3@6193>   MOVE.l #next_resentry,errcont
00023BB0 <AmiBlitz3.ab3@6194>   MOVE.w #$FFFF,ezerr
00023BB4 <AmiBlitz3.ab3@6195>   BSR.w Aclearallvars
00023BB8 <AmiBlitz3.ab3@6196>   BSR.w free_residents
00023BBE <AmiBlitz3.ab3@6198>   LEA residents_table,A5
00023BC0 <AmiBlitz3.ab3@6199>   MOVEQ.l #$07,D6
00023BC2 <AmiBlitz3.ab3@6202>     TST.b (A5)
00023BC6 <AmiBlitz3.ab3@6203>     BEQ.w next_resentry
00023BCC <AmiBlitz3.ab3@6204>     MOVE.l A5,ptr_resfile
00023BD0 <AmiBlitz3.ab3@6205>     BSR check_residentpath
00023BD6 <AmiBlitz3.ab3@6206>     MOVE.l ptr_resfile,d1
00023BDC <AmiBlitz3.ab3@6207>     MOVEA.l _dosbase,A6
00023BE0 <AmiBlitz3.ab3@6208>     JSR _LoadSeg(A6)
00023BE4 <AmiBlitz3.ab3@6209>     MOVE.l D0,$40(A5)
00023BE8 <AmiBlitz3.ab3@6210>     BNE.w reloadresident__yeah
00023BEC <AmiBlitz3.ab3@6211>     BSR.w reserr
00023BEE <AmiBlitz3.ab3@6214>     MOVEA.l D0,A3
00023BF0 <AmiBlitz3.ab3@6215>     ADDA.l A3,A3
00023BF2 <AmiBlitz3.ab3@6216>     ADDA.l A3,A3
00023BF4 <AmiBlitz3.ab3@6217>     ADDQ.w #4,A3                                           ;start of res
00023BF8 <AmiBlitz3.ab3@6218>     BSR.w JL_0_5A9E
00023BFC <AmiBlitz3.ab3@6219>     BSR.w JL_0_5A62                                        ;add macros to list
00023C00 <AmiBlitz3.ab3@6220>     BSR.w JL_0_5A32                                        ;read labels
00023C04 <AmiBlitz3.ab3@6223>     LEA ResidentEntryStep(A5),A5       ;$44
00023C08 <AmiBlitz3.ab3@6224>   DBF D6,reloadresident__loop
00023C12 <AmiBlitz3.ab3@6229>   MOVE.l #free_residents,errcont
00023C18 <AmiBlitz3.ab3@6231>   MOVEA.l newtype_string,A3
00023C1A <AmiBlitz3.ab3@6232>   MOVEQ.l #$0B,D7
00023C1E <AmiBlitz3.ab3@6233>   BSR.w checkclash
00023C24 <AmiBlitz3.ab3@6235>   MOVEA.l macrobase,A3
00023C26 <AmiBlitz3.ab3@6236>   MOVEQ.l #$d,D7
00023C2A <AmiBlitz3.ab3@6237>   BSR.w checkclash
00023C30 <AmiBlitz3.ab3@6239>   MOVEA.l firstconst,A3
00023C32 <AmiBlitz3.ab3@6240>   MOVEQ.l #$19,D7
00023C36 <AmiBlitz3.ab3@6241>   BSR.w checkclash
00023C38 <AmiBlitz3.ab3@6244> RTS
00023C3A <AmiBlitz3.ab3@6248>   MOVEA.l A3,A4
00023C3E <AmiBlitz3.ab3@6251>     CMPA.w #$0,A4
00023C42 <AmiBlitz3.ab3@6252>     BEQ.w checkclash__done
00023C48 <AmiBlitz3.ab3@6254>     LEA ptr_parameterstore,A0
00023C4C <AmiBlitz3.ab3@6255>     LEA $0(A4,D7.W),A1
00023C4E <AmiBlitz3.ab3@6256>     MOVEQ.l #-$01,D2
00023C50 <AmiBlitz3.ab3@6259>       ADDQ.w #1,D2
00023C52 <AmiBlitz3.ab3@6260>       MOVE.b (A1)+,(A0)+
00023C56 <AmiBlitz3.ab3@6261>     BNE.w checkclash__loop2
00023C58 <AmiBlitz3.ab3@6262>     MOVEA.l A3,A2
00023C5C <AmiBlitz3.ab3@6265>     BSR.w findlab
00023C60 <AmiBlitz3.ab3@6266>     BNE.w checkclash__next                                  ;not found
00023C62 <AmiBlitz3.ab3@6267>     CMPA.l A2,A4
00023C66 <AmiBlitz3.ab3@6268>     BEQ.w checkclash__l1
00023C68 <AmiBlitz3.ab3@6269>     MOVE.l a1,a5
00023C6C <AmiBlitz3.ab3@6270> BRA clasherr
00023C70 <AmiBlitz3.ab3@6273> BRA.w checkclash__more
00023C72 <AmiBlitz3.ab3@6276>     MOVEA.l (A4),A4
00023C76 <AmiBlitz3.ab3@6277> BRA.w checkclash__loop
00023C78 <AmiBlitz3.ab3@6280> RTS
00023C7E <AmiBlitz3.ab3@6284>   MOVEA.l _dosbase,A6
00023C84 <AmiBlitz3.ab3@6286>   LEA newtype_string,A0
00023C8A <AmiBlitz3.ab3@6287>   MOVE.l A0,lastrestype
00023C8C <AmiBlitz3.ab3@6288>   CLR.l (A0)
00023C92 <AmiBlitz3.ab3@6290>   LEA macrobase,A0
00023C98 <AmiBlitz3.ab3@6291>   MOVE.l A0,currentmacroaddr
00023C9A <AmiBlitz3.ab3@6292>   CLR.l (A0)
00023CA0 <AmiBlitz3.ab3@6294>   LEA labelbase,A0
00023CA6 <AmiBlitz3.ab3@6295>   MOVE.l A0,currentlabeladdr
00023CA8 <AmiBlitz3.ab3@6296>   CLR.l (A0)
00023CAE <AmiBlitz3.ab3@6297>   CLR.w rescnt
00023CE6 <AmiBlitz3.ab3@6301>   !ComData_SetB{comByte_DebugMode,debugmode}
00023CEC <AmiBlitz3.ab3@6304>   LEA residents_table,A2
00023CEE <AmiBlitz3.ab3@6305>   MOVEQ.l #$07,D2
00023CF2 <AmiBlitz3.ab3@6308>      MOVE.l $40(A2),D1
00023CF6 <AmiBlitz3.ab3@6309>      BEQ.w free_residents__next
00023CFA <AmiBlitz3.ab3@6310>       CLR.l $40(A2)
00023D00 <AmiBlitz3.ab3@6311>       MOVEA.l _dosbase,A6
00023D04 <AmiBlitz3.ab3@6312>       JSR _UnLoadSeg(A6)
00023D08 <AmiBlitz3.ab3@6315>      LEA ResidentEntryStep(A2),A2   ; $44
00023D0C <AmiBlitz3.ab3@6316>    DBF D2,free_residents__loop
00023D0E <AmiBlitz3.ab3@6318> RTS
00023D10 <AmiBlitz3.ab3@6322>   MOVE.w (A3)+,D1
00023D14 <AmiBlitz3.ab3@6323>   BEQ.w JL_0_5A60
00023D1A <AmiBlitz3.ab3@6324>   MOVEA.l currentlabeladdr,A2
00023D1C <AmiBlitz3.ab3@6325>   MOVE.l A3,(A2)
00023D1E <AmiBlitz3.ab3@6326>   SUBQ.w #1,D1
00023D20 <AmiBlitz3.ab3@6329>     MOVEA.l A3,A2
00023D22 <AmiBlitz3.ab3@6330>     MOVEA.l (A3),A3
00023D26 <AmiBlitz3.ab3@6331>   DBF D1,JL_0_5A42
00023D28 <AmiBlitz3.ab3@6333>   CLR.l (a2)                                               ;bugfix for object
00023D2E <AmiBlitz3.ab3@6334>   MOVE.l A2,currentlabeladdr
00023D30 <AmiBlitz3.ab3@6335>   MOVEA.l A2,A3
00023D32 <AmiBlitz3.ab3@6336>   MOVEQ.l #$00,D0
00023D36 <AmiBlitz3.ab3@6337>   MOVE.b $12(A3),D0
00023D38 <AmiBlitz3.ab3@6338>   ADDQ.w #1,D0
00023D3C <AmiBlitz3.ab3@6339>   BCLR #$0,D0
00023D3E <AmiBlitz3.ab3@6340>   ADDA.w D0,A3
00023D40 <AmiBlitz3.ab3@6343> RTS
00023D42 <AmiBlitz3.ab3@6347>   MOVE.w (A3)+,D1
00023D46 <AmiBlitz3.ab3@6348>   BEQ.w JL_0_5A9C
00023D4C <AmiBlitz3.ab3@6350>   MOVEA.l currentmacroaddr,A2
00023D4E <AmiBlitz3.ab3@6351>   MOVE.l A3,(A2)
00023D50 <AmiBlitz3.ab3@6352>   SUBQ.w #1,D1
00023D52 <AmiBlitz3.ab3@6355>     MOVEA.l A3,A2
00023D54 <AmiBlitz3.ab3@6356>     MOVEA.l (A3),A3
00023D58 <AmiBlitz3.ab3@6357>   DBF D1,JL_0_5A72
00023D5E <AmiBlitz3.ab3@6359>   MOVE.l A2,currentmacroaddr
00023D60 <AmiBlitz3.ab3@6360>   MOVEA.l A2,A3
00023D62 <AmiBlitz3.ab3@6361>   MOVEQ.l #$00,D0
00023D66 <AmiBlitz3.ab3@6362>   MOVE.b $C(A3),D0
00023D68 <AmiBlitz3.ab3@6363>   ADDQ.w #1,D0
00023D6C <AmiBlitz3.ab3@6364>   BCLR #$0,D0
00023D70 <AmiBlitz3.ab3@6365>   MOVE.w $8(A3),D1
00023D72 <AmiBlitz3.ab3@6366>   ADDQ.w #1,D1
00023D76 <AmiBlitz3.ab3@6367>   BCLR #$0,D1
00023D78 <AmiBlitz3.ab3@6368>   ADDA.w D0,A3
00023D7A <AmiBlitz3.ab3@6369>   ADDA.w D1,A3
00023D7C <AmiBlitz3.ab3@6372> RTS
00023D7E <AmiBlitz3.ab3@6376>   MOVE.w (A3)+,D1
00023D82 <AmiBlitz3.ab3@6377>   BEQ.w JL_0_5B38
00023D84 <AmiBlitz3.ab3@6378>   MOVE.w D1,-(A7)
00023D86 <AmiBlitz3.ab3@6379>   SUBQ.w #1,D1
00023D8C <AmiBlitz3.ab3@6380>   MOVEA.l lastrestype,A2
00023D8E <AmiBlitz3.ab3@6381>   MOVE.l A2,-(A7)
00023D90 <AmiBlitz3.ab3@6384>       MOVE.l (A3),D0
00023D94 <AmiBlitz3.ab3@6385>       BEQ.w JL_0_5ABC
00023D96 <AmiBlitz3.ab3@6386>       MOVEA.l D0,A3
00023D9A <AmiBlitz3.ab3@6387> BRA.w JL_0_5AB0
00023D9E <AmiBlitz3.ab3@6390>       MOVE.b $E(A3),D0
00023DA0 <AmiBlitz3.ab3@6391>       ADDQ.w #1,D0
00023DA4 <AmiBlitz3.ab3@6392>       BCLR #$0,D0
00023DA6 <AmiBlitz3.ab3@6393>       ADDA.w D0,A3
00023DA8 <AmiBlitz3.ab3@6394>       MOVE.l A3,(A2)
00023DAA <AmiBlitz3.ab3@6395>       MOVEA.l A3,A2
00023DAC <AmiBlitz3.ab3@6396>       MOVEQ.l #$00,D0
00023DB0 <AmiBlitz3.ab3@6397>       MOVE.b $A(A3),D0
00023DB2 <AmiBlitz3.ab3@6398>       ADDQ.w #1,D0
00023DB6 <AmiBlitz3.ab3@6399>       BCLR #$0,D0
00023DB8 <AmiBlitz3.ab3@6400>       ADDA.w D0,A3
00023DBC <AmiBlitz3.ab3@6401>   DBF D1,JL_0_5AB0
00023DBE <AmiBlitz3.ab3@6403>   MOVEA.l (A7)+,A0
00023DC0 <AmiBlitz3.ab3@6404>   MOVEA.l (A0),A0
00023DC4 <AmiBlitz3.ab3@6407>     CMPA.w #$0,A0
00023DC8 <AmiBlitz3.ab3@6408>     BEQ.w JL_0_5B2A
00023DCC <AmiBlitz3.ab3@6409>     MOVEA.l $4(A0),A1
00023DD0 <AmiBlitz3.ab3@6412>     CMPA.w #$0,A1
00023DD4 <AmiBlitz3.ab3@6413>     BEQ.w JL_0_5B24
00023DD8 <AmiBlitz3.ab3@6414>     MOVE.w $A(A1),D0
00023DDE <AmiBlitz3.ab3@6415>     MOVEA.l newtypebase,A4
00023DE2 <AmiBlitz3.ab3@6416>     CMP.w #$7,D0
00023DE6 <AmiBlitz3.ab3@6417>     BCS.w JL_0_5B0E
00023DEC <AmiBlitz3.ab3@6418>     SUB.w rescnt,D0
00023DEE <AmiBlitz3.ab3@6421>     SUBQ.w #1,D0
00023DF2 <AmiBlitz3.ab3@6422>     BMI.w JL_0_5B1A
00023DF4 <AmiBlitz3.ab3@6425>        MOVEA.l (A4),A4
00023DF8 <AmiBlitz3.ab3@6426>   DBF D0,JL_0_5B14
00023DFC <AmiBlitz3.ab3@6429>     MOVE.l A4,$A(A1)
00023DFE <AmiBlitz3.ab3@6430>     MOVEA.l (A1),A1
00023E02 <AmiBlitz3.ab3@6431> BRA.w JL_0_5AEE
00023E04 <AmiBlitz3.ab3@6434>     MOVEA.l (A0),A0
00023E08 <AmiBlitz3.ab3@6435> BRA.w JL_0_5AE2
00023E0A <AmiBlitz3.ab3@6438>   MOVE.w (A7)+,D0
00023E10 <AmiBlitz3.ab3@6439>   ADD.w D0,rescnt
00023E16 <AmiBlitz3.ab3@6440>   MOVE.l A2,lastrestype
00023E18 <AmiBlitz3.ab3@6443> RTS
00023E1E <AmiBlitz3.ab3@6447>   LEA tokens,A0
00023E22 <AmiBlitz3.ab3@6448>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00023E24 <AmiBlitz3.ab3@6451>     MOVEA.l (A0),A0
00023E28 <AmiBlitz3.ab3@6452>   DBF D0,JL_0_5BD0
00023E2E <AmiBlitz3.ab3@6454>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00023E32 <AmiBlitz3.ab3@6455>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00023E36 <AmiBlitz3.ab3@6458>       LEA $6(A0),A2
00023E38 <AmiBlitz3.ab3@6461>         TST.b (A2)+
00023E3C <AmiBlitz3.ab3@6462>       BNE.w JL_0_5BE4
00023E3E <AmiBlitz3.ab3@6465>         TST.b (A2)+
00023E42 <AmiBlitz3.ab3@6466>       BNE.w JL_0_5BEA
00023E44 <AmiBlitz3.ab3@6468>       ADDQ.w #1,A2
00023E46 <AmiBlitz3.ab3@6469>       EXG.l D1,A2
00023E4A <AmiBlitz3.ab3@6470>       BCLR #$0,D1
00023E4C <AmiBlitz3.ab3@6471>       EXG.l D1,A2
00023E4E <AmiBlitz3.ab3@6472>       MOVE.l A2,(A1)+
00023E50 <AmiBlitz3.ab3@6473>       MOVEA.l (A0),A0
00023E54 <AmiBlitz3.ab3@6474>   DBF D0,JL_0_5BE0
00023E56 <AmiBlitz3.ab3@6475> RTS
00023E5A <AmiBlitz3.ab3@6479>   BSR.w asmconst
00023E5C <AmiBlitz3.ab3@6480>   MOVEQ.l #$0B,D5
00023E5E <AmiBlitz3.ab3@6481> RTS
00023E60 <AmiBlitz3.ab3@6484> unmove:  Ds.w 1
00023E64 <AmiBlitz3.ab3@6488>   MOVE.w #$48E7,D1
00023E68 <AmiBlitz3.ab3@6489>   BSR.w writeword                                          ;movem.l -(a7)
00023E6C <AmiBlitz3.ab3@6490>   MOVE.w #$000F,D2
00023E6E <AmiBlitz3.ab3@6491>   SUB.w D4,D2
00023E70 <AmiBlitz3.ab3@6492>   MOVEQ.l #-$01,D1
00023E72 <AmiBlitz3.ab3@6493>   BCLR D2,D1
00023E76 <AmiBlitz3.ab3@6494>   BSR.w writeword
00023E78 <AmiBlitz3.ab3@6495>   MOVEQ.l #-$01,D1
00023E7A <AmiBlitz3.ab3@6496>   BCLR D4,D1
00023E80 <AmiBlitz3.ab3@6497>   MOVE.w D1,unmove
00023E82 <AmiBlitz3.ab3@6498> RTS
00023E86 <AmiBlitz3.ab3@6502>   MOVE.w #$4CDF,D1
00023E8A <AmiBlitz3.ab3@6503>   BSR.w writeword
00023E8E <AmiBlitz3.ab3@6504>   MOVE.w unmove(PC),D1
00023E92 <AmiBlitz3.ab3@6505> BRA.w writeword
00023E96 <AmiBlitz3.ab3@6518>   BSR.w JL_0_5D22
00023E9A <AmiBlitz3.ab3@6519>   CMP.w #$2C,D0                                            ;#','
00023E9E <AmiBlitz3.ab3@6520>    BNE.w syntaxerr
00023EA4 <AmiBlitz3.ab3@6521>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00023EA8 <AmiBlitz3.ab3@6522>    BSR.w writelong
00023EAA <AmiBlitz3.ab3@6523>   MOVE.w D4,D1
00023EAE <AmiBlitz3.ab3@6524>   ORI.w #$2F00,D1
00023EB2 <AmiBlitz3.ab3@6525>    BSR.w writeword
00023EB6 <AmiBlitz3.ab3@6526>    BSR.w get1bytemain
00023EBA <AmiBlitz3.ab3@6527>    BSR.w getparameter
00023EBE <AmiBlitz3.ab3@6528>    BSR.w JL_0_8E3C
00023EC2 <AmiBlitz3.ab3@6529>    BSR.w calcvar
00023EC6 <AmiBlitz3.ab3@6530>    BTST #$E,D2
00023ECA <AmiBlitz3.ab3@6531>    BEQ.w JL_0_5C80
00023ECE <AmiBlitz3.ab3@6534>    MOVE.b #$3,D2
00023ED2 <AmiBlitz3.ab3@6535> BRA.w JL_0_5C8E
00023ED4 <AmiBlitz3.ab3@6538>   TST.b D2
00023ED8 <AmiBlitz3.ab3@6539>    BEQ.w JL_0_5C78
00023EDC <AmiBlitz3.ab3@6540>   CMP.b #$7,D2
00023EE0 <AmiBlitz3.ab3@6541>    BEQ.w JL_0_5C78
00023EE4 <AmiBlitz3.ab3@6544>   BTST #$F,D2
00023EE8 <AmiBlitz3.ab3@6545>    BNE.w JL_0_5CA4
00023EEC <AmiBlitz3.ab3@6546>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00023EF0 <AmiBlitz3.ab3@6547>    BSR.w writeword
00023EF2 <AmiBlitz3.ab3@6548>   MOVE.w D3,D1
00023EF6 <AmiBlitz3.ab3@6549>    BSR.w writeword
00023EFA <AmiBlitz3.ab3@6552>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00023EFE <AmiBlitz3.ab3@6553>    BSR.w writeword
00023F02 <AmiBlitz3.ab3@6554>   MOVE.w #$1480,D1
00023F06 <AmiBlitz3.ab3@6555>   CMP.b #$1,D2
00023F0A <AmiBlitz3.ab3@6556>    BEQ.w JL_0_5CC8
00023F0E <AmiBlitz3.ab3@6557>   EORI.w #$3000,D1
00023F12 <AmiBlitz3.ab3@6558>   CMP.b #$2,D2
00023F16 <AmiBlitz3.ab3@6559>    BNE.w JL_0_5CC8
00023F1A <AmiBlitz3.ab3@6560>   ORI.w #$1000,D1
00023F1E <AmiBlitz3.ab3@6563>   BSR.w writeword
00023F24 <AmiBlitz3.ab3@6564>   MOVE.l #$4CDF7FFF,D1
00023F28 <AmiBlitz3.ab3@6565> BRA.w writelong
00023F2C <AmiBlitz3.ab3@6569>   BSR.w JL_0_5D22
00023F30 <AmiBlitz3.ab3@6570>   CMP.w #$2C,D0
00023F34 <AmiBlitz3.ab3@6571>    BNE.w syntaxerr
00023F38 <AmiBlitz3.ab3@6572>    BSR.w regmovems
00023F3A <AmiBlitz3.ab3@6573>   MOVE.w D4,-(A7)
00023F3C <AmiBlitz3.ab3@6574>   MOVEQ.l #$03,D2
00023F40 <AmiBlitz3.ab3@6575>    BSR.w eval
00023F42 <AmiBlitz3.ab3@6576>   MOVE.w (A7)+,D1
00023F46 <AmiBlitz3.ab3@6577>    BEQ.w JL_0_5D1A
00023F4A <AmiBlitz3.ab3@6578>   CMP.w #$8,D1
00023F4E <AmiBlitz3.ab3@6579>    BCC.w JL_0_5D0C
00023F50 <AmiBlitz3.ab3@6580>   LSL.w #8,D1
00023F52 <AmiBlitz3.ab3@6581>   LSL.w #1,D1
00023F56 <AmiBlitz3.ab3@6582>   ORI.w #$2000,D1
00023F5A <AmiBlitz3.ab3@6583>    BSR.w writeword
00023F5E <AmiBlitz3.ab3@6584> BRA.w JL_0_5D1A
00023F60 <AmiBlitz3.ab3@6587>   SUBQ.w #8,D1
00023F62 <AmiBlitz3.ab3@6588>   LSL.w #8,D1
00023F64 <AmiBlitz3.ab3@6589>   LSL.w #1,D1
00023F68 <AmiBlitz3.ab3@6590>   ORI.w #$2040,D1
00023F6C <AmiBlitz3.ab3@6591>   BSR.w writeword
00023F70 <AmiBlitz3.ab3@6594> BRA.w dounmove
00023F74 <AmiBlitz3.ab3@6598>   BSR.w get1bytemain
00023F78 <AmiBlitz3.ab3@6601>   ORI.w #$20,D0
00023F7C <AmiBlitz3.ab3@6602>   CMP.w #$64,D0
00023F80 <AmiBlitz3.ab3@6603>    BEQ.w JL_0_5D4E
00023F84 <AmiBlitz3.ab3@6604>   CMP.w #$61,D0
00023F88 <AmiBlitz3.ab3@6605>    BNE.w syntaxerr
00023F8C <AmiBlitz3.ab3@6606>    BSR.w JL_0_5D4E
00023F8E <AmiBlitz3.ab3@6607>   ADDQ.w #8,D4
00023F90 <AmiBlitz3.ab3@6608> RTS
00023FBC <AmiBlitz3.ab3@6612>   !fget                                                   ;bsr.w get1bytemain
00023FC0 <AmiBlitz3.ab3@6614>   ORI.w #$20,D0
00023FC4 <AmiBlitz3.ab3@6617>   CMP.w #$61,D0
00023FC8 <AmiBlitz3.ab3@6618>   BNE.w syntaxerr
00023FF4 <AmiBlitz3.ab3@6621>   !fget                                                    ;bsr.w get1bytemain
00023FF8 <AmiBlitz3.ab3@6622>   SUBI.w #$30,D0
00023FFC <AmiBlitz3.ab3@6623>    BMI.w syntaxerr
00024000 <AmiBlitz3.ab3@6624>   CMP.w #$7,D0
00024004 <AmiBlitz3.ab3@6625>    BHI.w syntaxerr
00024006 <AmiBlitz3.ab3@6626>   MOVE.w D0,D4
00024032 <AmiBlitz3.ab3@6627>   !fget
00024034 <AmiBlitz3.ab3@6628> RTS                                                        ;bra.w get1bytemain
00024036 <AmiBlitz3.ab3@6632>   ADDQ.w #8,D4
00024038 <AmiBlitz3.ab3@6635>   MOVEQ.l #$00,D5
0002403C <AmiBlitz3.ab3@6636>   SUBI.w #$30,D4
00024040 <AmiBlitz3.ab3@6639>   CMP.w #$2D,D0
00024044 <AmiBlitz3.ab3@6640>    BEQ.w JL_0_5D9E
00024048 <AmiBlitz3.ab3@6641>   CMP.w #$2F,D0
0002404C <AmiBlitz3.ab3@6642>    BEQ.w JL_0_5D8C
00024050 <AmiBlitz3.ab3@6643> BRA.w syntaxerr
00024052 <AmiBlitz3.ab3@6646>   BSET D4,D5
00024054 <AmiBlitz3.ab3@6649>   MOVE.w D5,D4
00024056 <AmiBlitz3.ab3@6650>   MOVEQ.l #$0F,D5
00024058 <AmiBlitz3.ab3@6651> RTS
0002405A <AmiBlitz3.ab3@6654>   BSET D4,D5
0002405E <AmiBlitz3.ab3@6655>   BSR.w JL_0_5D1E
00024070 <AmiBlitz3.ab3@6656>   !compare3                                                ;bsr.w JL_0_5FC0
00024074 <AmiBlitz3.ab3@6657>   BNE.w JL_0_5D70
00024078 <AmiBlitz3.ab3@6658> BRA.w JL_0_5D84
0002407A <AmiBlitz3.ab3@6661>   MOVE.w D4,D1
0002407E <AmiBlitz3.ab3@6662>    BSR.w JL_0_5D1E
00024080 <AmiBlitz3.ab3@6663>   CMP.w D4,D1
00024084 <AmiBlitz3.ab3@6664>    BLS.w JL_0_5DAC
00024086 <AmiBlitz3.ab3@6665>   EXG.l D4,D1
00024088 <AmiBlitz3.ab3@6668>   BSET D1,D5
0002408A <AmiBlitz3.ab3@6669>   ADDQ.w #1,D1
0002408C <AmiBlitz3.ab3@6670>   CMP.w D4,D1
00024090 <AmiBlitz3.ab3@6671>    BLS.w JL_0_5DAC
000240A2 <AmiBlitz3.ab3@6672>   !compare3                                                ;bsr.w JL_0_5FC0
000240A6 <AmiBlitz3.ab3@6673>   BNE.w JL_0_5D70
000240AA <AmiBlitz3.ab3@6674> BRA.w JL_0_5D86
000240AC <AmiBlitz3.ab3@6677>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
000240D8 <AmiBlitz3.ab3@6678>    !fget
000240DC <AmiBlitz3.ab3@6679>   CMP.w #$23,D0
000240E0 <AmiBlitz3.ab3@6680>    BEQ.w getimm
000240E4 <AmiBlitz3.ab3@6681>   CMP.w #$28,D0
000240E8 <AmiBlitz3.ab3@6682>    BEQ.w JL_0_5DFE
000240EC <AmiBlitz3.ab3@6683>   CMP.w #$2D,D0
000240F0 <AmiBlitz3.ab3@6684>    BNE.w JL_0_5E20
0002411C <AmiBlitz3.ab3@6685>    !fget                                                   ;bsr.w get1bytemain       -(
00024120 <AmiBlitz3.ab3@6686>   CMP.w #$28,D0
00024124 <AmiBlitz3.ab3@6687>    BNE.w JL_0_5F4E
00024128 <AmiBlitz3.ab3@6688>    BSR.w JL_0_5D3E
0002412C <AmiBlitz3.ab3@6689>   CMP.w #$29,D0
00024130 <AmiBlitz3.ab3@6690>    BNE.w syntaxerr
00024132 <AmiBlitz3.ab3@6691>   MOVEQ.l #$04,D5
0002415E <AmiBlitz3.ab3@6692>   !fget                                                    ;bsr.w get1bytemain
00024160 <AmiBlitz3.ab3@6693> RTS
00024164 <AmiBlitz3.ab3@6697>   BSR.w JL_0_5D3E
00024168 <AmiBlitz3.ab3@6698>   CMP.w #$29,D0
0002416C <AmiBlitz3.ab3@6699>    BNE.w syntaxerr
00024198 <AmiBlitz3.ab3@6700>   !fget                                                    ;bsr.w get1bytemain
0002419C <AmiBlitz3.ab3@6701>   CMP.w #$2B,D0
000241A0 <AmiBlitz3.ab3@6702>    BEQ.w JL_0_5E1A
000241A2 <AmiBlitz3.ab3@6703>   MOVEQ.l #$02,D5
000241A4 <AmiBlitz3.ab3@6704> RTS
000241A6 <AmiBlitz3.ab3@6708>   MOVEQ.l #$03,D5
000241D2 <AmiBlitz3.ab3@6709>   !fget                                                    ;bra.w get1bytemain
000241D4 <AmiBlitz3.ab3@6710> RTS
000241D8 <AmiBlitz3.ab3@6714>   ORI.w #$20,D0
000241DA <AmiBlitz3.ab3@6715>   MOVE.w D0,D1                                            
00024206 <AmiBlitz3.ab3@6716>    !fget                                                   ;bsr.w get1bytemain
0002420A <AmiBlitz3.ab3@6717>   CMP.w #$64,D1
0002420E <AmiBlitz3.ab3@6718>    BNE.w JL_0_5E6C
00024212 <AmiBlitz3.ab3@6719>   CMP.w #$30,D0
00024216 <AmiBlitz3.ab3@6720>    BCS.w JL_0_5EAE
0002421A <AmiBlitz3.ab3@6721>   CMP.w #$37,D0
0002421E <AmiBlitz3.ab3@6722>    BHI.w JL_0_5EAE
00024220 <AmiBlitz3.ab3@6723>   MOVE.w D0,D4
0002424C <AmiBlitz3.ab3@6724>    !fget                                                   ;bsr.w get1bytemain
0002425E <AmiBlitz3.ab3@6725>    !compare3                                               ;bsr.w JL_0_5FC0
00024262 <AmiBlitz3.ab3@6726>    BEQ.w JL_0_5E64
00024266 <AmiBlitz3.ab3@6727>   CMP.w #$2D,D0
0002426A <AmiBlitz3.ab3@6728>    BEQ.w JL_0_5D6A
0002426E <AmiBlitz3.ab3@6729>   CMP.w #$2F,D0
00024272 <AmiBlitz3.ab3@6730>    BEQ.w JL_0_5D6A
00024276 <AmiBlitz3.ab3@6731> BRA.w JL_0_5EB8
00024278 <AmiBlitz3.ab3@6734>   MOVEQ.l #$00,D5
0002427C <AmiBlitz3.ab3@6735>   SUBI.w #$30,D4
0002427E <AmiBlitz3.ab3@6736> RTS
00024282 <AmiBlitz3.ab3@6739>    CMP.w #$61,D1
00024286 <AmiBlitz3.ab3@6740>    BNE.w JL_0_5EAE
0002428A <AmiBlitz3.ab3@6741>   CMP.w #$30,D0
0002428E <AmiBlitz3.ab3@6742>    BCS.w JL_0_5EAE
00024292 <AmiBlitz3.ab3@6743>   CMP.w #$37,D0
00024296 <AmiBlitz3.ab3@6744>    BHI.w JL_0_5EAE
00024298 <AmiBlitz3.ab3@6745>   MOVE.w D0,D4
000242C4 <AmiBlitz3.ab3@6746>    !fget                                                   ;bsr.w get1bytemain
000242D6 <AmiBlitz3.ab3@6747>    !compare3                                               ;bsr.w JL_0_5FC0
000242DA <AmiBlitz3.ab3@6748>    BEQ.w JL_0_5EA6
000242DE <AmiBlitz3.ab3@6749>   CMP.w #$2D,D0
000242E2 <AmiBlitz3.ab3@6750>    BEQ.w JL_0_5D68                                         ;movem
000242E6 <AmiBlitz3.ab3@6751>   CMP.w #$2F,D0
000242EA <AmiBlitz3.ab3@6752>    BEQ.w JL_0_5D68
000242EE <AmiBlitz3.ab3@6753> BRA.w JL_0_5EB8
000242F0 <AmiBlitz3.ab3@6756>   MOVEQ.l #1,d5
000242F4 <AmiBlitz3.ab3@6757>   SUBI.w #$30,D4
000242F8 <AmiBlitz3.ab3@6759> BRA 'l10
000242FA <AmiBlitz3.ab3@6760>   ADDQ.w #8,d4
000242FC <AmiBlitz3.ab3@6761>   MOVEQ #0,d5
000242FE <AmiBlitz3.ab3@6762>   BSET d4,d5
00024300 <AmiBlitz3.ab3@6763>   MOVE.w d5,d4
00024302 <AmiBlitz3.ab3@6764>   MOVEQ.l #$0f,D5                                          ;01
00024304 <AmiBlitz3.ab3@6767> RTS
00024308 <AmiBlitz3.ab3@6771>   ORI.w #$20,D0
0002430A <AmiBlitz3.ab3@6772>   MOVE.w D0,D4
00024336 <AmiBlitz3.ab3@6773>    !fget                                                   ;bsr.w get1bytemain
00024348 <AmiBlitz3.ab3@6776>   !compare3                                                ;bsr.w JL_0_5FC0
0002434C <AmiBlitz3.ab3@6777>    BNE.w JL_0_5EF2
00024350 <AmiBlitz3.ab3@6778>   CMP.w #$73,D1
00024354 <AmiBlitz3.ab3@6779>    BNE.w JL_0_5EF2
00024358 <AmiBlitz3.ab3@6780>   CMP.w #$70,D4
0002435C <AmiBlitz3.ab3@6781>    BNE.w JL_0_5EDE
0002436E <AmiBlitz3.ab3@6782>    !compare3                                               ;bsr.w JL_0_5FC0
00024372 <AmiBlitz3.ab3@6783>    BNE.w JL_0_5F4E
00024374 <AmiBlitz3.ab3@6784>   MOVEQ.l #$07,D4
00024376 <AmiBlitz3.ab3@6785>   MOVEQ.l #$01,D5
00024378 <AmiBlitz3.ab3@6786> RTS
0002437C <AmiBlitz3.ab3@6790>   CMP.w #$72,D4
00024380 <AmiBlitz3.ab3@6791>    BNE.w JL_0_5F4E
00024392 <AmiBlitz3.ab3@6792>    !compare3                                               ;bsr.w JL_0_5FC0
00024396 <AmiBlitz3.ab3@6793>    BNE.w JL_0_5F4E
00024398 <AmiBlitz3.ab3@6794>   MOVEQ.l #$0D,D5
0002439A <AmiBlitz3.ab3@6795> RTS
0002439E <AmiBlitz3.ab3@6799>   ORI.w #$20,D0
000243A2 <AmiBlitz3.ab3@6800>   CMP.w #$63,D1
000243A6 <AmiBlitz3.ab3@6801>    BNE.w JL_0_5F22
000243AA <AmiBlitz3.ab3@6802>   CMP.w #$63,D4
000243AE <AmiBlitz3.ab3@6803>    BNE.w JL_0_5F4E
000243B2 <AmiBlitz3.ab3@6804>   CMP.w #$72,D0
000243B6 <AmiBlitz3.ab3@6805>    BNE.w JL_0_5F4E
000243BA <AmiBlitz3.ab3@6806>    BSR.w get1bytemain                                      ;??wy not !fget
000243BE <AmiBlitz3.ab3@6807>    BEQ.w JL_0_5F1E
000243C2 <AmiBlitz3.ab3@6808>   CMP.w #$2C,D0
000243C6 <AmiBlitz3.ab3@6809>    BNE.w JL_0_5F4E
000243C8 <AmiBlitz3.ab3@6812>   MOVEQ.l #$0C,D5
000243CA <AmiBlitz3.ab3@6813> RTS
000243CE <AmiBlitz3.ab3@6817>   CMP.w #$75,D1
000243D2 <AmiBlitz3.ab3@6818>    BNE.w JL_0_5F4E
000243D6 <AmiBlitz3.ab3@6819>   CMP.w #$73,D4
000243DA <AmiBlitz3.ab3@6820>    BNE.w JL_0_5F4E
000243DE <AmiBlitz3.ab3@6821>   CMP.w #$70,D0
000243E2 <AmiBlitz3.ab3@6822>    BNE.w JL_0_5F4E
000243E6 <AmiBlitz3.ab3@6823>    BSR.w get1bytemain                                      ;??wy not !fget
000243EA <AmiBlitz3.ab3@6824>    BEQ.w JL_0_5F4A
000243EE <AmiBlitz3.ab3@6825>   CMP.w #$2C,D0
000243F2 <AmiBlitz3.ab3@6826>    BNE.w JL_0_5F4E
000243F4 <AmiBlitz3.ab3@6829>   MOVEQ.l #$0E,D5
000243F6 <AmiBlitz3.ab3@6830> RTS
000243F8 <AmiBlitz3.ab3@6834>   MOVEA.l A4,A5
000243FC <AmiBlitz3.ab3@6835>    BSR.w asmconst
0002440E <AmiBlitz3.ab3@6836>    !compare3                                               ;bsr.w JL_0_5FC0
00024412 <AmiBlitz3.ab3@6837>    BEQ.w JL_0_5FB8
00024416 <AmiBlitz3.ab3@6838>   CMP.w #$2E,D0
0002441A <AmiBlitz3.ab3@6839>    BEQ.w JL_0_5FA0
0002441E <AmiBlitz3.ab3@6840>   CMP.w #$28,D0
00024422 <AmiBlitz3.ab3@6841>    BNE.w syntaxerr
00024426 <AmiBlitz3.ab3@6842>    BSR.w get1bytemain                                      ;??wy not !fget
0002442A <AmiBlitz3.ab3@6843>   ORI.w #$20,D0
0002442E <AmiBlitz3.ab3@6844>   CMP.w #$70,D0
00024432 <AmiBlitz3.ab3@6845>    BNE.w JL_0_5F98
00024436 <AmiBlitz3.ab3@6846>    BSR.w get1bytemain                                      ;??wy not !fget
0002443A <AmiBlitz3.ab3@6847>   ORI.w #$20,D0
0002443E <AmiBlitz3.ab3@6848>   CMP.w #$63,D0
00024442 <AmiBlitz3.ab3@6849>    BNE.w syntaxerr
00024446 <AmiBlitz3.ab3@6850>    BSR.w get1bytemain                                      ;??wy not !fget
0002444A <AmiBlitz3.ab3@6851>    BSR.w JL_0_5FD4
0002444C <AmiBlitz3.ab3@6852>   ADDQ.w #4,D5
0002444E <AmiBlitz3.ab3@6853> RTS
00024452 <AmiBlitz3.ab3@6857>   BSR.w JL_0_5D46
00024456 <AmiBlitz3.ab3@6858> BRA.w JL_0_5FD4
0002445A <AmiBlitz3.ab3@6862>    BSR.w get1bytemain                                     ;??wy not !fget
0002445E <AmiBlitz3.ab3@6863>   ORI.w #$20,D0
00024462 <AmiBlitz3.ab3@6864>   CMP.w #$77,D0
00024466 <AmiBlitz3.ab3@6865>    BEQ.w JL_0_5FBC
0002446A <AmiBlitz3.ab3@6866>   CMP.w #$6C,D0
0002446E <AmiBlitz3.ab3@6867>    BNE.w syntaxerr
00024470 <AmiBlitz3.ab3@6870>   MOVEQ.l #$08,D5
00024472 <AmiBlitz3.ab3@6871> RTS
00024474 <AmiBlitz3.ab3@6875>   MOVEQ.l #$07,D5
00024476 <AmiBlitz3.ab3@6876> RTS
00024478 <AmiBlitz3.ab3@6880>   TST.w D0
0002447C <AmiBlitz3.ab3@6881>    BEQ.w JL_0_5FD2
00024480 <AmiBlitz3.ab3@6882>   CMP.w #$3A,D0
00024484 <AmiBlitz3.ab3@6883>    BEQ.w JL_0_5FD2
00024488 <AmiBlitz3.ab3@6884>   CMP.w #$2C,D0
0002448A <AmiBlitz3.ab3@6887> RTS
0002448E <AmiBlitz3.ab3@6891>   CMP.w #$2C,D0
00024492 <AmiBlitz3.ab3@6892>    BNE.w JL_0_6054
00024496 <AmiBlitz3.ab3@6893>    BSR.w get1bytemain                                      ;??wy not !fget
0002449A <AmiBlitz3.ab3@6894>   ORI.w #$20,D0
0002449C <AmiBlitz3.ab3@6895>   MOVEQ.l #$00,D1
000244A0 <AmiBlitz3.ab3@6896>   CMP.w #$64,D0
000244A4 <AmiBlitz3.ab3@6897>    BEQ.w JL_0_5FFA
000244A8 <AmiBlitz3.ab3@6898>   CMP.w #$61,D0
000244AC <AmiBlitz3.ab3@6899>    BNE.w syntaxerr
000244B0 <AmiBlitz3.ab3@6900>   BSET #$F,D1
000244B4 <AmiBlitz3.ab3@6903>    BSR.w get1bytemain                                      ;??wy not !fget
000244B8 <AmiBlitz3.ab3@6904>   SUBI.w #$30,D0
000244BC <AmiBlitz3.ab3@6905>    BMI.w syntaxerr
000244C0 <AmiBlitz3.ab3@6906>   CMP.w #$7,D0
000244C4 <AmiBlitz3.ab3@6907>    BHI.w syntaxerr
000244C6 <AmiBlitz3.ab3@6908>   LSL.w #8,D0
000244C8 <AmiBlitz3.ab3@6909>   LSL.w #4,D0
000244CA <AmiBlitz3.ab3@6910>   OR.w D0,D1
000244CE <AmiBlitz3.ab3@6911>    BSR.w get1bytemain                                      ;??wy not !fget
000244D2 <AmiBlitz3.ab3@6912>   CMP.w #$2E,D0
000244D6 <AmiBlitz3.ab3@6913>    BNE.w JL_0_6040
000244DA <AmiBlitz3.ab3@6914>    BSR.w get1bytemain                                      ;??wy not !fget
000244DE <AmiBlitz3.ab3@6915>   ORI.w #$20,D0
000244E2 <AmiBlitz3.ab3@6916>   CMP.w #$77,D0
000244E6 <AmiBlitz3.ab3@6917>    BEQ.w JL_0_603C
000244EA <AmiBlitz3.ab3@6918>   CMP.w #$6C,D0
000244EE <AmiBlitz3.ab3@6919>    BNE.w syntaxerr
000244F2 <AmiBlitz3.ab3@6920>   BSET #$B,D1
000244F6 <AmiBlitz3.ab3@6923>    BSR.w get1bytemain                                      ;??wy not !fget
000244FA <AmiBlitz3.ab3@6926>    CMP.b #"*",d0                                           ;020 * Mode
000244FE <AmiBlitz3.ab3@6927>             BNE 'l1
00024502 <AmiBlitz3.ab3@6928>             BSR.w get1bytemain                             ;??wy not !fget
00024506 <AmiBlitz3.ab3@6929>             CMP.b #"2",d0
0002450A <AmiBlitz3.ab3@6930>             BNE 'l2
0002450E <AmiBlitz3.ab3@6931>             OR.w #$200,d1
00024512 <AmiBlitz3.ab3@6932> BRA 'l1b
00024516 <AmiBlitz3.ab3@6935>             CMP.b #"4",d0
0002451A <AmiBlitz3.ab3@6936>             BNE 'l3
0002451E <AmiBlitz3.ab3@6937>             OR.w #$400,d1
00024522 <AmiBlitz3.ab3@6938> BRA 'l1b
00024526 <AmiBlitz3.ab3@6941>             CMP.b #"8",d0
0002452A <AmiBlitz3.ab3@6942>             BNE syntaxerr
0002452E <AmiBlitz3.ab3@6943>             OR.w #$600,d1
00024532 <AmiBlitz3.ab3@6946>         BSR.w get1bytemain                                 ;??wy not !fget
00024536 <AmiBlitz3.ab3@6949>   CMP.w #$29,D0
0002453A <AmiBlitz3.ab3@6950>    BNE.w syntaxerr
00024540 <AmiBlitz3.ab3@6951>   MOVE.w D1,extraword
00024542 <AmiBlitz3.ab3@6952>   MOVEQ.l #$06,D5
00024546 <AmiBlitz3.ab3@6953> BRA.w get1bytemain                                         ;??wy not !fget
0002454A <AmiBlitz3.ab3@6957>   CMP.w #")",D0                                            ;")"
0002454E <AmiBlitz3.ab3@6958>    BNE.w errorbracketmiss                                  ; was syntax error
00024550 <AmiBlitz3.ab3@6959>   MOVEQ.l #$05,D5
00024554 <AmiBlitz3.ab3@6960> BRA.w get1bytemain                                         ;??wy not !fget
0002455A <AmiBlitz3.ab3@6967>   MOVEA.l asmbuff,A0
00024560 <AmiBlitz3.ab3@6968>   MOVE.w ininclude,D1
00024566 <AmiBlitz3.ab3@6969>   OR.w inmacro,D1
00024568 <AmiBlitz3.ab3@6970>   MOVE.w D1,(A0)+                                          ;flag!
0002456C <AmiBlitz3.ab3@6971>    BNE.w copyconst
0002456E <AmiBlitz3.ab3@6972>   MOVE.l A5,-(A7)
00024572 <AmiBlitz3.ab3@6973>    BSR.w copyconst
00024578 <AmiBlitz3.ab3@6974>   MOVEA.l asmbuff,A0
0002457C <AmiBlitz3.ab3@6975>   CMP.w #$4,D1
00024580 <AmiBlitz3.ab3@6976>    BLS.w asmconst__leave
00024586 <AmiBlitz3.ab3@6977>   TST.w lc
0002458A <AmiBlitz3.ab3@6978>    BNE.w asmconst__leave
0002458C <AmiBlitz3.ab3@6979>   ADDQ.w #2,A0
0002458E <AmiBlitz3.ab3@6980>   MOVE.l (A7)+,(A0)+
00024590 <AmiBlitz3.ab3@6981>   CLR.b (A0)
00024598 <AmiBlitz3.ab3@6982>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002459A <AmiBlitz3.ab3@6983> RTS
0002459C <AmiBlitz3.ab3@6987>   NOT.w (A0)
0002459E <AmiBlitz3.ab3@6988>   ADDQ.w #4,A7
000245A0 <AmiBlitz3.ab3@6989> RTS
000245A2 <AmiBlitz3.ab3@6992> lc:  Ds.w 1
000245A8 <AmiBlitz3.ab3@6996>   CLR.w lc
000245AA <AmiBlitz3.ab3@6997>   MOVEQ.l #$00,D1
000245AC <AmiBlitz3.ab3@7000>    ADDQ.w #1,D1                                            ;label name
000245D8 <AmiBlitz3.ab3@7001>    !fget                                                   ;bsr.w get1bytemain
000245DC <AmiBlitz3.ab3@7002>    BEQ.w copyconst__done
000245E0 <AmiBlitz3.ab3@7003>    CMP.w #$22,d0
000245E4 <AmiBlitz3.ab3@7004>    BNE.s copyconst__loop_l10
000245EA <AmiBlitz3.ab3@7005>    NOT.w instringon
000245EE <AmiBlitz3.ab3@7008>    CMP.w #":",d0
000245F2 <AmiBlitz3.ab3@7009>    BNE.s copyconst__loop_l11
000245F8 <AmiBlitz3.ab3@7010>    TST.w instringon
000245FC <AmiBlitz3.ab3@7011>    BEQ copyconst__done
000245FE <AmiBlitz3.ab3@7014>   TST.w D0
00024602 <AmiBlitz3.ab3@7015>   BPL.w copyconst__notmi
00024604 <AmiBlitz3.ab3@7016>   MOVE.w D0,-(A7)
00024606 <AmiBlitz3.ab3@7017>   LSR.w #8,D0
00024608 <AmiBlitz3.ab3@7018>   MOVE.b D0,(A0)+
0002460A <AmiBlitz3.ab3@7019>   MOVE.w (A7)+,D0
0002460C <AmiBlitz3.ab3@7020>   MOVE.b D0,(A0)+
0002460E <AmiBlitz3.ab3@7021>   ADDQ.w #1,D1
00024612 <AmiBlitz3.ab3@7022> BRA.s copyconst__loop
00024618 <AmiBlitz3.ab3@7025>    TST.w instringon
0002461C <AmiBlitz3.ab3@7026>    BNE.w copyconst__putbyte
00024622 <AmiBlitz3.ab3@7027>    TST.b _dcb
00024626 <AmiBlitz3.ab3@7028>    BNE copyconst__notmi_l10
0002462A <AmiBlitz3.ab3@7029>    CMP.w #$28,D0
0002462E <AmiBlitz3.ab3@7030>    BEQ.w copyconst__done
00024632 <AmiBlitz3.ab3@7033>    CMP.w #$2C,D0
00024636 <AmiBlitz3.ab3@7034>    BEQ.w copyconst__done
0002463A <AmiBlitz3.ab3@7035>    CMP.b #"'",D0
0002463E <AmiBlitz3.ab3@7036>    BNE.w copyconst__putbyte
00024644 <AmiBlitz3.ab3@7037>    MOVE.w D0,lc                                     ;locallabels
00024646 <AmiBlitz3.ab3@7038>    MOVE.l A1,-(A7)
0002464C <AmiBlitz3.ab3@7039>    LEA lastgloballabel,A1
0002464E <AmiBlitz3.ab3@7040>    TST.b (A1)
00024652 <AmiBlitz3.ab3@7041>    BEQ.w nolocerr
00024654 <AmiBlitz3.ab3@7044>   ADDQ.w #1,D1
00024656 <AmiBlitz3.ab3@7045>   MOVE.b (A1)+,(A0)+
0002465A <AmiBlitz3.ab3@7046>    BNE.w copyconst__cloop
0002465C <AmiBlitz3.ab3@7047>   SUBQ.w #1,D1
0002465E <AmiBlitz3.ab3@7048>   SUBQ.w #1,A0
00024660 <AmiBlitz3.ab3@7049>   MOVEA.l (A7)+,A1
00024662 <AmiBlitz3.ab3@7052>   MOVE.b D0,(A0)+
00024666 <AmiBlitz3.ab3@7053> BRA.w copyconst__loop
00024668 <AmiBlitz3.ab3@7056>   CLR.b (A0)
0002466E <AmiBlitz3.ab3@7057>   MOVE.w D1,asmlen2
00024670 <AmiBlitz3.ab3@7058> RTS
00024676 <AmiBlitz3.ab3@7063>   CMP.l #$80ad,d0
0002467A <AmiBlitz3.ab3@7064>   BNE.s 'l12
00024680 <AmiBlitz3.ab3@7065> JMP bssseg
00024686 <AmiBlitz3.ab3@7068>   CMP.l #$807f,d0
0002468A <AmiBlitz3.ab3@7069>     BNE.s 'l13
00024690 <AmiBlitz3.ab3@7070> JMP chipseg
00024696 <AmiBlitz3.ab3@7073>   ADDQ.l #1,destpointer                                    ;even
0002469E <AmiBlitz3.ab3@7074>   BCLR #$0,destpointer+3
000246A2 <AmiBlitz3.ab3@7075>   SUBI.w #$803C,D0
000246A4 <AmiBlitz3.ab3@7076>   LSL.w #2,D0
000246AA <AmiBlitz3.ab3@7077>   MOVEA.l #asmpnts,A0
000246AE <AmiBlitz3.ab3@7078>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000246B4 <AmiBlitz3.ab3@7079>   MOVE.w D0,temp1
000246B6 <AmiBlitz3.ab3@7080>   MOVE.l A0,-(A7)
000246B8 <AmiBlitz3.ab3@7081>   MOVEQ.l #$01,D1
000246E4 <AmiBlitz3.ab3@7082>    !fget                                                   ;bsr.w get1bytemain
000246E8 <AmiBlitz3.ab3@7083>   CMP.w #$2E,D0
000246EC <AmiBlitz3.ab3@7084>    BNE.w JL_0_6184
00024718 <AmiBlitz3.ab3@7085>   !fget                                                    ;bsr.w get1bytemain
0002471C <AmiBlitz3.ab3@7086>   ORI.w #$20,D0
00024720 <AmiBlitz3.ab3@7087>   CMP.w #$77,D0                                            ;long
00024724 <AmiBlitz3.ab3@7088>    BEQ.w JL_0_618A
00024728 <AmiBlitz3.ab3@7089>   CMP.w #$62,D0                                            ;byte
0002472C <AmiBlitz3.ab3@7090>    BEQ.w JL_0_617A
00024730 <AmiBlitz3.ab3@7091>   CMP.w #$6C,D0                                            ;word
00024734 <AmiBlitz3.ab3@7092>    BEQ.w JL_0_6196
00024738 <AmiBlitz3.ab3@7093>   CMP.w #"s",d0
0002473C <AmiBlitz3.ab3@7094>   BNE syntaxerr
00024740 <AmiBlitz3.ab3@7095> BRA.w JL_0_617A
00024742 <AmiBlitz3.ab3@7098>   MOVEQ.l #$00,D1
00024746 <AmiBlitz3.ab3@7099>   MOVE.w $8(A0),D0
0002474A <AmiBlitz3.ab3@7100> BRA.w JL_0_619E
0002474C <AmiBlitz3.ab3@7103>   MOVEQ.l #$04,D1
00024750 <AmiBlitz3.ab3@7104> BRA.w JL_0_61AE
00024752 <AmiBlitz3.ab3@7107>   MOVEQ.l #$04,D1
00024756 <AmiBlitz3.ab3@7108>   MOVE.w $8(A0),D0
00024758 <AmiBlitz3.ab3@7109>   LSR.w #4,D0
0002475C <AmiBlitz3.ab3@7110> BRA.w JL_0_619E
0002475E <AmiBlitz3.ab3@7113>   MOVEQ.l #$08,D1
00024762 <AmiBlitz3.ab3@7114>   MOVE.w $8(A0),D0
00024764 <AmiBlitz3.ab3@7115>   LSR.w #8,D0
00024768 <AmiBlitz3.ab3@7118>    ANDI.w #$F,D0
0002476C <AmiBlitz3.ab3@7119>   CMP.w #$F,D0
00024770 <AmiBlitz3.ab3@7120>    BNE.w 'cl60
00024778 <AmiBlitz3.ab3@7123>    CMP.l #"MULS",-6(a0)
0002477C <AmiBlitz3.ab3@7124>    BNE 'c20
00024782 <AmiBlitz3.ab3@7125>    MOVE.l #$4c000800,d1
00024788 <AmiBlitz3.ab3@7126> JMP do32
00024790 <AmiBlitz3.ab3@7129>    CMP.l #"MULU",-6(a0)
00024794 <AmiBlitz3.ab3@7130>    BNE 'c30
0002479A <AmiBlitz3.ab3@7131>    MOVE.l #$4c000000,d1
000247A0 <AmiBlitz3.ab3@7132> JMP do32
000247A8 <AmiBlitz3.ab3@7135>    CMP.l #"DIVS",-6(a0)
000247AC <AmiBlitz3.ab3@7136>    BNE 'c40
000247B2 <AmiBlitz3.ab3@7137>    MOVE.l #$4c400800,d1
000247B8 <AmiBlitz3.ab3@7138> JMP do32
000247C0 <AmiBlitz3.ab3@7141>    CMP.l #"DIVU",-6(a0)
000247C4 <AmiBlitz3.ab3@7142>    BNE 'c50
000247CA <AmiBlitz3.ab3@7143>    MOVE.l #$4c400000,d1
000247D0 <AmiBlitz3.ab3@7144> JMP do32
000247D4 <AmiBlitz3.ab3@7147> BRA illsizeerr
00024800 <AmiBlitz3.ab3@7150>   !fget                                                    ;bsr.w get1bytemain
00024806 <AmiBlitz3.ab3@7153>   MOVE.w D1,asmsize
00024808 <AmiBlitz3.ab3@7154>   MOVEQ.l #-$01,D3
0002480C <AmiBlitz3.ab3@7155>    BSR.w reget
00024810 <AmiBlitz3.ab3@7156>    BEQ.w JL_0_6200
0002481A <AmiBlitz3.ab3@7157>   MOVE.l #ptr_parameterstore,asmbuff
00024824 <AmiBlitz3.ab3@7159>    MOVE.w oldqflag,instringon
0002482A <AmiBlitz3.ab3@7160>   MOVEA.l lastsourcepos,A5
0002482E <AmiBlitz3.ab3@7161>    BSR.w JL_0_5DC2
00024830 <AmiBlitz3.ab3@7162>   MOVE.l D4,D2                                             ;to src
00024832 <AmiBlitz3.ab3@7163>   MOVE.l D5,D3
0002483C <AmiBlitz3.ab3@7164>   MOVE.w asmlen2,asmlen
0002483E <AmiBlitz3.ab3@7165>   MOVEQ.l #-$01,D5
00024848 <AmiBlitz3.ab3@7166>   MOVE.w extraword,extraword2
0002484C <AmiBlitz3.ab3@7167>   CMP.w #$2C,D0                                            ;','
00024850 <AmiBlitz3.ab3@7168>    BNE.w JL_0_6200
0002485A <AmiBlitz3.ab3@7169>   MOVE.l #namebuff2,asmbuff
0002485E <AmiBlitz3.ab3@7170>    BSR.w JL_0_5DC2                                         ;dest
00024860 <AmiBlitz3.ab3@7173>   MOVEA.l (A7)+,A0
00024866 <AmiBlitz3.ab3@7174>   MOVEA.l destpointer,A1
00024868 <AmiBlitz3.ab3@7175>   MOVEA.l A1,A4
0002486A <AmiBlitz3.ab3@7176>   ADDQ.w #2,A1
0002486C <AmiBlitz3.ab3@7177>   MOVE.w (A0),D1
0002486E <AmiBlitz3.ab3@7178>   TST.w D3
00024872 <AmiBlitz3.ab3@7179>    BMI.w JL_0_639E
00024876 <AmiBlitz3.ab3@7180>   MOVE.w $E(A0),D0
0002487A <AmiBlitz3.ab3@7181>    BPL.w JL_0_6264
0002487E <AmiBlitz3.ab3@7182>   BTST #$0,D0
00024882 <AmiBlitz3.ab3@7183>    BEQ.w JL_0_6240
00024886 <AmiBlitz3.ab3@7184>   CMP.w #$1,D5
0002488A <AmiBlitz3.ab3@7185>    BNE.w JL_0_6240
0002488E <AmiBlitz3.ab3@7186>   CMP.w #$E,D3
00024892 <AmiBlitz3.ab3@7187>    BEQ.w JL_0_6264
00024898 <AmiBlitz3.ab3@7188>   MOVE.w temp1,D0
0002489A <AmiBlitz3.ab3@7189>   ADDQ.w #4,D0
0002489E <AmiBlitz3.ab3@7190> BRA.w JL_0_6256
000248A2 <AmiBlitz3.ab3@7193>   BTST #$1,D0
000248A6 <AmiBlitz3.ab3@7194>    BEQ.w JL_0_6264
000248AA <AmiBlitz3.ab3@7195>   CMP.w #$B,D3
000248AE <AmiBlitz3.ab3@7196>    BNE.w JL_0_6264
000248B4 <AmiBlitz3.ab3@7197>   MOVE.w temp1,D0
000248B6 <AmiBlitz3.ab3@7200>   ADDQ.w #4,D0
000248BC <AmiBlitz3.ab3@7201>   MOVEA.l #asmpnts,A0
000248C0 <AmiBlitz3.ab3@7202>   MOVEA.l $0(A0,D0.W),A0
000248C2 <AmiBlitz3.ab3@7203>   MOVE.w (A0),D1
000248CC <AmiBlitz3.ab3@7206>   MOVE.l #ptr_parameterstore,buff1
000248D6 <AmiBlitz3.ab3@7207>   MOVE.l #namebuff2,buff2
000248DA <AmiBlitz3.ab3@7208>   MOVE.l $A(A0),D0
000248DE <AmiBlitz3.ab3@7209>    BEQ.w JL_0_62DC
000248E0 <AmiBlitz3.ab3@7210>   MOVEA.l D0,A3
000248E6 <AmiBlitz3.ab3@7211>   MOVE.w asmsize,D6
000248E8 <AmiBlitz3.ab3@7214>    JSR (A3)
000248EC <AmiBlitz3.ab3@7215>    BPL.w JL_0_629A
000248F0 <AmiBlitz3.ab3@7216>   CMP.w #-$2,D0
000248F4 <AmiBlitz3.ab3@7217>    BEQ.w illsizeerr
000248F8 <AmiBlitz3.ab3@7218> BRA.w illeaerr
000248FC <AmiBlitz3.ab3@7221>   BEQ.w JL_0_62DC
000248FE <AmiBlitz3.ab3@7222>   EXG.l D2,D4
00024900 <AmiBlitz3.ab3@7223>   EXG.l D3,D5
00024906 <AmiBlitz3.ab3@7224>   MOVE.l extraword,D6
00024908 <AmiBlitz3.ab3@7225>   SWAP D6
0002490E <AmiBlitz3.ab3@7226>   MOVE.l D6,extraword
00024918 <AmiBlitz3.ab3@7227>   MOVE.l #namebuff2,buff1
00024922 <AmiBlitz3.ab3@7228>   MOVE.l #ptr_parameterstore,buff2
00024928 <AmiBlitz3.ab3@7229>   MOVE.w asmlen,D6
0002492E <AmiBlitz3.ab3@7230>   MOVE.w asmlen2,D7
00024934 <AmiBlitz3.ab3@7231>   MOVE.w D6,asmlen2
0002493A <AmiBlitz3.ab3@7232>   MOVE.w D7,asmlen
00024944 <AmiBlitz3.ab3@7235>   MOVE.l buff1,asmbuff
00024948 <AmiBlitz3.ab3@7236>   MOVE.w $E(A0),D0
0002494C <AmiBlitz3.ab3@7237>    BEQ.w JL_0_6348
00024950 <AmiBlitz3.ab3@7238>    BMI.w JL_0_6348
00024954 <AmiBlitz3.ab3@7239>    CMP.w #$7000,d1
00024958 <AmiBlitz3.ab3@7240>    BNE 'skip
0002495C <AmiBlitz3.ab3@7241>    CMP.w #$b,d3
00024960 <AmiBlitz3.ab3@7242>    BNE illeaerr
00024964 <AmiBlitz3.ab3@7245>    CMP.w #$1,D0
00024968 <AmiBlitz3.ab3@7246>    BNE.w JL_0_630E
0002496C <AmiBlitz3.ab3@7247>    CMP.w #$B,D3
00024970 <AmiBlitz3.ab3@7248>    BNE.w JL_0_6348
00024974 <AmiBlitz3.ab3@7251>    BSR.w insasm
00024976 <AmiBlitz3.ab3@7252>   MOVE.w D4,D2
00024978 <AmiBlitz3.ab3@7253>   MOVE.w D5,D3
0002497C <AmiBlitz3.ab3@7254> BRA.w JL_0_6364
00024980 <AmiBlitz3.ab3@7257>    CMP.w #$2,D0
00024984 <AmiBlitz3.ab3@7258>    BNE.w JL_0_6324
00024988 <AmiBlitz3.ab3@7259>   CMP.w #$8,D3
0002498C <AmiBlitz3.ab3@7260>    BNE.w illeaerr
0002498E <AmiBlitz3.ab3@7261>   MOVEQ.l #$09,D3
00024992 <AmiBlitz3.ab3@7262> BRA.w JL_0_6348
00024996 <AmiBlitz3.ab3@7265>    CMP.w #$3,D0
0002499A <AmiBlitz3.ab3@7266>    BEQ.w JL_0_6302
0002499E <AmiBlitz3.ab3@7267>   CMP.w #$4,D0
000249A2 <AmiBlitz3.ab3@7268>    BEQ.w JL_0_6302
000249A6 <AmiBlitz3.ab3@7269>   CMP.w #$5,D0
000249AA <AmiBlitz3.ab3@7270>    BNE.w JL_0_6348
000249AE <AmiBlitz3.ab3@7271>   CMP.w #$8,D5
000249B2 <AmiBlitz3.ab3@7272>    BNE.w illeaerr
000249B4 <AmiBlitz3.ab3@7273>   OR.w D2,D1
000249B6 <AmiBlitz3.ab3@7274>   MOVEQ.l #$09,D5
000249BA <AmiBlitz3.ab3@7277>   MOVE.w $2(A0),D6
000249BE <AmiBlitz3.ab3@7278>   MOVE.b $6(A0),D7
000249C2 <AmiBlitz3.ab3@7279>   MOVEM.l D4-D5,-(A7)
000249C8 <AmiBlitz3.ab3@7280>   MOVE.w extraword2,D4
000249CC <AmiBlitz3.ab3@7281>    BSR.w doea
000249D0 <AmiBlitz3.ab3@7282>   MOVEM.l (A7)+,D2-D3
000249D2 <AmiBlitz3.ab3@7283>   TST.w D3
000249D6 <AmiBlitz3.ab3@7286>     BMI.w JL_0_6392
000249DC <AmiBlitz3.ab3@7287>   MOVE.w extraword,D4
000249E0 <AmiBlitz3.ab3@7288>   MOVE.w $4(A0),D6
000249E4 <AmiBlitz3.ab3@7289>   MOVE.b $7(A0),D7
000249EE <AmiBlitz3.ab3@7290>   MOVE.l buff2,asmbuff
000249F8 <AmiBlitz3.ab3@7291>   MOVE.w asmlen2,asmlen
000249FC <AmiBlitz3.ab3@7292>    BSR.w doea
00024A00 <AmiBlitz3.ab3@7293> BRA.w JL_0_63AA
00024A04 <AmiBlitz3.ab3@7296>   MOVE.w $4(A0),D0
00024A08 <AmiBlitz3.ab3@7297>    BNE.w illeaerr
00024A0C <AmiBlitz3.ab3@7298> BRA.w JL_0_63AA
00024A10 <AmiBlitz3.ab3@7302>   MOVE.w $2(A0),D0
00024A14 <AmiBlitz3.ab3@7303>   OR.w $4(A0),D0
00024A18 <AmiBlitz3.ab3@7304>    BNE.w illeaerr
00024A1C <AmiBlitz3.ab3@7307>   MOVE.w $8(A0),D0
00024A20 <AmiBlitz3.ab3@7308>   ANDI.w #$F000,D0
00024A24 <AmiBlitz3.ab3@7309>   CMP.w #-$1000,D0
00024A28 <AmiBlitz3.ab3@7310>    BEQ.w JL_0_63D2
00024A2A <AmiBlitz3.ab3@7311>   LSR.w #8,D0
00024A2C <AmiBlitz3.ab3@7312>   LSR.w #4,D0
00024A30 <AmiBlitz3.ab3@7313>   MOVE.w $8(A0),D2
00024A36 <AmiBlitz3.ab3@7314>   MOVE.w asmsize,D3
00024A38 <AmiBlitz3.ab3@7315>   LSR.w D3,D2
00024A3C <AmiBlitz3.ab3@7316>   ANDI.w #$F,D2
00024A3E <AmiBlitz3.ab3@7317>   LSL.w D0,D2
00024A40 <AmiBlitz3.ab3@7318>   OR.w D2,D1
00024A46 <AmiBlitz3.ab3@7321>   CMPA.l destbufferend,A4
00024A4A <AmiBlitz3.ab3@7322>    BCS.w JL_0_63E8
00024A52 <AmiBlitz3.ab3@7324>   MOVE.w #$FFFF,dontwrite
00024A56 <AmiBlitz3.ab3@7325> BRA.w JL_0_63EA
00024A58 <AmiBlitz3.ab3@7328>   MOVE.w D1,(A4)
00024A5E <AmiBlitz3.ab3@7331>   MOVE.l A1,destpointer
00024A60 <AmiBlitz3.ab3@7332> RTS
00024A66 <AmiBlitz3.ab3@7336>   MOVE.l destpointer,-(A7)
00024A6C <AmiBlitz3.ab3@7337>   MOVE.l A1,destpointer
00024A70 <AmiBlitz3.ab3@7338>    BSR.w addoff
00024A76 <AmiBlitz3.ab3@7339>   MOVEA.l destpointer,A1
00024A7C <AmiBlitz3.ab3@7340>   MOVE.l (A7)+,destpointer
00024A7E <AmiBlitz3.ab3@7341> RTS
00024A82 <AmiBlitz3.ab3@7345>   MOVEM.l d2-d6,-(a7)
00024A88 <AmiBlitz3.ab3@7346>   JSR stripspaces
00024A8C <AmiBlitz3.ab3@7347>   CMP.b #"d",(a5)+
00024A90 <AmiBlitz3.ab3@7348>   BNE noreg
00024A92 <AmiBlitz3.ab3@7349>   MOVE.b (a5)+,d0
00024A96 <AmiBlitz3.ab3@7350>   CMP.b #$30,d0
00024A9A <AmiBlitz3.ab3@7351>   BLT noreg
00024A9E <AmiBlitz3.ab3@7352>   CMP.b #$37,d0
00024AA2 <AmiBlitz3.ab3@7353>   BGT noreg
00024AA6 <AmiBlitz3.ab3@7354>   SUB.b #$30,d0
00024AA8 <AmiBlitz3.ab3@7355>   MOVEQ #0,d3
00024AAA <AmiBlitz3.ab3@7356>   MOVE.b d0,d3                                             ;reg1
00024AAC <AmiBlitz3.ab3@7357>   ASL.l #8,d3
00024AAE <AmiBlitz3.ab3@7358>   ASL.l #8,d3
00024AB4 <AmiBlitz3.ab3@7359>   JSR stripspaces
00024AB8 <AmiBlitz3.ab3@7360>   CMP.b #",",(a5)+
00024ABC <AmiBlitz3.ab3@7361>   BNE noreg
00024AC2 <AmiBlitz3.ab3@7362>   JSR stripspaces
00024AC6 <AmiBlitz3.ab3@7363>   CMP.b #"d",(a5)+
00024ACA <AmiBlitz3.ab3@7364>   BNE noreg
00024ACC <AmiBlitz3.ab3@7365>   MOVE.b (a5)+,d0
00024AD0 <AmiBlitz3.ab3@7366>   CMP.b #$30,d0
00024AD4 <AmiBlitz3.ab3@7367>   BLT noreg
00024AD8 <AmiBlitz3.ab3@7368>   CMP.b #$37,d0
00024ADC <AmiBlitz3.ab3@7369>   BGT noreg
00024AE0 <AmiBlitz3.ab3@7370>   SUB.b #$30,d0
00024AE2 <AmiBlitz3.ab3@7371>   MOVEQ #0,d4
00024AE4 <AmiBlitz3.ab3@7372>   MOVE.b d0,d4                                             ;reg2
00024AE6 <AmiBlitz3.ab3@7373>   ASL.l #8,d4
00024AE8 <AmiBlitz3.ab3@7374>   ASL.l #4,d4
00024AEA <AmiBlitz3.ab3@7375>   OR.b d0,d1
00024AEC <AmiBlitz3.ab3@7376>   OR.l d3,d1
00024AEE <AmiBlitz3.ab3@7377>   OR.l d4,d1
00024AF4 <AmiBlitz3.ab3@7378>   JSR writelong
00024AF8 <AmiBlitz3.ab3@7379>   MOVEM.l (a7)+,d2-d6
00024AFC <AmiBlitz3.ab3@7380>   MOVEM.l d1/a1-a3,-(a7)
00024B00 <AmiBlitz3.ab3@7381> BRA exit
00024B04 <AmiBlitz3.ab3@7385>   MOVEM.l (a7)+,d2-d6
00024B0A <AmiBlitz3.ab3@7386>   LEA errtext,a0
00024B0C <AmiBlitz3.ab3@7387>   MOVE.l a0,-(a7)
00024B12 <AmiBlitz3.ab3@7388> JMP handle_compileerror
00024B18 <AmiBlitz3.ab3@7397>   MOVE.w dontwrite,D1
00024B1C <AmiBlitz3.ab3@7398>    BNE.w asmfixer__done
00024B24 <AmiBlitz3.ab3@7399>   BTST #$7,make_smallestcode
00024B28 <AmiBlitz3.ab3@7400>    BEQ.w asmfixer__go
00024B2C <AmiBlitz3.ab3@7401>   MOVE.w pass(PC),D1
00024B30 <AmiBlitz3.ab3@7402>    BEQ.w asmfixer__done
00024B36 <AmiBlitz3.ab3@7405>   MOVEA.l templabel,A2                                     ;insert labels in Code
00024B3E <AmiBlitz3.ab3@7406>   MOVE.b #1,curtemplabel
00024B46 <AmiBlitz3.ab3@7407>   MOVE.w #$FFFF,constmode
00024B4C <AmiBlitz3.ab3@7408>   CLR.w regnum
00024B56 <AmiBlitz3.ab3@7409>           MOVE.l #forthstack,forthsp
00024B60 <AmiBlitz3.ab3@7410>           MOVE.l #precstack,precsp
00024B64 <AmiBlitz3.ab3@7411>    BSR.w prepstack
00024B66 <AmiBlitz3.ab3@7414>   MOVE.l A2,-(A7)
00024B6A <AmiBlitz3.ab3@7415>    BSR.w chkstop
00024B6C <AmiBlitz3.ab3@7416>   MOVEA.l (A7)+,A2
00024B70 <AmiBlitz3.ab3@7417>   CMPA.w #$0,A2
00024B74 <AmiBlitz3.ab3@7418>    BEQ.w asmfixer__done2
00024B7A <AmiBlitz3.ab3@7419>    CLR.b iee
00024B80 <AmiBlitz3.ab3@7420>   MOVE.l A2,asmbuff
00024B84 <AmiBlitz3.ab3@7421>   LEA $10(A2),A5
00024B88 <AmiBlitz3.ab3@7422>   TST.b $F(A2)
00024B8C <AmiBlitz3.ab3@7423>    BNE.w asmfixer__skipo
00024B8E <AmiBlitz3.ab3@7424>   MOVEA.l (A5),A5                                          ;pointer to real text
00024B94 <AmiBlitz3.ab3@7427>    CLR.w asmtype
00024B98 <AmiBlitz3.ab3@7428>    CMP.b #".",(a5)
00024B9C <AmiBlitz3.ab3@7429>    BNE.s asmfixer__skipo_l10
00024B9E <AmiBlitz3.ab3@7430>    MOVE.l a2,-(a7)
00024BA0 <AmiBlitz3.ab3@7431>    ADDQ.l #1,a5
00024BA6 <AmiBlitz3.ab3@7432>    LEA newtypebase,a2
00024BAA <AmiBlitz3.ab3@7433>    BSR getparameter2
00024BAE <AmiBlitz3.ab3@7434>    BEQ.w syntaxerr
00024BB2 <AmiBlitz3.ab3@7435>    BSR findtype
00024BB6 <AmiBlitz3.ab3@7436>    BNE.w notypeerr
00024BBA <AmiBlitz3.ab3@7437>    LEA $4(a2),a2
00024BBE <AmiBlitz3.ab3@7438>    BSR getparameter2
00024BC2 <AmiBlitz3.ab3@7439>    BEQ.w syntaxerr
00024BC6 <AmiBlitz3.ab3@7440>    BSR.w findvariable2
00024BCA <AmiBlitz3.ab3@7441>    BNE.w notypeerr
00024BCE <AmiBlitz3.ab3@7442>    MOVE.w $4(a2),d3
00024BD0 <AmiBlitz3.ab3@7443>    EXT.l d3
00024BD4 <AmiBlitz3.ab3@7444> BRA asmfixer__skipo_l30b
00024BD8 <AmiBlitz3.ab3@7447>   CMP.b #"\",(a5)
00024BDC <AmiBlitz3.ab3@7448>     BNE asmfixer__skipo_l20
00024BDE <AmiBlitz3.ab3@7449>     ADDQ.l #1,a5
00024BE0 <AmiBlitz3.ab3@7450>    MOVE.l a2,-(a7)
00024BE2 <AmiBlitz3.ab3@7451>    MOVE.l a5,a4
00024BE8 <AmiBlitz3.ab3@7452>    LEA usedpath,a5
00024BEC <AmiBlitz3.ab3@7453>    CMP.b #"*",(a5)
00024BF0 <AmiBlitz3.ab3@7454>    BNE asmfixer__skipo_lm1
00024BF2 <AmiBlitz3.ab3@7455>    ADDQ.l #1,a5
00024BF6 <AmiBlitz3.ab3@7458>    BSR.w getparameter2
00024BFA <AmiBlitz3.ab3@7459>    BEQ.w syntaxerr
00024C00 <AmiBlitz3.ab3@7460>    LEA varbase,A2
00024C08 <AmiBlitz3.ab3@7461>    MOVE.b #1,newvariable
00024C0C <AmiBlitz3.ab3@7462>    BSR.w findvariable
00024C12 <AmiBlitz3.ab3@7463>    CLR.b newvariable
00024C18 <AmiBlitz3.ab3@7464>    CMP.l #-1,d0
00024C1C <AmiBlitz3.ab3@7465>    BEQ.w notypeerr
00024C1E <AmiBlitz3.ab3@7466>    MOVE.l a4,a5
00024C22 <AmiBlitz3.ab3@7467>    MOVE.l $a(a2),a2
00024C26 <AmiBlitz3.ab3@7468>    LEA $4(a2),a2
00024C2A <AmiBlitz3.ab3@7469>    BSR getparameter2
00024C2E <AmiBlitz3.ab3@7470>    BEQ.w syntaxerr
00024C32 <AmiBlitz3.ab3@7471>    BSR.w findvariable2
00024C36 <AmiBlitz3.ab3@7472>    BNE.w notypeerr
00024C3A <AmiBlitz3.ab3@7473>   MOVE.w $4(A2),D3
00024C3C <AmiBlitz3.ab3@7474>   EXT.l D3
00024C42 <AmiBlitz3.ab3@7477>    CMP.b #"[",-1(a5)
00024C46 <AmiBlitz3.ab3@7478>    BNE asmfixer__skipo_l30c
00024C48 <AmiBlitz3.ab3@7479>    MOVEQ #0,d0
00024C4A <AmiBlitz3.ab3@7480>    MOVE.b (a5)+,d0
00024C4C <AmiBlitz3.ab3@7481>    MOVE.l d3,-(a7)
00024C4E <AmiBlitz3.ab3@7482>    MOVEQ #0,d3
00024C54 <AmiBlitz3.ab3@7483>    JSR atoi
00024C56 <AmiBlitz3.ab3@7484>    MOVE.l (a7)+,d1
00024C5A <AmiBlitz3.ab3@7485>    MOVE.l $a(a2),a2
00024C5E <AmiBlitz3.ab3@7486>    MOVE.w 8(a2),d0
00024C60 <AmiBlitz3.ab3@7487>    MULS d0,d3
00024C62 <AmiBlitz3.ab3@7488>    ADD.l d1,d3
00024C64 <AmiBlitz3.ab3@7491>   MOVE.l (a7)+,a2
00024C68 <AmiBlitz3.ab3@7492> BRA asmfixer__oko
00024C6E <AmiBlitz3.ab3@7495>   CMP.w #$c,$8(a2)
00024C72 <AmiBlitz3.ab3@7496>      BEQ asmfixer__skipo_lf1
00024C78 <AmiBlitz3.ab3@7497>      CMP.w #$d,$8(a2)
00024C7C <AmiBlitz3.ab3@7498>      BEQ asmfixer__skipo_lf1
00024C82 <AmiBlitz3.ab3@7501>   JSR AJL_0_BF6E
00024C88 <AmiBlitz3.ab3@7504>   MOVEA.l asmbuff,A2
00024C8C <AmiBlitz3.ab3@7505>    BEQ.w asmfixer__oko
00024C90 <AmiBlitz3.ab3@7506>   CMP.w #$28,D0
00024C94 <AmiBlitz3.ab3@7507>    BEQ.w asmfixer__oko
00024C98 <AmiBlitz3.ab3@7508>   CMP.w #$2C,D0
00024C9C <AmiBlitz3.ab3@7509>    BEQ.w asmfixer__oko
00024CA0 <AmiBlitz3.ab3@7510> BRA.w syntaxerr
00024CA8 <AmiBlitz3.ab3@7513>   MOVE.b #1,iee
00024CAC <AmiBlitz3.ab3@7514> BRA asmfixer__skipo_lf2
00024CB0 <AmiBlitz3.ab3@7517>   MOVEA.l $4(A2),A1
00024CB4 <AmiBlitz3.ab3@7519>   MOVE.w $8(A2),D1                                         ;labelmode
00024CB8 <AmiBlitz3.ab3@7520>   CMP.w #$5,D1
00024CBC <AmiBlitz3.ab3@7521>    BNE.w asmfixer__notdan
00024CC0 <AmiBlitz3.ab3@7524>    BSR.w chkword                                         ;word
00024CC2 <AmiBlitz3.ab3@7527>   MOVE.w D3,(A1)
00024CC6 <AmiBlitz3.ab3@7528> BRA.w asmfixer__next
00024CCA <AmiBlitz3.ab3@7531>   CMP.w #$6,D1
00024CCE <AmiBlitz3.ab3@7532>    BNE.w asmfixer__notdanxi
00024CD2 <AmiBlitz3.ab3@7535>    BSR.w chkbyte                                         ;byte
00024CD6 <AmiBlitz3.ab3@7538>   MOVE.b D3,$1(A1)
00024CDA <AmiBlitz3.ab3@7539> BRA.w asmfixer__next
00024CDE <AmiBlitz3.ab3@7542>    CMP.w #$11,D1                                           ;byte
00024CE2 <AmiBlitz3.ab3@7543>    BEQ.w asmfixer__isbyte2
00024CE6 <AmiBlitz3.ab3@7544>    CMP.w #$c,d1
00024CEA <AmiBlitz3.ab3@7545>    BEQ asmfixer__single1
00024CEE <AmiBlitz3.ab3@7546>    CMP.w #$d,d1
00024CF2 <AmiBlitz3.ab3@7547>    BEQ asmfixer__double1
00024CF6 <AmiBlitz3.ab3@7548>   CMP.w #$7,D1
00024CFA <AmiBlitz3.ab3@7549>    BEQ.w asmfixer__word                                    ;word
00024CFE <AmiBlitz3.ab3@7550>   CMP.w #$8,D1
00024D02 <AmiBlitz3.ab3@7551>    BNE.w asmfixer__notabsl
00024D08 <AmiBlitz3.ab3@7554>   MOVE.w asmtype,D1                                        ;long
00024D0C <AmiBlitz3.ab3@7555>    BEQ.w asmfixer__notpcrel
00024D10 <AmiBlitz3.ab3@7556>      BSR.w asmoff
00024D12 <AmiBlitz3.ab3@7559>   MOVE.l D3,(A1)
00024D16 <AmiBlitz3.ab3@7560> BRA.w asmfixer__next
00024D1C <AmiBlitz3.ab3@7564>   fmove.s fp0,0(a1)
00024D20 <AmiBlitz3.ab3@7565> BRA.w asmfixer__next
00024D26 <AmiBlitz3.ab3@7569>   fmove.d fp0,0(a1)
00024D2A <AmiBlitz3.ab3@7570> BRA.w asmfixer__next
00024D2E <AmiBlitz3.ab3@7574>   CMP.w #$9,D1
00024D32 <AmiBlitz3.ab3@7575>    BNE.w asmfixer__notdpc
00024D34 <AmiBlitz3.ab3@7576>   SUB.l A1,D3                                              ;branchword
00024D38 <AmiBlitz3.ab3@7577>    BSR.w chkword
00024D3A <AmiBlitz3.ab3@7578>   MOVE.w D3,(A1)
00024D3E <AmiBlitz3.ab3@7579> BRA.w asmfixer__next
00024D42 <AmiBlitz3.ab3@7583>   CMP.w #$A,D1
00024D46 <AmiBlitz3.ab3@7584>    BNE.w asmfixer__imm
00024D48 <AmiBlitz3.ab3@7585>   SUB.l A1,D3                                              ;branchbyte
00024D4C <AmiBlitz3.ab3@7586> BRA.w asmfixer__isbyte
00024D50 <AmiBlitz3.ab3@7590>   CMP.w #$11,d1
00024D54 <AmiBlitz3.ab3@7591>   BLE asmfixer__imm_org
00024D56 <AmiBlitz3.ab3@7592>   MOVE.l a3,-(a7)
00024D5C <AmiBlitz3.ab3@7593>   LEA pluginbase,a3
00024D60 <AmiBlitz3.ab3@7594>   MOVE.l 8(a2),a0
00024D62 <AmiBlitz3.ab3@7595>   JSR (a0)                                                 ;hook
00024D64 <AmiBlitz3.ab3@7596>   MOVE.l (a7)+,a3
00024D68 <AmiBlitz3.ab3@7597> BRA asmfixer__next
00024D6C <AmiBlitz3.ab3@7600>   MOVE.w $A(A2),D0
00024D70 <AmiBlitz3.ab3@7601>    BEQ.w asmfixer__noflag
00024D74 <AmiBlitz3.ab3@7602>   CMP.w #$1,D0
00024D78 <AmiBlitz3.ab3@7603>    BEQ.w asmfixer__tocount
00024D7C <AmiBlitz3.ab3@7604>   CMP.w #$3,D0
00024D80 <AmiBlitz3.ab3@7605>    BEQ.w asmfixer__tomoveq
00024D84 <AmiBlitz3.ab3@7606>   CMP.w #$4,D0
00024D88 <AmiBlitz3.ab3@7607>    BEQ.w asmfixer__totrap
00024D8C <AmiBlitz3.ab3@7610>   CMP.w #$B,D1                                             ;long
00024D90 <AmiBlitz3.ab3@7611>    BEQ.w asmfixer__isabsl
00024D94 <AmiBlitz3.ab3@7612> BRA asmfixer__word2                                              ;word
00024D9A <AmiBlitz3.ab3@7615>   CMP.l #$F,D3
00024D9E <AmiBlitz3.ab3@7616>    BHI.w illtraperr
00024DA0 <AmiBlitz3.ab3@7617>   OR.b D3,-(A1)
00024DA4 <AmiBlitz3.ab3@7618> BRA.w asmfixer__next
00024DAA <AmiBlitz3.ab3@7621>   CMP.l #$8,D3
00024DAE <AmiBlitz3.ab3@7622>    BHI.w illimmerr
00024DB0 <AmiBlitz3.ab3@7623>   TST.l D3
00024DB4 <AmiBlitz3.ab3@7624>    BEQ.w illimmerr
00024DB8 <AmiBlitz3.ab3@7625>   ANDI.w #$7,D3
00024DBA <AmiBlitz3.ab3@7626>   LSL.w #8,D3
00024DBC <AmiBlitz3.ab3@7627>   LSL.w #1,D3
00024DBE <AmiBlitz3.ab3@7628>   OR.w D3,-(A1)
00024DC2 <AmiBlitz3.ab3@7629> BRA.w asmfixer__next
00024DC6 <AmiBlitz3.ab3@7632>    BSR.w chkbyte
00024DC8 <AmiBlitz3.ab3@7633>   MOVE.b D3,-(A1)
00024DCA <AmiBlitz3.ab3@7636>   MOVEA.l (A2),A2
00024DCE <AmiBlitz3.ab3@7637> BRA.w asmfixer__loop
00024DD4 <AmiBlitz3.ab3@7640>   CLR.w constmode
00024DDA <AmiBlitz3.ab3@7643>   CLR.b curtemplabel
00024DDC <AmiBlitz3.ab3@7644> RTS
00024DDE <AmiBlitz3.ab3@7653>   BTST D3,D6
00024DE2 <AmiBlitz3.ab3@7654>    BEQ.w illeaerr
00024DE6 <AmiBlitz3.ab3@7655>    BSR.w makemode
00024DEA <AmiBlitz3.ab3@7656>   CMP.w #$7,D3
00024DEE <AmiBlitz3.ab3@7657>    BCS.w doea__skip
00024DF0 <AmiBlitz3.ab3@7658>   MOVE.w D3,D2
00024DF2 <AmiBlitz3.ab3@7659>   SUBQ.w #7,D2
00024DF6 <AmiBlitz3.ab3@7660>   CMP.w #$5,D2
00024DFA <AmiBlitz3.ab3@7661>    BCS.w doea__skip0
00024DFC <AmiBlitz3.ab3@7662>   MOVEQ.l #$04,D2
00024DFE <AmiBlitz3.ab3@7665>   MOVEQ.l #$07,D3
00024E00 <AmiBlitz3.ab3@7668>   MOVE.b D7,D0
00024E04 <AmiBlitz3.ab3@7669>   ANDI.w #$F,D0
00024E08 <AmiBlitz3.ab3@7670>   CMP.w #$F,D0
00024E0C <AmiBlitz3.ab3@7671>    BEQ.w doea__skip2
00024E0E <AmiBlitz3.ab3@7672>   LSL.w D0,D3
00024E10 <AmiBlitz3.ab3@7673>   OR.w D3,D1
00024E12 <AmiBlitz3.ab3@7676>   LSR.w #4,D7
00024E16 <AmiBlitz3.ab3@7677>   ANDI.w #$F,D7
00024E1A <AmiBlitz3.ab3@7678>   CMP.w #$F,D7
00024E1E <AmiBlitz3.ab3@7679>    BEQ.w doea__skip3
00024E20 <AmiBlitz3.ab3@7680>   LSL.w D7,D2
00024E22 <AmiBlitz3.ab3@7681>   OR.w D2,D1
00024E24 <AmiBlitz3.ab3@7684> RTS
00024E2A <AmiBlitz3.ab3@7688>   CMP.l #$7F,D3
00024E2E <AmiBlitz3.ab3@7689>    BGT.w illdiserr
00024E34 <AmiBlitz3.ab3@7690>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00024E38 <AmiBlitz3.ab3@7691>    BLT.w illdiserr
00024E3A <AmiBlitz3.ab3@7692> RTS
00024E40 <AmiBlitz3.ab3@7696>   CMP.l #$7fff,D3
00024E44 <AmiBlitz3.ab3@7697>    BGT.w illdiserr
00024E4A <AmiBlitz3.ab3@7698>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00024E4E <AmiBlitz3.ab3@7699>    BLT.w illdiserr
00024E50 <AmiBlitz3.ab3@7700> RTS
00024E52 <AmiBlitz3.ab3@7705>   MOVE.b (a5)+,d0
00024E54 <AmiBlitz3.ab3@7706>   CMP.b d1,d0
00024E58 <AmiBlitz3.ab3@7707>   BEQ 'll10
00024E5A <AmiBlitz3.ab3@7708>   TST.b d0
00024E5E <AmiBlitz3.ab3@7709>   BNE 'll20
00024E60 <AmiBlitz3.ab3@7712>   SUBQ #1,a5
00024E62 <AmiBlitz3.ab3@7713> RTS
00024E64 <AmiBlitz3.ab3@7718>   MOVE.b (a5)+,d0
00024E68 <AmiBlitz3.ab3@7719>   CMP.b #",",d0
00024E6C <AmiBlitz3.ab3@7720>   BEQ 'll10
00024E70 <AmiBlitz3.ab3@7721>   CMP.b #";",d0
00024E74 <AmiBlitz3.ab3@7722>   BEQ 'll10
00024E78 <AmiBlitz3.ab3@7723>  CMP.b #":",d0
00024E7C <AmiBlitz3.ab3@7724>   BEQ 'll10
00024E7E <AmiBlitz3.ab3@7727>   TST.b d0
00024E82 <AmiBlitz3.ab3@7728>   BNE 'll20
00024E84 <AmiBlitz3.ab3@7731>   SUBQ #1,a5
00024E86 <AmiBlitz3.ab3@7732> RTS
00024E88 <AmiBlitz3.ab3@7736>   ADD.l a2,d1
00024E8E <AmiBlitz3.ab3@7737>   LEA tempspace,a1
00024E90 <AmiBlitz3.ab3@7738>   MOVE.l d1,a0
00024E92 <AmiBlitz3.ab3@7741>   MOVE.b (a0)+,(a1)+
00024E96 <AmiBlitz3.ab3@7742>   BNE.s 'l10
00024E98 <AmiBlitz3.ab3@7743>   SUBQ.l #1,a0
00024E9A <AmiBlitz3.ab3@7744>   SUBQ.l #1,a1
00024E9C <AmiBlitz3.ab3@7747>   MOVE.b (a5)+,(a1)+
00024EA0 <AmiBlitz3.ab3@7748>   BNE.s 'l20
00024EA2 <AmiBlitz3.ab3@7749>   CLR.b (a1)
00024EA8 <AmiBlitz3.ab3@7750>   LEA tempspace,a5
00024EAA <AmiBlitz3.ab3@7751> RTS
00024EAE <AmiBlitz3.ab3@7755>   MOVEM.l D1-D2/A0,-(A7)
00024EB0 <AmiBlitz3.ab3@7756>   MOVE.l d0,d2
00024EB2 <AmiBlitz3.ab3@7757>   MOVEQ #0,d1
00024EB4 <AmiBlitz3.ab3@7758>   MOVE.l a5,a4
00024EB6 <AmiBlitz3.ab3@7761>   ADDQ.l #1,d1
00024EB8 <AmiBlitz3.ab3@7762>   MOVE.b (a5)+,d0
00024EBC <AmiBlitz3.ab3@7763>   CMP.b #",",d0
00024EC0 <AmiBlitz3.ab3@7764>   BEQ 'll10
00024EC4 <AmiBlitz3.ab3@7765>   CMP.b #";",d0
00024EC8 <AmiBlitz3.ab3@7766>   BEQ 'll10
00024ECC <AmiBlitz3.ab3@7767>   CMP.b #":",d0
00024ED0 <AmiBlitz3.ab3@7768>   BEQ 'll10
00024ED4 <AmiBlitz3.ab3@7769>   CMP.b #"(",d0
00024ED8 <AmiBlitz3.ab3@7770>   BEQ 'll10
00024EDA <AmiBlitz3.ab3@7771>   TST.b d0
00024EDE <AmiBlitz3.ab3@7772>   BNE 'll20
00024EE0 <AmiBlitz3.ab3@7775>   SUBQ #1,a5
00024EE4 <AmiBlitz3.ab3@7776>   CMP.b #"'",(a4)
00024EE8 <AmiBlitz3.ab3@7777>   BEQ 'llocal
00024EEE <AmiBlitz3.ab3@7778>   TST.w inmacro
00024EF2 <AmiBlitz3.ab3@7779>   BNE 'lmacro
00024EF4 <AmiBlitz3.ab3@7780>   MOVEQ.l #$14+4,D0
00024EF6 <AmiBlitz3.ab3@7781>   ADD.l d1,d0
00024EF8 <AmiBlitz3.ab3@7782>   MOVE.l d1,-(a7)
00024EFA <AmiBlitz3.ab3@7783>   MOVEQ.l #$01,D1
00024F00 <AmiBlitz3.ab3@7784>   MOVEA.l _execbase,A6
00024F06 <AmiBlitz3.ab3@7785>   MOVE.l mempool2,a0
00024F0A <AmiBlitz3.ab3@7786>   JSR _AllocPooled(a6)
00024F0C <AmiBlitz3.ab3@7788>   MOVE.l (a7)+,d1
00024F0E <AmiBlitz3.ab3@7789>   TST.l d0
00024F12 <AmiBlitz3.ab3@7790>   BEQ nomemory
00024F14 <AmiBlitz3.ab3@7791>   MOVEA.l D0,A0
00024F1C <AmiBlitz3.ab3@7793>   MOVE.w linenumat+2,$A(A0)
00024F22 <AmiBlitz3.ab3@7795>   MOVE.l templabel,(A0)
00024F28 <AmiBlitz3.ab3@7796>   MOVE.l A0,templabel
00024F30 <AmiBlitz3.ab3@7797>   MOVE.l destpointer,$4(A0)
00024F34 <AmiBlitz3.ab3@7798>   MOVE.l d2,$8(A0)
00024F38 <AmiBlitz3.ab3@7799>   LEA $E(A0),A0
00024F3C <AmiBlitz3.ab3@7800>   MOVE.b #$14,(A0)+
00024F3E <AmiBlitz3.ab3@7801>   CLR.b (a0)+
00024F40 <AmiBlitz3.ab3@7803>   MOVE.l a0,d2
00024F42 <AmiBlitz3.ab3@7804>   ADDQ.l #4,d2
00024F44 <AmiBlitz3.ab3@7805>   MOVE.l d2,(a0)+
00024F46 <AmiBlitz3.ab3@7808>   MOVE.b (a4)+,(a0)+
00024F48 <AmiBlitz3.ab3@7809>   SUBQ.l #1,d1
00024F4C <AmiBlitz3.ab3@7810>   BNE 'lc1
00024F4E <AmiBlitz3.ab3@7811>   CLR.b (a0)+
00024F54 <AmiBlitz3.ab3@7812>   MOVE.w linenumat,(a0)
00024F58 <AmiBlitz3.ab3@7813>   MOVEM.l (A7)+,D1-D2/A0
00024F5A <AmiBlitz3.ab3@7814> RTS
00024F5C <AmiBlitz3.ab3@7817>   MOVEQ.l #$10+2,D0
00024F5E <AmiBlitz3.ab3@7818>   ADD.l d1,d0
00024F62 <AmiBlitz3.ab3@7819>   MOVEM.l a4/d3,-(a7)
00024F64 <AmiBlitz3.ab3@7820>   MOVE.l d1,d3
00024F66 <AmiBlitz3.ab3@7821>   MOVEQ.l #$01,D1
00024F6C <AmiBlitz3.ab3@7822>   MOVEA.l _execbase,A6
00024F72 <AmiBlitz3.ab3@7823>   MOVE.l mempool2,a0
00024F76 <AmiBlitz3.ab3@7824>   JSR _AllocPooled(a6)
00024F78 <AmiBlitz3.ab3@7826>   TST.l d0
00024F7C <AmiBlitz3.ab3@7827>   BEQ nomemory
00024F7E <AmiBlitz3.ab3@7828>   MOVEA.l D0,A0
00024F86 <AmiBlitz3.ab3@7831>   MOVE.w linenumat+2,$C(A0)
00024F8C <AmiBlitz3.ab3@7832>   MOVE.l templabel,(A0)
00024F92 <AmiBlitz3.ab3@7833>   MOVE.l A0,templabel
00024F9A <AmiBlitz3.ab3@7834>   MOVE.l destpointer,$4(A0)
00024F9E <AmiBlitz3.ab3@7835>   MOVE.l d2,$8(A0)
00024FA2 <AmiBlitz3.ab3@7836>   LEA $E(A0),A0
00024FA4 <AmiBlitz3.ab3@7837>   MOVE.b d3,(A0)+
00024FAA <AmiBlitz3.ab3@7838>   ADD.b #$10,-1(a0)
00024FAE <AmiBlitz3.ab3@7839>   MOVE.b #$1,(a0)+
00024FB0 <AmiBlitz3.ab3@7840>   SUBQ.w #1,d3
00024FB2 <AmiBlitz3.ab3@7843>   MOVE.b (a4)+,(a0)+
00024FB4 <AmiBlitz3.ab3@7844>   SUBQ.l #1,d3
00024FB8 <AmiBlitz3.ab3@7845>   BNE.s 'lm2
00024FBA <AmiBlitz3.ab3@7846>   CLR.b (a0)+
00024FC0 <AmiBlitz3.ab3@7847>   MOVE.w linenumat,(a0)
00024FC4 <AmiBlitz3.ab3@7848>   MOVEM.l (a7)+,d3/a4
00024FC8 <AmiBlitz3.ab3@7849>   MOVEM.l (A7)+,D1-D2/A0
00024FCA <AmiBlitz3.ab3@7850> RTS
00024FD0 <AmiBlitz3.ab3@7853>   LEA lastgloballabel,a1
00024FD2 <AmiBlitz3.ab3@7856>   ADDQ.l #1,d1
00024FD4 <AmiBlitz3.ab3@7857>   TST.b (a1)+
00024FD8 <AmiBlitz3.ab3@7858>   BNE.s 'll11
00024FDA <AmiBlitz3.ab3@7859>   MOVEQ.l #$10+2,D0
00024FDC <AmiBlitz3.ab3@7860>   ADD.l d1,d0
00024FE0 <AmiBlitz3.ab3@7861>   MOVEM.l a4/d3,-(a7)
00024FE2 <AmiBlitz3.ab3@7862>   MOVE.l d1,d3
00024FE4 <AmiBlitz3.ab3@7863>   MOVEQ.l #$01,D1
00024FEA <AmiBlitz3.ab3@7864>   MOVEA.l _execbase,A6
00024FF0 <AmiBlitz3.ab3@7865>   MOVE.l mempool2,a0
00024FF4 <AmiBlitz3.ab3@7866>   JSR _AllocPooled(a6)
00024FF6 <AmiBlitz3.ab3@7868>   TST.l d0
00024FFA <AmiBlitz3.ab3@7869>   BEQ nomemory
00024FFC <AmiBlitz3.ab3@7870>   MOVEA.l D0,A0
00025004 <AmiBlitz3.ab3@7873>   MOVE.w linenumat+2,$C(A0)
0002500A <AmiBlitz3.ab3@7874>   MOVE.l templabel,(A0)
00025010 <AmiBlitz3.ab3@7875>   MOVE.l A0,templabel
00025018 <AmiBlitz3.ab3@7876>   MOVE.l destpointer,$4(A0)
0002501C <AmiBlitz3.ab3@7877>   MOVE.l d2,$8(A0)
00025020 <AmiBlitz3.ab3@7878>   LEA $E(A0),A0
00025022 <AmiBlitz3.ab3@7879>   MOVE.b d3,(A0)+
00025028 <AmiBlitz3.ab3@7880>   ADD.b #$10,-1(a0)
0002502C <AmiBlitz3.ab3@7881>   MOVE.b #$1,(a0)+
0002502E <AmiBlitz3.ab3@7882>   SUBQ.w #1,d3
00025034 <AmiBlitz3.ab3@7883>   LEA lastgloballabel,a1
00025036 <AmiBlitz3.ab3@7886>   SUBQ.l #1,d3
00025038 <AmiBlitz3.ab3@7887>   MOVE.b (a1)+,(a0)+
0002503C <AmiBlitz3.ab3@7888>   BNE.s 'lm3
0002503E <AmiBlitz3.ab3@7889>   SUBQ.l #1,a0
00025040 <AmiBlitz3.ab3@7892>   MOVE.b (a4)+,(a0)+
00025042 <AmiBlitz3.ab3@7893>   SUBQ.l #1,d3
00025046 <AmiBlitz3.ab3@7894>   BNE.s 'lm1
00025048 <AmiBlitz3.ab3@7895>   CLR.b (a0)+
0002504E <AmiBlitz3.ab3@7896>   MOVE.w linenumat,(a0)
00025052 <AmiBlitz3.ab3@7897>   MOVEM.l (a7)+,d3/a4
00025056 <AmiBlitz3.ab3@7898>   MOVEM.l (A7)+,D1-D2/A0
00025058 <AmiBlitz3.ab3@7899> RTS
00025082 <AmiBlitz3.ab3@7903>   !basic
000250E4 <AmiBlitz3.ab3@7904>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
000250F6 <AmiBlitz3.ab3@7905>   loop Delay_ 1
000250FC <AmiBlitz3.ab3@7906> Goto loop
00025100 <AmiBlitz3.ab3@7910>   MOVEM.l D0-D2/A0,-(A7)
00025104 <AmiBlitz3.ab3@7911>   MOVE.w $E(A0),-(A7)
00025108 <AmiBlitz3.ab3@7912>    BPL.w insasm__ok
0002510A <AmiBlitz3.ab3@7913>   CLR.w (A7)
0002510C <AmiBlitz3.ab3@7916>   MOVE.l A1,-(A7)
0002510E <AmiBlitz3.ab3@7917>   MOVEQ.l #$10+2,D0
00025114 <AmiBlitz3.ab3@7918>   ADD.w asmlen,D0
00025116 <AmiBlitz3.ab3@7919>   MOVE.w D0,D2
00025118 <AmiBlitz3.ab3@7920>   MOVEQ.l #$01,D1
0002511E <AmiBlitz3.ab3@7921>   MOVEA.l _execbase,A6
00025124 <AmiBlitz3.ab3@7922>   MOVE.l mempool2,a0
00025128 <AmiBlitz3.ab3@7923>   JSR _AllocPooled(a6)
0002512A <AmiBlitz3.ab3@7925>   MOVEA.l D0,A0
00025132 <AmiBlitz3.ab3@7928>   MOVE.w linenumat+2,$C(A0)
00025138 <AmiBlitz3.ab3@7929>   MOVE.l templabel,(A0)
0002513E <AmiBlitz3.ab3@7930>   MOVE.l A0,templabel
00025142 <AmiBlitz3.ab3@7931>   MOVE.l (A7),$4(A0)
00025146 <AmiBlitz3.ab3@7932>   MOVE.w d3,$8(A0)
0002514C <AmiBlitz3.ab3@7933>   MOVE.w $4(A7),$A(A0)
00025150 <AmiBlitz3.ab3@7934>   LEA $E(A0),A0
00025152 <AmiBlitz3.ab3@7935>   MOVE.b D2,(A0)+                                           ;length
00025158 <AmiBlitz3.ab3@7936>   MOVEA.l asmbuff,A1
0002515A <AmiBlitz3.ab3@7937>   ADDQ.w #1,A1
0002515C <AmiBlitz3.ab3@7938>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025160 <AmiBlitz3.ab3@7939>    BNE.w insasm__loop
00025162 <AmiBlitz3.ab3@7940>   MOVE.l (A1)+,(A0)+
00025168 <AmiBlitz3.ab3@7941>   MOVE.w linenumat,(a0)
0002516C <AmiBlitz3.ab3@7942> BRA.w insasm__loopdone
0002516E <AmiBlitz3.ab3@7945>    MOVE.b (A1)+,(A0)+
00025172 <AmiBlitz3.ab3@7946>    BNE.w insasm__loop
00025178 <AmiBlitz3.ab3@7947>    MOVE.w linenumat,(a0)
0002517A <AmiBlitz3.ab3@7950>   MOVEA.l (A7)+,A1
0002517C <AmiBlitz3.ab3@7951>   ADDQ.w #2,A7
00025180 <AmiBlitz3.ab3@7952>   MOVEM.l (A7)+,D0-D2/A0
00025182 <AmiBlitz3.ab3@7953> RTS
00025186 <AmiBlitz3.ab3@7957>   CMP.w #$5,D3
0002518A <AmiBlitz3.ab3@7958>    BCS.w makemode__done
0002518E <AmiBlitz3.ab3@7959>   CMP.w #$B,D3
00025192 <AmiBlitz3.ab3@7960>    BHI.w makemode__done2
00025196 <AmiBlitz3.ab3@7961>    BEQ.w makemode__imm
0002519A <AmiBlitz3.ab3@7962>    BSR.w insasm
0002519E <AmiBlitz3.ab3@7963>   CMP.w #$5,D3
000251A2 <AmiBlitz3.ab3@7964>    BEQ.w makemode__word
000251A6 <AmiBlitz3.ab3@7965>   CMP.w #$6,D3
000251AA <AmiBlitz3.ab3@7966>    BEQ.w makemode__dxi
000251AE <AmiBlitz3.ab3@7967>   CMP.w #$7,D3
000251B2 <AmiBlitz3.ab3@7968>    BEQ.w makemode__word
000251B6 <AmiBlitz3.ab3@7969>   CMP.w #$8,D3
000251BA <AmiBlitz3.ab3@7970>    BEQ.w makemode__long
000251BE <AmiBlitz3.ab3@7971>   CMP.w #$9,D3
000251C2 <AmiBlitz3.ab3@7972>    BEQ.w makemode__word
000251C8 <AmiBlitz3.ab3@7976>   CMPA.l destbufferend,A1
000251CC <AmiBlitz3.ab3@7977>    BCS.w makemode__ok7
000251CE <AmiBlitz3.ab3@7978>   ADDQ.w #2,A1
000251D0 <AmiBlitz3.ab3@7979> RTS
000251D2 <AmiBlitz3.ab3@7982>   MOVE.w D4,(A1)+
000251D4 <AmiBlitz3.ab3@7983> RTS
000251DC <AmiBlitz3.ab3@7986>   CMPI.w #$8,asmsize
000251E0 <AmiBlitz3.ab3@7987>    BCC.w makemode__immlong
000251E2 <AmiBlitz3.ab3@7988>   MOVEQ.l #$10,D3
000251E6 <AmiBlitz3.ab3@7989>    BSR.w insasm
000251E8 <AmiBlitz3.ab3@7990>   MOVEQ.l #$0B,D3
000251EC <AmiBlitz3.ab3@7991> BRA.w makemode__word
000251F0 <AmiBlitz3.ab3@7994>   BSR.w insasm
000251F2 <AmiBlitz3.ab3@7997>   ADDQ.w #2,A1
000251F4 <AmiBlitz3.ab3@8000>   ADDQ.w #2,A1
000251F6 <AmiBlitz3.ab3@8001> RTS
000251FA <AmiBlitz3.ab3@8004>   CMP.w #$F,D3
000251FE <AmiBlitz3.ab3@8005>    BNE.w makemode__done
00025204 <AmiBlitz3.ab3@8006>   CMPA.l destbufferend,A1
00025208 <AmiBlitz3.ab3@8007>    BCS.w makemode__ok3
0002520A <AmiBlitz3.ab3@8008>   ADDQ.w #2,A1
0002520C <AmiBlitz3.ab3@8009>   ADDQ.w #4,A7
0002520E <AmiBlitz3.ab3@8010> RTS
00025210 <AmiBlitz3.ab3@8013>   MOVE.w D2,(A1)+
00025212 <AmiBlitz3.ab3@8014>   ADDQ.w #4,A7
00025214 <AmiBlitz3.ab3@8017> RTS
00025218 <AmiBlitz3.ab3@8021>   BSR.w storeloc
00025222 <AmiBlitz3.ab3@8022>   MOVE.l linenumat,oldline
00025224 <AmiBlitz3.ab3@8023>   MOVEQ.l #$00,D1
00025228 <AmiBlitz3.ab3@8024>    BSR.w get1bytemain
0002522C <AmiBlitz3.ab3@8025>    BEQ.w JL_0_676E
0002522E <AmiBlitz3.ab3@8026>   MOVEQ.l #$00,D3
00025232 <AmiBlitz3.ab3@8027> BRA.w JL_0_6726
00025236 <AmiBlitz3.ab3@8030>    BSR.w get1bytemain
0002523A <AmiBlitz3.ab3@8031>    BNE.w JL_0_671C
0002523C <AmiBlitz3.ab3@8034>   TST.w D3
00025240 <AmiBlitz3.ab3@8035>    BNE.w brackets_                                         ;syntax error brackets
00025244 <AmiBlitz3.ab3@8036> BRA.w JL_0_676C
0002524A <AmiBlitz3.ab3@8039>    MOVE.w instringon,D4
0002524E <AmiBlitz3.ab3@8041>      BEQ JL_0_6726
00025250 <AmiBlitz3.ab3@8044>     MOVEQ #0,d0
00025252 <AmiBlitz3.ab3@8045>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025258 <AmiBlitz3.ab3@8046>      MOVE.w d0,lastchar
0002525C <AmiBlitz3.ab3@8047>      BEQ ready
00025260 <AmiBlitz3.ab3@8048>      CMP.b #$22,d0
00025264 <AmiBlitz3.ab3@8049>      BNE 'l1
0002526A <AmiBlitz3.ab3@8050>      NOT.w instringon
0002526E <AmiBlitz3.ab3@8051> BRA JL_0_670A
00025272 <AmiBlitz3.ab3@8054>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025276 <AmiBlitz3.ab3@8055>            BNE 'l10
0002527A <AmiBlitz3.ab3@8056>            CMP.b #"@",(a5)
0002527E <AmiBlitz3.ab3@8057>            BNE 'l10
00025284 <AmiBlitz3.ab3@8060>            TST.w ininclude
00025288 <AmiBlitz3.ab3@8061>            BNE 'inc
0002528E <AmiBlitz3.ab3@8062>            MOVE.l sourceline3,a5
00025294 <AmiBlitz3.ab3@8063>            CMP.l #0,a5
00025298 <AmiBlitz3.ab3@8064>            BNE 'l11t
0002529E <AmiBlitz3.ab3@8065>            MOVEA.l sourceline,A5
000252A0 <AmiBlitz3.ab3@8068>            MOVEA.l (A5),A5
000252A6 <AmiBlitz3.ab3@8069>            CMP.l #0,a5
000252AA <AmiBlitz3.ab3@8070>            BEQ JL_0_676C
000252B0 <AmiBlitz3.ab3@8071>            MOVE.l a5,sourceline3
000252B4 <AmiBlitz3.ab3@8072>            LEA $9(A5),A5
000252B8 <AmiBlitz3.ab3@8073> BRA 'l11
000252BA <AmiBlitz3.ab3@8076>            ADDQ.l #1,a5
000252BC <AmiBlitz3.ab3@8077>            TST.b (a5)
000252C0 <AmiBlitz3.ab3@8078>            BNE 'inc
000252C2 <AmiBlitz3.ab3@8082>            ADDQ.l #1,a5
000252C4 <AmiBlitz3.ab3@8083>            TST.b (a5)
000252C8 <AmiBlitz3.ab3@8084>            BEQ illeolerr
000252CA <AmiBlitz3.ab3@8085>            MOVE.l a5,-(a7)
000252CE <AmiBlitz3.ab3@8088>       CMP.b #" ",(a5)+
000252D2 <AmiBlitz3.ab3@8089>       BEQ 'l110
000252D8 <AmiBlitz3.ab3@8090>        CMP.b #";",-1(a5)
000252DA <AmiBlitz3.ab3@8091>        MOVE.l (a7)+,a5
000252DE <AmiBlitz3.ab3@8092>        BEQ 'l111
000252E2 <AmiBlitz3.ab3@8093> BRA JL_0_670A
000252E6 <AmiBlitz3.ab3@8096>    CMP.w #$29,D0
000252EA <AmiBlitz3.ab3@8097>    BNE.w JL_0_673A
000252EC <AmiBlitz3.ab3@8098>   TST.w D3
000252F0 <AmiBlitz3.ab3@8099>    BEQ.w JL_0_676C
000252F2 <AmiBlitz3.ab3@8102>   SUBQ.w #1,D3
000252F6 <AmiBlitz3.ab3@8103> BRA.w JL_0_670A
000252FA <AmiBlitz3.ab3@8106>    CMP.w #$7D,D0
000252FE <AmiBlitz3.ab3@8107>    BEQ.w JL_0_6734
00025302 <AmiBlitz3.ab3@8108>   CMP.w #$28,D0
00025306 <AmiBlitz3.ab3@8109>    BNE.w JL_0_6750
00025308 <AmiBlitz3.ab3@8112>    ADDQ.w #1,D3
0002530C <AmiBlitz3.ab3@8113> BRA.w JL_0_670A
00025310 <AmiBlitz3.ab3@8116>   CMP.w #$7B,D0
00025314 <AmiBlitz3.ab3@8117>    BEQ.w JL_0_674A
00025318 <AmiBlitz3.ab3@8118>   CMP.w #$2C,D0
0002531C <AmiBlitz3.ab3@8119>    BNE.w JL_0_670A
0002531E <AmiBlitz3.ab3@8120>   TST.w D3
00025322 <AmiBlitz3.ab3@8121>    BNE.w JL_0_670A
00025324 <AmiBlitz3.ab3@8122>   ADDQ.w #1,D1
00025328 <AmiBlitz3.ab3@8123> BRA.w JL_0_670A
0002532A <AmiBlitz3.ab3@8126>   ADDQ.w #1,D1
00025330 <AmiBlitz3.ab3@8129>   CLR.l sourceline3
0002533A <AmiBlitz3.ab3@8130>   MOVE.l oldline,linenumat
0002533E <AmiBlitz3.ab3@8131> BRA.w resloc
00025344 <AmiBlitz3.ab3@8135>    CLR.w numreps
00025346 <AmiBlitz3.ab3@8136>   MOVE.w D1,D0
0002534A <AmiBlitz3.ab3@8137>   ANDI.w #$FF00,D0
0002534E <AmiBlitz3.ab3@8138>    BEQ.w fetchlibps__noreps
00025350 <AmiBlitz3.ab3@8139>   LSR.w #8,D0
00025352 <AmiBlitz3.ab3@8140>   LSR.w #4,D0
00025356 <AmiBlitz3.ab3@8141>    BEQ.w fetchlibps__skip
00025358 <AmiBlitz3.ab3@8142>   SUB.b D0,D1
00025362 <AmiBlitz3.ab3@8143>    MOVE.w regnum,regnumfunc
00025368 <AmiBlitz3.ab3@8144>    MOVE.b funcparloop,-(a7)
00025370 <AmiBlitz3.ab3@8145>    MOVE.b #0,funcparloop
00025376 <AmiBlitz3.ab3@8146>    MOVE.l leftsidetype,-(a7)
0002537C <AmiBlitz3.ab3@8147>    MOVE.l rightsidetype,-(a7)
00025382 <AmiBlitz3.ab3@8148>    CLR.l leftsidetype
00025388 <AmiBlitz3.ab3@8149>    CLR.l rightsidetype
0002538E <AmiBlitz3.ab3@8150>    MOVE.b blitzparloop,-(a7)
00025396 <AmiBlitz3.ab3@8151>    MOVE.b #1,blitzparloop
0002539A <AmiBlitz3.ab3@8152>    BSR.w fetchpees2
000253A0 <AmiBlitz3.ab3@8153>    MOVE.b (a7)+,blitzparloop
000253A6 <AmiBlitz3.ab3@8154>    MOVE.l (a7)+,rightsidetype
000253AC <AmiBlitz3.ab3@8155>    MOVE.l (a7)+,leftsidetype
000253B2 <AmiBlitz3.ab3@8156>    MOVE.b (a7)+,funcparloop
000253B6 <AmiBlitz3.ab3@8157>   CMP.w #$2C,D0
000253BA <AmiBlitz3.ab3@8158>    BNE.w syntaxerr
000253BC <AmiBlitz3.ab3@8161>   MOVE.w D1,D2
000253BE <AmiBlitz3.ab3@8162>   LSR.w #8,D2
000253C2 <AmiBlitz3.ab3@8163>   ANDI.w #$7,D2
000253C4 <AmiBlitz3.ab3@8166>    CMP.b D2,D1
000253C8 <AmiBlitz3.ab3@8167>    BCS.w fetchlibps__repsdone
000253CA <AmiBlitz3.ab3@8168>   SUB.b D2,D1
000253CE <AmiBlitz3.ab3@8169>   MOVEM.l D2/A2,-(A7)
000253D0 <AmiBlitz3.ab3@8170>   MOVE.w D2,D0
000253D6 <AmiBlitz3.ab3@8171>   MOVE.b funcparloop,-(a7)
000253DE <AmiBlitz3.ab3@8172>   MOVE.b #0,funcparloop
000253E4 <AmiBlitz3.ab3@8173>   MOVE.l leftsidetype,-(a7)
000253EA <AmiBlitz3.ab3@8174>   MOVE.l rightsidetype,-(a7)
000253F0 <AmiBlitz3.ab3@8175>   CLR.l leftsidetype
000253F6 <AmiBlitz3.ab3@8176>   CLR.l rightsidetype
000253FC <AmiBlitz3.ab3@8177>   MOVE.b blitzparloop,-(a7)
00025404 <AmiBlitz3.ab3@8178>   MOVE.b #1,blitzparloop
00025408 <AmiBlitz3.ab3@8179>   BSR.w fetchpees4
0002540E <AmiBlitz3.ab3@8180>   MOVE.b (a7)+,blitzparloop
00025414 <AmiBlitz3.ab3@8181>   MOVE.l (a7)+,rightsidetype
0002541A <AmiBlitz3.ab3@8182>   MOVE.l (a7)+,leftsidetype
00025420 <AmiBlitz3.ab3@8183>   MOVE.b (a7)+,funcparloop
00025424 <AmiBlitz3.ab3@8184>   MOVEM.l (A7)+,D2/A2
0002542A <AmiBlitz3.ab3@8185>   ADDQ.w #1,numreps
0002542E <AmiBlitz3.ab3@8186> BRA.w fetchlibps__rloop
00025434 <AmiBlitz3.ab3@8189>    MOVE.w numreps,D3
00025438 <AmiBlitz3.ab3@8190>    BEQ.w syntaxerr
0002543A <AmiBlitz3.ab3@8191>   ADDA.w D2,A2
0002543E <AmiBlitz3.ab3@8192>   ANDI.w #$FF,D1
00025442 <AmiBlitz3.ab3@8193>    BEQ.w fetchlibps__done
00025446 <AmiBlitz3.ab3@8194>   CMP.w #$2C,D0
0002544A <AmiBlitz3.ab3@8195>    BNE.w syntaxerr
0002544C <AmiBlitz3.ab3@8198>    MOVE.w D1,D0
00025450 <AmiBlitz3.ab3@8199>    BNE.w fetchpees2b
00025452 <AmiBlitz3.ab3@8202> RTS
00025458 <AmiBlitz3.ab3@8205>   MOVE.b funcparloop,-(a7)
0002545E <AmiBlitz3.ab3@8206>   MOVE.l leftsidetype,-(a7)
00025464 <AmiBlitz3.ab3@8207>   MOVE.l rightsidetype,-(a7)
0002546A <AmiBlitz3.ab3@8208>   CLR.l leftsidetype
00025470 <AmiBlitz3.ab3@8209>   CLR.l rightsidetype
00025478 <AmiBlitz3.ab3@8210>   MOVE.b #0,funcparloop
0002547E <AmiBlitz3.ab3@8211>   MOVE.b blitzparloop,-(a7)
00025486 <AmiBlitz3.ab3@8212>   MOVE.b #1,blitzparloop
0002548A <AmiBlitz3.ab3@8213>   BSR.w fetchpees2
00025490 <AmiBlitz3.ab3@8214>   MOVE.b (a7)+,blitzparloop
00025496 <AmiBlitz3.ab3@8215>   MOVE.l (a7)+,rightsidetype
0002549C <AmiBlitz3.ab3@8216>   MOVE.l (a7)+,leftsidetype
000254A2 <AmiBlitz3.ab3@8217>   MOVE.b (a7)+,funcparloop
000254A4 <AmiBlitz3.ab3@8218> RTS
000254A8 <AmiBlitz3.ab3@8222> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
000254AA <AmiBlitz3.ab3@8225> partostack:  Ds.w 1                                        ;pmode org source
000254AC <AmiBlitz3.ab3@8229>   MOVEQ.l #$01,D2
000254B0 <AmiBlitz3.ab3@8230> BRA.w fetchpees3
000254B2 <AmiBlitz3.ab3@8233>   MOVEQ.l #$00,D2
000254B6 <AmiBlitz3.ab3@8236>   ANDI.w #$F,D0
000254BC <AmiBlitz3.ab3@8244>   CLR.w parnum
000254BE <AmiBlitz3.ab3@8245>   MOVE.w D1,-(A7)
000254C2 <AmiBlitz3.ab3@8246>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
000254C8 <AmiBlitz3.ab3@8247>   MOVE.w D2,partostack
000254CA <AmiBlitz3.ab3@8248>   MOVE.w D0,-(A7)
000254CE <AmiBlitz3.ab3@8249>   CMP.w #"@@",(a5)                                         ;was l15
000254D2 <AmiBlitz3.ab3@8250>   BNE fetchpees__loop
000254D8 <AmiBlitz3.ab3@8251>   TST.w ininclude                                          ;merge macrolines
000254DC <AmiBlitz3.ab3@8252>   BNE errorjoin
000254E2 <AmiBlitz3.ab3@8253>        MOVEA.l sourceline,A5
000254E4 <AmiBlitz3.ab3@8256>            MOVEA.l (A5),A5
000254EA <AmiBlitz3.ab3@8257>            MOVE.l a5,sourceline
000254EE <AmiBlitz3.ab3@8258>            LEA $9(A5),A5
000254F4 <AmiBlitz3.ab3@8259>            ADDQ.l #1,linenumat
000254F6 <AmiBlitz3.ab3@8263>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
000254FA <AmiBlitz3.ab3@8264>    BNE.w fetchpees__skip0
00025500 <AmiBlitz3.ab3@8265>   MOVE.w userp,D2                                          ;user selected type
00025502 <AmiBlitz3.ab3@8267>    MOVE.l A2,-(A7)
00025508 <AmiBlitz3.ab3@8268>    ADDQ.w #1,parnum
0002550E <AmiBlitz3.ab3@8269>    TST.b funccall
00025512 <AmiBlitz3.ab3@8270>    BEQ fetchpees__skip0_l1
0002551A <AmiBlitz3.ab3@8271>    CMP.w #6,parnum
0002551E <AmiBlitz3.ab3@8272>    BLE fetchpees__skip0_l1
00025522 <AmiBlitz3.ab3@8273>    CMP.w #7,d2
00025528 <AmiBlitz3.ab3@8279>    TST.b fpu
0002552C <AmiBlitz3.ab3@8280>    BEQ fetchpees__skip0_old
00025532 <AmiBlitz3.ab3@8281>    TST.w regnumfunc
00025536 <AmiBlitz3.ab3@8282>    BEQ fetchpees__skip0_old
0002553C <AmiBlitz3.ab3@8283>    CMP.w #$48e7,-4(a4)
00025540 <AmiBlitz3.ab3@8284>    BNE fetchpees__skip0_old
00025542 <AmiBlitz3.ab3@8285>    MOVEQ #0,d1
00025548 <AmiBlitz3.ab3@8286>    MOVE.w regnum,d1
0002554E <AmiBlitz3.ab3@8287>    CMP regnumfunc,d1                                       ;fpu reg function save
00025552 <AmiBlitz3.ab3@8288>    BGE fetchpees__skip0_old
00025554 <AmiBlitz3.ab3@8289>    ASL.w #7,d1
00025556 <AmiBlitz3.ab3@8290>    MOVE.l d0,-(a7)
0002555C <AmiBlitz3.ab3@8291>    MOVE.w regnumfunc,d0
00025562 <AmiBlitz3.ab3@8292>    CLR.w regmask
00025568 <AmiBlitz3.ab3@8294>    BSET d0,regmask
0002556A <AmiBlitz3.ab3@8295>    SUBQ #1,d0
0002556E <AmiBlitz3.ab3@8296>    BNE fetchpees__skip0_loop
00025570 <AmiBlitz3.ab3@8297>     MOVEQ #0,d0
00025576 <AmiBlitz3.ab3@8300>       BTST d0,regmask
0002557A <AmiBlitz3.ab3@8301>       BEQ fetchpees__skip0_noa7
0002557C <AmiBlitz3.ab3@8302>       MOVEQ #0,d1
0002557E <AmiBlitz3.ab3@8303>       MOVE.w d0,d1
00025580 <AmiBlitz3.ab3@8304>       SUBQ.w #1,d1
00025582 <AmiBlitz3.ab3@8305>       ASL #7,d1
00025588 <AmiBlitz3.ab3@8306>       OR.l #$f2277400,d1                                   ;fmove.d
0002558C <AmiBlitz3.ab3@8308>       BSR writelong
00025592 <AmiBlitz3.ab3@8310>       ADDQ.l #2,stacktrack
00025598 <AmiBlitz3.ab3@8311>       MOVE.l stacktrack,d1
0002559E <AmiBlitz3.ab3@8312>       CMP.l #180,d1
000255A2 <AmiBlitz3.ab3@8313>       BGT conmemerr                                        ;formel too complex
000255A4 <AmiBlitz3.ab3@8314>       MOVE.l a0,-(a7)
000255AA <AmiBlitz3.ab3@8315>       LEA fpustackbase,a0
000255B2 <AmiBlitz3.ab3@8316>       MOVE.w regmask,0(a0,d1)
000255B4 <AmiBlitz3.ab3@8317>       MOVE.l (a7)+,a0
000255B6 <AmiBlitz3.ab3@8320>       ADDQ.w #1,d0
000255BC <AmiBlitz3.ab3@8321>       CMP.w regnumfunc,d0
000255C0 <AmiBlitz3.ab3@8322>       BLE fetchpees__skip0_loop2
000255C2 <AmiBlitz3.ab3@8325>       MOVE.l (a7)+,d0
000255C8 <AmiBlitz3.ab3@8328>      MOVE.l currentfunccall,-(a7)
000255CE <AmiBlitz3.ab3@8329>      MOVE.w parnum,-(a7)
000255D4 <AmiBlitz3.ab3@8330>      TST.l rightsidetype
000255D8 <AmiBlitz3.ab3@8331>      BSR.w JL_0_6836
000255DE <AmiBlitz3.ab3@8332>      MOVE.w (a7)+,parnum
000255E4 <AmiBlitz3.ab3@8334>    MOVE.l (a7)+,currentfunccall
000255EA <AmiBlitz3.ab3@8336>    TST.b typecheck                            ;typecheck for function call
000255EE <AmiBlitz3.ab3@8337>    BEQ 'notypecheck
000255F4 <AmiBlitz3.ab3@8338>    TST.b notypecheck
000255F8 <AmiBlitz3.ab3@8339>    BNE 'notypecheck
000255FE <AmiBlitz3.ab3@8340>    TST.b blitzparloop
00025602 <AmiBlitz3.ab3@8341>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002560C <AmiBlitz3.ab3@8342>    CMP.l #0,currentfunccall
00025610 <AmiBlitz3.ab3@8343>    BEQ 'isblitzlibcall
00025614 <AmiBlitz3.ab3@8344>    MOVEM.l a0/a1,-(a7)
0002561A <AmiBlitz3.ab3@8345>    MOVE.l currentfunccall,a0
00025620 <AmiBlitz3.ab3@8346>    MOVE.w parnum,d1
00025626 <AmiBlitz3.ab3@8347>    TST.b isconstantvalue
0002562A <AmiBlitz3.ab3@8348>    BEQ 'noconstant
00025634 <AmiBlitz3.ab3@8349>    CMP.l #0,lastconstantvalue
00025638 <AmiBlitz3.ab3@8350>    BEQ 'isnull
0002563C <AmiBlitz3.ab3@8352>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00025642 <AmiBlitz3.ab3@8353>    CMP.l #0,a0
00025646 <AmiBlitz3.ab3@8354>    BEQ 'notype
0002564E <AmiBlitz3.ab3@8355>    CMP.l #$100,4(a0)
00025652 <AmiBlitz3.ab3@8356>    BLE 'notype
00025658 <AmiBlitz3.ab3@8357>    MOVE.l lasttoken,d1
0002565C <AmiBlitz3.ab3@8358>    CMP.w #$b581,d1                   ; ok, when token for null
00025660 <AmiBlitz3.ab3@8359>    BEQ 'isnull
00025666 <AmiBlitz3.ab3@8360>    TST.l typetocast
0002566A <AmiBlitz3.ab3@8361>    BEQ 'nocast
00025670 <AmiBlitz3.ab3@8362>    MOVE.l typetocast,a1
00025674 <AmiBlitz3.ab3@8363>    BRA 'typecheck
0002567A <AmiBlitz3.ab3@8365>    MOVE.l rightsidetype,a1
00025680 <AmiBlitz3.ab3@8366>    CMP.l #0,a1
00025684 <AmiBlitz3.ab3@8367>    BEQ 'notype
0002568C <AmiBlitz3.ab3@8368> 'typecheck   CMP.l #$100,4(a1)
0002568E <AmiBlitz3.ab3@8370>    CMP.l a0,a1
00025692 <AmiBlitz3.ab3@8371>    BEQ 'ok
0002569A <AmiBlitz3.ab3@8373>    CMP.l #$100,4(a1)                 ; is a type here
0002569E <AmiBlitz3.ab3@8374>    BLE 'error
000256A2 <AmiBlitz3.ab3@8375>    MOVE.l 4(a1),a1                   ; load the address of type.
000256A6 <AmiBlitz3.ab3@8376>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000256AA <AmiBlitz3.ab3@8377>    BEQ 'ok
000256B0 <AmiBlitz3.ab3@8378> 'error: JMP   error_convert_types    ; for syntax 4
000256B6 <AmiBlitz3.ab3@8382>    CLR.l typetocast
000256BA <AmiBlitz3.ab3@8383>    MOVEM.l (a7)+,a0/a1
000256C0 <AmiBlitz3.ab3@8387>    CLR.l lastfunction
000256C6 <AmiBlitz3.ab3@8388>    TST.b fpu
000256CA <AmiBlitz3.ab3@8389>    BEQ fetchpees__skip0_noprint
000256CC <AmiBlitz3.ab3@8390>   MOVE.l (a7),a2
000256CE <AmiBlitz3.ab3@8391>   ADDQ.l #1,a2
000256D2 <AmiBlitz3.ab3@8392>    CMP.b #5,d2
000256D6 <AmiBlitz3.ab3@8393>   BNE fetchpees__skip0_noprint
000256DC <AmiBlitz3.ab3@8394>   CMP.b #$5d,24(a2)
000256E0 <AmiBlitz3.ab3@8395>   BNE fetchpees__skip0_noprint
000256E6 <AmiBlitz3.ab3@8396>   CMP.b #$81,25(a2)
000256EA <AmiBlitz3.ab3@8397>   BLT fetchpees__skip0_noprint
000256F0 <AmiBlitz3.ab3@8398>   CMP.b #$86,25(a2)
000256F4 <AmiBlitz3.ab3@8399>   BEQ fetchpees__skip0_ok
000256FA <AmiBlitz3.ab3@8400>   CMP.b #$87,25(a2)
000256FE <AmiBlitz3.ab3@8401>   BEQ fetchpees__skip0_ok
00025704 <AmiBlitz3.ab3@8402>   CMP.b #$88,25(a2)
00025708 <AmiBlitz3.ab3@8403>   BEQ fetchpees__skip0_ok
0002570E <AmiBlitz3.ab3@8404>   CMP.b #$83,25(a2)
00025712 <AmiBlitz3.ab3@8405>   BGT fetchpees__skip0_noprint
00025718 <AmiBlitz3.ab3@8408>   MOVE.l destpointer,a4
0002571E <AmiBlitz3.ab3@8409>   CMP.w #$2f00,-2(a4)
00025722 <AmiBlitz3.ab3@8410>   BNE fetchpees__skip0_noprint
00025728 <AmiBlitz3.ab3@8411>   SUBQ.l #2,destpointer
0002572E <AmiBlitz3.ab3@8413>   MOVE.l #$f2277400,d1
00025732 <AmiBlitz3.ab3@8414>   BSR writelong                                            ;fmove.d fp0,-(a7)
00025738 <AmiBlitz3.ab3@8415>   ADDQ #4,a2offset
0002573E <AmiBlitz3.ab3@8433>   CLR.b optistring
00025740 <AmiBlitz3.ab3@8434>   MOVEA.l (A7)+,A2
00025744 <AmiBlitz3.ab3@8435>    CMP.w #"@",d0
00025748 <AmiBlitz3.ab3@8436>   BNE fetchpees__skip0_l10
0002574C <AmiBlitz3.ab3@8437>    CMP.b #"@",(a5)
00025750 <AmiBlitz3.ab3@8438>   BNE fetchpees__skip0_l10
00025756 <AmiBlitz3.ab3@8439>   TST.w ininclude
0002575A <AmiBlitz3.ab3@8440>   BNE errorjoin
00025760 <AmiBlitz3.ab3@8441>   MOVEA.l sourceline,A5
00025762 <AmiBlitz3.ab3@8442>            MOVEA.l (A5),A5
00025768 <AmiBlitz3.ab3@8443>            MOVE.l a5,sourceline
0002576E <AmiBlitz3.ab3@8444>            ADDQ.l #1,linenumat
00025772 <AmiBlitz3.ab3@8445>            LEA $9(A5),A5
00025774 <AmiBlitz3.ab3@8446>            MOVEQ #0,d0
00025778 <AmiBlitz3.ab3@8447>            BSR get1bytemain
0002577C <AmiBlitz3.ab3@8450>    CMP.b #32,(a5)+ ;for space after a ,
00025780 <AmiBlitz3.ab3@8451>    BEQ fetchpees__skip0_l10:
00025782 <AmiBlitz3.ab3@8452>    SUBQ.l #1,a5
00025786 <AmiBlitz3.ab3@8454>    CMP.w #"@@",(a5)                                        ;if merge
0002578A <AmiBlitz3.ab3@8455>    BNE fetchpees__skip0_l15
0002578E <AmiBlitz3.ab3@8456>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00025794 <AmiBlitz3.ab3@8457>    JSR mergeline
00025798 <AmiBlitz3.ab3@8458>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
0002579A <AmiBlitz3.ab3@8478>       SUBQ.w #1,(A7)
0002579E <AmiBlitz3.ab3@8479>    BEQ.w fetchpees__done
000257A2 <AmiBlitz3.ab3@8481>     CMP.w #$2C,D0
000257A6 <AmiBlitz3.ab3@8483>    BNE overloadfunc
000257AA <AmiBlitz3.ab3@8484> BRA.w fetchpees__loop
000257AC <AmiBlitz3.ab3@8487>   ADDQ.w #2,A7
000257B2 <AmiBlitz3.ab3@8488>   MOVE.w (A7)+,partostack
000257B4 <AmiBlitz3.ab3@8489>   MOVE.w (A7)+,D1
000257BA <AmiBlitz3.ab3@8490>   CLR.b isconstantvalue
000257C4 <AmiBlitz3.ab3@8491>   MOVE.l currentfunccall,lastfunction
000257CA <AmiBlitz3.ab3@8492>   CLR.b funccall
000257D0 <AmiBlitz3.ab3@8493>   CLR.l currentfunccall
000257D2 <AmiBlitz3.ab3@8494> RTS
000257D8 <AmiBlitz3.ab3@8498>   CLR.b funccall
000257DE <AmiBlitz3.ab3@8499>   MOVE.w regnum,d1
000257E4 <AmiBlitz3.ab3@8500>   MOVE.l currentfunccall,a4
000257E8 <AmiBlitz3.ab3@8501>   CMP.b $20(a4),d1                                         ;increase if more pars
000257EC <AmiBlitz3.ab3@8502>   BLT notparerr
000257EE <AmiBlitz3.ab3@8505>   MOVE.b (a2)+,d2
000257F6 <AmiBlitz3.ab3@8506>   ADD.w #1,parnum
000257FC <AmiBlitz3.ab3@8507>   TST.b fpu
00025800 <AmiBlitz3.ab3@8508>   BEQ 'nofpu
00025804 <AmiBlitz3.ab3@8509>   CMP.b #5,d2
00025808 <AmiBlitz3.ab3@8510>   BNE 'nofpu
0002580A <AmiBlitz3.ab3@8511>   MOVEQ #0,d1
00025810 <AmiBlitz3.ab3@8512>   MOVE.w regnum,d1
00025818 <AmiBlitz3.ab3@8513>   CMP.w #6,regnum
0002581C <AmiBlitz3.ab3@8514>   BLT 'nostack2
00025820 <AmiBlitz3.ab3@8519>   MOVE.w #$2c3c,d1
00025824 <AmiBlitz3.ab3@8520>   BSR writeword
0002582A <AmiBlitz3.ab3@8521>   MOVE.l #$bf800000,d1
0002582E <AmiBlitz3.ab3@8522>   BSR writelong
00025832 <AmiBlitz3.ab3@8523>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025838 <AmiBlitz3.ab3@8524>   ADD.w parnum,d1
0002583E <AmiBlitz3.ab3@8525>   JSR Atokejsr
00025844 <AmiBlitz3.ab3@8526>   TST.w dontwrite
00025848 <AmiBlitz3.ab3@8527>   BNE 'l1
0002584E <AmiBlitz3.ab3@8528>   MOVE.l data1start,d1
00025854 <AmiBlitz3.ab3@8529>   MOVE.l destpointer,a4
00025858 <AmiBlitz3.ab3@8530>   ADD.l d1,-4(a4)
0002585E <AmiBlitz3.ab3@8531>   MOVE.l destpointer,d1
00025860 <AmiBlitz3.ab3@8532>   SUBQ.l #4,d1
00025866 <AmiBlitz3.ab3@8533>   SUB.l destbufferstart,d1
00025868 <AmiBlitz3.ab3@8534>   MOVE.l d2,-(a7)
0002586A <AmiBlitz3.ab3@8535>   MOVE.l d1,d2
00025870 <AmiBlitz3.ab3@8536>   JSR addhunkoffset
00025872 <AmiBlitz3.ab3@8537>   MOVE.l (a7)+,d2
00025876 <AmiBlitz3.ab3@8538> BRA 'l1
00025878 <AmiBlitz3.ab3@8541>   ASL.l #7,d1
0002587E <AmiBlitz3.ab3@8542>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00025882 <AmiBlitz3.ab3@8543>   BSR writelong
00025884 <AmiBlitz3.ab3@8544>   MOVEQ #-1,d1                                             ;-1
00025888 <AmiBlitz3.ab3@8545>   BSR writeword
0002588C <AmiBlitz3.ab3@8546> BRA 'l1
00025892 <AmiBlitz3.ab3@8549>   MOVE.w regnum,d1
0002589A <AmiBlitz3.ab3@8550>   CMP.w #6,regnum
0002589E <AmiBlitz3.ab3@8551>   BLT 'nostack
000258A2 <AmiBlitz3.ab3@8556>   CMP.b #2,d2
000258A6 <AmiBlitz3.ab3@8557>   BGT 'nw
000258AA <AmiBlitz3.ab3@8558> BRA 'nos
000258AE <AmiBlitz3.ab3@8567>   CMP.w #7,d2
000258B2 <AmiBlitz3.ab3@8568>   BNE 'nos
000258B8 <AmiBlitz3.ab3@8569>   ADDQ #4,a2offset
000258BE <AmiBlitz3.ab3@8571>     MOVE.l #$48780000,d1
000258C2 <AmiBlitz3.ab3@8572>     BSR writelong
000258C8 <AmiBlitz3.ab3@8573>     ADDQ.w #4,a2offset
000258CC <AmiBlitz3.ab3@8574>     MOVE.w #$2f3c,d1
000258D0 <AmiBlitz3.ab3@8575>     BSR writeword
000258D6 <AmiBlitz3.ab3@8576>     MOVE.l #-1,d1
000258DA <AmiBlitz3.ab3@8577>     BSR writelong
000258DE <AmiBlitz3.ab3@8578>   BRA 'l1
000258E2 <AmiBlitz3.ab3@8582>   CMP.b #4,d2
000258E6 <AmiBlitz3.ab3@8583>       BNE 'noq
000258EA <AmiBlitz3.ab3@8584>       MOVE.w #$2c3c,d1
000258EE <AmiBlitz3.ab3@8585>       BSR writeword
000258F4 <AmiBlitz3.ab3@8586>       MOVE.l #$ffff0000,d1
000258F8 <AmiBlitz3.ab3@8587>       BSR writelong
000258FC <AmiBlitz3.ab3@8588> BRA 'noq2
00025900 <AmiBlitz3.ab3@8591>      CMP.b #5,d2
00025904 <AmiBlitz3.ab3@8592>      BNE 'nof
00025908 <AmiBlitz3.ab3@8593>       MOVE.w #$2c3c,d1
0002590C <AmiBlitz3.ab3@8594>       BSR writeword
00025912 <AmiBlitz3.ab3@8595>       MOVE.l #$800000c1,d1
00025916 <AmiBlitz3.ab3@8596>       BSR writelong
0002591A <AmiBlitz3.ab3@8597> BRA 'noq2
0002591E <AmiBlitz3.ab3@8600>   MOVE.w #$7cff,d1
00025922 <AmiBlitz3.ab3@8601>   BSR writeword
00025926 <AmiBlitz3.ab3@8604>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002592C <AmiBlitz3.ab3@8605>   ADD.w parnum,d1
00025932 <AmiBlitz3.ab3@8606>   JSR Atokejsr
00025938 <AmiBlitz3.ab3@8607>    TST.w dontwrite
0002593C <AmiBlitz3.ab3@8608>    BNE 'l1
00025942 <AmiBlitz3.ab3@8609>    MOVE.l data1start,d1
00025948 <AmiBlitz3.ab3@8610>    MOVE.l destpointer,a4
0002594C <AmiBlitz3.ab3@8611>    ADD.l d1,-4(a4)
00025952 <AmiBlitz3.ab3@8612>    MOVE.l destpointer,d1
00025954 <AmiBlitz3.ab3@8613>    SUBQ.l #4,d1
0002595A <AmiBlitz3.ab3@8614>    SUB.l destbufferstart,d1
0002595C <AmiBlitz3.ab3@8615>    MOVE.l d2,-(a7)
0002595E <AmiBlitz3.ab3@8616>    MOVE.l d1,d2
00025964 <AmiBlitz3.ab3@8617>    JSR addhunkoffset
00025966 <AmiBlitz3.ab3@8618>    MOVE.l (a7)+,d2
0002596A <AmiBlitz3.ab3@8619> BRA 'l1
0002596C <AmiBlitz3.ab3@8622>   ASL.l #8,d1
0002596E <AmiBlitz3.ab3@8623>   ASL.l #1,d1
00025974 <AmiBlitz3.ab3@8624>   OR.l #$203c,d1                                           ;-1
00025978 <AmiBlitz3.ab3@8625>   BSR writeword
0002597E <AmiBlitz3.ab3@8626>   MOVE.l #-1,d1
00025982 <AmiBlitz3.ab3@8627>   CMP.b #4,d2
00025986 <AmiBlitz3.ab3@8628>   BNE 'nq1
0002598C <AmiBlitz3.ab3@8629>   MOVE.l #$ffff0000,d1
00025990 <AmiBlitz3.ab3@8632>   CMP.b #5,d2
00025994 <AmiBlitz3.ab3@8633>   BNE 'nof2
0002599A <AmiBlitz3.ab3@8634>   TST.b fpu
0002599E <AmiBlitz3.ab3@8635>   BNE 'nof2
000259A4 <AmiBlitz3.ab3@8636>   MOVE.l #$800000c1,d1
000259A8 <AmiBlitz3.ab3@8639>    BSR writelong
000259AC <AmiBlitz3.ab3@8640>    CMP.b #7,d2
000259B0 <AmiBlitz3.ab3@8641>    BNE 'l1
000259B6 <AmiBlitz3.ab3@8643>      MOVE.l #$48780000,d1
000259BA <AmiBlitz3.ab3@8644>      BSR writelong
000259C0 <AmiBlitz3.ab3@8646>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
000259C6 <AmiBlitz3.ab3@8647>    MOVE.l #$594f,d1                                        ; subq #4,a7
000259CA <AmiBlitz3.ab3@8648>    BSR writeword
000259CC <AmiBlitz3.ab3@8651>    SUBQ.w #1,(A7)
000259D0 <AmiBlitz3.ab3@8652>    BEQ.w fetchpees__done
000259D6 <AmiBlitz3.ab3@8653>    ADDQ.w #1,regnum
000259DA <AmiBlitz3.ab3@8654> BRA 'ol2
000259DC <AmiBlitz3.ab3@8657>    MOVE.w D2,D1
000259E0 <AmiBlitz3.ab3@8658>    ANDI.w #$40,D1
000259E6 <AmiBlitz3.ab3@8659>    MOVE.b D1,partostack
000259E8 <AmiBlitz3.ab3@8660>    TST.b D2
000259EC <AmiBlitz3.ab3@8661>     BMI.w handlevara
000259F0 <AmiBlitz3.ab3@8662>    BTST #$5,D2
000259F4 <AmiBlitz3.ab3@8663>     BNE.w handlearr
000259FA <AmiBlitz3.ab3@8664>     MOVE.w regnumstore,-(a7)
00025A00 <AmiBlitz3.ab3@8665>     MOVE.w tempregnum,-(a7)
00025A06 <AmiBlitz3.ab3@8666>     MOVE.w parnum,-(a7)
00025A0A <AmiBlitz3.ab3@8667>     BSR.w getap                                        ;recursive entry
00025A10 <AmiBlitz3.ab3@8668>     MOVE.w (a7)+,parnum
00025A16 <AmiBlitz3.ab3@8669>     MOVE.w (a7)+,tempregnum
00025A1C <AmiBlitz3.ab3@8670>     MOVE.w (a7)+,regnumstore
00025A20 <AmiBlitz3.ab3@8673>     MOVE.w partostack(PC),D1
00025A24 <AmiBlitz3.ab3@8674>     BEQ.w JL_0_6886
00025A2A <AmiBlitz3.ab3@8677>    ADDQ.w #4,a2offset
00025A30 <AmiBlitz3.ab3@8680>    MOVE.w pushdn,D1
00025A36 <AmiBlitz3.ab3@8681>    OR.w regnum,D1
00025A3A <AmiBlitz3.ab3@8682>    CMP.w #$3,D2
00025A3E <AmiBlitz3.ab3@8683>     BCC.w JL_0_6880
00025A44 <AmiBlitz3.ab3@8684>    SUBQ.w #2,a2offset
00025A48 <AmiBlitz3.ab3@8685>    ORI.w #$1000,D1
00025A4C <AmiBlitz3.ab3@8686>    BSR.w writeword
00025A4E <AmiBlitz3.ab3@8687> RTS
00025A52 <AmiBlitz3.ab3@8690>   CMP.b #7,d2
00025A56 <AmiBlitz3.ab3@8691>    BNE 'l10
00025A5E <AmiBlitz3.ab3@8692>    CMP.b #2,optistring
00025A64 <AmiBlitz3.ab3@8696>   TST.b iee
00025A68 <AmiBlitz3.ab3@8697>   BEQ 'old
00025A6C <AmiBlitz3.ab3@8698>   CMP.b #5,d2
00025A70 <AmiBlitz3.ab3@8699>   BNE 'old
00025A74 <AmiBlitz3.ab3@8702>   BSR.w writeword                                          ;write val to stack
00025A76 <AmiBlitz3.ab3@8703> RTS
00025A7C <AmiBlitz3.ab3@8706>   SUBQ.w #4,a2offset
00025A7E <AmiBlitz3.ab3@8707> RTS
00025A84 <AmiBlitz3.ab3@8710>   ADDQ.w #1,regnum
00025A86 <AmiBlitz3.ab3@8711> RTS
00025A88 <AmiBlitz3.ab3@8715>   MOVEQ.l #$03,D2
00025A8C <AmiBlitz3.ab3@8716> BRA.w JL_0_6854
00025A90 <AmiBlitz3.ab3@8720>   ANDI.w #$7,D2
00025A92 <AmiBlitz3.ab3@8721>   MOVE.w D2,-(A7)
00025A96 <AmiBlitz3.ab3@8722>    BSR.w JL_0_A916
00025A9A <AmiBlitz3.ab3@8723>   CMP.b #$7,D2                                             ;ignore pnt to $
00025A9E <AmiBlitz3.ab3@8724>    BEQ.w JL_0_68C0
00025AA2 <AmiBlitz3.ab3@8725>   BTST #$E,D2
00025AA6 <AmiBlitz3.ab3@8726>    BEQ.w JL_0_68B6
00025AAA <AmiBlitz3.ab3@8727>   MOVE.b #$3,D2                                            ;pointer to long
00025AAE <AmiBlitz3.ab3@8728> BRA.w JL_0_68C0
00025AB0 <AmiBlitz3.ab3@8731>    TST.b D2
00025AB4 <AmiBlitz3.ab3@8732>    BNE.w JL_0_68C0
00025AB8 <AmiBlitz3.ab3@8733>   MOVE.b #$3,D2
00025ABA <AmiBlitz3.ab3@8736>   MOVE.w (A7)+,D3
00025ABC <AmiBlitz3.ab3@8737>   TST.b D3
00025AC0 <AmiBlitz3.ab3@8738>    BEQ.w JL_0_68D2
00025AC2 <AmiBlitz3.ab3@8739>   CMP.b D2,D3
00025AC6 <AmiBlitz3.ab3@8740>    BEQ.w putalp
00025ACA <AmiBlitz3.ab3@8741> BRA.w mismatcherr
00025AD0 <AmiBlitz3.ab3@8744>   ADDQ.w #2,a2offset
00025AD4 <AmiBlitz3.ab3@8745>   MOVE.w ptype(PC),D1
00025AD8 <AmiBlitz3.ab3@8746>    BSR.w writeword
00025ADA <AmiBlitz3.ab3@8747>   MOVEQ.l #$00,D1
00025ADC <AmiBlitz3.ab3@8748>   MOVE.b D2,D1
00025AE0 <AmiBlitz3.ab3@8749>    BSR.w writeword
00025AE4 <AmiBlitz3.ab3@8750> BRA.w putalp
00025AE6 <AmiBlitz3.ab3@8753>    MOVE.w D2,-(A7)
00025AEA <AmiBlitz3.ab3@8754>    BSR.w JL_0_694E
00025AF0 <AmiBlitz3.ab3@8755>   BTST #$4,$1(A7)
00025AF4 <AmiBlitz3.ab3@8756>    BEQ.w JL_0_6900
00025AF8 <AmiBlitz3.ab3@8757>    BSR.w JL_0_699A
00025AFE <AmiBlitz3.ab3@8760>    BTST #$3,$1(A7)
00025B02 <AmiBlitz3.ab3@8761>    BEQ.w JL_0_690E
00025B06 <AmiBlitz3.ab3@8762>    BSR.w sendtype
00025B08 <AmiBlitz3.ab3@8765>    MOVE.w (A7)+,D2
00025B0C <AmiBlitz3.ab3@8766> BRA.w get1bytemain
00025B12 <AmiBlitz3.ab3@8769>   MOVE.w regnum,D1
00025B14 <AmiBlitz3.ab3@8770>   LSL.w #8,D1
00025B16 <AmiBlitz3.ab3@8771>   LSL.w #1,D1
00025B1A <AmiBlitz3.ab3@8772>   ORI.w #$7000,D1
00025B20 <AmiBlitz3.ab3@8773>   BTST #$0,$7(A3)
00025B24 <AmiBlitz3.ab3@8774>    BNE.w JL_0_6946                                         ;A Pointer
00025B2C <AmiBlitz3.ab3@8775>   CMPI.l #$100,$4(A2)
00025B30 <AmiBlitz3.ab3@8776>    BCC.w arrerr1                                           ;illegal type to send
00025B34 <AmiBlitz3.ab3@8777>   MOVE.b $7(A2),D1
00025B38 <AmiBlitz3.ab3@8780>   BSR.w writeword                                          ;moveq #type,d regat
00025B3A <AmiBlitz3.ab3@8781>   MOVEQ.l #$02,D2                                          ;just a word.
00025B3E <AmiBlitz3.ab3@8782> BRA.w JL_0_685C
00025B42 <AmiBlitz3.ab3@8785>   MOVE.b #$3,D1
00025B46 <AmiBlitz3.ab3@8786> BRA.w JL_0_693C
00025B4A <AmiBlitz3.ab3@8790>    BSR.w get1bytemain                                      ;write array paramter code
00025B4E <AmiBlitz3.ab3@8791>    BSR.w getparameter
00025B56 <AmiBlitz3.ab3@8792>   BTST #$1,flagmask+1
00025B5A <AmiBlitz3.ab3@8793>    BEQ.w syntaxerr
00025B5E <AmiBlitz3.ab3@8794>    BSR.w JL_0_8E3C
00025B62 <AmiBlitz3.ab3@8795>    BSR.w get1bytemain
00025B66 <AmiBlitz3.ab3@8796>   CMP.w #$29,D0                                            ;we just want a() or whatever
00025B6A <AmiBlitz3.ab3@8797>    BNE.w syntaxerr
00025B70 <AmiBlitz3.ab3@8798>   MOVE.w notshared,D1
00025B74 <AmiBlitz3.ab3@8799>    BNE.w noarrayerr
00025B7A <AmiBlitz3.ab3@8800>   MOVE.w regnum,D1
00025B7C <AmiBlitz3.ab3@8801>   LSL.w #8,D1
00025B7E <AmiBlitz3.ab3@8802>   LSL.w #1,D1
00025B82 <AmiBlitz3.ab3@8803>   OR.w fbase(PC),D1
00025B88 <AmiBlitz3.ab3@8804>    TST.b varmode
00025B8C <AmiBlitz3.ab3@8805>    BEQ 'l1
00025B90 <AmiBlitz3.ab3@8806>    BCLR #0,d1
00025B94 <AmiBlitz3.ab3@8809>    BSR.w writeword
00025B98 <AmiBlitz3.ab3@8810>   MOVE.w $4(A3),D1
00025B9C <AmiBlitz3.ab3@8811>    BSR.w writeword
00025BA0 <AmiBlitz3.ab3@8812> BRA.w putalp
00025BA6 <AmiBlitz3.ab3@8816>   MOVE.w regnum,D1
00025BA8 <AmiBlitz3.ab3@8817>   LSL.w #8,D1
00025BAA <AmiBlitz3.ab3@8818>   LSL.w #1,D1
00025BAE <AmiBlitz3.ab3@8819>   OR.w fbase(PC),D1
00025BB4 <AmiBlitz3.ab3@8820>    TST.b varmode
00025BB8 <AmiBlitz3.ab3@8821>    BEQ 'l1
00025BBC <AmiBlitz3.ab3@8822>    BCLR #0,d1
00025BC0 <AmiBlitz3.ab3@8825>    BSR.w writeword
00025BC4 <AmiBlitz3.ab3@8826>   MOVE.w $8(A3),D1
00025BC6 <AmiBlitz3.ab3@8827>   LSL.w #2,D1
00025BCC <AmiBlitz3.ab3@8828>   MOVE.w varmode,D2
00025BD0 <AmiBlitz3.ab3@8829>    BEQ.w JL_0_69BE
00025BD2 <AmiBlitz3.ab3@8830>   NEG.w D1
00025BD6 <AmiBlitz3.ab3@8833>    ADD.w $4(A3),D1
00025BDA <AmiBlitz3.ab3@8834>    BSR.w writeword
00025BE0 <AmiBlitz3.ab3@8835>   MOVE.w regnum,D1
00025BE2 <AmiBlitz3.ab3@8836>   LSL.w #8,D1
00025BE4 <AmiBlitz3.ab3@8837>   LSL.w #1,D1
00025BE8 <AmiBlitz3.ab3@8838>   MOVE.w partostack(PC),D2
00025BEC <AmiBlitz3.ab3@8839>    BNE.w JL_0_69F4
00025BF4 <AmiBlitz3.ab3@8840>   CMPI.w #$7,regnum
00025BF8 <AmiBlitz3.ab3@8841>    BCC.w JL_0_69F4
00025BFC <AmiBlitz3.ab3@8842>   OR.w pushlast(PC),D1
00025C02 <AmiBlitz3.ab3@8843>   MOVE.w regnum,D2
00025C04 <AmiBlitz3.ab3@8844>   SUBQ.w #1,D2
00025C06 <AmiBlitz3.ab3@8845>   OR.w D2,D1
00025C0A <AmiBlitz3.ab3@8846> BRA.w JL_0_69F8
00025C0E <AmiBlitz3.ab3@8849>   OR.w pushadd(PC),D1
00025C12 <AmiBlitz3.ab3@8852>   BSR.w writeword
00025C1A <AmiBlitz3.ab3@8853>   MOVE.b #$1,partostack
00025C1E <AmiBlitz3.ab3@8854> BRA.w putalp
00025C22 <AmiBlitz3.ab3@8858> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00025C24 <AmiBlitz3.ab3@8859> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00025C26 <AmiBlitz3.ab3@8860> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00025C2A <AmiBlitz3.ab3@8865>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00025C2E <AmiBlitz3.ab3@8866>    BEQ.w evalu2
00025C32 <AmiBlitz3.ab3@8867> BRA.w eval
00025C38 <AmiBlitz3.ab3@8871>   MOVEA.l libpointer,A1
00025C3C <AmiBlitz3.ab3@8874>    CMPA.w #$0,A1
00025C40 <AmiBlitz3.ab3@8875>    BEQ.w resetlibs__done
00025C46 <AmiBlitz3.ab3@8876>   MOVE.w #-1,$A(A1)
00025C4C <AmiBlitz3.ab3@8877>   BCLR #$7,$C(A1)
00025C4E <AmiBlitz3.ab3@8878>   MOVEA.l (A1),A1
00025C52 <AmiBlitz3.ab3@8879> BRA.w resetlibs__loop
00025C54 <AmiBlitz3.ab3@8882> RTS
00025C58 <AmiBlitz3.ab3@8886>   MOVE.w #$FFFE,D1
00025C5C <AmiBlitz3.ab3@8889>    BSR.w JL_0_6F38
00025C62 <AmiBlitz3.ab3@8892>   TST.w cfetchmode
00025C66 <AmiBlitz3.ab3@8893>    BEQ.w uselib3__noconst
00025C6C <AmiBlitz3.ab3@8894>   BTST #$6,$C(A1)
00025C70 <AmiBlitz3.ab3@8895>    BNE.w uselib3__constok
00025C74 <AmiBlitz3.ab3@8896> BRA.w badconerr                                            ;Can't use this Library!
00025C76 <AmiBlitz3.ab3@8899> RTS
00025C7C <AmiBlitz3.ab3@8902>    BSET #$7,$C(A1)
00025C80 <AmiBlitz3.ab3@8903>    BNE.w JL_0_6C74                                         ;already done....
00025C86 <AmiBlitz3.ab3@8904>    CMPI.w #-1,$A(A1)
00025C8A <AmiBlitz3.ab3@8905>    BNE.w JL_0_6C74                                         ;something already here
00025C90 <AmiBlitz3.ab3@8909>    TST.w dirmode
00025C94 <AmiBlitz3.ab3@8910>    BEQ.b JL_0_6A86
00025C9A <AmiBlitz3.ab3@8911>    TST.b exdebug
00025C9E <AmiBlitz3.ab3@8912>    BEQ 'l1
00025CA2 <AmiBlitz3.ab3@8913> BRA.b JL_0_6A86
00025CA8 <AmiBlitz3.ab3@8916>   BCLR #$7,$C(A1)
00025CAC <AmiBlitz3.ab3@8917> BRA.w dirliberr
00025CB2 <AmiBlitz3.ab3@8920>   MOVE.b debugmode,-(a7)
00025CB6 <AmiBlitz3.ab3@8921>   MOVEM.l D1/A0/A2,-(A7)
00025CBE <AmiBlitz3.ab3@8927>   BTST #$7,use_debugger
00025CC2 <AmiBlitz3.ab3@8928>   BNE 'debugon
00025CC4 <AmiBlitz3.ab3@8929>   CLR.w D1
00025CC8 <AmiBlitz3.ab3@8930> BRA.b 'debugoff
00025CCA <AmiBlitz3.ab3@8933>   SNE D1
00025CD0 <AmiBlitz3.ab3@8936>   MOVE.b d1,debugmode
00025CD2 <AmiBlitz3.ab3@8940>   MOVEA.l A1,A0
00025CD6 <AmiBlitz3.ab3@8941>   ADDA.l $12(A1),A0
00025CDA <AmiBlitz3.ab3@8942>   TST.w -$2(A0)
00025CDE <AmiBlitz3.ab3@8943>    BEQ.w JL_0_6AD2
00025CE2 <AmiBlitz3.ab3@8944>   MOVEM.l A0-A1,-(A7)
00025CE6 <AmiBlitz3.ab3@8945>   MOVE.w #$FB4F,D1
00025CEA <AmiBlitz3.ab3@8946>    BSR.w uselib
00025CEE <AmiBlitz3.ab3@8947>   MOVEM.l (A7)+,A0-A1
00025CF4 <AmiBlitz3.ab3@8948>   ADDQ.w #1,globalvarpointer
00025CFC <AmiBlitz3.ab3@8949>   BCLR #$0,globalvarpointer+1
00025D04 <AmiBlitz3.ab3@8950>   MOVE.w globalvarpointer,-$6(A0)
00025D0A <AmiBlitz3.ab3@8951>   ADDQ.w #4,globalvarpointer
00025D0E <AmiBlitz3.ab3@8952>   TST.l -$E(A0)
00025D12 <AmiBlitz3.ab3@8953>    BEQ.w JL_0_6AD2
00025D18 <AmiBlitz3.ab3@8954>   ADDQ.w #4,globalvarpointer
00025D20 <AmiBlitz3.ab3@8957>   MOVE.l libend,$28(A1)
00025D22 <AmiBlitz3.ab3@8958>   MOVEA.l A1,A0
00025D26 <AmiBlitz3.ab3@8959>   ADDA.l $12(A1),A0
00025D28 <AmiBlitz3.ab3@8960>   MOVE.l A1,D1
00025D2C <AmiBlitz3.ab3@8961>   ADD.l $6(A1),D1
00025D30 <AmiBlitz3.ab3@8962>   TST.l $2C(A1)
00025D34 <AmiBlitz3.ab3@8963>    BEQ.w JL_0_6AFE
00025D3A <AmiBlitz3.ab3@8965>   TST.b debugmode
00025D3E <AmiBlitz3.ab3@8966>    BNE.w JL_0_6AFE
00025D40 <AmiBlitz3.ab3@8967>   MOVE.l A1,D1
00025D44 <AmiBlitz3.ab3@8968>   ADD.l $2C(A1),D1
00025D4A <AmiBlitz3.ab3@8971>   MOVEA.l libend,A2
00025D50 <AmiBlitz3.ab3@8974>   CMPA.l data1start,A2
00025D54 <AmiBlitz3.ab3@8975>    BCS.w JL_0_6B24
00025D5C <AmiBlitz3.ab3@8976>   MOVE.w #$FFFF,dontwrite
00025D5E <AmiBlitz3.ab3@8979>   ADDQ.w #2,A0
00025D60 <AmiBlitz3.ab3@8980>   ADDQ.w #2,A2
00025D62 <AmiBlitz3.ab3@8981>   CMPA.l D1,A0
00025D66 <AmiBlitz3.ab3@8982>    BCS.w JL_0_6B16
00025D6A <AmiBlitz3.ab3@8983> BRA.w JL_0_6B2C
00025D6C <AmiBlitz3.ab3@8986>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00025D6E <AmiBlitz3.ab3@8987>   CMPA.l D1,A0
00025D72 <AmiBlitz3.ab3@8988>    BCS.w JL_0_6B04
00025D78 <AmiBlitz3.ab3@8991>   MOVE.l A2,libend
00025D7C <AmiBlitz3.ab3@8992>   MOVE.l $20(A1),D1
00025D80 <AmiBlitz3.ab3@8993>    BEQ.w JL_0_6BB8
00025D84 <AmiBlitz3.ab3@8994>   MOVEM.l D0/D2-D3,-(A7)
00025D88 <AmiBlitz3.ab3@8995>   MOVEA.l $24(A1),A0
00025D8A <AmiBlitz3.ab3@8996>   MOVEQ.l #$00,D3
00025D8C <AmiBlitz3.ab3@8999>   MOVE.l (A0)+,D2
00025D90 <AmiBlitz3.ab3@9000>   TST.l $2C(A1)
00025D94 <AmiBlitz3.ab3@9001>    BEQ.w JL_0_6B60
00025D9A <AmiBlitz3.ab3@9002>   TST.b debugmode
00025D9E <AmiBlitz3.ab3@9003>    BNE.w JL_0_6B60
00025DA2 <AmiBlitz3.ab3@9004>   CMP.l $2C(A1),D2
00025DA6 <AmiBlitz3.ab3@9005>    BCC.w JL_0_6BA0
00025DAA <AmiBlitz3.ab3@9008>   TST.w $0(A1,D2.L)
00025DAE <AmiBlitz3.ab3@9009>    BPL.w JL_0_6B72
00025DB0 <AmiBlitz3.ab3@9010>   TST.l D3
00025DB4 <AmiBlitz3.ab3@9011>    BNE.w JL_0_6B72
00025DB6 <AmiBlitz3.ab3@9012>   MOVE.l A0,D0
00025DB8 <AmiBlitz3.ab3@9013>   MOVE.l D1,D3
00025DBC <AmiBlitz3.ab3@9016>   SUB.l $12(A1),D2
00025DC0 <AmiBlitz3.ab3@9017>    BMI.w JL_0_6BA0
00025DC4 <AmiBlitz3.ab3@9018>   ADD.l $28(A1),D2
00025DC6 <AmiBlitz3.ab3@9019>   MOVE.l D2,-(A7)
00025DCC <AmiBlitz3.ab3@9020>   SUB.l destbufferstart,D2
00025DD0 <AmiBlitz3.ab3@9021>    BSR.w addhunkoffset
00025DD2 <AmiBlitz3.ab3@9022>   MOVEA.l (A7)+,A2
00025DD8 <AmiBlitz3.ab3@9023>   TST.w dontwrite
00025DDC <AmiBlitz3.ab3@9024>    BNE.w JL_0_6BA0
00025DE0 <AmiBlitz3.ab3@9025>   MOVE.l $28(A1),D2
00025DE4 <AmiBlitz3.ab3@9026>   SUB.l $12(A1),D2
00025DE6 <AmiBlitz3.ab3@9027>   ADD.l D2,(A2)
00025DE8 <AmiBlitz3.ab3@9030>    SUBQ.l #1,D1
00025DEC <AmiBlitz3.ab3@9031>    BNE.w JL_0_6B44
00025DEE <AmiBlitz3.ab3@9032>   MOVE.l D3,D2
00025DF2 <AmiBlitz3.ab3@9033>    BEQ.w JL_0_6BB4
00025DF4 <AmiBlitz3.ab3@9034>   MOVEA.l D0,A2
00025DF6 <AmiBlitz3.ab3@9035>   SUBQ.w #4,A2
00025DFA <AmiBlitz3.ab3@9036>    BSR.w JL_0_6E34
00025DFE <AmiBlitz3.ab3@9039>    MOVEM.l (A7)+,D0/D2-D3
00025E02 <AmiBlitz3.ab3@9042>    MOVEM.l (A7)+,D1/A0/A2
00025E06 <AmiBlitz3.ab3@9043>   MOVEM.l D1-D2,-(A7)
00025E0A <AmiBlitz3.ab3@9044>   TST.w $1A(A1)
00025E0E <AmiBlitz3.ab3@9045>    BNE.w JL_0_6BD0
00025E12 <AmiBlitz3.ab3@9046>   CLR.w $A(A1)
00025E16 <AmiBlitz3.ab3@9047> BRA.w JL_0_6C5E
00025E1C <AmiBlitz3.ab3@9050>   ADDQ.w #1,globalvarpointer
00025E24 <AmiBlitz3.ab3@9051>   BCLR #$0,globalvarpointer+1
00025E2C <AmiBlitz3.ab3@9052>   MOVE.w globalvarpointer,$A(A1)
00025E30 <AmiBlitz3.ab3@9053>   CMP.w #-$12D,D1
00025E34 <AmiBlitz3.ab3@9054>    BNE.w JL_0_6C16
00025E3C <AmiBlitz3.ab3@9055>   MOVE.w $A(A1),movestdn+2
00025E44 <AmiBlitz3.ab3@9056>   MOVE.w $A(A1),pusha3+2
00025E4C <AmiBlitz3.ab3@9057>   MOVE.w $A(A1),pusha32+2
00025E54 <AmiBlitz3.ab3@9058>   MOVE.w $A(A1),pulla3+2
00025E5C <AmiBlitz3.ab3@9059>   MOVE.w $A(A1),geta3+2
00025E60 <AmiBlitz3.ab3@9062>    CMP.w #-$3E9,D1
00025E64 <AmiBlitz3.ab3@9063>    BNE.w JL_0_6C3E
00025E6C <AmiBlitz3.ab3@9064>   MOVE.w $A(A1),dataget+2
00025E74 <AmiBlitz3.ab3@9065>   MOVE.w $A(A1),dataput+2
00025E7C <AmiBlitz3.ab3@9066>   MOVE.w $A(A1),rescode+6
00025E84 <AmiBlitz3.ab3@9067>   MOVE.w $A(A1),rescode2+2
00025E8A <AmiBlitz3.ab3@9070>   ADDQ.w #2,globalvarpointer
00025E8E <AmiBlitz3.ab3@9071>   TST.w $1A(A1)
00025E92 <AmiBlitz3.ab3@9072>    BMI.w JL_0_6C52
00025E98 <AmiBlitz3.ab3@9073>   ADDQ.w #2,globalvarpointer
00025E9C <AmiBlitz3.ab3@9076>   MOVEM.l D1/A1,-(A7)
00025EA0 <AmiBlitz3.ab3@9077>   BSR.w uselib2
00025EA4 <AmiBlitz3.ab3@9078>   MOVEM.l (A7)+,D1/A1
00025EA6 <AmiBlitz3.ab3@9081>   MOVE.w D1,D2
00025EAA <AmiBlitz3.ab3@9082>   MOVE.l $16(A1),D1
00025EAE <AmiBlitz3.ab3@9083>    BSR.w uselib2_org
00025EB2 <AmiBlitz3.ab3@9084>   MOVE.l $1C(A1),D1
00025EB6 <AmiBlitz3.ab3@9085>    BSR.w uselib2_org
00025EBA <AmiBlitz3.ab3@9086>   MOVEM.l (A7)+,D1-D2
00025EC0 <AmiBlitz3.ab3@9088>   MOVE.b (a7)+,debugmode
00025EC2 <AmiBlitz3.ab3@9091> RTS
00025EC4 <AmiBlitz3.ab3@9095>   MOVEQ.l #$00,D2
00025ECA <AmiBlitz3.ab3@9098>   MOVEA.l tokeslist,A2
00025ECC <AmiBlitz3.ab3@9099>   CMPA.l D2,A2
00025ED0 <AmiBlitz3.ab3@9100>    BEQ.w JL_0_6CE0
00025ED2 <AmiBlitz3.ab3@9101>   MOVE.l A2,-(A7)
00025ED4 <AmiBlitz3.ab3@9104>   MOVEQ.l #$00,D3
00025ED8 <AmiBlitz3.ab3@9107>   MOVEA.l $8(A2),A3
00025EDA <AmiBlitz3.ab3@9108>   CMPA.l D3,A3
00025EDE <AmiBlitz3.ab3@9109>    BEQ.w JL_0_6CD2
00025EE0 <AmiBlitz3.ab3@9110>   MOVE.l A3,-(A7)
00025EE4 <AmiBlitz3.ab3@9111>   MOVEM.l D2-D3/A2-A3,-(A7)
00025EE8 <AmiBlitz3.ab3@9112>   MOVE.w $4(A2),D1
00025EEC <AmiBlitz3.ab3@9113>   MOVE.w $6(A2),D2
00025EF0 <AmiBlitz3.ab3@9114>    BSR.w JL_0_6CE2
00025EF4 <AmiBlitz3.ab3@9115>   MOVEM.l (A7)+,D2-D3/A2-A3
00025EFA <AmiBlitz3.ab3@9116>   MOVE.w dontwrite,D0
00025EFE <AmiBlitz3.ab3@9117>    BEQ.w JL_0_6CBE
00025F00 <AmiBlitz3.ab3@9120>   MOVEA.l (A3),A3
00025F02 <AmiBlitz3.ab3@9121>   CMPA.l D3,A3
00025F06 <AmiBlitz3.ab3@9122>    BNE.w JL_0_6CB2
00025F0A <AmiBlitz3.ab3@9123> BRA.w JL_0_6CCC
00025F0E <AmiBlitz3.ab3@9126>   MOVEA.l $4(A3),A0
00025F10 <AmiBlitz3.ab3@9127>   MOVE.l D7,(A0)
00025F12 <AmiBlitz3.ab3@9128>   MOVEA.l (A3),A3
00025F14 <AmiBlitz3.ab3@9129>   CMPA.l D3,A3
00025F18 <AmiBlitz3.ab3@9130>    BNE.w JL_0_6CBE
00025F1A <AmiBlitz3.ab3@9133>   MOVE.l (A7)+,D3
00025F1E <AmiBlitz3.ab3@9134> BRA.w JL_0_6C88
00025F20 <AmiBlitz3.ab3@9137>    MOVEA.l (A2),A2
00025F22 <AmiBlitz3.ab3@9138>   CMPA.l D2,A2
00025F26 <AmiBlitz3.ab3@9139>    BNE.w JL_0_6C86
00025F28 <AmiBlitz3.ab3@9140>   MOVE.l (A7)+,D2
00025F2C <AmiBlitz3.ab3@9141> BRA.w JL_0_6C78
00025F2E <AmiBlitz3.ab3@9144> RTS
00025F30 <AmiBlitz3.ab3@9148>   MOVE.w D2,-(A7)
00025F34 <AmiBlitz3.ab3@9149>    BSR.w searchinstr
00025F36 <AmiBlitz3.ab3@9150>   MOVE.w (A7)+,D2
00025F3E <AmiBlitz3.ab3@9151>   BCLR #$7,blitzmode
00025F42 <AmiBlitz3.ab3@9152>   BCLR #$E,D2
00025F46 <AmiBlitz3.ab3@9153>    BEQ.w JL_0_6D02
00025F4E <AmiBlitz3.ab3@9154>   BSET #$7,blitzmode
00025F50 <AmiBlitz3.ab3@9157>   TST.w (A3)
00025F54 <AmiBlitz3.ab3@9158>    BEQ.w JL_0_6DAC
00025F5A <AmiBlitz3.ab3@9159>   BTST #$2,$1(A3)
00025F5E <AmiBlitz3.ab3@9160>    BNE.w tokeerr
00025F64 <AmiBlitz3.ab3@9161>   BTST #$3,$1(A3)
00025F68 <AmiBlitz3.ab3@9162>    BNE.w tokeerr
00025F6C <AmiBlitz3.ab3@9163>   LEA $6(A3),A3
00025F6E <AmiBlitz3.ab3@9166>   MOVE.w (A3)+,D0
00025F72 <AmiBlitz3.ab3@9167>    BMI.w tokeerr
00025F76 <AmiBlitz3.ab3@9168>   ANDI.w #$FF,D0
00025F78 <AmiBlitz3.ab3@9169>   ADDA.w D0,A3
00025F7A <AmiBlitz3.ab3@9170>   ADDQ.w #1,A3
00025F7C <AmiBlitz3.ab3@9171>   EXG.l D0,A3
00025F80 <AmiBlitz3.ab3@9172>   BCLR #$0,D0
00025F82 <AmiBlitz3.ab3@9173>   EXG.l D0,A3
00025F84 <AmiBlitz3.ab3@9174>   SUBQ.w #1,D2
00025F88 <AmiBlitz3.ab3@9175>    BPL.w JL_0_6D98
00025F8A <AmiBlitz3.ab3@9176>   TST.w (A3)
00025F8E <AmiBlitz3.ab3@9177>    BNE.w JL_0_6D76
00025F92 <AmiBlitz3.ab3@9178>   MOVE.l $2(A3),D0
00025F96 <AmiBlitz3.ab3@9179>   OR.l $A(A3),D0
00025F9A <AmiBlitz3.ab3@9180>    BNE.w JL_0_6D76
00025FA0 <AmiBlitz3.ab3@9181>   BTST #$0,$9(A3)
00025FA4 <AmiBlitz3.ab3@9182>    BNE.w JL_0_6D76
00025FA8 <AmiBlitz3.ab3@9183>   MOVE.l $6(A3),D7
00025FAC <AmiBlitz3.ab3@9184>   MOVE.w $0(A2,D7.L),D0
00025FB0 <AmiBlitz3.ab3@9185>   ANDI.w #$F000,D0
00025FB4 <AmiBlitz3.ab3@9186>   CMP.w #-$6000,D0
00025FB8 <AmiBlitz3.ab3@9187>    BEQ.w JL_0_6D76
00025FBC <AmiBlitz3.ab3@9190>   SUB.l $12(A2),D7
00025FC0 <AmiBlitz3.ab3@9191>   ADD.l $28(A2),D7
00025FC2 <AmiBlitz3.ab3@9192> RTS
00025FC8 <AmiBlitz3.ab3@9196>   LEA cutejsr,A0
00025FCE <AmiBlitz3.ab3@9199>   MOVE.l destpointer,-(A7)
00025FD6 <AmiBlitz3.ab3@9200>   MOVE.w #$FFFF,lasta6
00025FD8 <AmiBlitz3.ab3@9203>    JSR (A0)
00025FDC <AmiBlitz3.ab3@9204>   MOVE.w #$4E75,D1
00025FE0 <AmiBlitz3.ab3@9205>    BSR.w writeword
00025FE2 <AmiBlitz3.ab3@9206>   MOVE.l (A7)+,D7
00025FE4 <AmiBlitz3.ab3@9207> RTS
00025FE6 <AmiBlitz3.ab3@9211>   TST.w (A3)+
00025FEA <AmiBlitz3.ab3@9212>    BEQ.w JL_0_6DA4
00025FEC <AmiBlitz3.ab3@9213>   ADDQ.w #2,A3
00025FF0 <AmiBlitz3.ab3@9214> BRA.w JL_0_6D98
00025FF4 <AmiBlitz3.ab3@9217>   LEA $C(A3),A3
00025FF8 <AmiBlitz3.ab3@9218> BRA.w JL_0_6D20
00025FFA <AmiBlitz3.ab3@9222>   TST.w D2
00025FFE <AmiBlitz3.ab3@9223>    BNE.w tokeerr
00026002 <AmiBlitz3.ab3@9224>   TST.w $6(A3)
00026006 <AmiBlitz3.ab3@9225>    BNE.w JL_0_6DE4
0002600A <AmiBlitz3.ab3@9226>   MOVE.l $8(A3),D0
0002600E <AmiBlitz3.ab3@9227>   OR.l $10(A3),D0
00026012 <AmiBlitz3.ab3@9228>    BNE.w JL_0_6DE4
00026018 <AmiBlitz3.ab3@9229>   BTST #$0,$F(A3)
0002601C <AmiBlitz3.ab3@9230>    BNE.w JL_0_6DE4
00026020 <AmiBlitz3.ab3@9231>   MOVE.l $C(A3),D7
00026024 <AmiBlitz3.ab3@9232>   MOVE.w $0(A2,D7.L),D0
00026028 <AmiBlitz3.ab3@9233>   ANDI.w #$F000,D0
0002602C <AmiBlitz3.ab3@9234>   CMP.w #-$6000,D0
00026030 <AmiBlitz3.ab3@9235>    BNE.w JL_0_6D6C
00026032 <AmiBlitz3.ab3@9238>   MOVE.l A3,D1
00026034 <AmiBlitz3.ab3@9239>   SUB.l A2,D1
0002603A <AmiBlitz3.ab3@9240>   LEA Amakelibsub,A0
0002603E <AmiBlitz3.ab3@9241> BRA.w JL_0_6D7C
00026044 <AmiBlitz3.ab3@9245>   MOVEA.l _execbase,A6
0002604A <AmiBlitz3.ab3@9246>   MOVEA.l tokeslist,A2
00026050 <AmiBlitz3.ab3@9247>   CLR.l tokeslist
00026054 <AmiBlitz3.ab3@9250>     CMPA.w #$0,A2
00026058 <AmiBlitz3.ab3@9251>      BEQ.w JL_0_6E32
0002605C <AmiBlitz3.ab3@9252>     MOVEA.l $8(A2),A3
00026060 <AmiBlitz3.ab3@9255>       CMPA.w #$0,A3
00026064 <AmiBlitz3.ab3@9256>        BEQ.w JL_0_6E24
00026066 <AmiBlitz3.ab3@9257>       MOVEA.l A3,A1
00026068 <AmiBlitz3.ab3@9258>       MOVEA.l (A3),A3
0002606A <AmiBlitz3.ab3@9259>       MOVEQ.l #$08,D0
00026070 <AmiBlitz3.ab3@9260>       MOVE.l mempool,a0
00026076 <AmiBlitz3.ab3@9261>       MOVEA.l _execbase,A6
0002607A <AmiBlitz3.ab3@9262>       JSR _FreePooled(A6)
0002607E <AmiBlitz3.ab3@9263> BRA.w JL_0_6E0E
00026080 <AmiBlitz3.ab3@9266>     MOVEA.l A2,A1
00026082 <AmiBlitz3.ab3@9267>     MOVEA.l (A2),A2
00026084 <AmiBlitz3.ab3@9268>     MOVEQ.l #$0C,D0
0002608A <AmiBlitz3.ab3@9269>     MOVE.l mempool,a0
00026090 <AmiBlitz3.ab3@9270>     MOVEA.l _execbase,A6
00026094 <AmiBlitz3.ab3@9271>     JSR _FreePooled(A6)
00026098 <AmiBlitz3.ab3@9272> BRA.w JL_0_6E02
0002609A <AmiBlitz3.ab3@9275> RTS
0002609E <AmiBlitz3.ab3@9279>   MOVEM.l D3-D5/A1-A6,-(A7)
000260A0 <AmiBlitz3.ab3@9280>   MOVEA.l A1,A4
000260A2 <AmiBlitz3.ab3@9283>   MOVE.l (A2)+,D3
000260A6 <AmiBlitz3.ab3@9284>   MOVE.w $0(A4,D3.L),D5
000260AA <AmiBlitz3.ab3@9285>    BPL.w JL_0_6E7A
000260AE <AmiBlitz3.ab3@9286>   TST.l $2C(A4)
000260B2 <AmiBlitz3.ab3@9287>    BEQ.w JL_0_6E5E
000260B8 <AmiBlitz3.ab3@9288>   TST.b debugmode
000260BC <AmiBlitz3.ab3@9289>    BNE.w JL_0_6E5E
000260C0 <AmiBlitz3.ab3@9290>   CMP.l $2C(A4),D3
000260C4 <AmiBlitz3.ab3@9291>    BCC.w JL_0_6E7A
000260C8 <AmiBlitz3.ab3@9294>   BCLR #$F,D5
000260CC <AmiBlitz3.ab3@9295>   MOVE.w $2(A4,D3.L),D4
000260D0 <AmiBlitz3.ab3@9296>   SUB.l $12(A4),D3
000260D4 <AmiBlitz3.ab3@9297>   ADD.l $28(A4),D3
000260D8 <AmiBlitz3.ab3@9298>   MOVEM.l D2/A2/A4,-(A7)
000260DC <AmiBlitz3.ab3@9299>    BSR.w JL_0_6E86
000260E0 <AmiBlitz3.ab3@9300>   MOVEM.l (A7)+,D2/A2/A4
000260E2 <AmiBlitz3.ab3@9303>   SUBQ.l #1,D2
000260E6 <AmiBlitz3.ab3@9304>    BNE.w JL_0_6E3A
000260EA <AmiBlitz3.ab3@9305>   MOVEM.l (A7)+,D3-D5/A1-A6
000260EC <AmiBlitz3.ab3@9306> RTS
000260F2 <AmiBlitz3.ab3@9310>   LEA tokeslist,A3
000260F8 <AmiBlitz3.ab3@9311>   MOVEA.l _execbase,A6
000260FA <AmiBlitz3.ab3@9314>   MOVE.l (A3),D0
000260FE <AmiBlitz3.ab3@9315>    BEQ.w JL_0_6EAC
00026100 <AmiBlitz3.ab3@9316>   MOVEA.l D0,A3
00026104 <AmiBlitz3.ab3@9317>   CMP.w $4(A3),D4
00026108 <AmiBlitz3.ab3@9318>    BNE.w JL_0_6E90
0002610C <AmiBlitz3.ab3@9319>   CMP.w $6(A3),D5
00026110 <AmiBlitz3.ab3@9320>    BNE.w JL_0_6E90
00026114 <AmiBlitz3.ab3@9321> BRA.w JL_0_6ED0
00026116 <AmiBlitz3.ab3@9324>   MOVEQ.l #$0C,D0
00026118 <AmiBlitz3.ab3@9325>   MOVEQ.l #$01,D1
0002611E <AmiBlitz3.ab3@9326>   MOVE.l mempool,a0
00026122 <AmiBlitz3.ab3@9327>   JSR _AllocPooled(a6)
00026124 <AmiBlitz3.ab3@9329>   MOVEA.l D0,A3
0002612A <AmiBlitz3.ab3@9330>   MOVE.l tokeslist,(A3)
00026130 <AmiBlitz3.ab3@9331>   MOVE.l A3,tokeslist
00026134 <AmiBlitz3.ab3@9332>   MOVE.w D4,$4(A3)
00026138 <AmiBlitz3.ab3@9333>   MOVE.w D5,$6(A3)
0002613C <AmiBlitz3.ab3@9334>   CLR.l $8(A3)
0002613E <AmiBlitz3.ab3@9337>   MOVEQ.l #$08,D0
00026140 <AmiBlitz3.ab3@9338>   MOVEQ.l #$01,D1
00026146 <AmiBlitz3.ab3@9339>   MOVE.l mempool,a0
0002614A <AmiBlitz3.ab3@9340>   JSR _AllocPooled(a6)
0002614C <AmiBlitz3.ab3@9342>   MOVEA.l D0,A0
00026150 <AmiBlitz3.ab3@9343>   MOVE.l D3,$4(A0)
00026154 <AmiBlitz3.ab3@9344>   MOVE.l $8(A3),(A0)
00026158 <AmiBlitz3.ab3@9345>   MOVE.l A0,$8(A3)
0002615A <AmiBlitz3.ab3@9346>   MOVE.w D4,D1
0002615E <AmiBlitz3.ab3@9347> BRA.w searchinstr
00026162 <AmiBlitz3.ab3@9350> tokeslist: Ds.l 1
00026166 <AmiBlitz3.ab3@9363>   BEQ.w uselib2_org__skip
00026168 <AmiBlitz3.ab3@9364>   MOVE.l A1,-(A7)
0002616A <AmiBlitz3.ab3@9365>   ADDA.l D1,A1
0002616C <AmiBlitz3.ab3@9366>   ADDQ.w #6,A1
0002616E <AmiBlitz3.ab3@9369>     MOVE.w (A1)+,D1
00026172 <AmiBlitz3.ab3@9370>     BEQ.w uselib2_org__done
00026174 <AmiBlitz3.ab3@9371>     CMP.w D2,D1
00026178 <AmiBlitz3.ab3@9372>     BEQ.w uselib2_org__skip2
0002617A <AmiBlitz3.ab3@9373>     MOVE.l A1,-(A7)
0002617E <AmiBlitz3.ab3@9374>     BSR.w uselib
00026180 <AmiBlitz3.ab3@9375>     MOVEA.l (A7)+,A1
00026182 <AmiBlitz3.ab3@9378>     ADDQ.w #2,A1
00026186 <AmiBlitz3.ab3@9379> BRA.w uselib2_org__loop
00026188 <AmiBlitz3.ab3@9382>   MOVEA.l (A7)+,A1
0002618A <AmiBlitz3.ab3@9385> RTS
00026190 <AmiBlitz3.ab3@9389>   MOVEA.l libpointer,A1
00026194 <AmiBlitz3.ab3@9392>   CMPA.w #$0,A1
00026198 <AmiBlitz3.ab3@9393>    BEQ.b JL_0_6F36
0002619C <AmiBlitz3.ab3@9394>   CMP.w $4(A1),D1
000261A0 <AmiBlitz3.ab3@9395>    BEQ.w JL_0_6F34
000261A2 <AmiBlitz3.ab3@9396>   MOVEA.l (A1),A1
000261A6 <AmiBlitz3.ab3@9397> BRA.w JL_0_6F20
000261A8 <AmiBlitz3.ab3@9400>   MOVEQ.l #-$01,D1
000261AA <AmiBlitz3.ab3@9403> RTS
000261AE <AmiBlitz3.ab3@9407>   MOVEM.l d0/a2,-(a7)
000261B0 <AmiBlitz3.ab3@9408>   MOVEQ #0,d0
000261B6 <AmiBlitz3.ab3@9409>   LEA instrtab+4,a2
000261B8 <AmiBlitz3.ab3@9410>   MOVE.w d1,d0
000261BA <AmiBlitz3.ab3@9411>   ASL.l #3,d0
000261BE <AmiBlitz3.ab3@9412>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000261C4 <AmiBlitz3.ab3@9413>   CMP.l #0,a1
000261C8 <AmiBlitz3.ab3@9414>   BNE JL_0_6F54b
000261CE <AmiBlitz3.ab3@9416>   MOVEA.l libpointer,A1
000261D2 <AmiBlitz3.ab3@9419>     CMPA.w #$0,A1
000261D6 <AmiBlitz3.ab3@9420>     BEQ.w noliberr
000261DA <AmiBlitz3.ab3@9421>     CMP.w $4(A1),D1
000261DE <AmiBlitz3.ab3@9422>     BEQ.w JL_0_6F54
000261E0 <AmiBlitz3.ab3@9423>    MOVEA.l (A1),A1
000261E4 <AmiBlitz3.ab3@9424> BRA.w JL_0_6F3E
000261E8 <AmiBlitz3.ab3@9427>   MOVE.l a1,0(a2,d0.l)
000261EC <AmiBlitz3.ab3@9430>   MOVEM.l (a7)+,d0/a2
000261EE <AmiBlitz3.ab3@9431> RTS
000261F2 <AmiBlitz3.ab3@9434>   MOVEM.l d0-d1/a1,-(a7)
000261F4 <AmiBlitz3.ab3@9435>   MOVEQ #0,d0
000261FA <AmiBlitz3.ab3@9436>   LEA instrtab,a1
000261FC <AmiBlitz3.ab3@9437>   MOVE.w d1,d0
000261FE <AmiBlitz3.ab3@9438>   ASL.l #3,d0
00026202 <AmiBlitz3.ab3@9439>   MOVE.l 0(a1,d0.l),a3
00026206 <AmiBlitz3.ab3@9440>   MOVE.l 4(a1,d0.l),a2
0002620C <AmiBlitz3.ab3@9441>   CMP.l #0,a3
00026210 <AmiBlitz3.ab3@9442>   BNE JL_0_6F92b
00026216 <AmiBlitz3.ab3@9444>   MOVEA.l libpointer,A2
0002621A <AmiBlitz3.ab3@9447>   CMPA.w #$0,A2
0002621E <AmiBlitz3.ab3@9448>   BEQ.w notokerr
00026222 <AmiBlitz3.ab3@9449>   CMP.w $E(A2),D1
00026226 <AmiBlitz3.ab3@9450>   BCS.w JL_0_6FB8
0002622A <AmiBlitz3.ab3@9451>   CMP.w $10(A2),D1
0002622E <AmiBlitz3.ab3@9452>   BCC.w JL_0_6FB8
00026232 <AmiBlitz3.ab3@9453>   LEA $30(A2),A3
00026236 <AmiBlitz3.ab3@9454>   TST.w $4(A2)
0002623A <AmiBlitz3.ab3@9455>   BPL.w JL_0_6FA6
0002623E <AmiBlitz3.ab3@9458>     CMP.w $E(A2),D1
00026242 <AmiBlitz3.ab3@9459>     BEQ.w JL_0_6F92
00026244 <AmiBlitz3.ab3@9460>     SUBQ.w #1,D1
00026248 <AmiBlitz3.ab3@9461>     MOVEA.l $2(A3),A3
0002624C <AmiBlitz3.ab3@9462> BRA.w JL_0_6F80
00026250 <AmiBlitz3.ab3@9465>   MOVE.l a3,0(a1,d0.l)
00026254 <AmiBlitz3.ab3@9466>   MOVE.l a2,4(a1,d0.l)
00026258 <AmiBlitz3.ab3@9469>   MOVEM.l (a7)+,d0-d1/a1
0002625C <AmiBlitz3.ab3@9470>   MOVEM.l D1/A1-a3,-(A7)
00026260 <AmiBlitz3.ab3@9471>   CMP.w #1,(a3)
00026264 <AmiBlitz3.ab3@9472>   BNE.s ex10
0002626C <AmiBlitz3.ab3@9473>   CMP.l #$12345678,$e(a3)
00026270 <AmiBlitz3.ab3@9474>   BNE.s ex10
00026276 <AmiBlitz3.ab3@9475>   CMP.w #$ffff,$16(a3)
0002627A <AmiBlitz3.ab3@9476>   BNE.s ex10
0002627E <AmiBlitz3.ab3@9477>   MOVE.l $12(a3),d1
00026282 <AmiBlitz3.ab3@9478>   BEQ.s ex10
00026288 <AmiBlitz3.ab3@9479>   LEA pluginbase,a3
0002628C <AmiBlitz3.ab3@9481> JMP 0(a2,d1.l)                                             ;plugin
00026290 <AmiBlitz3.ab3@9484>   MOVEM.l (A7)+,D1/A1-a3
00026296 <AmiBlitz3.ab3@9485>   JSR stripspaces
00026298 <AmiBlitz3.ab3@9486>   MOVEQ #0,d0
0002629A <AmiBlitz3.ab3@9487>   MOVE.b (a5)+,d0
000262A0 <AmiBlitz3.ab3@9488>   MOVE.w d0,lastchar
000262A2 <AmiBlitz3.ab3@9489>   ADDQ.l #4,a7
000262A4 <AmiBlitz3.ab3@9490> RTS
000262A6 <AmiBlitz3.ab3@9494>   MOVEA.l A2,A1
000262AC <AmiBlitz3.ab3@9495>   CLR.b newmode
000262B0 <AmiBlitz3.ab3@9496>   MOVE.w $4(A1),D1
000262B4 <AmiBlitz3.ab3@9499>   BSR.w uselib3
000262B8 <AmiBlitz3.ab3@9500>   MOVEM.l (A7)+,D1/A1-a3
000262BA <AmiBlitz3.ab3@9501> RTS
000262C0 <AmiBlitz3.ab3@9504>   MOVE.w globalvarpointer,-(a7)
000262C8 <AmiBlitz3.ab3@9505>   MOVE.w #$8004,globalvarpointer
000262CC <AmiBlitz3.ab3@9506>   BSR.w uselib3
000262D2 <AmiBlitz3.ab3@9507>   MOVE.w (a7)+,globalvarpointer
000262D6 <AmiBlitz3.ab3@9508>   MOVEM.l (A7)+,D1/A1-a3
000262D8 <AmiBlitz3.ab3@9509> RTS
000262DC <AmiBlitz3.ab3@9512>     CMP.w $E(A2),D1
000262E0 <AmiBlitz3.ab3@9513>     BEQ.w JL_0_6F92
000262E2 <AmiBlitz3.ab3@9514>     SUBQ.w #1,D1
000262E6 <AmiBlitz3.ab3@9515>     MOVEA.l $2(A3),A3
000262EA <AmiBlitz3.ab3@9516> BRA.w JL_0_6FA6
000262EC <AmiBlitz3.ab3@9519>   MOVEA.l (A2),A2
000262F0 <AmiBlitz3.ab3@9520> BRA.w JL_0_6F5C
000262F6 <AmiBlitz3.ab3@9523> JMP writeword
000262FA <AmiBlitz3.ab3@9526> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
000262FE <AmiBlitz3.ab3@9527> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026302 <AmiBlitz3.ab3@9528> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026304 <AmiBlitz3.ab3@9534>   TST.l D0
00026308 <AmiBlitz3.ab3@9535>   BEQ.w exit_loadlibsfile
0002630A <AmiBlitz3.ab3@9536>     MOVE.l D0,D6                                           ;d6=len
00026310 <AmiBlitz3.ab3@9537>     MOVEA.l _dosbase,A6
00026316 <AmiBlitz3.ab3@9538>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002631A <AmiBlitz3.ab3@9539>     JSR _Open(A6)
0002631C <AmiBlitz3.ab3@9540>     MOVE.l D0,D7
00026320 <AmiBlitz3.ab3@9541>     BEQ.w exit_loadlibsfile
00026322 <AmiBlitz3.ab3@9542>       MOVE.l D6,D0
00026324 <AmiBlitz3.ab3@9543>       MOVEQ.l #$01,D1
0002632A <AmiBlitz3.ab3@9544>       MOVEA.l _execbase,A6
00026330 <AmiBlitz3.ab3@9545>       MOVE.l mempool,a0
00026334 <AmiBlitz3.ab3@9546>       JSR _AllocPooled(a6)
00026336 <AmiBlitz3.ab3@9547>       MOVE.l D0,D5                                         ;start address
00026338 <AmiBlitz3.ab3@9549>       MOVE.l D7,D1                                         ; handle
0002633A <AmiBlitz3.ab3@9550>       MOVE.l D5,D2                                         ; buffer addr
0002633C <AmiBlitz3.ab3@9551>       MOVE.l D6,D3                                         ; size
00026342 <AmiBlitz3.ab3@9552>       MOVEA.l _dosbase,A6
00026346 <AmiBlitz3.ab3@9553>       JSR _Read(A6)
00026348 <AmiBlitz3.ab3@9554>       MOVE.l D7,D1
0002634C <AmiBlitz3.ab3@9555>       JSR _Close(A6)
0002634E <AmiBlitz3.ab3@9557>       MOVEA.l D5,A0                                        ; buffer addr
00026350 <AmiBlitz3.ab3@9563>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026354 <AmiBlitz3.ab3@9564>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026358 <AmiBlitz3.ab3@9565>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
0002635A <AmiBlitz3.ab3@9566>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002635C <AmiBlitz3.ab3@9567>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002635E <AmiBlitz3.ab3@9568>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026362 <AmiBlitz3.ab3@9569>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026364 <AmiBlitz3.ab3@9570>           ADD.l D0,D0                                      ;   verdoppele D0
00026366 <AmiBlitz3.ab3@9571>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
0002636A <AmiBlitz3.ab3@9572>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0002636E <AmiBlitz3.ab3@9573>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026372 <AmiBlitz3.ab3@9574>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026374 <AmiBlitz3.ab3@9575>           CMPA.l A0,A2
00026378 <AmiBlitz3.ab3@9576>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002637E <AmiBlitz3.ab3@9577>             MOVE.l -$8(A2),$20(A1)                         ;
00026382 <AmiBlitz3.ab3@9578>             MOVE.l A2,$24(A1)                              ;
00026386 <AmiBlitz3.ab3@9579> BRA.w JL_0_7010
00026388 <AmiBlitz3.ab3@9582>       MOVE.l D5,D0
0002638A <AmiBlitz3.ab3@9585> RTS
000263B4 <AmiBlitz3.ab3@9589>   !basic
00026428 <AmiBlitz3.ab3@9590>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002645C <AmiBlitz3.ab3@9591>    dos_Delete{tempmapping$}
000264A0 <AmiBlitz3.ab3@9592>    fid.l = file_Open{tempmapping$,#file_forcewrite}
000264BE <AmiBlitz3.ab3@9593>   !asm
000264C4 <AmiBlitz3.ab3@9595>   LEA libpointer,A3
000264CA <AmiBlitz3.ab3@9599>   MOVE.l size_deflibs,D0
000264D0 <AmiBlitz3.ab3@9600>   MOVE.l deflib,d1
000264D4 <AmiBlitz3.ab3@9601>   BEQ 'l1
000264D8 <AmiBlitz3.ab3@9602> BRA 'l2
000264DE <AmiBlitz3.ab3@9605>   MOVE.l #str_path_deflibs,D1
000264E2 <AmiBlitz3.ab3@9608>   BSR.w load_libsfile
000264E8 <AmiBlitz3.ab3@9609>   MOVE.l D0,ptr_deflibs
000264EE <AmiBlitz3.ab3@9612>   MOVE.l size_acidlibs,D0
000264F4 <AmiBlitz3.ab3@9613>   MOVE.l #str_path_acidlibs,D1
000264F8 <AmiBlitz3.ab3@9614>   BSR.w load_libsfile
000264FE <AmiBlitz3.ab3@9615>   MOVE.l D0,ptr_acidlibs
00026500 <AmiBlitz3.ab3@9619>   CLR.l (A3)
00026506 <AmiBlitz3.ab3@9620>   MOVE.l A3,ptr_userlibs
0002650C <AmiBlitz3.ab3@9625>   LEA str_libfilename,A0
00026512 <AmiBlitz3.ab3@9626>   LEA str_path_userlibs,A1
00026514 <AmiBlitz3.ab3@9629>     MOVE.b (A1)+,(A0)+
00026518 <AmiBlitz3.ab3@9630>   BNE.b JL_0_708E
0002651A <AmiBlitz3.ab3@9632>   SUBQ.w #1,A0
0002651E <AmiBlitz3.ab3@9633>   MOVE.b #$2F,(A0)+
00026520 <AmiBlitz3.ab3@9636>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026526 <AmiBlitz3.ab3@9638>   LEA ptr_userlibs_list,A2
0002652C <AmiBlitz3.ab3@9639>   MOVEA.l ptr_userlibs,A3
00026532 <AmiBlitz3.ab3@9640>   MOVEA.l _dosbase,A6
00026534 <AmiBlitz3.ab3@9645>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026538 <AmiBlitz3.ab3@9646>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
0002653A <AmiBlitz3.ab3@9648>       CLR.l (A3)
0002653C <AmiBlitz3.ab3@9649>       ADDQ.w #4,A7
00026566 <AmiBlitz3.ab3@9650>       !basic
0002657A <AmiBlitz3.ab3@9651>       If fid<>-1
00026584 <AmiBlitz3.ab3@9652>         file_Close{fid}
00026590 <AmiBlitz3.ab3@9653>         fid = -1
000265AE <AmiBlitz3.ab3@9655>       !asm
000265B2 <AmiBlitz3.ab3@9656> BRA.w process_libraries
000265B4 <AmiBlitz3.ab3@9659>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000265B8 <AmiBlitz3.ab3@9660>       TST.w $4(A2)                                         ; naechste addresse pruefen
000265BC <AmiBlitz3.ab3@9661>     BEQ.b JL_0_70BA
000265C0 <AmiBlitz3.ab3@9663>     LEA $6(A2),A1
000265C2 <AmiBlitz3.ab3@9664>     MOVEA.l (A7),A0
000265C4 <AmiBlitz3.ab3@9667>       MOVE.b (A1)+,(A0)+
000265C8 <AmiBlitz3.ab3@9668>     BNE.w JL_0_70D4
000265CA <AmiBlitz3.ab3@9672>     MOVE.l A0,-(A7)
000265D0 <AmiBlitz3.ab3@9673>     MOVE.l #str_libfilename,D1
000265D2 <AmiBlitz3.ab3@9674>     MOVEQ.l #-$02,D2
000265D8 <AmiBlitz3.ab3@9675>     MOVEA.l _dosbase,A6
000265DC <AmiBlitz3.ab3@9676>      JSR _Lock(A6)
000265DE <AmiBlitz3.ab3@9677>     MOVE.l D0,D1
000265E2 <AmiBlitz3.ab3@9678>      BEQ.w JL_0_7156
000265E4 <AmiBlitz3.ab3@9679>     MOVEA.l (A7),A0
000265EA <AmiBlitz3.ab3@9680>     MOVE.b #$2F,-$1(A0)
000265EC <AmiBlitz3.ab3@9683>     MOVE.l D1,-(A7)
000265F2 <AmiBlitz3.ab3@9684>     MOVE.l #ptr_parameterstore,D2
000265F8 <AmiBlitz3.ab3@9685>     MOVEA.l _dosbase,A6
000265FC <AmiBlitz3.ab3@9686>     JSR _Examine(A6)
000265FE <AmiBlitz3.ab3@9687>     TST.l D0
00026602 <AmiBlitz3.ab3@9688>      BEQ.w JL_0_7150
00026608 <AmiBlitz3.ab3@9691>     LEA fib_FileName,A0
0002660C <AmiBlitz3.ab3@9692>     BSR.w check_for_infoextention
00026610 <AmiBlitz3.ab3@9693>     BEQ.w JL_0_7150
0002663A <AmiBlitz3.ab3@9696>     !basic
000266BE <AmiBlitz3.ab3@9697>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
000266DC <AmiBlitz3.ab3@9698>     !asm
000266E2 <AmiBlitz3.ab3@9699>     MOVE.l #str_libfilename,D1
000266E6 <AmiBlitz3.ab3@9700>     BSR.w open_userlibfile
000266E8 <AmiBlitz3.ab3@9703>     MOVE.l (A7)+,D1
000266EE <AmiBlitz3.ab3@9704>     MOVEA.l _dosbase,A6
000266F2 <AmiBlitz3.ab3@9705>     JSR _UnLock(A6)
000266F4 <AmiBlitz3.ab3@9708>     ADDQ.w #4,A7
000266F8 <AmiBlitz3.ab3@9709> BRA.w JL_0_70BA
000266FE <AmiBlitz3.ab3@9712>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026704 <AmiBlitz3.ab3@9713>   MOVEA.l _dosbase,A6
00026708 <AmiBlitz3.ab3@9714>    JSR _Open(A6)
0002670A <AmiBlitz3.ab3@9715>   MOVE.l D0,D7
0002670E <AmiBlitz3.ab3@9716>    BEQ.w exit_userlibfile
00026710 <AmiBlitz3.ab3@9719>   MOVE.l D7,D1                                             ; filehandle
00026716 <AmiBlitz3.ab3@9720>   MOVE.l #optstuff,D2                                     ; buffer
0002671C <AmiBlitz3.ab3@9721>   MOVEA.l _dosbase,A6
0002671E <AmiBlitz3.ab3@9722>   MOVEQ.l #$20,D3                                          ; size
00026722 <AmiBlitz3.ab3@9723>   JSR _Read(A6)
00026728 <AmiBlitz3.ab3@9726>   MOVE.l optstuff+28,D6
0002672A <AmiBlitz3.ab3@9727>   LSL.l #2,D6
0002672C <AmiBlitz3.ab3@9728>   MOVE.l D6,D0
0002672E <AmiBlitz3.ab3@9729>   MOVEQ.l #$01,D1
00026734 <AmiBlitz3.ab3@9730>   MOVEA.l _execbase,A6
0002673A <AmiBlitz3.ab3@9731>   MOVE.l mempool,a0
0002673E <AmiBlitz3.ab3@9732>   JSR _AllocPooled(a6)
00026740 <AmiBlitz3.ab3@9733>   MOVEA.l D0,A5
00026746 <AmiBlitz3.ab3@9736>   MOVEA.l _dosbase,A6
00026748 <AmiBlitz3.ab3@9737>   MOVE.l D7,D1                                             ; filehandle
0002674A <AmiBlitz3.ab3@9738>   MOVE.l A5,D2                                             ; buffer
0002674C <AmiBlitz3.ab3@9739>   MOVE.l D6,D3                                             ; size
00026750 <AmiBlitz3.ab3@9740>    JSR _Read(A6)
00026752 <AmiBlitz3.ab3@9741>   MOVE.l A5,(A3)
00026754 <AmiBlitz3.ab3@9743>   MOVE.l A5,d0
00026756 <AmiBlitz3.ab3@9745>   MOVEA.l A5,A3
0002675A <AmiBlitz3.ab3@9746>   MOVE.l D6,$6(A5)
0002675E <AmiBlitz3.ab3@9747>   CLR.l $20(A5)
00026788 <AmiBlitz3.ab3@9749>   !basic
00026792 <AmiBlitz3.ab3@9751>   addr_libnum.l = PutD0 + 4
000267A6 <AmiBlitz3.ab3@9752>   If fid<>-1
00026846 <AmiBlitz3.ab3@9753>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00026878 <AmiBlitz3.ab3@9754>     file_WriteLine{fid,currentlib$}
00026896 <AmiBlitz3.ab3@9756>   !asm
00026898 <AmiBlitz3.ab3@9759>   MOVE.l D7,D1                                             ; filehandle
0002689E <AmiBlitz3.ab3@9760>   MOVE.l #optstuff,D2                                     ; buffer
000268A0 <AmiBlitz3.ab3@9761>   MOVEQ.l #$0C,D3                                          ; size
000268A6 <AmiBlitz3.ab3@9762>   MOVEA.l _dosbase,A6
000268AA <AmiBlitz3.ab3@9763>    JSR _Read(A6)
000268B0 <AmiBlitz3.ab3@9765>   CMP.l #$C,D0
000268B4 <AmiBlitz3.ab3@9766>    BCS.w close_and_exit_userlibfile
000268BA <AmiBlitz3.ab3@9769>   MOVE.l optstuff+4,D0
000268BE <AmiBlitz3.ab3@9770>   MOVE.l D0,$20(A5)
000268C0 <AmiBlitz3.ab3@9771>   LSL.l #2,D0
000268C2 <AmiBlitz3.ab3@9772>   MOVE.l D0,D5
000268C4 <AmiBlitz3.ab3@9773>   MOVEQ.l #$01,D1
000268CA <AmiBlitz3.ab3@9774>   MOVEA.l _execbase,A6
000268D0 <AmiBlitz3.ab3@9775>   MOVE.l mempool,a0
000268D4 <AmiBlitz3.ab3@9776>   JSR _AllocPooled(a6)
000268DA <AmiBlitz3.ab3@9778>   MOVEA.l _dosbase,A6
000268DE <AmiBlitz3.ab3@9779>   MOVE.l D0,$24(A5)
000268E0 <AmiBlitz3.ab3@9780>   MOVE.l D7,D1
000268E2 <AmiBlitz3.ab3@9781>   MOVE.l D0,D2
000268E4 <AmiBlitz3.ab3@9782>   MOVE.l D5,D3
000268E8 <AmiBlitz3.ab3@9783>   JSR _Read(A6)
000268EA <AmiBlitz3.ab3@9786>   MOVE.l D7,D1
000268F0 <AmiBlitz3.ab3@9787>   MOVEA.l _dosbase,A6
000268F4 <AmiBlitz3.ab3@9788> JMP _Close(A6)
000268F6 <AmiBlitz3.ab3@9791> RTS
000268FC <AmiBlitz3.ab3@9797>   CLR.w number_of_objects
00026902 <AmiBlitz3.ab3@9798>   MOVEA.l end_of_tokenlist,A3
00026908 <AmiBlitz3.ab3@9799>   MOVEA.l libpointer,A2
0002690C <AmiBlitz3.ab3@9802>     CMPA.w #$0,A2
00026910 <AmiBlitz3.ab3@9803>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00026914 <AmiBlitz3.ab3@9805>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00026918 <AmiBlitz3.ab3@9806>     BMI.w JL_0_7226
0002691A <AmiBlitz3.ab3@9807>       LSL.w #7,D7
0002691C <AmiBlitz3.ab3@9808>       ADDQ.w #1,D7
00026920 <AmiBlitz3.ab3@9809>       MOVE.w D7,$E(A2)
00026924 <AmiBlitz3.ab3@9812>     LEA $30(A2),A1
0002692A <AmiBlitz3.ab3@9813>     LEA temp1,A4
0002692C <AmiBlitz3.ab3@9816>       MOVE.w (A1),D0
00026930 <AmiBlitz3.ab3@9817>       BMI.w JL_0_72AE
00026932 <AmiBlitz3.ab3@9818>       MOVE.l A1,(A4)
00026934 <AmiBlitz3.ab3@9819>       MOVEA.l A1,A4
00026936 <AmiBlitz3.ab3@9820>       ADDQ.w #2,A4
00026938 <AmiBlitz3.ab3@9821>       ADDQ.w #6,A1
0002693C <AmiBlitz3.ab3@9822>       CMP.w #$8,D0
00026940 <AmiBlitz3.ab3@9823>       BEQ.w JL_0_7290
00026944 <AmiBlitz3.ab3@9824>         ANDI.w #$F,D0
00026948 <AmiBlitz3.ab3@9825>         BNE.w JL_0_725C
0002694C <AmiBlitz3.ab3@9826>           BSR.w skiplibreg
00026950 <AmiBlitz3.ab3@9827>           LEA $C(A1),A1
00026952 <AmiBlitz3.ab3@9828>           ADDQ.w #1,D7
00026956 <AmiBlitz3.ab3@9829> BRA.w JL_0_7230
0002695A <AmiBlitz3.ab3@9832>     BTST #$2,D0
0002695E <AmiBlitz3.ab3@9833>     BEQ.w JL_0_7274
00026960 <AmiBlitz3.ab3@9834>       ADDQ.w #4,A1
00026962 <AmiBlitz3.ab3@9837>         TST.b (A1)+
00026966 <AmiBlitz3.ab3@9838>       BPL.w JL_0_7266
0002696A <AmiBlitz3.ab3@9839>       BSR.w aligna1
0002696E <AmiBlitz3.ab3@9840> BRA.w JL_0_7290
00026970 <AmiBlitz3.ab3@9843>       MOVE.w (A1)+,D0
00026974 <AmiBlitz3.ab3@9844>       BMI.w JL_0_7290
00026978 <AmiBlitz3.ab3@9845>       ANDI.w #$FF,D0
0002697A <AmiBlitz3.ab3@9846>       ADDA.w D0,A1
0002697E <AmiBlitz3.ab3@9847>       BSR.w aligna1
00026982 <AmiBlitz3.ab3@9848>       BSR.w skiplibreg
00026986 <AmiBlitz3.ab3@9849>       LEA $C(A1),A1
0002698A <AmiBlitz3.ab3@9850> BRA.w JL_0_7274
0002698C <AmiBlitz3.ab3@9853>     MOVE.l A1,(A3)
0002698E <AmiBlitz3.ab3@9854>     MOVEA.l A1,A3
00026990 <AmiBlitz3.ab3@9855>     ADDQ.w #4,A1
00026992 <AmiBlitz3.ab3@9856>     MOVE.w D7,(A1)+
00026994 <AmiBlitz3.ab3@9859>       TST.b (A1)+
00026998 <AmiBlitz3.ab3@9860>     BNE.w JL_0_7298
0002699A <AmiBlitz3.ab3@9863>       TST.b (A1)+
0002699E <AmiBlitz3.ab3@9864>     BNE.w JL_0_729E
000269A2 <AmiBlitz3.ab3@9866>     BSR.w aligna1
000269A4 <AmiBlitz3.ab3@9867>     ADDQ.w #1,D7
000269A8 <AmiBlitz3.ab3@9868> BRA.w JL_0_7230
000269AC <AmiBlitz3.ab3@9871>     TST.w $4(A2)
000269B0 <AmiBlitz3.ab3@9872>      BMI.w JL_0_72BA
000269B4 <AmiBlitz3.ab3@9873>     MOVE.w D7,$10(A2)
000269B6 <AmiBlitz3.ab3@9876>     ADDQ.w #2,A1
000269B8 <AmiBlitz3.ab3@9877>     TST.l (A1)+
000269BC <AmiBlitz3.ab3@9878>      BEQ.w JL_0_72CC
000269C2 <AmiBlitz3.ab3@9879>     ADDQ.w #1,number_of_objects
000269C6 <AmiBlitz3.ab3@9880>     LEA $16(A1),A1
000269C8 <AmiBlitz3.ab3@9883>     SUBA.l A2,A1
000269CC <AmiBlitz3.ab3@9884>     MOVE.l A1,$12(A2)
000269CE <AmiBlitz3.ab3@9885>     MOVEA.l (A2),A2
000269D2 <AmiBlitz3.ab3@9886> BRA.w JL_0_720E
000269D4 <AmiBlitz3.ab3@9889>   CLR.l (A3)
000269DA <AmiBlitz3.ab3@9890> 
000269E0 <AmiBlitz3.ab3@9891>   MOVE.l A7,errstack
000269EA <AmiBlitz3.ab3@9892>   MOVE.l #AL_0_730E,errcont
000269F2 <AmiBlitz3.ab3@9893>   MOVE.w #$FFFF,ezerr
000269F6 <AmiBlitz3.ab3@9894>   MOVE.w #$FFFA,D1
000269FA <AmiBlitz3.ab3@9895>    BSR.w JL_0_6F38
00026A00 <AmiBlitz3.ab3@9896>   MOVE.l A1,tempvm
00026A04 <AmiBlitz3.ab3@9897>   MOVE.w #$FDA7,D1
00026A08 <AmiBlitz3.ab3@9898>    BSR.w JL_0_6F38
00026A0E <AmiBlitz3.ab3@9899>   MOVE.l A1,ffplib
00026A10 <AmiBlitz3.ab3@9902> RTS
00026A14 <AmiBlitz3.ab3@9905> ffplib:  Ds.l 1
00026A16 <AmiBlitz3.ab3@9909>     TST.w (A1)+
00026A1A <AmiBlitz3.ab3@9910>     BEQ.w JL_0_7320
00026A1C <AmiBlitz3.ab3@9911>     ADDQ.w #2,A1
00026A20 <AmiBlitz3.ab3@9912> BRA.w skiplibreg
00026A22 <AmiBlitz3.ab3@9915> RTS
00026A24 <AmiBlitz3.ab3@9919>   EXG.l A1,A0
00026A28 <AmiBlitz3.ab3@9920>   BSR.w aligna1
00026A2A <AmiBlitz3.ab3@9921>   EXG.l A1,A0
00026A2C <AmiBlitz3.ab3@9922> RTS
00026A2E <AmiBlitz3.ab3@9925>   EXG.l D0,A1
00026A30 <AmiBlitz3.ab3@9926>   ADDQ.l #1,D0
00026A34 <AmiBlitz3.ab3@9927>   BCLR #$0,D0
00026A36 <AmiBlitz3.ab3@9928>   EXG.l D0,A1
00026A38 <AmiBlitz3.ab3@9929> RTS
00026A3E <AmiBlitz3.ab3@9933>   MOVEA.l _execbase,A6
00026A44 <AmiBlitz3.ab3@9934>   MOVEA.l ptr_userlibs,A2
00026A46 <AmiBlitz3.ab3@9935>   MOVE.l (A2),D0
00026A48 <AmiBlitz3.ab3@9936>   CLR.l (A2)
00026A4A <AmiBlitz3.ab3@9937>   MOVEA.l D0,A2
00026A4E <AmiBlitz3.ab3@9940>     CMPA.w #$0,A2
00026A52 <AmiBlitz3.ab3@9941>     BEQ.w free_userlib
00026A56 <AmiBlitz3.ab3@9943>     MOVE.l $20(A2),D0
00026A5A <AmiBlitz3.ab3@9944>     BEQ.b JL_0_7360
00026A5C <AmiBlitz3.ab3@9945>       LSL.l #2,D0
00026A62 <AmiBlitz3.ab3@9946>       MOVE.l mempool,a0
00026A66 <AmiBlitz3.ab3@9947>       MOVEA.l $24(A2),A1
00026A6A <AmiBlitz3.ab3@9948>       JSR _FreePooled(A6)
00026A6C <AmiBlitz3.ab3@9951>     MOVEA.l A2,A1
00026A70 <AmiBlitz3.ab3@9952>     MOVE.l $6(A1),D0
00026A76 <AmiBlitz3.ab3@9953>     MOVE.l mempool,a0
00026A78 <AmiBlitz3.ab3@9954>     MOVEA.l (A2),A2
00026A7E <AmiBlitz3.ab3@9955>     MOVEA.l _execbase,A6
00026A82 <AmiBlitz3.ab3@9956>     JSR _FreePooled(A6)
00026A86 <AmiBlitz3.ab3@9957> BRA.w JL_0_7348
00026A8A <AmiBlitz3.ab3@9961>   BSR.w free_userlibs
00026A90 <AmiBlitz3.ab3@9962>   MOVEA.l _execbase,A6
00026A96 <AmiBlitz3.ab3@9963>   CLR.l libpointer
00026A9C <AmiBlitz3.ab3@9964>   MOVEA.l end_of_tokenlist,A0
00026A9E <AmiBlitz3.ab3@9965>   CLR.l (A0)
00026AA4 <AmiBlitz3.ab3@9967>   MOVE.l size_acidlibs,D0
00026AA8 <AmiBlitz3.ab3@9968>   BEQ.b JL_0_73A2
00026AAE <AmiBlitz3.ab3@9969>     MOVE.l ptr_acidlibs,D1
00026AB2 <AmiBlitz3.ab3@9970>     BEQ.b JL_0_73A2
00026AB8 <AmiBlitz3.ab3@9971>       CLR.l ptr_acidlibs
00026ABA <AmiBlitz3.ab3@9972>       MOVEA.l D1,A1
00026AC0 <AmiBlitz3.ab3@9973>       MOVE.l mempool,a0
00026AC6 <AmiBlitz3.ab3@9974>       MOVEA.l _execbase,A6
00026ACA <AmiBlitz3.ab3@9975>       JSR _FreePooled(A6)                                 ; free acidlibs
00026AD0 <AmiBlitz3.ab3@9978>   MOVE.l size_deflibs,D0
00026AD4 <AmiBlitz3.ab3@9979>   BEQ.b JL_0_73BE
00026ADA <AmiBlitz3.ab3@9980>     MOVE.l ptr_deflibs,D1
00026ADE <AmiBlitz3.ab3@9981>     BEQ.b JL_0_73BE
00026AE4 <AmiBlitz3.ab3@9982>       CLR.l ptr_deflibs                                    ; d0: memorySize
00026AE6 <AmiBlitz3.ab3@9983>       MOVEA.l D1,A1                                        ; a1: memory
00026AEC <AmiBlitz3.ab3@9984>       MOVE.l mempool,a0                                    ; a0: poolHeader
00026AF2 <AmiBlitz3.ab3@9985>       MOVEA.l _execbase,A6
00026AF6 <AmiBlitz3.ab3@9986>       JSR _FreePooled(A6)                                  ; free deflibs
00026AF8 <AmiBlitz3.ab3@9989> RTS
00026AFE <AmiBlitz3.ab3@9993>   MOVEA.l currentmacroaddr,A0
00026B00 <AmiBlitz3.ab3@9994>   MOVEA.l (A0),A2
00026B02 <AmiBlitz3.ab3@9995>   CLR.l (A0)
00026B08 <AmiBlitz3.ab3@9996>   MOVEA.l _execbase,A6
00026B0C <AmiBlitz3.ab3@9999>     CMPA.w #$0,A2
00026B10 <AmiBlitz3.ab3@10000>     BEQ.w JL_0_73FA
00026B12 <AmiBlitz3.ab3@10001>     MOVEQ.l #$00,D0
00026B16 <AmiBlitz3.ab3@10002>     MOVE.w $8(A2),D0
00026B1A <AmiBlitz3.ab3@10003>     BEQ.w JL_0_73E8
00026B1E <AmiBlitz3.ab3@10004>     MOVEA.l $4(A2),A1
00026B24 <AmiBlitz3.ab3@10005>     MOVE.l mempool,a0
00026B28 <AmiBlitz3.ab3@10006>     JSR _FreePooled(A6)
00026B2A <AmiBlitz3.ab3@10009>     MOVEA.l A2,A1
00026B2C <AmiBlitz3.ab3@10010>     MOVEA.l (A2),A2
00026B2E <AmiBlitz3.ab3@10011>     MOVEQ.l #$00,D0
00026B32 <AmiBlitz3.ab3@10012>     MOVE.b $C(A1),D0
00026B38 <AmiBlitz3.ab3@10013>     MOVE.l mempool2,a0
00026B3C <AmiBlitz3.ab3@10014>     JSR _FreePooled(A6)
00026B40 <AmiBlitz3.ab3@10015> BRA.w JL_0_73CE
00026B42 <AmiBlitz3.ab3@10018> RTS
00026B48 <AmiBlitz3.ab3@10022>   MOVEA.l templabel,A2
00026B4E <AmiBlitz3.ab3@10023>   CLR.l templabel
00026B50 <AmiBlitz3.ab3@10024> RTS
00026B56 <AmiBlitz3.ab3@10027>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00026B5A <AmiBlitz3.ab3@10030>     CMPA.w #$0,A2
00026B5E <AmiBlitz3.ab3@10031>     BEQ.w JL_0_7426
00026B60 <AmiBlitz3.ab3@10032>     MOVEQ.l #$00,D0
00026B64 <AmiBlitz3.ab3@10033>     MOVE.b $E(A2),D0                                       ;labeltemp
00026B66 <AmiBlitz3.ab3@10034>     MOVEA.l A2,A1
00026B68 <AmiBlitz3.ab3@10035>     MOVEA.l (A2),A2
00026B6E <AmiBlitz3.ab3@10036>     MOVE.l mempool2,a0
00026B72 <AmiBlitz3.ab3@10038> BRA.w JL_0_740C
00026B74 <AmiBlitz3.ab3@10041> RTS
00026B7A <AmiBlitz3.ab3@10045>   MOVEA.l data1,A4
00026B80 <AmiBlitz3.ab3@10046>   CMPA.l data2at,A4
00026B84 <AmiBlitz3.ab3@10047>   BCC.w JL_0_7442
00026B86 <AmiBlitz3.ab3@10048>     MOVE.b D1,(A4)+
00026B8C <AmiBlitz3.ab3@10049>     MOVE.l A4,data1
00026B8E <AmiBlitz3.ab3@10050> RTS
00026B96 <AmiBlitz3.ab3@10053>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00026B9C <AmiBlitz3.ab3@10054>   ADDQ.l #1,data1
00026B9E <AmiBlitz3.ab3@10055> RTS
00026BA0 <AmiBlitz3.ab3@10059>   SWAP D1
00026BA4 <AmiBlitz3.ab3@10060>   BSR.w pokedata1
00026BA6 <AmiBlitz3.ab3@10061>   SWAP D1
00026BAC <AmiBlitz3.ab3@10064>   MOVEA.l data1,A4
00026BB2 <AmiBlitz3.ab3@10065>   CMPA.l data2at,A4
00026BB6 <AmiBlitz3.ab3@10066>    BCC.w JL_0_7474
00026BB8 <AmiBlitz3.ab3@10067>   MOVE.w D1,(A4)+
00026BBE <AmiBlitz3.ab3@10068>   MOVE.l A4,data1
00026BC0 <AmiBlitz3.ab3@10069> RTS
00026BC8 <AmiBlitz3.ab3@10072>   MOVE.w #$FFFF,dontwrite
00026BCE <AmiBlitz3.ab3@10073>   ADDQ.l #2,data1
00026BD0 <AmiBlitz3.ab3@10074> RTS
00026BD6 <AmiBlitz3.ab3@10078>   MOVE.l data1,D3                                      ;write local string/type allocs
00026BD8 <AmiBlitz3.ab3@10079>   MOVEQ.l #$00,D4
00026BDC <AmiBlitz3.ab3@10082>   CMPA.w #$0,A2
00026BE0 <AmiBlitz3.ab3@10083>    BEQ.w JL_0_74CAc
00026BE4 <AmiBlitz3.ab3@10084>   TST.w $6(A2)
00026BE8 <AmiBlitz3.ab3@10085>    BNE.w JL_0_74C4c
00026BEC <AmiBlitz3.ab3@10086>   MOVEA.l $A(A2),A3
00026BF4 <AmiBlitz3.ab3@10087>   CMPI.l #$100,$4(A3)
00026BF8 <AmiBlitz3.ab3@10088>    BCS.w JL_0_74C4c
00026BFC <AmiBlitz3.ab3@10089>   MOVE.w $4(A2),D1
00026C00 <AmiBlitz3.ab3@10090>    BSR.w pokedata1
00026C04 <AmiBlitz3.ab3@10091>   MOVE.w $8(A3),D1
00026C08 <AmiBlitz3.ab3@10092>    BSR.w pokedata1
00026C0A <AmiBlitz3.ab3@10093>   ADDQ.w #1,D4
00026C0C <AmiBlitz3.ab3@10096>    MOVEA.l (A2),A2
00026C10 <AmiBlitz3.ab3@10097> BRA.w JL_0_7492c
00026C12 <AmiBlitz3.ab3@10100>    TST.w D4
00026C16 <AmiBlitz3.ab3@10101>    BEQ.w JL_0_74E0
00026C1A <AmiBlitz3.ab3@10102>   MOVE.w #$FF37,D1
00026C1E <AmiBlitz3.ab3@10103>    BSR.w uselib
00026C22 <AmiBlitz3.ab3@10104>   MOVE.w #$FFFA,D1
00026C26 <AmiBlitz3.ab3@10105> BRA.w uselib
00026C2C <AmiBlitz3.ab3@10113>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00026C32 <AmiBlitz3.ab3@10116>   MOVE.l data1,D3
00026C34 <AmiBlitz3.ab3@10117>   MOVEQ.l #$00,D4
00026C3A <AmiBlitz3.ab3@10118>   TST.b iserror
00026C3E <AmiBlitz3.ab3@10119>   BEQ JL_0_7492
00026C40 <AmiBlitz3.ab3@10120>   RTS
00026C44 <AmiBlitz3.ab3@10122>    CMPA.w #$0,A2
00026C48 <AmiBlitz3.ab3@10123>    BEQ.w JL_0_74CA
00026C4C <AmiBlitz3.ab3@10124>   TST.w $6(A2)
00026C50 <AmiBlitz3.ab3@10125>    BNE.w JL_0_74C4
00026C54 <AmiBlitz3.ab3@10126>   MOVEA.l $A(A2),A3
00026C5C <AmiBlitz3.ab3@10127>   CMPI.l #$100,$4(A3)
00026C60 <AmiBlitz3.ab3@10128>    BCS.w JL_0_74C4
00026C64 <AmiBlitz3.ab3@10129>   MOVE.w $4(A2),D1
00026C68 <AmiBlitz3.ab3@10130>    BSR.w pokedata1
00026C6C <AmiBlitz3.ab3@10131>   MOVE.w $8(A3),D1
00026C70 <AmiBlitz3.ab3@10132>    BSR.w pokedata1
00026C72 <AmiBlitz3.ab3@10133>   ADDQ.w #1,D4
00026C74 <AmiBlitz3.ab3@10136>   MOVEA.l (A2),A2
00026C78 <AmiBlitz3.ab3@10137> BRA.w JL_0_7492
00026C7E <AmiBlitz3.ab3@10141>   MOVEA.l sharebase,A2
00026C82 <AmiBlitz3.ab3@10144>   CMPA.w #$0,A2
00026C86 <AmiBlitz3.ab3@10145>    BEQ.w JL_0_74CAb
00026C8A <AmiBlitz3.ab3@10147>   TST.w $6(A2)
00026C8E <AmiBlitz3.ab3@10148>    BNE.w JL_0_74C4b
00026C92 <AmiBlitz3.ab3@10149>   MOVEA.l $A(A2),A3
00026C9A <AmiBlitz3.ab3@10150>   CMPI.l #$100,$4(A3)
00026C9E <AmiBlitz3.ab3@10151>    BCS.w JL_0_74C4b
00026CA2 <AmiBlitz3.ab3@10152>   MOVE.w $4(A2),D1
00026CA6 <AmiBlitz3.ab3@10153>    BSR.w pokedata1
00026CAA <AmiBlitz3.ab3@10154>   MOVE.w $8(A3),D1
00026CAE <AmiBlitz3.ab3@10155>    BSR.w pokedata1
00026CB0 <AmiBlitz3.ab3@10156>   ADDQ.w #1,D4
00026CB2 <AmiBlitz3.ab3@10159>   MOVEA.l (A2),A2
00026CB6 <AmiBlitz3.ab3@10160> BRA.w JL_0_7492b
00026CB8 <AmiBlitz3.ab3@10163>    TST.w D4
00026CBC <AmiBlitz3.ab3@10164>    BEQ.w JL_0_74E0
00026CC0 <AmiBlitz3.ab3@10165>   MOVE.w #$FF37,D1
00026CC4 <AmiBlitz3.ab3@10166>    BSR.w uselib                                            ;use statics lib
00026CC8 <AmiBlitz3.ab3@10167>   MOVE.w #$FFFA,D1                                         ;use memlib
00026CCC <AmiBlitz3.ab3@10168> BRA.w uselib
00026CCE <AmiBlitz3.ab3@10171> RTS
00026CD4 <AmiBlitz3.ab3@10175>   MOVE.w numtoa2,D1
00026CD8 <AmiBlitz3.ab3@10176>    BSR.w writeword
00026CDC <AmiBlitz3.ab3@10177>    BSR.w addoff
00026CDE <AmiBlitz3.ab3@10178>   MOVE.l D3,D1
00026CE2 <AmiBlitz3.ab3@10179>    BSR.w writelong
00026CE4 <AmiBlitz3.ab3@10180>   SUBQ.w #1,D4
00026CEA <AmiBlitz3.ab3@10181>   MOVE.w D4,endarray+2
00026CF0 <AmiBlitz3.ab3@10182>   MOVE.l endarray,D1
00026CF4 <AmiBlitz3.ab3@10183> BRA.w writelong
00026CF6 <AmiBlitz3.ab3@10187>   MOVE.l D3,-(A7)
00026CFC <AmiBlitz3.ab3@10190>   MOVEA.l _dosbase,A6
00026D00 <AmiBlitz3.ab3@10191>   JSR _Write(a6)
00026D02 <AmiBlitz3.ab3@10193>   CMP.l (A7)+,D0
00026D06 <AmiBlitz3.ab3@10194>    BNE.w JL_0_7516
00026D08 <AmiBlitz3.ab3@10195> RTS
00026D0A <AmiBlitz3.ab3@10198>   MOVE.l D7,D1
00026D10 <AmiBlitz3.ab3@10200>   MOVEA.l _dosbase,A6
00026D14 <AmiBlitz3.ab3@10201>   JSR _Close(a6)
00026D1A <AmiBlitz3.ab3@10204> JMP error_create_exe
00026D20 <AmiBlitz3.ab3@10213> 
00026D26 <AmiBlitz3.ab3@10214>   MOVE.l A7,errstack
00026D2A <AmiBlitz3.ab3@10215>   MOVEM.l d2-d7/a2-a6,-(a7)
00026D34 <AmiBlitz3.ab3@10216>   MOVE.l #AL_0_7790,errcont
00026D3A <AmiBlitz3.ab3@10217>    JSR call_setpointerbusy
00026D42 <AmiBlitz3.ab3@10218>   MOVE.w #$FFFF,anyerrs
00026D4C <AmiBlitz3.ab3@10219>   CMP.l #-1,chipstart
00026D50 <AmiBlitz3.ab3@10220>   BEQ 'l01
00026D56 <AmiBlitz3.ab3@10221>   MOVE.l chipend,d1
00026D58 <AmiBlitz3.ab3@10222>   ADDQ.l #3,d1
00026D5E <AmiBlitz3.ab3@10223>   AND.l #$fffffffc,d1                                      ;bug
00026D64 <AmiBlitz3.ab3@10224>   MOVE.l d1,chipend
00026D66 <AmiBlitz3.ab3@10225>   MOVE.l d1,a1
00026D6C <AmiBlitz3.ab3@10226>   MOVE.l chipstart,a0
00026D6E <AmiBlitz3.ab3@10227>   MOVE.l a1,d1
00026D70 <AmiBlitz3.ab3@10228>   SUB.l a0,d1
00026D76 <AmiBlitz3.ab3@10229>   MOVE.l d1,chipsize
00026D80 <AmiBlitz3.ab3@10232>   CMP.l #-1,bssstart
00026D84 <AmiBlitz3.ab3@10233>   BEQ 'l11
00026D8A <AmiBlitz3.ab3@10234>   MOVE.l realbssend,a1
00026D90 <AmiBlitz3.ab3@10235>   MOVE.l bssstart,a0
00026D92 <AmiBlitz3.ab3@10236>   MOVE.l a1,d1
00026D94 <AmiBlitz3.ab3@10237>   SUB.l a0,d1
00026D9A <AmiBlitz3.ab3@10238>   MOVE.l d1,bsssize
00026D9E <AmiBlitz3.ab3@10239>   BEQ 'l11
00026DA0 <AmiBlitz3.ab3@10242>   TST.b (a0)+
00026DA4 <AmiBlitz3.ab3@10243>   BEQ 'l31
00026DAA <AmiBlitz3.ab3@10244>   TST.b debugmode
00026DAE <AmiBlitz3.ab3@10245>   BEQ 'l1
00026DB4 <AmiBlitz3.ab3@10246>   TST.b exdebug
00026DB8 <AmiBlitz3.ab3@10247>   BNE 'l31
00026DBE <AmiBlitz3.ab3@10250>   MOVE.l #nodata,-(a7)
00026DC4 <AmiBlitz3.ab3@10251> JMP handle_compileerror
00026DC6 <AmiBlitz3.ab3@10254>   CMP.l a0,a1
00026DCA <AmiBlitz3.ab3@10255>   BGT 'l32
00026DD0 <AmiBlitz3.ab3@10256>   MOVE.l bssend,d1
00026DD2 <AmiBlitz3.ab3@10257>   ADDQ.l #3,d1
00026DD8 <AmiBlitz3.ab3@10258>   AND.l #$fffffffc,d1                                      ;bug
00026DDE <AmiBlitz3.ab3@10259>   MOVE.l d1,bssend
00026DE0 <AmiBlitz3.ab3@10260>   MOVE.l d1,a1
00026DE6 <AmiBlitz3.ab3@10261>   MOVE.l bssstart,a0
00026DE8 <AmiBlitz3.ab3@10262>   MOVE.l a1,d1
00026DEA <AmiBlitz3.ab3@10263>   SUB.l a0,d1
00026DF0 <AmiBlitz3.ab3@10264>   MOVE.l d1,bsssize
00026DF4 <AmiBlitz3.ab3@10267>   MOVEM.l d5-d7/d3,-(a7)
00026DFA <AmiBlitz3.ab3@10268>   MOVE.w dontwrite,D1
00026DFE <AmiBlitz3.ab3@10269>   BNE.w JL_0_757C
00026E04 <AmiBlitz3.ab3@10270>   MOVE.l chipsize,d5
00026E0A <AmiBlitz3.ab3@10271>   MOVE.l bsssize,d3
00026E10 <AmiBlitz3.ab3@10272>   MOVE.l chipstart,d7
00026E16 <AmiBlitz3.ab3@10273>   MOVE.l bssstart,d6
00026E1C <AmiBlitz3.ab3@10274>   MOVEA.l hunkoffsetbase,A2
00026E22 <AmiBlitz3.ab3@10275>   MOVEA.l destbufferstart,A1
00026E24 <AmiBlitz3.ab3@10276>   MOVE.l A1,D2
00026E2A <AmiBlitz3.ab3@10277>   ADD.l noinits,D2
00026E30 <AmiBlitz3.ab3@10278>   CLR.l hunkoffsetnum
00026E34 <AmiBlitz3.ab3@10281>   CMPA.w #$0,A2
00026E38 <AmiBlitz3.ab3@10282>    BEQ.w JL_0_757C
00026E3C <AmiBlitz3.ab3@10283>   MOVE.l $4(A2),D0
00026E40 <AmiBlitz3.ab3@10284>    LEA $0(a1,d0.l),a0
00026E42 <AmiBlitz3.ab3@10285>    MOVE.l (a0),d1
00026E44 <AmiBlitz3.ab3@10286>   TST.l d1
00026E48 <AmiBlitz3.ab3@10287>    BMI.w 'lm1
00026E50 <AmiBlitz3.ab3@10288>   MOVE.b #0,newhunk
00026E5A <AmiBlitz3.ab3@10289>   CMP.l #-1,chipstart
00026E5E <AmiBlitz3.ab3@10290>   BEQ 'l10
00026E64 <AmiBlitz3.ab3@10291>   CMP.l chipstart,d1
00026E68 <AmiBlitz3.ab3@10292>   BLT 'l10
00026E70 <AmiBlitz3.ab3@10293>   MOVE.b #1,newhunk
00026E76 <AmiBlitz3.ab3@10294>   CMP.l chipend,d1
00026E7A <AmiBlitz3.ab3@10295>   BGE 'l110
00026E7C <AmiBlitz3.ab3@10296>   SUB.l d7,(a0)
00026E84 <AmiBlitz3.ab3@10297>   ADD.l #$80000000,4(a2)
00026E88 <AmiBlitz3.ab3@10298> BRA JL_0_7576
00026E8C <AmiBlitz3.ab3@10301>   SUB.l d5,0(a0)
00026E96 <AmiBlitz3.ab3@10304>   CMP.l #-1,bssstart
00026E9A <AmiBlitz3.ab3@10305>     BEQ 'l11
00026EA0 <AmiBlitz3.ab3@10306>   CMP.l bssstart,d1
00026EA4 <AmiBlitz3.ab3@10307>   BLT 'l11
00026EAA <AmiBlitz3.ab3@10308>   CMP.l bssend,d1
00026EAE <AmiBlitz3.ab3@10309>   BGE 'l111
00026EB4 <AmiBlitz3.ab3@10310>   TST.b newhunk
00026EB8 <AmiBlitz3.ab3@10311>   BEQ 'ln1
00026EBA <AmiBlitz3.ab3@10312>   ADD.l d5,(a0)
00026EBC <AmiBlitz3.ab3@10315>   SUB.l d6,(a0)
00026EC4 <AmiBlitz3.ab3@10316>   ADD.l #$40000000,4(a2)
00026EC8 <AmiBlitz3.ab3@10317> BRA JL_0_7576
00026ECC <AmiBlitz3.ab3@10320>   SUB.l d3,0(a0)
00026ECE <AmiBlitz3.ab3@10323>   SUB.l D2,(A0)
00026ED4 <AmiBlitz3.ab3@10326>   ADDQ.l #1,hunkoffsetnum
00026ED6 <AmiBlitz3.ab3@10329>    MOVEA.l (A2),A2
00026EDA <AmiBlitz3.ab3@10330> BRA.w JL_0_755E
00026EDE <AmiBlitz3.ab3@10334>   MOVEM.l (a7)+,d5-d7/d3
00026EE4 <AmiBlitz3.ab3@10335>   MOVE.l ptr_newexefilename,D1
00026EEA <AmiBlitz3.ab3@10336>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00026EF0 <AmiBlitz3.ab3@10337>   MOVEA.l _dosbase,A6
00026EF4 <AmiBlitz3.ab3@10338>    JSR _Open(A6)
00026EF6 <AmiBlitz3.ab3@10339>   MOVE.l D0,D7
00026EFA <AmiBlitz3.ab3@10340>    BEQ.w execerr
00026F00 <AmiBlitz3.ab3@10341>   MOVE.l objlen,D0
00026F06 <AmiBlitz3.ab3@10342>   SUB.l #moremem,d0
00026F0C <AmiBlitz3.ab3@10343>   SUB.l noinits,D0
00026F16 <AmiBlitz3.ab3@10344>   CMP.l #-1,bssstart
00026F1A <AmiBlitz3.ab3@10345>   BEQ 'l60
00026F20 <AmiBlitz3.ab3@10346>   SUB.l bsssize,d0
00026F26 <AmiBlitz3.ab3@10347>   SUB.l chipsize,d0
00026F2A <AmiBlitz3.ab3@10348> BRA.s 'l61
00026F34 <AmiBlitz3.ab3@10351>   CMP.l #-1,chipstart
00026F38 <AmiBlitz3.ab3@10352>   BEQ 'l61
00026F3E <AmiBlitz3.ab3@10353>   SUB.l bsssize,d0
00026F44 <AmiBlitz3.ab3@10354>   SUB.l chipsize,d0
00026F46 <AmiBlitz3.ab3@10357>   ADDQ.l #3,D0
00026F48 <AmiBlitz3.ab3@10358>   LSR.l #2,D0
00026F4E <AmiBlitz3.ab3@10359>   MOVE.l D0,tstsize1
00026F54 <AmiBlitz3.ab3@10360>   MOVE.l D0,tstsize2
00026F56 <AmiBlitz3.ab3@10361>   MOVE.l D7,D1
00026F5C <AmiBlitz3.ab3@10362>   MOVE.l #tsthead,D2                                      ;hunkbegin
00026F5E <AmiBlitz3.ab3@10363>   MOVEQ.l #$20,D3
00026F68 <AmiBlitz3.ab3@10364>   CMP.l #-1,bssstart
00026F6C <AmiBlitz3.ab3@10365>   BEQ 'lb1
00026F76 <AmiBlitz3.ab3@10366>   CMP.l #-1,chipstart
00026F7A <AmiBlitz3.ab3@10367>   BEQ 'lb1
00026F84 <AmiBlitz3.ab3@10368>   MOVE.l #1,bssnum
00026F8E <AmiBlitz3.ab3@10369>   MOVE.l #2,chipnum
00026F90 <AmiBlitz3.ab3@10370>   MOVEQ.l #$28,D3
00026F96 <AmiBlitz3.ab3@10371>   MOVE.l bsssize,d2
00026F98 <AmiBlitz3.ab3@10372>   ADDQ.l #3,d2
00026F9A <AmiBlitz3.ab3@10373>   ASR.l #2,d2
00026FA0 <AmiBlitz3.ab3@10374>   MOVE.l d2,hunkend+8
00026FA6 <AmiBlitz3.ab3@10375>   MOVE.l d2,bsssize3
00026FAC <AmiBlitz3.ab3@10376>   MOVE.l chipsize,d2
00026FAE <AmiBlitz3.ab3@10377>   ADDQ.l #3,d2
00026FB0 <AmiBlitz3.ab3@10378>   ASR.l #2,d2
00026FB6 <AmiBlitz3.ab3@10379>   MOVE.l d2,chipsize2
00026FC0 <AmiBlitz3.ab3@10380>   ADD.l #$40000000,chipsize2
00026FC6 <AmiBlitz3.ab3@10381>   MOVE.l d2,hunkend2+8
00026FCC <AmiBlitz3.ab3@10382>   MOVE.l D0,tstsize1c
00026FD2 <AmiBlitz3.ab3@10383>   MOVE.l D0,tstsize2c
00026FD8 <AmiBlitz3.ab3@10384>   MOVE.l #hunkbegin2,d2
00026FDC <AmiBlitz3.ab3@10385> BRA 'l100
00026FE6 <AmiBlitz3.ab3@10388>   CMP.l #-1,bssstart
00026FEA <AmiBlitz3.ab3@10389>   BEQ 'l10
00026FF4 <AmiBlitz3.ab3@10390>   MOVE.l #1,bssnum
00026FF6 <AmiBlitz3.ab3@10391>   MOVEQ.l #$24,D3
00026FFC <AmiBlitz3.ab3@10392>   MOVE.l bsssize,d2
00026FFE <AmiBlitz3.ab3@10393>   ADDQ.l #3,d2
00027000 <AmiBlitz3.ab3@10394>   ASR.l #2,d2
00027006 <AmiBlitz3.ab3@10395>   MOVE.l d2,hunkend+8
0002700C <AmiBlitz3.ab3@10396>   MOVE.l d2,bsssize2
00027012 <AmiBlitz3.ab3@10397>   MOVE.l D0,tstsize1b
00027018 <AmiBlitz3.ab3@10398>   MOVE.l D0,tstsize2b
0002701E <AmiBlitz3.ab3@10399>   MOVE.l #hunkbegin,d2
00027028 <AmiBlitz3.ab3@10402>   CMP.l #-1,chipstart
0002702C <AmiBlitz3.ab3@10403>   BEQ 'l100
00027036 <AmiBlitz3.ab3@10404>   MOVE.l #1,chipnum
00027038 <AmiBlitz3.ab3@10405>   MOVEQ.l #$24,D3
0002703E <AmiBlitz3.ab3@10406>   MOVE.l chipsize,d2
00027040 <AmiBlitz3.ab3@10407>   ADDQ.l #3,d2
00027042 <AmiBlitz3.ab3@10408>   ASR.l #2,d2
00027048 <AmiBlitz3.ab3@10409>   MOVE.l d2,hunkend2+8
0002704E <AmiBlitz3.ab3@10410>   MOVE.l d2,bsssize2
00027058 <AmiBlitz3.ab3@10411>   ADD.l #$40000000,bsssize2
0002705E <AmiBlitz3.ab3@10412>   MOVE.l D0,tstsize1b
00027064 <AmiBlitz3.ab3@10413>   MOVE.l D0,tstsize2b
0002706A <AmiBlitz3.ab3@10414>   MOVE.l #hunkbegin,d2
0002706E <AmiBlitz3.ab3@10417>    BSR.w mywrite
00027074 <AmiBlitz3.ab3@10418>   MOVE.l destbufferstart,D2
0002707A <AmiBlitz3.ab3@10419>   ADD.l noinits,D2
00027080 <AmiBlitz3.ab3@10420>   MOVE.l objlen,D3
00027086 <AmiBlitz3.ab3@10421>   SUB.l #moremem,d3
0002708C <AmiBlitz3.ab3@10422>   SUB.l noinits,D3
00027096 <AmiBlitz3.ab3@10423>   CMP.l #-1,bssstart
0002709A <AmiBlitz3.ab3@10424>   BNE 'l40
000270A4 <AmiBlitz3.ab3@10425>   CMP.l #-1,chipstart
000270A8 <AmiBlitz3.ab3@10426>   BNE 'l40
000270AC <AmiBlitz3.ab3@10427> BRA 'l41
000270B2 <AmiBlitz3.ab3@10430>   MOVE.l codeend,d1
000270B4 <AmiBlitz3.ab3@10431>     SUB.l d2,d1
000270B6 <AmiBlitz3.ab3@10432>     MOVE.l d1,d3
000270BC <AmiBlitz3.ab3@10433>   SUB.l bsssize,d3
000270C2 <AmiBlitz3.ab3@10434>   SUB.l chipsize,d3
000270C4 <AmiBlitz3.ab3@10435>   MOVE.l D7,D1
000270C8 <AmiBlitz3.ab3@10436>   BSR.w mywrite
000270CE <AmiBlitz3.ab3@10437>   MOVE.l objlen,D3
000270D4 <AmiBlitz3.ab3@10438>   SUB.l #moremem,d3
000270DA <AmiBlitz3.ab3@10439>   SUB.l noinits,D3
000270DC <AmiBlitz3.ab3@10440>   MOVE.l d3,d1
000270E2 <AmiBlitz3.ab3@10441>   MOVE.l destbufferstart,D2
000270E8 <AmiBlitz3.ab3@10442>   ADD.l noinits,D2
000270EA <AmiBlitz3.ab3@10443>   ADD.l d2,d1
000270F0 <AmiBlitz3.ab3@10444>   SUB.l codeend,d1
000270F2 <AmiBlitz3.ab3@10445>   MOVE.l d1,d3
000270F8 <AmiBlitz3.ab3@10446>   MOVE.l codeend,d2
000270FA <AmiBlitz3.ab3@10449>   MOVE.l d2,d1
000270FC <AmiBlitz3.ab3@10450>   ADD.l d3,d1
000270FE <AmiBlitz3.ab3@10451>   ADDQ.l #3,D1
00027104 <AmiBlitz3.ab3@10452>   ANDI.l #$FFFFFFFC,D1
00027106 <AmiBlitz3.ab3@10453>   SUB.l d2,d1
00027108 <AmiBlitz3.ab3@10454>   MOVE.l d1,d3
0002710A <AmiBlitz3.ab3@10455>   MOVE.l D7,D1
0002710E <AmiBlitz3.ab3@10456>    BSR.w mywrite
00027118 <AmiBlitz3.ab3@10457>   MOVE.l hunkoffsetcounter,tstsize3
0002711C <AmiBlitz3.ab3@10458>    BEQ.w JL_0_7646
0002711E <AmiBlitz3.ab3@10459>   MOVE.l D7,D1
00027124 <AmiBlitz3.ab3@10460>   MOVE.l #tstend,D2
00027126 <AmiBlitz3.ab3@10461>   MOVEQ.l #$04,D3
0002712A <AmiBlitz3.ab3@10462>    BSR.w mywrite
00027130 <AmiBlitz3.ab3@10463>    MOVEA.l _execbase,A6
00027136 <AmiBlitz3.ab3@10464>    MOVE.l hunkoffsetcounter,d0
00027138 <AmiBlitz3.ab3@10465>    ASL.l #2,d0
0002713E <AmiBlitz3.ab3@10466>    ADD.l #12,d0
00027140 <AmiBlitz3.ab3@10467>    MOVEQ #0,d1
00027144 <AmiBlitz3.ab3@10468>    JSR _AllocMem(a6)
00027146 <AmiBlitz3.ab3@10469>    TST.l d0
0002714A <AmiBlitz3.ab3@10470>    BEQ nomem
00027150 <AmiBlitz3.ab3@10471>    MOVE.l noinits,D4
00027152 <AmiBlitz3.ab3@10472>    MOVE.l d5,-(a7)
00027154 <AmiBlitz3.ab3@10473>    MOVE.l d0,d5
00027156 <AmiBlitz3.ab3@10474>    MOVE.l d0,a1
0002715C <AmiBlitz3.ab3@10475>    MOVEA.l hunkoffsetbase,A2
00027164 <AmiBlitz3.ab3@10476>    MOVE.b #0,newhunk
00027168 <AmiBlitz3.ab3@10479>   CMPA.w #$0,A2
0002716C <AmiBlitz3.ab3@10480>    BEQ.w savehunk
00027172 <AmiBlitz3.ab3@10481>   MOVE.l destbufferstart,D2
00027178 <AmiBlitz3.ab3@10482>   ADD.l noinits,D2
0002717C <AmiBlitz3.ab3@10483>   MOVE.l  $4(A2),d1
00027180 <AmiBlitz3.ab3@10484>   BTST #31,d1
00027184 <AmiBlitz3.ab3@10485>   BEQ 'lh1
0002718C <AmiBlitz3.ab3@10486>   MOVE.b #1,newhunk
00027190 <AmiBlitz3.ab3@10487> BRA 'lh3
00027194 <AmiBlitz3.ab3@10490>   BTST #30,d1
00027198 <AmiBlitz3.ab3@10491>   BEQ 'lh2
000271A0 <AmiBlitz3.ab3@10492>   MOVE.b #1,newhunk
000271A4 <AmiBlitz3.ab3@10493> BRA 'lh3
000271A6 <AmiBlitz3.ab3@10496>   ADD.l d1,d2
000271AC <AmiBlitz3.ab3@10497>   CMP.l chipend,d2
000271B0 <AmiBlitz3.ab3@10498>   BLT 'l100
000271B6 <AmiBlitz3.ab3@10499>   SUB.l chipsize,d1
000271BC <AmiBlitz3.ab3@10502>   CMP.l bssend,d2
000271C0 <AmiBlitz3.ab3@10503>   BLT 'l101
000271C6 <AmiBlitz3.ab3@10504>   SUB.l bsssize,d1
000271C8 <AmiBlitz3.ab3@10507>   MOVE.l d1,(a1)
000271CA <AmiBlitz3.ab3@10508>   SUB.l D4,(A1)+
000271CC <AmiBlitz3.ab3@10511>   MOVEA.l (A2),A2
000271D0 <AmiBlitz3.ab3@10512> BRA.w menu_createresidentfile__oloopb
000271D2 <AmiBlitz3.ab3@10516>   MOVE.l D7,D1
000271D8 <AmiBlitz3.ab3@10517>   MOVEA.l _dosbase,A6
000271E2 <AmiBlitz3.ab3@10518>   MOVE.l hunkoffsetnum,tstsize3
000271E6 <AmiBlitz3.ab3@10519>   BEQ 'ln1
000271EC <AmiBlitz3.ab3@10520>   MOVE.l #tstend+4,d2
000271EE <AmiBlitz3.ab3@10521>     MOVEQ #8,d3
000271F2 <AmiBlitz3.ab3@10522>    JSR _Write(A6)
000271F4 <AmiBlitz3.ab3@10523>   MOVE.l d7,d1
000271FA <AmiBlitz3.ab3@10524>   MOVE.l hunkoffsetnum,d3
000271FC <AmiBlitz3.ab3@10525>   ASL.l #2,d3
000271FE <AmiBlitz3.ab3@10526>   MOVE.l d5,D2
00027202 <AmiBlitz3.ab3@10527>   JSR _Write(a6)
00027208 <AmiBlitz3.ab3@10530>   TST.b newhunk
0002720C <AmiBlitz3.ab3@10531>   BEQ 'l10
00027212 <AmiBlitz3.ab3@10532>   MOVEA.l hunkoffsetbase,A2
00027214 <AmiBlitz3.ab3@10533>   MOVE.l d5,a0
00027216 <AmiBlitz3.ab3@10534>   ADDQ #8,a0
0002721E <AmiBlitz3.ab3@10535>   MOVE.l bssnum,-4(a0)
00027220 <AmiBlitz3.ab3@10536>   MOVEQ #0,d6
00027224 <AmiBlitz3.ab3@10539>   CMPA.w #$0,A2
00027228 <AmiBlitz3.ab3@10540>    BEQ.w 'lh3
0002722E <AmiBlitz3.ab3@10541>   MOVE.l destbufferstart,D2
00027234 <AmiBlitz3.ab3@10542>   ADD.l noinits,D2
00027238 <AmiBlitz3.ab3@10543>   MOVE.l  $4(A2),d1
0002723C <AmiBlitz3.ab3@10544>   BTST #30,d1
00027240 <AmiBlitz3.ab3@10545>   BEQ 'lh1
00027244 <AmiBlitz3.ab3@10546>   BCLR #30,d1
00027246 <AmiBlitz3.ab3@10547>   MOVE.l d1,(a0)
00027248 <AmiBlitz3.ab3@10548>   SUB.l D4,(A0)+
0002724A <AmiBlitz3.ab3@10549>   ADDQ.l #1,d6
0002724C <AmiBlitz3.ab3@10552>   MOVE.l (a2),a2
00027250 <AmiBlitz3.ab3@10553> BRA 'lh2
00027252 <AmiBlitz3.ab3@10556>   TST.l d6
00027256 <AmiBlitz3.ab3@10557>     BEQ 'lh10
00027258 <AmiBlitz3.ab3@10558>     MOVE.l d5,a0
0002725A <AmiBlitz3.ab3@10559>     MOVE.l d6,(a0)
0002725C <AmiBlitz3.ab3@10560>     MOVE.l d7,d1
0002725E <AmiBlitz3.ab3@10561>     MOVE.l d5,d2
00027260 <AmiBlitz3.ab3@10562>     MOVE.l d6,d3
00027262 <AmiBlitz3.ab3@10563>     ASL.l #2,d3
00027264 <AmiBlitz3.ab3@10564>     ADDQ.l #8,d3
00027268 <AmiBlitz3.ab3@10565>     BSR.w mywrite
0002726E <AmiBlitz3.ab3@10568>   MOVEA.l hunkoffsetbase,A2
00027270 <AmiBlitz3.ab3@10569>   MOVE.l d5,a0
00027272 <AmiBlitz3.ab3@10570>   ADDQ #8,a0
0002727A <AmiBlitz3.ab3@10571>   MOVE.l chipnum,-4(a0)
0002727C <AmiBlitz3.ab3@10572>   MOVEQ #0,d6
00027280 <AmiBlitz3.ab3@10575>   CMPA.w #$0,A2
00027284 <AmiBlitz3.ab3@10576>    BEQ.w 'lh30
0002728A <AmiBlitz3.ab3@10577>   MOVE.l destbufferstart,D2
00027290 <AmiBlitz3.ab3@10578>   ADD.l noinits,D2
00027294 <AmiBlitz3.ab3@10579>   MOVE.l  $4(A2),d1
00027298 <AmiBlitz3.ab3@10580>   BTST #31,d1
0002729C <AmiBlitz3.ab3@10581>   BEQ 'lh11
000272A0 <AmiBlitz3.ab3@10582>   BCLR #31,d1
000272A2 <AmiBlitz3.ab3@10583>   MOVE.l d1,(a0)
000272A4 <AmiBlitz3.ab3@10584>   SUB.l D4,(A0)+
000272A6 <AmiBlitz3.ab3@10585>   ADDQ.l #1,d6
000272A8 <AmiBlitz3.ab3@10588>   MOVE.l (a2),a2
000272AC <AmiBlitz3.ab3@10589> BRA 'lh20
000272AE <AmiBlitz3.ab3@10592>   TST.l d6
000272B2 <AmiBlitz3.ab3@10593>     BEQ 'l10
000272B4 <AmiBlitz3.ab3@10594>     MOVE.l d5,a0
000272B6 <AmiBlitz3.ab3@10595>     MOVE.l d6,(a0)
000272B8 <AmiBlitz3.ab3@10596>     MOVE.l d7,d1
000272BA <AmiBlitz3.ab3@10597>     MOVE.l d5,d2
000272BC <AmiBlitz3.ab3@10598>     MOVE.l d6,d3
000272BE <AmiBlitz3.ab3@10599>     ASL.l #2,d3
000272C0 <AmiBlitz3.ab3@10600>     ADDQ.l #8,d3
000272C4 <AmiBlitz3.ab3@10601>     BSR.w mywrite
000272CA <AmiBlitz3.ab3@10605>    MOVEA.l _execbase,A6
000272D0 <AmiBlitz3.ab3@10606>    MOVE.l hunkoffsetcounter,d0
000272D2 <AmiBlitz3.ab3@10607>    ASL.l #2,d0
000272D8 <AmiBlitz3.ab3@10608>    ADD.l #12,d0
000272DA <AmiBlitz3.ab3@10609>    MOVE.l d5,a1
000272DE <AmiBlitz3.ab3@10610>    JSR _FreeMem(a6)
000272E4 <AmiBlitz3.ab3@10611>    MOVEA.l _dosbase,A6
000272E6 <AmiBlitz3.ab3@10612>    MOVE.l (a7)+,d5
000272EA <AmiBlitz3.ab3@10613> BRA JL_0_7632
000272F0 <AmiBlitz3.ab3@10617>   MOVEA.l hunkoffsetbase,A2
000272F6 <AmiBlitz3.ab3@10618>   MOVE.l noinits,D4
000272FA <AmiBlitz3.ab3@10621>   CMPA.w #$0,A2                                            ;write hunkoffsets
000272FE <AmiBlitz3.ab3@10622>   BEQ.w JL_0_7632
00027302 <AmiBlitz3.ab3@10623>   LEA $4(A2),A1
00027304 <AmiBlitz3.ab3@10624>   SUB.l D4,(A1)
00027306 <AmiBlitz3.ab3@10625>   MOVE.l D7,D1
00027308 <AmiBlitz3.ab3@10626>   MOVE.l A1,D2
0002730A <AmiBlitz3.ab3@10627>   MOVEQ.l #$04,D3
0002730E <AmiBlitz3.ab3@10628>   BSR.w mywrite
00027312 <AmiBlitz3.ab3@10629>   ADD.l D4,$4(A2)
00027314 <AmiBlitz3.ab3@10630>   MOVEA.l (A2),A2
00027318 <AmiBlitz3.ab3@10631> BRA.w JL_0_7610
0002731E <AmiBlitz3.ab3@10634>   CLR.l tstsize3
00027320 <AmiBlitz3.ab3@10635>   MOVE.l D7,D1
00027326 <AmiBlitz3.ab3@10636>   MOVE.l #tstsize3,D2
00027328 <AmiBlitz3.ab3@10637>   MOVEQ.l #$04,D3
0002732C <AmiBlitz3.ab3@10638>    BSR.w mywrite
00027334 <AmiBlitz3.ab3@10641>   BTST #$7,link_debuginfo
00027338 <AmiBlitz3.ab3@10642>    BEQ.w JL_0_7706
0002733E <AmiBlitz3.ab3@10643>   MOVE.l #sysdebug,D2                                      ;debughunks
00027340 <AmiBlitz3.ab3@10644>   MOVEQ.l #$04,D3
00027342 <AmiBlitz3.ab3@10645>   MOVE.l D7,D1
00027346 <AmiBlitz3.ab3@10646>    BSR.w mywrite
0002734C <AmiBlitz3.ab3@10647>   MOVEA.l labelbase,A2
00027350 <AmiBlitz3.ab3@10650>   CMPA.w #$0,A2
00027354 <AmiBlitz3.ab3@10651>    BEQ.w JL_0_76F8
0002735A <AmiBlitz3.ab3@10652>   BTST #$0,$7(A2)
0002735E <AmiBlitz3.ab3@10653>    BEQ.w JL_0_7682
00027366 <AmiBlitz3.ab3@10654>   CMPI.l #$1,$4(A2)
0002736A <AmiBlitz3.ab3@10656>   BRA.w JL_0_76F2                                            ;only addr labels
0002736C <AmiBlitz3.ab3@10658>   MOVEQ.l #$00,D4
00027370 <AmiBlitz3.ab3@10659>   MOVE.b $12(A2),D4
00027374 <AmiBlitz3.ab3@10660>   SUBI.w #$13,D4
00027376 <AmiBlitz3.ab3@10661>   ADDQ.w #2,D4
0002737A <AmiBlitz3.ab3@10662>   ANDI.w #$FFFC,D4
0002737C <AmiBlitz3.ab3@10663>   MOVE.l D4,D5
0002737E <AmiBlitz3.ab3@10664>   LSR.w #2,D5
00027384 <AmiBlitz3.ab3@10665>   MOVE.l D5,temp1
00027386 <AmiBlitz3.ab3@10666>   LSL.w #2,D5
0002738C <AmiBlitz3.ab3@10667>   MOVE.l #temp1,a1
00027392 <AmiBlitz3.ab3@10669>   LEA debugstore,a0
00027394 <AmiBlitz3.ab3@10670>   MOVE.l (a1),(a0)+
00027396 <AmiBlitz3.ab3@10671>   MOVEQ.l #$04,D3
0002739A <AmiBlitz3.ab3@10674>   LEA $13(A2),A1
0002739C <AmiBlitz3.ab3@10675>   MOVE.l d4,d1
0002739E <AmiBlitz3.ab3@10676>   SUBQ.l #1,d1
000273A0 <AmiBlitz3.ab3@10679>     MOVE.b (a1)+,d0
000273A4 <AmiBlitz3.ab3@10680>     BEQ 'l21
000273A8 <AmiBlitz3.ab3@10681>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000273AC <AmiBlitz3.ab3@10682>     BNE 'ok
000273B0 <AmiBlitz3.ab3@10683>     MOVE.b #"_",d0
000273B2 <AmiBlitz3.ab3@10684> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000273B6 <AmiBlitz3.ab3@10685>   DBF d1,'l10
000273BA <AmiBlitz3.ab3@10687> BRA 'l22
000273BC <AmiBlitz3.ab3@10690>       CLR.b (a0)+
000273C0 <AmiBlitz3.ab3@10691>   DBF d1,'l21
000273C2 <AmiBlitz3.ab3@10694>   ADD.l d4,d3
000273C4 <AmiBlitz3.ab3@10699>   SUB.l D4,D5
000273C8 <AmiBlitz3.ab3@10700>    BEQ.w JL_0_76CE
000273CE <AmiBlitz3.ab3@10701>   MOVE.l #zero,a1
000273D0 <AmiBlitz3.ab3@10703>   MOVE.l (a1),(a0)+
000273D2 <AmiBlitz3.ab3@10705>   ADD.l d5,d3
000273D6 <AmiBlitz3.ab3@10710>   MOVE.l $8(A2),D2
000273DC <AmiBlitz3.ab3@10711>   SUB.l destbufferstart,D2
000273E2 <AmiBlitz3.ab3@10712>   SUB.l noinits,D2
000273E8 <AmiBlitz3.ab3@10713>   MOVE.l D2,temp1
000273EE <AmiBlitz3.ab3@10714>   MOVE.l #temp1,a1
000273F0 <AmiBlitz3.ab3@10716>   MOVE.l (a1),(a0)+
000273F6 <AmiBlitz3.ab3@10717>   ADD.l #4,d3
000273FC <AmiBlitz3.ab3@10718>   LEA debugstore,a0
000273FE <AmiBlitz3.ab3@10719>   MOVE.l a0,d2
00027400 <AmiBlitz3.ab3@10721>   MOVE.l D7,D1
00027404 <AmiBlitz3.ab3@10722>   BSR.w mywrite
00027406 <AmiBlitz3.ab3@10725>   MOVEA.l (A2),A2
0002740A <AmiBlitz3.ab3@10726> BRA.w JL_0_7664
00027410 <AmiBlitz3.ab3@10730>   MOVE.l #zero,D2
00027412 <AmiBlitz3.ab3@10731>   MOVEQ.l #$04,D3
00027414 <AmiBlitz3.ab3@10732>   MOVE.l D7,D1
00027418 <AmiBlitz3.ab3@10733>   BSR.w mywrite
0002741A <AmiBlitz3.ab3@10736>   MOVE.l D7,D1
00027420 <AmiBlitz3.ab3@10737>   MOVE.l #tstdone,D2                                      ;hunkend
00027422 <AmiBlitz3.ab3@10738>   MOVEQ.l #$04,D3
0002742C <AmiBlitz3.ab3@10739>   CMPI.l #-1,bssstart
00027430 <AmiBlitz3.ab3@10740>   BEQ 'l10
00027432 <AmiBlitz3.ab3@10741>   MOVEQ #16,d3
00027438 <AmiBlitz3.ab3@10742>   MOVE.l #hunkend,d2
00027442 <AmiBlitz3.ab3@10743>   CMPI.l #-1,chipstart
00027446 <AmiBlitz3.ab3@10744>   BEQ 'l10
00027448 <AmiBlitz3.ab3@10745>   MOVE.l d7,d1
0002744A <AmiBlitz3.ab3@10746>   MOVEQ #12,d3
0002744E <AmiBlitz3.ab3@10747>   BSR.w mywrite
00027458 <AmiBlitz3.ab3@10750>   CMPI.l #-1,chipstart
0002745C <AmiBlitz3.ab3@10751>   BEQ 'l11
0002745E <AmiBlitz3.ab3@10752>   MOVEQ #12,d3
00027464 <AmiBlitz3.ab3@10753>   MOVE.l #hunkend2,d2
00027466 <AmiBlitz3.ab3@10754>   MOVE.l d7,d1
0002746A <AmiBlitz3.ab3@10755>   BSR.w mywrite
0002746C <AmiBlitz3.ab3@10756>   MOVE.l d7,d1
00027472 <AmiBlitz3.ab3@10757>   MOVE.l chipstart,d2
00027478 <AmiBlitz3.ab3@10758>   MOVE.l chipsize,d3
0002747C <AmiBlitz3.ab3@10759>   BSR.w mywrite
0002747E <AmiBlitz3.ab3@10760>   MOVEQ #4,d3
00027484 <AmiBlitz3.ab3@10761>   MOVE.l #hunkend,d2
00027486 <AmiBlitz3.ab3@10762>   MOVE.l d7,d1
0002748A <AmiBlitz3.ab3@10765>   BSR.w mywrite
0002748C <AmiBlitz3.ab3@10766>   MOVE.l D7,D1
00027492 <AmiBlitz3.ab3@10767>   MOVEA.l _dosbase,A6
00027496 <AmiBlitz3.ab3@10768>   JSR _Close(A6)
0002749E <AmiBlitz3.ab3@10773>   BTST #$7,create_iconfile
000274A2 <AmiBlitz3.ab3@10774>    BEQ.w skip_createicon
000274A8 <AmiBlitz3.ab3@10776>   MOVEA.l ptr_newexefilename,A0
000274AA <AmiBlitz3.ab3@10779>     TST.b (A0)+
000274AE <AmiBlitz3.ab3@10780>   BNE.w JL_0_772C
000274B0 <AmiBlitz3.ab3@10781>   SUBQ.w #1,A0
000274B2 <AmiBlitz3.ab3@10782>   MOVE.l A0,-(A7)
000274B8 <AmiBlitz3.ab3@10783>   LEA str_infoextention2,A1
000274BA <AmiBlitz3.ab3@10786>     MOVE.b (A1)+,(A0)+
000274BE <AmiBlitz3.ab3@10787>   BNE.w JL_0_773A
000274C4 <AmiBlitz3.ab3@10789>   MOVE.l ptr_newexefilename,D1
000274C6 <AmiBlitz3.ab3@10790>   MOVEQ.l #-$02,D2
000274CC <AmiBlitz3.ab3@10791>   MOVEA.l _dosbase,A6
000274D0 <AmiBlitz3.ab3@10792>   JSR _Lock(A6)
000274D2 <AmiBlitz3.ab3@10793>   MOVE.l D0,D1
000274D6 <AmiBlitz3.ab3@10794>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
000274DA <AmiBlitz3.ab3@10795>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
000274DE <AmiBlitz3.ab3@10796> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
000274E4 <AmiBlitz3.ab3@10799>   MOVE.l ptr_newexefilename,D1
000274EA <AmiBlitz3.ab3@10800>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000274F0 <AmiBlitz3.ab3@10801>   MOVEA.l _dosbase,A6
000274F4 <AmiBlitz3.ab3@10802>    JSR _Open(A6)
000274F6 <AmiBlitz3.ab3@10803>   MOVE.l D0,D7
000274FA <AmiBlitz3.ab3@10804>    BEQ.w JL_0_7788
00027500 <AmiBlitz3.ab3@10805>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027506 <AmiBlitz3.ab3@10806>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027508 <AmiBlitz3.ab3@10807>   MOVE.l D7,D1
0002750E <AmiBlitz3.ab3@10808>   MOVEA.l _dosbase,A6
00027512 <AmiBlitz3.ab3@10809>   JSR _Write(A6)
00027514 <AmiBlitz3.ab3@10810>   MOVE.l D7,D1
00027518 <AmiBlitz3.ab3@10811>   JSR _Close(A6)
0002751A <AmiBlitz3.ab3@10814>   MOVEA.l (A7)+,A0
0002751C <AmiBlitz3.ab3@10815>   CLR.b (A0)
00027522 <AmiBlitz3.ab3@10820>   TST.b exdebug
00027526 <AmiBlitz3.ab3@10821>    BEQ JL_0_757Cb
0002752C <AmiBlitz3.ab3@10822>   MOVE.w dontwrite,D1
00027530 <AmiBlitz3.ab3@10823>   BNE.w JL_0_757Cb
00027536 <AmiBlitz3.ab3@10824>   MOVE.l chipsize,d5
0002753C <AmiBlitz3.ab3@10825>   MOVE.l bsssize,d3
00027542 <AmiBlitz3.ab3@10826>   MOVE.l chipstart,d7
00027548 <AmiBlitz3.ab3@10827>   MOVE.l bssstart,d6
0002754E <AmiBlitz3.ab3@10828>   MOVEA.l hunkoffsetbase,A2
00027554 <AmiBlitz3.ab3@10829>   MOVEA.l destbufferstart,A1
00027556 <AmiBlitz3.ab3@10830>   MOVE.l A1,D2
0002755C <AmiBlitz3.ab3@10831>   ADD.l noinits,D2
00027562 <AmiBlitz3.ab3@10832>   CLR.l hunkoffsetnum
00027566 <AmiBlitz3.ab3@10835>   CMPA.w #$0,A2
0002756A <AmiBlitz3.ab3@10836>    BEQ.w JL_0_757Cb
0002756E <AmiBlitz3.ab3@10837>   MOVE.l $4(A2),D0
00027572 <AmiBlitz3.ab3@10838>    LEA $0(a1,d0.l),a0
00027574 <AmiBlitz3.ab3@10839>    MOVE.l (a0),d1
00027576 <AmiBlitz3.ab3@10840>   TST.l d1
0002757A <AmiBlitz3.ab3@10841>    BMI.w 'lm1
00027582 <AmiBlitz3.ab3@10842>   MOVE.b #0,newhunk
0002758C <AmiBlitz3.ab3@10843>   CMP.l #-1,chipstart
00027590 <AmiBlitz3.ab3@10844>   BEQ 'l10
00027596 <AmiBlitz3.ab3@10845>   CMP.l chipstart,d1
0002759A <AmiBlitz3.ab3@10846>   BLT 'l10
000275A2 <AmiBlitz3.ab3@10847>   MOVE.b #1,newhunk
000275A8 <AmiBlitz3.ab3@10848>   CMP.l chipend,d1
000275AC <AmiBlitz3.ab3@10849>   BGE 'l110
000275AE <AmiBlitz3.ab3@10850>   ADD.l d7,(a0)
000275B6 <AmiBlitz3.ab3@10851>   ADD.l #$80000000,4(a2)
000275BA <AmiBlitz3.ab3@10852> BRA JL_0_7576b
000275BE <AmiBlitz3.ab3@10855>   ADD.l d5,0(a0)
000275C8 <AmiBlitz3.ab3@10858>   CMP.l #-1,bssstart
000275CC <AmiBlitz3.ab3@10859>     BEQ 'l11
000275D2 <AmiBlitz3.ab3@10860>   CMP.l bssstart,d1
000275D6 <AmiBlitz3.ab3@10861>   BLT 'l11
000275DC <AmiBlitz3.ab3@10862>   CMP.l bssend,d1
000275E0 <AmiBlitz3.ab3@10863>   BGE 'l111
000275E6 <AmiBlitz3.ab3@10864>   TST.b newhunk
000275EA <AmiBlitz3.ab3@10865>   BEQ 'ln1
000275EC <AmiBlitz3.ab3@10866>   ADD.l d5,(a0)
000275EE <AmiBlitz3.ab3@10869>   ADD.l d6,(a0)
000275F6 <AmiBlitz3.ab3@10870>   ADD.l #$40000000,4(a2)
000275FA <AmiBlitz3.ab3@10871> BRA JL_0_7576b
000275FE <AmiBlitz3.ab3@10874>   ADD.l d3,0(a0)
00027600 <AmiBlitz3.ab3@10877>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00027606 <AmiBlitz3.ab3@10880>   ADDQ.l #1,hunkoffsetnum
00027608 <AmiBlitz3.ab3@10883>   MOVEA.l (A2),A2
0002760C <AmiBlitz3.ab3@10884> BRA.w JL_0_755Eb
00027612 <AmiBlitz3.ab3@10887>   JSR call_setpointernormal
00027616 <AmiBlitz3.ab3@10888>   MOVEM.l (a7)+,d2-d7/a2-a6
00027618 <AmiBlitz3.ab3@10890> RTS
0002761A <AmiBlitz3.ab3@10894>   MOVE.l D2,-(A7)
00027620 <AmiBlitz3.ab3@10895>   MOVE.l destpointer,D2
00027626 <AmiBlitz3.ab3@10896>   SUB.l destbufferstart,D2
0002762A <AmiBlitz3.ab3@10897>   BSR.w addhunkoffset
0002762C <AmiBlitz3.ab3@10898>   MOVE.l (A7)+,D2
0002762E <AmiBlitz3.ab3@10899> RTS
00027632 <AmiBlitz3.ab3@10903>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00027638 <AmiBlitz3.ab3@10904>   TST.b nohunkoffset
0002763C <AmiBlitz3.ab3@10905>   BNE 'l10
0002763E <AmiBlitz3.ab3@10906>   MOVEQ.l #$8,D0
00027640 <AmiBlitz3.ab3@10907>   MOVEQ.l #$01,D1
00027646 <AmiBlitz3.ab3@10908>   MOVEA.l _execbase,A6
0002764C <AmiBlitz3.ab3@10909>   MOVE.l mempool2,a0
00027650 <AmiBlitz3.ab3@10910>   JSR _AllocPooled(a6)
00027656 <AmiBlitz3.ab3@10912>   ADDQ.l #1,hunkoffsetcounter
00027658 <AmiBlitz3.ab3@10913>   MOVEA.l D0,A0
0002765E <AmiBlitz3.ab3@10914>   MOVE.l hunkoffsetbase,(A0)
00027664 <AmiBlitz3.ab3@10915>   MOVE.l A0,hunkoffsetbase
00027668 <AmiBlitz3.ab3@10916>   MOVE.l D2,$4(A0)
0002766C <AmiBlitz3.ab3@10919>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002766E <AmiBlitz3.ab3@10920> RTS
00027674 <AmiBlitz3.ab3@10924>   CLR.l hunkoffsetbase
0002767A <AmiBlitz3.ab3@10925>   MOVEA.l _execbase,A6
00027680 <AmiBlitz3.ab3@10926>   MOVEA.l hunkoffsetbase,A2
00027684 <AmiBlitz3.ab3@10929>     CMPA.w #$0,A2
00027688 <AmiBlitz3.ab3@10930>      BEQ.w JL_0_7988
0002768A <AmiBlitz3.ab3@10931>     MOVEA.l A2,A1
0002768C <AmiBlitz3.ab3@10932>     MOVEQ.l #$08,D0
0002768E <AmiBlitz3.ab3@10933>     MOVEA.l (A2),A2
00027694 <AmiBlitz3.ab3@10934>     MOVE.l mempool2,a0
00027698 <AmiBlitz3.ab3@10935>     JSR _FreePooled(A6)
0002769C <AmiBlitz3.ab3@10936> BRA.w JL_0_7972
000276A2 <AmiBlitz3.ab3@10939>   CLR.l hunkoffsetcounter
000276A4 <AmiBlitz3.ab3@10940> RTS
000276BC <AmiBlitz3.ab3@10943> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000276C0 <AmiBlitz3.ab3@10944> cmakea5:    Ds.l 1
000276C2 <AmiBlitz3.ab3@10945> cmake:      Ds.w 1
00027742 <AmiBlitz3.ab3@10946> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00027748 <AmiBlitz3.ab3@10950>   MOVE.l A5,lastsourcepos
00027752 <AmiBlitz3.ab3@10951>   MOVE.w instringon,oldqflag
00027754 <AmiBlitz3.ab3@10955>   MOVEQ.l #$00,D0
00027756 <AmiBlitz3.ab3@10956>   MOVE.b (A5)+,D0
0002775A <AmiBlitz3.ab3@10957>    BEQ getcharb__donea
0002775E <AmiBlitz3.ab3@10958>   BPL getcharb__stuffa
00027760 <AmiBlitz3.ab3@10959>   LSL.l #8,D0
00027762 <AmiBlitz3.ab3@10960>   MOVE.b (A5)+,D0
00027764 <AmiBlitz3.ab3@10961>   MOVE.l a1,-(a7)
0002776A <AmiBlitz3.ab3@10962>   LEA replacedat,a1
0002776E <AmiBlitz3.ab3@10963>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00027772 <AmiBlitz3.ab3@10964>   BEQ getchar__l10
00027776 <AmiBlitz3.ab3@10965>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00027778 <AmiBlitz3.ab3@10969>   MOVE.l (a7)+,a1
0002777C <AmiBlitz3.ab3@10970> BRA getchar__weiter
00027780 <AmiBlitz3.ab3@10973>   CMP.w #$22,D0
00027784 <AmiBlitz3.ab3@10974>    BEQ.b swapquotea
00027788 <AmiBlitz3.ab3@10975>   CMP.w #$3B,D0
0002778C <AmiBlitz3.ab3@10976>    BNE.b getcharb__donea
00027792 <AmiBlitz3.ab3@10977>   TST.w instringon
00027796 <AmiBlitz3.ab3@10978>    BNE.b getcharb__donea
00027798 <AmiBlitz3.ab3@10981>   MOVE.b (A5)+,D0
0002779C <AmiBlitz3.ab3@10982>              BEQ getchar__l1
000277A0 <AmiBlitz3.ab3@10983>              CMP.b #":",d0
000277A4 <AmiBlitz3.ab3@10984>              BNE getcharb__loopa                                ;:@
000277A8 <AmiBlitz3.ab3@10985>              CMP.b #"@",(a5)
000277AC <AmiBlitz3.ab3@10986>              BNE getcharb__loopa
000277AE <AmiBlitz3.ab3@10987>              ADDQ #1,a5
000277B4 <AmiBlitz3.ab3@10990>   MOVE.w D0,lastchar
000277B8 <AmiBlitz3.ab3@10993> BRA.s getchar__weiter
000277BE <AmiBlitz3.ab3@10996>   NOT.w instringon
000277C4 <AmiBlitz3.ab3@10999>    MOVE.w D0,lastchar
000277C8 <AmiBlitz3.ab3@11000>    BEQ.w getchar__done
000277CC <AmiBlitz3.ab3@11001>    BPL.w getchar__done2
000277D0 <AmiBlitz3.ab3@11002>   CMP.w #-$7FE4,D0                                         ;cnif
000277D4 <AmiBlitz3.ab3@11003>    BEQ.w getchar__cnif
000277D8 <AmiBlitz3.ab3@11004>   CMP.w #-$7FE3,D0                                         ;csif
000277DC <AmiBlitz3.ab3@11005>    BEQ.w getchar__csif
000277E0 <AmiBlitz3.ab3@11006>   CMP.w #-$7FE2,D0                                         ;celse
000277E4 <AmiBlitz3.ab3@11007>    BEQ.w getchar__celse
000277E8 <AmiBlitz3.ab3@11008>   CMP.w #-$7FE1,D0                                         ;cend
000277EC <AmiBlitz3.ab3@11009>    BEQ.w getchar__cend
000277F2 <AmiBlitz3.ab3@11012>   TST.w skipcode
000277F6 <AmiBlitz3.ab3@11013>    BEQ.w getchar
000277FA <AmiBlitz3.ab3@11014>   CMP.w #$7E,D0
000277FE <AmiBlitz3.ab3@11015>    BEQ.w getchar__cmake                                         ;tilde
00027802 <AmiBlitz3.ab3@11016>   CMP.w #$2,D0
00027806 <AmiBlitz3.ab3@11017>    BNE.w getchar__notunpath
0002780C <AmiBlitz3.ab3@11018>   MOVEA.l usedfrom,A5
00027812 <AmiBlitz3.ab3@11019>   CLR.l usedfrom
00027816 <AmiBlitz3.ab3@11020> BRA.w getchar
0002781A <AmiBlitz3.ab3@11023>   CMP.w #$1,D0
0002781E <AmiBlitz3.ab3@11024>    BNE.w getchar__done
00027822 <AmiBlitz3.ab3@11028>   MOVEA.l cmakea5(PC),A5
00027826 <AmiBlitz3.ab3@11029> BRA.w getchar
0002782C <AmiBlitz3.ab3@11032>   TST.w cmake
00027830 <AmiBlitz3.ab3@11033>    BNE.w getchar__done
00027834 <AmiBlitz3.ab3@11035>   MOVEM.l D0-D7/A0-A6,-(A7)
0002783A <AmiBlitz3.ab3@11036>   LEA cmake,a0                                         ;reass
0002783C <AmiBlitz3.ab3@11037>   NOT.w (a0)
00027840 <AmiBlitz3.ab3@11038>   LEA cmakebak(PC),A0
00027846 <AmiBlitz3.ab3@11039>   LEA ptr_parameterstore,A1
00027848 <AmiBlitz3.ab3@11040>   MOVEQ.l #$1F,D0
0002784A <AmiBlitz3.ab3@11043>     MOVE.l (A1)+,(A0)+
0002784E <AmiBlitz3.ab3@11044>   DBF D0,getchar__cmloop
00027854 <AmiBlitz3.ab3@11047>    JSR AJL_0_BF6E
00027858 <AmiBlitz3.ab3@11048>   CMP.w #$7E,D0
0002785C <AmiBlitz3.ab3@11049>    BNE.w syntaxerr
00027862 <AmiBlitz3.ab3@11050>   MOVE.l A5,cmakea5                                      ;tilde
00027866 <AmiBlitz3.ab3@11051>   LEA cmakebuff(PC),A0
00027868 <AmiBlitz3.ab3@11052>   MOVE.l D3,D2
0002786C <AmiBlitz3.ab3@11053>   BSR.w makelong
0002786E <AmiBlitz3.ab3@11054>   ADDQ.b #1,(A0)
00027874 <AmiBlitz3.ab3@11055>   LEA cmake,a0
00027876 <AmiBlitz3.ab3@11056>   NOT.w (a0)                                               ;reass
0002787A <AmiBlitz3.ab3@11057>   LEA cmakebak(PC),A0
00027880 <AmiBlitz3.ab3@11058>   LEA ptr_parameterstore,A1
00027882 <AmiBlitz3.ab3@11059>   MOVEQ.l #$1F,D0
00027884 <AmiBlitz3.ab3@11062>     MOVE.l (A0)+,(A1)+
00027888 <AmiBlitz3.ab3@11063>   DBF D0,getchar__cmloop2
0002788C <AmiBlitz3.ab3@11065>   MOVEM.l (A7)+,D0-D7/A0-A6
00027890 <AmiBlitz3.ab3@11066>   LEA cmakebuff(PC),A5
00027894 <AmiBlitz3.ab3@11067> BRA.w getchar
00027896 <AmiBlitz3.ab3@11070> RTS
000278A0 <AmiBlitz3.ab3@11074>   MOVE.l linenumat,ciflineat                               ;csif
000278A6 <AmiBlitz3.ab3@11075>   TST.w skipcode
000278AA <AmiBlitz3.ab3@11076>    BEQ.w getchar__incnest
000278AE <AmiBlitz3.ab3@11077>    BSR.w get1bytemain
000278B0 <AmiBlitz3.ab3@11078>    MOVE.l a1,-(a7)
000278B6 <AmiBlitz3.ab3@11079>    JSR JL_0_C492
000278B8 <AmiBlitz3.ab3@11080>    MOVE.l (a7)+,a1
000278BC <AmiBlitz3.ab3@11081> BRA.w getchar
000278C6 <AmiBlitz3.ab3@11084>   MOVE.l linenumat,ciflineat                               ;cnif
000278CC <AmiBlitz3.ab3@11085>   TST.w skipcode
000278D0 <AmiBlitz3.ab3@11086>    BEQ.w getchar__incnest
000278D4 <AmiBlitz3.ab3@11087>    BSR.w get1bytemain
000278D8 <AmiBlitz3.ab3@11088>    CMP.b #"@",d0
000278DC <AmiBlitz3.ab3@11089>    BNE getchar__cnif_ok2
000278E0 <AmiBlitz3.ab3@11090>    BSR.w get1bytemain
000278E8 <AmiBlitz3.ab3@11091>    MOVE.b #1,incnif
000278EE <AmiBlitz3.ab3@11092>    JSR findconstant2
000278F2 <AmiBlitz3.ab3@11093>    BEQ getchar__cnif_ok2
000278F8 <AmiBlitz3.ab3@11096>    MOVE.w fast,-(a7)
000278FE <AmiBlitz3.ab3@11097>    CLR.b fast
00027900 <AmiBlitz3.ab3@11098>    MOVE.l a1,-(a7)
00027906 <AmiBlitz3.ab3@11099>    JSR JL_0_C47E
0002790C <AmiBlitz3.ab3@11100>    CLR.b incnif
0002790E <AmiBlitz3.ab3@11101>    MOVE.l (a7)+,a1
00027914 <AmiBlitz3.ab3@11102>    MOVE.w (a7)+,fast
00027918 <AmiBlitz3.ab3@11103> BRA.w getchar
0002791E <AmiBlitz3.ab3@11106>   ADDQ.w #1,connest
00027922 <AmiBlitz3.ab3@11107> BRA.w getchar
00027928 <AmiBlitz3.ab3@11110>   MOVE.w connest,D0                                      ;celse
0002792C <AmiBlitz3.ab3@11111>    BNE.w getchar
00027932 <AmiBlitz3.ab3@11112>   NOT.w skipcode
00027936 <AmiBlitz3.ab3@11113> BRA.w getchar
0002793C <AmiBlitz3.ab3@11116>   SUBQ.w #1,connest                                      ;cend
00027940 <AmiBlitz3.ab3@11117>    BPL.w getchar
00027946 <AmiBlitz3.ab3@11118>   ADDQ.w #1,connest
0002794C <AmiBlitz3.ab3@11119>   MOVEA.l concomsp,A0
00027952 <AmiBlitz3.ab3@11120>   CMPA.l #concomstack,A0
00027956 <AmiBlitz3.ab3@11121>    BEQ.w nociferr
00027958 <AmiBlitz3.ab3@11122>   SUBQ.w #2,A0
0002795E <AmiBlitz3.ab3@11123>   MOVE.l A0,concomsp
00027964 <AmiBlitz3.ab3@11124>   MOVE.w (A0),skipcode
00027968 <AmiBlitz3.ab3@11125> BRA.w getchar
0002796C <AmiBlitz3.ab3@11128> ciflineat:   Ds.l 1
0002796E <AmiBlitz3.ab3@11136>   MOVEQ.l #$00,D0
00027970 <AmiBlitz3.ab3@11137>   MOVE.b (A5)+,D0
00027974 <AmiBlitz3.ab3@11138>    BEQ.b getcharb__done
00027978 <AmiBlitz3.ab3@11139>    BPL.b getcharb__stuff
0002797A <AmiBlitz3.ab3@11140>   LSL.w #8,D0
0002797C <AmiBlitz3.ab3@11141>   MOVE.b (A5)+,D0
0002797E <AmiBlitz3.ab3@11142> RTS
00027982 <AmiBlitz3.ab3@11145>   CMP.w #$22,D0
00027986 <AmiBlitz3.ab3@11146>    BEQ.b swapquote
0002798A <AmiBlitz3.ab3@11147>   CMP.w #$3B,D0
0002798E <AmiBlitz3.ab3@11148>    BNE.b getcharb__done
00027994 <AmiBlitz3.ab3@11149>   TST.w instringon
00027998 <AmiBlitz3.ab3@11150>    BNE.b getcharb__done
0002799A <AmiBlitz3.ab3@11153>   MOVE.b (A5)+,D0
0002799E <AmiBlitz3.ab3@11154>             BEQ getcharb__loop_l1
000279A2 <AmiBlitz3.ab3@11155>             CMP.b #":",d0
000279A6 <AmiBlitz3.ab3@11156>             BNE getcharb__loop
000279AA <AmiBlitz3.ab3@11157>             CMP.b #"@",(a5)
000279AE <AmiBlitz3.ab3@11158>             BNE getcharb__loop
000279B4 <AmiBlitz3.ab3@11161>   MOVE.w D0,lastchar
000279B6 <AmiBlitz3.ab3@11164> RTS
000279BC <AmiBlitz3.ab3@11167>   NOT.w instringon
000279BE <AmiBlitz3.ab3@11168> RTS
000279C2 <AmiBlitz3.ab3@11172>   BSR.w getchar
000279C8 <AmiBlitz3.ab3@11173>   TST.w instringon
000279CC <AmiBlitz3.ab3@11174>    BNE.w get1byte__skip
000279D0 <AmiBlitz3.ab3@11175>   CMP.w #$20,D0
000279D4 <AmiBlitz3.ab3@11176>    BEQ.w get1byte_
000279D6 <AmiBlitz3.ab3@11179> RTS
000279F0 <AmiBlitz3.ab3@11182> gs:        Ds.w 13                                         ;ds.b 26  org source
000279F4 <AmiBlitz3.ab3@11183>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
000279F6 <AmiBlitz3.ab3@11184>            Dc.b $C4,$DC
000279FA <AmiBlitz3.ab3@11190>   BSR.w getchar
00027A00 <AmiBlitz3.ab3@11191>   TST.w instringon
00027A04 <AmiBlitz3.ab3@11192>    BNE.w gchar2
00027A08 <AmiBlitz3.ab3@11193>   CMP.w #$20,D0
00027A0C <AmiBlitz3.ab3@11194>    BEQ.w get1bytemain
00027A0E <AmiBlitz3.ab3@11196>   TST.w D0
00027A12 <AmiBlitz3.ab3@11199>   BEQ.b get1bytemain__zero
00027A18 <AmiBlitz3.ab3@11200>   TST.w instringon
00027A1C <AmiBlitz3.ab3@11201>    BEQ.b get1bytemain__noqoute
00027A20 <AmiBlitz3.ab3@11202>   CMP.b #$20,D0
00027A24 <AmiBlitz3.ab3@11203>    BCC.b get1bytemain__skip
00027A28 <AmiBlitz3.ab3@11204>   MOVE.b gs(PC,D0.W),D0
00027A2A <AmiBlitz3.ab3@11205> RTS
00027A2E <AmiBlitz3.ab3@11208>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00027A32 <AmiBlitz3.ab3@11209>    BEQ.b get1bytemain__zero
00027A36 <AmiBlitz3.ab3@11210>   CMP.w #$3A,D0
00027A3A <AmiBlitz3.ab3@11211>    BEQ.b get1bytemain__zero
00027A3C <AmiBlitz3.ab3@11214>   TST.w D0
00027A3E <AmiBlitz3.ab3@11217> RTS
00027A44 <AmiBlitz3.ab3@11221>   MOVE.w lastchar,D0
00027A48 <AmiBlitz3.ab3@11222> BRA.w gchar2
00027A52 <AmiBlitz3.ab3@11226>   MOVE.w oldqflag,instringon
00027A58 <AmiBlitz3.ab3@11227>   MOVEA.l lastsourcepos,A5
00027A5A <AmiBlitz3.ab3@11228> RTS
00027A60 <AmiBlitz3.ab3@11232>   MOVE.w D0,locchar
00027A66 <AmiBlitz3.ab3@11233>   MOVE.l A5,locloc
00027A68 <AmiBlitz3.ab3@11234> RTS
00027A6E <AmiBlitz3.ab3@11238>   MOVEA.l locloc,A5
00027A74 <AmiBlitz3.ab3@11239>   MOVE.w locchar,D0
00027A7A <AmiBlitz3.ab3@11240>   MOVE.w D0,lastchar
00027A7C <AmiBlitz3.ab3@11241> RTS
00027A7C <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00027AC4 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00027B16 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00027B54 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00027B92 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00027BBC <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00027BEC <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00027C36 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00027CBC <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00027D1E <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00027D66 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00027DB8 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00027E1A <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00027E68 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00027E9E <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00027ECC <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00027EE6 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00027F04 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00027F82 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00027FAC <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00027FD2 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00027FF2 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028010 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028030 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028058 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028082 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028084 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000280A0 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000280C6 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
000280DE <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
0002813C <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
0002815E <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028184 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000281AC <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000281CC <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
000281F0 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028236 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
0002825A <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
0002827E <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
0002829E <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
000282C2 <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
000282E4 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028310 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028336 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028340 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028366 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000283B8 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028422 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028480 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
000284EE <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
0002852A <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028548 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
0002856E <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
0002859E <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000285C2 <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
000285F0 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00028614 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
0002862A <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00028640 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00028646 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
0002864E <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00028650 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00028654 <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
0002865C <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
0002865E <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00028698 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
000286C4 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000286F4 <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
0002872C <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00028786 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00028788 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
0002878C <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00028790 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00028794 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00028798 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
0002879C <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
000287A0 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
000287A4 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
000287A8 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
000287AC <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
000287B0 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000287EE <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00028820 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
0002883E <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00028868 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00028884 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
0002889E <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
000288BC <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
000288E0 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
000288E2 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00028934 <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
0002895C <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00028984 <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
000289A0 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
000289C0 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
000289D8 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00028A1C <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00028A64 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00028A8E <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00028AB8 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
00028AD2 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00028AFC <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00028B50 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00028B9C <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00028BD4 <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00028BDA <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00028BE8 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00028C18 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00028C4C <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00028CB2 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00028CD0 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00028D4A <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00028D72 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00028D88 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00028D9C <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00028D9E <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00028D9F <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00028DA0 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00028DC0 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
00028DC6 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
00028DD8 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00028E0C <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00028E24 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00028E40 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00028E58 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00028E78 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00028E98 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00028EBE <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00028ED4 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00028EF0 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00028F1A <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00028F32 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00028F4E <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00028F6E <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00028F86 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00028F8A <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00028F90 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00028F96 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00028FAB <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00028FB1 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00028FB2 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00028FB6 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00028FBC <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00028FC2 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00028FD5 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00028FDB <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00028FDC <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00028FFA <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029012 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
0002902E <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029058 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029072 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029092 <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
000290B0 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
000290DE <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
000290E8 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002911A <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029138 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029156 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029176 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002919C <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
000291C2 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
000291EA <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029208 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029228 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029242 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029264 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029282 <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
000292A4 <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
000292C8 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
000292CE <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
000292EA <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029306 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029324 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029342 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029390 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
000293AE <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
000293CC <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
000293E6 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029432 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029458 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029478 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002949A <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
000294B6 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
000294DC <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
000294F8 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029516 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002953E <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002955A <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002956A <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002958C <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
00029590 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
00029592 <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
000295AC <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
000295D0 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
000295F0 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
00029622 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
00029680 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
000296B8 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
000296F6 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002972C <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002975E <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
00029782 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
000297A6 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
000297F0 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00029818 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
00029862 <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
000298A2 <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
000298A2 <AmiBlitz3.ab3@11245> XINCLUDE "internal_errormsg.ab3"
000298A4 <AmiBlitz3.ab3@11249> ezerr:   Ds.w 1                                            ;for simple errors
000298AA <AmiBlitz3.ab3@11255>    MOVE.l myline,d0
000298AE <AmiBlitz3.ab3@11256>   BNE handle_compileerror__l2
000298B4 <AmiBlitz3.ab3@11258>     MOVE.l a5,lastsourcepos
000298B6 <AmiBlitz3.ab3@11260>     SUBA.l a5,a5
000298BC <AmiBlitz3.ab3@11262>   TST.l usedfrom
000298C0 <AmiBlitz3.ab3@11263>   BEQ handle_compileerror__org
000298C6 <AmiBlitz3.ab3@11264>     MOVEA.l usedfrom,a5
000298CC <AmiBlitz3.ab3@11267>   TST.w dirmode
000298D0 <AmiBlitz3.ab3@11268>   BNE.b handle_compileerror__quiet
000298D6 <AmiBlitz3.ab3@11269>     JSR call_setpointernormal
000298DA <AmiBlitz3.ab3@11270>     MOVE.w ezerr(PC),D0
000298DE <AmiBlitz3.ab3@11271>     BNE.w handle_compileerror__skip
000298E4 <AmiBlitz3.ab3@11272>       MOVE.w cfetchmode,D0
000298E8 <AmiBlitz3.ab3@11273>       BEQ.w handle_compileerror__skip2
000298F2 <AmiBlitz3.ab3@11274>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
000298F8 <AmiBlitz3.ab3@11277>   MOVE.w constmode,D0
000298FC <AmiBlitz3.ab3@11278>   BEQ.b handle_compileerror__skip3
00029900 <AmiBlitz3.ab3@11279>     BSR.w asmerr2
00029906 <AmiBlitz3.ab3@11282>   MOVE.l firstlocal,D1
0002990C <AmiBlitz3.ab3@11283>   OR.l firstglob,D1
00029910 <AmiBlitz3.ab3@11284>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00029916 <AmiBlitz3.ab3@11285>     JSR JL_0_DB5C
0002991E <AmiBlitz3.ab3@11288>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00029928 <AmiBlitz3.ab3@11289>   CMP.l #"NORE",reqmode                                    ;for used functions
0002992C <AmiBlitz3.ab3@11290>   BEQ handle_compileerror__notproc_l1
00029936 <AmiBlitz3.ab3@11291>     MOVE.l linenumat,compilelinecounter
0002993C <AmiBlitz3.ab3@11294>   JSR close_compilewin
0002993E <AmiBlitz3.ab3@11297>   MOVEA.l (A7)+,A0
00029948 <AmiBlitz3.ab3@11298>   CMP.l #maxerrorcount,errorcounter
0002994C <AmiBlitz3.ab3@11299>   BLT 'lesserror
00029952 <AmiBlitz3.ab3@11300>   LEA errorlimit_text,a0
00029958 <AmiBlitz3.ab3@11303>   ADDQ.l #1,errorcounter
0002995E <AmiBlitz3.ab3@11304>   JSR errorstringparse
00029968 <AmiBlitz3.ab3@11305>   CMP.l #"NORE",reqmode                                    ;for used functions
0002996C <AmiBlitz3.ab3@11306>   BEQ handle_compileerror__skip_Lxx2
00029972 <AmiBlitz3.ab3@11307>   TST.l CLIMode
00029976 <AmiBlitz3.ab3@11308>   BNE 'climode_output
0002997C <AmiBlitz3.ab3@11311>     JSR save_errorfile
00029980 <AmiBlitz3.ab3@11312>     BRA 'end_output
00029986 <AmiBlitz3.ab3@11315>     JSR stdout_error
00029990 <AmiBlitz3.ab3@11317>      CMP.l #maxerrorcount,errorcounter
00029994 <AmiBlitz3.ab3@11318>      BGT 'end_output
0002999A <AmiBlitz3.ab3@11319>     MOVE.l lastsourcepos,a5
0002999C <AmiBlitz3.ab3@11321>  'loop TST.b (a5)
000299A0 <AmiBlitz3.ab3@11322>       BEQ 'ok2
000299A2 <AmiBlitz3.ab3@11323>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
000299A6 <AmiBlitz3.ab3@11324>     BEQ 'ok
000299AA <AmiBlitz3.ab3@11325>     CMP.b #":",d0
000299AE <AmiBlitz3.ab3@11326>     BEQ 'ok
000299B2 <AmiBlitz3.ab3@11327>     BRA 'loop
000299B4 <AmiBlitz3.ab3@11329>  'ok SUBQ.l #1,a5
000299BC <AmiBlitz3.ab3@11331>  'ok2 MOVE.w #0,lastchar
000299C4 <AmiBlitz3.ab3@11332>     MOVE.b #1,iserror
000299CA <AmiBlitz3.ab3@11333>     MOVE.l stackaddr,a7
000299CC <AmiBlitz3.ab3@11334>     RTS
000299CE <AmiBlitz3.ab3@11340>   MOVE.l A0,-(a7)
00029A0C <AmiBlitz3.ab3@11341>   !ComData_GetL{comFunc_ErrorRequest,A1}
00029A0E <AmiBlitz3.ab3@11342>   MOVE.l (a7)+,A0
00029A12 <AmiBlitz3.ab3@11344>   MOVEM.l d6/D7/A6,-(A7)
00029A18 <AmiBlitz3.ab3@11345>   MOVE.l includeline,d7
00029A1E <AmiBlitz3.ab3@11346>   MOVE.l #"INLN",a6
00029A28 <AmiBlitz3.ab3@11347>   MOVE.l errstack,tempa7
00029A2A <AmiBlitz3.ab3@11348>   JSR (A1)                                                  ;open ped errorrequest
00029A2E <AmiBlitz3.ab3@11350>   MOVEM.l (A7)+,D7/d6/A6
00029A34 <AmiBlitz3.ab3@11353>   MOVE.l tempa7,a7
00029A3A <AmiBlitz3.ab3@11354>   MOVEA.l errcont,A0
00029A3C <AmiBlitz3.ab3@11356> RTS
00029A42 <AmiBlitz3.ab3@11359>   MOVEA.l errstack,A7
00029A48 <AmiBlitz3.ab3@11360>   MOVEA.l errcont,A0
00029A4A <AmiBlitz3.ab3@11362> RTS
00029A4C <AmiBlitz3.ab3@11365>   MOVE.l (A7),D0
00029A52 <AmiBlitz3.ab3@11366>   MOVEA.l errstack,A7
00029A58 <AmiBlitz3.ab3@11367>   MOVEA.l errcont,A0
00029A5A <AmiBlitz3.ab3@11368> JMP (A0)
00029A5E <AmiBlitz3.ab3@11374>   CMP.w #$7A,D0                                            ;'z'
00029A62 <AmiBlitz3.ab3@11375>    BHI.w tstalpha__no
00029A66 <AmiBlitz3.ab3@11376>   CMP.w #$41,D0                                            ;'A'
00029A6A <AmiBlitz3.ab3@11377>    BCS.w tstalpha__no
00029A6E <AmiBlitz3.ab3@11378>   CMP.w #$61,D0                                            ;'a'
00029A72 <AmiBlitz3.ab3@11379>    BCC.w tstalpha__yes
00029A76 <AmiBlitz3.ab3@11380>   CMP.w #$5A,D0                                            ;'Z'
00029A7A <AmiBlitz3.ab3@11381>    BHI.w tstalpha__no
00029A7C <AmiBlitz3.ab3@11384>   CMP.w D0,D0
00029A7E <AmiBlitz3.ab3@11387> RTS
00029A82 <AmiBlitz3.ab3@11395>   CMP.w #$30,D0                                            ;'0'
00029A86 <AmiBlitz3.ab3@11396>    BCS.w tstnum__skip
00029A8A <AmiBlitz3.ab3@11397>   CMP.w #$39,D0                                            ;'9'
00029A8E <AmiBlitz3.ab3@11398>    BHI.w tstnum__skip                                     
00029A90 <AmiBlitz3.ab3@11399>   CMP.w D0,D0
00029A92 <AmiBlitz3.ab3@11402> RTS
00029AB4 <AmiBlitz3.ab3@11408>   !compare1                                                ;bsr.w tstalpha
00029AB8 <AmiBlitz3.ab3@11409>    BEQ.w tstlab__skip
00029ACA <AmiBlitz3.ab3@11410>   !compare2                                                ;bsr.w tstnum2
00029ACE <AmiBlitz3.ab3@11411>    BEQ.w tstlab__skip
00029AD2 <AmiBlitz3.ab3@11412>   CMP.w #$5F,D0                                            ;'_'
00029AD6 <AmiBlitz3.ab3@11413>    BEQ.w tstlab__skip
00029ADA <AmiBlitz3.ab3@11414>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00029ADC <AmiBlitz3.ab3@11417> RTS
00029AE6 <AmiBlitz3.ab3@11422>   MOVE.w oldqflag,instringon
00029AEC <AmiBlitz3.ab3@11423>   MOVEA.l lastsourcepos,A5
00029AF2 <AmiBlitz3.ab3@11426>   MOVE.l a5,beforeparameterfetch
00029AF8 <AmiBlitz3.ab3@11427>   LEA ptr_parameterstore,A1
00029AFA <AmiBlitz3.ab3@11430>   MOVEQ.l #$00,D2
00029B00 <AmiBlitz3.ab3@11433>   LEA chartab,a0
00029B02 <AmiBlitz3.ab3@11434>   MOVEQ #0,d0
00029B08 <AmiBlitz3.ab3@11435>   MOVE.l A5,lastsourcepos
00029B12 <AmiBlitz3.ab3@11436>   MOVE.w instringon,oldqflag
00029B14 <AmiBlitz3.ab3@11439>     MOVE.b (a5)+,d0
00029B18 <AmiBlitz3.ab3@11440>   CMP.b #$20,d0                                            ;space deftype
00029B1C <AmiBlitz3.ab3@11441>   BEQ makename4__retry
00029B22 <AmiBlitz3.ab3@11443>   MOVE.w d0,lastchar
00029B26 <AmiBlitz3.ab3@11444>   TST.b 0(a0,d0.w)
00029B2A <AmiBlitz3.ab3@11445>   BNE makename__done
00029B2C <AmiBlitz3.ab3@11454>   MOVE.b D0,(A1)+
00029B2E <AmiBlitz3.ab3@11455>   ADDQ.l #1,D2
00029B34 <AmiBlitz3.ab3@11456>   MOVE.l A5,lastsourcepos
00029B36 <AmiBlitz3.ab3@11459>   MOVE.b (a5)+,d0
00029B3C <AmiBlitz3.ab3@11460>   MOVE.b d0,lastchar+1
00029B40 <AmiBlitz3.ab3@11461>   CMP.b #$20,d0
00029B44 <AmiBlitz3.ab3@11462>   BEQ makename__loop_l20
00029B48 <AmiBlitz3.ab3@11464>   TST.b 0(a0,d0)
00029B4C <AmiBlitz3.ab3@11465>   BEQ makename__loop
00029B50 <AmiBlitz3.ab3@11466>   CMP.b #2,d0
00029B54 <AmiBlitz3.ab3@11467>   BNE makename__loop_lf1
00029B5A <AmiBlitz3.ab3@11468>   MOVEA.l usedfrom,A5
00029B60 <AmiBlitz3.ab3@11469>   CLR.l usedfrom
00029B64 <AmiBlitz3.ab3@11470> BRA makename__loop_ln1
00029B68 <AmiBlitz3.ab3@11473>   CMP.b #1,d0
00029B6C <AmiBlitz3.ab3@11474>   BNE makename__loop_l20
00029B70 <AmiBlitz3.ab3@11475>   MOVEA.l cmakea5(PC),A5
00029B74 <AmiBlitz3.ab3@11476> BRA makename__loop_ln1
00029B78 <AmiBlitz3.ab3@11479>   CMP.b #$7e,d0
00029B7C <AmiBlitz3.ab3@11480>             BNE makename__loop_lt
00029B82 <AmiBlitz3.ab3@11481>             TST.w cmake
00029B86 <AmiBlitz3.ab3@11482>             BNE.w makename__loop_a1
00029B88 <AmiBlitz3.ab3@11483>             SUBQ.l #1,a5
00029B8C <AmiBlitz3.ab3@11484>             BSR.w get1bytemain
00029B90 <AmiBlitz3.ab3@11485> BRA makename__loop
00029B94 <AmiBlitz3.ab3@11489> BRA makename__loop_gpex
00029B98 <AmiBlitz3.ab3@11493>   BSR.w getchar
00029BBA <AmiBlitz3.ab3@11494>    !compare1                                               ;bsr.w tstalpha
00029BBE <AmiBlitz3.ab3@11495>    BEQ.w makename__loop_getp1
00029BD0 <AmiBlitz3.ab3@11496>    !compare2                                               ;bsr.w tstnum
00029BD4 <AmiBlitz3.ab3@11497>    BEQ.w makename__loop_getp1
00029BD8 <AmiBlitz3.ab3@11498>   CMP.w #$5F,D0                                            ;'_'
00029BDC <AmiBlitz3.ab3@11499>    BEQ.w makename__loop_getp1
00029BE0 <AmiBlitz3.ab3@11500>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00029BE4 <AmiBlitz3.ab3@11504>       BNE makename__loop_gpex
00029BE8 <AmiBlitz3.ab3@11505>       CMP.b #$20,d0
00029BEC <AmiBlitz3.ab3@11506>       BNE.w makename__loop
00029BEE <AmiBlitz3.ab3@11509>      TST.b d0
00029BF2 <AmiBlitz3.ab3@11510>      BPL makename__loop_l10
00029BF4 <AmiBlitz3.ab3@11511>      SUBQ.l #1,a5
00029BF8 <AmiBlitz3.ab3@11512>      BSR get1byte_
00029BFC <AmiBlitz3.ab3@11515>    CMP.w #$20,D0
00029C00 <AmiBlitz3.ab3@11516>    BNE.w makename__done
00029C02 <AmiBlitz3.ab3@11517>    MOVEQ #0,d0
00029C08 <AmiBlitz3.ab3@11518>   MOVE.l a5,lastsourcepos
00029C0A <AmiBlitz3.ab3@11521>   MOVE.b (a5)+,d0                                          ;neuneu
00029C0E <AmiBlitz3.ab3@11522>   BPL makename__loop_l101:
00029C10 <AmiBlitz3.ab3@11523>   ASL.w #8,d0
00029C12 <AmiBlitz3.ab3@11524>   MOVE.b (a5)+,d0
00029C18 <AmiBlitz3.ab3@11527>   TST.w instringon
00029C1C <AmiBlitz3.ab3@11528>   BNE makename__loop_l102
00029C20 <AmiBlitz3.ab3@11529>   CMP.b #$20,d0
00029C24 <AmiBlitz3.ab3@11530>   BEQ makename__loop_l103
00029C28 <AmiBlitz3.ab3@11531>   CMP.b #";",d0
00029C2C <AmiBlitz3.ab3@11532>   BNE makename__loop_l102
00029C2E <AmiBlitz3.ab3@11535>   MOVE.b (A5)+,D0
00029C32 <AmiBlitz3.ab3@11536>              BEQ makename__loop_l1
00029C36 <AmiBlitz3.ab3@11537>              CMP.b #":",d0
00029C3A <AmiBlitz3.ab3@11538>              BNE makename__loop_lr                         ;:@
00029C3E <AmiBlitz3.ab3@11539>              CMP.b #"@",(a5)
00029C42 <AmiBlitz3.ab3@11540>              BNE makename__loop_lr
00029C44 <AmiBlitz3.ab3@11541>              ADDQ #1,a5
00029C4A <AmiBlitz3.ab3@11545>   MOVE.w d0,lastchar
00029C4E <AmiBlitz3.ab3@11549>   CMP.b #";",d0
00029C52 <AmiBlitz3.ab3@11550>   BEQ makename__done_l11
00029C54 <AmiBlitz3.ab3@11551>   CLR.b (A1)
00029C56 <AmiBlitz3.ab3@11553>   TST.w D2
00029C58 <AmiBlitz3.ab3@11554> RTS
00029C5A <AmiBlitz3.ab3@11557>   CLR.b (a1)
00029C5C <AmiBlitz3.ab3@11558>   MOVEQ #0,d0
00029C62 <AmiBlitz3.ab3@11559>   MOVE.w d0,lastchar
00029C64 <AmiBlitz3.ab3@11561>   TST.w D2
00029C66 <AmiBlitz3.ab3@11562> RTS
00029C68 <AmiBlitz3.ab3@11568>   MOVE.l (A2),D0
00029C6C <AmiBlitz3.ab3@11571>   BEQ.w findlast__here
00029C6E <AmiBlitz3.ab3@11572>   MOVEA.l D0,A2
00029C72 <AmiBlitz3.ab3@11573> BRA.w findlast__loop
00029C76 <AmiBlitz3.ab3@11576> BRA.w reget
00029C78 <AmiBlitz3.ab3@11582>   MOVE.l (A2),-(A7)
00029C7C <AmiBlitz3.ab3@11583>   BSR.w addlabel
00029C7E <AmiBlitz3.ab3@11584>   MOVE.l (A7)+,(A2)
00029C80 <AmiBlitz3.ab3@11585> RTS
00029C86 <AmiBlitz3.ab3@11590>   CLR.l fp0addr
00029C8C <AmiBlitz3.ab3@11591>   TST.w dirmode
00029C90 <AmiBlitz3.ab3@11592>    BNE.w illdirerr
00029C92 <AmiBlitz3.ab3@11593>   MOVEQ.l #$00,D0
00029C94 <AmiBlitz3.ab3@11594>   MOVE.w D7,D0
00029C96 <AmiBlitz3.ab3@11595>   ADD.w D2,D0
00029C98 <AmiBlitz3.ab3@11596>   ADDQ.w #1,D0
00029C9A <AmiBlitz3.ab3@11597>   MOVE.w D0,D2
00029C9C <AmiBlitz3.ab3@11598>   ADDQ.l #2,d0
00029C9E <AmiBlitz3.ab3@11599>   MOVEQ.l #$01,D1
00029CA4 <AmiBlitz3.ab3@11600>   MOVEA.l _execbase,A6
00029CAA <AmiBlitz3.ab3@11601>   MOVE.l mempool2,a0
00029CAE <AmiBlitz3.ab3@11602>   JSR _AllocPooled(a6)
00029CB4 <AmiBlitz3.ab3@11604>   MOVE.l lastlabel,a2
00029CB6 <AmiBlitz3.ab3@11605>   MOVE.l D0,(A2)
00029CB8 <AmiBlitz3.ab3@11606>   MOVE.l d0,a0
00029CBA <AmiBlitz3.ab3@11607>   CLR.l (a0)
00029CC0 <AmiBlitz3.ab3@11608>   MOVE.l a0,lastlabel
00029CC2 <AmiBlitz3.ab3@11609>   MOVE.l d0,A2
00029CC6 <AmiBlitz3.ab3@11610>   LEA -$1(A0,D7.W),A0
00029CC8 <AmiBlitz3.ab3@11611>   MOVE.b D2,(A0)+
00029CCE <AmiBlitz3.ab3@11612>   LEA ptr_parameterstore,A1
00029CD0 <AmiBlitz3.ab3@11613>   MOVEQ #0,d0
00029CD2 <AmiBlitz3.ab3@11614>   MOVEQ #0,d1
00029CD4 <AmiBlitz3.ab3@11617>   MOVE.b (A1)+,d1
00029CD8 <AmiBlitz3.ab3@11618>    BEQ 'l1
00029CDE <AmiBlitz3.ab3@11619>    !hashalgo
00029CE0 <AmiBlitz3.ab3@11620>    MOVE.b d1,(A0)+
00029CE4 <AmiBlitz3.ab3@11621> BRA addlabel_loop2a
00029CE6 <AmiBlitz3.ab3@11624>    CLR.b (a0)+
00029CEC <AmiBlitz3.ab3@11625>    LEA labelhash,a0
00029CF2 <AmiBlitz3.ab3@11626>    AND.l #hashsize,d0
00029CF4 <AmiBlitz3.ab3@11627>    ASL.l #2,d0
00029CF8 <AmiBlitz3.ab3@11628>    MOVE.l 0(a0,d0),d1
00029CFC <AmiBlitz3.ab3@11629>    MOVE.l d1,$c(a2)
00029D00 <AmiBlitz3.ab3@11630>    MOVE.l a2,0(a0,d0)
00029D02 <AmiBlitz3.ab3@11631>    MOVEQ #0,d0
00029D06 <AmiBlitz3.ab3@11632> BRA.w reget
00029D0C <AmiBlitz3.ab3@11636>    TST.b newvariable
00029D10 <AmiBlitz3.ab3@11637>    BNE addlabel
00029D16 <AmiBlitz3.ab3@11640>   TST.w dirmode
00029D1A <AmiBlitz3.ab3@11641>    BNE.w illdirerr
00029D1C <AmiBlitz3.ab3@11642>   MOVEQ.l #$00,D0
00029D1E <AmiBlitz3.ab3@11643>   MOVE.w D7,D0
00029D20 <AmiBlitz3.ab3@11644>   ADD.w D2,D0
00029D22 <AmiBlitz3.ab3@11645>   ADDQ.w #1,D0
00029D24 <AmiBlitz3.ab3@11646>   MOVE.w D0,D2
00029D26 <AmiBlitz3.ab3@11647>   MOVEQ.l #$01,D1
00029D2C <AmiBlitz3.ab3@11648>   MOVEA.l _execbase,A6
00029D32 <AmiBlitz3.ab3@11649>   MOVE.l mempool2,a0
00029D36 <AmiBlitz3.ab3@11650>   JSR _AllocPooled(a6)
00029D38 <AmiBlitz3.ab3@11651>   MOVEA.l D0,A0
00029D3E <AmiBlitz3.ab3@11653>   LEA varbase,a2
00029D40 <AmiBlitz3.ab3@11654>   MOVE.l (a2),(a0)
00029D42 <AmiBlitz3.ab3@11655>   MOVE.l A0,(A2)
00029D44 <AmiBlitz3.ab3@11656>   MOVEA.l A0,A2
00029D48 <AmiBlitz3.ab3@11657>   LEA -$1(A0,D7.W),A0
00029D4A <AmiBlitz3.ab3@11658>   MOVE.b D2,(A0)+
00029D50 <AmiBlitz3.ab3@11659>   LEA ptr_parameterstore,A1
00029D52 <AmiBlitz3.ab3@11660>   MOVEQ #0,d0
00029D54 <AmiBlitz3.ab3@11661>   MOVEQ #0,d1
00029D56 <AmiBlitz3.ab3@11664>   MOVE.b (A1)+,d1
00029D5A <AmiBlitz3.ab3@11665>    BEQ 'l12
00029D60 <AmiBlitz3.ab3@11666>    !hashalgo
00029D62 <AmiBlitz3.ab3@11667>    MOVE.b d1,(A0)+
00029D66 <AmiBlitz3.ab3@11668> BRA 'l11
00029D68 <AmiBlitz3.ab3@11671>   CLR.b (a0)+
00029D6E <AmiBlitz3.ab3@11672>   LEA variablehash,a0
00029D74 <AmiBlitz3.ab3@11673>    AND.l #hashsize,d0
00029D76 <AmiBlitz3.ab3@11674>    ASL.l #2,d0
00029D7A <AmiBlitz3.ab3@11675>    MOVE.l 0(a0,d0),d1
00029D7E <AmiBlitz3.ab3@11676>    MOVE.l d1,$e(a2)
00029D82 <AmiBlitz3.ab3@11677>    MOVE.l a2,0(a0,d0)
00029D84 <AmiBlitz3.ab3@11678>    MOVEQ #0,d0
00029D88 <AmiBlitz3.ab3@11679> BRA.w reget
00029D8E <AmiBlitz3.ab3@11683>   TST.w dirmode
00029D92 <AmiBlitz3.ab3@11684>    BNE.w illdirerr
00029D94 <AmiBlitz3.ab3@11691>   MOVEQ.l #$00,D0
00029D96 <AmiBlitz3.ab3@11692>   MOVE.w D7,D0
00029D98 <AmiBlitz3.ab3@11693>   ADD.w D2,D0
00029D9A <AmiBlitz3.ab3@11694>   ADDQ.w #1,D0
00029D9C <AmiBlitz3.ab3@11695>   MOVE.w D0,D2
00029D9E <AmiBlitz3.ab3@11696>   MOVEQ.l #$01,D1
00029DA4 <AmiBlitz3.ab3@11697>   MOVEA.l _execbase,A6
00029DAA <AmiBlitz3.ab3@11698>   MOVE.l mempool2,a0
00029DAE <AmiBlitz3.ab3@11699>   JSR _AllocPooled(a6)
00029DB0 <AmiBlitz3.ab3@11701>   MOVEA.l D0,A0
00029DB2 <AmiBlitz3.ab3@11702>   MOVE.l A0,(A2)
00029DB4 <AmiBlitz3.ab3@11703>   CLR.l (a0)
00029DB8 <AmiBlitz3.ab3@11704>   CLR.l 8(a0)                                              ;clear next
00029DBA <AmiBlitz3.ab3@11705>   MOVEA.l A0,A2
00029DBE <AmiBlitz3.ab3@11706>   LEA -$1(A0,D7.W),A0
00029DC0 <AmiBlitz3.ab3@11707>   MOVE.b D2,(A0)+                                          ;put in struct length
00029DC6 <AmiBlitz3.ab3@11708>   LEA ptr_parameterstore,A1
00029DC8 <AmiBlitz3.ab3@11709>   MOVEQ #0,d0
00029DCA <AmiBlitz3.ab3@11710>   MOVEQ #0,d1
00029DCC <AmiBlitz3.ab3@11713>   MOVE.b (A1)+,d1
00029DCE <AmiBlitz3.ab3@11716>   MOVE.b d1,(A0)+
00029DD2 <AmiBlitz3.ab3@11717>   BNE.w addlabel_loop2
00029DD6 <AmiBlitz3.ab3@11718> BRA.w reget
00029DD8 <AmiBlitz3.ab3@11722>   MOVEQ.l #$13,D7
00029DDE <AmiBlitz3.ab3@11723>   LEA constantbase,A2
00029DE2 <AmiBlitz3.ab3@11724> BRA.w findlab
00029DE4 <AmiBlitz3.ab3@11728>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00029DEA <AmiBlitz3.ab3@11729>   LEA xinclude_base,A2
00029DEE <AmiBlitz3.ab3@11730> BRA.w findlab
00029DF0 <AmiBlitz3.ab3@11734>   MOVEQ.l #$09,D7
00029DF6 <AmiBlitz3.ab3@11735>   LEA firstconst,A2
00029DFA <AmiBlitz3.ab3@11736> BRA.w findlab
00029DFC <AmiBlitz3.ab3@11740>   MOVEQ.l #$0d,D7                                          ;find macro
00029E02 <AmiBlitz3.ab3@11741>   LEA macrobase,A2
00029E06 <AmiBlitz3.ab3@11742> BRA.w findlab
00029E0C <AmiBlitz3.ab3@11746>   LEA labelhash,A2
00029E0E <AmiBlitz3.ab3@11747>   MOVEQ.l #$13,D7
00029E10 <AmiBlitz3.ab3@11748>   EXT.l d2
00029E16 <AmiBlitz3.ab3@11749>   LEA ptr_parameterstore,A0
00029E18 <AmiBlitz3.ab3@11750>   MOVEQ #0,d0
00029E1A <AmiBlitz3.ab3@11751>   MOVEQ #0,d1
00029E1C <AmiBlitz3.ab3@11754>     MOVE.b (a0)+,d1
00029E20 <AmiBlitz3.ab3@11755>     BEQ 'l15
00029E26 <AmiBlitz3.ab3@11756>     !hashalgo
00029E2A <AmiBlitz3.ab3@11757> BRA 'l20
00029E30 <AmiBlitz3.ab3@11760>   AND.l #hashsize,d0
00029E32 <AmiBlitz3.ab3@11761>   ASL.l #2,d0
00029E36 <AmiBlitz3.ab3@11762>   MOVE.l 0(a2,d0),d0
00029E3A <AmiBlitz3.ab3@11763> BRA 'l11
00029E3E <AmiBlitz3.ab3@11766>   MOVE.l $c(A2),D0                                         ;find label
00029E42 <AmiBlitz3.ab3@11769>   BEQ findlab__no
00029E44 <AmiBlitz3.ab3@11770>   MOVEA.l D0,A2
00029E46 <AmiBlitz3.ab3@11771>   MOVEQ.l #$00,D0
00029E4A <AmiBlitz3.ab3@11772>   MOVE.b -$1(A2,D7.l),D0
00029E50 <AmiBlitz3.ab3@11773>   LEA ptr_parameterstore,A0
00029E52 <AmiBlitz3.ab3@11774>   SUB.l D7,D0
00029E54 <AmiBlitz3.ab3@11775>   SUBQ.l #1,D0
00029E56 <AmiBlitz3.ab3@11776>   CMP.l D0,D2
00029E5A <AmiBlitz3.ab3@11777>    BNE.b 'l10
00029E5E <AmiBlitz3.ab3@11778>   LEA $0(A2,D7.W),A1
00029E60 <AmiBlitz3.ab3@11779>   SUBQ.l #1,D0
00029E62 <AmiBlitz3.ab3@11782>     MOVE.b (a1)+,d1
00029E64 <AmiBlitz3.ab3@11783>     CMP.b (a0)+,d1
00029E68 <AmiBlitz3.ab3@11785>     BNE.b 'l10
00029E6C <AmiBlitz3.ab3@11786>   DBF D0,'l201
00029E70 <AmiBlitz3.ab3@11788>   BSR.w reget
00029E72 <AmiBlitz3.ab3@11789>   CMP.w D0,D0
00029E74 <AmiBlitz3.ab3@11790> RTS
00029E76 <AmiBlitz3.ab3@11794>   MOVEQ.l #$0B,D7
00029E7A <AmiBlitz3.ab3@11795> BRA.w findlab
00029E80 <AmiBlitz3.ab3@11799>   LEA firstproc,A2
00029E86 <AmiBlitz3.ab3@11800>   MOVE.l #$21+#funcentry_extend,D7
00029E8A <AmiBlitz3.ab3@11801> BRA findlab
00029E90 <AmiBlitz3.ab3@11805>   LEA firstfor,A2
00029E92 <AmiBlitz3.ab3@11806>   MOVEQ.l #$11,D7
00029E96 <AmiBlitz3.ab3@11807> BRA.w findlab
00029E98 <AmiBlitz3.ab3@11811>   MOVEQ.l #$0F,D7
00029E9C <AmiBlitz3.ab3@11812> BRA.w findlab
00029E9E <AmiBlitz3.ab3@11816>   MOVEQ.l #$0F+4,D7
00029EA4 <AmiBlitz3.ab3@11817>   TST.b newvariable
00029EA8 <AmiBlitz3.ab3@11818>    BNE.w findlab
00029EAE <AmiBlitz3.ab3@11819>   LEA variablehash,A2
00029EB4 <AmiBlitz3.ab3@11820>   LEA ptr_parameterstore,A0
00029EB6 <AmiBlitz3.ab3@11821>   MOVEQ #0,d0
00029EB8 <AmiBlitz3.ab3@11822>   MOVEQ #0,d1
00029EBA <AmiBlitz3.ab3@11825>     MOVE.b (a0)+,d1
00029EBE <AmiBlitz3.ab3@11826>     BEQ 'l15
00029EC4 <AmiBlitz3.ab3@11827>     !hashalgo
00029EC8 <AmiBlitz3.ab3@11828> BRA 'l20
00029ECE <AmiBlitz3.ab3@11831>   AND.l #hashsize,d0
00029ED0 <AmiBlitz3.ab3@11832>   ASL.l #2,d0
00029ED4 <AmiBlitz3.ab3@11833>   MOVE.l 0(a2,d0),d0
00029ED8 <AmiBlitz3.ab3@11834> BRA 'l11
00029EDC <AmiBlitz3.ab3@11837>   MOVE.l $e(A2),D0                                         ;find label
00029EE0 <AmiBlitz3.ab3@11840>   BEQ findlab__no
00029EE2 <AmiBlitz3.ab3@11841>   MOVEA.l D0,A2
00029EE4 <AmiBlitz3.ab3@11842>   MOVEQ.l #$00,D0
00029EE8 <AmiBlitz3.ab3@11843>   MOVE.b -$1(A2,D7.W),D0
00029EEE <AmiBlitz3.ab3@11844>   LEA ptr_parameterstore,A0
00029EF0 <AmiBlitz3.ab3@11845>   SUB.w D7,D0
00029EF2 <AmiBlitz3.ab3@11846>   SUBQ.l #1,D0
00029EF4 <AmiBlitz3.ab3@11847>   CMP.w D0,D2
00029EF8 <AmiBlitz3.ab3@11848>    BNE.b 'l10
00029EFC <AmiBlitz3.ab3@11849>   LEA $0(A2,D7.W),A1
00029EFE <AmiBlitz3.ab3@11850>   SUBQ.l #1,D0
00029F00 <AmiBlitz3.ab3@11853>     MOVE.b (a1)+,d1
00029F02 <AmiBlitz3.ab3@11854>     CMP.b (a0)+,d1
00029F06 <AmiBlitz3.ab3@11856>     BNE.b 'l10
00029F0A <AmiBlitz3.ab3@11857>   DBF D0,'l201
00029F0E <AmiBlitz3.ab3@11859>   BSR.w reget
00029F10 <AmiBlitz3.ab3@11860>   CMP.w D0,D0
00029F12 <AmiBlitz3.ab3@11861> RTS
00029F14 <AmiBlitz3.ab3@11874>     MOVE.l (A2),D0                                         ;find label
00029F18 <AmiBlitz3.ab3@11875>      BEQ.b findlab__no
00029F1A <AmiBlitz3.ab3@11876>     MOVEA.l D0,A2
00029F1C <AmiBlitz3.ab3@11877>     MOVEQ.l #$00,D0
00029F20 <AmiBlitz3.ab3@11878>     MOVE.b -$1(A2,D7.W),D0
00029F22 <AmiBlitz3.ab3@11879>     SUB.l D7,D0
00029F24 <AmiBlitz3.ab3@11880>     SUBQ.l #1,D0
00029F26 <AmiBlitz3.ab3@11881>   CMP.w D0,D2
00029F2A <AmiBlitz3.ab3@11882>   BNE.b findlab__loop
00029F2E <AmiBlitz3.ab3@11884>   LEA $0(A2,D7.W),A1
00029F34 <AmiBlitz3.ab3@11885>   LEA ptr_parameterstore,A0
00029F36 <AmiBlitz3.ab3@11886>   SUBQ.l #1,D0
00029F38 <AmiBlitz3.ab3@11889>     MOVE.b (a1)+,d1
00029F3A <AmiBlitz3.ab3@11890>     CMP.b (a0)+,d1
00029F3E <AmiBlitz3.ab3@11892>     BNE.b findlab__loop
00029F42 <AmiBlitz3.ab3@11893>   DBF D0,findlab__loop2
00029F46 <AmiBlitz3.ab3@11895>   BSR.w reget
00029F48 <AmiBlitz3.ab3@11896>   CMP.w D0,D0
00029F4A <AmiBlitz3.ab3@11897> RTS
00029F4E <AmiBlitz3.ab3@11900>   BSR.w reget
00029F50 <AmiBlitz3.ab3@11901>   MOVEQ.l #-$01,D1
00029F52 <AmiBlitz3.ab3@11902> RTS
00029F58 <AmiBlitz3.ab3@11906>   MOVEA.l alllocals,A4
00029F5E <AmiBlitz3.ab3@11907>   CLR.l alllocals
00029F62 <AmiBlitz3.ab3@11911>     CMPA.w #$0,A4
00029F66 <AmiBlitz3.ab3@11912>      BEQ.b freeprocvs__done
00029F6A <AmiBlitz3.ab3@11913>     MOVEA.l $4(A4),A3
00029F6E <AmiBlitz3.ab3@11915>     MOVEA.l $8(A4),A3
00029F70 <AmiBlitz3.ab3@11917>     MOVEA.l A4,A1
00029F72 <AmiBlitz3.ab3@11918>     MOVEA.l (A4),A4
00029F74 <AmiBlitz3.ab3@11919>     MOVEQ.l #$0C,D0
00029F7A <AmiBlitz3.ab3@11920>     MOVEA.l _execbase,A6
00029F80 <AmiBlitz3.ab3@11921>     MOVE.l mempool,a0
00029F84 <AmiBlitz3.ab3@11922>     JSR _FreePooled(A6)
00029F88 <AmiBlitz3.ab3@11923> BRA.b freeprocvs__loop
00029F8E <AmiBlitz3.ab3@11926>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00029F94 <AmiBlitz3.ab3@11927>   CLR.l firstlocal
00029F9A <AmiBlitz3.ab3@11928>   CLR.l sharebase
00029FA0 <AmiBlitz3.ab3@11929>   TST.l mempool2
00029FA4 <AmiBlitz3.ab3@11930>   BEQ freeprocvs__done_l10
00029FAA <AmiBlitz3.ab3@11932>   MOVEA.l _execbase,A6
00029FB0 <AmiBlitz3.ab3@11933>   MOVE.l mempool2,a0
00029FB6 <AmiBlitz3.ab3@11934>   CLR.l mempool2
00029FBA <AmiBlitz3.ab3@11935>   JSR _DeletePool(a6)
00029FC0 <AmiBlitz3.ab3@11938>   MOVE.l _execbase,a6
00029FC6 <AmiBlitz3.ab3@11939>   MOVE.l #$10000,d0
00029FCC <AmiBlitz3.ab3@11940>   MOVE.l #80000,d1
00029FCE <AmiBlitz3.ab3@11941>   MOVE.l d1,d2
00029FD2 <AmiBlitz3.ab3@11942>   JSR _CreatePool(a6)
00029FD8 <AmiBlitz3.ab3@11943>   MOVE.l d0,mempool2
00029FDA <AmiBlitz3.ab3@11944> RTS
00029FDE <AmiBlitz3.ab3@11948>   CMPA.w #$0,A3
00029FE2 <AmiBlitz3.ab3@11949>    BEQ.w freevars__done
00029FE4 <AmiBlitz3.ab3@11950>   MOVEA.l A3,A1
00029FE6 <AmiBlitz3.ab3@11951>   MOVEA.l (A3),A3
00029FE8 <AmiBlitz3.ab3@11952>   MOVEQ.l #$00,D0
00029FEC <AmiBlitz3.ab3@11953>   MOVE.b $E(A1),D0
00029FF2 <AmiBlitz3.ab3@11954>   MOVEA.l _execbase,A6
00029FF8 <AmiBlitz3.ab3@11955>   MOVE.l mempool2,a0
00029FFC <AmiBlitz3.ab3@11956>   JSR _FreePooled(A6)
0002A000 <AmiBlitz3.ab3@11957> BRA.w freevars
0002A004 <AmiBlitz3.ab3@11960>     CMPA.w #$0,A3
0002A008 <AmiBlitz3.ab3@11961>      BEQ.w freevars__done
0002A00A <AmiBlitz3.ab3@11962>     MOVEA.l A3,A1
0002A00C <AmiBlitz3.ab3@11963>     MOVEA.l (A3),A3
0002A00E <AmiBlitz3.ab3@11964>     MOVEQ.l #$00,D0
0002A012 <AmiBlitz3.ab3@11965>     MOVE.b $E+4(A1),D0
0002A018 <AmiBlitz3.ab3@11966>     MOVEA.l _execbase,A6
0002A01E <AmiBlitz3.ab3@11967>     MOVE.l mempool2,a0
0002A022 <AmiBlitz3.ab3@11968>     JSR _FreePooled(A6)
0002A026 <AmiBlitz3.ab3@11969> BRA.w freevarsb
0002A028 <AmiBlitz3.ab3@11972> RTS
0002A02E <AmiBlitz3.ab3@11976>   MOVEA.l currentlabeladdr,A0
0002A034 <AmiBlitz3.ab3@11977>   MOVE.l a0,lastlabel
0002A036 <AmiBlitz3.ab3@11978>   MOVEA.l (A0),A2
0002A038 <AmiBlitz3.ab3@11979>   CLR.l (A0)
0002A03E <AmiBlitz3.ab3@11980>   MOVEA.l _execbase,A6
0002A042 <AmiBlitz3.ab3@11983>   CMPA.w #$0,A2
0002A046 <AmiBlitz3.ab3@11984>    BEQ.w clearlabels__done
0002A04A <AmiBlitz3.ab3@11985>   MOVE.l $4(A2),D0
0002A04E <AmiBlitz3.ab3@11986>   BTST #$0,D0
0002A052 <AmiBlitz3.ab3@11987>    BNE.w clearlabels__skip
0002A054 <AmiBlitz3.ab3@11988>   MOVEA.l D0,A3
0002A058 <AmiBlitz3.ab3@11991>     CMPA.w #$0,A3
0002A05C <AmiBlitz3.ab3@11992>      BEQ.w clearlabels__skip
0002A05E <AmiBlitz3.ab3@11993>     MOVEA.l A3,A1
0002A060 <AmiBlitz3.ab3@11994>     MOVEA.l (A3),A3
0002A062 <AmiBlitz3.ab3@11995>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002A068 <AmiBlitz3.ab3@11996>     MOVE.l mempool,a0
0002A06C <AmiBlitz3.ab3@11997>     JSR _FreePooled(A6)
0002A070 <AmiBlitz3.ab3@11998> BRA.w clearlabels__loop2
0002A072 <AmiBlitz3.ab3@12001>   MOVEQ.l #$00,D0
0002A076 <AmiBlitz3.ab3@12002>   MOVE.b $12(A2),D0
0002A078 <AmiBlitz3.ab3@12003>   MOVEA.l A2,A1
0002A07A <AmiBlitz3.ab3@12004>   MOVEA.l (A2),A2
0002A080 <AmiBlitz3.ab3@12005>   MOVE.l mempool2,a0
0002A084 <AmiBlitz3.ab3@12007> BRA.w clearlabels__loop
0002A086 <AmiBlitz3.ab3@12010> RTS
0002A08C <AmiBlitz3.ab3@12014>   MOVEA.l firstpend,A3
0002A092 <AmiBlitz3.ab3@12015>   CLR.l firstpend
0002A098 <AmiBlitz3.ab3@12016>   MOVEA.l _execbase,A6
0002A09C <AmiBlitz3.ab3@12019>     CMPA.w #$0,A3
0002A0A0 <AmiBlitz3.ab3@12020>      BEQ.w freepends__done
0002A0A2 <AmiBlitz3.ab3@12021>     MOVEA.l A3,A1
0002A0A4 <AmiBlitz3.ab3@12022>     MOVEQ.l #$08,D0
0002A0A6 <AmiBlitz3.ab3@12023>     MOVEA.l (A3),A3
0002A0AC <AmiBlitz3.ab3@12024>     MOVE.l mempool,a0
0002A0B0 <AmiBlitz3.ab3@12025>     JSR _FreePooled(A6)
0002A0B4 <AmiBlitz3.ab3@12026> BRA.w fpnd2
0002A0B6 <AmiBlitz3.ab3@12029> RTS
0002A0BC <AmiBlitz3.ab3@12033>   MOVEA.l firstproc,A2
0002A0C2 <AmiBlitz3.ab3@12034>   CLR.l firstproc
0002A0C8 <AmiBlitz3.ab3@12035>   MOVEA.l _execbase,A6
0002A0CC <AmiBlitz3.ab3@12038>     CMPA.w #$0,A2
0002A0D0 <AmiBlitz3.ab3@12039>      BEQ.w clearfunctionlist__done
0002A0D2 <AmiBlitz3.ab3@12040>     MOVEA.l A2,A1
0002A0D4 <AmiBlitz3.ab3@12041>     MOVEA.l (A2),A2
0002A0D6 <AmiBlitz3.ab3@12042>     MOVEQ.l #$00,D0
0002A0DA <AmiBlitz3.ab3@12043>     MOVE.b $20+#funcentry_extend(A1),D0
0002A0E0 <AmiBlitz3.ab3@12044>     MOVE.l mempool2,a0
0002A0E4 <AmiBlitz3.ab3@12045>     JSR _FreePooled(A6)
0002A0E8 <AmiBlitz3.ab3@12046> BRA.w clearfunctionlist__loop
0002A0EA <AmiBlitz3.ab3@12049> RTS
0002A0EE <AmiBlitz3.ab3@12053>   CMPA.w #$0,A2
0002A0F2 <AmiBlitz3.ab3@12054>    BEQ.w freetypes__done
0002A0F6 <AmiBlitz3.ab3@12055>   MOVEA.l $4(A2),A3
0002A0FA <AmiBlitz3.ab3@12056>   CMPA.w #$FF,A3
0002A0FE <AmiBlitz3.ab3@12057>    BEQ.w freetypes__noway
0002A102 <AmiBlitz3.ab3@12061>    BSR.w freevars
0002A104 <AmiBlitz3.ab3@12064>     MOVEA.l A2,A1
0002A106 <AmiBlitz3.ab3@12065>     MOVEA.l (A2),A2
0002A108 <AmiBlitz3.ab3@12066>     MOVEQ.l #$00,D0
0002A10C <AmiBlitz3.ab3@12067>     MOVE.b $A(A1),D0
0002A112 <AmiBlitz3.ab3@12068>     MOVEA.l _execbase,A6
0002A118 <AmiBlitz3.ab3@12069>     MOVE.l mempool2,a0
0002A11C <AmiBlitz3.ab3@12070>     JSR _FreePooled(A6)
0002A120 <AmiBlitz3.ab3@12071> BRA.w freetypes
0002A122 <AmiBlitz3.ab3@12074> RTS
0002A128 <AmiBlitz3.ab3@12078>   JSR uselib2
0002A12E <AmiBlitz3.ab3@12080>   CLR.w notshared
0002A134 <AmiBlitz3.ab3@12081>   CLR.w varmode
0002A13A <AmiBlitz3.ab3@12082>   MOVE.w proceduremode,D1
0002A13E <AmiBlitz3.ab3@12083>    BNE.w JL_0_8F4E
0002A144 <AmiBlitz3.ab3@12084>   LEA varbase,A2
0002A14A <AmiBlitz3.ab3@12085>   LEA ptr_parameterstore,a0
0002A14E <AmiBlitz3.ab3@12086>   CMP.b #$22,(a0)
0002A152 <AmiBlitz3.ab3@12087>   BNE JL_0_8E5E
0002A154 <AmiBlitz3.ab3@12088>   MOVEQ #0,d0
0002A15A <AmiBlitz3.ab3@12089> JMP error
0002A15E <AmiBlitz3.ab3@12092>   BSR.w findvariable
0002A162 <AmiBlitz3.ab3@12095>   BNE.w JL_0_8E7E
0002A168 <AmiBlitz3.ab3@12098>   MOVE.b flagmask+1,D1
0002A16C <AmiBlitz3.ab3@12099>   MOVE.b $7(A2),D3
0002A16E <AmiBlitz3.ab3@12100>   EOR.b D3,D1
0002A172 <AmiBlitz3.ab3@12101>   BNE 'l2
0002A17A <AmiBlitz3.ab3@12102>   CMP.b #2,nowdeclare
0002A17E <AmiBlitz3.ab3@12103>   BEQ errormsg_declaredtwice
0002A182 <AmiBlitz3.ab3@12104> BRA.w JL_0_8FA8
0002A186 <AmiBlitz3.ab3@12107>   BSR.w findlab
0002A18A <AmiBlitz3.ab3@12108>   BNE 'l1
0002A192 <AmiBlitz3.ab3@12109>   CMP.b #2,nowdeclare
0002A196 <AmiBlitz3.ab3@12110>   BEQ errormsg_declaredtwice
0002A198 <AmiBlitz3.ab3@12111>   CMP.w d0,d0
0002A19C <AmiBlitz3.ab3@12114> BRA.w JL_0_8E62
0002A19E <AmiBlitz3.ab3@12117>    MOVE.l a2,-(a7)
0002A1A4 <AmiBlitz3.ab3@12118>    LEA sharebase,a2
0002A1A6 <AmiBlitz3.ab3@12119>    MOVEQ #$f+4,d7
0002A1AA <AmiBlitz3.ab3@12120>    BSR.w findlab
0002A1AE <AmiBlitz3.ab3@12121>    BEQ 'l2x
0002A1B0 <AmiBlitz3.ab3@12122>    MOVE.l (a7)+,a2
0002A1B4 <AmiBlitz3.ab3@12123> BRA 'cont
0002A1B6 <AmiBlitz3.ab3@12126>   ADDQ.l #4,a7
0002A1BC <AmiBlitz3.ab3@12127>   CLR.w varmode
0002A1C2 <AmiBlitz3.ab3@12128>   MOVE.b flagmask+1,D1
0002A1C6 <AmiBlitz3.ab3@12129>   MOVE.b $7(A2),D3
0002A1C8 <AmiBlitz3.ab3@12130>   EOR.b D3,D1
0002A1CC <AmiBlitz3.ab3@12131>   BNE vardeclareerr
0002A1D0 <AmiBlitz3.ab3@12132> BRA JL_0_8FA8
0002A1D6 <AmiBlitz3.ab3@12135>    MOVE.w nonew,D1
0002A1DA <AmiBlitz3.ab3@12136>    BNE.w nonewerr
0002A1E0 <AmiBlitz3.ab3@12137>    TST.b nowdeclare
0002A1E4 <AmiBlitz3.ab3@12138>    BNE 'l2
0002A1EA <AmiBlitz3.ab3@12139>    TST.b declare2
0002A1EE <AmiBlitz3.ab3@12140>    BEQ 'l1
0002A1F2 <AmiBlitz3.ab3@12141>    CMP.b #$2e,d0
0002A1F6 <AmiBlitz3.ab3@12142>    BEQ 'l2
0002A1FA <AmiBlitz3.ab3@12143>    CMP.b #"$",d0
0002A1FE <AmiBlitz3.ab3@12144>    BEQ 'l2
0002A202 <AmiBlitz3.ab3@12145> BRA vardeclareerr
0002A208 <AmiBlitz3.ab3@12148>   TST.b declare
0002A20C <AmiBlitz3.ab3@12149>    BNE vardeclareerr
0002A210 <AmiBlitz3.ab3@12152>   BSR.w addvariable
0002A216 <AmiBlitz3.ab3@12153>   NOT.w notshared
0002A218 <AmiBlitz3.ab3@12154>   MOVEA.l A2,A3
0002A21E <AmiBlitz3.ab3@12155>   MOVEA.l defaulttype,A2
0002A222 <AmiBlitz3.ab3@12156>   CMP.w #$2E,D0
0002A226 <AmiBlitz3.ab3@12157>    BEQ.w JL_0_8EB8
0002A22A <AmiBlitz3.ab3@12158>   CMP.w #$24,D0
0002A22E <AmiBlitz3.ab3@12159>    BNE.w JL_0_8ECA
0002A234 <AmiBlitz3.ab3@12160>   LEA newtype_string,A2
0002A238 <AmiBlitz3.ab3@12161>    BSR.w get1bytemain
0002A23C <AmiBlitz3.ab3@12162> BRA.w JL_0_8ECA
0002A242 <AmiBlitz3.ab3@12165> JMP JUMP_notypeerr
0002A246 <AmiBlitz3.ab3@12168>    BSR.w getparameter2
0002A24C <AmiBlitz3.ab3@12169>   LEA newtypebase,A2
0002A250 <AmiBlitz3.ab3@12170>    BSR.w findtype
0002A254 <AmiBlitz3.ab3@12171>    BNE.w notypeerr3
0002A25A <AmiBlitz3.ab3@12174>   CMPA.l #newtype_byte,A2
0002A25E <AmiBlitz3.ab3@12175>    BEQ.w JL_0_8EECb
0002A264 <AmiBlitz3.ab3@12176>   MOVE.w varmode,D1
0002A268 <AmiBlitz3.ab3@12177>    BNE.w JL_0_8EE4b
0002A26E <AmiBlitz3.ab3@12178>   ADDQ.w #1,globalvarpointer
0002A276 <AmiBlitz3.ab3@12181>   BCLR #$0,globalvarpointer+1
0002A27A <AmiBlitz3.ab3@12184>   MOVE.l A2,$A(A3)
0002A282 <AmiBlitz3.ab3@12185>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A284 <AmiBlitz3.ab3@12187>   MOVEQ.l #$04,D1
0002A28C <AmiBlitz3.ab3@12188>   BTST #$0,flagmask+1
0002A290 <AmiBlitz3.ab3@12189>    BNE.w JL_0_8F22b
0002A298 <AmiBlitz3.ab3@12190>   BTST #$1,flagmask+1
0002A29C <AmiBlitz3.ab3@12191>    BNE.w JL_0_8F22b
0002A2A4 <AmiBlitz3.ab3@12192>   CMPI.l #$100,$4(A2)
0002A2A8 <AmiBlitz3.ab3@12193>    BCC.w JL_0_8F22b
0002A2AC <AmiBlitz3.ab3@12194>   MOVE.w $8(A2),D1
0002A2B2 <AmiBlitz3.ab3@12197>   TST.w varmode
0002A2B6 <AmiBlitz3.ab3@12198> BRA.w JL_0_8F3E
0002A2BA <AmiBlitz3.ab3@12207>   BSR.w getparameter2
0002A2C0 <AmiBlitz3.ab3@12208>   LEA newtypebase,A2
0002A2C4 <AmiBlitz3.ab3@12209>    BSR.w findtype
0002A2C8 <AmiBlitz3.ab3@12210>    BNE.w notypeerr
0002A2CE <AmiBlitz3.ab3@12213>   CMPA.l #newtype_byte,A2
0002A2D2 <AmiBlitz3.ab3@12214>    BEQ.w JL_0_8EEC
0002A2D8 <AmiBlitz3.ab3@12215>   MOVE.w varmode,D1
0002A2DC <AmiBlitz3.ab3@12216>    BNE.w JL_0_8EE4
0002A2E2 <AmiBlitz3.ab3@12217>   ADDQ.w #1,globalvarpointer
0002A2EA <AmiBlitz3.ab3@12220>   BCLR #$0,globalvarpointer+1
0002A2EE <AmiBlitz3.ab3@12223>   MOVE.l A2,$A(A3)
0002A2F6 <AmiBlitz3.ab3@12224>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A2F8 <AmiBlitz3.ab3@12225>   MOVEQ.l #$04,D1
0002A300 <AmiBlitz3.ab3@12226>   BTST #$0,flagmask+1
0002A304 <AmiBlitz3.ab3@12227>    BNE.w JL_0_8F22
0002A30C <AmiBlitz3.ab3@12228>   BTST #$1,flagmask+1
0002A310 <AmiBlitz3.ab3@12229>    BNE.w JL_0_8F22
0002A318 <AmiBlitz3.ab3@12230>   CMPI.l #$100,$4(A2)
0002A31C <AmiBlitz3.ab3@12231>    BCC.w JL_0_8F22
0002A320 <AmiBlitz3.ab3@12232>   MOVE.w $8(A2),D1
0002A326 <AmiBlitz3.ab3@12235>   TST.w varmode
0002A32A <AmiBlitz3.ab3@12236>    BEQ.w JL_0_8F3E
0002A32C <AmiBlitz3.ab3@12237>   NEG.w D1
0002A332 <AmiBlitz3.ab3@12238>   ADD.w D1,globalvarpointer
0002A33A <AmiBlitz3.ab3@12239>   MOVE.w globalvarpointer,$4(A3)
0002A33C <AmiBlitz3.ab3@12240> RTS
0002A344 <AmiBlitz3.ab3@12243>   MOVE.w globalvarpointer,$4(A3)
0002A34A <AmiBlitz3.ab3@12244>   ADD.w D1,globalvarpointer
0002A34C <AmiBlitz3.ab3@12245> RTS
0002A352 <AmiBlitz3.ab3@12249>   LEA firstglob,A2
0002A356 <AmiBlitz3.ab3@12250>    BSR.w findvariable2
0002A35A <AmiBlitz3.ab3@12253>   BNE.w JL_0_8F74
0002A360 <AmiBlitz3.ab3@12254>   MOVE.b flagmask+1,D1
0002A364 <AmiBlitz3.ab3@12255>   MOVE.b $7(A2),D3
0002A366 <AmiBlitz3.ab3@12256>   EOR.b D3,D1
0002A36A <AmiBlitz3.ab3@12257>    BEQ.w JL_0_8FA8
0002A36E <AmiBlitz3.ab3@12258>    BSR.w findlab
0002A372 <AmiBlitz3.ab3@12259> BRA.w JL_0_8F58
0002A37A <AmiBlitz3.ab3@12262>   MOVE.w #$FFFF,varmode
0002A380 <AmiBlitz3.ab3@12263>   MOVE.w globalvarpointer,-(A7)
0002A38A <AmiBlitz3.ab3@12264>   MOVE.w locvaroff,globalvarpointer
0002A390 <AmiBlitz3.ab3@12265>   LEA firstlocal,A2
0002A398 <AmiBlitz3.ab3@12266>   MOVE.b #1,newvariable
0002A39C <AmiBlitz3.ab3@12267>    BSR.w JL_0_8E5E
0002A3A2 <AmiBlitz3.ab3@12268>   CLR.b newvariable
0002A3AC <AmiBlitz3.ab3@12269>   MOVE.w globalvarpointer,locvaroff
0002A3B2 <AmiBlitz3.ab3@12270>   MOVE.w (A7)+,globalvarpointer
0002A3B4 <AmiBlitz3.ab3@12271> RTS
0002A3B6 <AmiBlitz3.ab3@12274>   MOVEA.l A2,A3
0002A3BA <AmiBlitz3.ab3@12275>   CMP.w #$2E,D0
0002A3BE <AmiBlitz3.ab3@12276>    BEQ.w JL_0_8FCE
0002A3C2 <AmiBlitz3.ab3@12277>   CMP.w #$24,D0
0002A3C6 <AmiBlitz3.ab3@12278>    BNE.w JL_0_8FE8
0002A3CE <AmiBlitz3.ab3@12279>   CMPI.l #newtype_string,$A(A3)
0002A3D2 <AmiBlitz3.ab3@12280>    BNE.w rongtypeerr
0002A3D6 <AmiBlitz3.ab3@12281>    BSR.w get1bytemain
0002A3DA <AmiBlitz3.ab3@12282> BRA.w JL_0_8FE8
0002A3DE <AmiBlitz3.ab3@12285>    BSR.w getparameter2
0002A3E4 <AmiBlitz3.ab3@12286>   LEA newtypebase,A2
0002A3E8 <AmiBlitz3.ab3@12287>    BSR.w findtype
0002A3EC <AmiBlitz3.ab3@12288>    BNE.w notypeerr
0002A3F0 <AmiBlitz3.ab3@12289>   CMPA.l $A(A3),A2
0002A3F4 <AmiBlitz3.ab3@12290>    BNE.w rongtypeerr
0002A3FC <AmiBlitz3.ab3@12292>   BTST #$0,flagmask+1
0002A400 <AmiBlitz3.ab3@12293>    BEQ.w JL_0_8FFE
0002A406 <AmiBlitz3.ab3@12294>   BTST #$0,$7(A3)
0002A40A <AmiBlitz3.ab3@12295>    BEQ.w pointerr
0002A40E <AmiBlitz3.ab3@12298>   MOVEA.l $A(A3),A2
0002A410 <AmiBlitz3.ab3@12299> RTS
0002A412 <AmiBlitz3.ab3@12303>    TST.l D3                                                ;newtype >32kb  .w to .l
0002A416 <AmiBlitz3.ab3@12304>    BEQ.w JL_0_9042
0002A420 <AmiBlitz3.ab3@12305>    MOVE.l destpointer,loada
0002A424 <AmiBlitz3.ab3@12308> BRA JL_0_9032
0002A428 <AmiBlitz3.ab3@12310>   CMP.w #$9,D3                                             ;_addq_arrays
0002A42C <AmiBlitz3.ab3@12311>    BCC.w JL_0_9032
0002A432 <AmiBlitz3.ab3@12312>   MOVE.w d3,arrayoffset
0002A436 <AmiBlitz3.ab3@12313>   ANDI.w #$7,D3
0002A438 <AmiBlitz3.ab3@12314>   LSL.w #8,D3
0002A43A <AmiBlitz3.ab3@12315>   LSL.w #1,D3
0002A442 <AmiBlitz3.ab3@12316>   ANDI.w #$F1FF,addqa0
0002A448 <AmiBlitz3.ab3@12317>   OR.w D3,addqa0
0002A44E <AmiBlitz3.ab3@12318>   MOVE.w addqa0,D1
0002A452 <AmiBlitz3.ab3@12319> BRA.w writeword
0002A458 <AmiBlitz3.ab3@12322>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002A45C <AmiBlitz3.ab3@12323>   BGT longoffset
0002A462 <AmiBlitz3.ab3@12324>   MOVE.w D3,leaa0a0+2
0002A468 <AmiBlitz3.ab3@12325>   MOVE.w d3,arrayoffset
0002A46E <AmiBlitz3.ab3@12326>   MOVE.l leaa0a0,D1
0002A472 <AmiBlitz3.ab3@12327>   BSR.w writelong
0002A474 <AmiBlitz3.ab3@12330> RTS
0002A478 <AmiBlitz3.ab3@12333>    MOVE.w #$d5fc,d1
0002A47C <AmiBlitz3.ab3@12334>    BSR writeword
0002A47E <AmiBlitz3.ab3@12335>    MOVE.l d3,d1
0002A482 <AmiBlitz3.ab3@12336>    BSR.w writelong
0002A484 <AmiBlitz3.ab3@12337> RTS
0002A488 <AmiBlitz3.ab3@12341>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002A48C <AmiBlitz3.ab3@12344>    BCS.w arrchk3                                           
0002A492 <AmiBlitz3.ab3@12345>    JSR $20000                                              ;jsr 0
0002A498 <AmiBlitz3.ab3@12351>   TST.b fast
0002A49C <AmiBlitz3.ab3@12352>   BEQ 'l1
0002A49E <AmiBlitz3.ab3@12353>    MOVEQ #0,d1                                             ;faster arrays
0002A4A4 <AmiBlitz3.ab3@12354>    MOVE.w regnum,d2
0002A4A6 <AmiBlitz3.ab3@12355>    MOVE.w d2,d1
0002A4A8 <AmiBlitz3.ab3@12356>    LSL.w #8,d1
0002A4AA <AmiBlitz3.ab3@12357>    LSL.w #4,d1
0002A4AC <AmiBlitz3.ab3@12358>    ADD.w d2,d1
0002A4B2 <AmiBlitz3.ab3@12359>    OR.l #$4c2d0000,d1
0002A4B8 <AmiBlitz3.ab3@12360>    TST.w varmode
0002A4BC <AmiBlitz3.ab3@12361>    BEQ 'l1a
0002A4C0 <AmiBlitz3.ab3@12362>    BCLR #16,d1
0002A4C4 <AmiBlitz3.ab3@12365>    BSR writelong
0002A4C8 <AmiBlitz3.ab3@12366>    MOVE.w $4(A7),D1
0002A4CC <AmiBlitz3.ab3@12367>    BSR.w writeword
0002A4D2 <AmiBlitz3.ab3@12368>    MOVE.w regnum,D1
0002A4D4 <AmiBlitz3.ab3@12369>   SUBQ.w #1,D1
0002A4D6 <AmiBlitz3.ab3@12370>   LSL.w #8,D1
0002A4D8 <AmiBlitz3.ab3@12371>   LSL.w #1,D1
0002A4DC <AmiBlitz3.ab3@12372>   ORI.w #$D080,D1
0002A4E2 <AmiBlitz3.ab3@12373>   OR.w regnum,D1
0002A4E6 <AmiBlitz3.ab3@12374>    BSR.w writeword
0002A4E8 <AmiBlitz3.ab3@12375> RTS
0002A4EE <AmiBlitz3.ab3@12378>   MOVE.w regnum,D2
0002A4F2 <AmiBlitz3.ab3@12379>   MOVE.w arrmul1(PC),D1
0002A4F4 <AmiBlitz3.ab3@12380>   OR.w D2,D1
0002A4F6 <AmiBlitz3.ab3@12381>   SUBQ.w #1,D1
0002A4FA <AmiBlitz3.ab3@12382>    BSR.w writeword
0002A4FE <AmiBlitz3.ab3@12383>   MOVE.w arrmul2(PC),D1
0002A500 <AmiBlitz3.ab3@12384>   OR.w D2,D1
0002A502 <AmiBlitz3.ab3@12385>   MOVE.w D2,D3
0002A504 <AmiBlitz3.ab3@12386>   SUBQ.w #1,D3
0002A506 <AmiBlitz3.ab3@12387>   LSL.w #8,D3
0002A508 <AmiBlitz3.ab3@12388>   LSL.w #1,D3
0002A50A <AmiBlitz3.ab3@12389>   OR.w D3,D1
0002A50E <AmiBlitz3.ab3@12390>    BSR.w writeword
0002A512 <AmiBlitz3.ab3@12391>   MOVE.w arrmul3(PC),D1
0002A514 <AmiBlitz3.ab3@12392>   MOVE.w D2,D3
0002A516 <AmiBlitz3.ab3@12393>   LSL.w #8,D3
0002A518 <AmiBlitz3.ab3@12394>   LSL.w #1,D3
0002A51A <AmiBlitz3.ab3@12395>   OR.w D3,D1
0002A51E <AmiBlitz3.ab3@12396>    BSR.w pokewda5s
0002A522 <AmiBlitz3.ab3@12397>   MOVE.w $4(A7),D1
0002A524 <AmiBlitz3.ab3@12398>   ADDQ.w #2,D1
0002A528 <AmiBlitz3.ab3@12399>    BSR.w writeword
0002A52C <AmiBlitz3.ab3@12400>   MOVE.w arrmul4(PC),D1
0002A52E <AmiBlitz3.ab3@12401>   MOVE.w D2,D3
0002A530 <AmiBlitz3.ab3@12402>   SUBQ.w #1,D3
0002A532 <AmiBlitz3.ab3@12403>   LSL.w #8,D3
0002A534 <AmiBlitz3.ab3@12404>   LSL.w #1,D3
0002A536 <AmiBlitz3.ab3@12405>   OR.w D3,D1
0002A53A <AmiBlitz3.ab3@12406>    BSR.w pokewda5s
0002A53E <AmiBlitz3.ab3@12407>   MOVE.w $4(A7),D1
0002A542 <AmiBlitz3.ab3@12408>    BSR.w writeword
0002A546 <AmiBlitz3.ab3@12409>   MOVE.w arrmul5(PC),D1
0002A548 <AmiBlitz3.ab3@12410>   OR.w D2,D1
0002A54A <AmiBlitz3.ab3@12411>   SUBQ.w #1,D1
0002A54E <AmiBlitz3.ab3@12412>    BSR.w writeword
0002A552 <AmiBlitz3.ab3@12413>   MOVE.w arrmul6(PC),D1
0002A554 <AmiBlitz3.ab3@12414>   OR.w D2,D1
0002A556 <AmiBlitz3.ab3@12415>   SUBQ.w #1,D1
0002A55A <AmiBlitz3.ab3@12416>    BSR.w writeword
0002A55E <AmiBlitz3.ab3@12417>   MOVE.w arrmul7(PC),D1
0002A560 <AmiBlitz3.ab3@12418>   OR.w D2,D1
0002A562 <AmiBlitz3.ab3@12419>   SUBQ.w #1,D1
0002A564 <AmiBlitz3.ab3@12420>   MOVE.w D2,D3
0002A566 <AmiBlitz3.ab3@12421>   LSL.w #8,D3
0002A568 <AmiBlitz3.ab3@12422>   LSL.w #1,D3
0002A56A <AmiBlitz3.ab3@12423>   OR.w D3,D1
0002A56E <AmiBlitz3.ab3@12424>    BSR.w writeword
0002A572 <AmiBlitz3.ab3@12425>   MOVE.w arrmul8(PC),D1
0002A574 <AmiBlitz3.ab3@12426>   MOVE.w D2,D3
0002A576 <AmiBlitz3.ab3@12427>   SUBQ.w #1,D3
0002A578 <AmiBlitz3.ab3@12428>   LSL.w #8,D3
0002A57A <AmiBlitz3.ab3@12429>   LSL.w #1,D3
0002A57C <AmiBlitz3.ab3@12430>   OR.w D3,D1
0002A580 <AmiBlitz3.ab3@12431>    BSR.w writeword
0002A586 <AmiBlitz3.ab3@12432>   MOVE.w regnum,D1
0002A588 <AmiBlitz3.ab3@12433>   SUBQ.w #1,D1
0002A58A <AmiBlitz3.ab3@12434>   LSL.w #8,D1
0002A58C <AmiBlitz3.ab3@12435>   LSL.w #1,D1
0002A590 <AmiBlitz3.ab3@12436>   ORI.w #$D080,D1
0002A596 <AmiBlitz3.ab3@12437>   OR.w regnum,D1
0002A59A <AmiBlitz3.ab3@12438> BRA.w writeword
0002A59C <AmiBlitz3.ab3@12446> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002A59E <AmiBlitz3.ab3@12447> arrmul2:   MOVE  d0,d0
0002A5A2 <AmiBlitz3.ab3@12448> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002A5A6 <AmiBlitz3.ab3@12449> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002A5A8 <AmiBlitz3.ab3@12451> arrmul5:   SWAP d0
0002A5AA <AmiBlitz3.ab3@12452> arrmul6:   CLR d0
0002A5AC <AmiBlitz3.ab3@12453> arrmul7:   ADD.l d0,d0
0002A5AE <AmiBlitz3.ab3@12454> arrmul8:   MOVE.l (a7)+,d0
0002A5B2 <AmiBlitz3.ab3@12459> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002A5B6 <AmiBlitz3.ab3@12460> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002A5B8 <AmiBlitz3.ab3@12461> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002A5BE <AmiBlitz3.ab3@12479>   CLR.l lastoffset_org
0002A5C4 <AmiBlitz3.ab3@12480>   BTST #$1,$7(A3)
0002A5C8 <AmiBlitz3.ab3@12481>    BEQ.w calcvar__notarr
0002A5CE <AmiBlitz3.ab3@12482>   MOVE.w notshared,D1
0002A5D2 <AmiBlitz3.ab3@12483>    BNE.w noarrerr
0002A5D6 <AmiBlitz3.ab3@12484>    BSR.w get1bytemain
0002A5DA <AmiBlitz3.ab3@12485>   CMP.w #$29,D0
0002A5DE <AmiBlitz3.ab3@12486>    BNE.w calcvar__notalist
0002A5E4 <AmiBlitz3.ab3@12487>   BTST #$0,$6(A3)
0002A5E8 <AmiBlitz3.ab3@12488>    BEQ.w nolisterr
0002A5F0 <AmiBlitz3.ab3@12489>   MOVE.w $4(A3),listcode1+2
0002A5F4 <AmiBlitz3.ab3@12490>   MOVE.l listcode1(PC),D1
0002A5F8 <AmiBlitz3.ab3@12491>    BSR.w pokela5s
0002A5FC <AmiBlitz3.ab3@12492>   MOVE.l listcode2(PC),D1
0002A600 <AmiBlitz3.ab3@12493>    BSR.w writelong
0002A606 <AmiBlitz3.ab3@12494>   TST.b debugmode
0002A60A <AmiBlitz3.ab3@12495>    BEQ.w calcvar__nolrerr
0002A60C <AmiBlitz3.ab3@12499>   MOVE.l A2,-(A7)
0002A610 <AmiBlitz3.ab3@12500>   MOVE.w #$C315,D1
0002A614 <AmiBlitz3.ab3@12501>    BSR.w Atokejsr
0002A616 <AmiBlitz3.ab3@12502>   MOVEA.l (A7)+,A2
0002A61A <AmiBlitz3.ab3@12505>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002A61E <AmiBlitz3.ab3@12507>    BSR.w writeword
0002A622 <AmiBlitz3.ab3@12508> BRA.w calcvar__normalar
0002A624 <AmiBlitz3.ab3@12511> calcvar__listoff:   Ds.w 1
0002A62A <AmiBlitz3.ab3@12515>   CLR.w calcvar__listoff
0002A630 <AmiBlitz3.ab3@12516>   BTST #$0,$6(A3)
0002A634 <AmiBlitz3.ab3@12517>    BEQ.w calcvar__knop
0002A63C <AmiBlitz3.ab3@12518>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002A640 <AmiBlitz3.ab3@12521>   MOVEM.l A2-A3,-(A7)
0002A646 <AmiBlitz3.ab3@12522>   MOVE.w varmode,-(A7)
0002A64A <AmiBlitz3.ab3@12523>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002A64E <AmiBlitz3.ab3@12524>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002A650 <AmiBlitz3.ab3@12525>   MOVE.l A2,-(A7)
0002A656 <AmiBlitz3.ab3@12526>   MOVE.w flagmask,-(A7)
0002A660 <AmiBlitz3.ab3@12528>   MOVE.w oldqflag,instringon
0002A666 <AmiBlitz3.ab3@12529>   MOVEA.l lastsourcepos,A5
0002A66A <AmiBlitz3.ab3@12530>    BSR.w arreval
0002A670 <AmiBlitz3.ab3@12531>   MOVE.w (A7)+,flagmask
0002A678 <AmiBlitz3.ab3@12532>   MOVE.w $8(A7),varmode
0002A67E <AmiBlitz3.ab3@12533>   TST.b debugmode
0002A682 <AmiBlitz3.ab3@12534>    BEQ.w calcvar__noszchk
0002A684 <AmiBlitz3.ab3@12538>   MOVEA.l (A7)+,A2
0002A686 <AmiBlitz3.ab3@12539>   MOVEQ.l #$04,D1
0002A68E <AmiBlitz3.ab3@12540>   BTST #$0,flagmask+1                                      ;pointer?
0002A692 <AmiBlitz3.ab3@12541>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002A696 <AmiBlitz3.ab3@12542>   MOVE.w $8(A2),D1
0002A69A <AmiBlitz3.ab3@12545>   ADD.w calcvar__listoff(PC),D1
0002A69E <AmiBlitz3.ab3@12546>   BSR.w JL_0_B6DE
0002A6A4 <AmiBlitz3.ab3@12547>   ADDQ.w #1,regnum
0002A6A6 <AmiBlitz3.ab3@12550>   ADDQ.w #4,(A7)
0002A6AA <AmiBlitz3.ab3@12551>   TST.w $4(A7)
0002A6AE <AmiBlitz3.ab3@12552>    BEQ.w calcvar__isglob
0002A6B0 <AmiBlitz3.ab3@12553>   SUBQ.w #8,(A7)                                           ;range check local array
0002A6B6 <AmiBlitz3.ab3@12556>   TST.b debugmode
0002A6BA <AmiBlitz3.ab3@12557>    BEQ.w calcvar__noer1
0002A6C0 <AmiBlitz3.ab3@12558>   MOVE.w regnum,D1
0002A6C2 <AmiBlitz3.ab3@12559>   SUBQ.w #1,D1
0002A6C4 <AmiBlitz3.ab3@12560>   LSL.w #8,D1
0002A6C6 <AmiBlitz3.ab3@12561>   LSL.w #1,D1
0002A6CA <AmiBlitz3.ab3@12562>   OR.w zarrchk(PC),D1
0002A6CE <AmiBlitz3.ab3@12563>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002A6D0 <AmiBlitz3.ab3@12564>   MOVE.w (A7),D1
0002A6D4 <AmiBlitz3.ab3@12565>    BSR.w writeword
0002A6D8 <AmiBlitz3.ab3@12566>   MOVE.l arrchk2(PC),D1
0002A6DC <AmiBlitz3.ab3@12567>    BSR.w writelong
0002A6E0 <AmiBlitz3.ab3@12568>   MOVE.w #$C309,D1
0002A6E4 <AmiBlitz3.ab3@12569>    BSR.w Atokejsr
0002A6E8 <AmiBlitz3.ab3@12572>   SUBQ.w #1,$2(A7)
0002A6EC <AmiBlitz3.ab3@12573>    BEQ.w calcvar__ardone
0002A6F0 <AmiBlitz3.ab3@12574>   CMP.w #$2C,D0
0002A6F4 <AmiBlitz3.ab3@12575>    BNE.w syntaxerr
0002A6FA <AmiBlitz3.ab3@12576>    TST.b fast
0002A6FE <AmiBlitz3.ab3@12577>    BNE 'l1
0002A702 <AmiBlitz3.ab3@12578>    BSR.w arrevalchk
0002A706 <AmiBlitz3.ab3@12579> BRA 'l2
0002A70A <AmiBlitz3.ab3@12582>   BSR arreval
0002A712 <AmiBlitz3.ab3@12585>   MOVE.w $4(A7),varmode
0002A716 <AmiBlitz3.ab3@12586>   BSR.w JL_0_9052
0002A71A <AmiBlitz3.ab3@12587> BRA.w calcvar__arloop
0002A71E <AmiBlitz3.ab3@12591>   CMP.w #$29,D0
0002A722 <AmiBlitz3.ab3@12592>    BNE.w syntaxerr
0002A728 <AmiBlitz3.ab3@12593>   SUBQ.w #1,regnum
0002A72A <AmiBlitz3.ab3@12594>   ADDQ.w #6,A7
0002A72E <AmiBlitz3.ab3@12595>   MOVEM.l (A7)+,A2-A3
0002A736 <AmiBlitz3.ab3@12596>   MOVE.w $4(A3),movea5a0+2
0002A73C <AmiBlitz3.ab3@12597>   MOVE.l movea5a0,D1
0002A740 <AmiBlitz3.ab3@12598>    BSR.w pokela5s
0002A746 <AmiBlitz3.ab3@12599>   MOVE.w regnum,D1
0002A74A <AmiBlitz3.ab3@12600>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002A74E <AmiBlitz3.ab3@12601>    BSR.w writeword
0002A754 <AmiBlitz3.ab3@12602>   BTST #$0,$6(A3)
0002A758 <AmiBlitz3.ab3@12603>    BEQ.w calcvar__normalar
0002A75C <AmiBlitz3.ab3@12607>   MOVE.w listarfix(PC),D1
0002A760 <AmiBlitz3.ab3@12608>    BSR.w writeword
0002A764 <AmiBlitz3.ab3@12611>   BSR.w get1bytemain
0002A76A <AmiBlitz3.ab3@12615>   BTST #$0,$7(A3)
0002A76E <AmiBlitz3.ab3@12616>    BEQ.w calcvar__noppnt
0002A772 <AmiBlitz3.ab3@12617>   CMP.w #$5C,D0
0002A776 <AmiBlitz3.ab3@12618>    BNE.w calcvar__pmskip
0002A77A <AmiBlitz3.ab3@12619>   MOVE.w calcvar__pfix(PC),D1
0002A77E <AmiBlitz3.ab3@12620>    BSR.w writeword
0002A782 <AmiBlitz3.ab3@12623>   MOVE.w #$8000,D2
0002A786 <AmiBlitz3.ab3@12624> BRA.w calcvar__loopml
0002A78A <AmiBlitz3.ab3@12627>   MOVE.w #$C000,D2
0002A78E <AmiBlitz3.ab3@12628> BRA.w calcvar__loopml
0002A790 <AmiBlitz3.ab3@12632> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002A794 <AmiBlitz3.ab3@12637>   CMP.w #$28,D0
0002A798 <AmiBlitz3.ab3@12638>    BEQ.w noarrerr
0002A7A0 <AmiBlitz3.ab3@12639>   CMPI.l #$100,$4(A2)
0002A7A4 <AmiBlitz3.ab3@12640>    BCS.w calcvar__simpvar
0002A7AA <AmiBlitz3.ab3@12641>   BTST #$0,$7(A3)
0002A7AE <AmiBlitz3.ab3@12642>    BEQ.w calcvar__notap
0002A7B2 <AmiBlitz3.ab3@12646>   CMP.w #$5C,D0
0002A7B6 <AmiBlitz3.ab3@12647>    BEQ.w calcvar__notap
0002A7B8 <AmiBlitz3.ab3@12648>   MOVEQ.l #$00,D2
0002A7BC <AmiBlitz3.ab3@12649> BRA.w calcvar__simpvar2
0002A7C0 <AmiBlitz3.ab3@12652>   MOVE.w #$8000,D2
0002A7C8 <AmiBlitz3.ab3@12653>   MOVE.w $4(A3),movea5a0+2
0002A7CE <AmiBlitz3.ab3@12654>   MOVE.l movea5a0,D1
0002A7D2 <AmiBlitz3.ab3@12655>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002A7D8 <AmiBlitz3.ab3@12657>    TST.b debugmode
0002A7DC <AmiBlitz3.ab3@12658>    BEQ.w 'skip
0002A7E0 <AmiBlitz3.ab3@12659>    MOVE.w #$c320,D1
0002A7E6 <AmiBlitz3.ab3@12660>    JSR Atokejsr
0002A7E8 <AmiBlitz3.ab3@12664>   MOVEQ.l #$00,D3
0002A7EC <AmiBlitz3.ab3@12667>   CMP.w #$5C,D0
0002A7F0 <AmiBlitz3.ab3@12668>    BNE.w calcvar__done
0002A7F8 <AmiBlitz3.ab3@12669>   CMPI.l #$100,$4(A2)
0002A7FC <AmiBlitz3.ab3@12670>    BCS.w rongtypeerr
0002A7FE <AmiBlitz3.ab3@12671>   MOVE.w D2,-(A7)
0002A802 <AmiBlitz3.ab3@12672>    BSR.w getparameter2
0002A806 <AmiBlitz3.ab3@12673>    BEQ.w syntaxerr
0002A808 <AmiBlitz3.ab3@12674>   ADDQ.w #4,A2
0002A80C <AmiBlitz3.ab3@12675>    BSR.w findvariable2
0002A810 <AmiBlitz3.ab3@12676>    BNE.w noofferr
0002A812 <AmiBlitz3.ab3@12677>   MOVE.w (A7)+,D2
0002A814 <AmiBlitz3.ab3@12678>   MOVEA.l A2,A3                                             ;pointer to offset
0002A818 <AmiBlitz3.ab3@12679>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002A81A <AmiBlitz3.ab3@12680>   MOVEQ #0,d1
0002A81E <AmiBlitz3.ab3@12681>   MOVE.w 4(a3),d1
0002A820 <AmiBlitz3.ab3@12682>   ADD.l d1,d3
0002A826 <AmiBlitz3.ab3@12684>   MOVE.l A3,lastoffset_org
0002A82A <AmiBlitz3.ab3@12685>   CMP.w #$5B,D0
0002A82E <AmiBlitz3.ab3@12686>    BNE.w calcvar__realdone
0002A834 <AmiBlitz3.ab3@12687>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002A838 <AmiBlitz3.ab3@12688>    BEQ.w rongtypeerr
0002A83C <AmiBlitz3.ab3@12689>    BSR.w JL_0_9004
0002A840 <AmiBlitz3.ab3@12690>   MOVEM.l A2-A3,-(A7)
0002A846 <AmiBlitz3.ab3@12691>   MOVE.w varmode,-(A7)
0002A84C <AmiBlitz3.ab3@12692>   MOVE.l lastoffset_org,-(A7)
0002A852 <AmiBlitz3.ab3@12693>   MOVE.w pusha2,D1
0002A856 <AmiBlitz3.ab3@12694>    BSR.w writeword
0002A858 <AmiBlitz3.ab3@12695>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002A862 <AmiBlitz3.ab3@12696>   MOVE.l destpointer,deststore
0002A868 <AmiBlitz3.ab3@12697>    MOVE.l rightsidetype,-(a7)
0002A86E <AmiBlitz3.ab3@12698>    MOVE.l leftsidetype,-(a7)
0002A874 <AmiBlitz3.ab3@12699>    CLR.l rightsidetype
0002A87A <AmiBlitz3.ab3@12700>    CLR.l leftsidetype
0002A87E <AmiBlitz3.ab3@12701>    BSR.w eval
0002A884 <AmiBlitz3.ab3@12702>    MOVE.l (a7)+,rightsidetype
0002A88A <AmiBlitz3.ab3@12703>    MOVE.l (a7)+,leftsidetype
0002A88E <AmiBlitz3.ab3@12704>   CMP.w #$5D,D0
0002A892 <AmiBlitz3.ab3@12705>    BNE.w syntaxerr
0002A898 <AmiBlitz3.ab3@12706>   TST.b fast                                               ;a2,-(a7) array
0002A89C <AmiBlitz3.ab3@12707>   BEQ calcvar__loop0_l10
0002A8A2 <AmiBlitz3.ab3@12711>   MOVE.l destpointer,d1
0002A8A8 <AmiBlitz3.ab3@12712>   SUB.l deststore,d1
0002A8AE <AmiBlitz3.ab3@12713>   CMP.l #4,d1
0002A8B2 <AmiBlitz3.ab3@12714>   BNE calcvar__loop0_l10
0002A8B8 <AmiBlitz3.ab3@12715>   MOVE.l destpointer,a4
0002A8BE <AmiBlitz3.ab3@12716>   MOVE.l -4(a4),-6(a4)
0002A8C4 <AmiBlitz3.ab3@12717>   SUBQ.l #2,destpointer
0002A8CA <AmiBlitz3.ab3@12718>   CLR.l imm_addr
0002A8D0 <AmiBlitz3.ab3@12719>   CLR.l load_var_addr
0002A8D4 <AmiBlitz3.ab3@12720> BRA calcvar__loop0_l20
0002A8DA <AmiBlitz3.ab3@12723>   MOVE.w pulla2,D1
0002A8DE <AmiBlitz3.ab3@12724>    BSR.w writeword
0002A8E4 <AmiBlitz3.ab3@12727>   MOVE.l (A7)+,lastoffset_org
0002A8EA <AmiBlitz3.ab3@12728>   MOVE.w (A7)+,varmode
0002A8EE <AmiBlitz3.ab3@12729>   MOVEM.l (A7)+,A2-A3
0002A8F4 <AmiBlitz3.ab3@12735>   TST.w debugmode
0002A8F8 <AmiBlitz3.ab3@12736>    BEQ.b calcvar__nobchk
0002A8FC <AmiBlitz3.ab3@12737>   MOVE.w $8(A3),D1
0002A900 <AmiBlitz3.ab3@12738>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002A906 <AmiBlitz3.ab3@12742>   MOVE.w D1,brchkcode+2
0002A90C <AmiBlitz3.ab3@12743>   MOVE.w regnum,D1
0002A90E <AmiBlitz3.ab3@12744>   LSL.w #8,D1
0002A910 <AmiBlitz3.ab3@12745>   LSL.w #1,D1
0002A914 <AmiBlitz3.ab3@12746>   OR.w brchkcode0(PC),D1
0002A91A <AmiBlitz3.ab3@12747>   MOVE.w D1,brchkcode
0002A91E <AmiBlitz3.ab3@12748>   MOVE.l brchkcode(PC),D1
0002A922 <AmiBlitz3.ab3@12749>    BSR.w writelong
0002A926 <AmiBlitz3.ab3@12750>   MOVE.l brchkcode+4(PC),D1
0002A92A <AmiBlitz3.ab3@12751>    BSR.w writelong
0002A92E <AmiBlitz3.ab3@12752>   MOVE.w brchkcode+8(PC),D1
0002A932 <AmiBlitz3.ab3@12753>    BSR.w writeword
0002A934 <AmiBlitz3.ab3@12756>   MOVEQ.l #$04,D1
0002A93A <AmiBlitz3.ab3@12757>   BTST #$0,$7(A3)
0002A93E <AmiBlitz3.ab3@12758>    BNE.w calcvar__dothemul
0002A942 <AmiBlitz3.ab3@12759>   MOVE.w $8(A2),D1
0002A946 <AmiBlitz3.ab3@12762>   BSR.w JL_0_B6DE
0002A94C <AmiBlitz3.ab3@12763>   MOVE.w addrega2,D1
0002A952 <AmiBlitz3.ab3@12764>   OR.w regnum,D1
0002A956 <AmiBlitz3.ab3@12765>    OR.w #$100,d1                                           ;>32kb types
0002A95A <AmiBlitz3.ab3@12766>    BSR.w writeword
0002A95E <AmiBlitz3.ab3@12767>    BSR.w get1bytemain
0002A960 <AmiBlitz3.ab3@12768>   MOVEQ.l #$00,D3
0002A964 <AmiBlitz3.ab3@12769>   MOVE.w #$8000,D2
0002A96A <AmiBlitz3.ab3@12772>   BTST #$0,$7(A3)
0002A96E <AmiBlitz3.ab3@12773>    BNE.w calcvar__pointer
0002A972 <AmiBlitz3.ab3@12774> BRA.w calcvar__loop0
0002A976 <AmiBlitz3.ab3@12778>  CMP.w #$5C,D0
0002A97A <AmiBlitz3.ab3@12779>    BNE.w calcvar__done3
0002A97C <AmiBlitz3.ab3@12780>   TST.w D3
0002A980 <AmiBlitz3.ab3@12781>    BNE.w calcvar__pskip
0002A986 <AmiBlitz3.ab3@12782>   MOVE.w movea0,D1
0002A98A <AmiBlitz3.ab3@12783>    BSR.w writeword
0002A98E <AmiBlitz3.ab3@12784> BRA.w calcvar__pmore
0002A994 <AmiBlitz3.ab3@12787>   MOVE.w D3,movea0a0+2
0002A99A <AmiBlitz3.ab3@12788>   MOVE.l movea0a0,D1
0002A99E <AmiBlitz3.ab3@12789>    BSR.w writelong
0002A9A4 <AmiBlitz3.ab3@12792>   BTST #$2,$7(A3)
0002A9A8 <AmiBlitz3.ab3@12793>    BEQ.w calcvar__loopml
0002A9AE <AmiBlitz3.ab3@12794>   MOVE.l adda0a0,D1
0002A9B2 <AmiBlitz3.ab3@12795>    BSR.w writelong
0002A9B6 <AmiBlitz3.ab3@12796> BRA.w calcvar__loopml
0002A9BA <AmiBlitz3.ab3@12799>   BSET #$E,D2
0002A9C0 <AmiBlitz3.ab3@12800>   BTST #$2,$7(A3)
0002A9C4 <AmiBlitz3.ab3@12801>    BNE.w calcvar__done
0002A9C8 <AmiBlitz3.ab3@12802>   BSET #$D,D2
0002A9D0 <AmiBlitz3.ab3@12805>   CMPI.l #$100,$4(A2)
0002A9D4 <AmiBlitz3.ab3@12806>    BCC.w calcvar__done2
0002A9D8 <AmiBlitz3.ab3@12807>   MOVE.b $7(A2),D2
0002A9DC <AmiBlitz3.ab3@12810> BRA.w JL_0_9004
0002A9E0 <AmiBlitz3.ab3@12813>   MOVE.w $6(A2),D2
0002A9E4 <AmiBlitz3.ab3@12816>   MOVE.w $4(A3),D3
0002A9EA <AmiBlitz3.ab3@12817>   BTST #$0,$7(A3)
0002A9EE <AmiBlitz3.ab3@12818>    BEQ.w calcvar__nopoint
0002A9F2 <AmiBlitz3.ab3@12819>   BSET #$E,D2
0002A9F4 <AmiBlitz3.ab3@12822> RTS
0002A9F8 <AmiBlitz3.ab3@12826> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002A9FC <AmiBlitz3.ab3@12827> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002A9FE <AmiBlitz3.ab3@12828>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002AA00 <AmiBlitz3.ab3@12829>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002AA02 <AmiBlitz3.ab3@12830>              Dc.b $4E,$40                                  ;TRAP    #00
0002AA08 <AmiBlitz3.ab3@12838>   TST.w varmode
0002AA0C <AmiBlitz3.ab3@12839>    BEQ.w writeword
0002AA10 <AmiBlitz3.ab3@12840>   BCLR #$0,D1
0002AA14 <AmiBlitz3.ab3@12841> BRA.w writeword
0002AA1A <AmiBlitz3.ab3@12844>   TST.w varmode
0002AA1E <AmiBlitz3.ab3@12845>    BEQ.w writeword
0002AA22 <AmiBlitz3.ab3@12846>   BCLR #$9,D1
0002AA26 <AmiBlitz3.ab3@12847> BRA.w writeword
0002AA2C <AmiBlitz3.ab3@12850>   TST.w proceduremode
0002AA30 <AmiBlitz3.ab3@12851>    BEQ.w writelong
0002AA34 <AmiBlitz3.ab3@12852>   BCLR #$19,D1
0002AA38 <AmiBlitz3.ab3@12853> BRA.w writelong
0002AA3E <AmiBlitz3.ab3@12856>   TST.w varmode
0002AA42 <AmiBlitz3.ab3@12857>   BEQ.w writelong
0002AA46 <AmiBlitz3.ab3@12858>   BCLR #$10,D1
0002AA4C <AmiBlitz3.ab3@12861>   ADDQ.l #1,destpointer
0002AA54 <AmiBlitz3.ab3@12862>   BCLR #$0,destpointer+3
0002AA5A <AmiBlitz3.ab3@12863>   MOVEA.l destpointer,A4
0002AA60 <AmiBlitz3.ab3@12864>   CMPA.l destbufferend,A4
0002AA64 <AmiBlitz3.ab3@12865>    BCC.w writeword__overa
0002AA66 <AmiBlitz3.ab3@12866>   MOVE.l D1,(A4)+
0002AA6C <AmiBlitz3.ab3@12869>   MOVE.l A4,destpointer
0002AA70 <AmiBlitz3.ab3@12870>   CMPA.l bigpc(PC),A4
0002AA74 <AmiBlitz3.ab3@12871>    BHI.w writeword__nbp
0002AA76 <AmiBlitz3.ab3@12872> RTS
0002AA7E <AmiBlitz3.ab3@12875>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002AA84 <AmiBlitz3.ab3@12876>   CLR.b fast
0002AA8A <AmiBlitz3.ab3@12877>   CLR.b fpu
0002AA90 <AmiBlitz3.ab3@12878>   CLR.b iee
0002AA92 <AmiBlitz3.ab3@12879>   ADDQ.w #4,A4
0002AA96 <AmiBlitz3.ab3@12880> BRA.w writeword__msa
0002AA9C <AmiBlitz3.ab3@12886>   ADDQ.l #1,destpointer
0002AAA4 <AmiBlitz3.ab3@12887>   BCLR #$0,destpointer+3
0002AAAA <AmiBlitz3.ab3@12888>   MOVEA.l destpointer,A4
0002AAB0 <AmiBlitz3.ab3@12889>   CMPA.l destbufferend,A4
0002AAB4 <AmiBlitz3.ab3@12890>    BCC.w writeword__over
0002AAB6 <AmiBlitz3.ab3@12891>   MOVE.w D1,(A4)+
0002AABC <AmiBlitz3.ab3@12894>   MOVE.l A4,destpointer
0002AAC0 <AmiBlitz3.ab3@12895>   CMPA.l bigpc(PC),A4
0002AAC4 <AmiBlitz3.ab3@12896>    BHI.w writeword__nbp
0002AAC6 <AmiBlitz3.ab3@12897> RTS
0002AACC <AmiBlitz3.ab3@12900>   ADDQ.l #1,destpointer
0002AAD4 <AmiBlitz3.ab3@12901>   BCLR #$0,destpointer+3
0002AADA <AmiBlitz3.ab3@12902>   MOVEA.l destpointer,A4
0002AAE0 <AmiBlitz3.ab3@12903>   CMPA.l destbufferend,A4
0002AAE4 <AmiBlitz3.ab3@12904>    BCC.w writeword__over
0002AAE6 <AmiBlitz3.ab3@12905>   MOVE.w D1,(A4)+
0002AAEC <AmiBlitz3.ab3@12906>   MOVE.l A4,destpointer
0002AAF0 <AmiBlitz3.ab3@12907>   CMPA.l bigpc(PC),A4
0002AAF4 <AmiBlitz3.ab3@12908>    BHI.w writeword__nbp
0002AAF6 <AmiBlitz3.ab3@12909> RTS
0002AAFC <AmiBlitz3.ab3@12912>   TST.w cfetchmode
0002AB00 <AmiBlitz3.ab3@12913>   BNE.w writeword__nbp2
0002AB06 <AmiBlitz3.ab3@12914>   MOVE.l A4,bigpc
0002AB08 <AmiBlitz3.ab3@12917> RTS
0002AB10 <AmiBlitz3.ab3@12920>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002AB12 <AmiBlitz3.ab3@12921>   ADDQ.w #2,A4
0002AB18 <AmiBlitz3.ab3@12922>   CLR.b fast
0002AB1E <AmiBlitz3.ab3@12923>   CLR.b fpu
0002AB24 <AmiBlitz3.ab3@12924>   CLR.b iee
0002AB28 <AmiBlitz3.ab3@12925> BRA.w writeword__ms
0002AB2E <AmiBlitz3.ab3@12929>   MOVEA.l destpointer,A4
0002AB34 <AmiBlitz3.ab3@12930>   CMPA.l destbufferend,A4
0002AB38 <AmiBlitz3.ab3@12931>    BCC.w writebyte__over
0002AB3A <AmiBlitz3.ab3@12932>   MOVE.b D1,(A4)+
0002AB40 <AmiBlitz3.ab3@12935>   MOVE.l A4,destpointer
0002AB44 <AmiBlitz3.ab3@12936>   CMPA.l bigpc(PC),A4
0002AB48 <AmiBlitz3.ab3@12937>    BHI.w writebyte__nbp
0002AB4A <AmiBlitz3.ab3@12938> RTS
0002AB50 <AmiBlitz3.ab3@12941>   TST.w cfetchmode
0002AB54 <AmiBlitz3.ab3@12942>    BNE.w writebyte__nbp2
0002AB5A <AmiBlitz3.ab3@12943>   MOVE.l A4,bigpc
0002AB5C <AmiBlitz3.ab3@12946> RTS
0002AB64 <AmiBlitz3.ab3@12949>   MOVE.w #-1,dontwrite
0002AB66 <AmiBlitz3.ab3@12950>   ADDQ.w #1,A4
0002AB6C <AmiBlitz3.ab3@12951>   CLR.b fast
0002AB72 <AmiBlitz3.ab3@12952>   CLR.b fpu
0002AB78 <AmiBlitz3.ab3@12953>   CLR.b iee
0002AB7C <AmiBlitz3.ab3@12954> BRA.w writebyte__ms
0002AB80 <AmiBlitz3.ab3@12957> bigpc:   Ds.l 1
0002AB82 <AmiBlitz3.ab3@12961>   MOVE.w (A0)+,D1
0002AB86 <AmiBlitz3.ab3@12962>   BSR.w writeword
0002AB88 <AmiBlitz3.ab3@12965>     CMPA.l A1,A0
0002AB8C <AmiBlitz3.ab3@12966>     BCC.w pokecode__done
0002AB8E <AmiBlitz3.ab3@12967>       MOVE.w (A0)+,D1
0002AB92 <AmiBlitz3.ab3@12968>       BSR.w writeword
0002AB96 <AmiBlitz3.ab3@12969> BRA.w pokecode__loop
0002AB98 <AmiBlitz3.ab3@12972> RTS
0002AB9A <AmiBlitz3.ab3@12975>   MOVE.w (A0)+,D1
0002AB9E <AmiBlitz3.ab3@12976>   BSR.w writeword
0002ABA0 <AmiBlitz3.ab3@12977>   CMPA.l A1,A0
0002ABA4 <AmiBlitz3.ab3@12978>   BCS.w pokecode2
0002ABA6 <AmiBlitz3.ab3@12979> RTS
0002ABAC <AmiBlitz3.ab3@12985>   TST.b iniffcommand
0002ABB0 <AmiBlitz3.ab3@12986>   BEQ 'l1
0002ABB4 <AmiBlitz3.ab3@12987>     MOVE.w #$4880,D1
0002ABBA <AmiBlitz3.ab3@12988>     OR.w regnum,D1
0002ABBE <AmiBlitz3.ab3@12989>     BSR writeword
0002ABC0 <AmiBlitz3.ab3@12992> RTS
0002ABC4 <AmiBlitz3.ab3@12995>   BSR.w convert_byte_to_word
0002ABCA <AmiBlitz3.ab3@12998>   TST.b iee
0002ABCE <AmiBlitz3.ab3@12999>   BEQ 'old
0002ABD2 <AmiBlitz3.ab3@13000>   CMP.b #5,d2
0002ABD6 <AmiBlitz3.ab3@13001>   BEQ wtof
0002ABDA <AmiBlitz3.ab3@13004>   MOVE.w #$48C0,D1
0002ABE0 <AmiBlitz3.ab3@13005>   OR.w regnum,D1
0002ABE4 <AmiBlitz3.ab3@13006> BRA.w writeword
0002ABE6 <AmiBlitz3.ab3@13009>   MOVEQ #0,d0
0002ABEC <AmiBlitz3.ab3@13010>   MOVE.w regnum,d0
0002ABEE <AmiBlitz3.ab3@13011>   ASL.l #7,d0
0002ABF4 <AmiBlitz3.ab3@13012>   MOVE.l #$f2005000,d1
0002ABF6 <AmiBlitz3.ab3@13013>   OR.l d0,d1
0002ABF8 <AmiBlitz3.ab3@13014>   ASL.l #1,d0
0002ABFA <AmiBlitz3.ab3@13015>   ASL.l #8,d0
0002ABFC <AmiBlitz3.ab3@13016>   OR.l d0,d1
0002AC00 <AmiBlitz3.ab3@13017> BRA writelong
0002AC04 <AmiBlitz3.ab3@13021>   BSR.w convert_byte_to_word
0002AC08 <AmiBlitz3.ab3@13024>   MOVE.w #$4840,D1
0002AC0E <AmiBlitz3.ab3@13025>   OR.w regnum,D1
0002AC12 <AmiBlitz3.ab3@13026>    BSR.w writeword
0002AC16 <AmiBlitz3.ab3@13027>   MOVE.w #$4240,D1
0002AC1C <AmiBlitz3.ab3@13028>   OR.w regnum,D1
0002AC20 <AmiBlitz3.ab3@13029> BRA.w writeword
0002AC24 <AmiBlitz3.ab3@13033>   CMP.w #$ffdc,d1
0002AC28 <AmiBlitz3.ab3@13034>   BNE 'negfpu
0002AC2A <AmiBlitz3.ab3@13035>   MOVEQ #0,d0
0002AC30 <AmiBlitz3.ab3@13036>   MOVE.w regnum,d0
0002AC32 <AmiBlitz3.ab3@13037>   ASL.l #7,d0
0002AC38 <AmiBlitz3.ab3@13038>   MOVE.l #$f2004000,d1
0002AC3A <AmiBlitz3.ab3@13039>   OR.l d0,d1
0002AC3C <AmiBlitz3.ab3@13040>   ASL.l #1,d0
0002AC3E <AmiBlitz3.ab3@13041>   ASL.l #8,d0
0002AC40 <AmiBlitz3.ab3@13042>   OR.l d0,d1
0002AC44 <AmiBlitz3.ab3@13043> BRA writelong
0002AC46 <AmiBlitz3.ab3@13047>   MOVEQ #0,d1
0002AC4C <AmiBlitz3.ab3@13048>   MOVE.w regnum,d1                                         ;fpu neg
0002AC4E <AmiBlitz3.ab3@13049>   ASL.l #7,d1
0002AC54 <AmiBlitz3.ab3@13050>   OR.l #$f200001a,d1
0002AC56 <AmiBlitz3.ab3@13051>   MOVE.l d0,-(a7)
0002AC58 <AmiBlitz3.ab3@13052>   MOVEQ #0,d0
0002AC5E <AmiBlitz3.ab3@13053>   MOVE.w regnum,d0
0002AC60 <AmiBlitz3.ab3@13054>   ASL.l #8,d0
0002AC62 <AmiBlitz3.ab3@13055>   ASL.l #2,d0
0002AC64 <AmiBlitz3.ab3@13056>   OR.l d0,d1
0002AC66 <AmiBlitz3.ab3@13057>   MOVE.l (a7)+,d0
0002AC6A <AmiBlitz3.ab3@13058> BRA writelong
0002AC70 <AmiBlitz3.ab3@13061>    TST.b iee
0002AC74 <AmiBlitz3.ab3@13062>    BNE wtof
0002AC78 <AmiBlitz3.ab3@13063>    BSR.w convert_byte_to_long
0002AC7C <AmiBlitz3.ab3@13066>    MOVE.w #$FFDC,D1
0002AC82 <AmiBlitz3.ab3@13069>    TST.b iee
0002AC86 <AmiBlitz3.ab3@13070>    BNE ltof
0002AC8C <AmiBlitz3.ab3@13071>    MOVE.w D1,libjsr+2
0002AC90 <AmiBlitz3.ab3@13072>    BSR.w JL_0_AD40
0002AC92 <AmiBlitz3.ab3@13073>   MOVE.l D4,D1
0002AC96 <AmiBlitz3.ab3@13074>    BSR.w JL_0_AD38
0002AC9A <AmiBlitz3.ab3@13075>   MOVE.w #$C900,D1
0002AC9E <AmiBlitz3.ab3@13076>    BSR.w Atokejsr
0002ACA2 <AmiBlitz3.ab3@13077>    BSR.w JL_0_A352
0002ACA8 <AmiBlitz3.ab3@13078>   MOVE.l libjsr,D1
0002ACAC <AmiBlitz3.ab3@13079>    BSR.w writelong
0002ACB0 <AmiBlitz3.ab3@13080>    BSR.w JL_0_A36E
0002ACB2 <AmiBlitz3.ab3@13081>   MOVE.l D5,D1
0002ACB6 <AmiBlitz3.ab3@13082> BRA.w JL_0_AD38
0002ACB8 <AmiBlitz3.ab3@13085> RTS
0002ACBC <AmiBlitz3.ab3@13088>   MOVE.w #$C317,D1
0002ACC2 <AmiBlitz3.ab3@13089>   TST.b typecheck
0002ACC6 <AmiBlitz3.ab3@13090>   BEQ 'l1
0002ACCC <AmiBlitz3.ab3@13091>    TST.b notypecheck
0002ACD0 <AmiBlitz3.ab3@13092>    BNE 'l1
0002ACD6 <AmiBlitz3.ab3@13093>    TST.l lasttoken
0002ACDC <AmiBlitz3.ab3@13100>   TST.b debugmode
0002ACE0 <AmiBlitz3.ab3@13101>    BEQ.w JL_0_9696
0002ACE8 <AmiBlitz3.ab3@13102>   BTST #$7,overflowcheck
0002ACEC <AmiBlitz3.ab3@13103>    BEQ.w JL_0_9696
0002ACF2 <AmiBlitz3.ab3@13104>   TST.w cfetchmode
0002ACF6 <AmiBlitz3.ab3@13105>    BNE.w JL_0_9696
0002ACFC <AmiBlitz3.ab3@13106>   TST.w regnum
0002AD00 <AmiBlitz3.ab3@13107>    BEQ.w JL_0_968A
0002AD02 <AmiBlitz3.ab3@13108>   MOVE.w D1,-(A7)
0002AD06 <AmiBlitz3.ab3@13109>   MOVE.w JL_0_9698(PC),D1
0002AD0A <AmiBlitz3.ab3@13110>    BSR.w writeword
0002AD10 <AmiBlitz3.ab3@13111>   MOVE.w regnum,D1
0002AD14 <AmiBlitz3.ab3@13112>   OR.w L_0_969C(PC),D1
0002AD18 <AmiBlitz3.ab3@13113>    BSR.w writeword
0002AD1A <AmiBlitz3.ab3@13114>   MOVE.w (A7)+,D1
0002AD1E <AmiBlitz3.ab3@13115>    BSR.w JL_0_968A
0002AD22 <AmiBlitz3.ab3@13116>   MOVE.w L_0_969A(PC),D1
0002AD26 <AmiBlitz3.ab3@13117> BRA.w writeword
0002AD2A <AmiBlitz3.ab3@13121>   MOVEM.l D0-D7/A0-A6,-(A7)
0002AD2E <AmiBlitz3.ab3@13122>    BSR.w Atokejsr
0002AD32 <AmiBlitz3.ab3@13123>   MOVEM.l (A7)+,D0-D7/A0-A6
0002AD34 <AmiBlitz3.ab3@13126> RTS
0002AD36 <AmiBlitz3.ab3@13129>   MOVE.l D0,-(A7)
0002AD38 <AmiBlitz3.ab3@13132>   MOVE.l (A7)+,D0
0002AD3A <AmiBlitz3.ab3@13135>   MOVE.l D0,D0
0002AD3E <AmiBlitz3.ab3@13138>   BSR.w convert_word_to_long
0002AD44 <AmiBlitz3.ab3@13139>   TST.b iee
0002AD48 <AmiBlitz3.ab3@13140>   BEQ 'old
0002AD4C <AmiBlitz3.ab3@13141>   CMP.b #5,d2
0002AD50 <AmiBlitz3.ab3@13142>   BNE 'old
0002AD52 <AmiBlitz3.ab3@13143> RTS
0002AD56 <AmiBlitz3.ab3@13146> BRA.w JL_0_9600
0002AD5A <AmiBlitz3.ab3@13150>   MOVE.w #$C316,D1
0002AD60 <AmiBlitz3.ab3@13151>   TST.b typecheck
0002AD64 <AmiBlitz3.ab3@13152>   BEQ 'l1
0002AD6A <AmiBlitz3.ab3@13153>   TST.b peekaddrsize
0002AD6E <AmiBlitz3.ab3@13154>   BNE 'l1
0002AD74 <AmiBlitz3.ab3@13155>   TST.b notypecheck
0002AD78 <AmiBlitz3.ab3@13156>   BNE 'l1
0002AD7E <AmiBlitz3.ab3@13157>   TST.l lasttoken
0002AD82 <AmiBlitz3.ab3@13163> BRA.w JL_0_963A
0002AD86 <AmiBlitz3.ab3@13167>   MOVE.w #$C318,D1
0002AD8C <AmiBlitz3.ab3@13168>   TST.b typecheck
0002AD90 <AmiBlitz3.ab3@13169>   BEQ 'l1
0002AD96 <AmiBlitz3.ab3@13170>   TST.b peekaddrsize
0002AD9A <AmiBlitz3.ab3@13171>   BNE 'l1
0002ADA0 <AmiBlitz3.ab3@13172>   TST.b notypecheck
0002ADA4 <AmiBlitz3.ab3@13173>   BNE 'l1
0002ADAA <AmiBlitz3.ab3@13174>   TST.l lasttoken
0002ADAE <AmiBlitz3.ab3@13180> BRA.w JL_0_963A
0002ADB2 <AmiBlitz3.ab3@13184>   MOVE.w #$C318,D1
0002ADB8 <AmiBlitz3.ab3@13185>   TST.b typecheck
0002ADBC <AmiBlitz3.ab3@13186>   BEQ 'l1
0002ADC2 <AmiBlitz3.ab3@13187>   TST.b notypecheck
0002ADC6 <AmiBlitz3.ab3@13188>   BNE 'l1
0002ADCC <AmiBlitz3.ab3@13189>   TST.l lasttoken
0002ADD0 <AmiBlitz3.ab3@13195>   BSR.w JL_0_963A
0002ADD4 <AmiBlitz3.ab3@13196> BRA.w convert_word_to_quick
0002ADD8 <AmiBlitz3.ab3@13200> BRA.w JL_0_9600
0002ADDA <AmiBlitz3.ab3@13204> RTS
0002ADDE <AmiBlitz3.ab3@13208>   MOVE.w #$C319,D1
0002ADE4 <AmiBlitz3.ab3@13209>   TST.b typecheck
0002ADE8 <AmiBlitz3.ab3@13210>   BEQ 'l1
0002ADEE <AmiBlitz3.ab3@13211>   TST.b notypecheck
0002ADF2 <AmiBlitz3.ab3@13212>   BNE 'l1
0002ADF8 <AmiBlitz3.ab3@13213>   TST.l lasttoken
0002ADFC <AmiBlitz3.ab3@13220>   BSR.w JL_0_963A
0002AE00 <AmiBlitz3.ab3@13223>   MOVE.w #$4240,D1
0002AE06 <AmiBlitz3.ab3@13224>   OR.w regnum,D1
0002AE0A <AmiBlitz3.ab3@13225>   BSR.w writeword
0002AE0E <AmiBlitz3.ab3@13226>   MOVE.w #$4840,D1
0002AE14 <AmiBlitz3.ab3@13227>   OR.w regnum,D1
0002AE18 <AmiBlitz3.ab3@13228> BRA.w writeword
0002AE1C <AmiBlitz3.ab3@13232> BRA.w JL_0_96D0
0002AE20 <AmiBlitz3.ab3@13236>   BSR.w JL_0_96D0
0002AE24 <AmiBlitz3.ab3@13237> BRA.w convert_word_to_long
0002AE26 <AmiBlitz3.ab3@13242>   MOVEQ #0,d0
0002AE2C <AmiBlitz3.ab3@13243>   MOVE.w regnum,d0
0002AE2E <AmiBlitz3.ab3@13244>   ASL.l #7,d0
0002AE34 <AmiBlitz3.ab3@13245>   MOVE.l #$f2004000,d1
0002AE36 <AmiBlitz3.ab3@13246>   OR.l d0,d1
0002AE38 <AmiBlitz3.ab3@13247>   ASL.l #1,d0
0002AE3A <AmiBlitz3.ab3@13248>   ASL.l #8,d0
0002AE3C <AmiBlitz3.ab3@13249>   OR.l d0,d1
0002AE40 <AmiBlitz3.ab3@13250>   BSR writelong
0002AE46 <AmiBlitz3.ab3@13251>   MOVE.w regnum,d0
0002AE48 <AmiBlitz3.ab3@13252>   ASL.l #7,d0
0002AE4E <AmiBlitz3.ab3@13253>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002AE50 <AmiBlitz3.ab3@13254>   OR.w d0,d1
0002AE54 <AmiBlitz3.ab3@13255>   BSR writelong
0002AE5A <AmiBlitz3.ab3@13256>   MOVE.l #$37800000,d1
0002AE5E <AmiBlitz3.ab3@13257>   BSR writelong
0002AE60 <AmiBlitz3.ab3@13258> RTS
0002AE66 <AmiBlitz3.ab3@13262>   TST.b iee
0002AE6A <AmiBlitz3.ab3@13263>   BNE qtof
0002AE6E <AmiBlitz3.ab3@13264>   MOVE.w #$D300,D1
0002AE70 <AmiBlitz3.ab3@13267>   MOVE.w D1,-(A7)
0002AE74 <AmiBlitz3.ab3@13268>    BSR.w JL_0_AD40
0002AE76 <AmiBlitz3.ab3@13269>   MOVE.l D4,D1
0002AE7A <AmiBlitz3.ab3@13270>    BSR.w JL_0_AD38
0002AE7E <AmiBlitz3.ab3@13271>    BSR.w JL_0_A352
0002AE80 <AmiBlitz3.ab3@13272>   MOVE.w (A7)+,D1
0002AE84 <AmiBlitz3.ab3@13273>    BSR.w Atokejsr
0002AE88 <AmiBlitz3.ab3@13274>    BSR.w JL_0_A36E
0002AE8A <AmiBlitz3.ab3@13275>   MOVE.l D5,D1
0002AE8E <AmiBlitz3.ab3@13276> BRA.w JL_0_AD38
0002AE90 <AmiBlitz3.ab3@13280> RTS
0002AE96 <AmiBlitz3.ab3@13283>   TST.b typecheck
0002AE9A <AmiBlitz3.ab3@13284>   BEQ 'l1
0002AEA0 <AmiBlitz3.ab3@13285>   TST.b notypecheck
0002AEA4 <AmiBlitz3.ab3@13286>   BNE 'l1
0002AEAA <AmiBlitz3.ab3@13287>   TST.l lasttoken
0002AEB0 <AmiBlitz3.ab3@13292>   TST.b iee
0002AEB4 <AmiBlitz3.ab3@13293>   BNE ftol
0002AEB8 <AmiBlitz3.ab3@13294>   MOVE.w #$C31A,D1
0002AEBC <AmiBlitz3.ab3@13295>   BSR.w JL_0_963A
0002AEC0 <AmiBlitz3.ab3@13296>   BSR.w JL_0_974A
0002AEC4 <AmiBlitz3.ab3@13297> BRA.w convert_long_to_byte
0002AEC6 <AmiBlitz3.ab3@13301> RTS
0002AECC <AmiBlitz3.ab3@13304>   TST.b typecheck
0002AED0 <AmiBlitz3.ab3@13305>   BEQ 'l1
0002AED6 <AmiBlitz3.ab3@13306>   TST.b notypecheck
0002AEDA <AmiBlitz3.ab3@13307>   BNE 'l1
0002AEE0 <AmiBlitz3.ab3@13308>   TST.l lasttoken
0002AEE6 <AmiBlitz3.ab3@13313>   TST.b iee
0002AEEA <AmiBlitz3.ab3@13314>   BNE ftol
0002AEEE <AmiBlitz3.ab3@13315>   MOVE.w #$C31B,D1
0002AEF2 <AmiBlitz3.ab3@13316>   BSR.w JL_0_963A
0002AEF6 <AmiBlitz3.ab3@13317>   BSR.w JL_0_974A
0002AEFA <AmiBlitz3.ab3@13318> BRA.w convert_long_to_word
0002AEFC <AmiBlitz3.ab3@13322> RTS
0002AF02 <AmiBlitz3.ab3@13325>   TST.b iee
0002AF06 <AmiBlitz3.ab3@13326>   BNE ftol
0002AF0A <AmiBlitz3.ab3@13327>   MOVE.w #$C31C,D1
0002AF0E <AmiBlitz3.ab3@13328>   BSR.w JL_0_963A
0002AF12 <AmiBlitz3.ab3@13331>   MOVE.w #$FFE2,D1
0002AF16 <AmiBlitz3.ab3@13332> BRA.w JL_0_9604
0002AF18 <AmiBlitz3.ab3@13335>   MOVE.l d0,-(a7)
0002AF1A <AmiBlitz3.ab3@13336>   MOVEQ #0,d0
0002AF20 <AmiBlitz3.ab3@13337>   MOVE.w regnum,d0
0002AF22 <AmiBlitz3.ab3@13338>   ASL.l #7,d0
0002AF28 <AmiBlitz3.ab3@13339>   MOVE.l #$f2006000,d1
0002AF2A <AmiBlitz3.ab3@13340>   OR.l d0,d1
0002AF2C <AmiBlitz3.ab3@13341>   ASL.l #1,d0
0002AF2E <AmiBlitz3.ab3@13342>   ASL.l #8,d0
0002AF30 <AmiBlitz3.ab3@13343>   OR.l d0,d1
0002AF32 <AmiBlitz3.ab3@13344>   MOVE.l (a7)+,d0
0002AF36 <AmiBlitz3.ab3@13345> BRA writelong
0002AF38 <AmiBlitz3.ab3@13349>   MOVE.l d0,-(a7)
0002AF3A <AmiBlitz3.ab3@13350>   MOVEQ #0,d0
0002AF40 <AmiBlitz3.ab3@13351>   MOVE.l #$f23c4023,d1
0002AF46 <AmiBlitz3.ab3@13352>   MOVE.w regnum,d0
0002AF48 <AmiBlitz3.ab3@13353>   ASL.l #7,d0
0002AF4A <AmiBlitz3.ab3@13354>   OR.l d0,d1
0002AF4E <AmiBlitz3.ab3@13355>   BSR writelong
0002AF54 <AmiBlitz3.ab3@13356>   MOVE.l #$00010000,d1
0002AF58 <AmiBlitz3.ab3@13357>   BSR writelong
0002AF5E <AmiBlitz3.ab3@13358>   MOVE.w regnum,d0
0002AF60 <AmiBlitz3.ab3@13359>   ASL.l #7,d0
0002AF66 <AmiBlitz3.ab3@13360>   MOVE.l #$f2006000,d1
0002AF68 <AmiBlitz3.ab3@13361>   OR.l d0,d1
0002AF6A <AmiBlitz3.ab3@13362>   ASL.l #1,d0
0002AF6C <AmiBlitz3.ab3@13363>   ASL.l #8,d0
0002AF6E <AmiBlitz3.ab3@13364>   OR.l d0,d1
0002AF72 <AmiBlitz3.ab3@13365>   BSR writelong
0002AF74 <AmiBlitz3.ab3@13366>   MOVE.l (a7)+,d0
0002AF76 <AmiBlitz3.ab3@13367> RTS
0002AF78 <AmiBlitz3.ab3@13371> RTS
0002AF7E <AmiBlitz3.ab3@13375>   TST.b iee
0002AF82 <AmiBlitz3.ab3@13376>   BNE ftoq
0002AF86 <AmiBlitz3.ab3@13377>   MOVE.w #$C31B,D1
0002AF8A <AmiBlitz3.ab3@13378>   BSR.w JL_0_963A
0002AF8E <AmiBlitz3.ab3@13379>   MOVE.w #$D301,D1
0002AF92 <AmiBlitz3.ab3@13380> BRA.w JL_0_96FC
0002AF98 <AmiBlitz3.ab3@13386>    TST.b blitzparloop
0002AF9C <AmiBlitz3.ab3@13387>    BNE 'l1
0002AFA2 <AmiBlitz3.ab3@13388>    TST.b funcparloop
0002AFA6 <AmiBlitz3.ab3@13389>    BNE 'l1
0002AFAA <AmiBlitz3.ab3@13390>    BRA error_convert_types
0002AFB2 <AmiBlitz3.ab3@13393>   CMP.b #2,optistring
0002AFB6 <AmiBlitz3.ab3@13394>   BEQ JLrts
0002AFBC <AmiBlitz3.ab3@13395>   MOVE.w stol,D1
0002AFC0 <AmiBlitz3.ab3@13396>   BSR.w writeword
0002AFC8 <AmiBlitz3.ab3@13397>   CMPI.w #$2,sbgot
0002AFCC <AmiBlitz3.ab3@13398>   BCS.w sbtolong
0002AFD0 <AmiBlitz3.ab3@13399>   MOVE.w ceos(PC),D1
0002AFD4 <AmiBlitz3.ab3@13400>   BSR.w writeword
0002AFDA <AmiBlitz3.ab3@13403>   MOVE.w regnum,D1
0002AFDC <AmiBlitz3.ab3@13404>   LSL.w #8,D1
0002AFDE <AmiBlitz3.ab3@13405>   LSL.w #1,D1
0002AFE6 <AmiBlitz3.ab3@13406>   CMPI.w #$2,sbgot
0002AFEA <AmiBlitz3.ab3@13407>   BCS.w JL_0_98E8
0002AFF0 <AmiBlitz3.ab3@13408>   MOVE.w a2offset,D3
0002AFF6 <AmiBlitz3.ab3@13409>   SUB.w thisstuse,D3
0002AFFA <AmiBlitz3.ab3@13410>   CMP.w #$6,D3
0002AFFE <AmiBlitz3.ab3@13411>   BNE.w JL_0_98D4b
0002B004 <AmiBlitz3.ab3@13412>   OR.w movestst2,D1
0002B008 <AmiBlitz3.ab3@13413>   BSR.w writeword
0002B00E <AmiBlitz3.ab3@13414>   LEA movestst2+2,A0
0002B014 <AmiBlitz3.ab3@13415>   LEA movestst2f,A1
0002B018 <AmiBlitz3.ab3@13416> BRA.w pokecode2
0002B01E <AmiBlitz3.ab3@13420>   OR.w movea7dn,D1
0002B022 <AmiBlitz3.ab3@13421>   BSR.w writeword
0002B028 <AmiBlitz3.ab3@13422>   MOVE.l #0,D1
0002B02C <AmiBlitz3.ab3@13423> BRA.w writeword
0002B032 <AmiBlitz3.ab3@13427>   ADDQ.w #1,fuckpos
0002B036 <AmiBlitz3.ab3@13428>   BSR.w writeconvertcode
0002B03C <AmiBlitz3.ab3@13429>   SUBQ.w #1,fuckpos
0002B03E <AmiBlitz3.ab3@13431> RTS
0002B040 <AmiBlitz3.ab3@13435>   MOVE.w D3,D1
0002B044 <AmiBlitz3.ab3@13436>   CMP.w #7,d1
0002B048 <AmiBlitz3.ab3@13437>   BLE 'ok
0002B04E <AmiBlitz3.ab3@13438>   JMP errorinternalconvert
0002B050 <AmiBlitz3.ab3@13439> 'ok  SUBQ.w #1,D1
0002B054 <AmiBlitz3.ab3@13440>   MULU #$7,D1
0002B056 <AmiBlitz3.ab3@13441>   ADD.w D2,D1
0002B058 <AmiBlitz3.ab3@13442>   SUBQ.w #1,D1
0002B05A <AmiBlitz3.ab3@13443>   LSL.w #2,D1
0002B060 <AmiBlitz3.ab3@13444>   LEA convtable,A0
0002B064 <AmiBlitz3.ab3@13445>   MOVE.l $0(A0,D1.W),D1
0002B068 <AmiBlitz3.ab3@13446>   BEQ.w JL_0_97A2
0002B06A <AmiBlitz3.ab3@13447>     MOVEA.l D1,A0
0002B06E <AmiBlitz3.ab3@13448>     CMP.b #$ff,d3
0002B072 <AmiBlitz3.ab3@13449>     BEQ JL_0_97A2
0002B074 <AmiBlitz3.ab3@13450> JMP (A0)
0002B076 <AmiBlitz3.ab3@13453> RTS
0002B07A <AmiBlitz3.ab3@13456> usedfrom:  Ds.l 1
0002B07E <AmiBlitz3.ab3@13463>   CMP.w #"\",D0
0002B082 <AmiBlitz3.ab3@13464>   BNE.w JL_0_97C2
0002B086 <AmiBlitz3.ab3@13465>     CMP.b #"\",(a5)
0002B08A <AmiBlitz3.ab3@13466>     BNE 'first
0002B090 <AmiBlitz3.ab3@13467>       MOVE.l A5,usedfrom
0002B096 <AmiBlitz3.ab3@13468>       LEA path2,A5
0002B09A <AmiBlitz3.ab3@13469> BRA 'g1
0002B09C <AmiBlitz3.ab3@13472>     SUBQ.w #1,A5
0002B0A2 <AmiBlitz3.ab3@13473>   MOVE.l A5,usedfrom
0002B0A8 <AmiBlitz3.ab3@13474>   LEA usedpath,A5                                          ;read path
0002B0AC <AmiBlitz3.ab3@13477>   BSR.w get1bytemain
0002B0B2 <AmiBlitz3.ab3@13480>   CLR.w flagmask
0002B0B6 <AmiBlitz3.ab3@13481>   CMP.w #$2A,D0
0002B0BA <AmiBlitz3.ab3@13482>    BNE.w JL_0_983A
0002B0C2 <AmiBlitz3.ab3@13483>   MOVE.w #$0001,flagmask
0002B0C6 <AmiBlitz3.ab3@13485>    BSR.w getparameter2
0002B0CA <AmiBlitz3.ab3@13488>    BEQ.w syntaxerr
0002B0CE <AmiBlitz3.ab3@13489>   CMP.w #$28,D0
0002B0D2 <AmiBlitz3.ab3@13490>    BEQ.w JL_0_9830
0002B0D6 <AmiBlitz3.ab3@13491>   CMP.w #$2E,D0
0002B0DA <AmiBlitz3.ab3@13492>    BEQ.w JL_0_980C
0002B0DE <AmiBlitz3.ab3@13493>   CMP.w #$24,D0
0002B0E2 <AmiBlitz3.ab3@13494>    BNE.w JL_0_9838
0002B0EA <AmiBlitz3.ab3@13495>   ORI.w #$8,flagmask
0002B0EE <AmiBlitz3.ab3@13496>    BSR.w storeloc
0002B0F2 <AmiBlitz3.ab3@13497>    BSR.w get1bytemain
0002B0F6 <AmiBlitz3.ab3@13498> BRA.w JL_0_9822
0002B0FA <AmiBlitz3.ab3@13502>   BSR.w storeloc
0002B0FC <AmiBlitz3.ab3@13503>   MOVE.w D2,-(A7)
0002B102 <AmiBlitz3.ab3@13504>   LEA namebuff2,A1
0002B106 <AmiBlitz3.ab3@13505>    BSR.w makename3
0002B10A <AmiBlitz3.ab3@13506>    BEQ.w syntaxerr
0002B10C <AmiBlitz3.ab3@13507>   MOVE.w (A7)+,D2
0002B10E <AmiBlitz3.ab3@13510>    MOVE.w D0,D1
0002B112 <AmiBlitz3.ab3@13511>    BSR.w resloc
0002B116 <AmiBlitz3.ab3@13512>    CMP.w #$28,D1
0002B11A <AmiBlitz3.ab3@13513>    BNE.w JL_0_9838
0002B122 <AmiBlitz3.ab3@13516>   ORI.w #$2,flagmask
0002B124 <AmiBlitz3.ab3@13519> RTS
0002B128 <AmiBlitz3.ab3@13523>   CMP.w #$40,D0
0002B12C <AmiBlitz3.ab3@13524>    BNE.w JL_0_984E
0002B134 <AmiBlitz3.ab3@13525>   MOVE.w #$0005,flagmask
0002B138 <AmiBlitz3.ab3@13526> BRA.w JL_0_97D8
0002B13C <AmiBlitz3.ab3@13530>   BSR.w makename2
0002B140 <AmiBlitz3.ab3@13531> BRA.w JL_0_97DC
0002B144 <AmiBlitz3.ab3@13535>   MOVE.w #$FED3,D1
0002B148 <AmiBlitz3.ab3@13536>    BSR.w uselib
0002B14E <AmiBlitz3.ab3@13537>   LEA pusha3,A0
0002B154 <AmiBlitz3.ab3@13538>   LEA pusha3f,A1
0002B158 <AmiBlitz3.ab3@13539> BRA.w pokecode
0002B15C <AmiBlitz3.ab3@13543>   MOVE.w #$FED3,D1
0002B160 <AmiBlitz3.ab3@13544>    BSR.w uselib
0002B166 <AmiBlitz3.ab3@13545>   LEA pulla3,A0
0002B16C <AmiBlitz3.ab3@13546>   LEA pulla3f,A1
0002B170 <AmiBlitz3.ab3@13547> BRA.w pokecode
0002B172 <AmiBlitz3.ab3@13551> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002B17A <AmiBlitz3.ab3@13556>     CMP.b #2,optistring
0002B17E <AmiBlitz3.ab3@13557>    BEQ 'l10
0002B182 <AmiBlitz3.ab3@13558>    MOVE.w ceos(PC),D1
0002B186 <AmiBlitz3.ab3@13559>    BSR.w writeword                                         ;clr.b (a3)
0002B18C <AmiBlitz3.ab3@13562>   MOVE.w regnum,D1
0002B18E <AmiBlitz3.ab3@13563>   LSL.w #8,D1
0002B190 <AmiBlitz3.ab3@13564>   LSL.w #1,D1
0002B198 <AmiBlitz3.ab3@13565>   CMPI.w #$2,sbgot
0002B19C <AmiBlitz3.ab3@13566>    BCS.w JL_0_98E8
0002B1A2 <AmiBlitz3.ab3@13567>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002B1A8 <AmiBlitz3.ab3@13568>   SUB.w thisstuse,D3
0002B1AC <AmiBlitz3.ab3@13569>   CMP.w #$6,D3
0002B1B0 <AmiBlitz3.ab3@13570>    BNE.w JL_0_98D4
0002B1B6 <AmiBlitz3.ab3@13571>   OR.w movestst2,D1
0002B1BA <AmiBlitz3.ab3@13572>    BSR.w writeword
0002B1C0 <AmiBlitz3.ab3@13573>   LEA movestst2+2,A0
0002B1C6 <AmiBlitz3.ab3@13574>   LEA movestst2f,A1
0002B1CA <AmiBlitz3.ab3@13575> BRA.w pokecode2
0002B1D0 <AmiBlitz3.ab3@13579>    OR.w movea7dn,D1
0002B1D4 <AmiBlitz3.ab3@13580>    BSR.w writeword
0002B1DA <AmiBlitz3.ab3@13581>   MOVE.l movea7dn+2,D1
0002B1DE <AmiBlitz3.ab3@13593>   BSR writelong
0002B1E6 <AmiBlitz3.ab3@13596>    CMP.w #6,regnum
0002B1EA <AmiBlitz3.ab3@13597>    BEQ 'l1
0002B1F0 <AmiBlitz3.ab3@13598>    TST.w stackpar
0002B1F4 <AmiBlitz3.ab3@13599>    BNE 'l1
0002B1FA <AmiBlitz3.ab3@13600>    TST.b funcparloop
0002B1FE <AmiBlitz3.ab3@13601>    BEQ 'l1
0002B204 <AmiBlitz3.ab3@13602>    MOVE.l #$48780000,d1
0002B208 <AmiBlitz3.ab3@13603>    BSR writelong
0002B20A <AmiBlitz3.ab3@13607> RTS
0002B20C <AmiBlitz3.ab3@13612>      MOVE.l d1,-(a7)
0002B214 <AmiBlitz3.ab3@13613>      CMP.w #6,regnum
0002B218 <AmiBlitz3.ab3@13614>      BEQ 'l1
0002B21E <AmiBlitz3.ab3@13615>      TST.w stackpar
0002B222 <AmiBlitz3.ab3@13616>      BNE 'l1
0002B228 <AmiBlitz3.ab3@13617>      TST.b funcparloop
0002B22C <AmiBlitz3.ab3@13618>      BEQ 'l1
0002B232 <AmiBlitz3.ab3@13619>      MOVE.l #$48780000,d1
0002B236 <AmiBlitz3.ab3@13620>      BSR writelong
0002B238 <AmiBlitz3.ab3@13623>      MOVE.l (a7)+,d1
0002B23E <AmiBlitz3.ab3@13625>    OR.w movestdn,D1
0002B242 <AmiBlitz3.ab3@13626>    BSR.w writeword
0002B246 <AmiBlitz3.ab3@13627>   MOVE.w #$FED3,D1
0002B24A <AmiBlitz3.ab3@13628>    BSR.w uselib
0002B24E <AmiBlitz3.ab3@13629>   MOVE.w $A(A1),D1
0002B252 <AmiBlitz3.ab3@13630> BRA.w writeword
0002B254 <AmiBlitz3.ab3@13633> unknown:    Ds.w 1
0002B25A <AmiBlitz3.ab3@13636> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002B25E <AmiBlitz3.ab3@13637> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002B264 <AmiBlitz3.ab3@13638>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002B26A <AmiBlitz3.ab3@13644>   TST.b debugmode
0002B26E <AmiBlitz3.ab3@13645>   BEQ.w sharreval
0002B272 <AmiBlitz3.ab3@13646>  BSR.w arreval
0002B276 <AmiBlitz3.ab3@13649>   MOVE.w somecode(PC),D1
0002B27C <AmiBlitz3.ab3@13650>   OR.w regnum,D1
0002B280 <AmiBlitz3.ab3@13651>    BSR.w writeword
0002B282 <AmiBlitz3.ab3@13652>   MOVEQ.l #$01,D1
0002B284 <AmiBlitz3.ab3@13653>   SWAP D1
0002B288 <AmiBlitz3.ab3@13654>    BSR.w writelong
0002B28C <AmiBlitz3.ab3@13655>   MOVE.l somecode2(PC),D1
0002B290 <AmiBlitz3.ab3@13656>    BSR.w writelong
0002B294 <AmiBlitz3.ab3@13657>   MOVE.w #$C309,D1
0002B298 <AmiBlitz3.ab3@13658> BRA.w Atokejsr
0002B29A <AmiBlitz3.ab3@13662>   MOVEQ.l #$02,D2
0002B29C <AmiBlitz3.ab3@13663>   MOVEQ.l #$00,D1
0002B29E <AmiBlitz3.ab3@13664>   MOVEQ.l #$00,D3
0002B2A2 <AmiBlitz3.ab3@13665> BRA.w maineval2
0002B2A4 <AmiBlitz3.ab3@13669>   MOVEQ.l #$03,D2
0002B2A6 <AmiBlitz3.ab3@13670>   MOVEQ.l #$00,D1
0002B2A8 <AmiBlitz3.ab3@13671>   MOVEQ.l #$00,D3
0002B2AE <AmiBlitz3.ab3@13672>   MOVE.b notypecheck,-(a7)
0002B2B6 <AmiBlitz3.ab3@13673>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002B2BC <AmiBlitz3.ab3@13674>   JSR maineval2
0002B2C2 <AmiBlitz3.ab3@13675>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002B2C4 <AmiBlitz3.ab3@13676>   RTS
0002B2CE <AmiBlitz3.ab3@13680>   MOVE.w oldqflag,instringon
0002B2D4 <AmiBlitz3.ab3@13681>   MOVEA.l lastsourcepos,A5
0002B2D6 <AmiBlitz3.ab3@13682>   MOVEQ.l #-$01,D1
0002B2D8 <AmiBlitz3.ab3@13683>   MOVEQ.l #-$01,D3
0002B2DC <AmiBlitz3.ab3@13684> BRA.w peval
0002B2E6 <AmiBlitz3.ab3@13689>   MOVE.w oldqflag,instringon
0002B2EC <AmiBlitz3.ab3@13690>   MOVEA.l lastsourcepos,A5
0002B2EE <AmiBlitz3.ab3@13693>   MOVEQ.l #-$01,D1
0002B2F0 <AmiBlitz3.ab3@13694>   MOVEQ.l #$00,D3
0002B2F6 <AmiBlitz3.ab3@13695>   MOVE.l leftsidetype,-(a7)
0002B2FC <AmiBlitz3.ab3@13696>   MOVE.l rightsidetype,-(a7)
0002B302 <AmiBlitz3.ab3@13697>   CLR.l leftsidetype
0002B308 <AmiBlitz3.ab3@13698>   CLR.l rightsidetype
0002B30E <AmiBlitz3.ab3@13699>   JSR maineval
0002B314 <AmiBlitz3.ab3@13700>   MOVE.l (a7)+,rightsidetype
0002B31A <AmiBlitz3.ab3@13701>   MOVE.l (a7)+,leftsidetype
0002B31C <AmiBlitz3.ab3@13702>   RTS
0002B326 <AmiBlitz3.ab3@13706>   MOVE.w oldqflag,instringon
0002B32C <AmiBlitz3.ab3@13707>   MOVEA.l lastsourcepos,A5
0002B32E <AmiBlitz3.ab3@13708>   MOVEQ.l #$00,D1
0002B330 <AmiBlitz3.ab3@13709>   MOVEQ.l #-$01,D3
0002B334 <AmiBlitz3.ab3@13710> BRA.w maineval
0002B336 <AmiBlitz3.ab3@13714>   MOVEQ.l #$01,D1
0002B338 <AmiBlitz3.ab3@13715>   MOVEQ.l #-$01,D3
0002B33C <AmiBlitz3.ab3@13716> BRA.w maineval
0002B346 <AmiBlitz3.ab3@13721>   MOVE.w oldqflag,instringon
0002B34C <AmiBlitz3.ab3@13722>   MOVEA.l lastsourcepos,A5
0002B34E <AmiBlitz3.ab3@13725>   MOVEQ.l #$00,D1                                        ;no push
0002B350 <AmiBlitz3.ab3@13726>   MOVEQ.l #$00,D3
0002B358 <AmiBlitz3.ab3@13747>    CMPI.w #$6,regnum
0002B35C <AmiBlitz3.ab3@13748>    BCS.w maineval2
0002B35E <AmiBlitz3.ab3@13749>    MOVEQ #0,d1
0002B364 <AmiBlitz3.ab3@13750>    MOVE.l destpointer,a4
0002B36A <AmiBlitz3.ab3@13752>    CMPA.l destbufferend,A4
0002B36E <AmiBlitz3.ab3@13753>    BCC.w maineval__l2
0002B374 <AmiBlitz3.ab3@13755>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002B378 <AmiBlitz3.ab3@13757>    BNE maineval__l2
0002B37C <AmiBlitz3.ab3@13761> BRA maineval__l1
0002B37E <AmiBlitz3.ab3@13764>   MOVEQ.l #-$01,D1
0002B386 <AmiBlitz3.ab3@13767>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002B38C <AmiBlitz3.ab3@13770>   MOVE.w thisstuse,-(A7)
0002B396 <AmiBlitz3.ab3@13771>   MOVE.w a2offset,thisstuse
0002B39C <AmiBlitz3.ab3@13772>   MOVE.w stackpar,-(A7)
0002B3A2 <AmiBlitz3.ab3@13773>   MOVE.w D1,stackpar
0002B3A8 <AmiBlitz3.ab3@13774>   MOVE.w sbgot,-(A7)
0002B3AE <AmiBlitz3.ab3@13775>   CLR.w sbgot
0002B3B2 <AmiBlitz3.ab3@13776>   MOVE.w unknown(PC),-(A7)
0002B3B8 <AmiBlitz3.ab3@13777>   MOVE.w D3,unknown
0002B3BA <AmiBlitz3.ab3@13778>   MOVE.w D2,-(a7)
0002B3C0 <AmiBlitz3.ab3@13779>   MOVE.w d2,mode
0002B3C4 <AmiBlitz3.ab3@13780>    BSR.w eval3
0002B3C6 <AmiBlitz3.ab3@13781>   MOVE.w (a7)+,d3
0002B3CA <AmiBlitz3.ab3@13782>    BEQ.w maineval__noconv
0002B3CE <AmiBlitz3.ab3@13783>   MOVE.w unknown(PC),D1
0002B3D2 <AmiBlitz3.ab3@13784>    BNE.w maineval__noconv
0002B3D4 <AmiBlitz3.ab3@13785>   EXG.l D2,D3
0002B3D6 <AmiBlitz3.ab3@13786>    MOVE.l a2,-(a7)
0002B3DC <AmiBlitz3.ab3@13787>    TST.b curtemplabel
0002B3E0 <AmiBlitz3.ab3@13788>    BEQ maineval2__l10
0002B3E6 <AmiBlitz3.ab3@13789>    MOVE.l asmbuff,a2
0002B3EC <AmiBlitz3.ab3@13790>    CMP.w #$c,$8(a2)
0002B3F0 <AmiBlitz3.ab3@13791>    BEQ maineval2__l20
0002B3F6 <AmiBlitz3.ab3@13792>    CMP.w #$d,$8(a2)
0002B3FA <AmiBlitz3.ab3@13793>    BEQ maineval2__l20
0002B3FC <AmiBlitz3.ab3@13796>   CMP.w d2,d3
0002B400 <AmiBlitz3.ab3@13797>   BEQ maineval2__l20
0002B404 <AmiBlitz3.ab3@13798>   BSR.w writeconvertcode
0002B40A <AmiBlitz3.ab3@13799>   CLR.b doimmediate
0002B40C <AmiBlitz3.ab3@13802>   MOVE.l (a7)+,a2
0002B412 <AmiBlitz3.ab3@13805>   MOVE.w (A7)+,unknown
0002B418 <AmiBlitz3.ab3@13806>   MOVE.w stackpar,D1
0002B41C <AmiBlitz3.ab3@13807>    BEQ.w maineval__skipme
0002B420 <AmiBlitz3.ab3@13808>    BMI.w maineval__skipme
0002B426 <AmiBlitz3.ab3@13812>   MOVE.w regnum,D1
0002B428 <AmiBlitz3.ab3@13813>   LSL.w #8,D1
0002B42A <AmiBlitz3.ab3@13814>   LSL.w #1,D1
0002B42E <AmiBlitz3.ab3@13815>   CMP.w #$7,D2
0002B432 <AmiBlitz3.ab3@13816>    BNE.w maineval__hi1
0002B43A <AmiBlitz3.ab3@13817>    CMP.b #2,optistring
0002B43E <AmiBlitz3.ab3@13818>    BEQ maineval__hi1a
0002B440 <AmiBlitz3.ab3@13819>   MOVE.w D1,-(A7)
0002B446 <AmiBlitz3.ab3@13820>   OR.w getstlen,D1
0002B44A <AmiBlitz3.ab3@13821>    BSR.w writeword
0002B44C <AmiBlitz3.ab3@13822>   MOVE.w (A7)+,D1
0002B452 <AmiBlitz3.ab3@13825>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002B456 <AmiBlitz3.ab3@13829>   MOVE.w #$3f3c,d1
0002B45A <AmiBlitz3.ab3@13830>    BSR.w writeword
0002B45C <AmiBlitz3.ab3@13834>   MOVE.w d2,d1
0002B462 <AmiBlitz3.ab3@13835>   MOVE.w d1,libmode
0002B466 <AmiBlitz3.ab3@13836>    BSR.w writeword
0002B46A <AmiBlitz3.ab3@13837>   CMP.w #$7,D2
0002B46E <AmiBlitz3.ab3@13838>    BNE.w maineval__skipme
0002B474 <AmiBlitz3.ab3@13839>   MOVE.w putstlen,D1
0002B47A <AmiBlitz3.ab3@13840>   OR.w regnum,D1
0002B47E <AmiBlitz3.ab3@13841>    BSR.w writeword
0002B482 <AmiBlitz3.ab3@13844>    CMP.w #$7,D2
0002B486 <AmiBlitz3.ab3@13845>    BNE.w maineval__notst
0002B48E <AmiBlitz3.ab3@13856>    CMP.b #2,optistring
0002B492 <AmiBlitz3.ab3@13857>    BEQ maineval__skipme_l10
0002B498 <AmiBlitz3.ab3@13858>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002B49C <AmiBlitz3.ab3@13859>    BSR.w sbtolong
0002B4A0 <AmiBlitz3.ab3@13860> BRA.w maineval__notst2
0002B4A8 <AmiBlitz3.ab3@13864>     CMP.w #6,regnum
0002B4AC <AmiBlitz3.ab3@13865>     BEQ maineval__skipme_l10_l1
0002B4B2 <AmiBlitz3.ab3@13866>     TST.b funcparloop
0002B4B6 <AmiBlitz3.ab3@13867>     BEQ maineval__skipme_l10_l1
0002B4BC <AmiBlitz3.ab3@13868>     MOVE.l #$48780000,d1
0002B4C0 <AmiBlitz3.ab3@13869>     BSR writelong
0002B4C4 <AmiBlitz3.ab3@13872> BRA.w maineval__notst2
0002B4CA <AmiBlitz3.ab3@13875>   ADDQ.w #2,a2offset
0002B4CE <AmiBlitz3.ab3@13876> BRA maineval__skipme
0002B4D6 <AmiBlitz3.ab3@13879>   CMPI.w #$2,sbgot
0002B4DA <AmiBlitz3.ab3@13880>    BCS.w maineval__notst2                                         ;correct stack
0002B4DE <AmiBlitz3.ab3@13881>   MOVE.w ststfix(PC),D1
0002B4E2 <AmiBlitz3.ab3@13882>    BSR.w writeword
0002B4E8 <AmiBlitz3.ab3@13885>   MOVE.w (A7)+,sbgot
0002B4EE <AmiBlitz3.ab3@13886>   MOVE.w stackpar,D1
0002B4F2 <AmiBlitz3.ab3@13887>    BPL.w maineval__skip
0002B4F6 <AmiBlitz3.ab3@13888>    CMP.b #7,d2
0002B4FA <AmiBlitz3.ab3@13889>    BEQ maineval__notst2_l1
0002B500 <AmiBlitz3.ab3@13890>   TST.b funcparloop
0002B504 <AmiBlitz3.ab3@13891>   BEQ maineval__notst2_l1
0002B508 <AmiBlitz3.ab3@13892>   CMP.b #5,d2
0002B50C <AmiBlitz3.ab3@13893>   BNE maineval__notst2_skip
0002B512 <AmiBlitz3.ab3@13894>   TST.b fpu
0002B516 <AmiBlitz3.ab3@13895>   BEQ maineval__notst2_skip
0002B51C <AmiBlitz3.ab3@13896>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002B522 <AmiBlitz3.ab3@13897>   JSR writelong
0002B526 <AmiBlitz3.ab3@13900>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002B52C <AmiBlitz3.ab3@13901>   ADD.w parnum,d1
0002B532 <AmiBlitz3.ab3@13902>   JSR Atokejsr
0002B538 <AmiBlitz3.ab3@13903>    TST.w dontwrite
0002B53C <AmiBlitz3.ab3@13904>    BNE maineval__notst2_l1
0002B542 <AmiBlitz3.ab3@13905>    MOVE.l data1start,d1
0002B548 <AmiBlitz3.ab3@13906>    MOVE.l destpointer,a4
0002B54C <AmiBlitz3.ab3@13907>    ADD.l d1,-4(a4)
0002B552 <AmiBlitz3.ab3@13908>    MOVE.l destpointer,d1
0002B554 <AmiBlitz3.ab3@13909>    SUBQ.l #4,d1
0002B55A <AmiBlitz3.ab3@13910>    SUB.l destbufferstart,d1
0002B55C <AmiBlitz3.ab3@13911>    MOVE.l d2,-(a7)
0002B55E <AmiBlitz3.ab3@13912>    MOVE.l d1,d2
0002B564 <AmiBlitz3.ab3@13913>    JSR addhunkoffset
0002B566 <AmiBlitz3.ab3@13914>    MOVE.l (a7)+,d2
0002B56A <AmiBlitz3.ab3@13915> BRA maineval__skip
0002B570 <AmiBlitz3.ab3@13918>   ADDQ.w #2,a2offset
0002B576 <AmiBlitz3.ab3@13919>   MOVE.w pushd0wd,D1
0002B57A <AmiBlitz3.ab3@13920>   CMP.w #$3,D2                                             ;write parameter to stack
0002B57E <AmiBlitz3.ab3@13921>    BCS.w maineval__ok
0002B584 <AmiBlitz3.ab3@13922>   ADDQ.w #2,a2offset
0002B58A <AmiBlitz3.ab3@13923>   TST.b fpu
0002B58E <AmiBlitz3.ab3@13924>   BEQ maineval__notst2_nofpu
0002B592 <AmiBlitz3.ab3@13925>   CMP.w #5,d2
0002B596 <AmiBlitz3.ab3@13926>   BNE maineval__notst2_nofpu
0002B598 <AmiBlitz3.ab3@13927>   MOVEQ #0,d1
0002B59E <AmiBlitz3.ab3@13928>   MOVE.w regnum,d1
0002B5A0 <AmiBlitz3.ab3@13929>   ASL.l #7,d1
0002B5A6 <AmiBlitz3.ab3@13930>   OR.l #$f2276400,d1
0002B5AA <AmiBlitz3.ab3@13931>   BSR writelong
0002B5AE <AmiBlitz3.ab3@13932> BRA maineval__skip
0002B5B4 <AmiBlitz3.ab3@13935>   MOVE.w pushd0l,D1
0002B5BA <AmiBlitz3.ab3@13938>    OR.w regnum,D1
0002B5BE <AmiBlitz3.ab3@13939>    BSR.w writeword                                         ;nat
0002B5C4 <AmiBlitz3.ab3@13942>   MOVE.w (A7)+,stackpar
0002B5CA <AmiBlitz3.ab3@13943>   MOVE.w (A7)+,thisstuse
0002B5CC <AmiBlitz3.ab3@13944> RTS
0002B5CE <AmiBlitz3.ab3@13947> thisstuse: Ds.w 1
0002B5D0 <AmiBlitz3.ab3@13950> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002B5D2 <AmiBlitz3.ab3@13951> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002B5D6 <AmiBlitz3.ab3@13956>   BSR.w eval4
0002B5E0 <AmiBlitz3.ab3@13957>   SUBI.l #$12,forthsp
0002B5E2 <AmiBlitz3.ab3@13958> RTS
0002B5E4 <AmiBlitz3.ab3@13962>   MOVEQ.l #$01,D1
0002B5E8 <AmiBlitz3.ab3@13964>       MOVEA.l precsp(PC),A1
0002B5EA <AmiBlitz3.ab3@13965>       MOVE.l A0,(A1)+
0002B5EC <AmiBlitz3.ab3@13966>       MOVE.w D1,(A1)+
0002B5F2 <AmiBlitz3.ab3@13967>       MOVE.l A1,precsp
0002B5F6 <AmiBlitz3.ab3@13968>    BSR.w calcloop
0002B5F8 <AmiBlitz3.ab3@13969>   TST.w D1
0002B5FC <AmiBlitz3.ab3@13970>    BNE.w syntaxerr
0002B602 <AmiBlitz3.ab3@13971>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002B604 <AmiBlitz3.ab3@13972> RTS
0002B608 <AmiBlitz3.ab3@13977>   BSR.w JL_0_9C24
0002B60C <AmiBlitz3.ab3@13980>   MOVEA.l precsp(PC),A1
0002B60E <AmiBlitz3.ab3@13981>   CMP.w -(A1),D1
0002B612 <AmiBlitz3.ab3@13982>    BHI.w JL_0_9B0A
0002B614 <AmiBlitz3.ab3@13983> RTS
0002B618 <AmiBlitz3.ab3@13988>   MOVEA.l precsp(PC),A1
0002B61A <AmiBlitz3.ab3@13989>   MOVE.l A0,(A1)+
0002B61C <AmiBlitz3.ab3@13990>   MOVE.w D1,(A1)+
0002B622 <AmiBlitz3.ab3@13991>   MOVE.l A1,precsp
0002B624 <AmiBlitz3.ab3@13992>   MOVE.w D2,-(A7)
0002B62A <AmiBlitz3.ab3@13993>   ADDQ.w #1,regnum
0002B62E <AmiBlitz3.ab3@13994>    BSR.w calcloop               ;constant optimizer
0002B634 <AmiBlitz3.ab3@13995>   SUBQ.w #1,regnum
0002B636 <AmiBlitz3.ab3@13996>   MOVE.w (A7)+,D3
0002B63A <AmiBlitz3.ab3@13997>   MOVEM.l D1/A0,-(A7)
0002B63E <AmiBlitz3.ab3@13998>    BEQ.w JL_0_9B2E
0002B642 <AmiBlitz3.ab3@13999>    BSR.w JL_0_9770
0002B646 <AmiBlitz3.ab3@14002>   BSR.w popprec
0002B64A <AmiBlitz3.ab3@14003>   BSR.w writecode
0002B64E <AmiBlitz3.ab3@14004>   MOVEA.l forthsp(PC),A0
0002B652 <AmiBlitz3.ab3@14005>   MOVE.w -$2(A0),D1
0002B656 <AmiBlitz3.ab3@14006>   OR.w -$14(A0),D1
0002B65A <AmiBlitz3.ab3@14007>   MOVE.w D1,-$14(A0)
0002B65E <AmiBlitz3.ab3@14008>    BNE.w JL_0_9C0E
0002B664 <AmiBlitz3.ab3@14009>   MOVE.w dontwrite,D1
0002B668 <AmiBlitz3.ab3@14010>    BNE.w JL_0_9C0E
0002B66C <AmiBlitz3.ab3@14011>    MOVEA.l -$24(A0),A0
0002B7A8 <AmiBlitz3.ab3@14013>  !newcalc
0002B7AC <AmiBlitz3.ab3@14014>    BEQ 'l10
0002B7B0 <AmiBlitz3.ab3@14015>    MOVEA.l forthsp(PC),A0
0002B7B8 <AmiBlitz3.ab3@14016>    MOVE.w -$18(A0),lasta6
0002B7C0 <AmiBlitz3.ab3@14017>    MOVE.l -$1C(A0),lasta6
0002B7C4 <AmiBlitz3.ab3@14018>    MOVEA.l -$24(A0),A0
0002B7CA <AmiBlitz3.ab3@14019>    MOVE.l A0,destpointer
0002B7D0 <AmiBlitz3.ab3@14020>    MOVEA.l _mathffpbase,A6
0002B7D6 <AmiBlitz3.ab3@14021>    MOVEA.l ffplib,A1
0002B7DA <AmiBlitz3.ab3@14022> BRA cont1
0002B7DE <AmiBlitz3.ab3@14025>   MOVE.w #$2000,D1
0002B7E4 <AmiBlitz3.ab3@14026>   OR.w regnum,D1
0002B7E8 <AmiBlitz3.ab3@14027>    BSR.w writeword
0002B7EA <AmiBlitz3.ab3@14028>     MOVEQ #0,d1
0002B7F0 <AmiBlitz3.ab3@14029>     MOVE.w regnum,D1
0002B7F2 <AmiBlitz3.ab3@14030>     ASL.l #8,d1
0002B7F4 <AmiBlitz3.ab3@14031>     ASL.l #2,d1
0002B7FA <AmiBlitz3.ab3@14032>     OR.l #$f2000000,d1
0002B7FE <AmiBlitz3.ab3@14033>     BSR writelong
0002B802 <AmiBlitz3.ab3@14034>   MOVE.w #$4E75,D1
0002B806 <AmiBlitz3.ab3@14035>    BSR.w writeword
0002B80E <AmiBlitz3.ab3@14036>   MOVE.w -$18(A0),lasta6
0002B816 <AmiBlitz3.ab3@14037>   MOVE.l -$1C(A0),lasta6
0002B81A <AmiBlitz3.ab3@14038>   MOVEA.l -$24(A0),A0
0002B820 <AmiBlitz3.ab3@14039>   MOVE.l A0,destpointer
0002B824 <AmiBlitz3.ab3@14040>   MOVEM.l D2/A5,-(A7)
0002B82A <AmiBlitz3.ab3@14041>   MOVEA.l _mathffpbase,A6
0002B830 <AmiBlitz3.ab3@14042>   MOVEA.l ffplib,A1
0002B834 <AmiBlitz3.ab3@14043>   MOVE.w $A(A1),D0
0002B83A <AmiBlitz3.ab3@14044>   LEA _mathffpbase,A5
0002B83C <AmiBlitz3.ab3@14045>   SUBA.w D0,A5
0002B842 <AmiBlitz3.ab3@14046>   JSR Aclearcache                                          ;neg +
0002B848 <AmiBlitz3.ab3@14047>   CLR.l load_var_addr
0002B84E <AmiBlitz3.ab3@14048>   CLR.l imm_addr
0002B854 <AmiBlitz3.ab3@14049>   TST.w dontwrite
0002B858 <AmiBlitz3.ab3@14050>   BNE '1
0002B85A <AmiBlitz3.ab3@14051>   JSR (A0)                                                 ;calc constant inline expression
0002B85E <AmiBlitz3.ab3@14054>   MOVEM.l (A7)+,D2/A5
0002B864 <AmiBlitz3.ab3@14057>   MOVE.b d2,isconstantvalue
0002B86A <AmiBlitz3.ab3@14058>   MOVE.l d0,lastconstantvalue
0002B870 <AmiBlitz3.ab3@14059>   MOVE.w regnum,D1
0002B872 <AmiBlitz3.ab3@14060>   LSL.w #8,D1
0002B874 <AmiBlitz3.ab3@14061>   LSL.w #1,D1
0002B878 <AmiBlitz3.ab3@14062>   ORI.w #$203C,D1
0002B87C <AmiBlitz3.ab3@14063>   CMP.w #$3,D2
0002B880 <AmiBlitz3.ab3@14064>    BCC.w JL_0_9BCE
0002B884 <AmiBlitz3.ab3@14065>   ORI.w #$1000,D1
0002B888 <AmiBlitz3.ab3@14066>    BSR.w writeword
0002B88A <AmiBlitz3.ab3@14067>   MOVE.w D0,D1
0002B88E <AmiBlitz3.ab3@14068>    BSR.w writeword
0002B892 <AmiBlitz3.ab3@14069> BRA.w JL_0_9BD8
0002B898 <AmiBlitz3.ab3@14073>   TST.b iee                                                ;fpu constant
0002B89C <AmiBlitz3.ab3@14074>   BEQ 'l10
0002B8A0 <AmiBlitz3.ab3@14075>   CMP.b #5,d2
0002B8A4 <AmiBlitz3.ab3@14076>   BNE 'l10
0002B8A6 <AmiBlitz3.ab3@14077>   MOVEQ #0,d1
0002B8AC <AmiBlitz3.ab3@14078>   MOVE.w regnum,D1
0002B8AE <AmiBlitz3.ab3@14079>   ASL.l #7,d1
0002B8B4 <AmiBlitz3.ab3@14080>   OR.l #$f23c5400,d1
0002B8B8 <AmiBlitz3.ab3@14081>   BSR writelong
0002B8BA <AmiBlitz3.ab3@14082>   SUBQ.l #8,a7
0002B8C0 <AmiBlitz3.ab3@14083>   fmove.d fp0,0(a7)
0002B8C2 <AmiBlitz3.ab3@14084>   MOVE.l (a7)+,d1
0002B8C6 <AmiBlitz3.ab3@14085>   BSR writelong
0002B8C8 <AmiBlitz3.ab3@14086>   MOVE.l (a7)+,d1
0002B8CC <AmiBlitz3.ab3@14087>   BSR writelong
0002B8D0 <AmiBlitz3.ab3@14088> BRA JL_0_9BD8
0002B8D4 <AmiBlitz3.ab3@14091>   BSR.w writeword
0002B8D6 <AmiBlitz3.ab3@14092>   MOVE.l D0,D1
0002B8DA <AmiBlitz3.ab3@14093>   BSR.w writelong
0002B8DE <AmiBlitz3.ab3@14096>   MOVEA.l forthsp(PC),A0
0002B8E2 <AmiBlitz3.ab3@14097>   MOVEA.l -$20(A0),A3
0002B8E8 <AmiBlitz3.ab3@14098>   MOVEA.l hunkoffsetbase,A2
0002B8EE <AmiBlitz3.ab3@14099>   MOVE.l A3,hunkoffsetbase
0002B8F4 <AmiBlitz3.ab3@14100>   MOVEA.l _execbase,A6
0002B8F6 <AmiBlitz3.ab3@14103>   CMPA.l A3,A2
0002B8FA <AmiBlitz3.ab3@14104>   BEQ.w JL_0_9C0A
0002B900 <AmiBlitz3.ab3@14105>   SUBQ.l #1,hunkoffsetcounter
0002B902 <AmiBlitz3.ab3@14106>   MOVEA.l A2,A1
0002B904 <AmiBlitz3.ab3@14107>   MOVEA.l (A2),A2
0002B906 <AmiBlitz3.ab3@14108>   MOVEQ.l #$8,D0
0002B90C <AmiBlitz3.ab3@14109>   MOVE.l mempool2,a0
0002B910 <AmiBlitz3.ab3@14110>    JSR _FreePooled(A6)
0002B914 <AmiBlitz3.ab3@14111> BRA.w JL_0_9BF0
0002B918 <AmiBlitz3.ab3@14115>   MOVEA.l forthsp(PC),A0
0002B91C <AmiBlitz3.ab3@14118>   LEA -$12(A0),A0
0002B922 <AmiBlitz3.ab3@14119>   MOVE.l A0,forthsp
0002B926 <AmiBlitz3.ab3@14120>   MOVEM.l (A7)+,D1/A0
0002B92A <AmiBlitz3.ab3@14121>   BSR.w reget
0002B92E <AmiBlitz3.ab3@14122> BRA.w JL_0_9AFE
0002B932 <AmiBlitz3.ab3@14126>   BSR.w JL_0_A386
0002B934 <AmiBlitz3.ab3@14127>   TST.w d0
0002B938 <AmiBlitz3.ab3@14128>   BEQ JL_0_9C42
0002B93C <AmiBlitz3.ab3@14129>   CMP.b #",",d0
0002B940 <AmiBlitz3.ab3@14130>   BEQ JL_0_9C42
0002B944 <AmiBlitz3.ab3@14131>   CMP.b #"@",d0                                            ;expandline @@
0002B948 <AmiBlitz3.ab3@14132>   BEQ JL_0_9C42
0002B94E <AmiBlitz3.ab3@14133>   LEA operators,A0
0002B950 <AmiBlitz3.ab3@14136>    TST.w (A0)
0002B954 <AmiBlitz3.ab3@14137>    BEQ.w JL_0_9C42
0002B956 <AmiBlitz3.ab3@14138>   CMP.w (A0),D0
0002B95A <AmiBlitz3.ab3@14139>    BEQ.w JL_0_9C46a
0002B95E <AmiBlitz3.ab3@14140>   LEA $20(A0),A0
0002B962 <AmiBlitz3.ab3@14141> BRA.w JL_0_9C2E
0002B964 <AmiBlitz3.ab3@14145>   MOVEQ.l #$00,D1
0002B966 <AmiBlitz3.ab3@14146> RTS
0002B96A <AmiBlitz3.ab3@14150>   CMP.w #$3C,D0
0002B96E <AmiBlitz3.ab3@14151>    BNE.w JL_0_9C70
0002B972 <AmiBlitz3.ab3@14152>    BSR.w get1bytemain
0002B976 <AmiBlitz3.ab3@14153>   CMP.w #$3D,D0
0002B97A <AmiBlitz3.ab3@14154>    BNE.w JL_0_9C64
0002B980 <AmiBlitz3.ab3@14155>   LEA ople,A0
0002B984 <AmiBlitz3.ab3@14156> BRA.w JL_0_9CCA
0002B988 <AmiBlitz3.ab3@14160>   CMP.w #$3E,D0
0002B98C <AmiBlitz3.ab3@14161>    BNE.w JL_0_9C96
0002B990 <AmiBlitz3.ab3@14162> BRA.w JL_0_9CC4
0002B994 <AmiBlitz3.ab3@14166>   CMP.w #$3E,D0
0002B998 <AmiBlitz3.ab3@14167>    BNE.w JL_0_9C9E
0002B99C <AmiBlitz3.ab3@14168>    BSR.w get1bytemain
0002B9A0 <AmiBlitz3.ab3@14169>   CMP.w #$3D,D0
0002B9A4 <AmiBlitz3.ab3@14170>    BNE.w JL_0_9C8E
0002B9AA <AmiBlitz3.ab3@14171>   LEA opge,A0
0002B9AE <AmiBlitz3.ab3@14172> BRA.w JL_0_9CCA
0002B9B2 <AmiBlitz3.ab3@14176>   CMP.w #$3C,D0
0002B9B6 <AmiBlitz3.ab3@14177>    BEQ.w JL_0_9CC4
0002B9C0 <AmiBlitz3.ab3@14181>     MOVE.w oldqflag,instringon
0002B9C6 <AmiBlitz3.ab3@14182>     MOVEA.l lastsourcepos,A5
0002B9CA <AmiBlitz3.ab3@14183> BRA.w JL_0_9CCA
0002B9CE <AmiBlitz3.ab3@14187>   CMP.w #$3D,D0
0002B9D2 <AmiBlitz3.ab3@14188>    BNE.w JL_0_9CCA
0002B9D6 <AmiBlitz3.ab3@14189>    BSR.w get1bytemain
0002B9DA <AmiBlitz3.ab3@14190>   CMP.w #$3E,D0
0002B9DE <AmiBlitz3.ab3@14191>    BNE.w JL_0_9CBC
0002B9E4 <AmiBlitz3.ab3@14192>   LEA opge,A0
0002B9E8 <AmiBlitz3.ab3@14193> BRA.w JL_0_9CCA
0002B9EC <AmiBlitz3.ab3@14197>   CMP.w #$3C,D0
0002B9F0 <AmiBlitz3.ab3@14198>   BNE.w JL_0_9C96
0002B9F6 <AmiBlitz3.ab3@14201>   LEA opne,A0
0002B9FA <AmiBlitz3.ab3@14204>   MOVE.w $1E(A0),D1
0002B9FC <AmiBlitz3.ab3@14205> RTS
0002B9FE <AmiBlitz3.ab3@14212>   MOVE.w d2,d1
0002BA00 <AmiBlitz3.ab3@14213>   SUBQ.w #1,D1
0002BA04 <AmiBlitz3.ab3@14214>    BMI.w illoperr
0002BA06 <AmiBlitz3.ab3@14215>   LSL.w #2,D1
0002BA0A <AmiBlitz3.ab3@14216>   MOVE.l $2(A0,D1.W),D1
0002BA0E <AmiBlitz3.ab3@14217>    BEQ.w illoperr
0002BA10 <AmiBlitz3.ab3@14218>   MOVEA.l D1,A0
0002BA12 <AmiBlitz3.ab3@14221> JMP (A0)
0002BA16 <AmiBlitz3.ab3@14237>   MOVEA.l precsp(PC),A1
0002BA1C <AmiBlitz3.ab3@14238>   CMPA.l #precstackf,A1
0002BA20 <AmiBlitz3.ab3@14239>    BCC.w pserr
0002BA22 <AmiBlitz3.ab3@14240>   MOVE.w -(A1),D1
0002BA24 <AmiBlitz3.ab3@14241>   MOVEA.l -(A1),A0
0002BA2A <AmiBlitz3.ab3@14242>   MOVE.l A1,precsp
0002BA2C <AmiBlitz3.ab3@14243> RTS
0002BA30 <AmiBlitz3.ab3@14246> precsp:      Dc.l precstack
0002BB2C <AmiBlitz3.ab3@14247> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002BBB0 <AmiBlitz3.ab3@14248>              Ds.l 33
0002BBB2 <AmiBlitz3.ab3@14254> mseq:  SEQ D0
0002BBB4 <AmiBlitz3.ab3@14255> msne:    SNE D0
0002BBB6 <AmiBlitz3.ab3@14256> mslt:    SLT D0
0002BBB8 <AmiBlitz3.ab3@14257> msle:    SLE D0
0002BBBA <AmiBlitz3.ab3@14258> msgt:    SGT D0
0002BBBC <AmiBlitz3.ab3@14259> msge:    SGE D0
0002BBBE <AmiBlitz3.ab3@14261> cmp0:    CMP.b D0,D0
0002BBC0 <AmiBlitz3.ab3@14262> cmp1:    CMP.w D0,D0
0002BBC2 <AmiBlitz3.ab3@14263> cmp2:    CMP.l D0,D0
0002BBC6 <AmiBlitz3.ab3@14267>   MOVE.w cmp0(PC),D1
0002BBCA <AmiBlitz3.ab3@14268> BRA.w doeqcmp2                                            ;writecompare
0002BBCE <AmiBlitz3.ab3@14272>   MOVE.w cmp0(PC),D1
0002BBD2 <AmiBlitz3.ab3@14273> BRA.w donecmp2
0002BBD6 <AmiBlitz3.ab3@14277>   MOVE.w cmp0(PC),D1
0002BBDA <AmiBlitz3.ab3@14278> BRA.w doltcmp2
0002BBDE <AmiBlitz3.ab3@14282>   MOVE.w cmp0(PC),D1
0002BBE2 <AmiBlitz3.ab3@14283> BRA.w dolecmp2
0002BBE6 <AmiBlitz3.ab3@14287>   MOVE.w cmp0(PC),D1
0002BBEA <AmiBlitz3.ab3@14288> BRA.w dogtcmp2
0002BBEE <AmiBlitz3.ab3@14293>   MOVE.w cmp0(PC),D1
0002BBF2 <AmiBlitz3.ab3@14294> BRA.w dogecmp2
0002BBF6 <AmiBlitz3.ab3@14298>   MOVE.w cmp1(PC),D1
0002BBFA <AmiBlitz3.ab3@14299> BRA.w doeqcmp2
0002BBFE <AmiBlitz3.ab3@14303>   MOVE.w cmp1(PC),D1
0002BC02 <AmiBlitz3.ab3@14304> BRA.w donecmp2
0002BC06 <AmiBlitz3.ab3@14308>   MOVE.w cmp1(PC),D1
0002BC0A <AmiBlitz3.ab3@14309> BRA.w doltcmp2
0002BC0E <AmiBlitz3.ab3@14313>   MOVE.w cmp1(PC),D1
0002BC12 <AmiBlitz3.ab3@14314> BRA.w dolecmp2
0002BC16 <AmiBlitz3.ab3@14318>   MOVE.w cmp1(PC),D1
0002BC1A <AmiBlitz3.ab3@14319> BRA.w dogtcmp2
0002BC1E <AmiBlitz3.ab3@14324>   MOVE.w cmp1(PC),D1
0002BC22 <AmiBlitz3.ab3@14325> BRA.w dogecmp2
0002BC26 <AmiBlitz3.ab3@14329>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002BC2A <AmiBlitz3.ab3@14330> BRA doeqcmp2
0002BC2E <AmiBlitz3.ab3@14333>   MOVE.w cmp2(PC),D1
0002BC32 <AmiBlitz3.ab3@14334> BRA donecmp2
0002BC36 <AmiBlitz3.ab3@14338>   MOVE.w cmp2(PC),D1
0002BC3A <AmiBlitz3.ab3@14339> BRA.w doltcmp2
0002BC3E <AmiBlitz3.ab3@14343>   MOVE.w cmp2(PC),D1
0002BC42 <AmiBlitz3.ab3@14344> BRA.w dolecmp2
0002BC46 <AmiBlitz3.ab3@14348>   MOVE.w cmp2(PC),D1
0002BC4A <AmiBlitz3.ab3@14349> BRA.w dogtcmp2
0002BC4E <AmiBlitz3.ab3@14353>   MOVE.w cmp2(PC),D1
0002BC52 <AmiBlitz3.ab3@14354> BRA.w dogecmp2
0002BC54 <AmiBlitz3.ab3@14357> cfregat:  Ds.w 1
0002BC5A <AmiBlitz3.ab3@14361>   MOVE.w D1,libjsr+2
0002BC5E <AmiBlitz3.ab3@14362>    BSR.w JL_0_AD40
0002BC60 <AmiBlitz3.ab3@14363>   MOVE.l D4,D1
0002BC64 <AmiBlitz3.ab3@14364>    BSR.w JL_0_AD38
0002BC68 <AmiBlitz3.ab3@14365>   MOVE.w #$C900,D1
0002BC6C <AmiBlitz3.ab3@14366>    BSR.w Atokejsr
0002BC70 <AmiBlitz3.ab3@14367>    BSR.w JL_0_A352
0002BC76 <AmiBlitz3.ab3@14368>   MOVE.l libjsr,D1
0002BC7A <AmiBlitz3.ab3@14369>    BSR.w writelong
0002BC84 <AmiBlitz3.ab3@14370>   MOVE.w regnum,cfregat
0002BC8A <AmiBlitz3.ab3@14371>   CLR.w regnum
0002BC8C <AmiBlitz3.ab3@14372> RTS
0002BC96 <AmiBlitz3.ab3@14376>   MOVE.w cfregat,regnum
0002BC9A <AmiBlitz3.ab3@14377>    BSR.w JL_0_A36E
0002BC9C <AmiBlitz3.ab3@14378>   MOVE.l D5,D1
0002BCA0 <AmiBlitz3.ab3@14379> BRA.w JL_0_AD38
0002BCA2 <AmiBlitz3.ab3@14383>    MOVEQ.l #-$2A,D1
0002BCA8 <AmiBlitz3.ab3@14384>    TST.b fpu
0002BCAC <AmiBlitz3.ab3@14385>    BEQ do_equal_float__nofpu
0002BCAE <AmiBlitz3.ab3@14386>    MOVEQ #0,d1
0002BCB4 <AmiBlitz3.ab3@14387>    MOVE.w regnum,d1
0002BCB6 <AmiBlitz3.ab3@14388>    MOVE.l d1,d2
0002BCB8 <AmiBlitz3.ab3@14389>    ASL.l #7,d1
0002BCBA <AmiBlitz3.ab3@14390>    ADDQ  #1,d2
0002BCBC <AmiBlitz3.ab3@14391>    ASL.l #8,d2
0002BCBE <AmiBlitz3.ab3@14392>    ASL.l #2,d2
0002BCC0 <AmiBlitz3.ab3@14393>    OR.l d2,d1
0002BCC6 <AmiBlitz3.ab3@14394>    OR.l #$f2000038,d1
0002BCCC <AmiBlitz3.ab3@14395>    JSR writelong
0002BCD0 <AmiBlitz3.ab3@14396>    MOVE.w #$f240,d1
0002BCD6 <AmiBlitz3.ab3@14397>    OR.w regnum,d1
0002BCDA <AmiBlitz3.ab3@14398>    BSR writeword
0002BCDC <AmiBlitz3.ab3@14399>    MOVEQ.l #1,d2
0002BCE0 <AmiBlitz3.ab3@14400>    MOVE.w #1,d1                                            ;fpu comp fseq
0002BCE4 <AmiBlitz3.ab3@14401>    BSR writeword
0002BCE6 <AmiBlitz3.ab3@14402> RTS
0002BCEA <AmiBlitz3.ab3@14405>    BSR.w docflib
0002BCEE <AmiBlitz3.ab3@14406>    BSR.w doeqcmp
0002BCF2 <AmiBlitz3.ab3@14407> BRA.w docflib2
0002BCF4 <AmiBlitz3.ab3@14411>   MOVEQ.l #-$2A,D1
0002BCFA <AmiBlitz3.ab3@14412>   TST.b fpu
0002BCFE <AmiBlitz3.ab3@14413>    BEQ do_not_equal_float__nofpu
0002BD00 <AmiBlitz3.ab3@14414>    MOVEQ #0,d1
0002BD06 <AmiBlitz3.ab3@14415>    MOVE.w regnum,d1
0002BD08 <AmiBlitz3.ab3@14416>    MOVE.l d1,d2
0002BD0A <AmiBlitz3.ab3@14417>    ASL.l #7,d1
0002BD0C <AmiBlitz3.ab3@14418>    ADDQ  #1,d2
0002BD0E <AmiBlitz3.ab3@14419>    ASL.l #8,d2
0002BD10 <AmiBlitz3.ab3@14420>    ASL.l #2,d2
0002BD12 <AmiBlitz3.ab3@14421>    OR.l d2,d1
0002BD18 <AmiBlitz3.ab3@14422>    OR.l #$f2000038,d1
0002BD1E <AmiBlitz3.ab3@14423>    JSR writelong
0002BD22 <AmiBlitz3.ab3@14424>    MOVE.w #$f240,d1
0002BD28 <AmiBlitz3.ab3@14425>    OR.w regnum,d1
0002BD2C <AmiBlitz3.ab3@14426>    BSR writeword
0002BD32 <AmiBlitz3.ab3@14427>    MOVE.l #1,d2
0002BD36 <AmiBlitz3.ab3@14428>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002BD3A <AmiBlitz3.ab3@14429>    BSR writeword
0002BD3C <AmiBlitz3.ab3@14430> RTS
0002BD40 <AmiBlitz3.ab3@14433>    BSR.w docflib
0002BD44 <AmiBlitz3.ab3@14434>    BSR.w donecmp
0002BD48 <AmiBlitz3.ab3@14435> BRA.w docflib2
0002BD4A <AmiBlitz3.ab3@14439>   MOVEQ.l #-$2A,D1
0002BD50 <AmiBlitz3.ab3@14440>     TST.b fpu
0002BD54 <AmiBlitz3.ab3@14441>    BEQ do_littler_float__nofpu
0002BD56 <AmiBlitz3.ab3@14442>    MOVEQ #0,d1
0002BD5C <AmiBlitz3.ab3@14443>    MOVE.w regnum,d1
0002BD5E <AmiBlitz3.ab3@14444>    MOVE.l d1,d2
0002BD60 <AmiBlitz3.ab3@14445>    ASL.l #7,d1
0002BD62 <AmiBlitz3.ab3@14446>    ADDQ  #1,d2
0002BD64 <AmiBlitz3.ab3@14447>    ASL.l #8,d2
0002BD66 <AmiBlitz3.ab3@14448>    ASL.l #2,d2
0002BD68 <AmiBlitz3.ab3@14449>    OR.l d2,d1
0002BD6E <AmiBlitz3.ab3@14450>    OR.l #$f2000038,d1
0002BD74 <AmiBlitz3.ab3@14451>    JSR writelong
0002BD78 <AmiBlitz3.ab3@14452>    MOVE.w #$f240,d1
0002BD7E <AmiBlitz3.ab3@14453>    OR.w regnum,d1
0002BD82 <AmiBlitz3.ab3@14454>    BSR writeword
0002BD88 <AmiBlitz3.ab3@14455>    MOVE.l #$1,d2
0002BD8C <AmiBlitz3.ab3@14456>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002BD90 <AmiBlitz3.ab3@14457>    BSR writeword
0002BD92 <AmiBlitz3.ab3@14458> RTS
0002BD96 <AmiBlitz3.ab3@14461>    BSR.w docflib
0002BD9A <AmiBlitz3.ab3@14462>    BSR.w doltcmp
0002BD9E <AmiBlitz3.ab3@14463> BRA.w docflib2
0002BDA0 <AmiBlitz3.ab3@14467>   MOVEQ.l #-$2A,D1
0002BDA6 <AmiBlitz3.ab3@14468>   TST.b fpu
0002BDAA <AmiBlitz3.ab3@14469>    BEQ do_littler_equal_float__nofpu
0002BDAC <AmiBlitz3.ab3@14470>    MOVEQ #0,d1
0002BDB2 <AmiBlitz3.ab3@14471>    MOVE.w regnum,d1
0002BDB4 <AmiBlitz3.ab3@14472>    MOVE.l d1,d2
0002BDB6 <AmiBlitz3.ab3@14473>    ASL.l #7,d1
0002BDB8 <AmiBlitz3.ab3@14474>    ADDQ  #1,d2
0002BDBA <AmiBlitz3.ab3@14475>    ASL.l #8,d2
0002BDBC <AmiBlitz3.ab3@14476>    ASL.l #2,d2
0002BDBE <AmiBlitz3.ab3@14477>    OR.l d2,d1
0002BDC4 <AmiBlitz3.ab3@14478>    OR.l #$f2000038,d1
0002BDCA <AmiBlitz3.ab3@14479>    JSR writelong
0002BDCE <AmiBlitz3.ab3@14480>    MOVE.w #$f240,d1
0002BDD4 <AmiBlitz3.ab3@14481>    OR.w regnum,d1
0002BDD8 <AmiBlitz3.ab3@14482>    BSR writeword
0002BDDE <AmiBlitz3.ab3@14483>    MOVE.l #1,d2
0002BDE2 <AmiBlitz3.ab3@14484>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002BDE6 <AmiBlitz3.ab3@14485>    BSR writeword
0002BDE8 <AmiBlitz3.ab3@14486> RTS
0002BDEC <AmiBlitz3.ab3@14489>    BSR.w docflib
0002BDF0 <AmiBlitz3.ab3@14490>    BSR.w dolecmp
0002BDF4 <AmiBlitz3.ab3@14491> BRA.w docflib2
0002BDF6 <AmiBlitz3.ab3@14495>   MOVEQ.l #-$2A,D1
0002BDFC <AmiBlitz3.ab3@14496>    TST.b fpu
0002BE00 <AmiBlitz3.ab3@14497>    BEQ do_greater_float__nofpu
0002BE02 <AmiBlitz3.ab3@14498>     MOVEQ #0,d1
0002BE08 <AmiBlitz3.ab3@14499>    MOVE.w regnum,d1
0002BE0A <AmiBlitz3.ab3@14500>    MOVE.l d1,d2
0002BE0C <AmiBlitz3.ab3@14501>    ASL.l #7,d1
0002BE0E <AmiBlitz3.ab3@14502>    ADDQ  #1,d2
0002BE10 <AmiBlitz3.ab3@14503>    ASL.l #8,d2
0002BE12 <AmiBlitz3.ab3@14504>    ASL.l #2,d2
0002BE14 <AmiBlitz3.ab3@14505>    OR.l d2,d1
0002BE1A <AmiBlitz3.ab3@14506>    OR.l #$f2000038,d1
0002BE20 <AmiBlitz3.ab3@14507>    JSR writelong
0002BE24 <AmiBlitz3.ab3@14508>    MOVE.w #$f240,d1
0002BE2A <AmiBlitz3.ab3@14509>    OR.w regnum,d1
0002BE2E <AmiBlitz3.ab3@14510>    BSR writeword
0002BE34 <AmiBlitz3.ab3@14511>    MOVE.l #1,d2
0002BE38 <AmiBlitz3.ab3@14512>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002BE3C <AmiBlitz3.ab3@14513>    BSR writeword
0002BE3E <AmiBlitz3.ab3@14514> RTS
0002BE42 <AmiBlitz3.ab3@14517>    BSR.w docflib
0002BE46 <AmiBlitz3.ab3@14518>    BSR.w dogtcmp
0002BE4A <AmiBlitz3.ab3@14519> BRA.w docflib2
0002BE4C <AmiBlitz3.ab3@14523>   MOVEQ.l #-$2A,D1
0002BE52 <AmiBlitz3.ab3@14524>  TST.b fpu
0002BE56 <AmiBlitz3.ab3@14525>    BEQ do_greater_equal_float__nofpu
0002BE58 <AmiBlitz3.ab3@14526>    MOVEQ #0,d1
0002BE5E <AmiBlitz3.ab3@14527>    MOVE.w regnum,d1
0002BE60 <AmiBlitz3.ab3@14528>    MOVE.l d1,d2
0002BE62 <AmiBlitz3.ab3@14529>    ASL.l #7,d1
0002BE64 <AmiBlitz3.ab3@14530>    ADDQ  #1,d2
0002BE66 <AmiBlitz3.ab3@14531>    ASL.l #8,d2
0002BE68 <AmiBlitz3.ab3@14532>    ASL.l #2,d2
0002BE6A <AmiBlitz3.ab3@14533>    OR.l d2,d1
0002BE70 <AmiBlitz3.ab3@14534>    OR.l #$f2000038,d1
0002BE76 <AmiBlitz3.ab3@14535>    JSR writelong
0002BE7A <AmiBlitz3.ab3@14536>    MOVE.w #$f240,d1
0002BE80 <AmiBlitz3.ab3@14537>    OR.w regnum,d1
0002BE84 <AmiBlitz3.ab3@14538>    BSR writeword
0002BE8A <AmiBlitz3.ab3@14539>    MOVE.l #1,d2
0002BE8E <AmiBlitz3.ab3@14540>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002BE92 <AmiBlitz3.ab3@14541>    BSR writeword
0002BE94 <AmiBlitz3.ab3@14542> RTS
0002BE98 <AmiBlitz3.ab3@14545>    BSR.w docflib
0002BE9C <AmiBlitz3.ab3@14546>    BSR.w dogecmp
0002BEA0 <AmiBlitz3.ab3@14547> BRA.w docflib2
0002BEA6 <AmiBlitz3.ab3@14552>   MOVE.l #$CE00,D1
0002BEAC <AmiBlitz3.ab3@14553>    MOVE.l d1,lastinstruction
0002BEB0 <AmiBlitz3.ab3@14554>    BSR.w Atokejsr
0002BEB4 <AmiBlitz3.ab3@14555> BRA.w doeqcmp
0002BEBA <AmiBlitz3.ab3@14559>   MOVE.l #$CE00,D1
0002BEC0 <AmiBlitz3.ab3@14560>    MOVE.l d1,lastinstruction
0002BEC4 <AmiBlitz3.ab3@14561>    BSR.w Atokejsr
0002BEC8 <AmiBlitz3.ab3@14562> BRA.w donecmp
0002BECE <AmiBlitz3.ab3@14566>   MOVE.l #$CE00,D1
0002BED4 <AmiBlitz3.ab3@14567>    MOVE.l d1,lastinstruction
0002BED8 <AmiBlitz3.ab3@14568>    BSR.w Atokejsr
0002BEDC <AmiBlitz3.ab3@14569> BRA.w doltcmp
0002BEE2 <AmiBlitz3.ab3@14573>   MOVE.l #$CE00,D1
0002BEE8 <AmiBlitz3.ab3@14574>    MOVE.l d1,lastinstruction
0002BEEC <AmiBlitz3.ab3@14575>    BSR.w Atokejsr
0002BEF0 <AmiBlitz3.ab3@14576> BRA.w dolecmp
0002BEF6 <AmiBlitz3.ab3@14580>   MOVE.l #$CE00,D1
0002BEFC <AmiBlitz3.ab3@14581>    MOVE.l d1,lastinstruction
0002BF00 <AmiBlitz3.ab3@14582>    BSR.w Atokejsr
0002BF04 <AmiBlitz3.ab3@14583> BRA.w dogtcmp
0002BF0A <AmiBlitz3.ab3@14587>   MOVE.l #$CE00,D1
0002BF10 <AmiBlitz3.ab3@14588>    MOVE.l d1,lastinstruction
0002BF14 <AmiBlitz3.ab3@14589>    BSR.w Atokejsr
0002BF18 <AmiBlitz3.ab3@14590> BRA.w dogecmp
0002BF1E <AmiBlitz3.ab3@14595>   TST.b fast                                               ;compare
0002BF22 <AmiBlitz3.ab3@14596>   BEQ cmpit__org
0002BF28 <AmiBlitz3.ab3@14600>   MOVE.l destpointer,a0
0002BF2E <AmiBlitz3.ab3@14601>   SUB.l imm_addr,a0
0002BF34 <AmiBlitz3.ab3@14602>   CMP.l #6,a0
0002BF38 <AmiBlitz3.ab3@14603>   BNE cmpit__l11
0002BF3E <AmiBlitz3.ab3@14604>   MOVE.l imm_addr,a0
0002BF46 <AmiBlitz3.ab3@14605>   CMP.w #$223c,imm_addr
0002BF4A <AmiBlitz3.ab3@14606>   BNE cmpit__org
0002BF50 <AmiBlitz3.ab3@14607>   ADD.w #$8e80,-6(a4)
0002BF56 <AmiBlitz3.ab3@14610>   CLR.l imm_addr
0002BF58 <AmiBlitz3.ab3@14611> RTS
0002BF5E <AmiBlitz3.ab3@14614>   CMP.l #4,a0
0002BF62 <AmiBlitz3.ab3@14615>   BNE cmpit__l10
0002BF66 <AmiBlitz3.ab3@14616>   CMP.b #2,d3
0002BF6A <AmiBlitz3.ab3@14617>   BNE cmpit__l11b
0002BF70 <AmiBlitz3.ab3@14618>   ADD.w #$7e40,-4(a4)
0002BF72 <AmiBlitz3.ab3@14619> RTS
0002BF78 <AmiBlitz3.ab3@14622>  ADD.w #$7e00,-4(a4)
0002BF7A <AmiBlitz3.ab3@14623> RTS
0002BF80 <AmiBlitz3.ab3@14626>    MOVE.l destpointer,a0
0002BF86 <AmiBlitz3.ab3@14627>    SUB.l load_var_addr,a0
0002BF8A <AmiBlitz3.ab3@14628>    CMP.w #4,a0
0002BF8E <AmiBlitz3.ab3@14629>    BNE cmpit__org
0002BF92 <AmiBlitz3.ab3@14630>    CMP.b #3,d3
0002BF96 <AmiBlitz3.ab3@14631>    BCS cmpit__lv1
0002BF9C <AmiBlitz3.ab3@14632>    CLR.l load_var_addr
0002BFA2 <AmiBlitz3.ab3@14633>    ADD.w #$9080-$200,-4(a4)
0002BFA4 <AmiBlitz3.ab3@14634> RTS
0002BFA8 <AmiBlitz3.ab3@14637>   CMP.b #2,d3
0002BFAC <AmiBlitz3.ab3@14638>    BNE cmpit__org
0002BFB2 <AmiBlitz3.ab3@14639>    CLR.l load_var_addr
0002BFB8 <AmiBlitz3.ab3@14640>    ADD.w #$8040-$200,-4(a4)
0002BFBA <AmiBlitz3.ab3@14641> RTS
0002BFC0 <AmiBlitz3.ab3@14644>   MOVE.w regnum,D3
0002BFC2 <AmiBlitz3.ab3@14645>   OR.w D3,D1
0002BFC4 <AmiBlitz3.ab3@14646>   LSL.w #8,D3
0002BFC6 <AmiBlitz3.ab3@14647>   LSL.w #1,D3
0002BFC8 <AmiBlitz3.ab3@14648>   OR.w D3,D1
0002BFCA <AmiBlitz3.ab3@14649>   ADDQ.w #1,D1
0002BFCE <AmiBlitz3.ab3@14650> BRA.w writeword
0002BFD2 <AmiBlitz3.ab3@14654>    BSR.w cmpit
0002BFD6 <AmiBlitz3.ab3@14657>    MOVE.w mseq(PC),D1
0002BFDA <AmiBlitz3.ab3@14658> BRA.w cpoke
0002BFDE <AmiBlitz3.ab3@14662>   BSR.w cmpit
0002BFE2 <AmiBlitz3.ab3@14665>   MOVE.w msne(PC),D1
0002BFE6 <AmiBlitz3.ab3@14666> BRA.w cpoke
0002BFEA <AmiBlitz3.ab3@14670>   BSR.w cmpit
0002BFEE <AmiBlitz3.ab3@14673>    MOVE.w mslt(PC),D1
0002BFF2 <AmiBlitz3.ab3@14674> BRA.w cpoke
0002BFF6 <AmiBlitz3.ab3@14678>    BSR.w cmpit
0002BFFA <AmiBlitz3.ab3@14681>    MOVE.w msle(PC),D1
0002BFFE <AmiBlitz3.ab3@14682> BRA.w cpoke
0002C002 <AmiBlitz3.ab3@14686>    BSR.w cmpit
0002C006 <AmiBlitz3.ab3@14689>    MOVE.w msgt(PC),D1
0002C00A <AmiBlitz3.ab3@14690> BRA.w cpoke
0002C00E <AmiBlitz3.ab3@14694>   BSR.w cmpit
0002C012 <AmiBlitz3.ab3@14697>    MOVE.w msge(PC),D1
0002C018 <AmiBlitz3.ab3@14700>    OR.w regnum,D1
0002C01C <AmiBlitz3.ab3@14701>    CMP.w #5,d2
0002C020 <AmiBlitz3.ab3@14702>    BNE cpoke__nod0
0002C024 <AmiBlitz3.ab3@14703>    CMP.w #5,d3
0002C028 <AmiBlitz3.ab3@14704>    BNE cpoke__nod0
0002C02A <AmiBlitz3.ab3@14705>    MOVE.l d1,-(a7)
0002C030 <AmiBlitz3.ab3@14706>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002C034 <AmiBlitz3.ab3@14707>    BSR writelong
0002C036 <AmiBlitz3.ab3@14708>    MOVE.l (a7)+,d1
0002C03A <AmiBlitz3.ab3@14711>    BSR.w writeword                                         ;writeseq
0002C03C <AmiBlitz3.ab3@14712>    MOVEQ.l #1,d2
0002C042 <AmiBlitz3.ab3@14713>    MOVE.l lasttoken,d1
0002C048 <AmiBlitz3.ab3@14714>     TST.b fast
0002C04C <AmiBlitz3.ab3@14715>     BEQ.s cpoke__l11
0002C052 <AmiBlitz3.ab3@14716>    CMP.l #$800b,d1
0002C056 <AmiBlitz3.ab3@14717>    BEQ cpoke__l10
0002C05A <AmiBlitz3.ab3@14720>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002C060 <AmiBlitz3.ab3@14721>   OR.w regnum,D1
0002C064 <AmiBlitz3.ab3@14722>    BSR.w writeword                                         ;writeext.w
0002C066 <AmiBlitz3.ab3@14723>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002C068 <AmiBlitz3.ab3@14726> RTS
0002C06C <AmiBlitz3.ab3@14731>   MOVE.w #$D040,D1
0002C06E <AmiBlitz3.ab3@14732>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002C072 <AmiBlitz3.ab3@14733> BRA.w doplus2
0002C076 <AmiBlitz3.ab3@14737>   MOVE.w #$D040,D1
0002C078 <AmiBlitz3.ab3@14738>   MOVEQ.l #$03,D2                                          ;now a long
0002C07C <AmiBlitz3.ab3@14739>    BSR.w doplus2
0002C080 <AmiBlitz3.ab3@14740> BRA.w convert_word_to_long
0002C084 <AmiBlitz3.ab3@14744>   MOVE.w #$D080,D1                                         ;writeaddlong
0002C086 <AmiBlitz3.ab3@14747>   MOVE.w d1,a1
0002C08C <AmiBlitz3.ab3@14748>   TST.b fast
0002C090 <AmiBlitz3.ab3@14749>   BEQ doplus2__l10
0002C092 <AmiBlitz3.ab3@14753>   ASR.w #8,d1
0002C096 <AmiBlitz3.ab3@14754>   CMP.b #$90,d1
0002C09A <AmiBlitz3.ab3@14755>   BEQ doplus2__sub1
0002C09E <AmiBlitz3.ab3@14756>   CMP.b #$d0,d1
0002C0A2 <AmiBlitz3.ab3@14757>   BNE doplus2__l10
0002C0A6 <AmiBlitz3.ab3@14758>   CMP.b #3,d3
0002C0AA <AmiBlitz3.ab3@14759>   BCS doplus2__lq10
0002C0B0 <AmiBlitz3.ab3@14760>   TST.b quickadd
0002C0B6 <AmiBlitz3.ab3@14764>    MOVE.l destpointer,a0
0002C0BC <AmiBlitz3.ab3@14765>    CLR.b quickadd
0002C0C2 <AmiBlitz3.ab3@14766>    CLR.l load_var_addr
0002C0C8 <AmiBlitz3.ab3@14767>    SUB.l imm_addr,a0
0002C0CC <AmiBlitz3.ab3@14768>    CMP.w #6,a0
0002C0D0 <AmiBlitz3.ab3@14769>    BEQ doplus2__li10
0002C0D4 <AmiBlitz3.ab3@14770>    CMP.w #4,a0
0002C0D8 <AmiBlitz3.ab3@14771>    BNE.s doplus2__li1
0002C0DE <AmiBlitz3.ab3@14772>    CLR.l imm_addr
0002C0E4 <AmiBlitz3.ab3@14773>    ADD.w #$a040-$200,-4(a4)
0002C0E6 <AmiBlitz3.ab3@14774> RTS
0002C0E8 <AmiBlitz3.ab3@14777>    MOVE.l a4,a0
0002C0EE <AmiBlitz3.ab3@14778>    SUB.l load_var_addr,a0
0002C0F4 <AmiBlitz3.ab3@14779>    CMP.l #$a,a0
0002C0F8 <AmiBlitz3.ab3@14780>    BNE doplus2__l10e
0002C0FE <AmiBlitz3.ab3@14781>    CLR.l load_var_addr
0002C102 <AmiBlitz3.ab3@14782>    MOVE.w -$8(a4),d1
0002C108 <AmiBlitz3.ab3@14783>    MOVE.l -$4(a4),-$8(a4)
0002C10C <AmiBlitz3.ab3@14784>    MOVE.w d1,-$4(a4)
0002C112 <AmiBlitz3.ab3@14785>    SUB.w #$1980,-$a(a4)
0002C118 <AmiBlitz3.ab3@14786>    SUBQ.l #2,destpointer
0002C11A <AmiBlitz3.ab3@14787> RTS
0002C120 <AmiBlitz3.ab3@14790>   CLR.b quickadd
0002C124 <AmiBlitz3.ab3@14791> BRA doplus2__l10
0002C12A <AmiBlitz3.ab3@14794>    CLR.l imm_addr
0002C12E <AmiBlitz3.ab3@14795>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002C132 <AmiBlitz3.ab3@14796>    BNE doplus2__doit
0002C138 <AmiBlitz3.ab3@14797>    SUBQ.l #6,destpointer
0002C13A <AmiBlitz3.ab3@14798> RTS
0002C140 <AmiBlitz3.ab3@14801>    ADD.w #$b080-$200,-6(a4)
0002C142 <AmiBlitz3.ab3@14802> RTS
0002C148 <AmiBlitz3.ab3@14805>    MOVE.l destpointer,a0
0002C14E <AmiBlitz3.ab3@14806>    SUB.l load_var_addr,a0
0002C152 <AmiBlitz3.ab3@14807>    CMP.w #4,a0
0002C156 <AmiBlitz3.ab3@14808>    BNE doplus2__l10
0002C15A <AmiBlitz3.ab3@14809>    CMP.b #3,d3
0002C15E <AmiBlitz3.ab3@14810>    BNE doplus2__lv1
0002C164 <AmiBlitz3.ab3@14811>    CLR.l load_var_addr
0002C16A <AmiBlitz3.ab3@14812>    ADD.w #$b080-$200,-4(a4)
0002C16C <AmiBlitz3.ab3@14813> RTS
0002C170 <AmiBlitz3.ab3@14816>   CMP.b #2,d3
0002C174 <AmiBlitz3.ab3@14817>   BNE doplus2__l10
0002C17A <AmiBlitz3.ab3@14818>   CLR.l load_var_addr
0002C180 <AmiBlitz3.ab3@14819>   ADD.w #$a040-$200,-4(a4)
0002C182 <AmiBlitz3.ab3@14820> RTS
0002C188 <AmiBlitz3.ab3@14823>   MOVE.w regnum,D3
0002C18A <AmiBlitz3.ab3@14824>   MOVE.w a1,d1
0002C18C <AmiBlitz3.ab3@14825>   OR.w D3,D1
0002C18E <AmiBlitz3.ab3@14826>   ADDQ.w #1,D1
0002C190 <AmiBlitz3.ab3@14827>   LSL.w #8,D3
0002C192 <AmiBlitz3.ab3@14828>   LSL.w #1,D3
0002C194 <AmiBlitz3.ab3@14829>   OR.w D3,D1
0002C198 <AmiBlitz3.ab3@14830> BRA.w writeword
0002C19C <AmiBlitz3.ab3@14833>    CMP.b #3,d3
0002C1A0 <AmiBlitz3.ab3@14834>    BCS doplus2__sub1_lq10
0002C1A6 <AmiBlitz3.ab3@14835>    TST.b quickadd
0002C1AC <AmiBlitz3.ab3@14839>    MOVE.l destpointer,a0
0002C1B2 <AmiBlitz3.ab3@14840>    CLR.b quickadd
0002C1B8 <AmiBlitz3.ab3@14841>    CLR.l load_var_addr
0002C1BE <AmiBlitz3.ab3@14842>    SUB.l imm_addr,a0
0002C1C2 <AmiBlitz3.ab3@14843>    CMP.w #6,a0
0002C1C6 <AmiBlitz3.ab3@14844>    BEQ doplus2__sub1_li10
0002C1CA <AmiBlitz3.ab3@14845>    CMP.w #4,a0
0002C1CE <AmiBlitz3.ab3@14846>    BNE.s doplus2__sub1_li1
0002C1D4 <AmiBlitz3.ab3@14847>    CLR.l imm_addr
0002C1DA <AmiBlitz3.ab3@14848>    ADD.w #$6040-$200,-4(a4)
0002C1DC <AmiBlitz3.ab3@14849> RTS
0002C1DE <AmiBlitz3.ab3@14852>    MOVE.l a4,a0
0002C1E4 <AmiBlitz3.ab3@14853>     SUB.l load_var_addr,a0
0002C1EA <AmiBlitz3.ab3@14854>     CMP.l #$a,a0
0002C1EE <AmiBlitz3.ab3@14855>     BNE doplus2__sub1_l10e
0002C1F4 <AmiBlitz3.ab3@14856>    CLR.l load_var_addr
0002C1F8 <AmiBlitz3.ab3@14857>    MOVE.w -$8(a4),d1
0002C1FE <AmiBlitz3.ab3@14858>    MOVE.l -$4(a4),-$8(a4)
0002C202 <AmiBlitz3.ab3@14859>    MOVE.w d1,-$4(a4)
0002C208 <AmiBlitz3.ab3@14860>    SUB.w #$1b80,-$a(a4)
0002C20E <AmiBlitz3.ab3@14861>    SUBQ.l #2,destpointer
0002C210 <AmiBlitz3.ab3@14862> RTS
0002C216 <AmiBlitz3.ab3@14865>   CLR.b quickadd
0002C21A <AmiBlitz3.ab3@14866> BRA doplus2__sub1_l10
0002C220 <AmiBlitz3.ab3@14869>    CLR.l imm_addr
0002C226 <AmiBlitz3.ab3@14870>    ADD.w #$7080-$200,-6(a4)
0002C228 <AmiBlitz3.ab3@14871> RTS
0002C22E <AmiBlitz3.ab3@14874>    MOVE.l destpointer,a0
0002C234 <AmiBlitz3.ab3@14875>    SUB.l load_var_addr,a0
0002C238 <AmiBlitz3.ab3@14876>    CMP.w #4,a0
0002C23C <AmiBlitz3.ab3@14877>    BNE doplus2__sub1_l10
0002C240 <AmiBlitz3.ab3@14878>    CMP.b #3,d3
0002C244 <AmiBlitz3.ab3@14879>    BNE doplus2__sub1_lv1
0002C24A <AmiBlitz3.ab3@14880>    CLR.l load_var_addr
0002C250 <AmiBlitz3.ab3@14881>    ADD.w #$7080-$200,-4(a4)
0002C252 <AmiBlitz3.ab3@14882> RTS
0002C256 <AmiBlitz3.ab3@14885>    CMP.b #2,d3
0002C25A <AmiBlitz3.ab3@14886>    BNE doplus2__sub1_l10
0002C260 <AmiBlitz3.ab3@14887>    CLR.l load_var_addr
0002C266 <AmiBlitz3.ab3@14888>    ADD.w #$6040-$200,-4(a4)
0002C268 <AmiBlitz3.ab3@14889> RTS
0002C26E <AmiBlitz3.ab3@14892>   MOVE.w regnum,D3
0002C270 <AmiBlitz3.ab3@14893>   MOVE.w a1,d1
0002C272 <AmiBlitz3.ab3@14894>   OR.w D3,D1
0002C274 <AmiBlitz3.ab3@14895>   ADDQ.w #1,D1
0002C276 <AmiBlitz3.ab3@14896>   LSL.w #8,D3
0002C278 <AmiBlitz3.ab3@14897>   LSL.w #1,D3
0002C27A <AmiBlitz3.ab3@14898>   OR.w D3,D1
0002C27E <AmiBlitz3.ab3@14899> BRA.w writeword
0002C280 <AmiBlitz3.ab3@14903>   MOVEQ #0,d0
0002C286 <AmiBlitz3.ab3@14904>   MOVE.w regnum,d0
0002C288 <AmiBlitz3.ab3@14905>   ADDQ #1,d0
0002C28A <AmiBlitz3.ab3@14906>   ASL.w #8,d0
0002C28C <AmiBlitz3.ab3@14907>   ASL.w #2,d0
0002C292 <AmiBlitz3.ab3@14908>   MOVE.l #$f2000022,d1                                     ;fpu add
0002C294 <AmiBlitz3.ab3@14909>   OR.l d0,d1
0002C29A <AmiBlitz3.ab3@14910>   MOVE.w regnum,d0
0002C29C <AmiBlitz3.ab3@14911>   ASL.w #7,d0
0002C29E <AmiBlitz3.ab3@14912>   OR.l d0,d1
0002C2A2 <AmiBlitz3.ab3@14913> BRA.w writelong
0002C2A8 <AmiBlitz3.ab3@14919>   TST.b iee
0002C2AC <AmiBlitz3.ab3@14920>   BNE do_plus_float__fadd1
0002C2B0 <AmiBlitz3.ab3@14921>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002C2B6 <AmiBlitz3.ab3@14924>    MOVE.w D1,libjsr+2
0002C2BA <AmiBlitz3.ab3@14925>    BSR.w JL_0_AD40
0002C2BC <AmiBlitz3.ab3@14926>   MOVE.l D4,D1
0002C2C0 <AmiBlitz3.ab3@14927>    BSR.w JL_0_AD38
0002C2C4 <AmiBlitz3.ab3@14928>   MOVE.w #$C900,D1
0002C2C8 <AmiBlitz3.ab3@14929>    BSR.w Atokejsr
0002C2CC <AmiBlitz3.ab3@14930>    BSR.w JL_0_A352
0002C2D2 <AmiBlitz3.ab3@14931>   MOVE.l libjsr,D1
0002C2D6 <AmiBlitz3.ab3@14932>    BSR.w writelong
0002C2DA <AmiBlitz3.ab3@14933>    BSR.w JL_0_A36E
0002C2DC <AmiBlitz3.ab3@14934>   MOVE.l D5,D1
0002C2E0 <AmiBlitz3.ab3@14935> BRA.w JL_0_AD38
0002C2E6 <AmiBlitz3.ab3@14939>   MOVE.w regnum,D1
0002C2E8 <AmiBlitz3.ab3@14940>   LSL.w #8,D1
0002C2EA <AmiBlitz3.ab3@14941>   LSL.w #1,D1
0002C2EC <AmiBlitz3.ab3@14942>   MOVE.w D1,-(A7)
0002C2F0 <AmiBlitz3.ab3@14943>   CMP.w #3072,d1
0002C2F4 <AmiBlitz3.ab3@14944>   BEQ 'l1
0002C2FA <AmiBlitz3.ab3@14945>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002C2FE <AmiBlitz3.ab3@14946> BRA 'l2
0002C302 <AmiBlitz3.ab3@14949>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002C306 <AmiBlitz3.ab3@14952>    BSR.w writeword
0002C308 <AmiBlitz3.ab3@14953>   MOVE.w (A7)+,D1
0002C30E <AmiBlitz3.ab3@14954>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002C312 <AmiBlitz3.ab3@14955> BRA.w writeword
0002C316 <AmiBlitz3.ab3@14961>   MOVE.w #$9040,D1
0002C31A <AmiBlitz3.ab3@14962> BRA.w doplus2
0002C31E <AmiBlitz3.ab3@14966>   MOVE.w #$9040,D1
0002C322 <AmiBlitz3.ab3@14967> BRA.w doplus2
0002C326 <AmiBlitz3.ab3@14971>   MOVE.w #$9080,D1
0002C32A <AmiBlitz3.ab3@14972> BRA.w doplus2
0002C330 <AmiBlitz3.ab3@14976>    TST.b iee
0002C334 <AmiBlitz3.ab3@14977>     BNE do_minus_float__fs1
0002C338 <AmiBlitz3.ab3@14978>   MOVE.w #$FFB8,D1                                         ;floatsub
0002C33C <AmiBlitz3.ab3@14979> BRA.w doflib
0002C33E <AmiBlitz3.ab3@14982>   MOVEQ #0,d0
0002C344 <AmiBlitz3.ab3@14983>   MOVE.w regnum,d0
0002C346 <AmiBlitz3.ab3@14984>   ADDQ #1,d0
0002C348 <AmiBlitz3.ab3@14985>   ASL.w #8,d0
0002C34A <AmiBlitz3.ab3@14986>   ASL.w #2,d0
0002C350 <AmiBlitz3.ab3@14987>   MOVE.l #$f2000028,d1
0002C352 <AmiBlitz3.ab3@14988>   OR.l d0,d1
0002C358 <AmiBlitz3.ab3@14989>   MOVE.w regnum,d0
0002C35A <AmiBlitz3.ab3@14990>   ASL.w #7,d0
0002C35C <AmiBlitz3.ab3@14991>   OR.l d0,d1
0002C360 <AmiBlitz3.ab3@14992> BRA.w writelong
0002C364 <AmiBlitz3.ab3@14998>   MOVE.w #$C1C0,D1
0002C366 <AmiBlitz3.ab3@14999>   MOVEQ.l #$02,D2                                          ;now a word
0002C36A <AmiBlitz3.ab3@15000> BRA.w doplus2
0002C36E <AmiBlitz3.ab3@15004>   MOVE.w #$C1C0,D1
0002C370 <AmiBlitz3.ab3@15005>   MOVEQ.l #$03,D2                                          ;now a long.
0002C374 <AmiBlitz3.ab3@15006> BRA.w doplus2
0002C378 <AmiBlitz3.ab3@15010>   MOVE.w #$CA00,D1                                         ;quickmul
0002C37C <AmiBlitz3.ab3@15011> BRA.w domylib
0002C382 <AmiBlitz3.ab3@15015>   TST.b fast
0002C386 <AmiBlitz3.ab3@15016>   BNE.s 'l10
0002C38A <AmiBlitz3.ab3@15017>   MOVE.w #$CA01,D1                                         ;writelongmul
0002C38E <AmiBlitz3.ab3@15018> BRA.w domylib
0002C394 <AmiBlitz3.ab3@15027>    MOVE.l destpointer,a0
0002C39A <AmiBlitz3.ab3@15028>    SUB.l imm_addr,a0
0002C39E <AmiBlitz3.ab3@15029>    CMP.w #6,a0
0002C3A2 <AmiBlitz3.ab3@15030>    BNE 'li1
0002C3A4 <AmiBlitz3.ab3@15031>    MOVEQ.l #2,d1
0002C3A6 <AmiBlitz3.ab3@15032>    MOVEQ #1,d3
0002C3AA <AmiBlitz3.ab3@15035>   CMP.l -4(a4),d1
0002C3AE <AmiBlitz3.ab3@15036>    BEQ 'oklsl
0002C3B0 <AmiBlitz3.ab3@15037>     LSL.l #1,d1
0002C3B6 <AmiBlitz3.ab3@15038>     ADD.l #1,d3
0002C3BC <AmiBlitz3.ab3@15039>     CMP.l #9,d3
0002C3C0 <AmiBlitz3.ab3@15040>     BNE 'ag
0002C3C4 <AmiBlitz3.ab3@15041>    MOVE.w -2(a4),d1
0002C3C8 <AmiBlitz3.ab3@15042>    BSR writeword
0002C3CE <AmiBlitz3.ab3@15043>    MOVE.w -6(a4),-4(a4)
0002C3D6 <AmiBlitz3.ab3@15044>    MOVE.l #$4c3c0800,-8(a4)
0002C3DC <AmiBlitz3.ab3@15045>    MOVE.w regnum,D3
0002C3E0 <AmiBlitz3.ab3@15046>    MULS #$1000,D3
0002C3E4 <AmiBlitz3.ab3@15047>    OR.w D3,-6(a4)
0002C3EA <AmiBlitz3.ab3@15048>    CLR.l load_var_addr
0002C3F0 <AmiBlitz3.ab3@15049>    CLR.l imm_addr
0002C3F4 <AmiBlitz3.ab3@15050> BRA 'li3
0002C3F8 <AmiBlitz3.ab3@15053>    CMP.w #8,d3
0002C3FC <AmiBlitz3.ab3@15054>    BEQ 'ok
0002C3FE <AmiBlitz3.ab3@15055>    ASL.l #1,d3
0002C400 <AmiBlitz3.ab3@15056>    ASL.l #8,d3
0002C404 <AmiBlitz3.ab3@15057>    MOVE.w #$e188,d1
0002C406 <AmiBlitz3.ab3@15058>    OR.w d3,d1
0002C40A <AmiBlitz3.ab3@15059>    MOVE.w d1,-6(a4)
0002C40E <AmiBlitz3.ab3@15060> BRA 'okls
0002C414 <AmiBlitz3.ab3@15063>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002C41A <AmiBlitz3.ab3@15066>   MOVE.w regnum,d3
0002C41E <AmiBlitz3.ab3@15067>    OR.b d3,-5(a4)
0002C424 <AmiBlitz3.ab3@15068>    SUBQ.l #4,destpointer
0002C42A <AmiBlitz3.ab3@15069>    CLR.l load_var_addr
0002C430 <AmiBlitz3.ab3@15070>    CLR.l imm_addr
0002C434 <AmiBlitz3.ab3@15071> BRA 'li3
0002C43A <AmiBlitz3.ab3@15074>    MOVE.l destpointer,a0
0002C440 <AmiBlitz3.ab3@15075>    SUB.l load_var_addr,a0
0002C444 <AmiBlitz3.ab3@15076>    CMP.w #4,a0
0002C448 <AmiBlitz3.ab3@15077>    BNE 'li2
0002C44C <AmiBlitz3.ab3@15078>    MOVE.w -2(a4),d1
0002C450 <AmiBlitz3.ab3@15079>    BSR writeword
0002C456 <AmiBlitz3.ab3@15080>    MOVE.b #$4c,-6(a4)
0002C45C <AmiBlitz3.ab3@15081>    MOVE.w #$0800,-4(a4)
0002C462 <AmiBlitz3.ab3@15082>    MOVE.w regnum,D3
0002C466 <AmiBlitz3.ab3@15083>    MULS #$1000,d3
0002C46A <AmiBlitz3.ab3@15084>    OR.w D3,-4(a4)
0002C46E <AmiBlitz3.ab3@15085> BRA 'li3
0002C474 <AmiBlitz3.ab3@15088>    MOVE.l #$4c010800,d1
0002C47A <AmiBlitz3.ab3@15089>    MOVE.w regnum,D3
0002C47C <AmiBlitz3.ab3@15090>    EXT.l d3
0002C480 <AmiBlitz3.ab3@15091>    MULS #$1000,d3
0002C482 <AmiBlitz3.ab3@15092>    OR.w D3,d1
0002C486 <AmiBlitz3.ab3@15093>    MULS #$10,d3
0002C488 <AmiBlitz3.ab3@15094>    ADD.l d3,d1
0002C48C <AmiBlitz3.ab3@15095>    BSR writelong
0002C48E <AmiBlitz3.ab3@15100> RTS
0002C490 <AmiBlitz3.ab3@15104>   MOVE.w D1,-(A7)
0002C494 <AmiBlitz3.ab3@15105>    BSR.w JL_0_AD40
0002C496 <AmiBlitz3.ab3@15106>   MOVE.l D4,D1
0002C49A <AmiBlitz3.ab3@15107>    BSR.w JL_0_AD38
0002C49E <AmiBlitz3.ab3@15108>    BSR.w JL_0_A352
0002C4A0 <AmiBlitz3.ab3@15109>   MOVEQ #0,d1
0002C4A2 <AmiBlitz3.ab3@15110>   MOVE.w (A7)+,D1
0002C4A8 <AmiBlitz3.ab3@15111>   MOVE.l d1,lastinstruction
0002C4AC <AmiBlitz3.ab3@15112>    BSR.w Atokejsr
0002C4B0 <AmiBlitz3.ab3@15113>    BSR.w JL_0_A36E
0002C4B2 <AmiBlitz3.ab3@15114>   MOVE.l D5,D1
0002C4B6 <AmiBlitz3.ab3@15115> BRA.w JL_0_AD38
0002C4BC <AmiBlitz3.ab3@15119>    TST.b iee
0002C4C0 <AmiBlitz3.ab3@15120>     BNE fm1
0002C4C4 <AmiBlitz3.ab3@15121>  MOVE.w #$FFB2,D1                                          ;floatmul
0002C4C8 <AmiBlitz3.ab3@15122> BRA.w doflib
0002C4CA <AmiBlitz3.ab3@15125>   MOVEQ #0,d0
0002C4D0 <AmiBlitz3.ab3@15126>  MOVE.w regnum,d0
0002C4D2 <AmiBlitz3.ab3@15127>  ADDQ #1,d0
0002C4D4 <AmiBlitz3.ab3@15128>  ASL.w #8,d0
0002C4D6 <AmiBlitz3.ab3@15129>  ASL.w #2,d0
0002C4DC <AmiBlitz3.ab3@15130>  MOVE.l #$f2000023,d1
0002C4DE <AmiBlitz3.ab3@15131>  OR.l d0,d1
0002C4E4 <AmiBlitz3.ab3@15132>  MOVE.w regnum,d0
0002C4E6 <AmiBlitz3.ab3@15133>  ASL.w #7,d0
0002C4E8 <AmiBlitz3.ab3@15134>  OR.l d0,d1
0002C4EC <AmiBlitz3.ab3@15135> BRA.w writelong
0002C4EE <AmiBlitz3.ab3@15139>   MOVE.w D2,-(A7)                                          ;dopow
0002C4F0 <AmiBlitz3.ab3@15140>   MOVE.w D2,D3
0002C4F2 <AmiBlitz3.ab3@15141>   MOVEQ.l #$05,D2
0002C4F6 <AmiBlitz3.ab3@15142>    BSR.w JL_0_9770
0002C4FC <AmiBlitz3.ab3@15143>   ADDQ.w #1,regnum
0002C4FE <AmiBlitz3.ab3@15144>   MOVE.w (A7)+,D3
0002C500 <AmiBlitz3.ab3@15145>   MOVEQ.l #$05,D2
0002C504 <AmiBlitz3.ab3@15146>    BSR.w writeconvertcode
0002C50A <AmiBlitz3.ab3@15147>   SUBQ.w #1,regnum
0002C50E <AmiBlitz3.ab3@15148>    BSR.w nocando
0002C514 <AmiBlitz3.ab3@15149>    TST.b fpu
0002C518 <AmiBlitz3.ab3@15150>    BEQ 'old
0002C51A <AmiBlitz3.ab3@15151>    MOVEQ #0,d1
0002C520 <AmiBlitz3.ab3@15152>    MOVE.w regnum,d1
0002C522 <AmiBlitz3.ab3@15153>   MOVE.l d1,d0
0002C524 <AmiBlitz3.ab3@15154>   ASL.w #7,d1
0002C526 <AmiBlitz3.ab3@15155>   ASL.w #8,d0
0002C528 <AmiBlitz3.ab3@15156>   ASL.w #2,d0
0002C52A <AmiBlitz3.ab3@15157>   OR.w d0,d1
0002C52C <AmiBlitz3.ab3@15158>   MOVE.l d1,-(a7)
0002C532 <AmiBlitz3.ab3@15160>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002C536 <AmiBlitz3.ab3@15161>    BSR writelong
0002C53C <AmiBlitz3.ab3@15162>    MOVE.w regnum,d0
0002C53E <AmiBlitz3.ab3@15163>  ADDQ #1,d0
0002C540 <AmiBlitz3.ab3@15164>  ASL.w #8,d0
0002C542 <AmiBlitz3.ab3@15165>  ASL.w #2,d0
0002C548 <AmiBlitz3.ab3@15166>  MOVE.l #$f2000023,d1
0002C54A <AmiBlitz3.ab3@15167>  OR.l d0,d1
0002C550 <AmiBlitz3.ab3@15168>  MOVE.w regnum,d0
0002C552 <AmiBlitz3.ab3@15169>  ASL.w #7,d0
0002C554 <AmiBlitz3.ab3@15170>  OR.l d0,d1
0002C55A <AmiBlitz3.ab3@15171>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002C55E <AmiBlitz3.ab3@15172>    BSR writelong
0002C560 <AmiBlitz3.ab3@15173>    MOVE.l (a7)+,d1
0002C566 <AmiBlitz3.ab3@15175>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002C56A <AmiBlitz3.ab3@15176>    BSR writelong
0002C56C <AmiBlitz3.ab3@15177> RTS
0002C570 <AmiBlitz3.ab3@15180>   MOVE.w #$6001,D1
0002C574 <AmiBlitz3.ab3@15181> BRA.w domylib
0002C578 <AmiBlitz3.ab3@15187>   MOVEA.l forthsp(PC),A0
0002C57C <AmiBlitz3.ab3@15188>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002C57E <AmiBlitz3.ab3@15189> RTS
0002C582 <AmiBlitz3.ab3@15195>   MOVE.w #$D400,D1
0002C586 <AmiBlitz3.ab3@15196> BRA.w domylib
0002C58A <AmiBlitz3.ab3@15200>   MOVE.w #$D401,D1
0002C58E <AmiBlitz3.ab3@15201> BRA.w domylib
0002C592 <AmiBlitz3.ab3@15205>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002C596 <AmiBlitz3.ab3@15206>   MOVE.w #$D402,D1
0002C59A <AmiBlitz3.ab3@15207> BRA.w domylib
0002C59E <AmiBlitz3.ab3@15211>   MOVE.w #$D403,D1
0002C5A0 <AmiBlitz3.ab3@15212>   MOVEQ.l #$02,D2                                          ;now a word.
0002C5A4 <AmiBlitz3.ab3@15213> BRA.w domylib
0002C5A8 <AmiBlitz3.ab3@15217>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002C5AE <AmiBlitz3.ab3@15218>   TST.b fpu
0002C5B2 <AmiBlitz3.ab3@15219>   BEQ 'old
0002C5B4 <AmiBlitz3.ab3@15220>   MOVEQ #0,d1
0002C5BA <AmiBlitz3.ab3@15221>   MOVE.w regnum,d1                                         ;fpu mod
0002C5BC <AmiBlitz3.ab3@15222>   MOVE.l d1,d0
0002C5BE <AmiBlitz3.ab3@15223>   ADDQ.l #1,d1
0002C5C0 <AmiBlitz3.ab3@15224>   ASL.l #7,d0
0002C5C2 <AmiBlitz3.ab3@15225>   ASL.l #8,d1
0002C5C4 <AmiBlitz3.ab3@15226>   ASL.l #2,d1
0002C5C6 <AmiBlitz3.ab3@15227>   OR.l d0,d1
0002C5C8 <AmiBlitz3.ab3@15228>   MOVE.l d0,-(a7)
0002C5CE <AmiBlitz3.ab3@15229>   OR.l #$f2000021,d1
0002C5D2 <AmiBlitz3.ab3@15230>   BSR writelong
0002C5D4 <AmiBlitz3.ab3@15231>   MOVE.l (a7)+,d0
0002C5D6 <AmiBlitz3.ab3@15232>  RTS
0002C5DA <AmiBlitz3.ab3@15235>   MOVE.w #$D404,D1
0002C5DC <AmiBlitz3.ab3@15236>   MOVEQ.l #$03,D2                                          ;now a long
0002C5E0 <AmiBlitz3.ab3@15237> BRA.w domylib
0002C5E4 <AmiBlitz3.ab3@15245>   MOVE.w #$48C0,D1
0002C5EA <AmiBlitz3.ab3@15246>   OR.w regnum,D1
0002C5EE <AmiBlitz3.ab3@15247>    BSR.w writeword
0002C5F0 <AmiBlitz3.ab3@15248>   ADDQ.w #1,D1
0002C5F4 <AmiBlitz3.ab3@15249>    BSR.w writeword
0002C5F8 <AmiBlitz3.ab3@15252>    MOVE.w #$48C0,D1
0002C5FE <AmiBlitz3.ab3@15253>   OR.w regnum,D1
0002C602 <AmiBlitz3.ab3@15254>    BSR.w writeword
0002C606 <AmiBlitz3.ab3@15255>   MOVE.w #$81C0,D1
0002C60A <AmiBlitz3.ab3@15256> BRA.w doplus2
0002C610 <AmiBlitz3.ab3@15260>   TST.b fast
0002C614 <AmiBlitz3.ab3@15261>   BNE.s 'l10
0002C618 <AmiBlitz3.ab3@15262>   MOVE.w #$CB01,D1
0002C61C <AmiBlitz3.ab3@15263> BRA.w domylib
0002C620 <AmiBlitz3.ab3@15269>   BSR.w JL_0_AD40
0002C622 <AmiBlitz3.ab3@15270>   MOVE.l D4,D1
0002C626 <AmiBlitz3.ab3@15271>    BSR.w JL_0_AD38
0002C62A <AmiBlitz3.ab3@15272>    BSR.w JL_0_A352
0002C630 <AmiBlitz3.ab3@15286>    MOVE.l #$4c410800,d1
0002C634 <AmiBlitz3.ab3@15287>    BSR writelong
0002C638 <AmiBlitz3.ab3@15290>   MOVE.w #$4e71,d1
0002C63C <AmiBlitz3.ab3@15292>    BSR.w JL_0_A36E
0002C63E <AmiBlitz3.ab3@15293>   MOVE.l D5,D1
0002C642 <AmiBlitz3.ab3@15294> BRA.w JL_0_AD38
0002C646 <AmiBlitz3.ab3@15297>     CMP.w #8,d3
0002C64A <AmiBlitz3.ab3@15298>     BEQ 'ok
0002C64C <AmiBlitz3.ab3@15299>     ASL.l #1,d3
0002C64E <AmiBlitz3.ab3@15300>     ASL.l #8,d3
0002C652 <AmiBlitz3.ab3@15301>     MOVE.w #$e080,d1
0002C654 <AmiBlitz3.ab3@15302>     OR.w d3,d1
0002C658 <AmiBlitz3.ab3@15303> BRA 'oklsr2
0002C65C <AmiBlitz3.ab3@15306>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002C662 <AmiBlitz3.ab3@15309>      SUBQ.l #6,destpointer
0002C666 <AmiBlitz3.ab3@15310>      BSR writeword
0002C668 <AmiBlitz3.ab3@15311>      MOVE.l (a7)+,d3
0002C66A <AmiBlitz3.ab3@15312>      MOVEQ #0,d1
0002C670 <AmiBlitz3.ab3@15313>      CLR.l load_var_addr
0002C676 <AmiBlitz3.ab3@15314>      CLR.l imm_addr
0002C67A <AmiBlitz3.ab3@15315> BRA JL_0_AD38
0002C67E <AmiBlitz3.ab3@15319>   MOVE.w #$CB00,D1                                         ;quickdiv
0002C682 <AmiBlitz3.ab3@15320> BRA.w domylib
0002C688 <AmiBlitz3.ab3@15324>    TST.b iee
0002C68C <AmiBlitz3.ab3@15325>    BNE fdiv1
0002C690 <AmiBlitz3.ab3@15326>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002C694 <AmiBlitz3.ab3@15327> BRA.w doflib
0002C696 <AmiBlitz3.ab3@15331>   MOVEQ #0,d0
0002C69C <AmiBlitz3.ab3@15332>   MOVE.w regnum,d0
0002C69E <AmiBlitz3.ab3@15333>   ADDQ #1,d0
0002C6A0 <AmiBlitz3.ab3@15334>   ASL.w #8,d0
0002C6A2 <AmiBlitz3.ab3@15335>   ASL.w #2,d0
0002C6A8 <AmiBlitz3.ab3@15336>   MOVE.l #$f2000020,d1                                     ;fpu div
0002C6AA <AmiBlitz3.ab3@15337>   OR.l d0,d1
0002C6B0 <AmiBlitz3.ab3@15338>   MOVE.w regnum,d0
0002C6B2 <AmiBlitz3.ab3@15339>   ASL.w #7,d0
0002C6B4 <AmiBlitz3.ab3@15340>   OR.l d0,d1
0002C6B8 <AmiBlitz3.ab3@15341> BRA.w writelong
0002C6BC <AmiBlitz3.ab3@15345>   MOVE.w #$C000,D1
0002C6C0 <AmiBlitz3.ab3@15346> BRA.w doplus2
0002C6C4 <AmiBlitz3.ab3@15350>   MOVE.w #$C040,D1
0002C6C8 <AmiBlitz3.ab3@15351> BRA.w doplus2
0002C6CC <AmiBlitz3.ab3@15355>   MOVE.w #$C080,D1
0002C6D0 <AmiBlitz3.ab3@15356> BRA.w doplus2
0002C6D4 <AmiBlitz3.ab3@15360>   MOVE.w #$8000,D1
0002C6D8 <AmiBlitz3.ab3@15361> BRA.w doplus2
0002C6DC <AmiBlitz3.ab3@15365>   MOVE.w #$8040,D1
0002C6E0 <AmiBlitz3.ab3@15366> BRA.w doplus2
0002C6E4 <AmiBlitz3.ab3@15370>   MOVE.w #$8080,D1
0002C6E8 <AmiBlitz3.ab3@15371> BRA.w doplus2
0002C6EC <AmiBlitz3.ab3@15375>   MOVE.w #$B100,D1
0002C6F2 <AmiBlitz3.ab3@15378>    MOVE.w regnum,D3
0002C6F4 <AmiBlitz3.ab3@15379>   OR.w D3,D1
0002C6F6 <AmiBlitz3.ab3@15380>   ADDQ.w #1,D3
0002C6F8 <AmiBlitz3.ab3@15381>   LSL.w #8,D3
0002C6FA <AmiBlitz3.ab3@15382>   LSL.w #1,D3
0002C6FC <AmiBlitz3.ab3@15383>   OR.w D3,D1
0002C700 <AmiBlitz3.ab3@15384> BRA.w writeword
0002C704 <AmiBlitz3.ab3@15388>   MOVE.w #$B140,D1
0002C708 <AmiBlitz3.ab3@15389> BRA.w JL_0_A25C
0002C70C <AmiBlitz3.ab3@15393>   MOVE.w #$B180,D1
0002C710 <AmiBlitz3.ab3@15394> BRA.w JL_0_A25C
0002C714 <AmiBlitz3.ab3@15398>   MOVE.w #$E1A8,D1
0002C718 <AmiBlitz3.ab3@15399> BRA.w JL_0_A298
0002C71C <AmiBlitz3.ab3@15403>   MOVE.w #$E0A8,D1
0002C720 <AmiBlitz3.ab3@15404> BRA.w JL_0_A298
0002C724 <AmiBlitz3.ab3@15408>   MOVE.w #$E0A0,D1
0002C728 <AmiBlitz3.ab3@15409> BRA.w JL_0_A298
0002C72A <AmiBlitz3.ab3@15413>   MOVE.w D1,-(A7)
0002C730 <AmiBlitz3.ab3@15414>   ADDQ.w #1,regnum
0002C732 <AmiBlitz3.ab3@15415>   MOVE.w D2,-(A7)
0002C734 <AmiBlitz3.ab3@15416>   MOVE.w D2,D3
0002C736 <AmiBlitz3.ab3@15417>   MOVEQ.l #$02,D2
0002C73A <AmiBlitz3.ab3@15422>    BSR.w writeconvertcode
0002C73C <AmiBlitz3.ab3@15424>   MOVE.w (A7)+,D2
0002C742 <AmiBlitz3.ab3@15425>   SUBQ.w #1,regnum
0002C746 <AmiBlitz3.ab3@15426>   CMP.w #$4,D2
0002C74A <AmiBlitz3.ab3@15427>    BEQ.w JL_0_A2C2
0002C74C <AmiBlitz3.ab3@15428>   MOVE.w D2,D3
0002C74E <AmiBlitz3.ab3@15429>   MOVEQ.l #$03,D2
0002C752 <AmiBlitz3.ab3@15430>    BSR.w JL_0_9770
0002C754 <AmiBlitz3.ab3@15433>    MOVE.w (A7)+,D1
0002C75A <AmiBlitz3.ab3@15434>   MOVE.w regnum,D3
0002C75C <AmiBlitz3.ab3@15435>   OR.w D3,D1
0002C75E <AmiBlitz3.ab3@15436>   ADDQ.w #1,D3
0002C760 <AmiBlitz3.ab3@15437>   LSL.w #8,D3
0002C762 <AmiBlitz3.ab3@15438>   LSL.w #1,D3
0002C764 <AmiBlitz3.ab3@15439>   OR.w D3,D1
0002C768 <AmiBlitz3.ab3@15440> BRA.w writeword
0002C76C <AmiBlitz3.ab3@15444>   MOVE.w #$0100,D1
0002C770 <AmiBlitz3.ab3@15445>    BSR.w JL_0_A31C
0002C776 <AmiBlitz3.ab3@15446>   MOVE.w regnum,D1
0002C77A <AmiBlitz3.ab3@15447>   ORI.w #$56C0,D1
0002C77E <AmiBlitz3.ab3@15448>    BSR.w writeword
0002C784 <AmiBlitz3.ab3@15449>   MOVE.w regnum,D1
0002C788 <AmiBlitz3.ab3@15450>   ORI.w #$4880,D1
0002C78C <AmiBlitz3.ab3@15451>    BSR.w writeword
0002C78E <AmiBlitz3.ab3@15452>   MOVEQ.l #$02,D2
0002C790 <AmiBlitz3.ab3@15453> RTS
0002C794 <AmiBlitz3.ab3@15457>   MOVE.w #$01C0,D1
0002C798 <AmiBlitz3.ab3@15460>    BSR.w JL_0_A31C
0002C79A <AmiBlitz3.ab3@15461>   MOVEQ.l #$03,D2
0002C79C <AmiBlitz3.ab3@15462> RTS
0002C7A0 <AmiBlitz3.ab3@15466>   MOVE.w #$0180,D1
0002C7A4 <AmiBlitz3.ab3@15467> BRA.w JL_0_A304
0002C7A8 <AmiBlitz3.ab3@15471>   MOVE.w #$0140,D1
0002C7AC <AmiBlitz3.ab3@15472> BRA.w JL_0_A304
0002C7AE <AmiBlitz3.ab3@15476>   MOVE.w D1,-(A7)
0002C7B0 <AmiBlitz3.ab3@15477>   MOVE.w D2,-(A7)
0002C7B2 <AmiBlitz3.ab3@15478>   MOVE.w D2,D3
0002C7B4 <AmiBlitz3.ab3@15479>   MOVEQ.l #$03,D2
0002C7B8 <AmiBlitz3.ab3@15480>    BSR.w JL_0_9770
0002C7BA <AmiBlitz3.ab3@15481>   MOVE.w (A7)+,D3
0002C7BC <AmiBlitz3.ab3@15482>   MOVEQ.l #$01,D2
0002C7C2 <AmiBlitz3.ab3@15483>   ADDQ.w #1,regnum
0002C7C6 <AmiBlitz3.ab3@15484>    BSR.w writeconvertcode
0002C7CC <AmiBlitz3.ab3@15485>   SUBQ.w #1,regnum
0002C7D2 <AmiBlitz3.ab3@15486>   MOVE.w regnum,D1
0002C7D4 <AmiBlitz3.ab3@15487>   MOVE.w D1,D2
0002C7D6 <AmiBlitz3.ab3@15488>   ADDQ.w #1,D2
0002C7D8 <AmiBlitz3.ab3@15489>   LSL.w #8,D2
0002C7DA <AmiBlitz3.ab3@15490>   LSL.w #1,D2
0002C7DC <AmiBlitz3.ab3@15491>   OR.w (A7)+,D1
0002C7DE <AmiBlitz3.ab3@15492>   OR.w D2,D1
0002C7E2 <AmiBlitz3.ab3@15493> BRA.w writeword
0002C7E8 <AmiBlitz3.ab3@15497>   MOVE.w regnum,D1
0002C7EC <AmiBlitz3.ab3@15498>    BEQ.w JL_0_A36C
0002C7F0 <AmiBlitz3.ab3@15499>   ORI.w #$2000,D1
0002C7F4 <AmiBlitz3.ab3@15500>    BSR.w writeword
0002C7F8 <AmiBlitz3.ab3@15501>   ADDI.w #$201,D1
0002C7FC <AmiBlitz3.ab3@15502>    BSR.w writeword
0002C7FE <AmiBlitz3.ab3@15505> RTS
0002C804 <AmiBlitz3.ab3@15509>   MOVE.w regnum,D1
0002C808 <AmiBlitz3.ab3@15510>    BEQ.w JL_0_A384
0002C80A <AmiBlitz3.ab3@15511>   LSL.w #8,D1
0002C80C <AmiBlitz3.ab3@15512>   LSL.w #1,D1
0002C810 <AmiBlitz3.ab3@15513>   ORI.w #$2000,D1
0002C814 <AmiBlitz3.ab3@15514>    BSR.w writeword
0002C816 <AmiBlitz3.ab3@15517> RTS
0002C81C <AmiBlitz3.ab3@15521>    CLR.b isconstantvalue
0002C822 <AmiBlitz3.ab3@15522>    CLR.l lastconstantvalue
0002C82A <AmiBlitz3.ab3@15523>    CMPI.w #$7,regnum
0002C82E <AmiBlitz3.ab3@15524>    BCS.w JL_0_A6B4
0002C834 <AmiBlitz3.ab3@15525>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002C838 <AmiBlitz3.ab3@15526>   BSR writelong
0002C83C <AmiBlitz3.ab3@15527>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002C840 <AmiBlitz3.ab3@15529>   CMP.w #$3,D2
0002C844 <AmiBlitz3.ab3@15530>    BCS.w JL_0_A3A2
0002C848 <AmiBlitz3.ab3@15531>   MOVE.w #$2F06,D1
0002C84C <AmiBlitz3.ab3@15534>   BSR.w writeword
0002C84E <AmiBlitz3.ab3@15535>   MOVE.w D1,-(A7)
0002C854 <AmiBlitz3.ab3@15536>   SUBQ.w #1,regnum
0002C858 <AmiBlitz3.ab3@15537>    BSR.w JL_0_A6B4
0002C85E <AmiBlitz3.ab3@15538>   ADDQ.w #1,regnum
0002C864 <AmiBlitz3.ab3@15539>   MOVE.l #$f2001b80,d1
0002C868 <AmiBlitz3.ab3@15540>   BSR writelong
0002C86C <AmiBlitz3.ab3@15541>   MOVE.w #$3E06,D1
0002C870 <AmiBlitz3.ab3@15542>   CMP.w #$3,D2
0002C874 <AmiBlitz3.ab3@15543>    BCS.w JL_0_A3C8
0002C878 <AmiBlitz3.ab3@15544>   MOVE.w #$2E06,D1
0002C87C <AmiBlitz3.ab3@15547>   BSR.w writeword
0002C87E <AmiBlitz3.ab3@15548>   MOVE.w (A7)+,D1
0002C882 <AmiBlitz3.ab3@15549>   ANDI.w #$F000,D1
0002C886 <AmiBlitz3.ab3@15550>   ORI.w #$C1F,D1
0002C88C <AmiBlitz3.ab3@15551>   JSR writeword
0002C892 <AmiBlitz3.ab3@15552>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002C896 <AmiBlitz3.ab3@15553> BRA writelong
0002C89A <AmiBlitz3.ab3@15557>   BSR.w JL_0_A6B4
0002C89E <AmiBlitz3.ab3@15558>   MOVE.w #$4440,D1
0002C8A2 <AmiBlitz3.ab3@15559>   CMP.w #$3,D2
0002C8A6 <AmiBlitz3.ab3@15560>    BCS.w JL_0_A406
0002C8AA <AmiBlitz3.ab3@15561>   MOVE.w #$4480,D1
0002C8AE <AmiBlitz3.ab3@15562>   CMP.w #$5,D2
0002C8B2 <AmiBlitz3.ab3@15563>    BCS.w JL_0_A406
0002C8B6 <AmiBlitz3.ab3@15564>   CMP.w #$6,D2
0002C8BA <AmiBlitz3.ab3@15565>    BCC.w illoperr
0002C8BE <AmiBlitz3.ab3@15566>   MOVE.w #$FFC4,D1
0002C8C2 <AmiBlitz3.ab3@15567> BRA.w JL_0_9604
0002C8C8 <AmiBlitz3.ab3@15570>   OR.w regnum,D1                                           ;negate
0002C8CE <AmiBlitz3.ab3@15571>   CLR.l imm_addr
0002C8D2 <AmiBlitz3.ab3@15572> BRA.w writeword
0002C8D6 <AmiBlitz3.ab3@15576>    BSR.w eval4
0002C8DA <AmiBlitz3.ab3@15577>   CMP.w #")",D0
0002C8DE <AmiBlitz3.ab3@15578>    BEQ.w JL_0_A424
0002C8E2 <AmiBlitz3.ab3@15579>   CMP.w #"}",D0
0002C8E6 <AmiBlitz3.ab3@15580>    BNE.w brackets_                                         ;syntax error brackets
0002C8EA <AmiBlitz3.ab3@15583> BRA.w get1bytemain
0002C8EE <AmiBlitz3.ab3@15587>    BSR.w eval4
0002C8F2 <AmiBlitz3.ab3@15588>   CMP.w #$5,D2
0002C8F6 <AmiBlitz3.ab3@15589>    BCC.w illoperr
0002C8FC <AmiBlitz3.ab3@15590>   MOVE.w regnum,D1
0002C900 <AmiBlitz3.ab3@15591>   ORI.w #$4640,D1
0002C904 <AmiBlitz3.ab3@15592>   CMP.w #$3,D2
0002C908 <AmiBlitz3.ab3@15593>    BCS.w writeword
0002C90C <AmiBlitz3.ab3@15594>   EORI.w #$C0,D1
0002C910 <AmiBlitz3.ab3@15595> BRA.w writeword
0002C912 <AmiBlitz3.ab3@15599>   MOVEQ.l #$05,D2                                          ;fpu pi
0002C918 <AmiBlitz3.ab3@15600>    TST.b fpu
0002C91C <AmiBlitz3.ab3@15601>   BEQ 'old
0002C922 <AmiBlitz3.ab3@15602> JMP fpupi
0002C928 <AmiBlitz3.ab3@15605>   MOVE.w regnum,D1
0002C92A <AmiBlitz3.ab3@15606>   LSL.w #8,D1
0002C92C <AmiBlitz3.ab3@15607>   LSL.w #1,D1
0002C930 <AmiBlitz3.ab3@15608>   ORI.w #$203C,D1
0002C934 <AmiBlitz3.ab3@15609>    BSR.w writeword
0002C93A <AmiBlitz3.ab3@15610>   MOVE.l #$C90FDA42,D1
0002C93E <AmiBlitz3.ab3@15611>    BSR.w writelong
0002C942 <AmiBlitz3.ab3@15612> BRA.w get1bytemain
0002CA3E <AmiBlitz3.ab3@15620> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002CB3A <AmiBlitz3.ab3@15621>              Ds.l 63
0002CB82 <AmiBlitz3.ab3@15622>              Ds.l 18
0002CB86 <AmiBlitz3.ab3@15623> forthsp:     Dc.l forthstack
0002CBB2 <AmiBlitz3.ab3@15628>    !fget
0002CBB6 <AmiBlitz3.ab3@15629>    CMP.b #$7e,d0
0002CBBA <AmiBlitz3.ab3@15630>    BNE 'noc
0002CBBC <AmiBlitz3.ab3@15631>    SUBQ.l #1,a5
0002CBC0 <AmiBlitz3.ab3@15632>    BSR get1bytemain
0002CBC4 <AmiBlitz3.ab3@15635>    CMP.b #"#",d0
0002CBC8 <AmiBlitz3.ab3@15636>    BNE 'ld1
0002CBCC <AmiBlitz3.ab3@15637>    CMP.b #$22,(a5)
0002CBD0 <AmiBlitz3.ab3@15638>    BNE 'ld1
0002CBD6 <AmiBlitz3.ab3@15639>    JSR addimmi
0002CBDA <AmiBlitz3.ab3@15642>    CMP.b #$22,d0
0002CBDE <AmiBlitz3.ab3@15643>    BNE 'l11
0002CBE4 <AmiBlitz3.ab3@15653>    NOT.w instringon
0002CBE6 <AmiBlitz3.ab3@15656>    TST.b d0
0002CBEA <AmiBlitz3.ab3@15657>    BPL 'l10
0002CBEC <AmiBlitz3.ab3@15658>    LSL.w #8,d0
0002CBEE <AmiBlitz3.ab3@15659>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002CBF4 <AmiBlitz3.ab3@15660>    MOVE.l d0,lasttoken
0002CBFA <AmiBlitz3.ab3@15661>    MOVE.w d0,lastchar
0002CC00 <AmiBlitz3.ab3@15662>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002CC04 <AmiBlitz3.ab3@15664>   CMP.w #"(",D0
0002CC08 <AmiBlitz3.ab3@15665>    BEQ.w checkcast2
0002CC0C <AmiBlitz3.ab3@15666> nocast CMP.w #"{",D0
0002CC10 <AmiBlitz3.ab3@15667>    BEQ.w JL_0_A410
0002CC14 <AmiBlitz3.ab3@15668>   CMP.w #$2D,D0
0002CC18 <AmiBlitz3.ab3@15669>    BEQ.w JL_0_A3DA
0002CC1C <AmiBlitz3.ab3@15670>   CMP.w #-$7F77,D0
0002CC20 <AmiBlitz3.ab3@15671>    BEQ.w JL_0_A428
0002CC24 <AmiBlitz3.ab3@15672>   MOVEA.l forthsp(PC),A1
0002CC2A <AmiBlitz3.ab3@15673>   CMPA.l #forthsp,A1
0002CC2E <AmiBlitz3.ab3@15674>    BCC.w conmemerr
0002CC34 <AmiBlitz3.ab3@15675>   MOVE.l destpointer,(A1)+
0002CC3A <AmiBlitz3.ab3@15676>   MOVE.l hunkoffsetbase,(A1)+
0002CC40 <AmiBlitz3.ab3@15677>   MOVE.l lasta6,(A1)+
0002CC46 <AmiBlitz3.ab3@15678>   MOVE.w lasta6,(A1)+
0002CC48 <AmiBlitz3.ab3@15679>   CLR.w (A1)+
0002CC4A <AmiBlitz3.ab3@15680>   CLR.w (A1)+
0002CC50 <AmiBlitz3.ab3@15681>   MOVE.l A1,forthsp
0002CC62 <AmiBlitz3.ab3@15683>    !compare2
0002CC66 <AmiBlitz3.ab3@15684>    BEQ.w JL_0_B224
0002CC6A <AmiBlitz3.ab3@15685>   CMP.w #".",D0
0002CC6E <AmiBlitz3.ab3@15686>    BEQ.w JL_0_B21E
0002CC72 <AmiBlitz3.ab3@15687>   CMP.w #"#",D0
0002CC76 <AmiBlitz3.ab3@15688>    BEQ.w get_constant
0002CC7A <AmiBlitz3.ab3@15689>   CMP.w #"$",D0
0002CC7E <AmiBlitz3.ab3@15690>    BEQ.w get_hexconstant
0002CC82 <AmiBlitz3.ab3@15691>   CMP.w #"%",D0
0002CC86 <AmiBlitz3.ab3@15692>    BEQ.w JL_0_A8C0
0002CC8A <AmiBlitz3.ab3@15693>   CMP.w #-$7FD1,D0
0002CC8E <AmiBlitz3.ab3@15694>    BEQ.w _SizeOf
0002CC92 <AmiBlitz3.ab3@15695>   CMP.w #-$7F46,D0
0002CC96 <AmiBlitz3.ab3@15696>    BEQ.w JL_0_A44E
0002CC9A <AmiBlitz3.ab3@15697>   CMP.w #-$7F3B,D0
0002CC9E <AmiBlitz3.ab3@15698>    BEQ.w JL_0_A83C
0002CCA2 <AmiBlitz3.ab3@15699>   CMP.w #-$7F3A,D0
0002CCA6 <AmiBlitz3.ab3@15700>    BEQ.w JL_0_A846
0002CCAC <AmiBlitz3.ab3@15701>   MOVE.w constmode,D1
0002CCB0 <AmiBlitz3.ab3@15702>    BEQ.w JL_0_A776
0002CCD2 <AmiBlitz3.ab3@15703>    !compare1                                               ;bsr.w tstalpha
0002CCD6 <AmiBlitz3.ab3@15704>    BEQ.w JL_0_AF22
0002CCDA <AmiBlitz3.ab3@15705>   CMP.w #$5F,D0
0002CCDE <AmiBlitz3.ab3@15706>    BEQ.w JL_0_AF22
0002CCE2 <AmiBlitz3.ab3@15707>   CMP.w #$22,D0
0002CCE6 <AmiBlitz3.ab3@15708>    BEQ.w JL_0_AF00
0002CCEA <AmiBlitz3.ab3@15709> BRA.w syntaxerr
0002CCF0 <AmiBlitz3.ab3@15711> checkcast2 JMP checkcast
0002CCF6 <AmiBlitz3.ab3@15714>   MOVE.w cfetchmode,D1
0002CCFA <AmiBlitz3.ab3@15715>   BEQ.w JL_0_A784
0002CCFE <AmiBlitz3.ab3@15716> BRA.w badconerr
0002CD04 <AmiBlitz3.ab3@15719> JMP syntaxerropt4
0002CD06 <AmiBlitz3.ab3@15723>   NOT.w -(A1)
0002CD28 <AmiBlitz3.ab3@15724>   !compare1                                                ;bsr.w tstalpha
0002CD2C <AmiBlitz3.ab3@15725>    BEQ.w JL_0_AF4C
0002CD30 <AmiBlitz3.ab3@15726>   CMP.w #$2A,D0
0002CD34 <AmiBlitz3.ab3@15727>    BEQ.w JL_0_AF4C
0002CD38 <AmiBlitz3.ab3@15728>   CMP.w #$5C,D0
0002CD3C <AmiBlitz3.ab3@15729>    BEQ.w JL_0_AF4C
0002CD40 <AmiBlitz3.ab3@15730>   CMP.w #$22,D0
0002CD44 <AmiBlitz3.ab3@15731>    BEQ.w JL_0_ADC0
0002CD48 <AmiBlitz3.ab3@15732>   BTST #$F,D0
0002CD4C <AmiBlitz3.ab3@15733>    BNE.w JL_0_AAF2
0002CD50 <AmiBlitz3.ab3@15734>   CMP.w #"&",D0
0002CD54 <AmiBlitz3.ab3@15735>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002CD58 <AmiBlitz3.ab3@15736>   CMP.w #"?",D0
0002CD5C <AmiBlitz3.ab3@15737>    BEQ.w JL_0_AED4
0002CD60 <AmiBlitz3.ab3@15740>   CMP.b #"@",d0
0002CD64 <AmiBlitz3.ab3@15741>    BNE syntaxerr
0002CD6A <AmiBlitz3.ab3@15742>   TST.b newsyntax
0002CD6E <AmiBlitz3.ab3@15743>    BEQ JUMP_syntaxerropt4
0002CD74 <AmiBlitz3.ab3@15744>   MOVE.w regnum,D1
0002CD76 <AmiBlitz3.ab3@15745>   LSL.w #8,D1
0002CD78 <AmiBlitz3.ab3@15746>   LSL.w #1,D1
0002CD7C <AmiBlitz3.ab3@15747>   ORI.w #$203C,D1
0002CD80 <AmiBlitz3.ab3@15748>   BSR.w writeword
0002CD84 <AmiBlitz3.ab3@15749>   CMP.b #$22,(a5)
0002CD88 <AmiBlitz3.ab3@15750>    BNE syntaxerr
0002CD8A <AmiBlitz3.ab3@15751>   ADDQ #1,a5
0002CD8C <AmiBlitz3.ab3@15752>   MOVEQ #0,d0
0002CD90 <AmiBlitz3.ab3@15753>   CMP.b #1,d2
0002CD94 <AmiBlitz3.ab3@15754>    BEQ 'l3b
0002CD98 <AmiBlitz3.ab3@15755>   CMP.b #2,d2
0002CD9C <AmiBlitz3.ab3@15756>    BEQ 'l2b
0002CDA0 <AmiBlitz3.ab3@15757>   CMP.b #4,d2
0002CDA4 <AmiBlitz3.ab3@15758>    BEQ error_convert_types
0002CDA6 <AmiBlitz3.ab3@15759>   MOVE.b (a5)+,d0
0002CDAA <AmiBlitz3.ab3@15760>   BEQ syntaxerr
0002CDAE <AmiBlitz3.ab3@15761>   CMP.b #$22,d0
0002CDB2 <AmiBlitz3.ab3@15762>   BNE 'l1
0002CDB6 <AmiBlitz3.ab3@15763>     MOVE.b #0,d0
0002CDBA <AmiBlitz3.ab3@15764> BRA 'do
0002CDBC <AmiBlitz3.ab3@15767>   ASL.l #8,d0
0002CDBE <AmiBlitz3.ab3@15768>   MOVE.b (a5)+,d0
0002CDC2 <AmiBlitz3.ab3@15769>   BEQ syntaxerr
0002CDC6 <AmiBlitz3.ab3@15770>   CMP.b #$22,d0
0002CDCA <AmiBlitz3.ab3@15771>   BNE 'l2
0002CDCE <AmiBlitz3.ab3@15772>     MOVE.b #0,d0
0002CDD0 <AmiBlitz3.ab3@15773>     ASR.l #8,d0
0002CDD4 <AmiBlitz3.ab3@15774> BRA 'do
0002CDD6 <AmiBlitz3.ab3@15777>   ASL.l #8,d0
0002CDD8 <AmiBlitz3.ab3@15780>   MOVE.b (a5)+,d0
0002CDDC <AmiBlitz3.ab3@15781>    BEQ syntaxerr
0002CDE0 <AmiBlitz3.ab3@15782>    CMP.b #$22,d0
0002CDE4 <AmiBlitz3.ab3@15783>    BNE 'l3
0002CDE8 <AmiBlitz3.ab3@15784>    MOVE.b #0,d0
0002CDEA <AmiBlitz3.ab3@15785>    ASR.l #8,d0
0002CDEE <AmiBlitz3.ab3@15786> BRA 'do
0002CDF0 <AmiBlitz3.ab3@15789>   ASL.l #8,d0
0002CDF2 <AmiBlitz3.ab3@15792>   MOVE.b (a5)+,d0
0002CDF6 <AmiBlitz3.ab3@15793>    BEQ syntaxerr
0002CDFA <AmiBlitz3.ab3@15794>    CMP.b #$22,d0
0002CDFE <AmiBlitz3.ab3@15795>    BNE 'l4
0002CE02 <AmiBlitz3.ab3@15796>    MOVE.b #0,d0
0002CE04 <AmiBlitz3.ab3@15797>    ASR.l #8,d0
0002CE08 <AmiBlitz3.ab3@15798> BRA 'do
0002CE0C <AmiBlitz3.ab3@15801>    CMP.b #$22,(a5)+
0002CE10 <AmiBlitz3.ab3@15802>    BNE JUMP_error4char
0002CE12 <AmiBlitz3.ab3@15805>   MOVE.l d0,d1
0002CE16 <AmiBlitz3.ab3@15806>     BSR writelong
0002CE1A <AmiBlitz3.ab3@15807>     BSR get1bytemain
0002CE1C <AmiBlitz3.ab3@15808> RTS
0002CE20 <AmiBlitz3.ab3@15812>   BSR.w get1bytemain
0002CE24 <AmiBlitz3.ab3@15813>   CMP.w #$2E,D0
0002CE28 <AmiBlitz3.ab3@15814>    BEQ.b JL_0_A7F4
0002CE32 <AmiBlitz3.ab3@15816>   MOVE.w oldqflag,instringon
0002CE38 <AmiBlitz3.ab3@15817>   MOVEA.l lastsourcepos,A5
0002CE3A <AmiBlitz3.ab3@15818>   MOVE.w D2,-(A7)
0002CE3E <AmiBlitz3.ab3@15819>    BSR.w getparameter2
0002CE42 <AmiBlitz3.ab3@15820>    BEQ.w syntaxerr
0002CE48 <AmiBlitz3.ab3@15821>   LEA varbase,A2
0002CE4C <AmiBlitz3.ab3@15822>    BSR.w findvariable
0002CE50 <AmiBlitz3.ab3@15823>    BNE.w notypeerr
0002CE54 <AmiBlitz3.ab3@15824>   MOVE.w $4(A2),D3
0002CE56 <AmiBlitz3.ab3@15825>   EXT.l D3
0002CE58 <AmiBlitz3.ab3@15826>   MOVE.w (A7)+,D2
0002CE5C <AmiBlitz3.ab3@15827> BRA.w JL_0_B46E
0002CE5E <AmiBlitz3.ab3@15831>   MOVE.w D2,-(A7)
0002CE62 <AmiBlitz3.ab3@15832>    BSR.w getparameter2
0002CE66 <AmiBlitz3.ab3@15833>    BEQ.w syntaxerr
0002CE6C <AmiBlitz3.ab3@15834>   LEA newtypebase,A2
0002CE70 <AmiBlitz3.ab3@15835>    BSR.w findtype
0002CE74 <AmiBlitz3.ab3@15836>    BNE.w notypeerr
0002CE76 <AmiBlitz3.ab3@15837>   MOVEQ.l #$00,D3
0002CE7A <AmiBlitz3.ab3@15838>   CMP.w #$5C,D0
0002CE7E <AmiBlitz3.ab3@15839>    BNE.w JL_0_A832
0002CE82 <AmiBlitz3.ab3@15840>    BSR.w getparameter2
0002CE86 <AmiBlitz3.ab3@15841>    BEQ.w syntaxerr
0002CE8A <AmiBlitz3.ab3@15842>   LEA $4(A2),A2
0002CE8E <AmiBlitz3.ab3@15843>    BSR.w findvariable2
0002CE92 <AmiBlitz3.ab3@15844>    BNE.w noofferr
0002CE96 <AmiBlitz3.ab3@15845>   MOVE.w $4(A2),D3
0002CE9A <AmiBlitz3.ab3@15846> BRA.w JL_0_A836
0002CE9E <AmiBlitz3.ab3@15850>   MOVE.w $8(A2),D3
0002CEA0 <AmiBlitz3.ab3@15853>   MOVE.w (A7)+,D2
0002CEA4 <AmiBlitz3.ab3@15854> BRA.w JL_0_B46E
0002CEA6 <AmiBlitz3.ab3@15858>   MOVEQ.l #-$01,D3
0002CEAA <AmiBlitz3.ab3@15859>    BSR.w get1bytemain
0002CEAE <AmiBlitz3.ab3@15860> BRA.w JL_0_B46E
0002CEB0 <AmiBlitz3.ab3@15864>   MOVEQ.l #$00,D3
0002CEB4 <AmiBlitz3.ab3@15865>    BSR.w get1bytemain
0002CEB8 <AmiBlitz3.ab3@15866> BRA.w JL_0_B46E
0002CEBC <AmiBlitz3.ab3@15870>   CMP.w #$30,D0
0002CEC0 <AmiBlitz3.ab3@15871>    BCS.w JL_0_A876
0002CEC4 <AmiBlitz3.ab3@15872>   CMP.w #$39,D0
0002CEC8 <AmiBlitz3.ab3@15873>    BLS.w JL_0_A874
0002CECC <AmiBlitz3.ab3@15874>   ANDI.w #$FFDF,D0
0002CED0 <AmiBlitz3.ab3@15875>   CMP.w #$46,D0
0002CED4 <AmiBlitz3.ab3@15876>    BHI.w JL_0_A876
0002CED8 <AmiBlitz3.ab3@15877>   CMP.w #$41,D0
0002CEDC <AmiBlitz3.ab3@15878>    BCS.w JL_0_A876
0002CEDE <AmiBlitz3.ab3@15881>    CMP.w D0,D0
0002CEE0 <AmiBlitz3.ab3@15884> RTS
0002CEE4 <AmiBlitz3.ab3@15888>   CMP.w #$31,D0
0002CEE8 <AmiBlitz3.ab3@15889>    BEQ.w JL_0_A884
0002CEEC <AmiBlitz3.ab3@15890>   CMP.w #$30,D0
0002CEEE <AmiBlitz3.ab3@15893> RTS
0002CEF0 <AmiBlitz3.ab3@15897>    MOVEQ #0,d0
0002CEF2 <AmiBlitz3.ab3@15898>    MOVE.b (a5)+,d0
0002CEF4 <AmiBlitz3.ab3@15899>    MOVE.b (a5)+,d0
0002CEF8 <AmiBlitz3.ab3@15900>    BSR ishex
0002CEFC <AmiBlitz3.ab3@15901>    BNE syntaxerr
0002CF00 <AmiBlitz3.ab3@15902>    SUBI.w #$30,D0
0002CF04 <AmiBlitz3.ab3@15903>    CMP.w #$9,D0
0002CF08 <AmiBlitz3.ab3@15904>    BLS.w 'l1
0002CF0A <AmiBlitz3.ab3@15905>    SUBQ.w #7,D0
0002CF0C <AmiBlitz3.ab3@15908>    MOVE.l d0,d1
0002CF0E <AmiBlitz3.ab3@15909>    MOVE.b (a5)+,d0
0002CF12 <AmiBlitz3.ab3@15910>      BSR ishex
0002CF16 <AmiBlitz3.ab3@15911>     BNE syntaxerr
0002CF18 <AmiBlitz3.ab3@15912>     LSL.l #4,d1
0002CF1C <AmiBlitz3.ab3@15913>     SUBI.w #$30,D0
0002CF20 <AmiBlitz3.ab3@15914>    CMP.w #$9,D0
0002CF24 <AmiBlitz3.ab3@15915>    BLS.w 'l2
0002CF26 <AmiBlitz3.ab3@15916>    SUBQ.w #7,D0
0002CF28 <AmiBlitz3.ab3@15919>   ADD.l d1,d0
0002CF2A <AmiBlitz3.ab3@15920> RTS
0002CF2E <AmiBlitz3.ab3@15924>    BSR.w get1bytemain
0002CF32 <AmiBlitz3.ab3@15925>    BSR.w ishex
0002CF36 <AmiBlitz3.ab3@15926>    BNE.w syntaxerr
0002CF38 <AmiBlitz3.ab3@15927>   MOVEQ.l #$00,D3
0002CF3C <AmiBlitz3.ab3@15928>   CMP.w #5,d2
0002CF40 <AmiBlitz3.ab3@15929>   BNE JL_0_A894
0002CF46 <AmiBlitz3.ab3@15930>   CMP.l #newtype_double,a2
0002CF4A <AmiBlitz3.ab3@15931>   BEQ 'doit
0002CF50 <AmiBlitz3.ab3@15932>   CMP.l #newtype_float,a2
0002CF54 <AmiBlitz3.ab3@15933>   BNE JL_0_A894
0002CF5C <AmiBlitz3.ab3@15936>    fmove.s #0,fp0
0002CF62 <AmiBlitz3.ab3@15938>   TST.b fpu
0002CF66 <AmiBlitz3.ab3@15939>   BEQ JL_0_A894
0002CF6C <AmiBlitz3.ab3@15940>   fmove.w #16,fp1
0002CF70 <AmiBlitz3.ab3@15941>   fmul.x fp1,fp0
0002CF74 <AmiBlitz3.ab3@15942>   SUBI.w #$30,D0
0002CF78 <AmiBlitz3.ab3@15943>   CMP.w #$9,D0
0002CF7C <AmiBlitz3.ab3@15944>    BLS.w JL_0_A8AEa
0002CF7E <AmiBlitz3.ab3@15945>   SUBQ.w #7,D0
0002CF82 <AmiBlitz3.ab3@15948>    fmove.w d0,fp1
0002CF86 <AmiBlitz3.ab3@15949>    fadd.x fp1,fp0
0002CF8A <AmiBlitz3.ab3@15950>    BSR.w get1bytemain
0002CF8E <AmiBlitz3.ab3@15951>    BSR.w ishex
0002CF92 <AmiBlitz3.ab3@15952>    BEQ.w JL_0_A894a
0002CF96 <AmiBlitz3.ab3@15953> BRA.w nofpregload
0002CF9C <AmiBlitz3.ab3@15957>   CMP.l #$10000000,D3
0002CFA0 <AmiBlitz3.ab3@15958>    BCC.w overerr
0002CFA2 <AmiBlitz3.ab3@15959>   LSL.l #4,D3
0002CFA6 <AmiBlitz3.ab3@15960>   SUBI.w #$30,D0
0002CFAA <AmiBlitz3.ab3@15961>   CMP.w #$9,D0
0002CFAE <AmiBlitz3.ab3@15962>    BLS.w JL_0_A8AE
0002CFB0 <AmiBlitz3.ab3@15963>   SUBQ.w #7,D0
0002CFB2 <AmiBlitz3.ab3@15966>   OR.w D0,D3
0002CFB6 <AmiBlitz3.ab3@15967>    BSR.w get1bytemain
0002CFBA <AmiBlitz3.ab3@15968>    BSR.w ishex
0002CFBE <AmiBlitz3.ab3@15969>    BEQ.w JL_0_A894
0002CFC2 <AmiBlitz3.ab3@15970> BRA.w JL_0_B46E
0002CFC6 <AmiBlitz3.ab3@15974>    BSR.w get1bytemain
0002CFCA <AmiBlitz3.ab3@15975>    BSR.w JL_0_A878
0002CFCE <AmiBlitz3.ab3@15976>    BNE.w syntaxerr
0002CFD0 <AmiBlitz3.ab3@15977>    MOVEQ.l #$00,D3
0002CFD2 <AmiBlitz3.ab3@15980>    LSL.l #1,D3
0002CFD6 <AmiBlitz3.ab3@15981>    BCS.w overerr
0002CFDA <AmiBlitz3.ab3@15982>   SUBI.w #$30,D0
0002CFDC <AmiBlitz3.ab3@15983>   OR.w D0,D3
0002CFE0 <AmiBlitz3.ab3@15984>    BSR.w get1bytemain
0002CFE4 <AmiBlitz3.ab3@15985>    BSR.w JL_0_A878
0002CFE8 <AmiBlitz3.ab3@15986>    BEQ.w JL_0_A8CE
0002CFEC <AmiBlitz3.ab3@15987> BRA.w JL_0_B46E
0002CFEE <AmiBlitz3.ab3@15991>    MOVE.w d2,-(A7)
0002CFF6 <AmiBlitz3.ab3@15992>    MOVE.b #0,automode
0002CFFA <AmiBlitz3.ab3@15993>    CMP.b #"@",(a5)
0002CFFE <AmiBlitz3.ab3@15994>    BNE 'l1
0002D000 <AmiBlitz3.ab3@15995>    ADDQ.l #1,a5
0002D008 <AmiBlitz3.ab3@15996>    MOVE.b #1,automode
0002D00C <AmiBlitz3.ab3@15997>    BSR getparameter2
0002D010 <AmiBlitz3.ab3@15998>    BSR findlabel2
0002D014 <AmiBlitz3.ab3@15999>    BNE 'addit
0002D018 <AmiBlitz3.ab3@16000> BRA errormsg_autocount
0002D01C <AmiBlitz3.ab3@16003>   BSR.w addlabelhash
0002D024 <AmiBlitz3.ab3@16004>   MOVE.l #$1,$4(A2)
0002D028 <AmiBlitz3.ab3@16005>   MOVEM.l a2/a5,-(a7)
0002D02E <AmiBlitz3.ab3@16006>   MOVE.w lastchar,-(a7)
0002D034 <AmiBlitz3.ab3@16007>   LEA autostorename,a5
0002D038 <AmiBlitz3.ab3@16008>   BSR getparameter2
0002D03C <AmiBlitz3.ab3@16009>   BSR findlabel2
0002D040 <AmiBlitz3.ab3@16010>   BEQ 'found
0002D044 <AmiBlitz3.ab3@16011>   BSR.w addlabelhash
0002D04C <AmiBlitz3.ab3@16012>   MOVE.l #$1,$4(A2)
0002D054 <AmiBlitz3.ab3@16013>   MOVE.l #0,8(a2)
0002D056 <AmiBlitz3.ab3@16016>    MOVE.w (a7)+,d0
0002D05C <AmiBlitz3.ab3@16017>    MOVE.w d0,lastchar
0002D060 <AmiBlitz3.ab3@16018>   MOVE.l 8(a2),d3
0002D068 <AmiBlitz3.ab3@16019>   ADD.l #1,8(a2)
0002D06C <AmiBlitz3.ab3@16020>   MOVEM.l (a7)+,a2/a5
0002D070 <AmiBlitz3.ab3@16021>   MOVE.l d3,8(a2)
0002D074 <AmiBlitz3.ab3@16022>   MOVE.l $8(A2),D3
0002D078 <AmiBlitz3.ab3@16023> BRA.l 'l3
0002D07C <AmiBlitz3.ab3@16026>   BSR.w getparameter2
0002D082 <AmiBlitz3.ab3@16027>     TST.b incnif
0002D086 <AmiBlitz3.ab3@16028>     BEQ 'lc1
0002D08A <AmiBlitz3.ab3@16029>     BSR.w findlabel2
0002D08E <AmiBlitz3.ab3@16030>     BNE 'l5
0002D090 <AmiBlitz3.ab3@16031>     MOVEQ #1,d3
0002D092 <AmiBlitz3.ab3@16032>     MOVE.w (A7)+,D2
0002D096 <AmiBlitz3.ab3@16033> BRA JL_0_B46E
0002D098 <AmiBlitz3.ab3@16036>   MOVEQ #0,d3
0002D09A <AmiBlitz3.ab3@16037>     MOVE.w (A7)+,D2
0002D09E <AmiBlitz3.ab3@16038> BRA JL_0_B46E
0002D0A2 <AmiBlitz3.ab3@16041>    BSR.w findlabel2
0002D0A6 <AmiBlitz3.ab3@16042>    BNE.w cnferr
0002D0AE <AmiBlitz3.ab3@16045>    CMPI.l #$1,$4(A2)
0002D0B2 <AmiBlitz3.ab3@16046>    BNE.w cnferr
0002D0B6 <AmiBlitz3.ab3@16048>    MOVE.l $8(A2),D3
0002D0B8 <AmiBlitz3.ab3@16049>    MOVE.w (A7)+,D2
0002D0BC <AmiBlitz3.ab3@16050> BRA.w JL_0_B46E
0002D0C2 <AmiBlitz3.ab3@16054>   CLR.w vartype
0002D0CA <AmiBlitz3.ab3@16055>   MOVE.b #3,peekaddrsize
0002D0CE <AmiBlitz3.ab3@16056>   BSR.w JL_0_A916
0002D0D4 <AmiBlitz3.ab3@16057>   MOVE.l a2,rightsidetype
0002D0D6 <AmiBlitz3.ab3@16058>   MOVEQ.l #$03,D2
0002D0D8 <AmiBlitz3.ab3@16059> RTS
0002D0DC <AmiBlitz3.ab3@16063>    BSR.w get1bytemain
0002D0EE <AmiBlitz3.ab3@16064>    !compare2
0002D0F2 <AmiBlitz3.ab3@16065>    BEQ andop2
0002D0F6 <AmiBlitz3.ab3@16066>    BSR.w getparameter
0002D0FA <AmiBlitz3.ab3@16067>    BSR.w JL_0_8E3C
0002D0FE <AmiBlitz3.ab3@16068>    BSR.w calcvar
0002D102 <AmiBlitz3.ab3@16069>   CMP.b #$7,D2
0002D106 <AmiBlitz3.ab3@16070>    BNE.w JL_0_A960
0002D10A <AmiBlitz3.ab3@16071>   BTST #$F,D2
0002D10E <AmiBlitz3.ab3@16072>    BNE.w JL_0_A94A
0002D114 <AmiBlitz3.ab3@16073>   MOVE.w D3,stamp2+2
0002D11A <AmiBlitz3.ab3@16074>   MOVE.l stamp2,D1
0002D11E <AmiBlitz3.ab3@16075>    BSR.w pokela5s
0002D122 <AmiBlitz3.ab3@16076> BRA.w JL_0_A978
0002D128 <AmiBlitz3.ab3@16080>   MOVE.w regnum,D1
0002D12A <AmiBlitz3.ab3@16081>   LSL.w #8,D1
0002D12C <AmiBlitz3.ab3@16082>   LSL.w #1,D1
0002D132 <AmiBlitz3.ab3@16083>   OR.w stamp,D1
0002D136 <AmiBlitz3.ab3@16084>    BSR.w writeword
0002D138 <AmiBlitz3.ab3@16085> RTS
0002D13C <AmiBlitz3.ab3@16089>   BTST #$F,D2
0002D140 <AmiBlitz3.ab3@16090>    BNE.w JL_0_A978
0002D146 <AmiBlitz3.ab3@16091>   MOVE.w D3,leaamp+2
0002D14C <AmiBlitz3.ab3@16092>   MOVE.l leaamp,D1
0002D150 <AmiBlitz3.ab3@16093>    BSR.w pokela5s
0002D156 <AmiBlitz3.ab3@16096>   MOVE.w regnum,D1
0002D158 <AmiBlitz3.ab3@16097>   LSL.w #8,D1
0002D15A <AmiBlitz3.ab3@16098>   LSL.w #1,D1
0002D160 <AmiBlitz3.ab3@16099>   OR.w leaamp2,D1
0002D164 <AmiBlitz3.ab3@16100> BRA.w writeword
0002D168 <AmiBlitz3.ab3@16104>   MOVE.w #$D200,D1
0002D16C <AmiBlitz3.ab3@16105>    BSR.w Atokejsr
0002D16E <AmiBlitz3.ab3@16106>   MOVEQ.l #$03,D2
0002D170 <AmiBlitz3.ab3@16107> RTS
0002D174 <AmiBlitz3.ab3@16111> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002D176 <AmiBlitz3.ab3@16112>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002D178 <AmiBlitz3.ab3@16113>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002D17C <AmiBlitz3.ab3@16119>    BSR.w get1bytemain
0002D17E <AmiBlitz3.ab3@16120>   MOVE.w D0,D1
0002D182 <AmiBlitz3.ab3@16121>    BPL.w syntaxerr
0002D184 <AmiBlitz3.ab3@16122>   MOVE.w D2,-(A7)
0002D188 <AmiBlitz3.ab3@16123>   BCLR #$F,D1
0002D18C <AmiBlitz3.ab3@16124>    BSR.w searchinstr
0002D190 <AmiBlitz3.ab3@16125>   MOVE.l $12(A2),D0
0002D194 <AmiBlitz3.ab3@16126>   TST.w -$2(A2,D0.L)
0002D198 <AmiBlitz3.ab3@16127>    BEQ.w freeerr
0002D19A <AmiBlitz3.ab3@16128>   MOVE.w (A7)+,D2
0002D19C <AmiBlitz3.ab3@16129> RTS
0002D1A0 <AmiBlitz3.ab3@16133>   MOVE.l $0(A5),D0
0002D1A4 <AmiBlitz3.ab3@16134>    BNE.b ucodeskip
0002D1A6 <AmiBlitz3.ab3@16135>   MOVEQ.l #-$01,D0
0002D1AA <AmiBlitz3.ab3@16136> BRA.b usedcodef
0002D1AE <AmiBlitz3.ab3@16139>   SUB.l $0(A5),D0
0002D1B0 <AmiBlitz3.ab3@16142>   LSR.w #8,D0
0002D1B4 <AmiBlitz3.ab3@16147>    MOVE.l $0(A5),D0
0002D1B8 <AmiBlitz3.ab3@16148>    BNE.b ucodeskip2
0002D1BA <AmiBlitz3.ab3@16149>   MOVEQ.l #-$01,D0
0002D1BE <AmiBlitz3.ab3@16150> BRA.b usedcode2f
0002D1C2 <AmiBlitz3.ab3@16153>   SUB.l $0(A5),D0                                          ;usedcode2
0002D1C4 <AmiBlitz3.ab3@16154>   LSR.w #8,D0
0002D1C6 <AmiBlitz3.ab3@16157>   LSR.w #8,D0
0002D1C8 <AmiBlitz3.ab3@16162>   MOVE.l D0,-(A7)
0002D1CA <AmiBlitz3.ab3@16165>   MOVE.l (A7)+,D0
0002D1CC <AmiBlitz3.ab3@16168>   MOVE.l D0,D0
0002D1D0 <AmiBlitz3.ab3@16174>   BSR.w JL_0_A9A0
0002D1D4 <AmiBlitz3.ab3@16176>   MOVE.w -$2(A2,D0.L),D3
0002D1D8 <AmiBlitz3.ab3@16177>   CMP.w #$9,D3
0002D1DC <AmiBlitz3.ab3@16178>    BCC.w doused__skip
0002D1E0 <AmiBlitz3.ab3@16182>   LEA usedcode(PC),A0
0002D1E4 <AmiBlitz3.ab3@16183>   LEA usedcodef(PC),A1
0002D1EA <AmiBlitz3.ab3@16185>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002D1EE <AmiBlitz3.ab3@16186>   ANDI.w #$7,D3
0002D1F0 <AmiBlitz3.ab3@16187>   LSL.w #8,D3
0002D1F2 <AmiBlitz3.ab3@16188>   LSL.w #1,D3
0002D1F6 <AmiBlitz3.ab3@16189>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002D1FA <AmiBlitz3.ab3@16190> BRA.w doused__skip2
0002D1FE <AmiBlitz3.ab3@16195>   LEA usedcode2(PC),A0
0002D202 <AmiBlitz3.ab3@16196>   LEA usedcode2f(PC),A1
0002D208 <AmiBlitz3.ab3@16198>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002D20A <AmiBlitz3.ab3@16199>   SUBQ.w #8,D3
0002D20C <AmiBlitz3.ab3@16200>   LSL.w #8,D3
0002D20E <AmiBlitz3.ab3@16201>   LSL.w #1,D3
0002D212 <AmiBlitz3.ab3@16202>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002D216 <AmiBlitz3.ab3@16205>   MOVE.w -$6(A2,D0.L),D3
0002D21A <AmiBlitz3.ab3@16206>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002D21C <AmiBlitz3.ab3@16207>   ADDQ.w #4,D3
0002D220 <AmiBlitz3.ab3@16208>   MOVE.w D3,$2(A0)
0002D226 <AmiBlitz3.ab3@16209>   MOVE.w regnum,D1
0002D22A <AmiBlitz3.ab3@16210>    BEQ.w doused__skip3
0002D22E <AmiBlitz3.ab3@16211>   MOVE.w usedprep(PC),D1
0002D232 <AmiBlitz3.ab3@16212>    BSR.w writeword
0002D236 <AmiBlitz3.ab3@16215>   BSR.w pokecode
0002D23C <AmiBlitz3.ab3@16216>   MOVE.w regnum,D1
0002D240 <AmiBlitz3.ab3@16217>    BEQ.w doused__skip4
0002D242 <AmiBlitz3.ab3@16218>   LSL.w #8,D1
0002D244 <AmiBlitz3.ab3@16219>   LSL.w #1,D1
0002D248 <AmiBlitz3.ab3@16220>   OR.w usedfix(PC),D1
0002D24C <AmiBlitz3.ab3@16221>    BSR.w writeword
0002D250 <AmiBlitz3.ab3@16222>   MOVE.w useddone(PC),D1
0002D254 <AmiBlitz3.ab3@16223>    BSR.w writeword
0002D256 <AmiBlitz3.ab3@16226>    MOVEQ.l #$02,D2
0002D25A <AmiBlitz3.ab3@16227> BRA.w get1bytemain
0002D25E <AmiBlitz3.ab3@16235>    BSR.w JL_0_A9A0
0002D260 <AmiBlitz3.ab3@16237>   MOVEQ.l #$00,D3
0002D264 <AmiBlitz3.ab3@16238>   MOVE.w -$4(A2,D0.L),D3
0002D268 <AmiBlitz3.ab3@16239>    BSR.w get1bytemain
0002D26C <AmiBlitz3.ab3@16240> BRA.w JL_0_B46E
0002D270 <AmiBlitz3.ab3@16247>    BSR.w get1bytemain
0002D272 <AmiBlitz3.ab3@16248>   MOVE.w D0,-(A7)
0002D276 <AmiBlitz3.ab3@16249>    BSR.w get1bytemain
0002D27A <AmiBlitz3.ab3@16250>   CMP.w #$28,D0
0002D27E <AmiBlitz3.ab3@16251>    BNE.w syntaxerr
0002D280 <AmiBlitz3.ab3@16252>   MOVE.w (A7)+,D0
0002D284 <AmiBlitz3.ab3@16253>    BSR.w JL_0_C340
0002D288 <AmiBlitz3.ab3@16254>    BSR.w reget
0002D28C <AmiBlitz3.ab3@16255>   CMP.w #$29,D0
0002D290 <AmiBlitz3.ab3@16256>    BNE.w syntaxerr
0002D294 <AmiBlitz3.ab3@16260>   LEA addrcode(PC),A0
0002D298 <AmiBlitz3.ab3@16261>   LEA addrcodef(PC),A1
0002D29E <AmiBlitz3.ab3@16262>   MOVE.w -$6(A2),$2(A0)
0002D2A2 <AmiBlitz3.ab3@16263>   MOVE.w $4(A0),D1
0002D2A6 <AmiBlitz3.ab3@16264>   ANDI.w #$FFF8,D1
0002D2AC <AmiBlitz3.ab3@16265>   OR.w regnum,D1
0002D2B0 <AmiBlitz3.ab3@16266>   MOVE.w D1,$4(A0)
0002D2B4 <AmiBlitz3.ab3@16267>   MOVE.w $6(A0),D1
0002D2B8 <AmiBlitz3.ab3@16268>   ANDI.w #$F1FF,D1
0002D2BE <AmiBlitz3.ab3@16269>   MOVE.w regnum,D0
0002D2C0 <AmiBlitz3.ab3@16270>   LSL.w #8,D0
0002D2C2 <AmiBlitz3.ab3@16271>   LSL.w #1,D0
0002D2C4 <AmiBlitz3.ab3@16272>   OR.w D0,D1
0002D2C8 <AmiBlitz3.ab3@16273>   MOVE.w D1,$6(A0)
0002D2CC <AmiBlitz3.ab3@16274>    BSR.w pokecode
0002D2CE <AmiBlitz3.ab3@16275>   MOVEQ.l #$03,D2
0002D2D2 <AmiBlitz3.ab3@16276> BRA.w get1bytemain
0002D2D6 <AmiBlitz3.ab3@16280>   CMP.w #-$7F4D,D0
0002D2DA <AmiBlitz3.ab3@16281>    BHI.w JL_0_AAFE
0002D2DE <AmiBlitz3.ab3@16282> BRA.w syntaxerr
0002D2E2 <AmiBlitz3.ab3@16289> .do_null   CMP.w #$b581,d0
0002D2E6 <AmiBlitz3.ab3@16290>    BNE 'nonull
0002D2EC <AmiBlitz3.ab3@16291>    MOVE.l d0,lastinstruction
0002D2F0 <AmiBlitz3.ab3@16292>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002D2F6 <AmiBlitz3.ab3@16293>    MOVE.w regnum,d0
0002D2F8 <AmiBlitz3.ab3@16294>    ASL.l #7,d0
0002D2FA <AmiBlitz3.ab3@16295>    ASL.l #2,d0
0002D2FC <AmiBlitz3.ab3@16296>    OR.l d0,d1
0002D300 <AmiBlitz3.ab3@16297>    BSR writeword
0002D306 <AmiBlitz3.ab3@16298>    JSR get1bytemain
0002D308 <AmiBlitz3.ab3@16299>    RTS
0002D30C <AmiBlitz3.ab3@16301> 'nonull CMP.w #$c982,d0
0002D310 <AmiBlitz3.ab3@16302>        BNE nonew_
0002D312 <AmiBlitz3.ab3@16304>   MOVE.l a5,-(a7)
0002D318 <AmiBlitz3.ab3@16305>   MOVE.w lastchar,-(a7)
0002D31E <AmiBlitz3.ab3@16306>   JSR get1bytemain
0002D322 <AmiBlitz3.ab3@16307>   CMP.w #"(",d0                                             ; use oldcode
0002D326 <AmiBlitz3.ab3@16308>   BNE 'newcode
0002D32C <AmiBlitz3.ab3@16309>   JSR get1bytemain
0002D330 <AmiBlitz3.ab3@16310>   CMP.w #")",d0
0002D334 <AmiBlitz3.ab3@16311>   BEQ 'newcode
0002D33A <AmiBlitz3.ab3@16312>   MOVE.w (a7)+,lastchar
0002D33C <AmiBlitz3.ab3@16313>   MOVE.l (a7)+,a5
0002D342 <AmiBlitz3.ab3@16314>   MOVE.w lastchar,d0
0002D346 <AmiBlitz3.ab3@16315>   BRA nonew_
0002D348 <AmiBlitz3.ab3@16316> 'newcode  MOVE.l a0,-(a7)
0002D34E <AmiBlitz3.ab3@16317>   TST.b blitzparloop
0002D352 <AmiBlitz3.ab3@16318>   BNE 'err
0002D358 <AmiBlitz3.ab3@16319>   TST.b funcparloop
0002D35C <AmiBlitz3.ab3@16320>   BNE 'err
0002D360 <AmiBlitz3.ab3@16321>   BRA 'ok
0002D366 <AmiBlitz3.ab3@16322> 'err JMP errornewnotincalls
0002D36C <AmiBlitz3.ab3@16323> 'ok  MOVE.l #$203c0000,d1
0002D370 <AmiBlitz3.ab3@16324>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002D372 <AmiBlitz3.ab3@16325>   MOVEQ #0,d1
0002D376 <AmiBlitz3.ab3@16326>   MOVE.w 8(a0),d1
0002D37A <AmiBlitz3.ab3@16327>   BSR writeword
0002D37E <AmiBlitz3.ab3@16328>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002D382 <AmiBlitz3.ab3@16329>   BSR writeword
0002D386 <AmiBlitz3.ab3@16330>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002D38A <AmiBlitz3.ab3@16331>   BSR.w tokejsr2
0002D38C <AmiBlitz3.ab3@16332>   MOVE.l (a7)+,a0
0002D38E <AmiBlitz3.ab3@16333>   ADDQ.l #6,a7                      ; a5 need not restore
0002D392 <AmiBlitz3.ab3@16334>   CMP.w #")",d0
0002D396 <AmiBlitz3.ab3@16335>   BNE 'nobracket
0002D39C <AmiBlitz3.ab3@16336>   JSR get1bytemain
0002D39E <AmiBlitz3.ab3@16337> 'nobracket  RTS
0002D3A2 <AmiBlitz3.ab3@16339> nonew_  CMP.w #-$7F4A,D0
0002D3A6 <AmiBlitz3.ab3@16340>    BEQ.w JL_0_A98C
0002D3AA <AmiBlitz3.ab3@16341>   CMP.w #-$7F48,D0
0002D3AE <AmiBlitz3.ab3@16342>    BEQ.w doaddr
0002D3B2 <AmiBlitz3.ab3@16343>   CMP.w #-$7F3C,D0
0002D3B6 <AmiBlitz3.ab3@16344>    BEQ.w domaximum
0002D3BA <AmiBlitz3.ab3@16345>   CMP.w #-$7F2F,D0
0002D3BE <AmiBlitz3.ab3@16346>    BEQ.w doused
0002D3C0 <AmiBlitz3.ab3@16347>   MOVE.w D2,-(A7)
0002D3C2 <AmiBlitz3.ab3@16348>   MOVE.w D0,D1
0002D3C6 <AmiBlitz3.ab3@16349>   BCLR #$F,D1
0002D3CA <AmiBlitz3.ab3@16351>    BSR.w searchinstr
0002D3CC <AmiBlitz3.ab3@16352>   MOVE.w (A3),D1
0002D3D0 <AmiBlitz3.ab3@16353>   BTST #$1,D1
0002D3D4 <AmiBlitz3.ab3@16354>    BEQ.w noreturn_                                         ;syntax error noreturn
0002D3D8 <AmiBlitz3.ab3@16355>   BTST #$2,D1
0002D3DC <AmiBlitz3.ab3@16356>    BNE.w JL_0_AC1A
0002D3DE <AmiBlitz3.ab3@16357>   LSR.w #8,D1
0002D3E4 <AmiBlitz3.ab3@16358>   BTST #$3,$1(A3)
0002D3E8 <AmiBlitz3.ab3@16359>    BEQ.w JL_0_AB4C
0002D3EE <AmiBlitz3.ab3@16360>    JSR AJL_0_498A
0002D3F4 <AmiBlitz3.ab3@16363>    CLR.l rightsidetype
0002D3F6 <AmiBlitz3.ab3@16364>    MOVE.w D1,-(A7)                                         ;is library instruction
0002D3FA <AmiBlitz3.ab3@16365>   CMP.w #$7,D1
0002D3FE <AmiBlitz3.ab3@16366>    BNE.w JL_0_AB5E
0002D400 <AmiBlitz3.ab3@16367>   MOVE.l A2,-(A7)
0002D404 <AmiBlitz3.ab3@16368>    BSR.w makesbase
0002D406 <AmiBlitz3.ab3@16369>   MOVEA.l (A7)+,A2
0002D40A <AmiBlitz3.ab3@16372>     BSR.w JL_0_AFA2
0002D40C <AmiBlitz3.ab3@16373>   MOVE.w D3,-(A7)
0002D410 <AmiBlitz3.ab3@16374>    BSR.w get1bytemain
0002D412 <AmiBlitz3.ab3@16375>   MOVEQ.l #$00,D1
0002D416 <AmiBlitz3.ab3@16376>   CMP.w #$28,D0
0002D41A <AmiBlitz3.ab3@16377>    BNE.w JL_0_AB80
0002D420 <AmiBlitz3.ab3@16378>    JSR JL_0_66F6
0002D422 <AmiBlitz3.ab3@16379>   TST.w D1
0002D426 <AmiBlitz3.ab3@16380>    BEQ.w syntaxerr
0002D42A <AmiBlitz3.ab3@16381> BRA.w JL_0_AB84
0002D434 <AmiBlitz3.ab3@16386>   MOVE.w oldqflag,instringon
0002D43A <AmiBlitz3.ab3@16387>   MOVEA.l lastsourcepos,A5
0002D440 <AmiBlitz3.ab3@16390>    MOVE.w regnum,-(A7)
0002D44A <AmiBlitz3.ab3@16391>    MOVE.w regnum,regnumstore
0002D450 <AmiBlitz3.ab3@16392>    TST.b fpu
0002D454 <AmiBlitz3.ab3@16393>             BEQ 'nofloat
0002D45A <AmiBlitz3.ab3@16394>             CMP.w #$ffff,28(a3)
0002D45E <AmiBlitz3.ab3@16395>             BNE 'nofloat
0002D464 <AmiBlitz3.ab3@16396>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002D468 <AmiBlitz3.ab3@16397>             BEQ 'nofloat
0002D46E <AmiBlitz3.ab3@16398>             CMP.w #$3c02,34(a3)                            ;int skip
0002D472 <AmiBlitz3.ab3@16399>             BEQ 'quick
0002D476 <AmiBlitz3.ab3@16400>             CMP.b #5,(a3)
0002D47A <AmiBlitz3.ab3@16401>             BNE 'nofloat
0002D480 <AmiBlitz3.ab3@16404>             CLR.l load_var_addr
0002D484 <AmiBlitz3.ab3@16405> BRA 'isfpu
0002D48A <AmiBlitz3.ab3@16408>    CLR.w regnum
0002D48C <AmiBlitz3.ab3@16411>    MOVE.w D1,-(A7)
0002D492 <AmiBlitz3.ab3@16412>   BTST #$3,$1(A3)
0002D496 <AmiBlitz3.ab3@16413>    BEQ.w JL_0_ABB0
0002D49A <AmiBlitz3.ab3@16432>   MOVE.w $6(A7),D1
0002D4A0 <AmiBlitz3.ab3@16433>   MOVE.w d1,peeksize
0002D4A4 <AmiBlitz3.ab3@16443>   ORI.w #$7000,D1
0002D4A8 <AmiBlitz3.ab3@16444>   BSR.w writeword                                          ;write peekmode
0002D4AE <AmiBlitz3.ab3@16447>   ADDQ.w #1,regnum
0002D4B0 <AmiBlitz3.ab3@16448>   MOVE.w (A7),D1
0002D4B8 <AmiBlitz3.ab3@16451>   MOVE.w 2(a7),tempregnum
0002D4BE <AmiBlitz3.ab3@16452>   JSR JL_0_4878
0002D4C0 <AmiBlitz3.ab3@16453>   TST.w (A7)+
0002D4C4 <AmiBlitz3.ab3@16454>   BEQ.w JL_0_ABC6
0002D4C8 <AmiBlitz3.ab3@16455>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002D4CC <AmiBlitz3.ab3@16456>   BNE.w errorbracketmiss                                    ; was syntax error
0002D4D2 <AmiBlitz3.ab3@16457>   CLR.l lasttoken
0002D4D6 <AmiBlitz3.ab3@16458>   BSR.w get1bytemain
0002D4D8 <AmiBlitz3.ab3@16461>    MOVE.w (A7)+,D1
0002D4DE <AmiBlitz3.ab3@16462>   MOVE.w D1,regnum
0002D4E2 <AmiBlitz3.ab3@16463>    BEQ.w JL_0_ABDE
0002D4E8 <AmiBlitz3.ab3@16464>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002D4EC <AmiBlitz3.ab3@16465>    BNE 'noval
0002D4F2 <AmiBlitz3.ab3@16466>    TST.b fpu
0002D4F6 <AmiBlitz3.ab3@16467>    BEQ 'noval
0002D4FC <AmiBlitz3.ab3@16468>    CLR.l load_var_addr
0002D4FE <AmiBlitz3.ab3@16469>    MOVEQ #0,d1
0002D504 <AmiBlitz3.ab3@16470>    MOVE.w regnum,d1
0002D506 <AmiBlitz3.ab3@16471>    LSL.l #7,d1
0002D50C <AmiBlitz3.ab3@16472>    OR.l #$f2000000,d1
0002D510 <AmiBlitz3.ab3@16473>    BSR writelong
0002D514 <AmiBlitz3.ab3@16474> BRA JL_0_ABDE
0002D51A <AmiBlitz3.ab3@16478>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002D51E <AmiBlitz3.ab3@16479>    BEQ 'quick
0002D522 <AmiBlitz3.ab3@16480>    CMP.b #5,d2
0002D526 <AmiBlitz3.ab3@16481>    BNE 'nofpu
0002D52C <AmiBlitz3.ab3@16482>    TST.b fpu
0002D530 <AmiBlitz3.ab3@16483>    BEQ 'nofpu
0002D536 <AmiBlitz3.ab3@16488>    CLR.l load_var_addr
0002D53A <AmiBlitz3.ab3@16489> BRA JL_0_ABDE
0002D53C <AmiBlitz3.ab3@16492>   LSL.w #8,D1
0002D53E <AmiBlitz3.ab3@16493>   LSL.w #1,D1
0002D542 <AmiBlitz3.ab3@16494>   ORI.w #$2000,D1
0002D546 <AmiBlitz3.ab3@16495>   BSR.w writeword                                          ;write move.l d0,dx
0002D54C <AmiBlitz3.ab3@16496>   TST.b fpu
0002D550 <AmiBlitz3.ab3@16497>   BEQ JL_0_ABDE
0002D552 <AmiBlitz3.ab3@16498>   MOVEQ #0,d1
0002D558 <AmiBlitz3.ab3@16499>   MOVE.w regnum,d1
0002D55A <AmiBlitz3.ab3@16500>   LSL.l #7,d1
0002D560 <AmiBlitz3.ab3@16501>   OR.l #$f2000000,d1
0002D562 <AmiBlitz3.ab3@16505>        MOVE.w (A7)+,D3
0002D566 <AmiBlitz3.ab3@16506>        BEQ.w JL_0_ABFC
0002D56C <AmiBlitz3.ab3@16507>        TST.b fpu
0002D570 <AmiBlitz3.ab3@16508>        BEQ 'nofpu
0002D572 <AmiBlitz3.ab3@16509>       MOVE.l d0,-(a7)
0002D574 <AmiBlitz3.ab3@16510>        MOVE.l a0,-(a7)
0002D57A <AmiBlitz3.ab3@16511>        MOVE.l stacktrack,d1
0002D580 <AmiBlitz3.ab3@16512>        LEA fpustackbase,a0
0002D588 <AmiBlitz3.ab3@16513>        MOVE.w 0(a0,d1),regmask
0002D58A <AmiBlitz3.ab3@16514>        MOVE.l (a7)+,a0
0002D58E <AmiBlitz3.ab3@16515>       MOVE.w #8,d0
0002D592 <AmiBlitz3.ab3@16518>       BEQ 'ready
0002D598 <AmiBlitz3.ab3@16519>       BTST d0,regmask
0002D59C <AmiBlitz3.ab3@16520>       BEQ 'noa7
0002D59E <AmiBlitz3.ab3@16521>       MOVEQ #0,d1
0002D5A0 <AmiBlitz3.ab3@16522>       MOVE.w d0,d1
0002D5A2 <AmiBlitz3.ab3@16523>       SUBQ.w #1,d1
0002D5A4 <AmiBlitz3.ab3@16524>       ASL #7,d1
0002D5AA <AmiBlitz3.ab3@16526>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002D5AE <AmiBlitz3.ab3@16527>       BSR writelong
0002D5B4 <AmiBlitz3.ab3@16528>       SUBQ.l #2,stacktrack
0002D5B6 <AmiBlitz3.ab3@16531>       SUBQ.w #1,d0
0002D5BA <AmiBlitz3.ab3@16532>       BNE 'loop
0002D5BC <AmiBlitz3.ab3@16535>       MOVE.l (a7)+,d0
0002D5C2 <AmiBlitz3.ab3@16536>       SUBQ.l #2,stacktrack                                 ;int track
0002D5C6 <AmiBlitz3.ab3@16539>    MOVE.w #$4CDF,D1
0002D5CA <AmiBlitz3.ab3@16540>    BSR.w writeword                                         ;write movem.l (a7)+,
0002D5CC <AmiBlitz3.ab3@16541>   MOVEQ.l #$00,D1
0002D5CE <AmiBlitz3.ab3@16542>   MOVEQ.l #$0F,D4
0002D5D0 <AmiBlitz3.ab3@16545>     LSL.w #1,D3
0002D5D2 <AmiBlitz3.ab3@16546>     ROXR.w #1,D1
0002D5D6 <AmiBlitz3.ab3@16547>   DBF D4,JL_0_ABF0
0002D5DA <AmiBlitz3.ab3@16549>    BSR.w writeword
0002D5E0 <AmiBlitz3.ab3@16550>    TST.b fast
0002D5E4 <AmiBlitz3.ab3@16551>    BEQ JL_0_ABFC
0002D5EA <AmiBlitz3.ab3@16552>    TST.w regnum
0002D5EE <AmiBlitz3.ab3@16553>    BEQ JL_0_ABFC
0002D5F4 <AmiBlitz3.ab3@16554>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002D5F8 <AmiBlitz3.ab3@16555>    BNE 'l1
0002D5FE <AmiBlitz3.ab3@16556>    MOVE.w regnum,d1
0002D600 <AmiBlitz3.ab3@16557>    ASL.l #8,d1
0002D602 <AmiBlitz3.ab3@16558>    ASL.l #1,d1
0002D606 <AmiBlitz3.ab3@16559>    OR.w #$70ff,d1
0002D610 <AmiBlitz3.ab3@16560>    SUB.l #12,destpointer
0002D614 <AmiBlitz3.ab3@16561>    BSR writeword
0002D61A <AmiBlitz3.ab3@16564>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002D61E <AmiBlitz3.ab3@16565>    BNE 'l2
0002D624 <AmiBlitz3.ab3@16566>     MOVE.w regnum,d1
0002D626 <AmiBlitz3.ab3@16567>     ASL.l #8,d1
0002D628 <AmiBlitz3.ab3@16568>     ASL.l #1,d1
0002D62C <AmiBlitz3.ab3@16569>     OR.w #$7000,d1
0002D636 <AmiBlitz3.ab3@16570>     SUB.l #12,destpointer
0002D63A <AmiBlitz3.ab3@16571>     BSR writeword
0002D63C <AmiBlitz3.ab3@16575>    MOVE.w (A7)+,D2
0002D640 <AmiBlitz3.ab3@16576>   CMP.w #$7,D2                                             ;destination var type
0002D644 <AmiBlitz3.ab3@16577>    BNE.w JL_0_AC16
0002D64A <AmiBlitz3.ab3@16578>   MOVE.w putstlen,D1
0002D650 <AmiBlitz3.ab3@16579>   OR.w regnum,D1
0002D654 <AmiBlitz3.ab3@16580>    BSR.w writeword
0002D658 <AmiBlitz3.ab3@16583> BRA.w JL_0_AF66
0002D65C <AmiBlitz3.ab3@16588>   MOVE.w $6(A3),D1
0002D660 <AmiBlitz3.ab3@16589>    BSR.w uselib
0002D664 <AmiBlitz3.ab3@16590>    BSR.w JL_0_AD40
0002D666 <AmiBlitz3.ab3@16591>   MOVE.l D4,D1
0002D668 <AmiBlitz3.ab3@16592>   MOVE.l D5,-(A7)
0002D66C <AmiBlitz3.ab3@16593>    BSR.w JL_0_AD38
0002D670 <AmiBlitz3.ab3@16594>   MOVE.w $A(A1),-(A7)
0002D672 <AmiBlitz3.ab3@16595>   ADDQ.w #8,A3
0002D674 <AmiBlitz3.ab3@16596>   MOVE.w (A3)+,-(A7)
0002D676 <AmiBlitz3.ab3@16597>   MOVE.l A3,-(A7)
0002D67A <AmiBlitz3.ab3@16598>    BSR.w get1bytemain
0002D67C <AmiBlitz3.ab3@16599>   MOVE.w D0,-(A7)
0002D67E <AmiBlitz3.ab3@16600>   MOVEQ.l #$00,D3
0002D684 <AmiBlitz3.ab3@16601>   JSR checka4a5
0002D686 <AmiBlitz3.ab3@16603>   MOVE.b (A3)+,D1
0002D68A <AmiBlitz3.ab3@16604>    BMI.w JL_0_AC6A
0002D68C <AmiBlitz3.ab3@16605>   MOVEQ.l #$03,D2
0002D68E <AmiBlitz3.ab3@16606>   ADDQ.w #1,D3
0002D692 <AmiBlitz3.ab3@16607>   MOVEM.l D3/A3,-(A7)
0002D698 <AmiBlitz3.ab3@16608>   MOVE.b funcparloop,-(a7)
0002D69E <AmiBlitz3.ab3@16609>   CLR.b funcparloop
0002D6A4 <AmiBlitz3.ab3@16610>   MOVE.b blitzparloop,-(a7)
0002D6AC <AmiBlitz3.ab3@16611>   MOVE.b #1,blitzparloop
0002D6B2 <AmiBlitz3.ab3@16612>   MOVE.l lasttoken,-(a7)
0002D6B8 <AmiBlitz3.ab3@16613>   MOVE.l leftsidetype,-(a7)
0002D6BE <AmiBlitz3.ab3@16614>   MOVE.l rightsidetype,-(a7)
0002D6C2 <AmiBlitz3.ab3@16615>   BSR.w peval
0002D6C8 <AmiBlitz3.ab3@16616>   MOVE.l (a7)+,rightsidetype
0002D6CE <AmiBlitz3.ab3@16617>   MOVE.l (a7)+,leftsidetype
0002D6D4 <AmiBlitz3.ab3@16618>   MOVE.l (a7)+,lasttoken
0002D6DA <AmiBlitz3.ab3@16619>   MOVE.b (a7)+,blitzparloop
0002D6E0 <AmiBlitz3.ab3@16620>   MOVE.b (a7)+,funcparloop
0002D6E6 <AmiBlitz3.ab3@16621>   SUBQ.w #4,a2offset
0002D6EA <AmiBlitz3.ab3@16622>   MOVEM.l (A7)+,D3/A3
0002D6EE <AmiBlitz3.ab3@16623>   CMP.w #$2C,D0
0002D6F2 <AmiBlitz3.ab3@16624>    BEQ.w JL_0_AC40
0002D6F4 <AmiBlitz3.ab3@16625>   TST.b (A3)
0002D6F8 <AmiBlitz3.ab3@16626>    BPL.w syntaxerr
0002D6FA <AmiBlitz3.ab3@16629>   MOVE.w (A7)+,D1
0002D6FE <AmiBlitz3.ab3@16630>    BSR.w JL_0_AD04
0002D700 <AmiBlitz3.ab3@16631>   MOVEA.l (A7)+,A3
0002D702 <AmiBlitz3.ab3@16632>   SUBQ.w #1,D3
0002D706 <AmiBlitz3.ab3@16633>    BMI.w JL_0_ACBE
0002D708 <AmiBlitz3.ab3@16636>   TST.b (A3)+
0002D70C <AmiBlitz3.ab3@16637>    BPL.w JL_0_AC78
0002D70E <AmiBlitz3.ab3@16638>   SUBQ.w #1,A3
0002D710 <AmiBlitz3.ab3@16641>     MOVEQ.l #$00,D1
0002D712 <AmiBlitz3.ab3@16642>     MOVE.b -(A3),D1
0002D716 <AmiBlitz3.ab3@16643>     BTST #$4,D1
0002D71A <AmiBlitz3.ab3@16644>      BNE.w JL_0_ACAA
0002D720 <AmiBlitz3.ab3@16645>     CMP.w regnum,D1
0002D724 <AmiBlitz3.ab3@16646>      BCC.w JL_0_AC9E
0002D726 <AmiBlitz3.ab3@16647>     BSET D1,D5
0002D728 <AmiBlitz3.ab3@16648>     MOVEQ.l #$0F,D0
0002D72A <AmiBlitz3.ab3@16649>     SUB.w D1,D0
0002D72C <AmiBlitz3.ab3@16650>     BSET D0,D4
0002D72E <AmiBlitz3.ab3@16653>     LSL.w #8,D1
0002D730 <AmiBlitz3.ab3@16654>     LSL.w #1,D1
0002D734 <AmiBlitz3.ab3@16655>     ORI.w #$201F,D1
0002D738 <AmiBlitz3.ab3@16656>   BRA.w JL_0_ACB6
0002D73C <AmiBlitz3.ab3@16659>     ANDI.w #$7,D1
0002D73E <AmiBlitz3.ab3@16660>     LSL.w #8,D1
0002D740 <AmiBlitz3.ab3@16661>     LSL.w #1,D1
0002D744 <AmiBlitz3.ab3@16662>     ORI.w #$205F,D1
0002D748 <AmiBlitz3.ab3@16665>      BSR.w writeword
0002D74C <AmiBlitz3.ab3@16666>   DBF D3,JL_0_AC80
0002D752 <AmiBlitz3.ab3@16669>   MOVE.w (A7)+,libjsr+2
0002D758 <AmiBlitz3.ab3@16670>   MOVE.w (A7)+,libbase+2
0002D75E <AmiBlitz3.ab3@16671>   MOVE.l libbase,D1
0002D762 <AmiBlitz3.ab3@16672>    BSR.w writelong
0002D768 <AmiBlitz3.ab3@16673>   MOVE.l libjsr,D1
0002D76C <AmiBlitz3.ab3@16674>    BSR.w writelong
0002D772 <AmiBlitz3.ab3@16675>   MOVE.w regnum,D1
0002D776 <AmiBlitz3.ab3@16676>    BEQ.w JL_0_ACF4
0002D778 <AmiBlitz3.ab3@16677>   LSL.w #8,D1
0002D77A <AmiBlitz3.ab3@16678>   LSL.w #1,D1
0002D77E <AmiBlitz3.ab3@16679>   ORI.w #$2000,D1
0002D782 <AmiBlitz3.ab3@16680>    BSR.w writeword
0002D784 <AmiBlitz3.ab3@16683>   MOVE.l (A7)+,D1
0002D788 <AmiBlitz3.ab3@16684>    BSR.w JL_0_AD38
0002D78E <AmiBlitz3.ab3@16685>    JSR restorea4a5
0002D790 <AmiBlitz3.ab3@16686>   MOVEQ.l #$03,D2
0002D794 <AmiBlitz3.ab3@16687>    BSR.w reget
0002D798 <AmiBlitz3.ab3@16688> BRA.w JL_0_AF66
0002D79A <AmiBlitz3.ab3@16691>   TST.w D3
0002D79E <AmiBlitz3.ab3@16692>    BEQ.w JL_0_AD1E
0002D7A2 <AmiBlitz3.ab3@16693>   CMP.w #$28,D1
0002D7A6 <AmiBlitz3.ab3@16694>    BNE.w syntaxerr
0002D7AA <AmiBlitz3.ab3@16695>   CMP.w #$29,D0
0002D7AE <AmiBlitz3.ab3@16696>    BNE.w syntaxerr
0002D7B2 <AmiBlitz3.ab3@16697> BRA.w get1bytemain
0002D7B6 <AmiBlitz3.ab3@16700>   CMP.w #$28,D1
0002D7BA <AmiBlitz3.ab3@16701>    BNE.w JL_0_AD36
0002D7BE <AmiBlitz3.ab3@16702>    BSR.w get1bytemain
0002D7C2 <AmiBlitz3.ab3@16703>   CMP.w #$29,D0
0002D7C6 <AmiBlitz3.ab3@16704>    BNE.w syntaxerr
0002D7CA <AmiBlitz3.ab3@16705> BRA.w get1bytemain
0002D7CC <AmiBlitz3.ab3@16708> RTS
0002D7CE <AmiBlitz3.ab3@16711>   TST.w D1
0002D7D2 <AmiBlitz3.ab3@16712>    BNE.w writelong
0002D7D4 <AmiBlitz3.ab3@16713> RTS
0002D7D8 <AmiBlitz3.ab3@16717>   MOVE.w #$48E7,D4
0002D7DA <AmiBlitz3.ab3@16718>   SWAP D4
0002D7DC <AmiBlitz3.ab3@16719>   CLR.w D4
0002D7E0 <AmiBlitz3.ab3@16720>   MOVE.w #$4CDF,D5
0002D7E2 <AmiBlitz3.ab3@16721>   SWAP D5
0002D7E4 <AmiBlitz3.ab3@16722>   CLR.w D5
0002D7EA <AmiBlitz3.ab3@16723>   MOVE.w regnum,D1
0002D7EE <AmiBlitz3.ab3@16724>    BEQ.w JL_0_AD74
0002D7F2 <AmiBlitz3.ab3@16725>   BSET #$F,D4
0002D7F6 <AmiBlitz3.ab3@16726>   BSET #$0,D5
0002D7FA <AmiBlitz3.ab3@16727>   CMP.w #$2,D1
0002D7FE <AmiBlitz3.ab3@16728>    BCS.w JL_0_AD72
0002D802 <AmiBlitz3.ab3@16731>   BSET #$E,D4
0002D806 <AmiBlitz3.ab3@16732>   BSET #$1,D5
0002D808 <AmiBlitz3.ab3@16735> RTS
0002D80E <AmiBlitz3.ab3@16738>   TST.w fuckpos
0002D812 <AmiBlitz3.ab3@16739>   BNE.w JL_0_AD6A
0002D814 <AmiBlitz3.ab3@16740> RTS
0002D816 <AmiBlitz3.ab3@16743> fuckpos:  Ds.w 1
0002D81C <AmiBlitz3.ab3@16747>   MOVE.w sbasegot,D1
0002D820 <AmiBlitz3.ab3@16748>    BEQ.w makesbase__skip
0002D824 <AmiBlitz3.ab3@16752>   MOVE.w sbgot(PC),D1
0002D828 <AmiBlitz3.ab3@16753>    BNE.w makesbase__skip2
0002D830 <AmiBlitz3.ab3@16757>   MOVE.w #$0002,sbgot
0002D836 <AmiBlitz3.ab3@16758>   MOVE.w movea3a7,D1
0002D83A <AmiBlitz3.ab3@16759> BRA.w writeword
0002D83C <AmiBlitz3.ab3@16762> RTS
0002D844 <AmiBlitz3.ab3@16767>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002D84A <AmiBlitz3.ab3@16770>   MOVE.l #$C601,D1
0002D852 <AmiBlitz3.ab3@16771>   MOVE.w #-1,sbasegot
0002D858 <AmiBlitz3.ab3@16772>   MOVE.l d1,lastinstruction
0002D85C <AmiBlitz3.ab3@16773>   BSR.w Atokejsr
0002D85E <AmiBlitz3.ab3@16774> RTS
0002D868 <AmiBlitz3.ab3@16779>   MOVE.l data1,litdata1
0002D86E <AmiBlitz3.ab3@16780>   TST.b fast
0002D872 <AmiBlitz3.ab3@16781>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002D876 <AmiBlitz3.ab3@16785> BRA 'l50                                                   ;to deactivate
0002D87C <AmiBlitz3.ab3@16791>   TST.b optistring
0002D880 <AmiBlitz3.ab3@16792>   BNE.s 'l21
0002D886 <AmiBlitz3.ab3@16793>   CLR.b string1
0002D88E <AmiBlitz3.ab3@16794>   MOVE.b #1,optistring
0002D894 <AmiBlitz3.ab3@16795>   TST.b nostringopt
0002D898 <AmiBlitz3.ab3@16796>   BNE 'l21
0002D89A <AmiBlitz3.ab3@16797>   MOVE.l a5,a4
0002D89C <AmiBlitz3.ab3@16798>   SUBQ.l #1,a4
0002D89E <AmiBlitz3.ab3@16801>     TST.b (a4)
0002D8A2 <AmiBlitz3.ab3@16802>     BMI 'l19a
0002D8A6 <AmiBlitz3.ab3@16803>     BEQ.s 'l20
0002D8AA <AmiBlitz3.ab3@16804>     CMP.b #$22,(a4)
0002D8AE <AmiBlitz3.ab3@16805>     BEQ.s 'l19
0002D8B4 <AmiBlitz3.ab3@16808>     TST.w string1
0002D8B8 <AmiBlitz3.ab3@16809>     BNE 'l11
0002D8BC <AmiBlitz3.ab3@16810>     CMP.b #":",(a4)
0002D8C0 <AmiBlitz3.ab3@16811>     BEQ.s 'l20
0002D8C4 <AmiBlitz3.ab3@16812>     CMP.b #";",(a4)
0002D8C8 <AmiBlitz3.ab3@16813>     BEQ.s 'l20
0002D8CC <AmiBlitz3.ab3@16814>     CMP.b #"+",(a4)
0002D8D0 <AmiBlitz3.ab3@16815>     BEQ.s 'l21
0002D8D4 <AmiBlitz3.ab3@16816>     CMP.b #",",(a4)
0002D8D8 <AmiBlitz3.ab3@16817>     BEQ.s 'l20                                             ;was l21
0002D8DC <AmiBlitz3.ab3@16818>     CMP.b #")",(a4)
0002D8E0 <AmiBlitz3.ab3@16819>     BEQ.s 'l20                                             ;was l21
0002D8E2 <AmiBlitz3.ab3@16822>     ADDQ.l #1,a4
0002D8E6 <AmiBlitz3.ab3@16823> BRA.s 'l10
0002D8EE <AmiBlitz3.ab3@16826>   BCHG #0,string1
0002D8F2 <AmiBlitz3.ab3@16827> BRA 'l18
0002D8F4 <AmiBlitz3.ab3@16830>   ADDQ.l #1,a4
0002D8F6 <AmiBlitz3.ab3@16831>   TST.b (a4)
0002D8FA <AmiBlitz3.ab3@16832>   BEQ 'l21
0002D8FE <AmiBlitz3.ab3@16833> BRA 'l11
0002D900 <AmiBlitz3.ab3@16836>   MOVE.l a5,a4
0002D902 <AmiBlitz3.ab3@16837>   SUBQ.l #1,a4
0002D906 <AmiBlitz3.ab3@16840>   CMP.b #$20,-(a4)
0002D90A <AmiBlitz3.ab3@16841>   BEQ 'll1
0002D90E <AmiBlitz3.ab3@16842>   CMP.b #"+",(a4)
0002D912 <AmiBlitz3.ab3@16843>   BEQ 'l21
0002D91A <AmiBlitz3.ab3@16858>   MOVE.b #2,optistring
0002D922 <AmiBlitz3.ab3@16861>   CMP.b #2,optistring
0002D926 <AmiBlitz3.ab3@16862>   BEQ.s 'l100
0002D92A <AmiBlitz3.ab3@16865>   BSR.w makesbase
0002D92E <AmiBlitz3.ab3@16866>   BSR.w pokedata1                                          ;writestringsizespace
0002D932 <AmiBlitz3.ab3@16867>   BSR.w pokedata1
0002D934 <AmiBlitz3.ab3@16870>   MOVEQ.l #$00,D2
0002D93A <AmiBlitz3.ab3@16873>     MOVE.l a5,lastsourcepos
0002D93C <AmiBlitz3.ab3@16874>     MOVEQ #0,d0
0002D93E <AmiBlitz3.ab3@16875>     MOVE.b (a5)+,d0
0002D940 <AmiBlitz3.ab3@16876>     TST.w D0
0002D944 <AmiBlitz3.ab3@16877>      BEQ.w notqerr
0002D948 <AmiBlitz3.ab3@16878>     CMP.w #$22,D0                                          ; --- " ---
0002D94C <AmiBlitz3.ab3@16879>      BEQ.w JL_0_ADF6
0002D950 <AmiBlitz3.ab3@16880>     CMP.b #"\",d0
0002D954 <AmiBlitz3.ab3@16881>      BNE 'l1
0002D958 <AmiBlitz3.ab3@16882>     CMP.b #"\",(a5)
0002D95C <AmiBlitz3.ab3@16883>      BNE 'l1
0002D962 <AmiBlitz3.ab3@16884>     TST.b newsyntax
0002D966 <AmiBlitz3.ab3@16885>      BEQ 'l1
0002D96C <AmiBlitz3.ab3@16886>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002D970 <AmiBlitz3.ab3@16887>     BNE 'l2
0002D972 <AmiBlitz3.ab3@16888>     ADDQ #2,a5
0002D974 <AmiBlitz3.ab3@16891>     ADDQ.w #1,D2
0002D976 <AmiBlitz3.ab3@16892>     MOVE.w D0,D1
0002D97A <AmiBlitz3.ab3@16893>     BSR.w pokedata1b                                        ;writestring
0002D97E <AmiBlitz3.ab3@16894> BRA.w writestring
0002D984 <AmiBlitz3.ab3@16897>     JSR check_newconstants
0002D988 <AmiBlitz3.ab3@16898> BRA writestring
0002D98E <AmiBlitz3.ab3@16901>   NOT instringon
0002D994 <AmiBlitz3.ab3@16902>   MOVE.w dontwrite,D1
0002D998 <AmiBlitz3.ab3@16903>   BNE.w JL_0_AE0A
0002D9A0 <AmiBlitz3.ab3@16904>   CMP.b #2,optistring
0002D9A4 <AmiBlitz3.ab3@16905>   BEQ 'l10
0002D9AA <AmiBlitz3.ab3@16906>     MOVEA.l litdata1,A0
0002D9AC <AmiBlitz3.ab3@16907>     CLR.w (A0)+                                            ;writesize
0002D9AE <AmiBlitz3.ab3@16908>     MOVE.w D2,(A0)
0002D9B2 <AmiBlitz3.ab3@16912>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002D9B8 <AmiBlitz3.ab3@16913>   ADDQ.l #1,data1
0002D9C0 <AmiBlitz3.ab3@16914>   BCLR #$0,data1+3
0002D9C2 <AmiBlitz3.ab3@16915>   MOVEQ.l #$07,D2
0002D9C6 <AmiBlitz3.ab3@16916> BRA.w get1bytemain
0002D9CA <AmiBlitz3.ab3@16920>   BSR.w makename2
0002D9CE <AmiBlitz3.ab3@16921>   BSR.w findlabel2
0002D9D2 <AmiBlitz3.ab3@16922>   BEQ.w JL_0_AE4A
0002D9D6 <AmiBlitz3.ab3@16923>   BSR.w addlabelhash
0002D9DA <AmiBlitz3.ab3@16924>   CLR.l $4(A2)
0002D9DE <AmiBlitz3.ab3@16925>   CLR.l $8(A2)
0002D9E6 <AmiBlitz3.ab3@16927>   MOVE.w linenumat+2,$10(A2)
0002D9EC <AmiBlitz3.ab3@16928>   MOVE.w linenumat,d0
0002D9EE <AmiBlitz3.ab3@16929>   MOVEQ #0,d1
0002D9F2 <AmiBlitz3.ab3@16930>   MOVE.b -1(a2,d7),d1
0002D9F6 <AmiBlitz3.ab3@16931>   MOVE.w d0,0(a2,d1)
0002D9FA <AmiBlitz3.ab3@16932> BRA.w JL_0_AE52
0002D9FE <AmiBlitz3.ab3@16935>   TST.l $8(A2)
0002DA02 <AmiBlitz3.ab3@16936>   BNE.w JL_0_AE88
0002DA08 <AmiBlitz3.ab3@16939>   MOVEA.l _execbase,A6
0002DA0A <AmiBlitz3.ab3@16940>   MOVEQ.l #$0C+2,D0
0002DA0C <AmiBlitz3.ab3@16941>   MOVEQ.l #$01,D1
0002DA12 <AmiBlitz3.ab3@16942>   MOVE.l mempool,a0
0002DA16 <AmiBlitz3.ab3@16943>   JSR _AllocPooled(a6)
0002DA18 <AmiBlitz3.ab3@16945>   MOVEA.l D0,A0
0002DA1C <AmiBlitz3.ab3@16946>   MOVE.l $4(A2),(A0)
0002DA20 <AmiBlitz3.ab3@16947>   MOVE.l A0,$4(A2)
0002DA28 <AmiBlitz3.ab3@16948>   MOVE.l destpointer,$4(A0)
0002DA2C <AmiBlitz3.ab3@16949>   ADDQ.l #2,$4(A0)
0002DA34 <AmiBlitz3.ab3@16950>   MOVE.w procnum,$8(A0)
0002DA3C <AmiBlitz3.ab3@16951>   MOVE.w linenumat+2,$A(A0)
0002DA44 <AmiBlitz3.ab3@16952>   MOVE.w linenumat,$c(a0)
0002DA46 <AmiBlitz3.ab3@16953> RTS
0002DA4A <AmiBlitz3.ab3@16956>   MOVE.l $4(A2),D1
0002DA4E <AmiBlitz3.ab3@16957>   BTST #$0,D1
0002DA52 <AmiBlitz3.ab3@16958>    BNE.w illlaberr
0002DA58 <AmiBlitz3.ab3@16959>   MOVE.w procnum,D1
0002DA5C <AmiBlitz3.ab3@16960>   CMP.w $10(A2),D1
0002DA60 <AmiBlitz3.ab3@16961>    BNE.w referr
0002DA62 <AmiBlitz3.ab3@16962> RTS
0002DA64 <AmiBlitz3.ab3@16966>   MOVE.w D0,-(A7)
0002DA6C <AmiBlitz3.ab3@16967>   CMP.b #2,optistring
0002DA70 <AmiBlitz3.ab3@16968>   BEQ 'l10
0002DA76 <AmiBlitz3.ab3@16971>   MOVE.w numtoa0,D1
0002DA7A <AmiBlitz3.ab3@16972>    BSR.w writeword
0002DA7E <AmiBlitz3.ab3@16973>    BSR.w addoff
0002DA84 <AmiBlitz3.ab3@16974>   MOVE.l litdata1,D1
0002DA88 <AmiBlitz3.ab3@16975>    BSR.w writelong
0002DA8E <AmiBlitz3.ab3@16976>   MOVE.w pushlen,D1
0002DA92 <AmiBlitz3.ab3@16977>    BSR.w writeword
0002DA96 <AmiBlitz3.ab3@16978>   MOVE.w #$C600,D1
0002DA9A <AmiBlitz3.ab3@16979>    BSR.w Atokejsr
0002DA9C <AmiBlitz3.ab3@16980>   MOVE.w (A7)+,D0
0002DA9E <AmiBlitz3.ab3@16981> RTS
0002DAA0 <AmiBlitz3.ab3@16984>   MOVEQ #0,d1
0002DAA4 <AmiBlitz3.ab3@16985>   BSR.w pokedata1b
0002DAAA <AmiBlitz3.ab3@16986>   MOVE.l destpointer,a4
0002DAAE <AmiBlitz3.ab3@16987>   MOVE.w #$203c,d1
0002DAB4 <AmiBlitz3.ab3@16988>   TST.w mode
0002DAB8 <AmiBlitz3.ab3@16989>   BNE 'lm10
0002DABE <AmiBlitz3.ab3@16990>    ADDQ.w #4,a2offset
0002DAC2 <AmiBlitz3.ab3@16991>   MOVE.w #$2f3c,d1
0002DAC8 <AmiBlitz3.ab3@16994>   TST.w mode
0002DACC <AmiBlitz3.ab3@16995>   BEQ 'lm3
0002DAD2 <AmiBlitz3.ab3@16996>   MOVE.w regnum,D0
0002DAD4 <AmiBlitz3.ab3@16997>   LSL.w #8,D0
0002DAD6 <AmiBlitz3.ab3@16998>   LSL.w #1,D0
0002DAD8 <AmiBlitz3.ab3@16999>   OR.w d0,d1
0002DADC <AmiBlitz3.ab3@17000>   BSR writeword
0002DAE0 <AmiBlitz3.ab3@17001>   BSR.w addoff
0002DAE6 <AmiBlitz3.ab3@17002>   MOVE.l litdata1,D1
0002DAEA <AmiBlitz3.ab3@17003>   BSR.w writelong
0002DAF2 <AmiBlitz3.ab3@17004>   CMP.w #3,mode
0002DAF6 <AmiBlitz3.ab3@17005>   BEQ 'l30
0002DAFC <AmiBlitz3.ab3@17006>    ADDQ.w #4,a2offset
0002DB00 <AmiBlitz3.ab3@17007>   MOVE.w #$4878,D1
0002DB04 <AmiBlitz3.ab3@17008>   BSR.w writeword
0002DB06 <AmiBlitz3.ab3@17009>   MOVE.l d2,d1
0002DB0A <AmiBlitz3.ab3@17010>   BSR writeword
0002DB0C <AmiBlitz3.ab3@17013>   MOVE.w (A7)+,D0
0002DB0E <AmiBlitz3.ab3@17014> RTS
0002DB14 <AmiBlitz3.ab3@17017>   MOVE.l #$3f3c0007,d1
0002DB18 <AmiBlitz3.ab3@17018>   BSR writelong
0002DB1E <AmiBlitz3.ab3@17019>   MOVE.w regnum,D1
0002DB20 <AmiBlitz3.ab3@17020>   LSL.w #8,D1
0002DB22 <AmiBlitz3.ab3@17021>   LSL.w #1,D1
0002DB26 <AmiBlitz3.ab3@17022>   ORI.w #$2f3c,d1
0002DB2A <AmiBlitz3.ab3@17023>   BSR writeword
0002DB30 <AmiBlitz3.ab3@17024>    ADDQ.w #4,a2offset
0002DB32 <AmiBlitz3.ab3@17025>   MOVE.l d2,d1
0002DB36 <AmiBlitz3.ab3@17026>   BSR writelong
0002DB3A <AmiBlitz3.ab3@17027>   MOVE.w #$2f3c,d1
0002DB3E <AmiBlitz3.ab3@17028>   BSR writeword
0002DB42 <AmiBlitz3.ab3@17029>   BSR.w addoff
0002DB48 <AmiBlitz3.ab3@17030>   MOVE.l litdata1,D1
0002DB4C <AmiBlitz3.ab3@17031>   BSR.w writelong
0002DB4E <AmiBlitz3.ab3@17032>   MOVE.w (A7)+,D0
0002DB50 <AmiBlitz3.ab3@17033> RTS
0002DB54 <AmiBlitz3.ab3@17037>   BSR.w get1bytemain
0002DB58 <AmiBlitz3.ab3@17038>    BSR.w JL_0_AE22
0002DB5E <AmiBlitz3.ab3@17039>   MOVE.w regnum,D1
0002DB60 <AmiBlitz3.ab3@17040>   LSL.w #8,D1
0002DB62 <AmiBlitz3.ab3@17041>   LSL.w #1,D1
0002DB66 <AmiBlitz3.ab3@17042>   ORI.w #$203C,D1
0002DB6A <AmiBlitz3.ab3@17043>    BSR.w writeword
0002DB6E <AmiBlitz3.ab3@17044>    BSR.w addoff
0002DB72 <AmiBlitz3.ab3@17045>   MOVE.l $8(A2),D1
0002DB76 <AmiBlitz3.ab3@17046>    BSR.w writelong
0002DB78 <AmiBlitz3.ab3@17047>   MOVEQ.l #$03,D2
0002DB7E <AmiBlitz3.ab3@17048>   CLR.b peekaddrsize
0002DB82 <AmiBlitz3.ab3@17049> BRA.w reget
0002DB84 <AmiBlitz3.ab3@17052>   MOVEQ.l #$00,D3
0002DB88 <AmiBlitz3.ab3@17055>   BSR.w get1bytemain
0002DB8C <AmiBlitz3.ab3@17056>    BEQ.w syntaxerr
0002DB90 <AmiBlitz3.ab3@17057>   CMP.w #$22,D0
0002DB94 <AmiBlitz3.ab3@17058>    BEQ.w JL_0_AF1A
0002DB96 <AmiBlitz3.ab3@17059>   LSL.l #8,D3
0002DB98 <AmiBlitz3.ab3@17060>   MOVE.b D0,D3
0002DB9C <AmiBlitz3.ab3@17061> BRA.w JL_0_AF02
0002DBA0 <AmiBlitz3.ab3@17064>   BSR.w get1bytemain
0002DBA4 <AmiBlitz3.ab3@17065> BRA.w JL_0_B46E
0002DBA6 <AmiBlitz3.ab3@17068>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002DBAA <AmiBlitz3.ab3@17069>    BSR.w makename2
0002DBAE <AmiBlitz3.ab3@17070>    BSR.w findlabel2
0002DBB2 <AmiBlitz3.ab3@17071>    BEQ.w 'l10
0002DBB8 <AmiBlitz3.ab3@17072>    LEA ptr_parameterstore,a0
0002DBBE <AmiBlitz3.ab3@17073>    CMP.b #"@",-1(a0,d2.w)
0002DBC2 <AmiBlitz3.ab3@17074>    BNE cnferr
0002DBC6 <AmiBlitz3.ab3@17075>    CLR.b -1(a0,d2.w)
0002DBC8 <AmiBlitz3.ab3@17076>    SUBQ.l #1,d2
0002DBCE <AmiBlitz3.ab3@17077>    LEA varbase,a2
0002DBD2 <AmiBlitz3.ab3@17078>    BSR findvariable
0002DBD6 <AmiBlitz3.ab3@17079>    BNE cnferr
0002DBDA <AmiBlitz3.ab3@17080>    CMP.b #"\",d0
0002DBDE <AmiBlitz3.ab3@17081>    BNE 'l6
0002DBE4 <AmiBlitz3.ab3@17082>    ADDQ #1,lastsourcepos
0002DBE8 <AmiBlitz3.ab3@17083>    MOVE.l $a(a2),a2
0002DBEA <AmiBlitz3.ab3@17084>    ADDQ.l #4,a2
0002DBEE <AmiBlitz3.ab3@17085>    BSR.w makename2
0002DBF2 <AmiBlitz3.ab3@17086>    BSR findvariable2
0002DBF6 <AmiBlitz3.ab3@17087>    BNE cnferr
0002DBFA <AmiBlitz3.ab3@17088> BRA.s 'l6                                                  ;???
0002DBFE <AmiBlitz3.ab3@17091>    MOVE.w $4(a2),d3
0002DC00 <AmiBlitz3.ab3@17092>    EXT.l d3
0002DC04 <AmiBlitz3.ab3@17093> BRA JL_0_AF46
0002DC08 <AmiBlitz3.ab3@17096>   MOVE.l $8(A2),D3
0002DC10 <AmiBlitz3.ab3@17097>   CMPI.l #$1,$4(A2)
0002DC14 <AmiBlitz3.ab3@17098>    BEQ.w JL_0_AF46
0002DC1A <AmiBlitz3.ab3@17099>   NOT.w asmtype
0002DC1C <AmiBlitz3.ab3@17102>   MOVE.w (A7)+,D2
0002DC20 <AmiBlitz3.ab3@17103> BRA.w JL_0_B46E
0002DC22 <AmiBlitz3.ab3@17107>   MOVE.w D2,-(A7)
0002DC26 <AmiBlitz3.ab3@17108>    BSR.w getparameter
0002DC2A <AmiBlitz3.ab3@17109>   CMP.w #"{",D0                                          ;test if var = function{}
0002DC2E <AmiBlitz3.ab3@17110>    BEQ.w isfunction
0002DC32 <AmiBlitz3.ab3@17111>    BSR.w JL_0_8E3C
0002DC36 <AmiBlitz3.ab3@17113>    BSR.w calcvar                                         ;getvaroffset+type
0002DC3A <AmiBlitz3.ab3@17114>    BSR.w JL_0_B150
0002DC40 <AmiBlitz3.ab3@17115>    MOVE.l a2,rightsidetype
0002DC46 <AmiBlitz3.ab3@17126>    TST.b typecheck
0002DC4A <AmiBlitz3.ab3@17127>    BEQ JL_0_AF66
0002DC54 <AmiBlitz3.ab3@17128>    CMP.l #$da01,lasttoken                                  ;poke
0002DC58 <AmiBlitz3.ab3@17129>    BEQ 'l1
0002DC62 <AmiBlitz3.ab3@17130>    CMP.l #$da02,lasttoken                                  ;peek
0002DC66 <AmiBlitz3.ab3@17131>    BNE 'l2
0002DC6E <AmiBlitz3.ab3@17134>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002DC72 <AmiBlitz3.ab3@17135>    BNE JL_0_AF66
0002DC78 <AmiBlitz3.ab3@17136>    MOVE.b d2,peekaddrsize
0002DC7C <AmiBlitz3.ab3@17137>    BRA JL_0_AF66
0002DC82 <AmiBlitz3.ab3@17140>   CLR.b peekaddrsize
0002DC86 <AmiBlitz3.ab3@17143>   CMP.w #$1,D2
0002DC8A <AmiBlitz3.ab3@17144>    BNE.w JL_0_AF7C
0002DC90 <AmiBlitz3.ab3@17145>   MOVE.w regnum,D1
0002DC94 <AmiBlitz3.ab3@17146>   ORI.w #$4880,D1
0002DC98 <AmiBlitz3.ab3@17147>    BSR.w writeword
0002DC9A <AmiBlitz3.ab3@17150>   MOVE.w (A7)+,D3
0002DC9E <AmiBlitz3.ab3@17151>    BEQ.w JL_0_AF9E
0002DCA4 <AmiBlitz3.ab3@17152>    MOVE.l lastinstructionaddr,a0
0002DCA8 <AmiBlitz3.ab3@17153>   CMP.w #$3,D3
0002DCAC <AmiBlitz3.ab3@17154>    BNE.w JL_0_AF92
0002DCB0 <AmiBlitz3.ab3@17155>   CMP.w #$4,D2
0002DCB4 <AmiBlitz3.ab3@17156>    BEQ.w JL_0_AF98
0002DCB6 <AmiBlitz3.ab3@17159>   CMP.w D2,D3
0002DCBA <AmiBlitz3.ab3@17160>    BLS.w JL_0_AF9E
0002DCBC <AmiBlitz3.ab3@17163>   EXG.l D2,D3
0002DCBE <AmiBlitz3.ab3@17164>   MOVE.l a0,-(a7)
0002DCC4 <AmiBlitz3.ab3@17165>   TST.b typecheck
0002DCC8 <AmiBlitz3.ab3@17166>   BEQ 'ok
0002DCCE <AmiBlitz3.ab3@17167>   TST.b notypecheck
0002DCD2 <AmiBlitz3.ab3@17168>   BNE 'ok
0002DCD8 <AmiBlitz3.ab3@17169>   MOVE.l leftsidetype,a0
0002DCE2 <AmiBlitz3.ab3@17170>   CMP.l #0,leftsidetype
0002DCE6 <AmiBlitz3.ab3@17171>   BEQ 'ok
0002DCEE <AmiBlitz3.ab3@17172>   CMP.l #$100,4(a0)
0002DCF2 <AmiBlitz3.ab3@17173>   BLE 'ok
0002DCF6 <AmiBlitz3.ab3@17174>   CMP.b #3,d3
0002DCFA <AmiBlitz3.ab3@17175>   BEQ 'ok
0002DCFE <AmiBlitz3.ab3@17176>   CMP.b #7,d3
0002DD02 <AmiBlitz3.ab3@17177>   BEQ 'ok
0002DD08 <AmiBlitz3.ab3@17178>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002DD0A <AmiBlitz3.ab3@17180>   MOVE.l (a7)+,a0
0002DD0E <AmiBlitz3.ab3@17181>   BSR.w writeconvertcode         ;called from var assign
0002DD12 <AmiBlitz3.ab3@17184> BRA.w reget
0002DD14 <AmiBlitz3.ab3@17187>   MOVEQ.l #$00,D3
0002DD1A <AmiBlitz3.ab3@17188>   MOVE.w regnum,D1
0002DD1E <AmiBlitz3.ab3@17189>    BEQ.w JL_0_AFC8
0002DD20 <AmiBlitz3.ab3@17190>   SUBQ.w #1,D1
0002DD22 <AmiBlitz3.ab3@17193>      LSR.l #1,D3
0002DD26 <AmiBlitz3.ab3@17194>      BSET #$F,D3
0002DD2A <AmiBlitz3.ab3@17195>   DBF D1,JL_0_AFB0b
0002DD30 <AmiBlitz3.ab3@17197>    TST.b fpu
0002DD34 <AmiBlitz3.ab3@17198>    BEQ 'l1
0002DD3A <AmiBlitz3.ab3@17199>    ADDQ.l #2,stacktrack                                    ;intern command
0002DD3C <AmiBlitz3.ab3@17200>     MOVE.l a0,-(a7)
0002DD42 <AmiBlitz3.ab3@17201>     MOVE.l stacktrack,d1
0002DD48 <AmiBlitz3.ab3@17202>     LEA fpustackbase,a0
0002DD4C <AmiBlitz3.ab3@17203>     CLR.w 0(a0,d1)
0002DD52 <AmiBlitz3.ab3@17204>     CLR.w regmask
0002DD54 <AmiBlitz3.ab3@17205>     MOVE.l (a7)+,a0
0002DD58 <AmiBlitz3.ab3@17208>   MOVE.w #$48E7,D1
0002DD5C <AmiBlitz3.ab3@17209>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002DD5E <AmiBlitz3.ab3@17210>   MOVE.w D3,D1
0002DD62 <AmiBlitz3.ab3@17211> BRA.w writeword
0002DD64 <AmiBlitz3.ab3@17216>   MOVEQ.l #$00,D3
0002DD6A <AmiBlitz3.ab3@17217>   MOVE.w regnum,D1
0002DD6E <AmiBlitz3.ab3@17218>    BEQ.w JL_0_AFC8
0002DD70 <AmiBlitz3.ab3@17219>   SUBQ.w #1,D1
0002DD72 <AmiBlitz3.ab3@17222>     LSR.l #1,D3
0002DD76 <AmiBlitz3.ab3@17223>     BSET #$F,D3
0002DD7A <AmiBlitz3.ab3@17224>   DBF D1,JL_0_AFB0
0002DD80 <AmiBlitz3.ab3@17226>    TST.b fpu
0002DD84 <AmiBlitz3.ab3@17227>    BEQ 'l1
0002DD8A <AmiBlitz3.ab3@17228>    ADDQ.l #2,stacktrack                                    ;intern command
0002DD8C <AmiBlitz3.ab3@17229>     MOVE.l a0,-(a7)
0002DD92 <AmiBlitz3.ab3@17230>     MOVE.l stacktrack,d1
0002DD98 <AmiBlitz3.ab3@17231>     LEA fpustackbase,a0
0002DD9C <AmiBlitz3.ab3@17232>     CLR.w 0(a0,d1)
0002DDA0 <AmiBlitz3.ab3@17233>    CMP.b #5,(a3)                                           ;result float ?
0002DDA4 <AmiBlitz3.ab3@17234>     BNE 'nofpu
0002DDAE <AmiBlitz3.ab3@17236>     MOVE.w regnum,regnumfunc
0002DDB4 <AmiBlitz3.ab3@17239>   CLR.w regmask
0002DDB6 <AmiBlitz3.ab3@17240>     MOVE.l (a7)+,a0
0002DDBA <AmiBlitz3.ab3@17243>   MOVE.w #$48E7,D1
0002DDBE <AmiBlitz3.ab3@17244>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002DDC0 <AmiBlitz3.ab3@17245>   MOVE.w D3,D1
0002DDC4 <AmiBlitz3.ab3@17246> BRA.w writeword
0002DDC6 <AmiBlitz3.ab3@17249> RTS
0002DDC8 <AmiBlitz3.ab3@17253>   MOVE.l D1,-(A7)
0002DDCC <AmiBlitz3.ab3@17254>   MOVE.w #$4EB9,D1
0002DDD0 <AmiBlitz3.ab3@17255>    BSR.w writeword
0002DDD4 <AmiBlitz3.ab3@17256>    BSR.w addoff
0002DDD6 <AmiBlitz3.ab3@17257>   MOVE.l (A7)+,D1
0002DDDA <AmiBlitz3.ab3@17258> BRA.w writelong
0002DDDE <AmiBlitz3.ab3@17262>    BSR.w findproc                                          ;write function call
0002DDE2 <AmiBlitz3.ab3@17263>    BEQ 'l1
0002DDE8 <AmiBlitz3.ab3@17264>    TST.l unusedfunc
0002DDEC <AmiBlitz3.ab3@17265>    BEQ noprocerr
0002DDF2 <AmiBlitz3.ab3@17267>    JSR gotoendsource
0002DDFA <AmiBlitz3.ab3@17270>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002DE00 <AmiBlitz3.ab3@17271>   TST.l typetocast
0002DE04 <AmiBlitz3.ab3@17272>   BEQ 'nocast
0002DE0E <AmiBlitz3.ab3@17273>   MOVE.l typetocast,rightsidetype
0002DE14 <AmiBlitz3.ab3@17274>   CLR.l typetocast
0002DE16 <AmiBlitz3.ab3@17275>   MOVE.l a1,-(a7)
0002DE1C <AmiBlitz3.ab3@17276>   MOVE.l rightsidetype,a1
0002DE22 <AmiBlitz3.ab3@17277>   CMP.l leftsidetype,a1
0002DE26 <AmiBlitz3.ab3@17278>   BEQ 'ok
0002DE2C <AmiBlitz3.ab3@17279>   JMP errorconvertreturntype2
0002DE2E <AmiBlitz3.ab3@17280> 'ok  MOVE.l (a7)+,a1
0002DE30 <AmiBlitz3.ab3@17282>   MOVEQ.l #$00,D1
0002DE34 <AmiBlitz3.ab3@17283>   MOVE.b $5(A2),D1
0002DE3A <AmiBlitz3.ab3@17284>   MOVE.b d1,retmode
0002DE3E <AmiBlitz3.ab3@17285>    BMI.w illprocerr
0002DE44 <AmiBlitz3.ab3@17286>    MOVE.b #1,isfunc(a2)
0002DE46 <AmiBlitz3.ab3@17287>   MOVE.w D1,-(A7)
0002DE48 <AmiBlitz3.ab3@17288>   MOVEQ.l #$00,D1
0002DE4C <AmiBlitz3.ab3@17289>   MOVE.b $4(A2),D1
0002DE4E <AmiBlitz3.ab3@17290>   LSR.w #4,D1
0002DE52 <AmiBlitz3.ab3@17291>    BEQ.w JL_0_B006
0002DE54 <AmiBlitz3.ab3@17292>   LSL.w #2,D1
0002DE5A <AmiBlitz3.ab3@17293>   SUB.w D1,a2offset
0002DE5E <AmiBlitz3.ab3@17296>   CMPI.w #$7,(A7)
0002DE62 <AmiBlitz3.ab3@17297>    BNE.b JL_0_B014
0002DE64 <AmiBlitz3.ab3@17298>   MOVE.l A2,-(A7)
0002DE68 <AmiBlitz3.ab3@17299>    BSR.w makesbase
0002DE6A <AmiBlitz3.ab3@17300>   MOVEA.l (A7)+,A2
0002DE70 <AmiBlitz3.ab3@17303>   MOVE.w sbasegot,-(A7)
0002DE74 <AmiBlitz3.ab3@17304>    BEQ.b JL_0_B020
0002DE78 <AmiBlitz3.ab3@17305>    BSR.w dopusha3
0002DE7C <AmiBlitz3.ab3@17308>   BSR.w JL_0_AFA2func
0002DE7E <AmiBlitz3.ab3@17309>   MOVE.w D3,-(A7)
0002DE82 <AmiBlitz3.ab3@17310>   MOVE.l $E(A2),D1
0002DE86 <AmiBlitz3.ab3@17311>   TST.b $20(a2)                                            ;increase if morepar
0002DE8A <AmiBlitz3.ab3@17312>   BNE 'no0par
0002DE8C <AmiBlitz3.ab3@17313>   MOVE.l a5,a4
0002DE90 <AmiBlitz3.ab3@17316>   CMP.b #$20,(a4)+
0002DE94 <AmiBlitz3.ab3@17317>   BEQ 'l1
0002DE9A <AmiBlitz3.ab3@17318>   CMP.b #"}",-1(a4)
0002DE9E <AmiBlitz3.ab3@17319>   BNE  'no0par
0002DEA0 <AmiBlitz3.ab3@17320>   MOVEQ #0,d0
0002DEA4 <AmiBlitz3.ab3@17323>   LEA $16(A2),A1
0002DEA6 <AmiBlitz3.ab3@17326>   MOVE.l d1,-(a7)
0002DEA8 <AmiBlitz3.ab3@17327>   MOVE.b (a1),d2
0002DEAA <AmiBlitz3.ab3@17328>   MOVE.l d0,d1
0002DEAE <AmiBlitz3.ab3@17329>   CMP.w #4,d2
0002DEB2 <AmiBlitz3.ab3@17330>   BNE 'l1b
0002DEB8 <AmiBlitz3.ab3@17331>   ADD.l #$203c,d1
0002DEBC <AmiBlitz3.ab3@17332>   BSR writeword
0002DEC2 <AmiBlitz3.ab3@17333>   MOVE.l #$ffff0000,d1
0002DEC6 <AmiBlitz3.ab3@17334>   BSR writelong
0002DECA <AmiBlitz3.ab3@17335> BRA 'l2b
0002DED0 <AmiBlitz3.ab3@17338>    TST.b fpu
0002DED4 <AmiBlitz3.ab3@17339>    BNE 'l1c
0002DED8 <AmiBlitz3.ab3@17340>    CMP.w #5,d2
0002DEDC <AmiBlitz3.ab3@17341>    BNE 'l1c
0002DEE2 <AmiBlitz3.ab3@17342>    ADD.l #$203c,d1
0002DEE6 <AmiBlitz3.ab3@17343>    BSR writeword
0002DEEC <AmiBlitz3.ab3@17344>    MOVE.l #$800000c1,d1
0002DEF0 <AmiBlitz3.ab3@17345>    BSR writelong
0002DEF4 <AmiBlitz3.ab3@17346> BRA 'l2b
0002DEFA <AmiBlitz3.ab3@17349>   ADD.l #$70ff,d1
0002DEFE <AmiBlitz3.ab3@17350>   BSR writeword
0002DF02 <AmiBlitz3.ab3@17351>   CMP.w #7,d2
0002DF06 <AmiBlitz3.ab3@17352>   BNE 'l1d
0002DF0C <AmiBlitz3.ab3@17353>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002DF10 <AmiBlitz3.ab3@17354>   BSR writelong
0002DF12 <AmiBlitz3.ab3@17355>   MOVEQ #0,d1
0002DF16 <AmiBlitz3.ab3@17356>   BSR writeword
0002DF1C <AmiBlitz3.ab3@17357>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002DF20 <AmiBlitz3.ab3@17358>   BSR writelong
0002DF22 <AmiBlitz3.ab3@17359>   MOVEQ #0,d1
0002DF26 <AmiBlitz3.ab3@17360>   BSR writeword
0002DF2C <AmiBlitz3.ab3@17362> 'l1d  MOVE.l #$f23c5000,d1
0002DF2E <AmiBlitz3.ab3@17363>   MOVE.l d0,d2
0002DF30 <AmiBlitz3.ab3@17364>   ASR.l #2,d2
0002DF32 <AmiBlitz3.ab3@17365>   ADD.l d2,d1
0002DF36 <AmiBlitz3.ab3@17366>   BSR writelong
0002DF3A <AmiBlitz3.ab3@17367>   MOVE.w #$ffff,d1
0002DF3E <AmiBlitz3.ab3@17368>   BSR writeword
0002DF40 <AmiBlitz3.ab3@17372>   MOVE.l (a7)+,d1
0002DF42 <AmiBlitz3.ab3@17373>      ADDQ.l #1,a1
0002DF48 <AmiBlitz3.ab3@17374>      ADD.l #$0200,d0
0002DF4E <AmiBlitz3.ab3@17375>      CMP.l #$0e00,d0
0002DF52 <AmiBlitz3.ab3@17376>      BEQ syntaxerr
0002DF54 <AmiBlitz3.ab3@17377>      TST.b (a1)
0002DF58 <AmiBlitz3.ab3@17378>      BNE 'again
0002DF5C <AmiBlitz3.ab3@17379> BRA 'p1
0002DF60 <AmiBlitz3.ab3@17382>   TST.b $4(A2)
0002DF64 <AmiBlitz3.ab3@17383>    BNE.w JL_0_B03E
0002DF68 <AmiBlitz3.ab3@17386>   BSR.w JL_0_AFCA
0002DF6C <AmiBlitz3.ab3@17387>    BSR.w get1bytemain
0002DF70 <AmiBlitz3.ab3@17388> BRA.w JL_0_B06C
0002DF76 <AmiBlitz3.ab3@17392>   MOVE.w regnum,-(A7)
0002DF80 <AmiBlitz3.ab3@17393>   MOVE.w regnum,regnumfunc
0002DF82 <AmiBlitz3.ab3@17396>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002DF8A <AmiBlitz3.ab3@17397>   MOVE.b #1,funccall
0002DF8C <AmiBlitz3.ab3@17398>   MOVEQ.l #$00,D0
0002DF90 <AmiBlitz3.ab3@17399>   MOVE.b $4(A2),D0
0002DF9A <AmiBlitz3.ab3@17400>   MOVE.w a2offset,a2offset2
0002DFA2 <AmiBlitz3.ab3@17401>   MOVE.b 5(a2),retmode
0002DFA8 <AmiBlitz3.ab3@17402>   MOVE.l a2,currentfunccall
0002DFAC <AmiBlitz3.ab3@17403>   LEA $16(A2),A2
0002DFB2 <AmiBlitz3.ab3@17404>   CLR.w regnum
0002DFB8 <AmiBlitz3.ab3@17405>   CLR.w regmask
0002DFBE <AmiBlitz3.ab3@17406>   MOVE.b isconstantvalue,-(a7)
0002DFC4 <AmiBlitz3.ab3@17407>   MOVE.b funcparloop,-(a7)
0002DFCC <AmiBlitz3.ab3@17408>   MOVE.b #1,funcparloop
0002DFD2 <AmiBlitz3.ab3@17409>   MOVE.l rightsidetype,-(a7)
0002DFD8 <AmiBlitz3.ab3@17410>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002DFDE <AmiBlitz3.ab3@17411>   MOVE.b blitzparloop,-(a7)
0002DFE4 <AmiBlitz3.ab3@17412>   CLR.b blitzparloop
0002DFEA <AmiBlitz3.ab3@17413>   JSR fetchpees2
0002DFF0 <AmiBlitz3.ab3@17414>   MOVE.b (a7)+,blitzparloop
0002DFF6 <AmiBlitz3.ab3@17415>   MOVE.l (a7)+,leftsidetype
0002DFFC <AmiBlitz3.ab3@17416>   MOVE.l (a7)+,rightsidetype
0002E002 <AmiBlitz3.ab3@17417>   MOVE.b (a7)+,funcparloop
0002E008 <AmiBlitz3.ab3@17418>   MOVE.b (a7)+,isconstantvalue
0002E00E <AmiBlitz3.ab3@17419>   JSR chkstak
0002E010 <AmiBlitz3.ab3@17420>   MOVE.l (A7)+,D1
0002E014 <AmiBlitz3.ab3@17436>    BTST #0,d1
0002E018 <AmiBlitz3.ab3@17437>    BNE intern1
0002E01C <AmiBlitz3.ab3@17438>    BSR.w JL_0_AFCA
0002E022 <AmiBlitz3.ab3@17460>   MOVE.w (A7)+,regnum
0002E026 <AmiBlitz3.ab3@17463>   CMP.w #"}",D0
0002E02A <AmiBlitz3.ab3@17464>    BNE.w errorbracketmiss2
0002E02C <AmiBlitz3.ab3@17465>    MOVEQ #0,d1                                            ; end of function call pars
0002E032 <AmiBlitz3.ab3@17466>   MOVE.w regnum,D1
0002E036 <AmiBlitz3.ab3@17467>    BEQ.w JL_0_B08A
0002E03C <AmiBlitz3.ab3@17468>    TST.b fpu
0002E040 <AmiBlitz3.ab3@17469>    BEQ 'old
0002E048 <AmiBlitz3.ab3@17470>    CMP.b #5,retmode
0002E04C <AmiBlitz3.ab3@17471>    BNE 'old
0002E04E <AmiBlitz3.ab3@17472>    ASL.l #7,d1
0002E054 <AmiBlitz3.ab3@17473>    OR.l #$f2000000,d1
0002E058 <AmiBlitz3.ab3@17474>    BSR writelong
0002E05C <AmiBlitz3.ab3@17475> BRA JL_0_B08A
0002E05E <AmiBlitz3.ab3@17477>  'old  LSL.w #8,D1
0002E060 <AmiBlitz3.ab3@17478>   LSL.w #1,D1
0002E064 <AmiBlitz3.ab3@17479>   ORI.w #$2000,D1
0002E068 <AmiBlitz3.ab3@17480>    BSR.w writeword
0002E06A <AmiBlitz3.ab3@17483>    MOVE.w (A7)+,D3
0002E06E <AmiBlitz3.ab3@17484>    BEQ.w JL_0_B0A8
0002E074 <AmiBlitz3.ab3@17485>    TST.b fpu
0002E078 <AmiBlitz3.ab3@17486>    BEQ 'old
0002E07A <AmiBlitz3.ab3@17487>    MOVE.l d0,-(a7)
0002E07E <AmiBlitz3.ab3@17488>    MOVE.w #8,d0
0002E080 <AmiBlitz3.ab3@17489>    MOVE.l a0,-(a7)
0002E086 <AmiBlitz3.ab3@17490>    MOVE.l stacktrack,d1
0002E08C <AmiBlitz3.ab3@17491>    LEA fpustackbase,a0
0002E094 <AmiBlitz3.ab3@17492>    MOVE.w 0(a0,d1),regmask
0002E096 <AmiBlitz3.ab3@17493>    MOVE.l (a7)+,a0
0002E09A <AmiBlitz3.ab3@17496>   BEQ 'ready
0002E0A0 <AmiBlitz3.ab3@17497>    BTST d0,regmask
0002E0A4 <AmiBlitz3.ab3@17498>    BEQ 'noa7
0002E0A6 <AmiBlitz3.ab3@17499>    MOVEQ #0,d1
0002E0A8 <AmiBlitz3.ab3@17500>    MOVE.w d0,d1
0002E0AA <AmiBlitz3.ab3@17501>    SUBQ.w #1,d1
0002E0AC <AmiBlitz3.ab3@17502>    ASL #7,d1
0002E0B2 <AmiBlitz3.ab3@17504>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002E0B6 <AmiBlitz3.ab3@17505>    BSR writelong
0002E0BC <AmiBlitz3.ab3@17506>    SUBQ.l #2,stacktrack
0002E0BE <AmiBlitz3.ab3@17509>    SUBQ.w #1,d0
0002E0C2 <AmiBlitz3.ab3@17510>    BNE 'loop
0002E0C8 <AmiBlitz3.ab3@17513>   SUBQ.l #2,stacktrack                                     ;integer sub
0002E0CA <AmiBlitz3.ab3@17514>   MOVE.l (a7)+,d0
0002E0CE <AmiBlitz3.ab3@17517>   MOVE.w #$4CDF,D1
0002E0D2 <AmiBlitz3.ab3@17518>    BSR.w writeword
0002E0D4 <AmiBlitz3.ab3@17519>   MOVEQ.l #$00,D1
0002E0D6 <AmiBlitz3.ab3@17520>   MOVEQ.l #$0F,D4
0002E0D8 <AmiBlitz3.ab3@17523>     LSL.w #1,D3
0002E0DA <AmiBlitz3.ab3@17524>     ROXR.w #1,D1
0002E0DE <AmiBlitz3.ab3@17525>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002E0E2 <AmiBlitz3.ab3@17527>     BSR.w writeword
0002E0E8 <AmiBlitz3.ab3@17528>    CLR.w regnumfunc
0002E0EA <AmiBlitz3.ab3@17531>   MOVE.w (A7)+,D1
0002E0EE <AmiBlitz3.ab3@17532>    BEQ.b JL_0_B0D2
0002E0F2 <AmiBlitz3.ab3@17533>   CMPI.w #$7,(A7)
0002E0F6 <AmiBlitz3.ab3@17534>    BEQ.b JL_0_B0C4
0002E0FC <AmiBlitz3.ab3@17535>   LEA geta3,A0
0002E102 <AmiBlitz3.ab3@17536>   LEA numtoa0,A1
0002E106 <AmiBlitz3.ab3@17537>    BSR.w pokecode
0002E10A <AmiBlitz3.ab3@17538> BRA.b JL_0_B0CE
0002E110 <AmiBlitz3.ab3@17541>   MOVE.w deca3,D1
0002E114 <AmiBlitz3.ab3@17542>    BSR.w writeword
0002E118 <AmiBlitz3.ab3@17545>   BSR.w dopulla3                                           ;fix up string base
0002E11A <AmiBlitz3.ab3@17548>   MOVE.w (A7)+,D2                                          ;what it returns!
0002E11E <AmiBlitz3.ab3@17549>   CMP.w #$7,D2
0002E122 <AmiBlitz3.ab3@17550>    BNE.w JL_0_B0EC
0002E128 <AmiBlitz3.ab3@17551>   MOVE.w putstlen,D1
0002E12E <AmiBlitz3.ab3@17552>   OR.w regnum,D1
0002E132 <AmiBlitz3.ab3@17553>    BSR.w writeword
0002E136 <AmiBlitz3.ab3@17556>   BSR.w get1bytemain
0002E13A <AmiBlitz3.ab3@17557> BRA.w JL_0_AF66
0002E13C <AmiBlitz3.ab3@17561> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002E144 <AmiBlitz3.ab3@17566>   CMP.b #2,optistring
0002E148 <AmiBlitz3.ab3@17567>   BEQ fs2
0002E14C <AmiBlitz3.ab3@17568>   BSR.w makesbase                                          ;writestringvariable
0002E150 <AmiBlitz3.ab3@17569>   BTST #$F,D2
0002E154 <AmiBlitz3.ab3@17570>    BNE.w JL_0_B112
0002E15A <AmiBlitz3.ab3@17571>   MOVE.w D3,leaa5d3a2+2
0002E160 <AmiBlitz3.ab3@17572>   MOVE.l leaa5d3a2,D1
0002E164 <AmiBlitz3.ab3@17573>    BSR.w pokela5s
0002E16A <AmiBlitz3.ab3@17576>   MOVE.w regnum,D1
0002E16C <AmiBlitz3.ab3@17577>   LSL.w #8,D1
0002E16E <AmiBlitz3.ab3@17578>   LSL.w #1,D1
0002E172 <AmiBlitz3.ab3@17579>   ORI.w #$7000,D1
0002E178 <AmiBlitz3.ab3@17580>   LEA stvarget2,A0
0002E17A <AmiBlitz3.ab3@17581>   MOVE.w D1,(A0)
0002E180 <AmiBlitz3.ab3@17582>   MOVE.w regnum,D1
0002E186 <AmiBlitz3.ab3@17583>   ANDI.w #$FFF8,$2(A0)
0002E18A <AmiBlitz3.ab3@17584>   OR.w D1,$2(A0)
0002E190 <AmiBlitz3.ab3@17585>   LEA stvarget2f,A1
0002E194 <AmiBlitz3.ab3@17586>    BSR.w pokecode
0002E198 <AmiBlitz3.ab3@17587>   MOVE.w #$C600,D1
0002E19C <AmiBlitz3.ab3@17588>    BSR.w Atokejsr
0002E19E <AmiBlitz3.ab3@17589>   MOVEQ.l #$07,D2
0002E1A2 <AmiBlitz3.ab3@17590> BRA.w reget
0002E1A8 <AmiBlitz3.ab3@17593>      TST.w stackpar
0002E1AC <AmiBlitz3.ab3@17594>      BMI 'l10
0002E1B2 <AmiBlitz3.ab3@17595>      MOVE.l #$3f3c0007,d1
0002E1B8 <AmiBlitz3.ab3@17596>      ADDQ.w #2,a2offset
0002E1BC <AmiBlitz3.ab3@17597>      BSR writelong
0002E1C0 <AmiBlitz3.ab3@17600>   MOVE.w #$4878,d1
0002E1C6 <AmiBlitz3.ab3@17601>      CLR.w stackpar
0002E1CA <AmiBlitz3.ab3@17602>      BSR writeword
0002E1CE <AmiBlitz3.ab3@17603>      MOVE.w #$0,d1
0002E1D2 <AmiBlitz3.ab3@17604>      BSR writeword
0002E1D6 <AmiBlitz3.ab3@17605>      MOVE.w #$246d,d1
0002E1DA <AmiBlitz3.ab3@17606>      BSR writeword
0002E1DC <AmiBlitz3.ab3@17607>      MOVE.w d3,d1
0002E1E0 <AmiBlitz3.ab3@17608>      BSR writeword
0002E1E6 <AmiBlitz3.ab3@17609>      MOVE.l #$4a926704,d1
0002E1EA <AmiBlitz3.ab3@17610>      BSR writelong
0002E1F0 <AmiBlitz3.ab3@17611>      MOVE.l #$2eaafffc,d1
0002E1F4 <AmiBlitz3.ab3@17612>      BSR writelong
0002E1F8 <AmiBlitz3.ab3@17613>      MOVE.w #$2f0a,d1
0002E1FE <AmiBlitz3.ab3@17614>      ADDQ.w #8,a2offset
0002E202 <AmiBlitz3.ab3@17615>      BSR writeword
0002E206 <AmiBlitz3.ab3@17616> BRA.w reget
0002E20A <AmiBlitz3.ab3@17619>   CMP.b #$7,D2                                             ;load basic var
0002E20E <AmiBlitz3.ab3@17620>    BEQ.w JL_0_B0F6
0002E214 <AmiBlitz3.ab3@17622>    TST.b iee
0002E218 <AmiBlitz3.ab3@17623>    BEQ 'noiee
0002E21C <AmiBlitz3.ab3@17624>    CMP.b #5,d2
0002E220 <AmiBlitz3.ab3@17625>    BNE 'noiee
0002E222 <AmiBlitz3.ab3@17626>    MOVE.l d0,-(a7)                                         ;fpu load var
0002E226 <AmiBlitz3.ab3@17627>    BTST #15,d2
0002E22A <AmiBlitz3.ab3@17628>    BEQ 'var
0002E230 <AmiBlitz3.ab3@17629>    CMP.l #$7fff,d3
0002E234 <AmiBlitz3.ab3@17630>    BGT 'longoffset
0002E23A <AmiBlitz3.ab3@17631>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002E23C <AmiBlitz3.ab3@17632>    TST.w d3                                                ;offset =0
0002E240 <AmiBlitz3.ab3@17633>    BNE 'offset
0002E246 <AmiBlitz3.ab3@17636>   MOVE.l #$f2124400,d1
0002E248 <AmiBlitz3.ab3@17637>    MOVEQ #0,d3
0002E24C <AmiBlitz3.ab3@17638> BRA 'glob
0002E252 <AmiBlitz3.ab3@17641>   SUBQ.l #4,destpointer
0002E256 <AmiBlitz3.ab3@17642> BRA 'glob
0002E25C <AmiBlitz3.ab3@17645>   TST.b fast
0002E260 <AmiBlitz3.ab3@17646>    BEQ 'nofastload
0002E266 <AmiBlitz3.ab3@17647>    TST.w regnum
0002E26A <AmiBlitz3.ab3@17648>    BNE 'nofastload
0002E270 <AmiBlitz3.ab3@17649>    CMP.l fp0addr,a4
0002E274 <AmiBlitz3.ab3@17650>    BNE 'nofastload
0002E27A <AmiBlitz3.ab3@17651>    MOVE.l fp0iff,d1
0002E280 <AmiBlitz3.ab3@17652>    CMP.l firstiff,d1
0002E284 <AmiBlitz3.ab3@17653>    BNE 'nofastload
0002E28A <AmiBlitz3.ab3@17654>    MOVE.w varmode,d1
0002E290 <AmiBlitz3.ab3@17655>    CMP.w fp0mode,d1
0002E294 <AmiBlitz3.ab3@17656>    BNE 'nofastload
0002E29A <AmiBlitz3.ab3@17657>    CMP.w fp0var,d3
0002E29E <AmiBlitz3.ab3@17658>    BNE 'nofastload
0002E2A2 <AmiBlitz3.ab3@17659>    BCLR #16,d2
0002E2A4 <AmiBlitz3.ab3@17660>    MOVE.l (a7)+,d0
0002E2A6 <AmiBlitz3.ab3@17661> RTS
0002E2A8 <AmiBlitz3.ab3@17664>    MOVEQ #0,d0
0002E2AE <AmiBlitz3.ab3@17665>    MOVE.w regnum,d0
0002E2B4 <AmiBlitz3.ab3@17666>    CMP.l maxregs,d0
0002E2B8 <AmiBlitz3.ab3@17667>    BLE 'ok
0002E2BE <AmiBlitz3.ab3@17668>    LEA cmplxerr,a0
0002E2C0 <AmiBlitz3.ab3@17669>   MOVE.l a0,-(a7)
0002E2C6 <AmiBlitz3.ab3@17670> JMP handle_compileerror
0002E2CC <AmiBlitz3.ab3@17673>    LEA regtable,a4
0002E2CE <AmiBlitz3.ab3@17674>    TST.l (a4)
0002E2D2 <AmiBlitz3.ab3@17675>    BEQ 'noreg
0002E2D6 <AmiBlitz3.ab3@17676>    CMP.w 0+4(a4),d3
0002E2DA <AmiBlitz3.ab3@17677>    BNE 'doreg1
0002E2E0 <AmiBlitz3.ab3@17678>    MOVE.l #$f2001c00,d1
0002E2E6 <AmiBlitz3.ab3@17679>    MOVE.w regnum,d0
0002E2E8 <AmiBlitz3.ab3@17680>    ASL.w #7,d0
0002E2EA <AmiBlitz3.ab3@17681>    OR.w d0,d1
0002E2EE <AmiBlitz3.ab3@17682>    BSR writelong
0002E2F0 <AmiBlitz3.ab3@17683>    MOVE.l (a7)+,d0
0002E2F2 <AmiBlitz3.ab3@17684> RTS
0002E2F6 <AmiBlitz3.ab3@17687>   CMP.w 8+4(a4),d3
0002E2FA <AmiBlitz3.ab3@17688>    BNE 'doreg2
0002E300 <AmiBlitz3.ab3@17689>    MOVE.l #$f2001800,d1
0002E306 <AmiBlitz3.ab3@17690>    MOVE.w regnum,d0
0002E308 <AmiBlitz3.ab3@17691>    ASL.w #7,d0
0002E30A <AmiBlitz3.ab3@17692>    OR.w d0,d1
0002E30E <AmiBlitz3.ab3@17693>    BSR writelong
0002E310 <AmiBlitz3.ab3@17694>    MOVE.l (a7)+,d0
0002E312 <AmiBlitz3.ab3@17695> RTS
0002E316 <AmiBlitz3.ab3@17698>   CMP.w 16+4(a4),d3
0002E31A <AmiBlitz3.ab3@17699>    BNE 'doreg3
0002E320 <AmiBlitz3.ab3@17700>    MOVE.l #$f2001400,d1
0002E326 <AmiBlitz3.ab3@17701>    MOVE.w regnum,d0
0002E328 <AmiBlitz3.ab3@17702>    ASL.w #7,d0
0002E32A <AmiBlitz3.ab3@17703>    OR.w d0,d1
0002E32E <AmiBlitz3.ab3@17704>    BSR  writelong
0002E330 <AmiBlitz3.ab3@17705>    MOVE.l (a7)+,d0
0002E332 <AmiBlitz3.ab3@17706> RTS
0002E336 <AmiBlitz3.ab3@17709>   CMP.w 24+4(a4),d3
0002E33A <AmiBlitz3.ab3@17710>    BNE 'doreg4
0002E340 <AmiBlitz3.ab3@17711>    MOVE.l #$f2001000,d1
0002E346 <AmiBlitz3.ab3@17712>    MOVE.w regnum,d0
0002E348 <AmiBlitz3.ab3@17713>    ASL.w #7,d0
0002E34A <AmiBlitz3.ab3@17714>    OR.w d0,d1
0002E34E <AmiBlitz3.ab3@17715>    BSR writelong
0002E350 <AmiBlitz3.ab3@17716>    MOVE.l (a7)+,d0
0002E352 <AmiBlitz3.ab3@17717> RTS
0002E356 <AmiBlitz3.ab3@17720>    CMP.w 32+4(a4),d3
0002E35A <AmiBlitz3.ab3@17721>    BNE 'noreg
0002E360 <AmiBlitz3.ab3@17722>    MOVE.l #$f2000c00,d1
0002E366 <AmiBlitz3.ab3@17723>    MOVE.w regnum,d0
0002E368 <AmiBlitz3.ab3@17724>    ASL.w #7,d0
0002E36A <AmiBlitz3.ab3@17725>    OR.w d0,d1
0002E36E <AmiBlitz3.ab3@17726>    BSR writelong
0002E370 <AmiBlitz3.ab3@17727>    MOVE.l (a7)+,d0
0002E372 <AmiBlitz3.ab3@17728> RTS
0002E378 <AmiBlitz3.ab3@17731>    MOVE.l #$f22d4400,d1                                    ;var
0002E37E <AmiBlitz3.ab3@17732>    TST.w varmode
0002E382 <AmiBlitz3.ab3@17733>   BEQ 'glob
0002E386 <AmiBlitz3.ab3@17734>   BCLR #16,d1                                              ;local
0002E388 <AmiBlitz3.ab3@17737>    MOVEQ #0,d0
0002E38E <AmiBlitz3.ab3@17738>    MOVE.w regnum,d0
0002E392 <AmiBlitz3.ab3@17739>    CMP.w #7,d0
0002E396 <AmiBlitz3.ab3@17740>    BLE 'ok2
0002E39C <AmiBlitz3.ab3@17741>    LEA cmplxerr,a0
0002E39E <AmiBlitz3.ab3@17742>   MOVE.l a0,-(a7)
0002E3A4 <AmiBlitz3.ab3@17743> JMP handle_compileerror
0002E3A6 <AmiBlitz3.ab3@17746>      ASL.w #7,d0
0002E3A8 <AmiBlitz3.ab3@17747>    OR.l d0,d1
0002E3B0 <AmiBlitz3.ab3@17748>    CMP.l #doublecheck,8(a2)
0002E3B4 <AmiBlitz3.ab3@17749>    BNE 'dbl
0002E3BA <AmiBlitz3.ab3@17750>    OR.l #$00001000,d1
0002E3BE <AmiBlitz3.ab3@17753>   BSR writelong
0002E3C0 <AmiBlitz3.ab3@17754>    MOVE.l (a7)+,d0
0002E3C4 <AmiBlitz3.ab3@17755>    AND.w #$ff,d2
0002E3C6 <AmiBlitz3.ab3@17756>    MOVE.w d3,d1
0002E3CA <AmiBlitz3.ab3@17757>    BEQ 'nooffs
0002E3CE <AmiBlitz3.ab3@17758> BRA writeword
0002E3D0 <AmiBlitz3.ab3@17763> RTS
0002E3D6 <AmiBlitz3.ab3@17766>   MOVE.w regnum,D1
0002E3DC <AmiBlitz3.ab3@17767>   MOVE.w d1,load_var_reg
0002E3DE <AmiBlitz3.ab3@17768>   LSL.w #8,D1
0002E3E8 <AmiBlitz3.ab3@17769>   MOVE.l destpointer,load_var_addr
0002E3EE <AmiBlitz3.ab3@17770>   MOVE.w d2,load_var_size
0002E3F0 <AmiBlitz3.ab3@17771>   LSL.w #1,D1
0002E3F4 <AmiBlitz3.ab3@17772>   BTST #$E,D2
0002E3F8 <AmiBlitz3.ab3@17773>    BNE.w JL_0_B17A
0002E3FA <AmiBlitz3.ab3@17774>   TST.b D2
0002E3FE <AmiBlitz3.ab3@17775>    BNE.w JL_0_B17E
0002E400 <AmiBlitz3.ab3@17776>   MOVEQ.l #$03,D2
0002E404 <AmiBlitz3.ab3@17777>   ORI.w #$200A,D1
0002E408 <AmiBlitz3.ab3@17778> BRA.w writeword
0002E40C <AmiBlitz3.ab3@17781>   MOVE.b #$3,D2
0002E410 <AmiBlitz3.ab3@17784>   BTST #$F,D2
0002E414 <AmiBlitz3.ab3@17785>    BEQ.w JL_0_B19A                                         ;loadarray
0002E41A <AmiBlitz3.ab3@17786>    TST.b fast                                              ;lea->move xx(a2)
0002E41E <AmiBlitz3.ab3@17787>    BEQ 'la10
0002E424 <AmiBlitz3.ab3@17792>    CLR.l load_var_addr
0002E428 <AmiBlitz3.ab3@17793> BRA 'la10
0002E430 <AmiBlitz3.ab3@17795>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002E434 <AmiBlitz3.ab3@17796>    BNE 'la10
0002E43A <AmiBlitz3.ab3@17797>    TST.b optiarray
0002E43E <AmiBlitz3.ab3@17798>    BNE 'la10
0002E444 <AmiBlitz3.ab3@17799>    MOVE.l destpointer,a4
0002E44A <AmiBlitz3.ab3@17800>    SUB.l loada,a4
0002E44E <AmiBlitz3.ab3@17801>    CMP.w #4,a4
0002E452 <AmiBlitz3.ab3@17802>    BEQ 'la100
0002E456 <AmiBlitz3.ab3@17803>    CMP.w #2,a4
0002E45A <AmiBlitz3.ab3@17804>    BNE 'la10
0002E460 <AmiBlitz3.ab3@17805>    MOVE.l destpointer,a4
0002E464 <AmiBlitz3.ab3@17806>    CMP.b #3,d2
0002E468 <AmiBlitz3.ab3@17807>    BCS 'la110
0002E46E <AmiBlitz3.ab3@17808>    MOVE.w #$202a,-2(a4)
0002E472 <AmiBlitz3.ab3@17809>    OR.w d1,-2(a4)
0002E478 <AmiBlitz3.ab3@17810>    MOVE.w arrayoffset,d1
0002E47C <AmiBlitz3.ab3@17811>    BSR writeword
0002E480 <AmiBlitz3.ab3@17812> BRA JL_0_B194
0002E484 <AmiBlitz3.ab3@17815>    CMP.b #2,d2
0002E488 <AmiBlitz3.ab3@17816>    BNE 'la120
0002E48E <AmiBlitz3.ab3@17817>     MOVE.w #$302a,-2(a4)
0002E492 <AmiBlitz3.ab3@17818>    OR.w d1,-2(a4)
0002E498 <AmiBlitz3.ab3@17820>    MOVE.w arrayoffset,d1
0002E49C <AmiBlitz3.ab3@17821>    BSR writeword
0002E4A0 <AmiBlitz3.ab3@17822> BRA JL_0_B194
0002E4A4 <AmiBlitz3.ab3@17825>   CMP.b #1,d2
0002E4A8 <AmiBlitz3.ab3@17826>    BNE.s 'la10
0002E4AE <AmiBlitz3.ab3@17827>     MOVE.w #$102a,-2(a4)
0002E4B2 <AmiBlitz3.ab3@17828>    OR.w d1,-2(a4)
0002E4B8 <AmiBlitz3.ab3@17829>    MOVE.w arrayoffset,d1
0002E4BC <AmiBlitz3.ab3@17830>    BSR writeword
0002E4C0 <AmiBlitz3.ab3@17831> BRA JL_0_B194
0002E4C6 <AmiBlitz3.ab3@17834>   MOVE.l destpointer,a4
0002E4CC <AmiBlitz3.ab3@17835>    CMP.w #$45ea,-2(a4)
0002E4D0 <AmiBlitz3.ab3@17836>    BNE 'la10
0002E4D4 <AmiBlitz3.ab3@17837>    CMP.b #3,d2
0002E4D8 <AmiBlitz3.ab3@17838>    BCS 'la11
0002E4DE <AmiBlitz3.ab3@17839>    MOVE.w #$202a,-4(a4)
0002E4E2 <AmiBlitz3.ab3@17840>    OR.w d1,-4(a4)
0002E4E6 <AmiBlitz3.ab3@17841> BRA JL_0_B194
0002E4EA <AmiBlitz3.ab3@17844>    CMP.b #2,d2
0002E4EE <AmiBlitz3.ab3@17845>    BNE 'la12
0002E4F4 <AmiBlitz3.ab3@17846>     MOVE.w #$302a,-4(a4)
0002E4F8 <AmiBlitz3.ab3@17847>    OR.w d1,-4(a4)
0002E4FC <AmiBlitz3.ab3@17848> BRA JL_0_B194
0002E500 <AmiBlitz3.ab3@17851>   CMP.b #1,d2
0002E504 <AmiBlitz3.ab3@17852>    BNE.s 'la10
0002E50A <AmiBlitz3.ab3@17853>     MOVE.w #$102a,-4(a4)
0002E50E <AmiBlitz3.ab3@17854>    OR.w d1,-4(a4)
0002E512 <AmiBlitz3.ab3@17855> BRA JL_0_B194
0002E518 <AmiBlitz3.ab3@17858>    OR.w movea2dn,D1
0002E51C <AmiBlitz3.ab3@17859>    BSR.w JL_0_B1B2
0002E520 <AmiBlitz3.ab3@17860>    BSR.w writeword
0002E524 <AmiBlitz3.ab3@17863>   ANDI.w #$FF,D2
0002E526 <AmiBlitz3.ab3@17864> RTS
0002E52C <AmiBlitz3.ab3@17868>    MOVE.l destpointer,a4
0002E534 <AmiBlitz3.ab3@17869>    MOVE.l #$f22a4400,-4(a4)
0002E53A <AmiBlitz3.ab3@17870>    MOVE.w arrayoffset,d1
0002E53E <AmiBlitz3.ab3@17871> BRA writeword
0002E544 <AmiBlitz3.ab3@17875>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002E548 <AmiBlitz3.ab3@17876>    BSR.w JL_0_B1B2
0002E54C <AmiBlitz3.ab3@17877>    BSR.w pokewda5s
0002E54E <AmiBlitz3.ab3@17878>   MOVE.w D3,D1
0002E552 <AmiBlitz3.ab3@17879>    BSR.w writeword
0002E556 <AmiBlitz3.ab3@17880> BRA.w JL_0_B194
0002E55A <AmiBlitz3.ab3@17883>   BTST #$E,D2
0002E55E <AmiBlitz3.ab3@17884>    BNE.w JL_0_B1CA
0002E562 <AmiBlitz3.ab3@17885>   CMP.b #$1,D2
0002E566 <AmiBlitz3.ab3@17886>    BEQ.w JL_0_B1CC
0002E56A <AmiBlitz3.ab3@17887>   CMP.b #$2,D2
0002E56E <AmiBlitz3.ab3@17888>    BEQ.w JL_0_B1D2
0002E570 <AmiBlitz3.ab3@17891> RTS
0002E574 <AmiBlitz3.ab3@17894>   EORI.w #$3000,D1
0002E576 <AmiBlitz3.ab3@17895> RTS
0002E57A <AmiBlitz3.ab3@17898>   ORI.w #$1000,D1
0002E57C <AmiBlitz3.ab3@17899> RTS
0002E584 <AmiBlitz3.ab3@17903>   MOVE.w #$FFFF,dfetch
0002E588 <AmiBlitz3.ab3@17904>   BSR.w get1bytemain
0002E58C <AmiBlitz3.ab3@17905>   CMP.w #$2D,D0
0002E590 <AmiBlitz3.ab3@17906>    BNE.w JL_0_B206
0002E594 <AmiBlitz3.ab3@17907>   BSR.w get1bytemain
0002E598 <AmiBlitz3.ab3@17908>   BSR.w JL_0_B206
0002E59C <AmiBlitz3.ab3@17909>   CMP.w #$5,D2
0002E5A0 <AmiBlitz3.ab3@17910>    BCC.w JL_0_B200
0002E5A2 <AmiBlitz3.ab3@17911>   NEG.l D0
0002E5A4 <AmiBlitz3.ab3@17912> RTS
0002E5AA <AmiBlitz3.ab3@17915>   TST.b fpu
0002E5AE <AmiBlitz3.ab3@17916>   BEQ 'noneg
0002E5B2 <AmiBlitz3.ab3@17917>   fneg.x fp0
0002E5B4 <AmiBlitz3.ab3@17918> RTS
0002E5B8 <AmiBlitz3.ab3@17921>   BCHG #$7,D0
0002E5BA <AmiBlitz3.ab3@17922> RTS
0002E5BE <AmiBlitz3.ab3@17925>   CMP.w #$24,D0
0002E5C2 <AmiBlitz3.ab3@17926>    BEQ.w get_hexconstant
0002E5C6 <AmiBlitz3.ab3@17927>   CMP.w #$25,D0
0002E5CA <AmiBlitz3.ab3@17928>    BEQ.w JL_0_A8C0
0002E5CE <AmiBlitz3.ab3@17929>   CMP.w #$2E,D0
0002E5D2 <AmiBlitz3.ab3@17930>    BNE.w JL_0_B224
0002E5D4 <AmiBlitz3.ab3@17933>   MOVEQ.l #$00,D3
0002E5D8 <AmiBlitz3.ab3@17934> BRA.w JL_0_B272
0002E5DA <AmiBlitz3.ab3@17937>   MOVEQ.l #$00,D3                                          ;number
0002E5DE <AmiBlitz3.ab3@17938>    BSR.w atoi
0002E5E2 <AmiBlitz3.ab3@17939>   CMP.w #$2E,D0
0002E5E6 <AmiBlitz3.ab3@17940>    BEQ.w JL_0_B268
0002E5EA <AmiBlitz3.ab3@17941>   ORI.w #$20,D0
0002E5EE <AmiBlitz3.ab3@17942>   CMP.w #$65,D0
0002E5F2 <AmiBlitz3.ab3@17943>    BNE.w JL_0_B46E
0002E5F8 <AmiBlitz3.ab3@17944>   CMP.l #$800000,D3
0002E5FC <AmiBlitz3.ab3@17945>    BCC.w overerr
0002E5FE <AmiBlitz3.ab3@17946>   MOVEQ.l #-$01,D6
0002E602 <AmiBlitz3.ab3@17947>   fmove.l d3,fp0
0002E604 <AmiBlitz3.ab3@17948>   MOVE.l D3,D0
0002E60A <AmiBlitz3.ab3@17949>   MOVEA.l _mathffpbase,A6
0002E60E <AmiBlitz3.ab3@17950>    JSR -$24(A6)
0002E610 <AmiBlitz3.ab3@17951>   MOVE.l D0,D3
0002E614 <AmiBlitz3.ab3@17952>    BSR.w JL_0_B2E6
0002E618 <AmiBlitz3.ab3@17953>    BSR.w reget
0002E61C <AmiBlitz3.ab3@17954>    BSR.w JL_0_B480
0002E620 <AmiBlitz3.ab3@17955> BRA.w JL_0_B3DC
0002E624 <AmiBlitz3.ab3@17958>   CMP.b #4,d2
0002E628 <AmiBlitz3.ab3@17959>   BEQ 'l4
0002E62C <AmiBlitz3.ab3@17960>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002E632 <AmiBlitz3.ab3@17963>    TST.b fpu
0002E636 <AmiBlitz3.ab3@17964>    BNE 'l1
0002E63C <AmiBlitz3.ab3@17965>    CMP.l #$800000,D3
0002E640 <AmiBlitz3.ab3@17966>    BCC.w overerr
0002E644 <AmiBlitz3.ab3@17967> BRA JL_0_B272
0002E64A <AmiBlitz3.ab3@17970>   CMP.l #$7fffffff,d3
0002E64E <AmiBlitz3.ab3@17971>     BCC.w overerr
0002E650 <AmiBlitz3.ab3@17974>   MOVEQ.l #-$01,D6
0002E652 <AmiBlitz3.ab3@17975>   MOVE.l D3,D0
0002E656 <AmiBlitz3.ab3@17976>   fmove.l d3,fp0
0002E65C <AmiBlitz3.ab3@17977>   MOVEA.l _mathffpbase,A6
0002E660 <AmiBlitz3.ab3@17978>    JSR -$24(A6)                                            ;integer to ffp
0002E662 <AmiBlitz3.ab3@17979>   MOVE.l D0,-(A7)
0002E666 <AmiBlitz3.ab3@17980>    BSR.w get1bytemain
0002E66A <AmiBlitz3.ab3@17981>    BSR.w tstnum
0002E66E <AmiBlitz3.ab3@17982>    BNE.w syntaxerr
0002E670 <AmiBlitz3.ab3@17983>   MOVEQ.l #$00,D3
0002E674 <AmiBlitz3.ab3@17984>    BSR.w atoi
0002E676 <AmiBlitz3.ab3@17985>   TST.l D3
0002E67A <AmiBlitz3.ab3@17986>    BEQ.w JL_0_B2E0
0002E680 <AmiBlitz3.ab3@17987>   TST.b fpu
0002E684 <AmiBlitz3.ab3@17988>   BNE 'l1
0002E68A <AmiBlitz3.ab3@17989>   CMP.l #$800000,D3
0002E68E <AmiBlitz3.ab3@17990>    BCC.w overerr
0002E692 <AmiBlitz3.ab3@17991> BRA 'l2
0002E698 <AmiBlitz3.ab3@17994>   CMP.l #$7fffffff,d3
0002E69C <AmiBlitz3.ab3@17995>   BCC overerr
0002E6A0 <AmiBlitz3.ab3@17998>   fmove.l d5,fp1
0002E6A2 <AmiBlitz3.ab3@17999>   MOVE.l D5,D0
0002E6A6 <AmiBlitz3.ab3@18000>    JSR -$24(A6)
0002E6A8 <AmiBlitz3.ab3@18001>   MOVE.l D0,D5
0002E6AC <AmiBlitz3.ab3@18002>   fmove.l d3,fp2
0002E6AE <AmiBlitz3.ab3@18003>   MOVE.l D3,D0
0002E6B2 <AmiBlitz3.ab3@18004>    JSR -$24(A6)
0002E6B6 <AmiBlitz3.ab3@18005>   fdiv.x fp1,fp2
0002E6B8 <AmiBlitz3.ab3@18006>   MOVE.l D5,D1
0002E6BC <AmiBlitz3.ab3@18007>    JSR -$54(A6)
0002E6C0 <AmiBlitz3.ab3@18008>   fadd.x fp2,fp0
0002E6C2 <AmiBlitz3.ab3@18009>   MOVE.l (A7)+,D1
0002E6C6 <AmiBlitz3.ab3@18010>    JSR -$42(A6)
0002E6C8 <AmiBlitz3.ab3@18011>   MOVE.l D0,D3
0002E6CC <AmiBlitz3.ab3@18012>    BSR.w reget
0002E6D0 <AmiBlitz3.ab3@18013>   ORI.w #$20,D0
0002E6D4 <AmiBlitz3.ab3@18014>   CMP.w #$65,D0
0002E6D8 <AmiBlitz3.ab3@18015>    BNE.w JL_0_B2D4
0002E6DC <AmiBlitz3.ab3@18016>    BSR.w JL_0_B2E6
0002E6E0 <AmiBlitz3.ab3@18019>    BSR.w reget
0002E6E4 <AmiBlitz3.ab3@18020>    BSR.w JL_0_B480
0002E6E8 <AmiBlitz3.ab3@18021> BRA.w JL_0_B3DC
0002E6EA <AmiBlitz3.ab3@18024>   MOVE.l (A7)+,D3
0002E6EE <AmiBlitz3.ab3@18025> BRA.w JL_0_B2D4
0002E6F2 <AmiBlitz3.ab3@18028>   BSR.w get1bytemain
0002E6F6 <AmiBlitz3.ab3@18029>   CMP.w #$2B,D0
0002E6FA <AmiBlitz3.ab3@18030>    BEQ.w JL_0_B30E
0002E6FE <AmiBlitz3.ab3@18031>   CMP.w #$2D,D0
0002E702 <AmiBlitz3.ab3@18032>    BNE.w JL_0_B312
0002E706 <AmiBlitz3.ab3@18033>    BSR.w get1bytemain
0002E70A <AmiBlitz3.ab3@18034>    BSR.w getsign
0002E70C <AmiBlitz3.ab3@18035>   MOVE.l D3,D0
0002E710 <AmiBlitz3.ab3@18036>   fdiv.x fp1,fp0
0002E712 <AmiBlitz3.ab3@18037>   MOVE.l D4,D1
0002E716 <AmiBlitz3.ab3@18038>    JSR -$54(A6)
0002E718 <AmiBlitz3.ab3@18039>   MOVE.l D0,D3
0002E71A <AmiBlitz3.ab3@18040> RTS
0002E71E <AmiBlitz3.ab3@18043>   BSR.w get1bytemain
0002E722 <AmiBlitz3.ab3@18046>   BSR.w getsign
0002E726 <AmiBlitz3.ab3@18047>   fmul.x fp1,fp0
0002E728 <AmiBlitz3.ab3@18048>   MOVE.l D3,D0
0002E72A <AmiBlitz3.ab3@18049>   MOVE.l D4,D1
0002E72E <AmiBlitz3.ab3@18050>    JSR -$4E(A6)
0002E730 <AmiBlitz3.ab3@18051>   MOVE.l D0,D3
0002E732 <AmiBlitz3.ab3@18052> RTS
0002E736 <AmiBlitz3.ab3@18055>   BSR.w tstnum
0002E73A <AmiBlitz3.ab3@18056>    BNE.w syntaxerr
0002E73C <AmiBlitz3.ab3@18057>   MOVE.w D0,D4
0002E740 <AmiBlitz3.ab3@18058>   SUBI.w #$30,D4
0002E744 <AmiBlitz3.ab3@18059>    BSR.w get1bytemain
0002E748 <AmiBlitz3.ab3@18060>    BSR.w tstnum
0002E74C <AmiBlitz3.ab3@18061>    BNE.w getsign__skip
0002E750 <AmiBlitz3.ab3@18062>   MULU #$A,D4
0002E754 <AmiBlitz3.ab3@18063>   SUBI.w #$30,D0
0002E756 <AmiBlitz3.ab3@18064>   ADD.w D0,D4
0002E75A <AmiBlitz3.ab3@18065>    BSR.w get1bytemain
0002E75E <AmiBlitz3.ab3@18068>   CMP.w #$12,D4
0002E762 <AmiBlitz3.ab3@18069>    BHI.w overerr
0002E764 <AmiBlitz3.ab3@18070>   LSL.w #3,D4
0002E76A <AmiBlitz3.ab3@18071>   LEA fputab,a0
0002E76C <AmiBlitz3.ab3@18072>   ADD.l d4,a0
0002E772 <AmiBlitz3.ab3@18073>   fmove.d 0(a0),fp1
0002E774 <AmiBlitz3.ab3@18074>   LSR.w #1,d4
0002E778 <AmiBlitz3.ab3@18075>   MOVE.l facts(PC,D4.W),D4
0002E77A <AmiBlitz3.ab3@18076> RTS
0002E7C2 <AmiBlitz3.ab3@18080>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002E7C6 <AmiBlitz3.ab3@18085>   Dc.l $80000041
0002E7CA <AmiBlitz3.ab3@18086>   Dc.l $A0000044
0002E7CE <AmiBlitz3.ab3@18087>   Dc.l $C8000047
0002E7D2 <AmiBlitz3.ab3@18088>   Dc.l $FA00004A
0002E7D6 <AmiBlitz3.ab3@18089>   Dc.l $9C40004E
0002E7DA <AmiBlitz3.ab3@18090>   Dc.l $C3500051
0002E7DE <AmiBlitz3.ab3@18091>   Dc.l $F4240054
0002E7E2 <AmiBlitz3.ab3@18092>   Dc.l $98968058
0002E7E6 <AmiBlitz3.ab3@18093>   Dc.l $BEBC205B
0002E7EA <AmiBlitz3.ab3@18094>   Dc.l $EE6B285E
0002E7EE <AmiBlitz3.ab3@18095>   Dc.l $9502F962
0002E7F2 <AmiBlitz3.ab3@18096>   Dc.l $BA43B765
0002E7F6 <AmiBlitz3.ab3@18097>   Dc.l $E8D4A568
0002E7FA <AmiBlitz3.ab3@18098>   Dc.l $9184E76C
0002E7FE <AmiBlitz3.ab3@18099>   Dc.l $B5E6A96F
0002E802 <AmiBlitz3.ab3@18100>   Dc.l $E35F2972
0002E806 <AmiBlitz3.ab3@18101>   Dc.l $8E1BCA76
0002E80A <AmiBlitz3.ab3@18102>   Dc.l $B1A2BD79
0002E80E <AmiBlitz3.ab3@18103>   Dc.l $DE0B6C7C
0002E810 <AmiBlitz3.ab3@18107>   MOVEQ.l #$01,D5
0002E812 <AmiBlitz3.ab3@18110>   LSL.l #1,D5
0002E814 <AmiBlitz3.ab3@18111>   MOVE.l D5,D1
0002E816 <AmiBlitz3.ab3@18112>   LSL.l #2,D5
0002E818 <AmiBlitz3.ab3@18113>   ADD.l D1,D5                                              ;divisor for frac convert!
0002E81A <AmiBlitz3.ab3@18114>   LSL.l #1,D3
0002E81E <AmiBlitz3.ab3@18115>    BCS.w overerr
0002E820 <AmiBlitz3.ab3@18116>   MOVE.l D3,D1
0002E822 <AmiBlitz3.ab3@18117>   LSL.l #1,D3
0002E826 <AmiBlitz3.ab3@18118>    BCS.w overerr
0002E828 <AmiBlitz3.ab3@18119>   LSL.l #1,D3
0002E82C <AmiBlitz3.ab3@18120>    BCS.w overerr
0002E82E <AmiBlitz3.ab3@18121>   ADD.l D1,D3
0002E832 <AmiBlitz3.ab3@18122>   SUBI.w #$30,D0
0002E834 <AmiBlitz3.ab3@18123>   ADD.l D0,D3
0002E860 <AmiBlitz3.ab3@18124>    !fget                                                   ;bsr.w get1bytemain
0002E864 <AmiBlitz3.ab3@18125>    CMP.b #1,d0
0002E868 <AmiBlitz3.ab3@18126>    BNE 'cm1
0002E86A <AmiBlitz3.ab3@18127>    SUBQ.l #1,a5
0002E86E <AmiBlitz3.ab3@18128>    BSR get1bytemain                                        ;??wy not !fget
0002E872 <AmiBlitz3.ab3@18131>   CMP.b #$7e,d0
0002E876 <AmiBlitz3.ab3@18132>    BNE 'cm2
0002E878 <AmiBlitz3.ab3@18133>    SUBQ.l #1,a5
0002E87C <AmiBlitz3.ab3@18134>    BSR get1bytemain
0002E87E <AmiBlitz3.ab3@18137>   TST.b d0
0002E882 <AmiBlitz3.ab3@18138>    BPL 'l10
0002E884 <AmiBlitz3.ab3@18139>    LSL.w #8,d0
0002E886 <AmiBlitz3.ab3@18140>    MOVE.b (a5)+,d0
0002E88C <AmiBlitz3.ab3@18141>    MOVE.w d0,lastchar
0002E89E <AmiBlitz3.ab3@18144>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002E8A2 <AmiBlitz3.ab3@18145>    BEQ.w atoi__loop
0002E8A4 <AmiBlitz3.ab3@18146> RTS
0002E8A6 <AmiBlitz3.ab3@18149> dfetch:  Ds.w 1                                            ;fetching data?
0002E8AA <AmiBlitz3.ab3@18153>   MOVE.w dfetch(PC),D1
0002E8AE <AmiBlitz3.ab3@18154>    BEQ.w JL_0_B3EC
0002E8B4 <AmiBlitz3.ab3@18155>   CLR.w dfetch
0002E8B6 <AmiBlitz3.ab3@18156> RTS
0002E8BC <AmiBlitz3.ab3@18159>   MOVE.b d2,isconstantvalue
0002E8C2 <AmiBlitz3.ab3@18160>   MOVE.l d0,lastconstantvalue
0002E8C8 <AmiBlitz3.ab3@18161>   MOVE.w d2,imm_size
0002E8D2 <AmiBlitz3.ab3@18162>   MOVE.w regnum,imm_reg
0002E8DC <AmiBlitz3.ab3@18163>   MOVE.l destpointer,imm_addr                           ; long
0002E8E0 <AmiBlitz3.ab3@18164>   CMP.w #$3,D2
0002E8E4 <AmiBlitz3.ab3@18165>   BEQ.w JL_0_B434
0002E8E8 <AmiBlitz3.ab3@18166>   CMP.w #$5,D2                                          ;float
0002E8EC <AmiBlitz3.ab3@18167>   BEQ.w JL_0_B434
0002E8F0 <AmiBlitz3.ab3@18168>   CMP.w #$1,D2
0002E8F4 <AmiBlitz3.ab3@18169>   BEQ.w JL_0_B418
0002E8F8 <AmiBlitz3.ab3@18170>   CMP.w #$2,D2
0002E8FC <AmiBlitz3.ab3@18171>   BEQ.w JL_0_B418
0002E900 <AmiBlitz3.ab3@18172>   CMP.w #$4,D2
0002E904 <AmiBlitz3.ab3@18173>   BEQ.w JL_0_B434
0002E908 <AmiBlitz3.ab3@18175> BRA.w mismatcherr
0002E90E <AmiBlitz3.ab3@18178>   MOVE.w regnum,D1
0002E910 <AmiBlitz3.ab3@18179>   LSL.w #8,D1
0002E912 <AmiBlitz3.ab3@18180>   LSL.w #1,D1
0002E916 <AmiBlitz3.ab3@18181>   ORI.w #$303C,D1
0002E91A <AmiBlitz3.ab3@18182>    BSR.w writeword
0002E91C <AmiBlitz3.ab3@18183>   MOVE.w D0,D1
0002E920 <AmiBlitz3.ab3@18184>    BSR.w writeword
0002E924 <AmiBlitz3.ab3@18185> BRA.w reget
0002E926 <AmiBlitz3.ab3@18188>   MOVEQ #0,d1
0002E92C <AmiBlitz3.ab3@18189>   MOVE.w regnum,D1
0002E932 <AmiBlitz3.ab3@18190>   TST.b fpu
0002E936 <AmiBlitz3.ab3@18191>   BEQ 'f1
0002E93A <AmiBlitz3.ab3@18192>   CMP.w #5,d2
0002E93E <AmiBlitz3.ab3@18193>   BEQ 'l10
0002E942 <AmiBlitz3.ab3@18194> BRA 'f2
0002E948 <AmiBlitz3.ab3@18197>   TST.b iee
0002E94C <AmiBlitz3.ab3@18198>   BNE 'l10
0002E94E <AmiBlitz3.ab3@18201>   LSL.w #8,D1
0002E950 <AmiBlitz3.ab3@18202>   LSL.w #1,D1
0002E954 <AmiBlitz3.ab3@18203>   ORI.w #$203C,D1
0002E958 <AmiBlitz3.ab3@18204>    BSR.w writeword
0002E95A <AmiBlitz3.ab3@18205>   MOVE.l D0,D1
0002E95E <AmiBlitz3.ab3@18206>    BSR.w writelong
0002E962 <AmiBlitz3.ab3@18207> BRA.w reget
0002E964 <AmiBlitz3.ab3@18210>   MOVEQ #5,d2
0002E966 <AmiBlitz3.ab3@18211>   ASL.l #7,d1
0002E968 <AmiBlitz3.ab3@18212>   SUBQ.l #8,a7
0002E96E <AmiBlitz3.ab3@18217>       OR.l #$f23c4400,d1                                   ;fmove.s
0002E974 <AmiBlitz3.ab3@18218>        fmove.s fp0,0(a7)
0002E978 <AmiBlitz3.ab3@18220>   BSR writelong
0002E97A <AmiBlitz3.ab3@18221>   MOVE.l (a7)+,d1
0002E97E <AmiBlitz3.ab3@18222>   BSR writelong
0002E980 <AmiBlitz3.ab3@18223>   MOVE.l (a7)+,d1
0002E984 <AmiBlitz3.ab3@18227> BRA.w reget
0002E986 <AmiBlitz3.ab3@18233>  MOVE.l D3,D0
0002E988 <AmiBlitz3.ab3@18234>   TST.w D6
0002E98C <AmiBlitz3.ab3@18235>    BEQ.w JL_0_B46C
0002E992 <AmiBlitz3.ab3@18236>   MOVEA.l _mathffpbase,A6
0002E996 <AmiBlitz3.ab3@18237>    JSR -$1E(A6)
0002E99A <AmiBlitz3.ab3@18238>    BVC.w JL_0_B46C
0002E99C <AmiBlitz3.ab3@18239>   ADDQ.w #4,A7
0002E9A0 <AmiBlitz3.ab3@18240> BRA.w JL_0_B5A0
0002E9A2 <AmiBlitz3.ab3@18243> RTS
0002E9A4 <AmiBlitz3.ab3@18247>   MOVEQ.l #$00,D6
0002E9A8 <AmiBlitz3.ab3@18248>    fmove.l d3,fp0
0002E9AC <AmiBlitz3.ab3@18251>   BSR.w JL_0_B480
0002E9B0 <AmiBlitz3.ab3@18252> BRA.w JL_0_B3DC
0002E9B2 <AmiBlitz3.ab3@18255>   MOVE.w D2,-(A7)
0002E9B6 <AmiBlitz3.ab3@18256>    BSR.w JL_0_BF6A
0002E9B8 <AmiBlitz3.ab3@18257>   MOVE.w (A7)+,D2
0002E9BA <AmiBlitz3.ab3@18260>   TST.w D2
0002E9BE <AmiBlitz3.ab3@18261>    BNE.w JL_0_B498
0002E9C0 <AmiBlitz3.ab3@18262>   TST.w D6
0002E9C4 <AmiBlitz3.ab3@18263>    BEQ.w JL_0_B492
0002E9C6 <AmiBlitz3.ab3@18264>   MOVEQ.l #$04,D2
0002E9CA <AmiBlitz3.ab3@18265> BRA.w JL_0_B510
0002E9CC <AmiBlitz3.ab3@18268>   MOVEQ.l #$02,D2
0002E9D0 <AmiBlitz3.ab3@18269> BRA.w JL_0_B4C4
0002E9D4 <AmiBlitz3.ab3@18272>   CMP.w #$1,D2
0002E9D8 <AmiBlitz3.ab3@18273>    BEQ.w JL_0_B4C4
0002E9DC <AmiBlitz3.ab3@18274>   CMP.w #$2,D2
0002E9E0 <AmiBlitz3.ab3@18275>    BEQ.w JL_0_B4F8
0002E9E4 <AmiBlitz3.ab3@18276>   CMP.w #$3,D2
0002E9E8 <AmiBlitz3.ab3@18277>    BEQ.w JL_0_B57A
0002E9EC <AmiBlitz3.ab3@18278>   CMP.w #$4,D2
0002E9F0 <AmiBlitz3.ab3@18279>    BEQ.w JL_0_B506
0002E9F4 <AmiBlitz3.ab3@18280>   CMP.w #$5,D2
0002E9F8 <AmiBlitz3.ab3@18281>    BEQ.w JL_0_B586
0002E9FC <AmiBlitz3.ab3@18282> BRA.w mismatcherr
0002EA00 <AmiBlitz3.ab3@18285>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002EA06 <AmiBlitz3.ab3@18286>   CMP.l #$7f,D0
0002EA0A <AmiBlitz3.ab3@18287>    BGT.w JL_0_B4DC
0002EA10 <AmiBlitz3.ab3@18288>   CMP.l #$FFFFFF80,D0
0002EA14 <AmiBlitz3.ab3@18289>    BGE.w JL_0_B59E
0002EA16 <AmiBlitz3.ab3@18292>   MOVEQ.l #$02,D2                                          ;was 2 before
0002EA1C <AmiBlitz3.ab3@18293>   CMP.l #$7fff,D0
0002EA20 <AmiBlitz3.ab3@18294>    BGT.w JL_0_B4F2
0002EA26 <AmiBlitz3.ab3@18295>   CMP.l #$FFFF8000,D0
0002EA2A <AmiBlitz3.ab3@18296>    BGE.w JL_0_B59E
0002EA2C <AmiBlitz3.ab3@18299>   MOVEQ.l #$03,D2
0002EA30 <AmiBlitz3.ab3@18300> BRA.w JL_0_B59E
0002EA32 <AmiBlitz3.ab3@18326>   TST.w D6
0002EA36 <AmiBlitz3.ab3@18327>    BNE.w JL_0_B510
0002EA3A <AmiBlitz3.ab3@18328>    BSR.w JL_0_B450
0002EA3E <AmiBlitz3.ab3@18329> BRA.w JL_0_B4DC
0002EA42 <AmiBlitz3.ab3@18332>   BSR.w JL_0_B450
0002EA44 <AmiBlitz3.ab3@18333>   TST.w D6
0002EA48 <AmiBlitz3.ab3@18334>   BEQ.w JL_0_B560
0002EA4E <AmiBlitz3.ab3@18337>   CMP.l #MaxWordSgnd,D0
0002EA52 <AmiBlitz3.ab3@18338>    BGT.w JL_0_B5A0
0002EA58 <AmiBlitz3.ab3@18339>   CMP.l #$FFFF8000,D0
0002EA5C <AmiBlitz3.ab3@18340>    BLT.w JL_0_B5A0
0002EA5E <AmiBlitz3.ab3@18341>   MOVE.w D0,-(A7)
0002EA62 <AmiBlitz3.ab3@18342>    JSR -$24(A6)
0002EA64 <AmiBlitz3.ab3@18343>   MOVE.l D0,D1
0002EA66 <AmiBlitz3.ab3@18344>   MOVE.l D3,D0
0002EA6A <AmiBlitz3.ab3@18345>    JSR -$48(A6)
0002EA70 <AmiBlitz3.ab3@18346>   MOVE.l #$80000051,D1
0002EA74 <AmiBlitz3.ab3@18347>    JSR -$4E(A6)
0002EA78 <AmiBlitz3.ab3@18348>    JSR -$1E(A6)
0002EA7C <AmiBlitz3.ab3@18349>    BEQ.w JL_0_B55A
0002EA82 <AmiBlitz3.ab3@18350>   CMP.l #$10000,D0
0002EA86 <AmiBlitz3.ab3@18351>    BCC.w JL_0_B55A
0002EA88 <AmiBlitz3.ab3@18352>   MOVE.w D0,D1
0002EA8A <AmiBlitz3.ab3@18353>   MOVE.w (A7)+,D0
0002EA8C <AmiBlitz3.ab3@18354>   SWAP D0
0002EA8E <AmiBlitz3.ab3@18355>   MOVE.w D1,D0
0002EA92 <AmiBlitz3.ab3@18356> BRA.w JL_0_B59E
0002EA94 <AmiBlitz3.ab3@18359>   ADDQ.w #2,A7
0002EA98 <AmiBlitz3.ab3@18360> BRA.w JL_0_B5A0
0002EA9E <AmiBlitz3.ab3@18363>   CMP.l #MaxWordSgnd,D0
0002EAA2 <AmiBlitz3.ab3@18364>    BGT.w JL_0_B4F2
0002EAA8 <AmiBlitz3.ab3@18365>   CMP.l #$FFFF8000,D0
0002EAAC <AmiBlitz3.ab3@18366>    BLT.w JL_0_B4F2
0002EAAE <AmiBlitz3.ab3@18367>   SWAP D0
0002EAB2 <AmiBlitz3.ab3@18368> BRA.w JL_0_B59E
0002EAB4 <AmiBlitz3.ab3@18371>   TST.w D6
0002EAB8 <AmiBlitz3.ab3@18372>   BNE.w JL_0_B5A0
0002EABA <AmiBlitz3.ab3@18373>   MOVE.l D3,D0
0002EABE <AmiBlitz3.ab3@18374> BRA.w JL_0_B59E
0002EAC0 <AmiBlitz3.ab3@18377>   TST.w D6
0002EAC4 <AmiBlitz3.ab3@18378>   BNE.w JL_0_B5A0
0002EAC6 <AmiBlitz3.ab3@18379>   MOVE.l D3,D0
0002EACC <AmiBlitz3.ab3@18380>   MOVEA.l _mathffpbase,A6
0002EAD0 <AmiBlitz3.ab3@18381>   JSR -$24(A6)
0002EAD2 <AmiBlitz3.ab3@18382>   MOVE.l D0,D3
0002EAD6 <AmiBlitz3.ab3@18383> BRA.w JL_0_B5A0
0002EAD8 <AmiBlitz3.ab3@18386> RTS
0002EADA <AmiBlitz3.ab3@18389>   MOVEQ.l #$05,D2
0002EADC <AmiBlitz3.ab3@18390>   MOVE.l D3,D0
0002EADE <AmiBlitz3.ab3@18391> RTS
0002EAE2 <AmiBlitz3.ab3@18395>             Ds.l 1                                         ;??Looks like unused data??
0002EAE6 <AmiBlitz3.ab3@18396> pushpc:     Ds.l 1
0002EAEA <AmiBlitz3.ab3@18397> pushoff:    Ds.l 1
0002EAEE <AmiBlitz3.ab3@18398> pushdooff:  Ds.l 1
0002EAF0 <AmiBlitz3.ab3@18399> pushclen:   Ds.w 1
0002EAF4 <AmiBlitz3.ab3@18400> pushat:     Ds.l 1
0002EAFE <AmiBlitz3.ab3@18404>   MOVE.l destpointer,pushpc
0002EB08 <AmiBlitz3.ab3@18405>   MOVE.l hunkoffsetbase,pushoff
0002EB0A <AmiBlitz3.ab3@18406> RTS
0002EB0E <AmiBlitz3.ab3@18410>   MOVEM.l D0-D1/A0-A1,-(A7)
0002EB14 <AmiBlitz3.ab3@18411>   MOVE.l destpointer,D0
0002EB18 <AmiBlitz3.ab3@18412>   MOVE.l pushpc(PC),D1
0002EB1E <AmiBlitz3.ab3@18413>   MOVE.l D1,destpointer
0002EB20 <AmiBlitz3.ab3@18414>   SUB.l D1,D0
0002EB26 <AmiBlitz3.ab3@18415>   MOVE.w D0,pushclen
0002EB2A <AmiBlitz3.ab3@18416>    BEQ.w JL_0_B636
0002EB30 <AmiBlitz3.ab3@18417>   MOVE.w dontwrite,D1
0002EB34 <AmiBlitz3.ab3@18418>    BNE.w JL_0_B636
0002EB3C <AmiBlitz3.ab3@18419>    CMP.w #1000,pushclen
0002EB40 <AmiBlitz3.ab3@18420>    BGE conmemerr
0002EB46 <AmiBlitz3.ab3@18421>    MOVE.l pushat,d0
0002EB4A <AmiBlitz3.ab3@18422>    BNE 'nomem
0002EB50 <AmiBlitz3.ab3@18423>    MOVE.l #1024,d0
0002EB52 <AmiBlitz3.ab3@18424>   MOVEQ.l #$01,D1
0002EB58 <AmiBlitz3.ab3@18425>   MOVEA.l _execbase,A6
0002EB5E <AmiBlitz3.ab3@18426>   MOVE.l mempool,a0
0002EB62 <AmiBlitz3.ab3@18427>   JSR _AllocPooled(a6)
0002EB68 <AmiBlitz3.ab3@18429>   MOVE.l D0,pushat
0002EB6A <AmiBlitz3.ab3@18432>   MOVEA.l D0,A0
0002EB70 <AmiBlitz3.ab3@18433>   MOVEA.l pushpc,A1
0002EB76 <AmiBlitz3.ab3@18434>   MOVE.l A1,destpointer
0002EB7C <AmiBlitz3.ab3@18435>   MOVE.w pushclen,D0
0002EB7E <AmiBlitz3.ab3@18436>   LSR.w #1,D0
0002EB80 <AmiBlitz3.ab3@18437>   SUBQ.w #1,D0
0002EB82 <AmiBlitz3.ab3@18440>     MOVE.w (A1)+,(A0)+
0002EB86 <AmiBlitz3.ab3@18441>   DBF D0,JL_0_B626
0002EB90 <AmiBlitz3.ab3@18443>    MOVE.l hunkoffsetbase,pushdooff
0002EB94 <AmiBlitz3.ab3@18446>   MOVEM.l (A7)+,D0-D1/A0-A1
0002EB96 <AmiBlitz3.ab3@18447> RTS
0002EB9A <AmiBlitz3.ab3@18451>   MOVEM.l D0-D1/A0-A1,-(A7)
0002EB9C <AmiBlitz3.ab3@18452>   MOVEQ.l #$00,D0
0002EBA2 <AmiBlitz3.ab3@18453>   MOVE.w pushclen,D0
0002EBA6 <AmiBlitz3.ab3@18454>    BEQ.w JL_0_B6D8
0002EBAC <AmiBlitz3.ab3@18455>   MOVE.l destpointer,D1
0002EBB2 <AmiBlitz3.ab3@18456>   ADD.l D0,destpointer
0002EBB8 <AmiBlitz3.ab3@18457>   TST.w dontwrite
0002EBBC <AmiBlitz3.ab3@18458>    BNE.w JL_0_B6D8
0002EBBE <AmiBlitz3.ab3@18459>   LSR.w #1,D0
0002EBC0 <AmiBlitz3.ab3@18460>   SUBQ.w #1,D0
0002EBC2 <AmiBlitz3.ab3@18461>   MOVEA.l D1,A1
0002EBC8 <AmiBlitz3.ab3@18462>   MOVEA.l pushat,A0
0002EBCE <AmiBlitz3.ab3@18465>     CMPA.l destbufferend,A1
0002EBD2 <AmiBlitz3.ab3@18466>     BCS.w JL_0_B684
0002EBDA <AmiBlitz3.ab3@18468>     MOVE.w #$FFFF,dontwrite
0002EBDE <AmiBlitz3.ab3@18469>   BRA.w JL_0_B6D8
0002EBE0 <AmiBlitz3.ab3@18472>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002EBE4 <AmiBlitz3.ab3@18473>   DBF D0,JL_0_B66E
0002EBEA <AmiBlitz3.ab3@18475>   SUB.l pushpc,D1
0002EBEE <AmiBlitz3.ab3@18476>   BEQ.w JL_0_B6C2
0002EBF4 <AmiBlitz3.ab3@18477>   MOVEA.l pushdooff,A0
0002EBFA <AmiBlitz3.ab3@18480>   CMPA.l pushoff,A0
0002EBFE <AmiBlitz3.ab3@18481>   BEQ.w JL_0_B6C2
0002EC02 <AmiBlitz3.ab3@18482>   MOVEA.l $4(A0),A1
0002EC08 <AmiBlitz3.ab3@18483>   ADDA.l destbufferstart,A1
0002EC0E <AmiBlitz3.ab3@18484>   CMPA.l destbufferend,A1
0002EC12 <AmiBlitz3.ab3@18485>   BCC.w JL_0_B6BC
0002EC16 <AmiBlitz3.ab3@18486>   ADD.l D1,$4(A0)
0002EC18 <AmiBlitz3.ab3@18489>   MOVEA.l (A0),A0
0002EC1C <AmiBlitz3.ab3@18490> BRA.w JL_0_B69A
0002EC22 <AmiBlitz3.ab3@18493>   MOVEA.l pushat,A1
0002EC24 <AmiBlitz3.ab3@18494>   MOVEQ.l #$00,D0
0002EC2A <AmiBlitz3.ab3@18495>   MOVE.w pushclen,D0
0002EC30 <AmiBlitz3.ab3@18496>   MOVEA.l _execbase,A6
0002EC36 <AmiBlitz3.ab3@18497>   MOVE.l mempool,a0
0002EC3A <AmiBlitz3.ab3@18501>   MOVEM.l (A7)+,D0-D1/A0-A1
0002EC3C <AmiBlitz3.ab3@18502> RTS
0002EC3E <AmiBlitz3.ab3@18505>   MOVE.l D1,-(A7)                                          ;array mul
0002EC40 <AmiBlitz3.ab3@18506>   MOVEQ.l #$00,D2
0002EC42 <AmiBlitz3.ab3@18507>   MOVEQ.l #$0F,D3
0002EC44 <AmiBlitz3.ab3@18510>     LSL.w #1,D1
0002EC48 <AmiBlitz3.ab3@18511>     BCC.w JL_0_B6EE
0002EC4A <AmiBlitz3.ab3@18512>     ADDQ.w #1,D2
0002EC4C <AmiBlitz3.ab3@18513>     MOVE.w D3,D4
0002EC50 <AmiBlitz3.ab3@18516>   DBF D3,JL_0_B6E4
0002EC52 <AmiBlitz3.ab3@18518>   SUBQ.w #1,D2
0002EC56 <AmiBlitz3.ab3@18519>    BNE.w JL_0_B726
0002EC58 <AmiBlitz3.ab3@18520>   ADDQ.w #4,A7
0002EC5A <AmiBlitz3.ab3@18521>   MOVE.w D4,D1
0002EC5E <AmiBlitz3.ab3@18522>    BEQ.w JL_0_B724
0002EC62 <AmiBlitz3.ab3@18523>   CMP.w #$8,D1
0002EC66 <AmiBlitz3.ab3@18524>    BCS.w JL_0_B712
0002EC6A <AmiBlitz3.ab3@18525>   SUBI.w #$8,D1
0002EC6E <AmiBlitz3.ab3@18526>    BSR.w JL_0_B712
0002EC70 <AmiBlitz3.ab3@18527>   MOVEQ.l #$00,D1
0002EC72 <AmiBlitz3.ab3@18530>   LSL.w #8,D1
0002EC74 <AmiBlitz3.ab3@18531>   LSL.w #1,D1
0002EC78 <AmiBlitz3.ab3@18532>   ORI.w #$E188,D1
0002EC7E <AmiBlitz3.ab3@18533>   OR.w regnum,D1
0002EC82 <AmiBlitz3.ab3@18534> BRA.w writeword
0002EC84 <AmiBlitz3.ab3@18537> RTS
0002EC86 <AmiBlitz3.ab3@18540>   MOVEQ #0,d1
0002EC8C <AmiBlitz3.ab3@18541>   MOVE.w regnum,D1
0002EC8E <AmiBlitz3.ab3@18542>   LSL.l #8,D1
0002EC90 <AmiBlitz3.ab3@18544>   LSL.l #4,d1
0002EC96 <AmiBlitz3.ab3@18546>   OR.l #$4c3c0000,d1
0002EC9C <AmiBlitz3.ab3@18547>   OR.w regnum,d1
0002ECA0 <AmiBlitz3.ab3@18548>   BSR.w writelong
0002ECA2 <AmiBlitz3.ab3@18549>   MOVE.l (A7)+,D1
0002ECA6 <AmiBlitz3.ab3@18551> BRA writelong
0002ECAC <AmiBlitz3.ab3@18554>   MOVE.l destpointer,-(A7)
0002ECAE <AmiBlitz3.ab3@18555>   MOVEQ.l #-$01,D7
0002ECB2 <AmiBlitz3.ab3@18558>     BSR.w findhilib
0002ECB6 <AmiBlitz3.ab3@18559>      BEQ.w JL_0_B8A4
0002ECBA <AmiBlitz3.ab3@18560>     TST.w $C(A2)
0002ECBE <AmiBlitz3.ab3@18561>      BPL.w JL_0_B746
0002ECC2 <AmiBlitz3.ab3@18563>     MOVE.l $16(A2),D1
0002ECC6 <AmiBlitz3.ab3@18564>     BEQ.w JL_0_B746
0002ECCA <AmiBlitz3.ab3@18566>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002ECCE <AmiBlitz3.ab3@18567>     CMP.w #-$2,D1
0002ECD2 <AmiBlitz3.ab3@18568>      BNE.w JL_0_B772
0002ECD6 <AmiBlitz3.ab3@18569>     BSR.w makevsize
0002ECDA <AmiBlitz3.ab3@18570> BRA.w JL_0_B7FE
0002ECDE <AmiBlitz3.ab3@18573>     CMP.w #-$5C4,D1
0002ECE2 <AmiBlitz3.ab3@18574>      BNE.w JL_0_B790
0002ECE6 <AmiBlitz3.ab3@18575>     MOVE.w #$7000,D1
0002ECEE <AmiBlitz3.ab3@18576>     BTST #$7,autorun
0002ECF0 <AmiBlitz3.ab3@18577>     SNE D1
0002ECF4 <AmiBlitz3.ab3@18578>     BSR.w writeword
0002ECF8 <AmiBlitz3.ab3@18579> BRA.w JL_0_B7FE
0002ECFC <AmiBlitz3.ab3@18582>     CMP.w #-$12D,D1
0002ED00 <AmiBlitz3.ab3@18583>      BNE.w JL_0_B7A0
0002ED04 <AmiBlitz3.ab3@18584>     BSR.w makessize
0002ED08 <AmiBlitz3.ab3@18585> BRA.w JL_0_B7FE
0002ED0C <AmiBlitz3.ab3@18588>     CMP.w #-$1F5,D1
0002ED10 <AmiBlitz3.ab3@18589>      BNE.w JL_0_B7C2
0002ED14 <AmiBlitz3.ab3@18590>     MOVE.w #$203C,D1
0002ED18 <AmiBlitz3.ab3@18591>     BSR.w writeword
0002ED1C <AmiBlitz3.ab3@18592>     BSR.w addoff
0002ED22 <AmiBlitz3.ab3@18593>     MOVE.l endop,D1
0002ED26 <AmiBlitz3.ab3@18594>     BSR.w writelong
0002ED2A <AmiBlitz3.ab3@18595> BRA.w JL_0_B7FE
0002ED2E <AmiBlitz3.ab3@18598>     CMP.w #-$3E9,D1
0002ED32 <AmiBlitz3.ab3@18599>      BNE.w JL_0_B7E4
0002ED36 <AmiBlitz3.ab3@18600>     MOVE.w #$203C,D1
0002ED3A <AmiBlitz3.ab3@18601>     BSR.w writeword
0002ED3E <AmiBlitz3.ab3@18602>     BSR.w addoff
0002ED44 <AmiBlitz3.ab3@18603>     MOVE.l data2at,D1
0002ED48 <AmiBlitz3.ab3@18604>     BSR.w writelong
0002ED4C <AmiBlitz3.ab3@18605> BRA.w JL_0_B7FE
0002ED50 <AmiBlitz3.ab3@18608>     CMP.w #$1,D1
0002ED54 <AmiBlitz3.ab3@18609>      BNE.w JL_0_B7FE
0002ED58 <AmiBlitz3.ab3@18610>     MOVE.w #$203C,D1
0002ED5C <AmiBlitz3.ab3@18611>     BSR.w writeword
0002ED62 <AmiBlitz3.ab3@18612>     MOVE.l ptr_seg_debugger,D1
0002ED66 <AmiBlitz3.ab3@18613>     BSR.w writelong
0002ED6A <AmiBlitz3.ab3@18616>     MOVE.l $16(A2),D1
0002ED72 <AmiBlitz3.ab3@18617>     MOVE.w #$FFFF,lasta6
0002ED76 <AmiBlitz3.ab3@18618>     BSR.w Amakelibsub
0002ED7C <AmiBlitz3.ab3@18619>     CMPI.w #$FFFE,$4(A2)
0002ED80 <AmiBlitz3.ab3@18620>      BNE.w JL_0_B83A
0002ED86 <AmiBlitz3.ab3@18621>     MOVE.l intdata1,D1
0002ED8A <AmiBlitz3.ab3@18622>      BEQ.w JL_0_B83A
0002ED90 <AmiBlitz3.ab3@18623>     MOVE.w putidata1,D1
0002ED94 <AmiBlitz3.ab3@18624>     BSR.w writeword
0002ED98 <AmiBlitz3.ab3@18625>     BSR.w addoff
0002ED9E <AmiBlitz3.ab3@18626>     MOVE.l intdata1,D1
0002EDA2 <AmiBlitz3.ab3@18627>     BSR.w writelong
0002EDA6 <AmiBlitz3.ab3@18630>     MOVE.w #$2B40,D1
0002EDAA <AmiBlitz3.ab3@18631>     TST.w $1A(A2)
0002EDAE <AmiBlitz3.ab3@18632>      BEQ.w JL_0_B746
0002EDB2 <AmiBlitz3.ab3@18633>      BPL.w JL_0_B84E
0002EDB6 <AmiBlitz3.ab3@18634>     MOVE.w #$3B40,D1
0002EDBA <AmiBlitz3.ab3@18637>     BSR.w writeword
0002EDBE <AmiBlitz3.ab3@18638>     MOVE.w $A(A2),D1
0002EDC2 <AmiBlitz3.ab3@18639>      BSR.w writeword
0002EDC8 <AmiBlitz3.ab3@18640>     CMPI.w #$FFFA,$4(A2)
0002EDCC <AmiBlitz3.ab3@18641>      BNE.w JL_0_B746
0002EDCE <AmiBlitz3.ab3@18642>     MOVE.w D7,-(A7)
0002EDD4 <AmiBlitz3.ab3@18643>     MOVE.w numstatic,D4
0002EDD8 <AmiBlitz3.ab3@18644>      BEQ.w JL_0_B882
0002EDDE <AmiBlitz3.ab3@18645>     MOVE.l staticdata,D3
0002EDE4 <AmiBlitz3.ab3@18646>      JSR datastart
0002EDE8 <AmiBlitz3.ab3@18647>     MOVE.w #$C500,D1
0002EDEC <AmiBlitz3.ab3@18648>      BSR.w tokejsr2
0002EDF2 <AmiBlitz3.ab3@18651>     MOVE.w maxsused,D4
0002EDF6 <AmiBlitz3.ab3@18652>      BEQ.w JL_0_B89E
0002EDFC <AmiBlitz3.ab3@18653>     MOVE.l maxsat,D3
0002EE02 <AmiBlitz3.ab3@18654>      JSR datastart
0002EE06 <AmiBlitz3.ab3@18655>     MOVE.w #$CF00,D1
0002EE0A <AmiBlitz3.ab3@18656>      BSR.w tokejsr2
0002EE0C <AmiBlitz3.ab3@18659>     MOVE.w (A7)+,D7
0002EE10 <AmiBlitz3.ab3@18660> BRA.w JL_0_B746
0002EE16 <AmiBlitz3.ab3@18663>   MOVE.l destpointer,D1
0002EE18 <AmiBlitz3.ab3@18664>   CMP.l (A7),D1
0002EE1C <AmiBlitz3.ab3@18665>    BNE.w JL_0_B8BC
0002EE24 <AmiBlitz3.ab3@18666>   MOVE.w #$0008,noinits+2
0002EE28 <AmiBlitz3.ab3@18667> BRA.w JL_0_B8E6
0002EE2E <AmiBlitz3.ab3@18670>   CLR.w noinits+2
0002EE34 <AmiBlitz3.ab3@18671>   MOVE.w dontwrite,D1
0002EE38 <AmiBlitz3.ab3@18672>    BNE.w JL_0_B8DE
0002EE3E <AmiBlitz3.ab3@18673>   TST.l newinitaddr
0002EE42 <AmiBlitz3.ab3@18674>    BEQ 'l10
0002EE48 <AmiBlitz3.ab3@18675>   MOVE.l newinitaddr,D2
0002EE4E <AmiBlitz3.ab3@18676>   SUB.l destbufferstart,D2
0002EE50 <AmiBlitz3.ab3@18677>   ADDQ.l #2,d2
0002EE56 <AmiBlitz3.ab3@18678>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002EE5A <AmiBlitz3.ab3@18680>   MOVE.w #$4EB9,(A0)+
0002EE5C <AmiBlitz3.ab3@18681>   MOVE.l (A7),(A0)+
0002EE60 <AmiBlitz3.ab3@18683> BRA 'l20
0002EE66 <AmiBlitz3.ab3@18686>   MOVEA.l destbufferstart,A0                               ;write initcode
0002EE6C <AmiBlitz3.ab3@18687>   TST.b saved0
0002EE70 <AmiBlitz3.ab3@18688>   BEQ 'l1
0002EE74 <AmiBlitz3.ab3@18689>   MOVE.w #$23c0,(a0)+
0002EE76 <AmiBlitz3.ab3@18690>   MOVE.l a0,a1
0002EE78 <AmiBlitz3.ab3@18691>   ADDQ.l #6,a1
0002EE7A <AmiBlitz3.ab3@18692>   MOVE.l a1,(a0)+
0002EE7C <AmiBlitz3.ab3@18693>   MOVEQ.l #$02,D2
0002EE80 <AmiBlitz3.ab3@18694>   BSR.w addhunkoffset
0002EE84 <AmiBlitz3.ab3@18695>   MOVE.w #$6004,(a0)+
0002EE8A <AmiBlitz3.ab3@18696>   MOVE.l #$4e714e71,(a0)+
0002EE8E <AmiBlitz3.ab3@18699>   MOVE.w #$4EB9,(A0)+
0002EE90 <AmiBlitz3.ab3@18700>   MOVE.l (A7),(A0)+
0002EE92 <AmiBlitz3.ab3@18701>   MOVEQ #2,d2
0002EE98 <AmiBlitz3.ab3@18702>   TST.b saved0
0002EE9C <AmiBlitz3.ab3@18703>   BEQ 'l20
0002EE9E <AmiBlitz3.ab3@18704>   MOVEQ.l #14,D2
0002EEA2 <AmiBlitz3.ab3@18707>   BSR.w addhunkoffset
0002EEA6 <AmiBlitz3.ab3@18708>   MOVE.w #$2039,(a0)+
0002EEA8 <AmiBlitz3.ab3@18709>   MOVE.l a1,(a0)+
0002EEAA <AmiBlitz3.ab3@18710>   MOVEQ.l #20,d2
0002EEAE <AmiBlitz3.ab3@18713>   BSR.w addhunkoffset
0002EEB2 <AmiBlitz3.ab3@18716>   MOVE.w #$4E75,D1
0002EEB6 <AmiBlitz3.ab3@18717>   BSR.w writeword
0002EEB8 <AmiBlitz3.ab3@18720>   ADDQ.w #4,A7
0002EEBA <AmiBlitz3.ab3@18721> RTS
0002EEBE <AmiBlitz3.ab3@18726>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002EEC4 <AmiBlitz3.ab3@18728>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002EECA <AmiBlitz3.ab3@18730>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002EED0 <AmiBlitz3.ab3@18735>   MOVE.l stringbuffer,D1
0002EED4 <AmiBlitz3.ab3@18736> BRA.w makesize
0002EED6 <AmiBlitz3.ab3@18739>   MOVEQ.l #$00,D1
0002EEDC <AmiBlitz3.ab3@18740>   MOVE.w globalvarpointer,D1
0002EEE0 <AmiBlitz3.ab3@18741>   SUBI.w #$8000,D1
0002EEE4 <AmiBlitz3.ab3@18742>   BNE.w makesize
0002EEE6 <AmiBlitz3.ab3@18743>     MOVEQ.l #$08,D1
0002EEE8 <AmiBlitz3.ab3@18746>   MOVE.l D1,-(A7)
0002EEEC <AmiBlitz3.ab3@18747>   MOVE.w #$203C,D1
0002EEF0 <AmiBlitz3.ab3@18748>   BSR.w writeword
0002EEF2 <AmiBlitz3.ab3@18749>   MOVE.l (A7)+,D1
0002EEF6 <AmiBlitz3.ab3@18750> BRA.w writelong
0002EEF8 <AmiBlitz3.ab3@18758>   MOVEQ.l #$00,D1
0002EEFE <AmiBlitz3.ab3@18759>   MOVEA.l libpointer,A1
0002EF02 <AmiBlitz3.ab3@18762>     CMPA.w #$0,A1
0002EF06 <AmiBlitz3.ab3@18763>     BEQ.w findhilib__done
0002EF0A <AmiBlitz3.ab3@18764>       CMP.w $4(A1),D7
0002EF0E <AmiBlitz3.ab3@18765>       BLS.w findhilib__next
0002EF12 <AmiBlitz3.ab3@18766>         CMP.w $4(A1),D1
0002EF16 <AmiBlitz3.ab3@18767>         BCC.w findhilib__next
0002EF1A <AmiBlitz3.ab3@18768>           MOVE.w $4(A1),D1
0002EF1C <AmiBlitz3.ab3@18769>           MOVEA.l A1,A2
0002EF1E <AmiBlitz3.ab3@18772>     MOVEA.l (A1),A1
0002EF22 <AmiBlitz3.ab3@18773> BRA.w findhilib__loop
0002EF24 <AmiBlitz3.ab3@18776>   MOVE.w D1,D7
0002EF26 <AmiBlitz3.ab3@18777> RTS
0002EF28 <AmiBlitz3.ab3@18785>   MOVEQ.l #-$01,D1
0002EF2E <AmiBlitz3.ab3@18786>   MOVEA.l libpointer,A1
0002EF32 <AmiBlitz3.ab3@18789>     CMPA.w #$0,A1
0002EF36 <AmiBlitz3.ab3@18790>      BEQ.w findlolib__done
0002EF3A <AmiBlitz3.ab3@18791>     CMP.w $4(A1),D7
0002EF3E <AmiBlitz3.ab3@18792>      BCC.w findlolib__next
0002EF42 <AmiBlitz3.ab3@18793>     CMP.w $4(A1),D1
0002EF46 <AmiBlitz3.ab3@18794>      BLS.w findlolib__next
0002EF4A <AmiBlitz3.ab3@18795>     MOVE.w $4(A1),D1
0002EF4C <AmiBlitz3.ab3@18796>     MOVEA.l A1,A2
0002EF4E <AmiBlitz3.ab3@18799>     MOVEA.l (A1),A1
0002EF52 <AmiBlitz3.ab3@18800> BRA.w findlolib__loop
0002EF54 <AmiBlitz3.ab3@18803>   MOVE.w D1,D7
0002EF58 <AmiBlitz3.ab3@18804>   CMP.w #-$1,D1
0002EF5A <AmiBlitz3.ab3@18805> RTS
0002EF60 <AmiBlitz3.ab3@18809>   ADDQ.w #1,globalvarpointer
0002EF68 <AmiBlitz3.ab3@18810>   BCLR #$0,globalvarpointer+1
0002EF6A <AmiBlitz3.ab3@18811>   MOVEQ.l #$00,D7
0002EF6E <AmiBlitz3.ab3@18814>     BSR.w findlolib
0002EF72 <AmiBlitz3.ab3@18815>     BEQ.w JL_0_BA74
0002EF76 <AmiBlitz3.ab3@18816>     TST.w $C(A2)
0002EF7A <AmiBlitz3.ab3@18817>     BPL.w JL_0_B99A
0002EF7C <AmiBlitz3.ab3@18818>     MOVEA.l A2,A1
0002EF80 <AmiBlitz3.ab3@18819>     ADDA.l $12(A1),A1
0002EF84 <AmiBlitz3.ab3@18820>     TST.w -$2(A1)
0002EF88 <AmiBlitz3.ab3@18821>     BEQ.w JL_0_BA34
0002EF8C <AmiBlitz3.ab3@18822>     MOVE.l -$A(A1),D1
0002EF90 <AmiBlitz3.ab3@18823>     LEA $6(A2,D1.L),A3
0002EF92 <AmiBlitz3.ab3@18826>       TST.w (A3)+
0002EF96 <AmiBlitz3.ab3@18827>       BEQ.w JL_0_B9CC
0002EF98 <AmiBlitz3.ab3@18828>         ADDQ.w #2,A3
0002EF9C <AmiBlitz3.ab3@18829> BRA.w JL_0_B9C0
0002EFA0 <AmiBlitz3.ab3@18832>     TST.l $4(A3)
0002EFA4 <AmiBlitz3.ab3@18833>     BEQ.w JL_0_BA34
0002EFA8 <AmiBlitz3.ab3@18834>       MOVE.w freemax(PC),D1
0002EFAC <AmiBlitz3.ab3@18835>       BSR.w writeword
0002EFB0 <AmiBlitz3.ab3@18836>       MOVE.w -$4(A1),D1
0002EFB4 <AmiBlitz3.ab3@18837>       BSR.w writeword
0002EFBA <AmiBlitz3.ab3@18838>       MOVE.l free,D1
0002EFBE <AmiBlitz3.ab3@18839>       MOVE.w -$6(A1),D1
0002EFC2 <AmiBlitz3.ab3@18840>       BSR.w writelong
0002EFC8 <AmiBlitz3.ab3@18841>       MOVE.l destpointer,-(A7)
0002EFCA <AmiBlitz3.ab3@18842>       MOVEQ.l #$01,D1
0002EFCE <AmiBlitz3.ab3@18843>       MOVE.w -$2(A1),D2
0002EFD0 <AmiBlitz3.ab3@18844>       LSL.w D2,D1
0002EFD2 <AmiBlitz3.ab3@18845>       MOVE.w D1,-(A7)
0002EFD6 <AmiBlitz3.ab3@18846>       MOVE.l -$A(A1),D1
0002EFDA <AmiBlitz3.ab3@18847>       BSR.w Amakelibsub
0002EFDE <AmiBlitz3.ab3@18848>       MOVE.w freemax3(PC),D1
0002EFE2 <AmiBlitz3.ab3@18849>       BSR.w writeword
0002EFE4 <AmiBlitz3.ab3@18850>       MOVE.w (A7)+,D1
0002EFE8 <AmiBlitz3.ab3@18851>       BSR.w writeword
0002EFEC <AmiBlitz3.ab3@18852>       MOVE.l freemax2(PC),D1
0002EFF0 <AmiBlitz3.ab3@18853>       BSR.w writelong
0002EFF2 <AmiBlitz3.ab3@18854>       MOVE.l (A7)+,D1
0002EFF8 <AmiBlitz3.ab3@18855>       SUB.l destpointer,D1
0002EFFC <AmiBlitz3.ab3@18856>       BSR.w writeword
0002F000 <AmiBlitz3.ab3@18857>       MOVE.w freemax4(PC),D1
0002F004 <AmiBlitz3.ab3@18858>       BSR.w writeword
0002F008 <AmiBlitz3.ab3@18861>     MOVE.l $1C(A2),D1
0002F00C <AmiBlitz3.ab3@18862>     BEQ.w JL_0_B99A
0002F010 <AmiBlitz3.ab3@18864>     MOVE.w $4(A2),D1
0002F014 <AmiBlitz3.ab3@18865>     CMP.w #-$2,D1
0002F018 <AmiBlitz3.ab3@18866>     BNE.w JL_0_BA50
0002F01C <AmiBlitz3.ab3@18867>       BSR.w makevsize
0002F020 <AmiBlitz3.ab3@18868> BRA.w JL_0_BA60
0002F024 <AmiBlitz3.ab3@18871>     CMP.w #-$12D,D1
0002F028 <AmiBlitz3.ab3@18872>     BNE.w JL_0_BA60
0002F02C <AmiBlitz3.ab3@18873>       BSR.w makessize
0002F030 <AmiBlitz3.ab3@18874> BRA.w JL_0_BA60
0002F034 <AmiBlitz3.ab3@18877>     MOVE.l $1C(A2),D1
0002F03C <AmiBlitz3.ab3@18878>     MOVE.w #$FFFF,lasta6
0002F040 <AmiBlitz3.ab3@18879>     BSR.w Amakelibsub
0002F044 <AmiBlitz3.ab3@18880> BRA.w JL_0_B99A
0002F046 <AmiBlitz3.ab3@18883> RTS
0002F04A <AmiBlitz3.ab3@18887> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002F04C <AmiBlitz3.ab3@18889> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002F050 <AmiBlitz3.ab3@18890>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002F052 <AmiBlitz3.ab3@18891> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002F056 <AmiBlitz3.ab3@18892> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002F05C <AmiBlitz3.ab3@18897>   TST.b debugmode
0002F060 <AmiBlitz3.ab3@18898>    BEQ.b chkstak__skip
0002F066 <AmiBlitz3.ab3@18899>   TST.w debugversion
0002F06A <AmiBlitz3.ab3@18900>    BNE.b chkstak__skip
0002F06E <AmiBlitz3.ab3@18901>   MOVE.w #$C308,D1
0002F072 <AmiBlitz3.ab3@18902> BRA.w Atokejsr
0002F074 <AmiBlitz3.ab3@18905> RTS
0002F07C <AmiBlitz3.ab3@18909>   MOVE.w #$FFFF,lasta6
0002F080 <AmiBlitz3.ab3@18914>   MOVEM.l D0-d7/A0-a6,-(A7)
0002F088 <AmiBlitz3.ab3@18915>   MOVE.b #1,nostringopt
0002F08E <AmiBlitz3.ab3@18916>   JSR searchinstr
0002F090 <AmiBlitz3.ab3@18917>   MOVE.l A3,D1
0002F092 <AmiBlitz3.ab3@18918>   SUB.l A2,D1
0002F096 <AmiBlitz3.ab3@18919>   BSR.w Amakelibsub
0002F09A <AmiBlitz3.ab3@18920>   MOVEM.l (A7)+,d0-d7/a0-a6
0002F09C <AmiBlitz3.ab3@18921> RTS
0002F0A2 <AmiBlitz3.ab3@18928>   MOVE.l libisat,-(A7)                                   ;library write
0002F0A8 <AmiBlitz3.ab3@18929>   MOVE.l A2,libisat
0002F0AA <AmiBlitz3.ab3@18931>   MOVEA.l A1,A2
0002F0AC <AmiBlitz3.ab3@18932>   MOVE.w (A2)+,D1
0002F0B2 <AmiBlitz3.ab3@18933>   MOVE.l a2,lastinstructionaddr
0002F0B6 <AmiBlitz3.ab3@18934>   ANDI.w #$FF,D1
0002F0B8 <AmiBlitz3.ab3@18935>   ADDA.w D1,A2
0002F0BA <AmiBlitz3.ab3@18936>   EXG.l D0,A2
0002F0BC <AmiBlitz3.ab3@18937>   ADDQ.l #1,D0
0002F0C0 <AmiBlitz3.ab3@18938>   BCLR #$0,D0
0002F0C2 <AmiBlitz3.ab3@18939>   EXG.l D0,A2
0002F0C6 <AmiBlitz3.ab3@18940> BRA.w JL_0_BB08
0002F0CC <AmiBlitz3.ab3@18944>   MOVE.l libisat,-(A7)
0002F0D2 <AmiBlitz3.ab3@18945>   MOVE.l A2,libisat
0002F0D4 <AmiBlitz3.ab3@18946>   MOVEA.l A3,A2
0002F0D8 <AmiBlitz3.ab3@18947> BRA.w JL_0_BB08
0002F0DA <AmiBlitz3.ab3@18951>   MOVE.l a1,-(a7)
0002F0DC <AmiBlitz3.ab3@18954>   MOVE.l d0,a0
0002F0E0 <AmiBlitz3.ab3@18955>   MOVE.l $a(a0),d0
0002F0E2 <AmiBlitz3.ab3@18956>   MOVE.l d0,a1
0002F0EA <AmiBlitz3.ab3@18957>   CMP.l #8,4(a1)
0002F0EE <AmiBlitz3.ab3@18958>   BLE 'norec
0002F0F0 <AmiBlitz3.ab3@18959>   MOVE.l a0,-(a7)
0002F0F6 <AmiBlitz3.ab3@18960>   MOVE.l typebase,-(a7)
0002F0F8 <AmiBlitz3.ab3@18961>   MOVEQ #0,d0
0002F0FC <AmiBlitz3.ab3@18962>   MOVE.w 4(a0),d0
0002F102 <AmiBlitz3.ab3@18963>   ADD.l d0,typebase
0002F106 <AmiBlitz3.ab3@18964>   MOVE.l $4(a1),d0
0002F10A <AmiBlitz3.ab3@18965>   BSR scantype
0002F110 <AmiBlitz3.ab3@18966>   MOVE.l (a7)+,typebase
0002F112 <AmiBlitz3.ab3@18967>   MOVE.l (a7)+,a0
0002F118 <AmiBlitz3.ab3@18970>   CMP.l #newtype_string,d0
0002F11C <AmiBlitz3.ab3@18971>   BNE 'nostring
0002F122 <AmiBlitz3.ab3@18972>   ADDQ #2,a2offset
0002F128 <AmiBlitz3.ab3@18973>   MOVE.l #$3f3c0000,d1
0002F12A <AmiBlitz3.ab3@18974>   MOVEQ #0,d0
0002F12E <AmiBlitz3.ab3@18975>   MOVE.w 4(a0),d0
0002F134 <AmiBlitz3.ab3@18976>   ADD.l typebase,d0
0002F136 <AmiBlitz3.ab3@18977>   MOVE.w d0,d1
0002F13A <AmiBlitz3.ab3@18978>   BSR writelong
0002F140 <AmiBlitz3.ab3@18979>   TST.b debugmode
0002F144 <AmiBlitz3.ab3@18980>   BEQ 'l1a
0002F146 <AmiBlitz3.ab3@18981>   MOVE.l d1,-(a7)
0002F14C <AmiBlitz3.ab3@18982>   MOVE.l #$c308,d1
0002F152 <AmiBlitz3.ab3@18983>   JSR Atokejsr
0002F154 <AmiBlitz3.ab3@18984>   MOVE.l (a7)+,d1
0002F158 <AmiBlitz3.ab3@18987>   TST.w 8(a0)
0002F15C <AmiBlitz3.ab3@18988>   BEQ 'nostring
0002F160 <AmiBlitz3.ab3@18989>   MOVEM.l d2/d3,-(a7)
0002F162 <AmiBlitz3.ab3@18990>   MOVE.l d1,d2
0002F164 <AmiBlitz3.ab3@18991>   MOVEQ #0,d3
0002F168 <AmiBlitz3.ab3@18992>   MOVE.w 8(a0),d3
0002F16A <AmiBlitz3.ab3@18993>   SUBQ.l #1,d3
0002F16E <AmiBlitz3.ab3@18994>   BEQ 'nostring2
0002F170 <AmiBlitz3.ab3@18997>   ADDQ.l #4,d2
0002F172 <AmiBlitz3.ab3@18998>   MOVE.l d2,d1
0002F176 <AmiBlitz3.ab3@18999>   BSR writelong
0002F17C <AmiBlitz3.ab3@19000>   TST.b debugmode
0002F180 <AmiBlitz3.ab3@19001>   BEQ 'l1
0002F186 <AmiBlitz3.ab3@19002>   MOVE.l #$c308,d1
0002F18C <AmiBlitz3.ab3@19003>   JSR Atokejsr
0002F192 <AmiBlitz3.ab3@19006>   ADDQ #2,a2offset
0002F194 <AmiBlitz3.ab3@19007>   SUBQ.l #1,d3
0002F198 <AmiBlitz3.ab3@19008>   BNE 'loop
0002F19C <AmiBlitz3.ab3@19011>   MOVEM.l (a7)+,d2/d3
0002F19E <AmiBlitz3.ab3@19014>   MOVE.l (a0),d0
0002F1A2 <AmiBlitz3.ab3@19015>   BNE 'more
0002F1A4 <AmiBlitz3.ab3@19016>   MOVE.l (a7)+,a1
0002F1A6 <AmiBlitz3.ab3@19017> RTS
0002F1AA <AmiBlitz3.ab3@19020> libisat:   Ds.l 1
0002F1B0 <AmiBlitz3.ab3@19026>   MOVE.l libisat,-(A7)                                   
0002F1B6 <AmiBlitz3.ab3@19027>   MOVE.l A2,libisat
0002F1BA <AmiBlitz3.ab3@19028>   LEA $6(A2,D1.L),A2
0002F1C2 <AmiBlitz3.ab3@19032>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002F1C6 <AmiBlitz3.ab3@19033>   BEQ 'dowritevar
0002F1CE <AmiBlitz3.ab3@19034>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002F1D2 <AmiBlitz3.ab3@19035>   BEQ 'dowritevar
0002F1DA <AmiBlitz3.ab3@19036>   CMP.l #$3e175265,$1c(a2)
0002F1DE <AmiBlitz3.ab3@19037>   BEQ 'dowritevar
0002F1E6 <AmiBlitz3.ab3@19038>   CMP.l #$3e165772,$1c(a2)
0002F1EA <AmiBlitz3.ab3@19039>   BNE 'nowritef
0002F1EE <AmiBlitz3.ab3@19042>   MOVEM.l a0-a2/d2,-(a7)
0002F1F0 <AmiBlitz3.ab3@19043>   MOVEQ #0,d1
0002F1FA <AmiBlitz3.ab3@19044>   MOVE.l #0,typebase
0002F1FE <AmiBlitz3.ab3@19045>   MOVE.l $a(a3),a0
0002F202 <AmiBlitz3.ab3@19046>   MOVE.l $4(a0),d0
0002F208 <AmiBlitz3.ab3@19047>   CMP.l #8,d0
0002F20C <AmiBlitz3.ab3@19048>   BLE 'notype
0002F210 <AmiBlitz3.ab3@19049>   BSR scantype
0002F216 <AmiBlitz3.ab3@19052>   MOVE.l #$3f3c0000,d1
0002F21C <AmiBlitz3.ab3@19053>   MOVE.w a2offset,d1
0002F220 <AmiBlitz3.ab3@19054>   BSR writelong
0002F226 <AmiBlitz3.ab3@19055>   MOVE.l #$3f3c0000,d1
0002F22A <AmiBlitz3.ab3@19056>   MOVE.l $a(a3),a0
0002F22E <AmiBlitz3.ab3@19057>   MOVE.w 8(a0),d1
0002F232 <AmiBlitz3.ab3@19058>   BSR writelong
0002F238 <AmiBlitz3.ab3@19059>   MOVE.l #$3f3cab12,d1
0002F23C <AmiBlitz3.ab3@19060>   BSR writelong
0002F242 <AmiBlitz3.ab3@19061>   ADDQ.w #6,a2offset
0002F246 <AmiBlitz3.ab3@19062>   MOVEM.l (a7)+,a0-a2/d2
0002F24C <AmiBlitz3.ab3@19065>   TST.b fpu
0002F250 <AmiBlitz3.ab3@19066>   BEQ 'nofpu2
0002F258 <AmiBlitz3.ab3@19067>   CMP.l #$496e7400,$1a(a2)
0002F25C <AmiBlitz3.ab3@19068>   BNE 'noint
0002F25E <AmiBlitz3.ab3@19069>   MOVEQ #0,d1
0002F264 <AmiBlitz3.ab3@19070>   SUBQ.l #8,destpointer                                    ;fpu int
0002F26A <AmiBlitz3.ab3@19071>   CLR.w a2offset
0002F26E <AmiBlitz3.ab3@19072>   CMP.b #2,d2
0002F272 <AmiBlitz3.ab3@19073>   BGT 'noword
0002F276 <AmiBlitz3.ab3@19074>   MOVE.w #$48c0,d1
0002F27C <AmiBlitz3.ab3@19075>   OR.w regnumstore,d1
0002F280 <AmiBlitz3.ab3@19076>   BSR writeword
0002F284 <AmiBlitz3.ab3@19077> BRA 'exit2
0002F288 <AmiBlitz3.ab3@19080>    CMP.b #3,d2
0002F28C <AmiBlitz3.ab3@19081>         BNE 'nolong
0002F290 <AmiBlitz3.ab3@19082> BRA 'exit2
0002F294 <AmiBlitz3.ab3@19085>    CMP.b #4,d2
0002F298 <AmiBlitz3.ab3@19086>         BNE 'noquick
0002F29C <AmiBlitz3.ab3@19087>         MOVE.w #$e080,d1
0002F2A2 <AmiBlitz3.ab3@19088>         OR.w regnumstore,d1
0002F2A6 <AmiBlitz3.ab3@19089>         BSR writeword
0002F2AA <AmiBlitz3.ab3@19090>         MOVE.w #$e080,d1
0002F2B0 <AmiBlitz3.ab3@19091>         OR.w regnumstore,d1
0002F2B4 <AmiBlitz3.ab3@19092>         BSR writeword
0002F2B8 <AmiBlitz3.ab3@19093> BRA 'exit2
0002F2BA <AmiBlitz3.ab3@19096>         MOVEQ #0,d0
0002F2BC <AmiBlitz3.ab3@19097>         MOVEQ #0,d1
0002F2C2 <AmiBlitz3.ab3@19098>         MOVE.w regnumstore,d0
0002F2C4 <AmiBlitz3.ab3@19099>         ASL.l #7,d0
0002F2CA <AmiBlitz3.ab3@19100>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002F2CC <AmiBlitz3.ab3@19101>         OR.l d0,d1
0002F2D2 <AmiBlitz3.ab3@19103>         MOVE.l #$3f000000,d1
0002F2D4 <AmiBlitz3.ab3@19105>         MOVEQ #0,d0
0002F2D6 <AmiBlitz3.ab3@19106>         MOVEQ #0,d1
0002F2DC <AmiBlitz3.ab3@19107>         MOVE.w regnumstore,d0
0002F2DE <AmiBlitz3.ab3@19108>         ASL.l #7,d0
0002F2E0 <AmiBlitz3.ab3@19109>         MOVE.l d0,d1
0002F2E6 <AmiBlitz3.ab3@19110>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002F2E8 <AmiBlitz3.ab3@19111>         ASL.l #3,d0
0002F2EA <AmiBlitz3.ab3@19112>         OR.l d0,d1
0002F2EE <AmiBlitz3.ab3@19113>         BSR writelong
0002F2F0 <AmiBlitz3.ab3@19114>         MOVEQ #0,d0
0002F2F6 <AmiBlitz3.ab3@19115>         MOVE.w regnumstore,d0
0002F2F8 <AmiBlitz3.ab3@19116>         ASL.l #7,d0
0002F2FE <AmiBlitz3.ab3@19117>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002F300 <AmiBlitz3.ab3@19118>         OR.l d0,d1
0002F302 <AmiBlitz3.ab3@19119>         ASL.l #1,d0
0002F304 <AmiBlitz3.ab3@19120>         ASL.l #8,d0
0002F306 <AmiBlitz3.ab3@19121>         OR.l d0,d1
0002F30A <AmiBlitz3.ab3@19122> BRA 'exit
0002F310 <AmiBlitz3.ab3@19125>   CMP.w #$3c01,24(a2)
0002F314 <AmiBlitz3.ab3@19126>   BNE 'noval
0002F316 <AmiBlitz3.ab3@19127>   MOVE.l a2,-(a7)
0002F31A <AmiBlitz3.ab3@19128>   BSR.w JL_0_BB14
0002F31C <AmiBlitz3.ab3@19129>   MOVE.l (a7)+,a2
0002F320 <AmiBlitz3.ab3@19130> BRA 'exit2
0002F328 <AmiBlitz3.ab3@19147>   CMP.l #$41627300,$1a(a2)
0002F32C <AmiBlitz3.ab3@19148>   BNE 'noabs
0002F32E <AmiBlitz3.ab3@19149>   MOVEQ #0,d1
0002F334 <AmiBlitz3.ab3@19150>   MOVE.w regnumstore,d1
0002F336 <AmiBlitz3.ab3@19151>   MOVE.w d1,d0
0002F338 <AmiBlitz3.ab3@19152>   ASL.w #7,d1
0002F33A <AmiBlitz3.ab3@19153>   ASL.w #8,d0
0002F33C <AmiBlitz3.ab3@19154>   ASL.w #2,d0
0002F33E <AmiBlitz3.ab3@19155>   OR.w d0,d1
0002F344 <AmiBlitz3.ab3@19156>   SUBQ.l #8,destpointer                                    ;fpu abs
0002F348 <AmiBlitz3.ab3@19157>   MOVEM.l d3/d1,-(a7)
0002F34C <AmiBlitz3.ab3@19158>   MOVE.w #5,d3
0002F34E <AmiBlitz3.ab3@19159>   EXG d2,d3
0002F354 <AmiBlitz3.ab3@19160>   MOVE.w regnum,-(a7)
0002F35E <AmiBlitz3.ab3@19161>   MOVE.w regnumstore,regnum
0002F362 <AmiBlitz3.ab3@19162>   BSR writeconvertcode
0002F368 <AmiBlitz3.ab3@19163>   MOVE.w (a7)+,regnum
0002F36A <AmiBlitz3.ab3@19164>   EXG d2,d3
0002F36E <AmiBlitz3.ab3@19165>   MOVEM.l (a7)+,d3/d1
0002F374 <AmiBlitz3.ab3@19166>   OR.l #$f2000018,d1
0002F37A <AmiBlitz3.ab3@19167>   CLR.w a2offset
0002F37E <AmiBlitz3.ab3@19168> BRA 'exit
0002F382 <AmiBlitz3.ab3@19171>   CMP.b #5,d2
0002F386 <AmiBlitz3.ab3@19172>   BNE 'nofpu2
0002F38A <AmiBlitz3.ab3@19173>   MOVE.b 24(a2),d0
0002F38E <AmiBlitz3.ab3@19174>   CMP.b #$60,d0                                            ;nolib $edxx
0002F392 <AmiBlitz3.ab3@19175>   BNE 'nofpu
0002F394 <AmiBlitz3.ab3@19176>   MOVEQ #0,d1
0002F39A <AmiBlitz3.ab3@19177>   MOVE.w regnumstore,d1
0002F39C <AmiBlitz3.ab3@19178>   MOVE.w d1,d0
0002F39E <AmiBlitz3.ab3@19179>   ASL.w #7,d1
0002F3A0 <AmiBlitz3.ab3@19180>   ASL.w #8,d0
0002F3A2 <AmiBlitz3.ab3@19181>   ASL.w #2,d0
0002F3A4 <AmiBlitz3.ab3@19182>   OR.w d0,d1
0002F3A8 <AmiBlitz3.ab3@19183>   MOVE.b 25(a2),d0
0002F3AC <AmiBlitz3.ab3@19184>   CMP.b #5,d0
0002F3B0 <AmiBlitz3.ab3@19185>   BNE 'nocos
0002F3B6 <AmiBlitz3.ab3@19186>   OR.l #$f200001d,d1                                       ;fpu cos
0002F3BA <AmiBlitz3.ab3@19187> BRA 'exit
0002F3BE <AmiBlitz3.ab3@19190>   CMP.b #$c,d0
0002F3C2 <AmiBlitz3.ab3@19191>   BNE 'nosqr
0002F3C8 <AmiBlitz3.ab3@19192>   OR.l #$f2000004,d1                                       ;fpu sqr
0002F3CC <AmiBlitz3.ab3@19193> BRA 'exit
0002F3D0 <AmiBlitz3.ab3@19196>   CMP.b #$d,d0
0002F3D4 <AmiBlitz3.ab3@19197>   BNE 'notan
0002F3DA <AmiBlitz3.ab3@19198>   OR.l #$f200000f,d1                                       ;fpu tan
0002F3DE <AmiBlitz3.ab3@19199> BRA 'exit
0002F3E2 <AmiBlitz3.ab3@19202>   CMP.b #$a,d0
0002F3E6 <AmiBlitz3.ab3@19203>   BNE 'nosin
0002F3EC <AmiBlitz3.ab3@19204>   OR.l #$f200000e,d1                                       ;fpu sin
0002F3F0 <AmiBlitz3.ab3@19205> BRA 'exit
0002F3F4 <AmiBlitz3.ab3@19208>   CMP.b #$3,d0
0002F3F8 <AmiBlitz3.ab3@19209>   BNE 'noasin
0002F3FE <AmiBlitz3.ab3@19210>   OR.l #$f200000c,d1                                       ;fpu asin
0002F402 <AmiBlitz3.ab3@19211> BRA 'exit
0002F406 <AmiBlitz3.ab3@19214>   CMP.b #$2,d0
0002F40A <AmiBlitz3.ab3@19215>   BNE 'noacos
0002F410 <AmiBlitz3.ab3@19216>   OR.l #$f200001c,d1                                       ;fpu acos
0002F414 <AmiBlitz3.ab3@19217> BRA 'exit
0002F418 <AmiBlitz3.ab3@19220>   CMP.b #$4,d0
0002F41C <AmiBlitz3.ab3@19221>   BNE 'noatan
0002F422 <AmiBlitz3.ab3@19222>   OR.l #$f200000a,d1                                       ;fpu atan
0002F426 <AmiBlitz3.ab3@19223> BRA 'exit
0002F42A <AmiBlitz3.ab3@19226>   CMP.b #$e,d0
0002F42E <AmiBlitz3.ab3@19227>   BNE 'nohtan
0002F434 <AmiBlitz3.ab3@19228>   OR.l #$f2000009,d1                                       ;fpu htan
0002F438 <AmiBlitz3.ab3@19229> BRA 'exit
0002F43C <AmiBlitz3.ab3@19232>   CMP.b #$6,d0
0002F440 <AmiBlitz3.ab3@19233>   BNE 'nohcos
0002F446 <AmiBlitz3.ab3@19234>   OR.l #$f2000019,d1                                       ;fpu hcos
0002F44A <AmiBlitz3.ab3@19235> BRA 'exit
0002F44E <AmiBlitz3.ab3@19238>   CMP.b #$b,d0
0002F452 <AmiBlitz3.ab3@19239>   BNE 'nohsin
0002F458 <AmiBlitz3.ab3@19240>   OR.l #$f2000002,d1                                       ;fpu hsin
0002F45C <AmiBlitz3.ab3@19241> BRA 'exit
0002F460 <AmiBlitz3.ab3@19244>   CMP.b #$9,d0
0002F464 <AmiBlitz3.ab3@19245>   BNE 'nolog
0002F46A <AmiBlitz3.ab3@19246>   OR.l #$f2000014,d1                                       ;fpu log
0002F46E <AmiBlitz3.ab3@19247> BRA 'exit
0002F472 <AmiBlitz3.ab3@19250>   CMP.b #$8,d0
0002F476 <AmiBlitz3.ab3@19251>   BNE 'nolog10
0002F47C <AmiBlitz3.ab3@19252>   OR.l #$f2000015,d1                                       ;fpu log10
0002F480 <AmiBlitz3.ab3@19253> BRA 'exit
0002F484 <AmiBlitz3.ab3@19256>   CMP.b #$7,d0
0002F488 <AmiBlitz3.ab3@19257>   BNE 'noexp
0002F48E <AmiBlitz3.ab3@19258>   OR.l #$f2000010,d1                                       ;fpu exp
0002F492 <AmiBlitz3.ab3@19259> BRA 'exit
0002F498 <AmiBlitz3.ab3@19262>   LEA fpuerr,a0
0002F49A <AmiBlitz3.ab3@19263>   MOVE.l a0,-(a7)
0002F4A0 <AmiBlitz3.ab3@19264> JMP handle_compileerror
0002F4A4 <AmiBlitz3.ab3@19268>   CMP.b #$3c,d0
0002F4A8 <AmiBlitz3.ab3@19269>   BNE 'nofpu2
0002F4AA <AmiBlitz3.ab3@19270>   MOVEQ #0,d1
0002F4B0 <AmiBlitz3.ab3@19271>       MOVE.w regnumstore,d1
0002F4B2 <AmiBlitz3.ab3@19272>       MOVE.w d1,d0
0002F4B4 <AmiBlitz3.ab3@19273>       ASL.w #7,d1
0002F4B6 <AmiBlitz3.ab3@19274>       ASL.w #8,d0
0002F4B8 <AmiBlitz3.ab3@19275>       ASL.w #2,d0
0002F4BA <AmiBlitz3.ab3@19276>       OR.w d0,d1
0002F4C0 <AmiBlitz3.ab3@19277>       CMP.b #$03,25(a2)
0002F4C4 <AmiBlitz3.ab3@19278>       BNE 'nosgn
0002F4CA <AmiBlitz3.ab3@19281>       SUBQ.l #8,destpointer                                ;fpu sgn
0002F4D0 <AmiBlitz3.ab3@19282>         OR.l #$f200003a,d1
0002F4D4 <AmiBlitz3.ab3@19283>         BSR writelong
0002F4DA <AmiBlitz3.ab3@19284>         CLR.w a2offset
0002F4E0 <AmiBlitz3.ab3@19285>          MOVE.l #$F28E0006,d1
0002F4E4 <AmiBlitz3.ab3@19286>          BSR writelong
0002F4EA <AmiBlitz3.ab3@19287>   MOVE.l #$7000600a,d1
0002F4EE <AmiBlitz3.ab3@19288>   BSR writelong
0002F4F4 <AmiBlitz3.ab3@19289>   MOVE.l #$70014840,d1
0002F4F8 <AmiBlitz3.ab3@19290>   BSR writelong
0002F4FE <AmiBlitz3.ab3@19291>   MOVE.l #$F292,d1
0002F502 <AmiBlitz3.ab3@19292>   BSR writeword
0002F508 <AmiBlitz3.ab3@19293>   MOVE.l #$000470FF,d1
0002F50C <AmiBlitz3.ab3@19294> BRA 'exit
0002F514 <AmiBlitz3.ab3@19297>   CMP.l #"Frac",$1a(a2)
0002F518 <AmiBlitz3.ab3@19298>   BNE 'nofrac
0002F51E <AmiBlitz3.ab3@19299> JMP notwork
0002F522 <AmiBlitz3.ab3@19340> BRA 'exit
0002F526 <AmiBlitz3.ab3@19344>   BSR.w JL_0_BB14                                          ;write lib code
0002F52C <AmiBlitz3.ab3@19345>   MOVE.l (A7)+,libisat
0002F52E <AmiBlitz3.ab3@19346> RTS
0002F532 <AmiBlitz3.ab3@19349>   BSR writelong
0002F538 <AmiBlitz3.ab3@19352>   MOVE.l (A7)+,libisat
0002F53A <AmiBlitz3.ab3@19353> RTS
0002F53E <AmiBlitz3.ab3@19357>   BSR.w fetchregs
0002F544 <AmiBlitz3.ab3@19358>   TST.b debugmode
0002F548 <AmiBlitz3.ab3@19359>    BEQ.w JL_0_BB76
0002F54A <AmiBlitz3.ab3@19360>   MOVE.l (A2),D1
0002F54E <AmiBlitz3.ab3@19361>   OR.l $8(A2),D1
0002F552 <AmiBlitz3.ab3@19362>   BCLR #$0,D1
0002F554 <AmiBlitz3.ab3@19363>   TST.l D1
0002F558 <AmiBlitz3.ab3@19364>    BEQ.w JL_0_BB76
0002F55A <AmiBlitz3.ab3@19365>   MOVE.l (A2)+,D1
0002F55E <AmiBlitz3.ab3@19366>   BTST #$0,D1
0002F562 <AmiBlitz3.ab3@19367>    BEQ.w JL_0_BB60
0002F568 <AmiBlitz3.ab3@19368>   TST.w blitzmode
0002F56C <AmiBlitz3.ab3@19369>    BPL.w blitzerr
0002F572 <AmiBlitz3.ab3@19370>   TST.b debugmode
0002F576 <AmiBlitz3.ab3@19371>    BEQ.w JL_0_BB5C
0002F578 <AmiBlitz3.ab3@19372>   MOVE.l D1,-(A7)
0002F57C <AmiBlitz3.ab3@19373>   MOVE.w #$C311,D1
0002F580 <AmiBlitz3.ab3@19374>    BSR.w makebtst
0002F582 <AmiBlitz3.ab3@19375>   MOVE.l (A7)+,D1
0002F586 <AmiBlitz3.ab3@19378>   BCLR #$0,D1
0002F588 <AmiBlitz3.ab3@19381>   TST.l D1
0002F58C <AmiBlitz3.ab3@19382>    BSR.w JL_0_BBC6
0002F58E <AmiBlitz3.ab3@19383>   MOVE.l (A2)+,D1
0002F592 <AmiBlitz3.ab3@19384>    BSR.w JL_0_BB98
0002F594 <AmiBlitz3.ab3@19385>   MOVE.l (A2)+,D1
0002F598 <AmiBlitz3.ab3@19386>    BSR.w JL_0_BBC6
0002F59C <AmiBlitz3.ab3@19387> BRA.w JL_0_BB90
0002F5A2 <AmiBlitz3.ab3@19390>   BTST #$0,$3(A2)
0002F5A6 <AmiBlitz3.ab3@19391>    BEQ.w JL_0_BB88
0002F5AA <AmiBlitz3.ab3@19392>   MOVE.w blitzmode(PC),D1
0002F5AE <AmiBlitz3.ab3@19393>    BPL.w blitzerr
0002F5B2 <AmiBlitz3.ab3@19396>   MOVE.l $4(A2),D1
0002F5B6 <AmiBlitz3.ab3@19397>    BSR.w JL_0_BB98
0002F5BC <AmiBlitz3.ab3@19400>   MOVEA.l libisat,A2
0002F5BE <AmiBlitz3.ab3@19401> RTS
0002F5C2 <AmiBlitz3.ab3@19404>   BTST #$0,D1
0002F5C6 <AmiBlitz3.ab3@19405>    BEQ.w JL_0_BBC4
0002F5CC <AmiBlitz3.ab3@19406>   TST.w blitzmode
0002F5D0 <AmiBlitz3.ab3@19407>    BMI.w amigaerr
0002F5D6 <AmiBlitz3.ab3@19408>   TST.b debugmode
0002F5DA <AmiBlitz3.ab3@19409>    BEQ.w JL_0_BBC0
0002F5DC <AmiBlitz3.ab3@19410>   MOVE.l D1,-(A7)
0002F5E0 <AmiBlitz3.ab3@19411>   MOVE.w #$C312,D1
0002F5E4 <AmiBlitz3.ab3@19412>    BSR.w makebtst
0002F5E6 <AmiBlitz3.ab3@19413>   MOVE.l (A7)+,D1
0002F5EA <AmiBlitz3.ab3@19416>   BCLR #$0,D1
0002F5EC <AmiBlitz3.ab3@19419>   TST.l D1
0002F5F0 <AmiBlitz3.ab3@19422>    BEQ.w JL_0_BBD2
0002F5F2 <AmiBlitz3.ab3@19423>   MOVE.l A1,-(A7)
0002F5F6 <AmiBlitz3.ab3@19424>    BSR.w JL_0_BBD4
0002F5F8 <AmiBlitz3.ab3@19425>   MOVEA.l (A7)+,A1
0002F5FA <AmiBlitz3.ab3@19428> RTS
0002F600 <AmiBlitz3.ab3@19431>   MOVEA.l libisat,A0
0002F606 <AmiBlitz3.ab3@19432>   TST.w cfetchmode
0002F60A <AmiBlitz3.ab3@19433>    BEQ.w JL_0_BBF6
0002F60C <AmiBlitz3.ab3@19434>   ADD.l A0,D1
0002F60E <AmiBlitz3.ab3@19435>   MOVE.l D1,-(A7)
0002F612 <AmiBlitz3.ab3@19436>   MOVE.w #$4EB9,D1
0002F616 <AmiBlitz3.ab3@19437>    BSR.w writeword
0002F618 <AmiBlitz3.ab3@19438>   MOVE.l (A7)+,D1
0002F61C <AmiBlitz3.ab3@19439> BRA.w writelong
0002F620 <AmiBlitz3.ab3@19442>   LEA $0(A0,D1.L),A1
0002F626 <AmiBlitz3.ab3@19443>   CLR.w inline
0002F62A <AmiBlitz3.ab3@19446>   CMPI.b #$A0,(A1)+
0002F62E <AmiBlitz3.ab3@19447>    BNE.w JL_0_BC68
0002F630 <AmiBlitz3.ab3@19448>   TST.b (A1)+
0002F634 <AmiBlitz3.ab3@19449>    BEQ.w JL_0_BC18
0002F63A <AmiBlitz3.ab3@19450>   CMPI.b #$1,-$1(A1)
0002F63E <AmiBlitz3.ab3@19451>    BEQ.w JL_0_BC24
0002F644 <AmiBlitz3.ab3@19454>   MOVE.w (A1)+,inline
0002F646 <AmiBlitz3.ab3@19455>   ADDQ.l #4,D1
0002F64A <AmiBlitz3.ab3@19456> BRA.w JL_0_BC00
0002F650 <AmiBlitz3.ab3@19459>   TST.w blitzmode
0002F654 <AmiBlitz3.ab3@19460>    BPL.w JL_0_BC4A
0002F65A <AmiBlitz3.ab3@19461>   TST.b debugmode
0002F65E <AmiBlitz3.ab3@19462>    BEQ.w JL_0_BC40
0002F662 <AmiBlitz3.ab3@19463>   MOVE.w #$C311,D1
0002F666 <AmiBlitz3.ab3@19464>    BSR.w makebtst
0002F668 <AmiBlitz3.ab3@19467>   MOVE.l (A1)+,D1
0002F66C <AmiBlitz3.ab3@19468>   LEA $0(A0,D1.L),A1
0002F670 <AmiBlitz3.ab3@19469> BRA.w JL_0_BC00
0002F676 <AmiBlitz3.ab3@19472>   TST.b debugmode
0002F67A <AmiBlitz3.ab3@19473>    BEQ.w JL_0_BC60
0002F67C <AmiBlitz3.ab3@19474>   MOVE.l D1,-(A7)
0002F680 <AmiBlitz3.ab3@19475>   MOVE.w #$C312,D1
0002F684 <AmiBlitz3.ab3@19476>    BSR.w makebtst
0002F686 <AmiBlitz3.ab3@19477>   MOVE.l (A7)+,D1
0002F688 <AmiBlitz3.ab3@19480>   ADDQ.w #4,A1
0002F68A <AmiBlitz3.ab3@19481>   ADDQ.l #6,D1
0002F68E <AmiBlitz3.ab3@19482> BRA.w JL_0_BC00
0002F694 <AmiBlitz3.ab3@19485>   TST.w inline
0002F698 <AmiBlitz3.ab3@19486>    BEQ.w JL_0_BC7E
0002F69A <AmiBlitz3.ab3@19487>   SUBQ.w #1,A1
0002F69C <AmiBlitz3.ab3@19488>   MOVEA.l A1,A0
0002F6A0 <AmiBlitz3.ab3@19489>   ADDA.w inline(PC),A1
0002F6A4 <AmiBlitz3.ab3@19490> BRA.w pokecode2
0002F6A8 <AmiBlitz3.ab3@19493>   MOVEM.l a0/D1,-(A7)
0002F6AE <AmiBlitz3.ab3@19494>   TST.w debugversion
0002F6B2 <AmiBlitz3.ab3@19495>   BEQ 'l11
0002F6BA <AmiBlitz3.ab3@19496>   BTST #$7,link_debuginfo
0002F6BE <AmiBlitz3.ab3@19497>   BEQ.w 'l11
0002F6C4 <AmiBlitz3.ab3@19498>   MOVE.l lastinstruction,d1
0002F6C8 <AmiBlitz3.ab3@19499>   BEQ 'l11
0002F6CE <AmiBlitz3.ab3@19500>   CLR.l lastinstruction
0002F6D4 <AmiBlitz3.ab3@19501>   CMP.l #$e000,d1
0002F6D8 <AmiBlitz3.ab3@19502>   BGE 'ln99
0002F6DE <AmiBlitz3.ab3@19503>   LEA notf,a0
0002F6E4 <AmiBlitz3.ab3@19504>   CMP.l #$c601,d1
0002F6E8 <AmiBlitz3.ab3@19505>   BNE 'ln1
0002F6EE <AmiBlitz3.ab3@19506>   LEA strcpy,a0
0002F6F2 <AmiBlitz3.ab3@19507> BRA 'ln3
0002F6F8 <AmiBlitz3.ab3@19510>   CMP.l #$c700,d1
0002F6FC <AmiBlitz3.ab3@19511>   BNE 'ln2
0002F702 <AmiBlitz3.ab3@19512>   LEA strvar,a0
0002F706 <AmiBlitz3.ab3@19513> BRA 'ln3
0002F70C <AmiBlitz3.ab3@19516>   CMP.l #$ce00,d1
0002F710 <AmiBlitz3.ab3@19517>   BNE 'ln4
0002F716 <AmiBlitz3.ab3@19518>   LEA strcmp,a0
0002F71A <AmiBlitz3.ab3@19519> BRA 'ln3
0002F720 <AmiBlitz3.ab3@19522>   CMP.l #$ca00,d1
0002F724 <AmiBlitz3.ab3@19523>   BNE 'ln5
0002F72A <AmiBlitz3.ab3@19524>   LEA qmul,a0
0002F72E <AmiBlitz3.ab3@19525> BRA 'ln3
0002F734 <AmiBlitz3.ab3@19528>   CMP.l #$d000,d1
0002F738 <AmiBlitz3.ab3@19529>      BNE 'ln6
0002F73E <AmiBlitz3.ab3@19530>      LEA _MaxLen,a0
0002F742 <AmiBlitz3.ab3@19531> BRA 'ln3
0002F748 <AmiBlitz3.ab3@19534>   CMP.l #$cb00,d1
0002F74C <AmiBlitz3.ab3@19535>   BNE 'ln3
0002F752 <AmiBlitz3.ab3@19536>   LEA qdiv,a0
0002F756 <AmiBlitz3.ab3@19537> BRA 'ln3
0002F758 <AmiBlitz3.ab3@19540>   MOVE.l d1,a0
0002F75C <AmiBlitz3.ab3@19541>   LEA $8(a0),a0
0002F760 <AmiBlitz3.ab3@19544>   CMP.w #$ffff,(a0)+
0002F764 <AmiBlitz3.ab3@19545>   BNE 'l1
0002F768 <AmiBlitz3.ab3@19546>   LEA 6(a0),a0
0002F76C <AmiBlitz3.ab3@19549>   MOVEM.l a1/a2/d7/d2,-(a7)
0002F76E <AmiBlitz3.ab3@19550>   MOVEQ #0,d2
0002F774 <AmiBlitz3.ab3@19551>   LEA ptr_parameterstore,a1
0002F776 <AmiBlitz3.ab3@19554>   ADDQ.l #1,d2
0002F778 <AmiBlitz3.ab3@19555>   MOVE.b (a0)+,d0
0002F77C <AmiBlitz3.ab3@19556> 
0002F780 <AmiBlitz3.ab3@19557>   BNE 'nodollar
0002F784 <AmiBlitz3.ab3@19558>   MOVE.b #"S",d0
0002F788 <AmiBlitz3.ab3@19560>   CMP.b #"?",d0
0002F78C <AmiBlitz3.ab3@19561>   BEQ 'nolabelwrite
0002F78E <AmiBlitz3.ab3@19562>   MOVE.b d0,(a1)+
0002F792 <AmiBlitz3.ab3@19563>   BNE 'l2
0002F798 <AmiBlitz3.ab3@19564>   MOVE.w #"__",-1(a1)
0002F79A <AmiBlitz3.ab3@19565>   ADDQ.l #2,d2
0002F79E <AmiBlitz3.ab3@19566>   CLR.b 1(a1)
0002F7A4 <AmiBlitz3.ab3@19567>   JSR findlabel2
0002F7A8 <AmiBlitz3.ab3@19568>   BEQ 'l3
0002F7AE <AmiBlitz3.ab3@19569>   JSR addlabelhash
0002F7B2 <AmiBlitz3.ab3@19572>   CLR.l 4(a2)
0002F7B6 <AmiBlitz3.ab3@19573>   MOVE.l $14(a7),a0
0002F7BA <AmiBlitz3.ab3@19574>   MOVE.l $10(a7),d1
0002F7BE <AmiBlitz3.ab3@19575>   SUB.l $12(a0),d1
0002F7C2 <AmiBlitz3.ab3@19576>   ADD.l $28(a0),d1
0002F7C6 <AmiBlitz3.ab3@19577>   MOVE.l d1,8(a2)
0002F7CA <AmiBlitz3.ab3@19578> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002F7D0 <AmiBlitz3.ab3@19581>   TST.b typecheck
0002F7D4 <AmiBlitz3.ab3@19582>   BEQ 'p1
0002F7DA <AmiBlitz3.ab3@19583>   MOVE.l lasttoken,d1
0002F7E0 <AmiBlitz3.ab3@19584>   CMP.l #$da01,d1                                          ;poke
0002F7E4 <AmiBlitz3.ab3@19585>   BEQ 'lp1
0002F7EA <AmiBlitz3.ab3@19586>   CMP.l #$da02,d1                                          ;peek
0002F7EE <AmiBlitz3.ab3@19587>   BNE 'p1
0002F7F4 <AmiBlitz3.ab3@19590>   TST.b peekaddrsize
0002F7F8 <AmiBlitz3.ab3@19591>   BEQ 'p1
0002F800 <AmiBlitz3.ab3@19592>   CMP.b #3,peekaddrsize
0002F804 <AmiBlitz3.ab3@19593>   BNE errormsg_onlylong
0002F80A <AmiBlitz3.ab3@19594>   CLR.b peekaddrsize
0002F810 <AmiBlitz3.ab3@19602>    TST.b fpu
0002F814 <AmiBlitz3.ab3@19603>   BNE 'optf
0002F81A <AmiBlitz3.ab3@19604>   TST.b fast
0002F81E <AmiBlitz3.ab3@19605>   BEQ JL11a2
0002F826 <AmiBlitz3.ab3@19612>   CMP.l #"Poke",20(a2)                                     ;poke
0002F82A <AmiBlitz3.ab3@19613>   BNE peekopt
0002F82E <AmiBlitz3.ab3@19614>   TST.b 24(a2)
0002F832 <AmiBlitz3.ab3@19615>   BNE peekopt
0002F836 <AmiBlitz3.ab3@19616>   CMP.b #3,d2
0002F83A <AmiBlitz3.ab3@19617>   BNE 'lw1
0002F840 <AmiBlitz3.ab3@19620>   MOVE.l #$21821990,d1
0002F844 <AmiBlitz3.ab3@19621> BRA.s 'lpx
0002F848 <AmiBlitz3.ab3@19624>   CMP.b #2,d2
0002F84C <AmiBlitz3.ab3@19625>   BNE 'lb1
0002F852 <AmiBlitz3.ab3@19626>   MOVE.l #$31821990,d1
0002F856 <AmiBlitz3.ab3@19627> BRA.s 'lpx
0002F85A <AmiBlitz3.ab3@19630>   CMP.b #1,d2
0002F85E <AmiBlitz3.ab3@19631>   BNE 'lp3
0002F864 <AmiBlitz3.ab3@19632>   MOVE.l #$11821990,d1
0002F868 <AmiBlitz3.ab3@19633> BRA.s 'lpx
0002F86C <AmiBlitz3.ab3@19636>   CMP.b #5,d2
0002F870 <AmiBlitz3.ab3@19637>     BNE JL11a2
0002F876 <AmiBlitz3.ab3@19638>     TST.b fpu
0002F87A <AmiBlitz3.ab3@19639>     BEQ 'll1
0002F880 <AmiBlitz3.ab3@19640>      MOVE.l destpointer,a4
0002F888 <AmiBlitz3.ab3@19641>     CMP.l #$f22d4500,-6(a4)
0002F88C <AmiBlitz3.ab3@19642>     BNE 'noglob
0002F892 <AmiBlitz3.ab3@19643>     TST.b doublepeek
0002F896 <AmiBlitz3.ab3@19644>     BNE 'noglob
0002F89C <AmiBlitz3.ab3@19645>     MOVE.w -2(a4),-4(a4)
0002F8A2 <AmiBlitz3.ab3@19646>     MOVE.w #$21ad,-6(a4)
0002F8A8 <AmiBlitz3.ab3@19647>     MOVE.w #$1990,-2(a4)
0002F8B0 <AmiBlitz3.ab3@19648>     MOVE.w #9,peeksize
0002F8B2 <AmiBlitz3.ab3@19649>     ADDQ #8,a7
0002F8B4 <AmiBlitz3.ab3@19650> RTS
0002F8BC <AmiBlitz3.ab3@19653>     CMP.l #$f22c4500,-6(a4)
0002F8C0 <AmiBlitz3.ab3@19654>     BNE 'nolocal
0002F8C6 <AmiBlitz3.ab3@19655>     MOVE.w -2(a4),-4(a4)
0002F8CC <AmiBlitz3.ab3@19656>     TST.b doublepeek                                       ;dont move longfix on double floats
0002F8D0 <AmiBlitz3.ab3@19657>     BNE 'nolocal
0002F8D6 <AmiBlitz3.ab3@19658>     MOVE.w #$21ac,-6(a4)
0002F8DC <AmiBlitz3.ab3@19659>     MOVE.w #$1990,-2(a4)
0002F8E4 <AmiBlitz3.ab3@19660>     MOVE.w #9,peeksize
0002F8E6 <AmiBlitz3.ab3@19661>     ADDQ #8,a7
0002F8E8 <AmiBlitz3.ab3@19662> RTS
0002F8EC <AmiBlitz3.ab3@19665>     MOVE.w #$f230,d1
0002F8F0 <AmiBlitz3.ab3@19666>     BSR writeword
0002F8F6 <AmiBlitz3.ab3@19667>   MOVE.l #$65001990,d1
0002F8FC <AmiBlitz3.ab3@19668>   TST.b doublepeek
0002F900 <AmiBlitz3.ab3@19669>   BEQ 'lpx
0002F906 <AmiBlitz3.ab3@19670>   OR.l   #$10000000,d1
0002F908 <AmiBlitz3.ab3@19674>   ADDQ #8,a7
0002F910 <AmiBlitz3.ab3@19675>   MOVE.w #9,peeksize
0002F914 <AmiBlitz3.ab3@19676> BRA writelong
0002F91C <AmiBlitz3.ab3@19679>   CMP.l #"Peek",20(a2)
0002F920 <AmiBlitz3.ab3@19680>   BNE 'l10
0002F924 <AmiBlitz3.ab3@19681>   TST.b 24(a2)
0002F928 <AmiBlitz3.ab3@19682>   BNE 'l10
0002F930 <AmiBlitz3.ab3@19683>   CMP.w #7,peeksize
0002F934 <AmiBlitz3.ab3@19684>   BEQ 'l10
0002F93C <AmiBlitz3.ab3@19685>    CMP.w #3,peeksize
0002F940 <AmiBlitz3.ab3@19686>    BNE.s 'lw1
0002F946 <AmiBlitz3.ab3@19689>   MOVE.l #$20301990,d1
0002F94A <AmiBlitz3.ab3@19690> BRA exitjsr
0002F952 <AmiBlitz3.ab3@19693>   CMP.w #2,peeksize
0002F956 <AmiBlitz3.ab3@19694>    BNE.s 'lb1
0002F95C <AmiBlitz3.ab3@19695>    MOVE.l #$30301990,d1
0002F960 <AmiBlitz3.ab3@19696> BRA exitjsr
0002F968 <AmiBlitz3.ab3@19699>   CMP.w #1,peeksize
0002F96C <AmiBlitz3.ab3@19700>    BNE.s 'lf1
0002F972 <AmiBlitz3.ab3@19701>    MOVE.l #$10301990,d1
0002F976 <AmiBlitz3.ab3@19702> BRA exitjsr
0002F97E <AmiBlitz3.ab3@19705>   CMP.w #5,peeksize
0002F982 <AmiBlitz3.ab3@19706>    BNE 'l10
0002F988 <AmiBlitz3.ab3@19707>    TST.b fpu
0002F98C <AmiBlitz3.ab3@19708>    BEQ 'll1
0002F990 <AmiBlitz3.ab3@19709>    MOVE.w #$f230,d1
0002F994 <AmiBlitz3.ab3@19710>    BSR writeword
0002F996 <AmiBlitz3.ab3@19711>    MOVEQ #0,d1
0002F99C <AmiBlitz3.ab3@19712>    MOVE.w tempregnum,d1
0002F99E <AmiBlitz3.ab3@19713>    ASL.l #7,d1
0002F9A0 <AmiBlitz3.ab3@19714>    ASL.l #8,d1
0002F9A2 <AmiBlitz3.ab3@19715>    ASL.l #8,d1
0002F9A8 <AmiBlitz3.ab3@19716>    ADD.l #$44001990,d1
0002F9AE <AmiBlitz3.ab3@19717>     TST.b doublepeek
0002F9B2 <AmiBlitz3.ab3@19718>     BEQ 'lpx2
0002F9B8 <AmiBlitz3.ab3@19719>     OR.l   #$10000000,d1
0002F9BC <AmiBlitz3.ab3@19721> BRA exitjsr
0002F9C0 <AmiBlitz3.ab3@19725>   MOVE.w #$4EB9,D1
0002F9C4 <AmiBlitz3.ab3@19726>    BSR.w writeword                                         ;writesysjsr
0002F9C8 <AmiBlitz3.ab3@19727>   MOVEM.l (A7)+,a0/D1
0002F9CE <AmiBlitz3.ab3@19728>    JSR addoff
0002F9D2 <AmiBlitz3.ab3@19729>   SUB.l $12(A0),D1
0002F9D6 <AmiBlitz3.ab3@19730>   ADD.l $28(A0),D1
0002F9DA <AmiBlitz3.ab3@19731> BRA.w writelong
0002F9DC <AmiBlitz3.ab3@19736>   MOVE.w D1,-(A7)
0002F9E0 <AmiBlitz3.ab3@19737>   MOVE.w tstmode(PC),D1
0002F9E4 <AmiBlitz3.ab3@19738>    BSR.w writeword
0002F9E8 <AmiBlitz3.ab3@19739>    BSR.w getbbase
0002F9EC <AmiBlitz3.ab3@19740>    BSR.w writeword
0002F9EE <AmiBlitz3.ab3@19741>   MOVE.w (A7)+,D1
0002F9F2 <AmiBlitz3.ab3@19742>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002F9F6 <AmiBlitz3.ab3@19743>    BSR.w Atokejsr
0002F9FA <AmiBlitz3.ab3@19744>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002F9FC <AmiBlitz3.ab3@19745> RTS
0002FA00 <AmiBlitz3.ab3@19753>   MOVE.w blitzoff(PC),D1
0002FA04 <AmiBlitz3.ab3@19754>   CMP.w #-$1,D1
0002FA08 <AmiBlitz3.ab3@19755>    BNE.w getbbase__done
0002FA0E <AmiBlitz3.ab3@19756>   ADDQ.w #1,globalvarpointer
0002FA16 <AmiBlitz3.ab3@19757>   BCLR #$0,globalvarpointer+1
0002FA1C <AmiBlitz3.ab3@19758>   MOVE.w globalvarpointer,D1
0002FA22 <AmiBlitz3.ab3@19759>   MOVE.w D1,blitzoff
0002FA28 <AmiBlitz3.ab3@19760>   ADDQ.w #2,globalvarpointer
0002FA2A <AmiBlitz3.ab3@19763> RTS
0002FA2E <AmiBlitz3.ab3@19767> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002FA30 <AmiBlitz3.ab3@19770> inline:     Ds.w 1
0002FA32 <AmiBlitz3.ab3@19771> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002FA34 <AmiBlitz3.ab3@19772> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002FA36 <AmiBlitz3.ab3@19776>   MOVE.w (A2)+,D1
0002FA3A <AmiBlitz3.ab3@19777>    BEQ.w fetchregs__done
0002FA3C <AmiBlitz3.ab3@19778>   MOVE.w (A2)+,D2
0002FA40 <AmiBlitz3.ab3@19779>    BSR.w toreg
0002FA44 <AmiBlitz3.ab3@19780> BRA.w fetchregs
0002FA46 <AmiBlitz3.ab3@19783> RTS
0002FA4A <AmiBlitz3.ab3@19788>   CMP.w #-$100,D2
0002FA4E <AmiBlitz3.ab3@19789>    BCC.w toreg__yeah
0002FA52 <AmiBlitz3.ab3@19791>   BCLR #$F,D2
0002FA56 <AmiBlitz3.ab3@19792>    BEQ.w toreg__nobm
0002FA5C <AmiBlitz3.ab3@19794>   TST.w blitzmode
0002FA60 <AmiBlitz3.ab3@19795>    BMI.w toreg__yeah
0002FA62 <AmiBlitz3.ab3@19796> RTS
0002FA66 <AmiBlitz3.ab3@19799>   BCLR #$E,D2
0002FA6A <AmiBlitz3.ab3@19800>    BEQ.w toreg__yeah
0002FA70 <AmiBlitz3.ab3@19802>   TST.w blitzmode
0002FA74 <AmiBlitz3.ab3@19803>    BPL.w toreg__yeah
0002FA76 <AmiBlitz3.ab3@19804> RTS
0002FA7C <AmiBlitz3.ab3@19807>   JSR uselib
0002FA7E <AmiBlitz3.ab3@19808>   TST.b D2
0002FA82 <AmiBlitz3.ab3@19809>    BEQ.w toreg__norm
0002FA86 <AmiBlitz3.ab3@19810>   CMP.b #$4,D2
0002FA8A <AmiBlitz3.ab3@19811>    BNE.w toreg__suv
0002FA8E <AmiBlitz3.ab3@19812>   MOVE.w #$0004,-(A7)
0002FA94 <AmiBlitz3.ab3@19813>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002FA98 <AmiBlitz3.ab3@19814> BRA.w toreg__sendmd
0002FA9C <AmiBlitz3.ab3@19817>   CMP.b #$3,D2
0002FAA0 <AmiBlitz3.ab3@19818>    BNE.w toreg__notnmax
0002FAA2 <AmiBlitz3.ab3@19819>   CLR.w -(A7)
0002FAA8 <AmiBlitz3.ab3@19820>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002FAAA <AmiBlitz3.ab3@19826>   LSR.w #8,D2
0002FAAE <AmiBlitz3.ab3@19827>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002FAB2 <AmiBlitz3.ab3@19828>   BTST #$7,D2
0002FAB6 <AmiBlitz3.ab3@19829>    BEQ.w toreg__skipad
0002FABA <AmiBlitz3.ab3@19830>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002FABE <AmiBlitz3.ab3@19831>   CMP.w #$16,D2
0002FAC2 <AmiBlitz3.ab3@19832>    BNE.w toreg__skipad
0002FACA <AmiBlitz3.ab3@19833>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002FACE <AmiBlitz3.ab3@19836>   ANDI.w #$7,D2
0002FAD0 <AmiBlitz3.ab3@19837>   LSL.w #8,D2
0002FAD2 <AmiBlitz3.ab3@19838>   LSL.w #1,D2
0002FAD4 <AmiBlitz3.ab3@19839>   OR.w D2,D1
0002FAD8 <AmiBlitz3.ab3@19840>    BSR.w writeword
0002FADC <AmiBlitz3.ab3@19841>   MOVE.l $12(A1),D1
0002FADE <AmiBlitz3.ab3@19842>   ADD.l (A7)+,D1
0002FAE2 <AmiBlitz3.ab3@19843>   MOVE.w $0(A1,D1.L),D1
0002FAE4 <AmiBlitz3.ab3@19844>   ADD.w (A7)+,D1
0002FAE8 <AmiBlitz3.ab3@19845> BRA.w writeword
0002FAEA <AmiBlitz3.ab3@19848>   MOVE.w D2,-(A7)
0002FAEC <AmiBlitz3.ab3@19849>   LSR.w #8,D2
0002FAF0 <AmiBlitz3.ab3@19850>   CMP.w #$16,D2
0002FAF4 <AmiBlitz3.ab3@19851>    BNE.w toreg__isnta6
0002FAFC <AmiBlitz3.ab3@19852>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002FB00 <AmiBlitz3.ab3@19855>   MOVE.l $12(A1),D1                                        ;objectspace
0002FB04 <AmiBlitz3.ab3@19856>   MOVE.w -$6(A1,D1.L),-(A7)
0002FB08 <AmiBlitz3.ab3@19857>    BSR.w makeregop
0002FB0C <AmiBlitz3.ab3@19858>    BSR.w writeword
0002FB0E <AmiBlitz3.ab3@19859>   MOVE.w (A7)+,D1
0002FB10 <AmiBlitz3.ab3@19860>   MOVE.w (A7)+,D2
0002FB12 <AmiBlitz3.ab3@19861>   TST.b D2
0002FB16 <AmiBlitz3.ab3@19862>    BPL.w toreg__skippy1
0002FB1A <AmiBlitz3.ab3@19867>    BSR.w writeword                                         ;move.l x(a5),dn
0002FB1C <AmiBlitz3.ab3@19868>   MOVE.w D2,-(A7)                                          ;store reg used
0002FB20 <AmiBlitz3.ab3@19870>   ADDA.l $12(A1),A1
0002FB22 <AmiBlitz3.ab3@19871>   MOVE.b D2,D1
0002FB26 <AmiBlitz3.ab3@19872>   ANDI.w #$7,D1
0002FB2C <AmiBlitz3.ab3@19874>   TST.b debugmode
0002FB30 <AmiBlitz3.ab3@19875>    BEQ.w toreg__norerr
0002FB32 <AmiBlitz3.ab3@19877>   MOVE.w D1,-(A7)
0002FB34 <AmiBlitz3.ab3@19878>   LSL.w #8,D1
0002FB36 <AmiBlitz3.ab3@19879>   LSL.w #1,D1
0002FB3A <AmiBlitz3.ab3@19880>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002FB3E <AmiBlitz3.ab3@19881>    BSR.w writeword
0002FB42 <AmiBlitz3.ab3@19882>   MOVE.w -$4(A1),D1
0002FB46 <AmiBlitz3.ab3@19883>    BSR.w writeword
0002FB4A <AmiBlitz3.ab3@19884>   MOVE.l maxchk(PC),D1                                  ;bcs
0002FB4E <AmiBlitz3.ab3@19885>    BSR.w writelong
0002FB50 <AmiBlitz3.ab3@19886>   MOVE.l A2,-(A7)
0002FB54 <AmiBlitz3.ab3@19887>   MOVE.w #$C30A,D1
0002FB58 <AmiBlitz3.ab3@19888>    BSR.w Atokejsr
0002FB5A <AmiBlitz3.ab3@19889>   MOVEA.l (A7)+,A2
0002FB5C <AmiBlitz3.ab3@19890>   MOVE.w (A7)+,D1
0002FB60 <AmiBlitz3.ab3@19893>   MOVE.w -$2(A1),D2                                        ;shift amount
0002FB64 <AmiBlitz3.ab3@19896>   CMP.w #$9,D2
0002FB68 <AmiBlitz3.ab3@19897>    BCS.w toreg__simp
0002FB6C <AmiBlitz3.ab3@19898>   MOVEM.w D1-D2,-(A7)
0002FB6E <AmiBlitz3.ab3@19900>   MOVEQ.l #$00,D2                                          ;!!!!!
0002FB70 <AmiBlitz3.ab3@19902>   LSL.w #8,D2
0002FB72 <AmiBlitz3.ab3@19903>   LSL.w #1,D2
0002FB74 <AmiBlitz3.ab3@19904>   OR.w D2,D1
0002FB78 <AmiBlitz3.ab3@19905>   OR.w lsldn(PC),D1
0002FB7C <AmiBlitz3.ab3@19906>    BSR.w writeword
0002FB80 <AmiBlitz3.ab3@19907>   MOVEM.w (A7)+,D1-D2
0002FB82 <AmiBlitz3.ab3@19908>   SUBQ.w #8,D2
0002FB86 <AmiBlitz3.ab3@19909> BRA.w toreg__shloop
0002FB88 <AmiBlitz3.ab3@19912>   MOVE.w D1,-(A7)
0002FB8C <AmiBlitz3.ab3@19913>   OR.w #$48c0,d1
0002FB90 <AmiBlitz3.ab3@19914>   BSR writeword
0002FB92 <AmiBlitz3.ab3@19915>   MOVE.w (a7),d1
0002FB94 <AmiBlitz3.ab3@19916>   TST.w D2
0002FB98 <AmiBlitz3.ab3@19917>   BEQ.w toreg__simp2
0002FB9C <AmiBlitz3.ab3@19919>   ANDI.w #$7,D2                                            ;?????
0002FB9E <AmiBlitz3.ab3@19921>   LSL.w #8,D2
0002FBA0 <AmiBlitz3.ab3@19922>   LSL.w #1,D2
0002FBA2 <AmiBlitz3.ab3@19923>   OR.w D2,D1
0002FBA6 <AmiBlitz3.ab3@19924>   OR.w lsldn(PC),D1
0002FBAA <AmiBlitz3.ab3@19925>    BSR.w writeword
0002FBAC <AmiBlitz3.ab3@19931>   MOVE.w (A7)+,D1
0002FBB0 <AmiBlitz3.ab3@19932>   ANDI.w #$7,D1
0002FBB4 <AmiBlitz3.ab3@19933>   OR.w maxdo(PC),D1
0002FBB6 <AmiBlitz3.ab3@19934>   MOVE.w (A7)+,D2
0002FBB8 <AmiBlitz3.ab3@19935>   LSL.w #1,D2
0002FBBC <AmiBlitz3.ab3@19936>   ANDI.w #$E00,D2
0002FBBE <AmiBlitz3.ab3@19937>   OR.w D2,D1
0002FBC2 <AmiBlitz3.ab3@19938> BRA.w writeword
0002FBC6 <AmiBlitz3.ab3@19941>   CMP.b #$1,D2
0002FBCA <AmiBlitz3.ab3@19942>    BEQ.w toreg__skippy
0002FBCC <AmiBlitz3.ab3@19946>   ADDQ.w #4,D1
0002FBD2 <AmiBlitz3.ab3@19948>   TST.b debugmode
0002FBD6 <AmiBlitz3.ab3@19949>    BEQ.w toreg__skippy
0002FBDA <AmiBlitz3.ab3@19951>    BSR.w writeword
0002FBDC <AmiBlitz3.ab3@19952>   SWAP D1
0002FBE0 <AmiBlitz3.ab3@19953>   MOVE.w toreg__theretest(PC),D1
0002FBE2 <AmiBlitz3.ab3@19954>   SWAP D1
0002FBE6 <AmiBlitz3.ab3@19955>    BSR.w writelong
0002FBEA <AmiBlitz3.ab3@19956>   MOVE.l toreg__theretest+4(PC),D1
0002FBEE <AmiBlitz3.ab3@19957>    BSR.w writelong
0002FBF2 <AmiBlitz3.ab3@19958>   MOVE.l toreg__theretest+8(PC),D1
0002FBF6 <AmiBlitz3.ab3@19959> BRA.w writelong
0002FBFA <AmiBlitz3.ab3@19962> BRA.w writeword
0002FBFE <AmiBlitz3.ab3@19967>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002FC02 <AmiBlitz3.ab3@19968>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002FC04 <AmiBlitz3.ab3@19969>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002FC06 <AmiBlitz3.ab3@19970>             Dc.b $4E,$40                                   ;TRAP   #00
0002FC08 <AmiBlitz3.ab3@19975>   LSR.w #8,D2
0002FC0C <AmiBlitz3.ab3@19976>   CMP.b #$16,D2
0002FC10 <AmiBlitz3.ab3@19977>    BNE.w toreg__nota6
0002FC14 <AmiBlitz3.ab3@19978>   MOVE.w $A(A1),D1
0002FC1A <AmiBlitz3.ab3@19979>   CMP.w lasta6,D1
0002FC1E <AmiBlitz3.ab3@19980>    BEQ.w toreg__sk
0002FC24 <AmiBlitz3.ab3@19981>   MOVE.w D1,lasta6
0002FC28 <AmiBlitz3.ab3@19984>    BSR.w makeregop
0002FC2C <AmiBlitz3.ab3@19985>   TST.w $1A(A1)
0002FC30 <AmiBlitz3.ab3@19986>    BPL.w toreg__long
0002FC34 <AmiBlitz3.ab3@19987>   CMP.w stackop(PC),D1
0002FC38 <AmiBlitz3.ab3@19988>    BNE.w toreg__notst
0002FC3E <AmiBlitz3.ab3@19989>   SUBQ.w #2,a2offset
0002FC42 <AmiBlitz3.ab3@19992>    ORI.w #$1000,D1
0002FC46 <AmiBlitz3.ab3@19995>    BSR.w writeword
0002FC4A <AmiBlitz3.ab3@19996>   MOVE.w $A(A1),D1
0002FC4E <AmiBlitz3.ab3@19997>    BSR.w writeword
0002FC50 <AmiBlitz3.ab3@20000> RTS
0002FC52 <AmiBlitz3.ab3@20004> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002FC56 <AmiBlitz3.ab3@20005> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002FC5C <AmiBlitz3.ab3@20006>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002FC5E <AmiBlitz3.ab3@20009> 
0002FC60 <AmiBlitz3.ab3@20012>             Dc.b $00,$00
0002FC64 <AmiBlitz3.ab3@20013> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002FC68 <AmiBlitz3.ab3@20020>   CMP.b #$FF,D2
0002FC6C <AmiBlitz3.ab3@20021>    BNE.w makeregop__notst
0002FC70 <AmiBlitz3.ab3@20022>   MOVE.w stackop(PC),D1
0002FC76 <AmiBlitz3.ab3@20023>   ADDQ.w #4,a2offset
0002FC78 <AmiBlitz3.ab3@20024> RTS
0002FC7A <AmiBlitz3.ab3@20027>   MOVE.l A3,-(A7)
0002FC80 <AmiBlitz3.ab3@20028>   LEA regtransd,A3
0002FC84 <AmiBlitz3.ab3@20029>   BTST #$4,D2
0002FC88 <AmiBlitz3.ab3@20030>    BEQ.w makeregop__skip
0002FC8E <AmiBlitz3.ab3@20031>   LEA regtransa,A3
0002FC92 <AmiBlitz3.ab3@20034>   ANDI.w #$7,D2
0002FC94 <AmiBlitz3.ab3@20035>   MOVE.w D2,D1
0002FC96 <AmiBlitz3.ab3@20036>   LSL.w #8,D1
0002FC98 <AmiBlitz3.ab3@20037>   LSL.w #1,D1
0002FC9A <AmiBlitz3.ab3@20038>   OR.w (A3),D1
0002FC9C <AmiBlitz3.ab3@20039>   MOVEA.l (A7)+,A3
0002FC9E <AmiBlitz3.ab3@20040> RTS
0002FCA2 <AmiBlitz3.ab3@20046>   CMP.w #$3C,D0
0002FCA6 <AmiBlitz3.ab3@20047>    BCS.w ifchar__no
0002FCAA <AmiBlitz3.ab3@20048>   CMP.w #$3E,D0
0002FCAE <AmiBlitz3.ab3@20049>    BHI.w ifchar__no
0002FCB2 <AmiBlitz3.ab3@20050>   SUBI.w #$3C,D0
0002FCB4 <AmiBlitz3.ab3@20051>   CMP.w D0,D0
0002FCB6 <AmiBlitz3.ab3@20054> RTS
0002FCC0 <AmiBlitz3.ab3@20059>   MOVE.w oldqflag,instringon
0002FCC6 <AmiBlitz3.ab3@20060>   MOVEA.l lastsourcepos,A5
0002FCCC <AmiBlitz3.ab3@20065>   MOVE.w regnum,-(A7)
0002FCD2 <AmiBlitz3.ab3@20066>   CLR.w regnum
0002FCD8 <AmiBlitz3.ab3@20067>   MOVE.l destpointer,-(A7)
0002FCDE <AmiBlitz3.ab3@20068>   MOVE.l destbufferend,-(A7)
0002FCE4 <AmiBlitz3.ab3@20069>   MOVE.w dontwrite,-(A7)
0002FCEA <AmiBlitz3.ab3@20070>   MOVE.w lasta6,-(A7)
0002FCF0 <AmiBlitz3.ab3@20071>   MOVE.w cfetchmode,-(A7)
0002FCF4 <AmiBlitz3.ab3@20072>    BNE.w JL_0_BFB6
0002FCFE <AmiBlitz3.ab3@20073>   MOVE.l destbufferend,oldlibat
0002FD04 <AmiBlitz3.ab3@20074>   MOVEA.l constpcat,A0
0002FD0A <AmiBlitz3.ab3@20075>   MOVE.l A0,destpointer
0002FD0E <AmiBlitz3.ab3@20076> BRA.w JL_0_BFBC
0002FD14 <AmiBlitz3.ab3@20079>   MOVEA.l destpointer,A0
0002FD16 <AmiBlitz3.ab3@20082>   MOVE.l A0,-(A7)
0002FD20 <AmiBlitz3.ab3@20083>   MOVE.l constlibat,destbufferend
0002FD26 <AmiBlitz3.ab3@20084>   CLR.w dontwrite
0002FD2E <AmiBlitz3.ab3@20086>   MOVE.w #$FFFF,lasta6
0002FD36 <AmiBlitz3.ab3@20087>   MOVE.w #$FFFF,cfetchmode
0002FD3A <AmiBlitz3.ab3@20089>     BSR.w arreval
0002FD3C <AmiBlitz3.ab3@20090>    MOVE.l (a7),a0
0002FE78 <AmiBlitz3.ab3@20092>  !newcalc
0002FE7C <AmiBlitz3.ab3@20093>    BEQ 'l10
0002FE7E <AmiBlitz3.ab3@20094>    MOVE.l d0,d3
0002FE80 <AmiBlitz3.ab3@20095>    MOVEA.l (A7)+,A0
0002FE84 <AmiBlitz3.ab3@20096> BRA bc1
0002FE88 <AmiBlitz3.ab3@20099>    MOVE.w #$2600,D1
0002FE8E <AmiBlitz3.ab3@20100>   OR.w regnum,D1
0002FE92 <AmiBlitz3.ab3@20101>    BSR.w writeword
0002FE96 <AmiBlitz3.ab3@20102>   MOVE.w #$4E75,D1
0002FE9A <AmiBlitz3.ab3@20103>    BSR.w writeword
0002FEA0 <AmiBlitz3.ab3@20104>   MOVE.w dontwrite,D1
0002FEA4 <AmiBlitz3.ab3@20105>    BNE.w conmemerr
0002FEA6 <AmiBlitz3.ab3@20106>   MOVEA.l (A7)+,A0
0002FEA8 <AmiBlitz3.ab3@20107>   NOP
0002FEAE <AmiBlitz3.ab3@20108>    JSR Aclearcache                                         ;simple expression
0002FEB0 <AmiBlitz3.ab3@20111>    JSR (A0)                                                ;writeresult
0002FEB6 <AmiBlitz3.ab3@20114>   MOVE.w (A7)+,cfetchmode
0002FEBC <AmiBlitz3.ab3@20115>   MOVE.w (A7)+,lasta6
0002FEC2 <AmiBlitz3.ab3@20116>   MOVE.w (A7)+,dontwrite
0002FEC8 <AmiBlitz3.ab3@20117>   MOVE.l (A7)+,destbufferend
0002FECE <AmiBlitz3.ab3@20118>   MOVE.l (A7)+,destpointer
0002FED4 <AmiBlitz3.ab3@20119>   MOVE.w (A7)+,regnum
0002FEDA <AmiBlitz3.ab3@20122> JMP reget
0002FEDE <AmiBlitz3.ab3@20125> oldlibat:   Ds.l 1
0002FEE4 <AmiBlitz3.ab3@20129>   LEA incdir,A0
0002FEE8 <AmiBlitz3.ab3@20132>   CMP.w #$22,D0
0002FEEC <AmiBlitz3.ab3@20133>    BEQ.w JL_0_C052
0002FEEE <AmiBlitz3.ab3@20134>   MOVE.b D0,(A0)+
0002FEF0 <AmiBlitz3.ab3@20135>   TST.w D0
0002FEF4 <AmiBlitz3.ab3@20136>    BEQ.w JL_0_C05A
0002FEF8 <AmiBlitz3.ab3@20137>    BMI.w syntaxerr
0002FEFE <AmiBlitz3.ab3@20140>   JSR get1bytemain                                         ;_long
0002FF02 <AmiBlitz3.ab3@20141> BRA.w JL_0_C03E
0002FF04 <AmiBlitz3.ab3@20144> RTS
0002FF0A <AmiBlitz3.ab3@20148>   LEA ptr_parameterstore,A1                                ;getparameter
0002FF10 <AmiBlitz3.ab3@20149>   LEA incdir,A0
0002FF12 <AmiBlitz3.ab3@20150>   MOVEQ.l #-$01,D2
0002FF14 <AmiBlitz3.ab3@20153>     ADDQ.w #1,D2
0002FF16 <AmiBlitz3.ab3@20154>     MOVE.b (A0)+,(A1)+
0002FF1A <AmiBlitz3.ab3@20155>   BNE.w JL_0_C06A
0002FF1C <AmiBlitz3.ab3@20156>   SUBQ.w #1,A1
0002FF26 <AmiBlitz3.ab3@20158>   MOVE.w oldqflag,instringon
0002FF2C <AmiBlitz3.ab3@20159>   MOVEA.l lastsourcepos,A5
0002FF32 <AmiBlitz3.ab3@20163>   JSR get1bytemain
0002FF34 <AmiBlitz3.ab3@20164>   TST.w D0
0002FF38 <AmiBlitz3.ab3@20165>    BMI.w syntaxerr
0002FF3C <AmiBlitz3.ab3@20166>   CMP.b #$22,D0
0002FF40 <AmiBlitz3.ab3@20167>    BEQ.w JL_0_C078
0002FF42 <AmiBlitz3.ab3@20168>   MOVE.b D0,(A1)+
0002FF46 <AmiBlitz3.ab3@20169>    BEQ.w JL_0_C096
0002FF48 <AmiBlitz3.ab3@20170>   ADDQ.w #1,D2
0002FF4C <AmiBlitz3.ab3@20171> BRA.w JL_0_C078
0002FF4E <AmiBlitz3.ab3@20174>   TST.w D2
0002FF52 <AmiBlitz3.ab3@20175>    BEQ.w syntaxerr
0002FF54 <AmiBlitz3.ab3@20176> RTS
0002FF5A <AmiBlitz3.ab3@20180>   MOVEA.l constantbase,A2
0002FF5E <AmiBlitz3.ab3@20181>   MOVEA.l $E(A2),A5
0002FF64 <AmiBlitz3.ab3@20182>   MOVE.l a5,includesourceline
0002FF6A <AmiBlitz3.ab3@20183>   LEA inctab,a0
0002FF70 <AmiBlitz3.ab3@20184>   MOVE.w ininclude,d0
0002FF74 <AmiBlitz3.ab3@20185>   MOVE.l $0(a0,d0*4),d0
0002FF78 <AmiBlitz3.ab3@20186>   MOVEA.l $4(A2),A0
0002FF7C <AmiBlitz3.ab3@20188>   LEA $0(A0,D0.l),A0
0002FF7E <AmiBlitz3.ab3@20189>   MOVEA.l A5,A1
0002FF80 <AmiBlitz3.ab3@20192>     CMPA.l A0,A1
0002FF84 <AmiBlitz3.ab3@20193>      BCC.w JL_0_C0C6
0002FF86 <AmiBlitz3.ab3@20194>   TST.b (A1)+
0002FF8A <AmiBlitz3.ab3@20195>   BNE.w JL_0_C0B6
0002FF8E <AmiBlitz3.ab3@20196> BRA.w JL_0_C112
0002FF92 <AmiBlitz3.ab3@20199>   MOVEA.l $4(A2),A1
0002FF94 <AmiBlitz3.ab3@20202>   CMPA.l A0,A5
0002FF98 <AmiBlitz3.ab3@20203>   BCC.w JL_0_C0D6
0002FF9A <AmiBlitz3.ab3@20204>   MOVE.b (A5)+,(A1)+
0002FF9E <AmiBlitz3.ab3@20205> BRA.w JL_0_C0CA
0002FFA0 <AmiBlitz3.ab3@20208>   MOVE.l A1,D0
0002FFA4 <AmiBlitz3.ab3@20209>   SUB.l $4(A2),D0
0002FFAA <AmiBlitz3.ab3@20210>   LEA inctab,a0
0002FFAC <AmiBlitz3.ab3@20211>   MOVEQ #0,d1
0002FFB2 <AmiBlitz3.ab3@20212>   MOVE.w ininclude,d1
0002FFB6 <AmiBlitz3.ab3@20213>   MOVE.l d0,0(a0,d1*4)
0002FFBC <AmiBlitz3.ab3@20215>   MOVEA.l _dosbase,A6
0002FFC0 <AmiBlitz3.ab3@20216>   MOVE.l $8(A2),D1
0002FFC2 <AmiBlitz3.ab3@20217>   MOVE.l A1,D2
0002FFC8 <AmiBlitz3.ab3@20218>   MOVE.l D2,include_base
0002FFCE <AmiBlitz3.ab3@20220>   MOVE.l #$10000000,d3                                     ;load whole file
0002FFD0 <AmiBlitz3.ab3@20221>   SUB.l D0,D3
0002FFD4 <AmiBlitz3.ab3@20222>    JSR _Read(A6)
0002FFD6 <AmiBlitz3.ab3@20223>   TST.l D0
0002FFDA <AmiBlitz3.ab3@20224>    BMI.w error_reading_file
0002FFDE <AmiBlitz3.ab3@20225>    BEQ.w JL_0_C120
0002FFE4 <AmiBlitz3.ab3@20226>    MOVE.l D0,include_length
00030026 <AmiBlitz3.ab3@20227>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030050 <AmiBlitz3.ab3@20228>    !basic
00030060 <AmiBlitz3.ab3@20229>    ilen.l  = Peek.l(?include_length)
00030070 <AmiBlitz3.ab3@20230>    ibase.l = Peek.l(?include_base)
00030080 <AmiBlitz3.ab3@20231>    ido.l   = Peek.l(?include_process)
00030090 <AmiBlitz3.ab3@20232>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003009A <AmiBlitz3.ab3@20233>    If ido
000300AC <AmiBlitz3.ab3@20234>      ioffset.l = SkipXtraHeader{ibase,ilen}
000300D2 <AmiBlitz3.ab3@20235>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000300E4 <AmiBlitz3.ab3@20236>      If nilen>0
000300F4 <AmiBlitz3.ab3@20240>        Poke.l ?include_length,nilen
00030112 <AmiBlitz3.ab3@20243>    !asm
0003011C <AmiBlitz3.ab3@20244>    MOVE.l #0,include_process
00030122 <AmiBlitz3.ab3@20245>    MOVE.l include_length,D0
00030128 <AmiBlitz3.ab3@20246>    LEA inctab,a0
0003012A <AmiBlitz3.ab3@20247>    MOVEQ #0,d1
00030130 <AmiBlitz3.ab3@20248>    MOVE.w ininclude,d1
00030134 <AmiBlitz3.ab3@20249>    ADD.l d0,0(a0,d1*4)
00030138 <AmiBlitz3.ab3@20251>   MOVEA.l $4(A2),A5
0003013C <AmiBlitz3.ab3@20253>    MOVE.l 0(a0,d1*4),d0
00030140 <AmiBlitz3.ab3@20254>   CLR.b $0(A5,D0.l)
00030142 <AmiBlitz3.ab3@20257>   MOVEA.l A5,A0
00030144 <AmiBlitz3.ab3@20260>     TST.b (A0)+
00030148 <AmiBlitz3.ab3@20261>   BNE.w JL_0_C114
0003014C <AmiBlitz3.ab3@20262>   MOVE.l A0,$E(A2)
0003014E <AmiBlitz3.ab3@20263> RTS
00030152 <AmiBlitz3.ab3@20266> include_length:        Dc.l 0                              ; for tokenizer!
00030156 <AmiBlitz3.ab3@20267> include_base:          Dc.l 0
0003015A <AmiBlitz3.ab3@20268> include_process:       Dc.l 0
0003015E <AmiBlitz3.ab3@20269> include_preprocessor:  Dc.l 0
00030162 <AmiBlitz3.ab3@20273>   MOVE.l $8(A2),D1
00030168 <AmiBlitz3.ab3@20275>   MOVEA.l _dosbase,A6
0003016C <AmiBlitz3.ab3@20276>   JSR _Close(a6)
00030172 <AmiBlitz3.ab3@20277>   MOVEA.l _execbase,A6
00030176 <AmiBlitz3.ab3@20278>   MOVEA.l $4(A2),A1
0003017C <AmiBlitz3.ab3@20279>   MOVE.l #$400*8,D0                                        ;exit include
00030180 <AmiBlitz3.ab3@20281>   JSR _FreeVec(a6)
00030186 <AmiBlitz3.ab3@20284>   MOVE.l (A2),constantbase
00030188 <AmiBlitz3.ab3@20285>   MOVEA.l A2,A1
0003018A <AmiBlitz3.ab3@20286>   MOVEQ.l #$00,D0
0003018E <AmiBlitz3.ab3@20287>   MOVE.b $12(A2),D0
00030194 <AmiBlitz3.ab3@20288>   MOVEA.l _execbase,A6
0003019A <AmiBlitz3.ab3@20289>   MOVE.l mempool2,a0
0003019E <AmiBlitz3.ab3@20290>   JSR _FreePooled(A6)
000301A4 <AmiBlitz3.ab3@20291>   JSR zero_includename
000301AA <AmiBlitz3.ab3@20292>   SUBQ.w #1,ininclude
000301AE <AmiBlitz3.ab3@20293>   BNE.w AJL_0_C09E
000301B4 <AmiBlitz3.ab3@20296>   LEA _include,a0
000301B8 <AmiBlitz3.ab3@20297>   MOVEM.l a0-a6/d0-d7,-(a7)
000301BE <AmiBlitz3.ab3@20298>   LEA ptr_parameterstore,a1
000301C0 <AmiBlitz3.ab3@20301>     MOVE.b (a0)+,(a1)+
000301C4 <AmiBlitz3.ab3@20302>   BNE 'l1b
000301C6 <AmiBlitz3.ab3@20303>   MOVEQ #9,d2
000301CC <AmiBlitz3.ab3@20304>   JSR findlabel2
000301D0 <AmiBlitz3.ab3@20305>   BNE 'd
000301D4 <AmiBlitz3.ab3@20306>   CLR.l 8(a2)
000301D8 <AmiBlitz3.ab3@20309>   MOVEM.l (a7)+,a0-a6/d0-d7
000301DA <AmiBlitz3.ab3@20310> RTS
000301E0 <AmiBlitz3.ab3@20314>   MOVE.l unusedfunc,d0
000301E4 <AmiBlitz3.ab3@20315>   BEQ 'noclear
000301E8 <AmiBlitz3.ab3@20316>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
000301EA <AmiBlitz3.ab3@20319>     MOVE.l d0,a1
000301EE <AmiBlitz3.ab3@20320>     MOVE.l 4(a1),d0
000301F0 <AmiBlitz3.ab3@20321>     MOVE.l (a1),d2
000301F6 <AmiBlitz3.ab3@20322>     MOVE.l _execbase,a6
000301FA <AmiBlitz3.ab3@20323>     JSR _FreeMem(a6)
000301FC <AmiBlitz3.ab3@20324>     MOVE.l d2,d0
00030200 <AmiBlitz3.ab3@20325>   BNE 'f1
00030206 <AmiBlitz3.ab3@20326>   CLR.l unusedfunc
0003020A <AmiBlitz3.ab3@20327>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0003020C <AmiBlitz3.ab3@20330> RTS
00030212 <AmiBlitz3.ab3@20334>   MOVEA.l xinclude_base,A2
00030218 <AmiBlitz3.ab3@20335>   CLR.l xinclude_base
0003021C <AmiBlitz3.ab3@20338>     CMPA.w #$0,A2
00030220 <AmiBlitz3.ab3@20339>      BEQ.w JL_0_C186
00030222 <AmiBlitz3.ab3@20340>     MOVEQ.l #$00,D0
00030226 <AmiBlitz3.ab3@20341>     MOVE.b 4+8(A2),D0
00030228 <AmiBlitz3.ab3@20342>     MOVEA.l A2,A1
0003022A <AmiBlitz3.ab3@20343>     MOVEA.l (A2),A2
00030230 <AmiBlitz3.ab3@20344>     MOVEA.l _execbase,A6
00030236 <AmiBlitz3.ab3@20345>     MOVE.l mempool2,a0
0003023A <AmiBlitz3.ab3@20346>     JSR _FreePooled(A6)
0003023E <AmiBlitz3.ab3@20347> BRA.w JL_0_C168
00030240 <AmiBlitz3.ab3@20350> RTS
00030246 <AmiBlitz3.ab3@20354>   MOVEA.l constantbase,A2
0003024C <AmiBlitz3.ab3@20355>   CLR.l constantbase
00030250 <AmiBlitz3.ab3@20358>     CMPA.w #$0,A2
00030254 <AmiBlitz3.ab3@20359>      BEQ.w JL_0_C1DC
00030258 <AmiBlitz3.ab3@20360>     MOVE.l $8(A2),D1
0003025C <AmiBlitz3.ab3@20361>      BEQ.w JL_0_C1AE
00030262 <AmiBlitz3.ab3@20362>     MOVEA.l _dosbase,A6
00030266 <AmiBlitz3.ab3@20363>      JSR _Close(A6)
0003026A <AmiBlitz3.ab3@20366>     MOVE.l $4(A2),D0
0003026E <AmiBlitz3.ab3@20367>      BEQ.w JL_0_C1C6
00030270 <AmiBlitz3.ab3@20368>     MOVEA.l D0,A1
00030276 <AmiBlitz3.ab3@20369>     MOVE.l #$400*8,D0
0003027C <AmiBlitz3.ab3@20370>     MOVEA.l _execbase,A6
00030282 <AmiBlitz3.ab3@20371>     MOVE.l mempool,a0
00030286 <AmiBlitz3.ab3@20372>     JSR _FreeVec(a6)
00030288 <AmiBlitz3.ab3@20375>     MOVEQ.l #$00,D0
0003028C <AmiBlitz3.ab3@20376>     MOVE.b $12(A2),D0
0003028E <AmiBlitz3.ab3@20377>     MOVEA.l A2,A1
00030290 <AmiBlitz3.ab3@20378>     MOVEA.l (A2),A2
00030296 <AmiBlitz3.ab3@20379>     MOVEA.l _execbase,A6
0003029C <AmiBlitz3.ab3@20380>     MOVE.l mempool2,a0
000302A0 <AmiBlitz3.ab3@20381>     JSR _FreePooled(A6)
000302A4 <AmiBlitz3.ab3@20382> BRA.w JL_0_C194
000302A6 <AmiBlitz3.ab3@20385> RTS
000302A8 <AmiBlitz3.ab3@20389>   SWAP D0
000302AC <AmiBlitz3.ab3@20390>    BSR.w JL_0_C1E6
000302AE <AmiBlitz3.ab3@20391>   SWAP D0
000302B4 <AmiBlitz3.ab3@20394>   MOVEA.l data2,A4
000302BA <AmiBlitz3.ab3@20395>   CMPA.l allat,A4
000302BE <AmiBlitz3.ab3@20396>    BCC.w JL_0_C200
000302C0 <AmiBlitz3.ab3@20397>   MOVE.w D0,(A4)+
000302C6 <AmiBlitz3.ab3@20398>   MOVE.l A4,data2
000302C8 <AmiBlitz3.ab3@20399> RTS
000302D0 <AmiBlitz3.ab3@20402>   MOVE.w #$FFFF,dontwrite
000302D6 <AmiBlitz3.ab3@20403>   ADDQ.l #2,data2
000302D8 <AmiBlitz3.ab3@20404> RTS
000302DE <AmiBlitz3.ab3@20408>   MOVEA.l data2,A4
000302E4 <AmiBlitz3.ab3@20409>   CMPA.l allat,A4
000302E8 <AmiBlitz3.ab3@20410>    BCC.w JL_0_C22A
000302EA <AmiBlitz3.ab3@20411>   MOVE.b D0,(A4)+
000302F0 <AmiBlitz3.ab3@20412>   MOVE.l A4,data2
000302F2 <AmiBlitz3.ab3@20413> RTS
000302FA <AmiBlitz3.ab3@20416>   MOVE.w #$FFFF,dontwrite
00030300 <AmiBlitz3.ab3@20417>   ADDQ.l #1,data2
00030302 <AmiBlitz3.ab3@20418> RTS
00030306 <AmiBlitz3.ab3@20422>   CMP.w #$22,D0
0003030A <AmiBlitz3.ab3@20423>    BNE.w syntaxerr
00030310 <AmiBlitz3.ab3@20427>   JSR get1bytemain
00030314 <AmiBlitz3.ab3@20428>   CMP.b #$22,D0
00030318 <AmiBlitz3.ab3@20429>    BEQ.w JL_0_C25A
0003031A <AmiBlitz3.ab3@20430>   TST.w D0
0003031E <AmiBlitz3.ab3@20431>    BEQ.w syntaxerr
00030320 <AmiBlitz3.ab3@20432>   MOVE.b D0,(A0)+
00030324 <AmiBlitz3.ab3@20433> BRA.w JL_0_C242
00030326 <AmiBlitz3.ab3@20436>   CLR.b (A0)
00030328 <AmiBlitz3.ab3@20437> RTS
0003032A <AmiBlitz3.ab3@20440>   TST.l D3
0003032C <AmiBlitz3.ab3@20441> RTS
00030332 <AmiBlitz3.ab3@20444>   LEA ptr_parameterstore,A0
00030338 <AmiBlitz3.ab3@20445>   LEA namebuff2,A1
0003033A <AmiBlitz3.ab3@20448>     MOVE.b (A0)+,D0
0003033E <AmiBlitz3.ab3@20449>     BEQ.w JL_0_C27C
00030340 <AmiBlitz3.ab3@20450>   CMP.b (A1)+,D0
00030344 <AmiBlitz3.ab3@20451>   BEQ.w JL_0_C26E
00030346 <AmiBlitz3.ab3@20452> RTS
00030348 <AmiBlitz3.ab3@20455>   TST.b (A1)
0003034C <AmiBlitz3.ab3@20456>   BNE.w JL_0_C284
0003034E <AmiBlitz3.ab3@20457> RTS
00030352 <AmiBlitz3.ab3@20460>   CMP.w #$1,D0
00030354 <AmiBlitz3.ab3@20461> RTS
00030358 <AmiBlitz3.ab3@20465>   CMP.w #$2E,D0                                            ;dodeftype
0003035C <AmiBlitz3.ab3@20466>    BNE.w syntaxerr
00030360 <AmiBlitz3.ab3@20467>   BSR.w getparameter2
00030366 <AmiBlitz3.ab3@20468>   LEA newtypebase,A2
0003036A <AmiBlitz3.ab3@20469>   BSR.w findtype
0003036E <AmiBlitz3.ab3@20470>    BNE.w notypeerr
00030374 <AmiBlitz3.ab3@20471>   TST.b declare
00030378 <AmiBlitz3.ab3@20472>    BNE 'l1
0003037E <AmiBlitz3.ab3@20473>   TST.b declare2
00030382 <AmiBlitz3.ab3@20474>    BEQ 'l2
0003038A <AmiBlitz3.ab3@20477>   MOVE.b #2,nowdeclare
00030390 <AmiBlitz3.ab3@20481>   JSR reget
00030394 <AmiBlitz3.ab3@20482>    BNE.w JL_0_C2B4
0003039A <AmiBlitz3.ab3@20483>   MOVE.l A2,defaulttype
0003039C <AmiBlitz3.ab3@20484> RTS
000303A2 <AmiBlitz3.ab3@20487>   MOVE.l defaulttype,-(A7)
000303A8 <AmiBlitz3.ab3@20488>   MOVE.l A2,defaulttype
000303AC <AmiBlitz3.ab3@20491>   BSR.w getparameter
000303B0 <AmiBlitz3.ab3@20492>    BSR.w JL_0_8E3C
000303B4 <AmiBlitz3.ab3@20493>   CMP.w #$2C,D0
000303B8 <AmiBlitz3.ab3@20494>    BNE.w JL_0_C2D8
000303BE <AmiBlitz3.ab3@20495>    JSR get1bytemain                                        ; was BSR.w
000303C2 <AmiBlitz3.ab3@20496> BRA.w JL_0_C2C0
000303C8 <AmiBlitz3.ab3@20499>   MOVE.l (A7)+,defaulttype
000303CA <AmiBlitz3.ab3@20500> RTS
000303CE <AmiBlitz3.ab3@20504>   LEA $4(A5),A2                                            ;fehler function
000303D0 <AmiBlitz3.ab3@20507>   MOVE.l A2,D0
000303D4 <AmiBlitz3.ab3@20510>   BSR.w getparameter
000303D8 <AmiBlitz3.ab3@20511>   BSR.w JL_0_8E3C
000303DC <AmiBlitz3.ab3@20512>   BSR.w calcvar
000303E0 <AmiBlitz3.ab3@20513>   CMP.b #$7,D2
000303E4 <AmiBlitz3.ab3@20514>    BNE.w mismatcherr
000303E8 <AmiBlitz3.ab3@20515>   MOVE.w varmode(PC),-(A7)
000303EC <AmiBlitz3.ab3@20516>   CMP.w #$3D,D0
000303F0 <AmiBlitz3.ab3@20517>    BNE.w syntaxerr
000303F4 <AmiBlitz3.ab3@20518>   BTST #$F,D2
000303F8 <AmiBlitz3.ab3@20519>    BNE.w JL_0_C31C
000303FC <AmiBlitz3.ab3@20520>   MOVE.w JL_0_C2E0(PC),D1
00030400 <AmiBlitz3.ab3@20521>   BSR.w pokewda5s
00030402 <AmiBlitz3.ab3@20522>   MOVE.w D3,D1
00030406 <AmiBlitz3.ab3@20523>   BSR.w writeword
0003040A <AmiBlitz3.ab3@20526>   MOVE.w L_0_C2E4(PC),D1
0003040E <AmiBlitz3.ab3@20527>   BSR.w writeword
00030414 <AmiBlitz3.ab3@20528>   ADDQ.w #1,regnum
00030416 <AmiBlitz3.ab3@20529>   MOVEQ.l #$03,D2
0003041A <AmiBlitz3.ab3@20530>   BSR.w eval
00030420 <AmiBlitz3.ab3@20531>   MOVE.l #$D000,D1
00030426 <AmiBlitz3.ab3@20532>   MOVE.l d1,lastinstruction
00030428 <AmiBlitz3.ab3@20533>   TST.w (A7)+
0003042C <AmiBlitz3.ab3@20534>    BEQ.w Atokejsr
0003042E <AmiBlitz3.ab3@20535>   ADDQ.w #1,D1
00030432 <AmiBlitz3.ab3@20536> BRA.w Atokejsr
00030434 <AmiBlitz3.ab3@20540>   MOVE.w D0,D1
00030438 <AmiBlitz3.ab3@20541>    BPL.w syntaxerr
0003043C <AmiBlitz3.ab3@20542>   BCLR #$F,D1
00030442 <AmiBlitz3.ab3@20543>    JSR searchinstr
00030446 <AmiBlitz3.ab3@20544>   MOVE.l $12(A2),D0
0003044A <AmiBlitz3.ab3@20545>   TST.w -$2(A2,D0.L)
0003044E <AmiBlitz3.ab3@20546>    BEQ.w freeerr
00030450 <AmiBlitz3.ab3@20547>   MOVEQ.l #$02,D2
00030452 <AmiBlitz3.ab3@20548>   MOVE.l A2,-(A7)
00030456 <AmiBlitz3.ab3@20549>    BSR.w eval
00030458 <AmiBlitz3.ab3@20550>   MOVEA.l (A7)+,A2
0003045E <AmiBlitz3.ab3@20551>   MOVE.l A2,mymaxlib
00030462 <AmiBlitz3.ab3@20552>   ADDA.l $12(A2),A2
00030468 <AmiBlitz3.ab3@20553>   TST.b debugmode
0003046C <AmiBlitz3.ab3@20554>    BEQ.w JL_0_C3A8
00030472 <AmiBlitz3.ab3@20555>   MOVE.w regnum,D1
00030474 <AmiBlitz3.ab3@20556>   LSL.w #8,D1
00030476 <AmiBlitz3.ab3@20557>   LSL.w #1,D1
0003047A <AmiBlitz3.ab3@20558>   ORI.w #$B07C,D1
0003047E <AmiBlitz3.ab3@20559>    BSR.w writeword
00030482 <AmiBlitz3.ab3@20560>   MOVE.w -$4(A2),D1
00030486 <AmiBlitz3.ab3@20561>    BSR.w writeword
0003048C <AmiBlitz3.ab3@20562>   MOVE.l maxchk,D1
00030490 <AmiBlitz3.ab3@20563>    BSR.w writelong
00030492 <AmiBlitz3.ab3@20564>   MOVE.l A2,-(A7)
00030496 <AmiBlitz3.ab3@20565>   MOVE.w #$C30A,D1
0003049A <AmiBlitz3.ab3@20566>    BSR.w Atokejsr
0003049C <AmiBlitz3.ab3@20567>   MOVEA.l (A7)+,A2
000304A0 <AmiBlitz3.ab3@20570>   MOVE.w -$2(A2),D2
000304A6 <AmiBlitz3.ab3@20573>   MOVE.w regnum,D1
000304AC <AmiBlitz3.ab3@20574>   OR.w lslimm,D1
000304B0 <AmiBlitz3.ab3@20575>   CMP.w #$8,D2
000304B4 <AmiBlitz3.ab3@20576>    BCS.w JL_0_C3CE
000304B8 <AmiBlitz3.ab3@20577>    BSR.w writeword
000304BA <AmiBlitz3.ab3@20578>   SUBQ.w #8,D2
000304BE <AmiBlitz3.ab3@20579>    BNE.w JL_0_C3AC
000304C2 <AmiBlitz3.ab3@20580> BRA.w JL_0_C3DA
000304C4 <AmiBlitz3.ab3@20583>   MOVE.w D2,D0
000304C6 <AmiBlitz3.ab3@20584>   LSL.w #8,D0
000304C8 <AmiBlitz3.ab3@20585>   LSL.w #1,D0
000304CA <AmiBlitz3.ab3@20586>   OR.w D0,D1
000304CE <AmiBlitz3.ab3@20587>   BSR.w writeword
000304D0 <AmiBlitz3.ab3@20590> RTS
000304D4 <AmiBlitz3.ab3@20595>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000304D6 <AmiBlitz3.ab3@20596>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000304DA <AmiBlitz3.ab3@20600> mymaxlib:  Ds.l 1
000304DE <AmiBlitz3.ab3@20604>   BSR.w JL_0_C340
000304E2 <AmiBlitz3.ab3@20605>   LEA free(PC),A0
000304E6 <AmiBlitz3.ab3@20606>   LEA freef(PC),A1
000304EC <AmiBlitz3.ab3@20607>   MOVE.w -$6(A2),$2(A0)
000304F0 <AmiBlitz3.ab3@20608>   BSR.w pokecode
000304F4 <AmiBlitz3.ab3@20609>   MOVE.l -$A(A2),D1
000304F8 <AmiBlitz3.ab3@20612>   BEQ.w nosuperr
000304FC <AmiBlitz3.ab3@20613>   MOVEA.l mymaxlib(PC),A2
00030500 <AmiBlitz3.ab3@20614> BRA.w Amakelibsub
00030504 <AmiBlitz3.ab3@20619>   BSR.w JL_0_C340
0003050A <AmiBlitz3.ab3@20620>   LEA use,A0
00030510 <AmiBlitz3.ab3@20621>   LEA usef,A1
00030516 <AmiBlitz3.ab3@20622>   MOVE.w -$6(A2),$2(A0)
0003051C <AmiBlitz3.ab3@20623>   MOVE.w -$6(A2),-$2(A1)
00030520 <AmiBlitz3.ab3@20624>   ADDQ.w #4,-$2(A1)
00030524 <AmiBlitz3.ab3@20625>   BSR.w pokecode
00030528 <AmiBlitz3.ab3@20626>   MOVE.l -$E(A2),D1
0003052C <AmiBlitz3.ab3@20627> BRA.w maxjsr
00030532 <AmiBlitz3.ab3@20631>   JSR get1bytemain
00030538 <AmiBlitz3.ab3@20635>   MOVE.l firstiff,D0
0003053C <AmiBlitz3.ab3@20636>    BEQ.w noiferr
0003053E <AmiBlitz3.ab3@20637>   MOVEA.l D0,A0
00030544 <AmiBlitz3.ab3@20638>   CMPI.b #$1,$D(A0)
00030548 <AmiBlitz3.ab3@20639>    BEQ.w illelseerr
0003054C <AmiBlitz3.ab3@20640>   MOVE.w #$6000,D1
00030552 <AmiBlitz3.ab3@20642>     TST.b fast
00030556 <AmiBlitz3.ab3@20643>     BEQ 'l1
0003055C <AmiBlitz3.ab3@20644>     OR.l #$ff,d1
00030560 <AmiBlitz3.ab3@20645>     BSR writeword
00030562 <AmiBlitz3.ab3@20649>   SWAP D1
00030566 <AmiBlitz3.ab3@20650>   BSR.w writelong
00030568 <AmiBlitz3.ab3@20651>   MOVEQ.l #$00,D1
0003056C <AmiBlitz3.ab3@20652>   BSR.w AJL_0_D7B8
00030574 <AmiBlitz3.ab3@20653>   MOVE.l destpointer,$8(A0)
00030578 <AmiBlitz3.ab3@20654> BRA.w do_then
0003057E <AmiBlitz3.ab3@20658>   LEA ptr_parameterstore,A0
00030580 <AmiBlitz3.ab3@20659>   MOVE.l A0,-(A7)
00030584 <AmiBlitz3.ab3@20660>   BSR.w JL_0_C23A
00030588 <AmiBlitz3.ab3@20661> BRA.w handle_compileerror
0003058C <AmiBlitz3.ab3@20665>   BSR.w JL_0_BF6A
0003058E <AmiBlitz3.ab3@20666>   MOVEQ.l #$05,D1
00030598 <AmiBlitz3.ab3@20668>   MOVE.w oldqflag,instringon
0003059E <AmiBlitz3.ab3@20669>   MOVEA.l lastsourcepos,A5
000305A4 <AmiBlitz3.ab3@20670>   LEA AJL_0_C25E,A0
000305A8 <AmiBlitz3.ab3@20671> BRA.w JL_0_C4B4
000305AE <AmiBlitz3.ab3@20675>   LEA ptr_parameterstore,A0
000305B2 <AmiBlitz3.ab3@20676>   BSR.w JL_0_C23A
000305B8 <AmiBlitz3.ab3@20677>   JSR get1bytemain
000305BC <AmiBlitz3.ab3@20678>   BSR.w JL_0_CCA8
000305C2 <AmiBlitz3.ab3@20679>   LEA namebuff2,A0
000305C6 <AmiBlitz3.ab3@20680>   BSR.w JL_0_C23A
000305CC <AmiBlitz3.ab3@20681>   LEA AJL_0_C262,A0
000305CE <AmiBlitz3.ab3@20684>   LSL.w #2,D1
000305D4 <AmiBlitz3.ab3@20685>   LEA CIF_branches,A1
000305D8 <AmiBlitz3.ab3@20686>   MOVE.l $0(A1,D1.W),-(A7)
000305DA <AmiBlitz3.ab3@20687>   MOVEQ.l #-$01,D1
000305DC <AmiBlitz3.ab3@20690>   JSR (A0)
000305DE <AmiBlitz3.ab3@20692>   MOVEA.l (A7)+,A1
000305E0 <AmiBlitz3.ab3@20694> JMP (A1)
000305E4 <AmiBlitz3.ab3@20698>   BEQ.w JL_0_C4F6
000305E8 <AmiBlitz3.ab3@20699> BRA.w JL_0_C4F4
000305EC <AmiBlitz3.ab3@20703>   BNE.w JL_0_C4F6
000305F0 <AmiBlitz3.ab3@20704> BRA.w JL_0_C4F4
000305F4 <AmiBlitz3.ab3@20708>   BLT.w JL_0_C4F6
000305F8 <AmiBlitz3.ab3@20709> BRA.w JL_0_C4F4
000305FC <AmiBlitz3.ab3@20713>   BLE.w JL_0_C4F6
00030600 <AmiBlitz3.ab3@20714> BRA.w JL_0_C4F4
00030604 <AmiBlitz3.ab3@20718>   BGT.w JL_0_C4F6
00030608 <AmiBlitz3.ab3@20719> BRA.w JL_0_C4F4
0003060C <AmiBlitz3.ab3@20723>   BGE.w JL_0_C4F6
0003060E <AmiBlitz3.ab3@20726>   MOVEQ.l #$00,D1
00030614 <AmiBlitz3.ab3@20729>   MOVEA.l concomsp,A0
0003061A <AmiBlitz3.ab3@20730>   MOVE.w skipcode,(A0)+
00030620 <AmiBlitz3.ab3@20731>   MOVE.l A0,concomsp
00030626 <AmiBlitz3.ab3@20732>   MOVE.w D1,skipcode
0003062C <AmiBlitz3.ab3@20733>   JSR get1bytemain
00030630 <AmiBlitz3.ab3@20734>    BNE.w syntaxerr
00030636 <AmiBlitz3.ab3@20735> JMP bakup
0003063E <AmiBlitz3.ab3@20739> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00030642 <AmiBlitz3.ab3@20740> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00030646 <AmiBlitz3.ab3@20747>   MOVE.w #$FC17,D1
0003064C <AmiBlitz3.ab3@20748>   JSR uselib
00030652 <AmiBlitz3.ab3@20750>   JSR reget
00030656 <AmiBlitz3.ab3@20751>    BEQ.w do_Restore__resbeg
0003065A <AmiBlitz3.ab3@20752>   BSR.w JL_0_AE22                                          ;get label name!
0003065E <AmiBlitz3.ab3@20753>   MOVE.w rescode(PC),D1
00030662 <AmiBlitz3.ab3@20754>   BSR.w writeword
00030668 <AmiBlitz3.ab3@20755>   JSR addoff                                               ;add offset
0003066C <AmiBlitz3.ab3@20756>   MOVE.l $C(A2),D1
00030670 <AmiBlitz3.ab3@20757>   BSR.w writelong
00030674 <AmiBlitz3.ab3@20758>   MOVE.w rescode+6(PC),D1
00030678 <AmiBlitz3.ab3@20759>   BSR.w writeword
0003067C <AmiBlitz3.ab3@20760>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00030680 <AmiBlitz3.ab3@20761>   BEQ.w do_Restore__no
00030682 <AmiBlitz3.ab3@20763>   MOVEA.l D1,A1
00030686 <AmiBlitz3.ab3@20764>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00030688 <AmiBlitz3.ab3@20765> RTS
0003068A <AmiBlitz3.ab3@20770> RTS
0003068E <AmiBlitz3.ab3@20773>   MOVE.w #$CD00,D1
00030694 <AmiBlitz3.ab3@20774>   JSR Atokejsr
00030698 <AmiBlitz3.ab3@20775>   MOVE.l rescode2(PC),D1
0003069E <AmiBlitz3.ab3@20776> JMP writelong
000306A2 <AmiBlitz3.ab3@20780>   MOVE.w #$FC17,D1
000306A8 <AmiBlitz3.ab3@20781>   JSR uselib
000306AE <AmiBlitz3.ab3@20784>   MOVE.l dataget,D1
000306B2 <AmiBlitz3.ab3@20785>   BSR.w writelong
000306B6 <AmiBlitz3.ab3@20786>   BSR.w getparameter
000306BA <AmiBlitz3.ab3@20787>   BSR.w JL_0_8E3C
000306BE <AmiBlitz3.ab3@20788>   BSR.w calcvar
000306C2 <AmiBlitz3.ab3@20789>   BTST #$E,D2
000306C6 <AmiBlitz3.ab3@20790>    BEQ.w JL_0_C5A6
000306CA <AmiBlitz3.ab3@20791>   MOVE.b #$6,D2
000306CC <AmiBlitz3.ab3@20794>   TST.b D2
000306D0 <AmiBlitz3.ab3@20795>    BEQ.w noleterr
000306D6 <AmiBlitz3.ab3@20796>   TST.b debugmode
000306DA <AmiBlitz3.ab3@20797>    BEQ.w JL_0_C5D0
000306DE <AmiBlitz3.ab3@20798>   MOVE.w #$7000,D1
000306E0 <AmiBlitz3.ab3@20799>   MOVE.b D2,D1
000306E4 <AmiBlitz3.ab3@20800>   ANDI.b #$F,D1
000306E8 <AmiBlitz3.ab3@20801>   BSR.w writeword
000306EC <AmiBlitz3.ab3@20802>   MOVE.w #$C310,D1
000306EE <AmiBlitz3.ab3@20803>   MOVE.w D2,-(A7)
000306F2 <AmiBlitz3.ab3@20804>   BSR.w Atokejsr
000306F4 <AmiBlitz3.ab3@20805>   MOVE.w (A7)+,D2
000306F8 <AmiBlitz3.ab3@20808>   CMP.b #$7,D2
000306FC <AmiBlitz3.ab3@20809>    BEQ.w JL_0_C684
00030700 <AmiBlitz3.ab3@20810>   CMP.b #$1,D2
00030704 <AmiBlitz3.ab3@20811>    BNE.w JL_0_C62A
0003070A <AmiBlitz3.ab3@20812>   LEA dataletb2,A0
00030710 <AmiBlitz3.ab3@20813>   LEA dataletb2f,A1
00030714 <AmiBlitz3.ab3@20814>   BTST #$F,D2
00030718 <AmiBlitz3.ab3@20815>    BEQ.w JL_0_C5FC
0003071C <AmiBlitz3.ab3@20816>   BSR.w pokecode
00030720 <AmiBlitz3.ab3@20817> BRA.w JL_0_C668
00030726 <AmiBlitz3.ab3@20820>   LEA dataletb,A0
0003072C <AmiBlitz3.ab3@20821>   LEA dataletbf,A1
00030732 <AmiBlitz3.ab3@20822>   TST.w varmode
00030736 <AmiBlitz3.ab3@20823>    BEQ.w JL_0_C61E
0003073C <AmiBlitz3.ab3@20824>   LEA dataletbl,A0
00030742 <AmiBlitz3.ab3@20825>   LEA dataletblf,A1
00030746 <AmiBlitz3.ab3@20828>   MOVE.w D3,$4(A0)
0003074A <AmiBlitz3.ab3@20829>   BSR.w pokecode
0003074E <AmiBlitz3.ab3@20830> BRA.w JL_0_C668
00030754 <AmiBlitz3.ab3@20833>   LEA dataletw,A0
00030758 <AmiBlitz3.ab3@20834>   CMP.b #$3,D2
0003075C <AmiBlitz3.ab3@20835>    BCS.w JL_0_C63E
00030762 <AmiBlitz3.ab3@20836>   LEA dataletl,A0
00030766 <AmiBlitz3.ab3@20839>   BTST #$F,D2
0003076A <AmiBlitz3.ab3@20840>    BEQ.w JL_0_C652
0003076E <AmiBlitz3.ab3@20841>   MOVE.w $4(A0),D1
00030772 <AmiBlitz3.ab3@20842>    BSR.w writeword
00030776 <AmiBlitz3.ab3@20843> BRA.w JL_0_C668
0003077C <AmiBlitz3.ab3@20846>   TST.w varmode
00030780 <AmiBlitz3.ab3@20847>    BEQ.w JL_0_C65E
00030782 <AmiBlitz3.ab3@20848>   ADDQ.w #6,A0
00030786 <AmiBlitz3.ab3@20851>   MOVE.w D3,$2(A0)
00030788 <AmiBlitz3.ab3@20852>   MOVE.l (A0),D1
0003078C <AmiBlitz3.ab3@20853>   BSR.w writelong
00030792 <AmiBlitz3.ab3@20856>   MOVE.l dataput,D1
00030796 <AmiBlitz3.ab3@20857>    BSR.w writelong
0003079A <AmiBlitz3.ab3@20858>   CMP.w #$2C,D0
0003079E <AmiBlitz3.ab3@20859>    BEQ.w JL_0_C67C
000307A0 <AmiBlitz3.ab3@20860> RTS
000307A6 <AmiBlitz3.ab3@20863>   JSR get1bytemain
000307AA <AmiBlitz3.ab3@20864> BRA.w JL_0_C584
000307B0 <AmiBlitz3.ab3@20868>   MOVE.w stlenget,D1
000307B4 <AmiBlitz3.ab3@20869>    BSR.w writeword
000307B8 <AmiBlitz3.ab3@20870>   BTST #$F,D2
000307BC <AmiBlitz3.ab3@20871>    BNE.w JL_0_C6C0
000307C2 <AmiBlitz3.ab3@20872>   TST.w varmode
000307C6 <AmiBlitz3.ab3@20873>    BEQ.w JL_0_C6B0
000307CC <AmiBlitz3.ab3@20874>   MOVE.w D3,leaampl+2
000307D2 <AmiBlitz3.ab3@20875>   MOVE.l leaampl,D1
000307D6 <AmiBlitz3.ab3@20876> BRA.w JL_0_C6BC
000307DC <AmiBlitz3.ab3@20879>   MOVE.w D3,leaamp+2
000307E2 <AmiBlitz3.ab3@20880>   MOVE.l leaamp,D1
000307E6 <AmiBlitz3.ab3@20883>   BSR.w writelong
000307EA <AmiBlitz3.ab3@20886>   MOVE.w #$C701,D1
000307F0 <AmiBlitz3.ab3@20887>   MOVE.w varmode,D2
000307F4 <AmiBlitz3.ab3@20888>    BEQ.w JL_0_C6D0
000307F6 <AmiBlitz3.ab3@20889>   SUBQ.w #1,D1
000307FA <AmiBlitz3.ab3@20892>   BSR.w Atokejsr
00030802 <AmiBlitz3.ab3@20893>   MOVE.w #$FFFF,lasta6
00030808 <AmiBlitz3.ab3@20894>   LEA stalign,A0
0003080E <AmiBlitz3.ab3@20895>   LEA stalignf,A1
00030812 <AmiBlitz3.ab3@20896>   BSR.w pokecode
00030816 <AmiBlitz3.ab3@20897> BRA.w JL_0_C668
0003081A <AmiBlitz3.ab3@20901>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0003081E <AmiBlitz3.ab3@20902>    BNE.w JL_0_C720
00030824 <AmiBlitz3.ab3@20903>   JSR get1bytemain
00030828 <AmiBlitz3.ab3@20904>   CMP.w #$77,D0
0003082C <AmiBlitz3.ab3@20905>    BEQ.w JL_0_C71C
00030830 <AmiBlitz3.ab3@20906>   CMP.w #$62,D0
00030834 <AmiBlitz3.ab3@20907>    BEQ.w JL_0_C718
00030838 <AmiBlitz3.ab3@20908>   CMP.w #"s",d0
0003083C <AmiBlitz3.ab3@20909>   BEQ single3
00030840 <AmiBlitz3.ab3@20910>   CMP.w #"d",d0
00030844 <AmiBlitz3.ab3@20911>   BEQ double3
00030848 <AmiBlitz3.ab3@20912>   CMP.w #$6C,D0
0003084C <AmiBlitz3.ab3@20913>    BNE.w syntaxerr
0003084E <AmiBlitz3.ab3@20914>   MOVEQ.l #$02,D1
00030850 <AmiBlitz3.ab3@20915> RTS
00030858 <AmiBlitz3.ab3@20919>   MOVE.b #1,iee
0003085A <AmiBlitz3.ab3@20920>   MOVEQ.l #$3,d1
0003085C <AmiBlitz3.ab3@20921> RTS
00030864 <AmiBlitz3.ab3@20925>   MOVE.b #1,iee
00030866 <AmiBlitz3.ab3@20926>   MOVEQ.l #$4,d1
00030868 <AmiBlitz3.ab3@20927> RTS
0003086A <AmiBlitz3.ab3@20931>   MOVEQ.l #$00,D1
0003086C <AmiBlitz3.ab3@20932> RTS
0003086E <AmiBlitz3.ab3@20936>   MOVEQ.l #$01,D1
00030870 <AmiBlitz3.ab3@20937> RTS
00030872 <AmiBlitz3.ab3@20941>   MOVEQ.l #$01,D1
00030878 <AmiBlitz3.ab3@20942> JMP bakup
0003087C <AmiBlitz3.ab3@20946>   BSR.w JL_0_C6F0
0003087E <AmiBlitz3.ab3@20948>   MOVE.w D1,-(A7)
00030882 <AmiBlitz3.ab3@20949>    BSR.w AJL_0_BF6E
00030886 <AmiBlitz3.ab3@20950>   CMP.w #$2C,D0
0003088A <AmiBlitz3.ab3@20951>    BNE.w syntaxerr
0003088C <AmiBlitz3.ab3@20952>   MOVE.l D3,-(A7)
00030890 <AmiBlitz3.ab3@20953>    BSR.w AJL_0_BF6E
00030892 <AmiBlitz3.ab3@20954>   MOVE.l D3,D1
00030894 <AmiBlitz3.ab3@20955>   MOVE.l (A7)+,D3
00030896 <AmiBlitz3.ab3@20956>   MOVE.w (A7)+,D2
0003089A <AmiBlitz3.ab3@20957>    BEQ.w JL_0_C774
0003089E <AmiBlitz3.ab3@20961>   CMP.w #$1,D2
000308A2 <AmiBlitz3.ab3@20962>    BEQ.w JL_0_C768
000308A4 <AmiBlitz3.ab3@20965>   SWAP D1
000308A8 <AmiBlitz3.ab3@20966>    BSR.w writeword
000308AA <AmiBlitz3.ab3@20967>   SWAP D1
000308AE <AmiBlitz3.ab3@20968>    BSR.w writeword
000308B0 <AmiBlitz3.ab3@20969>   SUBQ.l #1,D3
000308B4 <AmiBlitz3.ab3@20970>    BNE.w JL_0_C754
000308B6 <AmiBlitz3.ab3@20971> RTS
000308BA <AmiBlitz3.ab3@20974>    BSR.w writeword
000308BC <AmiBlitz3.ab3@20975>   SUBQ.l #1,D3
000308C0 <AmiBlitz3.ab3@20976>    BNE.w JL_0_C768
000308C2 <AmiBlitz3.ab3@20977> RTS
000308C6 <AmiBlitz3.ab3@20980>    BSR.w writebyte
000308C8 <AmiBlitz3.ab3@20981>   SUBQ.l #1,D3
000308CC <AmiBlitz3.ab3@20982>    BNE.w JL_0_C774
000308CE <AmiBlitz3.ab3@20983> RTS
000308D2 <AmiBlitz3.ab3@20987>   BSR.w JL_0_C6F0                                          ;definestorage
000308D4 <AmiBlitz3.ab3@20988>   MOVE.w D1,-(A7)
000308D8 <AmiBlitz3.ab3@20989>   BSR.w AJL_0_BF6E
000308DA <AmiBlitz3.ab3@20990>   MOVE.w (A7)+,D1
000308DC <AmiBlitz3.ab3@20991>   LSL.l D1,D3
000308DE <AmiBlitz3.ab3@20992>   MOVE.l d3,d0
000308E2 <AmiBlitz3.ab3@20993>   BEQ 'll5
000308E4 <AmiBlitz3.ab3@20994>   MOVEQ #0,d1
000308EA <AmiBlitz3.ab3@20997>     JSR writebyte
000308EC <AmiBlitz3.ab3@20998>     SUBQ.l #1,d3
000308F0 <AmiBlitz3.ab3@20999>   BNE.s 'll10
000308F2 <AmiBlitz3.ab3@21002> RTS
000308F4 <AmiBlitz3.ab3@21006>   MOVE.w D0,-(A7)
000308FA <AmiBlitz3.ab3@21007>   LEA dummyasm,A0
00030900 <AmiBlitz3.ab3@21008>   MOVEA.l destpointer,A1
0003090A <AmiBlitz3.ab3@21009>   MOVE.w asmlen2,asmlen
00030910 <AmiBlitz3.ab3@21010>   JSR insasm
00030912 <AmiBlitz3.ab3@21011>   MOVE.w (A7)+,D0
00030914 <AmiBlitz3.ab3@21012> RTS
00030918 <AmiBlitz3.ab3@21016>   BSR.w JL_0_C6F0
00030922 <AmiBlitz3.ab3@21018>   MOVE.l #ptr_parameterstore,asmbuff
00030924 <AmiBlitz3.ab3@21019>   TST.w D1
00030928 <AmiBlitz3.ab3@21020>    BEQ.w JL_0_C7EE
0003092C <AmiBlitz3.ab3@21021>   CMP.w #$1,D1
00030930 <AmiBlitz3.ab3@21022>    BEQ.w JL_0_C844
00030934 <AmiBlitz3.ab3@21023>   CMP.w #$2,d1
00030938 <AmiBlitz3.ab3@21024>    BEQ long
0003093C <AmiBlitz3.ab3@21025>   CMP.w #$3,d1
00030940 <AmiBlitz3.ab3@21026>    BEQ single
00030942 <AmiBlitz3.ab3@21027>    MOVEQ.l #$0d,D3
00030948 <AmiBlitz3.ab3@21033>    JSR asmconst
0003094C <AmiBlitz3.ab3@21034>    BSR.w JL_0_C796
00030950 <AmiBlitz3.ab3@21035>    BSR.w writelong
00030954 <AmiBlitz3.ab3@21036>    BSR   writelong
00030958 <AmiBlitz3.ab3@21037>   CMP.w #$2C,D0
0003095C <AmiBlitz3.ab3@21038>    BEQ.w JL_0_C7D8b
0003095E <AmiBlitz3.ab3@21039> RTS
00030960 <AmiBlitz3.ab3@21043>   MOVEQ.l #$0B,D3
00030968 <AmiBlitz3.ab3@21047>   MOVE.b #1,_dcb
0003096E <AmiBlitz3.ab3@21050>   JSR asmconst
00030974 <AmiBlitz3.ab3@21051>   CLR.b _dcb
00030978 <AmiBlitz3.ab3@21052>   BSR.w JL_0_C796
0003097C <AmiBlitz3.ab3@21053>   BSR writebyte
00030980 <AmiBlitz3.ab3@21054>   BSR writebyte
00030984 <AmiBlitz3.ab3@21055>   BSR writebyte                                            ;long
00030988 <AmiBlitz3.ab3@21056>   BSR writebyte
0003098C <AmiBlitz3.ab3@21057>   CMP.w #$2C,D0
00030990 <AmiBlitz3.ab3@21058>    BEQ.w JL_0_C7D8
00030992 <AmiBlitz3.ab3@21059> RTS
00030994 <AmiBlitz3.ab3@21063>   MOVEQ.l #$0c,D3
0003099C <AmiBlitz3.ab3@21067>   MOVE.b #1,_dcb
000309A2 <AmiBlitz3.ab3@21070>   JSR asmconst
000309A8 <AmiBlitz3.ab3@21071>   CLR.b _dcb
000309AC <AmiBlitz3.ab3@21072>   BSR.w JL_0_C796
000309B0 <AmiBlitz3.ab3@21073>   BSR.w writebyte
000309B4 <AmiBlitz3.ab3@21074>   BSR.w writebyte
000309B8 <AmiBlitz3.ab3@21075>   BSR.w writebyte
000309BC <AmiBlitz3.ab3@21076>   BSR.w writebyte
000309C0 <AmiBlitz3.ab3@21077>   CMP.w #$2C,D0
000309C4 <AmiBlitz3.ab3@21078>    BEQ.w JL_0_C7D8a
000309C6 <AmiBlitz3.ab3@21079> RTS
000309C8 <AmiBlitz3.ab3@21084>   MOVEQ.l #$11,D3
000309CE <AmiBlitz3.ab3@21087>   JSR get1bytemain
000309D2 <AmiBlitz3.ab3@21088>   CMP.w #$22,D0
000309D6 <AmiBlitz3.ab3@21089>    BNE.w JL_0_C81E
000309D8 <AmiBlitz3.ab3@21092>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
000309DC <AmiBlitz3.ab3@21093>    BEQ.w syntaxerr
000309E0 <AmiBlitz3.ab3@21094>   CMP.w #$22,D0
000309E4 <AmiBlitz3.ab3@21095>    BEQ.w JL_0_C816
000309E8 <AmiBlitz3.ab3@21096>   CMP.b #"\",d0
000309EC <AmiBlitz3.ab3@21097>    BNE 'n1
000309F0 <AmiBlitz3.ab3@21098>   CMP.b #"\",(a5)
000309F4 <AmiBlitz3.ab3@21099>    BEQ 'do1
000309F6 <AmiBlitz3.ab3@21102>   MOVE.w D0,D1
000309FA <AmiBlitz3.ab3@21103>   BSR.w writebyte
000309FE <AmiBlitz3.ab3@21104> BRA.w JL_0_C7FC
00030A06 <AmiBlitz3.ab3@21107>   CMP.l #"__DA",1(a5)
00030A0A <AmiBlitz3.ab3@21108>    BNE 'nodate1
00030A12 <AmiBlitz3.ab3@21109>   CMP.l #"TE__",5(a5)
00030A16 <AmiBlitz3.ab3@21110>    BEQ 'c1
00030A1E <AmiBlitz3.ab3@21111>   CMP.l #"TE_G",5(a5)
00030A22 <AmiBlitz3.ab3@21112>    BNE 'nodate1
00030A2A <AmiBlitz3.ab3@21113>   CMP.l #"ER__",9(a5)
00030A2E <AmiBlitz3.ab3@21114>    BNE 'nodate1
00030A34 <AmiBlitz3.ab3@21115>   JSR compiledatedc_ger
00030A38 <AmiBlitz3.ab3@21116> BRA 'n1
00030A3E <AmiBlitz3.ab3@21119>   JSR compiledatedc
00030A42 <AmiBlitz3.ab3@21120> BRA 'n1
00030A4A <AmiBlitz3.ab3@21123>   CMP.l #"__VE",1(a5)
00030A4E <AmiBlitz3.ab3@21124>    BNE 'n1
00030A54 <AmiBlitz3.ab3@21125>   CMP.w #"R_",5(a5)
00030A58 <AmiBlitz3.ab3@21126>    BNE 'n1
00030A5E <AmiBlitz3.ab3@21127>   JSR version_string_dc
00030A62 <AmiBlitz3.ab3@21128> BRA.w JL_0_C7FC
00030A68 <AmiBlitz3.ab3@21132>   CLR.w instringon
00030A6E <AmiBlitz3.ab3@21133>   JSR get1bytemain
00030A72 <AmiBlitz3.ab3@21134> BRA.w JL_0_C83A
00030A7C <AmiBlitz3.ab3@21139>    MOVE.w oldqflag,instringon
00030A82 <AmiBlitz3.ab3@21140>   MOVEA.l lastsourcepos,A5
00030A88 <AmiBlitz3.ab3@21141>    JSR asmconst
00030A8E <AmiBlitz3.ab3@21142>   SUBQ.l #1,destpointer
00030A92 <AmiBlitz3.ab3@21143>    BSR.w JL_0_C796
00030A98 <AmiBlitz3.ab3@21144>   ADDQ.l #1,destpointer
00030A9C <AmiBlitz3.ab3@21145>    BSR.w writebyte
00030AA0 <AmiBlitz3.ab3@21148>   CMP.w #$2C,D0
00030AA4 <AmiBlitz3.ab3@21149>    BEQ.w JL_0_C7F0
00030AA6 <AmiBlitz3.ab3@21150> RTS
00030AA8 <AmiBlitz3.ab3@21154>   MOVEQ.l #$10,D3
00030AB0 <AmiBlitz3.ab3@21160>   MOVE.b #1,_dcb
00030AB6 <AmiBlitz3.ab3@21161>   JSR asmconst
00030ABC <AmiBlitz3.ab3@21162>   CLR.b _dcb
00030AC0 <AmiBlitz3.ab3@21163>   BSR.w JL_0_C796
00030AC4 <AmiBlitz3.ab3@21164>   BSR.w writebyte
00030AC8 <AmiBlitz3.ab3@21165>   BSR.w writebyte
00030ACC <AmiBlitz3.ab3@21166>   CMP.w #$2C,D0
00030AD0 <AmiBlitz3.ab3@21167>    BEQ.w JL_0_C84A
00030AD2 <AmiBlitz3.ab3@21168> RTS
00030AD8 <AmiBlitz3.ab3@21172>   ADDQ.l #3,destpointer
00030AE0 <AmiBlitz3.ab3@21173>   ANDI.w #$FFFC,destpointer+2
00030AE2 <AmiBlitz3.ab3@21174> RTS
00030AE8 <AmiBlitz3.ab3@21178>   ADDQ.l #7,destpointer
00030AF0 <AmiBlitz3.ab3@21179>   ANDI.w #$FFF8,destpointer+2
00030AF2 <AmiBlitz3.ab3@21180> RTS
00030AF8 <AmiBlitz3.ab3@21184>   ADDQ.l #1,destpointer                                    ;even
00030B00 <AmiBlitz3.ab3@21185>   BCLR #$0,destpointer+3
00030B02 <AmiBlitz3.ab3@21186> RTS
00030B04 <AmiBlitz3.ab3@21189> datasize: Ds.w 1
00030B0A <AmiBlitz3.ab3@21199>   TST.b debugmode
00030B0E <AmiBlitz3.ab3@21200>   BEQ.w pdt__skip
00030B12 <AmiBlitz3.ab3@21201>   MOVE.w #$4420,D0                                         ;'D '
00030B16 <AmiBlitz3.ab3@21202>   MOVE.b datasize+1(PC),D0
00030B1A <AmiBlitz3.ab3@21203> BRA.w JL_0_C1E6
00030B1C <AmiBlitz3.ab3@21206> RTS
00030B20 <AmiBlitz3.ab3@21210>   MOVE.w #$FC17,D1
00030B26 <AmiBlitz3.ab3@21211>    JSR uselib
00030B30 <AmiBlitz3.ab3@21213>    MOVE.w oldqflag,instringon
00030B36 <AmiBlitz3.ab3@21214>   MOVEA.l lastsourcepos,A5
00030B3C <AmiBlitz3.ab3@21215>    JSR AJL_0_498A
00030B42 <AmiBlitz3.ab3@21216>   MOVE.w D1,datasize
00030B46 <AmiBlitz3.ab3@21217>   CMP.w #$7,D1
00030B4A <AmiBlitz3.ab3@21218>    BEQ.w JL_0_C944
00030B4C <AmiBlitz3.ab3@21219>   MOVE.w D1,-(A7)
00030B50 <AmiBlitz3.ab3@21222>   BSR.w pdt
00030B52 <AmiBlitz3.ab3@21223>   MOVE.w (A7),D2
00030B56 <AmiBlitz3.ab3@21224>    BSR.w JL_0_B1D8
00030B58 <AmiBlitz3.ab3@21225>   CMP.w (A7),D2                                            ;datamode
00030B5C <AmiBlitz3.ab3@21226>    BEQ.w JL_0_C920
00030B5E <AmiBlitz3.ab3@21227>   MOVE.w D2,D1
00030B60 <AmiBlitz3.ab3@21228>   MOVE.w (A7),D2
00030B64 <AmiBlitz3.ab3@21229>   CMP.w #$2,D2
00030B68 <AmiBlitz3.ab3@21230>    BNE.w JL_0_C8FE
00030B6C <AmiBlitz3.ab3@21231>   CMP.w #$3,D1
00030B70 <AmiBlitz3.ab3@21232>    BNE.w baddaterr
00030B76 <AmiBlitz3.ab3@21233>   CMP.l #$10000,D3
00030B7A <AmiBlitz3.ab3@21234>    BCC.w baddaterr
00030B7E <AmiBlitz3.ab3@21235> BRA.w JL_0_C920
00030B82 <AmiBlitz3.ab3@21238>   CMP.w #$1,D2
00030B86 <AmiBlitz3.ab3@21239>    BNE.w JL_0_C91C
00030B8A <AmiBlitz3.ab3@21240>   CMP.w #$2,D1
00030B8E <AmiBlitz3.ab3@21241>    BNE.w baddaterr
00030B94 <AmiBlitz3.ab3@21242>   CMP.l #$100,D3
00030B98 <AmiBlitz3.ab3@21243>    BCC.w baddaterr
00030B9C <AmiBlitz3.ab3@21244> BRA.w JL_0_C920
00030BA0 <AmiBlitz3.ab3@21247> BRA.w baddaterr
00030BA4 <AmiBlitz3.ab3@21250>   CMP.w #$3,D2
00030BA8 <AmiBlitz3.ab3@21251>   BCC.w JL_0_C930
00030BAC <AmiBlitz3.ab3@21252>   BSR.w JL_0_C1E6
00030BB0 <AmiBlitz3.ab3@21253> BRA.w JL_0_C934
00030BB6 <AmiBlitz3.ab3@21256>   TST.b iee
00030BBA <AmiBlitz3.ab3@21257>   BEQ 'old
00030BBE <AmiBlitz3.ab3@21258>   CMP.b #5,d2
00030BC2 <AmiBlitz3.ab3@21259>   BNE 'old
00030BC6 <AmiBlitz3.ab3@21260>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00030BCA <AmiBlitz3.ab3@21264>   BSR.w JL_0_C1DE                                          ;write data >3
00030BD0 <AmiBlitz3.ab3@21267>   JSR reget
00030BD4 <AmiBlitz3.ab3@21268>   CMP.w #$2C,D0
00030BD8 <AmiBlitz3.ab3@21269>    BEQ.w JL_0_C8CC
00030BDA <AmiBlitz3.ab3@21270>   ADDQ.w #2,A7
00030BDC <AmiBlitz3.ab3@21271> RTS
00030BE0 <AmiBlitz3.ab3@21274>    BSR.w pdt
00030BE6 <AmiBlitz3.ab3@21275>   MOVE.l data2,-(A7)
00030BEA <AmiBlitz3.ab3@21276>    BSR.w JL_0_C1DE
00030BEC <AmiBlitz3.ab3@21277>   MOVEQ.l #$00,D1
00030BF2 <AmiBlitz3.ab3@21278>    JSR get1bytemain
00030BF6 <AmiBlitz3.ab3@21279>    BEQ.w JL_0_C9A6
00030BFA <AmiBlitz3.ab3@21280>   CMP.w #$22,D0
00030BFE <AmiBlitz3.ab3@21281>    BEQ.w JL_0_C988
00030C02 <AmiBlitz3.ab3@21282>   CMP.w #$2C,D0
00030C06 <AmiBlitz3.ab3@21283>    BEQ.w JL_0_C9A6
00030C0A <AmiBlitz3.ab3@21286>    BSR.w JL_0_C210
00030C0C <AmiBlitz3.ab3@21287>   ADDQ.w #1,D1
00030C12 <AmiBlitz3.ab3@21288>    JSR getchar
00030C14 <AmiBlitz3.ab3@21289>   TST.w D0
00030C18 <AmiBlitz3.ab3@21290>    BEQ.w JL_0_C9A6
00030C1C <AmiBlitz3.ab3@21291>   CMP.w #$2C,D0
00030C20 <AmiBlitz3.ab3@21292>    BEQ.w JL_0_C9A6
00030C24 <AmiBlitz3.ab3@21293> BRA.w JL_0_C96C
00030C26 <AmiBlitz3.ab3@21297>    MOVEQ #0,d0
00030C28 <AmiBlitz3.ab3@21298>    MOVE.b (a5)+,d0
00030C2C <AmiBlitz3.ab3@21299>    BEQ.w notqerr2
00030C30 <AmiBlitz3.ab3@21300>   CMP.w #$22,D0
00030C34 <AmiBlitz3.ab3@21301>    BEQ.w JL_0_C9A2
00030C38 <AmiBlitz3.ab3@21302>    BSR.w JL_0_C210
00030C3A <AmiBlitz3.ab3@21303>   ADDQ.w #1,D1
00030C3E <AmiBlitz3.ab3@21304> BRA.w JL_0_C988
00030C44 <AmiBlitz3.ab3@21305> notqerr2 JMP notqerr
00030C4A <AmiBlitz3.ab3@21307>   CLR.w instringon
00030C50 <AmiBlitz3.ab3@21308>   JSR get1bytemain
00030C52 <AmiBlitz3.ab3@21311>   MOVEA.l (A7)+,A0
00030C58 <AmiBlitz3.ab3@21312>   MOVE.w dontwrite,D2
00030C5C <AmiBlitz3.ab3@21313>    BNE.w JL_0_C9B4
00030C5E <AmiBlitz3.ab3@21314>   MOVE.l D1,(A0)
00030C64 <AmiBlitz3.ab3@21317>   ADDQ.l #1,data2
00030C6C <AmiBlitz3.ab3@21318>   BCLR #$0,data2+3
00030C70 <AmiBlitz3.ab3@21319>   CMP.w #$2C,D0
00030C74 <AmiBlitz3.ab3@21320>    BEQ.w JL_0_C944
00030C76 <AmiBlitz3.ab3@21321> RTS
00030C7C <AmiBlitz3.ab3@21325> JMP vardeclareerr
00030C82 <AmiBlitz3.ab3@21328>   MOVE.w proceduremode,D1                                  ;doshared
00030C86 <AmiBlitz3.ab3@21330>   BNE.w 'l1
00030C88 <AmiBlitz3.ab3@21331>   MOVE.w D1,-(A7)
00030C8E <AmiBlitz3.ab3@21332>   CLR.w proceduremode
00030C94 <AmiBlitz3.ab3@21335>   LEA varbase,a2
00030C98 <AmiBlitz3.ab3@21336>   BSR.w getparameter
00030C9A <AmiBlitz3.ab3@21337>   MOVE.w d2,-(a7)
00030CA0 <AmiBlitz3.ab3@21338>    JSR findvariable
00030CA4 <AmiBlitz3.ab3@21339>    BEQ 'checkdim
00030CAA <AmiBlitz3.ab3@21340>    LEA sharebase,a2
00030CAC <AmiBlitz3.ab3@21341>    MOVEQ #$f+4,d7
00030CB0 <AmiBlitz3.ab3@21342>    BSR.w findlab                                         ;find var
00030CB4 <AmiBlitz3.ab3@21343>    BEQ.b dupsherr
00030CB8 <AmiBlitz3.ab3@21344>    BSR addlabel
00030CBC <AmiBlitz3.ab3@21345>    CMP.b #".",d0
00030CC0 <AmiBlitz3.ab3@21346>    BNE JUMP_vardeclareerr
00030CC2 <AmiBlitz3.ab3@21347>    MOVE.l a2,a3
00030CC8 <AmiBlitz3.ab3@21348>    JSR JL_0_8EB8b
00030CCA <AmiBlitz3.ab3@21379>   MOVE.w (a7)+,d2
00030CCE <AmiBlitz3.ab3@21380>    CMP.b #",",d0
00030CD2 <AmiBlitz3.ab3@21381>    BNE 'ret
00030CD8 <AmiBlitz3.ab3@21382>    JSR get1bytemain
00030CDC <AmiBlitz3.ab3@21383> BRA 'again2
00030CE2 <AmiBlitz3.ab3@21386>   MOVE.w (A7)+,proceduremode
00030CE4 <AmiBlitz3.ab3@21387> RTS
00030CEA <AmiBlitz3.ab3@21394>    CMP.w #2,6(a2)
00030CEE <AmiBlitz3.ab3@21395>    BEQ 'do
00030CF4 <AmiBlitz3.ab3@21396>    CMP.w #$102,6(a2)
00030CF8 <AmiBlitz3.ab3@21397>    BEQ 'do
00030CFE <AmiBlitz3.ab3@21398> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00030D04 <AmiBlitz3.ab3@21401>   LEA varbase,a0
00030D06 <AmiBlitz3.ab3@21404>   MOVE.l (A0),D0                                           ;find label
00030D0A <AmiBlitz3.ab3@21405>    BEQ.b 'z1
00030D0C <AmiBlitz3.ab3@21406>    CMP.l d0,a2
00030D10 <AmiBlitz3.ab3@21407>    BEQ 'z1
00030D12 <AmiBlitz3.ab3@21408>    MOVE.l d0,a0
00030D16 <AmiBlitz3.ab3@21409> BRA 'm1
00030D18 <AmiBlitz3.ab3@21412>   MOVE.l (a2),d1
00030D1A <AmiBlitz3.ab3@21413>     MOVE.l d1,(a0)
00030D1C <AmiBlitz3.ab3@21414>     CLR.l (a2)
00030D22 <AmiBlitz3.ab3@21415>     LEA sharebase,a0
00030D24 <AmiBlitz3.ab3@21416>     MOVE.l (a0),(a2)
00030D26 <AmiBlitz3.ab3@21417>     MOVE.l a2,(a0)
00030D2C <AmiBlitz3.ab3@21418>     JSR get1bytemain
00030D32 <AmiBlitz3.ab3@21419>     JSR get1bytemain
00030D36 <AmiBlitz3.ab3@21420> BRA 'domore
00030D3E <AmiBlitz3.ab3@21423>   MOVE.b #1,nowdeclare
00030D40 <AmiBlitz3.ab3@21424>   MOVE.w D1,-(A7)
00030D46 <AmiBlitz3.ab3@21425>   CLR.w proceduremode
00030D4A <AmiBlitz3.ab3@21428>    BSR.w getparameter
00030D4C <AmiBlitz3.ab3@21429>   MOVE.w D2,-(A7)
00030D52 <AmiBlitz3.ab3@21430>   LEA firstglob,A2
00030D56 <AmiBlitz3.ab3@21431>    BSR.w findvariable2
00030D5A <AmiBlitz3.ab3@21432>    BNE.b JL_0_CA06
00030D60 <AmiBlitz3.ab3@21435>   MOVE.b flagmask+1,D1
00030D64 <AmiBlitz3.ab3@21436>   MOVE.b $7(A2),D3
00030D66 <AmiBlitz3.ab3@21437>   EOR.b D3,D1
00030D6A <AmiBlitz3.ab3@21438>    BEQ.w dupsherr
00030D6E <AmiBlitz3.ab3@21439>    BSR.w findlab
00030D72 <AmiBlitz3.ab3@21440>    BEQ.b JL_0_C9F0
00030D76 <AmiBlitz3.ab3@21443>    BSR.w addlabel
00030D78 <AmiBlitz3.ab3@21444>   MOVE.w (A7)+,D2
00030D7A <AmiBlitz3.ab3@21445>   MOVE.l A2,-(A7)
00030D7E <AmiBlitz3.ab3@21446>    BSR.w JL_0_8E3C
00030D80 <AmiBlitz3.ab3@21447>   MOVEA.l (A7)+,A2
00030D82 <AmiBlitz3.ab3@21448>   MOVEQ.l #$04,D1
00030D84 <AmiBlitz3.ab3@21449>   ADDQ.w #4,A2
00030D86 <AmiBlitz3.ab3@21450>   ADDQ.w #4,A3
00030D88 <AmiBlitz3.ab3@21453>     MOVE.w (A3)+,(A2)+
00030D8C <AmiBlitz3.ab3@21454>   DBF D1,JL_0_CA1A
00030D94 <AmiBlitz3.ab3@21456>   BTST #$1,flagmask+1
00030D98 <AmiBlitz3.ab3@21457>    BEQ.w JL_0_CA3C
00030D9E <AmiBlitz3.ab3@21458>    JSR get1bytemain
00030DA2 <AmiBlitz3.ab3@21459>   CMP.w #$29,D0
00030DA6 <AmiBlitz3.ab3@21460>    BNE.w syntaxerrc
00030DAC <AmiBlitz3.ab3@21461>    JSR get1bytemain
00030DB0 <AmiBlitz3.ab3@21464>    CMP.w #$2C,D0
00030DB4 <AmiBlitz3.ab3@21465>    BNE.w JL_0_CA4C
00030DBA <AmiBlitz3.ab3@21466>    JSR get1bytemain
00030DBE <AmiBlitz3.ab3@21467> BRA.w JL_0_C9DE
00030DC4 <AmiBlitz3.ab3@21470>   MOVE.w (A7)+,proceduremode
00030DC6 <AmiBlitz3.ab3@21471> RTS
00030DCC <AmiBlitz3.ab3@21473> syntaxerrc JMP syntaxerr
00030DD0 <AmiBlitz3.ab3@21476>    BSR.w JL_0_C05C
00030DD6 <AmiBlitz3.ab3@21477>    JSR check_incdir                                        ; ergebnis in d2
00030DDC <AmiBlitz3.ab3@21479>    LEA ptr_parameterstore,a1
00030DDE <AmiBlitz3.ab3@21480>    MOVE.l d2,-(a7)
00030DE4 <AmiBlitz3.ab3@21481>    LEA includetemp,a0                                      ; filename in includetemp packen
00030DE6 <AmiBlitz3.ab3@21484>      MOVE.b (a1)+,(a0)+
00030DEA <AmiBlitz3.ab3@21485>    BNE 'l4
00030DF0 <AmiBlitz3.ab3@21487>    LEA ptr_parameterstore,a1
00030DF2 <AmiBlitz3.ab3@21488>    MOVE.l a1,a0
00030DF4 <AmiBlitz3.ab3@21491>     TST.b (a0)+
00030DF8 <AmiBlitz3.ab3@21492>    BNE 'l1
00030DFA <AmiBlitz3.ab3@21495>      MOVE.b -(a0),d0
00030DFE <AmiBlitz3.ab3@21496>      CMP.b #":",d0
00030E02 <AmiBlitz3.ab3@21497>       BEQ 'out
00030E06 <AmiBlitz3.ab3@21498>      CMP.b #"/",d0
00030E0A <AmiBlitz3.ab3@21499>       BEQ 'out
00030E0C <AmiBlitz3.ab3@21500>      CMP.l a1,a0
00030E10 <AmiBlitz3.ab3@21501>       BEQ 'out2
00030E14 <AmiBlitz3.ab3@21502> BRA 'l2
00030E16 <AmiBlitz3.ab3@21505>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00030E18 <AmiBlitz3.ab3@21508>    MOVEQ.l #-$01,D2
00030E1A <AmiBlitz3.ab3@21511>      ADDQ.w #1,D2
00030E1C <AmiBlitz3.ab3@21512>      MOVE.b (a0)+,(a1)+
00030E20 <AmiBlitz3.ab3@21513>    BNE 'l3
00030E22 <AmiBlitz3.ab3@21514>    CLR.b (a1)+
00030E28 <AmiBlitz3.ab3@21516>    LEA ptr_parameterstore,a1
00030E2C <AmiBlitz3.ab3@21517>    BSR.w findxinc                                         ;find include
00030E30 <AmiBlitz3.ab3@21518>     BEQ.w 'outb
00030E32 <AmiBlitz3.ab3@21520>    MOVE.w D2,-(A7)
00030E36 <AmiBlitz3.ab3@21521>    BSR.w addlabel
00030E38 <AmiBlitz3.ab3@21522>    MOVE.w (A7)+,D2
00030E3E <AmiBlitz3.ab3@21524>    LEA ptr_parameterstore,a1
00030E44 <AmiBlitz3.ab3@21525>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00030E46 <AmiBlitz3.ab3@21528>     MOVE.b (a0)+,(a1)+
00030E4A <AmiBlitz3.ab3@21529>    BNE 'l4b
00030E4C <AmiBlitz3.ab3@21531>    MOVE.l (a7)+,d2
00030E52 <AmiBlitz3.ab3@21532>    LEA ptr_parameterstore,a1
00030E56 <AmiBlitz3.ab3@21533> BRA.w JL_0_CB18
00030E5C <AmiBlitz3.ab3@21536>    LEA ptr_parameterstore,a1
00030E62 <AmiBlitz3.ab3@21537>    LEA includetemp,a0
00030E64 <AmiBlitz3.ab3@21540>     MOVE.b (a0)+,(a1)+
00030E68 <AmiBlitz3.ab3@21541>    BNE 'l4b2
00030E6A <AmiBlitz3.ab3@21543>    MOVE.l (a7)+,d2
00030E70 <AmiBlitz3.ab3@21544>    LEA ptr_parameterstore,a1
00030E72 <AmiBlitz3.ab3@21547> RTS
00030E76 <AmiBlitz3.ab3@21551>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
00030E7C <AmiBlitz3.ab3@21553>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00030E82 <AmiBlitz3.ab3@21555>   MOVEA.l _dosbase,A6
00030E84 <AmiBlitz3.ab3@21556>   MOVE.l D0,D7                                                 ; store Lockpointer
00030E88 <AmiBlitz3.ab3@21557>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00030E8A <AmiBlitz3.ab3@21558>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00030E90 <AmiBlitz3.ab3@21559>   MOVE.l ptr_macrobuffer_begin,D2
00030E94 <AmiBlitz3.ab3@21560>    JSR _Examine(A6)
00030E9A <AmiBlitz3.ab3@21561>   MOVEA.l ptr_macrobuffer_begin,A0
00030E9E <AmiBlitz3.ab3@21562>   MOVE.l $4(A0),D0
00030EA2 <AmiBlitz3.ab3@21563>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00030EA6 <AmiBlitz3.ab3@21564>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00030EA8 <AmiBlitz3.ab3@21565>   MOVE.l D7,D1                                                 ; begin unlock the file
00030EAC <AmiBlitz3.ab3@21566>    JSR _UnLock(A6)
00030EB2 <AmiBlitz3.ab3@21568>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00030EB8 <AmiBlitz3.ab3@21569>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00030EBC <AmiBlitz3.ab3@21570>    JSR _Open(A6)
00030EBE <AmiBlitz3.ab3@21571>   MOVE.l D0,D7
00030EC2 <AmiBlitz3.ab3@21572>    BEQ.w error_cant_open_include
00030EC8 <AmiBlitz3.ab3@21573>   MOVE.l destpointer,D0
00030ECA <AmiBlitz3.ab3@21574>   ADD.l D3,D0
00030ED0 <AmiBlitz3.ab3@21575>   CMP.l destbufferend,D0
00030ED4 <AmiBlitz3.ab3@21576>    BHI.w JL_0_CAF6
00030EDA <AmiBlitz3.ab3@21577>   MOVE.l destpointer,D2
00030EDC <AmiBlitz3.ab3@21578>   MOVE.l D7,D1
00030EE0 <AmiBlitz3.ab3@21579>    JSR _Read(A6)
00030EE6 <AmiBlitz3.ab3@21580>   CMP.l #$FFFFFFFF,D0
00030EEA <AmiBlitz3.ab3@21581>    BEQ.w error_reading_file
00030EF0 <AmiBlitz3.ab3@21582>   ADD.l D0,destpointer
00030EF4 <AmiBlitz3.ab3@21583> BRA.w JL_0_CB04
00030EFC <AmiBlitz3.ab3@21586>   MOVE.w #$FFFF,dontwrite
00030F02 <AmiBlitz3.ab3@21587>   MOVE.l D0,destpointer
00030F04 <AmiBlitz3.ab3@21590>   MOVE.l D7,D1
00030F08 <AmiBlitz3.ab3@21591> JMP _Close(A6)
00030F0E <AmiBlitz3.ab3@21595> JMP illdirerr
00030F14 <AmiBlitz3.ab3@21598>   TST.w dirmode                                            ;include  open
00030F18 <AmiBlitz3.ab3@21599>    BNE.w JUMP_illdirerr
00030F1C <AmiBlitz3.ab3@21600>   BSR.w JL_0_C05C
00030F22 <AmiBlitz3.ab3@21601>   JSR check_incdir
00030F26 <AmiBlitz3.ab3@21604>   BSR.w findconstant
00030F2A <AmiBlitz3.ab3@21605>    BEQ.w alincerr
00030F30 <AmiBlitz3.ab3@21607>   LEA constantbase,A2
00030F34 <AmiBlitz3.ab3@21608>   BSR.w addhere2
00030F38 <AmiBlitz3.ab3@21609>   CLR.w $C(A2)
00030F3C <AmiBlitz3.ab3@21610>   CLR.l $4(A2)
00030F42 <AmiBlitz3.ab3@21612>   MOVE.l #ptr_parameterstore,D1
00030F44 <AmiBlitz3.ab3@21613>   MOVE.l d1,a0
00030F4A <AmiBlitz3.ab3@21614>   LEA includetemp2,a1
00030F4C <AmiBlitz3.ab3@21617>     MOVE.b (a0)+,(a1)+
00030F50 <AmiBlitz3.ab3@21618>   BNE 'l1
00030F56 <AmiBlitz3.ab3@21619>   JSR save_includename
00030F60 <AmiBlitz3.ab3@21620>   MOVE.l #0,include_process
00030F68 <AmiBlitz3.ab3@21622>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00030F6C <AmiBlitz3.ab3@21623>   BEQ 'ok
00030F74 <AmiBlitz3.ab3@21624>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00030F78 <AmiBlitz3.ab3@21625>   BEQ 'ok_tokenize
00030F80 <AmiBlitz3.ab3@21626>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00030F84 <AmiBlitz3.ab3@21627>   BEQ 'ok_tokenize
00030F8C <AmiBlitz3.ab3@21628>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00030F90 <AmiBlitz3.ab3@21629>   BEQ 'ok
00030F96 <AmiBlitz3.ab3@21630> JMP errortoken                                             ;can only include
00030FA0 <AmiBlitz3.ab3@21633>    MOVE.l #-1,include_process                              ; must tokenize the include
00030FA6 <AmiBlitz3.ab3@21636>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00030FAC <AmiBlitz3.ab3@21637>   MOVEA.l _dosbase,A6
00030FB0 <AmiBlitz3.ab3@21638>   JSR _Open(A6)
00030FB4 <AmiBlitz3.ab3@21639>   MOVE.l D0,$8(A2)
00030FB8 <AmiBlitz3.ab3@21640>   BEQ.w error_cant_open_include
00030FBE <AmiBlitz3.ab3@21641>   CLR.l includeline
00030FC2 <AmiBlitz3.ab3@21642>   MOVE.l 8(a2),d1
00030FC4 <AmiBlitz3.ab3@21643>   MOVE.l d3,-(a7)
00030FC6 <AmiBlitz3.ab3@21644>   MOVEQ #0,d2
00030FC8 <AmiBlitz3.ab3@21645>   MOVEQ #1,d3
00030FCC <AmiBlitz3.ab3@21646>   JSR _Seek(a6)                                            ; -66
00030FD0 <AmiBlitz3.ab3@21647>   MOVE.l 8(a2),d1
00030FD2 <AmiBlitz3.ab3@21648>   MOVEQ #0,d2
00030FD4 <AmiBlitz3.ab3@21649>   MOVEQ #-1,d3
00030FD8 <AmiBlitz3.ab3@21650>   JSR _Seek(a6)                                            ; -66
00030FDA <AmiBlitz3.ab3@21651>   MOVE.l (a7)+,d3
00030FDC <AmiBlitz3.ab3@21652>   ADDQ.l #4,d0
00030FE2 <AmiBlitz3.ab3@21654>   MOVE.l #$10000,D1
00030FE8 <AmiBlitz3.ab3@21655>   MOVEA.l _execbase,A6
00030FEC <AmiBlitz3.ab3@21658>   JSR _AllocVec(a6)
00030FF0 <AmiBlitz3.ab3@21660>   MOVE.l D0,$4(A2)
00030FF4 <AmiBlitz3.ab3@21661>   MOVE.l D0,$E(A2)
00030FF6 <AmiBlitz3.ab3@21662>   MOVEA.l D0,A5
00030FFC <AmiBlitz3.ab3@21669>   ADDQ.w #1,ininclude                                      ;enter include
00031002 <AmiBlitz3.ab3@21672>   LEA _include,a0
00031006 <AmiBlitz3.ab3@21673>   MOVEM.l a0-a6/d0-d7,-(a7)
0003100C <AmiBlitz3.ab3@21674>   LEA ptr_parameterstore,a1
0003100E <AmiBlitz3.ab3@21677>     MOVE.b (a0)+,(a1)+
00031012 <AmiBlitz3.ab3@21678>   BNE 'l1b
00031014 <AmiBlitz3.ab3@21680>   MOVEQ #9,d2
0003101A <AmiBlitz3.ab3@21681>   JSR findlabel2
0003101E <AmiBlitz3.ab3@21682>   BNE 'd
00031026 <AmiBlitz3.ab3@21683>   MOVE.l #1,8(a2)
0003102A <AmiBlitz3.ab3@21684>   MOVEM.l (a7)+,a0-a6/d0-d7
0003102E <AmiBlitz3.ab3@21685> BRA 'd2
00031034 <AmiBlitz3.ab3@21688>   JSR addlabelhash
0003103C <AmiBlitz3.ab3@21689>   MOVE.l #$1,$4(A2)
00031044 <AmiBlitz3.ab3@21690>   MOVE.l #1,8(a2)
00031048 <AmiBlitz3.ab3@21691>   MOVEM.l (a7)+,a0-a6/d0-d7
0003104E <AmiBlitz3.ab3@21694>   LEA inctab,a0
00031050 <AmiBlitz3.ab3@21695>   MOVEQ #0,d1
00031056 <AmiBlitz3.ab3@21696>   MOVE.w ininclude,d1
0003105A <AmiBlitz3.ab3@21697>   CLR.l $0(a0,d1*4)
00031060 <AmiBlitz3.ab3@21698>   MOVEA.l passstack,A7
00031066 <AmiBlitz3.ab3@21699> JMP AJL_0_413A
0003106C <AmiBlitz3.ab3@21701> JUMP_dupmacerr JMP dupmacerr
0003106E <AmiBlitz3.ab3@21703> coolnest:   Ds.w 1
00031072 <AmiBlitz3.ab3@21704> macline:    Ds.l 1
0003107C <AmiBlitz3.ab3@21708>   MOVE.l linenumat,macline
00031080 <AmiBlitz3.ab3@21709>    BSR.w makename2
00031084 <AmiBlitz3.ab3@21710>    BEQ.w JUMP_syntaxerr
0003108A <AmiBlitz3.ab3@21712>    CLR.b thenmode
00031094 <AmiBlitz3.ab3@21714>    MOVE.w oldqflag,instringon
0003109A <AmiBlitz3.ab3@21715>   MOVEA.l lastsourcepos,A5
0003109E <AmiBlitz3.ab3@21716>    BSR.w findmac
000310A2 <AmiBlitz3.ab3@21717>    BEQ.w JUMP_dupmacerr
000310A6 <AmiBlitz3.ab3@21718>    BSR.w addlabel
000310AA <AmiBlitz3.ab3@21719>   CLR.w $A(A2)
000310B0 <AmiBlitz3.ab3@21720>   MOVEA.l ptr_macrobuffer_begin,A0
000310B2 <AmiBlitz3.ab3@21721>   MOVEQ.l #$00,D2
000310B8 <AmiBlitz3.ab3@21722>   CLR.w coolnest
000310BA <AmiBlitz3.ab3@21725>   MOVE.b (a5),d0
000310BE <AmiBlitz3.ab3@21726>      BEQ 'l3
000310C2 <AmiBlitz3.ab3@21727>      CMP.b #" ",d0
000310C6 <AmiBlitz3.ab3@21728>       BNE 'l2                                              ;space macro
000310C8 <AmiBlitz3.ab3@21729>       ADDQ.l #1,a5
000310CC <AmiBlitz3.ab3@21730> BRA 'l1
000310D0 <AmiBlitz3.ab3@21733>    CMP.b #";",d0
000310D4 <AmiBlitz3.ab3@21734>       BNE 'l3
000310D6 <AmiBlitz3.ab3@21737>    MOVE.b (a5),d0
000310DA <AmiBlitz3.ab3@21738>       BEQ 'l5
000310DE <AmiBlitz3.ab3@21739>       BSR.w JL_0_CC98                                      ;add comment
000310E0 <AmiBlitz3.ab3@21740>       ADDQ.l #1,a5
000310E4 <AmiBlitz3.ab3@21741> BRA 'l4
000310E8 <AmiBlitz3.ab3@21744>    MOVE.b #":",d0
000310EC <AmiBlitz3.ab3@21745>       BSR.w JL_0_CC98
000310F0 <AmiBlitz3.ab3@21746>       MOVE.b #"@",d0
000310F4 <AmiBlitz3.ab3@21747>       BSR.w JL_0_CC98
000310FC <AmiBlitz3.ab3@21750>    MOVE.b #0,temp
00031104 <AmiBlitz3.ab3@21751>       MOVE.b #0,thenmode
0003110A <AmiBlitz3.ab3@21754>   JSR getcharb
0003110C <AmiBlitz3.ab3@21755>   TST.w D0
00031110 <AmiBlitz3.ab3@21756>    BNE.w JL_0_CBDE
00031114 <AmiBlitz3.ab3@21757>   MOVEM.l D2/A0/A2,-(A7)
0003111A <AmiBlitz3.ab3@21758>   CMP.w #"@@",-3(a5)
0003111E <AmiBlitz3.ab3@21759>   BNE 'l2a
00031124 <AmiBlitz3.ab3@21760>   JSR nextline
00031128 <AmiBlitz3.ab3@21761>   BEQ.w JUMP_macenderr
0003112C <AmiBlitz3.ab3@21762>   MOVEM.l (A7)+,D2/A0/A2
00031130 <AmiBlitz3.ab3@21763> BRA.w JL_0_CBB6
00031136 <AmiBlitz3.ab3@21766>    JSR nextline
0003113A <AmiBlitz3.ab3@21767>    BEQ.w JUMP_macenderr
0003113E <AmiBlitz3.ab3@21768>   MOVEM.l (A7)+,D2/A0/A2
00031140 <AmiBlitz3.ab3@21769>   TST.w D2
00031144 <AmiBlitz3.ab3@21770>    BEQ.w JL_0_CBB6
00031146 <AmiBlitz3.ab3@21773>   MOVE.b (a5),d0
0003114A <AmiBlitz3.ab3@21774>       CMP.b #" ",d0
0003114E <AmiBlitz3.ab3@21775>       BNE 'l1
00031150 <AmiBlitz3.ab3@21776>       ADDQ.w #1,a5
00031154 <AmiBlitz3.ab3@21777> BRA 'l2
0003115A <AmiBlitz3.ab3@21780>   TST.b thenmode
0003115E <AmiBlitz3.ab3@21781>      BEQ 'l3
00031160 <AmiBlitz3.ab3@21782>      MOVEQ #":",d0
00031164 <AmiBlitz3.ab3@21783>      BSR.w JL_0_CC98
00031168 <AmiBlitz3.ab3@21784>      MOVE.w #-$7FFE,D0                                     ;write end if
0003116C <AmiBlitz3.ab3@21785>      BSR macputw
00031170 <AmiBlitz3.ab3@21786>      MOVE.w #$800b,d0
00031174 <AmiBlitz3.ab3@21787>      BSR.w macputw
0003117A <AmiBlitz3.ab3@21788>      CLR.b thenmode
0003117C <AmiBlitz3.ab3@21791>    MOVEQ.l #$3A,D0
00031184 <AmiBlitz3.ab3@21792>      MOVE.b #1,temp
00031188 <AmiBlitz3.ab3@21794> BRA.w JL_0_CC2A
0003118C <AmiBlitz3.ab3@21798>   BPL.w JL_0_CC2A
00031190 <AmiBlitz3.ab3@21799>   CMP.w #-$7FF3,D0                                         ;macro ?
00031194 <AmiBlitz3.ab3@21800>    BNE.w JL_0_CBF4
0003119A <AmiBlitz3.ab3@21801>   ADDQ.w #1,coolnest
0003119E <AmiBlitz3.ab3@21802> BRA.w JL_0_CC22
000311A4 <AmiBlitz3.ab3@21804> JUMP_macnesterr JMP macnesterr
000311A8 <AmiBlitz3.ab3@21807>   CMP.w #$80d7,d0                                          ;object ?
000311AC <AmiBlitz3.ab3@21808>     BNE 'l1x
000311B2 <AmiBlitz3.ab3@21809>     TST.b objectcount
000311B6 <AmiBlitz3.ab3@21810>     BNE JUMP_macnesterr
000311BA <AmiBlitz3.ab3@21813>   CMP.w #$8021,d0
000311BE <AmiBlitz3.ab3@21814>     BNE 'nothen
000311C6 <AmiBlitz3.ab3@21815>     MOVE.b #1,thenmode
000311CC <AmiBlitz3.ab3@21818>   TST.b thenmode
000311D0 <AmiBlitz3.ab3@21819>         BEQ 'l1
000311D4 <AmiBlitz3.ab3@21820>    CMP.w #$8002,d0                                         ;end if
000311D8 <AmiBlitz3.ab3@21821>    BNE 'l1
000311DC <AmiBlitz3.ab3@21822>    MOVEM.l d0/a5,-(a7)
000311E2 <AmiBlitz3.ab3@21823>    JSR get1bytemain
000311E4 <AmiBlitz3.ab3@21824>    MOVE.w d0,d1
000311E8 <AmiBlitz3.ab3@21825>    MOVEM.l (a7)+,a5/d0
000311EC <AmiBlitz3.ab3@21826>    CMP.w #$800b,d1
000311F0 <AmiBlitz3.ab3@21827>    BNE 'l1
000311F6 <AmiBlitz3.ab3@21828>    CLR.b thenmode
000311FA <AmiBlitz3.ab3@21831>    CMP.w #-$7FFE,D0                                        ;end ?
000311FE <AmiBlitz3.ab3@21832>    BNE.w JL_0_CC22
00031200 <AmiBlitz3.ab3@21833>    MOVE.l a5,-(a7)
00031206 <AmiBlitz3.ab3@21834>    JSR get1bytemain
00031208 <AmiBlitz3.ab3@21835>    MOVE.l (a7)+,a5
0003120A <AmiBlitz3.ab3@21836>    TST.w d0
0003120E <AmiBlitz3.ab3@21837>    BEQ 'doend
00031212 <AmiBlitz3.ab3@21838>    CMP.w #":",d0
00031216 <AmiBlitz3.ab3@21839>    BEQ 'doend
0003121A <AmiBlitz3.ab3@21840>    CMP.w #";",d0
0003121E <AmiBlitz3.ab3@21841>    BEQ 'doend
00031220 <AmiBlitz3.ab3@21842>    MOVE.l a5,-(a7)
00031226 <AmiBlitz3.ab3@21843>    JSR get1bytemain
0003122A <AmiBlitz3.ab3@21844>    MOVE.l -1(a5),d0
0003122C <AmiBlitz3.ab3@21845>    MOVE.l (a7)+,a5
00031232 <AmiBlitz3.ab3@21846>    CMP.l #"noa7",d0
00031236 <AmiBlitz3.ab3@21847>    BEQ 'doend
0003123A <AmiBlitz3.ab3@21848> BRA 'morechar
0003123E <AmiBlitz3.ab3@21851>   MOVE.w #$8002,D0
00031242 <AmiBlitz3.ab3@21852>    BSR.w macputw
00031246 <AmiBlitz3.ab3@21853> BRA JL_0_CBB6
0003124C <AmiBlitz3.ab3@21856>   JSR get1bytemain
00031250 <AmiBlitz3.ab3@21857>    CMP.w #-$7FF3,D0                                        ;end macro
00031254 <AmiBlitz3.ab3@21858>    BEQ.w 'lo1
00031258 <AmiBlitz3.ab3@21859>   CMP.w #$80d7,d0                                          ;end object
0003125C <AmiBlitz3.ab3@21860>   BNE JL_0_CC12
00031262 <AmiBlitz3.ab3@21861>   SUBQ.b #1,objectcount
00031268 <AmiBlitz3.ab3@21862>   TST.b developobject
0003126C <AmiBlitz3.ab3@21863>   BEQ 'lo1
00031270 <AmiBlitz3.ab3@21864>   BSR skiprest
00031272 <AmiBlitz3.ab3@21865> RTS
00031278 <AmiBlitz3.ab3@21868>   SUBQ.w #1,coolnest
0003127C <AmiBlitz3.ab3@21869>    BMI.w JL_0_CC32
0003127E <AmiBlitz3.ab3@21872>   MOVE.w D0,-(A7)
00031282 <AmiBlitz3.ab3@21873>   MOVE.w #$8002,D0
00031286 <AmiBlitz3.ab3@21874>    BSR.w macputw
00031288 <AmiBlitz3.ab3@21875>   MOVE.w (A7)+,D0
0003128C <AmiBlitz3.ab3@21876> BRA.w JL_0_CC22
00031290 <AmiBlitz3.ab3@21879>   BSR.w macputw
00031294 <AmiBlitz3.ab3@21880> BRA.w JL_0_CBB6
0003129A <AmiBlitz3.ab3@21882> JUMP_macenderr JMP macenderr
000312A0 <AmiBlitz3.ab3@21885>     CMP.w #"@@",-1(a5)                                     ;merge lines
000312A4 <AmiBlitz3.ab3@21886>     BNE 'no
000312A8 <AmiBlitz3.ab3@21887>      MOVEM.l D2/A0/A2,-(A7)
000312AE <AmiBlitz3.ab3@21888>    JSR nextline
000312B2 <AmiBlitz3.ab3@21889>    BEQ.w JUMP_macenderr
000312B6 <AmiBlitz3.ab3@21890>   MOVEM.l (A7)+,D2/A0/A2
000312B8 <AmiBlitz3.ab3@21891>     TST.w D2
000312BC <AmiBlitz3.ab3@21892>    BEQ.w JL_0_CBB6
000312C0 <AmiBlitz3.ab3@21893> BRA JL_0_CBB6
000312C4 <AmiBlitz3.ab3@21897>   BSR.w JL_0_CC98
000312C8 <AmiBlitz3.ab3@21898> BRA.w JL_0_CBB6
000312CA <AmiBlitz3.ab3@21901>   ADDQ.w #4,A7
000312CC <AmiBlitz3.ab3@21902>   MOVE.l A0,D0
000312D2 <AmiBlitz3.ab3@21903>   SUB.l ptr_macrobuffer_begin,D0
000312D6 <AmiBlitz3.ab3@21906>    BEQ.w JL_0_CC5E
000312DA <AmiBlitz3.ab3@21907>   CMPI.b #":",-(A0)
000312DE <AmiBlitz3.ab3@21908>    BNE.w JL_0_CC5E
000312E2 <AmiBlitz3.ab3@21909>   CMP.w #$1,D0
000312E6 <AmiBlitz3.ab3@21910>    BEQ.w JL_0_CC58
000312EA <AmiBlitz3.ab3@21911>   TST.b -$1(A0)
000312EE <AmiBlitz3.ab3@21912>    BMI.w JL_0_CC5E
000312F0 <AmiBlitz3.ab3@21915>   SUBQ.w #1,D0
000312F4 <AmiBlitz3.ab3@21916> BRA.w JL_0_CC3C
000312F8 <AmiBlitz3.ab3@21919>   MOVE.w D0,$8(A2)
000312FC <AmiBlitz3.ab3@21920>    BEQ.w JL_0_CC8E
000312FE <AmiBlitz3.ab3@21921>   MOVEQ.l #$01,D1
00031304 <AmiBlitz3.ab3@21922>   MOVEA.l _execbase,A6
0003130A <AmiBlitz3.ab3@21923>   MOVE.l mempool,a0
0003130E <AmiBlitz3.ab3@21924>   JSR _AllocPooled(a6)
00031310 <AmiBlitz3.ab3@21926>   MOVEA.l D0,A0
00031314 <AmiBlitz3.ab3@21927>   MOVE.l A0,$4(A2)
00031318 <AmiBlitz3.ab3@21928>   MOVE.w $8(A2),D1
0003131C <AmiBlitz3.ab3@21929>    BEQ.w JL_0_CC8E
0003131E <AmiBlitz3.ab3@21930>   SUBQ.w #1,D1
00031324 <AmiBlitz3.ab3@21931>   MOVEA.l ptr_macrobuffer_begin,A1
00031326 <AmiBlitz3.ab3@21934>     MOVE.b (A1)+,(A0)+
0003132A <AmiBlitz3.ab3@21935>   DBF D1,JL_0_CC88
00031330 <AmiBlitz3.ab3@21938> JMP get1bytemain
00031332 <AmiBlitz3.ab3@21942>   MOVE.w D0,D1
00031334 <AmiBlitz3.ab3@21943>   LSR.w #8,D1
00031336 <AmiBlitz3.ab3@21944>   MOVE.b D1,(A0)+
00031338 <AmiBlitz3.ab3@21947>   MOVEQ.l #-$01,D2
0003133A <AmiBlitz3.ab3@21948>   MOVE.b D0,(A0)+
00031340 <AmiBlitz3.ab3@21949>   CMPA.l ptr_macrobuffer_end,A0
00031344 <AmiBlitz3.ab3@21950>    BCC.w macbigerr2
00031346 <AmiBlitz3.ab3@21951> RTS
0003134C <AmiBlitz3.ab3@21952> macbigerr2 JMP macbigerr
0003134E <AmiBlitz3.ab3@21955>   MOVE.l d0,-(a7)
00031350 <AmiBlitz3.ab3@21956>   MOVEQ #0,d0
00031356 <AmiBlitz3.ab3@21957>   CLR.b skiptoggle
00031358 <AmiBlitz3.ab3@21960>     MOVE.b (a5),d0
0003135C <AmiBlitz3.ab3@21961>     BEQ 'l3
00031360 <AmiBlitz3.ab3@21962>     CMP.b #";",d0
00031364 <AmiBlitz3.ab3@21963>     BNE 'l2
0003136C <AmiBlitz3.ab3@21964>     MOVE.b #1,skiptoggle
00031372 <AmiBlitz3.ab3@21967>     TST.b skiptoggle
00031376 <AmiBlitz3.ab3@21968>     BNE 'l4
0003137A <AmiBlitz3.ab3@21969>     CMP.b #":",d0
0003137E <AmiBlitz3.ab3@21970>     BEQ 'l3
00031380 <AmiBlitz3.ab3@21973>     ADDQ #1,a5
00031384 <AmiBlitz3.ab3@21974> BRA 'loop
0003138A <AmiBlitz3.ab3@21977>   MOVE.w d0,lastchar
0003138C <AmiBlitz3.ab3@21978>   MOVE.l (a7)+,d0
0003138E <AmiBlitz3.ab3@21979> RTS
00031392 <AmiBlitz3.ab3@21983>   BSR.w ifchar
00031396 <AmiBlitz3.ab3@21984>    BNE.w JUMP_syntaxerr
00031398 <AmiBlitz3.ab3@21985>   MOVE.w D0,D1
0003139E <AmiBlitz3.ab3@21986>   JSR get1bytemain
000313A2 <AmiBlitz3.ab3@21987>   BSR.w ifchar
000313A6 <AmiBlitz3.ab3@21988>    BNE.w JL_0_CCDA
000313A8 <AmiBlitz3.ab3@21989>   ADDQ.w #1,D0
000313AA <AmiBlitz3.ab3@21990>   MOVE.w D0,D2
000313AC <AmiBlitz3.ab3@21991>   ADD.w D0,D0
000313AE <AmiBlitz3.ab3@21992>   ADD.w D2,D0
000313B0 <AmiBlitz3.ab3@21993>   ADD.w D0,D1
000313B2 <AmiBlitz3.ab3@21994>   MOVE.w D1,D0
000313B6 <AmiBlitz3.ab3@21995>   ANDI.w #$3,D0
000313BA <AmiBlitz3.ab3@21996>   CMP.w #$3,D0
000313BE <AmiBlitz3.ab3@21997>    BEQ.w JUMP_syntaxerr
000313C4 <AmiBlitz3.ab3@21999>   JSR get1bytemain
000313C6 <AmiBlitz3.ab3@22002> RTS
000313C8 <AmiBlitz3.ab3@22008> thetst1:  TST.b D0
000313CA <AmiBlitz3.ab3@22009> thetst2:  TST.w D0
000313CC <AmiBlitz3.ab3@22010> thetst3:  TST.l D0
000313CE <AmiBlitz3.ab3@22011> thetst4:  TST.l (A7)+                                      ;Any Length?
000313D2 <AmiBlitz3.ab3@22012> thetst5:  JSR _Reschedule(A6)
000313D6 <AmiBlitz3.ab3@22014> posbr:    BEQ.w posbr
000313DA <AmiBlitz3.ab3@22015> negbr:    BNE.w negbr
000313DC <AmiBlitz3.ab3@22019>   MOVEQ.l #-$01,D2
000313E0 <AmiBlitz3.ab3@22020> BRA.w JL_0_D04C
000313E6 <AmiBlitz3.ab3@22024>   CLR.l fp0addr
000313E8 <AmiBlitz3.ab3@22025>   MOVEQ.l #$01,D1                                          ;while flag
000313EA <AmiBlitz3.ab3@22026>   MOVEQ.l #$00,D2                                          ;negate flag
000313EE <AmiBlitz3.ab3@22027> BRA.w JL_0_D04E
000313F4 <AmiBlitz3.ab3@22031>   LEA firstrep,A2
000313F6 <AmiBlitz3.ab3@22032>   MOVEQ.l #$08,D2
000313FA <AmiBlitz3.ab3@22033> BRA.w freeslist
000313FE <AmiBlitz3.ab3@22037>   LEA firstsel(PC),A2
00031400 <AmiBlitz3.ab3@22038>   MOVEQ.l #$0E,D2
00031402 <AmiBlitz3.ab3@22043>   MOVEQ.l #$00,D3
00031404 <AmiBlitz3.ab3@22051>   MOVE.l (A2),D0
00031406 <AmiBlitz3.ab3@22052>   CLR.l (A2)
00031408 <AmiBlitz3.ab3@22053>   MOVEA.l D0,A2
0003140E <AmiBlitz3.ab3@22054>   MOVEA.l _execbase,A6
00031412 <AmiBlitz3.ab3@22057>     CMPA.w #$0,A2
00031416 <AmiBlitz3.ab3@22058>      BEQ.w freelist__done
00031418 <AmiBlitz3.ab3@22059>     TST.w D3
0003141C <AmiBlitz3.ab3@22060>      BEQ.w freelist__skip
00031420 <AmiBlitz3.ab3@22061>     MOVEM.l D2-D3/A2,-(A7)
00031422 <AmiBlitz3.ab3@22062>     ADDA.w D3,A2
00031424 <AmiBlitz3.ab3@22063>     MOVE.l D4,D2
00031428 <AmiBlitz3.ab3@22064>     BSR.w freeslist
0003142C <AmiBlitz3.ab3@22065>     MOVEM.l (A7)+,D2-D3/A2
0003142E <AmiBlitz3.ab3@22068>     MOVEA.l A2,A1
00031430 <AmiBlitz3.ab3@22069>     MOVE.l D2,D0
00031432 <AmiBlitz3.ab3@22070>     MOVEA.l (A2),A2
00031438 <AmiBlitz3.ab3@22071>     MOVE.l mempool,a0
0003143C <AmiBlitz3.ab3@22072>     JSR _FreePooled(A6)
00031440 <AmiBlitz3.ab3@22073> BRA.w freelist__loop
00031442 <AmiBlitz3.ab3@22076> RTS
00031448 <AmiBlitz3.ab3@22079> JMP eselerr
0003144C <AmiBlitz3.ab3@22082> firstsel:  Ds.l 1
00031450 <AmiBlitz3.ab3@22085> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031452 <AmiBlitz3.ab3@22088> selpushw:   MOVE.w D0,-(A7)
00031454 <AmiBlitz3.ab3@22090> selpushl:   MOVE.l D0,-(A7)
00031458 <AmiBlitz3.ab3@22092> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
0003145C <AmiBlitz3.ab3@22095> selcomb:    ANDI.w #$FF,D0
0003145E <AmiBlitz3.ab3@22096> selcomw:    CMP.w (A7),D0
00031460 <AmiBlitz3.ab3@22098> selcoml:    CMP.l (A7),D0
00031464 <AmiBlitz3.ab3@22100> selbne:     BNE.w selbne
00031466 <AmiBlitz3.ab3@22102> endsel:     ADDQ.w #8,A7
0003146A <AmiBlitz3.ab3@22108>   MOVE.l firstsel(PC),D0                                  
0003146E <AmiBlitz3.ab3@22109>    BEQ.w JUMP_eselerr
00031470 <AmiBlitz3.ab3@22110>   MOVEA.l D0,A2
00031474 <AmiBlitz3.ab3@22111>    BSR.w JL_0_CDFC
0003147A <AmiBlitz3.ab3@22114>   MOVEA.l _execbase,A6
0003147E <AmiBlitz3.ab3@22117>   MOVE.l $4(A2),D0
00031482 <AmiBlitz3.ab3@22118>    BEQ.w doendsel__done
00031484 <AmiBlitz3.ab3@22119>   MOVEA.l D0,A3
00031488 <AmiBlitz3.ab3@22120>   MOVEA.l $4(A3),A0
0003148E <AmiBlitz3.ab3@22121>   MOVE.l destpointer,D1
00031490 <AmiBlitz3.ab3@22122>   SUB.l A0,D1
00031496 <AmiBlitz3.ab3@22124>     TST.b fast
0003149A <AmiBlitz3.ab3@22125>     BEQ doendsel__loop_l1
000314A0 <AmiBlitz3.ab3@22126>     MOVE.w dontwrite,D0
000314A4 <AmiBlitz3.ab3@22127>     BNE.w doendsel__skip
000314A6 <AmiBlitz3.ab3@22128>     ADDQ.l #2,d1
000314AA <AmiBlitz3.ab3@22129>     MOVE.l d1,-2(a0)
000314AE <AmiBlitz3.ab3@22130>   BRA doendsel__skip
000314B4 <AmiBlitz3.ab3@22134>   TST.w dontwrite
000314B8 <AmiBlitz3.ab3@22135>      BNE.w doendsel__skip
000314BE <AmiBlitz3.ab3@22136>   CMP.l #MaxWordSgnd,D1
000314C2 <AmiBlitz3.ab3@22137>    BHI.w JUMP_cbraerr
000314C4 <AmiBlitz3.ab3@22138>   MOVE.w D1,(A0)
000314C8 <AmiBlitz3.ab3@22141>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
000314CA <AmiBlitz3.ab3@22142>   MOVEA.l A3,A1
000314CC <AmiBlitz3.ab3@22143>   MOVEQ.l #$08,D0
000314D2 <AmiBlitz3.ab3@22144>   MOVE.l mempool,a0
000314D6 <AmiBlitz3.ab3@22145>    JSR _FreePooled(A6)
000314DA <AmiBlitz3.ab3@22146> BRA.w doendsel__loop
000314E0 <AmiBlitz3.ab3@22149>   JSR popselect                                            ;fix stack on select
000314E4 <AmiBlitz3.ab3@22150>   MOVEA.l firstsel(PC),A1
000314EA <AmiBlitz3.ab3@22151>   MOVE.l (A1),firstsel
000314EC <AmiBlitz3.ab3@22152>   MOVEQ.l #$0E,D0
000314F2 <AmiBlitz3.ab3@22153>   MOVEA.l _execbase,A6
000314F8 <AmiBlitz3.ab3@22154>   MOVE.l mempool,a0
000314FC <AmiBlitz3.ab3@22155>   JSR _FreePooled(A6)
00031502 <AmiBlitz3.ab3@22156> JMP get1bytemain
00031504 <AmiBlitz3.ab3@22160>   MOVEA.l (A7)+,A1
00031506 <AmiBlitz3.ab3@22161>   SUBQ.w #8,A1
00031508 <AmiBlitz3.ab3@22162>   MOVEQ.l #$09,D0
0003150A <AmiBlitz3.ab3@22163>   ADD.l (A1),D0
0003150C <AmiBlitz3.ab3@22166>   ADDQ.w #2,A7                                             ;for runtime errs!
00031510 <AmiBlitz3.ab3@22171>   MOVE.l firstsel(PC),D0
00031514 <AmiBlitz3.ab3@22172>    BEQ.w JUMP_defaerr
00031516 <AmiBlitz3.ab3@22173>   MOVEA.l D0,A2
0003151A <AmiBlitz3.ab3@22174>   BSR.w JL_0_CE26
0003151E <AmiBlitz3.ab3@22175>   BSR.w JL_0_CDFC
00031522 <AmiBlitz3.ab3@22176>   CLR.l $8(A2)
00031526 <AmiBlitz3.ab3@22177>   MOVE.w $C(A2),D2
0003152A <AmiBlitz3.ab3@22178> BRA.w JL_0_CE5E
00031530 <AmiBlitz3.ab3@22181> JMP defaerr
00031534 <AmiBlitz3.ab3@22184>   MOVE.l $8(A2),D0
00031538 <AmiBlitz3.ab3@22185>    BEQ.w JL_0_CE24
0003153A <AmiBlitz3.ab3@22186>   MOVEA.l D0,A0
00031540 <AmiBlitz3.ab3@22187>   MOVE.l destpointer,D1
00031542 <AmiBlitz3.ab3@22188>   SUB.l A0,D1
00031548 <AmiBlitz3.ab3@22190>     TST.b fast
0003154C <AmiBlitz3.ab3@22191>     BEQ 'l1
00031552 <AmiBlitz3.ab3@22192>     TST.w dontwrite
00031556 <AmiBlitz3.ab3@22193>     BNE.w JL_0_CE24
00031558 <AmiBlitz3.ab3@22194>     ADDQ.l #2,d1
0003155C <AmiBlitz3.ab3@22195>     MOVE.l D1,-2(A0)
00031560 <AmiBlitz3.ab3@22196>   BRA JL_0_CE24
00031566 <AmiBlitz3.ab3@22200>   TST.w dontwrite
0003156A <AmiBlitz3.ab3@22201>      BNE.w JL_0_CE24
00031570 <AmiBlitz3.ab3@22202>    CMP.l #MaxWordSgnd,D1
00031574 <AmiBlitz3.ab3@22203>    BHI.w JUMP_cbraerr
00031576 <AmiBlitz3.ab3@22204>   MOVE.w D1,(A0)
00031578 <AmiBlitz3.ab3@22207> RTS
0003157E <AmiBlitz3.ab3@22210> JMP cbraerr
00031582 <AmiBlitz3.ab3@22214>   MOVE.l $8(A2),D0
00031586 <AmiBlitz3.ab3@22215>    BEQ.w JL_0_CE5C
00031588 <AmiBlitz3.ab3@22216>   MOVEA.l D0,A3
0003158C <AmiBlitz3.ab3@22217>   MOVE.w #$6000,D1
00031592 <AmiBlitz3.ab3@22219>    TST.b fast
00031596 <AmiBlitz3.ab3@22220>    BEQ 'l1
0003159C <AmiBlitz3.ab3@22221>    OR.l #$ff,d1
000315A0 <AmiBlitz3.ab3@22222>    BSR writeword
000315A4 <AmiBlitz3.ab3@22226>   BSR.w writeword
000315A6 <AmiBlitz3.ab3@22227>   MOVEQ.l #$08,D0
000315A8 <AmiBlitz3.ab3@22228>   MOVEQ.l #$01,D1
000315AE <AmiBlitz3.ab3@22229>   MOVEA.l _execbase,A6
000315B4 <AmiBlitz3.ab3@22230>   MOVE.l mempool,a0
000315B8 <AmiBlitz3.ab3@22231>   JSR _AllocPooled(a6)
000315BA <AmiBlitz3.ab3@22233>   MOVEA.l D0,A0
000315BE <AmiBlitz3.ab3@22234>   MOVE.l $4(A2),(A0)
000315C2 <AmiBlitz3.ab3@22235>   MOVE.l A0,$4(A2)
000315CA <AmiBlitz3.ab3@22236>   MOVE.l destpointer,$4(A0)
000315CE <AmiBlitz3.ab3@22237> BRA.w writeword
000315D0 <AmiBlitz3.ab3@22240> RTS
000315D6 <AmiBlitz3.ab3@22244>   TST.b debugmode
000315DA <AmiBlitz3.ab3@22245>    BEQ.w JL_0_CE7A
000315DE <AmiBlitz3.ab3@22246>   MOVE.w #$C313,D1
000315E2 <AmiBlitz3.ab3@22247>   CMP.w #$3,D2
000315E6 <AmiBlitz3.ab3@22248>    BCS.w JL_0_CE76
000315E8 <AmiBlitz3.ab3@22249>   ADDQ.w #1,D1
000315EC <AmiBlitz3.ab3@22252> BRA.w Atokejsr
000315EE <AmiBlitz3.ab3@22255> RTS
000315F4 <AmiBlitz3.ab3@22259> JMP caseerr
000315F8 <AmiBlitz3.ab3@22262>   MOVE.l firstsel(PC),D0
000315FC <AmiBlitz3.ab3@22263>    BEQ.w JUMP_caseerr
000315FE <AmiBlitz3.ab3@22264>   MOVEA.l D0,A2
00031602 <AmiBlitz3.ab3@22265>    BSR.w JL_0_CE26
00031606 <AmiBlitz3.ab3@22266>    BSR.w JL_0_CDFC
0003160A <AmiBlitz3.ab3@22267>   MOVE.w $C(A2),D2
0003160C <AmiBlitz3.ab3@22268>   MOVE.w D2,-(A7)
00031610 <AmiBlitz3.ab3@22269>    BSR.w JL_0_CE5E
00031612 <AmiBlitz3.ab3@22270>   MOVE.w (A7),D2
00031616 <AmiBlitz3.ab3@22271>    BSR.w bakeval
00031618 <AmiBlitz3.ab3@22272>   MOVE.w (A7)+,D2
0003161C <AmiBlitz3.ab3@22273>   LEA selcomb(PC),A0
00031620 <AmiBlitz3.ab3@22274>   LEA selcombf(PC),A1
00031624 <AmiBlitz3.ab3@22275>   CMP.w #$1,D2
00031628 <AmiBlitz3.ab3@22276>    BEQ.w JL_0_CED8
0003162C <AmiBlitz3.ab3@22277>   LEA selcomw(PC),A0
00031630 <AmiBlitz3.ab3@22278>   CMP.w #$2,D2
00031634 <AmiBlitz3.ab3@22279>    BEQ.w JL_0_CED8
00031638 <AmiBlitz3.ab3@22280>   LEA selcoml(PC),A0
0003163C <AmiBlitz3.ab3@22281>   LEA selcomlf(PC),A1
00031640 <AmiBlitz3.ab3@22282>   CMP.w #$7,D2
00031644 <AmiBlitz3.ab3@22283>    BCS.w JL_0_CED8
00031648 <AmiBlitz3.ab3@22285>   MOVE.w #$CE01,D1
0003164C <AmiBlitz3.ab3@22286>    BSR.w Atokejsr
00031650 <AmiBlitz3.ab3@22287> BRA.w JL_0_CEDC
00031654 <AmiBlitz3.ab3@22290>   BSR.w pokecode
00031658 <AmiBlitz3.ab3@22293>   MOVE.w selbne(PC),D1
0003165E <AmiBlitz3.ab3@22295>     TST.b fast
00031662 <AmiBlitz3.ab3@22296>     BEQ 'l1
00031668 <AmiBlitz3.ab3@22297>     ORI.l #$ff,d1
0003166C <AmiBlitz3.ab3@22298>     BSR writeword
00031670 <AmiBlitz3.ab3@22301>   BSR.w writeword
00031674 <AmiBlitz3.ab3@22302>   MOVEA.l firstsel(PC),A0
0003167C <AmiBlitz3.ab3@22303>   MOVE.l destpointer,$8(A0)
00031680 <AmiBlitz3.ab3@22304> BRA.w writeword
00031684 <AmiBlitz3.ab3@22308> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00031686 <AmiBlitz3.ab3@22309> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
0003168A <AmiBlitz3.ab3@22312> sellineat:  Ds.l 1
00031690 <AmiBlitz3.ab3@22318>   TST.b debugmode
00031694 <AmiBlitz3.ab3@22319>    BEQ.w JL_0_CF0E
00031698 <AmiBlitz3.ab3@22320>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
0003169C <AmiBlitz3.ab3@22321>    BSR.w writelong
000316A6 <AmiBlitz3.ab3@22324>   MOVE.l linenumat,sellineat
000316B0 <AmiBlitz3.ab3@22326>    MOVE.l destpointer,pushpc
000316BA <AmiBlitz3.ab3@22327>   MOVE.l hunkoffsetbase,pushoff
000316BC <AmiBlitz3.ab3@22328>   MOVEQ.l #$00,D2
000316C0 <AmiBlitz3.ab3@22329>    BSR.w bakevalu                                          ;Evaluate
000316C4 <AmiBlitz3.ab3@22330>    BSR.w JL_0_B5D2
000316C8 <AmiBlitz3.ab3@22331>   CMP.w #$7,D2
000316CC <AmiBlitz3.ab3@22332>    BNE.w JL_0_CF36
000316D0 <AmiBlitz3.ab3@22333>   MOVE.w clrst(PC),D1
000316D4 <AmiBlitz3.ab3@22334>    BSR.w writeword
000316D8 <AmiBlitz3.ab3@22337>    BSR.w JL_0_B63C
000316DC <AmiBlitz3.ab3@22338>   LEA selpushb(PC),A0
000316E0 <AmiBlitz3.ab3@22339>   LEA selpushbf(PC),A1
000316E4 <AmiBlitz3.ab3@22340>   CMP.w #$1,D2
000316E8 <AmiBlitz3.ab3@22341>    BEQ.w JL_0_CF88
000316EC <AmiBlitz3.ab3@22342>   LEA selpushw(PC),A0
000316F0 <AmiBlitz3.ab3@22343>   CMP.w #$2,D2
000316F4 <AmiBlitz3.ab3@22344>    BEQ.w JL_0_CF88
000316F8 <AmiBlitz3.ab3@22345>   LEA selpushl(PC),A0
000316FC <AmiBlitz3.ab3@22346>   LEA selpushlf(PC),A1
00031700 <AmiBlitz3.ab3@22347>   CMP.w #$7,D2
00031704 <AmiBlitz3.ab3@22348>    BCS.w JL_0_CF88
0003170A <AmiBlitz3.ab3@22350>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003170E <AmiBlitz3.ab3@22351>    BSR.w writeword
00031712 <AmiBlitz3.ab3@22352>   LEA selpushs(PC),A0
00031716 <AmiBlitz3.ab3@22353>   LEA selpushsf(PC),A1
0003171A <AmiBlitz3.ab3@22354>    BSR.w pokecode
0003171E <AmiBlitz3.ab3@22355>   MOVE.w #$C701,D1
00031722 <AmiBlitz3.ab3@22356>    BSR.w Atokejsr
00031726 <AmiBlitz3.ab3@22357> BRA.w JL_0_CF8C
0003172A <AmiBlitz3.ab3@22360>   BSR.w pokecode
0003172C <AmiBlitz3.ab3@22363>   MOVEQ.l #$0E,D0
0003172E <AmiBlitz3.ab3@22364>   MOVEQ.l #$01,D1
00031734 <AmiBlitz3.ab3@22365>   MOVEA.l _execbase,A6
0003173A <AmiBlitz3.ab3@22367>   MOVE.l mempool,a0
0003173E <AmiBlitz3.ab3@22368>   JSR _AllocPooled(a6)
00031740 <AmiBlitz3.ab3@22369>   MOVEA.l D0,A0
00031744 <AmiBlitz3.ab3@22370>   MOVE.l firstsel(PC),(A0)
0003174A <AmiBlitz3.ab3@22371>   MOVE.l A0,firstsel
0003174E <AmiBlitz3.ab3@22372>   CLR.l $4(A0)
00031752 <AmiBlitz3.ab3@22373>   CLR.l $8(A0)
00031756 <AmiBlitz3.ab3@22374>   MOVE.w D2,$C(A0)
00031758 <AmiBlitz3.ab3@22375> RTS
0003175E <AmiBlitz3.ab3@22379>   MOVE.l firstrep,D0
00031762 <AmiBlitz3.ab3@22380>    BEQ.w JUMP_unterr1
00031766 <AmiBlitz3.ab3@22381>   MOVE.w #$6000,D1
0003176A <AmiBlitz3.ab3@22382>   BSR.w writeword
0003176C <AmiBlitz3.ab3@22383>   MOVEA.l D0,A0
00031770 <AmiBlitz3.ab3@22384>   MOVE.l $4(A0),D1
00031776 <AmiBlitz3.ab3@22385>   SUB.l destpointer,D1
00031778 <AmiBlitz3.ab3@22386>   TST.w D1
0003177C <AmiBlitz3.ab3@22387>    BPL.w JUMP_unterr2
00031780 <AmiBlitz3.ab3@22388>   BSR.w writeword
00031786 <AmiBlitz3.ab3@22389>   MOVEA.l _execbase,A6
0003178A <AmiBlitz3.ab3@22390> BRA.w JL_0_D036
00031790 <AmiBlitz3.ab3@22393> JMP unterr2
00031796 <AmiBlitz3.ab3@22396> JMP unterr1
0003179C <AmiBlitz3.ab3@22400>   MOVE.l firstrep,D0
000317A0 <AmiBlitz3.ab3@22401>    BEQ.w JUMP_unterr1
000317A4 <AmiBlitz3.ab3@22402>   BSR.w do_if
000317AA <AmiBlitz3.ab3@22403>   JSR reget
000317AE <AmiBlitz3.ab3@22404>    BNE.w JUMP_syntaxerr
000317B4 <AmiBlitz3.ab3@22405>   MOVE.w dontwrite,D1
000317B8 <AmiBlitz3.ab3@22406>    BNE.w JL_0_D020
000317BE <AmiBlitz3.ab3@22407>   MOVEA.l firstrep,A0
000317C4 <AmiBlitz3.ab3@22408>   MOVEA.l destpointer,A1
000317CA <AmiBlitz3.ab3@22410>     TST.b fast
000317CE <AmiBlitz3.ab3@22411>     BEQ 'l1
000317D0 <AmiBlitz3.ab3@22412>     SUBQ.w #4,a1
000317D4 <AmiBlitz3.ab3@22413>     MOVE.l $4(A0),D2
000317D6 <AmiBlitz3.ab3@22414>     SUB.l A1,D2
000317D8 <AmiBlitz3.ab3@22415>     MOVE.l d2,(a1)
000317DC <AmiBlitz3.ab3@22416>   BRA JL_0_D020
000317DE <AmiBlitz3.ab3@22420>   SUBQ.w #2,A1
000317E2 <AmiBlitz3.ab3@22421>   MOVE.l $4(A0),D2
000317E4 <AmiBlitz3.ab3@22422>   SUB.l A1,D2
000317E6 <AmiBlitz3.ab3@22423>   TST.w D2
000317EA <AmiBlitz3.ab3@22424>    BPL.w JUMP_unterr2
000317EC <AmiBlitz3.ab3@22425>   MOVE.w D2,(A1)
000317F2 <AmiBlitz3.ab3@22428>   MOVEA.l firstiff,A1
000317F8 <AmiBlitz3.ab3@22429>   MOVE.l (A1),firstiff
000317FA <AmiBlitz3.ab3@22430>   MOVEQ.l #$0E,D0
00031800 <AmiBlitz3.ab3@22431>   MOVEA.l _execbase,A6
00031806 <AmiBlitz3.ab3@22432>   MOVE.l mempool,a0
0003180A <AmiBlitz3.ab3@22433>   JSR _FreePooled(A6)
00031810 <AmiBlitz3.ab3@22436>   MOVEA.l firstrep,A1
00031816 <AmiBlitz3.ab3@22437>   MOVE.l (A1),firstrep
00031818 <AmiBlitz3.ab3@22438>   MOVEQ.l #$08,D0
0003181E <AmiBlitz3.ab3@22439>   MOVE.l mempool,a0
00031822 <AmiBlitz3.ab3@22440> JMP _FreePooled(A6)
00031826 <AmiBlitz3.ab3@22443> iflineat:   Ds.l 1
00031828 <AmiBlitz3.ab3@22447>   MOVEQ.l #$00,D2
0003182E <AmiBlitz3.ab3@22448>   TST.b fast
00031832 <AmiBlitz3.ab3@22449>   BEQ 'l1
0003183A <AmiBlitz3.ab3@22450>   MOVE.b #1,nostringopt
00031842 <AmiBlitz3.ab3@22451>   MOVE.b #1,iniffcommand
00031844 <AmiBlitz3.ab3@22455>   MOVEQ.l #$00,D1
00031846 <AmiBlitz3.ab3@22458>   MOVE.w D1,-(A7)
0003184C <AmiBlitz3.ab3@22459>   MOVE.l destpointer,-(A7)
0003184E <AmiBlitz3.ab3@22460>   MOVE.w D2,-(A7)
00031858 <AmiBlitz3.ab3@22461>   MOVE.l linenumat,iflineat
0003185A <AmiBlitz3.ab3@22462>   MOVEQ.l #$00,D2
00031864 <AmiBlitz3.ab3@22463>   MOVE.b optistring,optistring2
0003186C <AmiBlitz3.ab3@22464>   MOVE.b #1,optistring
00031870 <AmiBlitz3.ab3@22465>   BSR.w bakevalu
0003187A <AmiBlitz3.ab3@22466>   MOVE.b optistring2,optistring
0003187E <AmiBlitz3.ab3@22467>   CMP.w #$5,D2
00031882 <AmiBlitz3.ab3@22468>    BEQ.w JL_0_D09C
00031886 <AmiBlitz3.ab3@22469>   MOVE.w thetst1(PC),D1
0003188A <AmiBlitz3.ab3@22470>   CMP.w #$1,D2
0003188E <AmiBlitz3.ab3@22471>    BEQ.w writebranchcode
00031892 <AmiBlitz3.ab3@22472>   MOVE.w thetst2(PC),D1
00031896 <AmiBlitz3.ab3@22473>   CMP.w #$2,D2
0003189A <AmiBlitz3.ab3@22474>    BEQ.w writebranchcode
0003189E <AmiBlitz3.ab3@22475>   MOVE.w thetst4(PC),D1
000318A2 <AmiBlitz3.ab3@22476>   CMP.w #$7,D2
000318A6 <AmiBlitz3.ab3@22477>    BEQ.w writebranchcode
000318AA <AmiBlitz3.ab3@22478>   MOVE.w thetst3(PC),D1
000318AE <AmiBlitz3.ab3@22479> BRA.w writebranchcode
000318B4 <AmiBlitz3.ab3@22482>   TST.b fpu
000318B8 <AmiBlitz3.ab3@22483>   BEQ 'dofpu
000318BE <AmiBlitz3.ab3@22484>   MOVE.l #$f200003a,d1
000318C2 <AmiBlitz3.ab3@22485>   BSR writelong
000318C6 <AmiBlitz3.ab3@22486>   MOVE.w #$f2c1,d1
000318CA <AmiBlitz3.ab3@22487>   BSR writeword
000318CE <AmiBlitz3.ab3@22488>   BSR writelong
000318D0 <AmiBlitz3.ab3@22489>   ADDQ.l #2,a7
000318D4 <AmiBlitz3.ab3@22490> BRA.w br2
000318D8 <AmiBlitz3.ab3@22493>    MOVE.w #$C900,D1
000318DC <AmiBlitz3.ab3@22494>    BSR.w Atokejsr
000318E0 <AmiBlitz3.ab3@22495>   MOVE.l thetst5(PC),D1
000318E4 <AmiBlitz3.ab3@22496>    BSR.w writelong
000318E8 <AmiBlitz3.ab3@22497> BRA.w JL_0_D0B4
000318EE <AmiBlitz3.ab3@22501>          CLR.b iniffcommand
000318F4 <AmiBlitz3.ab3@22502>          TST.b fast                                        ;branchcode
000318F8 <AmiBlitz3.ab3@22503>          BEQ b6
000318FE <AmiBlitz3.ab3@22504>          TST.b fpu
00031902 <AmiBlitz3.ab3@22505>          BEQ 'nofpu
00031908 <AmiBlitz3.ab3@22509>           MOVE.l destpointer,a0
0003190E <AmiBlitz3.ab3@22510>          SUB.l load_var_addr,a0
00031914 <AmiBlitz3.ab3@22511>          CMP.l #4,a0
00031918 <AmiBlitz3.ab3@22512>          BEQ 'nofpu
00031920 <AmiBlitz3.ab3@22513>          CMP.l #$f2400014,-4(a4)                           ;<
00031924 <AmiBlitz3.ab3@22514>          BNE 'nolt
0003192A <AmiBlitz3.ab3@22515>          SUBQ.l #2,destpointer
00031930 <AmiBlitz3.ab3@22516>          MOVE.w #$f293,-4(a4)                              ;
00031934 <AmiBlitz3.ab3@22517> BRA 'brf
0003193C <AmiBlitz3.ab3@22520>   CMP.l #$f2400015,-4(a4)                                  ;<=
00031940 <AmiBlitz3.ab3@22521>          BNE 'nole
00031946 <AmiBlitz3.ab3@22522>          SUBQ.l #2,destpointer
0003194C <AmiBlitz3.ab3@22523>          MOVE.w #$f292,-4(a4)
00031950 <AmiBlitz3.ab3@22524> BRA 'brf
00031958 <AmiBlitz3.ab3@22527>   CMP.l #$f2400013,-4(a4)                                  ;=>
0003195C <AmiBlitz3.ab3@22528>          BNE 'noge
00031962 <AmiBlitz3.ab3@22529>          SUBQ.l #2,destpointer
00031968 <AmiBlitz3.ab3@22530>          MOVE.w #$f294,-4(a4)
0003196C <AmiBlitz3.ab3@22531> BRA 'brf
00031974 <AmiBlitz3.ab3@22534>   CMP.l #$f2400012,-4(a4)                                  ;>
00031978 <AmiBlitz3.ab3@22535>          BNE 'nogt
0003197E <AmiBlitz3.ab3@22536>          SUBQ.l #2,destpointer
00031984 <AmiBlitz3.ab3@22537>          MOVE.w #$f295,-4(a4)
00031988 <AmiBlitz3.ab3@22538> BRA 'brf
00031990 <AmiBlitz3.ab3@22541>   CMP.l #$f2400001,-4(a4)                                  ;=
00031994 <AmiBlitz3.ab3@22542>          BNE 'noeq
0003199A <AmiBlitz3.ab3@22543>          SUBQ.l #2,destpointer
000319A0 <AmiBlitz3.ab3@22544>          MOVE.w #$f28e,-4(a4)
000319A4 <AmiBlitz3.ab3@22545> BRA 'brf
000319AC <AmiBlitz3.ab3@22548>   CMP.l #$f240000e,-4(a4)                                  ;<>
000319B0 <AmiBlitz3.ab3@22549>          BNE 'none
000319B6 <AmiBlitz3.ab3@22550>          SUBQ.l #2,destpointer
000319BC <AmiBlitz3.ab3@22551>          MOVE.w #$f281,-4(a4)
000319BE <AmiBlitz3.ab3@22554>   ADDQ.l #2,a7
000319C4 <AmiBlitz3.ab3@22556>     TST.b fast
000319C8 <AmiBlitz3.ab3@22557>     BEQ 'l1
000319CE <AmiBlitz3.ab3@22558>     OR.b #$40,-3(a4)
000319D2 <AmiBlitz3.ab3@22559>     BSR writeword
000319D6 <AmiBlitz3.ab3@22563>  BSR writeword
000319DA <AmiBlitz3.ab3@22564> BRA.s br2
000319E0 <AmiBlitz3.ab3@22568>   MOVE.l destpointer,a0
000319E6 <AmiBlitz3.ab3@22569>          SUB.l load_var_addr,a0
000319EC <AmiBlitz3.ab3@22570>          CMP.l #4,a0
000319F0 <AmiBlitz3.ab3@22571>          BEQ JL_0_D0B4
000319F6 <AmiBlitz3.ab3@22572>          CMP.w #$4eb9,-6(a4)
000319FA <AmiBlitz3.ab3@22573>          BEQ b6
00031A00 <AmiBlitz3.ab3@22574>          CMP.w #$5ec0,-2(a4)                               ;>
00031A04 <AmiBlitz3.ab3@22575>      BNE.s 'lb1
00031A0A <AmiBlitz3.ab3@22576>          MOVE.w #$6f00,-2(a4)                              ;ble
00031A0E <AmiBlitz3.ab3@22577> BRA.s br
00031A14 <AmiBlitz3.ab3@22580>  CMP.w #$5dc0,-2(a4)                                       ;<
00031A18 <AmiBlitz3.ab3@22581>   BNE.s 'lb2
00031A1E <AmiBlitz3.ab3@22582>          MOVE.w #$6c00,-2(a4)                              ;bge
00031A22 <AmiBlitz3.ab3@22583> BRA.s br
00031A28 <AmiBlitz3.ab3@22586>   CMP.w #$57c0,-2(a4)                                      ;=
00031A2C <AmiBlitz3.ab3@22587>   BNE.s 'lb3
00031A32 <AmiBlitz3.ab3@22588>          MOVE.w #$6600,-2(a4)                              ;bne
00031A36 <AmiBlitz3.ab3@22589> BRA.s br
00031A3C <AmiBlitz3.ab3@22592>   CMP.w #$56c0,-2(a4)                                      ;<>
00031A40 <AmiBlitz3.ab3@22593>   BNE.s 'lb4
00031A46 <AmiBlitz3.ab3@22594>          MOVE.w #$6700,-2(a4)                              ;beq
00031A4A <AmiBlitz3.ab3@22595> BRA.s br
00031A50 <AmiBlitz3.ab3@22598>   CMP.w #$5cc0,-2(a4)                                      ;>=
00031A54 <AmiBlitz3.ab3@22599>   BNE.s 'lb5
00031A5A <AmiBlitz3.ab3@22600>          MOVE.w #$6d00,-2(a4)                              ;blt
00031A5E <AmiBlitz3.ab3@22601> BRA.s br
00031A64 <AmiBlitz3.ab3@22604>   CMP.w #$5fc0,-2(a4)                                      ;<=
00031A68 <AmiBlitz3.ab3@22605>         BNE.s b6
00031A6E <AmiBlitz3.ab3@22606>          MOVE.w #$6e00,-2(a4)                              ;bgt
00031A70 <AmiBlitz3.ab3@22609>   TST.w (a7)+
00031A76 <AmiBlitz3.ab3@22611>         TST.b fast
00031A7A <AmiBlitz3.ab3@22612>         BEQ 'l1
00031A80 <AmiBlitz3.ab3@22613>         OR.b #$ff,-1(a4)                                   ;long branches
00031A84 <AmiBlitz3.ab3@22614>         BSR writeword
00031A88 <AmiBlitz3.ab3@22618>         BSR writeword
00031A8C <AmiBlitz3.ab3@22619> BRA.s br2
00031A90 <AmiBlitz3.ab3@22622>   BSR.w writeword
00031A94 <AmiBlitz3.ab3@22625>   MOVE.l posbr(PC),D1
00031A96 <AmiBlitz3.ab3@22626>   TST.w (A7)+
00031A9A <AmiBlitz3.ab3@22627>    BEQ.w JL_0_D0C2
00031A9E <AmiBlitz3.ab3@22628>   MOVE.l negbr(PC),D1
00031AA4 <AmiBlitz3.ab3@22631>   TST.b fast
00031AA8 <AmiBlitz3.ab3@22632>            BEQ 'l1
00031AAE <AmiBlitz3.ab3@22633>            OR.l #$00ff0000,d1
00031AB2 <AmiBlitz3.ab3@22634>            BSR writelong
00031AB6 <AmiBlitz3.ab3@22635>            BSR writeword
00031ABA <AmiBlitz3.ab3@22636> BRA br2
00031ABE <AmiBlitz3.ab3@22639>   BSR.w writelong
00031AC0 <AmiBlitz3.ab3@22642>  MOVEQ.l #$0E,D0
00031AC2 <AmiBlitz3.ab3@22643>   MOVEQ.l #$01,D1
00031AC8 <AmiBlitz3.ab3@22644>   MOVEA.l _execbase,A6
00031ACE <AmiBlitz3.ab3@22646>   MOVE.l mempool,a0
00031AD2 <AmiBlitz3.ab3@22647>   JSR _AllocPooled(a6)
00031AD4 <AmiBlitz3.ab3@22648>   MOVEA.l D0,A0
00031ADA <AmiBlitz3.ab3@22649>   MOVE.l firstiff,(A0)
00031AE0 <AmiBlitz3.ab3@22650>   MOVE.l A0,firstiff
00031AE4 <AmiBlitz3.ab3@22651>   MOVE.l (A7)+,$4(A0)
00031AEC <AmiBlitz3.ab3@22652>   MOVE.l destpointer,$8(A0)
00031AF0 <AmiBlitz3.ab3@22653>   MOVE.w (A7)+,$C(A0)
00031AF6 <AmiBlitz3.ab3@22654>    JSR reget
00031AFA <AmiBlitz3.ab3@22655>    BEQ.w JL_0_D10C
00031B00 <AmiBlitz3.ab3@22656>   BSET #$7,$C(A0)
00031B0A <AmiBlitz3.ab3@22660>   MOVE.w oldqflag,instringon
00031B10 <AmiBlitz3.ab3@22661>   MOVEA.l lastsourcepos,A5
00031B18 <AmiBlitz3.ab3@22662>   MOVE.w #$003A,lastchar
00031B1A <AmiBlitz3.ab3@22665> RTS
00031B1E <AmiBlitz3.ab3@22669>   CMP.w #$1,D0
00031B22 <AmiBlitz3.ab3@22670>    BLT.w JL_0_D128
00031B26 <AmiBlitz3.ab3@22671>   CMP.w #$0,D0
00031B2A <AmiBlitz3.ab3@22672>    BGT.w JL_0_D128
00031B2C <AmiBlitz3.ab3@22673>   ADD.w D0,D0
00031B2E <AmiBlitz3.ab3@22674>   ADD.w D0,D0
00031B32 <AmiBlitz3.ab3@22675>   MOVEA.l JL_0_D128(PC,D0.W),A0
00031B34 <AmiBlitz3.ab3@22678> JMP (A0)
00031B38 <AmiBlitz3.ab3@22681> BRA.w JL_0_D128
00031B3C <AmiBlitz3.ab3@22685>   CMP.w #$1,D0
00031B40 <AmiBlitz3.ab3@22686>    BLT.w JL_0_D146
00031B44 <AmiBlitz3.ab3@22687>   CMP.w #$0,D0
00031B48 <AmiBlitz3.ab3@22688>    BGT.w JL_0_D146
00031B4A <AmiBlitz3.ab3@22689>   ADD.w D0,D0
00031B4C <AmiBlitz3.ab3@22690>   ADD.w D0,D0
00031B50 <AmiBlitz3.ab3@22691>   MOVEA.l JL_0_D146(PC,D0.W),A0
00031B52 <AmiBlitz3.ab3@22694>   JSR (A0)
00031B56 <AmiBlitz3.ab3@22697> BRA.w JL_0_D146
00031B5A <AmiBlitz3.ab3@22701>   CMP.w #$1,D0
00031B5E <AmiBlitz3.ab3@22702>    BLT.w JL_0_D168
00031B62 <AmiBlitz3.ab3@22703>   CMP.w #$0,D0
00031B66 <AmiBlitz3.ab3@22704>    BGT.w JL_0_D168
00031B68 <AmiBlitz3.ab3@22705>   ADD.w D0,D0
00031B6A <AmiBlitz3.ab3@22706>   ADD.w D0,D0
00031B6E <AmiBlitz3.ab3@22707>   MOVEA.l JL_0_D168(PC,D0.W),A0
00031B72 <AmiBlitz3.ab3@22710>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00031B74 <AmiBlitz3.ab3@22713>    JSR (A0)
00031B78 <AmiBlitz3.ab3@22716> BRA.w JL_0_D168
00031B7A <AmiBlitz3.ab3@22719> labcnt:   Ds.w 1
00031B7C <AmiBlitz3.ab3@22726>   MOVEQ.l #$02,D2
00031B80 <AmiBlitz3.ab3@22727>    BSR.w bakeval
00031B84 <AmiBlitz3.ab3@22728>   LEA JL_0_D10E(PC),A0
00031B88 <AmiBlitz3.ab3@22729>   LEA JL_0_D12C(PC),A1
00031B8C <AmiBlitz3.ab3@22730>   MOVE.w #$001A,D1
00031B90 <AmiBlitz3.ab3@22731>   CMP.w #-$7FFB,D0
00031B94 <AmiBlitz3.ab3@22732>    BEQ.w JL_0_D1B6
00031B98 <AmiBlitz3.ab3@22733>   CMP.w #-$7FFA,D0
00031B9C <AmiBlitz3.ab3@22734>    BNE.w JUMP_syntaxerr
00031BA0 <AmiBlitz3.ab3@22735>   LEA JL_0_D12C(PC),A0
00031BA4 <AmiBlitz3.ab3@22736>   LEA JL_0_D14A(PC),A1
00031BA8 <AmiBlitz3.ab3@22737>   MOVE.w #$001A,D1
00031BAE <AmiBlitz3.ab3@22738>   TST.b debugmode
00031BB2 <AmiBlitz3.ab3@22739>    BEQ.b JL_0_D1B6
00031BB8 <AmiBlitz3.ab3@22740>    JSR chkstak
00031BBC <AmiBlitz3.ab3@22741>   LEA JL_0_D14A(PC),A0
00031BC0 <AmiBlitz3.ab3@22742>   LEA labcnt(PC),A1
00031BC4 <AmiBlitz3.ab3@22743>   MOVE.w #$001E,D1
00031BC6 <AmiBlitz3.ab3@22746>   MOVE.w D1,-(A7)
00031BCC <AmiBlitz3.ab3@22747>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00031BD0 <AmiBlitz3.ab3@22748>    BSR.w pokecode
00031BD6 <AmiBlitz3.ab3@22749>   CLR.w labcnt
00031BDC <AmiBlitz3.ab3@22754>    JSR get1bytemain
00031BE2 <AmiBlitz3.ab3@22755>   SUBQ.l #2,destpointer                                    ;for makealab!
00031BE6 <AmiBlitz3.ab3@22756>    BSR.w JL_0_AE22
00031BEC <AmiBlitz3.ab3@22757>   ADDQ.l #2,destpointer
00031BF2 <AmiBlitz3.ab3@22758>    JSR addoff
00031BF6 <AmiBlitz3.ab3@22759>   MOVE.l $8(A2),D1
00031BFA <AmiBlitz3.ab3@22760>    BSR.w writelong
00031C00 <AmiBlitz3.ab3@22761>   ADDQ.w #1,labcnt
00031C06 <AmiBlitz3.ab3@22762>    JSR reget
00031C0A <AmiBlitz3.ab3@22763>   CMP.w #$2C,D0
00031C0E <AmiBlitz3.ab3@22764>    BEQ.w JL_0_D1C8
00031C10 <AmiBlitz3.ab3@22765>   MOVEA.l (A7)+,A0
00031C12 <AmiBlitz3.ab3@22766>   MOVE.w (A7)+,D2
00031C18 <AmiBlitz3.ab3@22767>   MOVE.w dontwrite,D1
00031C1C <AmiBlitz3.ab3@22768>    BNE.w JL_0_D21A
00031C20 <AmiBlitz3.ab3@22769>   MOVE.w labcnt(PC),D1
00031C24 <AmiBlitz3.ab3@22770>   MOVE.w D1,$A(A0)
00031C26 <AmiBlitz3.ab3@22771>   ADD.w D1,D1
00031C28 <AmiBlitz3.ab3@22772>   ADD.w D1,D1
00031C2A <AmiBlitz3.ab3@22773>   ADDQ.w #2,D1
00031C2E <AmiBlitz3.ab3@22774>   MOVE.w D1,$2(A0,D2.W)
00031C30 <AmiBlitz3.ab3@22777> RTS
00031C36 <AmiBlitz3.ab3@22781>   TST.b debugmode
00031C3A <AmiBlitz3.ab3@22782>    BEQ.w JL_0_D236
00031C40 <AmiBlitz3.ab3@22783>    JSR chkstak
00031C46 <AmiBlitz3.ab3@22784>   MOVE.l AL_0_D162,D1
00031C4A <AmiBlitz3.ab3@22785>    BSR.w writelong
00031C50 <AmiBlitz3.ab3@22787>   MOVE.w gosubcode,D1
00031C54 <AmiBlitz3.ab3@22788> BRA.w JL_0_D246
00031C5A <AmiBlitz3.ab3@22792>   MOVE.w gotocode,D1
00031C5C <AmiBlitz3.ab3@22795>   MOVE.w D1,-(A7)
00031C60 <AmiBlitz3.ab3@22796>    BSR.w JL_0_AE22
00031C62 <AmiBlitz3.ab3@22797>   MOVE.w (A7)+,D1
00031C66 <AmiBlitz3.ab3@22798>    BSR.w writeword
00031C6C <AmiBlitz3.ab3@22799>    JSR addoff
00031C70 <AmiBlitz3.ab3@22800>   MOVE.l $8(A2),D1
00031C74 <AmiBlitz3.ab3@22801> BRA.w writelong
00031C7A <AmiBlitz3.ab3@22805>   MOVE.w proceduremode,D1
00031C7E <AmiBlitz3.ab3@22806>    BEQ.w JUMP_badpenderr
00031C82 <AmiBlitz3.ab3@22807>   MOVE.w #$4EF9,D1
00031C86 <AmiBlitz3.ab3@22808>    BSR.w writeword
00031C8C <AmiBlitz3.ab3@22809>    JSR addoff
00031C92 <AmiBlitz3.ab3@22810>   MOVEA.l _execbase,A6
00031C94 <AmiBlitz3.ab3@22811>   MOVEQ.l #$08,D0
00031C96 <AmiBlitz3.ab3@22812>   MOVEQ.l #$01,D1
00031C9C <AmiBlitz3.ab3@22814>   MOVE.l mempool,a0
00031CA0 <AmiBlitz3.ab3@22815>   JSR _AllocPooled(a6)
00031CA2 <AmiBlitz3.ab3@22816>   MOVEA.l D0,A0
00031CA8 <AmiBlitz3.ab3@22817>   MOVE.l firstpend,(A0)
00031CAE <AmiBlitz3.ab3@22818>   MOVE.l A0,firstpend
00031CB6 <AmiBlitz3.ab3@22819>   MOVE.l destpointer,$4(A0)
00031CBA <AmiBlitz3.ab3@22820> BRA.w writelong
00031CBE <AmiBlitz3.ab3@22824>   BSR.w do_AsmExit
00031CC4 <AmiBlitz3.ab3@22825> JMP get1bytemain
00031CCC <AmiBlitz3.ab3@22829>   MOVE.b #1,nostringopt
00031CD0 <AmiBlitz3.ab3@22830>   MOVEM.l a0/a1/d1,-(a7)
00031CD6 <AmiBlitz3.ab3@22831>   MOVEA.l currentfunction,A0
00031CDC <AmiBlitz3.ab3@22832>     CMP.l #0,a0
00031CE0 <AmiBlitz3.ab3@22833>     BNE 'l1
00031CE6 <AmiBlitz3.ab3@22834>     JMP errorasmexit
00031CE8 <AmiBlitz3.ab3@22835> 'l1 MOVEQ.l #$00,D2
00031CEC <AmiBlitz3.ab3@22836>   MOVE.b $5(A0),D2
00031CF0 <AmiBlitz3.ab3@22837>   BSR.w eval
00031CF6 <AmiBlitz3.ab3@22839>   MOVEA.l currentfunction,A0
00031CFA <AmiBlitz3.ab3@22840>   MOVE.l funcstruct_returntype(a0),a0
00031D00 <AmiBlitz3.ab3@22841>   CMP.l #0,a0
00031D04 <AmiBlitz3.ab3@22842>   BEQ 'isstatement
00031D0C <AmiBlitz3.ab3@22843>   CMP.l #$100,4(a0)
00031D10 <AmiBlitz3.ab3@22844>   BLT.w 'isvar
00031D12 <AmiBlitz3.ab3@22845>   MOVE.l a2,a1
00031D18 <AmiBlitz3.ab3@22846>   TST.l typetocast
00031D1C <AmiBlitz3.ab3@22847>   BEQ 'nocast
00031D22 <AmiBlitz3.ab3@22848>   MOVE.l typetocast,a1
00031D24 <AmiBlitz3.ab3@22849> 'nocast  CMP.l a0,a1
00031D28 <AmiBlitz3.ab3@22850>   BEQ 'ok
00031D2E <AmiBlitz3.ab3@22851>   CLR.l typetocast
00031D34 <AmiBlitz3.ab3@22852>   MOVE.l lasttoken,d1
00031D38 <AmiBlitz3.ab3@22853>   CMP.w #$b581,d1                   ; ok, when token for null
00031D3C <AmiBlitz3.ab3@22854>   BEQ 'isnull
00031D42 <AmiBlitz3.ab3@22855> 'error  JMP errorconvertreturntype
00031D46 <AmiBlitz3.ab3@22862>   MOVEM.l (a7)+,a0/a1/d1
00031D4A <AmiBlitz3.ab3@22863> BRA.w do_AsmExit
00031D50 <AmiBlitz3.ab3@22865> error_convert_types2 JMP error_convert_types
00031D56 <AmiBlitz3.ab3@22878>   TST.b debugmode
00031D5A <AmiBlitz3.ab3@22879>    BEQ.w JL_0_D2CA
00031D5E <AmiBlitz3.ab3@22880>   MOVE.w #$C305,D1
00031D62 <AmiBlitz3.ab3@22881> BRA.w Atokejsr
00031D66 <AmiBlitz3.ab3@22884>   MOVE.w #$4E75,D1
00031D6A <AmiBlitz3.ab3@22885> BRA.w writeword
00031D6E <AmiBlitz3.ab3@22888> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00031D72 <AmiBlitz3.ab3@22889> proclocals:  Ds.l 1                                        ;for debugga!
00031D74 <AmiBlitz3.ab3@22890> procnum:     Ds.w 1
00031D76 <AmiBlitz3.ab3@22891> procnum2:    Ds.w 1
00031D7A <AmiBlitz3.ab3@22892> prolineat:   Ds.l 1
00031D80 <AmiBlitz3.ab3@22896>    TST.w proceduremode
00031D84 <AmiBlitz3.ab3@22897>    BGT JUMP_sreterr
00031D88 <AmiBlitz3.ab3@22898>    CMP.w #-$7FF9,D0
00031D8C <AmiBlitz3.ab3@22899>    BEQ.w JL_0_D29C
00031D8E <AmiBlitz3.ab3@22900>    MOVEQ.l #-$01,D1
00031D92 <AmiBlitz3.ab3@22901> BRA.w do_function2
00031D98 <AmiBlitz3.ab3@22904> JMP sreterr
00031D9E <AmiBlitz3.ab3@22908>   CLR.b skipfunc
00031DA4 <AmiBlitz3.ab3@22909>   TST.l unusedfunc
00031DA8 <AmiBlitz3.ab3@22910>   BEQ 'ex
00031DAC <AmiBlitz3.ab3@22911>   MOVEM.l d0-d7/a0-a6,-(a7)
00031DB2 <AmiBlitz3.ab3@22912>   MOVE.l unusedfunc,d1
00031DB8 <AmiBlitz3.ab3@22913>   LEA ptr_parameterstore,a5
00031DBA <AmiBlitz3.ab3@22916>   MOVE.l d1,a0
00031DBE <AmiBlitz3.ab3@22917>   LEA 12(a0),a2
00031DC0 <AmiBlitz3.ab3@22918>   MOVE.l a5,a1
00031DC2 <AmiBlitz3.ab3@22920>   CMPM.b (a1)+,(a2)+
00031DC6 <AmiBlitz3.ab3@22921>   BNE 'neq
00031DC8 <AmiBlitz3.ab3@22922>   TST.b (a2)
00031DCC <AmiBlitz3.ab3@22923>   BNE 'ch
00031DCE <AmiBlitz3.ab3@22924>   TST.b (a1)
00031DD2 <AmiBlitz3.ab3@22925>   BNE 'neq
00031DDA <AmiBlitz3.ab3@22926>   MOVE.b #1,skipfunc
00031DDE <AmiBlitz3.ab3@22927> BRA 'out
00031DE0 <AmiBlitz3.ab3@22930>   MOVE.l (a0),d1
00031DE4 <AmiBlitz3.ab3@22931>   BNE 'ag
00031DE8 <AmiBlitz3.ab3@22934>   MOVEM.l (a7)+,d0-d7/a0-a6
00031DEA <AmiBlitz3.ab3@22937> RTS
00031DF0 <AmiBlitz3.ab3@22941> JMP dupprocerr
00031DF6 <AmiBlitz3.ab3@22944> JMP illprocperr
00031DFE <AmiBlitz3.ab3@22951>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00031E02 <AmiBlitz3.ab3@22952>    BEQ JUMP_sreterr
00031E06 <AmiBlitz3.ab3@22953>   CMP.w #-$7FF9,D0
00031E0A <AmiBlitz3.ab3@22954>    BEQ.w do_function_return
00031E14 <AmiBlitz3.ab3@22957>   MOVE.w oldqflag,instringon
00031E1A <AmiBlitz3.ab3@22958>   MOVEA.l lastsourcepos,A5
00031E20 <AmiBlitz3.ab3@22959>   JSR getfunctionreturntype
00031E26 <AmiBlitz3.ab3@22960>   JSR get1bytemain
00031E2C <AmiBlitz3.ab3@22963>   TST.b declare
00031E30 <AmiBlitz3.ab3@22964>   BEQ 'l1
00031E38 <AmiBlitz3.ab3@22965>   MOVE.b #1,nowdeclare
00031E3E <AmiBlitz3.ab3@22968>   JSR errchx                                           ;writejumpoverfunction
00031E44 <AmiBlitz3.ab3@22971>   CLR.b fastfunc
00031E4E <AmiBlitz3.ab3@22972>   MOVE.l firstiff,firstiffstore
00031E56 <AmiBlitz3.ab3@22973>   CMP.l #"FAST",-1(a5)
00031E5A <AmiBlitz3.ab3@22974>   BNE 'nofast
00031E60 <AmiBlitz3.ab3@22975>   CMP.b #" ",3(a5)
00031E64 <AmiBlitz3.ab3@22976>   BNE 'nofast
00031E66 <AmiBlitz3.ab3@22977>   ADDQ.l #3,a5
00031E6A <AmiBlitz3.ab3@22980>     CMP.b #" ",(a5)
00031E6E <AmiBlitz3.ab3@22981>      BNE 'x1
00031E70 <AmiBlitz3.ab3@22982>     ADDQ #1,a5
00031E74 <AmiBlitz3.ab3@22983> BRA 'x2
00031E7A <AmiBlitz3.ab3@22986>   MOVE.l a5,lastsourcepos
00031E82 <AmiBlitz3.ab3@22987>   MOVE.b #1,fastfunc
00031E8A <AmiBlitz3.ab3@22990>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00031E8E <AmiBlitz3.ab3@22991> BRA 'noopt
00031E94 <AmiBlitz3.ab3@22993>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00031E98 <AmiBlitz3.ab3@22994>   BNE 'noopt
00031E9A <AmiBlitz3.ab3@22995>   ADDQ.l #4,a5
00031E9E <AmiBlitz3.ab3@22998>     CMP.b #" ",(a5)
00031EA2 <AmiBlitz3.ab3@22999>      BNE 'x1b
00031EA4 <AmiBlitz3.ab3@23000>     ADDQ #1,a5
00031EA8 <AmiBlitz3.ab3@23001> BRA 'x2b
00031EAE <AmiBlitz3.ab3@23004>   MOVE.l a5,lastsourcepos
00031EB4 <AmiBlitz3.ab3@23006>   JSR makename2
00031EB8 <AmiBlitz3.ab3@23007> BRA 'l1
00031EBE <AmiBlitz3.ab3@23011>   JSR makename2
00031EC4 <AmiBlitz3.ab3@23012>   JSR checkused
00031ECA <AmiBlitz3.ab3@23013>   TST.b skipfunc
00031ECE <AmiBlitz3.ab3@23014>    BEQ 'l1
00031ED4 <AmiBlitz3.ab3@23015>   JSR skipme
00031EDA <AmiBlitz3.ab3@23016>   CLR.b fastfunc
00031EDC <AmiBlitz3.ab3@23017> RTS
00031EE6 <AmiBlitz3.ab3@23020>   MOVE.l linenumat,prolineat
00031EEC <AmiBlitz3.ab3@23021>   ADDQ.w #1,procnum2
00031EF4 <AmiBlitz3.ab3@23022>   MOVE.w procnum2(PC),procnum
00031EFA <AmiBlitz3.ab3@23023>   MOVE.w D1,proceduremode
00031F00 <AmiBlitz3.ab3@23024>   CLR.w locvaroff
00031F04 <AmiBlitz3.ab3@23025>   CMP.w #$7B,D0
00031F08 <AmiBlitz3.ab3@23026>    BNE.w JUMP_syntaxerr
00031F10 <AmiBlitz3.ab3@23027>    MOVE.b #1,infunctioncode
00031F16 <AmiBlitz3.ab3@23028>   MOVEA.l tempvm,A0
00031F1E <AmiBlitz3.ab3@23029>   MOVE.w $C(A0),memlibstat
00031F24 <AmiBlitz3.ab3@23030>   BCLR #$7,$C(A0)                                          ;Bit out of range
00031F28 <AmiBlitz3.ab3@23031>   MOVE.w #$4EF9,D1
00031F2C <AmiBlitz3.ab3@23032>    BSR.w writeword
00031F32 <AmiBlitz3.ab3@23033>    JSR addoff
00031F36 <AmiBlitz3.ab3@23034>    BSR.w writelong
00031F3C <AmiBlitz3.ab3@23035>    JSR findproc                                          ;findproc function
00031F40 <AmiBlitz3.ab3@23036>    BEQ.w JUMP_dupprocerr
00031F46 <AmiBlitz3.ab3@23037>    JSR addlabel
00031F4C <AmiBlitz3.ab3@23038>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00031F52 <AmiBlitz3.ab3@23039>    MOVE.b #0,isfunc(a2)
00031F5A <AmiBlitz3.ab3@23040>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00031F62 <AmiBlitz3.ab3@23041>   MOVE.l destpointer,$E(A2)
00031F68 <AmiBlitz3.ab3@23042>   MOVE.l A2,currentfunction
00031F6E <AmiBlitz3.ab3@23043>   LEA nops8,A0
00031F74 <AmiBlitz3.ab3@23044>   LEA dataget,A1
00031F78 <AmiBlitz3.ab3@23045>    BSR.w pokecode2
00031F7E <AmiBlitz3.ab3@23046>   TST.b debugmode
00031F82 <AmiBlitz3.ab3@23047>    BEQ.b JL_0_D3AA
00031F84 <AmiBlitz3.ab3@23048>   MOVEQ.l #$04,D1
00031F8A <AmiBlitz3.ab3@23049>    JSR writetrap
00031F94 <AmiBlitz3.ab3@23050>   MOVE.l destpointer,proclocals
00031F98 <AmiBlitz3.ab3@23051>    BSR.w writelong
00031F9C <AmiBlitz3.ab3@23052>    BSR.w writelong
00031FA0 <AmiBlitz3.ab3@23055>    LEA $16(A2),A4
00031FA8 <AmiBlitz3.ab3@23056>   MOVE.b proceduremode+1,$5(A2)
00031FAA <AmiBlitz3.ab3@23057>   MOVEQ.l #$00,D6
00031FAC <AmiBlitz3.ab3@23058>   MOVEQ.l #$00,D5
00031FB2 <AmiBlitz3.ab3@23059>    JSR get1bytemain
00031FB6 <AmiBlitz3.ab3@23060>   CMP.w #$7D,D0
00031FBA <AmiBlitz3.ab3@23061>    BEQ.w JL_0_D466
00031FBE <AmiBlitz3.ab3@23064>    CMP.b #"@",d0
00031FC2 <AmiBlitz3.ab3@23065>    BNE 'l2
00031FC4 <AmiBlitz3.ab3@23066>    MOVE.l a0,-(a7)
00031FCA <AmiBlitz3.ab3@23067>    MOVE.l currentfunction,a0
00031FD0 <AmiBlitz3.ab3@23068>    CMP.b #31,$20(a0)                                       ;increase if morepars
00031FD4 <AmiBlitz3.ab3@23069>    BNE 'l1
00031FD8 <AmiBlitz3.ab3@23070>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00031FDE <AmiBlitz3.ab3@23073>    JSR get1bytemain
00031FE0 <AmiBlitz3.ab3@23074>    MOVE.l (a7)+,a0
00031FE4 <AmiBlitz3.ab3@23077>    BSR.w getparameter
00031FE8 <AmiBlitz3.ab3@23078>    BSR.w JL_0_8E3C
00031FF0 <AmiBlitz3.ab3@23079>   CMPI.l #$7,$4(A2)
00031FF4 <AmiBlitz3.ab3@23080>    BNE.w JL_0_D3F6
00031FFA <AmiBlitz3.ab3@23081>   LEA stbuff,A0
00031FFC <AmiBlitz3.ab3@23082>   MOVE.w D5,D1
00031FFE <AmiBlitz3.ab3@23083>   LSL.w #2,D1
00032002 <AmiBlitz3.ab3@23084>   MOVE.w D6,$0(A0,D1.W)
00032008 <AmiBlitz3.ab3@23085>   MOVE.w $4(A3),$2(A0,D1.W)
0003200A <AmiBlitz3.ab3@23086>   ADDQ.w #1,D5
0003200C <AmiBlitz3.ab3@23087>   MOVEQ.l #$07,D2
00032010 <AmiBlitz3.ab3@23088> BRA.w JL_0_D442
00032016 <AmiBlitz3.ab3@23091> JMP toovarerr
0003201A <AmiBlitz3.ab3@23094>   MOVE.w #$2940,D1
0003201C <AmiBlitz3.ab3@23095>   MOVEQ.l #$03,D2
00032024 <AmiBlitz3.ab3@23096>   BTST #$0,flagmask+1
00032028 <AmiBlitz3.ab3@23097>    BNE.w JL_0_D430
00032030 <AmiBlitz3.ab3@23098>   CMPI.l #$100,$4(A2)
00032034 <AmiBlitz3.ab3@23099>    BCC.w JUMP_illprocperr
00032038 <AmiBlitz3.ab3@23100>   MOVE.w $6(A2),D2
0003203C <AmiBlitz3.ab3@23101>   CMP.w #$2,D2
00032040 <AmiBlitz3.ab3@23102>    BHI.w JL_0_D430
00032044 <AmiBlitz3.ab3@23103>    BEQ.w JL_0_D42C
00032048 <AmiBlitz3.ab3@23104>   EORI.w #$3000,D1
0003204C <AmiBlitz3.ab3@23105> BRA.w JL_0_D430
00032052 <AmiBlitz3.ab3@23108> JMP more6pard
00032056 <AmiBlitz3.ab3@23111>   ORI.w #$1000,D1
00032058 <AmiBlitz3.ab3@23114>   OR.w D6,D1
0003205E <AmiBlitz3.ab3@23115>   TST.b fpu
00032062 <AmiBlitz3.ab3@23116>   BEQ 'nofpu
00032066 <AmiBlitz3.ab3@23117>   CMP.b #5,d2
0003206A <AmiBlitz3.ab3@23118>   BNE 'nofpu
0003206E <AmiBlitz3.ab3@23119>   CMP.w #6,d6
00032072 <AmiBlitz3.ab3@23120>   BLT 'l10a
00032078 <AmiBlitz3.ab3@23121>   CMP.l #newtype_double,a2
0003207C <AmiBlitz3.ab3@23122>   BEQ JUMP_more6pard
00032080 <AmiBlitz3.ab3@23123> BRA 'nofpu
00032086 <AmiBlitz3.ab3@23126>   MOVE.l #$f22c6400,d1
0003208A <AmiBlitz3.ab3@23127>   MOVEM.l d0/a4,-(a7)
0003208C <AmiBlitz3.ab3@23128>   MOVE.l d6,d0
0003208E <AmiBlitz3.ab3@23129>   ASL.l #7,d0
00032090 <AmiBlitz3.ab3@23130>   OR.w d0,d1
00032096 <AmiBlitz3.ab3@23131>   CMP.l #newtype_double,a2
0003209A <AmiBlitz3.ab3@23132>   BNE 'l1
000320A0 <AmiBlitz3.ab3@23133>   OR.l #$1000,d1
000320A4 <AmiBlitz3.ab3@23136>   BSR writelong
000320A8 <AmiBlitz3.ab3@23137>   MOVE.w 4(a3),d1
000320AC <AmiBlitz3.ab3@23138>   BSR writeword
000320B0 <AmiBlitz3.ab3@23139>   MOVEM.l (a7)+,a4/d0
000320B4 <AmiBlitz3.ab3@23140> BRA JL_0_D442
000320B6 <AmiBlitz3.ab3@23143>   MOVE.l A4,-(A7)
000320BA <AmiBlitz3.ab3@23144>    CMP.w #6,d6
000320BE <AmiBlitz3.ab3@23145>    BLT 'l10
000320C2 <AmiBlitz3.ab3@23146>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
000320C4 <AmiBlitz3.ab3@23147>    ADD.w d6,d1
000320CA <AmiBlitz3.ab3@23148>    JSR Atokejsr
000320D0 <AmiBlitz3.ab3@23149>    TST.w dontwrite
000320D4 <AmiBlitz3.ab3@23150>    BNE 'l10
000320DA <AmiBlitz3.ab3@23151>    MOVE.l data1start,d1
000320E0 <AmiBlitz3.ab3@23152>    MOVE.l destpointer,a4
000320E4 <AmiBlitz3.ab3@23153>    ADD.l d1,-6(a4)
000320EA <AmiBlitz3.ab3@23154>    MOVE.l destpointer,d1
000320EC <AmiBlitz3.ab3@23155>    SUBQ.l #6,d1
000320F2 <AmiBlitz3.ab3@23156>    SUB.l destbufferstart,d1
000320F4 <AmiBlitz3.ab3@23158>    MOVE.l d2,-(a7)
000320F6 <AmiBlitz3.ab3@23159>    MOVE.l d1,d2
000320FC <AmiBlitz3.ab3@23160>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000320FE <AmiBlitz3.ab3@23161>    MOVE.l (a7)+,d2
00032104 <AmiBlitz3.ab3@23162>    MOVE.l destpointer,a4
00032108 <AmiBlitz3.ab3@23163>    CMP.w #2,d2
0003210C <AmiBlitz3.ab3@23164>    BNE 'nw1
00032112 <AmiBlitz3.ab3@23166>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003211A <AmiBlitz3.ab3@23167>    ADD.l #2,-6(a4)
0003211E <AmiBlitz3.ab3@23170>    CMP.w #1,d2
00032122 <AmiBlitz3.ab3@23171>    BNE 'nb
00032128 <AmiBlitz3.ab3@23172>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032130 <AmiBlitz3.ab3@23173>    ADD.l #3,-6(a4)
00032136 <AmiBlitz3.ab3@23176>    MOVE.w $4(a3),-2(a4)
0003213A <AmiBlitz3.ab3@23177> BRA 'ne1
0003213E <AmiBlitz3.ab3@23180>   BSR.w writeword                                          ;write storeparameter
00032142 <AmiBlitz3.ab3@23183>   MOVE.w $4(A3),D1
00032146 <AmiBlitz3.ab3@23184>    BSR.w writeword
00032148 <AmiBlitz3.ab3@23187>   MOVEA.l (A7)+,A4
0003214E <AmiBlitz3.ab3@23190>   CLR.l functionreturntype
00032150 <AmiBlitz3.ab3@23191>   ADDQ.w #1,D6
00032154 <AmiBlitz3.ab3@23192>   CMP.w #11,D6                                             ;max function parameters
00032158 <AmiBlitz3.ab3@23193>    BCC.w JUMP_toovarerr
0003215E <AmiBlitz3.ab3@23194>   MOVE.l currentfunction,a0
00032162 <AmiBlitz3.ab3@23195>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032164 <AmiBlitz3.ab3@23196>   MOVE.b D2,(A4)+
00032168 <AmiBlitz3.ab3@23197>   CMP.w #$2C,D0
0003216C <AmiBlitz3.ab3@23198>    BNE.w JL_0_D45E
00032172 <AmiBlitz3.ab3@23199>    JSR get1bytemain
00032176 <AmiBlitz3.ab3@23211> BRA.w JL_0_D3C6
0003217A <AmiBlitz3.ab3@23214>   CMP.w #$7D,D0
0003217E <AmiBlitz3.ab3@23215>    BNE.w JUMP_syntaxerr
00032184 <AmiBlitz3.ab3@23218>   MOVEA.l currentfunction,A2
00032186 <AmiBlitz3.ab3@23219>   LSL.w #4,D5
00032188 <AmiBlitz3.ab3@23220>   OR.w D5,D6
0003218C <AmiBlitz3.ab3@23221>   MOVE.b D6,$4(A2)
0003218E <AmiBlitz3.ab3@23222>   LSR.w #4,D6
00032192 <AmiBlitz3.ab3@23223>    BEQ.w JL_0_D4C4
00032198 <AmiBlitz3.ab3@23224>   LEA stbuff,A0
0003219A <AmiBlitz3.ab3@23225>   SUBQ.w #1,D6
0003219C <AmiBlitz3.ab3@23228>     MOVE.w D6,D1                                           ;function stringpars
0003219E <AmiBlitz3.ab3@23229>     LSL.w #2,D1                                            ;stringsize was 2
000321A0 <AmiBlitz3.ab3@23231>       LSL.w #1,d1
000321A2 <AmiBlitz3.ab3@23232>       ADDQ.w #4,d1
000321A4 <AmiBlitz3.ab3@23234>     ADDQ.w #8,D1
000321AA <AmiBlitz3.ab3@23235>     MOVE.w D1,funcst+2
000321B0 <AmiBlitz3.ab3@23236>     MOVE.l funcst,D1
000321B4 <AmiBlitz3.ab3@23237>     BSR.w writelong
000321B6 <AmiBlitz3.ab3@23238>     MOVE.w (A0)+,D1
000321BA <AmiBlitz3.ab3@23239>     CMP.b #5,d1
000321BE <AmiBlitz3.ab3@23240>     BLE 's1
000321C2 <AmiBlitz3.ab3@23241>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
000321C6 <AmiBlitz3.ab3@23242>     BSR writeinstruction
000321C8 <AmiBlitz3.ab3@23243>     MOVE.w D6,D1                                           ;function stringpars
000321CA <AmiBlitz3.ab3@23244>     LSL.w #2,D1                                            ;stringsize was 2
000321CC <AmiBlitz3.ab3@23246>       LSL.w #1,d1
000321CE <AmiBlitz3.ab3@23248>     ADDQ.w #8,D1
000321D2 <AmiBlitz3.ab3@23249>     BSR writeword
000321D6 <AmiBlitz3.ab3@23250>   BRA 's2
000321DC <AmiBlitz3.ab3@23253>     OR.w movedna3,D1
000321E0 <AmiBlitz3.ab3@23254>      BSR.w writeword
000321E6 <AmiBlitz3.ab3@23257>     MOVE.w (A0)+,least+2
000321EC <AmiBlitz3.ab3@23258>     MOVE.l least,D1
000321F0 <AmiBlitz3.ab3@23259>      BSR.w writelong
000321F2 <AmiBlitz3.ab3@23260>     MOVE.l A0,-(A7)
000321F6 <AmiBlitz3.ab3@23261>     MOVE.w #$C700,D1
000321FA <AmiBlitz3.ab3@23262>      BSR.w Atokejsr
000321FC <AmiBlitz3.ab3@23263>     MOVEA.l (A7)+,A0
00032200 <AmiBlitz3.ab3@23264>   DBF D6,JL_0_D482
00032206 <AmiBlitz3.ab3@23267> JMP get1bytemain
0003220C <AmiBlitz3.ab3@23271>   MOVE.w dontwrite,D1
00032210 <AmiBlitz3.ab3@23272>    BNE.w JL_0_D4F6
00032216 <AmiBlitz3.ab3@23273>   MOVE.l destpointer,-(A7)
0003221C <AmiBlitz3.ab3@23274>   MOVE.l A0,destpointer
00032222 <AmiBlitz3.ab3@23275>   MOVE.l linksize,D1
00032226 <AmiBlitz3.ab3@23276>    BSR.w writelong                                         ;writefunctions jumppos
0003222C <AmiBlitz3.ab3@23277>    TST.b fastfunc
00032230 <AmiBlitz3.ab3@23278>    BNE 'skip
00032234 <AmiBlitz3.ab3@23279>   MOVE.w #$CC00,D1
00032238 <AmiBlitz3.ab3@23280>    BSR.w tokejsr2                                          ;write clearvars
0003223E <AmiBlitz3.ab3@23283>   MOVE.l (A7)+,destpointer
00032240 <AmiBlitz3.ab3@23286> RTS
00032246 <AmiBlitz3.ab3@23290>   MOVEA.l currentfunction,A2
0003224A <AmiBlitz3.ab3@23291>   MOVEA.l $E(A2),A0
0003224E <AmiBlitz3.ab3@23292>   MOVE.w $6(A2),D1
00032252 <AmiBlitz3.ab3@23293>    BEQ.w JL_0_D538
00032258 <AmiBlitz3.ab3@23294>   MOVE.w D1,linksize+2
0003225C <AmiBlitz3.ab3@23295>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032260 <AmiBlitz3.ab3@23296>    BNE.w JL_0_D522
00032262 <AmiBlitz3.ab3@23297>   ADDQ.w #6,A0
00032266 <AmiBlitz3.ab3@23298>   MOVE.l A0,$E(A2)
0003226A <AmiBlitz3.ab3@23299> BRA.w JL_0_D4C8
0003226C <AmiBlitz3.ab3@23302>   MOVE.l A0,-(A7)
00032270 <AmiBlitz3.ab3@23303>    BSR.w JL_0_D4C8
00032272 <AmiBlitz3.ab3@23304>   MOVEA.l (A7)+,A0
00032276 <AmiBlitz3.ab3@23305>   LEA $A(A0),A0
0003227C <AmiBlitz3.ab3@23306>   MOVEA.l currentfunction,A2
00032280 <AmiBlitz3.ab3@23307> BRA.w JL_0_D54A
00032284 <AmiBlitz3.ab3@23310>   MOVE.w $8(A2),D1
00032288 <AmiBlitz3.ab3@23311>    BNE.w JL_0_D54A
0003228C <AmiBlitz3.ab3@23312>   LEA $10(A0),A0
00032290 <AmiBlitz3.ab3@23313>   MOVE.l A0,$E(A2)
00032292 <AmiBlitz3.ab3@23314> RTS
00032298 <AmiBlitz3.ab3@23318> JMP errormsg_nofast
0003229E <AmiBlitz3.ab3@23321>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
000322A2 <AmiBlitz3.ab3@23322>    BNE.w JL_0_D580
000322A8 <AmiBlitz3.ab3@23323>    TST.b fastfunc
000322AC <AmiBlitz3.ab3@23324>    BNE JUMP_errormsg_nofast
000322B2 <AmiBlitz3.ab3@23325>   MOVE.l destpointer,-(A7)
000322B8 <AmiBlitz3.ab3@23326>   MOVE.l A0,destpointer
000322BC <AmiBlitz3.ab3@23327>   MOVE.w #$4EB9,D1
000322C0 <AmiBlitz3.ab3@23328>    BSR.w writeword
000322C6 <AmiBlitz3.ab3@23329>    JSR addoff
000322CA <AmiBlitz3.ab3@23330>    BSR.w writelong
000322CC <AmiBlitz3.ab3@23331>   MOVEA.l (A7)+,A0
000322D2 <AmiBlitz3.ab3@23332>   MOVEA.l destpointer,A1
000322D4 <AmiBlitz3.ab3@23333>   MOVE.l A0,-(A1)
000322DA <AmiBlitz3.ab3@23334>   MOVE.l A0,destpointer
000322DE <AmiBlitz3.ab3@23337>   MOVE.w $8(A2),D4
000322E2 <AmiBlitz3.ab3@23338>    BPL.w JL_0_D59E
000322E6 <AmiBlitz3.ab3@23339>   MOVE.w #$C004,D1
000322EA <AmiBlitz3.ab3@23340>    BSR.w tokejsr2
000322F0 <AmiBlitz3.ab3@23341>   MOVEA.l currentfunction,A2
000322F4 <AmiBlitz3.ab3@23342>   MOVE.w $8(A2),D4
000322F8 <AmiBlitz3.ab3@23343>   ANDI.w #$7FFF,D4
000322FC <AmiBlitz3.ab3@23346>    BEQ.w JL_0_D5E0
00032300 <AmiBlitz3.ab3@23347>   MOVE.b $4(A2),D1
00032304 <AmiBlitz3.ab3@23348>   ANDI.w #$F,D1
00032306 <AmiBlitz3.ab3@23349>   MOVE.w D1,-(A7)
0003230A <AmiBlitz3.ab3@23350>   CMP.w #$5,D1
0003230E <AmiBlitz3.ab3@23351>    BCS.w JL_0_D5BC
00032312 <AmiBlitz3.ab3@23352>   MOVE.w #$2F04,D1
00032316 <AmiBlitz3.ab3@23353>    BSR.w writeword
0003231C <AmiBlitz3.ab3@23356>   MOVE.l locdatast,D3
00032322 <AmiBlitz3.ab3@23357>    JSR datastart
00032326 <AmiBlitz3.ab3@23358>   MOVE.w #$C501,D1
0003232A <AmiBlitz3.ab3@23359>    BSR.w tokejsr2
0003232C <AmiBlitz3.ab3@23360>   MOVE.w (A7)+,D1
00032330 <AmiBlitz3.ab3@23361>   CMP.w #$5,D1
00032334 <AmiBlitz3.ab3@23362>    BCS.w JL_0_D5E0
00032338 <AmiBlitz3.ab3@23363>   MOVE.w #$281F,D1
0003233C <AmiBlitz3.ab3@23364>    BSR.w writeword
00032340 <AmiBlitz3.ab3@23366>   MOVE.w #$4E75,D1
00032344 <AmiBlitz3.ab3@23367> BRA.w writeword
0003234A <AmiBlitz3.ab3@23371>   LEA mwait,A0
00032350 <AmiBlitz3.ab3@23372>   LEA mwaitf,A1
00032354 <AmiBlitz3.ab3@23373> BRA.w pokecode
0003235A <AmiBlitz3.ab3@23377> JMP laberr
0003235E <AmiBlitz3.ab3@23380>   CMP.w #$2E,D0
00032362 <AmiBlitz3.ab3@23381>   BNE.w JUMP_syntaxerr
00032368 <AmiBlitz3.ab3@23382>   JSR getparameter2
0003236C <AmiBlitz3.ab3@23383>   BEQ.w JUMP_laberr
00032372 <AmiBlitz3.ab3@23384>   LEA newtypebase,A2
00032378 <AmiBlitz3.ab3@23385>   JSR findtype
0003237C <AmiBlitz3.ab3@23386>   BNE.w JL_0_D626
00032384 <AmiBlitz3.ab3@23387>   CMPI.l #MaxByte,$4(A2)
00032388 <AmiBlitz3.ab3@23388>   BNE.w JUMP_typeerr
0003238C <AmiBlitz3.ab3@23389> BRA.w JL_0_D62A
00032392 <AmiBlitz3.ab3@23392> JMP typeerr
00032398 <AmiBlitz3.ab3@23395>   JSR addlabel
0003239C <AmiBlitz3.ab3@23398>   CLR.l $4(A2)
000323A2 <AmiBlitz3.ab3@23399>   MOVE.l A2,thistype
000323A8 <AmiBlitz3.ab3@23400>   CLR.l prevtype
000323AE <AmiBlitz3.ab3@23401>   CLR.w typelen
000323B4 <AmiBlitz3.ab3@23402>   CLR.w linemode
000323BA <AmiBlitz3.ab3@23403>   JSR reget
000323BE <AmiBlitz3.ab3@23404>   BNE.w typemode
000323C0 <AmiBlitz3.ab3@23405> RTS
000323C4 <AmiBlitz3.ab3@23408>   CMP.w #-$7FFE,D0
000323C8 <AmiBlitz3.ab3@23409>   BEQ.w JL_0_D82E
000323D2 <AmiBlitz3.ab3@23411>   MOVE.w oldqflag,instringon
000323D8 <AmiBlitz3.ab3@23412>   MOVEA.l lastsourcepos,A5
000323DA <AmiBlitz3.ab3@23413>   MOVEQ.l #$00,D6
000323DE <AmiBlitz3.ab3@23414>   CMP.w #$2A,D0
000323E2 <AmiBlitz3.ab3@23415>   BNE.w JL_0_D670
000323E4 <AmiBlitz3.ab3@23416>   MOVEQ.l #$01,D6
000323EA <AmiBlitz3.ab3@23417>   JSR get1bytemain
000323EE <AmiBlitz3.ab3@23418> BRA.w JL_0_D67E
000323F2 <AmiBlitz3.ab3@23421>   CMP.w #$40,D0
000323F6 <AmiBlitz3.ab3@23422>   BNE.w JL_0_D67E
000323F8 <AmiBlitz3.ab3@23423>   MOVEQ.l #$05,D6
000323FE <AmiBlitz3.ab3@23424>   JSR get1bytemain
00032404 <AmiBlitz3.ab3@23427>   MOVE.w D6,flagmask
0003240A <AmiBlitz3.ab3@23428>   JSR getparameter2
0003240E <AmiBlitz3.ab3@23429>   BEQ.w JUMP_syntaxerr
00032414 <AmiBlitz3.ab3@23430>   MOVEA.l thistype,A2
00032416 <AmiBlitz3.ab3@23431>   ADDQ.w #4,A2
0003241C <AmiBlitz3.ab3@23432>   JSR findvariable2
00032420 <AmiBlitz3.ab3@23433>   BEQ.w JUMP_dupofferr
00032426 <AmiBlitz3.ab3@23434>   JSR addlabel
00032428 <AmiBlitz3.ab3@23435>   MOVE.l A2,-(A7)
0003242C <AmiBlitz3.ab3@23436>   CMP.w #$2E,D0
00032430 <AmiBlitz3.ab3@23437>    BEQ.w JL_0_D6CE
00032434 <AmiBlitz3.ab3@23438>   CMP.w #$24,D0
00032438 <AmiBlitz3.ab3@23439>    BNE.w JL_0_D6C0
0003243E <AmiBlitz3.ab3@23440>   MOVE.l #newtype_string,D2
00032444 <AmiBlitz3.ab3@23441>    JSR get1bytemain
00032448 <AmiBlitz3.ab3@23442> BRA.w JL_0_D710
0003244E <AmiBlitz3.ab3@23445> JMP dupofferr
00032454 <AmiBlitz3.ab3@23448>   MOVE.l prevtype,D2
00032458 <AmiBlitz3.ab3@23449>   BEQ.w JUMP_notypeerr
0003245C <AmiBlitz3.ab3@23450> BRA.w JL_0_D706
00032462 <AmiBlitz3.ab3@23453> JMP notypeerr
00032468 <AmiBlitz3.ab3@23456>   JSR getparameter2
0003246C <AmiBlitz3.ab3@23457>    BEQ.w JUMP_syntaxerr
00032472 <AmiBlitz3.ab3@23458>   LEA newtypebase,A2
00032478 <AmiBlitz3.ab3@23459>    JSR findtype
0003247C <AmiBlitz3.ab3@23460>    BEQ.w JL_0_D704
00032484 <AmiBlitz3.ab3@23461>   BTST #$0,flagmask+1
00032488 <AmiBlitz3.ab3@23462>    BEQ.w JUMP_notypeerr
0003248E <AmiBlitz3.ab3@23463>   JSR addlabel
00032496 <AmiBlitz3.ab3@23466>   MOVE.w linenumat+2,$8(A2)
0003249E <AmiBlitz3.ab3@23467>   MOVE.l #MaxByte,$4(A2)
000324A0 <AmiBlitz3.ab3@23470>   MOVE.l A2,D2
000324A6 <AmiBlitz3.ab3@23473>   CMP.l #newtype_byte,D2
000324AA <AmiBlitz3.ab3@23474>    BEQ.w JL_0_D71E
000324B0 <AmiBlitz3.ab3@23477>   ADDQ.w #1,typelen
000324B8 <AmiBlitz3.ab3@23478>   BCLR #$0,typelen+1
000324BA <AmiBlitz3.ab3@23481>   MOVEQ.l #$00,D3
000324BC <AmiBlitz3.ab3@23482>   MOVEA.l D2,A2
000324C2 <AmiBlitz3.ab3@23483>   MOVE.l A2,prevtype
000324C6 <AmiBlitz3.ab3@23484>   MOVE.w $8(A2),D3
000324C8 <AmiBlitz3.ab3@23485>   MOVEA.l (A7)+,A2
000324CC <AmiBlitz3.ab3@23486>   MOVE.l D2,$A(A2)
000324CE <AmiBlitz3.ab3@23487>   MOVEQ.l #$00,D4
000324D4 <AmiBlitz3.ab3@23488>   MOVE.w typelen,D4
000324D8 <AmiBlitz3.ab3@23489>   MOVE.w D4,$4(A2)
000324E0 <AmiBlitz3.ab3@23490>   BTST #$0,flagmask+1
000324E4 <AmiBlitz3.ab3@23491>    BEQ.w JL_0_D74C
000324E6 <AmiBlitz3.ab3@23492>   MOVEQ.l #$04,D3
000324EA <AmiBlitz3.ab3@23495>   CMP.w #$5B,D0
000324EE <AmiBlitz3.ab3@23496>    BNE.w JL_0_D782
000324F2 <AmiBlitz3.ab3@23497>   MOVEM.l D3-D4/A2,-(A7)
000324F6 <AmiBlitz3.ab3@23498>    BSR.w AJL_0_BF6E
000324FA <AmiBlitz3.ab3@23499>   CMP.w #$5D,D0
000324FE <AmiBlitz3.ab3@23500>    BNE.w JUMP_syntaxerr
00032500 <AmiBlitz3.ab3@23501>   TST.w D6
00032504 <AmiBlitz3.ab3@23502>    BNE.w JUMP_fpconerr
00032506 <AmiBlitz3.ab3@23503>   MOVE.l D3,D1
0003250A <AmiBlitz3.ab3@23504>   MOVEM.l (A7)+,D3-D4/A2
00032510 <AmiBlitz3.ab3@23505>    JSR get1bytemain
00032514 <AmiBlitz3.ab3@23506>   MOVE.w D1,$8(A2)
00032518 <AmiBlitz3.ab3@23507>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00032520 <AmiBlitz3.ab3@23508>   ORI.w #$2,flagmask
00032522 <AmiBlitz3.ab3@23511>   ADD.l D3,D4
00032528 <AmiBlitz3.ab3@23514>     CMP.l #65532,d4
0003252C <AmiBlitz3.ab3@23519>   BCC JUMP_toolongerr
00032534 <AmiBlitz3.ab3@23520>   MOVE.w flagmask,$6(A2)
0003253A <AmiBlitz3.ab3@23521>   MOVE.w D4,typelen
0003253C <AmiBlitz3.ab3@23522> RTS
00032542 <AmiBlitz3.ab3@23525> JMP badenderr
00032548 <AmiBlitz3.ab3@23528> JMP noiferr
0003254E <AmiBlitz3.ab3@23531> JMP toolongerr
00032554 <AmiBlitz3.ab3@23534> JMP fpconerr
0003255A <AmiBlitz3.ab3@23537>   MOVE.l firstiff,D0
0003255E <AmiBlitz3.ab3@23538>    BEQ.w JUMP_noiferr
00032560 <AmiBlitz3.ab3@23539>   MOVEA.l D0,A0
00032564 <AmiBlitz3.ab3@23540>   MOVE.w $C(A0),D0
00032568 <AmiBlitz3.ab3@23541>   ANDI.w #$FF,D0
0003256A <AmiBlitz3.ab3@23542>   CMP.w D0,D1
0003256E <AmiBlitz3.ab3@23543>    BNE.w JUMP_badenderr
00032572 <AmiBlitz3.ab3@23546>   CMP.w #$1,D1
00032576 <AmiBlitz3.ab3@23547>   BNE.w JL_0_D7D8
0003257A <AmiBlitz3.ab3@23548>   MOVE.w #$6000,D1
00032580 <AmiBlitz3.ab3@23551>     TST.b fast
00032584 <AmiBlitz3.ab3@23552>     BEQ 'l1
0003258A <AmiBlitz3.ab3@23553>     OR.l #$ff,d1
0003258E <AmiBlitz3.ab3@23557>   BSR.w writeword
00032594 <AmiBlitz3.ab3@23558>   MOVEA.l destpointer,A1
00032598 <AmiBlitz3.ab3@23559>   MOVE.l $4(A0),D1
0003259A <AmiBlitz3.ab3@23560>   SUB.l A1,D1
000325A0 <AmiBlitz3.ab3@23563>     TST.b fast
000325A4 <AmiBlitz3.ab3@23564>     BEQ 'l2
000325A8 <AmiBlitz3.ab3@23565>     BSR writelong
000325AC <AmiBlitz3.ab3@23566>   BRA JL_0_D7D8
000325B0 <AmiBlitz3.ab3@23570>   BSR.w writeword
000325B4 <AmiBlitz3.ab3@23573>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000325BA <AmiBlitz3.ab3@23574>   MOVE.l destpointer,D1
000325BC <AmiBlitz3.ab3@23575>   SUB.l A1,D1
000325C2 <AmiBlitz3.ab3@23578>     TST.b fast
000325C6 <AmiBlitz3.ab3@23579>     BEQ 'l1
000325C8 <AmiBlitz3.ab3@23580>     ADDQ.l #4,D1
000325CE <AmiBlitz3.ab3@23581>     MOVE.w dontwrite,D0
000325D2 <AmiBlitz3.ab3@23582>     BNE.w JL_0_D7FE
000325D6 <AmiBlitz3.ab3@23583>     MOVE.l d1,-$4(a1)
000325DA <AmiBlitz3.ab3@23584>   BRA JL_0_D7FE
000325DC <AmiBlitz3.ab3@23588>   ADDQ.l #2,d1
000325E2 <AmiBlitz3.ab3@23589>   TST.w dontwrite
000325E6 <AmiBlitz3.ab3@23590>   BNE JL_0_D7FE
000325EC <AmiBlitz3.ab3@23591>   CMP.l #MinWordSgnd,D1
000325F0 <AmiBlitz3.ab3@23592>   BCC.w JUMP_bigiferr
000325F4 <AmiBlitz3.ab3@23593>   MOVE.w D1,-$2(A1)
000325F6 <AmiBlitz3.ab3@23596> RTS
000325FC <AmiBlitz3.ab3@23599> JMP bigiferr
00032606 <AmiBlitz3.ab3@23604>   MOVE.w oldqflag,instringon
0003260C <AmiBlitz3.ab3@23605>   MOVEA.l lastsourcepos,A5
0003260E <AmiBlitz3.ab3@23608>   MOVEQ.l #$01,D1
00032612 <AmiBlitz3.ab3@23609> BRA.w JL_0_D810
0003261C <AmiBlitz3.ab3@23613>   MOVE.w oldqflag,instringon
00032622 <AmiBlitz3.ab3@23614>   MOVEA.l lastsourcepos,A5
00032624 <AmiBlitz3.ab3@23617>   MOVEQ.l #$00,D1
00032628 <AmiBlitz3.ab3@23620>   BSR.w JL_0_D79E
0003262C <AmiBlitz3.ab3@23621>   BSR.w AJL_0_D81C
00032632 <AmiBlitz3.ab3@23622> JMP get1bytemain
00032638 <AmiBlitz3.ab3@23625>   MOVE.l (A0),firstiff
0003263A <AmiBlitz3.ab3@23626>   MOVEA.l A0,A1
0003263C <AmiBlitz3.ab3@23627>   MOVEQ.l #$0E,D0
00032642 <AmiBlitz3.ab3@23628>   MOVEA.l _execbase,A6
00032648 <AmiBlitz3.ab3@23629>   MOVE.l mempool,a0
0003264C <AmiBlitz3.ab3@23630> JMP _FreePooled(A6)
00032652 <AmiBlitz3.ab3@23634>   JSR get1bytemain
00032656 <AmiBlitz3.ab3@23637>   BEQ.w JL_0_D980
0003265E <AmiBlitz3.ab3@23638>   CMP.l #"noa7",-1(a5)
00032662 <AmiBlitz3.ab3@23639>   BNE 'l1
00032668 <AmiBlitz3.ab3@23640>   JSR get1bytemain
0003266E <AmiBlitz3.ab3@23641>   JSR get1bytemain
00032674 <AmiBlitz3.ab3@23642>   JSR get1bytemain
0003267C <AmiBlitz3.ab3@23643>   MOVE.w #$3a,lastchar
00032680 <AmiBlitz3.ab3@23644> BRA JL_0_D980
00032686 <AmiBlitz3.ab3@23647>   CMP.w #"d0",-1(a5)
0003268A <AmiBlitz3.ab3@23648>   BNE 'l2
00032692 <AmiBlitz3.ab3@23649>   MOVE.b #1,returncode
00032698 <AmiBlitz3.ab3@23650>   CLR.w lastchar
0003269C <AmiBlitz3.ab3@23651> BRA JL_0_D980
000326A0 <AmiBlitz3.ab3@23654>   CMP.w #$80d7,d0
000326A4 <AmiBlitz3.ab3@23655>   BNE JL_0_D836
000326AA <AmiBlitz3.ab3@23656>   JSR skiprest
000326AC <AmiBlitz3.ab3@23657> RTS
000326B0 <AmiBlitz3.ab3@23660>   BSR.w JL_0_D844
000326B6 <AmiBlitz3.ab3@23661>   JSR reget
000326BA <AmiBlitz3.ab3@23662>   BNE.w JL_0_D836
000326BC <AmiBlitz3.ab3@23663> RTS
000326C0 <AmiBlitz3.ab3@23666>   CMP.w #-$7FFF,D0
000326C4 <AmiBlitz3.ab3@23667>    BNE.w JL_0_D87E
000326CA <AmiBlitz3.ab3@23668>   MOVE.w linemode,D1
000326CE <AmiBlitz3.ab3@23669>    BNE.w JUMP_modeerr
000326D4 <AmiBlitz3.ab3@23670>   ADDQ.w #1,typelen
000326DC <AmiBlitz3.ab3@23671>   BCLR #$0,typelen+1
000326E2 <AmiBlitz3.ab3@23672>   MOVEA.l thistype,A0
000326EA <AmiBlitz3.ab3@23673>   MOVE.w typelen,$8(A0)
000326F2 <AmiBlitz3.ab3@23674>   MOVE.w #$FFFF,linemode
000326F8 <AmiBlitz3.ab3@23675> JMP get1bytemain
000326FE <AmiBlitz3.ab3@23678> JMP modeerr
00032702 <AmiBlitz3.ab3@23681>   CMP.w #-$7FF5,D0
00032706 <AmiBlitz3.ab3@23682>    BEQ.w JL_0_D80E
0003270A <AmiBlitz3.ab3@23683>   CMP.w #-$7FF4,D0
0003270E <AmiBlitz3.ab3@23684>    BEQ.w JL_0_D804
00032712 <AmiBlitz3.ab3@23685>   CMP.w #-$7FF8,D0
00032716 <AmiBlitz3.ab3@23686>    BNE.w JL_0_D89A
0003271A <AmiBlitz3.ab3@23689> BRA.w JL_0_D9E8
00032720 <AmiBlitz3.ab3@23692> JMP interr3
00032724 <AmiBlitz3.ab3@23695>   CMP.w #-$7FF7,D0
00032728 <AmiBlitz3.ab3@23696>    BNE.w JL_0_D8C8
0003272E <AmiBlitz3.ab3@23697>    TST.b fpu
00032732 <AmiBlitz3.ab3@23698>    BEQ 'nof
00032738 <AmiBlitz3.ab3@23699>    MOVEA.l currentfunction,A0
0003273E <AmiBlitz3.ab3@23700>    CMP.l #0,a0
00032742 <AmiBlitz3.ab3@23701>    BEQ 'nof
00032748 <AmiBlitz3.ab3@23702>    CMP.b #5,$5(a0)
0003274C <AmiBlitz3.ab3@23703>     BNE 'nof
00032752 <AmiBlitz3.ab3@23704>    MOVE.l #$f23c5000,d1
00032756 <AmiBlitz3.ab3@23705>    BSR writelong
0003275A <AmiBlitz3.ab3@23706>    MOVE.w #0,d1
0003275E <AmiBlitz3.ab3@23707>    BSR writeword
00032762 <AmiBlitz3.ab3@23710>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00032766 <AmiBlitz3.ab3@23711>    BSR.w writeword
0003276C <AmiBlitz3.ab3@23712>   MOVEA.l currentfunction,A0
00032772 <AmiBlitz3.ab3@23713>   CMP.l #0,a0
00032776 <AmiBlitz3.ab3@23714>   BEQ JL_0_D896
0003277C <AmiBlitz3.ab3@23715>   MOVE.l destpointer,d1
00032780 <AmiBlitz3.ab3@23716>   SUB.l $e(a0),d1
00032784 <AmiBlitz3.ab3@23717>   MOVE.l d1,isfunc+1(a0)
0003278A <AmiBlitz3.ab3@23718>   CMPI.b #$7,$5(A0)
0003278E <AmiBlitz3.ab3@23719>    BNE.w JL_0_D896
00032794 <AmiBlitz3.ab3@23720>   MOVE.w putstlen,D1
00032798 <AmiBlitz3.ab3@23721>    BSR.w writeword
0003279C <AmiBlitz3.ab3@23722> BRA.w JL_0_D896
000327A2 <AmiBlitz3.ab3@23725> JMP interr
000327A6 <AmiBlitz3.ab3@23728>  CMP.w #-$7FD0,D0
000327AA <AmiBlitz3.ab3@23729>    BNE.w JL_0_D966
000327B0 <AmiBlitz3.ab3@23730>   MOVE.w proceduremode,D1
000327B4 <AmiBlitz3.ab3@23731>    BNE.w JUMP_interr3
000327BA <AmiBlitz3.ab3@23732>   TST.b debugmode
000327BE <AmiBlitz3.ab3@23733>    BEQ.w JL_0_D90A
000327C0 <AmiBlitz3.ab3@23734>   MOVEQ.l #$03,D1
000327C6 <AmiBlitz3.ab3@23735>    JSR writetrap
000327CC <AmiBlitz3.ab3@23736>   MOVE.w dontwrite,D1
000327D0 <AmiBlitz3.ab3@23737>    BNE.w JL_0_D90A
000327D6 <AmiBlitz3.ab3@23738>   MOVEA.l intcleanat,A0
000327DC <AmiBlitz3.ab3@23739>   MOVE.l destpointer,(A0)
000327E0 <AmiBlitz3.ab3@23740>   MOVE.w #$C30C,D1
000327E4 <AmiBlitz3.ab3@23741>    BSR.w Atokejsr
000327EA <AmiBlitz3.ab3@23744>   MOVE.w intstring,D1
000327EE <AmiBlitz3.ab3@23745>    BEQ.w JUMP_interr
000327F2 <AmiBlitz3.ab3@23746>    BPL.w JL_0_D934
000327F8 <AmiBlitz3.ab3@23747>   MOVE.w intlevel,D1
000327FC <AmiBlitz3.ab3@23748>   ORI.w #$7200,D1
00032800 <AmiBlitz3.ab3@23749>    BSR.w writeword
00032804 <AmiBlitz3.ab3@23750>   MOVE.w #$C103,D1
00032808 <AmiBlitz3.ab3@23751>    BSR.w Atokejsr
0003280E <AmiBlitz3.ab3@23752>   CLR.w intlevel
00032814 <AmiBlitz3.ab3@23755>  CLR.w intstring
0003281A <AmiBlitz3.ab3@23756>   MOVE.l intfin,D1
0003281E <AmiBlitz3.ab3@23757>    BSR.w writelong
00032824 <AmiBlitz3.ab3@23758>   MOVE.l #$70004E75,D1
00032828 <AmiBlitz3.ab3@23759>    BSR.w writelong
0003282E <AmiBlitz3.ab3@23760>   MOVE.w dontwrite,D1
00032832 <AmiBlitz3.ab3@23761>    BNE.w JL_0_D962
00032838 <AmiBlitz3.ab3@23762>   MOVEA.l intjmpat,A0
0003283C <AmiBlitz3.ab3@23763>   MOVE.l destpointer(PC),(A0)
00032842 <AmiBlitz3.ab3@23766> JMP get1bytemain
00032846 <AmiBlitz3.ab3@23770>   CMP.w #-$7FF2,D0
0003284A <AmiBlitz3.ab3@23771>    BEQ.w doendsel
0003284E <AmiBlitz3.ab3@23772>   CMP.w #-$7F4C,D0
00032852 <AmiBlitz3.ab3@23773>    BNE.w JL_0_D97C
00032858 <AmiBlitz3.ab3@23774> JMP doendseterr
0003285E <AmiBlitz3.ab3@23778> JMP syntaxerr
00032864 <AmiBlitz3.ab3@23782>   TST.w dirmode
00032868 <AmiBlitz3.ab3@23783>   BNE.w JUMP_baddirerr
0003286C <AmiBlitz3.ab3@23784>   MOVE.w #$C800,D1
00032872 <AmiBlitz3.ab3@23785>   JSR Atokejsr                                            ;end
0003287A <AmiBlitz3.ab3@23786>   CMP.l #"noa7",-4(a5)
0003287E <AmiBlitz3.ab3@23787>   BNE 'l10
00032884 <AmiBlitz3.ab3@23788>   TST.w dontwrite
00032888 <AmiBlitz3.ab3@23789>   BNE 'l10
0003288E <AmiBlitz3.ab3@23790>   MOVE.l destpointer,d1
00032890 <AmiBlitz3.ab3@23791>   SUBQ.l #4,d1
00032892 <AmiBlitz3.ab3@23792>   MOVE.l a0,-(a7)
00032894 <AmiBlitz3.ab3@23793>   MOVE.l d1,a0
00032896 <AmiBlitz3.ab3@23794>   MOVE.l (a0),a0
0003289C <AmiBlitz3.ab3@23795>   MOVE.l #$60000002,(a0)+
000328A0 <AmiBlitz3.ab3@23796>   MOVE.w #$588f,(a0)
000328A2 <AmiBlitz3.ab3@23797>   MOVE.l (a7)+,a0
000328A4 <AmiBlitz3.ab3@23800> RTS
000328AA <AmiBlitz3.ab3@23804>   TST.w dirmode                                            ;stop
000328AE <AmiBlitz3.ab3@23805>   BNE.w JUMP_baddirerr
000328B0 <AmiBlitz3.ab3@23806>   MOVE.w d0,d1
000328B4 <AmiBlitz3.ab3@23807>   BEQ 'l10
000328B8 <AmiBlitz3.ab3@23808>   CMP.b #$3a,d0
000328BC <AmiBlitz3.ab3@23809>   BEQ 'l10
000328C2 <AmiBlitz3.ab3@23810>   JSR get1bytemain
000328C8 <AmiBlitz3.ab3@23813>   TST.b debugmode
000328CC <AmiBlitz3.ab3@23814>   BEQ.w newstop
000328D0 <AmiBlitz3.ab3@23815>   MOVE.w #$D501,D1
000328D4 <AmiBlitz3.ab3@23816> BRA.w Atokejsr
000328D6 <AmiBlitz3.ab3@23820>     RTS
000328D8 <AmiBlitz3.ab3@23822>   MOVE.w d1,d0
000328DC <AmiBlitz3.ab3@23823>   BEQ 'l10
000328E0 <AmiBlitz3.ab3@23824>   CMP.b #$3a,d0
000328E4 <AmiBlitz3.ab3@23825>   BEQ 'l10
000328E8 <AmiBlitz3.ab3@23826>   SUB.b #$30,d0
000328EC <AmiBlitz3.ab3@23827>   MOVE.w #$4e40,d1
000328F0 <AmiBlitz3.ab3@23828> BRA 'l11
000328F4 <AmiBlitz3.ab3@23831>   MOVE.w #$4e4a,d1
000328F8 <AmiBlitz3.ab3@23832> BRA writeword
000328FA <AmiBlitz3.ab3@23835>   ADD.b d0,d1
000328FE <AmiBlitz3.ab3@23836> BRA writeword
00032904 <AmiBlitz3.ab3@23840> JMP badconterr
00032908 <AmiBlitz3.ab3@23843>   MOVE.w #$4E71,D1
0003290C <AmiBlitz3.ab3@23844> BRA.w writeword
00032912 <AmiBlitz3.ab3@23847>   MOVEA.l firstfor,A2
00032918 <AmiBlitz3.ab3@23848>   CLR.l firstfor
0003291E <AmiBlitz3.ab3@23849>   MOVEA.l _execbase,A6
00032922 <AmiBlitz3.ab3@23852>   CMPA.w #$0,A2
00032926 <AmiBlitz3.ab3@23853>   BEQ.w JL_0_D9E6
00032928 <AmiBlitz3.ab3@23854>   MOVEA.l A2,A1
0003292A <AmiBlitz3.ab3@23855>   MOVEA.l (A1),A2
0003292C <AmiBlitz3.ab3@23856>   MOVEQ.l #$00,D0
00032932 <AmiBlitz3.ab3@23857>   MOVE.l mempool2,a0
00032936 <AmiBlitz3.ab3@23858>   MOVE.b $10(A1),D0
0003293A <AmiBlitz3.ab3@23859>   JSR _FreePooled(A6)                                      ;freememfor_error
0003293E <AmiBlitz3.ab3@23860> BRA.w JL_0_D9CC
00032940 <AmiBlitz3.ab3@23863> RTS
00032946 <AmiBlitz3.ab3@23867> JMP badpenderr
0003294C <AmiBlitz3.ab3@23873>   MOVE.w proceduremode,D1
00032950 <AmiBlitz3.ab3@23874>    BEQ.w JUMP_badpenderr
00032956 <AmiBlitz3.ab3@23876>   MOVE.w dontwrite,D1
0003295A <AmiBlitz3.ab3@23877>    BNE.w JL_0_DA1A
00032960 <AmiBlitz3.ab3@23878>   MOVEA.l firstpend,A2
00032964 <AmiBlitz3.ab3@23881>   CMPA.w #$0,A2
00032968 <AmiBlitz3.ab3@23882>    BEQ.w JL_0_DA1A
0003296C <AmiBlitz3.ab3@23883>   MOVEA.l $4(A2),A0
00032972 <AmiBlitz3.ab3@23884>   MOVE.l destpointer,(A0)
00032974 <AmiBlitz3.ab3@23885>   MOVEA.l (A2),A2
00032978 <AmiBlitz3.ab3@23886> BRA.w JL_0_DA02
0003297E <AmiBlitz3.ab3@23889>   TST.b debugmode
00032982 <AmiBlitz3.ab3@23890>    BEQ.b JL_0_DA2A
00032984 <AmiBlitz3.ab3@23891>   MOVEQ.l #$05,D1
0003298A <AmiBlitz3.ab3@23892>   JSR writetrap
00032990 <AmiBlitz3.ab3@23895>   MOVEA.l firstlocal,A2                                    ;firstlocal
00032996 <AmiBlitz3.ab3@23896>   JSR calcstatic2b                                           ;calcstatic
0003299C <AmiBlitz3.ab3@23897>   MOVEA.l currentfunction,A0
000329A2 <AmiBlitz3.ab3@23898>   MOVE.l destpointer,d1
000329A6 <AmiBlitz3.ab3@23899>   SUB.l $e(a0),d1
000329AA <AmiBlitz3.ab3@23900>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
000329AE <AmiBlitz3.ab3@23901>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
000329B4 <AmiBlitz3.ab3@23902>   MOVE.l D3,locdatast
000329BA <AmiBlitz3.ab3@23903>   MOVEA.l tempvm,A1
000329C0 <AmiBlitz3.ab3@23904>  CLR.b infunctioncode
000329C6 <AmiBlitz3.ab3@23905>   MOVE.l firstiffstore,d1
000329CC <AmiBlitz3.ab3@23906>   CMP.l firstiff,d1
000329D0 <AmiBlitz3.ab3@23907>   BNE JUMP_noenderr
000329D4 <AmiBlitz3.ab3@23908>   TST.w $C(A1)                                             ;dim
000329D8 <AmiBlitz3.ab3@23909>    BPL.w JL_0_DA64
000329DE <AmiBlitz3.ab3@23910>  BSET #$7,$8(A0)
000329E2 <AmiBlitz3.ab3@23911>   MOVE.w #$C005,D1
000329E6 <AmiBlitz3.ab3@23912>    BSR.w tokejsr2                                          ;writefreememstatement
000329EA <AmiBlitz3.ab3@23913> BRA.w JL_0_DA6C
000329F0 <AmiBlitz3.ab3@23916> JMP noenderr
000329F8 <AmiBlitz3.ab3@23919>   MOVE.w memlibstat,$C(A1)
000329FE <AmiBlitz3.ab3@23922>   MOVEA.l currentfunction,A0
00032A02 <AmiBlitz3.ab3@23923>   MOVE.l $E(A0),-(A7)
00032A0A <AmiBlitz3.ab3@23924>   MOVE.w locvaroff,$6(A0)
00032A10 <AmiBlitz3.ab3@23925>   BCLR #$1,$7(A0)
00032A16 <AmiBlitz3.ab3@23926>   BCLR #$0,$7(A0)
00032A1C <AmiBlitz3.ab3@23927>   CMPI.b #$7,$5(A0)
00032A20 <AmiBlitz3.ab3@23928>    BNE.w JL_0_DA9E
00032A26 <AmiBlitz3.ab3@23929>   MOVE.w getstlen,D1
00032A2A <AmiBlitz3.ab3@23930>    BSR.w writeword
00032A2E <AmiBlitz3.ab3@23933>   TST.w $6(A0)
00032A32 <AmiBlitz3.ab3@23934>    BEQ.w JL_0_DAB8
00032A36 <AmiBlitz3.ab3@23935>   MOVE.w #$FC7B,D1
00032A3C <AmiBlitz3.ab3@23936>    JSR uselib
00032A42 <AmiBlitz3.ab3@23937>   MOVE.w unlinka4,D1
00032A46 <AmiBlitz3.ab3@23938>    BSR.w writeword
00032A4C <AmiBlitz3.ab3@23941>   MOVEA.l currentfunction,A0
00032A4E <AmiBlitz3.ab3@23942>   MOVEQ.l #$00,D1
00032A52 <AmiBlitz3.ab3@23943>   MOVE.b $4(A0),D1
00032A54 <AmiBlitz3.ab3@23944>   LSR.w #4,D1
00032A58 <AmiBlitz3.ab3@23945>    BEQ.w JL_0_DB24
00032A5A <AmiBlitz3.ab3@23947>      LSL.w #1,d1
00032A5E <AmiBlitz3.ab3@23949>   CMP.w #$1,D1
00032A62 <AmiBlitz3.ab3@23950>    BNE.w JL_0_DAE0
00032A68 <AmiBlitz3.ab3@23951>   MOVE.w fix1,D1
00032A6C <AmiBlitz3.ab3@23952>    BSR.w writeword
00032A70 <AmiBlitz3.ab3@23953> BRA.w JL_0_DB24
00032A72 <AmiBlitz3.ab3@23956>   LSL.w #2,D1
00032A74 <AmiBlitz3.ab3@23957>   MOVE.w D1,-(A7)
00032A7A <AmiBlitz3.ab3@23958>   MOVE.w D1,moverts+2
00032A80 <AmiBlitz3.ab3@23959>   MOVE.l moverts,D1
00032A86 <AmiBlitz3.ab3@23960>    JSR writelong
00032A88 <AmiBlitz3.ab3@23961>   MOVE.w (A7)+,D1
00032A8C <AmiBlitz3.ab3@23962>   CMP.w #$8,D1
00032A90 <AmiBlitz3.ab3@23963>    BHI.w JL_0_DB14
00032A94 <AmiBlitz3.ab3@23964>   ANDI.w #$7,D1
00032A96 <AmiBlitz3.ab3@23965>   LSL.w #8,D1
00032A98 <AmiBlitz3.ab3@23966>   LSL.w #1,D1
00032A9E <AmiBlitz3.ab3@23967>   OR.w fixq,D1
00032AA4 <AmiBlitz3.ab3@23968>    JSR writeword
00032AA8 <AmiBlitz3.ab3@23969> BRA.w JL_0_DB24
00032AAE <AmiBlitz3.ab3@23973>    MOVE.w D1,fixstack+2
00032AB4 <AmiBlitz3.ab3@23974>   MOVE.l fixstack,D1
00032ABA <AmiBlitz3.ab3@23975>    JSR writelong
00032ABE <AmiBlitz3.ab3@23978>    BSR.w JL_0_D2CA
00032AC2 <AmiBlitz3.ab3@23979>    BSR.w JL_0_D4F8
00032AC4 <AmiBlitz3.ab3@23980>   MOVEA.l (A7)+,A0
00032ACA <AmiBlitz3.ab3@23981>   MOVE.w dontwrite,D1
00032ACE <AmiBlitz3.ab3@23982>    BNE.w JL_0_DB3E
00032AD4 <AmiBlitz3.ab3@23983>   MOVE.l destpointer,-(A0)
00032ADA <AmiBlitz3.ab3@23986>   CLR.w proceduremode
00032AE0 <AmiBlitz3.ab3@23987>   CLR.l currentfunction
00032AE6 <AmiBlitz3.ab3@23988>   CLR.w procnum
00032AEA <AmiBlitz3.ab3@23989>    BSR.w JL_0_DB5C
00032AF0 <AmiBlitz3.ab3@23990>    JSR freepends
00032AF6 <AmiBlitz3.ab3@23991> JMP get1bytemain
00032AF8 <AmiBlitz3.ab3@23994>   MOVEQ.l #$0C,D0
00032AFA <AmiBlitz3.ab3@23995>   MOVEQ.l #$01,D1
00032B00 <AmiBlitz3.ab3@23996>   MOVEA.l _execbase,A6
00032B06 <AmiBlitz3.ab3@23998>   MOVE.l mempool,a0
00032B0A <AmiBlitz3.ab3@23999>   JSR _AllocPooled(a6)
00032B0C <AmiBlitz3.ab3@24000>   MOVEA.l D0,A0
00032B12 <AmiBlitz3.ab3@24001>   MOVE.l alllocals,(A0)
00032B18 <AmiBlitz3.ab3@24002>   MOVE.l A0,alllocals
00032B1E <AmiBlitz3.ab3@24003>   MOVE.l firstlocal,D0
00032B24 <AmiBlitz3.ab3@24004>   CLR.l firstlocal
00032B28 <AmiBlitz3.ab3@24005>   MOVE.l D0,$4(A0)
00032B2E <AmiBlitz3.ab3@24006>   MOVE.l firstglob,D1
00032B34 <AmiBlitz3.ab3@24007>   CLR.l firstglob
00032B38 <AmiBlitz3.ab3@24008>   MOVE.l D1,$8(A0)
00032B3E <AmiBlitz3.ab3@24009>   TST.b debugmode
00032B42 <AmiBlitz3.ab3@24010>    BEQ.b JL_0_DBB0
00032B48 <AmiBlitz3.ab3@24011>   TST.w dontwrite
00032B4C <AmiBlitz3.ab3@24012>    BNE.b JL_0_DBB0
00032B50 <AmiBlitz3.ab3@24013>   MOVEA.l proclocals(PC),A0
00032B52 <AmiBlitz3.ab3@24014>   MOVE.l D0,(A0)+
00032B54 <AmiBlitz3.ab3@24015>   MOVE.l D1,(A0)
00032B56 <AmiBlitz3.ab3@24018> RTS
00032B5C <AmiBlitz3.ab3@24021> JMP baddirerr
00032B62 <AmiBlitz3.ab3@24025>   TST.w dirmode
00032B66 <AmiBlitz3.ab3@24026>    BNE.w JUMP_baddirerr
00032B6C <AmiBlitz3.ab3@24027>   MOVE.l firstfor,D1
00032B70 <AmiBlitz3.ab3@24028>    BEQ.w JUMP_noforerr
00032B76 <AmiBlitz3.ab3@24029>   JSR reget
00032B7A <AmiBlitz3.ab3@24030>    BEQ.w JL_0_DC18
00032B7E <AmiBlitz3.ab3@24033>   BSR.w getparameter
00032B82 <AmiBlitz3.ab3@24034>   MOVEA.l firstfor(PC),A2
00032B84 <AmiBlitz3.ab3@24035>   MOVEQ.l #$00,D1
00032B88 <AmiBlitz3.ab3@24036>   MOVE.b $10(A2),D1
00032B8C <AmiBlitz3.ab3@24037>   SUBI.w #$12,D1
00032B8E <AmiBlitz3.ab3@24038>   CMP.w D1,D2
00032B92 <AmiBlitz3.ab3@24039>    BNE.w JUMP_noforerr
00032B96 <AmiBlitz3.ab3@24040>   LEA ptr_parameterstore(PC),A0
00032B9A <AmiBlitz3.ab3@24041>   LEA $11(A2),A1
00032B9C <AmiBlitz3.ab3@24042>   SUBQ.w #1,D2
00032B9E <AmiBlitz3.ab3@24045>     CMPM.b (A0)+,(A1)+
00032BA2 <AmiBlitz3.ab3@24046>     BNE.w JUMP_noforerr
00032BA6 <AmiBlitz3.ab3@24047>   DBF D2,JL_0_DBF0
00032BAA <AmiBlitz3.ab3@24049>    BSR.w JL_0_DC1A
00032BB0 <AmiBlitz3.ab3@24050>    JSR reget
00032BB4 <AmiBlitz3.ab3@24051>    BEQ.w JL_0_DC16
00032BB8 <AmiBlitz3.ab3@24052>   CMP.w #$2C,D0
00032BBC <AmiBlitz3.ab3@24053>    BNE.w JUMP_syntaxerr
00032BC2 <AmiBlitz3.ab3@24054>    JSR get1bytemain
00032BC6 <AmiBlitz3.ab3@24055> BRA.w JL_0_DBCE
00032BCC <AmiBlitz3.ab3@24058> JMP noforerr
00032BCE <AmiBlitz3.ab3@24061> RTS
00032BD2 <AmiBlitz3.ab3@24065>   MOVE.l 8(a7),a2
00032BD6 <AmiBlitz3.ab3@24066>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00032BDA <AmiBlitz3.ab3@24067>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00032BDE <AmiBlitz3.ab3@24068>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00032BE0 <AmiBlitz3.ab3@24072>   MOVEA.l D1,A2
00032BE6 <AmiBlitz3.ab3@24075>   JSR popnext                                           ;error checking for next.
00032BEA <AmiBlitz3.ab3@24076>   MOVE.w $C(A2),D0
00032BF0 <AmiBlitz3.ab3@24077>   LEA nextb,A0
00032BF6 <AmiBlitz3.ab3@24078>   LEA nextbf,A1
00032BFA <AmiBlitz3.ab3@24079>   CMP.w #$1,D0
00032BFE <AmiBlitz3.ab3@24080>    BEQ.w JL_0_DC74
00032C04 <AmiBlitz3.ab3@24081>   LEA nextw,A0
00032C0A <AmiBlitz3.ab3@24082>   LEA nextwf,A1
00032C0E <AmiBlitz3.ab3@24083>   CMP.w #$2,D0
00032C12 <AmiBlitz3.ab3@24084>    BEQ.w JL_0_DC74
00032C18 <AmiBlitz3.ab3@24085>   LEA nextl,A0
00032C1E <AmiBlitz3.ab3@24086>   LEA nextlf,A1
00032C22 <AmiBlitz3.ab3@24087>   CMP.w #$5,D0
00032C26 <AmiBlitz3.ab3@24088>    BNE.w JL_0_DC74
00032C2C <AmiBlitz3.ab3@24089>    TST.b fpu
00032C30 <AmiBlitz3.ab3@24090>    BEQ 'old
00032C36 <AmiBlitz3.ab3@24091>    LEA fpu2dats,a0                                         ;fpu next code
00032C3C <AmiBlitz3.ab3@24092>    LEA fpu2date,a1
00032C40 <AmiBlitz3.ab3@24093> BRA JL_0_DC74
00032C44 <AmiBlitz3.ab3@24096>   MOVE.w #$C900,D1
00032C48 <AmiBlitz3.ab3@24097>    BSR.w Atokejsr
00032C4E <AmiBlitz3.ab3@24098>   LEA nextf,A0
00032C54 <AmiBlitz3.ab3@24099>   LEA nextff,A1
00032C5A <AmiBlitz3.ab3@24102>   JSR pokecode
00032C60 <AmiBlitz3.ab3@24103>     TST.b fast                                             ;fast for next deactivate
00032C64 <AmiBlitz3.ab3@24104> BRA 'l1
00032C6A <AmiBlitz3.ab3@24106>     TST.b onestep
00032C6E <AmiBlitz3.ab3@24107>     BEQ 'l1
00032C74 <AmiBlitz3.ab3@24108>     CLR.b onestep
00032C7A <AmiBlitz3.ab3@24109>     SUBQ.l #4,destpointer
00032C7E <AmiBlitz3.ab3@24110>     MOVE.w #$5292,d1
00032C84 <AmiBlitz3.ab3@24111>     JSR writeword
00032C88 <AmiBlitz3.ab3@24114>   MOVE.l JL_0_DCF4(PC),D1
00032C8E <AmiBlitz3.ab3@24115>    JSR writelong
00032C94 <AmiBlitz3.ab3@24116>   MOVEA.l firstfor,A2
00032C9A <AmiBlitz3.ab3@24117>   MOVE.l (A2),firstfor
00032C9E <AmiBlitz3.ab3@24118>   MOVEA.l $8(A2),A0
00032CA4 <AmiBlitz3.ab3@24119>   MOVEA.l destpointer,A1
00032CA6 <AmiBlitz3.ab3@24120>   MOVE.l A1,D1
00032CA8 <AmiBlitz3.ab3@24121>   SUB.l A0,D1
00032CAA <AmiBlitz3.ab3@24122>   ADDQ.l #2,D1
00032CB0 <AmiBlitz3.ab3@24123>   CMP.l #MinWordSgnd,D1
00032CB4 <AmiBlitz3.ab3@24124>    BCC.w JUMP_bigforerr
00032CBA <AmiBlitz3.ab3@24125>   TST.w dontwrite
00032CBE <AmiBlitz3.ab3@24126>    BNE.w JL_0_DCB4
00032CC2 <AmiBlitz3.ab3@24127>   MOVE.w D1,-$2(A0)
00032CC4 <AmiBlitz3.ab3@24130>   MOVE.l A1,D1
00032CC8 <AmiBlitz3.ab3@24131>   SUB.l $4(A2),D1
00032CCA <AmiBlitz3.ab3@24132>   SUBQ.l #6,D1
00032CD0 <AmiBlitz3.ab3@24133>   CMP.l #MinWordSgnd,D1
00032CD4 <AmiBlitz3.ab3@24134>    BCC.w JUMP_bigforerr
00032CDA <AmiBlitz3.ab3@24135>   TST.w dontwrite
00032CDE <AmiBlitz3.ab3@24136>    BNE.w JL_0_DCD6
00032CE0 <AmiBlitz3.ab3@24137>   NEG.w D1
00032CE4 <AmiBlitz3.ab3@24138>   MOVE.w D1,-$2(A1)
00032CEA <AmiBlitz3.ab3@24141>   JSR popnext3
00032CF0 <AmiBlitz3.ab3@24142>   MOVEA.l _execbase,A6
00032CF2 <AmiBlitz3.ab3@24143>   MOVEA.l A2,A1
00032CF4 <AmiBlitz3.ab3@24144>   MOVEQ.l #$00,D0
00032CF8 <AmiBlitz3.ab3@24145>   MOVE.b $10(A1),D0
00032CFE <AmiBlitz3.ab3@24146>   MOVE.l mempool2,a0
00032D02 <AmiBlitz3.ab3@24147>   JSR _FreePooled(A6)
00032D08 <AmiBlitz3.ab3@24148> JMP reget
00032D0E <AmiBlitz3.ab3@24151> JMP notallowd
00032D14 <AmiBlitz3.ab3@24154> JMP bigforerr
00032D18 <AmiBlitz3.ab3@24161>   MOVE.w #$664F,-(A7)
00032D1C <AmiBlitz3.ab3@24164> BRA.w JL_0_DCF4
00032D22 <AmiBlitz3.ab3@24167> JMP error_dublicate_for
00032D26 <AmiBlitz3.ab3@24170> forlineat:   Ds.l 1
00032D28 <AmiBlitz3.ab3@24171> fortemp:     Ds.w 1
00032D2E <AmiBlitz3.ab3@24178>   CLR.l fp0addr
00032D34 <AmiBlitz3.ab3@24179>   TST.w dirmode
00032D38 <AmiBlitz3.ab3@24180>    BNE.w JUMP_baddirerr
00032D42 <AmiBlitz3.ab3@24181>   MOVE.l linenumat,forlineat
00032D48 <AmiBlitz3.ab3@24185>   MOVE.l A5,letstart
00032D4C <AmiBlitz3.ab3@24186>   BSR.w getparameter
00032D52 <AmiBlitz3.ab3@24187>   MOVE.w D2,fortemp
00032D58 <AmiBlitz3.ab3@24188>   JSR findfor
00032D5C <AmiBlitz3.ab3@24189>    BEQ.w JUMP_error_dublicate_for
00032D62 <AmiBlitz3.ab3@24190>   LEA firstfor,A2
00032D68 <AmiBlitz3.ab3@24191>   JSR addhere2
00032D6A <AmiBlitz3.ab3@24192>   MOVE.l A2,-(A7)
00032D70 <AmiBlitz3.ab3@24193>   TST.b debugmode
00032D74 <AmiBlitz3.ab3@24194>    BEQ.b JL_0_DD4C
00032D7A <AmiBlitz3.ab3@24195>   JSR chkstak
00032D80 <AmiBlitz3.ab3@24196>   MOVE.l AJL_0_DCF0,D1
00032D86 <AmiBlitz3.ab3@24197>   JSR  writelong
00032D8A <AmiBlitz3.ab3@24200>   MOVE.w fortemp(PC),D2
00032D92 <AmiBlitz3.ab3@24201>   MOVE.b #1,formode
00032D96 <AmiBlitz3.ab3@24202>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00032D9C <AmiBlitz3.ab3@24203>   CLR.b formode
00032DA0 <AmiBlitz3.ab3@24204>   CMP.w #-$7FE8,D0
00032DA4 <AmiBlitz3.ab3@24205>    BNE.w JUMP_syntaxerr
00032DAA <AmiBlitz3.ab3@24206>   MOVE.w commode,D1
00032DAE <AmiBlitz3.ab3@24207>    BNE.w JUMP_syntaxerr
00032DB2 <AmiBlitz3.ab3@24208>   CMP.b #$6,D2
00032DB6 <AmiBlitz3.ab3@24209>    BCC.w JUMP_badforerr
00032DBA <AmiBlitz3.ab3@24210>   BTST #$F,D2
00032DBE <AmiBlitz3.ab3@24211>    BNE.w JL_0_DD86
00032DC4 <AmiBlitz3.ab3@24212>   MOVE.w leaamp,D1
00032DCA <AmiBlitz3.ab3@24213>   JSR pokewda5s
00032DCC <AmiBlitz3.ab3@24214>   MOVE.w D3,D1
00032DD2 <AmiBlitz3.ab3@24215>   JSR  writeword
00032DD8 <AmiBlitz3.ab3@24218>   MOVE.w pushindex,D1
00032DDE <AmiBlitz3.ab3@24219>   JSR  writeword
00032DE2 <AmiBlitz3.ab3@24220>   ANDI.w #$FF,D2
00032DE4 <AmiBlitz3.ab3@24222>   MOVEA.l (A7),A1
00032DE8 <AmiBlitz3.ab3@24223>   MOVE.w D2,$C(A1)
00032DEA <AmiBlitz3.ab3@24224>   MOVE.w D2,-(A7)
00032DEE <AmiBlitz3.ab3@24225>    BSR.w eval
00032DF4 <AmiBlitz3.ab3@24226>    CLR.b onestep
00032DF8 <AmiBlitz3.ab3@24227>    CMP.w #$8019,d0
00032DFC <AmiBlitz3.ab3@24228>    BEQ 'l1
00032E04 <AmiBlitz3.ab3@24229>    MOVE.b #1,onestep
00032E06 <AmiBlitz3.ab3@24232>   MOVE.w (A7),D2
00032E0C <AmiBlitz3.ab3@24233>   MOVE.w pushd0l,D1
00032E10 <AmiBlitz3.ab3@24234>   CMP.w #$3,D2
00032E14 <AmiBlitz3.ab3@24235>    BCC.w JL_0_DDB6
00032E1A <AmiBlitz3.ab3@24236>   MOVE.w pushd0wd,D1
00032E1C <AmiBlitz3.ab3@24239>    MOVE.w D1,-(A7)
00032E22 <AmiBlitz3.ab3@24240>    TST.b fpu
00032E26 <AmiBlitz3.ab3@24241>    BEQ 'old
00032E2A <AmiBlitz3.ab3@24242>    CMP.b #5,d2
00032E2E <AmiBlitz3.ab3@24243>    BNE 'old
00032E34 <AmiBlitz3.ab3@24244>    MOVE.l #$f2276400,d1
00032E3A <AmiBlitz3.ab3@24246>    JSR writelong
00032E3E <AmiBlitz3.ab3@24247> BRA 'weit
00032E44 <AmiBlitz3.ab3@24250>    JSR  writeword                                          ;fpu for end value
00032E48 <AmiBlitz3.ab3@24253>   CMP.w #-$7FE7,D0
00032E4C <AmiBlitz3.ab3@24254>    BNE.w JL_0_DDCC
00032E50 <AmiBlitz3.ab3@24255>    BSR.w eval
00032E56 <AmiBlitz3.ab3@24256>    TST.b fpu
00032E5A <AmiBlitz3.ab3@24257>    BEQ JL_0_DE0C
00032E5E <AmiBlitz3.ab3@24258>    CMP.b #5,d2
00032E62 <AmiBlitz3.ab3@24259>    BNE JL_0_DE0C
00032E68 <AmiBlitz3.ab3@24260>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00032E6E <AmiBlitz3.ab3@24262>   JSR writelong
00032E70 <AmiBlitz3.ab3@24265>    MOVE.w (a7)+,d1
00032E74 <AmiBlitz3.ab3@24266> BRA fpur
00032E78 <AmiBlitz3.ab3@24269>   CMP.w #$4,D2
00032E7C <AmiBlitz3.ab3@24270>    BCC.w JL_0_DDE0
00032E80 <AmiBlitz3.ab3@24271>   MOVE.w #$7001,D1
00032E86 <AmiBlitz3.ab3@24272>   JSR writeword
00032E8A <AmiBlitz3.ab3@24273> BRA.w JL_0_DE0C
00032E90 <AmiBlitz3.ab3@24276> JMP badforerr
00032E94 <AmiBlitz3.ab3@24279>   BNE.w JL_0_DDFA
00032E98 <AmiBlitz3.ab3@24280>   MOVE.w #$7001,D1
00032E9E <AmiBlitz3.ab3@24281>   JSR writeword
00032EA4 <AmiBlitz3.ab3@24282>   MOVE.w swapd0,D1
00032EAA <AmiBlitz3.ab3@24283>   JSR writeword
00032EAE <AmiBlitz3.ab3@24284> BRA.w JL_0_DE0C
00032EB4 <AmiBlitz3.ab3@24287>   TST.b fpu
00032EB8 <AmiBlitz3.ab3@24288>    BEQ 'old
00032EBC <AmiBlitz3.ab3@24289>   CMP.b #5,d2
00032EC0 <AmiBlitz3.ab3@24290>    BNE 'old
00032EC6 <AmiBlitz3.ab3@24291>   MOVE.l #$f23c5000,d1
00032ECC <AmiBlitz3.ab3@24292>   JSR writelong
00032ED0 <AmiBlitz3.ab3@24293>   MOVE.w #$1,d1
00032ED6 <AmiBlitz3.ab3@24294>   JSR writeword
00032EDC <AmiBlitz3.ab3@24295>   MOVE.l #$f2276400,d1
00032EE2 <AmiBlitz3.ab3@24296>   JSR writelong
00032EE4 <AmiBlitz3.ab3@24297>   MOVE.w (a7)+,d1
00032EE8 <AmiBlitz3.ab3@24298> BRA fpur
00032EEC <AmiBlitz3.ab3@24301>   MOVE.w #$203C,D1                                         ;write step 1
00032EF2 <AmiBlitz3.ab3@24302>   JSR writeword
00032EF8 <AmiBlitz3.ab3@24303>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
00032EFE <AmiBlitz3.ab3@24304>   JSR writelong
00032F00 <AmiBlitz3.ab3@24307>   MOVE.w (A7)+,D1
00032F06 <AmiBlitz3.ab3@24308>   JSR writeword                                            ;push step on stack
00032F08 <AmiBlitz3.ab3@24311>   MOVE.w (A7)+,D2
00032F0A <AmiBlitz3.ab3@24312>   MOVEA.l (A7),A1
00032F12 <AmiBlitz3.ab3@24313>   MOVE.l destpointer,$4(A1)
00032F18 <AmiBlitz3.ab3@24314>   LEA forcompb,A0
00032F1E <AmiBlitz3.ab3@24315>   LEA forcompbf,A1
00032F22 <AmiBlitz3.ab3@24316>   CMP.w #$1,D2
00032F26 <AmiBlitz3.ab3@24317>    BEQ.w JL_0_DE7E
00032F2C <AmiBlitz3.ab3@24318>   LEA forcompw,A0
00032F32 <AmiBlitz3.ab3@24319>   LEA forcompwf,A1
00032F36 <AmiBlitz3.ab3@24320>   CMP.w #$2,D2
00032F3A <AmiBlitz3.ab3@24321>    BEQ.w JL_0_DE7E
00032F40 <AmiBlitz3.ab3@24322>   LEA forcompl,A0
00032F46 <AmiBlitz3.ab3@24323>   LEA forcomplf,A1
00032F4A <AmiBlitz3.ab3@24324>   CMP.w #$5,D2
00032F4E <AmiBlitz3.ab3@24325>    BNE.w JL_0_DE7E
00032F54 <AmiBlitz3.ab3@24326>   TST.b fpu
00032F58 <AmiBlitz3.ab3@24327>    BEQ 'old
00032F5E <AmiBlitz3.ab3@24328>   LEA fpu_start,a0
00032F64 <AmiBlitz3.ab3@24329>   LEA fpu_end,a1
00032F6A <AmiBlitz3.ab3@24330>   JSR pokecode
00032F6E <AmiBlitz3.ab3@24331> BRA fpu3
00032F74 <AmiBlitz3.ab3@24334>   LEA forcompf,A0                                         ;
00032F7A <AmiBlitz3.ab3@24335>   LEA forcompff,A1
00032F80 <AmiBlitz3.ab3@24336>   JSR pokecode
00032F84 <AmiBlitz3.ab3@24337>   MOVE.w #$C900,D1
00032F88 <AmiBlitz3.ab3@24338>   BSR.w Atokejsr
00032F8E <AmiBlitz3.ab3@24339>   LEA forcompf2,A0
00032F94 <AmiBlitz3.ab3@24340>   LEA forcompf2f,A1
00032F9A <AmiBlitz3.ab3@24343>   JSR pokecode
00032FA0 <AmiBlitz3.ab3@24344>   TST.b fast                                               ;fast for next
00032FA4 <AmiBlitz3.ab3@24345>    BEQ 's1
00032FA8 <AmiBlitz3.ab3@24346>   CMP.w #3,d2
00032FAC <AmiBlitz3.ab3@24347>    BNE 's1
00032FB2 <AmiBlitz3.ab3@24348>   TST.b onestep
00032FB6 <AmiBlitz3.ab3@24349>    BEQ 's1
00032FC0 <AmiBlitz3.ab3@24350>   SUB.l #10,destpointer
00032FC4 <AmiBlitz3.ab3@24351>   MOVE.w #$b081,d1
00032FCA <AmiBlitz3.ab3@24352>   JSR writeword
00032FCE <AmiBlitz3.ab3@24356>   MOVE.l thebgt(PC),D1
00032FD4 <AmiBlitz3.ab3@24357>   JSR writelong
00032FD6 <AmiBlitz3.ab3@24360>   MOVEA.l (A7)+,A1
00032FDE <AmiBlitz3.ab3@24361>   MOVE.l destpointer,$8(A1)
00032FE4 <AmiBlitz3.ab3@24362> JMP reget
00032FE8 <AmiBlitz3.ab3@24365>   MOVEA.l 8(a7),a2
00032FEC <AmiBlitz3.ab3@24366>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00032FF2 <AmiBlitz3.ab3@24367>   fmove.s 4(a7),fp1
00032FF6 <AmiBlitz3.ab3@24368>   BTST.b #7,(a7)
00032FFA <AmiBlitz3.ab3@24369>   BNE 'negi
00032FFE <AmiBlitz3.ab3@24370>   fcmp.x fp1,fp0
00033002 <AmiBlitz3.ab3@24371> BRA 'negi2
00033006 <AmiBlitz3.ab3@24374>   fcmp.x fp0,fp1
0003300A <AmiBlitz3.ab3@24377>   Dc.l $f2920000                                           ;fbgt.w
0003300E <AmiBlitz3.ab3@24381>   BGT.w thebgt
00033014 <AmiBlitz3.ab3@24384>   MOVE.l A5,letstart
00033018 <AmiBlitz3.ab3@24385>   BSR.w getparameter
00033022 <AmiBlitz3.ab3@24391>   MOVE.l destpointer,pushpc
0003302C <AmiBlitz3.ab3@24392>   MOVE.l hunkoffsetbase,pushoff
00033032 <AmiBlitz3.ab3@24393>   CLR.l rightsidetype
0003303A <AmiBlitz3.ab3@24394>   MOVE.w #$0001,regnum
00033040 <AmiBlitz3.ab3@24395>   JSR JL_0_8E3C
00033046 <AmiBlitz3.ab3@24396>   JSR calcvar
0003304C <AmiBlitz3.ab3@24397>   TST.b formode
00033050 <AmiBlitz3.ab3@24398>   BEQ 'lf1
00033056 <AmiBlitz3.ab3@24399>   CMP.l #newtype_double,A2
0003305A <AmiBlitz3.ab3@24400>   BEQ JUMP_notallowd
00033060 <AmiBlitz3.ab3@24401>   MOVE.l a2,currtype
00033066 <AmiBlitz3.ab3@24404>   CLR.w startoffsetmore
0003306A <AmiBlitz3.ab3@24405>   CMP.w #$3d,d0
0003306E <AmiBlitz3.ab3@24406>   BNE 'l1a
00033072 <AmiBlitz3.ab3@24407>   BTST #15,d2
00033076 <AmiBlitz3.ab3@24408>   BEQ 'l1a
0003307A <AmiBlitz3.ab3@24409>   CMP.b #1,d2
0003307E <AmiBlitz3.ab3@24410>   BNE 'l1a
00033088 <AmiBlitz3.ab3@24411>   MOVE.w leaa0a0+2,startoffsetmore
0003308E <AmiBlitz3.ab3@24414>   CLR.w regnum
00033092 <AmiBlitz3.ab3@24415>   BSR.w JL_0_B5D2
00033098 <AmiBlitz3.ab3@24416>   CLR.w commode
0003309E <AmiBlitz3.ab3@24417>   CLR.w stackcorrect
000330A4 <AmiBlitz3.ab3@24418>   CLR.w pcodd
000330AA <AmiBlitz3.ab3@24419>   MOVE.w startoffsetmore,d1
000330AE <AmiBlitz3.ab3@24420>   BTST #0,d1
000330B2 <AmiBlitz3.ab3@24421>   BEQ 'l2a
000330BA <AmiBlitz3.ab3@24422>   MOVE.w #1,pcodd
000330BE <AmiBlitz3.ab3@24425>   CMP.w #$3D,D0                                            ;=
000330C2 <AmiBlitz3.ab3@24426>   BEQ.w JL_0_DEE0
000330C4 <AmiBlitz3.ab3@24429>   MOVE.b (a5)+,d1
000330C8 <AmiBlitz3.ab3@24430>   BEQ 'l10
000330CC <AmiBlitz3.ab3@24431>   CMP.b #":",d1
000330D0 <AmiBlitz3.ab3@24432>   BEQ 'l10
000330D4 <AmiBlitz3.ab3@24433>   CMP.b #";",d1
000330D8 <AmiBlitz3.ab3@24434>   BEQ 'l10
000330DC <AmiBlitz3.ab3@24435>   CMP.b #"0",d1
000330E0 <AmiBlitz3.ab3@24436>   BLT 'l11
000330E4 <AmiBlitz3.ab3@24437>   CMP.b #"9",d1
000330E8 <AmiBlitz3.ab3@24438>   BGT 'l11
000330EC <AmiBlitz3.ab3@24439> BRA.s 'l1
000330F4 <AmiBlitz3.ab3@24442>   MOVE.b #1,quickadd
000330FA <AmiBlitz3.ab3@24445>   MOVEA.l letstart,A5
000330FC <AmiBlitz3.ab3@24446>   SUBQ.w #1,A5
00033100 <AmiBlitz3.ab3@24449>   CMP.b #$7,D2
00033104 <AmiBlitz3.ab3@24450>    BNE.w JL_0_DF8A
00033108 <AmiBlitz3.ab3@24456>   MOVEM.w D2-D3,-(A7)
0003310E <AmiBlitz3.ab3@24457>   MOVE.l lastoffset_org,-(A7)
00033114 <AmiBlitz3.ab3@24458>   MOVE.w varmode,-(A7)
0003311E <AmiBlitz3.ab3@24460>    MOVE.l #forthstack,forthsp
00033128 <AmiBlitz3.ab3@24461>    MOVE.l #precstack,precsp
0003312E <AmiBlitz3.ab3@24462>    CLR.w regnum
00033134 <AmiBlitz3.ab3@24463>    CLR.w nonew
0003313A <AmiBlitz3.ab3@24464>    CLR.w sbasegot
00033144 <AmiBlitz3.ab3@24465>    MOVE.w varcodelen,oldvcodelen
0003314A <AmiBlitz3.ab3@24466>    CLR.w varcodelen
00033152 <AmiBlitz3.ab3@24467>    MOVE.w #$FFFF,lasta6
00033154 <AmiBlitz3.ab3@24470>   MOVEQ.l #$07,D2
00033158 <AmiBlitz3.ab3@24471>    BSR.w eval
0003315E <AmiBlitz3.ab3@24472>   MOVE.w (A7)+,varmode
00033164 <AmiBlitz3.ab3@24473>   MOVE.l (A7)+,lastoffset_org
0003316A <AmiBlitz3.ab3@24474>   MOVE.w moved0a3,D1
00033170 <AmiBlitz3.ab3@24475>    JSR writeword
00033176 <AmiBlitz3.ab3@24476>   MOVE.w commode,D1
0003317A <AmiBlitz3.ab3@24477>    BEQ.w JL_0_DF38
00033180 <AmiBlitz3.ab3@24478>   LEA pulla2st,A0
00033186 <AmiBlitz3.ab3@24479>   LEA pulla2stf,A1
0003318C <AmiBlitz3.ab3@24480>    JSR pokecode
00033190 <AmiBlitz3.ab3@24481> BRA.w JL_0_DF3C
00033194 <AmiBlitz3.ab3@24484>   BSR.w JL_0_B63C
00033198 <AmiBlitz3.ab3@24487>   MOVEM.w (A7)+,D2-D3
0003319C <AmiBlitz3.ab3@24488>   BTST #$F,D2
000331A0 <AmiBlitz3.ab3@24489>   BNE.w JL_0_DF58
000331A6 <AmiBlitz3.ab3@24490>     MOVE.w D3,leaa5d3a2+2
000331AC <AmiBlitz3.ab3@24491>     MOVE.l leaa5d3a2,D1
000331B2 <AmiBlitz3.ab3@24492>     JSR pokela5s
000331B6 <AmiBlitz3.ab3@24495>   MOVE.w #$FE6F,D1
000331BC <AmiBlitz3.ab3@24496>   JSR uselib
000331C2 <AmiBlitz3.ab3@24497>   MOVE.l #$C700,D1
000331C8 <AmiBlitz3.ab3@24498>   MOVE.l d1,lastinstruction
000331CE <AmiBlitz3.ab3@24499>   MOVE.w varmode,D2
000331D2 <AmiBlitz3.ab3@24500>   BNE.w JL_0_DF70
000331D4 <AmiBlitz3.ab3@24501>     ADDQ.w #1,D1
000331D8 <AmiBlitz3.ab3@24504>   BSR.w Atokejsr
000331DC <AmiBlitz3.ab3@24505>   CMP.w #$2C,D0
000331E0 <AmiBlitz3.ab3@24506>   BNE.w JL_0_E0C6
000331E6 <AmiBlitz3.ab3@24508>   MOVE.w addq4a2,D1
000331EC <AmiBlitz3.ab3@24509>   JSR writeword
000331F0 <AmiBlitz3.ab3@24510> BRA.w JL_0_E018
000331F6 <AmiBlitz3.ab3@24513> JMP error4char
000331FC <AmiBlitz3.ab3@24516> JMP error_convert_types
00033200 <AmiBlitz3.ab3@24520>    BTST #$E,D2
00033204 <AmiBlitz3.ab3@24521>    BNE.w JL_0_DF9C
00033206 <AmiBlitz3.ab3@24522>   TST.b D2
0003320A <AmiBlitz3.ab3@24523>    BEQ.w JUMP_noleterr
00033210 <AmiBlitz3.ab3@24524>    TST.b newsyntax
00033214 <AmiBlitz3.ab3@24525>    BEQ JL_0_DFA0
00033218 <AmiBlitz3.ab3@24528>    CMP.w #$4022,(a5)
0003321C <AmiBlitz3.ab3@24529>    BNE JL_0_DFA0
00033222 <AmiBlitz3.ab3@24530>    CMP.l #3,d2
00033226 <AmiBlitz3.ab3@24531>    BNE  JUMP_error_convert_types
00033228 <AmiBlitz3.ab3@24532>    ADDQ #2,a5
0003322A <AmiBlitz3.ab3@24533>    MOVEQ #0,d0
0003322C <AmiBlitz3.ab3@24534>    MOVE.b (a5)+,d0
00033230 <AmiBlitz3.ab3@24535>    BEQ JL_0_DFA0
00033234 <AmiBlitz3.ab3@24536>    CMP.b #$22,d0
00033238 <AmiBlitz3.ab3@24537>    BNE 'l1
0003323C <AmiBlitz3.ab3@24538>    MOVE.b #0,d0
00033240 <AmiBlitz3.ab3@24539> BRA 'do
00033242 <AmiBlitz3.ab3@24542>   ASL.l #8,d0
00033244 <AmiBlitz3.ab3@24543>    MOVE.b (a5)+,d0
00033248 <AmiBlitz3.ab3@24544>    BEQ JL_0_DFA0
0003324C <AmiBlitz3.ab3@24545>    CMP.b #$22,d0
00033250 <AmiBlitz3.ab3@24546>    BNE 'l2
00033254 <AmiBlitz3.ab3@24547>    MOVE.b #0,d0
00033256 <AmiBlitz3.ab3@24548>    ASR.l #8,d0
0003325A <AmiBlitz3.ab3@24549> BRA 'do
0003325C <AmiBlitz3.ab3@24552>   ASL.l #8,d0
0003325E <AmiBlitz3.ab3@24553>     MOVE.b (a5)+,d0
00033262 <AmiBlitz3.ab3@24554>    BEQ JL_0_DFA0
00033266 <AmiBlitz3.ab3@24555>    CMP.b #$22,d0
0003326A <AmiBlitz3.ab3@24556>    BNE 'l3
0003326E <AmiBlitz3.ab3@24557>    MOVE.b #0,d0
00033270 <AmiBlitz3.ab3@24558>    ASR.l #8,d0
00033274 <AmiBlitz3.ab3@24559> BRA 'do
00033276 <AmiBlitz3.ab3@24562>   ASL.l #8,d0
00033278 <AmiBlitz3.ab3@24563>     MOVE.b (a5)+,d0
0003327C <AmiBlitz3.ab3@24564>    BEQ JL_0_DFA0
00033280 <AmiBlitz3.ab3@24565>    CMP.b #$22,d0
00033284 <AmiBlitz3.ab3@24566>    BNE 'l4
00033288 <AmiBlitz3.ab3@24567>    MOVE.b #0,d0
0003328A <AmiBlitz3.ab3@24568>    ASR.l #8,d0
0003328E <AmiBlitz3.ab3@24569> BRA 'do
00033292 <AmiBlitz3.ab3@24572>    CMP.b #$22,(a5)+
00033296 <AmiBlitz3.ab3@24573>    BNE JUMP_error4char
0003329A <AmiBlitz3.ab3@24576>   MOVE.w #$2b7c,d1
000332A0 <AmiBlitz3.ab3@24577>    TST.w varmode
000332A4 <AmiBlitz3.ab3@24578>    BEQ 'g3
000332A8 <AmiBlitz3.ab3@24579>    BCLR #9,d1
000332AE <AmiBlitz3.ab3@24582>     JSR writeword
000332B0 <AmiBlitz3.ab3@24583>     MOVE.l d0,d1
000332B6 <AmiBlitz3.ab3@24584>     JSR writelong
000332B8 <AmiBlitz3.ab3@24585>     MOVE.w d3,d1
000332BE <AmiBlitz3.ab3@24586>     JSR writeword
000332C4 <AmiBlitz3.ab3@24587>     JSR get1bytemain
000332C6 <AmiBlitz3.ab3@24588> RTS
000332CC <AmiBlitz3.ab3@24594> JMP noleterr
000332D2 <AmiBlitz3.ab3@24598>   MOVE.w d2,vartype
000332D6 <AmiBlitz3.ab3@24599>   MOVE.b #$3,D2
000332DA <AmiBlitz3.ab3@24602>   CMP.b #5,d2
000332DE <AmiBlitz3.ab3@24603>   BNE 'l1
000332E4 <AmiBlitz3.ab3@24604>   MOVE.l a2,currtype
000332E8 <AmiBlitz3.ab3@24608>   MOVEM.w D2-D3,-(A7)
000332EE <AmiBlitz3.ab3@24609>   MOVE.w varmode,-(A7)
000332F4 <AmiBlitz3.ab3@24610>   MOVE.l a2,leftsidetype
000332F8 <AmiBlitz3.ab3@24611>   BTST #$f,d2
000332FC <AmiBlitz3.ab3@24612>   BEQ 'nomultiassign
00033302 <AmiBlitz3.ab3@24613>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033306 <AmiBlitz3.ab3@24614> 'nomultiassign  ANDI.w #$FF,D2
0003330C <AmiBlitz3.ab3@24615>   MOVE.l lastoffset_org,-(A7)
00033310 <AmiBlitz3.ab3@24616>   BSR.w eval                                ; calc right side of var assign
00033314 <AmiBlitz3.ab3@24618>   MOVEM.l a0/a1,-(a7)
0003331A <AmiBlitz3.ab3@24619>   MOVE.l leftsidetype,a0
00033320 <AmiBlitz3.ab3@24620>   CMP.l #0,a0
00033324 <AmiBlitz3.ab3@24621>   BEQ 'nocheck
0003332C <AmiBlitz3.ab3@24622>   CMP.l #$100,4(a0)
00033330 <AmiBlitz3.ab3@24623>   BLE 'nocheck
00033336 <AmiBlitz3.ab3@24624>   TST.l typetocast
0003333A <AmiBlitz3.ab3@24625>   BEQ 'nocast
00033340 <AmiBlitz3.ab3@24626>   MOVE.l typetocast,a1
00033344 <AmiBlitz3.ab3@24627>   BRA 'typecheck
0003334A <AmiBlitz3.ab3@24628> 'nocast  TST.l rightsidetype
0003334E <AmiBlitz3.ab3@24629>   BEQ 'nocheck
00033354 <AmiBlitz3.ab3@24630>   MOVE.l rightsidetype,a1
0003335C <AmiBlitz3.ab3@24631>   CMP.l #$100,4(a1)
00033360 <AmiBlitz3.ab3@24632>   BGE 'typecheck
00033368 <AmiBlitz3.ab3@24633>   CMP.l #$3,4(a1)
0003336C <AmiBlitz3.ab3@24634>   BEQ 'ok                              ;long assign is allow with this codelines
00033370 <AmiBlitz3.ab3@24635>   BRA 'error
00033376 <AmiBlitz3.ab3@24637>   TST.b typecheck
0003337A <AmiBlitz3.ab3@24638>   BEQ 'nocheck
00033380 <AmiBlitz3.ab3@24639>   TST.b notypecheck
00033384 <AmiBlitz3.ab3@24640>   BNE 'ok
00033386 <AmiBlitz3.ab3@24641>   CMP.l a0,a1
0003338A <AmiBlitz3.ab3@24642>   BEQ 'ok
0003338E <AmiBlitz3.ab3@24644>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033392 <AmiBlitz3.ab3@24645>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033396 <AmiBlitz3.ab3@24646>   BEQ 'ok
0003339C <AmiBlitz3.ab3@24648>  JMP   error_convert_types     ;for syntax 4  = typecheck
000333A2 <AmiBlitz3.ab3@24651>    CLR.l typetocast
000333A6 <AmiBlitz3.ab3@24652>    MOVEM.l (a7)+, a0/a1
000333AC <AmiBlitz3.ab3@24653>   MOVE.l (A7)+,lastoffset_org
000333B2 <AmiBlitz3.ab3@24654>   MOVE.w commode,D1
000333B6 <AmiBlitz3.ab3@24655>    BNE.w JL_0_DFCC
000333BA <AmiBlitz3.ab3@24656>    BSR.w JL_0_B63C
000333C0 <AmiBlitz3.ab3@24659>   MOVE.w (A7)+,varmode
000333C4 <AmiBlitz3.ab3@24660>   MOVEM.w (A7)+,D2-D3
000333C8 <AmiBlitz3.ab3@24662>   MOVE.w #$2B40,D1
000333CE <AmiBlitz3.ab3@24663>   MOVE.w varmode,D4
000333D2 <AmiBlitz3.ab3@24664>    BEQ.w JL_0_DFE8
000333D6 <AmiBlitz3.ab3@24665>   BCLR #$9,D1
000333DA <AmiBlitz3.ab3@24668>   BTST #$F,D2
000333DE <AmiBlitz3.ab3@24669>    BEQ.w JL_0_E090
000333E4 <AmiBlitz3.ab3@24670>    TST.b stackcorrect
000333E8 <AmiBlitz3.ab3@24671>    BNE 'st1
000333EE <AmiBlitz3.ab3@24672>   MOVE.w commode,D1
000333F2 <AmiBlitz3.ab3@24673>    BEQ.w JL_0_E004
000333F8 <AmiBlitz3.ab3@24676>   MOVE.w pulla2,D1
000333FE <AmiBlitz3.ab3@24677>    JSR writeword
00033402 <AmiBlitz3.ab3@24680>   MOVE.w #$2480,D1
00033406 <AmiBlitz3.ab3@24681>    MOVEM.l a0/d0,-(a7)
0003340C <AmiBlitz3.ab3@24682>    MOVEA.l lastoffset_org,A0
0003340E <AmiBlitz3.ab3@24683>    MOVE.l A0,D0
00033412 <AmiBlitz3.ab3@24684>    BEQ.w 'skip
00033414 <AmiBlitz3.ab3@24685>    MOVEA.l D0,A0
0003341C <AmiBlitz3.ab3@24686>    MOVE.l $A(A0),currtype
00033420 <AmiBlitz3.ab3@24689>   MOVEM.l (a7)+,a0/d0
00033424 <AmiBlitz3.ab3@24690>   CMP.w #$2C,D0
00033428 <AmiBlitz3.ab3@24691>    BNE.w JL_0_E090
0003342C <AmiBlitz3.ab3@24692>     MOVE.w #$24C0,D1
00033430 <AmiBlitz3.ab3@24693>    BSR.w JL_0_E090                                         ;write store
00033436 <AmiBlitz3.ab3@24696>    MOVE.l lastoffset_org,D0
0003343E <AmiBlitz3.ab3@24700>   MOVE.w #$FFFF,commode
00033444 <AmiBlitz3.ab3@24701>   CLR.w varcodelen
0003344C <AmiBlitz3.ab3@24702>   MOVE.b #1,optiarray
00033452 <AmiBlitz3.ab3@24703>   MOVE.w pusha2,D1
00033458 <AmiBlitz3.ab3@24704>    JSR writeword
0003345E <AmiBlitz3.ab3@24705>   TST.l lastoffset_org
00033462 <AmiBlitz3.ab3@24706>   BEQ dimmore
00033468 <AmiBlitz3.ab3@24707>   MOVEA.l lastoffset_org,A0
0003346A <AmiBlitz3.ab3@24708>   MOVE.l (A0),D0
0003346E <AmiBlitz3.ab3@24709>    BEQ.w JUMP_comerr
00033470 <AmiBlitz3.ab3@24710>   MOVEA.l D0,A0
00033476 <AmiBlitz3.ab3@24711>   MOVE.l A0,lastoffset_org
0003347C <AmiBlitz3.ab3@24712>   BTST #$1,$7(A0)
00033480 <AmiBlitz3.ab3@24713>    BNE.w JUMP_nocomerr
00033484 <AmiBlitz3.ab3@24714>   MOVEA.l $A(A0),A1
00033488 <AmiBlitz3.ab3@24715>   MOVE.l $4(A1),D2
0003348E <AmiBlitz3.ab3@24718>   BTST #$0,$7(A0)
00033492 <AmiBlitz3.ab3@24719>    BNE.w JL_0_E078
00033498 <AmiBlitz3.ab3@24720>   CMP.l #$100,D2
0003349C <AmiBlitz3.ab3@24721>    BCC.l JUMP_nocomerr
000334A0 <AmiBlitz3.ab3@24722> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
000334A6 <AmiBlitz3.ab3@24725>         CLR.b optiarray
000334AA <AmiBlitz3.ab3@24726>         CMP.w #"@@",(a5)
000334AE <AmiBlitz3.ab3@24727>         BEQ 'n1
000334B2 <AmiBlitz3.ab3@24728> BRA 'd1
000334B8 <AmiBlitz3.ab3@24731>   JSR nextline
000334BA <AmiBlitz3.ab3@24732>         MOVE.l a5,-(a7)
000334BC <AmiBlitz3.ab3@24735>   MOVE.b (a5)+,d0
000334C0 <AmiBlitz3.ab3@24736>         CMP.b #$20,d0
000334C4 <AmiBlitz3.ab3@24737>         BEQ 'l2
000334C6 <AmiBlitz3.ab3@24738>         MOVE.l (a7)+,a5
000334CA <AmiBlitz3.ab3@24739>         CMP.b #";",d0
000334CE <AmiBlitz3.ab3@24740>         BEQ 'n1
000334D4 <AmiBlitz3.ab3@24743>         TST.w debugmode
000334D8 <AmiBlitz3.ab3@24744>         BEQ JL_0_DEE0
000334DA <AmiBlitz3.ab3@24745>         MOVE.l a0,-(a7)
000334E0 <AmiBlitz3.ab3@24746>         MOVE.l pushat,a0
000334E6 <AmiBlitz3.ab3@24747>         CMP.l #0,a0
000334EA <AmiBlitz3.ab3@24748>         BNE 'o1
000334EE <AmiBlitz3.ab3@24749> BRA 'skip
000334F6 <AmiBlitz3.ab3@24752>         ADD.l #1,2(a0)
000334FC <AmiBlitz3.ab3@24755>   CLR.w commode
00033504 <AmiBlitz3.ab3@24756>         MOVE.b #1,stackcorrect
00033506 <AmiBlitz3.ab3@24757>         MOVE.l (a7)+,a0
0003350C <AmiBlitz3.ab3@24758> JMP JL_0_DEE0
00033512 <AmiBlitz3.ab3@24761> JMP nocomerr
00033518 <AmiBlitz3.ab3@24764>   CMP.l #$100,D2
0003351C <AmiBlitz3.ab3@24765>    BCS.w JL_0_E084
0003351E <AmiBlitz3.ab3@24766>   MOVEQ.l #$00,D2
00033522 <AmiBlitz3.ab3@24769>   BSET #$E,D2
00033526 <AmiBlitz3.ab3@24772>   BSET #$F,D2
0003352A <AmiBlitz3.ab3@24773> BRA.w JL_0_DEE0
00033530 <AmiBlitz3.ab3@24776>    MOVE.l destpointer,a4
00033538 <AmiBlitz3.ab3@24777>    MOVE.l #$f22a6400,-4(a4)
0003353E <AmiBlitz3.ab3@24778>    MOVE.w arrayoffset,d1
00033544 <AmiBlitz3.ab3@24779> JMP writeword
0003354A <AmiBlitz3.ab3@24782> JMP comerr
00033550 <AmiBlitz3.ab3@24785>    TST.b fpu
00033554 <AmiBlitz3.ab3@24786>    BEQ 'nofloat
00033558 <AmiBlitz3.ab3@24787>    CMP.b #5,d2
0003355C <AmiBlitz3.ab3@24788>    BNE 'nofloat
00033562 <AmiBlitz3.ab3@24789>    CLR.w fp0var
00033568 <AmiBlitz3.ab3@24790>    LEA regtable,a4
0003356A <AmiBlitz3.ab3@24791>    TST.l (a4)
0003356E <AmiBlitz3.ab3@24792>    BEQ 'noreg
00033572 <AmiBlitz3.ab3@24793>    BTST #15,d2                                             ;regvars
00033576 <AmiBlitz3.ab3@24794>    BNE 'noreg
0003357A <AmiBlitz3.ab3@24795>    CMP.w 0+4(a4),d3
0003357E <AmiBlitz3.ab3@24796>    BNE 'doreg1
00033584 <AmiBlitz3.ab3@24797>    MOVE.l #$f2000380,d1
0003358A <AmiBlitz3.ab3@24798>    MOVE.w regnum,d0
0003358E <AmiBlitz3.ab3@24799>    BNE 'noopt
00033594 <AmiBlitz3.ab3@24805>    MOVE.l destpointer,a4
0003359C <AmiBlitz3.ab3@24806>    CMP.l #$f2001c80,-8(a4)
000335A0 <AmiBlitz3.ab3@24807>    BNE 'noopt
000335A8 <AmiBlitz3.ab3@24808>    CMP.l #$f2000422,-4(a4)
000335AC <AmiBlitz3.ab3@24809>    BNE 'noopt
000335B2 <AmiBlitz3.ab3@24810>    MOVE.l #$f20003a2,d1
000335BC <AmiBlitz3.ab3@24811>    SUB.l #8,destpointer
000335BE <AmiBlitz3.ab3@24814>    ASL.w #7,d0
000335C0 <AmiBlitz3.ab3@24815>    OR.w d0,d1
000335C6 <AmiBlitz3.ab3@24816>    JSR writelong
000335C8 <AmiBlitz3.ab3@24817> RTS
000335CC <AmiBlitz3.ab3@24820>   CMP.w 8+4(a4),d3
000335D0 <AmiBlitz3.ab3@24821>    BNE 'doreg2
000335D6 <AmiBlitz3.ab3@24822>    MOVE.l #$f2000300,d1
000335DC <AmiBlitz3.ab3@24823>    MOVE.w regnum,d0
000335DE <AmiBlitz3.ab3@24824>    ASL.w #7,d0
000335E0 <AmiBlitz3.ab3@24825>    OR.w d0,d1
000335E6 <AmiBlitz3.ab3@24826>    JSR writelong
000335E8 <AmiBlitz3.ab3@24827> RTS
000335EC <AmiBlitz3.ab3@24830>   CMP.w 16+4(a4),d3
000335F0 <AmiBlitz3.ab3@24831>    BNE 'doreg3
000335F6 <AmiBlitz3.ab3@24832>    MOVE.l #$f2000280,d1
000335FC <AmiBlitz3.ab3@24833>    MOVE.w regnum,d0
000335FE <AmiBlitz3.ab3@24834>    ASL.w #7,d0
00033600 <AmiBlitz3.ab3@24835>    OR.w d0,d1
00033606 <AmiBlitz3.ab3@24836>    JSR  writelong
00033608 <AmiBlitz3.ab3@24837>  RTS
0003360C <AmiBlitz3.ab3@24840>   CMP.w 24+4(a4),d3
00033610 <AmiBlitz3.ab3@24841>    BNE 'doreg4
00033616 <AmiBlitz3.ab3@24842>    MOVE.l #$f2000200,d1
0003361C <AmiBlitz3.ab3@24843>    MOVE.w regnum,d0
0003361E <AmiBlitz3.ab3@24844>    ASL.w #7,d0
00033620 <AmiBlitz3.ab3@24845>    OR.w d0,d1
00033626 <AmiBlitz3.ab3@24846>    JSR writelong
00033628 <AmiBlitz3.ab3@24847> RTS
0003362C <AmiBlitz3.ab3@24850>   CMP.w 32+4(a4),d3
00033630 <AmiBlitz3.ab3@24851>    BNE 'noreg
00033636 <AmiBlitz3.ab3@24852>    MOVE.l #$f2000180,d1
0003363C <AmiBlitz3.ab3@24853>    MOVE.w regnum,d0
0003363E <AmiBlitz3.ab3@24854>    ASL.w #7,d0
00033640 <AmiBlitz3.ab3@24855>    OR.w d0,d1
00033646 <AmiBlitz3.ab3@24856>    JSR writelong
00033648 <AmiBlitz3.ab3@24857> RTS
0003364E <AmiBlitz3.ab3@24860>    TST.w regnum
00033652 <AmiBlitz3.ab3@24861>    BNE 'nofp0
00033658 <AmiBlitz3.ab3@24862>    MOVE.l destpointer ,a4
00033660 <AmiBlitz3.ab3@24863>    CMP.l #$f2304400,-6(a4)
00033664 <AmiBlitz3.ab3@24864>    BNE 'do
0003366A <AmiBlitz3.ab3@24865>    CMP.w #$1990,-2(a4)
0003366E <AmiBlitz3.ab3@24866>    BNE 'do
00033672 <AmiBlitz3.ab3@24867>    BTST #15,d2                                             ;types ?
00033676 <AmiBlitz3.ab3@24868>    BNE 'do
0003367C <AmiBlitz3.ab3@24869>   MOVE.l #$2b701990,d1                                     ;var
00033682 <AmiBlitz3.ab3@24870>   TST.w varmode
00033686 <AmiBlitz3.ab3@24871>   BEQ 'glob1
0003368A <AmiBlitz3.ab3@24872>   BCLR #25,d1
0003368E <AmiBlitz3.ab3@24875>   MOVE.l d1,-6(a4)
00033692 <AmiBlitz3.ab3@24876>   MOVE.w d3,-2(a4)
00033698 <AmiBlitz3.ab3@24877>   CLR.w fp0var
000336A0 <AmiBlitz3.ab3@24878>   MOVE.w #$ffff,fp0mode
000336A2 <AmiBlitz3.ab3@24879> RTS
000336AA <AmiBlitz3.ab3@24882>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000336AE <AmiBlitz3.ab3@24883>    BNE 'do3
000336B8 <AmiBlitz3.ab3@24884>    CMP.l #newtype_double,currtype
000336BC <AmiBlitz3.ab3@24885>    BEQ 'do4
000336C0 <AmiBlitz3.ab3@24888>   MOVE.w #$2b6d,d1
000336C6 <AmiBlitz3.ab3@24889>    TST.w varmode
000336CA <AmiBlitz3.ab3@24890>    BEQ 'g2
000336CE <AmiBlitz3.ab3@24891>     BCLR #9,d1
000336D2 <AmiBlitz3.ab3@24894>     CMP.w #$2b6d,d1
000336D6 <AmiBlitz3.ab3@24895>     BNE 'd1
000336DA <AmiBlitz3.ab3@24896>     CMP.w -2(a4),d3
000336DE <AmiBlitz3.ab3@24897>     BNE 'd1
000336E4 <AmiBlitz3.ab3@24898>     SUBQ.l #6,destpointer
000336E8 <AmiBlitz3.ab3@24899> BRA 'd12
000336EC <AmiBlitz3.ab3@24902>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000336F2 <AmiBlitz3.ab3@24903>     MOVE.w -2(a4),-4(a4)
000336F6 <AmiBlitz3.ab3@24904>     MOVE.w d3,-2(a4)
000336FC <AmiBlitz3.ab3@24907>   CLR.w fp0var
00033704 <AmiBlitz3.ab3@24908>     MOVE.w #$ffff,fp0mode
00033706 <AmiBlitz3.ab3@24909> RTS
0003370E <AmiBlitz3.ab3@24912>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00033712 <AmiBlitz3.ab3@24913>    BNE 'do4
00033716 <AmiBlitz3.ab3@24914>    MOVE.w #$2b6c,d1
0003371C <AmiBlitz3.ab3@24915>       TST.w varmode
00033720 <AmiBlitz3.ab3@24916>    BEQ 'g3
00033724 <AmiBlitz3.ab3@24917>    BCLR #9,d1
00033728 <AmiBlitz3.ab3@24920>   MOVE.w d1,-6(a4)
0003372E <AmiBlitz3.ab3@24921>     MOVE.w -2(a4),-4(a4)
00033732 <AmiBlitz3.ab3@24922>     MOVE.w d3,-2(a4)
00033738 <AmiBlitz3.ab3@24923>     CLR.w fp0var
00033740 <AmiBlitz3.ab3@24924>     MOVE.w #$ffff,fp0mode
00033742 <AmiBlitz3.ab3@24925> RTS
00033748 <AmiBlitz3.ab3@24928>   MOVE.w d3,fp0var
00033752 <AmiBlitz3.ab3@24929>    MOVE.w varmode,fp0mode
00033754 <AmiBlitz3.ab3@24930>    ADDQ.l #6,a4
0003375A <AmiBlitz3.ab3@24931>    MOVE.l a4,fp0addr
00033764 <AmiBlitz3.ab3@24932>    MOVE.l firstiff,fp0iff
00033768 <AmiBlitz3.ab3@24935>   MOVEM.l d0/d4,-(a7)
0003376A <AmiBlitz3.ab3@24936>    MOVEQ #0,d0
00033770 <AmiBlitz3.ab3@24937>     MOVE.w regnum,d0
00033772 <AmiBlitz3.ab3@24938>    ASL.w #7,d0                                             ;fpu store var
00033776 <AmiBlitz3.ab3@24939>   BTST #15,d2
0003377A <AmiBlitz3.ab3@24940>    BEQ 'var
0003377C <AmiBlitz3.ab3@24941>    MOVE.w d1,d4
00033780 <AmiBlitz3.ab3@24942>    CMP.w #$24c0,d4
00033784 <AmiBlitz3.ab3@24943>    BNE 'nopl
0003378A <AmiBlitz3.ab3@24944>    MOVE.l #$f21a6400,d1
0003378C <AmiBlitz3.ab3@24945>    MOVEQ #0,d3
00033790 <AmiBlitz3.ab3@24946> BRA 'glob
00033796 <AmiBlitz3.ab3@24950>   MOVE.l #$f2126400,d1
00033798 <AmiBlitz3.ab3@24951>    TST.w d3                                                ;offset =0
0003379C <AmiBlitz3.ab3@24952>    BNE 'offset
000337A2 <AmiBlitz3.ab3@24953>    MOVE.l #$f2126400,d1
000337A4 <AmiBlitz3.ab3@24961>    MOVEQ #0,d3
000337A8 <AmiBlitz3.ab3@24962> BRA 'glob
000337AE <AmiBlitz3.ab3@24965>   MOVE.l #$f22d6400,d1                                     ;var
000337B4 <AmiBlitz3.ab3@24966>   TST.w varmode
000337B8 <AmiBlitz3.ab3@24967>   BEQ 'glob
000337BC <AmiBlitz3.ab3@24968>   BCLR #16,d1
000337BE <AmiBlitz3.ab3@24969>  'glob OR.l d0,d1
000337C8 <AmiBlitz3.ab3@24972>   CMP.l #newtype_double,currtype
000337CC <AmiBlitz3.ab3@24973>   BNE 'dbl1
000337D2 <AmiBlitz3.ab3@24974>   OR.l #$00001000,d1
000337D8 <AmiBlitz3.ab3@24977>   JSR writelong
000337DE <AmiBlitz3.ab3@24978>   CLR.l currtype
000337E2 <AmiBlitz3.ab3@24979>   MOVEM.l (a7)+,d0/d4
000337E4 <AmiBlitz3.ab3@24980>   MOVE.l d3,d1
000337E8 <AmiBlitz3.ab3@24981>   BEQ 'nooffs
000337EE <AmiBlitz3.ab3@24982> JMP writeword
000337F0 <AmiBlitz3.ab3@24985> RTS
000337F6 <AmiBlitz3.ab3@24999>     TST.b fast                                             ;write lea->xx(a2)
000337FA <AmiBlitz3.ab3@25000>    BEQ 'la10
00033800 <AmiBlitz3.ab3@25004>    TST.b quickadd
00033806 <AmiBlitz3.ab3@25006>      CLR.b quickadd
0003380A <AmiBlitz3.ab3@25007>    CMP.w #$2480,d1
0003380E <AmiBlitz3.ab3@25008>    BNE 'la10
00033814 <AmiBlitz3.ab3@25009>    TST.b optiarray
00033818 <AmiBlitz3.ab3@25010>    BNE 'la10
0003381E <AmiBlitz3.ab3@25011>    MOVE.l destpointer,a4
00033824 <AmiBlitz3.ab3@25012>    CMP.w #$45ea,-4(a4)
00033828 <AmiBlitz3.ab3@25013>    BNE 'la10
00033830 <AmiBlitz3.ab3@25014>    CMP.w #8,pushclen
00033834 <AmiBlitz3.ab3@25015>    BEQ 'la100
0003383C <AmiBlitz3.ab3@25016>    CMP.w #6,pushclen
00033840 <AmiBlitz3.ab3@25017>    BNE 'la10
00033844 <AmiBlitz3.ab3@25018>    CMP.b #3,d2
00033848 <AmiBlitz3.ab3@25019>    BCS 'la110
0003384E <AmiBlitz3.ab3@25021>    MOVE.w #$2540,-2(a4)
00033854 <AmiBlitz3.ab3@25022>    MOVE.w arrayoffset,d1
0003385A <AmiBlitz3.ab3@25023> JMP writeword
00033860 <AmiBlitz3.ab3@25026>    CLR.b quickadd
00033862 <AmiBlitz3.ab3@25027> RTS
00033866 <AmiBlitz3.ab3@25030>    CMP.b #2,d2
0003386A <AmiBlitz3.ab3@25031>    BNE 'la120
00033870 <AmiBlitz3.ab3@25032>     MOVE.w #$3540,-2(a4)
00033876 <AmiBlitz3.ab3@25033>    MOVE.w arrayoffset,d1
0003387C <AmiBlitz3.ab3@25034> JMP writeword
00033880 <AmiBlitz3.ab3@25037>   CMP.b #1,d2
00033884 <AmiBlitz3.ab3@25038>    BNE.s 'la10
0003388A <AmiBlitz3.ab3@25039>     MOVE.w #$1540,-2(a4)
00033890 <AmiBlitz3.ab3@25040>    MOVE.w arrayoffset,d1
00033896 <AmiBlitz3.ab3@25041> JMP writeword
0003389A <AmiBlitz3.ab3@25044>    CMP.b #3,d2
0003389E <AmiBlitz3.ab3@25045>    BCS 'la11
000338A4 <AmiBlitz3.ab3@25046>    MOVE.w #$2540,-4(a4)
000338A6 <AmiBlitz3.ab3@25047> RTS
000338AA <AmiBlitz3.ab3@25050>    CMP.b #2,d2
000338AE <AmiBlitz3.ab3@25051>    BNE 'la12
000338B4 <AmiBlitz3.ab3@25052>     MOVE.w #$3540,-4(a4)
000338B6 <AmiBlitz3.ab3@25053> RTS
000338BA <AmiBlitz3.ab3@25055>  'la12 CMP.b #1,d2
000338BE <AmiBlitz3.ab3@25056>    BNE.s 'la10
000338C4 <AmiBlitz3.ab3@25057>     MOVE.w #$1540,-4(a4)
000338C6 <AmiBlitz3.ab3@25058> RTS
000338CC <AmiBlitz3.ab3@25061>   CLR.b optiarray
000338D0 <AmiBlitz3.ab3@25062>    CMP.b #$1,D2
000338D4 <AmiBlitz3.ab3@25063>    BEQ.w JL_0_E0AC
000338D8 <AmiBlitz3.ab3@25064>    BSR.w varalign
000338DC <AmiBlitz3.ab3@25065>    CMP.b #$3,D2
000338E0 <AmiBlitz3.ab3@25066>    BCC.w writevarlong
000338E6 <AmiBlitz3.ab3@25067>    TST.b fast                                              ;optiimmi
000338EA <AmiBlitz3.ab3@25068>    BEQ 'l10b
000338F0 <AmiBlitz3.ab3@25073>    MOVE.l destpointer,a0
000338F6 <AmiBlitz3.ab3@25074>    SUB.l imm_addr,a0
000338FC <AmiBlitz3.ab3@25075>    CMP.l #4,a0
00033900 <AmiBlitz3.ab3@25076>    BNE 'l10
00033906 <AmiBlitz3.ab3@25077>    CLR.l imm_addr
0003390C <AmiBlitz3.ab3@25078>    MOVE.l destpointer,a4
00033910 <AmiBlitz3.ab3@25079>    OR.w #$107c,d1
00033914 <AmiBlitz3.ab3@25080>    MOVE.w d1,-4(a4)
00033916 <AmiBlitz3.ab3@25081>     MOVE.w D3,D1
0003391C <AmiBlitz3.ab3@25082> JMP writeword
00033922 <AmiBlitz3.ab3@25085>   MOVE.l destpointer,a0
00033928 <AmiBlitz3.ab3@25086>   SUB.l load_var_addr,a0
0003392E <AmiBlitz3.ab3@25087>   CMP.l #4,a0
00033932 <AmiBlitz3.ab3@25088>   BNE 'l10b
00033938 <AmiBlitz3.ab3@25089>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
0003393C <AmiBlitz3.ab3@25090>   BNE 'l10b
00033942 <AmiBlitz3.ab3@25092>   CLR.l load_var_addr
00033948 <AmiBlitz3.ab3@25093>   MOVE.l destpointer,a4
0003394C <AmiBlitz3.ab3@25094>   OR.w #$102d,d1
00033950 <AmiBlitz3.ab3@25095>   MOVE.w d1,-4(a4)
00033952 <AmiBlitz3.ab3@25096>   MOVE.w d3,d1
00033958 <AmiBlitz3.ab3@25097> JMP writeword
0003395C <AmiBlitz3.ab3@25100>   ORI.w #$1000,D1                                          ;word
00033960 <AmiBlitz3.ab3@25101> BRA.w writestorevar
00033966 <AmiBlitz3.ab3@25105>    TST.b fast                                              ;optiimmi
0003396A <AmiBlitz3.ab3@25106>    BEQ 'l10b
00033970 <AmiBlitz3.ab3@25111>    MOVE.l destpointer,a0
00033976 <AmiBlitz3.ab3@25112>    SUB.l imm_addr,a0
0003397C <AmiBlitz3.ab3@25113>    CMP.l #4,a0
00033980 <AmiBlitz3.ab3@25114>    BNE 'l10
00033986 <AmiBlitz3.ab3@25115>    CLR.l imm_addr
0003398C <AmiBlitz3.ab3@25116>    MOVE.l destpointer,a4
00033990 <AmiBlitz3.ab3@25117>    OR.w #$7c,d1
00033994 <AmiBlitz3.ab3@25118>    EORI #$3000,d1
00033998 <AmiBlitz3.ab3@25119>    MOVE.w d1,-4(a4)
0003399A <AmiBlitz3.ab3@25120>       MOVE.w D3,D1
000339A0 <AmiBlitz3.ab3@25121> JMP writeword
000339A6 <AmiBlitz3.ab3@25124>   MOVE.l destpointer,a0
000339AC <AmiBlitz3.ab3@25125>   SUB.l load_var_addr,a0
000339B2 <AmiBlitz3.ab3@25126>   CMP.l #4,a0
000339B6 <AmiBlitz3.ab3@25127>   BNE 'l10b
000339BC <AmiBlitz3.ab3@25128>   CLR.l load_var_addr
000339C2 <AmiBlitz3.ab3@25129>   MOVE.l destpointer,a4
000339C8 <AmiBlitz3.ab3@25130>    CMP.w #$1b6d,-4(a4)
000339CC <AmiBlitz3.ab3@25131>    BNE 'l10b
000339D0 <AmiBlitz3.ab3@25132>    OR.w #$2d,d1
000339D4 <AmiBlitz3.ab3@25133>    EORI #$3000,d1
000339D8 <AmiBlitz3.ab3@25134>    MOVE.w d1,-4(a4)
000339DA <AmiBlitz3.ab3@25135>   MOVE.w d3,d1
000339E0 <AmiBlitz3.ab3@25136> JMP writeword
000339E6 <AmiBlitz3.ab3@25139>   ADDQ.w #1,pcodd                                          ;byte
000339EA <AmiBlitz3.ab3@25140>   EORI.w #$3000,D1
000339F0 <AmiBlitz3.ab3@25143>   JSR writeword
000339F4 <AmiBlitz3.ab3@25144>   BTST #$7,D1
000339F8 <AmiBlitz3.ab3@25145>    BNE JL_0_E0C6
000339FA <AmiBlitz3.ab3@25146>   MOVE.w D3,D1
00033A00 <AmiBlitz3.ab3@25147> JMP writeword
00033A06 <AmiBlitz3.ab3@25150>    TST.b fast                                              ;optiimmi
00033A0A <AmiBlitz3.ab3@25151>    BEQ 'l10b
00033A10 <AmiBlitz3.ab3@25155>    MOVE.l destpointer,a0
00033A16 <AmiBlitz3.ab3@25156>    SUB.l imm_addr,a0
00033A1C <AmiBlitz3.ab3@25157>    CMP.l #6,a0
00033A20 <AmiBlitz3.ab3@25158>    BNE 'l10
00033A26 <AmiBlitz3.ab3@25159>    CLR.l imm_addr
00033A2C <AmiBlitz3.ab3@25160>    MOVE.l destpointer,a4
00033A30 <AmiBlitz3.ab3@25161>    OR.w #$7c,d1
00033A34 <AmiBlitz3.ab3@25162>    MOVE.w d1,-6(a4)
00033A36 <AmiBlitz3.ab3@25163>     MOVE.w D3,D1
00033A3C <AmiBlitz3.ab3@25164> JMP writeword
00033A42 <AmiBlitz3.ab3@25167>   MOVE.l destpointer,a0
00033A48 <AmiBlitz3.ab3@25168>   SUB.l load_var_addr,a0
00033A4E <AmiBlitz3.ab3@25169>   CMP.l #4,a0
00033A52 <AmiBlitz3.ab3@25170>   BNE 'l10b
00033A58 <AmiBlitz3.ab3@25171>   CLR.l load_var_addr
00033A5E <AmiBlitz3.ab3@25172>   MOVE.l destpointer,a4
00033A64 <AmiBlitz3.ab3@25173>   CMP.w #$245f,-2(a4)
00033A68 <AmiBlitz3.ab3@25174>   BEQ 'l10b
00033A6C <AmiBlitz3.ab3@25175>   OR.w #$28,d1
00033A70 <AmiBlitz3.ab3@25176>   OR.w d1,-4(a4)
00033A76 <AmiBlitz3.ab3@25177>   CMP.w #$2b6d,-4(a4)
00033A7A <AmiBlitz3.ab3@25178>   BNE 'd1
00033A7E <AmiBlitz3.ab3@25179>   CMP.w -2(a4),d3
00033A82 <AmiBlitz3.ab3@25180>   BNE 'd1
00033A88 <AmiBlitz3.ab3@25181>   SUBQ.l #4,destpointer
00033A8A <AmiBlitz3.ab3@25182> RTS
00033A8C <AmiBlitz3.ab3@25185>   MOVE.w d3,d1
00033A92 <AmiBlitz3.ab3@25186> JMP writeword
00033A98 <AmiBlitz3.ab3@25189>   JSR writeword
00033A9C <AmiBlitz3.ab3@25190>   BTST #$7,D1
00033AA0 <AmiBlitz3.ab3@25191>    BNE.b JL_0_E0C6
00033AA2 <AmiBlitz3.ab3@25192>   MOVE.w D3,D1
00033AA8 <AmiBlitz3.ab3@25193> JMP writeword
00033AAA <AmiBlitz3.ab3@25196> RTS
00033AAC <AmiBlitz3.ab3@25200>   MOVE.w D1,-(A7)
00033AB0 <AmiBlitz3.ab3@25201>   MOVE.w pcodd(PC),D1
00033AB2 <AmiBlitz3.ab3@25202>   LSR.w #1,D1
00033AB6 <AmiBlitz3.ab3@25203>    BCC.b JL_0_E0E2
00033ABC <AmiBlitz3.ab3@25204>   CLR.w pcodd
00033AC2 <AmiBlitz3.ab3@25205>   MOVE.w add1a2,D1
00033AC8 <AmiBlitz3.ab3@25206>    JSR writeword
00033ACA <AmiBlitz3.ab3@25209>   MOVE.w (A7)+,D1
00033ACC <AmiBlitz3.ab3@25210> RTS
00033ACE <AmiBlitz3.ab3@25214> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00033AD0 <AmiBlitz3.ab3@25217> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00033AD2 <AmiBlitz3.ab3@25218> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00033AD4 <AmiBlitz3.ab3@25219> listsize:  Ds.w 1
00033ADA <AmiBlitz3.ab3@25223>   ADDQ.w #1,regnum
00033AE2 <AmiBlitz3.ab3@25224>   MOVE.b #1,nowdeclare
00033AE8 <AmiBlitz3.ab3@25225>   CLR.b dimkeep
00033AF0 <AmiBlitz3.ab3@25226>    CMP.l #"KEEP",-1(a5)
00033AF4 <AmiBlitz3.ab3@25227>   BNE 'nokeep
00033AFA <AmiBlitz3.ab3@25228>   CMP.b #" ",3(a5)
00033AFE <AmiBlitz3.ab3@25229>   BNE 'nokeep
00033B00 <AmiBlitz3.ab3@25230>   ADDQ.l #3,a5
00033B04 <AmiBlitz3.ab3@25233>     CMP.b #" ",(a5)
00033B08 <AmiBlitz3.ab3@25234>     BNE '1
00033B0A <AmiBlitz3.ab3@25235>    ADDQ #1,a5
00033B0E <AmiBlitz3.ab3@25236> BRA '2
00033B14 <AmiBlitz3.ab3@25239>   MOVE.l a5,lastsourcepos
00033B1C <AmiBlitz3.ab3@25240>   MOVE.b #1,dimkeep
00033B20 <AmiBlitz3.ab3@25248>   MOVE.w #$FF9A,D1
00033B26 <AmiBlitz3.ab3@25249>   JSR uselib
00033B2C <AmiBlitz3.ab3@25252>   CLR.w listadd
00033B30 <AmiBlitz3.ab3@25253>   CMP.w #-$7F4D,D0
00033B34 <AmiBlitz3.ab3@25254>    BNE.w JL_0_E11E
00033B3C <AmiBlitz3.ab3@25255>   MOVE.w #$0008,listadd
00033B40 <AmiBlitz3.ab3@25256>   MOVE.w #$FFFA,D1
00033B46 <AmiBlitz3.ab3@25257>    JSR uselib
00033B4C <AmiBlitz3.ab3@25258>    JSR get1bytemain
00033B52 <AmiBlitz3.ab3@25261>   CLR.w nonew
00033B58 <AmiBlitz3.ab3@25262>    JSR getparameter
00033B60 <AmiBlitz3.ab3@25263>   BTST #$1,flagmask+1
00033B64 <AmiBlitz3.ab3@25264>    BEQ.w JUMP_syntaxerr
00033B6A <AmiBlitz3.ab3@25265>    JSR JL_0_8E3C
00033B70 <AmiBlitz3.ab3@25266>   MOVE.w notshared,D1
00033B74 <AmiBlitz3.ab3@25267>    BNE.w JL_0_E198
00033B7C <AmiBlitz3.ab3@25268>   MOVE.w $8(A3),temp1
00033B82 <AmiBlitz3.ab3@25269>   MOVE.w proceduremode,D2
00033B86 <AmiBlitz3.ab3@25270>    BNE.w JL_0_E176
00033B8C <AmiBlitz3.ab3@25271>   MOVE.w globalvarpointer,-(A7)
00033B94 <AmiBlitz3.ab3@25272>   MOVE.w $4(A3),globalvarpointer
00033B9A <AmiBlitz3.ab3@25273>   ADDQ.w #4,globalvarpointer
00033B9E <AmiBlitz3.ab3@25274>    BSR.w write_dim_code
00033BA4 <AmiBlitz3.ab3@25275>   MOVE.w (A7)+,globalvarpointer
00033BA8 <AmiBlitz3.ab3@25276> BRA.w JL_0_E1BA
00033BAE <AmiBlitz3.ab3@25287>   MOVE.w globalvarpointer,-(A7)
00033BB4 <AmiBlitz3.ab3@25288>             MOVE.w proceduremode,-(a7)
00033BBA <AmiBlitz3.ab3@25289>             CLR.w proceduremode
00033BC2 <AmiBlitz3.ab3@25290>   MOVE.w $4(A3),globalvarpointer
00033BC8 <AmiBlitz3.ab3@25291>   ADDQ.w #4,globalvarpointer
00033BCC <AmiBlitz3.ab3@25292>    BSR.w write_dim_code
00033BD2 <AmiBlitz3.ab3@25293>    MOVE.w (a7)+,proceduremode
00033BD8 <AmiBlitz3.ab3@25294>   MOVE.w (A7)+,globalvarpointer
00033BDC <AmiBlitz3.ab3@25295> BRA.w JL_0_E1BA
00033BE4 <AmiBlitz3.ab3@25298>   MOVE.w #$FFFF,temp1
00033BE8 <AmiBlitz3.ab3@25299>   MOVE.w listadd(PC),D1
00033BEC <AmiBlitz3.ab3@25300>    BEQ.w JL_0_E1B6
00033BF4 <AmiBlitz3.ab3@25301>   MOVE.w #$4000,temp1
00033BFA <AmiBlitz3.ab3@25302>   BSET #$0,$6(A3)
00033C00 <AmiBlitz3.ab3@25305>         TST.w proceduremode
00033C04 <AmiBlitz3.ab3@25306>        BNE 'l1
00033C0A <AmiBlitz3.ab3@25307>        MOVE.w locvaroff,-(a7)
00033C0E <AmiBlitz3.ab3@25310>   BSR.w write_dim_code
00033C14 <AmiBlitz3.ab3@25311>         TST.w proceduremode
00033C18 <AmiBlitz3.ab3@25312>         BNE JL_0_E1BA
00033C1E <AmiBlitz3.ab3@25313>        MOVE.w (A7)+,locvaroff
00033C24 <AmiBlitz3.ab3@25316>   JSR get1bytemain
00033C28 <AmiBlitz3.ab3@25317>   CMP.w #$2C,D0
00033C2C <AmiBlitz3.ab3@25318>    BNE.w JL_0_E1CE
00033C32 <AmiBlitz3.ab3@25319>    JSR get1bytemain
00033C36 <AmiBlitz3.ab3@25320> BRA.w JL_0_E0FC
00033C38 <AmiBlitz3.ab3@25323> RTS
00033C40 <AmiBlitz3.ab3@25326>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00033C46 <AmiBlitz3.ab3@25327>   MOVE.w beginarr,D1
00033C4C <AmiBlitz3.ab3@25328>    JSR writeword
00033C4E <AmiBlitz3.ab3@25329>   MOVEQ.l #$00,D1
00033C54 <AmiBlitz3.ab3@25330>    JSR writeword
00033C56 <AmiBlitz3.ab3@25331>   MOVEQ.l #$04,D1
00033C5E <AmiBlitz3.ab3@25332>   BTST #$0,flagmask+1
00033C62 <AmiBlitz3.ab3@25333>    BNE.w write_dim_code__pointer
00033C66 <AmiBlitz3.ab3@25334>   MOVE.w $8(A2),D1
00033C6A <AmiBlitz3.ab3@25337>   ADD.w listadd(PC),D1                                     ;size of one element.
00033C70 <AmiBlitz3.ab3@25338>   MOVE.w D1,listsize
00033C76 <AmiBlitz3.ab3@25339>    JSR writeword
00033C7C <AmiBlitz3.ab3@25340>   CLR.w temp2                                              ;# dim's got
00033C7E <AmiBlitz3.ab3@25341>   MOVE.l A3,-(A7)
00033C84 <AmiBlitz3.ab3@25344>   ADDQ.w #1,temp2
00033C86 <AmiBlitz3.ab3@25345>   MOVEQ.l #$03,D2                                          ;get word
00033C8C <AmiBlitz3.ab3@25346>   MOVE.w notshared,-(a7)
00033C92 <AmiBlitz3.ab3@25347>    JSR eval
00033C98 <AmiBlitz3.ab3@25348>   MOVE.w (a7)+,notshared
00033C9E <AmiBlitz3.ab3@25349>   TST.b debugmode
00033CA2 <AmiBlitz3.ab3@25350>    BEQ.w write_dim_code__norerr0
00033CA6 <AmiBlitz3.ab3@25351>   MOVE.w #$C30F,D1
00033CAA <AmiBlitz3.ab3@25357>       MOVE.w #$5281,d1
00033CB0 <AmiBlitz3.ab3@25358>       JSR writeword
00033CB6 <AmiBlitz3.ab3@25359>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00033CBC <AmiBlitz3.ab3@25360>       JSR writelong
00033CC2 <AmiBlitz3.ab3@25361>   MOVE.w proceduremode,D2
00033CC6 <AmiBlitz3.ab3@25362>    BEQ.w write_dim_code__global
00033CCC <AmiBlitz3.ab3@25363>   SUBQ.w #4,locvaroff
00033CD6 <AmiBlitz3.ab3@25364>   MOVE.w locvaroff,putarr+2
00033CDA <AmiBlitz3.ab3@25365> BRA.w write_dim_code__doit
00033CE0 <AmiBlitz3.ab3@25368> JMP syntaxerr
00033CEA <AmiBlitz3.ab3@25371>   MOVE.w globalvarpointer,putarr+2
00033CF0 <AmiBlitz3.ab3@25372>   ADDQ.w #4,globalvarpointer
00033CF6 <AmiBlitz3.ab3@25375>   TST.b dimkeep
00033CFA <AmiBlitz3.ab3@25376>            BEQ write_dim_code__doit_l1
00033CFC <AmiBlitz3.ab3@25377>       MOVEQ #0,d1
00033D02 <AmiBlitz3.ab3@25378>       MOVE.w putarr+2,d1
00033D08 <AmiBlitz3.ab3@25379>       OR.l  #$222d0000,d1
00033D0E <AmiBlitz3.ab3@25380>       MOVE.w proceduremode,D2
00033D12 <AmiBlitz3.ab3@25381>       BEQ write_dim_code__doit_l2
00033D18 <AmiBlitz3.ab3@25382>       TST.w notshared
00033D1C <AmiBlitz3.ab3@25383>       BEQ write_dim_code__doit_l2
00033D22 <AmiBlitz3.ab3@25384>       SUB.l #$00010000,d1
00033D28 <AmiBlitz3.ab3@25387>   JSR writelong
00033D2E <AmiBlitz3.ab3@25390>   MOVE.l putarr,D1
00033D34 <AmiBlitz3.ab3@25391>       TST.w notshared
00033D38 <AmiBlitz3.ab3@25392>       BNE write_dim_code__doit_l1a
00033D3E <AmiBlitz3.ab3@25393>       JSR writelong
00033D42 <AmiBlitz3.ab3@25394> BRA write_dim_code__doit_l4
00033D48 <AmiBlitz3.ab3@25397>   JSR pokela5d
00033D4C <AmiBlitz3.ab3@25400>   CMP.w #$2C,D0
00033D50 <AmiBlitz3.ab3@25401>    BEQ.w write_dim_code__loop
00033D54 <AmiBlitz3.ab3@25402>   CMP.w #$29,D0
00033D58 <AmiBlitz3.ab3@25403>    BNE.w JUMP_syntaxerr
00033D5A <AmiBlitz3.ab3@25404>   MOVEA.l (A7)+,A3
00033D60 <AmiBlitz3.ab3@25405>   MOVE.w temp1,D1
00033D64 <AmiBlitz3.ab3@25406>    BMI.w write_dim_code__nocare
00033D68 <AmiBlitz3.ab3@25410>   BTST #$E,D1
00033D6C <AmiBlitz3.ab3@25411>    BEQ.w write_dim_code__notl
00033D74 <AmiBlitz3.ab3@25412>   CMPI.w #$1,temp2
00033D78 <AmiBlitz3.ab3@25413>    BNE.w JUMP_redimerr
00033D7C <AmiBlitz3.ab3@25414> BRA.w write_dim_code__nocare
00033D82 <AmiBlitz3.ab3@25417> JMP redimerr
00033D88 <AmiBlitz3.ab3@25420>   CMP.w temp2,D1
00033D8C <AmiBlitz3.ab3@25421>    BNE.w JUMP_redimerr                                      ;range too long
00033D92 <AmiBlitz3.ab3@25424>   LEA globalvarpointer,A0
00033D98 <AmiBlitz3.ab3@25425>   MOVE.w proceduremode,D1
00033D9C <AmiBlitz3.ab3@25426>   BEQ.w write_dim_code__gskip
00033DA2 <AmiBlitz3.ab3@25427>   LEA locvaroff,A0
00033DA8 <AmiBlitz3.ab3@25430>   MOVE.W  extraword,(A0)
00033DAC <AmiBlitz3.ab3@25431>   BRA.W   write_dim_code__care
00033DB4 <AmiBlitz3.ab3@25434>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00033DBA <AmiBlitz3.ab3@25437>   LEA doarr,A0
00033DC0 <AmiBlitz3.ab3@25438>   MOVE.w $4(A3),$2(A0)
00033DC8 <AmiBlitz3.ab3@25439>   MOVE.w putarr+2,$6(A0)
00033DCA <AmiBlitz3.ab3@25440>   MOVE.l (A0)+,D1
00033DD0 <AmiBlitz3.ab3@25441>    JSR writelong
00033DD2 <AmiBlitz3.ab3@25442>   MOVE.l (A0),D1
00033DD8 <AmiBlitz3.ab3@25443>    JSR writelong
00033DDE <AmiBlitz3.ab3@25444>    TST.b dimkeep
00033DE2 <AmiBlitz3.ab3@25445>   BNE write_dim_code__care_l3
00033DE6 <AmiBlitz3.ab3@25448>   MOVE.w #$C400,D1
00033DEA <AmiBlitz3.ab3@25449> BRA write_dim_code__care_l2
00033DEE <AmiBlitz3.ab3@25452>   MOVE.w #$C405,d1
00033DF4 <AmiBlitz3.ab3@25455>   MOVE.w proceduremode,D2
00033DF8 <AmiBlitz3.ab3@25456>    BEQ.w write_dim_code__isg
00033DFE <AmiBlitz3.ab3@25457>    TST.w notshared
00033E02 <AmiBlitz3.ab3@25458>    BEQ write_dim_code__isg
00033E04 <AmiBlitz3.ab3@25459>   ADDQ.w #1,D1
00033E08 <AmiBlitz3.ab3@25462>   MOVE.w listadd(PC),D2
00033E0C <AmiBlitz3.ab3@25463>    BEQ.w write_dim_code__isrg
00033E0E <AmiBlitz3.ab3@25464>   MOVE.w D1,-(A7)
00033E12 <AmiBlitz3.ab3@25465>   MOVE.w setles(PC),D1
00033E18 <AmiBlitz3.ab3@25466>    JSR writeword
00033E1C <AmiBlitz3.ab3@25467>   MOVE.w listsize(PC),D1
00033E22 <AmiBlitz3.ab3@25468>    JSR writeword
00033E24 <AmiBlitz3.ab3@25469>   MOVE.w (A7)+,D1
00033E26 <AmiBlitz3.ab3@25470>   ADDQ.w #3,D1
00033E2A <AmiBlitz3.ab3@25473> BRA.w Atokejsr
00033E30 <AmiBlitz3.ab3@25480>     MOVE.l #$f23c4400,d1
00033E36 <AmiBlitz3.ab3@25482>   MOVE.w regnum,d0
00033E38 <AmiBlitz3.ab3@25483>   ASL.w #7,d0
00033E3A <AmiBlitz3.ab3@25484>   OR.w d0,d1
00033E40 <AmiBlitz3.ab3@25485>   JSR writelong
00033E46 <AmiBlitz3.ab3@25491>     MOVE.l #$40490fd9,d1
00033E4C <AmiBlitz3.ab3@25493>   JSR writelong
00033E52 <AmiBlitz3.ab3@25494> JMP get1bytemain
00033E56 <AmiBlitz3.ab3@25498> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00033E5A <AmiBlitz3.ab3@25505> vbr:                Ds.l 1
00033E5C <AmiBlitz3.ab3@25506> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00033E62 <AmiBlitz3.ab3@25508> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00033E66 <AmiBlitz3.ab3@25512> constpcat:          Ds.l 1
00033E6A <AmiBlitz3.ab3@25513> constlibat:         Ds.l 1
00033E6E <AmiBlitz3.ab3@25514> constmaxpc:         Dc.l $400
00033E72 <AmiBlitz3.ab3@25516> stacksize:          Dc.l 32768                           ;stackfuck org source
00033E76 <AmiBlitz3.ab3@25517> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00033E7A <AmiBlitz3.ab3@25518> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00033E7E <AmiBlitz3.ab3@25519> lastrestype:        Dc.l newtype_string
00033E80 <AmiBlitz3.ab3@25520> rescnt:             Ds.w 1                               ;# resident
00033E82 <AmiBlitz3.ab3@25521> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00033E86 <AmiBlitz3.ab3@25522> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00033E88 <AmiBlitz3.ab3@25523> linedone:           Ds.w 1
00033E9E <AmiBlitz3.ab3@25524> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00033EA2 <AmiBlitz3.ab3@25533>   Dc.l 0                                        ; bytetobyte
00033EA6 <AmiBlitz3.ab3@25534>   Dc.l convert_byte_to_word                     ; bytetoword
00033EAA <AmiBlitz3.ab3@25535>   Dc.l convert_byte_to_long                     ; bytetolong
00033EAE <AmiBlitz3.ab3@25536>   Dc.l convert_byte_to_quick                    ; bytetoquick
00033EB2 <AmiBlitz3.ab3@25537>   Dc.l convert_byte_to_float                    ; bytetofloat
00033EB6 <AmiBlitz3.ab3@25538>   Dc.l convert_byte_to_long                     ; bytetolong
00033EBA <AmiBlitz3.ab3@25539>   Dc.l error_convert_types                      ; noconerr
00033EBE <AmiBlitz3.ab3@25542>   Dc.l convert_word_to_byte                     ; wordtobyte
00033EC2 <AmiBlitz3.ab3@25543>   Dc.l 0                                        ; wordtoword
00033EC6 <AmiBlitz3.ab3@25544>   Dc.l convert_word_to_long                     ; wordtolong
00033ECA <AmiBlitz3.ab3@25545>   Dc.l convert_word_to_quick                    ; wordtoquick
00033ECE <AmiBlitz3.ab3@25546>   Dc.l convert_word_to_float                    ; wordtofloat
00033ED2 <AmiBlitz3.ab3@25547>   Dc.l convert_word_to_long                     ; wordtolong
00033ED6 <AmiBlitz3.ab3@25548>   Dc.l error_convert_types                      ; noconerr
00033EDA <AmiBlitz3.ab3@25551>   Dc.l convert_long_to_byte                     ; longtobyte
00033EDE <AmiBlitz3.ab3@25552>   Dc.l convert_long_to_word                     ; longtoword
00033EE2 <AmiBlitz3.ab3@25553>   Dc.l 0                                        ; longtolong
00033EE6 <AmiBlitz3.ab3@25554>   Dc.l convert_long_to_quick                    ; longtoquick
00033EEA <AmiBlitz3.ab3@25555>   Dc.l convert_long_to_float                    ; longtofloat
00033EEE <AmiBlitz3.ab3@25556>   Dc.l 0                                        ; longtolong
00033EF2 <AmiBlitz3.ab3@25557>   Dc.l error_convert_types                      ; noconerr
00033EF6 <AmiBlitz3.ab3@25560>   Dc.l convert_quick_to_byte                    ; quicktobyte
00033EFA <AmiBlitz3.ab3@25561>   Dc.l convert_quick_to_word                    ; quicktoword
00033EFE <AmiBlitz3.ab3@25562>   Dc.l convert_quick_to_long                    ; quicktolong
00033F02 <AmiBlitz3.ab3@25563>   Dc.l 0                                        ; quicktoquick
00033F06 <AmiBlitz3.ab3@25564>   Dc.l convert_quick_to_float                   ; quicktofloat
00033F0A <AmiBlitz3.ab3@25565>   Dc.l convert_quick_to_long                    ; quicktolong
00033F0E <AmiBlitz3.ab3@25566>   Dc.l error_convert_types                      ; noconerr
00033F12 <AmiBlitz3.ab3@25569>   Dc.l convert_float_to_byte                    ; floattobyte
00033F16 <AmiBlitz3.ab3@25570>   Dc.l convert_float_to_word                    ; floattoword
00033F1A <AmiBlitz3.ab3@25571>   Dc.l convert_float_to_long                    ; floattolong
00033F1E <AmiBlitz3.ab3@25572>   Dc.l convert_float_to_quick                   ; floattoquick
00033F22 <AmiBlitz3.ab3@25573>   Dc.l 0                                        ; floattofloat
00033F26 <AmiBlitz3.ab3@25574>   Dc.l convert_float_to_long                    ; floattolong
00033F2A <AmiBlitz3.ab3@25575>   Dc.l error_convert_types                      ; noconerr
00033F2E <AmiBlitz3.ab3@25578>   Dc.l convert_long_to_byte                     ; longtobyte
00033F32 <AmiBlitz3.ab3@25579>   Dc.l convert_long_to_word                     ; longtoword
00033F36 <AmiBlitz3.ab3@25580>   Dc.l 0                                        ; longtolong
00033F3A <AmiBlitz3.ab3@25581>   Dc.l convert_long_to_quick                    ; longtoquick
00033F3E <AmiBlitz3.ab3@25582>   Dc.l convert_long_to_float                    ; longtofloat
00033F42 <AmiBlitz3.ab3@25583>   Dc.l 0                                        ; longtolong
00033F46 <AmiBlitz3.ab3@25584>   Dc.l error_convert_types                      ; noconerr
00033F4A <AmiBlitz3.ab3@25587>   Dc.l error_convert_types                      ; noconerr
00033F4E <AmiBlitz3.ab3@25588>   Dc.l error_convert_types                      ; noconerr
00033F52 <AmiBlitz3.ab3@25589>   Dc.l string_to_long                           ; stringtolong
00033F56 <AmiBlitz3.ab3@25590>   Dc.l error_convert_types                      ; noconerr
00033F5A <AmiBlitz3.ab3@25591>   Dc.l error_convert_types                      ; noconerr
00033F5E <AmiBlitz3.ab3@25592>   Dc.l string_to_long                           ; stringtolong
00033F62 <AmiBlitz3.ab3@25593>   Ds.l 1
00033F64 <AmiBlitz3.ab3@25599>   Dc.b $00,$2B                                  ;+ ; add
00033F68 <AmiBlitz3.ab3@25600>   Dc.l do_plus_byte                             ;doplusb
00033F6C <AmiBlitz3.ab3@25601>   Dc.l do_plus_word                             ;doplusw
00033F70 <AmiBlitz3.ab3@25602>   Dc.l do_plus_long                             ;doplusl
00033F74 <AmiBlitz3.ab3@25603>   Dc.l do_plus_long                             ;doplusl
00033F78 <AmiBlitz3.ab3@25604>   Dc.l do_plus_float                            ;doplusf
00033F7C <AmiBlitz3.ab3@25605>   Ds.l 1
00033F80 <AmiBlitz3.ab3@25606>   Dc.l add_strings                              ;addstrings
00033F82 <AmiBlitz3.ab3@25607>   Dc.b $0B,$B8
00033F84 <AmiBlitz3.ab3@25609>   Dc.b $00,$2D                                  ;- ; sub
00033F88 <AmiBlitz3.ab3@25610>   Dc.l do_minus_byte                            ;dominusb
00033F8C <AmiBlitz3.ab3@25611>   Dc.l do_minus_word                            ;dominusw
00033F90 <AmiBlitz3.ab3@25612>   Dc.l do_minus_long                            ;dominusl
00033F94 <AmiBlitz3.ab3@25613>   Dc.l do_minus_long                            ;dominusl
00033F98 <AmiBlitz3.ab3@25614>   Dc.l do_minus_float                           ;dominusf
00033FA0 <AmiBlitz3.ab3@25615>   Ds.l 2
00033FA2 <AmiBlitz3.ab3@25616>   Dc.b $0B,$B8
00033FA4 <AmiBlitz3.ab3@25618>   Dc.b $00,$2A                                  ;* ; mul
00033FA8 <AmiBlitz3.ab3@25619>   Dc.l do_times_byte                            ;dotimesb
00033FAC <AmiBlitz3.ab3@25620>   Dc.l do_times_word                            ;dotimesw
00033FB0 <AmiBlitz3.ab3@25621>   Dc.l do_times_long                            ;dotimesl
00033FB4 <AmiBlitz3.ab3@25622>   Dc.l do_times_quick                           ;dotimesq
00033FB8 <AmiBlitz3.ab3@25623>   Dc.l do_times_float                           ;dotimesf
00033FC0 <AmiBlitz3.ab3@25624>   Ds.l 2
00033FC2 <AmiBlitz3.ab3@25625>   Dc.b $0F,$A0
00033FC4 <AmiBlitz3.ab3@25627>   Dc.b $00,$2F                                  ;/ ; div
00033FC8 <AmiBlitz3.ab3@25628>   Dc.l do_Div_byte                              ;dodivb
00033FCC <AmiBlitz3.ab3@25629>   Dc.l do_Div_word                              ;dodivb
00033FD0 <AmiBlitz3.ab3@25630>   Dc.l do_Div_long                              ;dodivl
00033FD4 <AmiBlitz3.ab3@25631>   Dc.l do_Div_quick                             ;dodivq
00033FD8 <AmiBlitz3.ab3@25632>   Dc.l do_Div_float                             ;dodivf
00033FE0 <AmiBlitz3.ab3@25633>   Ds.l 2
00033FE2 <AmiBlitz3.ab3@25634>   Dc.b $0F,$A0
00033FE4 <AmiBlitz3.ab3@25636>   Dc.b $00,$26                                  ;& ; & int
00033FE8 <AmiBlitz3.ab3@25637>   Dc.l do_AND_byte                              ;doandb
00033FEC <AmiBlitz3.ab3@25638>   Dc.l do_AND_word                              ;doandw
00033FF0 <AmiBlitz3.ab3@25639>   Dc.l do_AND_long                              ;doandl
00033FF4 <AmiBlitz3.ab3@25640>   Dc.l do_AND_long                              ;doandl
00034000 <AmiBlitz3.ab3@25641>   Ds.l 3
00034002 <AmiBlitz3.ab3@25642>   Dc.b $13,$88
00034004 <AmiBlitz3.ab3@25644>   Dc.b $00,$7C                                  ;| ;or int ;
00034008 <AmiBlitz3.ab3@25645>   Dc.l do_OR_byte                               ;doorb
0003400C <AmiBlitz3.ab3@25646>   Dc.l do_OR_word                               ;doorw
00034010 <AmiBlitz3.ab3@25647>   Dc.l do_OR_long                               ;doorl
00034014 <AmiBlitz3.ab3@25648>   Dc.l do_OR_long                               ;doorl
00034020 <AmiBlitz3.ab3@25649>   Ds.l 3
00034022 <AmiBlitz3.ab3@25650>   Dc.b $13,$88
00034024 <AmiBlitz3.ab3@25652>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034028 <AmiBlitz3.ab3@25653>   Dc.l do_AND_byte                              ;doandb
0003402C <AmiBlitz3.ab3@25654>   Dc.l do_AND_word                              ;doandw
00034030 <AmiBlitz3.ab3@25655>   Dc.l do_AND_long                              ;doandl
00034034 <AmiBlitz3.ab3@25656>   Dc.l do_AND_long                              ;doandl
00034040 <AmiBlitz3.ab3@25657>   Ds.l 3
00034042 <AmiBlitz3.ab3@25658>   Dc.b $03,$E8
00034044 <AmiBlitz3.ab3@25660>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034048 <AmiBlitz3.ab3@25661>   Dc.l do_OR_byte                               ;doorb
0003404C <AmiBlitz3.ab3@25662>   Dc.l do_OR_word                               ;doorw
00034050 <AmiBlitz3.ab3@25663>   Dc.l do_OR_long                               ;doorl
00034054 <AmiBlitz3.ab3@25664>   Dc.l do_OR_long                               ;doorl
00034060 <AmiBlitz3.ab3@25665>   Ds.l 3
00034062 <AmiBlitz3.ab3@25666>   Dc.b $03,$E8
00034064 <AmiBlitz3.ab3@25668>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034068 <AmiBlitz3.ab3@25669>   Dc.l do_EOR_byte                              ;doeorb
0003406C <AmiBlitz3.ab3@25670>   Dc.l do_EOR_word                              ;doeorw
00034070 <AmiBlitz3.ab3@25671>   Dc.l do_EOR_long                              ;doeorl
00034074 <AmiBlitz3.ab3@25672>   Dc.l do_EOR_long                              ;doeorl
00034080 <AmiBlitz3.ab3@25673>   Ds.l 3
00034082 <AmiBlitz3.ab3@25674>   Dc.b $03,$E8
00034084 <AmiBlitz3.ab3@25676>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034088 <AmiBlitz3.ab3@25677>   Dc.l do_LSL                                   ;dolslb
0003408C <AmiBlitz3.ab3@25678>   Dc.l do_LSL                                   ;dolslw
00034090 <AmiBlitz3.ab3@25679>   Dc.l do_LSL                                   ;dolsll
00034094 <AmiBlitz3.ab3@25680>   Dc.l do_LSL                                   ;dolsll
000340A0 <AmiBlitz3.ab3@25681>   Ds.l 3
000340A2 <AmiBlitz3.ab3@25682>   Dc.b $17,$70
000340A4 <AmiBlitz3.ab3@25684>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000340A8 <AmiBlitz3.ab3@25685>   Dc.l do_LSL                                   ;dolslb
000340AC <AmiBlitz3.ab3@25686>   Dc.l do_LSL                                   ;dolslw
000340B0 <AmiBlitz3.ab3@25687>   Dc.l do_LSL                                   ;dolsll
000340B4 <AmiBlitz3.ab3@25688>   Dc.l do_LSL                                   ;dolsll
000340C0 <AmiBlitz3.ab3@25689>   Ds.l 3
000340C2 <AmiBlitz3.ab3@25690>   Dc.b $17,$70
000340C4 <AmiBlitz3.ab3@25692>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000340C8 <AmiBlitz3.ab3@25693>   Dc.l do_LSR                                   ;dolsrb
000340CC <AmiBlitz3.ab3@25694>   Dc.l do_LSR                                   ;dolsrw
000340D0 <AmiBlitz3.ab3@25695>   Dc.l do_LSR                                   ;dolsrl
000340D4 <AmiBlitz3.ab3@25696>   Dc.l do_LSR                                   ;dolsrl
000340E0 <AmiBlitz3.ab3@25697>   Ds.l 3
000340E2 <AmiBlitz3.ab3@25698>   Dc.b $17,$70
000340E4 <AmiBlitz3.ab3@25700>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000340E8 <AmiBlitz3.ab3@25701>   Dc.l do_ASR                                   ;doasrb
000340EC <AmiBlitz3.ab3@25702>   Dc.l do_ASR                                   ;doasrw
000340F0 <AmiBlitz3.ab3@25703>   Dc.l do_ASR                                   ;doasrl
000340F4 <AmiBlitz3.ab3@25704>   Dc.l do_ASR                                   ;doasrl
00034100 <AmiBlitz3.ab3@25705>   Ds.l 3
00034102 <AmiBlitz3.ab3@25706>   Dc.b $17,$70
00034104 <AmiBlitz3.ab3@25708>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034108 <AmiBlitz3.ab3@25709>   Dc.l do_mod_byte                              ;domodb
0003410C <AmiBlitz3.ab3@25710>   Dc.l do_mod_word                              ;domodw
00034110 <AmiBlitz3.ab3@25711>   Dc.l do_mod_long                              ;domodl
00034114 <AmiBlitz3.ab3@25712>   Dc.l do_mod_quick                             ;domodq
00034118 <AmiBlitz3.ab3@25713>   Dc.l do_mod_float                             ;domodf
00034120 <AmiBlitz3.ab3@25714>   Ds.l 2
00034122 <AmiBlitz3.ab3@25715>   Dc.b $13,$88
00034124 <AmiBlitz3.ab3@25718>   Dc.b $00,$5E                                  ;^
00034128 <AmiBlitz3.ab3@25719>   Dc.l do_pow                                   ;dopow
0003412C <AmiBlitz3.ab3@25720>   Dc.l do_pow                                   ;dopow
00034130 <AmiBlitz3.ab3@25721>   Dc.l do_pow                                   ;dopow
00034134 <AmiBlitz3.ab3@25722>   Dc.l do_pow                                   ;dopow
00034138 <AmiBlitz3.ab3@25723>   Dc.l do_pow                                   ;dopow
00034140 <AmiBlitz3.ab3@25724>   Ds.l 2
00034142 <AmiBlitz3.ab3@25725>   Dc.b $1B,$58                                  ;7000
00034144 <AmiBlitz3.ab3@25728>   Dc.b $00,$3D                                  ;=
00034148 <AmiBlitz3.ab3@25729>   Dc.l do_equal_byte                            ;doeqb
0003414C <AmiBlitz3.ab3@25730>   Dc.l do_equal_word                            ;doeqw
00034150 <AmiBlitz3.ab3@25731>   Dc.l do_equal_long                            ;doeql
00034154 <AmiBlitz3.ab3@25732>   Dc.l do_equal_long                            ;doeql
00034158 <AmiBlitz3.ab3@25733>   Dc.l do_equal_float                           ;doeqf
0003415C <AmiBlitz3.ab3@25734>   Dc.l do_equal_long                            ;doeql
00034160 <AmiBlitz3.ab3@25735>   Dc.l do_equal_string                          ;doeqs
00034162 <AmiBlitz3.ab3@25736>   Dc.b $07,$D0                                  ;2000
00034164 <AmiBlitz3.ab3@25739>   Dc.b $3C,$3E                                  ;<>
00034168 <AmiBlitz3.ab3@25740>   Dc.l do_not_equal_byte                        ;doneb
0003416C <AmiBlitz3.ab3@25741>   Dc.l do_not_equal_word                        ;donew
00034170 <AmiBlitz3.ab3@25742>   Dc.l do_not_equal_long                        ;donel
00034174 <AmiBlitz3.ab3@25743>   Dc.l do_not_equal_long                        ;donel
00034178 <AmiBlitz3.ab3@25744>   Dc.l do_not_equal_float                       ;donef
0003417C <AmiBlitz3.ab3@25745>   Dc.l do_not_equal_long                        ;donel
00034180 <AmiBlitz3.ab3@25746>   Dc.l do_not_equal_string                      ;dones
00034182 <AmiBlitz3.ab3@25747>   Dc.b $07,$D0                                  ;2000
00034184 <AmiBlitz3.ab3@25750>   Dc.b $00,$3C                                  ;<
00034188 <AmiBlitz3.ab3@25751>   Dc.l do_littler_byte                          ;doltb
0003418C <AmiBlitz3.ab3@25752>   Dc.l do_littler_word                          ;doltw
00034190 <AmiBlitz3.ab3@25753>   Dc.l do_littler_long                          ;doltl
00034194 <AmiBlitz3.ab3@25754>   Dc.l do_littler_long                          ;doltl
00034198 <AmiBlitz3.ab3@25755>   Dc.l do_littler_float                         ;doltf
0003419C <AmiBlitz3.ab3@25756>   Dc.l do_littler_long                          ;doltl
000341A0 <AmiBlitz3.ab3@25757>   Dc.l do_littler_string                        ;dolts
000341A2 <AmiBlitz3.ab3@25758>   Dc.b $07,$D0                                  ;2000
000341A4 <AmiBlitz3.ab3@25761>   Dc.b $3C,$3D                                  ;<=
000341A8 <AmiBlitz3.ab3@25762>   Dc.l do_littler_equal_byte                    ;doleb
000341AC <AmiBlitz3.ab3@25763>   Dc.l do_littler_equal_word                    ;doleb
000341B0 <AmiBlitz3.ab3@25764>   Dc.l do_littler_equal_long                    ;dolel
000341B4 <AmiBlitz3.ab3@25765>   Dc.l do_littler_equal_long                    ;dolel
000341B8 <AmiBlitz3.ab3@25766>   Dc.l do_littler_equal_float                   ;dolef
000341BC <AmiBlitz3.ab3@25767>   Dc.l do_littler_equal_long                    ;dolel
000341C0 <AmiBlitz3.ab3@25768>   Dc.l do_littler_equal_string                  ;doles
000341C2 <AmiBlitz3.ab3@25769>   Dc.b $07,$D0                                  ;2000
000341C4 <AmiBlitz3.ab3@25772>   Dc.b $00,$3E                                  ;>
000341C8 <AmiBlitz3.ab3@25773>   Dc.l do_greater_byte                          ;dogtb
000341CC <AmiBlitz3.ab3@25774>   Dc.l do_greater_word                          ;dogtw
000341D0 <AmiBlitz3.ab3@25775>   Dc.l do_greater_long                          ;dogtl
000341D4 <AmiBlitz3.ab3@25776>   Dc.l do_greater_long                          ;dogtl
000341D8 <AmiBlitz3.ab3@25777>   Dc.l do_greater_float                         ;dogtf
000341DC <AmiBlitz3.ab3@25778>   Dc.l do_greater_long                          ;dogtl
000341E0 <AmiBlitz3.ab3@25779>   Dc.l do_greater_string                        ;dogts
000341E2 <AmiBlitz3.ab3@25780>   Dc.b $07,$D0                                  ;2000
000341E4 <AmiBlitz3.ab3@25783>   Dc.b $3E,$3D                                  ;>=
000341E8 <AmiBlitz3.ab3@25784>   Dc.l do_greater_equal_byte                    ;dogeb
000341EC <AmiBlitz3.ab3@25785>   Dc.l do_greater_equal_word                    ;dogew
000341F0 <AmiBlitz3.ab3@25786>   Dc.l do_greater_equal_long                    ;dogel
000341F4 <AmiBlitz3.ab3@25787>   Dc.l do_greater_equal_long                    ;dogel
000341F8 <AmiBlitz3.ab3@25788>   Dc.l do_greater_equal_float                   ;dogef
000341FC <AmiBlitz3.ab3@25789>   Dc.l do_greater_equal_long                    ;dogel
00034200 <AmiBlitz3.ab3@25790>   Dc.l do_greater_equal_string                  ;doges
00034202 <AmiBlitz3.ab3@25791>   Dc.b $07,$D0                                  ;2000
00034204 <AmiBlitz3.ab3@25793>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034208 <AmiBlitz3.ab3@25794>   Dc.l _BitTst
0003420C <AmiBlitz3.ab3@25795>   Dc.l _BitTst
00034210 <AmiBlitz3.ab3@25796>   Dc.l _BitTst
00034214 <AmiBlitz3.ab3@25797>   Dc.l _BitTst
00034220 <AmiBlitz3.ab3@25798>   Ds.l 3
00034222 <AmiBlitz3.ab3@25799>   Dc.b $1F,$40                                  ;8000
00034224 <AmiBlitz3.ab3@25801>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034228 <AmiBlitz3.ab3@25802>   Dc.l _BitSet
0003422C <AmiBlitz3.ab3@25803>   Dc.l _BitSet
00034230 <AmiBlitz3.ab3@25804>   Dc.l _BitSet
00034234 <AmiBlitz3.ab3@25805>   Dc.l _BitSet
00034240 <AmiBlitz3.ab3@25806>   Ds.l 3
00034242 <AmiBlitz3.ab3@25807>   Dc.b $1F,$40                                  ;8000
00034244 <AmiBlitz3.ab3@25809>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034248 <AmiBlitz3.ab3@25810>   Dc.l _BitClr
0003424C <AmiBlitz3.ab3@25811>   Dc.l _BitClr
00034250 <AmiBlitz3.ab3@25812>   Dc.l _BitClr
00034254 <AmiBlitz3.ab3@25813>   Dc.l _BitClr
00034260 <AmiBlitz3.ab3@25814>   Ds.l 3
00034262 <AmiBlitz3.ab3@25815>   Dc.b $1F,$40                                  ;8000
00034264 <AmiBlitz3.ab3@25817>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034268 <AmiBlitz3.ab3@25818>   Dc.l _BitChg
0003426C <AmiBlitz3.ab3@25819>   Dc.l _BitChg
00034270 <AmiBlitz3.ab3@25820>   Dc.l _BitChg
00034274 <AmiBlitz3.ab3@25821>   Dc.l _BitChg
00034280 <AmiBlitz3.ab3@25822>   Ds.l 3
00034282 <AmiBlitz3.ab3@25823>   Dc.b $1F,$40                                  ;8000
00034284 <AmiBlitz3.ab3@25825>   Dc.b $00,$00
00034288 <AmiBlitz3.ab3@25830> modetable:   Dc.l typemode
0003428C <AmiBlitz3.ab3@25833> newtypebase: Dc.l newtype_byte
00034294 <AmiBlitz3.ab3@25836>   Dc.l newtype_word,$01                                    
00034296 <AmiBlitz3.ab3@25837>   Dc.w $0001
0003429A <AmiBlitz3.ab3@25838>   Dc.b 13,"b",0,0
000342A2 <AmiBlitz3.ab3@25841>   Dc.l newtype_long,$02
000342A4 <AmiBlitz3.ab3@25842>   Dc.w $0002
000342A8 <AmiBlitz3.ab3@25843>   Dc.b 13,"w",0,0
000342B0 <AmiBlitz3.ab3@25846>   Dc.l newtype_quick,$03                                   
000342B2 <AmiBlitz3.ab3@25847>   Dc.w $0004
000342B6 <AmiBlitz3.ab3@25848>   Dc.b 13,"l",0,0
000342BE <AmiBlitz3.ab3@25851>   Dc.l newtype_float,$04                                   
000342C0 <AmiBlitz3.ab3@25852>   Dc.w $0004
000342C4 <AmiBlitz3.ab3@25853>   Dc.b 13,"q",0,0
000342CC <AmiBlitz3.ab3@25857>   Dc.l newtype_double,$05                                  ;make problems on old residents
000342CE <AmiBlitz3.ab3@25858>   Dc.w $0004
000342D2 <AmiBlitz3.ab3@25859>   Dc.b 13,"f",0,0
000342DA <AmiBlitz3.ab3@25862>   Dc.l newtype_double,$06
000342DC <AmiBlitz3.ab3@25863>   Dc.w $0004
000342E0 <AmiBlitz3.ab3@25864>   Dc.b 13,"a",0,0
000342E8 <AmiBlitz3.ab3@25867>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000342EA <AmiBlitz3.ab3@25868>   Dc.w $0008
000342EE <AmiBlitz3.ab3@25869>   Dc.b 13,"d",0,0
000342F6 <AmiBlitz3.ab3@25873>   Dc.l $0000000,$07                                        ;stringtype
000342F8 <AmiBlitz3.ab3@25874>   Dc.w $0004
000342FC <AmiBlitz3.ab3@25875>   Dc.b 13,"s",0,0
00034304 <AmiBlitz3.ab3@25878>   Dc.l $00,$00
00034306 <AmiBlitz3.ab3@25879>   Dc.w $0000
0003430A <AmiBlitz3.ab3@25880>   Dc.b $01,$00,$00,$00
0003436A <AmiBlitz3.ab3@25883> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
0003436C <AmiBlitz3.ab3@25887> dirmode:              Ds.w 1                               ;shows if directmode is on
00034370 <AmiBlitz3.ab3@25889>                       Ds.l 1                               ;int org source ;intuition!
00034372 <AmiBlitz3.ab3@25890> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034376 <AmiBlitz3.ab3@25891> maxsat:               Ds.l 1                               ;data1 info pos
00034378 <AmiBlitz3.ab3@25892> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003437A <AmiBlitz3.ab3@25894> maxsused:             Ds.w 1                               ;maximums used in prog
0003437C <AmiBlitz3.ab3@25898> dark:                 Ds.w 1                               ;dark compile?
0003437E <AmiBlitz3.ab3@25899> qlab:                 Ds.w 1                               ;quick lab allocate
00034382 <AmiBlitz3.ab3@25900> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034384 <AmiBlitz3.ab3@25905> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034386 <AmiBlitz3.ab3@25906> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
0003438A <AmiBlitz3.ab3@25907> noinits:              Ds.l 1                               ;flag for if we have any init routines!
0003438E <AmiBlitz3.ab3@25909> letstart:             Ds.l 1
00034390 <AmiBlitz3.ab3@25910> dontwrite:            Ds.w 1                               ;nomemleft org source
00034410 <AmiBlitz3.ab3@25911> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034414 <AmiBlitz3.ab3@25913> locdatast:            Ds.l 1
00034418 <AmiBlitz3.ab3@25914> firstpend:            Ds.l 1
0003441C <AmiBlitz3.ab3@25918> data2at:              Ds.l 1
00034420 <AmiBlitz3.ab3@25919> data2:                Ds.l 1
00034424 <AmiBlitz3.ab3@25920> data1start:           Ds.l 1                               ;data1at org source
00034428 <AmiBlitz3.ab3@25921> data1:                Ds.l 1                               ;pc for initialized data!
0003442C <AmiBlitz3.ab3@25922> destbufferstart:      Ds.l 1                               ;pcat org source
00034430 <AmiBlitz3.ab3@25926> destbufferend:        Ds.l 1                               ;libat org source
00034434 <AmiBlitz3.ab3@25927> libend:               Ds.l 1                               ;lib org source
00034438 <AmiBlitz3.ab3@25928> allat:                Ds.l 1                               ;highest allocmemd location for code
00034442 <AmiBlitz3.ab3@25929> dummyasm:             Dc.w 0,0,0,0,0
00034446 <AmiBlitz3.ab3@25930>                       Dc.l 0
00034448 <AmiBlitz3.ab3@25931>                       Dc.w 0
0003444C <AmiBlitz3.ab3@25935> buff1:                Ds.l 1                               ;buffer for text get
00034450 <AmiBlitz3.ab3@25936> buff2:                Ds.l 1                               ;ditto for dest
00034452 <AmiBlitz3.ab3@25937> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034454 <AmiBlitz3.ab3@25938> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034456 <AmiBlitz3.ab3@25939> extraword:            Ds.w 1                               ;the extension word for assembler
00034458 <AmiBlitz3.ab3@25940> extraword2:           Ds.w 1                               ;ditto
0003445A <AmiBlitz3.ab3@25941> asmsize:              Ds.w 1
0003445E <AmiBlitz3.ab3@25942> asmbuff:              Ds.l 1
00034460 <AmiBlitz3.ab3@25943> asmlen:               Ds.w 1                               ;first (src) text len
00034462 <AmiBlitz3.ab3@25944> asmlen2:              Ds.w 1                               ;second (dest)
00034466 <AmiBlitz3.ab3@25945> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034468 <AmiBlitz3.ab3@25948> macnum:               Ds.w 1
0003446C <AmiBlitz3.ab3@25950>                       Dc.l 0                               ;address of next 0 in include fil
00034470 <AmiBlitz3.ab3@25951> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003447A <AmiBlitz3.ab3@25952> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003447C <AmiBlitz3.ab3@25953> connest:              Ds.w 1                               ;conditional nest level
00034480 <AmiBlitz3.ab3@25954> firstconst:           Ds.l 1                               ;first constant (#a)
00034482 <AmiBlitz3.ab3@25955> numarg:               Ds.w 1                               ;number of macro arguements
00034486 <AmiBlitz3.ab3@25956> myoline:              Ds.l 1                               ;macro done yet?
0003448A <AmiBlitz3.ab3@25957> myline:               Ds.l 1                               ;pointer to some memory to create
0003448E <AmiBlitz3.ab3@25960>                       Ds.l 1
000344CE <AmiBlitz3.ab3@25961> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000344D2 <AmiBlitz3.ab3@25962> concomsp:             Dc.l concomstack                     ;stack pointer
000344D4 <AmiBlitz3.ab3@25963> oldqflag:             Ds.w 1
000344D8 <AmiBlitz3.ab3@25966>                       Ds.l 1
000344DA <AmiBlitz3.ab3@25968>                       Ds.w 1
000344DE <AmiBlitz3.ab3@25969> firstfor:             Ds.l 1                               ;first for
000344E0 <AmiBlitz3.ab3@25970> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000344E2 <AmiBlitz3.ab3@25971> sbgot:                Ds.w 1                               ;flag for string got 2
000344E4 <AmiBlitz3.ab3@25972> convsize:             Ds.w 1                               ;usertype org source
000344E6 <AmiBlitz3.ab3@25973> userp:                Ds.w 1
000344EA <AmiBlitz3.ab3@25978> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000344EC <AmiBlitz3.ab3@25979> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000344EE <AmiBlitz3.ab3@25980> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000344F2 <AmiBlitz3.ab3@25982> locloc:               Ds.l 1
000344F4 <AmiBlitz3.ab3@25983> locchar:              Ds.w 1
00034574 <AmiBlitz3.ab3@25984> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00034576 <AmiBlitz3.ab3@25985> commode:              Ds.w 1                               ;in comma mode...
0003457A <AmiBlitz3.ab3@25986> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003457E <AmiBlitz3.ab3@25987> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00034582 <AmiBlitz3.ab3@25988> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00034584 <AmiBlitz3.ab3@25990>                       Ds.w 1                               ;opt reset offset
00034684 <AmiBlitz3.ab3@25992>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00034784 <AmiBlitz3.ab3@25994>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00034786 <AmiBlitz3.ab3@25995> varcodelen:           Ds.w 1                               ;and length
00034788 <AmiBlitz3.ab3@25997>                       Ds.w 1
0003478E <AmiBlitz3.ab3@25998> oldvcodelen:          Ds.w 3                               ;old varcodelen
00034790 <AmiBlitz3.ab3@26001> Even4
00034794 <AmiBlitz3.ab3@26002> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00034796 <AmiBlitz3.ab3@26003> memlibstat:           Ds.w 1                               ;status of memory library during
00034798 <AmiBlitz3.ab3@26006>                       Dc.w 0
0003479A <AmiBlitz3.ab3@26008>                       Dc.w 0
0003479C <AmiBlitz3.ab3@26010> varmode:              Ds.w 1                               ;0 a5 pointer to global
000347A0 <AmiBlitz3.ab3@26012> currentfunction:      Ds.l 1                               ;thisproc org source
000347A4 <AmiBlitz3.ab3@26013> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000347A6 <AmiBlitz3.ab3@26014> 
000347A8 <AmiBlitz3.ab3@26016> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000347AC <AmiBlitz3.ab3@26017> passstack:            Ds.l 1
000347B0 <AmiBlitz3.ab3@26018> zero:                 Ds.l 1                               ;ZERO!
000347B2 <AmiBlitz3.ab3@26019> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000347B6 <AmiBlitz3.ab3@26021> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000347BA <AmiBlitz3.ab3@26022> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000347BC <AmiBlitz3.ab3@26023> lasta6:               Dc.w $FFFF                           ;-1 org source
000347BE <AmiBlitz3.ab3@26024> instringon:           Ds.w 1                               ;quoteflag org source
000347C2 <AmiBlitz3.ab3@26025> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000347C6 <AmiBlitz3.ab3@26026> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000347CA <AmiBlitz3.ab3@26027> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000347CE <AmiBlitz3.ab3@26028> endop:                Ds.l 1                               ;end of program pc - before finishups!
000347D2 <AmiBlitz3.ab3@26029> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000347D6 <AmiBlitz3.ab3@26030> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000347D8 <AmiBlitz3.ab3@26031> numstatic:            Ds.w 1                               ;number of static structs
000347DC <AmiBlitz3.ab3@26032> staticdata:           Ds.l 1                               ;data1 val for statics
000347E0 <AmiBlitz3.ab3@26033> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000347E2 <AmiBlitz3.ab3@26034> sbasegot:             Ds.w 1                               ;string base got?
000347E6 <AmiBlitz3.ab3@26035> litdata1:             Ds.l 1
000347EA <AmiBlitz3.ab3@26039> objlen:               Ds.l 1
000347EE <AmiBlitz3.ab3@26040> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000347F2 <AmiBlitz3.ab3@26041> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000347F4 <AmiBlitz3.ab3@26043> flagmask:             Ds.w 1                               ;mask for flag of variable when
000347F6 <AmiBlitz3.ab3@26045> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000347F8 <AmiBlitz3.ab3@26046> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000347FC <AmiBlitz3.ab3@26047> temp1:                Ds.l 1
00034800 <AmiBlitz3.ab3@26048> temp2:                Ds.l 1
00034804 <AmiBlitz3.ab3@26050> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00034808 <AmiBlitz3.ab3@26051> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
0003487C <AmiBlitz3.ab3@26052> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00034880 <AmiBlitz3.ab3@26053> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00034900 <AmiBlitz3.ab3@26055> namebuff2:            Ds.b 128
00034908 <AmiBlitz3.ab3@26056>                       Ds.b 8                               ;for fileinfoblock
00034948 <AmiBlitz3.ab3@26059> optstuff:             Ds.b 64                              ;temp opt make buffer
0003494A <AmiBlitz3.ab3@26076>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003494E <AmiBlitz3.ab3@26077>   Dc.l xtra_versionnumber                                  ; vers org source
00034952 <AmiBlitz3.ab3@26078>   Dc.l create_iconfile                                     ; create icon for executable
00034956 <AmiBlitz3.ab3@26079>   Ds.l 1
00034958 <AmiBlitz3.ab3@26081>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
0003495C <AmiBlitz3.ab3@26084>   Dc.l set_use_debugger
00034960 <AmiBlitz3.ab3@26085>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00034964 <AmiBlitz3.ab3@26086>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00034968 <AmiBlitz3.ab3@26087>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
0003496C <AmiBlitz3.ab3@26088>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00034970 <AmiBlitz3.ab3@26089>   Dc.l set_make_smallestcode
00034974 <AmiBlitz3.ab3@26090>   Dc.l set_link_debuginfo
00034978 <AmiBlitz3.ab3@26091>   Dc.l set_autorun
0003497C <AmiBlitz3.ab3@26092>   Dc.l set_interruptcheck
00034980 <AmiBlitz3.ab3@26093>   Dc.l set_assemblercheck
00034984 <AmiBlitz3.ab3@26095>   Dc.l set_overflowcheck
00034988 <AmiBlitz3.ab3@26096>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
0003498C <AmiBlitz3.ab3@26097>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00034990 <AmiBlitz3.ab3@26098>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00034994 <AmiBlitz3.ab3@26101>   Ds.l 1
00034996 <AmiBlitz3.ab3@26103>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003499A <AmiBlitz3.ab3@26110>   Dc.l objectbuffer
0003499E <AmiBlitz3.ab3@26111>   Dc.l libsbuffer
000349A2 <AmiBlitz3.ab3@26112>   Dc.l systembuffer
000349A6 <AmiBlitz3.ab3@26113>   Dc.l databuffer
000349AA <AmiBlitz3.ab3@26114>   Dc.l macrobuffer_size
000349AE <AmiBlitz3.ab3@26115>   Dc.l stringbuffer
000349B2 <AmiBlitz3.ab3@26118>   Ds.l 1
000349B4 <AmiBlitz3.ab3@26122>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
000349BC <AmiBlitz3.ab3@26123>   Dc.l residents_table,0
000349BE <AmiBlitz3.ab3@26127>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
000349C6 <AmiBlitz3.ab3@26128>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
000349C8 <AmiBlitz3.ab3@26129>   Ds.w 1
00034AC4 <AmiBlitz3.ab3@26133>   Ds.l 63
00034BC0 <AmiBlitz3.ab3@26134>   Ds.l 63
00034CBC <AmiBlitz3.ab3@26135>   Ds.l 63
00034D9E <AmiBlitz3.ab3@26136>   Ds.w 113
00034DA0 <AmiBlitz3.ab3@26139> comsettings_message:  Ds.w 1                               ;allchg org source
00034DA2 <AmiBlitz3.ab3@26140> xtra_versionnumber:   Ds.w 1                               ;vers org source
00034DA8 <AmiBlitz3.ab3@26144>   CLR.b exefilename
00034DAA <AmiBlitz3.ab3@26145>   TST.l d0
00034DAE <AmiBlitz3.ab3@26146>   BNE read_xtrafile__l10
00034DB0 <AmiBlitz3.ab3@26147> RTS
00034DB6 <AmiBlitz3.ab3@26150>   JSR free_residents                                       ;jsr freeres2 org source
00034DBC <AmiBlitz3.ab3@26151> 
00034DC2 <AmiBlitz3.ab3@26152>   LEA ptr_xtradata,A2
00034DC4 <AmiBlitz3.ab3@26153>   MOVEQ.l #$00,D4
00034DC6 <AmiBlitz3.ab3@26156>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00034DCA <AmiBlitz3.ab3@26157>     BEQ.b read_xtrafile__done
00034DCC <AmiBlitz3.ab3@26160>     MOVE.l (A2)+,D2
00034DD0 <AmiBlitz3.ab3@26161>   BEQ.b read_xtrafile__loop
00034DD2 <AmiBlitz3.ab3@26163>   MOVE.l D4,D3
00034DD4 <AmiBlitz3.ab3@26164>   MOVE.l D7,D1
00034DD8 <AmiBlitz3.ab3@26165>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00034DDA <AmiBlitz3.ab3@26166>   TST.l D0
00034DDE <AmiBlitz3.ab3@26167>   BNE.b read_xtrafile__loop2
00034DE2 <AmiBlitz3.ab3@26168> BRA.w read_xtrafile__done2
00034DE8 <AmiBlitz3.ab3@26171>   TST.b xtra_versionnumber
00034DEC <AmiBlitz3.ab3@26172>    BNE.b read_xtrafile__nover0
00034DF4 <AmiBlitz3.ab3@26173>   MOVE.w #$0080,set_autorun                                ;auto run on
00034DFE <AmiBlitz3.ab3@26174>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00034E04 <AmiBlitz3.ab3@26175>   CLR.w set_assemblercheck                                 ;assembler checking off
00034E0E <AmiBlitz3.ab3@26176>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00034E12 <AmiBlitz3.ab3@26177> BRA.b read_xtrafile__ver0
00034E14 <AmiBlitz3.ab3@26180>   MOVE.l D7,D1                                             ;load cli arg!
00034E1A <AmiBlitz3.ab3@26181>   MOVE.l #str_cliarguments,D2
00034E20 <AmiBlitz3.ab3@26182>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00034E24 <AmiBlitz3.ab3@26183>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00034E2A <AmiBlitz3.ab3@26184>   MOVE.l #str_cliarguments,A0
00034E30 <AmiBlitz3.ab3@26185>   ADDA.l #115,A0
00034E36 <AmiBlitz3.ab3@26186>   MOVE.l #0,(a0) ; terminate it!
00034E38 <AmiBlitz3.ab3@26188>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00034E3E <AmiBlitz3.ab3@26189>   MOVE.l #stacksize,D2
00034E44 <AmiBlitz3.ab3@26190>   MOVE.l #4,D3
00034E48 <AmiBlitz3.ab3@26191>   JSR _Read(A6)
00034E52 <AmiBlitz3.ab3@26192>   CMP.l ##MIN_STACKSIZE,stacksize
00034E56 <AmiBlitz3.ab3@26193>   BGE 'stackok
00034E60 <AmiBlitz3.ab3@26194>   MOVE.l ##MIN_STACKSIZE,stacksize
00034E62 <AmiBlitz3.ab3@26197>   MOVE.l D7,D1
00034E68 <AmiBlitz3.ab3@26198>   MOVE.l #versioninformation,D2
00034E6E <AmiBlitz3.ab3@26199>   MOVE.l #4,D3
00034E72 <AmiBlitz3.ab3@26200>   JSR _Read(A6)
00034E74 <AmiBlitz3.ab3@26202>   MOVE.l D7,D1
00034E7A <AmiBlitz3.ab3@26203>   MOVE.l #number_of_builds,D2
00034E80 <AmiBlitz3.ab3@26204>   MOVE.l #4,D3
00034E84 <AmiBlitz3.ab3@26205>   JSR _Read(A6)
00034E8A <AmiBlitz3.ab3@26211> 
00034E90 <AmiBlitz3.ab3@26212>   MOVE.l A7,errstack
00034E9A <AmiBlitz3.ab3@26213>   MOVE.l #read_xtrafile__done2,errcont
00034EA2 <AmiBlitz3.ab3@26214>   MOVE.w #$FFFF,ezerr
00034EA8 <AmiBlitz3.ab3@26217>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00034EAA <AmiBlitz3.ab3@26218>     MOVEQ.l #$04,D3
00034EAC <AmiBlitz3.ab3@26219>     MOVE.l D7,D1
00034EB0 <AmiBlitz3.ab3@26220>     JSR _Read(A6)
00034EB2 <AmiBlitz3.ab3@26221>     TST.l D0
00034EB6 <AmiBlitz3.ab3@26222>     BEQ.b read_xtrafile__done2
00034EBC <AmiBlitz3.ab3@26223>     MOVE.w temp1,D1
00034EBE <AmiBlitz3.ab3@26224>     TST.w d1                                               ;new
00034EC2 <AmiBlitz3.ab3@26225>     BEQ read_xtrafile__done2                                         ;new
00034EC8 <AmiBlitz3.ab3@26226>      JSR AJL_0_6F1A
00034ECE <AmiBlitz3.ab3@26228>     CMP.l #0,a1
00034ED2 <AmiBlitz3.ab3@26229>     BEQ read_xtrafile__dloop
00034ED6 <AmiBlitz3.ab3@26230>     MOVE.l $12(A1),D0
00034EDE <AmiBlitz3.ab3@26231>     MOVE.w temp1+2,-$4(A1,D0.L)
00034EE2 <AmiBlitz3.ab3@26232> BRA.b read_xtrafile__dloop
00034EE6 <AmiBlitz3.ab3@26238>   LEA residents_table(PC),A0
00034EE8 <AmiBlitz3.ab3@26239>   MOVEQ.l #$07,D0
00034EEC <AmiBlitz3.ab3@26242>     CLR.l $40(A0)
00034EF0 <AmiBlitz3.ab3@26243>     LEA ResidentEntryStep(A0),A0   ; $44
00034EF4 <AmiBlitz3.ab3@26244>   DBF D0,read_xtrafile__loop3
00034EF8 <AmiBlitz3.ab3@26246>   MOVEM.l D7/A6,-(A7)
00034EFE <AmiBlitz3.ab3@26247>   JSR init_buffers
00034F04 <AmiBlitz3.ab3@26248>   JSR reloadresident
00034F08 <AmiBlitz3.ab3@26249>   MOVEM.l (A7)+,D7/A6
00034F0A <AmiBlitz3.ab3@26250> RTS
00034F12 <AmiBlitz3.ab3@26254>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00034F18 <AmiBlitz3.ab3@26263>   LEA ptr_xtradata,A2
00034F1A <AmiBlitz3.ab3@26264>   MOVEQ.l #$00,D4
00034F1C <AmiBlitz3.ab3@26268>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00034F20 <AmiBlitz3.ab3@26269>   BEQ.b write_xtrafile__done
00034F22 <AmiBlitz3.ab3@26272>    MOVE.l (A2)+,D2
00034F26 <AmiBlitz3.ab3@26273>    BEQ.b write_xtrafile__loop
00034F28 <AmiBlitz3.ab3@26275>    MOVE.l D4,D3
00034F2A <AmiBlitz3.ab3@26276>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00034F2E <AmiBlitz3.ab3@26277>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00034F32 <AmiBlitz3.ab3@26278> BRA.b write_xtrafile__loop2
00034F34 <AmiBlitz3.ab3@26281>   MOVE.l D7,D1
00034F3A <AmiBlitz3.ab3@26282>   MOVE.l #str_cliarguments,D2
00034F40 <AmiBlitz3.ab3@26283>   MOVE.l #116,D3
00034F44 <AmiBlitz3.ab3@26284>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00034F46 <AmiBlitz3.ab3@26286>   MOVE.l D7,D1
00034F4C <AmiBlitz3.ab3@26287>   MOVE.l #stacksize,D2
00034F52 <AmiBlitz3.ab3@26288>   MOVE.l #4,D3
00034F56 <AmiBlitz3.ab3@26289>   JSR _Write(A6)
00034F58 <AmiBlitz3.ab3@26291>   MOVE.l D7,D1
00034F5E <AmiBlitz3.ab3@26292>   MOVE.l #versioninformation,D2
00034F64 <AmiBlitz3.ab3@26293>   MOVE.l #4,D3
00034F68 <AmiBlitz3.ab3@26294>   JSR _Write(A6)
00034F6A <AmiBlitz3.ab3@26296>   MOVE.l D7,D1
00034F70 <AmiBlitz3.ab3@26297>   MOVE.l #number_of_builds,D2
00034F76 <AmiBlitz3.ab3@26298>   MOVE.l #4,D3
00034F7A <AmiBlitz3.ab3@26299>   JSR _Write(A6)
00034F80 <AmiBlitz3.ab3@26305>   LEA libpointer,A2
00034F82 <AmiBlitz3.ab3@26308>     MOVE.l (A2),D0
00034F86 <AmiBlitz3.ab3@26309>     BEQ.w write_xtrafile__done2
00034F88 <AmiBlitz3.ab3@26310>     MOVEA.l D0,A2
00034F8C <AmiBlitz3.ab3@26311>     MOVE.l $12(A2),D4
00034F90 <AmiBlitz3.ab3@26312>     TST.w -$2(A2,D4.L)
00034F94 <AmiBlitz3.ab3@26313>     BEQ.w write_xtrafile__loop3
00034F98 <AmiBlitz3.ab3@26315>     LEA $4(A2),A0
00034F9A <AmiBlitz3.ab3@26316>     MOVE.l A0,D2
00034F9C <AmiBlitz3.ab3@26317>     MOVEQ.l #$02,D3
00034F9E <AmiBlitz3.ab3@26318>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00034FA2 <AmiBlitz3.ab3@26319>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00034FA6 <AmiBlitz3.ab3@26321>     LEA -$4(A2,D4.L),A0
00034FA8 <AmiBlitz3.ab3@26322>     MOVE.l A0,D2
00034FAA <AmiBlitz3.ab3@26323>     MOVEQ.l #$02,D3
00034FAC <AmiBlitz3.ab3@26324>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00034FB0 <AmiBlitz3.ab3@26325>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00034FB4 <AmiBlitz3.ab3@26326> BRA.w write_xtrafile__loop3
00034FBA <AmiBlitz3.ab3@26331>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00034FBC <AmiBlitz3.ab3@26332>   MOVE.l A2,D2           ; move the address to d2
00034FC2 <AmiBlitz3.ab3@26333>   MOVE.l #4,D3           ; we only need 4 bytes to save
00034FC4 <AmiBlitz3.ab3@26334>   MOVE.l D7,D1           ; we set the file handle
00034FC8 <AmiBlitz3.ab3@26335>   JSR _Write(A6)         ; and we write it.
00034FCA <AmiBlitz3.ab3@26337> RTS
00034FD0 <AmiBlitz3.ab3@26342>   LEA optssave,A0                      ; backup address
00034FD6 <AmiBlitz3.ab3@26343>   LEA ptr_xtradata,A1                  ; source address
00034FD8 <AmiBlitz3.ab3@26346>   MOVE.w (A1)+,D0                                          ;length of data move
00034FDC <AmiBlitz3.ab3@26347>   BEQ.b 'backupdone
00034FDE <AmiBlitz3.ab3@26348>   SUBQ.w #1,D0
00034FE0 <AmiBlitz3.ab3@26351>     MOVE.l (A1)+,D1
00034FE4 <AmiBlitz3.ab3@26352>     BEQ.b 'backuploop
00034FE6 <AmiBlitz3.ab3@26353>     MOVEA.l D1,A2
00034FE8 <AmiBlitz3.ab3@26354>     MOVE.w D0,D1
00034FEA <AmiBlitz3.ab3@26357>       MOVE.b (A2)+,(A0)+
00034FEE <AmiBlitz3.ab3@26358>   DBF D1,'backuploop3
00034FF2 <AmiBlitz3.ab3@26360> BRA.w 'backuploop2
00034FF8 <AmiBlitz3.ab3@26364>   LEA bufferlist,A1
00034FFA <AmiBlitz3.ab3@26367>     MOVE.l (A1)+,D2
00034FFE <AmiBlitz3.ab3@26368>     BEQ.b 'loop4done
00035000 <AmiBlitz3.ab3@26370>     MOVEA.l D2,A0
00035002 <AmiBlitz3.ab3@26371>     MOVE.l (A0),D2
00035004 <AmiBlitz3.ab3@26372>     ADDQ.w #8,A0
0003500A <AmiBlitz3.ab3@26373>     JSR makelong
0003500E <AmiBlitz3.ab3@26374> BRA.b 'loop4
00035014 <AmiBlitz3.ab3@26377>   CLR.w state_of_residents                                 ;resident change
0003501A <AmiBlitz3.ab3@26378>   CLR.w comsettings_message                                ;alloc change
00035020 <AmiBlitz3.ab3@26379>   CLR.w maxobject_pos
00035022 <AmiBlitz3.ab3@26380> RTS   ; new tomsmart1
00035028 <AmiBlitz3.ab3@26384>   LEA optssave,A0
0003502E <AmiBlitz3.ab3@26385>   LEA ptr_xtradata,A1
00035030 <AmiBlitz3.ab3@26388>   MOVE.w (A1)+,D0
00035034 <AmiBlitz3.ab3@26389>   BEQ.b 'restoredone
00035036 <AmiBlitz3.ab3@26390>   SUBQ.w #1,D0
00035038 <AmiBlitz3.ab3@26393>     MOVE.l (A1)+,D1
0003503C <AmiBlitz3.ab3@26394>     BEQ.b 'restoreloop1
0003503E <AmiBlitz3.ab3@26395>     MOVEA.l D1,A2
00035040 <AmiBlitz3.ab3@26396>     MOVE.w D0,D1
00035042 <AmiBlitz3.ab3@26399>       MOVE.b (A0)+,(A2)+
00035046 <AmiBlitz3.ab3@26400>   DBF D1,'restoreloop3
0003504A <AmiBlitz3.ab3@26402> BRA.b 'restoreloop2
0003504C <AmiBlitz3.ab3@26405> RTS
00035052 <AmiBlitz3.ab3@26409>   JSR free_residents                    ; first free the allready loaded residents
00035058 <AmiBlitz3.ab3@26410>   JSR Clear_Residents_table             ; second clear the complete resident table
0003505A <AmiBlitz3.ab3@26411> RTS
00035062 <AmiBlitz3.ab3@26415>   MOVE.w #$FFFF,state_of_residents
00035068 <AmiBlitz3.ab3@26416>   MOVE.w state_of_residents,D0
0003506E <AmiBlitz3.ab3@26417>   JSR reloadresident
00035070 <AmiBlitz3.ab3@26418> RTS
00035072 <AmiBlitz3.ab3@26423>   MOVE.l d0,a1
00035078 <AmiBlitz3.ab3@26424>   MOVEA.l libpointer,A2
0003507C <AmiBlitz3.ab3@26427>     MOVE.l $12(A2),D0
00035080 <AmiBlitz3.ab3@26428>     TST.w -$2(A2,D0.L)
00035084 <AmiBlitz3.ab3@26429>      BEQ.w JL_0_102AAa
00035086 <AmiBlitz3.ab3@26430>     SUBQ.w #1,D1
0003508A <AmiBlitz3.ab3@26431>      BPL.w JL_0_102AAa
0003508E <AmiBlitz3.ab3@26432>     MOVEA.l -$1A(A2,D0.L),A3
00035090 <AmiBlitz3.ab3@26433>     ADDA.l A2,A3
00035092 <AmiBlitz3.ab3@26436>       MOVE.b (A3)+,(A1)+
00035096 <AmiBlitz3.ab3@26437>     BNE.w JL_0_10294a
00035098 <AmiBlitz3.ab3@26439>     CLR.b -(A1)
0003509C <AmiBlitz3.ab3@26440>     MOVE.w -$4(A2,D0.L),D0
000350A2 <AmiBlitz3.ab3@26441>     AND.l #$ffff,d0
000350A4 <AmiBlitz3.ab3@26442> RTS
000350A6 <AmiBlitz3.ab3@26445>     MOVEA.l (A2),A2
000350AA <AmiBlitz3.ab3@26446> BRA.w JL_0_1027Ca
000350BA <AmiBlitz3.ab3@26451> str_maxobjects_name:   Dc.b "              ",0 : Even
000350CA <AmiBlitz3.ab3@26452> str_maxobjects_name2:  Dc.b "              ",0 : Even
000350CE <AmiBlitz3.ab3@26453> objectbuffer:          Dc.l $00004000
000350D2 <AmiBlitz3.ab3@26454>                        Dc.l $00000000
000350DE <AmiBlitz3.ab3@26455> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000350E2 <AmiBlitz3.ab3@26457> libsbuffer:            Dc.l $00008000
000350E6 <AmiBlitz3.ab3@26458>                        Dc.l $00000000
000350F2 <AmiBlitz3.ab3@26459> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000350F6 <AmiBlitz3.ab3@26461> systembuffer:          Dc.l $00001000                      ; systen buffer
000350FA <AmiBlitz3.ab3@26462>                        Dc.l $00000000
00035106 <AmiBlitz3.ab3@26463> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003510A <AmiBlitz3.ab3@26465> databuffer:            Dc.l $00001000                      ; data buffer
0003510E <AmiBlitz3.ab3@26466>                        Dc.l $00000000
0003511A <AmiBlitz3.ab3@26467> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003511E <AmiBlitz3.ab3@26469> macrobuffer_size:      Dc.l $00002000                      ; macro buffer
00035122 <AmiBlitz3.ab3@26470>                        Dc.l $00000000
0003512E <AmiBlitz3.ab3@26471> str_macrobuffer:       Dc.b "8192",0,0,0,0,0,0,0,0     ; string max 12 columns
00035132 <AmiBlitz3.ab3@26473> stringbuffer:          Dc.l $00002800                      ; string buffer
00035136 <AmiBlitz3.ab3@26474>                        Dc.l $00000000
00035142 <AmiBlitz3.ab3@26475> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035144 <AmiBlitz3.ab3@26477> maxobjects_value:      Dc.w $0064
00035148 <AmiBlitz3.ab3@26478>                        Dc.l $00000000
00035154 <AmiBlitz3.ab3@26479> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035156 <AmiBlitz3.ab3@26481> maxobjects_value2:     Dc.w $0014
00035158 <AmiBlitz3.ab3@26482>                        Dc.w $0000
00035164 <AmiBlitz3.ab3@26484> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035165 <AmiBlitz3.ab3@26488> set_create_iconfile:   Dc.b $00
00035168 <AmiBlitz3.ab3@26489> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003516A <AmiBlitz3.ab3@26490>                        Dc.b $00,$01
0003516B <AmiBlitz3.ab3@26492> set_use_debugger:      Dc.b $00                            ; Flags.w
0003516E <AmiBlitz3.ab3@26493> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035170 <AmiBlitz3.ab3@26494>                        Dc.b $00,$01                        ; GadgetType.w
00035174 <AmiBlitz3.ab3@26495> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035178 <AmiBlitz3.ab3@26496> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003517C <AmiBlitz3.ab3@26497> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003517E <AmiBlitz3.ab3@26498> AL_0_11094:            Ds.w 1
0003517F <AmiBlitz3.ab3@26500> set_make_smallestcode: Ds.b 1
00035182 <AmiBlitz3.ab3@26501> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035184 <AmiBlitz3.ab3@26502>                        Dc.b $00,$01
00035185 <AmiBlitz3.ab3@26503> set_link_debuginfo:    Ds.b 1
00035188 <AmiBlitz3.ab3@26504> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003518A <AmiBlitz3.ab3@26505>                        Dc.b $00,$01
000353AA <AmiBlitz3.ab3@26510>   Ds.l 136         ;resident files STEP $44 piece 8
0003542A <AmiBlitz3.ab3@26515> str_calcexpression:        Ds.l 32
0003542E <AmiBlitz3.ab3@26516> destbufferend_backup_calc: Ds.l 1
00035438 <AmiBlitz3.ab3@26521>   MOVE.l destbufferend,destbufferend_backup_calc
0003543E <AmiBlitz3.ab3@26522> 
00035444 <AmiBlitz3.ab3@26523>   MOVE.l A7,errstack
0003544E <AmiBlitz3.ab3@26524>   MOVE.l #Calc_Error_Exit,errcont
00035478 <AmiBlitz3.ab3@26531>   !basic         ; get the flage for the conversion form the editor
000354BC <AmiBlitz3.ab3@26532>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00035500 <AmiBlitz3.ab3@26533>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
0003551E <AmiBlitz3.ab3@26534>   !asm
00035524 <AmiBlitz3.ab3@26536>   LEA str_calcexpression,A0
0003552A <AmiBlitz3.ab3@26545>   JSR setcvars
00035530 <AmiBlitz3.ab3@26546>   JSR setsvars
00035536 <AmiBlitz3.ab3@26547>   CLR.w connest
0003553C <AmiBlitz3.ab3@26548>   LEA str_calcexpression,A5
00035542 <AmiBlitz3.ab3@26549>   JSR AJL_0_BF6E
00035548 <AmiBlitz3.ab3@26550>   LEA str_calcexpression,A0
0003554A <AmiBlitz3.ab3@26551>   TST.l D3
0003554E <AmiBlitz3.ab3@26552>    BPL.w JL_0_11AE8
00035552 <AmiBlitz3.ab3@26553>   MOVE.b #$2D,(A0)+
00035554 <AmiBlitz3.ab3@26554>   NEG.l D3
0003555C <AmiBlitz3.ab3@26557>   CMPI.w #$80,CalculatorButtonDecFlag
00035560 <AmiBlitz3.ab3@26558>    BEQ.w JL_0_11B74
00035562 <AmiBlitz3.ab3@26559>   MOVEQ.l #$00,D1
0003556A <AmiBlitz3.ab3@26560>   CMPI.w #$80,CalculatorButtonBinFlag
0003556E <AmiBlitz3.ab3@26561>    BNE.w JL_0_11B36
00035570 <AmiBlitz3.ab3@26562>   MOVEQ.l #$1F,D0
00035574 <AmiBlitz3.ab3@26563>   MOVE.b #$25,(A0)+
00035576 <AmiBlitz3.ab3@26566>       LSL.l #1,D3
0003557A <AmiBlitz3.ab3@26567>        BCC.w JL_0_11B18
0003557E <AmiBlitz3.ab3@26568>       MOVE.b #"1",(A0)+
00035580 <AmiBlitz3.ab3@26569>       MOVEQ.l #-$01,D1
00035584 <AmiBlitz3.ab3@26570>   BRA.w JL_0_11B22
00035586 <AmiBlitz3.ab3@26573>       TST.w D1
0003558A <AmiBlitz3.ab3@26574>       BEQ.w JL_0_11B22
0003558E <AmiBlitz3.ab3@26575>       MOVE.b #"0",(A0)+
00035592 <AmiBlitz3.ab3@26578>  DBF D0,JL_0_11B08
00035594 <AmiBlitz3.ab3@26581>   TST.w D1
00035598 <AmiBlitz3.ab3@26582>   BNE.w JL_0_11B30
0003559C <AmiBlitz3.ab3@26583>   MOVE.b #"0",(A0)+
0003559E <AmiBlitz3.ab3@26586>   CLR.b (A0)
000355A2 <AmiBlitz3.ab3@26587> BRA.w JL_0_11B7C
000355A4 <AmiBlitz3.ab3@26590>   MOVEQ.l #$07,D0
000355A8 <AmiBlitz3.ab3@26591>   MOVE.b #$24,(A0)+
000355AA <AmiBlitz3.ab3@26594>     MOVE.l D3,D2
000355AC <AmiBlitz3.ab3@26595>     SWAP D2
000355AE <AmiBlitz3.ab3@26596>     LSR.w #8,D2
000355B0 <AmiBlitz3.ab3@26597>     LSR.w #4,D2
000355B4 <AmiBlitz3.ab3@26598>     ADDI.w #$30,D2
000355B8 <AmiBlitz3.ab3@26599>     CMP.w #$3A,D2
000355BC <AmiBlitz3.ab3@26600>      BCS.w JL_0_11B52
000355BE <AmiBlitz3.ab3@26601>     ADDQ.w #7,D2
000355C2 <AmiBlitz3.ab3@26604>     CMP.w #$30,D2
000355C6 <AmiBlitz3.ab3@26605>     BEQ.w JL_0_11B62
000355C8 <AmiBlitz3.ab3@26606>     MOVE.b D2,(A0)+
000355CA <AmiBlitz3.ab3@26607>     MOVEQ.l #-$01,D1
000355CE <AmiBlitz3.ab3@26608>   BRA.w JL_0_11B6A
000355D0 <AmiBlitz3.ab3@26611>     TST.w D1
000355D4 <AmiBlitz3.ab3@26612>      BEQ.w JL_0_11B6A
000355D6 <AmiBlitz3.ab3@26613>     MOVE.b D2,(A0)+
000355D8 <AmiBlitz3.ab3@26616>     LSL.l #4,D3
000355DC <AmiBlitz3.ab3@26617>  DBF D0,JL_0_11B3C
000355E0 <AmiBlitz3.ab3@26619> BRA.w JL_0_11B26
000355E2 <AmiBlitz3.ab3@26622>   MOVE.l D3,D2
000355E8 <AmiBlitz3.ab3@26623>   JSR makelong
000355F2 <AmiBlitz3.ab3@26630>   MOVE.l destbufferend_backup_calc,destbufferend
000355F4 <AmiBlitz3.ab3@26632> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000356F3 <AmiBlitz3.ab3@26636> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000356F4 <AmiBlitz3.ab3@26638> Even
000356F6 <AmiBlitz3.ab3@26652>     MOVE.b (a5)+,d0
000356FA <AmiBlitz3.ab3@26653>     BEQ 'l2
000356FE <AmiBlitz3.ab3@26654>     CMP.b #$80,d0
00035702 <AmiBlitz3.ab3@26655>     BNE 'l1
00035704 <AmiBlitz3.ab3@26656>     MOVE.b (a5)+,d0
00035708 <AmiBlitz3.ab3@26657>     BEQ 'l2
0003570C <AmiBlitz3.ab3@26658>     CMP.b #$02,d0
00035710 <AmiBlitz3.ab3@26659>   BNE 'l1
00035714 <AmiBlitz3.ab3@26662>     CMP.b #$20,(a5)+
00035718 <AmiBlitz3.ab3@26663>   BEQ 'l3
0003571A <AmiBlitz3.ab3@26664>   SUBQ.l #1,a5
0003571C <AmiBlitz3.ab3@26665>   TST.b (a5)
00035720 <AmiBlitz3.ab3@26666>   BEQ 'l2
00035724 <AmiBlitz3.ab3@26667>   CMP.w #$8008,(a5)
00035728 <AmiBlitz3.ab3@26668>   BEQ 'l4
0003572C <AmiBlitz3.ab3@26669>   CMP.w #$8009,(a5)
00035730 <AmiBlitz3.ab3@26670>   BEQ 'l4
00035734 <AmiBlitz3.ab3@26671> BRA 'l1
00035736 <AmiBlitz3.ab3@26674>   ADDQ.l #2,a5
0003573C <AmiBlitz3.ab3@26675>   JSR skiprest
0003573E <AmiBlitz3.ab3@26676> RTS
00035744 <AmiBlitz3.ab3@26679>   JSR nextline
00035748 <AmiBlitz3.ab3@26680>   BNE 'l1
0003574A <AmiBlitz3.ab3@26681> RTS
00035774 <AmiBlitz3.ab3@26685>   !basic
0003577E <AmiBlitz3.ab3@26686>   DateFormat 1
0003578C <AmiBlitz3.ab3@26687>   i.l=SystemDate
000357B2 <AmiBlitz3.ab3@26688>   a$=Date$ (i)
00035830 <AmiBlitz3.ab3@26689>   a$=Replace$(a$,"/",".")
00035836 <AmiBlitz3.ab3@26690>   GetD0 &a$
00035838 <AmiBlitz3.ab3@26691>   MOVEQ #8,d2
0003583A <AmiBlitz3.ab3@26692>   MOVE.l d0,a0
0003583C <AmiBlitz3.ab3@26695>     MOVE.b (a0)+,d1
00035842 <AmiBlitz3.ab3@26696>     JSR pokedata1b
00035846 <AmiBlitz3.ab3@26697>  DBF d2,'l1
00035848 <AmiBlitz3.ab3@26699>   MOVEQ #0,d0
0003584A <AmiBlitz3.ab3@26700>   MOVE.b (a0)+,d0
00035868 <AmiBlitz3.ab3@26701>   !asm
0003586E <AmiBlitz3.ab3@26702>   ADD.l #9,d2
00035874 <AmiBlitz3.ab3@26703>   ADD.l #9,a5
00035876 <AmiBlitz3.ab3@26704> RTS
000358A0 <AmiBlitz3.ab3@26708>   !basic
000358AA <AmiBlitz3.ab3@26709>   DateFormat 0
000358B8 <AmiBlitz3.ab3@26710>   i.l=SystemDate
000358DE <AmiBlitz3.ab3@26711>   a$=Date$ (i)
0003595C <AmiBlitz3.ab3@26712>   a$=Replace$(a$,"/",".")
00035962 <AmiBlitz3.ab3@26713>   GetD0 &a$
00035964 <AmiBlitz3.ab3@26714>   MOVEQ #8,d2
00035966 <AmiBlitz3.ab3@26715>   MOVE.l d0,a0
00035968 <AmiBlitz3.ab3@26718>     MOVE.b (a0)+,d1
0003596E <AmiBlitz3.ab3@26719>     JSR pokedata1b
00035972 <AmiBlitz3.ab3@26720>  DBF d2,'l1
00035974 <AmiBlitz3.ab3@26722>   MOVEQ #0,d0
00035976 <AmiBlitz3.ab3@26723>   MOVE.b (a0)+,d0
00035994 <AmiBlitz3.ab3@26724>   !asm
0003599A <AmiBlitz3.ab3@26725>   ADD.l #9,d2
000359A0 <AmiBlitz3.ab3@26726>   ADD.l #13,a5
000359A2 <AmiBlitz3.ab3@26727> RTS
000359CC <AmiBlitz3.ab3@26731>   !basic
000359D6 <AmiBlitz3.ab3@26732>   DateFormat 1
000359E4 <AmiBlitz3.ab3@26733>   i.l = SystemDate
00035A0A <AmiBlitz3.ab3@26734>   a$ = Date$ (i)
00035A88 <AmiBlitz3.ab3@26735>   a$ = Replace$(a$,"/",".")
00035A8E <AmiBlitz3.ab3@26736>   GetD0 &a$
00035A90 <AmiBlitz3.ab3@26737>   MOVEQ #8,d2
00035A92 <AmiBlitz3.ab3@26738>   MOVE.l d0,a0
00035A94 <AmiBlitz3.ab3@26741>     MOVE.b (a0)+,d1
00035A9A <AmiBlitz3.ab3@26742>     JSR writebyte
00035A9E <AmiBlitz3.ab3@26743>  DBF d2,'l1
00035AA0 <AmiBlitz3.ab3@26745>   MOVEQ #0,d0
00035AA2 <AmiBlitz3.ab3@26746>   MOVE.b (a0)+,d0
00035AC0 <AmiBlitz3.ab3@26747>   !asm
00035AC6 <AmiBlitz3.ab3@26748>   ADD.l #9,a5
00035AC8 <AmiBlitz3.ab3@26749> RTS
00035AF2 <AmiBlitz3.ab3@26753>   !basic
00035AFC <AmiBlitz3.ab3@26754>   DateFormat 0
00035B0A <AmiBlitz3.ab3@26755>   i.l=SystemDate
00035B30 <AmiBlitz3.ab3@26756>   a$=Date$ (i)
00035BAE <AmiBlitz3.ab3@26757>   a$=Replace$(a$,"/",".")
00035BB4 <AmiBlitz3.ab3@26758>   GetD0 &a$
00035BB6 <AmiBlitz3.ab3@26759>   MOVEQ #8,d2
00035BB8 <AmiBlitz3.ab3@26760>   MOVE.l d0,a0
00035BBA <AmiBlitz3.ab3@26763>     MOVE.b (a0)+,d1
00035BC0 <AmiBlitz3.ab3@26764>     JSR writebyte
00035BC4 <AmiBlitz3.ab3@26765>  DBF d2,'l1
00035BC6 <AmiBlitz3.ab3@26767>   MOVEQ #0,d0
00035BC8 <AmiBlitz3.ab3@26768>   MOVE.b (a0)+,d0
00035BE6 <AmiBlitz3.ab3@26769>   !asm
00035BEC <AmiBlitz3.ab3@26770>   ADD.l #13,a5
00035BEE <AmiBlitz3.ab3@26771> RTS
00035BF0 <AmiBlitz3.ab3@26775>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00035BF2 <AmiBlitz3.ab3@26776>   MOVE.l a5,d0
00035C1C <AmiBlitz3.ab3@26777>   !basic
00035C20 <AmiBlitz3.ab3@26778>   _myD0.l = PutD0
00035C2A <AmiBlitz3.ab3@26779>   If _myD0
00035C70 <AmiBlitz3.ab3@26780>     verstring$ = Left$(Peek.s(_myD0),9+3)
00035CC2 <AmiBlitz3.ab3@26781>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00035CC8 <AmiBlitz3.ab3@26782>   Else
00035D02 <AmiBlitz3.ab3@26783>     error{"INTERNAL: Invalid pointer in version_string!"}
00035D12 <AmiBlitz3.ab3@26788>   actual_version.l = Peek.l(?versioninformation)
00035D22 <AmiBlitz3.ab3@26789>   actual_build.l   = Peek.l(?number_of_builds)
00035D46 <AmiBlitz3.ab3@26791>   Format "00"
00035D7C <AmiBlitz3.ab3@26792>   Select verstring$
00035DA0 <AmiBlitz3.ab3@26794>     Case "VER_MAJOR"
00035DDC <AmiBlitz3.ab3@26795>      put_versionstr$ = Str$(actual_version LSR 24)
00035E06 <AmiBlitz3.ab3@26797>     Case "VER_MINOR"
00035E4A <AmiBlitz3.ab3@26798>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00035E74 <AmiBlitz3.ab3@26800>     Case "VER_PATCH"
00035EB8 <AmiBlitz3.ab3@26801>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00035EE2 <AmiBlitz3.ab3@26803>     Case "VER_BUILD"
00035F06 <AmiBlitz3.ab3@26804>      Format ""
00035F3A <AmiBlitz3.ab3@26805>      put_versionstr$ = Str$(actual_build)
00035F40 <AmiBlitz3.ab3@26807>     Default
00035F68 <AmiBlitz3.ab3@26808>      put_versionstr$ = "{unknown compilerconstant}"
00035F76 <AmiBlitz3.ab3@26811>   End Select
00035F9A <AmiBlitz3.ab3@26812>   Format ""
00035FAA <AmiBlitz3.ab3@26814>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00035FAC <AmiBlitz3.ab3@26815>   MOVE.l d0,d2
00035FAE <AmiBlitz3.ab3@26816>   MOVE.l d2,-(a7)
00035FB2 <AmiBlitz3.ab3@26817>   SUB #1,d2
00035FB8 <AmiBlitz3.ab3@26819>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00035FBA <AmiBlitz3.ab3@26820>   MOVE.l d0,a0
00035FBC <AmiBlitz3.ab3@26823>     MOVE.b (a0)+,d1
00035FC2 <AmiBlitz3.ab3@26824>     JSR pokedata1b
00035FC6 <AmiBlitz3.ab3@26825>  DBF d2,'l1
00035FC8 <AmiBlitz3.ab3@26827>   MOVEQ #0,d0
00035FE6 <AmiBlitz3.ab3@26828>   !asm
00035FE8 <AmiBlitz3.ab3@26829>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00035FEA <AmiBlitz3.ab3@26830>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00035FEC <AmiBlitz3.ab3@26831>   ADD.l d0,d2
00035FF2 <AmiBlitz3.ab3@26832>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00035FF4 <AmiBlitz3.ab3@26833>   MOVEQ #0,d0
00035FF6 <AmiBlitz3.ab3@26834> RTS
00035FF8 <AmiBlitz3.ab3@26838>   MOVE.l a5,d0
00036022 <AmiBlitz3.ab3@26839>   !basic
00036026 <AmiBlitz3.ab3@26840>   _myD0.l = PutD0
00036030 <AmiBlitz3.ab3@26841>   If _myD0
00036076 <AmiBlitz3.ab3@26842>     verstring$ = Left$(Peek.s(_myD0),9+3)
000360C8 <AmiBlitz3.ab3@26843>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000360CE <AmiBlitz3.ab3@26844>   Else
00036108 <AmiBlitz3.ab3@26845>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036118 <AmiBlitz3.ab3@26850>   actual_version.l = Peek.l(?versioninformation)
00036128 <AmiBlitz3.ab3@26851>   actual_build.l   = Peek.l(?number_of_builds)
0003614C <AmiBlitz3.ab3@26853>   Format ""
00036182 <AmiBlitz3.ab3@26854>   Select verstring$
000361A6 <AmiBlitz3.ab3@26856>     Case "VER_MAJOR"
000361E2 <AmiBlitz3.ab3@26857>      put_versionstr$ = Str$(actual_version LSR 24)
0003620C <AmiBlitz3.ab3@26859>     Case "VER_MINOR"
00036250 <AmiBlitz3.ab3@26860>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003627A <AmiBlitz3.ab3@26862>     Case "VER_PATCH"
000362BE <AmiBlitz3.ab3@26863>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000362E8 <AmiBlitz3.ab3@26865>     Case "VER_BUILD"
0003630C <AmiBlitz3.ab3@26866>      Format ""
00036340 <AmiBlitz3.ab3@26867>      put_versionstr$ = Str$(actual_build)
00036346 <AmiBlitz3.ab3@26869>     Default
0003636E <AmiBlitz3.ab3@26870>      put_versionstr$ = "{unknown compilerconstant}"
0003637C <AmiBlitz3.ab3@26872>   End Select
000363A0 <AmiBlitz3.ab3@26873>   Format ""
000363B6 <AmiBlitz3.ab3@26875>   GetD0 FLen(put_versionstr$)-1
000363B8 <AmiBlitz3.ab3@26876>   MOVE.l d0,d2
000363BE <AmiBlitz3.ab3@26878>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000363C0 <AmiBlitz3.ab3@26879>   MOVE.l d0,a0
000363C2 <AmiBlitz3.ab3@26882>     MOVE.b (a0)+,d1
000363C8 <AmiBlitz3.ab3@26883>     JSR writebyte
000363CC <AmiBlitz3.ab3@26884>  DBF d2,'l1
000363CE <AmiBlitz3.ab3@26886>   MOVEQ #0,d0
000363D0 <AmiBlitz3.ab3@26887>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
000363EE <AmiBlitz3.ab3@26888>   !asm
000363F4 <AmiBlitz3.ab3@26889>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000363F6 <AmiBlitz3.ab3@26890> RTS
000363F8 <AmiBlitz3.ab3@26992>  MOVE.l a5,-(a7)
00036424 <AmiBlitz3.ab3@26993>  !fget
00036428 <AmiBlitz3.ab3@26994>  CMP.w #".",d0
0003642C <AmiBlitz3.ab3@26995>  BNE 'skip
00036430 <AmiBlitz3.ab3@26996>  MOVEM.l a2/d2,-(a7)
00036436 <AmiBlitz3.ab3@26997>  LEA newtypebase,a2
0003643C <AmiBlitz3.ab3@26998>  JSR getparameter2
00036440 <AmiBlitz3.ab3@26999>  BEQ.w JUMP_syntaxerr
00036446 <AmiBlitz3.ab3@27000>  JSR findtype
0003644A <AmiBlitz3.ab3@27001>  BNE.w JUMP_notypeerr
00036450 <AmiBlitz3.ab3@27002>  MOVE.l a2,typetocast
00036454 <AmiBlitz3.ab3@27003>  MOVEM.l (a7)+,a2/d2
00036458 <AmiBlitz3.ab3@27004>  CMP.w #")",d0
0003645C <AmiBlitz3.ab3@27005>  BNE JUMP_errorbracketmiss
0003645E <AmiBlitz3.ab3@27006>  ADDQ.l #4,a7
0003648A <AmiBlitz3.ab3@27007>  !fget
00036490 <AmiBlitz3.ab3@27008>  JMP nocast
00036492 <AmiBlitz3.ab3@27010> 'skip MOVE.l (a7)+,a5
00036498 <AmiBlitz3.ab3@27011>  JMP JL_0_A410
0003649E <AmiBlitz3.ab3@27013> JUMP_errorbracketmiss JMP errorbracketmiss
000364C8 <AmiBlitz3.ab3@27015> Function.l ab3_GetIncludeLock{filename.s}
000364E8 <AmiBlitz3.ab3@27016>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00036540 <AmiBlitz3.ab3@27017>   ex.s       = dos_GetExt{filename}
00036554 <AmiBlitz3.ab3@27019>   If incLock = False
000365C8 <AmiBlitz3.ab3@27020>     filename = dos_SetExt{filename,"ab3"}
000365E8 <AmiBlitz3.ab3@27021>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000365FC <AmiBlitz3.ab3@27024>   If incLock = False
00036670 <AmiBlitz3.ab3@27025>     filename = dos_SetExt{filename,"ab2"}
00036690 <AmiBlitz3.ab3@27026>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000366A4 <AmiBlitz3.ab3@27029>   If incLock = False
00036718 <AmiBlitz3.ab3@27030>     filename = dos_SetExt{filename,"bb2"}
00036738 <AmiBlitz3.ab3@27031>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003674C <AmiBlitz3.ab3@27034>   If incLock = False
000367DE <AmiBlitz3.ab3@27035>     filename = dos_SetExt{filename,ex+".ab3"}
000367FE <AmiBlitz3.ab3@27036>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00036812 <AmiBlitz3.ab3@27039>   If incLock = False
00036886 <AmiBlitz3.ab3@27040>     filename = dos_SetExt{filename,"ab2"}
000368A6 <AmiBlitz3.ab3@27041>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
000368BA <AmiBlitz3.ab3@27044>   If incLock = False
0003692E <AmiBlitz3.ab3@27045>     filename = dos_SetExt{filename,"bb2"}
0003694E <AmiBlitz3.ab3@27046>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00036958 <AmiBlitz3.ab3@27049>  Function Return incLock
00036972 <AmiBlitz3.ab3@27050> End Function
0003699C <AmiBlitz3.ab3@27054>   !basic
000369C6 <AmiBlitz3.ab3@27055>   incString.s = Peek$(?ptr_parameterstore)
000369F4 <AmiBlitz3.ab3@27057>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000369F8 <AmiBlitz3.ab3@27058>   incDirP.l   = PutD0                                       ;    "
00036A20 <AmiBlitz3.ab3@27059>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00036AA0 <AmiBlitz3.ab3@27060>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00036AD2 <AmiBlitz3.ab3@27061>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00036AE6 <AmiBlitz3.ab3@27063>   If incLock = False ; not found => check default Include Directory
00036AF6 <AmiBlitz3.ab3@27064>     incDirP.l = Peek.l(?incd)
00036B00 <AmiBlitz3.ab3@27065>     If incDirP
00036B28 <AmiBlitz3.ab3@27066>       incDir_.s = Peek.s(incDirP)
00036B2E <AmiBlitz3.ab3@27067>     Else
00036B98 <AmiBlitz3.ab3@27068>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00036C18 <AmiBlitz3.ab3@27070>     incFile.s = dos_AddPart{incDir_,incString}
00036C4A <AmiBlitz3.ab3@27071>     incLock.l = ab3_GetIncludeLock{incFile}
00036C5E <AmiBlitz3.ab3@27074>   If incLock = False ; not found => check relative to current source
00036C76 <AmiBlitz3.ab3@27075>     incDepth.l = Peek.w(?ininclude)-1
00036C9C <AmiBlitz3.ab3@27076>     If incDepth >= 0 AND incDepth < #maxincludes
00036CFC <AmiBlitz3.ab3@27077>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00036D7C <AmiBlitz3.ab3@27078>       incFile.s = dos_AddPart{incDir_,incString}
00036DAE <AmiBlitz3.ab3@27079>       incLock.l = ab3_GetIncludeLock{incFile}
00036DC2 <AmiBlitz3.ab3@27083>   If incLock = False ; still not found => check default Include Directory and name only
00036DD2 <AmiBlitz3.ab3@27084>     incDirP.l = Peek.l(?incd)
00036DDC <AmiBlitz3.ab3@27085>     If incDirP
00036E04 <AmiBlitz3.ab3@27086>       incDir_.s = Peek.s(incDirP)
00036E0A <AmiBlitz3.ab3@27087>     Else
00036E74 <AmiBlitz3.ab3@27088>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00036F22 <AmiBlitz3.ab3@27090>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00036F54 <AmiBlitz3.ab3@27091>     incLock.l = ab3_GetIncludeLock{incFile}
00036F5E <AmiBlitz3.ab3@27094>   If incLock
00036F74 <AmiBlitz3.ab3@27095>     MaxLen incFile = 1024
00036F98 <AmiBlitz3.ab3@27096>     NameFromLock_ incLock,&incFile,1024
00036FC2 <AmiBlitz3.ab3@27097>     incFile = Peek.s(&incFile)
00036FFA <AmiBlitz3.ab3@27098>     Poke$ ?ptr_parameterstore,incFile
0003700E <AmiBlitz3.ab3@27099>     i = FLen(incFile)
0003701A <AmiBlitz3.ab3@27100>     GetReg d0,i
00037020 <AmiBlitz3.ab3@27101>     MOVE.l d0,tempstore
00037030 <AmiBlitz3.ab3@27102>     UnLock_ incLock
0003704E <AmiBlitz3.ab3@27105>   !asm
00037054 <AmiBlitz3.ab3@27106>   TST.l tempstore
00037058 <AmiBlitz3.ab3@27107>    BEQ 'l1
0003705E <AmiBlitz3.ab3@27108>   MOVE.l tempstore,d2
00037060 <AmiBlitz3.ab3@27111> RTS
0003708A <AmiBlitz3.ab3@27115>   !basic
000370B4 <AmiBlitz3.ab3@27116>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000370E2 <AmiBlitz3.ab3@27117>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000370E6 <AmiBlitz3.ab3@27118>   incDirP.l   = PutD0                                       ;    "
0003710E <AmiBlitz3.ab3@27119>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003718E <AmiBlitz3.ab3@27120>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000371AE <AmiBlitz3.ab3@27121>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000371C2 <AmiBlitz3.ab3@27123>   If incLock = False                                        ; not found => try orignal string only to find
000371E2 <AmiBlitz3.ab3@27124>     incLock.l = Lock_(&incString,#ACCESS_READ)
000371EC <AmiBlitz3.ab3@27127>   If incLock                                                ; found => store full path
00037202 <AmiBlitz3.ab3@27128>     MaxLen incFile = 1024
00037226 <AmiBlitz3.ab3@27129>     NameFromLock_ incLock,&incFile,1024
00037250 <AmiBlitz3.ab3@27130>     incFile = Peek.s(&incFile)
00037288 <AmiBlitz3.ab3@27131>     Poke$ ?ptr_parameterstore,incFile
00037294 <AmiBlitz3.ab3@27134> 
000372B2 <AmiBlitz3.ab3@27135>   !asm
000372B4 <AmiBlitz3.ab3@27136> RTS
000372BA <AmiBlitz3.ab3@27147>   JSR Aclearallvars
000372C0 <AmiBlitz3.ab3@27148>   JSR free_unusedfunctions
000372CA <AmiBlitz3.ab3@27163>   MOVE.l #"NORE",reqmode
000372D0 <AmiBlitz3.ab3@27164> JSR handle_compileerror
000372D2 <AmiBlitz3.ab3@27167>   MOVE.l d0,-(a7)
000372D4 <AmiBlitz3.ab3@27168>   MOVE.l a5,d0
000372DE <AmiBlitz3.ab3@27169>   !basica7
000372E2 <AmiBlitz3.ab3@27170>   i.l = PutD0
000372EC <AmiBlitz3.ab3@27171>   If i
00037314 <AmiBlitz3.ab3@27172>     a$ = Peek$(i)
00037346 <AmiBlitz3.ab3@27173>     b$ = Peeks$(i-7,7)
0003747E <AmiBlitz3.ab3@27175> 
00037484 <AmiBlitz3.ab3@27176>     MOVE.l d0,result
00037488 <AmiBlitz3.ab3@27178>   !asma7
0003748A <AmiBlitz3.ab3@27179>   MOVE.l (a7)+,d0
0003748C <AmiBlitz3.ab3@27180> RTS
000374B6 <AmiBlitz3.ab3@27184>   !basic
000374E4 <AmiBlitz3.ab3@27185>   !ComData_LEA{comStr_CurrentDir,D0}
000374E8 <AmiBlitz3.ab3@27186>   currentDirP.l = PutD0
00037516 <AmiBlitz3.ab3@27188>   !ComData_LEA{comStr_SourceName,D0}
0003751A <AmiBlitz3.ab3@27189>   fileNameP.l = PutD0
00037542 <AmiBlitz3.ab3@27191>   check_dirname$  = Peek$(currentDirP)
0003756A <AmiBlitz3.ab3@27192>   check_filename$ = Peek$(fileNameP)
000375F0 <AmiBlitz3.ab3@27193>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000375F6 <AmiBlitz3.ab3@27194>     JSR free_unusedfunctions
00037640 <AmiBlitz3.ab3@27196>   olddirname$ = Peek$(check_dirname$)
0003768A <AmiBlitz3.ab3@27197>   oldfilename$ = Peek$(check_filename$)
000376B4 <AmiBlitz3.ab3@27198>   For i = 0 To #maxincludes-1
000376C8 <AmiBlitz3.ab3@27199>     incline(i) = 0
000376D8 <AmiBlitz3.ab3@27200>   Next
000376F6 <AmiBlitz3.ab3@27201>   !asm
000376F8 <AmiBlitz3.ab3@27202> RTS
000376FA <AmiBlitz3.ab3@27206>   MOVEQ #0,d1
000376FC <AmiBlitz3.ab3@27209>   MOVE.b (a5)+,d0
00037700 <AmiBlitz3.ab3@27210>   BEQ 'er1
00037704 <AmiBlitz3.ab3@27211>   CMP.b #$20,d0
00037708 <AmiBlitz3.ab3@27212>   BEQ 'l1
0003770A <AmiBlitz3.ab3@27213>   ADDQ #1,d1
0003770E <AmiBlitz3.ab3@27214>   CMP.b #$22,d0
00037712 <AmiBlitz3.ab3@27215>   BNE 'l1
00037714 <AmiBlitz3.ab3@27216> RTS
0003771A <AmiBlitz3.ab3@27219> JMP syntaxerr
0003773E <AmiBlitz3.ab3@27230> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0003775C <AmiBlitz3.ab3@27231> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00037762 <AmiBlitz3.ab3@27236>   TST.b exdebug
00037766 <AmiBlitz3.ab3@27237>   BNE 'l10
0003776C <AmiBlitz3.ab3@27238>   MOVE.l #$4e71,d1
00037772 <AmiBlitz3.ab3@27239>   JSR writeword
00037778 <AmiBlitz3.ab3@27240>   MOVE.l destpointer,d0
0003777A <AmiBlitz3.ab3@27241>   MOVE.l d0,d1
0003777C <AmiBlitz3.ab3@27242>   ADDQ.l #3,d1
00037782 <AmiBlitz3.ab3@27243>   AND.l #$fffffffc,d1
00037788 <AmiBlitz3.ab3@27244>   MOVE.l d1,destpointer
0003778E <AmiBlitz3.ab3@27245>   SUB.l destpointer,d0
00037792 <AmiBlitz3.ab3@27246>   BEQ 'lnf1
0003779C <AmiBlitz3.ab3@27247>   CMP.l #-1,bssstart
000377A0 <AmiBlitz3.ab3@27248>   BNE 'lnf1
000377AA <AmiBlitz3.ab3@27249>   CMP.l #-1,chipstart
000377AE <AmiBlitz3.ab3@27250>   BNE 'lnf1
000377B4 <AmiBlitz3.ab3@27251>   MOVE.l destpointer,a4
000377BA <AmiBlitz3.ab3@27252>   TST.w dontwrite
000377BE <AmiBlitz3.ab3@27253>   BNE 'lnf1
000377C4 <AmiBlitz3.ab3@27254>   MOVE.w #$4e71,-2(a4)
000377CE <AmiBlitz3.ab3@27257>   CMP.l #-1,bssstart
000377D2 <AmiBlitz3.ab3@27258>   BEQ 'l11
000377D8 <AmiBlitz3.ab3@27259>   MOVE.l #erro1t,-(a7)
000377DE <AmiBlitz3.ab3@27260> JMP handle_compileerror
000377E8 <AmiBlitz3.ab3@27263>   MOVE.l destpointer,bssstart
000377F0 <AmiBlitz3.ab3@27264>   MOVE.b #1,bssmode
000377F6 <AmiBlitz3.ab3@27267>   TST.b chipmode
000377FA <AmiBlitz3.ab3@27268>   BEQ 'l10
00037804 <AmiBlitz3.ab3@27269>   MOVE.l destpointer,chipend
0003780A <AmiBlitz3.ab3@27270>   CLR.b chipmode
00037810 <AmiBlitz3.ab3@27273>   JSR get1bytemain
00037812 <AmiBlitz3.ab3@27274> RTS
00037818 <AmiBlitz3.ab3@27278>    TST.b exdebug
0003781C <AmiBlitz3.ab3@27279>   BNE 'x1
00037822 <AmiBlitz3.ab3@27280>   MOVE.l destpointer,d0
00037828 <AmiBlitz3.ab3@27281>   MOVE.l d0,realbssend
0003782E <AmiBlitz3.ab3@27282>   MOVE.l #$4e71,d1
00037834 <AmiBlitz3.ab3@27283>   JSR writeword
0003783A <AmiBlitz3.ab3@27284>   MOVE.l destpointer,d0
0003783C <AmiBlitz3.ab3@27285>   MOVE.l d0,d1
0003783E <AmiBlitz3.ab3@27286>   ADDQ.l #3,d1
00037844 <AmiBlitz3.ab3@27287>   AND.l #$fffffffc,d1
0003784A <AmiBlitz3.ab3@27288>   MOVE.l d1,destpointer
00037850 <AmiBlitz3.ab3@27289>   SUB.l destpointer,d0
00037854 <AmiBlitz3.ab3@27290>   BEQ 'lnf1
0003785A <AmiBlitz3.ab3@27291>   MOVE.l destpointer,a4
00037864 <AmiBlitz3.ab3@27292>   CMP.l #-1,bssstart
00037868 <AmiBlitz3.ab3@27293>   BNE 'lnf1
00037872 <AmiBlitz3.ab3@27294>   CMP.l #-1,chipstart
00037876 <AmiBlitz3.ab3@27295>   BNE 'lnf1
0003787C <AmiBlitz3.ab3@27296>   TST.w dontwrite
00037880 <AmiBlitz3.ab3@27297>   BNE 'lnf1
00037886 <AmiBlitz3.ab3@27298>   MOVE.w #$4e71,-2(a4)
0003788C <AmiBlitz3.ab3@27301>   TST.b bssmode
00037890 <AmiBlitz3.ab3@27302>   BEQ 'l10
0003789A <AmiBlitz3.ab3@27303>   MOVE.l destpointer,bssend
000378A0 <AmiBlitz3.ab3@27304>   CLR.b bssmode
000378AA <AmiBlitz3.ab3@27309>   CMP.l #-1,chipstart
000378AE <AmiBlitz3.ab3@27310>   BEQ 'l11
000378B4 <AmiBlitz3.ab3@27311>   MOVE.l #erro1t,-(a7)
000378BA <AmiBlitz3.ab3@27312> JMP handle_compileerror
000378C4 <AmiBlitz3.ab3@27315>   MOVE.l destpointer,chipstart
000378CC <AmiBlitz3.ab3@27316>   MOVE.b #1,chipmode
000378D2 <AmiBlitz3.ab3@27319>   JSR get1bytemain
000378D4 <AmiBlitz3.ab3@27320> RTS
000378FE <AmiBlitz3.ab3@27324>   !basic
00037910 <AmiBlitz3.ab3@27334>   i.l = Peek.w(?ininclude)
00037936 <AmiBlitz3.ab3@27335>   If i>=0 AND i<#maxincludes
00037968 <AmiBlitz3.ab3@27336>     incdim (i) = Peek.s(?includetemp2)
00037982 <AmiBlitz3.ab3@27337>     incline(i) = Peek.l(?includeline)
0003798C <AmiBlitz3.ab3@27339>     If CLIMode
00037A3A <AmiBlitz3.ab3@27340>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00037A58 <AmiBlitz3.ab3@27344>   !asm
00037A5A <AmiBlitz3.ab3@27345> RTS
00037A84 <AmiBlitz3.ab3@27349>   !basic
00037A96 <AmiBlitz3.ab3@27350>   i.l = Peek.w(?ininclude)
00037ABC <AmiBlitz3.ab3@27351>   If i>=0 AND i<#maxincludes
00037AEC <AmiBlitz3.ab3@27352>     incdim (i) = ""
00037B00 <AmiBlitz3.ab3@27353>     incline(i) = 0
00037B38 <AmiBlitz3.ab3@27354>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00037B56 <AmiBlitz3.ab3@27356>   !asm
00037B58 <AmiBlitz3.ab3@27357> RTS
00037B5E <AmiBlitz3.ab3@27361>   LEA replacedat,a0
00037B62 <AmiBlitz3.ab3@27362>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00037B64 <AmiBlitz3.ab3@27363> RTS
00037B6A <AmiBlitz3.ab3@27367>   TST.b fpu
00037B6E <AmiBlitz3.ab3@27368>   BEQ 'l1
00037B78 <AmiBlitz3.ab3@27371>   MOVE.l destpointer,newinitaddr
00037B7E <AmiBlitz3.ab3@27372>   JSR writeword
00037B84 <AmiBlitz3.ab3@27373>   JSR writelong
00037B86 <AmiBlitz3.ab3@27374> RTS
00037B88 <AmiBlitz3.ab3@27379>   TST.b (a5)
00037B8C <AmiBlitz3.ab3@27380>    BEQ.s 'll20
00037B90 <AmiBlitz3.ab3@27381>   CMP.b #$20,(a5)
00037B94 <AmiBlitz3.ab3@27382>    BNE.s 'll10
00037B96 <AmiBlitz3.ab3@27383>   ADDQ.l #1,a5
00037B9A <AmiBlitz3.ab3@27384> BRA.s 'll21
00037B9E <AmiBlitz3.ab3@27387>   CMP.b #";",(a5)
00037BA2 <AmiBlitz3.ab3@27388>   BNE.s 'll20
00037BA4 <AmiBlitz3.ab3@27391>   TST.b (a5)+
00037BA8 <AmiBlitz3.ab3@27392>   BEQ.s 'll23
00037BAC <AmiBlitz3.ab3@27393> BRA.s 'll25
00037BAE <AmiBlitz3.ab3@27396>   SUBQ.l #1,a5
00037BB0 <AmiBlitz3.ab3@27399> RTS
00037BB4 <AmiBlitz3.ab3@27403>   MOVEM.l a2/d2,-(a7)
00037BB6 <AmiBlitz3.ab3@27404>   MOVEQ #0,d2
00037BBC <AmiBlitz3.ab3@27405>   LEA ptr_parameterstore,a0
00037BC2 <AmiBlitz3.ab3@27406>   LEA chartab,a2
00037BC4 <AmiBlitz3.ab3@27409>   MOVE.b (a5),d0
00037BC8 <AmiBlitz3.ab3@27410>   TST.b 0(a2,d0)
00037BCC <AmiBlitz3.ab3@27411>   BNE 'l10
00037BCE <AmiBlitz3.ab3@27412>   ADDQ.l #1,a5
00037BD0 <AmiBlitz3.ab3@27413>   MOVE.b d0,(a0)+
00037BD2 <AmiBlitz3.ab3@27414>   ADDQ.l #1,d2
00037BD6 <AmiBlitz3.ab3@27415> BRA fc2
00037BD8 <AmiBlitz3.ab3@27418>   CLR.b (a0)+
00037BDE <AmiBlitz3.ab3@27419>   JSR findlabel2
00037BE0 <AmiBlitz3.ab3@27420>   MOVE.l a2,a0
00037BE4 <AmiBlitz3.ab3@27421>   MOVEM.l (a7)+,a2/d2
00037BE6 <AmiBlitz3.ab3@27422> RTS
00037BE8 <AmiBlitz3.ab3@27426>   TST.l d0
00037BEC <AmiBlitz3.ab3@27427>   BNE 'l10
00037BF2 <AmiBlitz3.ab3@27428>     MOVE.l #syntax_,-(a7)
00037BF8 <AmiBlitz3.ab3@27429> JMP handle_compileerror
00037BFE <AmiBlitz3.ab3@27432>   CMP.l #1,d0
00037C02 <AmiBlitz3.ab3@27433>   BNE 'l20
00037C08 <AmiBlitz3.ab3@27434>     MOVE.l #overflow,-(a7)
00037C0E <AmiBlitz3.ab3@27435> JMP handle_compileerror
00037C10 <AmiBlitz3.ab3@27438>   ADD.l a2,d0
00037C12 <AmiBlitz3.ab3@27439>   MOVE.l d0,-(a7)
00037C18 <AmiBlitz3.ab3@27440> JMP handle_compileerror
00037C1E <AmiBlitz3.ab3@27444>   JMP _return
00037C24 <AmiBlitz3.ab3@27445>   JMP _return
00037C2A <AmiBlitz3.ab3@27446>   JMP _return
00037C30 <AmiBlitz3.ab3@27447>   JMP _return
00037C36 <AmiBlitz3.ab3@27448>   JMP _return
00037C3C <AmiBlitz3.ab3@27449>   JMP _return
00037C42 <AmiBlitz3.ab3@27450>   JMP _return
00037C48 <AmiBlitz3.ab3@27451>   JMP _return
00037C4E <AmiBlitz3.ab3@27452>   JMP _return
00037C54 <AmiBlitz3.ab3@27453>   JMP _return
00037C5A <AmiBlitz3.ab3@27454>   JMP Atokejsr
00037C60 <AmiBlitz3.ab3@27455>   JMP writeinit
00037C66 <AmiBlitz3.ab3@27456>   JMP macroexecute
00037C6C <AmiBlitz3.ab3@27457>   JMP findnext
00037C72 <AmiBlitz3.ab3@27458>   JMP replacelib
00037C78 <AmiBlitz3.ab3@27459>   JMP findconstant2
00037C7E <AmiBlitz3.ab3@27460>   JMP findchar                                             ;char in d1
00037C84 <AmiBlitz3.ab3@27461>   JMP stripspaces
00037C8A <AmiBlitz3.ab3@27462>   JMP calc                                                 ;d0 varmode
00037C90 <AmiBlitz3.ab3@27463>   JMP error
00037C96 <AmiBlitz3.ab3@27464>   JMP writelong                                            ;d1 value
00037C9C <AmiBlitz3.ab3@27465>   JMP writeword                                            ;d1 value
00037CA2 <AmiBlitz3.ab3@27466>   JMP writebyte                                            ;d1 value
00037CA8 <AmiBlitz3.ab3@27467> JMP exit
00037CAC <AmiBlitz3.ab3@27471>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00037CAE <AmiBlitz3.ab3@27474>   fast            Dc.w 0
00037CB0 <AmiBlitz3.ab3@27475>   fpu             Dc.w 0
00037CB2 <AmiBlitz3.ab3@27476>   newsyntax       Dc.w 0
00037CB3 <AmiBlitz3.ab3@27478>   optistring      Dc.b 0
00037CB4 <AmiBlitz3.ab3@27479>   optistring2     Dc.b 0
00037CB5 <AmiBlitz3.ab3@27480>   optiarray       Dc.b 0
00037CB6 <AmiBlitz3.ab3@27481>   quickadd        Dc.b 0
00037CB8 <AmiBlitz3.ab3@27482>   newmode         Dc.w 0
00037CBA <AmiBlitz3.ab3@27483>   mode            Dc.w 0
00037CBC <AmiBlitz3.ab3@27484>   string1         Dc.w 0
00037CBE <AmiBlitz3.ab3@27485>   load_var_size   Dc.w 0
00037CC0 <AmiBlitz3.ab3@27486>   load_var_reg    Dc.w 0
00037CC4 <AmiBlitz3.ab3@27487>   load_var_addr   Dc.l 0
00037CC6 <AmiBlitz3.ab3@27488>   imm_size        Dc.w 0
00037CC8 <AmiBlitz3.ab3@27489>   imm_reg         Dc.w 0
00037CCC <AmiBlitz3.ab3@27490>   imm_addr        Dc.l 0
00037CCD <AmiBlitz3.ab3@27491>   iee             Dc.b 0
00037CCE <AmiBlitz3.ab3@27492>   _dcb            Dc.b 0
00037CD2 <AmiBlitz3.ab3@27493>   nohunkoffset    Dc.l 0
00037CD6 <AmiBlitz3.ab3@27496> teddata:        Dc.l tokens
00037CDA <AmiBlitz3.ab3@27497>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00037CDE <AmiBlitz3.ab3@27498>                 Dc.l read_xtrafile
00037CE2 <AmiBlitz3.ab3@27499>                 Dc.l write_xtrafile
00037CE6 <AmiBlitz3.ab3@27500>                 Dc.l call_menuentry                        ; compile AND RUN ?
00037CEA <AmiBlitz3.ab3@27501>                 Dc.l 0
00037CEE <AmiBlitz3.ab3@27502>                 Dc.b ":",34,".;"
00037CF2 <AmiBlitz3.ab3@27503>                 Dc.l "NEW1"
00037CF6 <AmiBlitz3.ab3@27504>                 Dc.l newtypebase
00037CFA <AmiBlitz3.ab3@27505> realconstbase:  Dc.l labelbase
00037CFE <AmiBlitz3.ab3@27506> deflib          Dc.l 0
00037D02 <AmiBlitz3.ab3@27507> incd            Dc.l 0
00037D06 <AmiBlitz3.ab3@27508>                 Dc.l 0
00037D0A <AmiBlitz3.ab3@27509>                 Dc.l 0
00037D0E <AmiBlitz3.ab3@27510>                 Dc.l 0
00037D10 <AmiBlitz3.ab3@27511> _return         RTS
00037D11 <AmiBlitz3.ab3@27512>                 Dc.b 0
00038111 <AmiBlitz3.ab3@27513> chartab2        Ds.l 256
00038115 <AmiBlitz3.ab3@27514> codeend         Dc.l 0
00038119 <AmiBlitz3.ab3@27515> hunkoffsetnum   Dc.l 0
0003811D <AmiBlitz3.ab3@27516> chipsize        Dc.l 0
00038121 <AmiBlitz3.ab3@27517> bsssize         Dc.l 0
00038125 <AmiBlitz3.ab3@27518> bssstart        Dc.l -1
00038129 <AmiBlitz3.ab3@27519> bssend          Dc.l -1
0003812D <AmiBlitz3.ab3@27520> chipstart       Dc.l -1
00038131 <AmiBlitz3.ab3@27521> chipend         Dc.l -1
00038132 <AmiBlitz3.ab3@27522> bssmode         Dc.b 0
00038133 <AmiBlitz3.ab3@27523> chipmode        Dc.b 0
00038134 <AmiBlitz3.ab3@27524> newhunk         Dc.b 0
00038138 <AmiBlitz3.ab3@27525> bssnum          Dc.l 0
0003813C <AmiBlitz3.ab3@27526> chipnum         Dc.l 0
00038140 <AmiBlitz3.ab3@27527> lastinstruction Dc.l 0
00038144 <AmiBlitz3.ab3@27528> lastinstructionaddr Dc.l 0
00038158 <AmiBlitz3.ab3@27529> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0003815C <AmiBlitz3.ab3@27530> tstsize1b:      Ds.l 1
00038160 <AmiBlitz3.ab3@27531> bsssize2        Dc.l 1
00038164 <AmiBlitz3.ab3@27532>                 Dc.l $03E9
00038168 <AmiBlitz3.ab3@27533> tstsize2b:      Dc.l $100
0003817C <AmiBlitz3.ab3@27534> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038180 <AmiBlitz3.ab3@27535> tstsize1c:      Ds.l 1
00038184 <AmiBlitz3.ab3@27536> bsssize3        Dc.l 1
00038188 <AmiBlitz3.ab3@27537> chipsize2       Dc.l 1
0003818C <AmiBlitz3.ab3@27538>                 Dc.l $3e9
00038190 <AmiBlitz3.ab3@27539> tstsize2c       Dc.l 0
000381A0 <AmiBlitz3.ab3@27540> hunkend         Dc.l $3f2,$3eb,0,$3f2
000381B0 <AmiBlitz3.ab3@27541> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000381B7 <AmiBlitz3.ab3@27542> strcpy          Dc.b "strcpy",0
000381BE <AmiBlitz3.ab3@27543> strcmp          Dc.b "strcmp",0
000381C5 <AmiBlitz3.ab3@27544> strvar          Dc.b "strvar",0
000381CA <AmiBlitz3.ab3@27545> qmul            Dc.b "qmul",0
000381CF <AmiBlitz3.ab3@27546> qdiv            Dc.b "qdiv",0
000381D6 <AmiBlitz3.ab3@27547> _MaxLen         Dc.b "maxlen",0
000381DB <AmiBlitz3.ab3@27548> notf            Dc.b "????",0
000381FE <AmiBlitz3.ab3@27550> errtext         Dc.b "only reg addressing Mode supported",0
00038228 <AmiBlitz3.ab3@27551> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003826A <AmiBlitz3.ab3@27552> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0003826C <AmiBlitz3.ab3@27553> peeksize        Dc.w 0
00038270 <AmiBlitz3.ab3@27555> mainstart       Dc.l 0
00038271 <AmiBlitz3.ab3@27557> infunctioncode  Dc.b 0
00038273 <AmiBlitz3.ab3@27558> regnumstore     Dc.w 0
000382A0 <AmiBlitz3.ab3@27559>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000382A8 <AmiBlitz3.ab3@27560> testcode        Dc.b "print i",0
0003830C <AmiBlitz3.ab3@27561>                 Ds.b 100
0003831A <AmiBlitz3.ab3@27562> devo            Dc.b "developobject",0 : Even
0003832C <AmiBlitz3.ab3@27563> autostorename   Dc.b "__autoconstantnum",0
00038336 <AmiBlitz3.ab3@27564> _include        Dc.b "__include",0
0003833E <AmiBlitz3.ab3@27565> _debug          Dc.b "__debug",0
00038342 <AmiBlitz3.ab3@27566> unusedfunc      Dc.l 0
00038344 <AmiBlitz3.ab3@27570>   MOVE.l a0,d0
0003836E <AmiBlitz3.ab3@27571>   !basic
00038372 <AmiBlitz3.ab3@27572>   *olderror.l= PutD0
000383CC <AmiBlitz3.ab3@27573> 
00038400 <AmiBlitz3.ab3@27574>   error_type$ = error$
0003849C <AmiBlitz3.ab3@27575> 
000384B0 <AmiBlitz3.ab3@27576>   If Peek.l (?beforeparameterfetch)
000384C6 <AmiBlitz3.ab3@27577>     MaxLen detokenline.s = 65536
00038508 <AmiBlitz3.ab3@27578>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00038518 <AmiBlitz3.ab3@27579>    *tn.preprocessor = Peek.l(?include_preprocessor)
00038542 <AmiBlitz3.ab3@27580>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003856A <AmiBlitz3.ab3@27581>     If written>0 Then Poke.b &detokenline+written,0
00038594 <AmiBlitz3.ab3@27582>     sourceLineText.s = Peek.s(&detokenline)
0003859A <AmiBlitz3.ab3@27583>   Else
000385C2 <AmiBlitz3.ab3@27584>     sourceLineText = "NULL"
000385F6 <AmiBlitz3.ab3@27586>   error_source$ = sourceLineText
00038648 <AmiBlitz3.ab3@27587>   error$=error$+sourceLineText
0003864E <AmiBlitz3.ab3@27588>   GetD0 &error$
0003866C <AmiBlitz3.ab3@27589>   !asm
0003866E <AmiBlitz3.ab3@27590>   MOVE.l d0,a0
00038670 <AmiBlitz3.ab3@27591> RTS
00038672 <AmiBlitz3.ab3@27595>   MOVE.l a0,-(a7)
00038674 <AmiBlitz3.ab3@27596>   MOVE.l a0,d0
00038676 <AmiBlitz3.ab3@27597>   MOVE.l a5,a0                                             ;macro title
000386A0 <AmiBlitz3.ab3@27598>   !basic
000386A4 <AmiBlitz3.ab3@27599>   i = PutD0
000386A6 <AmiBlitz3.ab3@27600>   MOVEQ #20,d0
000386A8 <AmiBlitz3.ab3@27603>     MOVE.b -(a0),d1
000386AC <AmiBlitz3.ab3@27604>     BEQ 'l1
000386B0 <AmiBlitz3.ab3@27605>     CMP.b #":",d1
000386B4 <AmiBlitz3.ab3@27606>     BEQ 'l1
000386B6 <AmiBlitz3.ab3@27607>     SUBQ.l #1,d0
000386BA <AmiBlitz3.ab3@27608>     BNE 'l2
000386BC <AmiBlitz3.ab3@27611>   ADDQ #1,a0
000386BE <AmiBlitz3.ab3@27612>   MOVE.l a0,d0
000386C2 <AmiBlitz3.ab3@27613>   i2.l = PutD0
000386DE <AmiBlitz3.ab3@27614>   If Peek.w (?ininclude)>0
00038738 <AmiBlitz3.ab3@27615>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00038748 <AmiBlitz3.ab3@27616>     errorline.l = Peek.l(?includeline);-1
00038770 <AmiBlitz3.ab3@27617>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003879A <AmiBlitz3.ab3@27618>     errorfile.s = Peek.s(?includetemp2)
000387A0 <AmiBlitz3.ab3@27619>   Else
000387D8 <AmiBlitz3.ab3@27620>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000387EE <AmiBlitz3.ab3@27621>     errorline.l = Peek.l(?compilelinecounter) + 1
00038822 <AmiBlitz3.ab3@27622>     errorfile.s = cli_sourcefile
0003882C <AmiBlitz3.ab3@27625>   If i
000388D0 <AmiBlitz3.ab3@27626>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
0003894E <AmiBlitz3.ab3@27627>     errortext.s = Replace$(errortext,"\n","\\0a")
00038954 <AmiBlitz3.ab3@27628>   Else
0003897C <AmiBlitz3.ab3@27629>     errortext.s = "???"
00038AF4 <AmiBlitz3.ab3@27632>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00038BBC <AmiBlitz3.ab3@27633>   NPrint "  ",error_type$,"\\n  ",error_source$
00038BDA <AmiBlitz3.ab3@27637>   !asm
00038BDC <AmiBlitz3.ab3@27638>   MOVE.l (a7)+,a0
00038BDE <AmiBlitz3.ab3@27639> RTS
00038BE0 <AmiBlitz3.ab3@27643>   MOVE.l a0,-(a7)
00038BE2 <AmiBlitz3.ab3@27644>   MOVE.l a0,d0
00038BE4 <AmiBlitz3.ab3@27645>   MOVE.l a5,a0                                             ;macro title
00038C0E <AmiBlitz3.ab3@27646>   !basic
00038C12 <AmiBlitz3.ab3@27647>   i = PutD0
00038C14 <AmiBlitz3.ab3@27648>   MOVEQ #20,d0
00038C16 <AmiBlitz3.ab3@27651>     MOVE.b -(a0),d1
00038C1A <AmiBlitz3.ab3@27652>     BEQ 'l1
00038C1E <AmiBlitz3.ab3@27653>     CMP.b #":",d1
00038C22 <AmiBlitz3.ab3@27654>     BEQ 'l1
00038C24 <AmiBlitz3.ab3@27655>     SUBQ.l #1,d0
00038C28 <AmiBlitz3.ab3@27656>     BNE 'l2
00038C2A <AmiBlitz3.ab3@27659>   ADDQ #1,a0
00038C2C <AmiBlitz3.ab3@27660>   MOVE.l a0,d0
00038C30 <AmiBlitz3.ab3@27661>   i2.l = PutD0
00038CB4 <AmiBlitz3.ab3@27662>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00038CC8 <AmiBlitz3.ab3@27663>   If fid <> -1
00038CE4 <AmiBlitz3.ab3@27664>     If Peek.w (?ininclude)>0
00038D3E <AmiBlitz3.ab3@27665>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00038D44 <AmiBlitz3.ab3@27666>     Else
00038D70 <AmiBlitz3.ab3@27667>       Poke$(?includetemp2),""
00038D9A <AmiBlitz3.ab3@27669>     a$ = Peek$(?includetemp2)
00038E0C <AmiBlitz3.ab3@27670>     x$ = Replace$(Peek$(i),"\\0a","\n")
00038E3E <AmiBlitz3.ab3@27671>     file_WriteLine{fid,x$}
00038E88 <AmiBlitz3.ab3@27672>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00038EB4 <AmiBlitz3.ab3@27673>     If a$
00038EE6 <AmiBlitz3.ab3@27674>       file_WriteLine{fid,a$}
00038F30 <AmiBlitz3.ab3@27675>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00038F58 <AmiBlitz3.ab3@27676>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00038F5E <AmiBlitz3.ab3@27677>     Else
00038F84 <AmiBlitz3.ab3@27678>       file_WriteLine{fid,"none"}
00038FB4 <AmiBlitz3.ab3@27680>     file_WriteLine{fid,Peek$(i2)}
0003900A <AmiBlitz3.ab3@27681>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039054 <AmiBlitz3.ab3@27682>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003905E <AmiBlitz3.ab3@27683>     file_Close{fid}
0003907C <AmiBlitz3.ab3@27685>   !asm
0003907E <AmiBlitz3.ab3@27686>   MOVE.l (a7)+,a0
00039080 <AmiBlitz3.ab3@27687> RTS
000390AA <AmiBlitz3.ab3@27691>   !basic
000390AE <AmiBlitz3.ab3@27692>   progress.l     = PutD0
000390C0 <AmiBlitz3.ab3@27693>   total.l        = Peek.w(?progressbar_width)
000390DE <AmiBlitz3.ab3@27694>   calcpro        = (progress * 100) / total +1
000390F0 <AmiBlitz3.ab3@27695>   pass.l         = Peek.w(?pass)
00039102 <AmiBlitz3.ab3@27696>   typ.l          = Peek.w(?compiler_job)
00039120 <AmiBlitz3.ab3@27699> If (pass><pass_old OR typ><typ_old)
0003912E <AmiBlitz3.ab3@27701>     If pass_old><pass
000391CA <AmiBlitz3.ab3@27702>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039220 <AmiBlitz3.ab3@27703>       If cli_verbose>=2 Then NPrint passtatusstr
00039226 <AmiBlitz3.ab3@27706>     pass_old = pass
0003922C <AmiBlitz3.ab3@27707>     typ_old  = typ
00039232 <AmiBlitz3.ab3@27708>     update_comstatus_gui = True
00039244 <AmiBlitz3.ab3@27709>     If typ=0
00039324 <AmiBlitz3.ab3@27710>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003932C <AmiBlitz3.ab3@27711>       calcpro = 0  ; set gauge to 0
0003933E <AmiBlitz3.ab3@27713>     If typ=1
0003941E <AmiBlitz3.ab3@27714>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039426 <AmiBlitz3.ab3@27715>       calcpro = 0  ; set gauge to 0
0003947C <AmiBlitz3.ab3@27718>     If cli_verbose>=3 Then NPrint comstatusstr
0003948A <AmiBlitz3.ab3@27721>   If (calcpro >< calcpro_old)
000394DE <AmiBlitz3.ab3@27722>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
000394E4 <AmiBlitz3.ab3@27723>     calcpro_old = calcpro
000394EA <AmiBlitz3.ab3@27724>     update_comstatus_gui = True
00039504 <AmiBlitz3.ab3@27727>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00039522 <AmiBlitz3.ab3@27728>     !asm
00039554 <AmiBlitz3.ab3@27729> 
0003957E <AmiBlitz3.ab3@27730>     !basic
00039584 <AmiBlitz3.ab3@27731>     update_comstatus_gui  = False ; because we update the gui
000395A2 <AmiBlitz3.ab3@27733>   !asm
000395A4 <AmiBlitz3.ab3@27734> RTS
000395AA <AmiBlitz3.ab3@27739>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
000395B0 <AmiBlitz3.ab3@27740>   LEA maxobjects_value,A3                                  ;current value
000395B6 <AmiBlitz3.ab3@27741>   MOVEA.l libpointer,A2
000395BA <AmiBlitz3.ab3@27744>   CMPA.w #$0,A2
000395BE <AmiBlitz3.ab3@27745>   BEQ.w menu4c__igotb
000395C0 <AmiBlitz3.ab3@27746>   MOVEA.l A2,A1
000395C4 <AmiBlitz3.ab3@27747>   ADDA.l $12(A1),A1
000395C8 <AmiBlitz3.ab3@27748>   TST.w -$2(A1)
000395CC <AmiBlitz3.ab3@27749>   BEQ.w JL_0_FFF6b
000395CE <AmiBlitz3.ab3@27750>   SUBQ.w #1,D5
000395D2 <AmiBlitz3.ab3@27751>   BMI.w JL_0_FFFCb
000395D4 <AmiBlitz3.ab3@27754>   MOVEA.l (A2),A2
000395D8 <AmiBlitz3.ab3@27755> BRA.w JL_0_FFDAb
000395DC <AmiBlitz3.ab3@27758>   MOVE.w (A3),-$4(A1)
000395DE <AmiBlitz3.ab3@27761> RTS
000395E4 <AmiBlitz3.ab3@27765>   MOVE.w debugnest,d0
000395EA <AmiBlitz3.ab3@27766>   LEA storedebugmode, a0
000395F2 <AmiBlitz3.ab3@27767>   MOVE.b 0(a0,d0.w),debugmode
000395F8 <AmiBlitz3.ab3@27768>   TST.w debugnest
000395FC <AmiBlitz3.ab3@27769>   BEQ JUMP_unpairrunerrs
00039602 <AmiBlitz3.ab3@27770>   SUBQ.w #1,debugnest
00039604 <AmiBlitz3.ab3@27771> RTS
0003960A <AmiBlitz3.ab3@27774> JMP runerrsoverflow
00039610 <AmiBlitz3.ab3@27777> JMP unpairrunerrs
00039618 <AmiBlitz3.ab3@27781>   BCHG #$7,use_debugger
00039620 <AmiBlitz3.ab3@27783>   BTST #$7,use_debugger
00039624 <AmiBlitz3.ab3@27784>   BNE 'debugon
0003962A <AmiBlitz3.ab3@27785>   CLR.w debugmode
0003962E <AmiBlitz3.ab3@27786> BRA.b 'debugoff
00039634 <AmiBlitz3.ab3@27789>   SNE debugmode
00039636 <AmiBlitz3.ab3@27792>   MOVE.l a0,-(a7)
0003966E <AmiBlitz3.ab3@27795>   !ComData_SetB{comByte_DebugMode,debugmode}
00039670 <AmiBlitz3.ab3@27800>   MOVE.l (a7)+,a0
00039672 <AmiBlitz3.ab3@27801> RTS
0003967A <AmiBlitz3.ab3@27806>   BTST #$7,use_debugger
0003967E <AmiBlitz3.ab3@27807>   BNE 'debugon
00039684 <AmiBlitz3.ab3@27808>   CLR.w debugmode
00039688 <AmiBlitz3.ab3@27809> BRA.b 'debugoff
0003968E <AmiBlitz3.ab3@27812>   SNE debugmode
00039690 <AmiBlitz3.ab3@27815> RTS
00039696 <AmiBlitz3.ab3@27819>   ADDQ.w #1,debugnest
0003969C <AmiBlitz3.ab3@27820>   MOVE.w debugnest,d0
000396A0 <AmiBlitz3.ab3@27821>   CMP.w #18,d0
000396A4 <AmiBlitz3.ab3@27822>    BGE JUMP_runerrsoverflow
000396AA <AmiBlitz3.ab3@27823>   LEA storedebugmode, a0
000396B2 <AmiBlitz3.ab3@27824>   MOVE.b debugmode,0( a0,d0.w)
000396B8 <AmiBlitz3.ab3@27827>   SF debugmode
000396BA <AmiBlitz3.ab3@27828> RTS
0003973A <AmiBlitz3.ab3@27831> usedpath:  Ds.l 32
0003973E <AmiBlitz3.ab3@27835>   BEQ.w JUMP_syntaxerr
00039744 <AmiBlitz3.ab3@27836>   LEA lastpath,A0
00039748 <AmiBlitz3.ab3@27837>   MOVEM.l a0-a1/d0,-(a7)
0003974E <AmiBlitz3.ab3@27838>   LEA lastpath2,a1
00039750 <AmiBlitz3.ab3@27841>     MOVE.b (a0)+,(a1)+
00039754 <AmiBlitz3.ab3@27842>   BNE 'l2
00039758 <AmiBlitz3.ab3@27843>   MOVEM.l (a7)+,a0-a1/d0
0003975C <AmiBlitz3.ab3@27844>   LEA usedpath(PC),A0
00039760 <AmiBlitz3.ab3@27845>   MOVEM.l a0-a1/d0,-(a7)
00039766 <AmiBlitz3.ab3@27846>   LEA lastpath,a1
00039768 <AmiBlitz3.ab3@27849>     MOVE.b (a0)+,(a1)+
0003976C <AmiBlitz3.ab3@27850>   BNE 'l1
00039770 <AmiBlitz3.ab3@27851>   MOVEM.l (a7)+,a0-a1/d0
00039772 <AmiBlitz3.ab3@27854>   TST.w D0
00039776 <AmiBlitz3.ab3@27855>    BMI.w JUMP_syntaxerr
00039778 <AmiBlitz3.ab3@27856>   MOVE.b D0,(A0)+
0003977C <AmiBlitz3.ab3@27857>   BSR.w JUMP_get1bytemain
00039780 <AmiBlitz3.ab3@27858>    BNE.w JL_0_4AA8
00039784 <AmiBlitz3.ab3@27859>   MOVE.b #$2,(A0)
00039786 <AmiBlitz3.ab3@27860> RTS
0003978A <AmiBlitz3.ab3@27864>   BEQ.w JUMP_syntaxerr
00039790 <AmiBlitz3.ab3@27865>   LEA path2,A0
00039792 <AmiBlitz3.ab3@27875>   TST.w D0
00039796 <AmiBlitz3.ab3@27876>    BMI.w JUMP_syntaxerr
00039798 <AmiBlitz3.ab3@27877>   MOVE.b D0,(A0)+
0003979C <AmiBlitz3.ab3@27878>   BSR.w JUMP_get1bytemain
000397A0 <AmiBlitz3.ab3@27879>    BNE.w JL_0_4AA8b
000397A4 <AmiBlitz3.ab3@27880>   MOVE.b #$2,(A0)
000397A6 <AmiBlitz3.ab3@27881> RTS
000397AC <AmiBlitz3.ab3@27890> JMP errormsg_reg
000397B6 <AmiBlitz3.ab3@27894>   MOVE.l #$f22d6780,fpucodeglobal
000397C0 <AmiBlitz3.ab3@27895>   MOVE.l #$f22c6780,fpucodelocal
000397C6 <AmiBlitz3.ab3@27896>   LEA regtable,a0
000397D0 <AmiBlitz3.ab3@27897>   MOVE.l #7,maxregs
000397D2 <AmiBlitz3.ab3@27900>   MOVE.l (a0),d0
000397D6 <AmiBlitz3.ab3@27901>   BEQ 'e1
000397D8 <AmiBlitz3.ab3@27902>   CLR.l (a0)
000397DC <AmiBlitz3.ab3@27903>   MOVE.w 4(a0),d0
000397E6 <AmiBlitz3.ab3@27904>   MOVE.l fpucodeglobal,fpucode
000397EA <AmiBlitz3.ab3@27905>   TST.w 6(a0)
000397EE <AmiBlitz3.ab3@27906>   BEQ 'glob
000397F8 <AmiBlitz3.ab3@27907>   MOVE.l fpucodelocal,fpucode
000397FE <AmiBlitz3.ab3@27910>   MOVE.l fpucode,d1
00039804 <AmiBlitz3.ab3@27911>   JSR writelong
0003980E <AmiBlitz3.ab3@27912>   SUB.l #$80,fpucodelocal
00039818 <AmiBlitz3.ab3@27913>   SUB.l #$80,fpucodeglobal
0003981A <AmiBlitz3.ab3@27914>   MOVE.w d0,d1
00039820 <AmiBlitz3.ab3@27915>   JSR writeword
00039822 <AmiBlitz3.ab3@27916>   ADDQ #8,a0
00039826 <AmiBlitz3.ab3@27917> BRA 'again
00039828 <AmiBlitz3.ab3@27920> RTS
0003982E <AmiBlitz3.ab3@27927> JMP notypeerr
00039834 <AmiBlitz3.ab3@27930> JMP illtypeerr
0003983E <AmiBlitz3.ab3@27933>   MOVE.l #$f22d4780,fpucodeglobal
00039848 <AmiBlitz3.ab3@27934>   MOVE.l #$f22c4780,fpucodelocal
0003984E <AmiBlitz3.ab3@27935>   LEA regtable,a0
00039850 <AmiBlitz3.ab3@27936>   TST.l (a0)
00039854 <AmiBlitz3.ab3@27937>    BNE JUMP_errormsg_reg
00039856 <AmiBlitz3.ab3@27938>   MOVE.l d7,-(a7)
00039858 <AmiBlitz3.ab3@27939>   SUBQ.l #1,a5
0003985E <AmiBlitz3.ab3@27942>   JSR getparameter2
00039862 <AmiBlitz3.ab3@27943>   BEQ.w 'nopar
00039868 <AmiBlitz3.ab3@27944>   MOVE.w d0,lastchar
0003986E <AmiBlitz3.ab3@27945>   JSR findvariable
00039872 <AmiBlitz3.ab3@27946>   BNE 'islocal
0003987C <AmiBlitz3.ab3@27947>   MOVE.l fpucodeglobal,fpucode
00039886 <AmiBlitz3.ab3@27948>   MOVE.l #3,maxregs
00039888 <AmiBlitz3.ab3@27949>   MOVEQ #0,d7
00039890 <AmiBlitz3.ab3@27952>   CMP.l #newtype_float,$a(a2)                              ;is float type
00039894 <AmiBlitz3.ab3@27953>    BEQ 'doit
0003989C <AmiBlitz3.ab3@27954>   CMP.l #newtype_double,$a(a2)
000398A0 <AmiBlitz3.ab3@27955>    BNE JUMP_illtypeerr
000398A6 <AmiBlitz3.ab3@27958>   LEA regtable,a0
000398A8 <AmiBlitz3.ab3@27959>   MOVEQ #0,d0
000398AA <AmiBlitz3.ab3@27962>   TST.l (a0)
000398AE <AmiBlitz3.ab3@27963>    BEQ 'store
000398B0 <AmiBlitz3.ab3@27964>   ADDQ.l #4,d0
000398B2 <AmiBlitz3.ab3@27965>   ADDQ.l #8,a0
000398B8 <AmiBlitz3.ab3@27966>   CMP.l #16,d0
000398BC <AmiBlitz3.ab3@27967>    BCS 'loop
000398C6 <AmiBlitz3.ab3@27968>   MOVE.l #2,maxregs
000398CC <AmiBlitz3.ab3@27969>   CMP.l #20,d0
000398D0 <AmiBlitz3.ab3@27970>    BCS 'loop
000398DA <AmiBlitz3.ab3@27971>   MOVE.l #1,maxregs
000398E0 <AmiBlitz3.ab3@27972>   CMP.l #24,d0
000398E4 <AmiBlitz3.ab3@27973>    BCS 'loop
000398EA <AmiBlitz3.ab3@27974> JMP toovarerr
000398F0 <AmiBlitz3.ab3@27977>   TST.b fpu
000398F4 <AmiBlitz3.ab3@27978>    BEQ 'nofpu
000398F6 <AmiBlitz3.ab3@27979>   MOVE.l a2,(a0)
000398FC <AmiBlitz3.ab3@27980>   MOVE.w 4(a2),4(a0)
00039900 <AmiBlitz3.ab3@27981>   MOVE.w d7,6(a0)
00039906 <AmiBlitz3.ab3@27982>   MOVE.l fpucode,d1
00039910 <AmiBlitz3.ab3@27983>   SUB.l #$80,fpucodeglobal
0003991A <AmiBlitz3.ab3@27984>   SUB.l #$80,fpucodelocal
00039920 <AmiBlitz3.ab3@27985>   JSR writelong
00039924 <AmiBlitz3.ab3@27986>   MOVE.w 4(a2),d1
0003992A <AmiBlitz3.ab3@27987>   JSR writeword
00039930 <AmiBlitz3.ab3@27990>   MOVE.w lastchar,d0
00039934 <AmiBlitz3.ab3@27991>   CMP.w #":",d0
00039938 <AmiBlitz3.ab3@27992>    BEQ 'nopar
0003993A <AmiBlitz3.ab3@27993>   TST.w d0
0003993E <AmiBlitz3.ab3@27994>    BEQ 'nopar
00039942 <AmiBlitz3.ab3@27995>   CMP.w #",",d0
00039946 <AmiBlitz3.ab3@27996>   BNE JUMP_syntaxerr
0003994A <AmiBlitz3.ab3@27997> BRA 'l2
0003994C <AmiBlitz3.ab3@28000>    MOVE.l (a7)+,d7
0003994E <AmiBlitz3.ab3@28001> RTS
00039950 <AmiBlitz3.ab3@28004>   MOVEQ #1,d7
00039958 <AmiBlitz3.ab3@28005>   MOVE.b #1,newvariable
0003995E <AmiBlitz3.ab3@28006>   LEA firstlocal,a2
00039964 <AmiBlitz3.ab3@28007>   JSR findvariable
0003996A <AmiBlitz3.ab3@28008>   CLR.b newvariable
00039970 <AmiBlitz3.ab3@28009>   CMP.l #-1,d0
00039974 <AmiBlitz3.ab3@28010>   BEQ.w JUMP_notypeerr2
0003997E <AmiBlitz3.ab3@28011>   MOVE.l fpucodelocal,fpucode
00039982 <AmiBlitz3.ab3@28012> BRA 'go
00039986 <AmiBlitz3.ab3@28015>   CMP.b #".",d0
0003998A <AmiBlitz3.ab3@28016>    BNE 'l1
0003998E <AmiBlitz3.ab3@28017>   BSR JUMP_get1bytemain
00039992 <AmiBlitz3.ab3@28018>   BSR JUMP_get1bytemain
00039996 <AmiBlitz3.ab3@28021>   ORI .b #$20,d0
0003999A <AmiBlitz3.ab3@28022>   CMP.b #"d",d0
0003999E <AmiBlitz3.ab3@28023>    BNE JUMP_illeaerr
000399A2 <AmiBlitz3.ab3@28024>   BSR JUMP_get1bytemain
000399A6 <AmiBlitz3.ab3@28025>   SUB.b #$30,d0
000399AA <AmiBlitz3.ab3@28026>   CMP.b #$7,d0
000399AE <AmiBlitz3.ab3@28027>    BGT JUMP_syntaxerr
000399B2 <AmiBlitz3.ab3@28028>   MOVE.w #$49c0,d1
000399B4 <AmiBlitz3.ab3@28029>   ADD.b d0,d1
000399BA <AmiBlitz3.ab3@28030>   JSR writeword
000399BE <AmiBlitz3.ab3@28031>   BSR JUMP_get1bytemain
000399C0 <AmiBlitz3.ab3@28032> RTS
000399C6 <AmiBlitz3.ab3@28036>   LEA lastpath,a0
000399CA <AmiBlitz3.ab3@28037>   LEA usedpath(PC),A1
000399CC <AmiBlitz3.ab3@28040>     MOVE.b (a0)+,(a1)+
000399D0 <AmiBlitz3.ab3@28041>   BNE 'l1
000399D6 <AmiBlitz3.ab3@28043>   LEA lastpath2,a0
000399DC <AmiBlitz3.ab3@28044>   LEA lastpath,A1
000399DE <AmiBlitz3.ab3@28047>     MOVE.b (a0)+,(a1)+
000399E2 <AmiBlitz3.ab3@28048>   BNE 'l2
000399E4 <AmiBlitz3.ab3@28049> RTS
000399EA <AmiBlitz3.ab3@28053>   TST.b objectcount
000399EE <AmiBlitz3.ab3@28054>   BEQ 'l2a
000399F4 <AmiBlitz3.ab3@28055> JMP macnesterr
000399FA <AmiBlitz3.ab3@28058>   LEA devo,a0
00039A00 <AmiBlitz3.ab3@28059>   ADDQ.b #1,objectcount
00039A04 <AmiBlitz3.ab3@28060>   MOVEM.l a1/d2,-(a7)
00039A0A <AmiBlitz3.ab3@28061>   LEA ptr_parameterstore,a1
00039A0C <AmiBlitz3.ab3@28064>     MOVE.b (a0)+,(a1)+
00039A10 <AmiBlitz3.ab3@28065>   BNE 'l1
00039A12 <AmiBlitz3.ab3@28067>   MOVEQ #13,d2
00039A18 <AmiBlitz3.ab3@28068>   JSR findlabel2
00039A1C <AmiBlitz3.ab3@28069>   BNE 'd
00039A20 <AmiBlitz3.ab3@28070>   TST.l 8(a2)
00039A24 <AmiBlitz3.ab3@28071>   BEQ 'd
00039A2A <AmiBlitz3.ab3@28072>   SUBQ.b #1,objectcount
00039A2E <AmiBlitz3.ab3@28073>   MOVEM.l (a7)+,a1/d2
00039A34 <AmiBlitz3.ab3@28074>   JSR skiprest
00039A3C <AmiBlitz3.ab3@28075>   MOVE.b #1,developobject
00039A3E <AmiBlitz3.ab3@28076> RTS
00039A42 <AmiBlitz3.ab3@28079>   MOVEM.l (a7)+,a1/d2
00039A4A <AmiBlitz3.ab3@28080>   MOVE.b #1,resdisable
00039A50 <AmiBlitz3.ab3@28083>   CLR.b developobject
00039A56 <AmiBlitz3.ab3@28084> JMP do_Macro
00039A5C <AmiBlitz3.ab3@28088> JMP illeaerr
00039A62 <AmiBlitz3.ab3@28092>   CLR.b typecheck
00039A68 <AmiBlitz3.ab3@28093>   CLR.b declare
00039A6E <AmiBlitz3.ab3@28094>   CLR.b declare2
00039A72 <AmiBlitz3.ab3@28095>   SUB.b #$30,d0
00039A76 <AmiBlitz3.ab3@28096>   BTST #0,d0
00039A7A <AmiBlitz3.ab3@28097>   BEQ 'l1
00039A82 <AmiBlitz3.ab3@28098>   MOVE.b #1,declare
00039A86 <AmiBlitz3.ab3@28101>   BTST #1,d0
00039A8A <AmiBlitz3.ab3@28102>   BEQ 'l2
00039A92 <AmiBlitz3.ab3@28103>   MOVE.b #1,declare2
00039A96 <AmiBlitz3.ab3@28106>   BTST #2,d0
00039A9A <AmiBlitz3.ab3@28107>   BEQ 'l3
00039AA2 <AmiBlitz3.ab3@28108>   MOVE.b #1,typecheck
00039AA6 <AmiBlitz3.ab3@28110>   BSR.w JUMP_get1bytemain
00039AA8 <AmiBlitz3.ab3@28111> RTS
00039AAE <AmiBlitz3.ab3@28114> JMP get1bytemain
00039AD8 <AmiBlitz3.ab3@28118>   !basic
00039AF8 <AmiBlitz3.ab3@28120>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00039B16 <AmiBlitz3.ab3@28121>   !asm
00039B18 <AmiBlitz3.ab3@28122> Return
00039B1A <AmiBlitz3.ab3@28127>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00039B1C <AmiBlitz3.ab3@28128>   ADDQ #1,a5
00039B1E <AmiBlitz3.ab3@28129>   MOVE.l a5,-(a7)
00039B48 <AmiBlitz3.ab3@28130>   !basic
00039B4E <AmiBlitz3.ab3@28131>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00039B58 <AmiBlitz3.ab3@28132>   If _myD0
00039B98 <AmiBlitz3.ab3@28133>     newconst$ = UCase$(Peek.s(_myD0))
00039B9E <AmiBlitz3.ab3@28134>   Else
00039BD8 <AmiBlitz3.ab3@28135>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00039C00 <AmiBlitz3.ab3@28136>     nwconst$="xxx"
00039C28 <AmiBlitz3.ab3@28138>   condata$ =""
00039C38 <AmiBlitz3.ab3@28139>   Poke.b ?skip_bytes,0
00039C94 <AmiBlitz3.ab3@28140>   If Left$(newconst$,2) = "__"
00039CEE <AmiBlitz3.ab3@28141>     Select Mid$(newconst$,3,4)
00039D12 <AmiBlitz3.ab3@28143>      Case "DATE"
00039D6C <AmiBlitz3.ab3@28144>       Select Mid$(newconst$,3,6)
00039DAA <AmiBlitz3.ab3@28145>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00039DEE <AmiBlitz3.ab3@28146>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00039DFC <AmiBlitz3.ab3@28147>       End Select
00039E0A <AmiBlitz3.ab3@28148>       i.l=SystemDate
00039E30 <AmiBlitz3.ab3@28149>       condata$ = Date$ (i)
00039EAE <AmiBlitz3.ab3@28150>       condata$ = Replace$(condata$,"/",".")
00039ED8 <AmiBlitz3.ab3@28152>      Case "VER_"
00039EE8 <AmiBlitz3.ab3@28155>       actual_version.l = Peek.l(?versioninformation)
00039EF8 <AmiBlitz3.ab3@28156>       actual_build.l   = Peek.l(?number_of_builds)
00039F1C <AmiBlitz3.ab3@28158>       Format ""
00039F76 <AmiBlitz3.ab3@28159>       Select Mid$(newconst$,3,9)
00039F9A <AmiBlitz3.ab3@28161>        Case "VER_MAJOR"
00039FD6 <AmiBlitz3.ab3@28162>         condata$ = Str$(actual_version LSR 24)
0003A000 <AmiBlitz3.ab3@28164>        Case "VER_MINOR"
0003A044 <AmiBlitz3.ab3@28165>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003A06E <AmiBlitz3.ab3@28167>        Case "VER_PATCH"
0003A0B2 <AmiBlitz3.ab3@28168>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003A0DC <AmiBlitz3.ab3@28170>        Case "VER_BUILD"
0003A100 <AmiBlitz3.ab3@28171>         Format ""
0003A134 <AmiBlitz3.ab3@28172>         condata$ = Str$(actual_build)
0003A13A <AmiBlitz3.ab3@28174>        Default
0003A162 <AmiBlitz3.ab3@28175>         condata$ = "{unknown compiler constant}"
0003A170 <AmiBlitz3.ab3@28177>       End Select
0003A194 <AmiBlitz3.ab3@28178>       Format ""
0003A1A4 <AmiBlitz3.ab3@28179>       Poke.b ?skip_bytes,11
0003A1CE <AmiBlitz3.ab3@28181>      Case "THIS"
0003A228 <AmiBlitz3.ab3@28182>       Select Mid$(newconst$,3,9)
0003A24C <AmiBlitz3.ab3@28184>        Case "THIS_FUNC"
0003A25C <AmiBlitz3.ab3@28185>         Poke.b ?skip_bytes,15
0003A27C <AmiBlitz3.ab3@28186>         If Peek.l(?currentfunction)<>0
0003A2C8 <AmiBlitz3.ab3@28187>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003A2CE <AmiBlitz3.ab3@28188>         Else
0003A2F6 <AmiBlitz3.ab3@28189>           condata$ = "GLOBAL"
0003A320 <AmiBlitz3.ab3@28192>        Case "THIS_INCL"
0003A330 <AmiBlitz3.ab3@28193>         Poke.b ?skip_bytes,14
0003A350 <AmiBlitz3.ab3@28194>         If Peek.l(?includetemp2)<>0
0003A39E <AmiBlitz3.ab3@28195>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003A3C8 <AmiBlitz3.ab3@28198>        Case "THIS_POIN"
0003A3D8 <AmiBlitz3.ab3@28199>         Poke.b ?skip_bytes,14
0003A3F8 <AmiBlitz3.ab3@28200>         If Peek.l(?currentfunction)<>0
0003A426 <AmiBlitz3.ab3@28201>           condata$ = Hex$(Peek.l(?currentfunction))
0003A434 <AmiBlitz3.ab3@28204>       End Select
0003A45E <AmiBlitz3.ab3@28206>      Case "CODE"
0003A46E <AmiBlitz3.ab3@28207>       Poke.b ?skip_bytes,10
0003A4D0 <AmiBlitz3.ab3@28208>       If Mid$(newconst$,3,8) = "CODELINE"
0003A50C <AmiBlitz3.ab3@28209>         condata$ = Str$(Peek.l(?globallinecount))
0003A51A <AmiBlitz3.ab3@28212>     End Select
0003A520 <AmiBlitz3.ab3@28214>   Else
0003A574 <AmiBlitz3.ab3@28215>     Select Left$(newconst$,1)
0003A598 <AmiBlitz3.ab3@28217>      Case "R"
0003A5A8 <AmiBlitz3.ab3@28218>       Poke.b ?skip_bytes,3
0003A620 <AmiBlitz3.ab3@28219>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003A6A0 <AmiBlitz3.ab3@28220>         condata$ = condata$ + Mid$(newconst$,4,1)
0003A6B0 <AmiBlitz3.ab3@28221>       Next
0003A6DA <AmiBlitz3.ab3@28223>      Case "N"
0003A6EA <AmiBlitz3.ab3@28224>       Poke.b ?skip_bytes,1
0003A70E <AmiBlitz3.ab3@28225>       condata$ = Chr$(10)
0003A714 <AmiBlitz3.ab3@28227>      Default
0003A726 <AmiBlitz3.ab3@28228>       char1.b = Peek.b(&newconst$)
0003A73E <AmiBlitz3.ab3@28229>       char2.b = Peek.b(&newconst$+1)
0003A74A <AmiBlitz3.ab3@28230>       nibble1.l = -1
0003A756 <AmiBlitz3.ab3@28231>       nibble2.l = -1
0003A794 <AmiBlitz3.ab3@28233>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003A7D2 <AmiBlitz3.ab3@28234>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003A816 <AmiBlitz3.ab3@28236>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003A85A <AmiBlitz3.ab3@28237>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003A89E <AmiBlitz3.ab3@28239>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003A8E2 <AmiBlitz3.ab3@28240>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003A908 <AmiBlitz3.ab3@28242>       If nibble1>=0 AND nibble2>=0
0003A91E <AmiBlitz3.ab3@28243>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003A942 <AmiBlitz3.ab3@28244>         condata$ = Chr$(newchar)
0003A952 <AmiBlitz3.ab3@28245>         Poke.b ?skip_bytes,2
0003A960 <AmiBlitz3.ab3@28248>     End Select
0003A9C0 <AmiBlitz3.ab3@28250>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003AAE6 <AmiBlitz3.ab3@28251>     !cout{"detected unknown const: " + newconst$}
0003AB1A <AmiBlitz3.ab3@28252>     condata$ = newconst$
0003AB30 <AmiBlitz3.ab3@28255>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003AB32 <AmiBlitz3.ab3@28256>   MOVE.l d0,d2
0003AB34 <AmiBlitz3.ab3@28257>   MOVE.l d2,-(a7)
0003AB3A <AmiBlitz3.ab3@28259>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003AB3C <AmiBlitz3.ab3@28260>   MOVE.l d0,a0
0003AB3E <AmiBlitz3.ab3@28263>     MOVE.b (a0)+,d1
0003AB44 <AmiBlitz3.ab3@28264>     JSR pokedata1b
0003AB48 <AmiBlitz3.ab3@28265>  DBF d2,'l1
0003AB66 <AmiBlitz3.ab3@28267>   !asm
0003AB68 <AmiBlitz3.ab3@28268>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003AB6A <AmiBlitz3.ab3@28269>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003AB6C <AmiBlitz3.ab3@28270>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003AB72 <AmiBlitz3.ab3@28271>   ADD.l #1,d2
0003AB78 <AmiBlitz3.ab3@28273>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003AB7E <AmiBlitz3.ab3@28274>   MOVE.b skip_bytes,D0
0003AB80 <AmiBlitz3.ab3@28275>   ADD.l D0,a5
0003AB82 <AmiBlitz3.ab3@28276> RTS
0003AB86 <AmiBlitz3.ab3@28351> MOVEM.l a3/d1,-(a7)
0003AB8C <AmiBlitz3.ab3@28353> CLR.b a4a5store
0003AB8E <AmiBlitz3.ab3@28354> 'continue: MOVE.b (a3)+,d1
0003AB92 <AmiBlitz3.ab3@28355> CMP.b #$15,d1
0003AB96 <AmiBlitz3.ab3@28356> BEQ 'find
0003AB9A <AmiBlitz3.ab3@28357> CMP.b #$14,d1
0003AB9E <AmiBlitz3.ab3@28358> BEQ 'find
0003ABA2 <AmiBlitz3.ab3@28359> CMP.b #$ff,d1
0003ABA6 <AmiBlitz3.ab3@28360> BNE 'continue
0003ABAA <AmiBlitz3.ab3@28361> BRA 'notfind
0003ABB0 <AmiBlitz3.ab3@28363> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003ABB6 <AmiBlitz3.ab3@28364> JSR writelong
0003ABBE <AmiBlitz3.ab3@28365> MOVE.b #1,a4a5store
0003ABC2 <AmiBlitz3.ab3@28366> 'notfind: MOVEM.l (a7)+,a3/d1
0003ABC4 <AmiBlitz3.ab3@28367> RTS
0003ABCA <AmiBlitz3.ab3@28370> TST.b a4a5store
0003ABCE <AmiBlitz3.ab3@28371> BEQ 'no
0003ABD4 <AmiBlitz3.ab3@28372> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003ABDA <AmiBlitz3.ab3@28373> JSR writelong
0003ABE0 <AmiBlitz3.ab3@28374> CLR.b a4a5store
0003ABE2 <AmiBlitz3.ab3@28375> 'no RTS
0003ABE2 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003ABE6 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003ABE8 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003ABF0 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003ABFC <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003AC00 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003AC02 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003AC06 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003AC4F <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003AC50 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003AC54 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003AC56 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003AC5A <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003AC76 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003AC7A <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003AC7C <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003AC80 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003ACDD <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003ACDE <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003ACE2 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003ACE4 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003ACE9 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003ACF9 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003ACFA <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003ACFE <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003AD00 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003AD06 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003AD16 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003AD1A <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003AD1C <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003AD23 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003AD24 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003AD28 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003AD2A <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003AD34 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003AD67 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003AD68 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003AD6C <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003AD6E <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003AD77 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003ADB2 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003ADB6 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003ADB8 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003ADC2 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003ADC3 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003ADC4 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003ADC8 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003ADCA <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003ADCD <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003ADE4 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003ADE8 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003ADEA <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003ADF0 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003ADFD <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003ADFE <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003AE02 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003AE04 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003AE0A <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003AE16 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003AE1A <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003AE1C <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003AE23 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003AE30 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003AE34 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003AE36 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003AE3B <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003AE48 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003AE4C <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003AE4E <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003AE56 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003AE57 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003AE58 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003AE5C <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003AE5E <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003AE66 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003AE67 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003AE68 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003AE6C <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003AE6E <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003AE77 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003AE82 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003AE86 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003AE88 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003AE90 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003AE9B <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003AE9C <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003AEA0 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003AEA2 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003AEA9 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003AF0B <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003AF0C <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003AF10 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003AF12 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003AF19 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003AF28 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003AF2C <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003AF2E <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003AF32 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003AF68 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003AF6C <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003AF6E <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003AF73 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003AF82 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003AF86 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003AF88 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003AF8B <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003AFAC <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003AFB0 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003AFB2 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003AFB7 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003AFC3 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003AFC4 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003AFC8 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003AFCA <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003AFCF <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003AFE6 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003AFEA <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003AFEC <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003AFF1 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003B000 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003B004 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003B006 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003B00B <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003B02A <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003B02E <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003B030 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003B035 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003B054 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003B058 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003B05A <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003B060 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003B061 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003B062 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003B066 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003B068 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003B06D <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003B06E <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003B072 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003B074 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003B079 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003B086 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003B08A <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003B08C <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003B091 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003B0A0 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003B0A4 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003B0A6 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003B0AB <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003B0BA <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003B0BE <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003B0C0 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003B0C6 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003B0E3 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003B0E4 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003B0E8 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003B0EA <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003B0F0 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003B10D <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003B10E <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003B112 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003B114 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003B117 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003B12E <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003B132 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003B134 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003B137 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003B146 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003B14A <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003B14C <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003B151 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003B152 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003B156 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003B158 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003B15C <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003B171 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003B172 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003B176 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003B178 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003B17F <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003B198 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003B19C <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003B19E <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003B1A5 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003B1B0 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003B1B4 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003B1B6 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003B1BB <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003B1D2 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003B1D6 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003B1D8 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003B1DC <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003B1F3 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003B1F4 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003B1F8 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003B1FA <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003B1FF <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003B200 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003B204 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003B206 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003B20B <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003B20F <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003B210 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003B214 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003B216 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003B21D <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003B235 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003B236 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003B23A <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003B23C <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003B243 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003B248 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003B24C <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003B24E <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003B255 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003B25A <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003B25E <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003B260 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003B267 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003B282 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003B286 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003B288 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003B290 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003B2A9 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003B2AA <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003B2AE <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003B2B0 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003B2B6 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003B2B7 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003B2B8 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003B2BC <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003B2BE <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003B2C4 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003B2C5 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003B2C6 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003B2CA <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003B2CC <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003B2D3 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003B2D4 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003B2D8 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003B2DA <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003B2E0 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003B2E9 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003B2EA <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003B2EE <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003B2F0 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003B2F8 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003B305 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003B306 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003B30A <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003B30C <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003B314 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003B321 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003B322 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003B326 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003B328 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003B330 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003B33D <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003B33E <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003B342 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003B344 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003B349 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003B34A <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003B34E <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003B350 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003B355 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003B356 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003B358 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003B35C <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003B35E <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003B360 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003B364 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003B366 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003B36A <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003B36C <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003B370 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003B371 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003B372 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003B374 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003B378 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003B37A <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003B37C <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003B380 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003B382 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003B386 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003B388 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003B38D <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003B38E <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003B390 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003B394 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003B396 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003B398 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003B39C <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003B39E <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003B3A2 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003B3A4 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003B3A9 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003B3AA <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003B3AC <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003B3B0 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003B3B2 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003B3B4 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003B3B8 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003B3BA <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003B3BE <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003B3C0 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003B3C5 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003B3C6 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003B3C8 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003B3CC <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003B3CE <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003B3D0 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003B3D4 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003B3D6 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003B3DA <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003B3DC <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003B3E1 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003B3E2 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003B3E4 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003B3E8 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003B3EA <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003B3EC <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003B3F0 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003B3F2 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003B3F6 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003B3F8 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003B3FC <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003B3FD <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003B3FE <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003B400 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003B404 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003B406 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003B408 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003B40C <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003B40E <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003B412 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003B414 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003B419 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003B41A <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003B41C <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003B420 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003B422 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003B424 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003B428 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003B42A <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003B42E <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003B430 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003B434 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003B435 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003B436 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003B438 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003B43C <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003B43E <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003B440 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003B444 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003B446 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003B44A <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003B44C <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003B450 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003B451 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003B452 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003B454 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003B458 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003B45A <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003B45C <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003B460 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003B462 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003B466 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003B468 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003B46C <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003B46D <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003B46E <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003B470 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003B474 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003B476 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003B478 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003B47C <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003B47E <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003B482 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003B484 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003B488 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003B489 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003B48A <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003B48C <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003B490 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003B492 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003B494 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003B498 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003B49A <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003B49E <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003B4A0 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003B4A4 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003B4A5 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003B4A6 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003B4A8 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003B4AC <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003B4AE <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003B4B0 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003B4B4 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003B4B6 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003B4BA <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003B4BC <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003B4C0 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003B4C1 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003B4C2 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003B4C4 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003B4C8 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003B4CA <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003B4CC <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003B4D0 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003B4D2 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003B4D6 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003B4D8 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003B4DC <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003B4DD <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003B4DE <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003B4E0 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003B4E4 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003B4E6 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003B4E8 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003B4EC <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003B4EE <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003B4F2 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003B4F4 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003B4F8 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003B4F9 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003B4FA <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003B4FC <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003B500 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003B502 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003B504 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003B508 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003B50A <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003B50E <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003B510 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003B514 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003B515 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003B516 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003B518 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003B51C <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003B51E <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003B520 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003B524 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003B526 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003B52A <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003B52C <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003B530 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003B531 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003B532 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003B534 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003B538 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003B53A <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003B53C <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003B540 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003B542 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003B546 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003B548 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003B54C <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003B54D <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003B54E <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003B550 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003B554 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003B556 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003B558 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003B55C <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003B55E <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003B562 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003B564 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003B568 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003B569 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003B56A <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003B56C <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003B570 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003B572 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003B574 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003B578 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003B57A <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003B57E <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003B580 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003B584 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003B585 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003B586 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003B588 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003B58C <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003B58E <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003B590 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003B594 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003B596 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003B59A <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003B59C <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003B5A0 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003B5A1 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003B5A2 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003B5A4 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003B5A8 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003B5AA <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003B5AC <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003B5B0 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003B5B2 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003B5B6 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003B5B8 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003B5BC <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003B5BD <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003B5BE <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003B5C0 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003B5C4 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003B5C6 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003B5C8 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003B5CC <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003B5CE <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003B5D2 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003B5D4 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003B5D8 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003B5D9 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003B5DA <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003B5DC <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003B5E0 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003B5E2 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003B5E4 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003B5E8 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003B5EA <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003B5EE <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003B5F0 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003B5F5 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003B5F6 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003B5F8 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003B5FC <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003B5FE <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003B600 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003B604 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003B606 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003B60A <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003B60C <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003B611 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003B612 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003B614 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003B618 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003B61A <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003B61C <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003B620 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003B622 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003B626 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003B628 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003B62D <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003B62E <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003B630 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003B634 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003B636 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003B638 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003B63C <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003B63E <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003B642 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003B644 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003B649 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003B64A <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003B64C <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003B650 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003B652 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003B654 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003B658 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003B65A <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003B65E <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003B660 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003B664 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003B665 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003B666 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003B668 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003B66C <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003B66E <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003B670 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003B674 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003B676 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003B67A <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003B67C <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003B680 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003B681 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003B682 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003B684 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003B688 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003B68A <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003B68C <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003B690 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003B692 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003B696 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003B698 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003B69C <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003B69D <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003B69E <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003B6A0 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003B6A4 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003B6A6 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003B6A8 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003B6AC <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003B6AE <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003B6B2 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003B6B4 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003B6B8 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003B6B9 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003B6BA <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003B6BC <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003B6C0 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003B6C2 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003B6C4 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003B6C8 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003B6CA <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003B6CE <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003B6D0 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003B6D4 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003B6D5 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003B6D6 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003B6D8 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003B6DC <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003B6DE <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003B6E0 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003B6E4 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003B6E6 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003B6EA <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003B6EC <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003B6F1 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003B6F2 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003B6F4 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003B6F8 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003B6FA <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003B6FC <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003B700 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003B702 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003B706 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003B708 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003B70D <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003B70E <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003B710 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003B714 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003B716 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003B718 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003B71C <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003B71E <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003B722 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003B724 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003B729 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003B72A <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003B72C <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003B730 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003B732 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003B734 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003B738 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003B73A <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003B73E <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003B740 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003B745 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003B746 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003B748 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003B74C <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003B74E <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003B750 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003B754 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003B756 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003B75A <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003B75C <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003B761 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003B762 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003B764 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003B768 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003B76A <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003B76C <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003B770 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003B772 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003B776 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003B778 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003B77D <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003B77E <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003B780 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003B784 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003B786 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003B788 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003B78C <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003B78E <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003B792 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003B794 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003B799 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003B79A <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003B79C <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003B7A0 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003B7A2 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003B7A4 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003B7A8 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003B7AA <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003B7AE <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003B7B0 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003B7B5 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003B7B6 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003B7B8 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003B7BC <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003B7BE <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003B7C0 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003B7C4 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003B7C6 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003B7CA <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003B7CC <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003B7D1 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003B7D2 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003B7D4 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003B7D8 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003B7DA <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003B7DC <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003B7E0 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003B7E2 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003B7E6 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003B7E8 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003B7ED <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003B7EE <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003B7F0 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003B7F4 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003B7F6 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003B7F8 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003B7FC <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003B7FE <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003B802 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003B804 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003B809 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003B80A <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003B80C <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003B810 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003B812 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003B814 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003B818 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003B81A <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003B81E <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003B820 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003B825 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003B826 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003B828 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003B82C <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003B82E <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003B830 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003B834 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003B836 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003B83A <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003B83C <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003B841 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003B842 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003B844 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003B848 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003B84A <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003B84C <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003B850 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003B852 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003B856 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003B858 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003B85D <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003B85E <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003B860 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003B864 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003B866 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003B868 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003B86C <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003B86E <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003B874 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003B879 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003B87A <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003B87C <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003B880 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003B882 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003B884 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003B888 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003B88A <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003B895 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003B896 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003B898 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003B89C <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003B89E <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003B8A0 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003B8A4 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003B8A6 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003B8AA <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003B8AC <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003B8B1 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003B8B2 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003B8B4 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003B8B8 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003B8BA <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003B8BC <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003B8C0 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003B8C2 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003B8C6 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003B8C8 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003B8CC <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003B8CD <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003B8CE <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003B8D0 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003B8D4 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003B8D6 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003B8D8 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003B8DC <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003B8DE <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003B8E2 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003B8E4 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003B8E9 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003B8EA <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003B8EC <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003B8F0 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003B8F2 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003B8F4 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003B8F8 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003B8FA <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003B8FE <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003B900 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003B904 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003B905 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003B906 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003B908 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003B90C <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003B90E <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003B910 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003B914 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003B916 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003B91A <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003B91C <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003B921 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003B922 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003B924 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003B928 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003B92A <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003B92C <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003B930 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003B932 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003B938 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003B93D <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003B93E <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003B940 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003B944 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003B946 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003B948 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003B94E <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003B952 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003B958 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003B959 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003B95A <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003B95C <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003B960 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003B962 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003B964 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003B968 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003B96A <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003B975 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003B976 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003B978 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003B97C <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003B97E <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003B980 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003B984 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003B986 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003B98A <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003B98C <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003B990 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003B991 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003B992 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003B994 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003B998 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003B99A <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003B99C <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003B9A0 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003B9A2 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003B9A6 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003B9A8 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003B9AC <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003B9AD <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003B9AE <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003B9B0 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003B9B4 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003B9B6 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003B9B8 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003B9BE <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003B9C4 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003B9CC <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003B9CD <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003B9CE <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003B9D4 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003B9D6 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003B9DC <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003B9DE <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003B9E2 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003B9E4 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003B9E8 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003B9E9 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003B9EA <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003B9EC <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003B9F0 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003B9F2 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003B9FE <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003BA04 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003BA05 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003BA0C <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003BA10 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003BA16 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003BA1A <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003BA1C <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003BA20 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003BA21 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003BA22 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003BA28 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003BA2C <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003BA30 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003BA32 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003BA36 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003BA38 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003BA3D <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003BA3E <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003BA40 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003BA44 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003BA46 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003BA48 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003BA4C <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003BA52 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003BA54 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003BA58 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003BA59 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003BA5A <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003BA60 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003BA62 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003BA64 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003BA68 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003BA6A <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003BA6E <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003BA75 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003BA84 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003BA8A <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003BA91 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003BA92 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003BAA0 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003BAA6 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003BAA8 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003BAAD <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003BAAE <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003BAB4 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003BAB6 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003BABC <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003BAC2 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003BAC4 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003BACA <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003BACB <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003BACE <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003BAD2 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003BAD6 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003BADC <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003BAE2 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003BAE8 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003BAE9 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003BAEA <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003BAEC <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003BAF0 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003BAF2 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003BAF4 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003BAF8 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003BAFA <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003BAFE <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003BB00 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003BB06 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003BB07 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003BB08 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003BB0A <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003BB0E <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003BB10 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003BB16 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003BB1E <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003BB23 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003BB24 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003BB26 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003BB2A <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003BB2C <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003BB32 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003BB3A <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003BB3F <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003BB40 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003BB46 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003BB48 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003BB4A <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003BB4E <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003BB54 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003BB56 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003BB5B <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003BB5C <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003BB62 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003BB64 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003BB66 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003BB6A <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003BB70 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003BB72 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003BB76 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003BB77 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003BB7A <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003BB7E <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003BB80 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003BB82 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003BB86 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003BB88 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003BB8C <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003BB8E <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003BB93 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003BB94 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003BB9A <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003BB9C <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003BBA2 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003BBA8 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003BBAA <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003BBAE <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003BBAF <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003BBB0 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003BBB2 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003BBB6 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003BBB8 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003BBBA <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003BBBE <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003BBC4 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003BBCA <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003BBCB <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003BBD2 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003BBE5 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003BBE6 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003BBEC <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003BBEE <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003BBF0 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003BBF4 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003BBF6 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003BBFA <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003BBFC <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003BC01 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003BC02 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003BC0A <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003BC10 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003BC12 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003BC16 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003BC18 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003BC1D <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003BC1E <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003BC26 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003BC28 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003BC2C <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003BC2E <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003BC32 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003BC34 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003BC3A <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003BC3B <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003BC3C <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003BC3E <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003BC42 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003BC44 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003BC46 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003BC4A <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003BC50 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003BC56 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003BC57 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003BC58 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003BC5A <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003BC5E <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003BC60 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003BC62 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003BC66 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003BC6C <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003BC6E <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003BC72 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003BC73 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003BC74 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003BC7A <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003BC7C <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003BC82 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003BC88 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003BC8A <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003BC8F <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003BC90 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003BC92 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003BC96 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003BC98 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003BC9E <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003BCA4 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003BCAB <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003BCAC <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003BCB2 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003BCBC <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003BCC2 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003BCC6 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003BCC7 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003BCCE <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003BCD2 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003BCD6 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003BCDC <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003BCE2 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003BCE3 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003BCEA <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003BCEC <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003BCEE <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003BCF2 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003BCF4 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003BCFA <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003BCFE <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003BCFF <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003BD06 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003BD0A <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003BD0E <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003BD10 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003BD14 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003BD16 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003BD1B <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003BD22 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003BD26 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003BD2A <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003BD2C <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003BD30 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003BD36 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003BD37 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003BD38 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003BD3E <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003BD46 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003BD48 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003BD4C <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003BD4E <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003BD52 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003BD53 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003BD54 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003BD5A <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003BD5E <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003BD62 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003BD68 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003BD6A <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003BD6E <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003BD6F <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003BD70 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003BD72 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003BD76 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003BD78 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003BD7E <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003BD84 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003BD8A <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003BD8B <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003BD8C <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003BD8E <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003BD92 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003BD94 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003BD96 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003BD9A <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003BD9C <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003BDA0 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003BDA2 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003BDA7 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003BDAA <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003BDAE <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003BDB6 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003BDBC <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003BDC2 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003BDC3 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003BDCA <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003BDCC <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003BDD2 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003BDD4 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003BDD8 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003BDDE <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003BDDF <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003BDE0 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003BDEA <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003BDF0 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003BDFA <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003BDFB <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003BDFE <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003BE02 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003BE06 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003BE10 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003BE12 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003BE16 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003BE17 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003BE18 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003BE1A <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003BE1E <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003BE26 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003BE2C <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003BE33 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003BE34 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003BE36 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003BE3A <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003BE3E <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003BE42 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003BE4F <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003BE50 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003BE52 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003BE56 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003BE5A <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003BE60 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003BE64 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003BE66 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003BE6B <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003BE74 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003BE7A <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003BE7C <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003BE87 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003BE8E <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003BE98 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003BE9E <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003BEA2 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003BEA3 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003BEA6 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003BEAA <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003BEB8 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003BEBD <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003BEC6 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003BED7 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003BEE2 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003BEE8 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003BEF3 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003BEF6 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003BEFE <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003BF0F <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003BF12 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003BF1A <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003BF2B <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003BF36 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003BF47 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003BF52 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003BF63 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003BF6E <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003BF7F <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003BF82 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003BF8A <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003BF9B <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003BF9E <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003BFA6 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003BFB7 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003BFC2 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003BFD3 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003BFDE <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003BFF1 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003C002 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003C00D <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003C029 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003C047 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003C166 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003C1C4 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003C1FC <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003C2DD <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003C2EB <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003C2F9 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003C309 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003C315 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003C329 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003C330 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003C335 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003C33F <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003C34D <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003C367 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003C375 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003C38D <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003C3BB <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003C3C9 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003C3E1 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003C3ED <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003C3FB <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003C40D <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003C41F <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003C43B <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003C445 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003C486 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003C48B <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003C49B <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003C4C9 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003C4D1 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003C4E9 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003C4F9 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003C507 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003C515 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003C523 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003C531 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003C53F <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003C54B <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003C561 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003C573 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003C585 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003C5C5 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003C60B <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003C639 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003C647 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003C67D <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003C68D <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003C70F <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003C710 <AmiBlitz3.ab3@28379> INCLUDE "internal_commands.ab3"
0003C714 <AmiBlitz3.ab3@28384>            Dc.l cif_lt                                     ;ciflt
0003C718 <AmiBlitz3.ab3@28385>            Dc.l cif_eq                                     ;cifeq
0003C71C <AmiBlitz3.ab3@28386>            Dc.l cif_gt                                     ;cifgt
0003C720 <AmiBlitz3.ab3@28387>            Ds.l 1                                          ;0
0003C724 <AmiBlitz3.ab3@28388>            Dc.l cif_le                                     ;cifle
0003C728 <AmiBlitz3.ab3@28389>            Dc.l cif_ne                                     ;cifne
0003C72C <AmiBlitz3.ab3@28390>            Dc.l cif_le                                     ;cifge
0003C730 <AmiBlitz3.ab3@28391>            Ds.l 1                                          ;0
0003C734 <AmiBlitz3.ab3@28392>            Dc.l cif_ge                                     ;cifge
0003C738 <AmiBlitz3.ab3@28393>            Dc.l cif_ne                                     ;cifne
0003C73C <AmiBlitz3.ab3@28394>            Dc.l cif_ge                                     ;cifge
0003C740 <AmiBlitz3.ab3@28395>            Ds.l 1                                          ;0
0003C744 <AmiBlitz3.ab3@28398>            Dc.l do_newtype                                 ;donewtype
0003C748 <AmiBlitz3.ab3@28399>            Dc.l do_end                                     ;doend
0003C74C <AmiBlitz3.ab3@28400>            Dc.l do_let                                     ;dolet
0003C750 <AmiBlitz3.ab3@28401>            Dc.l do_dim                                     ;dodim
0003C754 <AmiBlitz3.ab3@28402>            Dc.l do_goto                                    ;dogoto
0003C758 <AmiBlitz3.ab3@28403>            Dc.l do_gosub                                   ;dogosub
0003C75C <AmiBlitz3.ab3@28404>            Dc.l do_return                                  ;doreturn
0003C760 <AmiBlitz3.ab3@28405>            Dc.l do_statement                               ;dostatement
0003C764 <AmiBlitz3.ab3@28406>            Dc.l do_function                                ;dofunc
0003C768 <AmiBlitz3.ab3@28407>            Dc.l do_mousewait                               ;domwait
0003C76C <AmiBlitz3.ab3@28408>            Dc.l do_if                                      ;doif
0003C770 <AmiBlitz3.ab3@28409>            Dc.l do_while                                   ;dowhile
0003C774 <AmiBlitz3.ab3@28410>            Dc.l do_Macro                                   ;domacro
0003C778 <AmiBlitz3.ab3@28411>            Dc.l do_select                                  ;doselect
0003C77C <AmiBlitz3.ab3@28412>            Dc.l do_case                                    ;docase
0003C780 <AmiBlitz3.ab3@28413>            Dc.l do_default                                 ;dodefault
0003C784 <AmiBlitz3.ab3@28414>            Dc.l do_AsmExit                                 ;doasmexit
0003C788 <AmiBlitz3.ab3@28415>            Dc.l do_xinclude                                ;doxinclude
0003C78C <AmiBlitz3.ab3@28416>            Dc.l do_INCLUDE                                 ;doinclude
0003C790 <AmiBlitz3.ab3@28417>            Dc.l do_syntax                                  ;syntaxerr
0003C794 <AmiBlitz3.ab3@28418>            Dc.l do_shared                                  ;doshared
0003C798 <AmiBlitz3.ab3@28419>            Dc.l do_for                                     ;dofor
0003C79C <AmiBlitz3.ab3@28420>            Dc.l do_next                                    ;donext
0003C7A0 <AmiBlitz3.ab3@28421>            Dc.l syntaxerr                                  ; To
0003C7A4 <AmiBlitz3.ab3@28422>            Dc.l syntaxerr                                  ; Step
0003C7A8 <AmiBlitz3.ab3@28423>            Dc.l do_data                                    ;dodata
0003C7AC <AmiBlitz3.ab3@28424>            Dc.l do_read                                    ;doread
0003C7B0 <AmiBlitz3.ab3@28428>            Dc.l syntaxerr                                  ; CNIF
0003C7B4 <AmiBlitz3.ab3@28429>            Dc.l syntaxerr                                  ; CSIF
0003C7B8 <AmiBlitz3.ab3@28430>            Dc.l syntaxerr                                  ; CELSE
0003C7BC <AmiBlitz3.ab3@28431>            Dc.l syntaxerr                                  ; CEND
0003C7C0 <AmiBlitz3.ab3@28432>            Dc.l do_cerr                                    ;docerr
0003C7C4 <AmiBlitz3.ab3@28433>            Dc.l do_then                                    ;dothen
0003C7C8 <AmiBlitz3.ab3@28434>            Dc.l do_else                                    ;doelse
0003C7CC <AmiBlitz3.ab3@28435>            Dc.l do_even4                                   ;doeven4
0003C7D0 <AmiBlitz3.ab3@28436>            Dc.l do_even8                                   ;doeven8
0003C7D4 <AmiBlitz3.ab3@28438>            Dc.l do_dc                                      ;dodc
0003C7D8 <AmiBlitz3.ab3@28439>            Dc.l do_ds                                      ;dods
0003C7DC <AmiBlitz3.ab3@28440>            Dc.l do_even                                    ;doeven
0003C7E0 <AmiBlitz3.ab3@28441>            Dc.l do_dcb                                     ;dodcb
0003C7E4 <AmiBlitz3.ab3@28442>            Dc.l do_setreg                                  ;dosetreg
0003C7E8 <AmiBlitz3.ab3@28443>            Dc.l do_IncBin                                  ;doincbin
0003C7EC <AmiBlitz3.ab3@28444>            Dc.l do_free                                    ;dofree
0003C7F0 <AmiBlitz3.ab3@28445>            Dc.l do_use                                     ;douse
0003C7F4 <AmiBlitz3.ab3@28446>            Dc.l do_Stop                                    ;dostop
0003C7F8 <AmiBlitz3.ab3@28447>            Dc.l do_Cont                                    ;docont
0003C7FC <AmiBlitz3.ab3@28448>            Dc.l syntaxerr                                  ;syntaxeer
0003C800 <AmiBlitz3.ab3@28449>            Dc.l do_SetInt                                  ;dosetint
0003C804 <AmiBlitz3.ab3@28450>            Dc.l do_ClrInt                                  ;doclrint
0003C808 <AmiBlitz3.ab3@28451>            Dc.l do_MaxLen                                  ;domaxlen
0003C80C <AmiBlitz3.ab3@28452>            Dc.l do_DEFTYPE                                 ;dodeftype
0003C810 <AmiBlitz3.ab3@28453>            Dc.l do_BLITZ                                   ;doblitz
0003C814 <AmiBlitz3.ab3@28454>            Dc.l do_AMIGA                                   ;doamiga
0003C818 <AmiBlitz3.ab3@28455>            Dc.l do_QAMIGA                                  ;doqamiga
0003C81C <AmiBlitz3.ab3@28456>            Dc.l do_VWait                                   ;dovwait
0003C820 <AmiBlitz3.ab3@28457>            Dc.l do_LibJsr                                  ;dolibjsr
0003C824 <AmiBlitz3.ab3@28458>            Dc.l do_TokeJsr                                 ;dotokejsr
0003C828 <AmiBlitz3.ab3@28459>            Dc.l do_BLibJsr                                 ;doblibjsr
0003C82C <AmiBlitz3.ab3@28460>            Dc.l _extb                                      ;syntaxerr
0003C830 <AmiBlitz3.ab3@28464>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003C834 <AmiBlitz3.ab3@28465>            Dc.l do_SetErr                                  ;doseterr
0003C838 <AmiBlitz3.ab3@28466>            Dc.l do_ClrErr                                  ;doclrerr
0003C83C <AmiBlitz3.ab3@28467>            Dc.l syntaxerr                                  ;syntaxerr
0003C840 <AmiBlitz3.ab3@28468>            Dc.l do_ErrFail                                 ;doerrfail
0003C844 <AmiBlitz3.ab3@28469>            Dc.l syntaxerr
0003C848 <AmiBlitz3.ab3@28470>            Dc.l syntaxerr                                  ;mod
0003C84C <AmiBlitz3.ab3@28471>            Dc.l syntaxerr                                  ;Pi
0003C850 <AmiBlitz3.ab3@28472>            Dc.l do_Repeat                                  ;dorepeat
0003C854 <AmiBlitz3.ab3@28473>            Dc.l do_Until                                   ;dountil
0003C858 <AmiBlitz3.ab3@28474>            Dc.l do_PutReg                                  ;doputreg
0003C85C <AmiBlitz3.ab3@28475>            Dc.l do_Pop                                     ;dopop
0003C860 <AmiBlitz3.ab3@28476>            Dc.l do_INCDIR                                  ;doincdir
0003C864 <AmiBlitz3.ab3@28477>            Dc.l mydo_Endif2                                ;mydoendif2
0003C868 <AmiBlitz3.ab3@28478>            Dc.l do_Wend                                    ;dowend
0003C86C <AmiBlitz3.ab3@28479>            Dc.l do_SysJsr                                  ;dosysjsr
0003C870 <AmiBlitz3.ab3@28480>            Dc.l do_WBStartup                               ;dowbstartup
0003C874 <AmiBlitz3.ab3@28481>            Dc.l syntaxerr
0003C878 <AmiBlitz3.ab3@28482>            Dc.l do_Ongo                                    ;doongo
0003C87C <AmiBlitz3.ab3@28483>            Dc.l syntaxerr
0003C880 <AmiBlitz3.ab3@28484>            Dc.l do_Forever                                 ;doforever
0003C884 <AmiBlitz3.ab3@28485>            Dc.l do_Restore                                 ;dorestore
0003C888 <AmiBlitz3.ab3@28486>            Dc.l do_Exchange                                ;doexchange
0003C88C <AmiBlitz3.ab3@28487>            Dc.l do_USEPATH                                 ;dousepath
0003C890 <AmiBlitz3.ab3@28488>            Dc.l do_CloseEd                                 ;doclosed
0003C894 <AmiBlitz3.ab3@28489>            Dc.l do_NoCli                                   ;donocli
0003C898 <AmiBlitz3.ab3@28490>            Dc.l syntaxerr                                  ;syntaxerr
0003C89C <AmiBlitz3.ab3@28491>            Dc.l syntaxerr                                  ;syntaxerr
0003C8A0 <AmiBlitz3.ab3@28492>            Dc.l syntaxerr                                  ;syntaxerr
0003C8A4 <AmiBlitz3.ab3@28493>            Dc.l syntaxerr                                  ;syntaxerr
0003C8A8 <AmiBlitz3.ab3@28494>            Dc.l syntaxerr                                  ;syntaxerr
0003C8AC <AmiBlitz3.ab3@28495>            Dc.l do_runerrson                               ;dorunerrson
0003C8B0 <AmiBlitz3.ab3@28496>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003C8B4 <AmiBlitz3.ab3@28497>            Dc.l do_uselastpath
0003C8B8 <AmiBlitz3.ab3@28498>            Dc.l do_regload
0003C8BC <AmiBlitz3.ab3@28499>            Dc.l do_regsave
0003C8C0 <AmiBlitz3.ab3@28500>            Dc.l do_Object
0003C8C4 <AmiBlitz3.ab3@28501>            Dc.l do_usepath2
0003C8C8 <AmiBlitz3.ab3@28502>            Dc.l do_LastRunErrsMode
0003C8CC <AmiBlitz3.ab3@28525> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003C8D0 <AmiBlitz3.ab3@28526>            Dc.l menu_run
0003C8D4 <AmiBlitz3.ab3@28527>            Dc.l menu_createexecutable
0003C8D8 <AmiBlitz3.ab3@28528>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003C8DC <AmiBlitz3.ab3@28529>            Dc.l menu_createresidentfile
0003C8E0 <AmiBlitz3.ab3@28530> 
0003C8E4 <AmiBlitz3.ab3@28531> 
0003C8E8 <AmiBlitz3.ab3@28532>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003C8EC <AmiBlitz3.ab3@28533>            Dc.l menu_reloadlibs
0003C8F0 <AmiBlitz3.ab3@28534>            Dc.l menu_loaddebugmodule
0003C8F4 <AmiBlitz3.ab3@28535>            Dc.l menu_dummyfunc
0003C8F8 <AmiBlitz3.ab3@28536>            Dc.l menu_newcreate
0003C8FC <AmiBlitz3.ab3@28537>            Dc.l menu_dummyfunc
0003C900 <AmiBlitz3.ab3@28538>            Dc.l menu_toggledebug
0003C904 <AmiBlitz3.ab3@28539>            Dc.l menu_dummyfunc
0003C908 <AmiBlitz3.ab3@28540>            Dc.l menu_dummyfunc
0003C932 <AmiBlitz3.ab3@28545>   !basic
0003C994 <AmiBlitz3.ab3@28546>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003C9B2 <AmiBlitz3.ab3@28547>   !asm
0003C9B4 <AmiBlitz3.ab3@28548> RTS
0003C9B5 <AmiBlitz3.ab3@28554> set_autorun:               Dc.b $00
0003C9BA <AmiBlitz3.ab3@28555> autorun:                   Dc.b $80,$01,$01,$00,$01
0003C9BB <AmiBlitz3.ab3@28557> set_interruptcheck:        Dc.b $00
0003C9C0 <AmiBlitz3.ab3@28558> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003C9C1 <AmiBlitz3.ab3@28560> set_assemblercheck:        Ds.b 1
0003C9C6 <AmiBlitz3.ab3@28561> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003C9C7 <AmiBlitz3.ab3@28563> set_overflowcheck:         Ds.b 1
0003C9CC <AmiBlitz3.ab3@28564> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003C9D2 <AmiBlitz3.ab3@28566> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003C9D8 <AmiBlitz3.ab3@28567> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003C9DE <AmiBlitz3.ab3@28568> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003C9E0 <AmiBlitz3.ab3@28569> Even4
0003C9EC <AmiBlitz3.ab3@28572> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003C9F4 <AmiBlitz3.ab3@28573>                            Dc.l $00000000,$00000000
0003C9FC <AmiBlitz3.ab3@28574> tstsize1:                  Dc.l $00000100,$000003E9
0003CA00 <AmiBlitz3.ab3@28575> tstsize2:                  Dc.l $00000100
0003CA04 <AmiBlitz3.ab3@28576> tstend:                    Dc.l $000003EC
0003CA0C <AmiBlitz3.ab3@28577> tstsize3:                  Ds.l 2
0003CA10 <AmiBlitz3.ab3@28578> tstdone:                   Dc.l $000003F2
0003CA14 <AmiBlitz3.ab3@28581> edstruct:                  Dc.l tokens                     ;data for ted
0003CA18 <AmiBlitz3.ab3@28585>                            Dc.l 0
0003CA1C <AmiBlitz3.ab3@28587>                            Dc.l read_xtrafile              ;load .xtra routine
0003CA20 <AmiBlitz3.ab3@28588>                            Dc.l write_xtrafile             ;save .xtra routine
0003CA24 <AmiBlitz3.ab3@28589>                            Dc.l call_menuentry             ;Menu Routine
0003CA28 <AmiBlitz3.ab3@28590>                            Ds.l 1                          ;cleanup (?)
0003CA2C <AmiBlitz3.ab3@28591>                            Dc.b ":",34,".;"
0003CB28 <AmiBlitz3.ab3@28594> 
0003CC08 <AmiBlitz3.ab3@28595>                            Ds.l 56
0003CC0A <AmiBlitz3.ab3@28600> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003CC0E <AmiBlitz3.ab3@28603> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003CC10 <AmiBlitz3.ab3@28604>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003CC14 <AmiBlitz3.ab3@28605>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003CC1A <AmiBlitz3.ab3@28609> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003CC1C <AmiBlitz3.ab3@28613>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003CC20 <AmiBlitz3.ab3@28616> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003CC24 <AmiBlitz3.ab3@28619> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003CC28 <AmiBlitz3.ab3@28620>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003CC2A <AmiBlitz3.ab3@28626>                            Dc.b $4A,$40                                             ;TST.W   D0
0003CC2C <AmiBlitz3.ab3@28630>                            Dc.b $4A,$80                                             ;TST.L   D0
0003CC2E <AmiBlitz3.ab3@28633> nops8:                     Dc.b $4E,$71                                             ;NOP
0003CC30 <AmiBlitz3.ab3@28634>                            Dc.b $4E,$71                                             ;NOP
0003CC32 <AmiBlitz3.ab3@28635>                            Dc.b $4E,$71                                             ;NOP
0003CC34 <AmiBlitz3.ab3@28636>                            Dc.b $4E,$71                                             ;NOP
0003CC36 <AmiBlitz3.ab3@28637> nops4:                     Dc.b $4E,$71                                             ;NOP
0003CC38 <AmiBlitz3.ab3@28639>                            Dc.b $4E,$71                                             ;NOP
0003CC3A <AmiBlitz3.ab3@28640>                            Dc.b $4E,$71                                             ;NOP
0003CC3C <AmiBlitz3.ab3@28641>                            Dc.b $4E,$71                                             ;NOP
0003CC40 <AmiBlitz3.ab3@28645> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003CC44 <AmiBlitz3.ab3@28648> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003CC46 <AmiBlitz3.ab3@28651> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003CC48 <AmiBlitz3.ab3@28654> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CC4A <AmiBlitz3.ab3@28655>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003CC4E <AmiBlitz3.ab3@28656>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003CC50 <AmiBlitz3.ab3@28657>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003CC52 <AmiBlitz3.ab3@28663> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CC56 <AmiBlitz3.ab3@28664>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003CC58 <AmiBlitz3.ab3@28669> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CC5C <AmiBlitz3.ab3@28670>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003CC5E <AmiBlitz3.ab3@28674> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CC60 <AmiBlitz3.ab3@28675>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003CC64 <AmiBlitz3.ab3@28681> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003CC66 <AmiBlitz3.ab3@28682>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003CC6A <AmiBlitz3.ab3@28683>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003CC6E <AmiBlitz3.ab3@28687> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003CC70 <AmiBlitz3.ab3@28688>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003CC74 <AmiBlitz3.ab3@28689>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003CC76 <AmiBlitz3.ab3@28692> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003CC7A <AmiBlitz3.ab3@28695> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003CC7E <AmiBlitz3.ab3@28698> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003CC82 <AmiBlitz3.ab3@28701> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003CC86 <AmiBlitz3.ab3@28705>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CC88 <AmiBlitz3.ab3@28706>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003CC8A <AmiBlitz3.ab3@28707>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003CC8E <AmiBlitz3.ab3@28712>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CC90 <AmiBlitz3.ab3@28713>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003CC92 <AmiBlitz3.ab3@28714>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003CC96 <AmiBlitz3.ab3@28719>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CC98 <AmiBlitz3.ab3@28720>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003CC9A <AmiBlitz3.ab3@28721>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003CC9E <AmiBlitz3.ab3@28726>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CCA0 <AmiBlitz3.ab3@28727>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CCA2 <AmiBlitz3.ab3@28728>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003CCA6 <AmiBlitz3.ab3@28729>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003CCA8 <AmiBlitz3.ab3@28730>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003CCAC <AmiBlitz3.ab3@28735>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CCAE <AmiBlitz3.ab3@28736>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003CCB2 <AmiBlitz3.ab3@28737>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003CCB4 <AmiBlitz3.ab3@28738>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003CCB8 <AmiBlitz3.ab3@28739>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003CCBA <AmiBlitz3.ab3@28740>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CCBC <AmiBlitz3.ab3@28743>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003CCC0 <AmiBlitz3.ab3@28748>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CCC2 <AmiBlitz3.ab3@28749>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003CCC6 <AmiBlitz3.ab3@28750>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003CCC8 <AmiBlitz3.ab3@28751>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003CCCC <AmiBlitz3.ab3@28752>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003CCCE <AmiBlitz3.ab3@28753>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CCD0 <AmiBlitz3.ab3@28756>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003CCD4 <AmiBlitz3.ab3@28761>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CCD6 <AmiBlitz3.ab3@28762>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CCDA <AmiBlitz3.ab3@28763>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003CCDC <AmiBlitz3.ab3@28764>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003CCE0 <AmiBlitz3.ab3@28765>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003CCE2 <AmiBlitz3.ab3@28766>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CCE4 <AmiBlitz3.ab3@28769>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003CCE8 <AmiBlitz3.ab3@28774>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CCEA <AmiBlitz3.ab3@28775>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CCEE <AmiBlitz3.ab3@28776>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003CCF4 <AmiBlitz3.ab3@28777>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003CCF8 <AmiBlitz3.ab3@28778>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003CCFA <AmiBlitz3.ab3@28779>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CCFE <AmiBlitz3.ab3@28786>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003CD00 <AmiBlitz3.ab3@28790> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003CD02 <AmiBlitz3.ab3@28793> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003CD06 <AmiBlitz3.ab3@28796> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003CD08 <AmiBlitz3.ab3@28797> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003CD0C <AmiBlitz3.ab3@28800> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003CD0E <AmiBlitz3.ab3@28803> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CD12 <AmiBlitz3.ab3@28806> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003CD14 <AmiBlitz3.ab3@28810>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003CD16 <AmiBlitz3.ab3@28813> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003CD18 <AmiBlitz3.ab3@28816> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CD1C <AmiBlitz3.ab3@28819> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003CD20 <AmiBlitz3.ab3@28822> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003CD24 <AmiBlitz3.ab3@28825> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003CD26 <AmiBlitz3.ab3@28828> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CD28 <AmiBlitz3.ab3@28831> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003CD2C <AmiBlitz3.ab3@28834> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003CD32 <AmiBlitz3.ab3@28835>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003CD34 <AmiBlitz3.ab3@28836>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CD38 <AmiBlitz3.ab3@28840> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003CD3A <AmiBlitz3.ab3@28841>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CD3C <AmiBlitz3.ab3@28845> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003CD40 <AmiBlitz3.ab3@28848> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003CD42 <AmiBlitz3.ab3@28852>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003CD44 <AmiBlitz3.ab3@28856>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CD46 <AmiBlitz3.ab3@28860>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003CD4A <AmiBlitz3.ab3@28863> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003CD4E <AmiBlitz3.ab3@28866> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003CD50 <AmiBlitz3.ab3@28869> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003CD52 <AmiBlitz3.ab3@28872> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CD54 <AmiBlitz3.ab3@28875> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003CD58 <AmiBlitz3.ab3@28878> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003CD5C <AmiBlitz3.ab3@28881> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003CD5E <AmiBlitz3.ab3@28884> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003CD60 <AmiBlitz3.ab3@28888>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003CD64 <AmiBlitz3.ab3@28891>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003CD66 <AmiBlitz3.ab3@28897>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003CD6A <AmiBlitz3.ab3@28900>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003CD6C <AmiBlitz3.ab3@28906>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003CD70 <AmiBlitz3.ab3@28910> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003CD72 <AmiBlitz3.ab3@28913> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003CD74 <AmiBlitz3.ab3@28917>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003CD76 <AmiBlitz3.ab3@28921>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003CD7C <AmiBlitz3.ab3@28924> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003CD82 <AmiBlitz3.ab3@28927> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003CD8A <AmiBlitz3.ab3@28931> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003CD8E <AmiBlitz3.ab3@28932>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003CD90 <AmiBlitz3.ab3@28936> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003CD94 <AmiBlitz3.ab3@28939> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003CD98 <AmiBlitz3.ab3@28942> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003CD9C <AmiBlitz3.ab3@28945> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003CDA0 <AmiBlitz3.ab3@28946> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003CDA4 <AmiBlitz3.ab3@28950>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003CDA8 <AmiBlitz3.ab3@28952>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003CDAA <AmiBlitz3.ab3@28955> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CDAE <AmiBlitz3.ab3@28958> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003CDB0 <AmiBlitz3.ab3@28961> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003CDB2 <AmiBlitz3.ab3@28962>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CDB4 <AmiBlitz3.ab3@28963>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003CDB8 <AmiBlitz3.ab3@28964> 
0003CDBA <AmiBlitz3.ab3@28965>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003CDBC <AmiBlitz3.ab3@28966>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003CDBE <AmiBlitz3.ab3@28967>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003CDC4 <AmiBlitz3.ab3@28969>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003CDC6 <AmiBlitz3.ab3@28974> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003CDC8 <AmiBlitz3.ab3@28975>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003CDCA <AmiBlitz3.ab3@28979> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003CDCE <AmiBlitz3.ab3@28982> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003CDD0 <AmiBlitz3.ab3@28985> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003CDD2 <AmiBlitz3.ab3@28989>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003CDD4 <AmiBlitz3.ab3@28992> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003CDD8 <AmiBlitz3.ab3@28995> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CDDA <AmiBlitz3.ab3@28996>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CDDE <AmiBlitz3.ab3@29000> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003CDE2 <AmiBlitz3.ab3@29001> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003CDE6 <AmiBlitz3.ab3@29005> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003CDEA <AmiBlitz3.ab3@29009> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003CDF0 <AmiBlitz3.ab3@29013> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003CDF6 <AmiBlitz3.ab3@29016> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003CDFA <AmiBlitz3.ab3@29020> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003CDFE <AmiBlitz3.ab3@29024>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003CE02 <AmiBlitz3.ab3@29025>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003CE08 <AmiBlitz3.ab3@29030>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003CE0C <AmiBlitz3.ab3@29035>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003CE0E <AmiBlitz3.ab3@29040>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003CE12 <AmiBlitz3.ab3@29044>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003CE14 <AmiBlitz3.ab3@29048> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003CE16 <AmiBlitz3.ab3@29051> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003CE18 <AmiBlitz3.ab3@29052>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003CE1C <AmiBlitz3.ab3@29056>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003CE20 <AmiBlitz3.ab3@29060> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003CE24 <AmiBlitz3.ab3@29063> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003CE26 <AmiBlitz3.ab3@29066> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003CE2A <AmiBlitz3.ab3@29069> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003CE2C <AmiBlitz3.ab3@29072> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003CE35 <AmiBlitz3.ab3@29076>                            Dc.b "ram:test",0
0003CE36 <AmiBlitz3.ab3@29077> Even
0003CE3A <AmiBlitz3.ab3@29081>                            Dc.l  0                          ;was  Ds.w 3 org source
0003CE3C <AmiBlitz3.ab3@29083>                            Dc.w  0
0003CE40 <AmiBlitz3.ab3@29086> _mathffpbase:              Ds.l 1                           ;maths org source
0003CE42 <AmiBlitz3.ab3@29087> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003CE44 <AmiBlitz3.ab3@29088> typelen:                   Ds.w 1
0003CE48 <AmiBlitz3.ab3@29089> prevtype:                  Ds.l 1
0003CE4C <AmiBlitz3.ab3@29090> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003CE4E <AmiBlitz3.ab3@29091> lastchar:                  Ds.w 1
0003CE52 <AmiBlitz3.ab3@29092> thistype:                  Ds.l 1
0003CE56 <AmiBlitz3.ab3@29093> errstack:                  Ds.l 1
0003CE5A <AmiBlitz3.ab3@29094> errcont:                   Ds.l 1
0003CE5C <AmiBlitz3.ab3@29095> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003CE5E <AmiBlitz3.ab3@29096> linesleft:                 Ds.w 1
0003CE62 <AmiBlitz3.ab3@29097> sourceline:                Ds.l 1                          ;thisitem org source
0003CE66 <AmiBlitz3.ab3@29098> varbase:                   Ds.l 1                          ;firstvar org source
0003CE6A <AmiBlitz3.ab3@29099> alllocals:                 Ds.l 1
0003CE6E <AmiBlitz3.ab3@29100> firstlocal:                Ds.l 1
0003CE72 <AmiBlitz3.ab3@29101> firstglob:                 Ds.l 1
0003CE74 <AmiBlitz3.ab3@29102> globalvarpointer:          Ds.w 1                          ;varoff org source
0003CE76 <AmiBlitz3.ab3@29103> locvaroff:                 Ds.w 1
0003CE7A <AmiBlitz3.ab3@29104> firstitem_:                 Ds.l 1
0003CE7C <AmiBlitz3.ab3@29105> numlines_org:              Ds.w 1                          ;numlines org source
0003CE7E <AmiBlitz3.ab3@29106> returncode_org:            Ds.w 1                          ;returncode org source
0003CE82 <AmiBlitz3.ab3@29107> firstiff:                  Ds.l 1                          ;firstif org source
0003CE86 <AmiBlitz3.ab3@29108> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003D086 <AmiBlitz3.ab3@29109> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003D096 <AmiBlitz3.ab3@29110> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003D296 <AmiBlitz3.ab3@29111> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003D496 <AmiBlitz3.ab3@29112> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003D696 <AmiBlitz3.ab3@29113> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003D69A <AmiBlitz3.ab3@29115> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003D89A <AmiBlitz3.ab3@29116> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003DA9A <AmiBlitz3.ab3@29118> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003DA9E <AmiBlitz3.ab3@29119> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003DC9E <AmiBlitz3.ab3@29120> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003DCA2 <AmiBlitz3.ab3@29121> size_deflibs:              Ds.l 1                          ;deflibs org source
0003DEA2 <AmiBlitz3.ab3@29122> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003E0A2 <AmiBlitz3.ab3@29124> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003E0A6 <AmiBlitz3.ab3@29125> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003E2A6 <AmiBlitz3.ab3@29127> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E2AA <AmiBlitz3.ab3@29133>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003E2AE <AmiBlitz3.ab3@29134>   Dc.b $00,$00,$00,$00
0003E2B2 <AmiBlitz3.ab3@29135>   Dc.b $00,$19,$00,$11
0003E2B6 <AmiBlitz3.ab3@29136>   Dc.b $00,$2E,$00,$18
0003E2BA <AmiBlitz3.ab3@29137>   Dc.b $00,$04,$00,$03
0003E2BE <AmiBlitz3.ab3@29138>   Dc.b $00,$01,$00,$22
0003E2C2 <AmiBlitz3.ab3@29139>   Dc.b $73,$68,$00,$00
0003E2C6 <AmiBlitz3.ab3@29140>   Dc.b $00,$00,$00,$00
0003E2CA <AmiBlitz3.ab3@29141>   Dc.b $00,$00,$00,$00
0003E2CE <AmiBlitz3.ab3@29142>   Dc.b $00,$00,$00,$00
0003E2D2 <AmiBlitz3.ab3@29143>   Dc.b $00,$00,$00,$00
0003E2D6 <AmiBlitz3.ab3@29144>   Dc.b $00,$00,$00,$00
0003E2DA <AmiBlitz3.ab3@29145>   Dc.b $03,$22,$00,$21
0003E2DE <AmiBlitz3.ab3@29146>   Dc.b $3C,$28,$00,$22
0003E2E2 <AmiBlitz3.ab3@29147>   Dc.b $6E,$C0,$00,$00
0003E2E6 <AmiBlitz3.ab3@29148>   Dc.b $00,$12,$00,$00
0003E2EA <AmiBlitz3.ab3@29149>   Dc.b $00,$0E,$00,$00
0003E2EE <AmiBlitz3.ab3@29150>   Dc.b $00,$00,$00,$00
0003E2F2 <AmiBlitz3.ab3@29151>   Dc.b $00,$00,$00,$00
0003E2F6 <AmiBlitz3.ab3@29152>   Dc.b $00,$00,$00,$00
0003E2FA <AmiBlitz3.ab3@29153>   Dc.b $00,$00,$00,$2E
0003E2FE <AmiBlitz3.ab3@29154>   Dc.b $00,$17,$00,$02
0003E302 <AmiBlitz3.ab3@29155>   Dc.b $00,$01,$8E,$80
0003E306 <AmiBlitz3.ab3@29156>   Dc.b $03,$00,$00,$00
0003E30A <AmiBlitz3.ab3@29157>   Dc.b $00,$00,$FF,$FF
0003E30E <AmiBlitz3.ab3@29158>   Dc.b $FF,$FF,$FF,$FC
0003E312 <AmiBlitz3.ab3@29159>   Dc.b $80,$00,$00,$00
0003E316 <AmiBlitz3.ab3@29160>   Dc.b $00,$00,$80,$00
0003E31A <AmiBlitz3.ab3@29161>   Dc.b $00,$3F,$BB,$40
0003E31E <AmiBlitz3.ab3@29162>   Dc.b $80,$1F,$C0,$00
0003E322 <AmiBlitz3.ab3@29163>   Dc.b $00,$00,$80,$3F
0003E326 <AmiBlitz3.ab3@29164>   Dc.b $C0,$0F,$BB,$40
0003E32A <AmiBlitz3.ab3@29165>   Dc.b $80,$1F,$C0,$00
0003E32E <AmiBlitz3.ab3@29166>   Dc.b $00,$00,$8E,$00
0003E332 <AmiBlitz3.ab3@29167>   Dc.b $F8,$00,$00,$00
0003E336 <AmiBlitz3.ab3@29168>   Dc.b $8F,$01,$FF,$00
0003E33A <AmiBlitz3.ab3@29169>   Dc.b $3B,$40,$81,$E3
0003E33E <AmiBlitz3.ab3@29170>   Dc.b $F7,$C0,$00,$00
0003E342 <AmiBlitz3.ab3@29171>   Dc.b $80,$7F,$F8,$70
0003E346 <AmiBlitz3.ab3@29172>   Dc.b $3B,$40,$80,$0F
0003E34A <AmiBlitz3.ab3@29173>   Dc.b $7C,$E0,$00,$00
0003E34E <AmiBlitz3.ab3@29174>   Dc.b $80,$00,$FD,$80
0003E352 <AmiBlitz3.ab3@29175>   Dc.b $00,$00,$80,$01
0003E356 <AmiBlitz3.ab3@29176>   Dc.b $F6,$00,$FB,$40
0003E35A <AmiBlitz3.ab3@29177>   Dc.b $80,$03,$EF,$00
0003E35E <AmiBlitz3.ab3@29178>   Dc.b $00,$00,$80,$07
0003E362 <AmiBlitz3.ab3@29179>   Dc.b $87,$80,$3B,$40
0003E366 <AmiBlitz3.ab3@29180>   Dc.b $80,$0F,$01,$C0
0003E36A <AmiBlitz3.ab3@29181>   Dc.b $00,$00,$80,$03
0003E36E <AmiBlitz3.ab3@29182>   Dc.b $F0,$70,$1D,$40
0003E372 <AmiBlitz3.ab3@29183>   Dc.b $80,$00,$18,$1C
0003E376 <AmiBlitz3.ab3@29184>   Dc.b $00,$00,$80,$00
0003E37A <AmiBlitz3.ab3@29185>   Dc.b $10,$06,$03,$40
0003E37E <AmiBlitz3.ab3@29186>   Dc.b $80,$00,$20,$1F
0003E382 <AmiBlitz3.ab3@29187>   Dc.b $00,$00,$80,$00
0003E386 <AmiBlitz3.ab3@29188>   Dc.b $00,$00,$01,$40
0003E38A <AmiBlitz3.ab3@29189>   Dc.b $80,$00,$00,$00
0003E38E <AmiBlitz3.ab3@29190>   Dc.b $00,$00,$80,$00
0003E392 <AmiBlitz3.ab3@29191>   Dc.b $00,$00,$00,$00
0003E396 <AmiBlitz3.ab3@29192>   Dc.b $00,$00,$00,$00
0003E39A <AmiBlitz3.ab3@29193>   Dc.b $00,$00,$00,$00
0003E39E <AmiBlitz3.ab3@29194>   Dc.b $00,$00,$00,$04
0003E3A2 <AmiBlitz3.ab3@29195>   Dc.b $00,$3F,$FC,$01
0003E3A6 <AmiBlitz3.ab3@29196>   Dc.b $BB,$44,$00,$60
0003E3AA <AmiBlitz3.ab3@29197>   Dc.b $FE,$00,$00,$04
0003E3AE <AmiBlitz3.ab3@29198>   Dc.b $00,$CF,$FF,$01
0003E3B2 <AmiBlitz3.ab3@29199>   Dc.b $BB,$44,$1F,$EF
0003E3B6 <AmiBlitz3.ab3@29200>   Dc.b $FF,$00,$00,$04
0003E3BA <AmiBlitz3.ab3@29201>   Dc.b $33,$FF,$FF,$E0
0003E3BE <AmiBlitz3.ab3@29202>   Dc.b $00,$04,$37,$FE
0003E3C2 <AmiBlitz3.ab3@29203>   Dc.b $7F,$FC,$1B,$44
0003E3C6 <AmiBlitz3.ab3@29204>   Dc.b $0F,$9C,$FF,$FF
0003E3CA <AmiBlitz3.ab3@29205>   Dc.b $00,$04,$03,$E3
0003E3CE <AmiBlitz3.ab3@29206>   Dc.b $FF,$FF,$DB,$44
0003E3D2 <AmiBlitz3.ab3@29207>   Dc.b $00,$7F,$BF,$FF
0003E3D6 <AmiBlitz3.ab3@29208>   Dc.b $80,$04,$00,$0F
0003E3DA <AmiBlitz3.ab3@29209>   Dc.b $3F,$FE,$00,$04
0003E3DE <AmiBlitz3.ab3@29210>   Dc.b $00,$06,$7F,$F8
0003E3E2 <AmiBlitz3.ab3@29211>   Dc.b $1B,$44,$00,$0C
0003E3E6 <AmiBlitz3.ab3@29212>   Dc.b $F7,$FC,$00,$04
0003E3EA <AmiBlitz3.ab3@29213>   Dc.b $00,$19,$F9,$FE
0003E3EE <AmiBlitz3.ab3@29214>   Dc.b $1B,$44,$00,$33
0003E3F2 <AmiBlitz3.ab3@29215>   Dc.b $FE,$7F,$00,$04
0003E3F6 <AmiBlitz3.ab3@29216>   Dc.b $00,$0F,$FF,$BF
0003E3FA <AmiBlitz3.ab3@29217>   Dc.b $CD,$44,$00,$03
0003E3FE <AmiBlitz3.ab3@29218>   Dc.b $EF,$EF,$F0,$04
0003E402 <AmiBlitz3.ab3@29219>   Dc.b $00,$00,$7F,$DF
0003E406 <AmiBlitz3.ab3@29220>   Dc.b $FB,$44,$00,$00
0003E40A <AmiBlitz3.ab3@29221>   Dc.b $FF,$A7,$FC,$04
0003E40E <AmiBlitz3.ab3@29222>   Dc.b $00,$00,$7E,$3F
0003E412 <AmiBlitz3.ab3@29223>   Dc.b $FD,$44,$00,$00
0003E416 <AmiBlitz3.ab3@29224>   Dc.b $00,$00,$00,$04
0003E41A <AmiBlitz3.ab3@29225>   Dc.b $7F,$FF,$FF,$FF
0003E41E <AmiBlitz3.ab3@29226>   Dc.b $FF,$FC,$00,$00
0003E422 <AmiBlitz3.ab3@29227>   Dc.b $00,$01,$00,$00
0003E425 <AmiBlitz3.ab3@29228>   Dc.b $00,$00,$04
0003E42B <AmiBlitz3.ab3@29231> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003E483 <AmiBlitz3.ab3@29232> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003E484 <AmiBlitz3.ab3@29233> Even
0003E488 <AmiBlitz3.ab3@29235> sysdebug:            Dc.l $3F0
0003E48C <AmiBlitz3.ab3@29239> exelock              Ds.l 1
0003E490 <AmiBlitz3.ab3@29243> includesourceline    Dc.l 0
0003E494 <AmiBlitz3.ab3@29244> linenum              Ds.l 1
0003E498 <AmiBlitz3.ab3@29245> globallinecount      Ds.l 1
0003E4B6 <AmiBlitz3.ab3@29246> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003E4BA <AmiBlitz3.ab3@29247> calc_option          Dc.l 1
0003E4BE <AmiBlitz3.ab3@29248> versioninformation   Dc.l $00
0003E4C2 <AmiBlitz3.ab3@29249> number_of_builds     Dc.l $00
0003E4C4 <AmiBlitz3.ab3@29252> BSS
0003E4C6 <AmiBlitz3.ab3@29253> debugnest            Ds.w 1
0003E4CA <AmiBlitz3.ab3@29254> instringf            Ds.l 1
0003E4CE <AmiBlitz3.ab3@29255> funcscanon           Ds.l 1
0003E4E2 <AmiBlitz3.ab3@29256> storedebugmode       Ds.b 20
0003E4E6 <AmiBlitz3.ab3@29257> firsttimepref        Ds.l 1
0003E4E7 <AmiBlitz3.ab3@29258> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003E4E8 <AmiBlitz3.ab3@29259> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003E4EA <AmiBlitz3.ab3@29260> nostringopt          Ds.w 1
0003E56A <AmiBlitz3.ab3@29261> path2:               Ds.l 32
0003E56E <AmiBlitz3.ab3@29262> typebase             Dc.l 0
0003E570 <AmiBlitz3.ab3@29263> doublepeek           Dc.w 0
0003E574 <AmiBlitz3.ab3@29264> lastoffset           Dc.l 0
0003E576 <AmiBlitz3.ab3@29265> firsttime            Dc.w 0
0003E57A <AmiBlitz3.ab3@29266> lastdestpointer      Dc.l 0
0003E57E <AmiBlitz3.ab3@29267> prevwritedat         Dc.l 0
0003E582 <AmiBlitz3.ab3@29268> lastsourceline       Dc.l 0
0003E586 <AmiBlitz3.ab3@29269> lastwritedat         Dc.l 0
0003E588 <AmiBlitz3.ab3@29270> makeexec             Dc.w 0
0003E58A <AmiBlitz3.ab3@29271> makeexec_remember    Dc.w 0
0003E58E <AmiBlitz3.ab3@29272> sharebase            Ds.l 1
0003E592 <AmiBlitz3.ab3@29273> tempa7               Ds.l 1
0003E594 <AmiBlitz3.ab3@29274> incnif               Ds.w 1
0003E598 <AmiBlitz3.ab3@29275> tempstore            Ds.l 1
0003E59C <AmiBlitz3.ab3@29276> result               Ds.l 1
0003E59E <AmiBlitz3.ab3@29277> automode             Ds.w 1
0003E5A0 <AmiBlitz3.ab3@29278> stackcorrect         Ds.w 1
0003E5A2 <AmiBlitz3.ab3@29279> formode              Ds.w 1
0003E5A6 <AmiBlitz3.ab3@29280> limitregs            Ds.l 1
0003E5A8 <AmiBlitz3.ab3@29281> onestep              Ds.w 1
0003E5AC <AmiBlitz3.ab3@29282> reqmode              Ds.l 1
0003E64C <AmiBlitz3.ab3@29283> inctab               Ds.l 40
0003E64E <AmiBlitz3.ab3@29284> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003E652 <AmiBlitz3.ab3@29285> includeline          Ds.l 1
0003E656 <AmiBlitz3.ab3@29286> morememadd           Ds.l 1
0003E658 <AmiBlitz3.ab3@29287> objectcount          Ds.w 1
0003E65C <AmiBlitz3.ab3@29288> savefuncspace        Ds.l 1
0003E660 <AmiBlitz3.ab3@29289> lasttrap1            Ds.l 1
0003E664 <AmiBlitz3.ab3@29290> currentfunccall      Ds.l 1
0003E665 <AmiBlitz3.ab3@29291> skipfunc             Ds.b 1
0003E666 <AmiBlitz3.ab3@29292> resdisable           Ds.b 1
0003E667 <AmiBlitz3.ab3@29293> skiptoggle           Ds.b 1
0003E668 <AmiBlitz3.ab3@29294> developobject        Ds.b 1
0003E66A <AmiBlitz3.ab3@29295> iniffcommand         Ds.w 1
0003E66C <AmiBlitz3.ab3@29296> startoffsetmore      Ds.w 1
0003E66E <AmiBlitz3.ab3@29297> olddebugmode         Ds.w 1
0003E672 <AmiBlitz3.ab3@29298> fpucodeglobal        Ds.l 1
0003E676 <AmiBlitz3.ab3@29299> fpucodelocal         Ds.l 1
0003E67A <AmiBlitz3.ab3@29300> maxregs              Ds.l 1
0003E67E <AmiBlitz3.ab3@29301> fpucode              Ds.l 1
0003E680 <AmiBlitz3.ab3@29302> firstmline           Ds.w 1
0003E6C0 <AmiBlitz3.ab3@29303> regtable             Ds.l 16
0003E6C2 <AmiBlitz3.ab3@29304> exdebug              Ds.w 1
0003E6C4 <AmiBlitz3.ab3@29305> a2offset2            Ds.w 1
0003E6C8 <AmiBlitz3.ab3@29306> parnumtemp           Ds.l 1
0003E6C9 <AmiBlitz3.ab3@29307> doimmediate          Ds.b 1
0003E6CA <AmiBlitz3.ab3@29308> notypecheck          Ds.b 1
0003E6CC <AmiBlitz3.ab3@29309> vartype              Ds.w 1
0003E6CD <AmiBlitz3.ab3@29310> peekaddrsize         Ds.b 1
0003E6CE <AmiBlitz3.ab3@29311> declare2             Ds.b 1
0003E6D0 <AmiBlitz3.ab3@29312> parameternum         Ds.w 1
0003E6D4 <AmiBlitz3.ab3@29313> lasttoken            Ds.l 1
0003E6D6 <AmiBlitz3.ab3@29314> newvariable          Ds.w 1
0003E6D7 <AmiBlitz3.ab3@29315> declare              Ds.b 1
0003E6D8 <AmiBlitz3.ab3@29316> typecheck            Ds.b 1
0003E6D9 <AmiBlitz3.ab3@29317> nowdeclare           Ds.b 1
0003E6DA <AmiBlitz3.ab3@29318> dimkeep              Ds.b 1
0003E6DB <AmiBlitz3.ab3@29319> a4a5store            Ds.b 1
0003E6DC <AmiBlitz3.ab3@29320> ___freetouse         Ds.b 1
0003E6E0 <AmiBlitz3.ab3@29321> firstiffstore        Ds.l 1
0003E6E4 <AmiBlitz3.ab3@29322> destpointer2         Ds.l 1
0003E6E8 <AmiBlitz3.ab3@29323> stackaddr            Ds.l 1
0003E7EC <AmiBlitz3.ab3@29324> allowtab             Ds.b 260
0003E8EC <AmiBlitz3.ab3@29325> templine             Ds.b 256
0003E8EE <AmiBlitz3.ab3@29326> thenmode             Ds.w 1
0003E8F0 <AmiBlitz3.ab3@29327> temp                 Ds.w 1
0003E8F2 <AmiBlitz3.ab3@29328> tempregnum           Ds.w 1
0003E8F6 <AmiBlitz3.ab3@29330> numlines2            Ds.l 1
0003E8FA <AmiBlitz3.ab3@29331> numlines             Ds.l 1
0003E8FC <AmiBlitz3.ab3@29332> exmac                Ds.w 1
0003E8FE <AmiBlitz3.ab3@29333> returncode           Ds.w 1
0003E902 <AmiBlitz3.ab3@29334> fp0iff               Ds.l 1
0003E906 <AmiBlitz3.ab3@29335> fp0addr              Ds.l 1
0003E908 <AmiBlitz3.ab3@29336> fp0mode              Ds.w 1
0003E90A <AmiBlitz3.ab3@29337> fp0var               Ds.w 1
0003E90C <AmiBlitz3.ab3@29338> fastfunc             Ds.w 1
0003E90E <AmiBlitz3.ab3@29339> retmode              Ds.w 1
0003E910 <AmiBlitz3.ab3@29340> parnum               Ds.w 1
0003E912 <AmiBlitz3.ab3@29341> regmask              Ds.w 1
0003E914 <AmiBlitz3.ab3@29342> regnumfunc           Ds.w 1
0003E916 <AmiBlitz3.ab3@29343> libmode              Ds.w 1
0003E91A <AmiBlitz3.ab3@29344> oldline              Ds.l 1
0003E91E <AmiBlitz3.ab3@29345> sourceline3          Ds.l 1
0003E9E6 <AmiBlitz3.ab3@29346> debugstore           Ds.b 200
0003E9EA <AmiBlitz3.ab3@29347> deststore            Ds.l 1
0003E9EE <AmiBlitz3.ab3@29349> loada                Ds.l 1
0003E9F2 <AmiBlitz3.ab3@29351> currtype             Ds.l 1
0003E9F6 <AmiBlitz3.ab3@29352> arrayoffset          Ds.l 1
0003E9FA <AmiBlitz3.ab3@29353> lastlabel            Ds.l 1
0003E9FE <AmiBlitz3.ab3@29354> curtemplabel         Ds.l 1
0003EA02 <AmiBlitz3.ab3@29355> sourceline2          Ds.l 1
0003EB02 <AmiBlitz3.ab3@29356> chartab              Ds.b 256
0003EB7A <AmiBlitz3.ab3@29357> tempspace            Ds.b 120
000BEB8A <AmiBlitz3.ab3@29358> instrtab             Ds.l 65538*2
000C6B8A <AmiBlitz3.ab3@29360> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E6B8E <AmiBlitz3.ab3@29361> replacedat           Ds.w 65538
000EEB8E <AmiBlitz3.ab3@29362> variablehash         Ds.l 8192
000EEB92 <AmiBlitz3.ab3@29363> newinitaddr          Ds.l 1
000EEB96 <AmiBlitz3.ab3@29364> realbssend           Ds.l 1
000EEB98 <AmiBlitz3.ab3@29365> saved0               Ds.w 1
000EEC18 <AmiBlitz3.ab3@29366> lastpath             Ds.b 128
000EEC98 <AmiBlitz3.ab3@29367> lastpath2            Ds.b 128
000EED60 <AmiBlitz3.ab3@29368> fpustackbase         Ds.w 100
000EED64 <AmiBlitz3.ab3@29369> 
000EED66 <AmiBlitz3.ab3@29370> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EED6A <AmiBlitz3.ab3@29371> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EED6E <AmiBlitz3.ab3@29372> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EED72 <AmiBlitz3.ab3@29373> rightsidetype        Dc.l 0  ; same as above but right side
000EED76 <AmiBlitz3.ab3@29376> trap15temp           Ds.l 1
000EED7A <AmiBlitz3.ab3@29377> trap15temp2          Ds.l 1
000EED7E <AmiBlitz3.ab3@29378> templibend           Ds.l 1
000EED82 <AmiBlitz3.ab3@29379> tempdata1start       Ds.l 1
000EED86 <AmiBlitz3.ab3@29380> stacktrack           Ds.l 1
000EED8A <AmiBlitz3.ab3@29381> pad                  Ds.l 1
000EEE8A <AmiBlitz3.ab3@29382> includetemp          Ds.b 256
000EF88A <AmiBlitz3.ab3@29383> includetemp2         Ds.b 256*10
000EF88C <AmiBlitz3.ab3@29384> funccall             Ds.w 1
000EF890 <AmiBlitz3.ab3@29387> ptr_resfile          Ds.l 1
000EF892 <AmiBlitz3.ab3@29388> CalculatorButtonBinFlag:    Ds.w 1
000EF894 <AmiBlitz3.ab3@29389> CalculatorButtonDecFlag:    Ds.w 1
000EF898 <AmiBlitz3.ab3@29390> ped_startup_addr:    Ds.l 1
000EF899 <AmiBlitz3.ab3@29391> start_without_libs:  Ds.b 1
000EF89A <AmiBlitz3.ab3@29392> skip_bytes:          Ds.b 1
000EF89E <AmiBlitz3.ab3@29393> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EF8A2 <AmiBlitz3.ab3@29394> beforeparameterfetch Ds.l 1
000EF8A6 <AmiBlitz3.ab3@29395> typetocast           Ds.l 1
000EF8AA <AmiBlitz3.ab3@29396> errorcounter         Ds.l 1
000EF8AB <AmiBlitz3.ab3@29397> iserror              Ds.b 1
000EF8AC <AmiBlitz3.ab3@29398> Even
000EF8B0 <AmiBlitz3.ab3@29400> CLIMode:             Dc.l 0
000EF8B4 <AmiBlitz3.ab3@29401> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
