00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000021C6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000021D0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
000021F8 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
000021FE <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002226 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002250 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000226E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
00002298 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002308 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002332 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002350 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000237A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
0000239A <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000023C6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000023D0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
000023EA <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002414 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000024C2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000024D8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
000024E2 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002514 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000251A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002520 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002526 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002538 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002542 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000255C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
0000259A <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000025A2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002650 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002664 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000026A6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000026C6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000026D0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
000026EC <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002726 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000272E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000027DC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002812 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002832 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002850 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002874 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000287E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
0000289A <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000028D4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002982 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
000029DA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
000029E0 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002A00 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002A0A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002A24 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002A3C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002A46 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002A62 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002A8C <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002A9A <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002B60 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002B8A <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002BB2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002BDC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002C06 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002C24 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002C4E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002CBA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002CE2 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002CF0 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002D24 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002D32 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002D54 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002D62 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002D86 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002DB0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002DF8 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002E22 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002E7A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002EA4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002EC2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002ED8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002EDE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00002EE8 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00002EF2 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00002F10 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00002F16 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
00002F1C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
00002F2C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00002F32 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
00002F3A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00002F62 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
00002F6C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00002F76 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
00002F8A <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
00002FA0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
00002FA6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
00002FCA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
00002FEE <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003018 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003044 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003046 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003074 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
0000309E <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003122 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
000031EA <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
000031F4 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000323E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
0000328A <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000032C2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000032D4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
000032EA <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
000032F0 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003306 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000333A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003340 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000334A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003364 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000033AE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
000033E4 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003408 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003412 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000343A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
00003482 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003558 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
00003582 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000035DC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
000035E2 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
000035E8 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
000035F0 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003626 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003634 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000363E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000366A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
00003682 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000036B0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000372E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
00003780 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
00003792 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003800 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003806 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003852 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003A00 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003A6C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003A72 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003A8E <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003A9C <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003AA2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003AB4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003ACA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003AD4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003AF0 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003B1A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003B2E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003B6C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003C52 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003C58 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003CA8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003CD2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003CF0 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003D1A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003D2E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003D6C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003E52 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003E58 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003ECA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00003EF4 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00003F12 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
00003F4C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
00003F84 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00003FDC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004040 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000406A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
0000408A <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000040B4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000040BA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000040D0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000040DA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
000040E0 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
000040F0 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
000040FA <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004114 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004142 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004164 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000416C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000417A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
00004194 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000041C2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000041D6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000420A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004224 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000422C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000423A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004254 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000427E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
0000428A <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000042AA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000042D0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
000042FC <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004314 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004322 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004328 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004334 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000433A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004346 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004356 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000435C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004368 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004372 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
0000438C <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
0000438C <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
0000439A <AmiBlitz3.ab3@81> If dos_FromCLI{}
000043A0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000043AC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000043AC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000043D4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000043DA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000043DC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000456C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004570 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004574 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004578 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000457C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
00004580 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
00004584 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
00004588 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
0000458C <common.ab3@273> XINCLUDE "/Shared/common.ab3"
00004590 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
00004594 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
00004598 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
0000459C <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000045A0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000045A4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000045A8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000045AC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000045B0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000045B4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000045B8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000045BC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000045C0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000045C4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000045C8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000045D0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000045D4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000045D6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000045DA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000045DC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000045E0 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
000045E4 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
000045E8 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
000045EC <common.ab3@301> XINCLUDE "/Shared/common.ab3"
000045F0 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
000045F8 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004600 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004604 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004608 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000460C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000460E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004716 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000472A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000472D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004734 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004736 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000473E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004740 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004742 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004744 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004748 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000474A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000474C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004750 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004752 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004754 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004756 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004758 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000475A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000475E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004760 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004762 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004764 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004766 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000476A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000476C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000476E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004770 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004774 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000477C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000477E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
00004780 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00004782 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
00004784 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00004786 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
0000478A <common.ab3@393> XINCLUDE "/Shared/common.ab3"
0000478C <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000047BA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000047C4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000047C8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000047CA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000047CC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000047D0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000047D4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000047DD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000047E0 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000480D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004859 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000048A9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000048B5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004905 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A01 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004A03 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004AC3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004B03 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004B05 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004B06 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004B0A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004B0E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004B12 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004B16 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004B1A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004B1E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004B22 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004B26 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004B2A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004B2E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004B32 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004B36 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004B3A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004B3E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004B42 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004B46 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004B4A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004B4E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004B58 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004B5C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004B60 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004B62 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004B64 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004B82 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004B86 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004B88 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004B8C <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004BC0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004BC4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004BD2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004BE4 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004BE6 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004BFA <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C3C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004C54 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004C72 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004C7E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004C96 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004C9C <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004C9E <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004CA4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004CAA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004CB0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004CB4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004CB6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004CBA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004CBC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004CC0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004CC6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004CC8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004CCC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004CCE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004CD2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004CD4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004CDA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004CDE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004CE6 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004CEA <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D00 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004D14 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004D28 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004D47 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004D48 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004D49 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004D4C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004D50 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004D54 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004D58 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004D60 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004D64 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004D65 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004D66 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004D68 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004D6C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004D70 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004D78 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004D7C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004D80 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004D84 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004D88 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004D8C <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004D90 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004D94 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004D98 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004D9C <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004DA0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004DA2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004DA3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004DA7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004DAB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004DAF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004DB3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004DB4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004DC0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004DC9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004DD2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004DDE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004DEA <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004DF6 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004E02 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004E0E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004E12 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004E16 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004E1A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004E1E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004E22 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004E26 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004E26 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004E26 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E26 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E44 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E4C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E7A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EAA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EBA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EC4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ECA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EEC <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F1C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F44 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F4A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F7C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8E <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9C <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FD0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE8 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FFA <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005034 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005044 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000504A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000505A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005078 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005088 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050D4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000050E2 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005126 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005134 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005144 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000514C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005150 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005184 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519E <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051BE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E8 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005232 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005268 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005276 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052AA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F6 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005314 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005328 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005340 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005368 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00005380 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000538E <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
0000539C <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000053AA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005412 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005480 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
000054E4 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000553C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005582 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005588 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00005590 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005616 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005626 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000563C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005642 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005648 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005660 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569E <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000056BC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EE <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005702 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005716 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005756 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005760 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000576E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005786 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000578C <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00005794 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
000057E4 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000057F2 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000057FC <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005828 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005850 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00005886 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FC <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005916 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005928 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005932 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
0000594E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005978 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005996 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
000059BA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A02 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A64 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A72 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A86 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B28 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B2E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B62 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BBE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BCE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE0 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C14 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C44 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C7A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C8E <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CA6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CFE <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D28 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D3C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D90 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DBA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DFE <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E24 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E66 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E84 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E8A <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F06 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F80 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006028 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006038 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608A <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000060B2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000060D8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000060FA <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006122 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006178 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006180 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000061A4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F4 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061FE <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006232 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000624E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000626A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006288 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006322 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000639A <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
000063F6 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000063FC <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006406 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000640C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000643A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006440 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006460 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000647C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
0000648C <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00006496 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000064B0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000064CA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000064D8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000064E2 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EA <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006568 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658E <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006628 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006652 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000665C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006680 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000066B8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000066CA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000066DE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E8 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006710 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006738 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000674A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000067AA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006822 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006832 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006838 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006844 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006872 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006874 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
00006884 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068AE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000068BE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000068E8 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006910 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000691A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000695C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006990 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E4 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E8 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A02 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A26 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A40 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A74 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A8E <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE2 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AFC <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B0C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B16 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B24 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B96 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BA0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BBC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BDE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C00 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C22 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C40 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C6E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C74 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C84 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C88 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9E <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CF2 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D08 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D18 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D34 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D50 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF8 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E14 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E30 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E4C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E68 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E84 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EBC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006ED8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF4 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F10 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F2C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F48 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F64 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F80 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F9C <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FB8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF0 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000700C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007028 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007044 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007060 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000707C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00007098 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000070EC <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007108 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007124 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007140 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000715C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007178 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007194 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000071CC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000071E8 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007204 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007220 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000723C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007258 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007274 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007290 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000072AC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000072C8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E4 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007300 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000731C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007338 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007354 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007370 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
0000738C <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000073A8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E0 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000073FC <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007418 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007434 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007450 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000746C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007488 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000074DC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
000074F8 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007514 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007530 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000754C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007568 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007584 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000075BC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000075D8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F4 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007610 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000762C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007648 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007664 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00007680 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
0000769C <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000076B8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F0 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000770C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007728 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007744 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007760 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000777C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
00007798 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000077EC <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007808 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007824 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007840 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000785C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007878 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007894 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000078CC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000078E8 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007904 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007920 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
0000793C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007958 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007974 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007990 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000079AC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000079C8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E4 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A00 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A1C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A38 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A54 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A70 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A8C <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AA8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE0 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B18 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B2A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B68 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B84 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BB6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE2 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BEC <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BF6 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C48 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C64 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C72 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CAC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CCE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D40 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D4E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D54 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D5C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D62 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D6A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D7E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEA <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DFE <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E0E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E28 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E56 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E92 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E98 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EE6 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F04 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F12 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F20 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F34 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F3E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F4C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F66 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F74 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F7A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FDC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FFA <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008008 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008018 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008062 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008076 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F0 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008112 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008142 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008170 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000081CC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F2 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008214 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000825C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000827E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
00008284 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00008292 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000082AE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E0 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F0 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008306 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008344 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008360 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008372 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000083DC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F2 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F8 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008420 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084E0 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008516 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008526 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008534 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000853A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000854A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008574 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000857A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000085B6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E4 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000085F2 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008660 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008670 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
0000868E <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869C <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008700 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008720 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000872E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008734 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000873A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008756 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008776 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00008784 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878A <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879A <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000087DE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008828 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008842 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008866 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000887C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008894 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008904 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008940 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008950 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008964 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008974 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899E <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E0 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F0 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A52 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A76 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AB8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AEA <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B14 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B24 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B4C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B54 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BFE <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C26 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C62 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C90 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF2 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D30 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D72 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D7C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DAA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DCA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DE2 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E40 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE6 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF0 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF6 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F00 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F12 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F12 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00008F36 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00008F3E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00008F6C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
00008F9A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000900A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009018 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009068 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009068 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009068 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000908C <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000090B4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000090D8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009106 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009324 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009352 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000937E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000093BA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000093E6 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009412 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000943E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000946A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009496 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000094C2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000094EE <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000951A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000095A4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000962E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000096CC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009716 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009756 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000975C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000097A6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
000097E6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009810 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009816 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000986A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
00009894 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
0000989E <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000098BC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000098DE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
0000990C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009968 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
000099AE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
000099F4 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009A3A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009A72 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009B70 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009B8E <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009B98 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009BBE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009BD0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009BFE <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009C26 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009C38 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009C8E <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009CC4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009CD4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009CDA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009CEC <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009CF6 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009D30 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009D36 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009D8E <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009DAC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009DB2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009DC2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009DD2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009DE2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009DF2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009E02 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009E36 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009E5E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009E68 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009E7A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009EB4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009EBE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009EE8 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
00009F00 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
00009F52 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
00009F80 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A058 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A0EA <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A104 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A104 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A11A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A130 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A146 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A15C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A168 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A174 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A180 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A18C <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A1B4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A1DC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A204 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A228 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A24C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A276 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A278 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A27A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A27E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A280 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A284 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A28C <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A28E <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A290 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A296 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A298 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A29A <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A2A4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A2C4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A2E2 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A2E8 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A302 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A31E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A344 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A364 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A36E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A3D6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A3DC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A416 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A434 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A43A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A458 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A45E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A480 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A4A0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A4D8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A4F4 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A4FA <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A50C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A528 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A574 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A57A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A5B4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A5DC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A5E2 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A61C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A64A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A678 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A67E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A69C <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A6F8 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A73E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A748 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A74E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A768 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A77A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A7D8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A812 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A84C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A86A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A89E <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A8BA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A8D4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000A952 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000A964 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000A97A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000A9A4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000A9AE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000A9C2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000A9F0 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AA0A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AA1C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AA3C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AA52 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AA8A <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000AAB4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AAF6 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AB0C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AB54 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AB74 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ABBA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ABC6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ABD0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000ABE2 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000ABE8 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000ABF6 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AC1E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AC32 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AC5A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AC6E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AC96 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ACAA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ACD2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ACD4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000ACF8 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AD30 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000ADBA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000ADE2 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AE12 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AE4A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AEA2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000AEFA <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000AF7A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000AFAE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000AFE2 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000AFE8 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000AFF6 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B02A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B052 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B10A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B18A <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B1BE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B1DE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B1E4 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B1EA <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B2BA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B2CE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B386 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B406 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B4F6 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B500 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B534 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B554 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B55A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B560 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B630 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B644 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B678 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B6A0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B758 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B7D8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B80C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B82C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B832 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B838 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000B908 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000B91C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000B9D4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BA54 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BA88 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BAA8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BAAE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BAB4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BB84 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BB8A <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BBC4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BBC6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BBCC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BC64 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BC76 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BC8C <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BD60 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BD7A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BDB4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BDCE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BDD8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BDF4 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BE1C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BE42 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BE5E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BE70 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BECE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000BF06 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000BF0C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000BF54 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000BF6E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000BF7C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000BF82 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C086 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C08C <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C0D2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C0DE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C144 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C18A <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C1D2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C23A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C240 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C27A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C280 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C2E2 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C2EC <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C300 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C31A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C320 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C346 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C362 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C3C0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C3C4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C3E6 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C3EC <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C408 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C428 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C4B4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C4F0 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C4F6 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C526 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C52C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C544 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C5A2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C5DA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C5E0 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C628 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C642 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C674 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C67A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C6D8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C720 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C72A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C730 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C74A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C750 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C7D6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C7E0 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C7E6 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C80C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C812 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C838 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C898 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C8B2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C8BC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C8D6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000C8E0 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000C8F8 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000C928 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000C944 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000C952 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000C992 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000C99C <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000C9A2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000C9C0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000C9C6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000C9D8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CA04 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CA3A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CA4C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CA96 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CB80 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CB9E <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CBC4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CBE0 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CC0C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CC16 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CC44 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CC5E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CC7A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CC80 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CCBA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CCC0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CCC6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CCCC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CD6C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CD72 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CE14 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CE1A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CE54 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CE5E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CE64 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CE7E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CEA2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CEBC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CEDC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000CF90 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000CF96 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000CF9C <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000CFD2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000CFD8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000CFF2 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000CFFA <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D002 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D018 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D030 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D042 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D04E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D054 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D05C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D094 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D0A6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D0CA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D0DC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D0E8 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D0EE <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D0FE <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D12E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D17A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D180 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D1AA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D1C2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D1F0 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D204 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D21A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D23A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D250 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D25A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D274 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D296 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D2AE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D2D0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D2D6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D308 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D31C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D334 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D34C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D36C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D39C <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D3CC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D3DE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D3E6 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D410 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D41A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D434 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D44E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D4D6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D4F0 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D502 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D538 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D54A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D552 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D57A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D580 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D5A8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D5B8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D5CC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D5E2 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D5F2 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D60C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D636 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D63E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D63E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D6DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D6E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D6EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D728 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D75A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D798 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DB08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DB16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DB1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DDAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DDC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DE02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DE54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DE62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DEB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DEBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000DF38 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000DFAC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000DFC6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFC6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFC6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFC6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000DFEE <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E008 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E012 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E024 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E048 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E056 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E062 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E066 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E084 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E09E <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E0BE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E0C8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E0D6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E0E2 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E0F0 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E0FC <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E108 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E11A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E12A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E134 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E13A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E154 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E15E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E178 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E194 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E1AA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E1B4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E1BA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E1D4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E1DA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E1E4 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E224 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E256 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E256 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E270 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E27A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E2A2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E2C4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E2E0 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E2F0 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E2F4 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E30E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E32E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E338 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E352 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E360 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E36E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E37C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E38A <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E396 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E3A4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E3B2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E3C0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E3CE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E3E8 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E3F6 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E406 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E416 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E426 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E434 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E43E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E444 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E462 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E468 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E492 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E4C0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E4DE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E4E8 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E4FA <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E53C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E548 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E55A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E560 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E59E <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E5A4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E5AA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E5B4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E5BA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E5EC <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E606 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E61E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E632 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E682 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E6A2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E6B6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E6D0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E6D8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E6E0 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E6E8 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E6F0 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E6F6 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E704 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E764 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E76A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E792 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E7B6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E7DE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E812 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E822 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E82C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E83A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E84E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E854 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E874 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E87A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E882 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E8BC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E8E2 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E8FA <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E92E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000E936 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E944 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000E94A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E962 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000E968 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E988 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E98E <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9B6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000E9F0 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EA16 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA2E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA3A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA46 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EA52 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA5E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA74 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA7C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EA96 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EAD4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EADA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EB40 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000EBD6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000EC48 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000EC54 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000EC62 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000ECA8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000ECF2 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000ED2A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000ED7E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000ED84 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000ED8A <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000ED98 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EDA0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EDDA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EE00 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EE18 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EE4E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EE64 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EE72 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EE8A <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EEC2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000EEE8 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000EF30 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000EF36 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000EF50 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EF5C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EF62 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EF8E <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EFA2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EFB0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000EFB8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EFF2 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F018 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F030 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F06A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F094 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F0AC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F0DC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F108 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F124 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F132 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F140 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F17E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F1BA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F226 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F254 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F282 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F2CA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F2E4 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F32C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F34A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F368 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F382 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F38E <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F394 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F3C0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F3D8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F3DE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F3F2 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F400 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F40E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F41C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F424 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F450 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F478 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F4A0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F50C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F51C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F548 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F59E <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F5AC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F5BA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F614 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F784 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F7DA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F846 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F84E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F888 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F8AE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F8C6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F900 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F92A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F942 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000F9BA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F9C2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F9C8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FA2A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FA56 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FA72 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FA80 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FA8E <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FA9C <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FAAA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FAEE <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FB5A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FB88 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FB9C <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FBCE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FC18 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FC28 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FC5C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FC7E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FC8E <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FC96 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FCDA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FD46 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FD74 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FD98 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FDDC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FE48 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FE76 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FEA4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FEAC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FEDA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FF4C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FF52 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FF80 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FFF2 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010010 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010034 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001004C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010052 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010058 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001005A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010064 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
00010090 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000100B2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000100BA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000100C0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000100CE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010108 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001012E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010146 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000101AA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000101C2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010212 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001021A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010254 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
0001028C <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000102A2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000102C8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000102DC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000102F4 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010306 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010310 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010324 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001033E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001035C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001036E <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001038C <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000103C8 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
000103E4 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010404 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001040E <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001041E <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001042A <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010486 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000104C6 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000104DE <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001054E <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
0001057C <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
00010596 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
0001059E <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000105B6 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000105C0 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000105D2 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001060A <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010618 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010624 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010640 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010662 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
00010684 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000106A6 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000106C8 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
000106E4 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010702 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010716 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001071C <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001071E <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010724 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001072E <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010734 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010752 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010758 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
0001077C <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
0001079A <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000107C8 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
000107F6 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010824 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
00010886 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
00010896 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000108A0 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000108A6 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000108A6 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
000108F0 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010910 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
0001091A <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
0001092E <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010974 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
000109BA <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010A00 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010A0A <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010A26 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010A50 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010ACE <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010B4C <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010BCA <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010C48 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010CC6 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010D44 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010DC2 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010E40 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010EBE <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00010F3C <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
00010FC0 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00010FF0 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001104C <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011078 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011142 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011150 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
0001118E <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011212 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001123C <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001125A <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011274 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001127E <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
0001128A <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
0001129A <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000112AA <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000112BA <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000112CA <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000112CE <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001130C <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011364 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000113C0 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001144A <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000114C8 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000114E2 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011510 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001154C <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001161A <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000116E8 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011734 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000117B2 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011830 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
0001188E <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011924 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
0001195C <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
000119BA <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011A42 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011A4A <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011AB4 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011B20 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011B5E <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011BE6 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011C12 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011C6E <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011D36 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011D9A <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011DA0 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011DD4 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011EA2 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00011F70 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
00011F9A <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
00011FB8 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00011FE6 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012022 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
00012092 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
0001209A <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000120EC <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012114 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001212C <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000121E0 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000121EE <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012244 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000122A2 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000122A8 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001232C <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000123B0 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012434 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000124B2 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012530 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000125AE <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001262C <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000126AA <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012728 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000127A6 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000127D0 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000127EE <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001281C <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012860 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012866 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
00012880 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
0001289C <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000128D0 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
000128F4 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
0001291C <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012988 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
000129E6 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012A44 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012A90 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012AEA <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012AF0 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012AF6 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012B00 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012B0A <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012B24 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012B52 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012B58 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012B9C <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012BB6 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012BC6 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012BD0 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012BDC <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012BE6 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012C52 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012C9A <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012CE2 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012CF8 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012D0C <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012D16 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012D20 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012D3A <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012D64 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012DA8 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012DC2 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012E20 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012E3A <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012E52 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012E5C <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012E78 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012E86 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012E92 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012EDE <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00012F30 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
00012F82 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00012F96 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
00012FA6 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
00012FAC <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
00012FAE <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
00012FB4 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
00012FBE <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
00012FC8 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00012FE2 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001300C <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013022 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001302C <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000130A4 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000130E0 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000130F0 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013110 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013130 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013150 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013186 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000131AE <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000131E6 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001324A <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001326A <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000132E6 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001331E <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
00013394 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000133B4 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013430 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013468 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000134DE <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
000134FE <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001357A <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000135A6 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000135AE <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
000135F4 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013614 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001361E <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013636 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013646 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001367E <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000136B0 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000136C2 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013744 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001374E <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
00013780 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000137B2 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000137DE <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001380A <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001382C <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013836 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013850 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013850 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013866 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
00013882 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
00013884 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000138B2 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000138B2 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000138B2 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000138CC <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000138D6 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000138F8 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013910 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
0001392A <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
0001395C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013966 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
0001396C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001397E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
000139F8 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013A32 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013A3C <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013A42 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013A58 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013A62 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013A7A <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013AAA <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013AC4 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013ADA <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013B0E <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013B2C <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013B42 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013B76 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013B7A <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013B94 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013BAA <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013BDE <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013BE2 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013BFC <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013C12 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013C46 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013C4A <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013C64 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013C7A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013CAE <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013CB2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013CB2 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013CB2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013CC8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013CDE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013CEC <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013CFA <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013D04 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013D16 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013D28 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013D2E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013D68 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013D6C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013D82 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013D98 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013DA4 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013DB0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013DB8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013DC0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013DC4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013DEE <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013E1A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013E2C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013E44 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013E5A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013E60 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013E96 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013ECE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00013F06 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00013F76 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
00013FAE <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00013FE6 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001401E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014056 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
0001408E <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000140C6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
000140FE <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014136 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014140 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001414A <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014154 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001417E <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
0001418C <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000141C0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000141C6 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014200 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014206 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
0001421C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014226 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001422C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014242 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014248 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
00014286 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
0001428A <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
00014294 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
00014296 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000142CA <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000142DA <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000142E4 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000142EA <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014300 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001433E <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014342 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
0001434A <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
00014388 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
0001438A <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
0001438E <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143CC <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143D0 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
0001440E <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014412 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001443C <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014446 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001445A <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
00014486 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
0001449A <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014500 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014530 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014534 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000145BC <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000145C0 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001466E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014678 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014692 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000146B0 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000146B8 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000146BE <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
000146E6 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
000146FE <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014724 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001474E <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001475C <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014762 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014776 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
0001479C <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000147B0 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
000147E6 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
000147F4 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014824 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014832 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014838 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014846 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014852 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014860 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014862 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014868 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001487E <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014888 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001488E <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000148F6 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014938 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
0001493C <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
0001497A <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001497E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
0001498E <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
000149D2 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000149E4 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014A26 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014A4A <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014A54 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014A6E <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014A82 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014B82 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014BBA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014BC0 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014BD0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014BF8 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014C20 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014C28 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014C2E <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014C36 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014C3E <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014C66 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014C6E <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014C76 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014C7C <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014C82 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014C8E <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014C94 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014C9A <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014CA0 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014CA6 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014CAE <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014CB6 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014CDE <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014CE4 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014CEA <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014CF2 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014D12 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014D22 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014D32 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014D42 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014D52 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014D62 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014D72 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014D82 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014D92 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014DA2 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014DB2 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014DC2 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014DD2 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014DF2 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014E02 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014E12 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014E36 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014E48 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014E5A <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014E6C <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014E7E <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014E9C <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014EA8 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014ED2 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00014EE4 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00014F18 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014F30 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014F7C <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014F8E <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00014FE4 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015056 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0001505C <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
00015090 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000150B8 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000150E0 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015132 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000151B6 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001521E <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001522E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015236 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001524A <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
00015290 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
00015296 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000152E0 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001534A <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000153B0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000153E4 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015410 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001545E <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00015482 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00015488 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
00015496 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000154F4 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015552 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001557C <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00015586 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001558E <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000155CC <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015618 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001562A <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00015680 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000156F8 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000156FE <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015732 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001575A <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
00015790 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001579E <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000157AC <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015820 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015826 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015870 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000158BA <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000158EA <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001591A <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015944 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015996 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000159EC <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015A3C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015AA2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015B0E <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015B3A <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015B6A <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015BE6 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015C16 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015C46 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015C76 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015CA6 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015CD6 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015D06 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015D36 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015D96 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015DC6 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015E42 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015E74 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015EA6 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015ED6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015EDC <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00015F50 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00015FBC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00015FCE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016024 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016038 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00016062 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
000160A6 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000160B6 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000160C6 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000160CC <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000160DC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000160EA <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
000160F4 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001612C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016164 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0001619C <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
000161AC <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016214 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001624C <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001625C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001626C <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000162D4 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001633C <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000163A4 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001640C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016474 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000164DC <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016544 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000165AC <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000165BC <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
000165F4 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001662E <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016668 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000166A0 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000166BC <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
000166F4 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001671A <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00016722 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001672A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016732 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001673A <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001674E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001677C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00016796 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
000167A4 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00016810 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016836 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016852 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001685C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016866 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016872 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00016880 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
0001688C <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000168C8 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000168E2 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
000168F0 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016910 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
0001691E <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001692C <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016932 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016942 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016946 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
0001697A <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
000169AE <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000169B2 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000169E6 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
000169EA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016A1E <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016A24 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016A5A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016A90 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016AC6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016AFE <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016B36 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016BD6 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016C16 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016C4C <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016C82 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016CBA <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016CD8 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016CDC <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016CE2 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016CE8 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016CEC <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016D16 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016D2A <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016D68 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016D9C <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016E2A <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016E58 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016E5C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016E92 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016EC0 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00016EEE <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00016EF2 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00016F28 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00016F56 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00016F5A <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
00016FBE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00016FC4 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00016FFE <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00017008 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00017012 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001702C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017056 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0001705C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0001707C <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00017086 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
0001708A <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
0001708C <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000170AA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000170AC <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000170B2 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000170B8 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
000170E2 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
000170E4 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00017112 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017116 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017144 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017148 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001716E <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001717E <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00017184 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001718A <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000171C4 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000171CE <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000171E8 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00017206 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017230 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001725E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
000172EE <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000172F8 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001730C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017348 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00017384 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000173C0 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
000173FC <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017438 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001743E <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017478 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001748A <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0001749A <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000174C0 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000174C2 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
000174E0 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
000174E6 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017510 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00017512 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001751C <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017522 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00017534 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
00017588 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001759C <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001760C <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00017676 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001768A <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000176F4 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001772A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017730 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001779A <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000177AE <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
000177E4 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
000177EA <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017820 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017834 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001789E <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000178A4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0001790E <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017922 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00017958 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
0001795E <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017994 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
000179AE <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
000179C2 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00017A2C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017A32 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017A9C <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017AB0 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017B1A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017B20 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017B8A <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017B9E <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017C08 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017C0E <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017C8C <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017CF6 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017CFC <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017D66 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017D78 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017D88 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017D92 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017DFC <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017E02 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017E6C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017E76 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00017EE0 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00017F16 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
00017F1C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
00017F86 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
00017FBC <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00017FC4 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00017FF2 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00017FF6 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
0001801E <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00018024 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001802A <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00018030 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00018036 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001803C <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00018046 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00018050 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001807E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
000180AA <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
000180B2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
000180E6 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
000180F8 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0001815E <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
000181C4 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
000181CA <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
000181D4 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000181F2 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00018230 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
0001826E <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00018274 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
0001827A <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00018280 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001828A <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00018290 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00018296 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
0001829C <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000182A2 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
000182A6 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
000182B0 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
000182B4 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000182DE <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000182E6 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000182EA <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000182F0 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000182F4 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00018304 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
0001835E <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00018370 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
000183DA <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
000183E0 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001842A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00018468 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
0001850E <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
0001852C <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00018532 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
0001855C <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00018566 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00018598 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000185B2 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000185C6 <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000185D2 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
000185EC <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
000185F6 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00018610 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
0001863A <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
0001865E <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0001869C <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
000186A0 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000186DE <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
000186E2 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00018720 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0001875E <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00018760 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00018794 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
0001879A <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000187F0 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000187F8 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
000187FE <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00018808 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018816 <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018844 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
0001885E <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00018868 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
0001886E <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018896 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
0001889C <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
000188A2 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
000188AC <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
000188BA <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
000188C0 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
000188D0 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
000188FC <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018912 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
0001891C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018922 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
0001897A <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
000189E8 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018A00 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018A06 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00018A3E <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018A6C <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018A96 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018AA0 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018AC8 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00018AF2 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018B94 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018BA2 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00018BF2 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018C02 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018CCA <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00018CFE <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00018D32 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00018D66 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00018D9A <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00018DCE <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
00018E02 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00018E36 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00018E6A <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00018E6C <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00018EAA <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00018EAE <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00018EEC <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
00018F2A <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
00018F2C <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
00018F32 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00018F36 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00018F38 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
00018F76 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00018FB4 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00018FB6 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00018FB8 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
00018FBA <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00018FC0 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
00018FC4 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00018FD4 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
00018FEC <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00019004 <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
0001901C <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
00019046 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00019070 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
0001909E <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000190A2 <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000190CA <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000190CC <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
0001910A <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
0001910E <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
0001914C <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
00019150 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
0001918E <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
00019192 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
000191D0 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
000191D4 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
000191FA <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00019220 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
00019246 <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
0001926C <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
00019292 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000192E8 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
0001933E <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
0001938C <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
000193E2 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00019408 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
0001942E <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
00019454 <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
000194AA <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
000194F8 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00019546 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00019600 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00019656 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
0001967C <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000196A2 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
000196C8 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
0001971E <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019774 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
000197C2 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00019810 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001985E <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000198AC <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000198FA <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00019948 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019996 <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
000199BC <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
000199E2 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019A08 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019A56 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00019AA4 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019AFA <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019B48 <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019B96 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019BE4 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019C0A <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019C30 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019C56 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019C8E <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019CB6 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019CCA <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019D3E <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019D84 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019E32 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019E9E <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019EAE <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019ED4 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00019EDE <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
00019F08 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00019F0E <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00019F1E <CLIModeSupport.ab3@953> XINCLUDE "CLIModeSupport.ab3"
00019FBE <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00019FFE <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0001A004 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001A066 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
0001A070 <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
0001A07A <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001A094 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001A0B6 <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
0001A0D8 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
0001A132 <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
0001A154 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
0001A1AE <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
0001A1F0 <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
0001A1F6 <CLIModeSupport.ab3@1027> XINCLUDE "CLIModeSupport.ab3"
0001A204 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
0001A20A <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
0001A21E <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
0001A228 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
0001A2A2 <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
0001A2AC <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
0001A2B2 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
0001A2C6 <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
0001A2D0 <CLIModeSupport.ab3@1039> XINCLUDE "CLIModeSupport.ab3"
0001A350 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
0001A35A <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001A360 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
0001A374 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
0001A37E <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001A3C6 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001A3D0 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001A3D6 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001A3EA <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
0001A3F4 <CLIModeSupport.ab3@1054> XINCLUDE "CLIModeSupport.ab3"
0001A43C <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
0001A446 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001A44C <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
0001A460 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001A486 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
0001A49A <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001A4C0 <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001A4D4 <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
0001A4FA <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
0001A50E <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001A518 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
0001A546 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001A596 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001A5B6 <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
0001A5CE <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
0001A6B2 <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001A6BC <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001A6C2 <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001A6C4 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001A6D8 <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001A70A <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
0001A710 <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
0001A754 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
0001A766 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001A778 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
0001A782 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
0001A788 <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
0001A792 <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
0001A7AC <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
0001A7AC <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001A82C <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001A864 <AmiBlitz3.ab3@99> If dynassign <> ""
0001A87A <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001A884 <AmiBlitz3.ab3@101>     If *AssignSema
0001A894 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001A89A <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001A8BA <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A8C4 <AmiBlitz3.ab3@105>       If *AssignSema
0001A8D4 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001A908 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001A91A <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001A956 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001A962 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001A96E <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001A97E <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001A98E <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001A9DA <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001AA3A <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001AACE <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001AB06 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001AB88 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001AC0A <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001AC8C <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001AD0E <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001AD90 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001AE04 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001AE78 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001AEEC <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001AF1A <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001AF3E <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001AF6C <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001AF9A <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B064 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B09C <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B0DA <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B0EA <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B0F0 <AmiBlitz3.ab3@152> Else
0001B100 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B126 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B132 <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B13C <AmiBlitz3.ab3@162> If CLIMode
0001B142 <AmiBlitz3.ab3@165>   err.l      = False                                       ; indicate that an error has occured
0001B148 <AmiBlitz3.ab3@166>   showhelp.l = False                                       ; show the CLI tool's help
0001B1A0 <AmiBlitz3.ab3@169>   cli_progpath.s     = dos_GetProgDir{default_assign$}     ; replaced hardcoded path  tomsmart1 2012 03 09
0001B1C8 <AmiBlitz3.ab3@170>   cli_sourcefile.s   = ""
0001B1F0 <AmiBlitz3.ab3@171>   cli_exefile.s      = ""
0001B218 <AmiBlitz3.ab3@172>   cli_savefile.s     = ""
0001B240 <AmiBlitz3.ab3@173>   cli_dumpfile.s     = ""
0001B268 <AmiBlitz3.ab3@174>   cli_includepath.s  = ""
0001B290 <AmiBlitz3.ab3@175>   cli_blitzlibpath.s = ""
0001B296 <AmiBlitz3.ab3@176>   cli_debuginfo.l    = False
0001B29C <AmiBlitz3.ab3@177>   cli_run.l          = False
0001B2A4 <AmiBlitz3.ab3@178>   cli_dumpflags.l    = $FFFFFFFF
0001B2CC <AmiBlitz3.ab3@179>   cli_info.s         = ""
0001B2D2 <AmiBlitz3.ab3@180>   cli_release.l      = False
0001B2DC <AmiBlitz3.ab3@181>   cli_numargs.l      = dos_GetNumArgs{}
0001B2E2 <AmiBlitz3.ab3@182>   cli_gui.l          = False
0001B2EA <AmiBlitz3.ab3@183>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
0001B2F2 <AmiBlitz3.ab3@184>   cli_verbose.l      = 1
0001B2FA <AmiBlitz3.ab3@185>   cli_comdbgflags.l  = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001B302 <AmiBlitz3.ab3@186>   cli_comstrbufsize.l = 0
0001B30A <AmiBlitz3.ab3@187>   cli_exestacksize.l  = 0
0001B322 <AmiBlitz3.ab3@188>   If cli_numargs=0 Then showhelp=True
0001B352 <AmiBlitz3.ab3@192>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001B39E <AmiBlitz3.ab3@193>     larg.s = LCase$(arg)                                   ; lower case the option string
0001B466 <AmiBlitz3.ab3@194>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001B49C <AmiBlitz3.ab3@195>     Select larg
0001B4E8 <AmiBlitz3.ab3@196>       Case "s" : larg="source"
0001B53A <AmiBlitz3.ab3@197>       Case "e" : larg="exe"
0001B58C <AmiBlitz3.ab3@198>       Case "d" : larg="debug"
0001B5DE <AmiBlitz3.ab3@199>       Case "r" : larg="release"
0001B630 <AmiBlitz3.ab3@200>       Case "h" : larg="help"
0001B682 <AmiBlitz3.ab3@201>       Case "v" : larg="verbose"
0001B690 <AmiBlitz3.ab3@202>     End Select
0001B6C6 <AmiBlitz3.ab3@204>     Select larg
0001B71A <AmiBlitz3.ab3@205>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001B774 <AmiBlitz3.ab3@206>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001B7CE <AmiBlitz3.ab3@207>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001B7FE <AmiBlitz3.ab3@208>       Case "debug"    : cli_debuginfo   = True
0001B82E <AmiBlitz3.ab3@209>       Case "run"      : cli_run         = True
0001B85E <AmiBlitz3.ab3@210>       Case "release"  : cli_release     = True
0001B88E <AmiBlitz3.ab3@211>       Case "ped"      : cli_gui         = True
0001B8E8 <AmiBlitz3.ab3@212>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001B95A <AmiBlitz3.ab3@213>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001B98A <AmiBlitz3.ab3@214>                         cli_dumpfile    = dos_GetNextArg{}
0001B992 <AmiBlitz3.ab3@215>                         cli_dumpflags   = $0
0001B9F2 <AmiBlitz3.ab3@216>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001BA52 <AmiBlitz3.ab3@217>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001BAB2 <AmiBlitz3.ab3@218>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001BB12 <AmiBlitz3.ab3@219>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001BB72 <AmiBlitz3.ab3@220>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001BBD2 <AmiBlitz3.ab3@221>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001BC32 <AmiBlitz3.ab3@222>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001BC92 <AmiBlitz3.ab3@223>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001BCF2 <AmiBlitz3.ab3@224>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001BD04 <AmiBlitz3.ab3@225>                         If cli_dumpflags = $0
0001BD0A <AmiBlitz3.ab3@226>                          err=True
0001BD9E <AmiBlitz3.ab3@227>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001BE10 <AmiBlitz3.ab3@230>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001BE18 <AmiBlitz3.ab3@231>                         cli_comflags.l  = $0
0001BE78 <AmiBlitz3.ab3@232>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001BED8 <AmiBlitz3.ab3@233>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001BF38 <AmiBlitz3.ab3@234>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001BF98 <AmiBlitz3.ab3@235> 
0001BFF8 <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C012 <AmiBlitz3.ab3@237>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C018 <AmiBlitz3.ab3@238>                           err=True                                                                ; no
0001C0AC <AmiBlitz3.ab3@239>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C0B2 <AmiBlitz3.ab3@240>                         Else
0001C0C0 <AmiBlitz3.ab3@241>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C132 <AmiBlitz3.ab3@244>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C13A <AmiBlitz3.ab3@245>                         cli_dbgflags.l  = $0
0001C19A <AmiBlitz3.ab3@246>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C1FA <AmiBlitz3.ab3@247>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C25A <AmiBlitz3.ab3@248>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001C2BA <AmiBlitz3.ab3@249>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001C2D4 <AmiBlitz3.ab3@250>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001C2DA <AmiBlitz3.ab3@251>                           err=True                                                                ; no
0001C36E <AmiBlitz3.ab3@252>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001C374 <AmiBlitz3.ab3@253>                         Else
0001C382 <AmiBlitz3.ab3@254>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001C3DC <AmiBlitz3.ab3@256>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001C436 <AmiBlitz3.ab3@257>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001C490 <AmiBlitz3.ab3@259>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001C4C0 <AmiBlitz3.ab3@260>       Case "h"        : showhelp        = True             ; show the help and quit
0001C4C6 <AmiBlitz3.ab3@261>       Default
0001C4FE <AmiBlitz3.ab3@262>         If arg><""
0001C592 <AmiBlitz3.ab3@263>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001C598 <AmiBlitz3.ab3@264>           err = True
0001C5A6 <AmiBlitz3.ab3@266>     End Select
0001C5F2 <AmiBlitz3.ab3@267>   Until arg = "" OR err=True          ; until we processed all arguments
0001C614 <AmiBlitz3.ab3@270>   If err><False OR showhelp = True
0001C61E <AmiBlitz3.ab3@271>     If showhelp
0001C680 <AmiBlitz3.ab3@272>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001C6B8 <AmiBlitz3.ab3@273>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001C6F0 <AmiBlitz3.ab3@274>     NPrint "\\nOptions:"
0001C728 <AmiBlitz3.ab3@275>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001C760 <AmiBlitz3.ab3@276>     NPrint "  -(e)xe <file>       : output executable filename"
0001C798 <AmiBlitz3.ab3@277>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001C7D0 <AmiBlitz3.ab3@278>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001C808 <AmiBlitz3.ab3@279>     NPrint "  -run                : run compiled program"
0001C840 <AmiBlitz3.ab3@280>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001C878 <AmiBlitz3.ab3@281>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001C8B0 <AmiBlitz3.ab3@282>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001C8E8 <AmiBlitz3.ab3@283>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001C920 <AmiBlitz3.ab3@284>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"
0001C958 <AmiBlitz3.ab3@285>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"
0001C990 <AmiBlitz3.ab3@286>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001C9C8 <AmiBlitz3.ab3@287>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001CA00 <AmiBlitz3.ab3@288>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001CA38 <AmiBlitz3.ab3@289>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001CA70 <AmiBlitz3.ab3@290>     NPrint "  -(h)elp             : show this help"
0001CAA8 <AmiBlitz3.ab3@291>     NPrint "\\nExample:"
0001CAE0 <AmiBlitz3.ab3@292>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001CB18 <AmiBlitz3.ab3@293>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001CB1E <AmiBlitz3.ab3@296>     Goto abnormal_exit
0001CB3A <AmiBlitz3.ab3@299>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001CB9E <AmiBlitz3.ab3@300>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001CBAE <AmiBlitz3.ab3@303> Poke.l ?CLIMode,CLIMode
0001CBD2 <AmiBlitz3.ab3@334>   Dim incdim.s (#maxincludes)
0001CBF6 <AmiBlitz3.ab3@335>   Dim incline.l(#maxincludes)
0001CC10 <AmiBlitz3.ab3@603> Function.s Get_Libinfo{addr_libnum.l}
0001CC1C <AmiBlitz3.ab3@605>   lib_ab2.b = False : lib_os.b = False
0001CC22 <AmiBlitz3.ab3@606>   addr_counter.l = addr_libnum
0001CC2A <AmiBlitz3.ab3@607>   skip.l = 0
0001CC3C <AmiBlitz3.ab3@608>   If addr_counter=0
0001CC76 <AmiBlitz3.ab3@609>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001CC94 <AmiBlitz3.ab3@610>     Function Return ""
0001CCA2 <AmiBlitz3.ab3@615>     mem.l = Peek.l(addr_counter)
0001CCB0 <AmiBlitz3.ab3@620>     addr_counter + 2
0001CCD0 <AmiBlitz3.ab3@621>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001CCEA <AmiBlitz3.ab3@622>     If (mem LSR 16) = $ffe2
0001CCF0 <AmiBlitz3.ab3@624>       lib_os = True
0001CCF8 <AmiBlitz3.ab3@625>       skip = 10
0001CD3E <AmiBlitz3.ab3@626>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001CD82 <AmiBlitz3.ab3@628>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001CD98 <AmiBlitz3.ab3@630>   If (addr_counter>addr_libnum + $400)
0001CDB6 <AmiBlitz3.ab3@632>     Function Return ""
0001CDBC <AmiBlitz3.ab3@633>   Else
0001CDE0 <AmiBlitz3.ab3@634>     Function Return Peek$(addr_counter + skip)
0001CDEA <AmiBlitz3.ab3@636> End Function
0001CE08 <AmiBlitz3.ab3@676>   !asm
0001CE0E <AmiBlitz3.ab3@677>   MOVEA.l _execbase,A6
0001CE12 <AmiBlitz3.ab3@678>   MOVEM.l d0/a0,-(a7)
0001CE14 <AmiBlitz3.ab3@680>   MOVEQ #127,d0
0001CE1A <AmiBlitz3.ab3@681>   LEA chartab,a0
0001CE20 <AmiBlitz3.ab3@684>     MOVE.b #1,128(a0)
0001CE22 <AmiBlitz3.ab3@685>     CLR.b (a0)+
0001CE26 <AmiBlitz3.ab3@686>   DBF d0,'l12
0001CE2C <AmiBlitz3.ab3@688>   LEA chartab,a0
0001CE30 <AmiBlitz3.ab3@689>   MOVE.b #1,(a0)
0001CE36 <AmiBlitz3.ab3@690>   MOVE.b #1,","(a0)
0001CE3C <AmiBlitz3.ab3@691>   MOVE.b #1,";"(a0)
0001CE42 <AmiBlitz3.ab3@692>   MOVE.b #1,":"(a0)
0001CE48 <AmiBlitz3.ab3@693>   MOVE.b #1,"("(a0)
0001CE4E <AmiBlitz3.ab3@694>   MOVE.b #1,")"(a0)
0001CE54 <AmiBlitz3.ab3@695>   MOVE.b #1,"="(a0)
0001CE5A <AmiBlitz3.ab3@696>   MOVE.b #1,"+"(a0)
0001CE60 <AmiBlitz3.ab3@697>   MOVE.b #1,"-"(a0)
0001CE66 <AmiBlitz3.ab3@698>   MOVE.b #1,"*"(a0)
0001CE6C <AmiBlitz3.ab3@699>   MOVE.b #1,"/"(a0)
0001CE72 <AmiBlitz3.ab3@700>   MOVE.b #1,"$"(a0)
0001CE78 <AmiBlitz3.ab3@701>   MOVE.b #1,"%"(a0)
0001CE7E <AmiBlitz3.ab3@702>   MOVE.b #1,"."(a0)
0001CE84 <AmiBlitz3.ab3@703>   MOVE.b #1,"["(a0)
0001CE8A <AmiBlitz3.ab3@704>   MOVE.b #1,"]"(a0)
0001CE90 <AmiBlitz3.ab3@705>   MOVE.b #1,"{"(a0)
0001CE96 <AmiBlitz3.ab3@706>   MOVE.b #1,"}"(a0)
0001CE9C <AmiBlitz3.ab3@707>   MOVE.b #1,"\"(a0)
0001CEA2 <AmiBlitz3.ab3@708>   MOVE.b #1,">"(a0)
0001CEA8 <AmiBlitz3.ab3@709>   MOVE.b #1,"<"(a0)
0001CEAE <AmiBlitz3.ab3@710>   MOVE.b #1,"&"(a0)
0001CEB4 <AmiBlitz3.ab3@711>   MOVE.b #1,"|"(a0)
0001CEBA <AmiBlitz3.ab3@712>   MOVE.b #1,"^"(a0)
0001CEC0 <AmiBlitz3.ab3@713>   MOVE.b #1,$7e(a0)
0001CEC6 <AmiBlitz3.ab3@714>   MOVE.w #$0101,1(a0)
0001CECC <AmiBlitz3.ab3@716>   LEA instrtab,a0
0001CED2 <AmiBlitz3.ab3@717>   MOVE.l #labelhash-instrtab,d0
0001CED4 <AmiBlitz3.ab3@718>   ASR.l #2,d0
0001CED6 <AmiBlitz3.ab3@719>   SUBQ.l #1,d0
0001CED8 <AmiBlitz3.ab3@722>    CLR.l (a0)+
0001CEDA <AmiBlitz3.ab3@723>    SUBQ.l #1,d0
0001CEDE <AmiBlitz3.ab3@724>   BNE 'l10
0001CEE4 <AmiBlitz3.ab3@726>   LEA allowtab,a0
0001CEEA <AmiBlitz3.ab3@727>   MOVE.l #255,d0
0001CEEC <AmiBlitz3.ab3@730>     CLR.b (a0)+
0001CEF0 <AmiBlitz3.ab3@731>   DBF d0,'la1
0001CEF6 <AmiBlitz3.ab3@733>   LEA allowtab,a0
0001CEFC <AmiBlitz3.ab3@734>   MOVE.b #1,$7d(a0)
0001CF02 <AmiBlitz3.ab3@735>   MOVE.b #1,$7c(a0)
0001CF08 <AmiBlitz3.ab3@736>   MOVE.b #1,$44(a0)
0001CF0E <AmiBlitz3.ab3@737>   MOVE.b #1,$45(a0)
0001CF14 <AmiBlitz3.ab3@738>   MOVE.b #1,$b9(a0)
0001CF1A <AmiBlitz3.ab3@739>   MOVE.b #1,$89(a0)
0001CF20 <AmiBlitz3.ab3@740>   MOVE.b #1,$ce(a0)
0001CF26 <AmiBlitz3.ab3@741>   MOVE.b #1,$cf(a0)
0001CF2C <AmiBlitz3.ab3@742>   MOVE.b #1,$d0(a0)
0001CF32 <AmiBlitz3.ab3@743>   MOVE.b #1,$cd(a0)
0001CF34 <AmiBlitz3.ab3@744>   MOVEQ #0,d0
0001CF3A <AmiBlitz3.ab3@746>   MOVEA.l _execbase,a6
0001CF40 <AmiBlitz3.ab3@751>   MOVE.l #$10000,d0
0001CF46 <AmiBlitz3.ab3@752>   MOVE.l #80000,d1
0001CF48 <AmiBlitz3.ab3@753>   MOVE.l d1,d2
0001CF4C <AmiBlitz3.ab3@754>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001CF52 <AmiBlitz3.ab3@755>   MOVE.l d0,mempool
0001CF56 <AmiBlitz3.ab3@756>   MOVEM.l (a7)+,d0/a0
0001CF5C <AmiBlitz3.ab3@757>   TST.l mempool
0001CF60 <AmiBlitz3.ab3@758>   BEQ shutdown_compiler
0001CF64 <AmiBlitz3.ab3@760>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001CF6A <AmiBlitz3.ab3@761>   MOVE.l A4,ptr_ThisTask
0001CF6E <AmiBlitz3.ab3@763>   BSR.w open_doslibrary
0001CF72 <AmiBlitz3.ab3@764>   BEQ.w shutdown_compiler
0001CF78 <AmiBlitz3.ab3@766>   MOVE.l D2,stacksize
0001CF7A <AmiBlitz3.ab3@770>   MOVEQ.l #$00,D0
0001CF80 <AmiBlitz3.ab3@771>   LEA tokens,A0
0001CF82 <AmiBlitz3.ab3@774>     ADDQ.w #1,D0
0001CF84 <AmiBlitz3.ab3@775>     MOVE.l (A0),D1
0001CF88 <AmiBlitz3.ab3@776>     BEQ.w JL_0_2D1C
0001CF8A <AmiBlitz3.ab3@777>     MOVEA.l D1,A0
0001CF8E <AmiBlitz3.ab3@778> BRA.w JL_0_2D0E
0001CF94 <AmiBlitz3.ab3@781>   MOVE.l A0,end_of_tokenlist
0001CF98 <AmiBlitz3.ab3@783>   BSR.w makeasmtable
0001CFA0 <AmiBlitz3.ab3@784>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001CFA4 <AmiBlitz3.ab3@786>   BSR.w open_mathlibrary
0001CFA8 <AmiBlitz3.ab3@787>   BEQ.w freemem_and_quit4
0001CFAE <AmiBlitz3.ab3@789>   MOVE.l constmaxpc,D0
0001CFB0 <AmiBlitz3.ab3@790>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001CFB6 <AmiBlitz3.ab3@791>   MOVEA.l _execbase,A6
0001CFBA <AmiBlitz3.ab3@792>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001CFC0 <AmiBlitz3.ab3@793>   MOVE.l D0,constpcat
0001CFC4 <AmiBlitz3.ab3@794>   BEQ.w freemem_and_quit3
0001CFCA <AmiBlitz3.ab3@795>   ADD.l constmaxpc,D0
0001CFD0 <AmiBlitz3.ab3@796>   MOVE.l D0,constlibat
0001CFD6 <AmiBlitz3.ab3@798>   MOVE.l macrobuffer_size,D0
0001CFDC <AmiBlitz3.ab3@799>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001CFE0 <AmiBlitz3.ab3@800>   BGE 'ok
0001CFE6 <AmiBlitz3.ab3@801>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001CFEC <AmiBlitz3.ab3@802>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001CFEE <AmiBlitz3.ab3@805>   ADDQ.l #4,d0
0001CFF0 <AmiBlitz3.ab3@806>   MOVEQ.l #$01,D1
0001CFF6 <AmiBlitz3.ab3@807>   MOVEA.l _execbase,A6
0001CFFA <AmiBlitz3.ab3@808>   JSR _AllocMem(A6)                                        ;macro mem
0001CFFC <AmiBlitz3.ab3@809>   MOVE.l d0,a0
0001D002 <AmiBlitz3.ab3@810>   MOVE.l macrobuffer_size,(a0)+
0001D004 <AmiBlitz3.ab3@811>   MOVE.l a0,d0
0001D00A <AmiBlitz3.ab3@812>   MOVE.l D0,ptr_macrobuffer_begin
0001D00E <AmiBlitz3.ab3@813>   BEQ.w freemem_and_quit2
0001D014 <AmiBlitz3.ab3@814>   ADD.l macrobuffer_size,D0
0001D01A <AmiBlitz3.ab3@815>   MOVE.l D0,ptr_macrobuffer_end
0001D020 <AmiBlitz3.ab3@817>   TST.l CLIMode
0001D024 <AmiBlitz3.ab3@818>   BEQ load_ped
0001D04E <AmiBlitz3.ab3@821>   !basic
0001D058 <AmiBlitz3.ab3@822>   succ.l = InitEmulatedPED{}
0001D05C <AmiBlitz3.ab3@823>   GetD0 succ
0001D07A <AmiBlitz3.ab3@824>   !asm
0001D07C <AmiBlitz3.ab3@825>   TST.l d0
0001D080 <AmiBlitz3.ab3@826>   BEQ freemem_and_quit
0001D086 <AmiBlitz3.ab3@827> JMP skip_ped
0001D08C <AmiBlitz3.ab3@832>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D092 <AmiBlitz3.ab3@833>   MOVEA.l _dosbase,A6
0001D096 <AmiBlitz3.ab3@834>   JSR _LoadSeg(A6)
0001D09C <AmiBlitz3.ab3@835>   MOVE.l D0,ptr_seg_ped
0001D0A0 <AmiBlitz3.ab3@837>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D0A2 <AmiBlitz3.ab3@841>   MOVEA.l D0,A2
0001D0A4 <AmiBlitz3.ab3@842>   ADDA.l A2,A2
0001D0A6 <AmiBlitz3.ab3@843>   ADDA.l A2,A2
0001D0AC <AmiBlitz3.ab3@845>   LEA teddata,a1                                           ;lea edstruct,A1
0001D0B2 <AmiBlitz3.ab3@846>   MOVE.l #"TEDY",d1
0001D0B6 <AmiBlitz3.ab3@847>   JSR 4(A2)                                                ; Run PED
0001D0BC <AmiBlitz3.ab3@849>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D0C2 <AmiBlitz3.ab3@850>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D100 <AmiBlitz3.ab3@852>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D104 <AmiBlitz3.ab3@853>   BEQ.w unload_ped
0001D108 <AmiBlitz3.ab3@854> 
0001D10C <AmiBlitz3.ab3@855>   BNE old_version_of_PED                                   ; no, than exit
0001D14A <AmiBlitz3.ab3@861>   !ComData_GetL{comData_Magic,D0}
0001D150 <AmiBlitz3.ab3@862>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D154 <AmiBlitz3.ab3@863>   BNE unload_ped
0001D18C <AmiBlitz3.ab3@866>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001D1C4 <AmiBlitz3.ab3@867>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001D1FC <AmiBlitz3.ab3@868>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001D234 <AmiBlitz3.ab3@869>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001D26C <AmiBlitz3.ab3@870>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001D2A4 <AmiBlitz3.ab3@871>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001D2DC <AmiBlitz3.ab3@872>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001D314 <AmiBlitz3.ab3@873>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001D34C <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001D384 <AmiBlitz3.ab3@875>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001D3BC <AmiBlitz3.ab3@876>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001D3F4 <AmiBlitz3.ab3@877>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001D42C <AmiBlitz3.ab3@880>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001D464 <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001D49C <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001D4D4 <AmiBlitz3.ab3@885>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001D50C <AmiBlitz3.ab3@887>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001D544 <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001D57C <AmiBlitz3.ab3@890>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001D5B4 <AmiBlitz3.ab3@891>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001D5EC <AmiBlitz3.ab3@893>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001D624 <AmiBlitz3.ab3@894>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001D65C <AmiBlitz3.ab3@895>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001D694 <AmiBlitz3.ab3@896>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001D6CC <AmiBlitz3.ab3@897>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001D704 <AmiBlitz3.ab3@898>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001D73C <AmiBlitz3.ab3@899>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001D774 <AmiBlitz3.ab3@900>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001D7AC <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001D7E4 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001D81C <AmiBlitz3.ab3@903>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001D854 <AmiBlitz3.ab3@904>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001D88C <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001D8C4 <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001D8FC <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001D902 <AmiBlitz3.ab3@911>   CLR.w returncode_org
0001D92C <AmiBlitz3.ab3@913>   !basic
0001D936 <AmiBlitz3.ab3@914>   If CLIMode
0001D9A8 <AmiBlitz3.ab3@915>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001D9C6 <AmiBlitz3.ab3@917>   !asm
0001D9CC <AmiBlitz3.ab3@921>   TST.b start_without_libs
0001D9D0 <AmiBlitz3.ab3@922>   BNE skip_loading_libs
0001D9D4 <AmiBlitz3.ab3@923>     BSR.w call_setpointerbusy
0001D9DE <AmiBlitz3.ab3@924>     MOVE.l #$FFFFffff,linenumat
0001D9E2 <AmiBlitz3.ab3@925>     BSR.w get_libraries
0001D9E8 <AmiBlitz3.ab3@926>     JSR init_libraries
0001D9EC <AmiBlitz3.ab3@927>     BSR.w init_buffers
0001D9F0 <AmiBlitz3.ab3@928>     BSR.w call_setpointernormal
0001D9F2 <AmiBlitz3.ab3@933>   MOVEQ.l #-$01,D0
0001D9F8 <AmiBlitz3.ab3@934>   MOVEA.l _execbase,A6
0001D9FC <AmiBlitz3.ab3@935>   JSR _AllocSignal(A6)
0001DA02 <AmiBlitz3.ab3@936>   MOVE.l D0,signalNum
0001DA04 <AmiBlitz3.ab3@937>   MOVEQ.l #$00,D1
0001DA06 <AmiBlitz3.ab3@938>   BSET D0,D1
0001DA0C <AmiBlitz3.ab3@939>   MOVE.l D1,signals
0001DA12 <AmiBlitz3.ab3@943>   MOVE.l #str_defaultdbug,D1
0001DA16 <AmiBlitz3.ab3@944>   MOVEA.l _dosbase(PC),A6
0001DA1A <AmiBlitz3.ab3@945>   JSR _LoadSeg(A6)
0001DA20 <AmiBlitz3.ab3@946>   MOVE.l D0,ptr_seg_debugger
0001DA22 <AmiBlitz3.ab3@947>   TST.l d0
0001DA26 <AmiBlitz3.ab3@948>   BNE ok_12
0001DA50 <AmiBlitz3.ab3@949>     !basic
0001DAB2 <AmiBlitz3.ab3@950>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001DAD0 <AmiBlitz3.ab3@951>     !asm
0001DAD6 <AmiBlitz3.ab3@954>   TST.l CLIMode
0001DADA <AmiBlitz3.ab3@955>   BEQ run_ped
0001DB04 <AmiBlitz3.ab3@961>   !basic
0001DB0A <AmiBlitz3.ab3@962>   err.l = False
0001DB36 <AmiBlitz3.ab3@970>   If cli_sourcefile
0001DB56 <AmiBlitz3.ab3@971>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001DB60 <AmiBlitz3.ab3@972>     If lock
0001DB84 <AmiBlitz3.ab3@973>       NameFromLock_ lock,&cli_tempstr,1024
0001DBAE <AmiBlitz3.ab3@974>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001DBBE <AmiBlitz3.ab3@975>       UnLock_ lock
0001DBEA <AmiBlitz3.ab3@978>     If cli_exefile
0001DC3C <AmiBlitz3.ab3@979>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001DC94 <AmiBlitz3.ab3@980>       path.s = dos_PathPart{cli_exefile}
0001DCB4 <AmiBlitz3.ab3@981>       lock.l = Lock_(&path,#ACCESS_READ)
0001DCBE <AmiBlitz3.ab3@982>       If lock
0001DCE2 <AmiBlitz3.ab3@983>         NameFromLock_ lock,&cli_tempstr,1024
0001DD0C <AmiBlitz3.ab3@984>         path.s = Peek.s(&cli_tempstr)
0001DDBA <AmiBlitz3.ab3@985>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001DDCA <AmiBlitz3.ab3@986>         UnLock_ lock
0001DE14 <AmiBlitz3.ab3@997>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001DE88 <AmiBlitz3.ab3@998> 
0001DE92 <AmiBlitz3.ab3@999>   *PreProcessor.preprocessor = preproc_Create{}
0001DEA2 <AmiBlitz3.ab3@1000>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001DED4 <AmiBlitz3.ab3@1001>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001DEE8 <AmiBlitz3.ab3@1002>   If *PreProcessor\tokens=#NULL
0001DF62 <AmiBlitz3.ab3@1003>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001DF6C <AmiBlitz3.ab3@1004>     preproc_QueryTokens{*PreProcessor}
0001DF9E <AmiBlitz3.ab3@1005>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001DFEA <AmiBlitz3.ab3@1013>   If cli_sourcefile><"" AND err=False
0001E090 <AmiBlitz3.ab3@1014>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E0C2 <AmiBlitz3.ab3@1015>     succ=LoadSource{cli_sourcefile}
0001E0CC <AmiBlitz3.ab3@1016>     If succ
0001E104 <AmiBlitz3.ab3@1017> 
0001E17E <AmiBlitz3.ab3@1018>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001E1C0 <AmiBlitz3.ab3@1019> 
0001E1CA <AmiBlitz3.ab3@1021>         If comerr
0001E1D0 <AmiBlitz3.ab3@1023>         Else
0001E1D6 <AmiBlitz3.ab3@1027>     Else
0001E226 <AmiBlitz3.ab3@1028>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001E272 <AmiBlitz3.ab3@1032>   If cli_savefile><"" AND err=False
0001E2EC <AmiBlitz3.ab3@1033>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001E31A <AmiBlitz3.ab3@1034>     SaveSource{cli_savefile}
0001E366 <AmiBlitz3.ab3@1037>   If cli_dumpfile><"" AND err=False
0001E3B0 <AmiBlitz3.ab3@1038>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001E3E6 <AmiBlitz3.ab3@1039>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001E3F0 <AmiBlitz3.ab3@1042>   If cli_run
0001E404 <AmiBlitz3.ab3@1043>     If comerr=False
0001E430 <AmiBlitz3.ab3@1044>       If cli_exefile
0001E4AA <AmiBlitz3.ab3@1045>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001E4E0 <AmiBlitz3.ab3@1046> 
0001E52A <AmiBlitz3.ab3@1048>       If cli_verbose>=1 Then NPrint "Running program..."
0001E538 <AmiBlitz3.ab3@1049> 
0001E53A <AmiBlitz3.ab3@1051>         CLR.l d0
0001E578 <AmiBlitz3.ab3@1052>         !ComData_GetB{comByte_RunningFlag,D0}
0001E57C <AmiBlitz3.ab3@1053>         running.l = PutD0
0001E598 <AmiBlitz3.ab3@1054>         If running Then Delay_ 50
0001E5AC <AmiBlitz3.ab3@1056>       Until running=False
0001E5C0 <AmiBlitz3.ab3@1057>       If Peek.l(?_runerror)
0001E610 <AmiBlitz3.ab3@1058>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001E622 <AmiBlitz3.ab3@1069>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001E66C <AmiBlitz3.ab3@1070>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001E672 <AmiBlitz3.ab3@1071>   DeinitEmulatedPED{}
0001E690 <AmiBlitz3.ab3@1073>   !asm
0001E696 <AmiBlitz3.ab3@1074> JMP terminate_ab3
0001E69C <AmiBlitz3.ab3@1079>   MOVEA.l ped_startup_addr,A1
0001E6A2 <AmiBlitz3.ab3@1080>   LEA str_tempfilename,A0
0001E6A4 <AmiBlitz3.ab3@1081>   JSR (A1)
0001E6AA <AmiBlitz3.ab3@1088>   MOVE.l signalNum,D0
0001E6B0 <AmiBlitz3.ab3@1089>   MOVEA.l _execbase,A6
0001E6B4 <AmiBlitz3.ab3@1090>   JSR _FreeSignal(A6)
0001E6BA <AmiBlitz3.ab3@1092>   MOVE.l ptr_seg_debugger,D1
0001E6BE <AmiBlitz3.ab3@1093>   BEQ.b skip_unload_debugger
0001E6C2 <AmiBlitz3.ab3@1094>     MOVEA.l _dosbase(PC),A6
0001E6C6 <AmiBlitz3.ab3@1095>     JSR _UnLoadSeg(A6)
0001E6CA <AmiBlitz3.ab3@1098>   BSR.w Aclearallvars
0001E6CE <AmiBlitz3.ab3@1099>   BSR.w free_residents
0001E6D4 <AmiBlitz3.ab3@1100>   JSR free_blitzlibs
0001E6DA <AmiBlitz3.ab3@1103>   MOVE.l ptr_seg_ped,D1
0001E6DE <AmiBlitz3.ab3@1104>   BEQ freemem_and_quit
0001E6E2 <AmiBlitz3.ab3@1105>   MOVEA.l _dosbase(PC),A6
0001E6E6 <AmiBlitz3.ab3@1106>   JSR _UnLoadSeg(A6)
0001E6EA <AmiBlitz3.ab3@1107>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001E714 <AmiBlitz3.ab3@1110>   !basic
0001E7D8 <AmiBlitz3.ab3@1111> 
0001E7F6 <AmiBlitz3.ab3@1112>   !asm
0001E7FA <AmiBlitz3.ab3@1113>   BRA freemem_and_quit
0001E824 <AmiBlitz3.ab3@1116>   !basic
0001E8E8 <AmiBlitz3.ab3@1117>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001E906 <AmiBlitz3.ab3@1118>   !asm
0001E90A <AmiBlitz3.ab3@1122>   BSR.w freeallox
0001E910 <AmiBlitz3.ab3@1123>   MOVEA.l ptr_macrobuffer_begin,A1
0001E912 <AmiBlitz3.ab3@1124>   MOVE.l -(a1),D0
0001E914 <AmiBlitz3.ab3@1125>   ADDQ.l #4,d0
0001E91A <AmiBlitz3.ab3@1126>   MOVEA.l _execbase,A6
0001E91E <AmiBlitz3.ab3@1127>   JSR _FreeMem(A6)
0001E924 <AmiBlitz3.ab3@1130>   MOVEA.l _dosbase,A1
0001E92A <AmiBlitz3.ab3@1131>   MOVEA.l _execbase,A6
0001E92E <AmiBlitz3.ab3@1132>   JSR _CloseLibrary(A6)
0001E934 <AmiBlitz3.ab3@1134>   MOVEA.l constpcat,A1
0001E93A <AmiBlitz3.ab3@1135>   MOVE.l constmaxpc,D0
0001E940 <AmiBlitz3.ab3@1136>   MOVEA.l _execbase,A6
0001E944 <AmiBlitz3.ab3@1137>   JSR _FreeMem(A6)
0001E94A <AmiBlitz3.ab3@1140>   MOVEA.l _mathffpbase,A1
0001E950 <AmiBlitz3.ab3@1141>   MOVEA.l _execbase,A6
0001E954 <AmiBlitz3.ab3@1142>   JSR _CloseLibrary(A6)
0001E95A <AmiBlitz3.ab3@1152>     MOVEA.l _execbase,A6
0001E960 <AmiBlitz3.ab3@1153>     MOVE.l mempool,a0
0001E964 <AmiBlitz3.ab3@1154>     JSR _DeletePool(a6)
0001E96A <AmiBlitz3.ab3@1155>     CLR.l pushat
0001E970 <AmiBlitz3.ab3@1162>   JSR free_unusedfunctions
0001E972 <AmiBlitz3.ab3@1163>   MOVEQ #0,d0
0001E980 <AmiBlitz3.ab3@1166>   !exitasm
0001E9B8 <AmiBlitz3.ab3@1167>   If dynassign<>""
0001E9C2 <AmiBlitz3.ab3@1168>     If *AssignSema
0001E9D2 <AmiBlitz3.ab3@1169>       ReleaseSemaphore_ *AssignSema
0001E9EA <AmiBlitz3.ab3@1170>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001EA7E <AmiBlitz3.ab3@1171>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001EAB8 <AmiBlitz3.ab3@1172>         dos_RemAssign{dynassign}
0001EAC8 <AmiBlitz3.ab3@1173>         RemSemaphore_ *AssignSema
0001EAD8 <AmiBlitz3.ab3@1174>         ReleaseSemaphore_ *AssignSema
0001EB0E <AmiBlitz3.ab3@1175>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001EB1E <AmiBlitz3.ab3@1176>         FreeVec_ *AssignSema
0001EB26 <AmiBlitz3.ab3@1177>         *AssignSema = #NULL
0001EB54 <AmiBlitz3.ab3@1181>   SetCurrentDir{cli_path}
0001EB76 <AmiBlitz3.ab3@1182>   !coutclose
0001EB7C <AmiBlitz3.ab3@1183> End
0001EB88 <AmiBlitz3.ab3@1188> str_doslibrary:     Dc.b "dos.library",0 : Even
0001EB8C <AmiBlitz3.ab3@1189> _dosbase:           Ds.l 1
0001EB92 <AmiBlitz3.ab3@1193>   MOVEA.l _execbase,A6
0001EB98 <AmiBlitz3.ab3@1194>   LEA str_doslibrary,A1
0001EB9C <AmiBlitz3.ab3@1195>   JSR _OldOpenLibrary(A6)
0001EBA2 <AmiBlitz3.ab3@1196>   MOVE.l D0,_dosbase
0001EBA4 <AmiBlitz3.ab3@1197> RTS
0001EBAA <AmiBlitz3.ab3@1201>   MOVEA.l #str_mathffpname,A1
0001EBB0 <AmiBlitz3.ab3@1202>   MOVEA.l _execbase,A6
0001EBB4 <AmiBlitz3.ab3@1203>   JSR _OldOpenLibrary(A6)
0001EBBA <AmiBlitz3.ab3@1204>   MOVE.l D0,_mathffpbase
0001EBBC <AmiBlitz3.ab3@1205> RTS
0001EBEE <AmiBlitz3.ab3@1213> !ComData_JMP{comFunc_SetNormalPointer}
0001EC20 <AmiBlitz3.ab3@1221> !ComData_JMP{comFunc_SetBusyPointer}
0001EC4A <AmiBlitz3.ab3@1225>   !basic
0001EC4E <AmiBlitz3.ab3@1226>   ab3save_filenameP.l = PutD0
0001EC58 <AmiBlitz3.ab3@1227>   If ab3save_filenameP
0001EC80 <AmiBlitz3.ab3@1228>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001ECAE <AmiBlitz3.ab3@1230>     SaveSource{ab3save_filename}
0001ECB4 <AmiBlitz3.ab3@1231>   Else
0001ECEE <AmiBlitz3.ab3@1232>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001ED0C <AmiBlitz3.ab3@1234>   !asm
0001ED0E <AmiBlitz3.ab3@1235>   RTS
0001ED38 <AmiBlitz3.ab3@1238>   !basic
0001ED3C <AmiBlitz3.ab3@1239>   ab3save_filenameP.l = PutD0
0001ED46 <AmiBlitz3.ab3@1240>   If ab3save_filenameP
0001ED6E <AmiBlitz3.ab3@1241>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001ED9C <AmiBlitz3.ab3@1242>     LoadSource{ab3save_filename}
0001EDA2 <AmiBlitz3.ab3@1243>   Else
0001EDDC <AmiBlitz3.ab3@1244>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001EDFA <AmiBlitz3.ab3@1246>   !asm
0001EDFC <AmiBlitz3.ab3@1247>   RTS
0001EE26 <AmiBlitz3.ab3@1250>   !basic
0001EE2C <AmiBlitz3.ab3@1251>   ClearSource{}
0001EE4A <AmiBlitz3.ab3@1252>   !asm
0001EE4C <AmiBlitz3.ab3@1253>   RTS
0001EE76 <AmiBlitz3.ab3@1256>   !basic
0001EE7C <AmiBlitz3.ab3@1257>   OpenConsoleFake{}
0001EE9A <AmiBlitz3.ab3@1258>   !asm
0001EE9C <AmiBlitz3.ab3@1259>   RTS
0001EEC6 <AmiBlitz3.ab3@1263>   !basic
0001EECC <AmiBlitz3.ab3@1264>   CloseConsoleFake{}
0001EEEA <AmiBlitz3.ab3@1265>   !asm
0001EEEC <AmiBlitz3.ab3@1266>   RTS
0001EEF2 <AmiBlitz3.ab3@1270>   MOVE.w d6,menuitemdebug
0001EF1C <AmiBlitz3.ab3@1271>   !basic
0001EF2E <AmiBlitz3.ab3@1272>   menuitemx.l = Peek.w(?menuitemdebug)
0001EF54 <AmiBlitz3.ab3@1273>   If menuitemx>16 OR  menuitemx<0
0001EFC8 <AmiBlitz3.ab3@1274>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001EFD0 <AmiBlitz3.ab3@1275>     menuitemx=0
0001EFE0 <AmiBlitz3.ab3@1277>   Poke.w ?menuitemdebug,menuitemx
0001EFFE <AmiBlitz3.ab3@1278>   !asm
0001F004 <AmiBlitz3.ab3@1279>   MOVE.w menuitemdebug,d6
0001F00A <AmiBlitz3.ab3@1282>   MOVE.l A5,firstitem_
0001F010 <AmiBlitz3.ab3@1283>   MOVE.w D7,numlines_org
0001F016 <AmiBlitz3.ab3@1284>   MOVE.l d7,numlines
0001F018 <AmiBlitz3.ab3@1285>   LSL.w #2,D6
0001F01E <AmiBlitz3.ab3@1286>   LEA menu_items,A0
0001F022 <AmiBlitz3.ab3@1287>   MOVEA.l $0(A0,D6.W),A0
0001F02C <AmiBlitz3.ab3@1288>   MOVE.l #$FFFFffff,linenumat
0001F036 <AmiBlitz3.ab3@1289>   MOVE.l #$FFFFffff,compilelinecounter
0001F038 <AmiBlitz3.ab3@1292>   JSR (A0)                              ; jsr to the function for the menuitem
0001F03E <AmiBlitz3.ab3@1293>   MOVE.l compilelinecounter,D0
0001F040 <AmiBlitz3.ab3@1294> RTS
0001F044 <AmiBlitz3.ab3@1296> menuitemdebug: Dc.l 0
0001F048 <AmiBlitz3.ab3@1298> mempool                Dc.l 0
0001F05E <AmiBlitz3.ab3@1299> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F064 <AmiBlitz3.ab3@1300> dloaderr:             JSR handle_compileerror
0001F080 <AmiBlitz3.ab3@1301>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F0BE <AmiBlitz3.ab3@1309>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F0C4 <AmiBlitz3.ab3@1310>   LEA str_loaddebugmessage,A2
0001F0CA <AmiBlitz3.ab3@1311>   LEA str_blitz3assign,A0
0001F0D0 <AmiBlitz3.ab3@1312>   LEA str_temp_debugmodulename,A1
0001F0D2 <AmiBlitz3.ab3@1314>   JSR (A3)                                                  ;open ped filerequest
0001F0D6 <AmiBlitz3.ab3@1316>   BEQ.w menu_loaddebugmodule_noload
0001F0DC <AmiBlitz3.ab3@1317>   MOVE.l D0,ptr_temp_debugmodule
0001F0E0 <AmiBlitz3.ab3@1318>   BSR.w call_setpointerbusy
0001F0E6 <AmiBlitz3.ab3@1319> 
0001F0EC <AmiBlitz3.ab3@1320>   MOVE.l A7,errstack
0001F0F6 <AmiBlitz3.ab3@1321>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F0FC <AmiBlitz3.ab3@1322>   MOVE.l ptr_temp_debugmodule,D1
0001F100 <AmiBlitz3.ab3@1324>   MOVEA.l _dosbase(PC),A6
0001F104 <AmiBlitz3.ab3@1325>   JSR _LoadSeg(A6)
0001F106 <AmiBlitz3.ab3@1326>   MOVE.l D0,D7
0001F10A <AmiBlitz3.ab3@1327>   BEQ.w dloaderr
0001F110 <AmiBlitz3.ab3@1328>   MOVE.l ptr_seg_debugger,D1
0001F114 <AmiBlitz3.ab3@1329>   BEQ.b menu_loaddebugmodule_ndseg
0001F118 <AmiBlitz3.ab3@1330>   MOVEA.l _dosbase(PC),A6
0001F11C <AmiBlitz3.ab3@1331>   JSR _UnLoadSeg(A6)
0001F120 <AmiBlitz3.ab3@1332>   BSR.w call_setpointernormal
0001F126 <AmiBlitz3.ab3@1335>   MOVE.l D7,ptr_seg_debugger
0001F128 <AmiBlitz3.ab3@1338> RTS
0001F146 <AmiBlitz3.ab3@1341> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001F206 <AmiBlitz3.ab3@1342> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001F2C6 <AmiBlitz3.ab3@1343> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001F2CA <AmiBlitz3.ab3@1344> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001F2F4 <AmiBlitz3.ab3@1348>   !basic
0001F31E <AmiBlitz3.ab3@1349>   exepath.s = Peek.s(?exepath)
0001F348 <AmiBlitz3.ab3@1350>   exefile.s = Peek.s(?exefilename)
0001F3C8 <AmiBlitz3.ab3@1351>   exefile.s = dos_AddPart{exepath,exefile}
0001F400 <AmiBlitz3.ab3@1352>   Poke.s ?tempspace,exefile
0001F41E <AmiBlitz3.ab3@1353>   !asm
0001F424 <AmiBlitz3.ab3@1374>   LEA tempspace,a0
0001F426 <AmiBlitz3.ab3@1375>   MOVE.l a0,d0
0001F42A <AmiBlitz3.ab3@1376> BRA newcreate2
0001F454 <AmiBlitz3.ab3@1382>   !basic
0001F47E <AmiBlitz3.ab3@1383>   request_exename.s = Peek.s(?str_request_exename )
0001F4DA <AmiBlitz3.ab3@1384>   request_exename   = !TRANS{request_exename}
0001F4E0 <AmiBlitz3.ab3@1385>   GetD0 &request_exename
0001F4FE <AmiBlitz3.ab3@1386>   !asm
0001F500 <AmiBlitz3.ab3@1387>   MOVE.l D0,A2
0001F53E <AmiBlitz3.ab3@1390>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F544 <AmiBlitz3.ab3@1392>   LEA exepath,A0
0001F54A <AmiBlitz3.ab3@1393>   LEA exefilename,A1
0001F54C <AmiBlitz3.ab3@1395>   JSR (A3)                                                 ;open ped filerequest
0001F550 <AmiBlitz3.ab3@1397>   BEQ.w cancel_createexe
0001F55A <AmiBlitz3.ab3@1400>   ADD.l #1,number_of_builds
0001F560 <AmiBlitz3.ab3@1403>   MOVE.l D0,ptr_newexefilename
0001F568 <AmiBlitz3.ab3@1404>   MOVE.w #-1,debugversion
0001F56E <AmiBlitz3.ab3@1405>   MOVE.w set_make_smallestcode,-(A7)
0001F576 <AmiBlitz3.ab3@1409>     MOVE.w #1,makeexec
0001F57C <AmiBlitz3.ab3@1410>     JSR ab3_OpenDebugFile
0001F580 <AmiBlitz3.ab3@1411>     BSR.w startcompile
0001F586 <AmiBlitz3.ab3@1412>     JSR ab3_CloseDebugFile
0001F590 <AmiBlitz3.ab3@1413>     CMP.l #"NORE",reqmode
0001F594 <AmiBlitz3.ab3@1414>   BEQ 'l1
0001F59A <AmiBlitz3.ab3@1416>   TST.w anyerrs
0001F59E <AmiBlitz3.ab3@1417>   BNE.b menu_createexecutable__skip
0001F5A2 <AmiBlitz3.ab3@1418>   BSR.w savefile
0001F5A8 <AmiBlitz3.ab3@1421>   MOVE.w (A7)+,set_make_smallestcode
0001F5AA <AmiBlitz3.ab3@1424> RTS
0001F5B2 <AmiBlitz3.ab3@1428>   MOVE.w #-1,flag_noPED
0001F5B4 <AmiBlitz3.ab3@1429> RTS
0001F5BC <AmiBlitz3.ab3@1433>   MOVE.w #-1,flag_noCLI
0001F5BE <AmiBlitz3.ab3@1434> RTS
0001F5E8 <AmiBlitz3.ab3@1437>   !basic
0001F610 <AmiBlitz3.ab3@1438>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001F620 <AmiBlitz3.ab3@1439>     Poke.w ?word_WriteDebugFileNow,0
0001F63E <AmiBlitz3.ab3@1440>   !asm
0001F640 <AmiBlitz3.ab3@1441> RTS
0001F66A <AmiBlitz3.ab3@1444>   !basic
0001F67A <AmiBlitz3.ab3@1445>   Poke.w ?word_WriteDebugFileNow,0
0001F68C <AmiBlitz3.ab3@1446>   If dbg_fid>=0
0001F6A2 <AmiBlitz3.ab3@1447>     file_Close{dbg_fid} : dbg_fid = -1
0001F6B4 <AmiBlitz3.ab3@1449>   If dbg_fid.l<0
0001F6B6 <AmiBlitz3.ab3@1450>     CLR.l d0
0001F6F4 <AmiBlitz3.ab3@1451>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001F6F8 <AmiBlitz3.ab3@1452>     dbg_Create.l = PutD0
0001F702 <AmiBlitz3.ab3@1453>     If (dbg_Create) ; only when set!
0001F712 <AmiBlitz3.ab3@1454>       exefileP.l = Peek.l (?ptr_newexefilename)
0001F73A <AmiBlitz3.ab3@1455>       exefile.s = ""
0001F76C <AmiBlitz3.ab3@1456>       If exefileP Then exefile.s = Peek.s(exefileP)
0001F7A4 <AmiBlitz3.ab3@1457>       If exefile><""
0001F7FA <AmiBlitz3.ab3@1458>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001F80C <AmiBlitz3.ab3@1459>         If dbg_fid>=0
0001F81E <AmiBlitz3.ab3@1460>           Poke.w ?word_WriteDebugFileNow,-1
0001F82A <AmiBlitz3.ab3@1463>       oldhunkoffset.l = -1
0001F852 <AmiBlitz3.ab3@1464>       oldfile.s       = ""
0001F870 <AmiBlitz3.ab3@1467>   !asm
0001F872 <AmiBlitz3.ab3@1468> RTS
0001F878 <AmiBlitz3.ab3@1471> TST.w word_WriteDebugFileNow
0001F87C <AmiBlitz3.ab3@1472> BEQ 'skipdebugfile
0001F8A6 <AmiBlitz3.ab3@1473> !basic
0001F8B8 <AmiBlitz3.ab3@1474>   If dbg_fid>=0
0001F8CA <AmiBlitz3.ab3@1475>     pass.l          = Peek.w(?pass)
0001F8DC <AmiBlitz3.ab3@1476>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001F900 <AmiBlitz3.ab3@1477> 
0001F906 <AmiBlitz3.ab3@1478>       oldhunkoffset.l = hunkoffset.l
0001F93A <AmiBlitz3.ab3@1479>       oldfile.s       = codefile.s
0001F956 <AmiBlitz3.ab3@1480>       If Peek.w (?ininclude)>0
0001F966 <AmiBlitz3.ab3@1481>         codeline.l = Peek.l(?includeline);-1
0001F9D6 <AmiBlitz3.ab3@1482>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001F9DC <AmiBlitz3.ab3@1483>       Else
0001FA0A <AmiBlitz3.ab3@1484>         !ComData_LEA{comStr_SourceName,A0}
0001FA0C <AmiBlitz3.ab3@1485>         MOVE.l A0,D0
0001FA10 <AmiBlitz3.ab3@1486>         sourceP.l = PutD0
0001FA38 <AmiBlitz3.ab3@1487>         codefile.s = Peek.s(sourceP)
0001FA48 <AmiBlitz3.ab3@1488>         codeline.l = Peek.l(?linenumat)
0001FA70 <AmiBlitz3.ab3@1490>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001FAC4 <AmiBlitz3.ab3@1491>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001FAD4 <AmiBlitz3.ab3@1498>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001FADE <AmiBlitz3.ab3@1499>         If *sourceLine
0001FAF4 <AmiBlitz3.ab3@1500>           MaxLen detokenline.s = 65536
0001FB36 <AmiBlitz3.ab3@1501>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001FB46 <AmiBlitz3.ab3@1502>          *tn.preprocessor = Peek.l(?include_preprocessor)
0001FB72 <AmiBlitz3.ab3@1503>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0001FBA0 <AmiBlitz3.ab3@1504>           If written>0 Then Poke.b &detokenline+written-1,0
0001FBCA <AmiBlitz3.ab3@1505>           sourceLineText.s = Peek.s(&detokenline)
0001FBD0 <AmiBlitz3.ab3@1506>         Else
0001FBF8 <AmiBlitz3.ab3@1507>           sourceLineText = "NULL"
0001FCC0 <AmiBlitz3.ab3@1510>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0001FCDE <AmiBlitz3.ab3@1516> !asm
0001FCE0 <AmiBlitz3.ab3@1518> RTS
0001FCE2 <AmiBlitz3.ab3@1520> word_WriteDebugFileNow: Dc.w 0
0001FCE4 <AmiBlitz3.ab3@1522> flag_noPED:  Ds.w 1                                        ;closeed org source
0001FCE6 <AmiBlitz3.ab3@1523> flag_noCLI:  Ds.w 1                                        ;nocli org source
0001FCEA <AmiBlitz3.ab3@1527>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0001FCF0 <AmiBlitz3.ab3@1528>   MOVEA.l _execbase,A6
0001FCF4 <AmiBlitz3.ab3@1529>   JSR _CacheClearU(A6)
0001FCF8 <AmiBlitz3.ab3@1530>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0001FCFA <AmiBlitz3.ab3@1531> RTS
0001FCFE <AmiBlitz3.ab3@1534>   MOVEM.l A2-A3,-(A7)
0001FD04 <AmiBlitz3.ab3@1535>   CLR.b doublepeek
0001FD0A <AmiBlitz3.ab3@1536>   MOVE.l A5,lastsourcepos
0001FD10 <AmiBlitz3.ab3@1537>    JSR getchar
0001FD14 <AmiBlitz3.ab3@1538>   CMP.w #$2E,D0
0001FD18 <AmiBlitz3.ab3@1539>    BEQ.w JL_0_49B4b
0001FD1E <AmiBlitz3.ab3@1540>   MOVEA.l defaulttype,A2
0001FD22 <AmiBlitz3.ab3@1541>   CMP.w #$24,D0
0001FD26 <AmiBlitz3.ab3@1542>    BNE.w JL_0_49CAb
0001FD28 <AmiBlitz3.ab3@1543>   MOVEQ.l #$07,D1
0001FD2C <AmiBlitz3.ab3@1544> BRA.w JL_0_49DEb
0001FD32 <AmiBlitz3.ab3@1547>   JSR getparameter2
0001FD36 <AmiBlitz3.ab3@1548>   BEQ.w syntaxerrb
0001FD3C <AmiBlitz3.ab3@1549>   LEA newtypebase,A2
0001FD42 <AmiBlitz3.ab3@1550>   JSR findtype
0001FD46 <AmiBlitz3.ab3@1551>   BNE.w notypeerrb
0001FD50 <AmiBlitz3.ab3@1556>   MOVE.w oldqflag,instringon
0001FD56 <AmiBlitz3.ab3@1557>   MOVEA.l lastsourcepos,A5
0001FD5C <AmiBlitz3.ab3@1559>   MOVE.l a2,functionreturntype
0001FD64 <AmiBlitz3.ab3@1560>   CMPI.l #$100,$4(A2)
0001FD68 <AmiBlitz3.ab3@1561>   BLE.w 'isvar
0001FD6A <AmiBlitz3.ab3@1565>   MOVEQ #3,d1
0001FD6E <AmiBlitz3.ab3@1566>   BRA JL_0_49DEb
0001FD72 <AmiBlitz3.ab3@1573>   MOVE.w $6(A2),D1
0001FD78 <AmiBlitz3.ab3@1574>   CMP.w #8,8(a2)
0001FD7C <AmiBlitz3.ab3@1575>   BNE 'l1
0001FD84 <AmiBlitz3.ab3@1576>   MOVE.b #1,doublepeek
0001FD8A <AmiBlitz3.ab3@1580>   MOVE.w D1,convsize
0001FD8E <AmiBlitz3.ab3@1581>   MOVEM.l (A7)+,A2-A3
0001FD90 <AmiBlitz3.ab3@1582> RTS
0001FD96 <AmiBlitz3.ab3@1584> notypeerrb JMP notypeerr
0001FD9C <AmiBlitz3.ab3@1585> illtypeerrb JMP illtypeerr
0001FDA2 <AmiBlitz3.ab3@1586> syntaxerrb JMP syntaxerr
0001FDAC <AmiBlitz3.ab3@1631>   ADD.l #1,number_of_builds
0001FDB2 <AmiBlitz3.ab3@1633>   CLR.w debugversion
0001FDB8 <AmiBlitz3.ab3@1634>   CLR.w flag_noPED
0001FDBE <AmiBlitz3.ab3@1635>   CLR.w flag_noCLI
0001FDC6 <AmiBlitz3.ab3@1638>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0001FDCA <AmiBlitz3.ab3@1639>     BSR.w startcompile
0001FDD4 <AmiBlitz3.ab3@1640>     CMP.l #"NORE",reqmode
0001FDD8 <AmiBlitz3.ab3@1641>   BEQ 'l1
0001FDDE <AmiBlitz3.ab3@1644>   TST.w anyerrs
0001FDE2 <AmiBlitz3.ab3@1645>    BNE.w JL_0_3482
0001FDE6 <AmiBlitz3.ab3@1647>   MOVE.w flag_noPED(PC),D1
0001FDEA <AmiBlitz3.ab3@1648>    BEQ.w skip_closingGUI
0001FE1C <AmiBlitz3.ab3@1653>   !ComData_JSR{comFunc_CloseGUI}
0001FE20 <AmiBlitz3.ab3@1654> BRA.b runprogram
0001FE24 <AmiBlitz3.ab3@1658>   BSR.w compilerequester
0001FE2A <AmiBlitz3.ab3@1661>   MOVEA.l _dosbase,A6
0001FE30 <AmiBlitz3.ab3@1662>   LEA exepath,a0
0001FE32 <AmiBlitz3.ab3@1663>   MOVE.l a0,d1
0001FE34 <AmiBlitz3.ab3@1664>   MOVEQ #-2,d2
0001FE38 <AmiBlitz3.ab3@1665>   JSR _Lock(a6)                                            ;lock
0001FE3E <AmiBlitz3.ab3@1666>   MOVE.l d0,exelock
0001FE44 <AmiBlitz3.ab3@1667>   MOVE.l #0,d1
0001FE48 <AmiBlitz3.ab3@1668>   JSR _CurrentDir(A6)
0001FE4E <AmiBlitz3.ab3@1669>   MOVE.l D0,lock_currentdir
0001FE50 <AmiBlitz3.ab3@1670>   MOVE.l D0,D1
0001FE54 <AmiBlitz3.ab3@1671>   JSR _CurrentDir(A6)
0001FE5A <AmiBlitz3.ab3@1672>   CLR.l ptr_exetask
0001FE60 <AmiBlitz3.ab3@1681>   MOVE.l #str_process_name,D1
0001FE62 <AmiBlitz3.ab3@1682>   MOVEQ.l #$00,D2
0001FE68 <AmiBlitz3.ab3@1683>   MOVE.l #proc_seglist,D3
0001FE6A <AmiBlitz3.ab3@1684>   LSR.l #2,D3
0001FE70 <AmiBlitz3.ab3@1685>   MOVE.l stacksize,D4
0001FE76 <AmiBlitz3.ab3@1686>   MOVEA.l _dosbase,A6
0001FE7A <AmiBlitz3.ab3@1687>   JSR _CreateProc(A6)                                      ;runtask
0001FE7C <AmiBlitz3.ab3@1688>   TST.l D0
0001FE80 <AmiBlitz3.ab3@1689>    BEQ ErrorRunningProg
0001FEB6 <AmiBlitz3.ab3@1691>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0001FEBC <AmiBlitz3.ab3@1693>   TST.w flag_noPED
0001FEC0 <AmiBlitz3.ab3@1694>    BNE.b JL_0_344E
0001FEC4 <AmiBlitz3.ab3@1695>   BSR.w close_compilewin
0001FECA <AmiBlitz3.ab3@1698>   CLR.l firstlocal
0001FED0 <AmiBlitz3.ab3@1699>   CLR.l firstglob
0001FED4 <AmiBlitz3.ab3@1700>   MOVE.w flag_noPED(PC),D1
0001FED8 <AmiBlitz3.ab3@1701>   BEQ.w skip_openGUI
0001FF0A <AmiBlitz3.ab3@1705>   !ComData_JSR{comFunc_CreateGUI}
0001FF0C <AmiBlitz3.ab3@1715> RTS
0001FF16 <AmiBlitz3.ab3@1718> MOVE.l #1,_runerror
0001FF1A <AmiBlitz3.ab3@1719> BRA JL_0_344E
0001FF1E <AmiBlitz3.ab3@1721> _runerror: Dc.l 0
0001FF22 <AmiBlitz3.ab3@1722> lock_currentdir:    Ds.l 1                                          ;tasklock org source
0001FF26 <AmiBlitz3.ab3@1723> ptr_exetask:        Ds.l 1                                          ;panictask org source
0001FF2A <AmiBlitz3.ab3@1724> signalNum:          Ds.l 1                                          ;panicbit org source
0001FF2E <AmiBlitz3.ab3@1725> signals:            Ds.l 1                                          ;panicmask org source
0001FF44 <AmiBlitz3.ab3@1727> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
0001FF49 <AmiBlitz3.ab3@1728>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
0001FF4C <AmiBlitz3.ab3@1729> Even4
0001FF50 <AmiBlitz3.ab3@1731> ptr_ThisTask:       Ds.l 1                                          ;length
0001FF54 <AmiBlitz3.ab3@1732> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
0001FF5A <AmiBlitz3.ab3@1736>   MOVEA.l $4,A0
0001FF62 <AmiBlitz3.ab3@1737>   MOVE.l  $114(A0),ptr_exetask
0001FF68 <AmiBlitz3.ab3@1739>   MOVEA.l _dosbase,A6
0001FF6E <AmiBlitz3.ab3@1740>   MOVE.l exelock,D1
0001FF72 <AmiBlitz3.ab3@1741>   JSR _CurrentDir(A6)
0001FFA8 <AmiBlitz3.ab3@1746>   !ComData_SetB{comByte_RunningFlag,#1}
0001FFAC <AmiBlitz3.ab3@1752>   MOVE.w flag_noCLI(PC),D1
0001FFB0 <AmiBlitz3.ab3@1753>    BNE.b skip_openconsole
0001FFE2 <AmiBlitz3.ab3@1757>   !ComData_JSR{comFunc_OpenConsole}
0001FFE6 <AmiBlitz3.ab3@1760>   BSR.w calcvbr
0001FFEC <AmiBlitz3.ab3@1761>   MOVEA.l vbr,A0
0001FFF2 <AmiBlitz3.ab3@1766>   CLR.w dirmode
0001FFF8 <AmiBlitz3.ab3@1767>   CLR.l firstglob
0001FFFE <AmiBlitz3.ab3@1768>   CLR.l firstlocal
00020004 <AmiBlitz3.ab3@1770>   MOVE.l stacksize,D2
0002000A <AmiBlitz3.ab3@1771>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020010 <AmiBlitz3.ab3@1772>   LEA str_cliarguments,A0                                   ;cli arguement
00020016 <AmiBlitz3.ab3@1773>   MOVEA.l destbufferstart,A1
0002001A <AmiBlitz3.ab3@1774>   BSR.w Aclearcache
0002001C <AmiBlitz3.ab3@1777>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020022 <AmiBlitz3.ab3@1779>   MOVEA.l vbr,A0
00020028 <AmiBlitz3.ab3@1781>   CLR.l firstglob
0002002E <AmiBlitz3.ab3@1782>   CLR.l firstlocal
00020034 <AmiBlitz3.ab3@1783>   MOVEA.l _dosbase,A6
0002003A <AmiBlitz3.ab3@1784>   MOVE.l exelock,d1
0002003E <AmiBlitz3.ab3@1785>   BEQ 'nolock
00020042 <AmiBlitz3.ab3@1786>   JSR _UnLock(a6)
00020078 <AmiBlitz3.ab3@1791>   !ComData_SetB{comByte_RunningFlag,#0}
0002007C <AmiBlitz3.ab3@1794>   MOVE.w flag_noCLI(PC),D1
00020080 <AmiBlitz3.ab3@1795>    BNE.b skip_closeconsole
000200B2 <AmiBlitz3.ab3@1799>   !ComData_JSR{comFunc_CloseConsole}
000200BA <AmiBlitz3.ab3@1802>   MOVE.w #$0001,stopit
000200BE <AmiBlitz3.ab3@1803>   MOVE.l signals(PC),D0
000200C4 <AmiBlitz3.ab3@1804>   MOVEA.l ptr_ThisTask,A1
000200CA <AmiBlitz3.ab3@1805>   MOVEA.l _execbase,A6
000200CE <AmiBlitz3.ab3@1806>   JSR _Signal(A6)
000200D0 <AmiBlitz3.ab3@1807> RTS
000200D6 <AmiBlitz3.ab3@1811>   MOVEA.l _execbase,A6
000200DA <AmiBlitz3.ab3@1812>   MOVE.w $128(A6),D0
000200DC <AmiBlitz3.ab3@1813>   MOVEQ.l #$00,D1
000200E0 <AmiBlitz3.ab3@1814>   ANDI.w #$F,D0
000200E4 <AmiBlitz3.ab3@1817>     BEQ.b calcvbr__skip
000200E6 <AmiBlitz3.ab3@1818>     ADDQ.w #1,D1
000200E8 <AmiBlitz3.ab3@1819>     LSR.w #1,D0
000200EC <AmiBlitz3.ab3@1820> BRA.b calcvbr_loop
000200EE <AmiBlitz3.ab3@1823>   MOVEQ.l #$00,D2
000200F2 <AmiBlitz3.ab3@1824>   CMP.w #$2,D1
000200F6 <AmiBlitz3.ab3@1825>    BCS.b calcvbr__skip2
000200FC <AmiBlitz3.ab3@1826>   MOVEA.l _execbase,A6
00020100 <AmiBlitz3.ab3@1827>   JSR _SuperState(A6)
00020104 <AmiBlitz3.ab3@1828>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020108 <AmiBlitz3.ab3@1829>   JSR _UserState(A6)
0002010E <AmiBlitz3.ab3@1832>   MOVE.l D2,vbr
00020110 <AmiBlitz3.ab3@1833> RTS
00020116 <AmiBlitz3.ab3@1837>   LEA instrtab,a0
0002011C <AmiBlitz3.ab3@1838>   MOVE.l #labelhash-instrtab,d0
0002011E <AmiBlitz3.ab3@1839>   ASR.l #2,d0
00020120 <AmiBlitz3.ab3@1840>   SUBQ.l #1,d0
00020122 <AmiBlitz3.ab3@1843>   CLR.l (a0)+
00020124 <AmiBlitz3.ab3@1844>   SUBQ.l #1,d0
00020128 <AmiBlitz3.ab3@1845>   BNE 'l10
0002012C <AmiBlitz3.ab3@1846>   BSR.w call_setpointerbusy
00020130 <AmiBlitz3.ab3@1847>   BSR.w free_userlibs
00020134 <AmiBlitz3.ab3@1848>   BSR.w scan_for_userlibs
00020138 <AmiBlitz3.ab3@1849>   BSR.w JL_0_7082
0002013C <AmiBlitz3.ab3@1850> BRA.w call_setpointernormal
00020166 <AmiBlitz3.ab3@1856>   !basic
000201A0 <AmiBlitz3.ab3@1857>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
000201B0 <AmiBlitz3.ab3@1859>   deflibNameP.l = Peek.l(?deflib)
000201BA <AmiBlitz3.ab3@1860>   If deflibNameP
000201EC <AmiBlitz3.ab3@1861>     If Peek.s(deflibNameP)<>""
00020236 <AmiBlitz3.ab3@1862>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
0002023C <AmiBlitz3.ab3@1863>     Else
00020276 <AmiBlitz3.ab3@1864>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
0002027C <AmiBlitz3.ab3@1866>   Else
000202B6 <AmiBlitz3.ab3@1867>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
000202F0 <AmiBlitz3.ab3@1868>     error{"INTERNAL: Invalid deflib name pointer!"}
0002030E <AmiBlitz3.ab3@1870>   !asm
00020314 <AmiBlitz3.ab3@1875>   MOVE.l #str_path_userlibs,D1
00020316 <AmiBlitz3.ab3@1876>   MOVEQ.l #-$02,D2
0002031C <AmiBlitz3.ab3@1877>   MOVEA.l _dosbase,A6
00020320 <AmiBlitz3.ab3@1878>   JSR _Lock(A6)
00020322 <AmiBlitz3.ab3@1879>   MOVE.l D0,D7
00020326 <AmiBlitz3.ab3@1880>    BEQ.w exit_get_libraries
00020328 <AmiBlitz3.ab3@1881>   MOVE.l D7,D1
0002032E <AmiBlitz3.ab3@1882>   MOVE.l #ptr_parameterstore,D2
00020332 <AmiBlitz3.ab3@1883>   JSR _Examine(A6)
00020334 <AmiBlitz3.ab3@1884>   TST.l D0
00020338 <AmiBlitz3.ab3@1885>   BEQ.w unlock_and_exit_get_libraries
0002033E <AmiBlitz3.ab3@1886>   MOVE.l fib_DirEntryType,D0
00020342 <AmiBlitz3.ab3@1887>   BMI.w unlock_and_exit_get_libraries
00020344 <AmiBlitz3.ab3@1892>     MOVE.l D7,D1
0002034A <AmiBlitz3.ab3@1893>     MOVE.l #ptr_parameterstore,D2
00020350 <AmiBlitz3.ab3@1894>     MOVEA.l _dosbase,A6
00020354 <AmiBlitz3.ab3@1895>     JSR _ExNext(A6)
00020356 <AmiBlitz3.ab3@1896>     TST.l D0
0002035A <AmiBlitz3.ab3@1897>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00020360 <AmiBlitz3.ab3@1899>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020364 <AmiBlitz3.ab3@1900>     BPL.w scan_libsdrawer                                  ; skip directories
0002036A <AmiBlitz3.ab3@1902>     LEA fib_FileName,A0                                    ; pruefen ob infofile
0002036E <AmiBlitz3.ab3@1903>     BSR.w check_for_infoextention
00020372 <AmiBlitz3.ab3@1904>     BEQ.w scan_libsdrawer
00020378 <AmiBlitz3.ab3@1906>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
0002037A <AmiBlitz3.ab3@1907>     MOVEQ.l #$26,D0
0002037C <AmiBlitz3.ab3@1908>     MOVEQ.l #$01,D1
00020382 <AmiBlitz3.ab3@1909>     MOVE.l mempool,a0
00020386 <AmiBlitz3.ab3@1910>     JSR _AllocPooled(a6)
0002038C <AmiBlitz3.ab3@1912>     MOVEA.l _dosbase,A6
0002038E <AmiBlitz3.ab3@1913>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020394 <AmiBlitz3.ab3@1916>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020396 <AmiBlitz3.ab3@1919>     MOVE.l (A0),D5
0002039A <AmiBlitz3.ab3@1920>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
0002039C <AmiBlitz3.ab3@1921>     MOVEA.l D5,A2
0002039E <AmiBlitz3.ab3@1922>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
000203A4 <AmiBlitz3.ab3@1925>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
000203A6 <AmiBlitz3.ab3@1928>       MOVEQ.l #$00,D0
000203A8 <AmiBlitz3.ab3@1929>       MOVE.b (A1)+,D0
000203AC <AmiBlitz3.ab3@1930>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
000203AE <AmiBlitz3.ab3@1931>       MOVEQ.l #$00,D1
000203B0 <AmiBlitz3.ab3@1932>       MOVE.b (A2)+,D1
000203B4 <AmiBlitz3.ab3@1933>        BEQ.w JL_0_371C
000203D6 <AmiBlitz3.ab3@1934>       !compare1                                            ;bsr.w tstalpha
000203DA <AmiBlitz3.ab3@1935>       BNE.w JL_0_3702
000203DE <AmiBlitz3.ab3@1936>       ANDI.w #$DF,D0
000203E0 <AmiBlitz3.ab3@1939>       EXG.l D0,D1
00020402 <AmiBlitz3.ab3@1940>       !compare1                                            ;bsr.w tstalpha
00020406 <AmiBlitz3.ab3@1941>       BNE.w JL_0_3710
0002040A <AmiBlitz3.ab3@1942>       ANDI.w #$DF,D0
0002040C <AmiBlitz3.ab3@1945>       EXG.l D0,D1
0002040E <AmiBlitz3.ab3@1946>       CMP.b D1,D0
00020412 <AmiBlitz3.ab3@1947>     BEQ.w JL_0_36E6
00020416 <AmiBlitz3.ab3@1948>     BCS.w JL_0_3722
00020418 <AmiBlitz3.ab3@1951>     MOVEA.l D5,A0
0002041C <AmiBlitz3.ab3@1952> BRA.w JL_0_36D6
0002041E <AmiBlitz3.ab3@1955>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020420 <AmiBlitz3.ab3@1956>     MOVE.l (A0),(A1)
00020422 <AmiBlitz3.ab3@1957>     MOVE.l A1,(A0)
00020424 <AmiBlitz3.ab3@1958>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020428 <AmiBlitz3.ab3@1959>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0002042E <AmiBlitz3.ab3@1960>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020430 <AmiBlitz3.ab3@1963>       MOVE.b (A0)+,(A1)+
00020434 <AmiBlitz3.ab3@1964>     BNE.w JL_0_3734
00020438 <AmiBlitz3.ab3@1965> BRA.w scan_libsdrawer
0002043A <AmiBlitz3.ab3@1968>   MOVE.l D7,D1
00020440 <AmiBlitz3.ab3@1969>   MOVEA.l _dosbase,A6
00020444 <AmiBlitz3.ab3@1970>   JSR _UnLock(A6)
00020446 <AmiBlitz3.ab3@1971>   MOVEQ.l #-$01,D0
00020448 <AmiBlitz3.ab3@1974> RTS
0002044A <AmiBlitz3.ab3@1977>   MOVE.l D7,D1
00020450 <AmiBlitz3.ab3@1978>   MOVEA.l _dosbase,A6
00020454 <AmiBlitz3.ab3@1979>   JSR _UnLock(A6)
00020456 <AmiBlitz3.ab3@1980>   MOVEQ.l #$00,D0
00020458 <AmiBlitz3.ab3@1981> RTS
0002045E <AmiBlitz3.ab3@1985>   MOVEA.l _execbase,A6
00020464 <AmiBlitz3.ab3@1986>   MOVEA.l ptr_userlibs_list,A2
0002046A <AmiBlitz3.ab3@1987>   CLR.l ptr_userlibs_list
0002046E <AmiBlitz3.ab3@1990>     CMPA.w #$0,A2
00020472 <AmiBlitz3.ab3@1991>     BEQ.w exit_free_userlib
00020474 <AmiBlitz3.ab3@1992>       MOVEA.l A2,A1
00020476 <AmiBlitz3.ab3@1993>       MOVEQ.l #$26,D0
00020478 <AmiBlitz3.ab3@1994>       MOVEA.l (A2),A2
0002047E <AmiBlitz3.ab3@1995>       MOVE.l mempool,a0
00020484 <AmiBlitz3.ab3@1996>       MOVEA.l _execbase,A6
00020488 <AmiBlitz3.ab3@1997>       JSR _FreePooled(A6)
0002048C <AmiBlitz3.ab3@1998> BRA.w loop_free_userlib
0002048E <AmiBlitz3.ab3@2001> RTS
00020490 <AmiBlitz3.ab3@2004> pass:  Dc.w 0                                             ; smallpass org source
00020492 <AmiBlitz3.ab3@2005> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020498 <AmiBlitz3.ab3@2009>   MOVE.l A7,errstack                                      ;startcompile
0002049E <AmiBlitz3.ab3@2018>   CLR.l reqmode
000204A8 <AmiBlitz3.ab3@2020>   MOVE.l #Aclearallvars,errcont
000204B2 <AmiBlitz3.ab3@2021>   MOVE.l #concomstack,concomsp
000204B6 <AmiBlitz3.ab3@2029>   MOVE.w #1450,D0
000204B8 <AmiBlitz3.ab3@2030>   LSR.w #3,D0
000204BA <AmiBlitz3.ab3@2031>   SUBQ.w #7,D0                                             ; 173
000204C0 <AmiBlitz3.ab3@2032>   MOVE.w D0,progressbar_width
000204C2 <AmiBlitz3.ab3@2033>   SWAP D0
000204C4 <AmiBlitz3.ab3@2034>   CLR.w D0
000204CA <AmiBlitz3.ab3@2035>   MOVE.l numlines,d1
000204CE <AmiBlitz3.ab3@2036>   DIVU.l d1,d0                                             ; progressbar_width / numlines
000204D0 <AmiBlitz3.ab3@2038>   TST.w D0
000204D4 <AmiBlitz3.ab3@2039>   BNE.w JL_0_37C0
000204D6 <AmiBlitz3.ab3@2040>   MOVEQ.l #-$01,D0
000204DC <AmiBlitz3.ab3@2043>   MOVE.w D0,progress_per_line
000204E4 <AmiBlitz3.ab3@2052>   BTST #$7,use_debugger
000204E8 <AmiBlitz3.ab3@2054>   BNE 'debugon
000204EE <AmiBlitz3.ab3@2055>   CLR.w debugmode
000204F2 <AmiBlitz3.ab3@2056> BRA.b 'debugoff
000204F8 <AmiBlitz3.ab3@2059>   SNE debugmode
00020530 <AmiBlitz3.ab3@2067>   !ComData_SetB{comByte_DebugMode,debugmode}
00020536 <AmiBlitz3.ab3@2070>   CLR.w dirmode                                            ;direct mode flag
0002053C <AmiBlitz3.ab3@2071>   CLR.w ezerr                                              ;quiet error
00020542 <AmiBlitz3.ab3@2072>   CLR.l currentfunction
00020548 <AmiBlitz3.ab3@2073>   CLR.w connest
0002054E <AmiBlitz3.ab3@2074>   CLR.w varmode
00020554 <AmiBlitz3.ab3@2075>   CLR.w proceduremode
0002055A <AmiBlitz3.ab3@2076>   CLR.w ininclude
00020560 <AmiBlitz3.ab3@2077>   CLR.w intstring
00020566 <AmiBlitz3.ab3@2078>   CLR.w pass
0002056E <AmiBlitz3.ab3@2079>   MOVE.w #0,compiler_job
00020574 <AmiBlitz3.ab3@2080>   CLR.l funcscanon
0002057A <AmiBlitz3.ab3@2089>   CLR.l funcscanon
0002057E <AmiBlitz3.ab3@2090>   BSR.w compileall
00020584 <AmiBlitz3.ab3@2091> 
0002058A <AmiBlitz3.ab3@2092>   TST.l errorcounter
0002058E <AmiBlitz3.ab3@2093>   BEQ _skiperrorstop
00020590 <AmiBlitz3.ab3@2094>   RTS
00020596 <AmiBlitz3.ab3@2097>   MOVE.w dontwrite,d0
0002059A <AmiBlitz3.ab3@2098>   CMP.w #1,d0
0002059E <AmiBlitz3.ab3@2099>   BNE 'l3
000205A4 <AmiBlitz3.ab3@2100>   TST.l errorcounter
000205A8 <AmiBlitz3.ab3@2101>   BNE 'l3
000205AE <AmiBlitz3.ab3@2102>   CLR.w dontwrite
000205B2 <AmiBlitz3.ab3@2103>   BSR compileall                                           ;if a function is not found
000205B8 <AmiBlitz3.ab3@2104>   ADDQ.w #1,pass
000205F6 <AmiBlitz3.ab3@2109>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
000205FA <AmiBlitz3.ab3@2110>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020600 <AmiBlitz3.ab3@2111>   LEA firstproc,a0
00020606 <AmiBlitz3.ab3@2112>   CLR.l savefuncspace
00020608 <AmiBlitz3.ab3@2113>   MOVE.l (a0),d0
0002060A <AmiBlitz3.ab3@2117>     MOVE.l d0,a0
0002060E <AmiBlitz3.ab3@2118>     BEQ 'out
00020612 <AmiBlitz3.ab3@2119>     TST.b isfunc(a0)
00020616 <AmiBlitz3.ab3@2120>     BNE 'nex
0002061A <AmiBlitz3.ab3@2121>     MOVEM.l d2/a6/a0,-(a7)
0002061C <AmiBlitz3.ab3@2123>     MOVEQ #0,d0
00020620 <AmiBlitz3.ab3@2124>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020624 <AmiBlitz3.ab3@2125>     SUB.w #$21+#funcentry_extend,d0
00020628 <AmiBlitz3.ab3@2126>     ADD.w #16,d0
0002062E <AmiBlitz3.ab3@2127>     MOVE.l #$10000,d1
00020630 <AmiBlitz3.ab3@2128>     MOVE.l d0,d2
00020636 <AmiBlitz3.ab3@2129>     MOVEA.l _execbase,A6
0002063A <AmiBlitz3.ab3@2130>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0002063C <AmiBlitz3.ab3@2131>     MOVE.l d0,a1
00020640 <AmiBlitz3.ab3@2132>     MOVE.l d2,4(a1)
00020646 <AmiBlitz3.ab3@2133>     MOVE.l unusedfunc,(a1)
0002064C <AmiBlitz3.ab3@2134>     MOVE.l d0,unusedfunc
00020650 <AmiBlitz3.ab3@2135>     MOVEM.l (a7)+,a6/a0/d2
00020654 <AmiBlitz3.ab3@2136>     MOVE.l isfunc+1(a0),d0
00020656 <AmiBlitz3.ab3@2137>     ADDQ.l #6,d0
0002065C <AmiBlitz3.ab3@2138>     ADD.l d0,savefuncspace
00020660 <AmiBlitz3.ab3@2141>     MOVE.l d0,8(a1)
00020664 <AmiBlitz3.ab3@2142>     LEA 12(a1),a1
00020666 <AmiBlitz3.ab3@2143>     MOVE.l a0,-(a7)
0002066A <AmiBlitz3.ab3@2144>     LEA $21+#funcentry_extend(a0),a0
0002066C <AmiBlitz3.ab3@2147>       MOVE.b (a0)+,(a1)+
00020670 <AmiBlitz3.ab3@2148>     BNE 'l1
00020672 <AmiBlitz3.ab3@2149>     MOVE.l (a7)+,a0
00020674 <AmiBlitz3.ab3@2152>     MOVE.l (a0),d0
00020678 <AmiBlitz3.ab3@2153> BRA 'lr1
00020680 <AmiBlitz3.ab3@2156>   BTST #$7,make_smallestcode
00020684 <AmiBlitz3.ab3@2157>   BEQ.b JL_0_3844                                           ;optimize for executable
0002068A <AmiBlitz3.ab3@2158>   CLR.l morememadd
0002068E <AmiBlitz3.ab3@2160>   BSR.w alloxadj
00020692 <AmiBlitz3.ab3@2161>   BEQ.w JL_0_388A
00020696 <AmiBlitz3.ab3@2164>   BSR.w compileall
0002069C <AmiBlitz3.ab3@2165>   ADDQ.w #1,pass
000206A2 <AmiBlitz3.ab3@2168>   MOVE.w dontwrite,D1
000206A6 <AmiBlitz3.ab3@2169>   BEQ.w JL_0_38A2
000206AA <AmiBlitz3.ab3@2189> BRA.w JL_0_3896
000206B2 <AmiBlitz3.ab3@2200>   MOVE.w #$FFFF,anyerrs
000206B6 <AmiBlitz3.ab3@2201> BRA.w JL_0_38A2
000206BA <AmiBlitz3.ab3@2204>   BSR.w alloxinc                                          ;increase all by 50%
000206BE <AmiBlitz3.ab3@2205>   BEQ.w Aclearallvars
000206C2 <AmiBlitz3.ab3@2206> BRA.w JL_0_3824
000206C6 <AmiBlitz3.ab3@2218> BRA.w JL_0_38A6                                            ;???????
000206CC <AmiBlitz3.ab3@2222>   JSR freereps
000206D2 <AmiBlitz3.ab3@2223>   JSR freesels
000206D8 <AmiBlitz3.ab3@2224>   JSR AJL_0_6DF2
000206DE <AmiBlitz3.ab3@2225>   JSR freepends
000206E4 <AmiBlitz3.ab3@2226>   JSR freeifs
000206EA <AmiBlitz3.ab3@2227>   JSR AJL_0_C188
000206F0 <AmiBlitz3.ab3@2228>   JSR AJL_0_C15C
000206F6 <AmiBlitz3.ab3@2229>   JSR AJL_0_D9BC
000206FC <AmiBlitz3.ab3@2232> JMP cleartemplabel
00020700 <AmiBlitz3.ab3@2235> mempool2:  Dc.l 0
00020706 <AmiBlitz3.ab3@2239>   JSR Aclearcache
0002070E <AmiBlitz3.ab3@2241>   BTST #$7,use_debugger
00020712 <AmiBlitz3.ab3@2243>   BNE 'debugon
00020718 <AmiBlitz3.ab3@2244>   CLR.w debugmode
0002071C <AmiBlitz3.ab3@2245> BRA.b 'debugoff
00020722 <AmiBlitz3.ab3@2248>   SNE debugmode
0002075A <AmiBlitz3.ab3@2253>   !ComData_SetB{comByte_DebugMode,debugmode}
00020760 <AmiBlitz3.ab3@2255>   LEA regtable,a0
00020762 <AmiBlitz3.ab3@2256>   MOVEQ #10,d0
00020764 <AmiBlitz3.ab3@2259>     CLR.l (a0)+
00020768 <AmiBlitz3.ab3@2260>   DBF d0,'l1
0002076E <AmiBlitz3.ab3@2262>   LEA includetemp2,a0
00020770 <AmiBlitz3.ab3@2263>   CLR.b (a0)
0002077A <AmiBlitz3.ab3@2264>   MOVE.l #7,maxregs
00020780 <AmiBlitz3.ab3@2265>   CLR.w debugnest
00020786 <AmiBlitz3.ab3@2266>   CLR.b funcparloop
0002078C <AmiBlitz3.ab3@2267>   CLR.b nostringopt
00020792 <AmiBlitz3.ab3@2268>   CLR.b firsttime
00020798 <AmiBlitz3.ab3@2269>   CLR.l lastdestpointer
0002079E <AmiBlitz3.ab3@2270>   CLR.l lastwritedat
000207A4 <AmiBlitz3.ab3@2271>   CLR.l prevwritedat
000207AA <AmiBlitz3.ab3@2272>   CLR.l includeline
000207B0 <AmiBlitz3.ab3@2273>   CLR.b incnif
000207B6 <AmiBlitz3.ab3@2274>   CLR.b formode
000207BC <AmiBlitz3.ab3@2275>   CLR.b funccall
000207C2 <AmiBlitz3.ab3@2276>   CLR.w objectcount
000207C8 <AmiBlitz3.ab3@2277>   CLR.b resdisable
000207CE <AmiBlitz3.ab3@2278>   CLR.b developobject
000207D4 <AmiBlitz3.ab3@2279>   CLR.b optistring
000207DA <AmiBlitz3.ab3@2280>   CLR.b optistring2
000207E0 <AmiBlitz3.ab3@2281>   CLR.b optiarray
000207E6 <AmiBlitz3.ab3@2282>   CLR.b quickadd
000207EC <AmiBlitz3.ab3@2283>   CLR.w newmode
000207F2 <AmiBlitz3.ab3@2284>   CLR.w mode
000207F8 <AmiBlitz3.ab3@2285>   CLR.w string1
000207FE <AmiBlitz3.ab3@2286>   CLR.b fastfunc
00020804 <AmiBlitz3.ab3@2287>   CLR.w load_var_size
0002080A <AmiBlitz3.ab3@2288>   CLR.w load_var_reg
00020810 <AmiBlitz3.ab3@2289>   CLR.l load_var_addr
00020816 <AmiBlitz3.ab3@2290>   CLR.w imm_size
0002081C <AmiBlitz3.ab3@2291>   CLR.w imm_reg
00020822 <AmiBlitz3.ab3@2292>   CLR.l imm_addr
00020828 <AmiBlitz3.ab3@2293>   CLR.b _dcb
0002082E <AmiBlitz3.ab3@2294>   CLR.l nohunkoffset
00020834 <AmiBlitz3.ab3@2295>   CLR.b peekaddrsize
0002083A <AmiBlitz3.ab3@2296>   CLR.b typecheck
00020840 <AmiBlitz3.ab3@2297>   CLR.b declare2
00020846 <AmiBlitz3.ab3@2298>   CLR.b declare
0002084C <AmiBlitz3.ab3@2299>   CLR.l myoline                                          ;check
00020852 <AmiBlitz3.ab3@2300>   CLR.l myline                                          ;check
00020858 <AmiBlitz3.ab3@2301>   CLR.b newvariable
0002085E <AmiBlitz3.ab3@2302>   CLR.b saved0
00020864 <AmiBlitz3.ab3@2303>   CLR.l bsssize
0002086A <AmiBlitz3.ab3@2304>   CLR.l chipsize
00020870 <AmiBlitz3.ab3@2305>   CLR.b infunctioncode
00020876 <AmiBlitz3.ab3@2306>   CLR.l errorcounter
00020880 <AmiBlitz3.ab3@2307>   MOVE.l #-1,bssstart
0002088A <AmiBlitz3.ab3@2308>   MOVE.l #-1,bssend
00020894 <AmiBlitz3.ab3@2309>   MOVE.l #-1,chipstart
0002089E <AmiBlitz3.ab3@2310>   MOVE.l #-1,chipend
000208A6 <AmiBlitz3.ab3@2311>   MOVE.w #0,bssmode
000208AC <AmiBlitz3.ab3@2312>   CLR.w a2offset
000208B2 <AmiBlitz3.ab3@2313>   CLR.w fast
000208B8 <AmiBlitz3.ab3@2314>   CLR.w fpu
000208BE <AmiBlitz3.ab3@2315>   CLR.b iee
000208C4 <AmiBlitz3.ab3@2316>   CLR.w newsyntax
000208C8 <AmiBlitz3.ab3@2317>   BSR.w JL_0_38A6
000208CE <AmiBlitz3.ab3@2318>   JSR AJL_0_7962
000208D4 <AmiBlitz3.ab3@2319>   JSR frallvars
000208DA <AmiBlitz3.ab3@2320>   JSR fralltypes
000208E0 <AmiBlitz3.ab3@2321>   JSR freemacs
000208E6 <AmiBlitz3.ab3@2322>   JSR clearfunctionlist
000208EC <AmiBlitz3.ab3@2323>   TST.w pass
000208F2 <AmiBlitz3.ab3@2325>   JSR clearlabels
000208F8 <AmiBlitz3.ab3@2326>   JSR clearhash
000208FE <AmiBlitz3.ab3@2329>   LEA devo,a0
00020902 <AmiBlitz3.ab3@2330>   MOVEM.l a0-a6/d0-d7,-(a7)
00020908 <AmiBlitz3.ab3@2331>   LEA ptr_parameterstore,a1
0002090A <AmiBlitz3.ab3@2334>     MOVE.b (a0)+,(a1)+
0002090E <AmiBlitz3.ab3@2335>   BNE 'l1b
00020910 <AmiBlitz3.ab3@2336>   MOVEQ #13,d2
00020916 <AmiBlitz3.ab3@2337>   JSR findlabel2
0002091A <AmiBlitz3.ab3@2338>   BNE 'd
0002091E <AmiBlitz3.ab3@2339>   CLR.l 8(a2)
00020922 <AmiBlitz3.ab3@2342>   MOVEM.l (a7)+,a0-a6/d0-d7
0002094C <AmiBlitz3.ab3@2343>   !basic
000209C0 <AmiBlitz3.ab3@2344>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000209DE <AmiBlitz3.ab3@2345>   !asm
000209E4 <AmiBlitz3.ab3@2346>   CLR.b returncode
000209EA <AmiBlitz3.ab3@2347> JMP freeprocvs
000209F0 <AmiBlitz3.ab3@2351>   MOVE.l #bssstore-labelhash,d0
000209F2 <AmiBlitz3.ab3@2352>   ASR.l #2,d0
000209F8 <AmiBlitz3.ab3@2353>   LEA labelhash,a0
000209FA <AmiBlitz3.ab3@2356>     CLR.l (a0)+
000209FC <AmiBlitz3.ab3@2357>     SUBQ.l #1,d0
00020A00 <AmiBlitz3.ab3@2358>   BNE.s 'l10
00020A06 <AmiBlitz3.ab3@2360>   LEA labelbase,a1
00020A08 <AmiBlitz3.ab3@2361>   MOVE.l (a1),d0
00020A0C <AmiBlitz3.ab3@2362>   BEQ 'l11
00020A0E <AmiBlitz3.ab3@2365>     MOVE.l d0,a1
00020A12 <AmiBlitz3.ab3@2366>     TST.l 4(a1)
00020A16 <AmiBlitz3.ab3@2367>     BEQ 'l29
00020A1A <AmiBlitz3.ab3@2368>     LEA $13(a1),a0
00020A1C <AmiBlitz3.ab3@2369>     MOVEQ #0,d0
00020A1E <AmiBlitz3.ab3@2370>     MOVEQ #0,d1
00020A20 <AmiBlitz3.ab3@2373>       MOVE.b (a0)+,d1
00020A24 <AmiBlitz3.ab3@2374>       BEQ 'l12
00020A2A <AmiBlitz3.ab3@2375>       !hashalgo
00020A2E <AmiBlitz3.ab3@2376> BRA 'l13
00020A34 <AmiBlitz3.ab3@2379>     LEA labelhash,a0
00020A3A <AmiBlitz3.ab3@2380>     AND.l #hashsize,d0
00020A3C <AmiBlitz3.ab3@2381>      ASL.l #2,d0
00020A40 <AmiBlitz3.ab3@2382>     MOVE.l 0(a0,d0),d1                                     ;*4
00020A44 <AmiBlitz3.ab3@2383>     MOVE.l d1,$c(a1)
00020A48 <AmiBlitz3.ab3@2384>     MOVE.l a1,0(a0,d0)
00020A4A <AmiBlitz3.ab3@2387>     MOVE.l (a1),d0
00020A4E <AmiBlitz3.ab3@2388>   BNE 'l21
00020A50 <AmiBlitz3.ab3@2391> RTS
00020A56 <AmiBlitz3.ab3@2395>   MOVEA.l lastrestype,A0
00020A58 <AmiBlitz3.ab3@2396>   MOVEA.l (A0),A2
00020A5A <AmiBlitz3.ab3@2397>   CLR.l (A0)
00020A60 <AmiBlitz3.ab3@2398> JMP freetypes
00020A66 <AmiBlitz3.ab3@2402>   MOVEA.l varbase,A3
00020A6C <AmiBlitz3.ab3@2403>   CLR.l varbase
00020A70 <AmiBlitz3.ab3@2406>   CMPA.w #$0,A3
00020A74 <AmiBlitz3.ab3@2407>   BEQ.w 'l20
00020A76 <AmiBlitz3.ab3@2408>   MOVEA.l A3,A1
00020A78 <AmiBlitz3.ab3@2409>   MOVEA.l (A3),A3
00020A7A <AmiBlitz3.ab3@2410>   MOVEQ.l #$00,D0
00020A7E <AmiBlitz3.ab3@2411>   MOVE.b $E+4(A1),D0
00020A84 <AmiBlitz3.ab3@2412>   MOVEA.l _execbase,A6
00020A8A <AmiBlitz3.ab3@2413>   MOVE.l mempool2,a0
00020A8E <AmiBlitz3.ab3@2414>   JSR _FreePooled(A6)
00020A92 <AmiBlitz3.ab3@2415> BRA.w 'l10
00020A94 <AmiBlitz3.ab3@2418> RTS
00020A9A <AmiBlitz3.ab3@2423>   LEA firstiff,A2
00020A9C <AmiBlitz3.ab3@2424>   MOVEQ.l #$0E,D2
00020AA2 <AmiBlitz3.ab3@2425> JMP freeslist
00020AA4 <AmiBlitz3.ab3@2431> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00020AA6 <AmiBlitz3.ab3@2432> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00020AAC <AmiBlitz3.ab3@2436>   CLR.w inmacro
00020AB2 <AmiBlitz3.ab3@2437>   ADDQ.l #1,globallinecount
00020AB8 <AmiBlitz3.ab3@2438>   CLR.b nostringopt
00020ABC <AmiBlitz3.ab3@2439>   BSR.w JL_0_3CA4
00020AC2 <AmiBlitz3.ab3@2440>   CLR.w instringon
00020AC8 <AmiBlitz3.ab3@2443>   TST.w ininclude
00020ACC <AmiBlitz3.ab3@2444>   BEQ.w JL_0_39B0
00020AD2 <AmiBlitz3.ab3@2445>   ADDQ.l #1,includeline
00020AD8 <AmiBlitz3.ab3@2446>     JSR ab3_WriteDebugFile
00020ADE <AmiBlitz3.ab3@2447>   JSR AJL_0_C09E
00020AE2 <AmiBlitz3.ab3@2448>   BEQ.w JL_0_39B0
00020AE8 <AmiBlitz3.ab3@2449>   MOVE.w ininclude,D0
00020AEC <AmiBlitz3.ab3@2450>   CMP.w #$4,D0
00020AF0 <AmiBlitz3.ab3@2451>   BCC.w JL_0_39AC
00020AF2 <AmiBlitz3.ab3@2452>   ADD.w D0,D0
00020AF8 <AmiBlitz3.ab3@2453>   LEA progress_per_line,A0
00020AFC <AmiBlitz3.ab3@2454>   MOVE.w $0(A0,D0.W),D2
00020B00 <AmiBlitz3.ab3@2455>   CMP.w progressbar_width(PC),D2
00020B04 <AmiBlitz3.ab3@2456>   BCC.w JL_0_39AC
00020B08 <AmiBlitz3.ab3@2457>   ADDQ.w #1,$0(A0,D0.W)
00020B0A <AmiBlitz3.ab3@2458>   LSR.w #1,D0
00020B0C <AmiBlitz3.ab3@2459>   MOVE.l d0,d1
00020B0E <AmiBlitz3.ab3@2460>   EXT.l d1
00020B10 <AmiBlitz3.ab3@2461>   MOVE.l d2,d0
00020B12 <AmiBlitz3.ab3@2462>   EXT.l d0                                                 ;d0=x,d1=y
00020B18 <AmiBlitz3.ab3@2464>   JSR update_progressbar
00020B1A <AmiBlitz3.ab3@2467>   MOVEQ.l #-$01,D0
00020B1C <AmiBlitz3.ab3@2468> RTS
00020B22 <AmiBlitz3.ab3@2472>   MOVE.l titleat,D0
00020B24 <AmiBlitz3.ab3@2473>   MOVEQ.l #$00,D1
00020B2A <AmiBlitz3.ab3@2474>   MOVE.w progress_per_line,D1
00020B2C <AmiBlitz3.ab3@2475>   ADD.l D1,D0
00020B2E <AmiBlitz3.ab3@2476>   MOVE.l D0,D1
00020B30 <AmiBlitz3.ab3@2477>   SWAP D0
00020B36 <AmiBlitz3.ab3@2478>   CMP.w titleat,D0
00020B3A <AmiBlitz3.ab3@2479>    BEQ.w JL_0_39E4
00020B3C <AmiBlitz3.ab3@2483>   EXT.l d0
00020B3E <AmiBlitz3.ab3@2484>   MOVE.l d1,-(a7)
00020B46 <AmiBlitz3.ab3@2487>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00020B4C <AmiBlitz3.ab3@2488>   JSR update_progressbar
00020B54 <AmiBlitz3.ab3@2489>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00020B56 <AmiBlitz3.ab3@2493>   MOVE.l (a7)+,d1
00020B5C <AmiBlitz3.ab3@2496>   MOVE.l D1,titleat
00020B62 <AmiBlitz3.ab3@2497>   ADDQ.l #1,linenumat
00020B68 <AmiBlitz3.ab3@2498>   CLR.w linedone
00020B6E <AmiBlitz3.ab3@2499>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00020B74 <AmiBlitz3.ab3@2501>   SUBQ.l #1,numlines2
00020B78 <AmiBlitz3.ab3@2502>    BEQ.w JL_0_3A12
00020B7E <AmiBlitz3.ab3@2503>   MOVEA.l sourceline,A0
00020B80 <AmiBlitz3.ab3@2504>   MOVEA.l (A0),A0
00020B86 <AmiBlitz3.ab3@2505>   MOVE.l A0,sourceline
00020B8A <AmiBlitz3.ab3@2506>   LEA $9(A0),A5
00020B8C <AmiBlitz3.ab3@2509> RTS
00020B8E <AmiBlitz3.ab3@2513>   MOVE.w D0,-(A7)
00020B90 <AmiBlitz3.ab3@2514>   MOVEQ.l #$03,D0
00020B92 <AmiBlitz3.ab3@2517>     MOVE.w D1,D2
00020B96 <AmiBlitz3.ab3@2518>     ANDI.w #$F,D2
00020B9A <AmiBlitz3.ab3@2519>     ADDI.w #$30,D2
00020B9E <AmiBlitz3.ab3@2520>     CMP.w #$3A,D2
00020BA2 <AmiBlitz3.ab3@2521>      BCS.w JL_0_3A2C
00020BA4 <AmiBlitz3.ab3@2522>     ADDQ.w #7,D2
00020BA8 <AmiBlitz3.ab3@2525>     MOVE.b D2,$0(A0,D0.W)
00020BAA <AmiBlitz3.ab3@2526>     LSR.w #4,D1
00020BAE <AmiBlitz3.ab3@2527>   DBF D0,JL_0_3A18
00020BB0 <AmiBlitz3.ab3@2529>   MOVE.w (A7)+,D0
00020BB2 <AmiBlitz3.ab3@2530> RTS
00020BB8 <AmiBlitz3.ab3@2540>   MOVE.w skipcode,D1
00020BBC <AmiBlitz3.ab3@2541>   BNE.w JL_0_3A46
00020BBE <AmiBlitz3.ab3@2542> RTS
00020BC0 <AmiBlitz3.ab3@2545>   MOVE.l A5,-(A7)
00020BC2 <AmiBlitz3.ab3@2546>   MOVEQ.l #$3A,D1                                          ;':'
00020BC4 <AmiBlitz3.ab3@2547>   MOVEQ.l #$21,D2                                          ;'!'
00020BC6 <AmiBlitz3.ab3@2548>   MOVEQ.l #$3B,D3                                          ;';'
00020BC8 <AmiBlitz3.ab3@2549>   MOVEQ.l #$22,D4                                          ;'"'
00020BCA <AmiBlitz3.ab3@2552>   MOVE.b (A5)+,D0
00020BCE <AmiBlitz3.ab3@2553>    BEQ.w JL_0_3CA0
00020BD2 <AmiBlitz3.ab3@2554>    BPL.w JL_0_3A60
00020BD4 <AmiBlitz3.ab3@2555>   MOVE.b (A5)+,D0
00020BD8 <AmiBlitz3.ab3@2556> BRA.w JL_0_3A50
00020BDA <AmiBlitz3.ab3@2559>   CMP.b D4,D0
00020BDE <AmiBlitz3.ab3@2560>    BNE.w JL_0_3A82
00020BE0 <AmiBlitz3.ab3@2563>   MOVE.b (A5)+,D0
00020BE4 <AmiBlitz3.ab3@2564>    BEQ.w notqerr
00020BE8 <AmiBlitz3.ab3@2570>   CMP.b #$22,D0
00020BEC <AmiBlitz3.ab3@2571>    BNE.w JL_0_3A66
00020BF0 <AmiBlitz3.ab3@2572> BRA.w JL_0_3A50
00020BF2 <AmiBlitz3.ab3@2575>   CMP.b D1,D0
00020BF6 <AmiBlitz3.ab3@2576>    BEQ.w JL_0_3CA0
00020BF8 <AmiBlitz3.ab3@2577>   CMP.b D3,D0
00020BFC <AmiBlitz3.ab3@2578>    BEQ.w JL_0_3CA0
00020BFE <AmiBlitz3.ab3@2581>   CMP.b D2,D0
00020C02 <AmiBlitz3.ab3@2582>    BNE.w JL_0_3A50
00020C0A <AmiBlitz3.ab3@2583>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
00020C0C <AmiBlitz3.ab3@2584>   MOVEA.l A5,A3
00020C12 <AmiBlitz3.ab3@2585>    JSR getparameter2
00020C16 <AmiBlitz3.ab3@2586>    BNE.w JL_0_3AAC
00020C1C <AmiBlitz3.ab3@2587> JMP syntaxerr
00020C26 <AmiBlitz3.ab3@2592>    MOVE.w oldqflag,instringon
00020C2C <AmiBlitz3.ab3@2593>   MOVEA.l lastsourcepos,A5
00020C32 <AmiBlitz3.ab3@2594>    JSR findmac                                             ;find macro
00020C36 <AmiBlitz3.ab3@2595>    BEQ.w JL_0_3ABE
00020C3C <AmiBlitz3.ab3@2596> JMP nomacerr
00020C42 <AmiBlitz3.ab3@2599>   TST.b debugmode
00020C46 <AmiBlitz3.ab3@2600>   BEQ 'sk1
00020C4A <AmiBlitz3.ab3@2601>   MOVE.w #$4e71,d1
00020C50 <AmiBlitz3.ab3@2602>   JSR writeword
00020C52 <AmiBlitz3.ab3@2603>   MOVE.l a5,-(a7)
00020C54 <AmiBlitz3.ab3@2604>   MOVE.l a3,a5
00020C56 <AmiBlitz3.ab3@2605>   SUBQ.l #1,a5
00020C5E <AmiBlitz3.ab3@2606>   MOVE.w #$0,inmacro
00020C62 <AmiBlitz3.ab3@2607>   BSR debugstuffa
00020C6A <AmiBlitz3.ab3@2608>   MOVE.w #$FFFF,inmacro
00020C6C <AmiBlitz3.ab3@2609>   MOVE.l (a7)+,a5
00020C70 <AmiBlitz3.ab3@2610>   MOVE.w #$4e71,d1
00020C76 <AmiBlitz3.ab3@2611>   JSR writeword
00020C78 <AmiBlitz3.ab3@2614>   MOVEA.l A5,A4
00020C7C <AmiBlitz3.ab3@2617>    CMP.b #" ",(a4)+
00020C80 <AmiBlitz3.ab3@2618>     BEQ 'l5a
00020C82 <AmiBlitz3.ab3@2619>      SUBQ.l#1,a4
00020C86 <AmiBlitz3.ab3@2620>      CMP.b #",",(a4)
00020C8A <AmiBlitz3.ab3@2621>     BEQ JL_0_3AEA
00020C8C <AmiBlitz3.ab3@2624>   MOVEQ.l #$00,D4
00020C92 <AmiBlitz3.ab3@2625>   TST.b newsyntax
00020C96 <AmiBlitz3.ab3@2626>   BEQ 'l10b
00020C9A <AmiBlitz3.ab3@2627>   MOVEM.l a0/d0,-(a7)
00020C9E <AmiBlitz3.ab3@2628>   MOVE.l 4(a2),a0
00020CA2 <AmiBlitz3.ab3@2629>   MOVE.w 8(a2),d0
00020CA6 <AmiBlitz3.ab3@2632>   CMP.b #"`",(a0)+
00020CAA <AmiBlitz3.ab3@2633>   BEQ 'x1
00020CAC <AmiBlitz3.ab3@2634>   SUBQ.w #1,d0
00020CB0 <AmiBlitz3.ab3@2635>   BNE 'x2
00020CB4 <AmiBlitz3.ab3@2636> BRA 'x3
00020CB8 <AmiBlitz3.ab3@2639>   MOVEM.l (a7)+,a0/d0
00020CBC <AmiBlitz3.ab3@2640> BRA 'l10
00020CC0 <AmiBlitz3.ab3@2643>   MOVEM.l (a7)+,a0/d0
00020CC4 <AmiBlitz3.ab3@2644> BRA JL_0_3AEA
00020CC8 <AmiBlitz3.ab3@2647>   CMPI.b #"{",(A4)
00020CCC <AmiBlitz3.ab3@2648>    BNE.w JL_0_3AEA
00020CCE <AmiBlitz3.ab3@2652>   ADDQ.l #1,a4
00020CD2 <AmiBlitz3.ab3@2655>     CMP.b #" ",(a4)
00020CD6 <AmiBlitz3.ab3@2656>     BEQ 'l5
00020CDA <AmiBlitz3.ab3@2657>     MOVEM.l a0/d0,-(a7)
00020CE0 <AmiBlitz3.ab3@2658>     CLR.b exmac
00020CE6 <AmiBlitz3.ab3@2659>     LEA chartab,a0
00020CE8 <AmiBlitz3.ab3@2660>     MOVEQ #0,d0
00020CEA <AmiBlitz3.ab3@2661>     MOVE.b (a4),d0
00020CEE <AmiBlitz3.ab3@2662>     BMI 'm1
00020CF2 <AmiBlitz3.ab3@2663>     TST.b 0(a0,d0)
00020CF6 <AmiBlitz3.ab3@2664>     BEQ 'm1
00020CFC <AmiBlitz3.ab3@2665>     TST.b newsyntax
00020D00 <AmiBlitz3.ab3@2666>     BEQ 'ns1
00020D04 <AmiBlitz3.ab3@2667>     CMP.b #"#",d0
00020D08 <AmiBlitz3.ab3@2668>     BEQ 'm1
00020D0C <AmiBlitz3.ab3@2669>     CMP.b #"$",d0
00020D10 <AmiBlitz3.ab3@2670>     BEQ 'm1
00020D14 <AmiBlitz3.ab3@2671>     CMP.b #"-",d0
00020D18 <AmiBlitz3.ab3@2672>     BEQ 'm1
00020D1C <AmiBlitz3.ab3@2675>   CMP.b #",",d0
00020D20 <AmiBlitz3.ab3@2676>     BEQ 'm1
00020D24 <AmiBlitz3.ab3@2677>     CMP.b #"{",d0
00020D28 <AmiBlitz3.ab3@2678>     BNE 'm1b
00020D2A <AmiBlitz3.ab3@2679>     ADDQ.l #1,a4
00020D2E <AmiBlitz3.ab3@2680> BRA 'm1
00020D34 <AmiBlitz3.ab3@2683>   TST.b newsyntax
00020D38 <AmiBlitz3.ab3@2684>     BEQ 'm1
00020D40 <AmiBlitz3.ab3@2685>     MOVE.b #1,exmac
00020D44 <AmiBlitz3.ab3@2688>   MOVEM.l (a7)+,a0/d0
00020D4A <AmiBlitz3.ab3@2689>     TST.b exmac
00020D4E <AmiBlitz3.ab3@2690>     BNE JL_0_3AEA
00020D50 <AmiBlitz3.ab3@2697>   TST.b (a4)
00020D54 <AmiBlitz3.ab3@2698>   BEQ JL_0_3AEA
00020D5A <AmiBlitz3.ab3@2701>   MOVEA.l ptr_macrobuffer_begin,A0
00020D5C <AmiBlitz3.ab3@2704>   ADDQ.w #1,D4
00020D5E <AmiBlitz3.ab3@2705>   MOVE.l A4,(A0)
00020D62 <AmiBlitz3.ab3@2706>   CLR.w 4(a0)
00020D66 <AmiBlitz3.ab3@2707>    BSR.w JL_0_3CC6
00020D68 <AmiBlitz3.ab3@2709>   ADDQ.l #4,a0
00020D6A <AmiBlitz3.ab3@2713>   SUBQ.w #1,(a0)+
00020D6E <AmiBlitz3.ab3@2714>   CMP.b #$7D,D0
00020D72 <AmiBlitz3.ab3@2715>   BEQ 'l10
00020D74 <AmiBlitz3.ab3@2716>   TST.b d0
00020D78 <AmiBlitz3.ab3@2717>   BEQ 'l10
00020D7C <AmiBlitz3.ab3@2718> BRA JL_0_3AD0
00020D82 <AmiBlitz3.ab3@2722>   CLR.l sourceline3
00020D84 <AmiBlitz3.ab3@2723>   MOVEA.l A4,A5
00020D8A <AmiBlitz3.ab3@2726>   MOVE.w D4,numarg
00020D90 <AmiBlitz3.ab3@2733>   MOVE.l #$01,D1
00020D96 <AmiBlitz3.ab3@2734>   MOVEA.l _execbase,A6
00020D9C <AmiBlitz3.ab3@2735>   MOVE.l mempool,a0
00020DA2 <AmiBlitz3.ab3@2736>   MOVE.l macrobuffer_size,D0
00020DA8 <AmiBlitz3.ab3@2737>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00020DAC <AmiBlitz3.ab3@2738>   BGE 'l1m
00020DB2 <AmiBlitz3.ab3@2739>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00020DB8 <AmiBlitz3.ab3@2740>   MOVE.l d0,macrobuffer_size
00020DBC <AmiBlitz3.ab3@2743>   JSR _AllocPooled(a6)
00020DC6 <AmiBlitz3.ab3@2745>   MOVE.l myline,myoline
00020DC8 <AmiBlitz3.ab3@2748>   ADDQ.l #1,d0
00020DCE <AmiBlitz3.ab3@2749>   MOVE.l D0,myline
00020DD0 <AmiBlitz3.ab3@2750>   MOVEA.l D0,A1
00020DD6 <AmiBlitz3.ab3@2751>   MOVE.b #":",-1(a1)
00020DD8 <AmiBlitz3.ab3@2752>   MOVEA.l A1,A6
00020DDE <AmiBlitz3.ab3@2753>   ADDA.l macrobuffer_size,A6
00020DE0 <AmiBlitz3.ab3@2754>   MOVEA.l (A7)+,A0
00020DE2 <AmiBlitz3.ab3@2757>   CMPA.l A6,A1
00020DE6 <AmiBlitz3.ab3@2758>    BCC.w mbovererr
00020DE8 <AmiBlitz3.ab3@2759>   MOVE.b (A0)+,(a1)+
00020DEA <AmiBlitz3.ab3@2760>   CMPA.l A3,A0
00020DEE <AmiBlitz3.ab3@2761>    BCS.w JL_0_3B1E
00020DF0 <AmiBlitz3.ab3@2762>   SUBQ.w #1,A1
00020DF4 <AmiBlitz3.ab3@2763>   MOVE.w $8(A2),D1
00020DF8 <AmiBlitz3.ab3@2764>    BEQ.w JL_0_3C70
00020E00 <AmiBlitz3.ab3@2765>   MOVE.w $A(A2),macnum
00020E04 <AmiBlitz3.ab3@2766>   ADDQ.w #1,$A(A2)
00020E08 <AmiBlitz3.ab3@2767>   MOVEA.l $4(A2),A2
00020E0A <AmiBlitz3.ab3@2768>   SUBQ.w #1,D1
00020E10 <AmiBlitz3.ab3@2769>   CLR.b firstmline
00020E12 <AmiBlitz3.ab3@2772>     MOVEQ.l #$00,D0
00020E14 <AmiBlitz3.ab3@2773>     MOVE.b (A2)+,D0
00020E1A <AmiBlitz3.ab3@2774>     TST.b firstmline
00020E1E <AmiBlitz3.ab3@2775>     BNE 'c1
00020E22 <AmiBlitz3.ab3@2776>     CMP.b #$22,d0
00020E26 <AmiBlitz3.ab3@2777>     BNE 's1
00020E2E <AmiBlitz3.ab3@2778>     MOVE.b #1,firstmline
00020E32 <AmiBlitz3.ab3@2781>     CMP.b #":",d0
00020E36 <AmiBlitz3.ab3@2782>     BNE 'm1
00020E3E <AmiBlitz3.ab3@2783>     MOVE.b #1,firstmline
00020E42 <AmiBlitz3.ab3@2786>     CMP.b #";",d0
00020E46 <AmiBlitz3.ab3@2787>     BNE 'c1
00020E48 <AmiBlitz3.ab3@2790>     SUBQ.w #1,d1                                           ;filter out comment
00020E4A <AmiBlitz3.ab3@2791>     MOVE.b (a2)+,d0
00020E50 <AmiBlitz3.ab3@2792>     CMP.w #":@",-1(a2)
00020E54 <AmiBlitz3.ab3@2793>     BEQ 'c2
00020E56 <AmiBlitz3.ab3@2794>     TST.w d1
00020E5A <AmiBlitz3.ab3@2795>     BNE 'l1
00020E5E <AmiBlitz3.ab3@2796>   BRA JL_0_3C6C
00020E64 <AmiBlitz3.ab3@2799>     CMP.b #":",1(a2)
00020E68 <AmiBlitz3.ab3@2800>       BNE 'l1
00020E6A <AmiBlitz3.ab3@2801>       ADDQ #2,a2
00020E6C <AmiBlitz3.ab3@2802>       SUBQ #3,d1
00020E6E <AmiBlitz3.ab3@2803>       MOVE.b (a2)+,d0
00020E76 <AmiBlitz3.ab3@2804>       MOVE.b #1,firstmline
00020E7A <AmiBlitz3.ab3@2807>     CMP.b #"`",D0
00020E7E <AmiBlitz3.ab3@2808>      BNE.w JL_0_3C56
00020E80 <AmiBlitz3.ab3@2809>     SUBQ.w #1,D1
00020E82 <AmiBlitz3.ab3@2810>     MOVE.b (A2)+,D0
00020E86 <AmiBlitz3.ab3@2811>     CMP.w #$7B,D0
00020E8A <AmiBlitz3.ab3@2812>      BEQ.w JL_0_3BB6
00020E8E <AmiBlitz3.ab3@2813>     CMP.w #$40,D0
00020E92 <AmiBlitz3.ab3@2814>      BNE.w JL_0_3B82
00020E94 <AmiBlitz3.ab3@2815>     MOVEQ.l #$00,D2
00020E9A <AmiBlitz3.ab3@2816>     MOVE.w macnum,D2
00020E9C <AmiBlitz3.ab3@2817>     MOVEA.l A1,A0
00020E9E <AmiBlitz3.ab3@2818>     MOVE.w D1,-(A7)
00020EA4 <AmiBlitz3.ab3@2819>      JSR makelong
00020EA6 <AmiBlitz3.ab3@2820>     MOVEA.l A0,A1
00020EA8 <AmiBlitz3.ab3@2821>     MOVE.w (A7)+,D1
00020EAC <AmiBlitz3.ab3@2822>   BRA.w JL_0_3C6C
00020EB0 <AmiBlitz3.ab3@2825>     ORI.w #$20,D0
00020EB4 <AmiBlitz3.ab3@2826>     CMP.w #$7A,D0
00020EB8 <AmiBlitz3.ab3@2827>      BCS.w JL_0_3B94
00020EBE <AmiBlitz3.ab3@2828>   JMP ilconsterr
00020EC2 <AmiBlitz3.ab3@2831>     SUBI.w #$30,D0
00020EC6 <AmiBlitz3.ab3@2832>     CMP.w #$A,D0
00020ECA <AmiBlitz3.ab3@2833>      BCS.w JL_0_3BF2
00020ECE <AmiBlitz3.ab3@2834>     SUBI.w #$27,D0
00020ED2 <AmiBlitz3.ab3@2835>     CMP.w #$A,D0
00020ED6 <AmiBlitz3.ab3@2836>      BCC.w JL_0_3BB2
00020EDC <AmiBlitz3.ab3@2837>   JMP ilconsterr
00020EE0 <AmiBlitz3.ab3@2840>   BRA.w JL_0_3BF2
00020EE2 <AmiBlitz3.ab3@2843>     MOVE.l A5,-(A7)
00020EE6 <AmiBlitz3.ab3@2844>     MOVEM.l D1/A1-A2/A6,-(A7)
00020EE8 <AmiBlitz3.ab3@2845>     MOVEA.l A2,A5
00020EEE <AmiBlitz3.ab3@2846>      JSR AJL_0_BF6E
00020EF2 <AmiBlitz3.ab3@2847>     CMP.w #$7D,D0
00020EF6 <AmiBlitz3.ab3@2848>      BEQ.w JL_0_3BD2
00020EFC <AmiBlitz3.ab3@2849>   JMP syntaxerr
00020F00 <AmiBlitz3.ab3@2852>     MOVEM.l (A7)+,D1/A1-A2/A6
00020F02 <AmiBlitz3.ab3@2853>     MOVE.l A5,D2
00020F04 <AmiBlitz3.ab3@2854>     SUB.l A2,D2
00020F06 <AmiBlitz3.ab3@2855>     SUB.w D2,D1
00020F08 <AmiBlitz3.ab3@2856>     MOVEA.l A5,A2
00020F0E <AmiBlitz3.ab3@2857>     CLR.w instringon
00020F10 <AmiBlitz3.ab3@2858>     MOVEA.l (A7)+,A5
00020F12 <AmiBlitz3.ab3@2859>     MOVE.l D3,D0
00020F16 <AmiBlitz3.ab3@2860>     BPL.w JL_0_3BF2
00020F1C <AmiBlitz3.ab3@2861>   JMP ilconsterr
00020F1E <AmiBlitz3.ab3@2864>     SUBQ.w #1,D0
00020F22 <AmiBlitz3.ab3@2865>      BPL.w JL_0_3C20
00020F28 <AmiBlitz3.ab3@2869>     MOVE.w numarg,D0
00020F2C <AmiBlitz3.ab3@2870>     DIVU #$A,D0
00020F30 <AmiBlitz3.ab3@2871>     ADDI.w #$30,D0
00020F32 <AmiBlitz3.ab3@2872>     CMPA.l A6,A1
00020F36 <AmiBlitz3.ab3@2873>      BCC.w mbovererr
00020F38 <AmiBlitz3.ab3@2874>     MOVE.b D0,(A1)+
00020F3A <AmiBlitz3.ab3@2875>     SWAP D0
00020F3E <AmiBlitz3.ab3@2876>     ADDI.w #$30,D0
00020F40 <AmiBlitz3.ab3@2877>     CMPA.l A6,A1
00020F44 <AmiBlitz3.ab3@2878>      BCC.w mbovererr
00020F46 <AmiBlitz3.ab3@2879>     MOVE.b D0,(A1)+
00020F4A <AmiBlitz3.ab3@2880>   BRA.w JL_0_3C6C
00020F50 <AmiBlitz3.ab3@2886>     CMP.w numarg,D0
00020F54 <AmiBlitz3.ab3@2887>      BCC.w JL_0_3C6C
00020F56 <AmiBlitz3.ab3@2888>     LSL.w #1,D0
00020F58 <AmiBlitz3.ab3@2889>     MOVE.w D0,D4
00020F5A <AmiBlitz3.ab3@2890>     LSL.w #1,D0
00020F5C <AmiBlitz3.ab3@2891>     ADD.w D4,D0
00020F62 <AmiBlitz3.ab3@2892>     MOVEA.l ptr_macrobuffer_begin,A0
00020F64 <AmiBlitz3.ab3@2893>     ADDA.w D0,A0
00020F68 <AmiBlitz3.ab3@2894>     MOVE.w $4(A0),D4
00020F6C <AmiBlitz3.ab3@2895>      BEQ.w JL_0_3C6C
00020F6E <AmiBlitz3.ab3@2896>     MOVEA.l (A0),A0
00020F70 <AmiBlitz3.ab3@2897>     SUBQ.w #1,D4
00020F72 <AmiBlitz3.ab3@2900>       CMPA.l A6,A1
00020F76 <AmiBlitz3.ab3@2901>        BCC.w mbovererr
00020F7A <AmiBlitz3.ab3@2902>       CMP.w #"@@",(a0)
00020F7E <AmiBlitz3.ab3@2903>        BNE 'l10
00020F84 <AmiBlitz3.ab3@2904>       TST.w ininclude
00020F88 <AmiBlitz3.ab3@2905>        BNE errorjoin
00020F8E <AmiBlitz3.ab3@2908>       MOVE.l sourceline,a0
00020F90 <AmiBlitz3.ab3@2909>       MOVE.l (a0),a0
00020F96 <AmiBlitz3.ab3@2910>       CMP.l #0,a0
00020F9A <AmiBlitz3.ab3@2911>       BNE 'l11
00020F9C <AmiBlitz3.ab3@2912>       MOVEQ #0,d0
00020FA2 <AmiBlitz3.ab3@2913>       JSR error
00020FA8 <AmiBlitz3.ab3@2916>       MOVE.l a0,sourceline
00020FAE <AmiBlitz3.ab3@2917>       ADDQ.l #1,linenumat
00020FB2 <AmiBlitz3.ab3@2918>       LEA 9(a0),a0
00020FB4 <AmiBlitz3.ab3@2919>       MOVE.l a0,-(a7)
00020FB8 <AmiBlitz3.ab3@2922>       CMP.b #" ",(a0)+
00020FBC <AmiBlitz3.ab3@2923>        BEQ 'l110
00020FC2 <AmiBlitz3.ab3@2924>       CMP.b #";",-1(a0)
00020FC4 <AmiBlitz3.ab3@2925>       MOVE.l (a7)+,a0
00020FC8 <AmiBlitz3.ab3@2926>        BEQ 'l111
00020FCA <AmiBlitz3.ab3@2927>       SUBQ.l #1,d4
00020FCC <AmiBlitz3.ab3@2930>       MOVE.b (A0)+,(A1)+
00020FD0 <AmiBlitz3.ab3@2931>     DBF D4,JL_0_3C46
00020FD4 <AmiBlitz3.ab3@2933>   BRA.w JL_0_3C6C
00020FD6 <AmiBlitz3.ab3@2936>     CMPA.l A6,A1
00020FDA <AmiBlitz3.ab3@2937>      BCC.w mbovererr
00020FDC <AmiBlitz3.ab3@2938>     MOVE.b D0,(A1)+
00020FE0 <AmiBlitz3.ab3@2939>      BPL.w JL_0_3C6C
00020FE2 <AmiBlitz3.ab3@2940>     CMPA.l A6,A1
00020FE6 <AmiBlitz3.ab3@2941>      BCC.w mbovererr
00020FE8 <AmiBlitz3.ab3@2942>     MOVE.b (A2)+,(A1)+
00020FEA <AmiBlitz3.ab3@2943>     SUBQ.w #1,D1
00020FEE <AmiBlitz3.ab3@2946>   DBF D1,JL_0_3B48
00020FF0 <AmiBlitz3.ab3@2956>   CMPA.l A6,A1
00020FF4 <AmiBlitz3.ab3@2957>    BCC.w mbovererr
00020FF6 <AmiBlitz3.ab3@2958>   MOVE.b (A5)+,(A1)+
00020FFA <AmiBlitz3.ab3@2959>    BNE.w JL_0_3C70
00021000 <AmiBlitz3.ab3@2960>   MOVEA.l myline,A5
00021006 <AmiBlitz3.ab3@2961>   MOVE.l myoline,D0
0002100A <AmiBlitz3.ab3@2962>    BEQ.w JL_0_3C9C
0002100C <AmiBlitz3.ab3@2963>   SUBQ.l #1,d0
0002100E <AmiBlitz3.ab3@2964>   MOVEA.l D0,A1
00021014 <AmiBlitz3.ab3@2965>   MOVE.l macrobuffer_size,D0
0002101A <AmiBlitz3.ab3@2966>   MOVEA.l _execbase,A6
00021020 <AmiBlitz3.ab3@2967>   MOVE.l mempool,a0
00021024 <AmiBlitz3.ab3@2968>   JSR _FreePooled(A6)
00021028 <AmiBlitz3.ab3@2971> BRA.w JL_0_3A46
0002102A <AmiBlitz3.ab3@2974>   MOVEA.l (A7)+,A5
0002102C <AmiBlitz3.ab3@2975> RTS
00021032 <AmiBlitz3.ab3@2979>   MOVE.l myline,D0
00021036 <AmiBlitz3.ab3@2980>   BEQ.w JL_0_3CC4
00021038 <AmiBlitz3.ab3@2981>   SUBQ.l #1,d0
0002103E <AmiBlitz3.ab3@2982>   CLR.l myline
00021040 <AmiBlitz3.ab3@2983>   MOVEA.l D0,A1
00021046 <AmiBlitz3.ab3@2984>   MOVE.l macrobuffer_size,D0
0002104C <AmiBlitz3.ab3@2985>   MOVEA.l _execbase,A6
00021052 <AmiBlitz3.ab3@2986>   MOVE.l mempool,a0
00021056 <AmiBlitz3.ab3@2987> JMP _FreePooled(A6)
00021058 <AmiBlitz3.ab3@2990> RTS
0002105A <AmiBlitz3.ab3@2994>   MOVEQ.l #$00,D2
0002105E <AmiBlitz3.ab3@2997>   ADDQ.w #1,4(a0)
00021060 <AmiBlitz3.ab3@2998>    MOVE.b (A4)+,D0
00021064 <AmiBlitz3.ab3@3000>    BEQ exit1
00021068 <AmiBlitz3.ab3@3001>    BPL.w JL_0_3CD8
0002106C <AmiBlitz3.ab3@3002>   ADDQ.w #1,4(a0)
0002106E <AmiBlitz3.ab3@3003>   ADDQ.w #1,A4
00021072 <AmiBlitz3.ab3@3004> BRA.w JL_0_3CC8
00021078 <AmiBlitz3.ab3@3007>    TST.w instringon
0002107C <AmiBlitz3.ab3@3008>    BNE 'lnom
00021080 <AmiBlitz3.ab3@3009>    CMP.b #";",d0
00021084 <AmiBlitz3.ab3@3010>    BEQ exit2
00021088 <AmiBlitz3.ab3@3011>    CMP.b #":",d0
0002108C <AmiBlitz3.ab3@3012>    BEQ exit2
00021090 <AmiBlitz3.ab3@3015>   CMP.b #$22,D0
00021094 <AmiBlitz3.ab3@3016>    BNE.w JL_0_3CEA
0002109A <AmiBlitz3.ab3@3017>   NOT.w instringon
0002109E <AmiBlitz3.ab3@3018> BRA.w JL_0_3CC8
000210A4 <AmiBlitz3.ab3@3022>   TST.w instringon
000210A8 <AmiBlitz3.ab3@3023>    BNE.w JL_0_3CC8
000210AC <AmiBlitz3.ab3@3024>    CMP.b #"@",d0
000210B0 <AmiBlitz3.ab3@3025>    BNE 'l10
000210B4 <AmiBlitz3.ab3@3026>    CMP.b #"@",(a4)
000210B8 <AmiBlitz3.ab3@3027>    BNE 'l10
000210BE <AmiBlitz3.ab3@3028>    TST.w ininclude
000210C2 <AmiBlitz3.ab3@3029>    BNE errorjoin
000210C8 <AmiBlitz3.ab3@3030>    MOVE.l sourceline3,a4
000210CE <AmiBlitz3.ab3@3031>    CMP.l #0,a4
000210D2 <AmiBlitz3.ab3@3032>    BNE 'l11
000210D8 <AmiBlitz3.ab3@3033>    MOVE.l sourceline,a4
000210DA <AmiBlitz3.ab3@3036>   MOVE.l (a4),a4
000210E0 <AmiBlitz3.ab3@3037>       CMP.l #0,a4
000210E4 <AmiBlitz3.ab3@3038>       BNE 'l12
000210E6 <AmiBlitz3.ab3@3039>       MOVEQ #0,d0
000210EC <AmiBlitz3.ab3@3040>       JSR error
000210F2 <AmiBlitz3.ab3@3043>    MOVE.l a4,sourceline3
000210F6 <AmiBlitz3.ab3@3044>    LEA 9(a4),a4
000210F8 <AmiBlitz3.ab3@3045>    MOVEQ #",",d0
000210FC <AmiBlitz3.ab3@3048>   CMP.b #$2C,D0
00021100 <AmiBlitz3.ab3@3049>    BNE.w JL_0_3D06
00021102 <AmiBlitz3.ab3@3050>   TST.w D2
00021106 <AmiBlitz3.ab3@3051>    BEQ.w JL_0_3D30
0002110A <AmiBlitz3.ab3@3052> BRA.w JL_0_3CC8
0002110E <AmiBlitz3.ab3@3056>    CMP.b #$7B,D0                                           ;"{"
00021112 <AmiBlitz3.ab3@3057>    BEQ.w 'l10
00021116 <AmiBlitz3.ab3@3058>   CMP.b #$28,D0                                            ;"("
0002111A <AmiBlitz3.ab3@3061>    BNE.w JL_0_3D14
0002111C <AmiBlitz3.ab3@3062>   ADDQ.w #1,D2
00021120 <AmiBlitz3.ab3@3063> BRA.w JL_0_3CC8
00021124 <AmiBlitz3.ab3@3066>   CMP.b #$7D,D0                                           ;"}"
00021128 <AmiBlitz3.ab3@3067>    BNE.w JL_0_3D22
0002112A <AmiBlitz3.ab3@3068>  TST.w D2
0002112E <AmiBlitz3.ab3@3069>    BEQ.w JL_0_3D30
00021132 <AmiBlitz3.ab3@3073>    CMP.b #$7D,D0                                           ;"}"
00021136 <AmiBlitz3.ab3@3074>    BEQ.w 'l10
0002113A <AmiBlitz3.ab3@3075>   CMP.b #$29,D0                                            ;")"
0002113E <AmiBlitz3.ab3@3078>    BNE.w JL_0_3CC8
00021140 <AmiBlitz3.ab3@3079>   SUBQ.w #1,D2
00021144 <AmiBlitz3.ab3@3080> BRA.w JL_0_3CC8
00021146 <AmiBlitz3.ab3@3083> RTS
00021148 <AmiBlitz3.ab3@3087>       SUBQ.l #1,a4
0002114E <AmiBlitz3.ab3@3088>       CLR.l sourceline3
00021150 <AmiBlitz3.ab3@3089> RTS
00021152 <AmiBlitz3.ab3@3093>       MOVEQ #0,d0
00021154 <AmiBlitz3.ab3@3094>       SUBQ.l #1,a4
0002115A <AmiBlitz3.ab3@3095>       CLR.l sourceline3
0002115C <AmiBlitz3.ab3@3096> RTS
00021160 <AmiBlitz3.ab3@3100>   CMP.b #$7B,D0                                            ;"{"
00021164 <AmiBlitz3.ab3@3101>   BEQ.w JL_0_3D3E
00021168 <AmiBlitz3.ab3@3102>   CMP.b #$28,D0                                            ;"("
0002116A <AmiBlitz3.ab3@3105> RTS
0002116E <AmiBlitz3.ab3@3109>   CMP.b #$7D,D0                                            ;"}"
00021172 <AmiBlitz3.ab3@3110>   BEQ.w JL_0_3D4C
00021176 <AmiBlitz3.ab3@3111>   CMP.b #$29,D0                                            ;")"
00021178 <AmiBlitz3.ab3@3114> RTS
0002117A <AmiBlitz3.ab3@3118> stopit:     Ds.w 1
0002117C <AmiBlitz3.ab3@3119> clrreq:     Ds.w 1
00021180 <AmiBlitz3.ab3@3140>   MOVE.w clrreq(PC),D0
00021184 <AmiBlitz3.ab3@3141>    BEQ.w close_compilewin__skip
000211B6 <AmiBlitz3.ab3@3143> 
000211BC <AmiBlitz3.ab3@3145>   LEA clrreq,a0
000211BE <AmiBlitz3.ab3@3146>   NOT.w (a0)                                               ;reass
000211C4 <AmiBlitz3.ab3@3147>   MOVEA.l ptr_ThisTask,A0
000211C8 <AmiBlitz3.ab3@3148>   CLR.l $1E(A0)
000211CC <AmiBlitz3.ab3@3149>   CLR.l $2A(A0)
000211CE <AmiBlitz3.ab3@3152> RTS
000211D0 <AmiBlitz3.ab3@3155> intsused:  Ds.w 1
000211D8 <AmiBlitz3.ab3@3159>   MOVE.w #-1,blitzoff
000211DE <AmiBlitz3.ab3@3160>   CLR.w intsused
000211E4 <AmiBlitz3.ab3@3161>   CLR.w anyerrs
000211EA <AmiBlitz3.ab3@3162>   CLR.w blitzmode
000211F0 <AmiBlitz3.ab3@3163>   CLR.w dontwrite                                              ;nomemleft
000211F6 <AmiBlitz3.ab3@3164>   CLR.w constmode
000211FC <AmiBlitz3.ab3@3165>   CLR.w cmake
00021202 <AmiBlitz3.ab3@3166>   CLR.w cfetchmode
00021208 <AmiBlitz3.ab3@3167>   CLR.l intdata1
0002120E <AmiBlitz3.ab3@3168>   CLR.w fuckpos
00021214 <AmiBlitz3.ab3@3169>   CLR.w procnum
0002121A <AmiBlitz3.ab3@3170>   CLR.w procnum2
00021220 <AmiBlitz3.ab3@3171>   CLR.w dfetch
00021226 <AmiBlitz3.ab3@3172>   CLR.l titleat
0002122C <AmiBlitz3.ab3@3173>   CLR.b usedpath
00021232 <AmiBlitz3.ab3@3174>   CLR.b path2
00021238 <AmiBlitz3.ab3@3175>   CLR.w inerr
0002123E <AmiBlitz3.ab3@3176>   CLR.w intlevel
00021244 <AmiBlitz3.ab3@3177>   CLR.l cont_pc
0002124A <AmiBlitz3.ab3@3178>   CLR.l cont_pc2
00021250 <AmiBlitz3.ab3@3179>   CLR.l lastcontlink
0002125A <AmiBlitz3.ab3@3180>   MOVE.l destbufferstart,destpointer
00021264 <AmiBlitz3.ab3@3181>   MOVE.l destbufferstart,bigpc
0002126E <AmiBlitz3.ab3@3182>   MOVE.l destbufferend,libend
00021278 <AmiBlitz3.ab3@3183>   MOVE.l data1start,data1
00021282 <AmiBlitz3.ab3@3184>   MOVE.l data2at,data2
0002128A <AmiBlitz3.ab3@3185>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021292 <AmiBlitz3.ab3@3186>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021298 <AmiBlitz3.ab3@3187>   CLR.w oldvcodelen
0002129E <AmiBlitz3.ab3@3188>   CLR.b lastgloballabel                                    ;lastbiglab org source
000212A0 <AmiBlitz3.ab3@3189> RTS
000212A2 <AmiBlitz3.ab3@3192> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
000212A8 <AmiBlitz3.ab3@3196>   LEA  clrreq,a1
000212AC <AmiBlitz3.ab3@3197>   MOVE.w #2000,(a1)
000212D6 <AmiBlitz3.ab3@3198>   !basic
000212EC <AmiBlitz3.ab3@3199> 
0002133C <AmiBlitz3.ab3@3200>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021344 <AmiBlitz3.ab3@3201>   calcpro.l      = 0
0002134C <AmiBlitz3.ab3@3202>   calcpro_old.l  = 0
00021358 <AmiBlitz3.ab3@3203>   typ_old.l      = -1
00021364 <AmiBlitz3.ab3@3204>   pass_old.l     = -1
0002136A <AmiBlitz3.ab3@3205>   update_comstatus_gui.b = True ; for the first
000213A4 <AmiBlitz3.ab3@3207>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
000213DE <AmiBlitz3.ab3@3208>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
000213FC <AmiBlitz3.ab3@3209>   !asm
0002142E <AmiBlitz3.ab3@3210> 
00021434 <AmiBlitz3.ab3@3212>   CLR.w stopit
00021436 <AmiBlitz3.ab3@3213> RTS
0002143C <AmiBlitz3.ab3@3217>   CLR.w storedebugmode
00021442 <AmiBlitz3.ab3@3218>   CLR.b iserror
00021446 <AmiBlitz3.ab3@3219>   BSR.w compilerequester
00021450 <AmiBlitz3.ab3@3221>   MOVE.l #0,globallinecount
00021456 <AmiBlitz3.ab3@3222>   JSR check_of_same_source
0002145A <AmiBlitz3.ab3@3223>   BSR.w call_setpointerbusy
0002145E <AmiBlitz3.ab3@3224>   BSR.w setcvars
00021466 <AmiBlitz3.ab3@3225>   MOVE.w #$8000,globalvarpointer
00021470 <AmiBlitz3.ab3@3226>   MOVE.l #newtype_quick,defaulttype
00021476 <AmiBlitz3.ab3@3227>   MOVE.l A7,passstack
00021480 <AmiBlitz3.ab3@3228>   MOVE.l #firstitem_,sourceline
0002148A <AmiBlitz3.ab3@3229>   MOVE.w numlines_org,linesleft
00021494 <AmiBlitz3.ab3@3230>   MOVE.l numlines,numlines2
0002149A <AmiBlitz3.ab3@3231>   ADDQ.w #1,linesleft
000214A0 <AmiBlitz3.ab3@3232>   ADDQ.l #1,numlines2
000214AA <AmiBlitz3.ab3@3233>   MOVE.l #-1,linenumat
000214AE <AmiBlitz3.ab3@3234>   BSR.w resetlibs
000214B2 <AmiBlitz3.ab3@3235>   BSR.w Aclearallvars
000214B8 <AmiBlitz3.ab3@3236>   LEA progress_per_line+2,A0
000214BA <AmiBlitz3.ab3@3237>   MOVEQ.l #$03,D0
000214BC <AmiBlitz3.ab3@3240>     CLR.w (A0)+
000214C0 <AmiBlitz3.ab3@3241>   DBF D0,JL_0_40EC
000214C6 <AmiBlitz3.ab3@3244>   LEA _include,a0
000214CA <AmiBlitz3.ab3@3245>   MOVEM.l a0-a6/d0-d7,-(a7)
000214D0 <AmiBlitz3.ab3@3246>   LEA ptr_parameterstore,a1
000214D2 <AmiBlitz3.ab3@3249>     MOVE.b (a0)+,(a1)+
000214D6 <AmiBlitz3.ab3@3250>   BNE 'l1b
000214D8 <AmiBlitz3.ab3@3252>   MOVEQ #9,d2
000214DE <AmiBlitz3.ab3@3253>   JSR findlabel2
000214E2 <AmiBlitz3.ab3@3254>   BNE 'd
000214EA <AmiBlitz3.ab3@3255>   MOVE.l #0,8(a2)
000214EE <AmiBlitz3.ab3@3256>   MOVEM.l (a7)+,a0-a6/d0-d7
000214F2 <AmiBlitz3.ab3@3257> BRA 'd2
000214F8 <AmiBlitz3.ab3@3260>   JSR addlabelhash
00021500 <AmiBlitz3.ab3@3261>   MOVE.l #$1,$4(A2)
00021508 <AmiBlitz3.ab3@3262>   MOVE.l #0,8(a2)
0002150C <AmiBlitz3.ab3@3263>   MOVEM.l (a7)+,a0-a6/d0-d7
00021512 <AmiBlitz3.ab3@3266>   LEA _debug,a0
00021516 <AmiBlitz3.ab3@3267>   MOVEM.l a0-a6/d0-d7,-(a7)
0002151C <AmiBlitz3.ab3@3268>   LEA ptr_parameterstore,a1
0002151E <AmiBlitz3.ab3@3271>     MOVE.b (a0)+,(a1)+
00021522 <AmiBlitz3.ab3@3272>   BNE 'l9b
00021524 <AmiBlitz3.ab3@3274>   MOVEQ #7,d2
0002152A <AmiBlitz3.ab3@3275>   JSR findlabel2
0002152E <AmiBlitz3.ab3@3276>   BNE 'd9
00021532 <AmiBlitz3.ab3@3277>   MOVE.b debugmode(PC),D0
00021534 <AmiBlitz3.ab3@3278>   EXT.w d0
00021536 <AmiBlitz3.ab3@3279>   EXT.l d0
0002153A <AmiBlitz3.ab3@3280>   MOVE.l d0,8(a2)
0002153E <AmiBlitz3.ab3@3281>   MOVEM.l (a7)+,a0-a6/d0-d7
00021542 <AmiBlitz3.ab3@3282> BRA 'd9b
00021548 <AmiBlitz3.ab3@3285>   JSR addlabelhash
00021550 <AmiBlitz3.ab3@3286>   MOVE.l #$1,$4(A2)
00021554 <AmiBlitz3.ab3@3287>   MOVE.b debugmode(PC),D0
00021556 <AmiBlitz3.ab3@3288>   EXT.w d0
00021558 <AmiBlitz3.ab3@3289>   EXT.l d0
0002155C <AmiBlitz3.ab3@3290>   MOVE.l d0,8(a2)
00021560 <AmiBlitz3.ab3@3291>   MOVEM.l (a7)+,a0-a6/d0-d7
00021566 <AmiBlitz3.ab3@3294>   MOVE.l #firstitem_,a0
00021568 <AmiBlitz3.ab3@3295>   MOVE.l (a0),a0
0002156C <AmiBlitz3.ab3@3296>   LEA 9(a0),a0
00021574 <AmiBlitz3.ab3@3297>   MOVE.w #0,exdebug
0002157A <AmiBlitz3.ab3@3298>   TST.b debugmode
0002157E <AmiBlitz3.ab3@3299>    BEQ 'l10
00021580 <AmiBlitz3.ab3@3302>   MOVE.b (a0)+,d0
00021584 <AmiBlitz3.ab3@3303>    BEQ 'l10
00021588 <AmiBlitz3.ab3@3304>   CMP.b #$20,d0
0002158C <AmiBlitz3.ab3@3305>    BEQ 'l2
0002158E <AmiBlitz3.ab3@3306>   SUBQ.l #1,a0
00021594 <AmiBlitz3.ab3@3307>   CMP.l #"DEBU",(a0)
00021598 <AmiBlitz3.ab3@3308>    BNE 'l10
0002159E <AmiBlitz3.ab3@3309>   CMP.b #"G",4(a0)
000215A2 <AmiBlitz3.ab3@3310>    BNE 'l10
000215AA <AmiBlitz3.ab3@3311>   MOVE.w #$0,debugversion
000215B2 <AmiBlitz3.ab3@3312>   MOVE.b #1,exdebug
000215B8 <AmiBlitz3.ab3@3315>   LEA nops4,A0
000215BE <AmiBlitz3.ab3@3316>   LEA dataget,A1
000215C4 <AmiBlitz3.ab3@3317>   JSR pokecode2                                            ;write intro nops
000215CA <AmiBlitz3.ab3@3318>   MOVE.l #$01010101,d1
000215D0 <AmiBlitz3.ab3@3319>   JSR writedatalong                                        ;for the 4 tempregs
000215D6 <AmiBlitz3.ab3@3320>   JSR writedatalong
000215DC <AmiBlitz3.ab3@3321>   JSR writedatalong
000215E2 <AmiBlitz3.ab3@3322>   JSR writedatalong
000215E8 <AmiBlitz3.ab3@3323>   TST.b saved0
000215EC <AmiBlitz3.ab3@3324>    BEQ 'l1
000215F2 <AmiBlitz3.ab3@3325>   MOVE.l #$4e714e71,d1
000215F8 <AmiBlitz3.ab3@3326>   JSR writelong                                            ;add 2 nops
000215FE <AmiBlitz3.ab3@3327>   MOVE.l #$4e714e71,d1
00021604 <AmiBlitz3.ab3@3328>   JSR writelong                                            ;add 2 nops
0002160A <AmiBlitz3.ab3@3329>   MOVE.l #$4e714e71,d1
00021610 <AmiBlitz3.ab3@3330>   JSR writelong                                            ;add 2 nops
00021616 <AmiBlitz3.ab3@3331>    MOVE.l #$4e714e71,d1
0002161C <AmiBlitz3.ab3@3332>   JSR writelong                                            ;add 2 nops
00021620 <AmiBlitz3.ab3@3335>   MOVE.b debugmode(PC),D1
00021624 <AmiBlitz3.ab3@3336>    BEQ.b JL_0_4132
0002162E <AmiBlitz3.ab3@3337>   MOVE.b debugmode,storedebugmode
00021632 <AmiBlitz3.ab3@3338>   MOVE.w #$FFDC,D1
00021636 <AmiBlitz3.ab3@3339>    BSR.w uselib
0002163C <AmiBlitz3.ab3@3340>   TST.w debugversion                                       ;make a version for debugger
00021640 <AmiBlitz3.ab3@3341>    BNE.b JL_0_412A
00021644 <AmiBlitz3.ab3@3345>   MOVE.w #$FA3C,D1
00021648 <AmiBlitz3.ab3@3346>    BSR.w uselib
0002164C <AmiBlitz3.ab3@3347>   MOVE.w #$0001,D1
00021650 <AmiBlitz3.ab3@3348>    BSR.w uselib
00021654 <AmiBlitz3.ab3@3349> BRA.b JL_0_4132
00021658 <AmiBlitz3.ab3@3352>   MOVE.w #$FA32,D1
0002165C <AmiBlitz3.ab3@3353>   BSR.w uselib
00021660 <AmiBlitz3.ab3@3356>   BSR.w nextline
00021666 <AmiBlitz3.ab3@3357>   CLR.l linenum
0002166C <AmiBlitz3.ab3@3358>   CLR.l stacktrack
00021672 <AmiBlitz3.ab3@3361>   ADDQ.l #1,linenum
0002167C <AmiBlitz3.ab3@3362>   MOVE.l destpointer,destpointer2
00021682 <AmiBlitz3.ab3@3363>   MOVE.l a5,sourceline2
00021686 <AmiBlitz3.ab3@3364>   BSR.w compile_line                                        ;compile pass
0002168A <AmiBlitz3.ab3@3367>   BSR.w nextline
0002168E <AmiBlitz3.ab3@3368>    BNE.w JL_0_4136
00021692 <AmiBlitz3.ab3@3369>   BSR.w JUMP_do_runerrson
00021696 <AmiBlitz3.ab3@3370>   BSR.w pointchk
0002169C <AmiBlitz3.ab3@3371>   TST.b objectcount
000216A0 <AmiBlitz3.ab3@3372>    BNE macenderr
000216A6 <AmiBlitz3.ab3@3373>   CLR.l linenumat
000216AA <AmiBlitz3.ab3@3374>   BSR.w errchx2
000216B4 <AmiBlitz3.ab3@3375>   CMP.l #-1,bssend
000216B8 <AmiBlitz3.ab3@3376>    BNE 'l30
000216C2 <AmiBlitz3.ab3@3377>   MOVE.l destpointer,bssend                                ;compile end
000216C8 <AmiBlitz3.ab3@3380>   MOVE.l destpointer,d0
000216D2 <AmiBlitz3.ab3@3381>   CMP.l #-1,bssstart
000216D6 <AmiBlitz3.ab3@3382>   BNE 'lnf6
000216E0 <AmiBlitz3.ab3@3383>   CMP.l #-1,chipstart
000216E4 <AmiBlitz3.ab3@3384>   BNE 'lnf6
000216E8 <AmiBlitz3.ab3@3385> BRA 'leven4
000216EE <AmiBlitz3.ab3@3388>   MOVE.l destpointer,d1
000216F0 <AmiBlitz3.ab3@3389>   ADDQ.l #3,d1
000216F6 <AmiBlitz3.ab3@3390>   AND.l #$fffffffc,d1                                      ;bug ?
000216FC <AmiBlitz3.ab3@3391>   MOVE.l d1,destpointer
00021706 <AmiBlitz3.ab3@3394>   MOVE.l destpointer,codeend
00021710 <AmiBlitz3.ab3@3395>   CMP.l #-1,chipend
00021714 <AmiBlitz3.ab3@3396>   BNE 'l31
0002171E <AmiBlitz3.ab3@3397>   MOVE.l destpointer,chipend
00021724 <AmiBlitz3.ab3@3400>   MOVE.l destpointer,d1
00021726 <AmiBlitz3.ab3@3401>   ADDQ.l #1,d1
0002172C <AmiBlitz3.ab3@3402>   AND.l #$fffffffe,d1                                     ;new evenexit
00021732 <AmiBlitz3.ab3@3403>   MOVE.l d1,destpointer
00021736 <AmiBlitz3.ab3@3404>   MOVE.b debugmode(PC),D1
0002173A <AmiBlitz3.ab3@3405>    BEQ.b JL_0_4180
0002173E <AmiBlitz3.ab3@3406>    BSR.w debugstuff
00021742 <AmiBlitz3.ab3@3407>   MOVE.w #$C300,D1
00021748 <AmiBlitz3.ab3@3408>    JSR Atokejsr
0002174C <AmiBlitz3.ab3@3409>    BSR.w debugstuff
00021750 <AmiBlitz3.ab3@3410>   MOVE.l eopcode(PC),D1
00021756 <AmiBlitz3.ab3@3411>    JSR writelong
0002175A <AmiBlitz3.ab3@3412>   MOVE.l lastcontlink(PC),D1
0002175E <AmiBlitz3.ab3@3413>    BEQ.b JL_0_4180
00021760 <AmiBlitz3.ab3@3414>   MOVEA.l D1,A0
00021764 <AmiBlitz3.ab3@3415>   CLR.w $6(A0)
0002176E <AmiBlitz3.ab3@3421>   MOVE.l destpointer,endop                                ;where end goes...
00021774 <AmiBlitz3.ab3@3423>   TST.w blitzmode
00021778 <AmiBlitz3.ab3@3424>   BEQ.w JL_0_4198
0002177C <AmiBlitz3.ab3@3425>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021782 <AmiBlitz3.ab3@3428>   TST.w intsused
00021786 <AmiBlitz3.ab3@3429>   BEQ.b JL_0_41AA
0002178A <AmiBlitz3.ab3@3430>   MOVE.w #$C105,D1                                        ;interupts off!
00021790 <AmiBlitz3.ab3@3431>   JSR tokejsr2
00021794 <AmiBlitz3.ab3@3434>   BSR.w calcstatic
0002179A <AmiBlitz3.ab3@3435>   MOVE.w D4,numstatic
000217A0 <AmiBlitz3.ab3@3436>   MOVE.l D3,staticdata
000217A4 <AmiBlitz3.ab3@3437>    BSR.w calcmaxs
000217AA <AmiBlitz3.ab3@3439>   TST.l tokeslist
000217AE <AmiBlitz3.ab3@3440>    BEQ.b JL_0_41F8
000217B4 <AmiBlitz3.ab3@3441>   MOVE.w gotocode,D1                                       ;jmp!
000217BA <AmiBlitz3.ab3@3442>    JSR writeword
000217C4 <AmiBlitz3.ab3@3443>   MOVE.l destpointer,endjmpat
000217C8 <AmiBlitz3.ab3@3444>    BSR.w addoff
000217CE <AmiBlitz3.ab3@3445>    JSR writelong                                           
000217D2 <AmiBlitz3.ab3@3447>    BSR.w JL_0_6C76                                         ;has to be done before finits!
000217D8 <AmiBlitz3.ab3@3451>   TST.w dontwrite
000217DC <AmiBlitz3.ab3@3452>    BNE.b JL_0_41F8
000217E0 <AmiBlitz3.ab3@3453>   MOVEA.l endjmpat(PC),A4
000217E6 <AmiBlitz3.ab3@3454>   MOVE.l destpointer,(A4)
000217EC <AmiBlitz3.ab3@3457>   TST.b returncode
000217F0 <AmiBlitz3.ab3@3458>   BEQ 'l2
000217F4 <AmiBlitz3.ab3@3459>   MOVE.w #$2e80,d1
000217FA <AmiBlitz3.ab3@3460>   JSR writeword
00021800 <AmiBlitz3.ab3@3463>   JSR JL_0_B98A
00021806 <AmiBlitz3.ab3@3464>   TST.b returncode
0002180A <AmiBlitz3.ab3@3465>   BEQ 'l3
0002180E <AmiBlitz3.ab3@3466>   MOVE.w #$4e75,d1
00021814 <AmiBlitz3.ab3@3467>   JSR writeword
00021818 <AmiBlitz3.ab3@3468> BRA 'l1
0002181E <AmiBlitz3.ab3@3471>   MOVE.l #$70004E75,D1
00021824 <AmiBlitz3.ab3@3472>   JSR writelong                                            ;write moveq #0,d0:rts
0002182A <AmiBlitz3.ab3@3475>   JSR JL_0_B73E
0002182E <AmiBlitz3.ab3@3476>   BSR.w asmfixer
00021832 <AmiBlitz3.ab3@3477>   BSR.w close_compilewin
00021836 <AmiBlitz3.ab3@3478> BRA.w call_setpointernormal
0002183C <AmiBlitz3.ab3@3482> JMP do_runerrson
0002183E <AmiBlitz3.ab3@3486> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00021840 <AmiBlitz3.ab3@3487>             Dc.b $4E,$40                                   ;TRAP  #00
00021844 <AmiBlitz3.ab3@3489> endjmpat:   Ds.l 1
0002184A <AmiBlitz3.ab3@3493>   MOVEA.l newtype_string,A2
00021850 <AmiBlitz3.ab3@3494>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00021854 <AmiBlitz3.ab3@3497>     CMPA.w #$0,A2
00021858 <AmiBlitz3.ab3@3498>      BEQ.w pointchk_done
0002185C <AmiBlitz3.ab3@3499>     CMP.l $4(A2),D0
00021860 <AmiBlitz3.ab3@3500>      BNE.w pointchk_next
00021868 <AmiBlitz3.ab3@3501>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
0002186C <AmiBlitz3.ab3@3502> BRA.w notypeerr
0002186E <AmiBlitz3.ab3@3505>     MOVEA.l (A2),A2
00021872 <AmiBlitz3.ab3@3506> BRA.w pointchk_loop
00021874 <AmiBlitz3.ab3@3509> RTS
0002187A <AmiBlitz3.ab3@3513>   LEA labelbase,A2
0002187C <AmiBlitz3.ab3@3517>   MOVE.l (A2),D0                                           ;testlabels
00021880 <AmiBlitz3.ab3@3518>    BEQ.w errchx2_done
00021882 <AmiBlitz3.ab3@3519>   MOVEA.l D0,A2
00021886 <AmiBlitz3.ab3@3520>   MOVE.l $4(A2),D0
0002188A <AmiBlitz3.ab3@3521>   BTST #$0,D0
0002188E <AmiBlitz3.ab3@3522>    BNE.w errchx2_loop
00021892 <AmiBlitz3.ab3@3523>   MOVE.l $8(A2),D0
00021896 <AmiBlitz3.ab3@3524>    BNE.w errchx2_loop
0002189E <AmiBlitz3.ab3@3525>   MOVE.w $10(A2),linenumat+2
000218A0 <AmiBlitz3.ab3@3526>   MOVEQ #0,d0
000218A4 <AmiBlitz3.ab3@3527>   MOVE.b $12(a2),d0
000218AC <AmiBlitz3.ab3@3528>   MOVE.w 0(a2,d0),linenumat
000218B2 <AmiBlitz3.ab3@3529> JMP nolaberr                                               ;label not found
000218B8 <AmiBlitz3.ab3@3532>   MOVE.l concomsp,D0
000218BE <AmiBlitz3.ab3@3533>   CMP.l #concomstack,D0
000218C2 <AmiBlitz3.ab3@3534>    BNE.w chxerr4
000218C8 <AmiBlitz3.ab3@3535>   MOVE.w connest,D1
000218CC <AmiBlitz3.ab3@3536>    BNE.w chxerr4
000218CE <AmiBlitz3.ab3@3539>   MOVE.l D1,-(A7)
000218D4 <AmiBlitz3.ab3@3540>   MOVE.l firstsel,D1
000218D8 <AmiBlitz3.ab3@3541>    BNE.w errchx_err1
000218DE <AmiBlitz3.ab3@3542>   MOVE.l firstrep,D1
000218E2 <AmiBlitz3.ab3@3543>    BNE.w errchx_err2
000218E8 <AmiBlitz3.ab3@3544>   MOVE.w intstring,D1
000218EC <AmiBlitz3.ab3@3545>    BNE.w errchx_err3
000218F0 <AmiBlitz3.ab3@3546>   MOVE.l 4(a7),d1
000218F6 <AmiBlitz3.ab3@3547>   MOVE.w proceduremode,D1
000218FA <AmiBlitz3.ab3@3548>    BNE.w errchx_err6
00021900 <AmiBlitz3.ab3@3549>   MOVE.l firstiff,d1
00021904 <AmiBlitz3.ab3@3550>    BNE errchx_err5
0002190A <AmiBlitz3.ab3@3551>   MOVE.l firstfor,D1
0002190E <AmiBlitz3.ab3@3552>    BNE.w errchx_err7
00021910 <AmiBlitz3.ab3@3553>   MOVE.l (A7)+,D1
00021912 <AmiBlitz3.ab3@3554> RTS
0002191C <AmiBlitz3.ab3@3558>   MOVE.l sellineat,linenumat
00021922 <AmiBlitz3.ab3@3559> JMP selerrz
0002192C <AmiBlitz3.ab3@3562>   MOVE.l replineat,linenumat
00021932 <AmiBlitz3.ab3@3563> JMP unterr3
0002193C <AmiBlitz3.ab3@3566>   MOVE.l intlineat,linenumat
00021942 <AmiBlitz3.ab3@3567> JMP interr2
0002194C <AmiBlitz3.ab3@3570>   MOVE.l iflineat,linenumat
00021952 <AmiBlitz3.ab3@3571> JMP noenderr
0002195C <AmiBlitz3.ab3@3574>   MOVE.l prolineat,linenumat
00021962 <AmiBlitz3.ab3@3575> JMP nopenderr
0002196C <AmiBlitz3.ab3@3578>   MOVE.l forlineat,linenumat
00021972 <AmiBlitz3.ab3@3579> JMP nonexterr
0002197C <AmiBlitz3.ab3@3582>   MOVE.l ciflineat,linenumat
00021982 <AmiBlitz3.ab3@3583> JMP nocenderr
0002198C <AmiBlitz3.ab3@3587>   MOVE.l data1,maxsat
0002198E <AmiBlitz3.ab3@3588>   MOVEQ.l #$00,D4
00021994 <AmiBlitz3.ab3@3589>   MOVEA.l libpointer,A2
00021998 <AmiBlitz3.ab3@3592>     CMPA.w #$0,A2
0002199C <AmiBlitz3.ab3@3593>      BEQ.w calcmaxs_done
000219A0 <AmiBlitz3.ab3@3594>     TST.w $C(A2)
000219A4 <AmiBlitz3.ab3@3595>      BPL.w calcmaxs_next
000219A8 <AmiBlitz3.ab3@3596>     MOVE.l $12(A2),D0
000219AC <AmiBlitz3.ab3@3597>     TST.w -$2(A2,D0.L)
000219B0 <AmiBlitz3.ab3@3598>      BEQ.w calcmaxs_next
000219B2 <AmiBlitz3.ab3@3599>     ADDQ.w #1,D4
000219B6 <AmiBlitz3.ab3@3600>     MOVE.w -$6(A2,D0.L),D1
000219BA <AmiBlitz3.ab3@3601>     BSR.w pokedata1
000219BC <AmiBlitz3.ab3@3602>     MOVEQ.l #$01,D1
000219C0 <AmiBlitz3.ab3@3603>     MOVE.w -$2(A2,D0.L),D2
000219C2 <AmiBlitz3.ab3@3604>     LSL.w D2,D1
000219C6 <AmiBlitz3.ab3@3605>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
000219CA <AmiBlitz3.ab3@3606>     BSR.w writedatalong
000219CC <AmiBlitz3.ab3@3609>     MOVEA.l (A2),A2
000219D0 <AmiBlitz3.ab3@3610> BRA.w calcmaxs_loop
000219D6 <AmiBlitz3.ab3@3613>   MOVE.w D4,maxsused
000219DA <AmiBlitz3.ab3@3614>    BEQ.w calcmaxs_done2
000219DE <AmiBlitz3.ab3@3615>   MOVE.w #$FFFA,D1                                         ;;use memlib
000219E2 <AmiBlitz3.ab3@3616> BRA.w uselib
000219E4 <AmiBlitz3.ab3@3619> RTS
000219EA <AmiBlitz3.ab3@3623>    MOVE.l a7,stackaddr
000219EE <AmiBlitz3.ab3@3624>    BSR.w compile_term
000219F2 <AmiBlitz3.ab3@3625>    BSR.w reget
000219F6 <AmiBlitz3.ab3@3626>    BNE.w illeolerr
000219FC <AmiBlitz3.ab3@3627>    TST.w dontwrite
00021A00 <AmiBlitz3.ab3@3628>    BNE 'l1
00021A06 <AmiBlitz3.ab3@3629>    TST.l stacktrack
00021A0A <AmiBlitz3.ab3@3630>    BNE errormsg_stack
00021A0E <AmiBlitz3.ab3@3633>    CMP.w #-$7FDE,D0
00021A12 <AmiBlitz3.ab3@3634>    BNE.w compile_line_notelse
00021A18 <AmiBlitz3.ab3@3635>    JSR do_else2
00021A1C <AmiBlitz3.ab3@3636> BRA.w compile_line
00021A1E <AmiBlitz3.ab3@3639>   TST.w D0
00021A22 <AmiBlitz3.ab3@3640>   BNE.w compile_line
00021A28 <AmiBlitz3.ab3@3645>   MOVE.l firstiff,D0
00021A2C <AmiBlitz3.ab3@3646>    BEQ.w compile_line_done
00021A2E <AmiBlitz3.ab3@3647>   MOVEA.l D0,A0
00021A32 <AmiBlitz3.ab3@3648>   MOVE.w $C(A0),D1
00021A36 <AmiBlitz3.ab3@3649>    BPL.w compile_line_done
00021A3A <AmiBlitz3.ab3@3653>   BCLR #$F,D1
00021A40 <AmiBlitz3.ab3@3654>    JSR AJL_0_D7B8
00021A46 <AmiBlitz3.ab3@3655>    JSR AJL_0_D81C
00021A4A <AmiBlitz3.ab3@3656> BRA.w compile_line_unthen
00021A4C <AmiBlitz3.ab3@3659> RTS
00021A52 <AmiBlitz3.ab3@3663>   LEA lastgloballabel,A0
00021A54 <AmiBlitz3.ab3@3664>   TST.b (A0)
00021A58 <AmiBlitz3.ab3@3665>   BEQ.w nolocerr
00021A5E <AmiBlitz3.ab3@3666>   LEA ptr_parameterstore,A1
00021A60 <AmiBlitz3.ab3@3667>   MOVEQ.l #$00,D2
00021A62 <AmiBlitz3.ab3@3670>   ADDQ.w #1,D2
00021A64 <AmiBlitz3.ab3@3671>   MOVE.b (A0)+,(A1)+
00021A68 <AmiBlitz3.ab3@3672>    BNE.w createlab_loop
00021A6E <AmiBlitz3.ab3@3673>   MOVE.b #$27,-$1(A1)
00021A70 <AmiBlitz3.ab3@3674>   MOVE.w D2,-(A7)
00021A76 <AmiBlitz3.ab3@3675>    JSR makename4
00021A78 <AmiBlitz3.ab3@3676>   CMP.w (A7)+,D2
00021A7C <AmiBlitz3.ab3@3677>    BEQ.w syntaxerr
00021A7E <AmiBlitz3.ab3@3678>    TST.w d0
00021A82 <AmiBlitz3.ab3@3679>    BPL createlab_done
00021A8A <AmiBlitz3.ab3@3680>    MOVE.w #$3a,lastchar
00021A8C <AmiBlitz3.ab3@3681>    SUBQ.l #2,a5
00021A8E <AmiBlitz3.ab3@3684> RTS
00021A98 <AmiBlitz3.ab3@3688>   MOVE.l #forthstack,forthsp
00021AA2 <AmiBlitz3.ab3@3689>   MOVE.l #precstack,precsp
00021AA4 <AmiBlitz3.ab3@3690> RTS
00021AA6 <AmiBlitz3.ab3@3697>   MOVEQ.l #$00,D4
00021AD0 <AmiBlitz3.ab3@3700>   !basic
00021B12 <AmiBlitz3.ab3@3701> 
00021B22 <AmiBlitz3.ab3@3703>   If (c_abort = 1)           ; check if set
00021B24 <AmiBlitz3.ab3@3704>     MOVEQ.l #-$01,d4
00021B2A <AmiBlitz3.ab3@3705>     MOVE.w D4,stopit
00021B48 <AmiBlitz3.ab3@3706>     !asm
00021B4C <AmiBlitz3.ab3@3707>     BRA chkrealstop__skip
00021B6A <AmiBlitz3.ab3@3709>   !asm
00021B6C <AmiBlitz3.ab3@3710>   MOVEQ.l #$00,D6
00021B6E <AmiBlitz3.ab3@3711>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00021B70 <AmiBlitz3.ab3@3715> RTS
00021B74 <AmiBlitz3.ab3@3719>   MOVE.w stopit(PC),D0
00021B78 <AmiBlitz3.ab3@3720>   BEQ chkstop__chk
00021B7E <AmiBlitz3.ab3@3721>   SUBQ.w #1,stopit
00021B80 <AmiBlitz3.ab3@3725> RTS
00021B88 <AmiBlitz3.ab3@3728>   MOVE.w #2000,stopit
00021B8C <AmiBlitz3.ab3@3729>   BSR.w chkrealstop
00021B90 <AmiBlitz3.ab3@3730>   BEQ.b chkstop__rts
00021B94 <AmiBlitz3.ab3@3732>   BSR.w close_compilewin
00021B98 <AmiBlitz3.ab3@3733>   BSR.w call_setpointernormal
00021B9E <AmiBlitz3.ab3@3735>   MOVEA.l errstack,A7
00021BA4 <AmiBlitz3.ab3@3736>   MOVEA.l errcont,A0
00021BAC <AmiBlitz3.ab3@3737>   MOVE.w #-1,anyerrs
00021BAE <AmiBlitz3.ab3@3738> JMP (A0)
00021BB2 <AmiBlitz3.ab3@3741> d_pc:           Ds.l 1
00021BB6 <AmiBlitz3.ab3@3742> d_bigpc:        Ds.l 1
00021BB8 <AmiBlitz3.ab3@3743> d_nomemleft:    Ds.w 1
00021BBC <AmiBlitz3.ab3@3744> cont_pc:        Ds.l 1
00021BC0 <AmiBlitz3.ab3@3745> cont_pc2:       Ds.l 1
00021BC4 <AmiBlitz3.ab3@3746> lastcontlink:   Ds.l 1
00021BC8 <AmiBlitz3.ab3@3750>   ORI.w #$4E40,D1
00021BCC <AmiBlitz3.ab3@3751> BRA.w JUMP_writeword
00021BD2 <AmiBlitz3.ab3@3755>   TST.b debugmode
00021BD6 <AmiBlitz3.ab3@3756>   BEQ.w debugstuff__rts
00021BDC <AmiBlitz3.ab3@3763>   TST.w dirmode                                            ;or while in direct mode...
00021BE0 <AmiBlitz3.ab3@3764>    BNE debugstuff__rts
00021BEA <AmiBlitz3.ab3@3765>   MOVE.l destpointer,d_pc
00021BF4 <AmiBlitz3.ab3@3766>   MOVE.l bigpc,d_bigpc
00021BFE <AmiBlitz3.ab3@3767>   MOVE.w dontwrite,d_nomemleft
00021C02 <AmiBlitz3.ab3@3768>   MOVEM.l D0-D1,-(A7)
00021C04 <AmiBlitz3.ab3@3769>   MOVEQ.l #$01,D1
00021C08 <AmiBlitz3.ab3@3770>    BSR.w writetrap                                         ;write the adress to sourceline
00021C0E <AmiBlitz3.ab3@3774>    MOVE.l destpointer,D0
00021C14 <AmiBlitz3.ab3@3775>   MOVE.l cont_pc,D1
00021C1A <AmiBlitz3.ab3@3776>   MOVE.l D0,cont_pc
00021C20 <AmiBlitz3.ab3@3777>   MOVE.l D1,cont_pc2
00021C24 <AmiBlitz3.ab3@3778>    BEQ.b debugstuff__skip
00021C2A <AmiBlitz3.ab3@3779>   TST.w dontwrite
00021C2E <AmiBlitz3.ab3@3780>    BNE.b debugstuff__skip
00021C30 <AmiBlitz3.ab3@3781>   MOVEA.l D1,A4
00021C32 <AmiBlitz3.ab3@3782>   SUB.l A4,D0
00021C36 <AmiBlitz3.ab3@3783>   MOVE.w D0,$6(A4)
00021C3C <AmiBlitz3.ab3@3784>   MOVE.l A4,lastcontlink
00021C42 <AmiBlitz3.ab3@3787>   TST.w ininclude
00021C48 <AmiBlitz3.ab3@3789>   TST.w makeexec
00021C4C <AmiBlitz3.ab3@3790>   BEQ 'l1
00021C52 <AmiBlitz3.ab3@3791>   TST.w exdebug
00021C56 <AmiBlitz3.ab3@3792>   BEQ 'noinc
00021C5A <AmiBlitz3.ab3@3795>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00021C60 <AmiBlitz3.ab3@3796>   MOVE.l data1,d1
00021C66 <AmiBlitz3.ab3@3797>   TST.b firsttime
00021C6A <AmiBlitz3.ab3@3798>   BNE 'nofirst
00021C72 <AmiBlitz3.ab3@3799>   MOVE.b #1,firsttime
00021C78 <AmiBlitz3.ab3@3800>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00021C7E <AmiBlitz3.ab3@3801>   JSR writedatalong
00021C84 <AmiBlitz3.ab3@3802>   MOVE.l #"AmiB",d1
00021C8A <AmiBlitz3.ab3@3803>   JSR writedatalong
00021C90 <AmiBlitz3.ab3@3804>   MOVE.l destbufferstart,d1
00021C96 <AmiBlitz3.ab3@3805>   JSR writedatalong
00021C9C <AmiBlitz3.ab3@3806>   TST.w dontwrite
00021CA0 <AmiBlitz3.ab3@3807>   BNE 'nohunk
00021CA6 <AmiBlitz3.ab3@3808>   MOVE.l data1,d1
00021CA8 <AmiBlitz3.ab3@3809>   SUBQ.l #4,d1
00021CAE <AmiBlitz3.ab3@3810>   SUB.l destbufferstart,d1
00021CB0 <AmiBlitz3.ab3@3811>   MOVE.l d1,d2
00021CB6 <AmiBlitz3.ab3@3812>   JSR addhunkoffset
00021CBC <AmiBlitz3.ab3@3815>   MOVE.l destpointer,d2
00021CC2 <AmiBlitz3.ab3@3816>   MOVE.l data1,d1
00021CC8 <AmiBlitz3.ab3@3819>   MOVE.l destpointer,d2
00021CCA <AmiBlitz3.ab3@3820>   MOVE.l d1,d3
00021CD0 <AmiBlitz3.ab3@3821>   SUB.l destbufferstart,d1
00021CD6 <AmiBlitz3.ab3@3822>   OR.l #$80000000,d1
00021CDC <AmiBlitz3.ab3@3823>   JSR writelong
00021CE2 <AmiBlitz3.ab3@3824>   TST.w inmacro
00021CE6 <AmiBlitz3.ab3@3825>   BEQ 'sc1
00021CEC <AmiBlitz3.ab3@3826>   MOVE.l myline,a0
00021CF0 <AmiBlitz3.ab3@3828> BRA 'inc2
00021CF6 <AmiBlitz3.ab3@3830>  'sc1  TST.w ininclude
00021CFA <AmiBlitz3.ab3@3831>   BEQ 'inc
00021D00 <AmiBlitz3.ab3@3832>   MOVE.l includesourceline,a0
00021D04 <AmiBlitz3.ab3@3833> BRA 'inc2
00021D0A <AmiBlitz3.ab3@3836>   MOVE.l sourceline,a0
00021D0E <AmiBlitz3.ab3@3837>   LEA 9(a0),a0
00021D10 <AmiBlitz3.ab3@3840>   MOVE.l d1,d2
00021D12 <AmiBlitz3.ab3@3841>   MOVE.l A5,D1
00021D14 <AmiBlitz3.ab3@3842>   SUB.l a0,D1
00021D1A <AmiBlitz3.ab3@3843>   ADD.l #9,d1
00021D1E <AmiBlitz3.ab3@3844>   BSR.w JUMP_writeword
00021D24 <AmiBlitz3.ab3@3845>   CMP.l #9,d1
00021D28 <AmiBlitz3.ab3@3846>   BEQ 'pos1
00021D2E <AmiBlitz3.ab3@3847>   TST.w dontwrite
00021D32 <AmiBlitz3.ab3@3848>   BNE 'nopad
00021D38 <AmiBlitz3.ab3@3849>   MOVE.l lastsourceline,d1
00021D3C <AmiBlitz3.ab3@3850>   MOVE.l d1,-6(a4)
00021D40 <AmiBlitz3.ab3@3851> BRA 'nopad
00021D46 <AmiBlitz3.ab3@3854>   MOVE.l d2,lastsourceline
00021D50 <AmiBlitz3.ab3@3855>    MOVE.l destpointer,lastdestpointer
00021D52 <AmiBlitz3.ab3@3856>    MOVEQ #0,d1
00021D58 <AmiBlitz3.ab3@3857>   MOVE.l data1,d2
00021D5E <AmiBlitz3.ab3@3858>   SUB.l destbufferstart,d2
00021D64 <AmiBlitz3.ab3@3859>   JSR writedatalong
00021D6A <AmiBlitz3.ab3@3860>   TST.w dontwrite
00021D6E <AmiBlitz3.ab3@3861>   BNE 'no2
00021D74 <AmiBlitz3.ab3@3862>   JSR addhunkoffset
00021D7A <AmiBlitz3.ab3@3865>   MOVE.l data1,d2
00021D80 <AmiBlitz3.ab3@3866>   SUB.l destbufferstart,d2
00021D86 <AmiBlitz3.ab3@3867>   JSR writedatalong
00021D8C <AmiBlitz3.ab3@3868>   TST.w dontwrite
00021D90 <AmiBlitz3.ab3@3869>   BNE 'no
00021D96 <AmiBlitz3.ab3@3870>   JSR addhunkoffset
00021D9C <AmiBlitz3.ab3@3871>   MOVE.l lastwritedat,a1
00021DA2 <AmiBlitz3.ab3@3872>   CMP.l #0,a1
00021DA6 <AmiBlitz3.ab3@3873>   BEQ 'no
00021DA8 <AmiBlitz3.ab3@3874>   MOVE.l d3,(a1)
00021DB0 <AmiBlitz3.ab3@3875>   MOVE.l prevwritedat,4(a1)
00021DBA <AmiBlitz3.ab3@3876>   MOVE.l lastwritedat,prevwritedat
00021DC0 <AmiBlitz3.ab3@3879>   MOVE.l d3,lastwritedat
00021DC2 <AmiBlitz3.ab3@3880>   MOVEQ #4,d1
00021DC6 <AmiBlitz3.ab3@3881>   BSR pokedata1b
00021DC8 <AmiBlitz3.ab3@3884>   MOVE.b (a0)+,d1
00021DCC <AmiBlitz3.ab3@3885>   BEQ 'done
00021DD0 <AmiBlitz3.ab3@3886>   BSR pokedata1b
00021DD4 <AmiBlitz3.ab3@3887> BRA 'loop
00021DD6 <AmiBlitz3.ab3@3890>   MOVEQ #0,d1
00021DDA <AmiBlitz3.ab3@3891>   BSR pokedata1b
00021DE0 <AmiBlitz3.ab3@3892>   MOVE.l data1,d1
00021DE4 <AmiBlitz3.ab3@3893>   BTST #0,d1
00021DE8 <AmiBlitz3.ab3@3894>   BEQ 'nopad
00021DEA <AmiBlitz3.ab3@3895>   MOVEQ #0,d1
00021DEE <AmiBlitz3.ab3@3896>   BSR pokedata1b
00021DF2 <AmiBlitz3.ab3@3899>   MOVEM.l (a7)+,a0-a1/d2/d3
00021DF6 <AmiBlitz3.ab3@3900> BRA 'noinc2
00021DFC <AmiBlitz3.ab3@3903>   MOVE.l sourceline,D1
00021E02 <AmiBlitz3.ab3@3905>   JSR writelong
00021E04 <AmiBlitz3.ab3@3906>   MOVE.l A5,D1
00021E0A <AmiBlitz3.ab3@3907>   SUB.l sourceline,D1
00021E10 <AmiBlitz3.ab3@3909>   JSR writeword
00021E12 <AmiBlitz3.ab3@3912>   MOVEQ.l #$00,D1
00021E18 <AmiBlitz3.ab3@3913>   JSR writeword                                            ; was: BSR.w writeword
00021E1C <AmiBlitz3.ab3@3914>   MOVEM.l (A7)+,D0-D1
00021E1E <AmiBlitz3.ab3@3917> RTS
00021E24 <AmiBlitz3.ab3@3921>   TST.b debugmode                                          ;extern debug
00021E28 <AmiBlitz3.ab3@3922>    BEQ.b undodebug__rts
00021E2E <AmiBlitz3.ab3@3923>   TST.b dirmode
00021E32 <AmiBlitz3.ab3@3924>   BNE undodebug__rts
00021E3C <AmiBlitz3.ab3@3929>   MOVE.w d_nomemleft,dontwrite
00021E46 <AmiBlitz3.ab3@3930>   MOVE.l d_bigpc,bigpc
00021E50 <AmiBlitz3.ab3@3931>   MOVE.l d_pc,destpointer
00021E5A <AmiBlitz3.ab3@3932>   MOVE.l cont_pc2,cont_pc
00021E5C <AmiBlitz3.ab3@3935> RTS
00021E66 <AmiBlitz3.ab3@3939>   MOVE.l #forthstack,forthsp
00021E70 <AmiBlitz3.ab3@3940>   MOVE.l #precstack,precsp
00021E76 <AmiBlitz3.ab3@3941>   CLR.w regnum
00021E7C <AmiBlitz3.ab3@3942>   CLR.w nonew
00021E82 <AmiBlitz3.ab3@3943>   CLR.w sbasegot
00021E8C <AmiBlitz3.ab3@3944>   MOVE.w varcodelen,oldvcodelen
00021E92 <AmiBlitz3.ab3@3945>   CLR.w varcodelen
00021E9A <AmiBlitz3.ab3@3946>   MOVE.w #-1,lasta6
00021E9C <AmiBlitz3.ab3@3947> RTS
00021EA2 <AmiBlitz3.ab3@3951>   TST.w linemode
00021EA6 <AmiBlitz3.ab3@3952>   BMI.b smode__skip
00021EAA <AmiBlitz3.ab3@3953>   BSR.w undodebug
00021EB0 <AmiBlitz3.ab3@3954>   MOVE.w linemode,D1
00021EB2 <AmiBlitz3.ab3@3955>   ADDQ.w #4,A7
00021EB4 <AmiBlitz3.ab3@3956>   LSL.w #2,D1
00021EBA <AmiBlitz3.ab3@3957>   LEA modetable,A0
00021EBE <AmiBlitz3.ab3@3958>   MOVEA.l $0(A0,D1.W),A0
00021EC2 <AmiBlitz3.ab3@3959>   BSR.w reget
00021EC4 <AmiBlitz3.ab3@3962> JMP (A0)                                                   ;jumptokenroutine
00021EC6 <AmiBlitz3.ab3@3965> RTS
00021ECE <AmiBlitz3.ab3@3970>   MOVE.w #0,leaa0a0+2
00021ED4 <AmiBlitz3.ab3@3971>   CLR.b nowdeclare
00021EDA <AmiBlitz3.ab3@3972>   CLR.b notypecheck
00021EE0 <AmiBlitz3.ab3@3973>   CLR.l lasttoken
00021EE6 <AmiBlitz3.ab3@3974>   CLR.b doimmediate
00021EEC <AmiBlitz3.ab3@3975>   CLR.w vartype
00021EF2 <AmiBlitz3.ab3@3976>   CLR.w regnumfunc
00021EF8 <AmiBlitz3.ab3@3977>   CLR.b optistring
00021EFE <AmiBlitz3.ab3@3978>   CLR.b iniffcommand
00021F04 <AmiBlitz3.ab3@3979>   CLR.w instringon  ; new
00021F0A <AmiBlitz3.ab3@3980>   CLR.b funccall
00021F10 <AmiBlitz3.ab3@3981>   CLR.l currentfunccall
00021F16 <AmiBlitz3.ab3@3982>   CLR.l leftsidetype
00021F1C <AmiBlitz3.ab3@3983>   CLR.l rightsidetype
00021F22 <AmiBlitz3.ab3@3984>   CLR.b peekaddrsize
00021F28 <AmiBlitz3.ab3@3985>   CLR.b blitzparloop
00021F2E <AmiBlitz3.ab3@3986>   CLR.b funcparloop
00021F34 <AmiBlitz3.ab3@3987>   TST.b debugmode
00021F38 <AmiBlitz3.ab3@3988>    BEQ 'fpu
00021F42 <AmiBlitz3.ab3@3994>   MOVE.b fpu,iee
00021F46 <AmiBlitz3.ab3@3995>   MOVE.w stopit(PC),D0
00021F4A <AmiBlitz3.ab3@3996>   BNE chkstop_chkb
00021F4E <AmiBlitz3.ab3@3997>   BSR.w chkstop                                          ; message here
00021F54 <AmiBlitz3.ab3@4000>   SUBQ.w #1,stopit
00021F58 <AmiBlitz3.ab3@4003>   BSR.w findmacro                                          ;macro
00021F5E <AmiBlitz3.ab3@4057>   TST.b debugmode
00021F62 <AmiBlitz3.ab3@4058>    BEQ.s 'l10
00021F68 <AmiBlitz3.ab3@4059>   TST.b exdebug
00021F6C <AmiBlitz3.ab3@4060>   BEQ 'l10a
00021F6E <AmiBlitz3.ab3@4061>   MOVE.w (a5),d0
00021F72 <AmiBlitz3.ab3@4062>   CMP.w #$8025,d0
00021F76 <AmiBlitz3.ab3@4063>    BEQ 'l10
00021F7A <AmiBlitz3.ab3@4066>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00021F7E <AmiBlitz3.ab3@4070>   BSR.w get1bytemain                                       ;gettokenmain
00021F82 <AmiBlitz3.ab3@4071>    BEQ.w undodebug
00021F86 <AmiBlitz3.ab3@4072>   CMP.w #$002b,d0                                            ;check for + cast sign
00021F8A <AmiBlitz3.ab3@4073>     BNE 'lb2
00021F8E <AmiBlitz3.ab3@4074>     BSR.w get1bytemain
00021F96 <AmiBlitz3.ab3@4075>     MOVE.b #1,notypecheck
00021FA0 <AmiBlitz3.ab3@4083>   MOVE.l #forthstack,forthsp
00021FAA <AmiBlitz3.ab3@4084>   MOVE.l #precstack,precsp
00021FB0 <AmiBlitz3.ab3@4085>   CLR.w regnum
00021FB6 <AmiBlitz3.ab3@4086>   CLR.w nonew
00021FBC <AmiBlitz3.ab3@4087>   CLR.w sbasegot
00021FC6 <AmiBlitz3.ab3@4088>   MOVE.w varcodelen,oldvcodelen
00021FCC <AmiBlitz3.ab3@4090>   CLR.w varcodelen
00021FD4 <AmiBlitz3.ab3@4091>   MOVE.w #$FFFF,lasta6
00021FD8 <AmiBlitz3.ab3@4093>   BSR.w smode
00021FDA <AmiBlitz3.ab3@4094>   TST.w D0
00021FDE <AmiBlitz3.ab3@4095>   BMI.w get_tokencode
00021FE2 <AmiBlitz3.ab3@4096>   CMP.w #$2E,D0
00021FE6 <AmiBlitz3.ab3@4097>    BEQ.w JL_0_4644                                         ;shortlist
00021FEA <AmiBlitz3.ab3@4098>   CMP.w #"#",D0
00021FEE <AmiBlitz3.ab3@4099>    BEQ.w JL_0_4718                                         ;constant found
00021FF2 <AmiBlitz3.ab3@4100>   CMP.w #$27,D0
00021FF6 <AmiBlitz3.ab3@4101>    BEQ.w JL_0_4638                                         ;local label
00021FFC <AmiBlitz3.ab3@4102>   MOVE.l A5,letstart
00022002 <AmiBlitz3.ab3@4103>   JSR getparameter
00022006 <AmiBlitz3.ab3@4104>   BSR.w reget
0002200A <AmiBlitz3.ab3@4105>    BEQ.w JL_0_4658                                         ;label found
0002200E <AmiBlitz3.ab3@4106>   CMP.w #$7B,D0
00022012 <AmiBlitz3.ab3@4107>    BEQ.w JL_0_475C
00022014 <AmiBlitz3.ab3@4108>   TST.w d0
00022018 <AmiBlitz3.ab3@4109>    BPL 'll1
0002201E <AmiBlitz3.ab3@4110>   TST.b newsyntax
00022022 <AmiBlitz3.ab3@4111>    BEQ 'll1
00022028 <AmiBlitz3.ab3@4112>   LEA allowtab,a0
0002202A <AmiBlitz3.ab3@4113>   MOVEQ #0,d1
0002202C <AmiBlitz3.ab3@4114>   MOVE.b d0,d1
00022030 <AmiBlitz3.ab3@4115>   TST.b 0(a0,d1.w)
00022034 <AmiBlitz3.ab3@4116>    BNE 'll1
00022036 <AmiBlitz3.ab3@4117>   SUBQ.l #2,a5
0002203E <AmiBlitz3.ab3@4118>   MOVE.w #":",lastchar                                     ;no doublepoint
00022042 <AmiBlitz3.ab3@4119> BRA JL_0_4658
0002204A <AmiBlitz3.ab3@4122>   CMP.l #"equ ",-1(a5)
0002204E <AmiBlitz3.ab3@4123>    BEQ 'll4
00022056 <AmiBlitz3.ab3@4124>   CMP.l #"EQU ",-1(a5)
0002205A <AmiBlitz3.ab3@4125>    BNE 'll2
0002205C <AmiBlitz3.ab3@4128>   ADDQ.l #2,a5
00022060 <AmiBlitz3.ab3@4129>   BSR.w findlabel2
00022064 <AmiBlitz3.ab3@4130>   BEQ.w 'lf1
00022068 <AmiBlitz3.ab3@4131>   BSR.w addlabelhash
00022070 <AmiBlitz3.ab3@4132>   MOVE.l #$1,$4(A2)
00022078 <AmiBlitz3.ab3@4135>   CMPI.l #$1,$4(A2)
0002207C <AmiBlitz3.ab3@4136>    BNE.w illconerr
00022080 <AmiBlitz3.ab3@4137>   BSR get1bytemain
00022082 <AmiBlitz3.ab3@4138>   MOVE.l A2,-(A7)
00022084 <AmiBlitz3.ab3@4149>   SUBQ.l #1,a5
00022086 <AmiBlitz3.ab3@4152>   SUBQ.l #1,a5
0002208C <AmiBlitz3.ab3@4153>   JSR AJL_0_BF6E
0002208E <AmiBlitz3.ab3@4154>   MOVEA.l (A7)+,A2
00022092 <AmiBlitz3.ab3@4155>   MOVE.l D3,$8(A2)
00022094 <AmiBlitz3.ab3@4156>   RTS
00022098 <AmiBlitz3.ab3@4157>   BSR get1bytemain
000220A0 <AmiBlitz3.ab3@4160>   CMP.l #"SET ",-1(a5)
000220A4 <AmiBlitz3.ab3@4161>   BNE 'll3
000220A8 <AmiBlitz3.ab3@4162> BRA 'll4
000220AE <AmiBlitz3.ab3@4165> JMP AJL_0_DEA6
000220B2 <AmiBlitz3.ab3@4168>   CMP.w #-$7FDE,D0
000220B6 <AmiBlitz3.ab3@4169>   BEQ.w get_tokencode
000220BA <AmiBlitz3.ab3@4170> BRA.w undodebug
000220BE <AmiBlitz3.ab3@4173>   BSR.w undodebug
000220C2 <AmiBlitz3.ab3@4174>   BSR.w createlab
000220C6 <AmiBlitz3.ab3@4175> BRA.w JL_0_466E
000220CA <AmiBlitz3.ab3@4178>   BSR.w get1bytemain
000220CE <AmiBlitz3.ab3@4179>    BEQ.w JL_0_462C
000220D2 <AmiBlitz3.ab3@4180>   CMP.w #"'",D0
000220D6 <AmiBlitz3.ab3@4181>    BEQ.w JL_0_4638
000220DA <AmiBlitz3.ab3@4182>    BSR.w makename2
000220DC <AmiBlitz3.ab3@4183>    TST.w d0
000220E0 <AmiBlitz3.ab3@4184>    BPL 'll1
000220E2 <AmiBlitz3.ab3@4185>    SUBQ.l #2,a5
000220EA <AmiBlitz3.ab3@4186>    MOVE.w #":",lastchar
000220EE <AmiBlitz3.ab3@4187> BRA JL_0_4658                                              ;????
000220F2 <AmiBlitz3.ab3@4191>   BSR.w undodebug
000220F8 <AmiBlitz3.ab3@4192>   LEA ptr_parameterstore,A0
000220FE <AmiBlitz3.ab3@4193>   LEA lastgloballabel,A1
00022100 <AmiBlitz3.ab3@4196>   MOVE.b (A0)+,(A1)+
00022104 <AmiBlitz3.ab3@4197>    BNE.w JL_0_4668
00022108 <AmiBlitz3.ab3@4200>   BSR.w findlabel2
0002210C <AmiBlitz3.ab3@4201>    BEQ.w JL_0_4698
00022110 <AmiBlitz3.ab3@4202>    BSR.w addlabelhash
00022114 <AmiBlitz3.ab3@4205>   CLR.l $4(A2)
0002211C <AmiBlitz3.ab3@4206>   MOVE.l destpointer,$8(A2)
00022124 <AmiBlitz3.ab3@4209>   MOVE.w procnum,$10(A2)
00022126 <AmiBlitz3.ab3@4210> RTS
0002212A <AmiBlitz3.ab3@4214>   MOVE.l $4(A2),D0
0002212E <AmiBlitz3.ab3@4215>   BTST #$0,D0
00022132 <AmiBlitz3.ab3@4216>    BNE.w illlaberr
00022138 <AmiBlitz3.ab3@4217>   TST.w pass
0002213C <AmiBlitz3.ab3@4219>   MOVE.l $8(A2),D0
00022140 <AmiBlitz3.ab3@4220>    BNE.w duplaberr
00022148 <AmiBlitz3.ab3@4221>   MOVE.w procnum,$10(A2)
0002214C <AmiBlitz3.ab3@4222>   MOVEA.l $4(A2),A3
00022152 <AmiBlitz3.ab3@4223>   MOVEA.l _execbase,A6
00022156 <AmiBlitz3.ab3@4226>   CMPA.w #$0,A3
0002215A <AmiBlitz3.ab3@4227>    BEQ.w JL_0_467A
0002215E <AmiBlitz3.ab3@4228>     MOVE.l $4(A2),D1
00022162 <AmiBlitz3.ab3@4229>     BTST #$0,D1
00022166 <AmiBlitz3.ab3@4230>     BNE.w illlaberr
0002216A <AmiBlitz3.ab3@4231>   MOVE.w $8(A3),D1
0002216E <AmiBlitz3.ab3@4232>   CMP.w $10(A2),D1
00022172 <AmiBlitz3.ab3@4233>    BEQ.w JL_0_46DC
00022178 <AmiBlitz3.ab3@4234>    TST.b newsyntax
0002217C <AmiBlitz3.ab3@4235>    BEQ 'l1
00022180 <AmiBlitz3.ab3@4236> BRA.w JL_0_46DC                                            ;label context out of range fix
00022188 <AmiBlitz3.ab3@4241>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
0002218C <AmiBlitz3.ab3@4242> BRA.w referr
00022192 <AmiBlitz3.ab3@4245>   MOVE.w dontwrite,D1
00022196 <AmiBlitz3.ab3@4246>    BNE.w JL_0_4706
0002219A <AmiBlitz3.ab3@4247>   MOVEA.l $4(A3),A1
000221A0 <AmiBlitz3.ab3@4248>   BTST #$0,$7(A3)
000221A4 <AmiBlitz3.ab3@4249>    BEQ.w JL_0_4700
000221A6 <AmiBlitz3.ab3@4250>   SUBQ.w #1,A1
000221AC <AmiBlitz3.ab3@4251>   MOVE.l data2,(A1)
000221B0 <AmiBlitz3.ab3@4252> BRA.w JL_0_4706
000221B6 <AmiBlitz3.ab3@4255>   MOVE.l destpointer,(A1)
000221B8 <AmiBlitz3.ab3@4258>   MOVEA.l A3,A1
000221BA <AmiBlitz3.ab3@4259>   MOVEA.l (A3),A3
000221BE <AmiBlitz3.ab3@4260>   MOVE.l A3,$4(A2)
000221C0 <AmiBlitz3.ab3@4261>   MOVEQ.l #$0C+2,D0
000221C6 <AmiBlitz3.ab3@4262>   MOVE.l mempool,a0
000221CC <AmiBlitz3.ab3@4263>   MOVEA.l _execbase,A6
000221D0 <AmiBlitz3.ab3@4264>   JSR _FreePooled(A6)
000221D4 <AmiBlitz3.ab3@4265> BRA.w JL_0_46BC
000221DE <AmiBlitz3.ab3@4270>    MOVE.l #forthstack,forthsp
000221E8 <AmiBlitz3.ab3@4271>   MOVE.l #precstack,precsp
000221EC <AmiBlitz3.ab3@4272>    BSR.w getparameter2
000221F0 <AmiBlitz3.ab3@4275>   BSR.w findlabel2
000221F4 <AmiBlitz3.ab3@4276>    BEQ.w JL_0_4738
000221F8 <AmiBlitz3.ab3@4277>    BSR.w addlabelhash
00022200 <AmiBlitz3.ab3@4278>   MOVE.l #$1,$4(A2)
00022204 <AmiBlitz3.ab3@4279> BRA.w JL_0_4744
0002220C <AmiBlitz3.ab3@4282>   CMPI.l #$1,$4(A2)
00022210 <AmiBlitz3.ab3@4283>    BNE.w illconerr
00022214 <AmiBlitz3.ab3@4292>   CMP.w #$3D,D0
00022218 <AmiBlitz3.ab3@4293>   BEQ.w JL_0_474E
0002221A <AmiBlitz3.ab3@4294> RTS
0002221C <AmiBlitz3.ab3@4298>   MOVE.l A2,-(A7)
00022222 <AmiBlitz3.ab3@4299>   JSR AJL_0_BF6E
00022224 <AmiBlitz3.ab3@4300>   MOVEA.l (A7)+,A2
00022228 <AmiBlitz3.ab3@4301>   MOVE.l D3,$8(A2)                                         ;store constant
00022230 <AmiBlitz3.ab3@4302>   CMP.w #$0a,lastchar
00022234 <AmiBlitz3.ab3@4303>   BNE 'l1
0002223C <AmiBlitz3.ab3@4304>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
0002223E <AmiBlitz3.ab3@4307> RTS
00022242 <AmiBlitz3.ab3@4310>   BSR.w findproc                                           ;write statement call
00022246 <AmiBlitz3.ab3@4311>   BEQ _state
0002224C <AmiBlitz3.ab3@4312>   TST.l unusedfunc
00022250 <AmiBlitz3.ab3@4313>   BEQ noprocerr
00022256 <AmiBlitz3.ab3@4315>   JSR gotoendsource
0002225A <AmiBlitz3.ab3@4318>   TST.b $5(A2)
00022260 <AmiBlitz3.ab3@4320>   MOVE.l a2,currentfunccall
00022268 <AmiBlitz3.ab3@4321>   MOVE.b #1,funccall
0002226E <AmiBlitz3.ab3@4322>   MOVE.b #1,isfunc(a2)
00022272 <AmiBlitz3.ab3@4323>   MOVE.l $E(A2),-(A7)
00022274 <AmiBlitz3.ab3@4324>   MOVEQ.l #$00,D0
00022278 <AmiBlitz3.ab3@4325>   MOVE.b $4(A2),D0
0002227E <AmiBlitz3.ab3@4326>   MOVE.l d0,parnumtemp
00022282 <AmiBlitz3.ab3@4327>   BEQ.w JL_0_4786
00022286 <AmiBlitz3.ab3@4328>   TST.b $20(a2)                                            ;increase if morepar
0002228A <AmiBlitz3.ab3@4329>   BNE 'no0par
0002228C <AmiBlitz3.ab3@4330>   MOVE.l a5,a4
00022290 <AmiBlitz3.ab3@4333>   CMP.b #$20,(a4)+
00022294 <AmiBlitz3.ab3@4334>   BEQ 'l1
0002229A <AmiBlitz3.ab3@4335>   CMP.b #"}",-1(a4)
0002229E <AmiBlitz3.ab3@4336>   BNE  'no0par                                             ;statementcall pars
000222A0 <AmiBlitz3.ab3@4337>   MOVEQ #0,d0
000222A4 <AmiBlitz3.ab3@4340>   LEA $16(A2),A1
000222A6 <AmiBlitz3.ab3@4343>   MOVE.l d1,-(a7)
000222A8 <AmiBlitz3.ab3@4344>   MOVE.b (a1),d2
000222AA <AmiBlitz3.ab3@4345>   MOVE.l d0,d1
000222AE <AmiBlitz3.ab3@4346>   CMP.w #4,d2
000222B2 <AmiBlitz3.ab3@4347>   BNE 'l1b
000222B8 <AmiBlitz3.ab3@4348>   ADD.l #$203c,d1
000222BE <AmiBlitz3.ab3@4350>   JSR writeword
000222C4 <AmiBlitz3.ab3@4351>   MOVE.l #$ffff0000,d1
000222CA <AmiBlitz3.ab3@4353>   JSR writelong
000222CE <AmiBlitz3.ab3@4354> BRA 'l2b
000222D4 <AmiBlitz3.ab3@4357>   TST.b fpu
000222D8 <AmiBlitz3.ab3@4358>   BNE 'l1c
000222DC <AmiBlitz3.ab3@4359>   CMP.w #5,d2
000222E0 <AmiBlitz3.ab3@4360>   BNE 'l1c
000222E6 <AmiBlitz3.ab3@4361>   ADD.l #$203c,d1
000222EC <AmiBlitz3.ab3@4363>   JSR writeword
000222F2 <AmiBlitz3.ab3@4364>   MOVE.l #$800000c1,d1
000222F8 <AmiBlitz3.ab3@4366>   JSR writelong
000222FC <AmiBlitz3.ab3@4367> BRA 'l2b
00022302 <AmiBlitz3.ab3@4370>   ADD.l #$70ff,d1
00022308 <AmiBlitz3.ab3@4372>   JSR writeword
0002230E <AmiBlitz3.ab3@4373>   MOVE.l #$f23c5000,d1
00022310 <AmiBlitz3.ab3@4374>   MOVE.l d0,d2
00022312 <AmiBlitz3.ab3@4375>   ASR.l #2,d2
00022314 <AmiBlitz3.ab3@4376>   ADD.l d2,d1
0002231A <AmiBlitz3.ab3@4378>   JSR writelong
0002231E <AmiBlitz3.ab3@4379>   MOVE.w #$ffff,d1
00022324 <AmiBlitz3.ab3@4381>   JSR writeword
00022326 <AmiBlitz3.ab3@4384>   MOVE.l (a7)+,d1
00022328 <AmiBlitz3.ab3@4385>   ADDQ.l #1,a1
0002232E <AmiBlitz3.ab3@4386>   ADD.l #$0200,d0
00022334 <AmiBlitz3.ab3@4387>   CMP.l #$0e00,d0
00022338 <AmiBlitz3.ab3@4388>    BEQ syntaxerr
0002233A <AmiBlitz3.ab3@4389>   TST.b (a1)
0002233E <AmiBlitz3.ab3@4390>    BNE 'again
00022342 <AmiBlitz3.ab3@4391> BRA JL_0_4786
0002234C <AmiBlitz3.ab3@4394>   MOVE.w a2offset,a2offset2
00022350 <AmiBlitz3.ab3@4395>   LEA $16(A2),A2
00022356 <AmiBlitz3.ab3@4396>   MOVE.b funcparloop,-(a7)
0002235E <AmiBlitz3.ab3@4397>   MOVE.b #1,funcparloop
00022364 <AmiBlitz3.ab3@4398>   MOVE.b blitzparloop,-(a7)
0002236A <AmiBlitz3.ab3@4399>   CLR.b blitzparloop
0002236E <AmiBlitz3.ab3@4400>   BSR.w fetchpees2
00022374 <AmiBlitz3.ab3@4401>   MOVE.b (a7)+,blitzparloop
0002237A <AmiBlitz3.ab3@4402>   MOVE.b (a7)+,funcparloop
0002237E <AmiBlitz3.ab3@4403> BRA.w JL_0_478A
00022382 <AmiBlitz3.ab3@4406>   BSR.w get1bytemain
00022386 <AmiBlitz3.ab3@4409>   CMP.w #$7D,D0
0002238A <AmiBlitz3.ab3@4410>    BNE.w morepar_                                          ;syntax error morepar
00022390 <AmiBlitz3.ab3@4411>    JSR chkstak
00022392 <AmiBlitz3.ab3@4412>   MOVE.l (A7)+,D1
00022398 <AmiBlitz3.ab3@4428>    JSR JL_0_AFCA
0002239E <AmiBlitz3.ab3@4450>   CLR.b funccall
000223A2 <AmiBlitz3.ab3@4451> BRA.w get1bytemain
000223A8 <AmiBlitz3.ab3@4455>   MOVE.l d0,lasttoken
000223AC <AmiBlitz3.ab3@4456>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000223B0 <AmiBlitz3.ab3@4457>   BNE 'l2
000223B4 <AmiBlitz3.ab3@4458>    MOVE.w #$dd05,d0
000223B8 <AmiBlitz3.ab3@4461>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
000223BC <AmiBlitz3.ab3@4462>   BNE 'l3
000223C0 <AmiBlitz3.ab3@4463>    MOVE.w #$dd06,d0
000223C4 <AmiBlitz3.ab3@4466>   CMP.w #-$7FC4,D0
000223C8 <AmiBlitz3.ab3@4467>   BCS.w JL_0_47C4
000223CC <AmiBlitz3.ab3@4468>     CMP.w #-$7F4D,D0
000223D0 <AmiBlitz3.ab3@4469>     BCC.w JL_0_47C4
000223D8 <AmiBlitz3.ab3@4470>       BTST #$7,assemblercheck                              ;inline Assembler checking
000223DC <AmiBlitz3.ab3@4471>       BNE.b JL_0_47C0
000223E2 <AmiBlitz3.ab3@4472>         TST.b debugmode
000223E6 <AmiBlitz3.ab3@4473>         BEQ.b 'l10
000223F0 <AmiBlitz3.ab3@4478>           MOVE.w d_nomemleft,dontwrite
000223FA <AmiBlitz3.ab3@4479>           MOVE.l d_bigpc,bigpc
00022404 <AmiBlitz3.ab3@4480>           MOVE.l d_pc,destpointer
0002240E <AmiBlitz3.ab3@4481>           MOVE.l cont_pc2,cont_pc
00022412 <AmiBlitz3.ab3@4487> BRA.w JL_0_612C
00022416 <AmiBlitz3.ab3@4490>   BCLR #$F,D0
00022418 <AmiBlitz3.ab3@4491>   MOVE.w D0,D1
0002241C <AmiBlitz3.ab3@4492>   ANDI.w #$7F00,D1
00022420 <AmiBlitz3.ab3@4493>   BNE.w JL_0_4856
00022424 <AmiBlitz3.ab3@4494>     CMP.w #$B3,D0                                          ;intern Instructions
00022428 <AmiBlitz3.ab3@4495>     BCS.w JL_0_47F2
0002242C <AmiBlitz3.ab3@4496>       SUBI.w #$77,D0
00022430 <AmiBlitz3.ab3@4497>       CMP.w #$4B,D0
00022434 <AmiBlitz3.ab3@4498>       BEQ.w JL_0_4830
00022438 <AmiBlitz3.ab3@4499>         CMP.w #$46,D0
0002243C <AmiBlitz3.ab3@4500>         BEQ.w JL_0_4830
00022440 <AmiBlitz3.ab3@4501> BRA.w JL_0_4834                                            ; change tokennum
00022444 <AmiBlitz3.ab3@4504>     CMP.w #$38,D0
00022448 <AmiBlitz3.ab3@4505>      BEQ.w JL_0_4830
0002244C <AmiBlitz3.ab3@4506>     CMP.w #$39,D0
00022450 <AmiBlitz3.ab3@4507>      BEQ.w JL_0_4830
00022454 <AmiBlitz3.ab3@4508>     CMP.w #$D,D0
00022458 <AmiBlitz3.ab3@4509>      BEQ.w JL_0_4830
0002245C <AmiBlitz3.ab3@4510>     CMP.w #$12,D0
00022460 <AmiBlitz3.ab3@4511>      BEQ.w JL_0_4830
00022464 <AmiBlitz3.ab3@4512>     CMP.w #$13,D0
00022468 <AmiBlitz3.ab3@4513>      BEQ.w JL_0_4830
0002246C <AmiBlitz3.ab3@4514>     CMP.w #$1A,D0
00022470 <AmiBlitz3.ab3@4515>      BEQ.w JL_0_4830
00022474 <AmiBlitz3.ab3@4516>     CMP.w #$2A,D0
00022478 <AmiBlitz3.ab3@4517>      BHI.w JL_0_4834
0002247C <AmiBlitz3.ab3@4518>     CMP.w #$23,D0
00022480 <AmiBlitz3.ab3@4519>      BCS.b JL_0_4834
00022484 <AmiBlitz3.ab3@4522>   BSR.w undodebug
00022486 <AmiBlitz3.ab3@4525>   SUBQ.w #1,D0
00022488 <AmiBlitz3.ab3@4526>   LSL.w #2,D0
0002248E <AmiBlitz3.ab3@4533>   LEA instructionbase,A0
00022492 <AmiBlitz3.ab3@4534>   MOVEA.l $0(A0,D0.W),A0
00022494 <AmiBlitz3.ab3@4535>   MOVE.l A0,-(A7)
00022498 <AmiBlitz3.ab3@4536> BRA.w get1bytemain
0002249A <AmiBlitz3.ab3@4542>   MOVE.w D0,D1
0002249E <AmiBlitz3.ab3@4543>    BSR.w searchinstr
000224A4 <AmiBlitz3.ab3@4544>    TST.b newmode
000224A8 <AmiBlitz3.ab3@4545>    BNE compile_term
000224AE <AmiBlitz3.ab3@4546>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000224B2 <AmiBlitz3.ab3@4547>    BNE.w stamigalib
000224B8 <AmiBlitz3.ab3@4548>   BTST #$0,$1(A3)
000224BC <AmiBlitz3.ab3@4549>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
000224C0 <AmiBlitz3.ab3@4550>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
000224C4 <AmiBlitz3.ab3@4551>    BSR.w JL_0_66F6
000224CA <AmiBlitz3.ab3@4557>   MOVE.w numreps,-(A7)
000224D0 <AmiBlitz3.ab3@4558>   MOVE.w userp,-(A7)
000224D6 <AmiBlitz3.ab3@4559>   MOVE.w a2offset,-(A7)
000224D8 <AmiBlitz3.ab3@4560>   MOVE.l A2,-(A7)                                          ;recurs.
000224E2 <AmiBlitz3.ab3@4561>   MOVE.w convsize,userp
000224E6 <AmiBlitz3.ab3@4562>   LEA $6(A3),A1
000224E8 <AmiBlitz3.ab3@4566>    MOVE.w (A1),D2
000224EC <AmiBlitz3.ab3@4567>    BMI.w SERR                                              ;statement syntax error
000224F0 <AmiBlitz3.ab3@4568>   ANDI.w #$FF,D2
000224F2 <AmiBlitz3.ab3@4569>   CMP.w D2,D1
000224F6 <AmiBlitz3.ab3@4570>    BEQ.w JL_0_48E0
000224FA <AmiBlitz3.ab3@4571>    BCS.w JL_0_48CC
000224FC <AmiBlitz3.ab3@4572>   MOVE.b (A1),D3
00022500 <AmiBlitz3.ab3@4573>   ANDI.w #$7,D3
00022504 <AmiBlitz3.ab3@4574>    BEQ.w JL_0_48CC
00022506 <AmiBlitz3.ab3@4575>   MOVE.w D2,D4
00022508 <AmiBlitz3.ab3@4576>   SUB.w D3,D4
0002250A <AmiBlitz3.ab3@4577>   MOVEQ.l #$00,D5
0002250C <AmiBlitz3.ab3@4578>   MOVE.w D1,D5
0002250E <AmiBlitz3.ab3@4579>   SUB.w D4,D5
00022510 <AmiBlitz3.ab3@4580>   DIVU D3,D5
00022512 <AmiBlitz3.ab3@4581>   SWAP D5
00022514 <AmiBlitz3.ab3@4582>   TST.w D5
00022518 <AmiBlitz3.ab3@4583>    BEQ.w JL_0_48E0
0002251A <AmiBlitz3.ab3@4586>   ADDQ.w #2,A1
0002251C <AmiBlitz3.ab3@4587>   ADDA.w D2,A1
00022520 <AmiBlitz3.ab3@4588>    BSR.w aligna1
00022524 <AmiBlitz3.ab3@4589>    BSR.w skiplibreg
00022528 <AmiBlitz3.ab3@4590>   LEA $C(A1),A1
0002252C <AmiBlitz3.ab3@4591> BRA.w JL_0_489A
0002252E <AmiBlitz3.ab3@4594>   MOVE.w (a3),d2
00022532 <AmiBlitz3.ab3@4595>   BTST #1,d2
00022536 <AmiBlitz3.ab3@4596>   BEQ statement_
0002253A <AmiBlitz3.ab3@4597>   CMP.w #1,d1
0002253E <AmiBlitz3.ab3@4598>   BEQ statement_
00022542 <AmiBlitz3.ab3@4601>   CMP.b #$20,(a5)+
00022546 <AmiBlitz3.ab3@4602>   BEQ 'l2
0002254C <AmiBlitz3.ab3@4603>   CMP.b #"(",-2(a5)
00022550 <AmiBlitz3.ab3@4604>   BNE 'l1
00022554 <AmiBlitz3.ab3@4605> BRA parameter_
00022558 <AmiBlitz3.ab3@4608> BRA inbrackets_
0002255A <AmiBlitz3.ab3@4611>   MOVE.b (A1),D2
0002255C <AmiBlitz3.ab3@4612>   LSL.w #8,D2
0002255E <AmiBlitz3.ab3@4613>   OR.w D2,D1
00022560 <AmiBlitz3.ab3@4614>   MOVE.l A1,-(A7)
00022566 <AmiBlitz3.ab3@4615>   CLR.w a2offset
00022568 <AmiBlitz3.ab3@4616>   TST.w D1
0002256C <AmiBlitz3.ab3@4617>    BEQ.w JL_0_4900
00022570 <AmiBlitz3.ab3@4618>   LEA $2(A1),A2
00022576 <AmiBlitz3.ab3@4620>   MOVE.l lasttoken,-(a7)
0002257C <AmiBlitz3.ab3@4621>   CLR.l lasttoken
00022580 <AmiBlitz3.ab3@4622>   BSR.w fetchlibps
00022586 <AmiBlitz3.ab3@4623>   MOVE.l (a7)+,lasttoken
0002258A <AmiBlitz3.ab3@4624> BRA.w JL_0_4904
0002258E <AmiBlitz3.ab3@4627>   BSR.w get1bytemain
00022590 <AmiBlitz3.ab3@4630>   MOVEA.l (A7)+,A1
00022592 <AmiBlitz3.ab3@4631>   MOVEA.l (A7)+,A2
00022598 <AmiBlitz3.ab3@4632>   MOVE.w a2offset,D1
0002259C <AmiBlitz3.ab3@4633>    BEQ.w JL_0_493A
000225A2 <AmiBlitz3.ab3@4634>   MOVE.w D1,preplibst+2
000225A8 <AmiBlitz3.ab3@4635>   MOVE.l preplibst,D1
000225AE <AmiBlitz3.ab3@4636>    JSR writelong                                           ;write array offset stack correct
000225B8 <AmiBlitz3.ab3@4637>   MOVE.w numreps,movenumrep+2
000225BC <AmiBlitz3.ab3@4638>    BEQ.w JL_0_493A
000225C2 <AmiBlitz3.ab3@4639>   MOVE.l movenumrep,D1
000225C8 <AmiBlitz3.ab3@4640>    JSR writelong
000225CE <AmiBlitz3.ab3@4644>   JSR userjsr
000225D4 <AmiBlitz3.ab3@4647>   MOVE.w a2offset,D1
000225D8 <AmiBlitz3.ab3@4648>    BEQ.w JL_0_4974
000225DC <AmiBlitz3.ab3@4649>   CMP.w #$8,D1
000225E0 <AmiBlitz3.ab3@4650>    BHI.w JL_0_4964
000225E4 <AmiBlitz3.ab3@4651>   ANDI.w #$7,D1
000225E6 <AmiBlitz3.ab3@4652>   LSL.w #8,D1
000225E8 <AmiBlitz3.ab3@4653>   LSL.w #1,D1
000225EC <AmiBlitz3.ab3@4654>   ORI.w #$504F,D1
000225F2 <AmiBlitz3.ab3@4656>   JSR writeword
000225F6 <AmiBlitz3.ab3@4657> BRA.w JL_0_4974
000225FC <AmiBlitz3.ab3@4660>   MOVE.w D1,fixlibst+2
00022602 <AmiBlitz3.ab3@4661>   MOVE.l fixlibst,D1
00022608 <AmiBlitz3.ab3@4662>   JSR writelong
0002260E <AmiBlitz3.ab3@4665>   MOVE.w (A7)+,a2offset
00022614 <AmiBlitz3.ab3@4666>   MOVE.w (A7)+,userp
0002261A <AmiBlitz3.ab3@4667>   MOVE.w (A7)+,numreps
0002261E <AmiBlitz3.ab3@4668> BRA.w reget
00022622 <AmiBlitz3.ab3@4672>   MOVEM.l A2-A3,-(A7)
00022628 <AmiBlitz3.ab3@4673>   CLR.b doublepeek
0002262E <AmiBlitz3.ab3@4674>   MOVE.l A5,lastsourcepos
00022632 <AmiBlitz3.ab3@4675>    BSR.w getchar
00022636 <AmiBlitz3.ab3@4676>   CMP.w #$2E,D0
0002263A <AmiBlitz3.ab3@4677>    BEQ.w JL_0_49B4
00022640 <AmiBlitz3.ab3@4678>   MOVEA.l defaulttype,A2
00022644 <AmiBlitz3.ab3@4679>   CMP.w #$24,D0
00022648 <AmiBlitz3.ab3@4680>    BNE.w JL_0_49CA
0002264A <AmiBlitz3.ab3@4681>   MOVEQ.l #$07,D1
0002264E <AmiBlitz3.ab3@4682> BRA.w JL_0_49DE
00022652 <AmiBlitz3.ab3@4685>   BSR.w getparameter2
00022656 <AmiBlitz3.ab3@4686>   BEQ.w syntaxerr
0002265C <AmiBlitz3.ab3@4687>   LEA newtypebase,A2
00022660 <AmiBlitz3.ab3@4688>   BSR.w findtype
00022664 <AmiBlitz3.ab3@4689>   BNE.w notypeerr
0002266E <AmiBlitz3.ab3@4693>   MOVE.w oldqflag,instringon
00022674 <AmiBlitz3.ab3@4694>   MOVEA.l lastsourcepos,A5
00022678 <AmiBlitz3.ab3@4699>   MOVE.w $6(A2),D1
0002267E <AmiBlitz3.ab3@4700>   CMP.w #8,8(a2)
00022682 <AmiBlitz3.ab3@4701>   BNE 'l1
0002268A <AmiBlitz3.ab3@4702>   MOVE.b #1,doublepeek
00022690 <AmiBlitz3.ab3@4706>   MOVE.w D1,convsize
00022694 <AmiBlitz3.ab3@4707>   MOVEM.l (A7)+,A2-A3
00022696 <AmiBlitz3.ab3@4708> RTS
0002269C <AmiBlitz3.ab3@4713>   BTST #$3,$1(A3)
000226A0 <AmiBlitz3.ab3@4714>   BEQ.w JL_0_4A06
000226A4 <AmiBlitz3.ab3@4715>   BSR.w AJL_0_498A                                         ;read peek/poke size
000226A8 <AmiBlitz3.ab3@4717>   ORI.w #$7000,D1
000226AE <AmiBlitz3.ab3@4718>   JSR writeword
000226B4 <AmiBlitz3.ab3@4719>   ADDQ.w #1,regnum
000226B6 <AmiBlitz3.ab3@4722> RTS
000226B8 <AmiBlitz3.ab3@4728>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000226BA <AmiBlitz3.ab3@4729>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
000226BC <AmiBlitz3.ab3@4730>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
000226BE <AmiBlitz3.ab3@4734> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
000226C0 <AmiBlitz3.ab3@4735>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
000226C2 <AmiBlitz3.ab3@4736>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
000226C4 <AmiBlitz3.ab3@4740> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
000226C6 <AmiBlitz3.ab3@4741>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
000226C8 <AmiBlitz3.ab3@4742>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
000226CA <AmiBlitz3.ab3@4746> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
000226CC <AmiBlitz3.ab3@4749> srctype:    Ds.w 1
000226D0 <AmiBlitz3.ab3@4754>   BSR.w excget
000226D4 <AmiBlitz3.ab3@4755>   CMP.w #$2C,D0
000226D8 <AmiBlitz3.ab3@4756>    BNE.w syntaxerr
000226DE <AmiBlitz3.ab3@4757>   MOVE.b D2,srctype
000226E4 <AmiBlitz3.ab3@4758>   MOVE.w pusha2,D1
000226EA <AmiBlitz3.ab3@4759>   JSR writeword
000226EE <AmiBlitz3.ab3@4760>   BSR.w get1bytemain
000226F2 <AmiBlitz3.ab3@4761>   BSR.w excget
000226F8 <AmiBlitz3.ab3@4762>   CMP.b srctype,D2
000226FC <AmiBlitz3.ab3@4763>    BNE.w excerr2
00022702 <AmiBlitz3.ab3@4764>   MOVE.w pulla1,D1
00022708 <AmiBlitz3.ab3@4765>    JSR writeword
0002270C <AmiBlitz3.ab3@4766>   CMP.b #$2,D2
00022710 <AmiBlitz3.ab3@4767>    BCS.w JL_0_4B2A
00022714 <AmiBlitz3.ab3@4768>    BEQ.w JL_0_4B1E
00022718 <AmiBlitz3.ab3@4769>   LEA swapl(PC),A0
0002271C <AmiBlitz3.ab3@4770>   LEA swaplf(PC),A1
00022722 <AmiBlitz3.ab3@4771> JMP pokecode
00022726 <AmiBlitz3.ab3@4774>   LEA swapw(PC),A0
0002272A <AmiBlitz3.ab3@4775>   LEA swapwf(PC),A1
00022730 <AmiBlitz3.ab3@4776> JMP pokecode
00022734 <AmiBlitz3.ab3@4779>   LEA swapb(PC),A0
00022738 <AmiBlitz3.ab3@4780>   LEA swapbf(PC),A1
0002273E <AmiBlitz3.ab3@4781> JMP pokecode
00022744 <AmiBlitz3.ab3@4785>   JSR getparameter
00022748 <AmiBlitz3.ab3@4786>   BSR.w JL_0_8E3C
0002274C <AmiBlitz3.ab3@4787>   BSR.w calcvar
00022750 <AmiBlitz3.ab3@4788>   BTST #$E,D2
00022754 <AmiBlitz3.ab3@4789>    BEQ.w JL_0_4B4E
00022758 <AmiBlitz3.ab3@4790>   MOVE.b #$4,D2
0002275A <AmiBlitz3.ab3@4793>   TST.b D2
0002275E <AmiBlitz3.ab3@4794>    BEQ.w excerr
00022762 <AmiBlitz3.ab3@4795>   BTST #$F,D2
00022766 <AmiBlitz3.ab3@4796>    BNE.w JL_0_4B6A
0002276C <AmiBlitz3.ab3@4797>   MOVE.w leaamp,D1
00022772 <AmiBlitz3.ab3@4798>    JSR pokewda5s
00022774 <AmiBlitz3.ab3@4799>   MOVE.w D3,D1
0002277A <AmiBlitz3.ab3@4800> JMP writeword
0002277C <AmiBlitz3.ab3@4803> RTS
00022782 <AmiBlitz3.ab3@4813>   MOVE.l mempool,a0
00022788 <AmiBlitz3.ab3@4814>   MOVEA.l _execbase,A6
0002278C <AmiBlitz3.ab3@4815> JMP _AllocPooled(a6)
00022790 <AmiBlitz3.ab3@4819>   MOVE.w #$BF00,D1
00022796 <AmiBlitz3.ab3@4820> JMP Atokejsr
0002279A <AmiBlitz3.ab3@4824>   CMP.w #-$7FFA,D0
0002279E <AmiBlitz3.ab3@4825>    BEQ.w popreturn
000227A2 <AmiBlitz3.ab3@4826>   CMP.w #-$7FEA,D0
000227A6 <AmiBlitz3.ab3@4827>    BEQ.w popnext2
000227AA <AmiBlitz3.ab3@4828>   CMP.w #-$7FF2,D0
000227AE <AmiBlitz3.ab3@4829>    BEQ.w popselect2
000227B2 <AmiBlitz3.ab3@4830>   CMP.w #-$7FF5,D0
000227B6 <AmiBlitz3.ab3@4831>    BEQ.w get1bytemain
000227BA <AmiBlitz3.ab3@4832>   CMP.w #-$7FF4,D0
000227BE <AmiBlitz3.ab3@4833>    BEQ.w get1bytemain
000227C2 <AmiBlitz3.ab3@4834>   CMP.w #-$7FEC,D0
000227C6 <AmiBlitz3.ab3@4835>    BEQ.w get1bytemain
000227CA <AmiBlitz3.ab3@4836>   CMP.w #-$7F45,D0
000227CE <AmiBlitz3.ab3@4837>    BEQ.w get1bytemain
000227D2 <AmiBlitz3.ab3@4838> BRA.w syntaxerr
000227D8 <AmiBlitz3.ab3@4841>   TST.b debugmode
000227DC <AmiBlitz3.ab3@4842>    BEQ.w popreturn__norerr
000227E0 <AmiBlitz3.ab3@4843>   LEA popreturn__rfix(PC),A0
000227E4 <AmiBlitz3.ab3@4844>   LEA popreturn__rfixf(PC),A1
000227EA <AmiBlitz3.ab3@4845>    JSR pokecode
000227EE <AmiBlitz3.ab3@4846>   MOVE.w #$C305,D1
000227F4 <AmiBlitz3.ab3@4847>    JSR Atokejsr
000227F8 <AmiBlitz3.ab3@4848>   MOVE.w popreturn__rfix2(PC),D1
000227FE <AmiBlitz3.ab3@4850>    JSR writeword
00022802 <AmiBlitz3.ab3@4851> BRA.w get1bytemain
00022808 <AmiBlitz3.ab3@4855>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
0002280C <AmiBlitz3.ab3@4856>   BEQ.w popreturn__rfix2
00022812 <AmiBlitz3.ab3@4859>   JSR $20000                                               ;reass
00022814 <AmiBlitz3.ab3@4862>   ADDQ.w #6,A7
00022818 <AmiBlitz3.ab3@4866>   MOVE.w popreturn__sfix(PC),D1
0002281E <AmiBlitz3.ab3@4867>   JSR writeword
00022822 <AmiBlitz3.ab3@4868> BRA.w get1bytemain
00022824 <AmiBlitz3.ab3@4873>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0002282A <AmiBlitz3.ab3@4878>   MOVE.l firstfor,D0
0002282E <AmiBlitz3.ab3@4879>    BEQ.w noforerr
00022830 <AmiBlitz3.ab3@4880>   MOVEA.l D0,A2
00022834 <AmiBlitz3.ab3@4881>    BSR.w get1bytemain
00022838 <AmiBlitz3.ab3@4882>   BSR.w popnext
0002283E <AmiBlitz3.ab3@4885>   TST.b debugmode
00022842 <AmiBlitz3.ab3@4886>    BEQ.w popnext3__ner
00022848 <AmiBlitz3.ab3@4887>   MOVE.l nextfixw2,D1
0002284E <AmiBlitz3.ab3@4888>   CMPI.w #$3,$C(A2)
00022852 <AmiBlitz3.ab3@4889>    BCS.w writelong2
00022858 <AmiBlitz3.ab3@4890>   MOVE.l nextfixl2,D1
0002285E <AmiBlitz3.ab3@4891> writelong2 JMP  writelong
00022864 <AmiBlitz3.ab3@4894>   CMPI.w #$3,$C(A2)
00022868 <AmiBlitz3.ab3@4895>    BCS.w popnext3__skip2
0002286E <AmiBlitz3.ab3@4896>   MOVE.l nextfixl,D1
00022874 <AmiBlitz3.ab3@4897>   JMP writelong
0002287A <AmiBlitz3.ab3@4900>   MOVE.w nextfixw,D1
00022880 <AmiBlitz3.ab3@4901> JMP writeword
00022884 <AmiBlitz3.ab3@4905>   MOVE.w $C(A2),D0
0002288A <AmiBlitz3.ab3@4906>   TST.b debugmode
0002288E <AmiBlitz3.ab3@4907>    BEQ.w popnext__norunerr
00022892 <AmiBlitz3.ab3@4908>   MOVE.w #$C306,D1
00022896 <AmiBlitz3.ab3@4909>   CMP.w #$3,D0
0002289A <AmiBlitz3.ab3@4910>    BCS.w popnext__oktc
0002289C <AmiBlitz3.ab3@4911>   ADDQ.w #1,D1
0002289E <AmiBlitz3.ab3@4914>   MOVE.l A2,-(A7)
000228A4 <AmiBlitz3.ab3@4915>   JSR Atokejsr
000228A6 <AmiBlitz3.ab3@4916>   MOVEA.l (A7)+,A2
000228A8 <AmiBlitz3.ab3@4919> RTS
000228AE <AmiBlitz3.ab3@4923>   MOVE.l firstsel,D0
000228B2 <AmiBlitz3.ab3@4924>    BEQ.w eselerr
000228B4 <AmiBlitz3.ab3@4925>   MOVEA.l D0,A2
000228B8 <AmiBlitz3.ab3@4926>    BSR.w get1bytemain
000228BC <AmiBlitz3.ab3@4929>   MOVE.w $C(A2),D2
000228C2 <AmiBlitz3.ab3@4930>   TST.b debugmode
000228C6 <AmiBlitz3.ab3@4931>    BEQ.w popselect__norerr
000228CA <AmiBlitz3.ab3@4932>   MOVE.w #$C313,D1
000228CE <AmiBlitz3.ab3@4933>   CMP.w #$3,D2
000228D2 <AmiBlitz3.ab3@4934>    BCS.w popselect__chkit
000228D4 <AmiBlitz3.ab3@4935>   ADDQ.w #1,D1
000228DA <AmiBlitz3.ab3@4938>   JSR Atokejsr                                             ;make sure next thing on stack
000228DC <AmiBlitz3.ab3@4942>   MOVEQ.l #$02,D1
000228E0 <AmiBlitz3.ab3@4943>   CMP.w #$3,D2
000228E4 <AmiBlitz3.ab3@4944>    BCS.w popselect__doit
000228E6 <AmiBlitz3.ab3@4945>   MOVEQ.l #$04,D1
000228EA <AmiBlitz3.ab3@4946>   CMP.w #$7,D2
000228EE <AmiBlitz3.ab3@4947>    BCS.w popselect__doit
000228F4 <AmiBlitz3.ab3@4948>   LEA endselstr,A0
000228FA <AmiBlitz3.ab3@4949>   LEA endselstrf,A1
00022900 <AmiBlitz3.ab3@4950>   TST.b debugmode
00022904 <AmiBlitz3.ab3@4951>    BEQ.w popselect__norerr3
0002290A <AmiBlitz3.ab3@4952>   LEA endselstrf2,A1
00022910 <AmiBlitz3.ab3@4955>   JSR pokecode
00022914 <AmiBlitz3.ab3@4956>   MOVE.w #$C003,D1                                         ;global freemem
0002291A <AmiBlitz3.ab3@4957> JMP Atokejsr
00022920 <AmiBlitz3.ab3@4960>   TST.b debugmode
00022924 <AmiBlitz3.ab3@4961>    BEQ.w popselect__norerr2
00022926 <AmiBlitz3.ab3@4962>   ADDQ.w #2,D1                                             ;for the "sE"
00022928 <AmiBlitz3.ab3@4965>   LSL.w #8,D1
0002292A <AmiBlitz3.ab3@4966>   LSL.w #1,D1
00022930 <AmiBlitz3.ab3@4967>   OR.w endsel,D1
00022936 <AmiBlitz3.ab3@4968> JMP writeword
0002293A <AmiBlitz3.ab3@4971> firstrep:    Ds.l 1
0002293E <AmiBlitz3.ab3@4972> replineat:   Ds.l 1
00022944 <AmiBlitz3.ab3@4981>   CLR.l fp0addr
0002294E <AmiBlitz3.ab3@4982>   MOVE.l linenumat,replineat
00022950 <AmiBlitz3.ab3@4983>   MOVEQ.l #$08,D0
00022956 <AmiBlitz3.ab3@4984>   MOVEA.l _execbase,A6
0002295C <AmiBlitz3.ab3@4985>   MOVE.l mempool,a0
00022960 <AmiBlitz3.ab3@4986>   JSR _AllocPooled(a6)
00022962 <AmiBlitz3.ab3@4988>   MOVEA.l D0,A0
00022966 <AmiBlitz3.ab3@4989>   MOVE.l firstrep(PC),(A0)
0002296C <AmiBlitz3.ab3@4990>   MOVE.l A0,firstrep
00022974 <AmiBlitz3.ab3@4991>   MOVE.l destpointer,$4(A0)
00022976 <AmiBlitz3.ab3@4992> RTS
0002297C <AmiBlitz3.ab3@4995> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00022980 <AmiBlitz3.ab3@4998>   LEA str_temp(PC),A1
00022982 <AmiBlitz3.ab3@4999>   CLR.w (A1)
00022986 <AmiBlitz3.ab3@5000>   CLR.l $2(A1)
00022988 <AmiBlitz3.ab3@5003>   MOVEQ.l #$04,D0
0002298C <AmiBlitz3.ab3@5006>     MOVE.b $1(A1),(A1)+
00022990 <AmiBlitz3.ab3@5007>   DBF D0,check_for_infoextention__loop
00022994 <AmiBlitz3.ab3@5012>   LEA str_temp(PC),A1
00022996 <AmiBlitz3.ab3@5013>   MOVE.b (A0),D0
0002299A <AmiBlitz3.ab3@5014>   ORI.b #$20,D0
0002299E <AmiBlitz3.ab3@5015>   MOVE.b D0,$5(A1)
000229A0 <AmiBlitz3.ab3@5016>   TST.b (A0)+
000229A4 <AmiBlitz3.ab3@5017>    BNE.w check_for_infoextention__loop2
000229A8 <AmiBlitz3.ab3@5018>   CMPI.w #$2E69,(A1)+                                      ;".i"
000229AC <AmiBlitz3.ab3@5019>    BNE.w check_for_infoextention__no
000229B2 <AmiBlitz3.ab3@5020>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000229B4 <AmiBlitz3.ab3@5023> RTS
000229B8 <AmiBlitz3.ab3@5027>   BPL.w gettokeps__evaltoke
000229BA <AmiBlitz3.ab3@5028>   MOVE.w D0,D1
000229BE <AmiBlitz3.ab3@5029>   ANDI.w #$7F80,D1
000229C2 <AmiBlitz3.ab3@5030>    BEQ.w tokeerr
000229C6 <AmiBlitz3.ab3@5031>   BCLR #$F,D0
000229C8 <AmiBlitz3.ab3@5032>   MOVE.w D0,D4                                             ;got toke number
000229CC <AmiBlitz3.ab3@5033>   BSR.w get1bytemain
000229D0 <AmiBlitz3.ab3@5034> BRA.w gettokeps__gotnum
000229D6 <AmiBlitz3.ab3@5037>   JSR JL_0_BF6A
000229DC <AmiBlitz3.ab3@5038>   CMP.l #MaxWord,D3
000229E0 <AmiBlitz3.ab3@5039>    BHI.w tokeerr
000229E2 <AmiBlitz3.ab3@5040>   TST.w D6
000229E6 <AmiBlitz3.ab3@5041>    BNE.w tokeerr
000229E8 <AmiBlitz3.ab3@5042>   MOVE.w D3,D4
000229EA <AmiBlitz3.ab3@5045>   MOVEQ.l #$00,D5
000229EE <AmiBlitz3.ab3@5046>   CMP.w #$2C,D0
000229F2 <AmiBlitz3.ab3@5047>    BNE.w gettokeps__gotfrom
000229F4 <AmiBlitz3.ab3@5048>   MOVE.w D4,-(A7)
000229FA <AmiBlitz3.ab3@5049>    JSR AJL_0_BF6E
00022A00 <AmiBlitz3.ab3@5050>   CMP.l #MaxWord,D3
00022A04 <AmiBlitz3.ab3@5051>    BHI.w tokeerr
00022A06 <AmiBlitz3.ab3@5052>   TST.w D6
00022A0A <AmiBlitz3.ab3@5053>    BNE.w tokeerr
00022A0C <AmiBlitz3.ab3@5054>   MOVE.w D3,D5
00022A0E <AmiBlitz3.ab3@5055>   MOVE.w (A7)+,D4
00022A10 <AmiBlitz3.ab3@5058> RTS                                                        ;d4=toke, d5=form
00022A12 <AmiBlitz3.ab3@5062>   TST.w D0
00022A16 <AmiBlitz3.ab3@5063>    BSR.w gettokeps
00022A1A <AmiBlitz3.ab3@5064>   MOVE.w #$4EB9,D1
00022A20 <AmiBlitz3.ab3@5065>   JSR writeword
00022A24 <AmiBlitz3.ab3@5066>   BSR.w addoff
00022A26 <AmiBlitz3.ab3@5067>   MOVE.w D5,D1
00022A2A <AmiBlitz3.ab3@5068>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00022A2C <AmiBlitz3.ab3@5069>   SWAP D1
00022A2E <AmiBlitz3.ab3@5070>   MOVE.w D4,D1
00022A34 <AmiBlitz3.ab3@5071> JMP writelong
00022A36 <AmiBlitz3.ab3@5075>   TST.w D0
00022A3A <AmiBlitz3.ab3@5076>    BSR.w gettokeps
00022A3E <AmiBlitz3.ab3@5077>   MOVE.w #$4EB9,D1
00022A44 <AmiBlitz3.ab3@5078>   JSR writeword
00022A48 <AmiBlitz3.ab3@5079>   BSR.w addoff
00022A4A <AmiBlitz3.ab3@5080>   MOVE.w D5,D1
00022A4E <AmiBlitz3.ab3@5081>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00022A50 <AmiBlitz3.ab3@5082>   SWAP D1
00022A52 <AmiBlitz3.ab3@5083>   MOVE.w D4,D1
00022A58 <AmiBlitz3.ab3@5084>   JMP writelong
00022A5E <AmiBlitz3.ab3@5088>   JSR JL_0_BF6A
00022A64 <AmiBlitz3.ab3@5089>   CMP.l #$10000,D3
00022A68 <AmiBlitz3.ab3@5090>    BCC.w tokeerr
00022A6A <AmiBlitz3.ab3@5091>   MOVE.w D3,D1
00022A70 <AmiBlitz3.ab3@5092> JMP Atokejsr
00022A74 <AmiBlitz3.ab3@5096>   BSR.w gettokeps
00022A78 <AmiBlitz3.ab3@5097>   MOVE.w #$4EB9,D1
00022A7E <AmiBlitz3.ab3@5098>   JSR writeword
00022A84 <AmiBlitz3.ab3@5099>   MOVE.l destpointer,D3
00022A8C <AmiBlitz3.ab3@5100>   BTST #$7,blitzmode
00022A90 <AmiBlitz3.ab3@5101>    BEQ.w do_TokeJsr__inamiga
00022A94 <AmiBlitz3.ab3@5102>   BSET #$E,D5
00022A98 <AmiBlitz3.ab3@5105>   BSR.w JL_0_6E86
00022A9C <AmiBlitz3.ab3@5106>   BSR.w addoff
00022AA2 <AmiBlitz3.ab3@5107>   JMP writelong
00022AA6 <AmiBlitz3.ab3@5111>   BEQ.w do_VWait__zero
00022AA8 <AmiBlitz3.ab3@5112>   MOVEQ.l #$02,D2                                          ;get a word
00022AAE <AmiBlitz3.ab3@5114>   JSR bakeval
00022AB2 <AmiBlitz3.ab3@5115>   MOVE.w fvwait(PC),D1
00022AB6 <AmiBlitz3.ab3@5116> BRA.w do_VWait__vcont
00022ABA <AmiBlitz3.ab3@5119>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00022AC0 <AmiBlitz3.ab3@5122>   JSR writeword
00022AC4 <AmiBlitz3.ab3@5123>   MOVE.w #$C104,D1
00022ACA <AmiBlitz3.ab3@5124> JMP Atokejsr
00022ACC <AmiBlitz3.ab3@5128>   SUBQ.w #1,D0
00022AD2 <AmiBlitz3.ab3@5131>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00022AD6 <AmiBlitz3.ab3@5134>   Dc.l $426d0001                                           ;clr.w $0(A5)
00022ADA <AmiBlitz3.ab3@5138>   MOVE.b debugmode(PC),D1
00022ADE <AmiBlitz3.ab3@5139>   BEQ.b debugmode_codelabel__skip
00022AE2 <AmiBlitz3.ab3@5140>   MOVE.w #$D500,D1
00022AE8 <AmiBlitz3.ab3@5141> JMP Atokejsr
00022AEA <AmiBlitz3.ab3@5144> RTS
00022AF2 <AmiBlitz3.ab3@5148>   BSET #$0,blitzmode
00022AFA <AmiBlitz3.ab3@5149>   BSET #$7,blitzmode
00022AFE <AmiBlitz3.ab3@5150>   MOVE.w #$C200,D1
00022B04 <AmiBlitz3.ab3@5151>   JSR Atokejsr
00022B0A <AmiBlitz3.ab3@5152>   TST.b debugmode
00022B0E <AmiBlitz3.ab3@5153>    BEQ.w do_BLITZ__done
00022B12 <AmiBlitz3.ab3@5154>   MOVE.w cgoblitz(PC),D1
00022B18 <AmiBlitz3.ab3@5155>   JSR writeword
00022B1A <AmiBlitz3.ab3@5156>   MOVEQ.l #-$01,D1
00022B20 <AmiBlitz3.ab3@5157>   JSR writeword
00022B26 <AmiBlitz3.ab3@5158>   JSR getbbase
00022B2C <AmiBlitz3.ab3@5159>   JSR writeword
00022B30 <AmiBlitz3.ab3@5162> BRA.w debugmode_codelabel
00022B34 <AmiBlitz3.ab3@5166>   MOVE.w #$C201,D1
00022B38 <AmiBlitz3.ab3@5167> BRA.w do_AMIGA__toamode
00022B3C <AmiBlitz3.ab3@5171>   MOVE.W  #$C202,D1
00022B44 <AmiBlitz3.ab3@5174>   BSET #$0,blitzmode
00022B4C <AmiBlitz3.ab3@5175>   BCLR #$7,blitzmode
00022B52 <AmiBlitz3.ab3@5176>   JSR Atokejsr
00022B58 <AmiBlitz3.ab3@5177>   TST.b debugmode
00022B5C <AmiBlitz3.ab3@5178>    BEQ.w do_AMIGA__done
00022B60 <AmiBlitz3.ab3@5179>   MOVE.w cgoamiga(PC),D1
00022B66 <AmiBlitz3.ab3@5180>   JSR writeword
00022B6C <AmiBlitz3.ab3@5181>   JSR getbbase
00022B72 <AmiBlitz3.ab3@5182>   JSR writeword
00022B76 <AmiBlitz3.ab3@5185> BRA.w debugmode_codelabel
00022B7A <AmiBlitz3.ab3@5189>   MOVEM.l D2-D7/A2-A4,-(A7)
00022B7E <AmiBlitz3.ab3@5192>   MOVEM.l (A7)+,D2-D7/A2-A4
00022B84 <AmiBlitz3.ab3@5196>   JSR JL_0_BF6A
00022B8A <AmiBlitz3.ab3@5197>   CMP.l #$E,D3
00022B8E <AmiBlitz3.ab3@5198>    BCC.w interr4
00022B92 <AmiBlitz3.ab3@5199>   MOVE.w #$7000,D1
00022B94 <AmiBlitz3.ab3@5200>   OR.w D3,D1
00022B9A <AmiBlitz3.ab3@5201>   JSR writeword
00022B9E <AmiBlitz3.ab3@5202>   MOVE.w #$C101,D1
00022BA4 <AmiBlitz3.ab3@5203> JMP Atokejsr                                               ;clear the interupt
00022BA6 <AmiBlitz3.ab3@5206> inerr:       Ds.w 1                                        ;flag - in error trap mode
00022BAA <AmiBlitz3.ab3@5207> errjmp:      Ds.l 1                                        ;where err jump is
00022BAE <AmiBlitz3.ab3@5208> errcode:     Ds.l 1
00022BB2 <AmiBlitz3.ab3@5212>   MOVE.W  #$D202,D1
00022BB8 <AmiBlitz3.ab3@5213> JMP Atokejsr                                               ;BRA.W Atokejsr
00022BBC <AmiBlitz3.ab3@5217>   MOVE.w inerr(PC),D1
00022BC0 <AmiBlitz3.ab3@5218>    BEQ.w errerr3
00022BC6 <AmiBlitz3.ab3@5219>   CLR.w inerr
00022BCC <AmiBlitz3.ab3@5220>   MOVE.w dontwrite,D1
00022BD0 <AmiBlitz3.ab3@5221>    BNE.w doendseterr__skip
00022BD4 <AmiBlitz3.ab3@5222>   MOVEA.l errjmp(PC),A0
00022BDA <AmiBlitz3.ab3@5223>   MOVE.l destpointer,(A0)
00022BDE <AmiBlitz3.ab3@5226> BRA.w get1bytemain
00022BE2 <AmiBlitz3.ab3@5230>   MOVE.w #$D205,D1
00022BE8 <AmiBlitz3.ab3@5231> JMP Atokejsr
00022BEE <AmiBlitz3.ab3@5235>   MOVE.w proceduremode,D1
00022BF2 <AmiBlitz3.ab3@5236>    BNE.w errerr1
00022BF6 <AmiBlitz3.ab3@5237>   MOVE.w inerr(PC),D1
00022BFA <AmiBlitz3.ab3@5238>    BNE.w errerr2
00022C00 <AmiBlitz3.ab3@5239>   LEA inerr,a0
00022C02 <AmiBlitz3.ab3@5240>   NOT.w (a0)                                               ;reass
00022C06 <AmiBlitz3.ab3@5241>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00022C0C <AmiBlitz3.ab3@5242>   JSR writeword
00022C16 <AmiBlitz3.ab3@5243>   MOVE.l destpointer,errcode
00022C1A <AmiBlitz3.ab3@5244>   BSR.w addoff
00022C1E <AmiBlitz3.ab3@5245>   BSR.w writelong
00022C22 <AmiBlitz3.ab3@5246>   MOVE.w #$D201,D1
00022C28 <AmiBlitz3.ab3@5247>   JSR Atokejsr
00022C2C <AmiBlitz3.ab3@5248>   MOVE.w #$4EF9,D1                                         ;JMP
00022C30 <AmiBlitz3.ab3@5249>   BSR.w writeword
00022C3A <AmiBlitz3.ab3@5250>   MOVE.l destpointer,errjmp
00022C3E <AmiBlitz3.ab3@5251>   BSR.w addoff
00022C42 <AmiBlitz3.ab3@5252>   BSR.w writelong
00022C48 <AmiBlitz3.ab3@5253>   MOVE.w dontwrite,D1
00022C4C <AmiBlitz3.ab3@5254>    BNE.w do_SetErr__skip
00022C50 <AmiBlitz3.ab3@5255>   MOVEA.l errcode(PC),A0
00022C56 <AmiBlitz3.ab3@5256>   MOVE.l destpointer,(A0)
00022C58 <AmiBlitz3.ab3@5259> RTS
00022C5C <AmiBlitz3.ab3@5262> intlineat:  Ds.l 1
00022C5E <AmiBlitz3.ab3@5266>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00022C62 <AmiBlitz3.ab3@5267>   BSR.w errchx
00022C68 <AmiBlitz3.ab3@5268>   MOVE.w D1,intstring
00022C72 <AmiBlitz3.ab3@5269>   MOVE.l linenumat,intlineat
00022C78 <AmiBlitz3.ab3@5270>   JSR JL_0_BF6A                                           ;get constant - int level
00022C7E <AmiBlitz3.ab3@5271>   CMP.l #$E,D3
00022C82 <AmiBlitz3.ab3@5272>    BCC.w interr4
00022C88 <AmiBlitz3.ab3@5273>   ST intsused
00022C8E <AmiBlitz3.ab3@5274>   MOVE.w D3,intlevel
00022C92 <AmiBlitz3.ab3@5275>   MOVE.w #$7000,D1
00022C94 <AmiBlitz3.ab3@5276>   OR.w D3,D1                                              
00022C98 <AmiBlitz3.ab3@5277>   BSR.w writeword                                         ;moveq #x,d0
00022C9C <AmiBlitz3.ab3@5278>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00022CA0 <AmiBlitz3.ab3@5279>   BSR.w writeword
00022CA4 <AmiBlitz3.ab3@5280>   BSR.w addoff
00022CAA <AmiBlitz3.ab3@5281>   MOVE.l destpointer,-(A7)
00022CAE <AmiBlitz3.ab3@5282>   BSR.w writelong
00022CB2 <AmiBlitz3.ab3@5283>   MOVE.w #$C100,D1
00022CB8 <AmiBlitz3.ab3@5284>   JSR Atokejsr
00022CBC <AmiBlitz3.ab3@5285>   MOVE.w #$4EF9,D1                                        ;jmp
00022CC0 <AmiBlitz3.ab3@5286>   BSR.w writeword
00022CC4 <AmiBlitz3.ab3@5287>   BSR.w addoff
00022CCE <AmiBlitz3.ab3@5288>   MOVE.l destpointer,intjmpat
00022CD2 <AmiBlitz3.ab3@5289>   BSR.w writelong
00022CD4 <AmiBlitz3.ab3@5290>   MOVEA.l (A7)+,A0
00022CDA <AmiBlitz3.ab3@5291>   MOVE.w dontwrite,D1
00022CDE <AmiBlitz3.ab3@5292>   BNE.w do_SetInt__dontpoke
00022CE4 <AmiBlitz3.ab3@5293>   MOVE.l destpointer,(A0)
00022CE8 <AmiBlitz3.ab3@5296>   MOVE.l intstart0(PC),D1
00022CEC <AmiBlitz3.ab3@5297>   BSR.w writelong
00022CF2 <AmiBlitz3.ab3@5298>   TST.b debugmode
00022CF6 <AmiBlitz3.ab3@5299>    BEQ.w do_SetInt__norerr
00022CF8 <AmiBlitz3.ab3@5303>   MOVEQ.l #$02,D1
00022CFC <AmiBlitz3.ab3@5304>   BSR.w writetrap
00022D00 <AmiBlitz3.ab3@5305>   BSR.w addoff
00022D0A <AmiBlitz3.ab3@5306>   MOVE.l destpointer,intcleanat
00022D0E <AmiBlitz3.ab3@5307>   BSR.w writelong
00022D14 <AmiBlitz3.ab3@5308>   MOVE.w intlevel,D1
00022D18 <AmiBlitz3.ab3@5309>   BSR.w writeword
00022D1C <AmiBlitz3.ab3@5310>   MOVE.w #$C30B,D1                                         ;disable stack checks
00022D22 <AmiBlitz3.ab3@5311>   JSR Atokejsr
00022D26 <AmiBlitz3.ab3@5314>   MOVE.w #$FED3,D1
00022D2A <AmiBlitz3.ab3@5315>   BSR.w uselib
00022D2E <AmiBlitz3.ab3@5316>   MOVE.w #$C102,D1
00022D34 <AmiBlitz3.ab3@5317>   JSR Atokejsr
00022D3C <AmiBlitz3.ab3@5318>   MOVE.w #-1,lasta6
00022D46 <AmiBlitz3.ab3@5319>   MOVE.l linenumat,intline
00022D48 <AmiBlitz3.ab3@5320> RTS
00022D4A <AmiBlitz3.ab3@5324>             Ds.w 1                                         ;??looks like obsolved data??
00022D4E <AmiBlitz3.ab3@5326> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00022D52 <AmiBlitz3.ab3@5328> intjmpat:   Ds.l 1
00022D56 <AmiBlitz3.ab3@5329> intline:    Ds.l 1
00022D58 <AmiBlitz3.ab3@5330> intstring:  Ds.w 1                                         ;flag 0 = no setint
00022D5A <AmiBlitz3.ab3@5333> intlevel:   Ds.w 1
00022D5E <AmiBlitz3.ab3@5334> intcleanat: Ds.l 1
00022D62 <AmiBlitz3.ab3@5335> ret15add:   Ds.l 1
00022D64 <AmiBlitz3.ab3@5336> ret15cc:    Ds.w 1
00022D6C <AmiBlitz3.ab3@5340>   ADDI.l #$12,$2(A7)
00022D74 <AmiBlitz3.ab3@5341>   MOVE.l $2(A7),ret15add
00022D7A <AmiBlitz3.ab3@5342>   MOVE.w (A7),ret15cc
00022D82 <AmiBlitz3.ab3@5343>   MOVE.l #directdo,$2(A7)
00022D84 <AmiBlitz3.ab3@5344> RTE
00022D88 <AmiBlitz3.ab3@5353>   MOVE.l ret15add(PC),-(A7)
00022D8C <AmiBlitz3.ab3@5354>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00022D90 <AmiBlitz3.ab3@5355>   MOVEM.l D0-D7/A0-A6,-(A7)
00022D9A <AmiBlitz3.ab3@5356>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00022DA4 <AmiBlitz3.ab3@5357>   MOVE.l destbufferstart,trap15temp2
00022DAE <AmiBlitz3.ab3@5358>   MOVE.l libend,templibend
00022DB8 <AmiBlitz3.ab3@5359>   MOVE.l data1start,tempdata1start
00022DBE <AmiBlitz3.ab3@5360>   CLR.l hunkoffsetcounter
00022DC4 <AmiBlitz3.ab3@5362>   MOVE.l directbuffer,a0
00022DCA <AmiBlitz3.ab3@5366>   MOVE.l a0,destbufferstart
00022DD0 <AmiBlitz3.ab3@5367>   ADD.l #3900,a0
00022DD6 <AmiBlitz3.ab3@5368>   MOVE.l a0,destbufferend
00022DDC <AmiBlitz3.ab3@5369>   TST.b exdebug
00022DE0 <AmiBlitz3.ab3@5370>   BEQ 'l1
00022DE6 <AmiBlitz3.ab3@5371>   MOVE.l a0,libend
00022DEC <AmiBlitz3.ab3@5372>   ADD.l #4000,a0
00022DF2 <AmiBlitz3.ab3@5373>   MOVE.l a0,data1start
00022DFC <AmiBlitz3.ab3@5376>   MOVE.l #dircont,errcont
00022E02 <AmiBlitz3.ab3@5377> 
00022E08 <AmiBlitz3.ab3@5378>   MOVE.l A7,errstack
00022E10 <AmiBlitz3.ab3@5379>   MOVE.w #$FFFF,dirmode
00022E14 <AmiBlitz3.ab3@5381>     MOVEA.l ret15add(PC),A1
00022E1A <AmiBlitz3.ab3@5382>     MOVE.w -(A1),blitzmode
00022E1C <AmiBlitz3.ab3@5383>     CLR.l -(A1)
00022E22 <AmiBlitz3.ab3@5384>     MOVE.l -(A1),firstglob
00022E28 <AmiBlitz3.ab3@5385>     MOVE.l -(A1),firstlocal
00022E2E <AmiBlitz3.ab3@5387>   CLR.w proceduremode
00022E34 <AmiBlitz3.ab3@5388>   MOVE.l firstglob,D0
00022E3A <AmiBlitz3.ab3@5389>   OR.l firstlocal,D0
00022E3E <AmiBlitz3.ab3@5390>   BEQ.b directdo__skip
00022E44 <AmiBlitz3.ab3@5391>   NOT.w proceduremode
00022E46 <AmiBlitz3.ab3@5394>   MOVEA.l -(A1),A0                                         ;address of string
00022E48 <AmiBlitz3.ab3@5398>   MOVE.l A0,-(A7)
00022E86 <AmiBlitz3.ab3@5401>   !ComData_GetL{comFunc_DebugTrap,A1}
00022E88 <AmiBlitz3.ab3@5403>   JSR (A1)                                                 ;tokenise line.....
00022E8A <AmiBlitz3.ab3@5405>   MOVEA.l (A7)+,A5
00022E94 <AmiBlitz3.ab3@5406>   MOVE.l directbuffer,destpointer
00022E9A <AmiBlitz3.ab3@5407>   TST.b exdebug
00022E9E <AmiBlitz3.ab3@5408>   BEQ 'noexdebug
00022EA0 <AmiBlitz3.ab3@5409>   MOVE.l a5,a0
00022EA6 <AmiBlitz3.ab3@5410>   MOVE.l #200,d0
00022EAC <AmiBlitz3.ab3@5413>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00022EB0 <AmiBlitz3.ab3@5414>   DBF d0,'l1
00022EB6 <AmiBlitz3.ab3@5419>   MOVE.l destpointer,a0
00022EBA <AmiBlitz3.ab3@5420>   MOVE.w #$207c,(a0)+
00022EBC <AmiBlitz3.ab3@5421>   MOVE.l a5,d0
00022EC2 <AmiBlitz3.ab3@5422>   ADD.l #$206,d0                                           ;constant from debuglib
00022EC4 <AmiBlitz3.ab3@5423>   MOVE.l d0,(a0)+
00022ECA <AmiBlitz3.ab3@5424>   MOVE.l a0,destpointer
00022ECC <AmiBlitz3.ab3@5425>   MOVE.l a5,a0
00022ED0 <AmiBlitz3.ab3@5426>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00022ED6 <AmiBlitz3.ab3@5427>   MOVE.l #"$520",(a0)+
00022EDA <AmiBlitz3.ab3@5428>   MOVE.w #"4:",(a0)+
00022EE0 <AmiBlitz3.ab3@5431>   CLR.w dontwrite
00022EE8 <AmiBlitz3.ab3@5432>   MOVE.w #$FFFF,lasta6
00022EEC <AmiBlitz3.ab3@5433>   BSR.w compile_line                                        ;.....compile it
00022EF2 <AmiBlitz3.ab3@5434>   TST.b exdebug
00022EF6 <AmiBlitz3.ab3@5435>   BEQ 'noexdebug2
00022EFC <AmiBlitz3.ab3@5436>   JSR JL_0_6C76
00022F02 <AmiBlitz3.ab3@5439>   CLR.w proceduremode
00022F06 <AmiBlitz3.ab3@5440>   BSR.w errchx
00022F0A <AmiBlitz3.ab3@5441>   MOVE.w #$4EF9,D1
00022F0E <AmiBlitz3.ab3@5442>   BSR.w writeword                                          ;JMP
00022F12 <AmiBlitz3.ab3@5443>   MOVE.l ret15add(PC),D1
00022F16 <AmiBlitz3.ab3@5444>   BSR.w writelong                                          ;jmp to done
00022F1C <AmiBlitz3.ab3@5445>   MOVE.w dontwrite,D0
00022F20 <AmiBlitz3.ab3@5446>    BNE.w nodirmem
00022F28 <AmiBlitz3.ab3@5447>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00022F2E <AmiBlitz3.ab3@5450>   CLR.w dirmode
00022F34 <AmiBlitz3.ab3@5451>   MOVE.w ret15cc(PC),$3C(A7)
00022F3E <AmiBlitz3.ab3@5452>   MOVE.l trap15temp,destbufferend
00022F48 <AmiBlitz3.ab3@5453>   MOVE.l trap15temp2,destbufferstart
00022F52 <AmiBlitz3.ab3@5454>   MOVE.l tempdata1start,data1start
00022F5C <AmiBlitz3.ab3@5455>   MOVE.l templibend,libend
00022F60 <AmiBlitz3.ab3@5456>   MOVEM.l (A7)+,D0-D7/A0-A6
00022F64 <AmiBlitz3.ab3@5457>   BSR.w Aclearcache                                        ;selden used
00022F66 <AmiBlitz3.ab3@5458> RTR
00022F6A <AmiBlitz3.ab3@5461>   MOVEA.l ret15add(PC),A0
00022F6C <AmiBlitz3.ab3@5462>   SUBQ.w #2,A0
00022F6E <AmiBlitz3.ab3@5463>   MOVE.l D0,-(A0)
00022F72 <AmiBlitz3.ab3@5464> BRA.w direxit
00022F76 <AmiBlitz3.ab3@5468>   MOVE.w $6(A3),D1
00022F7A <AmiBlitz3.ab3@5469>   BSR.w uselib                                             ;get lib for base address
00022F7E <AmiBlitz3.ab3@5470>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00022F80 <AmiBlitz3.ab3@5471>   ADDQ.w #8,A3
00022F82 <AmiBlitz3.ab3@5472>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00022F84 <AmiBlitz3.ab3@5473>   MOVE.l A3,-(A7)
00022F86 <AmiBlitz3.ab3@5477>   MOVEQ.l #$00,D3
00022F8C <AmiBlitz3.ab3@5478>   JSR checka4a5
00022F8E <AmiBlitz3.ab3@5480>   MOVE.b (A3)+,D1
00022F92 <AmiBlitz3.ab3@5481>    BMI.w stamigalib__done
00022F94 <AmiBlitz3.ab3@5482>   MOVEQ.l #$03,D2
00022F96 <AmiBlitz3.ab3@5483>   ADDQ.w #1,D3
00022F9A <AmiBlitz3.ab3@5484>   MOVEM.l D3/A3,-(A7)
00022FA0 <AmiBlitz3.ab3@5485>   MOVE.b funcparloop,-(a7)
00022FA8 <AmiBlitz3.ab3@5486>   MOVE.b #0,funcparloop
00022FAE <AmiBlitz3.ab3@5487>   MOVE.l leftsidetype,-(a7)
00022FB4 <AmiBlitz3.ab3@5488>   MOVE.l rightsidetype,-(a7)
00022FBA <AmiBlitz3.ab3@5489>   CLR.l leftsidetype
00022FC0 <AmiBlitz3.ab3@5490>   CLR.l rightsidetype
00022FC6 <AmiBlitz3.ab3@5491>   MOVE.b blitzparloop,-(a7)
00022FCE <AmiBlitz3.ab3@5492>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00022FD4 <AmiBlitz3.ab3@5493>   JSR peval
00022FDA <AmiBlitz3.ab3@5494>   MOVE.b (a7)+,blitzparloop
00022FE0 <AmiBlitz3.ab3@5495>   MOVE.l (a7)+,rightsidetype
00022FE6 <AmiBlitz3.ab3@5496>   MOVE.l (a7)+,leftsidetype
00022FEC <AmiBlitz3.ab3@5497>   MOVE.b (a7)+,funcparloop
00022FF0 <AmiBlitz3.ab3@5498>   MOVEM.l (A7)+,D3/A3
00022FF4 <AmiBlitz3.ab3@5499>   CMP.w #$2C,D0
00022FF8 <AmiBlitz3.ab3@5500>    BEQ.w stamigalib__loop
00022FFA <AmiBlitz3.ab3@5501>   TST.b (A3)
00022FFE <AmiBlitz3.ab3@5502>    BPL.w syntaxerr
00023000 <AmiBlitz3.ab3@5505>   MOVEA.l (A7)+,A3
00023002 <AmiBlitz3.ab3@5506>   SUBQ.w #1,D3
00023006 <AmiBlitz3.ab3@5507>    BPL.w stamigalib__toend
0002300A <AmiBlitz3.ab3@5508>    BSR.w get1bytemain                                      ;no pars - get :
0002300E <AmiBlitz3.ab3@5509> BRA.w stamigalib__nopars
00023010 <AmiBlitz3.ab3@5512>   TST.b (A3)+                                              ;go to end of params
00023014 <AmiBlitz3.ab3@5513>    BPL.w stamigalib__toend
00023016 <AmiBlitz3.ab3@5514>   SUBQ.w #1,A3
00023018 <AmiBlitz3.ab3@5517>    MOVEQ.l #$00,D1
0002301A <AmiBlitz3.ab3@5518>    MOVE.b -(A3),D1
0002301E <AmiBlitz3.ab3@5519>    BTST #$4,D1
00023022 <AmiBlitz3.ab3@5520>     BNE.w stamigalib__addreg
00023024 <AmiBlitz3.ab3@5521>    LSL.w #8,D1
00023026 <AmiBlitz3.ab3@5522>    LSL.w #1,D1
0002302A <AmiBlitz3.ab3@5523>    ORI.w #$201F,D1
0002302E <AmiBlitz3.ab3@5524>  BRA.w stamigalib__gotit
00023032 <AmiBlitz3.ab3@5527>    ANDI.w #$7,D1
00023034 <AmiBlitz3.ab3@5528>    LSL.w #8,D1
00023036 <AmiBlitz3.ab3@5529>    LSL.w #1,D1
0002303A <AmiBlitz3.ab3@5530>    ORI.w #$205F,D1
0002303E <AmiBlitz3.ab3@5533>     BSR.w writeword
00023042 <AmiBlitz3.ab3@5534>   DBF D3,stamigalib__loop2
00023048 <AmiBlitz3.ab3@5537>   MOVE.w (A7)+,libjsr+2
0002304E <AmiBlitz3.ab3@5538>   MOVE.w (A7)+,libbase+2
00023054 <AmiBlitz3.ab3@5539>   MOVE.l libbase,D1
00023058 <AmiBlitz3.ab3@5540>    BSR.w writelong
0002305E <AmiBlitz3.ab3@5541>   MOVE.l libjsr,D1
00023064 <AmiBlitz3.ab3@5542>   JSR writelong
0002306A <AmiBlitz3.ab3@5543>   JSR restorea4a5
0002306C <AmiBlitz3.ab3@5544>   RTS
00023072 <AmiBlitz3.ab3@5547>   MOVE.l data1,D4
00023078 <AmiBlitz3.ab3@5548>   SUB.l data1start,D4
0002307E <AmiBlitz3.ab3@5549>   ADD.l #10000,d4
00023084 <AmiBlitz3.ab3@5550>   MOVE.l libend,D3
0002308A <AmiBlitz3.ab3@5551>   SUB.l destbufferend,D3
00023090 <AmiBlitz3.ab3@5552>   ADD.l #40000,d3
00023096 <AmiBlitz3.ab3@5553>   MOVE.l bigpc,D2
0002309C <AmiBlitz3.ab3@5554>   SUB.l destbufferstart,D2
000230A2 <AmiBlitz3.ab3@5555>   ADD.l #20000,d2
000230A8 <AmiBlitz3.ab3@5556>   MOVE.l databuffer,D5
000230AE <AmiBlitz3.ab3@5557>   ADD.l #10000,D5
000230B2 <AmiBlitz3.ab3@5558> BRA newallox
000230B8 <AmiBlitz3.ab3@5562>   MOVE.l objectbuffer,D2
000230BA <AmiBlitz3.ab3@5563>   LSR.l #1,D2
000230C0 <AmiBlitz3.ab3@5564>   ADD.l objectbuffer,D2
000230C6 <AmiBlitz3.ab3@5565>   MOVE.l libsbuffer,D3
000230C8 <AmiBlitz3.ab3@5566>   LSR.l #1,D3
000230CE <AmiBlitz3.ab3@5567>   ADD.l libsbuffer,D3
000230D4 <AmiBlitz3.ab3@5568>   MOVE.l systembuffer,D4
000230D6 <AmiBlitz3.ab3@5569>   LSR.l #1,D4
000230DC <AmiBlitz3.ab3@5570>   ADD.l systembuffer,D4
000230E2 <AmiBlitz3.ab3@5571>   MOVE.l databuffer,D5
000230E4 <AmiBlitz3.ab3@5572>   LSR.l #1,D5
000230EA <AmiBlitz3.ab3@5573>   ADD.l databuffer,D5
000230EE <AmiBlitz3.ab3@5574> BRA.w newallox
000230F4 <AmiBlitz3.ab3@5578>   MOVE.l bigpc,D2
000230FA <AmiBlitz3.ab3@5579>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023100 <AmiBlitz3.ab3@5580>   SUB.l savefuncspace,d2
00023106 <AmiBlitz3.ab3@5582>   TST.w debugversion
0002310A <AmiBlitz3.ab3@5583>    BNE.b alloxadj__skip
00023110 <AmiBlitz3.ab3@5584>   ADDI.l #$800,D2
00023116 <AmiBlitz3.ab3@5587>   MOVE.l libend,D3
0002311C <AmiBlitz3.ab3@5588>   SUB.l destbufferend,D3
00023122 <AmiBlitz3.ab3@5590>   MOVE.l data1,D4
00023128 <AmiBlitz3.ab3@5591>   SUB.l data1start,D4
0002312E <AmiBlitz3.ab3@5593>   MOVE.l data2,D5
00023134 <AmiBlitz3.ab3@5594>   SUB.l data2at,D5
0002313A <AmiBlitz3.ab3@5596>   CLR.l morememadd
0002313E <AmiBlitz3.ab3@5599>   BSR.w makeallox
00023142 <AmiBlitz3.ab3@5600>   BNE.w newallox__done
00023146 <AmiBlitz3.ab3@5601> BRA.w init_buffers
00023148 <AmiBlitz3.ab3@5604> RTS
0002314E <AmiBlitz3.ab3@5608>   MOVEA.l _execbase,A6
00023154 <AmiBlitz3.ab3@5609>   MOVE.l objlen,D0
00023158 <AmiBlitz3.ab3@5610>   BEQ.w freeallox__skip
0002315E <AmiBlitz3.ab3@5611>   CLR.l objlen
00023164 <AmiBlitz3.ab3@5612>   MOVEA.l destbufferstart,A1
0002316A <AmiBlitz3.ab3@5613>   MOVE.l mempool,a0
0002316E <AmiBlitz3.ab3@5614> JMP _FreeVec(A6)
00023170 <AmiBlitz3.ab3@5617> RTS
00023176 <AmiBlitz3.ab3@5621>   MOVE.l objectbuffer,D2
0002317C <AmiBlitz3.ab3@5622>   MOVE.l libsbuffer,D3
00023182 <AmiBlitz3.ab3@5623>   MOVE.l systembuffer,D4
00023188 <AmiBlitz3.ab3@5624>   MOVE.l databuffer,D5
00023190 <AmiBlitz3.ab3@5627>   MOVE.w #$FFFF,anyerrs
00023194 <AmiBlitz3.ab3@5628>   BSR.w freeallox
00023196 <AmiBlitz3.ab3@5632>   ADDQ.l #1,D2
0002319A <AmiBlitz3.ab3@5633>   BCLR #$0,D2
0002319C <AmiBlitz3.ab3@5634>   ADDQ.l #1,D3
000231A0 <AmiBlitz3.ab3@5635>   BCLR #$0,D3
000231A2 <AmiBlitz3.ab3@5636>   ADDQ.l #1,D4
000231A6 <AmiBlitz3.ab3@5637>   BCLR #$0,D4
000231A8 <AmiBlitz3.ab3@5638>   TST.l d5
000231AC <AmiBlitz3.ab3@5639>   BNE 'l1
000231AE <AmiBlitz3.ab3@5642>   ADDQ.l #1,D5
000231B2 <AmiBlitz3.ab3@5643>   BCLR #$0,D5
000231B4 <AmiBlitz3.ab3@5644>   MOVE.l D2,D0
000231B6 <AmiBlitz3.ab3@5645>   ADD.l D3,D0
000231B8 <AmiBlitz3.ab3@5646>   ADD.l D4,D0
000231BA <AmiBlitz3.ab3@5647>   ADD.l D5,D0
000231C0 <AmiBlitz3.ab3@5648>   ADD.l #moremem,d0
000231C2 <AmiBlitz3.ab3@5649>   MOVE.l D0,D6
000231C8 <AmiBlitz3.ab3@5650>   MOVE.l #MemfPublic_MemfClear,D1
000231CE <AmiBlitz3.ab3@5651>   MOVE.l mempool,a0
000231D4 <AmiBlitz3.ab3@5652>   MOVEA.l _execbase,A6
000231D8 <AmiBlitz3.ab3@5653>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
000231DA <AmiBlitz3.ab3@5655>   TST.l D0
000231DE <AmiBlitz3.ab3@5656>   BEQ.w exit_initbuffers
000231E4 <AmiBlitz3.ab3@5657>   MOVE.l D6,objlen
000231EA <AmiBlitz3.ab3@5658>   MOVE.l D2,objectbuffer
000231F0 <AmiBlitz3.ab3@5659>   MOVE.l D3,libsbuffer
000231F6 <AmiBlitz3.ab3@5660>   MOVE.l D4,systembuffer
000231FC <AmiBlitz3.ab3@5661>   MOVE.l D5,databuffer
00023202 <AmiBlitz3.ab3@5662>   MOVE.l D0,destbufferstart
00023236 <AmiBlitz3.ab3@5665>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023238 <AmiBlitz3.ab3@5666>   ADD.l D2,D0
0002323E <AmiBlitz3.ab3@5667>   MOVE.l D0,destbufferend
00023240 <AmiBlitz3.ab3@5668>   ADD.l D3,D0
00023246 <AmiBlitz3.ab3@5669>   MOVE.l D0,data1start
00023248 <AmiBlitz3.ab3@5670>   ADD.l D4,D0
0002324E <AmiBlitz3.ab3@5671>   MOVE.l D0,data2at
00023250 <AmiBlitz3.ab3@5672>   ADD.l D5,D0
00023256 <AmiBlitz3.ab3@5673>   MOVE.l D0,allat
00023258 <AmiBlitz3.ab3@5676> RTS
0002325C <AmiBlitz3.ab3@5680>   Dc.b $00,$00,$00,$01                                     ;         1
00023260 <AmiBlitz3.ab3@5681>   Dc.b $00,$00,$00,$0A                                     ;        10
00023264 <AmiBlitz3.ab3@5682>   Dc.b $00,$00,$00,$64                                     ;       100
00023268 <AmiBlitz3.ab3@5683>   Dc.b $00,$00,$03,$E8                                     ;      1000
0002326C <AmiBlitz3.ab3@5684>   Dc.b $00,$00,$27,$10                                     ;     10000
00023270 <AmiBlitz3.ab3@5685>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023274 <AmiBlitz3.ab3@5686>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023278 <AmiBlitz3.ab3@5687>   Dc.b $00,$98,$96,$80                                     ;  10000000
0002327C <AmiBlitz3.ab3@5688>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023280 <AmiBlitz3.ab3@5689>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023282 <AmiBlitz3.ab3@5693>   MOVEQ.l #$00,D1                                          ;no zero printed
00023284 <AmiBlitz3.ab3@5694>   MOVEQ.l #$24,D3                                          ; "$"
00023286 <AmiBlitz3.ab3@5697>   MOVEQ.l #$30,D4                                          ; "0"
0002328A <AmiBlitz3.ab3@5700>     CMP.l divisors(PC,D3.W),D2
0002328E <AmiBlitz3.ab3@5701>     BCS.w makelong__skip
00023292 <AmiBlitz3.ab3@5702>     SUB.l divisors(PC,D3.W),D2
00023294 <AmiBlitz3.ab3@5703>     ADDQ.w #1,D4
00023298 <AmiBlitz3.ab3@5704> BRA.w makelong__loop2
0002329C <AmiBlitz3.ab3@5707>   CMP.b #"0",D4
000232A0 <AmiBlitz3.ab3@5708>   BNE.w makelong__doit
000232A2 <AmiBlitz3.ab3@5709>   TST.w D1
000232A6 <AmiBlitz3.ab3@5710>   BEQ.w makelong__skip2
000232A8 <AmiBlitz3.ab3@5713>   MOVE.b D4,(A0)+
000232AA <AmiBlitz3.ab3@5714>   MOVEQ.l #$01,D1
000232AC <AmiBlitz3.ab3@5717>   SUBQ.w #4,D3
000232B0 <AmiBlitz3.ab3@5718>   BPL.w makelong__loop
000232B2 <AmiBlitz3.ab3@5719>   TST.w D1
000232B6 <AmiBlitz3.ab3@5720>   BNE.w makelong__skip3
000232BA <AmiBlitz3.ab3@5721>   MOVE.b #"0",(A0)+
000232BC <AmiBlitz3.ab3@5724>   CLR.b (A0)
000232BE <AmiBlitz3.ab3@5725> RTS
000232DE <AmiBlitz3.ab3@5728> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002339E <AmiBlitz3.ab3@5729> str_residentpath:       Ds.l 48                                                ;respath org source
0002345E <AmiBlitz3.ab3@5730> str_residentname:       Ds.l 48                                                ;resname org source
00023464 <AmiBlitz3.ab3@5734>   MOVE.l macrobase,D0
00023468 <AmiBlitz3.ab3@5735>    BNE.w create_residentfile
0002346E <AmiBlitz3.ab3@5736>   MOVE.l newtype_string,D0
00023472 <AmiBlitz3.ab3@5737>    BNE.w create_residentfile
00023478 <AmiBlitz3.ab3@5738>   MOVEA.l labelbase,A2
0002347C <AmiBlitz3.ab3@5741>     CMPA.w #$0,A2
00023480 <AmiBlitz3.ab3@5742>      BEQ.w menu_createresidentfile__err
00023488 <AmiBlitz3.ab3@5743>     CMPI.l #$1,$4(A2)
0002348C <AmiBlitz3.ab3@5744>      BEQ.w create_residentfile
0002348E <AmiBlitz3.ab3@5745>     MOVEA.l (A2),A2
00023492 <AmiBlitz3.ab3@5746> BRA.w menu_createresidentfile__loop
000234BC <AmiBlitz3.ab3@5749>   !basic
0002351E <AmiBlitz3.ab3@5750> 
0002353C <AmiBlitz3.ab3@5751>   !asm
0002353E <AmiBlitz3.ab3@5752> RTS
0002357C <AmiBlitz3.ab3@5758>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023582 <AmiBlitz3.ab3@5759>   LEA str_residentrequester,A2
00023588 <AmiBlitz3.ab3@5760>   LEA str_residentpath,A0
0002358E <AmiBlitz3.ab3@5761>   LEA str_residentname,A1
000235B8 <AmiBlitz3.ab3@5762>   !basic
000235F0 <AmiBlitz3.ab3@5763>     Poke$ ?str_residentpath,my_residentsdir$
0002361C <AmiBlitz3.ab3@5764>     Poke$ ?str_residentname,".res"
0002363A <AmiBlitz3.ab3@5765>   !asm
0002363C <AmiBlitz3.ab3@5767>   JSR (A3)                                                 ;open ped filerequest
00023640 <AmiBlitz3.ab3@5769>   BEQ.w menu_createresidentfile__err
00023642 <AmiBlitz3.ab3@5772>   MOVE.l D0,D1
00023648 <AmiBlitz3.ab3@5773>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002364C <AmiBlitz3.ab3@5774>   MOVEA.l _dosbase(PC),A6
00023650 <AmiBlitz3.ab3@5775>   JSR _Open(A6)
00023652 <AmiBlitz3.ab3@5776>   MOVE.l D0,D7                                             ;handle
00023656 <AmiBlitz3.ab3@5777>   BEQ.w menu_createresidentfile__err
0002365A <AmiBlitz3.ab3@5778>   MOVEM.l d2-d7/a0-a6,-(a7)
00023660 <AmiBlitz3.ab3@5779>   LEA devo,a0
00023666 <AmiBlitz3.ab3@5780>   LEA ptr_parameterstore,a1
00023668 <AmiBlitz3.ab3@5783>     MOVE.b (a0)+,(a1)+
0002366C <AmiBlitz3.ab3@5784>   BNE 'l1
0002366E <AmiBlitz3.ab3@5785>   MOVEQ #13,d2
00023674 <AmiBlitz3.ab3@5786>   JSR findlabel2
00023678 <AmiBlitz3.ab3@5787>   BNE 'd
0002367C <AmiBlitz3.ab3@5788>   TST.l 8(a2)
00023680 <AmiBlitz3.ab3@5789>   BEQ 'd2
000236AA <AmiBlitz3.ab3@5790>   !basic
0002370C <AmiBlitz3.ab3@5791>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0002372A <AmiBlitz3.ab3@5792>   !asm
0002372E <AmiBlitz3.ab3@5793>   MOVEM.l (a7)+,d2-d7/a0-a6
00023732 <AmiBlitz3.ab3@5794>   MOVEA.l _dosbase(PC),A6
00023734 <AmiBlitz3.ab3@5795>   MOVE.l d7,d1
00023738 <AmiBlitz3.ab3@5796>   JSR _Close(a6)
0002373C <AmiBlitz3.ab3@5797> BRA menu_createresidentfile__err
00023740 <AmiBlitz3.ab3@5801>   MOVEM.l (a7)+,d2-d7/a0-a6
00023744 <AmiBlitz3.ab3@5802>   BSR.w call_setpointerbusy
00023748 <AmiBlitz3.ab3@5804>   BSR.w AJL_0_7962
0002374A <AmiBlitz3.ab3@5805>   MOVE.l D7,D1
00023750 <AmiBlitz3.ab3@5806>   MOVE.l #tsthead,D2                                       ;header
00023752 <AmiBlitz3.ab3@5807>   MOVEQ.l #$20,D3
00023756 <AmiBlitz3.ab3@5808>   MOVEA.l _dosbase(PC),A6
0002375A <AmiBlitz3.ab3@5809>   JSR _Write(A6)
0002375C <AmiBlitz3.ab3@5810>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00023760 <AmiBlitz3.ab3@5811>   BSR.w restypes
00023764 <AmiBlitz3.ab3@5812>   BSR.w resmacs
00023768 <AmiBlitz3.ab3@5813>   BSR.w resconsts
0002376A <AmiBlitz3.ab3@5814>   MOVE.l D6,D3
0002376C <AmiBlitz3.ab3@5815>   ADDQ.l #3,D3
00023772 <AmiBlitz3.ab3@5816>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00023774 <AmiBlitz3.ab3@5817>   MOVE.l D3,-(A7)
00023776 <AmiBlitz3.ab3@5818>   SUB.l D6,D3
0002377A <AmiBlitz3.ab3@5819>   BEQ.w menu_createresidentfile__noalign
00023780 <AmiBlitz3.ab3@5820>   MOVE.l #writelist,D2
00023782 <AmiBlitz3.ab3@5821>   MOVE.l D7,D1
00023788 <AmiBlitz3.ab3@5822>   MOVEA.l _dosbase,A6
0002378C <AmiBlitz3.ab3@5823>   JSR _Write(A6)
00023796 <AmiBlitz3.ab3@5826>    MOVE.l hunkoffsetcounter,tstsize3
0002379A <AmiBlitz3.ab3@5827>    BEQ.w menu_createresidentfile__skip2a
0002379C <AmiBlitz3.ab3@5828>   MOVE.l D7,D1
000237A2 <AmiBlitz3.ab3@5829>   MOVE.l #tstend,D2
000237A4 <AmiBlitz3.ab3@5830>   MOVEQ.l #$0C,D3
000237AA <AmiBlitz3.ab3@5831>   MOVEA.l _dosbase,A6
000237AE <AmiBlitz3.ab3@5832>    JSR _Write(A6)
000237B4 <AmiBlitz3.ab3@5836>   MOVEA.l hunkoffsetbase,A2
000237B8 <AmiBlitz3.ab3@5839>   CMPA.w #$0,A2
000237BC <AmiBlitz3.ab3@5840>    BEQ.w menu_createresidentfile__skip2
000237C0 <AmiBlitz3.ab3@5841>   LEA $4(A2),A1
000237C2 <AmiBlitz3.ab3@5842>   MOVE.l D7,D1
000237C4 <AmiBlitz3.ab3@5843>   MOVE.l A1,D2
000237C6 <AmiBlitz3.ab3@5844>   MOVEQ.l #$04,D3
000237CC <AmiBlitz3.ab3@5845>   MOVEA.l _dosbase,A6
000237D0 <AmiBlitz3.ab3@5846>    JSR _Write(A6)
000237D2 <AmiBlitz3.ab3@5847>   MOVEA.l (A2),A2
000237D6 <AmiBlitz3.ab3@5848> BRA.w menu_createresidentfile__oloop
000237D8 <AmiBlitz3.ab3@5851>   MOVE.l D7,D1
000237DE <AmiBlitz3.ab3@5852>   MOVE.l #zero,D2
000237E0 <AmiBlitz3.ab3@5853>   MOVEQ.l #$04,D3
000237E6 <AmiBlitz3.ab3@5854>   MOVEA.l _dosbase,A6
000237EA <AmiBlitz3.ab3@5855>   JSR _Write(A6)
000237EC <AmiBlitz3.ab3@5858>   MOVE.l D7,D1
000237F2 <AmiBlitz3.ab3@5859>   MOVE.l #tstdone,D2
000237F4 <AmiBlitz3.ab3@5860>   MOVEQ.l #$04,D3
000237FA <AmiBlitz3.ab3@5861>   MOVEA.l _dosbase,A6
000237FE <AmiBlitz3.ab3@5862>    JSR _Write(A6)
00023800 <AmiBlitz3.ab3@5863>   MOVE.l (A7)+,D0
00023802 <AmiBlitz3.ab3@5864>   LSR.l #2,D0
00023808 <AmiBlitz3.ab3@5865>   MOVE.l D0,temp1
0002380A <AmiBlitz3.ab3@5866>   MOVE.l D7,D1
0002380C <AmiBlitz3.ab3@5867>   MOVEQ.l #$14,D2
0002380E <AmiBlitz3.ab3@5868>   MOVEQ.l #-$01,D3
00023812 <AmiBlitz3.ab3@5869>   JSR _Seek(A6)
00023814 <AmiBlitz3.ab3@5870>   MOVE.l D7,D1
0002381A <AmiBlitz3.ab3@5871>   MOVE.l #temp1,D2
0002381C <AmiBlitz3.ab3@5872>   MOVEQ.l #$04,D3
00023820 <AmiBlitz3.ab3@5873>    JSR _Write(A6)
00023822 <AmiBlitz3.ab3@5874>   MOVE.l D7,D1
00023824 <AmiBlitz3.ab3@5875>   MOVEQ.l #$1C,D2
00023826 <AmiBlitz3.ab3@5876>   MOVEQ.l #-$01,D3
0002382A <AmiBlitz3.ab3@5877>    JSR _Seek(A6)
0002382C <AmiBlitz3.ab3@5878>   MOVE.l D7,D1
00023832 <AmiBlitz3.ab3@5879>   MOVE.l #temp1,D2
00023834 <AmiBlitz3.ab3@5880>   MOVEQ.l #$04,D3
00023838 <AmiBlitz3.ab3@5881>    JSR _Write(A6)
0002383A <AmiBlitz3.ab3@5882>   MOVE.l D7,D1
0002383E <AmiBlitz3.ab3@5883>    JSR _Close(A6)
00023842 <AmiBlitz3.ab3@5884> BRA.w call_setpointernormal
00023844 <AmiBlitz3.ab3@5888>   ADDQ.w #5,D1
00023846 <AmiBlitz3.ab3@5889>   ADDQ.b #8,D0
0002384A <AmiBlitz3.ab3@5892>     CMPA.w #$0,A2
0002384E <AmiBlitz3.ab3@5893>     BEQ.w writelist__done
00023852 <AmiBlitz3.ab3@5894>      BSR.w writeitem
00023854 <AmiBlitz3.ab3@5895>     MOVEA.l (A2),A2
00023858 <AmiBlitz3.ab3@5896> BRA.w writelist__loop
0002385A <AmiBlitz3.ab3@5899> RTS
0002385C <AmiBlitz3.ab3@5902>   MOVEQ.l #$00,D3
00023860 <AmiBlitz3.ab3@5903>   MOVE.b $0(A2,D5.W),D3
00023862 <AmiBlitz3.ab3@5904>   ADDQ.w #1,D3
00023866 <AmiBlitz3.ab3@5905>   BCLR #$0,D3                                              ;word align
00023868 <AmiBlitz3.ab3@5906>   MOVE.l (A2),-(A7)
0002386C <AmiBlitz3.ab3@5907>    BEQ.w writeitem__skip
00023870 <AmiBlitz3.ab3@5908>    BSR.w resoff
00023872 <AmiBlitz3.ab3@5909>   ADD.l D3,D6
00023874 <AmiBlitz3.ab3@5910>   MOVE.l D6,(A2)
00023876 <AmiBlitz3.ab3@5911>   SUB.l D3,D6
00023878 <AmiBlitz3.ab3@5914>    ADD.l D3,D6
0002387A <AmiBlitz3.ab3@5915>   MOVE.l A2,D2
0002387C <AmiBlitz3.ab3@5916>   MOVE.l D7,D1
00023882 <AmiBlitz3.ab3@5917>   MOVEA.l _dosbase,A6
00023886 <AmiBlitz3.ab3@5918>    JSR _Write(A6)
00023888 <AmiBlitz3.ab3@5919>   MOVE.l (A7)+,(A2)
0002388A <AmiBlitz3.ab3@5920> RTS
0002388C <AmiBlitz3.ab3@5923>   MOVE.l D6,D2
00023890 <AmiBlitz3.ab3@5924> BRA.w addhunkoffset
00023894 <AmiBlitz3.ab3@5928>     CMPA.w #$0,A2
00023898 <AmiBlitz3.ab3@5929>      BEQ.w writeoffs__done
0002389E <AmiBlitz3.ab3@5930>     MOVEA.l newtypebase,A1
000238A0 <AmiBlitz3.ab3@5931>     MOVEQ.l #$00,D1
000238A4 <AmiBlitz3.ab3@5934>       CMPA.w #$0,A1
000238A8 <AmiBlitz3.ab3@5935>       BEQ.w writeoffs__found
000238AC <AmiBlitz3.ab3@5936>       CMPA.l $A(A2),A1
000238B0 <AmiBlitz3.ab3@5937>        BEQ.w writeoffs__found
000238B2 <AmiBlitz3.ab3@5938>       ADDQ.w #1,D1
000238B4 <AmiBlitz3.ab3@5939>       MOVEA.l (A1),A1
000238B8 <AmiBlitz3.ab3@5940> BRA.w writeoffs__loop2
000238BC <AmiBlitz3.ab3@5943>     MOVE.w $A(A2),-(A7)
000238C0 <AmiBlitz3.ab3@5944>     MOVE.w D1,$A(A2)
000238C4 <AmiBlitz3.ab3@5945>      BSR.w writeitem
000238C8 <AmiBlitz3.ab3@5946>     MOVE.w (A7)+,$A(A2)
000238CA <AmiBlitz3.ab3@5947>     MOVEA.l (A2),A2
000238CE <AmiBlitz3.ab3@5948> BRA.w writeoffs
000238D0 <AmiBlitz3.ab3@5951> RTS
000238D2 <AmiBlitz3.ab3@5955>   MOVEQ.l #$00,D0
000238D6 <AmiBlitz3.ab3@5958>   CMPA.w #$0,A2
000238DA <AmiBlitz3.ab3@5959>    BEQ.w countem__done
000238DC <AmiBlitz3.ab3@5960>   ADDQ.w #1,D0
000238DE <AmiBlitz3.ab3@5961>   MOVEA.l (A2),A2
000238E2 <AmiBlitz3.ab3@5962> BRA.w countem__loop
000238E8 <AmiBlitz3.ab3@5965>   MOVE.w D0,temp1
000238EA <AmiBlitz3.ab3@5966>   MOVE.l D7,D1
000238F0 <AmiBlitz3.ab3@5967>   MOVE.l #temp1,D2
000238F2 <AmiBlitz3.ab3@5968>   MOVEQ.l #$02,D3
000238F4 <AmiBlitz3.ab3@5969>   ADDQ.l #2,D6
000238FA <AmiBlitz3.ab3@5970>   MOVEA.l _dosbase,A6
000238FE <AmiBlitz3.ab3@5971> JMP _Write(A6)
00023904 <AmiBlitz3.ab3@5975>    TST.b resdisable
00023908 <AmiBlitz3.ab3@5976>    BEQ resmacs__l1
0002390E <AmiBlitz3.ab3@5977>    MOVE.l currentmacroaddr,a3
00023914 <AmiBlitz3.ab3@5978>    CMP.l #0,a3
00023918 <AmiBlitz3.ab3@5979>    BEQ resmacs__l1
0002391A <AmiBlitz3.ab3@5980>    MOVE.l (a3),a3
0002391E <AmiBlitz3.ab3@5981> BRA resmacs__l2
00023924 <AmiBlitz3.ab3@5984>   MOVEA.l macrobase,A3                                     ;??begin org code??
00023926 <AmiBlitz3.ab3@5987>   MOVEA.l A3,A2
0002392A <AmiBlitz3.ab3@5988>   BSR.w countem
0002392E <AmiBlitz3.ab3@5991>    CMPA.w #$0,A3
00023932 <AmiBlitz3.ab3@5992>    BEQ.w resmacs__done
00023934 <AmiBlitz3.ab3@5993>   MOVE.l D6,D5
00023936 <AmiBlitz3.ab3@5994>   MOVE.l (A3),-(A7)
0002393A <AmiBlitz3.ab3@5995>   MOVE.l $4(A3),-(A7)
0002393C <AmiBlitz3.ab3@5996>   MOVEQ.l #$00,D3
00023940 <AmiBlitz3.ab3@5997>   MOVE.b $C(A3),D3
00023942 <AmiBlitz3.ab3@5998>   ADDQ.w #1,D3
00023946 <AmiBlitz3.ab3@5999>   BCLR #$0,D3
00023948 <AmiBlitz3.ab3@6000>   ADD.l D3,D6                                              ;add len of struct
0002394C <AmiBlitz3.ab3@6001>   TST.w $8(A3)
00023950 <AmiBlitz3.ab3@6002>    BEQ.w resmacs__notext
00023954 <AmiBlitz3.ab3@6003>   MOVE.l D6,$4(A3)
00023956 <AmiBlitz3.ab3@6004>   MOVE.l D5,D2
00023958 <AmiBlitz3.ab3@6005>   ADDQ.l #4,D2
0002395C <AmiBlitz3.ab3@6006>    BSR.w addhunkoffset
0002395E <AmiBlitz3.ab3@6009>   MOVEQ.l #$00,D4
00023962 <AmiBlitz3.ab3@6010>   MOVE.w $8(A3),D4
00023964 <AmiBlitz3.ab3@6011>   ADDQ.w #1,D4
00023968 <AmiBlitz3.ab3@6012>   BCLR #$0,D4
0002396A <AmiBlitz3.ab3@6013>   ADD.l D4,D6
0002396C <AmiBlitz3.ab3@6014>   TST.l (A3)
00023970 <AmiBlitz3.ab3@6015>    BEQ.w resmacs__nomore
00023972 <AmiBlitz3.ab3@6016>   MOVE.l D6,(A3)
00023974 <AmiBlitz3.ab3@6017>   MOVE.l D5,D2
00023978 <AmiBlitz3.ab3@6018>    BSR.w addhunkoffset
0002397A <AmiBlitz3.ab3@6021>   MOVE.l A3,D2
0002397C <AmiBlitz3.ab3@6022>   MOVE.l D7,D1
00023982 <AmiBlitz3.ab3@6024>    MOVEA.l _dosbase,A6
00023986 <AmiBlitz3.ab3@6025>    JSR _Write(a6)
00023988 <AmiBlitz3.ab3@6026>   TST.l D4
0002398C <AmiBlitz3.ab3@6027>    BEQ.w resmacs__skip
0002398E <AmiBlitz3.ab3@6028>   MOVE.l (A7),D2
00023990 <AmiBlitz3.ab3@6029>   MOVE.l D4,D3
00023992 <AmiBlitz3.ab3@6030>   MOVE.l D7,D1
00023998 <AmiBlitz3.ab3@6032>     MOVEA.l _dosbase,A6
0002399C <AmiBlitz3.ab3@6033>    JSR _Write(A6)
000239A0 <AmiBlitz3.ab3@6036>   MOVE.l (A7)+,$4(A3)
000239A2 <AmiBlitz3.ab3@6037>   MOVE.l (A7)+,(A3)
000239A4 <AmiBlitz3.ab3@6038>   MOVEA.l (A3),A3
000239A8 <AmiBlitz3.ab3@6039> BRA.w resmacs__loop
000239AA <AmiBlitz3.ab3@6042> RTS
000239B0 <AmiBlitz3.ab3@6046>   TST.b resdisable
000239B4 <AmiBlitz3.ab3@6047>   BEQ restypes__l1
000239BA <AmiBlitz3.ab3@6048>   MOVE.l lastrestype,a3
000239C0 <AmiBlitz3.ab3@6049>   CMP.l #0,a3
000239C4 <AmiBlitz3.ab3@6050>   BEQ restypes__l1
000239C6 <AmiBlitz3.ab3@6051>   MOVE.l (a3),a3
000239CA <AmiBlitz3.ab3@6052> BRA restypes__l2
000239D0 <AmiBlitz3.ab3@6055>   MOVEA.l newtype_string,A3
000239D2 <AmiBlitz3.ab3@6058>   MOVEA.l A3,A2
000239D6 <AmiBlitz3.ab3@6059>    BSR.w countem
000239DA <AmiBlitz3.ab3@6062>    CMPA.w #$0,A3
000239DE <AmiBlitz3.ab3@6063>    BEQ.w restypes__done
000239E0 <AmiBlitz3.ab3@6064>   MOVE.l D6,-(A7)
000239E4 <AmiBlitz3.ab3@6065>   MOVEA.l $4(A3),A2
000239E6 <AmiBlitz3.ab3@6066>   MOVEQ.l #$0E,D5
000239EA <AmiBlitz3.ab3@6067>    BSR.w writeoffs
000239EC <AmiBlitz3.ab3@6068>   MOVE.l (A7)+,D0
000239F0 <AmiBlitz3.ab3@6069>   MOVE.l $4(A3),-(A7)
000239F4 <AmiBlitz3.ab3@6070>   MOVE.l D0,$4(A3)
000239F6 <AmiBlitz3.ab3@6071>   MOVE.l D6,D2
000239F8 <AmiBlitz3.ab3@6072>   ADDQ.l #4,D2
000239FC <AmiBlitz3.ab3@6073>    BSR.w addhunkoffset
000239FE <AmiBlitz3.ab3@6074>   MOVEQ.l #$00,D3
00023A02 <AmiBlitz3.ab3@6075>   MOVE.b $A(A3),D3
00023A04 <AmiBlitz3.ab3@6076>   ADDQ.w #1,D3
00023A08 <AmiBlitz3.ab3@6077>   BCLR #$0,D3
00023A0A <AmiBlitz3.ab3@6078>   ADD.l D3,D6
00023A0C <AmiBlitz3.ab3@6079>   MOVE.l A3,D2
00023A0E <AmiBlitz3.ab3@6080>   MOVE.l D7,D1
00023A14 <AmiBlitz3.ab3@6082>     MOVEA.l _dosbase,A6
00023A18 <AmiBlitz3.ab3@6083>     JSR _Write(A6)
00023A1C <AmiBlitz3.ab3@6084>   MOVE.l (A7)+,$4(A3)
00023A1E <AmiBlitz3.ab3@6085>   MOVEA.l (A3),A3
00023A22 <AmiBlitz3.ab3@6086> BRA.w restypes__loop
00023A24 <AmiBlitz3.ab3@6089> RTS
00023A2A <AmiBlitz3.ab3@6093>    TST.b resdisable
00023A2E <AmiBlitz3.ab3@6094>    BEQ resconsts__l1
00023A34 <AmiBlitz3.ab3@6095>    MOVE.l currentlabeladdr,a2
00023A3A <AmiBlitz3.ab3@6096>    CMP.l #0,a2
00023A3E <AmiBlitz3.ab3@6097>    BEQ resconsts__l1
00023A40 <AmiBlitz3.ab3@6098>    MOVE.l (a2),a2
00023A44 <AmiBlitz3.ab3@6099> BRA resconsts__l2
00023A4A <AmiBlitz3.ab3@6102>    MOVEA.l labelbase,A2
00023A4C <AmiBlitz3.ab3@6105>    MOVEQ.l #$00,D0
00023A50 <AmiBlitz3.ab3@6108>    CMPA.w #$0,A2
00023A54 <AmiBlitz3.ab3@6109>    BEQ.w resconsts__done
00023A5C <AmiBlitz3.ab3@6110>   CMPI.l #$1,$4(A2)
00023A60 <AmiBlitz3.ab3@6111>    BNE.w resconsts__next
00023A62 <AmiBlitz3.ab3@6112>   ADDQ.w #1,D0
00023A64 <AmiBlitz3.ab3@6115>   MOVEA.l (A2),A2
00023A68 <AmiBlitz3.ab3@6116> BRA.w resconsts__loop
00023A6E <AmiBlitz3.ab3@6119>   MOVE.w D0,temp1
00023A70 <AmiBlitz3.ab3@6120>   MOVE.l D7,D1
00023A76 <AmiBlitz3.ab3@6121>   MOVE.l #temp1,D2
00023A78 <AmiBlitz3.ab3@6122>   MOVEQ.l #$02,D3
00023A7A <AmiBlitz3.ab3@6123>   ADDQ.l #2,D6
00023A80 <AmiBlitz3.ab3@6125>     MOVEA.l _dosbase,A6
00023A84 <AmiBlitz3.ab3@6126>     JSR _Write(A6)
00023A8A <AmiBlitz3.ab3@6127>    TST.b resdisable
00023A8E <AmiBlitz3.ab3@6128>    BEQ resconsts__done_l1
00023A94 <AmiBlitz3.ab3@6129>    MOVE.l currentlabeladdr,a2
00023A9A <AmiBlitz3.ab3@6130>    CMP.l #0,a2
00023A9E <AmiBlitz3.ab3@6131>    BEQ resconsts__done_l1
00023AA0 <AmiBlitz3.ab3@6132>    MOVE.l (a2),a2
00023AA4 <AmiBlitz3.ab3@6133> BRA resconsts__loop2
00023AAA <AmiBlitz3.ab3@6136>    MOVEA.l labelbase,A2                                    ;write resident labels
00023AAE <AmiBlitz3.ab3@6139>    CMPA.w #$0,A2
00023AB2 <AmiBlitz3.ab3@6140>    BEQ.w resconsts__done2
00023ABA <AmiBlitz3.ab3@6141>   CMPI.l #$1,$4(A2)
00023ABE <AmiBlitz3.ab3@6142>    BNE.w resconsts__next2
00023AC0 <AmiBlitz3.ab3@6143>    MOVEQ.l #$00,D3
00023AC4 <AmiBlitz3.ab3@6144>   MOVE.b $12(A2),D3                                        ;length
00023AC6 <AmiBlitz3.ab3@6145>   ADDQ.w #1,D3
00023ACA <AmiBlitz3.ab3@6146>   BCLR #$0,D3
00023ACC <AmiBlitz3.ab3@6147>   MOVE.l D6,D2
00023ACE <AmiBlitz3.ab3@6148>   ADD.l D3,D6
00023AD0 <AmiBlitz3.ab3@6151>   MOVE.l (A2),-(A7)
00023AD2 <AmiBlitz3.ab3@6152>   TST.l (A2)
00023AD6 <AmiBlitz3.ab3@6153>    BEQ.w resconsts__nonext
00023AD8 <AmiBlitz3.ab3@6154>   MOVE.l D6,(A2)
00023ADC <AmiBlitz3.ab3@6155>    BSR.w addhunkoffset
00023ADE <AmiBlitz3.ab3@6158>   MOVE.l A2,D2
00023AE0 <AmiBlitz3.ab3@6159>   MOVE.l D7,D1
00023AE6 <AmiBlitz3.ab3@6161>     MOVEA.l _dosbase,A6
00023AEA <AmiBlitz3.ab3@6162>     JSR _Write(A6)
00023AEC <AmiBlitz3.ab3@6163>   MOVE.l (A7)+,(A2)
00023AEE <AmiBlitz3.ab3@6166>   MOVEA.l (A2),A2
00023AF2 <AmiBlitz3.ab3@6167> BRA.w resconsts__loop2
00023AF4 <AmiBlitz3.ab3@6170> RTS
00023B1E <AmiBlitz3.ab3@6174>    !basic
00023B24 <AmiBlitz3.ab3@6175>     MOVE.l ptr_resfile,d0
00023B34 <AmiBlitz3.ab3@6176>     resfileP.l = Peek.l(?ptr_resfile)
00023B3E <AmiBlitz3.ab3@6177>     If resfileP
00023B66 <AmiBlitz3.ab3@6178>       resfile$ = Peek.s(resfileP)
00023BB2 <AmiBlitz3.ab3@6179>       tests.b = Instr(resfile$,"/")
00023BFE <AmiBlitz3.ab3@6180>       testc.b = Instr(resfile$,":")
00023C20 <AmiBlitz3.ab3@6181>       If tests=0 AND testc=0
00023CA0 <AmiBlitz3.ab3@6182>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00023CB2 <AmiBlitz3.ab3@6183>         Poke.l ?ptr_resfile,&resfile$
00023CB8 <AmiBlitz3.ab3@6185>     Else
00023CF2 <AmiBlitz3.ab3@6186>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00023D10 <AmiBlitz3.ab3@6188>    !asm
00023D12 <AmiBlitz3.ab3@6189> RTS
00023D18 <AmiBlitz3.ab3@6193> 
00023D1E <AmiBlitz3.ab3@6194>   MOVE.l A7,errstack
00023D28 <AmiBlitz3.ab3@6197>   MOVE.l #next_resentry,errcont
00023D30 <AmiBlitz3.ab3@6198>   MOVE.w #$FFFF,ezerr
00023D34 <AmiBlitz3.ab3@6199>   BSR.w Aclearallvars
00023D38 <AmiBlitz3.ab3@6200>   BSR.w free_residents
00023D3E <AmiBlitz3.ab3@6202>   LEA residents_table,A5
00023D40 <AmiBlitz3.ab3@6203>   MOVEQ.l #$07,D6
00023D42 <AmiBlitz3.ab3@6206>     TST.b (A5)
00023D46 <AmiBlitz3.ab3@6207>     BEQ.w next_resentry
00023D4C <AmiBlitz3.ab3@6208>     MOVE.l A5,ptr_resfile
00023D50 <AmiBlitz3.ab3@6209>     BSR check_residentpath
00023D56 <AmiBlitz3.ab3@6210>     MOVE.l ptr_resfile,d1
00023D5C <AmiBlitz3.ab3@6211>     MOVEA.l _dosbase,A6
00023D60 <AmiBlitz3.ab3@6212>     JSR _LoadSeg(A6)
00023D64 <AmiBlitz3.ab3@6213>     MOVE.l D0,$40(A5)
00023D68 <AmiBlitz3.ab3@6214>     BNE.w reloadresident__yeah
00023D6C <AmiBlitz3.ab3@6215>     BSR.w reserr
00023D6E <AmiBlitz3.ab3@6218>     MOVEA.l D0,A3
00023D70 <AmiBlitz3.ab3@6219>     ADDA.l A3,A3
00023D72 <AmiBlitz3.ab3@6220>     ADDA.l A3,A3
00023D74 <AmiBlitz3.ab3@6221>     ADDQ.w #4,A3                                           ;start of res
00023D78 <AmiBlitz3.ab3@6222>     BSR.w JL_0_5A9E
00023D7C <AmiBlitz3.ab3@6223>     BSR.w JL_0_5A62                                        ;add macros to list
00023D80 <AmiBlitz3.ab3@6224>     BSR.w JL_0_5A32                                        ;read labels
00023D84 <AmiBlitz3.ab3@6227>     LEA ResidentEntryStep(A5),A5       ;$44
00023D88 <AmiBlitz3.ab3@6228>   DBF D6,reloadresident__loop
00023D92 <AmiBlitz3.ab3@6233>   MOVE.l #free_residents,errcont
00023D98 <AmiBlitz3.ab3@6235>   MOVEA.l newtype_string,A3
00023D9A <AmiBlitz3.ab3@6236>   MOVEQ.l #$0B,D7
00023D9E <AmiBlitz3.ab3@6237>   BSR.w checkclash
00023DA4 <AmiBlitz3.ab3@6239>   MOVEA.l macrobase,A3
00023DA6 <AmiBlitz3.ab3@6240>   MOVEQ.l #$d,D7
00023DAA <AmiBlitz3.ab3@6241>   BSR.w checkclash
00023DB0 <AmiBlitz3.ab3@6243>   MOVEA.l firstconst,A3
00023DB2 <AmiBlitz3.ab3@6244>   MOVEQ.l #$19,D7
00023DB6 <AmiBlitz3.ab3@6245>   BSR.w checkclash
00023DB8 <AmiBlitz3.ab3@6248> RTS
00023DBA <AmiBlitz3.ab3@6252>   MOVEA.l A3,A4
00023DBE <AmiBlitz3.ab3@6255>     CMPA.w #$0,A4
00023DC2 <AmiBlitz3.ab3@6256>     BEQ.w checkclash__done
00023DC8 <AmiBlitz3.ab3@6258>     LEA ptr_parameterstore,A0
00023DCC <AmiBlitz3.ab3@6259>     LEA $0(A4,D7.W),A1
00023DCE <AmiBlitz3.ab3@6260>     MOVEQ.l #-$01,D2
00023DD0 <AmiBlitz3.ab3@6263>       ADDQ.w #1,D2
00023DD2 <AmiBlitz3.ab3@6264>       MOVE.b (A1)+,(A0)+
00023DD6 <AmiBlitz3.ab3@6265>     BNE.w checkclash__loop2
00023DD8 <AmiBlitz3.ab3@6266>     MOVEA.l A3,A2
00023DDC <AmiBlitz3.ab3@6269>     BSR.w findlab
00023DE0 <AmiBlitz3.ab3@6270>     BNE.w checkclash__next                                  ;not found
00023DE2 <AmiBlitz3.ab3@6271>     CMPA.l A2,A4
00023DE6 <AmiBlitz3.ab3@6272>     BEQ.w checkclash__l1
00023DE8 <AmiBlitz3.ab3@6273>     MOVE.l a1,a5
00023DEC <AmiBlitz3.ab3@6274> BRA clasherr
00023DF0 <AmiBlitz3.ab3@6277> BRA.w checkclash__more
00023DF2 <AmiBlitz3.ab3@6280>     MOVEA.l (A4),A4
00023DF6 <AmiBlitz3.ab3@6281> BRA.w checkclash__loop
00023DF8 <AmiBlitz3.ab3@6284> RTS
00023DFE <AmiBlitz3.ab3@6288>   MOVEA.l _dosbase,A6
00023E04 <AmiBlitz3.ab3@6290>   LEA newtype_string,A0
00023E0A <AmiBlitz3.ab3@6291>   MOVE.l A0,lastrestype
00023E0C <AmiBlitz3.ab3@6292>   CLR.l (A0)
00023E12 <AmiBlitz3.ab3@6294>   LEA macrobase,A0
00023E18 <AmiBlitz3.ab3@6295>   MOVE.l A0,currentmacroaddr
00023E1A <AmiBlitz3.ab3@6296>   CLR.l (A0)
00023E20 <AmiBlitz3.ab3@6298>   LEA labelbase,A0
00023E26 <AmiBlitz3.ab3@6299>   MOVE.l A0,currentlabeladdr
00023E28 <AmiBlitz3.ab3@6300>   CLR.l (A0)
00023E2E <AmiBlitz3.ab3@6301>   CLR.w rescnt
00023E66 <AmiBlitz3.ab3@6305>   !ComData_SetB{comByte_DebugMode,debugmode}
00023E6C <AmiBlitz3.ab3@6308>   LEA residents_table,A2
00023E6E <AmiBlitz3.ab3@6309>   MOVEQ.l #$07,D2
00023E72 <AmiBlitz3.ab3@6312>      MOVE.l $40(A2),D1
00023E76 <AmiBlitz3.ab3@6313>      BEQ.w free_residents__next
00023E7A <AmiBlitz3.ab3@6314>       CLR.l $40(A2)
00023E80 <AmiBlitz3.ab3@6315>       MOVEA.l _dosbase,A6
00023E84 <AmiBlitz3.ab3@6316>       JSR _UnLoadSeg(A6)
00023E88 <AmiBlitz3.ab3@6319>      LEA ResidentEntryStep(A2),A2   ; $44
00023E8C <AmiBlitz3.ab3@6320>    DBF D2,free_residents__loop
00023E8E <AmiBlitz3.ab3@6322> RTS
00023E90 <AmiBlitz3.ab3@6326>   MOVE.w (A3)+,D1
00023E94 <AmiBlitz3.ab3@6327>   BEQ.w JL_0_5A60
00023E9A <AmiBlitz3.ab3@6328>   MOVEA.l currentlabeladdr,A2
00023E9C <AmiBlitz3.ab3@6329>   MOVE.l A3,(A2)
00023E9E <AmiBlitz3.ab3@6330>   SUBQ.w #1,D1
00023EA0 <AmiBlitz3.ab3@6333>     MOVEA.l A3,A2
00023EA2 <AmiBlitz3.ab3@6334>     MOVEA.l (A3),A3
00023EA6 <AmiBlitz3.ab3@6335>   DBF D1,JL_0_5A42
00023EA8 <AmiBlitz3.ab3@6337>   CLR.l (a2)                                               ;bugfix for object
00023EAE <AmiBlitz3.ab3@6338>   MOVE.l A2,currentlabeladdr
00023EB0 <AmiBlitz3.ab3@6339>   MOVEA.l A2,A3
00023EB2 <AmiBlitz3.ab3@6340>   MOVEQ.l #$00,D0
00023EB6 <AmiBlitz3.ab3@6341>   MOVE.b $12(A3),D0
00023EB8 <AmiBlitz3.ab3@6342>   ADDQ.w #1,D0
00023EBC <AmiBlitz3.ab3@6343>   BCLR #$0,D0
00023EBE <AmiBlitz3.ab3@6344>   ADDA.w D0,A3
00023EC0 <AmiBlitz3.ab3@6347> RTS
00023EC2 <AmiBlitz3.ab3@6351>   MOVE.w (A3)+,D1
00023EC6 <AmiBlitz3.ab3@6352>   BEQ.w JL_0_5A9C
00023ECC <AmiBlitz3.ab3@6354>   MOVEA.l currentmacroaddr,A2
00023ECE <AmiBlitz3.ab3@6355>   MOVE.l A3,(A2)
00023ED0 <AmiBlitz3.ab3@6356>   SUBQ.w #1,D1
00023ED2 <AmiBlitz3.ab3@6359>     MOVEA.l A3,A2
00023ED4 <AmiBlitz3.ab3@6360>     MOVEA.l (A3),A3
00023ED8 <AmiBlitz3.ab3@6361>   DBF D1,JL_0_5A72
00023EDE <AmiBlitz3.ab3@6363>   MOVE.l A2,currentmacroaddr
00023EE0 <AmiBlitz3.ab3@6364>   MOVEA.l A2,A3
00023EE2 <AmiBlitz3.ab3@6365>   MOVEQ.l #$00,D0
00023EE6 <AmiBlitz3.ab3@6366>   MOVE.b $C(A3),D0
00023EE8 <AmiBlitz3.ab3@6367>   ADDQ.w #1,D0
00023EEC <AmiBlitz3.ab3@6368>   BCLR #$0,D0
00023EF0 <AmiBlitz3.ab3@6369>   MOVE.w $8(A3),D1
00023EF2 <AmiBlitz3.ab3@6370>   ADDQ.w #1,D1
00023EF6 <AmiBlitz3.ab3@6371>   BCLR #$0,D1
00023EF8 <AmiBlitz3.ab3@6372>   ADDA.w D0,A3
00023EFA <AmiBlitz3.ab3@6373>   ADDA.w D1,A3
00023EFC <AmiBlitz3.ab3@6376> RTS
00023EFE <AmiBlitz3.ab3@6380>   MOVE.w (A3)+,D1
00023F02 <AmiBlitz3.ab3@6381>   BEQ.w JL_0_5B38
00023F04 <AmiBlitz3.ab3@6382>   MOVE.w D1,-(A7)
00023F06 <AmiBlitz3.ab3@6383>   SUBQ.w #1,D1
00023F0C <AmiBlitz3.ab3@6384>   MOVEA.l lastrestype,A2
00023F0E <AmiBlitz3.ab3@6385>   MOVE.l A2,-(A7)
00023F10 <AmiBlitz3.ab3@6388>       MOVE.l (A3),D0
00023F14 <AmiBlitz3.ab3@6389>       BEQ.w JL_0_5ABC
00023F16 <AmiBlitz3.ab3@6390>       MOVEA.l D0,A3
00023F1A <AmiBlitz3.ab3@6391> BRA.w JL_0_5AB0
00023F1E <AmiBlitz3.ab3@6394>       MOVE.b $E(A3),D0
00023F20 <AmiBlitz3.ab3@6395>       ADDQ.w #1,D0
00023F24 <AmiBlitz3.ab3@6396>       BCLR #$0,D0
00023F26 <AmiBlitz3.ab3@6397>       ADDA.w D0,A3
00023F28 <AmiBlitz3.ab3@6398>       MOVE.l A3,(A2)
00023F2A <AmiBlitz3.ab3@6399>       MOVEA.l A3,A2
00023F2C <AmiBlitz3.ab3@6400>       MOVEQ.l #$00,D0
00023F30 <AmiBlitz3.ab3@6401>       MOVE.b $A(A3),D0
00023F32 <AmiBlitz3.ab3@6402>       ADDQ.w #1,D0
00023F36 <AmiBlitz3.ab3@6403>       BCLR #$0,D0
00023F38 <AmiBlitz3.ab3@6404>       ADDA.w D0,A3
00023F3C <AmiBlitz3.ab3@6405>   DBF D1,JL_0_5AB0
00023F3E <AmiBlitz3.ab3@6407>   MOVEA.l (A7)+,A0
00023F40 <AmiBlitz3.ab3@6408>   MOVEA.l (A0),A0
00023F44 <AmiBlitz3.ab3@6411>     CMPA.w #$0,A0
00023F48 <AmiBlitz3.ab3@6412>     BEQ.w JL_0_5B2A
00023F4C <AmiBlitz3.ab3@6413>     MOVEA.l $4(A0),A1
00023F50 <AmiBlitz3.ab3@6416>     CMPA.w #$0,A1
00023F54 <AmiBlitz3.ab3@6417>     BEQ.w JL_0_5B24
00023F58 <AmiBlitz3.ab3@6418>     MOVE.w $A(A1),D0
00023F5E <AmiBlitz3.ab3@6419>     MOVEA.l newtypebase,A4
00023F62 <AmiBlitz3.ab3@6420>     CMP.w #$7,D0
00023F66 <AmiBlitz3.ab3@6421>     BCS.w JL_0_5B0E
00023F6C <AmiBlitz3.ab3@6422>     SUB.w rescnt,D0
00023F6E <AmiBlitz3.ab3@6425>     SUBQ.w #1,D0
00023F72 <AmiBlitz3.ab3@6426>     BMI.w JL_0_5B1A
00023F74 <AmiBlitz3.ab3@6429>        MOVEA.l (A4),A4
00023F78 <AmiBlitz3.ab3@6430>   DBF D0,JL_0_5B14
00023F7C <AmiBlitz3.ab3@6433>     MOVE.l A4,$A(A1)
00023F7E <AmiBlitz3.ab3@6434>     MOVEA.l (A1),A1
00023F82 <AmiBlitz3.ab3@6435> BRA.w JL_0_5AEE
00023F84 <AmiBlitz3.ab3@6438>     MOVEA.l (A0),A0
00023F88 <AmiBlitz3.ab3@6439> BRA.w JL_0_5AE2
00023F8A <AmiBlitz3.ab3@6442>   MOVE.w (A7)+,D0
00023F90 <AmiBlitz3.ab3@6443>   ADD.w D0,rescnt
00023F96 <AmiBlitz3.ab3@6444>   MOVE.l A2,lastrestype
00023F98 <AmiBlitz3.ab3@6447> RTS
00023F9E <AmiBlitz3.ab3@6451>   LEA tokens,A0
00023FA2 <AmiBlitz3.ab3@6452>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00023FA4 <AmiBlitz3.ab3@6455>     MOVEA.l (A0),A0
00023FA8 <AmiBlitz3.ab3@6456>   DBF D0,JL_0_5BD0
00023FAE <AmiBlitz3.ab3@6458>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00023FB2 <AmiBlitz3.ab3@6459>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00023FB6 <AmiBlitz3.ab3@6462>       LEA $6(A0),A2
00023FB8 <AmiBlitz3.ab3@6465>         TST.b (A2)+
00023FBC <AmiBlitz3.ab3@6466>       BNE.w JL_0_5BE4
00023FBE <AmiBlitz3.ab3@6469>         TST.b (A2)+
00023FC2 <AmiBlitz3.ab3@6470>       BNE.w JL_0_5BEA
00023FC4 <AmiBlitz3.ab3@6472>       ADDQ.w #1,A2
00023FC6 <AmiBlitz3.ab3@6473>       EXG.l D1,A2
00023FCA <AmiBlitz3.ab3@6474>       BCLR #$0,D1
00023FCC <AmiBlitz3.ab3@6475>       EXG.l D1,A2
00023FCE <AmiBlitz3.ab3@6476>       MOVE.l A2,(A1)+
00023FD0 <AmiBlitz3.ab3@6477>       MOVEA.l (A0),A0
00023FD4 <AmiBlitz3.ab3@6478>   DBF D0,JL_0_5BE0
00023FD6 <AmiBlitz3.ab3@6479> RTS
00023FDA <AmiBlitz3.ab3@6483>   BSR.w asmconst
00023FDC <AmiBlitz3.ab3@6484>   MOVEQ.l #$0B,D5
00023FDE <AmiBlitz3.ab3@6485> RTS
00023FE0 <AmiBlitz3.ab3@6488> unmove:  Ds.w 1
00023FE4 <AmiBlitz3.ab3@6492>   MOVE.w #$48E7,D1
00023FE8 <AmiBlitz3.ab3@6493>   BSR.w writeword                                          ;movem.l -(a7)
00023FEC <AmiBlitz3.ab3@6494>   MOVE.w #$000F,D2
00023FEE <AmiBlitz3.ab3@6495>   SUB.w D4,D2
00023FF0 <AmiBlitz3.ab3@6496>   MOVEQ.l #-$01,D1
00023FF2 <AmiBlitz3.ab3@6497>   BCLR D2,D1
00023FF6 <AmiBlitz3.ab3@6498>   BSR.w writeword
00023FF8 <AmiBlitz3.ab3@6499>   MOVEQ.l #-$01,D1
00023FFA <AmiBlitz3.ab3@6500>   BCLR D4,D1
00024000 <AmiBlitz3.ab3@6501>   MOVE.w D1,unmove
00024002 <AmiBlitz3.ab3@6502> RTS
00024006 <AmiBlitz3.ab3@6506>   MOVE.w #$4CDF,D1
0002400A <AmiBlitz3.ab3@6507>   BSR.w writeword
0002400E <AmiBlitz3.ab3@6508>   MOVE.w unmove(PC),D1
00024012 <AmiBlitz3.ab3@6509> BRA.w writeword
00024016 <AmiBlitz3.ab3@6522>   BSR.w JL_0_5D22
0002401A <AmiBlitz3.ab3@6523>   CMP.w #$2C,D0                                            ;#','
0002401E <AmiBlitz3.ab3@6524>    BNE.w syntaxerr
00024024 <AmiBlitz3.ab3@6525>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024028 <AmiBlitz3.ab3@6526>    BSR.w writelong
0002402A <AmiBlitz3.ab3@6527>   MOVE.w D4,D1
0002402E <AmiBlitz3.ab3@6528>   ORI.w #$2F00,D1
00024032 <AmiBlitz3.ab3@6529>    BSR.w writeword
00024036 <AmiBlitz3.ab3@6530>    BSR.w get1bytemain
0002403A <AmiBlitz3.ab3@6531>    BSR.w getparameter
0002403E <AmiBlitz3.ab3@6532>    BSR.w JL_0_8E3C
00024042 <AmiBlitz3.ab3@6533>    BSR.w calcvar
00024046 <AmiBlitz3.ab3@6534>    BTST #$E,D2
0002404A <AmiBlitz3.ab3@6535>    BEQ.w JL_0_5C80
0002404E <AmiBlitz3.ab3@6538>    MOVE.b #$3,D2
00024052 <AmiBlitz3.ab3@6539> BRA.w JL_0_5C8E
00024054 <AmiBlitz3.ab3@6542>   TST.b D2
00024058 <AmiBlitz3.ab3@6543>    BEQ.w JL_0_5C78
0002405C <AmiBlitz3.ab3@6544>   CMP.b #$7,D2
00024060 <AmiBlitz3.ab3@6545>    BEQ.w JL_0_5C78
00024064 <AmiBlitz3.ab3@6548>   BTST #$F,D2
00024068 <AmiBlitz3.ab3@6549>    BNE.w JL_0_5CA4
0002406C <AmiBlitz3.ab3@6550>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024070 <AmiBlitz3.ab3@6551>    BSR.w writeword
00024072 <AmiBlitz3.ab3@6552>   MOVE.w D3,D1
00024076 <AmiBlitz3.ab3@6553>    BSR.w writeword
0002407A <AmiBlitz3.ab3@6556>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002407E <AmiBlitz3.ab3@6557>    BSR.w writeword
00024082 <AmiBlitz3.ab3@6558>   MOVE.w #$1480,D1
00024086 <AmiBlitz3.ab3@6559>   CMP.b #$1,D2
0002408A <AmiBlitz3.ab3@6560>    BEQ.w JL_0_5CC8
0002408E <AmiBlitz3.ab3@6561>   EORI.w #$3000,D1
00024092 <AmiBlitz3.ab3@6562>   CMP.b #$2,D2
00024096 <AmiBlitz3.ab3@6563>    BNE.w JL_0_5CC8
0002409A <AmiBlitz3.ab3@6564>   ORI.w #$1000,D1
0002409E <AmiBlitz3.ab3@6567>   BSR.w writeword
000240A4 <AmiBlitz3.ab3@6568>   MOVE.l #$4CDF7FFF,D1
000240A8 <AmiBlitz3.ab3@6569> BRA.w writelong
000240AC <AmiBlitz3.ab3@6573>   BSR.w JL_0_5D22
000240B0 <AmiBlitz3.ab3@6574>   CMP.w #$2C,D0
000240B4 <AmiBlitz3.ab3@6575>    BNE.w syntaxerr
000240B8 <AmiBlitz3.ab3@6576>    BSR.w regmovems
000240BA <AmiBlitz3.ab3@6577>   MOVE.w D4,-(A7)
000240BC <AmiBlitz3.ab3@6578>   MOVEQ.l #$03,D2
000240C0 <AmiBlitz3.ab3@6579>    BSR.w eval
000240C2 <AmiBlitz3.ab3@6580>   MOVE.w (A7)+,D1
000240C6 <AmiBlitz3.ab3@6581>    BEQ.w JL_0_5D1A
000240CA <AmiBlitz3.ab3@6582>   CMP.w #$8,D1
000240CE <AmiBlitz3.ab3@6583>    BCC.w JL_0_5D0C
000240D0 <AmiBlitz3.ab3@6584>   LSL.w #8,D1
000240D2 <AmiBlitz3.ab3@6585>   LSL.w #1,D1
000240D6 <AmiBlitz3.ab3@6586>   ORI.w #$2000,D1
000240DA <AmiBlitz3.ab3@6587>    BSR.w writeword
000240DE <AmiBlitz3.ab3@6588> BRA.w JL_0_5D1A
000240E0 <AmiBlitz3.ab3@6591>   SUBQ.w #8,D1
000240E2 <AmiBlitz3.ab3@6592>   LSL.w #8,D1
000240E4 <AmiBlitz3.ab3@6593>   LSL.w #1,D1
000240E8 <AmiBlitz3.ab3@6594>   ORI.w #$2040,D1
000240EC <AmiBlitz3.ab3@6595>   BSR.w writeword
000240F0 <AmiBlitz3.ab3@6598> BRA.w dounmove
000240F4 <AmiBlitz3.ab3@6602>   BSR.w get1bytemain
000240F8 <AmiBlitz3.ab3@6605>   ORI.w #$20,D0
000240FC <AmiBlitz3.ab3@6606>   CMP.w #$64,D0
00024100 <AmiBlitz3.ab3@6607>    BEQ.w JL_0_5D4E
00024104 <AmiBlitz3.ab3@6608>   CMP.w #$61,D0
00024108 <AmiBlitz3.ab3@6609>    BNE.w syntaxerr
0002410C <AmiBlitz3.ab3@6610>    BSR.w JL_0_5D4E
0002410E <AmiBlitz3.ab3@6611>   ADDQ.w #8,D4
00024110 <AmiBlitz3.ab3@6612> RTS
0002413C <AmiBlitz3.ab3@6616>   !fget                                                   ;bsr.w get1bytemain
00024140 <AmiBlitz3.ab3@6618>   ORI.w #$20,D0
00024144 <AmiBlitz3.ab3@6621>   CMP.w #$61,D0
00024148 <AmiBlitz3.ab3@6622>   BNE.w syntaxerr
00024174 <AmiBlitz3.ab3@6625>   !fget                                                    ;bsr.w get1bytemain
00024178 <AmiBlitz3.ab3@6626>   SUBI.w #$30,D0
0002417C <AmiBlitz3.ab3@6627>    BMI.w syntaxerr
00024180 <AmiBlitz3.ab3@6628>   CMP.w #$7,D0
00024184 <AmiBlitz3.ab3@6629>    BHI.w syntaxerr
00024186 <AmiBlitz3.ab3@6630>   MOVE.w D0,D4
000241B2 <AmiBlitz3.ab3@6631>   !fget
000241B4 <AmiBlitz3.ab3@6632> RTS                                                        ;bra.w get1bytemain
000241B6 <AmiBlitz3.ab3@6636>   ADDQ.w #8,D4
000241B8 <AmiBlitz3.ab3@6639>   MOVEQ.l #$00,D5
000241BC <AmiBlitz3.ab3@6640>   SUBI.w #$30,D4
000241C0 <AmiBlitz3.ab3@6643>   CMP.w #$2D,D0
000241C4 <AmiBlitz3.ab3@6644>    BEQ.w JL_0_5D9E
000241C8 <AmiBlitz3.ab3@6645>   CMP.w #$2F,D0
000241CC <AmiBlitz3.ab3@6646>    BEQ.w JL_0_5D8C
000241D0 <AmiBlitz3.ab3@6647> BRA.w syntaxerr
000241D2 <AmiBlitz3.ab3@6650>   BSET D4,D5
000241D4 <AmiBlitz3.ab3@6653>   MOVE.w D5,D4
000241D6 <AmiBlitz3.ab3@6654>   MOVEQ.l #$0F,D5
000241D8 <AmiBlitz3.ab3@6655> RTS
000241DA <AmiBlitz3.ab3@6658>   BSET D4,D5
000241DE <AmiBlitz3.ab3@6659>   BSR.w JL_0_5D1E
000241F0 <AmiBlitz3.ab3@6660>   !compare3                                                ;bsr.w JL_0_5FC0
000241F4 <AmiBlitz3.ab3@6661>   BNE.w JL_0_5D70
000241F8 <AmiBlitz3.ab3@6662> BRA.w JL_0_5D84
000241FA <AmiBlitz3.ab3@6665>   MOVE.w D4,D1
000241FE <AmiBlitz3.ab3@6666>    BSR.w JL_0_5D1E
00024200 <AmiBlitz3.ab3@6667>   CMP.w D4,D1
00024204 <AmiBlitz3.ab3@6668>    BLS.w JL_0_5DAC
00024206 <AmiBlitz3.ab3@6669>   EXG.l D4,D1
00024208 <AmiBlitz3.ab3@6672>   BSET D1,D5
0002420A <AmiBlitz3.ab3@6673>   ADDQ.w #1,D1
0002420C <AmiBlitz3.ab3@6674>   CMP.w D4,D1
00024210 <AmiBlitz3.ab3@6675>    BLS.w JL_0_5DAC
00024222 <AmiBlitz3.ab3@6676>   !compare3                                                ;bsr.w JL_0_5FC0
00024226 <AmiBlitz3.ab3@6677>   BNE.w JL_0_5D70
0002422A <AmiBlitz3.ab3@6678> BRA.w JL_0_5D86
0002422C <AmiBlitz3.ab3@6681>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024258 <AmiBlitz3.ab3@6682>    !fget
0002425C <AmiBlitz3.ab3@6683>   CMP.w #$23,D0
00024260 <AmiBlitz3.ab3@6684>    BEQ.w getimm
00024264 <AmiBlitz3.ab3@6685>   CMP.w #$28,D0
00024268 <AmiBlitz3.ab3@6686>    BEQ.w JL_0_5DFE
0002426C <AmiBlitz3.ab3@6687>   CMP.w #$2D,D0
00024270 <AmiBlitz3.ab3@6688>    BNE.w JL_0_5E20
0002429C <AmiBlitz3.ab3@6689>    !fget                                                   ;bsr.w get1bytemain       -(
000242A0 <AmiBlitz3.ab3@6690>   CMP.w #$28,D0
000242A4 <AmiBlitz3.ab3@6691>    BNE.w JL_0_5F4E
000242A8 <AmiBlitz3.ab3@6692>    BSR.w JL_0_5D3E
000242AC <AmiBlitz3.ab3@6693>   CMP.w #$29,D0
000242B0 <AmiBlitz3.ab3@6694>    BNE.w syntaxerr
000242B2 <AmiBlitz3.ab3@6695>   MOVEQ.l #$04,D5
000242DE <AmiBlitz3.ab3@6696>   !fget                                                    ;bsr.w get1bytemain
000242E0 <AmiBlitz3.ab3@6697> RTS
000242E4 <AmiBlitz3.ab3@6701>   BSR.w JL_0_5D3E
000242E8 <AmiBlitz3.ab3@6702>   CMP.w #$29,D0
000242EC <AmiBlitz3.ab3@6703>    BNE.w syntaxerr
00024318 <AmiBlitz3.ab3@6704>   !fget                                                    ;bsr.w get1bytemain
0002431C <AmiBlitz3.ab3@6705>   CMP.w #$2B,D0
00024320 <AmiBlitz3.ab3@6706>    BEQ.w JL_0_5E1A
00024322 <AmiBlitz3.ab3@6707>   MOVEQ.l #$02,D5
00024324 <AmiBlitz3.ab3@6708> RTS
00024326 <AmiBlitz3.ab3@6712>   MOVEQ.l #$03,D5
00024352 <AmiBlitz3.ab3@6713>   !fget                                                    ;bra.w get1bytemain
00024354 <AmiBlitz3.ab3@6714> RTS
00024358 <AmiBlitz3.ab3@6718>   ORI.w #$20,D0
0002435A <AmiBlitz3.ab3@6719>   MOVE.w D0,D1                                            
00024386 <AmiBlitz3.ab3@6720>    !fget                                                   ;bsr.w get1bytemain
0002438A <AmiBlitz3.ab3@6721>   CMP.w #$64,D1
0002438E <AmiBlitz3.ab3@6722>    BNE.w JL_0_5E6C
00024392 <AmiBlitz3.ab3@6723>   CMP.w #$30,D0
00024396 <AmiBlitz3.ab3@6724>    BCS.w JL_0_5EAE
0002439A <AmiBlitz3.ab3@6725>   CMP.w #$37,D0
0002439E <AmiBlitz3.ab3@6726>    BHI.w JL_0_5EAE
000243A0 <AmiBlitz3.ab3@6727>   MOVE.w D0,D4
000243CC <AmiBlitz3.ab3@6728>    !fget                                                   ;bsr.w get1bytemain
000243DE <AmiBlitz3.ab3@6729>    !compare3                                               ;bsr.w JL_0_5FC0
000243E2 <AmiBlitz3.ab3@6730>    BEQ.w JL_0_5E64
000243E6 <AmiBlitz3.ab3@6731>   CMP.w #$2D,D0
000243EA <AmiBlitz3.ab3@6732>    BEQ.w JL_0_5D6A
000243EE <AmiBlitz3.ab3@6733>   CMP.w #$2F,D0
000243F2 <AmiBlitz3.ab3@6734>    BEQ.w JL_0_5D6A
000243F6 <AmiBlitz3.ab3@6735> BRA.w JL_0_5EB8
000243F8 <AmiBlitz3.ab3@6738>   MOVEQ.l #$00,D5
000243FC <AmiBlitz3.ab3@6739>   SUBI.w #$30,D4
000243FE <AmiBlitz3.ab3@6740> RTS
00024402 <AmiBlitz3.ab3@6743>    CMP.w #$61,D1
00024406 <AmiBlitz3.ab3@6744>    BNE.w JL_0_5EAE
0002440A <AmiBlitz3.ab3@6745>   CMP.w #$30,D0
0002440E <AmiBlitz3.ab3@6746>    BCS.w JL_0_5EAE
00024412 <AmiBlitz3.ab3@6747>   CMP.w #$37,D0
00024416 <AmiBlitz3.ab3@6748>    BHI.w JL_0_5EAE
00024418 <AmiBlitz3.ab3@6749>   MOVE.w D0,D4
00024444 <AmiBlitz3.ab3@6750>    !fget                                                   ;bsr.w get1bytemain
00024456 <AmiBlitz3.ab3@6751>    !compare3                                               ;bsr.w JL_0_5FC0
0002445A <AmiBlitz3.ab3@6752>    BEQ.w JL_0_5EA6
0002445E <AmiBlitz3.ab3@6753>   CMP.w #$2D,D0
00024462 <AmiBlitz3.ab3@6754>    BEQ.w JL_0_5D68                                         ;movem
00024466 <AmiBlitz3.ab3@6755>   CMP.w #$2F,D0
0002446A <AmiBlitz3.ab3@6756>    BEQ.w JL_0_5D68
0002446E <AmiBlitz3.ab3@6757> BRA.w JL_0_5EB8
00024470 <AmiBlitz3.ab3@6760>   MOVEQ.l #1,d5
00024474 <AmiBlitz3.ab3@6761>   SUBI.w #$30,D4
00024478 <AmiBlitz3.ab3@6763> BRA 'l10
0002447A <AmiBlitz3.ab3@6764>   ADDQ.w #8,d4
0002447C <AmiBlitz3.ab3@6765>   MOVEQ #0,d5
0002447E <AmiBlitz3.ab3@6766>   BSET d4,d5
00024480 <AmiBlitz3.ab3@6767>   MOVE.w d5,d4
00024482 <AmiBlitz3.ab3@6768>   MOVEQ.l #$0f,D5                                          ;01
00024484 <AmiBlitz3.ab3@6771> RTS
00024488 <AmiBlitz3.ab3@6775>   ORI.w #$20,D0
0002448A <AmiBlitz3.ab3@6776>   MOVE.w D0,D4
000244B6 <AmiBlitz3.ab3@6777>    !fget                                                   ;bsr.w get1bytemain
000244C8 <AmiBlitz3.ab3@6780>   !compare3                                                ;bsr.w JL_0_5FC0
000244CC <AmiBlitz3.ab3@6781>    BNE.w JL_0_5EF2
000244D0 <AmiBlitz3.ab3@6782>   CMP.w #$73,D1
000244D4 <AmiBlitz3.ab3@6783>    BNE.w JL_0_5EF2
000244D8 <AmiBlitz3.ab3@6784>   CMP.w #$70,D4
000244DC <AmiBlitz3.ab3@6785>    BNE.w JL_0_5EDE
000244EE <AmiBlitz3.ab3@6786>    !compare3                                               ;bsr.w JL_0_5FC0
000244F2 <AmiBlitz3.ab3@6787>    BNE.w JL_0_5F4E
000244F4 <AmiBlitz3.ab3@6788>   MOVEQ.l #$07,D4
000244F6 <AmiBlitz3.ab3@6789>   MOVEQ.l #$01,D5
000244F8 <AmiBlitz3.ab3@6790> RTS
000244FC <AmiBlitz3.ab3@6794>   CMP.w #$72,D4
00024500 <AmiBlitz3.ab3@6795>    BNE.w JL_0_5F4E
00024512 <AmiBlitz3.ab3@6796>    !compare3                                               ;bsr.w JL_0_5FC0
00024516 <AmiBlitz3.ab3@6797>    BNE.w JL_0_5F4E
00024518 <AmiBlitz3.ab3@6798>   MOVEQ.l #$0D,D5
0002451A <AmiBlitz3.ab3@6799> RTS
0002451E <AmiBlitz3.ab3@6803>   ORI.w #$20,D0
00024522 <AmiBlitz3.ab3@6804>   CMP.w #$63,D1
00024526 <AmiBlitz3.ab3@6805>    BNE.w JL_0_5F22
0002452A <AmiBlitz3.ab3@6806>   CMP.w #$63,D4
0002452E <AmiBlitz3.ab3@6807>    BNE.w JL_0_5F4E
00024532 <AmiBlitz3.ab3@6808>   CMP.w #$72,D0
00024536 <AmiBlitz3.ab3@6809>    BNE.w JL_0_5F4E
0002453A <AmiBlitz3.ab3@6810>    BSR.w get1bytemain                                      ;??wy not !fget
0002453E <AmiBlitz3.ab3@6811>    BEQ.w JL_0_5F1E
00024542 <AmiBlitz3.ab3@6812>   CMP.w #$2C,D0
00024546 <AmiBlitz3.ab3@6813>    BNE.w JL_0_5F4E
00024548 <AmiBlitz3.ab3@6816>   MOVEQ.l #$0C,D5
0002454A <AmiBlitz3.ab3@6817> RTS
0002454E <AmiBlitz3.ab3@6821>   CMP.w #$75,D1
00024552 <AmiBlitz3.ab3@6822>    BNE.w JL_0_5F4E
00024556 <AmiBlitz3.ab3@6823>   CMP.w #$73,D4
0002455A <AmiBlitz3.ab3@6824>    BNE.w JL_0_5F4E
0002455E <AmiBlitz3.ab3@6825>   CMP.w #$70,D0
00024562 <AmiBlitz3.ab3@6826>    BNE.w JL_0_5F4E
00024566 <AmiBlitz3.ab3@6827>    BSR.w get1bytemain                                      ;??wy not !fget
0002456A <AmiBlitz3.ab3@6828>    BEQ.w JL_0_5F4A
0002456E <AmiBlitz3.ab3@6829>   CMP.w #$2C,D0
00024572 <AmiBlitz3.ab3@6830>    BNE.w JL_0_5F4E
00024574 <AmiBlitz3.ab3@6833>   MOVEQ.l #$0E,D5
00024576 <AmiBlitz3.ab3@6834> RTS
00024578 <AmiBlitz3.ab3@6838>   MOVEA.l A4,A5
0002457C <AmiBlitz3.ab3@6839>    BSR.w asmconst
0002458E <AmiBlitz3.ab3@6840>    !compare3                                               ;bsr.w JL_0_5FC0
00024592 <AmiBlitz3.ab3@6841>    BEQ.w JL_0_5FB8
00024596 <AmiBlitz3.ab3@6842>   CMP.w #$2E,D0
0002459A <AmiBlitz3.ab3@6843>    BEQ.w JL_0_5FA0
0002459E <AmiBlitz3.ab3@6844>   CMP.w #$28,D0
000245A2 <AmiBlitz3.ab3@6845>    BNE.w syntaxerr
000245A6 <AmiBlitz3.ab3@6846>    BSR.w get1bytemain                                      ;??wy not !fget
000245AA <AmiBlitz3.ab3@6847>   ORI.w #$20,D0
000245AE <AmiBlitz3.ab3@6848>   CMP.w #$70,D0
000245B2 <AmiBlitz3.ab3@6849>    BNE.w JL_0_5F98
000245B6 <AmiBlitz3.ab3@6850>    BSR.w get1bytemain                                      ;??wy not !fget
000245BA <AmiBlitz3.ab3@6851>   ORI.w #$20,D0
000245BE <AmiBlitz3.ab3@6852>   CMP.w #$63,D0
000245C2 <AmiBlitz3.ab3@6853>    BNE.w syntaxerr
000245C6 <AmiBlitz3.ab3@6854>    BSR.w get1bytemain                                      ;??wy not !fget
000245CA <AmiBlitz3.ab3@6855>    BSR.w JL_0_5FD4
000245CC <AmiBlitz3.ab3@6856>   ADDQ.w #4,D5
000245CE <AmiBlitz3.ab3@6857> RTS
000245D2 <AmiBlitz3.ab3@6861>   BSR.w JL_0_5D46
000245D6 <AmiBlitz3.ab3@6862> BRA.w JL_0_5FD4
000245DA <AmiBlitz3.ab3@6866>    BSR.w get1bytemain                                     ;??wy not !fget
000245DE <AmiBlitz3.ab3@6867>   ORI.w #$20,D0
000245E2 <AmiBlitz3.ab3@6868>   CMP.w #$77,D0
000245E6 <AmiBlitz3.ab3@6869>    BEQ.w JL_0_5FBC
000245EA <AmiBlitz3.ab3@6870>   CMP.w #$6C,D0
000245EE <AmiBlitz3.ab3@6871>    BNE.w syntaxerr
000245F0 <AmiBlitz3.ab3@6874>   MOVEQ.l #$08,D5
000245F2 <AmiBlitz3.ab3@6875> RTS
000245F4 <AmiBlitz3.ab3@6879>   MOVEQ.l #$07,D5
000245F6 <AmiBlitz3.ab3@6880> RTS
000245F8 <AmiBlitz3.ab3@6884>   TST.w D0
000245FC <AmiBlitz3.ab3@6885>    BEQ.w JL_0_5FD2
00024600 <AmiBlitz3.ab3@6886>   CMP.w #$3A,D0
00024604 <AmiBlitz3.ab3@6887>    BEQ.w JL_0_5FD2
00024608 <AmiBlitz3.ab3@6888>   CMP.w #$2C,D0
0002460A <AmiBlitz3.ab3@6891> RTS
0002460E <AmiBlitz3.ab3@6895>   CMP.w #$2C,D0
00024612 <AmiBlitz3.ab3@6896>    BNE.w JL_0_6054
00024616 <AmiBlitz3.ab3@6897>    BSR.w get1bytemain                                      ;??wy not !fget
0002461A <AmiBlitz3.ab3@6898>   ORI.w #$20,D0
0002461C <AmiBlitz3.ab3@6899>   MOVEQ.l #$00,D1
00024620 <AmiBlitz3.ab3@6900>   CMP.w #$64,D0
00024624 <AmiBlitz3.ab3@6901>    BEQ.w JL_0_5FFA
00024628 <AmiBlitz3.ab3@6902>   CMP.w #$61,D0
0002462C <AmiBlitz3.ab3@6903>    BNE.w syntaxerr
00024630 <AmiBlitz3.ab3@6904>   BSET #$F,D1
00024634 <AmiBlitz3.ab3@6907>    BSR.w get1bytemain                                      ;??wy not !fget
00024638 <AmiBlitz3.ab3@6908>   SUBI.w #$30,D0
0002463C <AmiBlitz3.ab3@6909>    BMI.w syntaxerr
00024640 <AmiBlitz3.ab3@6910>   CMP.w #$7,D0
00024644 <AmiBlitz3.ab3@6911>    BHI.w syntaxerr
00024646 <AmiBlitz3.ab3@6912>   LSL.w #8,D0
00024648 <AmiBlitz3.ab3@6913>   LSL.w #4,D0
0002464A <AmiBlitz3.ab3@6914>   OR.w D0,D1
0002464E <AmiBlitz3.ab3@6915>    BSR.w get1bytemain                                      ;??wy not !fget
00024652 <AmiBlitz3.ab3@6916>   CMP.w #$2E,D0
00024656 <AmiBlitz3.ab3@6917>    BNE.w JL_0_6040
0002465A <AmiBlitz3.ab3@6918>    BSR.w get1bytemain                                      ;??wy not !fget
0002465E <AmiBlitz3.ab3@6919>   ORI.w #$20,D0
00024662 <AmiBlitz3.ab3@6920>   CMP.w #$77,D0
00024666 <AmiBlitz3.ab3@6921>    BEQ.w JL_0_603C
0002466A <AmiBlitz3.ab3@6922>   CMP.w #$6C,D0
0002466E <AmiBlitz3.ab3@6923>    BNE.w syntaxerr
00024672 <AmiBlitz3.ab3@6924>   BSET #$B,D1
00024676 <AmiBlitz3.ab3@6927>    BSR.w get1bytemain                                      ;??wy not !fget
0002467A <AmiBlitz3.ab3@6930>    CMP.b #"*",d0                                           ;020 * Mode
0002467E <AmiBlitz3.ab3@6931>             BNE 'l1
00024682 <AmiBlitz3.ab3@6932>             BSR.w get1bytemain                             ;??wy not !fget
00024686 <AmiBlitz3.ab3@6933>             CMP.b #"2",d0
0002468A <AmiBlitz3.ab3@6934>             BNE 'l2
0002468E <AmiBlitz3.ab3@6935>             OR.w #$200,d1
00024692 <AmiBlitz3.ab3@6936> BRA 'l1b
00024696 <AmiBlitz3.ab3@6939>             CMP.b #"4",d0
0002469A <AmiBlitz3.ab3@6940>             BNE 'l3
0002469E <AmiBlitz3.ab3@6941>             OR.w #$400,d1
000246A2 <AmiBlitz3.ab3@6942> BRA 'l1b
000246A6 <AmiBlitz3.ab3@6945>             CMP.b #"8",d0
000246AA <AmiBlitz3.ab3@6946>             BNE syntaxerr
000246AE <AmiBlitz3.ab3@6947>             OR.w #$600,d1
000246B2 <AmiBlitz3.ab3@6950>         BSR.w get1bytemain                                 ;??wy not !fget
000246B6 <AmiBlitz3.ab3@6953>   CMP.w #$29,D0
000246BA <AmiBlitz3.ab3@6954>    BNE.w syntaxerr
000246C0 <AmiBlitz3.ab3@6955>   MOVE.w D1,extraword
000246C2 <AmiBlitz3.ab3@6956>   MOVEQ.l #$06,D5
000246C6 <AmiBlitz3.ab3@6957> BRA.w get1bytemain                                         ;??wy not !fget
000246CA <AmiBlitz3.ab3@6961>   CMP.w #")",D0                                            ;")"
000246CE <AmiBlitz3.ab3@6962>    BNE.w errorbracketmiss                                  ; was syntax error
000246D0 <AmiBlitz3.ab3@6963>   MOVEQ.l #$05,D5
000246D4 <AmiBlitz3.ab3@6964> BRA.w get1bytemain                                         ;??wy not !fget
000246DA <AmiBlitz3.ab3@6971>   MOVEA.l asmbuff,A0
000246E0 <AmiBlitz3.ab3@6972>   MOVE.w ininclude,D1
000246E6 <AmiBlitz3.ab3@6973>   OR.w inmacro,D1
000246E8 <AmiBlitz3.ab3@6974>   MOVE.w D1,(A0)+                                          ;flag!
000246EC <AmiBlitz3.ab3@6975>    BNE.w copyconst
000246EE <AmiBlitz3.ab3@6976>   MOVE.l A5,-(A7)
000246F2 <AmiBlitz3.ab3@6977>    BSR.w copyconst
000246F8 <AmiBlitz3.ab3@6978>   MOVEA.l asmbuff,A0
000246FC <AmiBlitz3.ab3@6979>   CMP.w #$4,D1
00024700 <AmiBlitz3.ab3@6980>    BLS.w asmconst__leave
00024706 <AmiBlitz3.ab3@6981>   TST.w lc
0002470A <AmiBlitz3.ab3@6982>    BNE.w asmconst__leave
0002470C <AmiBlitz3.ab3@6983>   ADDQ.w #2,A0
0002470E <AmiBlitz3.ab3@6984>   MOVE.l (A7)+,(A0)+
00024710 <AmiBlitz3.ab3@6985>   CLR.b (A0)
00024718 <AmiBlitz3.ab3@6986>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002471A <AmiBlitz3.ab3@6987> RTS
0002471C <AmiBlitz3.ab3@6991>   NOT.w (A0)
0002471E <AmiBlitz3.ab3@6992>   ADDQ.w #4,A7
00024720 <AmiBlitz3.ab3@6993> RTS
00024722 <AmiBlitz3.ab3@6996> lc:  Ds.w 1
00024728 <AmiBlitz3.ab3@7000>   CLR.w lc
0002472A <AmiBlitz3.ab3@7001>   MOVEQ.l #$00,D1
0002472C <AmiBlitz3.ab3@7004>    ADDQ.w #1,D1                                            ;label name
00024758 <AmiBlitz3.ab3@7005>    !fget                                                   ;bsr.w get1bytemain
0002475C <AmiBlitz3.ab3@7006>    BEQ.w copyconst__done
00024760 <AmiBlitz3.ab3@7007>    CMP.w #$22,d0
00024764 <AmiBlitz3.ab3@7008>    BNE.s copyconst__loop_l10
0002476A <AmiBlitz3.ab3@7009>    NOT.w instringon
0002476E <AmiBlitz3.ab3@7012>    CMP.w #":",d0
00024772 <AmiBlitz3.ab3@7013>    BNE.s copyconst__loop_l11
00024778 <AmiBlitz3.ab3@7014>    TST.w instringon
0002477C <AmiBlitz3.ab3@7015>    BEQ copyconst__done
0002477E <AmiBlitz3.ab3@7018>   TST.w D0
00024782 <AmiBlitz3.ab3@7019>   BPL.w copyconst__notmi
00024784 <AmiBlitz3.ab3@7020>   MOVE.w D0,-(A7)
00024786 <AmiBlitz3.ab3@7021>   LSR.w #8,D0
00024788 <AmiBlitz3.ab3@7022>   MOVE.b D0,(A0)+
0002478A <AmiBlitz3.ab3@7023>   MOVE.w (A7)+,D0
0002478C <AmiBlitz3.ab3@7024>   MOVE.b D0,(A0)+
0002478E <AmiBlitz3.ab3@7025>   ADDQ.w #1,D1
00024792 <AmiBlitz3.ab3@7026> BRA.s copyconst__loop
00024798 <AmiBlitz3.ab3@7029>    TST.w instringon
0002479C <AmiBlitz3.ab3@7030>    BNE.w copyconst__putbyte
000247A2 <AmiBlitz3.ab3@7031>    TST.b _dcb
000247A6 <AmiBlitz3.ab3@7032>    BNE copyconst__notmi_l10
000247AA <AmiBlitz3.ab3@7033>    CMP.w #$28,D0
000247AE <AmiBlitz3.ab3@7034>    BEQ.w copyconst__done
000247B2 <AmiBlitz3.ab3@7037>    CMP.w #$2C,D0
000247B6 <AmiBlitz3.ab3@7038>    BEQ.w copyconst__done
000247BA <AmiBlitz3.ab3@7039>    CMP.b #"'",D0
000247BE <AmiBlitz3.ab3@7040>    BNE.w copyconst__putbyte
000247C4 <AmiBlitz3.ab3@7041>    MOVE.w D0,lc                                     ;locallabels
000247C6 <AmiBlitz3.ab3@7042>    MOVE.l A1,-(A7)
000247CC <AmiBlitz3.ab3@7043>    LEA lastgloballabel,A1
000247CE <AmiBlitz3.ab3@7044>    TST.b (A1)
000247D2 <AmiBlitz3.ab3@7045>    BEQ.w nolocerr
000247D4 <AmiBlitz3.ab3@7048>   ADDQ.w #1,D1
000247D6 <AmiBlitz3.ab3@7049>   MOVE.b (A1)+,(A0)+
000247DA <AmiBlitz3.ab3@7050>    BNE.w copyconst__cloop
000247DC <AmiBlitz3.ab3@7051>   SUBQ.w #1,D1
000247DE <AmiBlitz3.ab3@7052>   SUBQ.w #1,A0
000247E0 <AmiBlitz3.ab3@7053>   MOVEA.l (A7)+,A1
000247E2 <AmiBlitz3.ab3@7056>   MOVE.b D0,(A0)+
000247E6 <AmiBlitz3.ab3@7057> BRA.w copyconst__loop
000247E8 <AmiBlitz3.ab3@7060>   CLR.b (A0)
000247EE <AmiBlitz3.ab3@7061>   MOVE.w D1,asmlen2
000247F0 <AmiBlitz3.ab3@7062> RTS
000247F6 <AmiBlitz3.ab3@7067>   CMP.l #$80ad,d0
000247FA <AmiBlitz3.ab3@7068>   BNE.s 'l12
00024800 <AmiBlitz3.ab3@7069> JMP bssseg
00024806 <AmiBlitz3.ab3@7072>   CMP.l #$807f,d0
0002480A <AmiBlitz3.ab3@7073>     BNE.s 'l13
00024810 <AmiBlitz3.ab3@7074> JMP chipseg
00024816 <AmiBlitz3.ab3@7077>   ADDQ.l #1,destpointer                                    ;even
0002481E <AmiBlitz3.ab3@7078>   BCLR #$0,destpointer+3
00024822 <AmiBlitz3.ab3@7079>   SUBI.w #$803C,D0
00024824 <AmiBlitz3.ab3@7080>   LSL.w #2,D0
0002482A <AmiBlitz3.ab3@7081>   MOVEA.l #asmpnts,A0
0002482E <AmiBlitz3.ab3@7082>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00024834 <AmiBlitz3.ab3@7083>   MOVE.w D0,temp1
00024836 <AmiBlitz3.ab3@7084>   MOVE.l A0,-(A7)
00024838 <AmiBlitz3.ab3@7085>   MOVEQ.l #$01,D1
00024864 <AmiBlitz3.ab3@7086>    !fget                                                   ;bsr.w get1bytemain
00024868 <AmiBlitz3.ab3@7087>   CMP.w #$2E,D0
0002486C <AmiBlitz3.ab3@7088>    BNE.w JL_0_6184
00024898 <AmiBlitz3.ab3@7089>   !fget                                                    ;bsr.w get1bytemain
0002489C <AmiBlitz3.ab3@7090>   ORI.w #$20,D0
000248A0 <AmiBlitz3.ab3@7091>   CMP.w #$77,D0                                            ;long
000248A4 <AmiBlitz3.ab3@7092>    BEQ.w JL_0_618A
000248A8 <AmiBlitz3.ab3@7093>   CMP.w #$62,D0                                            ;byte
000248AC <AmiBlitz3.ab3@7094>    BEQ.w JL_0_617A
000248B0 <AmiBlitz3.ab3@7095>   CMP.w #$6C,D0                                            ;word
000248B4 <AmiBlitz3.ab3@7096>    BEQ.w JL_0_6196
000248B8 <AmiBlitz3.ab3@7097>   CMP.w #"s",d0
000248BC <AmiBlitz3.ab3@7098>   BNE syntaxerr
000248C0 <AmiBlitz3.ab3@7099> BRA.w JL_0_617A
000248C2 <AmiBlitz3.ab3@7102>   MOVEQ.l #$00,D1
000248C6 <AmiBlitz3.ab3@7103>   MOVE.w $8(A0),D0
000248CA <AmiBlitz3.ab3@7104> BRA.w JL_0_619E
000248CC <AmiBlitz3.ab3@7107>   MOVEQ.l #$04,D1
000248D0 <AmiBlitz3.ab3@7108> BRA.w JL_0_61AE
000248D2 <AmiBlitz3.ab3@7111>   MOVEQ.l #$04,D1
000248D6 <AmiBlitz3.ab3@7112>   MOVE.w $8(A0),D0
000248D8 <AmiBlitz3.ab3@7113>   LSR.w #4,D0
000248DC <AmiBlitz3.ab3@7114> BRA.w JL_0_619E
000248DE <AmiBlitz3.ab3@7117>   MOVEQ.l #$08,D1
000248E2 <AmiBlitz3.ab3@7118>   MOVE.w $8(A0),D0
000248E4 <AmiBlitz3.ab3@7119>   LSR.w #8,D0
000248E8 <AmiBlitz3.ab3@7122>    ANDI.w #$F,D0
000248EC <AmiBlitz3.ab3@7123>   CMP.w #$F,D0
000248F0 <AmiBlitz3.ab3@7124>    BNE.w 'cl60
000248F8 <AmiBlitz3.ab3@7127>    CMP.l #"MULS",-6(a0)
000248FC <AmiBlitz3.ab3@7128>    BNE 'c20
00024902 <AmiBlitz3.ab3@7129>    MOVE.l #$4c000800,d1
00024908 <AmiBlitz3.ab3@7130> JMP do32
00024910 <AmiBlitz3.ab3@7133>    CMP.l #"MULU",-6(a0)
00024914 <AmiBlitz3.ab3@7134>    BNE 'c30
0002491A <AmiBlitz3.ab3@7135>    MOVE.l #$4c000000,d1
00024920 <AmiBlitz3.ab3@7136> JMP do32
00024928 <AmiBlitz3.ab3@7139>    CMP.l #"DIVS",-6(a0)
0002492C <AmiBlitz3.ab3@7140>    BNE 'c40
00024932 <AmiBlitz3.ab3@7141>    MOVE.l #$4c400800,d1
00024938 <AmiBlitz3.ab3@7142> JMP do32
00024940 <AmiBlitz3.ab3@7145>    CMP.l #"DIVU",-6(a0)
00024944 <AmiBlitz3.ab3@7146>    BNE 'c50
0002494A <AmiBlitz3.ab3@7147>    MOVE.l #$4c400000,d1
00024950 <AmiBlitz3.ab3@7148> JMP do32
00024954 <AmiBlitz3.ab3@7151> BRA illsizeerr
00024980 <AmiBlitz3.ab3@7154>   !fget                                                    ;bsr.w get1bytemain
00024986 <AmiBlitz3.ab3@7157>   MOVE.w D1,asmsize
00024988 <AmiBlitz3.ab3@7158>   MOVEQ.l #-$01,D3
0002498C <AmiBlitz3.ab3@7159>    BSR.w reget
00024990 <AmiBlitz3.ab3@7160>    BEQ.w JL_0_6200
0002499A <AmiBlitz3.ab3@7161>   MOVE.l #ptr_parameterstore,asmbuff
000249A4 <AmiBlitz3.ab3@7163>    MOVE.w oldqflag,instringon
000249AA <AmiBlitz3.ab3@7164>   MOVEA.l lastsourcepos,A5
000249AE <AmiBlitz3.ab3@7165>    BSR.w JL_0_5DC2
000249B0 <AmiBlitz3.ab3@7166>   MOVE.l D4,D2                                             ;to src
000249B2 <AmiBlitz3.ab3@7167>   MOVE.l D5,D3
000249BC <AmiBlitz3.ab3@7168>   MOVE.w asmlen2,asmlen
000249BE <AmiBlitz3.ab3@7169>   MOVEQ.l #-$01,D5
000249C8 <AmiBlitz3.ab3@7170>   MOVE.w extraword,extraword2
000249CC <AmiBlitz3.ab3@7171>   CMP.w #$2C,D0                                            ;','
000249D0 <AmiBlitz3.ab3@7172>    BNE.w JL_0_6200
000249DA <AmiBlitz3.ab3@7173>   MOVE.l #namebuff2,asmbuff
000249DE <AmiBlitz3.ab3@7174>    BSR.w JL_0_5DC2                                         ;dest
000249E0 <AmiBlitz3.ab3@7177>   MOVEA.l (A7)+,A0
000249E6 <AmiBlitz3.ab3@7178>   MOVEA.l destpointer,A1
000249E8 <AmiBlitz3.ab3@7179>   MOVEA.l A1,A4
000249EA <AmiBlitz3.ab3@7180>   ADDQ.w #2,A1
000249EC <AmiBlitz3.ab3@7181>   MOVE.w (A0),D1
000249EE <AmiBlitz3.ab3@7182>   TST.w D3
000249F2 <AmiBlitz3.ab3@7183>    BMI.w JL_0_639E
000249F6 <AmiBlitz3.ab3@7184>   MOVE.w $E(A0),D0
000249FA <AmiBlitz3.ab3@7185>    BPL.w JL_0_6264
000249FE <AmiBlitz3.ab3@7186>   BTST #$0,D0
00024A02 <AmiBlitz3.ab3@7187>    BEQ.w JL_0_6240
00024A06 <AmiBlitz3.ab3@7188>   CMP.w #$1,D5
00024A0A <AmiBlitz3.ab3@7189>    BNE.w JL_0_6240
00024A0E <AmiBlitz3.ab3@7190>   CMP.w #$E,D3
00024A12 <AmiBlitz3.ab3@7191>    BEQ.w JL_0_6264
00024A18 <AmiBlitz3.ab3@7192>   MOVE.w temp1,D0
00024A1A <AmiBlitz3.ab3@7193>   ADDQ.w #4,D0
00024A1E <AmiBlitz3.ab3@7194> BRA.w JL_0_6256
00024A22 <AmiBlitz3.ab3@7197>   BTST #$1,D0
00024A26 <AmiBlitz3.ab3@7198>    BEQ.w JL_0_6264
00024A2A <AmiBlitz3.ab3@7199>   CMP.w #$B,D3
00024A2E <AmiBlitz3.ab3@7200>    BNE.w JL_0_6264
00024A34 <AmiBlitz3.ab3@7201>   MOVE.w temp1,D0
00024A36 <AmiBlitz3.ab3@7204>   ADDQ.w #4,D0
00024A3C <AmiBlitz3.ab3@7205>   MOVEA.l #asmpnts,A0
00024A40 <AmiBlitz3.ab3@7206>   MOVEA.l $0(A0,D0.W),A0
00024A42 <AmiBlitz3.ab3@7207>   MOVE.w (A0),D1
00024A4C <AmiBlitz3.ab3@7210>   MOVE.l #ptr_parameterstore,buff1
00024A56 <AmiBlitz3.ab3@7211>   MOVE.l #namebuff2,buff2
00024A5A <AmiBlitz3.ab3@7212>   MOVE.l $A(A0),D0
00024A5E <AmiBlitz3.ab3@7213>    BEQ.w JL_0_62DC
00024A60 <AmiBlitz3.ab3@7214>   MOVEA.l D0,A3
00024A66 <AmiBlitz3.ab3@7215>   MOVE.w asmsize,D6
00024A68 <AmiBlitz3.ab3@7218>    JSR (A3)
00024A6C <AmiBlitz3.ab3@7219>    BPL.w JL_0_629A
00024A70 <AmiBlitz3.ab3@7220>   CMP.w #-$2,D0
00024A74 <AmiBlitz3.ab3@7221>    BEQ.w illsizeerr
00024A78 <AmiBlitz3.ab3@7222> BRA.w illeaerr
00024A7C <AmiBlitz3.ab3@7225>   BEQ.w JL_0_62DC
00024A7E <AmiBlitz3.ab3@7226>   EXG.l D2,D4
00024A80 <AmiBlitz3.ab3@7227>   EXG.l D3,D5
00024A86 <AmiBlitz3.ab3@7228>   MOVE.l extraword,D6
00024A88 <AmiBlitz3.ab3@7229>   SWAP D6
00024A8E <AmiBlitz3.ab3@7230>   MOVE.l D6,extraword
00024A98 <AmiBlitz3.ab3@7231>   MOVE.l #namebuff2,buff1
00024AA2 <AmiBlitz3.ab3@7232>   MOVE.l #ptr_parameterstore,buff2
00024AA8 <AmiBlitz3.ab3@7233>   MOVE.w asmlen,D6
00024AAE <AmiBlitz3.ab3@7234>   MOVE.w asmlen2,D7
00024AB4 <AmiBlitz3.ab3@7235>   MOVE.w D6,asmlen2
00024ABA <AmiBlitz3.ab3@7236>   MOVE.w D7,asmlen
00024AC4 <AmiBlitz3.ab3@7239>   MOVE.l buff1,asmbuff
00024AC8 <AmiBlitz3.ab3@7240>   MOVE.w $E(A0),D0
00024ACC <AmiBlitz3.ab3@7241>    BEQ.w JL_0_6348
00024AD0 <AmiBlitz3.ab3@7242>    BMI.w JL_0_6348
00024AD4 <AmiBlitz3.ab3@7243>    CMP.w #$7000,d1
00024AD8 <AmiBlitz3.ab3@7244>    BNE 'skip
00024ADC <AmiBlitz3.ab3@7245>    CMP.w #$b,d3
00024AE0 <AmiBlitz3.ab3@7246>    BNE illeaerr
00024AE4 <AmiBlitz3.ab3@7249>    CMP.w #$1,D0
00024AE8 <AmiBlitz3.ab3@7250>    BNE.w JL_0_630E
00024AEC <AmiBlitz3.ab3@7251>    CMP.w #$B,D3
00024AF0 <AmiBlitz3.ab3@7252>    BNE.w JL_0_6348
00024AF4 <AmiBlitz3.ab3@7255>    BSR.w insasm
00024AF6 <AmiBlitz3.ab3@7256>   MOVE.w D4,D2
00024AF8 <AmiBlitz3.ab3@7257>   MOVE.w D5,D3
00024AFC <AmiBlitz3.ab3@7258> BRA.w JL_0_6364
00024B00 <AmiBlitz3.ab3@7261>    CMP.w #$2,D0
00024B04 <AmiBlitz3.ab3@7262>    BNE.w JL_0_6324
00024B08 <AmiBlitz3.ab3@7263>   CMP.w #$8,D3
00024B0C <AmiBlitz3.ab3@7264>    BNE.w illeaerr
00024B0E <AmiBlitz3.ab3@7265>   MOVEQ.l #$09,D3
00024B12 <AmiBlitz3.ab3@7266> BRA.w JL_0_6348
00024B16 <AmiBlitz3.ab3@7269>    CMP.w #$3,D0
00024B1A <AmiBlitz3.ab3@7270>    BEQ.w JL_0_6302
00024B1E <AmiBlitz3.ab3@7271>   CMP.w #$4,D0
00024B22 <AmiBlitz3.ab3@7272>    BEQ.w JL_0_6302
00024B26 <AmiBlitz3.ab3@7273>   CMP.w #$5,D0
00024B2A <AmiBlitz3.ab3@7274>    BNE.w JL_0_6348
00024B2E <AmiBlitz3.ab3@7275>   CMP.w #$8,D5
00024B32 <AmiBlitz3.ab3@7276>    BNE.w illeaerr
00024B34 <AmiBlitz3.ab3@7277>   OR.w D2,D1
00024B36 <AmiBlitz3.ab3@7278>   MOVEQ.l #$09,D5
00024B3A <AmiBlitz3.ab3@7281>   MOVE.w $2(A0),D6
00024B3E <AmiBlitz3.ab3@7282>   MOVE.b $6(A0),D7
00024B42 <AmiBlitz3.ab3@7283>   MOVEM.l D4-D5,-(A7)
00024B48 <AmiBlitz3.ab3@7284>   MOVE.w extraword2,D4
00024B4C <AmiBlitz3.ab3@7285>    BSR.w doea
00024B50 <AmiBlitz3.ab3@7286>   MOVEM.l (A7)+,D2-D3
00024B52 <AmiBlitz3.ab3@7287>   TST.w D3
00024B56 <AmiBlitz3.ab3@7290>     BMI.w JL_0_6392
00024B5C <AmiBlitz3.ab3@7291>   MOVE.w extraword,D4
00024B60 <AmiBlitz3.ab3@7292>   MOVE.w $4(A0),D6
00024B64 <AmiBlitz3.ab3@7293>   MOVE.b $7(A0),D7
00024B6E <AmiBlitz3.ab3@7294>   MOVE.l buff2,asmbuff
00024B78 <AmiBlitz3.ab3@7295>   MOVE.w asmlen2,asmlen
00024B7C <AmiBlitz3.ab3@7296>    BSR.w doea
00024B80 <AmiBlitz3.ab3@7297> BRA.w JL_0_63AA
00024B84 <AmiBlitz3.ab3@7300>   MOVE.w $4(A0),D0
00024B88 <AmiBlitz3.ab3@7301>    BNE.w illeaerr
00024B8C <AmiBlitz3.ab3@7302> BRA.w JL_0_63AA
00024B90 <AmiBlitz3.ab3@7306>   MOVE.w $2(A0),D0
00024B94 <AmiBlitz3.ab3@7307>   OR.w $4(A0),D0
00024B98 <AmiBlitz3.ab3@7308>    BNE.w illeaerr
00024B9C <AmiBlitz3.ab3@7311>   MOVE.w $8(A0),D0
00024BA0 <AmiBlitz3.ab3@7312>   ANDI.w #$F000,D0
00024BA4 <AmiBlitz3.ab3@7313>   CMP.w #-$1000,D0
00024BA8 <AmiBlitz3.ab3@7314>    BEQ.w JL_0_63D2
00024BAA <AmiBlitz3.ab3@7315>   LSR.w #8,D0
00024BAC <AmiBlitz3.ab3@7316>   LSR.w #4,D0
00024BB0 <AmiBlitz3.ab3@7317>   MOVE.w $8(A0),D2
00024BB6 <AmiBlitz3.ab3@7318>   MOVE.w asmsize,D3
00024BB8 <AmiBlitz3.ab3@7319>   LSR.w D3,D2
00024BBC <AmiBlitz3.ab3@7320>   ANDI.w #$F,D2
00024BBE <AmiBlitz3.ab3@7321>   LSL.w D0,D2
00024BC0 <AmiBlitz3.ab3@7322>   OR.w D2,D1
00024BC6 <AmiBlitz3.ab3@7325>   CMPA.l destbufferend,A4
00024BCA <AmiBlitz3.ab3@7326>    BCS.w JL_0_63E8
00024BD2 <AmiBlitz3.ab3@7328>   MOVE.w #$FFFF,dontwrite
00024BD6 <AmiBlitz3.ab3@7329> BRA.w JL_0_63EA
00024BD8 <AmiBlitz3.ab3@7332>   MOVE.w D1,(A4)
00024BDE <AmiBlitz3.ab3@7335>   MOVE.l A1,destpointer
00024BE0 <AmiBlitz3.ab3@7336> RTS
00024BE6 <AmiBlitz3.ab3@7340>   MOVE.l destpointer,-(A7)
00024BEC <AmiBlitz3.ab3@7341>   MOVE.l A1,destpointer
00024BF0 <AmiBlitz3.ab3@7342>    BSR.w addoff
00024BF6 <AmiBlitz3.ab3@7343>   MOVEA.l destpointer,A1
00024BFC <AmiBlitz3.ab3@7344>   MOVE.l (A7)+,destpointer
00024BFE <AmiBlitz3.ab3@7345> RTS
00024C02 <AmiBlitz3.ab3@7349>   MOVEM.l d2-d6,-(a7)
00024C08 <AmiBlitz3.ab3@7350>   JSR stripspaces
00024C0C <AmiBlitz3.ab3@7351>   CMP.b #"d",(a5)+
00024C10 <AmiBlitz3.ab3@7352>   BNE noreg
00024C12 <AmiBlitz3.ab3@7353>   MOVE.b (a5)+,d0
00024C16 <AmiBlitz3.ab3@7354>   CMP.b #$30,d0
00024C1A <AmiBlitz3.ab3@7355>   BLT noreg
00024C1E <AmiBlitz3.ab3@7356>   CMP.b #$37,d0
00024C22 <AmiBlitz3.ab3@7357>   BGT noreg
00024C26 <AmiBlitz3.ab3@7358>   SUB.b #$30,d0
00024C28 <AmiBlitz3.ab3@7359>   MOVEQ #0,d3
00024C2A <AmiBlitz3.ab3@7360>   MOVE.b d0,d3                                             ;reg1
00024C2C <AmiBlitz3.ab3@7361>   ASL.l #8,d3
00024C2E <AmiBlitz3.ab3@7362>   ASL.l #8,d3
00024C34 <AmiBlitz3.ab3@7363>   JSR stripspaces
00024C38 <AmiBlitz3.ab3@7364>   CMP.b #",",(a5)+
00024C3C <AmiBlitz3.ab3@7365>   BNE noreg
00024C42 <AmiBlitz3.ab3@7366>   JSR stripspaces
00024C46 <AmiBlitz3.ab3@7367>   CMP.b #"d",(a5)+
00024C4A <AmiBlitz3.ab3@7368>   BNE noreg
00024C4C <AmiBlitz3.ab3@7369>   MOVE.b (a5)+,d0
00024C50 <AmiBlitz3.ab3@7370>   CMP.b #$30,d0
00024C54 <AmiBlitz3.ab3@7371>   BLT noreg
00024C58 <AmiBlitz3.ab3@7372>   CMP.b #$37,d0
00024C5C <AmiBlitz3.ab3@7373>   BGT noreg
00024C60 <AmiBlitz3.ab3@7374>   SUB.b #$30,d0
00024C62 <AmiBlitz3.ab3@7375>   MOVEQ #0,d4
00024C64 <AmiBlitz3.ab3@7376>   MOVE.b d0,d4                                             ;reg2
00024C66 <AmiBlitz3.ab3@7377>   ASL.l #8,d4
00024C68 <AmiBlitz3.ab3@7378>   ASL.l #4,d4
00024C6A <AmiBlitz3.ab3@7379>   OR.b d0,d1
00024C6C <AmiBlitz3.ab3@7380>   OR.l d3,d1
00024C6E <AmiBlitz3.ab3@7381>   OR.l d4,d1
00024C74 <AmiBlitz3.ab3@7382>   JSR writelong
00024C78 <AmiBlitz3.ab3@7383>   MOVEM.l (a7)+,d2-d6
00024C7C <AmiBlitz3.ab3@7384>   MOVEM.l d1/a1-a3,-(a7)
00024C80 <AmiBlitz3.ab3@7385> BRA exit
00024C84 <AmiBlitz3.ab3@7389>   MOVEM.l (a7)+,d2-d6
00024C8A <AmiBlitz3.ab3@7390>   LEA errtext,a0
00024C8C <AmiBlitz3.ab3@7391>   MOVE.l a0,-(a7)
00024C92 <AmiBlitz3.ab3@7392> JMP handle_compileerror
00024C98 <AmiBlitz3.ab3@7401>   MOVE.w dontwrite,D1
00024C9C <AmiBlitz3.ab3@7402>    BNE.w asmfixer__done
00024CA4 <AmiBlitz3.ab3@7403>   BTST #$7,make_smallestcode
00024CA8 <AmiBlitz3.ab3@7404>    BEQ.w asmfixer__go
00024CAC <AmiBlitz3.ab3@7405>   MOVE.w pass(PC),D1
00024CB0 <AmiBlitz3.ab3@7406>    BEQ.w asmfixer__done
00024CB6 <AmiBlitz3.ab3@7409>   MOVEA.l templabel,A2                                     ;insert labels in Code
00024CBE <AmiBlitz3.ab3@7410>   MOVE.b #1,curtemplabel
00024CC6 <AmiBlitz3.ab3@7411>   MOVE.w #$FFFF,constmode
00024CCC <AmiBlitz3.ab3@7412>   CLR.w regnum
00024CD6 <AmiBlitz3.ab3@7413>           MOVE.l #forthstack,forthsp
00024CE0 <AmiBlitz3.ab3@7414>           MOVE.l #precstack,precsp
00024CE4 <AmiBlitz3.ab3@7415>    BSR.w prepstack
00024CE6 <AmiBlitz3.ab3@7418>   MOVE.l A2,-(A7)
00024CEA <AmiBlitz3.ab3@7419>    BSR.w chkstop
00024CEC <AmiBlitz3.ab3@7420>   MOVEA.l (A7)+,A2
00024CF0 <AmiBlitz3.ab3@7421>   CMPA.w #$0,A2
00024CF4 <AmiBlitz3.ab3@7422>    BEQ.w asmfixer__done2
00024CFA <AmiBlitz3.ab3@7423>    CLR.b iee
00024D00 <AmiBlitz3.ab3@7424>   MOVE.l A2,asmbuff
00024D04 <AmiBlitz3.ab3@7425>   LEA $10(A2),A5
00024D08 <AmiBlitz3.ab3@7426>   TST.b $F(A2)
00024D0C <AmiBlitz3.ab3@7427>    BNE.w asmfixer__skipo
00024D0E <AmiBlitz3.ab3@7428>   MOVEA.l (A5),A5                                          ;pointer to real text
00024D14 <AmiBlitz3.ab3@7431>    CLR.w asmtype
00024D18 <AmiBlitz3.ab3@7432>    CMP.b #".",(a5)
00024D1C <AmiBlitz3.ab3@7433>    BNE.s asmfixer__skipo_l10
00024D1E <AmiBlitz3.ab3@7434>    MOVE.l a2,-(a7)
00024D20 <AmiBlitz3.ab3@7435>    ADDQ.l #1,a5
00024D26 <AmiBlitz3.ab3@7436>    LEA newtypebase,a2
00024D2A <AmiBlitz3.ab3@7437>    BSR getparameter2
00024D2E <AmiBlitz3.ab3@7438>    BEQ.w syntaxerr
00024D32 <AmiBlitz3.ab3@7439>    BSR findtype
00024D36 <AmiBlitz3.ab3@7440>    BNE.w notypeerr
00024D3A <AmiBlitz3.ab3@7441>    LEA $4(a2),a2
00024D3E <AmiBlitz3.ab3@7442>    BSR getparameter2
00024D42 <AmiBlitz3.ab3@7443>    BEQ.w syntaxerr
00024D46 <AmiBlitz3.ab3@7444>    BSR.w findvariable2
00024D4A <AmiBlitz3.ab3@7445>    BNE.w notypeerr
00024D4E <AmiBlitz3.ab3@7446>    MOVE.w $4(a2),d3
00024D50 <AmiBlitz3.ab3@7447>    EXT.l d3
00024D54 <AmiBlitz3.ab3@7448> BRA asmfixer__skipo_l30b
00024D58 <AmiBlitz3.ab3@7451>   CMP.b #"\",(a5)
00024D5C <AmiBlitz3.ab3@7452>     BNE asmfixer__skipo_l20
00024D5E <AmiBlitz3.ab3@7453>     ADDQ.l #1,a5
00024D60 <AmiBlitz3.ab3@7454>    MOVE.l a2,-(a7)
00024D62 <AmiBlitz3.ab3@7455>    MOVE.l a5,a4
00024D68 <AmiBlitz3.ab3@7456>    LEA usedpath,a5
00024D6C <AmiBlitz3.ab3@7457>    CMP.b #"*",(a5)
00024D70 <AmiBlitz3.ab3@7458>    BNE asmfixer__skipo_lm1
00024D72 <AmiBlitz3.ab3@7459>    ADDQ.l #1,a5
00024D76 <AmiBlitz3.ab3@7462>    BSR.w getparameter2
00024D7A <AmiBlitz3.ab3@7463>    BEQ.w syntaxerr
00024D80 <AmiBlitz3.ab3@7464>    LEA varbase,A2
00024D88 <AmiBlitz3.ab3@7465>    MOVE.b #1,newvariable
00024D8C <AmiBlitz3.ab3@7466>    BSR.w findvariable
00024D92 <AmiBlitz3.ab3@7467>    CLR.b newvariable
00024D98 <AmiBlitz3.ab3@7468>    CMP.l #-1,d0
00024D9C <AmiBlitz3.ab3@7469>    BEQ.w notypeerr
00024D9E <AmiBlitz3.ab3@7470>    MOVE.l a4,a5
00024DA2 <AmiBlitz3.ab3@7471>    MOVE.l $a(a2),a2
00024DA6 <AmiBlitz3.ab3@7472>    LEA $4(a2),a2
00024DAA <AmiBlitz3.ab3@7473>    BSR getparameter2
00024DAE <AmiBlitz3.ab3@7474>    BEQ.w syntaxerr
00024DB2 <AmiBlitz3.ab3@7475>    BSR.w findvariable2
00024DB6 <AmiBlitz3.ab3@7476>    BNE.w notypeerr
00024DBA <AmiBlitz3.ab3@7477>   MOVE.w $4(A2),D3
00024DBC <AmiBlitz3.ab3@7478>   EXT.l D3
00024DC2 <AmiBlitz3.ab3@7481>    CMP.b #"[",-1(a5)
00024DC6 <AmiBlitz3.ab3@7482>    BNE asmfixer__skipo_l30c
00024DC8 <AmiBlitz3.ab3@7483>    MOVEQ #0,d0
00024DCA <AmiBlitz3.ab3@7484>    MOVE.b (a5)+,d0
00024DCC <AmiBlitz3.ab3@7485>    MOVE.l d3,-(a7)
00024DCE <AmiBlitz3.ab3@7486>    MOVEQ #0,d3
00024DD4 <AmiBlitz3.ab3@7487>    JSR atoi
00024DD6 <AmiBlitz3.ab3@7488>    MOVE.l (a7)+,d1
00024DDA <AmiBlitz3.ab3@7489>    MOVE.l $a(a2),a2
00024DDE <AmiBlitz3.ab3@7490>    MOVE.w 8(a2),d0
00024DE0 <AmiBlitz3.ab3@7491>    MULS d0,d3
00024DE2 <AmiBlitz3.ab3@7492>    ADD.l d1,d3
00024DE4 <AmiBlitz3.ab3@7495>   MOVE.l (a7)+,a2
00024DE8 <AmiBlitz3.ab3@7496> BRA asmfixer__oko
00024DEE <AmiBlitz3.ab3@7499>   CMP.w #$c,$8(a2)
00024DF2 <AmiBlitz3.ab3@7500>      BEQ asmfixer__skipo_lf1
00024DF8 <AmiBlitz3.ab3@7501>      CMP.w #$d,$8(a2)
00024DFC <AmiBlitz3.ab3@7502>      BEQ asmfixer__skipo_lf1
00024E02 <AmiBlitz3.ab3@7505>   JSR AJL_0_BF6E
00024E08 <AmiBlitz3.ab3@7508>   MOVEA.l asmbuff,A2
00024E0C <AmiBlitz3.ab3@7509>    BEQ.w asmfixer__oko
00024E10 <AmiBlitz3.ab3@7510>   CMP.w #$28,D0
00024E14 <AmiBlitz3.ab3@7511>    BEQ.w asmfixer__oko
00024E18 <AmiBlitz3.ab3@7512>   CMP.w #$2C,D0
00024E1C <AmiBlitz3.ab3@7513>    BEQ.w asmfixer__oko
00024E20 <AmiBlitz3.ab3@7514> BRA.w syntaxerr
00024E28 <AmiBlitz3.ab3@7517>   MOVE.b #1,iee
00024E2C <AmiBlitz3.ab3@7518> BRA asmfixer__skipo_lf2
00024E30 <AmiBlitz3.ab3@7521>   MOVEA.l $4(A2),A1
00024E34 <AmiBlitz3.ab3@7523>   MOVE.w $8(A2),D1                                         ;labelmode
00024E38 <AmiBlitz3.ab3@7524>   CMP.w #$5,D1
00024E3C <AmiBlitz3.ab3@7525>    BNE.w asmfixer__notdan
00024E40 <AmiBlitz3.ab3@7528>    BSR.w chkword                                         ;word
00024E42 <AmiBlitz3.ab3@7531>   MOVE.w D3,(A1)
00024E46 <AmiBlitz3.ab3@7532> BRA.w asmfixer__next
00024E4A <AmiBlitz3.ab3@7535>   CMP.w #$6,D1
00024E4E <AmiBlitz3.ab3@7536>    BNE.w asmfixer__notdanxi
00024E52 <AmiBlitz3.ab3@7539>    BSR.w chkbyte                                         ;byte
00024E56 <AmiBlitz3.ab3@7542>   MOVE.b D3,$1(A1)
00024E5A <AmiBlitz3.ab3@7543> BRA.w asmfixer__next
00024E5E <AmiBlitz3.ab3@7546>    CMP.w #$11,D1                                           ;byte
00024E62 <AmiBlitz3.ab3@7547>    BEQ.w asmfixer__isbyte2
00024E66 <AmiBlitz3.ab3@7548>    CMP.w #$c,d1
00024E6A <AmiBlitz3.ab3@7549>    BEQ asmfixer__single1
00024E6E <AmiBlitz3.ab3@7550>    CMP.w #$d,d1
00024E72 <AmiBlitz3.ab3@7551>    BEQ asmfixer__double1
00024E76 <AmiBlitz3.ab3@7552>   CMP.w #$7,D1
00024E7A <AmiBlitz3.ab3@7553>    BEQ.w asmfixer__word                                    ;word
00024E7E <AmiBlitz3.ab3@7554>   CMP.w #$8,D1
00024E82 <AmiBlitz3.ab3@7555>    BNE.w asmfixer__notabsl
00024E88 <AmiBlitz3.ab3@7558>   MOVE.w asmtype,D1                                        ;long
00024E8C <AmiBlitz3.ab3@7559>    BEQ.w asmfixer__notpcrel
00024E90 <AmiBlitz3.ab3@7560>      BSR.w asmoff
00024E92 <AmiBlitz3.ab3@7563>   MOVE.l D3,(A1)
00024E96 <AmiBlitz3.ab3@7564> BRA.w asmfixer__next
00024E9C <AmiBlitz3.ab3@7568>   fmove.s fp0,0(a1)
00024EA0 <AmiBlitz3.ab3@7569> BRA.w asmfixer__next
00024EA6 <AmiBlitz3.ab3@7573>   fmove.d fp0,0(a1)
00024EAA <AmiBlitz3.ab3@7574> BRA.w asmfixer__next
00024EAE <AmiBlitz3.ab3@7578>   CMP.w #$9,D1
00024EB2 <AmiBlitz3.ab3@7579>    BNE.w asmfixer__notdpc
00024EB4 <AmiBlitz3.ab3@7580>   SUB.l A1,D3                                              ;branchword
00024EB8 <AmiBlitz3.ab3@7581>    BSR.w chkword
00024EBA <AmiBlitz3.ab3@7582>   MOVE.w D3,(A1)
00024EBE <AmiBlitz3.ab3@7583> BRA.w asmfixer__next
00024EC2 <AmiBlitz3.ab3@7587>   CMP.w #$A,D1
00024EC6 <AmiBlitz3.ab3@7588>    BNE.w asmfixer__imm
00024EC8 <AmiBlitz3.ab3@7589>   SUB.l A1,D3                                              ;branchbyte
00024ECC <AmiBlitz3.ab3@7590> BRA.w asmfixer__isbyte
00024ED0 <AmiBlitz3.ab3@7594>   CMP.w #$11,d1
00024ED4 <AmiBlitz3.ab3@7595>   BLE asmfixer__imm_org
00024ED6 <AmiBlitz3.ab3@7596>   MOVE.l a3,-(a7)
00024EDC <AmiBlitz3.ab3@7597>   LEA pluginbase,a3
00024EE0 <AmiBlitz3.ab3@7598>   MOVE.l 8(a2),a0
00024EE2 <AmiBlitz3.ab3@7599>   JSR (a0)                                                 ;hook
00024EE4 <AmiBlitz3.ab3@7600>   MOVE.l (a7)+,a3
00024EE8 <AmiBlitz3.ab3@7601> BRA asmfixer__next
00024EEC <AmiBlitz3.ab3@7604>   MOVE.w $A(A2),D0
00024EF0 <AmiBlitz3.ab3@7605>    BEQ.w asmfixer__noflag
00024EF4 <AmiBlitz3.ab3@7606>   CMP.w #$1,D0
00024EF8 <AmiBlitz3.ab3@7607>    BEQ.w asmfixer__tocount
00024EFC <AmiBlitz3.ab3@7608>   CMP.w #$3,D0
00024F00 <AmiBlitz3.ab3@7609>    BEQ.w asmfixer__tomoveq
00024F04 <AmiBlitz3.ab3@7610>   CMP.w #$4,D0
00024F08 <AmiBlitz3.ab3@7611>    BEQ.w asmfixer__totrap
00024F0C <AmiBlitz3.ab3@7614>   CMP.w #$B,D1                                             ;long
00024F10 <AmiBlitz3.ab3@7615>    BEQ.w asmfixer__isabsl
00024F14 <AmiBlitz3.ab3@7616> BRA asmfixer__word2                                              ;word
00024F1A <AmiBlitz3.ab3@7619>   CMP.l #$F,D3
00024F1E <AmiBlitz3.ab3@7620>    BHI.w illtraperr
00024F20 <AmiBlitz3.ab3@7621>   OR.b D3,-(A1)
00024F24 <AmiBlitz3.ab3@7622> BRA.w asmfixer__next
00024F2A <AmiBlitz3.ab3@7625>   CMP.l #$8,D3
00024F2E <AmiBlitz3.ab3@7626>    BHI.w illimmerr
00024F30 <AmiBlitz3.ab3@7627>   TST.l D3
00024F34 <AmiBlitz3.ab3@7628>    BEQ.w illimmerr
00024F38 <AmiBlitz3.ab3@7629>   ANDI.w #$7,D3
00024F3A <AmiBlitz3.ab3@7630>   LSL.w #8,D3
00024F3C <AmiBlitz3.ab3@7631>   LSL.w #1,D3
00024F3E <AmiBlitz3.ab3@7632>   OR.w D3,-(A1)
00024F42 <AmiBlitz3.ab3@7633> BRA.w asmfixer__next
00024F46 <AmiBlitz3.ab3@7636>    BSR.w chkbyte
00024F48 <AmiBlitz3.ab3@7637>   MOVE.b D3,-(A1)
00024F4A <AmiBlitz3.ab3@7640>   MOVEA.l (A2),A2
00024F4E <AmiBlitz3.ab3@7641> BRA.w asmfixer__loop
00024F54 <AmiBlitz3.ab3@7644>   CLR.w constmode
00024F5A <AmiBlitz3.ab3@7647>   CLR.b curtemplabel
00024F5C <AmiBlitz3.ab3@7648> RTS
00024F5E <AmiBlitz3.ab3@7657>   BTST D3,D6
00024F62 <AmiBlitz3.ab3@7658>    BEQ.w illeaerr
00024F66 <AmiBlitz3.ab3@7659>    BSR.w makemode
00024F6A <AmiBlitz3.ab3@7660>   CMP.w #$7,D3
00024F6E <AmiBlitz3.ab3@7661>    BCS.w doea__skip
00024F70 <AmiBlitz3.ab3@7662>   MOVE.w D3,D2
00024F72 <AmiBlitz3.ab3@7663>   SUBQ.w #7,D2
00024F76 <AmiBlitz3.ab3@7664>   CMP.w #$5,D2
00024F7A <AmiBlitz3.ab3@7665>    BCS.w doea__skip0
00024F7C <AmiBlitz3.ab3@7666>   MOVEQ.l #$04,D2
00024F7E <AmiBlitz3.ab3@7669>   MOVEQ.l #$07,D3
00024F80 <AmiBlitz3.ab3@7672>   MOVE.b D7,D0
00024F84 <AmiBlitz3.ab3@7673>   ANDI.w #$F,D0
00024F88 <AmiBlitz3.ab3@7674>   CMP.w #$F,D0
00024F8C <AmiBlitz3.ab3@7675>    BEQ.w doea__skip2
00024F8E <AmiBlitz3.ab3@7676>   LSL.w D0,D3
00024F90 <AmiBlitz3.ab3@7677>   OR.w D3,D1
00024F92 <AmiBlitz3.ab3@7680>   LSR.w #4,D7
00024F96 <AmiBlitz3.ab3@7681>   ANDI.w #$F,D7
00024F9A <AmiBlitz3.ab3@7682>   CMP.w #$F,D7
00024F9E <AmiBlitz3.ab3@7683>    BEQ.w doea__skip3
00024FA0 <AmiBlitz3.ab3@7684>   LSL.w D7,D2
00024FA2 <AmiBlitz3.ab3@7685>   OR.w D2,D1
00024FA4 <AmiBlitz3.ab3@7688> RTS
00024FAA <AmiBlitz3.ab3@7692>   CMP.l #$7F,D3
00024FAE <AmiBlitz3.ab3@7693>    BGT.w illdiserr
00024FB4 <AmiBlitz3.ab3@7694>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00024FB8 <AmiBlitz3.ab3@7695>    BLT.w illdiserr
00024FBA <AmiBlitz3.ab3@7696> RTS
00024FC0 <AmiBlitz3.ab3@7700>   CMP.l #$7fff,D3
00024FC4 <AmiBlitz3.ab3@7701>    BGT.w illdiserr
00024FCA <AmiBlitz3.ab3@7702>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00024FCE <AmiBlitz3.ab3@7703>    BLT.w illdiserr
00024FD0 <AmiBlitz3.ab3@7704> RTS
00024FD2 <AmiBlitz3.ab3@7709>   MOVE.b (a5)+,d0
00024FD4 <AmiBlitz3.ab3@7710>   CMP.b d1,d0
00024FD8 <AmiBlitz3.ab3@7711>   BEQ 'll10
00024FDA <AmiBlitz3.ab3@7712>   TST.b d0
00024FDE <AmiBlitz3.ab3@7713>   BNE 'll20
00024FE0 <AmiBlitz3.ab3@7716>   SUBQ #1,a5
00024FE2 <AmiBlitz3.ab3@7717> RTS
00024FE4 <AmiBlitz3.ab3@7722>   MOVE.b (a5)+,d0
00024FE8 <AmiBlitz3.ab3@7723>   CMP.b #",",d0
00024FEC <AmiBlitz3.ab3@7724>   BEQ 'll10
00024FF0 <AmiBlitz3.ab3@7725>   CMP.b #";",d0
00024FF4 <AmiBlitz3.ab3@7726>   BEQ 'll10
00024FF8 <AmiBlitz3.ab3@7727>  CMP.b #":",d0
00024FFC <AmiBlitz3.ab3@7728>   BEQ 'll10
00024FFE <AmiBlitz3.ab3@7731>   TST.b d0
00025002 <AmiBlitz3.ab3@7732>   BNE 'll20
00025004 <AmiBlitz3.ab3@7735>   SUBQ #1,a5
00025006 <AmiBlitz3.ab3@7736> RTS
00025008 <AmiBlitz3.ab3@7740>   ADD.l a2,d1
0002500E <AmiBlitz3.ab3@7741>   LEA tempspace,a1
00025010 <AmiBlitz3.ab3@7742>   MOVE.l d1,a0
00025012 <AmiBlitz3.ab3@7745>   MOVE.b (a0)+,(a1)+
00025016 <AmiBlitz3.ab3@7746>   BNE.s 'l10
00025018 <AmiBlitz3.ab3@7747>   SUBQ.l #1,a0
0002501A <AmiBlitz3.ab3@7748>   SUBQ.l #1,a1
0002501C <AmiBlitz3.ab3@7751>   MOVE.b (a5)+,(a1)+
00025020 <AmiBlitz3.ab3@7752>   BNE.s 'l20
00025022 <AmiBlitz3.ab3@7753>   CLR.b (a1)
00025028 <AmiBlitz3.ab3@7754>   LEA tempspace,a5
0002502A <AmiBlitz3.ab3@7755> RTS
0002502E <AmiBlitz3.ab3@7759>   MOVEM.l D1-D2/A0,-(A7)
00025030 <AmiBlitz3.ab3@7760>   MOVE.l d0,d2
00025032 <AmiBlitz3.ab3@7761>   MOVEQ #0,d1
00025034 <AmiBlitz3.ab3@7762>   MOVE.l a5,a4
00025036 <AmiBlitz3.ab3@7765>   ADDQ.l #1,d1
00025038 <AmiBlitz3.ab3@7766>   MOVE.b (a5)+,d0
0002503C <AmiBlitz3.ab3@7767>   CMP.b #",",d0
00025040 <AmiBlitz3.ab3@7768>   BEQ 'll10
00025044 <AmiBlitz3.ab3@7769>   CMP.b #";",d0
00025048 <AmiBlitz3.ab3@7770>   BEQ 'll10
0002504C <AmiBlitz3.ab3@7771>   CMP.b #":",d0
00025050 <AmiBlitz3.ab3@7772>   BEQ 'll10
00025054 <AmiBlitz3.ab3@7773>   CMP.b #"(",d0
00025058 <AmiBlitz3.ab3@7774>   BEQ 'll10
0002505A <AmiBlitz3.ab3@7775>   TST.b d0
0002505E <AmiBlitz3.ab3@7776>   BNE 'll20
00025060 <AmiBlitz3.ab3@7779>   SUBQ #1,a5
00025064 <AmiBlitz3.ab3@7780>   CMP.b #"'",(a4)
00025068 <AmiBlitz3.ab3@7781>   BEQ 'llocal
0002506E <AmiBlitz3.ab3@7782>   TST.w inmacro
00025072 <AmiBlitz3.ab3@7783>   BNE 'lmacro
00025074 <AmiBlitz3.ab3@7784>   MOVEQ.l #$14+4,D0
00025076 <AmiBlitz3.ab3@7785>   ADD.l d1,d0
00025078 <AmiBlitz3.ab3@7786>   MOVE.l d1,-(a7)
0002507A <AmiBlitz3.ab3@7787>   MOVEQ.l #$01,D1
00025080 <AmiBlitz3.ab3@7788>   MOVEA.l _execbase,A6
00025086 <AmiBlitz3.ab3@7789>   MOVE.l mempool2,a0
0002508A <AmiBlitz3.ab3@7790>   JSR _AllocPooled(a6)
0002508C <AmiBlitz3.ab3@7792>   MOVE.l (a7)+,d1
0002508E <AmiBlitz3.ab3@7793>   TST.l d0
00025092 <AmiBlitz3.ab3@7794>   BEQ nomemory
00025094 <AmiBlitz3.ab3@7795>   MOVEA.l D0,A0
0002509C <AmiBlitz3.ab3@7797>   MOVE.w linenumat+2,$A(A0)
000250A2 <AmiBlitz3.ab3@7799>   MOVE.l templabel,(A0)
000250A8 <AmiBlitz3.ab3@7800>   MOVE.l A0,templabel
000250B0 <AmiBlitz3.ab3@7801>   MOVE.l destpointer,$4(A0)
000250B4 <AmiBlitz3.ab3@7802>   MOVE.l d2,$8(A0)
000250B8 <AmiBlitz3.ab3@7803>   LEA $E(A0),A0
000250BC <AmiBlitz3.ab3@7804>   MOVE.b #$14,(A0)+
000250BE <AmiBlitz3.ab3@7805>   CLR.b (a0)+
000250C0 <AmiBlitz3.ab3@7807>   MOVE.l a0,d2
000250C2 <AmiBlitz3.ab3@7808>   ADDQ.l #4,d2
000250C4 <AmiBlitz3.ab3@7809>   MOVE.l d2,(a0)+
000250C6 <AmiBlitz3.ab3@7812>   MOVE.b (a4)+,(a0)+
000250C8 <AmiBlitz3.ab3@7813>   SUBQ.l #1,d1
000250CC <AmiBlitz3.ab3@7814>   BNE 'lc1
000250CE <AmiBlitz3.ab3@7815>   CLR.b (a0)+
000250D4 <AmiBlitz3.ab3@7816>   MOVE.w linenumat,(a0)
000250D8 <AmiBlitz3.ab3@7817>   MOVEM.l (A7)+,D1-D2/A0
000250DA <AmiBlitz3.ab3@7818> RTS
000250DC <AmiBlitz3.ab3@7821>   MOVEQ.l #$10+2,D0
000250DE <AmiBlitz3.ab3@7822>   ADD.l d1,d0
000250E2 <AmiBlitz3.ab3@7823>   MOVEM.l a4/d3,-(a7)
000250E4 <AmiBlitz3.ab3@7824>   MOVE.l d1,d3
000250E6 <AmiBlitz3.ab3@7825>   MOVEQ.l #$01,D1
000250EC <AmiBlitz3.ab3@7826>   MOVEA.l _execbase,A6
000250F2 <AmiBlitz3.ab3@7827>   MOVE.l mempool2,a0
000250F6 <AmiBlitz3.ab3@7828>   JSR _AllocPooled(a6)
000250F8 <AmiBlitz3.ab3@7830>   TST.l d0
000250FC <AmiBlitz3.ab3@7831>   BEQ nomemory
000250FE <AmiBlitz3.ab3@7832>   MOVEA.l D0,A0
00025106 <AmiBlitz3.ab3@7835>   MOVE.w linenumat+2,$C(A0)
0002510C <AmiBlitz3.ab3@7836>   MOVE.l templabel,(A0)
00025112 <AmiBlitz3.ab3@7837>   MOVE.l A0,templabel
0002511A <AmiBlitz3.ab3@7838>   MOVE.l destpointer,$4(A0)
0002511E <AmiBlitz3.ab3@7839>   MOVE.l d2,$8(A0)
00025122 <AmiBlitz3.ab3@7840>   LEA $E(A0),A0
00025124 <AmiBlitz3.ab3@7841>   MOVE.b d3,(A0)+
0002512A <AmiBlitz3.ab3@7842>   ADD.b #$10,-1(a0)
0002512E <AmiBlitz3.ab3@7843>   MOVE.b #$1,(a0)+
00025130 <AmiBlitz3.ab3@7844>   SUBQ.w #1,d3
00025132 <AmiBlitz3.ab3@7847>   MOVE.b (a4)+,(a0)+
00025134 <AmiBlitz3.ab3@7848>   SUBQ.l #1,d3
00025138 <AmiBlitz3.ab3@7849>   BNE.s 'lm2
0002513A <AmiBlitz3.ab3@7850>   CLR.b (a0)+
00025140 <AmiBlitz3.ab3@7851>   MOVE.w linenumat,(a0)
00025144 <AmiBlitz3.ab3@7852>   MOVEM.l (a7)+,d3/a4
00025148 <AmiBlitz3.ab3@7853>   MOVEM.l (A7)+,D1-D2/A0
0002514A <AmiBlitz3.ab3@7854> RTS
00025150 <AmiBlitz3.ab3@7857>   LEA lastgloballabel,a1
00025152 <AmiBlitz3.ab3@7860>   ADDQ.l #1,d1
00025154 <AmiBlitz3.ab3@7861>   TST.b (a1)+
00025158 <AmiBlitz3.ab3@7862>   BNE.s 'll11
0002515A <AmiBlitz3.ab3@7863>   MOVEQ.l #$10+2,D0
0002515C <AmiBlitz3.ab3@7864>   ADD.l d1,d0
00025160 <AmiBlitz3.ab3@7865>   MOVEM.l a4/d3,-(a7)
00025162 <AmiBlitz3.ab3@7866>   MOVE.l d1,d3
00025164 <AmiBlitz3.ab3@7867>   MOVEQ.l #$01,D1
0002516A <AmiBlitz3.ab3@7868>   MOVEA.l _execbase,A6
00025170 <AmiBlitz3.ab3@7869>   MOVE.l mempool2,a0
00025174 <AmiBlitz3.ab3@7870>   JSR _AllocPooled(a6)
00025176 <AmiBlitz3.ab3@7872>   TST.l d0
0002517A <AmiBlitz3.ab3@7873>   BEQ nomemory
0002517C <AmiBlitz3.ab3@7874>   MOVEA.l D0,A0
00025184 <AmiBlitz3.ab3@7877>   MOVE.w linenumat+2,$C(A0)
0002518A <AmiBlitz3.ab3@7878>   MOVE.l templabel,(A0)
00025190 <AmiBlitz3.ab3@7879>   MOVE.l A0,templabel
00025198 <AmiBlitz3.ab3@7880>   MOVE.l destpointer,$4(A0)
0002519C <AmiBlitz3.ab3@7881>   MOVE.l d2,$8(A0)
000251A0 <AmiBlitz3.ab3@7882>   LEA $E(A0),A0
000251A2 <AmiBlitz3.ab3@7883>   MOVE.b d3,(A0)+
000251A8 <AmiBlitz3.ab3@7884>   ADD.b #$10,-1(a0)
000251AC <AmiBlitz3.ab3@7885>   MOVE.b #$1,(a0)+
000251AE <AmiBlitz3.ab3@7886>   SUBQ.w #1,d3
000251B4 <AmiBlitz3.ab3@7887>   LEA lastgloballabel,a1
000251B6 <AmiBlitz3.ab3@7890>   SUBQ.l #1,d3
000251B8 <AmiBlitz3.ab3@7891>   MOVE.b (a1)+,(a0)+
000251BC <AmiBlitz3.ab3@7892>   BNE.s 'lm3
000251BE <AmiBlitz3.ab3@7893>   SUBQ.l #1,a0
000251C0 <AmiBlitz3.ab3@7896>   MOVE.b (a4)+,(a0)+
000251C2 <AmiBlitz3.ab3@7897>   SUBQ.l #1,d3
000251C6 <AmiBlitz3.ab3@7898>   BNE.s 'lm1
000251C8 <AmiBlitz3.ab3@7899>   CLR.b (a0)+
000251CE <AmiBlitz3.ab3@7900>   MOVE.w linenumat,(a0)
000251D2 <AmiBlitz3.ab3@7901>   MOVEM.l (a7)+,d3/a4
000251D6 <AmiBlitz3.ab3@7902>   MOVEM.l (A7)+,D1-D2/A0
000251D8 <AmiBlitz3.ab3@7903> RTS
00025202 <AmiBlitz3.ab3@7907>   !basic
00025264 <AmiBlitz3.ab3@7908>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025276 <AmiBlitz3.ab3@7909>   loop Delay_ 1
0002527C <AmiBlitz3.ab3@7910> Goto loop
00025280 <AmiBlitz3.ab3@7914>   MOVEM.l D0-D2/A0,-(A7)
00025284 <AmiBlitz3.ab3@7915>   MOVE.w $E(A0),-(A7)
00025288 <AmiBlitz3.ab3@7916>    BPL.w insasm__ok
0002528A <AmiBlitz3.ab3@7917>   CLR.w (A7)
0002528C <AmiBlitz3.ab3@7920>   MOVE.l A1,-(A7)
0002528E <AmiBlitz3.ab3@7921>   MOVEQ.l #$10+2,D0
00025294 <AmiBlitz3.ab3@7922>   ADD.w asmlen,D0
00025296 <AmiBlitz3.ab3@7923>   MOVE.w D0,D2
00025298 <AmiBlitz3.ab3@7924>   MOVEQ.l #$01,D1
0002529E <AmiBlitz3.ab3@7925>   MOVEA.l _execbase,A6
000252A4 <AmiBlitz3.ab3@7926>   MOVE.l mempool2,a0
000252A8 <AmiBlitz3.ab3@7927>   JSR _AllocPooled(a6)
000252AA <AmiBlitz3.ab3@7929>   MOVEA.l D0,A0
000252B2 <AmiBlitz3.ab3@7932>   MOVE.w linenumat+2,$C(A0)
000252B8 <AmiBlitz3.ab3@7933>   MOVE.l templabel,(A0)
000252BE <AmiBlitz3.ab3@7934>   MOVE.l A0,templabel
000252C2 <AmiBlitz3.ab3@7935>   MOVE.l (A7),$4(A0)
000252C6 <AmiBlitz3.ab3@7936>   MOVE.w d3,$8(A0)
000252CC <AmiBlitz3.ab3@7937>   MOVE.w $4(A7),$A(A0)
000252D0 <AmiBlitz3.ab3@7938>   LEA $E(A0),A0
000252D2 <AmiBlitz3.ab3@7939>   MOVE.b D2,(A0)+                                           ;length
000252D8 <AmiBlitz3.ab3@7940>   MOVEA.l asmbuff,A1
000252DA <AmiBlitz3.ab3@7941>   ADDQ.w #1,A1
000252DC <AmiBlitz3.ab3@7942>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
000252E0 <AmiBlitz3.ab3@7943>    BNE.w insasm__loop
000252E2 <AmiBlitz3.ab3@7944>   MOVE.l (A1)+,(A0)+
000252E8 <AmiBlitz3.ab3@7945>   MOVE.w linenumat,(a0)
000252EC <AmiBlitz3.ab3@7946> BRA.w insasm__loopdone
000252EE <AmiBlitz3.ab3@7949>    MOVE.b (A1)+,(A0)+
000252F2 <AmiBlitz3.ab3@7950>    BNE.w insasm__loop
000252F8 <AmiBlitz3.ab3@7951>    MOVE.w linenumat,(a0)
000252FA <AmiBlitz3.ab3@7954>   MOVEA.l (A7)+,A1
000252FC <AmiBlitz3.ab3@7955>   ADDQ.w #2,A7
00025300 <AmiBlitz3.ab3@7956>   MOVEM.l (A7)+,D0-D2/A0
00025302 <AmiBlitz3.ab3@7957> RTS
00025306 <AmiBlitz3.ab3@7961>   CMP.w #$5,D3
0002530A <AmiBlitz3.ab3@7962>    BCS.w makemode__done
0002530E <AmiBlitz3.ab3@7963>   CMP.w #$B,D3
00025312 <AmiBlitz3.ab3@7964>    BHI.w makemode__done2
00025316 <AmiBlitz3.ab3@7965>    BEQ.w makemode__imm
0002531A <AmiBlitz3.ab3@7966>    BSR.w insasm
0002531E <AmiBlitz3.ab3@7967>   CMP.w #$5,D3
00025322 <AmiBlitz3.ab3@7968>    BEQ.w makemode__word
00025326 <AmiBlitz3.ab3@7969>   CMP.w #$6,D3
0002532A <AmiBlitz3.ab3@7970>    BEQ.w makemode__dxi
0002532E <AmiBlitz3.ab3@7971>   CMP.w #$7,D3
00025332 <AmiBlitz3.ab3@7972>    BEQ.w makemode__word
00025336 <AmiBlitz3.ab3@7973>   CMP.w #$8,D3
0002533A <AmiBlitz3.ab3@7974>    BEQ.w makemode__long
0002533E <AmiBlitz3.ab3@7975>   CMP.w #$9,D3
00025342 <AmiBlitz3.ab3@7976>    BEQ.w makemode__word
00025348 <AmiBlitz3.ab3@7980>   CMPA.l destbufferend,A1
0002534C <AmiBlitz3.ab3@7981>    BCS.w makemode__ok7
0002534E <AmiBlitz3.ab3@7982>   ADDQ.w #2,A1
00025350 <AmiBlitz3.ab3@7983> RTS
00025352 <AmiBlitz3.ab3@7986>   MOVE.w D4,(A1)+
00025354 <AmiBlitz3.ab3@7987> RTS
0002535C <AmiBlitz3.ab3@7990>   CMPI.w #$8,asmsize
00025360 <AmiBlitz3.ab3@7991>    BCC.w makemode__immlong
00025362 <AmiBlitz3.ab3@7992>   MOVEQ.l #$10,D3
00025366 <AmiBlitz3.ab3@7993>    BSR.w insasm
00025368 <AmiBlitz3.ab3@7994>   MOVEQ.l #$0B,D3
0002536C <AmiBlitz3.ab3@7995> BRA.w makemode__word
00025370 <AmiBlitz3.ab3@7998>   BSR.w insasm
00025372 <AmiBlitz3.ab3@8001>   ADDQ.w #2,A1
00025374 <AmiBlitz3.ab3@8004>   ADDQ.w #2,A1
00025376 <AmiBlitz3.ab3@8005> RTS
0002537A <AmiBlitz3.ab3@8008>   CMP.w #$F,D3
0002537E <AmiBlitz3.ab3@8009>    BNE.w makemode__done
00025384 <AmiBlitz3.ab3@8010>   CMPA.l destbufferend,A1
00025388 <AmiBlitz3.ab3@8011>    BCS.w makemode__ok3
0002538A <AmiBlitz3.ab3@8012>   ADDQ.w #2,A1
0002538C <AmiBlitz3.ab3@8013>   ADDQ.w #4,A7
0002538E <AmiBlitz3.ab3@8014> RTS
00025390 <AmiBlitz3.ab3@8017>   MOVE.w D2,(A1)+
00025392 <AmiBlitz3.ab3@8018>   ADDQ.w #4,A7
00025394 <AmiBlitz3.ab3@8021> RTS
00025398 <AmiBlitz3.ab3@8025>   BSR.w storeloc
000253A2 <AmiBlitz3.ab3@8026>   MOVE.l linenumat,oldline
000253A4 <AmiBlitz3.ab3@8027>   MOVEQ.l #$00,D1
000253A8 <AmiBlitz3.ab3@8028>    BSR.w get1bytemain
000253AC <AmiBlitz3.ab3@8029>    BEQ.w JL_0_676E
000253AE <AmiBlitz3.ab3@8030>   MOVEQ.l #$00,D3
000253B2 <AmiBlitz3.ab3@8031> BRA.w JL_0_6726
000253B6 <AmiBlitz3.ab3@8034>    BSR.w get1bytemain
000253BA <AmiBlitz3.ab3@8035>    BNE.w JL_0_671C
000253BC <AmiBlitz3.ab3@8038>   TST.w D3
000253C0 <AmiBlitz3.ab3@8039>    BNE.w brackets_                                         ;syntax error brackets
000253C4 <AmiBlitz3.ab3@8040> BRA.w JL_0_676C
000253CA <AmiBlitz3.ab3@8043>    MOVE.w instringon,D4
000253CE <AmiBlitz3.ab3@8045>      BEQ JL_0_6726
000253D0 <AmiBlitz3.ab3@8048>     MOVEQ #0,d0
000253D2 <AmiBlitz3.ab3@8049>      MOVE.b (a5)+,d0                                       ;fix "ue"
000253D8 <AmiBlitz3.ab3@8050>      MOVE.w d0,lastchar
000253DC <AmiBlitz3.ab3@8051>      BEQ ready
000253E0 <AmiBlitz3.ab3@8052>      CMP.b #$22,d0
000253E4 <AmiBlitz3.ab3@8053>      BNE 'l1
000253EA <AmiBlitz3.ab3@8054>      NOT.w instringon
000253EE <AmiBlitz3.ab3@8055> BRA JL_0_670A
000253F2 <AmiBlitz3.ab3@8058>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
000253F6 <AmiBlitz3.ab3@8059>            BNE 'l10
000253FA <AmiBlitz3.ab3@8060>            CMP.b #"@",(a5)
000253FE <AmiBlitz3.ab3@8061>            BNE 'l10
00025404 <AmiBlitz3.ab3@8064>            TST.w ininclude
00025408 <AmiBlitz3.ab3@8065>            BNE 'inc
0002540E <AmiBlitz3.ab3@8066>            MOVE.l sourceline3,a5
00025414 <AmiBlitz3.ab3@8067>            CMP.l #0,a5
00025418 <AmiBlitz3.ab3@8068>            BNE 'l11t
0002541E <AmiBlitz3.ab3@8069>            MOVEA.l sourceline,A5
00025420 <AmiBlitz3.ab3@8072>            MOVEA.l (A5),A5
00025426 <AmiBlitz3.ab3@8073>            CMP.l #0,a5
0002542A <AmiBlitz3.ab3@8074>            BEQ JL_0_676C
00025430 <AmiBlitz3.ab3@8075>            MOVE.l a5,sourceline3
00025434 <AmiBlitz3.ab3@8076>            LEA $9(A5),A5
00025438 <AmiBlitz3.ab3@8077> BRA 'l11
0002543A <AmiBlitz3.ab3@8080>            ADDQ.l #1,a5
0002543C <AmiBlitz3.ab3@8081>            TST.b (a5)
00025440 <AmiBlitz3.ab3@8082>            BNE 'inc
00025442 <AmiBlitz3.ab3@8086>            ADDQ.l #1,a5
00025444 <AmiBlitz3.ab3@8087>            TST.b (a5)
00025448 <AmiBlitz3.ab3@8088>            BEQ illeolerr
0002544A <AmiBlitz3.ab3@8089>            MOVE.l a5,-(a7)
0002544E <AmiBlitz3.ab3@8092>       CMP.b #" ",(a5)+
00025452 <AmiBlitz3.ab3@8093>       BEQ 'l110
00025458 <AmiBlitz3.ab3@8094>        CMP.b #";",-1(a5)
0002545A <AmiBlitz3.ab3@8095>        MOVE.l (a7)+,a5
0002545E <AmiBlitz3.ab3@8096>        BEQ 'l111
00025462 <AmiBlitz3.ab3@8097> BRA JL_0_670A
00025466 <AmiBlitz3.ab3@8100>    CMP.w #$29,D0
0002546A <AmiBlitz3.ab3@8101>    BNE.w JL_0_673A
0002546C <AmiBlitz3.ab3@8102>   TST.w D3
00025470 <AmiBlitz3.ab3@8103>    BEQ.w JL_0_676C
00025472 <AmiBlitz3.ab3@8106>   SUBQ.w #1,D3
00025476 <AmiBlitz3.ab3@8107> BRA.w JL_0_670A
0002547A <AmiBlitz3.ab3@8110>    CMP.w #$7D,D0
0002547E <AmiBlitz3.ab3@8111>    BEQ.w JL_0_6734
00025482 <AmiBlitz3.ab3@8112>   CMP.w #$28,D0
00025486 <AmiBlitz3.ab3@8113>    BNE.w JL_0_6750
00025488 <AmiBlitz3.ab3@8116>    ADDQ.w #1,D3
0002548C <AmiBlitz3.ab3@8117> BRA.w JL_0_670A
00025490 <AmiBlitz3.ab3@8120>   CMP.w #$7B,D0
00025494 <AmiBlitz3.ab3@8121>    BEQ.w JL_0_674A
00025498 <AmiBlitz3.ab3@8122>   CMP.w #$2C,D0
0002549C <AmiBlitz3.ab3@8123>    BNE.w JL_0_670A
0002549E <AmiBlitz3.ab3@8124>   TST.w D3
000254A2 <AmiBlitz3.ab3@8125>    BNE.w JL_0_670A
000254A4 <AmiBlitz3.ab3@8126>   ADDQ.w #1,D1
000254A8 <AmiBlitz3.ab3@8127> BRA.w JL_0_670A
000254AA <AmiBlitz3.ab3@8130>   ADDQ.w #1,D1
000254B0 <AmiBlitz3.ab3@8133>   CLR.l sourceline3
000254BA <AmiBlitz3.ab3@8134>   MOVE.l oldline,linenumat
000254BE <AmiBlitz3.ab3@8135> BRA.w resloc
000254C4 <AmiBlitz3.ab3@8139>    CLR.w numreps
000254C6 <AmiBlitz3.ab3@8140>   MOVE.w D1,D0
000254CA <AmiBlitz3.ab3@8141>   ANDI.w #$FF00,D0
000254CE <AmiBlitz3.ab3@8142>    BEQ.w fetchlibps__noreps
000254D0 <AmiBlitz3.ab3@8143>   LSR.w #8,D0
000254D2 <AmiBlitz3.ab3@8144>   LSR.w #4,D0
000254D6 <AmiBlitz3.ab3@8145>    BEQ.w fetchlibps__skip
000254D8 <AmiBlitz3.ab3@8146>   SUB.b D0,D1
000254E2 <AmiBlitz3.ab3@8147>    MOVE.w regnum,regnumfunc
000254E8 <AmiBlitz3.ab3@8148>    MOVE.b funcparloop,-(a7)
000254F0 <AmiBlitz3.ab3@8149>    MOVE.b #0,funcparloop
000254F6 <AmiBlitz3.ab3@8150>    MOVE.l leftsidetype,-(a7)
000254FC <AmiBlitz3.ab3@8151>    MOVE.l rightsidetype,-(a7)
00025502 <AmiBlitz3.ab3@8152>    CLR.l leftsidetype
00025508 <AmiBlitz3.ab3@8153>    CLR.l rightsidetype
0002550E <AmiBlitz3.ab3@8154>    MOVE.b blitzparloop,-(a7)
00025516 <AmiBlitz3.ab3@8155>    MOVE.b #1,blitzparloop
0002551A <AmiBlitz3.ab3@8156>    BSR.w fetchpees2
00025520 <AmiBlitz3.ab3@8157>    MOVE.b (a7)+,blitzparloop
00025526 <AmiBlitz3.ab3@8158>    MOVE.l (a7)+,rightsidetype
0002552C <AmiBlitz3.ab3@8159>    MOVE.l (a7)+,leftsidetype
00025532 <AmiBlitz3.ab3@8160>    MOVE.b (a7)+,funcparloop
00025536 <AmiBlitz3.ab3@8161>   CMP.w #$2C,D0
0002553A <AmiBlitz3.ab3@8162>    BNE.w syntaxerr
0002553C <AmiBlitz3.ab3@8165>   MOVE.w D1,D2
0002553E <AmiBlitz3.ab3@8166>   LSR.w #8,D2
00025542 <AmiBlitz3.ab3@8167>   ANDI.w #$7,D2
00025544 <AmiBlitz3.ab3@8170>    CMP.b D2,D1
00025548 <AmiBlitz3.ab3@8171>    BCS.w fetchlibps__repsdone
0002554A <AmiBlitz3.ab3@8172>   SUB.b D2,D1
0002554E <AmiBlitz3.ab3@8173>   MOVEM.l D2/A2,-(A7)
00025550 <AmiBlitz3.ab3@8174>   MOVE.w D2,D0
00025556 <AmiBlitz3.ab3@8175>   MOVE.b funcparloop,-(a7)
0002555E <AmiBlitz3.ab3@8176>   MOVE.b #0,funcparloop
00025564 <AmiBlitz3.ab3@8177>   MOVE.l leftsidetype,-(a7)
0002556A <AmiBlitz3.ab3@8178>   MOVE.l rightsidetype,-(a7)
00025570 <AmiBlitz3.ab3@8179>   CLR.l leftsidetype
00025576 <AmiBlitz3.ab3@8180>   CLR.l rightsidetype
0002557C <AmiBlitz3.ab3@8181>   MOVE.b blitzparloop,-(a7)
00025584 <AmiBlitz3.ab3@8182>   MOVE.b #1,blitzparloop
00025588 <AmiBlitz3.ab3@8183>   BSR.w fetchpees4
0002558E <AmiBlitz3.ab3@8184>   MOVE.b (a7)+,blitzparloop
00025594 <AmiBlitz3.ab3@8185>   MOVE.l (a7)+,rightsidetype
0002559A <AmiBlitz3.ab3@8186>   MOVE.l (a7)+,leftsidetype
000255A0 <AmiBlitz3.ab3@8187>   MOVE.b (a7)+,funcparloop
000255A4 <AmiBlitz3.ab3@8188>   MOVEM.l (A7)+,D2/A2
000255AA <AmiBlitz3.ab3@8189>   ADDQ.w #1,numreps
000255AE <AmiBlitz3.ab3@8190> BRA.w fetchlibps__rloop
000255B4 <AmiBlitz3.ab3@8193>    MOVE.w numreps,D3
000255B8 <AmiBlitz3.ab3@8194>    BEQ.w syntaxerr
000255BA <AmiBlitz3.ab3@8195>   ADDA.w D2,A2
000255BE <AmiBlitz3.ab3@8196>   ANDI.w #$FF,D1
000255C2 <AmiBlitz3.ab3@8197>    BEQ.w fetchlibps__done
000255C6 <AmiBlitz3.ab3@8198>   CMP.w #$2C,D0
000255CA <AmiBlitz3.ab3@8199>    BNE.w syntaxerr
000255CC <AmiBlitz3.ab3@8202>    MOVE.w D1,D0
000255D0 <AmiBlitz3.ab3@8203>    BNE.w fetchpees2b
000255D2 <AmiBlitz3.ab3@8206> RTS
000255D8 <AmiBlitz3.ab3@8209>   MOVE.b funcparloop,-(a7)
000255DE <AmiBlitz3.ab3@8210>   MOVE.l leftsidetype,-(a7)
000255E4 <AmiBlitz3.ab3@8211>   MOVE.l rightsidetype,-(a7)
000255EA <AmiBlitz3.ab3@8212>   CLR.l leftsidetype
000255F0 <AmiBlitz3.ab3@8213>   CLR.l rightsidetype
000255F8 <AmiBlitz3.ab3@8214>   MOVE.b #0,funcparloop
000255FE <AmiBlitz3.ab3@8215>   MOVE.b blitzparloop,-(a7)
00025606 <AmiBlitz3.ab3@8216>   MOVE.b #1,blitzparloop
0002560A <AmiBlitz3.ab3@8217>   BSR.w fetchpees2
00025610 <AmiBlitz3.ab3@8218>   MOVE.b (a7)+,blitzparloop
00025616 <AmiBlitz3.ab3@8219>   MOVE.l (a7)+,rightsidetype
0002561C <AmiBlitz3.ab3@8220>   MOVE.l (a7)+,leftsidetype
00025622 <AmiBlitz3.ab3@8221>   MOVE.b (a7)+,funcparloop
00025624 <AmiBlitz3.ab3@8222> RTS
00025628 <AmiBlitz3.ab3@8226> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
0002562A <AmiBlitz3.ab3@8229> partostack:  Ds.w 1                                        ;pmode org source
0002562C <AmiBlitz3.ab3@8233>   MOVEQ.l #$01,D2
00025630 <AmiBlitz3.ab3@8234> BRA.w fetchpees3
00025632 <AmiBlitz3.ab3@8237>   MOVEQ.l #$00,D2
00025636 <AmiBlitz3.ab3@8240>   ANDI.w #$F,D0
0002563C <AmiBlitz3.ab3@8248>   CLR.w parnum
0002563E <AmiBlitz3.ab3@8249>   MOVE.w D1,-(A7)
00025642 <AmiBlitz3.ab3@8250>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025648 <AmiBlitz3.ab3@8251>   MOVE.w D2,partostack
0002564A <AmiBlitz3.ab3@8252>   MOVE.w D0,-(A7)
0002564E <AmiBlitz3.ab3@8253>   CMP.w #"@@",(a5)                                         ;was l15
00025652 <AmiBlitz3.ab3@8254>   BNE fetchpees__loop
00025658 <AmiBlitz3.ab3@8255>   TST.w ininclude                                          ;merge macrolines
0002565C <AmiBlitz3.ab3@8256>   BNE errorjoin
00025662 <AmiBlitz3.ab3@8257>        MOVEA.l sourceline,A5
00025664 <AmiBlitz3.ab3@8260>            MOVEA.l (A5),A5
0002566A <AmiBlitz3.ab3@8261>            MOVE.l a5,sourceline
0002566E <AmiBlitz3.ab3@8262>            LEA $9(A5),A5
00025674 <AmiBlitz3.ab3@8263>            ADDQ.l #1,linenumat
00025676 <AmiBlitz3.ab3@8267>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002567A <AmiBlitz3.ab3@8268>    BNE.w fetchpees__skip0
00025680 <AmiBlitz3.ab3@8269>   MOVE.w userp,D2                                          ;user selected type
00025682 <AmiBlitz3.ab3@8271>    MOVE.l A2,-(A7)
00025688 <AmiBlitz3.ab3@8272>    ADDQ.w #1,parnum
0002568E <AmiBlitz3.ab3@8273>    TST.b funccall
00025692 <AmiBlitz3.ab3@8274>    BEQ fetchpees__skip0_l1
0002569A <AmiBlitz3.ab3@8275>    CMP.w #6,parnum
0002569E <AmiBlitz3.ab3@8276>    BLE fetchpees__skip0_l1
000256A2 <AmiBlitz3.ab3@8277>    CMP.w #7,d2
000256A8 <AmiBlitz3.ab3@8283>    TST.b fpu
000256AC <AmiBlitz3.ab3@8284>    BEQ fetchpees__skip0_old
000256B2 <AmiBlitz3.ab3@8285>    TST.w regnumfunc
000256B6 <AmiBlitz3.ab3@8286>    BEQ fetchpees__skip0_old
000256BC <AmiBlitz3.ab3@8287>    CMP.w #$48e7,-4(a4)
000256C0 <AmiBlitz3.ab3@8288>    BNE fetchpees__skip0_old
000256C2 <AmiBlitz3.ab3@8289>    MOVEQ #0,d1
000256C8 <AmiBlitz3.ab3@8290>    MOVE.w regnum,d1
000256CE <AmiBlitz3.ab3@8291>    CMP regnumfunc,d1                                       ;fpu reg function save
000256D2 <AmiBlitz3.ab3@8292>    BGE fetchpees__skip0_old
000256D4 <AmiBlitz3.ab3@8293>    ASL.w #7,d1
000256D6 <AmiBlitz3.ab3@8294>    MOVE.l d0,-(a7)
000256DC <AmiBlitz3.ab3@8295>    MOVE.w regnumfunc,d0
000256E2 <AmiBlitz3.ab3@8296>    CLR.w regmask
000256E8 <AmiBlitz3.ab3@8298>    BSET d0,regmask
000256EA <AmiBlitz3.ab3@8299>    SUBQ #1,d0
000256EE <AmiBlitz3.ab3@8300>    BNE fetchpees__skip0_loop
000256F0 <AmiBlitz3.ab3@8301>     MOVEQ #0,d0
000256F6 <AmiBlitz3.ab3@8304>       BTST d0,regmask
000256FA <AmiBlitz3.ab3@8305>       BEQ fetchpees__skip0_noa7
000256FC <AmiBlitz3.ab3@8306>       MOVEQ #0,d1
000256FE <AmiBlitz3.ab3@8307>       MOVE.w d0,d1
00025700 <AmiBlitz3.ab3@8308>       SUBQ.w #1,d1
00025702 <AmiBlitz3.ab3@8309>       ASL #7,d1
00025708 <AmiBlitz3.ab3@8310>       OR.l #$f2277400,d1                                   ;fmove.d
0002570C <AmiBlitz3.ab3@8312>       BSR writelong
00025712 <AmiBlitz3.ab3@8314>       ADDQ.l #2,stacktrack
00025718 <AmiBlitz3.ab3@8315>       MOVE.l stacktrack,d1
0002571E <AmiBlitz3.ab3@8316>       CMP.l #180,d1
00025722 <AmiBlitz3.ab3@8317>       BGT conmemerr                                        ;formel too complex
00025724 <AmiBlitz3.ab3@8318>       MOVE.l a0,-(a7)
0002572A <AmiBlitz3.ab3@8319>       LEA fpustackbase,a0
00025732 <AmiBlitz3.ab3@8320>       MOVE.w regmask,0(a0,d1)
00025734 <AmiBlitz3.ab3@8321>       MOVE.l (a7)+,a0
00025736 <AmiBlitz3.ab3@8324>       ADDQ.w #1,d0
0002573C <AmiBlitz3.ab3@8325>       CMP.w regnumfunc,d0
00025740 <AmiBlitz3.ab3@8326>       BLE fetchpees__skip0_loop2
00025742 <AmiBlitz3.ab3@8329>       MOVE.l (a7)+,d0
00025748 <AmiBlitz3.ab3@8332>      MOVE.l currentfunccall,-(a7)
0002574E <AmiBlitz3.ab3@8333>      MOVE.w parnum,-(a7)
00025754 <AmiBlitz3.ab3@8334>      TST.l rightsidetype
00025758 <AmiBlitz3.ab3@8335>      BSR.w JL_0_6836
0002575E <AmiBlitz3.ab3@8336>      MOVE.w (a7)+,parnum
00025764 <AmiBlitz3.ab3@8338>    MOVE.l (a7)+,currentfunccall
0002576A <AmiBlitz3.ab3@8340>    TST.b typecheck                            ;typecheck for function call
0002576E <AmiBlitz3.ab3@8341>    BEQ 'notypecheck
00025774 <AmiBlitz3.ab3@8342>    TST.b notypecheck
00025778 <AmiBlitz3.ab3@8343>    BNE 'notypecheck
0002577E <AmiBlitz3.ab3@8344>    TST.b blitzparloop
00025782 <AmiBlitz3.ab3@8345>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002578C <AmiBlitz3.ab3@8346>    CMP.l #0,currentfunccall
00025790 <AmiBlitz3.ab3@8347>    BEQ 'isblitzlibcall
00025794 <AmiBlitz3.ab3@8348>    MOVEM.l a0/a1,-(a7)
0002579A <AmiBlitz3.ab3@8349>    MOVE.l currentfunccall,a0
000257A0 <AmiBlitz3.ab3@8350>    MOVE.w parnum,d1
000257A6 <AmiBlitz3.ab3@8351>    TST.b isconstantvalue
000257AA <AmiBlitz3.ab3@8352>    BEQ 'noconstant
000257B4 <AmiBlitz3.ab3@8353>    CMP.l #0,lastconstantvalue
000257B8 <AmiBlitz3.ab3@8354>    BEQ 'isnull
000257BC <AmiBlitz3.ab3@8356>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000257C2 <AmiBlitz3.ab3@8357>    CMP.l #0,a0
000257C6 <AmiBlitz3.ab3@8358>    BEQ 'notype
000257CE <AmiBlitz3.ab3@8359>    CMP.l #$100,4(a0)
000257D2 <AmiBlitz3.ab3@8360>    BLE 'notype
000257D8 <AmiBlitz3.ab3@8361>    MOVE.l lasttoken,d1
000257DC <AmiBlitz3.ab3@8362>    CMP.w #$b581,d1                   ; ok, when token for null
000257E0 <AmiBlitz3.ab3@8363>    BEQ 'isnull
000257E6 <AmiBlitz3.ab3@8364>    TST.l typetocast
000257EA <AmiBlitz3.ab3@8365>    BEQ 'nocast
000257F0 <AmiBlitz3.ab3@8366>    MOVE.l typetocast,a1
000257F4 <AmiBlitz3.ab3@8367>    BRA 'typecheck
000257FA <AmiBlitz3.ab3@8369>    MOVE.l rightsidetype,a1
00025800 <AmiBlitz3.ab3@8370>    CMP.l #0,a1
00025804 <AmiBlitz3.ab3@8371>    BEQ 'notype
0002580C <AmiBlitz3.ab3@8372> 'typecheck   CMP.l #$100,4(a1)
0002580E <AmiBlitz3.ab3@8374>    CMP.l a0,a1
00025812 <AmiBlitz3.ab3@8375>    BEQ 'ok
0002581A <AmiBlitz3.ab3@8377>    CMP.l #$100,4(a1)                 ; is a type here
0002581E <AmiBlitz3.ab3@8378>    BLE 'error
00025822 <AmiBlitz3.ab3@8379>    MOVE.l 4(a1),a1                   ; load the address of type.
00025826 <AmiBlitz3.ab3@8380>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0002582A <AmiBlitz3.ab3@8381>    BEQ 'ok
00025830 <AmiBlitz3.ab3@8382> 'error: JMP   error_convert_types    ; for syntax 4
00025836 <AmiBlitz3.ab3@8386>    CLR.l typetocast
0002583A <AmiBlitz3.ab3@8387>    MOVEM.l (a7)+,a0/a1
00025840 <AmiBlitz3.ab3@8391>    CLR.l lastfunction
00025846 <AmiBlitz3.ab3@8392>    TST.b fpu
0002584A <AmiBlitz3.ab3@8393>    BEQ fetchpees__skip0_noprint
0002584C <AmiBlitz3.ab3@8394>   MOVE.l (a7),a2
0002584E <AmiBlitz3.ab3@8395>   ADDQ.l #1,a2
00025852 <AmiBlitz3.ab3@8396>    CMP.b #5,d2
00025856 <AmiBlitz3.ab3@8397>   BNE fetchpees__skip0_noprint
0002585C <AmiBlitz3.ab3@8398>   CMP.b #$5d,24(a2)
00025860 <AmiBlitz3.ab3@8399>   BNE fetchpees__skip0_noprint
00025866 <AmiBlitz3.ab3@8400>   CMP.b #$81,25(a2)
0002586A <AmiBlitz3.ab3@8401>   BLT fetchpees__skip0_noprint
00025870 <AmiBlitz3.ab3@8402>   CMP.b #$86,25(a2)
00025874 <AmiBlitz3.ab3@8403>   BEQ fetchpees__skip0_ok
0002587A <AmiBlitz3.ab3@8404>   CMP.b #$87,25(a2)
0002587E <AmiBlitz3.ab3@8405>   BEQ fetchpees__skip0_ok
00025884 <AmiBlitz3.ab3@8406>   CMP.b #$88,25(a2)
00025888 <AmiBlitz3.ab3@8407>   BEQ fetchpees__skip0_ok
0002588E <AmiBlitz3.ab3@8408>   CMP.b #$83,25(a2)
00025892 <AmiBlitz3.ab3@8409>   BGT fetchpees__skip0_noprint
00025898 <AmiBlitz3.ab3@8412>   MOVE.l destpointer,a4
0002589E <AmiBlitz3.ab3@8413>   CMP.w #$2f00,-2(a4)
000258A2 <AmiBlitz3.ab3@8414>   BNE fetchpees__skip0_noprint
000258A8 <AmiBlitz3.ab3@8415>   SUBQ.l #2,destpointer
000258AE <AmiBlitz3.ab3@8417>   MOVE.l #$f2277400,d1
000258B2 <AmiBlitz3.ab3@8418>   BSR writelong                                            ;fmove.d fp0,-(a7)
000258B8 <AmiBlitz3.ab3@8419>   ADDQ #4,a2offset
000258BE <AmiBlitz3.ab3@8437>   CLR.b optistring
000258C0 <AmiBlitz3.ab3@8438>   MOVEA.l (A7)+,A2
000258C4 <AmiBlitz3.ab3@8439>    CMP.w #"@",d0
000258C8 <AmiBlitz3.ab3@8440>   BNE fetchpees__skip0_l10
000258CC <AmiBlitz3.ab3@8441>    CMP.b #"@",(a5)
000258D0 <AmiBlitz3.ab3@8442>   BNE fetchpees__skip0_l10
000258D6 <AmiBlitz3.ab3@8443>   TST.w ininclude
000258DA <AmiBlitz3.ab3@8444>   BNE errorjoin
000258E0 <AmiBlitz3.ab3@8445>   MOVEA.l sourceline,A5
000258E2 <AmiBlitz3.ab3@8446>            MOVEA.l (A5),A5
000258E8 <AmiBlitz3.ab3@8447>            MOVE.l a5,sourceline
000258EE <AmiBlitz3.ab3@8448>            ADDQ.l #1,linenumat
000258F2 <AmiBlitz3.ab3@8449>            LEA $9(A5),A5
000258F4 <AmiBlitz3.ab3@8450>            MOVEQ #0,d0
000258F8 <AmiBlitz3.ab3@8451>            BSR get1bytemain
000258FC <AmiBlitz3.ab3@8454>    CMP.b #32,(a5)+ ;for space after a ,
00025900 <AmiBlitz3.ab3@8455>    BEQ fetchpees__skip0_l10:
00025902 <AmiBlitz3.ab3@8456>    SUBQ.l #1,a5
00025906 <AmiBlitz3.ab3@8458>    CMP.w #"@@",(a5)                                        ;if merge
0002590A <AmiBlitz3.ab3@8459>    BNE fetchpees__skip0_l15
0002590E <AmiBlitz3.ab3@8460>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00025914 <AmiBlitz3.ab3@8461>    JSR mergeline
00025918 <AmiBlitz3.ab3@8462>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
0002591A <AmiBlitz3.ab3@8482>       SUBQ.w #1,(A7)
0002591E <AmiBlitz3.ab3@8483>    BEQ.w fetchpees__done
00025922 <AmiBlitz3.ab3@8485>     CMP.w #$2C,D0
00025926 <AmiBlitz3.ab3@8487>    BNE overloadfunc
0002592A <AmiBlitz3.ab3@8488> BRA.w fetchpees__loop
0002592C <AmiBlitz3.ab3@8491>   ADDQ.w #2,A7
00025932 <AmiBlitz3.ab3@8492>   MOVE.w (A7)+,partostack
00025934 <AmiBlitz3.ab3@8493>   MOVE.w (A7)+,D1
0002593A <AmiBlitz3.ab3@8494>   CLR.b isconstantvalue
00025944 <AmiBlitz3.ab3@8495>   MOVE.l currentfunccall,lastfunction
0002594A <AmiBlitz3.ab3@8496>   CLR.b funccall
00025950 <AmiBlitz3.ab3@8497>   CLR.l currentfunccall
00025952 <AmiBlitz3.ab3@8498> RTS
00025958 <AmiBlitz3.ab3@8502>   CLR.b funccall
0002595E <AmiBlitz3.ab3@8503>   MOVE.w regnum,d1
00025964 <AmiBlitz3.ab3@8504>   MOVE.l currentfunccall,a4
00025968 <AmiBlitz3.ab3@8505>   CMP.b $20(a4),d1                                         ;increase if more pars
0002596C <AmiBlitz3.ab3@8506>   BLT notparerr
0002596E <AmiBlitz3.ab3@8509>   MOVE.b (a2)+,d2
00025976 <AmiBlitz3.ab3@8510>   ADD.w #1,parnum
0002597C <AmiBlitz3.ab3@8511>   TST.b fpu
00025980 <AmiBlitz3.ab3@8512>   BEQ 'nofpu
00025984 <AmiBlitz3.ab3@8513>   CMP.b #5,d2
00025988 <AmiBlitz3.ab3@8514>   BNE 'nofpu
0002598A <AmiBlitz3.ab3@8515>   MOVEQ #0,d1
00025990 <AmiBlitz3.ab3@8516>   MOVE.w regnum,d1
00025998 <AmiBlitz3.ab3@8517>   CMP.w #6,regnum
0002599C <AmiBlitz3.ab3@8518>   BLT 'nostack2
000259A0 <AmiBlitz3.ab3@8523>   MOVE.w #$2c3c,d1
000259A4 <AmiBlitz3.ab3@8524>   BSR writeword
000259AA <AmiBlitz3.ab3@8525>   MOVE.l #$bf800000,d1
000259AE <AmiBlitz3.ab3@8526>   BSR writelong
000259B2 <AmiBlitz3.ab3@8527>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000259B8 <AmiBlitz3.ab3@8528>   ADD.w parnum,d1
000259BE <AmiBlitz3.ab3@8529>   JSR Atokejsr
000259C4 <AmiBlitz3.ab3@8530>   TST.w dontwrite
000259C8 <AmiBlitz3.ab3@8531>   BNE 'l1
000259CE <AmiBlitz3.ab3@8532>   MOVE.l data1start,d1
000259D4 <AmiBlitz3.ab3@8533>   MOVE.l destpointer,a4
000259D8 <AmiBlitz3.ab3@8534>   ADD.l d1,-4(a4)
000259DE <AmiBlitz3.ab3@8535>   MOVE.l destpointer,d1
000259E0 <AmiBlitz3.ab3@8536>   SUBQ.l #4,d1
000259E6 <AmiBlitz3.ab3@8537>   SUB.l destbufferstart,d1
000259E8 <AmiBlitz3.ab3@8538>   MOVE.l d2,-(a7)
000259EA <AmiBlitz3.ab3@8539>   MOVE.l d1,d2
000259F0 <AmiBlitz3.ab3@8540>   JSR addhunkoffset
000259F2 <AmiBlitz3.ab3@8541>   MOVE.l (a7)+,d2
000259F6 <AmiBlitz3.ab3@8542> BRA 'l1
000259F8 <AmiBlitz3.ab3@8545>   ASL.l #7,d1
000259FE <AmiBlitz3.ab3@8546>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00025A02 <AmiBlitz3.ab3@8547>   BSR writelong
00025A04 <AmiBlitz3.ab3@8548>   MOVEQ #-1,d1                                             ;-1
00025A08 <AmiBlitz3.ab3@8549>   BSR writeword
00025A0C <AmiBlitz3.ab3@8550> BRA 'l1
00025A12 <AmiBlitz3.ab3@8553>   MOVE.w regnum,d1
00025A1A <AmiBlitz3.ab3@8554>   CMP.w #6,regnum
00025A1E <AmiBlitz3.ab3@8555>   BLT 'nostack
00025A22 <AmiBlitz3.ab3@8560>   CMP.b #2,d2
00025A26 <AmiBlitz3.ab3@8561>   BGT 'nw
00025A2A <AmiBlitz3.ab3@8562> BRA 'nos
00025A2E <AmiBlitz3.ab3@8571>   CMP.w #7,d2
00025A32 <AmiBlitz3.ab3@8572>   BNE 'nos
00025A38 <AmiBlitz3.ab3@8573>   ADDQ #4,a2offset
00025A3E <AmiBlitz3.ab3@8575>     MOVE.l #$48780000,d1
00025A42 <AmiBlitz3.ab3@8576>     BSR writelong
00025A48 <AmiBlitz3.ab3@8577>     ADDQ.w #4,a2offset
00025A4C <AmiBlitz3.ab3@8578>     MOVE.w #$2f3c,d1
00025A50 <AmiBlitz3.ab3@8579>     BSR writeword
00025A56 <AmiBlitz3.ab3@8580>     MOVE.l #-1,d1
00025A5A <AmiBlitz3.ab3@8581>     BSR writelong
00025A5E <AmiBlitz3.ab3@8582>   BRA 'l1
00025A62 <AmiBlitz3.ab3@8586>   CMP.b #4,d2
00025A66 <AmiBlitz3.ab3@8587>       BNE 'noq
00025A6A <AmiBlitz3.ab3@8588>       MOVE.w #$2c3c,d1
00025A6E <AmiBlitz3.ab3@8589>       BSR writeword
00025A74 <AmiBlitz3.ab3@8590>       MOVE.l #$ffff0000,d1
00025A78 <AmiBlitz3.ab3@8591>       BSR writelong
00025A7C <AmiBlitz3.ab3@8592> BRA 'noq2
00025A80 <AmiBlitz3.ab3@8595>      CMP.b #5,d2
00025A84 <AmiBlitz3.ab3@8596>      BNE 'nof
00025A88 <AmiBlitz3.ab3@8597>       MOVE.w #$2c3c,d1
00025A8C <AmiBlitz3.ab3@8598>       BSR writeword
00025A92 <AmiBlitz3.ab3@8599>       MOVE.l #$800000c1,d1
00025A96 <AmiBlitz3.ab3@8600>       BSR writelong
00025A9A <AmiBlitz3.ab3@8601> BRA 'noq2
00025A9E <AmiBlitz3.ab3@8604>   MOVE.w #$7cff,d1
00025AA2 <AmiBlitz3.ab3@8605>   BSR writeword
00025AA6 <AmiBlitz3.ab3@8608>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025AAC <AmiBlitz3.ab3@8609>   ADD.w parnum,d1
00025AB2 <AmiBlitz3.ab3@8610>   JSR Atokejsr
00025AB8 <AmiBlitz3.ab3@8611>    TST.w dontwrite
00025ABC <AmiBlitz3.ab3@8612>    BNE 'l1
00025AC2 <AmiBlitz3.ab3@8613>    MOVE.l data1start,d1
00025AC8 <AmiBlitz3.ab3@8614>    MOVE.l destpointer,a4
00025ACC <AmiBlitz3.ab3@8615>    ADD.l d1,-4(a4)
00025AD2 <AmiBlitz3.ab3@8616>    MOVE.l destpointer,d1
00025AD4 <AmiBlitz3.ab3@8617>    SUBQ.l #4,d1
00025ADA <AmiBlitz3.ab3@8618>    SUB.l destbufferstart,d1
00025ADC <AmiBlitz3.ab3@8619>    MOVE.l d2,-(a7)
00025ADE <AmiBlitz3.ab3@8620>    MOVE.l d1,d2
00025AE4 <AmiBlitz3.ab3@8621>    JSR addhunkoffset
00025AE6 <AmiBlitz3.ab3@8622>    MOVE.l (a7)+,d2
00025AEA <AmiBlitz3.ab3@8623> BRA 'l1
00025AEC <AmiBlitz3.ab3@8626>   ASL.l #8,d1
00025AEE <AmiBlitz3.ab3@8627>   ASL.l #1,d1
00025AF4 <AmiBlitz3.ab3@8628>   OR.l #$203c,d1                                           ;-1
00025AF8 <AmiBlitz3.ab3@8629>   BSR writeword
00025AFE <AmiBlitz3.ab3@8630>   MOVE.l #-1,d1
00025B02 <AmiBlitz3.ab3@8631>   CMP.b #4,d2
00025B06 <AmiBlitz3.ab3@8632>   BNE 'nq1
00025B0C <AmiBlitz3.ab3@8633>   MOVE.l #$ffff0000,d1
00025B10 <AmiBlitz3.ab3@8636>   CMP.b #5,d2
00025B14 <AmiBlitz3.ab3@8637>   BNE 'nof2
00025B1A <AmiBlitz3.ab3@8638>   TST.b fpu
00025B1E <AmiBlitz3.ab3@8639>   BNE 'nof2
00025B24 <AmiBlitz3.ab3@8640>   MOVE.l #$800000c1,d1
00025B28 <AmiBlitz3.ab3@8643>    BSR writelong
00025B2C <AmiBlitz3.ab3@8644>    CMP.b #7,d2
00025B30 <AmiBlitz3.ab3@8645>    BNE 'l1
00025B36 <AmiBlitz3.ab3@8647>      MOVE.l #$48780000,d1
00025B3A <AmiBlitz3.ab3@8648>      BSR writelong
00025B40 <AmiBlitz3.ab3@8650>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00025B46 <AmiBlitz3.ab3@8651>    MOVE.l #$594f,d1                                        ; subq #4,a7
00025B4A <AmiBlitz3.ab3@8652>    BSR writeword
00025B4C <AmiBlitz3.ab3@8655>    SUBQ.w #1,(A7)
00025B50 <AmiBlitz3.ab3@8656>    BEQ.w fetchpees__done
00025B56 <AmiBlitz3.ab3@8657>    ADDQ.w #1,regnum
00025B5A <AmiBlitz3.ab3@8658> BRA 'ol2
00025B5C <AmiBlitz3.ab3@8661>    MOVE.w D2,D1
00025B60 <AmiBlitz3.ab3@8662>    ANDI.w #$40,D1
00025B66 <AmiBlitz3.ab3@8663>    MOVE.b D1,partostack
00025B68 <AmiBlitz3.ab3@8664>    TST.b D2
00025B6C <AmiBlitz3.ab3@8665>     BMI.w handlevara
00025B70 <AmiBlitz3.ab3@8666>    BTST #$5,D2
00025B74 <AmiBlitz3.ab3@8667>     BNE.w handlearr
00025B7A <AmiBlitz3.ab3@8668>     MOVE.w regnumstore,-(a7)
00025B80 <AmiBlitz3.ab3@8669>     MOVE.w tempregnum,-(a7)
00025B86 <AmiBlitz3.ab3@8670>     MOVE.w parnum,-(a7)
00025B8A <AmiBlitz3.ab3@8671>     BSR.w getap                                        ;recursive entry
00025B90 <AmiBlitz3.ab3@8672>     MOVE.w (a7)+,parnum
00025B96 <AmiBlitz3.ab3@8673>     MOVE.w (a7)+,tempregnum
00025B9C <AmiBlitz3.ab3@8674>     MOVE.w (a7)+,regnumstore
00025BA0 <AmiBlitz3.ab3@8677>     MOVE.w partostack(PC),D1
00025BA4 <AmiBlitz3.ab3@8678>     BEQ.w JL_0_6886
00025BAA <AmiBlitz3.ab3@8681>    ADDQ.w #4,a2offset
00025BB0 <AmiBlitz3.ab3@8684>    MOVE.w pushdn,D1
00025BB6 <AmiBlitz3.ab3@8685>    OR.w regnum,D1
00025BBA <AmiBlitz3.ab3@8686>    CMP.w #$3,D2
00025BBE <AmiBlitz3.ab3@8687>     BCC.w JL_0_6880
00025BC4 <AmiBlitz3.ab3@8688>    SUBQ.w #2,a2offset
00025BC8 <AmiBlitz3.ab3@8689>    ORI.w #$1000,D1
00025BCC <AmiBlitz3.ab3@8690>    BSR.w writeword
00025BCE <AmiBlitz3.ab3@8691> RTS
00025BD2 <AmiBlitz3.ab3@8694>   CMP.b #7,d2
00025BD6 <AmiBlitz3.ab3@8695>    BNE 'l10
00025BDE <AmiBlitz3.ab3@8696>    CMP.b #2,optistring
00025BE4 <AmiBlitz3.ab3@8700>   TST.b iee
00025BE8 <AmiBlitz3.ab3@8701>   BEQ 'old
00025BEC <AmiBlitz3.ab3@8702>   CMP.b #5,d2
00025BF0 <AmiBlitz3.ab3@8703>   BNE 'old
00025BF4 <AmiBlitz3.ab3@8706>   BSR.w writeword                                          ;write val to stack
00025BF6 <AmiBlitz3.ab3@8707> RTS
00025BFC <AmiBlitz3.ab3@8710>   SUBQ.w #4,a2offset
00025BFE <AmiBlitz3.ab3@8711> RTS
00025C04 <AmiBlitz3.ab3@8714>   ADDQ.w #1,regnum
00025C06 <AmiBlitz3.ab3@8715> RTS
00025C08 <AmiBlitz3.ab3@8719>   MOVEQ.l #$03,D2
00025C0C <AmiBlitz3.ab3@8720> BRA.w JL_0_6854
00025C10 <AmiBlitz3.ab3@8724>   ANDI.w #$7,D2
00025C12 <AmiBlitz3.ab3@8725>   MOVE.w D2,-(A7)
00025C16 <AmiBlitz3.ab3@8726>    BSR.w JL_0_A916
00025C1A <AmiBlitz3.ab3@8727>   CMP.b #$7,D2                                             ;ignore pnt to $
00025C1E <AmiBlitz3.ab3@8728>    BEQ.w JL_0_68C0
00025C22 <AmiBlitz3.ab3@8729>   BTST #$E,D2
00025C26 <AmiBlitz3.ab3@8730>    BEQ.w JL_0_68B6
00025C2A <AmiBlitz3.ab3@8731>   MOVE.b #$3,D2                                            ;pointer to long
00025C2E <AmiBlitz3.ab3@8732> BRA.w JL_0_68C0
00025C30 <AmiBlitz3.ab3@8735>    TST.b D2
00025C34 <AmiBlitz3.ab3@8736>    BNE.w JL_0_68C0
00025C38 <AmiBlitz3.ab3@8737>   MOVE.b #$3,D2
00025C3A <AmiBlitz3.ab3@8740>   MOVE.w (A7)+,D3
00025C3C <AmiBlitz3.ab3@8741>   TST.b D3
00025C40 <AmiBlitz3.ab3@8742>    BEQ.w JL_0_68D2
00025C42 <AmiBlitz3.ab3@8743>   CMP.b D2,D3
00025C46 <AmiBlitz3.ab3@8744>    BEQ.w putalp
00025C4A <AmiBlitz3.ab3@8745> BRA.w mismatcherr
00025C50 <AmiBlitz3.ab3@8748>   ADDQ.w #2,a2offset
00025C54 <AmiBlitz3.ab3@8749>   MOVE.w ptype(PC),D1
00025C58 <AmiBlitz3.ab3@8750>    BSR.w writeword
00025C5A <AmiBlitz3.ab3@8751>   MOVEQ.l #$00,D1
00025C5C <AmiBlitz3.ab3@8752>   MOVE.b D2,D1
00025C60 <AmiBlitz3.ab3@8753>    BSR.w writeword
00025C64 <AmiBlitz3.ab3@8754> BRA.w putalp
00025C66 <AmiBlitz3.ab3@8757>    MOVE.w D2,-(A7)
00025C6A <AmiBlitz3.ab3@8758>    BSR.w JL_0_694E
00025C70 <AmiBlitz3.ab3@8759>   BTST #$4,$1(A7)
00025C74 <AmiBlitz3.ab3@8760>    BEQ.w JL_0_6900
00025C78 <AmiBlitz3.ab3@8761>    BSR.w JL_0_699A
00025C7E <AmiBlitz3.ab3@8764>    BTST #$3,$1(A7)
00025C82 <AmiBlitz3.ab3@8765>    BEQ.w JL_0_690E
00025C86 <AmiBlitz3.ab3@8766>    BSR.w sendtype
00025C88 <AmiBlitz3.ab3@8769>    MOVE.w (A7)+,D2
00025C8C <AmiBlitz3.ab3@8770> BRA.w get1bytemain
00025C92 <AmiBlitz3.ab3@8773>   MOVE.w regnum,D1
00025C94 <AmiBlitz3.ab3@8774>   LSL.w #8,D1
00025C96 <AmiBlitz3.ab3@8775>   LSL.w #1,D1
00025C9A <AmiBlitz3.ab3@8776>   ORI.w #$7000,D1
00025CA0 <AmiBlitz3.ab3@8777>   BTST #$0,$7(A3)
00025CA4 <AmiBlitz3.ab3@8778>    BNE.w JL_0_6946                                         ;A Pointer
00025CAC <AmiBlitz3.ab3@8779>   CMPI.l #$100,$4(A2)
00025CB0 <AmiBlitz3.ab3@8780>    BCC.w arrerr1                                           ;illegal type to send
00025CB4 <AmiBlitz3.ab3@8781>   MOVE.b $7(A2),D1
00025CB8 <AmiBlitz3.ab3@8784>   BSR.w writeword                                          ;moveq #type,d regat
00025CBA <AmiBlitz3.ab3@8785>   MOVEQ.l #$02,D2                                          ;just a word.
00025CBE <AmiBlitz3.ab3@8786> BRA.w JL_0_685C
00025CC2 <AmiBlitz3.ab3@8789>   MOVE.b #$3,D1
00025CC6 <AmiBlitz3.ab3@8790> BRA.w JL_0_693C
00025CCA <AmiBlitz3.ab3@8794>    BSR.w get1bytemain                                      ;write array paramter code
00025CCE <AmiBlitz3.ab3@8795>    BSR.w getparameter
00025CD6 <AmiBlitz3.ab3@8796>   BTST #$1,flagmask+1
00025CDA <AmiBlitz3.ab3@8797>    BEQ.w syntaxerr
00025CDE <AmiBlitz3.ab3@8798>    BSR.w JL_0_8E3C
00025CE2 <AmiBlitz3.ab3@8799>    BSR.w get1bytemain
00025CE6 <AmiBlitz3.ab3@8800>   CMP.w #$29,D0                                            ;we just want a() or whatever
00025CEA <AmiBlitz3.ab3@8801>    BNE.w syntaxerr
00025CF0 <AmiBlitz3.ab3@8802>   MOVE.w notshared,D1
00025CF4 <AmiBlitz3.ab3@8803>    BNE.w noarrayerr
00025CFA <AmiBlitz3.ab3@8804>   MOVE.w regnum,D1
00025CFC <AmiBlitz3.ab3@8805>   LSL.w #8,D1
00025CFE <AmiBlitz3.ab3@8806>   LSL.w #1,D1
00025D02 <AmiBlitz3.ab3@8807>   OR.w fbase(PC),D1
00025D08 <AmiBlitz3.ab3@8808>    TST.b varmode
00025D0C <AmiBlitz3.ab3@8809>    BEQ 'l1
00025D10 <AmiBlitz3.ab3@8810>    BCLR #0,d1
00025D14 <AmiBlitz3.ab3@8813>    BSR.w writeword
00025D18 <AmiBlitz3.ab3@8814>   MOVE.w $4(A3),D1
00025D1C <AmiBlitz3.ab3@8815>    BSR.w writeword
00025D20 <AmiBlitz3.ab3@8816> BRA.w putalp
00025D26 <AmiBlitz3.ab3@8820>   MOVE.w regnum,D1
00025D28 <AmiBlitz3.ab3@8821>   LSL.w #8,D1
00025D2A <AmiBlitz3.ab3@8822>   LSL.w #1,D1
00025D2E <AmiBlitz3.ab3@8823>   OR.w fbase(PC),D1
00025D34 <AmiBlitz3.ab3@8824>    TST.b varmode
00025D38 <AmiBlitz3.ab3@8825>    BEQ 'l1
00025D3C <AmiBlitz3.ab3@8826>    BCLR #0,d1
00025D40 <AmiBlitz3.ab3@8829>    BSR.w writeword
00025D44 <AmiBlitz3.ab3@8830>   MOVE.w $8(A3),D1
00025D46 <AmiBlitz3.ab3@8831>   LSL.w #2,D1
00025D4C <AmiBlitz3.ab3@8832>   MOVE.w varmode,D2
00025D50 <AmiBlitz3.ab3@8833>    BEQ.w JL_0_69BE
00025D52 <AmiBlitz3.ab3@8834>   NEG.w D1
00025D56 <AmiBlitz3.ab3@8837>    ADD.w $4(A3),D1
00025D5A <AmiBlitz3.ab3@8838>    BSR.w writeword
00025D60 <AmiBlitz3.ab3@8839>   MOVE.w regnum,D1
00025D62 <AmiBlitz3.ab3@8840>   LSL.w #8,D1
00025D64 <AmiBlitz3.ab3@8841>   LSL.w #1,D1
00025D68 <AmiBlitz3.ab3@8842>   MOVE.w partostack(PC),D2
00025D6C <AmiBlitz3.ab3@8843>    BNE.w JL_0_69F4
00025D74 <AmiBlitz3.ab3@8844>   CMPI.w #$7,regnum
00025D78 <AmiBlitz3.ab3@8845>    BCC.w JL_0_69F4
00025D7C <AmiBlitz3.ab3@8846>   OR.w pushlast(PC),D1
00025D82 <AmiBlitz3.ab3@8847>   MOVE.w regnum,D2
00025D84 <AmiBlitz3.ab3@8848>   SUBQ.w #1,D2
00025D86 <AmiBlitz3.ab3@8849>   OR.w D2,D1
00025D8A <AmiBlitz3.ab3@8850> BRA.w JL_0_69F8
00025D8E <AmiBlitz3.ab3@8853>   OR.w pushadd(PC),D1
00025D92 <AmiBlitz3.ab3@8856>   BSR.w writeword
00025D9A <AmiBlitz3.ab3@8857>   MOVE.b #$1,partostack
00025D9E <AmiBlitz3.ab3@8858> BRA.w putalp
00025DA2 <AmiBlitz3.ab3@8862> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00025DA4 <AmiBlitz3.ab3@8863> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00025DA6 <AmiBlitz3.ab3@8864> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00025DAA <AmiBlitz3.ab3@8869>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00025DAE <AmiBlitz3.ab3@8870>    BEQ.w evalu2
00025DB2 <AmiBlitz3.ab3@8871> BRA.w eval
00025DB8 <AmiBlitz3.ab3@8875>   MOVEA.l libpointer,A1
00025DBC <AmiBlitz3.ab3@8878>    CMPA.w #$0,A1
00025DC0 <AmiBlitz3.ab3@8879>    BEQ.w resetlibs__done
00025DC6 <AmiBlitz3.ab3@8880>   MOVE.w #-1,$A(A1)
00025DCC <AmiBlitz3.ab3@8881>   BCLR #$7,$C(A1)
00025DCE <AmiBlitz3.ab3@8882>   MOVEA.l (A1),A1
00025DD2 <AmiBlitz3.ab3@8883> BRA.w resetlibs__loop
00025DD4 <AmiBlitz3.ab3@8886> RTS
00025DD8 <AmiBlitz3.ab3@8890>   MOVE.w #$FFFE,D1
00025DDC <AmiBlitz3.ab3@8893>    BSR.w JL_0_6F38
00025DE2 <AmiBlitz3.ab3@8896>   TST.w cfetchmode
00025DE6 <AmiBlitz3.ab3@8897>    BEQ.w uselib3__noconst
00025DEC <AmiBlitz3.ab3@8898>   BTST #$6,$C(A1)
00025DF0 <AmiBlitz3.ab3@8899>    BNE.w uselib3__constok
00025DF4 <AmiBlitz3.ab3@8900> BRA.w badconerr                                            ;Can't use this Library!
00025DF6 <AmiBlitz3.ab3@8903> RTS
00025DFC <AmiBlitz3.ab3@8906>    BSET #$7,$C(A1)
00025E00 <AmiBlitz3.ab3@8907>    BNE.w JL_0_6C74                                         ;already done....
00025E06 <AmiBlitz3.ab3@8908>    CMPI.w #-1,$A(A1)
00025E0A <AmiBlitz3.ab3@8909>    BNE.w JL_0_6C74                                         ;something already here
00025E10 <AmiBlitz3.ab3@8913>    TST.w dirmode
00025E14 <AmiBlitz3.ab3@8914>    BEQ.b JL_0_6A86
00025E1A <AmiBlitz3.ab3@8915>    TST.b exdebug
00025E1E <AmiBlitz3.ab3@8916>    BEQ 'l1
00025E22 <AmiBlitz3.ab3@8917> BRA.b JL_0_6A86
00025E28 <AmiBlitz3.ab3@8920>   BCLR #$7,$C(A1)
00025E2C <AmiBlitz3.ab3@8921> BRA.w dirliberr
00025E32 <AmiBlitz3.ab3@8924>   MOVE.b debugmode,-(a7)
00025E36 <AmiBlitz3.ab3@8925>   MOVEM.l D1/A0/A2,-(A7)
00025E3E <AmiBlitz3.ab3@8931>   BTST #$7,use_debugger
00025E42 <AmiBlitz3.ab3@8932>   BNE 'debugon
00025E44 <AmiBlitz3.ab3@8933>   CLR.w D1
00025E48 <AmiBlitz3.ab3@8934> BRA.b 'debugoff
00025E4A <AmiBlitz3.ab3@8937>   SNE D1
00025E50 <AmiBlitz3.ab3@8940>   MOVE.b d1,debugmode
00025E52 <AmiBlitz3.ab3@8944>   MOVEA.l A1,A0
00025E56 <AmiBlitz3.ab3@8945>   ADDA.l $12(A1),A0
00025E5A <AmiBlitz3.ab3@8946>   TST.w -$2(A0)
00025E5E <AmiBlitz3.ab3@8947>    BEQ.w JL_0_6AD2
00025E62 <AmiBlitz3.ab3@8948>   MOVEM.l A0-A1,-(A7)
00025E66 <AmiBlitz3.ab3@8949>   MOVE.w #$FB4F,D1
00025E6A <AmiBlitz3.ab3@8950>    BSR.w uselib
00025E6E <AmiBlitz3.ab3@8951>   MOVEM.l (A7)+,A0-A1
00025E74 <AmiBlitz3.ab3@8952>   ADDQ.w #1,globalvarpointer
00025E7C <AmiBlitz3.ab3@8953>   BCLR #$0,globalvarpointer+1
00025E84 <AmiBlitz3.ab3@8954>   MOVE.w globalvarpointer,-$6(A0)
00025E8A <AmiBlitz3.ab3@8955>   ADDQ.w #4,globalvarpointer
00025E8E <AmiBlitz3.ab3@8956>   TST.l -$E(A0)
00025E92 <AmiBlitz3.ab3@8957>    BEQ.w JL_0_6AD2
00025E98 <AmiBlitz3.ab3@8958>   ADDQ.w #4,globalvarpointer
00025EA0 <AmiBlitz3.ab3@8961>   MOVE.l libend,$28(A1)
00025EA2 <AmiBlitz3.ab3@8962>   MOVEA.l A1,A0
00025EA6 <AmiBlitz3.ab3@8963>   ADDA.l $12(A1),A0
00025EA8 <AmiBlitz3.ab3@8964>   MOVE.l A1,D1
00025EAC <AmiBlitz3.ab3@8965>   ADD.l $6(A1),D1
00025EB0 <AmiBlitz3.ab3@8966>   TST.l $2C(A1)
00025EB4 <AmiBlitz3.ab3@8967>    BEQ.w JL_0_6AFE
00025EBA <AmiBlitz3.ab3@8969>   TST.b debugmode
00025EBE <AmiBlitz3.ab3@8970>    BNE.w JL_0_6AFE
00025EC0 <AmiBlitz3.ab3@8971>   MOVE.l A1,D1
00025EC4 <AmiBlitz3.ab3@8972>   ADD.l $2C(A1),D1
00025ECA <AmiBlitz3.ab3@8975>   MOVEA.l libend,A2
00025ED0 <AmiBlitz3.ab3@8978>   CMPA.l data1start,A2
00025ED4 <AmiBlitz3.ab3@8979>    BCS.w JL_0_6B24
00025EDC <AmiBlitz3.ab3@8980>   MOVE.w #$FFFF,dontwrite
00025EDE <AmiBlitz3.ab3@8983>   ADDQ.w #2,A0
00025EE0 <AmiBlitz3.ab3@8984>   ADDQ.w #2,A2
00025EE2 <AmiBlitz3.ab3@8985>   CMPA.l D1,A0
00025EE6 <AmiBlitz3.ab3@8986>    BCS.w JL_0_6B16
00025EEA <AmiBlitz3.ab3@8987> BRA.w JL_0_6B2C
00025EEC <AmiBlitz3.ab3@8990>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00025EEE <AmiBlitz3.ab3@8991>   CMPA.l D1,A0
00025EF2 <AmiBlitz3.ab3@8992>    BCS.w JL_0_6B04
00025EF8 <AmiBlitz3.ab3@8995>   MOVE.l A2,libend
00025EFC <AmiBlitz3.ab3@8996>   MOVE.l $20(A1),D1
00025F00 <AmiBlitz3.ab3@8997>    BEQ.w JL_0_6BB8
00025F04 <AmiBlitz3.ab3@8998>   MOVEM.l D0/D2-D3,-(A7)
00025F08 <AmiBlitz3.ab3@8999>   MOVEA.l $24(A1),A0
00025F0A <AmiBlitz3.ab3@9000>   MOVEQ.l #$00,D3
00025F0C <AmiBlitz3.ab3@9003>   MOVE.l (A0)+,D2
00025F10 <AmiBlitz3.ab3@9004>   TST.l $2C(A1)
00025F14 <AmiBlitz3.ab3@9005>    BEQ.w JL_0_6B60
00025F1A <AmiBlitz3.ab3@9006>   TST.b debugmode
00025F1E <AmiBlitz3.ab3@9007>    BNE.w JL_0_6B60
00025F22 <AmiBlitz3.ab3@9008>   CMP.l $2C(A1),D2
00025F26 <AmiBlitz3.ab3@9009>    BCC.w JL_0_6BA0
00025F2A <AmiBlitz3.ab3@9012>   TST.w $0(A1,D2.L)
00025F2E <AmiBlitz3.ab3@9013>    BPL.w JL_0_6B72
00025F30 <AmiBlitz3.ab3@9014>   TST.l D3
00025F34 <AmiBlitz3.ab3@9015>    BNE.w JL_0_6B72
00025F36 <AmiBlitz3.ab3@9016>   MOVE.l A0,D0
00025F38 <AmiBlitz3.ab3@9017>   MOVE.l D1,D3
00025F3C <AmiBlitz3.ab3@9020>   SUB.l $12(A1),D2
00025F40 <AmiBlitz3.ab3@9021>    BMI.w JL_0_6BA0
00025F44 <AmiBlitz3.ab3@9022>   ADD.l $28(A1),D2
00025F46 <AmiBlitz3.ab3@9023>   MOVE.l D2,-(A7)
00025F4C <AmiBlitz3.ab3@9024>   SUB.l destbufferstart,D2
00025F50 <AmiBlitz3.ab3@9025>    BSR.w addhunkoffset
00025F52 <AmiBlitz3.ab3@9026>   MOVEA.l (A7)+,A2
00025F58 <AmiBlitz3.ab3@9027>   TST.w dontwrite
00025F5C <AmiBlitz3.ab3@9028>    BNE.w JL_0_6BA0
00025F60 <AmiBlitz3.ab3@9029>   MOVE.l $28(A1),D2
00025F64 <AmiBlitz3.ab3@9030>   SUB.l $12(A1),D2
00025F66 <AmiBlitz3.ab3@9031>   ADD.l D2,(A2)
00025F68 <AmiBlitz3.ab3@9034>    SUBQ.l #1,D1
00025F6C <AmiBlitz3.ab3@9035>    BNE.w JL_0_6B44
00025F6E <AmiBlitz3.ab3@9036>   MOVE.l D3,D2
00025F72 <AmiBlitz3.ab3@9037>    BEQ.w JL_0_6BB4
00025F74 <AmiBlitz3.ab3@9038>   MOVEA.l D0,A2
00025F76 <AmiBlitz3.ab3@9039>   SUBQ.w #4,A2
00025F7A <AmiBlitz3.ab3@9040>    BSR.w JL_0_6E34
00025F7E <AmiBlitz3.ab3@9043>    MOVEM.l (A7)+,D0/D2-D3
00025F82 <AmiBlitz3.ab3@9046>    MOVEM.l (A7)+,D1/A0/A2
00025F86 <AmiBlitz3.ab3@9047>   MOVEM.l D1-D2,-(A7)
00025F8A <AmiBlitz3.ab3@9048>   TST.w $1A(A1)
00025F8E <AmiBlitz3.ab3@9049>    BNE.w JL_0_6BD0
00025F92 <AmiBlitz3.ab3@9050>   CLR.w $A(A1)
00025F96 <AmiBlitz3.ab3@9051> BRA.w JL_0_6C5E
00025F9C <AmiBlitz3.ab3@9054>   ADDQ.w #1,globalvarpointer
00025FA4 <AmiBlitz3.ab3@9055>   BCLR #$0,globalvarpointer+1
00025FAC <AmiBlitz3.ab3@9056>   MOVE.w globalvarpointer,$A(A1)
00025FB0 <AmiBlitz3.ab3@9057>   CMP.w #-$12D,D1
00025FB4 <AmiBlitz3.ab3@9058>    BNE.w JL_0_6C16
00025FBC <AmiBlitz3.ab3@9059>   MOVE.w $A(A1),movestdn+2
00025FC4 <AmiBlitz3.ab3@9060>   MOVE.w $A(A1),pusha3+2
00025FCC <AmiBlitz3.ab3@9061>   MOVE.w $A(A1),pusha32+2
00025FD4 <AmiBlitz3.ab3@9062>   MOVE.w $A(A1),pulla3+2
00025FDC <AmiBlitz3.ab3@9063>   MOVE.w $A(A1),geta3+2
00025FE0 <AmiBlitz3.ab3@9066>    CMP.w #-$3E9,D1
00025FE4 <AmiBlitz3.ab3@9067>    BNE.w JL_0_6C3E
00025FEC <AmiBlitz3.ab3@9068>   MOVE.w $A(A1),dataget+2
00025FF4 <AmiBlitz3.ab3@9069>   MOVE.w $A(A1),dataput+2
00025FFC <AmiBlitz3.ab3@9070>   MOVE.w $A(A1),rescode+6
00026004 <AmiBlitz3.ab3@9071>   MOVE.w $A(A1),rescode2+2
0002600A <AmiBlitz3.ab3@9074>   ADDQ.w #2,globalvarpointer
0002600E <AmiBlitz3.ab3@9075>   TST.w $1A(A1)
00026012 <AmiBlitz3.ab3@9076>    BMI.w JL_0_6C52
00026018 <AmiBlitz3.ab3@9077>   ADDQ.w #2,globalvarpointer
0002601C <AmiBlitz3.ab3@9080>   MOVEM.l D1/A1,-(A7)
00026020 <AmiBlitz3.ab3@9081>   BSR.w uselib2
00026024 <AmiBlitz3.ab3@9082>   MOVEM.l (A7)+,D1/A1
00026026 <AmiBlitz3.ab3@9085>   MOVE.w D1,D2
0002602A <AmiBlitz3.ab3@9086>   MOVE.l $16(A1),D1
0002602E <AmiBlitz3.ab3@9087>    BSR.w uselib2_org
00026032 <AmiBlitz3.ab3@9088>   MOVE.l $1C(A1),D1
00026036 <AmiBlitz3.ab3@9089>    BSR.w uselib2_org
0002603A <AmiBlitz3.ab3@9090>   MOVEM.l (A7)+,D1-D2
00026040 <AmiBlitz3.ab3@9092>   MOVE.b (a7)+,debugmode
00026042 <AmiBlitz3.ab3@9095> RTS
00026044 <AmiBlitz3.ab3@9099>   MOVEQ.l #$00,D2
0002604A <AmiBlitz3.ab3@9102>   MOVEA.l tokeslist,A2
0002604C <AmiBlitz3.ab3@9103>   CMPA.l D2,A2
00026050 <AmiBlitz3.ab3@9104>    BEQ.w JL_0_6CE0
00026052 <AmiBlitz3.ab3@9105>   MOVE.l A2,-(A7)
00026054 <AmiBlitz3.ab3@9108>   MOVEQ.l #$00,D3
00026058 <AmiBlitz3.ab3@9111>   MOVEA.l $8(A2),A3
0002605A <AmiBlitz3.ab3@9112>   CMPA.l D3,A3
0002605E <AmiBlitz3.ab3@9113>    BEQ.w JL_0_6CD2
00026060 <AmiBlitz3.ab3@9114>   MOVE.l A3,-(A7)
00026064 <AmiBlitz3.ab3@9115>   MOVEM.l D2-D3/A2-A3,-(A7)
00026068 <AmiBlitz3.ab3@9116>   MOVE.w $4(A2),D1
0002606C <AmiBlitz3.ab3@9117>   MOVE.w $6(A2),D2
00026070 <AmiBlitz3.ab3@9118>    BSR.w JL_0_6CE2
00026074 <AmiBlitz3.ab3@9119>   MOVEM.l (A7)+,D2-D3/A2-A3
0002607A <AmiBlitz3.ab3@9120>   MOVE.w dontwrite,D0
0002607E <AmiBlitz3.ab3@9121>    BEQ.w JL_0_6CBE
00026080 <AmiBlitz3.ab3@9124>   MOVEA.l (A3),A3
00026082 <AmiBlitz3.ab3@9125>   CMPA.l D3,A3
00026086 <AmiBlitz3.ab3@9126>    BNE.w JL_0_6CB2
0002608A <AmiBlitz3.ab3@9127> BRA.w JL_0_6CCC
0002608E <AmiBlitz3.ab3@9130>   MOVEA.l $4(A3),A0
00026090 <AmiBlitz3.ab3@9131>   MOVE.l D7,(A0)
00026092 <AmiBlitz3.ab3@9132>   MOVEA.l (A3),A3
00026094 <AmiBlitz3.ab3@9133>   CMPA.l D3,A3
00026098 <AmiBlitz3.ab3@9134>    BNE.w JL_0_6CBE
0002609A <AmiBlitz3.ab3@9137>   MOVE.l (A7)+,D3
0002609E <AmiBlitz3.ab3@9138> BRA.w JL_0_6C88
000260A0 <AmiBlitz3.ab3@9141>    MOVEA.l (A2),A2
000260A2 <AmiBlitz3.ab3@9142>   CMPA.l D2,A2
000260A6 <AmiBlitz3.ab3@9143>    BNE.w JL_0_6C86
000260A8 <AmiBlitz3.ab3@9144>   MOVE.l (A7)+,D2
000260AC <AmiBlitz3.ab3@9145> BRA.w JL_0_6C78
000260AE <AmiBlitz3.ab3@9148> RTS
000260B0 <AmiBlitz3.ab3@9152>   MOVE.w D2,-(A7)
000260B4 <AmiBlitz3.ab3@9153>    BSR.w searchinstr
000260B6 <AmiBlitz3.ab3@9154>   MOVE.w (A7)+,D2
000260BE <AmiBlitz3.ab3@9155>   BCLR #$7,blitzmode
000260C2 <AmiBlitz3.ab3@9156>   BCLR #$E,D2
000260C6 <AmiBlitz3.ab3@9157>    BEQ.w JL_0_6D02
000260CE <AmiBlitz3.ab3@9158>   BSET #$7,blitzmode
000260D0 <AmiBlitz3.ab3@9161>   TST.w (A3)
000260D4 <AmiBlitz3.ab3@9162>    BEQ.w JL_0_6DAC
000260DA <AmiBlitz3.ab3@9163>   BTST #$2,$1(A3)
000260DE <AmiBlitz3.ab3@9164>    BNE.w tokeerr
000260E4 <AmiBlitz3.ab3@9165>   BTST #$3,$1(A3)
000260E8 <AmiBlitz3.ab3@9166>    BNE.w tokeerr
000260EC <AmiBlitz3.ab3@9167>   LEA $6(A3),A3
000260EE <AmiBlitz3.ab3@9170>   MOVE.w (A3)+,D0
000260F2 <AmiBlitz3.ab3@9171>    BMI.w tokeerr
000260F6 <AmiBlitz3.ab3@9172>   ANDI.w #$FF,D0
000260F8 <AmiBlitz3.ab3@9173>   ADDA.w D0,A3
000260FA <AmiBlitz3.ab3@9174>   ADDQ.w #1,A3
000260FC <AmiBlitz3.ab3@9175>   EXG.l D0,A3
00026100 <AmiBlitz3.ab3@9176>   BCLR #$0,D0
00026102 <AmiBlitz3.ab3@9177>   EXG.l D0,A3
00026104 <AmiBlitz3.ab3@9178>   SUBQ.w #1,D2
00026108 <AmiBlitz3.ab3@9179>    BPL.w JL_0_6D98
0002610A <AmiBlitz3.ab3@9180>   TST.w (A3)
0002610E <AmiBlitz3.ab3@9181>    BNE.w JL_0_6D76
00026112 <AmiBlitz3.ab3@9182>   MOVE.l $2(A3),D0
00026116 <AmiBlitz3.ab3@9183>   OR.l $A(A3),D0
0002611A <AmiBlitz3.ab3@9184>    BNE.w JL_0_6D76
00026120 <AmiBlitz3.ab3@9185>   BTST #$0,$9(A3)
00026124 <AmiBlitz3.ab3@9186>    BNE.w JL_0_6D76
00026128 <AmiBlitz3.ab3@9187>   MOVE.l $6(A3),D7
0002612C <AmiBlitz3.ab3@9188>   MOVE.w $0(A2,D7.L),D0
00026130 <AmiBlitz3.ab3@9189>   ANDI.w #$F000,D0
00026134 <AmiBlitz3.ab3@9190>   CMP.w #-$6000,D0
00026138 <AmiBlitz3.ab3@9191>    BEQ.w JL_0_6D76
0002613C <AmiBlitz3.ab3@9194>   SUB.l $12(A2),D7
00026140 <AmiBlitz3.ab3@9195>   ADD.l $28(A2),D7
00026142 <AmiBlitz3.ab3@9196> RTS
00026148 <AmiBlitz3.ab3@9200>   LEA cutejsr,A0
0002614E <AmiBlitz3.ab3@9203>   MOVE.l destpointer,-(A7)
00026156 <AmiBlitz3.ab3@9204>   MOVE.w #$FFFF,lasta6
00026158 <AmiBlitz3.ab3@9207>    JSR (A0)
0002615C <AmiBlitz3.ab3@9208>   MOVE.w #$4E75,D1
00026160 <AmiBlitz3.ab3@9209>    BSR.w writeword
00026162 <AmiBlitz3.ab3@9210>   MOVE.l (A7)+,D7
00026164 <AmiBlitz3.ab3@9211> RTS
00026166 <AmiBlitz3.ab3@9215>   TST.w (A3)+
0002616A <AmiBlitz3.ab3@9216>    BEQ.w JL_0_6DA4
0002616C <AmiBlitz3.ab3@9217>   ADDQ.w #2,A3
00026170 <AmiBlitz3.ab3@9218> BRA.w JL_0_6D98
00026174 <AmiBlitz3.ab3@9221>   LEA $C(A3),A3
00026178 <AmiBlitz3.ab3@9222> BRA.w JL_0_6D20
0002617A <AmiBlitz3.ab3@9226>   TST.w D2
0002617E <AmiBlitz3.ab3@9227>    BNE.w tokeerr
00026182 <AmiBlitz3.ab3@9228>   TST.w $6(A3)
00026186 <AmiBlitz3.ab3@9229>    BNE.w JL_0_6DE4
0002618A <AmiBlitz3.ab3@9230>   MOVE.l $8(A3),D0
0002618E <AmiBlitz3.ab3@9231>   OR.l $10(A3),D0
00026192 <AmiBlitz3.ab3@9232>    BNE.w JL_0_6DE4
00026198 <AmiBlitz3.ab3@9233>   BTST #$0,$F(A3)
0002619C <AmiBlitz3.ab3@9234>    BNE.w JL_0_6DE4
000261A0 <AmiBlitz3.ab3@9235>   MOVE.l $C(A3),D7
000261A4 <AmiBlitz3.ab3@9236>   MOVE.w $0(A2,D7.L),D0
000261A8 <AmiBlitz3.ab3@9237>   ANDI.w #$F000,D0
000261AC <AmiBlitz3.ab3@9238>   CMP.w #-$6000,D0
000261B0 <AmiBlitz3.ab3@9239>    BNE.w JL_0_6D6C
000261B2 <AmiBlitz3.ab3@9242>   MOVE.l A3,D1
000261B4 <AmiBlitz3.ab3@9243>   SUB.l A2,D1
000261BA <AmiBlitz3.ab3@9244>   LEA Amakelibsub,A0
000261BE <AmiBlitz3.ab3@9245> BRA.w JL_0_6D7C
000261C4 <AmiBlitz3.ab3@9249>   MOVEA.l _execbase,A6
000261CA <AmiBlitz3.ab3@9250>   MOVEA.l tokeslist,A2
000261D0 <AmiBlitz3.ab3@9251>   CLR.l tokeslist
000261D4 <AmiBlitz3.ab3@9254>     CMPA.w #$0,A2
000261D8 <AmiBlitz3.ab3@9255>      BEQ.w JL_0_6E32
000261DC <AmiBlitz3.ab3@9256>     MOVEA.l $8(A2),A3
000261E0 <AmiBlitz3.ab3@9259>       CMPA.w #$0,A3
000261E4 <AmiBlitz3.ab3@9260>        BEQ.w JL_0_6E24
000261E6 <AmiBlitz3.ab3@9261>       MOVEA.l A3,A1
000261E8 <AmiBlitz3.ab3@9262>       MOVEA.l (A3),A3
000261EA <AmiBlitz3.ab3@9263>       MOVEQ.l #$08,D0
000261F0 <AmiBlitz3.ab3@9264>       MOVE.l mempool,a0
000261F6 <AmiBlitz3.ab3@9265>       MOVEA.l _execbase,A6
000261FA <AmiBlitz3.ab3@9266>       JSR _FreePooled(A6)
000261FE <AmiBlitz3.ab3@9267> BRA.w JL_0_6E0E
00026200 <AmiBlitz3.ab3@9270>     MOVEA.l A2,A1
00026202 <AmiBlitz3.ab3@9271>     MOVEA.l (A2),A2
00026204 <AmiBlitz3.ab3@9272>     MOVEQ.l #$0C,D0
0002620A <AmiBlitz3.ab3@9273>     MOVE.l mempool,a0
00026210 <AmiBlitz3.ab3@9274>     MOVEA.l _execbase,A6
00026214 <AmiBlitz3.ab3@9275>     JSR _FreePooled(A6)
00026218 <AmiBlitz3.ab3@9276> BRA.w JL_0_6E02
0002621A <AmiBlitz3.ab3@9279> RTS
0002621E <AmiBlitz3.ab3@9283>   MOVEM.l D3-D5/A1-A6,-(A7)
00026220 <AmiBlitz3.ab3@9284>   MOVEA.l A1,A4
00026222 <AmiBlitz3.ab3@9287>   MOVE.l (A2)+,D3
00026226 <AmiBlitz3.ab3@9288>   MOVE.w $0(A4,D3.L),D5
0002622A <AmiBlitz3.ab3@9289>    BPL.w JL_0_6E7A
0002622E <AmiBlitz3.ab3@9290>   TST.l $2C(A4)
00026232 <AmiBlitz3.ab3@9291>    BEQ.w JL_0_6E5E
00026238 <AmiBlitz3.ab3@9292>   TST.b debugmode
0002623C <AmiBlitz3.ab3@9293>    BNE.w JL_0_6E5E
00026240 <AmiBlitz3.ab3@9294>   CMP.l $2C(A4),D3
00026244 <AmiBlitz3.ab3@9295>    BCC.w JL_0_6E7A
00026248 <AmiBlitz3.ab3@9298>   BCLR #$F,D5
0002624C <AmiBlitz3.ab3@9299>   MOVE.w $2(A4,D3.L),D4
00026250 <AmiBlitz3.ab3@9300>   SUB.l $12(A4),D3
00026254 <AmiBlitz3.ab3@9301>   ADD.l $28(A4),D3
00026258 <AmiBlitz3.ab3@9302>   MOVEM.l D2/A2/A4,-(A7)
0002625C <AmiBlitz3.ab3@9303>    BSR.w JL_0_6E86
00026260 <AmiBlitz3.ab3@9304>   MOVEM.l (A7)+,D2/A2/A4
00026262 <AmiBlitz3.ab3@9307>   SUBQ.l #1,D2
00026266 <AmiBlitz3.ab3@9308>    BNE.w JL_0_6E3A
0002626A <AmiBlitz3.ab3@9309>   MOVEM.l (A7)+,D3-D5/A1-A6
0002626C <AmiBlitz3.ab3@9310> RTS
00026272 <AmiBlitz3.ab3@9314>   LEA tokeslist,A3
00026278 <AmiBlitz3.ab3@9315>   MOVEA.l _execbase,A6
0002627A <AmiBlitz3.ab3@9318>   MOVE.l (A3),D0
0002627E <AmiBlitz3.ab3@9319>    BEQ.w JL_0_6EAC
00026280 <AmiBlitz3.ab3@9320>   MOVEA.l D0,A3
00026284 <AmiBlitz3.ab3@9321>   CMP.w $4(A3),D4
00026288 <AmiBlitz3.ab3@9322>    BNE.w JL_0_6E90
0002628C <AmiBlitz3.ab3@9323>   CMP.w $6(A3),D5
00026290 <AmiBlitz3.ab3@9324>    BNE.w JL_0_6E90
00026294 <AmiBlitz3.ab3@9325> BRA.w JL_0_6ED0
00026296 <AmiBlitz3.ab3@9328>   MOVEQ.l #$0C,D0
00026298 <AmiBlitz3.ab3@9329>   MOVEQ.l #$01,D1
0002629E <AmiBlitz3.ab3@9330>   MOVE.l mempool,a0
000262A2 <AmiBlitz3.ab3@9331>   JSR _AllocPooled(a6)
000262A4 <AmiBlitz3.ab3@9333>   MOVEA.l D0,A3
000262AA <AmiBlitz3.ab3@9334>   MOVE.l tokeslist,(A3)
000262B0 <AmiBlitz3.ab3@9335>   MOVE.l A3,tokeslist
000262B4 <AmiBlitz3.ab3@9336>   MOVE.w D4,$4(A3)
000262B8 <AmiBlitz3.ab3@9337>   MOVE.w D5,$6(A3)
000262BC <AmiBlitz3.ab3@9338>   CLR.l $8(A3)
000262BE <AmiBlitz3.ab3@9341>   MOVEQ.l #$08,D0
000262C0 <AmiBlitz3.ab3@9342>   MOVEQ.l #$01,D1
000262C6 <AmiBlitz3.ab3@9343>   MOVE.l mempool,a0
000262CA <AmiBlitz3.ab3@9344>   JSR _AllocPooled(a6)
000262CC <AmiBlitz3.ab3@9346>   MOVEA.l D0,A0
000262D0 <AmiBlitz3.ab3@9347>   MOVE.l D3,$4(A0)
000262D4 <AmiBlitz3.ab3@9348>   MOVE.l $8(A3),(A0)
000262D8 <AmiBlitz3.ab3@9349>   MOVE.l A0,$8(A3)
000262DA <AmiBlitz3.ab3@9350>   MOVE.w D4,D1
000262DE <AmiBlitz3.ab3@9351> BRA.w searchinstr
000262E2 <AmiBlitz3.ab3@9354> tokeslist: Ds.l 1
000262E6 <AmiBlitz3.ab3@9367>   BEQ.w uselib2_org__skip
000262E8 <AmiBlitz3.ab3@9368>   MOVE.l A1,-(A7)
000262EA <AmiBlitz3.ab3@9369>   ADDA.l D1,A1
000262EC <AmiBlitz3.ab3@9370>   ADDQ.w #6,A1
000262EE <AmiBlitz3.ab3@9373>     MOVE.w (A1)+,D1
000262F2 <AmiBlitz3.ab3@9374>     BEQ.w uselib2_org__done
000262F4 <AmiBlitz3.ab3@9375>     CMP.w D2,D1
000262F8 <AmiBlitz3.ab3@9376>     BEQ.w uselib2_org__skip2
000262FA <AmiBlitz3.ab3@9377>     MOVE.l A1,-(A7)
000262FE <AmiBlitz3.ab3@9378>     BSR.w uselib
00026300 <AmiBlitz3.ab3@9379>     MOVEA.l (A7)+,A1
00026302 <AmiBlitz3.ab3@9382>     ADDQ.w #2,A1
00026306 <AmiBlitz3.ab3@9383> BRA.w uselib2_org__loop
00026308 <AmiBlitz3.ab3@9386>   MOVEA.l (A7)+,A1
0002630A <AmiBlitz3.ab3@9389> RTS
00026310 <AmiBlitz3.ab3@9393>   MOVEA.l libpointer,A1
00026314 <AmiBlitz3.ab3@9396>   CMPA.w #$0,A1
00026318 <AmiBlitz3.ab3@9397>    BEQ.b JL_0_6F36
0002631C <AmiBlitz3.ab3@9398>   CMP.w $4(A1),D1
00026320 <AmiBlitz3.ab3@9399>    BEQ.w JL_0_6F34
00026322 <AmiBlitz3.ab3@9400>   MOVEA.l (A1),A1
00026326 <AmiBlitz3.ab3@9401> BRA.w JL_0_6F20
00026328 <AmiBlitz3.ab3@9404>   MOVEQ.l #-$01,D1
0002632A <AmiBlitz3.ab3@9407> RTS
0002632E <AmiBlitz3.ab3@9411>   MOVEM.l d0/a2,-(a7)
00026330 <AmiBlitz3.ab3@9412>   MOVEQ #0,d0
00026336 <AmiBlitz3.ab3@9413>   LEA instrtab+4,a2
00026338 <AmiBlitz3.ab3@9414>   MOVE.w d1,d0
0002633A <AmiBlitz3.ab3@9415>   ASL.l #3,d0
0002633E <AmiBlitz3.ab3@9416>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026344 <AmiBlitz3.ab3@9417>   CMP.l #0,a1
00026348 <AmiBlitz3.ab3@9418>   BNE JL_0_6F54b
0002634E <AmiBlitz3.ab3@9420>   MOVEA.l libpointer,A1
00026352 <AmiBlitz3.ab3@9423>     CMPA.w #$0,A1
00026356 <AmiBlitz3.ab3@9424>     BEQ.w noliberr
0002635A <AmiBlitz3.ab3@9425>     CMP.w $4(A1),D1
0002635E <AmiBlitz3.ab3@9426>     BEQ.w JL_0_6F54
00026360 <AmiBlitz3.ab3@9427>    MOVEA.l (A1),A1
00026364 <AmiBlitz3.ab3@9428> BRA.w JL_0_6F3E
00026368 <AmiBlitz3.ab3@9431>   MOVE.l a1,0(a2,d0.l)
0002636C <AmiBlitz3.ab3@9434>   MOVEM.l (a7)+,d0/a2
0002636E <AmiBlitz3.ab3@9435> RTS
00026372 <AmiBlitz3.ab3@9438>   MOVEM.l d0-d1/a1,-(a7)
00026374 <AmiBlitz3.ab3@9439>   MOVEQ #0,d0
0002637A <AmiBlitz3.ab3@9440>   LEA instrtab,a1
0002637C <AmiBlitz3.ab3@9441>   MOVE.w d1,d0
0002637E <AmiBlitz3.ab3@9442>   ASL.l #3,d0
00026382 <AmiBlitz3.ab3@9443>   MOVE.l 0(a1,d0.l),a3
00026386 <AmiBlitz3.ab3@9444>   MOVE.l 4(a1,d0.l),a2
0002638C <AmiBlitz3.ab3@9445>   CMP.l #0,a3
00026390 <AmiBlitz3.ab3@9446>   BNE JL_0_6F92b
00026396 <AmiBlitz3.ab3@9448>   MOVEA.l libpointer,A2
0002639A <AmiBlitz3.ab3@9451>   CMPA.w #$0,A2
0002639E <AmiBlitz3.ab3@9452>   BEQ.w notokerr
000263A2 <AmiBlitz3.ab3@9453>   CMP.w $E(A2),D1
000263A6 <AmiBlitz3.ab3@9454>   BCS.w JL_0_6FB8
000263AA <AmiBlitz3.ab3@9455>   CMP.w $10(A2),D1
000263AE <AmiBlitz3.ab3@9456>   BCC.w JL_0_6FB8
000263B2 <AmiBlitz3.ab3@9457>   LEA $30(A2),A3
000263B6 <AmiBlitz3.ab3@9458>   TST.w $4(A2)
000263BA <AmiBlitz3.ab3@9459>   BPL.w JL_0_6FA6
000263BE <AmiBlitz3.ab3@9462>     CMP.w $E(A2),D1
000263C2 <AmiBlitz3.ab3@9463>     BEQ.w JL_0_6F92
000263C4 <AmiBlitz3.ab3@9464>     SUBQ.w #1,D1
000263C8 <AmiBlitz3.ab3@9465>     MOVEA.l $2(A3),A3
000263CC <AmiBlitz3.ab3@9466> BRA.w JL_0_6F80
000263D0 <AmiBlitz3.ab3@9469>   MOVE.l a3,0(a1,d0.l)
000263D4 <AmiBlitz3.ab3@9470>   MOVE.l a2,4(a1,d0.l)
000263D8 <AmiBlitz3.ab3@9473>   MOVEM.l (a7)+,d0-d1/a1
000263DC <AmiBlitz3.ab3@9474>   MOVEM.l D1/A1-a3,-(A7)
000263E0 <AmiBlitz3.ab3@9475>   CMP.w #1,(a3)
000263E4 <AmiBlitz3.ab3@9476>   BNE.s ex10
000263EC <AmiBlitz3.ab3@9477>   CMP.l #$12345678,$e(a3)
000263F0 <AmiBlitz3.ab3@9478>   BNE.s ex10
000263F6 <AmiBlitz3.ab3@9479>   CMP.w #$ffff,$16(a3)
000263FA <AmiBlitz3.ab3@9480>   BNE.s ex10
000263FE <AmiBlitz3.ab3@9481>   MOVE.l $12(a3),d1
00026402 <AmiBlitz3.ab3@9482>   BEQ.s ex10
00026408 <AmiBlitz3.ab3@9483>   LEA pluginbase,a3
0002640C <AmiBlitz3.ab3@9485> JMP 0(a2,d1.l)                                             ;plugin
00026410 <AmiBlitz3.ab3@9488>   MOVEM.l (A7)+,D1/A1-a3
00026416 <AmiBlitz3.ab3@9489>   JSR stripspaces
00026418 <AmiBlitz3.ab3@9490>   MOVEQ #0,d0
0002641A <AmiBlitz3.ab3@9491>   MOVE.b (a5)+,d0
00026420 <AmiBlitz3.ab3@9492>   MOVE.w d0,lastchar
00026422 <AmiBlitz3.ab3@9493>   ADDQ.l #4,a7
00026424 <AmiBlitz3.ab3@9494> RTS
00026426 <AmiBlitz3.ab3@9498>   MOVEA.l A2,A1
0002642C <AmiBlitz3.ab3@9499>   CLR.b newmode
00026430 <AmiBlitz3.ab3@9500>   MOVE.w $4(A1),D1
00026434 <AmiBlitz3.ab3@9503>   BSR.w uselib3
00026438 <AmiBlitz3.ab3@9504>   MOVEM.l (A7)+,D1/A1-a3
0002643A <AmiBlitz3.ab3@9505> RTS
00026440 <AmiBlitz3.ab3@9508>   MOVE.w globalvarpointer,-(a7)
00026448 <AmiBlitz3.ab3@9509>   MOVE.w #$8004,globalvarpointer
0002644C <AmiBlitz3.ab3@9510>   BSR.w uselib3
00026452 <AmiBlitz3.ab3@9511>   MOVE.w (a7)+,globalvarpointer
00026456 <AmiBlitz3.ab3@9512>   MOVEM.l (A7)+,D1/A1-a3
00026458 <AmiBlitz3.ab3@9513> RTS
0002645C <AmiBlitz3.ab3@9516>     CMP.w $E(A2),D1
00026460 <AmiBlitz3.ab3@9517>     BEQ.w JL_0_6F92
00026462 <AmiBlitz3.ab3@9518>     SUBQ.w #1,D1
00026466 <AmiBlitz3.ab3@9519>     MOVEA.l $2(A3),A3
0002646A <AmiBlitz3.ab3@9520> BRA.w JL_0_6FA6
0002646C <AmiBlitz3.ab3@9523>   MOVEA.l (A2),A2
00026470 <AmiBlitz3.ab3@9524> BRA.w JL_0_6F5C
00026476 <AmiBlitz3.ab3@9527> JMP writeword
0002647A <AmiBlitz3.ab3@9530> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002647E <AmiBlitz3.ab3@9531> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026482 <AmiBlitz3.ab3@9532> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026484 <AmiBlitz3.ab3@9538>   TST.l D0
00026488 <AmiBlitz3.ab3@9539>   BEQ.w exit_loadlibsfile
0002648A <AmiBlitz3.ab3@9540>     MOVE.l D0,D6                                           ;d6=len
00026490 <AmiBlitz3.ab3@9541>     MOVEA.l _dosbase,A6
00026496 <AmiBlitz3.ab3@9542>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002649A <AmiBlitz3.ab3@9543>     JSR _Open(A6)
0002649C <AmiBlitz3.ab3@9544>     MOVE.l D0,D7
000264A0 <AmiBlitz3.ab3@9545>     BEQ.w exit_loadlibsfile
000264A2 <AmiBlitz3.ab3@9546>       MOVE.l D6,D0
000264A4 <AmiBlitz3.ab3@9547>       MOVEQ.l #$01,D1
000264AA <AmiBlitz3.ab3@9548>       MOVEA.l _execbase,A6
000264B0 <AmiBlitz3.ab3@9549>       MOVE.l mempool,a0
000264B4 <AmiBlitz3.ab3@9550>       JSR _AllocPooled(a6)
000264B6 <AmiBlitz3.ab3@9551>       MOVE.l D0,D5                                         ;start address
000264B8 <AmiBlitz3.ab3@9553>       MOVE.l D7,D1                                         ; handle
000264BA <AmiBlitz3.ab3@9554>       MOVE.l D5,D2                                         ; buffer addr
000264BC <AmiBlitz3.ab3@9555>       MOVE.l D6,D3                                         ; size
000264C2 <AmiBlitz3.ab3@9556>       MOVEA.l _dosbase,A6
000264C6 <AmiBlitz3.ab3@9557>       JSR _Read(A6)
000264C8 <AmiBlitz3.ab3@9558>       MOVE.l D7,D1
000264CC <AmiBlitz3.ab3@9559>       JSR _Close(A6)
000264CE <AmiBlitz3.ab3@9561>       MOVEA.l D5,A0                                        ; buffer addr
000264D0 <AmiBlitz3.ab3@9567>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
000264D4 <AmiBlitz3.ab3@9568>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
000264D8 <AmiBlitz3.ab3@9569>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
000264DA <AmiBlitz3.ab3@9570>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
000264DC <AmiBlitz3.ab3@9571>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
000264DE <AmiBlitz3.ab3@9572>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000264E2 <AmiBlitz3.ab3@9573>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
000264E4 <AmiBlitz3.ab3@9574>           ADD.l D0,D0                                      ;   verdoppele D0
000264E6 <AmiBlitz3.ab3@9575>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000264EA <AmiBlitz3.ab3@9576>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
000264EE <AmiBlitz3.ab3@9577>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
000264F2 <AmiBlitz3.ab3@9578>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
000264F4 <AmiBlitz3.ab3@9579>           CMPA.l A0,A2
000264F8 <AmiBlitz3.ab3@9580>           BCC.b JL_0_7010                                  ; wenn A0=>A2
000264FE <AmiBlitz3.ab3@9581>             MOVE.l -$8(A2),$20(A1)                         ;
00026502 <AmiBlitz3.ab3@9582>             MOVE.l A2,$24(A1)                              ;
00026506 <AmiBlitz3.ab3@9583> BRA.w JL_0_7010
00026508 <AmiBlitz3.ab3@9586>       MOVE.l D5,D0
0002650A <AmiBlitz3.ab3@9589> RTS
00026534 <AmiBlitz3.ab3@9593>   !basic
000265A8 <AmiBlitz3.ab3@9594>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
000265DC <AmiBlitz3.ab3@9595>    dos_Delete{tempmapping$}
00026620 <AmiBlitz3.ab3@9596>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002663E <AmiBlitz3.ab3@9597>   !asm
00026644 <AmiBlitz3.ab3@9599>   LEA libpointer,A3
0002664A <AmiBlitz3.ab3@9603>   MOVE.l size_deflibs,D0
00026650 <AmiBlitz3.ab3@9604>   MOVE.l deflib,d1
00026654 <AmiBlitz3.ab3@9605>   BEQ 'l1
00026658 <AmiBlitz3.ab3@9606> BRA 'l2
0002665E <AmiBlitz3.ab3@9609>   MOVE.l #str_path_deflibs,D1
00026662 <AmiBlitz3.ab3@9612>   BSR.w load_libsfile
00026668 <AmiBlitz3.ab3@9613>   MOVE.l D0,ptr_deflibs
0002666E <AmiBlitz3.ab3@9616>   MOVE.l size_acidlibs,D0
00026674 <AmiBlitz3.ab3@9617>   MOVE.l #str_path_acidlibs,D1
00026678 <AmiBlitz3.ab3@9618>   BSR.w load_libsfile
0002667E <AmiBlitz3.ab3@9619>   MOVE.l D0,ptr_acidlibs
00026680 <AmiBlitz3.ab3@9623>   CLR.l (A3)
00026686 <AmiBlitz3.ab3@9624>   MOVE.l A3,ptr_userlibs
0002668C <AmiBlitz3.ab3@9629>   LEA str_libfilename,A0
00026692 <AmiBlitz3.ab3@9630>   LEA str_path_userlibs,A1
00026694 <AmiBlitz3.ab3@9633>     MOVE.b (A1)+,(A0)+
00026698 <AmiBlitz3.ab3@9634>   BNE.b JL_0_708E
0002669A <AmiBlitz3.ab3@9636>   SUBQ.w #1,A0
0002669E <AmiBlitz3.ab3@9637>   MOVE.b #$2F,(A0)+
000266A0 <AmiBlitz3.ab3@9640>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
000266A6 <AmiBlitz3.ab3@9642>   LEA ptr_userlibs_list,A2
000266AC <AmiBlitz3.ab3@9643>   MOVEA.l ptr_userlibs,A3
000266B2 <AmiBlitz3.ab3@9644>   MOVEA.l _dosbase,A6
000266B4 <AmiBlitz3.ab3@9649>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
000266B8 <AmiBlitz3.ab3@9650>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
000266BA <AmiBlitz3.ab3@9652>       CLR.l (A3)
000266BC <AmiBlitz3.ab3@9653>       ADDQ.w #4,A7
000266E6 <AmiBlitz3.ab3@9654>       !basic
000266FA <AmiBlitz3.ab3@9655>       If fid<>-1
00026704 <AmiBlitz3.ab3@9656>         file_Close{fid}
00026710 <AmiBlitz3.ab3@9657>         fid = -1
0002672E <AmiBlitz3.ab3@9659>       !asm
00026732 <AmiBlitz3.ab3@9660> BRA.w process_libraries
00026734 <AmiBlitz3.ab3@9663>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00026738 <AmiBlitz3.ab3@9664>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002673C <AmiBlitz3.ab3@9665>     BEQ.b JL_0_70BA
00026740 <AmiBlitz3.ab3@9667>     LEA $6(A2),A1
00026742 <AmiBlitz3.ab3@9668>     MOVEA.l (A7),A0
00026744 <AmiBlitz3.ab3@9671>       MOVE.b (A1)+,(A0)+
00026748 <AmiBlitz3.ab3@9672>     BNE.w JL_0_70D4
0002674A <AmiBlitz3.ab3@9676>     MOVE.l A0,-(A7)
00026750 <AmiBlitz3.ab3@9677>     MOVE.l #str_libfilename,D1
00026752 <AmiBlitz3.ab3@9678>     MOVEQ.l #-$02,D2
00026758 <AmiBlitz3.ab3@9679>     MOVEA.l _dosbase,A6
0002675C <AmiBlitz3.ab3@9680>      JSR _Lock(A6)
0002675E <AmiBlitz3.ab3@9681>     MOVE.l D0,D1
00026762 <AmiBlitz3.ab3@9682>      BEQ.w JL_0_7156
00026764 <AmiBlitz3.ab3@9683>     MOVEA.l (A7),A0
0002676A <AmiBlitz3.ab3@9684>     MOVE.b #$2F,-$1(A0)
0002676C <AmiBlitz3.ab3@9687>     MOVE.l D1,-(A7)
00026772 <AmiBlitz3.ab3@9688>     MOVE.l #ptr_parameterstore,D2
00026778 <AmiBlitz3.ab3@9689>     MOVEA.l _dosbase,A6
0002677C <AmiBlitz3.ab3@9690>     JSR _Examine(A6)
0002677E <AmiBlitz3.ab3@9691>     TST.l D0
00026782 <AmiBlitz3.ab3@9692>      BEQ.w JL_0_7150
00026788 <AmiBlitz3.ab3@9695>     LEA fib_FileName,A0
0002678C <AmiBlitz3.ab3@9696>     BSR.w check_for_infoextention
00026790 <AmiBlitz3.ab3@9697>     BEQ.w JL_0_7150
000267BA <AmiBlitz3.ab3@9700>     !basic
0002683E <AmiBlitz3.ab3@9701>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002685C <AmiBlitz3.ab3@9702>     !asm
00026862 <AmiBlitz3.ab3@9703>     MOVE.l #str_libfilename,D1
00026866 <AmiBlitz3.ab3@9704>     BSR.w open_userlibfile
00026868 <AmiBlitz3.ab3@9707>     MOVE.l (A7)+,D1
0002686E <AmiBlitz3.ab3@9708>     MOVEA.l _dosbase,A6
00026872 <AmiBlitz3.ab3@9709>     JSR _UnLock(A6)
00026874 <AmiBlitz3.ab3@9712>     ADDQ.w #4,A7
00026878 <AmiBlitz3.ab3@9713> BRA.w JL_0_70BA
0002687E <AmiBlitz3.ab3@9716>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026884 <AmiBlitz3.ab3@9717>   MOVEA.l _dosbase,A6
00026888 <AmiBlitz3.ab3@9718>    JSR _Open(A6)
0002688A <AmiBlitz3.ab3@9719>   MOVE.l D0,D7
0002688E <AmiBlitz3.ab3@9720>    BEQ.w exit_userlibfile
00026890 <AmiBlitz3.ab3@9723>   MOVE.l D7,D1                                             ; filehandle
00026896 <AmiBlitz3.ab3@9724>   MOVE.l #optstuff,D2                                     ; buffer
0002689C <AmiBlitz3.ab3@9725>   MOVEA.l _dosbase,A6
0002689E <AmiBlitz3.ab3@9726>   MOVEQ.l #$20,D3                                          ; size
000268A2 <AmiBlitz3.ab3@9727>   JSR _Read(A6)
000268A8 <AmiBlitz3.ab3@9730>   MOVE.l optstuff+28,D6
000268AA <AmiBlitz3.ab3@9731>   LSL.l #2,D6
000268AC <AmiBlitz3.ab3@9732>   MOVE.l D6,D0
000268AE <AmiBlitz3.ab3@9733>   MOVEQ.l #$01,D1
000268B4 <AmiBlitz3.ab3@9734>   MOVEA.l _execbase,A6
000268BA <AmiBlitz3.ab3@9735>   MOVE.l mempool,a0
000268BE <AmiBlitz3.ab3@9736>   JSR _AllocPooled(a6)
000268C0 <AmiBlitz3.ab3@9737>   MOVEA.l D0,A5
000268C6 <AmiBlitz3.ab3@9740>   MOVEA.l _dosbase,A6
000268C8 <AmiBlitz3.ab3@9741>   MOVE.l D7,D1                                             ; filehandle
000268CA <AmiBlitz3.ab3@9742>   MOVE.l A5,D2                                             ; buffer
000268CC <AmiBlitz3.ab3@9743>   MOVE.l D6,D3                                             ; size
000268D0 <AmiBlitz3.ab3@9744>    JSR _Read(A6)
000268D2 <AmiBlitz3.ab3@9745>   MOVE.l A5,(A3)
000268D4 <AmiBlitz3.ab3@9747>   MOVE.l A5,d0
000268D6 <AmiBlitz3.ab3@9749>   MOVEA.l A5,A3
000268DA <AmiBlitz3.ab3@9750>   MOVE.l D6,$6(A5)
000268DE <AmiBlitz3.ab3@9751>   CLR.l $20(A5)
00026908 <AmiBlitz3.ab3@9753>   !basic
00026912 <AmiBlitz3.ab3@9755>   addr_libnum.l = PutD0 + 4
00026926 <AmiBlitz3.ab3@9756>   If fid<>-1
000269C6 <AmiBlitz3.ab3@9757>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000269F8 <AmiBlitz3.ab3@9758>     file_WriteLine{fid,currentlib$}
00026A16 <AmiBlitz3.ab3@9760>   !asm
00026A18 <AmiBlitz3.ab3@9763>   MOVE.l D7,D1                                             ; filehandle
00026A1E <AmiBlitz3.ab3@9764>   MOVE.l #optstuff,D2                                     ; buffer
00026A20 <AmiBlitz3.ab3@9765>   MOVEQ.l #$0C,D3                                          ; size
00026A26 <AmiBlitz3.ab3@9766>   MOVEA.l _dosbase,A6
00026A2A <AmiBlitz3.ab3@9767>    JSR _Read(A6)
00026A30 <AmiBlitz3.ab3@9769>   CMP.l #$C,D0
00026A34 <AmiBlitz3.ab3@9770>    BCS.w close_and_exit_userlibfile
00026A3A <AmiBlitz3.ab3@9773>   MOVE.l optstuff+4,D0
00026A3E <AmiBlitz3.ab3@9774>   MOVE.l D0,$20(A5)
00026A40 <AmiBlitz3.ab3@9775>   LSL.l #2,D0
00026A42 <AmiBlitz3.ab3@9776>   MOVE.l D0,D5
00026A44 <AmiBlitz3.ab3@9777>   MOVEQ.l #$01,D1
00026A4A <AmiBlitz3.ab3@9778>   MOVEA.l _execbase,A6
00026A50 <AmiBlitz3.ab3@9779>   MOVE.l mempool,a0
00026A54 <AmiBlitz3.ab3@9780>   JSR _AllocPooled(a6)
00026A5A <AmiBlitz3.ab3@9782>   MOVEA.l _dosbase,A6
00026A5E <AmiBlitz3.ab3@9783>   MOVE.l D0,$24(A5)
00026A60 <AmiBlitz3.ab3@9784>   MOVE.l D7,D1
00026A62 <AmiBlitz3.ab3@9785>   MOVE.l D0,D2
00026A64 <AmiBlitz3.ab3@9786>   MOVE.l D5,D3
00026A68 <AmiBlitz3.ab3@9787>   JSR _Read(A6)
00026A6A <AmiBlitz3.ab3@9790>   MOVE.l D7,D1
00026A70 <AmiBlitz3.ab3@9791>   MOVEA.l _dosbase,A6
00026A74 <AmiBlitz3.ab3@9792> JMP _Close(A6)
00026A76 <AmiBlitz3.ab3@9795> RTS
00026A7C <AmiBlitz3.ab3@9801>   CLR.w number_of_objects
00026A82 <AmiBlitz3.ab3@9802>   MOVEA.l end_of_tokenlist,A3
00026A88 <AmiBlitz3.ab3@9803>   MOVEA.l libpointer,A2
00026A8C <AmiBlitz3.ab3@9806>     CMPA.w #$0,A2
00026A90 <AmiBlitz3.ab3@9807>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00026A94 <AmiBlitz3.ab3@9809>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00026A98 <AmiBlitz3.ab3@9810>     BMI.w JL_0_7226
00026A9A <AmiBlitz3.ab3@9811>       LSL.w #7,D7
00026A9C <AmiBlitz3.ab3@9812>       ADDQ.w #1,D7
00026AA0 <AmiBlitz3.ab3@9813>       MOVE.w D7,$E(A2)
00026AA4 <AmiBlitz3.ab3@9816>     LEA $30(A2),A1
00026AAA <AmiBlitz3.ab3@9817>     LEA temp1,A4
00026AAC <AmiBlitz3.ab3@9820>       MOVE.w (A1),D0
00026AB0 <AmiBlitz3.ab3@9821>       BMI.w JL_0_72AE
00026AB2 <AmiBlitz3.ab3@9822>       MOVE.l A1,(A4)
00026AB4 <AmiBlitz3.ab3@9823>       MOVEA.l A1,A4
00026AB6 <AmiBlitz3.ab3@9824>       ADDQ.w #2,A4
00026AB8 <AmiBlitz3.ab3@9825>       ADDQ.w #6,A1
00026ABC <AmiBlitz3.ab3@9826>       CMP.w #$8,D0
00026AC0 <AmiBlitz3.ab3@9827>       BEQ.w JL_0_7290
00026AC4 <AmiBlitz3.ab3@9828>         ANDI.w #$F,D0
00026AC8 <AmiBlitz3.ab3@9829>         BNE.w JL_0_725C
00026ACC <AmiBlitz3.ab3@9830>           BSR.w skiplibreg
00026AD0 <AmiBlitz3.ab3@9831>           LEA $C(A1),A1
00026AD2 <AmiBlitz3.ab3@9832>           ADDQ.w #1,D7
00026AD6 <AmiBlitz3.ab3@9833> BRA.w JL_0_7230
00026ADA <AmiBlitz3.ab3@9836>     BTST #$2,D0
00026ADE <AmiBlitz3.ab3@9837>     BEQ.w JL_0_7274
00026AE0 <AmiBlitz3.ab3@9838>       ADDQ.w #4,A1
00026AE2 <AmiBlitz3.ab3@9841>         TST.b (A1)+
00026AE6 <AmiBlitz3.ab3@9842>       BPL.w JL_0_7266
00026AEA <AmiBlitz3.ab3@9843>       BSR.w aligna1
00026AEE <AmiBlitz3.ab3@9844> BRA.w JL_0_7290
00026AF0 <AmiBlitz3.ab3@9847>       MOVE.w (A1)+,D0
00026AF4 <AmiBlitz3.ab3@9848>       BMI.w JL_0_7290
00026AF8 <AmiBlitz3.ab3@9849>       ANDI.w #$FF,D0
00026AFA <AmiBlitz3.ab3@9850>       ADDA.w D0,A1
00026AFE <AmiBlitz3.ab3@9851>       BSR.w aligna1
00026B02 <AmiBlitz3.ab3@9852>       BSR.w skiplibreg
00026B06 <AmiBlitz3.ab3@9853>       LEA $C(A1),A1
00026B0A <AmiBlitz3.ab3@9854> BRA.w JL_0_7274
00026B0C <AmiBlitz3.ab3@9857>     MOVE.l A1,(A3)
00026B0E <AmiBlitz3.ab3@9858>     MOVEA.l A1,A3
00026B10 <AmiBlitz3.ab3@9859>     ADDQ.w #4,A1
00026B12 <AmiBlitz3.ab3@9860>     MOVE.w D7,(A1)+
00026B14 <AmiBlitz3.ab3@9863>       TST.b (A1)+
00026B18 <AmiBlitz3.ab3@9864>     BNE.w JL_0_7298
00026B1A <AmiBlitz3.ab3@9867>       TST.b (A1)+
00026B1E <AmiBlitz3.ab3@9868>     BNE.w JL_0_729E
00026B22 <AmiBlitz3.ab3@9870>     BSR.w aligna1
00026B24 <AmiBlitz3.ab3@9871>     ADDQ.w #1,D7
00026B28 <AmiBlitz3.ab3@9872> BRA.w JL_0_7230
00026B2C <AmiBlitz3.ab3@9875>     TST.w $4(A2)
00026B30 <AmiBlitz3.ab3@9876>      BMI.w JL_0_72BA
00026B34 <AmiBlitz3.ab3@9877>     MOVE.w D7,$10(A2)
00026B36 <AmiBlitz3.ab3@9880>     ADDQ.w #2,A1
00026B38 <AmiBlitz3.ab3@9881>     TST.l (A1)+
00026B3C <AmiBlitz3.ab3@9882>      BEQ.w JL_0_72CC
00026B42 <AmiBlitz3.ab3@9883>     ADDQ.w #1,number_of_objects
00026B46 <AmiBlitz3.ab3@9884>     LEA $16(A1),A1
00026B48 <AmiBlitz3.ab3@9887>     SUBA.l A2,A1
00026B4C <AmiBlitz3.ab3@9888>     MOVE.l A1,$12(A2)
00026B4E <AmiBlitz3.ab3@9889>     MOVEA.l (A2),A2
00026B52 <AmiBlitz3.ab3@9890> BRA.w JL_0_720E
00026B54 <AmiBlitz3.ab3@9893>   CLR.l (A3)
00026B5A <AmiBlitz3.ab3@9894> 
00026B60 <AmiBlitz3.ab3@9895>   MOVE.l A7,errstack
00026B6A <AmiBlitz3.ab3@9896>   MOVE.l #AL_0_730E,errcont
00026B72 <AmiBlitz3.ab3@9897>   MOVE.w #$FFFF,ezerr
00026B76 <AmiBlitz3.ab3@9898>   MOVE.w #$FFFA,D1
00026B7A <AmiBlitz3.ab3@9899>    BSR.w JL_0_6F38
00026B80 <AmiBlitz3.ab3@9900>   MOVE.l A1,tempvm
00026B84 <AmiBlitz3.ab3@9901>   MOVE.w #$FDA7,D1
00026B88 <AmiBlitz3.ab3@9902>    BSR.w JL_0_6F38
00026B8E <AmiBlitz3.ab3@9903>   MOVE.l A1,ffplib
00026B90 <AmiBlitz3.ab3@9906> RTS
00026B94 <AmiBlitz3.ab3@9909> ffplib:  Ds.l 1
00026B96 <AmiBlitz3.ab3@9913>     TST.w (A1)+
00026B9A <AmiBlitz3.ab3@9914>     BEQ.w JL_0_7320
00026B9C <AmiBlitz3.ab3@9915>     ADDQ.w #2,A1
00026BA0 <AmiBlitz3.ab3@9916> BRA.w skiplibreg
00026BA2 <AmiBlitz3.ab3@9919> RTS
00026BA4 <AmiBlitz3.ab3@9923>   EXG.l A1,A0
00026BA8 <AmiBlitz3.ab3@9924>   BSR.w aligna1
00026BAA <AmiBlitz3.ab3@9925>   EXG.l A1,A0
00026BAC <AmiBlitz3.ab3@9926> RTS
00026BAE <AmiBlitz3.ab3@9929>   EXG.l D0,A1
00026BB0 <AmiBlitz3.ab3@9930>   ADDQ.l #1,D0
00026BB4 <AmiBlitz3.ab3@9931>   BCLR #$0,D0
00026BB6 <AmiBlitz3.ab3@9932>   EXG.l D0,A1
00026BB8 <AmiBlitz3.ab3@9933> RTS
00026BBE <AmiBlitz3.ab3@9937>   MOVEA.l _execbase,A6
00026BC4 <AmiBlitz3.ab3@9938>   MOVEA.l ptr_userlibs,A2
00026BC6 <AmiBlitz3.ab3@9939>   MOVE.l (A2),D0
00026BC8 <AmiBlitz3.ab3@9940>   CLR.l (A2)
00026BCA <AmiBlitz3.ab3@9941>   MOVEA.l D0,A2
00026BCE <AmiBlitz3.ab3@9944>     CMPA.w #$0,A2
00026BD2 <AmiBlitz3.ab3@9945>     BEQ.w free_userlib
00026BD6 <AmiBlitz3.ab3@9947>     MOVE.l $20(A2),D0
00026BDA <AmiBlitz3.ab3@9948>     BEQ.b JL_0_7360
00026BDC <AmiBlitz3.ab3@9949>       LSL.l #2,D0
00026BE2 <AmiBlitz3.ab3@9950>       MOVE.l mempool,a0
00026BE6 <AmiBlitz3.ab3@9951>       MOVEA.l $24(A2),A1
00026BEA <AmiBlitz3.ab3@9952>       JSR _FreePooled(A6)
00026BEC <AmiBlitz3.ab3@9955>     MOVEA.l A2,A1
00026BF0 <AmiBlitz3.ab3@9956>     MOVE.l $6(A1),D0
00026BF6 <AmiBlitz3.ab3@9957>     MOVE.l mempool,a0
00026BF8 <AmiBlitz3.ab3@9958>     MOVEA.l (A2),A2
00026BFE <AmiBlitz3.ab3@9959>     MOVEA.l _execbase,A6
00026C02 <AmiBlitz3.ab3@9960>     JSR _FreePooled(A6)
00026C06 <AmiBlitz3.ab3@9961> BRA.w JL_0_7348
00026C0A <AmiBlitz3.ab3@9965>   BSR.w free_userlibs
00026C10 <AmiBlitz3.ab3@9966>   MOVEA.l _execbase,A6
00026C16 <AmiBlitz3.ab3@9967>   CLR.l libpointer
00026C1C <AmiBlitz3.ab3@9968>   MOVEA.l end_of_tokenlist,A0
00026C1E <AmiBlitz3.ab3@9969>   CLR.l (A0)
00026C24 <AmiBlitz3.ab3@9971>   MOVE.l size_acidlibs,D0
00026C28 <AmiBlitz3.ab3@9972>   BEQ.b JL_0_73A2
00026C2E <AmiBlitz3.ab3@9973>     MOVE.l ptr_acidlibs,D1
00026C32 <AmiBlitz3.ab3@9974>     BEQ.b JL_0_73A2
00026C38 <AmiBlitz3.ab3@9975>       CLR.l ptr_acidlibs
00026C3A <AmiBlitz3.ab3@9976>       MOVEA.l D1,A1
00026C40 <AmiBlitz3.ab3@9977>       MOVE.l mempool,a0
00026C46 <AmiBlitz3.ab3@9978>       MOVEA.l _execbase,A6
00026C4A <AmiBlitz3.ab3@9979>       JSR _FreePooled(A6)                                 ; free acidlibs
00026C50 <AmiBlitz3.ab3@9982>   MOVE.l size_deflibs,D0
00026C54 <AmiBlitz3.ab3@9983>   BEQ.b JL_0_73BE
00026C5A <AmiBlitz3.ab3@9984>     MOVE.l ptr_deflibs,D1
00026C5E <AmiBlitz3.ab3@9985>     BEQ.b JL_0_73BE
00026C64 <AmiBlitz3.ab3@9986>       CLR.l ptr_deflibs                                    ; d0: memorySize
00026C66 <AmiBlitz3.ab3@9987>       MOVEA.l D1,A1                                        ; a1: memory
00026C6C <AmiBlitz3.ab3@9988>       MOVE.l mempool,a0                                    ; a0: poolHeader
00026C72 <AmiBlitz3.ab3@9989>       MOVEA.l _execbase,A6
00026C76 <AmiBlitz3.ab3@9990>       JSR _FreePooled(A6)                                  ; free deflibs
00026C78 <AmiBlitz3.ab3@9993> RTS
00026C7E <AmiBlitz3.ab3@9997>   MOVEA.l currentmacroaddr,A0
00026C80 <AmiBlitz3.ab3@9998>   MOVEA.l (A0),A2
00026C82 <AmiBlitz3.ab3@9999>   CLR.l (A0)
00026C88 <AmiBlitz3.ab3@10000>   MOVEA.l _execbase,A6
00026C8C <AmiBlitz3.ab3@10003>     CMPA.w #$0,A2
00026C90 <AmiBlitz3.ab3@10004>     BEQ.w JL_0_73FA
00026C92 <AmiBlitz3.ab3@10005>     MOVEQ.l #$00,D0
00026C96 <AmiBlitz3.ab3@10006>     MOVE.w $8(A2),D0
00026C9A <AmiBlitz3.ab3@10007>     BEQ.w JL_0_73E8
00026C9E <AmiBlitz3.ab3@10008>     MOVEA.l $4(A2),A1
00026CA4 <AmiBlitz3.ab3@10009>     MOVE.l mempool,a0
00026CA8 <AmiBlitz3.ab3@10010>     JSR _FreePooled(A6)
00026CAA <AmiBlitz3.ab3@10013>     MOVEA.l A2,A1
00026CAC <AmiBlitz3.ab3@10014>     MOVEA.l (A2),A2
00026CAE <AmiBlitz3.ab3@10015>     MOVEQ.l #$00,D0
00026CB2 <AmiBlitz3.ab3@10016>     MOVE.b $C(A1),D0
00026CB8 <AmiBlitz3.ab3@10017>     MOVE.l mempool2,a0
00026CBC <AmiBlitz3.ab3@10018>     JSR _FreePooled(A6)
00026CC0 <AmiBlitz3.ab3@10019> BRA.w JL_0_73CE
00026CC2 <AmiBlitz3.ab3@10022> RTS
00026CC8 <AmiBlitz3.ab3@10026>   MOVEA.l templabel,A2
00026CCE <AmiBlitz3.ab3@10027>   CLR.l templabel
00026CD0 <AmiBlitz3.ab3@10028> RTS
00026CD6 <AmiBlitz3.ab3@10031>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00026CDA <AmiBlitz3.ab3@10034>     CMPA.w #$0,A2
00026CDE <AmiBlitz3.ab3@10035>     BEQ.w JL_0_7426
00026CE0 <AmiBlitz3.ab3@10036>     MOVEQ.l #$00,D0
00026CE4 <AmiBlitz3.ab3@10037>     MOVE.b $E(A2),D0                                       ;labeltemp
00026CE6 <AmiBlitz3.ab3@10038>     MOVEA.l A2,A1
00026CE8 <AmiBlitz3.ab3@10039>     MOVEA.l (A2),A2
00026CEE <AmiBlitz3.ab3@10040>     MOVE.l mempool2,a0
00026CF2 <AmiBlitz3.ab3@10042> BRA.w JL_0_740C
00026CF4 <AmiBlitz3.ab3@10045> RTS
00026CFA <AmiBlitz3.ab3@10049>   MOVEA.l data1,A4
00026D00 <AmiBlitz3.ab3@10050>   CMPA.l data2at,A4
00026D04 <AmiBlitz3.ab3@10051>   BCC.w JL_0_7442
00026D06 <AmiBlitz3.ab3@10052>     MOVE.b D1,(A4)+
00026D0C <AmiBlitz3.ab3@10053>     MOVE.l A4,data1
00026D0E <AmiBlitz3.ab3@10054> RTS
00026D16 <AmiBlitz3.ab3@10057>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00026D1C <AmiBlitz3.ab3@10058>   ADDQ.l #1,data1
00026D1E <AmiBlitz3.ab3@10059> RTS
00026D20 <AmiBlitz3.ab3@10063>   SWAP D1
00026D24 <AmiBlitz3.ab3@10064>   BSR.w pokedata1
00026D26 <AmiBlitz3.ab3@10065>   SWAP D1
00026D2C <AmiBlitz3.ab3@10068>   MOVEA.l data1,A4
00026D32 <AmiBlitz3.ab3@10069>   CMPA.l data2at,A4
00026D36 <AmiBlitz3.ab3@10070>    BCC.w JL_0_7474
00026D38 <AmiBlitz3.ab3@10071>   MOVE.w D1,(A4)+
00026D3E <AmiBlitz3.ab3@10072>   MOVE.l A4,data1
00026D40 <AmiBlitz3.ab3@10073> RTS
00026D48 <AmiBlitz3.ab3@10076>   MOVE.w #$FFFF,dontwrite
00026D4E <AmiBlitz3.ab3@10077>   ADDQ.l #2,data1
00026D50 <AmiBlitz3.ab3@10078> RTS
00026D56 <AmiBlitz3.ab3@10082>   MOVE.l data1,D3                                      ;write local string/type allocs
00026D58 <AmiBlitz3.ab3@10083>   MOVEQ.l #$00,D4
00026D5C <AmiBlitz3.ab3@10086>   CMPA.w #$0,A2
00026D60 <AmiBlitz3.ab3@10087>    BEQ.w JL_0_74CAc
00026D64 <AmiBlitz3.ab3@10088>   TST.w $6(A2)
00026D68 <AmiBlitz3.ab3@10089>    BNE.w JL_0_74C4c
00026D6C <AmiBlitz3.ab3@10090>   MOVEA.l $A(A2),A3
00026D74 <AmiBlitz3.ab3@10091>   CMPI.l #$100,$4(A3)
00026D78 <AmiBlitz3.ab3@10092>    BCS.w JL_0_74C4c
00026D7C <AmiBlitz3.ab3@10093>   MOVE.w $4(A2),D1
00026D80 <AmiBlitz3.ab3@10094>    BSR.w pokedata1
00026D84 <AmiBlitz3.ab3@10095>   MOVE.w $8(A3),D1
00026D88 <AmiBlitz3.ab3@10096>    BSR.w pokedata1
00026D8A <AmiBlitz3.ab3@10097>   ADDQ.w #1,D4
00026D8C <AmiBlitz3.ab3@10100>    MOVEA.l (A2),A2
00026D90 <AmiBlitz3.ab3@10101> BRA.w JL_0_7492c
00026D92 <AmiBlitz3.ab3@10104>    TST.w D4
00026D96 <AmiBlitz3.ab3@10105>    BEQ.w JL_0_74E0
00026D9A <AmiBlitz3.ab3@10106>   MOVE.w #$FF37,D1
00026D9E <AmiBlitz3.ab3@10107>    BSR.w uselib
00026DA2 <AmiBlitz3.ab3@10108>   MOVE.w #$FFFA,D1
00026DA6 <AmiBlitz3.ab3@10109> BRA.w uselib
00026DAC <AmiBlitz3.ab3@10117>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00026DB2 <AmiBlitz3.ab3@10120>   MOVE.l data1,D3
00026DB4 <AmiBlitz3.ab3@10121>   MOVEQ.l #$00,D4
00026DBA <AmiBlitz3.ab3@10122>   TST.b iserror
00026DBE <AmiBlitz3.ab3@10123>   BEQ JL_0_7492
00026DC0 <AmiBlitz3.ab3@10124>   RTS
00026DC4 <AmiBlitz3.ab3@10126>    CMPA.w #$0,A2
00026DC8 <AmiBlitz3.ab3@10127>    BEQ.w JL_0_74CA
00026DCC <AmiBlitz3.ab3@10128>   TST.w $6(A2)
00026DD0 <AmiBlitz3.ab3@10129>    BNE.w JL_0_74C4
00026DD4 <AmiBlitz3.ab3@10130>   MOVEA.l $A(A2),A3
00026DDC <AmiBlitz3.ab3@10131>   CMPI.l #$100,$4(A3)
00026DE0 <AmiBlitz3.ab3@10132>    BCS.w JL_0_74C4
00026DE4 <AmiBlitz3.ab3@10133>   MOVE.w $4(A2),D1
00026DE8 <AmiBlitz3.ab3@10134>    BSR.w pokedata1
00026DEC <AmiBlitz3.ab3@10135>   MOVE.w $8(A3),D1
00026DF0 <AmiBlitz3.ab3@10136>    BSR.w pokedata1
00026DF2 <AmiBlitz3.ab3@10137>   ADDQ.w #1,D4
00026DF4 <AmiBlitz3.ab3@10140>   MOVEA.l (A2),A2
00026DF8 <AmiBlitz3.ab3@10141> BRA.w JL_0_7492
00026DFE <AmiBlitz3.ab3@10145>   MOVEA.l sharebase,A2
00026E02 <AmiBlitz3.ab3@10148>   CMPA.w #$0,A2
00026E06 <AmiBlitz3.ab3@10149>    BEQ.w JL_0_74CAb
00026E0A <AmiBlitz3.ab3@10151>   TST.w $6(A2)
00026E0E <AmiBlitz3.ab3@10152>    BNE.w JL_0_74C4b
00026E12 <AmiBlitz3.ab3@10153>   MOVEA.l $A(A2),A3
00026E1A <AmiBlitz3.ab3@10154>   CMPI.l #$100,$4(A3)
00026E1E <AmiBlitz3.ab3@10155>    BCS.w JL_0_74C4b
00026E22 <AmiBlitz3.ab3@10156>   MOVE.w $4(A2),D1
00026E26 <AmiBlitz3.ab3@10157>    BSR.w pokedata1
00026E2A <AmiBlitz3.ab3@10158>   MOVE.w $8(A3),D1
00026E2E <AmiBlitz3.ab3@10159>    BSR.w pokedata1
00026E30 <AmiBlitz3.ab3@10160>   ADDQ.w #1,D4
00026E32 <AmiBlitz3.ab3@10163>   MOVEA.l (A2),A2
00026E36 <AmiBlitz3.ab3@10164> BRA.w JL_0_7492b
00026E38 <AmiBlitz3.ab3@10167>    TST.w D4
00026E3C <AmiBlitz3.ab3@10168>    BEQ.w JL_0_74E0
00026E40 <AmiBlitz3.ab3@10169>   MOVE.w #$FF37,D1
00026E44 <AmiBlitz3.ab3@10170>    BSR.w uselib                                            ;use statics lib
00026E48 <AmiBlitz3.ab3@10171>   MOVE.w #$FFFA,D1                                         ;use memlib
00026E4C <AmiBlitz3.ab3@10172> BRA.w uselib
00026E4E <AmiBlitz3.ab3@10175> RTS
00026E54 <AmiBlitz3.ab3@10179>   MOVE.w numtoa2,D1
00026E58 <AmiBlitz3.ab3@10180>    BSR.w writeword
00026E5C <AmiBlitz3.ab3@10181>    BSR.w addoff
00026E5E <AmiBlitz3.ab3@10182>   MOVE.l D3,D1
00026E62 <AmiBlitz3.ab3@10183>    BSR.w writelong
00026E64 <AmiBlitz3.ab3@10184>   SUBQ.w #1,D4
00026E6A <AmiBlitz3.ab3@10185>   MOVE.w D4,endarray+2
00026E70 <AmiBlitz3.ab3@10186>   MOVE.l endarray,D1
00026E74 <AmiBlitz3.ab3@10187> BRA.w writelong
00026E76 <AmiBlitz3.ab3@10191>   MOVE.l D3,-(A7)
00026E7C <AmiBlitz3.ab3@10194>   MOVEA.l _dosbase,A6
00026E80 <AmiBlitz3.ab3@10195>   JSR _Write(a6)
00026E82 <AmiBlitz3.ab3@10197>   CMP.l (A7)+,D0
00026E86 <AmiBlitz3.ab3@10198>    BNE.w JL_0_7516
00026E88 <AmiBlitz3.ab3@10199> RTS
00026E8A <AmiBlitz3.ab3@10202>   MOVE.l D7,D1
00026E90 <AmiBlitz3.ab3@10204>   MOVEA.l _dosbase,A6
00026E94 <AmiBlitz3.ab3@10205>   JSR _Close(a6)
00026E9A <AmiBlitz3.ab3@10208> JMP error_create_exe
00026EA0 <AmiBlitz3.ab3@10217> 
00026EA6 <AmiBlitz3.ab3@10218>   MOVE.l A7,errstack
00026EAA <AmiBlitz3.ab3@10219>   MOVEM.l d2-d7/a2-a6,-(a7)
00026EB4 <AmiBlitz3.ab3@10220>   MOVE.l #AL_0_7790,errcont
00026EBA <AmiBlitz3.ab3@10221>    JSR call_setpointerbusy
00026EC2 <AmiBlitz3.ab3@10222>   MOVE.w #$FFFF,anyerrs
00026ECC <AmiBlitz3.ab3@10223>   CMP.l #-1,chipstart
00026ED0 <AmiBlitz3.ab3@10224>   BEQ 'l01
00026ED6 <AmiBlitz3.ab3@10225>   MOVE.l chipend,d1
00026ED8 <AmiBlitz3.ab3@10226>   ADDQ.l #3,d1
00026EDE <AmiBlitz3.ab3@10227>   AND.l #$fffffffc,d1                                      ;bug
00026EE4 <AmiBlitz3.ab3@10228>   MOVE.l d1,chipend
00026EE6 <AmiBlitz3.ab3@10229>   MOVE.l d1,a1
00026EEC <AmiBlitz3.ab3@10230>   MOVE.l chipstart,a0
00026EEE <AmiBlitz3.ab3@10231>   MOVE.l a1,d1
00026EF0 <AmiBlitz3.ab3@10232>   SUB.l a0,d1
00026EF6 <AmiBlitz3.ab3@10233>   MOVE.l d1,chipsize
00026F00 <AmiBlitz3.ab3@10236>   CMP.l #-1,bssstart
00026F04 <AmiBlitz3.ab3@10237>   BEQ 'l11
00026F0A <AmiBlitz3.ab3@10238>   MOVE.l realbssend,a1
00026F10 <AmiBlitz3.ab3@10239>   MOVE.l bssstart,a0
00026F12 <AmiBlitz3.ab3@10240>   MOVE.l a1,d1
00026F14 <AmiBlitz3.ab3@10241>   SUB.l a0,d1
00026F1A <AmiBlitz3.ab3@10242>   MOVE.l d1,bsssize
00026F1E <AmiBlitz3.ab3@10243>   BEQ 'l11
00026F20 <AmiBlitz3.ab3@10246>   TST.b (a0)+
00026F24 <AmiBlitz3.ab3@10247>   BEQ 'l31
00026F2A <AmiBlitz3.ab3@10248>   TST.b debugmode
00026F2E <AmiBlitz3.ab3@10249>   BEQ 'l1
00026F34 <AmiBlitz3.ab3@10250>   TST.b exdebug
00026F38 <AmiBlitz3.ab3@10251>   BNE 'l31
00026F3E <AmiBlitz3.ab3@10254>   MOVE.l #nodata,-(a7)
00026F44 <AmiBlitz3.ab3@10255> JMP handle_compileerror
00026F46 <AmiBlitz3.ab3@10258>   CMP.l a0,a1
00026F4A <AmiBlitz3.ab3@10259>   BGT 'l32
00026F50 <AmiBlitz3.ab3@10260>   MOVE.l bssend,d1
00026F52 <AmiBlitz3.ab3@10261>   ADDQ.l #3,d1
00026F58 <AmiBlitz3.ab3@10262>   AND.l #$fffffffc,d1                                      ;bug
00026F5E <AmiBlitz3.ab3@10263>   MOVE.l d1,bssend
00026F60 <AmiBlitz3.ab3@10264>   MOVE.l d1,a1
00026F66 <AmiBlitz3.ab3@10265>   MOVE.l bssstart,a0
00026F68 <AmiBlitz3.ab3@10266>   MOVE.l a1,d1
00026F6A <AmiBlitz3.ab3@10267>   SUB.l a0,d1
00026F70 <AmiBlitz3.ab3@10268>   MOVE.l d1,bsssize
00026F74 <AmiBlitz3.ab3@10271>   MOVEM.l d5-d7/d3,-(a7)
00026F7A <AmiBlitz3.ab3@10272>   MOVE.w dontwrite,D1
00026F7E <AmiBlitz3.ab3@10273>   BNE.w JL_0_757C
00026F84 <AmiBlitz3.ab3@10274>   MOVE.l chipsize,d5
00026F8A <AmiBlitz3.ab3@10275>   MOVE.l bsssize,d3
00026F90 <AmiBlitz3.ab3@10276>   MOVE.l chipstart,d7
00026F96 <AmiBlitz3.ab3@10277>   MOVE.l bssstart,d6
00026F9C <AmiBlitz3.ab3@10278>   MOVEA.l hunkoffsetbase,A2
00026FA2 <AmiBlitz3.ab3@10279>   MOVEA.l destbufferstart,A1
00026FA4 <AmiBlitz3.ab3@10280>   MOVE.l A1,D2
00026FAA <AmiBlitz3.ab3@10281>   ADD.l noinits,D2
00026FB0 <AmiBlitz3.ab3@10282>   CLR.l hunkoffsetnum
00026FB4 <AmiBlitz3.ab3@10285>   CMPA.w #$0,A2
00026FB8 <AmiBlitz3.ab3@10286>    BEQ.w JL_0_757C
00026FBC <AmiBlitz3.ab3@10287>   MOVE.l $4(A2),D0
00026FC0 <AmiBlitz3.ab3@10288>    LEA $0(a1,d0.l),a0
00026FC2 <AmiBlitz3.ab3@10289>    MOVE.l (a0),d1
00026FC4 <AmiBlitz3.ab3@10290>   TST.l d1
00026FC8 <AmiBlitz3.ab3@10291>    BMI.w 'lm1
00026FD0 <AmiBlitz3.ab3@10292>   MOVE.b #0,newhunk
00026FDA <AmiBlitz3.ab3@10293>   CMP.l #-1,chipstart
00026FDE <AmiBlitz3.ab3@10294>   BEQ 'l10
00026FE4 <AmiBlitz3.ab3@10295>   CMP.l chipstart,d1
00026FE8 <AmiBlitz3.ab3@10296>   BLT 'l10
00026FF0 <AmiBlitz3.ab3@10297>   MOVE.b #1,newhunk
00026FF6 <AmiBlitz3.ab3@10298>   CMP.l chipend,d1
00026FFA <AmiBlitz3.ab3@10299>   BGE 'l110
00026FFC <AmiBlitz3.ab3@10300>   SUB.l d7,(a0)
00027004 <AmiBlitz3.ab3@10301>   ADD.l #$80000000,4(a2)
00027008 <AmiBlitz3.ab3@10302> BRA JL_0_7576
0002700C <AmiBlitz3.ab3@10305>   SUB.l d5,0(a0)
00027016 <AmiBlitz3.ab3@10308>   CMP.l #-1,bssstart
0002701A <AmiBlitz3.ab3@10309>     BEQ 'l11
00027020 <AmiBlitz3.ab3@10310>   CMP.l bssstart,d1
00027024 <AmiBlitz3.ab3@10311>   BLT 'l11
0002702A <AmiBlitz3.ab3@10312>   CMP.l bssend,d1
0002702E <AmiBlitz3.ab3@10313>   BGE 'l111
00027034 <AmiBlitz3.ab3@10314>   TST.b newhunk
00027038 <AmiBlitz3.ab3@10315>   BEQ 'ln1
0002703A <AmiBlitz3.ab3@10316>   ADD.l d5,(a0)
0002703C <AmiBlitz3.ab3@10319>   SUB.l d6,(a0)
00027044 <AmiBlitz3.ab3@10320>   ADD.l #$40000000,4(a2)
00027048 <AmiBlitz3.ab3@10321> BRA JL_0_7576
0002704C <AmiBlitz3.ab3@10324>   SUB.l d3,0(a0)
0002704E <AmiBlitz3.ab3@10327>   SUB.l D2,(A0)
00027054 <AmiBlitz3.ab3@10330>   ADDQ.l #1,hunkoffsetnum
00027056 <AmiBlitz3.ab3@10333>    MOVEA.l (A2),A2
0002705A <AmiBlitz3.ab3@10334> BRA.w JL_0_755E
0002705E <AmiBlitz3.ab3@10338>   MOVEM.l (a7)+,d5-d7/d3
00027064 <AmiBlitz3.ab3@10339>   MOVE.l ptr_newexefilename,D1
0002706A <AmiBlitz3.ab3@10340>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027070 <AmiBlitz3.ab3@10341>   MOVEA.l _dosbase,A6
00027074 <AmiBlitz3.ab3@10342>    JSR _Open(A6)
00027076 <AmiBlitz3.ab3@10343>   MOVE.l D0,D7
0002707A <AmiBlitz3.ab3@10344>    BEQ.w execerr
00027080 <AmiBlitz3.ab3@10345>   MOVE.l objlen,D0
00027086 <AmiBlitz3.ab3@10346>   SUB.l #moremem,d0
0002708C <AmiBlitz3.ab3@10347>   SUB.l noinits,D0
00027096 <AmiBlitz3.ab3@10348>   CMP.l #-1,bssstart
0002709A <AmiBlitz3.ab3@10349>   BEQ 'l60
000270A0 <AmiBlitz3.ab3@10350>   SUB.l bsssize,d0
000270A6 <AmiBlitz3.ab3@10351>   SUB.l chipsize,d0
000270AA <AmiBlitz3.ab3@10352> BRA.s 'l61
000270B4 <AmiBlitz3.ab3@10355>   CMP.l #-1,chipstart
000270B8 <AmiBlitz3.ab3@10356>   BEQ 'l61
000270BE <AmiBlitz3.ab3@10357>   SUB.l bsssize,d0
000270C4 <AmiBlitz3.ab3@10358>   SUB.l chipsize,d0
000270C6 <AmiBlitz3.ab3@10361>   ADDQ.l #3,D0
000270C8 <AmiBlitz3.ab3@10362>   LSR.l #2,D0
000270CE <AmiBlitz3.ab3@10363>   MOVE.l D0,tstsize1
000270D4 <AmiBlitz3.ab3@10364>   MOVE.l D0,tstsize2
000270D6 <AmiBlitz3.ab3@10365>   MOVE.l D7,D1
000270DC <AmiBlitz3.ab3@10366>   MOVE.l #tsthead,D2                                      ;hunkbegin
000270DE <AmiBlitz3.ab3@10367>   MOVEQ.l #$20,D3
000270E8 <AmiBlitz3.ab3@10368>   CMP.l #-1,bssstart
000270EC <AmiBlitz3.ab3@10369>   BEQ 'lb1
000270F6 <AmiBlitz3.ab3@10370>   CMP.l #-1,chipstart
000270FA <AmiBlitz3.ab3@10371>   BEQ 'lb1
00027104 <AmiBlitz3.ab3@10372>   MOVE.l #1,bssnum
0002710E <AmiBlitz3.ab3@10373>   MOVE.l #2,chipnum
00027110 <AmiBlitz3.ab3@10374>   MOVEQ.l #$28,D3
00027116 <AmiBlitz3.ab3@10375>   MOVE.l bsssize,d2
00027118 <AmiBlitz3.ab3@10376>   ADDQ.l #3,d2
0002711A <AmiBlitz3.ab3@10377>   ASR.l #2,d2
00027120 <AmiBlitz3.ab3@10378>   MOVE.l d2,hunkend+8
00027126 <AmiBlitz3.ab3@10379>   MOVE.l d2,bsssize3
0002712C <AmiBlitz3.ab3@10380>   MOVE.l chipsize,d2
0002712E <AmiBlitz3.ab3@10381>   ADDQ.l #3,d2
00027130 <AmiBlitz3.ab3@10382>   ASR.l #2,d2
00027136 <AmiBlitz3.ab3@10383>   MOVE.l d2,chipsize2
00027140 <AmiBlitz3.ab3@10384>   ADD.l #$40000000,chipsize2
00027146 <AmiBlitz3.ab3@10385>   MOVE.l d2,hunkend2+8
0002714C <AmiBlitz3.ab3@10386>   MOVE.l D0,tstsize1c
00027152 <AmiBlitz3.ab3@10387>   MOVE.l D0,tstsize2c
00027158 <AmiBlitz3.ab3@10388>   MOVE.l #hunkbegin2,d2
0002715C <AmiBlitz3.ab3@10389> BRA 'l100
00027166 <AmiBlitz3.ab3@10392>   CMP.l #-1,bssstart
0002716A <AmiBlitz3.ab3@10393>   BEQ 'l10
00027174 <AmiBlitz3.ab3@10394>   MOVE.l #1,bssnum
00027176 <AmiBlitz3.ab3@10395>   MOVEQ.l #$24,D3
0002717C <AmiBlitz3.ab3@10396>   MOVE.l bsssize,d2
0002717E <AmiBlitz3.ab3@10397>   ADDQ.l #3,d2
00027180 <AmiBlitz3.ab3@10398>   ASR.l #2,d2
00027186 <AmiBlitz3.ab3@10399>   MOVE.l d2,hunkend+8
0002718C <AmiBlitz3.ab3@10400>   MOVE.l d2,bsssize2
00027192 <AmiBlitz3.ab3@10401>   MOVE.l D0,tstsize1b
00027198 <AmiBlitz3.ab3@10402>   MOVE.l D0,tstsize2b
0002719E <AmiBlitz3.ab3@10403>   MOVE.l #hunkbegin,d2
000271A8 <AmiBlitz3.ab3@10406>   CMP.l #-1,chipstart
000271AC <AmiBlitz3.ab3@10407>   BEQ 'l100
000271B6 <AmiBlitz3.ab3@10408>   MOVE.l #1,chipnum
000271B8 <AmiBlitz3.ab3@10409>   MOVEQ.l #$24,D3
000271BE <AmiBlitz3.ab3@10410>   MOVE.l chipsize,d2
000271C0 <AmiBlitz3.ab3@10411>   ADDQ.l #3,d2
000271C2 <AmiBlitz3.ab3@10412>   ASR.l #2,d2
000271C8 <AmiBlitz3.ab3@10413>   MOVE.l d2,hunkend2+8
000271CE <AmiBlitz3.ab3@10414>   MOVE.l d2,bsssize2
000271D8 <AmiBlitz3.ab3@10415>   ADD.l #$40000000,bsssize2
000271DE <AmiBlitz3.ab3@10416>   MOVE.l D0,tstsize1b
000271E4 <AmiBlitz3.ab3@10417>   MOVE.l D0,tstsize2b
000271EA <AmiBlitz3.ab3@10418>   MOVE.l #hunkbegin,d2
000271EE <AmiBlitz3.ab3@10421>    BSR.w mywrite
000271F4 <AmiBlitz3.ab3@10422>   MOVE.l destbufferstart,D2
000271FA <AmiBlitz3.ab3@10423>   ADD.l noinits,D2
00027200 <AmiBlitz3.ab3@10424>   MOVE.l objlen,D3
00027206 <AmiBlitz3.ab3@10425>   SUB.l #moremem,d3
0002720C <AmiBlitz3.ab3@10426>   SUB.l noinits,D3
00027216 <AmiBlitz3.ab3@10427>   CMP.l #-1,bssstart
0002721A <AmiBlitz3.ab3@10428>   BNE 'l40
00027224 <AmiBlitz3.ab3@10429>   CMP.l #-1,chipstart
00027228 <AmiBlitz3.ab3@10430>   BNE 'l40
0002722C <AmiBlitz3.ab3@10431> BRA 'l41
00027232 <AmiBlitz3.ab3@10434>   MOVE.l codeend,d1
00027234 <AmiBlitz3.ab3@10435>     SUB.l d2,d1
00027236 <AmiBlitz3.ab3@10436>     MOVE.l d1,d3
0002723C <AmiBlitz3.ab3@10437>   SUB.l bsssize,d3
00027242 <AmiBlitz3.ab3@10438>   SUB.l chipsize,d3
00027244 <AmiBlitz3.ab3@10439>   MOVE.l D7,D1
00027248 <AmiBlitz3.ab3@10440>   BSR.w mywrite
0002724E <AmiBlitz3.ab3@10441>   MOVE.l objlen,D3
00027254 <AmiBlitz3.ab3@10442>   SUB.l #moremem,d3
0002725A <AmiBlitz3.ab3@10443>   SUB.l noinits,D3
0002725C <AmiBlitz3.ab3@10444>   MOVE.l d3,d1
00027262 <AmiBlitz3.ab3@10445>   MOVE.l destbufferstart,D2
00027268 <AmiBlitz3.ab3@10446>   ADD.l noinits,D2
0002726A <AmiBlitz3.ab3@10447>   ADD.l d2,d1
00027270 <AmiBlitz3.ab3@10448>   SUB.l codeend,d1
00027272 <AmiBlitz3.ab3@10449>   MOVE.l d1,d3
00027278 <AmiBlitz3.ab3@10450>   MOVE.l codeend,d2
0002727A <AmiBlitz3.ab3@10453>   MOVE.l d2,d1
0002727C <AmiBlitz3.ab3@10454>   ADD.l d3,d1
0002727E <AmiBlitz3.ab3@10455>   ADDQ.l #3,D1
00027284 <AmiBlitz3.ab3@10456>   ANDI.l #$FFFFFFFC,D1
00027286 <AmiBlitz3.ab3@10457>   SUB.l d2,d1
00027288 <AmiBlitz3.ab3@10458>   MOVE.l d1,d3
0002728A <AmiBlitz3.ab3@10459>   MOVE.l D7,D1
0002728E <AmiBlitz3.ab3@10460>    BSR.w mywrite
00027298 <AmiBlitz3.ab3@10461>   MOVE.l hunkoffsetcounter,tstsize3
0002729C <AmiBlitz3.ab3@10462>    BEQ.w JL_0_7646
0002729E <AmiBlitz3.ab3@10463>   MOVE.l D7,D1
000272A4 <AmiBlitz3.ab3@10464>   MOVE.l #tstend,D2
000272A6 <AmiBlitz3.ab3@10465>   MOVEQ.l #$04,D3
000272AA <AmiBlitz3.ab3@10466>    BSR.w mywrite
000272B0 <AmiBlitz3.ab3@10467>    MOVEA.l _execbase,A6
000272B6 <AmiBlitz3.ab3@10468>    MOVE.l hunkoffsetcounter,d0
000272B8 <AmiBlitz3.ab3@10469>    ASL.l #2,d0
000272BE <AmiBlitz3.ab3@10470>    ADD.l #12,d0
000272C0 <AmiBlitz3.ab3@10471>    MOVEQ #0,d1
000272C4 <AmiBlitz3.ab3@10472>    JSR _AllocMem(a6)
000272C6 <AmiBlitz3.ab3@10473>    TST.l d0
000272CA <AmiBlitz3.ab3@10474>    BEQ nomem
000272D0 <AmiBlitz3.ab3@10475>    MOVE.l noinits,D4
000272D2 <AmiBlitz3.ab3@10476>    MOVE.l d5,-(a7)
000272D4 <AmiBlitz3.ab3@10477>    MOVE.l d0,d5
000272D6 <AmiBlitz3.ab3@10478>    MOVE.l d0,a1
000272DC <AmiBlitz3.ab3@10479>    MOVEA.l hunkoffsetbase,A2
000272E4 <AmiBlitz3.ab3@10480>    MOVE.b #0,newhunk
000272E8 <AmiBlitz3.ab3@10483>   CMPA.w #$0,A2
000272EC <AmiBlitz3.ab3@10484>    BEQ.w savehunk
000272F2 <AmiBlitz3.ab3@10485>   MOVE.l destbufferstart,D2
000272F8 <AmiBlitz3.ab3@10486>   ADD.l noinits,D2
000272FC <AmiBlitz3.ab3@10487>   MOVE.l  $4(A2),d1
00027300 <AmiBlitz3.ab3@10488>   BTST #31,d1
00027304 <AmiBlitz3.ab3@10489>   BEQ 'lh1
0002730C <AmiBlitz3.ab3@10490>   MOVE.b #1,newhunk
00027310 <AmiBlitz3.ab3@10491> BRA 'lh3
00027314 <AmiBlitz3.ab3@10494>   BTST #30,d1
00027318 <AmiBlitz3.ab3@10495>   BEQ 'lh2
00027320 <AmiBlitz3.ab3@10496>   MOVE.b #1,newhunk
00027324 <AmiBlitz3.ab3@10497> BRA 'lh3
00027326 <AmiBlitz3.ab3@10500>   ADD.l d1,d2
0002732C <AmiBlitz3.ab3@10501>   CMP.l chipend,d2
00027330 <AmiBlitz3.ab3@10502>   BLT 'l100
00027336 <AmiBlitz3.ab3@10503>   SUB.l chipsize,d1
0002733C <AmiBlitz3.ab3@10506>   CMP.l bssend,d2
00027340 <AmiBlitz3.ab3@10507>   BLT 'l101
00027346 <AmiBlitz3.ab3@10508>   SUB.l bsssize,d1
00027348 <AmiBlitz3.ab3@10511>   MOVE.l d1,(a1)
0002734A <AmiBlitz3.ab3@10512>   SUB.l D4,(A1)+
0002734C <AmiBlitz3.ab3@10515>   MOVEA.l (A2),A2
00027350 <AmiBlitz3.ab3@10516> BRA.w menu_createresidentfile__oloopb
00027352 <AmiBlitz3.ab3@10520>   MOVE.l D7,D1
00027358 <AmiBlitz3.ab3@10521>   MOVEA.l _dosbase,A6
00027362 <AmiBlitz3.ab3@10522>   MOVE.l hunkoffsetnum,tstsize3
00027366 <AmiBlitz3.ab3@10523>   BEQ 'ln1
0002736C <AmiBlitz3.ab3@10524>   MOVE.l #tstend+4,d2
0002736E <AmiBlitz3.ab3@10525>     MOVEQ #8,d3
00027372 <AmiBlitz3.ab3@10526>    JSR _Write(A6)
00027374 <AmiBlitz3.ab3@10527>   MOVE.l d7,d1
0002737A <AmiBlitz3.ab3@10528>   MOVE.l hunkoffsetnum,d3
0002737C <AmiBlitz3.ab3@10529>   ASL.l #2,d3
0002737E <AmiBlitz3.ab3@10530>   MOVE.l d5,D2
00027382 <AmiBlitz3.ab3@10531>   JSR _Write(a6)
00027388 <AmiBlitz3.ab3@10534>   TST.b newhunk
0002738C <AmiBlitz3.ab3@10535>   BEQ 'l10
00027392 <AmiBlitz3.ab3@10536>   MOVEA.l hunkoffsetbase,A2
00027394 <AmiBlitz3.ab3@10537>   MOVE.l d5,a0
00027396 <AmiBlitz3.ab3@10538>   ADDQ #8,a0
0002739E <AmiBlitz3.ab3@10539>   MOVE.l bssnum,-4(a0)
000273A0 <AmiBlitz3.ab3@10540>   MOVEQ #0,d6
000273A4 <AmiBlitz3.ab3@10543>   CMPA.w #$0,A2
000273A8 <AmiBlitz3.ab3@10544>    BEQ.w 'lh3
000273AE <AmiBlitz3.ab3@10545>   MOVE.l destbufferstart,D2
000273B4 <AmiBlitz3.ab3@10546>   ADD.l noinits,D2
000273B8 <AmiBlitz3.ab3@10547>   MOVE.l  $4(A2),d1
000273BC <AmiBlitz3.ab3@10548>   BTST #30,d1
000273C0 <AmiBlitz3.ab3@10549>   BEQ 'lh1
000273C4 <AmiBlitz3.ab3@10550>   BCLR #30,d1
000273C6 <AmiBlitz3.ab3@10551>   MOVE.l d1,(a0)
000273C8 <AmiBlitz3.ab3@10552>   SUB.l D4,(A0)+
000273CA <AmiBlitz3.ab3@10553>   ADDQ.l #1,d6
000273CC <AmiBlitz3.ab3@10556>   MOVE.l (a2),a2
000273D0 <AmiBlitz3.ab3@10557> BRA 'lh2
000273D2 <AmiBlitz3.ab3@10560>   TST.l d6
000273D6 <AmiBlitz3.ab3@10561>     BEQ 'lh10
000273D8 <AmiBlitz3.ab3@10562>     MOVE.l d5,a0
000273DA <AmiBlitz3.ab3@10563>     MOVE.l d6,(a0)
000273DC <AmiBlitz3.ab3@10564>     MOVE.l d7,d1
000273DE <AmiBlitz3.ab3@10565>     MOVE.l d5,d2
000273E0 <AmiBlitz3.ab3@10566>     MOVE.l d6,d3
000273E2 <AmiBlitz3.ab3@10567>     ASL.l #2,d3
000273E4 <AmiBlitz3.ab3@10568>     ADDQ.l #8,d3
000273E8 <AmiBlitz3.ab3@10569>     BSR.w mywrite
000273EE <AmiBlitz3.ab3@10572>   MOVEA.l hunkoffsetbase,A2
000273F0 <AmiBlitz3.ab3@10573>   MOVE.l d5,a0
000273F2 <AmiBlitz3.ab3@10574>   ADDQ #8,a0
000273FA <AmiBlitz3.ab3@10575>   MOVE.l chipnum,-4(a0)
000273FC <AmiBlitz3.ab3@10576>   MOVEQ #0,d6
00027400 <AmiBlitz3.ab3@10579>   CMPA.w #$0,A2
00027404 <AmiBlitz3.ab3@10580>    BEQ.w 'lh30
0002740A <AmiBlitz3.ab3@10581>   MOVE.l destbufferstart,D2
00027410 <AmiBlitz3.ab3@10582>   ADD.l noinits,D2
00027414 <AmiBlitz3.ab3@10583>   MOVE.l  $4(A2),d1
00027418 <AmiBlitz3.ab3@10584>   BTST #31,d1
0002741C <AmiBlitz3.ab3@10585>   BEQ 'lh11
00027420 <AmiBlitz3.ab3@10586>   BCLR #31,d1
00027422 <AmiBlitz3.ab3@10587>   MOVE.l d1,(a0)
00027424 <AmiBlitz3.ab3@10588>   SUB.l D4,(A0)+
00027426 <AmiBlitz3.ab3@10589>   ADDQ.l #1,d6
00027428 <AmiBlitz3.ab3@10592>   MOVE.l (a2),a2
0002742C <AmiBlitz3.ab3@10593> BRA 'lh20
0002742E <AmiBlitz3.ab3@10596>   TST.l d6
00027432 <AmiBlitz3.ab3@10597>     BEQ 'l10
00027434 <AmiBlitz3.ab3@10598>     MOVE.l d5,a0
00027436 <AmiBlitz3.ab3@10599>     MOVE.l d6,(a0)
00027438 <AmiBlitz3.ab3@10600>     MOVE.l d7,d1
0002743A <AmiBlitz3.ab3@10601>     MOVE.l d5,d2
0002743C <AmiBlitz3.ab3@10602>     MOVE.l d6,d3
0002743E <AmiBlitz3.ab3@10603>     ASL.l #2,d3
00027440 <AmiBlitz3.ab3@10604>     ADDQ.l #8,d3
00027444 <AmiBlitz3.ab3@10605>     BSR.w mywrite
0002744A <AmiBlitz3.ab3@10609>    MOVEA.l _execbase,A6
00027450 <AmiBlitz3.ab3@10610>    MOVE.l hunkoffsetcounter,d0
00027452 <AmiBlitz3.ab3@10611>    ASL.l #2,d0
00027458 <AmiBlitz3.ab3@10612>    ADD.l #12,d0
0002745A <AmiBlitz3.ab3@10613>    MOVE.l d5,a1
0002745E <AmiBlitz3.ab3@10614>    JSR _FreeMem(a6)
00027464 <AmiBlitz3.ab3@10615>    MOVEA.l _dosbase,A6
00027466 <AmiBlitz3.ab3@10616>    MOVE.l (a7)+,d5
0002746A <AmiBlitz3.ab3@10617> BRA JL_0_7632
00027470 <AmiBlitz3.ab3@10621>   MOVEA.l hunkoffsetbase,A2
00027476 <AmiBlitz3.ab3@10622>   MOVE.l noinits,D4
0002747A <AmiBlitz3.ab3@10625>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002747E <AmiBlitz3.ab3@10626>   BEQ.w JL_0_7632
00027482 <AmiBlitz3.ab3@10627>   LEA $4(A2),A1
00027484 <AmiBlitz3.ab3@10628>   SUB.l D4,(A1)
00027486 <AmiBlitz3.ab3@10629>   MOVE.l D7,D1
00027488 <AmiBlitz3.ab3@10630>   MOVE.l A1,D2
0002748A <AmiBlitz3.ab3@10631>   MOVEQ.l #$04,D3
0002748E <AmiBlitz3.ab3@10632>   BSR.w mywrite
00027492 <AmiBlitz3.ab3@10633>   ADD.l D4,$4(A2)
00027494 <AmiBlitz3.ab3@10634>   MOVEA.l (A2),A2
00027498 <AmiBlitz3.ab3@10635> BRA.w JL_0_7610
0002749E <AmiBlitz3.ab3@10638>   CLR.l tstsize3
000274A0 <AmiBlitz3.ab3@10639>   MOVE.l D7,D1
000274A6 <AmiBlitz3.ab3@10640>   MOVE.l #tstsize3,D2
000274A8 <AmiBlitz3.ab3@10641>   MOVEQ.l #$04,D3
000274AC <AmiBlitz3.ab3@10642>    BSR.w mywrite
000274B4 <AmiBlitz3.ab3@10645>   BTST #$7,link_debuginfo
000274B8 <AmiBlitz3.ab3@10646>    BEQ.w JL_0_7706
000274BE <AmiBlitz3.ab3@10647>   MOVE.l #sysdebug,D2                                      ;debughunks
000274C0 <AmiBlitz3.ab3@10648>   MOVEQ.l #$04,D3
000274C2 <AmiBlitz3.ab3@10649>   MOVE.l D7,D1
000274C6 <AmiBlitz3.ab3@10650>    BSR.w mywrite
000274CC <AmiBlitz3.ab3@10651>   MOVEA.l labelbase,A2
000274D0 <AmiBlitz3.ab3@10654>   CMPA.w #$0,A2
000274D4 <AmiBlitz3.ab3@10655>    BEQ.w JL_0_76F8
000274DA <AmiBlitz3.ab3@10656>   BTST #$0,$7(A2)
000274DE <AmiBlitz3.ab3@10657>    BEQ.w JL_0_7682
000274E6 <AmiBlitz3.ab3@10658>   CMPI.l #$1,$4(A2)
000274EA <AmiBlitz3.ab3@10660>   BRA.w JL_0_76F2                                            ;only addr labels
000274EC <AmiBlitz3.ab3@10662>   MOVEQ.l #$00,D4
000274F0 <AmiBlitz3.ab3@10663>   MOVE.b $12(A2),D4
000274F4 <AmiBlitz3.ab3@10664>   SUBI.w #$13,D4
000274F6 <AmiBlitz3.ab3@10665>   ADDQ.w #2,D4
000274FA <AmiBlitz3.ab3@10666>   ANDI.w #$FFFC,D4
000274FC <AmiBlitz3.ab3@10667>   MOVE.l D4,D5
000274FE <AmiBlitz3.ab3@10668>   LSR.w #2,D5
00027504 <AmiBlitz3.ab3@10669>   MOVE.l D5,temp1
00027506 <AmiBlitz3.ab3@10670>   LSL.w #2,D5
0002750C <AmiBlitz3.ab3@10671>   MOVE.l #temp1,a1
00027512 <AmiBlitz3.ab3@10673>   LEA debugstore,a0
00027514 <AmiBlitz3.ab3@10674>   MOVE.l (a1),(a0)+
00027516 <AmiBlitz3.ab3@10675>   MOVEQ.l #$04,D3
0002751A <AmiBlitz3.ab3@10678>   LEA $13(A2),A1
0002751C <AmiBlitz3.ab3@10679>   MOVE.l d4,d1
0002751E <AmiBlitz3.ab3@10680>   SUBQ.l #1,d1
00027520 <AmiBlitz3.ab3@10683>     MOVE.b (a1)+,d0
00027524 <AmiBlitz3.ab3@10684>     BEQ 'l21
00027528 <AmiBlitz3.ab3@10685>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002752C <AmiBlitz3.ab3@10686>     BNE 'ok
00027530 <AmiBlitz3.ab3@10687>     MOVE.b #"_",d0
00027532 <AmiBlitz3.ab3@10688> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00027536 <AmiBlitz3.ab3@10689>   DBF d1,'l10
0002753A <AmiBlitz3.ab3@10691> BRA 'l22
0002753C <AmiBlitz3.ab3@10694>       CLR.b (a0)+
00027540 <AmiBlitz3.ab3@10695>   DBF d1,'l21
00027542 <AmiBlitz3.ab3@10698>   ADD.l d4,d3
00027544 <AmiBlitz3.ab3@10703>   SUB.l D4,D5
00027548 <AmiBlitz3.ab3@10704>    BEQ.w JL_0_76CE
0002754E <AmiBlitz3.ab3@10705>   MOVE.l #zero,a1
00027550 <AmiBlitz3.ab3@10707>   MOVE.l (a1),(a0)+
00027552 <AmiBlitz3.ab3@10709>   ADD.l d5,d3
00027556 <AmiBlitz3.ab3@10714>   MOVE.l $8(A2),D2
0002755C <AmiBlitz3.ab3@10715>   SUB.l destbufferstart,D2
00027562 <AmiBlitz3.ab3@10716>   SUB.l noinits,D2
00027568 <AmiBlitz3.ab3@10717>   MOVE.l D2,temp1
0002756E <AmiBlitz3.ab3@10718>   MOVE.l #temp1,a1
00027570 <AmiBlitz3.ab3@10720>   MOVE.l (a1),(a0)+
00027576 <AmiBlitz3.ab3@10721>   ADD.l #4,d3
0002757C <AmiBlitz3.ab3@10722>   LEA debugstore,a0
0002757E <AmiBlitz3.ab3@10723>   MOVE.l a0,d2
00027580 <AmiBlitz3.ab3@10725>   MOVE.l D7,D1
00027584 <AmiBlitz3.ab3@10726>   BSR.w mywrite
00027586 <AmiBlitz3.ab3@10729>   MOVEA.l (A2),A2
0002758A <AmiBlitz3.ab3@10730> BRA.w JL_0_7664
00027590 <AmiBlitz3.ab3@10734>   MOVE.l #zero,D2
00027592 <AmiBlitz3.ab3@10735>   MOVEQ.l #$04,D3
00027594 <AmiBlitz3.ab3@10736>   MOVE.l D7,D1
00027598 <AmiBlitz3.ab3@10737>   BSR.w mywrite
0002759A <AmiBlitz3.ab3@10740>   MOVE.l D7,D1
000275A0 <AmiBlitz3.ab3@10741>   MOVE.l #tstdone,D2                                      ;hunkend
000275A2 <AmiBlitz3.ab3@10742>   MOVEQ.l #$04,D3
000275AC <AmiBlitz3.ab3@10743>   CMPI.l #-1,bssstart
000275B0 <AmiBlitz3.ab3@10744>   BEQ 'l10
000275B2 <AmiBlitz3.ab3@10745>   MOVEQ #16,d3
000275B8 <AmiBlitz3.ab3@10746>   MOVE.l #hunkend,d2
000275C2 <AmiBlitz3.ab3@10747>   CMPI.l #-1,chipstart
000275C6 <AmiBlitz3.ab3@10748>   BEQ 'l10
000275C8 <AmiBlitz3.ab3@10749>   MOVE.l d7,d1
000275CA <AmiBlitz3.ab3@10750>   MOVEQ #12,d3
000275CE <AmiBlitz3.ab3@10751>   BSR.w mywrite
000275D8 <AmiBlitz3.ab3@10754>   CMPI.l #-1,chipstart
000275DC <AmiBlitz3.ab3@10755>   BEQ 'l11
000275DE <AmiBlitz3.ab3@10756>   MOVEQ #12,d3
000275E4 <AmiBlitz3.ab3@10757>   MOVE.l #hunkend2,d2
000275E6 <AmiBlitz3.ab3@10758>   MOVE.l d7,d1
000275EA <AmiBlitz3.ab3@10759>   BSR.w mywrite
000275EC <AmiBlitz3.ab3@10760>   MOVE.l d7,d1
000275F2 <AmiBlitz3.ab3@10761>   MOVE.l chipstart,d2
000275F8 <AmiBlitz3.ab3@10762>   MOVE.l chipsize,d3
000275FC <AmiBlitz3.ab3@10763>   BSR.w mywrite
000275FE <AmiBlitz3.ab3@10764>   MOVEQ #4,d3
00027604 <AmiBlitz3.ab3@10765>   MOVE.l #hunkend,d2
00027606 <AmiBlitz3.ab3@10766>   MOVE.l d7,d1
0002760A <AmiBlitz3.ab3@10769>   BSR.w mywrite
0002760C <AmiBlitz3.ab3@10770>   MOVE.l D7,D1
00027612 <AmiBlitz3.ab3@10771>   MOVEA.l _dosbase,A6
00027616 <AmiBlitz3.ab3@10772>   JSR _Close(A6)
0002761E <AmiBlitz3.ab3@10777>   BTST #$7,create_iconfile
00027622 <AmiBlitz3.ab3@10778>    BEQ.w skip_createicon
00027628 <AmiBlitz3.ab3@10780>   MOVEA.l ptr_newexefilename,A0
0002762A <AmiBlitz3.ab3@10783>     TST.b (A0)+
0002762E <AmiBlitz3.ab3@10784>   BNE.w JL_0_772C
00027630 <AmiBlitz3.ab3@10785>   SUBQ.w #1,A0
00027632 <AmiBlitz3.ab3@10786>   MOVE.l A0,-(A7)
00027638 <AmiBlitz3.ab3@10787>   LEA str_infoextention2,A1
0002763A <AmiBlitz3.ab3@10790>     MOVE.b (A1)+,(A0)+
0002763E <AmiBlitz3.ab3@10791>   BNE.w JL_0_773A
00027644 <AmiBlitz3.ab3@10793>   MOVE.l ptr_newexefilename,D1
00027646 <AmiBlitz3.ab3@10794>   MOVEQ.l #-$02,D2
0002764C <AmiBlitz3.ab3@10795>   MOVEA.l _dosbase,A6
00027650 <AmiBlitz3.ab3@10796>   JSR _Lock(A6)
00027652 <AmiBlitz3.ab3@10797>   MOVE.l D0,D1
00027656 <AmiBlitz3.ab3@10798>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0002765A <AmiBlitz3.ab3@10799>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002765E <AmiBlitz3.ab3@10800> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027664 <AmiBlitz3.ab3@10803>   MOVE.l ptr_newexefilename,D1
0002766A <AmiBlitz3.ab3@10804>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027670 <AmiBlitz3.ab3@10805>   MOVEA.l _dosbase,A6
00027674 <AmiBlitz3.ab3@10806>    JSR _Open(A6)
00027676 <AmiBlitz3.ab3@10807>   MOVE.l D0,D7
0002767A <AmiBlitz3.ab3@10808>    BEQ.w JL_0_7788
00027680 <AmiBlitz3.ab3@10809>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027686 <AmiBlitz3.ab3@10810>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027688 <AmiBlitz3.ab3@10811>   MOVE.l D7,D1
0002768E <AmiBlitz3.ab3@10812>   MOVEA.l _dosbase,A6
00027692 <AmiBlitz3.ab3@10813>   JSR _Write(A6)
00027694 <AmiBlitz3.ab3@10814>   MOVE.l D7,D1
00027698 <AmiBlitz3.ab3@10815>   JSR _Close(A6)
0002769A <AmiBlitz3.ab3@10818>   MOVEA.l (A7)+,A0
0002769C <AmiBlitz3.ab3@10819>   CLR.b (A0)
000276A2 <AmiBlitz3.ab3@10824>   TST.b exdebug
000276A6 <AmiBlitz3.ab3@10825>    BEQ JL_0_757Cb
000276AC <AmiBlitz3.ab3@10826>   MOVE.w dontwrite,D1
000276B0 <AmiBlitz3.ab3@10827>   BNE.w JL_0_757Cb
000276B6 <AmiBlitz3.ab3@10828>   MOVE.l chipsize,d5
000276BC <AmiBlitz3.ab3@10829>   MOVE.l bsssize,d3
000276C2 <AmiBlitz3.ab3@10830>   MOVE.l chipstart,d7
000276C8 <AmiBlitz3.ab3@10831>   MOVE.l bssstart,d6
000276CE <AmiBlitz3.ab3@10832>   MOVEA.l hunkoffsetbase,A2
000276D4 <AmiBlitz3.ab3@10833>   MOVEA.l destbufferstart,A1
000276D6 <AmiBlitz3.ab3@10834>   MOVE.l A1,D2
000276DC <AmiBlitz3.ab3@10835>   ADD.l noinits,D2
000276E2 <AmiBlitz3.ab3@10836>   CLR.l hunkoffsetnum
000276E6 <AmiBlitz3.ab3@10839>   CMPA.w #$0,A2
000276EA <AmiBlitz3.ab3@10840>    BEQ.w JL_0_757Cb
000276EE <AmiBlitz3.ab3@10841>   MOVE.l $4(A2),D0
000276F2 <AmiBlitz3.ab3@10842>    LEA $0(a1,d0.l),a0
000276F4 <AmiBlitz3.ab3@10843>    MOVE.l (a0),d1
000276F6 <AmiBlitz3.ab3@10844>   TST.l d1
000276FA <AmiBlitz3.ab3@10845>    BMI.w 'lm1
00027702 <AmiBlitz3.ab3@10846>   MOVE.b #0,newhunk
0002770C <AmiBlitz3.ab3@10847>   CMP.l #-1,chipstart
00027710 <AmiBlitz3.ab3@10848>   BEQ 'l10
00027716 <AmiBlitz3.ab3@10849>   CMP.l chipstart,d1
0002771A <AmiBlitz3.ab3@10850>   BLT 'l10
00027722 <AmiBlitz3.ab3@10851>   MOVE.b #1,newhunk
00027728 <AmiBlitz3.ab3@10852>   CMP.l chipend,d1
0002772C <AmiBlitz3.ab3@10853>   BGE 'l110
0002772E <AmiBlitz3.ab3@10854>   ADD.l d7,(a0)
00027736 <AmiBlitz3.ab3@10855>   ADD.l #$80000000,4(a2)
0002773A <AmiBlitz3.ab3@10856> BRA JL_0_7576b
0002773E <AmiBlitz3.ab3@10859>   ADD.l d5,0(a0)
00027748 <AmiBlitz3.ab3@10862>   CMP.l #-1,bssstart
0002774C <AmiBlitz3.ab3@10863>     BEQ 'l11
00027752 <AmiBlitz3.ab3@10864>   CMP.l bssstart,d1
00027756 <AmiBlitz3.ab3@10865>   BLT 'l11
0002775C <AmiBlitz3.ab3@10866>   CMP.l bssend,d1
00027760 <AmiBlitz3.ab3@10867>   BGE 'l111
00027766 <AmiBlitz3.ab3@10868>   TST.b newhunk
0002776A <AmiBlitz3.ab3@10869>   BEQ 'ln1
0002776C <AmiBlitz3.ab3@10870>   ADD.l d5,(a0)
0002776E <AmiBlitz3.ab3@10873>   ADD.l d6,(a0)
00027776 <AmiBlitz3.ab3@10874>   ADD.l #$40000000,4(a2)
0002777A <AmiBlitz3.ab3@10875> BRA JL_0_7576b
0002777E <AmiBlitz3.ab3@10878>   ADD.l d3,0(a0)
00027780 <AmiBlitz3.ab3@10881>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00027786 <AmiBlitz3.ab3@10884>   ADDQ.l #1,hunkoffsetnum
00027788 <AmiBlitz3.ab3@10887>   MOVEA.l (A2),A2
0002778C <AmiBlitz3.ab3@10888> BRA.w JL_0_755Eb
00027792 <AmiBlitz3.ab3@10891>   JSR call_setpointernormal
00027796 <AmiBlitz3.ab3@10892>   MOVEM.l (a7)+,d2-d7/a2-a6
00027798 <AmiBlitz3.ab3@10894> RTS
0002779A <AmiBlitz3.ab3@10898>   MOVE.l D2,-(A7)
000277A0 <AmiBlitz3.ab3@10899>   MOVE.l destpointer,D2
000277A6 <AmiBlitz3.ab3@10900>   SUB.l destbufferstart,D2
000277AA <AmiBlitz3.ab3@10901>   BSR.w addhunkoffset
000277AC <AmiBlitz3.ab3@10902>   MOVE.l (A7)+,D2
000277AE <AmiBlitz3.ab3@10903> RTS
000277B2 <AmiBlitz3.ab3@10907>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000277B8 <AmiBlitz3.ab3@10908>   TST.b nohunkoffset
000277BC <AmiBlitz3.ab3@10909>   BNE 'l10
000277BE <AmiBlitz3.ab3@10910>   MOVEQ.l #$8,D0
000277C0 <AmiBlitz3.ab3@10911>   MOVEQ.l #$01,D1
000277C6 <AmiBlitz3.ab3@10912>   MOVEA.l _execbase,A6
000277CC <AmiBlitz3.ab3@10913>   MOVE.l mempool2,a0
000277D0 <AmiBlitz3.ab3@10914>   JSR _AllocPooled(a6)
000277D6 <AmiBlitz3.ab3@10916>   ADDQ.l #1,hunkoffsetcounter
000277D8 <AmiBlitz3.ab3@10917>   MOVEA.l D0,A0
000277DE <AmiBlitz3.ab3@10918>   MOVE.l hunkoffsetbase,(A0)
000277E4 <AmiBlitz3.ab3@10919>   MOVE.l A0,hunkoffsetbase
000277E8 <AmiBlitz3.ab3@10920>   MOVE.l D2,$4(A0)
000277EC <AmiBlitz3.ab3@10923>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000277EE <AmiBlitz3.ab3@10924> RTS
000277F4 <AmiBlitz3.ab3@10928>   CLR.l hunkoffsetbase
000277FA <AmiBlitz3.ab3@10929>   MOVEA.l _execbase,A6
00027800 <AmiBlitz3.ab3@10930>   MOVEA.l hunkoffsetbase,A2
00027804 <AmiBlitz3.ab3@10933>     CMPA.w #$0,A2
00027808 <AmiBlitz3.ab3@10934>      BEQ.w JL_0_7988
0002780A <AmiBlitz3.ab3@10935>     MOVEA.l A2,A1
0002780C <AmiBlitz3.ab3@10936>     MOVEQ.l #$08,D0
0002780E <AmiBlitz3.ab3@10937>     MOVEA.l (A2),A2
00027814 <AmiBlitz3.ab3@10938>     MOVE.l mempool2,a0
00027818 <AmiBlitz3.ab3@10939>     JSR _FreePooled(A6)
0002781C <AmiBlitz3.ab3@10940> BRA.w JL_0_7972
00027822 <AmiBlitz3.ab3@10943>   CLR.l hunkoffsetcounter
00027824 <AmiBlitz3.ab3@10944> RTS
0002783C <AmiBlitz3.ab3@10947> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00027840 <AmiBlitz3.ab3@10948> cmakea5:    Ds.l 1
00027842 <AmiBlitz3.ab3@10949> cmake:      Ds.w 1
000278C2 <AmiBlitz3.ab3@10950> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000278C8 <AmiBlitz3.ab3@10954>   MOVE.l A5,lastsourcepos
000278D2 <AmiBlitz3.ab3@10955>   MOVE.w instringon,oldqflag
000278D4 <AmiBlitz3.ab3@10959>   MOVEQ.l #$00,D0
000278D6 <AmiBlitz3.ab3@10960>   MOVE.b (A5)+,D0
000278DA <AmiBlitz3.ab3@10961>    BEQ getcharb__donea
000278DE <AmiBlitz3.ab3@10962>   BPL getcharb__stuffa
000278E0 <AmiBlitz3.ab3@10963>   LSL.l #8,D0
000278E2 <AmiBlitz3.ab3@10964>   MOVE.b (A5)+,D0
000278E4 <AmiBlitz3.ab3@10965>   MOVE.l a1,-(a7)
000278EA <AmiBlitz3.ab3@10966>   LEA replacedat,a1
000278EE <AmiBlitz3.ab3@10967>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000278F2 <AmiBlitz3.ab3@10968>   BEQ getchar__l10
000278F6 <AmiBlitz3.ab3@10969>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000278F8 <AmiBlitz3.ab3@10973>   MOVE.l (a7)+,a1
000278FC <AmiBlitz3.ab3@10974> BRA getchar__weiter
00027900 <AmiBlitz3.ab3@10977>   CMP.w #$22,D0
00027904 <AmiBlitz3.ab3@10978>    BEQ.b swapquotea
00027908 <AmiBlitz3.ab3@10979>   CMP.w #$3B,D0
0002790C <AmiBlitz3.ab3@10980>    BNE.b getcharb__donea
00027912 <AmiBlitz3.ab3@10981>   TST.w instringon
00027916 <AmiBlitz3.ab3@10982>    BNE.b getcharb__donea
00027918 <AmiBlitz3.ab3@10985>   MOVE.b (A5)+,D0
0002791C <AmiBlitz3.ab3@10986>              BEQ getchar__l1
00027920 <AmiBlitz3.ab3@10987>              CMP.b #":",d0
00027924 <AmiBlitz3.ab3@10988>              BNE getcharb__loopa                                ;:@
00027928 <AmiBlitz3.ab3@10989>              CMP.b #"@",(a5)
0002792C <AmiBlitz3.ab3@10990>              BNE getcharb__loopa
0002792E <AmiBlitz3.ab3@10991>              ADDQ #1,a5
00027934 <AmiBlitz3.ab3@10994>   MOVE.w D0,lastchar
00027938 <AmiBlitz3.ab3@10997> BRA.s getchar__weiter
0002793E <AmiBlitz3.ab3@11000>   NOT.w instringon
00027944 <AmiBlitz3.ab3@11003>    MOVE.w D0,lastchar
00027948 <AmiBlitz3.ab3@11004>    BEQ.w getchar__done
0002794C <AmiBlitz3.ab3@11005>    BPL.w getchar__done2
00027950 <AmiBlitz3.ab3@11006>   CMP.w #-$7FE4,D0                                         ;cnif
00027954 <AmiBlitz3.ab3@11007>    BEQ.w getchar__cnif
00027958 <AmiBlitz3.ab3@11008>   CMP.w #-$7FE3,D0                                         ;csif
0002795C <AmiBlitz3.ab3@11009>    BEQ.w getchar__csif
00027960 <AmiBlitz3.ab3@11010>   CMP.w #-$7FE2,D0                                         ;celse
00027964 <AmiBlitz3.ab3@11011>    BEQ.w getchar__celse
00027968 <AmiBlitz3.ab3@11012>   CMP.w #-$7FE1,D0                                         ;cend
0002796C <AmiBlitz3.ab3@11013>    BEQ.w getchar__cend
00027972 <AmiBlitz3.ab3@11016>   TST.w skipcode
00027976 <AmiBlitz3.ab3@11017>    BEQ.w getchar
0002797A <AmiBlitz3.ab3@11018>   CMP.w #$7E,D0
0002797E <AmiBlitz3.ab3@11019>    BEQ.w getchar__cmake                                         ;tilde
00027982 <AmiBlitz3.ab3@11020>   CMP.w #$2,D0
00027986 <AmiBlitz3.ab3@11021>    BNE.w getchar__notunpath
0002798C <AmiBlitz3.ab3@11022>   MOVEA.l usedfrom,A5
00027992 <AmiBlitz3.ab3@11023>   CLR.l usedfrom
00027996 <AmiBlitz3.ab3@11024> BRA.w getchar
0002799A <AmiBlitz3.ab3@11027>   CMP.w #$1,D0
0002799E <AmiBlitz3.ab3@11028>    BNE.w getchar__done
000279A2 <AmiBlitz3.ab3@11032>   MOVEA.l cmakea5(PC),A5
000279A6 <AmiBlitz3.ab3@11033> BRA.w getchar
000279AC <AmiBlitz3.ab3@11036>   TST.w cmake
000279B0 <AmiBlitz3.ab3@11037>    BNE.w getchar__done
000279B4 <AmiBlitz3.ab3@11039>   MOVEM.l D0-D7/A0-A6,-(A7)
000279BA <AmiBlitz3.ab3@11040>   LEA cmake,a0                                         ;reass
000279BC <AmiBlitz3.ab3@11041>   NOT.w (a0)
000279C0 <AmiBlitz3.ab3@11042>   LEA cmakebak(PC),A0
000279C6 <AmiBlitz3.ab3@11043>   LEA ptr_parameterstore,A1
000279C8 <AmiBlitz3.ab3@11044>   MOVEQ.l #$1F,D0
000279CA <AmiBlitz3.ab3@11047>     MOVE.l (A1)+,(A0)+
000279CE <AmiBlitz3.ab3@11048>   DBF D0,getchar__cmloop
000279D4 <AmiBlitz3.ab3@11051>    JSR AJL_0_BF6E
000279D8 <AmiBlitz3.ab3@11052>   CMP.w #$7E,D0
000279DC <AmiBlitz3.ab3@11053>    BNE.w syntaxerr
000279E2 <AmiBlitz3.ab3@11054>   MOVE.l A5,cmakea5                                      ;tilde
000279E6 <AmiBlitz3.ab3@11055>   LEA cmakebuff(PC),A0
000279E8 <AmiBlitz3.ab3@11056>   MOVE.l D3,D2
000279EC <AmiBlitz3.ab3@11057>   BSR.w makelong
000279EE <AmiBlitz3.ab3@11058>   ADDQ.b #1,(A0)
000279F4 <AmiBlitz3.ab3@11059>   LEA cmake,a0
000279F6 <AmiBlitz3.ab3@11060>   NOT.w (a0)                                               ;reass
000279FA <AmiBlitz3.ab3@11061>   LEA cmakebak(PC),A0
00027A00 <AmiBlitz3.ab3@11062>   LEA ptr_parameterstore,A1
00027A02 <AmiBlitz3.ab3@11063>   MOVEQ.l #$1F,D0
00027A04 <AmiBlitz3.ab3@11066>     MOVE.l (A0)+,(A1)+
00027A08 <AmiBlitz3.ab3@11067>   DBF D0,getchar__cmloop2
00027A0C <AmiBlitz3.ab3@11069>   MOVEM.l (A7)+,D0-D7/A0-A6
00027A10 <AmiBlitz3.ab3@11070>   LEA cmakebuff(PC),A5
00027A14 <AmiBlitz3.ab3@11071> BRA.w getchar
00027A16 <AmiBlitz3.ab3@11074> RTS
00027A20 <AmiBlitz3.ab3@11078>   MOVE.l linenumat,ciflineat                               ;csif
00027A26 <AmiBlitz3.ab3@11079>   TST.w skipcode
00027A2A <AmiBlitz3.ab3@11080>    BEQ.w getchar__incnest
00027A2E <AmiBlitz3.ab3@11081>    BSR.w get1bytemain
00027A30 <AmiBlitz3.ab3@11082>    MOVE.l a1,-(a7)
00027A36 <AmiBlitz3.ab3@11083>    JSR JL_0_C492
00027A38 <AmiBlitz3.ab3@11084>    MOVE.l (a7)+,a1
00027A3C <AmiBlitz3.ab3@11085> BRA.w getchar
00027A46 <AmiBlitz3.ab3@11088>   MOVE.l linenumat,ciflineat                               ;cnif
00027A4C <AmiBlitz3.ab3@11089>   TST.w skipcode
00027A50 <AmiBlitz3.ab3@11090>    BEQ.w getchar__incnest
00027A54 <AmiBlitz3.ab3@11091>    BSR.w get1bytemain
00027A58 <AmiBlitz3.ab3@11092>    CMP.b #"@",d0
00027A5C <AmiBlitz3.ab3@11093>    BNE getchar__cnif_ok2
00027A60 <AmiBlitz3.ab3@11094>    BSR.w get1bytemain
00027A68 <AmiBlitz3.ab3@11095>    MOVE.b #1,incnif
00027A6E <AmiBlitz3.ab3@11096>    JSR findconstant2
00027A72 <AmiBlitz3.ab3@11097>    BEQ getchar__cnif_ok2
00027A78 <AmiBlitz3.ab3@11100>    MOVE.w fast,-(a7)
00027A7E <AmiBlitz3.ab3@11101>    CLR.b fast
00027A80 <AmiBlitz3.ab3@11102>    MOVE.l a1,-(a7)
00027A86 <AmiBlitz3.ab3@11103>    JSR JL_0_C47E
00027A8C <AmiBlitz3.ab3@11104>    CLR.b incnif
00027A8E <AmiBlitz3.ab3@11105>    MOVE.l (a7)+,a1
00027A94 <AmiBlitz3.ab3@11106>    MOVE.w (a7)+,fast
00027A98 <AmiBlitz3.ab3@11107> BRA.w getchar
00027A9E <AmiBlitz3.ab3@11110>   ADDQ.w #1,connest
00027AA2 <AmiBlitz3.ab3@11111> BRA.w getchar
00027AA8 <AmiBlitz3.ab3@11114>   MOVE.w connest,D0                                      ;celse
00027AAC <AmiBlitz3.ab3@11115>    BNE.w getchar
00027AB2 <AmiBlitz3.ab3@11116>   NOT.w skipcode
00027AB6 <AmiBlitz3.ab3@11117> BRA.w getchar
00027ABC <AmiBlitz3.ab3@11120>   SUBQ.w #1,connest                                      ;cend
00027AC0 <AmiBlitz3.ab3@11121>    BPL.w getchar
00027AC6 <AmiBlitz3.ab3@11122>   ADDQ.w #1,connest
00027ACC <AmiBlitz3.ab3@11123>   MOVEA.l concomsp,A0
00027AD2 <AmiBlitz3.ab3@11124>   CMPA.l #concomstack,A0
00027AD6 <AmiBlitz3.ab3@11125>    BEQ.w nociferr
00027AD8 <AmiBlitz3.ab3@11126>   SUBQ.w #2,A0
00027ADE <AmiBlitz3.ab3@11127>   MOVE.l A0,concomsp
00027AE4 <AmiBlitz3.ab3@11128>   MOVE.w (A0),skipcode
00027AE8 <AmiBlitz3.ab3@11129> BRA.w getchar
00027AEC <AmiBlitz3.ab3@11132> ciflineat:   Ds.l 1
00027AEE <AmiBlitz3.ab3@11140>   MOVEQ.l #$00,D0
00027AF0 <AmiBlitz3.ab3@11141>   MOVE.b (A5)+,D0
00027AF4 <AmiBlitz3.ab3@11142>    BEQ.b getcharb__done
00027AF8 <AmiBlitz3.ab3@11143>    BPL.b getcharb__stuff
00027AFA <AmiBlitz3.ab3@11144>   LSL.w #8,D0
00027AFC <AmiBlitz3.ab3@11145>   MOVE.b (A5)+,D0
00027AFE <AmiBlitz3.ab3@11146> RTS
00027B02 <AmiBlitz3.ab3@11149>   CMP.w #$22,D0
00027B06 <AmiBlitz3.ab3@11150>    BEQ.b swapquote
00027B0A <AmiBlitz3.ab3@11151>   CMP.w #$3B,D0
00027B0E <AmiBlitz3.ab3@11152>    BNE.b getcharb__done
00027B14 <AmiBlitz3.ab3@11153>   TST.w instringon
00027B18 <AmiBlitz3.ab3@11154>    BNE.b getcharb__done
00027B1A <AmiBlitz3.ab3@11157>   MOVE.b (A5)+,D0
00027B1E <AmiBlitz3.ab3@11158>             BEQ getcharb__loop_l1
00027B22 <AmiBlitz3.ab3@11159>             CMP.b #":",d0
00027B26 <AmiBlitz3.ab3@11160>             BNE getcharb__loop
00027B2A <AmiBlitz3.ab3@11161>             CMP.b #"@",(a5)
00027B2E <AmiBlitz3.ab3@11162>             BNE getcharb__loop
00027B34 <AmiBlitz3.ab3@11165>   MOVE.w D0,lastchar
00027B36 <AmiBlitz3.ab3@11168> RTS
00027B3C <AmiBlitz3.ab3@11171>   NOT.w instringon
00027B3E <AmiBlitz3.ab3@11172> RTS
00027B42 <AmiBlitz3.ab3@11176>   BSR.w getchar
00027B48 <AmiBlitz3.ab3@11177>   TST.w instringon
00027B4C <AmiBlitz3.ab3@11178>    BNE.w get1byte__skip
00027B50 <AmiBlitz3.ab3@11179>   CMP.w #$20,D0
00027B54 <AmiBlitz3.ab3@11180>    BEQ.w get1byte_
00027B56 <AmiBlitz3.ab3@11183> RTS
00027B70 <AmiBlitz3.ab3@11186> gs:        Ds.w 13                                         ;ds.b 26  org source
00027B74 <AmiBlitz3.ab3@11187>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00027B76 <AmiBlitz3.ab3@11188>            Dc.b $C4,$DC
00027B7A <AmiBlitz3.ab3@11194>   BSR.w getchar
00027B80 <AmiBlitz3.ab3@11195>   TST.w instringon
00027B84 <AmiBlitz3.ab3@11196>    BNE.w gchar2
00027B88 <AmiBlitz3.ab3@11197>   CMP.w #$20,D0
00027B8C <AmiBlitz3.ab3@11198>    BEQ.w get1bytemain
00027B8E <AmiBlitz3.ab3@11200>   TST.w D0
00027B92 <AmiBlitz3.ab3@11203>   BEQ.b get1bytemain__zero
00027B98 <AmiBlitz3.ab3@11204>   TST.w instringon
00027B9C <AmiBlitz3.ab3@11205>    BEQ.b get1bytemain__noqoute
00027BA0 <AmiBlitz3.ab3@11206>   CMP.b #$20,D0
00027BA4 <AmiBlitz3.ab3@11207>    BCC.b get1bytemain__skip
00027BA8 <AmiBlitz3.ab3@11208>   MOVE.b gs(PC,D0.W),D0
00027BAA <AmiBlitz3.ab3@11209> RTS
00027BAE <AmiBlitz3.ab3@11212>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00027BB2 <AmiBlitz3.ab3@11213>    BEQ.b get1bytemain__zero
00027BB6 <AmiBlitz3.ab3@11214>   CMP.w #$3A,D0
00027BBA <AmiBlitz3.ab3@11215>    BEQ.b get1bytemain__zero
00027BBC <AmiBlitz3.ab3@11218>   TST.w D0
00027BBE <AmiBlitz3.ab3@11221> RTS
00027BC4 <AmiBlitz3.ab3@11225>   MOVE.w lastchar,D0
00027BC8 <AmiBlitz3.ab3@11226> BRA.w gchar2
00027BD2 <AmiBlitz3.ab3@11230>   MOVE.w oldqflag,instringon
00027BD8 <AmiBlitz3.ab3@11231>   MOVEA.l lastsourcepos,A5
00027BDA <AmiBlitz3.ab3@11232> RTS
00027BE0 <AmiBlitz3.ab3@11236>   MOVE.w D0,locchar
00027BE6 <AmiBlitz3.ab3@11237>   MOVE.l A5,locloc
00027BE8 <AmiBlitz3.ab3@11238> RTS
00027BEE <AmiBlitz3.ab3@11242>   MOVEA.l locloc,A5
00027BF4 <AmiBlitz3.ab3@11243>   MOVE.w locchar,D0
00027BFA <AmiBlitz3.ab3@11244>   MOVE.w D0,lastchar
00027BFC <AmiBlitz3.ab3@11245> RTS
00027BFC <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00027C44 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00027C96 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00027CD4 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00027D12 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00027D3C <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00027D6C <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00027DB6 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00027E3C <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00027E9E <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00027EE6 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00027F38 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00027F9A <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00027FE8 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
0002801E <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
0002804C <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028066 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028084 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028102 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
0002812C <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028152 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028172 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028190 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
000281B0 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
000281D8 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028202 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028204 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028220 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028246 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
0002825E <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
000282BC <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
000282DE <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028304 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
0002832C <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
0002834C <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028370 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
000283B6 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
000283DA <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
000283FE <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
0002841E <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00028442 <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028464 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028490 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
000284B6 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
000284C0 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
000284E6 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00028538 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
000285A2 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028600 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
0002866E <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
000286AA <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
000286C8 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
000286EE <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
0002871E <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00028742 <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00028770 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00028794 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
000287AA <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
000287C0 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000287C6 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000287CE <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
000287D0 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000287D4 <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
000287DC <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
000287DE <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00028818 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00028844 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00028874 <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
000288AC <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00028906 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00028908 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
0002890C <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00028910 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00028914 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00028918 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
0002891C <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00028920 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00028924 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00028928 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
0002892C <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00028930 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
0002896E <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000289A0 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
000289BE <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
000289E8 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00028A04 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00028A1E <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00028A3C <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00028A60 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00028A62 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00028AB4 <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00028ADC <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00028B04 <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00028B20 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00028B40 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00028B58 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00028B9C <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
00028BE4 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00028C0E <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00028C38 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
00028C52 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00028C7C <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00028CD0 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00028D1C <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00028D54 <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00028D5A <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00028D68 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00028D98 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00028DCC <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00028E32 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00028E50 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00028ECA <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00028EF2 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00028F08 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00028F1C <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00028F1E <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00028F1F <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00028F20 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00028F40 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
00028F46 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
00028F58 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00028F8C <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00028FA4 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00028FC0 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00028FD8 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00028FF8 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029018 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
0002903E <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029054 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029070 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
0002909A <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
000290B2 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
000290CE <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
000290EE <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029106 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
0002910A <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029110 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029116 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
0002912B <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029131 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00029132 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029136 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
0002913C <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00029142 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029155 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
0002915B <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
0002915C <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
0002917A <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029192 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
000291AE <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
000291D8 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
000291F2 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029212 <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00029230 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
0002925E <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029268 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002929A <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
000292B8 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
000292D6 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
000292F6 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002931C <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029342 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002936A <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029388 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
000293A8 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
000293C2 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
000293E4 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029402 <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00029424 <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029448 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
0002944E <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002946A <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029486 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
000294A4 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
000294C2 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029510 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002952E <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002954C <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029566 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
000295B2 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
000295D8 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
000295F8 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002961A <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029636 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002965C <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029678 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029696 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
000296BE <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
000296DA <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
000296EA <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002970C <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
00029710 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
00029712 <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
0002972C <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
00029750 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
00029770 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
000297A2 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
00029800 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
00029838 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
00029876 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
000298AC <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
000298DE <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
00029902 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00029926 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
00029970 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00029998 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
000299E2 <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
00029A22 <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
00029A22 <AmiBlitz3.ab3@11249> XINCLUDE "internal_errormsg.ab3"
00029A24 <AmiBlitz3.ab3@11253> ezerr:   Ds.w 1                                            ;for simple errors
00029A2A <AmiBlitz3.ab3@11259>    MOVE.l myline,d0
00029A2E <AmiBlitz3.ab3@11260>   BNE handle_compileerror__l2
00029A34 <AmiBlitz3.ab3@11262>     MOVE.l a5,lastsourcepos
00029A36 <AmiBlitz3.ab3@11264>     SUBA.l a5,a5
00029A3C <AmiBlitz3.ab3@11266>   TST.l usedfrom
00029A40 <AmiBlitz3.ab3@11267>   BEQ handle_compileerror__org
00029A46 <AmiBlitz3.ab3@11268>     MOVEA.l usedfrom,a5
00029A4C <AmiBlitz3.ab3@11271>   TST.w dirmode
00029A50 <AmiBlitz3.ab3@11272>   BNE.b handle_compileerror__quiet
00029A56 <AmiBlitz3.ab3@11273>     JSR call_setpointernormal
00029A5A <AmiBlitz3.ab3@11274>     MOVE.w ezerr(PC),D0
00029A5E <AmiBlitz3.ab3@11275>     BNE.w handle_compileerror__skip
00029A64 <AmiBlitz3.ab3@11276>       MOVE.w cfetchmode,D0
00029A68 <AmiBlitz3.ab3@11277>       BEQ.w handle_compileerror__skip2
00029A72 <AmiBlitz3.ab3@11278>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00029A78 <AmiBlitz3.ab3@11281>   MOVE.w constmode,D0
00029A7C <AmiBlitz3.ab3@11282>   BEQ.b handle_compileerror__skip3
00029A80 <AmiBlitz3.ab3@11283>     BSR.w asmerr2
00029A86 <AmiBlitz3.ab3@11286>   MOVE.l firstlocal,D1
00029A8C <AmiBlitz3.ab3@11287>   OR.l firstglob,D1
00029A90 <AmiBlitz3.ab3@11288>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00029A96 <AmiBlitz3.ab3@11289>     JSR JL_0_DB5C
00029A9E <AmiBlitz3.ab3@11292>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00029AA8 <AmiBlitz3.ab3@11293>   CMP.l #"NORE",reqmode                                    ;for used functions
00029AAC <AmiBlitz3.ab3@11294>   BEQ handle_compileerror__notproc_l1
00029AB6 <AmiBlitz3.ab3@11295>     MOVE.l linenumat,compilelinecounter
00029ABC <AmiBlitz3.ab3@11298>   JSR close_compilewin
00029ABE <AmiBlitz3.ab3@11301>   MOVEA.l (A7)+,A0
00029AC8 <AmiBlitz3.ab3@11302>   CMP.l #maxerrorcount,errorcounter
00029ACC <AmiBlitz3.ab3@11303>   BLT 'lesserror
00029AD2 <AmiBlitz3.ab3@11304>   LEA errorlimit_text,a0
00029AD8 <AmiBlitz3.ab3@11307>   ADDQ.l #1,errorcounter
00029ADE <AmiBlitz3.ab3@11308>   JSR errorstringparse
00029AE8 <AmiBlitz3.ab3@11309>   CMP.l #"NORE",reqmode                                    ;for used functions
00029AEC <AmiBlitz3.ab3@11310>   BEQ handle_compileerror__skip_Lxx2
00029AF2 <AmiBlitz3.ab3@11311>   TST.l CLIMode
00029AF6 <AmiBlitz3.ab3@11312>   BNE 'climode_output
00029AFC <AmiBlitz3.ab3@11315>     JSR save_errorfile
00029B00 <AmiBlitz3.ab3@11316>     BRA 'end_output
00029B06 <AmiBlitz3.ab3@11319>     JSR stdout_error
00029B10 <AmiBlitz3.ab3@11321>      CMP.l #maxerrorcount,errorcounter
00029B14 <AmiBlitz3.ab3@11322>      BGT 'end_output
00029B1A <AmiBlitz3.ab3@11323>     MOVE.l lastsourcepos,a5
00029B1C <AmiBlitz3.ab3@11325>  'loop TST.b (a5)
00029B20 <AmiBlitz3.ab3@11326>       BEQ 'ok2
00029B22 <AmiBlitz3.ab3@11327>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00029B26 <AmiBlitz3.ab3@11328>     BEQ 'ok
00029B2A <AmiBlitz3.ab3@11329>     CMP.b #":",d0
00029B2E <AmiBlitz3.ab3@11330>     BEQ 'ok
00029B32 <AmiBlitz3.ab3@11331>     BRA 'loop
00029B34 <AmiBlitz3.ab3@11333>  'ok SUBQ.l #1,a5
00029B3C <AmiBlitz3.ab3@11335>  'ok2 MOVE.w #0,lastchar
00029B44 <AmiBlitz3.ab3@11336>     MOVE.b #1,iserror
00029B4A <AmiBlitz3.ab3@11337>     MOVE.l stackaddr,a7
00029B4C <AmiBlitz3.ab3@11338>     RTS
00029B4E <AmiBlitz3.ab3@11344>   MOVE.l A0,-(a7)
00029B8C <AmiBlitz3.ab3@11345>   !ComData_GetL{comFunc_ErrorRequest,A1}
00029B8E <AmiBlitz3.ab3@11346>   MOVE.l (a7)+,A0
00029B92 <AmiBlitz3.ab3@11348>   MOVEM.l d6/D7/A6,-(A7)
00029B98 <AmiBlitz3.ab3@11349>   MOVE.l includeline,d7
00029B9E <AmiBlitz3.ab3@11350>   MOVE.l #"INLN",a6
00029BA8 <AmiBlitz3.ab3@11351>   MOVE.l errstack,tempa7
00029BAA <AmiBlitz3.ab3@11352>   JSR (A1)                                                  ;open ped errorrequest
00029BAE <AmiBlitz3.ab3@11354>   MOVEM.l (A7)+,D7/d6/A6
00029BB4 <AmiBlitz3.ab3@11357>   MOVE.l tempa7,a7
00029BBA <AmiBlitz3.ab3@11358>   MOVEA.l errcont,A0
00029BBC <AmiBlitz3.ab3@11360> RTS
00029BC2 <AmiBlitz3.ab3@11363>   MOVEA.l errstack,A7
00029BC8 <AmiBlitz3.ab3@11364>   MOVEA.l errcont,A0
00029BCA <AmiBlitz3.ab3@11366> RTS
00029BCC <AmiBlitz3.ab3@11369>   MOVE.l (A7),D0
00029BD2 <AmiBlitz3.ab3@11370>   MOVEA.l errstack,A7
00029BD8 <AmiBlitz3.ab3@11371>   MOVEA.l errcont,A0
00029BDA <AmiBlitz3.ab3@11372> JMP (A0)
00029BDE <AmiBlitz3.ab3@11378>   CMP.w #$7A,D0                                            ;'z'
00029BE2 <AmiBlitz3.ab3@11379>    BHI.w tstalpha__no
00029BE6 <AmiBlitz3.ab3@11380>   CMP.w #$41,D0                                            ;'A'
00029BEA <AmiBlitz3.ab3@11381>    BCS.w tstalpha__no
00029BEE <AmiBlitz3.ab3@11382>   CMP.w #$61,D0                                            ;'a'
00029BF2 <AmiBlitz3.ab3@11383>    BCC.w tstalpha__yes
00029BF6 <AmiBlitz3.ab3@11384>   CMP.w #$5A,D0                                            ;'Z'
00029BFA <AmiBlitz3.ab3@11385>    BHI.w tstalpha__no
00029BFC <AmiBlitz3.ab3@11388>   CMP.w D0,D0
00029BFE <AmiBlitz3.ab3@11391> RTS
00029C02 <AmiBlitz3.ab3@11399>   CMP.w #$30,D0                                            ;'0'
00029C06 <AmiBlitz3.ab3@11400>    BCS.w tstnum__skip
00029C0A <AmiBlitz3.ab3@11401>   CMP.w #$39,D0                                            ;'9'
00029C0E <AmiBlitz3.ab3@11402>    BHI.w tstnum__skip                                     
00029C10 <AmiBlitz3.ab3@11403>   CMP.w D0,D0
00029C12 <AmiBlitz3.ab3@11406> RTS
00029C34 <AmiBlitz3.ab3@11412>   !compare1                                                ;bsr.w tstalpha
00029C38 <AmiBlitz3.ab3@11413>    BEQ.w tstlab__skip
00029C4A <AmiBlitz3.ab3@11414>   !compare2                                                ;bsr.w tstnum2
00029C4E <AmiBlitz3.ab3@11415>    BEQ.w tstlab__skip
00029C52 <AmiBlitz3.ab3@11416>   CMP.w #$5F,D0                                            ;'_'
00029C56 <AmiBlitz3.ab3@11417>    BEQ.w tstlab__skip
00029C5A <AmiBlitz3.ab3@11418>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00029C5C <AmiBlitz3.ab3@11421> RTS
00029C66 <AmiBlitz3.ab3@11426>   MOVE.w oldqflag,instringon
00029C6C <AmiBlitz3.ab3@11427>   MOVEA.l lastsourcepos,A5
00029C72 <AmiBlitz3.ab3@11430>   MOVE.l a5,beforeparameterfetch
00029C78 <AmiBlitz3.ab3@11431>   LEA ptr_parameterstore,A1
00029C7A <AmiBlitz3.ab3@11434>   MOVEQ.l #$00,D2
00029C80 <AmiBlitz3.ab3@11437>   LEA chartab,a0
00029C82 <AmiBlitz3.ab3@11438>   MOVEQ #0,d0
00029C88 <AmiBlitz3.ab3@11439>   MOVE.l A5,lastsourcepos
00029C92 <AmiBlitz3.ab3@11440>   MOVE.w instringon,oldqflag
00029C94 <AmiBlitz3.ab3@11443>     MOVE.b (a5)+,d0
00029C98 <AmiBlitz3.ab3@11444>   CMP.b #$20,d0                                            ;space deftype
00029C9C <AmiBlitz3.ab3@11445>   BEQ makename4__retry
00029CA2 <AmiBlitz3.ab3@11447>   MOVE.w d0,lastchar
00029CA6 <AmiBlitz3.ab3@11448>   TST.b 0(a0,d0.w)
00029CAA <AmiBlitz3.ab3@11449>   BNE makename__done
00029CAC <AmiBlitz3.ab3@11458>   MOVE.b D0,(A1)+
00029CAE <AmiBlitz3.ab3@11459>   ADDQ.l #1,D2
00029CB4 <AmiBlitz3.ab3@11460>   MOVE.l A5,lastsourcepos
00029CB6 <AmiBlitz3.ab3@11463>   MOVE.b (a5)+,d0
00029CBC <AmiBlitz3.ab3@11464>   MOVE.b d0,lastchar+1
00029CC0 <AmiBlitz3.ab3@11465>   CMP.b #$20,d0
00029CC4 <AmiBlitz3.ab3@11466>   BEQ makename__loop_l20
00029CC8 <AmiBlitz3.ab3@11468>   TST.b 0(a0,d0)
00029CCC <AmiBlitz3.ab3@11469>   BEQ makename__loop
00029CD0 <AmiBlitz3.ab3@11470>   CMP.b #2,d0
00029CD4 <AmiBlitz3.ab3@11471>   BNE makename__loop_lf1
00029CDA <AmiBlitz3.ab3@11472>   MOVEA.l usedfrom,A5
00029CE0 <AmiBlitz3.ab3@11473>   CLR.l usedfrom
00029CE4 <AmiBlitz3.ab3@11474> BRA makename__loop_ln1
00029CE8 <AmiBlitz3.ab3@11477>   CMP.b #1,d0
00029CEC <AmiBlitz3.ab3@11478>   BNE makename__loop_l20
00029CF0 <AmiBlitz3.ab3@11479>   MOVEA.l cmakea5(PC),A5
00029CF4 <AmiBlitz3.ab3@11480> BRA makename__loop_ln1
00029CF8 <AmiBlitz3.ab3@11483>   CMP.b #$7e,d0
00029CFC <AmiBlitz3.ab3@11484>             BNE makename__loop_lt
00029D02 <AmiBlitz3.ab3@11485>             TST.w cmake
00029D06 <AmiBlitz3.ab3@11486>             BNE.w makename__loop_a1
00029D08 <AmiBlitz3.ab3@11487>             SUBQ.l #1,a5
00029D0C <AmiBlitz3.ab3@11488>             BSR.w get1bytemain
00029D10 <AmiBlitz3.ab3@11489> BRA makename__loop
00029D14 <AmiBlitz3.ab3@11493> BRA makename__loop_gpex
00029D18 <AmiBlitz3.ab3@11497>   BSR.w getchar
00029D3A <AmiBlitz3.ab3@11498>    !compare1                                               ;bsr.w tstalpha
00029D3E <AmiBlitz3.ab3@11499>    BEQ.w makename__loop_getp1
00029D50 <AmiBlitz3.ab3@11500>    !compare2                                               ;bsr.w tstnum
00029D54 <AmiBlitz3.ab3@11501>    BEQ.w makename__loop_getp1
00029D58 <AmiBlitz3.ab3@11502>   CMP.w #$5F,D0                                            ;'_'
00029D5C <AmiBlitz3.ab3@11503>    BEQ.w makename__loop_getp1
00029D60 <AmiBlitz3.ab3@11504>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
00029D64 <AmiBlitz3.ab3@11508>       BNE makename__loop_gpex
00029D68 <AmiBlitz3.ab3@11509>       CMP.b #$20,d0
00029D6C <AmiBlitz3.ab3@11510>       BNE.w makename__loop
00029D6E <AmiBlitz3.ab3@11513>      TST.b d0
00029D72 <AmiBlitz3.ab3@11514>      BPL makename__loop_l10
00029D74 <AmiBlitz3.ab3@11515>      SUBQ.l #1,a5
00029D78 <AmiBlitz3.ab3@11516>      BSR get1byte_
00029D7C <AmiBlitz3.ab3@11519>    CMP.w #$20,D0
00029D80 <AmiBlitz3.ab3@11520>    BNE.w makename__done
00029D82 <AmiBlitz3.ab3@11521>    MOVEQ #0,d0
00029D88 <AmiBlitz3.ab3@11522>   MOVE.l a5,lastsourcepos
00029D8A <AmiBlitz3.ab3@11525>   MOVE.b (a5)+,d0                                          ;neuneu
00029D8E <AmiBlitz3.ab3@11526>   BPL makename__loop_l101:
00029D90 <AmiBlitz3.ab3@11527>   ASL.w #8,d0
00029D92 <AmiBlitz3.ab3@11528>   MOVE.b (a5)+,d0
00029D98 <AmiBlitz3.ab3@11531>   TST.w instringon
00029D9C <AmiBlitz3.ab3@11532>   BNE makename__loop_l102
00029DA0 <AmiBlitz3.ab3@11533>   CMP.b #$20,d0
00029DA4 <AmiBlitz3.ab3@11534>   BEQ makename__loop_l103
00029DA8 <AmiBlitz3.ab3@11535>   CMP.b #";",d0
00029DAC <AmiBlitz3.ab3@11536>   BNE makename__loop_l102
00029DAE <AmiBlitz3.ab3@11539>   MOVE.b (A5)+,D0
00029DB2 <AmiBlitz3.ab3@11540>              BEQ makename__loop_l1
00029DB6 <AmiBlitz3.ab3@11541>              CMP.b #":",d0
00029DBA <AmiBlitz3.ab3@11542>              BNE makename__loop_lr                         ;:@
00029DBE <AmiBlitz3.ab3@11543>              CMP.b #"@",(a5)
00029DC2 <AmiBlitz3.ab3@11544>              BNE makename__loop_lr
00029DC4 <AmiBlitz3.ab3@11545>              ADDQ #1,a5
00029DCA <AmiBlitz3.ab3@11549>   MOVE.w d0,lastchar
00029DCE <AmiBlitz3.ab3@11553>   CMP.b #";",d0
00029DD2 <AmiBlitz3.ab3@11554>   BEQ makename__done_l11
00029DD4 <AmiBlitz3.ab3@11555>   CLR.b (A1)
00029DD6 <AmiBlitz3.ab3@11557>   TST.w D2
00029DD8 <AmiBlitz3.ab3@11558> RTS
00029DDA <AmiBlitz3.ab3@11561>   CLR.b (a1)
00029DDC <AmiBlitz3.ab3@11562>   MOVEQ #0,d0
00029DE2 <AmiBlitz3.ab3@11563>   MOVE.w d0,lastchar
00029DE4 <AmiBlitz3.ab3@11565>   TST.w D2
00029DE6 <AmiBlitz3.ab3@11566> RTS
00029DE8 <AmiBlitz3.ab3@11572>   MOVE.l (A2),D0
00029DEC <AmiBlitz3.ab3@11575>   BEQ.w findlast__here
00029DEE <AmiBlitz3.ab3@11576>   MOVEA.l D0,A2
00029DF2 <AmiBlitz3.ab3@11577> BRA.w findlast__loop
00029DF6 <AmiBlitz3.ab3@11580> BRA.w reget
00029DF8 <AmiBlitz3.ab3@11586>   MOVE.l (A2),-(A7)
00029DFC <AmiBlitz3.ab3@11587>   BSR.w addlabel
00029DFE <AmiBlitz3.ab3@11588>   MOVE.l (A7)+,(A2)
00029E00 <AmiBlitz3.ab3@11589> RTS
00029E06 <AmiBlitz3.ab3@11594>   CLR.l fp0addr
00029E0C <AmiBlitz3.ab3@11595>   TST.w dirmode
00029E10 <AmiBlitz3.ab3@11596>    BNE.w illdirerr
00029E12 <AmiBlitz3.ab3@11597>   MOVEQ.l #$00,D0
00029E14 <AmiBlitz3.ab3@11598>   MOVE.w D7,D0
00029E16 <AmiBlitz3.ab3@11599>   ADD.w D2,D0
00029E18 <AmiBlitz3.ab3@11600>   ADDQ.w #1,D0
00029E1A <AmiBlitz3.ab3@11601>   MOVE.w D0,D2
00029E1C <AmiBlitz3.ab3@11602>   ADDQ.l #2,d0
00029E1E <AmiBlitz3.ab3@11603>   MOVEQ.l #$01,D1
00029E24 <AmiBlitz3.ab3@11604>   MOVEA.l _execbase,A6
00029E2A <AmiBlitz3.ab3@11605>   MOVE.l mempool2,a0
00029E2E <AmiBlitz3.ab3@11606>   JSR _AllocPooled(a6)
00029E34 <AmiBlitz3.ab3@11608>   MOVE.l lastlabel,a2
00029E36 <AmiBlitz3.ab3@11609>   MOVE.l D0,(A2)
00029E38 <AmiBlitz3.ab3@11610>   MOVE.l d0,a0
00029E3A <AmiBlitz3.ab3@11611>   CLR.l (a0)
00029E40 <AmiBlitz3.ab3@11612>   MOVE.l a0,lastlabel
00029E42 <AmiBlitz3.ab3@11613>   MOVE.l d0,A2
00029E46 <AmiBlitz3.ab3@11614>   LEA -$1(A0,D7.W),A0
00029E48 <AmiBlitz3.ab3@11615>   MOVE.b D2,(A0)+
00029E4E <AmiBlitz3.ab3@11616>   LEA ptr_parameterstore,A1
00029E50 <AmiBlitz3.ab3@11617>   MOVEQ #0,d0
00029E52 <AmiBlitz3.ab3@11618>   MOVEQ #0,d1
00029E54 <AmiBlitz3.ab3@11621>   MOVE.b (A1)+,d1
00029E58 <AmiBlitz3.ab3@11622>    BEQ 'l1
00029E5E <AmiBlitz3.ab3@11623>    !hashalgo
00029E60 <AmiBlitz3.ab3@11624>    MOVE.b d1,(A0)+
00029E64 <AmiBlitz3.ab3@11625> BRA addlabel_loop2a
00029E66 <AmiBlitz3.ab3@11628>    CLR.b (a0)+
00029E6C <AmiBlitz3.ab3@11629>    LEA labelhash,a0
00029E72 <AmiBlitz3.ab3@11630>    AND.l #hashsize,d0
00029E74 <AmiBlitz3.ab3@11631>    ASL.l #2,d0
00029E78 <AmiBlitz3.ab3@11632>    MOVE.l 0(a0,d0),d1
00029E7C <AmiBlitz3.ab3@11633>    MOVE.l d1,$c(a2)
00029E80 <AmiBlitz3.ab3@11634>    MOVE.l a2,0(a0,d0)
00029E82 <AmiBlitz3.ab3@11635>    MOVEQ #0,d0
00029E86 <AmiBlitz3.ab3@11636> BRA.w reget
00029E8C <AmiBlitz3.ab3@11640>    TST.b newvariable
00029E90 <AmiBlitz3.ab3@11641>    BNE addlabel
00029E96 <AmiBlitz3.ab3@11644>   TST.w dirmode
00029E9A <AmiBlitz3.ab3@11645>    BNE.w illdirerr
00029E9C <AmiBlitz3.ab3@11646>   MOVEQ.l #$00,D0
00029E9E <AmiBlitz3.ab3@11647>   MOVE.w D7,D0
00029EA0 <AmiBlitz3.ab3@11648>   ADD.w D2,D0
00029EA2 <AmiBlitz3.ab3@11649>   ADDQ.w #1,D0
00029EA4 <AmiBlitz3.ab3@11650>   MOVE.w D0,D2
00029EA6 <AmiBlitz3.ab3@11651>   MOVEQ.l #$01,D1
00029EAC <AmiBlitz3.ab3@11652>   MOVEA.l _execbase,A6
00029EB2 <AmiBlitz3.ab3@11653>   MOVE.l mempool2,a0
00029EB6 <AmiBlitz3.ab3@11654>   JSR _AllocPooled(a6)
00029EB8 <AmiBlitz3.ab3@11655>   MOVEA.l D0,A0
00029EBE <AmiBlitz3.ab3@11657>   LEA varbase,a2
00029EC0 <AmiBlitz3.ab3@11658>   MOVE.l (a2),(a0)
00029EC2 <AmiBlitz3.ab3@11659>   MOVE.l A0,(A2)
00029EC4 <AmiBlitz3.ab3@11660>   MOVEA.l A0,A2
00029EC8 <AmiBlitz3.ab3@11661>   LEA -$1(A0,D7.W),A0
00029ECA <AmiBlitz3.ab3@11662>   MOVE.b D2,(A0)+
00029ED0 <AmiBlitz3.ab3@11663>   LEA ptr_parameterstore,A1
00029ED2 <AmiBlitz3.ab3@11664>   MOVEQ #0,d0
00029ED4 <AmiBlitz3.ab3@11665>   MOVEQ #0,d1
00029ED6 <AmiBlitz3.ab3@11668>   MOVE.b (A1)+,d1
00029EDA <AmiBlitz3.ab3@11669>    BEQ 'l12
00029EE0 <AmiBlitz3.ab3@11670>    !hashalgo
00029EE2 <AmiBlitz3.ab3@11671>    MOVE.b d1,(A0)+
00029EE6 <AmiBlitz3.ab3@11672> BRA 'l11
00029EE8 <AmiBlitz3.ab3@11675>   CLR.b (a0)+
00029EEE <AmiBlitz3.ab3@11676>   LEA variablehash,a0
00029EF4 <AmiBlitz3.ab3@11677>    AND.l #hashsize,d0
00029EF6 <AmiBlitz3.ab3@11678>    ASL.l #2,d0
00029EFA <AmiBlitz3.ab3@11679>    MOVE.l 0(a0,d0),d1
00029EFE <AmiBlitz3.ab3@11680>    MOVE.l d1,$e(a2)
00029F02 <AmiBlitz3.ab3@11681>    MOVE.l a2,0(a0,d0)
00029F04 <AmiBlitz3.ab3@11682>    MOVEQ #0,d0
00029F08 <AmiBlitz3.ab3@11683> BRA.w reget
00029F0E <AmiBlitz3.ab3@11687>   TST.w dirmode
00029F12 <AmiBlitz3.ab3@11688>    BNE.w illdirerr
00029F14 <AmiBlitz3.ab3@11695>   MOVEQ.l #$00,D0
00029F16 <AmiBlitz3.ab3@11696>   MOVE.w D7,D0
00029F18 <AmiBlitz3.ab3@11697>   ADD.w D2,D0
00029F1A <AmiBlitz3.ab3@11698>   ADDQ.w #1,D0
00029F1C <AmiBlitz3.ab3@11699>   MOVE.w D0,D2
00029F1E <AmiBlitz3.ab3@11700>   MOVEQ.l #$01,D1
00029F24 <AmiBlitz3.ab3@11701>   MOVEA.l _execbase,A6
00029F2A <AmiBlitz3.ab3@11702>   MOVE.l mempool2,a0
00029F2E <AmiBlitz3.ab3@11703>   JSR _AllocPooled(a6)
00029F30 <AmiBlitz3.ab3@11705>   MOVEA.l D0,A0
00029F32 <AmiBlitz3.ab3@11706>   MOVE.l A0,(A2)
00029F34 <AmiBlitz3.ab3@11707>   CLR.l (a0)
00029F38 <AmiBlitz3.ab3@11708>   CLR.l 8(a0)                                              ;clear next
00029F3A <AmiBlitz3.ab3@11709>   MOVEA.l A0,A2
00029F3E <AmiBlitz3.ab3@11710>   LEA -$1(A0,D7.W),A0
00029F40 <AmiBlitz3.ab3@11711>   MOVE.b D2,(A0)+                                          ;put in struct length
00029F46 <AmiBlitz3.ab3@11712>   LEA ptr_parameterstore,A1
00029F48 <AmiBlitz3.ab3@11713>   MOVEQ #0,d0
00029F4A <AmiBlitz3.ab3@11714>   MOVEQ #0,d1
00029F4C <AmiBlitz3.ab3@11717>   MOVE.b (A1)+,d1
00029F4E <AmiBlitz3.ab3@11720>   MOVE.b d1,(A0)+
00029F52 <AmiBlitz3.ab3@11721>   BNE.w addlabel_loop2
00029F56 <AmiBlitz3.ab3@11722> BRA.w reget
00029F58 <AmiBlitz3.ab3@11726>   MOVEQ.l #$13,D7
00029F5E <AmiBlitz3.ab3@11727>   LEA constantbase,A2
00029F62 <AmiBlitz3.ab3@11728> BRA.w findlab
00029F64 <AmiBlitz3.ab3@11732>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
00029F6A <AmiBlitz3.ab3@11733>   LEA xinclude_base,A2
00029F6E <AmiBlitz3.ab3@11734> BRA.w findlab
00029F70 <AmiBlitz3.ab3@11738>   MOVEQ.l #$09,D7
00029F76 <AmiBlitz3.ab3@11739>   LEA firstconst,A2
00029F7A <AmiBlitz3.ab3@11740> BRA.w findlab
00029F7C <AmiBlitz3.ab3@11744>   MOVEQ.l #$0d,D7                                          ;find macro
00029F82 <AmiBlitz3.ab3@11745>   LEA macrobase,A2
00029F86 <AmiBlitz3.ab3@11746> BRA.w findlab
00029F8C <AmiBlitz3.ab3@11750>   LEA labelhash,A2
00029F8E <AmiBlitz3.ab3@11751>   MOVEQ.l #$13,D7
00029F90 <AmiBlitz3.ab3@11752>   EXT.l d2
00029F96 <AmiBlitz3.ab3@11753>   LEA ptr_parameterstore,A0
00029F98 <AmiBlitz3.ab3@11754>   MOVEQ #0,d0
00029F9A <AmiBlitz3.ab3@11755>   MOVEQ #0,d1
00029F9C <AmiBlitz3.ab3@11758>     MOVE.b (a0)+,d1
00029FA0 <AmiBlitz3.ab3@11759>     BEQ 'l15
00029FA6 <AmiBlitz3.ab3@11760>     !hashalgo
00029FAA <AmiBlitz3.ab3@11761> BRA 'l20
00029FB0 <AmiBlitz3.ab3@11764>   AND.l #hashsize,d0
00029FB2 <AmiBlitz3.ab3@11765>   ASL.l #2,d0
00029FB6 <AmiBlitz3.ab3@11766>   MOVE.l 0(a2,d0),d0
00029FBA <AmiBlitz3.ab3@11767> BRA 'l11
00029FBE <AmiBlitz3.ab3@11770>   MOVE.l $c(A2),D0                                         ;find label
00029FC2 <AmiBlitz3.ab3@11773>   BEQ findlab__no
00029FC4 <AmiBlitz3.ab3@11774>   MOVEA.l D0,A2
00029FC6 <AmiBlitz3.ab3@11775>   MOVEQ.l #$00,D0
00029FCA <AmiBlitz3.ab3@11776>   MOVE.b -$1(A2,D7.l),D0
00029FD0 <AmiBlitz3.ab3@11777>   LEA ptr_parameterstore,A0
00029FD2 <AmiBlitz3.ab3@11778>   SUB.l D7,D0
00029FD4 <AmiBlitz3.ab3@11779>   SUBQ.l #1,D0
00029FD6 <AmiBlitz3.ab3@11780>   CMP.l D0,D2
00029FDA <AmiBlitz3.ab3@11781>    BNE.b 'l10
00029FDE <AmiBlitz3.ab3@11782>   LEA $0(A2,D7.W),A1
00029FE0 <AmiBlitz3.ab3@11783>   SUBQ.l #1,D0
00029FE2 <AmiBlitz3.ab3@11786>     MOVE.b (a1)+,d1
00029FE4 <AmiBlitz3.ab3@11787>     CMP.b (a0)+,d1
00029FE8 <AmiBlitz3.ab3@11789>     BNE.b 'l10
00029FEC <AmiBlitz3.ab3@11790>   DBF D0,'l201
00029FF0 <AmiBlitz3.ab3@11792>   BSR.w reget
00029FF2 <AmiBlitz3.ab3@11793>   CMP.w D0,D0
00029FF4 <AmiBlitz3.ab3@11794> RTS
00029FF6 <AmiBlitz3.ab3@11798>   MOVEQ.l #$0B,D7
00029FFA <AmiBlitz3.ab3@11799> BRA.w findlab
0002A000 <AmiBlitz3.ab3@11803>   LEA firstproc,A2
0002A006 <AmiBlitz3.ab3@11804>   MOVE.l #$21+#funcentry_extend,D7
0002A00A <AmiBlitz3.ab3@11805> BRA findlab
0002A010 <AmiBlitz3.ab3@11809>   LEA firstfor,A2
0002A012 <AmiBlitz3.ab3@11810>   MOVEQ.l #$11,D7
0002A016 <AmiBlitz3.ab3@11811> BRA.w findlab
0002A018 <AmiBlitz3.ab3@11815>   MOVEQ.l #$0F,D7
0002A01C <AmiBlitz3.ab3@11816> BRA.w findlab
0002A01E <AmiBlitz3.ab3@11820>   MOVEQ.l #$0F+4,D7
0002A024 <AmiBlitz3.ab3@11821>   TST.b newvariable
0002A028 <AmiBlitz3.ab3@11822>    BNE.w findlab
0002A02E <AmiBlitz3.ab3@11823>   LEA variablehash,A2
0002A034 <AmiBlitz3.ab3@11824>   LEA ptr_parameterstore,A0
0002A036 <AmiBlitz3.ab3@11825>   MOVEQ #0,d0
0002A038 <AmiBlitz3.ab3@11826>   MOVEQ #0,d1
0002A03A <AmiBlitz3.ab3@11829>     MOVE.b (a0)+,d1
0002A03E <AmiBlitz3.ab3@11830>     BEQ 'l15
0002A044 <AmiBlitz3.ab3@11831>     !hashalgo
0002A048 <AmiBlitz3.ab3@11832> BRA 'l20
0002A04E <AmiBlitz3.ab3@11835>   AND.l #hashsize,d0
0002A050 <AmiBlitz3.ab3@11836>   ASL.l #2,d0
0002A054 <AmiBlitz3.ab3@11837>   MOVE.l 0(a2,d0),d0
0002A058 <AmiBlitz3.ab3@11838> BRA 'l11
0002A05C <AmiBlitz3.ab3@11841>   MOVE.l $e(A2),D0                                         ;find label
0002A060 <AmiBlitz3.ab3@11844>   BEQ findlab__no
0002A062 <AmiBlitz3.ab3@11845>   MOVEA.l D0,A2
0002A064 <AmiBlitz3.ab3@11846>   MOVEQ.l #$00,D0
0002A068 <AmiBlitz3.ab3@11847>   MOVE.b -$1(A2,D7.W),D0
0002A06E <AmiBlitz3.ab3@11848>   LEA ptr_parameterstore,A0
0002A070 <AmiBlitz3.ab3@11849>   SUB.w D7,D0
0002A072 <AmiBlitz3.ab3@11850>   SUBQ.l #1,D0
0002A074 <AmiBlitz3.ab3@11851>   CMP.w D0,D2
0002A078 <AmiBlitz3.ab3@11852>    BNE.b 'l10
0002A07C <AmiBlitz3.ab3@11853>   LEA $0(A2,D7.W),A1
0002A07E <AmiBlitz3.ab3@11854>   SUBQ.l #1,D0
0002A080 <AmiBlitz3.ab3@11857>     MOVE.b (a1)+,d1
0002A082 <AmiBlitz3.ab3@11858>     CMP.b (a0)+,d1
0002A086 <AmiBlitz3.ab3@11860>     BNE.b 'l10
0002A08A <AmiBlitz3.ab3@11861>   DBF D0,'l201
0002A08E <AmiBlitz3.ab3@11863>   BSR.w reget
0002A090 <AmiBlitz3.ab3@11864>   CMP.w D0,D0
0002A092 <AmiBlitz3.ab3@11865> RTS
0002A094 <AmiBlitz3.ab3@11878>     MOVE.l (A2),D0                                         ;find label
0002A098 <AmiBlitz3.ab3@11879>      BEQ.b findlab__no
0002A09A <AmiBlitz3.ab3@11880>     MOVEA.l D0,A2
0002A09C <AmiBlitz3.ab3@11881>     MOVEQ.l #$00,D0
0002A0A0 <AmiBlitz3.ab3@11882>     MOVE.b -$1(A2,D7.W),D0
0002A0A2 <AmiBlitz3.ab3@11883>     SUB.l D7,D0
0002A0A4 <AmiBlitz3.ab3@11884>     SUBQ.l #1,D0
0002A0A6 <AmiBlitz3.ab3@11885>   CMP.w D0,D2
0002A0AA <AmiBlitz3.ab3@11886>   BNE.b findlab__loop
0002A0AE <AmiBlitz3.ab3@11888>   LEA $0(A2,D7.W),A1
0002A0B4 <AmiBlitz3.ab3@11889>   LEA ptr_parameterstore,A0
0002A0B6 <AmiBlitz3.ab3@11890>   SUBQ.l #1,D0
0002A0B8 <AmiBlitz3.ab3@11893>     MOVE.b (a1)+,d1
0002A0BA <AmiBlitz3.ab3@11894>     CMP.b (a0)+,d1
0002A0BE <AmiBlitz3.ab3@11896>     BNE.b findlab__loop
0002A0C2 <AmiBlitz3.ab3@11897>   DBF D0,findlab__loop2
0002A0C6 <AmiBlitz3.ab3@11899>   BSR.w reget
0002A0C8 <AmiBlitz3.ab3@11900>   CMP.w D0,D0
0002A0CA <AmiBlitz3.ab3@11901> RTS
0002A0CE <AmiBlitz3.ab3@11904>   BSR.w reget
0002A0D0 <AmiBlitz3.ab3@11905>   MOVEQ.l #-$01,D1
0002A0D2 <AmiBlitz3.ab3@11906> RTS
0002A0D8 <AmiBlitz3.ab3@11910>   MOVEA.l alllocals,A4
0002A0DE <AmiBlitz3.ab3@11911>   CLR.l alllocals
0002A0E2 <AmiBlitz3.ab3@11915>     CMPA.w #$0,A4
0002A0E6 <AmiBlitz3.ab3@11916>      BEQ.b freeprocvs__done
0002A0EA <AmiBlitz3.ab3@11917>     MOVEA.l $4(A4),A3
0002A0EE <AmiBlitz3.ab3@11919>     MOVEA.l $8(A4),A3
0002A0F0 <AmiBlitz3.ab3@11921>     MOVEA.l A4,A1
0002A0F2 <AmiBlitz3.ab3@11922>     MOVEA.l (A4),A4
0002A0F4 <AmiBlitz3.ab3@11923>     MOVEQ.l #$0C,D0
0002A0FA <AmiBlitz3.ab3@11924>     MOVEA.l _execbase,A6
0002A100 <AmiBlitz3.ab3@11925>     MOVE.l mempool,a0
0002A104 <AmiBlitz3.ab3@11926>     JSR _FreePooled(A6)
0002A108 <AmiBlitz3.ab3@11927> BRA.b freeprocvs__loop
0002A10E <AmiBlitz3.ab3@11930>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002A114 <AmiBlitz3.ab3@11931>   CLR.l firstlocal
0002A11A <AmiBlitz3.ab3@11932>   CLR.l sharebase
0002A120 <AmiBlitz3.ab3@11933>   TST.l mempool2
0002A124 <AmiBlitz3.ab3@11934>   BEQ freeprocvs__done_l10
0002A12A <AmiBlitz3.ab3@11936>   MOVEA.l _execbase,A6
0002A130 <AmiBlitz3.ab3@11937>   MOVE.l mempool2,a0
0002A136 <AmiBlitz3.ab3@11938>   CLR.l mempool2
0002A13A <AmiBlitz3.ab3@11939>   JSR _DeletePool(a6)
0002A140 <AmiBlitz3.ab3@11942>   MOVE.l _execbase,a6
0002A146 <AmiBlitz3.ab3@11943>   MOVE.l #$10000,d0
0002A14C <AmiBlitz3.ab3@11944>   MOVE.l #80000,d1
0002A14E <AmiBlitz3.ab3@11945>   MOVE.l d1,d2
0002A152 <AmiBlitz3.ab3@11946>   JSR _CreatePool(a6)
0002A158 <AmiBlitz3.ab3@11947>   MOVE.l d0,mempool2
0002A15A <AmiBlitz3.ab3@11948> RTS
0002A15E <AmiBlitz3.ab3@11952>   CMPA.w #$0,A3
0002A162 <AmiBlitz3.ab3@11953>    BEQ.w freevars__done
0002A164 <AmiBlitz3.ab3@11954>   MOVEA.l A3,A1
0002A166 <AmiBlitz3.ab3@11955>   MOVEA.l (A3),A3
0002A168 <AmiBlitz3.ab3@11956>   MOVEQ.l #$00,D0
0002A16C <AmiBlitz3.ab3@11957>   MOVE.b $E(A1),D0
0002A172 <AmiBlitz3.ab3@11958>   MOVEA.l _execbase,A6
0002A178 <AmiBlitz3.ab3@11959>   MOVE.l mempool2,a0
0002A17C <AmiBlitz3.ab3@11960>   JSR _FreePooled(A6)
0002A180 <AmiBlitz3.ab3@11961> BRA.w freevars
0002A184 <AmiBlitz3.ab3@11964>     CMPA.w #$0,A3
0002A188 <AmiBlitz3.ab3@11965>      BEQ.w freevars__done
0002A18A <AmiBlitz3.ab3@11966>     MOVEA.l A3,A1
0002A18C <AmiBlitz3.ab3@11967>     MOVEA.l (A3),A3
0002A18E <AmiBlitz3.ab3@11968>     MOVEQ.l #$00,D0
0002A192 <AmiBlitz3.ab3@11969>     MOVE.b $E+4(A1),D0
0002A198 <AmiBlitz3.ab3@11970>     MOVEA.l _execbase,A6
0002A19E <AmiBlitz3.ab3@11971>     MOVE.l mempool2,a0
0002A1A2 <AmiBlitz3.ab3@11972>     JSR _FreePooled(A6)
0002A1A6 <AmiBlitz3.ab3@11973> BRA.w freevarsb
0002A1A8 <AmiBlitz3.ab3@11976> RTS
0002A1AE <AmiBlitz3.ab3@11980>   MOVEA.l currentlabeladdr,A0
0002A1B4 <AmiBlitz3.ab3@11981>   MOVE.l a0,lastlabel
0002A1B6 <AmiBlitz3.ab3@11982>   MOVEA.l (A0),A2
0002A1B8 <AmiBlitz3.ab3@11983>   CLR.l (A0)
0002A1BE <AmiBlitz3.ab3@11984>   MOVEA.l _execbase,A6
0002A1C2 <AmiBlitz3.ab3@11987>   CMPA.w #$0,A2
0002A1C6 <AmiBlitz3.ab3@11988>    BEQ.w clearlabels__done
0002A1CA <AmiBlitz3.ab3@11989>   MOVE.l $4(A2),D0
0002A1CE <AmiBlitz3.ab3@11990>   BTST #$0,D0
0002A1D2 <AmiBlitz3.ab3@11991>    BNE.w clearlabels__skip
0002A1D4 <AmiBlitz3.ab3@11992>   MOVEA.l D0,A3
0002A1D8 <AmiBlitz3.ab3@11995>     CMPA.w #$0,A3
0002A1DC <AmiBlitz3.ab3@11996>      BEQ.w clearlabels__skip
0002A1DE <AmiBlitz3.ab3@11997>     MOVEA.l A3,A1
0002A1E0 <AmiBlitz3.ab3@11998>     MOVEA.l (A3),A3
0002A1E2 <AmiBlitz3.ab3@11999>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002A1E8 <AmiBlitz3.ab3@12000>     MOVE.l mempool,a0
0002A1EC <AmiBlitz3.ab3@12001>     JSR _FreePooled(A6)
0002A1F0 <AmiBlitz3.ab3@12002> BRA.w clearlabels__loop2
0002A1F2 <AmiBlitz3.ab3@12005>   MOVEQ.l #$00,D0
0002A1F6 <AmiBlitz3.ab3@12006>   MOVE.b $12(A2),D0
0002A1F8 <AmiBlitz3.ab3@12007>   MOVEA.l A2,A1
0002A1FA <AmiBlitz3.ab3@12008>   MOVEA.l (A2),A2
0002A200 <AmiBlitz3.ab3@12009>   MOVE.l mempool2,a0
0002A204 <AmiBlitz3.ab3@12011> BRA.w clearlabels__loop
0002A206 <AmiBlitz3.ab3@12014> RTS
0002A20C <AmiBlitz3.ab3@12018>   MOVEA.l firstpend,A3
0002A212 <AmiBlitz3.ab3@12019>   CLR.l firstpend
0002A218 <AmiBlitz3.ab3@12020>   MOVEA.l _execbase,A6
0002A21C <AmiBlitz3.ab3@12023>     CMPA.w #$0,A3
0002A220 <AmiBlitz3.ab3@12024>      BEQ.w freepends__done
0002A222 <AmiBlitz3.ab3@12025>     MOVEA.l A3,A1
0002A224 <AmiBlitz3.ab3@12026>     MOVEQ.l #$08,D0
0002A226 <AmiBlitz3.ab3@12027>     MOVEA.l (A3),A3
0002A22C <AmiBlitz3.ab3@12028>     MOVE.l mempool,a0
0002A230 <AmiBlitz3.ab3@12029>     JSR _FreePooled(A6)
0002A234 <AmiBlitz3.ab3@12030> BRA.w fpnd2
0002A236 <AmiBlitz3.ab3@12033> RTS
0002A23C <AmiBlitz3.ab3@12037>   MOVEA.l firstproc,A2
0002A242 <AmiBlitz3.ab3@12038>   CLR.l firstproc
0002A248 <AmiBlitz3.ab3@12039>   MOVEA.l _execbase,A6
0002A24C <AmiBlitz3.ab3@12042>     CMPA.w #$0,A2
0002A250 <AmiBlitz3.ab3@12043>      BEQ.w clearfunctionlist__done
0002A252 <AmiBlitz3.ab3@12044>     MOVEA.l A2,A1
0002A254 <AmiBlitz3.ab3@12045>     MOVEA.l (A2),A2
0002A256 <AmiBlitz3.ab3@12046>     MOVEQ.l #$00,D0
0002A25A <AmiBlitz3.ab3@12047>     MOVE.b $20+#funcentry_extend(A1),D0
0002A260 <AmiBlitz3.ab3@12048>     MOVE.l mempool2,a0
0002A264 <AmiBlitz3.ab3@12049>     JSR _FreePooled(A6)
0002A268 <AmiBlitz3.ab3@12050> BRA.w clearfunctionlist__loop
0002A26A <AmiBlitz3.ab3@12053> RTS
0002A26E <AmiBlitz3.ab3@12057>   CMPA.w #$0,A2
0002A272 <AmiBlitz3.ab3@12058>    BEQ.w freetypes__done
0002A276 <AmiBlitz3.ab3@12059>   MOVEA.l $4(A2),A3
0002A27A <AmiBlitz3.ab3@12060>   CMPA.w #$FF,A3
0002A27E <AmiBlitz3.ab3@12061>    BEQ.w freetypes__noway
0002A282 <AmiBlitz3.ab3@12065>    BSR.w freevars
0002A284 <AmiBlitz3.ab3@12068>     MOVEA.l A2,A1
0002A286 <AmiBlitz3.ab3@12069>     MOVEA.l (A2),A2
0002A288 <AmiBlitz3.ab3@12070>     MOVEQ.l #$00,D0
0002A28C <AmiBlitz3.ab3@12071>     MOVE.b $A(A1),D0
0002A292 <AmiBlitz3.ab3@12072>     MOVEA.l _execbase,A6
0002A298 <AmiBlitz3.ab3@12073>     MOVE.l mempool2,a0
0002A29C <AmiBlitz3.ab3@12074>     JSR _FreePooled(A6)
0002A2A0 <AmiBlitz3.ab3@12075> BRA.w freetypes
0002A2A2 <AmiBlitz3.ab3@12078> RTS
0002A2A8 <AmiBlitz3.ab3@12082>   JSR uselib2
0002A2AE <AmiBlitz3.ab3@12084>   CLR.w notshared
0002A2B4 <AmiBlitz3.ab3@12085>   CLR.w varmode
0002A2BA <AmiBlitz3.ab3@12086>   MOVE.w proceduremode,D1
0002A2BE <AmiBlitz3.ab3@12087>    BNE.w JL_0_8F4E
0002A2C4 <AmiBlitz3.ab3@12088>   LEA varbase,A2
0002A2CA <AmiBlitz3.ab3@12089>   LEA ptr_parameterstore,a0
0002A2CE <AmiBlitz3.ab3@12090>   CMP.b #$22,(a0)
0002A2D2 <AmiBlitz3.ab3@12091>   BNE JL_0_8E5E
0002A2D4 <AmiBlitz3.ab3@12092>   MOVEQ #0,d0
0002A2DA <AmiBlitz3.ab3@12093> JMP error
0002A2DE <AmiBlitz3.ab3@12096>   BSR.w findvariable
0002A2E2 <AmiBlitz3.ab3@12099>   BNE.w JL_0_8E7E
0002A2E8 <AmiBlitz3.ab3@12102>   MOVE.b flagmask+1,D1
0002A2EC <AmiBlitz3.ab3@12103>   MOVE.b $7(A2),D3
0002A2EE <AmiBlitz3.ab3@12104>   EOR.b D3,D1
0002A2F2 <AmiBlitz3.ab3@12105>   BNE 'l2
0002A2FA <AmiBlitz3.ab3@12106>   CMP.b #2,nowdeclare
0002A2FE <AmiBlitz3.ab3@12107>   BEQ errormsg_declaredtwice
0002A302 <AmiBlitz3.ab3@12108> BRA.w JL_0_8FA8
0002A306 <AmiBlitz3.ab3@12111>   BSR.w findlab
0002A30A <AmiBlitz3.ab3@12112>   BNE 'l1
0002A312 <AmiBlitz3.ab3@12113>   CMP.b #2,nowdeclare
0002A316 <AmiBlitz3.ab3@12114>   BEQ errormsg_declaredtwice
0002A318 <AmiBlitz3.ab3@12115>   CMP.w d0,d0
0002A31C <AmiBlitz3.ab3@12118> BRA.w JL_0_8E62
0002A31E <AmiBlitz3.ab3@12121>    MOVE.l a2,-(a7)
0002A324 <AmiBlitz3.ab3@12122>    LEA sharebase,a2
0002A326 <AmiBlitz3.ab3@12123>    MOVEQ #$f+4,d7
0002A32A <AmiBlitz3.ab3@12124>    BSR.w findlab
0002A32E <AmiBlitz3.ab3@12125>    BEQ 'l2x
0002A330 <AmiBlitz3.ab3@12126>    MOVE.l (a7)+,a2
0002A334 <AmiBlitz3.ab3@12127> BRA 'cont
0002A336 <AmiBlitz3.ab3@12130>   ADDQ.l #4,a7
0002A33C <AmiBlitz3.ab3@12131>   CLR.w varmode
0002A342 <AmiBlitz3.ab3@12132>   MOVE.b flagmask+1,D1
0002A346 <AmiBlitz3.ab3@12133>   MOVE.b $7(A2),D3
0002A348 <AmiBlitz3.ab3@12134>   EOR.b D3,D1
0002A34C <AmiBlitz3.ab3@12135>   BNE vardeclareerr
0002A350 <AmiBlitz3.ab3@12136> BRA JL_0_8FA8
0002A356 <AmiBlitz3.ab3@12139>    MOVE.w nonew,D1
0002A35A <AmiBlitz3.ab3@12140>    BNE.w nonewerr
0002A360 <AmiBlitz3.ab3@12141>    TST.b nowdeclare
0002A364 <AmiBlitz3.ab3@12142>    BNE 'l2
0002A36A <AmiBlitz3.ab3@12143>    TST.b declare2
0002A36E <AmiBlitz3.ab3@12144>    BEQ 'l1
0002A372 <AmiBlitz3.ab3@12145>    CMP.b #$2e,d0
0002A376 <AmiBlitz3.ab3@12146>    BEQ 'l2
0002A37A <AmiBlitz3.ab3@12147>    CMP.b #"$",d0
0002A37E <AmiBlitz3.ab3@12148>    BEQ 'l2
0002A382 <AmiBlitz3.ab3@12149> BRA vardeclareerr
0002A388 <AmiBlitz3.ab3@12152>   TST.b declare
0002A38C <AmiBlitz3.ab3@12153>    BNE vardeclareerr
0002A390 <AmiBlitz3.ab3@12156>   BSR.w addvariable
0002A396 <AmiBlitz3.ab3@12157>   NOT.w notshared
0002A398 <AmiBlitz3.ab3@12158>   MOVEA.l A2,A3
0002A39E <AmiBlitz3.ab3@12159>   MOVEA.l defaulttype,A2
0002A3A2 <AmiBlitz3.ab3@12160>   CMP.w #$2E,D0
0002A3A6 <AmiBlitz3.ab3@12161>    BEQ.w JL_0_8EB8
0002A3AA <AmiBlitz3.ab3@12162>   CMP.w #$24,D0
0002A3AE <AmiBlitz3.ab3@12163>    BNE.w JL_0_8ECA
0002A3B4 <AmiBlitz3.ab3@12164>   LEA newtype_string,A2
0002A3B8 <AmiBlitz3.ab3@12165>    BSR.w get1bytemain
0002A3BC <AmiBlitz3.ab3@12166> BRA.w JL_0_8ECA
0002A3C2 <AmiBlitz3.ab3@12169> JMP JUMP_notypeerr
0002A3C6 <AmiBlitz3.ab3@12172>    BSR.w getparameter2
0002A3CC <AmiBlitz3.ab3@12173>   LEA newtypebase,A2
0002A3D0 <AmiBlitz3.ab3@12174>    BSR.w findtype
0002A3D4 <AmiBlitz3.ab3@12175>    BNE.w notypeerr3
0002A3DA <AmiBlitz3.ab3@12178>   CMPA.l #newtype_byte,A2
0002A3DE <AmiBlitz3.ab3@12179>    BEQ.w JL_0_8EECb
0002A3E4 <AmiBlitz3.ab3@12180>   MOVE.w varmode,D1
0002A3E8 <AmiBlitz3.ab3@12181>    BNE.w JL_0_8EE4b
0002A3EE <AmiBlitz3.ab3@12182>   ADDQ.w #1,globalvarpointer
0002A3F6 <AmiBlitz3.ab3@12185>   BCLR #$0,globalvarpointer+1
0002A3FA <AmiBlitz3.ab3@12188>   MOVE.l A2,$A(A3)
0002A402 <AmiBlitz3.ab3@12189>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A404 <AmiBlitz3.ab3@12191>   MOVEQ.l #$04,D1
0002A40C <AmiBlitz3.ab3@12192>   BTST #$0,flagmask+1
0002A410 <AmiBlitz3.ab3@12193>    BNE.w JL_0_8F22b
0002A418 <AmiBlitz3.ab3@12194>   BTST #$1,flagmask+1
0002A41C <AmiBlitz3.ab3@12195>    BNE.w JL_0_8F22b
0002A424 <AmiBlitz3.ab3@12196>   CMPI.l #$100,$4(A2)
0002A428 <AmiBlitz3.ab3@12197>    BCC.w JL_0_8F22b
0002A42C <AmiBlitz3.ab3@12198>   MOVE.w $8(A2),D1
0002A432 <AmiBlitz3.ab3@12201>   TST.w varmode
0002A436 <AmiBlitz3.ab3@12202> BRA.w JL_0_8F3E
0002A43A <AmiBlitz3.ab3@12211>   BSR.w getparameter2
0002A440 <AmiBlitz3.ab3@12212>   LEA newtypebase,A2
0002A444 <AmiBlitz3.ab3@12213>    BSR.w findtype
0002A448 <AmiBlitz3.ab3@12214>    BNE.w notypeerr
0002A44E <AmiBlitz3.ab3@12217>   CMPA.l #newtype_byte,A2
0002A452 <AmiBlitz3.ab3@12218>    BEQ.w JL_0_8EEC
0002A458 <AmiBlitz3.ab3@12219>   MOVE.w varmode,D1
0002A45C <AmiBlitz3.ab3@12220>    BNE.w JL_0_8EE4
0002A462 <AmiBlitz3.ab3@12221>   ADDQ.w #1,globalvarpointer
0002A46A <AmiBlitz3.ab3@12224>   BCLR #$0,globalvarpointer+1
0002A46E <AmiBlitz3.ab3@12227>   MOVE.l A2,$A(A3)
0002A476 <AmiBlitz3.ab3@12228>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A478 <AmiBlitz3.ab3@12229>   MOVEQ.l #$04,D1
0002A480 <AmiBlitz3.ab3@12230>   BTST #$0,flagmask+1
0002A484 <AmiBlitz3.ab3@12231>    BNE.w JL_0_8F22
0002A48C <AmiBlitz3.ab3@12232>   BTST #$1,flagmask+1
0002A490 <AmiBlitz3.ab3@12233>    BNE.w JL_0_8F22
0002A498 <AmiBlitz3.ab3@12234>   CMPI.l #$100,$4(A2)
0002A49C <AmiBlitz3.ab3@12235>    BCC.w JL_0_8F22
0002A4A0 <AmiBlitz3.ab3@12236>   MOVE.w $8(A2),D1
0002A4A6 <AmiBlitz3.ab3@12239>   TST.w varmode
0002A4AA <AmiBlitz3.ab3@12240>    BEQ.w JL_0_8F3E
0002A4AC <AmiBlitz3.ab3@12241>   NEG.w D1
0002A4B2 <AmiBlitz3.ab3@12242>   ADD.w D1,globalvarpointer
0002A4BA <AmiBlitz3.ab3@12243>   MOVE.w globalvarpointer,$4(A3)
0002A4BC <AmiBlitz3.ab3@12244> RTS
0002A4C4 <AmiBlitz3.ab3@12247>   MOVE.w globalvarpointer,$4(A3)
0002A4CA <AmiBlitz3.ab3@12248>   ADD.w D1,globalvarpointer
0002A4CC <AmiBlitz3.ab3@12249> RTS
0002A4D2 <AmiBlitz3.ab3@12253>   LEA firstglob,A2
0002A4D6 <AmiBlitz3.ab3@12254>    BSR.w findvariable2
0002A4DA <AmiBlitz3.ab3@12257>   BNE.w JL_0_8F74
0002A4E0 <AmiBlitz3.ab3@12258>   MOVE.b flagmask+1,D1
0002A4E4 <AmiBlitz3.ab3@12259>   MOVE.b $7(A2),D3
0002A4E6 <AmiBlitz3.ab3@12260>   EOR.b D3,D1
0002A4EA <AmiBlitz3.ab3@12261>    BEQ.w JL_0_8FA8
0002A4EE <AmiBlitz3.ab3@12262>    BSR.w findlab
0002A4F2 <AmiBlitz3.ab3@12263> BRA.w JL_0_8F58
0002A4FA <AmiBlitz3.ab3@12266>   MOVE.w #$FFFF,varmode
0002A500 <AmiBlitz3.ab3@12267>   MOVE.w globalvarpointer,-(A7)
0002A50A <AmiBlitz3.ab3@12268>   MOVE.w locvaroff,globalvarpointer
0002A510 <AmiBlitz3.ab3@12269>   LEA firstlocal,A2
0002A518 <AmiBlitz3.ab3@12270>   MOVE.b #1,newvariable
0002A51C <AmiBlitz3.ab3@12271>    BSR.w JL_0_8E5E
0002A522 <AmiBlitz3.ab3@12272>   CLR.b newvariable
0002A52C <AmiBlitz3.ab3@12273>   MOVE.w globalvarpointer,locvaroff
0002A532 <AmiBlitz3.ab3@12274>   MOVE.w (A7)+,globalvarpointer
0002A534 <AmiBlitz3.ab3@12275> RTS
0002A536 <AmiBlitz3.ab3@12278>   MOVEA.l A2,A3
0002A53A <AmiBlitz3.ab3@12279>   CMP.w #$2E,D0
0002A53E <AmiBlitz3.ab3@12280>    BEQ.w JL_0_8FCE
0002A542 <AmiBlitz3.ab3@12281>   CMP.w #$24,D0
0002A546 <AmiBlitz3.ab3@12282>    BNE.w JL_0_8FE8
0002A54E <AmiBlitz3.ab3@12283>   CMPI.l #newtype_string,$A(A3)
0002A552 <AmiBlitz3.ab3@12284>    BNE.w rongtypeerr
0002A556 <AmiBlitz3.ab3@12285>    BSR.w get1bytemain
0002A55A <AmiBlitz3.ab3@12286> BRA.w JL_0_8FE8
0002A55E <AmiBlitz3.ab3@12289>    BSR.w getparameter2
0002A564 <AmiBlitz3.ab3@12290>   LEA newtypebase,A2
0002A568 <AmiBlitz3.ab3@12291>    BSR.w findtype
0002A56C <AmiBlitz3.ab3@12292>    BNE.w notypeerr
0002A570 <AmiBlitz3.ab3@12293>   CMPA.l $A(A3),A2
0002A574 <AmiBlitz3.ab3@12294>    BNE.w rongtypeerr
0002A57C <AmiBlitz3.ab3@12296>   BTST #$0,flagmask+1
0002A580 <AmiBlitz3.ab3@12297>    BEQ.w JL_0_8FFE
0002A586 <AmiBlitz3.ab3@12298>   BTST #$0,$7(A3)
0002A58A <AmiBlitz3.ab3@12299>    BEQ.w pointerr
0002A58E <AmiBlitz3.ab3@12302>   MOVEA.l $A(A3),A2
0002A590 <AmiBlitz3.ab3@12303> RTS
0002A592 <AmiBlitz3.ab3@12307>    TST.l D3                                                ;newtype >32kb  .w to .l
0002A596 <AmiBlitz3.ab3@12308>    BEQ.w JL_0_9042
0002A5A0 <AmiBlitz3.ab3@12309>    MOVE.l destpointer,loada
0002A5A4 <AmiBlitz3.ab3@12312> BRA JL_0_9032
0002A5A8 <AmiBlitz3.ab3@12314>   CMP.w #$9,D3                                             ;_addq_arrays
0002A5AC <AmiBlitz3.ab3@12315>    BCC.w JL_0_9032
0002A5B2 <AmiBlitz3.ab3@12316>   MOVE.w d3,arrayoffset
0002A5B6 <AmiBlitz3.ab3@12317>   ANDI.w #$7,D3
0002A5B8 <AmiBlitz3.ab3@12318>   LSL.w #8,D3
0002A5BA <AmiBlitz3.ab3@12319>   LSL.w #1,D3
0002A5C2 <AmiBlitz3.ab3@12320>   ANDI.w #$F1FF,addqa0
0002A5C8 <AmiBlitz3.ab3@12321>   OR.w D3,addqa0
0002A5CE <AmiBlitz3.ab3@12322>   MOVE.w addqa0,D1
0002A5D2 <AmiBlitz3.ab3@12323> BRA.w writeword
0002A5D8 <AmiBlitz3.ab3@12326>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002A5DC <AmiBlitz3.ab3@12327>   BGT longoffset
0002A5E2 <AmiBlitz3.ab3@12328>   MOVE.w D3,leaa0a0+2
0002A5E8 <AmiBlitz3.ab3@12329>   MOVE.w d3,arrayoffset
0002A5EE <AmiBlitz3.ab3@12330>   MOVE.l leaa0a0,D1
0002A5F2 <AmiBlitz3.ab3@12331>   BSR.w writelong
0002A5F4 <AmiBlitz3.ab3@12334> RTS
0002A5F8 <AmiBlitz3.ab3@12337>    MOVE.w #$d5fc,d1
0002A5FC <AmiBlitz3.ab3@12338>    BSR writeword
0002A5FE <AmiBlitz3.ab3@12339>    MOVE.l d3,d1
0002A602 <AmiBlitz3.ab3@12340>    BSR.w writelong
0002A604 <AmiBlitz3.ab3@12341> RTS
0002A608 <AmiBlitz3.ab3@12345>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002A60C <AmiBlitz3.ab3@12348>    BCS.w arrchk3                                           
0002A612 <AmiBlitz3.ab3@12349>    JSR $20000                                              ;jsr 0
0002A618 <AmiBlitz3.ab3@12355>   TST.b fast
0002A61C <AmiBlitz3.ab3@12356>   BEQ 'l1
0002A61E <AmiBlitz3.ab3@12357>    MOVEQ #0,d1                                             ;faster arrays
0002A624 <AmiBlitz3.ab3@12358>    MOVE.w regnum,d2
0002A626 <AmiBlitz3.ab3@12359>    MOVE.w d2,d1
0002A628 <AmiBlitz3.ab3@12360>    LSL.w #8,d1
0002A62A <AmiBlitz3.ab3@12361>    LSL.w #4,d1
0002A62C <AmiBlitz3.ab3@12362>    ADD.w d2,d1
0002A632 <AmiBlitz3.ab3@12363>    OR.l #$4c2d0000,d1
0002A638 <AmiBlitz3.ab3@12364>    TST.w varmode
0002A63C <AmiBlitz3.ab3@12365>    BEQ 'l1a
0002A640 <AmiBlitz3.ab3@12366>    BCLR #16,d1
0002A644 <AmiBlitz3.ab3@12369>    BSR writelong
0002A648 <AmiBlitz3.ab3@12370>    MOVE.w $4(A7),D1
0002A64C <AmiBlitz3.ab3@12371>    BSR.w writeword
0002A652 <AmiBlitz3.ab3@12372>    MOVE.w regnum,D1
0002A654 <AmiBlitz3.ab3@12373>   SUBQ.w #1,D1
0002A656 <AmiBlitz3.ab3@12374>   LSL.w #8,D1
0002A658 <AmiBlitz3.ab3@12375>   LSL.w #1,D1
0002A65C <AmiBlitz3.ab3@12376>   ORI.w #$D080,D1
0002A662 <AmiBlitz3.ab3@12377>   OR.w regnum,D1
0002A666 <AmiBlitz3.ab3@12378>    BSR.w writeword
0002A668 <AmiBlitz3.ab3@12379> RTS
0002A66E <AmiBlitz3.ab3@12382>   MOVE.w regnum,D2
0002A672 <AmiBlitz3.ab3@12383>   MOVE.w arrmul1(PC),D1
0002A674 <AmiBlitz3.ab3@12384>   OR.w D2,D1
0002A676 <AmiBlitz3.ab3@12385>   SUBQ.w #1,D1
0002A67A <AmiBlitz3.ab3@12386>    BSR.w writeword
0002A67E <AmiBlitz3.ab3@12387>   MOVE.w arrmul2(PC),D1
0002A680 <AmiBlitz3.ab3@12388>   OR.w D2,D1
0002A682 <AmiBlitz3.ab3@12389>   MOVE.w D2,D3
0002A684 <AmiBlitz3.ab3@12390>   SUBQ.w #1,D3
0002A686 <AmiBlitz3.ab3@12391>   LSL.w #8,D3
0002A688 <AmiBlitz3.ab3@12392>   LSL.w #1,D3
0002A68A <AmiBlitz3.ab3@12393>   OR.w D3,D1
0002A68E <AmiBlitz3.ab3@12394>    BSR.w writeword
0002A692 <AmiBlitz3.ab3@12395>   MOVE.w arrmul3(PC),D1
0002A694 <AmiBlitz3.ab3@12396>   MOVE.w D2,D3
0002A696 <AmiBlitz3.ab3@12397>   LSL.w #8,D3
0002A698 <AmiBlitz3.ab3@12398>   LSL.w #1,D3
0002A69A <AmiBlitz3.ab3@12399>   OR.w D3,D1
0002A69E <AmiBlitz3.ab3@12400>    BSR.w pokewda5s
0002A6A2 <AmiBlitz3.ab3@12401>   MOVE.w $4(A7),D1
0002A6A4 <AmiBlitz3.ab3@12402>   ADDQ.w #2,D1
0002A6A8 <AmiBlitz3.ab3@12403>    BSR.w writeword
0002A6AC <AmiBlitz3.ab3@12404>   MOVE.w arrmul4(PC),D1
0002A6AE <AmiBlitz3.ab3@12405>   MOVE.w D2,D3
0002A6B0 <AmiBlitz3.ab3@12406>   SUBQ.w #1,D3
0002A6B2 <AmiBlitz3.ab3@12407>   LSL.w #8,D3
0002A6B4 <AmiBlitz3.ab3@12408>   LSL.w #1,D3
0002A6B6 <AmiBlitz3.ab3@12409>   OR.w D3,D1
0002A6BA <AmiBlitz3.ab3@12410>    BSR.w pokewda5s
0002A6BE <AmiBlitz3.ab3@12411>   MOVE.w $4(A7),D1
0002A6C2 <AmiBlitz3.ab3@12412>    BSR.w writeword
0002A6C6 <AmiBlitz3.ab3@12413>   MOVE.w arrmul5(PC),D1
0002A6C8 <AmiBlitz3.ab3@12414>   OR.w D2,D1
0002A6CA <AmiBlitz3.ab3@12415>   SUBQ.w #1,D1
0002A6CE <AmiBlitz3.ab3@12416>    BSR.w writeword
0002A6D2 <AmiBlitz3.ab3@12417>   MOVE.w arrmul6(PC),D1
0002A6D4 <AmiBlitz3.ab3@12418>   OR.w D2,D1
0002A6D6 <AmiBlitz3.ab3@12419>   SUBQ.w #1,D1
0002A6DA <AmiBlitz3.ab3@12420>    BSR.w writeword
0002A6DE <AmiBlitz3.ab3@12421>   MOVE.w arrmul7(PC),D1
0002A6E0 <AmiBlitz3.ab3@12422>   OR.w D2,D1
0002A6E2 <AmiBlitz3.ab3@12423>   SUBQ.w #1,D1
0002A6E4 <AmiBlitz3.ab3@12424>   MOVE.w D2,D3
0002A6E6 <AmiBlitz3.ab3@12425>   LSL.w #8,D3
0002A6E8 <AmiBlitz3.ab3@12426>   LSL.w #1,D3
0002A6EA <AmiBlitz3.ab3@12427>   OR.w D3,D1
0002A6EE <AmiBlitz3.ab3@12428>    BSR.w writeword
0002A6F2 <AmiBlitz3.ab3@12429>   MOVE.w arrmul8(PC),D1
0002A6F4 <AmiBlitz3.ab3@12430>   MOVE.w D2,D3
0002A6F6 <AmiBlitz3.ab3@12431>   SUBQ.w #1,D3
0002A6F8 <AmiBlitz3.ab3@12432>   LSL.w #8,D3
0002A6FA <AmiBlitz3.ab3@12433>   LSL.w #1,D3
0002A6FC <AmiBlitz3.ab3@12434>   OR.w D3,D1
0002A700 <AmiBlitz3.ab3@12435>    BSR.w writeword
0002A706 <AmiBlitz3.ab3@12436>   MOVE.w regnum,D1
0002A708 <AmiBlitz3.ab3@12437>   SUBQ.w #1,D1
0002A70A <AmiBlitz3.ab3@12438>   LSL.w #8,D1
0002A70C <AmiBlitz3.ab3@12439>   LSL.w #1,D1
0002A710 <AmiBlitz3.ab3@12440>   ORI.w #$D080,D1
0002A716 <AmiBlitz3.ab3@12441>   OR.w regnum,D1
0002A71A <AmiBlitz3.ab3@12442> BRA.w writeword
0002A71C <AmiBlitz3.ab3@12450> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002A71E <AmiBlitz3.ab3@12451> arrmul2:   MOVE  d0,d0
0002A722 <AmiBlitz3.ab3@12452> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002A726 <AmiBlitz3.ab3@12453> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002A728 <AmiBlitz3.ab3@12455> arrmul5:   SWAP d0
0002A72A <AmiBlitz3.ab3@12456> arrmul6:   CLR d0
0002A72C <AmiBlitz3.ab3@12457> arrmul7:   ADD.l d0,d0
0002A72E <AmiBlitz3.ab3@12458> arrmul8:   MOVE.l (a7)+,d0
0002A732 <AmiBlitz3.ab3@12463> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002A736 <AmiBlitz3.ab3@12464> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002A738 <AmiBlitz3.ab3@12465> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002A73E <AmiBlitz3.ab3@12483>   CLR.l lastoffset_org
0002A744 <AmiBlitz3.ab3@12484>   BTST #$1,$7(A3)
0002A748 <AmiBlitz3.ab3@12485>    BEQ.w calcvar__notarr
0002A74E <AmiBlitz3.ab3@12486>   MOVE.w notshared,D1
0002A752 <AmiBlitz3.ab3@12487>    BNE.w noarrerr
0002A756 <AmiBlitz3.ab3@12488>    BSR.w get1bytemain
0002A75A <AmiBlitz3.ab3@12489>   CMP.w #$29,D0
0002A75E <AmiBlitz3.ab3@12490>    BNE.w calcvar__notalist
0002A764 <AmiBlitz3.ab3@12491>   BTST #$0,$6(A3)
0002A768 <AmiBlitz3.ab3@12492>    BEQ.w nolisterr
0002A770 <AmiBlitz3.ab3@12493>   MOVE.w $4(A3),listcode1+2
0002A774 <AmiBlitz3.ab3@12494>   MOVE.l listcode1(PC),D1
0002A778 <AmiBlitz3.ab3@12495>    BSR.w pokela5s
0002A77C <AmiBlitz3.ab3@12496>   MOVE.l listcode2(PC),D1
0002A780 <AmiBlitz3.ab3@12497>    BSR.w writelong
0002A786 <AmiBlitz3.ab3@12498>   TST.b debugmode
0002A78A <AmiBlitz3.ab3@12499>    BEQ.w calcvar__nolrerr
0002A78C <AmiBlitz3.ab3@12503>   MOVE.l A2,-(A7)
0002A790 <AmiBlitz3.ab3@12504>   MOVE.w #$C315,D1
0002A794 <AmiBlitz3.ab3@12505>    BSR.w Atokejsr
0002A796 <AmiBlitz3.ab3@12506>   MOVEA.l (A7)+,A2
0002A79A <AmiBlitz3.ab3@12509>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002A79E <AmiBlitz3.ab3@12511>    BSR.w writeword
0002A7A2 <AmiBlitz3.ab3@12512> BRA.w calcvar__normalar
0002A7A4 <AmiBlitz3.ab3@12515> calcvar__listoff:   Ds.w 1
0002A7AA <AmiBlitz3.ab3@12519>   CLR.w calcvar__listoff
0002A7B0 <AmiBlitz3.ab3@12520>   BTST #$0,$6(A3)
0002A7B4 <AmiBlitz3.ab3@12521>    BEQ.w calcvar__knop
0002A7BC <AmiBlitz3.ab3@12522>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002A7C0 <AmiBlitz3.ab3@12525>   MOVEM.l A2-A3,-(A7)
0002A7C6 <AmiBlitz3.ab3@12526>   MOVE.w varmode,-(A7)
0002A7CA <AmiBlitz3.ab3@12527>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002A7CE <AmiBlitz3.ab3@12528>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002A7D0 <AmiBlitz3.ab3@12529>   MOVE.l A2,-(A7)
0002A7D6 <AmiBlitz3.ab3@12530>   MOVE.w flagmask,-(A7)
0002A7E0 <AmiBlitz3.ab3@12532>   MOVE.w oldqflag,instringon
0002A7E6 <AmiBlitz3.ab3@12533>   MOVEA.l lastsourcepos,A5
0002A7EA <AmiBlitz3.ab3@12534>    BSR.w arreval
0002A7F0 <AmiBlitz3.ab3@12535>   MOVE.w (A7)+,flagmask
0002A7F8 <AmiBlitz3.ab3@12536>   MOVE.w $8(A7),varmode
0002A7FE <AmiBlitz3.ab3@12537>   TST.b debugmode
0002A802 <AmiBlitz3.ab3@12538>    BEQ.w calcvar__noszchk
0002A804 <AmiBlitz3.ab3@12542>   MOVEA.l (A7)+,A2
0002A806 <AmiBlitz3.ab3@12543>   MOVEQ.l #$04,D1
0002A80E <AmiBlitz3.ab3@12544>   BTST #$0,flagmask+1                                      ;pointer?
0002A812 <AmiBlitz3.ab3@12545>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002A816 <AmiBlitz3.ab3@12546>   MOVE.w $8(A2),D1
0002A81A <AmiBlitz3.ab3@12549>   ADD.w calcvar__listoff(PC),D1
0002A81E <AmiBlitz3.ab3@12550>   BSR.w JL_0_B6DE
0002A824 <AmiBlitz3.ab3@12551>   ADDQ.w #1,regnum
0002A826 <AmiBlitz3.ab3@12554>   ADDQ.w #4,(A7)
0002A82A <AmiBlitz3.ab3@12555>   TST.w $4(A7)
0002A82E <AmiBlitz3.ab3@12556>    BEQ.w calcvar__isglob
0002A830 <AmiBlitz3.ab3@12557>   SUBQ.w #8,(A7)                                           ;range check local array
0002A836 <AmiBlitz3.ab3@12560>   TST.b debugmode
0002A83A <AmiBlitz3.ab3@12561>    BEQ.w calcvar__noer1
0002A840 <AmiBlitz3.ab3@12562>   MOVE.w regnum,D1
0002A842 <AmiBlitz3.ab3@12563>   SUBQ.w #1,D1
0002A844 <AmiBlitz3.ab3@12564>   LSL.w #8,D1
0002A846 <AmiBlitz3.ab3@12565>   LSL.w #1,D1
0002A84A <AmiBlitz3.ab3@12566>   OR.w zarrchk(PC),D1
0002A84E <AmiBlitz3.ab3@12567>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002A850 <AmiBlitz3.ab3@12568>   MOVE.w (A7),D1
0002A854 <AmiBlitz3.ab3@12569>    BSR.w writeword
0002A858 <AmiBlitz3.ab3@12570>   MOVE.l arrchk2(PC),D1
0002A85C <AmiBlitz3.ab3@12571>    BSR.w writelong
0002A860 <AmiBlitz3.ab3@12572>   MOVE.w #$C309,D1
0002A864 <AmiBlitz3.ab3@12573>    BSR.w Atokejsr
0002A868 <AmiBlitz3.ab3@12576>   SUBQ.w #1,$2(A7)
0002A86C <AmiBlitz3.ab3@12577>    BEQ.w calcvar__ardone
0002A870 <AmiBlitz3.ab3@12578>   CMP.w #$2C,D0
0002A874 <AmiBlitz3.ab3@12579>    BNE.w syntaxerr
0002A87A <AmiBlitz3.ab3@12580>    TST.b fast
0002A87E <AmiBlitz3.ab3@12581>    BNE 'l1
0002A882 <AmiBlitz3.ab3@12582>    BSR.w arrevalchk
0002A886 <AmiBlitz3.ab3@12583> BRA 'l2
0002A88A <AmiBlitz3.ab3@12586>   BSR arreval
0002A892 <AmiBlitz3.ab3@12589>   MOVE.w $4(A7),varmode
0002A896 <AmiBlitz3.ab3@12590>   BSR.w JL_0_9052
0002A89A <AmiBlitz3.ab3@12591> BRA.w calcvar__arloop
0002A89E <AmiBlitz3.ab3@12595>   CMP.w #$29,D0
0002A8A2 <AmiBlitz3.ab3@12596>    BNE.w syntaxerr
0002A8A8 <AmiBlitz3.ab3@12597>   SUBQ.w #1,regnum
0002A8AA <AmiBlitz3.ab3@12598>   ADDQ.w #6,A7
0002A8AE <AmiBlitz3.ab3@12599>   MOVEM.l (A7)+,A2-A3
0002A8B6 <AmiBlitz3.ab3@12600>   MOVE.w $4(A3),movea5a0+2
0002A8BC <AmiBlitz3.ab3@12601>   MOVE.l movea5a0,D1
0002A8C0 <AmiBlitz3.ab3@12602>    BSR.w pokela5s
0002A8C6 <AmiBlitz3.ab3@12603>   MOVE.w regnum,D1
0002A8CA <AmiBlitz3.ab3@12604>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002A8CE <AmiBlitz3.ab3@12605>    BSR.w writeword
0002A8D4 <AmiBlitz3.ab3@12606>   BTST #$0,$6(A3)
0002A8D8 <AmiBlitz3.ab3@12607>    BEQ.w calcvar__normalar
0002A8DC <AmiBlitz3.ab3@12611>   MOVE.w listarfix(PC),D1
0002A8E0 <AmiBlitz3.ab3@12612>    BSR.w writeword
0002A8E4 <AmiBlitz3.ab3@12615>   BSR.w get1bytemain
0002A8EA <AmiBlitz3.ab3@12619>   BTST #$0,$7(A3)
0002A8EE <AmiBlitz3.ab3@12620>    BEQ.w calcvar__noppnt
0002A8F2 <AmiBlitz3.ab3@12621>   CMP.w #$5C,D0
0002A8F6 <AmiBlitz3.ab3@12622>    BNE.w calcvar__pmskip
0002A8FA <AmiBlitz3.ab3@12623>   MOVE.w calcvar__pfix(PC),D1
0002A8FE <AmiBlitz3.ab3@12624>    BSR.w writeword
0002A902 <AmiBlitz3.ab3@12627>   MOVE.w #$8000,D2
0002A906 <AmiBlitz3.ab3@12628> BRA.w calcvar__loopml
0002A90A <AmiBlitz3.ab3@12631>   MOVE.w #$C000,D2
0002A90E <AmiBlitz3.ab3@12632> BRA.w calcvar__loopml
0002A910 <AmiBlitz3.ab3@12636> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002A914 <AmiBlitz3.ab3@12641>   CMP.w #$28,D0
0002A918 <AmiBlitz3.ab3@12642>    BEQ.w noarrerr
0002A920 <AmiBlitz3.ab3@12643>   CMPI.l #$100,$4(A2)
0002A924 <AmiBlitz3.ab3@12644>    BCS.w calcvar__simpvar
0002A92A <AmiBlitz3.ab3@12645>   BTST #$0,$7(A3)
0002A92E <AmiBlitz3.ab3@12646>    BEQ.w calcvar__notap
0002A932 <AmiBlitz3.ab3@12650>   CMP.w #$5C,D0
0002A936 <AmiBlitz3.ab3@12651>    BEQ.w calcvar__notap
0002A938 <AmiBlitz3.ab3@12652>   MOVEQ.l #$00,D2
0002A93C <AmiBlitz3.ab3@12653> BRA.w calcvar__simpvar2
0002A940 <AmiBlitz3.ab3@12656>   MOVE.w #$8000,D2
0002A948 <AmiBlitz3.ab3@12657>   MOVE.w $4(A3),movea5a0+2
0002A94E <AmiBlitz3.ab3@12658>   MOVE.l movea5a0,D1
0002A952 <AmiBlitz3.ab3@12659>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002A958 <AmiBlitz3.ab3@12661>    TST.b debugmode
0002A95C <AmiBlitz3.ab3@12662>    BEQ.w 'skip
0002A960 <AmiBlitz3.ab3@12663>    MOVE.w #$c320,D1
0002A966 <AmiBlitz3.ab3@12664>    JSR Atokejsr
0002A968 <AmiBlitz3.ab3@12668>   MOVEQ.l #$00,D3
0002A96C <AmiBlitz3.ab3@12671>   CMP.w #$5C,D0
0002A970 <AmiBlitz3.ab3@12672>    BNE.w calcvar__done
0002A978 <AmiBlitz3.ab3@12673>   CMPI.l #$100,$4(A2)
0002A97C <AmiBlitz3.ab3@12674>    BCS.w rongtypeerr
0002A97E <AmiBlitz3.ab3@12675>   MOVE.w D2,-(A7)
0002A982 <AmiBlitz3.ab3@12676>    BSR.w getparameter2
0002A986 <AmiBlitz3.ab3@12677>    BEQ.w syntaxerr
0002A988 <AmiBlitz3.ab3@12678>   ADDQ.w #4,A2
0002A98C <AmiBlitz3.ab3@12679>    BSR.w findvariable2
0002A990 <AmiBlitz3.ab3@12680>    BNE.w noofferr
0002A992 <AmiBlitz3.ab3@12681>   MOVE.w (A7)+,D2
0002A994 <AmiBlitz3.ab3@12682>   MOVEA.l A2,A3                                             ;pointer to offset
0002A998 <AmiBlitz3.ab3@12683>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002A99A <AmiBlitz3.ab3@12684>   MOVEQ #0,d1
0002A99E <AmiBlitz3.ab3@12685>   MOVE.w 4(a3),d1
0002A9A0 <AmiBlitz3.ab3@12686>   ADD.l d1,d3
0002A9A6 <AmiBlitz3.ab3@12688>   MOVE.l A3,lastoffset_org
0002A9AA <AmiBlitz3.ab3@12689>   CMP.w #$5B,D0
0002A9AE <AmiBlitz3.ab3@12690>    BNE.w calcvar__realdone
0002A9B4 <AmiBlitz3.ab3@12691>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002A9B8 <AmiBlitz3.ab3@12692>    BEQ.w rongtypeerr
0002A9BC <AmiBlitz3.ab3@12693>    BSR.w JL_0_9004
0002A9C0 <AmiBlitz3.ab3@12694>   MOVEM.l A2-A3,-(A7)
0002A9C6 <AmiBlitz3.ab3@12695>   MOVE.w varmode,-(A7)
0002A9CC <AmiBlitz3.ab3@12696>   MOVE.l lastoffset_org,-(A7)
0002A9D2 <AmiBlitz3.ab3@12697>   MOVE.w pusha2,D1
0002A9D6 <AmiBlitz3.ab3@12698>    BSR.w writeword
0002A9D8 <AmiBlitz3.ab3@12699>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002A9E2 <AmiBlitz3.ab3@12700>   MOVE.l destpointer,deststore
0002A9E8 <AmiBlitz3.ab3@12701>    MOVE.l rightsidetype,-(a7)
0002A9EE <AmiBlitz3.ab3@12702>    MOVE.l leftsidetype,-(a7)
0002A9F4 <AmiBlitz3.ab3@12703>    CLR.l rightsidetype
0002A9FA <AmiBlitz3.ab3@12704>    CLR.l leftsidetype
0002A9FE <AmiBlitz3.ab3@12705>    BSR.w eval
0002AA04 <AmiBlitz3.ab3@12706>    MOVE.l (a7)+,rightsidetype
0002AA0A <AmiBlitz3.ab3@12707>    MOVE.l (a7)+,leftsidetype
0002AA0E <AmiBlitz3.ab3@12708>   CMP.w #$5D,D0
0002AA12 <AmiBlitz3.ab3@12709>    BNE.w syntaxerr
0002AA18 <AmiBlitz3.ab3@12710>   TST.b fast                                               ;a2,-(a7) array
0002AA1C <AmiBlitz3.ab3@12711>   BEQ calcvar__loop0_l10
0002AA22 <AmiBlitz3.ab3@12715>   MOVE.l destpointer,d1
0002AA28 <AmiBlitz3.ab3@12716>   SUB.l deststore,d1
0002AA2E <AmiBlitz3.ab3@12717>   CMP.l #4,d1
0002AA32 <AmiBlitz3.ab3@12718>   BNE calcvar__loop0_l10
0002AA38 <AmiBlitz3.ab3@12719>   MOVE.l destpointer,a4
0002AA3E <AmiBlitz3.ab3@12720>   MOVE.l -4(a4),-6(a4)
0002AA44 <AmiBlitz3.ab3@12721>   SUBQ.l #2,destpointer
0002AA4A <AmiBlitz3.ab3@12722>   CLR.l imm_addr
0002AA50 <AmiBlitz3.ab3@12723>   CLR.l load_var_addr
0002AA54 <AmiBlitz3.ab3@12724> BRA calcvar__loop0_l20
0002AA5A <AmiBlitz3.ab3@12727>   MOVE.w pulla2,D1
0002AA5E <AmiBlitz3.ab3@12728>    BSR.w writeword
0002AA64 <AmiBlitz3.ab3@12731>   MOVE.l (A7)+,lastoffset_org
0002AA6A <AmiBlitz3.ab3@12732>   MOVE.w (A7)+,varmode
0002AA6E <AmiBlitz3.ab3@12733>   MOVEM.l (A7)+,A2-A3
0002AA74 <AmiBlitz3.ab3@12739>   TST.w debugmode
0002AA78 <AmiBlitz3.ab3@12740>    BEQ.b calcvar__nobchk
0002AA7C <AmiBlitz3.ab3@12741>   MOVE.w $8(A3),D1
0002AA80 <AmiBlitz3.ab3@12742>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002AA86 <AmiBlitz3.ab3@12746>   MOVE.w D1,brchkcode+2
0002AA8C <AmiBlitz3.ab3@12747>   MOVE.w regnum,D1
0002AA8E <AmiBlitz3.ab3@12748>   LSL.w #8,D1
0002AA90 <AmiBlitz3.ab3@12749>   LSL.w #1,D1
0002AA94 <AmiBlitz3.ab3@12750>   OR.w brchkcode0(PC),D1
0002AA9A <AmiBlitz3.ab3@12751>   MOVE.w D1,brchkcode
0002AA9E <AmiBlitz3.ab3@12752>   MOVE.l brchkcode(PC),D1
0002AAA2 <AmiBlitz3.ab3@12753>    BSR.w writelong
0002AAA6 <AmiBlitz3.ab3@12754>   MOVE.l brchkcode+4(PC),D1
0002AAAA <AmiBlitz3.ab3@12755>    BSR.w writelong
0002AAAE <AmiBlitz3.ab3@12756>   MOVE.w brchkcode+8(PC),D1
0002AAB2 <AmiBlitz3.ab3@12757>    BSR.w writeword
0002AAB4 <AmiBlitz3.ab3@12760>   MOVEQ.l #$04,D1
0002AABA <AmiBlitz3.ab3@12761>   BTST #$0,$7(A3)
0002AABE <AmiBlitz3.ab3@12762>    BNE.w calcvar__dothemul
0002AAC2 <AmiBlitz3.ab3@12763>   MOVE.w $8(A2),D1
0002AAC6 <AmiBlitz3.ab3@12766>   BSR.w JL_0_B6DE
0002AACC <AmiBlitz3.ab3@12767>   MOVE.w addrega2,D1
0002AAD2 <AmiBlitz3.ab3@12768>   OR.w regnum,D1
0002AAD6 <AmiBlitz3.ab3@12769>    OR.w #$100,d1                                           ;>32kb types
0002AADA <AmiBlitz3.ab3@12770>    BSR.w writeword
0002AADE <AmiBlitz3.ab3@12771>    BSR.w get1bytemain
0002AAE0 <AmiBlitz3.ab3@12772>   MOVEQ.l #$00,D3
0002AAE4 <AmiBlitz3.ab3@12773>   MOVE.w #$8000,D2
0002AAEA <AmiBlitz3.ab3@12776>   BTST #$0,$7(A3)
0002AAEE <AmiBlitz3.ab3@12777>    BNE.w calcvar__pointer
0002AAF2 <AmiBlitz3.ab3@12778> BRA.w calcvar__loop0
0002AAF6 <AmiBlitz3.ab3@12782>  CMP.w #$5C,D0
0002AAFA <AmiBlitz3.ab3@12783>    BNE.w calcvar__done3
0002AAFC <AmiBlitz3.ab3@12784>   TST.w D3
0002AB00 <AmiBlitz3.ab3@12785>    BNE.w calcvar__pskip
0002AB06 <AmiBlitz3.ab3@12786>   MOVE.w movea0,D1
0002AB0A <AmiBlitz3.ab3@12787>    BSR.w writeword
0002AB0E <AmiBlitz3.ab3@12788> BRA.w calcvar__pmore
0002AB14 <AmiBlitz3.ab3@12791>   MOVE.w D3,movea0a0+2
0002AB1A <AmiBlitz3.ab3@12792>   MOVE.l movea0a0,D1
0002AB1E <AmiBlitz3.ab3@12793>    BSR.w writelong
0002AB24 <AmiBlitz3.ab3@12796>   BTST #$2,$7(A3)
0002AB28 <AmiBlitz3.ab3@12797>    BEQ.w calcvar__loopml
0002AB2E <AmiBlitz3.ab3@12798>   MOVE.l adda0a0,D1
0002AB32 <AmiBlitz3.ab3@12799>    BSR.w writelong
0002AB36 <AmiBlitz3.ab3@12800> BRA.w calcvar__loopml
0002AB3A <AmiBlitz3.ab3@12803>   BSET #$E,D2
0002AB40 <AmiBlitz3.ab3@12804>   BTST #$2,$7(A3)
0002AB44 <AmiBlitz3.ab3@12805>    BNE.w calcvar__done
0002AB48 <AmiBlitz3.ab3@12806>   BSET #$D,D2
0002AB50 <AmiBlitz3.ab3@12809>   CMPI.l #$100,$4(A2)
0002AB54 <AmiBlitz3.ab3@12810>    BCC.w calcvar__done2
0002AB58 <AmiBlitz3.ab3@12811>   MOVE.b $7(A2),D2
0002AB5C <AmiBlitz3.ab3@12814> BRA.w JL_0_9004
0002AB60 <AmiBlitz3.ab3@12817>   MOVE.w $6(A2),D2
0002AB64 <AmiBlitz3.ab3@12820>   MOVE.w $4(A3),D3
0002AB6A <AmiBlitz3.ab3@12821>   BTST #$0,$7(A3)
0002AB6E <AmiBlitz3.ab3@12822>    BEQ.w calcvar__nopoint
0002AB72 <AmiBlitz3.ab3@12823>   BSET #$E,D2
0002AB74 <AmiBlitz3.ab3@12826> RTS
0002AB78 <AmiBlitz3.ab3@12830> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002AB7C <AmiBlitz3.ab3@12831> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002AB7E <AmiBlitz3.ab3@12832>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002AB80 <AmiBlitz3.ab3@12833>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002AB82 <AmiBlitz3.ab3@12834>              Dc.b $4E,$40                                  ;TRAP    #00
0002AB88 <AmiBlitz3.ab3@12842>   TST.w varmode
0002AB8C <AmiBlitz3.ab3@12843>    BEQ.w writeword
0002AB90 <AmiBlitz3.ab3@12844>   BCLR #$0,D1
0002AB94 <AmiBlitz3.ab3@12845> BRA.w writeword
0002AB9A <AmiBlitz3.ab3@12848>   TST.w varmode
0002AB9E <AmiBlitz3.ab3@12849>    BEQ.w writeword
0002ABA2 <AmiBlitz3.ab3@12850>   BCLR #$9,D1
0002ABA6 <AmiBlitz3.ab3@12851> BRA.w writeword
0002ABAC <AmiBlitz3.ab3@12854>   TST.w proceduremode
0002ABB0 <AmiBlitz3.ab3@12855>    BEQ.w writelong
0002ABB4 <AmiBlitz3.ab3@12856>   BCLR #$19,D1
0002ABB8 <AmiBlitz3.ab3@12857> BRA.w writelong
0002ABBE <AmiBlitz3.ab3@12860>   TST.w varmode
0002ABC2 <AmiBlitz3.ab3@12861>   BEQ.w writelong
0002ABC6 <AmiBlitz3.ab3@12862>   BCLR #$10,D1
0002ABCC <AmiBlitz3.ab3@12865>   ADDQ.l #1,destpointer
0002ABD4 <AmiBlitz3.ab3@12866>   BCLR #$0,destpointer+3
0002ABDA <AmiBlitz3.ab3@12867>   MOVEA.l destpointer,A4
0002ABE0 <AmiBlitz3.ab3@12868>   CMPA.l destbufferend,A4
0002ABE4 <AmiBlitz3.ab3@12869>    BCC.w writeword__overa
0002ABE6 <AmiBlitz3.ab3@12870>   MOVE.l D1,(A4)+
0002ABEC <AmiBlitz3.ab3@12873>   MOVE.l A4,destpointer
0002ABF0 <AmiBlitz3.ab3@12874>   CMPA.l bigpc(PC),A4
0002ABF4 <AmiBlitz3.ab3@12875>    BHI.w writeword__nbp
0002ABF6 <AmiBlitz3.ab3@12876> RTS
0002ABFE <AmiBlitz3.ab3@12879>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002AC04 <AmiBlitz3.ab3@12880>   CLR.b fast
0002AC0A <AmiBlitz3.ab3@12881>   CLR.b fpu
0002AC10 <AmiBlitz3.ab3@12882>   CLR.b iee
0002AC12 <AmiBlitz3.ab3@12883>   ADDQ.w #4,A4
0002AC16 <AmiBlitz3.ab3@12884> BRA.w writeword__msa
0002AC1C <AmiBlitz3.ab3@12890>   ADDQ.l #1,destpointer
0002AC24 <AmiBlitz3.ab3@12891>   BCLR #$0,destpointer+3
0002AC2A <AmiBlitz3.ab3@12892>   MOVEA.l destpointer,A4
0002AC30 <AmiBlitz3.ab3@12893>   CMPA.l destbufferend,A4
0002AC34 <AmiBlitz3.ab3@12894>    BCC.w writeword__over
0002AC36 <AmiBlitz3.ab3@12895>   MOVE.w D1,(A4)+
0002AC3C <AmiBlitz3.ab3@12898>   MOVE.l A4,destpointer
0002AC40 <AmiBlitz3.ab3@12899>   CMPA.l bigpc(PC),A4
0002AC44 <AmiBlitz3.ab3@12900>    BHI.w writeword__nbp
0002AC46 <AmiBlitz3.ab3@12901> RTS
0002AC4C <AmiBlitz3.ab3@12904>   ADDQ.l #1,destpointer
0002AC54 <AmiBlitz3.ab3@12905>   BCLR #$0,destpointer+3
0002AC5A <AmiBlitz3.ab3@12906>   MOVEA.l destpointer,A4
0002AC60 <AmiBlitz3.ab3@12907>   CMPA.l destbufferend,A4
0002AC64 <AmiBlitz3.ab3@12908>    BCC.w writeword__over
0002AC66 <AmiBlitz3.ab3@12909>   MOVE.w D1,(A4)+
0002AC6C <AmiBlitz3.ab3@12910>   MOVE.l A4,destpointer
0002AC70 <AmiBlitz3.ab3@12911>   CMPA.l bigpc(PC),A4
0002AC74 <AmiBlitz3.ab3@12912>    BHI.w writeword__nbp
0002AC76 <AmiBlitz3.ab3@12913> RTS
0002AC7C <AmiBlitz3.ab3@12916>   TST.w cfetchmode
0002AC80 <AmiBlitz3.ab3@12917>   BNE.w writeword__nbp2
0002AC86 <AmiBlitz3.ab3@12918>   MOVE.l A4,bigpc
0002AC88 <AmiBlitz3.ab3@12921> RTS
0002AC90 <AmiBlitz3.ab3@12924>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002AC92 <AmiBlitz3.ab3@12925>   ADDQ.w #2,A4
0002AC98 <AmiBlitz3.ab3@12926>   CLR.b fast
0002AC9E <AmiBlitz3.ab3@12927>   CLR.b fpu
0002ACA4 <AmiBlitz3.ab3@12928>   CLR.b iee
0002ACA8 <AmiBlitz3.ab3@12929> BRA.w writeword__ms
0002ACAE <AmiBlitz3.ab3@12933>   MOVEA.l destpointer,A4
0002ACB4 <AmiBlitz3.ab3@12934>   CMPA.l destbufferend,A4
0002ACB8 <AmiBlitz3.ab3@12935>    BCC.w writebyte__over
0002ACBA <AmiBlitz3.ab3@12936>   MOVE.b D1,(A4)+
0002ACC0 <AmiBlitz3.ab3@12939>   MOVE.l A4,destpointer
0002ACC4 <AmiBlitz3.ab3@12940>   CMPA.l bigpc(PC),A4
0002ACC8 <AmiBlitz3.ab3@12941>    BHI.w writebyte__nbp
0002ACCA <AmiBlitz3.ab3@12942> RTS
0002ACD0 <AmiBlitz3.ab3@12945>   TST.w cfetchmode
0002ACD4 <AmiBlitz3.ab3@12946>    BNE.w writebyte__nbp2
0002ACDA <AmiBlitz3.ab3@12947>   MOVE.l A4,bigpc
0002ACDC <AmiBlitz3.ab3@12950> RTS
0002ACE4 <AmiBlitz3.ab3@12953>   MOVE.w #-1,dontwrite
0002ACE6 <AmiBlitz3.ab3@12954>   ADDQ.w #1,A4
0002ACEC <AmiBlitz3.ab3@12955>   CLR.b fast
0002ACF2 <AmiBlitz3.ab3@12956>   CLR.b fpu
0002ACF8 <AmiBlitz3.ab3@12957>   CLR.b iee
0002ACFC <AmiBlitz3.ab3@12958> BRA.w writebyte__ms
0002AD00 <AmiBlitz3.ab3@12961> bigpc:   Ds.l 1
0002AD02 <AmiBlitz3.ab3@12965>   MOVE.w (A0)+,D1
0002AD06 <AmiBlitz3.ab3@12966>   BSR.w writeword
0002AD08 <AmiBlitz3.ab3@12969>     CMPA.l A1,A0
0002AD0C <AmiBlitz3.ab3@12970>     BCC.w pokecode__done
0002AD0E <AmiBlitz3.ab3@12971>       MOVE.w (A0)+,D1
0002AD12 <AmiBlitz3.ab3@12972>       BSR.w writeword
0002AD16 <AmiBlitz3.ab3@12973> BRA.w pokecode__loop
0002AD18 <AmiBlitz3.ab3@12976> RTS
0002AD1A <AmiBlitz3.ab3@12979>   MOVE.w (A0)+,D1
0002AD1E <AmiBlitz3.ab3@12980>   BSR.w writeword
0002AD20 <AmiBlitz3.ab3@12981>   CMPA.l A1,A0
0002AD24 <AmiBlitz3.ab3@12982>   BCS.w pokecode2
0002AD26 <AmiBlitz3.ab3@12983> RTS
0002AD2C <AmiBlitz3.ab3@12989>   TST.b iniffcommand
0002AD30 <AmiBlitz3.ab3@12990>   BEQ 'l1
0002AD34 <AmiBlitz3.ab3@12991>     MOVE.w #$4880,D1
0002AD3A <AmiBlitz3.ab3@12992>     OR.w regnum,D1
0002AD3E <AmiBlitz3.ab3@12993>     BSR writeword
0002AD40 <AmiBlitz3.ab3@12996> RTS
0002AD44 <AmiBlitz3.ab3@12999>   BSR.w convert_byte_to_word
0002AD4A <AmiBlitz3.ab3@13002>   TST.b iee
0002AD4E <AmiBlitz3.ab3@13003>   BEQ 'old
0002AD52 <AmiBlitz3.ab3@13004>   CMP.b #5,d2
0002AD56 <AmiBlitz3.ab3@13005>   BEQ wtof
0002AD5A <AmiBlitz3.ab3@13008>   MOVE.w #$48C0,D1
0002AD60 <AmiBlitz3.ab3@13009>   OR.w regnum,D1
0002AD64 <AmiBlitz3.ab3@13010> BRA.w writeword
0002AD66 <AmiBlitz3.ab3@13013>   MOVEQ #0,d0
0002AD6C <AmiBlitz3.ab3@13014>   MOVE.w regnum,d0
0002AD6E <AmiBlitz3.ab3@13015>   ASL.l #7,d0
0002AD74 <AmiBlitz3.ab3@13016>   MOVE.l #$f2005000,d1
0002AD76 <AmiBlitz3.ab3@13017>   OR.l d0,d1
0002AD78 <AmiBlitz3.ab3@13018>   ASL.l #1,d0
0002AD7A <AmiBlitz3.ab3@13019>   ASL.l #8,d0
0002AD7C <AmiBlitz3.ab3@13020>   OR.l d0,d1
0002AD80 <AmiBlitz3.ab3@13021> BRA writelong
0002AD84 <AmiBlitz3.ab3@13025>   BSR.w convert_byte_to_word
0002AD88 <AmiBlitz3.ab3@13028>   MOVE.w #$4840,D1
0002AD8E <AmiBlitz3.ab3@13029>   OR.w regnum,D1
0002AD92 <AmiBlitz3.ab3@13030>    BSR.w writeword
0002AD96 <AmiBlitz3.ab3@13031>   MOVE.w #$4240,D1
0002AD9C <AmiBlitz3.ab3@13032>   OR.w regnum,D1
0002ADA0 <AmiBlitz3.ab3@13033> BRA.w writeword
0002ADA4 <AmiBlitz3.ab3@13037>   CMP.w #$ffdc,d1
0002ADA8 <AmiBlitz3.ab3@13038>   BNE 'negfpu
0002ADAA <AmiBlitz3.ab3@13039>   MOVEQ #0,d0
0002ADB0 <AmiBlitz3.ab3@13040>   MOVE.w regnum,d0
0002ADB2 <AmiBlitz3.ab3@13041>   ASL.l #7,d0
0002ADB8 <AmiBlitz3.ab3@13042>   MOVE.l #$f2004000,d1
0002ADBA <AmiBlitz3.ab3@13043>   OR.l d0,d1
0002ADBC <AmiBlitz3.ab3@13044>   ASL.l #1,d0
0002ADBE <AmiBlitz3.ab3@13045>   ASL.l #8,d0
0002ADC0 <AmiBlitz3.ab3@13046>   OR.l d0,d1
0002ADC4 <AmiBlitz3.ab3@13047> BRA writelong
0002ADC6 <AmiBlitz3.ab3@13051>   MOVEQ #0,d1
0002ADCC <AmiBlitz3.ab3@13052>   MOVE.w regnum,d1                                         ;fpu neg
0002ADCE <AmiBlitz3.ab3@13053>   ASL.l #7,d1
0002ADD4 <AmiBlitz3.ab3@13054>   OR.l #$f200001a,d1
0002ADD6 <AmiBlitz3.ab3@13055>   MOVE.l d0,-(a7)
0002ADD8 <AmiBlitz3.ab3@13056>   MOVEQ #0,d0
0002ADDE <AmiBlitz3.ab3@13057>   MOVE.w regnum,d0
0002ADE0 <AmiBlitz3.ab3@13058>   ASL.l #8,d0
0002ADE2 <AmiBlitz3.ab3@13059>   ASL.l #2,d0
0002ADE4 <AmiBlitz3.ab3@13060>   OR.l d0,d1
0002ADE6 <AmiBlitz3.ab3@13061>   MOVE.l (a7)+,d0
0002ADEA <AmiBlitz3.ab3@13062> BRA writelong
0002ADF0 <AmiBlitz3.ab3@13065>    TST.b iee
0002ADF4 <AmiBlitz3.ab3@13066>    BNE wtof
0002ADF8 <AmiBlitz3.ab3@13067>    BSR.w convert_byte_to_long
0002ADFC <AmiBlitz3.ab3@13070>    MOVE.w #$FFDC,D1
0002AE02 <AmiBlitz3.ab3@13073>    TST.b iee
0002AE06 <AmiBlitz3.ab3@13074>    BNE ltof
0002AE0C <AmiBlitz3.ab3@13075>    MOVE.w D1,libjsr+2
0002AE10 <AmiBlitz3.ab3@13076>    BSR.w JL_0_AD40
0002AE12 <AmiBlitz3.ab3@13077>   MOVE.l D4,D1
0002AE16 <AmiBlitz3.ab3@13078>    BSR.w JL_0_AD38
0002AE1A <AmiBlitz3.ab3@13079>   MOVE.w #$C900,D1
0002AE1E <AmiBlitz3.ab3@13080>    BSR.w Atokejsr
0002AE22 <AmiBlitz3.ab3@13081>    BSR.w JL_0_A352
0002AE28 <AmiBlitz3.ab3@13082>   MOVE.l libjsr,D1
0002AE2C <AmiBlitz3.ab3@13083>    BSR.w writelong
0002AE30 <AmiBlitz3.ab3@13084>    BSR.w JL_0_A36E
0002AE32 <AmiBlitz3.ab3@13085>   MOVE.l D5,D1
0002AE36 <AmiBlitz3.ab3@13086> BRA.w JL_0_AD38
0002AE38 <AmiBlitz3.ab3@13089> RTS
0002AE3C <AmiBlitz3.ab3@13092>   MOVE.w #$C317,D1
0002AE42 <AmiBlitz3.ab3@13093>   TST.b typecheck
0002AE46 <AmiBlitz3.ab3@13094>   BEQ 'l1
0002AE4C <AmiBlitz3.ab3@13095>    TST.b notypecheck
0002AE50 <AmiBlitz3.ab3@13096>    BNE 'l1
0002AE56 <AmiBlitz3.ab3@13097>    TST.l lasttoken
0002AE5C <AmiBlitz3.ab3@13104>   TST.b debugmode
0002AE60 <AmiBlitz3.ab3@13105>    BEQ.w JL_0_9696
0002AE68 <AmiBlitz3.ab3@13106>   BTST #$7,overflowcheck
0002AE6C <AmiBlitz3.ab3@13107>    BEQ.w JL_0_9696
0002AE72 <AmiBlitz3.ab3@13108>   TST.w cfetchmode
0002AE76 <AmiBlitz3.ab3@13109>    BNE.w JL_0_9696
0002AE7C <AmiBlitz3.ab3@13110>   TST.w regnum
0002AE80 <AmiBlitz3.ab3@13111>    BEQ.w JL_0_968A
0002AE82 <AmiBlitz3.ab3@13112>   MOVE.w D1,-(A7)
0002AE86 <AmiBlitz3.ab3@13113>   MOVE.w JL_0_9698(PC),D1
0002AE8A <AmiBlitz3.ab3@13114>    BSR.w writeword
0002AE90 <AmiBlitz3.ab3@13115>   MOVE.w regnum,D1
0002AE94 <AmiBlitz3.ab3@13116>   OR.w L_0_969C(PC),D1
0002AE98 <AmiBlitz3.ab3@13117>    BSR.w writeword
0002AE9A <AmiBlitz3.ab3@13118>   MOVE.w (A7)+,D1
0002AE9E <AmiBlitz3.ab3@13119>    BSR.w JL_0_968A
0002AEA2 <AmiBlitz3.ab3@13120>   MOVE.w L_0_969A(PC),D1
0002AEA6 <AmiBlitz3.ab3@13121> BRA.w writeword
0002AEAA <AmiBlitz3.ab3@13125>   MOVEM.l D0-D7/A0-A6,-(A7)
0002AEAE <AmiBlitz3.ab3@13126>    BSR.w Atokejsr
0002AEB2 <AmiBlitz3.ab3@13127>   MOVEM.l (A7)+,D0-D7/A0-A6
0002AEB4 <AmiBlitz3.ab3@13130> RTS
0002AEB6 <AmiBlitz3.ab3@13133>   MOVE.l D0,-(A7)
0002AEB8 <AmiBlitz3.ab3@13136>   MOVE.l (A7)+,D0
0002AEBA <AmiBlitz3.ab3@13139>   MOVE.l D0,D0
0002AEBE <AmiBlitz3.ab3@13142>   BSR.w convert_word_to_long
0002AEC4 <AmiBlitz3.ab3@13143>   TST.b iee
0002AEC8 <AmiBlitz3.ab3@13144>   BEQ 'old
0002AECC <AmiBlitz3.ab3@13145>   CMP.b #5,d2
0002AED0 <AmiBlitz3.ab3@13146>   BNE 'old
0002AED2 <AmiBlitz3.ab3@13147> RTS
0002AED6 <AmiBlitz3.ab3@13150> BRA.w JL_0_9600
0002AEDA <AmiBlitz3.ab3@13154>   MOVE.w #$C316,D1
0002AEE0 <AmiBlitz3.ab3@13155>   TST.b typecheck
0002AEE4 <AmiBlitz3.ab3@13156>   BEQ 'l1
0002AEEA <AmiBlitz3.ab3@13157>   TST.b peekaddrsize
0002AEEE <AmiBlitz3.ab3@13158>   BNE 'l1
0002AEF4 <AmiBlitz3.ab3@13159>   TST.b notypecheck
0002AEF8 <AmiBlitz3.ab3@13160>   BNE 'l1
0002AEFE <AmiBlitz3.ab3@13161>   TST.l lasttoken
0002AF02 <AmiBlitz3.ab3@13167> BRA.w JL_0_963A
0002AF06 <AmiBlitz3.ab3@13171>   MOVE.w #$C318,D1
0002AF0C <AmiBlitz3.ab3@13172>   TST.b typecheck
0002AF10 <AmiBlitz3.ab3@13173>   BEQ 'l1
0002AF16 <AmiBlitz3.ab3@13174>   TST.b peekaddrsize
0002AF1A <AmiBlitz3.ab3@13175>   BNE 'l1
0002AF20 <AmiBlitz3.ab3@13176>   TST.b notypecheck
0002AF24 <AmiBlitz3.ab3@13177>   BNE 'l1
0002AF2A <AmiBlitz3.ab3@13178>   TST.l lasttoken
0002AF2E <AmiBlitz3.ab3@13184> BRA.w JL_0_963A
0002AF32 <AmiBlitz3.ab3@13188>   MOVE.w #$C318,D1
0002AF38 <AmiBlitz3.ab3@13189>   TST.b typecheck
0002AF3C <AmiBlitz3.ab3@13190>   BEQ 'l1
0002AF42 <AmiBlitz3.ab3@13191>   TST.b notypecheck
0002AF46 <AmiBlitz3.ab3@13192>   BNE 'l1
0002AF4C <AmiBlitz3.ab3@13193>   TST.l lasttoken
0002AF50 <AmiBlitz3.ab3@13199>   BSR.w JL_0_963A
0002AF54 <AmiBlitz3.ab3@13200> BRA.w convert_word_to_quick
0002AF58 <AmiBlitz3.ab3@13204> BRA.w JL_0_9600
0002AF5A <AmiBlitz3.ab3@13208> RTS
0002AF5E <AmiBlitz3.ab3@13212>   MOVE.w #$C319,D1
0002AF64 <AmiBlitz3.ab3@13213>   TST.b typecheck
0002AF68 <AmiBlitz3.ab3@13214>   BEQ 'l1
0002AF6E <AmiBlitz3.ab3@13215>   TST.b notypecheck
0002AF72 <AmiBlitz3.ab3@13216>   BNE 'l1
0002AF78 <AmiBlitz3.ab3@13217>   TST.l lasttoken
0002AF7C <AmiBlitz3.ab3@13224>   BSR.w JL_0_963A
0002AF80 <AmiBlitz3.ab3@13227>   MOVE.w #$4240,D1
0002AF86 <AmiBlitz3.ab3@13228>   OR.w regnum,D1
0002AF8A <AmiBlitz3.ab3@13229>   BSR.w writeword
0002AF8E <AmiBlitz3.ab3@13230>   MOVE.w #$4840,D1
0002AF94 <AmiBlitz3.ab3@13231>   OR.w regnum,D1
0002AF98 <AmiBlitz3.ab3@13232> BRA.w writeword
0002AF9C <AmiBlitz3.ab3@13236> BRA.w JL_0_96D0
0002AFA0 <AmiBlitz3.ab3@13240>   BSR.w JL_0_96D0
0002AFA4 <AmiBlitz3.ab3@13241> BRA.w convert_word_to_long
0002AFA6 <AmiBlitz3.ab3@13246>   MOVEQ #0,d0
0002AFAC <AmiBlitz3.ab3@13247>   MOVE.w regnum,d0
0002AFAE <AmiBlitz3.ab3@13248>   ASL.l #7,d0
0002AFB4 <AmiBlitz3.ab3@13249>   MOVE.l #$f2004000,d1
0002AFB6 <AmiBlitz3.ab3@13250>   OR.l d0,d1
0002AFB8 <AmiBlitz3.ab3@13251>   ASL.l #1,d0
0002AFBA <AmiBlitz3.ab3@13252>   ASL.l #8,d0
0002AFBC <AmiBlitz3.ab3@13253>   OR.l d0,d1
0002AFC0 <AmiBlitz3.ab3@13254>   BSR writelong
0002AFC6 <AmiBlitz3.ab3@13255>   MOVE.w regnum,d0
0002AFC8 <AmiBlitz3.ab3@13256>   ASL.l #7,d0
0002AFCE <AmiBlitz3.ab3@13257>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002AFD0 <AmiBlitz3.ab3@13258>   OR.w d0,d1
0002AFD4 <AmiBlitz3.ab3@13259>   BSR writelong
0002AFDA <AmiBlitz3.ab3@13260>   MOVE.l #$37800000,d1
0002AFDE <AmiBlitz3.ab3@13261>   BSR writelong
0002AFE0 <AmiBlitz3.ab3@13262> RTS
0002AFE6 <AmiBlitz3.ab3@13266>   TST.b iee
0002AFEA <AmiBlitz3.ab3@13267>   BNE qtof
0002AFEE <AmiBlitz3.ab3@13268>   MOVE.w #$D300,D1
0002AFF0 <AmiBlitz3.ab3@13271>   MOVE.w D1,-(A7)
0002AFF4 <AmiBlitz3.ab3@13272>    BSR.w JL_0_AD40
0002AFF6 <AmiBlitz3.ab3@13273>   MOVE.l D4,D1
0002AFFA <AmiBlitz3.ab3@13274>    BSR.w JL_0_AD38
0002AFFE <AmiBlitz3.ab3@13275>    BSR.w JL_0_A352
0002B000 <AmiBlitz3.ab3@13276>   MOVE.w (A7)+,D1
0002B004 <AmiBlitz3.ab3@13277>    BSR.w Atokejsr
0002B008 <AmiBlitz3.ab3@13278>    BSR.w JL_0_A36E
0002B00A <AmiBlitz3.ab3@13279>   MOVE.l D5,D1
0002B00E <AmiBlitz3.ab3@13280> BRA.w JL_0_AD38
0002B010 <AmiBlitz3.ab3@13284> RTS
0002B016 <AmiBlitz3.ab3@13287>   TST.b typecheck
0002B01A <AmiBlitz3.ab3@13288>   BEQ 'l1
0002B020 <AmiBlitz3.ab3@13289>   TST.b notypecheck
0002B024 <AmiBlitz3.ab3@13290>   BNE 'l1
0002B02A <AmiBlitz3.ab3@13291>   TST.l lasttoken
0002B030 <AmiBlitz3.ab3@13296>   TST.b iee
0002B034 <AmiBlitz3.ab3@13297>   BNE ftol
0002B038 <AmiBlitz3.ab3@13298>   MOVE.w #$C31A,D1
0002B03C <AmiBlitz3.ab3@13299>   BSR.w JL_0_963A
0002B040 <AmiBlitz3.ab3@13300>   BSR.w JL_0_974A
0002B044 <AmiBlitz3.ab3@13301> BRA.w convert_long_to_byte
0002B046 <AmiBlitz3.ab3@13305> RTS
0002B04C <AmiBlitz3.ab3@13308>   TST.b typecheck
0002B050 <AmiBlitz3.ab3@13309>   BEQ 'l1
0002B056 <AmiBlitz3.ab3@13310>   TST.b notypecheck
0002B05A <AmiBlitz3.ab3@13311>   BNE 'l1
0002B060 <AmiBlitz3.ab3@13312>   TST.l lasttoken
0002B066 <AmiBlitz3.ab3@13317>   TST.b iee
0002B06A <AmiBlitz3.ab3@13318>   BNE ftol
0002B06E <AmiBlitz3.ab3@13319>   MOVE.w #$C31B,D1
0002B072 <AmiBlitz3.ab3@13320>   BSR.w JL_0_963A
0002B076 <AmiBlitz3.ab3@13321>   BSR.w JL_0_974A
0002B07A <AmiBlitz3.ab3@13322> BRA.w convert_long_to_word
0002B07C <AmiBlitz3.ab3@13326> RTS
0002B082 <AmiBlitz3.ab3@13329>   TST.b iee
0002B086 <AmiBlitz3.ab3@13330>   BNE ftol
0002B08A <AmiBlitz3.ab3@13331>   MOVE.w #$C31C,D1
0002B08E <AmiBlitz3.ab3@13332>   BSR.w JL_0_963A
0002B092 <AmiBlitz3.ab3@13335>   MOVE.w #$FFE2,D1
0002B096 <AmiBlitz3.ab3@13336> BRA.w JL_0_9604
0002B098 <AmiBlitz3.ab3@13339>   MOVE.l d0,-(a7)
0002B09A <AmiBlitz3.ab3@13340>   MOVEQ #0,d0
0002B0A0 <AmiBlitz3.ab3@13341>   MOVE.w regnum,d0
0002B0A2 <AmiBlitz3.ab3@13342>   ASL.l #7,d0
0002B0A8 <AmiBlitz3.ab3@13343>   MOVE.l #$f2006000,d1
0002B0AA <AmiBlitz3.ab3@13344>   OR.l d0,d1
0002B0AC <AmiBlitz3.ab3@13345>   ASL.l #1,d0
0002B0AE <AmiBlitz3.ab3@13346>   ASL.l #8,d0
0002B0B0 <AmiBlitz3.ab3@13347>   OR.l d0,d1
0002B0B2 <AmiBlitz3.ab3@13348>   MOVE.l (a7)+,d0
0002B0B6 <AmiBlitz3.ab3@13349> BRA writelong
0002B0B8 <AmiBlitz3.ab3@13353>   MOVE.l d0,-(a7)
0002B0BA <AmiBlitz3.ab3@13354>   MOVEQ #0,d0
0002B0C0 <AmiBlitz3.ab3@13355>   MOVE.l #$f23c4023,d1
0002B0C6 <AmiBlitz3.ab3@13356>   MOVE.w regnum,d0
0002B0C8 <AmiBlitz3.ab3@13357>   ASL.l #7,d0
0002B0CA <AmiBlitz3.ab3@13358>   OR.l d0,d1
0002B0CE <AmiBlitz3.ab3@13359>   BSR writelong
0002B0D4 <AmiBlitz3.ab3@13360>   MOVE.l #$00010000,d1
0002B0D8 <AmiBlitz3.ab3@13361>   BSR writelong
0002B0DE <AmiBlitz3.ab3@13362>   MOVE.w regnum,d0
0002B0E0 <AmiBlitz3.ab3@13363>   ASL.l #7,d0
0002B0E6 <AmiBlitz3.ab3@13364>   MOVE.l #$f2006000,d1
0002B0E8 <AmiBlitz3.ab3@13365>   OR.l d0,d1
0002B0EA <AmiBlitz3.ab3@13366>   ASL.l #1,d0
0002B0EC <AmiBlitz3.ab3@13367>   ASL.l #8,d0
0002B0EE <AmiBlitz3.ab3@13368>   OR.l d0,d1
0002B0F2 <AmiBlitz3.ab3@13369>   BSR writelong
0002B0F4 <AmiBlitz3.ab3@13370>   MOVE.l (a7)+,d0
0002B0F6 <AmiBlitz3.ab3@13371> RTS
0002B0F8 <AmiBlitz3.ab3@13375> RTS
0002B0FE <AmiBlitz3.ab3@13379>   TST.b iee
0002B102 <AmiBlitz3.ab3@13380>   BNE ftoq
0002B106 <AmiBlitz3.ab3@13381>   MOVE.w #$C31B,D1
0002B10A <AmiBlitz3.ab3@13382>   BSR.w JL_0_963A
0002B10E <AmiBlitz3.ab3@13383>   MOVE.w #$D301,D1
0002B112 <AmiBlitz3.ab3@13384> BRA.w JL_0_96FC
0002B118 <AmiBlitz3.ab3@13390>    TST.b blitzparloop
0002B11C <AmiBlitz3.ab3@13391>    BNE 'l1
0002B122 <AmiBlitz3.ab3@13392>    TST.b funcparloop
0002B126 <AmiBlitz3.ab3@13393>    BNE 'l1
0002B12A <AmiBlitz3.ab3@13394>    BRA error_convert_types
0002B132 <AmiBlitz3.ab3@13397>   CMP.b #2,optistring
0002B136 <AmiBlitz3.ab3@13398>   BEQ JLrts
0002B13C <AmiBlitz3.ab3@13399>   MOVE.w stol,D1
0002B140 <AmiBlitz3.ab3@13400>   BSR.w writeword
0002B148 <AmiBlitz3.ab3@13401>   CMPI.w #$2,sbgot
0002B14C <AmiBlitz3.ab3@13402>   BCS.w sbtolong
0002B150 <AmiBlitz3.ab3@13403>   MOVE.w ceos(PC),D1
0002B154 <AmiBlitz3.ab3@13404>   BSR.w writeword
0002B15A <AmiBlitz3.ab3@13407>   MOVE.w regnum,D1
0002B15C <AmiBlitz3.ab3@13408>   LSL.w #8,D1
0002B15E <AmiBlitz3.ab3@13409>   LSL.w #1,D1
0002B166 <AmiBlitz3.ab3@13410>   CMPI.w #$2,sbgot
0002B16A <AmiBlitz3.ab3@13411>   BCS.w JL_0_98E8
0002B170 <AmiBlitz3.ab3@13412>   MOVE.w a2offset,D3
0002B176 <AmiBlitz3.ab3@13413>   SUB.w thisstuse,D3
0002B17A <AmiBlitz3.ab3@13414>   CMP.w #$6,D3
0002B17E <AmiBlitz3.ab3@13415>   BNE.w JL_0_98D4b
0002B184 <AmiBlitz3.ab3@13416>   OR.w movestst2,D1
0002B188 <AmiBlitz3.ab3@13417>   BSR.w writeword
0002B18E <AmiBlitz3.ab3@13418>   LEA movestst2+2,A0
0002B194 <AmiBlitz3.ab3@13419>   LEA movestst2f,A1
0002B198 <AmiBlitz3.ab3@13420> BRA.w pokecode2
0002B19E <AmiBlitz3.ab3@13424>   OR.w movea7dn,D1
0002B1A2 <AmiBlitz3.ab3@13425>   BSR.w writeword
0002B1A8 <AmiBlitz3.ab3@13426>   MOVE.l #0,D1
0002B1AC <AmiBlitz3.ab3@13427> BRA.w writeword
0002B1B2 <AmiBlitz3.ab3@13431>   ADDQ.w #1,fuckpos
0002B1B6 <AmiBlitz3.ab3@13432>   BSR.w writeconvertcode
0002B1BC <AmiBlitz3.ab3@13433>   SUBQ.w #1,fuckpos
0002B1BE <AmiBlitz3.ab3@13435> RTS
0002B1C0 <AmiBlitz3.ab3@13439>   MOVE.w D3,D1
0002B1C4 <AmiBlitz3.ab3@13440>   CMP.w #7,d1
0002B1C8 <AmiBlitz3.ab3@13441>   BLE 'ok
0002B1CE <AmiBlitz3.ab3@13442>   JMP errorinternalconvert
0002B1D0 <AmiBlitz3.ab3@13443> 'ok  SUBQ.w #1,D1
0002B1D4 <AmiBlitz3.ab3@13444>   MULU #$7,D1
0002B1D6 <AmiBlitz3.ab3@13445>   ADD.w D2,D1
0002B1D8 <AmiBlitz3.ab3@13446>   SUBQ.w #1,D1
0002B1DA <AmiBlitz3.ab3@13447>   LSL.w #2,D1
0002B1E0 <AmiBlitz3.ab3@13448>   LEA convtable,A0
0002B1E4 <AmiBlitz3.ab3@13449>   MOVE.l $0(A0,D1.W),D1
0002B1E8 <AmiBlitz3.ab3@13450>   BEQ.w JL_0_97A2
0002B1EA <AmiBlitz3.ab3@13451>     MOVEA.l D1,A0
0002B1EE <AmiBlitz3.ab3@13452>     CMP.b #$ff,d3
0002B1F2 <AmiBlitz3.ab3@13453>     BEQ JL_0_97A2
0002B1F4 <AmiBlitz3.ab3@13454> JMP (A0)
0002B1F6 <AmiBlitz3.ab3@13457> RTS
0002B1FA <AmiBlitz3.ab3@13460> usedfrom:  Ds.l 1
0002B1FE <AmiBlitz3.ab3@13467>   CMP.w #"\",D0
0002B202 <AmiBlitz3.ab3@13468>   BNE.w JL_0_97C2
0002B206 <AmiBlitz3.ab3@13469>     CMP.b #"\",(a5)
0002B20A <AmiBlitz3.ab3@13470>     BNE 'first
0002B210 <AmiBlitz3.ab3@13471>       MOVE.l A5,usedfrom
0002B216 <AmiBlitz3.ab3@13472>       LEA path2,A5
0002B21A <AmiBlitz3.ab3@13473> BRA 'g1
0002B21C <AmiBlitz3.ab3@13476>     SUBQ.w #1,A5
0002B222 <AmiBlitz3.ab3@13477>   MOVE.l A5,usedfrom
0002B228 <AmiBlitz3.ab3@13478>   LEA usedpath,A5                                          ;read path
0002B22C <AmiBlitz3.ab3@13481>   BSR.w get1bytemain
0002B232 <AmiBlitz3.ab3@13484>   CLR.w flagmask
0002B236 <AmiBlitz3.ab3@13485>   CMP.w #$2A,D0
0002B23A <AmiBlitz3.ab3@13486>    BNE.w JL_0_983A
0002B242 <AmiBlitz3.ab3@13487>   MOVE.w #$0001,flagmask
0002B246 <AmiBlitz3.ab3@13489>    BSR.w getparameter2
0002B24A <AmiBlitz3.ab3@13492>    BEQ.w syntaxerr
0002B24E <AmiBlitz3.ab3@13493>   CMP.w #$28,D0
0002B252 <AmiBlitz3.ab3@13494>    BEQ.w JL_0_9830
0002B256 <AmiBlitz3.ab3@13495>   CMP.w #$2E,D0
0002B25A <AmiBlitz3.ab3@13496>    BEQ.w JL_0_980C
0002B25E <AmiBlitz3.ab3@13497>   CMP.w #$24,D0
0002B262 <AmiBlitz3.ab3@13498>    BNE.w JL_0_9838
0002B26A <AmiBlitz3.ab3@13499>   ORI.w #$8,flagmask
0002B26E <AmiBlitz3.ab3@13500>    BSR.w storeloc
0002B272 <AmiBlitz3.ab3@13501>    BSR.w get1bytemain
0002B276 <AmiBlitz3.ab3@13502> BRA.w JL_0_9822
0002B27A <AmiBlitz3.ab3@13506>   BSR.w storeloc
0002B27C <AmiBlitz3.ab3@13507>   MOVE.w D2,-(A7)
0002B282 <AmiBlitz3.ab3@13508>   LEA namebuff2,A1
0002B286 <AmiBlitz3.ab3@13509>    BSR.w makename3
0002B28A <AmiBlitz3.ab3@13510>    BEQ.w syntaxerr
0002B28C <AmiBlitz3.ab3@13511>   MOVE.w (A7)+,D2
0002B28E <AmiBlitz3.ab3@13514>    MOVE.w D0,D1
0002B292 <AmiBlitz3.ab3@13515>    BSR.w resloc
0002B296 <AmiBlitz3.ab3@13516>    CMP.w #$28,D1
0002B29A <AmiBlitz3.ab3@13517>    BNE.w JL_0_9838
0002B2A2 <AmiBlitz3.ab3@13520>   ORI.w #$2,flagmask
0002B2A4 <AmiBlitz3.ab3@13523> RTS
0002B2A8 <AmiBlitz3.ab3@13527>   CMP.w #$40,D0
0002B2AC <AmiBlitz3.ab3@13528>    BNE.w JL_0_984E
0002B2B4 <AmiBlitz3.ab3@13529>   MOVE.w #$0005,flagmask
0002B2B8 <AmiBlitz3.ab3@13530> BRA.w JL_0_97D8
0002B2BC <AmiBlitz3.ab3@13534>   BSR.w makename2
0002B2C0 <AmiBlitz3.ab3@13535> BRA.w JL_0_97DC
0002B2C4 <AmiBlitz3.ab3@13539>   MOVE.w #$FED3,D1
0002B2C8 <AmiBlitz3.ab3@13540>    BSR.w uselib
0002B2CE <AmiBlitz3.ab3@13541>   LEA pusha3,A0
0002B2D4 <AmiBlitz3.ab3@13542>   LEA pusha3f,A1
0002B2D8 <AmiBlitz3.ab3@13543> BRA.w pokecode
0002B2DC <AmiBlitz3.ab3@13547>   MOVE.w #$FED3,D1
0002B2E0 <AmiBlitz3.ab3@13548>    BSR.w uselib
0002B2E6 <AmiBlitz3.ab3@13549>   LEA pulla3,A0
0002B2EC <AmiBlitz3.ab3@13550>   LEA pulla3f,A1
0002B2F0 <AmiBlitz3.ab3@13551> BRA.w pokecode
0002B2F2 <AmiBlitz3.ab3@13555> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002B2FA <AmiBlitz3.ab3@13560>     CMP.b #2,optistring
0002B2FE <AmiBlitz3.ab3@13561>    BEQ 'l10
0002B302 <AmiBlitz3.ab3@13562>    MOVE.w ceos(PC),D1
0002B306 <AmiBlitz3.ab3@13563>    BSR.w writeword                                         ;clr.b (a3)
0002B30C <AmiBlitz3.ab3@13566>   MOVE.w regnum,D1
0002B30E <AmiBlitz3.ab3@13567>   LSL.w #8,D1
0002B310 <AmiBlitz3.ab3@13568>   LSL.w #1,D1
0002B318 <AmiBlitz3.ab3@13569>   CMPI.w #$2,sbgot
0002B31C <AmiBlitz3.ab3@13570>    BCS.w JL_0_98E8
0002B322 <AmiBlitz3.ab3@13571>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002B328 <AmiBlitz3.ab3@13572>   SUB.w thisstuse,D3
0002B32C <AmiBlitz3.ab3@13573>   CMP.w #$6,D3
0002B330 <AmiBlitz3.ab3@13574>    BNE.w JL_0_98D4
0002B336 <AmiBlitz3.ab3@13575>   OR.w movestst2,D1
0002B33A <AmiBlitz3.ab3@13576>    BSR.w writeword
0002B340 <AmiBlitz3.ab3@13577>   LEA movestst2+2,A0
0002B346 <AmiBlitz3.ab3@13578>   LEA movestst2f,A1
0002B34A <AmiBlitz3.ab3@13579> BRA.w pokecode2
0002B350 <AmiBlitz3.ab3@13583>    OR.w movea7dn,D1
0002B354 <AmiBlitz3.ab3@13584>    BSR.w writeword
0002B35A <AmiBlitz3.ab3@13585>   MOVE.l movea7dn+2,D1
0002B35E <AmiBlitz3.ab3@13597>   BSR writelong
0002B366 <AmiBlitz3.ab3@13600>    CMP.w #6,regnum
0002B36A <AmiBlitz3.ab3@13601>    BEQ 'l1
0002B370 <AmiBlitz3.ab3@13602>    TST.w stackpar
0002B374 <AmiBlitz3.ab3@13603>    BNE 'l1
0002B37A <AmiBlitz3.ab3@13604>    TST.b funcparloop
0002B37E <AmiBlitz3.ab3@13605>    BEQ 'l1
0002B384 <AmiBlitz3.ab3@13606>    MOVE.l #$48780000,d1
0002B388 <AmiBlitz3.ab3@13607>    BSR writelong
0002B38A <AmiBlitz3.ab3@13611> RTS
0002B38C <AmiBlitz3.ab3@13616>      MOVE.l d1,-(a7)
0002B394 <AmiBlitz3.ab3@13617>      CMP.w #6,regnum
0002B398 <AmiBlitz3.ab3@13618>      BEQ 'l1
0002B39E <AmiBlitz3.ab3@13619>      TST.w stackpar
0002B3A2 <AmiBlitz3.ab3@13620>      BNE 'l1
0002B3A8 <AmiBlitz3.ab3@13621>      TST.b funcparloop
0002B3AC <AmiBlitz3.ab3@13622>      BEQ 'l1
0002B3B2 <AmiBlitz3.ab3@13623>      MOVE.l #$48780000,d1
0002B3B6 <AmiBlitz3.ab3@13624>      BSR writelong
0002B3B8 <AmiBlitz3.ab3@13627>      MOVE.l (a7)+,d1
0002B3BE <AmiBlitz3.ab3@13629>    OR.w movestdn,D1
0002B3C2 <AmiBlitz3.ab3@13630>    BSR.w writeword
0002B3C6 <AmiBlitz3.ab3@13631>   MOVE.w #$FED3,D1
0002B3CA <AmiBlitz3.ab3@13632>    BSR.w uselib
0002B3CE <AmiBlitz3.ab3@13633>   MOVE.w $A(A1),D1
0002B3D2 <AmiBlitz3.ab3@13634> BRA.w writeword
0002B3D4 <AmiBlitz3.ab3@13637> unknown:    Ds.w 1
0002B3DA <AmiBlitz3.ab3@13640> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002B3DE <AmiBlitz3.ab3@13641> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002B3E4 <AmiBlitz3.ab3@13642>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002B3EA <AmiBlitz3.ab3@13648>   TST.b debugmode
0002B3EE <AmiBlitz3.ab3@13649>   BEQ.w sharreval
0002B3F2 <AmiBlitz3.ab3@13650>  BSR.w arreval
0002B3F6 <AmiBlitz3.ab3@13653>   MOVE.w somecode(PC),D1
0002B3FC <AmiBlitz3.ab3@13654>   OR.w regnum,D1
0002B400 <AmiBlitz3.ab3@13655>    BSR.w writeword
0002B402 <AmiBlitz3.ab3@13656>   MOVEQ.l #$01,D1
0002B404 <AmiBlitz3.ab3@13657>   SWAP D1
0002B408 <AmiBlitz3.ab3@13658>    BSR.w writelong
0002B40C <AmiBlitz3.ab3@13659>   MOVE.l somecode2(PC),D1
0002B410 <AmiBlitz3.ab3@13660>    BSR.w writelong
0002B414 <AmiBlitz3.ab3@13661>   MOVE.w #$C309,D1
0002B418 <AmiBlitz3.ab3@13662> BRA.w Atokejsr
0002B41A <AmiBlitz3.ab3@13666>   MOVEQ.l #$02,D2
0002B41C <AmiBlitz3.ab3@13667>   MOVEQ.l #$00,D1
0002B41E <AmiBlitz3.ab3@13668>   MOVEQ.l #$00,D3
0002B422 <AmiBlitz3.ab3@13669> BRA.w maineval2
0002B424 <AmiBlitz3.ab3@13673>   MOVEQ.l #$03,D2
0002B426 <AmiBlitz3.ab3@13674>   MOVEQ.l #$00,D1
0002B428 <AmiBlitz3.ab3@13675>   MOVEQ.l #$00,D3
0002B42E <AmiBlitz3.ab3@13676>   MOVE.b notypecheck,-(a7)
0002B436 <AmiBlitz3.ab3@13677>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002B43C <AmiBlitz3.ab3@13678>   JSR maineval2
0002B442 <AmiBlitz3.ab3@13679>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002B444 <AmiBlitz3.ab3@13680>   RTS
0002B44E <AmiBlitz3.ab3@13684>   MOVE.w oldqflag,instringon
0002B454 <AmiBlitz3.ab3@13685>   MOVEA.l lastsourcepos,A5
0002B456 <AmiBlitz3.ab3@13686>   MOVEQ.l #-$01,D1
0002B458 <AmiBlitz3.ab3@13687>   MOVEQ.l #-$01,D3
0002B45C <AmiBlitz3.ab3@13688> BRA.w peval
0002B466 <AmiBlitz3.ab3@13693>   MOVE.w oldqflag,instringon
0002B46C <AmiBlitz3.ab3@13694>   MOVEA.l lastsourcepos,A5
0002B46E <AmiBlitz3.ab3@13697>   MOVEQ.l #-$01,D1
0002B470 <AmiBlitz3.ab3@13698>   MOVEQ.l #$00,D3
0002B476 <AmiBlitz3.ab3@13699>   MOVE.l leftsidetype,-(a7)
0002B47C <AmiBlitz3.ab3@13700>   MOVE.l rightsidetype,-(a7)
0002B482 <AmiBlitz3.ab3@13701>   CLR.l leftsidetype
0002B488 <AmiBlitz3.ab3@13702>   CLR.l rightsidetype
0002B48E <AmiBlitz3.ab3@13703>   JSR maineval
0002B494 <AmiBlitz3.ab3@13704>   MOVE.l (a7)+,rightsidetype
0002B49A <AmiBlitz3.ab3@13705>   MOVE.l (a7)+,leftsidetype
0002B49C <AmiBlitz3.ab3@13706>   RTS
0002B4A6 <AmiBlitz3.ab3@13710>   MOVE.w oldqflag,instringon
0002B4AC <AmiBlitz3.ab3@13711>   MOVEA.l lastsourcepos,A5
0002B4AE <AmiBlitz3.ab3@13712>   MOVEQ.l #$00,D1
0002B4B0 <AmiBlitz3.ab3@13713>   MOVEQ.l #-$01,D3
0002B4B4 <AmiBlitz3.ab3@13714> BRA.w maineval
0002B4B6 <AmiBlitz3.ab3@13718>   MOVEQ.l #$01,D1
0002B4B8 <AmiBlitz3.ab3@13719>   MOVEQ.l #-$01,D3
0002B4BC <AmiBlitz3.ab3@13720> BRA.w maineval
0002B4C6 <AmiBlitz3.ab3@13725>   MOVE.w oldqflag,instringon
0002B4CC <AmiBlitz3.ab3@13726>   MOVEA.l lastsourcepos,A5
0002B4CE <AmiBlitz3.ab3@13729>   MOVEQ.l #$00,D1                                        ;no push
0002B4D0 <AmiBlitz3.ab3@13730>   MOVEQ.l #$00,D3
0002B4D8 <AmiBlitz3.ab3@13751>    CMPI.w #$6,regnum
0002B4DC <AmiBlitz3.ab3@13752>    BCS.w maineval2
0002B4DE <AmiBlitz3.ab3@13753>    MOVEQ #0,d1
0002B4E4 <AmiBlitz3.ab3@13754>    MOVE.l destpointer,a4
0002B4EA <AmiBlitz3.ab3@13756>    CMPA.l destbufferend,A4
0002B4EE <AmiBlitz3.ab3@13757>    BCC.w maineval__l2
0002B4F4 <AmiBlitz3.ab3@13759>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002B4F8 <AmiBlitz3.ab3@13761>    BNE maineval__l2
0002B4FC <AmiBlitz3.ab3@13765> BRA maineval__l1
0002B4FE <AmiBlitz3.ab3@13768>   MOVEQ.l #-$01,D1
0002B506 <AmiBlitz3.ab3@13771>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002B50C <AmiBlitz3.ab3@13774>   MOVE.w thisstuse,-(A7)
0002B516 <AmiBlitz3.ab3@13775>   MOVE.w a2offset,thisstuse
0002B51C <AmiBlitz3.ab3@13776>   MOVE.w stackpar,-(A7)
0002B522 <AmiBlitz3.ab3@13777>   MOVE.w D1,stackpar
0002B528 <AmiBlitz3.ab3@13778>   MOVE.w sbgot,-(A7)
0002B52E <AmiBlitz3.ab3@13779>   CLR.w sbgot
0002B532 <AmiBlitz3.ab3@13780>   MOVE.w unknown(PC),-(A7)
0002B538 <AmiBlitz3.ab3@13781>   MOVE.w D3,unknown
0002B53A <AmiBlitz3.ab3@13782>   MOVE.w D2,-(a7)
0002B540 <AmiBlitz3.ab3@13783>   MOVE.w d2,mode
0002B544 <AmiBlitz3.ab3@13784>    BSR.w eval3
0002B546 <AmiBlitz3.ab3@13785>   MOVE.w (a7)+,d3
0002B54A <AmiBlitz3.ab3@13786>    BEQ.w maineval__noconv
0002B54E <AmiBlitz3.ab3@13787>   MOVE.w unknown(PC),D1
0002B552 <AmiBlitz3.ab3@13788>    BNE.w maineval__noconv
0002B554 <AmiBlitz3.ab3@13789>   EXG.l D2,D3
0002B556 <AmiBlitz3.ab3@13790>    MOVE.l a2,-(a7)
0002B55C <AmiBlitz3.ab3@13791>    TST.b curtemplabel
0002B560 <AmiBlitz3.ab3@13792>    BEQ maineval2__l10
0002B566 <AmiBlitz3.ab3@13793>    MOVE.l asmbuff,a2
0002B56C <AmiBlitz3.ab3@13794>    CMP.w #$c,$8(a2)
0002B570 <AmiBlitz3.ab3@13795>    BEQ maineval2__l20
0002B576 <AmiBlitz3.ab3@13796>    CMP.w #$d,$8(a2)
0002B57A <AmiBlitz3.ab3@13797>    BEQ maineval2__l20
0002B57C <AmiBlitz3.ab3@13800>   CMP.w d2,d3
0002B580 <AmiBlitz3.ab3@13801>   BEQ maineval2__l20
0002B584 <AmiBlitz3.ab3@13802>   BSR.w writeconvertcode
0002B58A <AmiBlitz3.ab3@13803>   CLR.b doimmediate
0002B58C <AmiBlitz3.ab3@13806>   MOVE.l (a7)+,a2
0002B592 <AmiBlitz3.ab3@13809>   MOVE.w (A7)+,unknown
0002B598 <AmiBlitz3.ab3@13810>   MOVE.w stackpar,D1
0002B59C <AmiBlitz3.ab3@13811>    BEQ.w maineval__skipme
0002B5A0 <AmiBlitz3.ab3@13812>    BMI.w maineval__skipme
0002B5A6 <AmiBlitz3.ab3@13816>   MOVE.w regnum,D1
0002B5A8 <AmiBlitz3.ab3@13817>   LSL.w #8,D1
0002B5AA <AmiBlitz3.ab3@13818>   LSL.w #1,D1
0002B5AE <AmiBlitz3.ab3@13819>   CMP.w #$7,D2
0002B5B2 <AmiBlitz3.ab3@13820>    BNE.w maineval__hi1
0002B5BA <AmiBlitz3.ab3@13821>    CMP.b #2,optistring
0002B5BE <AmiBlitz3.ab3@13822>    BEQ maineval__hi1a
0002B5C0 <AmiBlitz3.ab3@13823>   MOVE.w D1,-(A7)
0002B5C6 <AmiBlitz3.ab3@13824>   OR.w getstlen,D1
0002B5CA <AmiBlitz3.ab3@13825>    BSR.w writeword
0002B5CC <AmiBlitz3.ab3@13826>   MOVE.w (A7)+,D1
0002B5D2 <AmiBlitz3.ab3@13829>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002B5D6 <AmiBlitz3.ab3@13833>   MOVE.w #$3f3c,d1
0002B5DA <AmiBlitz3.ab3@13834>    BSR.w writeword
0002B5DC <AmiBlitz3.ab3@13838>   MOVE.w d2,d1
0002B5E2 <AmiBlitz3.ab3@13839>   MOVE.w d1,libmode
0002B5E6 <AmiBlitz3.ab3@13840>    BSR.w writeword
0002B5EA <AmiBlitz3.ab3@13841>   CMP.w #$7,D2
0002B5EE <AmiBlitz3.ab3@13842>    BNE.w maineval__skipme
0002B5F4 <AmiBlitz3.ab3@13843>   MOVE.w putstlen,D1
0002B5FA <AmiBlitz3.ab3@13844>   OR.w regnum,D1
0002B5FE <AmiBlitz3.ab3@13845>    BSR.w writeword
0002B602 <AmiBlitz3.ab3@13848>    CMP.w #$7,D2
0002B606 <AmiBlitz3.ab3@13849>    BNE.w maineval__notst
0002B60E <AmiBlitz3.ab3@13860>    CMP.b #2,optistring
0002B612 <AmiBlitz3.ab3@13861>    BEQ maineval__skipme_l10
0002B618 <AmiBlitz3.ab3@13862>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002B61C <AmiBlitz3.ab3@13863>    BSR.w sbtolong
0002B620 <AmiBlitz3.ab3@13864> BRA.w maineval__notst2
0002B628 <AmiBlitz3.ab3@13868>     CMP.w #6,regnum
0002B62C <AmiBlitz3.ab3@13869>     BEQ maineval__skipme_l10_l1
0002B632 <AmiBlitz3.ab3@13870>     TST.b funcparloop
0002B636 <AmiBlitz3.ab3@13871>     BEQ maineval__skipme_l10_l1
0002B63C <AmiBlitz3.ab3@13872>     MOVE.l #$48780000,d1
0002B640 <AmiBlitz3.ab3@13873>     BSR writelong
0002B644 <AmiBlitz3.ab3@13876> BRA.w maineval__notst2
0002B64A <AmiBlitz3.ab3@13879>   ADDQ.w #2,a2offset
0002B64E <AmiBlitz3.ab3@13880> BRA maineval__skipme
0002B656 <AmiBlitz3.ab3@13883>   CMPI.w #$2,sbgot
0002B65A <AmiBlitz3.ab3@13884>    BCS.w maineval__notst2                                         ;correct stack
0002B65E <AmiBlitz3.ab3@13885>   MOVE.w ststfix(PC),D1
0002B662 <AmiBlitz3.ab3@13886>    BSR.w writeword
0002B668 <AmiBlitz3.ab3@13889>   MOVE.w (A7)+,sbgot
0002B66E <AmiBlitz3.ab3@13890>   MOVE.w stackpar,D1
0002B672 <AmiBlitz3.ab3@13891>    BPL.w maineval__skip
0002B676 <AmiBlitz3.ab3@13892>    CMP.b #7,d2
0002B67A <AmiBlitz3.ab3@13893>    BEQ maineval__notst2_l1
0002B680 <AmiBlitz3.ab3@13894>   TST.b funcparloop
0002B684 <AmiBlitz3.ab3@13895>   BEQ maineval__notst2_l1
0002B688 <AmiBlitz3.ab3@13896>   CMP.b #5,d2
0002B68C <AmiBlitz3.ab3@13897>   BNE maineval__notst2_skip
0002B692 <AmiBlitz3.ab3@13898>   TST.b fpu
0002B696 <AmiBlitz3.ab3@13899>   BEQ maineval__notst2_skip
0002B69C <AmiBlitz3.ab3@13900>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002B6A2 <AmiBlitz3.ab3@13901>   JSR writelong
0002B6A6 <AmiBlitz3.ab3@13904>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002B6AC <AmiBlitz3.ab3@13905>   ADD.w parnum,d1
0002B6B2 <AmiBlitz3.ab3@13906>   JSR Atokejsr
0002B6B8 <AmiBlitz3.ab3@13907>    TST.w dontwrite
0002B6BC <AmiBlitz3.ab3@13908>    BNE maineval__notst2_l1
0002B6C2 <AmiBlitz3.ab3@13909>    MOVE.l data1start,d1
0002B6C8 <AmiBlitz3.ab3@13910>    MOVE.l destpointer,a4
0002B6CC <AmiBlitz3.ab3@13911>    ADD.l d1,-4(a4)
0002B6D2 <AmiBlitz3.ab3@13912>    MOVE.l destpointer,d1
0002B6D4 <AmiBlitz3.ab3@13913>    SUBQ.l #4,d1
0002B6DA <AmiBlitz3.ab3@13914>    SUB.l destbufferstart,d1
0002B6DC <AmiBlitz3.ab3@13915>    MOVE.l d2,-(a7)
0002B6DE <AmiBlitz3.ab3@13916>    MOVE.l d1,d2
0002B6E4 <AmiBlitz3.ab3@13917>    JSR addhunkoffset
0002B6E6 <AmiBlitz3.ab3@13918>    MOVE.l (a7)+,d2
0002B6EA <AmiBlitz3.ab3@13919> BRA maineval__skip
0002B6F0 <AmiBlitz3.ab3@13922>   ADDQ.w #2,a2offset
0002B6F6 <AmiBlitz3.ab3@13923>   MOVE.w pushd0wd,D1
0002B6FA <AmiBlitz3.ab3@13924>   CMP.w #$3,D2                                             ;write parameter to stack
0002B6FE <AmiBlitz3.ab3@13925>    BCS.w maineval__ok
0002B704 <AmiBlitz3.ab3@13926>   ADDQ.w #2,a2offset
0002B70A <AmiBlitz3.ab3@13927>   TST.b fpu
0002B70E <AmiBlitz3.ab3@13928>   BEQ maineval__notst2_nofpu
0002B712 <AmiBlitz3.ab3@13929>   CMP.w #5,d2
0002B716 <AmiBlitz3.ab3@13930>   BNE maineval__notst2_nofpu
0002B718 <AmiBlitz3.ab3@13931>   MOVEQ #0,d1
0002B71E <AmiBlitz3.ab3@13932>   MOVE.w regnum,d1
0002B720 <AmiBlitz3.ab3@13933>   ASL.l #7,d1
0002B726 <AmiBlitz3.ab3@13934>   OR.l #$f2276400,d1
0002B72A <AmiBlitz3.ab3@13935>   BSR writelong
0002B72E <AmiBlitz3.ab3@13936> BRA maineval__skip
0002B734 <AmiBlitz3.ab3@13939>   MOVE.w pushd0l,D1
0002B73A <AmiBlitz3.ab3@13942>    OR.w regnum,D1
0002B73E <AmiBlitz3.ab3@13943>    BSR.w writeword                                         ;nat
0002B744 <AmiBlitz3.ab3@13946>   MOVE.w (A7)+,stackpar
0002B74A <AmiBlitz3.ab3@13947>   MOVE.w (A7)+,thisstuse
0002B74C <AmiBlitz3.ab3@13948> RTS
0002B74E <AmiBlitz3.ab3@13951> thisstuse: Ds.w 1
0002B750 <AmiBlitz3.ab3@13954> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002B752 <AmiBlitz3.ab3@13955> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002B756 <AmiBlitz3.ab3@13960>   BSR.w eval4
0002B760 <AmiBlitz3.ab3@13961>   SUBI.l #$12,forthsp
0002B762 <AmiBlitz3.ab3@13962> RTS
0002B764 <AmiBlitz3.ab3@13966>   MOVEQ.l #$01,D1
0002B768 <AmiBlitz3.ab3@13968>       MOVEA.l precsp(PC),A1
0002B76A <AmiBlitz3.ab3@13969>       MOVE.l A0,(A1)+
0002B76C <AmiBlitz3.ab3@13970>       MOVE.w D1,(A1)+
0002B772 <AmiBlitz3.ab3@13971>       MOVE.l A1,precsp
0002B776 <AmiBlitz3.ab3@13972>    BSR.w calcloop
0002B778 <AmiBlitz3.ab3@13973>   TST.w D1
0002B77C <AmiBlitz3.ab3@13974>    BNE.w syntaxerr
0002B782 <AmiBlitz3.ab3@13975>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002B784 <AmiBlitz3.ab3@13976> RTS
0002B788 <AmiBlitz3.ab3@13981>   BSR.w JL_0_9C24
0002B78C <AmiBlitz3.ab3@13984>   MOVEA.l precsp(PC),A1
0002B78E <AmiBlitz3.ab3@13985>   CMP.w -(A1),D1
0002B792 <AmiBlitz3.ab3@13986>    BHI.w JL_0_9B0A
0002B794 <AmiBlitz3.ab3@13987> RTS
0002B798 <AmiBlitz3.ab3@13992>   MOVEA.l precsp(PC),A1
0002B79A <AmiBlitz3.ab3@13993>   MOVE.l A0,(A1)+
0002B79C <AmiBlitz3.ab3@13994>   MOVE.w D1,(A1)+
0002B7A2 <AmiBlitz3.ab3@13995>   MOVE.l A1,precsp
0002B7A4 <AmiBlitz3.ab3@13996>   MOVE.w D2,-(A7)
0002B7AA <AmiBlitz3.ab3@13997>   ADDQ.w #1,regnum
0002B7AE <AmiBlitz3.ab3@13998>    BSR.w calcloop               ;constant optimizer
0002B7B4 <AmiBlitz3.ab3@13999>   SUBQ.w #1,regnum
0002B7B6 <AmiBlitz3.ab3@14000>   MOVE.w (A7)+,D3
0002B7BA <AmiBlitz3.ab3@14001>   MOVEM.l D1/A0,-(A7)
0002B7BE <AmiBlitz3.ab3@14002>    BEQ.w JL_0_9B2E
0002B7C2 <AmiBlitz3.ab3@14003>    BSR.w JL_0_9770
0002B7C6 <AmiBlitz3.ab3@14006>   BSR.w popprec
0002B7CA <AmiBlitz3.ab3@14007>   BSR.w writecode
0002B7CE <AmiBlitz3.ab3@14008>   MOVEA.l forthsp(PC),A0
0002B7D2 <AmiBlitz3.ab3@14009>   MOVE.w -$2(A0),D1
0002B7D6 <AmiBlitz3.ab3@14010>   OR.w -$14(A0),D1
0002B7DA <AmiBlitz3.ab3@14011>   MOVE.w D1,-$14(A0)
0002B7DE <AmiBlitz3.ab3@14012>    BNE.w JL_0_9C0E
0002B7E4 <AmiBlitz3.ab3@14013>   MOVE.w dontwrite,D1
0002B7E8 <AmiBlitz3.ab3@14014>    BNE.w JL_0_9C0E
0002B7EC <AmiBlitz3.ab3@14015>    MOVEA.l -$24(A0),A0
0002B928 <AmiBlitz3.ab3@14017>  !newcalc
0002B92C <AmiBlitz3.ab3@14018>    BEQ 'l10
0002B930 <AmiBlitz3.ab3@14019>    MOVEA.l forthsp(PC),A0
0002B938 <AmiBlitz3.ab3@14020>    MOVE.w -$18(A0),lasta6
0002B940 <AmiBlitz3.ab3@14021>    MOVE.l -$1C(A0),lasta6
0002B944 <AmiBlitz3.ab3@14022>    MOVEA.l -$24(A0),A0
0002B94A <AmiBlitz3.ab3@14023>    MOVE.l A0,destpointer
0002B950 <AmiBlitz3.ab3@14024>    MOVEA.l _mathffpbase,A6
0002B956 <AmiBlitz3.ab3@14025>    MOVEA.l ffplib,A1
0002B95A <AmiBlitz3.ab3@14026> BRA cont1
0002B95E <AmiBlitz3.ab3@14029>   MOVE.w #$2000,D1
0002B964 <AmiBlitz3.ab3@14030>   OR.w regnum,D1
0002B968 <AmiBlitz3.ab3@14031>    BSR.w writeword
0002B96A <AmiBlitz3.ab3@14032>     MOVEQ #0,d1
0002B970 <AmiBlitz3.ab3@14033>     MOVE.w regnum,D1
0002B972 <AmiBlitz3.ab3@14034>     ASL.l #8,d1
0002B974 <AmiBlitz3.ab3@14035>     ASL.l #2,d1
0002B97A <AmiBlitz3.ab3@14036>     OR.l #$f2000000,d1
0002B97E <AmiBlitz3.ab3@14037>     BSR writelong
0002B982 <AmiBlitz3.ab3@14038>   MOVE.w #$4E75,D1
0002B986 <AmiBlitz3.ab3@14039>    BSR.w writeword
0002B98E <AmiBlitz3.ab3@14040>   MOVE.w -$18(A0),lasta6
0002B996 <AmiBlitz3.ab3@14041>   MOVE.l -$1C(A0),lasta6
0002B99A <AmiBlitz3.ab3@14042>   MOVEA.l -$24(A0),A0
0002B9A0 <AmiBlitz3.ab3@14043>   MOVE.l A0,destpointer
0002B9A4 <AmiBlitz3.ab3@14044>   MOVEM.l D2/A5,-(A7)
0002B9AA <AmiBlitz3.ab3@14045>   MOVEA.l _mathffpbase,A6
0002B9B0 <AmiBlitz3.ab3@14046>   MOVEA.l ffplib,A1
0002B9B4 <AmiBlitz3.ab3@14047>   MOVE.w $A(A1),D0
0002B9BA <AmiBlitz3.ab3@14048>   LEA _mathffpbase,A5
0002B9BC <AmiBlitz3.ab3@14049>   SUBA.w D0,A5
0002B9C2 <AmiBlitz3.ab3@14050>   JSR Aclearcache                                          ;neg +
0002B9C8 <AmiBlitz3.ab3@14051>   CLR.l load_var_addr
0002B9CE <AmiBlitz3.ab3@14052>   CLR.l imm_addr
0002B9D4 <AmiBlitz3.ab3@14053>   TST.w dontwrite
0002B9D8 <AmiBlitz3.ab3@14054>   BNE '1
0002B9DA <AmiBlitz3.ab3@14055>   JSR (A0)                                                 ;calc constant inline expression
0002B9DE <AmiBlitz3.ab3@14058>   MOVEM.l (A7)+,D2/A5
0002B9E4 <AmiBlitz3.ab3@14061>   MOVE.b d2,isconstantvalue
0002B9EA <AmiBlitz3.ab3@14062>   MOVE.l d0,lastconstantvalue
0002B9F0 <AmiBlitz3.ab3@14063>   MOVE.w regnum,D1
0002B9F2 <AmiBlitz3.ab3@14064>   LSL.w #8,D1
0002B9F4 <AmiBlitz3.ab3@14065>   LSL.w #1,D1
0002B9F8 <AmiBlitz3.ab3@14066>   ORI.w #$203C,D1
0002B9FC <AmiBlitz3.ab3@14067>   CMP.w #$3,D2
0002BA00 <AmiBlitz3.ab3@14068>    BCC.w JL_0_9BCE
0002BA04 <AmiBlitz3.ab3@14069>   ORI.w #$1000,D1
0002BA08 <AmiBlitz3.ab3@14070>    BSR.w writeword
0002BA0A <AmiBlitz3.ab3@14071>   MOVE.w D0,D1
0002BA0E <AmiBlitz3.ab3@14072>    BSR.w writeword
0002BA12 <AmiBlitz3.ab3@14073> BRA.w JL_0_9BD8
0002BA18 <AmiBlitz3.ab3@14077>   TST.b iee                                                ;fpu constant
0002BA1C <AmiBlitz3.ab3@14078>   BEQ 'l10
0002BA20 <AmiBlitz3.ab3@14079>   CMP.b #5,d2
0002BA24 <AmiBlitz3.ab3@14080>   BNE 'l10
0002BA26 <AmiBlitz3.ab3@14081>   MOVEQ #0,d1
0002BA2C <AmiBlitz3.ab3@14082>   MOVE.w regnum,D1
0002BA2E <AmiBlitz3.ab3@14083>   ASL.l #7,d1
0002BA34 <AmiBlitz3.ab3@14084>   OR.l #$f23c5400,d1
0002BA38 <AmiBlitz3.ab3@14085>   BSR writelong
0002BA3A <AmiBlitz3.ab3@14086>   SUBQ.l #8,a7
0002BA40 <AmiBlitz3.ab3@14087>   fmove.d fp0,0(a7)
0002BA42 <AmiBlitz3.ab3@14088>   MOVE.l (a7)+,d1
0002BA46 <AmiBlitz3.ab3@14089>   BSR writelong
0002BA48 <AmiBlitz3.ab3@14090>   MOVE.l (a7)+,d1
0002BA4C <AmiBlitz3.ab3@14091>   BSR writelong
0002BA50 <AmiBlitz3.ab3@14092> BRA JL_0_9BD8
0002BA54 <AmiBlitz3.ab3@14095>   BSR.w writeword
0002BA56 <AmiBlitz3.ab3@14096>   MOVE.l D0,D1
0002BA5A <AmiBlitz3.ab3@14097>   BSR.w writelong
0002BA5E <AmiBlitz3.ab3@14100>   MOVEA.l forthsp(PC),A0
0002BA62 <AmiBlitz3.ab3@14101>   MOVEA.l -$20(A0),A3
0002BA68 <AmiBlitz3.ab3@14102>   MOVEA.l hunkoffsetbase,A2
0002BA6E <AmiBlitz3.ab3@14103>   MOVE.l A3,hunkoffsetbase
0002BA74 <AmiBlitz3.ab3@14104>   MOVEA.l _execbase,A6
0002BA76 <AmiBlitz3.ab3@14107>   CMPA.l A3,A2
0002BA7A <AmiBlitz3.ab3@14108>   BEQ.w JL_0_9C0A
0002BA80 <AmiBlitz3.ab3@14109>   SUBQ.l #1,hunkoffsetcounter
0002BA82 <AmiBlitz3.ab3@14110>   MOVEA.l A2,A1
0002BA84 <AmiBlitz3.ab3@14111>   MOVEA.l (A2),A2
0002BA86 <AmiBlitz3.ab3@14112>   MOVEQ.l #$8,D0
0002BA8C <AmiBlitz3.ab3@14113>   MOVE.l mempool2,a0
0002BA90 <AmiBlitz3.ab3@14114>    JSR _FreePooled(A6)
0002BA94 <AmiBlitz3.ab3@14115> BRA.w JL_0_9BF0
0002BA98 <AmiBlitz3.ab3@14119>   MOVEA.l forthsp(PC),A0
0002BA9C <AmiBlitz3.ab3@14122>   LEA -$12(A0),A0
0002BAA2 <AmiBlitz3.ab3@14123>   MOVE.l A0,forthsp
0002BAA6 <AmiBlitz3.ab3@14124>   MOVEM.l (A7)+,D1/A0
0002BAAA <AmiBlitz3.ab3@14125>   BSR.w reget
0002BAAE <AmiBlitz3.ab3@14126> BRA.w JL_0_9AFE
0002BAB2 <AmiBlitz3.ab3@14130>   BSR.w JL_0_A386
0002BAB4 <AmiBlitz3.ab3@14131>   TST.w d0
0002BAB8 <AmiBlitz3.ab3@14132>   BEQ JL_0_9C42
0002BABC <AmiBlitz3.ab3@14133>   CMP.b #",",d0
0002BAC0 <AmiBlitz3.ab3@14134>   BEQ JL_0_9C42
0002BAC4 <AmiBlitz3.ab3@14135>   CMP.b #"@",d0                                            ;expandline @@
0002BAC8 <AmiBlitz3.ab3@14136>   BEQ JL_0_9C42
0002BACE <AmiBlitz3.ab3@14137>   LEA operators,A0
0002BAD0 <AmiBlitz3.ab3@14140>    TST.w (A0)
0002BAD4 <AmiBlitz3.ab3@14141>    BEQ.w JL_0_9C42
0002BAD6 <AmiBlitz3.ab3@14142>   CMP.w (A0),D0
0002BADA <AmiBlitz3.ab3@14143>    BEQ.w JL_0_9C46a
0002BADE <AmiBlitz3.ab3@14144>   LEA $20(A0),A0
0002BAE2 <AmiBlitz3.ab3@14145> BRA.w JL_0_9C2E
0002BAE4 <AmiBlitz3.ab3@14149>   MOVEQ.l #$00,D1
0002BAE6 <AmiBlitz3.ab3@14150> RTS
0002BAEA <AmiBlitz3.ab3@14154>   CMP.w #$3C,D0
0002BAEE <AmiBlitz3.ab3@14155>    BNE.w JL_0_9C70
0002BAF2 <AmiBlitz3.ab3@14156>    BSR.w get1bytemain
0002BAF6 <AmiBlitz3.ab3@14157>   CMP.w #$3D,D0
0002BAFA <AmiBlitz3.ab3@14158>    BNE.w JL_0_9C64
0002BB00 <AmiBlitz3.ab3@14159>   LEA ople,A0
0002BB04 <AmiBlitz3.ab3@14160> BRA.w JL_0_9CCA
0002BB08 <AmiBlitz3.ab3@14164>   CMP.w #$3E,D0
0002BB0C <AmiBlitz3.ab3@14165>    BNE.w JL_0_9C96
0002BB10 <AmiBlitz3.ab3@14166> BRA.w JL_0_9CC4
0002BB14 <AmiBlitz3.ab3@14170>   CMP.w #$3E,D0
0002BB18 <AmiBlitz3.ab3@14171>    BNE.w JL_0_9C9E
0002BB1C <AmiBlitz3.ab3@14172>    BSR.w get1bytemain
0002BB20 <AmiBlitz3.ab3@14173>   CMP.w #$3D,D0
0002BB24 <AmiBlitz3.ab3@14174>    BNE.w JL_0_9C8E
0002BB2A <AmiBlitz3.ab3@14175>   LEA opge,A0
0002BB2E <AmiBlitz3.ab3@14176> BRA.w JL_0_9CCA
0002BB32 <AmiBlitz3.ab3@14180>   CMP.w #$3C,D0
0002BB36 <AmiBlitz3.ab3@14181>    BEQ.w JL_0_9CC4
0002BB40 <AmiBlitz3.ab3@14185>     MOVE.w oldqflag,instringon
0002BB46 <AmiBlitz3.ab3@14186>     MOVEA.l lastsourcepos,A5
0002BB4A <AmiBlitz3.ab3@14187> BRA.w JL_0_9CCA
0002BB4E <AmiBlitz3.ab3@14191>   CMP.w #$3D,D0
0002BB52 <AmiBlitz3.ab3@14192>    BNE.w JL_0_9CCA
0002BB56 <AmiBlitz3.ab3@14193>    BSR.w get1bytemain
0002BB5A <AmiBlitz3.ab3@14194>   CMP.w #$3E,D0
0002BB5E <AmiBlitz3.ab3@14195>    BNE.w JL_0_9CBC
0002BB64 <AmiBlitz3.ab3@14196>   LEA opge,A0
0002BB68 <AmiBlitz3.ab3@14197> BRA.w JL_0_9CCA
0002BB6C <AmiBlitz3.ab3@14201>   CMP.w #$3C,D0
0002BB70 <AmiBlitz3.ab3@14202>   BNE.w JL_0_9C96
0002BB76 <AmiBlitz3.ab3@14205>   LEA opne,A0
0002BB7A <AmiBlitz3.ab3@14208>   MOVE.w $1E(A0),D1
0002BB7C <AmiBlitz3.ab3@14209> RTS
0002BB7E <AmiBlitz3.ab3@14216>   MOVE.w d2,d1
0002BB80 <AmiBlitz3.ab3@14217>   SUBQ.w #1,D1
0002BB84 <AmiBlitz3.ab3@14218>    BMI.w illoperr
0002BB86 <AmiBlitz3.ab3@14219>   LSL.w #2,D1
0002BB8A <AmiBlitz3.ab3@14220>   MOVE.l $2(A0,D1.W),D1
0002BB8E <AmiBlitz3.ab3@14221>    BEQ.w illoperr
0002BB90 <AmiBlitz3.ab3@14222>   MOVEA.l D1,A0
0002BB92 <AmiBlitz3.ab3@14225> JMP (A0)
0002BB96 <AmiBlitz3.ab3@14241>   MOVEA.l precsp(PC),A1
0002BB9C <AmiBlitz3.ab3@14242>   CMPA.l #precstackf,A1
0002BBA0 <AmiBlitz3.ab3@14243>    BCC.w pserr
0002BBA2 <AmiBlitz3.ab3@14244>   MOVE.w -(A1),D1
0002BBA4 <AmiBlitz3.ab3@14245>   MOVEA.l -(A1),A0
0002BBAA <AmiBlitz3.ab3@14246>   MOVE.l A1,precsp
0002BBAC <AmiBlitz3.ab3@14247> RTS
0002BBB0 <AmiBlitz3.ab3@14250> precsp:      Dc.l precstack
0002BCAC <AmiBlitz3.ab3@14251> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002BD30 <AmiBlitz3.ab3@14252>              Ds.l 33
0002BD32 <AmiBlitz3.ab3@14258> mseq:  SEQ D0
0002BD34 <AmiBlitz3.ab3@14259> msne:    SNE D0
0002BD36 <AmiBlitz3.ab3@14260> mslt:    SLT D0
0002BD38 <AmiBlitz3.ab3@14261> msle:    SLE D0
0002BD3A <AmiBlitz3.ab3@14262> msgt:    SGT D0
0002BD3C <AmiBlitz3.ab3@14263> msge:    SGE D0
0002BD3E <AmiBlitz3.ab3@14265> cmp0:    CMP.b D0,D0
0002BD40 <AmiBlitz3.ab3@14266> cmp1:    CMP.w D0,D0
0002BD42 <AmiBlitz3.ab3@14267> cmp2:    CMP.l D0,D0
0002BD46 <AmiBlitz3.ab3@14271>   MOVE.w cmp0(PC),D1
0002BD4A <AmiBlitz3.ab3@14272> BRA.w doeqcmp2                                            ;writecompare
0002BD4E <AmiBlitz3.ab3@14276>   MOVE.w cmp0(PC),D1
0002BD52 <AmiBlitz3.ab3@14277> BRA.w donecmp2
0002BD56 <AmiBlitz3.ab3@14281>   MOVE.w cmp0(PC),D1
0002BD5A <AmiBlitz3.ab3@14282> BRA.w doltcmp2
0002BD5E <AmiBlitz3.ab3@14286>   MOVE.w cmp0(PC),D1
0002BD62 <AmiBlitz3.ab3@14287> BRA.w dolecmp2
0002BD66 <AmiBlitz3.ab3@14291>   MOVE.w cmp0(PC),D1
0002BD6A <AmiBlitz3.ab3@14292> BRA.w dogtcmp2
0002BD6E <AmiBlitz3.ab3@14297>   MOVE.w cmp0(PC),D1
0002BD72 <AmiBlitz3.ab3@14298> BRA.w dogecmp2
0002BD76 <AmiBlitz3.ab3@14302>   MOVE.w cmp1(PC),D1
0002BD7A <AmiBlitz3.ab3@14303> BRA.w doeqcmp2
0002BD7E <AmiBlitz3.ab3@14307>   MOVE.w cmp1(PC),D1
0002BD82 <AmiBlitz3.ab3@14308> BRA.w donecmp2
0002BD86 <AmiBlitz3.ab3@14312>   MOVE.w cmp1(PC),D1
0002BD8A <AmiBlitz3.ab3@14313> BRA.w doltcmp2
0002BD8E <AmiBlitz3.ab3@14317>   MOVE.w cmp1(PC),D1
0002BD92 <AmiBlitz3.ab3@14318> BRA.w dolecmp2
0002BD96 <AmiBlitz3.ab3@14322>   MOVE.w cmp1(PC),D1
0002BD9A <AmiBlitz3.ab3@14323> BRA.w dogtcmp2
0002BD9E <AmiBlitz3.ab3@14328>   MOVE.w cmp1(PC),D1
0002BDA2 <AmiBlitz3.ab3@14329> BRA.w dogecmp2
0002BDA6 <AmiBlitz3.ab3@14333>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002BDAA <AmiBlitz3.ab3@14334> BRA doeqcmp2
0002BDAE <AmiBlitz3.ab3@14337>   MOVE.w cmp2(PC),D1
0002BDB2 <AmiBlitz3.ab3@14338> BRA donecmp2
0002BDB6 <AmiBlitz3.ab3@14342>   MOVE.w cmp2(PC),D1
0002BDBA <AmiBlitz3.ab3@14343> BRA.w doltcmp2
0002BDBE <AmiBlitz3.ab3@14347>   MOVE.w cmp2(PC),D1
0002BDC2 <AmiBlitz3.ab3@14348> BRA.w dolecmp2
0002BDC6 <AmiBlitz3.ab3@14352>   MOVE.w cmp2(PC),D1
0002BDCA <AmiBlitz3.ab3@14353> BRA.w dogtcmp2
0002BDCE <AmiBlitz3.ab3@14357>   MOVE.w cmp2(PC),D1
0002BDD2 <AmiBlitz3.ab3@14358> BRA.w dogecmp2
0002BDD4 <AmiBlitz3.ab3@14361> cfregat:  Ds.w 1
0002BDDA <AmiBlitz3.ab3@14365>   MOVE.w D1,libjsr+2
0002BDDE <AmiBlitz3.ab3@14366>    BSR.w JL_0_AD40
0002BDE0 <AmiBlitz3.ab3@14367>   MOVE.l D4,D1
0002BDE4 <AmiBlitz3.ab3@14368>    BSR.w JL_0_AD38
0002BDE8 <AmiBlitz3.ab3@14369>   MOVE.w #$C900,D1
0002BDEC <AmiBlitz3.ab3@14370>    BSR.w Atokejsr
0002BDF0 <AmiBlitz3.ab3@14371>    BSR.w JL_0_A352
0002BDF6 <AmiBlitz3.ab3@14372>   MOVE.l libjsr,D1
0002BDFA <AmiBlitz3.ab3@14373>    BSR.w writelong
0002BE04 <AmiBlitz3.ab3@14374>   MOVE.w regnum,cfregat
0002BE0A <AmiBlitz3.ab3@14375>   CLR.w regnum
0002BE0C <AmiBlitz3.ab3@14376> RTS
0002BE16 <AmiBlitz3.ab3@14380>   MOVE.w cfregat,regnum
0002BE1A <AmiBlitz3.ab3@14381>    BSR.w JL_0_A36E
0002BE1C <AmiBlitz3.ab3@14382>   MOVE.l D5,D1
0002BE20 <AmiBlitz3.ab3@14383> BRA.w JL_0_AD38
0002BE22 <AmiBlitz3.ab3@14387>    MOVEQ.l #-$2A,D1
0002BE28 <AmiBlitz3.ab3@14388>    TST.b fpu
0002BE2C <AmiBlitz3.ab3@14389>    BEQ do_equal_float__nofpu
0002BE2E <AmiBlitz3.ab3@14390>    MOVEQ #0,d1
0002BE34 <AmiBlitz3.ab3@14391>    MOVE.w regnum,d1
0002BE36 <AmiBlitz3.ab3@14392>    MOVE.l d1,d2
0002BE38 <AmiBlitz3.ab3@14393>    ASL.l #7,d1
0002BE3A <AmiBlitz3.ab3@14394>    ADDQ  #1,d2
0002BE3C <AmiBlitz3.ab3@14395>    ASL.l #8,d2
0002BE3E <AmiBlitz3.ab3@14396>    ASL.l #2,d2
0002BE40 <AmiBlitz3.ab3@14397>    OR.l d2,d1
0002BE46 <AmiBlitz3.ab3@14398>    OR.l #$f2000038,d1
0002BE4C <AmiBlitz3.ab3@14399>    JSR writelong
0002BE50 <AmiBlitz3.ab3@14400>    MOVE.w #$f240,d1
0002BE56 <AmiBlitz3.ab3@14401>    OR.w regnum,d1
0002BE5A <AmiBlitz3.ab3@14402>    BSR writeword
0002BE5C <AmiBlitz3.ab3@14403>    MOVEQ.l #1,d2
0002BE60 <AmiBlitz3.ab3@14404>    MOVE.w #1,d1                                            ;fpu comp fseq
0002BE64 <AmiBlitz3.ab3@14405>    BSR writeword
0002BE66 <AmiBlitz3.ab3@14406> RTS
0002BE6A <AmiBlitz3.ab3@14409>    BSR.w docflib
0002BE6E <AmiBlitz3.ab3@14410>    BSR.w doeqcmp
0002BE72 <AmiBlitz3.ab3@14411> BRA.w docflib2
0002BE74 <AmiBlitz3.ab3@14415>   MOVEQ.l #-$2A,D1
0002BE7A <AmiBlitz3.ab3@14416>   TST.b fpu
0002BE7E <AmiBlitz3.ab3@14417>    BEQ do_not_equal_float__nofpu
0002BE80 <AmiBlitz3.ab3@14418>    MOVEQ #0,d1
0002BE86 <AmiBlitz3.ab3@14419>    MOVE.w regnum,d1
0002BE88 <AmiBlitz3.ab3@14420>    MOVE.l d1,d2
0002BE8A <AmiBlitz3.ab3@14421>    ASL.l #7,d1
0002BE8C <AmiBlitz3.ab3@14422>    ADDQ  #1,d2
0002BE8E <AmiBlitz3.ab3@14423>    ASL.l #8,d2
0002BE90 <AmiBlitz3.ab3@14424>    ASL.l #2,d2
0002BE92 <AmiBlitz3.ab3@14425>    OR.l d2,d1
0002BE98 <AmiBlitz3.ab3@14426>    OR.l #$f2000038,d1
0002BE9E <AmiBlitz3.ab3@14427>    JSR writelong
0002BEA2 <AmiBlitz3.ab3@14428>    MOVE.w #$f240,d1
0002BEA8 <AmiBlitz3.ab3@14429>    OR.w regnum,d1
0002BEAC <AmiBlitz3.ab3@14430>    BSR writeword
0002BEB2 <AmiBlitz3.ab3@14431>    MOVE.l #1,d2
0002BEB6 <AmiBlitz3.ab3@14432>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002BEBA <AmiBlitz3.ab3@14433>    BSR writeword
0002BEBC <AmiBlitz3.ab3@14434> RTS
0002BEC0 <AmiBlitz3.ab3@14437>    BSR.w docflib
0002BEC4 <AmiBlitz3.ab3@14438>    BSR.w donecmp
0002BEC8 <AmiBlitz3.ab3@14439> BRA.w docflib2
0002BECA <AmiBlitz3.ab3@14443>   MOVEQ.l #-$2A,D1
0002BED0 <AmiBlitz3.ab3@14444>     TST.b fpu
0002BED4 <AmiBlitz3.ab3@14445>    BEQ do_littler_float__nofpu
0002BED6 <AmiBlitz3.ab3@14446>    MOVEQ #0,d1
0002BEDC <AmiBlitz3.ab3@14447>    MOVE.w regnum,d1
0002BEDE <AmiBlitz3.ab3@14448>    MOVE.l d1,d2
0002BEE0 <AmiBlitz3.ab3@14449>    ASL.l #7,d1
0002BEE2 <AmiBlitz3.ab3@14450>    ADDQ  #1,d2
0002BEE4 <AmiBlitz3.ab3@14451>    ASL.l #8,d2
0002BEE6 <AmiBlitz3.ab3@14452>    ASL.l #2,d2
0002BEE8 <AmiBlitz3.ab3@14453>    OR.l d2,d1
0002BEEE <AmiBlitz3.ab3@14454>    OR.l #$f2000038,d1
0002BEF4 <AmiBlitz3.ab3@14455>    JSR writelong
0002BEF8 <AmiBlitz3.ab3@14456>    MOVE.w #$f240,d1
0002BEFE <AmiBlitz3.ab3@14457>    OR.w regnum,d1
0002BF02 <AmiBlitz3.ab3@14458>    BSR writeword
0002BF08 <AmiBlitz3.ab3@14459>    MOVE.l #$1,d2
0002BF0C <AmiBlitz3.ab3@14460>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002BF10 <AmiBlitz3.ab3@14461>    BSR writeword
0002BF12 <AmiBlitz3.ab3@14462> RTS
0002BF16 <AmiBlitz3.ab3@14465>    BSR.w docflib
0002BF1A <AmiBlitz3.ab3@14466>    BSR.w doltcmp
0002BF1E <AmiBlitz3.ab3@14467> BRA.w docflib2
0002BF20 <AmiBlitz3.ab3@14471>   MOVEQ.l #-$2A,D1
0002BF26 <AmiBlitz3.ab3@14472>   TST.b fpu
0002BF2A <AmiBlitz3.ab3@14473>    BEQ do_littler_equal_float__nofpu
0002BF2C <AmiBlitz3.ab3@14474>    MOVEQ #0,d1
0002BF32 <AmiBlitz3.ab3@14475>    MOVE.w regnum,d1
0002BF34 <AmiBlitz3.ab3@14476>    MOVE.l d1,d2
0002BF36 <AmiBlitz3.ab3@14477>    ASL.l #7,d1
0002BF38 <AmiBlitz3.ab3@14478>    ADDQ  #1,d2
0002BF3A <AmiBlitz3.ab3@14479>    ASL.l #8,d2
0002BF3C <AmiBlitz3.ab3@14480>    ASL.l #2,d2
0002BF3E <AmiBlitz3.ab3@14481>    OR.l d2,d1
0002BF44 <AmiBlitz3.ab3@14482>    OR.l #$f2000038,d1
0002BF4A <AmiBlitz3.ab3@14483>    JSR writelong
0002BF4E <AmiBlitz3.ab3@14484>    MOVE.w #$f240,d1
0002BF54 <AmiBlitz3.ab3@14485>    OR.w regnum,d1
0002BF58 <AmiBlitz3.ab3@14486>    BSR writeword
0002BF5E <AmiBlitz3.ab3@14487>    MOVE.l #1,d2
0002BF62 <AmiBlitz3.ab3@14488>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002BF66 <AmiBlitz3.ab3@14489>    BSR writeword
0002BF68 <AmiBlitz3.ab3@14490> RTS
0002BF6C <AmiBlitz3.ab3@14493>    BSR.w docflib
0002BF70 <AmiBlitz3.ab3@14494>    BSR.w dolecmp
0002BF74 <AmiBlitz3.ab3@14495> BRA.w docflib2
0002BF76 <AmiBlitz3.ab3@14499>   MOVEQ.l #-$2A,D1
0002BF7C <AmiBlitz3.ab3@14500>    TST.b fpu
0002BF80 <AmiBlitz3.ab3@14501>    BEQ do_greater_float__nofpu
0002BF82 <AmiBlitz3.ab3@14502>     MOVEQ #0,d1
0002BF88 <AmiBlitz3.ab3@14503>    MOVE.w regnum,d1
0002BF8A <AmiBlitz3.ab3@14504>    MOVE.l d1,d2
0002BF8C <AmiBlitz3.ab3@14505>    ASL.l #7,d1
0002BF8E <AmiBlitz3.ab3@14506>    ADDQ  #1,d2
0002BF90 <AmiBlitz3.ab3@14507>    ASL.l #8,d2
0002BF92 <AmiBlitz3.ab3@14508>    ASL.l #2,d2
0002BF94 <AmiBlitz3.ab3@14509>    OR.l d2,d1
0002BF9A <AmiBlitz3.ab3@14510>    OR.l #$f2000038,d1
0002BFA0 <AmiBlitz3.ab3@14511>    JSR writelong
0002BFA4 <AmiBlitz3.ab3@14512>    MOVE.w #$f240,d1
0002BFAA <AmiBlitz3.ab3@14513>    OR.w regnum,d1
0002BFAE <AmiBlitz3.ab3@14514>    BSR writeword
0002BFB4 <AmiBlitz3.ab3@14515>    MOVE.l #1,d2
0002BFB8 <AmiBlitz3.ab3@14516>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002BFBC <AmiBlitz3.ab3@14517>    BSR writeword
0002BFBE <AmiBlitz3.ab3@14518> RTS
0002BFC2 <AmiBlitz3.ab3@14521>    BSR.w docflib
0002BFC6 <AmiBlitz3.ab3@14522>    BSR.w dogtcmp
0002BFCA <AmiBlitz3.ab3@14523> BRA.w docflib2
0002BFCC <AmiBlitz3.ab3@14527>   MOVEQ.l #-$2A,D1
0002BFD2 <AmiBlitz3.ab3@14528>  TST.b fpu
0002BFD6 <AmiBlitz3.ab3@14529>    BEQ do_greater_equal_float__nofpu
0002BFD8 <AmiBlitz3.ab3@14530>    MOVEQ #0,d1
0002BFDE <AmiBlitz3.ab3@14531>    MOVE.w regnum,d1
0002BFE0 <AmiBlitz3.ab3@14532>    MOVE.l d1,d2
0002BFE2 <AmiBlitz3.ab3@14533>    ASL.l #7,d1
0002BFE4 <AmiBlitz3.ab3@14534>    ADDQ  #1,d2
0002BFE6 <AmiBlitz3.ab3@14535>    ASL.l #8,d2
0002BFE8 <AmiBlitz3.ab3@14536>    ASL.l #2,d2
0002BFEA <AmiBlitz3.ab3@14537>    OR.l d2,d1
0002BFF0 <AmiBlitz3.ab3@14538>    OR.l #$f2000038,d1
0002BFF6 <AmiBlitz3.ab3@14539>    JSR writelong
0002BFFA <AmiBlitz3.ab3@14540>    MOVE.w #$f240,d1
0002C000 <AmiBlitz3.ab3@14541>    OR.w regnum,d1
0002C004 <AmiBlitz3.ab3@14542>    BSR writeword
0002C00A <AmiBlitz3.ab3@14543>    MOVE.l #1,d2
0002C00E <AmiBlitz3.ab3@14544>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C012 <AmiBlitz3.ab3@14545>    BSR writeword
0002C014 <AmiBlitz3.ab3@14546> RTS
0002C018 <AmiBlitz3.ab3@14549>    BSR.w docflib
0002C01C <AmiBlitz3.ab3@14550>    BSR.w dogecmp
0002C020 <AmiBlitz3.ab3@14551> BRA.w docflib2
0002C026 <AmiBlitz3.ab3@14556>   MOVE.l #$CE00,D1
0002C02C <AmiBlitz3.ab3@14557>    MOVE.l d1,lastinstruction
0002C030 <AmiBlitz3.ab3@14558>    BSR.w Atokejsr
0002C034 <AmiBlitz3.ab3@14559> BRA.w doeqcmp
0002C03A <AmiBlitz3.ab3@14563>   MOVE.l #$CE00,D1
0002C040 <AmiBlitz3.ab3@14564>    MOVE.l d1,lastinstruction
0002C044 <AmiBlitz3.ab3@14565>    BSR.w Atokejsr
0002C048 <AmiBlitz3.ab3@14566> BRA.w donecmp
0002C04E <AmiBlitz3.ab3@14570>   MOVE.l #$CE00,D1
0002C054 <AmiBlitz3.ab3@14571>    MOVE.l d1,lastinstruction
0002C058 <AmiBlitz3.ab3@14572>    BSR.w Atokejsr
0002C05C <AmiBlitz3.ab3@14573> BRA.w doltcmp
0002C062 <AmiBlitz3.ab3@14577>   MOVE.l #$CE00,D1
0002C068 <AmiBlitz3.ab3@14578>    MOVE.l d1,lastinstruction
0002C06C <AmiBlitz3.ab3@14579>    BSR.w Atokejsr
0002C070 <AmiBlitz3.ab3@14580> BRA.w dolecmp
0002C076 <AmiBlitz3.ab3@14584>   MOVE.l #$CE00,D1
0002C07C <AmiBlitz3.ab3@14585>    MOVE.l d1,lastinstruction
0002C080 <AmiBlitz3.ab3@14586>    BSR.w Atokejsr
0002C084 <AmiBlitz3.ab3@14587> BRA.w dogtcmp
0002C08A <AmiBlitz3.ab3@14591>   MOVE.l #$CE00,D1
0002C090 <AmiBlitz3.ab3@14592>    MOVE.l d1,lastinstruction
0002C094 <AmiBlitz3.ab3@14593>    BSR.w Atokejsr
0002C098 <AmiBlitz3.ab3@14594> BRA.w dogecmp
0002C09E <AmiBlitz3.ab3@14599>   TST.b fast                                               ;compare
0002C0A2 <AmiBlitz3.ab3@14600>   BEQ cmpit__org
0002C0A8 <AmiBlitz3.ab3@14604>   MOVE.l destpointer,a0
0002C0AE <AmiBlitz3.ab3@14605>   SUB.l imm_addr,a0
0002C0B4 <AmiBlitz3.ab3@14606>   CMP.l #6,a0
0002C0B8 <AmiBlitz3.ab3@14607>   BNE cmpit__l11
0002C0BE <AmiBlitz3.ab3@14608>   MOVE.l imm_addr,a0
0002C0C6 <AmiBlitz3.ab3@14609>   CMP.w #$223c,imm_addr
0002C0CA <AmiBlitz3.ab3@14610>   BNE cmpit__org
0002C0D0 <AmiBlitz3.ab3@14611>   ADD.w #$8e80,-6(a4)
0002C0D6 <AmiBlitz3.ab3@14614>   CLR.l imm_addr
0002C0D8 <AmiBlitz3.ab3@14615> RTS
0002C0DE <AmiBlitz3.ab3@14618>   CMP.l #4,a0
0002C0E2 <AmiBlitz3.ab3@14619>   BNE cmpit__l10
0002C0E6 <AmiBlitz3.ab3@14620>   CMP.b #2,d3
0002C0EA <AmiBlitz3.ab3@14621>   BNE cmpit__l11b
0002C0F0 <AmiBlitz3.ab3@14622>   ADD.w #$7e40,-4(a4)
0002C0F2 <AmiBlitz3.ab3@14623> RTS
0002C0F8 <AmiBlitz3.ab3@14626>  ADD.w #$7e00,-4(a4)
0002C0FA <AmiBlitz3.ab3@14627> RTS
0002C100 <AmiBlitz3.ab3@14630>    MOVE.l destpointer,a0
0002C106 <AmiBlitz3.ab3@14631>    SUB.l load_var_addr,a0
0002C10A <AmiBlitz3.ab3@14632>    CMP.w #4,a0
0002C10E <AmiBlitz3.ab3@14633>    BNE cmpit__org
0002C112 <AmiBlitz3.ab3@14634>    CMP.b #3,d3
0002C116 <AmiBlitz3.ab3@14635>    BCS cmpit__lv1
0002C11C <AmiBlitz3.ab3@14636>    CLR.l load_var_addr
0002C122 <AmiBlitz3.ab3@14637>    ADD.w #$9080-$200,-4(a4)
0002C124 <AmiBlitz3.ab3@14638> RTS
0002C128 <AmiBlitz3.ab3@14641>   CMP.b #2,d3
0002C12C <AmiBlitz3.ab3@14642>    BNE cmpit__org
0002C132 <AmiBlitz3.ab3@14643>    CLR.l load_var_addr
0002C138 <AmiBlitz3.ab3@14644>    ADD.w #$8040-$200,-4(a4)
0002C13A <AmiBlitz3.ab3@14645> RTS
0002C140 <AmiBlitz3.ab3@14648>   MOVE.w regnum,D3
0002C142 <AmiBlitz3.ab3@14649>   OR.w D3,D1
0002C144 <AmiBlitz3.ab3@14650>   LSL.w #8,D3
0002C146 <AmiBlitz3.ab3@14651>   LSL.w #1,D3
0002C148 <AmiBlitz3.ab3@14652>   OR.w D3,D1
0002C14A <AmiBlitz3.ab3@14653>   ADDQ.w #1,D1
0002C14E <AmiBlitz3.ab3@14654> BRA.w writeword
0002C152 <AmiBlitz3.ab3@14658>    BSR.w cmpit
0002C156 <AmiBlitz3.ab3@14661>    MOVE.w mseq(PC),D1
0002C15A <AmiBlitz3.ab3@14662> BRA.w cpoke
0002C15E <AmiBlitz3.ab3@14666>   BSR.w cmpit
0002C162 <AmiBlitz3.ab3@14669>   MOVE.w msne(PC),D1
0002C166 <AmiBlitz3.ab3@14670> BRA.w cpoke
0002C16A <AmiBlitz3.ab3@14674>   BSR.w cmpit
0002C16E <AmiBlitz3.ab3@14677>    MOVE.w mslt(PC),D1
0002C172 <AmiBlitz3.ab3@14678> BRA.w cpoke
0002C176 <AmiBlitz3.ab3@14682>    BSR.w cmpit
0002C17A <AmiBlitz3.ab3@14685>    MOVE.w msle(PC),D1
0002C17E <AmiBlitz3.ab3@14686> BRA.w cpoke
0002C182 <AmiBlitz3.ab3@14690>    BSR.w cmpit
0002C186 <AmiBlitz3.ab3@14693>    MOVE.w msgt(PC),D1
0002C18A <AmiBlitz3.ab3@14694> BRA.w cpoke
0002C18E <AmiBlitz3.ab3@14698>   BSR.w cmpit
0002C192 <AmiBlitz3.ab3@14701>    MOVE.w msge(PC),D1
0002C198 <AmiBlitz3.ab3@14704>    OR.w regnum,D1
0002C19C <AmiBlitz3.ab3@14705>    CMP.w #5,d2
0002C1A0 <AmiBlitz3.ab3@14706>    BNE cpoke__nod0
0002C1A4 <AmiBlitz3.ab3@14707>    CMP.w #5,d3
0002C1A8 <AmiBlitz3.ab3@14708>    BNE cpoke__nod0
0002C1AA <AmiBlitz3.ab3@14709>    MOVE.l d1,-(a7)
0002C1B0 <AmiBlitz3.ab3@14710>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002C1B4 <AmiBlitz3.ab3@14711>    BSR writelong
0002C1B6 <AmiBlitz3.ab3@14712>    MOVE.l (a7)+,d1
0002C1BA <AmiBlitz3.ab3@14715>    BSR.w writeword                                         ;writeseq
0002C1BC <AmiBlitz3.ab3@14716>    MOVEQ.l #1,d2
0002C1C2 <AmiBlitz3.ab3@14717>    MOVE.l lasttoken,d1
0002C1C8 <AmiBlitz3.ab3@14718>     TST.b fast
0002C1CC <AmiBlitz3.ab3@14719>     BEQ.s cpoke__l11
0002C1D2 <AmiBlitz3.ab3@14720>    CMP.l #$800b,d1
0002C1D6 <AmiBlitz3.ab3@14721>    BEQ cpoke__l10
0002C1DA <AmiBlitz3.ab3@14724>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002C1E0 <AmiBlitz3.ab3@14725>   OR.w regnum,D1
0002C1E4 <AmiBlitz3.ab3@14726>    BSR.w writeword                                         ;writeext.w
0002C1E6 <AmiBlitz3.ab3@14727>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002C1E8 <AmiBlitz3.ab3@14730> RTS
0002C1EC <AmiBlitz3.ab3@14735>   MOVE.w #$D040,D1
0002C1EE <AmiBlitz3.ab3@14736>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002C1F2 <AmiBlitz3.ab3@14737> BRA.w doplus2
0002C1F6 <AmiBlitz3.ab3@14741>   MOVE.w #$D040,D1
0002C1F8 <AmiBlitz3.ab3@14742>   MOVEQ.l #$03,D2                                          ;now a long
0002C1FC <AmiBlitz3.ab3@14743>    BSR.w doplus2
0002C200 <AmiBlitz3.ab3@14744> BRA.w convert_word_to_long
0002C204 <AmiBlitz3.ab3@14748>   MOVE.w #$D080,D1                                         ;writeaddlong
0002C206 <AmiBlitz3.ab3@14751>   MOVE.w d1,a1
0002C20C <AmiBlitz3.ab3@14752>   TST.b fast
0002C210 <AmiBlitz3.ab3@14753>   BEQ doplus2__l10
0002C212 <AmiBlitz3.ab3@14757>   ASR.w #8,d1
0002C216 <AmiBlitz3.ab3@14758>   CMP.b #$90,d1
0002C21A <AmiBlitz3.ab3@14759>   BEQ doplus2__sub1
0002C21E <AmiBlitz3.ab3@14760>   CMP.b #$d0,d1
0002C222 <AmiBlitz3.ab3@14761>   BNE doplus2__l10
0002C226 <AmiBlitz3.ab3@14762>   CMP.b #3,d3
0002C22A <AmiBlitz3.ab3@14763>   BCS doplus2__lq10
0002C230 <AmiBlitz3.ab3@14764>   TST.b quickadd
0002C236 <AmiBlitz3.ab3@14768>    MOVE.l destpointer,a0
0002C23C <AmiBlitz3.ab3@14769>    CLR.b quickadd
0002C242 <AmiBlitz3.ab3@14770>    CLR.l load_var_addr
0002C248 <AmiBlitz3.ab3@14771>    SUB.l imm_addr,a0
0002C24C <AmiBlitz3.ab3@14772>    CMP.w #6,a0
0002C250 <AmiBlitz3.ab3@14773>    BEQ doplus2__li10
0002C254 <AmiBlitz3.ab3@14774>    CMP.w #4,a0
0002C258 <AmiBlitz3.ab3@14775>    BNE.s doplus2__li1
0002C25E <AmiBlitz3.ab3@14776>    CLR.l imm_addr
0002C264 <AmiBlitz3.ab3@14777>    ADD.w #$a040-$200,-4(a4)
0002C266 <AmiBlitz3.ab3@14778> RTS
0002C268 <AmiBlitz3.ab3@14781>    MOVE.l a4,a0
0002C26E <AmiBlitz3.ab3@14782>    SUB.l load_var_addr,a0
0002C274 <AmiBlitz3.ab3@14783>    CMP.l #$a,a0
0002C278 <AmiBlitz3.ab3@14784>    BNE doplus2__l10e
0002C27E <AmiBlitz3.ab3@14785>    CLR.l load_var_addr
0002C282 <AmiBlitz3.ab3@14786>    MOVE.w -$8(a4),d1
0002C288 <AmiBlitz3.ab3@14787>    MOVE.l -$4(a4),-$8(a4)
0002C28C <AmiBlitz3.ab3@14788>    MOVE.w d1,-$4(a4)
0002C292 <AmiBlitz3.ab3@14789>    SUB.w #$1980,-$a(a4)
0002C298 <AmiBlitz3.ab3@14790>    SUBQ.l #2,destpointer
0002C29A <AmiBlitz3.ab3@14791> RTS
0002C2A0 <AmiBlitz3.ab3@14794>   CLR.b quickadd
0002C2A4 <AmiBlitz3.ab3@14795> BRA doplus2__l10
0002C2AA <AmiBlitz3.ab3@14798>    CLR.l imm_addr
0002C2AE <AmiBlitz3.ab3@14799>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002C2B2 <AmiBlitz3.ab3@14800>    BNE doplus2__doit
0002C2B8 <AmiBlitz3.ab3@14801>    SUBQ.l #6,destpointer
0002C2BA <AmiBlitz3.ab3@14802> RTS
0002C2C0 <AmiBlitz3.ab3@14805>    ADD.w #$b080-$200,-6(a4)
0002C2C2 <AmiBlitz3.ab3@14806> RTS
0002C2C8 <AmiBlitz3.ab3@14809>    MOVE.l destpointer,a0
0002C2CE <AmiBlitz3.ab3@14810>    SUB.l load_var_addr,a0
0002C2D2 <AmiBlitz3.ab3@14811>    CMP.w #4,a0
0002C2D6 <AmiBlitz3.ab3@14812>    BNE doplus2__l10
0002C2DA <AmiBlitz3.ab3@14813>    CMP.b #3,d3
0002C2DE <AmiBlitz3.ab3@14814>    BNE doplus2__lv1
0002C2E4 <AmiBlitz3.ab3@14815>    CLR.l load_var_addr
0002C2EA <AmiBlitz3.ab3@14816>    ADD.w #$b080-$200,-4(a4)
0002C2EC <AmiBlitz3.ab3@14817> RTS
0002C2F0 <AmiBlitz3.ab3@14820>   CMP.b #2,d3
0002C2F4 <AmiBlitz3.ab3@14821>   BNE doplus2__l10
0002C2FA <AmiBlitz3.ab3@14822>   CLR.l load_var_addr
0002C300 <AmiBlitz3.ab3@14823>   ADD.w #$a040-$200,-4(a4)
0002C302 <AmiBlitz3.ab3@14824> RTS
0002C308 <AmiBlitz3.ab3@14827>   MOVE.w regnum,D3
0002C30A <AmiBlitz3.ab3@14828>   MOVE.w a1,d1
0002C30C <AmiBlitz3.ab3@14829>   OR.w D3,D1
0002C30E <AmiBlitz3.ab3@14830>   ADDQ.w #1,D1
0002C310 <AmiBlitz3.ab3@14831>   LSL.w #8,D3
0002C312 <AmiBlitz3.ab3@14832>   LSL.w #1,D3
0002C314 <AmiBlitz3.ab3@14833>   OR.w D3,D1
0002C318 <AmiBlitz3.ab3@14834> BRA.w writeword
0002C31C <AmiBlitz3.ab3@14837>    CMP.b #3,d3
0002C320 <AmiBlitz3.ab3@14838>    BCS doplus2__sub1_lq10
0002C326 <AmiBlitz3.ab3@14839>    TST.b quickadd
0002C32C <AmiBlitz3.ab3@14843>    MOVE.l destpointer,a0
0002C332 <AmiBlitz3.ab3@14844>    CLR.b quickadd
0002C338 <AmiBlitz3.ab3@14845>    CLR.l load_var_addr
0002C33E <AmiBlitz3.ab3@14846>    SUB.l imm_addr,a0
0002C342 <AmiBlitz3.ab3@14847>    CMP.w #6,a0
0002C346 <AmiBlitz3.ab3@14848>    BEQ doplus2__sub1_li10
0002C34A <AmiBlitz3.ab3@14849>    CMP.w #4,a0
0002C34E <AmiBlitz3.ab3@14850>    BNE.s doplus2__sub1_li1
0002C354 <AmiBlitz3.ab3@14851>    CLR.l imm_addr
0002C35A <AmiBlitz3.ab3@14852>    ADD.w #$6040-$200,-4(a4)
0002C35C <AmiBlitz3.ab3@14853> RTS
0002C35E <AmiBlitz3.ab3@14856>    MOVE.l a4,a0
0002C364 <AmiBlitz3.ab3@14857>     SUB.l load_var_addr,a0
0002C36A <AmiBlitz3.ab3@14858>     CMP.l #$a,a0
0002C36E <AmiBlitz3.ab3@14859>     BNE doplus2__sub1_l10e
0002C374 <AmiBlitz3.ab3@14860>    CLR.l load_var_addr
0002C378 <AmiBlitz3.ab3@14861>    MOVE.w -$8(a4),d1
0002C37E <AmiBlitz3.ab3@14862>    MOVE.l -$4(a4),-$8(a4)
0002C382 <AmiBlitz3.ab3@14863>    MOVE.w d1,-$4(a4)
0002C388 <AmiBlitz3.ab3@14864>    SUB.w #$1b80,-$a(a4)
0002C38E <AmiBlitz3.ab3@14865>    SUBQ.l #2,destpointer
0002C390 <AmiBlitz3.ab3@14866> RTS
0002C396 <AmiBlitz3.ab3@14869>   CLR.b quickadd
0002C39A <AmiBlitz3.ab3@14870> BRA doplus2__sub1_l10
0002C3A0 <AmiBlitz3.ab3@14873>    CLR.l imm_addr
0002C3A6 <AmiBlitz3.ab3@14874>    ADD.w #$7080-$200,-6(a4)
0002C3A8 <AmiBlitz3.ab3@14875> RTS
0002C3AE <AmiBlitz3.ab3@14878>    MOVE.l destpointer,a0
0002C3B4 <AmiBlitz3.ab3@14879>    SUB.l load_var_addr,a0
0002C3B8 <AmiBlitz3.ab3@14880>    CMP.w #4,a0
0002C3BC <AmiBlitz3.ab3@14881>    BNE doplus2__sub1_l10
0002C3C0 <AmiBlitz3.ab3@14882>    CMP.b #3,d3
0002C3C4 <AmiBlitz3.ab3@14883>    BNE doplus2__sub1_lv1
0002C3CA <AmiBlitz3.ab3@14884>    CLR.l load_var_addr
0002C3D0 <AmiBlitz3.ab3@14885>    ADD.w #$7080-$200,-4(a4)
0002C3D2 <AmiBlitz3.ab3@14886> RTS
0002C3D6 <AmiBlitz3.ab3@14889>    CMP.b #2,d3
0002C3DA <AmiBlitz3.ab3@14890>    BNE doplus2__sub1_l10
0002C3E0 <AmiBlitz3.ab3@14891>    CLR.l load_var_addr
0002C3E6 <AmiBlitz3.ab3@14892>    ADD.w #$6040-$200,-4(a4)
0002C3E8 <AmiBlitz3.ab3@14893> RTS
0002C3EE <AmiBlitz3.ab3@14896>   MOVE.w regnum,D3
0002C3F0 <AmiBlitz3.ab3@14897>   MOVE.w a1,d1
0002C3F2 <AmiBlitz3.ab3@14898>   OR.w D3,D1
0002C3F4 <AmiBlitz3.ab3@14899>   ADDQ.w #1,D1
0002C3F6 <AmiBlitz3.ab3@14900>   LSL.w #8,D3
0002C3F8 <AmiBlitz3.ab3@14901>   LSL.w #1,D3
0002C3FA <AmiBlitz3.ab3@14902>   OR.w D3,D1
0002C3FE <AmiBlitz3.ab3@14903> BRA.w writeword
0002C400 <AmiBlitz3.ab3@14907>   MOVEQ #0,d0
0002C406 <AmiBlitz3.ab3@14908>   MOVE.w regnum,d0
0002C408 <AmiBlitz3.ab3@14909>   ADDQ #1,d0
0002C40A <AmiBlitz3.ab3@14910>   ASL.w #8,d0
0002C40C <AmiBlitz3.ab3@14911>   ASL.w #2,d0
0002C412 <AmiBlitz3.ab3@14912>   MOVE.l #$f2000022,d1                                     ;fpu add
0002C414 <AmiBlitz3.ab3@14913>   OR.l d0,d1
0002C41A <AmiBlitz3.ab3@14914>   MOVE.w regnum,d0
0002C41C <AmiBlitz3.ab3@14915>   ASL.w #7,d0
0002C41E <AmiBlitz3.ab3@14916>   OR.l d0,d1
0002C422 <AmiBlitz3.ab3@14917> BRA.w writelong
0002C428 <AmiBlitz3.ab3@14923>   TST.b iee
0002C42C <AmiBlitz3.ab3@14924>   BNE do_plus_float__fadd1
0002C430 <AmiBlitz3.ab3@14925>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002C436 <AmiBlitz3.ab3@14928>    MOVE.w D1,libjsr+2
0002C43A <AmiBlitz3.ab3@14929>    BSR.w JL_0_AD40
0002C43C <AmiBlitz3.ab3@14930>   MOVE.l D4,D1
0002C440 <AmiBlitz3.ab3@14931>    BSR.w JL_0_AD38
0002C444 <AmiBlitz3.ab3@14932>   MOVE.w #$C900,D1
0002C448 <AmiBlitz3.ab3@14933>    BSR.w Atokejsr
0002C44C <AmiBlitz3.ab3@14934>    BSR.w JL_0_A352
0002C452 <AmiBlitz3.ab3@14935>   MOVE.l libjsr,D1
0002C456 <AmiBlitz3.ab3@14936>    BSR.w writelong
0002C45A <AmiBlitz3.ab3@14937>    BSR.w JL_0_A36E
0002C45C <AmiBlitz3.ab3@14938>   MOVE.l D5,D1
0002C460 <AmiBlitz3.ab3@14939> BRA.w JL_0_AD38
0002C466 <AmiBlitz3.ab3@14943>   MOVE.w regnum,D1
0002C468 <AmiBlitz3.ab3@14944>   LSL.w #8,D1
0002C46A <AmiBlitz3.ab3@14945>   LSL.w #1,D1
0002C46C <AmiBlitz3.ab3@14946>   MOVE.w D1,-(A7)
0002C470 <AmiBlitz3.ab3@14947>   CMP.w #3072,d1
0002C474 <AmiBlitz3.ab3@14948>   BEQ 'l1
0002C47A <AmiBlitz3.ab3@14949>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002C47E <AmiBlitz3.ab3@14950> BRA 'l2
0002C482 <AmiBlitz3.ab3@14953>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002C486 <AmiBlitz3.ab3@14956>    BSR.w writeword
0002C488 <AmiBlitz3.ab3@14957>   MOVE.w (A7)+,D1
0002C48E <AmiBlitz3.ab3@14958>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002C492 <AmiBlitz3.ab3@14959> BRA.w writeword
0002C496 <AmiBlitz3.ab3@14965>   MOVE.w #$9040,D1
0002C49A <AmiBlitz3.ab3@14966> BRA.w doplus2
0002C49E <AmiBlitz3.ab3@14970>   MOVE.w #$9040,D1
0002C4A2 <AmiBlitz3.ab3@14971> BRA.w doplus2
0002C4A6 <AmiBlitz3.ab3@14975>   MOVE.w #$9080,D1
0002C4AA <AmiBlitz3.ab3@14976> BRA.w doplus2
0002C4B0 <AmiBlitz3.ab3@14980>    TST.b iee
0002C4B4 <AmiBlitz3.ab3@14981>     BNE do_minus_float__fs1
0002C4B8 <AmiBlitz3.ab3@14982>   MOVE.w #$FFB8,D1                                         ;floatsub
0002C4BC <AmiBlitz3.ab3@14983> BRA.w doflib
0002C4BE <AmiBlitz3.ab3@14986>   MOVEQ #0,d0
0002C4C4 <AmiBlitz3.ab3@14987>   MOVE.w regnum,d0
0002C4C6 <AmiBlitz3.ab3@14988>   ADDQ #1,d0
0002C4C8 <AmiBlitz3.ab3@14989>   ASL.w #8,d0
0002C4CA <AmiBlitz3.ab3@14990>   ASL.w #2,d0
0002C4D0 <AmiBlitz3.ab3@14991>   MOVE.l #$f2000028,d1
0002C4D2 <AmiBlitz3.ab3@14992>   OR.l d0,d1
0002C4D8 <AmiBlitz3.ab3@14993>   MOVE.w regnum,d0
0002C4DA <AmiBlitz3.ab3@14994>   ASL.w #7,d0
0002C4DC <AmiBlitz3.ab3@14995>   OR.l d0,d1
0002C4E0 <AmiBlitz3.ab3@14996> BRA.w writelong
0002C4E4 <AmiBlitz3.ab3@15002>   MOVE.w #$C1C0,D1
0002C4E6 <AmiBlitz3.ab3@15003>   MOVEQ.l #$02,D2                                          ;now a word
0002C4EA <AmiBlitz3.ab3@15004> BRA.w doplus2
0002C4EE <AmiBlitz3.ab3@15008>   MOVE.w #$C1C0,D1
0002C4F0 <AmiBlitz3.ab3@15009>   MOVEQ.l #$03,D2                                          ;now a long.
0002C4F4 <AmiBlitz3.ab3@15010> BRA.w doplus2
0002C4F8 <AmiBlitz3.ab3@15014>   MOVE.w #$CA00,D1                                         ;quickmul
0002C4FC <AmiBlitz3.ab3@15015> BRA.w domylib
0002C502 <AmiBlitz3.ab3@15019>   TST.b fast
0002C506 <AmiBlitz3.ab3@15020>   BNE.s 'l10
0002C50A <AmiBlitz3.ab3@15021>   MOVE.w #$CA01,D1                                         ;writelongmul
0002C50E <AmiBlitz3.ab3@15022> BRA.w domylib
0002C514 <AmiBlitz3.ab3@15031>    MOVE.l destpointer,a0
0002C51A <AmiBlitz3.ab3@15032>    SUB.l imm_addr,a0
0002C51E <AmiBlitz3.ab3@15033>    CMP.w #6,a0
0002C522 <AmiBlitz3.ab3@15034>    BNE 'li1
0002C524 <AmiBlitz3.ab3@15035>    MOVEQ.l #2,d1
0002C526 <AmiBlitz3.ab3@15036>    MOVEQ #1,d3
0002C52A <AmiBlitz3.ab3@15039>   CMP.l -4(a4),d1
0002C52E <AmiBlitz3.ab3@15040>    BEQ 'oklsl
0002C530 <AmiBlitz3.ab3@15041>     LSL.l #1,d1
0002C536 <AmiBlitz3.ab3@15042>     ADD.l #1,d3
0002C53C <AmiBlitz3.ab3@15043>     CMP.l #9,d3
0002C540 <AmiBlitz3.ab3@15044>     BNE 'ag
0002C544 <AmiBlitz3.ab3@15045>    MOVE.w -2(a4),d1
0002C548 <AmiBlitz3.ab3@15046>    BSR writeword
0002C54E <AmiBlitz3.ab3@15047>    MOVE.w -6(a4),-4(a4)
0002C556 <AmiBlitz3.ab3@15048>    MOVE.l #$4c3c0800,-8(a4)
0002C55C <AmiBlitz3.ab3@15049>    MOVE.w regnum,D3
0002C560 <AmiBlitz3.ab3@15050>    MULS #$1000,D3
0002C564 <AmiBlitz3.ab3@15051>    OR.w D3,-6(a4)
0002C56A <AmiBlitz3.ab3@15052>    CLR.l load_var_addr
0002C570 <AmiBlitz3.ab3@15053>    CLR.l imm_addr
0002C574 <AmiBlitz3.ab3@15054> BRA 'li3
0002C578 <AmiBlitz3.ab3@15057>    CMP.w #8,d3
0002C57C <AmiBlitz3.ab3@15058>    BEQ 'ok
0002C57E <AmiBlitz3.ab3@15059>    ASL.l #1,d3
0002C580 <AmiBlitz3.ab3@15060>    ASL.l #8,d3
0002C584 <AmiBlitz3.ab3@15061>    MOVE.w #$e188,d1
0002C586 <AmiBlitz3.ab3@15062>    OR.w d3,d1
0002C58A <AmiBlitz3.ab3@15063>    MOVE.w d1,-6(a4)
0002C58E <AmiBlitz3.ab3@15064> BRA 'okls
0002C594 <AmiBlitz3.ab3@15067>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002C59A <AmiBlitz3.ab3@15070>   MOVE.w regnum,d3
0002C59E <AmiBlitz3.ab3@15071>    OR.b d3,-5(a4)
0002C5A4 <AmiBlitz3.ab3@15072>    SUBQ.l #4,destpointer
0002C5AA <AmiBlitz3.ab3@15073>    CLR.l load_var_addr
0002C5B0 <AmiBlitz3.ab3@15074>    CLR.l imm_addr
0002C5B4 <AmiBlitz3.ab3@15075> BRA 'li3
0002C5BA <AmiBlitz3.ab3@15078>    MOVE.l destpointer,a0
0002C5C0 <AmiBlitz3.ab3@15079>    SUB.l load_var_addr,a0
0002C5C4 <AmiBlitz3.ab3@15080>    CMP.w #4,a0
0002C5C8 <AmiBlitz3.ab3@15081>    BNE 'li2
0002C5CC <AmiBlitz3.ab3@15082>    MOVE.w -2(a4),d1
0002C5D0 <AmiBlitz3.ab3@15083>    BSR writeword
0002C5D6 <AmiBlitz3.ab3@15084>    MOVE.b #$4c,-6(a4)
0002C5DC <AmiBlitz3.ab3@15085>    MOVE.w #$0800,-4(a4)
0002C5E2 <AmiBlitz3.ab3@15086>    MOVE.w regnum,D3
0002C5E6 <AmiBlitz3.ab3@15087>    MULS #$1000,d3
0002C5EA <AmiBlitz3.ab3@15088>    OR.w D3,-4(a4)
0002C5EE <AmiBlitz3.ab3@15089> BRA 'li3
0002C5F4 <AmiBlitz3.ab3@15092>    MOVE.l #$4c010800,d1
0002C5FA <AmiBlitz3.ab3@15093>    MOVE.w regnum,D3
0002C5FC <AmiBlitz3.ab3@15094>    EXT.l d3
0002C600 <AmiBlitz3.ab3@15095>    MULS #$1000,d3
0002C602 <AmiBlitz3.ab3@15096>    OR.w D3,d1
0002C606 <AmiBlitz3.ab3@15097>    MULS #$10,d3
0002C608 <AmiBlitz3.ab3@15098>    ADD.l d3,d1
0002C60C <AmiBlitz3.ab3@15099>    BSR writelong
0002C60E <AmiBlitz3.ab3@15104> RTS
0002C610 <AmiBlitz3.ab3@15108>   MOVE.w D1,-(A7)
0002C614 <AmiBlitz3.ab3@15109>    BSR.w JL_0_AD40
0002C616 <AmiBlitz3.ab3@15110>   MOVE.l D4,D1
0002C61A <AmiBlitz3.ab3@15111>    BSR.w JL_0_AD38
0002C61E <AmiBlitz3.ab3@15112>    BSR.w JL_0_A352
0002C620 <AmiBlitz3.ab3@15113>   MOVEQ #0,d1
0002C622 <AmiBlitz3.ab3@15114>   MOVE.w (A7)+,D1
0002C628 <AmiBlitz3.ab3@15115>   MOVE.l d1,lastinstruction
0002C62C <AmiBlitz3.ab3@15116>    BSR.w Atokejsr
0002C630 <AmiBlitz3.ab3@15117>    BSR.w JL_0_A36E
0002C632 <AmiBlitz3.ab3@15118>   MOVE.l D5,D1
0002C636 <AmiBlitz3.ab3@15119> BRA.w JL_0_AD38
0002C63C <AmiBlitz3.ab3@15123>    TST.b iee
0002C640 <AmiBlitz3.ab3@15124>     BNE fm1
0002C644 <AmiBlitz3.ab3@15125>  MOVE.w #$FFB2,D1                                          ;floatmul
0002C648 <AmiBlitz3.ab3@15126> BRA.w doflib
0002C64A <AmiBlitz3.ab3@15129>   MOVEQ #0,d0
0002C650 <AmiBlitz3.ab3@15130>  MOVE.w regnum,d0
0002C652 <AmiBlitz3.ab3@15131>  ADDQ #1,d0
0002C654 <AmiBlitz3.ab3@15132>  ASL.w #8,d0
0002C656 <AmiBlitz3.ab3@15133>  ASL.w #2,d0
0002C65C <AmiBlitz3.ab3@15134>  MOVE.l #$f2000023,d1
0002C65E <AmiBlitz3.ab3@15135>  OR.l d0,d1
0002C664 <AmiBlitz3.ab3@15136>  MOVE.w regnum,d0
0002C666 <AmiBlitz3.ab3@15137>  ASL.w #7,d0
0002C668 <AmiBlitz3.ab3@15138>  OR.l d0,d1
0002C66C <AmiBlitz3.ab3@15139> BRA.w writelong
0002C66E <AmiBlitz3.ab3@15143>   MOVE.w D2,-(A7)                                          ;dopow
0002C670 <AmiBlitz3.ab3@15144>   MOVE.w D2,D3
0002C672 <AmiBlitz3.ab3@15145>   MOVEQ.l #$05,D2
0002C676 <AmiBlitz3.ab3@15146>    BSR.w JL_0_9770
0002C67C <AmiBlitz3.ab3@15147>   ADDQ.w #1,regnum
0002C67E <AmiBlitz3.ab3@15148>   MOVE.w (A7)+,D3
0002C680 <AmiBlitz3.ab3@15149>   MOVEQ.l #$05,D2
0002C684 <AmiBlitz3.ab3@15150>    BSR.w writeconvertcode
0002C68A <AmiBlitz3.ab3@15151>   SUBQ.w #1,regnum
0002C68E <AmiBlitz3.ab3@15152>    BSR.w nocando
0002C694 <AmiBlitz3.ab3@15153>    TST.b fpu
0002C698 <AmiBlitz3.ab3@15154>    BEQ 'old
0002C69A <AmiBlitz3.ab3@15155>    MOVEQ #0,d1
0002C6A0 <AmiBlitz3.ab3@15156>    MOVE.w regnum,d1
0002C6A2 <AmiBlitz3.ab3@15157>   MOVE.l d1,d0
0002C6A4 <AmiBlitz3.ab3@15158>   ASL.w #7,d1
0002C6A6 <AmiBlitz3.ab3@15159>   ASL.w #8,d0
0002C6A8 <AmiBlitz3.ab3@15160>   ASL.w #2,d0
0002C6AA <AmiBlitz3.ab3@15161>   OR.w d0,d1
0002C6AC <AmiBlitz3.ab3@15162>   MOVE.l d1,-(a7)
0002C6B2 <AmiBlitz3.ab3@15164>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002C6B6 <AmiBlitz3.ab3@15165>    BSR writelong
0002C6BC <AmiBlitz3.ab3@15166>    MOVE.w regnum,d0
0002C6BE <AmiBlitz3.ab3@15167>  ADDQ #1,d0
0002C6C0 <AmiBlitz3.ab3@15168>  ASL.w #8,d0
0002C6C2 <AmiBlitz3.ab3@15169>  ASL.w #2,d0
0002C6C8 <AmiBlitz3.ab3@15170>  MOVE.l #$f2000023,d1
0002C6CA <AmiBlitz3.ab3@15171>  OR.l d0,d1
0002C6D0 <AmiBlitz3.ab3@15172>  MOVE.w regnum,d0
0002C6D2 <AmiBlitz3.ab3@15173>  ASL.w #7,d0
0002C6D4 <AmiBlitz3.ab3@15174>  OR.l d0,d1
0002C6DA <AmiBlitz3.ab3@15175>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002C6DE <AmiBlitz3.ab3@15176>    BSR writelong
0002C6E0 <AmiBlitz3.ab3@15177>    MOVE.l (a7)+,d1
0002C6E6 <AmiBlitz3.ab3@15179>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002C6EA <AmiBlitz3.ab3@15180>    BSR writelong
0002C6EC <AmiBlitz3.ab3@15181> RTS
0002C6F0 <AmiBlitz3.ab3@15184>   MOVE.w #$6001,D1
0002C6F4 <AmiBlitz3.ab3@15185> BRA.w domylib
0002C6F8 <AmiBlitz3.ab3@15191>   MOVEA.l forthsp(PC),A0
0002C6FC <AmiBlitz3.ab3@15192>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002C6FE <AmiBlitz3.ab3@15193> RTS
0002C702 <AmiBlitz3.ab3@15199>   MOVE.w #$D400,D1
0002C706 <AmiBlitz3.ab3@15200> BRA.w domylib
0002C70A <AmiBlitz3.ab3@15204>   MOVE.w #$D401,D1
0002C70E <AmiBlitz3.ab3@15205> BRA.w domylib
0002C712 <AmiBlitz3.ab3@15209>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002C716 <AmiBlitz3.ab3@15210>   MOVE.w #$D402,D1
0002C71A <AmiBlitz3.ab3@15211> BRA.w domylib
0002C71E <AmiBlitz3.ab3@15215>   MOVE.w #$D403,D1
0002C720 <AmiBlitz3.ab3@15216>   MOVEQ.l #$02,D2                                          ;now a word.
0002C724 <AmiBlitz3.ab3@15217> BRA.w domylib
0002C728 <AmiBlitz3.ab3@15221>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002C72E <AmiBlitz3.ab3@15222>   TST.b fpu
0002C732 <AmiBlitz3.ab3@15223>   BEQ 'old
0002C734 <AmiBlitz3.ab3@15224>   MOVEQ #0,d1
0002C73A <AmiBlitz3.ab3@15225>   MOVE.w regnum,d1                                         ;fpu mod
0002C73C <AmiBlitz3.ab3@15226>   MOVE.l d1,d0
0002C73E <AmiBlitz3.ab3@15227>   ADDQ.l #1,d1
0002C740 <AmiBlitz3.ab3@15228>   ASL.l #7,d0
0002C742 <AmiBlitz3.ab3@15229>   ASL.l #8,d1
0002C744 <AmiBlitz3.ab3@15230>   ASL.l #2,d1
0002C746 <AmiBlitz3.ab3@15231>   OR.l d0,d1
0002C748 <AmiBlitz3.ab3@15232>   MOVE.l d0,-(a7)
0002C74E <AmiBlitz3.ab3@15233>   OR.l #$f2000021,d1
0002C752 <AmiBlitz3.ab3@15234>   BSR writelong
0002C754 <AmiBlitz3.ab3@15235>   MOVE.l (a7)+,d0
0002C756 <AmiBlitz3.ab3@15236>  RTS
0002C75A <AmiBlitz3.ab3@15239>   MOVE.w #$D404,D1
0002C75C <AmiBlitz3.ab3@15240>   MOVEQ.l #$03,D2                                          ;now a long
0002C760 <AmiBlitz3.ab3@15241> BRA.w domylib
0002C764 <AmiBlitz3.ab3@15249>   MOVE.w #$48C0,D1
0002C76A <AmiBlitz3.ab3@15250>   OR.w regnum,D1
0002C76E <AmiBlitz3.ab3@15251>    BSR.w writeword
0002C770 <AmiBlitz3.ab3@15252>   ADDQ.w #1,D1
0002C774 <AmiBlitz3.ab3@15253>    BSR.w writeword
0002C778 <AmiBlitz3.ab3@15256>    MOVE.w #$48C0,D1
0002C77E <AmiBlitz3.ab3@15257>   OR.w regnum,D1
0002C782 <AmiBlitz3.ab3@15258>    BSR.w writeword
0002C786 <AmiBlitz3.ab3@15259>   MOVE.w #$81C0,D1
0002C78A <AmiBlitz3.ab3@15260> BRA.w doplus2
0002C790 <AmiBlitz3.ab3@15264>   TST.b fast
0002C794 <AmiBlitz3.ab3@15265>   BNE.s 'l10
0002C798 <AmiBlitz3.ab3@15266>   MOVE.w #$CB01,D1
0002C79C <AmiBlitz3.ab3@15267> BRA.w domylib
0002C7A0 <AmiBlitz3.ab3@15273>   BSR.w JL_0_AD40
0002C7A2 <AmiBlitz3.ab3@15274>   MOVE.l D4,D1
0002C7A6 <AmiBlitz3.ab3@15275>    BSR.w JL_0_AD38
0002C7AA <AmiBlitz3.ab3@15276>    BSR.w JL_0_A352
0002C7B0 <AmiBlitz3.ab3@15290>    MOVE.l #$4c410800,d1
0002C7B4 <AmiBlitz3.ab3@15291>    BSR writelong
0002C7B8 <AmiBlitz3.ab3@15294>   MOVE.w #$4e71,d1
0002C7BC <AmiBlitz3.ab3@15296>    BSR.w JL_0_A36E
0002C7BE <AmiBlitz3.ab3@15297>   MOVE.l D5,D1
0002C7C2 <AmiBlitz3.ab3@15298> BRA.w JL_0_AD38
0002C7C6 <AmiBlitz3.ab3@15301>     CMP.w #8,d3
0002C7CA <AmiBlitz3.ab3@15302>     BEQ 'ok
0002C7CC <AmiBlitz3.ab3@15303>     ASL.l #1,d3
0002C7CE <AmiBlitz3.ab3@15304>     ASL.l #8,d3
0002C7D2 <AmiBlitz3.ab3@15305>     MOVE.w #$e080,d1
0002C7D4 <AmiBlitz3.ab3@15306>     OR.w d3,d1
0002C7D8 <AmiBlitz3.ab3@15307> BRA 'oklsr2
0002C7DC <AmiBlitz3.ab3@15310>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002C7E2 <AmiBlitz3.ab3@15313>      SUBQ.l #6,destpointer
0002C7E6 <AmiBlitz3.ab3@15314>      BSR writeword
0002C7E8 <AmiBlitz3.ab3@15315>      MOVE.l (a7)+,d3
0002C7EA <AmiBlitz3.ab3@15316>      MOVEQ #0,d1
0002C7F0 <AmiBlitz3.ab3@15317>      CLR.l load_var_addr
0002C7F6 <AmiBlitz3.ab3@15318>      CLR.l imm_addr
0002C7FA <AmiBlitz3.ab3@15319> BRA JL_0_AD38
0002C7FE <AmiBlitz3.ab3@15323>   MOVE.w #$CB00,D1                                         ;quickdiv
0002C802 <AmiBlitz3.ab3@15324> BRA.w domylib
0002C808 <AmiBlitz3.ab3@15328>    TST.b iee
0002C80C <AmiBlitz3.ab3@15329>    BNE fdiv1
0002C810 <AmiBlitz3.ab3@15330>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002C814 <AmiBlitz3.ab3@15331> BRA.w doflib
0002C816 <AmiBlitz3.ab3@15335>   MOVEQ #0,d0
0002C81C <AmiBlitz3.ab3@15336>   MOVE.w regnum,d0
0002C81E <AmiBlitz3.ab3@15337>   ADDQ #1,d0
0002C820 <AmiBlitz3.ab3@15338>   ASL.w #8,d0
0002C822 <AmiBlitz3.ab3@15339>   ASL.w #2,d0
0002C828 <AmiBlitz3.ab3@15340>   MOVE.l #$f2000020,d1                                     ;fpu div
0002C82A <AmiBlitz3.ab3@15341>   OR.l d0,d1
0002C830 <AmiBlitz3.ab3@15342>   MOVE.w regnum,d0
0002C832 <AmiBlitz3.ab3@15343>   ASL.w #7,d0
0002C834 <AmiBlitz3.ab3@15344>   OR.l d0,d1
0002C838 <AmiBlitz3.ab3@15345> BRA.w writelong
0002C83C <AmiBlitz3.ab3@15349>   MOVE.w #$C000,D1
0002C840 <AmiBlitz3.ab3@15350> BRA.w doplus2
0002C844 <AmiBlitz3.ab3@15354>   MOVE.w #$C040,D1
0002C848 <AmiBlitz3.ab3@15355> BRA.w doplus2
0002C84C <AmiBlitz3.ab3@15359>   MOVE.w #$C080,D1
0002C850 <AmiBlitz3.ab3@15360> BRA.w doplus2
0002C854 <AmiBlitz3.ab3@15364>   MOVE.w #$8000,D1
0002C858 <AmiBlitz3.ab3@15365> BRA.w doplus2
0002C85C <AmiBlitz3.ab3@15369>   MOVE.w #$8040,D1
0002C860 <AmiBlitz3.ab3@15370> BRA.w doplus2
0002C864 <AmiBlitz3.ab3@15374>   MOVE.w #$8080,D1
0002C868 <AmiBlitz3.ab3@15375> BRA.w doplus2
0002C86C <AmiBlitz3.ab3@15379>   MOVE.w #$B100,D1
0002C872 <AmiBlitz3.ab3@15382>    MOVE.w regnum,D3
0002C874 <AmiBlitz3.ab3@15383>   OR.w D3,D1
0002C876 <AmiBlitz3.ab3@15384>   ADDQ.w #1,D3
0002C878 <AmiBlitz3.ab3@15385>   LSL.w #8,D3
0002C87A <AmiBlitz3.ab3@15386>   LSL.w #1,D3
0002C87C <AmiBlitz3.ab3@15387>   OR.w D3,D1
0002C880 <AmiBlitz3.ab3@15388> BRA.w writeword
0002C884 <AmiBlitz3.ab3@15392>   MOVE.w #$B140,D1
0002C888 <AmiBlitz3.ab3@15393> BRA.w JL_0_A25C
0002C88C <AmiBlitz3.ab3@15397>   MOVE.w #$B180,D1
0002C890 <AmiBlitz3.ab3@15398> BRA.w JL_0_A25C
0002C894 <AmiBlitz3.ab3@15402>   MOVE.w #$E1A8,D1
0002C898 <AmiBlitz3.ab3@15403> BRA.w JL_0_A298
0002C89C <AmiBlitz3.ab3@15407>   MOVE.w #$E0A8,D1
0002C8A0 <AmiBlitz3.ab3@15408> BRA.w JL_0_A298
0002C8A4 <AmiBlitz3.ab3@15412>   MOVE.w #$E0A0,D1
0002C8A8 <AmiBlitz3.ab3@15413> BRA.w JL_0_A298
0002C8AA <AmiBlitz3.ab3@15417>   MOVE.w D1,-(A7)
0002C8B0 <AmiBlitz3.ab3@15418>   ADDQ.w #1,regnum
0002C8B2 <AmiBlitz3.ab3@15419>   MOVE.w D2,-(A7)
0002C8B4 <AmiBlitz3.ab3@15420>   MOVE.w D2,D3
0002C8B6 <AmiBlitz3.ab3@15421>   MOVEQ.l #$02,D2
0002C8BA <AmiBlitz3.ab3@15426>    BSR.w writeconvertcode
0002C8BC <AmiBlitz3.ab3@15428>   MOVE.w (A7)+,D2
0002C8C2 <AmiBlitz3.ab3@15429>   SUBQ.w #1,regnum
0002C8C6 <AmiBlitz3.ab3@15430>   CMP.w #$4,D2
0002C8CA <AmiBlitz3.ab3@15431>    BEQ.w JL_0_A2C2
0002C8CC <AmiBlitz3.ab3@15432>   MOVE.w D2,D3
0002C8CE <AmiBlitz3.ab3@15433>   MOVEQ.l #$03,D2
0002C8D2 <AmiBlitz3.ab3@15434>    BSR.w JL_0_9770
0002C8D4 <AmiBlitz3.ab3@15437>    MOVE.w (A7)+,D1
0002C8DA <AmiBlitz3.ab3@15438>   MOVE.w regnum,D3
0002C8DC <AmiBlitz3.ab3@15439>   OR.w D3,D1
0002C8DE <AmiBlitz3.ab3@15440>   ADDQ.w #1,D3
0002C8E0 <AmiBlitz3.ab3@15441>   LSL.w #8,D3
0002C8E2 <AmiBlitz3.ab3@15442>   LSL.w #1,D3
0002C8E4 <AmiBlitz3.ab3@15443>   OR.w D3,D1
0002C8E8 <AmiBlitz3.ab3@15444> BRA.w writeword
0002C8EC <AmiBlitz3.ab3@15448>   MOVE.w #$0100,D1
0002C8F0 <AmiBlitz3.ab3@15449>    BSR.w JL_0_A31C
0002C8F6 <AmiBlitz3.ab3@15450>   MOVE.w regnum,D1
0002C8FA <AmiBlitz3.ab3@15451>   ORI.w #$56C0,D1
0002C8FE <AmiBlitz3.ab3@15452>    BSR.w writeword
0002C904 <AmiBlitz3.ab3@15453>   MOVE.w regnum,D1
0002C908 <AmiBlitz3.ab3@15454>   ORI.w #$4880,D1
0002C90C <AmiBlitz3.ab3@15455>    BSR.w writeword
0002C90E <AmiBlitz3.ab3@15456>   MOVEQ.l #$02,D2
0002C910 <AmiBlitz3.ab3@15457> RTS
0002C914 <AmiBlitz3.ab3@15461>   MOVE.w #$01C0,D1
0002C918 <AmiBlitz3.ab3@15464>    BSR.w JL_0_A31C
0002C91A <AmiBlitz3.ab3@15465>   MOVEQ.l #$03,D2
0002C91C <AmiBlitz3.ab3@15466> RTS
0002C920 <AmiBlitz3.ab3@15470>   MOVE.w #$0180,D1
0002C924 <AmiBlitz3.ab3@15471> BRA.w JL_0_A304
0002C928 <AmiBlitz3.ab3@15475>   MOVE.w #$0140,D1
0002C92C <AmiBlitz3.ab3@15476> BRA.w JL_0_A304
0002C92E <AmiBlitz3.ab3@15480>   MOVE.w D1,-(A7)
0002C930 <AmiBlitz3.ab3@15481>   MOVE.w D2,-(A7)
0002C932 <AmiBlitz3.ab3@15482>   MOVE.w D2,D3
0002C934 <AmiBlitz3.ab3@15483>   MOVEQ.l #$03,D2
0002C938 <AmiBlitz3.ab3@15484>    BSR.w JL_0_9770
0002C93A <AmiBlitz3.ab3@15485>   MOVE.w (A7)+,D3
0002C93C <AmiBlitz3.ab3@15486>   MOVEQ.l #$01,D2
0002C942 <AmiBlitz3.ab3@15487>   ADDQ.w #1,regnum
0002C946 <AmiBlitz3.ab3@15488>    BSR.w writeconvertcode
0002C94C <AmiBlitz3.ab3@15489>   SUBQ.w #1,regnum
0002C952 <AmiBlitz3.ab3@15490>   MOVE.w regnum,D1
0002C954 <AmiBlitz3.ab3@15491>   MOVE.w D1,D2
0002C956 <AmiBlitz3.ab3@15492>   ADDQ.w #1,D2
0002C958 <AmiBlitz3.ab3@15493>   LSL.w #8,D2
0002C95A <AmiBlitz3.ab3@15494>   LSL.w #1,D2
0002C95C <AmiBlitz3.ab3@15495>   OR.w (A7)+,D1
0002C95E <AmiBlitz3.ab3@15496>   OR.w D2,D1
0002C962 <AmiBlitz3.ab3@15497> BRA.w writeword
0002C968 <AmiBlitz3.ab3@15501>   MOVE.w regnum,D1
0002C96C <AmiBlitz3.ab3@15502>    BEQ.w JL_0_A36C
0002C970 <AmiBlitz3.ab3@15503>   ORI.w #$2000,D1
0002C974 <AmiBlitz3.ab3@15504>    BSR.w writeword
0002C978 <AmiBlitz3.ab3@15505>   ADDI.w #$201,D1
0002C97C <AmiBlitz3.ab3@15506>    BSR.w writeword
0002C97E <AmiBlitz3.ab3@15509> RTS
0002C984 <AmiBlitz3.ab3@15513>   MOVE.w regnum,D1
0002C988 <AmiBlitz3.ab3@15514>    BEQ.w JL_0_A384
0002C98A <AmiBlitz3.ab3@15515>   LSL.w #8,D1
0002C98C <AmiBlitz3.ab3@15516>   LSL.w #1,D1
0002C990 <AmiBlitz3.ab3@15517>   ORI.w #$2000,D1
0002C994 <AmiBlitz3.ab3@15518>    BSR.w writeword
0002C996 <AmiBlitz3.ab3@15521> RTS
0002C99C <AmiBlitz3.ab3@15525>    CLR.b isconstantvalue
0002C9A2 <AmiBlitz3.ab3@15526>    CLR.l lastconstantvalue
0002C9AA <AmiBlitz3.ab3@15527>    CMPI.w #$7,regnum
0002C9AE <AmiBlitz3.ab3@15528>    BCS.w JL_0_A6B4
0002C9B4 <AmiBlitz3.ab3@15529>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002C9B8 <AmiBlitz3.ab3@15530>   BSR writelong
0002C9BC <AmiBlitz3.ab3@15531>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002C9C0 <AmiBlitz3.ab3@15533>   CMP.w #$3,D2
0002C9C4 <AmiBlitz3.ab3@15534>    BCS.w JL_0_A3A2
0002C9C8 <AmiBlitz3.ab3@15535>   MOVE.w #$2F06,D1
0002C9CC <AmiBlitz3.ab3@15538>   BSR.w writeword
0002C9CE <AmiBlitz3.ab3@15539>   MOVE.w D1,-(A7)
0002C9D4 <AmiBlitz3.ab3@15540>   SUBQ.w #1,regnum
0002C9D8 <AmiBlitz3.ab3@15541>    BSR.w JL_0_A6B4
0002C9DE <AmiBlitz3.ab3@15542>   ADDQ.w #1,regnum
0002C9E4 <AmiBlitz3.ab3@15543>   MOVE.l #$f2001b80,d1
0002C9E8 <AmiBlitz3.ab3@15544>   BSR writelong
0002C9EC <AmiBlitz3.ab3@15545>   MOVE.w #$3E06,D1
0002C9F0 <AmiBlitz3.ab3@15546>   CMP.w #$3,D2
0002C9F4 <AmiBlitz3.ab3@15547>    BCS.w JL_0_A3C8
0002C9F8 <AmiBlitz3.ab3@15548>   MOVE.w #$2E06,D1
0002C9FC <AmiBlitz3.ab3@15551>   BSR.w writeword
0002C9FE <AmiBlitz3.ab3@15552>   MOVE.w (A7)+,D1
0002CA02 <AmiBlitz3.ab3@15553>   ANDI.w #$F000,D1
0002CA06 <AmiBlitz3.ab3@15554>   ORI.w #$C1F,D1
0002CA0C <AmiBlitz3.ab3@15555>   JSR writeword
0002CA12 <AmiBlitz3.ab3@15556>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002CA16 <AmiBlitz3.ab3@15557> BRA writelong
0002CA1A <AmiBlitz3.ab3@15561>   BSR.w JL_0_A6B4
0002CA1E <AmiBlitz3.ab3@15562>   MOVE.w #$4440,D1
0002CA22 <AmiBlitz3.ab3@15563>   CMP.w #$3,D2
0002CA26 <AmiBlitz3.ab3@15564>    BCS.w JL_0_A406
0002CA2A <AmiBlitz3.ab3@15565>   MOVE.w #$4480,D1
0002CA2E <AmiBlitz3.ab3@15566>   CMP.w #$5,D2
0002CA32 <AmiBlitz3.ab3@15567>    BCS.w JL_0_A406
0002CA36 <AmiBlitz3.ab3@15568>   CMP.w #$6,D2
0002CA3A <AmiBlitz3.ab3@15569>    BCC.w illoperr
0002CA3E <AmiBlitz3.ab3@15570>   MOVE.w #$FFC4,D1
0002CA42 <AmiBlitz3.ab3@15571> BRA.w JL_0_9604
0002CA48 <AmiBlitz3.ab3@15574>   OR.w regnum,D1                                           ;negate
0002CA4E <AmiBlitz3.ab3@15575>   CLR.l imm_addr
0002CA52 <AmiBlitz3.ab3@15576> BRA.w writeword
0002CA56 <AmiBlitz3.ab3@15580>    BSR.w eval4
0002CA5A <AmiBlitz3.ab3@15581>   CMP.w #")",D0
0002CA5E <AmiBlitz3.ab3@15582>    BEQ.w JL_0_A424
0002CA62 <AmiBlitz3.ab3@15583>   CMP.w #"}",D0
0002CA66 <AmiBlitz3.ab3@15584>    BNE.w brackets_                                         ;syntax error brackets
0002CA6A <AmiBlitz3.ab3@15587> BRA.w get1bytemain
0002CA6E <AmiBlitz3.ab3@15591>    BSR.w eval4
0002CA72 <AmiBlitz3.ab3@15592>   CMP.w #$5,D2
0002CA76 <AmiBlitz3.ab3@15593>    BCC.w illoperr
0002CA7C <AmiBlitz3.ab3@15594>   MOVE.w regnum,D1
0002CA80 <AmiBlitz3.ab3@15595>   ORI.w #$4640,D1
0002CA84 <AmiBlitz3.ab3@15596>   CMP.w #$3,D2
0002CA88 <AmiBlitz3.ab3@15597>    BCS.w writeword
0002CA8C <AmiBlitz3.ab3@15598>   EORI.w #$C0,D1
0002CA90 <AmiBlitz3.ab3@15599> BRA.w writeword
0002CA92 <AmiBlitz3.ab3@15603>   MOVEQ.l #$05,D2                                          ;fpu pi
0002CA98 <AmiBlitz3.ab3@15604>    TST.b fpu
0002CA9C <AmiBlitz3.ab3@15605>   BEQ 'old
0002CAA2 <AmiBlitz3.ab3@15606> JMP fpupi
0002CAA8 <AmiBlitz3.ab3@15609>   MOVE.w regnum,D1
0002CAAA <AmiBlitz3.ab3@15610>   LSL.w #8,D1
0002CAAC <AmiBlitz3.ab3@15611>   LSL.w #1,D1
0002CAB0 <AmiBlitz3.ab3@15612>   ORI.w #$203C,D1
0002CAB4 <AmiBlitz3.ab3@15613>    BSR.w writeword
0002CABA <AmiBlitz3.ab3@15614>   MOVE.l #$C90FDA42,D1
0002CABE <AmiBlitz3.ab3@15615>    BSR.w writelong
0002CAC2 <AmiBlitz3.ab3@15616> BRA.w get1bytemain
0002CBBE <AmiBlitz3.ab3@15624> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002CCBA <AmiBlitz3.ab3@15625>              Ds.l 63
0002CD02 <AmiBlitz3.ab3@15626>              Ds.l 18
0002CD06 <AmiBlitz3.ab3@15627> forthsp:     Dc.l forthstack
0002CD32 <AmiBlitz3.ab3@15632>    !fget
0002CD36 <AmiBlitz3.ab3@15633>    CMP.b #$7e,d0
0002CD3A <AmiBlitz3.ab3@15634>    BNE 'noc
0002CD3C <AmiBlitz3.ab3@15635>    SUBQ.l #1,a5
0002CD40 <AmiBlitz3.ab3@15636>    BSR get1bytemain
0002CD44 <AmiBlitz3.ab3@15639>    CMP.b #"#",d0
0002CD48 <AmiBlitz3.ab3@15640>    BNE 'ld1
0002CD4C <AmiBlitz3.ab3@15641>    CMP.b #$22,(a5)
0002CD50 <AmiBlitz3.ab3@15642>    BNE 'ld1
0002CD56 <AmiBlitz3.ab3@15643>    JSR addimmi
0002CD5A <AmiBlitz3.ab3@15646>    CMP.b #$22,d0
0002CD5E <AmiBlitz3.ab3@15647>    BNE 'l11
0002CD64 <AmiBlitz3.ab3@15657>    NOT.w instringon
0002CD66 <AmiBlitz3.ab3@15660>    TST.b d0
0002CD6A <AmiBlitz3.ab3@15661>    BPL 'l10
0002CD6C <AmiBlitz3.ab3@15662>    LSL.w #8,d0
0002CD6E <AmiBlitz3.ab3@15663>    MOVE.b (a5)+,d0                      ; get blitz instruction with returnvalue
0002CD74 <AmiBlitz3.ab3@15664>    MOVE.l d0,lasttoken
0002CD7A <AmiBlitz3.ab3@15665>    MOVE.w d0,lastchar
0002CD80 <AmiBlitz3.ab3@15666>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002CD84 <AmiBlitz3.ab3@15668>   CMP.w #"(",D0
0002CD88 <AmiBlitz3.ab3@15669>    BEQ.w checkcast2
0002CD8C <AmiBlitz3.ab3@15670> nocast CMP.w #"{",D0
0002CD90 <AmiBlitz3.ab3@15671>    BEQ.w JL_0_A410
0002CD94 <AmiBlitz3.ab3@15672>   CMP.w #$2D,D0
0002CD98 <AmiBlitz3.ab3@15673>    BEQ.w JL_0_A3DA
0002CD9C <AmiBlitz3.ab3@15674>   CMP.w #-$7F77,D0
0002CDA0 <AmiBlitz3.ab3@15675>    BEQ.w JL_0_A428
0002CDA4 <AmiBlitz3.ab3@15676>   MOVEA.l forthsp(PC),A1
0002CDAA <AmiBlitz3.ab3@15677>   CMPA.l #forthsp,A1
0002CDAE <AmiBlitz3.ab3@15678>    BCC.w conmemerr
0002CDB4 <AmiBlitz3.ab3@15679>   MOVE.l destpointer,(A1)+
0002CDBA <AmiBlitz3.ab3@15680>   MOVE.l hunkoffsetbase,(A1)+
0002CDC0 <AmiBlitz3.ab3@15681>   MOVE.l lasta6,(A1)+
0002CDC6 <AmiBlitz3.ab3@15682>   MOVE.w lasta6,(A1)+
0002CDC8 <AmiBlitz3.ab3@15683>   CLR.w (A1)+
0002CDCA <AmiBlitz3.ab3@15684>   CLR.w (A1)+
0002CDD0 <AmiBlitz3.ab3@15685>   MOVE.l A1,forthsp
0002CDE2 <AmiBlitz3.ab3@15687>    !compare2
0002CDE6 <AmiBlitz3.ab3@15688>    BEQ.w JL_0_B224
0002CDEA <AmiBlitz3.ab3@15689>   CMP.w #".",D0
0002CDEE <AmiBlitz3.ab3@15690>    BEQ.w JL_0_B21E
0002CDF2 <AmiBlitz3.ab3@15691>   CMP.w #"#",D0
0002CDF6 <AmiBlitz3.ab3@15692>    BEQ.w get_constant
0002CDFA <AmiBlitz3.ab3@15693>   CMP.w #"$",D0
0002CDFE <AmiBlitz3.ab3@15694>    BEQ.w get_hexconstant
0002CE02 <AmiBlitz3.ab3@15695>   CMP.w #"%",D0
0002CE06 <AmiBlitz3.ab3@15696>    BEQ.w JL_0_A8C0
0002CE0A <AmiBlitz3.ab3@15697>   CMP.w #-$7FD1,D0
0002CE0E <AmiBlitz3.ab3@15698>    BEQ.w _SizeOf
0002CE12 <AmiBlitz3.ab3@15699>   CMP.w #-$7F46,D0
0002CE16 <AmiBlitz3.ab3@15700>    BEQ.w JL_0_A44E
0002CE1A <AmiBlitz3.ab3@15701>   CMP.w #-$7F3B,D0
0002CE1E <AmiBlitz3.ab3@15702>    BEQ.w JL_0_A83C
0002CE22 <AmiBlitz3.ab3@15703>   CMP.w #-$7F3A,D0
0002CE26 <AmiBlitz3.ab3@15704>    BEQ.w JL_0_A846
0002CE2C <AmiBlitz3.ab3@15705>   MOVE.w constmode,D1
0002CE30 <AmiBlitz3.ab3@15706>    BEQ.w JL_0_A776
0002CE52 <AmiBlitz3.ab3@15707>    !compare1                                               ;bsr.w tstalpha
0002CE56 <AmiBlitz3.ab3@15708>    BEQ.w JL_0_AF22
0002CE5A <AmiBlitz3.ab3@15709>   CMP.w #$5F,D0
0002CE5E <AmiBlitz3.ab3@15710>    BEQ.w JL_0_AF22
0002CE62 <AmiBlitz3.ab3@15711>   CMP.w #$22,D0
0002CE66 <AmiBlitz3.ab3@15712>    BEQ.w JL_0_AF00
0002CE6A <AmiBlitz3.ab3@15713> BRA.w syntaxerr
0002CE70 <AmiBlitz3.ab3@15715> checkcast2 JMP checkcast
0002CE76 <AmiBlitz3.ab3@15718>   MOVE.w cfetchmode,D1
0002CE7A <AmiBlitz3.ab3@15719>   BEQ.w JL_0_A784
0002CE7E <AmiBlitz3.ab3@15720> BRA.w badconerr
0002CE84 <AmiBlitz3.ab3@15723> JMP syntaxerropt4
0002CE86 <AmiBlitz3.ab3@15727>   NOT.w -(A1)
0002CEA8 <AmiBlitz3.ab3@15728>   !compare1                                                ;bsr.w tstalpha
0002CEAC <AmiBlitz3.ab3@15729>    BEQ.w JL_0_AF4C
0002CEB0 <AmiBlitz3.ab3@15730>   CMP.w #$2A,D0
0002CEB4 <AmiBlitz3.ab3@15731>    BEQ.w JL_0_AF4C
0002CEB8 <AmiBlitz3.ab3@15732>   CMP.w #$5C,D0
0002CEBC <AmiBlitz3.ab3@15733>    BEQ.w JL_0_AF4C
0002CEC0 <AmiBlitz3.ab3@15734>   CMP.w #$22,D0
0002CEC4 <AmiBlitz3.ab3@15735>    BEQ.w JL_0_ADC0
0002CEC8 <AmiBlitz3.ab3@15736>   BTST #$F,D0
0002CECC <AmiBlitz3.ab3@15737>    BNE.w JL_0_AAF2
0002CED0 <AmiBlitz3.ab3@15738>   CMP.w #"&",D0
0002CED4 <AmiBlitz3.ab3@15739>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002CED8 <AmiBlitz3.ab3@15740>   CMP.w #"?",D0
0002CEDC <AmiBlitz3.ab3@15741>    BEQ.w JL_0_AED4
0002CEE0 <AmiBlitz3.ab3@15744>   CMP.b #"@",d0
0002CEE4 <AmiBlitz3.ab3@15745>    BNE syntaxerr
0002CEEA <AmiBlitz3.ab3@15746>   TST.b newsyntax
0002CEEE <AmiBlitz3.ab3@15747>    BEQ JUMP_syntaxerropt4
0002CEF4 <AmiBlitz3.ab3@15748>   MOVE.w regnum,D1
0002CEF6 <AmiBlitz3.ab3@15749>   LSL.w #8,D1
0002CEF8 <AmiBlitz3.ab3@15750>   LSL.w #1,D1
0002CEFC <AmiBlitz3.ab3@15751>   ORI.w #$203C,D1
0002CF00 <AmiBlitz3.ab3@15752>   BSR.w writeword
0002CF04 <AmiBlitz3.ab3@15753>   CMP.b #$22,(a5)
0002CF08 <AmiBlitz3.ab3@15754>    BNE syntaxerr
0002CF0A <AmiBlitz3.ab3@15755>   ADDQ #1,a5
0002CF0C <AmiBlitz3.ab3@15756>   MOVEQ #0,d0
0002CF10 <AmiBlitz3.ab3@15757>   CMP.b #1,d2
0002CF14 <AmiBlitz3.ab3@15758>    BEQ 'l3b
0002CF18 <AmiBlitz3.ab3@15759>   CMP.b #2,d2
0002CF1C <AmiBlitz3.ab3@15760>    BEQ 'l2b
0002CF20 <AmiBlitz3.ab3@15761>   CMP.b #4,d2
0002CF24 <AmiBlitz3.ab3@15762>    BEQ error_convert_types
0002CF26 <AmiBlitz3.ab3@15763>   MOVE.b (a5)+,d0
0002CF2A <AmiBlitz3.ab3@15764>   BEQ syntaxerr
0002CF2E <AmiBlitz3.ab3@15765>   CMP.b #$22,d0
0002CF32 <AmiBlitz3.ab3@15766>   BNE 'l1
0002CF36 <AmiBlitz3.ab3@15767>     MOVE.b #0,d0
0002CF3A <AmiBlitz3.ab3@15768> BRA 'do
0002CF3C <AmiBlitz3.ab3@15771>   ASL.l #8,d0
0002CF3E <AmiBlitz3.ab3@15772>   MOVE.b (a5)+,d0
0002CF42 <AmiBlitz3.ab3@15773>   BEQ syntaxerr
0002CF46 <AmiBlitz3.ab3@15774>   CMP.b #$22,d0
0002CF4A <AmiBlitz3.ab3@15775>   BNE 'l2
0002CF4E <AmiBlitz3.ab3@15776>     MOVE.b #0,d0
0002CF50 <AmiBlitz3.ab3@15777>     ASR.l #8,d0
0002CF54 <AmiBlitz3.ab3@15778> BRA 'do
0002CF56 <AmiBlitz3.ab3@15781>   ASL.l #8,d0
0002CF58 <AmiBlitz3.ab3@15784>   MOVE.b (a5)+,d0
0002CF5C <AmiBlitz3.ab3@15785>    BEQ syntaxerr
0002CF60 <AmiBlitz3.ab3@15786>    CMP.b #$22,d0
0002CF64 <AmiBlitz3.ab3@15787>    BNE 'l3
0002CF68 <AmiBlitz3.ab3@15788>    MOVE.b #0,d0
0002CF6A <AmiBlitz3.ab3@15789>    ASR.l #8,d0
0002CF6E <AmiBlitz3.ab3@15790> BRA 'do
0002CF70 <AmiBlitz3.ab3@15793>   ASL.l #8,d0
0002CF72 <AmiBlitz3.ab3@15796>   MOVE.b (a5)+,d0
0002CF76 <AmiBlitz3.ab3@15797>    BEQ syntaxerr
0002CF7A <AmiBlitz3.ab3@15798>    CMP.b #$22,d0
0002CF7E <AmiBlitz3.ab3@15799>    BNE 'l4
0002CF82 <AmiBlitz3.ab3@15800>    MOVE.b #0,d0
0002CF84 <AmiBlitz3.ab3@15801>    ASR.l #8,d0
0002CF88 <AmiBlitz3.ab3@15802> BRA 'do
0002CF8C <AmiBlitz3.ab3@15805>    CMP.b #$22,(a5)+
0002CF90 <AmiBlitz3.ab3@15806>    BNE JUMP_error4char
0002CF92 <AmiBlitz3.ab3@15809>   MOVE.l d0,d1
0002CF96 <AmiBlitz3.ab3@15810>     BSR writelong
0002CF9A <AmiBlitz3.ab3@15811>     BSR get1bytemain
0002CF9C <AmiBlitz3.ab3@15812> RTS
0002CFA0 <AmiBlitz3.ab3@15816>   BSR.w get1bytemain
0002CFA4 <AmiBlitz3.ab3@15817>   CMP.w #$2E,D0
0002CFA8 <AmiBlitz3.ab3@15818>    BEQ.b JL_0_A7F4
0002CFB2 <AmiBlitz3.ab3@15820>   MOVE.w oldqflag,instringon
0002CFB8 <AmiBlitz3.ab3@15821>   MOVEA.l lastsourcepos,A5
0002CFBA <AmiBlitz3.ab3@15822>   MOVE.w D2,-(A7)
0002CFBE <AmiBlitz3.ab3@15823>    BSR.w getparameter2
0002CFC2 <AmiBlitz3.ab3@15824>    BEQ.w syntaxerr
0002CFC8 <AmiBlitz3.ab3@15825>   LEA varbase,A2
0002CFCC <AmiBlitz3.ab3@15826>    BSR.w findvariable
0002CFD0 <AmiBlitz3.ab3@15827>    BNE.w notypeerr
0002CFD4 <AmiBlitz3.ab3@15828>   MOVE.w $4(A2),D3
0002CFD6 <AmiBlitz3.ab3@15829>   EXT.l D3
0002CFD8 <AmiBlitz3.ab3@15830>   MOVE.w (A7)+,D2
0002CFDC <AmiBlitz3.ab3@15831> BRA.w JL_0_B46E
0002CFDE <AmiBlitz3.ab3@15835>   MOVE.w D2,-(A7)
0002CFE2 <AmiBlitz3.ab3@15836>    BSR.w getparameter2
0002CFE6 <AmiBlitz3.ab3@15837>    BEQ.w syntaxerr
0002CFEC <AmiBlitz3.ab3@15838>   LEA newtypebase,A2
0002CFF0 <AmiBlitz3.ab3@15839>    BSR.w findtype
0002CFF4 <AmiBlitz3.ab3@15840>    BNE.w notypeerr
0002CFF6 <AmiBlitz3.ab3@15841>   MOVEQ.l #$00,D3
0002CFFA <AmiBlitz3.ab3@15842>   CMP.w #$5C,D0
0002CFFE <AmiBlitz3.ab3@15843>    BNE.w JL_0_A832
0002D002 <AmiBlitz3.ab3@15844>    BSR.w getparameter2
0002D006 <AmiBlitz3.ab3@15845>    BEQ.w syntaxerr
0002D00A <AmiBlitz3.ab3@15846>   LEA $4(A2),A2
0002D00E <AmiBlitz3.ab3@15847>    BSR.w findvariable2
0002D012 <AmiBlitz3.ab3@15848>    BNE.w noofferr
0002D016 <AmiBlitz3.ab3@15849>   MOVE.w $4(A2),D3
0002D01A <AmiBlitz3.ab3@15850> BRA.w JL_0_A836
0002D01E <AmiBlitz3.ab3@15854>   MOVE.w $8(A2),D3
0002D020 <AmiBlitz3.ab3@15857>   MOVE.w (A7)+,D2
0002D024 <AmiBlitz3.ab3@15858> BRA.w JL_0_B46E
0002D026 <AmiBlitz3.ab3@15862>   MOVEQ.l #-$01,D3
0002D02A <AmiBlitz3.ab3@15863>    BSR.w get1bytemain
0002D02E <AmiBlitz3.ab3@15864> BRA.w JL_0_B46E
0002D030 <AmiBlitz3.ab3@15868>   MOVEQ.l #$00,D3
0002D034 <AmiBlitz3.ab3@15869>    BSR.w get1bytemain
0002D038 <AmiBlitz3.ab3@15870> BRA.w JL_0_B46E
0002D03C <AmiBlitz3.ab3@15874>   CMP.w #$30,D0
0002D040 <AmiBlitz3.ab3@15875>    BCS.w JL_0_A876
0002D044 <AmiBlitz3.ab3@15876>   CMP.w #$39,D0
0002D048 <AmiBlitz3.ab3@15877>    BLS.w JL_0_A874
0002D04C <AmiBlitz3.ab3@15878>   ANDI.w #$FFDF,D0
0002D050 <AmiBlitz3.ab3@15879>   CMP.w #$46,D0
0002D054 <AmiBlitz3.ab3@15880>    BHI.w JL_0_A876
0002D058 <AmiBlitz3.ab3@15881>   CMP.w #$41,D0
0002D05C <AmiBlitz3.ab3@15882>    BCS.w JL_0_A876
0002D05E <AmiBlitz3.ab3@15885>    CMP.w D0,D0
0002D060 <AmiBlitz3.ab3@15888> RTS
0002D064 <AmiBlitz3.ab3@15892>   CMP.w #$31,D0
0002D068 <AmiBlitz3.ab3@15893>    BEQ.w JL_0_A884
0002D06C <AmiBlitz3.ab3@15894>   CMP.w #$30,D0
0002D06E <AmiBlitz3.ab3@15897> RTS
0002D070 <AmiBlitz3.ab3@15901>    MOVEQ #0,d0
0002D072 <AmiBlitz3.ab3@15902>    MOVE.b (a5)+,d0
0002D074 <AmiBlitz3.ab3@15903>    MOVE.b (a5)+,d0
0002D078 <AmiBlitz3.ab3@15904>    BSR ishex
0002D07C <AmiBlitz3.ab3@15905>    BNE syntaxerr
0002D080 <AmiBlitz3.ab3@15906>    SUBI.w #$30,D0
0002D084 <AmiBlitz3.ab3@15907>    CMP.w #$9,D0
0002D088 <AmiBlitz3.ab3@15908>    BLS.w 'l1
0002D08A <AmiBlitz3.ab3@15909>    SUBQ.w #7,D0
0002D08C <AmiBlitz3.ab3@15912>    MOVE.l d0,d1
0002D08E <AmiBlitz3.ab3@15913>    MOVE.b (a5)+,d0
0002D092 <AmiBlitz3.ab3@15914>      BSR ishex
0002D096 <AmiBlitz3.ab3@15915>     BNE syntaxerr
0002D098 <AmiBlitz3.ab3@15916>     LSL.l #4,d1
0002D09C <AmiBlitz3.ab3@15917>     SUBI.w #$30,D0
0002D0A0 <AmiBlitz3.ab3@15918>    CMP.w #$9,D0
0002D0A4 <AmiBlitz3.ab3@15919>    BLS.w 'l2
0002D0A6 <AmiBlitz3.ab3@15920>    SUBQ.w #7,D0
0002D0A8 <AmiBlitz3.ab3@15923>   ADD.l d1,d0
0002D0AA <AmiBlitz3.ab3@15924> RTS
0002D0AE <AmiBlitz3.ab3@15928>    BSR.w get1bytemain
0002D0B2 <AmiBlitz3.ab3@15929>    BSR.w ishex
0002D0B6 <AmiBlitz3.ab3@15930>    BNE.w syntaxerr
0002D0B8 <AmiBlitz3.ab3@15931>   MOVEQ.l #$00,D3
0002D0BC <AmiBlitz3.ab3@15932>   CMP.w #5,d2
0002D0C0 <AmiBlitz3.ab3@15933>   BNE JL_0_A894
0002D0C6 <AmiBlitz3.ab3@15934>   CMP.l #newtype_double,a2
0002D0CA <AmiBlitz3.ab3@15935>   BEQ 'doit
0002D0D0 <AmiBlitz3.ab3@15936>   CMP.l #newtype_float,a2
0002D0D4 <AmiBlitz3.ab3@15937>   BNE JL_0_A894
0002D0DC <AmiBlitz3.ab3@15940>    fmove.s #0,fp0
0002D0E2 <AmiBlitz3.ab3@15942>   TST.b fpu
0002D0E6 <AmiBlitz3.ab3@15943>   BEQ JL_0_A894
0002D0EC <AmiBlitz3.ab3@15944>   fmove.w #16,fp1
0002D0F0 <AmiBlitz3.ab3@15945>   fmul.x fp1,fp0
0002D0F4 <AmiBlitz3.ab3@15946>   SUBI.w #$30,D0
0002D0F8 <AmiBlitz3.ab3@15947>   CMP.w #$9,D0
0002D0FC <AmiBlitz3.ab3@15948>    BLS.w JL_0_A8AEa
0002D0FE <AmiBlitz3.ab3@15949>   SUBQ.w #7,D0
0002D102 <AmiBlitz3.ab3@15952>    fmove.w d0,fp1
0002D106 <AmiBlitz3.ab3@15953>    fadd.x fp1,fp0
0002D10A <AmiBlitz3.ab3@15954>    BSR.w get1bytemain
0002D10E <AmiBlitz3.ab3@15955>    BSR.w ishex
0002D112 <AmiBlitz3.ab3@15956>    BEQ.w JL_0_A894a
0002D116 <AmiBlitz3.ab3@15957> BRA.w nofpregload
0002D11C <AmiBlitz3.ab3@15961>   CMP.l #$10000000,D3
0002D120 <AmiBlitz3.ab3@15962>    BCC.w overerr
0002D122 <AmiBlitz3.ab3@15963>   LSL.l #4,D3
0002D126 <AmiBlitz3.ab3@15964>   SUBI.w #$30,D0
0002D12A <AmiBlitz3.ab3@15965>   CMP.w #$9,D0
0002D12E <AmiBlitz3.ab3@15966>    BLS.w JL_0_A8AE
0002D130 <AmiBlitz3.ab3@15967>   SUBQ.w #7,D0
0002D132 <AmiBlitz3.ab3@15970>   OR.w D0,D3
0002D136 <AmiBlitz3.ab3@15971>    BSR.w get1bytemain
0002D13A <AmiBlitz3.ab3@15972>    BSR.w ishex
0002D13E <AmiBlitz3.ab3@15973>    BEQ.w JL_0_A894
0002D142 <AmiBlitz3.ab3@15974> BRA.w JL_0_B46E
0002D146 <AmiBlitz3.ab3@15978>    BSR.w get1bytemain
0002D14A <AmiBlitz3.ab3@15979>    BSR.w JL_0_A878
0002D14E <AmiBlitz3.ab3@15980>    BNE.w syntaxerr
0002D150 <AmiBlitz3.ab3@15981>    MOVEQ.l #$00,D3
0002D152 <AmiBlitz3.ab3@15984>    LSL.l #1,D3
0002D156 <AmiBlitz3.ab3@15985>    BCS.w overerr
0002D15A <AmiBlitz3.ab3@15986>   SUBI.w #$30,D0
0002D15C <AmiBlitz3.ab3@15987>   OR.w D0,D3
0002D160 <AmiBlitz3.ab3@15988>    BSR.w get1bytemain
0002D164 <AmiBlitz3.ab3@15989>    BSR.w JL_0_A878
0002D168 <AmiBlitz3.ab3@15990>    BEQ.w JL_0_A8CE
0002D16C <AmiBlitz3.ab3@15991> BRA.w JL_0_B46E
0002D16E <AmiBlitz3.ab3@15995>    MOVE.w d2,-(A7)
0002D176 <AmiBlitz3.ab3@15996>    MOVE.b #0,automode
0002D17A <AmiBlitz3.ab3@15997>    CMP.b #"@",(a5)
0002D17E <AmiBlitz3.ab3@15998>    BNE 'l1
0002D180 <AmiBlitz3.ab3@15999>    ADDQ.l #1,a5
0002D188 <AmiBlitz3.ab3@16000>    MOVE.b #1,automode
0002D18C <AmiBlitz3.ab3@16001>    BSR getparameter2
0002D190 <AmiBlitz3.ab3@16002>    BSR findlabel2
0002D194 <AmiBlitz3.ab3@16003>    BNE 'addit
0002D198 <AmiBlitz3.ab3@16004> BRA errormsg_autocount
0002D19C <AmiBlitz3.ab3@16007>   BSR.w addlabelhash
0002D1A4 <AmiBlitz3.ab3@16008>   MOVE.l #$1,$4(A2)
0002D1A8 <AmiBlitz3.ab3@16009>   MOVEM.l a2/a5,-(a7)
0002D1AE <AmiBlitz3.ab3@16010>   MOVE.w lastchar,-(a7)
0002D1B4 <AmiBlitz3.ab3@16011>   LEA autostorename,a5
0002D1B8 <AmiBlitz3.ab3@16012>   BSR getparameter2
0002D1BC <AmiBlitz3.ab3@16013>   BSR findlabel2
0002D1C0 <AmiBlitz3.ab3@16014>   BEQ 'found
0002D1C4 <AmiBlitz3.ab3@16015>   BSR.w addlabelhash
0002D1CC <AmiBlitz3.ab3@16016>   MOVE.l #$1,$4(A2)
0002D1D4 <AmiBlitz3.ab3@16017>   MOVE.l #0,8(a2)
0002D1D6 <AmiBlitz3.ab3@16020>    MOVE.w (a7)+,d0
0002D1DC <AmiBlitz3.ab3@16021>    MOVE.w d0,lastchar
0002D1E0 <AmiBlitz3.ab3@16022>   MOVE.l 8(a2),d3
0002D1E8 <AmiBlitz3.ab3@16023>   ADD.l #1,8(a2)
0002D1EC <AmiBlitz3.ab3@16024>   MOVEM.l (a7)+,a2/a5
0002D1F0 <AmiBlitz3.ab3@16025>   MOVE.l d3,8(a2)
0002D1F4 <AmiBlitz3.ab3@16026>   MOVE.l $8(A2),D3
0002D1F8 <AmiBlitz3.ab3@16027> BRA.l 'l3
0002D1FC <AmiBlitz3.ab3@16030>   BSR.w getparameter2
0002D202 <AmiBlitz3.ab3@16031>     TST.b incnif
0002D206 <AmiBlitz3.ab3@16032>     BEQ 'lc1
0002D20A <AmiBlitz3.ab3@16033>     BSR.w findlabel2
0002D20E <AmiBlitz3.ab3@16034>     BNE 'l5
0002D210 <AmiBlitz3.ab3@16035>     MOVEQ #1,d3
0002D212 <AmiBlitz3.ab3@16036>     MOVE.w (A7)+,D2
0002D216 <AmiBlitz3.ab3@16037> BRA JL_0_B46E
0002D218 <AmiBlitz3.ab3@16040>   MOVEQ #0,d3
0002D21A <AmiBlitz3.ab3@16041>     MOVE.w (A7)+,D2
0002D21E <AmiBlitz3.ab3@16042> BRA JL_0_B46E
0002D222 <AmiBlitz3.ab3@16045>    BSR.w findlabel2
0002D226 <AmiBlitz3.ab3@16046>    BNE.w cnferr
0002D22E <AmiBlitz3.ab3@16049>    CMPI.l #$1,$4(A2)
0002D232 <AmiBlitz3.ab3@16050>    BNE.w cnferr
0002D236 <AmiBlitz3.ab3@16052>    MOVE.l $8(A2),D3
0002D238 <AmiBlitz3.ab3@16053>    MOVE.w (A7)+,D2
0002D23C <AmiBlitz3.ab3@16054> BRA.w JL_0_B46E
0002D242 <AmiBlitz3.ab3@16058>   CLR.w vartype
0002D24A <AmiBlitz3.ab3@16059>   MOVE.b #3,peekaddrsize
0002D24E <AmiBlitz3.ab3@16060>   BSR.w JL_0_A916
0002D254 <AmiBlitz3.ab3@16061>   MOVE.l a2,rightsidetype
0002D256 <AmiBlitz3.ab3@16062>   MOVEQ.l #$03,D2
0002D258 <AmiBlitz3.ab3@16063> RTS
0002D25C <AmiBlitz3.ab3@16067>    BSR.w get1bytemain
0002D26E <AmiBlitz3.ab3@16068>    !compare2
0002D272 <AmiBlitz3.ab3@16069>    BEQ andop2
0002D276 <AmiBlitz3.ab3@16070>    BSR.w getparameter
0002D27A <AmiBlitz3.ab3@16071>    BSR.w JL_0_8E3C
0002D27E <AmiBlitz3.ab3@16072>    BSR.w calcvar
0002D282 <AmiBlitz3.ab3@16073>   CMP.b #$7,D2
0002D286 <AmiBlitz3.ab3@16074>    BNE.w JL_0_A960
0002D28A <AmiBlitz3.ab3@16075>   BTST #$F,D2
0002D28E <AmiBlitz3.ab3@16076>    BNE.w JL_0_A94A
0002D294 <AmiBlitz3.ab3@16077>   MOVE.w D3,stamp2+2
0002D29A <AmiBlitz3.ab3@16078>   MOVE.l stamp2,D1
0002D29E <AmiBlitz3.ab3@16079>    BSR.w pokela5s
0002D2A2 <AmiBlitz3.ab3@16080> BRA.w JL_0_A978
0002D2A8 <AmiBlitz3.ab3@16084>   MOVE.w regnum,D1
0002D2AA <AmiBlitz3.ab3@16085>   LSL.w #8,D1
0002D2AC <AmiBlitz3.ab3@16086>   LSL.w #1,D1
0002D2B2 <AmiBlitz3.ab3@16087>   OR.w stamp,D1
0002D2B6 <AmiBlitz3.ab3@16088>    BSR.w writeword
0002D2B8 <AmiBlitz3.ab3@16089> RTS
0002D2BC <AmiBlitz3.ab3@16093>   BTST #$F,D2
0002D2C0 <AmiBlitz3.ab3@16094>    BNE.w JL_0_A978
0002D2C6 <AmiBlitz3.ab3@16095>   MOVE.w D3,leaamp+2
0002D2CC <AmiBlitz3.ab3@16096>   MOVE.l leaamp,D1
0002D2D0 <AmiBlitz3.ab3@16097>    BSR.w pokela5s
0002D2D6 <AmiBlitz3.ab3@16100>   MOVE.w regnum,D1
0002D2D8 <AmiBlitz3.ab3@16101>   LSL.w #8,D1
0002D2DA <AmiBlitz3.ab3@16102>   LSL.w #1,D1
0002D2E0 <AmiBlitz3.ab3@16103>   OR.w leaamp2,D1
0002D2E4 <AmiBlitz3.ab3@16104> BRA.w writeword
0002D2E8 <AmiBlitz3.ab3@16108>   MOVE.w #$D200,D1
0002D2EC <AmiBlitz3.ab3@16109>    BSR.w Atokejsr
0002D2EE <AmiBlitz3.ab3@16110>   MOVEQ.l #$03,D2
0002D2F0 <AmiBlitz3.ab3@16111> RTS
0002D2F4 <AmiBlitz3.ab3@16115> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002D2F6 <AmiBlitz3.ab3@16116>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002D2F8 <AmiBlitz3.ab3@16117>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002D2FC <AmiBlitz3.ab3@16123>    BSR.w get1bytemain
0002D2FE <AmiBlitz3.ab3@16124>   MOVE.w D0,D1
0002D302 <AmiBlitz3.ab3@16125>    BPL.w syntaxerr
0002D304 <AmiBlitz3.ab3@16126>   MOVE.w D2,-(A7)
0002D308 <AmiBlitz3.ab3@16127>   BCLR #$F,D1
0002D30C <AmiBlitz3.ab3@16128>    BSR.w searchinstr
0002D310 <AmiBlitz3.ab3@16129>   MOVE.l $12(A2),D0
0002D314 <AmiBlitz3.ab3@16130>   TST.w -$2(A2,D0.L)
0002D318 <AmiBlitz3.ab3@16131>    BEQ.w freeerr
0002D31A <AmiBlitz3.ab3@16132>   MOVE.w (A7)+,D2
0002D31C <AmiBlitz3.ab3@16133> RTS
0002D320 <AmiBlitz3.ab3@16137>   MOVE.l $0(A5),D0
0002D324 <AmiBlitz3.ab3@16138>    BNE.b ucodeskip
0002D326 <AmiBlitz3.ab3@16139>   MOVEQ.l #-$01,D0
0002D32A <AmiBlitz3.ab3@16140> BRA.b usedcodef
0002D32E <AmiBlitz3.ab3@16143>   SUB.l $0(A5),D0
0002D330 <AmiBlitz3.ab3@16146>   LSR.w #8,D0
0002D334 <AmiBlitz3.ab3@16151>    MOVE.l $0(A5),D0
0002D338 <AmiBlitz3.ab3@16152>    BNE.b ucodeskip2
0002D33A <AmiBlitz3.ab3@16153>   MOVEQ.l #-$01,D0
0002D33E <AmiBlitz3.ab3@16154> BRA.b usedcode2f
0002D342 <AmiBlitz3.ab3@16157>   SUB.l $0(A5),D0                                          ;usedcode2
0002D344 <AmiBlitz3.ab3@16158>   LSR.w #8,D0
0002D346 <AmiBlitz3.ab3@16161>   LSR.w #8,D0
0002D348 <AmiBlitz3.ab3@16166>   MOVE.l D0,-(A7)
0002D34A <AmiBlitz3.ab3@16169>   MOVE.l (A7)+,D0
0002D34C <AmiBlitz3.ab3@16172>   MOVE.l D0,D0
0002D350 <AmiBlitz3.ab3@16178>   BSR.w JL_0_A9A0
0002D354 <AmiBlitz3.ab3@16180>   MOVE.w -$2(A2,D0.L),D3
0002D358 <AmiBlitz3.ab3@16181>   CMP.w #$9,D3
0002D35C <AmiBlitz3.ab3@16182>    BCC.w doused__skip
0002D360 <AmiBlitz3.ab3@16186>   LEA usedcode(PC),A0
0002D364 <AmiBlitz3.ab3@16187>   LEA usedcodef(PC),A1
0002D36A <AmiBlitz3.ab3@16189>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002D36E <AmiBlitz3.ab3@16190>   ANDI.w #$7,D3
0002D370 <AmiBlitz3.ab3@16191>   LSL.w #8,D3
0002D372 <AmiBlitz3.ab3@16192>   LSL.w #1,D3
0002D376 <AmiBlitz3.ab3@16193>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002D37A <AmiBlitz3.ab3@16194> BRA.w doused__skip2
0002D37E <AmiBlitz3.ab3@16199>   LEA usedcode2(PC),A0
0002D382 <AmiBlitz3.ab3@16200>   LEA usedcode2f(PC),A1
0002D388 <AmiBlitz3.ab3@16202>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002D38A <AmiBlitz3.ab3@16203>   SUBQ.w #8,D3
0002D38C <AmiBlitz3.ab3@16204>   LSL.w #8,D3
0002D38E <AmiBlitz3.ab3@16205>   LSL.w #1,D3
0002D392 <AmiBlitz3.ab3@16206>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002D396 <AmiBlitz3.ab3@16209>   MOVE.w -$6(A2,D0.L),D3
0002D39A <AmiBlitz3.ab3@16210>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002D39C <AmiBlitz3.ab3@16211>   ADDQ.w #4,D3
0002D3A0 <AmiBlitz3.ab3@16212>   MOVE.w D3,$2(A0)
0002D3A6 <AmiBlitz3.ab3@16213>   MOVE.w regnum,D1
0002D3AA <AmiBlitz3.ab3@16214>    BEQ.w doused__skip3
0002D3AE <AmiBlitz3.ab3@16215>   MOVE.w usedprep(PC),D1
0002D3B2 <AmiBlitz3.ab3@16216>    BSR.w writeword
0002D3B6 <AmiBlitz3.ab3@16219>   BSR.w pokecode
0002D3BC <AmiBlitz3.ab3@16220>   MOVE.w regnum,D1
0002D3C0 <AmiBlitz3.ab3@16221>    BEQ.w doused__skip4
0002D3C2 <AmiBlitz3.ab3@16222>   LSL.w #8,D1
0002D3C4 <AmiBlitz3.ab3@16223>   LSL.w #1,D1
0002D3C8 <AmiBlitz3.ab3@16224>   OR.w usedfix(PC),D1
0002D3CC <AmiBlitz3.ab3@16225>    BSR.w writeword
0002D3D0 <AmiBlitz3.ab3@16226>   MOVE.w useddone(PC),D1
0002D3D4 <AmiBlitz3.ab3@16227>    BSR.w writeword
0002D3D6 <AmiBlitz3.ab3@16230>    MOVEQ.l #$02,D2
0002D3DA <AmiBlitz3.ab3@16231> BRA.w get1bytemain
0002D3DE <AmiBlitz3.ab3@16239>    BSR.w JL_0_A9A0
0002D3E0 <AmiBlitz3.ab3@16241>   MOVEQ.l #$00,D3
0002D3E4 <AmiBlitz3.ab3@16242>   MOVE.w -$4(A2,D0.L),D3
0002D3E8 <AmiBlitz3.ab3@16243>    BSR.w get1bytemain
0002D3EC <AmiBlitz3.ab3@16244> BRA.w JL_0_B46E
0002D3F0 <AmiBlitz3.ab3@16251>    BSR.w get1bytemain
0002D3F2 <AmiBlitz3.ab3@16252>   MOVE.w D0,-(A7)
0002D3F6 <AmiBlitz3.ab3@16253>    BSR.w get1bytemain
0002D3FA <AmiBlitz3.ab3@16254>   CMP.w #$28,D0
0002D3FE <AmiBlitz3.ab3@16255>    BNE.w syntaxerr
0002D400 <AmiBlitz3.ab3@16256>   MOVE.w (A7)+,D0
0002D404 <AmiBlitz3.ab3@16257>    BSR.w JL_0_C340
0002D408 <AmiBlitz3.ab3@16258>    BSR.w reget
0002D40C <AmiBlitz3.ab3@16259>   CMP.w #$29,D0
0002D410 <AmiBlitz3.ab3@16260>    BNE.w syntaxerr
0002D414 <AmiBlitz3.ab3@16264>   LEA addrcode(PC),A0
0002D418 <AmiBlitz3.ab3@16265>   LEA addrcodef(PC),A1
0002D41E <AmiBlitz3.ab3@16266>   MOVE.w -$6(A2),$2(A0)
0002D422 <AmiBlitz3.ab3@16267>   MOVE.w $4(A0),D1
0002D426 <AmiBlitz3.ab3@16268>   ANDI.w #$FFF8,D1
0002D42C <AmiBlitz3.ab3@16269>   OR.w regnum,D1
0002D430 <AmiBlitz3.ab3@16270>   MOVE.w D1,$4(A0)
0002D434 <AmiBlitz3.ab3@16271>   MOVE.w $6(A0),D1
0002D438 <AmiBlitz3.ab3@16272>   ANDI.w #$F1FF,D1
0002D43E <AmiBlitz3.ab3@16273>   MOVE.w regnum,D0
0002D440 <AmiBlitz3.ab3@16274>   LSL.w #8,D0
0002D442 <AmiBlitz3.ab3@16275>   LSL.w #1,D0
0002D444 <AmiBlitz3.ab3@16276>   OR.w D0,D1
0002D448 <AmiBlitz3.ab3@16277>   MOVE.w D1,$6(A0)
0002D44C <AmiBlitz3.ab3@16278>    BSR.w pokecode
0002D44E <AmiBlitz3.ab3@16279>   MOVEQ.l #$03,D2
0002D452 <AmiBlitz3.ab3@16280> BRA.w get1bytemain
0002D456 <AmiBlitz3.ab3@16284>   CMP.w #-$7F4D,D0
0002D45A <AmiBlitz3.ab3@16285>    BHI.w JL_0_AAFE
0002D45E <AmiBlitz3.ab3@16286> BRA.w syntaxerr
0002D462 <AmiBlitz3.ab3@16293> .do_null   CMP.w #$b581,d0
0002D466 <AmiBlitz3.ab3@16294>    BNE 'nonull
0002D46C <AmiBlitz3.ab3@16295>    MOVE.l d0,lastinstruction
0002D470 <AmiBlitz3.ab3@16296>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002D476 <AmiBlitz3.ab3@16297>    MOVE.w regnum,d0
0002D478 <AmiBlitz3.ab3@16298>    ASL.l #7,d0
0002D47A <AmiBlitz3.ab3@16299>    ASL.l #2,d0
0002D47C <AmiBlitz3.ab3@16300>    OR.l d0,d1
0002D480 <AmiBlitz3.ab3@16301>    BSR writeword
0002D486 <AmiBlitz3.ab3@16302>    JSR get1bytemain
0002D488 <AmiBlitz3.ab3@16303>    RTS
0002D48C <AmiBlitz3.ab3@16305> 'nonull CMP.w #$c982,d0
0002D490 <AmiBlitz3.ab3@16306>        BNE nonew_
0002D492 <AmiBlitz3.ab3@16308>   MOVE.l a5,-(a7)
0002D498 <AmiBlitz3.ab3@16309>   MOVE.w lastchar,-(a7)
0002D49E <AmiBlitz3.ab3@16310>   JSR get1bytemain
0002D4A2 <AmiBlitz3.ab3@16311>   CMP.w #"(",d0                                             ; use oldcode
0002D4A6 <AmiBlitz3.ab3@16312>   BNE 'newcode
0002D4AC <AmiBlitz3.ab3@16313>   JSR get1bytemain
0002D4B0 <AmiBlitz3.ab3@16314>   CMP.w #")",d0
0002D4B4 <AmiBlitz3.ab3@16315>   BEQ 'newcode
0002D4BA <AmiBlitz3.ab3@16316>   MOVE.w (a7)+,lastchar
0002D4BC <AmiBlitz3.ab3@16317>   MOVE.l (a7)+,a5
0002D4C2 <AmiBlitz3.ab3@16318>   MOVE.w lastchar,d0
0002D4C6 <AmiBlitz3.ab3@16319>   BRA nonew_
0002D4C8 <AmiBlitz3.ab3@16320> 'newcode  MOVE.l a0,-(a7)
0002D4CE <AmiBlitz3.ab3@16321>   TST.b blitzparloop
0002D4D2 <AmiBlitz3.ab3@16322>   BNE 'err
0002D4D8 <AmiBlitz3.ab3@16323>   TST.b funcparloop
0002D4DC <AmiBlitz3.ab3@16324>   BNE 'err
0002D4E0 <AmiBlitz3.ab3@16325>   BRA 'ok
0002D4E6 <AmiBlitz3.ab3@16326> 'err JMP errornewnotincalls
0002D4EC <AmiBlitz3.ab3@16327> 'ok  MOVE.l #$203c0000,d1
0002D4F0 <AmiBlitz3.ab3@16328>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002D4F2 <AmiBlitz3.ab3@16329>   MOVEQ #0,d1
0002D4F6 <AmiBlitz3.ab3@16330>   MOVE.w 8(a0),d1
0002D4FA <AmiBlitz3.ab3@16331>   BSR writeword
0002D4FE <AmiBlitz3.ab3@16332>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002D502 <AmiBlitz3.ab3@16333>   BSR writeword
0002D506 <AmiBlitz3.ab3@16334>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002D50A <AmiBlitz3.ab3@16335>   BSR.w tokejsr2
0002D50C <AmiBlitz3.ab3@16336>   MOVE.l (a7)+,a0
0002D50E <AmiBlitz3.ab3@16337>   ADDQ.l #6,a7                      ; a5 need not restore
0002D512 <AmiBlitz3.ab3@16338>   CMP.w #")",d0
0002D516 <AmiBlitz3.ab3@16339>   BNE 'nobracket
0002D51C <AmiBlitz3.ab3@16340>   JSR get1bytemain
0002D51E <AmiBlitz3.ab3@16341> 'nobracket  RTS
0002D522 <AmiBlitz3.ab3@16343> nonew_  CMP.w #-$7F4A,D0
0002D526 <AmiBlitz3.ab3@16344>    BEQ.w JL_0_A98C
0002D52A <AmiBlitz3.ab3@16345>   CMP.w #-$7F48,D0
0002D52E <AmiBlitz3.ab3@16346>    BEQ.w doaddr
0002D532 <AmiBlitz3.ab3@16347>   CMP.w #-$7F3C,D0
0002D536 <AmiBlitz3.ab3@16348>    BEQ.w domaximum
0002D53A <AmiBlitz3.ab3@16349>   CMP.w #-$7F2F,D0
0002D53E <AmiBlitz3.ab3@16350>    BEQ.w doused
0002D540 <AmiBlitz3.ab3@16351>   MOVE.w D2,-(A7)
0002D542 <AmiBlitz3.ab3@16352>   MOVE.w D0,D1
0002D546 <AmiBlitz3.ab3@16353>   BCLR #$F,D1
0002D54A <AmiBlitz3.ab3@16355>    BSR.w searchinstr
0002D54C <AmiBlitz3.ab3@16356>   MOVE.w (A3),D1
0002D550 <AmiBlitz3.ab3@16357>   BTST #$1,D1
0002D554 <AmiBlitz3.ab3@16358>    BEQ.w noreturn_                                         ;syntax error noreturn
0002D558 <AmiBlitz3.ab3@16359>   BTST #$2,D1
0002D55C <AmiBlitz3.ab3@16360>    BNE.w JL_0_AC1A
0002D55E <AmiBlitz3.ab3@16361>   LSR.w #8,D1
0002D564 <AmiBlitz3.ab3@16362>   BTST #$3,$1(A3)
0002D568 <AmiBlitz3.ab3@16363>    BEQ.w JL_0_AB4C
0002D56E <AmiBlitz3.ab3@16364>    JSR AJL_0_498A
0002D574 <AmiBlitz3.ab3@16367>    CLR.l rightsidetype
0002D576 <AmiBlitz3.ab3@16368>    MOVE.w D1,-(A7)                                         ;is library instruction
0002D57A <AmiBlitz3.ab3@16369>   CMP.w #$7,D1
0002D57E <AmiBlitz3.ab3@16370>    BNE.w JL_0_AB5E
0002D580 <AmiBlitz3.ab3@16371>   MOVE.l A2,-(A7)
0002D584 <AmiBlitz3.ab3@16372>    BSR.w makesbase
0002D586 <AmiBlitz3.ab3@16373>   MOVEA.l (A7)+,A2
0002D58A <AmiBlitz3.ab3@16376>     BSR.w JL_0_AFA2
0002D58C <AmiBlitz3.ab3@16377>   MOVE.w D3,-(A7)
0002D590 <AmiBlitz3.ab3@16378>    BSR.w get1bytemain
0002D592 <AmiBlitz3.ab3@16379>   MOVEQ.l #$00,D1
0002D596 <AmiBlitz3.ab3@16380>   CMP.w #$28,D0
0002D59A <AmiBlitz3.ab3@16381>    BNE.w JL_0_AB80
0002D5A0 <AmiBlitz3.ab3@16382>    JSR JL_0_66F6
0002D5A2 <AmiBlitz3.ab3@16383>   TST.w D1
0002D5A6 <AmiBlitz3.ab3@16384>    BEQ.w syntaxerr
0002D5AA <AmiBlitz3.ab3@16385> BRA.w JL_0_AB84
0002D5B4 <AmiBlitz3.ab3@16390>   MOVE.w oldqflag,instringon
0002D5BA <AmiBlitz3.ab3@16391>   MOVEA.l lastsourcepos,A5
0002D5C0 <AmiBlitz3.ab3@16394>    MOVE.w regnum,-(A7)
0002D5CA <AmiBlitz3.ab3@16395>    MOVE.w regnum,regnumstore
0002D5D0 <AmiBlitz3.ab3@16396>    TST.b fpu
0002D5D4 <AmiBlitz3.ab3@16397>             BEQ 'nofloat
0002D5DA <AmiBlitz3.ab3@16398>             CMP.w #$ffff,28(a3)
0002D5DE <AmiBlitz3.ab3@16399>             BNE 'nofloat
0002D5E4 <AmiBlitz3.ab3@16400>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002D5E8 <AmiBlitz3.ab3@16401>             BEQ 'nofloat
0002D5EE <AmiBlitz3.ab3@16402>             CMP.w #$3c02,34(a3)                            ;int skip
0002D5F2 <AmiBlitz3.ab3@16403>             BEQ 'quick
0002D5F6 <AmiBlitz3.ab3@16404>             CMP.b #5,(a3)
0002D5FA <AmiBlitz3.ab3@16405>             BNE 'nofloat
0002D600 <AmiBlitz3.ab3@16408>             CLR.l load_var_addr
0002D604 <AmiBlitz3.ab3@16409> BRA 'isfpu
0002D60A <AmiBlitz3.ab3@16412>    CLR.w regnum
0002D60C <AmiBlitz3.ab3@16415>    MOVE.w D1,-(A7)
0002D612 <AmiBlitz3.ab3@16416>   BTST #$3,$1(A3)
0002D616 <AmiBlitz3.ab3@16417>    BEQ.w JL_0_ABB0
0002D61A <AmiBlitz3.ab3@16436>   MOVE.w $6(A7),D1
0002D620 <AmiBlitz3.ab3@16437>   MOVE.w d1,peeksize
0002D624 <AmiBlitz3.ab3@16447>   ORI.w #$7000,D1
0002D628 <AmiBlitz3.ab3@16448>   BSR.w writeword                                          ;write peekmode
0002D62E <AmiBlitz3.ab3@16451>   ADDQ.w #1,regnum
0002D630 <AmiBlitz3.ab3@16452>   MOVE.w (A7),D1
0002D638 <AmiBlitz3.ab3@16455>   MOVE.w 2(a7),tempregnum
0002D63E <AmiBlitz3.ab3@16456>   JSR JL_0_4878
0002D640 <AmiBlitz3.ab3@16457>   TST.w (A7)+
0002D644 <AmiBlitz3.ab3@16458>   BEQ.w JL_0_ABC6
0002D648 <AmiBlitz3.ab3@16459>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002D64C <AmiBlitz3.ab3@16460>   BNE.w errorbracketmiss                                    ; was syntax error
0002D652 <AmiBlitz3.ab3@16461>   CLR.l lasttoken
0002D656 <AmiBlitz3.ab3@16462>   BSR.w get1bytemain
0002D658 <AmiBlitz3.ab3@16465>    MOVE.w (A7)+,D1
0002D65E <AmiBlitz3.ab3@16466>   MOVE.w D1,regnum
0002D662 <AmiBlitz3.ab3@16467>    BEQ.w JL_0_ABDE
0002D668 <AmiBlitz3.ab3@16468>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002D66C <AmiBlitz3.ab3@16469>    BNE 'noval
0002D672 <AmiBlitz3.ab3@16470>    TST.b fpu
0002D676 <AmiBlitz3.ab3@16471>    BEQ 'noval
0002D67C <AmiBlitz3.ab3@16472>    CLR.l load_var_addr
0002D67E <AmiBlitz3.ab3@16473>    MOVEQ #0,d1
0002D684 <AmiBlitz3.ab3@16474>    MOVE.w regnum,d1
0002D686 <AmiBlitz3.ab3@16475>    LSL.l #7,d1
0002D68C <AmiBlitz3.ab3@16476>    OR.l #$f2000000,d1
0002D690 <AmiBlitz3.ab3@16477>    BSR writelong
0002D694 <AmiBlitz3.ab3@16478> BRA JL_0_ABDE
0002D69A <AmiBlitz3.ab3@16482>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002D69E <AmiBlitz3.ab3@16483>    BEQ 'quick
0002D6A2 <AmiBlitz3.ab3@16484>    CMP.b #5,d2
0002D6A6 <AmiBlitz3.ab3@16485>    BNE 'nofpu
0002D6AC <AmiBlitz3.ab3@16486>    TST.b fpu
0002D6B0 <AmiBlitz3.ab3@16487>    BEQ 'nofpu
0002D6B6 <AmiBlitz3.ab3@16492>    CLR.l load_var_addr
0002D6BA <AmiBlitz3.ab3@16493> BRA JL_0_ABDE
0002D6BC <AmiBlitz3.ab3@16496>   LSL.w #8,D1
0002D6BE <AmiBlitz3.ab3@16497>   LSL.w #1,D1
0002D6C2 <AmiBlitz3.ab3@16498>   ORI.w #$2000,D1
0002D6C6 <AmiBlitz3.ab3@16499>   BSR.w writeword                                          ;write move.l d0,dx
0002D6CC <AmiBlitz3.ab3@16500>   TST.b fpu
0002D6D0 <AmiBlitz3.ab3@16501>   BEQ JL_0_ABDE
0002D6D2 <AmiBlitz3.ab3@16502>   MOVEQ #0,d1
0002D6D8 <AmiBlitz3.ab3@16503>   MOVE.w regnum,d1
0002D6DA <AmiBlitz3.ab3@16504>   LSL.l #7,d1
0002D6E0 <AmiBlitz3.ab3@16505>   OR.l #$f2000000,d1
0002D6E2 <AmiBlitz3.ab3@16509>        MOVE.w (A7)+,D3
0002D6E6 <AmiBlitz3.ab3@16510>        BEQ.w JL_0_ABFC
0002D6EC <AmiBlitz3.ab3@16511>        TST.b fpu
0002D6F0 <AmiBlitz3.ab3@16512>        BEQ 'nofpu
0002D6F2 <AmiBlitz3.ab3@16513>       MOVE.l d0,-(a7)
0002D6F4 <AmiBlitz3.ab3@16514>        MOVE.l a0,-(a7)
0002D6FA <AmiBlitz3.ab3@16515>        MOVE.l stacktrack,d1
0002D700 <AmiBlitz3.ab3@16516>        LEA fpustackbase,a0
0002D708 <AmiBlitz3.ab3@16517>        MOVE.w 0(a0,d1),regmask
0002D70A <AmiBlitz3.ab3@16518>        MOVE.l (a7)+,a0
0002D70E <AmiBlitz3.ab3@16519>       MOVE.w #8,d0
0002D712 <AmiBlitz3.ab3@16522>       BEQ 'ready
0002D718 <AmiBlitz3.ab3@16523>       BTST d0,regmask
0002D71C <AmiBlitz3.ab3@16524>       BEQ 'noa7
0002D71E <AmiBlitz3.ab3@16525>       MOVEQ #0,d1
0002D720 <AmiBlitz3.ab3@16526>       MOVE.w d0,d1
0002D722 <AmiBlitz3.ab3@16527>       SUBQ.w #1,d1
0002D724 <AmiBlitz3.ab3@16528>       ASL #7,d1
0002D72A <AmiBlitz3.ab3@16530>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002D72E <AmiBlitz3.ab3@16531>       BSR writelong
0002D734 <AmiBlitz3.ab3@16532>       SUBQ.l #2,stacktrack
0002D736 <AmiBlitz3.ab3@16535>       SUBQ.w #1,d0
0002D73A <AmiBlitz3.ab3@16536>       BNE 'loop
0002D73C <AmiBlitz3.ab3@16539>       MOVE.l (a7)+,d0
0002D742 <AmiBlitz3.ab3@16540>       SUBQ.l #2,stacktrack                                 ;int track
0002D746 <AmiBlitz3.ab3@16543>    MOVE.w #$4CDF,D1
0002D74A <AmiBlitz3.ab3@16544>    BSR.w writeword                                         ;write movem.l (a7)+,
0002D74C <AmiBlitz3.ab3@16545>   MOVEQ.l #$00,D1
0002D74E <AmiBlitz3.ab3@16546>   MOVEQ.l #$0F,D4
0002D750 <AmiBlitz3.ab3@16549>     LSL.w #1,D3
0002D752 <AmiBlitz3.ab3@16550>     ROXR.w #1,D1
0002D756 <AmiBlitz3.ab3@16551>   DBF D4,JL_0_ABF0
0002D75A <AmiBlitz3.ab3@16553>    BSR.w writeword
0002D760 <AmiBlitz3.ab3@16554>    TST.b fast
0002D764 <AmiBlitz3.ab3@16555>    BEQ JL_0_ABFC
0002D76A <AmiBlitz3.ab3@16556>    TST.w regnum
0002D76E <AmiBlitz3.ab3@16557>    BEQ JL_0_ABFC
0002D774 <AmiBlitz3.ab3@16558>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002D778 <AmiBlitz3.ab3@16559>    BNE 'l1
0002D77E <AmiBlitz3.ab3@16560>    MOVE.w regnum,d1
0002D780 <AmiBlitz3.ab3@16561>    ASL.l #8,d1
0002D782 <AmiBlitz3.ab3@16562>    ASL.l #1,d1
0002D786 <AmiBlitz3.ab3@16563>    OR.w #$70ff,d1
0002D790 <AmiBlitz3.ab3@16564>    SUB.l #12,destpointer
0002D794 <AmiBlitz3.ab3@16565>    BSR writeword
0002D79A <AmiBlitz3.ab3@16568>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002D79E <AmiBlitz3.ab3@16569>    BNE 'l2
0002D7A4 <AmiBlitz3.ab3@16570>     MOVE.w regnum,d1
0002D7A6 <AmiBlitz3.ab3@16571>     ASL.l #8,d1
0002D7A8 <AmiBlitz3.ab3@16572>     ASL.l #1,d1
0002D7AC <AmiBlitz3.ab3@16573>     OR.w #$7000,d1
0002D7B6 <AmiBlitz3.ab3@16574>     SUB.l #12,destpointer
0002D7BA <AmiBlitz3.ab3@16575>     BSR writeword
0002D7BC <AmiBlitz3.ab3@16579>    MOVE.w (A7)+,D2
0002D7C0 <AmiBlitz3.ab3@16580>   CMP.w #$7,D2                                             ;destination var type
0002D7C4 <AmiBlitz3.ab3@16581>    BNE.w JL_0_AC16
0002D7CA <AmiBlitz3.ab3@16582>   MOVE.w putstlen,D1
0002D7D0 <AmiBlitz3.ab3@16583>   OR.w regnum,D1
0002D7D4 <AmiBlitz3.ab3@16584>    BSR.w writeword
0002D7D8 <AmiBlitz3.ab3@16587> BRA.w JL_0_AF66
0002D7DC <AmiBlitz3.ab3@16592>   MOVE.w $6(A3),D1
0002D7E0 <AmiBlitz3.ab3@16593>    BSR.w uselib
0002D7E4 <AmiBlitz3.ab3@16594>    BSR.w JL_0_AD40
0002D7E6 <AmiBlitz3.ab3@16595>   MOVE.l D4,D1
0002D7E8 <AmiBlitz3.ab3@16596>   MOVE.l D5,-(A7)
0002D7EC <AmiBlitz3.ab3@16597>    BSR.w JL_0_AD38
0002D7F0 <AmiBlitz3.ab3@16598>   MOVE.w $A(A1),-(A7)
0002D7F2 <AmiBlitz3.ab3@16599>   ADDQ.w #8,A3
0002D7F4 <AmiBlitz3.ab3@16600>   MOVE.w (A3)+,-(A7)
0002D7F6 <AmiBlitz3.ab3@16601>   MOVE.l A3,-(A7)
0002D7FA <AmiBlitz3.ab3@16602>    BSR.w get1bytemain
0002D7FC <AmiBlitz3.ab3@16603>   MOVE.w D0,-(A7)
0002D7FE <AmiBlitz3.ab3@16604>   MOVEQ.l #$00,D3
0002D804 <AmiBlitz3.ab3@16605>   JSR checka4a5
0002D806 <AmiBlitz3.ab3@16607>   MOVE.b (A3)+,D1
0002D80A <AmiBlitz3.ab3@16608>    BMI.w JL_0_AC6A
0002D80C <AmiBlitz3.ab3@16609>   MOVEQ.l #$03,D2
0002D80E <AmiBlitz3.ab3@16610>   ADDQ.w #1,D3
0002D812 <AmiBlitz3.ab3@16611>   MOVEM.l D3/A3,-(A7)
0002D818 <AmiBlitz3.ab3@16612>   MOVE.b funcparloop,-(a7)
0002D81E <AmiBlitz3.ab3@16613>   CLR.b funcparloop
0002D824 <AmiBlitz3.ab3@16614>   MOVE.b blitzparloop,-(a7)
0002D82C <AmiBlitz3.ab3@16615>   MOVE.b #1,blitzparloop
0002D832 <AmiBlitz3.ab3@16616>   MOVE.l lasttoken,-(a7)
0002D838 <AmiBlitz3.ab3@16617>   MOVE.l leftsidetype,-(a7)
0002D83E <AmiBlitz3.ab3@16618>   MOVE.l rightsidetype,-(a7)
0002D842 <AmiBlitz3.ab3@16619>   BSR.w peval
0002D848 <AmiBlitz3.ab3@16620>   MOVE.l (a7)+,rightsidetype
0002D84E <AmiBlitz3.ab3@16621>   MOVE.l (a7)+,leftsidetype
0002D854 <AmiBlitz3.ab3@16622>   MOVE.l (a7)+,lasttoken
0002D85A <AmiBlitz3.ab3@16623>   MOVE.b (a7)+,blitzparloop
0002D860 <AmiBlitz3.ab3@16624>   MOVE.b (a7)+,funcparloop
0002D866 <AmiBlitz3.ab3@16625>   SUBQ.w #4,a2offset
0002D86A <AmiBlitz3.ab3@16626>   MOVEM.l (A7)+,D3/A3
0002D86E <AmiBlitz3.ab3@16627>   CMP.w #$2C,D0
0002D872 <AmiBlitz3.ab3@16628>    BEQ.w JL_0_AC40
0002D874 <AmiBlitz3.ab3@16629>   TST.b (A3)
0002D878 <AmiBlitz3.ab3@16630>    BPL.w syntaxerr
0002D87A <AmiBlitz3.ab3@16633>   MOVE.w (A7)+,D1
0002D87E <AmiBlitz3.ab3@16634>    BSR.w JL_0_AD04
0002D880 <AmiBlitz3.ab3@16635>   MOVEA.l (A7)+,A3
0002D882 <AmiBlitz3.ab3@16636>   SUBQ.w #1,D3
0002D886 <AmiBlitz3.ab3@16637>    BMI.w JL_0_ACBE
0002D888 <AmiBlitz3.ab3@16640>   TST.b (A3)+
0002D88C <AmiBlitz3.ab3@16641>    BPL.w JL_0_AC78
0002D88E <AmiBlitz3.ab3@16642>   SUBQ.w #1,A3
0002D890 <AmiBlitz3.ab3@16645>     MOVEQ.l #$00,D1
0002D892 <AmiBlitz3.ab3@16646>     MOVE.b -(A3),D1
0002D896 <AmiBlitz3.ab3@16647>     BTST #$4,D1
0002D89A <AmiBlitz3.ab3@16648>      BNE.w JL_0_ACAA
0002D8A0 <AmiBlitz3.ab3@16649>     CMP.w regnum,D1
0002D8A4 <AmiBlitz3.ab3@16650>      BCC.w JL_0_AC9E
0002D8A6 <AmiBlitz3.ab3@16651>     BSET D1,D5
0002D8A8 <AmiBlitz3.ab3@16652>     MOVEQ.l #$0F,D0
0002D8AA <AmiBlitz3.ab3@16653>     SUB.w D1,D0
0002D8AC <AmiBlitz3.ab3@16654>     BSET D0,D4
0002D8AE <AmiBlitz3.ab3@16657>     LSL.w #8,D1
0002D8B0 <AmiBlitz3.ab3@16658>     LSL.w #1,D1
0002D8B4 <AmiBlitz3.ab3@16659>     ORI.w #$201F,D1
0002D8B8 <AmiBlitz3.ab3@16660>   BRA.w JL_0_ACB6
0002D8BC <AmiBlitz3.ab3@16663>     ANDI.w #$7,D1
0002D8BE <AmiBlitz3.ab3@16664>     LSL.w #8,D1
0002D8C0 <AmiBlitz3.ab3@16665>     LSL.w #1,D1
0002D8C4 <AmiBlitz3.ab3@16666>     ORI.w #$205F,D1
0002D8C8 <AmiBlitz3.ab3@16669>      BSR.w writeword
0002D8CC <AmiBlitz3.ab3@16670>   DBF D3,JL_0_AC80
0002D8D2 <AmiBlitz3.ab3@16673>   MOVE.w (A7)+,libjsr+2
0002D8D8 <AmiBlitz3.ab3@16674>   MOVE.w (A7)+,libbase+2
0002D8DE <AmiBlitz3.ab3@16675>   MOVE.l libbase,D1
0002D8E2 <AmiBlitz3.ab3@16676>    BSR.w writelong
0002D8E8 <AmiBlitz3.ab3@16677>   MOVE.l libjsr,D1
0002D8EC <AmiBlitz3.ab3@16678>    BSR.w writelong
0002D8F2 <AmiBlitz3.ab3@16679>   MOVE.w regnum,D1
0002D8F6 <AmiBlitz3.ab3@16680>    BEQ.w JL_0_ACF4
0002D8F8 <AmiBlitz3.ab3@16681>   LSL.w #8,D1
0002D8FA <AmiBlitz3.ab3@16682>   LSL.w #1,D1
0002D8FE <AmiBlitz3.ab3@16683>   ORI.w #$2000,D1
0002D902 <AmiBlitz3.ab3@16684>    BSR.w writeword
0002D904 <AmiBlitz3.ab3@16687>   MOVE.l (A7)+,D1
0002D908 <AmiBlitz3.ab3@16688>    BSR.w JL_0_AD38
0002D90E <AmiBlitz3.ab3@16689>    JSR restorea4a5
0002D910 <AmiBlitz3.ab3@16690>   MOVEQ.l #$03,D2
0002D914 <AmiBlitz3.ab3@16691>    BSR.w reget
0002D918 <AmiBlitz3.ab3@16692> BRA.w JL_0_AF66
0002D91A <AmiBlitz3.ab3@16695>   TST.w D3
0002D91E <AmiBlitz3.ab3@16696>    BEQ.w JL_0_AD1E
0002D922 <AmiBlitz3.ab3@16697>   CMP.w #$28,D1
0002D926 <AmiBlitz3.ab3@16698>    BNE.w syntaxerr
0002D92A <AmiBlitz3.ab3@16699>   CMP.w #$29,D0
0002D92E <AmiBlitz3.ab3@16700>    BNE.w syntaxerr
0002D932 <AmiBlitz3.ab3@16701> BRA.w get1bytemain
0002D936 <AmiBlitz3.ab3@16704>   CMP.w #$28,D1
0002D93A <AmiBlitz3.ab3@16705>    BNE.w JL_0_AD36
0002D93E <AmiBlitz3.ab3@16706>    BSR.w get1bytemain
0002D942 <AmiBlitz3.ab3@16707>   CMP.w #$29,D0
0002D946 <AmiBlitz3.ab3@16708>    BNE.w syntaxerr
0002D94A <AmiBlitz3.ab3@16709> BRA.w get1bytemain
0002D94C <AmiBlitz3.ab3@16712> RTS
0002D94E <AmiBlitz3.ab3@16715>   TST.w D1
0002D952 <AmiBlitz3.ab3@16716>    BNE.w writelong
0002D954 <AmiBlitz3.ab3@16717> RTS
0002D958 <AmiBlitz3.ab3@16721>   MOVE.w #$48E7,D4
0002D95A <AmiBlitz3.ab3@16722>   SWAP D4
0002D95C <AmiBlitz3.ab3@16723>   CLR.w D4
0002D960 <AmiBlitz3.ab3@16724>   MOVE.w #$4CDF,D5
0002D962 <AmiBlitz3.ab3@16725>   SWAP D5
0002D964 <AmiBlitz3.ab3@16726>   CLR.w D5
0002D96A <AmiBlitz3.ab3@16727>   MOVE.w regnum,D1
0002D96E <AmiBlitz3.ab3@16728>    BEQ.w JL_0_AD74
0002D972 <AmiBlitz3.ab3@16729>   BSET #$F,D4
0002D976 <AmiBlitz3.ab3@16730>   BSET #$0,D5
0002D97A <AmiBlitz3.ab3@16731>   CMP.w #$2,D1
0002D97E <AmiBlitz3.ab3@16732>    BCS.w JL_0_AD72
0002D982 <AmiBlitz3.ab3@16735>   BSET #$E,D4
0002D986 <AmiBlitz3.ab3@16736>   BSET #$1,D5
0002D988 <AmiBlitz3.ab3@16739> RTS
0002D98E <AmiBlitz3.ab3@16742>   TST.w fuckpos
0002D992 <AmiBlitz3.ab3@16743>   BNE.w JL_0_AD6A
0002D994 <AmiBlitz3.ab3@16744> RTS
0002D996 <AmiBlitz3.ab3@16747> fuckpos:  Ds.w 1
0002D99C <AmiBlitz3.ab3@16751>   MOVE.w sbasegot,D1
0002D9A0 <AmiBlitz3.ab3@16752>    BEQ.w makesbase__skip
0002D9A4 <AmiBlitz3.ab3@16756>   MOVE.w sbgot(PC),D1
0002D9A8 <AmiBlitz3.ab3@16757>    BNE.w makesbase__skip2
0002D9B0 <AmiBlitz3.ab3@16761>   MOVE.w #$0002,sbgot
0002D9B6 <AmiBlitz3.ab3@16762>   MOVE.w movea3a7,D1
0002D9BA <AmiBlitz3.ab3@16763> BRA.w writeword
0002D9BC <AmiBlitz3.ab3@16766> RTS
0002D9C4 <AmiBlitz3.ab3@16771>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002D9CA <AmiBlitz3.ab3@16774>   MOVE.l #$C601,D1
0002D9D2 <AmiBlitz3.ab3@16775>   MOVE.w #-1,sbasegot
0002D9D8 <AmiBlitz3.ab3@16776>   MOVE.l d1,lastinstruction
0002D9DC <AmiBlitz3.ab3@16777>   BSR.w Atokejsr
0002D9DE <AmiBlitz3.ab3@16778> RTS
0002D9E8 <AmiBlitz3.ab3@16783>   MOVE.l data1,litdata1
0002D9EE <AmiBlitz3.ab3@16784>   TST.b fast
0002D9F2 <AmiBlitz3.ab3@16785>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002D9F6 <AmiBlitz3.ab3@16789> BRA 'l50                                                   ;to deactivate
0002D9FC <AmiBlitz3.ab3@16795>   TST.b optistring
0002DA00 <AmiBlitz3.ab3@16796>   BNE.s 'l21
0002DA06 <AmiBlitz3.ab3@16797>   CLR.b string1
0002DA0E <AmiBlitz3.ab3@16798>   MOVE.b #1,optistring
0002DA14 <AmiBlitz3.ab3@16799>   TST.b nostringopt
0002DA18 <AmiBlitz3.ab3@16800>   BNE 'l21
0002DA1A <AmiBlitz3.ab3@16801>   MOVE.l a5,a4
0002DA1C <AmiBlitz3.ab3@16802>   SUBQ.l #1,a4
0002DA1E <AmiBlitz3.ab3@16805>     TST.b (a4)
0002DA22 <AmiBlitz3.ab3@16806>     BMI 'l19a
0002DA26 <AmiBlitz3.ab3@16807>     BEQ.s 'l20
0002DA2A <AmiBlitz3.ab3@16808>     CMP.b #$22,(a4)
0002DA2E <AmiBlitz3.ab3@16809>     BEQ.s 'l19
0002DA34 <AmiBlitz3.ab3@16812>     TST.w string1
0002DA38 <AmiBlitz3.ab3@16813>     BNE 'l11
0002DA3C <AmiBlitz3.ab3@16814>     CMP.b #":",(a4)
0002DA40 <AmiBlitz3.ab3@16815>     BEQ.s 'l20
0002DA44 <AmiBlitz3.ab3@16816>     CMP.b #";",(a4)
0002DA48 <AmiBlitz3.ab3@16817>     BEQ.s 'l20
0002DA4C <AmiBlitz3.ab3@16818>     CMP.b #"+",(a4)
0002DA50 <AmiBlitz3.ab3@16819>     BEQ.s 'l21
0002DA54 <AmiBlitz3.ab3@16820>     CMP.b #",",(a4)
0002DA58 <AmiBlitz3.ab3@16821>     BEQ.s 'l20                                             ;was l21
0002DA5C <AmiBlitz3.ab3@16822>     CMP.b #")",(a4)
0002DA60 <AmiBlitz3.ab3@16823>     BEQ.s 'l20                                             ;was l21
0002DA62 <AmiBlitz3.ab3@16826>     ADDQ.l #1,a4
0002DA66 <AmiBlitz3.ab3@16827> BRA.s 'l10
0002DA6E <AmiBlitz3.ab3@16830>   BCHG #0,string1
0002DA72 <AmiBlitz3.ab3@16831> BRA 'l18
0002DA74 <AmiBlitz3.ab3@16834>   ADDQ.l #1,a4
0002DA76 <AmiBlitz3.ab3@16835>   TST.b (a4)
0002DA7A <AmiBlitz3.ab3@16836>   BEQ 'l21
0002DA7E <AmiBlitz3.ab3@16837> BRA 'l11
0002DA80 <AmiBlitz3.ab3@16840>   MOVE.l a5,a4
0002DA82 <AmiBlitz3.ab3@16841>   SUBQ.l #1,a4
0002DA86 <AmiBlitz3.ab3@16844>   CMP.b #$20,-(a4)
0002DA8A <AmiBlitz3.ab3@16845>   BEQ 'll1
0002DA8E <AmiBlitz3.ab3@16846>   CMP.b #"+",(a4)
0002DA92 <AmiBlitz3.ab3@16847>   BEQ 'l21
0002DA9A <AmiBlitz3.ab3@16862>   MOVE.b #2,optistring
0002DAA2 <AmiBlitz3.ab3@16865>   CMP.b #2,optistring
0002DAA6 <AmiBlitz3.ab3@16866>   BEQ.s 'l100
0002DAAA <AmiBlitz3.ab3@16869>   BSR.w makesbase
0002DAAE <AmiBlitz3.ab3@16870>   BSR.w pokedata1                                          ;writestringsizespace
0002DAB2 <AmiBlitz3.ab3@16871>   BSR.w pokedata1
0002DAB4 <AmiBlitz3.ab3@16874>   MOVEQ.l #$00,D2
0002DABA <AmiBlitz3.ab3@16877>     MOVE.l a5,lastsourcepos
0002DABC <AmiBlitz3.ab3@16878>     MOVEQ #0,d0
0002DABE <AmiBlitz3.ab3@16879>     MOVE.b (a5)+,d0
0002DAC0 <AmiBlitz3.ab3@16880>     TST.w D0
0002DAC4 <AmiBlitz3.ab3@16881>      BEQ.w notqerr
0002DAC8 <AmiBlitz3.ab3@16882>     CMP.w #$22,D0                                          ; --- " ---
0002DACC <AmiBlitz3.ab3@16883>      BEQ.w JL_0_ADF6
0002DAD0 <AmiBlitz3.ab3@16884>     CMP.b #"\",d0
0002DAD4 <AmiBlitz3.ab3@16885>      BNE 'l1
0002DAD8 <AmiBlitz3.ab3@16886>     CMP.b #"\",(a5)
0002DADC <AmiBlitz3.ab3@16887>      BNE 'l1
0002DAE2 <AmiBlitz3.ab3@16888>     TST.b newsyntax
0002DAE6 <AmiBlitz3.ab3@16889>      BEQ 'l1
0002DAEC <AmiBlitz3.ab3@16890>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002DAF0 <AmiBlitz3.ab3@16891>     BNE 'l2
0002DAF2 <AmiBlitz3.ab3@16892>     ADDQ #2,a5
0002DAF4 <AmiBlitz3.ab3@16895>     ADDQ.w #1,D2
0002DAF6 <AmiBlitz3.ab3@16896>     MOVE.w D0,D1
0002DAFA <AmiBlitz3.ab3@16897>     BSR.w pokedata1b                                        ;writestring
0002DAFE <AmiBlitz3.ab3@16898> BRA.w writestring
0002DB04 <AmiBlitz3.ab3@16901>     JSR check_newconstants
0002DB08 <AmiBlitz3.ab3@16902> BRA writestring
0002DB0E <AmiBlitz3.ab3@16905>   NOT instringon
0002DB14 <AmiBlitz3.ab3@16906>   MOVE.w dontwrite,D1
0002DB18 <AmiBlitz3.ab3@16907>   BNE.w JL_0_AE0A
0002DB20 <AmiBlitz3.ab3@16908>   CMP.b #2,optistring
0002DB24 <AmiBlitz3.ab3@16909>   BEQ 'l10
0002DB2A <AmiBlitz3.ab3@16910>     MOVEA.l litdata1,A0
0002DB2C <AmiBlitz3.ab3@16911>     CLR.w (A0)+                                            ;writesize
0002DB2E <AmiBlitz3.ab3@16912>     MOVE.w D2,(A0)
0002DB32 <AmiBlitz3.ab3@16916>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002DB38 <AmiBlitz3.ab3@16917>   ADDQ.l #1,data1
0002DB40 <AmiBlitz3.ab3@16918>   BCLR #$0,data1+3
0002DB42 <AmiBlitz3.ab3@16919>   MOVEQ.l #$07,D2
0002DB46 <AmiBlitz3.ab3@16920> BRA.w get1bytemain
0002DB4A <AmiBlitz3.ab3@16924>   BSR.w makename2
0002DB4E <AmiBlitz3.ab3@16925>   BSR.w findlabel2
0002DB52 <AmiBlitz3.ab3@16926>   BEQ.w JL_0_AE4A
0002DB56 <AmiBlitz3.ab3@16927>   BSR.w addlabelhash
0002DB5A <AmiBlitz3.ab3@16928>   CLR.l $4(A2)
0002DB5E <AmiBlitz3.ab3@16929>   CLR.l $8(A2)
0002DB66 <AmiBlitz3.ab3@16931>   MOVE.w linenumat+2,$10(A2)
0002DB6C <AmiBlitz3.ab3@16932>   MOVE.w linenumat,d0
0002DB6E <AmiBlitz3.ab3@16933>   MOVEQ #0,d1
0002DB72 <AmiBlitz3.ab3@16934>   MOVE.b -1(a2,d7),d1
0002DB76 <AmiBlitz3.ab3@16935>   MOVE.w d0,0(a2,d1)
0002DB7A <AmiBlitz3.ab3@16936> BRA.w JL_0_AE52
0002DB7E <AmiBlitz3.ab3@16939>   TST.l $8(A2)
0002DB82 <AmiBlitz3.ab3@16940>   BNE.w JL_0_AE88
0002DB88 <AmiBlitz3.ab3@16943>   MOVEA.l _execbase,A6
0002DB8A <AmiBlitz3.ab3@16944>   MOVEQ.l #$0C+2,D0
0002DB8C <AmiBlitz3.ab3@16945>   MOVEQ.l #$01,D1
0002DB92 <AmiBlitz3.ab3@16946>   MOVE.l mempool,a0
0002DB96 <AmiBlitz3.ab3@16947>   JSR _AllocPooled(a6)
0002DB98 <AmiBlitz3.ab3@16949>   MOVEA.l D0,A0
0002DB9C <AmiBlitz3.ab3@16950>   MOVE.l $4(A2),(A0)
0002DBA0 <AmiBlitz3.ab3@16951>   MOVE.l A0,$4(A2)
0002DBA8 <AmiBlitz3.ab3@16952>   MOVE.l destpointer,$4(A0)
0002DBAC <AmiBlitz3.ab3@16953>   ADDQ.l #2,$4(A0)
0002DBB4 <AmiBlitz3.ab3@16954>   MOVE.w procnum,$8(A0)
0002DBBC <AmiBlitz3.ab3@16955>   MOVE.w linenumat+2,$A(A0)
0002DBC4 <AmiBlitz3.ab3@16956>   MOVE.w linenumat,$c(a0)
0002DBC6 <AmiBlitz3.ab3@16957> RTS
0002DBCA <AmiBlitz3.ab3@16960>   MOVE.l $4(A2),D1
0002DBCE <AmiBlitz3.ab3@16961>   BTST #$0,D1
0002DBD2 <AmiBlitz3.ab3@16962>    BNE.w illlaberr
0002DBD8 <AmiBlitz3.ab3@16963>   MOVE.w procnum,D1
0002DBDC <AmiBlitz3.ab3@16964>   CMP.w $10(A2),D1
0002DBE0 <AmiBlitz3.ab3@16965>    BNE.w referr
0002DBE2 <AmiBlitz3.ab3@16966> RTS
0002DBE4 <AmiBlitz3.ab3@16970>   MOVE.w D0,-(A7)
0002DBEC <AmiBlitz3.ab3@16971>   CMP.b #2,optistring
0002DBF0 <AmiBlitz3.ab3@16972>   BEQ 'l10
0002DBF6 <AmiBlitz3.ab3@16975>   MOVE.w numtoa0,D1
0002DBFA <AmiBlitz3.ab3@16976>    BSR.w writeword
0002DBFE <AmiBlitz3.ab3@16977>    BSR.w addoff
0002DC04 <AmiBlitz3.ab3@16978>   MOVE.l litdata1,D1
0002DC08 <AmiBlitz3.ab3@16979>    BSR.w writelong
0002DC0E <AmiBlitz3.ab3@16980>   MOVE.w pushlen,D1
0002DC12 <AmiBlitz3.ab3@16981>    BSR.w writeword
0002DC16 <AmiBlitz3.ab3@16982>   MOVE.w #$C600,D1
0002DC1A <AmiBlitz3.ab3@16983>    BSR.w Atokejsr
0002DC1C <AmiBlitz3.ab3@16984>   MOVE.w (A7)+,D0
0002DC1E <AmiBlitz3.ab3@16985> RTS
0002DC20 <AmiBlitz3.ab3@16988>   MOVEQ #0,d1
0002DC24 <AmiBlitz3.ab3@16989>   BSR.w pokedata1b
0002DC2A <AmiBlitz3.ab3@16990>   MOVE.l destpointer,a4
0002DC2E <AmiBlitz3.ab3@16991>   MOVE.w #$203c,d1
0002DC34 <AmiBlitz3.ab3@16992>   TST.w mode
0002DC38 <AmiBlitz3.ab3@16993>   BNE 'lm10
0002DC3E <AmiBlitz3.ab3@16994>    ADDQ.w #4,a2offset
0002DC42 <AmiBlitz3.ab3@16995>   MOVE.w #$2f3c,d1
0002DC48 <AmiBlitz3.ab3@16998>   TST.w mode
0002DC4C <AmiBlitz3.ab3@16999>   BEQ 'lm3
0002DC52 <AmiBlitz3.ab3@17000>   MOVE.w regnum,D0
0002DC54 <AmiBlitz3.ab3@17001>   LSL.w #8,D0
0002DC56 <AmiBlitz3.ab3@17002>   LSL.w #1,D0
0002DC58 <AmiBlitz3.ab3@17003>   OR.w d0,d1
0002DC5C <AmiBlitz3.ab3@17004>   BSR writeword
0002DC60 <AmiBlitz3.ab3@17005>   BSR.w addoff
0002DC66 <AmiBlitz3.ab3@17006>   MOVE.l litdata1,D1
0002DC6A <AmiBlitz3.ab3@17007>   BSR.w writelong
0002DC72 <AmiBlitz3.ab3@17008>   CMP.w #3,mode
0002DC76 <AmiBlitz3.ab3@17009>   BEQ 'l30
0002DC7C <AmiBlitz3.ab3@17010>    ADDQ.w #4,a2offset
0002DC80 <AmiBlitz3.ab3@17011>   MOVE.w #$4878,D1
0002DC84 <AmiBlitz3.ab3@17012>   BSR.w writeword
0002DC86 <AmiBlitz3.ab3@17013>   MOVE.l d2,d1
0002DC8A <AmiBlitz3.ab3@17014>   BSR writeword
0002DC8C <AmiBlitz3.ab3@17017>   MOVE.w (A7)+,D0
0002DC8E <AmiBlitz3.ab3@17018> RTS
0002DC94 <AmiBlitz3.ab3@17021>   MOVE.l #$3f3c0007,d1
0002DC98 <AmiBlitz3.ab3@17022>   BSR writelong
0002DC9E <AmiBlitz3.ab3@17023>   MOVE.w regnum,D1
0002DCA0 <AmiBlitz3.ab3@17024>   LSL.w #8,D1
0002DCA2 <AmiBlitz3.ab3@17025>   LSL.w #1,D1
0002DCA6 <AmiBlitz3.ab3@17026>   ORI.w #$2f3c,d1
0002DCAA <AmiBlitz3.ab3@17027>   BSR writeword
0002DCB0 <AmiBlitz3.ab3@17028>    ADDQ.w #4,a2offset
0002DCB2 <AmiBlitz3.ab3@17029>   MOVE.l d2,d1
0002DCB6 <AmiBlitz3.ab3@17030>   BSR writelong
0002DCBA <AmiBlitz3.ab3@17031>   MOVE.w #$2f3c,d1
0002DCBE <AmiBlitz3.ab3@17032>   BSR writeword
0002DCC2 <AmiBlitz3.ab3@17033>   BSR.w addoff
0002DCC8 <AmiBlitz3.ab3@17034>   MOVE.l litdata1,D1
0002DCCC <AmiBlitz3.ab3@17035>   BSR.w writelong
0002DCCE <AmiBlitz3.ab3@17036>   MOVE.w (A7)+,D0
0002DCD0 <AmiBlitz3.ab3@17037> RTS
0002DCD4 <AmiBlitz3.ab3@17041>   BSR.w get1bytemain
0002DCD8 <AmiBlitz3.ab3@17042>    BSR.w JL_0_AE22
0002DCDE <AmiBlitz3.ab3@17043>   MOVE.w regnum,D1
0002DCE0 <AmiBlitz3.ab3@17044>   LSL.w #8,D1
0002DCE2 <AmiBlitz3.ab3@17045>   LSL.w #1,D1
0002DCE6 <AmiBlitz3.ab3@17046>   ORI.w #$203C,D1
0002DCEA <AmiBlitz3.ab3@17047>    BSR.w writeword
0002DCEE <AmiBlitz3.ab3@17048>    BSR.w addoff
0002DCF2 <AmiBlitz3.ab3@17049>   MOVE.l $8(A2),D1
0002DCF6 <AmiBlitz3.ab3@17050>    BSR.w writelong
0002DCF8 <AmiBlitz3.ab3@17051>   MOVEQ.l #$03,D2
0002DCFE <AmiBlitz3.ab3@17052>   CLR.b peekaddrsize
0002DD02 <AmiBlitz3.ab3@17053> BRA.w reget
0002DD04 <AmiBlitz3.ab3@17056>   MOVEQ.l #$00,D3
0002DD08 <AmiBlitz3.ab3@17059>   BSR.w get1bytemain
0002DD0C <AmiBlitz3.ab3@17060>    BEQ.w syntaxerr
0002DD10 <AmiBlitz3.ab3@17061>   CMP.w #$22,D0
0002DD14 <AmiBlitz3.ab3@17062>    BEQ.w JL_0_AF1A
0002DD16 <AmiBlitz3.ab3@17063>   LSL.l #8,D3
0002DD18 <AmiBlitz3.ab3@17064>   MOVE.b D0,D3
0002DD1C <AmiBlitz3.ab3@17065> BRA.w JL_0_AF02
0002DD20 <AmiBlitz3.ab3@17068>   BSR.w get1bytemain
0002DD24 <AmiBlitz3.ab3@17069> BRA.w JL_0_B46E
0002DD26 <AmiBlitz3.ab3@17072>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002DD2A <AmiBlitz3.ab3@17073>    BSR.w makename2
0002DD2E <AmiBlitz3.ab3@17074>    BSR.w findlabel2
0002DD32 <AmiBlitz3.ab3@17075>    BEQ.w 'l10
0002DD38 <AmiBlitz3.ab3@17076>    LEA ptr_parameterstore,a0
0002DD3E <AmiBlitz3.ab3@17077>    CMP.b #"@",-1(a0,d2.w)
0002DD42 <AmiBlitz3.ab3@17078>    BNE cnferr
0002DD46 <AmiBlitz3.ab3@17079>    CLR.b -1(a0,d2.w)
0002DD48 <AmiBlitz3.ab3@17080>    SUBQ.l #1,d2
0002DD4E <AmiBlitz3.ab3@17081>    LEA varbase,a2
0002DD52 <AmiBlitz3.ab3@17082>    BSR findvariable
0002DD56 <AmiBlitz3.ab3@17083>    BNE cnferr
0002DD5A <AmiBlitz3.ab3@17084>    CMP.b #"\",d0
0002DD5E <AmiBlitz3.ab3@17085>    BNE 'l6
0002DD64 <AmiBlitz3.ab3@17086>    ADDQ #1,lastsourcepos
0002DD68 <AmiBlitz3.ab3@17087>    MOVE.l $a(a2),a2
0002DD6A <AmiBlitz3.ab3@17088>    ADDQ.l #4,a2
0002DD6E <AmiBlitz3.ab3@17089>    BSR.w makename2
0002DD72 <AmiBlitz3.ab3@17090>    BSR findvariable2
0002DD76 <AmiBlitz3.ab3@17091>    BNE cnferr
0002DD7A <AmiBlitz3.ab3@17092> BRA.s 'l6                                                  ;???
0002DD7E <AmiBlitz3.ab3@17095>    MOVE.w $4(a2),d3
0002DD80 <AmiBlitz3.ab3@17096>    EXT.l d3
0002DD84 <AmiBlitz3.ab3@17097> BRA JL_0_AF46
0002DD88 <AmiBlitz3.ab3@17100>   MOVE.l $8(A2),D3
0002DD90 <AmiBlitz3.ab3@17101>   CMPI.l #$1,$4(A2)
0002DD94 <AmiBlitz3.ab3@17102>    BEQ.w JL_0_AF46
0002DD9A <AmiBlitz3.ab3@17103>   NOT.w asmtype
0002DD9C <AmiBlitz3.ab3@17106>   MOVE.w (A7)+,D2
0002DDA0 <AmiBlitz3.ab3@17107> BRA.w JL_0_B46E
0002DDA2 <AmiBlitz3.ab3@17111>   MOVE.w D2,-(A7)
0002DDA6 <AmiBlitz3.ab3@17112>    BSR.w getparameter
0002DDAA <AmiBlitz3.ab3@17113>   CMP.w #"{",D0                                          ;test if var = function{}
0002DDAE <AmiBlitz3.ab3@17114>    BEQ.w isfunction
0002DDB2 <AmiBlitz3.ab3@17115>    BSR.w JL_0_8E3C
0002DDB6 <AmiBlitz3.ab3@17117>    BSR.w calcvar                                         ;getvaroffset+type
0002DDBA <AmiBlitz3.ab3@17118>    BSR.w JL_0_B150
0002DDC0 <AmiBlitz3.ab3@17119>    MOVE.l a2,rightsidetype
0002DDC6 <AmiBlitz3.ab3@17130>    TST.b typecheck
0002DDCA <AmiBlitz3.ab3@17131>    BEQ JL_0_AF66
0002DDD4 <AmiBlitz3.ab3@17132>    CMP.l #$da01,lasttoken                                  ;poke
0002DDD8 <AmiBlitz3.ab3@17133>    BEQ 'l1
0002DDE2 <AmiBlitz3.ab3@17134>    CMP.l #$da02,lasttoken                                  ;peek
0002DDE6 <AmiBlitz3.ab3@17135>    BNE 'l2
0002DDEE <AmiBlitz3.ab3@17138>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002DDF2 <AmiBlitz3.ab3@17139>    BNE JL_0_AF66
0002DDF8 <AmiBlitz3.ab3@17140>    MOVE.b d2,peekaddrsize
0002DDFC <AmiBlitz3.ab3@17141>    BRA JL_0_AF66
0002DE02 <AmiBlitz3.ab3@17144>   CLR.b peekaddrsize
0002DE06 <AmiBlitz3.ab3@17147>   CMP.w #$1,D2
0002DE0A <AmiBlitz3.ab3@17148>    BNE.w JL_0_AF7C
0002DE10 <AmiBlitz3.ab3@17149>   MOVE.w regnum,D1
0002DE14 <AmiBlitz3.ab3@17150>   ORI.w #$4880,D1
0002DE18 <AmiBlitz3.ab3@17151>    BSR.w writeword
0002DE1A <AmiBlitz3.ab3@17154>   MOVE.w (A7)+,D3
0002DE1E <AmiBlitz3.ab3@17155>    BEQ.w JL_0_AF9E
0002DE24 <AmiBlitz3.ab3@17156>    MOVE.l lastinstructionaddr,a0
0002DE28 <AmiBlitz3.ab3@17157>   CMP.w #$3,D3
0002DE2C <AmiBlitz3.ab3@17158>    BNE.w JL_0_AF92
0002DE30 <AmiBlitz3.ab3@17159>   CMP.w #$4,D2
0002DE34 <AmiBlitz3.ab3@17160>    BEQ.w JL_0_AF98
0002DE36 <AmiBlitz3.ab3@17163>   CMP.w D2,D3
0002DE3A <AmiBlitz3.ab3@17164>    BLS.w JL_0_AF9E
0002DE3C <AmiBlitz3.ab3@17167>   EXG.l D2,D3
0002DE3E <AmiBlitz3.ab3@17168>   MOVE.l a0,-(a7)
0002DE44 <AmiBlitz3.ab3@17169>   TST.b typecheck
0002DE48 <AmiBlitz3.ab3@17170>   BEQ 'ok
0002DE4E <AmiBlitz3.ab3@17171>   TST.b notypecheck
0002DE52 <AmiBlitz3.ab3@17172>   BNE 'ok
0002DE58 <AmiBlitz3.ab3@17173>   MOVE.l leftsidetype,a0
0002DE62 <AmiBlitz3.ab3@17174>   CMP.l #0,leftsidetype
0002DE66 <AmiBlitz3.ab3@17175>   BEQ 'ok
0002DE6E <AmiBlitz3.ab3@17176>   CMP.l #$100,4(a0)
0002DE72 <AmiBlitz3.ab3@17177>   BLE 'ok
0002DE76 <AmiBlitz3.ab3@17178>   CMP.b #3,d3
0002DE7A <AmiBlitz3.ab3@17179>   BEQ 'ok
0002DE7E <AmiBlitz3.ab3@17180>   CMP.b #7,d3
0002DE82 <AmiBlitz3.ab3@17181>   BEQ 'ok
0002DE88 <AmiBlitz3.ab3@17182>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002DE8A <AmiBlitz3.ab3@17184>   MOVE.l (a7)+,a0
0002DE8E <AmiBlitz3.ab3@17185>   BSR.w writeconvertcode         ;called from var assign
0002DE92 <AmiBlitz3.ab3@17188> BRA.w reget
0002DE94 <AmiBlitz3.ab3@17191>   MOVEQ.l #$00,D3
0002DE9A <AmiBlitz3.ab3@17192>   MOVE.w regnum,D1
0002DE9E <AmiBlitz3.ab3@17193>    BEQ.w JL_0_AFC8
0002DEA0 <AmiBlitz3.ab3@17194>   SUBQ.w #1,D1
0002DEA2 <AmiBlitz3.ab3@17197>      LSR.l #1,D3
0002DEA6 <AmiBlitz3.ab3@17198>      BSET #$F,D3
0002DEAA <AmiBlitz3.ab3@17199>   DBF D1,JL_0_AFB0b
0002DEB0 <AmiBlitz3.ab3@17201>    TST.b fpu
0002DEB4 <AmiBlitz3.ab3@17202>    BEQ 'l1
0002DEBA <AmiBlitz3.ab3@17203>    ADDQ.l #2,stacktrack                                    ;intern command
0002DEBC <AmiBlitz3.ab3@17204>     MOVE.l a0,-(a7)
0002DEC2 <AmiBlitz3.ab3@17205>     MOVE.l stacktrack,d1
0002DEC8 <AmiBlitz3.ab3@17206>     LEA fpustackbase,a0
0002DECC <AmiBlitz3.ab3@17207>     CLR.w 0(a0,d1)
0002DED2 <AmiBlitz3.ab3@17208>     CLR.w regmask
0002DED4 <AmiBlitz3.ab3@17209>     MOVE.l (a7)+,a0
0002DED8 <AmiBlitz3.ab3@17212>   MOVE.w #$48E7,D1
0002DEDC <AmiBlitz3.ab3@17213>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002DEDE <AmiBlitz3.ab3@17214>   MOVE.w D3,D1
0002DEE2 <AmiBlitz3.ab3@17215> BRA.w writeword
0002DEE4 <AmiBlitz3.ab3@17220>   MOVEQ.l #$00,D3
0002DEEA <AmiBlitz3.ab3@17221>   MOVE.w regnum,D1
0002DEEE <AmiBlitz3.ab3@17222>    BEQ.w JL_0_AFC8
0002DEF0 <AmiBlitz3.ab3@17223>   SUBQ.w #1,D1
0002DEF2 <AmiBlitz3.ab3@17226>     LSR.l #1,D3
0002DEF6 <AmiBlitz3.ab3@17227>     BSET #$F,D3
0002DEFA <AmiBlitz3.ab3@17228>   DBF D1,JL_0_AFB0
0002DF00 <AmiBlitz3.ab3@17230>    TST.b fpu
0002DF04 <AmiBlitz3.ab3@17231>    BEQ 'l1
0002DF0A <AmiBlitz3.ab3@17232>    ADDQ.l #2,stacktrack                                    ;intern command
0002DF0C <AmiBlitz3.ab3@17233>     MOVE.l a0,-(a7)
0002DF12 <AmiBlitz3.ab3@17234>     MOVE.l stacktrack,d1
0002DF18 <AmiBlitz3.ab3@17235>     LEA fpustackbase,a0
0002DF1C <AmiBlitz3.ab3@17236>     CLR.w 0(a0,d1)
0002DF20 <AmiBlitz3.ab3@17237>    CMP.b #5,(a3)                                           ;result float ?
0002DF24 <AmiBlitz3.ab3@17238>     BNE 'nofpu
0002DF2E <AmiBlitz3.ab3@17240>     MOVE.w regnum,regnumfunc
0002DF34 <AmiBlitz3.ab3@17243>   CLR.w regmask
0002DF36 <AmiBlitz3.ab3@17244>     MOVE.l (a7)+,a0
0002DF3A <AmiBlitz3.ab3@17247>   MOVE.w #$48E7,D1
0002DF3E <AmiBlitz3.ab3@17248>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002DF40 <AmiBlitz3.ab3@17249>   MOVE.w D3,D1
0002DF44 <AmiBlitz3.ab3@17250> BRA.w writeword
0002DF46 <AmiBlitz3.ab3@17253> RTS
0002DF48 <AmiBlitz3.ab3@17257>   MOVE.l D1,-(A7)
0002DF4C <AmiBlitz3.ab3@17258>   MOVE.w #$4EB9,D1
0002DF50 <AmiBlitz3.ab3@17259>    BSR.w writeword
0002DF54 <AmiBlitz3.ab3@17260>    BSR.w addoff
0002DF56 <AmiBlitz3.ab3@17261>   MOVE.l (A7)+,D1
0002DF5A <AmiBlitz3.ab3@17262> BRA.w writelong
0002DF5E <AmiBlitz3.ab3@17266>    BSR.w findproc                                          ;write function call
0002DF62 <AmiBlitz3.ab3@17267>    BEQ 'l1
0002DF68 <AmiBlitz3.ab3@17268>    TST.l unusedfunc
0002DF6C <AmiBlitz3.ab3@17269>    BEQ noprocerr
0002DF72 <AmiBlitz3.ab3@17271>    JSR gotoendsource
0002DF7A <AmiBlitz3.ab3@17274>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002DF80 <AmiBlitz3.ab3@17275>   TST.l typetocast
0002DF84 <AmiBlitz3.ab3@17276>   BEQ 'nocast
0002DF8E <AmiBlitz3.ab3@17277>   MOVE.l typetocast,rightsidetype
0002DF94 <AmiBlitz3.ab3@17278>   CLR.l typetocast
0002DF96 <AmiBlitz3.ab3@17279>   MOVE.l a1,-(a7)
0002DF9C <AmiBlitz3.ab3@17280>   MOVE.l rightsidetype,a1
0002DFA2 <AmiBlitz3.ab3@17281>   CMP.l leftsidetype,a1
0002DFA6 <AmiBlitz3.ab3@17282>   BEQ 'ok
0002DFAC <AmiBlitz3.ab3@17283>   JMP errorconvertreturntype2
0002DFAE <AmiBlitz3.ab3@17284> 'ok  MOVE.l (a7)+,a1
0002DFB0 <AmiBlitz3.ab3@17286>   MOVEQ.l #$00,D1
0002DFB4 <AmiBlitz3.ab3@17287>   MOVE.b $5(A2),D1
0002DFBA <AmiBlitz3.ab3@17288>   MOVE.b d1,retmode
0002DFBE <AmiBlitz3.ab3@17289>    BMI.w illprocerr
0002DFC4 <AmiBlitz3.ab3@17290>    MOVE.b #1,isfunc(a2)
0002DFC6 <AmiBlitz3.ab3@17291>   MOVE.w D1,-(A7)
0002DFC8 <AmiBlitz3.ab3@17292>   MOVEQ.l #$00,D1
0002DFCC <AmiBlitz3.ab3@17293>   MOVE.b $4(A2),D1
0002DFCE <AmiBlitz3.ab3@17294>   LSR.w #4,D1
0002DFD2 <AmiBlitz3.ab3@17295>    BEQ.w JL_0_B006
0002DFD4 <AmiBlitz3.ab3@17296>   LSL.w #2,D1
0002DFDA <AmiBlitz3.ab3@17297>   SUB.w D1,a2offset
0002DFDE <AmiBlitz3.ab3@17300>   CMPI.w #$7,(A7)
0002DFE2 <AmiBlitz3.ab3@17301>    BNE.b JL_0_B014
0002DFE4 <AmiBlitz3.ab3@17302>   MOVE.l A2,-(A7)
0002DFE8 <AmiBlitz3.ab3@17303>    BSR.w makesbase
0002DFEA <AmiBlitz3.ab3@17304>   MOVEA.l (A7)+,A2
0002DFF0 <AmiBlitz3.ab3@17307>   MOVE.w sbasegot,-(A7)
0002DFF4 <AmiBlitz3.ab3@17308>    BEQ.b JL_0_B020
0002DFF8 <AmiBlitz3.ab3@17309>    BSR.w dopusha3
0002DFFC <AmiBlitz3.ab3@17312>   BSR.w JL_0_AFA2func
0002DFFE <AmiBlitz3.ab3@17313>   MOVE.w D3,-(A7)
0002E002 <AmiBlitz3.ab3@17314>   MOVE.l $E(A2),D1
0002E006 <AmiBlitz3.ab3@17315>   TST.b $20(a2)                                            ;increase if morepar
0002E00A <AmiBlitz3.ab3@17316>   BNE 'no0par
0002E00C <AmiBlitz3.ab3@17317>   MOVE.l a5,a4
0002E010 <AmiBlitz3.ab3@17320>   CMP.b #$20,(a4)+
0002E014 <AmiBlitz3.ab3@17321>   BEQ 'l1
0002E01A <AmiBlitz3.ab3@17322>   CMP.b #"}",-1(a4)
0002E01E <AmiBlitz3.ab3@17323>   BNE  'no0par
0002E020 <AmiBlitz3.ab3@17324>   MOVEQ #0,d0
0002E024 <AmiBlitz3.ab3@17327>   LEA $16(A2),A1
0002E026 <AmiBlitz3.ab3@17330>   MOVE.l d1,-(a7)
0002E028 <AmiBlitz3.ab3@17331>   MOVE.b (a1),d2
0002E02A <AmiBlitz3.ab3@17332>   MOVE.l d0,d1
0002E02E <AmiBlitz3.ab3@17333>   CMP.w #4,d2
0002E032 <AmiBlitz3.ab3@17334>   BNE 'l1b
0002E038 <AmiBlitz3.ab3@17335>   ADD.l #$203c,d1
0002E03C <AmiBlitz3.ab3@17336>   BSR writeword
0002E042 <AmiBlitz3.ab3@17337>   MOVE.l #$ffff0000,d1
0002E046 <AmiBlitz3.ab3@17338>   BSR writelong
0002E04A <AmiBlitz3.ab3@17339> BRA 'l2b
0002E050 <AmiBlitz3.ab3@17342>    TST.b fpu
0002E054 <AmiBlitz3.ab3@17343>    BNE 'l1c
0002E058 <AmiBlitz3.ab3@17344>    CMP.w #5,d2
0002E05C <AmiBlitz3.ab3@17345>    BNE 'l1c
0002E062 <AmiBlitz3.ab3@17346>    ADD.l #$203c,d1
0002E066 <AmiBlitz3.ab3@17347>    BSR writeword
0002E06C <AmiBlitz3.ab3@17348>    MOVE.l #$800000c1,d1
0002E070 <AmiBlitz3.ab3@17349>    BSR writelong
0002E074 <AmiBlitz3.ab3@17350> BRA 'l2b
0002E07A <AmiBlitz3.ab3@17353>   ADD.l #$70ff,d1
0002E07E <AmiBlitz3.ab3@17354>   BSR writeword
0002E082 <AmiBlitz3.ab3@17355>   CMP.w #7,d2
0002E086 <AmiBlitz3.ab3@17356>   BNE 'l1d
0002E08C <AmiBlitz3.ab3@17357>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E090 <AmiBlitz3.ab3@17358>   BSR writelong
0002E092 <AmiBlitz3.ab3@17359>   MOVEQ #0,d1
0002E096 <AmiBlitz3.ab3@17360>   BSR writeword
0002E09C <AmiBlitz3.ab3@17361>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E0A0 <AmiBlitz3.ab3@17362>   BSR writelong
0002E0A2 <AmiBlitz3.ab3@17363>   MOVEQ #0,d1
0002E0A6 <AmiBlitz3.ab3@17364>   BSR writeword
0002E0AC <AmiBlitz3.ab3@17366> 'l1d  MOVE.l #$f23c5000,d1
0002E0AE <AmiBlitz3.ab3@17367>   MOVE.l d0,d2
0002E0B0 <AmiBlitz3.ab3@17368>   ASR.l #2,d2
0002E0B2 <AmiBlitz3.ab3@17369>   ADD.l d2,d1
0002E0B6 <AmiBlitz3.ab3@17370>   BSR writelong
0002E0BA <AmiBlitz3.ab3@17371>   MOVE.w #$ffff,d1
0002E0BE <AmiBlitz3.ab3@17372>   BSR writeword
0002E0C0 <AmiBlitz3.ab3@17376>   MOVE.l (a7)+,d1
0002E0C2 <AmiBlitz3.ab3@17377>      ADDQ.l #1,a1
0002E0C8 <AmiBlitz3.ab3@17378>      ADD.l #$0200,d0
0002E0CE <AmiBlitz3.ab3@17379>      CMP.l #$0e00,d0
0002E0D2 <AmiBlitz3.ab3@17380>      BEQ syntaxerr
0002E0D4 <AmiBlitz3.ab3@17381>      TST.b (a1)
0002E0D8 <AmiBlitz3.ab3@17382>      BNE 'again
0002E0DC <AmiBlitz3.ab3@17383> BRA 'p1
0002E0E0 <AmiBlitz3.ab3@17386>   TST.b $4(A2)
0002E0E4 <AmiBlitz3.ab3@17387>    BNE.w JL_0_B03E
0002E0E8 <AmiBlitz3.ab3@17390>   BSR.w JL_0_AFCA
0002E0EC <AmiBlitz3.ab3@17391>    BSR.w get1bytemain
0002E0F0 <AmiBlitz3.ab3@17392> BRA.w JL_0_B06C
0002E0F6 <AmiBlitz3.ab3@17396>   MOVE.w regnum,-(A7)
0002E100 <AmiBlitz3.ab3@17397>   MOVE.w regnum,regnumfunc
0002E102 <AmiBlitz3.ab3@17400>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002E10A <AmiBlitz3.ab3@17401>   MOVE.b #1,funccall
0002E10C <AmiBlitz3.ab3@17402>   MOVEQ.l #$00,D0
0002E110 <AmiBlitz3.ab3@17403>   MOVE.b $4(A2),D0
0002E11A <AmiBlitz3.ab3@17404>   MOVE.w a2offset,a2offset2
0002E122 <AmiBlitz3.ab3@17405>   MOVE.b 5(a2),retmode
0002E128 <AmiBlitz3.ab3@17406>   MOVE.l a2,currentfunccall
0002E12C <AmiBlitz3.ab3@17407>   LEA $16(A2),A2
0002E132 <AmiBlitz3.ab3@17408>   CLR.w regnum
0002E138 <AmiBlitz3.ab3@17409>   CLR.w regmask
0002E13E <AmiBlitz3.ab3@17410>   MOVE.b isconstantvalue,-(a7)
0002E144 <AmiBlitz3.ab3@17411>   MOVE.b funcparloop,-(a7)
0002E14C <AmiBlitz3.ab3@17412>   MOVE.b #1,funcparloop
0002E152 <AmiBlitz3.ab3@17413>   MOVE.l rightsidetype,-(a7)
0002E158 <AmiBlitz3.ab3@17414>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002E15E <AmiBlitz3.ab3@17415>   MOVE.b blitzparloop,-(a7)
0002E164 <AmiBlitz3.ab3@17416>   CLR.b blitzparloop
0002E16A <AmiBlitz3.ab3@17417>   JSR fetchpees2
0002E170 <AmiBlitz3.ab3@17418>   MOVE.b (a7)+,blitzparloop
0002E176 <AmiBlitz3.ab3@17419>   MOVE.l (a7)+,leftsidetype
0002E17C <AmiBlitz3.ab3@17420>   MOVE.l (a7)+,rightsidetype
0002E182 <AmiBlitz3.ab3@17421>   MOVE.b (a7)+,funcparloop
0002E188 <AmiBlitz3.ab3@17422>   MOVE.b (a7)+,isconstantvalue
0002E18E <AmiBlitz3.ab3@17423>   JSR chkstak
0002E190 <AmiBlitz3.ab3@17424>   MOVE.l (A7)+,D1
0002E194 <AmiBlitz3.ab3@17440>    BTST #0,d1
0002E198 <AmiBlitz3.ab3@17441>    BNE intern1
0002E19C <AmiBlitz3.ab3@17442>    BSR.w JL_0_AFCA
0002E1A2 <AmiBlitz3.ab3@17464>   MOVE.w (A7)+,regnum
0002E1A6 <AmiBlitz3.ab3@17467>   CMP.w #"}",D0
0002E1AA <AmiBlitz3.ab3@17468>    BNE.w errorbracketmiss2
0002E1AC <AmiBlitz3.ab3@17469>    MOVEQ #0,d1                                            ; end of function call pars
0002E1B2 <AmiBlitz3.ab3@17470>   MOVE.w regnum,D1
0002E1B6 <AmiBlitz3.ab3@17471>    BEQ.w JL_0_B08A
0002E1BC <AmiBlitz3.ab3@17472>    TST.b fpu
0002E1C0 <AmiBlitz3.ab3@17473>    BEQ 'old
0002E1C8 <AmiBlitz3.ab3@17474>    CMP.b #5,retmode
0002E1CC <AmiBlitz3.ab3@17475>    BNE 'old
0002E1CE <AmiBlitz3.ab3@17476>    ASL.l #7,d1
0002E1D4 <AmiBlitz3.ab3@17477>    OR.l #$f2000000,d1
0002E1D8 <AmiBlitz3.ab3@17478>    BSR writelong
0002E1DC <AmiBlitz3.ab3@17479> BRA JL_0_B08A
0002E1DE <AmiBlitz3.ab3@17481>  'old  LSL.w #8,D1
0002E1E0 <AmiBlitz3.ab3@17482>   LSL.w #1,D1
0002E1E4 <AmiBlitz3.ab3@17483>   ORI.w #$2000,D1
0002E1E8 <AmiBlitz3.ab3@17484>    BSR.w writeword
0002E1EA <AmiBlitz3.ab3@17487>    MOVE.w (A7)+,D3
0002E1EE <AmiBlitz3.ab3@17488>    BEQ.w JL_0_B0A8
0002E1F4 <AmiBlitz3.ab3@17489>    TST.b fpu
0002E1F8 <AmiBlitz3.ab3@17490>    BEQ 'old
0002E1FA <AmiBlitz3.ab3@17491>    MOVE.l d0,-(a7)
0002E1FE <AmiBlitz3.ab3@17492>    MOVE.w #8,d0
0002E200 <AmiBlitz3.ab3@17493>    MOVE.l a0,-(a7)
0002E206 <AmiBlitz3.ab3@17494>    MOVE.l stacktrack,d1
0002E20C <AmiBlitz3.ab3@17495>    LEA fpustackbase,a0
0002E214 <AmiBlitz3.ab3@17496>    MOVE.w 0(a0,d1),regmask
0002E216 <AmiBlitz3.ab3@17497>    MOVE.l (a7)+,a0
0002E21A <AmiBlitz3.ab3@17500>   BEQ 'ready
0002E220 <AmiBlitz3.ab3@17501>    BTST d0,regmask
0002E224 <AmiBlitz3.ab3@17502>    BEQ 'noa7
0002E226 <AmiBlitz3.ab3@17503>    MOVEQ #0,d1
0002E228 <AmiBlitz3.ab3@17504>    MOVE.w d0,d1
0002E22A <AmiBlitz3.ab3@17505>    SUBQ.w #1,d1
0002E22C <AmiBlitz3.ab3@17506>    ASL #7,d1
0002E232 <AmiBlitz3.ab3@17508>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002E236 <AmiBlitz3.ab3@17509>    BSR writelong
0002E23C <AmiBlitz3.ab3@17510>    SUBQ.l #2,stacktrack
0002E23E <AmiBlitz3.ab3@17513>    SUBQ.w #1,d0
0002E242 <AmiBlitz3.ab3@17514>    BNE 'loop
0002E248 <AmiBlitz3.ab3@17517>   SUBQ.l #2,stacktrack                                     ;integer sub
0002E24A <AmiBlitz3.ab3@17518>   MOVE.l (a7)+,d0
0002E24E <AmiBlitz3.ab3@17521>   MOVE.w #$4CDF,D1
0002E252 <AmiBlitz3.ab3@17522>    BSR.w writeword
0002E254 <AmiBlitz3.ab3@17523>   MOVEQ.l #$00,D1
0002E256 <AmiBlitz3.ab3@17524>   MOVEQ.l #$0F,D4
0002E258 <AmiBlitz3.ab3@17527>     LSL.w #1,D3
0002E25A <AmiBlitz3.ab3@17528>     ROXR.w #1,D1
0002E25E <AmiBlitz3.ab3@17529>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002E262 <AmiBlitz3.ab3@17531>     BSR.w writeword
0002E268 <AmiBlitz3.ab3@17532>    CLR.w regnumfunc
0002E26A <AmiBlitz3.ab3@17535>   MOVE.w (A7)+,D1
0002E26E <AmiBlitz3.ab3@17536>    BEQ.b JL_0_B0D2
0002E272 <AmiBlitz3.ab3@17537>   CMPI.w #$7,(A7)
0002E276 <AmiBlitz3.ab3@17538>    BEQ.b JL_0_B0C4
0002E27C <AmiBlitz3.ab3@17539>   LEA geta3,A0
0002E282 <AmiBlitz3.ab3@17540>   LEA numtoa0,A1
0002E286 <AmiBlitz3.ab3@17541>    BSR.w pokecode
0002E28A <AmiBlitz3.ab3@17542> BRA.b JL_0_B0CE
0002E290 <AmiBlitz3.ab3@17545>   MOVE.w deca3,D1
0002E294 <AmiBlitz3.ab3@17546>    BSR.w writeword
0002E298 <AmiBlitz3.ab3@17549>   BSR.w dopulla3                                           ;fix up string base
0002E29A <AmiBlitz3.ab3@17552>   MOVE.w (A7)+,D2                                          ;what it returns!
0002E29E <AmiBlitz3.ab3@17553>   CMP.w #$7,D2
0002E2A2 <AmiBlitz3.ab3@17554>    BNE.w JL_0_B0EC
0002E2A8 <AmiBlitz3.ab3@17555>   MOVE.w putstlen,D1
0002E2AE <AmiBlitz3.ab3@17556>   OR.w regnum,D1
0002E2B2 <AmiBlitz3.ab3@17557>    BSR.w writeword
0002E2B6 <AmiBlitz3.ab3@17560>   BSR.w get1bytemain
0002E2BA <AmiBlitz3.ab3@17561> BRA.w JL_0_AF66
0002E2BC <AmiBlitz3.ab3@17565> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002E2C4 <AmiBlitz3.ab3@17570>   CMP.b #2,optistring
0002E2C8 <AmiBlitz3.ab3@17571>   BEQ fs2
0002E2CC <AmiBlitz3.ab3@17572>   BSR.w makesbase                                          ;writestringvariable
0002E2D0 <AmiBlitz3.ab3@17573>   BTST #$F,D2
0002E2D4 <AmiBlitz3.ab3@17574>    BNE.w JL_0_B112
0002E2DA <AmiBlitz3.ab3@17575>   MOVE.w D3,leaa5d3a2+2
0002E2E0 <AmiBlitz3.ab3@17576>   MOVE.l leaa5d3a2,D1
0002E2E4 <AmiBlitz3.ab3@17577>    BSR.w pokela5s
0002E2EA <AmiBlitz3.ab3@17580>   MOVE.w regnum,D1
0002E2EC <AmiBlitz3.ab3@17581>   LSL.w #8,D1
0002E2EE <AmiBlitz3.ab3@17582>   LSL.w #1,D1
0002E2F2 <AmiBlitz3.ab3@17583>   ORI.w #$7000,D1
0002E2F8 <AmiBlitz3.ab3@17584>   LEA stvarget2,A0
0002E2FA <AmiBlitz3.ab3@17585>   MOVE.w D1,(A0)
0002E300 <AmiBlitz3.ab3@17586>   MOVE.w regnum,D1
0002E306 <AmiBlitz3.ab3@17587>   ANDI.w #$FFF8,$2(A0)
0002E30A <AmiBlitz3.ab3@17588>   OR.w D1,$2(A0)
0002E310 <AmiBlitz3.ab3@17589>   LEA stvarget2f,A1
0002E314 <AmiBlitz3.ab3@17590>    BSR.w pokecode
0002E318 <AmiBlitz3.ab3@17591>   MOVE.w #$C600,D1
0002E31C <AmiBlitz3.ab3@17592>    BSR.w Atokejsr
0002E31E <AmiBlitz3.ab3@17593>   MOVEQ.l #$07,D2
0002E322 <AmiBlitz3.ab3@17594> BRA.w reget
0002E328 <AmiBlitz3.ab3@17597>      TST.w stackpar
0002E32C <AmiBlitz3.ab3@17598>      BMI 'l10
0002E332 <AmiBlitz3.ab3@17599>      MOVE.l #$3f3c0007,d1
0002E338 <AmiBlitz3.ab3@17600>      ADDQ.w #2,a2offset
0002E33C <AmiBlitz3.ab3@17601>      BSR writelong
0002E340 <AmiBlitz3.ab3@17604>   MOVE.w #$4878,d1
0002E346 <AmiBlitz3.ab3@17605>      CLR.w stackpar
0002E34A <AmiBlitz3.ab3@17606>      BSR writeword
0002E34E <AmiBlitz3.ab3@17607>      MOVE.w #$0,d1
0002E352 <AmiBlitz3.ab3@17608>      BSR writeword
0002E356 <AmiBlitz3.ab3@17609>      MOVE.w #$246d,d1
0002E35A <AmiBlitz3.ab3@17610>      BSR writeword
0002E35C <AmiBlitz3.ab3@17611>      MOVE.w d3,d1
0002E360 <AmiBlitz3.ab3@17612>      BSR writeword
0002E366 <AmiBlitz3.ab3@17613>      MOVE.l #$4a926704,d1
0002E36A <AmiBlitz3.ab3@17614>      BSR writelong
0002E370 <AmiBlitz3.ab3@17615>      MOVE.l #$2eaafffc,d1
0002E374 <AmiBlitz3.ab3@17616>      BSR writelong
0002E378 <AmiBlitz3.ab3@17617>      MOVE.w #$2f0a,d1
0002E37E <AmiBlitz3.ab3@17618>      ADDQ.w #8,a2offset
0002E382 <AmiBlitz3.ab3@17619>      BSR writeword
0002E386 <AmiBlitz3.ab3@17620> BRA.w reget
0002E38A <AmiBlitz3.ab3@17623>   CMP.b #$7,D2                                             ;load basic var
0002E38E <AmiBlitz3.ab3@17624>    BEQ.w JL_0_B0F6
0002E394 <AmiBlitz3.ab3@17626>    TST.b iee
0002E398 <AmiBlitz3.ab3@17627>    BEQ 'noiee
0002E39C <AmiBlitz3.ab3@17628>    CMP.b #5,d2
0002E3A0 <AmiBlitz3.ab3@17629>    BNE 'noiee
0002E3A2 <AmiBlitz3.ab3@17630>    MOVE.l d0,-(a7)                                         ;fpu load var
0002E3A6 <AmiBlitz3.ab3@17631>    BTST #15,d2
0002E3AA <AmiBlitz3.ab3@17632>    BEQ 'var
0002E3B0 <AmiBlitz3.ab3@17633>    CMP.l #$7fff,d3
0002E3B4 <AmiBlitz3.ab3@17634>    BGT 'longoffset
0002E3BA <AmiBlitz3.ab3@17635>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002E3BC <AmiBlitz3.ab3@17636>    TST.w d3                                                ;offset =0
0002E3C0 <AmiBlitz3.ab3@17637>    BNE 'offset
0002E3C6 <AmiBlitz3.ab3@17640>   MOVE.l #$f2124400,d1
0002E3C8 <AmiBlitz3.ab3@17641>    MOVEQ #0,d3
0002E3CC <AmiBlitz3.ab3@17642> BRA 'glob
0002E3D2 <AmiBlitz3.ab3@17645>   SUBQ.l #4,destpointer
0002E3D6 <AmiBlitz3.ab3@17646> BRA 'glob
0002E3DC <AmiBlitz3.ab3@17649>   TST.b fast
0002E3E0 <AmiBlitz3.ab3@17650>    BEQ 'nofastload
0002E3E6 <AmiBlitz3.ab3@17651>    TST.w regnum
0002E3EA <AmiBlitz3.ab3@17652>    BNE 'nofastload
0002E3F0 <AmiBlitz3.ab3@17653>    CMP.l fp0addr,a4
0002E3F4 <AmiBlitz3.ab3@17654>    BNE 'nofastload
0002E3FA <AmiBlitz3.ab3@17655>    MOVE.l fp0iff,d1
0002E400 <AmiBlitz3.ab3@17656>    CMP.l firstiff,d1
0002E404 <AmiBlitz3.ab3@17657>    BNE 'nofastload
0002E40A <AmiBlitz3.ab3@17658>    MOVE.w varmode,d1
0002E410 <AmiBlitz3.ab3@17659>    CMP.w fp0mode,d1
0002E414 <AmiBlitz3.ab3@17660>    BNE 'nofastload
0002E41A <AmiBlitz3.ab3@17661>    CMP.w fp0var,d3
0002E41E <AmiBlitz3.ab3@17662>    BNE 'nofastload
0002E422 <AmiBlitz3.ab3@17663>    BCLR #16,d2
0002E424 <AmiBlitz3.ab3@17664>    MOVE.l (a7)+,d0
0002E426 <AmiBlitz3.ab3@17665> RTS
0002E428 <AmiBlitz3.ab3@17668>    MOVEQ #0,d0
0002E42E <AmiBlitz3.ab3@17669>    MOVE.w regnum,d0
0002E434 <AmiBlitz3.ab3@17670>    CMP.l maxregs,d0
0002E438 <AmiBlitz3.ab3@17671>    BLE 'ok
0002E43E <AmiBlitz3.ab3@17672>    LEA cmplxerr,a0
0002E440 <AmiBlitz3.ab3@17673>   MOVE.l a0,-(a7)
0002E446 <AmiBlitz3.ab3@17674> JMP handle_compileerror
0002E44C <AmiBlitz3.ab3@17677>    LEA regtable,a4
0002E44E <AmiBlitz3.ab3@17678>    TST.l (a4)
0002E452 <AmiBlitz3.ab3@17679>    BEQ 'noreg
0002E456 <AmiBlitz3.ab3@17680>    CMP.w 0+4(a4),d3
0002E45A <AmiBlitz3.ab3@17681>    BNE 'doreg1
0002E460 <AmiBlitz3.ab3@17682>    MOVE.l #$f2001c00,d1
0002E466 <AmiBlitz3.ab3@17683>    MOVE.w regnum,d0
0002E468 <AmiBlitz3.ab3@17684>    ASL.w #7,d0
0002E46A <AmiBlitz3.ab3@17685>    OR.w d0,d1
0002E46E <AmiBlitz3.ab3@17686>    BSR writelong
0002E470 <AmiBlitz3.ab3@17687>    MOVE.l (a7)+,d0
0002E472 <AmiBlitz3.ab3@17688> RTS
0002E476 <AmiBlitz3.ab3@17691>   CMP.w 8+4(a4),d3
0002E47A <AmiBlitz3.ab3@17692>    BNE 'doreg2
0002E480 <AmiBlitz3.ab3@17693>    MOVE.l #$f2001800,d1
0002E486 <AmiBlitz3.ab3@17694>    MOVE.w regnum,d0
0002E488 <AmiBlitz3.ab3@17695>    ASL.w #7,d0
0002E48A <AmiBlitz3.ab3@17696>    OR.w d0,d1
0002E48E <AmiBlitz3.ab3@17697>    BSR writelong
0002E490 <AmiBlitz3.ab3@17698>    MOVE.l (a7)+,d0
0002E492 <AmiBlitz3.ab3@17699> RTS
0002E496 <AmiBlitz3.ab3@17702>   CMP.w 16+4(a4),d3
0002E49A <AmiBlitz3.ab3@17703>    BNE 'doreg3
0002E4A0 <AmiBlitz3.ab3@17704>    MOVE.l #$f2001400,d1
0002E4A6 <AmiBlitz3.ab3@17705>    MOVE.w regnum,d0
0002E4A8 <AmiBlitz3.ab3@17706>    ASL.w #7,d0
0002E4AA <AmiBlitz3.ab3@17707>    OR.w d0,d1
0002E4AE <AmiBlitz3.ab3@17708>    BSR  writelong
0002E4B0 <AmiBlitz3.ab3@17709>    MOVE.l (a7)+,d0
0002E4B2 <AmiBlitz3.ab3@17710> RTS
0002E4B6 <AmiBlitz3.ab3@17713>   CMP.w 24+4(a4),d3
0002E4BA <AmiBlitz3.ab3@17714>    BNE 'doreg4
0002E4C0 <AmiBlitz3.ab3@17715>    MOVE.l #$f2001000,d1
0002E4C6 <AmiBlitz3.ab3@17716>    MOVE.w regnum,d0
0002E4C8 <AmiBlitz3.ab3@17717>    ASL.w #7,d0
0002E4CA <AmiBlitz3.ab3@17718>    OR.w d0,d1
0002E4CE <AmiBlitz3.ab3@17719>    BSR writelong
0002E4D0 <AmiBlitz3.ab3@17720>    MOVE.l (a7)+,d0
0002E4D2 <AmiBlitz3.ab3@17721> RTS
0002E4D6 <AmiBlitz3.ab3@17724>    CMP.w 32+4(a4),d3
0002E4DA <AmiBlitz3.ab3@17725>    BNE 'noreg
0002E4E0 <AmiBlitz3.ab3@17726>    MOVE.l #$f2000c00,d1
0002E4E6 <AmiBlitz3.ab3@17727>    MOVE.w regnum,d0
0002E4E8 <AmiBlitz3.ab3@17728>    ASL.w #7,d0
0002E4EA <AmiBlitz3.ab3@17729>    OR.w d0,d1
0002E4EE <AmiBlitz3.ab3@17730>    BSR writelong
0002E4F0 <AmiBlitz3.ab3@17731>    MOVE.l (a7)+,d0
0002E4F2 <AmiBlitz3.ab3@17732> RTS
0002E4F8 <AmiBlitz3.ab3@17735>    MOVE.l #$f22d4400,d1                                    ;var
0002E4FE <AmiBlitz3.ab3@17736>    TST.w varmode
0002E502 <AmiBlitz3.ab3@17737>   BEQ 'glob
0002E506 <AmiBlitz3.ab3@17738>   BCLR #16,d1                                              ;local
0002E508 <AmiBlitz3.ab3@17741>    MOVEQ #0,d0
0002E50E <AmiBlitz3.ab3@17742>    MOVE.w regnum,d0
0002E512 <AmiBlitz3.ab3@17743>    CMP.w #7,d0
0002E516 <AmiBlitz3.ab3@17744>    BLE 'ok2
0002E51C <AmiBlitz3.ab3@17745>    LEA cmplxerr,a0
0002E51E <AmiBlitz3.ab3@17746>   MOVE.l a0,-(a7)
0002E524 <AmiBlitz3.ab3@17747> JMP handle_compileerror
0002E526 <AmiBlitz3.ab3@17750>      ASL.w #7,d0
0002E528 <AmiBlitz3.ab3@17751>    OR.l d0,d1
0002E530 <AmiBlitz3.ab3@17752>    CMP.l #doublecheck,8(a2)
0002E534 <AmiBlitz3.ab3@17753>    BNE 'dbl
0002E53A <AmiBlitz3.ab3@17754>    OR.l #$00001000,d1
0002E53E <AmiBlitz3.ab3@17757>   BSR writelong
0002E540 <AmiBlitz3.ab3@17758>    MOVE.l (a7)+,d0
0002E544 <AmiBlitz3.ab3@17759>    AND.w #$ff,d2
0002E546 <AmiBlitz3.ab3@17760>    MOVE.w d3,d1
0002E54A <AmiBlitz3.ab3@17761>    BEQ 'nooffs
0002E54E <AmiBlitz3.ab3@17762> BRA writeword
0002E550 <AmiBlitz3.ab3@17767> RTS
0002E556 <AmiBlitz3.ab3@17770>   MOVE.w regnum,D1
0002E55C <AmiBlitz3.ab3@17771>   MOVE.w d1,load_var_reg
0002E55E <AmiBlitz3.ab3@17772>   LSL.w #8,D1
0002E568 <AmiBlitz3.ab3@17773>   MOVE.l destpointer,load_var_addr
0002E56E <AmiBlitz3.ab3@17774>   MOVE.w d2,load_var_size
0002E570 <AmiBlitz3.ab3@17775>   LSL.w #1,D1
0002E574 <AmiBlitz3.ab3@17776>   BTST #$E,D2
0002E578 <AmiBlitz3.ab3@17777>    BNE.w JL_0_B17A
0002E57A <AmiBlitz3.ab3@17778>   TST.b D2
0002E57E <AmiBlitz3.ab3@17779>    BNE.w JL_0_B17E
0002E580 <AmiBlitz3.ab3@17780>   MOVEQ.l #$03,D2
0002E584 <AmiBlitz3.ab3@17781>   ORI.w #$200A,D1
0002E588 <AmiBlitz3.ab3@17782> BRA.w writeword
0002E58C <AmiBlitz3.ab3@17785>   MOVE.b #$3,D2
0002E590 <AmiBlitz3.ab3@17788>   BTST #$F,D2
0002E594 <AmiBlitz3.ab3@17789>    BEQ.w JL_0_B19A                                         ;loadarray
0002E59A <AmiBlitz3.ab3@17790>    TST.b fast                                              ;lea->move xx(a2)
0002E59E <AmiBlitz3.ab3@17791>    BEQ 'la10
0002E5A4 <AmiBlitz3.ab3@17796>    CLR.l load_var_addr
0002E5A8 <AmiBlitz3.ab3@17797> BRA 'la10
0002E5B0 <AmiBlitz3.ab3@17799>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002E5B4 <AmiBlitz3.ab3@17800>    BNE 'la10
0002E5BA <AmiBlitz3.ab3@17801>    TST.b optiarray
0002E5BE <AmiBlitz3.ab3@17802>    BNE 'la10
0002E5C4 <AmiBlitz3.ab3@17803>    MOVE.l destpointer,a4
0002E5CA <AmiBlitz3.ab3@17804>    SUB.l loada,a4
0002E5CE <AmiBlitz3.ab3@17805>    CMP.w #4,a4
0002E5D2 <AmiBlitz3.ab3@17806>    BEQ 'la100
0002E5D6 <AmiBlitz3.ab3@17807>    CMP.w #2,a4
0002E5DA <AmiBlitz3.ab3@17808>    BNE 'la10
0002E5E0 <AmiBlitz3.ab3@17809>    MOVE.l destpointer,a4
0002E5E4 <AmiBlitz3.ab3@17810>    CMP.b #3,d2
0002E5E8 <AmiBlitz3.ab3@17811>    BCS 'la110
0002E5EE <AmiBlitz3.ab3@17812>    MOVE.w #$202a,-2(a4)
0002E5F2 <AmiBlitz3.ab3@17813>    OR.w d1,-2(a4)
0002E5F8 <AmiBlitz3.ab3@17814>    MOVE.w arrayoffset,d1
0002E5FC <AmiBlitz3.ab3@17815>    BSR writeword
0002E600 <AmiBlitz3.ab3@17816> BRA JL_0_B194
0002E604 <AmiBlitz3.ab3@17819>    CMP.b #2,d2
0002E608 <AmiBlitz3.ab3@17820>    BNE 'la120
0002E60E <AmiBlitz3.ab3@17821>     MOVE.w #$302a,-2(a4)
0002E612 <AmiBlitz3.ab3@17822>    OR.w d1,-2(a4)
0002E618 <AmiBlitz3.ab3@17824>    MOVE.w arrayoffset,d1
0002E61C <AmiBlitz3.ab3@17825>    BSR writeword
0002E620 <AmiBlitz3.ab3@17826> BRA JL_0_B194
0002E624 <AmiBlitz3.ab3@17829>   CMP.b #1,d2
0002E628 <AmiBlitz3.ab3@17830>    BNE.s 'la10
0002E62E <AmiBlitz3.ab3@17831>     MOVE.w #$102a,-2(a4)
0002E632 <AmiBlitz3.ab3@17832>    OR.w d1,-2(a4)
0002E638 <AmiBlitz3.ab3@17833>    MOVE.w arrayoffset,d1
0002E63C <AmiBlitz3.ab3@17834>    BSR writeword
0002E640 <AmiBlitz3.ab3@17835> BRA JL_0_B194
0002E646 <AmiBlitz3.ab3@17838>   MOVE.l destpointer,a4
0002E64C <AmiBlitz3.ab3@17839>    CMP.w #$45ea,-2(a4)
0002E650 <AmiBlitz3.ab3@17840>    BNE 'la10
0002E654 <AmiBlitz3.ab3@17841>    CMP.b #3,d2
0002E658 <AmiBlitz3.ab3@17842>    BCS 'la11
0002E65E <AmiBlitz3.ab3@17843>    MOVE.w #$202a,-4(a4)
0002E662 <AmiBlitz3.ab3@17844>    OR.w d1,-4(a4)
0002E666 <AmiBlitz3.ab3@17845> BRA JL_0_B194
0002E66A <AmiBlitz3.ab3@17848>    CMP.b #2,d2
0002E66E <AmiBlitz3.ab3@17849>    BNE 'la12
0002E674 <AmiBlitz3.ab3@17850>     MOVE.w #$302a,-4(a4)
0002E678 <AmiBlitz3.ab3@17851>    OR.w d1,-4(a4)
0002E67C <AmiBlitz3.ab3@17852> BRA JL_0_B194
0002E680 <AmiBlitz3.ab3@17855>   CMP.b #1,d2
0002E684 <AmiBlitz3.ab3@17856>    BNE.s 'la10
0002E68A <AmiBlitz3.ab3@17857>     MOVE.w #$102a,-4(a4)
0002E68E <AmiBlitz3.ab3@17858>    OR.w d1,-4(a4)
0002E692 <AmiBlitz3.ab3@17859> BRA JL_0_B194
0002E698 <AmiBlitz3.ab3@17862>    OR.w movea2dn,D1
0002E69C <AmiBlitz3.ab3@17863>    BSR.w JL_0_B1B2
0002E6A0 <AmiBlitz3.ab3@17864>    BSR.w writeword
0002E6A4 <AmiBlitz3.ab3@17867>   ANDI.w #$FF,D2
0002E6A6 <AmiBlitz3.ab3@17868> RTS
0002E6AC <AmiBlitz3.ab3@17872>    MOVE.l destpointer,a4
0002E6B4 <AmiBlitz3.ab3@17873>    MOVE.l #$f22a4400,-4(a4)
0002E6BA <AmiBlitz3.ab3@17874>    MOVE.w arrayoffset,d1
0002E6BE <AmiBlitz3.ab3@17875> BRA writeword
0002E6C4 <AmiBlitz3.ab3@17879>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002E6C8 <AmiBlitz3.ab3@17880>    BSR.w JL_0_B1B2
0002E6CC <AmiBlitz3.ab3@17881>    BSR.w pokewda5s
0002E6CE <AmiBlitz3.ab3@17882>   MOVE.w D3,D1
0002E6D2 <AmiBlitz3.ab3@17883>    BSR.w writeword
0002E6D6 <AmiBlitz3.ab3@17884> BRA.w JL_0_B194
0002E6DA <AmiBlitz3.ab3@17887>   BTST #$E,D2
0002E6DE <AmiBlitz3.ab3@17888>    BNE.w JL_0_B1CA
0002E6E2 <AmiBlitz3.ab3@17889>   CMP.b #$1,D2
0002E6E6 <AmiBlitz3.ab3@17890>    BEQ.w JL_0_B1CC
0002E6EA <AmiBlitz3.ab3@17891>   CMP.b #$2,D2
0002E6EE <AmiBlitz3.ab3@17892>    BEQ.w JL_0_B1D2
0002E6F0 <AmiBlitz3.ab3@17895> RTS
0002E6F4 <AmiBlitz3.ab3@17898>   EORI.w #$3000,D1
0002E6F6 <AmiBlitz3.ab3@17899> RTS
0002E6FA <AmiBlitz3.ab3@17902>   ORI.w #$1000,D1
0002E6FC <AmiBlitz3.ab3@17903> RTS
0002E704 <AmiBlitz3.ab3@17907>   MOVE.w #$FFFF,dfetch
0002E708 <AmiBlitz3.ab3@17908>   BSR.w get1bytemain
0002E70C <AmiBlitz3.ab3@17909>   CMP.w #$2D,D0
0002E710 <AmiBlitz3.ab3@17910>    BNE.w JL_0_B206
0002E714 <AmiBlitz3.ab3@17911>   BSR.w get1bytemain
0002E718 <AmiBlitz3.ab3@17912>   BSR.w JL_0_B206
0002E71C <AmiBlitz3.ab3@17913>   CMP.w #$5,D2
0002E720 <AmiBlitz3.ab3@17914>    BCC.w JL_0_B200
0002E722 <AmiBlitz3.ab3@17915>   NEG.l D0
0002E724 <AmiBlitz3.ab3@17916> RTS
0002E72A <AmiBlitz3.ab3@17919>   TST.b fpu
0002E72E <AmiBlitz3.ab3@17920>   BEQ 'noneg
0002E732 <AmiBlitz3.ab3@17921>   fneg.x fp0
0002E734 <AmiBlitz3.ab3@17922> RTS
0002E738 <AmiBlitz3.ab3@17925>   BCHG #$7,D0
0002E73A <AmiBlitz3.ab3@17926> RTS
0002E73E <AmiBlitz3.ab3@17929>   CMP.w #$24,D0
0002E742 <AmiBlitz3.ab3@17930>    BEQ.w get_hexconstant
0002E746 <AmiBlitz3.ab3@17931>   CMP.w #$25,D0
0002E74A <AmiBlitz3.ab3@17932>    BEQ.w JL_0_A8C0
0002E74E <AmiBlitz3.ab3@17933>   CMP.w #$2E,D0
0002E752 <AmiBlitz3.ab3@17934>    BNE.w JL_0_B224
0002E754 <AmiBlitz3.ab3@17937>   MOVEQ.l #$00,D3
0002E758 <AmiBlitz3.ab3@17938> BRA.w JL_0_B272
0002E75A <AmiBlitz3.ab3@17941>   MOVEQ.l #$00,D3                                          ;number
0002E75E <AmiBlitz3.ab3@17942>    BSR.w atoi
0002E762 <AmiBlitz3.ab3@17943>   CMP.w #$2E,D0
0002E766 <AmiBlitz3.ab3@17944>    BEQ.w JL_0_B268
0002E76A <AmiBlitz3.ab3@17945>   ORI.w #$20,D0
0002E76E <AmiBlitz3.ab3@17946>   CMP.w #$65,D0
0002E772 <AmiBlitz3.ab3@17947>    BNE.w JL_0_B46E
0002E778 <AmiBlitz3.ab3@17948>   CMP.l #$800000,D3
0002E77C <AmiBlitz3.ab3@17949>    BCC.w overerr
0002E77E <AmiBlitz3.ab3@17950>   MOVEQ.l #-$01,D6
0002E782 <AmiBlitz3.ab3@17951>   fmove.l d3,fp0
0002E784 <AmiBlitz3.ab3@17952>   MOVE.l D3,D0
0002E78A <AmiBlitz3.ab3@17953>   MOVEA.l _mathffpbase,A6
0002E78E <AmiBlitz3.ab3@17954>    JSR -$24(A6)
0002E790 <AmiBlitz3.ab3@17955>   MOVE.l D0,D3
0002E794 <AmiBlitz3.ab3@17956>    BSR.w JL_0_B2E6
0002E798 <AmiBlitz3.ab3@17957>    BSR.w reget
0002E79C <AmiBlitz3.ab3@17958>    BSR.w JL_0_B480
0002E7A0 <AmiBlitz3.ab3@17959> BRA.w JL_0_B3DC
0002E7A4 <AmiBlitz3.ab3@17962>   CMP.b #4,d2
0002E7A8 <AmiBlitz3.ab3@17963>   BEQ 'l4
0002E7AC <AmiBlitz3.ab3@17964>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002E7B2 <AmiBlitz3.ab3@17967>    TST.b fpu
0002E7B6 <AmiBlitz3.ab3@17968>    BNE 'l1
0002E7BC <AmiBlitz3.ab3@17969>    CMP.l #$800000,D3
0002E7C0 <AmiBlitz3.ab3@17970>    BCC.w overerr
0002E7C4 <AmiBlitz3.ab3@17971> BRA JL_0_B272
0002E7CA <AmiBlitz3.ab3@17974>   CMP.l #$7fffffff,d3
0002E7CE <AmiBlitz3.ab3@17975>     BCC.w overerr
0002E7D0 <AmiBlitz3.ab3@17978>   MOVEQ.l #-$01,D6
0002E7D2 <AmiBlitz3.ab3@17979>   MOVE.l D3,D0
0002E7D6 <AmiBlitz3.ab3@17980>   fmove.l d3,fp0
0002E7DC <AmiBlitz3.ab3@17981>   MOVEA.l _mathffpbase,A6
0002E7E0 <AmiBlitz3.ab3@17982>    JSR -$24(A6)                                            ;integer to ffp
0002E7E2 <AmiBlitz3.ab3@17983>   MOVE.l D0,-(A7)
0002E7E6 <AmiBlitz3.ab3@17984>    BSR.w get1bytemain
0002E7EA <AmiBlitz3.ab3@17985>    BSR.w tstnum
0002E7EE <AmiBlitz3.ab3@17986>    BNE.w syntaxerr
0002E7F0 <AmiBlitz3.ab3@17987>   MOVEQ.l #$00,D3
0002E7F4 <AmiBlitz3.ab3@17988>    BSR.w atoi
0002E7F6 <AmiBlitz3.ab3@17989>   TST.l D3
0002E7FA <AmiBlitz3.ab3@17990>    BEQ.w JL_0_B2E0
0002E800 <AmiBlitz3.ab3@17991>   TST.b fpu
0002E804 <AmiBlitz3.ab3@17992>   BNE 'l1
0002E80A <AmiBlitz3.ab3@17993>   CMP.l #$800000,D3
0002E80E <AmiBlitz3.ab3@17994>    BCC.w overerr
0002E812 <AmiBlitz3.ab3@17995> BRA 'l2
0002E818 <AmiBlitz3.ab3@17998>   CMP.l #$7fffffff,d3
0002E81C <AmiBlitz3.ab3@17999>   BCC overerr
0002E820 <AmiBlitz3.ab3@18002>   fmove.l d5,fp1
0002E822 <AmiBlitz3.ab3@18003>   MOVE.l D5,D0
0002E826 <AmiBlitz3.ab3@18004>    JSR -$24(A6)
0002E828 <AmiBlitz3.ab3@18005>   MOVE.l D0,D5
0002E82C <AmiBlitz3.ab3@18006>   fmove.l d3,fp2
0002E82E <AmiBlitz3.ab3@18007>   MOVE.l D3,D0
0002E832 <AmiBlitz3.ab3@18008>    JSR -$24(A6)
0002E836 <AmiBlitz3.ab3@18009>   fdiv.x fp1,fp2
0002E838 <AmiBlitz3.ab3@18010>   MOVE.l D5,D1
0002E83C <AmiBlitz3.ab3@18011>    JSR -$54(A6)
0002E840 <AmiBlitz3.ab3@18012>   fadd.x fp2,fp0
0002E842 <AmiBlitz3.ab3@18013>   MOVE.l (A7)+,D1
0002E846 <AmiBlitz3.ab3@18014>    JSR -$42(A6)
0002E848 <AmiBlitz3.ab3@18015>   MOVE.l D0,D3
0002E84C <AmiBlitz3.ab3@18016>    BSR.w reget
0002E850 <AmiBlitz3.ab3@18017>   ORI.w #$20,D0
0002E854 <AmiBlitz3.ab3@18018>   CMP.w #$65,D0
0002E858 <AmiBlitz3.ab3@18019>    BNE.w JL_0_B2D4
0002E85C <AmiBlitz3.ab3@18020>    BSR.w JL_0_B2E6
0002E860 <AmiBlitz3.ab3@18023>    BSR.w reget
0002E864 <AmiBlitz3.ab3@18024>    BSR.w JL_0_B480
0002E868 <AmiBlitz3.ab3@18025> BRA.w JL_0_B3DC
0002E86A <AmiBlitz3.ab3@18028>   MOVE.l (A7)+,D3
0002E86E <AmiBlitz3.ab3@18029> BRA.w JL_0_B2D4
0002E872 <AmiBlitz3.ab3@18032>   BSR.w get1bytemain
0002E876 <AmiBlitz3.ab3@18033>   CMP.w #$2B,D0
0002E87A <AmiBlitz3.ab3@18034>    BEQ.w JL_0_B30E
0002E87E <AmiBlitz3.ab3@18035>   CMP.w #$2D,D0
0002E882 <AmiBlitz3.ab3@18036>    BNE.w JL_0_B312
0002E886 <AmiBlitz3.ab3@18037>    BSR.w get1bytemain
0002E88A <AmiBlitz3.ab3@18038>    BSR.w getsign
0002E88C <AmiBlitz3.ab3@18039>   MOVE.l D3,D0
0002E890 <AmiBlitz3.ab3@18040>   fdiv.x fp1,fp0
0002E892 <AmiBlitz3.ab3@18041>   MOVE.l D4,D1
0002E896 <AmiBlitz3.ab3@18042>    JSR -$54(A6)
0002E898 <AmiBlitz3.ab3@18043>   MOVE.l D0,D3
0002E89A <AmiBlitz3.ab3@18044> RTS
0002E89E <AmiBlitz3.ab3@18047>   BSR.w get1bytemain
0002E8A2 <AmiBlitz3.ab3@18050>   BSR.w getsign
0002E8A6 <AmiBlitz3.ab3@18051>   fmul.x fp1,fp0
0002E8A8 <AmiBlitz3.ab3@18052>   MOVE.l D3,D0
0002E8AA <AmiBlitz3.ab3@18053>   MOVE.l D4,D1
0002E8AE <AmiBlitz3.ab3@18054>    JSR -$4E(A6)
0002E8B0 <AmiBlitz3.ab3@18055>   MOVE.l D0,D3
0002E8B2 <AmiBlitz3.ab3@18056> RTS
0002E8B6 <AmiBlitz3.ab3@18059>   BSR.w tstnum
0002E8BA <AmiBlitz3.ab3@18060>    BNE.w syntaxerr
0002E8BC <AmiBlitz3.ab3@18061>   MOVE.w D0,D4
0002E8C0 <AmiBlitz3.ab3@18062>   SUBI.w #$30,D4
0002E8C4 <AmiBlitz3.ab3@18063>    BSR.w get1bytemain
0002E8C8 <AmiBlitz3.ab3@18064>    BSR.w tstnum
0002E8CC <AmiBlitz3.ab3@18065>    BNE.w getsign__skip
0002E8D0 <AmiBlitz3.ab3@18066>   MULU #$A,D4
0002E8D4 <AmiBlitz3.ab3@18067>   SUBI.w #$30,D0
0002E8D6 <AmiBlitz3.ab3@18068>   ADD.w D0,D4
0002E8DA <AmiBlitz3.ab3@18069>    BSR.w get1bytemain
0002E8DE <AmiBlitz3.ab3@18072>   CMP.w #$12,D4
0002E8E2 <AmiBlitz3.ab3@18073>    BHI.w overerr
0002E8E4 <AmiBlitz3.ab3@18074>   LSL.w #3,D4
0002E8EA <AmiBlitz3.ab3@18075>   LEA fputab,a0
0002E8EC <AmiBlitz3.ab3@18076>   ADD.l d4,a0
0002E8F2 <AmiBlitz3.ab3@18077>   fmove.d 0(a0),fp1
0002E8F4 <AmiBlitz3.ab3@18078>   LSR.w #1,d4
0002E8F8 <AmiBlitz3.ab3@18079>   MOVE.l facts(PC,D4.W),D4
0002E8FA <AmiBlitz3.ab3@18080> RTS
0002E942 <AmiBlitz3.ab3@18084>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002E946 <AmiBlitz3.ab3@18089>   Dc.l $80000041
0002E94A <AmiBlitz3.ab3@18090>   Dc.l $A0000044
0002E94E <AmiBlitz3.ab3@18091>   Dc.l $C8000047
0002E952 <AmiBlitz3.ab3@18092>   Dc.l $FA00004A
0002E956 <AmiBlitz3.ab3@18093>   Dc.l $9C40004E
0002E95A <AmiBlitz3.ab3@18094>   Dc.l $C3500051
0002E95E <AmiBlitz3.ab3@18095>   Dc.l $F4240054
0002E962 <AmiBlitz3.ab3@18096>   Dc.l $98968058
0002E966 <AmiBlitz3.ab3@18097>   Dc.l $BEBC205B
0002E96A <AmiBlitz3.ab3@18098>   Dc.l $EE6B285E
0002E96E <AmiBlitz3.ab3@18099>   Dc.l $9502F962
0002E972 <AmiBlitz3.ab3@18100>   Dc.l $BA43B765
0002E976 <AmiBlitz3.ab3@18101>   Dc.l $E8D4A568
0002E97A <AmiBlitz3.ab3@18102>   Dc.l $9184E76C
0002E97E <AmiBlitz3.ab3@18103>   Dc.l $B5E6A96F
0002E982 <AmiBlitz3.ab3@18104>   Dc.l $E35F2972
0002E986 <AmiBlitz3.ab3@18105>   Dc.l $8E1BCA76
0002E98A <AmiBlitz3.ab3@18106>   Dc.l $B1A2BD79
0002E98E <AmiBlitz3.ab3@18107>   Dc.l $DE0B6C7C
0002E990 <AmiBlitz3.ab3@18111>   MOVEQ.l #$01,D5
0002E992 <AmiBlitz3.ab3@18114>   LSL.l #1,D5
0002E994 <AmiBlitz3.ab3@18115>   MOVE.l D5,D1
0002E996 <AmiBlitz3.ab3@18116>   LSL.l #2,D5
0002E998 <AmiBlitz3.ab3@18117>   ADD.l D1,D5                                              ;divisor for frac convert!
0002E99A <AmiBlitz3.ab3@18118>   LSL.l #1,D3
0002E99E <AmiBlitz3.ab3@18119>    BCS.w overerr
0002E9A0 <AmiBlitz3.ab3@18120>   MOVE.l D3,D1
0002E9A2 <AmiBlitz3.ab3@18121>   LSL.l #1,D3
0002E9A6 <AmiBlitz3.ab3@18122>    BCS.w overerr
0002E9A8 <AmiBlitz3.ab3@18123>   LSL.l #1,D3
0002E9AC <AmiBlitz3.ab3@18124>    BCS.w overerr
0002E9AE <AmiBlitz3.ab3@18125>   ADD.l D1,D3
0002E9B2 <AmiBlitz3.ab3@18126>   SUBI.w #$30,D0
0002E9B4 <AmiBlitz3.ab3@18127>   ADD.l D0,D3
0002E9E0 <AmiBlitz3.ab3@18128>    !fget                                                   ;bsr.w get1bytemain
0002E9E4 <AmiBlitz3.ab3@18129>    CMP.b #1,d0
0002E9E8 <AmiBlitz3.ab3@18130>    BNE 'cm1
0002E9EA <AmiBlitz3.ab3@18131>    SUBQ.l #1,a5
0002E9EE <AmiBlitz3.ab3@18132>    BSR get1bytemain                                        ;??wy not !fget
0002E9F2 <AmiBlitz3.ab3@18135>   CMP.b #$7e,d0
0002E9F6 <AmiBlitz3.ab3@18136>    BNE 'cm2
0002E9F8 <AmiBlitz3.ab3@18137>    SUBQ.l #1,a5
0002E9FC <AmiBlitz3.ab3@18138>    BSR get1bytemain
0002E9FE <AmiBlitz3.ab3@18141>   TST.b d0
0002EA02 <AmiBlitz3.ab3@18142>    BPL 'l10
0002EA04 <AmiBlitz3.ab3@18143>    LSL.w #8,d0
0002EA06 <AmiBlitz3.ab3@18144>    MOVE.b (a5)+,d0
0002EA0C <AmiBlitz3.ab3@18145>    MOVE.w d0,lastchar
0002EA1E <AmiBlitz3.ab3@18148>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002EA22 <AmiBlitz3.ab3@18149>    BEQ.w atoi__loop
0002EA24 <AmiBlitz3.ab3@18150> RTS
0002EA26 <AmiBlitz3.ab3@18153> dfetch:  Ds.w 1                                            ;fetching data?
0002EA2A <AmiBlitz3.ab3@18157>   MOVE.w dfetch(PC),D1
0002EA2E <AmiBlitz3.ab3@18158>    BEQ.w JL_0_B3EC
0002EA34 <AmiBlitz3.ab3@18159>   CLR.w dfetch
0002EA36 <AmiBlitz3.ab3@18160> RTS
0002EA3C <AmiBlitz3.ab3@18163>   MOVE.b d2,isconstantvalue
0002EA42 <AmiBlitz3.ab3@18164>   MOVE.l d0,lastconstantvalue
0002EA48 <AmiBlitz3.ab3@18165>   MOVE.w d2,imm_size
0002EA52 <AmiBlitz3.ab3@18166>   MOVE.w regnum,imm_reg
0002EA5C <AmiBlitz3.ab3@18167>   MOVE.l destpointer,imm_addr                           ; long
0002EA60 <AmiBlitz3.ab3@18168>   CMP.w #$3,D2
0002EA64 <AmiBlitz3.ab3@18169>   BEQ.w JL_0_B434
0002EA68 <AmiBlitz3.ab3@18170>   CMP.w #$5,D2                                          ;float
0002EA6C <AmiBlitz3.ab3@18171>   BEQ.w JL_0_B434
0002EA70 <AmiBlitz3.ab3@18172>   CMP.w #$1,D2
0002EA74 <AmiBlitz3.ab3@18173>   BEQ.w JL_0_B418
0002EA78 <AmiBlitz3.ab3@18174>   CMP.w #$2,D2
0002EA7C <AmiBlitz3.ab3@18175>   BEQ.w JL_0_B418
0002EA80 <AmiBlitz3.ab3@18176>   CMP.w #$4,D2
0002EA84 <AmiBlitz3.ab3@18177>   BEQ.w JL_0_B434
0002EA88 <AmiBlitz3.ab3@18179> BRA.w mismatcherr
0002EA8E <AmiBlitz3.ab3@18182>   MOVE.w regnum,D1
0002EA90 <AmiBlitz3.ab3@18183>   LSL.w #8,D1
0002EA92 <AmiBlitz3.ab3@18184>   LSL.w #1,D1
0002EA96 <AmiBlitz3.ab3@18185>   ORI.w #$303C,D1
0002EA9A <AmiBlitz3.ab3@18186>    BSR.w writeword
0002EA9C <AmiBlitz3.ab3@18187>   MOVE.w D0,D1
0002EAA0 <AmiBlitz3.ab3@18188>    BSR.w writeword
0002EAA4 <AmiBlitz3.ab3@18189> BRA.w reget
0002EAA6 <AmiBlitz3.ab3@18192>   MOVEQ #0,d1
0002EAAC <AmiBlitz3.ab3@18193>   MOVE.w regnum,D1
0002EAB2 <AmiBlitz3.ab3@18194>   TST.b fpu
0002EAB6 <AmiBlitz3.ab3@18195>   BEQ 'f1
0002EABA <AmiBlitz3.ab3@18196>   CMP.w #5,d2
0002EABE <AmiBlitz3.ab3@18197>   BEQ 'l10
0002EAC2 <AmiBlitz3.ab3@18198> BRA 'f2
0002EAC8 <AmiBlitz3.ab3@18201>   TST.b iee
0002EACC <AmiBlitz3.ab3@18202>   BNE 'l10
0002EACE <AmiBlitz3.ab3@18205>   LSL.w #8,D1
0002EAD0 <AmiBlitz3.ab3@18206>   LSL.w #1,D1
0002EAD4 <AmiBlitz3.ab3@18207>   ORI.w #$203C,D1
0002EAD8 <AmiBlitz3.ab3@18208>    BSR.w writeword
0002EADA <AmiBlitz3.ab3@18209>   MOVE.l D0,D1
0002EADE <AmiBlitz3.ab3@18210>    BSR.w writelong
0002EAE2 <AmiBlitz3.ab3@18211> BRA.w reget
0002EAE4 <AmiBlitz3.ab3@18214>   MOVEQ #5,d2
0002EAE6 <AmiBlitz3.ab3@18215>   ASL.l #7,d1
0002EAE8 <AmiBlitz3.ab3@18216>   SUBQ.l #8,a7
0002EAEE <AmiBlitz3.ab3@18221>       OR.l #$f23c4400,d1                                   ;fmove.s
0002EAF4 <AmiBlitz3.ab3@18222>        fmove.s fp0,0(a7)
0002EAF8 <AmiBlitz3.ab3@18224>   BSR writelong
0002EAFA <AmiBlitz3.ab3@18225>   MOVE.l (a7)+,d1
0002EAFE <AmiBlitz3.ab3@18226>   BSR writelong
0002EB00 <AmiBlitz3.ab3@18227>   MOVE.l (a7)+,d1
0002EB04 <AmiBlitz3.ab3@18231> BRA.w reget
0002EB06 <AmiBlitz3.ab3@18237>  MOVE.l D3,D0
0002EB08 <AmiBlitz3.ab3@18238>   TST.w D6
0002EB0C <AmiBlitz3.ab3@18239>    BEQ.w JL_0_B46C
0002EB12 <AmiBlitz3.ab3@18240>   MOVEA.l _mathffpbase,A6
0002EB16 <AmiBlitz3.ab3@18241>    JSR -$1E(A6)
0002EB1A <AmiBlitz3.ab3@18242>    BVC.w JL_0_B46C
0002EB1C <AmiBlitz3.ab3@18243>   ADDQ.w #4,A7
0002EB20 <AmiBlitz3.ab3@18244> BRA.w JL_0_B5A0
0002EB22 <AmiBlitz3.ab3@18247> RTS
0002EB24 <AmiBlitz3.ab3@18251>   MOVEQ.l #$00,D6
0002EB28 <AmiBlitz3.ab3@18252>    fmove.l d3,fp0
0002EB2C <AmiBlitz3.ab3@18255>   BSR.w JL_0_B480
0002EB30 <AmiBlitz3.ab3@18256> BRA.w JL_0_B3DC
0002EB32 <AmiBlitz3.ab3@18259>   MOVE.w D2,-(A7)
0002EB36 <AmiBlitz3.ab3@18260>    BSR.w JL_0_BF6A
0002EB38 <AmiBlitz3.ab3@18261>   MOVE.w (A7)+,D2
0002EB3A <AmiBlitz3.ab3@18264>   TST.w D2
0002EB3E <AmiBlitz3.ab3@18265>    BNE.w JL_0_B498
0002EB40 <AmiBlitz3.ab3@18266>   TST.w D6
0002EB44 <AmiBlitz3.ab3@18267>    BEQ.w JL_0_B492
0002EB46 <AmiBlitz3.ab3@18268>   MOVEQ.l #$04,D2
0002EB4A <AmiBlitz3.ab3@18269> BRA.w JL_0_B510
0002EB4C <AmiBlitz3.ab3@18272>   MOVEQ.l #$02,D2
0002EB50 <AmiBlitz3.ab3@18273> BRA.w JL_0_B4C4
0002EB54 <AmiBlitz3.ab3@18276>   CMP.w #$1,D2
0002EB58 <AmiBlitz3.ab3@18277>    BEQ.w JL_0_B4C4
0002EB5C <AmiBlitz3.ab3@18278>   CMP.w #$2,D2
0002EB60 <AmiBlitz3.ab3@18279>    BEQ.w JL_0_B4F8
0002EB64 <AmiBlitz3.ab3@18280>   CMP.w #$3,D2
0002EB68 <AmiBlitz3.ab3@18281>    BEQ.w JL_0_B57A
0002EB6C <AmiBlitz3.ab3@18282>   CMP.w #$4,D2
0002EB70 <AmiBlitz3.ab3@18283>    BEQ.w JL_0_B506
0002EB74 <AmiBlitz3.ab3@18284>   CMP.w #$5,D2
0002EB78 <AmiBlitz3.ab3@18285>    BEQ.w JL_0_B586
0002EB7C <AmiBlitz3.ab3@18286> BRA.w mismatcherr
0002EB80 <AmiBlitz3.ab3@18289>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002EB86 <AmiBlitz3.ab3@18290>   CMP.l #$7f,D0
0002EB8A <AmiBlitz3.ab3@18291>    BGT.w JL_0_B4DC
0002EB90 <AmiBlitz3.ab3@18292>   CMP.l #$FFFFFF80,D0
0002EB94 <AmiBlitz3.ab3@18293>    BGE.w JL_0_B59E
0002EB96 <AmiBlitz3.ab3@18296>   MOVEQ.l #$02,D2                                          ;was 2 before
0002EB9C <AmiBlitz3.ab3@18297>   CMP.l #$7fff,D0
0002EBA0 <AmiBlitz3.ab3@18298>    BGT.w JL_0_B4F2
0002EBA6 <AmiBlitz3.ab3@18299>   CMP.l #$FFFF8000,D0
0002EBAA <AmiBlitz3.ab3@18300>    BGE.w JL_0_B59E
0002EBAC <AmiBlitz3.ab3@18303>   MOVEQ.l #$03,D2
0002EBB0 <AmiBlitz3.ab3@18304> BRA.w JL_0_B59E
0002EBB2 <AmiBlitz3.ab3@18330>   TST.w D6
0002EBB6 <AmiBlitz3.ab3@18331>    BNE.w JL_0_B510
0002EBBA <AmiBlitz3.ab3@18332>    BSR.w JL_0_B450
0002EBBE <AmiBlitz3.ab3@18333> BRA.w JL_0_B4DC
0002EBC2 <AmiBlitz3.ab3@18336>   BSR.w JL_0_B450
0002EBC4 <AmiBlitz3.ab3@18337>   TST.w D6
0002EBC8 <AmiBlitz3.ab3@18338>   BEQ.w JL_0_B560
0002EBCE <AmiBlitz3.ab3@18341>   CMP.l #MaxWordSgnd,D0
0002EBD2 <AmiBlitz3.ab3@18342>    BGT.w JL_0_B5A0
0002EBD8 <AmiBlitz3.ab3@18343>   CMP.l #$FFFF8000,D0
0002EBDC <AmiBlitz3.ab3@18344>    BLT.w JL_0_B5A0
0002EBDE <AmiBlitz3.ab3@18345>   MOVE.w D0,-(A7)
0002EBE2 <AmiBlitz3.ab3@18346>    JSR -$24(A6)
0002EBE4 <AmiBlitz3.ab3@18347>   MOVE.l D0,D1
0002EBE6 <AmiBlitz3.ab3@18348>   MOVE.l D3,D0
0002EBEA <AmiBlitz3.ab3@18349>    JSR -$48(A6)
0002EBF0 <AmiBlitz3.ab3@18350>   MOVE.l #$80000051,D1
0002EBF4 <AmiBlitz3.ab3@18351>    JSR -$4E(A6)
0002EBF8 <AmiBlitz3.ab3@18352>    JSR -$1E(A6)
0002EBFC <AmiBlitz3.ab3@18353>    BEQ.w JL_0_B55A
0002EC02 <AmiBlitz3.ab3@18354>   CMP.l #$10000,D0
0002EC06 <AmiBlitz3.ab3@18355>    BCC.w JL_0_B55A
0002EC08 <AmiBlitz3.ab3@18356>   MOVE.w D0,D1
0002EC0A <AmiBlitz3.ab3@18357>   MOVE.w (A7)+,D0
0002EC0C <AmiBlitz3.ab3@18358>   SWAP D0
0002EC0E <AmiBlitz3.ab3@18359>   MOVE.w D1,D0
0002EC12 <AmiBlitz3.ab3@18360> BRA.w JL_0_B59E
0002EC14 <AmiBlitz3.ab3@18363>   ADDQ.w #2,A7
0002EC18 <AmiBlitz3.ab3@18364> BRA.w JL_0_B5A0
0002EC1E <AmiBlitz3.ab3@18367>   CMP.l #MaxWordSgnd,D0
0002EC22 <AmiBlitz3.ab3@18368>    BGT.w JL_0_B4F2
0002EC28 <AmiBlitz3.ab3@18369>   CMP.l #$FFFF8000,D0
0002EC2C <AmiBlitz3.ab3@18370>    BLT.w JL_0_B4F2
0002EC2E <AmiBlitz3.ab3@18371>   SWAP D0
0002EC32 <AmiBlitz3.ab3@18372> BRA.w JL_0_B59E
0002EC34 <AmiBlitz3.ab3@18375>   TST.w D6
0002EC38 <AmiBlitz3.ab3@18376>   BNE.w JL_0_B5A0
0002EC3A <AmiBlitz3.ab3@18377>   MOVE.l D3,D0
0002EC3E <AmiBlitz3.ab3@18378> BRA.w JL_0_B59E
0002EC40 <AmiBlitz3.ab3@18381>   TST.w D6
0002EC44 <AmiBlitz3.ab3@18382>   BNE.w JL_0_B5A0
0002EC46 <AmiBlitz3.ab3@18383>   MOVE.l D3,D0
0002EC4C <AmiBlitz3.ab3@18384>   MOVEA.l _mathffpbase,A6
0002EC50 <AmiBlitz3.ab3@18385>   JSR -$24(A6)
0002EC52 <AmiBlitz3.ab3@18386>   MOVE.l D0,D3
0002EC56 <AmiBlitz3.ab3@18387> BRA.w JL_0_B5A0
0002EC58 <AmiBlitz3.ab3@18390> RTS
0002EC5A <AmiBlitz3.ab3@18393>   MOVEQ.l #$05,D2
0002EC5C <AmiBlitz3.ab3@18394>   MOVE.l D3,D0
0002EC5E <AmiBlitz3.ab3@18395> RTS
0002EC62 <AmiBlitz3.ab3@18399>             Ds.l 1                                         ;??Looks like unused data??
0002EC66 <AmiBlitz3.ab3@18400> pushpc:     Ds.l 1
0002EC6A <AmiBlitz3.ab3@18401> pushoff:    Ds.l 1
0002EC6E <AmiBlitz3.ab3@18402> pushdooff:  Ds.l 1
0002EC70 <AmiBlitz3.ab3@18403> pushclen:   Ds.w 1
0002EC74 <AmiBlitz3.ab3@18404> pushat:     Ds.l 1
0002EC7E <AmiBlitz3.ab3@18408>   MOVE.l destpointer,pushpc
0002EC88 <AmiBlitz3.ab3@18409>   MOVE.l hunkoffsetbase,pushoff
0002EC8A <AmiBlitz3.ab3@18410> RTS
0002EC8E <AmiBlitz3.ab3@18414>   MOVEM.l D0-D1/A0-A1,-(A7)
0002EC94 <AmiBlitz3.ab3@18415>   MOVE.l destpointer,D0
0002EC98 <AmiBlitz3.ab3@18416>   MOVE.l pushpc(PC),D1
0002EC9E <AmiBlitz3.ab3@18417>   MOVE.l D1,destpointer
0002ECA0 <AmiBlitz3.ab3@18418>   SUB.l D1,D0
0002ECA6 <AmiBlitz3.ab3@18419>   MOVE.w D0,pushclen
0002ECAA <AmiBlitz3.ab3@18420>    BEQ.w JL_0_B636
0002ECB0 <AmiBlitz3.ab3@18421>   MOVE.w dontwrite,D1
0002ECB4 <AmiBlitz3.ab3@18422>    BNE.w JL_0_B636
0002ECBC <AmiBlitz3.ab3@18423>    CMP.w #1000,pushclen
0002ECC0 <AmiBlitz3.ab3@18424>    BGE conmemerr
0002ECC6 <AmiBlitz3.ab3@18425>    MOVE.l pushat,d0
0002ECCA <AmiBlitz3.ab3@18426>    BNE 'nomem
0002ECD0 <AmiBlitz3.ab3@18427>    MOVE.l #1024,d0
0002ECD2 <AmiBlitz3.ab3@18428>   MOVEQ.l #$01,D1
0002ECD8 <AmiBlitz3.ab3@18429>   MOVEA.l _execbase,A6
0002ECDE <AmiBlitz3.ab3@18430>   MOVE.l mempool,a0
0002ECE2 <AmiBlitz3.ab3@18431>   JSR _AllocPooled(a6)
0002ECE8 <AmiBlitz3.ab3@18433>   MOVE.l D0,pushat
0002ECEA <AmiBlitz3.ab3@18436>   MOVEA.l D0,A0
0002ECF0 <AmiBlitz3.ab3@18437>   MOVEA.l pushpc,A1
0002ECF6 <AmiBlitz3.ab3@18438>   MOVE.l A1,destpointer
0002ECFC <AmiBlitz3.ab3@18439>   MOVE.w pushclen,D0
0002ECFE <AmiBlitz3.ab3@18440>   LSR.w #1,D0
0002ED00 <AmiBlitz3.ab3@18441>   SUBQ.w #1,D0
0002ED02 <AmiBlitz3.ab3@18444>     MOVE.w (A1)+,(A0)+
0002ED06 <AmiBlitz3.ab3@18445>   DBF D0,JL_0_B626
0002ED10 <AmiBlitz3.ab3@18447>    MOVE.l hunkoffsetbase,pushdooff
0002ED14 <AmiBlitz3.ab3@18450>   MOVEM.l (A7)+,D0-D1/A0-A1
0002ED16 <AmiBlitz3.ab3@18451> RTS
0002ED1A <AmiBlitz3.ab3@18455>   MOVEM.l D0-D1/A0-A1,-(A7)
0002ED1C <AmiBlitz3.ab3@18456>   MOVEQ.l #$00,D0
0002ED22 <AmiBlitz3.ab3@18457>   MOVE.w pushclen,D0
0002ED26 <AmiBlitz3.ab3@18458>    BEQ.w JL_0_B6D8
0002ED2C <AmiBlitz3.ab3@18459>   MOVE.l destpointer,D1
0002ED32 <AmiBlitz3.ab3@18460>   ADD.l D0,destpointer
0002ED38 <AmiBlitz3.ab3@18461>   TST.w dontwrite
0002ED3C <AmiBlitz3.ab3@18462>    BNE.w JL_0_B6D8
0002ED3E <AmiBlitz3.ab3@18463>   LSR.w #1,D0
0002ED40 <AmiBlitz3.ab3@18464>   SUBQ.w #1,D0
0002ED42 <AmiBlitz3.ab3@18465>   MOVEA.l D1,A1
0002ED48 <AmiBlitz3.ab3@18466>   MOVEA.l pushat,A0
0002ED4E <AmiBlitz3.ab3@18469>     CMPA.l destbufferend,A1
0002ED52 <AmiBlitz3.ab3@18470>     BCS.w JL_0_B684
0002ED5A <AmiBlitz3.ab3@18472>     MOVE.w #$FFFF,dontwrite
0002ED5E <AmiBlitz3.ab3@18473>   BRA.w JL_0_B6D8
0002ED60 <AmiBlitz3.ab3@18476>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002ED64 <AmiBlitz3.ab3@18477>   DBF D0,JL_0_B66E
0002ED6A <AmiBlitz3.ab3@18479>   SUB.l pushpc,D1
0002ED6E <AmiBlitz3.ab3@18480>   BEQ.w JL_0_B6C2
0002ED74 <AmiBlitz3.ab3@18481>   MOVEA.l pushdooff,A0
0002ED7A <AmiBlitz3.ab3@18484>   CMPA.l pushoff,A0
0002ED7E <AmiBlitz3.ab3@18485>   BEQ.w JL_0_B6C2
0002ED82 <AmiBlitz3.ab3@18486>   MOVEA.l $4(A0),A1
0002ED88 <AmiBlitz3.ab3@18487>   ADDA.l destbufferstart,A1
0002ED8E <AmiBlitz3.ab3@18488>   CMPA.l destbufferend,A1
0002ED92 <AmiBlitz3.ab3@18489>   BCC.w JL_0_B6BC
0002ED96 <AmiBlitz3.ab3@18490>   ADD.l D1,$4(A0)
0002ED98 <AmiBlitz3.ab3@18493>   MOVEA.l (A0),A0
0002ED9C <AmiBlitz3.ab3@18494> BRA.w JL_0_B69A
0002EDA2 <AmiBlitz3.ab3@18497>   MOVEA.l pushat,A1
0002EDA4 <AmiBlitz3.ab3@18498>   MOVEQ.l #$00,D0
0002EDAA <AmiBlitz3.ab3@18499>   MOVE.w pushclen,D0
0002EDB0 <AmiBlitz3.ab3@18500>   MOVEA.l _execbase,A6
0002EDB6 <AmiBlitz3.ab3@18501>   MOVE.l mempool,a0
0002EDBA <AmiBlitz3.ab3@18505>   MOVEM.l (A7)+,D0-D1/A0-A1
0002EDBC <AmiBlitz3.ab3@18506> RTS
0002EDBE <AmiBlitz3.ab3@18509>   MOVE.l D1,-(A7)                                          ;array mul
0002EDC0 <AmiBlitz3.ab3@18510>   MOVEQ.l #$00,D2
0002EDC2 <AmiBlitz3.ab3@18511>   MOVEQ.l #$0F,D3
0002EDC4 <AmiBlitz3.ab3@18514>     LSL.w #1,D1
0002EDC8 <AmiBlitz3.ab3@18515>     BCC.w JL_0_B6EE
0002EDCA <AmiBlitz3.ab3@18516>     ADDQ.w #1,D2
0002EDCC <AmiBlitz3.ab3@18517>     MOVE.w D3,D4
0002EDD0 <AmiBlitz3.ab3@18520>   DBF D3,JL_0_B6E4
0002EDD2 <AmiBlitz3.ab3@18522>   SUBQ.w #1,D2
0002EDD6 <AmiBlitz3.ab3@18523>    BNE.w JL_0_B726
0002EDD8 <AmiBlitz3.ab3@18524>   ADDQ.w #4,A7
0002EDDA <AmiBlitz3.ab3@18525>   MOVE.w D4,D1
0002EDDE <AmiBlitz3.ab3@18526>    BEQ.w JL_0_B724
0002EDE2 <AmiBlitz3.ab3@18527>   CMP.w #$8,D1
0002EDE6 <AmiBlitz3.ab3@18528>    BCS.w JL_0_B712
0002EDEA <AmiBlitz3.ab3@18529>   SUBI.w #$8,D1
0002EDEE <AmiBlitz3.ab3@18530>    BSR.w JL_0_B712
0002EDF0 <AmiBlitz3.ab3@18531>   MOVEQ.l #$00,D1
0002EDF2 <AmiBlitz3.ab3@18534>   LSL.w #8,D1
0002EDF4 <AmiBlitz3.ab3@18535>   LSL.w #1,D1
0002EDF8 <AmiBlitz3.ab3@18536>   ORI.w #$E188,D1
0002EDFE <AmiBlitz3.ab3@18537>   OR.w regnum,D1
0002EE02 <AmiBlitz3.ab3@18538> BRA.w writeword
0002EE04 <AmiBlitz3.ab3@18541> RTS
0002EE06 <AmiBlitz3.ab3@18544>   MOVEQ #0,d1
0002EE0C <AmiBlitz3.ab3@18545>   MOVE.w regnum,D1
0002EE0E <AmiBlitz3.ab3@18546>   LSL.l #8,D1
0002EE10 <AmiBlitz3.ab3@18548>   LSL.l #4,d1
0002EE16 <AmiBlitz3.ab3@18550>   OR.l #$4c3c0000,d1
0002EE1C <AmiBlitz3.ab3@18551>   OR.w regnum,d1
0002EE20 <AmiBlitz3.ab3@18552>   BSR.w writelong
0002EE22 <AmiBlitz3.ab3@18553>   MOVE.l (A7)+,D1
0002EE26 <AmiBlitz3.ab3@18555> BRA writelong
0002EE2C <AmiBlitz3.ab3@18558>   MOVE.l destpointer,-(A7)
0002EE2E <AmiBlitz3.ab3@18559>   MOVEQ.l #-$01,D7
0002EE32 <AmiBlitz3.ab3@18562>     BSR.w findhilib
0002EE36 <AmiBlitz3.ab3@18563>      BEQ.w JL_0_B8A4
0002EE3A <AmiBlitz3.ab3@18564>     TST.w $C(A2)
0002EE3E <AmiBlitz3.ab3@18565>      BPL.w JL_0_B746
0002EE42 <AmiBlitz3.ab3@18567>     MOVE.l $16(A2),D1
0002EE46 <AmiBlitz3.ab3@18568>     BEQ.w JL_0_B746
0002EE4A <AmiBlitz3.ab3@18570>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002EE4E <AmiBlitz3.ab3@18571>     CMP.w #-$2,D1
0002EE52 <AmiBlitz3.ab3@18572>      BNE.w JL_0_B772
0002EE56 <AmiBlitz3.ab3@18573>     BSR.w makevsize
0002EE5A <AmiBlitz3.ab3@18574> BRA.w JL_0_B7FE
0002EE5E <AmiBlitz3.ab3@18577>     CMP.w #-$5C4,D1
0002EE62 <AmiBlitz3.ab3@18578>      BNE.w JL_0_B790
0002EE66 <AmiBlitz3.ab3@18579>     MOVE.w #$7000,D1
0002EE6E <AmiBlitz3.ab3@18580>     BTST #$7,autorun
0002EE70 <AmiBlitz3.ab3@18581>     SNE D1
0002EE74 <AmiBlitz3.ab3@18582>     BSR.w writeword
0002EE78 <AmiBlitz3.ab3@18583> BRA.w JL_0_B7FE
0002EE7C <AmiBlitz3.ab3@18586>     CMP.w #-$12D,D1
0002EE80 <AmiBlitz3.ab3@18587>      BNE.w JL_0_B7A0
0002EE84 <AmiBlitz3.ab3@18588>     BSR.w makessize
0002EE88 <AmiBlitz3.ab3@18589> BRA.w JL_0_B7FE
0002EE8C <AmiBlitz3.ab3@18592>     CMP.w #-$1F5,D1
0002EE90 <AmiBlitz3.ab3@18593>      BNE.w JL_0_B7C2
0002EE94 <AmiBlitz3.ab3@18594>     MOVE.w #$203C,D1
0002EE98 <AmiBlitz3.ab3@18595>     BSR.w writeword
0002EE9C <AmiBlitz3.ab3@18596>     BSR.w addoff
0002EEA2 <AmiBlitz3.ab3@18597>     MOVE.l endop,D1
0002EEA6 <AmiBlitz3.ab3@18598>     BSR.w writelong
0002EEAA <AmiBlitz3.ab3@18599> BRA.w JL_0_B7FE
0002EEAE <AmiBlitz3.ab3@18602>     CMP.w #-$3E9,D1
0002EEB2 <AmiBlitz3.ab3@18603>      BNE.w JL_0_B7E4
0002EEB6 <AmiBlitz3.ab3@18604>     MOVE.w #$203C,D1
0002EEBA <AmiBlitz3.ab3@18605>     BSR.w writeword
0002EEBE <AmiBlitz3.ab3@18606>     BSR.w addoff
0002EEC4 <AmiBlitz3.ab3@18607>     MOVE.l data2at,D1
0002EEC8 <AmiBlitz3.ab3@18608>     BSR.w writelong
0002EECC <AmiBlitz3.ab3@18609> BRA.w JL_0_B7FE
0002EED0 <AmiBlitz3.ab3@18612>     CMP.w #$1,D1
0002EED4 <AmiBlitz3.ab3@18613>      BNE.w JL_0_B7FE
0002EED8 <AmiBlitz3.ab3@18614>     MOVE.w #$203C,D1
0002EEDC <AmiBlitz3.ab3@18615>     BSR.w writeword
0002EEE2 <AmiBlitz3.ab3@18616>     MOVE.l ptr_seg_debugger,D1
0002EEE6 <AmiBlitz3.ab3@18617>     BSR.w writelong
0002EEEA <AmiBlitz3.ab3@18620>     MOVE.l $16(A2),D1
0002EEF2 <AmiBlitz3.ab3@18621>     MOVE.w #$FFFF,lasta6
0002EEF6 <AmiBlitz3.ab3@18622>     BSR.w Amakelibsub
0002EEFC <AmiBlitz3.ab3@18623>     CMPI.w #$FFFE,$4(A2)
0002EF00 <AmiBlitz3.ab3@18624>      BNE.w JL_0_B83A
0002EF06 <AmiBlitz3.ab3@18625>     MOVE.l intdata1,D1
0002EF0A <AmiBlitz3.ab3@18626>      BEQ.w JL_0_B83A
0002EF10 <AmiBlitz3.ab3@18627>     MOVE.w putidata1,D1
0002EF14 <AmiBlitz3.ab3@18628>     BSR.w writeword
0002EF18 <AmiBlitz3.ab3@18629>     BSR.w addoff
0002EF1E <AmiBlitz3.ab3@18630>     MOVE.l intdata1,D1
0002EF22 <AmiBlitz3.ab3@18631>     BSR.w writelong
0002EF26 <AmiBlitz3.ab3@18634>     MOVE.w #$2B40,D1
0002EF2A <AmiBlitz3.ab3@18635>     TST.w $1A(A2)
0002EF2E <AmiBlitz3.ab3@18636>      BEQ.w JL_0_B746
0002EF32 <AmiBlitz3.ab3@18637>      BPL.w JL_0_B84E
0002EF36 <AmiBlitz3.ab3@18638>     MOVE.w #$3B40,D1
0002EF3A <AmiBlitz3.ab3@18641>     BSR.w writeword
0002EF3E <AmiBlitz3.ab3@18642>     MOVE.w $A(A2),D1
0002EF42 <AmiBlitz3.ab3@18643>      BSR.w writeword
0002EF48 <AmiBlitz3.ab3@18644>     CMPI.w #$FFFA,$4(A2)
0002EF4C <AmiBlitz3.ab3@18645>      BNE.w JL_0_B746
0002EF4E <AmiBlitz3.ab3@18646>     MOVE.w D7,-(A7)
0002EF54 <AmiBlitz3.ab3@18647>     MOVE.w numstatic,D4
0002EF58 <AmiBlitz3.ab3@18648>      BEQ.w JL_0_B882
0002EF5E <AmiBlitz3.ab3@18649>     MOVE.l staticdata,D3
0002EF64 <AmiBlitz3.ab3@18650>      JSR datastart
0002EF68 <AmiBlitz3.ab3@18651>     MOVE.w #$C500,D1
0002EF6C <AmiBlitz3.ab3@18652>      BSR.w tokejsr2
0002EF72 <AmiBlitz3.ab3@18655>     MOVE.w maxsused,D4
0002EF76 <AmiBlitz3.ab3@18656>      BEQ.w JL_0_B89E
0002EF7C <AmiBlitz3.ab3@18657>     MOVE.l maxsat,D3
0002EF82 <AmiBlitz3.ab3@18658>      JSR datastart
0002EF86 <AmiBlitz3.ab3@18659>     MOVE.w #$CF00,D1
0002EF8A <AmiBlitz3.ab3@18660>      BSR.w tokejsr2
0002EF8C <AmiBlitz3.ab3@18663>     MOVE.w (A7)+,D7
0002EF90 <AmiBlitz3.ab3@18664> BRA.w JL_0_B746
0002EF96 <AmiBlitz3.ab3@18667>   MOVE.l destpointer,D1
0002EF98 <AmiBlitz3.ab3@18668>   CMP.l (A7),D1
0002EF9C <AmiBlitz3.ab3@18669>    BNE.w JL_0_B8BC
0002EFA4 <AmiBlitz3.ab3@18670>   MOVE.w #$0008,noinits+2
0002EFA8 <AmiBlitz3.ab3@18671> BRA.w JL_0_B8E6
0002EFAE <AmiBlitz3.ab3@18674>   CLR.w noinits+2
0002EFB4 <AmiBlitz3.ab3@18675>   MOVE.w dontwrite,D1
0002EFB8 <AmiBlitz3.ab3@18676>    BNE.w JL_0_B8DE
0002EFBE <AmiBlitz3.ab3@18677>   TST.l newinitaddr
0002EFC2 <AmiBlitz3.ab3@18678>    BEQ 'l10
0002EFC8 <AmiBlitz3.ab3@18679>   MOVE.l newinitaddr,D2
0002EFCE <AmiBlitz3.ab3@18680>   SUB.l destbufferstart,D2
0002EFD0 <AmiBlitz3.ab3@18681>   ADDQ.l #2,d2
0002EFD6 <AmiBlitz3.ab3@18682>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002EFDA <AmiBlitz3.ab3@18684>   MOVE.w #$4EB9,(A0)+
0002EFDC <AmiBlitz3.ab3@18685>   MOVE.l (A7),(A0)+
0002EFE0 <AmiBlitz3.ab3@18687> BRA 'l20
0002EFE6 <AmiBlitz3.ab3@18690>   MOVEA.l destbufferstart,A0                               ;write initcode
0002EFEC <AmiBlitz3.ab3@18691>   TST.b saved0
0002EFF0 <AmiBlitz3.ab3@18692>   BEQ 'l1
0002EFF4 <AmiBlitz3.ab3@18693>   MOVE.w #$23c0,(a0)+
0002EFF6 <AmiBlitz3.ab3@18694>   MOVE.l a0,a1
0002EFF8 <AmiBlitz3.ab3@18695>   ADDQ.l #6,a1
0002EFFA <AmiBlitz3.ab3@18696>   MOVE.l a1,(a0)+
0002EFFC <AmiBlitz3.ab3@18697>   MOVEQ.l #$02,D2
0002F000 <AmiBlitz3.ab3@18698>   BSR.w addhunkoffset
0002F004 <AmiBlitz3.ab3@18699>   MOVE.w #$6004,(a0)+
0002F00A <AmiBlitz3.ab3@18700>   MOVE.l #$4e714e71,(a0)+
0002F00E <AmiBlitz3.ab3@18703>   MOVE.w #$4EB9,(A0)+
0002F010 <AmiBlitz3.ab3@18704>   MOVE.l (A7),(A0)+
0002F012 <AmiBlitz3.ab3@18705>   MOVEQ #2,d2
0002F018 <AmiBlitz3.ab3@18706>   TST.b saved0
0002F01C <AmiBlitz3.ab3@18707>   BEQ 'l20
0002F01E <AmiBlitz3.ab3@18708>   MOVEQ.l #14,D2
0002F022 <AmiBlitz3.ab3@18711>   BSR.w addhunkoffset
0002F026 <AmiBlitz3.ab3@18712>   MOVE.w #$2039,(a0)+
0002F028 <AmiBlitz3.ab3@18713>   MOVE.l a1,(a0)+
0002F02A <AmiBlitz3.ab3@18714>   MOVEQ.l #20,d2
0002F02E <AmiBlitz3.ab3@18717>   BSR.w addhunkoffset
0002F032 <AmiBlitz3.ab3@18720>   MOVE.w #$4E75,D1
0002F036 <AmiBlitz3.ab3@18721>   BSR.w writeword
0002F038 <AmiBlitz3.ab3@18724>   ADDQ.w #4,A7
0002F03A <AmiBlitz3.ab3@18725> RTS
0002F03E <AmiBlitz3.ab3@18730>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F044 <AmiBlitz3.ab3@18732>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002F04A <AmiBlitz3.ab3@18734>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002F050 <AmiBlitz3.ab3@18739>   MOVE.l stringbuffer,D1
0002F054 <AmiBlitz3.ab3@18740> BRA.w makesize
0002F056 <AmiBlitz3.ab3@18743>   MOVEQ.l #$00,D1
0002F05C <AmiBlitz3.ab3@18744>   MOVE.w globalvarpointer,D1
0002F060 <AmiBlitz3.ab3@18745>   SUBI.w #$8000,D1
0002F064 <AmiBlitz3.ab3@18746>   BNE.w makesize
0002F066 <AmiBlitz3.ab3@18747>     MOVEQ.l #$08,D1
0002F068 <AmiBlitz3.ab3@18750>   MOVE.l D1,-(A7)
0002F06C <AmiBlitz3.ab3@18751>   MOVE.w #$203C,D1
0002F070 <AmiBlitz3.ab3@18752>   BSR.w writeword
0002F072 <AmiBlitz3.ab3@18753>   MOVE.l (A7)+,D1
0002F076 <AmiBlitz3.ab3@18754> BRA.w writelong
0002F078 <AmiBlitz3.ab3@18762>   MOVEQ.l #$00,D1
0002F07E <AmiBlitz3.ab3@18763>   MOVEA.l libpointer,A1
0002F082 <AmiBlitz3.ab3@18766>     CMPA.w #$0,A1
0002F086 <AmiBlitz3.ab3@18767>     BEQ.w findhilib__done
0002F08A <AmiBlitz3.ab3@18768>       CMP.w $4(A1),D7
0002F08E <AmiBlitz3.ab3@18769>       BLS.w findhilib__next
0002F092 <AmiBlitz3.ab3@18770>         CMP.w $4(A1),D1
0002F096 <AmiBlitz3.ab3@18771>         BCC.w findhilib__next
0002F09A <AmiBlitz3.ab3@18772>           MOVE.w $4(A1),D1
0002F09C <AmiBlitz3.ab3@18773>           MOVEA.l A1,A2
0002F09E <AmiBlitz3.ab3@18776>     MOVEA.l (A1),A1
0002F0A2 <AmiBlitz3.ab3@18777> BRA.w findhilib__loop
0002F0A4 <AmiBlitz3.ab3@18780>   MOVE.w D1,D7
0002F0A6 <AmiBlitz3.ab3@18781> RTS
0002F0A8 <AmiBlitz3.ab3@18789>   MOVEQ.l #-$01,D1
0002F0AE <AmiBlitz3.ab3@18790>   MOVEA.l libpointer,A1
0002F0B2 <AmiBlitz3.ab3@18793>     CMPA.w #$0,A1
0002F0B6 <AmiBlitz3.ab3@18794>      BEQ.w findlolib__done
0002F0BA <AmiBlitz3.ab3@18795>     CMP.w $4(A1),D7
0002F0BE <AmiBlitz3.ab3@18796>      BCC.w findlolib__next
0002F0C2 <AmiBlitz3.ab3@18797>     CMP.w $4(A1),D1
0002F0C6 <AmiBlitz3.ab3@18798>      BLS.w findlolib__next
0002F0CA <AmiBlitz3.ab3@18799>     MOVE.w $4(A1),D1
0002F0CC <AmiBlitz3.ab3@18800>     MOVEA.l A1,A2
0002F0CE <AmiBlitz3.ab3@18803>     MOVEA.l (A1),A1
0002F0D2 <AmiBlitz3.ab3@18804> BRA.w findlolib__loop
0002F0D4 <AmiBlitz3.ab3@18807>   MOVE.w D1,D7
0002F0D8 <AmiBlitz3.ab3@18808>   CMP.w #-$1,D1
0002F0DA <AmiBlitz3.ab3@18809> RTS
0002F0E0 <AmiBlitz3.ab3@18813>   ADDQ.w #1,globalvarpointer
0002F0E8 <AmiBlitz3.ab3@18814>   BCLR #$0,globalvarpointer+1
0002F0EA <AmiBlitz3.ab3@18815>   MOVEQ.l #$00,D7
0002F0EE <AmiBlitz3.ab3@18818>     BSR.w findlolib
0002F0F2 <AmiBlitz3.ab3@18819>     BEQ.w JL_0_BA74
0002F0F6 <AmiBlitz3.ab3@18820>     TST.w $C(A2)
0002F0FA <AmiBlitz3.ab3@18821>     BPL.w JL_0_B99A
0002F0FC <AmiBlitz3.ab3@18822>     MOVEA.l A2,A1
0002F100 <AmiBlitz3.ab3@18823>     ADDA.l $12(A1),A1
0002F104 <AmiBlitz3.ab3@18824>     TST.w -$2(A1)
0002F108 <AmiBlitz3.ab3@18825>     BEQ.w JL_0_BA34
0002F10C <AmiBlitz3.ab3@18826>     MOVE.l -$A(A1),D1
0002F110 <AmiBlitz3.ab3@18827>     LEA $6(A2,D1.L),A3
0002F112 <AmiBlitz3.ab3@18830>       TST.w (A3)+
0002F116 <AmiBlitz3.ab3@18831>       BEQ.w JL_0_B9CC
0002F118 <AmiBlitz3.ab3@18832>         ADDQ.w #2,A3
0002F11C <AmiBlitz3.ab3@18833> BRA.w JL_0_B9C0
0002F120 <AmiBlitz3.ab3@18836>     TST.l $4(A3)
0002F124 <AmiBlitz3.ab3@18837>     BEQ.w JL_0_BA34
0002F128 <AmiBlitz3.ab3@18838>       MOVE.w freemax(PC),D1
0002F12C <AmiBlitz3.ab3@18839>       BSR.w writeword
0002F130 <AmiBlitz3.ab3@18840>       MOVE.w -$4(A1),D1
0002F134 <AmiBlitz3.ab3@18841>       BSR.w writeword
0002F13A <AmiBlitz3.ab3@18842>       MOVE.l free,D1
0002F13E <AmiBlitz3.ab3@18843>       MOVE.w -$6(A1),D1
0002F142 <AmiBlitz3.ab3@18844>       BSR.w writelong
0002F148 <AmiBlitz3.ab3@18845>       MOVE.l destpointer,-(A7)
0002F14A <AmiBlitz3.ab3@18846>       MOVEQ.l #$01,D1
0002F14E <AmiBlitz3.ab3@18847>       MOVE.w -$2(A1),D2
0002F150 <AmiBlitz3.ab3@18848>       LSL.w D2,D1
0002F152 <AmiBlitz3.ab3@18849>       MOVE.w D1,-(A7)
0002F156 <AmiBlitz3.ab3@18850>       MOVE.l -$A(A1),D1
0002F15A <AmiBlitz3.ab3@18851>       BSR.w Amakelibsub
0002F15E <AmiBlitz3.ab3@18852>       MOVE.w freemax3(PC),D1
0002F162 <AmiBlitz3.ab3@18853>       BSR.w writeword
0002F164 <AmiBlitz3.ab3@18854>       MOVE.w (A7)+,D1
0002F168 <AmiBlitz3.ab3@18855>       BSR.w writeword
0002F16C <AmiBlitz3.ab3@18856>       MOVE.l freemax2(PC),D1
0002F170 <AmiBlitz3.ab3@18857>       BSR.w writelong
0002F172 <AmiBlitz3.ab3@18858>       MOVE.l (A7)+,D1
0002F178 <AmiBlitz3.ab3@18859>       SUB.l destpointer,D1
0002F17C <AmiBlitz3.ab3@18860>       BSR.w writeword
0002F180 <AmiBlitz3.ab3@18861>       MOVE.w freemax4(PC),D1
0002F184 <AmiBlitz3.ab3@18862>       BSR.w writeword
0002F188 <AmiBlitz3.ab3@18865>     MOVE.l $1C(A2),D1
0002F18C <AmiBlitz3.ab3@18866>     BEQ.w JL_0_B99A
0002F190 <AmiBlitz3.ab3@18868>     MOVE.w $4(A2),D1
0002F194 <AmiBlitz3.ab3@18869>     CMP.w #-$2,D1
0002F198 <AmiBlitz3.ab3@18870>     BNE.w JL_0_BA50
0002F19C <AmiBlitz3.ab3@18871>       BSR.w makevsize
0002F1A0 <AmiBlitz3.ab3@18872> BRA.w JL_0_BA60
0002F1A4 <AmiBlitz3.ab3@18875>     CMP.w #-$12D,D1
0002F1A8 <AmiBlitz3.ab3@18876>     BNE.w JL_0_BA60
0002F1AC <AmiBlitz3.ab3@18877>       BSR.w makessize
0002F1B0 <AmiBlitz3.ab3@18878> BRA.w JL_0_BA60
0002F1B4 <AmiBlitz3.ab3@18881>     MOVE.l $1C(A2),D1
0002F1BC <AmiBlitz3.ab3@18882>     MOVE.w #$FFFF,lasta6
0002F1C0 <AmiBlitz3.ab3@18883>     BSR.w Amakelibsub
0002F1C4 <AmiBlitz3.ab3@18884> BRA.w JL_0_B99A
0002F1C6 <AmiBlitz3.ab3@18887> RTS
0002F1CA <AmiBlitz3.ab3@18891> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002F1CC <AmiBlitz3.ab3@18893> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002F1D0 <AmiBlitz3.ab3@18894>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002F1D2 <AmiBlitz3.ab3@18895> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002F1D6 <AmiBlitz3.ab3@18896> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002F1DC <AmiBlitz3.ab3@18901>   TST.b debugmode
0002F1E0 <AmiBlitz3.ab3@18902>    BEQ.b chkstak__skip
0002F1E6 <AmiBlitz3.ab3@18903>   TST.w debugversion
0002F1EA <AmiBlitz3.ab3@18904>    BNE.b chkstak__skip
0002F1EE <AmiBlitz3.ab3@18905>   MOVE.w #$C308,D1
0002F1F2 <AmiBlitz3.ab3@18906> BRA.w Atokejsr
0002F1F4 <AmiBlitz3.ab3@18909> RTS
0002F1FC <AmiBlitz3.ab3@18913>   MOVE.w #$FFFF,lasta6
0002F200 <AmiBlitz3.ab3@18918>   MOVEM.l D0-d7/A0-a6,-(A7)
0002F208 <AmiBlitz3.ab3@18919>   MOVE.b #1,nostringopt
0002F20E <AmiBlitz3.ab3@18920>   JSR searchinstr
0002F210 <AmiBlitz3.ab3@18921>   MOVE.l A3,D1
0002F212 <AmiBlitz3.ab3@18922>   SUB.l A2,D1
0002F216 <AmiBlitz3.ab3@18923>   BSR.w Amakelibsub
0002F21A <AmiBlitz3.ab3@18924>   MOVEM.l (A7)+,d0-d7/a0-a6
0002F21C <AmiBlitz3.ab3@18925> RTS
0002F222 <AmiBlitz3.ab3@18932>   MOVE.l libisat,-(A7)                                   ;library write
0002F228 <AmiBlitz3.ab3@18933>   MOVE.l A2,libisat
0002F22A <AmiBlitz3.ab3@18935>   MOVEA.l A1,A2
0002F22C <AmiBlitz3.ab3@18936>   MOVE.w (A2)+,D1
0002F232 <AmiBlitz3.ab3@18937>   MOVE.l a2,lastinstructionaddr
0002F236 <AmiBlitz3.ab3@18938>   ANDI.w #$FF,D1
0002F238 <AmiBlitz3.ab3@18939>   ADDA.w D1,A2
0002F23A <AmiBlitz3.ab3@18940>   EXG.l D0,A2
0002F23C <AmiBlitz3.ab3@18941>   ADDQ.l #1,D0
0002F240 <AmiBlitz3.ab3@18942>   BCLR #$0,D0
0002F242 <AmiBlitz3.ab3@18943>   EXG.l D0,A2
0002F246 <AmiBlitz3.ab3@18944> BRA.w JL_0_BB08
0002F24C <AmiBlitz3.ab3@18948>   MOVE.l libisat,-(A7)
0002F252 <AmiBlitz3.ab3@18949>   MOVE.l A2,libisat
0002F254 <AmiBlitz3.ab3@18950>   MOVEA.l A3,A2
0002F258 <AmiBlitz3.ab3@18951> BRA.w JL_0_BB08
0002F25A <AmiBlitz3.ab3@18955>   MOVE.l a1,-(a7)
0002F25C <AmiBlitz3.ab3@18958>   MOVE.l d0,a0
0002F260 <AmiBlitz3.ab3@18959>   MOVE.l $a(a0),d0
0002F262 <AmiBlitz3.ab3@18960>   MOVE.l d0,a1
0002F26A <AmiBlitz3.ab3@18961>   CMP.l #8,4(a1)
0002F26E <AmiBlitz3.ab3@18962>   BLE 'norec
0002F270 <AmiBlitz3.ab3@18963>   MOVE.l a0,-(a7)
0002F276 <AmiBlitz3.ab3@18964>   MOVE.l typebase,-(a7)
0002F278 <AmiBlitz3.ab3@18965>   MOVEQ #0,d0
0002F27C <AmiBlitz3.ab3@18966>   MOVE.w 4(a0),d0
0002F282 <AmiBlitz3.ab3@18967>   ADD.l d0,typebase
0002F286 <AmiBlitz3.ab3@18968>   MOVE.l $4(a1),d0
0002F28A <AmiBlitz3.ab3@18969>   BSR scantype
0002F290 <AmiBlitz3.ab3@18970>   MOVE.l (a7)+,typebase
0002F292 <AmiBlitz3.ab3@18971>   MOVE.l (a7)+,a0
0002F298 <AmiBlitz3.ab3@18974>   CMP.l #newtype_string,d0
0002F29C <AmiBlitz3.ab3@18975>   BNE 'nostring
0002F2A2 <AmiBlitz3.ab3@18976>   ADDQ #2,a2offset
0002F2A8 <AmiBlitz3.ab3@18977>   MOVE.l #$3f3c0000,d1
0002F2AA <AmiBlitz3.ab3@18978>   MOVEQ #0,d0
0002F2AE <AmiBlitz3.ab3@18979>   MOVE.w 4(a0),d0
0002F2B4 <AmiBlitz3.ab3@18980>   ADD.l typebase,d0
0002F2B6 <AmiBlitz3.ab3@18981>   MOVE.w d0,d1
0002F2BA <AmiBlitz3.ab3@18982>   BSR writelong
0002F2C0 <AmiBlitz3.ab3@18983>   TST.b debugmode
0002F2C4 <AmiBlitz3.ab3@18984>   BEQ 'l1a
0002F2C6 <AmiBlitz3.ab3@18985>   MOVE.l d1,-(a7)
0002F2CC <AmiBlitz3.ab3@18986>   MOVE.l #$c308,d1
0002F2D2 <AmiBlitz3.ab3@18987>   JSR Atokejsr
0002F2D4 <AmiBlitz3.ab3@18988>   MOVE.l (a7)+,d1
0002F2D8 <AmiBlitz3.ab3@18991>   TST.w 8(a0)
0002F2DC <AmiBlitz3.ab3@18992>   BEQ 'nostring
0002F2E0 <AmiBlitz3.ab3@18993>   MOVEM.l d2/d3,-(a7)
0002F2E2 <AmiBlitz3.ab3@18994>   MOVE.l d1,d2
0002F2E4 <AmiBlitz3.ab3@18995>   MOVEQ #0,d3
0002F2E8 <AmiBlitz3.ab3@18996>   MOVE.w 8(a0),d3
0002F2EA <AmiBlitz3.ab3@18997>   SUBQ.l #1,d3
0002F2EE <AmiBlitz3.ab3@18998>   BEQ 'nostring2
0002F2F0 <AmiBlitz3.ab3@19001>   ADDQ.l #4,d2
0002F2F2 <AmiBlitz3.ab3@19002>   MOVE.l d2,d1
0002F2F6 <AmiBlitz3.ab3@19003>   BSR writelong
0002F2FC <AmiBlitz3.ab3@19004>   TST.b debugmode
0002F300 <AmiBlitz3.ab3@19005>   BEQ 'l1
0002F306 <AmiBlitz3.ab3@19006>   MOVE.l #$c308,d1
0002F30C <AmiBlitz3.ab3@19007>   JSR Atokejsr
0002F312 <AmiBlitz3.ab3@19010>   ADDQ #2,a2offset
0002F314 <AmiBlitz3.ab3@19011>   SUBQ.l #1,d3
0002F318 <AmiBlitz3.ab3@19012>   BNE 'loop
0002F31C <AmiBlitz3.ab3@19015>   MOVEM.l (a7)+,d2/d3
0002F31E <AmiBlitz3.ab3@19018>   MOVE.l (a0),d0
0002F322 <AmiBlitz3.ab3@19019>   BNE 'more
0002F324 <AmiBlitz3.ab3@19020>   MOVE.l (a7)+,a1
0002F326 <AmiBlitz3.ab3@19021> RTS
0002F32A <AmiBlitz3.ab3@19024> libisat:   Ds.l 1
0002F330 <AmiBlitz3.ab3@19030>   MOVE.l libisat,-(A7)                                   
0002F336 <AmiBlitz3.ab3@19031>   MOVE.l A2,libisat
0002F33A <AmiBlitz3.ab3@19032>   LEA $6(A2,D1.L),A2
0002F342 <AmiBlitz3.ab3@19036>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002F346 <AmiBlitz3.ab3@19037>   BEQ 'dowritevar
0002F34E <AmiBlitz3.ab3@19038>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002F352 <AmiBlitz3.ab3@19039>   BEQ 'dowritevar
0002F35A <AmiBlitz3.ab3@19040>   CMP.l #$3e175265,$1c(a2)
0002F35E <AmiBlitz3.ab3@19041>   BEQ 'dowritevar
0002F366 <AmiBlitz3.ab3@19042>   CMP.l #$3e165772,$1c(a2)
0002F36A <AmiBlitz3.ab3@19043>   BNE 'nowritef
0002F36E <AmiBlitz3.ab3@19046>   MOVEM.l a0-a2/d2,-(a7)
0002F370 <AmiBlitz3.ab3@19047>   MOVEQ #0,d1
0002F37A <AmiBlitz3.ab3@19048>   MOVE.l #0,typebase
0002F37E <AmiBlitz3.ab3@19049>   MOVE.l $a(a3),a0
0002F382 <AmiBlitz3.ab3@19050>   MOVE.l $4(a0),d0
0002F388 <AmiBlitz3.ab3@19051>   CMP.l #8,d0
0002F38C <AmiBlitz3.ab3@19052>   BLE 'notype
0002F390 <AmiBlitz3.ab3@19053>   BSR scantype
0002F396 <AmiBlitz3.ab3@19056>   MOVE.l #$3f3c0000,d1
0002F39C <AmiBlitz3.ab3@19057>   MOVE.w a2offset,d1
0002F3A0 <AmiBlitz3.ab3@19058>   BSR writelong
0002F3A6 <AmiBlitz3.ab3@19059>   MOVE.l #$3f3c0000,d1
0002F3AA <AmiBlitz3.ab3@19060>   MOVE.l $a(a3),a0
0002F3AE <AmiBlitz3.ab3@19061>   MOVE.w 8(a0),d1
0002F3B2 <AmiBlitz3.ab3@19062>   BSR writelong
0002F3B8 <AmiBlitz3.ab3@19063>   MOVE.l #$3f3cab12,d1
0002F3BC <AmiBlitz3.ab3@19064>   BSR writelong
0002F3C2 <AmiBlitz3.ab3@19065>   ADDQ.w #6,a2offset
0002F3C6 <AmiBlitz3.ab3@19066>   MOVEM.l (a7)+,a0-a2/d2
0002F3CC <AmiBlitz3.ab3@19069>   TST.b fpu
0002F3D0 <AmiBlitz3.ab3@19070>   BEQ 'nofpu2
0002F3D8 <AmiBlitz3.ab3@19071>   CMP.l #$496e7400,$1a(a2)
0002F3DC <AmiBlitz3.ab3@19072>   BNE 'noint
0002F3DE <AmiBlitz3.ab3@19073>   MOVEQ #0,d1
0002F3E4 <AmiBlitz3.ab3@19074>   SUBQ.l #8,destpointer                                    ;fpu int
0002F3EA <AmiBlitz3.ab3@19075>   CLR.w a2offset
0002F3EE <AmiBlitz3.ab3@19076>   CMP.b #2,d2
0002F3F2 <AmiBlitz3.ab3@19077>   BGT 'noword
0002F3F6 <AmiBlitz3.ab3@19078>   MOVE.w #$48c0,d1
0002F3FC <AmiBlitz3.ab3@19079>   OR.w regnumstore,d1
0002F400 <AmiBlitz3.ab3@19080>   BSR writeword
0002F404 <AmiBlitz3.ab3@19081> BRA 'exit2
0002F408 <AmiBlitz3.ab3@19084>    CMP.b #3,d2
0002F40C <AmiBlitz3.ab3@19085>         BNE 'nolong
0002F410 <AmiBlitz3.ab3@19086> BRA 'exit2
0002F414 <AmiBlitz3.ab3@19089>    CMP.b #4,d2
0002F418 <AmiBlitz3.ab3@19090>         BNE 'noquick
0002F41C <AmiBlitz3.ab3@19091>         MOVE.w #$e080,d1
0002F422 <AmiBlitz3.ab3@19092>         OR.w regnumstore,d1
0002F426 <AmiBlitz3.ab3@19093>         BSR writeword
0002F42A <AmiBlitz3.ab3@19094>         MOVE.w #$e080,d1
0002F430 <AmiBlitz3.ab3@19095>         OR.w regnumstore,d1
0002F434 <AmiBlitz3.ab3@19096>         BSR writeword
0002F438 <AmiBlitz3.ab3@19097> BRA 'exit2
0002F43A <AmiBlitz3.ab3@19100>         MOVEQ #0,d0
0002F43C <AmiBlitz3.ab3@19101>         MOVEQ #0,d1
0002F442 <AmiBlitz3.ab3@19102>         MOVE.w regnumstore,d0
0002F444 <AmiBlitz3.ab3@19103>         ASL.l #7,d0
0002F44A <AmiBlitz3.ab3@19104>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002F44C <AmiBlitz3.ab3@19105>         OR.l d0,d1
0002F452 <AmiBlitz3.ab3@19107>         MOVE.l #$3f000000,d1
0002F454 <AmiBlitz3.ab3@19109>         MOVEQ #0,d0
0002F456 <AmiBlitz3.ab3@19110>         MOVEQ #0,d1
0002F45C <AmiBlitz3.ab3@19111>         MOVE.w regnumstore,d0
0002F45E <AmiBlitz3.ab3@19112>         ASL.l #7,d0
0002F460 <AmiBlitz3.ab3@19113>         MOVE.l d0,d1
0002F466 <AmiBlitz3.ab3@19114>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002F468 <AmiBlitz3.ab3@19115>         ASL.l #3,d0
0002F46A <AmiBlitz3.ab3@19116>         OR.l d0,d1
0002F46E <AmiBlitz3.ab3@19117>         BSR writelong
0002F470 <AmiBlitz3.ab3@19118>         MOVEQ #0,d0
0002F476 <AmiBlitz3.ab3@19119>         MOVE.w regnumstore,d0
0002F478 <AmiBlitz3.ab3@19120>         ASL.l #7,d0
0002F47E <AmiBlitz3.ab3@19121>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002F480 <AmiBlitz3.ab3@19122>         OR.l d0,d1
0002F482 <AmiBlitz3.ab3@19123>         ASL.l #1,d0
0002F484 <AmiBlitz3.ab3@19124>         ASL.l #8,d0
0002F486 <AmiBlitz3.ab3@19125>         OR.l d0,d1
0002F48A <AmiBlitz3.ab3@19126> BRA 'exit
0002F490 <AmiBlitz3.ab3@19129>   CMP.w #$3c01,24(a2)
0002F494 <AmiBlitz3.ab3@19130>   BNE 'noval
0002F496 <AmiBlitz3.ab3@19131>   MOVE.l a2,-(a7)
0002F49A <AmiBlitz3.ab3@19132>   BSR.w JL_0_BB14
0002F49C <AmiBlitz3.ab3@19133>   MOVE.l (a7)+,a2
0002F4A0 <AmiBlitz3.ab3@19134> BRA 'exit2
0002F4A8 <AmiBlitz3.ab3@19151>   CMP.l #$41627300,$1a(a2)
0002F4AC <AmiBlitz3.ab3@19152>   BNE 'noabs
0002F4AE <AmiBlitz3.ab3@19153>   MOVEQ #0,d1
0002F4B4 <AmiBlitz3.ab3@19154>   MOVE.w regnumstore,d1
0002F4B6 <AmiBlitz3.ab3@19155>   MOVE.w d1,d0
0002F4B8 <AmiBlitz3.ab3@19156>   ASL.w #7,d1
0002F4BA <AmiBlitz3.ab3@19157>   ASL.w #8,d0
0002F4BC <AmiBlitz3.ab3@19158>   ASL.w #2,d0
0002F4BE <AmiBlitz3.ab3@19159>   OR.w d0,d1
0002F4C4 <AmiBlitz3.ab3@19160>   SUBQ.l #8,destpointer                                    ;fpu abs
0002F4C8 <AmiBlitz3.ab3@19161>   MOVEM.l d3/d1,-(a7)
0002F4CC <AmiBlitz3.ab3@19162>   MOVE.w #5,d3
0002F4CE <AmiBlitz3.ab3@19163>   EXG d2,d3
0002F4D4 <AmiBlitz3.ab3@19164>   MOVE.w regnum,-(a7)
0002F4DE <AmiBlitz3.ab3@19165>   MOVE.w regnumstore,regnum
0002F4E2 <AmiBlitz3.ab3@19166>   BSR writeconvertcode
0002F4E8 <AmiBlitz3.ab3@19167>   MOVE.w (a7)+,regnum
0002F4EA <AmiBlitz3.ab3@19168>   EXG d2,d3
0002F4EE <AmiBlitz3.ab3@19169>   MOVEM.l (a7)+,d3/d1
0002F4F4 <AmiBlitz3.ab3@19170>   OR.l #$f2000018,d1
0002F4FA <AmiBlitz3.ab3@19171>   CLR.w a2offset
0002F4FE <AmiBlitz3.ab3@19172> BRA 'exit
0002F502 <AmiBlitz3.ab3@19175>   CMP.b #5,d2
0002F506 <AmiBlitz3.ab3@19176>   BNE 'nofpu2
0002F50A <AmiBlitz3.ab3@19177>   MOVE.b 24(a2),d0
0002F50E <AmiBlitz3.ab3@19178>   CMP.b #$60,d0                                            ;nolib $edxx
0002F512 <AmiBlitz3.ab3@19179>   BNE 'nofpu
0002F514 <AmiBlitz3.ab3@19180>   MOVEQ #0,d1
0002F51A <AmiBlitz3.ab3@19181>   MOVE.w regnumstore,d1
0002F51C <AmiBlitz3.ab3@19182>   MOVE.w d1,d0
0002F51E <AmiBlitz3.ab3@19183>   ASL.w #7,d1
0002F520 <AmiBlitz3.ab3@19184>   ASL.w #8,d0
0002F522 <AmiBlitz3.ab3@19185>   ASL.w #2,d0
0002F524 <AmiBlitz3.ab3@19186>   OR.w d0,d1
0002F528 <AmiBlitz3.ab3@19187>   MOVE.b 25(a2),d0
0002F52C <AmiBlitz3.ab3@19188>   CMP.b #5,d0
0002F530 <AmiBlitz3.ab3@19189>   BNE 'nocos
0002F536 <AmiBlitz3.ab3@19190>   OR.l #$f200001d,d1                                       ;fpu cos
0002F53A <AmiBlitz3.ab3@19191> BRA 'exit
0002F53E <AmiBlitz3.ab3@19194>   CMP.b #$c,d0
0002F542 <AmiBlitz3.ab3@19195>   BNE 'nosqr
0002F548 <AmiBlitz3.ab3@19196>   OR.l #$f2000004,d1                                       ;fpu sqr
0002F54C <AmiBlitz3.ab3@19197> BRA 'exit
0002F550 <AmiBlitz3.ab3@19200>   CMP.b #$d,d0
0002F554 <AmiBlitz3.ab3@19201>   BNE 'notan
0002F55A <AmiBlitz3.ab3@19202>   OR.l #$f200000f,d1                                       ;fpu tan
0002F55E <AmiBlitz3.ab3@19203> BRA 'exit
0002F562 <AmiBlitz3.ab3@19206>   CMP.b #$a,d0
0002F566 <AmiBlitz3.ab3@19207>   BNE 'nosin
0002F56C <AmiBlitz3.ab3@19208>   OR.l #$f200000e,d1                                       ;fpu sin
0002F570 <AmiBlitz3.ab3@19209> BRA 'exit
0002F574 <AmiBlitz3.ab3@19212>   CMP.b #$3,d0
0002F578 <AmiBlitz3.ab3@19213>   BNE 'noasin
0002F57E <AmiBlitz3.ab3@19214>   OR.l #$f200000c,d1                                       ;fpu asin
0002F582 <AmiBlitz3.ab3@19215> BRA 'exit
0002F586 <AmiBlitz3.ab3@19218>   CMP.b #$2,d0
0002F58A <AmiBlitz3.ab3@19219>   BNE 'noacos
0002F590 <AmiBlitz3.ab3@19220>   OR.l #$f200001c,d1                                       ;fpu acos
0002F594 <AmiBlitz3.ab3@19221> BRA 'exit
0002F598 <AmiBlitz3.ab3@19224>   CMP.b #$4,d0
0002F59C <AmiBlitz3.ab3@19225>   BNE 'noatan
0002F5A2 <AmiBlitz3.ab3@19226>   OR.l #$f200000a,d1                                       ;fpu atan
0002F5A6 <AmiBlitz3.ab3@19227> BRA 'exit
0002F5AA <AmiBlitz3.ab3@19230>   CMP.b #$e,d0
0002F5AE <AmiBlitz3.ab3@19231>   BNE 'nohtan
0002F5B4 <AmiBlitz3.ab3@19232>   OR.l #$f2000009,d1                                       ;fpu htan
0002F5B8 <AmiBlitz3.ab3@19233> BRA 'exit
0002F5BC <AmiBlitz3.ab3@19236>   CMP.b #$6,d0
0002F5C0 <AmiBlitz3.ab3@19237>   BNE 'nohcos
0002F5C6 <AmiBlitz3.ab3@19238>   OR.l #$f2000019,d1                                       ;fpu hcos
0002F5CA <AmiBlitz3.ab3@19239> BRA 'exit
0002F5CE <AmiBlitz3.ab3@19242>   CMP.b #$b,d0
0002F5D2 <AmiBlitz3.ab3@19243>   BNE 'nohsin
0002F5D8 <AmiBlitz3.ab3@19244>   OR.l #$f2000002,d1                                       ;fpu hsin
0002F5DC <AmiBlitz3.ab3@19245> BRA 'exit
0002F5E0 <AmiBlitz3.ab3@19248>   CMP.b #$9,d0
0002F5E4 <AmiBlitz3.ab3@19249>   BNE 'nolog
0002F5EA <AmiBlitz3.ab3@19250>   OR.l #$f2000014,d1                                       ;fpu log
0002F5EE <AmiBlitz3.ab3@19251> BRA 'exit
0002F5F2 <AmiBlitz3.ab3@19254>   CMP.b #$8,d0
0002F5F6 <AmiBlitz3.ab3@19255>   BNE 'nolog10
0002F5FC <AmiBlitz3.ab3@19256>   OR.l #$f2000015,d1                                       ;fpu log10
0002F600 <AmiBlitz3.ab3@19257> BRA 'exit
0002F604 <AmiBlitz3.ab3@19260>   CMP.b #$7,d0
0002F608 <AmiBlitz3.ab3@19261>   BNE 'noexp
0002F60E <AmiBlitz3.ab3@19262>   OR.l #$f2000010,d1                                       ;fpu exp
0002F612 <AmiBlitz3.ab3@19263> BRA 'exit
0002F618 <AmiBlitz3.ab3@19266>   LEA fpuerr,a0
0002F61A <AmiBlitz3.ab3@19267>   MOVE.l a0,-(a7)
0002F620 <AmiBlitz3.ab3@19268> JMP handle_compileerror
0002F624 <AmiBlitz3.ab3@19272>   CMP.b #$3c,d0
0002F628 <AmiBlitz3.ab3@19273>   BNE 'nofpu2
0002F62A <AmiBlitz3.ab3@19274>   MOVEQ #0,d1
0002F630 <AmiBlitz3.ab3@19275>       MOVE.w regnumstore,d1
0002F632 <AmiBlitz3.ab3@19276>       MOVE.w d1,d0
0002F634 <AmiBlitz3.ab3@19277>       ASL.w #7,d1
0002F636 <AmiBlitz3.ab3@19278>       ASL.w #8,d0
0002F638 <AmiBlitz3.ab3@19279>       ASL.w #2,d0
0002F63A <AmiBlitz3.ab3@19280>       OR.w d0,d1
0002F640 <AmiBlitz3.ab3@19281>       CMP.b #$03,25(a2)
0002F644 <AmiBlitz3.ab3@19282>       BNE 'nosgn
0002F64A <AmiBlitz3.ab3@19285>       SUBQ.l #8,destpointer                                ;fpu sgn
0002F650 <AmiBlitz3.ab3@19286>         OR.l #$f200003a,d1
0002F654 <AmiBlitz3.ab3@19287>         BSR writelong
0002F65A <AmiBlitz3.ab3@19288>         CLR.w a2offset
0002F660 <AmiBlitz3.ab3@19289>          MOVE.l #$F28E0006,d1
0002F664 <AmiBlitz3.ab3@19290>          BSR writelong
0002F66A <AmiBlitz3.ab3@19291>   MOVE.l #$7000600a,d1
0002F66E <AmiBlitz3.ab3@19292>   BSR writelong
0002F674 <AmiBlitz3.ab3@19293>   MOVE.l #$70014840,d1
0002F678 <AmiBlitz3.ab3@19294>   BSR writelong
0002F67E <AmiBlitz3.ab3@19295>   MOVE.l #$F292,d1
0002F682 <AmiBlitz3.ab3@19296>   BSR writeword
0002F688 <AmiBlitz3.ab3@19297>   MOVE.l #$000470FF,d1
0002F68C <AmiBlitz3.ab3@19298> BRA 'exit
0002F694 <AmiBlitz3.ab3@19301>   CMP.l #"Frac",$1a(a2)
0002F698 <AmiBlitz3.ab3@19302>   BNE 'nofrac
0002F69E <AmiBlitz3.ab3@19303> JMP notwork
0002F6A2 <AmiBlitz3.ab3@19344> BRA 'exit
0002F6A6 <AmiBlitz3.ab3@19348>   BSR.w JL_0_BB14                                          ;write lib code
0002F6AC <AmiBlitz3.ab3@19349>   MOVE.l (A7)+,libisat
0002F6AE <AmiBlitz3.ab3@19350> RTS
0002F6B2 <AmiBlitz3.ab3@19353>   BSR writelong
0002F6B8 <AmiBlitz3.ab3@19356>   MOVE.l (A7)+,libisat
0002F6BA <AmiBlitz3.ab3@19357> RTS
0002F6BE <AmiBlitz3.ab3@19361>   BSR.w fetchregs
0002F6C4 <AmiBlitz3.ab3@19362>   TST.b debugmode
0002F6C8 <AmiBlitz3.ab3@19363>    BEQ.w JL_0_BB76
0002F6CA <AmiBlitz3.ab3@19364>   MOVE.l (A2),D1
0002F6CE <AmiBlitz3.ab3@19365>   OR.l $8(A2),D1
0002F6D2 <AmiBlitz3.ab3@19366>   BCLR #$0,D1
0002F6D4 <AmiBlitz3.ab3@19367>   TST.l D1
0002F6D8 <AmiBlitz3.ab3@19368>    BEQ.w JL_0_BB76
0002F6DA <AmiBlitz3.ab3@19369>   MOVE.l (A2)+,D1
0002F6DE <AmiBlitz3.ab3@19370>   BTST #$0,D1
0002F6E2 <AmiBlitz3.ab3@19371>    BEQ.w JL_0_BB60
0002F6E8 <AmiBlitz3.ab3@19372>   TST.w blitzmode
0002F6EC <AmiBlitz3.ab3@19373>    BPL.w blitzerr
0002F6F2 <AmiBlitz3.ab3@19374>   TST.b debugmode
0002F6F6 <AmiBlitz3.ab3@19375>    BEQ.w JL_0_BB5C
0002F6F8 <AmiBlitz3.ab3@19376>   MOVE.l D1,-(A7)
0002F6FC <AmiBlitz3.ab3@19377>   MOVE.w #$C311,D1
0002F700 <AmiBlitz3.ab3@19378>    BSR.w makebtst
0002F702 <AmiBlitz3.ab3@19379>   MOVE.l (A7)+,D1
0002F706 <AmiBlitz3.ab3@19382>   BCLR #$0,D1
0002F708 <AmiBlitz3.ab3@19385>   TST.l D1
0002F70C <AmiBlitz3.ab3@19386>    BSR.w JL_0_BBC6
0002F70E <AmiBlitz3.ab3@19387>   MOVE.l (A2)+,D1
0002F712 <AmiBlitz3.ab3@19388>    BSR.w JL_0_BB98
0002F714 <AmiBlitz3.ab3@19389>   MOVE.l (A2)+,D1
0002F718 <AmiBlitz3.ab3@19390>    BSR.w JL_0_BBC6
0002F71C <AmiBlitz3.ab3@19391> BRA.w JL_0_BB90
0002F722 <AmiBlitz3.ab3@19394>   BTST #$0,$3(A2)
0002F726 <AmiBlitz3.ab3@19395>    BEQ.w JL_0_BB88
0002F72A <AmiBlitz3.ab3@19396>   MOVE.w blitzmode(PC),D1
0002F72E <AmiBlitz3.ab3@19397>    BPL.w blitzerr
0002F732 <AmiBlitz3.ab3@19400>   MOVE.l $4(A2),D1
0002F736 <AmiBlitz3.ab3@19401>    BSR.w JL_0_BB98
0002F73C <AmiBlitz3.ab3@19404>   MOVEA.l libisat,A2
0002F73E <AmiBlitz3.ab3@19405> RTS
0002F742 <AmiBlitz3.ab3@19408>   BTST #$0,D1
0002F746 <AmiBlitz3.ab3@19409>    BEQ.w JL_0_BBC4
0002F74C <AmiBlitz3.ab3@19410>   TST.w blitzmode
0002F750 <AmiBlitz3.ab3@19411>    BMI.w amigaerr
0002F756 <AmiBlitz3.ab3@19412>   TST.b debugmode
0002F75A <AmiBlitz3.ab3@19413>    BEQ.w JL_0_BBC0
0002F75C <AmiBlitz3.ab3@19414>   MOVE.l D1,-(A7)
0002F760 <AmiBlitz3.ab3@19415>   MOVE.w #$C312,D1
0002F764 <AmiBlitz3.ab3@19416>    BSR.w makebtst
0002F766 <AmiBlitz3.ab3@19417>   MOVE.l (A7)+,D1
0002F76A <AmiBlitz3.ab3@19420>   BCLR #$0,D1
0002F76C <AmiBlitz3.ab3@19423>   TST.l D1
0002F770 <AmiBlitz3.ab3@19426>    BEQ.w JL_0_BBD2
0002F772 <AmiBlitz3.ab3@19427>   MOVE.l A1,-(A7)
0002F776 <AmiBlitz3.ab3@19428>    BSR.w JL_0_BBD4
0002F778 <AmiBlitz3.ab3@19429>   MOVEA.l (A7)+,A1
0002F77A <AmiBlitz3.ab3@19432> RTS
0002F780 <AmiBlitz3.ab3@19435>   MOVEA.l libisat,A0
0002F786 <AmiBlitz3.ab3@19436>   TST.w cfetchmode
0002F78A <AmiBlitz3.ab3@19437>    BEQ.w JL_0_BBF6
0002F78C <AmiBlitz3.ab3@19438>   ADD.l A0,D1
0002F78E <AmiBlitz3.ab3@19439>   MOVE.l D1,-(A7)
0002F792 <AmiBlitz3.ab3@19440>   MOVE.w #$4EB9,D1
0002F796 <AmiBlitz3.ab3@19441>    BSR.w writeword
0002F798 <AmiBlitz3.ab3@19442>   MOVE.l (A7)+,D1
0002F79C <AmiBlitz3.ab3@19443> BRA.w writelong
0002F7A0 <AmiBlitz3.ab3@19446>   LEA $0(A0,D1.L),A1
0002F7A6 <AmiBlitz3.ab3@19447>   CLR.w inline
0002F7AA <AmiBlitz3.ab3@19450>   CMPI.b #$A0,(A1)+
0002F7AE <AmiBlitz3.ab3@19451>    BNE.w JL_0_BC68
0002F7B0 <AmiBlitz3.ab3@19452>   TST.b (A1)+
0002F7B4 <AmiBlitz3.ab3@19453>    BEQ.w JL_0_BC18
0002F7BA <AmiBlitz3.ab3@19454>   CMPI.b #$1,-$1(A1)
0002F7BE <AmiBlitz3.ab3@19455>    BEQ.w JL_0_BC24
0002F7C4 <AmiBlitz3.ab3@19458>   MOVE.w (A1)+,inline
0002F7C6 <AmiBlitz3.ab3@19459>   ADDQ.l #4,D1
0002F7CA <AmiBlitz3.ab3@19460> BRA.w JL_0_BC00
0002F7D0 <AmiBlitz3.ab3@19463>   TST.w blitzmode
0002F7D4 <AmiBlitz3.ab3@19464>    BPL.w JL_0_BC4A
0002F7DA <AmiBlitz3.ab3@19465>   TST.b debugmode
0002F7DE <AmiBlitz3.ab3@19466>    BEQ.w JL_0_BC40
0002F7E2 <AmiBlitz3.ab3@19467>   MOVE.w #$C311,D1
0002F7E6 <AmiBlitz3.ab3@19468>    BSR.w makebtst
0002F7E8 <AmiBlitz3.ab3@19471>   MOVE.l (A1)+,D1
0002F7EC <AmiBlitz3.ab3@19472>   LEA $0(A0,D1.L),A1
0002F7F0 <AmiBlitz3.ab3@19473> BRA.w JL_0_BC00
0002F7F6 <AmiBlitz3.ab3@19476>   TST.b debugmode
0002F7FA <AmiBlitz3.ab3@19477>    BEQ.w JL_0_BC60
0002F7FC <AmiBlitz3.ab3@19478>   MOVE.l D1,-(A7)
0002F800 <AmiBlitz3.ab3@19479>   MOVE.w #$C312,D1
0002F804 <AmiBlitz3.ab3@19480>    BSR.w makebtst
0002F806 <AmiBlitz3.ab3@19481>   MOVE.l (A7)+,D1
0002F808 <AmiBlitz3.ab3@19484>   ADDQ.w #4,A1
0002F80A <AmiBlitz3.ab3@19485>   ADDQ.l #6,D1
0002F80E <AmiBlitz3.ab3@19486> BRA.w JL_0_BC00
0002F814 <AmiBlitz3.ab3@19489>   TST.w inline
0002F818 <AmiBlitz3.ab3@19490>    BEQ.w JL_0_BC7E
0002F81A <AmiBlitz3.ab3@19491>   SUBQ.w #1,A1
0002F81C <AmiBlitz3.ab3@19492>   MOVEA.l A1,A0
0002F820 <AmiBlitz3.ab3@19493>   ADDA.w inline(PC),A1
0002F824 <AmiBlitz3.ab3@19494> BRA.w pokecode2
0002F828 <AmiBlitz3.ab3@19497>   MOVEM.l a0/D1,-(A7)
0002F82E <AmiBlitz3.ab3@19498>   TST.w debugversion
0002F832 <AmiBlitz3.ab3@19499>   BEQ 'l11
0002F83A <AmiBlitz3.ab3@19500>   BTST #$7,link_debuginfo
0002F83E <AmiBlitz3.ab3@19501>   BEQ.w 'l11
0002F844 <AmiBlitz3.ab3@19502>   MOVE.l lastinstruction,d1
0002F848 <AmiBlitz3.ab3@19503>   BEQ 'l11
0002F84E <AmiBlitz3.ab3@19504>   CLR.l lastinstruction
0002F854 <AmiBlitz3.ab3@19505>   CMP.l #$e000,d1
0002F858 <AmiBlitz3.ab3@19506>   BGE 'ln99
0002F85E <AmiBlitz3.ab3@19507>   LEA notf,a0
0002F864 <AmiBlitz3.ab3@19508>   CMP.l #$c601,d1
0002F868 <AmiBlitz3.ab3@19509>   BNE 'ln1
0002F86E <AmiBlitz3.ab3@19510>   LEA strcpy,a0
0002F872 <AmiBlitz3.ab3@19511> BRA 'ln3
0002F878 <AmiBlitz3.ab3@19514>   CMP.l #$c700,d1
0002F87C <AmiBlitz3.ab3@19515>   BNE 'ln2
0002F882 <AmiBlitz3.ab3@19516>   LEA strvar,a0
0002F886 <AmiBlitz3.ab3@19517> BRA 'ln3
0002F88C <AmiBlitz3.ab3@19520>   CMP.l #$ce00,d1
0002F890 <AmiBlitz3.ab3@19521>   BNE 'ln4
0002F896 <AmiBlitz3.ab3@19522>   LEA strcmp,a0
0002F89A <AmiBlitz3.ab3@19523> BRA 'ln3
0002F8A0 <AmiBlitz3.ab3@19526>   CMP.l #$ca00,d1
0002F8A4 <AmiBlitz3.ab3@19527>   BNE 'ln5
0002F8AA <AmiBlitz3.ab3@19528>   LEA qmul,a0
0002F8AE <AmiBlitz3.ab3@19529> BRA 'ln3
0002F8B4 <AmiBlitz3.ab3@19532>   CMP.l #$d000,d1
0002F8B8 <AmiBlitz3.ab3@19533>      BNE 'ln6
0002F8BE <AmiBlitz3.ab3@19534>      LEA _MaxLen,a0
0002F8C2 <AmiBlitz3.ab3@19535> BRA 'ln3
0002F8C8 <AmiBlitz3.ab3@19538>   CMP.l #$cb00,d1
0002F8CC <AmiBlitz3.ab3@19539>   BNE 'ln3
0002F8D2 <AmiBlitz3.ab3@19540>   LEA qdiv,a0
0002F8D6 <AmiBlitz3.ab3@19541> BRA 'ln3
0002F8D8 <AmiBlitz3.ab3@19544>   MOVE.l d1,a0
0002F8DC <AmiBlitz3.ab3@19545>   LEA $8(a0),a0
0002F8E0 <AmiBlitz3.ab3@19548>   CMP.w #$ffff,(a0)+
0002F8E4 <AmiBlitz3.ab3@19549>   BNE 'l1
0002F8E8 <AmiBlitz3.ab3@19550>   LEA 6(a0),a0
0002F8EC <AmiBlitz3.ab3@19553>   MOVEM.l a1/a2/d7/d2,-(a7)
0002F8EE <AmiBlitz3.ab3@19554>   MOVEQ #0,d2
0002F8F4 <AmiBlitz3.ab3@19555>   LEA ptr_parameterstore,a1
0002F8F6 <AmiBlitz3.ab3@19558>   ADDQ.l #1,d2
0002F8F8 <AmiBlitz3.ab3@19559>   MOVE.b (a0)+,d0
0002F8FC <AmiBlitz3.ab3@19560> 
0002F900 <AmiBlitz3.ab3@19561>   BNE 'nodollar
0002F904 <AmiBlitz3.ab3@19562>   MOVE.b #"S",d0
0002F908 <AmiBlitz3.ab3@19564>   CMP.b #"?",d0
0002F90C <AmiBlitz3.ab3@19565>   BEQ 'nolabelwrite
0002F90E <AmiBlitz3.ab3@19566>   MOVE.b d0,(a1)+
0002F912 <AmiBlitz3.ab3@19567>   BNE 'l2
0002F918 <AmiBlitz3.ab3@19568>   MOVE.w #"__",-1(a1)
0002F91A <AmiBlitz3.ab3@19569>   ADDQ.l #2,d2
0002F91E <AmiBlitz3.ab3@19570>   CLR.b 1(a1)
0002F924 <AmiBlitz3.ab3@19571>   JSR findlabel2
0002F928 <AmiBlitz3.ab3@19572>   BEQ 'l3
0002F92E <AmiBlitz3.ab3@19573>   JSR addlabelhash
0002F932 <AmiBlitz3.ab3@19576>   CLR.l 4(a2)
0002F936 <AmiBlitz3.ab3@19577>   MOVE.l $14(a7),a0
0002F93A <AmiBlitz3.ab3@19578>   MOVE.l $10(a7),d1
0002F93E <AmiBlitz3.ab3@19579>   SUB.l $12(a0),d1
0002F942 <AmiBlitz3.ab3@19580>   ADD.l $28(a0),d1
0002F946 <AmiBlitz3.ab3@19581>   MOVE.l d1,8(a2)
0002F94A <AmiBlitz3.ab3@19582> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002F950 <AmiBlitz3.ab3@19585>   TST.b typecheck
0002F954 <AmiBlitz3.ab3@19586>   BEQ 'p1
0002F95A <AmiBlitz3.ab3@19587>   MOVE.l lasttoken,d1
0002F960 <AmiBlitz3.ab3@19588>   CMP.l #$da01,d1                                          ;poke
0002F964 <AmiBlitz3.ab3@19589>   BEQ 'lp1
0002F96A <AmiBlitz3.ab3@19590>   CMP.l #$da02,d1                                          ;peek
0002F96E <AmiBlitz3.ab3@19591>   BNE 'p1
0002F974 <AmiBlitz3.ab3@19594>   TST.b peekaddrsize
0002F978 <AmiBlitz3.ab3@19595>   BEQ 'p1
0002F980 <AmiBlitz3.ab3@19596>   CMP.b #3,peekaddrsize
0002F984 <AmiBlitz3.ab3@19597>   BNE errormsg_onlylong
0002F98A <AmiBlitz3.ab3@19598>   CLR.b peekaddrsize
0002F990 <AmiBlitz3.ab3@19606>    TST.b fpu
0002F994 <AmiBlitz3.ab3@19607>   BNE 'optf
0002F99A <AmiBlitz3.ab3@19608>   TST.b fast
0002F99E <AmiBlitz3.ab3@19609>   BEQ JL11a2
0002F9A6 <AmiBlitz3.ab3@19616>   CMP.l #"Poke",20(a2)                                     ;poke
0002F9AA <AmiBlitz3.ab3@19617>   BNE peekopt
0002F9AE <AmiBlitz3.ab3@19618>   TST.b 24(a2)
0002F9B2 <AmiBlitz3.ab3@19619>   BNE peekopt
0002F9B6 <AmiBlitz3.ab3@19620>   CMP.b #3,d2
0002F9BA <AmiBlitz3.ab3@19621>   BNE 'lw1
0002F9C0 <AmiBlitz3.ab3@19624>   MOVE.l #$21821990,d1
0002F9C4 <AmiBlitz3.ab3@19625> BRA.s 'lpx
0002F9C8 <AmiBlitz3.ab3@19628>   CMP.b #2,d2
0002F9CC <AmiBlitz3.ab3@19629>   BNE 'lb1
0002F9D2 <AmiBlitz3.ab3@19630>   MOVE.l #$31821990,d1
0002F9D6 <AmiBlitz3.ab3@19631> BRA.s 'lpx
0002F9DA <AmiBlitz3.ab3@19634>   CMP.b #1,d2
0002F9DE <AmiBlitz3.ab3@19635>   BNE 'lp3
0002F9E4 <AmiBlitz3.ab3@19636>   MOVE.l #$11821990,d1
0002F9E8 <AmiBlitz3.ab3@19637> BRA.s 'lpx
0002F9EC <AmiBlitz3.ab3@19640>   CMP.b #5,d2
0002F9F0 <AmiBlitz3.ab3@19641>     BNE JL11a2
0002F9F6 <AmiBlitz3.ab3@19642>     TST.b fpu
0002F9FA <AmiBlitz3.ab3@19643>     BEQ 'll1
0002FA00 <AmiBlitz3.ab3@19644>      MOVE.l destpointer,a4
0002FA08 <AmiBlitz3.ab3@19645>     CMP.l #$f22d4500,-6(a4)
0002FA0C <AmiBlitz3.ab3@19646>     BNE 'noglob
0002FA12 <AmiBlitz3.ab3@19647>     TST.b doublepeek
0002FA16 <AmiBlitz3.ab3@19648>     BNE 'noglob
0002FA1C <AmiBlitz3.ab3@19649>     MOVE.w -2(a4),-4(a4)
0002FA22 <AmiBlitz3.ab3@19650>     MOVE.w #$21ad,-6(a4)
0002FA28 <AmiBlitz3.ab3@19651>     MOVE.w #$1990,-2(a4)
0002FA30 <AmiBlitz3.ab3@19652>     MOVE.w #9,peeksize
0002FA32 <AmiBlitz3.ab3@19653>     ADDQ #8,a7
0002FA34 <AmiBlitz3.ab3@19654> RTS
0002FA3C <AmiBlitz3.ab3@19657>     CMP.l #$f22c4500,-6(a4)
0002FA40 <AmiBlitz3.ab3@19658>     BNE 'nolocal
0002FA46 <AmiBlitz3.ab3@19659>     MOVE.w -2(a4),-4(a4)
0002FA4C <AmiBlitz3.ab3@19660>     TST.b doublepeek                                       ;dont move longfix on double floats
0002FA50 <AmiBlitz3.ab3@19661>     BNE 'nolocal
0002FA56 <AmiBlitz3.ab3@19662>     MOVE.w #$21ac,-6(a4)
0002FA5C <AmiBlitz3.ab3@19663>     MOVE.w #$1990,-2(a4)
0002FA64 <AmiBlitz3.ab3@19664>     MOVE.w #9,peeksize
0002FA66 <AmiBlitz3.ab3@19665>     ADDQ #8,a7
0002FA68 <AmiBlitz3.ab3@19666> RTS
0002FA6C <AmiBlitz3.ab3@19669>     MOVE.w #$f230,d1
0002FA70 <AmiBlitz3.ab3@19670>     BSR writeword
0002FA76 <AmiBlitz3.ab3@19671>   MOVE.l #$65001990,d1
0002FA7C <AmiBlitz3.ab3@19672>   TST.b doublepeek
0002FA80 <AmiBlitz3.ab3@19673>   BEQ 'lpx
0002FA86 <AmiBlitz3.ab3@19674>   OR.l   #$10000000,d1
0002FA88 <AmiBlitz3.ab3@19678>   ADDQ #8,a7
0002FA90 <AmiBlitz3.ab3@19679>   MOVE.w #9,peeksize
0002FA94 <AmiBlitz3.ab3@19680> BRA writelong
0002FA9C <AmiBlitz3.ab3@19683>   CMP.l #"Peek",20(a2)
0002FAA0 <AmiBlitz3.ab3@19684>   BNE 'l10
0002FAA4 <AmiBlitz3.ab3@19685>   TST.b 24(a2)
0002FAA8 <AmiBlitz3.ab3@19686>   BNE 'l10
0002FAB0 <AmiBlitz3.ab3@19687>   CMP.w #7,peeksize
0002FAB4 <AmiBlitz3.ab3@19688>   BEQ 'l10
0002FABC <AmiBlitz3.ab3@19689>    CMP.w #3,peeksize
0002FAC0 <AmiBlitz3.ab3@19690>    BNE.s 'lw1
0002FAC6 <AmiBlitz3.ab3@19693>   MOVE.l #$20301990,d1
0002FACA <AmiBlitz3.ab3@19694> BRA exitjsr
0002FAD2 <AmiBlitz3.ab3@19697>   CMP.w #2,peeksize
0002FAD6 <AmiBlitz3.ab3@19698>    BNE.s 'lb1
0002FADC <AmiBlitz3.ab3@19699>    MOVE.l #$30301990,d1
0002FAE0 <AmiBlitz3.ab3@19700> BRA exitjsr
0002FAE8 <AmiBlitz3.ab3@19703>   CMP.w #1,peeksize
0002FAEC <AmiBlitz3.ab3@19704>    BNE.s 'lf1
0002FAF2 <AmiBlitz3.ab3@19705>    MOVE.l #$10301990,d1
0002FAF6 <AmiBlitz3.ab3@19706> BRA exitjsr
0002FAFE <AmiBlitz3.ab3@19709>   CMP.w #5,peeksize
0002FB02 <AmiBlitz3.ab3@19710>    BNE 'l10
0002FB08 <AmiBlitz3.ab3@19711>    TST.b fpu
0002FB0C <AmiBlitz3.ab3@19712>    BEQ 'll1
0002FB10 <AmiBlitz3.ab3@19713>    MOVE.w #$f230,d1
0002FB14 <AmiBlitz3.ab3@19714>    BSR writeword
0002FB16 <AmiBlitz3.ab3@19715>    MOVEQ #0,d1
0002FB1C <AmiBlitz3.ab3@19716>    MOVE.w tempregnum,d1
0002FB1E <AmiBlitz3.ab3@19717>    ASL.l #7,d1
0002FB20 <AmiBlitz3.ab3@19718>    ASL.l #8,d1
0002FB22 <AmiBlitz3.ab3@19719>    ASL.l #8,d1
0002FB28 <AmiBlitz3.ab3@19720>    ADD.l #$44001990,d1
0002FB2E <AmiBlitz3.ab3@19721>     TST.b doublepeek
0002FB32 <AmiBlitz3.ab3@19722>     BEQ 'lpx2
0002FB38 <AmiBlitz3.ab3@19723>     OR.l   #$10000000,d1
0002FB3C <AmiBlitz3.ab3@19725> BRA exitjsr
0002FB40 <AmiBlitz3.ab3@19729>   MOVE.w #$4EB9,D1
0002FB44 <AmiBlitz3.ab3@19730>    BSR.w writeword                                         ;writesysjsr
0002FB48 <AmiBlitz3.ab3@19731>   MOVEM.l (A7)+,a0/D1
0002FB4E <AmiBlitz3.ab3@19732>    JSR addoff
0002FB52 <AmiBlitz3.ab3@19733>   SUB.l $12(A0),D1
0002FB56 <AmiBlitz3.ab3@19734>   ADD.l $28(A0),D1
0002FB5A <AmiBlitz3.ab3@19735> BRA.w writelong
0002FB5C <AmiBlitz3.ab3@19740>   MOVE.w D1,-(A7)
0002FB60 <AmiBlitz3.ab3@19741>   MOVE.w tstmode(PC),D1
0002FB64 <AmiBlitz3.ab3@19742>    BSR.w writeword
0002FB68 <AmiBlitz3.ab3@19743>    BSR.w getbbase
0002FB6C <AmiBlitz3.ab3@19744>    BSR.w writeword
0002FB6E <AmiBlitz3.ab3@19745>   MOVE.w (A7)+,D1
0002FB72 <AmiBlitz3.ab3@19746>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0002FB76 <AmiBlitz3.ab3@19747>    BSR.w Atokejsr
0002FB7A <AmiBlitz3.ab3@19748>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0002FB7C <AmiBlitz3.ab3@19749> RTS
0002FB80 <AmiBlitz3.ab3@19757>   MOVE.w blitzoff(PC),D1
0002FB84 <AmiBlitz3.ab3@19758>   CMP.w #-$1,D1
0002FB88 <AmiBlitz3.ab3@19759>    BNE.w getbbase__done
0002FB8E <AmiBlitz3.ab3@19760>   ADDQ.w #1,globalvarpointer
0002FB96 <AmiBlitz3.ab3@19761>   BCLR #$0,globalvarpointer+1
0002FB9C <AmiBlitz3.ab3@19762>   MOVE.w globalvarpointer,D1
0002FBA2 <AmiBlitz3.ab3@19763>   MOVE.w D1,blitzoff
0002FBA8 <AmiBlitz3.ab3@19764>   ADDQ.w #2,globalvarpointer
0002FBAA <AmiBlitz3.ab3@19767> RTS
0002FBAE <AmiBlitz3.ab3@19771> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0002FBB0 <AmiBlitz3.ab3@19774> inline:     Ds.w 1
0002FBB2 <AmiBlitz3.ab3@19775> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0002FBB4 <AmiBlitz3.ab3@19776> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0002FBB6 <AmiBlitz3.ab3@19780>   MOVE.w (A2)+,D1
0002FBBA <AmiBlitz3.ab3@19781>    BEQ.w fetchregs__done
0002FBBC <AmiBlitz3.ab3@19782>   MOVE.w (A2)+,D2
0002FBC0 <AmiBlitz3.ab3@19783>    BSR.w toreg
0002FBC4 <AmiBlitz3.ab3@19784> BRA.w fetchregs
0002FBC6 <AmiBlitz3.ab3@19787> RTS
0002FBCA <AmiBlitz3.ab3@19792>   CMP.w #-$100,D2
0002FBCE <AmiBlitz3.ab3@19793>    BCC.w toreg__yeah
0002FBD2 <AmiBlitz3.ab3@19795>   BCLR #$F,D2
0002FBD6 <AmiBlitz3.ab3@19796>    BEQ.w toreg__nobm
0002FBDC <AmiBlitz3.ab3@19798>   TST.w blitzmode
0002FBE0 <AmiBlitz3.ab3@19799>    BMI.w toreg__yeah
0002FBE2 <AmiBlitz3.ab3@19800> RTS
0002FBE6 <AmiBlitz3.ab3@19803>   BCLR #$E,D2
0002FBEA <AmiBlitz3.ab3@19804>    BEQ.w toreg__yeah
0002FBF0 <AmiBlitz3.ab3@19806>   TST.w blitzmode
0002FBF4 <AmiBlitz3.ab3@19807>    BPL.w toreg__yeah
0002FBF6 <AmiBlitz3.ab3@19808> RTS
0002FBFC <AmiBlitz3.ab3@19811>   JSR uselib
0002FBFE <AmiBlitz3.ab3@19812>   TST.b D2
0002FC02 <AmiBlitz3.ab3@19813>    BEQ.w toreg__norm
0002FC06 <AmiBlitz3.ab3@19814>   CMP.b #$4,D2
0002FC0A <AmiBlitz3.ab3@19815>    BNE.w toreg__suv
0002FC0E <AmiBlitz3.ab3@19816>   MOVE.w #$0004,-(A7)
0002FC14 <AmiBlitz3.ab3@19817>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
0002FC18 <AmiBlitz3.ab3@19818> BRA.w toreg__sendmd
0002FC1C <AmiBlitz3.ab3@19821>   CMP.b #$3,D2
0002FC20 <AmiBlitz3.ab3@19822>    BNE.w toreg__notnmax
0002FC22 <AmiBlitz3.ab3@19823>   CLR.w -(A7)
0002FC28 <AmiBlitz3.ab3@19824>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
0002FC2A <AmiBlitz3.ab3@19830>   LSR.w #8,D2
0002FC2E <AmiBlitz3.ab3@19831>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0002FC32 <AmiBlitz3.ab3@19832>   BTST #$7,D2
0002FC36 <AmiBlitz3.ab3@19833>    BEQ.w toreg__skipad
0002FC3A <AmiBlitz3.ab3@19834>   MOVE.w #$307C,D1                                         ;move.w #x,an
0002FC3E <AmiBlitz3.ab3@19835>   CMP.w #$16,D2
0002FC42 <AmiBlitz3.ab3@19836>    BNE.w toreg__skipad
0002FC4A <AmiBlitz3.ab3@19837>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002FC4E <AmiBlitz3.ab3@19840>   ANDI.w #$7,D2
0002FC50 <AmiBlitz3.ab3@19841>   LSL.w #8,D2
0002FC52 <AmiBlitz3.ab3@19842>   LSL.w #1,D2
0002FC54 <AmiBlitz3.ab3@19843>   OR.w D2,D1
0002FC58 <AmiBlitz3.ab3@19844>    BSR.w writeword
0002FC5C <AmiBlitz3.ab3@19845>   MOVE.l $12(A1),D1
0002FC5E <AmiBlitz3.ab3@19846>   ADD.l (A7)+,D1
0002FC62 <AmiBlitz3.ab3@19847>   MOVE.w $0(A1,D1.L),D1
0002FC64 <AmiBlitz3.ab3@19848>   ADD.w (A7)+,D1
0002FC68 <AmiBlitz3.ab3@19849> BRA.w writeword
0002FC6A <AmiBlitz3.ab3@19852>   MOVE.w D2,-(A7)
0002FC6C <AmiBlitz3.ab3@19853>   LSR.w #8,D2
0002FC70 <AmiBlitz3.ab3@19854>   CMP.w #$16,D2
0002FC74 <AmiBlitz3.ab3@19855>    BNE.w toreg__isnta6
0002FC7C <AmiBlitz3.ab3@19856>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0002FC80 <AmiBlitz3.ab3@19859>   MOVE.l $12(A1),D1                                        ;objectspace
0002FC84 <AmiBlitz3.ab3@19860>   MOVE.w -$6(A1,D1.L),-(A7)
0002FC88 <AmiBlitz3.ab3@19861>    BSR.w makeregop
0002FC8C <AmiBlitz3.ab3@19862>    BSR.w writeword
0002FC8E <AmiBlitz3.ab3@19863>   MOVE.w (A7)+,D1
0002FC90 <AmiBlitz3.ab3@19864>   MOVE.w (A7)+,D2
0002FC92 <AmiBlitz3.ab3@19865>   TST.b D2
0002FC96 <AmiBlitz3.ab3@19866>    BPL.w toreg__skippy1
0002FC9A <AmiBlitz3.ab3@19871>    BSR.w writeword                                         ;move.l x(a5),dn
0002FC9C <AmiBlitz3.ab3@19872>   MOVE.w D2,-(A7)                                          ;store reg used
0002FCA0 <AmiBlitz3.ab3@19874>   ADDA.l $12(A1),A1
0002FCA2 <AmiBlitz3.ab3@19875>   MOVE.b D2,D1
0002FCA6 <AmiBlitz3.ab3@19876>   ANDI.w #$7,D1
0002FCAC <AmiBlitz3.ab3@19878>   TST.b debugmode
0002FCB0 <AmiBlitz3.ab3@19879>    BEQ.w toreg__norerr
0002FCB2 <AmiBlitz3.ab3@19881>   MOVE.w D1,-(A7)
0002FCB4 <AmiBlitz3.ab3@19882>   LSL.w #8,D1
0002FCB6 <AmiBlitz3.ab3@19883>   LSL.w #1,D1
0002FCBA <AmiBlitz3.ab3@19884>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0002FCBE <AmiBlitz3.ab3@19885>    BSR.w writeword
0002FCC2 <AmiBlitz3.ab3@19886>   MOVE.w -$4(A1),D1
0002FCC6 <AmiBlitz3.ab3@19887>    BSR.w writeword
0002FCCA <AmiBlitz3.ab3@19888>   MOVE.l maxchk(PC),D1                                  ;bcs
0002FCCE <AmiBlitz3.ab3@19889>    BSR.w writelong
0002FCD0 <AmiBlitz3.ab3@19890>   MOVE.l A2,-(A7)
0002FCD4 <AmiBlitz3.ab3@19891>   MOVE.w #$C30A,D1
0002FCD8 <AmiBlitz3.ab3@19892>    BSR.w Atokejsr
0002FCDA <AmiBlitz3.ab3@19893>   MOVEA.l (A7)+,A2
0002FCDC <AmiBlitz3.ab3@19894>   MOVE.w (A7)+,D1
0002FCE0 <AmiBlitz3.ab3@19897>   MOVE.w -$2(A1),D2                                        ;shift amount
0002FCE4 <AmiBlitz3.ab3@19900>   CMP.w #$9,D2
0002FCE8 <AmiBlitz3.ab3@19901>    BCS.w toreg__simp
0002FCEC <AmiBlitz3.ab3@19902>   MOVEM.w D1-D2,-(A7)
0002FCEE <AmiBlitz3.ab3@19904>   MOVEQ.l #$00,D2                                          ;!!!!!
0002FCF0 <AmiBlitz3.ab3@19906>   LSL.w #8,D2
0002FCF2 <AmiBlitz3.ab3@19907>   LSL.w #1,D2
0002FCF4 <AmiBlitz3.ab3@19908>   OR.w D2,D1
0002FCF8 <AmiBlitz3.ab3@19909>   OR.w lsldn(PC),D1
0002FCFC <AmiBlitz3.ab3@19910>    BSR.w writeword
0002FD00 <AmiBlitz3.ab3@19911>   MOVEM.w (A7)+,D1-D2
0002FD02 <AmiBlitz3.ab3@19912>   SUBQ.w #8,D2
0002FD06 <AmiBlitz3.ab3@19913> BRA.w toreg__shloop
0002FD08 <AmiBlitz3.ab3@19916>   MOVE.w D1,-(A7)
0002FD0C <AmiBlitz3.ab3@19917>   OR.w #$48c0,d1
0002FD10 <AmiBlitz3.ab3@19918>   BSR writeword
0002FD12 <AmiBlitz3.ab3@19919>   MOVE.w (a7),d1
0002FD14 <AmiBlitz3.ab3@19920>   TST.w D2
0002FD18 <AmiBlitz3.ab3@19921>   BEQ.w toreg__simp2
0002FD1C <AmiBlitz3.ab3@19923>   ANDI.w #$7,D2                                            ;?????
0002FD1E <AmiBlitz3.ab3@19925>   LSL.w #8,D2
0002FD20 <AmiBlitz3.ab3@19926>   LSL.w #1,D2
0002FD22 <AmiBlitz3.ab3@19927>   OR.w D2,D1
0002FD26 <AmiBlitz3.ab3@19928>   OR.w lsldn(PC),D1
0002FD2A <AmiBlitz3.ab3@19929>    BSR.w writeword
0002FD2C <AmiBlitz3.ab3@19935>   MOVE.w (A7)+,D1
0002FD30 <AmiBlitz3.ab3@19936>   ANDI.w #$7,D1
0002FD34 <AmiBlitz3.ab3@19937>   OR.w maxdo(PC),D1
0002FD36 <AmiBlitz3.ab3@19938>   MOVE.w (A7)+,D2
0002FD38 <AmiBlitz3.ab3@19939>   LSL.w #1,D2
0002FD3C <AmiBlitz3.ab3@19940>   ANDI.w #$E00,D2
0002FD3E <AmiBlitz3.ab3@19941>   OR.w D2,D1
0002FD42 <AmiBlitz3.ab3@19942> BRA.w writeword
0002FD46 <AmiBlitz3.ab3@19945>   CMP.b #$1,D2
0002FD4A <AmiBlitz3.ab3@19946>    BEQ.w toreg__skippy
0002FD4C <AmiBlitz3.ab3@19950>   ADDQ.w #4,D1
0002FD52 <AmiBlitz3.ab3@19952>   TST.b debugmode
0002FD56 <AmiBlitz3.ab3@19953>    BEQ.w toreg__skippy
0002FD5A <AmiBlitz3.ab3@19955>    BSR.w writeword
0002FD5C <AmiBlitz3.ab3@19956>   SWAP D1
0002FD60 <AmiBlitz3.ab3@19957>   MOVE.w toreg__theretest(PC),D1
0002FD62 <AmiBlitz3.ab3@19958>   SWAP D1
0002FD66 <AmiBlitz3.ab3@19959>    BSR.w writelong
0002FD6A <AmiBlitz3.ab3@19960>   MOVE.l toreg__theretest+4(PC),D1
0002FD6E <AmiBlitz3.ab3@19961>    BSR.w writelong
0002FD72 <AmiBlitz3.ab3@19962>   MOVE.l toreg__theretest+8(PC),D1
0002FD76 <AmiBlitz3.ab3@19963> BRA.w writelong
0002FD7A <AmiBlitz3.ab3@19966> BRA.w writeword
0002FD7E <AmiBlitz3.ab3@19971>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0002FD82 <AmiBlitz3.ab3@19972>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0002FD84 <AmiBlitz3.ab3@19973>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0002FD86 <AmiBlitz3.ab3@19974>             Dc.b $4E,$40                                   ;TRAP   #00
0002FD88 <AmiBlitz3.ab3@19979>   LSR.w #8,D2
0002FD8C <AmiBlitz3.ab3@19980>   CMP.b #$16,D2
0002FD90 <AmiBlitz3.ab3@19981>    BNE.w toreg__nota6
0002FD94 <AmiBlitz3.ab3@19982>   MOVE.w $A(A1),D1
0002FD9A <AmiBlitz3.ab3@19983>   CMP.w lasta6,D1
0002FD9E <AmiBlitz3.ab3@19984>    BEQ.w toreg__sk
0002FDA4 <AmiBlitz3.ab3@19985>   MOVE.w D1,lasta6
0002FDA8 <AmiBlitz3.ab3@19988>    BSR.w makeregop
0002FDAC <AmiBlitz3.ab3@19989>   TST.w $1A(A1)
0002FDB0 <AmiBlitz3.ab3@19990>    BPL.w toreg__long
0002FDB4 <AmiBlitz3.ab3@19991>   CMP.w stackop(PC),D1
0002FDB8 <AmiBlitz3.ab3@19992>    BNE.w toreg__notst
0002FDBE <AmiBlitz3.ab3@19993>   SUBQ.w #2,a2offset
0002FDC2 <AmiBlitz3.ab3@19996>    ORI.w #$1000,D1
0002FDC6 <AmiBlitz3.ab3@19999>    BSR.w writeword
0002FDCA <AmiBlitz3.ab3@20000>   MOVE.w $A(A1),D1
0002FDCE <AmiBlitz3.ab3@20001>    BSR.w writeword
0002FDD0 <AmiBlitz3.ab3@20004> RTS
0002FDD2 <AmiBlitz3.ab3@20008> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
0002FDD6 <AmiBlitz3.ab3@20009> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0002FDDC <AmiBlitz3.ab3@20010>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0002FDDE <AmiBlitz3.ab3@20013> 
0002FDE0 <AmiBlitz3.ab3@20016>             Dc.b $00,$00
0002FDE4 <AmiBlitz3.ab3@20017> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
0002FDE8 <AmiBlitz3.ab3@20024>   CMP.b #$FF,D2
0002FDEC <AmiBlitz3.ab3@20025>    BNE.w makeregop__notst
0002FDF0 <AmiBlitz3.ab3@20026>   MOVE.w stackop(PC),D1
0002FDF6 <AmiBlitz3.ab3@20027>   ADDQ.w #4,a2offset
0002FDF8 <AmiBlitz3.ab3@20028> RTS
0002FDFA <AmiBlitz3.ab3@20031>   MOVE.l A3,-(A7)
0002FE00 <AmiBlitz3.ab3@20032>   LEA regtransd,A3
0002FE04 <AmiBlitz3.ab3@20033>   BTST #$4,D2
0002FE08 <AmiBlitz3.ab3@20034>    BEQ.w makeregop__skip
0002FE0E <AmiBlitz3.ab3@20035>   LEA regtransa,A3
0002FE12 <AmiBlitz3.ab3@20038>   ANDI.w #$7,D2
0002FE14 <AmiBlitz3.ab3@20039>   MOVE.w D2,D1
0002FE16 <AmiBlitz3.ab3@20040>   LSL.w #8,D1
0002FE18 <AmiBlitz3.ab3@20041>   LSL.w #1,D1
0002FE1A <AmiBlitz3.ab3@20042>   OR.w (A3),D1
0002FE1C <AmiBlitz3.ab3@20043>   MOVEA.l (A7)+,A3
0002FE1E <AmiBlitz3.ab3@20044> RTS
0002FE22 <AmiBlitz3.ab3@20050>   CMP.w #$3C,D0
0002FE26 <AmiBlitz3.ab3@20051>    BCS.w ifchar__no
0002FE2A <AmiBlitz3.ab3@20052>   CMP.w #$3E,D0
0002FE2E <AmiBlitz3.ab3@20053>    BHI.w ifchar__no
0002FE32 <AmiBlitz3.ab3@20054>   SUBI.w #$3C,D0
0002FE34 <AmiBlitz3.ab3@20055>   CMP.w D0,D0
0002FE36 <AmiBlitz3.ab3@20058> RTS
0002FE40 <AmiBlitz3.ab3@20063>   MOVE.w oldqflag,instringon
0002FE46 <AmiBlitz3.ab3@20064>   MOVEA.l lastsourcepos,A5
0002FE4C <AmiBlitz3.ab3@20069>   MOVE.w regnum,-(A7)
0002FE52 <AmiBlitz3.ab3@20070>   CLR.w regnum
0002FE58 <AmiBlitz3.ab3@20071>   MOVE.l destpointer,-(A7)
0002FE5E <AmiBlitz3.ab3@20072>   MOVE.l destbufferend,-(A7)
0002FE64 <AmiBlitz3.ab3@20073>   MOVE.w dontwrite,-(A7)
0002FE6A <AmiBlitz3.ab3@20074>   MOVE.w lasta6,-(A7)
0002FE70 <AmiBlitz3.ab3@20075>   MOVE.w cfetchmode,-(A7)
0002FE74 <AmiBlitz3.ab3@20076>    BNE.w JL_0_BFB6
0002FE7E <AmiBlitz3.ab3@20077>   MOVE.l destbufferend,oldlibat
0002FE84 <AmiBlitz3.ab3@20078>   MOVEA.l constpcat,A0
0002FE8A <AmiBlitz3.ab3@20079>   MOVE.l A0,destpointer
0002FE8E <AmiBlitz3.ab3@20080> BRA.w JL_0_BFBC
0002FE94 <AmiBlitz3.ab3@20083>   MOVEA.l destpointer,A0
0002FE96 <AmiBlitz3.ab3@20086>   MOVE.l A0,-(A7)
0002FEA0 <AmiBlitz3.ab3@20087>   MOVE.l constlibat,destbufferend
0002FEA6 <AmiBlitz3.ab3@20088>   CLR.w dontwrite
0002FEAE <AmiBlitz3.ab3@20090>   MOVE.w #$FFFF,lasta6
0002FEB6 <AmiBlitz3.ab3@20091>   MOVE.w #$FFFF,cfetchmode
0002FEBA <AmiBlitz3.ab3@20093>     BSR.w arreval
0002FEBC <AmiBlitz3.ab3@20094>    MOVE.l (a7),a0
0002FFF8 <AmiBlitz3.ab3@20096>  !newcalc
0002FFFC <AmiBlitz3.ab3@20097>    BEQ 'l10
0002FFFE <AmiBlitz3.ab3@20098>    MOVE.l d0,d3
00030000 <AmiBlitz3.ab3@20099>    MOVEA.l (A7)+,A0
00030004 <AmiBlitz3.ab3@20100> BRA bc1
00030008 <AmiBlitz3.ab3@20103>    MOVE.w #$2600,D1
0003000E <AmiBlitz3.ab3@20104>   OR.w regnum,D1
00030012 <AmiBlitz3.ab3@20105>    BSR.w writeword
00030016 <AmiBlitz3.ab3@20106>   MOVE.w #$4E75,D1
0003001A <AmiBlitz3.ab3@20107>    BSR.w writeword
00030020 <AmiBlitz3.ab3@20108>   MOVE.w dontwrite,D1
00030024 <AmiBlitz3.ab3@20109>    BNE.w conmemerr
00030026 <AmiBlitz3.ab3@20110>   MOVEA.l (A7)+,A0
00030028 <AmiBlitz3.ab3@20111>   NOP
0003002E <AmiBlitz3.ab3@20112>    JSR Aclearcache                                         ;simple expression
00030030 <AmiBlitz3.ab3@20115>    JSR (A0)                                                ;writeresult
00030036 <AmiBlitz3.ab3@20118>   MOVE.w (A7)+,cfetchmode
0003003C <AmiBlitz3.ab3@20119>   MOVE.w (A7)+,lasta6
00030042 <AmiBlitz3.ab3@20120>   MOVE.w (A7)+,dontwrite
00030048 <AmiBlitz3.ab3@20121>   MOVE.l (A7)+,destbufferend
0003004E <AmiBlitz3.ab3@20122>   MOVE.l (A7)+,destpointer
00030054 <AmiBlitz3.ab3@20123>   MOVE.w (A7)+,regnum
0003005A <AmiBlitz3.ab3@20126> JMP reget
0003005E <AmiBlitz3.ab3@20129> oldlibat:   Ds.l 1
00030064 <AmiBlitz3.ab3@20133>   LEA incdir,A0
00030068 <AmiBlitz3.ab3@20136>   CMP.w #$22,D0
0003006C <AmiBlitz3.ab3@20137>    BEQ.w JL_0_C052
0003006E <AmiBlitz3.ab3@20138>   MOVE.b D0,(A0)+
00030070 <AmiBlitz3.ab3@20139>   TST.w D0
00030074 <AmiBlitz3.ab3@20140>    BEQ.w JL_0_C05A
00030078 <AmiBlitz3.ab3@20141>    BMI.w syntaxerr
0003007E <AmiBlitz3.ab3@20144>   JSR get1bytemain                                         ;_long
00030082 <AmiBlitz3.ab3@20145> BRA.w JL_0_C03E
00030084 <AmiBlitz3.ab3@20148> RTS
0003008A <AmiBlitz3.ab3@20152>   LEA ptr_parameterstore,A1                                ;getparameter
00030090 <AmiBlitz3.ab3@20153>   LEA incdir,A0
00030092 <AmiBlitz3.ab3@20154>   MOVEQ.l #-$01,D2
00030094 <AmiBlitz3.ab3@20157>     ADDQ.w #1,D2
00030096 <AmiBlitz3.ab3@20158>     MOVE.b (A0)+,(A1)+
0003009A <AmiBlitz3.ab3@20159>   BNE.w JL_0_C06A
0003009C <AmiBlitz3.ab3@20160>   SUBQ.w #1,A1
000300A6 <AmiBlitz3.ab3@20162>   MOVE.w oldqflag,instringon
000300AC <AmiBlitz3.ab3@20163>   MOVEA.l lastsourcepos,A5
000300B2 <AmiBlitz3.ab3@20167>   JSR get1bytemain
000300B4 <AmiBlitz3.ab3@20168>   TST.w D0
000300B8 <AmiBlitz3.ab3@20169>    BMI.w syntaxerr
000300BC <AmiBlitz3.ab3@20170>   CMP.b #$22,D0
000300C0 <AmiBlitz3.ab3@20171>    BEQ.w JL_0_C078
000300C2 <AmiBlitz3.ab3@20172>   MOVE.b D0,(A1)+
000300C6 <AmiBlitz3.ab3@20173>    BEQ.w JL_0_C096
000300C8 <AmiBlitz3.ab3@20174>   ADDQ.w #1,D2
000300CC <AmiBlitz3.ab3@20175> BRA.w JL_0_C078
000300CE <AmiBlitz3.ab3@20178>   TST.w D2
000300D2 <AmiBlitz3.ab3@20179>    BEQ.w syntaxerr
000300D4 <AmiBlitz3.ab3@20180> RTS
000300DA <AmiBlitz3.ab3@20184>   MOVEA.l constantbase,A2
000300DE <AmiBlitz3.ab3@20185>   MOVEA.l $E(A2),A5
000300E4 <AmiBlitz3.ab3@20186>   MOVE.l a5,includesourceline
000300EA <AmiBlitz3.ab3@20187>   LEA inctab,a0
000300F0 <AmiBlitz3.ab3@20188>   MOVE.w ininclude,d0
000300F4 <AmiBlitz3.ab3@20189>   MOVE.l $0(a0,d0*4),d0
000300F8 <AmiBlitz3.ab3@20190>   MOVEA.l $4(A2),A0
000300FC <AmiBlitz3.ab3@20192>   LEA $0(A0,D0.l),A0
000300FE <AmiBlitz3.ab3@20193>   MOVEA.l A5,A1
00030100 <AmiBlitz3.ab3@20196>     CMPA.l A0,A1
00030104 <AmiBlitz3.ab3@20197>      BCC.w JL_0_C0C6
00030106 <AmiBlitz3.ab3@20198>   TST.b (A1)+
0003010A <AmiBlitz3.ab3@20199>   BNE.w JL_0_C0B6
0003010E <AmiBlitz3.ab3@20200> BRA.w JL_0_C112
00030112 <AmiBlitz3.ab3@20203>   MOVEA.l $4(A2),A1
00030114 <AmiBlitz3.ab3@20206>   CMPA.l A0,A5
00030118 <AmiBlitz3.ab3@20207>   BCC.w JL_0_C0D6
0003011A <AmiBlitz3.ab3@20208>   MOVE.b (A5)+,(A1)+
0003011E <AmiBlitz3.ab3@20209> BRA.w JL_0_C0CA
00030120 <AmiBlitz3.ab3@20212>   MOVE.l A1,D0
00030124 <AmiBlitz3.ab3@20213>   SUB.l $4(A2),D0
0003012A <AmiBlitz3.ab3@20214>   LEA inctab,a0
0003012C <AmiBlitz3.ab3@20215>   MOVEQ #0,d1
00030132 <AmiBlitz3.ab3@20216>   MOVE.w ininclude,d1
00030136 <AmiBlitz3.ab3@20217>   MOVE.l d0,0(a0,d1*4)
0003013C <AmiBlitz3.ab3@20219>   MOVEA.l _dosbase,A6
00030140 <AmiBlitz3.ab3@20220>   MOVE.l $8(A2),D1
00030142 <AmiBlitz3.ab3@20221>   MOVE.l A1,D2
00030148 <AmiBlitz3.ab3@20222>   MOVE.l D2,include_base
0003014E <AmiBlitz3.ab3@20224>   MOVE.l #$10000000,d3                                     ;load whole file
00030150 <AmiBlitz3.ab3@20225>   SUB.l D0,D3
00030154 <AmiBlitz3.ab3@20226>    JSR _Read(A6)
00030156 <AmiBlitz3.ab3@20227>   TST.l D0
0003015A <AmiBlitz3.ab3@20228>    BMI.w error_reading_file
0003015E <AmiBlitz3.ab3@20229>    BEQ.w JL_0_C120
00030164 <AmiBlitz3.ab3@20230>    MOVE.l D0,include_length
000301A6 <AmiBlitz3.ab3@20231>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000301D0 <AmiBlitz3.ab3@20232>    !basic
000301E0 <AmiBlitz3.ab3@20233>    ilen.l  = Peek.l(?include_length)
000301F0 <AmiBlitz3.ab3@20234>    ibase.l = Peek.l(?include_base)
00030200 <AmiBlitz3.ab3@20235>    ido.l   = Peek.l(?include_process)
00030210 <AmiBlitz3.ab3@20236>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003021A <AmiBlitz3.ab3@20237>    If ido
0003022C <AmiBlitz3.ab3@20238>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030252 <AmiBlitz3.ab3@20239>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030264 <AmiBlitz3.ab3@20240>      If nilen>0
00030274 <AmiBlitz3.ab3@20244>        Poke.l ?include_length,nilen
00030292 <AmiBlitz3.ab3@20247>    !asm
0003029C <AmiBlitz3.ab3@20248>    MOVE.l #0,include_process
000302A2 <AmiBlitz3.ab3@20249>    MOVE.l include_length,D0
000302A8 <AmiBlitz3.ab3@20250>    LEA inctab,a0
000302AA <AmiBlitz3.ab3@20251>    MOVEQ #0,d1
000302B0 <AmiBlitz3.ab3@20252>    MOVE.w ininclude,d1
000302B4 <AmiBlitz3.ab3@20253>    ADD.l d0,0(a0,d1*4)
000302B8 <AmiBlitz3.ab3@20255>   MOVEA.l $4(A2),A5
000302BC <AmiBlitz3.ab3@20257>    MOVE.l 0(a0,d1*4),d0
000302C0 <AmiBlitz3.ab3@20258>   CLR.b $0(A5,D0.l)
000302C2 <AmiBlitz3.ab3@20261>   MOVEA.l A5,A0
000302C4 <AmiBlitz3.ab3@20264>     TST.b (A0)+
000302C8 <AmiBlitz3.ab3@20265>   BNE.w JL_0_C114
000302CC <AmiBlitz3.ab3@20266>   MOVE.l A0,$E(A2)
000302CE <AmiBlitz3.ab3@20267> RTS
000302D2 <AmiBlitz3.ab3@20270> include_length:        Dc.l 0                              ; for tokenizer!
000302D6 <AmiBlitz3.ab3@20271> include_base:          Dc.l 0
000302DA <AmiBlitz3.ab3@20272> include_process:       Dc.l 0
000302DE <AmiBlitz3.ab3@20273> include_preprocessor:  Dc.l 0
000302E2 <AmiBlitz3.ab3@20277>   MOVE.l $8(A2),D1
000302E8 <AmiBlitz3.ab3@20279>   MOVEA.l _dosbase,A6
000302EC <AmiBlitz3.ab3@20280>   JSR _Close(a6)
000302F2 <AmiBlitz3.ab3@20281>   MOVEA.l _execbase,A6
000302F6 <AmiBlitz3.ab3@20282>   MOVEA.l $4(A2),A1
000302FC <AmiBlitz3.ab3@20283>   MOVE.l #$400*8,D0                                        ;exit include
00030300 <AmiBlitz3.ab3@20285>   JSR _FreeVec(a6)
00030306 <AmiBlitz3.ab3@20288>   MOVE.l (A2),constantbase
00030308 <AmiBlitz3.ab3@20289>   MOVEA.l A2,A1
0003030A <AmiBlitz3.ab3@20290>   MOVEQ.l #$00,D0
0003030E <AmiBlitz3.ab3@20291>   MOVE.b $12(A2),D0
00030314 <AmiBlitz3.ab3@20292>   MOVEA.l _execbase,A6
0003031A <AmiBlitz3.ab3@20293>   MOVE.l mempool2,a0
0003031E <AmiBlitz3.ab3@20294>   JSR _FreePooled(A6)
00030324 <AmiBlitz3.ab3@20295>   JSR zero_includename
0003032A <AmiBlitz3.ab3@20296>   SUBQ.w #1,ininclude
0003032E <AmiBlitz3.ab3@20297>   BNE.w AJL_0_C09E
00030334 <AmiBlitz3.ab3@20300>   LEA _include,a0
00030338 <AmiBlitz3.ab3@20301>   MOVEM.l a0-a6/d0-d7,-(a7)
0003033E <AmiBlitz3.ab3@20302>   LEA ptr_parameterstore,a1
00030340 <AmiBlitz3.ab3@20305>     MOVE.b (a0)+,(a1)+
00030344 <AmiBlitz3.ab3@20306>   BNE 'l1b
00030346 <AmiBlitz3.ab3@20307>   MOVEQ #9,d2
0003034C <AmiBlitz3.ab3@20308>   JSR findlabel2
00030350 <AmiBlitz3.ab3@20309>   BNE 'd
00030354 <AmiBlitz3.ab3@20310>   CLR.l 8(a2)
00030358 <AmiBlitz3.ab3@20313>   MOVEM.l (a7)+,a0-a6/d0-d7
0003035A <AmiBlitz3.ab3@20314> RTS
00030360 <AmiBlitz3.ab3@20318>   MOVE.l unusedfunc,d0
00030364 <AmiBlitz3.ab3@20319>   BEQ 'noclear
00030368 <AmiBlitz3.ab3@20320>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
0003036A <AmiBlitz3.ab3@20323>     MOVE.l d0,a1
0003036E <AmiBlitz3.ab3@20324>     MOVE.l 4(a1),d0
00030370 <AmiBlitz3.ab3@20325>     MOVE.l (a1),d2
00030376 <AmiBlitz3.ab3@20326>     MOVE.l _execbase,a6
0003037A <AmiBlitz3.ab3@20327>     JSR _FreeMem(a6)
0003037C <AmiBlitz3.ab3@20328>     MOVE.l d2,d0
00030380 <AmiBlitz3.ab3@20329>   BNE 'f1
00030386 <AmiBlitz3.ab3@20330>   CLR.l unusedfunc
0003038A <AmiBlitz3.ab3@20331>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0003038C <AmiBlitz3.ab3@20334> RTS
00030392 <AmiBlitz3.ab3@20338>   MOVEA.l xinclude_base,A2
00030398 <AmiBlitz3.ab3@20339>   CLR.l xinclude_base
0003039C <AmiBlitz3.ab3@20342>     CMPA.w #$0,A2
000303A0 <AmiBlitz3.ab3@20343>      BEQ.w JL_0_C186
000303A2 <AmiBlitz3.ab3@20344>     MOVEQ.l #$00,D0
000303A6 <AmiBlitz3.ab3@20345>     MOVE.b 4+8(A2),D0
000303A8 <AmiBlitz3.ab3@20346>     MOVEA.l A2,A1
000303AA <AmiBlitz3.ab3@20347>     MOVEA.l (A2),A2
000303B0 <AmiBlitz3.ab3@20348>     MOVEA.l _execbase,A6
000303B6 <AmiBlitz3.ab3@20349>     MOVE.l mempool2,a0
000303BA <AmiBlitz3.ab3@20350>     JSR _FreePooled(A6)
000303BE <AmiBlitz3.ab3@20351> BRA.w JL_0_C168
000303C0 <AmiBlitz3.ab3@20354> RTS
000303C6 <AmiBlitz3.ab3@20358>   MOVEA.l constantbase,A2
000303CC <AmiBlitz3.ab3@20359>   CLR.l constantbase
000303D0 <AmiBlitz3.ab3@20362>     CMPA.w #$0,A2
000303D4 <AmiBlitz3.ab3@20363>      BEQ.w JL_0_C1DC
000303D8 <AmiBlitz3.ab3@20364>     MOVE.l $8(A2),D1
000303DC <AmiBlitz3.ab3@20365>      BEQ.w JL_0_C1AE
000303E2 <AmiBlitz3.ab3@20366>     MOVEA.l _dosbase,A6
000303E6 <AmiBlitz3.ab3@20367>      JSR _Close(A6)
000303EA <AmiBlitz3.ab3@20370>     MOVE.l $4(A2),D0
000303EE <AmiBlitz3.ab3@20371>      BEQ.w JL_0_C1C6
000303F0 <AmiBlitz3.ab3@20372>     MOVEA.l D0,A1
000303F6 <AmiBlitz3.ab3@20373>     MOVE.l #$400*8,D0
000303FC <AmiBlitz3.ab3@20374>     MOVEA.l _execbase,A6
00030402 <AmiBlitz3.ab3@20375>     MOVE.l mempool,a0
00030406 <AmiBlitz3.ab3@20376>     JSR _FreeVec(a6)
00030408 <AmiBlitz3.ab3@20379>     MOVEQ.l #$00,D0
0003040C <AmiBlitz3.ab3@20380>     MOVE.b $12(A2),D0
0003040E <AmiBlitz3.ab3@20381>     MOVEA.l A2,A1
00030410 <AmiBlitz3.ab3@20382>     MOVEA.l (A2),A2
00030416 <AmiBlitz3.ab3@20383>     MOVEA.l _execbase,A6
0003041C <AmiBlitz3.ab3@20384>     MOVE.l mempool2,a0
00030420 <AmiBlitz3.ab3@20385>     JSR _FreePooled(A6)
00030424 <AmiBlitz3.ab3@20386> BRA.w JL_0_C194
00030426 <AmiBlitz3.ab3@20389> RTS
00030428 <AmiBlitz3.ab3@20393>   SWAP D0
0003042C <AmiBlitz3.ab3@20394>    BSR.w JL_0_C1E6
0003042E <AmiBlitz3.ab3@20395>   SWAP D0
00030434 <AmiBlitz3.ab3@20398>   MOVEA.l data2,A4
0003043A <AmiBlitz3.ab3@20399>   CMPA.l allat,A4
0003043E <AmiBlitz3.ab3@20400>    BCC.w JL_0_C200
00030440 <AmiBlitz3.ab3@20401>   MOVE.w D0,(A4)+
00030446 <AmiBlitz3.ab3@20402>   MOVE.l A4,data2
00030448 <AmiBlitz3.ab3@20403> RTS
00030450 <AmiBlitz3.ab3@20406>   MOVE.w #$FFFF,dontwrite
00030456 <AmiBlitz3.ab3@20407>   ADDQ.l #2,data2
00030458 <AmiBlitz3.ab3@20408> RTS
0003045E <AmiBlitz3.ab3@20412>   MOVEA.l data2,A4
00030464 <AmiBlitz3.ab3@20413>   CMPA.l allat,A4
00030468 <AmiBlitz3.ab3@20414>    BCC.w JL_0_C22A
0003046A <AmiBlitz3.ab3@20415>   MOVE.b D0,(A4)+
00030470 <AmiBlitz3.ab3@20416>   MOVE.l A4,data2
00030472 <AmiBlitz3.ab3@20417> RTS
0003047A <AmiBlitz3.ab3@20420>   MOVE.w #$FFFF,dontwrite
00030480 <AmiBlitz3.ab3@20421>   ADDQ.l #1,data2
00030482 <AmiBlitz3.ab3@20422> RTS
00030486 <AmiBlitz3.ab3@20426>   CMP.w #$22,D0
0003048A <AmiBlitz3.ab3@20427>    BNE.w syntaxerr
00030490 <AmiBlitz3.ab3@20431>   JSR get1bytemain
00030494 <AmiBlitz3.ab3@20432>   CMP.b #$22,D0
00030498 <AmiBlitz3.ab3@20433>    BEQ.w JL_0_C25A
0003049A <AmiBlitz3.ab3@20434>   TST.w D0
0003049E <AmiBlitz3.ab3@20435>    BEQ.w syntaxerr
000304A0 <AmiBlitz3.ab3@20436>   MOVE.b D0,(A0)+
000304A4 <AmiBlitz3.ab3@20437> BRA.w JL_0_C242
000304A6 <AmiBlitz3.ab3@20440>   CLR.b (A0)
000304A8 <AmiBlitz3.ab3@20441> RTS
000304AA <AmiBlitz3.ab3@20444>   TST.l D3
000304AC <AmiBlitz3.ab3@20445> RTS
000304B2 <AmiBlitz3.ab3@20448>   LEA ptr_parameterstore,A0
000304B8 <AmiBlitz3.ab3@20449>   LEA namebuff2,A1
000304BA <AmiBlitz3.ab3@20452>     MOVE.b (A0)+,D0
000304BE <AmiBlitz3.ab3@20453>     BEQ.w JL_0_C27C
000304C0 <AmiBlitz3.ab3@20454>   CMP.b (A1)+,D0
000304C4 <AmiBlitz3.ab3@20455>   BEQ.w JL_0_C26E
000304C6 <AmiBlitz3.ab3@20456> RTS
000304C8 <AmiBlitz3.ab3@20459>   TST.b (A1)
000304CC <AmiBlitz3.ab3@20460>   BNE.w JL_0_C284
000304CE <AmiBlitz3.ab3@20461> RTS
000304D2 <AmiBlitz3.ab3@20464>   CMP.w #$1,D0
000304D4 <AmiBlitz3.ab3@20465> RTS
000304D8 <AmiBlitz3.ab3@20469>   CMP.w #$2E,D0                                            ;dodeftype
000304DC <AmiBlitz3.ab3@20470>    BNE.w syntaxerr
000304E0 <AmiBlitz3.ab3@20471>   BSR.w getparameter2
000304E6 <AmiBlitz3.ab3@20472>   LEA newtypebase,A2
000304EA <AmiBlitz3.ab3@20473>   BSR.w findtype
000304EE <AmiBlitz3.ab3@20474>    BNE.w notypeerr
000304F4 <AmiBlitz3.ab3@20475>   TST.b declare
000304F8 <AmiBlitz3.ab3@20476>    BNE 'l1
000304FE <AmiBlitz3.ab3@20477>   TST.b declare2
00030502 <AmiBlitz3.ab3@20478>    BEQ 'l2
0003050A <AmiBlitz3.ab3@20481>   MOVE.b #2,nowdeclare
00030510 <AmiBlitz3.ab3@20485>   JSR reget
00030514 <AmiBlitz3.ab3@20486>    BNE.w JL_0_C2B4
0003051A <AmiBlitz3.ab3@20487>   MOVE.l A2,defaulttype
0003051C <AmiBlitz3.ab3@20488> RTS
00030522 <AmiBlitz3.ab3@20491>   MOVE.l defaulttype,-(A7)
00030528 <AmiBlitz3.ab3@20492>   MOVE.l A2,defaulttype
0003052C <AmiBlitz3.ab3@20495>   BSR.w getparameter
00030530 <AmiBlitz3.ab3@20496>    BSR.w JL_0_8E3C
00030534 <AmiBlitz3.ab3@20497>   CMP.w #$2C,D0
00030538 <AmiBlitz3.ab3@20498>    BNE.w JL_0_C2D8
0003053E <AmiBlitz3.ab3@20499>    JSR get1bytemain                                        ; was BSR.w
00030542 <AmiBlitz3.ab3@20500> BRA.w JL_0_C2C0
00030548 <AmiBlitz3.ab3@20503>   MOVE.l (A7)+,defaulttype
0003054A <AmiBlitz3.ab3@20504> RTS
0003054E <AmiBlitz3.ab3@20508>   LEA $4(A5),A2                                            ;fehler function
00030550 <AmiBlitz3.ab3@20511>   MOVE.l A2,D0
00030554 <AmiBlitz3.ab3@20514>   BSR.w getparameter
00030558 <AmiBlitz3.ab3@20515>   BSR.w JL_0_8E3C
0003055C <AmiBlitz3.ab3@20516>   BSR.w calcvar
00030560 <AmiBlitz3.ab3@20517>   CMP.b #$7,D2
00030564 <AmiBlitz3.ab3@20518>    BNE.w mismatcherr
00030568 <AmiBlitz3.ab3@20519>   MOVE.w varmode(PC),-(A7)
0003056C <AmiBlitz3.ab3@20520>   CMP.w #$3D,D0
00030570 <AmiBlitz3.ab3@20521>    BNE.w syntaxerr
00030574 <AmiBlitz3.ab3@20522>   BTST #$F,D2
00030578 <AmiBlitz3.ab3@20523>    BNE.w JL_0_C31C
0003057C <AmiBlitz3.ab3@20524>   MOVE.w JL_0_C2E0(PC),D1
00030580 <AmiBlitz3.ab3@20525>   BSR.w pokewda5s
00030582 <AmiBlitz3.ab3@20526>   MOVE.w D3,D1
00030586 <AmiBlitz3.ab3@20527>   BSR.w writeword
0003058A <AmiBlitz3.ab3@20530>   MOVE.w L_0_C2E4(PC),D1
0003058E <AmiBlitz3.ab3@20531>   BSR.w writeword
00030594 <AmiBlitz3.ab3@20532>   ADDQ.w #1,regnum
00030596 <AmiBlitz3.ab3@20533>   MOVEQ.l #$03,D2
0003059A <AmiBlitz3.ab3@20534>   BSR.w eval
000305A0 <AmiBlitz3.ab3@20535>   MOVE.l #$D000,D1
000305A6 <AmiBlitz3.ab3@20536>   MOVE.l d1,lastinstruction
000305A8 <AmiBlitz3.ab3@20537>   TST.w (A7)+
000305AC <AmiBlitz3.ab3@20538>    BEQ.w Atokejsr
000305AE <AmiBlitz3.ab3@20539>   ADDQ.w #1,D1
000305B2 <AmiBlitz3.ab3@20540> BRA.w Atokejsr
000305B4 <AmiBlitz3.ab3@20544>   MOVE.w D0,D1
000305B8 <AmiBlitz3.ab3@20545>    BPL.w syntaxerr
000305BC <AmiBlitz3.ab3@20546>   BCLR #$F,D1
000305C2 <AmiBlitz3.ab3@20547>    JSR searchinstr
000305C6 <AmiBlitz3.ab3@20548>   MOVE.l $12(A2),D0
000305CA <AmiBlitz3.ab3@20549>   TST.w -$2(A2,D0.L)
000305CE <AmiBlitz3.ab3@20550>    BEQ.w freeerr
000305D0 <AmiBlitz3.ab3@20551>   MOVEQ.l #$02,D2
000305D2 <AmiBlitz3.ab3@20552>   MOVE.l A2,-(A7)
000305D6 <AmiBlitz3.ab3@20553>    BSR.w eval
000305D8 <AmiBlitz3.ab3@20554>   MOVEA.l (A7)+,A2
000305DE <AmiBlitz3.ab3@20555>   MOVE.l A2,mymaxlib
000305E2 <AmiBlitz3.ab3@20556>   ADDA.l $12(A2),A2
000305E8 <AmiBlitz3.ab3@20557>   TST.b debugmode
000305EC <AmiBlitz3.ab3@20558>    BEQ.w JL_0_C3A8
000305F2 <AmiBlitz3.ab3@20559>   MOVE.w regnum,D1
000305F4 <AmiBlitz3.ab3@20560>   LSL.w #8,D1
000305F6 <AmiBlitz3.ab3@20561>   LSL.w #1,D1
000305FA <AmiBlitz3.ab3@20562>   ORI.w #$B07C,D1
000305FE <AmiBlitz3.ab3@20563>    BSR.w writeword
00030602 <AmiBlitz3.ab3@20564>   MOVE.w -$4(A2),D1
00030606 <AmiBlitz3.ab3@20565>    BSR.w writeword
0003060C <AmiBlitz3.ab3@20566>   MOVE.l maxchk,D1
00030610 <AmiBlitz3.ab3@20567>    BSR.w writelong
00030612 <AmiBlitz3.ab3@20568>   MOVE.l A2,-(A7)
00030616 <AmiBlitz3.ab3@20569>   MOVE.w #$C30A,D1
0003061A <AmiBlitz3.ab3@20570>    BSR.w Atokejsr
0003061C <AmiBlitz3.ab3@20571>   MOVEA.l (A7)+,A2
00030620 <AmiBlitz3.ab3@20574>   MOVE.w -$2(A2),D2
00030626 <AmiBlitz3.ab3@20577>   MOVE.w regnum,D1
0003062C <AmiBlitz3.ab3@20578>   OR.w lslimm,D1
00030630 <AmiBlitz3.ab3@20579>   CMP.w #$8,D2
00030634 <AmiBlitz3.ab3@20580>    BCS.w JL_0_C3CE
00030638 <AmiBlitz3.ab3@20581>    BSR.w writeword
0003063A <AmiBlitz3.ab3@20582>   SUBQ.w #8,D2
0003063E <AmiBlitz3.ab3@20583>    BNE.w JL_0_C3AC
00030642 <AmiBlitz3.ab3@20584> BRA.w JL_0_C3DA
00030644 <AmiBlitz3.ab3@20587>   MOVE.w D2,D0
00030646 <AmiBlitz3.ab3@20588>   LSL.w #8,D0
00030648 <AmiBlitz3.ab3@20589>   LSL.w #1,D0
0003064A <AmiBlitz3.ab3@20590>   OR.w D0,D1
0003064E <AmiBlitz3.ab3@20591>   BSR.w writeword
00030650 <AmiBlitz3.ab3@20594> RTS
00030654 <AmiBlitz3.ab3@20599>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00030656 <AmiBlitz3.ab3@20600>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003065A <AmiBlitz3.ab3@20604> mymaxlib:  Ds.l 1
0003065E <AmiBlitz3.ab3@20608>   BSR.w JL_0_C340
00030662 <AmiBlitz3.ab3@20609>   LEA free(PC),A0
00030666 <AmiBlitz3.ab3@20610>   LEA freef(PC),A1
0003066C <AmiBlitz3.ab3@20611>   MOVE.w -$6(A2),$2(A0)
00030670 <AmiBlitz3.ab3@20612>   BSR.w pokecode
00030674 <AmiBlitz3.ab3@20613>   MOVE.l -$A(A2),D1
00030678 <AmiBlitz3.ab3@20616>   BEQ.w nosuperr
0003067C <AmiBlitz3.ab3@20617>   MOVEA.l mymaxlib(PC),A2
00030680 <AmiBlitz3.ab3@20618> BRA.w Amakelibsub
00030684 <AmiBlitz3.ab3@20623>   BSR.w JL_0_C340
0003068A <AmiBlitz3.ab3@20624>   LEA use,A0
00030690 <AmiBlitz3.ab3@20625>   LEA usef,A1
00030696 <AmiBlitz3.ab3@20626>   MOVE.w -$6(A2),$2(A0)
0003069C <AmiBlitz3.ab3@20627>   MOVE.w -$6(A2),-$2(A1)
000306A0 <AmiBlitz3.ab3@20628>   ADDQ.w #4,-$2(A1)
000306A4 <AmiBlitz3.ab3@20629>   BSR.w pokecode
000306A8 <AmiBlitz3.ab3@20630>   MOVE.l -$E(A2),D1
000306AC <AmiBlitz3.ab3@20631> BRA.w maxjsr
000306B2 <AmiBlitz3.ab3@20635>   JSR get1bytemain
000306B8 <AmiBlitz3.ab3@20639>   MOVE.l firstiff,D0
000306BC <AmiBlitz3.ab3@20640>    BEQ.w noiferr
000306BE <AmiBlitz3.ab3@20641>   MOVEA.l D0,A0
000306C4 <AmiBlitz3.ab3@20642>   CMPI.b #$1,$D(A0)
000306C8 <AmiBlitz3.ab3@20643>    BEQ.w illelseerr
000306CC <AmiBlitz3.ab3@20644>   MOVE.w #$6000,D1
000306D2 <AmiBlitz3.ab3@20646>     TST.b fast
000306D6 <AmiBlitz3.ab3@20647>     BEQ 'l1
000306DC <AmiBlitz3.ab3@20648>     OR.l #$ff,d1
000306E0 <AmiBlitz3.ab3@20649>     BSR writeword
000306E2 <AmiBlitz3.ab3@20653>   SWAP D1
000306E6 <AmiBlitz3.ab3@20654>   BSR.w writelong
000306E8 <AmiBlitz3.ab3@20655>   MOVEQ.l #$00,D1
000306EC <AmiBlitz3.ab3@20656>   BSR.w AJL_0_D7B8
000306F4 <AmiBlitz3.ab3@20657>   MOVE.l destpointer,$8(A0)
000306F8 <AmiBlitz3.ab3@20658> BRA.w do_then
000306FE <AmiBlitz3.ab3@20662>   LEA ptr_parameterstore,A0
00030700 <AmiBlitz3.ab3@20663>   MOVE.l A0,-(A7)
00030704 <AmiBlitz3.ab3@20664>   BSR.w JL_0_C23A
00030708 <AmiBlitz3.ab3@20665> BRA.w handle_compileerror
0003070C <AmiBlitz3.ab3@20669>   BSR.w JL_0_BF6A
0003070E <AmiBlitz3.ab3@20670>   MOVEQ.l #$05,D1
00030718 <AmiBlitz3.ab3@20672>   MOVE.w oldqflag,instringon
0003071E <AmiBlitz3.ab3@20673>   MOVEA.l lastsourcepos,A5
00030724 <AmiBlitz3.ab3@20674>   LEA AJL_0_C25E,A0
00030728 <AmiBlitz3.ab3@20675> BRA.w JL_0_C4B4
0003072E <AmiBlitz3.ab3@20679>   LEA ptr_parameterstore,A0
00030732 <AmiBlitz3.ab3@20680>   BSR.w JL_0_C23A
00030738 <AmiBlitz3.ab3@20681>   JSR get1bytemain
0003073C <AmiBlitz3.ab3@20682>   BSR.w JL_0_CCA8
00030742 <AmiBlitz3.ab3@20683>   LEA namebuff2,A0
00030746 <AmiBlitz3.ab3@20684>   BSR.w JL_0_C23A
0003074C <AmiBlitz3.ab3@20685>   LEA AJL_0_C262,A0
0003074E <AmiBlitz3.ab3@20688>   LSL.w #2,D1
00030754 <AmiBlitz3.ab3@20689>   LEA CIF_branches,A1
00030758 <AmiBlitz3.ab3@20690>   MOVE.l $0(A1,D1.W),-(A7)
0003075A <AmiBlitz3.ab3@20691>   MOVEQ.l #-$01,D1
0003075C <AmiBlitz3.ab3@20694>   JSR (A0)
0003075E <AmiBlitz3.ab3@20696>   MOVEA.l (A7)+,A1
00030760 <AmiBlitz3.ab3@20698> JMP (A1)
00030764 <AmiBlitz3.ab3@20702>   BEQ.w JL_0_C4F6
00030768 <AmiBlitz3.ab3@20703> BRA.w JL_0_C4F4
0003076C <AmiBlitz3.ab3@20707>   BNE.w JL_0_C4F6
00030770 <AmiBlitz3.ab3@20708> BRA.w JL_0_C4F4
00030774 <AmiBlitz3.ab3@20712>   BLT.w JL_0_C4F6
00030778 <AmiBlitz3.ab3@20713> BRA.w JL_0_C4F4
0003077C <AmiBlitz3.ab3@20717>   BLE.w JL_0_C4F6
00030780 <AmiBlitz3.ab3@20718> BRA.w JL_0_C4F4
00030784 <AmiBlitz3.ab3@20722>   BGT.w JL_0_C4F6
00030788 <AmiBlitz3.ab3@20723> BRA.w JL_0_C4F4
0003078C <AmiBlitz3.ab3@20727>   BGE.w JL_0_C4F6
0003078E <AmiBlitz3.ab3@20730>   MOVEQ.l #$00,D1
00030794 <AmiBlitz3.ab3@20733>   MOVEA.l concomsp,A0
0003079A <AmiBlitz3.ab3@20734>   MOVE.w skipcode,(A0)+
000307A0 <AmiBlitz3.ab3@20735>   MOVE.l A0,concomsp
000307A6 <AmiBlitz3.ab3@20736>   MOVE.w D1,skipcode
000307AC <AmiBlitz3.ab3@20737>   JSR get1bytemain
000307B0 <AmiBlitz3.ab3@20738>    BNE.w syntaxerr
000307B6 <AmiBlitz3.ab3@20739> JMP bakup
000307BE <AmiBlitz3.ab3@20743> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000307C2 <AmiBlitz3.ab3@20744> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000307C6 <AmiBlitz3.ab3@20751>   MOVE.w #$FC17,D1
000307CC <AmiBlitz3.ab3@20752>   JSR uselib
000307D2 <AmiBlitz3.ab3@20754>   JSR reget
000307D6 <AmiBlitz3.ab3@20755>    BEQ.w do_Restore__resbeg
000307DA <AmiBlitz3.ab3@20756>   BSR.w JL_0_AE22                                          ;get label name!
000307DE <AmiBlitz3.ab3@20757>   MOVE.w rescode(PC),D1
000307E2 <AmiBlitz3.ab3@20758>   BSR.w writeword
000307E8 <AmiBlitz3.ab3@20759>   JSR addoff                                               ;add offset
000307EC <AmiBlitz3.ab3@20760>   MOVE.l $C(A2),D1
000307F0 <AmiBlitz3.ab3@20761>   BSR.w writelong
000307F4 <AmiBlitz3.ab3@20762>   MOVE.w rescode+6(PC),D1
000307F8 <AmiBlitz3.ab3@20763>   BSR.w writeword
000307FC <AmiBlitz3.ab3@20764>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00030800 <AmiBlitz3.ab3@20765>   BEQ.w do_Restore__no
00030802 <AmiBlitz3.ab3@20767>   MOVEA.l D1,A1
00030806 <AmiBlitz3.ab3@20768>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00030808 <AmiBlitz3.ab3@20769> RTS
0003080A <AmiBlitz3.ab3@20774> RTS
0003080E <AmiBlitz3.ab3@20777>   MOVE.w #$CD00,D1
00030814 <AmiBlitz3.ab3@20778>   JSR Atokejsr
00030818 <AmiBlitz3.ab3@20779>   MOVE.l rescode2(PC),D1
0003081E <AmiBlitz3.ab3@20780> JMP writelong
00030822 <AmiBlitz3.ab3@20784>   MOVE.w #$FC17,D1
00030828 <AmiBlitz3.ab3@20785>   JSR uselib
0003082E <AmiBlitz3.ab3@20788>   MOVE.l dataget,D1
00030832 <AmiBlitz3.ab3@20789>   BSR.w writelong
00030836 <AmiBlitz3.ab3@20790>   BSR.w getparameter
0003083A <AmiBlitz3.ab3@20791>   BSR.w JL_0_8E3C
0003083E <AmiBlitz3.ab3@20792>   BSR.w calcvar
00030842 <AmiBlitz3.ab3@20793>   BTST #$E,D2
00030846 <AmiBlitz3.ab3@20794>    BEQ.w JL_0_C5A6
0003084A <AmiBlitz3.ab3@20795>   MOVE.b #$6,D2
0003084C <AmiBlitz3.ab3@20798>   TST.b D2
00030850 <AmiBlitz3.ab3@20799>    BEQ.w noleterr
00030856 <AmiBlitz3.ab3@20800>   TST.b debugmode
0003085A <AmiBlitz3.ab3@20801>    BEQ.w JL_0_C5D0
0003085E <AmiBlitz3.ab3@20802>   MOVE.w #$7000,D1
00030860 <AmiBlitz3.ab3@20803>   MOVE.b D2,D1
00030864 <AmiBlitz3.ab3@20804>   ANDI.b #$F,D1
00030868 <AmiBlitz3.ab3@20805>   BSR.w writeword
0003086C <AmiBlitz3.ab3@20806>   MOVE.w #$C310,D1
0003086E <AmiBlitz3.ab3@20807>   MOVE.w D2,-(A7)
00030872 <AmiBlitz3.ab3@20808>   BSR.w Atokejsr
00030874 <AmiBlitz3.ab3@20809>   MOVE.w (A7)+,D2
00030878 <AmiBlitz3.ab3@20812>   CMP.b #$7,D2
0003087C <AmiBlitz3.ab3@20813>    BEQ.w JL_0_C684
00030880 <AmiBlitz3.ab3@20814>   CMP.b #$1,D2
00030884 <AmiBlitz3.ab3@20815>    BNE.w JL_0_C62A
0003088A <AmiBlitz3.ab3@20816>   LEA dataletb2,A0
00030890 <AmiBlitz3.ab3@20817>   LEA dataletb2f,A1
00030894 <AmiBlitz3.ab3@20818>   BTST #$F,D2
00030898 <AmiBlitz3.ab3@20819>    BEQ.w JL_0_C5FC
0003089C <AmiBlitz3.ab3@20820>   BSR.w pokecode
000308A0 <AmiBlitz3.ab3@20821> BRA.w JL_0_C668
000308A6 <AmiBlitz3.ab3@20824>   LEA dataletb,A0
000308AC <AmiBlitz3.ab3@20825>   LEA dataletbf,A1
000308B2 <AmiBlitz3.ab3@20826>   TST.w varmode
000308B6 <AmiBlitz3.ab3@20827>    BEQ.w JL_0_C61E
000308BC <AmiBlitz3.ab3@20828>   LEA dataletbl,A0
000308C2 <AmiBlitz3.ab3@20829>   LEA dataletblf,A1
000308C6 <AmiBlitz3.ab3@20832>   MOVE.w D3,$4(A0)
000308CA <AmiBlitz3.ab3@20833>   BSR.w pokecode
000308CE <AmiBlitz3.ab3@20834> BRA.w JL_0_C668
000308D4 <AmiBlitz3.ab3@20837>   LEA dataletw,A0
000308D8 <AmiBlitz3.ab3@20838>   CMP.b #$3,D2
000308DC <AmiBlitz3.ab3@20839>    BCS.w JL_0_C63E
000308E2 <AmiBlitz3.ab3@20840>   LEA dataletl,A0
000308E6 <AmiBlitz3.ab3@20843>   BTST #$F,D2
000308EA <AmiBlitz3.ab3@20844>    BEQ.w JL_0_C652
000308EE <AmiBlitz3.ab3@20845>   MOVE.w $4(A0),D1
000308F2 <AmiBlitz3.ab3@20846>    BSR.w writeword
000308F6 <AmiBlitz3.ab3@20847> BRA.w JL_0_C668
000308FC <AmiBlitz3.ab3@20850>   TST.w varmode
00030900 <AmiBlitz3.ab3@20851>    BEQ.w JL_0_C65E
00030902 <AmiBlitz3.ab3@20852>   ADDQ.w #6,A0
00030906 <AmiBlitz3.ab3@20855>   MOVE.w D3,$2(A0)
00030908 <AmiBlitz3.ab3@20856>   MOVE.l (A0),D1
0003090C <AmiBlitz3.ab3@20857>   BSR.w writelong
00030912 <AmiBlitz3.ab3@20860>   MOVE.l dataput,D1
00030916 <AmiBlitz3.ab3@20861>    BSR.w writelong
0003091A <AmiBlitz3.ab3@20862>   CMP.w #$2C,D0
0003091E <AmiBlitz3.ab3@20863>    BEQ.w JL_0_C67C
00030920 <AmiBlitz3.ab3@20864> RTS
00030926 <AmiBlitz3.ab3@20867>   JSR get1bytemain
0003092A <AmiBlitz3.ab3@20868> BRA.w JL_0_C584
00030930 <AmiBlitz3.ab3@20872>   MOVE.w stlenget,D1
00030934 <AmiBlitz3.ab3@20873>    BSR.w writeword
00030938 <AmiBlitz3.ab3@20874>   BTST #$F,D2
0003093C <AmiBlitz3.ab3@20875>    BNE.w JL_0_C6C0
00030942 <AmiBlitz3.ab3@20876>   TST.w varmode
00030946 <AmiBlitz3.ab3@20877>    BEQ.w JL_0_C6B0
0003094C <AmiBlitz3.ab3@20878>   MOVE.w D3,leaampl+2
00030952 <AmiBlitz3.ab3@20879>   MOVE.l leaampl,D1
00030956 <AmiBlitz3.ab3@20880> BRA.w JL_0_C6BC
0003095C <AmiBlitz3.ab3@20883>   MOVE.w D3,leaamp+2
00030962 <AmiBlitz3.ab3@20884>   MOVE.l leaamp,D1
00030966 <AmiBlitz3.ab3@20887>   BSR.w writelong
0003096A <AmiBlitz3.ab3@20890>   MOVE.w #$C701,D1
00030970 <AmiBlitz3.ab3@20891>   MOVE.w varmode,D2
00030974 <AmiBlitz3.ab3@20892>    BEQ.w JL_0_C6D0
00030976 <AmiBlitz3.ab3@20893>   SUBQ.w #1,D1
0003097A <AmiBlitz3.ab3@20896>   BSR.w Atokejsr
00030982 <AmiBlitz3.ab3@20897>   MOVE.w #$FFFF,lasta6
00030988 <AmiBlitz3.ab3@20898>   LEA stalign,A0
0003098E <AmiBlitz3.ab3@20899>   LEA stalignf,A1
00030992 <AmiBlitz3.ab3@20900>   BSR.w pokecode
00030996 <AmiBlitz3.ab3@20901> BRA.w JL_0_C668
0003099A <AmiBlitz3.ab3@20905>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0003099E <AmiBlitz3.ab3@20906>    BNE.w JL_0_C720
000309A4 <AmiBlitz3.ab3@20907>   JSR get1bytemain
000309A8 <AmiBlitz3.ab3@20908>   CMP.w #$77,D0
000309AC <AmiBlitz3.ab3@20909>    BEQ.w JL_0_C71C
000309B0 <AmiBlitz3.ab3@20910>   CMP.w #$62,D0
000309B4 <AmiBlitz3.ab3@20911>    BEQ.w JL_0_C718
000309B8 <AmiBlitz3.ab3@20912>   CMP.w #"s",d0
000309BC <AmiBlitz3.ab3@20913>   BEQ single3
000309C0 <AmiBlitz3.ab3@20914>   CMP.w #"d",d0
000309C4 <AmiBlitz3.ab3@20915>   BEQ double3
000309C8 <AmiBlitz3.ab3@20916>   CMP.w #$6C,D0
000309CC <AmiBlitz3.ab3@20917>    BNE.w syntaxerr
000309CE <AmiBlitz3.ab3@20918>   MOVEQ.l #$02,D1
000309D0 <AmiBlitz3.ab3@20919> RTS
000309D8 <AmiBlitz3.ab3@20923>   MOVE.b #1,iee
000309DA <AmiBlitz3.ab3@20924>   MOVEQ.l #$3,d1
000309DC <AmiBlitz3.ab3@20925> RTS
000309E4 <AmiBlitz3.ab3@20929>   MOVE.b #1,iee
000309E6 <AmiBlitz3.ab3@20930>   MOVEQ.l #$4,d1
000309E8 <AmiBlitz3.ab3@20931> RTS
000309EA <AmiBlitz3.ab3@20935>   MOVEQ.l #$00,D1
000309EC <AmiBlitz3.ab3@20936> RTS
000309EE <AmiBlitz3.ab3@20940>   MOVEQ.l #$01,D1
000309F0 <AmiBlitz3.ab3@20941> RTS
000309F2 <AmiBlitz3.ab3@20945>   MOVEQ.l #$01,D1
000309F8 <AmiBlitz3.ab3@20946> JMP bakup
000309FC <AmiBlitz3.ab3@20950>   BSR.w JL_0_C6F0
000309FE <AmiBlitz3.ab3@20952>   MOVE.w D1,-(A7)
00030A02 <AmiBlitz3.ab3@20953>    BSR.w AJL_0_BF6E
00030A06 <AmiBlitz3.ab3@20954>   CMP.w #$2C,D0
00030A0A <AmiBlitz3.ab3@20955>    BNE.w syntaxerr
00030A0C <AmiBlitz3.ab3@20956>   MOVE.l D3,-(A7)
00030A10 <AmiBlitz3.ab3@20957>    BSR.w AJL_0_BF6E
00030A12 <AmiBlitz3.ab3@20958>   MOVE.l D3,D1
00030A14 <AmiBlitz3.ab3@20959>   MOVE.l (A7)+,D3
00030A16 <AmiBlitz3.ab3@20960>   MOVE.w (A7)+,D2
00030A1A <AmiBlitz3.ab3@20961>    BEQ.w JL_0_C774
00030A1E <AmiBlitz3.ab3@20965>   CMP.w #$1,D2
00030A22 <AmiBlitz3.ab3@20966>    BEQ.w JL_0_C768
00030A24 <AmiBlitz3.ab3@20969>   SWAP D1
00030A28 <AmiBlitz3.ab3@20970>    BSR.w writeword
00030A2A <AmiBlitz3.ab3@20971>   SWAP D1
00030A2E <AmiBlitz3.ab3@20972>    BSR.w writeword
00030A30 <AmiBlitz3.ab3@20973>   SUBQ.l #1,D3
00030A34 <AmiBlitz3.ab3@20974>    BNE.w JL_0_C754
00030A36 <AmiBlitz3.ab3@20975> RTS
00030A3A <AmiBlitz3.ab3@20978>    BSR.w writeword
00030A3C <AmiBlitz3.ab3@20979>   SUBQ.l #1,D3
00030A40 <AmiBlitz3.ab3@20980>    BNE.w JL_0_C768
00030A42 <AmiBlitz3.ab3@20981> RTS
00030A46 <AmiBlitz3.ab3@20984>    BSR.w writebyte
00030A48 <AmiBlitz3.ab3@20985>   SUBQ.l #1,D3
00030A4C <AmiBlitz3.ab3@20986>    BNE.w JL_0_C774
00030A4E <AmiBlitz3.ab3@20987> RTS
00030A52 <AmiBlitz3.ab3@20991>   BSR.w JL_0_C6F0                                          ;definestorage
00030A54 <AmiBlitz3.ab3@20992>   MOVE.w D1,-(A7)
00030A58 <AmiBlitz3.ab3@20993>   BSR.w AJL_0_BF6E
00030A5A <AmiBlitz3.ab3@20994>   MOVE.w (A7)+,D1
00030A5C <AmiBlitz3.ab3@20995>   LSL.l D1,D3
00030A5E <AmiBlitz3.ab3@20996>   MOVE.l d3,d0
00030A62 <AmiBlitz3.ab3@20997>   BEQ 'll5
00030A64 <AmiBlitz3.ab3@20998>   MOVEQ #0,d1
00030A6A <AmiBlitz3.ab3@21001>     JSR writebyte
00030A6C <AmiBlitz3.ab3@21002>     SUBQ.l #1,d3
00030A70 <AmiBlitz3.ab3@21003>   BNE.s 'll10
00030A72 <AmiBlitz3.ab3@21006> RTS
00030A74 <AmiBlitz3.ab3@21010>   MOVE.w D0,-(A7)
00030A7A <AmiBlitz3.ab3@21011>   LEA dummyasm,A0
00030A80 <AmiBlitz3.ab3@21012>   MOVEA.l destpointer,A1
00030A8A <AmiBlitz3.ab3@21013>   MOVE.w asmlen2,asmlen
00030A90 <AmiBlitz3.ab3@21014>   JSR insasm
00030A92 <AmiBlitz3.ab3@21015>   MOVE.w (A7)+,D0
00030A94 <AmiBlitz3.ab3@21016> RTS
00030A98 <AmiBlitz3.ab3@21020>   BSR.w JL_0_C6F0
00030AA2 <AmiBlitz3.ab3@21022>   MOVE.l #ptr_parameterstore,asmbuff
00030AA4 <AmiBlitz3.ab3@21023>   TST.w D1
00030AA8 <AmiBlitz3.ab3@21024>    BEQ.w JL_0_C7EE
00030AAC <AmiBlitz3.ab3@21025>   CMP.w #$1,D1
00030AB0 <AmiBlitz3.ab3@21026>    BEQ.w JL_0_C844
00030AB4 <AmiBlitz3.ab3@21027>   CMP.w #$2,d1
00030AB8 <AmiBlitz3.ab3@21028>    BEQ long
00030ABC <AmiBlitz3.ab3@21029>   CMP.w #$3,d1
00030AC0 <AmiBlitz3.ab3@21030>    BEQ single
00030AC2 <AmiBlitz3.ab3@21031>    MOVEQ.l #$0d,D3
00030AC8 <AmiBlitz3.ab3@21037>    JSR asmconst
00030ACC <AmiBlitz3.ab3@21038>    BSR.w JL_0_C796
00030AD0 <AmiBlitz3.ab3@21039>    BSR.w writelong
00030AD4 <AmiBlitz3.ab3@21040>    BSR   writelong
00030AD8 <AmiBlitz3.ab3@21041>   CMP.w #$2C,D0
00030ADC <AmiBlitz3.ab3@21042>    BEQ.w JL_0_C7D8b
00030ADE <AmiBlitz3.ab3@21043> RTS
00030AE0 <AmiBlitz3.ab3@21047>   MOVEQ.l #$0B,D3
00030AE8 <AmiBlitz3.ab3@21051>   MOVE.b #1,_dcb
00030AEE <AmiBlitz3.ab3@21054>   JSR asmconst
00030AF4 <AmiBlitz3.ab3@21055>   CLR.b _dcb
00030AF8 <AmiBlitz3.ab3@21056>   BSR.w JL_0_C796
00030AFC <AmiBlitz3.ab3@21057>   BSR writebyte
00030B00 <AmiBlitz3.ab3@21058>   BSR writebyte
00030B04 <AmiBlitz3.ab3@21059>   BSR writebyte                                            ;long
00030B08 <AmiBlitz3.ab3@21060>   BSR writebyte
00030B0C <AmiBlitz3.ab3@21061>   CMP.w #$2C,D0
00030B10 <AmiBlitz3.ab3@21062>    BEQ.w JL_0_C7D8
00030B12 <AmiBlitz3.ab3@21063> RTS
00030B14 <AmiBlitz3.ab3@21067>   MOVEQ.l #$0c,D3
00030B1C <AmiBlitz3.ab3@21071>   MOVE.b #1,_dcb
00030B22 <AmiBlitz3.ab3@21074>   JSR asmconst
00030B28 <AmiBlitz3.ab3@21075>   CLR.b _dcb
00030B2C <AmiBlitz3.ab3@21076>   BSR.w JL_0_C796
00030B30 <AmiBlitz3.ab3@21077>   BSR.w writebyte
00030B34 <AmiBlitz3.ab3@21078>   BSR.w writebyte
00030B38 <AmiBlitz3.ab3@21079>   BSR.w writebyte
00030B3C <AmiBlitz3.ab3@21080>   BSR.w writebyte
00030B40 <AmiBlitz3.ab3@21081>   CMP.w #$2C,D0
00030B44 <AmiBlitz3.ab3@21082>    BEQ.w JL_0_C7D8a
00030B46 <AmiBlitz3.ab3@21083> RTS
00030B48 <AmiBlitz3.ab3@21088>   MOVEQ.l #$11,D3
00030B4E <AmiBlitz3.ab3@21091>   JSR get1bytemain
00030B52 <AmiBlitz3.ab3@21092>   CMP.w #$22,D0
00030B56 <AmiBlitz3.ab3@21093>    BNE.w JL_0_C81E
00030B58 <AmiBlitz3.ab3@21096>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00030B5C <AmiBlitz3.ab3@21097>    BEQ.w syntaxerr
00030B60 <AmiBlitz3.ab3@21098>   CMP.w #$22,D0
00030B64 <AmiBlitz3.ab3@21099>    BEQ.w JL_0_C816
00030B68 <AmiBlitz3.ab3@21100>   CMP.b #"\",d0
00030B6C <AmiBlitz3.ab3@21101>    BNE 'n1
00030B70 <AmiBlitz3.ab3@21102>   CMP.b #"\",(a5)
00030B74 <AmiBlitz3.ab3@21103>    BEQ 'do1
00030B76 <AmiBlitz3.ab3@21106>   MOVE.w D0,D1
00030B7A <AmiBlitz3.ab3@21107>   BSR.w writebyte
00030B7E <AmiBlitz3.ab3@21108> BRA.w JL_0_C7FC
00030B86 <AmiBlitz3.ab3@21111>   CMP.l #"__DA",1(a5)
00030B8A <AmiBlitz3.ab3@21112>    BNE 'nodate1
00030B92 <AmiBlitz3.ab3@21113>   CMP.l #"TE__",5(a5)
00030B96 <AmiBlitz3.ab3@21114>    BEQ 'c1
00030B9E <AmiBlitz3.ab3@21115>   CMP.l #"TE_G",5(a5)
00030BA2 <AmiBlitz3.ab3@21116>    BNE 'nodate1
00030BAA <AmiBlitz3.ab3@21117>   CMP.l #"ER__",9(a5)
00030BAE <AmiBlitz3.ab3@21118>    BNE 'nodate1
00030BB4 <AmiBlitz3.ab3@21119>   JSR compiledatedc_ger
00030BB8 <AmiBlitz3.ab3@21120> BRA 'n1
00030BBE <AmiBlitz3.ab3@21123>   JSR compiledatedc
00030BC2 <AmiBlitz3.ab3@21124> BRA 'n1
00030BCA <AmiBlitz3.ab3@21127>   CMP.l #"__VE",1(a5)
00030BCE <AmiBlitz3.ab3@21128>    BNE 'n1
00030BD4 <AmiBlitz3.ab3@21129>   CMP.w #"R_",5(a5)
00030BD8 <AmiBlitz3.ab3@21130>    BNE 'n1
00030BDE <AmiBlitz3.ab3@21131>   JSR version_string_dc
00030BE2 <AmiBlitz3.ab3@21132> BRA.w JL_0_C7FC
00030BE8 <AmiBlitz3.ab3@21136>   CLR.w instringon
00030BEE <AmiBlitz3.ab3@21137>   JSR get1bytemain
00030BF2 <AmiBlitz3.ab3@21138> BRA.w JL_0_C83A
00030BFC <AmiBlitz3.ab3@21143>    MOVE.w oldqflag,instringon
00030C02 <AmiBlitz3.ab3@21144>   MOVEA.l lastsourcepos,A5
00030C08 <AmiBlitz3.ab3@21145>    JSR asmconst
00030C0E <AmiBlitz3.ab3@21146>   SUBQ.l #1,destpointer
00030C12 <AmiBlitz3.ab3@21147>    BSR.w JL_0_C796
00030C18 <AmiBlitz3.ab3@21148>   ADDQ.l #1,destpointer
00030C1C <AmiBlitz3.ab3@21149>    BSR.w writebyte
00030C20 <AmiBlitz3.ab3@21152>   CMP.w #$2C,D0
00030C24 <AmiBlitz3.ab3@21153>    BEQ.w JL_0_C7F0
00030C26 <AmiBlitz3.ab3@21154> RTS
00030C28 <AmiBlitz3.ab3@21158>   MOVEQ.l #$10,D3
00030C30 <AmiBlitz3.ab3@21164>   MOVE.b #1,_dcb
00030C36 <AmiBlitz3.ab3@21165>   JSR asmconst
00030C3C <AmiBlitz3.ab3@21166>   CLR.b _dcb
00030C40 <AmiBlitz3.ab3@21167>   BSR.w JL_0_C796
00030C44 <AmiBlitz3.ab3@21168>   BSR.w writebyte
00030C48 <AmiBlitz3.ab3@21169>   BSR.w writebyte
00030C4C <AmiBlitz3.ab3@21170>   CMP.w #$2C,D0
00030C50 <AmiBlitz3.ab3@21171>    BEQ.w JL_0_C84A
00030C52 <AmiBlitz3.ab3@21172> RTS
00030C58 <AmiBlitz3.ab3@21176>   ADDQ.l #3,destpointer
00030C60 <AmiBlitz3.ab3@21177>   ANDI.w #$FFFC,destpointer+2
00030C62 <AmiBlitz3.ab3@21178> RTS
00030C68 <AmiBlitz3.ab3@21182>   ADDQ.l #7,destpointer
00030C70 <AmiBlitz3.ab3@21183>   ANDI.w #$FFF8,destpointer+2
00030C72 <AmiBlitz3.ab3@21184> RTS
00030C78 <AmiBlitz3.ab3@21188>   ADDQ.l #1,destpointer                                    ;even
00030C80 <AmiBlitz3.ab3@21189>   BCLR #$0,destpointer+3
00030C82 <AmiBlitz3.ab3@21190> RTS
00030C84 <AmiBlitz3.ab3@21193> datasize: Ds.w 1
00030C8A <AmiBlitz3.ab3@21203>   TST.b debugmode
00030C8E <AmiBlitz3.ab3@21204>   BEQ.w pdt__skip
00030C92 <AmiBlitz3.ab3@21205>   MOVE.w #$4420,D0                                         ;'D '
00030C96 <AmiBlitz3.ab3@21206>   MOVE.b datasize+1(PC),D0
00030C9A <AmiBlitz3.ab3@21207> BRA.w JL_0_C1E6
00030C9C <AmiBlitz3.ab3@21210> RTS
00030CA0 <AmiBlitz3.ab3@21214>   MOVE.w #$FC17,D1
00030CA6 <AmiBlitz3.ab3@21215>    JSR uselib
00030CB0 <AmiBlitz3.ab3@21217>    MOVE.w oldqflag,instringon
00030CB6 <AmiBlitz3.ab3@21218>   MOVEA.l lastsourcepos,A5
00030CBC <AmiBlitz3.ab3@21219>    JSR AJL_0_498A
00030CC2 <AmiBlitz3.ab3@21220>   MOVE.w D1,datasize
00030CC6 <AmiBlitz3.ab3@21221>   CMP.w #$7,D1
00030CCA <AmiBlitz3.ab3@21222>    BEQ.w JL_0_C944
00030CCC <AmiBlitz3.ab3@21223>   MOVE.w D1,-(A7)
00030CD0 <AmiBlitz3.ab3@21226>   BSR.w pdt
00030CD2 <AmiBlitz3.ab3@21227>   MOVE.w (A7),D2
00030CD6 <AmiBlitz3.ab3@21228>    BSR.w JL_0_B1D8
00030CD8 <AmiBlitz3.ab3@21229>   CMP.w (A7),D2                                            ;datamode
00030CDC <AmiBlitz3.ab3@21230>    BEQ.w JL_0_C920
00030CDE <AmiBlitz3.ab3@21231>   MOVE.w D2,D1
00030CE0 <AmiBlitz3.ab3@21232>   MOVE.w (A7),D2
00030CE4 <AmiBlitz3.ab3@21233>   CMP.w #$2,D2
00030CE8 <AmiBlitz3.ab3@21234>    BNE.w JL_0_C8FE
00030CEC <AmiBlitz3.ab3@21235>   CMP.w #$3,D1
00030CF0 <AmiBlitz3.ab3@21236>    BNE.w baddaterr
00030CF6 <AmiBlitz3.ab3@21237>   CMP.l #$10000,D3
00030CFA <AmiBlitz3.ab3@21238>    BCC.w baddaterr
00030CFE <AmiBlitz3.ab3@21239> BRA.w JL_0_C920
00030D02 <AmiBlitz3.ab3@21242>   CMP.w #$1,D2
00030D06 <AmiBlitz3.ab3@21243>    BNE.w JL_0_C91C
00030D0A <AmiBlitz3.ab3@21244>   CMP.w #$2,D1
00030D0E <AmiBlitz3.ab3@21245>    BNE.w baddaterr
00030D14 <AmiBlitz3.ab3@21246>   CMP.l #$100,D3
00030D18 <AmiBlitz3.ab3@21247>    BCC.w baddaterr
00030D1C <AmiBlitz3.ab3@21248> BRA.w JL_0_C920
00030D20 <AmiBlitz3.ab3@21251> BRA.w baddaterr
00030D24 <AmiBlitz3.ab3@21254>   CMP.w #$3,D2
00030D28 <AmiBlitz3.ab3@21255>   BCC.w JL_0_C930
00030D2C <AmiBlitz3.ab3@21256>   BSR.w JL_0_C1E6
00030D30 <AmiBlitz3.ab3@21257> BRA.w JL_0_C934
00030D36 <AmiBlitz3.ab3@21260>   TST.b iee
00030D3A <AmiBlitz3.ab3@21261>   BEQ 'old
00030D3E <AmiBlitz3.ab3@21262>   CMP.b #5,d2
00030D42 <AmiBlitz3.ab3@21263>   BNE 'old
00030D46 <AmiBlitz3.ab3@21264>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00030D4A <AmiBlitz3.ab3@21268>   BSR.w JL_0_C1DE                                          ;write data >3
00030D50 <AmiBlitz3.ab3@21271>   JSR reget
00030D54 <AmiBlitz3.ab3@21272>   CMP.w #$2C,D0
00030D58 <AmiBlitz3.ab3@21273>    BEQ.w JL_0_C8CC
00030D5A <AmiBlitz3.ab3@21274>   ADDQ.w #2,A7
00030D5C <AmiBlitz3.ab3@21275> RTS
00030D60 <AmiBlitz3.ab3@21278>    BSR.w pdt
00030D66 <AmiBlitz3.ab3@21279>   MOVE.l data2,-(A7)
00030D6A <AmiBlitz3.ab3@21280>    BSR.w JL_0_C1DE
00030D6C <AmiBlitz3.ab3@21281>   MOVEQ.l #$00,D1
00030D72 <AmiBlitz3.ab3@21282>    JSR get1bytemain
00030D76 <AmiBlitz3.ab3@21283>    BEQ.w JL_0_C9A6
00030D7A <AmiBlitz3.ab3@21284>   CMP.w #$22,D0
00030D7E <AmiBlitz3.ab3@21285>    BEQ.w JL_0_C988
00030D82 <AmiBlitz3.ab3@21286>   CMP.w #$2C,D0
00030D86 <AmiBlitz3.ab3@21287>    BEQ.w JL_0_C9A6
00030D8A <AmiBlitz3.ab3@21290>    BSR.w JL_0_C210
00030D8C <AmiBlitz3.ab3@21291>   ADDQ.w #1,D1
00030D92 <AmiBlitz3.ab3@21292>    JSR getchar
00030D94 <AmiBlitz3.ab3@21293>   TST.w D0
00030D98 <AmiBlitz3.ab3@21294>    BEQ.w JL_0_C9A6
00030D9C <AmiBlitz3.ab3@21295>   CMP.w #$2C,D0
00030DA0 <AmiBlitz3.ab3@21296>    BEQ.w JL_0_C9A6
00030DA4 <AmiBlitz3.ab3@21297> BRA.w JL_0_C96C
00030DA6 <AmiBlitz3.ab3@21301>    MOVEQ #0,d0
00030DA8 <AmiBlitz3.ab3@21302>    MOVE.b (a5)+,d0
00030DAC <AmiBlitz3.ab3@21303>    BEQ.w notqerr2
00030DB0 <AmiBlitz3.ab3@21304>   CMP.w #$22,D0
00030DB4 <AmiBlitz3.ab3@21305>    BEQ.w JL_0_C9A2
00030DB8 <AmiBlitz3.ab3@21306>    BSR.w JL_0_C210
00030DBA <AmiBlitz3.ab3@21307>   ADDQ.w #1,D1
00030DBE <AmiBlitz3.ab3@21308> BRA.w JL_0_C988
00030DC4 <AmiBlitz3.ab3@21309> notqerr2 JMP notqerr
00030DCA <AmiBlitz3.ab3@21311>   CLR.w instringon
00030DD0 <AmiBlitz3.ab3@21312>   JSR get1bytemain
00030DD2 <AmiBlitz3.ab3@21315>   MOVEA.l (A7)+,A0
00030DD8 <AmiBlitz3.ab3@21316>   MOVE.w dontwrite,D2
00030DDC <AmiBlitz3.ab3@21317>    BNE.w JL_0_C9B4
00030DDE <AmiBlitz3.ab3@21318>   MOVE.l D1,(A0)
00030DE4 <AmiBlitz3.ab3@21321>   ADDQ.l #1,data2
00030DEC <AmiBlitz3.ab3@21322>   BCLR #$0,data2+3
00030DF0 <AmiBlitz3.ab3@21323>   CMP.w #$2C,D0
00030DF4 <AmiBlitz3.ab3@21324>    BEQ.w JL_0_C944
00030DF6 <AmiBlitz3.ab3@21325> RTS
00030DFC <AmiBlitz3.ab3@21329> JMP vardeclareerr
00030E02 <AmiBlitz3.ab3@21332>   MOVE.w proceduremode,D1                                  ;doshared
00030E06 <AmiBlitz3.ab3@21334>   BNE.w 'l1
00030E08 <AmiBlitz3.ab3@21335>   MOVE.w D1,-(A7)
00030E0E <AmiBlitz3.ab3@21336>   CLR.w proceduremode
00030E14 <AmiBlitz3.ab3@21339>   LEA varbase,a2
00030E18 <AmiBlitz3.ab3@21340>   BSR.w getparameter
00030E1A <AmiBlitz3.ab3@21341>   MOVE.w d2,-(a7)
00030E20 <AmiBlitz3.ab3@21342>    JSR findvariable
00030E24 <AmiBlitz3.ab3@21343>    BEQ 'checkdim
00030E2A <AmiBlitz3.ab3@21344>    LEA sharebase,a2
00030E2C <AmiBlitz3.ab3@21345>    MOVEQ #$f+4,d7
00030E30 <AmiBlitz3.ab3@21346>    BSR.w findlab                                         ;find var
00030E34 <AmiBlitz3.ab3@21347>    BEQ.b dupsherr
00030E38 <AmiBlitz3.ab3@21348>    BSR addlabel
00030E3C <AmiBlitz3.ab3@21349>    CMP.b #".",d0
00030E40 <AmiBlitz3.ab3@21350>    BNE JUMP_vardeclareerr
00030E42 <AmiBlitz3.ab3@21351>    MOVE.l a2,a3
00030E48 <AmiBlitz3.ab3@21352>    JSR JL_0_8EB8b
00030E4A <AmiBlitz3.ab3@21383>   MOVE.w (a7)+,d2
00030E4E <AmiBlitz3.ab3@21384>    CMP.b #",",d0
00030E52 <AmiBlitz3.ab3@21385>    BNE 'ret
00030E58 <AmiBlitz3.ab3@21386>    JSR get1bytemain
00030E5C <AmiBlitz3.ab3@21387> BRA 'again2
00030E62 <AmiBlitz3.ab3@21390>   MOVE.w (A7)+,proceduremode
00030E64 <AmiBlitz3.ab3@21391> RTS
00030E6A <AmiBlitz3.ab3@21398>    CMP.w #2,6(a2)
00030E6E <AmiBlitz3.ab3@21399>    BEQ 'do
00030E74 <AmiBlitz3.ab3@21400>    CMP.w #$102,6(a2)
00030E78 <AmiBlitz3.ab3@21401>    BEQ 'do
00030E7E <AmiBlitz3.ab3@21402> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00030E84 <AmiBlitz3.ab3@21405>   LEA varbase,a0
00030E86 <AmiBlitz3.ab3@21408>   MOVE.l (A0),D0                                           ;find label
00030E8A <AmiBlitz3.ab3@21409>    BEQ.b 'z1
00030E8C <AmiBlitz3.ab3@21410>    CMP.l d0,a2
00030E90 <AmiBlitz3.ab3@21411>    BEQ 'z1
00030E92 <AmiBlitz3.ab3@21412>    MOVE.l d0,a0
00030E96 <AmiBlitz3.ab3@21413> BRA 'm1
00030E98 <AmiBlitz3.ab3@21416>   MOVE.l (a2),d1
00030E9A <AmiBlitz3.ab3@21417>     MOVE.l d1,(a0)
00030E9C <AmiBlitz3.ab3@21418>     CLR.l (a2)
00030EA2 <AmiBlitz3.ab3@21419>     LEA sharebase,a0
00030EA4 <AmiBlitz3.ab3@21420>     MOVE.l (a0),(a2)
00030EA6 <AmiBlitz3.ab3@21421>     MOVE.l a2,(a0)
00030EAC <AmiBlitz3.ab3@21422>     JSR get1bytemain
00030EB2 <AmiBlitz3.ab3@21423>     JSR get1bytemain
00030EB6 <AmiBlitz3.ab3@21424> BRA 'domore
00030EBE <AmiBlitz3.ab3@21427>   MOVE.b #1,nowdeclare
00030EC0 <AmiBlitz3.ab3@21428>   MOVE.w D1,-(A7)
00030EC6 <AmiBlitz3.ab3@21429>   CLR.w proceduremode
00030ECA <AmiBlitz3.ab3@21432>    BSR.w getparameter
00030ECC <AmiBlitz3.ab3@21433>   MOVE.w D2,-(A7)
00030ED2 <AmiBlitz3.ab3@21434>   LEA firstglob,A2
00030ED6 <AmiBlitz3.ab3@21435>    BSR.w findvariable2
00030EDA <AmiBlitz3.ab3@21436>    BNE.b JL_0_CA06
00030EE0 <AmiBlitz3.ab3@21439>   MOVE.b flagmask+1,D1
00030EE4 <AmiBlitz3.ab3@21440>   MOVE.b $7(A2),D3
00030EE6 <AmiBlitz3.ab3@21441>   EOR.b D3,D1
00030EEA <AmiBlitz3.ab3@21442>    BEQ.w dupsherr
00030EEE <AmiBlitz3.ab3@21443>    BSR.w findlab
00030EF2 <AmiBlitz3.ab3@21444>    BEQ.b JL_0_C9F0
00030EF6 <AmiBlitz3.ab3@21447>    BSR.w addlabel
00030EF8 <AmiBlitz3.ab3@21448>   MOVE.w (A7)+,D2
00030EFA <AmiBlitz3.ab3@21449>   MOVE.l A2,-(A7)
00030EFE <AmiBlitz3.ab3@21450>    BSR.w JL_0_8E3C
00030F00 <AmiBlitz3.ab3@21451>   MOVEA.l (A7)+,A2
00030F02 <AmiBlitz3.ab3@21452>   MOVEQ.l #$04,D1
00030F04 <AmiBlitz3.ab3@21453>   ADDQ.w #4,A2
00030F06 <AmiBlitz3.ab3@21454>   ADDQ.w #4,A3
00030F08 <AmiBlitz3.ab3@21457>     MOVE.w (A3)+,(A2)+
00030F0C <AmiBlitz3.ab3@21458>   DBF D1,JL_0_CA1A
00030F14 <AmiBlitz3.ab3@21460>   BTST #$1,flagmask+1
00030F18 <AmiBlitz3.ab3@21461>    BEQ.w JL_0_CA3C
00030F1E <AmiBlitz3.ab3@21462>    JSR get1bytemain
00030F22 <AmiBlitz3.ab3@21463>   CMP.w #$29,D0
00030F26 <AmiBlitz3.ab3@21464>    BNE.w syntaxerrc
00030F2C <AmiBlitz3.ab3@21465>    JSR get1bytemain
00030F30 <AmiBlitz3.ab3@21468>    CMP.w #$2C,D0
00030F34 <AmiBlitz3.ab3@21469>    BNE.w JL_0_CA4C
00030F3A <AmiBlitz3.ab3@21470>    JSR get1bytemain
00030F3E <AmiBlitz3.ab3@21471> BRA.w JL_0_C9DE
00030F44 <AmiBlitz3.ab3@21474>   MOVE.w (A7)+,proceduremode
00030F46 <AmiBlitz3.ab3@21475> RTS
00030F4C <AmiBlitz3.ab3@21477> syntaxerrc JMP syntaxerr
00030F50 <AmiBlitz3.ab3@21480>    BSR.w JL_0_C05C
00030F56 <AmiBlitz3.ab3@21481>    JSR check_incdir                                        ; ergebnis in d2
00030F5C <AmiBlitz3.ab3@21483>    LEA ptr_parameterstore,a1
00030F5E <AmiBlitz3.ab3@21484>    MOVE.l d2,-(a7)
00030F64 <AmiBlitz3.ab3@21485>    LEA includetemp,a0                                      ; filename in includetemp packen
00030F66 <AmiBlitz3.ab3@21488>      MOVE.b (a1)+,(a0)+
00030F6A <AmiBlitz3.ab3@21489>    BNE 'l4
00030F70 <AmiBlitz3.ab3@21491>    LEA ptr_parameterstore,a1
00030F72 <AmiBlitz3.ab3@21492>    MOVE.l a1,a0
00030F74 <AmiBlitz3.ab3@21495>     TST.b (a0)+
00030F78 <AmiBlitz3.ab3@21496>    BNE 'l1
00030F7A <AmiBlitz3.ab3@21499>      MOVE.b -(a0),d0
00030F7E <AmiBlitz3.ab3@21500>      CMP.b #":",d0
00030F82 <AmiBlitz3.ab3@21501>       BEQ 'out
00030F86 <AmiBlitz3.ab3@21502>      CMP.b #"/",d0
00030F8A <AmiBlitz3.ab3@21503>       BEQ 'out
00030F8C <AmiBlitz3.ab3@21504>      CMP.l a1,a0
00030F90 <AmiBlitz3.ab3@21505>       BEQ 'out2
00030F94 <AmiBlitz3.ab3@21506> BRA 'l2
00030F96 <AmiBlitz3.ab3@21509>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00030F98 <AmiBlitz3.ab3@21512>    MOVEQ.l #-$01,D2
00030F9A <AmiBlitz3.ab3@21515>      ADDQ.w #1,D2
00030F9C <AmiBlitz3.ab3@21516>      MOVE.b (a0)+,(a1)+
00030FA0 <AmiBlitz3.ab3@21517>    BNE 'l3
00030FA2 <AmiBlitz3.ab3@21518>    CLR.b (a1)+
00030FA8 <AmiBlitz3.ab3@21520>    LEA ptr_parameterstore,a1
00030FAC <AmiBlitz3.ab3@21521>    BSR.w findxinc                                         ;find include
00030FB0 <AmiBlitz3.ab3@21522>     BEQ.w 'outb
00030FB2 <AmiBlitz3.ab3@21524>    MOVE.w D2,-(A7)
00030FB6 <AmiBlitz3.ab3@21525>    BSR.w addlabel
00030FB8 <AmiBlitz3.ab3@21526>    MOVE.w (A7)+,D2
00030FBE <AmiBlitz3.ab3@21528>    LEA ptr_parameterstore,a1
00030FC4 <AmiBlitz3.ab3@21529>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00030FC6 <AmiBlitz3.ab3@21532>     MOVE.b (a0)+,(a1)+
00030FCA <AmiBlitz3.ab3@21533>    BNE 'l4b
00030FCC <AmiBlitz3.ab3@21535>    MOVE.l (a7)+,d2
00030FD2 <AmiBlitz3.ab3@21536>    LEA ptr_parameterstore,a1
00030FD6 <AmiBlitz3.ab3@21537> BRA.w JL_0_CB18
00030FDC <AmiBlitz3.ab3@21540>    LEA ptr_parameterstore,a1
00030FE2 <AmiBlitz3.ab3@21541>    LEA includetemp,a0
00030FE4 <AmiBlitz3.ab3@21544>     MOVE.b (a0)+,(a1)+
00030FE8 <AmiBlitz3.ab3@21545>    BNE 'l4b2
00030FEA <AmiBlitz3.ab3@21547>    MOVE.l (a7)+,d2
00030FF0 <AmiBlitz3.ab3@21548>    LEA ptr_parameterstore,a1
00030FF2 <AmiBlitz3.ab3@21551> RTS
00030FF6 <AmiBlitz3.ab3@21555>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
00030FFC <AmiBlitz3.ab3@21557>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031002 <AmiBlitz3.ab3@21559>   MOVEA.l _dosbase,A6
00031004 <AmiBlitz3.ab3@21560>   MOVE.l D0,D7                                                 ; store Lockpointer
00031008 <AmiBlitz3.ab3@21561>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
0003100A <AmiBlitz3.ab3@21562>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031010 <AmiBlitz3.ab3@21563>   MOVE.l ptr_macrobuffer_begin,D2
00031014 <AmiBlitz3.ab3@21564>    JSR _Examine(A6)
0003101A <AmiBlitz3.ab3@21565>   MOVEA.l ptr_macrobuffer_begin,A0
0003101E <AmiBlitz3.ab3@21566>   MOVE.l $4(A0),D0
00031022 <AmiBlitz3.ab3@21567>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031026 <AmiBlitz3.ab3@21568>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00031028 <AmiBlitz3.ab3@21569>   MOVE.l D7,D1                                                 ; begin unlock the file
0003102C <AmiBlitz3.ab3@21570>    JSR _UnLock(A6)
00031032 <AmiBlitz3.ab3@21572>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031038 <AmiBlitz3.ab3@21573>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0003103C <AmiBlitz3.ab3@21574>    JSR _Open(A6)
0003103E <AmiBlitz3.ab3@21575>   MOVE.l D0,D7
00031042 <AmiBlitz3.ab3@21576>    BEQ.w error_cant_open_include
00031048 <AmiBlitz3.ab3@21577>   MOVE.l destpointer,D0
0003104A <AmiBlitz3.ab3@21578>   ADD.l D3,D0
00031050 <AmiBlitz3.ab3@21579>   CMP.l destbufferend,D0
00031054 <AmiBlitz3.ab3@21580>    BHI.w JL_0_CAF6
0003105A <AmiBlitz3.ab3@21581>   MOVE.l destpointer,D2
0003105C <AmiBlitz3.ab3@21582>   MOVE.l D7,D1
00031060 <AmiBlitz3.ab3@21583>    JSR _Read(A6)
00031066 <AmiBlitz3.ab3@21584>   CMP.l #$FFFFFFFF,D0
0003106A <AmiBlitz3.ab3@21585>    BEQ.w error_reading_file
00031070 <AmiBlitz3.ab3@21586>   ADD.l D0,destpointer
00031074 <AmiBlitz3.ab3@21587> BRA.w JL_0_CB04
0003107C <AmiBlitz3.ab3@21590>   MOVE.w #$FFFF,dontwrite
00031082 <AmiBlitz3.ab3@21591>   MOVE.l D0,destpointer
00031084 <AmiBlitz3.ab3@21594>   MOVE.l D7,D1
00031088 <AmiBlitz3.ab3@21595> JMP _Close(A6)
0003108E <AmiBlitz3.ab3@21599> JMP illdirerr
00031094 <AmiBlitz3.ab3@21602>   TST.w dirmode                                            ;include  open
00031098 <AmiBlitz3.ab3@21603>    BNE.w JUMP_illdirerr
0003109C <AmiBlitz3.ab3@21604>   BSR.w JL_0_C05C
000310A2 <AmiBlitz3.ab3@21605>   JSR check_incdir
000310A6 <AmiBlitz3.ab3@21608>   BSR.w findconstant
000310AA <AmiBlitz3.ab3@21609>    BEQ.w alincerr
000310B0 <AmiBlitz3.ab3@21611>   LEA constantbase,A2
000310B4 <AmiBlitz3.ab3@21612>   BSR.w addhere2
000310B8 <AmiBlitz3.ab3@21613>   CLR.w $C(A2)
000310BC <AmiBlitz3.ab3@21614>   CLR.l $4(A2)
000310C2 <AmiBlitz3.ab3@21616>   MOVE.l #ptr_parameterstore,D1
000310C4 <AmiBlitz3.ab3@21617>   MOVE.l d1,a0
000310CA <AmiBlitz3.ab3@21618>   LEA includetemp2,a1
000310CC <AmiBlitz3.ab3@21621>     MOVE.b (a0)+,(a1)+
000310D0 <AmiBlitz3.ab3@21622>   BNE 'l1
000310D6 <AmiBlitz3.ab3@21623>   JSR save_includename
000310E0 <AmiBlitz3.ab3@21624>   MOVE.l #0,include_process
000310E8 <AmiBlitz3.ab3@21626>   CMP.l #$62623200,-4(a0)                                  ;.bb2
000310EC <AmiBlitz3.ab3@21627>   BEQ 'ok
000310F4 <AmiBlitz3.ab3@21628>   CMP.l #$61623300,-4(a0)                                  ;.ab3
000310F8 <AmiBlitz3.ab3@21629>   BEQ 'ok_tokenize
00031100 <AmiBlitz3.ab3@21630>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031104 <AmiBlitz3.ab3@21631>   BEQ 'ok_tokenize
0003110C <AmiBlitz3.ab3@21632>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031110 <AmiBlitz3.ab3@21633>   BEQ 'ok
00031116 <AmiBlitz3.ab3@21634> JMP errortoken                                             ;can only include
00031120 <AmiBlitz3.ab3@21637>    MOVE.l #-1,include_process                              ; must tokenize the include
00031126 <AmiBlitz3.ab3@21640>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0003112C <AmiBlitz3.ab3@21641>   MOVEA.l _dosbase,A6
00031130 <AmiBlitz3.ab3@21642>   JSR _Open(A6)
00031134 <AmiBlitz3.ab3@21643>   MOVE.l D0,$8(A2)
00031138 <AmiBlitz3.ab3@21644>   BEQ.w error_cant_open_include
0003113E <AmiBlitz3.ab3@21645>   CLR.l includeline
00031142 <AmiBlitz3.ab3@21646>   MOVE.l 8(a2),d1
00031144 <AmiBlitz3.ab3@21647>   MOVE.l d3,-(a7)
00031146 <AmiBlitz3.ab3@21648>   MOVEQ #0,d2
00031148 <AmiBlitz3.ab3@21649>   MOVEQ #1,d3
0003114C <AmiBlitz3.ab3@21650>   JSR _Seek(a6)                                            ; -66
00031150 <AmiBlitz3.ab3@21651>   MOVE.l 8(a2),d1
00031152 <AmiBlitz3.ab3@21652>   MOVEQ #0,d2
00031154 <AmiBlitz3.ab3@21653>   MOVEQ #-1,d3
00031158 <AmiBlitz3.ab3@21654>   JSR _Seek(a6)                                            ; -66
0003115A <AmiBlitz3.ab3@21655>   MOVE.l (a7)+,d3
0003115C <AmiBlitz3.ab3@21656>   ADDQ.l #4,d0
00031162 <AmiBlitz3.ab3@21658>   MOVE.l #$10000,D1
00031168 <AmiBlitz3.ab3@21659>   MOVEA.l _execbase,A6
0003116C <AmiBlitz3.ab3@21662>   JSR _AllocVec(a6)
00031170 <AmiBlitz3.ab3@21664>   MOVE.l D0,$4(A2)
00031174 <AmiBlitz3.ab3@21665>   MOVE.l D0,$E(A2)
00031176 <AmiBlitz3.ab3@21666>   MOVEA.l D0,A5
0003117C <AmiBlitz3.ab3@21673>   ADDQ.w #1,ininclude                                      ;enter include
00031182 <AmiBlitz3.ab3@21676>   LEA _include,a0
00031186 <AmiBlitz3.ab3@21677>   MOVEM.l a0-a6/d0-d7,-(a7)
0003118C <AmiBlitz3.ab3@21678>   LEA ptr_parameterstore,a1
0003118E <AmiBlitz3.ab3@21681>     MOVE.b (a0)+,(a1)+
00031192 <AmiBlitz3.ab3@21682>   BNE 'l1b
00031194 <AmiBlitz3.ab3@21684>   MOVEQ #9,d2
0003119A <AmiBlitz3.ab3@21685>   JSR findlabel2
0003119E <AmiBlitz3.ab3@21686>   BNE 'd
000311A6 <AmiBlitz3.ab3@21687>   MOVE.l #1,8(a2)
000311AA <AmiBlitz3.ab3@21688>   MOVEM.l (a7)+,a0-a6/d0-d7
000311AE <AmiBlitz3.ab3@21689> BRA 'd2
000311B4 <AmiBlitz3.ab3@21692>   JSR addlabelhash
000311BC <AmiBlitz3.ab3@21693>   MOVE.l #$1,$4(A2)
000311C4 <AmiBlitz3.ab3@21694>   MOVE.l #1,8(a2)
000311C8 <AmiBlitz3.ab3@21695>   MOVEM.l (a7)+,a0-a6/d0-d7
000311CE <AmiBlitz3.ab3@21698>   LEA inctab,a0
000311D0 <AmiBlitz3.ab3@21699>   MOVEQ #0,d1
000311D6 <AmiBlitz3.ab3@21700>   MOVE.w ininclude,d1
000311DA <AmiBlitz3.ab3@21701>   CLR.l $0(a0,d1*4)
000311E0 <AmiBlitz3.ab3@21702>   MOVEA.l passstack,A7
000311E6 <AmiBlitz3.ab3@21703> JMP AJL_0_413A
000311EC <AmiBlitz3.ab3@21705> JUMP_dupmacerr JMP dupmacerr
000311EE <AmiBlitz3.ab3@21707> coolnest:   Ds.w 1
000311F2 <AmiBlitz3.ab3@21708> macline:    Ds.l 1
000311FC <AmiBlitz3.ab3@21712>   MOVE.l linenumat,macline
00031200 <AmiBlitz3.ab3@21713>    BSR.w makename2
00031204 <AmiBlitz3.ab3@21714>    BEQ.w JUMP_syntaxerr
0003120A <AmiBlitz3.ab3@21716>    CLR.b thenmode
00031214 <AmiBlitz3.ab3@21718>    MOVE.w oldqflag,instringon
0003121A <AmiBlitz3.ab3@21719>   MOVEA.l lastsourcepos,A5
0003121E <AmiBlitz3.ab3@21720>    BSR.w findmac
00031222 <AmiBlitz3.ab3@21721>    BEQ.w JUMP_dupmacerr
00031226 <AmiBlitz3.ab3@21722>    BSR.w addlabel
0003122A <AmiBlitz3.ab3@21723>   CLR.w $A(A2)
00031230 <AmiBlitz3.ab3@21724>   MOVEA.l ptr_macrobuffer_begin,A0
00031232 <AmiBlitz3.ab3@21725>   MOVEQ.l #$00,D2
00031238 <AmiBlitz3.ab3@21726>   CLR.w coolnest
0003123A <AmiBlitz3.ab3@21729>   MOVE.b (a5),d0
0003123E <AmiBlitz3.ab3@21730>      BEQ 'l3
00031242 <AmiBlitz3.ab3@21731>      CMP.b #" ",d0
00031246 <AmiBlitz3.ab3@21732>       BNE 'l2                                              ;space macro
00031248 <AmiBlitz3.ab3@21733>       ADDQ.l #1,a5
0003124C <AmiBlitz3.ab3@21734> BRA 'l1
00031250 <AmiBlitz3.ab3@21737>    CMP.b #";",d0
00031254 <AmiBlitz3.ab3@21738>       BNE 'l3
00031256 <AmiBlitz3.ab3@21741>    MOVE.b (a5),d0
0003125A <AmiBlitz3.ab3@21742>       BEQ 'l5
0003125E <AmiBlitz3.ab3@21743>       BSR.w JL_0_CC98                                      ;add comment
00031260 <AmiBlitz3.ab3@21744>       ADDQ.l #1,a5
00031264 <AmiBlitz3.ab3@21745> BRA 'l4
00031268 <AmiBlitz3.ab3@21748>    MOVE.b #":",d0
0003126C <AmiBlitz3.ab3@21749>       BSR.w JL_0_CC98
00031270 <AmiBlitz3.ab3@21750>       MOVE.b #"@",d0
00031274 <AmiBlitz3.ab3@21751>       BSR.w JL_0_CC98
0003127C <AmiBlitz3.ab3@21754>    MOVE.b #0,temp
00031284 <AmiBlitz3.ab3@21755>       MOVE.b #0,thenmode
0003128A <AmiBlitz3.ab3@21758>   JSR getcharb
0003128C <AmiBlitz3.ab3@21759>   TST.w D0
00031290 <AmiBlitz3.ab3@21760>    BNE.w JL_0_CBDE
00031294 <AmiBlitz3.ab3@21761>   MOVEM.l D2/A0/A2,-(A7)
0003129A <AmiBlitz3.ab3@21762>   CMP.w #"@@",-3(a5)
0003129E <AmiBlitz3.ab3@21763>   BNE 'l2a
000312A4 <AmiBlitz3.ab3@21764>   JSR nextline
000312A8 <AmiBlitz3.ab3@21765>   BEQ.w JUMP_macenderr
000312AC <AmiBlitz3.ab3@21766>   MOVEM.l (A7)+,D2/A0/A2
000312B0 <AmiBlitz3.ab3@21767> BRA.w JL_0_CBB6
000312B6 <AmiBlitz3.ab3@21770>    JSR nextline
000312BA <AmiBlitz3.ab3@21771>    BEQ.w JUMP_macenderr
000312BE <AmiBlitz3.ab3@21772>   MOVEM.l (A7)+,D2/A0/A2
000312C0 <AmiBlitz3.ab3@21773>   TST.w D2
000312C4 <AmiBlitz3.ab3@21774>    BEQ.w JL_0_CBB6
000312C6 <AmiBlitz3.ab3@21777>   MOVE.b (a5),d0
000312CA <AmiBlitz3.ab3@21778>       CMP.b #" ",d0
000312CE <AmiBlitz3.ab3@21779>       BNE 'l1
000312D0 <AmiBlitz3.ab3@21780>       ADDQ.w #1,a5
000312D4 <AmiBlitz3.ab3@21781> BRA 'l2
000312DA <AmiBlitz3.ab3@21784>   TST.b thenmode
000312DE <AmiBlitz3.ab3@21785>      BEQ 'l3
000312E0 <AmiBlitz3.ab3@21786>      MOVEQ #":",d0
000312E4 <AmiBlitz3.ab3@21787>      BSR.w JL_0_CC98
000312E8 <AmiBlitz3.ab3@21788>      MOVE.w #-$7FFE,D0                                     ;write end if
000312EC <AmiBlitz3.ab3@21789>      BSR macputw
000312F0 <AmiBlitz3.ab3@21790>      MOVE.w #$800b,d0
000312F4 <AmiBlitz3.ab3@21791>      BSR.w macputw
000312FA <AmiBlitz3.ab3@21792>      CLR.b thenmode
000312FC <AmiBlitz3.ab3@21795>    MOVEQ.l #$3A,D0
00031304 <AmiBlitz3.ab3@21796>      MOVE.b #1,temp
00031308 <AmiBlitz3.ab3@21798> BRA.w JL_0_CC2A
0003130C <AmiBlitz3.ab3@21802>   BPL.w JL_0_CC2A
00031310 <AmiBlitz3.ab3@21803>   CMP.w #-$7FF3,D0                                         ;macro ?
00031314 <AmiBlitz3.ab3@21804>    BNE.w JL_0_CBF4
0003131A <AmiBlitz3.ab3@21805>   ADDQ.w #1,coolnest
0003131E <AmiBlitz3.ab3@21806> BRA.w JL_0_CC22
00031324 <AmiBlitz3.ab3@21808> JUMP_macnesterr JMP macnesterr
00031328 <AmiBlitz3.ab3@21811>   CMP.w #$80d7,d0                                          ;object ?
0003132C <AmiBlitz3.ab3@21812>     BNE 'l1x
00031332 <AmiBlitz3.ab3@21813>     TST.b objectcount
00031336 <AmiBlitz3.ab3@21814>     BNE JUMP_macnesterr
0003133A <AmiBlitz3.ab3@21817>   CMP.w #$8021,d0
0003133E <AmiBlitz3.ab3@21818>     BNE 'nothen
00031346 <AmiBlitz3.ab3@21819>     MOVE.b #1,thenmode
0003134C <AmiBlitz3.ab3@21822>   TST.b thenmode
00031350 <AmiBlitz3.ab3@21823>         BEQ 'l1
00031354 <AmiBlitz3.ab3@21824>    CMP.w #$8002,d0                                         ;end if
00031358 <AmiBlitz3.ab3@21825>    BNE 'l1
0003135C <AmiBlitz3.ab3@21826>    MOVEM.l d0/a5,-(a7)
00031362 <AmiBlitz3.ab3@21827>    JSR get1bytemain
00031364 <AmiBlitz3.ab3@21828>    MOVE.w d0,d1
00031368 <AmiBlitz3.ab3@21829>    MOVEM.l (a7)+,a5/d0
0003136C <AmiBlitz3.ab3@21830>    CMP.w #$800b,d1
00031370 <AmiBlitz3.ab3@21831>    BNE 'l1
00031376 <AmiBlitz3.ab3@21832>    CLR.b thenmode
0003137A <AmiBlitz3.ab3@21835>    CMP.w #-$7FFE,D0                                        ;end ?
0003137E <AmiBlitz3.ab3@21836>    BNE.w JL_0_CC22
00031380 <AmiBlitz3.ab3@21837>    MOVE.l a5,-(a7)
00031386 <AmiBlitz3.ab3@21838>    JSR get1bytemain
00031388 <AmiBlitz3.ab3@21839>    MOVE.l (a7)+,a5
0003138A <AmiBlitz3.ab3@21840>    TST.w d0
0003138E <AmiBlitz3.ab3@21841>    BEQ 'doend
00031392 <AmiBlitz3.ab3@21842>    CMP.w #":",d0
00031396 <AmiBlitz3.ab3@21843>    BEQ 'doend
0003139A <AmiBlitz3.ab3@21844>    CMP.w #";",d0
0003139E <AmiBlitz3.ab3@21845>    BEQ 'doend
000313A0 <AmiBlitz3.ab3@21846>    MOVE.l a5,-(a7)
000313A6 <AmiBlitz3.ab3@21847>    JSR get1bytemain
000313AA <AmiBlitz3.ab3@21848>    MOVE.l -1(a5),d0
000313AC <AmiBlitz3.ab3@21849>    MOVE.l (a7)+,a5
000313B2 <AmiBlitz3.ab3@21850>    CMP.l #"noa7",d0
000313B6 <AmiBlitz3.ab3@21851>    BEQ 'doend
000313BA <AmiBlitz3.ab3@21852> BRA 'morechar
000313BE <AmiBlitz3.ab3@21855>   MOVE.w #$8002,D0
000313C2 <AmiBlitz3.ab3@21856>    BSR.w macputw
000313C6 <AmiBlitz3.ab3@21857> BRA JL_0_CBB6
000313CC <AmiBlitz3.ab3@21860>   JSR get1bytemain
000313D0 <AmiBlitz3.ab3@21861>    CMP.w #-$7FF3,D0                                        ;end macro
000313D4 <AmiBlitz3.ab3@21862>    BEQ.w 'lo1
000313D8 <AmiBlitz3.ab3@21863>   CMP.w #$80d7,d0                                          ;end object
000313DC <AmiBlitz3.ab3@21864>   BNE JL_0_CC12
000313E2 <AmiBlitz3.ab3@21865>   SUBQ.b #1,objectcount
000313E8 <AmiBlitz3.ab3@21866>   TST.b developobject
000313EC <AmiBlitz3.ab3@21867>   BEQ 'lo1
000313F0 <AmiBlitz3.ab3@21868>   BSR skiprest
000313F2 <AmiBlitz3.ab3@21869> RTS
000313F8 <AmiBlitz3.ab3@21872>   SUBQ.w #1,coolnest
000313FC <AmiBlitz3.ab3@21873>    BMI.w JL_0_CC32
000313FE <AmiBlitz3.ab3@21876>   MOVE.w D0,-(A7)
00031402 <AmiBlitz3.ab3@21877>   MOVE.w #$8002,D0
00031406 <AmiBlitz3.ab3@21878>    BSR.w macputw
00031408 <AmiBlitz3.ab3@21879>   MOVE.w (A7)+,D0
0003140C <AmiBlitz3.ab3@21880> BRA.w JL_0_CC22
00031410 <AmiBlitz3.ab3@21883>   BSR.w macputw
00031414 <AmiBlitz3.ab3@21884> BRA.w JL_0_CBB6
0003141A <AmiBlitz3.ab3@21886> JUMP_macenderr JMP macenderr
00031420 <AmiBlitz3.ab3@21889>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031424 <AmiBlitz3.ab3@21890>     BNE 'no
00031428 <AmiBlitz3.ab3@21891>      MOVEM.l D2/A0/A2,-(A7)
0003142E <AmiBlitz3.ab3@21892>    JSR nextline
00031432 <AmiBlitz3.ab3@21893>    BEQ.w JUMP_macenderr
00031436 <AmiBlitz3.ab3@21894>   MOVEM.l (A7)+,D2/A0/A2
00031438 <AmiBlitz3.ab3@21895>     TST.w D2
0003143C <AmiBlitz3.ab3@21896>    BEQ.w JL_0_CBB6
00031440 <AmiBlitz3.ab3@21897> BRA JL_0_CBB6
00031444 <AmiBlitz3.ab3@21901>   BSR.w JL_0_CC98
00031448 <AmiBlitz3.ab3@21902> BRA.w JL_0_CBB6
0003144A <AmiBlitz3.ab3@21905>   ADDQ.w #4,A7
0003144C <AmiBlitz3.ab3@21906>   MOVE.l A0,D0
00031452 <AmiBlitz3.ab3@21907>   SUB.l ptr_macrobuffer_begin,D0
00031456 <AmiBlitz3.ab3@21910>    BEQ.w JL_0_CC5E
0003145A <AmiBlitz3.ab3@21911>   CMPI.b #":",-(A0)
0003145E <AmiBlitz3.ab3@21912>    BNE.w JL_0_CC5E
00031462 <AmiBlitz3.ab3@21913>   CMP.w #$1,D0
00031466 <AmiBlitz3.ab3@21914>    BEQ.w JL_0_CC58
0003146A <AmiBlitz3.ab3@21915>   TST.b -$1(A0)
0003146E <AmiBlitz3.ab3@21916>    BMI.w JL_0_CC5E
00031470 <AmiBlitz3.ab3@21919>   SUBQ.w #1,D0
00031474 <AmiBlitz3.ab3@21920> BRA.w JL_0_CC3C
00031478 <AmiBlitz3.ab3@21923>   MOVE.w D0,$8(A2)
0003147C <AmiBlitz3.ab3@21924>    BEQ.w JL_0_CC8E
0003147E <AmiBlitz3.ab3@21925>   MOVEQ.l #$01,D1
00031484 <AmiBlitz3.ab3@21926>   MOVEA.l _execbase,A6
0003148A <AmiBlitz3.ab3@21927>   MOVE.l mempool,a0
0003148E <AmiBlitz3.ab3@21928>   JSR _AllocPooled(a6)
00031490 <AmiBlitz3.ab3@21930>   MOVEA.l D0,A0
00031494 <AmiBlitz3.ab3@21931>   MOVE.l A0,$4(A2)
00031498 <AmiBlitz3.ab3@21932>   MOVE.w $8(A2),D1
0003149C <AmiBlitz3.ab3@21933>    BEQ.w JL_0_CC8E
0003149E <AmiBlitz3.ab3@21934>   SUBQ.w #1,D1
000314A4 <AmiBlitz3.ab3@21935>   MOVEA.l ptr_macrobuffer_begin,A1
000314A6 <AmiBlitz3.ab3@21938>     MOVE.b (A1)+,(A0)+
000314AA <AmiBlitz3.ab3@21939>   DBF D1,JL_0_CC88
000314B0 <AmiBlitz3.ab3@21942> JMP get1bytemain
000314B2 <AmiBlitz3.ab3@21946>   MOVE.w D0,D1
000314B4 <AmiBlitz3.ab3@21947>   LSR.w #8,D1
000314B6 <AmiBlitz3.ab3@21948>   MOVE.b D1,(A0)+
000314B8 <AmiBlitz3.ab3@21951>   MOVEQ.l #-$01,D2
000314BA <AmiBlitz3.ab3@21952>   MOVE.b D0,(A0)+
000314C0 <AmiBlitz3.ab3@21953>   CMPA.l ptr_macrobuffer_end,A0
000314C4 <AmiBlitz3.ab3@21954>    BCC.w macbigerr2
000314C6 <AmiBlitz3.ab3@21955> RTS
000314CC <AmiBlitz3.ab3@21956> macbigerr2 JMP macbigerr
000314CE <AmiBlitz3.ab3@21959>   MOVE.l d0,-(a7)
000314D0 <AmiBlitz3.ab3@21960>   MOVEQ #0,d0
000314D6 <AmiBlitz3.ab3@21961>   CLR.b skiptoggle
000314D8 <AmiBlitz3.ab3@21964>     MOVE.b (a5),d0
000314DC <AmiBlitz3.ab3@21965>     BEQ 'l3
000314E0 <AmiBlitz3.ab3@21966>     CMP.b #";",d0
000314E4 <AmiBlitz3.ab3@21967>     BNE 'l2
000314EC <AmiBlitz3.ab3@21968>     MOVE.b #1,skiptoggle
000314F2 <AmiBlitz3.ab3@21971>     TST.b skiptoggle
000314F6 <AmiBlitz3.ab3@21972>     BNE 'l4
000314FA <AmiBlitz3.ab3@21973>     CMP.b #":",d0
000314FE <AmiBlitz3.ab3@21974>     BEQ 'l3
00031500 <AmiBlitz3.ab3@21977>     ADDQ #1,a5
00031504 <AmiBlitz3.ab3@21978> BRA 'loop
0003150A <AmiBlitz3.ab3@21981>   MOVE.w d0,lastchar
0003150C <AmiBlitz3.ab3@21982>   MOVE.l (a7)+,d0
0003150E <AmiBlitz3.ab3@21983> RTS
00031512 <AmiBlitz3.ab3@21987>   BSR.w ifchar
00031516 <AmiBlitz3.ab3@21988>    BNE.w JUMP_syntaxerr
00031518 <AmiBlitz3.ab3@21989>   MOVE.w D0,D1
0003151E <AmiBlitz3.ab3@21990>   JSR get1bytemain
00031522 <AmiBlitz3.ab3@21991>   BSR.w ifchar
00031526 <AmiBlitz3.ab3@21992>    BNE.w JL_0_CCDA
00031528 <AmiBlitz3.ab3@21993>   ADDQ.w #1,D0
0003152A <AmiBlitz3.ab3@21994>   MOVE.w D0,D2
0003152C <AmiBlitz3.ab3@21995>   ADD.w D0,D0
0003152E <AmiBlitz3.ab3@21996>   ADD.w D2,D0
00031530 <AmiBlitz3.ab3@21997>   ADD.w D0,D1
00031532 <AmiBlitz3.ab3@21998>   MOVE.w D1,D0
00031536 <AmiBlitz3.ab3@21999>   ANDI.w #$3,D0
0003153A <AmiBlitz3.ab3@22000>   CMP.w #$3,D0
0003153E <AmiBlitz3.ab3@22001>    BEQ.w JUMP_syntaxerr
00031544 <AmiBlitz3.ab3@22003>   JSR get1bytemain
00031546 <AmiBlitz3.ab3@22006> RTS
00031548 <AmiBlitz3.ab3@22012> thetst1:  TST.b D0
0003154A <AmiBlitz3.ab3@22013> thetst2:  TST.w D0
0003154C <AmiBlitz3.ab3@22014> thetst3:  TST.l D0
0003154E <AmiBlitz3.ab3@22015> thetst4:  TST.l (A7)+                                      ;Any Length?
00031552 <AmiBlitz3.ab3@22016> thetst5:  JSR _Reschedule(A6)
00031556 <AmiBlitz3.ab3@22018> posbr:    BEQ.w posbr
0003155A <AmiBlitz3.ab3@22019> negbr:    BNE.w negbr
0003155C <AmiBlitz3.ab3@22023>   MOVEQ.l #-$01,D2
00031560 <AmiBlitz3.ab3@22024> BRA.w JL_0_D04C
00031566 <AmiBlitz3.ab3@22028>   CLR.l fp0addr
00031568 <AmiBlitz3.ab3@22029>   MOVEQ.l #$01,D1                                          ;while flag
0003156A <AmiBlitz3.ab3@22030>   MOVEQ.l #$00,D2                                          ;negate flag
0003156E <AmiBlitz3.ab3@22031> BRA.w JL_0_D04E
00031574 <AmiBlitz3.ab3@22035>   LEA firstrep,A2
00031576 <AmiBlitz3.ab3@22036>   MOVEQ.l #$08,D2
0003157A <AmiBlitz3.ab3@22037> BRA.w freeslist
0003157E <AmiBlitz3.ab3@22041>   LEA firstsel(PC),A2
00031580 <AmiBlitz3.ab3@22042>   MOVEQ.l #$0E,D2
00031582 <AmiBlitz3.ab3@22047>   MOVEQ.l #$00,D3
00031584 <AmiBlitz3.ab3@22055>   MOVE.l (A2),D0
00031586 <AmiBlitz3.ab3@22056>   CLR.l (A2)
00031588 <AmiBlitz3.ab3@22057>   MOVEA.l D0,A2
0003158E <AmiBlitz3.ab3@22058>   MOVEA.l _execbase,A6
00031592 <AmiBlitz3.ab3@22061>     CMPA.w #$0,A2
00031596 <AmiBlitz3.ab3@22062>      BEQ.w freelist__done
00031598 <AmiBlitz3.ab3@22063>     TST.w D3
0003159C <AmiBlitz3.ab3@22064>      BEQ.w freelist__skip
000315A0 <AmiBlitz3.ab3@22065>     MOVEM.l D2-D3/A2,-(A7)
000315A2 <AmiBlitz3.ab3@22066>     ADDA.w D3,A2
000315A4 <AmiBlitz3.ab3@22067>     MOVE.l D4,D2
000315A8 <AmiBlitz3.ab3@22068>     BSR.w freeslist
000315AC <AmiBlitz3.ab3@22069>     MOVEM.l (A7)+,D2-D3/A2
000315AE <AmiBlitz3.ab3@22072>     MOVEA.l A2,A1
000315B0 <AmiBlitz3.ab3@22073>     MOVE.l D2,D0
000315B2 <AmiBlitz3.ab3@22074>     MOVEA.l (A2),A2
000315B8 <AmiBlitz3.ab3@22075>     MOVE.l mempool,a0
000315BC <AmiBlitz3.ab3@22076>     JSR _FreePooled(A6)
000315C0 <AmiBlitz3.ab3@22077> BRA.w freelist__loop
000315C2 <AmiBlitz3.ab3@22080> RTS
000315C8 <AmiBlitz3.ab3@22083> JMP eselerr
000315CC <AmiBlitz3.ab3@22086> firstsel:  Ds.l 1
000315D0 <AmiBlitz3.ab3@22089> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
000315D2 <AmiBlitz3.ab3@22092> selpushw:   MOVE.w D0,-(A7)
000315D4 <AmiBlitz3.ab3@22094> selpushl:   MOVE.l D0,-(A7)
000315D8 <AmiBlitz3.ab3@22096> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
000315DC <AmiBlitz3.ab3@22099> selcomb:    ANDI.w #$FF,D0
000315DE <AmiBlitz3.ab3@22100> selcomw:    CMP.w (A7),D0
000315E0 <AmiBlitz3.ab3@22102> selcoml:    CMP.l (A7),D0
000315E4 <AmiBlitz3.ab3@22104> selbne:     BNE.w selbne
000315E6 <AmiBlitz3.ab3@22106> endsel:     ADDQ.w #8,A7
000315EA <AmiBlitz3.ab3@22112>   MOVE.l firstsel(PC),D0                                  
000315EE <AmiBlitz3.ab3@22113>    BEQ.w JUMP_eselerr
000315F0 <AmiBlitz3.ab3@22114>   MOVEA.l D0,A2
000315F4 <AmiBlitz3.ab3@22115>    BSR.w JL_0_CDFC
000315FA <AmiBlitz3.ab3@22118>   MOVEA.l _execbase,A6
000315FE <AmiBlitz3.ab3@22121>   MOVE.l $4(A2),D0
00031602 <AmiBlitz3.ab3@22122>    BEQ.w doendsel__done
00031604 <AmiBlitz3.ab3@22123>   MOVEA.l D0,A3
00031608 <AmiBlitz3.ab3@22124>   MOVEA.l $4(A3),A0
0003160E <AmiBlitz3.ab3@22125>   MOVE.l destpointer,D1
00031610 <AmiBlitz3.ab3@22126>   SUB.l A0,D1
00031616 <AmiBlitz3.ab3@22128>     TST.b fast
0003161A <AmiBlitz3.ab3@22129>     BEQ doendsel__loop_l1
00031620 <AmiBlitz3.ab3@22130>     MOVE.w dontwrite,D0
00031624 <AmiBlitz3.ab3@22131>     BNE.w doendsel__skip
00031626 <AmiBlitz3.ab3@22132>     ADDQ.l #2,d1
0003162A <AmiBlitz3.ab3@22133>     MOVE.l d1,-2(a0)
0003162E <AmiBlitz3.ab3@22134>   BRA doendsel__skip
00031634 <AmiBlitz3.ab3@22138>   TST.w dontwrite
00031638 <AmiBlitz3.ab3@22139>      BNE.w doendsel__skip
0003163E <AmiBlitz3.ab3@22140>   CMP.l #MaxWordSgnd,D1
00031642 <AmiBlitz3.ab3@22141>    BHI.w JUMP_cbraerr
00031644 <AmiBlitz3.ab3@22142>   MOVE.w D1,(A0)
00031648 <AmiBlitz3.ab3@22145>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
0003164A <AmiBlitz3.ab3@22146>   MOVEA.l A3,A1
0003164C <AmiBlitz3.ab3@22147>   MOVEQ.l #$08,D0
00031652 <AmiBlitz3.ab3@22148>   MOVE.l mempool,a0
00031656 <AmiBlitz3.ab3@22149>    JSR _FreePooled(A6)
0003165A <AmiBlitz3.ab3@22150> BRA.w doendsel__loop
00031660 <AmiBlitz3.ab3@22153>   JSR popselect                                            ;fix stack on select
00031664 <AmiBlitz3.ab3@22154>   MOVEA.l firstsel(PC),A1
0003166A <AmiBlitz3.ab3@22155>   MOVE.l (A1),firstsel
0003166C <AmiBlitz3.ab3@22156>   MOVEQ.l #$0E,D0
00031672 <AmiBlitz3.ab3@22157>   MOVEA.l _execbase,A6
00031678 <AmiBlitz3.ab3@22158>   MOVE.l mempool,a0
0003167C <AmiBlitz3.ab3@22159>   JSR _FreePooled(A6)
00031682 <AmiBlitz3.ab3@22160> JMP get1bytemain
00031684 <AmiBlitz3.ab3@22164>   MOVEA.l (A7)+,A1
00031686 <AmiBlitz3.ab3@22165>   SUBQ.w #8,A1
00031688 <AmiBlitz3.ab3@22166>   MOVEQ.l #$09,D0
0003168A <AmiBlitz3.ab3@22167>   ADD.l (A1),D0
0003168C <AmiBlitz3.ab3@22170>   ADDQ.w #2,A7                                             ;for runtime errs!
00031690 <AmiBlitz3.ab3@22175>   MOVE.l firstsel(PC),D0
00031694 <AmiBlitz3.ab3@22176>    BEQ.w JUMP_defaerr
00031696 <AmiBlitz3.ab3@22177>   MOVEA.l D0,A2
0003169A <AmiBlitz3.ab3@22178>   BSR.w JL_0_CE26
0003169E <AmiBlitz3.ab3@22179>   BSR.w JL_0_CDFC
000316A2 <AmiBlitz3.ab3@22180>   CLR.l $8(A2)
000316A6 <AmiBlitz3.ab3@22181>   MOVE.w $C(A2),D2
000316AA <AmiBlitz3.ab3@22182> BRA.w JL_0_CE5E
000316B0 <AmiBlitz3.ab3@22185> JMP defaerr
000316B4 <AmiBlitz3.ab3@22188>   MOVE.l $8(A2),D0
000316B8 <AmiBlitz3.ab3@22189>    BEQ.w JL_0_CE24
000316BA <AmiBlitz3.ab3@22190>   MOVEA.l D0,A0
000316C0 <AmiBlitz3.ab3@22191>   MOVE.l destpointer,D1
000316C2 <AmiBlitz3.ab3@22192>   SUB.l A0,D1
000316C8 <AmiBlitz3.ab3@22194>     TST.b fast
000316CC <AmiBlitz3.ab3@22195>     BEQ 'l1
000316D2 <AmiBlitz3.ab3@22196>     TST.w dontwrite
000316D6 <AmiBlitz3.ab3@22197>     BNE.w JL_0_CE24
000316D8 <AmiBlitz3.ab3@22198>     ADDQ.l #2,d1
000316DC <AmiBlitz3.ab3@22199>     MOVE.l D1,-2(A0)
000316E0 <AmiBlitz3.ab3@22200>   BRA JL_0_CE24
000316E6 <AmiBlitz3.ab3@22204>   TST.w dontwrite
000316EA <AmiBlitz3.ab3@22205>      BNE.w JL_0_CE24
000316F0 <AmiBlitz3.ab3@22206>    CMP.l #MaxWordSgnd,D1
000316F4 <AmiBlitz3.ab3@22207>    BHI.w JUMP_cbraerr
000316F6 <AmiBlitz3.ab3@22208>   MOVE.w D1,(A0)
000316F8 <AmiBlitz3.ab3@22211> RTS
000316FE <AmiBlitz3.ab3@22214> JMP cbraerr
00031702 <AmiBlitz3.ab3@22218>   MOVE.l $8(A2),D0
00031706 <AmiBlitz3.ab3@22219>    BEQ.w JL_0_CE5C
00031708 <AmiBlitz3.ab3@22220>   MOVEA.l D0,A3
0003170C <AmiBlitz3.ab3@22221>   MOVE.w #$6000,D1
00031712 <AmiBlitz3.ab3@22223>    TST.b fast
00031716 <AmiBlitz3.ab3@22224>    BEQ 'l1
0003171C <AmiBlitz3.ab3@22225>    OR.l #$ff,d1
00031720 <AmiBlitz3.ab3@22226>    BSR writeword
00031724 <AmiBlitz3.ab3@22230>   BSR.w writeword
00031726 <AmiBlitz3.ab3@22231>   MOVEQ.l #$08,D0
00031728 <AmiBlitz3.ab3@22232>   MOVEQ.l #$01,D1
0003172E <AmiBlitz3.ab3@22233>   MOVEA.l _execbase,A6
00031734 <AmiBlitz3.ab3@22234>   MOVE.l mempool,a0
00031738 <AmiBlitz3.ab3@22235>   JSR _AllocPooled(a6)
0003173A <AmiBlitz3.ab3@22237>   MOVEA.l D0,A0
0003173E <AmiBlitz3.ab3@22238>   MOVE.l $4(A2),(A0)
00031742 <AmiBlitz3.ab3@22239>   MOVE.l A0,$4(A2)
0003174A <AmiBlitz3.ab3@22240>   MOVE.l destpointer,$4(A0)
0003174E <AmiBlitz3.ab3@22241> BRA.w writeword
00031750 <AmiBlitz3.ab3@22244> RTS
00031756 <AmiBlitz3.ab3@22248>   TST.b debugmode
0003175A <AmiBlitz3.ab3@22249>    BEQ.w JL_0_CE7A
0003175E <AmiBlitz3.ab3@22250>   MOVE.w #$C313,D1
00031762 <AmiBlitz3.ab3@22251>   CMP.w #$3,D2
00031766 <AmiBlitz3.ab3@22252>    BCS.w JL_0_CE76
00031768 <AmiBlitz3.ab3@22253>   ADDQ.w #1,D1
0003176C <AmiBlitz3.ab3@22256> BRA.w Atokejsr
0003176E <AmiBlitz3.ab3@22259> RTS
00031774 <AmiBlitz3.ab3@22263> JMP caseerr
00031778 <AmiBlitz3.ab3@22266>   MOVE.l firstsel(PC),D0
0003177C <AmiBlitz3.ab3@22267>    BEQ.w JUMP_caseerr
0003177E <AmiBlitz3.ab3@22268>   MOVEA.l D0,A2
00031782 <AmiBlitz3.ab3@22269>    BSR.w JL_0_CE26
00031786 <AmiBlitz3.ab3@22270>    BSR.w JL_0_CDFC
0003178A <AmiBlitz3.ab3@22271>   MOVE.w $C(A2),D2
0003178C <AmiBlitz3.ab3@22272>   MOVE.w D2,-(A7)
00031790 <AmiBlitz3.ab3@22273>    BSR.w JL_0_CE5E
00031792 <AmiBlitz3.ab3@22274>   MOVE.w (A7),D2
00031796 <AmiBlitz3.ab3@22275>    BSR.w bakeval
00031798 <AmiBlitz3.ab3@22276>   MOVE.w (A7)+,D2
0003179C <AmiBlitz3.ab3@22277>   LEA selcomb(PC),A0
000317A0 <AmiBlitz3.ab3@22278>   LEA selcombf(PC),A1
000317A4 <AmiBlitz3.ab3@22279>   CMP.w #$1,D2
000317A8 <AmiBlitz3.ab3@22280>    BEQ.w JL_0_CED8
000317AC <AmiBlitz3.ab3@22281>   LEA selcomw(PC),A0
000317B0 <AmiBlitz3.ab3@22282>   CMP.w #$2,D2
000317B4 <AmiBlitz3.ab3@22283>    BEQ.w JL_0_CED8
000317B8 <AmiBlitz3.ab3@22284>   LEA selcoml(PC),A0
000317BC <AmiBlitz3.ab3@22285>   LEA selcomlf(PC),A1
000317C0 <AmiBlitz3.ab3@22286>   CMP.w #$7,D2
000317C4 <AmiBlitz3.ab3@22287>    BCS.w JL_0_CED8
000317C8 <AmiBlitz3.ab3@22289>   MOVE.w #$CE01,D1
000317CC <AmiBlitz3.ab3@22290>    BSR.w Atokejsr
000317D0 <AmiBlitz3.ab3@22291> BRA.w JL_0_CEDC
000317D4 <AmiBlitz3.ab3@22294>   BSR.w pokecode
000317D8 <AmiBlitz3.ab3@22297>   MOVE.w selbne(PC),D1
000317DE <AmiBlitz3.ab3@22299>     TST.b fast
000317E2 <AmiBlitz3.ab3@22300>     BEQ 'l1
000317E8 <AmiBlitz3.ab3@22301>     ORI.l #$ff,d1
000317EC <AmiBlitz3.ab3@22302>     BSR writeword
000317F0 <AmiBlitz3.ab3@22305>   BSR.w writeword
000317F4 <AmiBlitz3.ab3@22306>   MOVEA.l firstsel(PC),A0
000317FC <AmiBlitz3.ab3@22307>   MOVE.l destpointer,$8(A0)
00031800 <AmiBlitz3.ab3@22308> BRA.w writeword
00031804 <AmiBlitz3.ab3@22312> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00031806 <AmiBlitz3.ab3@22313> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
0003180A <AmiBlitz3.ab3@22316> sellineat:  Ds.l 1
00031810 <AmiBlitz3.ab3@22322>   TST.b debugmode
00031814 <AmiBlitz3.ab3@22323>    BEQ.w JL_0_CF0E
00031818 <AmiBlitz3.ab3@22324>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
0003181C <AmiBlitz3.ab3@22325>    BSR.w writelong
00031826 <AmiBlitz3.ab3@22328>   MOVE.l linenumat,sellineat
00031830 <AmiBlitz3.ab3@22330>    MOVE.l destpointer,pushpc
0003183A <AmiBlitz3.ab3@22331>   MOVE.l hunkoffsetbase,pushoff
0003183C <AmiBlitz3.ab3@22332>   MOVEQ.l #$00,D2
00031840 <AmiBlitz3.ab3@22333>    BSR.w bakevalu                                          ;Evaluate
00031844 <AmiBlitz3.ab3@22334>    BSR.w JL_0_B5D2
00031848 <AmiBlitz3.ab3@22335>   CMP.w #$7,D2
0003184C <AmiBlitz3.ab3@22336>    BNE.w JL_0_CF36
00031850 <AmiBlitz3.ab3@22337>   MOVE.w clrst(PC),D1
00031854 <AmiBlitz3.ab3@22338>    BSR.w writeword
00031858 <AmiBlitz3.ab3@22341>    BSR.w JL_0_B63C
0003185C <AmiBlitz3.ab3@22342>   LEA selpushb(PC),A0
00031860 <AmiBlitz3.ab3@22343>   LEA selpushbf(PC),A1
00031864 <AmiBlitz3.ab3@22344>   CMP.w #$1,D2
00031868 <AmiBlitz3.ab3@22345>    BEQ.w JL_0_CF88
0003186C <AmiBlitz3.ab3@22346>   LEA selpushw(PC),A0
00031870 <AmiBlitz3.ab3@22347>   CMP.w #$2,D2
00031874 <AmiBlitz3.ab3@22348>    BEQ.w JL_0_CF88
00031878 <AmiBlitz3.ab3@22349>   LEA selpushl(PC),A0
0003187C <AmiBlitz3.ab3@22350>   LEA selpushlf(PC),A1
00031880 <AmiBlitz3.ab3@22351>   CMP.w #$7,D2
00031884 <AmiBlitz3.ab3@22352>    BCS.w JL_0_CF88
0003188A <AmiBlitz3.ab3@22354>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003188E <AmiBlitz3.ab3@22355>    BSR.w writeword
00031892 <AmiBlitz3.ab3@22356>   LEA selpushs(PC),A0
00031896 <AmiBlitz3.ab3@22357>   LEA selpushsf(PC),A1
0003189A <AmiBlitz3.ab3@22358>    BSR.w pokecode
0003189E <AmiBlitz3.ab3@22359>   MOVE.w #$C701,D1
000318A2 <AmiBlitz3.ab3@22360>    BSR.w Atokejsr
000318A6 <AmiBlitz3.ab3@22361> BRA.w JL_0_CF8C
000318AA <AmiBlitz3.ab3@22364>   BSR.w pokecode
000318AC <AmiBlitz3.ab3@22367>   MOVEQ.l #$0E,D0
000318AE <AmiBlitz3.ab3@22368>   MOVEQ.l #$01,D1
000318B4 <AmiBlitz3.ab3@22369>   MOVEA.l _execbase,A6
000318BA <AmiBlitz3.ab3@22371>   MOVE.l mempool,a0
000318BE <AmiBlitz3.ab3@22372>   JSR _AllocPooled(a6)
000318C0 <AmiBlitz3.ab3@22373>   MOVEA.l D0,A0
000318C4 <AmiBlitz3.ab3@22374>   MOVE.l firstsel(PC),(A0)
000318CA <AmiBlitz3.ab3@22375>   MOVE.l A0,firstsel
000318CE <AmiBlitz3.ab3@22376>   CLR.l $4(A0)
000318D2 <AmiBlitz3.ab3@22377>   CLR.l $8(A0)
000318D6 <AmiBlitz3.ab3@22378>   MOVE.w D2,$C(A0)
000318D8 <AmiBlitz3.ab3@22379> RTS
000318DE <AmiBlitz3.ab3@22383>   MOVE.l firstrep,D0
000318E2 <AmiBlitz3.ab3@22384>    BEQ.w JUMP_unterr1
000318E6 <AmiBlitz3.ab3@22385>   MOVE.w #$6000,D1
000318EA <AmiBlitz3.ab3@22386>   BSR.w writeword
000318EC <AmiBlitz3.ab3@22387>   MOVEA.l D0,A0
000318F0 <AmiBlitz3.ab3@22388>   MOVE.l $4(A0),D1
000318F6 <AmiBlitz3.ab3@22389>   SUB.l destpointer,D1
000318F8 <AmiBlitz3.ab3@22390>   TST.w D1
000318FC <AmiBlitz3.ab3@22391>    BPL.w JUMP_unterr2
00031900 <AmiBlitz3.ab3@22392>   BSR.w writeword
00031906 <AmiBlitz3.ab3@22393>   MOVEA.l _execbase,A6
0003190A <AmiBlitz3.ab3@22394> BRA.w JL_0_D036
00031910 <AmiBlitz3.ab3@22397> JMP unterr2
00031916 <AmiBlitz3.ab3@22400> JMP unterr1
0003191C <AmiBlitz3.ab3@22404>   MOVE.l firstrep,D0
00031920 <AmiBlitz3.ab3@22405>    BEQ.w JUMP_unterr1
00031924 <AmiBlitz3.ab3@22406>   BSR.w do_if
0003192A <AmiBlitz3.ab3@22407>   JSR reget
0003192E <AmiBlitz3.ab3@22408>    BNE.w JUMP_syntaxerr
00031934 <AmiBlitz3.ab3@22409>   MOVE.w dontwrite,D1
00031938 <AmiBlitz3.ab3@22410>    BNE.w JL_0_D020
0003193E <AmiBlitz3.ab3@22411>   MOVEA.l firstrep,A0
00031944 <AmiBlitz3.ab3@22412>   MOVEA.l destpointer,A1
0003194A <AmiBlitz3.ab3@22414>     TST.b fast
0003194E <AmiBlitz3.ab3@22415>     BEQ 'l1
00031950 <AmiBlitz3.ab3@22416>     SUBQ.w #4,a1
00031954 <AmiBlitz3.ab3@22417>     MOVE.l $4(A0),D2
00031956 <AmiBlitz3.ab3@22418>     SUB.l A1,D2
00031958 <AmiBlitz3.ab3@22419>     MOVE.l d2,(a1)
0003195C <AmiBlitz3.ab3@22420>   BRA JL_0_D020
0003195E <AmiBlitz3.ab3@22424>   SUBQ.w #2,A1
00031962 <AmiBlitz3.ab3@22425>   MOVE.l $4(A0),D2
00031964 <AmiBlitz3.ab3@22426>   SUB.l A1,D2
00031966 <AmiBlitz3.ab3@22427>   TST.w D2
0003196A <AmiBlitz3.ab3@22428>    BPL.w JUMP_unterr2
0003196C <AmiBlitz3.ab3@22429>   MOVE.w D2,(A1)
00031972 <AmiBlitz3.ab3@22432>   MOVEA.l firstiff,A1
00031978 <AmiBlitz3.ab3@22433>   MOVE.l (A1),firstiff
0003197A <AmiBlitz3.ab3@22434>   MOVEQ.l #$0E,D0
00031980 <AmiBlitz3.ab3@22435>   MOVEA.l _execbase,A6
00031986 <AmiBlitz3.ab3@22436>   MOVE.l mempool,a0
0003198A <AmiBlitz3.ab3@22437>   JSR _FreePooled(A6)
00031990 <AmiBlitz3.ab3@22440>   MOVEA.l firstrep,A1
00031996 <AmiBlitz3.ab3@22441>   MOVE.l (A1),firstrep
00031998 <AmiBlitz3.ab3@22442>   MOVEQ.l #$08,D0
0003199E <AmiBlitz3.ab3@22443>   MOVE.l mempool,a0
000319A2 <AmiBlitz3.ab3@22444> JMP _FreePooled(A6)
000319A6 <AmiBlitz3.ab3@22447> iflineat:   Ds.l 1
000319A8 <AmiBlitz3.ab3@22451>   MOVEQ.l #$00,D2
000319AE <AmiBlitz3.ab3@22452>   TST.b fast
000319B2 <AmiBlitz3.ab3@22453>   BEQ 'l1
000319BA <AmiBlitz3.ab3@22454>   MOVE.b #1,nostringopt
000319C2 <AmiBlitz3.ab3@22455>   MOVE.b #1,iniffcommand
000319C4 <AmiBlitz3.ab3@22459>   MOVEQ.l #$00,D1
000319C6 <AmiBlitz3.ab3@22462>   MOVE.w D1,-(A7)
000319CC <AmiBlitz3.ab3@22463>   MOVE.l destpointer,-(A7)
000319CE <AmiBlitz3.ab3@22464>   MOVE.w D2,-(A7)
000319D8 <AmiBlitz3.ab3@22465>   MOVE.l linenumat,iflineat
000319DA <AmiBlitz3.ab3@22466>   MOVEQ.l #$00,D2
000319E4 <AmiBlitz3.ab3@22467>   MOVE.b optistring,optistring2
000319EC <AmiBlitz3.ab3@22468>   MOVE.b #1,optistring
000319F0 <AmiBlitz3.ab3@22469>   BSR.w bakevalu
000319FA <AmiBlitz3.ab3@22470>   MOVE.b optistring2,optistring
000319FE <AmiBlitz3.ab3@22471>   CMP.w #$5,D2
00031A02 <AmiBlitz3.ab3@22472>    BEQ.w JL_0_D09C
00031A06 <AmiBlitz3.ab3@22473>   MOVE.w thetst1(PC),D1
00031A0A <AmiBlitz3.ab3@22474>   CMP.w #$1,D2
00031A0E <AmiBlitz3.ab3@22475>    BEQ.w writebranchcode
00031A12 <AmiBlitz3.ab3@22476>   MOVE.w thetst2(PC),D1
00031A16 <AmiBlitz3.ab3@22477>   CMP.w #$2,D2
00031A1A <AmiBlitz3.ab3@22478>    BEQ.w writebranchcode
00031A1E <AmiBlitz3.ab3@22479>   MOVE.w thetst4(PC),D1
00031A22 <AmiBlitz3.ab3@22480>   CMP.w #$7,D2
00031A26 <AmiBlitz3.ab3@22481>    BEQ.w writebranchcode
00031A2A <AmiBlitz3.ab3@22482>   MOVE.w thetst3(PC),D1
00031A2E <AmiBlitz3.ab3@22483> BRA.w writebranchcode
00031A34 <AmiBlitz3.ab3@22486>   TST.b fpu
00031A38 <AmiBlitz3.ab3@22487>   BEQ 'dofpu
00031A3E <AmiBlitz3.ab3@22488>   MOVE.l #$f200003a,d1
00031A42 <AmiBlitz3.ab3@22489>   BSR writelong
00031A46 <AmiBlitz3.ab3@22490>   MOVE.w #$f2c1,d1
00031A4A <AmiBlitz3.ab3@22491>   BSR writeword
00031A4E <AmiBlitz3.ab3@22492>   BSR writelong
00031A50 <AmiBlitz3.ab3@22493>   ADDQ.l #2,a7
00031A54 <AmiBlitz3.ab3@22494> BRA.w br2
00031A58 <AmiBlitz3.ab3@22497>    MOVE.w #$C900,D1
00031A5C <AmiBlitz3.ab3@22498>    BSR.w Atokejsr
00031A60 <AmiBlitz3.ab3@22499>   MOVE.l thetst5(PC),D1
00031A64 <AmiBlitz3.ab3@22500>    BSR.w writelong
00031A68 <AmiBlitz3.ab3@22501> BRA.w JL_0_D0B4
00031A6E <AmiBlitz3.ab3@22505>          CLR.b iniffcommand
00031A74 <AmiBlitz3.ab3@22506>          TST.b fast                                        ;branchcode
00031A78 <AmiBlitz3.ab3@22507>          BEQ b6
00031A7E <AmiBlitz3.ab3@22508>          TST.b fpu
00031A82 <AmiBlitz3.ab3@22509>          BEQ 'nofpu
00031A88 <AmiBlitz3.ab3@22513>           MOVE.l destpointer,a0
00031A8E <AmiBlitz3.ab3@22514>          SUB.l load_var_addr,a0
00031A94 <AmiBlitz3.ab3@22515>          CMP.l #4,a0
00031A98 <AmiBlitz3.ab3@22516>          BEQ 'nofpu
00031AA0 <AmiBlitz3.ab3@22517>          CMP.l #$f2400014,-4(a4)                           ;<
00031AA4 <AmiBlitz3.ab3@22518>          BNE 'nolt
00031AAA <AmiBlitz3.ab3@22519>          SUBQ.l #2,destpointer
00031AB0 <AmiBlitz3.ab3@22520>          MOVE.w #$f293,-4(a4)                              ;
00031AB4 <AmiBlitz3.ab3@22521> BRA 'brf
00031ABC <AmiBlitz3.ab3@22524>   CMP.l #$f2400015,-4(a4)                                  ;<=
00031AC0 <AmiBlitz3.ab3@22525>          BNE 'nole
00031AC6 <AmiBlitz3.ab3@22526>          SUBQ.l #2,destpointer
00031ACC <AmiBlitz3.ab3@22527>          MOVE.w #$f292,-4(a4)
00031AD0 <AmiBlitz3.ab3@22528> BRA 'brf
00031AD8 <AmiBlitz3.ab3@22531>   CMP.l #$f2400013,-4(a4)                                  ;=>
00031ADC <AmiBlitz3.ab3@22532>          BNE 'noge
00031AE2 <AmiBlitz3.ab3@22533>          SUBQ.l #2,destpointer
00031AE8 <AmiBlitz3.ab3@22534>          MOVE.w #$f294,-4(a4)
00031AEC <AmiBlitz3.ab3@22535> BRA 'brf
00031AF4 <AmiBlitz3.ab3@22538>   CMP.l #$f2400012,-4(a4)                                  ;>
00031AF8 <AmiBlitz3.ab3@22539>          BNE 'nogt
00031AFE <AmiBlitz3.ab3@22540>          SUBQ.l #2,destpointer
00031B04 <AmiBlitz3.ab3@22541>          MOVE.w #$f295,-4(a4)
00031B08 <AmiBlitz3.ab3@22542> BRA 'brf
00031B10 <AmiBlitz3.ab3@22545>   CMP.l #$f2400001,-4(a4)                                  ;=
00031B14 <AmiBlitz3.ab3@22546>          BNE 'noeq
00031B1A <AmiBlitz3.ab3@22547>          SUBQ.l #2,destpointer
00031B20 <AmiBlitz3.ab3@22548>          MOVE.w #$f28e,-4(a4)
00031B24 <AmiBlitz3.ab3@22549> BRA 'brf
00031B2C <AmiBlitz3.ab3@22552>   CMP.l #$f240000e,-4(a4)                                  ;<>
00031B30 <AmiBlitz3.ab3@22553>          BNE 'none
00031B36 <AmiBlitz3.ab3@22554>          SUBQ.l #2,destpointer
00031B3C <AmiBlitz3.ab3@22555>          MOVE.w #$f281,-4(a4)
00031B3E <AmiBlitz3.ab3@22558>   ADDQ.l #2,a7
00031B44 <AmiBlitz3.ab3@22560>     TST.b fast
00031B48 <AmiBlitz3.ab3@22561>     BEQ 'l1
00031B4E <AmiBlitz3.ab3@22562>     OR.b #$40,-3(a4)
00031B52 <AmiBlitz3.ab3@22563>     BSR writeword
00031B56 <AmiBlitz3.ab3@22567>  BSR writeword
00031B5A <AmiBlitz3.ab3@22568> BRA.s br2
00031B60 <AmiBlitz3.ab3@22572>   MOVE.l destpointer,a0
00031B66 <AmiBlitz3.ab3@22573>          SUB.l load_var_addr,a0
00031B6C <AmiBlitz3.ab3@22574>          CMP.l #4,a0
00031B70 <AmiBlitz3.ab3@22575>          BEQ JL_0_D0B4
00031B76 <AmiBlitz3.ab3@22576>          CMP.w #$4eb9,-6(a4)
00031B7A <AmiBlitz3.ab3@22577>          BEQ b6
00031B80 <AmiBlitz3.ab3@22578>          CMP.w #$5ec0,-2(a4)                               ;>
00031B84 <AmiBlitz3.ab3@22579>      BNE.s 'lb1
00031B8A <AmiBlitz3.ab3@22580>          MOVE.w #$6f00,-2(a4)                              ;ble
00031B8E <AmiBlitz3.ab3@22581> BRA.s br
00031B94 <AmiBlitz3.ab3@22584>  CMP.w #$5dc0,-2(a4)                                       ;<
00031B98 <AmiBlitz3.ab3@22585>   BNE.s 'lb2
00031B9E <AmiBlitz3.ab3@22586>          MOVE.w #$6c00,-2(a4)                              ;bge
00031BA2 <AmiBlitz3.ab3@22587> BRA.s br
00031BA8 <AmiBlitz3.ab3@22590>   CMP.w #$57c0,-2(a4)                                      ;=
00031BAC <AmiBlitz3.ab3@22591>   BNE.s 'lb3
00031BB2 <AmiBlitz3.ab3@22592>          MOVE.w #$6600,-2(a4)                              ;bne
00031BB6 <AmiBlitz3.ab3@22593> BRA.s br
00031BBC <AmiBlitz3.ab3@22596>   CMP.w #$56c0,-2(a4)                                      ;<>
00031BC0 <AmiBlitz3.ab3@22597>   BNE.s 'lb4
00031BC6 <AmiBlitz3.ab3@22598>          MOVE.w #$6700,-2(a4)                              ;beq
00031BCA <AmiBlitz3.ab3@22599> BRA.s br
00031BD0 <AmiBlitz3.ab3@22602>   CMP.w #$5cc0,-2(a4)                                      ;>=
00031BD4 <AmiBlitz3.ab3@22603>   BNE.s 'lb5
00031BDA <AmiBlitz3.ab3@22604>          MOVE.w #$6d00,-2(a4)                              ;blt
00031BDE <AmiBlitz3.ab3@22605> BRA.s br
00031BE4 <AmiBlitz3.ab3@22608>   CMP.w #$5fc0,-2(a4)                                      ;<=
00031BE8 <AmiBlitz3.ab3@22609>         BNE.s b6
00031BEE <AmiBlitz3.ab3@22610>          MOVE.w #$6e00,-2(a4)                              ;bgt
00031BF0 <AmiBlitz3.ab3@22613>   TST.w (a7)+
00031BF6 <AmiBlitz3.ab3@22615>         TST.b fast
00031BFA <AmiBlitz3.ab3@22616>         BEQ 'l1
00031C00 <AmiBlitz3.ab3@22617>         OR.b #$ff,-1(a4)                                   ;long branches
00031C04 <AmiBlitz3.ab3@22618>         BSR writeword
00031C08 <AmiBlitz3.ab3@22622>         BSR writeword
00031C0C <AmiBlitz3.ab3@22623> BRA.s br2
00031C10 <AmiBlitz3.ab3@22626>   BSR.w writeword
00031C14 <AmiBlitz3.ab3@22629>   MOVE.l posbr(PC),D1
00031C16 <AmiBlitz3.ab3@22630>   TST.w (A7)+
00031C1A <AmiBlitz3.ab3@22631>    BEQ.w JL_0_D0C2
00031C1E <AmiBlitz3.ab3@22632>   MOVE.l negbr(PC),D1
00031C24 <AmiBlitz3.ab3@22635>   TST.b fast
00031C28 <AmiBlitz3.ab3@22636>            BEQ 'l1
00031C2E <AmiBlitz3.ab3@22637>            OR.l #$00ff0000,d1
00031C32 <AmiBlitz3.ab3@22638>            BSR writelong
00031C36 <AmiBlitz3.ab3@22639>            BSR writeword
00031C3A <AmiBlitz3.ab3@22640> BRA br2
00031C3E <AmiBlitz3.ab3@22643>   BSR.w writelong
00031C40 <AmiBlitz3.ab3@22646>  MOVEQ.l #$0E,D0
00031C42 <AmiBlitz3.ab3@22647>   MOVEQ.l #$01,D1
00031C48 <AmiBlitz3.ab3@22648>   MOVEA.l _execbase,A6
00031C4E <AmiBlitz3.ab3@22650>   MOVE.l mempool,a0
00031C52 <AmiBlitz3.ab3@22651>   JSR _AllocPooled(a6)
00031C54 <AmiBlitz3.ab3@22652>   MOVEA.l D0,A0
00031C5A <AmiBlitz3.ab3@22653>   MOVE.l firstiff,(A0)
00031C60 <AmiBlitz3.ab3@22654>   MOVE.l A0,firstiff
00031C64 <AmiBlitz3.ab3@22655>   MOVE.l (A7)+,$4(A0)
00031C6C <AmiBlitz3.ab3@22656>   MOVE.l destpointer,$8(A0)
00031C70 <AmiBlitz3.ab3@22657>   MOVE.w (A7)+,$C(A0)
00031C76 <AmiBlitz3.ab3@22658>    JSR reget
00031C7A <AmiBlitz3.ab3@22659>    BEQ.w JL_0_D10C
00031C80 <AmiBlitz3.ab3@22660>   BSET #$7,$C(A0)
00031C8A <AmiBlitz3.ab3@22664>   MOVE.w oldqflag,instringon
00031C90 <AmiBlitz3.ab3@22665>   MOVEA.l lastsourcepos,A5
00031C98 <AmiBlitz3.ab3@22666>   MOVE.w #$003A,lastchar
00031C9A <AmiBlitz3.ab3@22669> RTS
00031C9E <AmiBlitz3.ab3@22673>   CMP.w #$1,D0
00031CA2 <AmiBlitz3.ab3@22674>    BLT.w JL_0_D128
00031CA6 <AmiBlitz3.ab3@22675>   CMP.w #$0,D0
00031CAA <AmiBlitz3.ab3@22676>    BGT.w JL_0_D128
00031CAC <AmiBlitz3.ab3@22677>   ADD.w D0,D0
00031CAE <AmiBlitz3.ab3@22678>   ADD.w D0,D0
00031CB2 <AmiBlitz3.ab3@22679>   MOVEA.l JL_0_D128(PC,D0.W),A0
00031CB4 <AmiBlitz3.ab3@22682> JMP (A0)
00031CB8 <AmiBlitz3.ab3@22685> BRA.w JL_0_D128
00031CBC <AmiBlitz3.ab3@22689>   CMP.w #$1,D0
00031CC0 <AmiBlitz3.ab3@22690>    BLT.w JL_0_D146
00031CC4 <AmiBlitz3.ab3@22691>   CMP.w #$0,D0
00031CC8 <AmiBlitz3.ab3@22692>    BGT.w JL_0_D146
00031CCA <AmiBlitz3.ab3@22693>   ADD.w D0,D0
00031CCC <AmiBlitz3.ab3@22694>   ADD.w D0,D0
00031CD0 <AmiBlitz3.ab3@22695>   MOVEA.l JL_0_D146(PC,D0.W),A0
00031CD2 <AmiBlitz3.ab3@22698>   JSR (A0)
00031CD6 <AmiBlitz3.ab3@22701> BRA.w JL_0_D146
00031CDA <AmiBlitz3.ab3@22705>   CMP.w #$1,D0
00031CDE <AmiBlitz3.ab3@22706>    BLT.w JL_0_D168
00031CE2 <AmiBlitz3.ab3@22707>   CMP.w #$0,D0
00031CE6 <AmiBlitz3.ab3@22708>    BGT.w JL_0_D168
00031CE8 <AmiBlitz3.ab3@22709>   ADD.w D0,D0
00031CEA <AmiBlitz3.ab3@22710>   ADD.w D0,D0
00031CEE <AmiBlitz3.ab3@22711>   MOVEA.l JL_0_D168(PC,D0.W),A0
00031CF2 <AmiBlitz3.ab3@22714>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00031CF4 <AmiBlitz3.ab3@22717>    JSR (A0)
00031CF8 <AmiBlitz3.ab3@22720> BRA.w JL_0_D168
00031CFA <AmiBlitz3.ab3@22723> labcnt:   Ds.w 1
00031CFC <AmiBlitz3.ab3@22730>   MOVEQ.l #$02,D2
00031D00 <AmiBlitz3.ab3@22731>    BSR.w bakeval
00031D04 <AmiBlitz3.ab3@22732>   LEA JL_0_D10E(PC),A0
00031D08 <AmiBlitz3.ab3@22733>   LEA JL_0_D12C(PC),A1
00031D0C <AmiBlitz3.ab3@22734>   MOVE.w #$001A,D1
00031D10 <AmiBlitz3.ab3@22735>   CMP.w #-$7FFB,D0
00031D14 <AmiBlitz3.ab3@22736>    BEQ.w JL_0_D1B6
00031D18 <AmiBlitz3.ab3@22737>   CMP.w #-$7FFA,D0
00031D1C <AmiBlitz3.ab3@22738>    BNE.w JUMP_syntaxerr
00031D20 <AmiBlitz3.ab3@22739>   LEA JL_0_D12C(PC),A0
00031D24 <AmiBlitz3.ab3@22740>   LEA JL_0_D14A(PC),A1
00031D28 <AmiBlitz3.ab3@22741>   MOVE.w #$001A,D1
00031D2E <AmiBlitz3.ab3@22742>   TST.b debugmode
00031D32 <AmiBlitz3.ab3@22743>    BEQ.b JL_0_D1B6
00031D38 <AmiBlitz3.ab3@22744>    JSR chkstak
00031D3C <AmiBlitz3.ab3@22745>   LEA JL_0_D14A(PC),A0
00031D40 <AmiBlitz3.ab3@22746>   LEA labcnt(PC),A1
00031D44 <AmiBlitz3.ab3@22747>   MOVE.w #$001E,D1
00031D46 <AmiBlitz3.ab3@22750>   MOVE.w D1,-(A7)
00031D4C <AmiBlitz3.ab3@22751>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00031D50 <AmiBlitz3.ab3@22752>    BSR.w pokecode
00031D56 <AmiBlitz3.ab3@22753>   CLR.w labcnt
00031D5C <AmiBlitz3.ab3@22758>    JSR get1bytemain
00031D62 <AmiBlitz3.ab3@22759>   SUBQ.l #2,destpointer                                    ;for makealab!
00031D66 <AmiBlitz3.ab3@22760>    BSR.w JL_0_AE22
00031D6C <AmiBlitz3.ab3@22761>   ADDQ.l #2,destpointer
00031D72 <AmiBlitz3.ab3@22762>    JSR addoff
00031D76 <AmiBlitz3.ab3@22763>   MOVE.l $8(A2),D1
00031D7A <AmiBlitz3.ab3@22764>    BSR.w writelong
00031D80 <AmiBlitz3.ab3@22765>   ADDQ.w #1,labcnt
00031D86 <AmiBlitz3.ab3@22766>    JSR reget
00031D8A <AmiBlitz3.ab3@22767>   CMP.w #$2C,D0
00031D8E <AmiBlitz3.ab3@22768>    BEQ.w JL_0_D1C8
00031D90 <AmiBlitz3.ab3@22769>   MOVEA.l (A7)+,A0
00031D92 <AmiBlitz3.ab3@22770>   MOVE.w (A7)+,D2
00031D98 <AmiBlitz3.ab3@22771>   MOVE.w dontwrite,D1
00031D9C <AmiBlitz3.ab3@22772>    BNE.w JL_0_D21A
00031DA0 <AmiBlitz3.ab3@22773>   MOVE.w labcnt(PC),D1
00031DA4 <AmiBlitz3.ab3@22774>   MOVE.w D1,$A(A0)
00031DA6 <AmiBlitz3.ab3@22775>   ADD.w D1,D1
00031DA8 <AmiBlitz3.ab3@22776>   ADD.w D1,D1
00031DAA <AmiBlitz3.ab3@22777>   ADDQ.w #2,D1
00031DAE <AmiBlitz3.ab3@22778>   MOVE.w D1,$2(A0,D2.W)
00031DB0 <AmiBlitz3.ab3@22781> RTS
00031DB6 <AmiBlitz3.ab3@22785>   TST.b debugmode
00031DBA <AmiBlitz3.ab3@22786>    BEQ.w JL_0_D236
00031DC0 <AmiBlitz3.ab3@22787>    JSR chkstak
00031DC6 <AmiBlitz3.ab3@22788>   MOVE.l AL_0_D162,D1
00031DCA <AmiBlitz3.ab3@22789>    BSR.w writelong
00031DD0 <AmiBlitz3.ab3@22791>   MOVE.w gosubcode,D1
00031DD4 <AmiBlitz3.ab3@22792> BRA.w JL_0_D246
00031DDA <AmiBlitz3.ab3@22796>   MOVE.w gotocode,D1
00031DDC <AmiBlitz3.ab3@22799>   MOVE.w D1,-(A7)
00031DE0 <AmiBlitz3.ab3@22800>    BSR.w JL_0_AE22
00031DE2 <AmiBlitz3.ab3@22801>   MOVE.w (A7)+,D1
00031DE6 <AmiBlitz3.ab3@22802>    BSR.w writeword
00031DEC <AmiBlitz3.ab3@22803>    JSR addoff
00031DF0 <AmiBlitz3.ab3@22804>   MOVE.l $8(A2),D1
00031DF4 <AmiBlitz3.ab3@22805> BRA.w writelong
00031DFA <AmiBlitz3.ab3@22809>   MOVE.w proceduremode,D1
00031DFE <AmiBlitz3.ab3@22810>    BEQ.w JUMP_badpenderr
00031E02 <AmiBlitz3.ab3@22811>   MOVE.w #$4EF9,D1
00031E06 <AmiBlitz3.ab3@22812>    BSR.w writeword
00031E0C <AmiBlitz3.ab3@22813>    JSR addoff
00031E12 <AmiBlitz3.ab3@22814>   MOVEA.l _execbase,A6
00031E14 <AmiBlitz3.ab3@22815>   MOVEQ.l #$08,D0
00031E16 <AmiBlitz3.ab3@22816>   MOVEQ.l #$01,D1
00031E1C <AmiBlitz3.ab3@22818>   MOVE.l mempool,a0
00031E20 <AmiBlitz3.ab3@22819>   JSR _AllocPooled(a6)
00031E22 <AmiBlitz3.ab3@22820>   MOVEA.l D0,A0
00031E28 <AmiBlitz3.ab3@22821>   MOVE.l firstpend,(A0)
00031E2E <AmiBlitz3.ab3@22822>   MOVE.l A0,firstpend
00031E36 <AmiBlitz3.ab3@22823>   MOVE.l destpointer,$4(A0)
00031E3A <AmiBlitz3.ab3@22824> BRA.w writelong
00031E3E <AmiBlitz3.ab3@22828>   BSR.w do_AsmExit
00031E44 <AmiBlitz3.ab3@22829> JMP get1bytemain
00031E4C <AmiBlitz3.ab3@22833>   MOVE.b #1,nostringopt
00031E50 <AmiBlitz3.ab3@22834>   MOVEM.l a0/a1/d1,-(a7)
00031E56 <AmiBlitz3.ab3@22835>   MOVEA.l currentfunction,A0
00031E5C <AmiBlitz3.ab3@22836>     CMP.l #0,a0
00031E60 <AmiBlitz3.ab3@22837>     BNE 'l1
00031E66 <AmiBlitz3.ab3@22838>     JMP errorasmexit
00031E68 <AmiBlitz3.ab3@22839> 'l1 MOVEQ.l #$00,D2
00031E6C <AmiBlitz3.ab3@22840>   MOVE.b $5(A0),D2
00031E70 <AmiBlitz3.ab3@22841>   BSR.w eval
00031E76 <AmiBlitz3.ab3@22843>   MOVEA.l currentfunction,A0
00031E7A <AmiBlitz3.ab3@22844>   MOVE.l funcstruct_returntype(a0),a0
00031E80 <AmiBlitz3.ab3@22845>   CMP.l #0,a0
00031E84 <AmiBlitz3.ab3@22846>   BEQ 'isstatement
00031E8C <AmiBlitz3.ab3@22847>   CMP.l #$100,4(a0)
00031E90 <AmiBlitz3.ab3@22848>   BLT.w 'isvar
00031E92 <AmiBlitz3.ab3@22849>   MOVE.l a2,a1
00031E98 <AmiBlitz3.ab3@22850>   TST.l typetocast
00031E9C <AmiBlitz3.ab3@22851>   BEQ 'nocast
00031EA2 <AmiBlitz3.ab3@22852>   MOVE.l typetocast,a1
00031EA4 <AmiBlitz3.ab3@22853> 'nocast  CMP.l a0,a1
00031EA8 <AmiBlitz3.ab3@22854>   BEQ 'ok
00031EAE <AmiBlitz3.ab3@22855>   CLR.l typetocast
00031EB4 <AmiBlitz3.ab3@22856>   MOVE.l lasttoken,d1
00031EB8 <AmiBlitz3.ab3@22857>   CMP.w #$b581,d1                   ; ok, when token for null
00031EBC <AmiBlitz3.ab3@22858>   BEQ 'isnull
00031EC2 <AmiBlitz3.ab3@22859> 'error  JMP errorconvertreturntype
00031EC6 <AmiBlitz3.ab3@22866>   MOVEM.l (a7)+,a0/a1/d1
00031ECA <AmiBlitz3.ab3@22867> BRA.w do_AsmExit
00031ED0 <AmiBlitz3.ab3@22869> error_convert_types2 JMP error_convert_types
00031ED6 <AmiBlitz3.ab3@22882>   TST.b debugmode
00031EDA <AmiBlitz3.ab3@22883>    BEQ.w JL_0_D2CA
00031EDE <AmiBlitz3.ab3@22884>   MOVE.w #$C305,D1
00031EE2 <AmiBlitz3.ab3@22885> BRA.w Atokejsr
00031EE6 <AmiBlitz3.ab3@22888>   MOVE.w #$4E75,D1
00031EEA <AmiBlitz3.ab3@22889> BRA.w writeword
00031EEE <AmiBlitz3.ab3@22892> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00031EF2 <AmiBlitz3.ab3@22893> proclocals:  Ds.l 1                                        ;for debugga!
00031EF4 <AmiBlitz3.ab3@22894> procnum:     Ds.w 1
00031EF6 <AmiBlitz3.ab3@22895> procnum2:    Ds.w 1
00031EFA <AmiBlitz3.ab3@22896> prolineat:   Ds.l 1
00031F00 <AmiBlitz3.ab3@22900>    TST.w proceduremode
00031F04 <AmiBlitz3.ab3@22901>    BGT JUMP_sreterr
00031F08 <AmiBlitz3.ab3@22902>    CMP.w #-$7FF9,D0
00031F0C <AmiBlitz3.ab3@22903>    BEQ.w JL_0_D29C
00031F0E <AmiBlitz3.ab3@22904>    MOVEQ.l #-$01,D1
00031F12 <AmiBlitz3.ab3@22905> BRA.w do_function2
00031F18 <AmiBlitz3.ab3@22908> JMP sreterr
00031F1E <AmiBlitz3.ab3@22912>   CLR.b skipfunc
00031F24 <AmiBlitz3.ab3@22913>   TST.l unusedfunc
00031F28 <AmiBlitz3.ab3@22914>   BEQ 'ex
00031F2C <AmiBlitz3.ab3@22915>   MOVEM.l d0-d7/a0-a6,-(a7)
00031F32 <AmiBlitz3.ab3@22916>   MOVE.l unusedfunc,d1
00031F38 <AmiBlitz3.ab3@22917>   LEA ptr_parameterstore,a5
00031F3A <AmiBlitz3.ab3@22920>   MOVE.l d1,a0
00031F3E <AmiBlitz3.ab3@22921>   LEA 12(a0),a2
00031F40 <AmiBlitz3.ab3@22922>   MOVE.l a5,a1
00031F42 <AmiBlitz3.ab3@22924>   CMPM.b (a1)+,(a2)+
00031F46 <AmiBlitz3.ab3@22925>   BNE 'neq
00031F48 <AmiBlitz3.ab3@22926>   TST.b (a2)
00031F4C <AmiBlitz3.ab3@22927>   BNE 'ch
00031F4E <AmiBlitz3.ab3@22928>   TST.b (a1)
00031F52 <AmiBlitz3.ab3@22929>   BNE 'neq
00031F5A <AmiBlitz3.ab3@22930>   MOVE.b #1,skipfunc
00031F5E <AmiBlitz3.ab3@22931> BRA 'out
00031F60 <AmiBlitz3.ab3@22934>   MOVE.l (a0),d1
00031F64 <AmiBlitz3.ab3@22935>   BNE 'ag
00031F68 <AmiBlitz3.ab3@22938>   MOVEM.l (a7)+,d0-d7/a0-a6
00031F6A <AmiBlitz3.ab3@22941> RTS
00031F70 <AmiBlitz3.ab3@22945> JMP dupprocerr
00031F76 <AmiBlitz3.ab3@22948> JMP illprocperr
00031F7E <AmiBlitz3.ab3@22955>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00031F82 <AmiBlitz3.ab3@22956>    BEQ JUMP_sreterr
00031F86 <AmiBlitz3.ab3@22957>   CMP.w #-$7FF9,D0
00031F8A <AmiBlitz3.ab3@22958>    BEQ.w do_function_return
00031F94 <AmiBlitz3.ab3@22961>   MOVE.w oldqflag,instringon
00031F9A <AmiBlitz3.ab3@22962>   MOVEA.l lastsourcepos,A5
00031FA0 <AmiBlitz3.ab3@22963>   JSR getfunctionreturntype
00031FA6 <AmiBlitz3.ab3@22964>   JSR get1bytemain
00031FAC <AmiBlitz3.ab3@22967>   TST.b declare
00031FB0 <AmiBlitz3.ab3@22968>   BEQ 'l1
00031FB8 <AmiBlitz3.ab3@22969>   MOVE.b #1,nowdeclare
00031FBE <AmiBlitz3.ab3@22972>   JSR errchx                                           ;writejumpoverfunction
00031FC4 <AmiBlitz3.ab3@22975>   CLR.b fastfunc
00031FCE <AmiBlitz3.ab3@22976>   MOVE.l firstiff,firstiffstore
00031FD6 <AmiBlitz3.ab3@22977>   CMP.l #"FAST",-1(a5)
00031FDA <AmiBlitz3.ab3@22978>   BNE 'nofast
00031FE0 <AmiBlitz3.ab3@22979>   CMP.b #" ",3(a5)
00031FE4 <AmiBlitz3.ab3@22980>   BNE 'nofast
00031FE6 <AmiBlitz3.ab3@22981>   ADDQ.l #3,a5
00031FEA <AmiBlitz3.ab3@22984>     CMP.b #" ",(a5)
00031FEE <AmiBlitz3.ab3@22985>      BNE 'x1
00031FF0 <AmiBlitz3.ab3@22986>     ADDQ #1,a5
00031FF4 <AmiBlitz3.ab3@22987> BRA 'x2
00031FFA <AmiBlitz3.ab3@22990>   MOVE.l a5,lastsourcepos
00032002 <AmiBlitz3.ab3@22991>   MOVE.b #1,fastfunc
0003200A <AmiBlitz3.ab3@22994>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
0003200E <AmiBlitz3.ab3@22995> BRA 'noopt
00032014 <AmiBlitz3.ab3@22997>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032018 <AmiBlitz3.ab3@22998>   BNE 'noopt
0003201A <AmiBlitz3.ab3@22999>   ADDQ.l #4,a5
0003201E <AmiBlitz3.ab3@23002>     CMP.b #" ",(a5)
00032022 <AmiBlitz3.ab3@23003>      BNE 'x1b
00032024 <AmiBlitz3.ab3@23004>     ADDQ #1,a5
00032028 <AmiBlitz3.ab3@23005> BRA 'x2b
0003202E <AmiBlitz3.ab3@23008>   MOVE.l a5,lastsourcepos
00032034 <AmiBlitz3.ab3@23010>   JSR makename2
00032038 <AmiBlitz3.ab3@23011> BRA 'l1
0003203E <AmiBlitz3.ab3@23015>   JSR makename2
00032044 <AmiBlitz3.ab3@23016>   JSR checkused
0003204A <AmiBlitz3.ab3@23017>   TST.b skipfunc
0003204E <AmiBlitz3.ab3@23018>    BEQ 'l1
00032054 <AmiBlitz3.ab3@23019>   JSR skipme
0003205A <AmiBlitz3.ab3@23020>   CLR.b fastfunc
0003205C <AmiBlitz3.ab3@23021> RTS
00032066 <AmiBlitz3.ab3@23024>   MOVE.l linenumat,prolineat
0003206C <AmiBlitz3.ab3@23025>   ADDQ.w #1,procnum2
00032074 <AmiBlitz3.ab3@23026>   MOVE.w procnum2(PC),procnum
0003207A <AmiBlitz3.ab3@23027>   MOVE.w D1,proceduremode
00032080 <AmiBlitz3.ab3@23028>   CLR.w locvaroff
00032084 <AmiBlitz3.ab3@23029>   CMP.w #$7B,D0
00032088 <AmiBlitz3.ab3@23030>    BNE.w JUMP_syntaxerr
00032090 <AmiBlitz3.ab3@23031>    MOVE.b #1,infunctioncode
00032096 <AmiBlitz3.ab3@23032>   MOVEA.l tempvm,A0
0003209E <AmiBlitz3.ab3@23033>   MOVE.w $C(A0),memlibstat
000320A4 <AmiBlitz3.ab3@23034>   BCLR #$7,$C(A0)                                          ;Bit out of range
000320A8 <AmiBlitz3.ab3@23035>   MOVE.w #$4EF9,D1
000320AC <AmiBlitz3.ab3@23036>    BSR.w writeword
000320B2 <AmiBlitz3.ab3@23037>    JSR addoff
000320B6 <AmiBlitz3.ab3@23038>    BSR.w writelong
000320BC <AmiBlitz3.ab3@23039>    JSR findproc                                          ;findproc function
000320C0 <AmiBlitz3.ab3@23040>    BEQ.w JUMP_dupprocerr
000320C6 <AmiBlitz3.ab3@23041>    JSR addlabel
000320CC <AmiBlitz3.ab3@23042>    MOVE.b #31,$20(a2)                                      ;increase if more pars
000320D2 <AmiBlitz3.ab3@23043>    MOVE.b #0,isfunc(a2)
000320DA <AmiBlitz3.ab3@23044>    MOVE.l functionreturntype,funcstruct_returntype(a2)
000320E2 <AmiBlitz3.ab3@23045>   MOVE.l destpointer,$E(A2)
000320E8 <AmiBlitz3.ab3@23046>   MOVE.l A2,currentfunction
000320EE <AmiBlitz3.ab3@23047>   LEA nops8,A0
000320F4 <AmiBlitz3.ab3@23048>   LEA dataget,A1
000320F8 <AmiBlitz3.ab3@23049>    BSR.w pokecode2
000320FE <AmiBlitz3.ab3@23050>   TST.b debugmode
00032102 <AmiBlitz3.ab3@23051>    BEQ.b JL_0_D3AA
00032104 <AmiBlitz3.ab3@23052>   MOVEQ.l #$04,D1
0003210A <AmiBlitz3.ab3@23053>    JSR writetrap
00032114 <AmiBlitz3.ab3@23054>   MOVE.l destpointer,proclocals
00032118 <AmiBlitz3.ab3@23055>    BSR.w writelong
0003211C <AmiBlitz3.ab3@23056>    BSR.w writelong
00032120 <AmiBlitz3.ab3@23059>    LEA $16(A2),A4
00032128 <AmiBlitz3.ab3@23060>   MOVE.b proceduremode+1,$5(A2)
0003212A <AmiBlitz3.ab3@23061>   MOVEQ.l #$00,D6
0003212C <AmiBlitz3.ab3@23062>   MOVEQ.l #$00,D5
00032132 <AmiBlitz3.ab3@23063>    JSR get1bytemain
00032136 <AmiBlitz3.ab3@23064>   CMP.w #$7D,D0
0003213A <AmiBlitz3.ab3@23065>    BEQ.w JL_0_D466
0003213E <AmiBlitz3.ab3@23068>    CMP.b #"@",d0
00032142 <AmiBlitz3.ab3@23069>    BNE 'l2
00032144 <AmiBlitz3.ab3@23070>    MOVE.l a0,-(a7)
0003214A <AmiBlitz3.ab3@23071>    MOVE.l currentfunction,a0
00032150 <AmiBlitz3.ab3@23072>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032154 <AmiBlitz3.ab3@23073>    BNE 'l1
00032158 <AmiBlitz3.ab3@23074>    MOVE.b d6,$20(a0)                                       ;increase if morepar
0003215E <AmiBlitz3.ab3@23077>    JSR get1bytemain
00032160 <AmiBlitz3.ab3@23078>    MOVE.l (a7)+,a0
00032164 <AmiBlitz3.ab3@23081>    BSR.w getparameter
00032168 <AmiBlitz3.ab3@23082>    BSR.w JL_0_8E3C
00032170 <AmiBlitz3.ab3@23083>   CMPI.l #$7,$4(A2)
00032174 <AmiBlitz3.ab3@23084>    BNE.w JL_0_D3F6
0003217A <AmiBlitz3.ab3@23085>   LEA stbuff,A0
0003217C <AmiBlitz3.ab3@23086>   MOVE.w D5,D1
0003217E <AmiBlitz3.ab3@23087>   LSL.w #2,D1
00032182 <AmiBlitz3.ab3@23088>   MOVE.w D6,$0(A0,D1.W)
00032188 <AmiBlitz3.ab3@23089>   MOVE.w $4(A3),$2(A0,D1.W)
0003218A <AmiBlitz3.ab3@23090>   ADDQ.w #1,D5
0003218C <AmiBlitz3.ab3@23091>   MOVEQ.l #$07,D2
00032190 <AmiBlitz3.ab3@23092> BRA.w JL_0_D442
00032196 <AmiBlitz3.ab3@23095> JMP toovarerr
0003219A <AmiBlitz3.ab3@23098>   MOVE.w #$2940,D1
0003219C <AmiBlitz3.ab3@23099>   MOVEQ.l #$03,D2
000321A4 <AmiBlitz3.ab3@23100>   BTST #$0,flagmask+1
000321A8 <AmiBlitz3.ab3@23101>    BNE.w JL_0_D430
000321B0 <AmiBlitz3.ab3@23102>   CMPI.l #$100,$4(A2)
000321B4 <AmiBlitz3.ab3@23103>    BCC.w JUMP_illprocperr
000321B8 <AmiBlitz3.ab3@23104>   MOVE.w $6(A2),D2
000321BC <AmiBlitz3.ab3@23105>   CMP.w #$2,D2
000321C0 <AmiBlitz3.ab3@23106>    BHI.w JL_0_D430
000321C4 <AmiBlitz3.ab3@23107>    BEQ.w JL_0_D42C
000321C8 <AmiBlitz3.ab3@23108>   EORI.w #$3000,D1
000321CC <AmiBlitz3.ab3@23109> BRA.w JL_0_D430
000321D2 <AmiBlitz3.ab3@23112> JMP more6pard
000321D6 <AmiBlitz3.ab3@23115>   ORI.w #$1000,D1
000321D8 <AmiBlitz3.ab3@23118>   OR.w D6,D1
000321DE <AmiBlitz3.ab3@23119>   TST.b fpu
000321E2 <AmiBlitz3.ab3@23120>   BEQ 'nofpu
000321E6 <AmiBlitz3.ab3@23121>   CMP.b #5,d2
000321EA <AmiBlitz3.ab3@23122>   BNE 'nofpu
000321EE <AmiBlitz3.ab3@23123>   CMP.w #6,d6
000321F2 <AmiBlitz3.ab3@23124>   BLT 'l10a
000321F8 <AmiBlitz3.ab3@23125>   CMP.l #newtype_double,a2
000321FC <AmiBlitz3.ab3@23126>   BEQ JUMP_more6pard
00032200 <AmiBlitz3.ab3@23127> BRA 'nofpu
00032206 <AmiBlitz3.ab3@23130>   MOVE.l #$f22c6400,d1
0003220A <AmiBlitz3.ab3@23131>   MOVEM.l d0/a4,-(a7)
0003220C <AmiBlitz3.ab3@23132>   MOVE.l d6,d0
0003220E <AmiBlitz3.ab3@23133>   ASL.l #7,d0
00032210 <AmiBlitz3.ab3@23134>   OR.w d0,d1
00032216 <AmiBlitz3.ab3@23135>   CMP.l #newtype_double,a2
0003221A <AmiBlitz3.ab3@23136>   BNE 'l1
00032220 <AmiBlitz3.ab3@23137>   OR.l #$1000,d1
00032224 <AmiBlitz3.ab3@23140>   BSR writelong
00032228 <AmiBlitz3.ab3@23141>   MOVE.w 4(a3),d1
0003222C <AmiBlitz3.ab3@23142>   BSR writeword
00032230 <AmiBlitz3.ab3@23143>   MOVEM.l (a7)+,a4/d0
00032234 <AmiBlitz3.ab3@23144> BRA JL_0_D442
00032236 <AmiBlitz3.ab3@23147>   MOVE.l A4,-(A7)
0003223A <AmiBlitz3.ab3@23148>    CMP.w #6,d6
0003223E <AmiBlitz3.ab3@23149>    BLT 'l10
00032242 <AmiBlitz3.ab3@23150>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032244 <AmiBlitz3.ab3@23151>    ADD.w d6,d1
0003224A <AmiBlitz3.ab3@23152>    JSR Atokejsr
00032250 <AmiBlitz3.ab3@23153>    TST.w dontwrite
00032254 <AmiBlitz3.ab3@23154>    BNE 'l10
0003225A <AmiBlitz3.ab3@23155>    MOVE.l data1start,d1
00032260 <AmiBlitz3.ab3@23156>    MOVE.l destpointer,a4
00032264 <AmiBlitz3.ab3@23157>    ADD.l d1,-6(a4)
0003226A <AmiBlitz3.ab3@23158>    MOVE.l destpointer,d1
0003226C <AmiBlitz3.ab3@23159>    SUBQ.l #6,d1
00032272 <AmiBlitz3.ab3@23160>    SUB.l destbufferstart,d1
00032274 <AmiBlitz3.ab3@23162>    MOVE.l d2,-(a7)
00032276 <AmiBlitz3.ab3@23163>    MOVE.l d1,d2
0003227C <AmiBlitz3.ab3@23164>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
0003227E <AmiBlitz3.ab3@23165>    MOVE.l (a7)+,d2
00032284 <AmiBlitz3.ab3@23166>    MOVE.l destpointer,a4
00032288 <AmiBlitz3.ab3@23167>    CMP.w #2,d2
0003228C <AmiBlitz3.ab3@23168>    BNE 'nw1
00032292 <AmiBlitz3.ab3@23170>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
0003229A <AmiBlitz3.ab3@23171>    ADD.l #2,-6(a4)
0003229E <AmiBlitz3.ab3@23174>    CMP.w #1,d2
000322A2 <AmiBlitz3.ab3@23175>    BNE 'nb
000322A8 <AmiBlitz3.ab3@23176>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000322B0 <AmiBlitz3.ab3@23177>    ADD.l #3,-6(a4)
000322B6 <AmiBlitz3.ab3@23180>    MOVE.w $4(a3),-2(a4)
000322BA <AmiBlitz3.ab3@23181> BRA 'ne1
000322BE <AmiBlitz3.ab3@23184>   BSR.w writeword                                          ;write storeparameter
000322C2 <AmiBlitz3.ab3@23187>   MOVE.w $4(A3),D1
000322C6 <AmiBlitz3.ab3@23188>    BSR.w writeword
000322C8 <AmiBlitz3.ab3@23191>   MOVEA.l (A7)+,A4
000322CE <AmiBlitz3.ab3@23194>   CLR.l functionreturntype
000322D0 <AmiBlitz3.ab3@23195>   ADDQ.w #1,D6
000322D4 <AmiBlitz3.ab3@23196>   CMP.w #11,D6                                             ;max function parameters
000322D8 <AmiBlitz3.ab3@23197>    BCC.w JUMP_toovarerr
000322DE <AmiBlitz3.ab3@23198>   MOVE.l currentfunction,a0
000322E2 <AmiBlitz3.ab3@23199>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
000322E4 <AmiBlitz3.ab3@23200>   MOVE.b D2,(A4)+
000322E8 <AmiBlitz3.ab3@23201>   CMP.w #$2C,D0
000322EC <AmiBlitz3.ab3@23202>    BNE.w JL_0_D45E
000322F2 <AmiBlitz3.ab3@23203>    JSR get1bytemain
000322F6 <AmiBlitz3.ab3@23215> BRA.w JL_0_D3C6
000322FA <AmiBlitz3.ab3@23218>   CMP.w #$7D,D0
000322FE <AmiBlitz3.ab3@23219>    BNE.w JUMP_syntaxerr
00032304 <AmiBlitz3.ab3@23222>   MOVEA.l currentfunction,A2
00032306 <AmiBlitz3.ab3@23223>   LSL.w #4,D5
00032308 <AmiBlitz3.ab3@23224>   OR.w D5,D6
0003230C <AmiBlitz3.ab3@23225>   MOVE.b D6,$4(A2)
0003230E <AmiBlitz3.ab3@23226>   LSR.w #4,D6
00032312 <AmiBlitz3.ab3@23227>    BEQ.w JL_0_D4C4
00032318 <AmiBlitz3.ab3@23228>   LEA stbuff,A0
0003231A <AmiBlitz3.ab3@23229>   SUBQ.w #1,D6
0003231C <AmiBlitz3.ab3@23232>     MOVE.w D6,D1                                           ;function stringpars
0003231E <AmiBlitz3.ab3@23233>     LSL.w #2,D1                                            ;stringsize was 2
00032320 <AmiBlitz3.ab3@23235>       LSL.w #1,d1
00032322 <AmiBlitz3.ab3@23236>       ADDQ.w #4,d1
00032324 <AmiBlitz3.ab3@23238>     ADDQ.w #8,D1
0003232A <AmiBlitz3.ab3@23239>     MOVE.w D1,funcst+2
00032330 <AmiBlitz3.ab3@23240>     MOVE.l funcst,D1
00032334 <AmiBlitz3.ab3@23241>     BSR.w writelong
00032336 <AmiBlitz3.ab3@23242>     MOVE.w (A0)+,D1
0003233A <AmiBlitz3.ab3@23243>     CMP.b #5,d1
0003233E <AmiBlitz3.ab3@23244>     BLE 's1
00032342 <AmiBlitz3.ab3@23245>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032346 <AmiBlitz3.ab3@23246>     BSR writeinstruction
00032348 <AmiBlitz3.ab3@23247>     MOVE.w D6,D1                                           ;function stringpars
0003234A <AmiBlitz3.ab3@23248>     LSL.w #2,D1                                            ;stringsize was 2
0003234C <AmiBlitz3.ab3@23250>       LSL.w #1,d1
0003234E <AmiBlitz3.ab3@23252>     ADDQ.w #8,D1
00032352 <AmiBlitz3.ab3@23253>     BSR writeword
00032356 <AmiBlitz3.ab3@23254>   BRA 's2
0003235C <AmiBlitz3.ab3@23257>     OR.w movedna3,D1
00032360 <AmiBlitz3.ab3@23258>      BSR.w writeword
00032366 <AmiBlitz3.ab3@23261>     MOVE.w (A0)+,least+2
0003236C <AmiBlitz3.ab3@23262>     MOVE.l least,D1
00032370 <AmiBlitz3.ab3@23263>      BSR.w writelong
00032372 <AmiBlitz3.ab3@23264>     MOVE.l A0,-(A7)
00032376 <AmiBlitz3.ab3@23265>     MOVE.w #$C700,D1
0003237A <AmiBlitz3.ab3@23266>      BSR.w Atokejsr
0003237C <AmiBlitz3.ab3@23267>     MOVEA.l (A7)+,A0
00032380 <AmiBlitz3.ab3@23268>   DBF D6,JL_0_D482
00032386 <AmiBlitz3.ab3@23271> JMP get1bytemain
0003238C <AmiBlitz3.ab3@23275>   MOVE.w dontwrite,D1
00032390 <AmiBlitz3.ab3@23276>    BNE.w JL_0_D4F6
00032396 <AmiBlitz3.ab3@23277>   MOVE.l destpointer,-(A7)
0003239C <AmiBlitz3.ab3@23278>   MOVE.l A0,destpointer
000323A2 <AmiBlitz3.ab3@23279>   MOVE.l linksize,D1
000323A6 <AmiBlitz3.ab3@23280>    BSR.w writelong                                         ;writefunctions jumppos
000323AC <AmiBlitz3.ab3@23281>    TST.b fastfunc
000323B0 <AmiBlitz3.ab3@23282>    BNE 'skip
000323B4 <AmiBlitz3.ab3@23283>   MOVE.w #$CC00,D1
000323B8 <AmiBlitz3.ab3@23284>    BSR.w tokejsr2                                          ;write clearvars
000323BE <AmiBlitz3.ab3@23287>   MOVE.l (A7)+,destpointer
000323C0 <AmiBlitz3.ab3@23290> RTS
000323C6 <AmiBlitz3.ab3@23294>   MOVEA.l currentfunction,A2
000323CA <AmiBlitz3.ab3@23295>   MOVEA.l $E(A2),A0
000323CE <AmiBlitz3.ab3@23296>   MOVE.w $6(A2),D1
000323D2 <AmiBlitz3.ab3@23297>    BEQ.w JL_0_D538
000323D8 <AmiBlitz3.ab3@23298>   MOVE.w D1,linksize+2
000323DC <AmiBlitz3.ab3@23299>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
000323E0 <AmiBlitz3.ab3@23300>    BNE.w JL_0_D522
000323E2 <AmiBlitz3.ab3@23301>   ADDQ.w #6,A0
000323E6 <AmiBlitz3.ab3@23302>   MOVE.l A0,$E(A2)
000323EA <AmiBlitz3.ab3@23303> BRA.w JL_0_D4C8
000323EC <AmiBlitz3.ab3@23306>   MOVE.l A0,-(A7)
000323F0 <AmiBlitz3.ab3@23307>    BSR.w JL_0_D4C8
000323F2 <AmiBlitz3.ab3@23308>   MOVEA.l (A7)+,A0
000323F6 <AmiBlitz3.ab3@23309>   LEA $A(A0),A0
000323FC <AmiBlitz3.ab3@23310>   MOVEA.l currentfunction,A2
00032400 <AmiBlitz3.ab3@23311> BRA.w JL_0_D54A
00032404 <AmiBlitz3.ab3@23314>   MOVE.w $8(A2),D1
00032408 <AmiBlitz3.ab3@23315>    BNE.w JL_0_D54A
0003240C <AmiBlitz3.ab3@23316>   LEA $10(A0),A0
00032410 <AmiBlitz3.ab3@23317>   MOVE.l A0,$E(A2)
00032412 <AmiBlitz3.ab3@23318> RTS
00032418 <AmiBlitz3.ab3@23322> JMP errormsg_nofast
0003241E <AmiBlitz3.ab3@23325>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00032422 <AmiBlitz3.ab3@23326>    BNE.w JL_0_D580
00032428 <AmiBlitz3.ab3@23327>    TST.b fastfunc
0003242C <AmiBlitz3.ab3@23328>    BNE JUMP_errormsg_nofast
00032432 <AmiBlitz3.ab3@23329>   MOVE.l destpointer,-(A7)
00032438 <AmiBlitz3.ab3@23330>   MOVE.l A0,destpointer
0003243C <AmiBlitz3.ab3@23331>   MOVE.w #$4EB9,D1
00032440 <AmiBlitz3.ab3@23332>    BSR.w writeword
00032446 <AmiBlitz3.ab3@23333>    JSR addoff
0003244A <AmiBlitz3.ab3@23334>    BSR.w writelong
0003244C <AmiBlitz3.ab3@23335>   MOVEA.l (A7)+,A0
00032452 <AmiBlitz3.ab3@23336>   MOVEA.l destpointer,A1
00032454 <AmiBlitz3.ab3@23337>   MOVE.l A0,-(A1)
0003245A <AmiBlitz3.ab3@23338>   MOVE.l A0,destpointer
0003245E <AmiBlitz3.ab3@23341>   MOVE.w $8(A2),D4
00032462 <AmiBlitz3.ab3@23342>    BPL.w JL_0_D59E
00032466 <AmiBlitz3.ab3@23343>   MOVE.w #$C004,D1
0003246A <AmiBlitz3.ab3@23344>    BSR.w tokejsr2
00032470 <AmiBlitz3.ab3@23345>   MOVEA.l currentfunction,A2
00032474 <AmiBlitz3.ab3@23346>   MOVE.w $8(A2),D4
00032478 <AmiBlitz3.ab3@23347>   ANDI.w #$7FFF,D4
0003247C <AmiBlitz3.ab3@23350>    BEQ.w JL_0_D5E0
00032480 <AmiBlitz3.ab3@23351>   MOVE.b $4(A2),D1
00032484 <AmiBlitz3.ab3@23352>   ANDI.w #$F,D1
00032486 <AmiBlitz3.ab3@23353>   MOVE.w D1,-(A7)
0003248A <AmiBlitz3.ab3@23354>   CMP.w #$5,D1
0003248E <AmiBlitz3.ab3@23355>    BCS.w JL_0_D5BC
00032492 <AmiBlitz3.ab3@23356>   MOVE.w #$2F04,D1
00032496 <AmiBlitz3.ab3@23357>    BSR.w writeword
0003249C <AmiBlitz3.ab3@23360>   MOVE.l locdatast,D3
000324A2 <AmiBlitz3.ab3@23361>    JSR datastart
000324A6 <AmiBlitz3.ab3@23362>   MOVE.w #$C501,D1
000324AA <AmiBlitz3.ab3@23363>    BSR.w tokejsr2
000324AC <AmiBlitz3.ab3@23364>   MOVE.w (A7)+,D1
000324B0 <AmiBlitz3.ab3@23365>   CMP.w #$5,D1
000324B4 <AmiBlitz3.ab3@23366>    BCS.w JL_0_D5E0
000324B8 <AmiBlitz3.ab3@23367>   MOVE.w #$281F,D1
000324BC <AmiBlitz3.ab3@23368>    BSR.w writeword
000324C0 <AmiBlitz3.ab3@23370>   MOVE.w #$4E75,D1
000324C4 <AmiBlitz3.ab3@23371> BRA.w writeword
000324CA <AmiBlitz3.ab3@23375>   LEA mwait,A0
000324D0 <AmiBlitz3.ab3@23376>   LEA mwaitf,A1
000324D4 <AmiBlitz3.ab3@23377> BRA.w pokecode
000324DA <AmiBlitz3.ab3@23381> JMP laberr
000324DE <AmiBlitz3.ab3@23384>   CMP.w #$2E,D0
000324E2 <AmiBlitz3.ab3@23385>   BNE.w JUMP_syntaxerr
000324E8 <AmiBlitz3.ab3@23386>   JSR getparameter2
000324EC <AmiBlitz3.ab3@23387>   BEQ.w JUMP_laberr
000324F2 <AmiBlitz3.ab3@23388>   LEA newtypebase,A2
000324F8 <AmiBlitz3.ab3@23389>   JSR findtype
000324FC <AmiBlitz3.ab3@23390>   BNE.w JL_0_D626
00032504 <AmiBlitz3.ab3@23391>   CMPI.l #MaxByte,$4(A2)
00032508 <AmiBlitz3.ab3@23392>   BNE.w JUMP_typeerr
0003250C <AmiBlitz3.ab3@23393> BRA.w JL_0_D62A
00032512 <AmiBlitz3.ab3@23396> JMP typeerr
00032518 <AmiBlitz3.ab3@23399>   JSR addlabel
0003251C <AmiBlitz3.ab3@23402>   CLR.l $4(A2)
00032522 <AmiBlitz3.ab3@23403>   MOVE.l A2,thistype
00032528 <AmiBlitz3.ab3@23404>   CLR.l prevtype
0003252E <AmiBlitz3.ab3@23405>   CLR.w typelen
00032534 <AmiBlitz3.ab3@23406>   CLR.w linemode
0003253A <AmiBlitz3.ab3@23407>   JSR reget
0003253E <AmiBlitz3.ab3@23408>   BNE.w typemode
00032540 <AmiBlitz3.ab3@23409> RTS
00032544 <AmiBlitz3.ab3@23412>   CMP.w #-$7FFE,D0
00032548 <AmiBlitz3.ab3@23413>   BEQ.w JL_0_D82E
00032552 <AmiBlitz3.ab3@23415>   MOVE.w oldqflag,instringon
00032558 <AmiBlitz3.ab3@23416>   MOVEA.l lastsourcepos,A5
0003255A <AmiBlitz3.ab3@23417>   MOVEQ.l #$00,D6
0003255E <AmiBlitz3.ab3@23418>   CMP.w #$2A,D0
00032562 <AmiBlitz3.ab3@23419>   BNE.w JL_0_D670
00032564 <AmiBlitz3.ab3@23420>   MOVEQ.l #$01,D6
0003256A <AmiBlitz3.ab3@23421>   JSR get1bytemain
0003256E <AmiBlitz3.ab3@23422> BRA.w JL_0_D67E
00032572 <AmiBlitz3.ab3@23425>   CMP.w #$40,D0
00032576 <AmiBlitz3.ab3@23426>   BNE.w JL_0_D67E
00032578 <AmiBlitz3.ab3@23427>   MOVEQ.l #$05,D6
0003257E <AmiBlitz3.ab3@23428>   JSR get1bytemain
00032584 <AmiBlitz3.ab3@23431>   MOVE.w D6,flagmask
0003258A <AmiBlitz3.ab3@23432>   JSR getparameter2
0003258E <AmiBlitz3.ab3@23433>   BEQ.w JUMP_syntaxerr
00032594 <AmiBlitz3.ab3@23434>   MOVEA.l thistype,A2
00032596 <AmiBlitz3.ab3@23435>   ADDQ.w #4,A2
0003259C <AmiBlitz3.ab3@23436>   JSR findvariable2
000325A0 <AmiBlitz3.ab3@23437>   BEQ.w JUMP_dupofferr
000325A6 <AmiBlitz3.ab3@23438>   JSR addlabel
000325A8 <AmiBlitz3.ab3@23439>   MOVE.l A2,-(A7)
000325AC <AmiBlitz3.ab3@23440>   CMP.w #$2E,D0
000325B0 <AmiBlitz3.ab3@23441>    BEQ.w JL_0_D6CE
000325B4 <AmiBlitz3.ab3@23442>   CMP.w #$24,D0
000325B8 <AmiBlitz3.ab3@23443>    BNE.w JL_0_D6C0
000325BE <AmiBlitz3.ab3@23444>   MOVE.l #newtype_string,D2
000325C4 <AmiBlitz3.ab3@23445>    JSR get1bytemain
000325C8 <AmiBlitz3.ab3@23446> BRA.w JL_0_D710
000325CE <AmiBlitz3.ab3@23449> JMP dupofferr
000325D4 <AmiBlitz3.ab3@23452>   MOVE.l prevtype,D2
000325D8 <AmiBlitz3.ab3@23453>   BEQ.w JUMP_notypeerr
000325DC <AmiBlitz3.ab3@23454> BRA.w JL_0_D706
000325E2 <AmiBlitz3.ab3@23457> JMP notypeerr
000325E8 <AmiBlitz3.ab3@23460>   JSR getparameter2
000325EC <AmiBlitz3.ab3@23461>    BEQ.w JUMP_syntaxerr
000325F2 <AmiBlitz3.ab3@23462>   LEA newtypebase,A2
000325F8 <AmiBlitz3.ab3@23463>    JSR findtype
000325FC <AmiBlitz3.ab3@23464>    BEQ.w JL_0_D704
00032604 <AmiBlitz3.ab3@23465>   BTST #$0,flagmask+1
00032608 <AmiBlitz3.ab3@23466>    BEQ.w JUMP_notypeerr
0003260E <AmiBlitz3.ab3@23467>   JSR addlabel
00032616 <AmiBlitz3.ab3@23470>   MOVE.w linenumat+2,$8(A2)
0003261E <AmiBlitz3.ab3@23471>   MOVE.l #MaxByte,$4(A2)
00032620 <AmiBlitz3.ab3@23474>   MOVE.l A2,D2
00032626 <AmiBlitz3.ab3@23477>   CMP.l #newtype_byte,D2
0003262A <AmiBlitz3.ab3@23478>    BEQ.w JL_0_D71E
00032630 <AmiBlitz3.ab3@23481>   ADDQ.w #1,typelen
00032638 <AmiBlitz3.ab3@23482>   BCLR #$0,typelen+1
0003263A <AmiBlitz3.ab3@23485>   MOVEQ.l #$00,D3
0003263C <AmiBlitz3.ab3@23486>   MOVEA.l D2,A2
00032642 <AmiBlitz3.ab3@23487>   MOVE.l A2,prevtype
00032646 <AmiBlitz3.ab3@23488>   MOVE.w $8(A2),D3
00032648 <AmiBlitz3.ab3@23489>   MOVEA.l (A7)+,A2
0003264C <AmiBlitz3.ab3@23490>   MOVE.l D2,$A(A2)
0003264E <AmiBlitz3.ab3@23491>   MOVEQ.l #$00,D4
00032654 <AmiBlitz3.ab3@23492>   MOVE.w typelen,D4
00032658 <AmiBlitz3.ab3@23493>   MOVE.w D4,$4(A2)
00032660 <AmiBlitz3.ab3@23494>   BTST #$0,flagmask+1
00032664 <AmiBlitz3.ab3@23495>    BEQ.w JL_0_D74C
00032666 <AmiBlitz3.ab3@23496>   MOVEQ.l #$04,D3
0003266A <AmiBlitz3.ab3@23499>   CMP.w #$5B,D0
0003266E <AmiBlitz3.ab3@23500>    BNE.w JL_0_D782
00032672 <AmiBlitz3.ab3@23501>   MOVEM.l D3-D4/A2,-(A7)
00032676 <AmiBlitz3.ab3@23502>    BSR.w AJL_0_BF6E
0003267A <AmiBlitz3.ab3@23503>   CMP.w #$5D,D0
0003267E <AmiBlitz3.ab3@23504>    BNE.w JUMP_syntaxerr
00032680 <AmiBlitz3.ab3@23505>   TST.w D6
00032684 <AmiBlitz3.ab3@23506>    BNE.w JUMP_fpconerr
00032686 <AmiBlitz3.ab3@23507>   MOVE.l D3,D1
0003268A <AmiBlitz3.ab3@23508>   MOVEM.l (A7)+,D3-D4/A2
00032690 <AmiBlitz3.ab3@23509>    JSR get1bytemain
00032694 <AmiBlitz3.ab3@23510>   MOVE.w D1,$8(A2)
00032698 <AmiBlitz3.ab3@23511>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000326A0 <AmiBlitz3.ab3@23512>   ORI.w #$2,flagmask
000326A2 <AmiBlitz3.ab3@23515>   ADD.l D3,D4
000326A8 <AmiBlitz3.ab3@23518>     CMP.l #65532,d4
000326AC <AmiBlitz3.ab3@23523>   BCC JUMP_toolongerr
000326B4 <AmiBlitz3.ab3@23524>   MOVE.w flagmask,$6(A2)
000326BA <AmiBlitz3.ab3@23525>   MOVE.w D4,typelen
000326BC <AmiBlitz3.ab3@23526> RTS
000326C2 <AmiBlitz3.ab3@23529> JMP badenderr
000326C8 <AmiBlitz3.ab3@23532> JMP noiferr
000326CE <AmiBlitz3.ab3@23535> JMP toolongerr
000326D4 <AmiBlitz3.ab3@23538> JMP fpconerr
000326DA <AmiBlitz3.ab3@23541>   MOVE.l firstiff,D0
000326DE <AmiBlitz3.ab3@23542>    BEQ.w JUMP_noiferr
000326E0 <AmiBlitz3.ab3@23543>   MOVEA.l D0,A0
000326E4 <AmiBlitz3.ab3@23544>   MOVE.w $C(A0),D0
000326E8 <AmiBlitz3.ab3@23545>   ANDI.w #$FF,D0
000326EA <AmiBlitz3.ab3@23546>   CMP.w D0,D1
000326EE <AmiBlitz3.ab3@23547>    BNE.w JUMP_badenderr
000326F2 <AmiBlitz3.ab3@23550>   CMP.w #$1,D1
000326F6 <AmiBlitz3.ab3@23551>   BNE.w JL_0_D7D8
000326FA <AmiBlitz3.ab3@23552>   MOVE.w #$6000,D1
00032700 <AmiBlitz3.ab3@23555>     TST.b fast
00032704 <AmiBlitz3.ab3@23556>     BEQ 'l1
0003270A <AmiBlitz3.ab3@23557>     OR.l #$ff,d1
0003270E <AmiBlitz3.ab3@23561>   BSR.w writeword
00032714 <AmiBlitz3.ab3@23562>   MOVEA.l destpointer,A1
00032718 <AmiBlitz3.ab3@23563>   MOVE.l $4(A0),D1
0003271A <AmiBlitz3.ab3@23564>   SUB.l A1,D1
00032720 <AmiBlitz3.ab3@23567>     TST.b fast
00032724 <AmiBlitz3.ab3@23568>     BEQ 'l2
00032728 <AmiBlitz3.ab3@23569>     BSR writelong
0003272C <AmiBlitz3.ab3@23570>   BRA JL_0_D7D8
00032730 <AmiBlitz3.ab3@23574>   BSR.w writeword
00032734 <AmiBlitz3.ab3@23577>   MOVEA.l $8(A0),A1                                        ;write if branch destination
0003273A <AmiBlitz3.ab3@23578>   MOVE.l destpointer,D1
0003273C <AmiBlitz3.ab3@23579>   SUB.l A1,D1
00032742 <AmiBlitz3.ab3@23582>     TST.b fast
00032746 <AmiBlitz3.ab3@23583>     BEQ 'l1
00032748 <AmiBlitz3.ab3@23584>     ADDQ.l #4,D1
0003274E <AmiBlitz3.ab3@23585>     MOVE.w dontwrite,D0
00032752 <AmiBlitz3.ab3@23586>     BNE.w JL_0_D7FE
00032756 <AmiBlitz3.ab3@23587>     MOVE.l d1,-$4(a1)
0003275A <AmiBlitz3.ab3@23588>   BRA JL_0_D7FE
0003275C <AmiBlitz3.ab3@23592>   ADDQ.l #2,d1
00032762 <AmiBlitz3.ab3@23593>   TST.w dontwrite
00032766 <AmiBlitz3.ab3@23594>   BNE JL_0_D7FE
0003276C <AmiBlitz3.ab3@23595>   CMP.l #MinWordSgnd,D1
00032770 <AmiBlitz3.ab3@23596>   BCC.w JUMP_bigiferr
00032774 <AmiBlitz3.ab3@23597>   MOVE.w D1,-$2(A1)
00032776 <AmiBlitz3.ab3@23600> RTS
0003277C <AmiBlitz3.ab3@23603> JMP bigiferr
00032786 <AmiBlitz3.ab3@23608>   MOVE.w oldqflag,instringon
0003278C <AmiBlitz3.ab3@23609>   MOVEA.l lastsourcepos,A5
0003278E <AmiBlitz3.ab3@23612>   MOVEQ.l #$01,D1
00032792 <AmiBlitz3.ab3@23613> BRA.w JL_0_D810
0003279C <AmiBlitz3.ab3@23617>   MOVE.w oldqflag,instringon
000327A2 <AmiBlitz3.ab3@23618>   MOVEA.l lastsourcepos,A5
000327A4 <AmiBlitz3.ab3@23621>   MOVEQ.l #$00,D1
000327A8 <AmiBlitz3.ab3@23624>   BSR.w JL_0_D79E
000327AC <AmiBlitz3.ab3@23625>   BSR.w AJL_0_D81C
000327B2 <AmiBlitz3.ab3@23626> JMP get1bytemain
000327B8 <AmiBlitz3.ab3@23629>   MOVE.l (A0),firstiff
000327BA <AmiBlitz3.ab3@23630>   MOVEA.l A0,A1
000327BC <AmiBlitz3.ab3@23631>   MOVEQ.l #$0E,D0
000327C2 <AmiBlitz3.ab3@23632>   MOVEA.l _execbase,A6
000327C8 <AmiBlitz3.ab3@23633>   MOVE.l mempool,a0
000327CC <AmiBlitz3.ab3@23634> JMP _FreePooled(A6)
000327D2 <AmiBlitz3.ab3@23638>   JSR get1bytemain
000327D6 <AmiBlitz3.ab3@23641>   BEQ.w JL_0_D980
000327DE <AmiBlitz3.ab3@23642>   CMP.l #"noa7",-1(a5)
000327E2 <AmiBlitz3.ab3@23643>   BNE 'l1
000327E8 <AmiBlitz3.ab3@23644>   JSR get1bytemain
000327EE <AmiBlitz3.ab3@23645>   JSR get1bytemain
000327F4 <AmiBlitz3.ab3@23646>   JSR get1bytemain
000327FC <AmiBlitz3.ab3@23647>   MOVE.w #$3a,lastchar
00032800 <AmiBlitz3.ab3@23648> BRA JL_0_D980
00032806 <AmiBlitz3.ab3@23651>   CMP.w #"d0",-1(a5)
0003280A <AmiBlitz3.ab3@23652>   BNE 'l2
00032812 <AmiBlitz3.ab3@23653>   MOVE.b #1,returncode
00032818 <AmiBlitz3.ab3@23654>   CLR.w lastchar
0003281C <AmiBlitz3.ab3@23655> BRA JL_0_D980
00032820 <AmiBlitz3.ab3@23658>   CMP.w #$80d7,d0
00032824 <AmiBlitz3.ab3@23659>   BNE JL_0_D836
0003282A <AmiBlitz3.ab3@23660>   JSR skiprest
0003282C <AmiBlitz3.ab3@23661> RTS
00032830 <AmiBlitz3.ab3@23664>   BSR.w JL_0_D844
00032836 <AmiBlitz3.ab3@23665>   JSR reget
0003283A <AmiBlitz3.ab3@23666>   BNE.w JL_0_D836
0003283C <AmiBlitz3.ab3@23667> RTS
00032840 <AmiBlitz3.ab3@23670>   CMP.w #-$7FFF,D0
00032844 <AmiBlitz3.ab3@23671>    BNE.w JL_0_D87E
0003284A <AmiBlitz3.ab3@23672>   MOVE.w linemode,D1
0003284E <AmiBlitz3.ab3@23673>    BNE.w JUMP_modeerr
00032854 <AmiBlitz3.ab3@23674>   ADDQ.w #1,typelen
0003285C <AmiBlitz3.ab3@23675>   BCLR #$0,typelen+1
00032862 <AmiBlitz3.ab3@23676>   MOVEA.l thistype,A0
0003286A <AmiBlitz3.ab3@23677>   MOVE.w typelen,$8(A0)
00032872 <AmiBlitz3.ab3@23678>   MOVE.w #$FFFF,linemode
00032878 <AmiBlitz3.ab3@23679> JMP get1bytemain
0003287E <AmiBlitz3.ab3@23682> JMP modeerr
00032882 <AmiBlitz3.ab3@23685>   CMP.w #-$7FF5,D0
00032886 <AmiBlitz3.ab3@23686>    BEQ.w JL_0_D80E
0003288A <AmiBlitz3.ab3@23687>   CMP.w #-$7FF4,D0
0003288E <AmiBlitz3.ab3@23688>    BEQ.w JL_0_D804
00032892 <AmiBlitz3.ab3@23689>   CMP.w #-$7FF8,D0
00032896 <AmiBlitz3.ab3@23690>    BNE.w JL_0_D89A
0003289A <AmiBlitz3.ab3@23693> BRA.w JL_0_D9E8
000328A0 <AmiBlitz3.ab3@23696> JMP interr3
000328A4 <AmiBlitz3.ab3@23699>   CMP.w #-$7FF7,D0
000328A8 <AmiBlitz3.ab3@23700>    BNE.w JL_0_D8C8
000328AE <AmiBlitz3.ab3@23701>    TST.b fpu
000328B2 <AmiBlitz3.ab3@23702>    BEQ 'nof
000328B8 <AmiBlitz3.ab3@23703>    MOVEA.l currentfunction,A0
000328BE <AmiBlitz3.ab3@23704>    CMP.l #0,a0
000328C2 <AmiBlitz3.ab3@23705>    BEQ 'nof
000328C8 <AmiBlitz3.ab3@23706>    CMP.b #5,$5(a0)
000328CC <AmiBlitz3.ab3@23707>     BNE 'nof
000328D2 <AmiBlitz3.ab3@23708>    MOVE.l #$f23c5000,d1
000328D6 <AmiBlitz3.ab3@23709>    BSR writelong
000328DA <AmiBlitz3.ab3@23710>    MOVE.w #0,d1
000328DE <AmiBlitz3.ab3@23711>    BSR writeword
000328E2 <AmiBlitz3.ab3@23714>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000328E6 <AmiBlitz3.ab3@23715>    BSR.w writeword
000328EC <AmiBlitz3.ab3@23716>   MOVEA.l currentfunction,A0
000328F2 <AmiBlitz3.ab3@23717>   CMP.l #0,a0
000328F6 <AmiBlitz3.ab3@23718>   BEQ JL_0_D896
000328FC <AmiBlitz3.ab3@23719>   MOVE.l destpointer,d1
00032900 <AmiBlitz3.ab3@23720>   SUB.l $e(a0),d1
00032904 <AmiBlitz3.ab3@23721>   MOVE.l d1,isfunc+1(a0)
0003290A <AmiBlitz3.ab3@23722>   CMPI.b #$7,$5(A0)
0003290E <AmiBlitz3.ab3@23723>    BNE.w JL_0_D896
00032914 <AmiBlitz3.ab3@23724>   MOVE.w putstlen,D1
00032918 <AmiBlitz3.ab3@23725>    BSR.w writeword
0003291C <AmiBlitz3.ab3@23726> BRA.w JL_0_D896
00032922 <AmiBlitz3.ab3@23729> JMP interr
00032926 <AmiBlitz3.ab3@23732>  CMP.w #-$7FD0,D0
0003292A <AmiBlitz3.ab3@23733>    BNE.w JL_0_D966
00032930 <AmiBlitz3.ab3@23734>   MOVE.w proceduremode,D1
00032934 <AmiBlitz3.ab3@23735>    BNE.w JUMP_interr3
0003293A <AmiBlitz3.ab3@23736>   TST.b debugmode
0003293E <AmiBlitz3.ab3@23737>    BEQ.w JL_0_D90A
00032940 <AmiBlitz3.ab3@23738>   MOVEQ.l #$03,D1
00032946 <AmiBlitz3.ab3@23739>    JSR writetrap
0003294C <AmiBlitz3.ab3@23740>   MOVE.w dontwrite,D1
00032950 <AmiBlitz3.ab3@23741>    BNE.w JL_0_D90A
00032956 <AmiBlitz3.ab3@23742>   MOVEA.l intcleanat,A0
0003295C <AmiBlitz3.ab3@23743>   MOVE.l destpointer,(A0)
00032960 <AmiBlitz3.ab3@23744>   MOVE.w #$C30C,D1
00032964 <AmiBlitz3.ab3@23745>    BSR.w Atokejsr
0003296A <AmiBlitz3.ab3@23748>   MOVE.w intstring,D1
0003296E <AmiBlitz3.ab3@23749>    BEQ.w JUMP_interr
00032972 <AmiBlitz3.ab3@23750>    BPL.w JL_0_D934
00032978 <AmiBlitz3.ab3@23751>   MOVE.w intlevel,D1
0003297C <AmiBlitz3.ab3@23752>   ORI.w #$7200,D1
00032980 <AmiBlitz3.ab3@23753>    BSR.w writeword
00032984 <AmiBlitz3.ab3@23754>   MOVE.w #$C103,D1
00032988 <AmiBlitz3.ab3@23755>    BSR.w Atokejsr
0003298E <AmiBlitz3.ab3@23756>   CLR.w intlevel
00032994 <AmiBlitz3.ab3@23759>  CLR.w intstring
0003299A <AmiBlitz3.ab3@23760>   MOVE.l intfin,D1
0003299E <AmiBlitz3.ab3@23761>    BSR.w writelong
000329A4 <AmiBlitz3.ab3@23762>   MOVE.l #$70004E75,D1
000329A8 <AmiBlitz3.ab3@23763>    BSR.w writelong
000329AE <AmiBlitz3.ab3@23764>   MOVE.w dontwrite,D1
000329B2 <AmiBlitz3.ab3@23765>    BNE.w JL_0_D962
000329B8 <AmiBlitz3.ab3@23766>   MOVEA.l intjmpat,A0
000329BC <AmiBlitz3.ab3@23767>   MOVE.l destpointer(PC),(A0)
000329C2 <AmiBlitz3.ab3@23770> JMP get1bytemain
000329C6 <AmiBlitz3.ab3@23774>   CMP.w #-$7FF2,D0
000329CA <AmiBlitz3.ab3@23775>    BEQ.w doendsel
000329CE <AmiBlitz3.ab3@23776>   CMP.w #-$7F4C,D0
000329D2 <AmiBlitz3.ab3@23777>    BNE.w JL_0_D97C
000329D8 <AmiBlitz3.ab3@23778> JMP doendseterr
000329DE <AmiBlitz3.ab3@23782> JMP syntaxerr
000329E4 <AmiBlitz3.ab3@23786>   TST.w dirmode
000329E8 <AmiBlitz3.ab3@23787>   BNE.w JUMP_baddirerr
000329EC <AmiBlitz3.ab3@23788>   MOVE.w #$C800,D1
000329F2 <AmiBlitz3.ab3@23789>   JSR Atokejsr                                            ;end
000329FA <AmiBlitz3.ab3@23790>   CMP.l #"noa7",-4(a5)
000329FE <AmiBlitz3.ab3@23791>   BNE 'l10
00032A04 <AmiBlitz3.ab3@23792>   TST.w dontwrite
00032A08 <AmiBlitz3.ab3@23793>   BNE 'l10
00032A0E <AmiBlitz3.ab3@23794>   MOVE.l destpointer,d1
00032A10 <AmiBlitz3.ab3@23795>   SUBQ.l #4,d1
00032A12 <AmiBlitz3.ab3@23796>   MOVE.l a0,-(a7)
00032A14 <AmiBlitz3.ab3@23797>   MOVE.l d1,a0
00032A16 <AmiBlitz3.ab3@23798>   MOVE.l (a0),a0
00032A1C <AmiBlitz3.ab3@23799>   MOVE.l #$60000002,(a0)+
00032A20 <AmiBlitz3.ab3@23800>   MOVE.w #$588f,(a0)
00032A22 <AmiBlitz3.ab3@23801>   MOVE.l (a7)+,a0
00032A24 <AmiBlitz3.ab3@23804> RTS
00032A2A <AmiBlitz3.ab3@23808>   TST.w dirmode                                            ;stop
00032A2E <AmiBlitz3.ab3@23809>   BNE.w JUMP_baddirerr
00032A30 <AmiBlitz3.ab3@23810>   MOVE.w d0,d1
00032A34 <AmiBlitz3.ab3@23811>   BEQ 'l10
00032A38 <AmiBlitz3.ab3@23812>   CMP.b #$3a,d0
00032A3C <AmiBlitz3.ab3@23813>   BEQ 'l10
00032A42 <AmiBlitz3.ab3@23814>   JSR get1bytemain
00032A48 <AmiBlitz3.ab3@23817>   TST.b debugmode
00032A4C <AmiBlitz3.ab3@23818>   BEQ.w newstop
00032A50 <AmiBlitz3.ab3@23819>   MOVE.w #$D501,D1
00032A54 <AmiBlitz3.ab3@23820> BRA.w Atokejsr
00032A56 <AmiBlitz3.ab3@23824>     RTS
00032A58 <AmiBlitz3.ab3@23826>   MOVE.w d1,d0
00032A5C <AmiBlitz3.ab3@23827>   BEQ 'l10
00032A60 <AmiBlitz3.ab3@23828>   CMP.b #$3a,d0
00032A64 <AmiBlitz3.ab3@23829>   BEQ 'l10
00032A68 <AmiBlitz3.ab3@23830>   SUB.b #$30,d0
00032A6C <AmiBlitz3.ab3@23831>   MOVE.w #$4e40,d1
00032A70 <AmiBlitz3.ab3@23832> BRA 'l11
00032A74 <AmiBlitz3.ab3@23835>   MOVE.w #$4e4a,d1
00032A78 <AmiBlitz3.ab3@23836> BRA writeword
00032A7A <AmiBlitz3.ab3@23839>   ADD.b d0,d1
00032A7E <AmiBlitz3.ab3@23840> BRA writeword
00032A84 <AmiBlitz3.ab3@23844> JMP badconterr
00032A88 <AmiBlitz3.ab3@23847>   MOVE.w #$4E71,D1
00032A8C <AmiBlitz3.ab3@23848> BRA.w writeword
00032A92 <AmiBlitz3.ab3@23851>   MOVEA.l firstfor,A2
00032A98 <AmiBlitz3.ab3@23852>   CLR.l firstfor
00032A9E <AmiBlitz3.ab3@23853>   MOVEA.l _execbase,A6
00032AA2 <AmiBlitz3.ab3@23856>   CMPA.w #$0,A2
00032AA6 <AmiBlitz3.ab3@23857>   BEQ.w JL_0_D9E6
00032AA8 <AmiBlitz3.ab3@23858>   MOVEA.l A2,A1
00032AAA <AmiBlitz3.ab3@23859>   MOVEA.l (A1),A2
00032AAC <AmiBlitz3.ab3@23860>   MOVEQ.l #$00,D0
00032AB2 <AmiBlitz3.ab3@23861>   MOVE.l mempool2,a0
00032AB6 <AmiBlitz3.ab3@23862>   MOVE.b $10(A1),D0
00032ABA <AmiBlitz3.ab3@23863>   JSR _FreePooled(A6)                                      ;freememfor_error
00032ABE <AmiBlitz3.ab3@23864> BRA.w JL_0_D9CC
00032AC0 <AmiBlitz3.ab3@23867> RTS
00032AC6 <AmiBlitz3.ab3@23871> JMP badpenderr
00032ACC <AmiBlitz3.ab3@23877>   MOVE.w proceduremode,D1
00032AD0 <AmiBlitz3.ab3@23878>    BEQ.w JUMP_badpenderr
00032AD6 <AmiBlitz3.ab3@23880>   MOVE.w dontwrite,D1
00032ADA <AmiBlitz3.ab3@23881>    BNE.w JL_0_DA1A
00032AE0 <AmiBlitz3.ab3@23882>   MOVEA.l firstpend,A2
00032AE4 <AmiBlitz3.ab3@23885>   CMPA.w #$0,A2
00032AE8 <AmiBlitz3.ab3@23886>    BEQ.w JL_0_DA1A
00032AEC <AmiBlitz3.ab3@23887>   MOVEA.l $4(A2),A0
00032AF2 <AmiBlitz3.ab3@23888>   MOVE.l destpointer,(A0)
00032AF4 <AmiBlitz3.ab3@23889>   MOVEA.l (A2),A2
00032AF8 <AmiBlitz3.ab3@23890> BRA.w JL_0_DA02
00032AFE <AmiBlitz3.ab3@23893>   TST.b debugmode
00032B02 <AmiBlitz3.ab3@23894>    BEQ.b JL_0_DA2A
00032B04 <AmiBlitz3.ab3@23895>   MOVEQ.l #$05,D1
00032B0A <AmiBlitz3.ab3@23896>   JSR writetrap
00032B10 <AmiBlitz3.ab3@23899>   MOVEA.l firstlocal,A2                                    ;firstlocal
00032B16 <AmiBlitz3.ab3@23900>   JSR calcstatic2b                                           ;calcstatic
00032B1C <AmiBlitz3.ab3@23901>   MOVEA.l currentfunction,A0
00032B22 <AmiBlitz3.ab3@23902>   MOVE.l destpointer,d1
00032B26 <AmiBlitz3.ab3@23903>   SUB.l $e(a0),d1
00032B2A <AmiBlitz3.ab3@23904>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00032B2E <AmiBlitz3.ab3@23905>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00032B34 <AmiBlitz3.ab3@23906>   MOVE.l D3,locdatast
00032B3A <AmiBlitz3.ab3@23907>   MOVEA.l tempvm,A1
00032B40 <AmiBlitz3.ab3@23908>  CLR.b infunctioncode
00032B46 <AmiBlitz3.ab3@23909>   MOVE.l firstiffstore,d1
00032B4C <AmiBlitz3.ab3@23910>   CMP.l firstiff,d1
00032B50 <AmiBlitz3.ab3@23911>   BNE JUMP_noenderr
00032B54 <AmiBlitz3.ab3@23912>   TST.w $C(A1)                                             ;dim
00032B58 <AmiBlitz3.ab3@23913>    BPL.w JL_0_DA64
00032B5E <AmiBlitz3.ab3@23914>  BSET #$7,$8(A0)
00032B62 <AmiBlitz3.ab3@23915>   MOVE.w #$C005,D1
00032B66 <AmiBlitz3.ab3@23916>    BSR.w tokejsr2                                          ;writefreememstatement
00032B6A <AmiBlitz3.ab3@23917> BRA.w JL_0_DA6C
00032B70 <AmiBlitz3.ab3@23920> JMP noenderr
00032B78 <AmiBlitz3.ab3@23923>   MOVE.w memlibstat,$C(A1)
00032B7E <AmiBlitz3.ab3@23926>   MOVEA.l currentfunction,A0
00032B82 <AmiBlitz3.ab3@23927>   MOVE.l $E(A0),-(A7)
00032B8A <AmiBlitz3.ab3@23928>   MOVE.w locvaroff,$6(A0)
00032B90 <AmiBlitz3.ab3@23929>   BCLR #$1,$7(A0)
00032B96 <AmiBlitz3.ab3@23930>   BCLR #$0,$7(A0)
00032B9C <AmiBlitz3.ab3@23931>   CMPI.b #$7,$5(A0)
00032BA0 <AmiBlitz3.ab3@23932>    BNE.w JL_0_DA9E
00032BA6 <AmiBlitz3.ab3@23933>   MOVE.w getstlen,D1
00032BAA <AmiBlitz3.ab3@23934>    BSR.w writeword
00032BAE <AmiBlitz3.ab3@23937>   TST.w $6(A0)
00032BB2 <AmiBlitz3.ab3@23938>    BEQ.w JL_0_DAB8
00032BB6 <AmiBlitz3.ab3@23939>   MOVE.w #$FC7B,D1
00032BBC <AmiBlitz3.ab3@23940>    JSR uselib
00032BC2 <AmiBlitz3.ab3@23941>   MOVE.w unlinka4,D1
00032BC6 <AmiBlitz3.ab3@23942>    BSR.w writeword
00032BCC <AmiBlitz3.ab3@23945>   MOVEA.l currentfunction,A0
00032BCE <AmiBlitz3.ab3@23946>   MOVEQ.l #$00,D1
00032BD2 <AmiBlitz3.ab3@23947>   MOVE.b $4(A0),D1
00032BD4 <AmiBlitz3.ab3@23948>   LSR.w #4,D1
00032BD8 <AmiBlitz3.ab3@23949>    BEQ.w JL_0_DB24
00032BDA <AmiBlitz3.ab3@23951>      LSL.w #1,d1
00032BDE <AmiBlitz3.ab3@23953>   CMP.w #$1,D1
00032BE2 <AmiBlitz3.ab3@23954>    BNE.w JL_0_DAE0
00032BE8 <AmiBlitz3.ab3@23955>   MOVE.w fix1,D1
00032BEC <AmiBlitz3.ab3@23956>    BSR.w writeword
00032BF0 <AmiBlitz3.ab3@23957> BRA.w JL_0_DB24
00032BF2 <AmiBlitz3.ab3@23960>   LSL.w #2,D1
00032BF4 <AmiBlitz3.ab3@23961>   MOVE.w D1,-(A7)
00032BFA <AmiBlitz3.ab3@23962>   MOVE.w D1,moverts+2
00032C00 <AmiBlitz3.ab3@23963>   MOVE.l moverts,D1
00032C06 <AmiBlitz3.ab3@23964>    JSR writelong
00032C08 <AmiBlitz3.ab3@23965>   MOVE.w (A7)+,D1
00032C0C <AmiBlitz3.ab3@23966>   CMP.w #$8,D1
00032C10 <AmiBlitz3.ab3@23967>    BHI.w JL_0_DB14
00032C14 <AmiBlitz3.ab3@23968>   ANDI.w #$7,D1
00032C16 <AmiBlitz3.ab3@23969>   LSL.w #8,D1
00032C18 <AmiBlitz3.ab3@23970>   LSL.w #1,D1
00032C1E <AmiBlitz3.ab3@23971>   OR.w fixq,D1
00032C24 <AmiBlitz3.ab3@23972>    JSR writeword
00032C28 <AmiBlitz3.ab3@23973> BRA.w JL_0_DB24
00032C2E <AmiBlitz3.ab3@23977>    MOVE.w D1,fixstack+2
00032C34 <AmiBlitz3.ab3@23978>   MOVE.l fixstack,D1
00032C3A <AmiBlitz3.ab3@23979>    JSR writelong
00032C3E <AmiBlitz3.ab3@23982>    BSR.w JL_0_D2CA
00032C42 <AmiBlitz3.ab3@23983>    BSR.w JL_0_D4F8
00032C44 <AmiBlitz3.ab3@23984>   MOVEA.l (A7)+,A0
00032C4A <AmiBlitz3.ab3@23985>   MOVE.w dontwrite,D1
00032C4E <AmiBlitz3.ab3@23986>    BNE.w JL_0_DB3E
00032C54 <AmiBlitz3.ab3@23987>   MOVE.l destpointer,-(A0)
00032C5A <AmiBlitz3.ab3@23990>   CLR.w proceduremode
00032C60 <AmiBlitz3.ab3@23991>   CLR.l currentfunction
00032C66 <AmiBlitz3.ab3@23992>   CLR.w procnum
00032C6A <AmiBlitz3.ab3@23993>    BSR.w JL_0_DB5C
00032C70 <AmiBlitz3.ab3@23994>    JSR freepends
00032C76 <AmiBlitz3.ab3@23995> JMP get1bytemain
00032C78 <AmiBlitz3.ab3@23998>   MOVEQ.l #$0C,D0
00032C7A <AmiBlitz3.ab3@23999>   MOVEQ.l #$01,D1
00032C80 <AmiBlitz3.ab3@24000>   MOVEA.l _execbase,A6
00032C86 <AmiBlitz3.ab3@24002>   MOVE.l mempool,a0
00032C8A <AmiBlitz3.ab3@24003>   JSR _AllocPooled(a6)
00032C8C <AmiBlitz3.ab3@24004>   MOVEA.l D0,A0
00032C92 <AmiBlitz3.ab3@24005>   MOVE.l alllocals,(A0)
00032C98 <AmiBlitz3.ab3@24006>   MOVE.l A0,alllocals
00032C9E <AmiBlitz3.ab3@24007>   MOVE.l firstlocal,D0
00032CA4 <AmiBlitz3.ab3@24008>   CLR.l firstlocal
00032CA8 <AmiBlitz3.ab3@24009>   MOVE.l D0,$4(A0)
00032CAE <AmiBlitz3.ab3@24010>   MOVE.l firstglob,D1
00032CB4 <AmiBlitz3.ab3@24011>   CLR.l firstglob
00032CB8 <AmiBlitz3.ab3@24012>   MOVE.l D1,$8(A0)
00032CBE <AmiBlitz3.ab3@24013>   TST.b debugmode
00032CC2 <AmiBlitz3.ab3@24014>    BEQ.b JL_0_DBB0
00032CC8 <AmiBlitz3.ab3@24015>   TST.w dontwrite
00032CCC <AmiBlitz3.ab3@24016>    BNE.b JL_0_DBB0
00032CD0 <AmiBlitz3.ab3@24017>   MOVEA.l proclocals(PC),A0
00032CD2 <AmiBlitz3.ab3@24018>   MOVE.l D0,(A0)+
00032CD4 <AmiBlitz3.ab3@24019>   MOVE.l D1,(A0)
00032CD6 <AmiBlitz3.ab3@24022> RTS
00032CDC <AmiBlitz3.ab3@24025> JMP baddirerr
00032CE2 <AmiBlitz3.ab3@24029>   TST.w dirmode
00032CE6 <AmiBlitz3.ab3@24030>    BNE.w JUMP_baddirerr
00032CEC <AmiBlitz3.ab3@24031>   MOVE.l firstfor,D1
00032CF0 <AmiBlitz3.ab3@24032>    BEQ.w JUMP_noforerr
00032CF6 <AmiBlitz3.ab3@24033>   JSR reget
00032CFA <AmiBlitz3.ab3@24034>    BEQ.w JL_0_DC18
00032CFE <AmiBlitz3.ab3@24037>   BSR.w getparameter
00032D02 <AmiBlitz3.ab3@24038>   MOVEA.l firstfor(PC),A2
00032D04 <AmiBlitz3.ab3@24039>   MOVEQ.l #$00,D1
00032D08 <AmiBlitz3.ab3@24040>   MOVE.b $10(A2),D1
00032D0C <AmiBlitz3.ab3@24041>   SUBI.w #$12,D1
00032D0E <AmiBlitz3.ab3@24042>   CMP.w D1,D2
00032D12 <AmiBlitz3.ab3@24043>    BNE.w JUMP_noforerr
00032D16 <AmiBlitz3.ab3@24044>   LEA ptr_parameterstore(PC),A0
00032D1A <AmiBlitz3.ab3@24045>   LEA $11(A2),A1
00032D1C <AmiBlitz3.ab3@24046>   SUBQ.w #1,D2
00032D1E <AmiBlitz3.ab3@24049>     CMPM.b (A0)+,(A1)+
00032D22 <AmiBlitz3.ab3@24050>     BNE.w JUMP_noforerr
00032D26 <AmiBlitz3.ab3@24051>   DBF D2,JL_0_DBF0
00032D2A <AmiBlitz3.ab3@24053>    BSR.w JL_0_DC1A
00032D30 <AmiBlitz3.ab3@24054>    JSR reget
00032D34 <AmiBlitz3.ab3@24055>    BEQ.w JL_0_DC16
00032D38 <AmiBlitz3.ab3@24056>   CMP.w #$2C,D0
00032D3C <AmiBlitz3.ab3@24057>    BNE.w JUMP_syntaxerr
00032D42 <AmiBlitz3.ab3@24058>    JSR get1bytemain
00032D46 <AmiBlitz3.ab3@24059> BRA.w JL_0_DBCE
00032D4C <AmiBlitz3.ab3@24062> JMP noforerr
00032D4E <AmiBlitz3.ab3@24065> RTS
00032D52 <AmiBlitz3.ab3@24069>   MOVE.l 8(a7),a2
00032D56 <AmiBlitz3.ab3@24070>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00032D5A <AmiBlitz3.ab3@24071>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00032D5E <AmiBlitz3.ab3@24072>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00032D60 <AmiBlitz3.ab3@24076>   MOVEA.l D1,A2
00032D66 <AmiBlitz3.ab3@24079>   JSR popnext                                           ;error checking for next.
00032D6A <AmiBlitz3.ab3@24080>   MOVE.w $C(A2),D0
00032D70 <AmiBlitz3.ab3@24081>   LEA nextb,A0
00032D76 <AmiBlitz3.ab3@24082>   LEA nextbf,A1
00032D7A <AmiBlitz3.ab3@24083>   CMP.w #$1,D0
00032D7E <AmiBlitz3.ab3@24084>    BEQ.w JL_0_DC74
00032D84 <AmiBlitz3.ab3@24085>   LEA nextw,A0
00032D8A <AmiBlitz3.ab3@24086>   LEA nextwf,A1
00032D8E <AmiBlitz3.ab3@24087>   CMP.w #$2,D0
00032D92 <AmiBlitz3.ab3@24088>    BEQ.w JL_0_DC74
00032D98 <AmiBlitz3.ab3@24089>   LEA nextl,A0
00032D9E <AmiBlitz3.ab3@24090>   LEA nextlf,A1
00032DA2 <AmiBlitz3.ab3@24091>   CMP.w #$5,D0
00032DA6 <AmiBlitz3.ab3@24092>    BNE.w JL_0_DC74
00032DAC <AmiBlitz3.ab3@24093>    TST.b fpu
00032DB0 <AmiBlitz3.ab3@24094>    BEQ 'old
00032DB6 <AmiBlitz3.ab3@24095>    LEA fpu2dats,a0                                         ;fpu next code
00032DBC <AmiBlitz3.ab3@24096>    LEA fpu2date,a1
00032DC0 <AmiBlitz3.ab3@24097> BRA JL_0_DC74
00032DC4 <AmiBlitz3.ab3@24100>   MOVE.w #$C900,D1
00032DC8 <AmiBlitz3.ab3@24101>    BSR.w Atokejsr
00032DCE <AmiBlitz3.ab3@24102>   LEA nextf,A0
00032DD4 <AmiBlitz3.ab3@24103>   LEA nextff,A1
00032DDA <AmiBlitz3.ab3@24106>   JSR pokecode
00032DE0 <AmiBlitz3.ab3@24107>     TST.b fast                                             ;fast for next deactivate
00032DE4 <AmiBlitz3.ab3@24108> BRA 'l1
00032DEA <AmiBlitz3.ab3@24110>     TST.b onestep
00032DEE <AmiBlitz3.ab3@24111>     BEQ 'l1
00032DF4 <AmiBlitz3.ab3@24112>     CLR.b onestep
00032DFA <AmiBlitz3.ab3@24113>     SUBQ.l #4,destpointer
00032DFE <AmiBlitz3.ab3@24114>     MOVE.w #$5292,d1
00032E04 <AmiBlitz3.ab3@24115>     JSR writeword
00032E08 <AmiBlitz3.ab3@24118>   MOVE.l JL_0_DCF4(PC),D1
00032E0E <AmiBlitz3.ab3@24119>    JSR writelong
00032E14 <AmiBlitz3.ab3@24120>   MOVEA.l firstfor,A2
00032E1A <AmiBlitz3.ab3@24121>   MOVE.l (A2),firstfor
00032E1E <AmiBlitz3.ab3@24122>   MOVEA.l $8(A2),A0
00032E24 <AmiBlitz3.ab3@24123>   MOVEA.l destpointer,A1
00032E26 <AmiBlitz3.ab3@24124>   MOVE.l A1,D1
00032E28 <AmiBlitz3.ab3@24125>   SUB.l A0,D1
00032E2A <AmiBlitz3.ab3@24126>   ADDQ.l #2,D1
00032E30 <AmiBlitz3.ab3@24127>   CMP.l #MinWordSgnd,D1
00032E34 <AmiBlitz3.ab3@24128>    BCC.w JUMP_bigforerr
00032E3A <AmiBlitz3.ab3@24129>   TST.w dontwrite
00032E3E <AmiBlitz3.ab3@24130>    BNE.w JL_0_DCB4
00032E42 <AmiBlitz3.ab3@24131>   MOVE.w D1,-$2(A0)
00032E44 <AmiBlitz3.ab3@24134>   MOVE.l A1,D1
00032E48 <AmiBlitz3.ab3@24135>   SUB.l $4(A2),D1
00032E4A <AmiBlitz3.ab3@24136>   SUBQ.l #6,D1
00032E50 <AmiBlitz3.ab3@24137>   CMP.l #MinWordSgnd,D1
00032E54 <AmiBlitz3.ab3@24138>    BCC.w JUMP_bigforerr
00032E5A <AmiBlitz3.ab3@24139>   TST.w dontwrite
00032E5E <AmiBlitz3.ab3@24140>    BNE.w JL_0_DCD6
00032E60 <AmiBlitz3.ab3@24141>   NEG.w D1
00032E64 <AmiBlitz3.ab3@24142>   MOVE.w D1,-$2(A1)
00032E6A <AmiBlitz3.ab3@24145>   JSR popnext3
00032E70 <AmiBlitz3.ab3@24146>   MOVEA.l _execbase,A6
00032E72 <AmiBlitz3.ab3@24147>   MOVEA.l A2,A1
00032E74 <AmiBlitz3.ab3@24148>   MOVEQ.l #$00,D0
00032E78 <AmiBlitz3.ab3@24149>   MOVE.b $10(A1),D0
00032E7E <AmiBlitz3.ab3@24150>   MOVE.l mempool2,a0
00032E82 <AmiBlitz3.ab3@24151>   JSR _FreePooled(A6)
00032E88 <AmiBlitz3.ab3@24152> JMP reget
00032E8E <AmiBlitz3.ab3@24155> JMP notallowd
00032E94 <AmiBlitz3.ab3@24158> JMP bigforerr
00032E98 <AmiBlitz3.ab3@24165>   MOVE.w #$664F,-(A7)
00032E9C <AmiBlitz3.ab3@24168> BRA.w JL_0_DCF4
00032EA2 <AmiBlitz3.ab3@24171> JMP error_dublicate_for
00032EA6 <AmiBlitz3.ab3@24174> forlineat:   Ds.l 1
00032EA8 <AmiBlitz3.ab3@24175> fortemp:     Ds.w 1
00032EAE <AmiBlitz3.ab3@24182>   CLR.l fp0addr
00032EB4 <AmiBlitz3.ab3@24183>   TST.w dirmode
00032EB8 <AmiBlitz3.ab3@24184>    BNE.w JUMP_baddirerr
00032EC2 <AmiBlitz3.ab3@24185>   MOVE.l linenumat,forlineat
00032EC8 <AmiBlitz3.ab3@24189>   MOVE.l A5,letstart
00032ECC <AmiBlitz3.ab3@24190>   BSR.w getparameter
00032ED2 <AmiBlitz3.ab3@24191>   MOVE.w D2,fortemp
00032ED8 <AmiBlitz3.ab3@24192>   JSR findfor
00032EDC <AmiBlitz3.ab3@24193>    BEQ.w JUMP_error_dublicate_for
00032EE2 <AmiBlitz3.ab3@24194>   LEA firstfor,A2
00032EE8 <AmiBlitz3.ab3@24195>   JSR addhere2
00032EEA <AmiBlitz3.ab3@24196>   MOVE.l A2,-(A7)
00032EF0 <AmiBlitz3.ab3@24197>   TST.b debugmode
00032EF4 <AmiBlitz3.ab3@24198>    BEQ.b JL_0_DD4C
00032EFA <AmiBlitz3.ab3@24199>   JSR chkstak
00032F00 <AmiBlitz3.ab3@24200>   MOVE.l AJL_0_DCF0,D1
00032F06 <AmiBlitz3.ab3@24201>   JSR  writelong
00032F0A <AmiBlitz3.ab3@24204>   MOVE.w fortemp(PC),D2
00032F12 <AmiBlitz3.ab3@24205>   MOVE.b #1,formode
00032F16 <AmiBlitz3.ab3@24206>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00032F1C <AmiBlitz3.ab3@24207>   CLR.b formode
00032F20 <AmiBlitz3.ab3@24208>   CMP.w #-$7FE8,D0
00032F24 <AmiBlitz3.ab3@24209>    BNE.w JUMP_syntaxerr
00032F2A <AmiBlitz3.ab3@24210>   MOVE.w commode,D1
00032F2E <AmiBlitz3.ab3@24211>    BNE.w JUMP_syntaxerr
00032F32 <AmiBlitz3.ab3@24212>   CMP.b #$6,D2
00032F36 <AmiBlitz3.ab3@24213>    BCC.w JUMP_badforerr
00032F3A <AmiBlitz3.ab3@24214>   BTST #$F,D2
00032F3E <AmiBlitz3.ab3@24215>    BNE.w JL_0_DD86
00032F44 <AmiBlitz3.ab3@24216>   MOVE.w leaamp,D1
00032F4A <AmiBlitz3.ab3@24217>   JSR pokewda5s
00032F4C <AmiBlitz3.ab3@24218>   MOVE.w D3,D1
00032F52 <AmiBlitz3.ab3@24219>   JSR  writeword
00032F58 <AmiBlitz3.ab3@24222>   MOVE.w pushindex,D1
00032F5E <AmiBlitz3.ab3@24223>   JSR  writeword
00032F62 <AmiBlitz3.ab3@24224>   ANDI.w #$FF,D2
00032F64 <AmiBlitz3.ab3@24226>   MOVEA.l (A7),A1
00032F68 <AmiBlitz3.ab3@24227>   MOVE.w D2,$C(A1)
00032F6A <AmiBlitz3.ab3@24228>   MOVE.w D2,-(A7)
00032F6E <AmiBlitz3.ab3@24229>    BSR.w eval
00032F74 <AmiBlitz3.ab3@24230>    CLR.b onestep
00032F78 <AmiBlitz3.ab3@24231>    CMP.w #$8019,d0
00032F7C <AmiBlitz3.ab3@24232>    BEQ 'l1
00032F84 <AmiBlitz3.ab3@24233>    MOVE.b #1,onestep
00032F86 <AmiBlitz3.ab3@24236>   MOVE.w (A7),D2
00032F8C <AmiBlitz3.ab3@24237>   MOVE.w pushd0l,D1
00032F90 <AmiBlitz3.ab3@24238>   CMP.w #$3,D2
00032F94 <AmiBlitz3.ab3@24239>    BCC.w JL_0_DDB6
00032F9A <AmiBlitz3.ab3@24240>   MOVE.w pushd0wd,D1
00032F9C <AmiBlitz3.ab3@24243>    MOVE.w D1,-(A7)
00032FA2 <AmiBlitz3.ab3@24244>    TST.b fpu
00032FA6 <AmiBlitz3.ab3@24245>    BEQ 'old
00032FAA <AmiBlitz3.ab3@24246>    CMP.b #5,d2
00032FAE <AmiBlitz3.ab3@24247>    BNE 'old
00032FB4 <AmiBlitz3.ab3@24248>    MOVE.l #$f2276400,d1
00032FBA <AmiBlitz3.ab3@24250>    JSR writelong
00032FBE <AmiBlitz3.ab3@24251> BRA 'weit
00032FC4 <AmiBlitz3.ab3@24254>    JSR  writeword                                          ;fpu for end value
00032FC8 <AmiBlitz3.ab3@24257>   CMP.w #-$7FE7,D0
00032FCC <AmiBlitz3.ab3@24258>    BNE.w JL_0_DDCC
00032FD0 <AmiBlitz3.ab3@24259>    BSR.w eval
00032FD6 <AmiBlitz3.ab3@24260>    TST.b fpu
00032FDA <AmiBlitz3.ab3@24261>    BEQ JL_0_DE0C
00032FDE <AmiBlitz3.ab3@24262>    CMP.b #5,d2
00032FE2 <AmiBlitz3.ab3@24263>    BNE JL_0_DE0C
00032FE8 <AmiBlitz3.ab3@24264>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00032FEE <AmiBlitz3.ab3@24266>   JSR writelong
00032FF0 <AmiBlitz3.ab3@24269>    MOVE.w (a7)+,d1
00032FF4 <AmiBlitz3.ab3@24270> BRA fpur
00032FF8 <AmiBlitz3.ab3@24273>   CMP.w #$4,D2
00032FFC <AmiBlitz3.ab3@24274>    BCC.w JL_0_DDE0
00033000 <AmiBlitz3.ab3@24275>   MOVE.w #$7001,D1
00033006 <AmiBlitz3.ab3@24276>   JSR writeword
0003300A <AmiBlitz3.ab3@24277> BRA.w JL_0_DE0C
00033010 <AmiBlitz3.ab3@24280> JMP badforerr
00033014 <AmiBlitz3.ab3@24283>   BNE.w JL_0_DDFA
00033018 <AmiBlitz3.ab3@24284>   MOVE.w #$7001,D1
0003301E <AmiBlitz3.ab3@24285>   JSR writeword
00033024 <AmiBlitz3.ab3@24286>   MOVE.w swapd0,D1
0003302A <AmiBlitz3.ab3@24287>   JSR writeword
0003302E <AmiBlitz3.ab3@24288> BRA.w JL_0_DE0C
00033034 <AmiBlitz3.ab3@24291>   TST.b fpu
00033038 <AmiBlitz3.ab3@24292>    BEQ 'old
0003303C <AmiBlitz3.ab3@24293>   CMP.b #5,d2
00033040 <AmiBlitz3.ab3@24294>    BNE 'old
00033046 <AmiBlitz3.ab3@24295>   MOVE.l #$f23c5000,d1
0003304C <AmiBlitz3.ab3@24296>   JSR writelong
00033050 <AmiBlitz3.ab3@24297>   MOVE.w #$1,d1
00033056 <AmiBlitz3.ab3@24298>   JSR writeword
0003305C <AmiBlitz3.ab3@24299>   MOVE.l #$f2276400,d1
00033062 <AmiBlitz3.ab3@24300>   JSR writelong
00033064 <AmiBlitz3.ab3@24301>   MOVE.w (a7)+,d1
00033068 <AmiBlitz3.ab3@24302> BRA fpur
0003306C <AmiBlitz3.ab3@24305>   MOVE.w #$203C,D1                                         ;write step 1
00033072 <AmiBlitz3.ab3@24306>   JSR writeword
00033078 <AmiBlitz3.ab3@24307>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
0003307E <AmiBlitz3.ab3@24308>   JSR writelong
00033080 <AmiBlitz3.ab3@24311>   MOVE.w (A7)+,D1
00033086 <AmiBlitz3.ab3@24312>   JSR writeword                                            ;push step on stack
00033088 <AmiBlitz3.ab3@24315>   MOVE.w (A7)+,D2
0003308A <AmiBlitz3.ab3@24316>   MOVEA.l (A7),A1
00033092 <AmiBlitz3.ab3@24317>   MOVE.l destpointer,$4(A1)
00033098 <AmiBlitz3.ab3@24318>   LEA forcompb,A0
0003309E <AmiBlitz3.ab3@24319>   LEA forcompbf,A1
000330A2 <AmiBlitz3.ab3@24320>   CMP.w #$1,D2
000330A6 <AmiBlitz3.ab3@24321>    BEQ.w JL_0_DE7E
000330AC <AmiBlitz3.ab3@24322>   LEA forcompw,A0
000330B2 <AmiBlitz3.ab3@24323>   LEA forcompwf,A1
000330B6 <AmiBlitz3.ab3@24324>   CMP.w #$2,D2
000330BA <AmiBlitz3.ab3@24325>    BEQ.w JL_0_DE7E
000330C0 <AmiBlitz3.ab3@24326>   LEA forcompl,A0
000330C6 <AmiBlitz3.ab3@24327>   LEA forcomplf,A1
000330CA <AmiBlitz3.ab3@24328>   CMP.w #$5,D2
000330CE <AmiBlitz3.ab3@24329>    BNE.w JL_0_DE7E
000330D4 <AmiBlitz3.ab3@24330>   TST.b fpu
000330D8 <AmiBlitz3.ab3@24331>    BEQ 'old
000330DE <AmiBlitz3.ab3@24332>   LEA fpu_start,a0
000330E4 <AmiBlitz3.ab3@24333>   LEA fpu_end,a1
000330EA <AmiBlitz3.ab3@24334>   JSR pokecode
000330EE <AmiBlitz3.ab3@24335> BRA fpu3
000330F4 <AmiBlitz3.ab3@24338>   LEA forcompf,A0                                         ;
000330FA <AmiBlitz3.ab3@24339>   LEA forcompff,A1
00033100 <AmiBlitz3.ab3@24340>   JSR pokecode
00033104 <AmiBlitz3.ab3@24341>   MOVE.w #$C900,D1
00033108 <AmiBlitz3.ab3@24342>   BSR.w Atokejsr
0003310E <AmiBlitz3.ab3@24343>   LEA forcompf2,A0
00033114 <AmiBlitz3.ab3@24344>   LEA forcompf2f,A1
0003311A <AmiBlitz3.ab3@24347>   JSR pokecode
00033120 <AmiBlitz3.ab3@24348>   TST.b fast                                               ;fast for next
00033124 <AmiBlitz3.ab3@24349>    BEQ 's1
00033128 <AmiBlitz3.ab3@24350>   CMP.w #3,d2
0003312C <AmiBlitz3.ab3@24351>    BNE 's1
00033132 <AmiBlitz3.ab3@24352>   TST.b onestep
00033136 <AmiBlitz3.ab3@24353>    BEQ 's1
00033140 <AmiBlitz3.ab3@24354>   SUB.l #10,destpointer
00033144 <AmiBlitz3.ab3@24355>   MOVE.w #$b081,d1
0003314A <AmiBlitz3.ab3@24356>   JSR writeword
0003314E <AmiBlitz3.ab3@24360>   MOVE.l thebgt(PC),D1
00033154 <AmiBlitz3.ab3@24361>   JSR writelong
00033156 <AmiBlitz3.ab3@24364>   MOVEA.l (A7)+,A1
0003315E <AmiBlitz3.ab3@24365>   MOVE.l destpointer,$8(A1)
00033164 <AmiBlitz3.ab3@24366> JMP reget
00033168 <AmiBlitz3.ab3@24369>   MOVEA.l 8(a7),a2
0003316C <AmiBlitz3.ab3@24370>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033172 <AmiBlitz3.ab3@24371>   fmove.s 4(a7),fp1
00033176 <AmiBlitz3.ab3@24372>   BTST.b #7,(a7)
0003317A <AmiBlitz3.ab3@24373>   BNE 'negi
0003317E <AmiBlitz3.ab3@24374>   fcmp.x fp1,fp0
00033182 <AmiBlitz3.ab3@24375> BRA 'negi2
00033186 <AmiBlitz3.ab3@24378>   fcmp.x fp0,fp1
0003318A <AmiBlitz3.ab3@24381>   Dc.l $f2920000                                           ;fbgt.w
0003318E <AmiBlitz3.ab3@24385>   BGT.w thebgt
00033194 <AmiBlitz3.ab3@24388>   MOVE.l A5,letstart
00033198 <AmiBlitz3.ab3@24389>   BSR.w getparameter
000331A2 <AmiBlitz3.ab3@24395>   MOVE.l destpointer,pushpc
000331AC <AmiBlitz3.ab3@24396>   MOVE.l hunkoffsetbase,pushoff
000331B2 <AmiBlitz3.ab3@24397>   CLR.l rightsidetype
000331BA <AmiBlitz3.ab3@24398>   MOVE.w #$0001,regnum
000331C0 <AmiBlitz3.ab3@24399>   JSR JL_0_8E3C
000331C6 <AmiBlitz3.ab3@24400>   JSR calcvar
000331CC <AmiBlitz3.ab3@24401>   TST.b formode
000331D0 <AmiBlitz3.ab3@24402>   BEQ 'lf1
000331D6 <AmiBlitz3.ab3@24403>   CMP.l #newtype_double,A2
000331DA <AmiBlitz3.ab3@24404>   BEQ JUMP_notallowd
000331E0 <AmiBlitz3.ab3@24405>   MOVE.l a2,currtype
000331E6 <AmiBlitz3.ab3@24408>   CLR.w startoffsetmore
000331EA <AmiBlitz3.ab3@24409>   CMP.w #$3d,d0
000331EE <AmiBlitz3.ab3@24410>   BNE 'l1a
000331F2 <AmiBlitz3.ab3@24411>   BTST #15,d2
000331F6 <AmiBlitz3.ab3@24412>   BEQ 'l1a
000331FA <AmiBlitz3.ab3@24413>   CMP.b #1,d2
000331FE <AmiBlitz3.ab3@24414>   BNE 'l1a
00033208 <AmiBlitz3.ab3@24415>   MOVE.w leaa0a0+2,startoffsetmore
0003320E <AmiBlitz3.ab3@24418>   CLR.w regnum
00033212 <AmiBlitz3.ab3@24419>   BSR.w JL_0_B5D2
00033218 <AmiBlitz3.ab3@24420>   CLR.w commode
0003321E <AmiBlitz3.ab3@24421>   CLR.w stackcorrect
00033224 <AmiBlitz3.ab3@24422>   CLR.w pcodd
0003322A <AmiBlitz3.ab3@24423>   MOVE.w startoffsetmore,d1
0003322E <AmiBlitz3.ab3@24424>   BTST #0,d1
00033232 <AmiBlitz3.ab3@24425>   BEQ 'l2a
0003323A <AmiBlitz3.ab3@24426>   MOVE.w #1,pcodd
0003323E <AmiBlitz3.ab3@24429>   CMP.w #$3D,D0                                            ;=
00033242 <AmiBlitz3.ab3@24430>   BEQ.w JL_0_DEE0
00033244 <AmiBlitz3.ab3@24433>   MOVE.b (a5)+,d1
00033248 <AmiBlitz3.ab3@24434>   BEQ 'l10
0003324C <AmiBlitz3.ab3@24435>   CMP.b #":",d1
00033250 <AmiBlitz3.ab3@24436>   BEQ 'l10
00033254 <AmiBlitz3.ab3@24437>   CMP.b #";",d1
00033258 <AmiBlitz3.ab3@24438>   BEQ 'l10
0003325C <AmiBlitz3.ab3@24439>   CMP.b #"0",d1
00033260 <AmiBlitz3.ab3@24440>   BLT 'l11
00033264 <AmiBlitz3.ab3@24441>   CMP.b #"9",d1
00033268 <AmiBlitz3.ab3@24442>   BGT 'l11
0003326C <AmiBlitz3.ab3@24443> BRA.s 'l1
00033274 <AmiBlitz3.ab3@24446>   MOVE.b #1,quickadd
0003327A <AmiBlitz3.ab3@24449>   MOVEA.l letstart,A5
0003327C <AmiBlitz3.ab3@24450>   SUBQ.w #1,A5
00033280 <AmiBlitz3.ab3@24453>   CMP.b #$7,D2
00033284 <AmiBlitz3.ab3@24454>    BNE.w JL_0_DF8A
00033288 <AmiBlitz3.ab3@24460>   MOVEM.w D2-D3,-(A7)
0003328E <AmiBlitz3.ab3@24461>   MOVE.l lastoffset_org,-(A7)
00033294 <AmiBlitz3.ab3@24462>   MOVE.w varmode,-(A7)
0003329E <AmiBlitz3.ab3@24464>    MOVE.l #forthstack,forthsp
000332A8 <AmiBlitz3.ab3@24465>    MOVE.l #precstack,precsp
000332AE <AmiBlitz3.ab3@24466>    CLR.w regnum
000332B4 <AmiBlitz3.ab3@24467>    CLR.w nonew
000332BA <AmiBlitz3.ab3@24468>    CLR.w sbasegot
000332C4 <AmiBlitz3.ab3@24469>    MOVE.w varcodelen,oldvcodelen
000332CA <AmiBlitz3.ab3@24470>    CLR.w varcodelen
000332D2 <AmiBlitz3.ab3@24471>    MOVE.w #$FFFF,lasta6
000332D4 <AmiBlitz3.ab3@24474>   MOVEQ.l #$07,D2
000332D8 <AmiBlitz3.ab3@24475>    BSR.w eval
000332DE <AmiBlitz3.ab3@24476>   MOVE.w (A7)+,varmode
000332E4 <AmiBlitz3.ab3@24477>   MOVE.l (A7)+,lastoffset_org
000332EA <AmiBlitz3.ab3@24478>   MOVE.w moved0a3,D1
000332F0 <AmiBlitz3.ab3@24479>    JSR writeword
000332F6 <AmiBlitz3.ab3@24480>   MOVE.w commode,D1
000332FA <AmiBlitz3.ab3@24481>    BEQ.w JL_0_DF38
00033300 <AmiBlitz3.ab3@24482>   LEA pulla2st,A0
00033306 <AmiBlitz3.ab3@24483>   LEA pulla2stf,A1
0003330C <AmiBlitz3.ab3@24484>    JSR pokecode
00033310 <AmiBlitz3.ab3@24485> BRA.w JL_0_DF3C
00033314 <AmiBlitz3.ab3@24488>   BSR.w JL_0_B63C
00033318 <AmiBlitz3.ab3@24491>   MOVEM.w (A7)+,D2-D3
0003331C <AmiBlitz3.ab3@24492>   BTST #$F,D2
00033320 <AmiBlitz3.ab3@24493>   BNE.w JL_0_DF58
00033326 <AmiBlitz3.ab3@24494>     MOVE.w D3,leaa5d3a2+2
0003332C <AmiBlitz3.ab3@24495>     MOVE.l leaa5d3a2,D1
00033332 <AmiBlitz3.ab3@24496>     JSR pokela5s
00033336 <AmiBlitz3.ab3@24499>   MOVE.w #$FE6F,D1
0003333C <AmiBlitz3.ab3@24500>   JSR uselib
00033342 <AmiBlitz3.ab3@24501>   MOVE.l #$C700,D1
00033348 <AmiBlitz3.ab3@24502>   MOVE.l d1,lastinstruction
0003334E <AmiBlitz3.ab3@24503>   MOVE.w varmode,D2
00033352 <AmiBlitz3.ab3@24504>   BNE.w JL_0_DF70
00033354 <AmiBlitz3.ab3@24505>     ADDQ.w #1,D1
00033358 <AmiBlitz3.ab3@24508>   BSR.w Atokejsr
0003335C <AmiBlitz3.ab3@24509>   CMP.w #$2C,D0
00033360 <AmiBlitz3.ab3@24510>   BNE.w JL_0_E0C6
00033366 <AmiBlitz3.ab3@24512>   MOVE.w addq4a2,D1
0003336C <AmiBlitz3.ab3@24513>   JSR writeword
00033370 <AmiBlitz3.ab3@24514> BRA.w JL_0_E018
00033376 <AmiBlitz3.ab3@24517> JMP error4char
0003337C <AmiBlitz3.ab3@24520> JMP error_convert_types
00033380 <AmiBlitz3.ab3@24524>    BTST #$E,D2
00033384 <AmiBlitz3.ab3@24525>    BNE.w JL_0_DF9C
00033386 <AmiBlitz3.ab3@24526>   TST.b D2
0003338A <AmiBlitz3.ab3@24527>    BEQ.w JUMP_noleterr
00033390 <AmiBlitz3.ab3@24528>    TST.b newsyntax
00033394 <AmiBlitz3.ab3@24529>    BEQ JL_0_DFA0
00033398 <AmiBlitz3.ab3@24532>    CMP.w #$4022,(a5)
0003339C <AmiBlitz3.ab3@24533>    BNE JL_0_DFA0
000333A2 <AmiBlitz3.ab3@24534>    CMP.l #3,d2
000333A6 <AmiBlitz3.ab3@24535>    BNE  JUMP_error_convert_types
000333A8 <AmiBlitz3.ab3@24536>    ADDQ #2,a5
000333AA <AmiBlitz3.ab3@24537>    MOVEQ #0,d0
000333AC <AmiBlitz3.ab3@24538>    MOVE.b (a5)+,d0
000333B0 <AmiBlitz3.ab3@24539>    BEQ JL_0_DFA0
000333B4 <AmiBlitz3.ab3@24540>    CMP.b #$22,d0
000333B8 <AmiBlitz3.ab3@24541>    BNE 'l1
000333BC <AmiBlitz3.ab3@24542>    MOVE.b #0,d0
000333C0 <AmiBlitz3.ab3@24543> BRA 'do
000333C2 <AmiBlitz3.ab3@24546>   ASL.l #8,d0
000333C4 <AmiBlitz3.ab3@24547>    MOVE.b (a5)+,d0
000333C8 <AmiBlitz3.ab3@24548>    BEQ JL_0_DFA0
000333CC <AmiBlitz3.ab3@24549>    CMP.b #$22,d0
000333D0 <AmiBlitz3.ab3@24550>    BNE 'l2
000333D4 <AmiBlitz3.ab3@24551>    MOVE.b #0,d0
000333D6 <AmiBlitz3.ab3@24552>    ASR.l #8,d0
000333DA <AmiBlitz3.ab3@24553> BRA 'do
000333DC <AmiBlitz3.ab3@24556>   ASL.l #8,d0
000333DE <AmiBlitz3.ab3@24557>     MOVE.b (a5)+,d0
000333E2 <AmiBlitz3.ab3@24558>    BEQ JL_0_DFA0
000333E6 <AmiBlitz3.ab3@24559>    CMP.b #$22,d0
000333EA <AmiBlitz3.ab3@24560>    BNE 'l3
000333EE <AmiBlitz3.ab3@24561>    MOVE.b #0,d0
000333F0 <AmiBlitz3.ab3@24562>    ASR.l #8,d0
000333F4 <AmiBlitz3.ab3@24563> BRA 'do
000333F6 <AmiBlitz3.ab3@24566>   ASL.l #8,d0
000333F8 <AmiBlitz3.ab3@24567>     MOVE.b (a5)+,d0
000333FC <AmiBlitz3.ab3@24568>    BEQ JL_0_DFA0
00033400 <AmiBlitz3.ab3@24569>    CMP.b #$22,d0
00033404 <AmiBlitz3.ab3@24570>    BNE 'l4
00033408 <AmiBlitz3.ab3@24571>    MOVE.b #0,d0
0003340A <AmiBlitz3.ab3@24572>    ASR.l #8,d0
0003340E <AmiBlitz3.ab3@24573> BRA 'do
00033412 <AmiBlitz3.ab3@24576>    CMP.b #$22,(a5)+
00033416 <AmiBlitz3.ab3@24577>    BNE JUMP_error4char
0003341A <AmiBlitz3.ab3@24580>   MOVE.w #$2b7c,d1
00033420 <AmiBlitz3.ab3@24581>    TST.w varmode
00033424 <AmiBlitz3.ab3@24582>    BEQ 'g3
00033428 <AmiBlitz3.ab3@24583>    BCLR #9,d1
0003342E <AmiBlitz3.ab3@24586>     JSR writeword
00033430 <AmiBlitz3.ab3@24587>     MOVE.l d0,d1
00033436 <AmiBlitz3.ab3@24588>     JSR writelong
00033438 <AmiBlitz3.ab3@24589>     MOVE.w d3,d1
0003343E <AmiBlitz3.ab3@24590>     JSR writeword
00033444 <AmiBlitz3.ab3@24591>     JSR get1bytemain
00033446 <AmiBlitz3.ab3@24592> RTS
0003344C <AmiBlitz3.ab3@24598> JMP noleterr
00033452 <AmiBlitz3.ab3@24602>   MOVE.w d2,vartype
00033456 <AmiBlitz3.ab3@24603>   MOVE.b #$3,D2
0003345A <AmiBlitz3.ab3@24606>   CMP.b #5,d2
0003345E <AmiBlitz3.ab3@24607>   BNE 'l1
00033464 <AmiBlitz3.ab3@24608>   MOVE.l a2,currtype
00033468 <AmiBlitz3.ab3@24612>   MOVEM.w D2-D3,-(A7)
0003346E <AmiBlitz3.ab3@24613>   MOVE.w varmode,-(A7)
00033474 <AmiBlitz3.ab3@24614>   MOVE.l a2,leftsidetype
00033478 <AmiBlitz3.ab3@24615>   BTST #$f,d2
0003347C <AmiBlitz3.ab3@24616>   BEQ 'nomultiassign
00033482 <AmiBlitz3.ab3@24617>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033486 <AmiBlitz3.ab3@24618> 'nomultiassign  ANDI.w #$FF,D2
0003348C <AmiBlitz3.ab3@24619>   MOVE.l lastoffset_org,-(A7)
00033490 <AmiBlitz3.ab3@24620>   BSR.w eval                                ; calc right side of var assign
00033494 <AmiBlitz3.ab3@24622>   MOVEM.l a0/a1,-(a7)
0003349A <AmiBlitz3.ab3@24623>   MOVE.l leftsidetype,a0
000334A0 <AmiBlitz3.ab3@24624>   CMP.l #0,a0
000334A4 <AmiBlitz3.ab3@24625>   BEQ 'nocheck
000334AC <AmiBlitz3.ab3@24626>   CMP.l #$100,4(a0)
000334B0 <AmiBlitz3.ab3@24627>   BLE 'nocheck
000334B6 <AmiBlitz3.ab3@24628>   TST.l typetocast
000334BA <AmiBlitz3.ab3@24629>   BEQ 'nocast
000334C0 <AmiBlitz3.ab3@24630>   MOVE.l typetocast,a1
000334C4 <AmiBlitz3.ab3@24631>   BRA 'typecheck
000334CA <AmiBlitz3.ab3@24632> 'nocast  TST.l rightsidetype
000334CE <AmiBlitz3.ab3@24633>   BEQ 'nocheck
000334D4 <AmiBlitz3.ab3@24634>   MOVE.l rightsidetype,a1
000334DC <AmiBlitz3.ab3@24635>   CMP.l #$100,4(a1)
000334E0 <AmiBlitz3.ab3@24636>   BGE 'typecheck
000334E8 <AmiBlitz3.ab3@24637>   CMP.l #$3,4(a1)
000334EC <AmiBlitz3.ab3@24638>   BEQ 'ok                              ;long assign is allow with this codelines
000334F0 <AmiBlitz3.ab3@24639>   BRA 'error
000334F6 <AmiBlitz3.ab3@24641>   TST.b typecheck
000334FA <AmiBlitz3.ab3@24642>   BEQ 'nocheck
00033500 <AmiBlitz3.ab3@24643>   TST.b notypecheck
00033504 <AmiBlitz3.ab3@24644>   BNE 'ok
00033506 <AmiBlitz3.ab3@24645>   CMP.l a0,a1
0003350A <AmiBlitz3.ab3@24646>   BEQ 'ok
0003350E <AmiBlitz3.ab3@24648>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033512 <AmiBlitz3.ab3@24649>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033516 <AmiBlitz3.ab3@24650>   BEQ 'ok
0003351C <AmiBlitz3.ab3@24652>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033522 <AmiBlitz3.ab3@24655>    CLR.l typetocast
00033526 <AmiBlitz3.ab3@24656>    MOVEM.l (a7)+, a0/a1
0003352C <AmiBlitz3.ab3@24657>   MOVE.l (A7)+,lastoffset_org
00033532 <AmiBlitz3.ab3@24658>   MOVE.w commode,D1
00033536 <AmiBlitz3.ab3@24659>    BNE.w JL_0_DFCC
0003353A <AmiBlitz3.ab3@24660>    BSR.w JL_0_B63C
00033540 <AmiBlitz3.ab3@24663>   MOVE.w (A7)+,varmode
00033544 <AmiBlitz3.ab3@24664>   MOVEM.w (A7)+,D2-D3
00033548 <AmiBlitz3.ab3@24666>   MOVE.w #$2B40,D1
0003354E <AmiBlitz3.ab3@24667>   MOVE.w varmode,D4
00033552 <AmiBlitz3.ab3@24668>    BEQ.w JL_0_DFE8
00033556 <AmiBlitz3.ab3@24669>   BCLR #$9,D1
0003355A <AmiBlitz3.ab3@24672>   BTST #$F,D2
0003355E <AmiBlitz3.ab3@24673>    BEQ.w JL_0_E090
00033564 <AmiBlitz3.ab3@24674>    TST.b stackcorrect
00033568 <AmiBlitz3.ab3@24675>    BNE 'st1
0003356E <AmiBlitz3.ab3@24676>   MOVE.w commode,D1
00033572 <AmiBlitz3.ab3@24677>    BEQ.w JL_0_E004
00033578 <AmiBlitz3.ab3@24680>   MOVE.w pulla2,D1
0003357E <AmiBlitz3.ab3@24681>    JSR writeword
00033582 <AmiBlitz3.ab3@24684>   MOVE.w #$2480,D1
00033586 <AmiBlitz3.ab3@24685>    MOVEM.l a0/d0,-(a7)
0003358C <AmiBlitz3.ab3@24686>    MOVEA.l lastoffset_org,A0
0003358E <AmiBlitz3.ab3@24687>    MOVE.l A0,D0
00033592 <AmiBlitz3.ab3@24688>    BEQ.w 'skip
00033594 <AmiBlitz3.ab3@24689>    MOVEA.l D0,A0
0003359C <AmiBlitz3.ab3@24690>    MOVE.l $A(A0),currtype
000335A0 <AmiBlitz3.ab3@24693>   MOVEM.l (a7)+,a0/d0
000335A4 <AmiBlitz3.ab3@24694>   CMP.w #$2C,D0
000335A8 <AmiBlitz3.ab3@24695>    BNE.w JL_0_E090
000335AC <AmiBlitz3.ab3@24696>     MOVE.w #$24C0,D1
000335B0 <AmiBlitz3.ab3@24697>    BSR.w JL_0_E090                                         ;write store
000335B6 <AmiBlitz3.ab3@24700>    MOVE.l lastoffset_org,D0
000335BE <AmiBlitz3.ab3@24704>   MOVE.w #$FFFF,commode
000335C4 <AmiBlitz3.ab3@24705>   CLR.w varcodelen
000335CC <AmiBlitz3.ab3@24706>   MOVE.b #1,optiarray
000335D2 <AmiBlitz3.ab3@24707>   MOVE.w pusha2,D1
000335D8 <AmiBlitz3.ab3@24708>    JSR writeword
000335DE <AmiBlitz3.ab3@24709>   TST.l lastoffset_org
000335E2 <AmiBlitz3.ab3@24710>   BEQ dimmore
000335E8 <AmiBlitz3.ab3@24711>   MOVEA.l lastoffset_org,A0
000335EA <AmiBlitz3.ab3@24712>   MOVE.l (A0),D0
000335EE <AmiBlitz3.ab3@24713>    BEQ.w JUMP_comerr
000335F0 <AmiBlitz3.ab3@24714>   MOVEA.l D0,A0
000335F6 <AmiBlitz3.ab3@24715>   MOVE.l A0,lastoffset_org
000335FC <AmiBlitz3.ab3@24716>   BTST #$1,$7(A0)
00033600 <AmiBlitz3.ab3@24717>    BNE.w JUMP_nocomerr
00033604 <AmiBlitz3.ab3@24718>   MOVEA.l $A(A0),A1
00033608 <AmiBlitz3.ab3@24719>   MOVE.l $4(A1),D2
0003360E <AmiBlitz3.ab3@24722>   BTST #$0,$7(A0)
00033612 <AmiBlitz3.ab3@24723>    BNE.w JL_0_E078
00033618 <AmiBlitz3.ab3@24724>   CMP.l #$100,D2
0003361C <AmiBlitz3.ab3@24725>    BCC.l JUMP_nocomerr
00033620 <AmiBlitz3.ab3@24726> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00033626 <AmiBlitz3.ab3@24729>         CLR.b optiarray
0003362A <AmiBlitz3.ab3@24730>         CMP.w #"@@",(a5)
0003362E <AmiBlitz3.ab3@24731>         BEQ 'n1
00033632 <AmiBlitz3.ab3@24732> BRA 'd1
00033638 <AmiBlitz3.ab3@24735>   JSR nextline
0003363A <AmiBlitz3.ab3@24736>         MOVE.l a5,-(a7)
0003363C <AmiBlitz3.ab3@24739>   MOVE.b (a5)+,d0
00033640 <AmiBlitz3.ab3@24740>         CMP.b #$20,d0
00033644 <AmiBlitz3.ab3@24741>         BEQ 'l2
00033646 <AmiBlitz3.ab3@24742>         MOVE.l (a7)+,a5
0003364A <AmiBlitz3.ab3@24743>         CMP.b #";",d0
0003364E <AmiBlitz3.ab3@24744>         BEQ 'n1
00033654 <AmiBlitz3.ab3@24747>         TST.w debugmode
00033658 <AmiBlitz3.ab3@24748>         BEQ JL_0_DEE0
0003365A <AmiBlitz3.ab3@24749>         MOVE.l a0,-(a7)
00033660 <AmiBlitz3.ab3@24750>         MOVE.l pushat,a0
00033666 <AmiBlitz3.ab3@24751>         CMP.l #0,a0
0003366A <AmiBlitz3.ab3@24752>         BNE 'o1
0003366E <AmiBlitz3.ab3@24753> BRA 'skip
00033676 <AmiBlitz3.ab3@24756>         ADD.l #1,2(a0)
0003367C <AmiBlitz3.ab3@24759>   CLR.w commode
00033684 <AmiBlitz3.ab3@24760>         MOVE.b #1,stackcorrect
00033686 <AmiBlitz3.ab3@24761>         MOVE.l (a7)+,a0
0003368C <AmiBlitz3.ab3@24762> JMP JL_0_DEE0
00033692 <AmiBlitz3.ab3@24765> JMP nocomerr
00033698 <AmiBlitz3.ab3@24768>   CMP.l #$100,D2
0003369C <AmiBlitz3.ab3@24769>    BCS.w JL_0_E084
0003369E <AmiBlitz3.ab3@24770>   MOVEQ.l #$00,D2
000336A2 <AmiBlitz3.ab3@24773>   BSET #$E,D2
000336A6 <AmiBlitz3.ab3@24776>   BSET #$F,D2
000336AA <AmiBlitz3.ab3@24777> BRA.w JL_0_DEE0
000336B0 <AmiBlitz3.ab3@24780>    MOVE.l destpointer,a4
000336B8 <AmiBlitz3.ab3@24781>    MOVE.l #$f22a6400,-4(a4)
000336BE <AmiBlitz3.ab3@24782>    MOVE.w arrayoffset,d1
000336C4 <AmiBlitz3.ab3@24783> JMP writeword
000336CA <AmiBlitz3.ab3@24786> JMP comerr
000336D0 <AmiBlitz3.ab3@24789>    TST.b fpu
000336D4 <AmiBlitz3.ab3@24790>    BEQ 'nofloat
000336D8 <AmiBlitz3.ab3@24791>    CMP.b #5,d2
000336DC <AmiBlitz3.ab3@24792>    BNE 'nofloat
000336E2 <AmiBlitz3.ab3@24793>    CLR.w fp0var
000336E8 <AmiBlitz3.ab3@24794>    LEA regtable,a4
000336EA <AmiBlitz3.ab3@24795>    TST.l (a4)
000336EE <AmiBlitz3.ab3@24796>    BEQ 'noreg
000336F2 <AmiBlitz3.ab3@24797>    BTST #15,d2                                             ;regvars
000336F6 <AmiBlitz3.ab3@24798>    BNE 'noreg
000336FA <AmiBlitz3.ab3@24799>    CMP.w 0+4(a4),d3
000336FE <AmiBlitz3.ab3@24800>    BNE 'doreg1
00033704 <AmiBlitz3.ab3@24801>    MOVE.l #$f2000380,d1
0003370A <AmiBlitz3.ab3@24802>    MOVE.w regnum,d0
0003370E <AmiBlitz3.ab3@24803>    BNE 'noopt
00033714 <AmiBlitz3.ab3@24809>    MOVE.l destpointer,a4
0003371C <AmiBlitz3.ab3@24810>    CMP.l #$f2001c80,-8(a4)
00033720 <AmiBlitz3.ab3@24811>    BNE 'noopt
00033728 <AmiBlitz3.ab3@24812>    CMP.l #$f2000422,-4(a4)
0003372C <AmiBlitz3.ab3@24813>    BNE 'noopt
00033732 <AmiBlitz3.ab3@24814>    MOVE.l #$f20003a2,d1
0003373C <AmiBlitz3.ab3@24815>    SUB.l #8,destpointer
0003373E <AmiBlitz3.ab3@24818>    ASL.w #7,d0
00033740 <AmiBlitz3.ab3@24819>    OR.w d0,d1
00033746 <AmiBlitz3.ab3@24820>    JSR writelong
00033748 <AmiBlitz3.ab3@24821> RTS
0003374C <AmiBlitz3.ab3@24824>   CMP.w 8+4(a4),d3
00033750 <AmiBlitz3.ab3@24825>    BNE 'doreg2
00033756 <AmiBlitz3.ab3@24826>    MOVE.l #$f2000300,d1
0003375C <AmiBlitz3.ab3@24827>    MOVE.w regnum,d0
0003375E <AmiBlitz3.ab3@24828>    ASL.w #7,d0
00033760 <AmiBlitz3.ab3@24829>    OR.w d0,d1
00033766 <AmiBlitz3.ab3@24830>    JSR writelong
00033768 <AmiBlitz3.ab3@24831> RTS
0003376C <AmiBlitz3.ab3@24834>   CMP.w 16+4(a4),d3
00033770 <AmiBlitz3.ab3@24835>    BNE 'doreg3
00033776 <AmiBlitz3.ab3@24836>    MOVE.l #$f2000280,d1
0003377C <AmiBlitz3.ab3@24837>    MOVE.w regnum,d0
0003377E <AmiBlitz3.ab3@24838>    ASL.w #7,d0
00033780 <AmiBlitz3.ab3@24839>    OR.w d0,d1
00033786 <AmiBlitz3.ab3@24840>    JSR  writelong
00033788 <AmiBlitz3.ab3@24841>  RTS
0003378C <AmiBlitz3.ab3@24844>   CMP.w 24+4(a4),d3
00033790 <AmiBlitz3.ab3@24845>    BNE 'doreg4
00033796 <AmiBlitz3.ab3@24846>    MOVE.l #$f2000200,d1
0003379C <AmiBlitz3.ab3@24847>    MOVE.w regnum,d0
0003379E <AmiBlitz3.ab3@24848>    ASL.w #7,d0
000337A0 <AmiBlitz3.ab3@24849>    OR.w d0,d1
000337A6 <AmiBlitz3.ab3@24850>    JSR writelong
000337A8 <AmiBlitz3.ab3@24851> RTS
000337AC <AmiBlitz3.ab3@24854>   CMP.w 32+4(a4),d3
000337B0 <AmiBlitz3.ab3@24855>    BNE 'noreg
000337B6 <AmiBlitz3.ab3@24856>    MOVE.l #$f2000180,d1
000337BC <AmiBlitz3.ab3@24857>    MOVE.w regnum,d0
000337BE <AmiBlitz3.ab3@24858>    ASL.w #7,d0
000337C0 <AmiBlitz3.ab3@24859>    OR.w d0,d1
000337C6 <AmiBlitz3.ab3@24860>    JSR writelong
000337C8 <AmiBlitz3.ab3@24861> RTS
000337CE <AmiBlitz3.ab3@24864>    TST.w regnum
000337D2 <AmiBlitz3.ab3@24865>    BNE 'nofp0
000337D8 <AmiBlitz3.ab3@24866>    MOVE.l destpointer ,a4
000337E0 <AmiBlitz3.ab3@24867>    CMP.l #$f2304400,-6(a4)
000337E4 <AmiBlitz3.ab3@24868>    BNE 'do
000337EA <AmiBlitz3.ab3@24869>    CMP.w #$1990,-2(a4)
000337EE <AmiBlitz3.ab3@24870>    BNE 'do
000337F2 <AmiBlitz3.ab3@24871>    BTST #15,d2                                             ;types ?
000337F6 <AmiBlitz3.ab3@24872>    BNE 'do
000337FC <AmiBlitz3.ab3@24873>   MOVE.l #$2b701990,d1                                     ;var
00033802 <AmiBlitz3.ab3@24874>   TST.w varmode
00033806 <AmiBlitz3.ab3@24875>   BEQ 'glob1
0003380A <AmiBlitz3.ab3@24876>   BCLR #25,d1
0003380E <AmiBlitz3.ab3@24879>   MOVE.l d1,-6(a4)
00033812 <AmiBlitz3.ab3@24880>   MOVE.w d3,-2(a4)
00033818 <AmiBlitz3.ab3@24881>   CLR.w fp0var
00033820 <AmiBlitz3.ab3@24882>   MOVE.w #$ffff,fp0mode
00033822 <AmiBlitz3.ab3@24883> RTS
0003382A <AmiBlitz3.ab3@24886>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003382E <AmiBlitz3.ab3@24887>    BNE 'do3
00033838 <AmiBlitz3.ab3@24888>    CMP.l #newtype_double,currtype
0003383C <AmiBlitz3.ab3@24889>    BEQ 'do4
00033840 <AmiBlitz3.ab3@24892>   MOVE.w #$2b6d,d1
00033846 <AmiBlitz3.ab3@24893>    TST.w varmode
0003384A <AmiBlitz3.ab3@24894>    BEQ 'g2
0003384E <AmiBlitz3.ab3@24895>     BCLR #9,d1
00033852 <AmiBlitz3.ab3@24898>     CMP.w #$2b6d,d1
00033856 <AmiBlitz3.ab3@24899>     BNE 'd1
0003385A <AmiBlitz3.ab3@24900>     CMP.w -2(a4),d3
0003385E <AmiBlitz3.ab3@24901>     BNE 'd1
00033864 <AmiBlitz3.ab3@24902>     SUBQ.l #6,destpointer
00033868 <AmiBlitz3.ab3@24903> BRA 'd12
0003386C <AmiBlitz3.ab3@24906>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00033872 <AmiBlitz3.ab3@24907>     MOVE.w -2(a4),-4(a4)
00033876 <AmiBlitz3.ab3@24908>     MOVE.w d3,-2(a4)
0003387C <AmiBlitz3.ab3@24911>   CLR.w fp0var
00033884 <AmiBlitz3.ab3@24912>     MOVE.w #$ffff,fp0mode
00033886 <AmiBlitz3.ab3@24913> RTS
0003388E <AmiBlitz3.ab3@24916>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00033892 <AmiBlitz3.ab3@24917>    BNE 'do4
00033896 <AmiBlitz3.ab3@24918>    MOVE.w #$2b6c,d1
0003389C <AmiBlitz3.ab3@24919>       TST.w varmode
000338A0 <AmiBlitz3.ab3@24920>    BEQ 'g3
000338A4 <AmiBlitz3.ab3@24921>    BCLR #9,d1
000338A8 <AmiBlitz3.ab3@24924>   MOVE.w d1,-6(a4)
000338AE <AmiBlitz3.ab3@24925>     MOVE.w -2(a4),-4(a4)
000338B2 <AmiBlitz3.ab3@24926>     MOVE.w d3,-2(a4)
000338B8 <AmiBlitz3.ab3@24927>     CLR.w fp0var
000338C0 <AmiBlitz3.ab3@24928>     MOVE.w #$ffff,fp0mode
000338C2 <AmiBlitz3.ab3@24929> RTS
000338C8 <AmiBlitz3.ab3@24932>   MOVE.w d3,fp0var
000338D2 <AmiBlitz3.ab3@24933>    MOVE.w varmode,fp0mode
000338D4 <AmiBlitz3.ab3@24934>    ADDQ.l #6,a4
000338DA <AmiBlitz3.ab3@24935>    MOVE.l a4,fp0addr
000338E4 <AmiBlitz3.ab3@24936>    MOVE.l firstiff,fp0iff
000338E8 <AmiBlitz3.ab3@24939>   MOVEM.l d0/d4,-(a7)
000338EA <AmiBlitz3.ab3@24940>    MOVEQ #0,d0
000338F0 <AmiBlitz3.ab3@24941>     MOVE.w regnum,d0
000338F2 <AmiBlitz3.ab3@24942>    ASL.w #7,d0                                             ;fpu store var
000338F6 <AmiBlitz3.ab3@24943>   BTST #15,d2
000338FA <AmiBlitz3.ab3@24944>    BEQ 'var
000338FC <AmiBlitz3.ab3@24945>    MOVE.w d1,d4
00033900 <AmiBlitz3.ab3@24946>    CMP.w #$24c0,d4
00033904 <AmiBlitz3.ab3@24947>    BNE 'nopl
0003390A <AmiBlitz3.ab3@24948>    MOVE.l #$f21a6400,d1
0003390C <AmiBlitz3.ab3@24949>    MOVEQ #0,d3
00033910 <AmiBlitz3.ab3@24950> BRA 'glob
00033916 <AmiBlitz3.ab3@24954>   MOVE.l #$f2126400,d1
00033918 <AmiBlitz3.ab3@24955>    TST.w d3                                                ;offset =0
0003391C <AmiBlitz3.ab3@24956>    BNE 'offset
00033922 <AmiBlitz3.ab3@24957>    MOVE.l #$f2126400,d1
00033924 <AmiBlitz3.ab3@24965>    MOVEQ #0,d3
00033928 <AmiBlitz3.ab3@24966> BRA 'glob
0003392E <AmiBlitz3.ab3@24969>   MOVE.l #$f22d6400,d1                                     ;var
00033934 <AmiBlitz3.ab3@24970>   TST.w varmode
00033938 <AmiBlitz3.ab3@24971>   BEQ 'glob
0003393C <AmiBlitz3.ab3@24972>   BCLR #16,d1
0003393E <AmiBlitz3.ab3@24973>  'glob OR.l d0,d1
00033948 <AmiBlitz3.ab3@24976>   CMP.l #newtype_double,currtype
0003394C <AmiBlitz3.ab3@24977>   BNE 'dbl1
00033952 <AmiBlitz3.ab3@24978>   OR.l #$00001000,d1
00033958 <AmiBlitz3.ab3@24981>   JSR writelong
0003395E <AmiBlitz3.ab3@24982>   CLR.l currtype
00033962 <AmiBlitz3.ab3@24983>   MOVEM.l (a7)+,d0/d4
00033964 <AmiBlitz3.ab3@24984>   MOVE.l d3,d1
00033968 <AmiBlitz3.ab3@24985>   BEQ 'nooffs
0003396E <AmiBlitz3.ab3@24986> JMP writeword
00033970 <AmiBlitz3.ab3@24989> RTS
00033976 <AmiBlitz3.ab3@25003>     TST.b fast                                             ;write lea->xx(a2)
0003397A <AmiBlitz3.ab3@25004>    BEQ 'la10
00033980 <AmiBlitz3.ab3@25008>    TST.b quickadd
00033986 <AmiBlitz3.ab3@25010>      CLR.b quickadd
0003398A <AmiBlitz3.ab3@25011>    CMP.w #$2480,d1
0003398E <AmiBlitz3.ab3@25012>    BNE 'la10
00033994 <AmiBlitz3.ab3@25013>    TST.b optiarray
00033998 <AmiBlitz3.ab3@25014>    BNE 'la10
0003399E <AmiBlitz3.ab3@25015>    MOVE.l destpointer,a4
000339A4 <AmiBlitz3.ab3@25016>    CMP.w #$45ea,-4(a4)
000339A8 <AmiBlitz3.ab3@25017>    BNE 'la10
000339B0 <AmiBlitz3.ab3@25018>    CMP.w #8,pushclen
000339B4 <AmiBlitz3.ab3@25019>    BEQ 'la100
000339BC <AmiBlitz3.ab3@25020>    CMP.w #6,pushclen
000339C0 <AmiBlitz3.ab3@25021>    BNE 'la10
000339C4 <AmiBlitz3.ab3@25022>    CMP.b #3,d2
000339C8 <AmiBlitz3.ab3@25023>    BCS 'la110
000339CE <AmiBlitz3.ab3@25025>    MOVE.w #$2540,-2(a4)
000339D4 <AmiBlitz3.ab3@25026>    MOVE.w arrayoffset,d1
000339DA <AmiBlitz3.ab3@25027> JMP writeword
000339E0 <AmiBlitz3.ab3@25030>    CLR.b quickadd
000339E2 <AmiBlitz3.ab3@25031> RTS
000339E6 <AmiBlitz3.ab3@25034>    CMP.b #2,d2
000339EA <AmiBlitz3.ab3@25035>    BNE 'la120
000339F0 <AmiBlitz3.ab3@25036>     MOVE.w #$3540,-2(a4)
000339F6 <AmiBlitz3.ab3@25037>    MOVE.w arrayoffset,d1
000339FC <AmiBlitz3.ab3@25038> JMP writeword
00033A00 <AmiBlitz3.ab3@25041>   CMP.b #1,d2
00033A04 <AmiBlitz3.ab3@25042>    BNE.s 'la10
00033A0A <AmiBlitz3.ab3@25043>     MOVE.w #$1540,-2(a4)
00033A10 <AmiBlitz3.ab3@25044>    MOVE.w arrayoffset,d1
00033A16 <AmiBlitz3.ab3@25045> JMP writeword
00033A1A <AmiBlitz3.ab3@25048>    CMP.b #3,d2
00033A1E <AmiBlitz3.ab3@25049>    BCS 'la11
00033A24 <AmiBlitz3.ab3@25050>    MOVE.w #$2540,-4(a4)
00033A26 <AmiBlitz3.ab3@25051> RTS
00033A2A <AmiBlitz3.ab3@25054>    CMP.b #2,d2
00033A2E <AmiBlitz3.ab3@25055>    BNE 'la12
00033A34 <AmiBlitz3.ab3@25056>     MOVE.w #$3540,-4(a4)
00033A36 <AmiBlitz3.ab3@25057> RTS
00033A3A <AmiBlitz3.ab3@25059>  'la12 CMP.b #1,d2
00033A3E <AmiBlitz3.ab3@25060>    BNE.s 'la10
00033A44 <AmiBlitz3.ab3@25061>     MOVE.w #$1540,-4(a4)
00033A46 <AmiBlitz3.ab3@25062> RTS
00033A4C <AmiBlitz3.ab3@25065>   CLR.b optiarray
00033A50 <AmiBlitz3.ab3@25066>    CMP.b #$1,D2
00033A54 <AmiBlitz3.ab3@25067>    BEQ.w JL_0_E0AC
00033A58 <AmiBlitz3.ab3@25068>    BSR.w varalign
00033A5C <AmiBlitz3.ab3@25069>    CMP.b #$3,D2
00033A60 <AmiBlitz3.ab3@25070>    BCC.w writevarlong
00033A66 <AmiBlitz3.ab3@25071>    TST.b fast                                              ;optiimmi
00033A6A <AmiBlitz3.ab3@25072>    BEQ 'l10b
00033A70 <AmiBlitz3.ab3@25077>    MOVE.l destpointer,a0
00033A76 <AmiBlitz3.ab3@25078>    SUB.l imm_addr,a0
00033A7C <AmiBlitz3.ab3@25079>    CMP.l #4,a0
00033A80 <AmiBlitz3.ab3@25080>    BNE 'l10
00033A86 <AmiBlitz3.ab3@25081>    CLR.l imm_addr
00033A8C <AmiBlitz3.ab3@25082>    MOVE.l destpointer,a4
00033A90 <AmiBlitz3.ab3@25083>    OR.w #$107c,d1
00033A94 <AmiBlitz3.ab3@25084>    MOVE.w d1,-4(a4)
00033A96 <AmiBlitz3.ab3@25085>     MOVE.w D3,D1
00033A9C <AmiBlitz3.ab3@25086> JMP writeword
00033AA2 <AmiBlitz3.ab3@25089>   MOVE.l destpointer,a0
00033AA8 <AmiBlitz3.ab3@25090>   SUB.l load_var_addr,a0
00033AAE <AmiBlitz3.ab3@25091>   CMP.l #4,a0
00033AB2 <AmiBlitz3.ab3@25092>   BNE 'l10b
00033AB8 <AmiBlitz3.ab3@25093>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00033ABC <AmiBlitz3.ab3@25094>   BNE 'l10b
00033AC2 <AmiBlitz3.ab3@25096>   CLR.l load_var_addr
00033AC8 <AmiBlitz3.ab3@25097>   MOVE.l destpointer,a4
00033ACC <AmiBlitz3.ab3@25098>   OR.w #$102d,d1
00033AD0 <AmiBlitz3.ab3@25099>   MOVE.w d1,-4(a4)
00033AD2 <AmiBlitz3.ab3@25100>   MOVE.w d3,d1
00033AD8 <AmiBlitz3.ab3@25101> JMP writeword
00033ADC <AmiBlitz3.ab3@25104>   ORI.w #$1000,D1                                          ;word
00033AE0 <AmiBlitz3.ab3@25105> BRA.w writestorevar
00033AE6 <AmiBlitz3.ab3@25109>    TST.b fast                                              ;optiimmi
00033AEA <AmiBlitz3.ab3@25110>    BEQ 'l10b
00033AF0 <AmiBlitz3.ab3@25115>    MOVE.l destpointer,a0
00033AF6 <AmiBlitz3.ab3@25116>    SUB.l imm_addr,a0
00033AFC <AmiBlitz3.ab3@25117>    CMP.l #4,a0
00033B00 <AmiBlitz3.ab3@25118>    BNE 'l10
00033B06 <AmiBlitz3.ab3@25119>    CLR.l imm_addr
00033B0C <AmiBlitz3.ab3@25120>    MOVE.l destpointer,a4
00033B10 <AmiBlitz3.ab3@25121>    OR.w #$7c,d1
00033B14 <AmiBlitz3.ab3@25122>    EORI #$3000,d1
00033B18 <AmiBlitz3.ab3@25123>    MOVE.w d1,-4(a4)
00033B1A <AmiBlitz3.ab3@25124>       MOVE.w D3,D1
00033B20 <AmiBlitz3.ab3@25125> JMP writeword
00033B26 <AmiBlitz3.ab3@25128>   MOVE.l destpointer,a0
00033B2C <AmiBlitz3.ab3@25129>   SUB.l load_var_addr,a0
00033B32 <AmiBlitz3.ab3@25130>   CMP.l #4,a0
00033B36 <AmiBlitz3.ab3@25131>   BNE 'l10b
00033B3C <AmiBlitz3.ab3@25132>   CLR.l load_var_addr
00033B42 <AmiBlitz3.ab3@25133>   MOVE.l destpointer,a4
00033B48 <AmiBlitz3.ab3@25134>    CMP.w #$1b6d,-4(a4)
00033B4C <AmiBlitz3.ab3@25135>    BNE 'l10b
00033B50 <AmiBlitz3.ab3@25136>    OR.w #$2d,d1
00033B54 <AmiBlitz3.ab3@25137>    EORI #$3000,d1
00033B58 <AmiBlitz3.ab3@25138>    MOVE.w d1,-4(a4)
00033B5A <AmiBlitz3.ab3@25139>   MOVE.w d3,d1
00033B60 <AmiBlitz3.ab3@25140> JMP writeword
00033B66 <AmiBlitz3.ab3@25143>   ADDQ.w #1,pcodd                                          ;byte
00033B6A <AmiBlitz3.ab3@25144>   EORI.w #$3000,D1
00033B70 <AmiBlitz3.ab3@25147>   JSR writeword
00033B74 <AmiBlitz3.ab3@25148>   BTST #$7,D1
00033B78 <AmiBlitz3.ab3@25149>    BNE JL_0_E0C6
00033B7A <AmiBlitz3.ab3@25150>   MOVE.w D3,D1
00033B80 <AmiBlitz3.ab3@25151> JMP writeword
00033B86 <AmiBlitz3.ab3@25154>    TST.b fast                                              ;optiimmi
00033B8A <AmiBlitz3.ab3@25155>    BEQ 'l10b
00033B90 <AmiBlitz3.ab3@25159>    MOVE.l destpointer,a0
00033B96 <AmiBlitz3.ab3@25160>    SUB.l imm_addr,a0
00033B9C <AmiBlitz3.ab3@25161>    CMP.l #6,a0
00033BA0 <AmiBlitz3.ab3@25162>    BNE 'l10
00033BA6 <AmiBlitz3.ab3@25163>    CLR.l imm_addr
00033BAC <AmiBlitz3.ab3@25164>    MOVE.l destpointer,a4
00033BB0 <AmiBlitz3.ab3@25165>    OR.w #$7c,d1
00033BB4 <AmiBlitz3.ab3@25166>    MOVE.w d1,-6(a4)
00033BB6 <AmiBlitz3.ab3@25167>     MOVE.w D3,D1
00033BBC <AmiBlitz3.ab3@25168> JMP writeword
00033BC2 <AmiBlitz3.ab3@25171>   MOVE.l destpointer,a0
00033BC8 <AmiBlitz3.ab3@25172>   SUB.l load_var_addr,a0
00033BCE <AmiBlitz3.ab3@25173>   CMP.l #4,a0
00033BD2 <AmiBlitz3.ab3@25174>   BNE 'l10b
00033BD8 <AmiBlitz3.ab3@25175>   CLR.l load_var_addr
00033BDE <AmiBlitz3.ab3@25176>   MOVE.l destpointer,a4
00033BE4 <AmiBlitz3.ab3@25177>   CMP.w #$245f,-2(a4)
00033BE8 <AmiBlitz3.ab3@25178>   BEQ 'l10b
00033BEC <AmiBlitz3.ab3@25179>   OR.w #$28,d1
00033BF0 <AmiBlitz3.ab3@25180>   OR.w d1,-4(a4)
00033BF6 <AmiBlitz3.ab3@25181>   CMP.w #$2b6d,-4(a4)
00033BFA <AmiBlitz3.ab3@25182>   BNE 'd1
00033BFE <AmiBlitz3.ab3@25183>   CMP.w -2(a4),d3
00033C02 <AmiBlitz3.ab3@25184>   BNE 'd1
00033C08 <AmiBlitz3.ab3@25185>   SUBQ.l #4,destpointer
00033C0A <AmiBlitz3.ab3@25186> RTS
00033C0C <AmiBlitz3.ab3@25189>   MOVE.w d3,d1
00033C12 <AmiBlitz3.ab3@25190> JMP writeword
00033C18 <AmiBlitz3.ab3@25193>   JSR writeword
00033C1C <AmiBlitz3.ab3@25194>   BTST #$7,D1
00033C20 <AmiBlitz3.ab3@25195>    BNE.b JL_0_E0C6
00033C22 <AmiBlitz3.ab3@25196>   MOVE.w D3,D1
00033C28 <AmiBlitz3.ab3@25197> JMP writeword
00033C2A <AmiBlitz3.ab3@25200> RTS
00033C2C <AmiBlitz3.ab3@25204>   MOVE.w D1,-(A7)
00033C30 <AmiBlitz3.ab3@25205>   MOVE.w pcodd(PC),D1
00033C32 <AmiBlitz3.ab3@25206>   LSR.w #1,D1
00033C36 <AmiBlitz3.ab3@25207>    BCC.b JL_0_E0E2
00033C3C <AmiBlitz3.ab3@25208>   CLR.w pcodd
00033C42 <AmiBlitz3.ab3@25209>   MOVE.w add1a2,D1
00033C48 <AmiBlitz3.ab3@25210>    JSR writeword
00033C4A <AmiBlitz3.ab3@25213>   MOVE.w (A7)+,D1
00033C4C <AmiBlitz3.ab3@25214> RTS
00033C4E <AmiBlitz3.ab3@25218> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00033C50 <AmiBlitz3.ab3@25221> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00033C52 <AmiBlitz3.ab3@25222> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00033C54 <AmiBlitz3.ab3@25223> listsize:  Ds.w 1
00033C5A <AmiBlitz3.ab3@25227>   ADDQ.w #1,regnum
00033C62 <AmiBlitz3.ab3@25228>   MOVE.b #1,nowdeclare
00033C68 <AmiBlitz3.ab3@25229>   CLR.b dimkeep
00033C70 <AmiBlitz3.ab3@25230>    CMP.l #"KEEP",-1(a5)
00033C74 <AmiBlitz3.ab3@25231>   BNE 'nokeep
00033C7A <AmiBlitz3.ab3@25232>   CMP.b #" ",3(a5)
00033C7E <AmiBlitz3.ab3@25233>   BNE 'nokeep
00033C80 <AmiBlitz3.ab3@25234>   ADDQ.l #3,a5
00033C84 <AmiBlitz3.ab3@25237>     CMP.b #" ",(a5)
00033C88 <AmiBlitz3.ab3@25238>     BNE '1
00033C8A <AmiBlitz3.ab3@25239>    ADDQ #1,a5
00033C8E <AmiBlitz3.ab3@25240> BRA '2
00033C94 <AmiBlitz3.ab3@25243>   MOVE.l a5,lastsourcepos
00033C9C <AmiBlitz3.ab3@25244>   MOVE.b #1,dimkeep
00033CA0 <AmiBlitz3.ab3@25252>   MOVE.w #$FF9A,D1
00033CA6 <AmiBlitz3.ab3@25253>   JSR uselib
00033CAC <AmiBlitz3.ab3@25256>   CLR.w listadd
00033CB0 <AmiBlitz3.ab3@25257>   CMP.w #-$7F4D,D0
00033CB4 <AmiBlitz3.ab3@25258>    BNE.w JL_0_E11E
00033CBC <AmiBlitz3.ab3@25259>   MOVE.w #$0008,listadd
00033CC0 <AmiBlitz3.ab3@25260>   MOVE.w #$FFFA,D1
00033CC6 <AmiBlitz3.ab3@25261>    JSR uselib
00033CCC <AmiBlitz3.ab3@25262>    JSR get1bytemain
00033CD2 <AmiBlitz3.ab3@25265>   CLR.w nonew
00033CD8 <AmiBlitz3.ab3@25266>    JSR getparameter
00033CE0 <AmiBlitz3.ab3@25267>   BTST #$1,flagmask+1
00033CE4 <AmiBlitz3.ab3@25268>    BEQ.w JUMP_syntaxerr
00033CEA <AmiBlitz3.ab3@25269>    JSR JL_0_8E3C
00033CF0 <AmiBlitz3.ab3@25270>   MOVE.w notshared,D1
00033CF4 <AmiBlitz3.ab3@25271>    BNE.w JL_0_E198
00033CFC <AmiBlitz3.ab3@25272>   MOVE.w $8(A3),temp1
00033D02 <AmiBlitz3.ab3@25273>   MOVE.w proceduremode,D2
00033D06 <AmiBlitz3.ab3@25274>    BNE.w JL_0_E176
00033D0C <AmiBlitz3.ab3@25275>   MOVE.w globalvarpointer,-(A7)
00033D14 <AmiBlitz3.ab3@25276>   MOVE.w $4(A3),globalvarpointer
00033D1A <AmiBlitz3.ab3@25277>   ADDQ.w #4,globalvarpointer
00033D1E <AmiBlitz3.ab3@25278>    BSR.w write_dim_code
00033D24 <AmiBlitz3.ab3@25279>   MOVE.w (A7)+,globalvarpointer
00033D28 <AmiBlitz3.ab3@25280> BRA.w JL_0_E1BA
00033D2E <AmiBlitz3.ab3@25291>   MOVE.w globalvarpointer,-(A7)
00033D34 <AmiBlitz3.ab3@25292>             MOVE.w proceduremode,-(a7)
00033D3A <AmiBlitz3.ab3@25293>             CLR.w proceduremode
00033D42 <AmiBlitz3.ab3@25294>   MOVE.w $4(A3),globalvarpointer
00033D48 <AmiBlitz3.ab3@25295>   ADDQ.w #4,globalvarpointer
00033D4C <AmiBlitz3.ab3@25296>    BSR.w write_dim_code
00033D52 <AmiBlitz3.ab3@25297>    MOVE.w (a7)+,proceduremode
00033D58 <AmiBlitz3.ab3@25298>   MOVE.w (A7)+,globalvarpointer
00033D5C <AmiBlitz3.ab3@25299> BRA.w JL_0_E1BA
00033D64 <AmiBlitz3.ab3@25302>   MOVE.w #$FFFF,temp1
00033D68 <AmiBlitz3.ab3@25303>   MOVE.w listadd(PC),D1
00033D6C <AmiBlitz3.ab3@25304>    BEQ.w JL_0_E1B6
00033D74 <AmiBlitz3.ab3@25305>   MOVE.w #$4000,temp1
00033D7A <AmiBlitz3.ab3@25306>   BSET #$0,$6(A3)
00033D80 <AmiBlitz3.ab3@25309>         TST.w proceduremode
00033D84 <AmiBlitz3.ab3@25310>        BNE 'l1
00033D8A <AmiBlitz3.ab3@25311>        MOVE.w locvaroff,-(a7)
00033D8E <AmiBlitz3.ab3@25314>   BSR.w write_dim_code
00033D94 <AmiBlitz3.ab3@25315>         TST.w proceduremode
00033D98 <AmiBlitz3.ab3@25316>         BNE JL_0_E1BA
00033D9E <AmiBlitz3.ab3@25317>        MOVE.w (A7)+,locvaroff
00033DA4 <AmiBlitz3.ab3@25320>   JSR get1bytemain
00033DA8 <AmiBlitz3.ab3@25321>   CMP.w #$2C,D0
00033DAC <AmiBlitz3.ab3@25322>    BNE.w JL_0_E1CE
00033DB2 <AmiBlitz3.ab3@25323>    JSR get1bytemain
00033DB6 <AmiBlitz3.ab3@25324> BRA.w JL_0_E0FC
00033DB8 <AmiBlitz3.ab3@25327> RTS
00033DC0 <AmiBlitz3.ab3@25330>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00033DC6 <AmiBlitz3.ab3@25331>   MOVE.w beginarr,D1
00033DCC <AmiBlitz3.ab3@25332>    JSR writeword
00033DCE <AmiBlitz3.ab3@25333>   MOVEQ.l #$00,D1
00033DD4 <AmiBlitz3.ab3@25334>    JSR writeword
00033DD6 <AmiBlitz3.ab3@25335>   MOVEQ.l #$04,D1
00033DDE <AmiBlitz3.ab3@25336>   BTST #$0,flagmask+1
00033DE2 <AmiBlitz3.ab3@25337>    BNE.w write_dim_code__pointer
00033DE6 <AmiBlitz3.ab3@25338>   MOVE.w $8(A2),D1
00033DEA <AmiBlitz3.ab3@25341>   ADD.w listadd(PC),D1                                     ;size of one element.
00033DF0 <AmiBlitz3.ab3@25342>   MOVE.w D1,listsize
00033DF6 <AmiBlitz3.ab3@25343>    JSR writeword
00033DFC <AmiBlitz3.ab3@25344>   CLR.w temp2                                              ;# dim's got
00033DFE <AmiBlitz3.ab3@25345>   MOVE.l A3,-(A7)
00033E04 <AmiBlitz3.ab3@25348>   ADDQ.w #1,temp2
00033E06 <AmiBlitz3.ab3@25349>   MOVEQ.l #$03,D2                                          ;get word
00033E0C <AmiBlitz3.ab3@25350>   MOVE.w notshared,-(a7)
00033E12 <AmiBlitz3.ab3@25351>    JSR eval
00033E18 <AmiBlitz3.ab3@25352>   MOVE.w (a7)+,notshared
00033E1E <AmiBlitz3.ab3@25353>   TST.b debugmode
00033E22 <AmiBlitz3.ab3@25354>    BEQ.w write_dim_code__norerr0
00033E26 <AmiBlitz3.ab3@25355>   MOVE.w #$C30F,D1
00033E2A <AmiBlitz3.ab3@25361>       MOVE.w #$5281,d1
00033E30 <AmiBlitz3.ab3@25362>       JSR writeword
00033E36 <AmiBlitz3.ab3@25363>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00033E3C <AmiBlitz3.ab3@25364>       JSR writelong
00033E42 <AmiBlitz3.ab3@25365>   MOVE.w proceduremode,D2
00033E46 <AmiBlitz3.ab3@25366>    BEQ.w write_dim_code__global
00033E4C <AmiBlitz3.ab3@25367>   SUBQ.w #4,locvaroff
00033E56 <AmiBlitz3.ab3@25368>   MOVE.w locvaroff,putarr+2
00033E5A <AmiBlitz3.ab3@25369> BRA.w write_dim_code__doit
00033E60 <AmiBlitz3.ab3@25372> JMP syntaxerr
00033E6A <AmiBlitz3.ab3@25375>   MOVE.w globalvarpointer,putarr+2
00033E70 <AmiBlitz3.ab3@25376>   ADDQ.w #4,globalvarpointer
00033E76 <AmiBlitz3.ab3@25379>   TST.b dimkeep
00033E7A <AmiBlitz3.ab3@25380>            BEQ write_dim_code__doit_l1
00033E7C <AmiBlitz3.ab3@25381>       MOVEQ #0,d1
00033E82 <AmiBlitz3.ab3@25382>       MOVE.w putarr+2,d1
00033E88 <AmiBlitz3.ab3@25383>       OR.l  #$222d0000,d1
00033E8E <AmiBlitz3.ab3@25384>       MOVE.w proceduremode,D2
00033E92 <AmiBlitz3.ab3@25385>       BEQ write_dim_code__doit_l2
00033E98 <AmiBlitz3.ab3@25386>       TST.w notshared
00033E9C <AmiBlitz3.ab3@25387>       BEQ write_dim_code__doit_l2
00033EA2 <AmiBlitz3.ab3@25388>       SUB.l #$00010000,d1
00033EA8 <AmiBlitz3.ab3@25391>   JSR writelong
00033EAE <AmiBlitz3.ab3@25394>   MOVE.l putarr,D1
00033EB4 <AmiBlitz3.ab3@25395>       TST.w notshared
00033EB8 <AmiBlitz3.ab3@25396>       BNE write_dim_code__doit_l1a
00033EBE <AmiBlitz3.ab3@25397>       JSR writelong
00033EC2 <AmiBlitz3.ab3@25398> BRA write_dim_code__doit_l4
00033EC8 <AmiBlitz3.ab3@25401>   JSR pokela5d
00033ECC <AmiBlitz3.ab3@25404>   CMP.w #$2C,D0
00033ED0 <AmiBlitz3.ab3@25405>    BEQ.w write_dim_code__loop
00033ED4 <AmiBlitz3.ab3@25406>   CMP.w #$29,D0
00033ED8 <AmiBlitz3.ab3@25407>    BNE.w JUMP_syntaxerr
00033EDA <AmiBlitz3.ab3@25408>   MOVEA.l (A7)+,A3
00033EE0 <AmiBlitz3.ab3@25409>   MOVE.w temp1,D1
00033EE4 <AmiBlitz3.ab3@25410>    BMI.w write_dim_code__nocare
00033EE8 <AmiBlitz3.ab3@25414>   BTST #$E,D1
00033EEC <AmiBlitz3.ab3@25415>    BEQ.w write_dim_code__notl
00033EF4 <AmiBlitz3.ab3@25416>   CMPI.w #$1,temp2
00033EF8 <AmiBlitz3.ab3@25417>    BNE.w JUMP_redimerr
00033EFC <AmiBlitz3.ab3@25418> BRA.w write_dim_code__nocare
00033F02 <AmiBlitz3.ab3@25421> JMP redimerr
00033F08 <AmiBlitz3.ab3@25424>   CMP.w temp2,D1
00033F0C <AmiBlitz3.ab3@25425>    BNE.w JUMP_redimerr                                      ;range too long
00033F12 <AmiBlitz3.ab3@25428>   LEA globalvarpointer,A0
00033F18 <AmiBlitz3.ab3@25429>   MOVE.w proceduremode,D1
00033F1C <AmiBlitz3.ab3@25430>   BEQ.w write_dim_code__gskip
00033F22 <AmiBlitz3.ab3@25431>   LEA locvaroff,A0
00033F28 <AmiBlitz3.ab3@25434>   MOVE.W  extraword,(A0)
00033F2C <AmiBlitz3.ab3@25435>   BRA.W   write_dim_code__care
00033F34 <AmiBlitz3.ab3@25438>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00033F3A <AmiBlitz3.ab3@25441>   LEA doarr,A0
00033F40 <AmiBlitz3.ab3@25442>   MOVE.w $4(A3),$2(A0)
00033F48 <AmiBlitz3.ab3@25443>   MOVE.w putarr+2,$6(A0)
00033F4A <AmiBlitz3.ab3@25444>   MOVE.l (A0)+,D1
00033F50 <AmiBlitz3.ab3@25445>    JSR writelong
00033F52 <AmiBlitz3.ab3@25446>   MOVE.l (A0),D1
00033F58 <AmiBlitz3.ab3@25447>    JSR writelong
00033F5E <AmiBlitz3.ab3@25448>    TST.b dimkeep
00033F62 <AmiBlitz3.ab3@25449>   BNE write_dim_code__care_l3
00033F66 <AmiBlitz3.ab3@25452>   MOVE.w #$C400,D1
00033F6A <AmiBlitz3.ab3@25453> BRA write_dim_code__care_l2
00033F6E <AmiBlitz3.ab3@25456>   MOVE.w #$C405,d1
00033F74 <AmiBlitz3.ab3@25459>   MOVE.w proceduremode,D2
00033F78 <AmiBlitz3.ab3@25460>    BEQ.w write_dim_code__isg
00033F7E <AmiBlitz3.ab3@25461>    TST.w notshared
00033F82 <AmiBlitz3.ab3@25462>    BEQ write_dim_code__isg
00033F84 <AmiBlitz3.ab3@25463>   ADDQ.w #1,D1
00033F88 <AmiBlitz3.ab3@25466>   MOVE.w listadd(PC),D2
00033F8C <AmiBlitz3.ab3@25467>    BEQ.w write_dim_code__isrg
00033F8E <AmiBlitz3.ab3@25468>   MOVE.w D1,-(A7)
00033F92 <AmiBlitz3.ab3@25469>   MOVE.w setles(PC),D1
00033F98 <AmiBlitz3.ab3@25470>    JSR writeword
00033F9C <AmiBlitz3.ab3@25471>   MOVE.w listsize(PC),D1
00033FA2 <AmiBlitz3.ab3@25472>    JSR writeword
00033FA4 <AmiBlitz3.ab3@25473>   MOVE.w (A7)+,D1
00033FA6 <AmiBlitz3.ab3@25474>   ADDQ.w #3,D1
00033FAA <AmiBlitz3.ab3@25477> BRA.w Atokejsr
00033FB0 <AmiBlitz3.ab3@25484>     MOVE.l #$f23c4400,d1
00033FB6 <AmiBlitz3.ab3@25486>   MOVE.w regnum,d0
00033FB8 <AmiBlitz3.ab3@25487>   ASL.w #7,d0
00033FBA <AmiBlitz3.ab3@25488>   OR.w d0,d1
00033FC0 <AmiBlitz3.ab3@25489>   JSR writelong
00033FC6 <AmiBlitz3.ab3@25495>     MOVE.l #$40490fd9,d1
00033FCC <AmiBlitz3.ab3@25497>   JSR writelong
00033FD2 <AmiBlitz3.ab3@25498> JMP get1bytemain
00033FD6 <AmiBlitz3.ab3@25502> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00033FDA <AmiBlitz3.ab3@25509> vbr:                Ds.l 1
00033FDC <AmiBlitz3.ab3@25510> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00033FE2 <AmiBlitz3.ab3@25512> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00033FE6 <AmiBlitz3.ab3@25516> constpcat:          Ds.l 1
00033FEA <AmiBlitz3.ab3@25517> constlibat:         Ds.l 1
00033FEE <AmiBlitz3.ab3@25518> constmaxpc:         Dc.l $400
00033FF2 <AmiBlitz3.ab3@25520> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00033FF6 <AmiBlitz3.ab3@25521> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00033FFA <AmiBlitz3.ab3@25522> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00033FFE <AmiBlitz3.ab3@25523> lastrestype:        Dc.l newtype_string
00034000 <AmiBlitz3.ab3@25524> rescnt:             Ds.w 1                               ;# resident
00034002 <AmiBlitz3.ab3@25525> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034006 <AmiBlitz3.ab3@25526> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034008 <AmiBlitz3.ab3@25527> linedone:           Ds.w 1
0003401E <AmiBlitz3.ab3@25528> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034022 <AmiBlitz3.ab3@25537>   Dc.l 0                                        ; bytetobyte
00034026 <AmiBlitz3.ab3@25538>   Dc.l convert_byte_to_word                     ; bytetoword
0003402A <AmiBlitz3.ab3@25539>   Dc.l convert_byte_to_long                     ; bytetolong
0003402E <AmiBlitz3.ab3@25540>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034032 <AmiBlitz3.ab3@25541>   Dc.l convert_byte_to_float                    ; bytetofloat
00034036 <AmiBlitz3.ab3@25542>   Dc.l convert_byte_to_long                     ; bytetolong
0003403A <AmiBlitz3.ab3@25543>   Dc.l error_convert_types                      ; noconerr
0003403E <AmiBlitz3.ab3@25546>   Dc.l convert_word_to_byte                     ; wordtobyte
00034042 <AmiBlitz3.ab3@25547>   Dc.l 0                                        ; wordtoword
00034046 <AmiBlitz3.ab3@25548>   Dc.l convert_word_to_long                     ; wordtolong
0003404A <AmiBlitz3.ab3@25549>   Dc.l convert_word_to_quick                    ; wordtoquick
0003404E <AmiBlitz3.ab3@25550>   Dc.l convert_word_to_float                    ; wordtofloat
00034052 <AmiBlitz3.ab3@25551>   Dc.l convert_word_to_long                     ; wordtolong
00034056 <AmiBlitz3.ab3@25552>   Dc.l error_convert_types                      ; noconerr
0003405A <AmiBlitz3.ab3@25555>   Dc.l convert_long_to_byte                     ; longtobyte
0003405E <AmiBlitz3.ab3@25556>   Dc.l convert_long_to_word                     ; longtoword
00034062 <AmiBlitz3.ab3@25557>   Dc.l 0                                        ; longtolong
00034066 <AmiBlitz3.ab3@25558>   Dc.l convert_long_to_quick                    ; longtoquick
0003406A <AmiBlitz3.ab3@25559>   Dc.l convert_long_to_float                    ; longtofloat
0003406E <AmiBlitz3.ab3@25560>   Dc.l 0                                        ; longtolong
00034072 <AmiBlitz3.ab3@25561>   Dc.l error_convert_types                      ; noconerr
00034076 <AmiBlitz3.ab3@25564>   Dc.l convert_quick_to_byte                    ; quicktobyte
0003407A <AmiBlitz3.ab3@25565>   Dc.l convert_quick_to_word                    ; quicktoword
0003407E <AmiBlitz3.ab3@25566>   Dc.l convert_quick_to_long                    ; quicktolong
00034082 <AmiBlitz3.ab3@25567>   Dc.l 0                                        ; quicktoquick
00034086 <AmiBlitz3.ab3@25568>   Dc.l convert_quick_to_float                   ; quicktofloat
0003408A <AmiBlitz3.ab3@25569>   Dc.l convert_quick_to_long                    ; quicktolong
0003408E <AmiBlitz3.ab3@25570>   Dc.l error_convert_types                      ; noconerr
00034092 <AmiBlitz3.ab3@25573>   Dc.l convert_float_to_byte                    ; floattobyte
00034096 <AmiBlitz3.ab3@25574>   Dc.l convert_float_to_word                    ; floattoword
0003409A <AmiBlitz3.ab3@25575>   Dc.l convert_float_to_long                    ; floattolong
0003409E <AmiBlitz3.ab3@25576>   Dc.l convert_float_to_quick                   ; floattoquick
000340A2 <AmiBlitz3.ab3@25577>   Dc.l 0                                        ; floattofloat
000340A6 <AmiBlitz3.ab3@25578>   Dc.l convert_float_to_long                    ; floattolong
000340AA <AmiBlitz3.ab3@25579>   Dc.l error_convert_types                      ; noconerr
000340AE <AmiBlitz3.ab3@25582>   Dc.l convert_long_to_byte                     ; longtobyte
000340B2 <AmiBlitz3.ab3@25583>   Dc.l convert_long_to_word                     ; longtoword
000340B6 <AmiBlitz3.ab3@25584>   Dc.l 0                                        ; longtolong
000340BA <AmiBlitz3.ab3@25585>   Dc.l convert_long_to_quick                    ; longtoquick
000340BE <AmiBlitz3.ab3@25586>   Dc.l convert_long_to_float                    ; longtofloat
000340C2 <AmiBlitz3.ab3@25587>   Dc.l 0                                        ; longtolong
000340C6 <AmiBlitz3.ab3@25588>   Dc.l error_convert_types                      ; noconerr
000340CA <AmiBlitz3.ab3@25591>   Dc.l error_convert_types                      ; noconerr
000340CE <AmiBlitz3.ab3@25592>   Dc.l error_convert_types                      ; noconerr
000340D2 <AmiBlitz3.ab3@25593>   Dc.l string_to_long                           ; stringtolong
000340D6 <AmiBlitz3.ab3@25594>   Dc.l error_convert_types                      ; noconerr
000340DA <AmiBlitz3.ab3@25595>   Dc.l error_convert_types                      ; noconerr
000340DE <AmiBlitz3.ab3@25596>   Dc.l string_to_long                           ; stringtolong
000340E2 <AmiBlitz3.ab3@25597>   Ds.l 1
000340E4 <AmiBlitz3.ab3@25603>   Dc.b $00,$2B                                  ;+ ; add
000340E8 <AmiBlitz3.ab3@25604>   Dc.l do_plus_byte                             ;doplusb
000340EC <AmiBlitz3.ab3@25605>   Dc.l do_plus_word                             ;doplusw
000340F0 <AmiBlitz3.ab3@25606>   Dc.l do_plus_long                             ;doplusl
000340F4 <AmiBlitz3.ab3@25607>   Dc.l do_plus_long                             ;doplusl
000340F8 <AmiBlitz3.ab3@25608>   Dc.l do_plus_float                            ;doplusf
000340FC <AmiBlitz3.ab3@25609>   Ds.l 1
00034100 <AmiBlitz3.ab3@25610>   Dc.l add_strings                              ;addstrings
00034102 <AmiBlitz3.ab3@25611>   Dc.b $0B,$B8
00034104 <AmiBlitz3.ab3@25613>   Dc.b $00,$2D                                  ;- ; sub
00034108 <AmiBlitz3.ab3@25614>   Dc.l do_minus_byte                            ;dominusb
0003410C <AmiBlitz3.ab3@25615>   Dc.l do_minus_word                            ;dominusw
00034110 <AmiBlitz3.ab3@25616>   Dc.l do_minus_long                            ;dominusl
00034114 <AmiBlitz3.ab3@25617>   Dc.l do_minus_long                            ;dominusl
00034118 <AmiBlitz3.ab3@25618>   Dc.l do_minus_float                           ;dominusf
00034120 <AmiBlitz3.ab3@25619>   Ds.l 2
00034122 <AmiBlitz3.ab3@25620>   Dc.b $0B,$B8
00034124 <AmiBlitz3.ab3@25622>   Dc.b $00,$2A                                  ;* ; mul
00034128 <AmiBlitz3.ab3@25623>   Dc.l do_times_byte                            ;dotimesb
0003412C <AmiBlitz3.ab3@25624>   Dc.l do_times_word                            ;dotimesw
00034130 <AmiBlitz3.ab3@25625>   Dc.l do_times_long                            ;dotimesl
00034134 <AmiBlitz3.ab3@25626>   Dc.l do_times_quick                           ;dotimesq
00034138 <AmiBlitz3.ab3@25627>   Dc.l do_times_float                           ;dotimesf
00034140 <AmiBlitz3.ab3@25628>   Ds.l 2
00034142 <AmiBlitz3.ab3@25629>   Dc.b $0F,$A0
00034144 <AmiBlitz3.ab3@25631>   Dc.b $00,$2F                                  ;/ ; div
00034148 <AmiBlitz3.ab3@25632>   Dc.l do_Div_byte                              ;dodivb
0003414C <AmiBlitz3.ab3@25633>   Dc.l do_Div_word                              ;dodivb
00034150 <AmiBlitz3.ab3@25634>   Dc.l do_Div_long                              ;dodivl
00034154 <AmiBlitz3.ab3@25635>   Dc.l do_Div_quick                             ;dodivq
00034158 <AmiBlitz3.ab3@25636>   Dc.l do_Div_float                             ;dodivf
00034160 <AmiBlitz3.ab3@25637>   Ds.l 2
00034162 <AmiBlitz3.ab3@25638>   Dc.b $0F,$A0
00034164 <AmiBlitz3.ab3@25640>   Dc.b $00,$26                                  ;& ; & int
00034168 <AmiBlitz3.ab3@25641>   Dc.l do_AND_byte                              ;doandb
0003416C <AmiBlitz3.ab3@25642>   Dc.l do_AND_word                              ;doandw
00034170 <AmiBlitz3.ab3@25643>   Dc.l do_AND_long                              ;doandl
00034174 <AmiBlitz3.ab3@25644>   Dc.l do_AND_long                              ;doandl
00034180 <AmiBlitz3.ab3@25645>   Ds.l 3
00034182 <AmiBlitz3.ab3@25646>   Dc.b $13,$88
00034184 <AmiBlitz3.ab3@25648>   Dc.b $00,$7C                                  ;| ;or int ;
00034188 <AmiBlitz3.ab3@25649>   Dc.l do_OR_byte                               ;doorb
0003418C <AmiBlitz3.ab3@25650>   Dc.l do_OR_word                               ;doorw
00034190 <AmiBlitz3.ab3@25651>   Dc.l do_OR_long                               ;doorl
00034194 <AmiBlitz3.ab3@25652>   Dc.l do_OR_long                               ;doorl
000341A0 <AmiBlitz3.ab3@25653>   Ds.l 3
000341A2 <AmiBlitz3.ab3@25654>   Dc.b $13,$88
000341A4 <AmiBlitz3.ab3@25656>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
000341A8 <AmiBlitz3.ab3@25657>   Dc.l do_AND_byte                              ;doandb
000341AC <AmiBlitz3.ab3@25658>   Dc.l do_AND_word                              ;doandw
000341B0 <AmiBlitz3.ab3@25659>   Dc.l do_AND_long                              ;doandl
000341B4 <AmiBlitz3.ab3@25660>   Dc.l do_AND_long                              ;doandl
000341C0 <AmiBlitz3.ab3@25661>   Ds.l 3
000341C2 <AmiBlitz3.ab3@25662>   Dc.b $03,$E8
000341C4 <AmiBlitz3.ab3@25664>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
000341C8 <AmiBlitz3.ab3@25665>   Dc.l do_OR_byte                               ;doorb
000341CC <AmiBlitz3.ab3@25666>   Dc.l do_OR_word                               ;doorw
000341D0 <AmiBlitz3.ab3@25667>   Dc.l do_OR_long                               ;doorl
000341D4 <AmiBlitz3.ab3@25668>   Dc.l do_OR_long                               ;doorl
000341E0 <AmiBlitz3.ab3@25669>   Ds.l 3
000341E2 <AmiBlitz3.ab3@25670>   Dc.b $03,$E8
000341E4 <AmiBlitz3.ab3@25672>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
000341E8 <AmiBlitz3.ab3@25673>   Dc.l do_EOR_byte                              ;doeorb
000341EC <AmiBlitz3.ab3@25674>   Dc.l do_EOR_word                              ;doeorw
000341F0 <AmiBlitz3.ab3@25675>   Dc.l do_EOR_long                              ;doeorl
000341F4 <AmiBlitz3.ab3@25676>   Dc.l do_EOR_long                              ;doeorl
00034200 <AmiBlitz3.ab3@25677>   Ds.l 3
00034202 <AmiBlitz3.ab3@25678>   Dc.b $03,$E8
00034204 <AmiBlitz3.ab3@25680>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034208 <AmiBlitz3.ab3@25681>   Dc.l do_LSL                                   ;dolslb
0003420C <AmiBlitz3.ab3@25682>   Dc.l do_LSL                                   ;dolslw
00034210 <AmiBlitz3.ab3@25683>   Dc.l do_LSL                                   ;dolsll
00034214 <AmiBlitz3.ab3@25684>   Dc.l do_LSL                                   ;dolsll
00034220 <AmiBlitz3.ab3@25685>   Ds.l 3
00034222 <AmiBlitz3.ab3@25686>   Dc.b $17,$70
00034224 <AmiBlitz3.ab3@25688>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034228 <AmiBlitz3.ab3@25689>   Dc.l do_LSL                                   ;dolslb
0003422C <AmiBlitz3.ab3@25690>   Dc.l do_LSL                                   ;dolslw
00034230 <AmiBlitz3.ab3@25691>   Dc.l do_LSL                                   ;dolsll
00034234 <AmiBlitz3.ab3@25692>   Dc.l do_LSL                                   ;dolsll
00034240 <AmiBlitz3.ab3@25693>   Ds.l 3
00034242 <AmiBlitz3.ab3@25694>   Dc.b $17,$70
00034244 <AmiBlitz3.ab3@25696>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034248 <AmiBlitz3.ab3@25697>   Dc.l do_LSR                                   ;dolsrb
0003424C <AmiBlitz3.ab3@25698>   Dc.l do_LSR                                   ;dolsrw
00034250 <AmiBlitz3.ab3@25699>   Dc.l do_LSR                                   ;dolsrl
00034254 <AmiBlitz3.ab3@25700>   Dc.l do_LSR                                   ;dolsrl
00034260 <AmiBlitz3.ab3@25701>   Ds.l 3
00034262 <AmiBlitz3.ab3@25702>   Dc.b $17,$70
00034264 <AmiBlitz3.ab3@25704>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034268 <AmiBlitz3.ab3@25705>   Dc.l do_ASR                                   ;doasrb
0003426C <AmiBlitz3.ab3@25706>   Dc.l do_ASR                                   ;doasrw
00034270 <AmiBlitz3.ab3@25707>   Dc.l do_ASR                                   ;doasrl
00034274 <AmiBlitz3.ab3@25708>   Dc.l do_ASR                                   ;doasrl
00034280 <AmiBlitz3.ab3@25709>   Ds.l 3
00034282 <AmiBlitz3.ab3@25710>   Dc.b $17,$70
00034284 <AmiBlitz3.ab3@25712>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034288 <AmiBlitz3.ab3@25713>   Dc.l do_mod_byte                              ;domodb
0003428C <AmiBlitz3.ab3@25714>   Dc.l do_mod_word                              ;domodw
00034290 <AmiBlitz3.ab3@25715>   Dc.l do_mod_long                              ;domodl
00034294 <AmiBlitz3.ab3@25716>   Dc.l do_mod_quick                             ;domodq
00034298 <AmiBlitz3.ab3@25717>   Dc.l do_mod_float                             ;domodf
000342A0 <AmiBlitz3.ab3@25718>   Ds.l 2
000342A2 <AmiBlitz3.ab3@25719>   Dc.b $13,$88
000342A4 <AmiBlitz3.ab3@25722>   Dc.b $00,$5E                                  ;^
000342A8 <AmiBlitz3.ab3@25723>   Dc.l do_pow                                   ;dopow
000342AC <AmiBlitz3.ab3@25724>   Dc.l do_pow                                   ;dopow
000342B0 <AmiBlitz3.ab3@25725>   Dc.l do_pow                                   ;dopow
000342B4 <AmiBlitz3.ab3@25726>   Dc.l do_pow                                   ;dopow
000342B8 <AmiBlitz3.ab3@25727>   Dc.l do_pow                                   ;dopow
000342C0 <AmiBlitz3.ab3@25728>   Ds.l 2
000342C2 <AmiBlitz3.ab3@25729>   Dc.b $1B,$58                                  ;7000
000342C4 <AmiBlitz3.ab3@25732>   Dc.b $00,$3D                                  ;=
000342C8 <AmiBlitz3.ab3@25733>   Dc.l do_equal_byte                            ;doeqb
000342CC <AmiBlitz3.ab3@25734>   Dc.l do_equal_word                            ;doeqw
000342D0 <AmiBlitz3.ab3@25735>   Dc.l do_equal_long                            ;doeql
000342D4 <AmiBlitz3.ab3@25736>   Dc.l do_equal_long                            ;doeql
000342D8 <AmiBlitz3.ab3@25737>   Dc.l do_equal_float                           ;doeqf
000342DC <AmiBlitz3.ab3@25738>   Dc.l do_equal_long                            ;doeql
000342E0 <AmiBlitz3.ab3@25739>   Dc.l do_equal_string                          ;doeqs
000342E2 <AmiBlitz3.ab3@25740>   Dc.b $07,$D0                                  ;2000
000342E4 <AmiBlitz3.ab3@25743>   Dc.b $3C,$3E                                  ;<>
000342E8 <AmiBlitz3.ab3@25744>   Dc.l do_not_equal_byte                        ;doneb
000342EC <AmiBlitz3.ab3@25745>   Dc.l do_not_equal_word                        ;donew
000342F0 <AmiBlitz3.ab3@25746>   Dc.l do_not_equal_long                        ;donel
000342F4 <AmiBlitz3.ab3@25747>   Dc.l do_not_equal_long                        ;donel
000342F8 <AmiBlitz3.ab3@25748>   Dc.l do_not_equal_float                       ;donef
000342FC <AmiBlitz3.ab3@25749>   Dc.l do_not_equal_long                        ;donel
00034300 <AmiBlitz3.ab3@25750>   Dc.l do_not_equal_string                      ;dones
00034302 <AmiBlitz3.ab3@25751>   Dc.b $07,$D0                                  ;2000
00034304 <AmiBlitz3.ab3@25754>   Dc.b $00,$3C                                  ;<
00034308 <AmiBlitz3.ab3@25755>   Dc.l do_littler_byte                          ;doltb
0003430C <AmiBlitz3.ab3@25756>   Dc.l do_littler_word                          ;doltw
00034310 <AmiBlitz3.ab3@25757>   Dc.l do_littler_long                          ;doltl
00034314 <AmiBlitz3.ab3@25758>   Dc.l do_littler_long                          ;doltl
00034318 <AmiBlitz3.ab3@25759>   Dc.l do_littler_float                         ;doltf
0003431C <AmiBlitz3.ab3@25760>   Dc.l do_littler_long                          ;doltl
00034320 <AmiBlitz3.ab3@25761>   Dc.l do_littler_string                        ;dolts
00034322 <AmiBlitz3.ab3@25762>   Dc.b $07,$D0                                  ;2000
00034324 <AmiBlitz3.ab3@25765>   Dc.b $3C,$3D                                  ;<=
00034328 <AmiBlitz3.ab3@25766>   Dc.l do_littler_equal_byte                    ;doleb
0003432C <AmiBlitz3.ab3@25767>   Dc.l do_littler_equal_word                    ;doleb
00034330 <AmiBlitz3.ab3@25768>   Dc.l do_littler_equal_long                    ;dolel
00034334 <AmiBlitz3.ab3@25769>   Dc.l do_littler_equal_long                    ;dolel
00034338 <AmiBlitz3.ab3@25770>   Dc.l do_littler_equal_float                   ;dolef
0003433C <AmiBlitz3.ab3@25771>   Dc.l do_littler_equal_long                    ;dolel
00034340 <AmiBlitz3.ab3@25772>   Dc.l do_littler_equal_string                  ;doles
00034342 <AmiBlitz3.ab3@25773>   Dc.b $07,$D0                                  ;2000
00034344 <AmiBlitz3.ab3@25776>   Dc.b $00,$3E                                  ;>
00034348 <AmiBlitz3.ab3@25777>   Dc.l do_greater_byte                          ;dogtb
0003434C <AmiBlitz3.ab3@25778>   Dc.l do_greater_word                          ;dogtw
00034350 <AmiBlitz3.ab3@25779>   Dc.l do_greater_long                          ;dogtl
00034354 <AmiBlitz3.ab3@25780>   Dc.l do_greater_long                          ;dogtl
00034358 <AmiBlitz3.ab3@25781>   Dc.l do_greater_float                         ;dogtf
0003435C <AmiBlitz3.ab3@25782>   Dc.l do_greater_long                          ;dogtl
00034360 <AmiBlitz3.ab3@25783>   Dc.l do_greater_string                        ;dogts
00034362 <AmiBlitz3.ab3@25784>   Dc.b $07,$D0                                  ;2000
00034364 <AmiBlitz3.ab3@25787>   Dc.b $3E,$3D                                  ;>=
00034368 <AmiBlitz3.ab3@25788>   Dc.l do_greater_equal_byte                    ;dogeb
0003436C <AmiBlitz3.ab3@25789>   Dc.l do_greater_equal_word                    ;dogew
00034370 <AmiBlitz3.ab3@25790>   Dc.l do_greater_equal_long                    ;dogel
00034374 <AmiBlitz3.ab3@25791>   Dc.l do_greater_equal_long                    ;dogel
00034378 <AmiBlitz3.ab3@25792>   Dc.l do_greater_equal_float                   ;dogef
0003437C <AmiBlitz3.ab3@25793>   Dc.l do_greater_equal_long                    ;dogel
00034380 <AmiBlitz3.ab3@25794>   Dc.l do_greater_equal_string                  ;doges
00034382 <AmiBlitz3.ab3@25795>   Dc.b $07,$D0                                  ;2000
00034384 <AmiBlitz3.ab3@25797>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034388 <AmiBlitz3.ab3@25798>   Dc.l _BitTst
0003438C <AmiBlitz3.ab3@25799>   Dc.l _BitTst
00034390 <AmiBlitz3.ab3@25800>   Dc.l _BitTst
00034394 <AmiBlitz3.ab3@25801>   Dc.l _BitTst
000343A0 <AmiBlitz3.ab3@25802>   Ds.l 3
000343A2 <AmiBlitz3.ab3@25803>   Dc.b $1F,$40                                  ;8000
000343A4 <AmiBlitz3.ab3@25805>   Dc.b $80,$CE                                  ;$8000+27+tnum
000343A8 <AmiBlitz3.ab3@25806>   Dc.l _BitSet
000343AC <AmiBlitz3.ab3@25807>   Dc.l _BitSet
000343B0 <AmiBlitz3.ab3@25808>   Dc.l _BitSet
000343B4 <AmiBlitz3.ab3@25809>   Dc.l _BitSet
000343C0 <AmiBlitz3.ab3@25810>   Ds.l 3
000343C2 <AmiBlitz3.ab3@25811>   Dc.b $1F,$40                                  ;8000
000343C4 <AmiBlitz3.ab3@25813>   Dc.b $80,$CF                                  ;$8000+28+tnum
000343C8 <AmiBlitz3.ab3@25814>   Dc.l _BitClr
000343CC <AmiBlitz3.ab3@25815>   Dc.l _BitClr
000343D0 <AmiBlitz3.ab3@25816>   Dc.l _BitClr
000343D4 <AmiBlitz3.ab3@25817>   Dc.l _BitClr
000343E0 <AmiBlitz3.ab3@25818>   Ds.l 3
000343E2 <AmiBlitz3.ab3@25819>   Dc.b $1F,$40                                  ;8000
000343E4 <AmiBlitz3.ab3@25821>   Dc.b $80,$D0                                  ;$8000+29+tnum
000343E8 <AmiBlitz3.ab3@25822>   Dc.l _BitChg
000343EC <AmiBlitz3.ab3@25823>   Dc.l _BitChg
000343F0 <AmiBlitz3.ab3@25824>   Dc.l _BitChg
000343F4 <AmiBlitz3.ab3@25825>   Dc.l _BitChg
00034400 <AmiBlitz3.ab3@25826>   Ds.l 3
00034402 <AmiBlitz3.ab3@25827>   Dc.b $1F,$40                                  ;8000
00034404 <AmiBlitz3.ab3@25829>   Dc.b $00,$00
00034408 <AmiBlitz3.ab3@25834> modetable:   Dc.l typemode
0003440C <AmiBlitz3.ab3@25837> newtypebase: Dc.l newtype_byte
00034414 <AmiBlitz3.ab3@25840>   Dc.l newtype_word,$01                                    
00034416 <AmiBlitz3.ab3@25841>   Dc.w $0001
0003441A <AmiBlitz3.ab3@25842>   Dc.b 13,"b",0,0
00034422 <AmiBlitz3.ab3@25845>   Dc.l newtype_long,$02
00034424 <AmiBlitz3.ab3@25846>   Dc.w $0002
00034428 <AmiBlitz3.ab3@25847>   Dc.b 13,"w",0,0
00034430 <AmiBlitz3.ab3@25850>   Dc.l newtype_quick,$03                                   
00034432 <AmiBlitz3.ab3@25851>   Dc.w $0004
00034436 <AmiBlitz3.ab3@25852>   Dc.b 13,"l",0,0
0003443E <AmiBlitz3.ab3@25855>   Dc.l newtype_float,$04                                   
00034440 <AmiBlitz3.ab3@25856>   Dc.w $0004
00034444 <AmiBlitz3.ab3@25857>   Dc.b 13,"q",0,0
0003444C <AmiBlitz3.ab3@25861>   Dc.l newtype_double,$05                                  ;make problems on old residents
0003444E <AmiBlitz3.ab3@25862>   Dc.w $0004
00034452 <AmiBlitz3.ab3@25863>   Dc.b 13,"f",0,0
0003445A <AmiBlitz3.ab3@25866>   Dc.l newtype_double,$06
0003445C <AmiBlitz3.ab3@25867>   Dc.w $0004
00034460 <AmiBlitz3.ab3@25868>   Dc.b 13,"a",0,0
00034468 <AmiBlitz3.ab3@25871>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003446A <AmiBlitz3.ab3@25872>   Dc.w $0008
0003446E <AmiBlitz3.ab3@25873>   Dc.b 13,"d",0,0
00034476 <AmiBlitz3.ab3@25877>   Dc.l $0000000,$07                                        ;stringtype
00034478 <AmiBlitz3.ab3@25878>   Dc.w $0004
0003447C <AmiBlitz3.ab3@25879>   Dc.b 13,"s",0,0
00034484 <AmiBlitz3.ab3@25882>   Dc.l $00,$00
00034486 <AmiBlitz3.ab3@25883>   Dc.w $0000
0003448A <AmiBlitz3.ab3@25884>   Dc.b $01,$00,$00,$00
000344EA <AmiBlitz3.ab3@25887> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000344EC <AmiBlitz3.ab3@25891> dirmode:              Ds.w 1                               ;shows if directmode is on
000344F0 <AmiBlitz3.ab3@25893>                       Ds.l 1                               ;int org source ;intuition!
000344F2 <AmiBlitz3.ab3@25894> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
000344F6 <AmiBlitz3.ab3@25895> maxsat:               Ds.l 1                               ;data1 info pos
000344F8 <AmiBlitz3.ab3@25896> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
000344FA <AmiBlitz3.ab3@25898> maxsused:             Ds.w 1                               ;maximums used in prog
000344FC <AmiBlitz3.ab3@25902> dark:                 Ds.w 1                               ;dark compile?
000344FE <AmiBlitz3.ab3@25903> qlab:                 Ds.w 1                               ;quick lab allocate
00034502 <AmiBlitz3.ab3@25904> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034504 <AmiBlitz3.ab3@25909> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034506 <AmiBlitz3.ab3@25910> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
0003450A <AmiBlitz3.ab3@25911> noinits:              Ds.l 1                               ;flag for if we have any init routines!
0003450E <AmiBlitz3.ab3@25913> letstart:             Ds.l 1
00034510 <AmiBlitz3.ab3@25914> dontwrite:            Ds.w 1                               ;nomemleft org source
00034590 <AmiBlitz3.ab3@25915> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034594 <AmiBlitz3.ab3@25917> locdatast:            Ds.l 1
00034598 <AmiBlitz3.ab3@25918> firstpend:            Ds.l 1
0003459C <AmiBlitz3.ab3@25922> data2at:              Ds.l 1
000345A0 <AmiBlitz3.ab3@25923> data2:                Ds.l 1
000345A4 <AmiBlitz3.ab3@25924> data1start:           Ds.l 1                               ;data1at org source
000345A8 <AmiBlitz3.ab3@25925> data1:                Ds.l 1                               ;pc for initialized data!
000345AC <AmiBlitz3.ab3@25926> destbufferstart:      Ds.l 1                               ;pcat org source
000345B0 <AmiBlitz3.ab3@25930> destbufferend:        Ds.l 1                               ;libat org source
000345B4 <AmiBlitz3.ab3@25931> libend:               Ds.l 1                               ;lib org source
000345B8 <AmiBlitz3.ab3@25932> allat:                Ds.l 1                               ;highest allocmemd location for code
000345C2 <AmiBlitz3.ab3@25933> dummyasm:             Dc.w 0,0,0,0,0
000345C6 <AmiBlitz3.ab3@25934>                       Dc.l 0
000345C8 <AmiBlitz3.ab3@25935>                       Dc.w 0
000345CC <AmiBlitz3.ab3@25939> buff1:                Ds.l 1                               ;buffer for text get
000345D0 <AmiBlitz3.ab3@25940> buff2:                Ds.l 1                               ;ditto for dest
000345D2 <AmiBlitz3.ab3@25941> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
000345D4 <AmiBlitz3.ab3@25942> asmtype:              Ds.w 1                               ;0=contains no prog reference
000345D6 <AmiBlitz3.ab3@25943> extraword:            Ds.w 1                               ;the extension word for assembler
000345D8 <AmiBlitz3.ab3@25944> extraword2:           Ds.w 1                               ;ditto
000345DA <AmiBlitz3.ab3@25945> asmsize:              Ds.w 1
000345DE <AmiBlitz3.ab3@25946> asmbuff:              Ds.l 1
000345E0 <AmiBlitz3.ab3@25947> asmlen:               Ds.w 1                               ;first (src) text len
000345E2 <AmiBlitz3.ab3@25948> asmlen2:              Ds.w 1                               ;second (dest)
000345E6 <AmiBlitz3.ab3@25949> templabel:            Ds.l 1                               ;linked list of expressions to resolve
000345E8 <AmiBlitz3.ab3@25952> macnum:               Ds.w 1
000345EC <AmiBlitz3.ab3@25954>                       Dc.l 0                               ;address of next 0 in include fil
000345F0 <AmiBlitz3.ab3@25955> titleat:              Ds.l 1                               ;5 longs for compile streaks
000345FA <AmiBlitz3.ab3@25956> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
000345FC <AmiBlitz3.ab3@25957> connest:              Ds.w 1                               ;conditional nest level
00034600 <AmiBlitz3.ab3@25958> firstconst:           Ds.l 1                               ;first constant (#a)
00034602 <AmiBlitz3.ab3@25959> numarg:               Ds.w 1                               ;number of macro arguements
00034606 <AmiBlitz3.ab3@25960> myoline:              Ds.l 1                               ;macro done yet?
0003460A <AmiBlitz3.ab3@25961> myline:               Ds.l 1                               ;pointer to some memory to create
0003460E <AmiBlitz3.ab3@25964>                       Ds.l 1
0003464E <AmiBlitz3.ab3@25965> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00034652 <AmiBlitz3.ab3@25966> concomsp:             Dc.l concomstack                     ;stack pointer
00034654 <AmiBlitz3.ab3@25967> oldqflag:             Ds.w 1
00034658 <AmiBlitz3.ab3@25970>                       Ds.l 1
0003465A <AmiBlitz3.ab3@25972>                       Ds.w 1
0003465E <AmiBlitz3.ab3@25973> firstfor:             Ds.l 1                               ;first for
00034660 <AmiBlitz3.ab3@25974> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00034662 <AmiBlitz3.ab3@25975> sbgot:                Ds.w 1                               ;flag for string got 2
00034664 <AmiBlitz3.ab3@25976> convsize:             Ds.w 1                               ;usertype org source
00034666 <AmiBlitz3.ab3@25977> userp:                Ds.w 1
0003466A <AmiBlitz3.ab3@25982> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003466C <AmiBlitz3.ab3@25983> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003466E <AmiBlitz3.ab3@25984> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00034672 <AmiBlitz3.ab3@25986> locloc:               Ds.l 1
00034674 <AmiBlitz3.ab3@25987> locchar:              Ds.w 1
000346F4 <AmiBlitz3.ab3@25988> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000346F6 <AmiBlitz3.ab3@25989> commode:              Ds.w 1                               ;in comma mode...
000346FA <AmiBlitz3.ab3@25990> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000346FE <AmiBlitz3.ab3@25991> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00034702 <AmiBlitz3.ab3@25992> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00034704 <AmiBlitz3.ab3@25994>                       Ds.w 1                               ;opt reset offset
00034804 <AmiBlitz3.ab3@25996>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00034904 <AmiBlitz3.ab3@25998>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00034906 <AmiBlitz3.ab3@25999> varcodelen:           Ds.w 1                               ;and length
00034908 <AmiBlitz3.ab3@26001>                       Ds.w 1
0003490E <AmiBlitz3.ab3@26002> oldvcodelen:          Ds.w 3                               ;old varcodelen
00034910 <AmiBlitz3.ab3@26005> Even4
00034914 <AmiBlitz3.ab3@26006> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00034916 <AmiBlitz3.ab3@26007> memlibstat:           Ds.w 1                               ;status of memory library during
00034918 <AmiBlitz3.ab3@26010>                       Dc.w 0
0003491A <AmiBlitz3.ab3@26012>                       Dc.w 0
0003491C <AmiBlitz3.ab3@26014> varmode:              Ds.w 1                               ;0 a5 pointer to global
00034920 <AmiBlitz3.ab3@26016> currentfunction:      Ds.l 1                               ;thisproc org source
00034924 <AmiBlitz3.ab3@26017> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00034926 <AmiBlitz3.ab3@26018> 
00034928 <AmiBlitz3.ab3@26020> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
0003492C <AmiBlitz3.ab3@26021> passstack:            Ds.l 1
00034930 <AmiBlitz3.ab3@26022> zero:                 Ds.l 1                               ;ZERO!
00034932 <AmiBlitz3.ab3@26023> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00034936 <AmiBlitz3.ab3@26025> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003493A <AmiBlitz3.ab3@26026> constantbase:         Ds.l 1                               ;firstinc org source ;first include
0003493C <AmiBlitz3.ab3@26027> lasta6:               Dc.w $FFFF                           ;-1 org source
0003493E <AmiBlitz3.ab3@26028> instringon:           Ds.w 1                               ;quoteflag org source
00034942 <AmiBlitz3.ab3@26029> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00034946 <AmiBlitz3.ab3@26030> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003494A <AmiBlitz3.ab3@26031> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003494E <AmiBlitz3.ab3@26032> endop:                Ds.l 1                               ;end of program pc - before finishups!
00034952 <AmiBlitz3.ab3@26033> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00034956 <AmiBlitz3.ab3@26034> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00034958 <AmiBlitz3.ab3@26035> numstatic:            Ds.w 1                               ;number of static structs
0003495C <AmiBlitz3.ab3@26036> staticdata:           Ds.l 1                               ;data1 val for statics
00034960 <AmiBlitz3.ab3@26037> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00034962 <AmiBlitz3.ab3@26038> sbasegot:             Ds.w 1                               ;string base got?
00034966 <AmiBlitz3.ab3@26039> litdata1:             Ds.l 1
0003496A <AmiBlitz3.ab3@26043> objlen:               Ds.l 1
0003496E <AmiBlitz3.ab3@26044> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00034972 <AmiBlitz3.ab3@26045> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00034974 <AmiBlitz3.ab3@26047> flagmask:             Ds.w 1                               ;mask for flag of variable when
00034976 <AmiBlitz3.ab3@26049> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00034978 <AmiBlitz3.ab3@26050> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
0003497C <AmiBlitz3.ab3@26051> temp1:                Ds.l 1
00034980 <AmiBlitz3.ab3@26052> temp2:                Ds.l 1
00034984 <AmiBlitz3.ab3@26054> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00034988 <AmiBlitz3.ab3@26055> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
000349FC <AmiBlitz3.ab3@26056> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00034A00 <AmiBlitz3.ab3@26057> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00034A80 <AmiBlitz3.ab3@26059> namebuff2:            Ds.b 128
00034A88 <AmiBlitz3.ab3@26060>                       Ds.b 8                               ;for fileinfoblock
00034AC8 <AmiBlitz3.ab3@26063> optstuff:             Ds.b 64                              ;temp opt make buffer
00034ACA <AmiBlitz3.ab3@26080>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00034ACE <AmiBlitz3.ab3@26081>   Dc.l xtra_versionnumber                                  ; vers org source
00034AD2 <AmiBlitz3.ab3@26082>   Dc.l create_iconfile                                     ; create icon for executable
00034AD6 <AmiBlitz3.ab3@26083>   Ds.l 1
00034AD8 <AmiBlitz3.ab3@26085>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00034ADC <AmiBlitz3.ab3@26088>   Dc.l set_use_debugger
00034AE0 <AmiBlitz3.ab3@26089>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00034AE4 <AmiBlitz3.ab3@26090>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00034AE8 <AmiBlitz3.ab3@26091>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00034AEC <AmiBlitz3.ab3@26092>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00034AF0 <AmiBlitz3.ab3@26093>   Dc.l set_make_smallestcode
00034AF4 <AmiBlitz3.ab3@26094>   Dc.l set_link_debuginfo
00034AF8 <AmiBlitz3.ab3@26095>   Dc.l set_autorun
00034AFC <AmiBlitz3.ab3@26096>   Dc.l set_interruptcheck
00034B00 <AmiBlitz3.ab3@26097>   Dc.l set_assemblercheck
00034B04 <AmiBlitz3.ab3@26099>   Dc.l set_overflowcheck
00034B08 <AmiBlitz3.ab3@26100>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00034B0C <AmiBlitz3.ab3@26101>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00034B10 <AmiBlitz3.ab3@26102>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00034B14 <AmiBlitz3.ab3@26105>   Ds.l 1
00034B16 <AmiBlitz3.ab3@26107>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00034B1A <AmiBlitz3.ab3@26114>   Dc.l objectbuffer
00034B1E <AmiBlitz3.ab3@26115>   Dc.l libsbuffer
00034B22 <AmiBlitz3.ab3@26116>   Dc.l systembuffer
00034B26 <AmiBlitz3.ab3@26117>   Dc.l databuffer
00034B2A <AmiBlitz3.ab3@26118>   Dc.l macrobuffer_size
00034B2E <AmiBlitz3.ab3@26119>   Dc.l stringbuffer
00034B32 <AmiBlitz3.ab3@26122>   Ds.l 1
00034B34 <AmiBlitz3.ab3@26126>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00034B3C <AmiBlitz3.ab3@26127>   Dc.l residents_table,0
00034B3E <AmiBlitz3.ab3@26131>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00034B46 <AmiBlitz3.ab3@26132>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00034B48 <AmiBlitz3.ab3@26133>   Ds.w 1
00034C44 <AmiBlitz3.ab3@26137>   Ds.l 63
00034D40 <AmiBlitz3.ab3@26138>   Ds.l 63
00034E3C <AmiBlitz3.ab3@26139>   Ds.l 63
00034F1E <AmiBlitz3.ab3@26140>   Ds.w 113
00034F20 <AmiBlitz3.ab3@26143> comsettings_message:  Ds.w 1                               ;allchg org source
00034F22 <AmiBlitz3.ab3@26144> xtra_versionnumber:   Ds.w 1                               ;vers org source
00034F28 <AmiBlitz3.ab3@26148>   CLR.b exefilename
00034F2A <AmiBlitz3.ab3@26149>   TST.l d0
00034F2E <AmiBlitz3.ab3@26150>   BNE read_xtrafile__l10
00034F30 <AmiBlitz3.ab3@26151> RTS
00034F36 <AmiBlitz3.ab3@26154>   JSR free_residents                                       ;jsr freeres2 org source
00034F3C <AmiBlitz3.ab3@26155> 
00034F42 <AmiBlitz3.ab3@26156>   LEA ptr_xtradata,A2
00034F44 <AmiBlitz3.ab3@26157>   MOVEQ.l #$00,D4
00034F46 <AmiBlitz3.ab3@26160>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00034F4A <AmiBlitz3.ab3@26161>     BEQ.b read_xtrafile__done
00034F4C <AmiBlitz3.ab3@26164>     MOVE.l (A2)+,D2
00034F50 <AmiBlitz3.ab3@26165>   BEQ.b read_xtrafile__loop
00034F52 <AmiBlitz3.ab3@26167>   MOVE.l D4,D3
00034F54 <AmiBlitz3.ab3@26168>   MOVE.l D7,D1
00034F58 <AmiBlitz3.ab3@26169>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00034F5A <AmiBlitz3.ab3@26170>   TST.l D0
00034F5E <AmiBlitz3.ab3@26171>   BNE.b read_xtrafile__loop2
00034F62 <AmiBlitz3.ab3@26172> BRA.w read_xtrafile__done2
00034F68 <AmiBlitz3.ab3@26175>   TST.b xtra_versionnumber
00034F6C <AmiBlitz3.ab3@26176>    BNE.b read_xtrafile__nover0
00034F74 <AmiBlitz3.ab3@26177>   MOVE.w #$0080,set_autorun                                ;auto run on
00034F7E <AmiBlitz3.ab3@26178>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00034F84 <AmiBlitz3.ab3@26179>   CLR.w set_assemblercheck                                 ;assembler checking off
00034F8E <AmiBlitz3.ab3@26180>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00034F92 <AmiBlitz3.ab3@26181> BRA.b read_xtrafile__ver0
00034F94 <AmiBlitz3.ab3@26184>   MOVE.l D7,D1                                             ;load cli arg!
00034F9A <AmiBlitz3.ab3@26185>   MOVE.l #str_cliarguments,D2
00034FA0 <AmiBlitz3.ab3@26186>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00034FA4 <AmiBlitz3.ab3@26187>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00034FAA <AmiBlitz3.ab3@26188>   MOVE.l #str_cliarguments,A0
00034FB0 <AmiBlitz3.ab3@26189>   ADDA.l #115,A0
00034FB6 <AmiBlitz3.ab3@26190>   MOVE.l #0,(a0) ; terminate it!
00034FB8 <AmiBlitz3.ab3@26192>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00034FBE <AmiBlitz3.ab3@26193>   MOVE.l #stacksize,D2
00034FC4 <AmiBlitz3.ab3@26194>   MOVE.l #4,D3
00034FC8 <AmiBlitz3.ab3@26195>   JSR _Read(A6)
00034FD2 <AmiBlitz3.ab3@26196>   CMP.l ##MIN_STACKSIZE,stacksize
00034FD6 <AmiBlitz3.ab3@26197>   BGE 'stackok
00034FE0 <AmiBlitz3.ab3@26198>   MOVE.l ##MIN_STACKSIZE,stacksize
00034FE2 <AmiBlitz3.ab3@26201>   MOVE.l D7,D1
00034FE8 <AmiBlitz3.ab3@26202>   MOVE.l #versioninformation,D2
00034FEE <AmiBlitz3.ab3@26203>   MOVE.l #4,D3
00034FF2 <AmiBlitz3.ab3@26204>   JSR _Read(A6)
00034FF4 <AmiBlitz3.ab3@26206>   MOVE.l D7,D1
00034FFA <AmiBlitz3.ab3@26207>   MOVE.l #number_of_builds,D2
00035000 <AmiBlitz3.ab3@26208>   MOVE.l #4,D3
00035004 <AmiBlitz3.ab3@26209>   JSR _Read(A6)
0003500A <AmiBlitz3.ab3@26215> 
00035010 <AmiBlitz3.ab3@26216>   MOVE.l A7,errstack
0003501A <AmiBlitz3.ab3@26217>   MOVE.l #read_xtrafile__done2,errcont
00035022 <AmiBlitz3.ab3@26218>   MOVE.w #$FFFF,ezerr
00035028 <AmiBlitz3.ab3@26221>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
0003502A <AmiBlitz3.ab3@26222>     MOVEQ.l #$04,D3
0003502C <AmiBlitz3.ab3@26223>     MOVE.l D7,D1
00035030 <AmiBlitz3.ab3@26224>     JSR _Read(A6)
00035032 <AmiBlitz3.ab3@26225>     TST.l D0
00035036 <AmiBlitz3.ab3@26226>     BEQ.b read_xtrafile__done2
0003503C <AmiBlitz3.ab3@26227>     MOVE.w temp1,D1
0003503E <AmiBlitz3.ab3@26228>     TST.w d1                                               ;new
00035042 <AmiBlitz3.ab3@26229>     BEQ read_xtrafile__done2                                         ;new
00035048 <AmiBlitz3.ab3@26230>      JSR AJL_0_6F1A
0003504E <AmiBlitz3.ab3@26232>     CMP.l #0,a1
00035052 <AmiBlitz3.ab3@26233>     BEQ read_xtrafile__dloop
00035056 <AmiBlitz3.ab3@26234>     MOVE.l $12(A1),D0
0003505E <AmiBlitz3.ab3@26235>     MOVE.w temp1+2,-$4(A1,D0.L)
00035062 <AmiBlitz3.ab3@26236> BRA.b read_xtrafile__dloop
00035066 <AmiBlitz3.ab3@26242>   LEA residents_table(PC),A0
00035068 <AmiBlitz3.ab3@26243>   MOVEQ.l #$07,D0
0003506C <AmiBlitz3.ab3@26246>     CLR.l $40(A0)
00035070 <AmiBlitz3.ab3@26247>     LEA ResidentEntryStep(A0),A0   ; $44
00035074 <AmiBlitz3.ab3@26248>   DBF D0,read_xtrafile__loop3
00035078 <AmiBlitz3.ab3@26250>   MOVEM.l D7/A6,-(A7)
0003507E <AmiBlitz3.ab3@26251>   JSR init_buffers
00035084 <AmiBlitz3.ab3@26252>   JSR reloadresident
00035088 <AmiBlitz3.ab3@26253>   MOVEM.l (A7)+,D7/A6
0003508A <AmiBlitz3.ab3@26254> RTS
00035092 <AmiBlitz3.ab3@26258>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035098 <AmiBlitz3.ab3@26267>   LEA ptr_xtradata,A2
0003509A <AmiBlitz3.ab3@26268>   MOVEQ.l #$00,D4
0003509C <AmiBlitz3.ab3@26272>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
000350A0 <AmiBlitz3.ab3@26273>   BEQ.b write_xtrafile__done
000350A2 <AmiBlitz3.ab3@26276>    MOVE.l (A2)+,D2
000350A6 <AmiBlitz3.ab3@26277>    BEQ.b write_xtrafile__loop
000350A8 <AmiBlitz3.ab3@26279>    MOVE.l D4,D3
000350AA <AmiBlitz3.ab3@26280>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
000350AE <AmiBlitz3.ab3@26281>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
000350B2 <AmiBlitz3.ab3@26282> BRA.b write_xtrafile__loop2
000350B4 <AmiBlitz3.ab3@26285>   MOVE.l D7,D1
000350BA <AmiBlitz3.ab3@26286>   MOVE.l #str_cliarguments,D2
000350C0 <AmiBlitz3.ab3@26287>   MOVE.l #116,D3
000350C4 <AmiBlitz3.ab3@26288>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
000350C6 <AmiBlitz3.ab3@26290>   MOVE.l D7,D1
000350CC <AmiBlitz3.ab3@26291>   MOVE.l #stacksize,D2
000350D2 <AmiBlitz3.ab3@26292>   MOVE.l #4,D3
000350D6 <AmiBlitz3.ab3@26293>   JSR _Write(A6)
000350D8 <AmiBlitz3.ab3@26295>   MOVE.l D7,D1
000350DE <AmiBlitz3.ab3@26296>   MOVE.l #versioninformation,D2
000350E4 <AmiBlitz3.ab3@26297>   MOVE.l #4,D3
000350E8 <AmiBlitz3.ab3@26298>   JSR _Write(A6)
000350EA <AmiBlitz3.ab3@26300>   MOVE.l D7,D1
000350F0 <AmiBlitz3.ab3@26301>   MOVE.l #number_of_builds,D2
000350F6 <AmiBlitz3.ab3@26302>   MOVE.l #4,D3
000350FA <AmiBlitz3.ab3@26303>   JSR _Write(A6)
00035100 <AmiBlitz3.ab3@26309>   LEA libpointer,A2
00035102 <AmiBlitz3.ab3@26312>     MOVE.l (A2),D0
00035106 <AmiBlitz3.ab3@26313>     BEQ.w write_xtrafile__done2
00035108 <AmiBlitz3.ab3@26314>     MOVEA.l D0,A2
0003510C <AmiBlitz3.ab3@26315>     MOVE.l $12(A2),D4
00035110 <AmiBlitz3.ab3@26316>     TST.w -$2(A2,D4.L)
00035114 <AmiBlitz3.ab3@26317>     BEQ.w write_xtrafile__loop3
00035118 <AmiBlitz3.ab3@26319>     LEA $4(A2),A0
0003511A <AmiBlitz3.ab3@26320>     MOVE.l A0,D2
0003511C <AmiBlitz3.ab3@26321>     MOVEQ.l #$02,D3
0003511E <AmiBlitz3.ab3@26322>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035122 <AmiBlitz3.ab3@26323>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035126 <AmiBlitz3.ab3@26325>     LEA -$4(A2,D4.L),A0
00035128 <AmiBlitz3.ab3@26326>     MOVE.l A0,D2
0003512A <AmiBlitz3.ab3@26327>     MOVEQ.l #$02,D3
0003512C <AmiBlitz3.ab3@26328>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035130 <AmiBlitz3.ab3@26329>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035134 <AmiBlitz3.ab3@26330> BRA.w write_xtrafile__loop3
0003513A <AmiBlitz3.ab3@26335>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
0003513C <AmiBlitz3.ab3@26336>   MOVE.l A2,D2           ; move the address to d2
00035142 <AmiBlitz3.ab3@26337>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035144 <AmiBlitz3.ab3@26338>   MOVE.l D7,D1           ; we set the file handle
00035148 <AmiBlitz3.ab3@26339>   JSR _Write(A6)         ; and we write it.
0003514A <AmiBlitz3.ab3@26341> RTS
00035150 <AmiBlitz3.ab3@26346>   LEA optssave,A0                      ; backup address
00035156 <AmiBlitz3.ab3@26347>   LEA ptr_xtradata,A1                  ; source address
00035158 <AmiBlitz3.ab3@26350>   MOVE.w (A1)+,D0                                          ;length of data move
0003515C <AmiBlitz3.ab3@26351>   BEQ.b 'backupdone
0003515E <AmiBlitz3.ab3@26352>   SUBQ.w #1,D0
00035160 <AmiBlitz3.ab3@26355>     MOVE.l (A1)+,D1
00035164 <AmiBlitz3.ab3@26356>     BEQ.b 'backuploop
00035166 <AmiBlitz3.ab3@26357>     MOVEA.l D1,A2
00035168 <AmiBlitz3.ab3@26358>     MOVE.w D0,D1
0003516A <AmiBlitz3.ab3@26361>       MOVE.b (A2)+,(A0)+
0003516E <AmiBlitz3.ab3@26362>   DBF D1,'backuploop3
00035172 <AmiBlitz3.ab3@26364> BRA.w 'backuploop2
00035178 <AmiBlitz3.ab3@26368>   LEA bufferlist,A1
0003517A <AmiBlitz3.ab3@26371>     MOVE.l (A1)+,D2
0003517E <AmiBlitz3.ab3@26372>     BEQ.b 'loop4done
00035180 <AmiBlitz3.ab3@26374>     MOVEA.l D2,A0
00035182 <AmiBlitz3.ab3@26375>     MOVE.l (A0),D2
00035184 <AmiBlitz3.ab3@26376>     ADDQ.w #8,A0
0003518A <AmiBlitz3.ab3@26377>     JSR makelong
0003518E <AmiBlitz3.ab3@26378> BRA.b 'loop4
00035194 <AmiBlitz3.ab3@26381>   CLR.w state_of_residents                                 ;resident change
0003519A <AmiBlitz3.ab3@26382>   CLR.w comsettings_message                                ;alloc change
000351A0 <AmiBlitz3.ab3@26383>   CLR.w maxobject_pos
000351A2 <AmiBlitz3.ab3@26384> RTS   ; new tomsmart1
000351A8 <AmiBlitz3.ab3@26388>   LEA optssave,A0
000351AE <AmiBlitz3.ab3@26389>   LEA ptr_xtradata,A1
000351B0 <AmiBlitz3.ab3@26392>   MOVE.w (A1)+,D0
000351B4 <AmiBlitz3.ab3@26393>   BEQ.b 'restoredone
000351B6 <AmiBlitz3.ab3@26394>   SUBQ.w #1,D0
000351B8 <AmiBlitz3.ab3@26397>     MOVE.l (A1)+,D1
000351BC <AmiBlitz3.ab3@26398>     BEQ.b 'restoreloop1
000351BE <AmiBlitz3.ab3@26399>     MOVEA.l D1,A2
000351C0 <AmiBlitz3.ab3@26400>     MOVE.w D0,D1
000351C2 <AmiBlitz3.ab3@26403>       MOVE.b (A0)+,(A2)+
000351C6 <AmiBlitz3.ab3@26404>   DBF D1,'restoreloop3
000351CA <AmiBlitz3.ab3@26406> BRA.b 'restoreloop2
000351CC <AmiBlitz3.ab3@26409> RTS
000351D2 <AmiBlitz3.ab3@26413>   JSR free_residents                    ; first free the allready loaded residents
000351D8 <AmiBlitz3.ab3@26414>   JSR Clear_Residents_table             ; second clear the complete resident table
000351DA <AmiBlitz3.ab3@26415> RTS
000351E2 <AmiBlitz3.ab3@26419>   MOVE.w #$FFFF,state_of_residents
000351E8 <AmiBlitz3.ab3@26420>   MOVE.w state_of_residents,D0
000351EE <AmiBlitz3.ab3@26421>   JSR reloadresident
000351F0 <AmiBlitz3.ab3@26422> RTS
000351F2 <AmiBlitz3.ab3@26427>   MOVE.l d0,a1
000351F8 <AmiBlitz3.ab3@26428>   MOVEA.l libpointer,A2
000351FC <AmiBlitz3.ab3@26431>     MOVE.l $12(A2),D0
00035200 <AmiBlitz3.ab3@26432>     TST.w -$2(A2,D0.L)
00035204 <AmiBlitz3.ab3@26433>      BEQ.w JL_0_102AAa
00035206 <AmiBlitz3.ab3@26434>     SUBQ.w #1,D1
0003520A <AmiBlitz3.ab3@26435>      BPL.w JL_0_102AAa
0003520E <AmiBlitz3.ab3@26436>     MOVEA.l -$1A(A2,D0.L),A3
00035210 <AmiBlitz3.ab3@26437>     ADDA.l A2,A3
00035212 <AmiBlitz3.ab3@26440>       MOVE.b (A3)+,(A1)+
00035216 <AmiBlitz3.ab3@26441>     BNE.w JL_0_10294a
00035218 <AmiBlitz3.ab3@26443>     CLR.b -(A1)
0003521C <AmiBlitz3.ab3@26444>     MOVE.w -$4(A2,D0.L),D0
00035222 <AmiBlitz3.ab3@26445>     AND.l #$ffff,d0
00035224 <AmiBlitz3.ab3@26446> RTS
00035226 <AmiBlitz3.ab3@26449>     MOVEA.l (A2),A2
0003522A <AmiBlitz3.ab3@26450> BRA.w JL_0_1027Ca
0003523A <AmiBlitz3.ab3@26455> str_maxobjects_name:   Dc.b "              ",0 : Even
0003524A <AmiBlitz3.ab3@26456> str_maxobjects_name2:  Dc.b "              ",0 : Even
0003524E <AmiBlitz3.ab3@26457> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035252 <AmiBlitz3.ab3@26458>                        Dc.l $00000000
0003525E <AmiBlitz3.ab3@26459> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035262 <AmiBlitz3.ab3@26461> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035266 <AmiBlitz3.ab3@26462>                        Dc.l $00000000
00035272 <AmiBlitz3.ab3@26463> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035276 <AmiBlitz3.ab3@26465> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
0003527A <AmiBlitz3.ab3@26466>                        Dc.l $00000000
00035286 <AmiBlitz3.ab3@26467> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003528A <AmiBlitz3.ab3@26469> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
0003528E <AmiBlitz3.ab3@26470>                        Dc.l $00000000
0003529A <AmiBlitz3.ab3@26471> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003529E <AmiBlitz3.ab3@26473> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
000352A2 <AmiBlitz3.ab3@26474>                        Dc.l $00000000
000352AE <AmiBlitz3.ab3@26475> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
000352B2 <AmiBlitz3.ab3@26477> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
000352B6 <AmiBlitz3.ab3@26478>                        Dc.l $00000000
000352C2 <AmiBlitz3.ab3@26479> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
000352C4 <AmiBlitz3.ab3@26481> maxobjects_value:      Dc.w $0064
000352C8 <AmiBlitz3.ab3@26482>                        Dc.l $00000000
000352D4 <AmiBlitz3.ab3@26483> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
000352D6 <AmiBlitz3.ab3@26485> maxobjects_value2:     Dc.w $0014
000352D8 <AmiBlitz3.ab3@26486>                        Dc.w $0000
000352E4 <AmiBlitz3.ab3@26488> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
000352E5 <AmiBlitz3.ab3@26492> set_create_iconfile:   Dc.b $00
000352E8 <AmiBlitz3.ab3@26493> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
000352EA <AmiBlitz3.ab3@26494>                        Dc.b $00,$01
000352EB <AmiBlitz3.ab3@26496> set_use_debugger:      Dc.b $00                            ; Flags.w
000352EE <AmiBlitz3.ab3@26497> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
000352F0 <AmiBlitz3.ab3@26498>                        Dc.b $00,$01                        ; GadgetType.w
000352F4 <AmiBlitz3.ab3@26499> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
000352F8 <AmiBlitz3.ab3@26500> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
000352FC <AmiBlitz3.ab3@26501> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
000352FE <AmiBlitz3.ab3@26502> AL_0_11094:            Ds.w 1
000352FF <AmiBlitz3.ab3@26504> set_make_smallestcode: Ds.b 1
00035302 <AmiBlitz3.ab3@26505> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035304 <AmiBlitz3.ab3@26506>                        Dc.b $00,$01
00035305 <AmiBlitz3.ab3@26507> set_link_debuginfo:    Ds.b 1
00035308 <AmiBlitz3.ab3@26508> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003530A <AmiBlitz3.ab3@26509>                        Dc.b $00,$01
0003552A <AmiBlitz3.ab3@26514>   Ds.l 136         ;resident files STEP $44 piece 8
000355AA <AmiBlitz3.ab3@26519> str_calcexpression:        Ds.l 32
000355AE <AmiBlitz3.ab3@26520> destbufferend_backup_calc: Ds.l 1
000355B8 <AmiBlitz3.ab3@26525>   MOVE.l destbufferend,destbufferend_backup_calc
000355BE <AmiBlitz3.ab3@26526> 
000355C4 <AmiBlitz3.ab3@26527>   MOVE.l A7,errstack
000355CE <AmiBlitz3.ab3@26528>   MOVE.l #Calc_Error_Exit,errcont
000355F8 <AmiBlitz3.ab3@26535>   !basic         ; get the flage for the conversion form the editor
0003563C <AmiBlitz3.ab3@26536>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00035680 <AmiBlitz3.ab3@26537>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
0003569E <AmiBlitz3.ab3@26538>   !asm
000356A4 <AmiBlitz3.ab3@26540>   LEA str_calcexpression,A0
000356AA <AmiBlitz3.ab3@26549>   JSR setcvars
000356B0 <AmiBlitz3.ab3@26550>   JSR setsvars
000356B6 <AmiBlitz3.ab3@26551>   CLR.w connest
000356BC <AmiBlitz3.ab3@26552>   LEA str_calcexpression,A5
000356C2 <AmiBlitz3.ab3@26553>   JSR AJL_0_BF6E
000356C8 <AmiBlitz3.ab3@26554>   LEA str_calcexpression,A0
000356CA <AmiBlitz3.ab3@26555>   TST.l D3
000356CE <AmiBlitz3.ab3@26556>    BPL.w JL_0_11AE8
000356D2 <AmiBlitz3.ab3@26557>   MOVE.b #$2D,(A0)+
000356D4 <AmiBlitz3.ab3@26558>   NEG.l D3
000356DC <AmiBlitz3.ab3@26561>   CMPI.w #$80,CalculatorButtonDecFlag
000356E0 <AmiBlitz3.ab3@26562>    BEQ.w JL_0_11B74
000356E2 <AmiBlitz3.ab3@26563>   MOVEQ.l #$00,D1
000356EA <AmiBlitz3.ab3@26564>   CMPI.w #$80,CalculatorButtonBinFlag
000356EE <AmiBlitz3.ab3@26565>    BNE.w JL_0_11B36
000356F0 <AmiBlitz3.ab3@26566>   MOVEQ.l #$1F,D0
000356F4 <AmiBlitz3.ab3@26567>   MOVE.b #$25,(A0)+
000356F6 <AmiBlitz3.ab3@26570>       LSL.l #1,D3
000356FA <AmiBlitz3.ab3@26571>        BCC.w JL_0_11B18
000356FE <AmiBlitz3.ab3@26572>       MOVE.b #"1",(A0)+
00035700 <AmiBlitz3.ab3@26573>       MOVEQ.l #-$01,D1
00035704 <AmiBlitz3.ab3@26574>   BRA.w JL_0_11B22
00035706 <AmiBlitz3.ab3@26577>       TST.w D1
0003570A <AmiBlitz3.ab3@26578>       BEQ.w JL_0_11B22
0003570E <AmiBlitz3.ab3@26579>       MOVE.b #"0",(A0)+
00035712 <AmiBlitz3.ab3@26582>  DBF D0,JL_0_11B08
00035714 <AmiBlitz3.ab3@26585>   TST.w D1
00035718 <AmiBlitz3.ab3@26586>   BNE.w JL_0_11B30
0003571C <AmiBlitz3.ab3@26587>   MOVE.b #"0",(A0)+
0003571E <AmiBlitz3.ab3@26590>   CLR.b (A0)
00035722 <AmiBlitz3.ab3@26591> BRA.w JL_0_11B7C
00035724 <AmiBlitz3.ab3@26594>   MOVEQ.l #$07,D0
00035728 <AmiBlitz3.ab3@26595>   MOVE.b #$24,(A0)+
0003572A <AmiBlitz3.ab3@26598>     MOVE.l D3,D2
0003572C <AmiBlitz3.ab3@26599>     SWAP D2
0003572E <AmiBlitz3.ab3@26600>     LSR.w #8,D2
00035730 <AmiBlitz3.ab3@26601>     LSR.w #4,D2
00035734 <AmiBlitz3.ab3@26602>     ADDI.w #$30,D2
00035738 <AmiBlitz3.ab3@26603>     CMP.w #$3A,D2
0003573C <AmiBlitz3.ab3@26604>      BCS.w JL_0_11B52
0003573E <AmiBlitz3.ab3@26605>     ADDQ.w #7,D2
00035742 <AmiBlitz3.ab3@26608>     CMP.w #$30,D2
00035746 <AmiBlitz3.ab3@26609>     BEQ.w JL_0_11B62
00035748 <AmiBlitz3.ab3@26610>     MOVE.b D2,(A0)+
0003574A <AmiBlitz3.ab3@26611>     MOVEQ.l #-$01,D1
0003574E <AmiBlitz3.ab3@26612>   BRA.w JL_0_11B6A
00035750 <AmiBlitz3.ab3@26615>     TST.w D1
00035754 <AmiBlitz3.ab3@26616>      BEQ.w JL_0_11B6A
00035756 <AmiBlitz3.ab3@26617>     MOVE.b D2,(A0)+
00035758 <AmiBlitz3.ab3@26620>     LSL.l #4,D3
0003575C <AmiBlitz3.ab3@26621>  DBF D0,JL_0_11B3C
00035760 <AmiBlitz3.ab3@26623> BRA.w JL_0_11B26
00035762 <AmiBlitz3.ab3@26626>   MOVE.l D3,D2
00035768 <AmiBlitz3.ab3@26627>   JSR makelong
00035772 <AmiBlitz3.ab3@26634>   MOVE.l destbufferend_backup_calc,destbufferend
00035774 <AmiBlitz3.ab3@26636> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00035873 <AmiBlitz3.ab3@26640> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00035874 <AmiBlitz3.ab3@26642> Even
00035876 <AmiBlitz3.ab3@26656>     MOVE.b (a5)+,d0
0003587A <AmiBlitz3.ab3@26657>     BEQ 'l2
0003587E <AmiBlitz3.ab3@26658>     CMP.b #$80,d0
00035882 <AmiBlitz3.ab3@26659>     BNE 'l1
00035884 <AmiBlitz3.ab3@26660>     MOVE.b (a5)+,d0
00035888 <AmiBlitz3.ab3@26661>     BEQ 'l2
0003588C <AmiBlitz3.ab3@26662>     CMP.b #$02,d0
00035890 <AmiBlitz3.ab3@26663>   BNE 'l1
00035894 <AmiBlitz3.ab3@26666>     CMP.b #$20,(a5)+
00035898 <AmiBlitz3.ab3@26667>   BEQ 'l3
0003589A <AmiBlitz3.ab3@26668>   SUBQ.l #1,a5
0003589C <AmiBlitz3.ab3@26669>   TST.b (a5)
000358A0 <AmiBlitz3.ab3@26670>   BEQ 'l2
000358A4 <AmiBlitz3.ab3@26671>   CMP.w #$8008,(a5)
000358A8 <AmiBlitz3.ab3@26672>   BEQ 'l4
000358AC <AmiBlitz3.ab3@26673>   CMP.w #$8009,(a5)
000358B0 <AmiBlitz3.ab3@26674>   BEQ 'l4
000358B4 <AmiBlitz3.ab3@26675> BRA 'l1
000358B6 <AmiBlitz3.ab3@26678>   ADDQ.l #2,a5
000358BC <AmiBlitz3.ab3@26679>   JSR skiprest
000358BE <AmiBlitz3.ab3@26680> RTS
000358C4 <AmiBlitz3.ab3@26683>   JSR nextline
000358C8 <AmiBlitz3.ab3@26684>   BNE 'l1
000358CA <AmiBlitz3.ab3@26685> RTS
000358F4 <AmiBlitz3.ab3@26689>   !basic
000358FE <AmiBlitz3.ab3@26690>   DateFormat 1
0003590C <AmiBlitz3.ab3@26691>   i.l=SystemDate
00035932 <AmiBlitz3.ab3@26692>   a$=Date$ (i)
000359B0 <AmiBlitz3.ab3@26693>   a$=Replace$(a$,"/",".")
000359B6 <AmiBlitz3.ab3@26694>   GetD0 &a$
000359B8 <AmiBlitz3.ab3@26695>   MOVEQ #8,d2
000359BA <AmiBlitz3.ab3@26696>   MOVE.l d0,a0
000359BC <AmiBlitz3.ab3@26699>     MOVE.b (a0)+,d1
000359C2 <AmiBlitz3.ab3@26700>     JSR pokedata1b
000359C6 <AmiBlitz3.ab3@26701>  DBF d2,'l1
000359C8 <AmiBlitz3.ab3@26703>   MOVEQ #0,d0
000359CA <AmiBlitz3.ab3@26704>   MOVE.b (a0)+,d0
000359E8 <AmiBlitz3.ab3@26705>   !asm
000359EE <AmiBlitz3.ab3@26706>   ADD.l #9,d2
000359F4 <AmiBlitz3.ab3@26707>   ADD.l #9,a5
000359F6 <AmiBlitz3.ab3@26708> RTS
00035A20 <AmiBlitz3.ab3@26712>   !basic
00035A2A <AmiBlitz3.ab3@26713>   DateFormat 0
00035A38 <AmiBlitz3.ab3@26714>   i.l=SystemDate
00035A5E <AmiBlitz3.ab3@26715>   a$=Date$ (i)
00035ADC <AmiBlitz3.ab3@26716>   a$=Replace$(a$,"/",".")
00035AE2 <AmiBlitz3.ab3@26717>   GetD0 &a$
00035AE4 <AmiBlitz3.ab3@26718>   MOVEQ #8,d2
00035AE6 <AmiBlitz3.ab3@26719>   MOVE.l d0,a0
00035AE8 <AmiBlitz3.ab3@26722>     MOVE.b (a0)+,d1
00035AEE <AmiBlitz3.ab3@26723>     JSR pokedata1b
00035AF2 <AmiBlitz3.ab3@26724>  DBF d2,'l1
00035AF4 <AmiBlitz3.ab3@26726>   MOVEQ #0,d0
00035AF6 <AmiBlitz3.ab3@26727>   MOVE.b (a0)+,d0
00035B14 <AmiBlitz3.ab3@26728>   !asm
00035B1A <AmiBlitz3.ab3@26729>   ADD.l #9,d2
00035B20 <AmiBlitz3.ab3@26730>   ADD.l #13,a5
00035B22 <AmiBlitz3.ab3@26731> RTS
00035B4C <AmiBlitz3.ab3@26735>   !basic
00035B56 <AmiBlitz3.ab3@26736>   DateFormat 1
00035B64 <AmiBlitz3.ab3@26737>   i.l = SystemDate
00035B8A <AmiBlitz3.ab3@26738>   a$ = Date$ (i)
00035C08 <AmiBlitz3.ab3@26739>   a$ = Replace$(a$,"/",".")
00035C0E <AmiBlitz3.ab3@26740>   GetD0 &a$
00035C10 <AmiBlitz3.ab3@26741>   MOVEQ #8,d2
00035C12 <AmiBlitz3.ab3@26742>   MOVE.l d0,a0
00035C14 <AmiBlitz3.ab3@26745>     MOVE.b (a0)+,d1
00035C1A <AmiBlitz3.ab3@26746>     JSR writebyte
00035C1E <AmiBlitz3.ab3@26747>  DBF d2,'l1
00035C20 <AmiBlitz3.ab3@26749>   MOVEQ #0,d0
00035C22 <AmiBlitz3.ab3@26750>   MOVE.b (a0)+,d0
00035C40 <AmiBlitz3.ab3@26751>   !asm
00035C46 <AmiBlitz3.ab3@26752>   ADD.l #9,a5
00035C48 <AmiBlitz3.ab3@26753> RTS
00035C72 <AmiBlitz3.ab3@26757>   !basic
00035C7C <AmiBlitz3.ab3@26758>   DateFormat 0
00035C8A <AmiBlitz3.ab3@26759>   i.l=SystemDate
00035CB0 <AmiBlitz3.ab3@26760>   a$=Date$ (i)
00035D2E <AmiBlitz3.ab3@26761>   a$=Replace$(a$,"/",".")
00035D34 <AmiBlitz3.ab3@26762>   GetD0 &a$
00035D36 <AmiBlitz3.ab3@26763>   MOVEQ #8,d2
00035D38 <AmiBlitz3.ab3@26764>   MOVE.l d0,a0
00035D3A <AmiBlitz3.ab3@26767>     MOVE.b (a0)+,d1
00035D40 <AmiBlitz3.ab3@26768>     JSR writebyte
00035D44 <AmiBlitz3.ab3@26769>  DBF d2,'l1
00035D46 <AmiBlitz3.ab3@26771>   MOVEQ #0,d0
00035D48 <AmiBlitz3.ab3@26772>   MOVE.b (a0)+,d0
00035D66 <AmiBlitz3.ab3@26773>   !asm
00035D6C <AmiBlitz3.ab3@26774>   ADD.l #13,a5
00035D6E <AmiBlitz3.ab3@26775> RTS
00035D70 <AmiBlitz3.ab3@26779>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00035D72 <AmiBlitz3.ab3@26780>   MOVE.l a5,d0
00035D9C <AmiBlitz3.ab3@26781>   !basic
00035DA0 <AmiBlitz3.ab3@26782>   _myD0.l = PutD0
00035DAA <AmiBlitz3.ab3@26783>   If _myD0
00035DF0 <AmiBlitz3.ab3@26784>     verstring$ = Left$(Peek.s(_myD0),9+3)
00035E42 <AmiBlitz3.ab3@26785>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00035E48 <AmiBlitz3.ab3@26786>   Else
00035E82 <AmiBlitz3.ab3@26787>     error{"INTERNAL: Invalid pointer in version_string!"}
00035E92 <AmiBlitz3.ab3@26792>   actual_version.l = Peek.l(?versioninformation)
00035EA2 <AmiBlitz3.ab3@26793>   actual_build.l   = Peek.l(?number_of_builds)
00035EC6 <AmiBlitz3.ab3@26795>   Format "00"
00035EFC <AmiBlitz3.ab3@26796>   Select verstring$
00035F20 <AmiBlitz3.ab3@26798>     Case "VER_MAJOR"
00035F5C <AmiBlitz3.ab3@26799>      put_versionstr$ = Str$(actual_version LSR 24)
00035F86 <AmiBlitz3.ab3@26801>     Case "VER_MINOR"
00035FCA <AmiBlitz3.ab3@26802>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00035FF4 <AmiBlitz3.ab3@26804>     Case "VER_PATCH"
00036038 <AmiBlitz3.ab3@26805>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036062 <AmiBlitz3.ab3@26807>     Case "VER_BUILD"
00036086 <AmiBlitz3.ab3@26808>      Format ""
000360BA <AmiBlitz3.ab3@26809>      put_versionstr$ = Str$(actual_build)
000360C0 <AmiBlitz3.ab3@26811>     Default
000360E8 <AmiBlitz3.ab3@26812>      put_versionstr$ = "{unknown compilerconstant}"
000360F6 <AmiBlitz3.ab3@26815>   End Select
0003611A <AmiBlitz3.ab3@26816>   Format ""
0003612A <AmiBlitz3.ab3@26818>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
0003612C <AmiBlitz3.ab3@26819>   MOVE.l d0,d2
0003612E <AmiBlitz3.ab3@26820>   MOVE.l d2,-(a7)
00036132 <AmiBlitz3.ab3@26821>   SUB #1,d2
00036138 <AmiBlitz3.ab3@26823>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003613A <AmiBlitz3.ab3@26824>   MOVE.l d0,a0
0003613C <AmiBlitz3.ab3@26827>     MOVE.b (a0)+,d1
00036142 <AmiBlitz3.ab3@26828>     JSR pokedata1b
00036146 <AmiBlitz3.ab3@26829>  DBF d2,'l1
00036148 <AmiBlitz3.ab3@26831>   MOVEQ #0,d0
00036166 <AmiBlitz3.ab3@26832>   !asm
00036168 <AmiBlitz3.ab3@26833>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003616A <AmiBlitz3.ab3@26834>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003616C <AmiBlitz3.ab3@26835>   ADD.l d0,d2
00036172 <AmiBlitz3.ab3@26836>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036174 <AmiBlitz3.ab3@26837>   MOVEQ #0,d0
00036176 <AmiBlitz3.ab3@26838> RTS
00036178 <AmiBlitz3.ab3@26842>   MOVE.l a5,d0
000361A2 <AmiBlitz3.ab3@26843>   !basic
000361A6 <AmiBlitz3.ab3@26844>   _myD0.l = PutD0
000361B0 <AmiBlitz3.ab3@26845>   If _myD0
000361F6 <AmiBlitz3.ab3@26846>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036248 <AmiBlitz3.ab3@26847>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003624E <AmiBlitz3.ab3@26848>   Else
00036288 <AmiBlitz3.ab3@26849>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036298 <AmiBlitz3.ab3@26854>   actual_version.l = Peek.l(?versioninformation)
000362A8 <AmiBlitz3.ab3@26855>   actual_build.l   = Peek.l(?number_of_builds)
000362CC <AmiBlitz3.ab3@26857>   Format ""
00036302 <AmiBlitz3.ab3@26858>   Select verstring$
00036326 <AmiBlitz3.ab3@26860>     Case "VER_MAJOR"
00036362 <AmiBlitz3.ab3@26861>      put_versionstr$ = Str$(actual_version LSR 24)
0003638C <AmiBlitz3.ab3@26863>     Case "VER_MINOR"
000363D0 <AmiBlitz3.ab3@26864>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000363FA <AmiBlitz3.ab3@26866>     Case "VER_PATCH"
0003643E <AmiBlitz3.ab3@26867>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036468 <AmiBlitz3.ab3@26869>     Case "VER_BUILD"
0003648C <AmiBlitz3.ab3@26870>      Format ""
000364C0 <AmiBlitz3.ab3@26871>      put_versionstr$ = Str$(actual_build)
000364C6 <AmiBlitz3.ab3@26873>     Default
000364EE <AmiBlitz3.ab3@26874>      put_versionstr$ = "{unknown compilerconstant}"
000364FC <AmiBlitz3.ab3@26876>   End Select
00036520 <AmiBlitz3.ab3@26877>   Format ""
00036536 <AmiBlitz3.ab3@26879>   GetD0 FLen(put_versionstr$)-1
00036538 <AmiBlitz3.ab3@26880>   MOVE.l d0,d2
0003653E <AmiBlitz3.ab3@26882>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036540 <AmiBlitz3.ab3@26883>   MOVE.l d0,a0
00036542 <AmiBlitz3.ab3@26886>     MOVE.b (a0)+,d1
00036548 <AmiBlitz3.ab3@26887>     JSR writebyte
0003654C <AmiBlitz3.ab3@26888>  DBF d2,'l1
0003654E <AmiBlitz3.ab3@26890>   MOVEQ #0,d0
00036550 <AmiBlitz3.ab3@26891>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003656E <AmiBlitz3.ab3@26892>   !asm
00036574 <AmiBlitz3.ab3@26893>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036576 <AmiBlitz3.ab3@26894> RTS
00036578 <AmiBlitz3.ab3@26996>  MOVE.l a5,-(a7)
000365A4 <AmiBlitz3.ab3@26997>  !fget
000365A8 <AmiBlitz3.ab3@26998>  CMP.w #".",d0
000365AC <AmiBlitz3.ab3@26999>  BNE 'skip
000365B0 <AmiBlitz3.ab3@27000>  MOVEM.l a2/d2,-(a7)
000365B6 <AmiBlitz3.ab3@27001>  LEA newtypebase,a2
000365BC <AmiBlitz3.ab3@27002>  JSR getparameter2
000365C0 <AmiBlitz3.ab3@27003>  BEQ.w JUMP_syntaxerr
000365C6 <AmiBlitz3.ab3@27004>  JSR findtype
000365CA <AmiBlitz3.ab3@27005>  BNE.w JUMP_notypeerr
000365D0 <AmiBlitz3.ab3@27006>  MOVE.l a2,typetocast
000365D4 <AmiBlitz3.ab3@27007>  MOVEM.l (a7)+,a2/d2
000365D8 <AmiBlitz3.ab3@27008>  CMP.w #")",d0
000365DC <AmiBlitz3.ab3@27009>  BNE JUMP_errorbracketmiss
000365DE <AmiBlitz3.ab3@27010>  ADDQ.l #4,a7
0003660A <AmiBlitz3.ab3@27011>  !fget
00036610 <AmiBlitz3.ab3@27012>  JMP nocast
00036612 <AmiBlitz3.ab3@27014> 'skip MOVE.l (a7)+,a5
00036618 <AmiBlitz3.ab3@27015>  JMP JL_0_A410
0003661E <AmiBlitz3.ab3@27017> JUMP_errorbracketmiss JMP errorbracketmiss
00036648 <AmiBlitz3.ab3@27019> Function.l ab3_GetIncludeLock{filename.s}
00036668 <AmiBlitz3.ab3@27020>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000366C0 <AmiBlitz3.ab3@27021>   ex.s       = dos_GetExt{filename}
000366D4 <AmiBlitz3.ab3@27023>   If incLock = False
00036748 <AmiBlitz3.ab3@27024>     filename = dos_SetExt{filename,"ab3"}
00036768 <AmiBlitz3.ab3@27025>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003677C <AmiBlitz3.ab3@27028>   If incLock = False
000367F0 <AmiBlitz3.ab3@27029>     filename = dos_SetExt{filename,"ab2"}
00036810 <AmiBlitz3.ab3@27030>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00036824 <AmiBlitz3.ab3@27033>   If incLock = False
00036898 <AmiBlitz3.ab3@27034>     filename = dos_SetExt{filename,"bb2"}
000368B8 <AmiBlitz3.ab3@27035>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000368CC <AmiBlitz3.ab3@27038>   If incLock = False
0003695E <AmiBlitz3.ab3@27039>     filename = dos_SetExt{filename,ex+".ab3"}
0003697E <AmiBlitz3.ab3@27040>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00036992 <AmiBlitz3.ab3@27043>   If incLock = False
00036A06 <AmiBlitz3.ab3@27044>     filename = dos_SetExt{filename,"ab2"}
00036A26 <AmiBlitz3.ab3@27045>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00036A3A <AmiBlitz3.ab3@27048>   If incLock = False
00036AAE <AmiBlitz3.ab3@27049>     filename = dos_SetExt{filename,"bb2"}
00036ACE <AmiBlitz3.ab3@27050>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00036AD8 <AmiBlitz3.ab3@27053>  Function Return incLock
00036AF2 <AmiBlitz3.ab3@27054> End Function
00036B1C <AmiBlitz3.ab3@27058>   !basic
00036B46 <AmiBlitz3.ab3@27059>   incString.s = Peek$(?ptr_parameterstore)
00036B74 <AmiBlitz3.ab3@27061>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00036B78 <AmiBlitz3.ab3@27062>   incDirP.l   = PutD0                                       ;    "
00036BA0 <AmiBlitz3.ab3@27063>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00036C20 <AmiBlitz3.ab3@27064>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00036C52 <AmiBlitz3.ab3@27065>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00036C66 <AmiBlitz3.ab3@27067>   If incLock = False ; not found => check default Include Directory
00036C76 <AmiBlitz3.ab3@27068>     incDirP.l = Peek.l(?incd)
00036C80 <AmiBlitz3.ab3@27069>     If incDirP
00036CA8 <AmiBlitz3.ab3@27070>       incDir_.s = Peek.s(incDirP)
00036CAE <AmiBlitz3.ab3@27071>     Else
00036D18 <AmiBlitz3.ab3@27072>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00036D98 <AmiBlitz3.ab3@27074>     incFile.s = dos_AddPart{incDir_,incString}
00036DCA <AmiBlitz3.ab3@27075>     incLock.l = ab3_GetIncludeLock{incFile}
00036DDE <AmiBlitz3.ab3@27078>   If incLock = False ; not found => check relative to current source
00036DF6 <AmiBlitz3.ab3@27079>     incDepth.l = Peek.w(?ininclude)-1
00036E1C <AmiBlitz3.ab3@27080>     If incDepth >= 0 AND incDepth < #maxincludes
00036E7C <AmiBlitz3.ab3@27081>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00036EFC <AmiBlitz3.ab3@27082>       incFile.s = dos_AddPart{incDir_,incString}
00036F2E <AmiBlitz3.ab3@27083>       incLock.l = ab3_GetIncludeLock{incFile}
00036F42 <AmiBlitz3.ab3@27087>   If incLock = False ; still not found => check default Include Directory and name only
00036F52 <AmiBlitz3.ab3@27088>     incDirP.l = Peek.l(?incd)
00036F5C <AmiBlitz3.ab3@27089>     If incDirP
00036F84 <AmiBlitz3.ab3@27090>       incDir_.s = Peek.s(incDirP)
00036F8A <AmiBlitz3.ab3@27091>     Else
00036FF4 <AmiBlitz3.ab3@27092>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
000370A2 <AmiBlitz3.ab3@27094>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
000370D4 <AmiBlitz3.ab3@27095>     incLock.l = ab3_GetIncludeLock{incFile}
000370DE <AmiBlitz3.ab3@27098>   If incLock
000370F4 <AmiBlitz3.ab3@27099>     MaxLen incFile = 1024
00037118 <AmiBlitz3.ab3@27100>     NameFromLock_ incLock,&incFile,1024
00037142 <AmiBlitz3.ab3@27101>     incFile = Peek.s(&incFile)
0003717A <AmiBlitz3.ab3@27102>     Poke$ ?ptr_parameterstore,incFile
0003718E <AmiBlitz3.ab3@27103>     i = FLen(incFile)
0003719A <AmiBlitz3.ab3@27104>     GetReg d0,i
000371A0 <AmiBlitz3.ab3@27105>     MOVE.l d0,tempstore
000371B0 <AmiBlitz3.ab3@27106>     UnLock_ incLock
000371CE <AmiBlitz3.ab3@27109>   !asm
000371D4 <AmiBlitz3.ab3@27110>   TST.l tempstore
000371D8 <AmiBlitz3.ab3@27111>    BEQ 'l1
000371DE <AmiBlitz3.ab3@27112>   MOVE.l tempstore,d2
000371E0 <AmiBlitz3.ab3@27115> RTS
0003720A <AmiBlitz3.ab3@27119>   !basic
00037234 <AmiBlitz3.ab3@27120>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037262 <AmiBlitz3.ab3@27121>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037266 <AmiBlitz3.ab3@27122>   incDirP.l   = PutD0                                       ;    "
0003728E <AmiBlitz3.ab3@27123>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003730E <AmiBlitz3.ab3@27124>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003732E <AmiBlitz3.ab3@27125>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037342 <AmiBlitz3.ab3@27127>   If incLock = False                                        ; not found => try orignal string only to find
00037362 <AmiBlitz3.ab3@27128>     incLock.l = Lock_(&incString,#ACCESS_READ)
0003736C <AmiBlitz3.ab3@27131>   If incLock                                                ; found => store full path
00037382 <AmiBlitz3.ab3@27132>     MaxLen incFile = 1024
000373A6 <AmiBlitz3.ab3@27133>     NameFromLock_ incLock,&incFile,1024
000373D0 <AmiBlitz3.ab3@27134>     incFile = Peek.s(&incFile)
00037408 <AmiBlitz3.ab3@27135>     Poke$ ?ptr_parameterstore,incFile
00037414 <AmiBlitz3.ab3@27138> 
00037432 <AmiBlitz3.ab3@27139>   !asm
00037434 <AmiBlitz3.ab3@27140> RTS
0003743A <AmiBlitz3.ab3@27151>   JSR Aclearallvars
00037440 <AmiBlitz3.ab3@27152>   JSR free_unusedfunctions
0003744A <AmiBlitz3.ab3@27167>   MOVE.l #"NORE",reqmode
00037450 <AmiBlitz3.ab3@27168> JSR handle_compileerror
00037452 <AmiBlitz3.ab3@27171>   MOVE.l d0,-(a7)
00037454 <AmiBlitz3.ab3@27172>   MOVE.l a5,d0
0003745E <AmiBlitz3.ab3@27173>   !basica7
00037462 <AmiBlitz3.ab3@27174>   i.l = PutD0
0003746C <AmiBlitz3.ab3@27175>   If i
00037494 <AmiBlitz3.ab3@27176>     a$ = Peek$(i)
000374C6 <AmiBlitz3.ab3@27177>     b$ = Peeks$(i-7,7)
000375FE <AmiBlitz3.ab3@27179> 
00037604 <AmiBlitz3.ab3@27180>     MOVE.l d0,result
00037608 <AmiBlitz3.ab3@27182>   !asma7
0003760A <AmiBlitz3.ab3@27183>   MOVE.l (a7)+,d0
0003760C <AmiBlitz3.ab3@27184> RTS
00037636 <AmiBlitz3.ab3@27188>   !basic
00037664 <AmiBlitz3.ab3@27189>   !ComData_LEA{comStr_CurrentDir,D0}
00037668 <AmiBlitz3.ab3@27190>   currentDirP.l = PutD0
00037696 <AmiBlitz3.ab3@27192>   !ComData_LEA{comStr_SourceName,D0}
0003769A <AmiBlitz3.ab3@27193>   fileNameP.l = PutD0
000376C2 <AmiBlitz3.ab3@27195>   check_dirname$  = Peek$(currentDirP)
000376EA <AmiBlitz3.ab3@27196>   check_filename$ = Peek$(fileNameP)
00037770 <AmiBlitz3.ab3@27197>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00037776 <AmiBlitz3.ab3@27198>     JSR free_unusedfunctions
000377C0 <AmiBlitz3.ab3@27200>   olddirname$ = Peek$(check_dirname$)
0003780A <AmiBlitz3.ab3@27201>   oldfilename$ = Peek$(check_filename$)
00037834 <AmiBlitz3.ab3@27202>   For i = 0 To #maxincludes-1
00037848 <AmiBlitz3.ab3@27203>     incline(i) = 0
00037858 <AmiBlitz3.ab3@27204>   Next
00037876 <AmiBlitz3.ab3@27205>   !asm
00037878 <AmiBlitz3.ab3@27206> RTS
0003787A <AmiBlitz3.ab3@27210>   MOVEQ #0,d1
0003787C <AmiBlitz3.ab3@27213>   MOVE.b (a5)+,d0
00037880 <AmiBlitz3.ab3@27214>   BEQ 'er1
00037884 <AmiBlitz3.ab3@27215>   CMP.b #$20,d0
00037888 <AmiBlitz3.ab3@27216>   BEQ 'l1
0003788A <AmiBlitz3.ab3@27217>   ADDQ #1,d1
0003788E <AmiBlitz3.ab3@27218>   CMP.b #$22,d0
00037892 <AmiBlitz3.ab3@27219>   BNE 'l1
00037894 <AmiBlitz3.ab3@27220> RTS
0003789A <AmiBlitz3.ab3@27223> JMP syntaxerr
000378BE <AmiBlitz3.ab3@27234> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
000378DC <AmiBlitz3.ab3@27235> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
000378E2 <AmiBlitz3.ab3@27240>   TST.b exdebug
000378E6 <AmiBlitz3.ab3@27241>   BNE 'l10
000378EC <AmiBlitz3.ab3@27242>   MOVE.l #$4e71,d1
000378F2 <AmiBlitz3.ab3@27243>   JSR writeword
000378F8 <AmiBlitz3.ab3@27244>   MOVE.l destpointer,d0
000378FA <AmiBlitz3.ab3@27245>   MOVE.l d0,d1
000378FC <AmiBlitz3.ab3@27246>   ADDQ.l #3,d1
00037902 <AmiBlitz3.ab3@27247>   AND.l #$fffffffc,d1
00037908 <AmiBlitz3.ab3@27248>   MOVE.l d1,destpointer
0003790E <AmiBlitz3.ab3@27249>   SUB.l destpointer,d0
00037912 <AmiBlitz3.ab3@27250>   BEQ 'lnf1
0003791C <AmiBlitz3.ab3@27251>   CMP.l #-1,bssstart
00037920 <AmiBlitz3.ab3@27252>   BNE 'lnf1
0003792A <AmiBlitz3.ab3@27253>   CMP.l #-1,chipstart
0003792E <AmiBlitz3.ab3@27254>   BNE 'lnf1
00037934 <AmiBlitz3.ab3@27255>   MOVE.l destpointer,a4
0003793A <AmiBlitz3.ab3@27256>   TST.w dontwrite
0003793E <AmiBlitz3.ab3@27257>   BNE 'lnf1
00037944 <AmiBlitz3.ab3@27258>   MOVE.w #$4e71,-2(a4)
0003794E <AmiBlitz3.ab3@27261>   CMP.l #-1,bssstart
00037952 <AmiBlitz3.ab3@27262>   BEQ 'l11
00037958 <AmiBlitz3.ab3@27263>   MOVE.l #erro1t,-(a7)
0003795E <AmiBlitz3.ab3@27264> JMP handle_compileerror
00037968 <AmiBlitz3.ab3@27267>   MOVE.l destpointer,bssstart
00037970 <AmiBlitz3.ab3@27268>   MOVE.b #1,bssmode
00037976 <AmiBlitz3.ab3@27271>   TST.b chipmode
0003797A <AmiBlitz3.ab3@27272>   BEQ 'l10
00037984 <AmiBlitz3.ab3@27273>   MOVE.l destpointer,chipend
0003798A <AmiBlitz3.ab3@27274>   CLR.b chipmode
00037990 <AmiBlitz3.ab3@27277>   JSR get1bytemain
00037992 <AmiBlitz3.ab3@27278> RTS
00037998 <AmiBlitz3.ab3@27282>    TST.b exdebug
0003799C <AmiBlitz3.ab3@27283>   BNE 'x1
000379A2 <AmiBlitz3.ab3@27284>   MOVE.l destpointer,d0
000379A8 <AmiBlitz3.ab3@27285>   MOVE.l d0,realbssend
000379AE <AmiBlitz3.ab3@27286>   MOVE.l #$4e71,d1
000379B4 <AmiBlitz3.ab3@27287>   JSR writeword
000379BA <AmiBlitz3.ab3@27288>   MOVE.l destpointer,d0
000379BC <AmiBlitz3.ab3@27289>   MOVE.l d0,d1
000379BE <AmiBlitz3.ab3@27290>   ADDQ.l #3,d1
000379C4 <AmiBlitz3.ab3@27291>   AND.l #$fffffffc,d1
000379CA <AmiBlitz3.ab3@27292>   MOVE.l d1,destpointer
000379D0 <AmiBlitz3.ab3@27293>   SUB.l destpointer,d0
000379D4 <AmiBlitz3.ab3@27294>   BEQ 'lnf1
000379DA <AmiBlitz3.ab3@27295>   MOVE.l destpointer,a4
000379E4 <AmiBlitz3.ab3@27296>   CMP.l #-1,bssstart
000379E8 <AmiBlitz3.ab3@27297>   BNE 'lnf1
000379F2 <AmiBlitz3.ab3@27298>   CMP.l #-1,chipstart
000379F6 <AmiBlitz3.ab3@27299>   BNE 'lnf1
000379FC <AmiBlitz3.ab3@27300>   TST.w dontwrite
00037A00 <AmiBlitz3.ab3@27301>   BNE 'lnf1
00037A06 <AmiBlitz3.ab3@27302>   MOVE.w #$4e71,-2(a4)
00037A0C <AmiBlitz3.ab3@27305>   TST.b bssmode
00037A10 <AmiBlitz3.ab3@27306>   BEQ 'l10
00037A1A <AmiBlitz3.ab3@27307>   MOVE.l destpointer,bssend
00037A20 <AmiBlitz3.ab3@27308>   CLR.b bssmode
00037A2A <AmiBlitz3.ab3@27313>   CMP.l #-1,chipstart
00037A2E <AmiBlitz3.ab3@27314>   BEQ 'l11
00037A34 <AmiBlitz3.ab3@27315>   MOVE.l #erro1t,-(a7)
00037A3A <AmiBlitz3.ab3@27316> JMP handle_compileerror
00037A44 <AmiBlitz3.ab3@27319>   MOVE.l destpointer,chipstart
00037A4C <AmiBlitz3.ab3@27320>   MOVE.b #1,chipmode
00037A52 <AmiBlitz3.ab3@27323>   JSR get1bytemain
00037A54 <AmiBlitz3.ab3@27324> RTS
00037A7E <AmiBlitz3.ab3@27328>   !basic
00037A90 <AmiBlitz3.ab3@27338>   i.l = Peek.w(?ininclude)
00037AB6 <AmiBlitz3.ab3@27339>   If i>=0 AND i<#maxincludes
00037AE8 <AmiBlitz3.ab3@27340>     incdim (i) = Peek.s(?includetemp2)
00037B02 <AmiBlitz3.ab3@27341>     incline(i) = Peek.l(?includeline)
00037B0C <AmiBlitz3.ab3@27343>     If CLIMode
00037BBA <AmiBlitz3.ab3@27344>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00037BD8 <AmiBlitz3.ab3@27348>   !asm
00037BDA <AmiBlitz3.ab3@27349> RTS
00037C04 <AmiBlitz3.ab3@27353>   !basic
00037C16 <AmiBlitz3.ab3@27354>   i.l = Peek.w(?ininclude)
00037C3C <AmiBlitz3.ab3@27355>   If i>=0 AND i<#maxincludes
00037C6C <AmiBlitz3.ab3@27356>     incdim (i) = ""
00037C80 <AmiBlitz3.ab3@27357>     incline(i) = 0
00037CB8 <AmiBlitz3.ab3@27358>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00037CD6 <AmiBlitz3.ab3@27360>   !asm
00037CD8 <AmiBlitz3.ab3@27361> RTS
00037CDE <AmiBlitz3.ab3@27365>   LEA replacedat,a0
00037CE2 <AmiBlitz3.ab3@27366>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00037CE4 <AmiBlitz3.ab3@27367> RTS
00037CEA <AmiBlitz3.ab3@27371>   TST.b fpu
00037CEE <AmiBlitz3.ab3@27372>   BEQ 'l1
00037CF8 <AmiBlitz3.ab3@27375>   MOVE.l destpointer,newinitaddr
00037CFE <AmiBlitz3.ab3@27376>   JSR writeword
00037D04 <AmiBlitz3.ab3@27377>   JSR writelong
00037D06 <AmiBlitz3.ab3@27378> RTS
00037D08 <AmiBlitz3.ab3@27383>   TST.b (a5)
00037D0C <AmiBlitz3.ab3@27384>    BEQ.s 'll20
00037D10 <AmiBlitz3.ab3@27385>   CMP.b #$20,(a5)
00037D14 <AmiBlitz3.ab3@27386>    BNE.s 'll10
00037D16 <AmiBlitz3.ab3@27387>   ADDQ.l #1,a5
00037D1A <AmiBlitz3.ab3@27388> BRA.s 'll21
00037D1E <AmiBlitz3.ab3@27391>   CMP.b #";",(a5)
00037D22 <AmiBlitz3.ab3@27392>   BNE.s 'll20
00037D24 <AmiBlitz3.ab3@27395>   TST.b (a5)+
00037D28 <AmiBlitz3.ab3@27396>   BEQ.s 'll23
00037D2C <AmiBlitz3.ab3@27397> BRA.s 'll25
00037D2E <AmiBlitz3.ab3@27400>   SUBQ.l #1,a5
00037D30 <AmiBlitz3.ab3@27403> RTS
00037D34 <AmiBlitz3.ab3@27407>   MOVEM.l a2/d2,-(a7)
00037D36 <AmiBlitz3.ab3@27408>   MOVEQ #0,d2
00037D3C <AmiBlitz3.ab3@27409>   LEA ptr_parameterstore,a0
00037D42 <AmiBlitz3.ab3@27410>   LEA chartab,a2
00037D44 <AmiBlitz3.ab3@27413>   MOVE.b (a5),d0
00037D48 <AmiBlitz3.ab3@27414>   TST.b 0(a2,d0)
00037D4C <AmiBlitz3.ab3@27415>   BNE 'l10
00037D4E <AmiBlitz3.ab3@27416>   ADDQ.l #1,a5
00037D50 <AmiBlitz3.ab3@27417>   MOVE.b d0,(a0)+
00037D52 <AmiBlitz3.ab3@27418>   ADDQ.l #1,d2
00037D56 <AmiBlitz3.ab3@27419> BRA fc2
00037D58 <AmiBlitz3.ab3@27422>   CLR.b (a0)+
00037D5E <AmiBlitz3.ab3@27423>   JSR findlabel2
00037D60 <AmiBlitz3.ab3@27424>   MOVE.l a2,a0
00037D64 <AmiBlitz3.ab3@27425>   MOVEM.l (a7)+,a2/d2
00037D66 <AmiBlitz3.ab3@27426> RTS
00037D68 <AmiBlitz3.ab3@27430>   TST.l d0
00037D6C <AmiBlitz3.ab3@27431>   BNE 'l10
00037D72 <AmiBlitz3.ab3@27432>     MOVE.l #syntax_,-(a7)
00037D78 <AmiBlitz3.ab3@27433> JMP handle_compileerror
00037D7E <AmiBlitz3.ab3@27436>   CMP.l #1,d0
00037D82 <AmiBlitz3.ab3@27437>   BNE 'l20
00037D88 <AmiBlitz3.ab3@27438>     MOVE.l #overflow,-(a7)
00037D8E <AmiBlitz3.ab3@27439> JMP handle_compileerror
00037D90 <AmiBlitz3.ab3@27442>   ADD.l a2,d0
00037D92 <AmiBlitz3.ab3@27443>   MOVE.l d0,-(a7)
00037D98 <AmiBlitz3.ab3@27444> JMP handle_compileerror
00037D9E <AmiBlitz3.ab3@27448>   JMP _return
00037DA4 <AmiBlitz3.ab3@27449>   JMP _return
00037DAA <AmiBlitz3.ab3@27450>   JMP _return
00037DB0 <AmiBlitz3.ab3@27451>   JMP _return
00037DB6 <AmiBlitz3.ab3@27452>   JMP _return
00037DBC <AmiBlitz3.ab3@27453>   JMP _return
00037DC2 <AmiBlitz3.ab3@27454>   JMP _return
00037DC8 <AmiBlitz3.ab3@27455>   JMP _return
00037DCE <AmiBlitz3.ab3@27456>   JMP _return
00037DD4 <AmiBlitz3.ab3@27457>   JMP _return
00037DDA <AmiBlitz3.ab3@27458>   JMP Atokejsr
00037DE0 <AmiBlitz3.ab3@27459>   JMP writeinit
00037DE6 <AmiBlitz3.ab3@27460>   JMP macroexecute
00037DEC <AmiBlitz3.ab3@27461>   JMP findnext
00037DF2 <AmiBlitz3.ab3@27462>   JMP replacelib
00037DF8 <AmiBlitz3.ab3@27463>   JMP findconstant2
00037DFE <AmiBlitz3.ab3@27464>   JMP findchar                                             ;char in d1
00037E04 <AmiBlitz3.ab3@27465>   JMP stripspaces
00037E0A <AmiBlitz3.ab3@27466>   JMP calc                                                 ;d0 varmode
00037E10 <AmiBlitz3.ab3@27467>   JMP error
00037E16 <AmiBlitz3.ab3@27468>   JMP writelong                                            ;d1 value
00037E1C <AmiBlitz3.ab3@27469>   JMP writeword                                            ;d1 value
00037E22 <AmiBlitz3.ab3@27470>   JMP writebyte                                            ;d1 value
00037E28 <AmiBlitz3.ab3@27471> JMP exit
00037E2C <AmiBlitz3.ab3@27475>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00037E2E <AmiBlitz3.ab3@27478>   fast            Dc.w 0
00037E30 <AmiBlitz3.ab3@27479>   fpu             Dc.w 0
00037E32 <AmiBlitz3.ab3@27480>   newsyntax       Dc.w 0
00037E33 <AmiBlitz3.ab3@27482>   optistring      Dc.b 0
00037E34 <AmiBlitz3.ab3@27483>   optistring2     Dc.b 0
00037E35 <AmiBlitz3.ab3@27484>   optiarray       Dc.b 0
00037E36 <AmiBlitz3.ab3@27485>   quickadd        Dc.b 0
00037E38 <AmiBlitz3.ab3@27486>   newmode         Dc.w 0
00037E3A <AmiBlitz3.ab3@27487>   mode            Dc.w 0
00037E3C <AmiBlitz3.ab3@27488>   string1         Dc.w 0
00037E3E <AmiBlitz3.ab3@27489>   load_var_size   Dc.w 0
00037E40 <AmiBlitz3.ab3@27490>   load_var_reg    Dc.w 0
00037E44 <AmiBlitz3.ab3@27491>   load_var_addr   Dc.l 0
00037E46 <AmiBlitz3.ab3@27492>   imm_size        Dc.w 0
00037E48 <AmiBlitz3.ab3@27493>   imm_reg         Dc.w 0
00037E4C <AmiBlitz3.ab3@27494>   imm_addr        Dc.l 0
00037E4D <AmiBlitz3.ab3@27495>   iee             Dc.b 0
00037E4E <AmiBlitz3.ab3@27496>   _dcb            Dc.b 0
00037E52 <AmiBlitz3.ab3@27497>   nohunkoffset    Dc.l 0
00037E56 <AmiBlitz3.ab3@27500> teddata:        Dc.l tokens
00037E5A <AmiBlitz3.ab3@27501>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00037E5E <AmiBlitz3.ab3@27502>                 Dc.l read_xtrafile
00037E62 <AmiBlitz3.ab3@27503>                 Dc.l write_xtrafile
00037E66 <AmiBlitz3.ab3@27504>                 Dc.l call_menuentry                        ; compile AND RUN ?
00037E6A <AmiBlitz3.ab3@27505>                 Dc.l 0
00037E6E <AmiBlitz3.ab3@27506>                 Dc.b ":",34,".;"
00037E72 <AmiBlitz3.ab3@27507>                 Dc.l "NEW1"
00037E76 <AmiBlitz3.ab3@27508>                 Dc.l newtypebase
00037E7A <AmiBlitz3.ab3@27509> realconstbase:  Dc.l labelbase
00037E7E <AmiBlitz3.ab3@27510> deflib          Dc.l 0
00037E82 <AmiBlitz3.ab3@27511> incd            Dc.l 0
00037E86 <AmiBlitz3.ab3@27512>                 Dc.l 0
00037E8A <AmiBlitz3.ab3@27513>                 Dc.l 0
00037E8E <AmiBlitz3.ab3@27514>                 Dc.l 0
00037E90 <AmiBlitz3.ab3@27515> _return         RTS
00037E91 <AmiBlitz3.ab3@27516>                 Dc.b 0
00038291 <AmiBlitz3.ab3@27517> chartab2        Ds.l 256
00038295 <AmiBlitz3.ab3@27518> codeend         Dc.l 0
00038299 <AmiBlitz3.ab3@27519> hunkoffsetnum   Dc.l 0
0003829D <AmiBlitz3.ab3@27520> chipsize        Dc.l 0
000382A1 <AmiBlitz3.ab3@27521> bsssize         Dc.l 0
000382A5 <AmiBlitz3.ab3@27522> bssstart        Dc.l -1
000382A9 <AmiBlitz3.ab3@27523> bssend          Dc.l -1
000382AD <AmiBlitz3.ab3@27524> chipstart       Dc.l -1
000382B1 <AmiBlitz3.ab3@27525> chipend         Dc.l -1
000382B2 <AmiBlitz3.ab3@27526> bssmode         Dc.b 0
000382B3 <AmiBlitz3.ab3@27527> chipmode        Dc.b 0
000382B4 <AmiBlitz3.ab3@27528> newhunk         Dc.b 0
000382B8 <AmiBlitz3.ab3@27529> bssnum          Dc.l 0
000382BC <AmiBlitz3.ab3@27530> chipnum         Dc.l 0
000382C0 <AmiBlitz3.ab3@27531> lastinstruction Dc.l 0
000382C4 <AmiBlitz3.ab3@27532> lastinstructionaddr Dc.l 0
000382D8 <AmiBlitz3.ab3@27533> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
000382DC <AmiBlitz3.ab3@27534> tstsize1b:      Ds.l 1
000382E0 <AmiBlitz3.ab3@27535> bsssize2        Dc.l 1
000382E4 <AmiBlitz3.ab3@27536>                 Dc.l $03E9
000382E8 <AmiBlitz3.ab3@27537> tstsize2b:      Dc.l $100
000382FC <AmiBlitz3.ab3@27538> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038300 <AmiBlitz3.ab3@27539> tstsize1c:      Ds.l 1
00038304 <AmiBlitz3.ab3@27540> bsssize3        Dc.l 1
00038308 <AmiBlitz3.ab3@27541> chipsize2       Dc.l 1
0003830C <AmiBlitz3.ab3@27542>                 Dc.l $3e9
00038310 <AmiBlitz3.ab3@27543> tstsize2c       Dc.l 0
00038320 <AmiBlitz3.ab3@27544> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038330 <AmiBlitz3.ab3@27545> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038337 <AmiBlitz3.ab3@27546> strcpy          Dc.b "strcpy",0
0003833E <AmiBlitz3.ab3@27547> strcmp          Dc.b "strcmp",0
00038345 <AmiBlitz3.ab3@27548> strvar          Dc.b "strvar",0
0003834A <AmiBlitz3.ab3@27549> qmul            Dc.b "qmul",0
0003834F <AmiBlitz3.ab3@27550> qdiv            Dc.b "qdiv",0
00038356 <AmiBlitz3.ab3@27551> _MaxLen         Dc.b "maxlen",0
0003835B <AmiBlitz3.ab3@27552> notf            Dc.b "????",0
0003837E <AmiBlitz3.ab3@27554> errtext         Dc.b "only reg addressing Mode supported",0
000383A8 <AmiBlitz3.ab3@27555> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
000383EA <AmiBlitz3.ab3@27556> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
000383EC <AmiBlitz3.ab3@27557> peeksize        Dc.w 0
000383F0 <AmiBlitz3.ab3@27559> mainstart       Dc.l 0
000383F1 <AmiBlitz3.ab3@27561> infunctioncode  Dc.b 0
000383F3 <AmiBlitz3.ab3@27562> regnumstore     Dc.w 0
00038420 <AmiBlitz3.ab3@27563>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038428 <AmiBlitz3.ab3@27564> testcode        Dc.b "print i",0
0003848C <AmiBlitz3.ab3@27565>                 Ds.b 100
0003849A <AmiBlitz3.ab3@27566> devo            Dc.b "developobject",0 : Even
000384AC <AmiBlitz3.ab3@27567> autostorename   Dc.b "__autoconstantnum",0
000384B6 <AmiBlitz3.ab3@27568> _include        Dc.b "__include",0
000384BE <AmiBlitz3.ab3@27569> _debug          Dc.b "__debug",0
000384C2 <AmiBlitz3.ab3@27570> unusedfunc      Dc.l 0
000384C4 <AmiBlitz3.ab3@27574>   MOVE.l a0,d0
000384EE <AmiBlitz3.ab3@27575>   !basic
000384F2 <AmiBlitz3.ab3@27576>   *olderror.l= PutD0
0003854C <AmiBlitz3.ab3@27577> 
00038580 <AmiBlitz3.ab3@27578>   error_type$ = error$
0003861C <AmiBlitz3.ab3@27579> 
00038630 <AmiBlitz3.ab3@27580>   If Peek.l (?beforeparameterfetch)
00038646 <AmiBlitz3.ab3@27581>     MaxLen detokenline.s = 65536
00038688 <AmiBlitz3.ab3@27582>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00038698 <AmiBlitz3.ab3@27583>    *tn.preprocessor = Peek.l(?include_preprocessor)
000386C2 <AmiBlitz3.ab3@27584>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000386EA <AmiBlitz3.ab3@27585>     If written>0 Then Poke.b &detokenline+written,0
00038714 <AmiBlitz3.ab3@27586>     sourceLineText.s = Peek.s(&detokenline)
0003871A <AmiBlitz3.ab3@27587>   Else
00038742 <AmiBlitz3.ab3@27588>     sourceLineText = "NULL"
00038776 <AmiBlitz3.ab3@27590>   error_source$ = sourceLineText
000387C8 <AmiBlitz3.ab3@27591>   error$=error$+sourceLineText
000387CE <AmiBlitz3.ab3@27592>   GetD0 &error$
000387EC <AmiBlitz3.ab3@27593>   !asm
000387EE <AmiBlitz3.ab3@27594>   MOVE.l d0,a0
000387F0 <AmiBlitz3.ab3@27595> RTS
000387F2 <AmiBlitz3.ab3@27599>   MOVE.l a0,-(a7)
000387F4 <AmiBlitz3.ab3@27600>   MOVE.l a0,d0
000387F6 <AmiBlitz3.ab3@27601>   MOVE.l a5,a0                                             ;macro title
00038820 <AmiBlitz3.ab3@27602>   !basic
00038824 <AmiBlitz3.ab3@27603>   i = PutD0
00038826 <AmiBlitz3.ab3@27604>   MOVEQ #20,d0
00038828 <AmiBlitz3.ab3@27607>     MOVE.b -(a0),d1
0003882C <AmiBlitz3.ab3@27608>     BEQ 'l1
00038830 <AmiBlitz3.ab3@27609>     CMP.b #":",d1
00038834 <AmiBlitz3.ab3@27610>     BEQ 'l1
00038836 <AmiBlitz3.ab3@27611>     SUBQ.l #1,d0
0003883A <AmiBlitz3.ab3@27612>     BNE 'l2
0003883C <AmiBlitz3.ab3@27615>   ADDQ #1,a0
0003883E <AmiBlitz3.ab3@27616>   MOVE.l a0,d0
00038842 <AmiBlitz3.ab3@27617>   i2.l = PutD0
0003885E <AmiBlitz3.ab3@27618>   If Peek.w (?ininclude)>0
000388B8 <AmiBlitz3.ab3@27619>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000388C8 <AmiBlitz3.ab3@27620>     errorline.l = Peek.l(?includeline);-1
000388F0 <AmiBlitz3.ab3@27621>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003891A <AmiBlitz3.ab3@27622>     errorfile.s = Peek.s(?includetemp2)
00038920 <AmiBlitz3.ab3@27623>   Else
00038958 <AmiBlitz3.ab3@27624>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003896E <AmiBlitz3.ab3@27625>     errorline.l = Peek.l(?compilelinecounter) + 1
000389A2 <AmiBlitz3.ab3@27626>     errorfile.s = cli_sourcefile
000389AC <AmiBlitz3.ab3@27629>   If i
00038A50 <AmiBlitz3.ab3@27630>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00038ACE <AmiBlitz3.ab3@27631>     errortext.s = Replace$(errortext,"\n","\\0a")
00038AD4 <AmiBlitz3.ab3@27632>   Else
00038AFC <AmiBlitz3.ab3@27633>     errortext.s = "???"
00038C74 <AmiBlitz3.ab3@27636>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00038D3C <AmiBlitz3.ab3@27637>   NPrint "  ",error_type$,"\\n  ",error_source$
00038D5A <AmiBlitz3.ab3@27641>   !asm
00038D5C <AmiBlitz3.ab3@27642>   MOVE.l (a7)+,a0
00038D5E <AmiBlitz3.ab3@27643> RTS
00038D60 <AmiBlitz3.ab3@27647>   MOVE.l a0,-(a7)
00038D62 <AmiBlitz3.ab3@27648>   MOVE.l a0,d0
00038D64 <AmiBlitz3.ab3@27649>   MOVE.l a5,a0                                             ;macro title
00038D8E <AmiBlitz3.ab3@27650>   !basic
00038D92 <AmiBlitz3.ab3@27651>   i = PutD0
00038D94 <AmiBlitz3.ab3@27652>   MOVEQ #20,d0
00038D96 <AmiBlitz3.ab3@27655>     MOVE.b -(a0),d1
00038D9A <AmiBlitz3.ab3@27656>     BEQ 'l1
00038D9E <AmiBlitz3.ab3@27657>     CMP.b #":",d1
00038DA2 <AmiBlitz3.ab3@27658>     BEQ 'l1
00038DA4 <AmiBlitz3.ab3@27659>     SUBQ.l #1,d0
00038DA8 <AmiBlitz3.ab3@27660>     BNE 'l2
00038DAA <AmiBlitz3.ab3@27663>   ADDQ #1,a0
00038DAC <AmiBlitz3.ab3@27664>   MOVE.l a0,d0
00038DB0 <AmiBlitz3.ab3@27665>   i2.l = PutD0
00038E34 <AmiBlitz3.ab3@27666>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00038E48 <AmiBlitz3.ab3@27667>   If fid <> -1
00038E64 <AmiBlitz3.ab3@27668>     If Peek.w (?ininclude)>0
00038EBE <AmiBlitz3.ab3@27669>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00038EC4 <AmiBlitz3.ab3@27670>     Else
00038EF0 <AmiBlitz3.ab3@27671>       Poke$(?includetemp2),""
00038F1A <AmiBlitz3.ab3@27673>     a$ = Peek$(?includetemp2)
00038F8C <AmiBlitz3.ab3@27674>     x$ = Replace$(Peek$(i),"\\0a","\n")
00038FBE <AmiBlitz3.ab3@27675>     file_WriteLine{fid,x$}
00039008 <AmiBlitz3.ab3@27676>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039034 <AmiBlitz3.ab3@27677>     If a$
00039066 <AmiBlitz3.ab3@27678>       file_WriteLine{fid,a$}
000390B0 <AmiBlitz3.ab3@27679>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
000390D8 <AmiBlitz3.ab3@27680>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000390DE <AmiBlitz3.ab3@27681>     Else
00039104 <AmiBlitz3.ab3@27682>       file_WriteLine{fid,"none"}
00039134 <AmiBlitz3.ab3@27684>     file_WriteLine{fid,Peek$(i2)}
0003918A <AmiBlitz3.ab3@27685>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
000391D4 <AmiBlitz3.ab3@27686>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
000391DE <AmiBlitz3.ab3@27687>     file_Close{fid}
000391FC <AmiBlitz3.ab3@27689>   !asm
000391FE <AmiBlitz3.ab3@27690>   MOVE.l (a7)+,a0
00039200 <AmiBlitz3.ab3@27691> RTS
0003922A <AmiBlitz3.ab3@27695>   !basic
0003922E <AmiBlitz3.ab3@27696>   progress.l     = PutD0
00039240 <AmiBlitz3.ab3@27697>   total.l        = Peek.w(?progressbar_width)
0003925E <AmiBlitz3.ab3@27698>   calcpro        = (progress * 100) / total +1
00039270 <AmiBlitz3.ab3@27699>   pass.l         = Peek.w(?pass)
00039282 <AmiBlitz3.ab3@27700>   typ.l          = Peek.w(?compiler_job)
000392A0 <AmiBlitz3.ab3@27703> If (pass><pass_old OR typ><typ_old)
000392AE <AmiBlitz3.ab3@27705>     If pass_old><pass
0003934A <AmiBlitz3.ab3@27706>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
000393A0 <AmiBlitz3.ab3@27707>       If cli_verbose>=2 Then NPrint passtatusstr
000393A6 <AmiBlitz3.ab3@27710>     pass_old = pass
000393AC <AmiBlitz3.ab3@27711>     typ_old  = typ
000393B2 <AmiBlitz3.ab3@27712>     update_comstatus_gui = True
000393C4 <AmiBlitz3.ab3@27713>     If typ=0
000394A4 <AmiBlitz3.ab3@27714>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
000394AC <AmiBlitz3.ab3@27715>       calcpro = 0  ; set gauge to 0
000394BE <AmiBlitz3.ab3@27717>     If typ=1
0003959E <AmiBlitz3.ab3@27718>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
000395A6 <AmiBlitz3.ab3@27719>       calcpro = 0  ; set gauge to 0
000395FC <AmiBlitz3.ab3@27722>     If cli_verbose>=3 Then NPrint comstatusstr
0003960A <AmiBlitz3.ab3@27725>   If (calcpro >< calcpro_old)
0003965E <AmiBlitz3.ab3@27726>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
00039664 <AmiBlitz3.ab3@27727>     calcpro_old = calcpro
0003966A <AmiBlitz3.ab3@27728>     update_comstatus_gui = True
00039684 <AmiBlitz3.ab3@27731>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
000396A2 <AmiBlitz3.ab3@27732>     !asm
000396D4 <AmiBlitz3.ab3@27733> 
000396FE <AmiBlitz3.ab3@27734>     !basic
00039704 <AmiBlitz3.ab3@27735>     update_comstatus_gui  = False ; because we update the gui
00039722 <AmiBlitz3.ab3@27737>   !asm
00039724 <AmiBlitz3.ab3@27738> RTS
0003972A <AmiBlitz3.ab3@27743>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00039730 <AmiBlitz3.ab3@27744>   LEA maxobjects_value,A3                                  ;current value
00039736 <AmiBlitz3.ab3@27745>   MOVEA.l libpointer,A2
0003973A <AmiBlitz3.ab3@27748>   CMPA.w #$0,A2
0003973E <AmiBlitz3.ab3@27749>   BEQ.w menu4c__igotb
00039740 <AmiBlitz3.ab3@27750>   MOVEA.l A2,A1
00039744 <AmiBlitz3.ab3@27751>   ADDA.l $12(A1),A1
00039748 <AmiBlitz3.ab3@27752>   TST.w -$2(A1)
0003974C <AmiBlitz3.ab3@27753>   BEQ.w JL_0_FFF6b
0003974E <AmiBlitz3.ab3@27754>   SUBQ.w #1,D5
00039752 <AmiBlitz3.ab3@27755>   BMI.w JL_0_FFFCb
00039754 <AmiBlitz3.ab3@27758>   MOVEA.l (A2),A2
00039758 <AmiBlitz3.ab3@27759> BRA.w JL_0_FFDAb
0003975C <AmiBlitz3.ab3@27762>   MOVE.w (A3),-$4(A1)
0003975E <AmiBlitz3.ab3@27765> RTS
00039764 <AmiBlitz3.ab3@27769>   MOVE.w debugnest,d0
0003976A <AmiBlitz3.ab3@27770>   LEA storedebugmode, a0
00039772 <AmiBlitz3.ab3@27771>   MOVE.b 0(a0,d0.w),debugmode
00039778 <AmiBlitz3.ab3@27772>   TST.w debugnest
0003977C <AmiBlitz3.ab3@27773>   BEQ JUMP_unpairrunerrs
00039782 <AmiBlitz3.ab3@27774>   SUBQ.w #1,debugnest
00039784 <AmiBlitz3.ab3@27775> RTS
0003978A <AmiBlitz3.ab3@27778> JMP runerrsoverflow
00039790 <AmiBlitz3.ab3@27781> JMP unpairrunerrs
00039798 <AmiBlitz3.ab3@27785>   BCHG #$7,use_debugger
000397A0 <AmiBlitz3.ab3@27787>   BTST #$7,use_debugger
000397A4 <AmiBlitz3.ab3@27788>   BNE 'debugon
000397AA <AmiBlitz3.ab3@27789>   CLR.w debugmode
000397AE <AmiBlitz3.ab3@27790> BRA.b 'debugoff
000397B4 <AmiBlitz3.ab3@27793>   SNE debugmode
000397B6 <AmiBlitz3.ab3@27796>   MOVE.l a0,-(a7)
000397EE <AmiBlitz3.ab3@27799>   !ComData_SetB{comByte_DebugMode,debugmode}
000397F0 <AmiBlitz3.ab3@27804>   MOVE.l (a7)+,a0
000397F2 <AmiBlitz3.ab3@27805> RTS
000397FA <AmiBlitz3.ab3@27810>   BTST #$7,use_debugger
000397FE <AmiBlitz3.ab3@27811>   BNE 'debugon
00039804 <AmiBlitz3.ab3@27812>   CLR.w debugmode
00039808 <AmiBlitz3.ab3@27813> BRA.b 'debugoff
0003980E <AmiBlitz3.ab3@27816>   SNE debugmode
00039810 <AmiBlitz3.ab3@27819> RTS
00039816 <AmiBlitz3.ab3@27823>   ADDQ.w #1,debugnest
0003981C <AmiBlitz3.ab3@27824>   MOVE.w debugnest,d0
00039820 <AmiBlitz3.ab3@27825>   CMP.w #18,d0
00039824 <AmiBlitz3.ab3@27826>    BGE JUMP_runerrsoverflow
0003982A <AmiBlitz3.ab3@27827>   LEA storedebugmode, a0
00039832 <AmiBlitz3.ab3@27828>   MOVE.b debugmode,0( a0,d0.w)
00039838 <AmiBlitz3.ab3@27831>   SF debugmode
0003983A <AmiBlitz3.ab3@27832> RTS
000398BA <AmiBlitz3.ab3@27835> usedpath:  Ds.l 32
000398BE <AmiBlitz3.ab3@27839>   BEQ.w JUMP_syntaxerr
000398C4 <AmiBlitz3.ab3@27840>   LEA lastpath,A0
000398C8 <AmiBlitz3.ab3@27841>   MOVEM.l a0-a1/d0,-(a7)
000398CE <AmiBlitz3.ab3@27842>   LEA lastpath2,a1
000398D0 <AmiBlitz3.ab3@27845>     MOVE.b (a0)+,(a1)+
000398D4 <AmiBlitz3.ab3@27846>   BNE 'l2
000398D8 <AmiBlitz3.ab3@27847>   MOVEM.l (a7)+,a0-a1/d0
000398DC <AmiBlitz3.ab3@27848>   LEA usedpath(PC),A0
000398E0 <AmiBlitz3.ab3@27849>   MOVEM.l a0-a1/d0,-(a7)
000398E6 <AmiBlitz3.ab3@27850>   LEA lastpath,a1
000398E8 <AmiBlitz3.ab3@27853>     MOVE.b (a0)+,(a1)+
000398EC <AmiBlitz3.ab3@27854>   BNE 'l1
000398F0 <AmiBlitz3.ab3@27855>   MOVEM.l (a7)+,a0-a1/d0
000398F2 <AmiBlitz3.ab3@27858>   TST.w D0
000398F6 <AmiBlitz3.ab3@27859>    BMI.w JUMP_syntaxerr
000398F8 <AmiBlitz3.ab3@27860>   MOVE.b D0,(A0)+
000398FC <AmiBlitz3.ab3@27861>   BSR.w JUMP_get1bytemain
00039900 <AmiBlitz3.ab3@27862>    BNE.w JL_0_4AA8
00039904 <AmiBlitz3.ab3@27863>   MOVE.b #$2,(A0)
00039906 <AmiBlitz3.ab3@27864> RTS
0003990A <AmiBlitz3.ab3@27868>   BEQ.w JUMP_syntaxerr
00039910 <AmiBlitz3.ab3@27869>   LEA path2,A0
00039912 <AmiBlitz3.ab3@27879>   TST.w D0
00039916 <AmiBlitz3.ab3@27880>    BMI.w JUMP_syntaxerr
00039918 <AmiBlitz3.ab3@27881>   MOVE.b D0,(A0)+
0003991C <AmiBlitz3.ab3@27882>   BSR.w JUMP_get1bytemain
00039920 <AmiBlitz3.ab3@27883>    BNE.w JL_0_4AA8b
00039924 <AmiBlitz3.ab3@27884>   MOVE.b #$2,(A0)
00039926 <AmiBlitz3.ab3@27885> RTS
0003992C <AmiBlitz3.ab3@27894> JMP errormsg_reg
00039936 <AmiBlitz3.ab3@27898>   MOVE.l #$f22d6780,fpucodeglobal
00039940 <AmiBlitz3.ab3@27899>   MOVE.l #$f22c6780,fpucodelocal
00039946 <AmiBlitz3.ab3@27900>   LEA regtable,a0
00039950 <AmiBlitz3.ab3@27901>   MOVE.l #7,maxregs
00039952 <AmiBlitz3.ab3@27904>   MOVE.l (a0),d0
00039956 <AmiBlitz3.ab3@27905>   BEQ 'e1
00039958 <AmiBlitz3.ab3@27906>   CLR.l (a0)
0003995C <AmiBlitz3.ab3@27907>   MOVE.w 4(a0),d0
00039966 <AmiBlitz3.ab3@27908>   MOVE.l fpucodeglobal,fpucode
0003996A <AmiBlitz3.ab3@27909>   TST.w 6(a0)
0003996E <AmiBlitz3.ab3@27910>   BEQ 'glob
00039978 <AmiBlitz3.ab3@27911>   MOVE.l fpucodelocal,fpucode
0003997E <AmiBlitz3.ab3@27914>   MOVE.l fpucode,d1
00039984 <AmiBlitz3.ab3@27915>   JSR writelong
0003998E <AmiBlitz3.ab3@27916>   SUB.l #$80,fpucodelocal
00039998 <AmiBlitz3.ab3@27917>   SUB.l #$80,fpucodeglobal
0003999A <AmiBlitz3.ab3@27918>   MOVE.w d0,d1
000399A0 <AmiBlitz3.ab3@27919>   JSR writeword
000399A2 <AmiBlitz3.ab3@27920>   ADDQ #8,a0
000399A6 <AmiBlitz3.ab3@27921> BRA 'again
000399A8 <AmiBlitz3.ab3@27924> RTS
000399AE <AmiBlitz3.ab3@27931> JMP notypeerr
000399B4 <AmiBlitz3.ab3@27934> JMP illtypeerr
000399BE <AmiBlitz3.ab3@27937>   MOVE.l #$f22d4780,fpucodeglobal
000399C8 <AmiBlitz3.ab3@27938>   MOVE.l #$f22c4780,fpucodelocal
000399CE <AmiBlitz3.ab3@27939>   LEA regtable,a0
000399D0 <AmiBlitz3.ab3@27940>   TST.l (a0)
000399D4 <AmiBlitz3.ab3@27941>    BNE JUMP_errormsg_reg
000399D6 <AmiBlitz3.ab3@27942>   MOVE.l d7,-(a7)
000399D8 <AmiBlitz3.ab3@27943>   SUBQ.l #1,a5
000399DE <AmiBlitz3.ab3@27946>   JSR getparameter2
000399E2 <AmiBlitz3.ab3@27947>   BEQ.w 'nopar
000399E8 <AmiBlitz3.ab3@27948>   MOVE.w d0,lastchar
000399EE <AmiBlitz3.ab3@27949>   JSR findvariable
000399F2 <AmiBlitz3.ab3@27950>   BNE 'islocal
000399FC <AmiBlitz3.ab3@27951>   MOVE.l fpucodeglobal,fpucode
00039A06 <AmiBlitz3.ab3@27952>   MOVE.l #3,maxregs
00039A08 <AmiBlitz3.ab3@27953>   MOVEQ #0,d7
00039A10 <AmiBlitz3.ab3@27956>   CMP.l #newtype_float,$a(a2)                              ;is float type
00039A14 <AmiBlitz3.ab3@27957>    BEQ 'doit
00039A1C <AmiBlitz3.ab3@27958>   CMP.l #newtype_double,$a(a2)
00039A20 <AmiBlitz3.ab3@27959>    BNE JUMP_illtypeerr
00039A26 <AmiBlitz3.ab3@27962>   LEA regtable,a0
00039A28 <AmiBlitz3.ab3@27963>   MOVEQ #0,d0
00039A2A <AmiBlitz3.ab3@27966>   TST.l (a0)
00039A2E <AmiBlitz3.ab3@27967>    BEQ 'store
00039A30 <AmiBlitz3.ab3@27968>   ADDQ.l #4,d0
00039A32 <AmiBlitz3.ab3@27969>   ADDQ.l #8,a0
00039A38 <AmiBlitz3.ab3@27970>   CMP.l #16,d0
00039A3C <AmiBlitz3.ab3@27971>    BCS 'loop
00039A46 <AmiBlitz3.ab3@27972>   MOVE.l #2,maxregs
00039A4C <AmiBlitz3.ab3@27973>   CMP.l #20,d0
00039A50 <AmiBlitz3.ab3@27974>    BCS 'loop
00039A5A <AmiBlitz3.ab3@27975>   MOVE.l #1,maxregs
00039A60 <AmiBlitz3.ab3@27976>   CMP.l #24,d0
00039A64 <AmiBlitz3.ab3@27977>    BCS 'loop
00039A6A <AmiBlitz3.ab3@27978> JMP toovarerr
00039A70 <AmiBlitz3.ab3@27981>   TST.b fpu
00039A74 <AmiBlitz3.ab3@27982>    BEQ 'nofpu
00039A76 <AmiBlitz3.ab3@27983>   MOVE.l a2,(a0)
00039A7C <AmiBlitz3.ab3@27984>   MOVE.w 4(a2),4(a0)
00039A80 <AmiBlitz3.ab3@27985>   MOVE.w d7,6(a0)
00039A86 <AmiBlitz3.ab3@27986>   MOVE.l fpucode,d1
00039A90 <AmiBlitz3.ab3@27987>   SUB.l #$80,fpucodeglobal
00039A9A <AmiBlitz3.ab3@27988>   SUB.l #$80,fpucodelocal
00039AA0 <AmiBlitz3.ab3@27989>   JSR writelong
00039AA4 <AmiBlitz3.ab3@27990>   MOVE.w 4(a2),d1
00039AAA <AmiBlitz3.ab3@27991>   JSR writeword
00039AB0 <AmiBlitz3.ab3@27994>   MOVE.w lastchar,d0
00039AB4 <AmiBlitz3.ab3@27995>   CMP.w #":",d0
00039AB8 <AmiBlitz3.ab3@27996>    BEQ 'nopar
00039ABA <AmiBlitz3.ab3@27997>   TST.w d0
00039ABE <AmiBlitz3.ab3@27998>    BEQ 'nopar
00039AC2 <AmiBlitz3.ab3@27999>   CMP.w #",",d0
00039AC6 <AmiBlitz3.ab3@28000>   BNE JUMP_syntaxerr
00039ACA <AmiBlitz3.ab3@28001> BRA 'l2
00039ACC <AmiBlitz3.ab3@28004>    MOVE.l (a7)+,d7
00039ACE <AmiBlitz3.ab3@28005> RTS
00039AD0 <AmiBlitz3.ab3@28008>   MOVEQ #1,d7
00039AD8 <AmiBlitz3.ab3@28009>   MOVE.b #1,newvariable
00039ADE <AmiBlitz3.ab3@28010>   LEA firstlocal,a2
00039AE4 <AmiBlitz3.ab3@28011>   JSR findvariable
00039AEA <AmiBlitz3.ab3@28012>   CLR.b newvariable
00039AF0 <AmiBlitz3.ab3@28013>   CMP.l #-1,d0
00039AF4 <AmiBlitz3.ab3@28014>   BEQ.w JUMP_notypeerr2
00039AFE <AmiBlitz3.ab3@28015>   MOVE.l fpucodelocal,fpucode
00039B02 <AmiBlitz3.ab3@28016> BRA 'go
00039B06 <AmiBlitz3.ab3@28019>   CMP.b #".",d0
00039B0A <AmiBlitz3.ab3@28020>    BNE 'l1
00039B0E <AmiBlitz3.ab3@28021>   BSR JUMP_get1bytemain
00039B12 <AmiBlitz3.ab3@28022>   BSR JUMP_get1bytemain
00039B16 <AmiBlitz3.ab3@28025>   ORI .b #$20,d0
00039B1A <AmiBlitz3.ab3@28026>   CMP.b #"d",d0
00039B1E <AmiBlitz3.ab3@28027>    BNE JUMP_illeaerr
00039B22 <AmiBlitz3.ab3@28028>   BSR JUMP_get1bytemain
00039B26 <AmiBlitz3.ab3@28029>   SUB.b #$30,d0
00039B2A <AmiBlitz3.ab3@28030>   CMP.b #$7,d0
00039B2E <AmiBlitz3.ab3@28031>    BGT JUMP_syntaxerr
00039B32 <AmiBlitz3.ab3@28032>   MOVE.w #$49c0,d1
00039B34 <AmiBlitz3.ab3@28033>   ADD.b d0,d1
00039B3A <AmiBlitz3.ab3@28034>   JSR writeword
00039B3E <AmiBlitz3.ab3@28035>   BSR JUMP_get1bytemain
00039B40 <AmiBlitz3.ab3@28036> RTS
00039B46 <AmiBlitz3.ab3@28040>   LEA lastpath,a0
00039B4A <AmiBlitz3.ab3@28041>   LEA usedpath(PC),A1
00039B4C <AmiBlitz3.ab3@28044>     MOVE.b (a0)+,(a1)+
00039B50 <AmiBlitz3.ab3@28045>   BNE 'l1
00039B56 <AmiBlitz3.ab3@28047>   LEA lastpath2,a0
00039B5C <AmiBlitz3.ab3@28048>   LEA lastpath,A1
00039B5E <AmiBlitz3.ab3@28051>     MOVE.b (a0)+,(a1)+
00039B62 <AmiBlitz3.ab3@28052>   BNE 'l2
00039B64 <AmiBlitz3.ab3@28053> RTS
00039B6A <AmiBlitz3.ab3@28057>   TST.b objectcount
00039B6E <AmiBlitz3.ab3@28058>   BEQ 'l2a
00039B74 <AmiBlitz3.ab3@28059> JMP macnesterr
00039B7A <AmiBlitz3.ab3@28062>   LEA devo,a0
00039B80 <AmiBlitz3.ab3@28063>   ADDQ.b #1,objectcount
00039B84 <AmiBlitz3.ab3@28064>   MOVEM.l a1/d2,-(a7)
00039B8A <AmiBlitz3.ab3@28065>   LEA ptr_parameterstore,a1
00039B8C <AmiBlitz3.ab3@28068>     MOVE.b (a0)+,(a1)+
00039B90 <AmiBlitz3.ab3@28069>   BNE 'l1
00039B92 <AmiBlitz3.ab3@28071>   MOVEQ #13,d2
00039B98 <AmiBlitz3.ab3@28072>   JSR findlabel2
00039B9C <AmiBlitz3.ab3@28073>   BNE 'd
00039BA0 <AmiBlitz3.ab3@28074>   TST.l 8(a2)
00039BA4 <AmiBlitz3.ab3@28075>   BEQ 'd
00039BAA <AmiBlitz3.ab3@28076>   SUBQ.b #1,objectcount
00039BAE <AmiBlitz3.ab3@28077>   MOVEM.l (a7)+,a1/d2
00039BB4 <AmiBlitz3.ab3@28078>   JSR skiprest
00039BBC <AmiBlitz3.ab3@28079>   MOVE.b #1,developobject
00039BBE <AmiBlitz3.ab3@28080> RTS
00039BC2 <AmiBlitz3.ab3@28083>   MOVEM.l (a7)+,a1/d2
00039BCA <AmiBlitz3.ab3@28084>   MOVE.b #1,resdisable
00039BD0 <AmiBlitz3.ab3@28087>   CLR.b developobject
00039BD6 <AmiBlitz3.ab3@28088> JMP do_Macro
00039BDC <AmiBlitz3.ab3@28092> JMP illeaerr
00039BE2 <AmiBlitz3.ab3@28096>   CLR.b typecheck
00039BE8 <AmiBlitz3.ab3@28097>   CLR.b declare
00039BEE <AmiBlitz3.ab3@28098>   CLR.b declare2
00039BF2 <AmiBlitz3.ab3@28099>   SUB.b #$30,d0
00039BF6 <AmiBlitz3.ab3@28100>   BTST #0,d0
00039BFA <AmiBlitz3.ab3@28101>   BEQ 'l1
00039C02 <AmiBlitz3.ab3@28102>   MOVE.b #1,declare
00039C06 <AmiBlitz3.ab3@28105>   BTST #1,d0
00039C0A <AmiBlitz3.ab3@28106>   BEQ 'l2
00039C12 <AmiBlitz3.ab3@28107>   MOVE.b #1,declare2
00039C16 <AmiBlitz3.ab3@28110>   BTST #2,d0
00039C1A <AmiBlitz3.ab3@28111>   BEQ 'l3
00039C22 <AmiBlitz3.ab3@28112>   MOVE.b #1,typecheck
00039C26 <AmiBlitz3.ab3@28114>   BSR.w JUMP_get1bytemain
00039C28 <AmiBlitz3.ab3@28115> RTS
00039C2E <AmiBlitz3.ab3@28118> JMP get1bytemain
00039C58 <AmiBlitz3.ab3@28122>   !basic
00039C78 <AmiBlitz3.ab3@28124>   FillMem ?residents_table,?residents_table_end-?residents_table,0
00039C96 <AmiBlitz3.ab3@28125>   !asm
00039C98 <AmiBlitz3.ab3@28126> Return
00039C9A <AmiBlitz3.ab3@28131>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00039C9C <AmiBlitz3.ab3@28132>   ADDQ #1,a5
00039C9E <AmiBlitz3.ab3@28133>   MOVE.l a5,-(a7)
00039CC8 <AmiBlitz3.ab3@28134>   !basic
00039CCE <AmiBlitz3.ab3@28135>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00039CD8 <AmiBlitz3.ab3@28136>   If _myD0
00039D18 <AmiBlitz3.ab3@28137>     newconst$ = UCase$(Peek.s(_myD0))
00039D1E <AmiBlitz3.ab3@28138>   Else
00039D58 <AmiBlitz3.ab3@28139>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00039D80 <AmiBlitz3.ab3@28140>     nwconst$="xxx"
00039DA8 <AmiBlitz3.ab3@28142>   condata$ =""
00039DB8 <AmiBlitz3.ab3@28143>   Poke.b ?skip_bytes,0
00039E14 <AmiBlitz3.ab3@28144>   If Left$(newconst$,2) = "__"
00039E6E <AmiBlitz3.ab3@28145>     Select Mid$(newconst$,3,4)
00039E92 <AmiBlitz3.ab3@28147>      Case "DATE"
00039EEC <AmiBlitz3.ab3@28148>       Select Mid$(newconst$,3,6)
00039F2A <AmiBlitz3.ab3@28149>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00039F6E <AmiBlitz3.ab3@28150>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00039F7C <AmiBlitz3.ab3@28151>       End Select
00039F8A <AmiBlitz3.ab3@28152>       i.l=SystemDate
00039FB0 <AmiBlitz3.ab3@28153>       condata$ = Date$ (i)
0003A02E <AmiBlitz3.ab3@28154>       condata$ = Replace$(condata$,"/",".")
0003A058 <AmiBlitz3.ab3@28156>      Case "VER_"
0003A068 <AmiBlitz3.ab3@28159>       actual_version.l = Peek.l(?versioninformation)
0003A078 <AmiBlitz3.ab3@28160>       actual_build.l   = Peek.l(?number_of_builds)
0003A09C <AmiBlitz3.ab3@28162>       Format ""
0003A0F6 <AmiBlitz3.ab3@28163>       Select Mid$(newconst$,3,9)
0003A11A <AmiBlitz3.ab3@28165>        Case "VER_MAJOR"
0003A156 <AmiBlitz3.ab3@28166>         condata$ = Str$(actual_version LSR 24)
0003A180 <AmiBlitz3.ab3@28168>        Case "VER_MINOR"
0003A1C4 <AmiBlitz3.ab3@28169>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003A1EE <AmiBlitz3.ab3@28171>        Case "VER_PATCH"
0003A232 <AmiBlitz3.ab3@28172>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003A25C <AmiBlitz3.ab3@28174>        Case "VER_BUILD"
0003A280 <AmiBlitz3.ab3@28175>         Format ""
0003A2B4 <AmiBlitz3.ab3@28176>         condata$ = Str$(actual_build)
0003A2BA <AmiBlitz3.ab3@28178>        Default
0003A2E2 <AmiBlitz3.ab3@28179>         condata$ = "{unknown compiler constant}"
0003A2F0 <AmiBlitz3.ab3@28181>       End Select
0003A314 <AmiBlitz3.ab3@28182>       Format ""
0003A324 <AmiBlitz3.ab3@28183>       Poke.b ?skip_bytes,11
0003A34E <AmiBlitz3.ab3@28185>      Case "THIS"
0003A3A8 <AmiBlitz3.ab3@28186>       Select Mid$(newconst$,3,9)
0003A3CC <AmiBlitz3.ab3@28188>        Case "THIS_FUNC"
0003A3DC <AmiBlitz3.ab3@28189>         Poke.b ?skip_bytes,15
0003A3FC <AmiBlitz3.ab3@28190>         If Peek.l(?currentfunction)<>0
0003A448 <AmiBlitz3.ab3@28191>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003A44E <AmiBlitz3.ab3@28192>         Else
0003A476 <AmiBlitz3.ab3@28193>           condata$ = "GLOBAL"
0003A4A0 <AmiBlitz3.ab3@28196>        Case "THIS_INCL"
0003A4B0 <AmiBlitz3.ab3@28197>         Poke.b ?skip_bytes,14
0003A4D0 <AmiBlitz3.ab3@28198>         If Peek.l(?includetemp2)<>0
0003A51E <AmiBlitz3.ab3@28199>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003A548 <AmiBlitz3.ab3@28202>        Case "THIS_POIN"
0003A558 <AmiBlitz3.ab3@28203>         Poke.b ?skip_bytes,14
0003A578 <AmiBlitz3.ab3@28204>         If Peek.l(?currentfunction)<>0
0003A5A6 <AmiBlitz3.ab3@28205>           condata$ = Hex$(Peek.l(?currentfunction))
0003A5B4 <AmiBlitz3.ab3@28208>       End Select
0003A5DE <AmiBlitz3.ab3@28210>      Case "CODE"
0003A5EE <AmiBlitz3.ab3@28211>       Poke.b ?skip_bytes,10
0003A650 <AmiBlitz3.ab3@28212>       If Mid$(newconst$,3,8) = "CODELINE"
0003A68C <AmiBlitz3.ab3@28213>         condata$ = Str$(Peek.l(?globallinecount))
0003A69A <AmiBlitz3.ab3@28216>     End Select
0003A6A0 <AmiBlitz3.ab3@28218>   Else
0003A6F4 <AmiBlitz3.ab3@28219>     Select Left$(newconst$,1)
0003A718 <AmiBlitz3.ab3@28221>      Case "R"
0003A728 <AmiBlitz3.ab3@28222>       Poke.b ?skip_bytes,3
0003A7A0 <AmiBlitz3.ab3@28223>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003A820 <AmiBlitz3.ab3@28224>         condata$ = condata$ + Mid$(newconst$,4,1)
0003A830 <AmiBlitz3.ab3@28225>       Next
0003A85A <AmiBlitz3.ab3@28227>      Case "N"
0003A86A <AmiBlitz3.ab3@28228>       Poke.b ?skip_bytes,1
0003A88E <AmiBlitz3.ab3@28229>       condata$ = Chr$(10)
0003A894 <AmiBlitz3.ab3@28231>      Default
0003A8A6 <AmiBlitz3.ab3@28232>       char1.b = Peek.b(&newconst$)
0003A8BE <AmiBlitz3.ab3@28233>       char2.b = Peek.b(&newconst$+1)
0003A8CA <AmiBlitz3.ab3@28234>       nibble1.l = -1
0003A8D6 <AmiBlitz3.ab3@28235>       nibble2.l = -1
0003A914 <AmiBlitz3.ab3@28237>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003A952 <AmiBlitz3.ab3@28238>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003A996 <AmiBlitz3.ab3@28240>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003A9DA <AmiBlitz3.ab3@28241>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003AA1E <AmiBlitz3.ab3@28243>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003AA62 <AmiBlitz3.ab3@28244>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003AA88 <AmiBlitz3.ab3@28246>       If nibble1>=0 AND nibble2>=0
0003AA9E <AmiBlitz3.ab3@28247>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003AAC2 <AmiBlitz3.ab3@28248>         condata$ = Chr$(newchar)
0003AAD2 <AmiBlitz3.ab3@28249>         Poke.b ?skip_bytes,2
0003AAE0 <AmiBlitz3.ab3@28252>     End Select
0003AB40 <AmiBlitz3.ab3@28254>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003AC66 <AmiBlitz3.ab3@28255>     !cout{"detected unknown const: " + newconst$}
0003AC9A <AmiBlitz3.ab3@28256>     condata$ = newconst$
0003ACB0 <AmiBlitz3.ab3@28259>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003ACB2 <AmiBlitz3.ab3@28260>   MOVE.l d0,d2
0003ACB4 <AmiBlitz3.ab3@28261>   MOVE.l d2,-(a7)
0003ACBA <AmiBlitz3.ab3@28263>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003ACBC <AmiBlitz3.ab3@28264>   MOVE.l d0,a0
0003ACBE <AmiBlitz3.ab3@28267>     MOVE.b (a0)+,d1
0003ACC4 <AmiBlitz3.ab3@28268>     JSR pokedata1b
0003ACC8 <AmiBlitz3.ab3@28269>  DBF d2,'l1
0003ACE6 <AmiBlitz3.ab3@28271>   !asm
0003ACE8 <AmiBlitz3.ab3@28272>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003ACEA <AmiBlitz3.ab3@28273>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003ACEC <AmiBlitz3.ab3@28274>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003ACF2 <AmiBlitz3.ab3@28275>   ADD.l #1,d2
0003ACF8 <AmiBlitz3.ab3@28277>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003ACFE <AmiBlitz3.ab3@28278>   MOVE.b skip_bytes,D0
0003AD00 <AmiBlitz3.ab3@28279>   ADD.l D0,a5
0003AD02 <AmiBlitz3.ab3@28280> RTS
0003AD06 <AmiBlitz3.ab3@28355> MOVEM.l a3/d1,-(a7)
0003AD0C <AmiBlitz3.ab3@28357> CLR.b a4a5store
0003AD0E <AmiBlitz3.ab3@28358> 'continue: MOVE.b (a3)+,d1
0003AD12 <AmiBlitz3.ab3@28359> CMP.b #$15,d1
0003AD16 <AmiBlitz3.ab3@28360> BEQ 'find
0003AD1A <AmiBlitz3.ab3@28361> CMP.b #$14,d1
0003AD1E <AmiBlitz3.ab3@28362> BEQ 'find
0003AD22 <AmiBlitz3.ab3@28363> CMP.b #$ff,d1
0003AD26 <AmiBlitz3.ab3@28364> BNE 'continue
0003AD2A <AmiBlitz3.ab3@28365> BRA 'notfind
0003AD30 <AmiBlitz3.ab3@28367> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003AD36 <AmiBlitz3.ab3@28368> JSR writelong
0003AD3E <AmiBlitz3.ab3@28369> MOVE.b #1,a4a5store
0003AD42 <AmiBlitz3.ab3@28370> 'notfind: MOVEM.l (a7)+,a3/d1
0003AD44 <AmiBlitz3.ab3@28371> RTS
0003AD4A <AmiBlitz3.ab3@28374> TST.b a4a5store
0003AD4E <AmiBlitz3.ab3@28375> BEQ 'no
0003AD54 <AmiBlitz3.ab3@28376> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003AD5A <AmiBlitz3.ab3@28377> JSR writelong
0003AD60 <AmiBlitz3.ab3@28378> CLR.b a4a5store
0003AD62 <AmiBlitz3.ab3@28379> 'no RTS
0003AD62 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003AD66 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003AD68 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003AD70 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003AD7C <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003AD80 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003AD82 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003AD86 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003ADCF <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003ADD0 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003ADD4 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003ADD6 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003ADDA <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003ADF6 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003ADFA <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003ADFC <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003AE00 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003AE5D <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003AE5E <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003AE62 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003AE64 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003AE69 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003AE79 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003AE7A <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003AE7E <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003AE80 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003AE86 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003AE96 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003AE9A <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003AE9C <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003AEA3 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003AEA4 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003AEA8 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003AEAA <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003AEB4 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003AEE7 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003AEE8 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003AEEC <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003AEEE <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003AEF7 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003AF32 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003AF36 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003AF38 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003AF42 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003AF43 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003AF44 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003AF48 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003AF4A <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003AF4D <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003AF64 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003AF68 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003AF6A <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003AF70 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003AF7D <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003AF7E <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003AF82 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003AF84 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003AF8A <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003AF96 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003AF9A <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003AF9C <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003AFA3 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003AFB0 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003AFB4 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003AFB6 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003AFBB <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003AFC8 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003AFCC <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003AFCE <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003AFD6 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003AFD7 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003AFD8 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003AFDC <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003AFDE <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003AFE6 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003AFE7 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003AFE8 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003AFEC <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003AFEE <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003AFF7 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B002 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B006 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B008 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B010 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003B01B <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003B01C <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003B020 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003B022 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003B029 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003B08B <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003B08C <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003B090 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003B092 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003B099 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003B0A8 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003B0AC <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003B0AE <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003B0B2 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003B0E8 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003B0EC <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003B0EE <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003B0F3 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003B102 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003B106 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003B108 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003B10B <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003B12C <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003B130 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003B132 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003B137 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003B143 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003B144 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003B148 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003B14A <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003B14F <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003B166 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003B16A <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003B16C <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003B171 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003B180 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003B184 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003B186 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003B18B <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003B1AA <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003B1AE <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003B1B0 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003B1B5 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003B1D4 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003B1D8 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003B1DA <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003B1E0 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003B1E1 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003B1E2 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003B1E6 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003B1E8 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003B1ED <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003B1EE <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003B1F2 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003B1F4 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003B1F9 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003B206 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003B20A <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003B20C <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003B211 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003B220 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003B224 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003B226 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003B22B <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003B23A <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003B23E <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003B240 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003B246 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003B263 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003B264 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003B268 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003B26A <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003B270 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003B28D <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003B28E <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003B292 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003B294 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003B297 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003B2AE <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003B2B2 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003B2B4 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003B2B7 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003B2C6 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003B2CA <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003B2CC <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003B2D1 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003B2D2 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003B2D6 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003B2D8 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003B2DC <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003B2F1 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003B2F2 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003B2F6 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003B2F8 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003B2FF <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003B318 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003B31C <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003B31E <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003B325 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003B330 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003B334 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003B336 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003B33B <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003B352 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003B356 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003B358 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003B35C <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003B373 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003B374 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003B378 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003B37A <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003B37F <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003B380 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003B384 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003B386 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003B38B <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003B38F <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003B390 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003B394 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003B396 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003B39D <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003B3B5 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003B3B6 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003B3BA <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003B3BC <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003B3C3 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003B3C8 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003B3CC <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003B3CE <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003B3D5 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003B3DA <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003B3DE <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003B3E0 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003B3E7 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003B402 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003B406 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003B408 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003B410 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003B429 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003B42A <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003B42E <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003B430 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003B436 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003B437 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003B438 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003B43C <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003B43E <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003B444 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003B445 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003B446 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003B44A <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003B44C <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003B453 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003B454 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003B458 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003B45A <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003B460 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003B469 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003B46A <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003B46E <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003B470 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003B478 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003B485 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003B486 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003B48A <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003B48C <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003B494 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003B4A1 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003B4A2 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003B4A6 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003B4A8 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003B4B0 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003B4BD <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003B4BE <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003B4C2 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003B4C4 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003B4C9 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003B4CA <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003B4CE <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003B4D0 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003B4D5 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003B4D6 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003B4D8 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003B4DC <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003B4DE <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003B4E0 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003B4E4 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003B4E6 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003B4EA <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003B4EC <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003B4F0 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003B4F1 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003B4F2 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003B4F4 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003B4F8 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003B4FA <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003B4FC <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003B500 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003B502 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003B506 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003B508 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003B50D <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003B50E <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003B510 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003B514 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003B516 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003B518 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003B51C <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003B51E <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003B522 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003B524 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003B529 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003B52A <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003B52C <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003B530 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003B532 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003B534 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003B538 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003B53A <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003B53E <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003B540 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003B545 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003B546 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003B548 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003B54C <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003B54E <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003B550 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003B554 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003B556 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003B55A <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003B55C <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003B561 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003B562 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003B564 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003B568 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003B56A <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003B56C <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003B570 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003B572 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003B576 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003B578 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003B57C <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003B57D <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003B57E <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003B580 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003B584 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003B586 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003B588 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003B58C <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003B58E <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003B592 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003B594 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003B599 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003B59A <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003B59C <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003B5A0 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003B5A2 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003B5A4 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003B5A8 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003B5AA <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003B5AE <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003B5B0 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003B5B4 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003B5B5 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003B5B6 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003B5B8 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003B5BC <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003B5BE <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003B5C0 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003B5C4 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003B5C6 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003B5CA <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003B5CC <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003B5D0 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003B5D1 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003B5D2 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003B5D4 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003B5D8 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003B5DA <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003B5DC <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003B5E0 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003B5E2 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003B5E6 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003B5E8 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003B5EC <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003B5ED <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003B5EE <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003B5F0 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003B5F4 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003B5F6 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003B5F8 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003B5FC <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003B5FE <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003B602 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003B604 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003B608 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003B609 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003B60A <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003B60C <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003B610 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003B612 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003B614 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003B618 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003B61A <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003B61E <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003B620 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003B624 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003B625 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003B626 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003B628 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003B62C <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003B62E <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003B630 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003B634 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003B636 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003B63A <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003B63C <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003B640 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003B641 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003B642 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003B644 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003B648 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003B64A <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003B64C <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003B650 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003B652 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003B656 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003B658 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003B65C <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003B65D <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003B65E <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003B660 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003B664 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003B666 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003B668 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003B66C <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003B66E <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003B672 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003B674 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003B678 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003B679 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003B67A <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003B67C <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003B680 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003B682 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003B684 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003B688 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003B68A <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003B68E <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003B690 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003B694 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003B695 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003B696 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003B698 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003B69C <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003B69E <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003B6A0 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003B6A4 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003B6A6 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003B6AA <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003B6AC <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003B6B0 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003B6B1 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003B6B2 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003B6B4 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003B6B8 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003B6BA <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003B6BC <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003B6C0 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003B6C2 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003B6C6 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003B6C8 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003B6CC <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003B6CD <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003B6CE <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003B6D0 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003B6D4 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003B6D6 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003B6D8 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003B6DC <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003B6DE <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003B6E2 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003B6E4 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003B6E8 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003B6E9 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003B6EA <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003B6EC <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003B6F0 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003B6F2 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003B6F4 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003B6F8 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003B6FA <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003B6FE <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003B700 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003B704 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003B705 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003B706 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003B708 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003B70C <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003B70E <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003B710 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003B714 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003B716 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003B71A <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003B71C <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003B720 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003B721 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003B722 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003B724 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003B728 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003B72A <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003B72C <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003B730 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003B732 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003B736 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003B738 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003B73C <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003B73D <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003B73E <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003B740 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003B744 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003B746 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003B748 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003B74C <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003B74E <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003B752 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003B754 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003B758 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003B759 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003B75A <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003B75C <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003B760 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003B762 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003B764 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003B768 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003B76A <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003B76E <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003B770 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003B775 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003B776 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003B778 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003B77C <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003B77E <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003B780 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003B784 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003B786 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003B78A <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003B78C <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003B791 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003B792 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003B794 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003B798 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003B79A <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003B79C <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003B7A0 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003B7A2 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003B7A6 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003B7A8 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003B7AD <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003B7AE <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003B7B0 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003B7B4 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003B7B6 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003B7B8 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003B7BC <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003B7BE <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003B7C2 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003B7C4 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003B7C9 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003B7CA <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003B7CC <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003B7D0 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003B7D2 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003B7D4 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003B7D8 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003B7DA <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003B7DE <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003B7E0 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003B7E4 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003B7E5 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003B7E6 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003B7E8 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003B7EC <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003B7EE <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003B7F0 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003B7F4 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003B7F6 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003B7FA <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003B7FC <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003B800 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003B801 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003B802 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003B804 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003B808 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003B80A <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003B80C <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003B810 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003B812 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003B816 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003B818 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003B81C <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003B81D <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003B81E <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003B820 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003B824 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003B826 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003B828 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003B82C <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003B82E <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003B832 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003B834 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003B838 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003B839 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003B83A <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003B83C <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003B840 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003B842 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003B844 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003B848 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003B84A <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003B84E <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003B850 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003B854 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003B855 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003B856 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003B858 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003B85C <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003B85E <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003B860 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003B864 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003B866 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003B86A <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003B86C <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003B871 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003B874 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003B878 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003B87A <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003B87C <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003B880 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003B882 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003B886 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003B888 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003B88D <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003B894 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003B896 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003B898 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003B89C <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003B89E <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003B8A2 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003B8A4 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003B8A9 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003B8AA <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003B8AC <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003B8B0 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003B8B2 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003B8B4 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003B8B8 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003B8BA <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003B8BE <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003B8C0 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003B8C5 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003B8C6 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003B8C8 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003B8CC <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003B8CE <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003B8D0 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003B8D4 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003B8D6 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003B8DA <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003B8DC <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003B8E1 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003B8E2 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003B8E4 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003B8E8 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003B8EA <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003B8EC <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003B8F0 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003B8F2 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003B8F6 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003B8F8 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003B8FD <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003B8FE <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003B900 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003B904 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003B906 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003B908 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003B90C <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003B90E <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003B912 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003B914 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003B919 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003B91A <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003B91C <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003B920 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003B922 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003B924 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003B928 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003B92A <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003B92E <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003B930 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003B935 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003B938 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003B93C <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003B93E <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003B940 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003B944 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003B946 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003B94A <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003B951 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003B952 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003B958 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003B95A <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003B95C <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003B960 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003B962 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003B966 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003B968 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003B96D <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003B974 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003B976 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003B978 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003B97C <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003B97E <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003B982 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003B984 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003B989 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003B98A <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003B98C <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003B990 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003B992 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003B994 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003B998 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003B99A <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003B99E <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003B9A0 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003B9A5 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003B9A6 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003B9A8 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003B9AC <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003B9AE <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003B9B0 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003B9B4 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003B9B6 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003B9BA <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003B9C1 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003B9C4 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003B9CA <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003B9CC <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003B9D2 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003B9D6 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003B9DD <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003B9DE <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003B9E0 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003B9E4 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003B9E6 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003B9E8 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003B9EC <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003B9EE <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003B9F2 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003B9F9 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003B9FC <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003BA02 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003BA04 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003BA0A <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003BA10 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003BA15 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003BA16 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003BA18 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003BA1C <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003BA1E <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003BA20 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003BA26 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003BA2C <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003BA31 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003BA32 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003BA34 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003BA38 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003BA3A <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003BA3C <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003BA40 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003BA42 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003BA46 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003BA48 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003BA4C <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003BA4D <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003BA50 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003BA54 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003BA56 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003BA58 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003BA5E <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003BA62 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003BA64 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003BA69 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003BA6A <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003BA6C <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003BA72 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003BA7A <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003BA84 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003BA85 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003BA88 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003BA8E <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003BA90 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003BA96 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003BAA1 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003BAA4 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003BAA8 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003BAAA <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003BAAC <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003BAB2 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003BAB6 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003BABD <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003BAC0 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003BAC4 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003BAC6 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003BAC8 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003BACE <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003BAD2 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003BAD9 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003BADC <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003BAE2 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003BAE4 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003BAE8 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003BAEA <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003BAEE <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003BAF0 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003BAF5 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003BAF6 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003BAF8 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003BAFE <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003BB00 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003BB04 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003BB06 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003BB0A <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003BB0C <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003BB10 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003BB11 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003BB14 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003BB1A <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003BB22 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003BB26 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003BB28 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003BB2C <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003BB2D <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003BB30 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003BB36 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003BB3E <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003BB44 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003BB4C <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003BB4D <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003BB4E <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003BB54 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003BB56 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003BB5C <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003BB62 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003BB64 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003BB68 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003BB69 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003BB6A <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003BB70 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003BB72 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003BB7A <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003BB7E <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003BB80 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003BB84 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003BB85 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003BB86 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003BB88 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003BB8C <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003BB8E <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003BB90 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003BB94 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003BB9A <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003BB9C <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003BBA0 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003BBA1 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003BBA2 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003BBA8 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003BBAA <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003BBAC <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003BBB0 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003BBB2 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003BBB6 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003BBB8 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003BBBD <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003BBBE <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003BBC4 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003BBC8 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003BBD2 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003BBD8 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003BBD9 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003BBE4 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003BBEA <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003BBEE <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003BBF0 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003BBF4 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003BBF5 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003BBF6 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003BBFC <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003BBFE <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003BC06 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003BC0A <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003BC11 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003BC12 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003BC18 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003BC1A <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003BC26 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003BC28 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003BC2D <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003BC2E <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003BC30 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003BC34 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003BC36 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003BC3C <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003BC3E <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003BC42 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003BC44 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003BC4A <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003BC4B <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003BC4E <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003BC56 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003BC5A <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003BC60 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003BC62 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003BC69 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003BC6A <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003BC6C <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003BC70 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003BC72 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003BC74 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003BC7A <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003BC80 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003BC86 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003BC87 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003BC88 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003BC8A <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003BC8E <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003BC90 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003BC92 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003BC96 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003BC98 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003BC9C <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003BC9E <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003BCA3 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003BCA4 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003BCAA <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003BCAC <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003BCB2 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003BCB8 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003BCBF <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003BCC2 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003BCC6 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003BCCE <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003BCD4 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003BCD6 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003BCDB <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003BCDC <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003BCE2 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003BCEA <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003BCEC <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003BCF0 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003BCF2 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003BCF6 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003BCF7 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003BCFA <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003BCFE <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003BD06 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003BD0C <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003BD0E <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003BD13 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003BD14 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003BD16 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003BD1A <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003BD22 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003BD28 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003BD2A <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003BD2E <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003BD2F <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003BD30 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003BD36 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003BD38 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003BD3E <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003BD46 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003BD4A <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003BD4B <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003BD4C <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003BD4E <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003BD52 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003BD54 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003BD5A <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003BD60 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003BD62 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003BD65 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003BD66 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003BD68 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003BD6E <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003BD70 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003BD76 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003BD7C <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003BD81 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003BD82 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003BD84 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003BD8A <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003BD8C <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003BD90 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003BD92 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003BD96 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003BD98 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003BD9C <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003BD9D <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003BD9E <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003BDA0 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003BDA6 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003BDAE <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003BDB4 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003BDBA <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003BDBB <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003BDBC <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003BDC2 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003BDCA <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003BDCC <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003BDD0 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003BDD2 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003BDD6 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003BDD7 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003BDD8 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003BDDE <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003BDE0 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003BDEC <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003BDF2 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003BDF3 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003BDFA <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003BDFE <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003BE02 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003BE0F <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003BE10 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003BE12 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003BE16 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003BE18 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003BE1A <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003BE1E <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003BE26 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003BE2B <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003BE2C <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003BE32 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003BE34 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003BE36 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003BE3A <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003BE40 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003BE42 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003BE46 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003BE47 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003BE48 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003BE50 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003BE52 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003BE56 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003BE62 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003BE63 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003BE64 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003BE66 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003BE72 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003BE74 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003BE7A <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003BE7E <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003BE7F <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003BE80 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003BE8E <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003BE94 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003BE9B <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003BE9E <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003BEA2 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003BEA6 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003BEAA <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003BEB0 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003BEB6 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003BEB7 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003BEB8 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003BEC6 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003BED2 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003BED3 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003BEE2 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003BEE8 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003BEEF <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003BEF0 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003BEF6 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003BEFE <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003BF04 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003BF06 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003BF0A <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003BF0B <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003BF0C <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003BF12 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003BF14 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003BF1A <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003BF27 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003BF28 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003BF36 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003BF3C <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003BF42 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003BF43 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003BF4A <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003BF52 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003BF58 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003BF5A <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003BF5F <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003BF6E <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003BF7B <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003BF82 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003BF84 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003BF8A <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003BF8C <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003BF92 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003BF97 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003BF9E <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003BFA6 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003BFAE <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003BFB3 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003BFC2 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003BFCF <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003BFDE <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003BFEB <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C002 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C007 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003C023 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003C026 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003C03D <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003C057 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003C073 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003C082 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003C08F <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003C09E <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003C0AB <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003C0B2 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003C0BA <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003C0C7 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003C0D6 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003C0E3 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003C0FF <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003C11B <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003C137 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003C153 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003C171 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003C18C <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003C18D <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003C1A9 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003C1C7 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003C1FC <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003C2A4 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003C2B8 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003C42C <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003C45D <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003C46B <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003C479 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003C489 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003C495 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003C4A9 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003C4B5 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003C4BF <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003C4CD <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003C4E7 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003C4F5 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003C50D <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003C53B <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003C549 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003C561 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003C56D <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003C57B <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003C58D <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003C59F <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003C5BB <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003C5C5 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003C60B <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003C61B <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003C649 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003C651 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003C669 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003C679 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003C687 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003C695 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003C6A3 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003C6B1 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003C6BF <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003C6CB <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003C6E1 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003C6F3 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003C705 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003C745 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003C78B <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003C7B9 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003C7C7 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003C7FD <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003C80D <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003C88F <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003C890 <AmiBlitz3.ab3@28383> INCLUDE "internal_commands.ab3"
0003C894 <AmiBlitz3.ab3@28388>            Dc.l cif_lt                                     ;ciflt
0003C898 <AmiBlitz3.ab3@28389>            Dc.l cif_eq                                     ;cifeq
0003C89C <AmiBlitz3.ab3@28390>            Dc.l cif_gt                                     ;cifgt
0003C8A0 <AmiBlitz3.ab3@28391>            Ds.l 1                                          ;0
0003C8A4 <AmiBlitz3.ab3@28392>            Dc.l cif_le                                     ;cifle
0003C8A8 <AmiBlitz3.ab3@28393>            Dc.l cif_ne                                     ;cifne
0003C8AC <AmiBlitz3.ab3@28394>            Dc.l cif_le                                     ;cifge
0003C8B0 <AmiBlitz3.ab3@28395>            Ds.l 1                                          ;0
0003C8B4 <AmiBlitz3.ab3@28396>            Dc.l cif_ge                                     ;cifge
0003C8B8 <AmiBlitz3.ab3@28397>            Dc.l cif_ne                                     ;cifne
0003C8BC <AmiBlitz3.ab3@28398>            Dc.l cif_ge                                     ;cifge
0003C8C0 <AmiBlitz3.ab3@28399>            Ds.l 1                                          ;0
0003C8C4 <AmiBlitz3.ab3@28402>            Dc.l do_newtype                                 ;donewtype
0003C8C8 <AmiBlitz3.ab3@28403>            Dc.l do_end                                     ;doend
0003C8CC <AmiBlitz3.ab3@28404>            Dc.l do_let                                     ;dolet
0003C8D0 <AmiBlitz3.ab3@28405>            Dc.l do_dim                                     ;dodim
0003C8D4 <AmiBlitz3.ab3@28406>            Dc.l do_goto                                    ;dogoto
0003C8D8 <AmiBlitz3.ab3@28407>            Dc.l do_gosub                                   ;dogosub
0003C8DC <AmiBlitz3.ab3@28408>            Dc.l do_return                                  ;doreturn
0003C8E0 <AmiBlitz3.ab3@28409>            Dc.l do_statement                               ;dostatement
0003C8E4 <AmiBlitz3.ab3@28410>            Dc.l do_function                                ;dofunc
0003C8E8 <AmiBlitz3.ab3@28411>            Dc.l do_mousewait                               ;domwait
0003C8EC <AmiBlitz3.ab3@28412>            Dc.l do_if                                      ;doif
0003C8F0 <AmiBlitz3.ab3@28413>            Dc.l do_while                                   ;dowhile
0003C8F4 <AmiBlitz3.ab3@28414>            Dc.l do_Macro                                   ;domacro
0003C8F8 <AmiBlitz3.ab3@28415>            Dc.l do_select                                  ;doselect
0003C8FC <AmiBlitz3.ab3@28416>            Dc.l do_case                                    ;docase
0003C900 <AmiBlitz3.ab3@28417>            Dc.l do_default                                 ;dodefault
0003C904 <AmiBlitz3.ab3@28418>            Dc.l do_AsmExit                                 ;doasmexit
0003C908 <AmiBlitz3.ab3@28419>            Dc.l do_xinclude                                ;doxinclude
0003C90C <AmiBlitz3.ab3@28420>            Dc.l do_INCLUDE                                 ;doinclude
0003C910 <AmiBlitz3.ab3@28421>            Dc.l do_syntax                                  ;syntaxerr
0003C914 <AmiBlitz3.ab3@28422>            Dc.l do_shared                                  ;doshared
0003C918 <AmiBlitz3.ab3@28423>            Dc.l do_for                                     ;dofor
0003C91C <AmiBlitz3.ab3@28424>            Dc.l do_next                                    ;donext
0003C920 <AmiBlitz3.ab3@28425>            Dc.l syntaxerr                                  ; To
0003C924 <AmiBlitz3.ab3@28426>            Dc.l syntaxerr                                  ; Step
0003C928 <AmiBlitz3.ab3@28427>            Dc.l do_data                                    ;dodata
0003C92C <AmiBlitz3.ab3@28428>            Dc.l do_read                                    ;doread
0003C930 <AmiBlitz3.ab3@28432>            Dc.l syntaxerr                                  ; CNIF
0003C934 <AmiBlitz3.ab3@28433>            Dc.l syntaxerr                                  ; CSIF
0003C938 <AmiBlitz3.ab3@28434>            Dc.l syntaxerr                                  ; CELSE
0003C93C <AmiBlitz3.ab3@28435>            Dc.l syntaxerr                                  ; CEND
0003C940 <AmiBlitz3.ab3@28436>            Dc.l do_cerr                                    ;docerr
0003C944 <AmiBlitz3.ab3@28437>            Dc.l do_then                                    ;dothen
0003C948 <AmiBlitz3.ab3@28438>            Dc.l do_else                                    ;doelse
0003C94C <AmiBlitz3.ab3@28439>            Dc.l do_even4                                   ;doeven4
0003C950 <AmiBlitz3.ab3@28440>            Dc.l do_even8                                   ;doeven8
0003C954 <AmiBlitz3.ab3@28442>            Dc.l do_dc                                      ;dodc
0003C958 <AmiBlitz3.ab3@28443>            Dc.l do_ds                                      ;dods
0003C95C <AmiBlitz3.ab3@28444>            Dc.l do_even                                    ;doeven
0003C960 <AmiBlitz3.ab3@28445>            Dc.l do_dcb                                     ;dodcb
0003C964 <AmiBlitz3.ab3@28446>            Dc.l do_setreg                                  ;dosetreg
0003C968 <AmiBlitz3.ab3@28447>            Dc.l do_IncBin                                  ;doincbin
0003C96C <AmiBlitz3.ab3@28448>            Dc.l do_free                                    ;dofree
0003C970 <AmiBlitz3.ab3@28449>            Dc.l do_use                                     ;douse
0003C974 <AmiBlitz3.ab3@28450>            Dc.l do_Stop                                    ;dostop
0003C978 <AmiBlitz3.ab3@28451>            Dc.l do_Cont                                    ;docont
0003C97C <AmiBlitz3.ab3@28452>            Dc.l syntaxerr                                  ;syntaxeer
0003C980 <AmiBlitz3.ab3@28453>            Dc.l do_SetInt                                  ;dosetint
0003C984 <AmiBlitz3.ab3@28454>            Dc.l do_ClrInt                                  ;doclrint
0003C988 <AmiBlitz3.ab3@28455>            Dc.l do_MaxLen                                  ;domaxlen
0003C98C <AmiBlitz3.ab3@28456>            Dc.l do_DEFTYPE                                 ;dodeftype
0003C990 <AmiBlitz3.ab3@28457>            Dc.l do_BLITZ                                   ;doblitz
0003C994 <AmiBlitz3.ab3@28458>            Dc.l do_AMIGA                                   ;doamiga
0003C998 <AmiBlitz3.ab3@28459>            Dc.l do_QAMIGA                                  ;doqamiga
0003C99C <AmiBlitz3.ab3@28460>            Dc.l do_VWait                                   ;dovwait
0003C9A0 <AmiBlitz3.ab3@28461>            Dc.l do_LibJsr                                  ;dolibjsr
0003C9A4 <AmiBlitz3.ab3@28462>            Dc.l do_TokeJsr                                 ;dotokejsr
0003C9A8 <AmiBlitz3.ab3@28463>            Dc.l do_BLibJsr                                 ;doblibjsr
0003C9AC <AmiBlitz3.ab3@28464>            Dc.l _extb                                      ;syntaxerr
0003C9B0 <AmiBlitz3.ab3@28468>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003C9B4 <AmiBlitz3.ab3@28469>            Dc.l do_SetErr                                  ;doseterr
0003C9B8 <AmiBlitz3.ab3@28470>            Dc.l do_ClrErr                                  ;doclrerr
0003C9BC <AmiBlitz3.ab3@28471>            Dc.l syntaxerr                                  ;syntaxerr
0003C9C0 <AmiBlitz3.ab3@28472>            Dc.l do_ErrFail                                 ;doerrfail
0003C9C4 <AmiBlitz3.ab3@28473>            Dc.l syntaxerr
0003C9C8 <AmiBlitz3.ab3@28474>            Dc.l syntaxerr                                  ;mod
0003C9CC <AmiBlitz3.ab3@28475>            Dc.l syntaxerr                                  ;Pi
0003C9D0 <AmiBlitz3.ab3@28476>            Dc.l do_Repeat                                  ;dorepeat
0003C9D4 <AmiBlitz3.ab3@28477>            Dc.l do_Until                                   ;dountil
0003C9D8 <AmiBlitz3.ab3@28478>            Dc.l do_PutReg                                  ;doputreg
0003C9DC <AmiBlitz3.ab3@28479>            Dc.l do_Pop                                     ;dopop
0003C9E0 <AmiBlitz3.ab3@28480>            Dc.l do_INCDIR                                  ;doincdir
0003C9E4 <AmiBlitz3.ab3@28481>            Dc.l mydo_Endif2                                ;mydoendif2
0003C9E8 <AmiBlitz3.ab3@28482>            Dc.l do_Wend                                    ;dowend
0003C9EC <AmiBlitz3.ab3@28483>            Dc.l do_SysJsr                                  ;dosysjsr
0003C9F0 <AmiBlitz3.ab3@28484>            Dc.l do_WBStartup                               ;dowbstartup
0003C9F4 <AmiBlitz3.ab3@28485>            Dc.l syntaxerr
0003C9F8 <AmiBlitz3.ab3@28486>            Dc.l do_Ongo                                    ;doongo
0003C9FC <AmiBlitz3.ab3@28487>            Dc.l syntaxerr
0003CA00 <AmiBlitz3.ab3@28488>            Dc.l do_Forever                                 ;doforever
0003CA04 <AmiBlitz3.ab3@28489>            Dc.l do_Restore                                 ;dorestore
0003CA08 <AmiBlitz3.ab3@28490>            Dc.l do_Exchange                                ;doexchange
0003CA0C <AmiBlitz3.ab3@28491>            Dc.l do_USEPATH                                 ;dousepath
0003CA10 <AmiBlitz3.ab3@28492>            Dc.l do_CloseEd                                 ;doclosed
0003CA14 <AmiBlitz3.ab3@28493>            Dc.l do_NoCli                                   ;donocli
0003CA18 <AmiBlitz3.ab3@28494>            Dc.l syntaxerr                                  ;syntaxerr
0003CA1C <AmiBlitz3.ab3@28495>            Dc.l syntaxerr                                  ;syntaxerr
0003CA20 <AmiBlitz3.ab3@28496>            Dc.l syntaxerr                                  ;syntaxerr
0003CA24 <AmiBlitz3.ab3@28497>            Dc.l syntaxerr                                  ;syntaxerr
0003CA28 <AmiBlitz3.ab3@28498>            Dc.l syntaxerr                                  ;syntaxerr
0003CA2C <AmiBlitz3.ab3@28499>            Dc.l do_runerrson                               ;dorunerrson
0003CA30 <AmiBlitz3.ab3@28500>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003CA34 <AmiBlitz3.ab3@28501>            Dc.l do_uselastpath
0003CA38 <AmiBlitz3.ab3@28502>            Dc.l do_regload
0003CA3C <AmiBlitz3.ab3@28503>            Dc.l do_regsave
0003CA40 <AmiBlitz3.ab3@28504>            Dc.l do_Object
0003CA44 <AmiBlitz3.ab3@28505>            Dc.l do_usepath2
0003CA48 <AmiBlitz3.ab3@28506>            Dc.l do_LastRunErrsMode
0003CA4C <AmiBlitz3.ab3@28529> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003CA50 <AmiBlitz3.ab3@28530>            Dc.l menu_run
0003CA54 <AmiBlitz3.ab3@28531>            Dc.l menu_createexecutable
0003CA58 <AmiBlitz3.ab3@28532>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003CA5C <AmiBlitz3.ab3@28533>            Dc.l menu_createresidentfile
0003CA60 <AmiBlitz3.ab3@28534> 
0003CA64 <AmiBlitz3.ab3@28535> 
0003CA68 <AmiBlitz3.ab3@28536>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003CA6C <AmiBlitz3.ab3@28537>            Dc.l menu_reloadlibs
0003CA70 <AmiBlitz3.ab3@28538>            Dc.l menu_loaddebugmodule
0003CA74 <AmiBlitz3.ab3@28539>            Dc.l menu_dummyfunc
0003CA78 <AmiBlitz3.ab3@28540>            Dc.l menu_newcreate
0003CA7C <AmiBlitz3.ab3@28541>            Dc.l menu_dummyfunc
0003CA80 <AmiBlitz3.ab3@28542>            Dc.l menu_toggledebug
0003CA84 <AmiBlitz3.ab3@28543>            Dc.l menu_dummyfunc
0003CA88 <AmiBlitz3.ab3@28544>            Dc.l menu_dummyfunc
0003CAB2 <AmiBlitz3.ab3@28549>   !basic
0003CB14 <AmiBlitz3.ab3@28550>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003CB32 <AmiBlitz3.ab3@28551>   !asm
0003CB34 <AmiBlitz3.ab3@28552> RTS
0003CB35 <AmiBlitz3.ab3@28558> set_autorun:               Dc.b $00
0003CB3A <AmiBlitz3.ab3@28559> autorun:                   Dc.b $80,$01,$01,$00,$01
0003CB3B <AmiBlitz3.ab3@28561> set_interruptcheck:        Dc.b $00
0003CB40 <AmiBlitz3.ab3@28562> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003CB41 <AmiBlitz3.ab3@28564> set_assemblercheck:        Ds.b 1
0003CB46 <AmiBlitz3.ab3@28565> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003CB47 <AmiBlitz3.ab3@28567> set_overflowcheck:         Ds.b 1
0003CB4C <AmiBlitz3.ab3@28568> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003CB52 <AmiBlitz3.ab3@28570> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003CB58 <AmiBlitz3.ab3@28571> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003CB5E <AmiBlitz3.ab3@28572> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003CB60 <AmiBlitz3.ab3@28573> Even4
0003CB6C <AmiBlitz3.ab3@28576> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003CB74 <AmiBlitz3.ab3@28577>                            Dc.l $00000000,$00000000
0003CB7C <AmiBlitz3.ab3@28578> tstsize1:                  Dc.l $00000100,$000003E9
0003CB80 <AmiBlitz3.ab3@28579> tstsize2:                  Dc.l $00000100
0003CB84 <AmiBlitz3.ab3@28580> tstend:                    Dc.l $000003EC
0003CB8C <AmiBlitz3.ab3@28581> tstsize3:                  Ds.l 2
0003CB90 <AmiBlitz3.ab3@28582> tstdone:                   Dc.l $000003F2
0003CB94 <AmiBlitz3.ab3@28585> edstruct:                  Dc.l tokens                     ;data for ted
0003CB98 <AmiBlitz3.ab3@28589>                            Dc.l 0
0003CB9C <AmiBlitz3.ab3@28591>                            Dc.l read_xtrafile              ;load .xtra routine
0003CBA0 <AmiBlitz3.ab3@28592>                            Dc.l write_xtrafile             ;save .xtra routine
0003CBA4 <AmiBlitz3.ab3@28593>                            Dc.l call_menuentry             ;Menu Routine
0003CBA8 <AmiBlitz3.ab3@28594>                            Ds.l 1                          ;cleanup (?)
0003CBAC <AmiBlitz3.ab3@28595>                            Dc.b ":",34,".;"
0003CCA8 <AmiBlitz3.ab3@28598> 
0003CD88 <AmiBlitz3.ab3@28599>                            Ds.l 56
0003CD8A <AmiBlitz3.ab3@28604> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003CD8E <AmiBlitz3.ab3@28607> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003CD90 <AmiBlitz3.ab3@28608>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003CD94 <AmiBlitz3.ab3@28609>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003CD9A <AmiBlitz3.ab3@28613> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003CD9C <AmiBlitz3.ab3@28617>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003CDA0 <AmiBlitz3.ab3@28620> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003CDA4 <AmiBlitz3.ab3@28623> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003CDA8 <AmiBlitz3.ab3@28624>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003CDAA <AmiBlitz3.ab3@28630>                            Dc.b $4A,$40                                             ;TST.W   D0
0003CDAC <AmiBlitz3.ab3@28634>                            Dc.b $4A,$80                                             ;TST.L   D0
0003CDAE <AmiBlitz3.ab3@28637> nops8:                     Dc.b $4E,$71                                             ;NOP
0003CDB0 <AmiBlitz3.ab3@28638>                            Dc.b $4E,$71                                             ;NOP
0003CDB2 <AmiBlitz3.ab3@28639>                            Dc.b $4E,$71                                             ;NOP
0003CDB4 <AmiBlitz3.ab3@28640>                            Dc.b $4E,$71                                             ;NOP
0003CDB6 <AmiBlitz3.ab3@28641> nops4:                     Dc.b $4E,$71                                             ;NOP
0003CDB8 <AmiBlitz3.ab3@28643>                            Dc.b $4E,$71                                             ;NOP
0003CDBA <AmiBlitz3.ab3@28644>                            Dc.b $4E,$71                                             ;NOP
0003CDBC <AmiBlitz3.ab3@28645>                            Dc.b $4E,$71                                             ;NOP
0003CDC0 <AmiBlitz3.ab3@28649> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003CDC4 <AmiBlitz3.ab3@28652> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003CDC6 <AmiBlitz3.ab3@28655> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003CDC8 <AmiBlitz3.ab3@28658> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CDCA <AmiBlitz3.ab3@28659>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003CDCE <AmiBlitz3.ab3@28660>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003CDD0 <AmiBlitz3.ab3@28661>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003CDD2 <AmiBlitz3.ab3@28667> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CDD6 <AmiBlitz3.ab3@28668>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003CDD8 <AmiBlitz3.ab3@28673> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CDDC <AmiBlitz3.ab3@28674>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003CDDE <AmiBlitz3.ab3@28678> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003CDE0 <AmiBlitz3.ab3@28679>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003CDE4 <AmiBlitz3.ab3@28685> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003CDE6 <AmiBlitz3.ab3@28686>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003CDEA <AmiBlitz3.ab3@28687>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003CDEE <AmiBlitz3.ab3@28691> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003CDF0 <AmiBlitz3.ab3@28692>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003CDF4 <AmiBlitz3.ab3@28693>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003CDF6 <AmiBlitz3.ab3@28696> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003CDFA <AmiBlitz3.ab3@28699> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003CDFE <AmiBlitz3.ab3@28702> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003CE02 <AmiBlitz3.ab3@28705> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003CE06 <AmiBlitz3.ab3@28709>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CE08 <AmiBlitz3.ab3@28710>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003CE0A <AmiBlitz3.ab3@28711>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003CE0E <AmiBlitz3.ab3@28716>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CE10 <AmiBlitz3.ab3@28717>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003CE12 <AmiBlitz3.ab3@28718>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003CE16 <AmiBlitz3.ab3@28723>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CE18 <AmiBlitz3.ab3@28724>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003CE1A <AmiBlitz3.ab3@28725>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003CE1E <AmiBlitz3.ab3@28730>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CE20 <AmiBlitz3.ab3@28731>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CE22 <AmiBlitz3.ab3@28732>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003CE26 <AmiBlitz3.ab3@28733>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003CE28 <AmiBlitz3.ab3@28734>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003CE2C <AmiBlitz3.ab3@28739>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CE2E <AmiBlitz3.ab3@28740>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003CE32 <AmiBlitz3.ab3@28741>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003CE34 <AmiBlitz3.ab3@28742>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003CE38 <AmiBlitz3.ab3@28743>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003CE3A <AmiBlitz3.ab3@28744>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CE3C <AmiBlitz3.ab3@28747>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003CE40 <AmiBlitz3.ab3@28752>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CE42 <AmiBlitz3.ab3@28753>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003CE46 <AmiBlitz3.ab3@28754>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003CE48 <AmiBlitz3.ab3@28755>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003CE4C <AmiBlitz3.ab3@28756>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003CE4E <AmiBlitz3.ab3@28757>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CE50 <AmiBlitz3.ab3@28760>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003CE54 <AmiBlitz3.ab3@28765>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CE56 <AmiBlitz3.ab3@28766>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CE5A <AmiBlitz3.ab3@28767>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003CE5C <AmiBlitz3.ab3@28768>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003CE60 <AmiBlitz3.ab3@28769>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003CE62 <AmiBlitz3.ab3@28770>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CE64 <AmiBlitz3.ab3@28773>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003CE68 <AmiBlitz3.ab3@28778>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003CE6A <AmiBlitz3.ab3@28779>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CE6E <AmiBlitz3.ab3@28780>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003CE74 <AmiBlitz3.ab3@28781>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003CE78 <AmiBlitz3.ab3@28782>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003CE7A <AmiBlitz3.ab3@28783>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003CE7E <AmiBlitz3.ab3@28790>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003CE80 <AmiBlitz3.ab3@28794> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003CE82 <AmiBlitz3.ab3@28797> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003CE86 <AmiBlitz3.ab3@28800> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003CE88 <AmiBlitz3.ab3@28801> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003CE8C <AmiBlitz3.ab3@28804> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003CE8E <AmiBlitz3.ab3@28807> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CE92 <AmiBlitz3.ab3@28810> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003CE94 <AmiBlitz3.ab3@28814>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003CE96 <AmiBlitz3.ab3@28817> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003CE98 <AmiBlitz3.ab3@28820> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CE9C <AmiBlitz3.ab3@28823> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003CEA0 <AmiBlitz3.ab3@28826> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003CEA4 <AmiBlitz3.ab3@28829> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003CEA6 <AmiBlitz3.ab3@28832> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CEA8 <AmiBlitz3.ab3@28835> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003CEAC <AmiBlitz3.ab3@28838> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003CEB2 <AmiBlitz3.ab3@28839>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003CEB4 <AmiBlitz3.ab3@28840>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CEB8 <AmiBlitz3.ab3@28844> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003CEBA <AmiBlitz3.ab3@28845>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CEBC <AmiBlitz3.ab3@28849> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003CEC0 <AmiBlitz3.ab3@28852> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003CEC2 <AmiBlitz3.ab3@28856>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003CEC4 <AmiBlitz3.ab3@28860>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CEC6 <AmiBlitz3.ab3@28864>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003CECA <AmiBlitz3.ab3@28867> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003CECE <AmiBlitz3.ab3@28870> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003CED0 <AmiBlitz3.ab3@28873> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003CED2 <AmiBlitz3.ab3@28876> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CED4 <AmiBlitz3.ab3@28879> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003CED8 <AmiBlitz3.ab3@28882> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003CEDC <AmiBlitz3.ab3@28885> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003CEDE <AmiBlitz3.ab3@28888> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003CEE0 <AmiBlitz3.ab3@28892>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003CEE4 <AmiBlitz3.ab3@28895>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003CEE6 <AmiBlitz3.ab3@28901>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003CEEA <AmiBlitz3.ab3@28904>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003CEEC <AmiBlitz3.ab3@28910>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003CEF0 <AmiBlitz3.ab3@28914> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003CEF2 <AmiBlitz3.ab3@28917> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003CEF4 <AmiBlitz3.ab3@28921>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003CEF6 <AmiBlitz3.ab3@28925>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003CEFC <AmiBlitz3.ab3@28928> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003CF02 <AmiBlitz3.ab3@28931> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003CF0A <AmiBlitz3.ab3@28935> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003CF0E <AmiBlitz3.ab3@28936>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003CF10 <AmiBlitz3.ab3@28940> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003CF14 <AmiBlitz3.ab3@28943> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003CF18 <AmiBlitz3.ab3@28946> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003CF1C <AmiBlitz3.ab3@28949> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003CF20 <AmiBlitz3.ab3@28950> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003CF24 <AmiBlitz3.ab3@28954>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003CF28 <AmiBlitz3.ab3@28956>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003CF2A <AmiBlitz3.ab3@28959> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003CF2E <AmiBlitz3.ab3@28962> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003CF30 <AmiBlitz3.ab3@28965> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003CF32 <AmiBlitz3.ab3@28966>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003CF34 <AmiBlitz3.ab3@28967>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003CF38 <AmiBlitz3.ab3@28968> 
0003CF3A <AmiBlitz3.ab3@28969>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003CF3C <AmiBlitz3.ab3@28970>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003CF3E <AmiBlitz3.ab3@28971>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003CF44 <AmiBlitz3.ab3@28973>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003CF46 <AmiBlitz3.ab3@28978> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003CF48 <AmiBlitz3.ab3@28979>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003CF4A <AmiBlitz3.ab3@28983> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003CF4E <AmiBlitz3.ab3@28986> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003CF50 <AmiBlitz3.ab3@28989> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003CF52 <AmiBlitz3.ab3@28993>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003CF54 <AmiBlitz3.ab3@28996> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003CF58 <AmiBlitz3.ab3@28999> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003CF5A <AmiBlitz3.ab3@29000>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003CF5E <AmiBlitz3.ab3@29004> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003CF62 <AmiBlitz3.ab3@29005> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003CF66 <AmiBlitz3.ab3@29009> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003CF6A <AmiBlitz3.ab3@29013> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003CF70 <AmiBlitz3.ab3@29017> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003CF76 <AmiBlitz3.ab3@29020> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003CF7A <AmiBlitz3.ab3@29024> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003CF7E <AmiBlitz3.ab3@29028>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003CF82 <AmiBlitz3.ab3@29029>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003CF88 <AmiBlitz3.ab3@29034>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003CF8C <AmiBlitz3.ab3@29039>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003CF8E <AmiBlitz3.ab3@29044>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003CF92 <AmiBlitz3.ab3@29048>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003CF94 <AmiBlitz3.ab3@29052> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003CF96 <AmiBlitz3.ab3@29055> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003CF98 <AmiBlitz3.ab3@29056>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003CF9C <AmiBlitz3.ab3@29060>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003CFA0 <AmiBlitz3.ab3@29064> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003CFA4 <AmiBlitz3.ab3@29067> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003CFA6 <AmiBlitz3.ab3@29070> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003CFAA <AmiBlitz3.ab3@29073> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003CFAC <AmiBlitz3.ab3@29076> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003CFB5 <AmiBlitz3.ab3@29080>                            Dc.b "ram:test",0
0003CFB6 <AmiBlitz3.ab3@29081> Even
0003CFBA <AmiBlitz3.ab3@29085>                            Dc.l  0                          ;was  Ds.w 3 org source
0003CFBC <AmiBlitz3.ab3@29087>                            Dc.w  0
0003CFC0 <AmiBlitz3.ab3@29090> _mathffpbase:              Ds.l 1                           ;maths org source
0003CFC2 <AmiBlitz3.ab3@29091> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003CFC4 <AmiBlitz3.ab3@29092> typelen:                   Ds.w 1
0003CFC8 <AmiBlitz3.ab3@29093> prevtype:                  Ds.l 1
0003CFCC <AmiBlitz3.ab3@29094> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003CFCE <AmiBlitz3.ab3@29095> lastchar:                  Ds.w 1
0003CFD2 <AmiBlitz3.ab3@29096> thistype:                  Ds.l 1
0003CFD6 <AmiBlitz3.ab3@29097> errstack:                  Ds.l 1
0003CFDA <AmiBlitz3.ab3@29098> errcont:                   Ds.l 1
0003CFDC <AmiBlitz3.ab3@29099> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003CFDE <AmiBlitz3.ab3@29100> linesleft:                 Ds.w 1
0003CFE2 <AmiBlitz3.ab3@29101> sourceline:                Ds.l 1                          ;thisitem org source
0003CFE6 <AmiBlitz3.ab3@29102> varbase:                   Ds.l 1                          ;firstvar org source
0003CFEA <AmiBlitz3.ab3@29103> alllocals:                 Ds.l 1
0003CFEE <AmiBlitz3.ab3@29104> firstlocal:                Ds.l 1
0003CFF2 <AmiBlitz3.ab3@29105> firstglob:                 Ds.l 1
0003CFF4 <AmiBlitz3.ab3@29106> globalvarpointer:          Ds.w 1                          ;varoff org source
0003CFF6 <AmiBlitz3.ab3@29107> locvaroff:                 Ds.w 1
0003CFFA <AmiBlitz3.ab3@29108> firstitem_:                 Ds.l 1
0003CFFC <AmiBlitz3.ab3@29109> numlines_org:              Ds.w 1                          ;numlines org source
0003CFFE <AmiBlitz3.ab3@29110> returncode_org:            Ds.w 1                          ;returncode org source
0003D002 <AmiBlitz3.ab3@29111> firstiff:                  Ds.l 1                          ;firstif org source
0003D006 <AmiBlitz3.ab3@29112> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003D206 <AmiBlitz3.ab3@29113> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003D216 <AmiBlitz3.ab3@29114> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003D416 <AmiBlitz3.ab3@29115> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003D616 <AmiBlitz3.ab3@29116> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003D816 <AmiBlitz3.ab3@29117> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003D81A <AmiBlitz3.ab3@29119> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003DA1A <AmiBlitz3.ab3@29120> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003DC1A <AmiBlitz3.ab3@29122> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003DC1E <AmiBlitz3.ab3@29123> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003DE1E <AmiBlitz3.ab3@29124> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003DE22 <AmiBlitz3.ab3@29125> size_deflibs:              Ds.l 1                          ;deflibs org source
0003E022 <AmiBlitz3.ab3@29126> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003E222 <AmiBlitz3.ab3@29128> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003E226 <AmiBlitz3.ab3@29129> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003E426 <AmiBlitz3.ab3@29131> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E42A <AmiBlitz3.ab3@29137>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003E42E <AmiBlitz3.ab3@29138>   Dc.b $00,$00,$00,$00
0003E432 <AmiBlitz3.ab3@29139>   Dc.b $00,$19,$00,$11
0003E436 <AmiBlitz3.ab3@29140>   Dc.b $00,$2E,$00,$18
0003E43A <AmiBlitz3.ab3@29141>   Dc.b $00,$04,$00,$03
0003E43E <AmiBlitz3.ab3@29142>   Dc.b $00,$01,$00,$22
0003E442 <AmiBlitz3.ab3@29143>   Dc.b $73,$68,$00,$00
0003E446 <AmiBlitz3.ab3@29144>   Dc.b $00,$00,$00,$00
0003E44A <AmiBlitz3.ab3@29145>   Dc.b $00,$00,$00,$00
0003E44E <AmiBlitz3.ab3@29146>   Dc.b $00,$00,$00,$00
0003E452 <AmiBlitz3.ab3@29147>   Dc.b $00,$00,$00,$00
0003E456 <AmiBlitz3.ab3@29148>   Dc.b $00,$00,$00,$00
0003E45A <AmiBlitz3.ab3@29149>   Dc.b $03,$22,$00,$21
0003E45E <AmiBlitz3.ab3@29150>   Dc.b $3C,$28,$00,$22
0003E462 <AmiBlitz3.ab3@29151>   Dc.b $6E,$C0,$00,$00
0003E466 <AmiBlitz3.ab3@29152>   Dc.b $00,$12,$00,$00
0003E46A <AmiBlitz3.ab3@29153>   Dc.b $00,$0E,$00,$00
0003E46E <AmiBlitz3.ab3@29154>   Dc.b $00,$00,$00,$00
0003E472 <AmiBlitz3.ab3@29155>   Dc.b $00,$00,$00,$00
0003E476 <AmiBlitz3.ab3@29156>   Dc.b $00,$00,$00,$00
0003E47A <AmiBlitz3.ab3@29157>   Dc.b $00,$00,$00,$2E
0003E47E <AmiBlitz3.ab3@29158>   Dc.b $00,$17,$00,$02
0003E482 <AmiBlitz3.ab3@29159>   Dc.b $00,$01,$8E,$80
0003E486 <AmiBlitz3.ab3@29160>   Dc.b $03,$00,$00,$00
0003E48A <AmiBlitz3.ab3@29161>   Dc.b $00,$00,$FF,$FF
0003E48E <AmiBlitz3.ab3@29162>   Dc.b $FF,$FF,$FF,$FC
0003E492 <AmiBlitz3.ab3@29163>   Dc.b $80,$00,$00,$00
0003E496 <AmiBlitz3.ab3@29164>   Dc.b $00,$00,$80,$00
0003E49A <AmiBlitz3.ab3@29165>   Dc.b $00,$3F,$BB,$40
0003E49E <AmiBlitz3.ab3@29166>   Dc.b $80,$1F,$C0,$00
0003E4A2 <AmiBlitz3.ab3@29167>   Dc.b $00,$00,$80,$3F
0003E4A6 <AmiBlitz3.ab3@29168>   Dc.b $C0,$0F,$BB,$40
0003E4AA <AmiBlitz3.ab3@29169>   Dc.b $80,$1F,$C0,$00
0003E4AE <AmiBlitz3.ab3@29170>   Dc.b $00,$00,$8E,$00
0003E4B2 <AmiBlitz3.ab3@29171>   Dc.b $F8,$00,$00,$00
0003E4B6 <AmiBlitz3.ab3@29172>   Dc.b $8F,$01,$FF,$00
0003E4BA <AmiBlitz3.ab3@29173>   Dc.b $3B,$40,$81,$E3
0003E4BE <AmiBlitz3.ab3@29174>   Dc.b $F7,$C0,$00,$00
0003E4C2 <AmiBlitz3.ab3@29175>   Dc.b $80,$7F,$F8,$70
0003E4C6 <AmiBlitz3.ab3@29176>   Dc.b $3B,$40,$80,$0F
0003E4CA <AmiBlitz3.ab3@29177>   Dc.b $7C,$E0,$00,$00
0003E4CE <AmiBlitz3.ab3@29178>   Dc.b $80,$00,$FD,$80
0003E4D2 <AmiBlitz3.ab3@29179>   Dc.b $00,$00,$80,$01
0003E4D6 <AmiBlitz3.ab3@29180>   Dc.b $F6,$00,$FB,$40
0003E4DA <AmiBlitz3.ab3@29181>   Dc.b $80,$03,$EF,$00
0003E4DE <AmiBlitz3.ab3@29182>   Dc.b $00,$00,$80,$07
0003E4E2 <AmiBlitz3.ab3@29183>   Dc.b $87,$80,$3B,$40
0003E4E6 <AmiBlitz3.ab3@29184>   Dc.b $80,$0F,$01,$C0
0003E4EA <AmiBlitz3.ab3@29185>   Dc.b $00,$00,$80,$03
0003E4EE <AmiBlitz3.ab3@29186>   Dc.b $F0,$70,$1D,$40
0003E4F2 <AmiBlitz3.ab3@29187>   Dc.b $80,$00,$18,$1C
0003E4F6 <AmiBlitz3.ab3@29188>   Dc.b $00,$00,$80,$00
0003E4FA <AmiBlitz3.ab3@29189>   Dc.b $10,$06,$03,$40
0003E4FE <AmiBlitz3.ab3@29190>   Dc.b $80,$00,$20,$1F
0003E502 <AmiBlitz3.ab3@29191>   Dc.b $00,$00,$80,$00
0003E506 <AmiBlitz3.ab3@29192>   Dc.b $00,$00,$01,$40
0003E50A <AmiBlitz3.ab3@29193>   Dc.b $80,$00,$00,$00
0003E50E <AmiBlitz3.ab3@29194>   Dc.b $00,$00,$80,$00
0003E512 <AmiBlitz3.ab3@29195>   Dc.b $00,$00,$00,$00
0003E516 <AmiBlitz3.ab3@29196>   Dc.b $00,$00,$00,$00
0003E51A <AmiBlitz3.ab3@29197>   Dc.b $00,$00,$00,$00
0003E51E <AmiBlitz3.ab3@29198>   Dc.b $00,$00,$00,$04
0003E522 <AmiBlitz3.ab3@29199>   Dc.b $00,$3F,$FC,$01
0003E526 <AmiBlitz3.ab3@29200>   Dc.b $BB,$44,$00,$60
0003E52A <AmiBlitz3.ab3@29201>   Dc.b $FE,$00,$00,$04
0003E52E <AmiBlitz3.ab3@29202>   Dc.b $00,$CF,$FF,$01
0003E532 <AmiBlitz3.ab3@29203>   Dc.b $BB,$44,$1F,$EF
0003E536 <AmiBlitz3.ab3@29204>   Dc.b $FF,$00,$00,$04
0003E53A <AmiBlitz3.ab3@29205>   Dc.b $33,$FF,$FF,$E0
0003E53E <AmiBlitz3.ab3@29206>   Dc.b $00,$04,$37,$FE
0003E542 <AmiBlitz3.ab3@29207>   Dc.b $7F,$FC,$1B,$44
0003E546 <AmiBlitz3.ab3@29208>   Dc.b $0F,$9C,$FF,$FF
0003E54A <AmiBlitz3.ab3@29209>   Dc.b $00,$04,$03,$E3
0003E54E <AmiBlitz3.ab3@29210>   Dc.b $FF,$FF,$DB,$44
0003E552 <AmiBlitz3.ab3@29211>   Dc.b $00,$7F,$BF,$FF
0003E556 <AmiBlitz3.ab3@29212>   Dc.b $80,$04,$00,$0F
0003E55A <AmiBlitz3.ab3@29213>   Dc.b $3F,$FE,$00,$04
0003E55E <AmiBlitz3.ab3@29214>   Dc.b $00,$06,$7F,$F8
0003E562 <AmiBlitz3.ab3@29215>   Dc.b $1B,$44,$00,$0C
0003E566 <AmiBlitz3.ab3@29216>   Dc.b $F7,$FC,$00,$04
0003E56A <AmiBlitz3.ab3@29217>   Dc.b $00,$19,$F9,$FE
0003E56E <AmiBlitz3.ab3@29218>   Dc.b $1B,$44,$00,$33
0003E572 <AmiBlitz3.ab3@29219>   Dc.b $FE,$7F,$00,$04
0003E576 <AmiBlitz3.ab3@29220>   Dc.b $00,$0F,$FF,$BF
0003E57A <AmiBlitz3.ab3@29221>   Dc.b $CD,$44,$00,$03
0003E57E <AmiBlitz3.ab3@29222>   Dc.b $EF,$EF,$F0,$04
0003E582 <AmiBlitz3.ab3@29223>   Dc.b $00,$00,$7F,$DF
0003E586 <AmiBlitz3.ab3@29224>   Dc.b $FB,$44,$00,$00
0003E58A <AmiBlitz3.ab3@29225>   Dc.b $FF,$A7,$FC,$04
0003E58E <AmiBlitz3.ab3@29226>   Dc.b $00,$00,$7E,$3F
0003E592 <AmiBlitz3.ab3@29227>   Dc.b $FD,$44,$00,$00
0003E596 <AmiBlitz3.ab3@29228>   Dc.b $00,$00,$00,$04
0003E59A <AmiBlitz3.ab3@29229>   Dc.b $7F,$FF,$FF,$FF
0003E59E <AmiBlitz3.ab3@29230>   Dc.b $FF,$FC,$00,$00
0003E5A2 <AmiBlitz3.ab3@29231>   Dc.b $00,$01,$00,$00
0003E5A5 <AmiBlitz3.ab3@29232>   Dc.b $00,$00,$04
0003E5AB <AmiBlitz3.ab3@29235> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003E603 <AmiBlitz3.ab3@29236> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003E604 <AmiBlitz3.ab3@29237> Even
0003E608 <AmiBlitz3.ab3@29239> sysdebug:            Dc.l $3F0
0003E60C <AmiBlitz3.ab3@29243> exelock              Ds.l 1
0003E610 <AmiBlitz3.ab3@29247> includesourceline    Dc.l 0
0003E614 <AmiBlitz3.ab3@29248> linenum              Ds.l 1
0003E618 <AmiBlitz3.ab3@29249> globallinecount      Ds.l 1
0003E636 <AmiBlitz3.ab3@29250> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003E63A <AmiBlitz3.ab3@29251> calc_option          Dc.l 1
0003E63E <AmiBlitz3.ab3@29252> versioninformation   Dc.l $00
0003E642 <AmiBlitz3.ab3@29253> number_of_builds     Dc.l $00
0003E644 <AmiBlitz3.ab3@29256> BSS
0003E646 <AmiBlitz3.ab3@29257> debugnest            Ds.w 1
0003E64A <AmiBlitz3.ab3@29258> instringf            Ds.l 1
0003E64E <AmiBlitz3.ab3@29259> funcscanon           Ds.l 1
0003E662 <AmiBlitz3.ab3@29260> storedebugmode       Ds.b 20
0003E666 <AmiBlitz3.ab3@29261> firsttimepref        Ds.l 1
0003E667 <AmiBlitz3.ab3@29262> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003E668 <AmiBlitz3.ab3@29263> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003E66A <AmiBlitz3.ab3@29264> nostringopt          Ds.w 1
0003E6EA <AmiBlitz3.ab3@29265> path2:               Ds.l 32
0003E6EE <AmiBlitz3.ab3@29266> typebase             Dc.l 0
0003E6F0 <AmiBlitz3.ab3@29267> doublepeek           Dc.w 0
0003E6F4 <AmiBlitz3.ab3@29268> lastoffset           Dc.l 0
0003E6F6 <AmiBlitz3.ab3@29269> firsttime            Dc.w 0
0003E6FA <AmiBlitz3.ab3@29270> lastdestpointer      Dc.l 0
0003E6FE <AmiBlitz3.ab3@29271> prevwritedat         Dc.l 0
0003E702 <AmiBlitz3.ab3@29272> lastsourceline       Dc.l 0
0003E706 <AmiBlitz3.ab3@29273> lastwritedat         Dc.l 0
0003E708 <AmiBlitz3.ab3@29274> makeexec             Dc.w 0
0003E70A <AmiBlitz3.ab3@29275> makeexec_remember    Dc.w 0
0003E70E <AmiBlitz3.ab3@29276> sharebase            Ds.l 1
0003E712 <AmiBlitz3.ab3@29277> tempa7               Ds.l 1
0003E714 <AmiBlitz3.ab3@29278> incnif               Ds.w 1
0003E718 <AmiBlitz3.ab3@29279> tempstore            Ds.l 1
0003E71C <AmiBlitz3.ab3@29280> result               Ds.l 1
0003E71E <AmiBlitz3.ab3@29281> automode             Ds.w 1
0003E720 <AmiBlitz3.ab3@29282> stackcorrect         Ds.w 1
0003E722 <AmiBlitz3.ab3@29283> formode              Ds.w 1
0003E726 <AmiBlitz3.ab3@29284> limitregs            Ds.l 1
0003E728 <AmiBlitz3.ab3@29285> onestep              Ds.w 1
0003E72C <AmiBlitz3.ab3@29286> reqmode              Ds.l 1
0003E7CC <AmiBlitz3.ab3@29287> inctab               Ds.l 40
0003E7CE <AmiBlitz3.ab3@29288> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003E7D2 <AmiBlitz3.ab3@29289> includeline          Ds.l 1
0003E7D6 <AmiBlitz3.ab3@29290> morememadd           Ds.l 1
0003E7D8 <AmiBlitz3.ab3@29291> objectcount          Ds.w 1
0003E7DC <AmiBlitz3.ab3@29292> savefuncspace        Ds.l 1
0003E7E0 <AmiBlitz3.ab3@29293> lasttrap1            Ds.l 1
0003E7E4 <AmiBlitz3.ab3@29294> currentfunccall      Ds.l 1
0003E7E5 <AmiBlitz3.ab3@29295> skipfunc             Ds.b 1
0003E7E6 <AmiBlitz3.ab3@29296> resdisable           Ds.b 1
0003E7E7 <AmiBlitz3.ab3@29297> skiptoggle           Ds.b 1
0003E7E8 <AmiBlitz3.ab3@29298> developobject        Ds.b 1
0003E7EA <AmiBlitz3.ab3@29299> iniffcommand         Ds.w 1
0003E7EC <AmiBlitz3.ab3@29300> startoffsetmore      Ds.w 1
0003E7EE <AmiBlitz3.ab3@29301> olddebugmode         Ds.w 1
0003E7F2 <AmiBlitz3.ab3@29302> fpucodeglobal        Ds.l 1
0003E7F6 <AmiBlitz3.ab3@29303> fpucodelocal         Ds.l 1
0003E7FA <AmiBlitz3.ab3@29304> maxregs              Ds.l 1
0003E7FE <AmiBlitz3.ab3@29305> fpucode              Ds.l 1
0003E800 <AmiBlitz3.ab3@29306> firstmline           Ds.w 1
0003E840 <AmiBlitz3.ab3@29307> regtable             Ds.l 16
0003E842 <AmiBlitz3.ab3@29308> exdebug              Ds.w 1
0003E844 <AmiBlitz3.ab3@29309> a2offset2            Ds.w 1
0003E848 <AmiBlitz3.ab3@29310> parnumtemp           Ds.l 1
0003E849 <AmiBlitz3.ab3@29311> doimmediate          Ds.b 1
0003E84A <AmiBlitz3.ab3@29312> notypecheck          Ds.b 1
0003E84C <AmiBlitz3.ab3@29313> vartype              Ds.w 1
0003E84D <AmiBlitz3.ab3@29314> peekaddrsize         Ds.b 1
0003E84E <AmiBlitz3.ab3@29315> declare2             Ds.b 1
0003E850 <AmiBlitz3.ab3@29316> parameternum         Ds.w 1
0003E854 <AmiBlitz3.ab3@29317> lasttoken            Ds.l 1
0003E856 <AmiBlitz3.ab3@29318> newvariable          Ds.w 1
0003E857 <AmiBlitz3.ab3@29319> declare              Ds.b 1
0003E858 <AmiBlitz3.ab3@29320> typecheck            Ds.b 1
0003E859 <AmiBlitz3.ab3@29321> nowdeclare           Ds.b 1
0003E85A <AmiBlitz3.ab3@29322> dimkeep              Ds.b 1
0003E85B <AmiBlitz3.ab3@29323> a4a5store            Ds.b 1
0003E85C <AmiBlitz3.ab3@29324> ___freetouse         Ds.b 1
0003E860 <AmiBlitz3.ab3@29325> firstiffstore        Ds.l 1
0003E864 <AmiBlitz3.ab3@29326> destpointer2         Ds.l 1
0003E868 <AmiBlitz3.ab3@29327> stackaddr            Ds.l 1
0003E96C <AmiBlitz3.ab3@29328> allowtab             Ds.b 260
0003EA6C <AmiBlitz3.ab3@29329> templine             Ds.b 256
0003EA6E <AmiBlitz3.ab3@29330> thenmode             Ds.w 1
0003EA70 <AmiBlitz3.ab3@29331> temp                 Ds.w 1
0003EA72 <AmiBlitz3.ab3@29332> tempregnum           Ds.w 1
0003EA76 <AmiBlitz3.ab3@29334> numlines2            Ds.l 1
0003EA7A <AmiBlitz3.ab3@29335> numlines             Ds.l 1
0003EA7C <AmiBlitz3.ab3@29336> exmac                Ds.w 1
0003EA7E <AmiBlitz3.ab3@29337> returncode           Ds.w 1
0003EA82 <AmiBlitz3.ab3@29338> fp0iff               Ds.l 1
0003EA86 <AmiBlitz3.ab3@29339> fp0addr              Ds.l 1
0003EA88 <AmiBlitz3.ab3@29340> fp0mode              Ds.w 1
0003EA8A <AmiBlitz3.ab3@29341> fp0var               Ds.w 1
0003EA8C <AmiBlitz3.ab3@29342> fastfunc             Ds.w 1
0003EA8E <AmiBlitz3.ab3@29343> retmode              Ds.w 1
0003EA90 <AmiBlitz3.ab3@29344> parnum               Ds.w 1
0003EA92 <AmiBlitz3.ab3@29345> regmask              Ds.w 1
0003EA94 <AmiBlitz3.ab3@29346> regnumfunc           Ds.w 1
0003EA96 <AmiBlitz3.ab3@29347> libmode              Ds.w 1
0003EA9A <AmiBlitz3.ab3@29348> oldline              Ds.l 1
0003EA9E <AmiBlitz3.ab3@29349> sourceline3          Ds.l 1
0003EB66 <AmiBlitz3.ab3@29350> debugstore           Ds.b 200
0003EB6A <AmiBlitz3.ab3@29351> deststore            Ds.l 1
0003EB6E <AmiBlitz3.ab3@29353> loada                Ds.l 1
0003EB72 <AmiBlitz3.ab3@29355> currtype             Ds.l 1
0003EB76 <AmiBlitz3.ab3@29356> arrayoffset          Ds.l 1
0003EB7A <AmiBlitz3.ab3@29357> lastlabel            Ds.l 1
0003EB7E <AmiBlitz3.ab3@29358> curtemplabel         Ds.l 1
0003EB82 <AmiBlitz3.ab3@29359> sourceline2          Ds.l 1
0003EC82 <AmiBlitz3.ab3@29360> chartab              Ds.b 256
0003ECFA <AmiBlitz3.ab3@29361> tempspace            Ds.b 120
000BED0A <AmiBlitz3.ab3@29362> instrtab             Ds.l 65538*2
000C6D0A <AmiBlitz3.ab3@29364> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E6D0E <AmiBlitz3.ab3@29365> replacedat           Ds.w 65538
000EED0E <AmiBlitz3.ab3@29366> variablehash         Ds.l 8192
000EED12 <AmiBlitz3.ab3@29367> newinitaddr          Ds.l 1
000EED16 <AmiBlitz3.ab3@29368> realbssend           Ds.l 1
000EED18 <AmiBlitz3.ab3@29369> saved0               Ds.w 1
000EED98 <AmiBlitz3.ab3@29370> lastpath             Ds.b 128
000EEE18 <AmiBlitz3.ab3@29371> lastpath2            Ds.b 128
000EEEE0 <AmiBlitz3.ab3@29372> fpustackbase         Ds.w 100
000EEEE4 <AmiBlitz3.ab3@29373> 
000EEEE6 <AmiBlitz3.ab3@29374> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EEEEA <AmiBlitz3.ab3@29375> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EEEEE <AmiBlitz3.ab3@29376> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EEEF2 <AmiBlitz3.ab3@29377> rightsidetype        Dc.l 0  ; same as above but right side
000EEEF6 <AmiBlitz3.ab3@29380> trap15temp           Ds.l 1
000EEEFA <AmiBlitz3.ab3@29381> trap15temp2          Ds.l 1
000EEEFE <AmiBlitz3.ab3@29382> templibend           Ds.l 1
000EEF02 <AmiBlitz3.ab3@29383> tempdata1start       Ds.l 1
000EEF06 <AmiBlitz3.ab3@29384> stacktrack           Ds.l 1
000EEF0A <AmiBlitz3.ab3@29385> pad                  Ds.l 1
000EF00A <AmiBlitz3.ab3@29386> includetemp          Ds.b 256
000EFA0A <AmiBlitz3.ab3@29387> includetemp2         Ds.b 256*10
000EFA0C <AmiBlitz3.ab3@29388> funccall             Ds.w 1
000EFA10 <AmiBlitz3.ab3@29391> ptr_resfile          Ds.l 1
000EFA12 <AmiBlitz3.ab3@29392> CalculatorButtonBinFlag:    Ds.w 1
000EFA14 <AmiBlitz3.ab3@29393> CalculatorButtonDecFlag:    Ds.w 1
000EFA18 <AmiBlitz3.ab3@29394> ped_startup_addr:    Ds.l 1
000EFA19 <AmiBlitz3.ab3@29395> start_without_libs:  Ds.b 1
000EFA1A <AmiBlitz3.ab3@29396> skip_bytes:          Ds.b 1
000EFA1E <AmiBlitz3.ab3@29397> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EFA22 <AmiBlitz3.ab3@29398> beforeparameterfetch Ds.l 1
000EFA26 <AmiBlitz3.ab3@29399> typetocast           Ds.l 1
000EFA2A <AmiBlitz3.ab3@29400> errorcounter         Ds.l 1
000EFA2B <AmiBlitz3.ab3@29401> iserror              Ds.b 1
000EFA2C <AmiBlitz3.ab3@29402> Even
000EFA30 <AmiBlitz3.ab3@29404> CLIMode:             Dc.l 0
000EFA34 <AmiBlitz3.ab3@29405> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
